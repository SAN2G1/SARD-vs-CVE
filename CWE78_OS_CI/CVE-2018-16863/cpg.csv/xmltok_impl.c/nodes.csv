command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10794765	File	data/converged/CVE-2018-16863_ghostpdl/xmltok_impl.c								
ANR	10794766	Function	scanComment	137:0:4222:5181							
ANR	10794767	FunctionDef	"scanComment (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10794766	0					
ANR	10794768	CompoundStatement		140:0:4361:5181	10794766	0					
ANR	10794769	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) )"		10794766	0					
ANR	10794770	Condition	"HAS_CHAR ( enc , ptr , end )"	141:6:4369:4391	10794766	0	True				
ANR	10794771	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10794766	0					
ANR	10794772	Callee	HAS_CHAR		10794766	0					
ANR	10794773	Identifier	HAS_CHAR		10794766	0					
ANR	10794774	ArgumentList	enc		10794766	1					
ANR	10794775	Argument	enc		10794766	0					
ANR	10794776	Identifier	enc		10794766	0					
ANR	10794777	Argument	ptr		10794766	1					
ANR	10794778	Identifier	ptr		10794766	0					
ANR	10794779	Argument	end		10794766	2					
ANR	10794780	Identifier	end		10794766	0					
ANR	10794781	CompoundStatement		2:31:32:32	10794766	1					
ANR	10794782	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_MINUS ) )"		10794766	0					
ANR	10794783	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"	142:8:4404:4439	10794766	0	True				
ANR	10794784	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"		10794766	0					
ANR	10794785	UnaryOperator	!		10794766	0					
ANR	10794786	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"		10794766	1					
ANR	10794787	Callee	CHAR_MATCHES		10794766	0					
ANR	10794788	Identifier	CHAR_MATCHES		10794766	0					
ANR	10794789	ArgumentList	enc		10794766	1					
ANR	10794790	Argument	enc		10794766	0					
ANR	10794791	Identifier	enc		10794766	0					
ANR	10794792	Argument	ptr		10794766	1					
ANR	10794793	Identifier	ptr		10794766	0					
ANR	10794794	Argument	ASCII_MINUS		10794766	2					
ANR	10794795	Identifier	ASCII_MINUS		10794766	0					
ANR	10794796	CompoundStatement		3:46:80:80	10794766	1					
ANR	10794797	ExpressionStatement	* nextTokPtr = ptr	143:6:4450:4467	10794766	0	True				
ANR	10794798	AssignmentExpression	* nextTokPtr = ptr		10794766	0		=			
ANR	10794799	UnaryOperationExpression	* nextTokPtr		10794766	0					
ANR	10794800	UnaryOperator	*		10794766	0					
ANR	10794801	Identifier	nextTokPtr		10794766	1					
ANR	10794802	Identifier	ptr		10794766	1					
ANR	10794803	ReturnStatement	return XML_TOK_INVALID ;	144:6:4475:4497	10794766	1	True				
ANR	10794804	Identifier	XML_TOK_INVALID		10794766	0					
ANR	10794805	ExpressionStatement	ptr += MINBPC ( enc )	146:4:4509:4527	10794766	1	True				
ANR	10794806	AssignmentExpression	ptr += MINBPC ( enc )		10794766	0		+=			
ANR	10794807	Identifier	ptr		10794766	0					
ANR	10794808	CallExpression	MINBPC ( enc )		10794766	1					
ANR	10794809	Callee	MINBPC		10794766	0					
ANR	10794810	Identifier	MINBPC		10794766	0					
ANR	10794811	ArgumentList	enc		10794766	1					
ANR	10794812	Argument	enc		10794766	0					
ANR	10794813	Identifier	enc		10794766	0					
ANR	10794814	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10794766	2					
ANR	10794815	Condition	"HAS_CHAR ( enc , ptr , end )"	147:11:4540:4562	10794766	0	True				
ANR	10794816	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10794766	0					
ANR	10794817	Callee	HAS_CHAR		10794766	0					
ANR	10794818	Identifier	HAS_CHAR		10794766	0					
ANR	10794819	ArgumentList	enc		10794766	1					
ANR	10794820	Argument	enc		10794766	0					
ANR	10794821	Identifier	enc		10794766	0					
ANR	10794822	Argument	ptr		10794766	1					
ANR	10794823	Identifier	ptr		10794766	0					
ANR	10794824	Argument	end		10794766	2					
ANR	10794825	Identifier	end		10794766	0					
ANR	10794826	CompoundStatement		8:36:203:203	10794766	1					
ANR	10794827	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10794766	0					
ANR	10794828	Condition	"BYTE_TYPE ( enc , ptr )"	148:14:4581:4599	10794766	0	True				
ANR	10794829	CallExpression	"BYTE_TYPE ( enc , ptr )"		10794766	0					
ANR	10794830	Callee	BYTE_TYPE		10794766	0					
ANR	10794831	Identifier	BYTE_TYPE		10794766	0					
ANR	10794832	ArgumentList	enc		10794766	1					
ANR	10794833	Argument	enc		10794766	0					
ANR	10794834	Identifier	enc		10794766	0					
ANR	10794835	Argument	ptr		10794766	1					
ANR	10794836	Identifier	ptr		10794766	0					
ANR	10794837	CompoundStatement		9:35:240:240	10794766	1					
ANR	10794838	Statement	INVALID_CASES	149:6:4610:4622	10794766	0	True				
ANR	10794839	Statement	(	149:19:4623:4623	10794766	1	True				
ANR	10794840	Statement	ptr	149:20:4624:4626	10794766	2	True				
ANR	10794841	Statement	","	149:23:4627:4627	10794766	3	True				
ANR	10794842	Statement	nextTokPtr	149:25:4629:4638	10794766	4	True				
ANR	10794843	Statement	)	149:35:4639:4639	10794766	5	True				
ANR	10794844	Label	case BT_MINUS :	150:6:4647:4660	10794766	6	True				
ANR	10794845	Identifier	BT_MINUS		10794766	0					
ANR	10794846	ExpressionStatement	ptr += MINBPC ( enc )	151:8:4670:4688	10794766	7	True				
ANR	10794847	AssignmentExpression	ptr += MINBPC ( enc )		10794766	0		+=			
ANR	10794848	Identifier	ptr		10794766	0					
ANR	10794849	CallExpression	MINBPC ( enc )		10794766	1					
ANR	10794850	Callee	MINBPC		10794766	0					
ANR	10794851	Identifier	MINBPC		10794766	0					
ANR	10794852	ArgumentList	enc		10794766	1					
ANR	10794853	Argument	enc		10794766	0					
ANR	10794854	Identifier	enc		10794766	0					
ANR	10794855	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	152:8:4698:4725	10794766	8	True				
ANR	10794856	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10794766	0					
ANR	10794857	Callee	REQUIRE_CHAR		10794766	0					
ANR	10794858	Identifier	REQUIRE_CHAR		10794766	0					
ANR	10794859	ArgumentList	enc		10794766	1					
ANR	10794860	Argument	enc		10794766	0					
ANR	10794861	Identifier	enc		10794766	0					
ANR	10794862	Argument	ptr		10794766	1					
ANR	10794863	Identifier	ptr		10794766	0					
ANR	10794864	Argument	end		10794766	2					
ANR	10794865	Identifier	end		10794766	0					
ANR	10794866	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_MINUS ) )"		10794766	9					
ANR	10794867	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"	153:12:4739:4773	10794766	0	True				
ANR	10794868	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"		10794766	0					
ANR	10794869	Callee	CHAR_MATCHES		10794766	0					
ANR	10794870	Identifier	CHAR_MATCHES		10794766	0					
ANR	10794871	ArgumentList	enc		10794766	1					
ANR	10794872	Argument	enc		10794766	0					
ANR	10794873	Identifier	enc		10794766	0					
ANR	10794874	Argument	ptr		10794766	1					
ANR	10794875	Identifier	ptr		10794766	0					
ANR	10794876	Argument	ASCII_MINUS		10794766	2					
ANR	10794877	Identifier	ASCII_MINUS		10794766	0					
ANR	10794878	CompoundStatement		14:49:414:414	10794766	1					
ANR	10794879	ExpressionStatement	ptr += MINBPC ( enc )	154:10:4788:4806	10794766	0	True				
ANR	10794880	AssignmentExpression	ptr += MINBPC ( enc )		10794766	0		+=			
ANR	10794881	Identifier	ptr		10794766	0					
ANR	10794882	CallExpression	MINBPC ( enc )		10794766	1					
ANR	10794883	Callee	MINBPC		10794766	0					
ANR	10794884	Identifier	MINBPC		10794766	0					
ANR	10794885	ArgumentList	enc		10794766	1					
ANR	10794886	Argument	enc		10794766	0					
ANR	10794887	Identifier	enc		10794766	0					
ANR	10794888	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	155:10:4818:4845	10794766	1	True				
ANR	10794889	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10794766	0					
ANR	10794890	Callee	REQUIRE_CHAR		10794766	0					
ANR	10794891	Identifier	REQUIRE_CHAR		10794766	0					
ANR	10794892	ArgumentList	enc		10794766	1					
ANR	10794893	Argument	enc		10794766	0					
ANR	10794894	Identifier	enc		10794766	0					
ANR	10794895	Argument	ptr		10794766	1					
ANR	10794896	Identifier	ptr		10794766	0					
ANR	10794897	Argument	end		10794766	2					
ANR	10794898	Identifier	end		10794766	0					
ANR	10794899	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10794766	2					
ANR	10794900	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	156:14:4861:4893	10794766	0	True				
ANR	10794901	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10794766	0					
ANR	10794902	UnaryOperator	!		10794766	0					
ANR	10794903	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10794766	1					
ANR	10794904	Callee	CHAR_MATCHES		10794766	0					
ANR	10794905	Identifier	CHAR_MATCHES		10794766	0					
ANR	10794906	ArgumentList	enc		10794766	1					
ANR	10794907	Argument	enc		10794766	0					
ANR	10794908	Identifier	enc		10794766	0					
ANR	10794909	Argument	ptr		10794766	1					
ANR	10794910	Identifier	ptr		10794766	0					
ANR	10794911	Argument	ASCII_GT		10794766	2					
ANR	10794912	Identifier	ASCII_GT		10794766	0					
ANR	10794913	CompoundStatement		17:49:534:534	10794766	1					
ANR	10794914	ExpressionStatement	* nextTokPtr = ptr	157:12:4910:4927	10794766	0	True				
ANR	10794915	AssignmentExpression	* nextTokPtr = ptr		10794766	0		=			
ANR	10794916	UnaryOperationExpression	* nextTokPtr		10794766	0					
ANR	10794917	UnaryOperator	*		10794766	0					
ANR	10794918	Identifier	nextTokPtr		10794766	1					
ANR	10794919	Identifier	ptr		10794766	1					
ANR	10794920	ReturnStatement	return XML_TOK_INVALID ;	158:12:4941:4963	10794766	1	True				
ANR	10794921	Identifier	XML_TOK_INVALID		10794766	0					
ANR	10794922	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	160:10:4987:5018	10794766	3	True				
ANR	10794923	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10794766	0		=			
ANR	10794924	UnaryOperationExpression	* nextTokPtr		10794766	0					
ANR	10794925	UnaryOperator	*		10794766	0					
ANR	10794926	Identifier	nextTokPtr		10794766	1					
ANR	10794927	AdditiveExpression	ptr + MINBPC ( enc )		10794766	1		+			
ANR	10794928	Identifier	ptr		10794766	0					
ANR	10794929	CallExpression	MINBPC ( enc )		10794766	1					
ANR	10794930	Callee	MINBPC		10794766	0					
ANR	10794931	Identifier	MINBPC		10794766	0					
ANR	10794932	ArgumentList	enc		10794766	1					
ANR	10794933	Argument	enc		10794766	0					
ANR	10794934	Identifier	enc		10794766	0					
ANR	10794935	ReturnStatement	return XML_TOK_COMMENT ;	161:10:5030:5052	10794766	4	True				
ANR	10794936	Identifier	XML_TOK_COMMENT		10794766	0					
ANR	10794937	BreakStatement	break ;	163:8:5072:5077	10794766	10	True				
ANR	10794938	Label	default :	164:6:5085:5092	10794766	11	True				
ANR	10794939	Identifier	default		10794766	0					
ANR	10794940	ExpressionStatement	ptr += MINBPC ( enc )	165:8:5102:5120	10794766	12	True				
ANR	10794941	AssignmentExpression	ptr += MINBPC ( enc )		10794766	0		+=			
ANR	10794942	Identifier	ptr		10794766	0					
ANR	10794943	CallExpression	MINBPC ( enc )		10794766	1					
ANR	10794944	Callee	MINBPC		10794766	0					
ANR	10794945	Identifier	MINBPC		10794766	0					
ANR	10794946	ArgumentList	enc		10794766	1					
ANR	10794947	Argument	enc		10794766	0					
ANR	10794948	Identifier	enc		10794766	0					
ANR	10794949	BreakStatement	break ;	166:8:5130:5135	10794766	13	True				
ANR	10794950	ReturnStatement	return XML_TOK_PARTIAL ;	170:2:5157:5179	10794766	1	True				
ANR	10794951	Identifier	XML_TOK_PARTIAL		10794766	0					
ANR	10794952	ReturnType	static int PTRCALL PREFIX		10794766	1					
ANR	10794953	Identifier	( scanComment )		10794766	2					
ANR	10794954	Identifier	scanComment		10794766	3					
ANR	10794955	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10794766	4					
ANR	10794956	Parameter	const ENCODING * enc	138:20:4261:4279	10794766	0	True				
ANR	10794957	ParameterType	const ENCODING *		10794766	0					
ANR	10794958	Identifier	enc		10794766	1					
ANR	10794959	Parameter	const char * ptr	138:41:4282:4296	10794766	1	True				
ANR	10794960	ParameterType	const char *		10794766	0					
ANR	10794961	Identifier	ptr		10794766	1					
ANR	10794962	Parameter	const char * end	139:20:4319:4333	10794766	2	True				
ANR	10794963	ParameterType	const char *		10794766	0					
ANR	10794964	Identifier	end		10794766	1					
ANR	10794965	Parameter	const char * * nextTokPtr	139:37:4336:4358	10794766	3	True				
ANR	10794966	ParameterType	const char * *		10794766	0					
ANR	10794967	Identifier	nextTokPtr		10794766	1					
ANR	10794968	CFGEntryNode	ENTRY		10794766		True				
ANR	10794969	CFGExitNode	EXIT		10794766		True				
ANR	10794970	Symbol	ASCII_MINUS		10794766						
ANR	10794971	Symbol	XML_TOK_INVALID		10794766						
ANR	10794972	Symbol	nextTokPtr		10794766						
ANR	10794973	Symbol	XML_TOK_PARTIAL		10794766						
ANR	10794974	Symbol	BYTE_TYPE		10794766						
ANR	10794975	Symbol	* nextTokPtr		10794766						
ANR	10794976	Symbol	MINBPC		10794766						
ANR	10794977	Symbol	ptr		10794766						
ANR	10794978	Symbol	CHAR_MATCHES		10794766						
ANR	10794979	Symbol	ASCII_GT		10794766						
ANR	10794980	Symbol	end		10794766						
ANR	10794981	Symbol	enc		10794766						
ANR	10794982	Symbol	HAS_CHAR		10794766						
ANR	10794983	Symbol	XML_TOK_COMMENT		10794766						
ANR	10794984	Function	scanDecl	175:0:5230:6397							
ANR	10794985	FunctionDef	"scanDecl (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10794984	0					
ANR	10794986	CompoundStatement		178:0:5363:6397	10794984	0					
ANR	10794987	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	179:2:5367:5394	10794984	0	True				
ANR	10794988	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10794984	0					
ANR	10794989	Callee	REQUIRE_CHAR		10794984	0					
ANR	10794990	Identifier	REQUIRE_CHAR		10794984	0					
ANR	10794991	ArgumentList	enc		10794984	1					
ANR	10794992	Argument	enc		10794984	0					
ANR	10794993	Identifier	enc		10794984	0					
ANR	10794994	Argument	ptr		10794984	1					
ANR	10794995	Identifier	ptr		10794984	0					
ANR	10794996	Argument	end		10794984	2					
ANR	10794997	Identifier	end		10794984	0					
ANR	10794998	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10794984	1					
ANR	10794999	Condition	"BYTE_TYPE ( enc , ptr )"	180:10:5406:5424	10794984	0	True				
ANR	10795000	CallExpression	"BYTE_TYPE ( enc , ptr )"		10794984	0					
ANR	10795001	Callee	BYTE_TYPE		10794984	0					
ANR	10795002	Identifier	BYTE_TYPE		10794984	0					
ANR	10795003	ArgumentList	enc		10794984	1					
ANR	10795004	Argument	enc		10794984	0					
ANR	10795005	Identifier	enc		10794984	0					
ANR	10795006	Argument	ptr		10794984	1					
ANR	10795007	Identifier	ptr		10794984	0					
ANR	10795008	CompoundStatement		3:31:63:63	10794984	1					
ANR	10795009	Label	case BT_MINUS :	181:2:5431:5444	10794984	0	True				
ANR	10795010	Identifier	BT_MINUS		10794984	0					
ANR	10795011	ReturnStatement	"return PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	182:4:5450:5517	10794984	1	True				
ANR	10795012	CallExpression	"PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10794984	0					
ANR	10795013	Callee	PREFIX ( scanComment )		10794984	0					
ANR	10795014	CallExpression	PREFIX ( scanComment )		10794984	0					
ANR	10795015	Callee	PREFIX		10794984	0					
ANR	10795016	Identifier	PREFIX		10794984	0					
ANR	10795017	ArgumentList	scanComment		10794984	1					
ANR	10795018	Argument	scanComment		10794984	0					
ANR	10795019	Identifier	scanComment		10794984	0					
ANR	10795020	ArgumentList	enc		10794984	1					
ANR	10795021	Argument	enc		10794984	0					
ANR	10795022	Identifier	enc		10794984	0					
ANR	10795023	Argument	ptr + MINBPC ( enc )		10794984	1					
ANR	10795024	AdditiveExpression	ptr + MINBPC ( enc )		10794984	0		+			
ANR	10795025	Identifier	ptr		10794984	0					
ANR	10795026	CallExpression	MINBPC ( enc )		10794984	1					
ANR	10795027	Callee	MINBPC		10794984	0					
ANR	10795028	Identifier	MINBPC		10794984	0					
ANR	10795029	ArgumentList	enc		10794984	1					
ANR	10795030	Argument	enc		10794984	0					
ANR	10795031	Identifier	enc		10794984	0					
ANR	10795032	Argument	end		10794984	2					
ANR	10795033	Identifier	end		10794984	0					
ANR	10795034	Argument	nextTokPtr		10794984	3					
ANR	10795035	Identifier	nextTokPtr		10794984	0					
ANR	10795036	Label	case BT_LSQB :	183:2:5521:5533	10794984	2	True				
ANR	10795037	Identifier	BT_LSQB		10794984	0					
ANR	10795038	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	184:4:5539:5570	10794984	3	True				
ANR	10795039	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10794984	0		=			
ANR	10795040	UnaryOperationExpression	* nextTokPtr		10794984	0					
ANR	10795041	UnaryOperator	*		10794984	0					
ANR	10795042	Identifier	nextTokPtr		10794984	1					
ANR	10795043	AdditiveExpression	ptr + MINBPC ( enc )		10794984	1		+			
ANR	10795044	Identifier	ptr		10794984	0					
ANR	10795045	CallExpression	MINBPC ( enc )		10794984	1					
ANR	10795046	Callee	MINBPC		10794984	0					
ANR	10795047	Identifier	MINBPC		10794984	0					
ANR	10795048	ArgumentList	enc		10794984	1					
ANR	10795049	Argument	enc		10794984	0					
ANR	10795050	Identifier	enc		10794984	0					
ANR	10795051	ReturnStatement	return XML_TOK_COND_SECT_OPEN ;	185:4:5576:5605	10794984	4	True				
ANR	10795052	Identifier	XML_TOK_COND_SECT_OPEN		10794984	0					
ANR	10795053	Label	case BT_NMSTRT :	186:2:5609:5623	10794984	5	True				
ANR	10795054	Identifier	BT_NMSTRT		10794984	0					
ANR	10795055	Label	case BT_HEX :	187:2:5627:5638	10794984	6	True				
ANR	10795056	Identifier	BT_HEX		10794984	0					
ANR	10795057	ExpressionStatement	ptr += MINBPC ( enc )	188:4:5644:5662	10794984	7	True				
ANR	10795058	AssignmentExpression	ptr += MINBPC ( enc )		10794984	0		+=			
ANR	10795059	Identifier	ptr		10794984	0					
ANR	10795060	CallExpression	MINBPC ( enc )		10794984	1					
ANR	10795061	Callee	MINBPC		10794984	0					
ANR	10795062	Identifier	MINBPC		10794984	0					
ANR	10795063	ArgumentList	enc		10794984	1					
ANR	10795064	Argument	enc		10794984	0					
ANR	10795065	Identifier	enc		10794984	0					
ANR	10795066	BreakStatement	break ;	189:4:5668:5673	10794984	8	True				
ANR	10795067	Label	default :	190:2:5677:5684	10794984	9	True				
ANR	10795068	Identifier	default		10794984	0					
ANR	10795069	ExpressionStatement	* nextTokPtr = ptr	191:4:5690:5707	10794984	10	True				
ANR	10795070	AssignmentExpression	* nextTokPtr = ptr		10794984	0		=			
ANR	10795071	UnaryOperationExpression	* nextTokPtr		10794984	0					
ANR	10795072	UnaryOperator	*		10794984	0					
ANR	10795073	Identifier	nextTokPtr		10794984	1					
ANR	10795074	Identifier	ptr		10794984	1					
ANR	10795075	ReturnStatement	return XML_TOK_INVALID ;	192:4:5713:5735	10794984	11	True				
ANR	10795076	Identifier	XML_TOK_INVALID		10794984	0					
ANR	10795077	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10794984	2					
ANR	10795078	Condition	"HAS_CHAR ( enc , ptr , end )"	194:9:5750:5772	10794984	0	True				
ANR	10795079	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10794984	0					
ANR	10795080	Callee	HAS_CHAR		10794984	0					
ANR	10795081	Identifier	HAS_CHAR		10794984	0					
ANR	10795082	ArgumentList	enc		10794984	1					
ANR	10795083	Argument	enc		10794984	0					
ANR	10795084	Identifier	enc		10794984	0					
ANR	10795085	Argument	ptr		10794984	1					
ANR	10795086	Identifier	ptr		10794984	0					
ANR	10795087	Argument	end		10794984	2					
ANR	10795088	Identifier	end		10794984	0					
ANR	10795089	CompoundStatement		17:34:411:411	10794984	1					
ANR	10795090	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10794984	0					
ANR	10795091	Condition	"BYTE_TYPE ( enc , ptr )"	195:12:5789:5807	10794984	0	True				
ANR	10795092	CallExpression	"BYTE_TYPE ( enc , ptr )"		10794984	0					
ANR	10795093	Callee	BYTE_TYPE		10794984	0					
ANR	10795094	Identifier	BYTE_TYPE		10794984	0					
ANR	10795095	ArgumentList	enc		10794984	1					
ANR	10795096	Argument	enc		10794984	0					
ANR	10795097	Identifier	enc		10794984	0					
ANR	10795098	Argument	ptr		10794984	1					
ANR	10795099	Identifier	ptr		10794984	0					
ANR	10795100	CompoundStatement		18:33:446:446	10794984	1					
ANR	10795101	Label	case BT_PERCNT :	196:4:5816:5830	10794984	0	True				
ANR	10795102	Identifier	BT_PERCNT		10794984	0					
ANR	10795103	ExpressionStatement	"REQUIRE_CHARS ( enc , ptr , end , 2 )"	197:6:5838:5869	10794984	1	True				
ANR	10795104	CallExpression	"REQUIRE_CHARS ( enc , ptr , end , 2 )"		10794984	0					
ANR	10795105	Callee	REQUIRE_CHARS		10794984	0					
ANR	10795106	Identifier	REQUIRE_CHARS		10794984	0					
ANR	10795107	ArgumentList	enc		10794984	1					
ANR	10795108	Argument	enc		10794984	0					
ANR	10795109	Identifier	enc		10794984	0					
ANR	10795110	Argument	ptr		10794984	1					
ANR	10795111	Identifier	ptr		10794984	0					
ANR	10795112	Argument	end		10794984	2					
ANR	10795113	Identifier	end		10794984	0					
ANR	10795114	Argument	2		10794984	3					
ANR	10795115	PrimaryExpression	2		10794984	0					
ANR	10795116	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) )"		10794984	2					
ANR	10795117	Condition	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) )"	199:14:5935:5967	10794984	0	True				
ANR	10795118	CallExpression	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) )"		10794984	0					
ANR	10795119	Callee	BYTE_TYPE		10794984	0					
ANR	10795120	Identifier	BYTE_TYPE		10794984	0					
ANR	10795121	ArgumentList	enc		10794984	1					
ANR	10795122	Argument	enc		10794984	0					
ANR	10795123	Identifier	enc		10794984	0					
ANR	10795124	Argument	ptr + MINBPC ( enc )		10794984	1					
ANR	10795125	AdditiveExpression	ptr + MINBPC ( enc )		10794984	0		+			
ANR	10795126	Identifier	ptr		10794984	0					
ANR	10795127	CallExpression	MINBPC ( enc )		10794984	1					
ANR	10795128	Callee	MINBPC		10794984	0					
ANR	10795129	Identifier	MINBPC		10794984	0					
ANR	10795130	ArgumentList	enc		10794984	1					
ANR	10795131	Argument	enc		10794984	0					
ANR	10795132	Identifier	enc		10794984	0					
ANR	10795133	CompoundStatement		22:49:606:606	10794984	1					
ANR	10795134	Label	case BT_S :	200:6:5978:5987	10794984	0	True				
ANR	10795135	Identifier	BT_S		10794984	0					
ANR	10795136	Label	case BT_CR :	200:17:5989:5999	10794984	1	True				
ANR	10795137	Identifier	BT_CR		10794984	0					
ANR	10795138	Label	case BT_LF :	200:29:6001:6011	10794984	2	True				
ANR	10795139	Identifier	BT_LF		10794984	0					
ANR	10795140	Label	case BT_PERCNT :	200:41:6013:6027	10794984	3	True				
ANR	10795141	Identifier	BT_PERCNT		10794984	0					
ANR	10795142	ExpressionStatement	* nextTokPtr = ptr	201:8:6037:6054	10794984	4	True				
ANR	10795143	AssignmentExpression	* nextTokPtr = ptr		10794984	0		=			
ANR	10795144	UnaryOperationExpression	* nextTokPtr		10794984	0					
ANR	10795145	UnaryOperator	*		10794984	0					
ANR	10795146	Identifier	nextTokPtr		10794984	1					
ANR	10795147	Identifier	ptr		10794984	1					
ANR	10795148	ReturnStatement	return XML_TOK_INVALID ;	202:8:6064:6086	10794984	5	True				
ANR	10795149	Identifier	XML_TOK_INVALID		10794984	0					
ANR	10795150	Label	case BT_S :	205:4:6125:6134	10794984	3	True				
ANR	10795151	Identifier	BT_S		10794984	0					
ANR	10795152	Label	case BT_CR :	205:15:6136:6146	10794984	4	True				
ANR	10795153	Identifier	BT_CR		10794984	0					
ANR	10795154	Label	case BT_LF :	205:27:6148:6158	10794984	5	True				
ANR	10795155	Identifier	BT_LF		10794984	0					
ANR	10795156	ExpressionStatement	* nextTokPtr = ptr	206:6:6166:6183	10794984	6	True				
ANR	10795157	AssignmentExpression	* nextTokPtr = ptr		10794984	0		=			
ANR	10795158	UnaryOperationExpression	* nextTokPtr		10794984	0					
ANR	10795159	UnaryOperator	*		10794984	0					
ANR	10795160	Identifier	nextTokPtr		10794984	1					
ANR	10795161	Identifier	ptr		10794984	1					
ANR	10795162	ReturnStatement	return XML_TOK_DECL_OPEN ;	207:6:6191:6215	10794984	7	True				
ANR	10795163	Identifier	XML_TOK_DECL_OPEN		10794984	0					
ANR	10795164	Label	case BT_NMSTRT :	208:4:6221:6235	10794984	8	True				
ANR	10795165	Identifier	BT_NMSTRT		10794984	0					
ANR	10795166	Label	case BT_HEX :	209:4:6241:6252	10794984	9	True				
ANR	10795167	Identifier	BT_HEX		10794984	0					
ANR	10795168	ExpressionStatement	ptr += MINBPC ( enc )	210:6:6260:6278	10794984	10	True				
ANR	10795169	AssignmentExpression	ptr += MINBPC ( enc )		10794984	0		+=			
ANR	10795170	Identifier	ptr		10794984	0					
ANR	10795171	CallExpression	MINBPC ( enc )		10794984	1					
ANR	10795172	Callee	MINBPC		10794984	0					
ANR	10795173	Identifier	MINBPC		10794984	0					
ANR	10795174	ArgumentList	enc		10794984	1					
ANR	10795175	Argument	enc		10794984	0					
ANR	10795176	Identifier	enc		10794984	0					
ANR	10795177	BreakStatement	break ;	211:6:6286:6291	10794984	11	True				
ANR	10795178	Label	default :	212:4:6297:6304	10794984	12	True				
ANR	10795179	Identifier	default		10794984	0					
ANR	10795180	ExpressionStatement	* nextTokPtr = ptr	213:6:6312:6329	10794984	13	True				
ANR	10795181	AssignmentExpression	* nextTokPtr = ptr		10794984	0		=			
ANR	10795182	UnaryOperationExpression	* nextTokPtr		10794984	0					
ANR	10795183	UnaryOperator	*		10794984	0					
ANR	10795184	Identifier	nextTokPtr		10794984	1					
ANR	10795185	Identifier	ptr		10794984	1					
ANR	10795186	ReturnStatement	return XML_TOK_INVALID ;	214:6:6337:6359	10794984	14	True				
ANR	10795187	Identifier	XML_TOK_INVALID		10794984	0					
ANR	10795188	ReturnStatement	return XML_TOK_PARTIAL ;	217:2:6373:6395	10794984	3	True				
ANR	10795189	Identifier	XML_TOK_PARTIAL		10794984	0					
ANR	10795190	ReturnType	static int PTRCALL PREFIX		10794984	1					
ANR	10795191	Identifier	( scanDecl )		10794984	2					
ANR	10795192	Identifier	scanDecl		10794984	3					
ANR	10795193	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10794984	4					
ANR	10795194	Parameter	const ENCODING * enc	176:17:5266:5284	10794984	0	True				
ANR	10795195	ParameterType	const ENCODING *		10794984	0					
ANR	10795196	Identifier	enc		10794984	1					
ANR	10795197	Parameter	const char * ptr	176:38:5287:5301	10794984	1	True				
ANR	10795198	ParameterType	const char *		10794984	0					
ANR	10795199	Identifier	ptr		10794984	1					
ANR	10795200	Parameter	const char * end	177:17:5321:5335	10794984	2	True				
ANR	10795201	ParameterType	const char *		10794984	0					
ANR	10795202	Identifier	end		10794984	1					
ANR	10795203	Parameter	const char * * nextTokPtr	177:34:5338:5360	10794984	3	True				
ANR	10795204	ParameterType	const char * *		10794984	0					
ANR	10795205	Identifier	nextTokPtr		10794984	1					
ANR	10795206	CFGEntryNode	ENTRY		10794984		True				
ANR	10795207	CFGExitNode	EXIT		10794984		True				
ANR	10795208	Symbol	XML_TOK_INVALID		10794984						
ANR	10795209	Symbol	nextTokPtr		10794984						
ANR	10795210	Symbol	XML_TOK_COND_SECT_OPEN		10794984						
ANR	10795211	Symbol	XML_TOK_PARTIAL		10794984						
ANR	10795212	Symbol	BYTE_TYPE		10794984						
ANR	10795213	Symbol	* nextTokPtr		10794984						
ANR	10795214	Symbol	MINBPC		10794984						
ANR	10795215	Symbol	ptr		10794984						
ANR	10795216	Symbol	scanComment		10794984						
ANR	10795217	Symbol	PREFIX		10794984						
ANR	10795218	Symbol	end		10794984						
ANR	10795219	Symbol	enc		10794984						
ANR	10795220	Symbol	HAS_CHAR		10794984						
ANR	10795221	Symbol	XML_TOK_DECL_OPEN		10794984						
ANR	10795222	Function	checkPiTarget	220:0:6400:7150							
ANR	10795223	FunctionDef	"checkPiTarget (const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , int * tokPtr)"		10795222	0					
ANR	10795224	CompoundStatement		223:0:6541:7150	10795222	0					
ANR	10795225	IdentifierDeclStatement	int upper = 0 ;	224:2:6545:6558	10795222	0	True				
ANR	10795226	IdentifierDecl	upper = 0		10795222	0					
ANR	10795227	IdentifierDeclType	int		10795222	0					
ANR	10795228	Identifier	upper		10795222	1					
ANR	10795229	AssignmentExpression	upper = 0		10795222	2		=			
ANR	10795230	Identifier	upper		10795222	0					
ANR	10795231	PrimaryExpression	0		10795222	1					
ANR	10795232	ExpressionStatement	* tokPtr = XML_TOK_PI	225:2:6562:6582	10795222	1	True				
ANR	10795233	AssignmentExpression	* tokPtr = XML_TOK_PI		10795222	0		=			
ANR	10795234	UnaryOperationExpression	* tokPtr		10795222	0					
ANR	10795235	UnaryOperator	*		10795222	0					
ANR	10795236	Identifier	tokPtr		10795222	1					
ANR	10795237	Identifier	XML_TOK_PI		10795222	1					
ANR	10795238	IfStatement	if ( end - ptr != MINBPC ( enc ) * 3 )		10795222	2					
ANR	10795239	Condition	end - ptr != MINBPC ( enc ) * 3	226:6:6590:6615	10795222	0	True				
ANR	10795240	EqualityExpression	end - ptr != MINBPC ( enc ) * 3		10795222	0		!=			
ANR	10795241	AdditiveExpression	end - ptr		10795222	0		-			
ANR	10795242	Identifier	end		10795222	0					
ANR	10795243	Identifier	ptr		10795222	1					
ANR	10795244	MultiplicativeExpression	MINBPC ( enc ) * 3		10795222	1		*			
ANR	10795245	CallExpression	MINBPC ( enc )		10795222	0					
ANR	10795246	Callee	MINBPC		10795222	0					
ANR	10795247	Identifier	MINBPC		10795222	0					
ANR	10795248	ArgumentList	enc		10795222	1					
ANR	10795249	Argument	enc		10795222	0					
ANR	10795250	Identifier	enc		10795222	0					
ANR	10795251	PrimaryExpression	3		10795222	1					
ANR	10795252	ReturnStatement	return 1 ;	227:4:6622:6630	10795222	1	True				
ANR	10795253	PrimaryExpression	1		10795222	0					
ANR	10795254	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		10795222	3					
ANR	10795255	Condition	"BYTE_TO_ASCII ( enc , ptr )"	228:10:6642:6664	10795222	0	True				
ANR	10795256	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10795222	0					
ANR	10795257	Callee	BYTE_TO_ASCII		10795222	0					
ANR	10795258	Identifier	BYTE_TO_ASCII		10795222	0					
ANR	10795259	ArgumentList	enc		10795222	1					
ANR	10795260	Argument	enc		10795222	0					
ANR	10795261	Identifier	enc		10795222	0					
ANR	10795262	Argument	ptr		10795222	1					
ANR	10795263	Identifier	ptr		10795222	0					
ANR	10795264	CompoundStatement		6:35:125:125	10795222	1					
ANR	10795265	Label	case ASCII_x :	229:2:6671:6683	10795222	0	True				
ANR	10795266	Identifier	ASCII_x		10795222	0					
ANR	10795267	BreakStatement	break ;	230:4:6689:6694	10795222	1	True				
ANR	10795268	Label	case ASCII_X :	231:2:6698:6710	10795222	2	True				
ANR	10795269	Identifier	ASCII_X		10795222	0					
ANR	10795270	ExpressionStatement	upper = 1	232:4:6716:6725	10795222	3	True				
ANR	10795271	AssignmentExpression	upper = 1		10795222	0		=			
ANR	10795272	Identifier	upper		10795222	0					
ANR	10795273	PrimaryExpression	1		10795222	1					
ANR	10795274	BreakStatement	break ;	233:4:6731:6736	10795222	4	True				
ANR	10795275	Label	default :	234:2:6740:6747	10795222	5	True				
ANR	10795276	Identifier	default		10795222	0					
ANR	10795277	ReturnStatement	return 1 ;	235:4:6753:6761	10795222	6	True				
ANR	10795278	PrimaryExpression	1		10795222	0					
ANR	10795279	ExpressionStatement	ptr += MINBPC ( enc )	237:2:6769:6787	10795222	4	True				
ANR	10795280	AssignmentExpression	ptr += MINBPC ( enc )		10795222	0		+=			
ANR	10795281	Identifier	ptr		10795222	0					
ANR	10795282	CallExpression	MINBPC ( enc )		10795222	1					
ANR	10795283	Callee	MINBPC		10795222	0					
ANR	10795284	Identifier	MINBPC		10795222	0					
ANR	10795285	ArgumentList	enc		10795222	1					
ANR	10795286	Argument	enc		10795222	0					
ANR	10795287	Identifier	enc		10795222	0					
ANR	10795288	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		10795222	5					
ANR	10795289	Condition	"BYTE_TO_ASCII ( enc , ptr )"	238:10:6799:6821	10795222	0	True				
ANR	10795290	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10795222	0					
ANR	10795291	Callee	BYTE_TO_ASCII		10795222	0					
ANR	10795292	Identifier	BYTE_TO_ASCII		10795222	0					
ANR	10795293	ArgumentList	enc		10795222	1					
ANR	10795294	Argument	enc		10795222	0					
ANR	10795295	Identifier	enc		10795222	0					
ANR	10795296	Argument	ptr		10795222	1					
ANR	10795297	Identifier	ptr		10795222	0					
ANR	10795298	CompoundStatement		16:35:282:282	10795222	1					
ANR	10795299	Label	case ASCII_m :	239:2:6828:6840	10795222	0	True				
ANR	10795300	Identifier	ASCII_m		10795222	0					
ANR	10795301	BreakStatement	break ;	240:4:6846:6851	10795222	1	True				
ANR	10795302	Label	case ASCII_M :	241:2:6855:6867	10795222	2	True				
ANR	10795303	Identifier	ASCII_M		10795222	0					
ANR	10795304	ExpressionStatement	upper = 1	242:4:6873:6882	10795222	3	True				
ANR	10795305	AssignmentExpression	upper = 1		10795222	0		=			
ANR	10795306	Identifier	upper		10795222	0					
ANR	10795307	PrimaryExpression	1		10795222	1					
ANR	10795308	BreakStatement	break ;	243:4:6888:6893	10795222	4	True				
ANR	10795309	Label	default :	244:2:6897:6904	10795222	5	True				
ANR	10795310	Identifier	default		10795222	0					
ANR	10795311	ReturnStatement	return 1 ;	245:4:6910:6918	10795222	6	True				
ANR	10795312	PrimaryExpression	1		10795222	0					
ANR	10795313	ExpressionStatement	ptr += MINBPC ( enc )	247:2:6926:6944	10795222	6	True				
ANR	10795314	AssignmentExpression	ptr += MINBPC ( enc )		10795222	0		+=			
ANR	10795315	Identifier	ptr		10795222	0					
ANR	10795316	CallExpression	MINBPC ( enc )		10795222	1					
ANR	10795317	Callee	MINBPC		10795222	0					
ANR	10795318	Identifier	MINBPC		10795222	0					
ANR	10795319	ArgumentList	enc		10795222	1					
ANR	10795320	Argument	enc		10795222	0					
ANR	10795321	Identifier	enc		10795222	0					
ANR	10795322	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		10795222	7					
ANR	10795323	Condition	"BYTE_TO_ASCII ( enc , ptr )"	248:10:6956:6978	10795222	0	True				
ANR	10795324	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10795222	0					
ANR	10795325	Callee	BYTE_TO_ASCII		10795222	0					
ANR	10795326	Identifier	BYTE_TO_ASCII		10795222	0					
ANR	10795327	ArgumentList	enc		10795222	1					
ANR	10795328	Argument	enc		10795222	0					
ANR	10795329	Identifier	enc		10795222	0					
ANR	10795330	Argument	ptr		10795222	1					
ANR	10795331	Identifier	ptr		10795222	0					
ANR	10795332	CompoundStatement		26:35:439:439	10795222	1					
ANR	10795333	Label	case ASCII_l :	249:2:6985:6997	10795222	0	True				
ANR	10795334	Identifier	ASCII_l		10795222	0					
ANR	10795335	BreakStatement	break ;	250:4:7003:7008	10795222	1	True				
ANR	10795336	Label	case ASCII_L :	251:2:7012:7024	10795222	2	True				
ANR	10795337	Identifier	ASCII_L		10795222	0					
ANR	10795338	ExpressionStatement	upper = 1	252:4:7030:7039	10795222	3	True				
ANR	10795339	AssignmentExpression	upper = 1		10795222	0		=			
ANR	10795340	Identifier	upper		10795222	0					
ANR	10795341	PrimaryExpression	1		10795222	1					
ANR	10795342	BreakStatement	break ;	253:4:7045:7050	10795222	4	True				
ANR	10795343	Label	default :	254:2:7054:7061	10795222	5	True				
ANR	10795344	Identifier	default		10795222	0					
ANR	10795345	ReturnStatement	return 1 ;	255:4:7067:7075	10795222	6	True				
ANR	10795346	PrimaryExpression	1		10795222	0					
ANR	10795347	IfStatement	if ( upper )		10795222	8					
ANR	10795348	Condition	upper	257:6:7087:7091	10795222	0	True				
ANR	10795349	Identifier	upper		10795222	0					
ANR	10795350	ReturnStatement	return 0 ;	258:4:7098:7106	10795222	1	True				
ANR	10795351	PrimaryExpression	0		10795222	0					
ANR	10795352	ExpressionStatement	* tokPtr = XML_TOK_XML_DECL	259:2:7110:7136	10795222	9	True				
ANR	10795353	AssignmentExpression	* tokPtr = XML_TOK_XML_DECL		10795222	0		=			
ANR	10795354	UnaryOperationExpression	* tokPtr		10795222	0					
ANR	10795355	UnaryOperator	*		10795222	0					
ANR	10795356	Identifier	tokPtr		10795222	1					
ANR	10795357	Identifier	XML_TOK_XML_DECL		10795222	1					
ANR	10795358	ReturnStatement	return 1 ;	260:2:7140:7148	10795222	10	True				
ANR	10795359	PrimaryExpression	1		10795222	0					
ANR	10795360	ReturnType	static int PTRCALL PREFIX		10795222	1					
ANR	10795361	Identifier	( checkPiTarget )		10795222	2					
ANR	10795362	Identifier	checkPiTarget		10795222	3					
ANR	10795363	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , int * tokPtr"		10795222	4					
ANR	10795364	Parameter	const ENCODING * UNUSED_P ( enc )	221:22:6441:6469	10795222	0	True				
ANR	10795365	ParameterType	const ENCODING * ( enc )		10795222	0					
ANR	10795366	Identifier	UNUSED_P		10795222	1					
ANR	10795367	Parameter	const char * ptr	221:53:6472:6486	10795222	1	True				
ANR	10795368	ParameterType	const char *		10795222	0					
ANR	10795369	Identifier	ptr		10795222	1					
ANR	10795370	Parameter	const char * end	222:22:6511:6525	10795222	2	True				
ANR	10795371	ParameterType	const char *		10795222	0					
ANR	10795372	Identifier	end		10795222	1					
ANR	10795373	Parameter	int * tokPtr	222:39:6528:6538	10795222	3	True				
ANR	10795374	ParameterType	int *		10795222	0					
ANR	10795375	Identifier	tokPtr		10795222	1					
ANR	10795376	CFGEntryNode	ENTRY		10795222		True				
ANR	10795377	CFGExitNode	EXIT		10795222		True				
ANR	10795378	Symbol	UNUSED_P		10795222						
ANR	10795379	Symbol	XML_TOK_PI		10795222						
ANR	10795380	Symbol	upper		10795222						
ANR	10795381	Symbol	end		10795222						
ANR	10795382	Symbol	XML_TOK_XML_DECL		10795222						
ANR	10795383	Symbol	enc		10795222						
ANR	10795384	Symbol	* tokPtr		10795222						
ANR	10795385	Symbol	MINBPC		10795222						
ANR	10795386	Symbol	tokPtr		10795222						
ANR	10795387	Symbol	ptr		10795222						
ANR	10795388	Symbol	BYTE_TO_ASCII		10795222						
ANR	10795389	Function	scanPi	265:0:7199:8779							
ANR	10795390	FunctionDef	"scanPi (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10795389	0					
ANR	10795391	CompoundStatement		268:0:7328:8779	10795389	0					
ANR	10795392	IdentifierDeclStatement	int tok ;	269:2:7332:7339	10795389	0	True				
ANR	10795393	IdentifierDecl	tok		10795389	0					
ANR	10795394	IdentifierDeclType	int		10795389	0					
ANR	10795395	Identifier	tok		10795389	1					
ANR	10795396	IdentifierDeclStatement	const char * target = ptr ;	270:2:7343:7367	10795389	1	True				
ANR	10795397	IdentifierDecl	* target = ptr		10795389	0					
ANR	10795398	IdentifierDeclType	const char *		10795389	0					
ANR	10795399	Identifier	target		10795389	1					
ANR	10795400	AssignmentExpression	* target = ptr		10795389	2		=			
ANR	10795401	Identifier	ptr		10795389	0					
ANR	10795402	Identifier	ptr		10795389	1					
ANR	10795403	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	271:2:7371:7398	10795389	2	True				
ANR	10795404	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10795389	0					
ANR	10795405	Callee	REQUIRE_CHAR		10795389	0					
ANR	10795406	Identifier	REQUIRE_CHAR		10795389	0					
ANR	10795407	ArgumentList	enc		10795389	1					
ANR	10795408	Argument	enc		10795389	0					
ANR	10795409	Identifier	enc		10795389	0					
ANR	10795410	Argument	ptr		10795389	1					
ANR	10795411	Identifier	ptr		10795389	0					
ANR	10795412	Argument	end		10795389	2					
ANR	10795413	Identifier	end		10795389	0					
ANR	10795414	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10795389	3					
ANR	10795415	Condition	"BYTE_TYPE ( enc , ptr )"	272:10:7410:7428	10795389	0	True				
ANR	10795416	CallExpression	"BYTE_TYPE ( enc , ptr )"		10795389	0					
ANR	10795417	Callee	BYTE_TYPE		10795389	0					
ANR	10795418	Identifier	BYTE_TYPE		10795389	0					
ANR	10795419	ArgumentList	enc		10795389	1					
ANR	10795420	Argument	enc		10795389	0					
ANR	10795421	Identifier	enc		10795389	0					
ANR	10795422	Argument	ptr		10795389	1					
ANR	10795423	Identifier	ptr		10795389	0					
ANR	10795424	CompoundStatement		5:31:102:102	10795389	1					
ANR	10795425	Statement	CHECK_NMSTRT_CASES	273:2:7435:7452	10795389	0	True				
ANR	10795426	Statement	(	273:20:7453:7453	10795389	1	True				
ANR	10795427	Statement	enc	273:21:7454:7456	10795389	2	True				
ANR	10795428	Statement	","	273:24:7457:7457	10795389	3	True				
ANR	10795429	Statement	ptr	273:26:7459:7461	10795389	4	True				
ANR	10795430	Statement	","	273:29:7462:7462	10795389	5	True				
ANR	10795431	Statement	end	273:31:7464:7466	10795389	6	True				
ANR	10795432	Statement	","	273:34:7467:7467	10795389	7	True				
ANR	10795433	Statement	nextTokPtr	273:36:7469:7478	10795389	8	True				
ANR	10795434	Statement	)	273:46:7479:7479	10795389	9	True				
ANR	10795435	Label	default :	274:2:7483:7490	10795389	10	True				
ANR	10795436	Identifier	default		10795389	0					
ANR	10795437	ExpressionStatement	* nextTokPtr = ptr	275:4:7496:7513	10795389	11	True				
ANR	10795438	AssignmentExpression	* nextTokPtr = ptr		10795389	0		=			
ANR	10795439	UnaryOperationExpression	* nextTokPtr		10795389	0					
ANR	10795440	UnaryOperator	*		10795389	0					
ANR	10795441	Identifier	nextTokPtr		10795389	1					
ANR	10795442	Identifier	ptr		10795389	1					
ANR	10795443	ReturnStatement	return XML_TOK_INVALID ;	276:4:7519:7541	10795389	12	True				
ANR	10795444	Identifier	XML_TOK_INVALID		10795389	0					
ANR	10795445	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10795389	4					
ANR	10795446	Condition	"HAS_CHAR ( enc , ptr , end )"	278:9:7556:7578	10795389	0	True				
ANR	10795447	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10795389	0					
ANR	10795448	Callee	HAS_CHAR		10795389	0					
ANR	10795449	Identifier	HAS_CHAR		10795389	0					
ANR	10795450	ArgumentList	enc		10795389	1					
ANR	10795451	Argument	enc		10795389	0					
ANR	10795452	Identifier	enc		10795389	0					
ANR	10795453	Argument	ptr		10795389	1					
ANR	10795454	Identifier	ptr		10795389	0					
ANR	10795455	Argument	end		10795389	2					
ANR	10795456	Identifier	end		10795389	0					
ANR	10795457	CompoundStatement		11:34:252:252	10795389	1					
ANR	10795458	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10795389	0					
ANR	10795459	Condition	"BYTE_TYPE ( enc , ptr )"	279:12:7595:7613	10795389	0	True				
ANR	10795460	CallExpression	"BYTE_TYPE ( enc , ptr )"		10795389	0					
ANR	10795461	Callee	BYTE_TYPE		10795389	0					
ANR	10795462	Identifier	BYTE_TYPE		10795389	0					
ANR	10795463	ArgumentList	enc		10795389	1					
ANR	10795464	Argument	enc		10795389	0					
ANR	10795465	Identifier	enc		10795389	0					
ANR	10795466	Argument	ptr		10795389	1					
ANR	10795467	Identifier	ptr		10795389	0					
ANR	10795468	CompoundStatement		12:33:287:287	10795389	1					
ANR	10795469	Statement	CHECK_NAME_CASES	280:4:7622:7637	10795389	0	True				
ANR	10795470	Statement	(	280:20:7638:7638	10795389	1	True				
ANR	10795471	Statement	enc	280:21:7639:7641	10795389	2	True				
ANR	10795472	Statement	","	280:24:7642:7642	10795389	3	True				
ANR	10795473	Statement	ptr	280:26:7644:7646	10795389	4	True				
ANR	10795474	Statement	","	280:29:7647:7647	10795389	5	True				
ANR	10795475	Statement	end	280:31:7649:7651	10795389	6	True				
ANR	10795476	Statement	","	280:34:7652:7652	10795389	7	True				
ANR	10795477	Statement	nextTokPtr	280:36:7654:7663	10795389	8	True				
ANR	10795478	Statement	)	280:46:7664:7664	10795389	9	True				
ANR	10795479	Label	case BT_S :	281:4:7670:7679	10795389	10	True				
ANR	10795480	Identifier	BT_S		10795389	0					
ANR	10795481	Label	case BT_CR :	281:15:7681:7691	10795389	11	True				
ANR	10795482	Identifier	BT_CR		10795389	0					
ANR	10795483	Label	case BT_LF :	281:27:7693:7703	10795389	12	True				
ANR	10795484	Identifier	BT_LF		10795389	0					
ANR	10795485	IfStatement	"if ( ! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok ) )"		10795389	13					
ANR	10795486	Condition	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"	282:10:7715:7760	10795389	0	True				
ANR	10795487	UnaryOperationExpression	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		10795389	0					
ANR	10795488	UnaryOperator	!		10795389	0					
ANR	10795489	CallExpression	"PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		10795389	1					
ANR	10795490	Callee	PREFIX ( checkPiTarget )		10795389	0					
ANR	10795491	CallExpression	PREFIX ( checkPiTarget )		10795389	0					
ANR	10795492	Callee	PREFIX		10795389	0					
ANR	10795493	Identifier	PREFIX		10795389	0					
ANR	10795494	ArgumentList	checkPiTarget		10795389	1					
ANR	10795495	Argument	checkPiTarget		10795389	0					
ANR	10795496	Identifier	checkPiTarget		10795389	0					
ANR	10795497	ArgumentList	enc		10795389	1					
ANR	10795498	Argument	enc		10795389	0					
ANR	10795499	Identifier	enc		10795389	0					
ANR	10795500	Argument	target		10795389	1					
ANR	10795501	Identifier	target		10795389	0					
ANR	10795502	Argument	ptr		10795389	2					
ANR	10795503	Identifier	ptr		10795389	0					
ANR	10795504	Argument	& tok		10795389	3					
ANR	10795505	UnaryOperationExpression	& tok		10795389	0					
ANR	10795506	UnaryOperator	&		10795389	0					
ANR	10795507	Identifier	tok		10795389	1					
ANR	10795508	CompoundStatement		15:58:434:434	10795389	1					
ANR	10795509	ExpressionStatement	* nextTokPtr = ptr	283:8:7773:7790	10795389	0	True				
ANR	10795510	AssignmentExpression	* nextTokPtr = ptr		10795389	0		=			
ANR	10795511	UnaryOperationExpression	* nextTokPtr		10795389	0					
ANR	10795512	UnaryOperator	*		10795389	0					
ANR	10795513	Identifier	nextTokPtr		10795389	1					
ANR	10795514	Identifier	ptr		10795389	1					
ANR	10795515	ReturnStatement	return XML_TOK_INVALID ;	284:8:7800:7822	10795389	1	True				
ANR	10795516	Identifier	XML_TOK_INVALID		10795389	0					
ANR	10795517	ExpressionStatement	ptr += MINBPC ( enc )	286:6:7838:7856	10795389	14	True				
ANR	10795518	AssignmentExpression	ptr += MINBPC ( enc )		10795389	0		+=			
ANR	10795519	Identifier	ptr		10795389	0					
ANR	10795520	CallExpression	MINBPC ( enc )		10795389	1					
ANR	10795521	Callee	MINBPC		10795389	0					
ANR	10795522	Identifier	MINBPC		10795389	0					
ANR	10795523	ArgumentList	enc		10795389	1					
ANR	10795524	Argument	enc		10795389	0					
ANR	10795525	Identifier	enc		10795389	0					
ANR	10795526	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10795389	15					
ANR	10795527	Condition	"HAS_CHAR ( enc , ptr , end )"	287:13:7871:7893	10795389	0	True				
ANR	10795528	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10795389	0					
ANR	10795529	Callee	HAS_CHAR		10795389	0					
ANR	10795530	Identifier	HAS_CHAR		10795389	0					
ANR	10795531	ArgumentList	enc		10795389	1					
ANR	10795532	Argument	enc		10795389	0					
ANR	10795533	Identifier	enc		10795389	0					
ANR	10795534	Argument	ptr		10795389	1					
ANR	10795535	Identifier	ptr		10795389	0					
ANR	10795536	Argument	end		10795389	2					
ANR	10795537	Identifier	end		10795389	0					
ANR	10795538	CompoundStatement		20:38:567:567	10795389	1					
ANR	10795539	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10795389	0					
ANR	10795540	Condition	"BYTE_TYPE ( enc , ptr )"	288:16:7914:7932	10795389	0	True				
ANR	10795541	CallExpression	"BYTE_TYPE ( enc , ptr )"		10795389	0					
ANR	10795542	Callee	BYTE_TYPE		10795389	0					
ANR	10795543	Identifier	BYTE_TYPE		10795389	0					
ANR	10795544	ArgumentList	enc		10795389	1					
ANR	10795545	Argument	enc		10795389	0					
ANR	10795546	Identifier	enc		10795389	0					
ANR	10795547	Argument	ptr		10795389	1					
ANR	10795548	Identifier	ptr		10795389	0					
ANR	10795549	CompoundStatement		21:37:606:606	10795389	1					
ANR	10795550	Statement	INVALID_CASES	289:8:7945:7957	10795389	0	True				
ANR	10795551	Statement	(	289:21:7958:7958	10795389	1	True				
ANR	10795552	Statement	ptr	289:22:7959:7961	10795389	2	True				
ANR	10795553	Statement	","	289:25:7962:7962	10795389	3	True				
ANR	10795554	Statement	nextTokPtr	289:27:7964:7973	10795389	4	True				
ANR	10795555	Statement	)	289:37:7974:7974	10795389	5	True				
ANR	10795556	Label	case BT_QUEST :	290:8:7984:7997	10795389	6	True				
ANR	10795557	Identifier	BT_QUEST		10795389	0					
ANR	10795558	ExpressionStatement	ptr += MINBPC ( enc )	291:10:8009:8027	10795389	7	True				
ANR	10795559	AssignmentExpression	ptr += MINBPC ( enc )		10795389	0		+=			
ANR	10795560	Identifier	ptr		10795389	0					
ANR	10795561	CallExpression	MINBPC ( enc )		10795389	1					
ANR	10795562	Callee	MINBPC		10795389	0					
ANR	10795563	Identifier	MINBPC		10795389	0					
ANR	10795564	ArgumentList	enc		10795389	1					
ANR	10795565	Argument	enc		10795389	0					
ANR	10795566	Identifier	enc		10795389	0					
ANR	10795567	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	292:10:8039:8066	10795389	8	True				
ANR	10795568	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10795389	0					
ANR	10795569	Callee	REQUIRE_CHAR		10795389	0					
ANR	10795570	Identifier	REQUIRE_CHAR		10795389	0					
ANR	10795571	ArgumentList	enc		10795389	1					
ANR	10795572	Argument	enc		10795389	0					
ANR	10795573	Identifier	enc		10795389	0					
ANR	10795574	Argument	ptr		10795389	1					
ANR	10795575	Identifier	ptr		10795389	0					
ANR	10795576	Argument	end		10795389	2					
ANR	10795577	Identifier	end		10795389	0					
ANR	10795578	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10795389	9					
ANR	10795579	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"	293:14:8082:8113	10795389	0	True				
ANR	10795580	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10795389	0					
ANR	10795581	Callee	CHAR_MATCHES		10795389	0					
ANR	10795582	Identifier	CHAR_MATCHES		10795389	0					
ANR	10795583	ArgumentList	enc		10795389	1					
ANR	10795584	Argument	enc		10795389	0					
ANR	10795585	Identifier	enc		10795389	0					
ANR	10795586	Argument	ptr		10795389	1					
ANR	10795587	Identifier	ptr		10795389	0					
ANR	10795588	Argument	ASCII_GT		10795389	2					
ANR	10795589	Identifier	ASCII_GT		10795389	0					
ANR	10795590	CompoundStatement		26:48:787:787	10795389	1					
ANR	10795591	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	294:12:8130:8161	10795389	0	True				
ANR	10795592	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10795389	0		=			
ANR	10795593	UnaryOperationExpression	* nextTokPtr		10795389	0					
ANR	10795594	UnaryOperator	*		10795389	0					
ANR	10795595	Identifier	nextTokPtr		10795389	1					
ANR	10795596	AdditiveExpression	ptr + MINBPC ( enc )		10795389	1		+			
ANR	10795597	Identifier	ptr		10795389	0					
ANR	10795598	CallExpression	MINBPC ( enc )		10795389	1					
ANR	10795599	Callee	MINBPC		10795389	0					
ANR	10795600	Identifier	MINBPC		10795389	0					
ANR	10795601	ArgumentList	enc		10795389	1					
ANR	10795602	Argument	enc		10795389	0					
ANR	10795603	Identifier	enc		10795389	0					
ANR	10795604	ReturnStatement	return tok ;	295:12:8175:8185	10795389	1	True				
ANR	10795605	Identifier	tok		10795389	0					
ANR	10795606	BreakStatement	break ;	297:10:8209:8214	10795389	10	True				
ANR	10795607	Label	default :	298:8:8224:8231	10795389	11	True				
ANR	10795608	Identifier	default		10795389	0					
ANR	10795609	ExpressionStatement	ptr += MINBPC ( enc )	299:10:8243:8261	10795389	12	True				
ANR	10795610	AssignmentExpression	ptr += MINBPC ( enc )		10795389	0		+=			
ANR	10795611	Identifier	ptr		10795389	0					
ANR	10795612	CallExpression	MINBPC ( enc )		10795389	1					
ANR	10795613	Callee	MINBPC		10795389	0					
ANR	10795614	Identifier	MINBPC		10795389	0					
ANR	10795615	ArgumentList	enc		10795389	1					
ANR	10795616	Argument	enc		10795389	0					
ANR	10795617	Identifier	enc		10795389	0					
ANR	10795618	BreakStatement	break ;	300:10:8273:8278	10795389	13	True				
ANR	10795619	ReturnStatement	return XML_TOK_PARTIAL ;	303:6:8304:8326	10795389	16	True				
ANR	10795620	Identifier	XML_TOK_PARTIAL		10795389	0					
ANR	10795621	Label	case BT_QUEST :	304:4:8332:8345	10795389	17	True				
ANR	10795622	Identifier	BT_QUEST		10795389	0					
ANR	10795623	IfStatement	"if ( ! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok ) )"		10795389	18					
ANR	10795624	Condition	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"	305:10:8357:8402	10795389	0	True				
ANR	10795625	UnaryOperationExpression	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		10795389	0					
ANR	10795626	UnaryOperator	!		10795389	0					
ANR	10795627	CallExpression	"PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		10795389	1					
ANR	10795628	Callee	PREFIX ( checkPiTarget )		10795389	0					
ANR	10795629	CallExpression	PREFIX ( checkPiTarget )		10795389	0					
ANR	10795630	Callee	PREFIX		10795389	0					
ANR	10795631	Identifier	PREFIX		10795389	0					
ANR	10795632	ArgumentList	checkPiTarget		10795389	1					
ANR	10795633	Argument	checkPiTarget		10795389	0					
ANR	10795634	Identifier	checkPiTarget		10795389	0					
ANR	10795635	ArgumentList	enc		10795389	1					
ANR	10795636	Argument	enc		10795389	0					
ANR	10795637	Identifier	enc		10795389	0					
ANR	10795638	Argument	target		10795389	1					
ANR	10795639	Identifier	target		10795389	0					
ANR	10795640	Argument	ptr		10795389	2					
ANR	10795641	Identifier	ptr		10795389	0					
ANR	10795642	Argument	& tok		10795389	3					
ANR	10795643	UnaryOperationExpression	& tok		10795389	0					
ANR	10795644	UnaryOperator	&		10795389	0					
ANR	10795645	Identifier	tok		10795389	1					
ANR	10795646	CompoundStatement		38:58:1076:1076	10795389	1					
ANR	10795647	ExpressionStatement	* nextTokPtr = ptr	306:8:8415:8432	10795389	0	True				
ANR	10795648	AssignmentExpression	* nextTokPtr = ptr		10795389	0		=			
ANR	10795649	UnaryOperationExpression	* nextTokPtr		10795389	0					
ANR	10795650	UnaryOperator	*		10795389	0					
ANR	10795651	Identifier	nextTokPtr		10795389	1					
ANR	10795652	Identifier	ptr		10795389	1					
ANR	10795653	ReturnStatement	return XML_TOK_INVALID ;	307:8:8442:8464	10795389	1	True				
ANR	10795654	Identifier	XML_TOK_INVALID		10795389	0					
ANR	10795655	ExpressionStatement	ptr += MINBPC ( enc )	309:6:8480:8498	10795389	19	True				
ANR	10795656	AssignmentExpression	ptr += MINBPC ( enc )		10795389	0		+=			
ANR	10795657	Identifier	ptr		10795389	0					
ANR	10795658	CallExpression	MINBPC ( enc )		10795389	1					
ANR	10795659	Callee	MINBPC		10795389	0					
ANR	10795660	Identifier	MINBPC		10795389	0					
ANR	10795661	ArgumentList	enc		10795389	1					
ANR	10795662	Argument	enc		10795389	0					
ANR	10795663	Identifier	enc		10795389	0					
ANR	10795664	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	310:6:8506:8533	10795389	20	True				
ANR	10795665	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10795389	0					
ANR	10795666	Callee	REQUIRE_CHAR		10795389	0					
ANR	10795667	Identifier	REQUIRE_CHAR		10795389	0					
ANR	10795668	ArgumentList	enc		10795389	1					
ANR	10795669	Argument	enc		10795389	0					
ANR	10795670	Identifier	enc		10795389	0					
ANR	10795671	Argument	ptr		10795389	1					
ANR	10795672	Identifier	ptr		10795389	0					
ANR	10795673	Argument	end		10795389	2					
ANR	10795674	Identifier	end		10795389	0					
ANR	10795675	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10795389	21					
ANR	10795676	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"	311:10:8545:8576	10795389	0	True				
ANR	10795677	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10795389	0					
ANR	10795678	Callee	CHAR_MATCHES		10795389	0					
ANR	10795679	Identifier	CHAR_MATCHES		10795389	0					
ANR	10795680	ArgumentList	enc		10795389	1					
ANR	10795681	Argument	enc		10795389	0					
ANR	10795682	Identifier	enc		10795389	0					
ANR	10795683	Argument	ptr		10795389	1					
ANR	10795684	Identifier	ptr		10795389	0					
ANR	10795685	Argument	ASCII_GT		10795389	2					
ANR	10795686	Identifier	ASCII_GT		10795389	0					
ANR	10795687	CompoundStatement		44:44:1250:1250	10795389	1					
ANR	10795688	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	312:8:8589:8620	10795389	0	True				
ANR	10795689	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10795389	0		=			
ANR	10795690	UnaryOperationExpression	* nextTokPtr		10795389	0					
ANR	10795691	UnaryOperator	*		10795389	0					
ANR	10795692	Identifier	nextTokPtr		10795389	1					
ANR	10795693	AdditiveExpression	ptr + MINBPC ( enc )		10795389	1		+			
ANR	10795694	Identifier	ptr		10795389	0					
ANR	10795695	CallExpression	MINBPC ( enc )		10795389	1					
ANR	10795696	Callee	MINBPC		10795389	0					
ANR	10795697	Identifier	MINBPC		10795389	0					
ANR	10795698	ArgumentList	enc		10795389	1					
ANR	10795699	Argument	enc		10795389	0					
ANR	10795700	Identifier	enc		10795389	0					
ANR	10795701	ReturnStatement	return tok ;	313:8:8630:8640	10795389	1	True				
ANR	10795702	Identifier	tok		10795389	0					
ANR	10795703	Label	default :	316:4:8679:8686	10795389	22	True				
ANR	10795704	Identifier	default		10795389	0					
ANR	10795705	ExpressionStatement	* nextTokPtr = ptr	317:6:8694:8711	10795389	23	True				
ANR	10795706	AssignmentExpression	* nextTokPtr = ptr		10795389	0		=			
ANR	10795707	UnaryOperationExpression	* nextTokPtr		10795389	0					
ANR	10795708	UnaryOperator	*		10795389	0					
ANR	10795709	Identifier	nextTokPtr		10795389	1					
ANR	10795710	Identifier	ptr		10795389	1					
ANR	10795711	ReturnStatement	return XML_TOK_INVALID ;	318:6:8719:8741	10795389	24	True				
ANR	10795712	Identifier	XML_TOK_INVALID		10795389	0					
ANR	10795713	ReturnStatement	return XML_TOK_PARTIAL ;	321:2:8755:8777	10795389	5	True				
ANR	10795714	Identifier	XML_TOK_PARTIAL		10795389	0					
ANR	10795715	ReturnType	static int PTRCALL PREFIX		10795389	1					
ANR	10795716	Identifier	( scanPi )		10795389	2					
ANR	10795717	Identifier	scanPi		10795389	3					
ANR	10795718	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10795389	4					
ANR	10795719	Parameter	const ENCODING * enc	266:15:7233:7251	10795389	0	True				
ANR	10795720	ParameterType	const ENCODING *		10795389	0					
ANR	10795721	Identifier	enc		10795389	1					
ANR	10795722	Parameter	const char * ptr	266:36:7254:7268	10795389	1	True				
ANR	10795723	ParameterType	const char *		10795389	0					
ANR	10795724	Identifier	ptr		10795389	1					
ANR	10795725	Parameter	const char * end	267:15:7286:7300	10795389	2	True				
ANR	10795726	ParameterType	const char *		10795389	0					
ANR	10795727	Identifier	end		10795389	1					
ANR	10795728	Parameter	const char * * nextTokPtr	267:32:7303:7325	10795389	3	True				
ANR	10795729	ParameterType	const char * *		10795389	0					
ANR	10795730	Identifier	nextTokPtr		10795389	1					
ANR	10795731	CFGEntryNode	ENTRY		10795389		True				
ANR	10795732	CFGExitNode	EXIT		10795389		True				
ANR	10795733	Symbol	XML_TOK_INVALID		10795389						
ANR	10795734	Symbol	nextTokPtr		10795389						
ANR	10795735	Symbol	XML_TOK_PARTIAL		10795389						
ANR	10795736	Symbol	BYTE_TYPE		10795389						
ANR	10795737	Symbol	* nextTokPtr		10795389						
ANR	10795738	Symbol	MINBPC		10795389						
ANR	10795739	Symbol	ptr		10795389						
ANR	10795740	Symbol	target		10795389						
ANR	10795741	Symbol	checkPiTarget		10795389						
ANR	10795742	Symbol	tok		10795389						
ANR	10795743	Symbol	& tok		10795389						
ANR	10795744	Symbol	CHAR_MATCHES		10795389						
ANR	10795745	Symbol	PREFIX		10795389						
ANR	10795746	Symbol	ASCII_GT		10795389						
ANR	10795747	Symbol	end		10795389						
ANR	10795748	Symbol	enc		10795389						
ANR	10795749	Symbol	HAS_CHAR		10795389						
ANR	10795750	Function	scanCdataSection	324:0:8782:9353							
ANR	10795751	FunctionDef	"scanCdataSection (const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , const char * * nextTokPtr)"		10795750	0					
ANR	10795752	CompoundStatement		327:0:8941:9353	10795750	0					
ANR	10795753	Statement	static	328:2:8945:8950	10795750	0	True				
ANR	10795754	IdentifierDeclStatement	"const char CDATA_LSQB [ ] = { ASCII_C , ASCII_D , ASCII_A , ASCII_T , ASCII_A , ASCII_LSQB } ;"	328:9:8952:9074	10795750	1	True				
ANR	10795755	IdentifierDecl	"CDATA_LSQB [ ] = { ASCII_C , ASCII_D , ASCII_A , ASCII_T , ASCII_A , ASCII_LSQB }"		10795750	0					
ANR	10795756	IdentifierDeclType	const char [ ]		10795750	0					
ANR	10795757	Identifier	CDATA_LSQB		10795750	1					
ANR	10795758	AssignmentExpression	"CDATA_LSQB [ ] = { ASCII_C , ASCII_D , ASCII_A , ASCII_T , ASCII_A , ASCII_LSQB }"		10795750	2		=			
ANR	10795759	Identifier	CDATA_LSQB		10795750	0					
ANR	10795760	InitializerList	ASCII_C		10795750	1					
ANR	10795761	Identifier	ASCII_C		10795750	0					
ANR	10795762	Identifier	ASCII_D		10795750	1					
ANR	10795763	Identifier	ASCII_A		10795750	2					
ANR	10795764	Identifier	ASCII_T		10795750	3					
ANR	10795765	Identifier	ASCII_A		10795750	4					
ANR	10795766	Identifier	ASCII_LSQB		10795750	5					
ANR	10795767	IdentifierDeclStatement	int i ;	330:2:9078:9083	10795750	2	True				
ANR	10795768	IdentifierDecl	i		10795750	0					
ANR	10795769	IdentifierDeclType	int		10795750	0					
ANR	10795770	Identifier	i		10795750	1					
ANR	10795771	ExpressionStatement	"REQUIRE_CHARS ( enc , ptr , end , 6 )"	332:2:9102:9133	10795750	3	True				
ANR	10795772	CallExpression	"REQUIRE_CHARS ( enc , ptr , end , 6 )"		10795750	0					
ANR	10795773	Callee	REQUIRE_CHARS		10795750	0					
ANR	10795774	Identifier	REQUIRE_CHARS		10795750	0					
ANR	10795775	ArgumentList	enc		10795750	1					
ANR	10795776	Argument	enc		10795750	0					
ANR	10795777	Identifier	enc		10795750	0					
ANR	10795778	Argument	ptr		10795750	1					
ANR	10795779	Identifier	ptr		10795750	0					
ANR	10795780	Argument	end		10795750	2					
ANR	10795781	Identifier	end		10795750	0					
ANR	10795782	Argument	6		10795750	3					
ANR	10795783	PrimaryExpression	6		10795750	0					
ANR	10795784	ForStatement	"for ( i = 0 ; i < 6 ; i ++ , ptr += MINBPC ( enc ) )"		10795750	4					
ANR	10795785	ForInit	i = 0 ;	333:7:9142:9147	10795750	0	True				
ANR	10795786	AssignmentExpression	i = 0		10795750	0		=			
ANR	10795787	Identifier	i		10795750	0					
ANR	10795788	PrimaryExpression	0		10795750	1					
ANR	10795789	Condition	i < 6	333:14:9149:9153	10795750	1	True				
ANR	10795790	RelationalExpression	i < 6		10795750	0		<			
ANR	10795791	Identifier	i		10795750	0					
ANR	10795792	PrimaryExpression	6		10795750	1					
ANR	10795793	Expression	"i ++ , ptr += MINBPC ( enc )"	333:21:9156:9178	10795750	2	True				
ANR	10795794	PostIncDecOperationExpression	i ++		10795750	0					
ANR	10795795	Identifier	i		10795750	0					
ANR	10795796	IncDec	++		10795750	1					
ANR	10795797	AssignmentExpression	ptr += MINBPC ( enc )		10795750	1		+=			
ANR	10795798	Identifier	ptr		10795750	0					
ANR	10795799	CallExpression	MINBPC ( enc )		10795750	1					
ANR	10795800	Callee	MINBPC		10795750	0					
ANR	10795801	Identifier	MINBPC		10795750	0					
ANR	10795802	ArgumentList	enc		10795750	1					
ANR	10795803	Argument	enc		10795750	0					
ANR	10795804	Identifier	enc		10795750	0					
ANR	10795805	CompoundStatement		7:46:239:239	10795750	3					
ANR	10795806	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] ) )"		10795750	0					
ANR	10795807	Condition	"! CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] )"	334:8:9191:9228	10795750	0	True				
ANR	10795808	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] )"		10795750	0					
ANR	10795809	UnaryOperator	!		10795750	0					
ANR	10795810	CallExpression	"CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] )"		10795750	1					
ANR	10795811	Callee	CHAR_MATCHES		10795750	0					
ANR	10795812	Identifier	CHAR_MATCHES		10795750	0					
ANR	10795813	ArgumentList	enc		10795750	1					
ANR	10795814	Argument	enc		10795750	0					
ANR	10795815	Identifier	enc		10795750	0					
ANR	10795816	Argument	ptr		10795750	1					
ANR	10795817	Identifier	ptr		10795750	0					
ANR	10795818	Argument	CDATA_LSQB [ i ]		10795750	2					
ANR	10795819	ArrayIndexing	CDATA_LSQB [ i ]		10795750	0					
ANR	10795820	Identifier	CDATA_LSQB		10795750	0					
ANR	10795821	Identifier	i		10795750	1					
ANR	10795822	CompoundStatement		8:48:289:289	10795750	1					
ANR	10795823	ExpressionStatement	* nextTokPtr = ptr	335:6:9239:9256	10795750	0	True				
ANR	10795824	AssignmentExpression	* nextTokPtr = ptr		10795750	0		=			
ANR	10795825	UnaryOperationExpression	* nextTokPtr		10795750	0					
ANR	10795826	UnaryOperator	*		10795750	0					
ANR	10795827	Identifier	nextTokPtr		10795750	1					
ANR	10795828	Identifier	ptr		10795750	1					
ANR	10795829	ReturnStatement	return XML_TOK_INVALID ;	336:6:9264:9286	10795750	1	True				
ANR	10795830	Identifier	XML_TOK_INVALID		10795750	0					
ANR	10795831	ExpressionStatement	* nextTokPtr = ptr	339:2:9300:9317	10795750	5	True				
ANR	10795832	AssignmentExpression	* nextTokPtr = ptr		10795750	0		=			
ANR	10795833	UnaryOperationExpression	* nextTokPtr		10795750	0					
ANR	10795834	UnaryOperator	*		10795750	0					
ANR	10795835	Identifier	nextTokPtr		10795750	1					
ANR	10795836	Identifier	ptr		10795750	1					
ANR	10795837	ReturnStatement	return XML_TOK_CDATA_SECT_OPEN ;	340:2:9321:9351	10795750	6	True				
ANR	10795838	Identifier	XML_TOK_CDATA_SECT_OPEN		10795750	0					
ANR	10795839	ReturnType	static int PTRCALL PREFIX		10795750	1					
ANR	10795840	Identifier	( scanCdataSection )		10795750	2					
ANR	10795841	Identifier	scanCdataSection		10795750	3					
ANR	10795842	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , const char * * nextTokPtr"		10795750	4					
ANR	10795843	Parameter	const ENCODING * UNUSED_P ( enc )	325:25:8826:8854	10795750	0	True				
ANR	10795844	ParameterType	const ENCODING * ( enc )		10795750	0					
ANR	10795845	Identifier	UNUSED_P		10795750	1					
ANR	10795846	Parameter	const char * ptr	325:56:8857:8871	10795750	1	True				
ANR	10795847	ParameterType	const char *		10795750	0					
ANR	10795848	Identifier	ptr		10795750	1					
ANR	10795849	Parameter	const char * end	326:25:8899:8913	10795750	2	True				
ANR	10795850	ParameterType	const char *		10795750	0					
ANR	10795851	Identifier	end		10795750	1					
ANR	10795852	Parameter	const char * * nextTokPtr	326:42:8916:8938	10795750	3	True				
ANR	10795853	ParameterType	const char * *		10795750	0					
ANR	10795854	Identifier	nextTokPtr		10795750	1					
ANR	10795855	CFGEntryNode	ENTRY		10795750		True				
ANR	10795856	CFGExitNode	EXIT		10795750		True				
ANR	10795857	Symbol	UNUSED_P		10795750						
ANR	10795858	Symbol	XML_TOK_INVALID		10795750						
ANR	10795859	Symbol	nextTokPtr		10795750						
ANR	10795860	Symbol	* CDATA_LSQB		10795750						
ANR	10795861	Symbol	i		10795750						
ANR	10795862	Symbol	* nextTokPtr		10795750						
ANR	10795863	Symbol	CDATA_LSQB		10795750						
ANR	10795864	Symbol	MINBPC		10795750						
ANR	10795865	Symbol	ptr		10795750						
ANR	10795866	Symbol	ASCII_T		10795750						
ANR	10795867	Symbol	CHAR_MATCHES		10795750						
ANR	10795868	Symbol	* i		10795750						
ANR	10795869	Symbol	end		10795750						
ANR	10795870	Symbol	ASCII_A		10795750						
ANR	10795871	Symbol	enc		10795750						
ANR	10795872	Symbol	ASCII_C		10795750						
ANR	10795873	Symbol	ASCII_LSQB		10795750						
ANR	10795874	Symbol	XML_TOK_CDATA_SECT_OPEN		10795750						
ANR	10795875	Symbol	ASCII_D		10795750						
ANR	10795876	Function	cdataSectionTok	343:0:9356:11114							
ANR	10795877	FunctionDef	"cdataSectionTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10795876	0					
ANR	10795878	CompoundStatement		346:0:9503:11114	10795876	0					
ANR	10795879	IfStatement	if ( ptr >= end )		10795876	0					
ANR	10795880	Condition	ptr >= end	347:6:9511:9520	10795876	0	True				
ANR	10795881	RelationalExpression	ptr >= end		10795876	0		>=			
ANR	10795882	Identifier	ptr		10795876	0					
ANR	10795883	Identifier	end		10795876	1					
ANR	10795884	ReturnStatement	return XML_TOK_NONE ;	348:4:9527:9546	10795876	1	True				
ANR	10795885	Identifier	XML_TOK_NONE		10795876	0					
ANR	10795886	IfStatement	if ( MINBPC ( enc ) > 1 )		10795876	1					
ANR	10795887	Condition	MINBPC ( enc ) > 1	349:6:9554:9568	10795876	0	True				
ANR	10795888	RelationalExpression	MINBPC ( enc ) > 1		10795876	0		>			
ANR	10795889	CallExpression	MINBPC ( enc )		10795876	0					
ANR	10795890	Callee	MINBPC		10795876	0					
ANR	10795891	Identifier	MINBPC		10795876	0					
ANR	10795892	ArgumentList	enc		10795876	1					
ANR	10795893	Argument	enc		10795876	0					
ANR	10795894	Identifier	enc		10795876	0					
ANR	10795895	PrimaryExpression	1		10795876	1					
ANR	10795896	CompoundStatement		5:4:73:93	10795876	1					
ANR	10795897	IdentifierDeclStatement	size_t n = end - ptr ;	350:4:9577:9597	10795876	0	True				
ANR	10795898	IdentifierDecl	n = end - ptr		10795876	0					
ANR	10795899	IdentifierDeclType	size_t		10795876	0					
ANR	10795900	Identifier	n		10795876	1					
ANR	10795901	AssignmentExpression	n = end - ptr		10795876	2		=			
ANR	10795902	Identifier	n		10795876	0					
ANR	10795903	AdditiveExpression	end - ptr		10795876	1		-			
ANR	10795904	Identifier	end		10795876	0					
ANR	10795905	Identifier	ptr		10795876	1					
ANR	10795906	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		10795876	1					
ANR	10795907	Condition	n & ( MINBPC ( enc ) - 1 )	351:8:9607:9627	10795876	0	True				
ANR	10795908	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		10795876	0		&			
ANR	10795909	Identifier	n		10795876	0					
ANR	10795910	AdditiveExpression	MINBPC ( enc ) - 1		10795876	1		-			
ANR	10795911	CallExpression	MINBPC ( enc )		10795876	0					
ANR	10795912	Callee	MINBPC		10795876	0					
ANR	10795913	Identifier	MINBPC		10795876	0					
ANR	10795914	ArgumentList	enc		10795876	1					
ANR	10795915	Argument	enc		10795876	0					
ANR	10795916	Identifier	enc		10795876	0					
ANR	10795917	PrimaryExpression	1		10795876	1					
ANR	10795918	CompoundStatement		6:31:126:126	10795876	1					
ANR	10795919	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	352:6:9638:9661	10795876	0	True				
ANR	10795920	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		10795876	0		&=			
ANR	10795921	Identifier	n		10795876	0					
ANR	10795922	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		10795876	1					
ANR	10795923	UnaryOperator	~		10795876	0					
ANR	10795924	AdditiveExpression	MINBPC ( enc ) - 1		10795876	1		-			
ANR	10795925	CallExpression	MINBPC ( enc )		10795876	0					
ANR	10795926	Callee	MINBPC		10795876	0					
ANR	10795927	Identifier	MINBPC		10795876	0					
ANR	10795928	ArgumentList	enc		10795876	1					
ANR	10795929	Argument	enc		10795876	0					
ANR	10795930	Identifier	enc		10795876	0					
ANR	10795931	PrimaryExpression	1		10795876	1					
ANR	10795932	IfStatement	if ( n == 0 )		10795876	1					
ANR	10795933	Condition	n == 0	353:10:9673:9678	10795876	0	True				
ANR	10795934	EqualityExpression	n == 0		10795876	0		==			
ANR	10795935	Identifier	n		10795876	0					
ANR	10795936	PrimaryExpression	0		10795876	1					
ANR	10795937	ReturnStatement	return XML_TOK_PARTIAL ;	354:8:9689:9711	10795876	1	True				
ANR	10795938	Identifier	XML_TOK_PARTIAL		10795876	0					
ANR	10795939	ExpressionStatement	end = ptr + n	355:6:9719:9732	10795876	2	True				
ANR	10795940	AssignmentExpression	end = ptr + n		10795876	0		=			
ANR	10795941	Identifier	end		10795876	0					
ANR	10795942	AdditiveExpression	ptr + n		10795876	1		+			
ANR	10795943	Identifier	ptr		10795876	0					
ANR	10795944	Identifier	n		10795876	1					
ANR	10795945	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10795876	2					
ANR	10795946	Condition	"BYTE_TYPE ( enc , ptr )"	358:10:9754:9772	10795876	0	True				
ANR	10795947	CallExpression	"BYTE_TYPE ( enc , ptr )"		10795876	0					
ANR	10795948	Callee	BYTE_TYPE		10795876	0					
ANR	10795949	Identifier	BYTE_TYPE		10795876	0					
ANR	10795950	ArgumentList	enc		10795876	1					
ANR	10795951	Argument	enc		10795876	0					
ANR	10795952	Identifier	enc		10795876	0					
ANR	10795953	Argument	ptr		10795876	1					
ANR	10795954	Identifier	ptr		10795876	0					
ANR	10795955	CompoundStatement		13:31:271:271	10795876	1					
ANR	10795956	Label	case BT_RSQB :	359:2:9779:9791	10795876	0	True				
ANR	10795957	Identifier	BT_RSQB		10795876	0					
ANR	10795958	ExpressionStatement	ptr += MINBPC ( enc )	360:4:9797:9815	10795876	1	True				
ANR	10795959	AssignmentExpression	ptr += MINBPC ( enc )		10795876	0		+=			
ANR	10795960	Identifier	ptr		10795876	0					
ANR	10795961	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10795962	Callee	MINBPC		10795876	0					
ANR	10795963	Identifier	MINBPC		10795876	0					
ANR	10795964	ArgumentList	enc		10795876	1					
ANR	10795965	Argument	enc		10795876	0					
ANR	10795966	Identifier	enc		10795876	0					
ANR	10795967	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	361:4:9821:9848	10795876	2	True				
ANR	10795968	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10795876	0					
ANR	10795969	Callee	REQUIRE_CHAR		10795876	0					
ANR	10795970	Identifier	REQUIRE_CHAR		10795876	0					
ANR	10795971	ArgumentList	enc		10795876	1					
ANR	10795972	Argument	enc		10795876	0					
ANR	10795973	Identifier	enc		10795876	0					
ANR	10795974	Argument	ptr		10795876	1					
ANR	10795975	Identifier	ptr		10795876	0					
ANR	10795976	Argument	end		10795876	2					
ANR	10795977	Identifier	end		10795876	0					
ANR	10795978	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		10795876	3					
ANR	10795979	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	362:8:9858:9892	10795876	0	True				
ANR	10795980	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		10795876	0					
ANR	10795981	UnaryOperator	!		10795876	0					
ANR	10795982	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		10795876	1					
ANR	10795983	Callee	CHAR_MATCHES		10795876	0					
ANR	10795984	Identifier	CHAR_MATCHES		10795876	0					
ANR	10795985	ArgumentList	enc		10795876	1					
ANR	10795986	Argument	enc		10795876	0					
ANR	10795987	Identifier	enc		10795876	0					
ANR	10795988	Argument	ptr		10795876	1					
ANR	10795989	Identifier	ptr		10795876	0					
ANR	10795990	Argument	ASCII_RSQB		10795876	2					
ANR	10795991	Identifier	ASCII_RSQB		10795876	0					
ANR	10795992	BreakStatement	break ;	363:6:9901:9906	10795876	1	True				
ANR	10795993	ExpressionStatement	ptr += MINBPC ( enc )	364:4:9912:9930	10795876	4	True				
ANR	10795994	AssignmentExpression	ptr += MINBPC ( enc )		10795876	0		+=			
ANR	10795995	Identifier	ptr		10795876	0					
ANR	10795996	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10795997	Callee	MINBPC		10795876	0					
ANR	10795998	Identifier	MINBPC		10795876	0					
ANR	10795999	ArgumentList	enc		10795876	1					
ANR	10796000	Argument	enc		10795876	0					
ANR	10796001	Identifier	enc		10795876	0					
ANR	10796002	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	365:4:9936:9963	10795876	5	True				
ANR	10796003	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10795876	0					
ANR	10796004	Callee	REQUIRE_CHAR		10795876	0					
ANR	10796005	Identifier	REQUIRE_CHAR		10795876	0					
ANR	10796006	ArgumentList	enc		10795876	1					
ANR	10796007	Argument	enc		10795876	0					
ANR	10796008	Identifier	enc		10795876	0					
ANR	10796009	Argument	ptr		10795876	1					
ANR	10796010	Identifier	ptr		10795876	0					
ANR	10796011	Argument	end		10795876	2					
ANR	10796012	Identifier	end		10795876	0					
ANR	10796013	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10795876	6					
ANR	10796014	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	366:8:9973:10005	10795876	0	True				
ANR	10796015	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10795876	0					
ANR	10796016	UnaryOperator	!		10795876	0					
ANR	10796017	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10795876	1					
ANR	10796018	Callee	CHAR_MATCHES		10795876	0					
ANR	10796019	Identifier	CHAR_MATCHES		10795876	0					
ANR	10796020	ArgumentList	enc		10795876	1					
ANR	10796021	Argument	enc		10795876	0					
ANR	10796022	Identifier	enc		10795876	0					
ANR	10796023	Argument	ptr		10795876	1					
ANR	10796024	Identifier	ptr		10795876	0					
ANR	10796025	Argument	ASCII_GT		10795876	2					
ANR	10796026	Identifier	ASCII_GT		10795876	0					
ANR	10796027	CompoundStatement		21:43:504:504	10795876	1					
ANR	10796028	ExpressionStatement	ptr -= MINBPC ( enc )	367:6:10016:10034	10795876	0	True				
ANR	10796029	AssignmentExpression	ptr -= MINBPC ( enc )		10795876	0		-=			
ANR	10796030	Identifier	ptr		10795876	0					
ANR	10796031	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10796032	Callee	MINBPC		10795876	0					
ANR	10796033	Identifier	MINBPC		10795876	0					
ANR	10796034	ArgumentList	enc		10795876	1					
ANR	10796035	Argument	enc		10795876	0					
ANR	10796036	Identifier	enc		10795876	0					
ANR	10796037	BreakStatement	break ;	368:6:10042:10047	10795876	1	True				
ANR	10796038	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	370:4:10059:10090	10795876	7	True				
ANR	10796039	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10795876	0		=			
ANR	10796040	UnaryOperationExpression	* nextTokPtr		10795876	0					
ANR	10796041	UnaryOperator	*		10795876	0					
ANR	10796042	Identifier	nextTokPtr		10795876	1					
ANR	10796043	AdditiveExpression	ptr + MINBPC ( enc )		10795876	1		+			
ANR	10796044	Identifier	ptr		10795876	0					
ANR	10796045	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10796046	Callee	MINBPC		10795876	0					
ANR	10796047	Identifier	MINBPC		10795876	0					
ANR	10796048	ArgumentList	enc		10795876	1					
ANR	10796049	Argument	enc		10795876	0					
ANR	10796050	Identifier	enc		10795876	0					
ANR	10796051	ReturnStatement	return XML_TOK_CDATA_SECT_CLOSE ;	371:4:10096:10127	10795876	8	True				
ANR	10796052	Identifier	XML_TOK_CDATA_SECT_CLOSE		10795876	0					
ANR	10796053	Label	case BT_CR :	372:2:10131:10141	10795876	9	True				
ANR	10796054	Identifier	BT_CR		10795876	0					
ANR	10796055	ExpressionStatement	ptr += MINBPC ( enc )	373:4:10147:10165	10795876	10	True				
ANR	10796056	AssignmentExpression	ptr += MINBPC ( enc )		10795876	0		+=			
ANR	10796057	Identifier	ptr		10795876	0					
ANR	10796058	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10796059	Callee	MINBPC		10795876	0					
ANR	10796060	Identifier	MINBPC		10795876	0					
ANR	10796061	ArgumentList	enc		10795876	1					
ANR	10796062	Argument	enc		10795876	0					
ANR	10796063	Identifier	enc		10795876	0					
ANR	10796064	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	374:4:10171:10198	10795876	11	True				
ANR	10796065	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10795876	0					
ANR	10796066	Callee	REQUIRE_CHAR		10795876	0					
ANR	10796067	Identifier	REQUIRE_CHAR		10795876	0					
ANR	10796068	ArgumentList	enc		10795876	1					
ANR	10796069	Argument	enc		10795876	0					
ANR	10796070	Identifier	enc		10795876	0					
ANR	10796071	Argument	ptr		10795876	1					
ANR	10796072	Identifier	ptr		10795876	0					
ANR	10796073	Argument	end		10795876	2					
ANR	10796074	Identifier	end		10795876	0					
ANR	10796075	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		10795876	12					
ANR	10796076	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	375:8:10208:10235	10795876	0	True				
ANR	10796077	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		10795876	0		==			
ANR	10796078	CallExpression	"BYTE_TYPE ( enc , ptr )"		10795876	0					
ANR	10796079	Callee	BYTE_TYPE		10795876	0					
ANR	10796080	Identifier	BYTE_TYPE		10795876	0					
ANR	10796081	ArgumentList	enc		10795876	1					
ANR	10796082	Argument	enc		10795876	0					
ANR	10796083	Identifier	enc		10795876	0					
ANR	10796084	Argument	ptr		10795876	1					
ANR	10796085	Identifier	ptr		10795876	0					
ANR	10796086	Identifier	BT_LF		10795876	1					
ANR	10796087	ExpressionStatement	ptr += MINBPC ( enc )	376:6:10244:10262	10795876	1	True				
ANR	10796088	AssignmentExpression	ptr += MINBPC ( enc )		10795876	0		+=			
ANR	10796089	Identifier	ptr		10795876	0					
ANR	10796090	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10796091	Callee	MINBPC		10795876	0					
ANR	10796092	Identifier	MINBPC		10795876	0					
ANR	10796093	ArgumentList	enc		10795876	1					
ANR	10796094	Argument	enc		10795876	0					
ANR	10796095	Identifier	enc		10795876	0					
ANR	10796096	ExpressionStatement	* nextTokPtr = ptr	377:4:10268:10285	10795876	13	True				
ANR	10796097	AssignmentExpression	* nextTokPtr = ptr		10795876	0		=			
ANR	10796098	UnaryOperationExpression	* nextTokPtr		10795876	0					
ANR	10796099	UnaryOperator	*		10795876	0					
ANR	10796100	Identifier	nextTokPtr		10795876	1					
ANR	10796101	Identifier	ptr		10795876	1					
ANR	10796102	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	378:4:10291:10318	10795876	14	True				
ANR	10796103	Identifier	XML_TOK_DATA_NEWLINE		10795876	0					
ANR	10796104	Label	case BT_LF :	379:2:10322:10332	10795876	15	True				
ANR	10796105	Identifier	BT_LF		10795876	0					
ANR	10796106	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	380:4:10338:10369	10795876	16	True				
ANR	10796107	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10795876	0		=			
ANR	10796108	UnaryOperationExpression	* nextTokPtr		10795876	0					
ANR	10796109	UnaryOperator	*		10795876	0					
ANR	10796110	Identifier	nextTokPtr		10795876	1					
ANR	10796111	AdditiveExpression	ptr + MINBPC ( enc )		10795876	1		+			
ANR	10796112	Identifier	ptr		10795876	0					
ANR	10796113	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10796114	Callee	MINBPC		10795876	0					
ANR	10796115	Identifier	MINBPC		10795876	0					
ANR	10796116	ArgumentList	enc		10795876	1					
ANR	10796117	Argument	enc		10795876	0					
ANR	10796118	Identifier	enc		10795876	0					
ANR	10796119	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	381:4:10375:10402	10795876	17	True				
ANR	10796120	Identifier	XML_TOK_DATA_NEWLINE		10795876	0					
ANR	10796121	Statement	INVALID_CASES	382:2:10406:10418	10795876	18	True				
ANR	10796122	Statement	(	382:15:10419:10419	10795876	19	True				
ANR	10796123	Statement	ptr	382:16:10420:10422	10795876	20	True				
ANR	10796124	Statement	","	382:19:10423:10423	10795876	21	True				
ANR	10796125	Statement	nextTokPtr	382:21:10425:10434	10795876	22	True				
ANR	10796126	Statement	)	382:31:10435:10435	10795876	23	True				
ANR	10796127	Label	default :	383:2:10439:10446	10795876	24	True				
ANR	10796128	Identifier	default		10795876	0					
ANR	10796129	ExpressionStatement	ptr += MINBPC ( enc )	384:4:10452:10470	10795876	25	True				
ANR	10796130	AssignmentExpression	ptr += MINBPC ( enc )		10795876	0		+=			
ANR	10796131	Identifier	ptr		10795876	0					
ANR	10796132	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10796133	Callee	MINBPC		10795876	0					
ANR	10796134	Identifier	MINBPC		10795876	0					
ANR	10796135	ArgumentList	enc		10795876	1					
ANR	10796136	Argument	enc		10795876	0					
ANR	10796137	Identifier	enc		10795876	0					
ANR	10796138	BreakStatement	break ;	385:4:10476:10481	10795876	26	True				
ANR	10796139	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10795876	3					
ANR	10796140	Condition	"HAS_CHAR ( enc , ptr , end )"	387:9:10496:10518	10795876	0	True				
ANR	10796141	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10795876	0					
ANR	10796142	Callee	HAS_CHAR		10795876	0					
ANR	10796143	Identifier	HAS_CHAR		10795876	0					
ANR	10796144	ArgumentList	enc		10795876	1					
ANR	10796145	Argument	enc		10795876	0					
ANR	10796146	Identifier	enc		10795876	0					
ANR	10796147	Argument	ptr		10795876	1					
ANR	10796148	Identifier	ptr		10795876	0					
ANR	10796149	Argument	end		10795876	2					
ANR	10796150	Identifier	end		10795876	0					
ANR	10796151	CompoundStatement		42:34:1017:1017	10795876	1					
ANR	10796152	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10795876	0					
ANR	10796153	Condition	"BYTE_TYPE ( enc , ptr )"	388:12:10535:10553	10795876	0	True				
ANR	10796154	CallExpression	"BYTE_TYPE ( enc , ptr )"		10795876	0					
ANR	10796155	Callee	BYTE_TYPE		10795876	0					
ANR	10796156	Identifier	BYTE_TYPE		10795876	0					
ANR	10796157	ArgumentList	enc		10795876	1					
ANR	10796158	Argument	enc		10795876	0					
ANR	10796159	Identifier	enc		10795876	0					
ANR	10796160	Argument	ptr		10795876	1					
ANR	10796161	Identifier	ptr		10795876	0					
ANR	10796162	CompoundStatement		43:33:1052:1052	10795876	1					
ANR	10796163	Statement	define	389:1:10559:10564	10795876	0	True				
ANR	10796164	Statement	LEAD_CASE	389:8:10566:10574	10795876	1	True				
ANR	10796165	Statement	(	389:17:10575:10575	10795876	2	True				
ANR	10796166	Statement	n	389:18:10576:10576	10795876	3	True				
ANR	10796167	Statement	)	389:19:10577:10577	10795876	4	True				
ANR	10796168	Statement	case	390:4:10585:10588	10795876	5	True				
ANR	10796169	Statement	BT_LEAD	390:9:10590:10596	10795876	6	True				
ANR	10796170	Label	n :	390:20:10601:10602	10795876	7	True				
ANR	10796171	Identifier	n		10795876	0					
ANR	10796172	IfStatement	"if ( end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n ) )"		10795876	8					
ANR	10796173	Condition	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"	391:10:10616:10660	10795876	0	True				
ANR	10796174	OrExpression	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"		10795876	0		||			
ANR	10796175	RelationalExpression	end - ptr < n		10795876	0		<			
ANR	10796176	AdditiveExpression	end - ptr		10795876	0		-			
ANR	10796177	Identifier	end		10795876	0					
ANR	10796178	Identifier	ptr		10795876	1					
ANR	10796179	Identifier	n		10795876	1					
ANR	10796180	CallExpression	"IS_INVALID_CHAR ( enc , ptr , n )"		10795876	1					
ANR	10796181	Callee	IS_INVALID_CHAR		10795876	0					
ANR	10796182	Identifier	IS_INVALID_CHAR		10795876	0					
ANR	10796183	ArgumentList	enc		10795876	1					
ANR	10796184	Argument	enc		10795876	0					
ANR	10796185	Identifier	enc		10795876	0					
ANR	10796186	Argument	ptr		10795876	1					
ANR	10796187	Identifier	ptr		10795876	0					
ANR	10796188	Argument	n		10795876	2					
ANR	10796189	Identifier	n		10795876	0					
ANR	10796190	CompoundStatement		46:57:1159:1159	10795876	1					
ANR	10796191	ExpressionStatement	* nextTokPtr = ptr	392:8:10675:10692	10795876	0	True				
ANR	10796192	AssignmentExpression	* nextTokPtr = ptr		10795876	0		=			
ANR	10796193	UnaryOperationExpression	* nextTokPtr		10795876	0					
ANR	10796194	UnaryOperator	*		10795876	0					
ANR	10796195	Identifier	nextTokPtr		10795876	1					
ANR	10796196	Identifier	ptr		10795876	1					
ANR	10796197	ReturnStatement	return XML_TOK_DATA_CHARS ;	393:8:10704:10729	10795876	1	True				
ANR	10796198	Identifier	XML_TOK_DATA_CHARS		10795876	0					
ANR	10796199	ExpressionStatement	ptr += n	395:6:10749:10757	10795876	9	True				
ANR	10796200	AssignmentExpression	ptr += n		10795876	0		+=			
ANR	10796201	Identifier	ptr		10795876	0					
ANR	10796202	Identifier	n		10795876	1					
ANR	10796203	BreakStatement	break ;	396:6:10767:10772	10795876	10	True				
ANR	10796204	Statement	LEAD_CASE	397:4:10778:10786	10795876	11	True				
ANR	10796205	Statement	(	397:13:10787:10787	10795876	12	True				
ANR	10796206	Statement	2	397:14:10788:10788	10795876	13	True				
ANR	10796207	Statement	)	397:15:10789:10789	10795876	14	True				
ANR	10796208	Statement	LEAD_CASE	397:17:10791:10799	10795876	15	True				
ANR	10796209	Statement	(	397:26:10800:10800	10795876	16	True				
ANR	10796210	Statement	3	397:27:10801:10801	10795876	17	True				
ANR	10796211	Statement	)	397:28:10802:10802	10795876	18	True				
ANR	10796212	Statement	LEAD_CASE	397:30:10804:10812	10795876	19	True				
ANR	10796213	Statement	(	397:39:10813:10813	10795876	20	True				
ANR	10796214	Statement	4	397:40:10814:10814	10795876	21	True				
ANR	10796215	Statement	)	397:41:10815:10815	10795876	22	True				
ANR	10796216	Statement	undef	398:1:10818:10822	10795876	23	True				
ANR	10796217	Statement	LEAD_CASE	398:7:10824:10832	10795876	24	True				
ANR	10796218	Label	case BT_NONXML :	399:4:10838:10852	10795876	25	True				
ANR	10796219	Identifier	BT_NONXML		10795876	0					
ANR	10796220	Label	case BT_MALFORM :	400:4:10858:10873	10795876	26	True				
ANR	10796221	Identifier	BT_MALFORM		10795876	0					
ANR	10796222	Label	case BT_TRAIL :	401:4:10879:10892	10795876	27	True				
ANR	10796223	Identifier	BT_TRAIL		10795876	0					
ANR	10796224	Label	case BT_CR :	402:4:10898:10908	10795876	28	True				
ANR	10796225	Identifier	BT_CR		10795876	0					
ANR	10796226	Label	case BT_LF :	403:4:10914:10924	10795876	29	True				
ANR	10796227	Identifier	BT_LF		10795876	0					
ANR	10796228	Label	case BT_RSQB :	404:4:10930:10942	10795876	30	True				
ANR	10796229	Identifier	BT_RSQB		10795876	0					
ANR	10796230	ExpressionStatement	* nextTokPtr = ptr	405:6:10950:10967	10795876	31	True				
ANR	10796231	AssignmentExpression	* nextTokPtr = ptr		10795876	0		=			
ANR	10796232	UnaryOperationExpression	* nextTokPtr		10795876	0					
ANR	10796233	UnaryOperator	*		10795876	0					
ANR	10796234	Identifier	nextTokPtr		10795876	1					
ANR	10796235	Identifier	ptr		10795876	1					
ANR	10796236	ReturnStatement	return XML_TOK_DATA_CHARS ;	406:6:10975:11000	10795876	32	True				
ANR	10796237	Identifier	XML_TOK_DATA_CHARS		10795876	0					
ANR	10796238	Label	default :	407:4:11006:11013	10795876	33	True				
ANR	10796239	Identifier	default		10795876	0					
ANR	10796240	ExpressionStatement	ptr += MINBPC ( enc )	408:6:11021:11039	10795876	34	True				
ANR	10796241	AssignmentExpression	ptr += MINBPC ( enc )		10795876	0		+=			
ANR	10796242	Identifier	ptr		10795876	0					
ANR	10796243	CallExpression	MINBPC ( enc )		10795876	1					
ANR	10796244	Callee	MINBPC		10795876	0					
ANR	10796245	Identifier	MINBPC		10795876	0					
ANR	10796246	ArgumentList	enc		10795876	1					
ANR	10796247	Argument	enc		10795876	0					
ANR	10796248	Identifier	enc		10795876	0					
ANR	10796249	BreakStatement	break ;	409:6:11047:11052	10795876	35	True				
ANR	10796250	ExpressionStatement	* nextTokPtr = ptr	412:2:11066:11083	10795876	4	True				
ANR	10796251	AssignmentExpression	* nextTokPtr = ptr		10795876	0		=			
ANR	10796252	UnaryOperationExpression	* nextTokPtr		10795876	0					
ANR	10796253	UnaryOperator	*		10795876	0					
ANR	10796254	Identifier	nextTokPtr		10795876	1					
ANR	10796255	Identifier	ptr		10795876	1					
ANR	10796256	ReturnStatement	return XML_TOK_DATA_CHARS ;	413:2:11087:11112	10795876	5	True				
ANR	10796257	Identifier	XML_TOK_DATA_CHARS		10795876	0					
ANR	10796258	ReturnType	static int PTRCALL PREFIX		10795876	1					
ANR	10796259	Identifier	( cdataSectionTok )		10795876	2					
ANR	10796260	Identifier	cdataSectionTok		10795876	3					
ANR	10796261	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10795876	4					
ANR	10796262	Parameter	const ENCODING * enc	344:24:9399:9417	10795876	0	True				
ANR	10796263	ParameterType	const ENCODING *		10795876	0					
ANR	10796264	Identifier	enc		10795876	1					
ANR	10796265	Parameter	const char * ptr	344:45:9420:9434	10795876	1	True				
ANR	10796266	ParameterType	const char *		10795876	0					
ANR	10796267	Identifier	ptr		10795876	1					
ANR	10796268	Parameter	const char * end	345:24:9461:9475	10795876	2	True				
ANR	10796269	ParameterType	const char *		10795876	0					
ANR	10796270	Identifier	end		10795876	1					
ANR	10796271	Parameter	const char * * nextTokPtr	345:41:9478:9500	10795876	3	True				
ANR	10796272	ParameterType	const char * *		10795876	0					
ANR	10796273	Identifier	nextTokPtr		10795876	1					
ANR	10796274	CFGEntryNode	ENTRY		10795876		True				
ANR	10796275	CFGExitNode	EXIT		10795876		True				
ANR	10796276	Symbol	XML_TOK_DATA_CHARS		10795876						
ANR	10796277	Symbol	nextTokPtr		10795876						
ANR	10796278	Symbol	XML_TOK_PARTIAL		10795876						
ANR	10796279	Symbol	BYTE_TYPE		10795876						
ANR	10796280	Symbol	* nextTokPtr		10795876						
ANR	10796281	Symbol	IS_INVALID_CHAR		10795876						
ANR	10796282	Symbol	MINBPC		10795876						
ANR	10796283	Symbol	XML_TOK_CDATA_SECT_CLOSE		10795876						
ANR	10796284	Symbol	n		10795876						
ANR	10796285	Symbol	BT_LF		10795876						
ANR	10796286	Symbol	ptr		10795876						
ANR	10796287	Symbol	CHAR_MATCHES		10795876						
ANR	10796288	Symbol	XML_TOK_DATA_NEWLINE		10795876						
ANR	10796289	Symbol	ASCII_GT		10795876						
ANR	10796290	Symbol	XML_TOK_NONE		10795876						
ANR	10796291	Symbol	end		10795876						
ANR	10796292	Symbol	enc		10795876						
ANR	10796293	Symbol	HAS_CHAR		10795876						
ANR	10796294	Symbol	ASCII_RSQB		10795876						
ANR	10796295	Function	scanEndTag	418:0:11163:12398							
ANR	10796296	FunctionDef	"scanEndTag (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10796295	0					
ANR	10796297	CompoundStatement		421:0:11300:12398	10796295	0					
ANR	10796298	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	422:2:11304:11331	10796295	0	True				
ANR	10796299	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10796295	0					
ANR	10796300	Callee	REQUIRE_CHAR		10796295	0					
ANR	10796301	Identifier	REQUIRE_CHAR		10796295	0					
ANR	10796302	ArgumentList	enc		10796295	1					
ANR	10796303	Argument	enc		10796295	0					
ANR	10796304	Identifier	enc		10796295	0					
ANR	10796305	Argument	ptr		10796295	1					
ANR	10796306	Identifier	ptr		10796295	0					
ANR	10796307	Argument	end		10796295	2					
ANR	10796308	Identifier	end		10796295	0					
ANR	10796309	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796295	1					
ANR	10796310	Condition	"BYTE_TYPE ( enc , ptr )"	423:10:11343:11361	10796295	0	True				
ANR	10796311	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796295	0					
ANR	10796312	Callee	BYTE_TYPE		10796295	0					
ANR	10796313	Identifier	BYTE_TYPE		10796295	0					
ANR	10796314	ArgumentList	enc		10796295	1					
ANR	10796315	Argument	enc		10796295	0					
ANR	10796316	Identifier	enc		10796295	0					
ANR	10796317	Argument	ptr		10796295	1					
ANR	10796318	Identifier	ptr		10796295	0					
ANR	10796319	CompoundStatement		3:31:63:63	10796295	1					
ANR	10796320	Statement	CHECK_NMSTRT_CASES	424:2:11368:11385	10796295	0	True				
ANR	10796321	Statement	(	424:20:11386:11386	10796295	1	True				
ANR	10796322	Statement	enc	424:21:11387:11389	10796295	2	True				
ANR	10796323	Statement	","	424:24:11390:11390	10796295	3	True				
ANR	10796324	Statement	ptr	424:26:11392:11394	10796295	4	True				
ANR	10796325	Statement	","	424:29:11395:11395	10796295	5	True				
ANR	10796326	Statement	end	424:31:11397:11399	10796295	6	True				
ANR	10796327	Statement	","	424:34:11400:11400	10796295	7	True				
ANR	10796328	Statement	nextTokPtr	424:36:11402:11411	10796295	8	True				
ANR	10796329	Statement	)	424:46:11412:11412	10796295	9	True				
ANR	10796330	Label	default :	425:2:11416:11423	10796295	10	True				
ANR	10796331	Identifier	default		10796295	0					
ANR	10796332	ExpressionStatement	* nextTokPtr = ptr	426:4:11429:11446	10796295	11	True				
ANR	10796333	AssignmentExpression	* nextTokPtr = ptr		10796295	0		=			
ANR	10796334	UnaryOperationExpression	* nextTokPtr		10796295	0					
ANR	10796335	UnaryOperator	*		10796295	0					
ANR	10796336	Identifier	nextTokPtr		10796295	1					
ANR	10796337	Identifier	ptr		10796295	1					
ANR	10796338	ReturnStatement	return XML_TOK_INVALID ;	427:4:11452:11474	10796295	12	True				
ANR	10796339	Identifier	XML_TOK_INVALID		10796295	0					
ANR	10796340	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10796295	2					
ANR	10796341	Condition	"HAS_CHAR ( enc , ptr , end )"	429:9:11489:11511	10796295	0	True				
ANR	10796342	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10796295	0					
ANR	10796343	Callee	HAS_CHAR		10796295	0					
ANR	10796344	Identifier	HAS_CHAR		10796295	0					
ANR	10796345	ArgumentList	enc		10796295	1					
ANR	10796346	Argument	enc		10796295	0					
ANR	10796347	Identifier	enc		10796295	0					
ANR	10796348	Argument	ptr		10796295	1					
ANR	10796349	Identifier	ptr		10796295	0					
ANR	10796350	Argument	end		10796295	2					
ANR	10796351	Identifier	end		10796295	0					
ANR	10796352	CompoundStatement		9:34:213:213	10796295	1					
ANR	10796353	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796295	0					
ANR	10796354	Condition	"BYTE_TYPE ( enc , ptr )"	430:12:11528:11546	10796295	0	True				
ANR	10796355	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796295	0					
ANR	10796356	Callee	BYTE_TYPE		10796295	0					
ANR	10796357	Identifier	BYTE_TYPE		10796295	0					
ANR	10796358	ArgumentList	enc		10796295	1					
ANR	10796359	Argument	enc		10796295	0					
ANR	10796360	Identifier	enc		10796295	0					
ANR	10796361	Argument	ptr		10796295	1					
ANR	10796362	Identifier	ptr		10796295	0					
ANR	10796363	CompoundStatement		10:33:248:248	10796295	1					
ANR	10796364	Statement	CHECK_NAME_CASES	431:4:11555:11570	10796295	0	True				
ANR	10796365	Statement	(	431:20:11571:11571	10796295	1	True				
ANR	10796366	Statement	enc	431:21:11572:11574	10796295	2	True				
ANR	10796367	Statement	","	431:24:11575:11575	10796295	3	True				
ANR	10796368	Statement	ptr	431:26:11577:11579	10796295	4	True				
ANR	10796369	Statement	","	431:29:11580:11580	10796295	5	True				
ANR	10796370	Statement	end	431:31:11582:11584	10796295	6	True				
ANR	10796371	Statement	","	431:34:11585:11585	10796295	7	True				
ANR	10796372	Statement	nextTokPtr	431:36:11587:11596	10796295	8	True				
ANR	10796373	Statement	)	431:46:11597:11597	10796295	9	True				
ANR	10796374	Label	case BT_S :	432:4:11603:11612	10796295	10	True				
ANR	10796375	Identifier	BT_S		10796295	0					
ANR	10796376	Label	case BT_CR :	432:15:11614:11624	10796295	11	True				
ANR	10796377	Identifier	BT_CR		10796295	0					
ANR	10796378	Label	case BT_LF :	432:27:11626:11636	10796295	12	True				
ANR	10796379	Identifier	BT_LF		10796295	0					
ANR	10796380	ForStatement	"for ( ptr += MINBPC ( enc ) ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		10796295	13					
ANR	10796381	ForInit	ptr += MINBPC ( enc ) ;	433:11:11649:11667	10796295	0	True				
ANR	10796382	AssignmentExpression	ptr += MINBPC ( enc )		10796295	0		+=			
ANR	10796383	Identifier	ptr		10796295	0					
ANR	10796384	CallExpression	MINBPC ( enc )		10796295	1					
ANR	10796385	Callee	MINBPC		10796295	0					
ANR	10796386	Identifier	MINBPC		10796295	0					
ANR	10796387	ArgumentList	enc		10796295	1					
ANR	10796388	Argument	enc		10796295	0					
ANR	10796389	Identifier	enc		10796295	0					
ANR	10796390	Condition	"HAS_CHAR ( enc , ptr , end )"	433:31:11669:11691	10796295	1	True				
ANR	10796391	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10796295	0					
ANR	10796392	Callee	HAS_CHAR		10796295	0					
ANR	10796393	Identifier	HAS_CHAR		10796295	0					
ANR	10796394	ArgumentList	enc		10796295	1					
ANR	10796395	Argument	enc		10796295	0					
ANR	10796396	Identifier	enc		10796295	0					
ANR	10796397	Argument	ptr		10796295	1					
ANR	10796398	Identifier	ptr		10796295	0					
ANR	10796399	Argument	end		10796295	2					
ANR	10796400	Identifier	end		10796295	0					
ANR	10796401	AssignmentExpression	ptr += MINBPC ( enc )	433:56:11694:11711	10796295	2	True	+=			
ANR	10796402	Identifier	ptr		10796295	0					
ANR	10796403	CallExpression	MINBPC ( enc )		10796295	1					
ANR	10796404	Callee	MINBPC		10796295	0					
ANR	10796405	Identifier	MINBPC		10796295	0					
ANR	10796406	ArgumentList	enc		10796295	1					
ANR	10796407	Argument	enc		10796295	0					
ANR	10796408	Identifier	enc		10796295	0					
ANR	10796409	CompoundStatement		13:76:413:413	10796295	3					
ANR	10796410	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796295	0					
ANR	10796411	Condition	"BYTE_TYPE ( enc , ptr )"	434:16:11732:11750	10796295	0	True				
ANR	10796412	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796295	0					
ANR	10796413	Callee	BYTE_TYPE		10796295	0					
ANR	10796414	Identifier	BYTE_TYPE		10796295	0					
ANR	10796415	ArgumentList	enc		10796295	1					
ANR	10796416	Argument	enc		10796295	0					
ANR	10796417	Identifier	enc		10796295	0					
ANR	10796418	Argument	ptr		10796295	1					
ANR	10796419	Identifier	ptr		10796295	0					
ANR	10796420	CompoundStatement		14:37:452:452	10796295	1					
ANR	10796421	Label	case BT_S :	435:8:11763:11772	10796295	0	True				
ANR	10796422	Identifier	BT_S		10796295	0					
ANR	10796423	Label	case BT_CR :	435:19:11774:11784	10796295	1	True				
ANR	10796424	Identifier	BT_CR		10796295	0					
ANR	10796425	Label	case BT_LF :	435:31:11786:11796	10796295	2	True				
ANR	10796426	Identifier	BT_LF		10796295	0					
ANR	10796427	BreakStatement	break ;	436:10:11808:11813	10796295	3	True				
ANR	10796428	Label	case BT_GT :	437:8:11823:11833	10796295	4	True				
ANR	10796429	Identifier	BT_GT		10796295	0					
ANR	10796430	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	438:10:11845:11876	10796295	5	True				
ANR	10796431	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10796295	0		=			
ANR	10796432	UnaryOperationExpression	* nextTokPtr		10796295	0					
ANR	10796433	UnaryOperator	*		10796295	0					
ANR	10796434	Identifier	nextTokPtr		10796295	1					
ANR	10796435	AdditiveExpression	ptr + MINBPC ( enc )		10796295	1		+			
ANR	10796436	Identifier	ptr		10796295	0					
ANR	10796437	CallExpression	MINBPC ( enc )		10796295	1					
ANR	10796438	Callee	MINBPC		10796295	0					
ANR	10796439	Identifier	MINBPC		10796295	0					
ANR	10796440	ArgumentList	enc		10796295	1					
ANR	10796441	Argument	enc		10796295	0					
ANR	10796442	Identifier	enc		10796295	0					
ANR	10796443	ReturnStatement	return XML_TOK_END_TAG ;	439:10:11888:11910	10796295	6	True				
ANR	10796444	Identifier	XML_TOK_END_TAG		10796295	0					
ANR	10796445	Label	default :	440:8:11920:11927	10796295	7	True				
ANR	10796446	Identifier	default		10796295	0					
ANR	10796447	ExpressionStatement	* nextTokPtr = ptr	441:10:11939:11956	10796295	8	True				
ANR	10796448	AssignmentExpression	* nextTokPtr = ptr		10796295	0		=			
ANR	10796449	UnaryOperationExpression	* nextTokPtr		10796295	0					
ANR	10796450	UnaryOperator	*		10796295	0					
ANR	10796451	Identifier	nextTokPtr		10796295	1					
ANR	10796452	Identifier	ptr		10796295	1					
ANR	10796453	ReturnStatement	return XML_TOK_INVALID ;	442:10:11968:11990	10796295	9	True				
ANR	10796454	Identifier	XML_TOK_INVALID		10796295	0					
ANR	10796455	ReturnStatement	return XML_TOK_PARTIAL ;	445:6:12016:12038	10796295	14	True				
ANR	10796456	Identifier	XML_TOK_PARTIAL		10796295	0					
ANR	10796457	Label	case BT_COLON :	447:4:12058:12071	10796295	15	True				
ANR	10796458	Identifier	BT_COLON		10796295	0					
ANR	10796459	ExpressionStatement	ptr += MINBPC ( enc )	450:6:12169:12187	10796295	16	True				
ANR	10796460	AssignmentExpression	ptr += MINBPC ( enc )		10796295	0		+=			
ANR	10796461	Identifier	ptr		10796295	0					
ANR	10796462	CallExpression	MINBPC ( enc )		10796295	1					
ANR	10796463	Callee	MINBPC		10796295	0					
ANR	10796464	Identifier	MINBPC		10796295	0					
ANR	10796465	ArgumentList	enc		10796295	1					
ANR	10796466	Argument	enc		10796295	0					
ANR	10796467	Identifier	enc		10796295	0					
ANR	10796468	BreakStatement	break ;	451:6:12195:12200	10796295	17	True				
ANR	10796469	Label	case BT_GT :	453:4:12213:12223	10796295	18	True				
ANR	10796470	Identifier	BT_GT		10796295	0					
ANR	10796471	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	454:6:12231:12262	10796295	19	True				
ANR	10796472	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10796295	0		=			
ANR	10796473	UnaryOperationExpression	* nextTokPtr		10796295	0					
ANR	10796474	UnaryOperator	*		10796295	0					
ANR	10796475	Identifier	nextTokPtr		10796295	1					
ANR	10796476	AdditiveExpression	ptr + MINBPC ( enc )		10796295	1		+			
ANR	10796477	Identifier	ptr		10796295	0					
ANR	10796478	CallExpression	MINBPC ( enc )		10796295	1					
ANR	10796479	Callee	MINBPC		10796295	0					
ANR	10796480	Identifier	MINBPC		10796295	0					
ANR	10796481	ArgumentList	enc		10796295	1					
ANR	10796482	Argument	enc		10796295	0					
ANR	10796483	Identifier	enc		10796295	0					
ANR	10796484	ReturnStatement	return XML_TOK_END_TAG ;	455:6:12270:12292	10796295	20	True				
ANR	10796485	Identifier	XML_TOK_END_TAG		10796295	0					
ANR	10796486	Label	default :	456:4:12298:12305	10796295	21	True				
ANR	10796487	Identifier	default		10796295	0					
ANR	10796488	ExpressionStatement	* nextTokPtr = ptr	457:6:12313:12330	10796295	22	True				
ANR	10796489	AssignmentExpression	* nextTokPtr = ptr		10796295	0		=			
ANR	10796490	UnaryOperationExpression	* nextTokPtr		10796295	0					
ANR	10796491	UnaryOperator	*		10796295	0					
ANR	10796492	Identifier	nextTokPtr		10796295	1					
ANR	10796493	Identifier	ptr		10796295	1					
ANR	10796494	ReturnStatement	return XML_TOK_INVALID ;	458:6:12338:12360	10796295	23	True				
ANR	10796495	Identifier	XML_TOK_INVALID		10796295	0					
ANR	10796496	ReturnStatement	return XML_TOK_PARTIAL ;	461:2:12374:12396	10796295	3	True				
ANR	10796497	Identifier	XML_TOK_PARTIAL		10796295	0					
ANR	10796498	ReturnType	static int PTRCALL PREFIX		10796295	1					
ANR	10796499	Identifier	( scanEndTag )		10796295	2					
ANR	10796500	Identifier	scanEndTag		10796295	3					
ANR	10796501	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10796295	4					
ANR	10796502	Parameter	const ENCODING * enc	419:19:11201:11219	10796295	0	True				
ANR	10796503	ParameterType	const ENCODING *		10796295	0					
ANR	10796504	Identifier	enc		10796295	1					
ANR	10796505	Parameter	const char * ptr	419:40:11222:11236	10796295	1	True				
ANR	10796506	ParameterType	const char *		10796295	0					
ANR	10796507	Identifier	ptr		10796295	1					
ANR	10796508	Parameter	const char * end	420:19:11258:11272	10796295	2	True				
ANR	10796509	ParameterType	const char *		10796295	0					
ANR	10796510	Identifier	end		10796295	1					
ANR	10796511	Parameter	const char * * nextTokPtr	420:36:11275:11297	10796295	3	True				
ANR	10796512	ParameterType	const char * *		10796295	0					
ANR	10796513	Identifier	nextTokPtr		10796295	1					
ANR	10796514	CFGEntryNode	ENTRY		10796295		True				
ANR	10796515	CFGExitNode	EXIT		10796295		True				
ANR	10796516	Symbol	XML_TOK_INVALID		10796295						
ANR	10796517	Symbol	nextTokPtr		10796295						
ANR	10796518	Symbol	XML_TOK_PARTIAL		10796295						
ANR	10796519	Symbol	BYTE_TYPE		10796295						
ANR	10796520	Symbol	XML_TOK_END_TAG		10796295						
ANR	10796521	Symbol	* nextTokPtr		10796295						
ANR	10796522	Symbol	end		10796295						
ANR	10796523	Symbol	enc		10796295						
ANR	10796524	Symbol	HAS_CHAR		10796295						
ANR	10796525	Symbol	MINBPC		10796295						
ANR	10796526	Symbol	ptr		10796295						
ANR	10796527	Function	scanHexCharRef	466:0:12448:13166							
ANR	10796528	FunctionDef	"scanHexCharRef (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10796527	0					
ANR	10796529	CompoundStatement		469:0:12593:13166	10796527	0					
ANR	10796530	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) )"		10796527	0					
ANR	10796531	Condition	"HAS_CHAR ( enc , ptr , end )"	470:6:12601:12623	10796527	0	True				
ANR	10796532	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10796527	0					
ANR	10796533	Callee	HAS_CHAR		10796527	0					
ANR	10796534	Identifier	HAS_CHAR		10796527	0					
ANR	10796535	ArgumentList	enc		10796527	1					
ANR	10796536	Argument	enc		10796527	0					
ANR	10796537	Identifier	enc		10796527	0					
ANR	10796538	Argument	ptr		10796527	1					
ANR	10796539	Identifier	ptr		10796527	0					
ANR	10796540	Argument	end		10796527	2					
ANR	10796541	Identifier	end		10796527	0					
ANR	10796542	CompoundStatement		2:31:32:32	10796527	1					
ANR	10796543	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796527	0					
ANR	10796544	Condition	"BYTE_TYPE ( enc , ptr )"	471:12:12640:12658	10796527	0	True				
ANR	10796545	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796527	0					
ANR	10796546	Callee	BYTE_TYPE		10796527	0					
ANR	10796547	Identifier	BYTE_TYPE		10796527	0					
ANR	10796548	ArgumentList	enc		10796527	1					
ANR	10796549	Argument	enc		10796527	0					
ANR	10796550	Identifier	enc		10796527	0					
ANR	10796551	Argument	ptr		10796527	1					
ANR	10796552	Identifier	ptr		10796527	0					
ANR	10796553	CompoundStatement		3:33:67:67	10796527	1					
ANR	10796554	Label	case BT_DIGIT :	472:4:12667:12680	10796527	0	True				
ANR	10796555	Identifier	BT_DIGIT		10796527	0					
ANR	10796556	Label	case BT_HEX :	473:4:12686:12697	10796527	1	True				
ANR	10796557	Identifier	BT_HEX		10796527	0					
ANR	10796558	BreakStatement	break ;	474:6:12705:12710	10796527	2	True				
ANR	10796559	Label	default :	475:4:12716:12723	10796527	3	True				
ANR	10796560	Identifier	default		10796527	0					
ANR	10796561	ExpressionStatement	* nextTokPtr = ptr	476:6:12731:12748	10796527	4	True				
ANR	10796562	AssignmentExpression	* nextTokPtr = ptr		10796527	0		=			
ANR	10796563	UnaryOperationExpression	* nextTokPtr		10796527	0					
ANR	10796564	UnaryOperator	*		10796527	0					
ANR	10796565	Identifier	nextTokPtr		10796527	1					
ANR	10796566	Identifier	ptr		10796527	1					
ANR	10796567	ReturnStatement	return XML_TOK_INVALID ;	477:6:12756:12778	10796527	5	True				
ANR	10796568	Identifier	XML_TOK_INVALID		10796527	0					
ANR	10796569	ForStatement	"for ( ptr += MINBPC ( enc ) ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		10796527	1					
ANR	10796570	ForInit	ptr += MINBPC ( enc ) ;	479:9:12795:12813	10796527	0	True				
ANR	10796571	AssignmentExpression	ptr += MINBPC ( enc )		10796527	0		+=			
ANR	10796572	Identifier	ptr		10796527	0					
ANR	10796573	CallExpression	MINBPC ( enc )		10796527	1					
ANR	10796574	Callee	MINBPC		10796527	0					
ANR	10796575	Identifier	MINBPC		10796527	0					
ANR	10796576	ArgumentList	enc		10796527	1					
ANR	10796577	Argument	enc		10796527	0					
ANR	10796578	Identifier	enc		10796527	0					
ANR	10796579	Condition	"HAS_CHAR ( enc , ptr , end )"	479:29:12815:12837	10796527	1	True				
ANR	10796580	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10796527	0					
ANR	10796581	Callee	HAS_CHAR		10796527	0					
ANR	10796582	Identifier	HAS_CHAR		10796527	0					
ANR	10796583	ArgumentList	enc		10796527	1					
ANR	10796584	Argument	enc		10796527	0					
ANR	10796585	Identifier	enc		10796527	0					
ANR	10796586	Argument	ptr		10796527	1					
ANR	10796587	Identifier	ptr		10796527	0					
ANR	10796588	Argument	end		10796527	2					
ANR	10796589	Identifier	end		10796527	0					
ANR	10796590	AssignmentExpression	ptr += MINBPC ( enc )	479:54:12840:12857	10796527	2	True	+=			
ANR	10796591	Identifier	ptr		10796527	0					
ANR	10796592	CallExpression	MINBPC ( enc )		10796527	1					
ANR	10796593	Callee	MINBPC		10796527	0					
ANR	10796594	Identifier	MINBPC		10796527	0					
ANR	10796595	ArgumentList	enc		10796527	1					
ANR	10796596	Argument	enc		10796527	0					
ANR	10796597	Identifier	enc		10796527	0					
ANR	10796598	CompoundStatement		11:74:266:266	10796527	3					
ANR	10796599	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796527	0					
ANR	10796600	Condition	"BYTE_TYPE ( enc , ptr )"	480:14:12876:12894	10796527	0	True				
ANR	10796601	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796527	0					
ANR	10796602	Callee	BYTE_TYPE		10796527	0					
ANR	10796603	Identifier	BYTE_TYPE		10796527	0					
ANR	10796604	ArgumentList	enc		10796527	1					
ANR	10796605	Argument	enc		10796527	0					
ANR	10796606	Identifier	enc		10796527	0					
ANR	10796607	Argument	ptr		10796527	1					
ANR	10796608	Identifier	ptr		10796527	0					
ANR	10796609	CompoundStatement		12:35:303:303	10796527	1					
ANR	10796610	Label	case BT_DIGIT :	481:6:12905:12918	10796527	0	True				
ANR	10796611	Identifier	BT_DIGIT		10796527	0					
ANR	10796612	Label	case BT_HEX :	482:6:12926:12937	10796527	1	True				
ANR	10796613	Identifier	BT_HEX		10796527	0					
ANR	10796614	BreakStatement	break ;	483:8:12947:12952	10796527	2	True				
ANR	10796615	Label	case BT_SEMI :	484:6:12960:12972	10796527	3	True				
ANR	10796616	Identifier	BT_SEMI		10796527	0					
ANR	10796617	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	485:8:12982:13013	10796527	4	True				
ANR	10796618	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10796527	0		=			
ANR	10796619	UnaryOperationExpression	* nextTokPtr		10796527	0					
ANR	10796620	UnaryOperator	*		10796527	0					
ANR	10796621	Identifier	nextTokPtr		10796527	1					
ANR	10796622	AdditiveExpression	ptr + MINBPC ( enc )		10796527	1		+			
ANR	10796623	Identifier	ptr		10796527	0					
ANR	10796624	CallExpression	MINBPC ( enc )		10796527	1					
ANR	10796625	Callee	MINBPC		10796527	0					
ANR	10796626	Identifier	MINBPC		10796527	0					
ANR	10796627	ArgumentList	enc		10796527	1					
ANR	10796628	Argument	enc		10796527	0					
ANR	10796629	Identifier	enc		10796527	0					
ANR	10796630	ReturnStatement	return XML_TOK_CHAR_REF ;	486:8:13023:13046	10796527	5	True				
ANR	10796631	Identifier	XML_TOK_CHAR_REF		10796527	0					
ANR	10796632	Label	default :	487:6:13054:13061	10796527	6	True				
ANR	10796633	Identifier	default		10796527	0					
ANR	10796634	ExpressionStatement	* nextTokPtr = ptr	488:8:13071:13088	10796527	7	True				
ANR	10796635	AssignmentExpression	* nextTokPtr = ptr		10796527	0		=			
ANR	10796636	UnaryOperationExpression	* nextTokPtr		10796527	0					
ANR	10796637	UnaryOperator	*		10796527	0					
ANR	10796638	Identifier	nextTokPtr		10796527	1					
ANR	10796639	Identifier	ptr		10796527	1					
ANR	10796640	ReturnStatement	return XML_TOK_INVALID ;	489:8:13098:13120	10796527	8	True				
ANR	10796641	Identifier	XML_TOK_INVALID		10796527	0					
ANR	10796642	ReturnStatement	return XML_TOK_PARTIAL ;	493:2:13142:13164	10796527	1	True				
ANR	10796643	Identifier	XML_TOK_PARTIAL		10796527	0					
ANR	10796644	ReturnType	static int PTRCALL PREFIX		10796527	1					
ANR	10796645	Identifier	( scanHexCharRef )		10796527	2					
ANR	10796646	Identifier	scanHexCharRef		10796527	3					
ANR	10796647	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10796527	4					
ANR	10796648	Parameter	const ENCODING * enc	467:23:12490:12508	10796527	0	True				
ANR	10796649	ParameterType	const ENCODING *		10796527	0					
ANR	10796650	Identifier	enc		10796527	1					
ANR	10796651	Parameter	const char * ptr	467:44:12511:12525	10796527	1	True				
ANR	10796652	ParameterType	const char *		10796527	0					
ANR	10796653	Identifier	ptr		10796527	1					
ANR	10796654	Parameter	const char * end	468:23:12551:12565	10796527	2	True				
ANR	10796655	ParameterType	const char *		10796527	0					
ANR	10796656	Identifier	end		10796527	1					
ANR	10796657	Parameter	const char * * nextTokPtr	468:40:12568:12590	10796527	3	True				
ANR	10796658	ParameterType	const char * *		10796527	0					
ANR	10796659	Identifier	nextTokPtr		10796527	1					
ANR	10796660	CFGEntryNode	ENTRY		10796527		True				
ANR	10796661	CFGExitNode	EXIT		10796527		True				
ANR	10796662	Symbol	XML_TOK_INVALID		10796527						
ANR	10796663	Symbol	nextTokPtr		10796527						
ANR	10796664	Symbol	XML_TOK_PARTIAL		10796527						
ANR	10796665	Symbol	BYTE_TYPE		10796527						
ANR	10796666	Symbol	* nextTokPtr		10796527						
ANR	10796667	Symbol	end		10796527						
ANR	10796668	Symbol	XML_TOK_CHAR_REF		10796527						
ANR	10796669	Symbol	enc		10796527						
ANR	10796670	Symbol	HAS_CHAR		10796527						
ANR	10796671	Symbol	MINBPC		10796527						
ANR	10796672	Symbol	ptr		10796527						
ANR	10796673	Function	scanCharRef	498:0:13215:14010							
ANR	10796674	FunctionDef	"scanCharRef (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10796673	0					
ANR	10796675	CompoundStatement		501:0:13354:14010	10796673	0					
ANR	10796676	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) )"		10796673	0					
ANR	10796677	Condition	"HAS_CHAR ( enc , ptr , end )"	502:6:13362:13384	10796673	0	True				
ANR	10796678	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10796673	0					
ANR	10796679	Callee	HAS_CHAR		10796673	0					
ANR	10796680	Identifier	HAS_CHAR		10796673	0					
ANR	10796681	ArgumentList	enc		10796673	1					
ANR	10796682	Argument	enc		10796673	0					
ANR	10796683	Identifier	enc		10796673	0					
ANR	10796684	Argument	ptr		10796673	1					
ANR	10796685	Identifier	ptr		10796673	0					
ANR	10796686	Argument	end		10796673	2					
ANR	10796687	Identifier	end		10796673	0					
ANR	10796688	CompoundStatement		2:31:32:32	10796673	1					
ANR	10796689	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_x ) )"		10796673	0					
ANR	10796690	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_x )"	503:8:13397:13427	10796673	0	True				
ANR	10796691	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_x )"		10796673	0					
ANR	10796692	Callee	CHAR_MATCHES		10796673	0					
ANR	10796693	Identifier	CHAR_MATCHES		10796673	0					
ANR	10796694	ArgumentList	enc		10796673	1					
ANR	10796695	Argument	enc		10796673	0					
ANR	10796696	Identifier	enc		10796673	0					
ANR	10796697	Argument	ptr		10796673	1					
ANR	10796698	Identifier	ptr		10796673	0					
ANR	10796699	Argument	ASCII_x		10796673	2					
ANR	10796700	Identifier	ASCII_x		10796673	0					
ANR	10796701	ReturnStatement	"return PREFIX ( scanHexCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	504:6:13436:13506	10796673	1	True				
ANR	10796702	CallExpression	"PREFIX ( scanHexCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10796673	0					
ANR	10796703	Callee	PREFIX ( scanHexCharRef )		10796673	0					
ANR	10796704	CallExpression	PREFIX ( scanHexCharRef )		10796673	0					
ANR	10796705	Callee	PREFIX		10796673	0					
ANR	10796706	Identifier	PREFIX		10796673	0					
ANR	10796707	ArgumentList	scanHexCharRef		10796673	1					
ANR	10796708	Argument	scanHexCharRef		10796673	0					
ANR	10796709	Identifier	scanHexCharRef		10796673	0					
ANR	10796710	ArgumentList	enc		10796673	1					
ANR	10796711	Argument	enc		10796673	0					
ANR	10796712	Identifier	enc		10796673	0					
ANR	10796713	Argument	ptr + MINBPC ( enc )		10796673	1					
ANR	10796714	AdditiveExpression	ptr + MINBPC ( enc )		10796673	0		+			
ANR	10796715	Identifier	ptr		10796673	0					
ANR	10796716	CallExpression	MINBPC ( enc )		10796673	1					
ANR	10796717	Callee	MINBPC		10796673	0					
ANR	10796718	Identifier	MINBPC		10796673	0					
ANR	10796719	ArgumentList	enc		10796673	1					
ANR	10796720	Argument	enc		10796673	0					
ANR	10796721	Identifier	enc		10796673	0					
ANR	10796722	Argument	end		10796673	2					
ANR	10796723	Identifier	end		10796673	0					
ANR	10796724	Argument	nextTokPtr		10796673	3					
ANR	10796725	Identifier	nextTokPtr		10796673	0					
ANR	10796726	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796673	1					
ANR	10796727	Condition	"BYTE_TYPE ( enc , ptr )"	505:12:13520:13538	10796673	0	True				
ANR	10796728	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796673	0					
ANR	10796729	Callee	BYTE_TYPE		10796673	0					
ANR	10796730	Identifier	BYTE_TYPE		10796673	0					
ANR	10796731	ArgumentList	enc		10796673	1					
ANR	10796732	Argument	enc		10796673	0					
ANR	10796733	Identifier	enc		10796673	0					
ANR	10796734	Argument	ptr		10796673	1					
ANR	10796735	Identifier	ptr		10796673	0					
ANR	10796736	CompoundStatement		5:33:186:186	10796673	1					
ANR	10796737	Label	case BT_DIGIT :	506:4:13547:13560	10796673	0	True				
ANR	10796738	Identifier	BT_DIGIT		10796673	0					
ANR	10796739	BreakStatement	break ;	507:6:13568:13573	10796673	1	True				
ANR	10796740	Label	default :	508:4:13579:13586	10796673	2	True				
ANR	10796741	Identifier	default		10796673	0					
ANR	10796742	ExpressionStatement	* nextTokPtr = ptr	509:6:13594:13611	10796673	3	True				
ANR	10796743	AssignmentExpression	* nextTokPtr = ptr		10796673	0		=			
ANR	10796744	UnaryOperationExpression	* nextTokPtr		10796673	0					
ANR	10796745	UnaryOperator	*		10796673	0					
ANR	10796746	Identifier	nextTokPtr		10796673	1					
ANR	10796747	Identifier	ptr		10796673	1					
ANR	10796748	ReturnStatement	return XML_TOK_INVALID ;	510:6:13619:13641	10796673	4	True				
ANR	10796749	Identifier	XML_TOK_INVALID		10796673	0					
ANR	10796750	ForStatement	"for ( ptr += MINBPC ( enc ) ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		10796673	2					
ANR	10796751	ForInit	ptr += MINBPC ( enc ) ;	512:9:13658:13676	10796673	0	True				
ANR	10796752	AssignmentExpression	ptr += MINBPC ( enc )		10796673	0		+=			
ANR	10796753	Identifier	ptr		10796673	0					
ANR	10796754	CallExpression	MINBPC ( enc )		10796673	1					
ANR	10796755	Callee	MINBPC		10796673	0					
ANR	10796756	Identifier	MINBPC		10796673	0					
ANR	10796757	ArgumentList	enc		10796673	1					
ANR	10796758	Argument	enc		10796673	0					
ANR	10796759	Identifier	enc		10796673	0					
ANR	10796760	Condition	"HAS_CHAR ( enc , ptr , end )"	512:29:13678:13700	10796673	1	True				
ANR	10796761	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10796673	0					
ANR	10796762	Callee	HAS_CHAR		10796673	0					
ANR	10796763	Identifier	HAS_CHAR		10796673	0					
ANR	10796764	ArgumentList	enc		10796673	1					
ANR	10796765	Argument	enc		10796673	0					
ANR	10796766	Identifier	enc		10796673	0					
ANR	10796767	Argument	ptr		10796673	1					
ANR	10796768	Identifier	ptr		10796673	0					
ANR	10796769	Argument	end		10796673	2					
ANR	10796770	Identifier	end		10796673	0					
ANR	10796771	AssignmentExpression	ptr += MINBPC ( enc )	512:54:13703:13720	10796673	2	True	+=			
ANR	10796772	Identifier	ptr		10796673	0					
ANR	10796773	CallExpression	MINBPC ( enc )		10796673	1					
ANR	10796774	Callee	MINBPC		10796673	0					
ANR	10796775	Identifier	MINBPC		10796673	0					
ANR	10796776	ArgumentList	enc		10796673	1					
ANR	10796777	Argument	enc		10796673	0					
ANR	10796778	Identifier	enc		10796673	0					
ANR	10796779	CompoundStatement		12:74:368:368	10796673	3					
ANR	10796780	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796673	0					
ANR	10796781	Condition	"BYTE_TYPE ( enc , ptr )"	513:14:13739:13757	10796673	0	True				
ANR	10796782	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796673	0					
ANR	10796783	Callee	BYTE_TYPE		10796673	0					
ANR	10796784	Identifier	BYTE_TYPE		10796673	0					
ANR	10796785	ArgumentList	enc		10796673	1					
ANR	10796786	Argument	enc		10796673	0					
ANR	10796787	Identifier	enc		10796673	0					
ANR	10796788	Argument	ptr		10796673	1					
ANR	10796789	Identifier	ptr		10796673	0					
ANR	10796790	CompoundStatement		13:35:405:405	10796673	1					
ANR	10796791	Label	case BT_DIGIT :	514:6:13768:13781	10796673	0	True				
ANR	10796792	Identifier	BT_DIGIT		10796673	0					
ANR	10796793	BreakStatement	break ;	515:8:13791:13796	10796673	1	True				
ANR	10796794	Label	case BT_SEMI :	516:6:13804:13816	10796673	2	True				
ANR	10796795	Identifier	BT_SEMI		10796673	0					
ANR	10796796	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	517:8:13826:13857	10796673	3	True				
ANR	10796797	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10796673	0		=			
ANR	10796798	UnaryOperationExpression	* nextTokPtr		10796673	0					
ANR	10796799	UnaryOperator	*		10796673	0					
ANR	10796800	Identifier	nextTokPtr		10796673	1					
ANR	10796801	AdditiveExpression	ptr + MINBPC ( enc )		10796673	1		+			
ANR	10796802	Identifier	ptr		10796673	0					
ANR	10796803	CallExpression	MINBPC ( enc )		10796673	1					
ANR	10796804	Callee	MINBPC		10796673	0					
ANR	10796805	Identifier	MINBPC		10796673	0					
ANR	10796806	ArgumentList	enc		10796673	1					
ANR	10796807	Argument	enc		10796673	0					
ANR	10796808	Identifier	enc		10796673	0					
ANR	10796809	ReturnStatement	return XML_TOK_CHAR_REF ;	518:8:13867:13890	10796673	4	True				
ANR	10796810	Identifier	XML_TOK_CHAR_REF		10796673	0					
ANR	10796811	Label	default :	519:6:13898:13905	10796673	5	True				
ANR	10796812	Identifier	default		10796673	0					
ANR	10796813	ExpressionStatement	* nextTokPtr = ptr	520:8:13915:13932	10796673	6	True				
ANR	10796814	AssignmentExpression	* nextTokPtr = ptr		10796673	0		=			
ANR	10796815	UnaryOperationExpression	* nextTokPtr		10796673	0					
ANR	10796816	UnaryOperator	*		10796673	0					
ANR	10796817	Identifier	nextTokPtr		10796673	1					
ANR	10796818	Identifier	ptr		10796673	1					
ANR	10796819	ReturnStatement	return XML_TOK_INVALID ;	521:8:13942:13964	10796673	7	True				
ANR	10796820	Identifier	XML_TOK_INVALID		10796673	0					
ANR	10796821	ReturnStatement	return XML_TOK_PARTIAL ;	525:2:13986:14008	10796673	1	True				
ANR	10796822	Identifier	XML_TOK_PARTIAL		10796673	0					
ANR	10796823	ReturnType	static int PTRCALL PREFIX		10796673	1					
ANR	10796824	Identifier	( scanCharRef )		10796673	2					
ANR	10796825	Identifier	scanCharRef		10796673	3					
ANR	10796826	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10796673	4					
ANR	10796827	Parameter	const ENCODING * enc	499:20:13254:13272	10796673	0	True				
ANR	10796828	ParameterType	const ENCODING *		10796673	0					
ANR	10796829	Identifier	enc		10796673	1					
ANR	10796830	Parameter	const char * ptr	499:41:13275:13289	10796673	1	True				
ANR	10796831	ParameterType	const char *		10796673	0					
ANR	10796832	Identifier	ptr		10796673	1					
ANR	10796833	Parameter	const char * end	500:20:13312:13326	10796673	2	True				
ANR	10796834	ParameterType	const char *		10796673	0					
ANR	10796835	Identifier	end		10796673	1					
ANR	10796836	Parameter	const char * * nextTokPtr	500:37:13329:13351	10796673	3	True				
ANR	10796837	ParameterType	const char * *		10796673	0					
ANR	10796838	Identifier	nextTokPtr		10796673	1					
ANR	10796839	CFGEntryNode	ENTRY		10796673		True				
ANR	10796840	CFGExitNode	EXIT		10796673		True				
ANR	10796841	Symbol	XML_TOK_INVALID		10796673						
ANR	10796842	Symbol	nextTokPtr		10796673						
ANR	10796843	Symbol	ASCII_x		10796673						
ANR	10796844	Symbol	scanHexCharRef		10796673						
ANR	10796845	Symbol	XML_TOK_PARTIAL		10796673						
ANR	10796846	Symbol	BYTE_TYPE		10796673						
ANR	10796847	Symbol	* nextTokPtr		10796673						
ANR	10796848	Symbol	XML_TOK_CHAR_REF		10796673						
ANR	10796849	Symbol	MINBPC		10796673						
ANR	10796850	Symbol	ptr		10796673						
ANR	10796851	Symbol	CHAR_MATCHES		10796673						
ANR	10796852	Symbol	PREFIX		10796673						
ANR	10796853	Symbol	end		10796673						
ANR	10796854	Symbol	enc		10796673						
ANR	10796855	Symbol	HAS_CHAR		10796673						
ANR	10796856	Function	scanRef	530:0:14058:14770							
ANR	10796857	FunctionDef	"scanRef (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10796856	0					
ANR	10796858	CompoundStatement		533:0:14189:14770	10796856	0					
ANR	10796859	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	534:2:14193:14220	10796856	0	True				
ANR	10796860	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10796856	0					
ANR	10796861	Callee	REQUIRE_CHAR		10796856	0					
ANR	10796862	Identifier	REQUIRE_CHAR		10796856	0					
ANR	10796863	ArgumentList	enc		10796856	1					
ANR	10796864	Argument	enc		10796856	0					
ANR	10796865	Identifier	enc		10796856	0					
ANR	10796866	Argument	ptr		10796856	1					
ANR	10796867	Identifier	ptr		10796856	0					
ANR	10796868	Argument	end		10796856	2					
ANR	10796869	Identifier	end		10796856	0					
ANR	10796870	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796856	1					
ANR	10796871	Condition	"BYTE_TYPE ( enc , ptr )"	535:10:14232:14250	10796856	0	True				
ANR	10796872	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796856	0					
ANR	10796873	Callee	BYTE_TYPE		10796856	0					
ANR	10796874	Identifier	BYTE_TYPE		10796856	0					
ANR	10796875	ArgumentList	enc		10796856	1					
ANR	10796876	Argument	enc		10796856	0					
ANR	10796877	Identifier	enc		10796856	0					
ANR	10796878	Argument	ptr		10796856	1					
ANR	10796879	Identifier	ptr		10796856	0					
ANR	10796880	CompoundStatement		3:31:63:63	10796856	1					
ANR	10796881	Statement	CHECK_NMSTRT_CASES	536:2:14257:14274	10796856	0	True				
ANR	10796882	Statement	(	536:20:14275:14275	10796856	1	True				
ANR	10796883	Statement	enc	536:21:14276:14278	10796856	2	True				
ANR	10796884	Statement	","	536:24:14279:14279	10796856	3	True				
ANR	10796885	Statement	ptr	536:26:14281:14283	10796856	4	True				
ANR	10796886	Statement	","	536:29:14284:14284	10796856	5	True				
ANR	10796887	Statement	end	536:31:14286:14288	10796856	6	True				
ANR	10796888	Statement	","	536:34:14289:14289	10796856	7	True				
ANR	10796889	Statement	nextTokPtr	536:36:14291:14300	10796856	8	True				
ANR	10796890	Statement	)	536:46:14301:14301	10796856	9	True				
ANR	10796891	Label	case BT_NUM :	537:2:14305:14316	10796856	10	True				
ANR	10796892	Identifier	BT_NUM		10796856	0					
ANR	10796893	ReturnStatement	"return PREFIX ( scanCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	538:4:14322:14389	10796856	11	True				
ANR	10796894	CallExpression	"PREFIX ( scanCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10796856	0					
ANR	10796895	Callee	PREFIX ( scanCharRef )		10796856	0					
ANR	10796896	CallExpression	PREFIX ( scanCharRef )		10796856	0					
ANR	10796897	Callee	PREFIX		10796856	0					
ANR	10796898	Identifier	PREFIX		10796856	0					
ANR	10796899	ArgumentList	scanCharRef		10796856	1					
ANR	10796900	Argument	scanCharRef		10796856	0					
ANR	10796901	Identifier	scanCharRef		10796856	0					
ANR	10796902	ArgumentList	enc		10796856	1					
ANR	10796903	Argument	enc		10796856	0					
ANR	10796904	Identifier	enc		10796856	0					
ANR	10796905	Argument	ptr + MINBPC ( enc )		10796856	1					
ANR	10796906	AdditiveExpression	ptr + MINBPC ( enc )		10796856	0		+			
ANR	10796907	Identifier	ptr		10796856	0					
ANR	10796908	CallExpression	MINBPC ( enc )		10796856	1					
ANR	10796909	Callee	MINBPC		10796856	0					
ANR	10796910	Identifier	MINBPC		10796856	0					
ANR	10796911	ArgumentList	enc		10796856	1					
ANR	10796912	Argument	enc		10796856	0					
ANR	10796913	Identifier	enc		10796856	0					
ANR	10796914	Argument	end		10796856	2					
ANR	10796915	Identifier	end		10796856	0					
ANR	10796916	Argument	nextTokPtr		10796856	3					
ANR	10796917	Identifier	nextTokPtr		10796856	0					
ANR	10796918	Label	default :	539:2:14393:14400	10796856	12	True				
ANR	10796919	Identifier	default		10796856	0					
ANR	10796920	ExpressionStatement	* nextTokPtr = ptr	540:4:14406:14423	10796856	13	True				
ANR	10796921	AssignmentExpression	* nextTokPtr = ptr		10796856	0		=			
ANR	10796922	UnaryOperationExpression	* nextTokPtr		10796856	0					
ANR	10796923	UnaryOperator	*		10796856	0					
ANR	10796924	Identifier	nextTokPtr		10796856	1					
ANR	10796925	Identifier	ptr		10796856	1					
ANR	10796926	ReturnStatement	return XML_TOK_INVALID ;	541:4:14429:14451	10796856	14	True				
ANR	10796927	Identifier	XML_TOK_INVALID		10796856	0					
ANR	10796928	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10796856	2					
ANR	10796929	Condition	"HAS_CHAR ( enc , ptr , end )"	543:9:14466:14488	10796856	0	True				
ANR	10796930	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10796856	0					
ANR	10796931	Callee	HAS_CHAR		10796856	0					
ANR	10796932	Identifier	HAS_CHAR		10796856	0					
ANR	10796933	ArgumentList	enc		10796856	1					
ANR	10796934	Argument	enc		10796856	0					
ANR	10796935	Identifier	enc		10796856	0					
ANR	10796936	Argument	ptr		10796856	1					
ANR	10796937	Identifier	ptr		10796856	0					
ANR	10796938	Argument	end		10796856	2					
ANR	10796939	Identifier	end		10796856	0					
ANR	10796940	CompoundStatement		11:34:301:301	10796856	1					
ANR	10796941	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10796856	0					
ANR	10796942	Condition	"BYTE_TYPE ( enc , ptr )"	544:12:14505:14523	10796856	0	True				
ANR	10796943	CallExpression	"BYTE_TYPE ( enc , ptr )"		10796856	0					
ANR	10796944	Callee	BYTE_TYPE		10796856	0					
ANR	10796945	Identifier	BYTE_TYPE		10796856	0					
ANR	10796946	ArgumentList	enc		10796856	1					
ANR	10796947	Argument	enc		10796856	0					
ANR	10796948	Identifier	enc		10796856	0					
ANR	10796949	Argument	ptr		10796856	1					
ANR	10796950	Identifier	ptr		10796856	0					
ANR	10796951	CompoundStatement		12:33:336:336	10796856	1					
ANR	10796952	Statement	CHECK_NAME_CASES	545:4:14532:14547	10796856	0	True				
ANR	10796953	Statement	(	545:20:14548:14548	10796856	1	True				
ANR	10796954	Statement	enc	545:21:14549:14551	10796856	2	True				
ANR	10796955	Statement	","	545:24:14552:14552	10796856	3	True				
ANR	10796956	Statement	ptr	545:26:14554:14556	10796856	4	True				
ANR	10796957	Statement	","	545:29:14557:14557	10796856	5	True				
ANR	10796958	Statement	end	545:31:14559:14561	10796856	6	True				
ANR	10796959	Statement	","	545:34:14562:14562	10796856	7	True				
ANR	10796960	Statement	nextTokPtr	545:36:14564:14573	10796856	8	True				
ANR	10796961	Statement	)	545:46:14574:14574	10796856	9	True				
ANR	10796962	Label	case BT_SEMI :	546:4:14580:14592	10796856	10	True				
ANR	10796963	Identifier	BT_SEMI		10796856	0					
ANR	10796964	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	547:6:14600:14631	10796856	11	True				
ANR	10796965	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10796856	0		=			
ANR	10796966	UnaryOperationExpression	* nextTokPtr		10796856	0					
ANR	10796967	UnaryOperator	*		10796856	0					
ANR	10796968	Identifier	nextTokPtr		10796856	1					
ANR	10796969	AdditiveExpression	ptr + MINBPC ( enc )		10796856	1		+			
ANR	10796970	Identifier	ptr		10796856	0					
ANR	10796971	CallExpression	MINBPC ( enc )		10796856	1					
ANR	10796972	Callee	MINBPC		10796856	0					
ANR	10796973	Identifier	MINBPC		10796856	0					
ANR	10796974	ArgumentList	enc		10796856	1					
ANR	10796975	Argument	enc		10796856	0					
ANR	10796976	Identifier	enc		10796856	0					
ANR	10796977	ReturnStatement	return XML_TOK_ENTITY_REF ;	548:6:14639:14664	10796856	12	True				
ANR	10796978	Identifier	XML_TOK_ENTITY_REF		10796856	0					
ANR	10796979	Label	default :	549:4:14670:14677	10796856	13	True				
ANR	10796980	Identifier	default		10796856	0					
ANR	10796981	ExpressionStatement	* nextTokPtr = ptr	550:6:14685:14702	10796856	14	True				
ANR	10796982	AssignmentExpression	* nextTokPtr = ptr		10796856	0		=			
ANR	10796983	UnaryOperationExpression	* nextTokPtr		10796856	0					
ANR	10796984	UnaryOperator	*		10796856	0					
ANR	10796985	Identifier	nextTokPtr		10796856	1					
ANR	10796986	Identifier	ptr		10796856	1					
ANR	10796987	ReturnStatement	return XML_TOK_INVALID ;	551:6:14710:14732	10796856	15	True				
ANR	10796988	Identifier	XML_TOK_INVALID		10796856	0					
ANR	10796989	ReturnStatement	return XML_TOK_PARTIAL ;	554:2:14746:14768	10796856	3	True				
ANR	10796990	Identifier	XML_TOK_PARTIAL		10796856	0					
ANR	10796991	ReturnType	static int PTRCALL PREFIX		10796856	1					
ANR	10796992	Identifier	( scanRef )		10796856	2					
ANR	10796993	Identifier	scanRef		10796856	3					
ANR	10796994	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10796856	4					
ANR	10796995	Parameter	const ENCODING * enc	531:16:14093:14111	10796856	0	True				
ANR	10796996	ParameterType	const ENCODING *		10796856	0					
ANR	10796997	Identifier	enc		10796856	1					
ANR	10796998	Parameter	const char * ptr	531:37:14114:14128	10796856	1	True				
ANR	10796999	ParameterType	const char *		10796856	0					
ANR	10797000	Identifier	ptr		10796856	1					
ANR	10797001	Parameter	const char * end	531:54:14131:14145	10796856	2	True				
ANR	10797002	ParameterType	const char *		10796856	0					
ANR	10797003	Identifier	end		10796856	1					
ANR	10797004	Parameter	const char * * nextTokPtr	532:16:14164:14186	10796856	3	True				
ANR	10797005	ParameterType	const char * *		10796856	0					
ANR	10797006	Identifier	nextTokPtr		10796856	1					
ANR	10797007	CFGEntryNode	ENTRY		10796856		True				
ANR	10797008	CFGExitNode	EXIT		10796856		True				
ANR	10797009	Symbol	XML_TOK_INVALID		10796856						
ANR	10797010	Symbol	XML_TOK_ENTITY_REF		10796856						
ANR	10797011	Symbol	nextTokPtr		10796856						
ANR	10797012	Symbol	XML_TOK_PARTIAL		10796856						
ANR	10797013	Symbol	BYTE_TYPE		10796856						
ANR	10797014	Symbol	* nextTokPtr		10796856						
ANR	10797015	Symbol	MINBPC		10796856						
ANR	10797016	Symbol	ptr		10796856						
ANR	10797017	Symbol	PREFIX		10796856						
ANR	10797018	Symbol	scanCharRef		10796856						
ANR	10797019	Symbol	end		10796856						
ANR	10797020	Symbol	enc		10796856						
ANR	10797021	Symbol	HAS_CHAR		10796856						
ANR	10797022	Function	scanAtts	559:0:14848:18606							
ANR	10797023	FunctionDef	"scanAtts (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10797022	0					
ANR	10797024	CompoundStatement		562:0:14981:18606	10797022	0					
ANR	10797025	IdentifierDeclStatement	int hadColon = 0 ;	564:2:14999:15015	10797022	0	True				
ANR	10797026	IdentifierDecl	hadColon = 0		10797022	0					
ANR	10797027	IdentifierDeclType	int		10797022	0					
ANR	10797028	Identifier	hadColon		10797022	1					
ANR	10797029	AssignmentExpression	hadColon = 0		10797022	2		=			
ANR	10797030	Identifier	hadColon		10797022	0					
ANR	10797031	PrimaryExpression	0		10797022	1					
ANR	10797032	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10797022	1					
ANR	10797033	Condition	"HAS_CHAR ( enc , ptr , end )"	566:9:15033:15055	10797022	0	True				
ANR	10797034	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797035	Callee	HAS_CHAR		10797022	0					
ANR	10797036	Identifier	HAS_CHAR		10797022	0					
ANR	10797037	ArgumentList	enc		10797022	1					
ANR	10797038	Argument	enc		10797022	0					
ANR	10797039	Identifier	enc		10797022	0					
ANR	10797040	Argument	ptr		10797022	1					
ANR	10797041	Identifier	ptr		10797022	0					
ANR	10797042	Argument	end		10797022	2					
ANR	10797043	Identifier	end		10797022	0					
ANR	10797044	CompoundStatement		5:34:76:76	10797022	1					
ANR	10797045	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797022	0					
ANR	10797046	Condition	"BYTE_TYPE ( enc , ptr )"	567:12:15072:15090	10797022	0	True				
ANR	10797047	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797022	0					
ANR	10797048	Callee	BYTE_TYPE		10797022	0					
ANR	10797049	Identifier	BYTE_TYPE		10797022	0					
ANR	10797050	ArgumentList	enc		10797022	1					
ANR	10797051	Argument	enc		10797022	0					
ANR	10797052	Identifier	enc		10797022	0					
ANR	10797053	Argument	ptr		10797022	1					
ANR	10797054	Identifier	ptr		10797022	0					
ANR	10797055	CompoundStatement		6:33:111:111	10797022	1					
ANR	10797056	Statement	CHECK_NAME_CASES	568:4:15099:15114	10797022	0	True				
ANR	10797057	Statement	(	568:20:15115:15115	10797022	1	True				
ANR	10797058	Statement	enc	568:21:15116:15118	10797022	2	True				
ANR	10797059	Statement	","	568:24:15119:15119	10797022	3	True				
ANR	10797060	Statement	ptr	568:26:15121:15123	10797022	4	True				
ANR	10797061	Statement	","	568:29:15124:15124	10797022	5	True				
ANR	10797062	Statement	end	568:31:15126:15128	10797022	6	True				
ANR	10797063	Statement	","	568:34:15129:15129	10797022	7	True				
ANR	10797064	Statement	nextTokPtr	568:36:15131:15140	10797022	8	True				
ANR	10797065	Statement	)	568:46:15141:15141	10797022	9	True				
ANR	10797066	Label	case BT_COLON :	570:4:15161:15174	10797022	10	True				
ANR	10797067	Identifier	BT_COLON		10797022	0					
ANR	10797068	IfStatement	if ( hadColon )		10797022	11					
ANR	10797069	Condition	hadColon	571:10:15186:15193	10797022	0	True				
ANR	10797070	Identifier	hadColon		10797022	0					
ANR	10797071	CompoundStatement		10:20:214:214	10797022	1					
ANR	10797072	ExpressionStatement	* nextTokPtr = ptr	572:8:15206:15223	10797022	0	True				
ANR	10797073	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797074	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797075	UnaryOperator	*		10797022	0					
ANR	10797076	Identifier	nextTokPtr		10797022	1					
ANR	10797077	Identifier	ptr		10797022	1					
ANR	10797078	ReturnStatement	return XML_TOK_INVALID ;	573:8:15233:15255	10797022	1	True				
ANR	10797079	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797080	ExpressionStatement	hadColon = 1	575:6:15271:15283	10797022	12	True				
ANR	10797081	AssignmentExpression	hadColon = 1		10797022	0		=			
ANR	10797082	Identifier	hadColon		10797022	0					
ANR	10797083	PrimaryExpression	1		10797022	1					
ANR	10797084	ExpressionStatement	ptr += MINBPC ( enc )	576:6:15291:15309	10797022	13	True				
ANR	10797085	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797086	Identifier	ptr		10797022	0					
ANR	10797087	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797088	Callee	MINBPC		10797022	0					
ANR	10797089	Identifier	MINBPC		10797022	0					
ANR	10797090	ArgumentList	enc		10797022	1					
ANR	10797091	Argument	enc		10797022	0					
ANR	10797092	Identifier	enc		10797022	0					
ANR	10797093	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	577:6:15317:15344	10797022	14	True				
ANR	10797094	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797095	Callee	REQUIRE_CHAR		10797022	0					
ANR	10797096	Identifier	REQUIRE_CHAR		10797022	0					
ANR	10797097	ArgumentList	enc		10797022	1					
ANR	10797098	Argument	enc		10797022	0					
ANR	10797099	Identifier	enc		10797022	0					
ANR	10797100	Argument	ptr		10797022	1					
ANR	10797101	Identifier	ptr		10797022	0					
ANR	10797102	Argument	end		10797022	2					
ANR	10797103	Identifier	end		10797022	0					
ANR	10797104	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797022	15					
ANR	10797105	Condition	"BYTE_TYPE ( enc , ptr )"	578:14:15360:15378	10797022	0	True				
ANR	10797106	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797022	0					
ANR	10797107	Callee	BYTE_TYPE		10797022	0					
ANR	10797108	Identifier	BYTE_TYPE		10797022	0					
ANR	10797109	ArgumentList	enc		10797022	1					
ANR	10797110	Argument	enc		10797022	0					
ANR	10797111	Identifier	enc		10797022	0					
ANR	10797112	Argument	ptr		10797022	1					
ANR	10797113	Identifier	ptr		10797022	0					
ANR	10797114	CompoundStatement		17:35:399:399	10797022	1					
ANR	10797115	Statement	CHECK_NMSTRT_CASES	579:6:15389:15406	10797022	0	True				
ANR	10797116	Statement	(	579:24:15407:15407	10797022	1	True				
ANR	10797117	Statement	enc	579:25:15408:15410	10797022	2	True				
ANR	10797118	Statement	","	579:28:15411:15411	10797022	3	True				
ANR	10797119	Statement	ptr	579:30:15413:15415	10797022	4	True				
ANR	10797120	Statement	","	579:33:15416:15416	10797022	5	True				
ANR	10797121	Statement	end	579:35:15418:15420	10797022	6	True				
ANR	10797122	Statement	","	579:38:15421:15421	10797022	7	True				
ANR	10797123	Statement	nextTokPtr	579:40:15423:15432	10797022	8	True				
ANR	10797124	Statement	)	579:50:15433:15433	10797022	9	True				
ANR	10797125	Label	default :	580:6:15441:15448	10797022	10	True				
ANR	10797126	Identifier	default		10797022	0					
ANR	10797127	ExpressionStatement	* nextTokPtr = ptr	581:8:15458:15475	10797022	11	True				
ANR	10797128	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797129	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797130	UnaryOperator	*		10797022	0					
ANR	10797131	Identifier	nextTokPtr		10797022	1					
ANR	10797132	Identifier	ptr		10797022	1					
ANR	10797133	ReturnStatement	return XML_TOK_INVALID ;	582:8:15485:15507	10797022	12	True				
ANR	10797134	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797135	BreakStatement	break ;	584:6:15523:15528	10797022	16	True				
ANR	10797136	Label	case BT_S :	586:4:15541:15550	10797022	17	True				
ANR	10797137	Identifier	BT_S		10797022	0					
ANR	10797138	Label	case BT_CR :	586:15:15552:15562	10797022	18	True				
ANR	10797139	Identifier	BT_CR		10797022	0					
ANR	10797140	Label	case BT_LF :	586:27:15564:15574	10797022	19	True				
ANR	10797141	Identifier	BT_LF		10797022	0					
ANR	10797142	ForStatement	for ( ; ; )		10797022	20					
ANR	10797143	CompoundStatement		27:8:619:624	10797022	0					
ANR	10797144	IdentifierDeclStatement	int t ;	588:8:15601:15606	10797022	0	True				
ANR	10797145	IdentifierDecl	t		10797022	0					
ANR	10797146	IdentifierDeclType	int		10797022	0					
ANR	10797147	Identifier	t		10797022	1					
ANR	10797148	ExpressionStatement	ptr += MINBPC ( enc )	590:8:15617:15635	10797022	1	True				
ANR	10797149	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797150	Identifier	ptr		10797022	0					
ANR	10797151	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797152	Callee	MINBPC		10797022	0					
ANR	10797153	Identifier	MINBPC		10797022	0					
ANR	10797154	ArgumentList	enc		10797022	1					
ANR	10797155	Argument	enc		10797022	0					
ANR	10797156	Identifier	enc		10797022	0					
ANR	10797157	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	591:8:15645:15672	10797022	2	True				
ANR	10797158	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797159	Callee	REQUIRE_CHAR		10797022	0					
ANR	10797160	Identifier	REQUIRE_CHAR		10797022	0					
ANR	10797161	ArgumentList	enc		10797022	1					
ANR	10797162	Argument	enc		10797022	0					
ANR	10797163	Identifier	enc		10797022	0					
ANR	10797164	Argument	ptr		10797022	1					
ANR	10797165	Identifier	ptr		10797022	0					
ANR	10797166	Argument	end		10797022	2					
ANR	10797167	Identifier	end		10797022	0					
ANR	10797168	ExpressionStatement	"t = BYTE_TYPE ( enc , ptr )"	592:8:15682:15705	10797022	3	True				
ANR	10797169	AssignmentExpression	"t = BYTE_TYPE ( enc , ptr )"		10797022	0		=			
ANR	10797170	Identifier	t		10797022	0					
ANR	10797171	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797022	1					
ANR	10797172	Callee	BYTE_TYPE		10797022	0					
ANR	10797173	Identifier	BYTE_TYPE		10797022	0					
ANR	10797174	ArgumentList	enc		10797022	1					
ANR	10797175	Argument	enc		10797022	0					
ANR	10797176	Identifier	enc		10797022	0					
ANR	10797177	Argument	ptr		10797022	1					
ANR	10797178	Identifier	ptr		10797022	0					
ANR	10797179	IfStatement	if ( t == BT_EQUALS )		10797022	4					
ANR	10797180	Condition	t == BT_EQUALS	593:12:15719:15732	10797022	0	True				
ANR	10797181	EqualityExpression	t == BT_EQUALS		10797022	0		==			
ANR	10797182	Identifier	t		10797022	0					
ANR	10797183	Identifier	BT_EQUALS		10797022	1					
ANR	10797184	BreakStatement	break ;	594:10:15745:15750	10797022	1	True				
ANR	10797185	SwitchStatement	switch ( t )		10797022	5					
ANR	10797186	Condition	t	595:16:15768:15768	10797022	0	True				
ANR	10797187	Identifier	t		10797022	0					
ANR	10797188	CompoundStatement		34:19:789:789	10797022	1					
ANR	10797189	Label	case BT_S :	596:8:15781:15790	10797022	0	True				
ANR	10797190	Identifier	BT_S		10797022	0					
ANR	10797191	Label	case BT_LF :	597:8:15800:15810	10797022	1	True				
ANR	10797192	Identifier	BT_LF		10797022	0					
ANR	10797193	Label	case BT_CR :	598:8:15820:15830	10797022	2	True				
ANR	10797194	Identifier	BT_CR		10797022	0					
ANR	10797195	BreakStatement	break ;	599:10:15842:15847	10797022	3	True				
ANR	10797196	Label	default :	600:8:15857:15864	10797022	4	True				
ANR	10797197	Identifier	default		10797022	0					
ANR	10797198	ExpressionStatement	* nextTokPtr = ptr	601:10:15876:15893	10797022	5	True				
ANR	10797199	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797200	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797201	UnaryOperator	*		10797022	0					
ANR	10797202	Identifier	nextTokPtr		10797022	1					
ANR	10797203	Identifier	ptr		10797022	1					
ANR	10797204	ReturnStatement	return XML_TOK_INVALID ;	602:10:15905:15927	10797022	6	True				
ANR	10797205	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797206	Label	case BT_EQUALS :	606:4:15974:15988	10797022	21	True				
ANR	10797207	Identifier	BT_EQUALS		10797022	0					
ANR	10797208	CompoundStatement		47:8:1024:1032	10797022	22					
ANR	10797209	IdentifierDeclStatement	int open ;	608:8:16006:16014	10797022	0	True				
ANR	10797210	IdentifierDecl	open		10797022	0					
ANR	10797211	IdentifierDeclType	int		10797022	0					
ANR	10797212	Identifier	open		10797022	1					
ANR	10797213	ExpressionStatement	hadColon = 0	610:8:16038:16050	10797022	1	True				
ANR	10797214	AssignmentExpression	hadColon = 0		10797022	0		=			
ANR	10797215	Identifier	hadColon		10797022	0					
ANR	10797216	PrimaryExpression	0		10797022	1					
ANR	10797217	ForStatement	for ( ; ; )		10797022	2					
ANR	10797218	CompoundStatement		51:17:1094:1094	10797022	0					
ANR	10797219	ExpressionStatement	ptr += MINBPC ( enc )	613:10:16088:16106	10797022	0	True				
ANR	10797220	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797221	Identifier	ptr		10797022	0					
ANR	10797222	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797223	Callee	MINBPC		10797022	0					
ANR	10797224	Identifier	MINBPC		10797022	0					
ANR	10797225	ArgumentList	enc		10797022	1					
ANR	10797226	Argument	enc		10797022	0					
ANR	10797227	Identifier	enc		10797022	0					
ANR	10797228	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	614:10:16118:16145	10797022	1	True				
ANR	10797229	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797230	Callee	REQUIRE_CHAR		10797022	0					
ANR	10797231	Identifier	REQUIRE_CHAR		10797022	0					
ANR	10797232	ArgumentList	enc		10797022	1					
ANR	10797233	Argument	enc		10797022	0					
ANR	10797234	Identifier	enc		10797022	0					
ANR	10797235	Argument	ptr		10797022	1					
ANR	10797236	Identifier	ptr		10797022	0					
ANR	10797237	Argument	end		10797022	2					
ANR	10797238	Identifier	end		10797022	0					
ANR	10797239	ExpressionStatement	"open = BYTE_TYPE ( enc , ptr )"	615:10:16157:16183	10797022	2	True				
ANR	10797240	AssignmentExpression	"open = BYTE_TYPE ( enc , ptr )"		10797022	0		=			
ANR	10797241	Identifier	open		10797022	0					
ANR	10797242	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797022	1					
ANR	10797243	Callee	BYTE_TYPE		10797022	0					
ANR	10797244	Identifier	BYTE_TYPE		10797022	0					
ANR	10797245	ArgumentList	enc		10797022	1					
ANR	10797246	Argument	enc		10797022	0					
ANR	10797247	Identifier	enc		10797022	0					
ANR	10797248	Argument	ptr		10797022	1					
ANR	10797249	Identifier	ptr		10797022	0					
ANR	10797250	IfStatement	if ( open == BT_QUOT || open == BT_APOS )		10797022	3					
ANR	10797251	Condition	open == BT_QUOT || open == BT_APOS	616:14:16199:16232	10797022	0	True				
ANR	10797252	OrExpression	open == BT_QUOT || open == BT_APOS		10797022	0		||			
ANR	10797253	EqualityExpression	open == BT_QUOT		10797022	0		==			
ANR	10797254	Identifier	open		10797022	0					
ANR	10797255	Identifier	BT_QUOT		10797022	1					
ANR	10797256	EqualityExpression	open == BT_APOS		10797022	1		==			
ANR	10797257	Identifier	open		10797022	0					
ANR	10797258	Identifier	BT_APOS		10797022	1					
ANR	10797259	BreakStatement	break ;	617:12:16247:16252	10797022	1	True				
ANR	10797260	SwitchStatement	switch ( open )		10797022	4					
ANR	10797261	Condition	open	618:18:16272:16275	10797022	0	True				
ANR	10797262	Identifier	open		10797022	0					
ANR	10797263	CompoundStatement		57:24:1296:1296	10797022	1					
ANR	10797264	Label	case BT_S :	619:10:16290:16299	10797022	0	True				
ANR	10797265	Identifier	BT_S		10797022	0					
ANR	10797266	Label	case BT_LF :	620:10:16311:16321	10797022	1	True				
ANR	10797267	Identifier	BT_LF		10797022	0					
ANR	10797268	Label	case BT_CR :	621:10:16333:16343	10797022	2	True				
ANR	10797269	Identifier	BT_CR		10797022	0					
ANR	10797270	BreakStatement	break ;	622:12:16357:16362	10797022	3	True				
ANR	10797271	Label	default :	623:10:16374:16381	10797022	4	True				
ANR	10797272	Identifier	default		10797022	0					
ANR	10797273	ExpressionStatement	* nextTokPtr = ptr	624:12:16395:16412	10797022	5	True				
ANR	10797274	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797275	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797276	UnaryOperator	*		10797022	0					
ANR	10797277	Identifier	nextTokPtr		10797022	1					
ANR	10797278	Identifier	ptr		10797022	1					
ANR	10797279	ReturnStatement	return XML_TOK_INVALID ;	625:12:16426:16448	10797022	6	True				
ANR	10797280	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797281	ExpressionStatement	ptr += MINBPC ( enc )	628:8:16480:16498	10797022	3	True				
ANR	10797282	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797283	Identifier	ptr		10797022	0					
ANR	10797284	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797285	Callee	MINBPC		10797022	0					
ANR	10797286	Identifier	MINBPC		10797022	0					
ANR	10797287	ArgumentList	enc		10797022	1					
ANR	10797288	Argument	enc		10797022	0					
ANR	10797289	Identifier	enc		10797022	0					
ANR	10797290	ForStatement	for ( ; ; )		10797022	4					
ANR	10797291	CompoundStatement		70:10:1580:1585	10797022	0					
ANR	10797292	IdentifierDeclStatement	int t ;	631:10:16562:16567	10797022	0	True				
ANR	10797293	IdentifierDecl	t		10797022	0					
ANR	10797294	IdentifierDeclType	int		10797022	0					
ANR	10797295	Identifier	t		10797022	1					
ANR	10797296	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	632:10:16579:16606	10797022	1	True				
ANR	10797297	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797298	Callee	REQUIRE_CHAR		10797022	0					
ANR	10797299	Identifier	REQUIRE_CHAR		10797022	0					
ANR	10797300	ArgumentList	enc		10797022	1					
ANR	10797301	Argument	enc		10797022	0					
ANR	10797302	Identifier	enc		10797022	0					
ANR	10797303	Argument	ptr		10797022	1					
ANR	10797304	Identifier	ptr		10797022	0					
ANR	10797305	Argument	end		10797022	2					
ANR	10797306	Identifier	end		10797022	0					
ANR	10797307	ExpressionStatement	"t = BYTE_TYPE ( enc , ptr )"	633:10:16618:16641	10797022	2	True				
ANR	10797308	AssignmentExpression	"t = BYTE_TYPE ( enc , ptr )"		10797022	0		=			
ANR	10797309	Identifier	t		10797022	0					
ANR	10797310	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797022	1					
ANR	10797311	Callee	BYTE_TYPE		10797022	0					
ANR	10797312	Identifier	BYTE_TYPE		10797022	0					
ANR	10797313	ArgumentList	enc		10797022	1					
ANR	10797314	Argument	enc		10797022	0					
ANR	10797315	Identifier	enc		10797022	0					
ANR	10797316	Argument	ptr		10797022	1					
ANR	10797317	Identifier	ptr		10797022	0					
ANR	10797318	IfStatement	if ( t == open )		10797022	3					
ANR	10797319	Condition	t == open	634:14:16657:16665	10797022	0	True				
ANR	10797320	EqualityExpression	t == open		10797022	0		==			
ANR	10797321	Identifier	t		10797022	0					
ANR	10797322	Identifier	open		10797022	1					
ANR	10797323	BreakStatement	break ;	635:12:16680:16685	10797022	1	True				
ANR	10797324	SwitchStatement	switch ( t )		10797022	4					
ANR	10797325	Condition	t	636:18:16705:16705	10797022	0	True				
ANR	10797326	Identifier	t		10797022	0					
ANR	10797327	CompoundStatement		75:21:1726:1726	10797022	1					
ANR	10797328	Statement	INVALID_CASES	637:10:16720:16732	10797022	0	True				
ANR	10797329	Statement	(	637:23:16733:16733	10797022	1	True				
ANR	10797330	Statement	ptr	637:24:16734:16736	10797022	2	True				
ANR	10797331	Statement	","	637:27:16737:16737	10797022	3	True				
ANR	10797332	Statement	nextTokPtr	637:29:16739:16748	10797022	4	True				
ANR	10797333	Statement	)	637:39:16749:16749	10797022	5	True				
ANR	10797334	Label	case BT_AMP :	638:10:16761:16772	10797022	6	True				
ANR	10797335	Identifier	BT_AMP		10797022	0					
ANR	10797336	CompoundStatement		79:14:1820:1880	10797022	7					
ANR	10797337	IdentifierDeclStatement	"int tok = PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr ) ;"	640:14:16802:16862	10797022	0	True				
ANR	10797338	IdentifierDecl	"tok = PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr )"		10797022	0					
ANR	10797339	IdentifierDeclType	int		10797022	0					
ANR	10797340	Identifier	tok		10797022	1					
ANR	10797341	AssignmentExpression	"tok = PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr )"		10797022	2		=			
ANR	10797342	Identifier	tok		10797022	0					
ANR	10797343	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr )"		10797022	1					
ANR	10797344	Callee	PREFIX ( scanRef )		10797022	0					
ANR	10797345	CallExpression	PREFIX ( scanRef )		10797022	0					
ANR	10797346	Callee	PREFIX		10797022	0					
ANR	10797347	Identifier	PREFIX		10797022	0					
ANR	10797348	ArgumentList	scanRef		10797022	1					
ANR	10797349	Argument	scanRef		10797022	0					
ANR	10797350	Identifier	scanRef		10797022	0					
ANR	10797351	ArgumentList	enc		10797022	1					
ANR	10797352	Argument	enc		10797022	0					
ANR	10797353	Identifier	enc		10797022	0					
ANR	10797354	Argument	ptr + MINBPC ( enc )		10797022	1					
ANR	10797355	AdditiveExpression	ptr + MINBPC ( enc )		10797022	0		+			
ANR	10797356	Identifier	ptr		10797022	0					
ANR	10797357	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797358	Callee	MINBPC		10797022	0					
ANR	10797359	Identifier	MINBPC		10797022	0					
ANR	10797360	ArgumentList	enc		10797022	1					
ANR	10797361	Argument	enc		10797022	0					
ANR	10797362	Identifier	enc		10797022	0					
ANR	10797363	Argument	end		10797022	2					
ANR	10797364	Identifier	end		10797022	0					
ANR	10797365	Argument	& ptr		10797022	3					
ANR	10797366	UnaryOperationExpression	& ptr		10797022	0					
ANR	10797367	UnaryOperator	&		10797022	0					
ANR	10797368	Identifier	ptr		10797022	1					
ANR	10797369	IfStatement	if ( tok <= 0 )		10797022	1					
ANR	10797370	Condition	tok <= 0	641:18:16882:16889	10797022	0	True				
ANR	10797371	RelationalExpression	tok <= 0		10797022	0		<=			
ANR	10797372	Identifier	tok		10797022	0					
ANR	10797373	PrimaryExpression	0		10797022	1					
ANR	10797374	CompoundStatement		80:28:1910:1910	10797022	1					
ANR	10797375	IfStatement	if ( tok == XML_TOK_INVALID )		10797022	0					
ANR	10797376	Condition	tok == XML_TOK_INVALID	642:20:16914:16935	10797022	0	True				
ANR	10797377	EqualityExpression	tok == XML_TOK_INVALID		10797022	0		==			
ANR	10797378	Identifier	tok		10797022	0					
ANR	10797379	Identifier	XML_TOK_INVALID		10797022	1					
ANR	10797380	ExpressionStatement	* nextTokPtr = ptr	643:18:16956:16973	10797022	1	True				
ANR	10797381	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797382	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797383	UnaryOperator	*		10797022	0					
ANR	10797384	Identifier	nextTokPtr		10797022	1					
ANR	10797385	Identifier	ptr		10797022	1					
ANR	10797386	ReturnStatement	return tok ;	644:16:16991:17001	10797022	1	True				
ANR	10797387	Identifier	tok		10797022	0					
ANR	10797388	BreakStatement	break ;	646:14:17033:17038	10797022	2	True				
ANR	10797389	Label	case BT_LT :	648:10:17064:17074	10797022	8	True				
ANR	10797390	Identifier	BT_LT		10797022	0					
ANR	10797391	ExpressionStatement	* nextTokPtr = ptr	649:12:17088:17105	10797022	9	True				
ANR	10797392	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797393	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797394	UnaryOperator	*		10797022	0					
ANR	10797395	Identifier	nextTokPtr		10797022	1					
ANR	10797396	Identifier	ptr		10797022	1					
ANR	10797397	ReturnStatement	return XML_TOK_INVALID ;	650:12:17119:17141	10797022	10	True				
ANR	10797398	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797399	Label	default :	651:10:17153:17160	10797022	11	True				
ANR	10797400	Identifier	default		10797022	0					
ANR	10797401	ExpressionStatement	ptr += MINBPC ( enc )	652:12:17174:17192	10797022	12	True				
ANR	10797402	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797403	Identifier	ptr		10797022	0					
ANR	10797404	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797405	Callee	MINBPC		10797022	0					
ANR	10797406	Identifier	MINBPC		10797022	0					
ANR	10797407	ArgumentList	enc		10797022	1					
ANR	10797408	Argument	enc		10797022	0					
ANR	10797409	Identifier	enc		10797022	0					
ANR	10797410	BreakStatement	break ;	653:12:17206:17211	10797022	13	True				
ANR	10797411	ExpressionStatement	ptr += MINBPC ( enc )	656:8:17243:17261	10797022	5	True				
ANR	10797412	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797413	Identifier	ptr		10797022	0					
ANR	10797414	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797415	Callee	MINBPC		10797022	0					
ANR	10797416	Identifier	MINBPC		10797022	0					
ANR	10797417	ArgumentList	enc		10797022	1					
ANR	10797418	Argument	enc		10797022	0					
ANR	10797419	Identifier	enc		10797022	0					
ANR	10797420	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	657:8:17271:17298	10797022	6	True				
ANR	10797421	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797422	Callee	REQUIRE_CHAR		10797022	0					
ANR	10797423	Identifier	REQUIRE_CHAR		10797022	0					
ANR	10797424	ArgumentList	enc		10797022	1					
ANR	10797425	Argument	enc		10797022	0					
ANR	10797426	Identifier	enc		10797022	0					
ANR	10797427	Argument	ptr		10797022	1					
ANR	10797428	Identifier	ptr		10797022	0					
ANR	10797429	Argument	end		10797022	2					
ANR	10797430	Identifier	end		10797022	0					
ANR	10797431	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797022	7					
ANR	10797432	Condition	"BYTE_TYPE ( enc , ptr )"	658:16:17316:17334	10797022	0	True				
ANR	10797433	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797022	0					
ANR	10797434	Callee	BYTE_TYPE		10797022	0					
ANR	10797435	Identifier	BYTE_TYPE		10797022	0					
ANR	10797436	ArgumentList	enc		10797022	1					
ANR	10797437	Argument	enc		10797022	0					
ANR	10797438	Identifier	enc		10797022	0					
ANR	10797439	Argument	ptr		10797022	1					
ANR	10797440	Identifier	ptr		10797022	0					
ANR	10797441	CompoundStatement		97:37:2355:2355	10797022	1					
ANR	10797442	Label	case BT_S :	659:8:17347:17356	10797022	0	True				
ANR	10797443	Identifier	BT_S		10797022	0					
ANR	10797444	Label	case BT_CR :	660:8:17366:17376	10797022	1	True				
ANR	10797445	Identifier	BT_CR		10797022	0					
ANR	10797446	Label	case BT_LF :	661:8:17386:17396	10797022	2	True				
ANR	10797447	Identifier	BT_LF		10797022	0					
ANR	10797448	BreakStatement	break ;	662:10:17408:17413	10797022	3	True				
ANR	10797449	Label	case BT_SOL :	663:8:17423:17434	10797022	4	True				
ANR	10797450	Identifier	BT_SOL		10797022	0					
ANR	10797451	GotoStatement	goto sol ;	664:10:17446:17454	10797022	5	True				
ANR	10797452	Identifier	sol		10797022	0					
ANR	10797453	Label	case BT_GT :	665:8:17464:17474	10797022	6	True				
ANR	10797454	Identifier	BT_GT		10797022	0					
ANR	10797455	GotoStatement	goto gt ;	666:10:17486:17493	10797022	7	True				
ANR	10797456	Identifier	gt		10797022	0					
ANR	10797457	Label	default :	667:8:17503:17510	10797022	8	True				
ANR	10797458	Identifier	default		10797022	0					
ANR	10797459	ExpressionStatement	* nextTokPtr = ptr	668:10:17522:17539	10797022	9	True				
ANR	10797460	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797461	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797462	UnaryOperator	*		10797022	0					
ANR	10797463	Identifier	nextTokPtr		10797022	1					
ANR	10797464	Identifier	ptr		10797022	1					
ANR	10797465	ReturnStatement	return XML_TOK_INVALID ;	669:10:17551:17573	10797022	10	True				
ANR	10797466	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797467	ForStatement	for ( ; ; )		10797022	8					
ANR	10797468	CompoundStatement		111:17:2662:2662	10797022	0					
ANR	10797469	ExpressionStatement	ptr += MINBPC ( enc )	673:10:17656:17674	10797022	0	True				
ANR	10797470	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797471	Identifier	ptr		10797022	0					
ANR	10797472	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797473	Callee	MINBPC		10797022	0					
ANR	10797474	Identifier	MINBPC		10797022	0					
ANR	10797475	ArgumentList	enc		10797022	1					
ANR	10797476	Argument	enc		10797022	0					
ANR	10797477	Identifier	enc		10797022	0					
ANR	10797478	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	674:10:17686:17713	10797022	1	True				
ANR	10797479	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797480	Callee	REQUIRE_CHAR		10797022	0					
ANR	10797481	Identifier	REQUIRE_CHAR		10797022	0					
ANR	10797482	ArgumentList	enc		10797022	1					
ANR	10797483	Argument	enc		10797022	0					
ANR	10797484	Identifier	enc		10797022	0					
ANR	10797485	Argument	ptr		10797022	1					
ANR	10797486	Identifier	ptr		10797022	0					
ANR	10797487	Argument	end		10797022	2					
ANR	10797488	Identifier	end		10797022	0					
ANR	10797489	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797022	2					
ANR	10797490	Condition	"BYTE_TYPE ( enc , ptr )"	675:18:17733:17751	10797022	0	True				
ANR	10797491	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797022	0					
ANR	10797492	Callee	BYTE_TYPE		10797022	0					
ANR	10797493	Identifier	BYTE_TYPE		10797022	0					
ANR	10797494	ArgumentList	enc		10797022	1					
ANR	10797495	Argument	enc		10797022	0					
ANR	10797496	Identifier	enc		10797022	0					
ANR	10797497	Argument	ptr		10797022	1					
ANR	10797498	Identifier	ptr		10797022	0					
ANR	10797499	CompoundStatement		114:39:2772:2772	10797022	1					
ANR	10797500	Statement	CHECK_NMSTRT_CASES	676:10:17766:17783	10797022	0	True				
ANR	10797501	Statement	(	676:28:17784:17784	10797022	1	True				
ANR	10797502	Statement	enc	676:29:17785:17787	10797022	2	True				
ANR	10797503	Statement	","	676:32:17788:17788	10797022	3	True				
ANR	10797504	Statement	ptr	676:34:17790:17792	10797022	4	True				
ANR	10797505	Statement	","	676:37:17793:17793	10797022	5	True				
ANR	10797506	Statement	end	676:39:17795:17797	10797022	6	True				
ANR	10797507	Statement	","	676:42:17798:17798	10797022	7	True				
ANR	10797508	Statement	nextTokPtr	676:44:17800:17809	10797022	8	True				
ANR	10797509	Statement	)	676:54:17810:17810	10797022	9	True				
ANR	10797510	Label	case BT_S :	677:10:17822:17831	10797022	10	True				
ANR	10797511	Identifier	BT_S		10797022	0					
ANR	10797512	Label	case BT_CR :	677:21:17833:17843	10797022	11	True				
ANR	10797513	Identifier	BT_CR		10797022	0					
ANR	10797514	Label	case BT_LF :	677:33:17845:17855	10797022	12	True				
ANR	10797515	Identifier	BT_LF		10797022	0					
ANR	10797516	ContinueStatement	continue ;	678:12:17869:17877	10797022	13	True				
ANR	10797517	Label	case BT_GT :	679:10:17889:17899	10797022	14	True				
ANR	10797518	Identifier	BT_GT		10797022	0					
ANR	10797519	Label	gt :	680:10:17911:17913	10797022	15	True				
ANR	10797520	Identifier	gt		10797022	0					
ANR	10797521	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	681:12:17927:17958	10797022	16	True				
ANR	10797522	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10797022	0		=			
ANR	10797523	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797524	UnaryOperator	*		10797022	0					
ANR	10797525	Identifier	nextTokPtr		10797022	1					
ANR	10797526	AdditiveExpression	ptr + MINBPC ( enc )		10797022	1		+			
ANR	10797527	Identifier	ptr		10797022	0					
ANR	10797528	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797529	Callee	MINBPC		10797022	0					
ANR	10797530	Identifier	MINBPC		10797022	0					
ANR	10797531	ArgumentList	enc		10797022	1					
ANR	10797532	Argument	enc		10797022	0					
ANR	10797533	Identifier	enc		10797022	0					
ANR	10797534	ReturnStatement	return XML_TOK_START_TAG_WITH_ATTS ;	682:12:17972:18006	10797022	17	True				
ANR	10797535	Identifier	XML_TOK_START_TAG_WITH_ATTS		10797022	0					
ANR	10797536	Label	case BT_SOL :	683:10:18018:18029	10797022	18	True				
ANR	10797537	Identifier	BT_SOL		10797022	0					
ANR	10797538	Label	sol :	684:10:18041:18044	10797022	19	True				
ANR	10797539	Identifier	sol		10797022	0					
ANR	10797540	ExpressionStatement	ptr += MINBPC ( enc )	685:12:18058:18076	10797022	20	True				
ANR	10797541	AssignmentExpression	ptr += MINBPC ( enc )		10797022	0		+=			
ANR	10797542	Identifier	ptr		10797022	0					
ANR	10797543	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797544	Callee	MINBPC		10797022	0					
ANR	10797545	Identifier	MINBPC		10797022	0					
ANR	10797546	ArgumentList	enc		10797022	1					
ANR	10797547	Argument	enc		10797022	0					
ANR	10797548	Identifier	enc		10797022	0					
ANR	10797549	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	686:12:18090:18117	10797022	21	True				
ANR	10797550	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797022	0					
ANR	10797551	Callee	REQUIRE_CHAR		10797022	0					
ANR	10797552	Identifier	REQUIRE_CHAR		10797022	0					
ANR	10797553	ArgumentList	enc		10797022	1					
ANR	10797554	Argument	enc		10797022	0					
ANR	10797555	Identifier	enc		10797022	0					
ANR	10797556	Argument	ptr		10797022	1					
ANR	10797557	Identifier	ptr		10797022	0					
ANR	10797558	Argument	end		10797022	2					
ANR	10797559	Identifier	end		10797022	0					
ANR	10797560	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10797022	22					
ANR	10797561	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	687:16:18135:18167	10797022	0	True				
ANR	10797562	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10797022	0					
ANR	10797563	UnaryOperator	!		10797022	0					
ANR	10797564	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10797022	1					
ANR	10797565	Callee	CHAR_MATCHES		10797022	0					
ANR	10797566	Identifier	CHAR_MATCHES		10797022	0					
ANR	10797567	ArgumentList	enc		10797022	1					
ANR	10797568	Argument	enc		10797022	0					
ANR	10797569	Identifier	enc		10797022	0					
ANR	10797570	Argument	ptr		10797022	1					
ANR	10797571	Identifier	ptr		10797022	0					
ANR	10797572	Argument	ASCII_GT		10797022	2					
ANR	10797573	Identifier	ASCII_GT		10797022	0					
ANR	10797574	CompoundStatement		126:51:3188:3188	10797022	1					
ANR	10797575	ExpressionStatement	* nextTokPtr = ptr	688:14:18186:18203	10797022	0	True				
ANR	10797576	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797577	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797578	UnaryOperator	*		10797022	0					
ANR	10797579	Identifier	nextTokPtr		10797022	1					
ANR	10797580	Identifier	ptr		10797022	1					
ANR	10797581	ReturnStatement	return XML_TOK_INVALID ;	689:14:18219:18241	10797022	1	True				
ANR	10797582	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797583	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	691:12:18269:18300	10797022	23	True				
ANR	10797584	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10797022	0		=			
ANR	10797585	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797586	UnaryOperator	*		10797022	0					
ANR	10797587	Identifier	nextTokPtr		10797022	1					
ANR	10797588	AdditiveExpression	ptr + MINBPC ( enc )		10797022	1		+			
ANR	10797589	Identifier	ptr		10797022	0					
ANR	10797590	CallExpression	MINBPC ( enc )		10797022	1					
ANR	10797591	Callee	MINBPC		10797022	0					
ANR	10797592	Identifier	MINBPC		10797022	0					
ANR	10797593	ArgumentList	enc		10797022	1					
ANR	10797594	Argument	enc		10797022	0					
ANR	10797595	Identifier	enc		10797022	0					
ANR	10797596	ReturnStatement	return XML_TOK_EMPTY_ELEMENT_WITH_ATTS ;	692:12:18314:18352	10797022	24	True				
ANR	10797597	Identifier	XML_TOK_EMPTY_ELEMENT_WITH_ATTS		10797022	0					
ANR	10797598	Label	default :	693:10:18364:18371	10797022	25	True				
ANR	10797599	Identifier	default		10797022	0					
ANR	10797600	ExpressionStatement	* nextTokPtr = ptr	694:12:18385:18402	10797022	26	True				
ANR	10797601	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797602	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797603	UnaryOperator	*		10797022	0					
ANR	10797604	Identifier	nextTokPtr		10797022	1					
ANR	10797605	Identifier	ptr		10797022	1					
ANR	10797606	ReturnStatement	return XML_TOK_INVALID ;	695:12:18416:18438	10797022	27	True				
ANR	10797607	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797608	BreakStatement	break ;	697:10:18462:18467	10797022	3	True				
ANR	10797609	BreakStatement	break ;	699:8:18487:18492	10797022	9	True				
ANR	10797610	Label	default :	701:4:18506:18513	10797022	23	True				
ANR	10797611	Identifier	default		10797022	0					
ANR	10797612	ExpressionStatement	* nextTokPtr = ptr	702:6:18521:18538	10797022	24	True				
ANR	10797613	AssignmentExpression	* nextTokPtr = ptr		10797022	0		=			
ANR	10797614	UnaryOperationExpression	* nextTokPtr		10797022	0					
ANR	10797615	UnaryOperator	*		10797022	0					
ANR	10797616	Identifier	nextTokPtr		10797022	1					
ANR	10797617	Identifier	ptr		10797022	1					
ANR	10797618	ReturnStatement	return XML_TOK_INVALID ;	703:6:18546:18568	10797022	25	True				
ANR	10797619	Identifier	XML_TOK_INVALID		10797022	0					
ANR	10797620	ReturnStatement	return XML_TOK_PARTIAL ;	706:2:18582:18604	10797022	2	True				
ANR	10797621	Identifier	XML_TOK_PARTIAL		10797022	0					
ANR	10797622	ReturnType	static int PTRCALL PREFIX		10797022	1					
ANR	10797623	Identifier	( scanAtts )		10797022	2					
ANR	10797624	Identifier	scanAtts		10797022	3					
ANR	10797625	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10797022	4					
ANR	10797626	Parameter	const ENCODING * enc	560:17:14884:14902	10797022	0	True				
ANR	10797627	ParameterType	const ENCODING *		10797022	0					
ANR	10797628	Identifier	enc		10797022	1					
ANR	10797629	Parameter	const char * ptr	560:38:14905:14919	10797022	1	True				
ANR	10797630	ParameterType	const char *		10797022	0					
ANR	10797631	Identifier	ptr		10797022	1					
ANR	10797632	Parameter	const char * end	560:55:14922:14936	10797022	2	True				
ANR	10797633	ParameterType	const char *		10797022	0					
ANR	10797634	Identifier	end		10797022	1					
ANR	10797635	Parameter	const char * * nextTokPtr	561:17:14956:14978	10797022	3	True				
ANR	10797636	ParameterType	const char * *		10797022	0					
ANR	10797637	Identifier	nextTokPtr		10797022	1					
ANR	10797638	CFGEntryNode	ENTRY		10797022		True				
ANR	10797639	CFGExitNode	EXIT		10797022		True				
ANR	10797640	InfiniteForNode	true		10797022		True				
ANR	10797641	InfiniteForNode	true		10797022		True				
ANR	10797642	InfiniteForNode	true		10797022		True				
ANR	10797643	InfiniteForNode	true		10797022		True				
ANR	10797644	Symbol	XML_TOK_INVALID		10797022						
ANR	10797645	Symbol	nextTokPtr		10797022						
ANR	10797646	Symbol	BT_QUOT		10797022						
ANR	10797647	Symbol	XML_TOK_START_TAG_WITH_ATTS		10797022						
ANR	10797648	Symbol	XML_TOK_PARTIAL		10797022						
ANR	10797649	Symbol	BYTE_TYPE		10797022						
ANR	10797650	Symbol	* nextTokPtr		10797022						
ANR	10797651	Symbol	hadColon		10797022						
ANR	10797652	Symbol	BT_APOS		10797022						
ANR	10797653	Symbol	MINBPC		10797022						
ANR	10797654	Symbol	ptr		10797022						
ANR	10797655	Symbol	scanRef		10797022						
ANR	10797656	Symbol	tok		10797022						
ANR	10797657	Symbol	CHAR_MATCHES		10797022						
ANR	10797658	Symbol	& ptr		10797022						
ANR	10797659	Symbol	t		10797022						
ANR	10797660	Symbol	PREFIX		10797022						
ANR	10797661	Symbol	ASCII_GT		10797022						
ANR	10797662	Symbol	XML_TOK_EMPTY_ELEMENT_WITH_ATTS		10797022						
ANR	10797663	Symbol	end		10797022						
ANR	10797664	Symbol	enc		10797022						
ANR	10797665	Symbol	HAS_CHAR		10797022						
ANR	10797666	Symbol	BT_EQUALS		10797022						
ANR	10797667	Symbol	open		10797022						
ANR	10797668	Function	scanLt	711:0:18654:21247							
ANR	10797669	FunctionDef	"scanLt (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10797668	0					
ANR	10797670	CompoundStatement		714:0:18783:21247	10797668	0					
ANR	10797671	IdentifierDeclStatement	int hadColon ;	716:2:18801:18813	10797668	0	True				
ANR	10797672	IdentifierDecl	hadColon		10797668	0					
ANR	10797673	IdentifierDeclType	int		10797668	0					
ANR	10797674	Identifier	hadColon		10797668	1					
ANR	10797675	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	718:2:18824:18851	10797668	1	True				
ANR	10797676	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797668	0					
ANR	10797677	Callee	REQUIRE_CHAR		10797668	0					
ANR	10797678	Identifier	REQUIRE_CHAR		10797668	0					
ANR	10797679	ArgumentList	enc		10797668	1					
ANR	10797680	Argument	enc		10797668	0					
ANR	10797681	Identifier	enc		10797668	0					
ANR	10797682	Argument	ptr		10797668	1					
ANR	10797683	Identifier	ptr		10797668	0					
ANR	10797684	Argument	end		10797668	2					
ANR	10797685	Identifier	end		10797668	0					
ANR	10797686	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797668	2					
ANR	10797687	Condition	"BYTE_TYPE ( enc , ptr )"	719:10:18863:18881	10797668	0	True				
ANR	10797688	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797668	0					
ANR	10797689	Callee	BYTE_TYPE		10797668	0					
ANR	10797690	Identifier	BYTE_TYPE		10797668	0					
ANR	10797691	ArgumentList	enc		10797668	1					
ANR	10797692	Argument	enc		10797668	0					
ANR	10797693	Identifier	enc		10797668	0					
ANR	10797694	Argument	ptr		10797668	1					
ANR	10797695	Identifier	ptr		10797668	0					
ANR	10797696	CompoundStatement		6:31:100:100	10797668	1					
ANR	10797697	Statement	CHECK_NMSTRT_CASES	720:2:18888:18905	10797668	0	True				
ANR	10797698	Statement	(	720:20:18906:18906	10797668	1	True				
ANR	10797699	Statement	enc	720:21:18907:18909	10797668	2	True				
ANR	10797700	Statement	","	720:24:18910:18910	10797668	3	True				
ANR	10797701	Statement	ptr	720:26:18912:18914	10797668	4	True				
ANR	10797702	Statement	","	720:29:18915:18915	10797668	5	True				
ANR	10797703	Statement	end	720:31:18917:18919	10797668	6	True				
ANR	10797704	Statement	","	720:34:18920:18920	10797668	7	True				
ANR	10797705	Statement	nextTokPtr	720:36:18922:18931	10797668	8	True				
ANR	10797706	Statement	)	720:46:18932:18932	10797668	9	True				
ANR	10797707	Label	case BT_EXCL :	721:2:18936:18948	10797668	10	True				
ANR	10797708	Identifier	BT_EXCL		10797668	0					
ANR	10797709	ExpressionStatement	ptr += MINBPC ( enc )	722:4:18954:18972	10797668	11	True				
ANR	10797710	AssignmentExpression	ptr += MINBPC ( enc )		10797668	0		+=			
ANR	10797711	Identifier	ptr		10797668	0					
ANR	10797712	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10797713	Callee	MINBPC		10797668	0					
ANR	10797714	Identifier	MINBPC		10797668	0					
ANR	10797715	ArgumentList	enc		10797668	1					
ANR	10797716	Argument	enc		10797668	0					
ANR	10797717	Identifier	enc		10797668	0					
ANR	10797718	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	723:4:18978:19005	10797668	12	True				
ANR	10797719	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797668	0					
ANR	10797720	Callee	REQUIRE_CHAR		10797668	0					
ANR	10797721	Identifier	REQUIRE_CHAR		10797668	0					
ANR	10797722	ArgumentList	enc		10797668	1					
ANR	10797723	Argument	enc		10797668	0					
ANR	10797724	Identifier	enc		10797668	0					
ANR	10797725	Argument	ptr		10797668	1					
ANR	10797726	Identifier	ptr		10797668	0					
ANR	10797727	Argument	end		10797668	2					
ANR	10797728	Identifier	end		10797668	0					
ANR	10797729	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797668	13					
ANR	10797730	Condition	"BYTE_TYPE ( enc , ptr )"	724:12:19019:19037	10797668	0	True				
ANR	10797731	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797668	0					
ANR	10797732	Callee	BYTE_TYPE		10797668	0					
ANR	10797733	Identifier	BYTE_TYPE		10797668	0					
ANR	10797734	ArgumentList	enc		10797668	1					
ANR	10797735	Argument	enc		10797668	0					
ANR	10797736	Identifier	enc		10797668	0					
ANR	10797737	Argument	ptr		10797668	1					
ANR	10797738	Identifier	ptr		10797668	0					
ANR	10797739	CompoundStatement		11:33:256:256	10797668	1					
ANR	10797740	Label	case BT_MINUS :	725:4:19046:19059	10797668	0	True				
ANR	10797741	Identifier	BT_MINUS		10797668	0					
ANR	10797742	ReturnStatement	"return PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	726:6:19067:19134	10797668	1	True				
ANR	10797743	CallExpression	"PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10797668	0					
ANR	10797744	Callee	PREFIX ( scanComment )		10797668	0					
ANR	10797745	CallExpression	PREFIX ( scanComment )		10797668	0					
ANR	10797746	Callee	PREFIX		10797668	0					
ANR	10797747	Identifier	PREFIX		10797668	0					
ANR	10797748	ArgumentList	scanComment		10797668	1					
ANR	10797749	Argument	scanComment		10797668	0					
ANR	10797750	Identifier	scanComment		10797668	0					
ANR	10797751	ArgumentList	enc		10797668	1					
ANR	10797752	Argument	enc		10797668	0					
ANR	10797753	Identifier	enc		10797668	0					
ANR	10797754	Argument	ptr + MINBPC ( enc )		10797668	1					
ANR	10797755	AdditiveExpression	ptr + MINBPC ( enc )		10797668	0		+			
ANR	10797756	Identifier	ptr		10797668	0					
ANR	10797757	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10797758	Callee	MINBPC		10797668	0					
ANR	10797759	Identifier	MINBPC		10797668	0					
ANR	10797760	ArgumentList	enc		10797668	1					
ANR	10797761	Argument	enc		10797668	0					
ANR	10797762	Identifier	enc		10797668	0					
ANR	10797763	Argument	end		10797668	2					
ANR	10797764	Identifier	end		10797668	0					
ANR	10797765	Argument	nextTokPtr		10797668	3					
ANR	10797766	Identifier	nextTokPtr		10797668	0					
ANR	10797767	Label	case BT_LSQB :	727:4:19140:19152	10797668	2	True				
ANR	10797768	Identifier	BT_LSQB		10797668	0					
ANR	10797769	ReturnStatement	"return PREFIX ( scanCdataSection ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	728:6:19160:19270	10797668	3	True				
ANR	10797770	CallExpression	"PREFIX ( scanCdataSection ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10797668	0					
ANR	10797771	Callee	PREFIX ( scanCdataSection )		10797668	0					
ANR	10797772	CallExpression	PREFIX ( scanCdataSection )		10797668	0					
ANR	10797773	Callee	PREFIX		10797668	0					
ANR	10797774	Identifier	PREFIX		10797668	0					
ANR	10797775	ArgumentList	scanCdataSection		10797668	1					
ANR	10797776	Argument	scanCdataSection		10797668	0					
ANR	10797777	Identifier	scanCdataSection		10797668	0					
ANR	10797778	ArgumentList	enc		10797668	1					
ANR	10797779	Argument	enc		10797668	0					
ANR	10797780	Identifier	enc		10797668	0					
ANR	10797781	Argument	ptr + MINBPC ( enc )		10797668	1					
ANR	10797782	AdditiveExpression	ptr + MINBPC ( enc )		10797668	0		+			
ANR	10797783	Identifier	ptr		10797668	0					
ANR	10797784	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10797785	Callee	MINBPC		10797668	0					
ANR	10797786	Identifier	MINBPC		10797668	0					
ANR	10797787	ArgumentList	enc		10797668	1					
ANR	10797788	Argument	enc		10797668	0					
ANR	10797789	Identifier	enc		10797668	0					
ANR	10797790	Argument	end		10797668	2					
ANR	10797791	Identifier	end		10797668	0					
ANR	10797792	Argument	nextTokPtr		10797668	3					
ANR	10797793	Identifier	nextTokPtr		10797668	0					
ANR	10797794	ExpressionStatement	* nextTokPtr = ptr	731:4:19282:19299	10797668	14	True				
ANR	10797795	AssignmentExpression	* nextTokPtr = ptr		10797668	0		=			
ANR	10797796	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10797797	UnaryOperator	*		10797668	0					
ANR	10797798	Identifier	nextTokPtr		10797668	1					
ANR	10797799	Identifier	ptr		10797668	1					
ANR	10797800	ReturnStatement	return XML_TOK_INVALID ;	732:4:19305:19327	10797668	15	True				
ANR	10797801	Identifier	XML_TOK_INVALID		10797668	0					
ANR	10797802	Label	case BT_QUEST :	733:2:19331:19344	10797668	16	True				
ANR	10797803	Identifier	BT_QUEST		10797668	0					
ANR	10797804	ReturnStatement	"return PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	734:4:19350:19412	10797668	17	True				
ANR	10797805	CallExpression	"PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10797668	0					
ANR	10797806	Callee	PREFIX ( scanPi )		10797668	0					
ANR	10797807	CallExpression	PREFIX ( scanPi )		10797668	0					
ANR	10797808	Callee	PREFIX		10797668	0					
ANR	10797809	Identifier	PREFIX		10797668	0					
ANR	10797810	ArgumentList	scanPi		10797668	1					
ANR	10797811	Argument	scanPi		10797668	0					
ANR	10797812	Identifier	scanPi		10797668	0					
ANR	10797813	ArgumentList	enc		10797668	1					
ANR	10797814	Argument	enc		10797668	0					
ANR	10797815	Identifier	enc		10797668	0					
ANR	10797816	Argument	ptr + MINBPC ( enc )		10797668	1					
ANR	10797817	AdditiveExpression	ptr + MINBPC ( enc )		10797668	0		+			
ANR	10797818	Identifier	ptr		10797668	0					
ANR	10797819	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10797820	Callee	MINBPC		10797668	0					
ANR	10797821	Identifier	MINBPC		10797668	0					
ANR	10797822	ArgumentList	enc		10797668	1					
ANR	10797823	Argument	enc		10797668	0					
ANR	10797824	Identifier	enc		10797668	0					
ANR	10797825	Argument	end		10797668	2					
ANR	10797826	Identifier	end		10797668	0					
ANR	10797827	Argument	nextTokPtr		10797668	3					
ANR	10797828	Identifier	nextTokPtr		10797668	0					
ANR	10797829	Label	case BT_SOL :	735:2:19416:19427	10797668	18	True				
ANR	10797830	Identifier	BT_SOL		10797668	0					
ANR	10797831	ReturnStatement	"return PREFIX ( scanEndTag ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	736:4:19433:19499	10797668	19	True				
ANR	10797832	CallExpression	"PREFIX ( scanEndTag ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10797668	0					
ANR	10797833	Callee	PREFIX ( scanEndTag )		10797668	0					
ANR	10797834	CallExpression	PREFIX ( scanEndTag )		10797668	0					
ANR	10797835	Callee	PREFIX		10797668	0					
ANR	10797836	Identifier	PREFIX		10797668	0					
ANR	10797837	ArgumentList	scanEndTag		10797668	1					
ANR	10797838	Argument	scanEndTag		10797668	0					
ANR	10797839	Identifier	scanEndTag		10797668	0					
ANR	10797840	ArgumentList	enc		10797668	1					
ANR	10797841	Argument	enc		10797668	0					
ANR	10797842	Identifier	enc		10797668	0					
ANR	10797843	Argument	ptr + MINBPC ( enc )		10797668	1					
ANR	10797844	AdditiveExpression	ptr + MINBPC ( enc )		10797668	0		+			
ANR	10797845	Identifier	ptr		10797668	0					
ANR	10797846	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10797847	Callee	MINBPC		10797668	0					
ANR	10797848	Identifier	MINBPC		10797668	0					
ANR	10797849	ArgumentList	enc		10797668	1					
ANR	10797850	Argument	enc		10797668	0					
ANR	10797851	Identifier	enc		10797668	0					
ANR	10797852	Argument	end		10797668	2					
ANR	10797853	Identifier	end		10797668	0					
ANR	10797854	Argument	nextTokPtr		10797668	3					
ANR	10797855	Identifier	nextTokPtr		10797668	0					
ANR	10797856	Label	default :	737:2:19503:19510	10797668	20	True				
ANR	10797857	Identifier	default		10797668	0					
ANR	10797858	ExpressionStatement	* nextTokPtr = ptr	738:4:19516:19533	10797668	21	True				
ANR	10797859	AssignmentExpression	* nextTokPtr = ptr		10797668	0		=			
ANR	10797860	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10797861	UnaryOperator	*		10797668	0					
ANR	10797862	Identifier	nextTokPtr		10797668	1					
ANR	10797863	Identifier	ptr		10797668	1					
ANR	10797864	ReturnStatement	return XML_TOK_INVALID ;	739:4:19539:19561	10797668	22	True				
ANR	10797865	Identifier	XML_TOK_INVALID		10797668	0					
ANR	10797866	ExpressionStatement	hadColon = 0	742:2:19583:19595	10797668	3	True				
ANR	10797867	AssignmentExpression	hadColon = 0		10797668	0		=			
ANR	10797868	Identifier	hadColon		10797668	0					
ANR	10797869	PrimaryExpression	0		10797668	1					
ANR	10797870	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10797668	4					
ANR	10797871	Condition	"HAS_CHAR ( enc , ptr , end )"	745:9:19641:19663	10797668	0	True				
ANR	10797872	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10797668	0					
ANR	10797873	Callee	HAS_CHAR		10797668	0					
ANR	10797874	Identifier	HAS_CHAR		10797668	0					
ANR	10797875	ArgumentList	enc		10797668	1					
ANR	10797876	Argument	enc		10797668	0					
ANR	10797877	Identifier	enc		10797668	0					
ANR	10797878	Argument	ptr		10797668	1					
ANR	10797879	Identifier	ptr		10797668	0					
ANR	10797880	Argument	end		10797668	2					
ANR	10797881	Identifier	end		10797668	0					
ANR	10797882	CompoundStatement		32:34:882:882	10797668	1					
ANR	10797883	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797668	0					
ANR	10797884	Condition	"BYTE_TYPE ( enc , ptr )"	746:12:19680:19698	10797668	0	True				
ANR	10797885	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797668	0					
ANR	10797886	Callee	BYTE_TYPE		10797668	0					
ANR	10797887	Identifier	BYTE_TYPE		10797668	0					
ANR	10797888	ArgumentList	enc		10797668	1					
ANR	10797889	Argument	enc		10797668	0					
ANR	10797890	Identifier	enc		10797668	0					
ANR	10797891	Argument	ptr		10797668	1					
ANR	10797892	Identifier	ptr		10797668	0					
ANR	10797893	CompoundStatement		33:33:917:917	10797668	1					
ANR	10797894	Statement	CHECK_NAME_CASES	747:4:19707:19722	10797668	0	True				
ANR	10797895	Statement	(	747:20:19723:19723	10797668	1	True				
ANR	10797896	Statement	enc	747:21:19724:19726	10797668	2	True				
ANR	10797897	Statement	","	747:24:19727:19727	10797668	3	True				
ANR	10797898	Statement	ptr	747:26:19729:19731	10797668	4	True				
ANR	10797899	Statement	","	747:29:19732:19732	10797668	5	True				
ANR	10797900	Statement	end	747:31:19734:19736	10797668	6	True				
ANR	10797901	Statement	","	747:34:19737:19737	10797668	7	True				
ANR	10797902	Statement	nextTokPtr	747:36:19739:19748	10797668	8	True				
ANR	10797903	Statement	)	747:46:19749:19749	10797668	9	True				
ANR	10797904	Label	case BT_COLON :	749:4:19769:19782	10797668	10	True				
ANR	10797905	Identifier	BT_COLON		10797668	0					
ANR	10797906	IfStatement	if ( hadColon )		10797668	11					
ANR	10797907	Condition	hadColon	750:10:19794:19801	10797668	0	True				
ANR	10797908	Identifier	hadColon		10797668	0					
ANR	10797909	CompoundStatement		37:20:1020:1020	10797668	1					
ANR	10797910	ExpressionStatement	* nextTokPtr = ptr	751:8:19814:19831	10797668	0	True				
ANR	10797911	AssignmentExpression	* nextTokPtr = ptr		10797668	0		=			
ANR	10797912	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10797913	UnaryOperator	*		10797668	0					
ANR	10797914	Identifier	nextTokPtr		10797668	1					
ANR	10797915	Identifier	ptr		10797668	1					
ANR	10797916	ReturnStatement	return XML_TOK_INVALID ;	752:8:19841:19863	10797668	1	True				
ANR	10797917	Identifier	XML_TOK_INVALID		10797668	0					
ANR	10797918	ExpressionStatement	hadColon = 1	754:6:19879:19891	10797668	12	True				
ANR	10797919	AssignmentExpression	hadColon = 1		10797668	0		=			
ANR	10797920	Identifier	hadColon		10797668	0					
ANR	10797921	PrimaryExpression	1		10797668	1					
ANR	10797922	ExpressionStatement	ptr += MINBPC ( enc )	755:6:19899:19917	10797668	13	True				
ANR	10797923	AssignmentExpression	ptr += MINBPC ( enc )		10797668	0		+=			
ANR	10797924	Identifier	ptr		10797668	0					
ANR	10797925	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10797926	Callee	MINBPC		10797668	0					
ANR	10797927	Identifier	MINBPC		10797668	0					
ANR	10797928	ArgumentList	enc		10797668	1					
ANR	10797929	Argument	enc		10797668	0					
ANR	10797930	Identifier	enc		10797668	0					
ANR	10797931	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	756:6:19925:19952	10797668	14	True				
ANR	10797932	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797668	0					
ANR	10797933	Callee	REQUIRE_CHAR		10797668	0					
ANR	10797934	Identifier	REQUIRE_CHAR		10797668	0					
ANR	10797935	ArgumentList	enc		10797668	1					
ANR	10797936	Argument	enc		10797668	0					
ANR	10797937	Identifier	enc		10797668	0					
ANR	10797938	Argument	ptr		10797668	1					
ANR	10797939	Identifier	ptr		10797668	0					
ANR	10797940	Argument	end		10797668	2					
ANR	10797941	Identifier	end		10797668	0					
ANR	10797942	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797668	15					
ANR	10797943	Condition	"BYTE_TYPE ( enc , ptr )"	757:14:19968:19986	10797668	0	True				
ANR	10797944	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797668	0					
ANR	10797945	Callee	BYTE_TYPE		10797668	0					
ANR	10797946	Identifier	BYTE_TYPE		10797668	0					
ANR	10797947	ArgumentList	enc		10797668	1					
ANR	10797948	Argument	enc		10797668	0					
ANR	10797949	Identifier	enc		10797668	0					
ANR	10797950	Argument	ptr		10797668	1					
ANR	10797951	Identifier	ptr		10797668	0					
ANR	10797952	CompoundStatement		44:35:1205:1205	10797668	1					
ANR	10797953	Statement	CHECK_NMSTRT_CASES	758:6:19997:20014	10797668	0	True				
ANR	10797954	Statement	(	758:24:20015:20015	10797668	1	True				
ANR	10797955	Statement	enc	758:25:20016:20018	10797668	2	True				
ANR	10797956	Statement	","	758:28:20019:20019	10797668	3	True				
ANR	10797957	Statement	ptr	758:30:20021:20023	10797668	4	True				
ANR	10797958	Statement	","	758:33:20024:20024	10797668	5	True				
ANR	10797959	Statement	end	758:35:20026:20028	10797668	6	True				
ANR	10797960	Statement	","	758:38:20029:20029	10797668	7	True				
ANR	10797961	Statement	nextTokPtr	758:40:20031:20040	10797668	8	True				
ANR	10797962	Statement	)	758:50:20041:20041	10797668	9	True				
ANR	10797963	Label	default :	759:6:20049:20056	10797668	10	True				
ANR	10797964	Identifier	default		10797668	0					
ANR	10797965	ExpressionStatement	* nextTokPtr = ptr	760:8:20066:20083	10797668	11	True				
ANR	10797966	AssignmentExpression	* nextTokPtr = ptr		10797668	0		=			
ANR	10797967	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10797968	UnaryOperator	*		10797668	0					
ANR	10797969	Identifier	nextTokPtr		10797668	1					
ANR	10797970	Identifier	ptr		10797668	1					
ANR	10797971	ReturnStatement	return XML_TOK_INVALID ;	761:8:20093:20115	10797668	12	True				
ANR	10797972	Identifier	XML_TOK_INVALID		10797668	0					
ANR	10797973	BreakStatement	break ;	763:6:20131:20136	10797668	16	True				
ANR	10797974	Label	case BT_S :	765:4:20149:20158	10797668	17	True				
ANR	10797975	Identifier	BT_S		10797668	0					
ANR	10797976	Label	case BT_CR :	765:15:20160:20170	10797668	18	True				
ANR	10797977	Identifier	BT_CR		10797668	0					
ANR	10797978	Label	case BT_LF :	765:27:20172:20182	10797668	19	True				
ANR	10797979	Identifier	BT_LF		10797668	0					
ANR	10797980	CompoundStatement		53:6:1406:1406	10797668	20					
ANR	10797981	ExpressionStatement	ptr += MINBPC ( enc )	767:8:20200:20218	10797668	0	True				
ANR	10797982	AssignmentExpression	ptr += MINBPC ( enc )		10797668	0		+=			
ANR	10797983	Identifier	ptr		10797668	0					
ANR	10797984	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10797985	Callee	MINBPC		10797668	0					
ANR	10797986	Identifier	MINBPC		10797668	0					
ANR	10797987	ArgumentList	enc		10797668	1					
ANR	10797988	Argument	enc		10797668	0					
ANR	10797989	Identifier	enc		10797668	0					
ANR	10797990	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10797668	1					
ANR	10797991	Condition	"HAS_CHAR ( enc , ptr , end )"	768:15:20235:20257	10797668	0	True				
ANR	10797992	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10797668	0					
ANR	10797993	Callee	HAS_CHAR		10797668	0					
ANR	10797994	Identifier	HAS_CHAR		10797668	0					
ANR	10797995	ArgumentList	enc		10797668	1					
ANR	10797996	Argument	enc		10797668	0					
ANR	10797997	Identifier	enc		10797668	0					
ANR	10797998	Argument	ptr		10797668	1					
ANR	10797999	Identifier	ptr		10797668	0					
ANR	10798000	Argument	end		10797668	2					
ANR	10798001	Identifier	end		10797668	0					
ANR	10798002	CompoundStatement		55:40:1476:1476	10797668	1					
ANR	10798003	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10797668	0					
ANR	10798004	Condition	"BYTE_TYPE ( enc , ptr )"	769:18:20280:20298	10797668	0	True				
ANR	10798005	CallExpression	"BYTE_TYPE ( enc , ptr )"		10797668	0					
ANR	10798006	Callee	BYTE_TYPE		10797668	0					
ANR	10798007	Identifier	BYTE_TYPE		10797668	0					
ANR	10798008	ArgumentList	enc		10797668	1					
ANR	10798009	Argument	enc		10797668	0					
ANR	10798010	Identifier	enc		10797668	0					
ANR	10798011	Argument	ptr		10797668	1					
ANR	10798012	Identifier	ptr		10797668	0					
ANR	10798013	CompoundStatement		56:39:1517:1517	10797668	1					
ANR	10798014	Statement	CHECK_NMSTRT_CASES	770:10:20313:20330	10797668	0	True				
ANR	10798015	Statement	(	770:28:20331:20331	10797668	1	True				
ANR	10798016	Statement	enc	770:29:20332:20334	10797668	2	True				
ANR	10798017	Statement	","	770:32:20335:20335	10797668	3	True				
ANR	10798018	Statement	ptr	770:34:20337:20339	10797668	4	True				
ANR	10798019	Statement	","	770:37:20340:20340	10797668	5	True				
ANR	10798020	Statement	end	770:39:20342:20344	10797668	6	True				
ANR	10798021	Statement	","	770:42:20345:20345	10797668	7	True				
ANR	10798022	Statement	nextTokPtr	770:44:20347:20356	10797668	8	True				
ANR	10798023	Statement	)	770:54:20357:20357	10797668	9	True				
ANR	10798024	Label	case BT_GT :	771:10:20369:20379	10797668	10	True				
ANR	10798025	Identifier	BT_GT		10797668	0					
ANR	10798026	GotoStatement	goto gt ;	772:12:20393:20400	10797668	11	True				
ANR	10798027	Identifier	gt		10797668	0					
ANR	10798028	Label	case BT_SOL :	773:10:20412:20423	10797668	12	True				
ANR	10798029	Identifier	BT_SOL		10797668	0					
ANR	10798030	GotoStatement	goto sol ;	774:12:20437:20445	10797668	13	True				
ANR	10798031	Identifier	sol		10797668	0					
ANR	10798032	Label	case BT_S :	775:10:20457:20466	10797668	14	True				
ANR	10798033	Identifier	BT_S		10797668	0					
ANR	10798034	Label	case BT_CR :	775:21:20468:20478	10797668	15	True				
ANR	10798035	Identifier	BT_CR		10797668	0					
ANR	10798036	Label	case BT_LF :	775:33:20480:20490	10797668	16	True				
ANR	10798037	Identifier	BT_LF		10797668	0					
ANR	10798038	ExpressionStatement	ptr += MINBPC ( enc )	776:12:20504:20522	10797668	17	True				
ANR	10798039	AssignmentExpression	ptr += MINBPC ( enc )		10797668	0		+=			
ANR	10798040	Identifier	ptr		10797668	0					
ANR	10798041	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10798042	Callee	MINBPC		10797668	0					
ANR	10798043	Identifier	MINBPC		10797668	0					
ANR	10798044	ArgumentList	enc		10797668	1					
ANR	10798045	Argument	enc		10797668	0					
ANR	10798046	Identifier	enc		10797668	0					
ANR	10798047	ContinueStatement	continue ;	777:12:20536:20544	10797668	18	True				
ANR	10798048	Label	default :	778:10:20556:20563	10797668	19	True				
ANR	10798049	Identifier	default		10797668	0					
ANR	10798050	ExpressionStatement	* nextTokPtr = ptr	779:12:20577:20594	10797668	20	True				
ANR	10798051	AssignmentExpression	* nextTokPtr = ptr		10797668	0		=			
ANR	10798052	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10798053	UnaryOperator	*		10797668	0					
ANR	10798054	Identifier	nextTokPtr		10797668	1					
ANR	10798055	Identifier	ptr		10797668	1					
ANR	10798056	ReturnStatement	return XML_TOK_INVALID ;	780:12:20608:20630	10797668	21	True				
ANR	10798057	Identifier	XML_TOK_INVALID		10797668	0					
ANR	10798058	ReturnStatement	"return PREFIX ( scanAtts ) ( enc , ptr , end , nextTokPtr ) ;"	782:10:20654:20704	10797668	1	True				
ANR	10798059	CallExpression	"PREFIX ( scanAtts ) ( enc , ptr , end , nextTokPtr )"		10797668	0					
ANR	10798060	Callee	PREFIX ( scanAtts )		10797668	0					
ANR	10798061	CallExpression	PREFIX ( scanAtts )		10797668	0					
ANR	10798062	Callee	PREFIX		10797668	0					
ANR	10798063	Identifier	PREFIX		10797668	0					
ANR	10798064	ArgumentList	scanAtts		10797668	1					
ANR	10798065	Argument	scanAtts		10797668	0					
ANR	10798066	Identifier	scanAtts		10797668	0					
ANR	10798067	ArgumentList	enc		10797668	1					
ANR	10798068	Argument	enc		10797668	0					
ANR	10798069	Identifier	enc		10797668	0					
ANR	10798070	Argument	ptr		10797668	1					
ANR	10798071	Identifier	ptr		10797668	0					
ANR	10798072	Argument	end		10797668	2					
ANR	10798073	Identifier	end		10797668	0					
ANR	10798074	Argument	nextTokPtr		10797668	3					
ANR	10798075	Identifier	nextTokPtr		10797668	0					
ANR	10798076	ReturnStatement	return XML_TOK_PARTIAL ;	784:8:20724:20746	10797668	2	True				
ANR	10798077	Identifier	XML_TOK_PARTIAL		10797668	0					
ANR	10798078	Label	case BT_GT :	786:4:20760:20770	10797668	21	True				
ANR	10798079	Identifier	BT_GT		10797668	0					
ANR	10798080	Label	gt :	787:4:20776:20778	10797668	22	True				
ANR	10798081	Identifier	gt		10797668	0					
ANR	10798082	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	788:6:20786:20817	10797668	23	True				
ANR	10798083	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10797668	0		=			
ANR	10798084	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10798085	UnaryOperator	*		10797668	0					
ANR	10798086	Identifier	nextTokPtr		10797668	1					
ANR	10798087	AdditiveExpression	ptr + MINBPC ( enc )		10797668	1		+			
ANR	10798088	Identifier	ptr		10797668	0					
ANR	10798089	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10798090	Callee	MINBPC		10797668	0					
ANR	10798091	Identifier	MINBPC		10797668	0					
ANR	10798092	ArgumentList	enc		10797668	1					
ANR	10798093	Argument	enc		10797668	0					
ANR	10798094	Identifier	enc		10797668	0					
ANR	10798095	ReturnStatement	return XML_TOK_START_TAG_NO_ATTS ;	789:6:20825:20857	10797668	24	True				
ANR	10798096	Identifier	XML_TOK_START_TAG_NO_ATTS		10797668	0					
ANR	10798097	Label	case BT_SOL :	790:4:20863:20874	10797668	25	True				
ANR	10798098	Identifier	BT_SOL		10797668	0					
ANR	10798099	Label	sol :	791:4:20880:20883	10797668	26	True				
ANR	10798100	Identifier	sol		10797668	0					
ANR	10798101	ExpressionStatement	ptr += MINBPC ( enc )	792:6:20891:20909	10797668	27	True				
ANR	10798102	AssignmentExpression	ptr += MINBPC ( enc )		10797668	0		+=			
ANR	10798103	Identifier	ptr		10797668	0					
ANR	10798104	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10798105	Callee	MINBPC		10797668	0					
ANR	10798106	Identifier	MINBPC		10797668	0					
ANR	10798107	ArgumentList	enc		10797668	1					
ANR	10798108	Argument	enc		10797668	0					
ANR	10798109	Identifier	enc		10797668	0					
ANR	10798110	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	793:6:20917:20944	10797668	28	True				
ANR	10798111	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10797668	0					
ANR	10798112	Callee	REQUIRE_CHAR		10797668	0					
ANR	10798113	Identifier	REQUIRE_CHAR		10797668	0					
ANR	10798114	ArgumentList	enc		10797668	1					
ANR	10798115	Argument	enc		10797668	0					
ANR	10798116	Identifier	enc		10797668	0					
ANR	10798117	Argument	ptr		10797668	1					
ANR	10798118	Identifier	ptr		10797668	0					
ANR	10798119	Argument	end		10797668	2					
ANR	10798120	Identifier	end		10797668	0					
ANR	10798121	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10797668	29					
ANR	10798122	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	794:10:20956:20988	10797668	0	True				
ANR	10798123	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10797668	0					
ANR	10798124	UnaryOperator	!		10797668	0					
ANR	10798125	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10797668	1					
ANR	10798126	Callee	CHAR_MATCHES		10797668	0					
ANR	10798127	Identifier	CHAR_MATCHES		10797668	0					
ANR	10798128	ArgumentList	enc		10797668	1					
ANR	10798129	Argument	enc		10797668	0					
ANR	10798130	Identifier	enc		10797668	0					
ANR	10798131	Argument	ptr		10797668	1					
ANR	10798132	Identifier	ptr		10797668	0					
ANR	10798133	Argument	ASCII_GT		10797668	2					
ANR	10798134	Identifier	ASCII_GT		10797668	0					
ANR	10798135	CompoundStatement		81:45:2207:2207	10797668	1					
ANR	10798136	ExpressionStatement	* nextTokPtr = ptr	795:8:21001:21018	10797668	0	True				
ANR	10798137	AssignmentExpression	* nextTokPtr = ptr		10797668	0		=			
ANR	10798138	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10798139	UnaryOperator	*		10797668	0					
ANR	10798140	Identifier	nextTokPtr		10797668	1					
ANR	10798141	Identifier	ptr		10797668	1					
ANR	10798142	ReturnStatement	return XML_TOK_INVALID ;	796:8:21028:21050	10797668	1	True				
ANR	10798143	Identifier	XML_TOK_INVALID		10797668	0					
ANR	10798144	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	798:6:21066:21097	10797668	30	True				
ANR	10798145	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10797668	0		=			
ANR	10798146	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10798147	UnaryOperator	*		10797668	0					
ANR	10798148	Identifier	nextTokPtr		10797668	1					
ANR	10798149	AdditiveExpression	ptr + MINBPC ( enc )		10797668	1		+			
ANR	10798150	Identifier	ptr		10797668	0					
ANR	10798151	CallExpression	MINBPC ( enc )		10797668	1					
ANR	10798152	Callee	MINBPC		10797668	0					
ANR	10798153	Identifier	MINBPC		10797668	0					
ANR	10798154	ArgumentList	enc		10797668	1					
ANR	10798155	Argument	enc		10797668	0					
ANR	10798156	Identifier	enc		10797668	0					
ANR	10798157	ReturnStatement	return XML_TOK_EMPTY_ELEMENT_NO_ATTS ;	799:6:21105:21141	10797668	31	True				
ANR	10798158	Identifier	XML_TOK_EMPTY_ELEMENT_NO_ATTS		10797668	0					
ANR	10798159	Label	default :	800:4:21147:21154	10797668	32	True				
ANR	10798160	Identifier	default		10797668	0					
ANR	10798161	ExpressionStatement	* nextTokPtr = ptr	801:6:21162:21179	10797668	33	True				
ANR	10798162	AssignmentExpression	* nextTokPtr = ptr		10797668	0		=			
ANR	10798163	UnaryOperationExpression	* nextTokPtr		10797668	0					
ANR	10798164	UnaryOperator	*		10797668	0					
ANR	10798165	Identifier	nextTokPtr		10797668	1					
ANR	10798166	Identifier	ptr		10797668	1					
ANR	10798167	ReturnStatement	return XML_TOK_INVALID ;	802:6:21187:21209	10797668	34	True				
ANR	10798168	Identifier	XML_TOK_INVALID		10797668	0					
ANR	10798169	ReturnStatement	return XML_TOK_PARTIAL ;	805:2:21223:21245	10797668	5	True				
ANR	10798170	Identifier	XML_TOK_PARTIAL		10797668	0					
ANR	10798171	ReturnType	static int PTRCALL PREFIX		10797668	1					
ANR	10798172	Identifier	( scanLt )		10797668	2					
ANR	10798173	Identifier	scanLt		10797668	3					
ANR	10798174	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10797668	4					
ANR	10798175	Parameter	const ENCODING * enc	712:15:18688:18706	10797668	0	True				
ANR	10798176	ParameterType	const ENCODING *		10797668	0					
ANR	10798177	Identifier	enc		10797668	1					
ANR	10798178	Parameter	const char * ptr	712:36:18709:18723	10797668	1	True				
ANR	10798179	ParameterType	const char *		10797668	0					
ANR	10798180	Identifier	ptr		10797668	1					
ANR	10798181	Parameter	const char * end	712:53:18726:18740	10797668	2	True				
ANR	10798182	ParameterType	const char *		10797668	0					
ANR	10798183	Identifier	end		10797668	1					
ANR	10798184	Parameter	const char * * nextTokPtr	713:15:18758:18780	10797668	3	True				
ANR	10798185	ParameterType	const char * *		10797668	0					
ANR	10798186	Identifier	nextTokPtr		10797668	1					
ANR	10798187	CFGEntryNode	ENTRY		10797668		True				
ANR	10798188	CFGExitNode	EXIT		10797668		True				
ANR	10798189	Symbol	XML_TOK_INVALID		10797668						
ANR	10798190	Symbol	nextTokPtr		10797668						
ANR	10798191	Symbol	XML_TOK_PARTIAL		10797668						
ANR	10798192	Symbol	BYTE_TYPE		10797668						
ANR	10798193	Symbol	scanPi		10797668						
ANR	10798194	Symbol	XML_TOK_START_TAG_NO_ATTS		10797668						
ANR	10798195	Symbol	* nextTokPtr		10797668						
ANR	10798196	Symbol	hadColon		10797668						
ANR	10798197	Symbol	XML_TOK_EMPTY_ELEMENT_NO_ATTS		10797668						
ANR	10798198	Symbol	scanAtts		10797668						
ANR	10798199	Symbol	MINBPC		10797668						
ANR	10798200	Symbol	scanCdataSection		10797668						
ANR	10798201	Symbol	ptr		10797668						
ANR	10798202	Symbol	CHAR_MATCHES		10797668						
ANR	10798203	Symbol	scanComment		10797668						
ANR	10798204	Symbol	scanEndTag		10797668						
ANR	10798205	Symbol	PREFIX		10797668						
ANR	10798206	Symbol	ASCII_GT		10797668						
ANR	10798207	Symbol	end		10797668						
ANR	10798208	Symbol	enc		10797668						
ANR	10798209	Symbol	HAS_CHAR		10797668						
ANR	10798210	Function	contentTok	808:0:21250:23756							
ANR	10798211	FunctionDef	"contentTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10798210	0					
ANR	10798212	CompoundStatement		811:0:21387:23756	10798210	0					
ANR	10798213	IfStatement	if ( ptr >= end )		10798210	0					
ANR	10798214	Condition	ptr >= end	812:6:21395:21404	10798210	0	True				
ANR	10798215	RelationalExpression	ptr >= end		10798210	0		>=			
ANR	10798216	Identifier	ptr		10798210	0					
ANR	10798217	Identifier	end		10798210	1					
ANR	10798218	ReturnStatement	return XML_TOK_NONE ;	813:4:21411:21430	10798210	1	True				
ANR	10798219	Identifier	XML_TOK_NONE		10798210	0					
ANR	10798220	IfStatement	if ( MINBPC ( enc ) > 1 )		10798210	1					
ANR	10798221	Condition	MINBPC ( enc ) > 1	814:6:21438:21452	10798210	0	True				
ANR	10798222	RelationalExpression	MINBPC ( enc ) > 1		10798210	0		>			
ANR	10798223	CallExpression	MINBPC ( enc )		10798210	0					
ANR	10798224	Callee	MINBPC		10798210	0					
ANR	10798225	Identifier	MINBPC		10798210	0					
ANR	10798226	ArgumentList	enc		10798210	1					
ANR	10798227	Argument	enc		10798210	0					
ANR	10798228	Identifier	enc		10798210	0					
ANR	10798229	PrimaryExpression	1		10798210	1					
ANR	10798230	CompoundStatement		5:4:73:93	10798210	1					
ANR	10798231	IdentifierDeclStatement	size_t n = end - ptr ;	815:4:21461:21481	10798210	0	True				
ANR	10798232	IdentifierDecl	n = end - ptr		10798210	0					
ANR	10798233	IdentifierDeclType	size_t		10798210	0					
ANR	10798234	Identifier	n		10798210	1					
ANR	10798235	AssignmentExpression	n = end - ptr		10798210	2		=			
ANR	10798236	Identifier	n		10798210	0					
ANR	10798237	AdditiveExpression	end - ptr		10798210	1		-			
ANR	10798238	Identifier	end		10798210	0					
ANR	10798239	Identifier	ptr		10798210	1					
ANR	10798240	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		10798210	1					
ANR	10798241	Condition	n & ( MINBPC ( enc ) - 1 )	816:8:21491:21511	10798210	0	True				
ANR	10798242	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		10798210	0		&			
ANR	10798243	Identifier	n		10798210	0					
ANR	10798244	AdditiveExpression	MINBPC ( enc ) - 1		10798210	1		-			
ANR	10798245	CallExpression	MINBPC ( enc )		10798210	0					
ANR	10798246	Callee	MINBPC		10798210	0					
ANR	10798247	Identifier	MINBPC		10798210	0					
ANR	10798248	ArgumentList	enc		10798210	1					
ANR	10798249	Argument	enc		10798210	0					
ANR	10798250	Identifier	enc		10798210	0					
ANR	10798251	PrimaryExpression	1		10798210	1					
ANR	10798252	CompoundStatement		6:31:126:126	10798210	1					
ANR	10798253	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	817:6:21522:21545	10798210	0	True				
ANR	10798254	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		10798210	0		&=			
ANR	10798255	Identifier	n		10798210	0					
ANR	10798256	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		10798210	1					
ANR	10798257	UnaryOperator	~		10798210	0					
ANR	10798258	AdditiveExpression	MINBPC ( enc ) - 1		10798210	1		-			
ANR	10798259	CallExpression	MINBPC ( enc )		10798210	0					
ANR	10798260	Callee	MINBPC		10798210	0					
ANR	10798261	Identifier	MINBPC		10798210	0					
ANR	10798262	ArgumentList	enc		10798210	1					
ANR	10798263	Argument	enc		10798210	0					
ANR	10798264	Identifier	enc		10798210	0					
ANR	10798265	PrimaryExpression	1		10798210	1					
ANR	10798266	IfStatement	if ( n == 0 )		10798210	1					
ANR	10798267	Condition	n == 0	818:10:21557:21562	10798210	0	True				
ANR	10798268	EqualityExpression	n == 0		10798210	0		==			
ANR	10798269	Identifier	n		10798210	0					
ANR	10798270	PrimaryExpression	0		10798210	1					
ANR	10798271	ReturnStatement	return XML_TOK_PARTIAL ;	819:8:21573:21595	10798210	1	True				
ANR	10798272	Identifier	XML_TOK_PARTIAL		10798210	0					
ANR	10798273	ExpressionStatement	end = ptr + n	820:6:21603:21616	10798210	2	True				
ANR	10798274	AssignmentExpression	end = ptr + n		10798210	0		=			
ANR	10798275	Identifier	end		10798210	0					
ANR	10798276	AdditiveExpression	ptr + n		10798210	1		+			
ANR	10798277	Identifier	ptr		10798210	0					
ANR	10798278	Identifier	n		10798210	1					
ANR	10798279	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10798210	2					
ANR	10798280	Condition	"BYTE_TYPE ( enc , ptr )"	823:10:21638:21656	10798210	0	True				
ANR	10798281	CallExpression	"BYTE_TYPE ( enc , ptr )"		10798210	0					
ANR	10798282	Callee	BYTE_TYPE		10798210	0					
ANR	10798283	Identifier	BYTE_TYPE		10798210	0					
ANR	10798284	ArgumentList	enc		10798210	1					
ANR	10798285	Argument	enc		10798210	0					
ANR	10798286	Identifier	enc		10798210	0					
ANR	10798287	Argument	ptr		10798210	1					
ANR	10798288	Identifier	ptr		10798210	0					
ANR	10798289	CompoundStatement		13:31:271:271	10798210	1					
ANR	10798290	Label	case BT_LT :	824:2:21663:21673	10798210	0	True				
ANR	10798291	Identifier	BT_LT		10798210	0					
ANR	10798292	ReturnStatement	"return PREFIX ( scanLt ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	825:4:21679:21741	10798210	1	True				
ANR	10798293	CallExpression	"PREFIX ( scanLt ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10798210	0					
ANR	10798294	Callee	PREFIX ( scanLt )		10798210	0					
ANR	10798295	CallExpression	PREFIX ( scanLt )		10798210	0					
ANR	10798296	Callee	PREFIX		10798210	0					
ANR	10798297	Identifier	PREFIX		10798210	0					
ANR	10798298	ArgumentList	scanLt		10798210	1					
ANR	10798299	Argument	scanLt		10798210	0					
ANR	10798300	Identifier	scanLt		10798210	0					
ANR	10798301	ArgumentList	enc		10798210	1					
ANR	10798302	Argument	enc		10798210	0					
ANR	10798303	Identifier	enc		10798210	0					
ANR	10798304	Argument	ptr + MINBPC ( enc )		10798210	1					
ANR	10798305	AdditiveExpression	ptr + MINBPC ( enc )		10798210	0		+			
ANR	10798306	Identifier	ptr		10798210	0					
ANR	10798307	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798308	Callee	MINBPC		10798210	0					
ANR	10798309	Identifier	MINBPC		10798210	0					
ANR	10798310	ArgumentList	enc		10798210	1					
ANR	10798311	Argument	enc		10798210	0					
ANR	10798312	Identifier	enc		10798210	0					
ANR	10798313	Argument	end		10798210	2					
ANR	10798314	Identifier	end		10798210	0					
ANR	10798315	Argument	nextTokPtr		10798210	3					
ANR	10798316	Identifier	nextTokPtr		10798210	0					
ANR	10798317	Label	case BT_AMP :	826:2:21745:21756	10798210	2	True				
ANR	10798318	Identifier	BT_AMP		10798210	0					
ANR	10798319	ReturnStatement	"return PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	827:4:21762:21825	10798210	3	True				
ANR	10798320	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10798210	0					
ANR	10798321	Callee	PREFIX ( scanRef )		10798210	0					
ANR	10798322	CallExpression	PREFIX ( scanRef )		10798210	0					
ANR	10798323	Callee	PREFIX		10798210	0					
ANR	10798324	Identifier	PREFIX		10798210	0					
ANR	10798325	ArgumentList	scanRef		10798210	1					
ANR	10798326	Argument	scanRef		10798210	0					
ANR	10798327	Identifier	scanRef		10798210	0					
ANR	10798328	ArgumentList	enc		10798210	1					
ANR	10798329	Argument	enc		10798210	0					
ANR	10798330	Identifier	enc		10798210	0					
ANR	10798331	Argument	ptr + MINBPC ( enc )		10798210	1					
ANR	10798332	AdditiveExpression	ptr + MINBPC ( enc )		10798210	0		+			
ANR	10798333	Identifier	ptr		10798210	0					
ANR	10798334	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798335	Callee	MINBPC		10798210	0					
ANR	10798336	Identifier	MINBPC		10798210	0					
ANR	10798337	ArgumentList	enc		10798210	1					
ANR	10798338	Argument	enc		10798210	0					
ANR	10798339	Identifier	enc		10798210	0					
ANR	10798340	Argument	end		10798210	2					
ANR	10798341	Identifier	end		10798210	0					
ANR	10798342	Argument	nextTokPtr		10798210	3					
ANR	10798343	Identifier	nextTokPtr		10798210	0					
ANR	10798344	Label	case BT_CR :	828:2:21829:21839	10798210	4	True				
ANR	10798345	Identifier	BT_CR		10798210	0					
ANR	10798346	ExpressionStatement	ptr += MINBPC ( enc )	829:4:21845:21863	10798210	5	True				
ANR	10798347	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798348	Identifier	ptr		10798210	0					
ANR	10798349	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798350	Callee	MINBPC		10798210	0					
ANR	10798351	Identifier	MINBPC		10798210	0					
ANR	10798352	ArgumentList	enc		10798210	1					
ANR	10798353	Argument	enc		10798210	0					
ANR	10798354	Identifier	enc		10798210	0					
ANR	10798355	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10798210	6					
ANR	10798356	Condition	"! HAS_CHAR ( enc , ptr , end )"	830:8:21873:21897	10798210	0	True				
ANR	10798357	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10798210	0					
ANR	10798358	UnaryOperator	!		10798210	0					
ANR	10798359	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10798210	1					
ANR	10798360	Callee	HAS_CHAR		10798210	0					
ANR	10798361	Identifier	HAS_CHAR		10798210	0					
ANR	10798362	ArgumentList	enc		10798210	1					
ANR	10798363	Argument	enc		10798210	0					
ANR	10798364	Identifier	enc		10798210	0					
ANR	10798365	Argument	ptr		10798210	1					
ANR	10798366	Identifier	ptr		10798210	0					
ANR	10798367	Argument	end		10798210	2					
ANR	10798368	Identifier	end		10798210	0					
ANR	10798369	ReturnStatement	return XML_TOK_TRAILING_CR ;	831:6:21906:21932	10798210	1	True				
ANR	10798370	Identifier	XML_TOK_TRAILING_CR		10798210	0					
ANR	10798371	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		10798210	7					
ANR	10798372	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	832:8:21942:21969	10798210	0	True				
ANR	10798373	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		10798210	0		==			
ANR	10798374	CallExpression	"BYTE_TYPE ( enc , ptr )"		10798210	0					
ANR	10798375	Callee	BYTE_TYPE		10798210	0					
ANR	10798376	Identifier	BYTE_TYPE		10798210	0					
ANR	10798377	ArgumentList	enc		10798210	1					
ANR	10798378	Argument	enc		10798210	0					
ANR	10798379	Identifier	enc		10798210	0					
ANR	10798380	Argument	ptr		10798210	1					
ANR	10798381	Identifier	ptr		10798210	0					
ANR	10798382	Identifier	BT_LF		10798210	1					
ANR	10798383	ExpressionStatement	ptr += MINBPC ( enc )	833:6:21978:21996	10798210	1	True				
ANR	10798384	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798385	Identifier	ptr		10798210	0					
ANR	10798386	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798387	Callee	MINBPC		10798210	0					
ANR	10798388	Identifier	MINBPC		10798210	0					
ANR	10798389	ArgumentList	enc		10798210	1					
ANR	10798390	Argument	enc		10798210	0					
ANR	10798391	Identifier	enc		10798210	0					
ANR	10798392	ExpressionStatement	* nextTokPtr = ptr	834:4:22002:22019	10798210	8	True				
ANR	10798393	AssignmentExpression	* nextTokPtr = ptr		10798210	0		=			
ANR	10798394	UnaryOperationExpression	* nextTokPtr		10798210	0					
ANR	10798395	UnaryOperator	*		10798210	0					
ANR	10798396	Identifier	nextTokPtr		10798210	1					
ANR	10798397	Identifier	ptr		10798210	1					
ANR	10798398	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	835:4:22025:22052	10798210	9	True				
ANR	10798399	Identifier	XML_TOK_DATA_NEWLINE		10798210	0					
ANR	10798400	Label	case BT_LF :	836:2:22056:22066	10798210	10	True				
ANR	10798401	Identifier	BT_LF		10798210	0					
ANR	10798402	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	837:4:22072:22103	10798210	11	True				
ANR	10798403	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10798210	0		=			
ANR	10798404	UnaryOperationExpression	* nextTokPtr		10798210	0					
ANR	10798405	UnaryOperator	*		10798210	0					
ANR	10798406	Identifier	nextTokPtr		10798210	1					
ANR	10798407	AdditiveExpression	ptr + MINBPC ( enc )		10798210	1		+			
ANR	10798408	Identifier	ptr		10798210	0					
ANR	10798409	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798410	Callee	MINBPC		10798210	0					
ANR	10798411	Identifier	MINBPC		10798210	0					
ANR	10798412	ArgumentList	enc		10798210	1					
ANR	10798413	Argument	enc		10798210	0					
ANR	10798414	Identifier	enc		10798210	0					
ANR	10798415	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	838:4:22109:22136	10798210	12	True				
ANR	10798416	Identifier	XML_TOK_DATA_NEWLINE		10798210	0					
ANR	10798417	Label	case BT_RSQB :	839:2:22140:22152	10798210	13	True				
ANR	10798418	Identifier	BT_RSQB		10798210	0					
ANR	10798419	ExpressionStatement	ptr += MINBPC ( enc )	840:4:22158:22176	10798210	14	True				
ANR	10798420	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798421	Identifier	ptr		10798210	0					
ANR	10798422	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798423	Callee	MINBPC		10798210	0					
ANR	10798424	Identifier	MINBPC		10798210	0					
ANR	10798425	ArgumentList	enc		10798210	1					
ANR	10798426	Argument	enc		10798210	0					
ANR	10798427	Identifier	enc		10798210	0					
ANR	10798428	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10798210	15					
ANR	10798429	Condition	"! HAS_CHAR ( enc , ptr , end )"	841:8:22186:22210	10798210	0	True				
ANR	10798430	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10798210	0					
ANR	10798431	UnaryOperator	!		10798210	0					
ANR	10798432	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10798210	1					
ANR	10798433	Callee	HAS_CHAR		10798210	0					
ANR	10798434	Identifier	HAS_CHAR		10798210	0					
ANR	10798435	ArgumentList	enc		10798210	1					
ANR	10798436	Argument	enc		10798210	0					
ANR	10798437	Identifier	enc		10798210	0					
ANR	10798438	Argument	ptr		10798210	1					
ANR	10798439	Identifier	ptr		10798210	0					
ANR	10798440	Argument	end		10798210	2					
ANR	10798441	Identifier	end		10798210	0					
ANR	10798442	ReturnStatement	return XML_TOK_TRAILING_RSQB ;	842:6:22219:22247	10798210	1	True				
ANR	10798443	Identifier	XML_TOK_TRAILING_RSQB		10798210	0					
ANR	10798444	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		10798210	16					
ANR	10798445	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	843:8:22257:22291	10798210	0	True				
ANR	10798446	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		10798210	0					
ANR	10798447	UnaryOperator	!		10798210	0					
ANR	10798448	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		10798210	1					
ANR	10798449	Callee	CHAR_MATCHES		10798210	0					
ANR	10798450	Identifier	CHAR_MATCHES		10798210	0					
ANR	10798451	ArgumentList	enc		10798210	1					
ANR	10798452	Argument	enc		10798210	0					
ANR	10798453	Identifier	enc		10798210	0					
ANR	10798454	Argument	ptr		10798210	1					
ANR	10798455	Identifier	ptr		10798210	0					
ANR	10798456	Argument	ASCII_RSQB		10798210	2					
ANR	10798457	Identifier	ASCII_RSQB		10798210	0					
ANR	10798458	BreakStatement	break ;	844:6:22300:22305	10798210	1	True				
ANR	10798459	ExpressionStatement	ptr += MINBPC ( enc )	845:4:22311:22329	10798210	17	True				
ANR	10798460	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798461	Identifier	ptr		10798210	0					
ANR	10798462	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798463	Callee	MINBPC		10798210	0					
ANR	10798464	Identifier	MINBPC		10798210	0					
ANR	10798465	ArgumentList	enc		10798210	1					
ANR	10798466	Argument	enc		10798210	0					
ANR	10798467	Identifier	enc		10798210	0					
ANR	10798468	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10798210	18					
ANR	10798469	Condition	"! HAS_CHAR ( enc , ptr , end )"	846:8:22339:22363	10798210	0	True				
ANR	10798470	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10798210	0					
ANR	10798471	UnaryOperator	!		10798210	0					
ANR	10798472	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10798210	1					
ANR	10798473	Callee	HAS_CHAR		10798210	0					
ANR	10798474	Identifier	HAS_CHAR		10798210	0					
ANR	10798475	ArgumentList	enc		10798210	1					
ANR	10798476	Argument	enc		10798210	0					
ANR	10798477	Identifier	enc		10798210	0					
ANR	10798478	Argument	ptr		10798210	1					
ANR	10798479	Identifier	ptr		10798210	0					
ANR	10798480	Argument	end		10798210	2					
ANR	10798481	Identifier	end		10798210	0					
ANR	10798482	ReturnStatement	return XML_TOK_TRAILING_RSQB ;	847:6:22372:22400	10798210	1	True				
ANR	10798483	Identifier	XML_TOK_TRAILING_RSQB		10798210	0					
ANR	10798484	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10798210	19					
ANR	10798485	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	848:8:22410:22442	10798210	0	True				
ANR	10798486	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10798210	0					
ANR	10798487	UnaryOperator	!		10798210	0					
ANR	10798488	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10798210	1					
ANR	10798489	Callee	CHAR_MATCHES		10798210	0					
ANR	10798490	Identifier	CHAR_MATCHES		10798210	0					
ANR	10798491	ArgumentList	enc		10798210	1					
ANR	10798492	Argument	enc		10798210	0					
ANR	10798493	Identifier	enc		10798210	0					
ANR	10798494	Argument	ptr		10798210	1					
ANR	10798495	Identifier	ptr		10798210	0					
ANR	10798496	Argument	ASCII_GT		10798210	2					
ANR	10798497	Identifier	ASCII_GT		10798210	0					
ANR	10798498	CompoundStatement		38:43:1057:1057	10798210	1					
ANR	10798499	ExpressionStatement	ptr -= MINBPC ( enc )	849:6:22453:22471	10798210	0	True				
ANR	10798500	AssignmentExpression	ptr -= MINBPC ( enc )		10798210	0		-=			
ANR	10798501	Identifier	ptr		10798210	0					
ANR	10798502	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798503	Callee	MINBPC		10798210	0					
ANR	10798504	Identifier	MINBPC		10798210	0					
ANR	10798505	ArgumentList	enc		10798210	1					
ANR	10798506	Argument	enc		10798210	0					
ANR	10798507	Identifier	enc		10798210	0					
ANR	10798508	BreakStatement	break ;	850:6:22479:22484	10798210	1	True				
ANR	10798509	ExpressionStatement	* nextTokPtr = ptr	852:4:22496:22513	10798210	20	True				
ANR	10798510	AssignmentExpression	* nextTokPtr = ptr		10798210	0		=			
ANR	10798511	UnaryOperationExpression	* nextTokPtr		10798210	0					
ANR	10798512	UnaryOperator	*		10798210	0					
ANR	10798513	Identifier	nextTokPtr		10798210	1					
ANR	10798514	Identifier	ptr		10798210	1					
ANR	10798515	ReturnStatement	return XML_TOK_INVALID ;	853:4:22519:22541	10798210	21	True				
ANR	10798516	Identifier	XML_TOK_INVALID		10798210	0					
ANR	10798517	Statement	INVALID_CASES	854:2:22545:22557	10798210	22	True				
ANR	10798518	Statement	(	854:15:22558:22558	10798210	23	True				
ANR	10798519	Statement	ptr	854:16:22559:22561	10798210	24	True				
ANR	10798520	Statement	","	854:19:22562:22562	10798210	25	True				
ANR	10798521	Statement	nextTokPtr	854:21:22564:22573	10798210	26	True				
ANR	10798522	Statement	)	854:31:22574:22574	10798210	27	True				
ANR	10798523	Label	default :	855:2:22578:22585	10798210	28	True				
ANR	10798524	Identifier	default		10798210	0					
ANR	10798525	ExpressionStatement	ptr += MINBPC ( enc )	856:4:22591:22609	10798210	29	True				
ANR	10798526	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798527	Identifier	ptr		10798210	0					
ANR	10798528	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798529	Callee	MINBPC		10798210	0					
ANR	10798530	Identifier	MINBPC		10798210	0					
ANR	10798531	ArgumentList	enc		10798210	1					
ANR	10798532	Argument	enc		10798210	0					
ANR	10798533	Identifier	enc		10798210	0					
ANR	10798534	BreakStatement	break ;	857:4:22615:22620	10798210	30	True				
ANR	10798535	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10798210	3					
ANR	10798536	Condition	"HAS_CHAR ( enc , ptr , end )"	859:9:22635:22657	10798210	0	True				
ANR	10798537	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10798210	0					
ANR	10798538	Callee	HAS_CHAR		10798210	0					
ANR	10798539	Identifier	HAS_CHAR		10798210	0					
ANR	10798540	ArgumentList	enc		10798210	1					
ANR	10798541	Argument	enc		10798210	0					
ANR	10798542	Identifier	enc		10798210	0					
ANR	10798543	Argument	ptr		10798210	1					
ANR	10798544	Identifier	ptr		10798210	0					
ANR	10798545	Argument	end		10798210	2					
ANR	10798546	Identifier	end		10798210	0					
ANR	10798547	CompoundStatement		49:34:1272:1272	10798210	1					
ANR	10798548	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10798210	0					
ANR	10798549	Condition	"BYTE_TYPE ( enc , ptr )"	860:12:22674:22692	10798210	0	True				
ANR	10798550	CallExpression	"BYTE_TYPE ( enc , ptr )"		10798210	0					
ANR	10798551	Callee	BYTE_TYPE		10798210	0					
ANR	10798552	Identifier	BYTE_TYPE		10798210	0					
ANR	10798553	ArgumentList	enc		10798210	1					
ANR	10798554	Argument	enc		10798210	0					
ANR	10798555	Identifier	enc		10798210	0					
ANR	10798556	Argument	ptr		10798210	1					
ANR	10798557	Identifier	ptr		10798210	0					
ANR	10798558	CompoundStatement		50:33:1307:1307	10798210	1					
ANR	10798559	Statement	define	861:1:22698:22703	10798210	0	True				
ANR	10798560	Statement	LEAD_CASE	861:8:22705:22713	10798210	1	True				
ANR	10798561	Statement	(	861:17:22714:22714	10798210	2	True				
ANR	10798562	Statement	n	861:18:22715:22715	10798210	3	True				
ANR	10798563	Statement	)	861:19:22716:22716	10798210	4	True				
ANR	10798564	Statement	case	862:4:22724:22727	10798210	5	True				
ANR	10798565	Statement	BT_LEAD	862:9:22729:22735	10798210	6	True				
ANR	10798566	Label	n :	862:20:22740:22741	10798210	7	True				
ANR	10798567	Identifier	n		10798210	0					
ANR	10798568	IfStatement	"if ( end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n ) )"		10798210	8					
ANR	10798569	Condition	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"	863:10:22755:22799	10798210	0	True				
ANR	10798570	OrExpression	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"		10798210	0		||			
ANR	10798571	RelationalExpression	end - ptr < n		10798210	0		<			
ANR	10798572	AdditiveExpression	end - ptr		10798210	0		-			
ANR	10798573	Identifier	end		10798210	0					
ANR	10798574	Identifier	ptr		10798210	1					
ANR	10798575	Identifier	n		10798210	1					
ANR	10798576	CallExpression	"IS_INVALID_CHAR ( enc , ptr , n )"		10798210	1					
ANR	10798577	Callee	IS_INVALID_CHAR		10798210	0					
ANR	10798578	Identifier	IS_INVALID_CHAR		10798210	0					
ANR	10798579	ArgumentList	enc		10798210	1					
ANR	10798580	Argument	enc		10798210	0					
ANR	10798581	Identifier	enc		10798210	0					
ANR	10798582	Argument	ptr		10798210	1					
ANR	10798583	Identifier	ptr		10798210	0					
ANR	10798584	Argument	n		10798210	2					
ANR	10798585	Identifier	n		10798210	0					
ANR	10798586	CompoundStatement		53:57:1414:1414	10798210	1					
ANR	10798587	ExpressionStatement	* nextTokPtr = ptr	864:8:22814:22831	10798210	0	True				
ANR	10798588	AssignmentExpression	* nextTokPtr = ptr		10798210	0		=			
ANR	10798589	UnaryOperationExpression	* nextTokPtr		10798210	0					
ANR	10798590	UnaryOperator	*		10798210	0					
ANR	10798591	Identifier	nextTokPtr		10798210	1					
ANR	10798592	Identifier	ptr		10798210	1					
ANR	10798593	ReturnStatement	return XML_TOK_DATA_CHARS ;	865:8:22843:22868	10798210	1	True				
ANR	10798594	Identifier	XML_TOK_DATA_CHARS		10798210	0					
ANR	10798595	ExpressionStatement	ptr += n	867:6:22888:22896	10798210	9	True				
ANR	10798596	AssignmentExpression	ptr += n		10798210	0		+=			
ANR	10798597	Identifier	ptr		10798210	0					
ANR	10798598	Identifier	n		10798210	1					
ANR	10798599	BreakStatement	break ;	868:6:22906:22911	10798210	10	True				
ANR	10798600	Statement	LEAD_CASE	869:4:22917:22925	10798210	11	True				
ANR	10798601	Statement	(	869:13:22926:22926	10798210	12	True				
ANR	10798602	Statement	2	869:14:22927:22927	10798210	13	True				
ANR	10798603	Statement	)	869:15:22928:22928	10798210	14	True				
ANR	10798604	Statement	LEAD_CASE	869:17:22930:22938	10798210	15	True				
ANR	10798605	Statement	(	869:26:22939:22939	10798210	16	True				
ANR	10798606	Statement	3	869:27:22940:22940	10798210	17	True				
ANR	10798607	Statement	)	869:28:22941:22941	10798210	18	True				
ANR	10798608	Statement	LEAD_CASE	869:30:22943:22951	10798210	19	True				
ANR	10798609	Statement	(	869:39:22952:22952	10798210	20	True				
ANR	10798610	Statement	4	869:40:22953:22953	10798210	21	True				
ANR	10798611	Statement	)	869:41:22954:22954	10798210	22	True				
ANR	10798612	Statement	undef	870:1:22957:22961	10798210	23	True				
ANR	10798613	Statement	LEAD_CASE	870:7:22963:22971	10798210	24	True				
ANR	10798614	Label	case BT_RSQB :	871:4:22977:22989	10798210	25	True				
ANR	10798615	Identifier	BT_RSQB		10798210	0					
ANR	10798616	IfStatement	"if ( HAS_CHARS ( enc , ptr , end , 2 ) )"		10798210	26					
ANR	10798617	Condition	"HAS_CHARS ( enc , ptr , end , 2 )"	872:10:23001:23027	10798210	0	True				
ANR	10798618	CallExpression	"HAS_CHARS ( enc , ptr , end , 2 )"		10798210	0					
ANR	10798619	Callee	HAS_CHARS		10798210	0					
ANR	10798620	Identifier	HAS_CHARS		10798210	0					
ANR	10798621	ArgumentList	enc		10798210	1					
ANR	10798622	Argument	enc		10798210	0					
ANR	10798623	Identifier	enc		10798210	0					
ANR	10798624	Argument	ptr		10798210	1					
ANR	10798625	Identifier	ptr		10798210	0					
ANR	10798626	Argument	end		10798210	2					
ANR	10798627	Identifier	end		10798210	0					
ANR	10798628	Argument	2		10798210	3					
ANR	10798629	PrimaryExpression	2		10798210	0					
ANR	10798630	CompoundStatement		62:39:1642:1642	10798210	1					
ANR	10798631	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB ) )"		10798210	0					
ANR	10798632	Condition	"! CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB )"	873:13:23045:23093	10798210	0	True				
ANR	10798633	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB )"		10798210	0					
ANR	10798634	UnaryOperator	!		10798210	0					
ANR	10798635	CallExpression	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB )"		10798210	1					
ANR	10798636	Callee	CHAR_MATCHES		10798210	0					
ANR	10798637	Identifier	CHAR_MATCHES		10798210	0					
ANR	10798638	ArgumentList	enc		10798210	1					
ANR	10798639	Argument	enc		10798210	0					
ANR	10798640	Identifier	enc		10798210	0					
ANR	10798641	Argument	ptr + MINBPC ( enc )		10798210	1					
ANR	10798642	AdditiveExpression	ptr + MINBPC ( enc )		10798210	0		+			
ANR	10798643	Identifier	ptr		10798210	0					
ANR	10798644	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798645	Callee	MINBPC		10798210	0					
ANR	10798646	Identifier	MINBPC		10798210	0					
ANR	10798647	ArgumentList	enc		10798210	1					
ANR	10798648	Argument	enc		10798210	0					
ANR	10798649	Identifier	enc		10798210	0					
ANR	10798650	Argument	ASCII_RSQB		10798210	2					
ANR	10798651	Identifier	ASCII_RSQB		10798210	0					
ANR	10798652	CompoundStatement		63:64:1708:1708	10798210	1					
ANR	10798653	ExpressionStatement	ptr += MINBPC ( enc )	874:11:23109:23127	10798210	0	True				
ANR	10798654	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798655	Identifier	ptr		10798210	0					
ANR	10798656	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798657	Callee	MINBPC		10798210	0					
ANR	10798658	Identifier	MINBPC		10798210	0					
ANR	10798659	ArgumentList	enc		10798210	1					
ANR	10798660	Argument	enc		10798210	0					
ANR	10798661	Identifier	enc		10798210	0					
ANR	10798662	BreakStatement	break ;	875:11:23140:23145	10798210	1	True				
ANR	10798663	IfStatement	"if ( HAS_CHARS ( enc , ptr , end , 3 ) )"		10798210	1					
ANR	10798664	Condition	"HAS_CHARS ( enc , ptr , end , 3 )"	877:13:23171:23197	10798210	0	True				
ANR	10798665	CallExpression	"HAS_CHARS ( enc , ptr , end , 3 )"		10798210	0					
ANR	10798666	Callee	HAS_CHARS		10798210	0					
ANR	10798667	Identifier	HAS_CHARS		10798210	0					
ANR	10798668	ArgumentList	enc		10798210	1					
ANR	10798669	Argument	enc		10798210	0					
ANR	10798670	Identifier	enc		10798210	0					
ANR	10798671	Argument	ptr		10798210	1					
ANR	10798672	Identifier	ptr		10798210	0					
ANR	10798673	Argument	end		10798210	2					
ANR	10798674	Identifier	end		10798210	0					
ANR	10798675	Argument	3		10798210	3					
ANR	10798676	PrimaryExpression	3		10798210	0					
ANR	10798677	CompoundStatement		67:42:1812:1812	10798210	1					
ANR	10798678	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT ) )"		10798210	0					
ANR	10798679	Condition	"! CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT )"	878:15:23217:23265	10798210	0	True				
ANR	10798680	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT )"		10798210	0					
ANR	10798681	UnaryOperator	!		10798210	0					
ANR	10798682	CallExpression	"CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT )"		10798210	1					
ANR	10798683	Callee	CHAR_MATCHES		10798210	0					
ANR	10798684	Identifier	CHAR_MATCHES		10798210	0					
ANR	10798685	ArgumentList	enc		10798210	1					
ANR	10798686	Argument	enc		10798210	0					
ANR	10798687	Identifier	enc		10798210	0					
ANR	10798688	Argument	ptr + 2 * MINBPC ( enc )		10798210	1					
ANR	10798689	AdditiveExpression	ptr + 2 * MINBPC ( enc )		10798210	0		+			
ANR	10798690	Identifier	ptr		10798210	0					
ANR	10798691	MultiplicativeExpression	2 * MINBPC ( enc )		10798210	1		*			
ANR	10798692	PrimaryExpression	2		10798210	0					
ANR	10798693	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798694	Callee	MINBPC		10798210	0					
ANR	10798695	Identifier	MINBPC		10798210	0					
ANR	10798696	ArgumentList	enc		10798210	1					
ANR	10798697	Argument	enc		10798210	0					
ANR	10798698	Identifier	enc		10798210	0					
ANR	10798699	Argument	ASCII_GT		10798210	2					
ANR	10798700	Identifier	ASCII_GT		10798210	0					
ANR	10798701	CompoundStatement		68:66:1880:1880	10798210	1					
ANR	10798702	ExpressionStatement	ptr += MINBPC ( enc )	879:13:23283:23301	10798210	0	True				
ANR	10798703	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798704	Identifier	ptr		10798210	0					
ANR	10798705	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798706	Callee	MINBPC		10798210	0					
ANR	10798707	Identifier	MINBPC		10798210	0					
ANR	10798708	ArgumentList	enc		10798210	1					
ANR	10798709	Argument	enc		10798210	0					
ANR	10798710	Identifier	enc		10798210	0					
ANR	10798711	BreakStatement	break ;	880:13:23316:23321	10798210	1	True				
ANR	10798712	ExpressionStatement	* nextTokPtr = ptr + 2 * MINBPC ( enc )	882:11:23347:23380	10798210	1	True				
ANR	10798713	AssignmentExpression	* nextTokPtr = ptr + 2 * MINBPC ( enc )		10798210	0		=			
ANR	10798714	UnaryOperationExpression	* nextTokPtr		10798210	0					
ANR	10798715	UnaryOperator	*		10798210	0					
ANR	10798716	Identifier	nextTokPtr		10798210	1					
ANR	10798717	AdditiveExpression	ptr + 2 * MINBPC ( enc )		10798210	1		+			
ANR	10798718	Identifier	ptr		10798210	0					
ANR	10798719	MultiplicativeExpression	2 * MINBPC ( enc )		10798210	1		*			
ANR	10798720	PrimaryExpression	2		10798210	0					
ANR	10798721	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798722	Callee	MINBPC		10798210	0					
ANR	10798723	Identifier	MINBPC		10798210	0					
ANR	10798724	ArgumentList	enc		10798210	1					
ANR	10798725	Argument	enc		10798210	0					
ANR	10798726	Identifier	enc		10798210	0					
ANR	10798727	ReturnStatement	return XML_TOK_INVALID ;	883:11:23393:23415	10798210	2	True				
ANR	10798728	Identifier	XML_TOK_INVALID		10798210	0					
ANR	10798729	Label	case BT_AMP :	887:4:23465:23476	10798210	27	True				
ANR	10798730	Identifier	BT_AMP		10798210	0					
ANR	10798731	Label	case BT_LT :	888:4:23482:23492	10798210	28	True				
ANR	10798732	Identifier	BT_LT		10798210	0					
ANR	10798733	Label	case BT_NONXML :	889:4:23498:23512	10798210	29	True				
ANR	10798734	Identifier	BT_NONXML		10798210	0					
ANR	10798735	Label	case BT_MALFORM :	890:4:23518:23533	10798210	30	True				
ANR	10798736	Identifier	BT_MALFORM		10798210	0					
ANR	10798737	Label	case BT_TRAIL :	891:4:23539:23552	10798210	31	True				
ANR	10798738	Identifier	BT_TRAIL		10798210	0					
ANR	10798739	Label	case BT_CR :	892:4:23558:23568	10798210	32	True				
ANR	10798740	Identifier	BT_CR		10798210	0					
ANR	10798741	Label	case BT_LF :	893:4:23574:23584	10798210	33	True				
ANR	10798742	Identifier	BT_LF		10798210	0					
ANR	10798743	ExpressionStatement	* nextTokPtr = ptr	894:6:23592:23609	10798210	34	True				
ANR	10798744	AssignmentExpression	* nextTokPtr = ptr		10798210	0		=			
ANR	10798745	UnaryOperationExpression	* nextTokPtr		10798210	0					
ANR	10798746	UnaryOperator	*		10798210	0					
ANR	10798747	Identifier	nextTokPtr		10798210	1					
ANR	10798748	Identifier	ptr		10798210	1					
ANR	10798749	ReturnStatement	return XML_TOK_DATA_CHARS ;	895:6:23617:23642	10798210	35	True				
ANR	10798750	Identifier	XML_TOK_DATA_CHARS		10798210	0					
ANR	10798751	Label	default :	896:4:23648:23655	10798210	36	True				
ANR	10798752	Identifier	default		10798210	0					
ANR	10798753	ExpressionStatement	ptr += MINBPC ( enc )	897:6:23663:23681	10798210	37	True				
ANR	10798754	AssignmentExpression	ptr += MINBPC ( enc )		10798210	0		+=			
ANR	10798755	Identifier	ptr		10798210	0					
ANR	10798756	CallExpression	MINBPC ( enc )		10798210	1					
ANR	10798757	Callee	MINBPC		10798210	0					
ANR	10798758	Identifier	MINBPC		10798210	0					
ANR	10798759	ArgumentList	enc		10798210	1					
ANR	10798760	Argument	enc		10798210	0					
ANR	10798761	Identifier	enc		10798210	0					
ANR	10798762	BreakStatement	break ;	898:6:23689:23694	10798210	38	True				
ANR	10798763	ExpressionStatement	* nextTokPtr = ptr	901:2:23708:23725	10798210	4	True				
ANR	10798764	AssignmentExpression	* nextTokPtr = ptr		10798210	0		=			
ANR	10798765	UnaryOperationExpression	* nextTokPtr		10798210	0					
ANR	10798766	UnaryOperator	*		10798210	0					
ANR	10798767	Identifier	nextTokPtr		10798210	1					
ANR	10798768	Identifier	ptr		10798210	1					
ANR	10798769	ReturnStatement	return XML_TOK_DATA_CHARS ;	902:2:23729:23754	10798210	5	True				
ANR	10798770	Identifier	XML_TOK_DATA_CHARS		10798210	0					
ANR	10798771	ReturnType	static int PTRCALL PREFIX		10798210	1					
ANR	10798772	Identifier	( contentTok )		10798210	2					
ANR	10798773	Identifier	contentTok		10798210	3					
ANR	10798774	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10798210	4					
ANR	10798775	Parameter	const ENCODING * enc	809:19:21288:21306	10798210	0	True				
ANR	10798776	ParameterType	const ENCODING *		10798210	0					
ANR	10798777	Identifier	enc		10798210	1					
ANR	10798778	Parameter	const char * ptr	809:40:21309:21323	10798210	1	True				
ANR	10798779	ParameterType	const char *		10798210	0					
ANR	10798780	Identifier	ptr		10798210	1					
ANR	10798781	Parameter	const char * end	809:57:21326:21340	10798210	2	True				
ANR	10798782	ParameterType	const char *		10798210	0					
ANR	10798783	Identifier	end		10798210	1					
ANR	10798784	Parameter	const char * * nextTokPtr	810:19:21362:21384	10798210	3	True				
ANR	10798785	ParameterType	const char * *		10798210	0					
ANR	10798786	Identifier	nextTokPtr		10798210	1					
ANR	10798787	CFGEntryNode	ENTRY		10798210		True				
ANR	10798788	CFGExitNode	EXIT		10798210		True				
ANR	10798789	Symbol	nextTokPtr		10798210						
ANR	10798790	Symbol	XML_TOK_PARTIAL		10798210						
ANR	10798791	Symbol	HAS_CHARS		10798210						
ANR	10798792	Symbol	BYTE_TYPE		10798210						
ANR	10798793	Symbol	* nextTokPtr		10798210						
ANR	10798794	Symbol	MINBPC		10798210						
ANR	10798795	Symbol	BT_LF		10798210						
ANR	10798796	Symbol	XML_TOK_TRAILING_RSQB		10798210						
ANR	10798797	Symbol	XML_TOK_DATA_NEWLINE		10798210						
ANR	10798798	Symbol	end		10798210						
ANR	10798799	Symbol	enc		10798210						
ANR	10798800	Symbol	XML_TOK_TRAILING_CR		10798210						
ANR	10798801	Symbol	XML_TOK_INVALID		10798210						
ANR	10798802	Symbol	XML_TOK_DATA_CHARS		10798210						
ANR	10798803	Symbol	IS_INVALID_CHAR		10798210						
ANR	10798804	Symbol	n		10798210						
ANR	10798805	Symbol	ptr		10798210						
ANR	10798806	Symbol	scanRef		10798210						
ANR	10798807	Symbol	CHAR_MATCHES		10798210						
ANR	10798808	Symbol	PREFIX		10798210						
ANR	10798809	Symbol	ASCII_GT		10798210						
ANR	10798810	Symbol	XML_TOK_NONE		10798210						
ANR	10798811	Symbol	scanLt		10798210						
ANR	10798812	Symbol	HAS_CHAR		10798210						
ANR	10798813	Symbol	ASCII_RSQB		10798210						
ANR	10798814	Function	scanPercent	907:0:23804:24546							
ANR	10798815	FunctionDef	"scanPercent (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10798814	0					
ANR	10798816	CompoundStatement		910:0:23943:24546	10798814	0					
ANR	10798817	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	911:2:23947:23974	10798814	0	True				
ANR	10798818	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10798814	0					
ANR	10798819	Callee	REQUIRE_CHAR		10798814	0					
ANR	10798820	Identifier	REQUIRE_CHAR		10798814	0					
ANR	10798821	ArgumentList	enc		10798814	1					
ANR	10798822	Argument	enc		10798814	0					
ANR	10798823	Identifier	enc		10798814	0					
ANR	10798824	Argument	ptr		10798814	1					
ANR	10798825	Identifier	ptr		10798814	0					
ANR	10798826	Argument	end		10798814	2					
ANR	10798827	Identifier	end		10798814	0					
ANR	10798828	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10798814	1					
ANR	10798829	Condition	"BYTE_TYPE ( enc , ptr )"	912:10:23986:24004	10798814	0	True				
ANR	10798830	CallExpression	"BYTE_TYPE ( enc , ptr )"		10798814	0					
ANR	10798831	Callee	BYTE_TYPE		10798814	0					
ANR	10798832	Identifier	BYTE_TYPE		10798814	0					
ANR	10798833	ArgumentList	enc		10798814	1					
ANR	10798834	Argument	enc		10798814	0					
ANR	10798835	Identifier	enc		10798814	0					
ANR	10798836	Argument	ptr		10798814	1					
ANR	10798837	Identifier	ptr		10798814	0					
ANR	10798838	CompoundStatement		3:31:63:63	10798814	1					
ANR	10798839	Statement	CHECK_NMSTRT_CASES	913:2:24011:24028	10798814	0	True				
ANR	10798840	Statement	(	913:20:24029:24029	10798814	1	True				
ANR	10798841	Statement	enc	913:21:24030:24032	10798814	2	True				
ANR	10798842	Statement	","	913:24:24033:24033	10798814	3	True				
ANR	10798843	Statement	ptr	913:26:24035:24037	10798814	4	True				
ANR	10798844	Statement	","	913:29:24038:24038	10798814	5	True				
ANR	10798845	Statement	end	913:31:24040:24042	10798814	6	True				
ANR	10798846	Statement	","	913:34:24043:24043	10798814	7	True				
ANR	10798847	Statement	nextTokPtr	913:36:24045:24054	10798814	8	True				
ANR	10798848	Statement	)	913:46:24055:24055	10798814	9	True				
ANR	10798849	Label	case BT_S :	914:2:24059:24068	10798814	10	True				
ANR	10798850	Identifier	BT_S		10798814	0					
ANR	10798851	Label	case BT_LF :	914:13:24070:24080	10798814	11	True				
ANR	10798852	Identifier	BT_LF		10798814	0					
ANR	10798853	Label	case BT_CR :	914:25:24082:24092	10798814	12	True				
ANR	10798854	Identifier	BT_CR		10798814	0					
ANR	10798855	Label	case BT_PERCNT :	914:37:24094:24108	10798814	13	True				
ANR	10798856	Identifier	BT_PERCNT		10798814	0					
ANR	10798857	ExpressionStatement	* nextTokPtr = ptr	915:4:24114:24131	10798814	14	True				
ANR	10798858	AssignmentExpression	* nextTokPtr = ptr		10798814	0		=			
ANR	10798859	UnaryOperationExpression	* nextTokPtr		10798814	0					
ANR	10798860	UnaryOperator	*		10798814	0					
ANR	10798861	Identifier	nextTokPtr		10798814	1					
ANR	10798862	Identifier	ptr		10798814	1					
ANR	10798863	ReturnStatement	return XML_TOK_PERCENT ;	916:4:24137:24159	10798814	15	True				
ANR	10798864	Identifier	XML_TOK_PERCENT		10798814	0					
ANR	10798865	Label	default :	917:2:24163:24170	10798814	16	True				
ANR	10798866	Identifier	default		10798814	0					
ANR	10798867	ExpressionStatement	* nextTokPtr = ptr	918:4:24176:24193	10798814	17	True				
ANR	10798868	AssignmentExpression	* nextTokPtr = ptr		10798814	0		=			
ANR	10798869	UnaryOperationExpression	* nextTokPtr		10798814	0					
ANR	10798870	UnaryOperator	*		10798814	0					
ANR	10798871	Identifier	nextTokPtr		10798814	1					
ANR	10798872	Identifier	ptr		10798814	1					
ANR	10798873	ReturnStatement	return XML_TOK_INVALID ;	919:4:24199:24221	10798814	18	True				
ANR	10798874	Identifier	XML_TOK_INVALID		10798814	0					
ANR	10798875	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10798814	2					
ANR	10798876	Condition	"HAS_CHAR ( enc , ptr , end )"	921:9:24236:24258	10798814	0	True				
ANR	10798877	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10798814	0					
ANR	10798878	Callee	HAS_CHAR		10798814	0					
ANR	10798879	Identifier	HAS_CHAR		10798814	0					
ANR	10798880	ArgumentList	enc		10798814	1					
ANR	10798881	Argument	enc		10798814	0					
ANR	10798882	Identifier	enc		10798814	0					
ANR	10798883	Argument	ptr		10798814	1					
ANR	10798884	Identifier	ptr		10798814	0					
ANR	10798885	Argument	end		10798814	2					
ANR	10798886	Identifier	end		10798814	0					
ANR	10798887	CompoundStatement		12:34:317:317	10798814	1					
ANR	10798888	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10798814	0					
ANR	10798889	Condition	"BYTE_TYPE ( enc , ptr )"	922:12:24275:24293	10798814	0	True				
ANR	10798890	CallExpression	"BYTE_TYPE ( enc , ptr )"		10798814	0					
ANR	10798891	Callee	BYTE_TYPE		10798814	0					
ANR	10798892	Identifier	BYTE_TYPE		10798814	0					
ANR	10798893	ArgumentList	enc		10798814	1					
ANR	10798894	Argument	enc		10798814	0					
ANR	10798895	Identifier	enc		10798814	0					
ANR	10798896	Argument	ptr		10798814	1					
ANR	10798897	Identifier	ptr		10798814	0					
ANR	10798898	CompoundStatement		13:33:352:352	10798814	1					
ANR	10798899	Statement	CHECK_NAME_CASES	923:4:24302:24317	10798814	0	True				
ANR	10798900	Statement	(	923:20:24318:24318	10798814	1	True				
ANR	10798901	Statement	enc	923:21:24319:24321	10798814	2	True				
ANR	10798902	Statement	","	923:24:24322:24322	10798814	3	True				
ANR	10798903	Statement	ptr	923:26:24324:24326	10798814	4	True				
ANR	10798904	Statement	","	923:29:24327:24327	10798814	5	True				
ANR	10798905	Statement	end	923:31:24329:24331	10798814	6	True				
ANR	10798906	Statement	","	923:34:24332:24332	10798814	7	True				
ANR	10798907	Statement	nextTokPtr	923:36:24334:24343	10798814	8	True				
ANR	10798908	Statement	)	923:46:24344:24344	10798814	9	True				
ANR	10798909	Label	case BT_SEMI :	924:4:24350:24362	10798814	10	True				
ANR	10798910	Identifier	BT_SEMI		10798814	0					
ANR	10798911	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	925:6:24370:24401	10798814	11	True				
ANR	10798912	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10798814	0		=			
ANR	10798913	UnaryOperationExpression	* nextTokPtr		10798814	0					
ANR	10798914	UnaryOperator	*		10798814	0					
ANR	10798915	Identifier	nextTokPtr		10798814	1					
ANR	10798916	AdditiveExpression	ptr + MINBPC ( enc )		10798814	1		+			
ANR	10798917	Identifier	ptr		10798814	0					
ANR	10798918	CallExpression	MINBPC ( enc )		10798814	1					
ANR	10798919	Callee	MINBPC		10798814	0					
ANR	10798920	Identifier	MINBPC		10798814	0					
ANR	10798921	ArgumentList	enc		10798814	1					
ANR	10798922	Argument	enc		10798814	0					
ANR	10798923	Identifier	enc		10798814	0					
ANR	10798924	ReturnStatement	return XML_TOK_PARAM_ENTITY_REF ;	926:6:24409:24440	10798814	12	True				
ANR	10798925	Identifier	XML_TOK_PARAM_ENTITY_REF		10798814	0					
ANR	10798926	Label	default :	927:4:24446:24453	10798814	13	True				
ANR	10798927	Identifier	default		10798814	0					
ANR	10798928	ExpressionStatement	* nextTokPtr = ptr	928:6:24461:24478	10798814	14	True				
ANR	10798929	AssignmentExpression	* nextTokPtr = ptr		10798814	0		=			
ANR	10798930	UnaryOperationExpression	* nextTokPtr		10798814	0					
ANR	10798931	UnaryOperator	*		10798814	0					
ANR	10798932	Identifier	nextTokPtr		10798814	1					
ANR	10798933	Identifier	ptr		10798814	1					
ANR	10798934	ReturnStatement	return XML_TOK_INVALID ;	929:6:24486:24508	10798814	15	True				
ANR	10798935	Identifier	XML_TOK_INVALID		10798814	0					
ANR	10798936	ReturnStatement	return XML_TOK_PARTIAL ;	932:2:24522:24544	10798814	3	True				
ANR	10798937	Identifier	XML_TOK_PARTIAL		10798814	0					
ANR	10798938	ReturnType	static int PTRCALL PREFIX		10798814	1					
ANR	10798939	Identifier	( scanPercent )		10798814	2					
ANR	10798940	Identifier	scanPercent		10798814	3					
ANR	10798941	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10798814	4					
ANR	10798942	Parameter	const ENCODING * enc	908:20:23843:23861	10798814	0	True				
ANR	10798943	ParameterType	const ENCODING *		10798814	0					
ANR	10798944	Identifier	enc		10798814	1					
ANR	10798945	Parameter	const char * ptr	908:41:23864:23878	10798814	1	True				
ANR	10798946	ParameterType	const char *		10798814	0					
ANR	10798947	Identifier	ptr		10798814	1					
ANR	10798948	Parameter	const char * end	908:58:23881:23895	10798814	2	True				
ANR	10798949	ParameterType	const char *		10798814	0					
ANR	10798950	Identifier	end		10798814	1					
ANR	10798951	Parameter	const char * * nextTokPtr	909:20:23918:23940	10798814	3	True				
ANR	10798952	ParameterType	const char * *		10798814	0					
ANR	10798953	Identifier	nextTokPtr		10798814	1					
ANR	10798954	CFGEntryNode	ENTRY		10798814		True				
ANR	10798955	CFGExitNode	EXIT		10798814		True				
ANR	10798956	Symbol	XML_TOK_INVALID		10798814						
ANR	10798957	Symbol	XML_TOK_PARAM_ENTITY_REF		10798814						
ANR	10798958	Symbol	nextTokPtr		10798814						
ANR	10798959	Symbol	XML_TOK_PERCENT		10798814						
ANR	10798960	Symbol	XML_TOK_PARTIAL		10798814						
ANR	10798961	Symbol	BYTE_TYPE		10798814						
ANR	10798962	Symbol	* nextTokPtr		10798814						
ANR	10798963	Symbol	end		10798814						
ANR	10798964	Symbol	enc		10798814						
ANR	10798965	Symbol	HAS_CHAR		10798814						
ANR	10798966	Symbol	MINBPC		10798814						
ANR	10798967	Symbol	ptr		10798814						
ANR	10798968	Function	scanPoundName	935:0:24549:25258							
ANR	10798969	FunctionDef	"scanPoundName (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10798968	0					
ANR	10798970	CompoundStatement		938:0:24692:25258	10798968	0					
ANR	10798971	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	939:2:24696:24723	10798968	0	True				
ANR	10798972	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10798968	0					
ANR	10798973	Callee	REQUIRE_CHAR		10798968	0					
ANR	10798974	Identifier	REQUIRE_CHAR		10798968	0					
ANR	10798975	ArgumentList	enc		10798968	1					
ANR	10798976	Argument	enc		10798968	0					
ANR	10798977	Identifier	enc		10798968	0					
ANR	10798978	Argument	ptr		10798968	1					
ANR	10798979	Identifier	ptr		10798968	0					
ANR	10798980	Argument	end		10798968	2					
ANR	10798981	Identifier	end		10798968	0					
ANR	10798982	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10798968	1					
ANR	10798983	Condition	"BYTE_TYPE ( enc , ptr )"	940:10:24735:24753	10798968	0	True				
ANR	10798984	CallExpression	"BYTE_TYPE ( enc , ptr )"		10798968	0					
ANR	10798985	Callee	BYTE_TYPE		10798968	0					
ANR	10798986	Identifier	BYTE_TYPE		10798968	0					
ANR	10798987	ArgumentList	enc		10798968	1					
ANR	10798988	Argument	enc		10798968	0					
ANR	10798989	Identifier	enc		10798968	0					
ANR	10798990	Argument	ptr		10798968	1					
ANR	10798991	Identifier	ptr		10798968	0					
ANR	10798992	CompoundStatement		3:31:63:63	10798968	1					
ANR	10798993	Statement	CHECK_NMSTRT_CASES	941:2:24760:24777	10798968	0	True				
ANR	10798994	Statement	(	941:20:24778:24778	10798968	1	True				
ANR	10798995	Statement	enc	941:21:24779:24781	10798968	2	True				
ANR	10798996	Statement	","	941:24:24782:24782	10798968	3	True				
ANR	10798997	Statement	ptr	941:26:24784:24786	10798968	4	True				
ANR	10798998	Statement	","	941:29:24787:24787	10798968	5	True				
ANR	10798999	Statement	end	941:31:24789:24791	10798968	6	True				
ANR	10799000	Statement	","	941:34:24792:24792	10798968	7	True				
ANR	10799001	Statement	nextTokPtr	941:36:24794:24803	10798968	8	True				
ANR	10799002	Statement	)	941:46:24804:24804	10798968	9	True				
ANR	10799003	Label	default :	942:2:24808:24815	10798968	10	True				
ANR	10799004	Identifier	default		10798968	0					
ANR	10799005	ExpressionStatement	* nextTokPtr = ptr	943:4:24821:24838	10798968	11	True				
ANR	10799006	AssignmentExpression	* nextTokPtr = ptr		10798968	0		=			
ANR	10799007	UnaryOperationExpression	* nextTokPtr		10798968	0					
ANR	10799008	UnaryOperator	*		10798968	0					
ANR	10799009	Identifier	nextTokPtr		10798968	1					
ANR	10799010	Identifier	ptr		10798968	1					
ANR	10799011	ReturnStatement	return XML_TOK_INVALID ;	944:4:24844:24866	10798968	12	True				
ANR	10799012	Identifier	XML_TOK_INVALID		10798968	0					
ANR	10799013	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10798968	2					
ANR	10799014	Condition	"HAS_CHAR ( enc , ptr , end )"	946:9:24881:24903	10798968	0	True				
ANR	10799015	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10798968	0					
ANR	10799016	Callee	HAS_CHAR		10798968	0					
ANR	10799017	Identifier	HAS_CHAR		10798968	0					
ANR	10799018	ArgumentList	enc		10798968	1					
ANR	10799019	Argument	enc		10798968	0					
ANR	10799020	Identifier	enc		10798968	0					
ANR	10799021	Argument	ptr		10798968	1					
ANR	10799022	Identifier	ptr		10798968	0					
ANR	10799023	Argument	end		10798968	2					
ANR	10799024	Identifier	end		10798968	0					
ANR	10799025	CompoundStatement		9:34:213:213	10798968	1					
ANR	10799026	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10798968	0					
ANR	10799027	Condition	"BYTE_TYPE ( enc , ptr )"	947:12:24920:24938	10798968	0	True				
ANR	10799028	CallExpression	"BYTE_TYPE ( enc , ptr )"		10798968	0					
ANR	10799029	Callee	BYTE_TYPE		10798968	0					
ANR	10799030	Identifier	BYTE_TYPE		10798968	0					
ANR	10799031	ArgumentList	enc		10798968	1					
ANR	10799032	Argument	enc		10798968	0					
ANR	10799033	Identifier	enc		10798968	0					
ANR	10799034	Argument	ptr		10798968	1					
ANR	10799035	Identifier	ptr		10798968	0					
ANR	10799036	CompoundStatement		10:33:248:248	10798968	1					
ANR	10799037	Statement	CHECK_NAME_CASES	948:4:24947:24962	10798968	0	True				
ANR	10799038	Statement	(	948:20:24963:24963	10798968	1	True				
ANR	10799039	Statement	enc	948:21:24964:24966	10798968	2	True				
ANR	10799040	Statement	","	948:24:24967:24967	10798968	3	True				
ANR	10799041	Statement	ptr	948:26:24969:24971	10798968	4	True				
ANR	10799042	Statement	","	948:29:24972:24972	10798968	5	True				
ANR	10799043	Statement	end	948:31:24974:24976	10798968	6	True				
ANR	10799044	Statement	","	948:34:24977:24977	10798968	7	True				
ANR	10799045	Statement	nextTokPtr	948:36:24979:24988	10798968	8	True				
ANR	10799046	Statement	)	948:46:24989:24989	10798968	9	True				
ANR	10799047	Label	case BT_CR :	949:4:24995:25005	10798968	10	True				
ANR	10799048	Identifier	BT_CR		10798968	0					
ANR	10799049	Label	case BT_LF :	949:16:25007:25017	10798968	11	True				
ANR	10799050	Identifier	BT_LF		10798968	0					
ANR	10799051	Label	case BT_S :	949:28:25019:25028	10798968	12	True				
ANR	10799052	Identifier	BT_S		10798968	0					
ANR	10799053	Label	case BT_RPAR :	950:4:25034:25046	10798968	13	True				
ANR	10799054	Identifier	BT_RPAR		10798968	0					
ANR	10799055	Label	case BT_GT :	950:18:25048:25058	10798968	14	True				
ANR	10799056	Identifier	BT_GT		10798968	0					
ANR	10799057	Label	case BT_PERCNT :	950:30:25060:25074	10798968	15	True				
ANR	10799058	Identifier	BT_PERCNT		10798968	0					
ANR	10799059	Label	case BT_VERBAR :	950:46:25076:25090	10798968	16	True				
ANR	10799060	Identifier	BT_VERBAR		10798968	0					
ANR	10799061	ExpressionStatement	* nextTokPtr = ptr	951:6:25098:25115	10798968	17	True				
ANR	10799062	AssignmentExpression	* nextTokPtr = ptr		10798968	0		=			
ANR	10799063	UnaryOperationExpression	* nextTokPtr		10798968	0					
ANR	10799064	UnaryOperator	*		10798968	0					
ANR	10799065	Identifier	nextTokPtr		10798968	1					
ANR	10799066	Identifier	ptr		10798968	1					
ANR	10799067	ReturnStatement	return XML_TOK_POUND_NAME ;	952:6:25123:25148	10798968	18	True				
ANR	10799068	Identifier	XML_TOK_POUND_NAME		10798968	0					
ANR	10799069	Label	default :	953:4:25154:25161	10798968	19	True				
ANR	10799070	Identifier	default		10798968	0					
ANR	10799071	ExpressionStatement	* nextTokPtr = ptr	954:6:25169:25186	10798968	20	True				
ANR	10799072	AssignmentExpression	* nextTokPtr = ptr		10798968	0		=			
ANR	10799073	UnaryOperationExpression	* nextTokPtr		10798968	0					
ANR	10799074	UnaryOperator	*		10798968	0					
ANR	10799075	Identifier	nextTokPtr		10798968	1					
ANR	10799076	Identifier	ptr		10798968	1					
ANR	10799077	ReturnStatement	return XML_TOK_INVALID ;	955:6:25194:25216	10798968	21	True				
ANR	10799078	Identifier	XML_TOK_INVALID		10798968	0					
ANR	10799079	ReturnStatement	return - XML_TOK_POUND_NAME ;	958:2:25230:25256	10798968	3	True				
ANR	10799080	UnaryOperationExpression	- XML_TOK_POUND_NAME		10798968	0					
ANR	10799081	UnaryOperator	-		10798968	0					
ANR	10799082	Identifier	XML_TOK_POUND_NAME		10798968	1					
ANR	10799083	ReturnType	static int PTRCALL PREFIX		10798968	1					
ANR	10799084	Identifier	( scanPoundName )		10798968	2					
ANR	10799085	Identifier	scanPoundName		10798968	3					
ANR	10799086	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10798968	4					
ANR	10799087	Parameter	const ENCODING * enc	936:22:24590:24608	10798968	0	True				
ANR	10799088	ParameterType	const ENCODING *		10798968	0					
ANR	10799089	Identifier	enc		10798968	1					
ANR	10799090	Parameter	const char * ptr	936:43:24611:24625	10798968	1	True				
ANR	10799091	ParameterType	const char *		10798968	0					
ANR	10799092	Identifier	ptr		10798968	1					
ANR	10799093	Parameter	const char * end	936:60:24628:24642	10798968	2	True				
ANR	10799094	ParameterType	const char *		10798968	0					
ANR	10799095	Identifier	end		10798968	1					
ANR	10799096	Parameter	const char * * nextTokPtr	937:22:24667:24689	10798968	3	True				
ANR	10799097	ParameterType	const char * *		10798968	0					
ANR	10799098	Identifier	nextTokPtr		10798968	1					
ANR	10799099	CFGEntryNode	ENTRY		10798968		True				
ANR	10799100	CFGExitNode	EXIT		10798968		True				
ANR	10799101	Symbol	XML_TOK_INVALID		10798968						
ANR	10799102	Symbol	nextTokPtr		10798968						
ANR	10799103	Symbol	BYTE_TYPE		10798968						
ANR	10799104	Symbol	* nextTokPtr		10798968						
ANR	10799105	Symbol	end		10798968						
ANR	10799106	Symbol	enc		10798968						
ANR	10799107	Symbol	HAS_CHAR		10798968						
ANR	10799108	Symbol	XML_TOK_POUND_NAME		10798968						
ANR	10799109	Symbol	ptr		10798968						
ANR	10799110	Function	scanLit	961:0:25261:26035							
ANR	10799111	FunctionDef	"scanLit (int open , const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10799110	0					
ANR	10799112	CompoundStatement		965:0:25418:26035	10799110	0					
ANR	10799113	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10799110	0					
ANR	10799114	Condition	"HAS_CHAR ( enc , ptr , end )"	966:9:25429:25451	10799110	0	True				
ANR	10799115	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10799110	0					
ANR	10799116	Callee	HAS_CHAR		10799110	0					
ANR	10799117	Identifier	HAS_CHAR		10799110	0					
ANR	10799118	ArgumentList	enc		10799110	1					
ANR	10799119	Argument	enc		10799110	0					
ANR	10799120	Identifier	enc		10799110	0					
ANR	10799121	Argument	ptr		10799110	1					
ANR	10799122	Identifier	ptr		10799110	0					
ANR	10799123	Argument	end		10799110	2					
ANR	10799124	Identifier	end		10799110	0					
ANR	10799125	CompoundStatement		3:4:41:68	10799110	1					
ANR	10799126	IdentifierDeclStatement	"int t = BYTE_TYPE ( enc , ptr ) ;"	967:4:25460:25487	10799110	0	True				
ANR	10799127	IdentifierDecl	"t = BYTE_TYPE ( enc , ptr )"		10799110	0					
ANR	10799128	IdentifierDeclType	int		10799110	0					
ANR	10799129	Identifier	t		10799110	1					
ANR	10799130	AssignmentExpression	"t = BYTE_TYPE ( enc , ptr )"		10799110	2		=			
ANR	10799131	Identifier	t		10799110	0					
ANR	10799132	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799110	1					
ANR	10799133	Callee	BYTE_TYPE		10799110	0					
ANR	10799134	Identifier	BYTE_TYPE		10799110	0					
ANR	10799135	ArgumentList	enc		10799110	1					
ANR	10799136	Argument	enc		10799110	0					
ANR	10799137	Identifier	enc		10799110	0					
ANR	10799138	Argument	ptr		10799110	1					
ANR	10799139	Identifier	ptr		10799110	0					
ANR	10799140	SwitchStatement	switch ( t )		10799110	1					
ANR	10799141	Condition	t	968:12:25501:25501	10799110	0	True				
ANR	10799142	Identifier	t		10799110	0					
ANR	10799143	CompoundStatement		4:15:85:85	10799110	1					
ANR	10799144	Statement	INVALID_CASES	969:4:25510:25522	10799110	0	True				
ANR	10799145	Statement	(	969:17:25523:25523	10799110	1	True				
ANR	10799146	Statement	ptr	969:18:25524:25526	10799110	2	True				
ANR	10799147	Statement	","	969:21:25527:25527	10799110	3	True				
ANR	10799148	Statement	nextTokPtr	969:23:25529:25538	10799110	4	True				
ANR	10799149	Statement	)	969:33:25539:25539	10799110	5	True				
ANR	10799150	Label	case BT_QUOT :	970:4:25545:25557	10799110	6	True				
ANR	10799151	Identifier	BT_QUOT		10799110	0					
ANR	10799152	Label	case BT_APOS :	971:4:25563:25575	10799110	7	True				
ANR	10799153	Identifier	BT_APOS		10799110	0					
ANR	10799154	ExpressionStatement	ptr += MINBPC ( enc )	972:6:25583:25601	10799110	8	True				
ANR	10799155	AssignmentExpression	ptr += MINBPC ( enc )		10799110	0		+=			
ANR	10799156	Identifier	ptr		10799110	0					
ANR	10799157	CallExpression	MINBPC ( enc )		10799110	1					
ANR	10799158	Callee	MINBPC		10799110	0					
ANR	10799159	Identifier	MINBPC		10799110	0					
ANR	10799160	ArgumentList	enc		10799110	1					
ANR	10799161	Argument	enc		10799110	0					
ANR	10799162	Identifier	enc		10799110	0					
ANR	10799163	IfStatement	if ( t != open )		10799110	9					
ANR	10799164	Condition	t != open	973:10:25613:25621	10799110	0	True				
ANR	10799165	EqualityExpression	t != open		10799110	0		!=			
ANR	10799166	Identifier	t		10799110	0					
ANR	10799167	Identifier	open		10799110	1					
ANR	10799168	BreakStatement	break ;	974:8:25632:25637	10799110	1	True				
ANR	10799169	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10799110	10					
ANR	10799170	Condition	"! HAS_CHAR ( enc , ptr , end )"	975:10:25649:25673	10799110	0	True				
ANR	10799171	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10799110	0					
ANR	10799172	UnaryOperator	!		10799110	0					
ANR	10799173	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10799110	1					
ANR	10799174	Callee	HAS_CHAR		10799110	0					
ANR	10799175	Identifier	HAS_CHAR		10799110	0					
ANR	10799176	ArgumentList	enc		10799110	1					
ANR	10799177	Argument	enc		10799110	0					
ANR	10799178	Identifier	enc		10799110	0					
ANR	10799179	Argument	ptr		10799110	1					
ANR	10799180	Identifier	ptr		10799110	0					
ANR	10799181	Argument	end		10799110	2					
ANR	10799182	Identifier	end		10799110	0					
ANR	10799183	ReturnStatement	return - XML_TOK_LITERAL ;	976:8:25684:25707	10799110	1	True				
ANR	10799184	UnaryOperationExpression	- XML_TOK_LITERAL		10799110	0					
ANR	10799185	UnaryOperator	-		10799110	0					
ANR	10799186	Identifier	XML_TOK_LITERAL		10799110	1					
ANR	10799187	ExpressionStatement	* nextTokPtr = ptr	977:6:25715:25732	10799110	11	True				
ANR	10799188	AssignmentExpression	* nextTokPtr = ptr		10799110	0		=			
ANR	10799189	UnaryOperationExpression	* nextTokPtr		10799110	0					
ANR	10799190	UnaryOperator	*		10799110	0					
ANR	10799191	Identifier	nextTokPtr		10799110	1					
ANR	10799192	Identifier	ptr		10799110	1					
ANR	10799193	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10799110	12					
ANR	10799194	Condition	"BYTE_TYPE ( enc , ptr )"	978:14:25748:25766	10799110	0	True				
ANR	10799195	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799110	0					
ANR	10799196	Callee	BYTE_TYPE		10799110	0					
ANR	10799197	Identifier	BYTE_TYPE		10799110	0					
ANR	10799198	ArgumentList	enc		10799110	1					
ANR	10799199	Argument	enc		10799110	0					
ANR	10799200	Identifier	enc		10799110	0					
ANR	10799201	Argument	ptr		10799110	1					
ANR	10799202	Identifier	ptr		10799110	0					
ANR	10799203	CompoundStatement		14:35:350:350	10799110	1					
ANR	10799204	Label	case BT_S :	979:6:25777:25786	10799110	0	True				
ANR	10799205	Identifier	BT_S		10799110	0					
ANR	10799206	Label	case BT_CR :	979:17:25788:25798	10799110	1	True				
ANR	10799207	Identifier	BT_CR		10799110	0					
ANR	10799208	Label	case BT_LF :	979:29:25800:25810	10799110	2	True				
ANR	10799209	Identifier	BT_LF		10799110	0					
ANR	10799210	Label	case BT_GT :	980:6:25818:25828	10799110	3	True				
ANR	10799211	Identifier	BT_GT		10799110	0					
ANR	10799212	Label	case BT_PERCNT :	980:18:25830:25844	10799110	4	True				
ANR	10799213	Identifier	BT_PERCNT		10799110	0					
ANR	10799214	Label	case BT_LSQB :	980:34:25846:25858	10799110	5	True				
ANR	10799215	Identifier	BT_LSQB		10799110	0					
ANR	10799216	ReturnStatement	return XML_TOK_LITERAL ;	981:8:25868:25890	10799110	6	True				
ANR	10799217	Identifier	XML_TOK_LITERAL		10799110	0					
ANR	10799218	Label	default :	982:6:25898:25905	10799110	7	True				
ANR	10799219	Identifier	default		10799110	0					
ANR	10799220	ReturnStatement	return XML_TOK_INVALID ;	983:8:25915:25937	10799110	8	True				
ANR	10799221	Identifier	XML_TOK_INVALID		10799110	0					
ANR	10799222	Label	default :	985:4:25951:25958	10799110	13	True				
ANR	10799223	Identifier	default		10799110	0					
ANR	10799224	ExpressionStatement	ptr += MINBPC ( enc )	986:6:25966:25984	10799110	14	True				
ANR	10799225	AssignmentExpression	ptr += MINBPC ( enc )		10799110	0		+=			
ANR	10799226	Identifier	ptr		10799110	0					
ANR	10799227	CallExpression	MINBPC ( enc )		10799110	1					
ANR	10799228	Callee	MINBPC		10799110	0					
ANR	10799229	Identifier	MINBPC		10799110	0					
ANR	10799230	ArgumentList	enc		10799110	1					
ANR	10799231	Argument	enc		10799110	0					
ANR	10799232	Identifier	enc		10799110	0					
ANR	10799233	BreakStatement	break ;	987:6:25992:25997	10799110	15	True				
ANR	10799234	ReturnStatement	return XML_TOK_PARTIAL ;	990:2:26011:26033	10799110	1	True				
ANR	10799235	Identifier	XML_TOK_PARTIAL		10799110	0					
ANR	10799236	ReturnType	static int PTRCALL PREFIX		10799110	1					
ANR	10799237	Identifier	( scanLit )		10799110	2					
ANR	10799238	Identifier	scanLit		10799110	3					
ANR	10799239	ParameterList	"int open , const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10799110	4					
ANR	10799240	Parameter	int open	962:16:25296:25303	10799110	0	True				
ANR	10799241	ParameterType	int		10799110	0					
ANR	10799242	Identifier	open		10799110	1					
ANR	10799243	Parameter	const ENCODING * enc	962:26:25306:25324	10799110	1	True				
ANR	10799244	ParameterType	const ENCODING *		10799110	0					
ANR	10799245	Identifier	enc		10799110	1					
ANR	10799246	Parameter	const char * ptr	963:16:25343:25357	10799110	2	True				
ANR	10799247	ParameterType	const char *		10799110	0					
ANR	10799248	Identifier	ptr		10799110	1					
ANR	10799249	Parameter	const char * end	963:33:25360:25374	10799110	3	True				
ANR	10799250	ParameterType	const char *		10799110	0					
ANR	10799251	Identifier	end		10799110	1					
ANR	10799252	Parameter	const char * * nextTokPtr	964:16:25393:25415	10799110	4	True				
ANR	10799253	ParameterType	const char * *		10799110	0					
ANR	10799254	Identifier	nextTokPtr		10799110	1					
ANR	10799255	CFGEntryNode	ENTRY		10799110		True				
ANR	10799256	CFGExitNode	EXIT		10799110		True				
ANR	10799257	Symbol	XML_TOK_INVALID		10799110						
ANR	10799258	Symbol	nextTokPtr		10799110						
ANR	10799259	Symbol	XML_TOK_PARTIAL		10799110						
ANR	10799260	Symbol	BYTE_TYPE		10799110						
ANR	10799261	Symbol	XML_TOK_LITERAL		10799110						
ANR	10799262	Symbol	* nextTokPtr		10799110						
ANR	10799263	Symbol	MINBPC		10799110						
ANR	10799264	Symbol	ptr		10799110						
ANR	10799265	Symbol	t		10799110						
ANR	10799266	Symbol	end		10799110						
ANR	10799267	Symbol	enc		10799110						
ANR	10799268	Symbol	HAS_CHAR		10799110						
ANR	10799269	Symbol	open		10799110						
ANR	10799270	Function	prologTok	993:0:26038:32033							
ANR	10799271	FunctionDef	"prologTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10799270	0					
ANR	10799272	CompoundStatement		996:0:26173:32033	10799270	0					
ANR	10799273	IdentifierDeclStatement	int tok ;	997:2:26177:26184	10799270	0	True				
ANR	10799274	IdentifierDecl	tok		10799270	0					
ANR	10799275	IdentifierDeclType	int		10799270	0					
ANR	10799276	Identifier	tok		10799270	1					
ANR	10799277	IfStatement	if ( ptr >= end )		10799270	1					
ANR	10799278	Condition	ptr >= end	998:6:26192:26201	10799270	0	True				
ANR	10799279	RelationalExpression	ptr >= end		10799270	0		>=			
ANR	10799280	Identifier	ptr		10799270	0					
ANR	10799281	Identifier	end		10799270	1					
ANR	10799282	ReturnStatement	return XML_TOK_NONE ;	999:4:26208:26227	10799270	1	True				
ANR	10799283	Identifier	XML_TOK_NONE		10799270	0					
ANR	10799284	IfStatement	if ( MINBPC ( enc ) > 1 )		10799270	2					
ANR	10799285	Condition	MINBPC ( enc ) > 1	1000:6:26235:26249	10799270	0	True				
ANR	10799286	RelationalExpression	MINBPC ( enc ) > 1		10799270	0		>			
ANR	10799287	CallExpression	MINBPC ( enc )		10799270	0					
ANR	10799288	Callee	MINBPC		10799270	0					
ANR	10799289	Identifier	MINBPC		10799270	0					
ANR	10799290	ArgumentList	enc		10799270	1					
ANR	10799291	Argument	enc		10799270	0					
ANR	10799292	Identifier	enc		10799270	0					
ANR	10799293	PrimaryExpression	1		10799270	1					
ANR	10799294	CompoundStatement		6:4:84:104	10799270	1					
ANR	10799295	IdentifierDeclStatement	size_t n = end - ptr ;	1001:4:26258:26278	10799270	0	True				
ANR	10799296	IdentifierDecl	n = end - ptr		10799270	0					
ANR	10799297	IdentifierDeclType	size_t		10799270	0					
ANR	10799298	Identifier	n		10799270	1					
ANR	10799299	AssignmentExpression	n = end - ptr		10799270	2		=			
ANR	10799300	Identifier	n		10799270	0					
ANR	10799301	AdditiveExpression	end - ptr		10799270	1		-			
ANR	10799302	Identifier	end		10799270	0					
ANR	10799303	Identifier	ptr		10799270	1					
ANR	10799304	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		10799270	1					
ANR	10799305	Condition	n & ( MINBPC ( enc ) - 1 )	1002:8:26288:26308	10799270	0	True				
ANR	10799306	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		10799270	0		&			
ANR	10799307	Identifier	n		10799270	0					
ANR	10799308	AdditiveExpression	MINBPC ( enc ) - 1		10799270	1		-			
ANR	10799309	CallExpression	MINBPC ( enc )		10799270	0					
ANR	10799310	Callee	MINBPC		10799270	0					
ANR	10799311	Identifier	MINBPC		10799270	0					
ANR	10799312	ArgumentList	enc		10799270	1					
ANR	10799313	Argument	enc		10799270	0					
ANR	10799314	Identifier	enc		10799270	0					
ANR	10799315	PrimaryExpression	1		10799270	1					
ANR	10799316	CompoundStatement		7:31:137:137	10799270	1					
ANR	10799317	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	1003:6:26319:26342	10799270	0	True				
ANR	10799318	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		10799270	0		&=			
ANR	10799319	Identifier	n		10799270	0					
ANR	10799320	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		10799270	1					
ANR	10799321	UnaryOperator	~		10799270	0					
ANR	10799322	AdditiveExpression	MINBPC ( enc ) - 1		10799270	1		-			
ANR	10799323	CallExpression	MINBPC ( enc )		10799270	0					
ANR	10799324	Callee	MINBPC		10799270	0					
ANR	10799325	Identifier	MINBPC		10799270	0					
ANR	10799326	ArgumentList	enc		10799270	1					
ANR	10799327	Argument	enc		10799270	0					
ANR	10799328	Identifier	enc		10799270	0					
ANR	10799329	PrimaryExpression	1		10799270	1					
ANR	10799330	IfStatement	if ( n == 0 )		10799270	1					
ANR	10799331	Condition	n == 0	1004:10:26354:26359	10799270	0	True				
ANR	10799332	EqualityExpression	n == 0		10799270	0		==			
ANR	10799333	Identifier	n		10799270	0					
ANR	10799334	PrimaryExpression	0		10799270	1					
ANR	10799335	ReturnStatement	return XML_TOK_PARTIAL ;	1005:8:26370:26392	10799270	1	True				
ANR	10799336	Identifier	XML_TOK_PARTIAL		10799270	0					
ANR	10799337	ExpressionStatement	end = ptr + n	1006:6:26400:26413	10799270	2	True				
ANR	10799338	AssignmentExpression	end = ptr + n		10799270	0		=			
ANR	10799339	Identifier	end		10799270	0					
ANR	10799340	AdditiveExpression	ptr + n		10799270	1		+			
ANR	10799341	Identifier	ptr		10799270	0					
ANR	10799342	Identifier	n		10799270	1					
ANR	10799343	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10799270	3					
ANR	10799344	Condition	"BYTE_TYPE ( enc , ptr )"	1009:10:26435:26453	10799270	0	True				
ANR	10799345	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799270	0					
ANR	10799346	Callee	BYTE_TYPE		10799270	0					
ANR	10799347	Identifier	BYTE_TYPE		10799270	0					
ANR	10799348	ArgumentList	enc		10799270	1					
ANR	10799349	Argument	enc		10799270	0					
ANR	10799350	Identifier	enc		10799270	0					
ANR	10799351	Argument	ptr		10799270	1					
ANR	10799352	Identifier	ptr		10799270	0					
ANR	10799353	CompoundStatement		14:31:282:282	10799270	1					
ANR	10799354	Label	case BT_QUOT :	1010:2:26460:26472	10799270	0	True				
ANR	10799355	Identifier	BT_QUOT		10799270	0					
ANR	10799356	ReturnStatement	"return PREFIX ( scanLit ) ( BT_QUOT , enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1011:4:26478:26550	10799270	1	True				
ANR	10799357	CallExpression	"PREFIX ( scanLit ) ( BT_QUOT , enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10799270	0					
ANR	10799358	Callee	PREFIX ( scanLit )		10799270	0					
ANR	10799359	CallExpression	PREFIX ( scanLit )		10799270	0					
ANR	10799360	Callee	PREFIX		10799270	0					
ANR	10799361	Identifier	PREFIX		10799270	0					
ANR	10799362	ArgumentList	scanLit		10799270	1					
ANR	10799363	Argument	scanLit		10799270	0					
ANR	10799364	Identifier	scanLit		10799270	0					
ANR	10799365	ArgumentList	BT_QUOT		10799270	1					
ANR	10799366	Argument	BT_QUOT		10799270	0					
ANR	10799367	Identifier	BT_QUOT		10799270	0					
ANR	10799368	Argument	enc		10799270	1					
ANR	10799369	Identifier	enc		10799270	0					
ANR	10799370	Argument	ptr + MINBPC ( enc )		10799270	2					
ANR	10799371	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799372	Identifier	ptr		10799270	0					
ANR	10799373	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799374	Callee	MINBPC		10799270	0					
ANR	10799375	Identifier	MINBPC		10799270	0					
ANR	10799376	ArgumentList	enc		10799270	1					
ANR	10799377	Argument	enc		10799270	0					
ANR	10799378	Identifier	enc		10799270	0					
ANR	10799379	Argument	end		10799270	3					
ANR	10799380	Identifier	end		10799270	0					
ANR	10799381	Argument	nextTokPtr		10799270	4					
ANR	10799382	Identifier	nextTokPtr		10799270	0					
ANR	10799383	Label	case BT_APOS :	1012:2:26554:26566	10799270	2	True				
ANR	10799384	Identifier	BT_APOS		10799270	0					
ANR	10799385	ReturnStatement	"return PREFIX ( scanLit ) ( BT_APOS , enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1013:4:26572:26644	10799270	3	True				
ANR	10799386	CallExpression	"PREFIX ( scanLit ) ( BT_APOS , enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10799270	0					
ANR	10799387	Callee	PREFIX ( scanLit )		10799270	0					
ANR	10799388	CallExpression	PREFIX ( scanLit )		10799270	0					
ANR	10799389	Callee	PREFIX		10799270	0					
ANR	10799390	Identifier	PREFIX		10799270	0					
ANR	10799391	ArgumentList	scanLit		10799270	1					
ANR	10799392	Argument	scanLit		10799270	0					
ANR	10799393	Identifier	scanLit		10799270	0					
ANR	10799394	ArgumentList	BT_APOS		10799270	1					
ANR	10799395	Argument	BT_APOS		10799270	0					
ANR	10799396	Identifier	BT_APOS		10799270	0					
ANR	10799397	Argument	enc		10799270	1					
ANR	10799398	Identifier	enc		10799270	0					
ANR	10799399	Argument	ptr + MINBPC ( enc )		10799270	2					
ANR	10799400	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799401	Identifier	ptr		10799270	0					
ANR	10799402	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799403	Callee	MINBPC		10799270	0					
ANR	10799404	Identifier	MINBPC		10799270	0					
ANR	10799405	ArgumentList	enc		10799270	1					
ANR	10799406	Argument	enc		10799270	0					
ANR	10799407	Identifier	enc		10799270	0					
ANR	10799408	Argument	end		10799270	3					
ANR	10799409	Identifier	end		10799270	0					
ANR	10799410	Argument	nextTokPtr		10799270	4					
ANR	10799411	Identifier	nextTokPtr		10799270	0					
ANR	10799412	Label	case BT_LT :	1014:2:26648:26658	10799270	4	True				
ANR	10799413	Identifier	BT_LT		10799270	0					
ANR	10799414	CompoundStatement		20:4:490:490	10799270	5					
ANR	10799415	ExpressionStatement	ptr += MINBPC ( enc )	1016:6:26672:26690	10799270	0	True				
ANR	10799416	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10799417	Identifier	ptr		10799270	0					
ANR	10799418	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799419	Callee	MINBPC		10799270	0					
ANR	10799420	Identifier	MINBPC		10799270	0					
ANR	10799421	ArgumentList	enc		10799270	1					
ANR	10799422	Argument	enc		10799270	0					
ANR	10799423	Identifier	enc		10799270	0					
ANR	10799424	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1017:6:26698:26725	10799270	1	True				
ANR	10799425	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10799270	0					
ANR	10799426	Callee	REQUIRE_CHAR		10799270	0					
ANR	10799427	Identifier	REQUIRE_CHAR		10799270	0					
ANR	10799428	ArgumentList	enc		10799270	1					
ANR	10799429	Argument	enc		10799270	0					
ANR	10799430	Identifier	enc		10799270	0					
ANR	10799431	Argument	ptr		10799270	1					
ANR	10799432	Identifier	ptr		10799270	0					
ANR	10799433	Argument	end		10799270	2					
ANR	10799434	Identifier	end		10799270	0					
ANR	10799435	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10799270	2					
ANR	10799436	Condition	"BYTE_TYPE ( enc , ptr )"	1018:14:26741:26759	10799270	0	True				
ANR	10799437	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799270	0					
ANR	10799438	Callee	BYTE_TYPE		10799270	0					
ANR	10799439	Identifier	BYTE_TYPE		10799270	0					
ANR	10799440	ArgumentList	enc		10799270	1					
ANR	10799441	Argument	enc		10799270	0					
ANR	10799442	Identifier	enc		10799270	0					
ANR	10799443	Argument	ptr		10799270	1					
ANR	10799444	Identifier	ptr		10799270	0					
ANR	10799445	CompoundStatement		23:35:588:588	10799270	1					
ANR	10799446	Label	case BT_EXCL :	1019:6:26770:26782	10799270	0	True				
ANR	10799447	Identifier	BT_EXCL		10799270	0					
ANR	10799448	ReturnStatement	"return PREFIX ( scanDecl ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1020:8:26792:26856	10799270	1	True				
ANR	10799449	CallExpression	"PREFIX ( scanDecl ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10799270	0					
ANR	10799450	Callee	PREFIX ( scanDecl )		10799270	0					
ANR	10799451	CallExpression	PREFIX ( scanDecl )		10799270	0					
ANR	10799452	Callee	PREFIX		10799270	0					
ANR	10799453	Identifier	PREFIX		10799270	0					
ANR	10799454	ArgumentList	scanDecl		10799270	1					
ANR	10799455	Argument	scanDecl		10799270	0					
ANR	10799456	Identifier	scanDecl		10799270	0					
ANR	10799457	ArgumentList	enc		10799270	1					
ANR	10799458	Argument	enc		10799270	0					
ANR	10799459	Identifier	enc		10799270	0					
ANR	10799460	Argument	ptr + MINBPC ( enc )		10799270	1					
ANR	10799461	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799462	Identifier	ptr		10799270	0					
ANR	10799463	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799464	Callee	MINBPC		10799270	0					
ANR	10799465	Identifier	MINBPC		10799270	0					
ANR	10799466	ArgumentList	enc		10799270	1					
ANR	10799467	Argument	enc		10799270	0					
ANR	10799468	Identifier	enc		10799270	0					
ANR	10799469	Argument	end		10799270	2					
ANR	10799470	Identifier	end		10799270	0					
ANR	10799471	Argument	nextTokPtr		10799270	3					
ANR	10799472	Identifier	nextTokPtr		10799270	0					
ANR	10799473	Label	case BT_QUEST :	1021:6:26864:26877	10799270	2	True				
ANR	10799474	Identifier	BT_QUEST		10799270	0					
ANR	10799475	ReturnStatement	"return PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1022:8:26887:26949	10799270	3	True				
ANR	10799476	CallExpression	"PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10799270	0					
ANR	10799477	Callee	PREFIX ( scanPi )		10799270	0					
ANR	10799478	CallExpression	PREFIX ( scanPi )		10799270	0					
ANR	10799479	Callee	PREFIX		10799270	0					
ANR	10799480	Identifier	PREFIX		10799270	0					
ANR	10799481	ArgumentList	scanPi		10799270	1					
ANR	10799482	Argument	scanPi		10799270	0					
ANR	10799483	Identifier	scanPi		10799270	0					
ANR	10799484	ArgumentList	enc		10799270	1					
ANR	10799485	Argument	enc		10799270	0					
ANR	10799486	Identifier	enc		10799270	0					
ANR	10799487	Argument	ptr + MINBPC ( enc )		10799270	1					
ANR	10799488	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799489	Identifier	ptr		10799270	0					
ANR	10799490	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799491	Callee	MINBPC		10799270	0					
ANR	10799492	Identifier	MINBPC		10799270	0					
ANR	10799493	ArgumentList	enc		10799270	1					
ANR	10799494	Argument	enc		10799270	0					
ANR	10799495	Identifier	enc		10799270	0					
ANR	10799496	Argument	end		10799270	2					
ANR	10799497	Identifier	end		10799270	0					
ANR	10799498	Argument	nextTokPtr		10799270	3					
ANR	10799499	Identifier	nextTokPtr		10799270	0					
ANR	10799500	Label	case BT_NMSTRT :	1023:6:26957:26971	10799270	4	True				
ANR	10799501	Identifier	BT_NMSTRT		10799270	0					
ANR	10799502	Label	case BT_HEX :	1024:6:26979:26990	10799270	5	True				
ANR	10799503	Identifier	BT_HEX		10799270	0					
ANR	10799504	Label	case BT_NONASCII :	1025:6:26998:27014	10799270	6	True				
ANR	10799505	Identifier	BT_NONASCII		10799270	0					
ANR	10799506	Label	case BT_LEAD2 :	1026:6:27022:27035	10799270	7	True				
ANR	10799507	Identifier	BT_LEAD2		10799270	0					
ANR	10799508	Label	case BT_LEAD3 :	1027:6:27043:27056	10799270	8	True				
ANR	10799509	Identifier	BT_LEAD3		10799270	0					
ANR	10799510	Label	case BT_LEAD4 :	1028:6:27064:27077	10799270	9	True				
ANR	10799511	Identifier	BT_LEAD4		10799270	0					
ANR	10799512	ExpressionStatement	* nextTokPtr = ptr - MINBPC ( enc )	1029:8:27087:27118	10799270	10	True				
ANR	10799513	AssignmentExpression	* nextTokPtr = ptr - MINBPC ( enc )		10799270	0		=			
ANR	10799514	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799515	UnaryOperator	*		10799270	0					
ANR	10799516	Identifier	nextTokPtr		10799270	1					
ANR	10799517	AdditiveExpression	ptr - MINBPC ( enc )		10799270	1		-			
ANR	10799518	Identifier	ptr		10799270	0					
ANR	10799519	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799520	Callee	MINBPC		10799270	0					
ANR	10799521	Identifier	MINBPC		10799270	0					
ANR	10799522	ArgumentList	enc		10799270	1					
ANR	10799523	Argument	enc		10799270	0					
ANR	10799524	Identifier	enc		10799270	0					
ANR	10799525	ReturnStatement	return XML_TOK_INSTANCE_START ;	1030:8:27128:27157	10799270	11	True				
ANR	10799526	Identifier	XML_TOK_INSTANCE_START		10799270	0					
ANR	10799527	ExpressionStatement	* nextTokPtr = ptr	1032:6:27173:27190	10799270	3	True				
ANR	10799528	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10799529	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799530	UnaryOperator	*		10799270	0					
ANR	10799531	Identifier	nextTokPtr		10799270	1					
ANR	10799532	Identifier	ptr		10799270	1					
ANR	10799533	ReturnStatement	return XML_TOK_INVALID ;	1033:6:27198:27220	10799270	4	True				
ANR	10799534	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10799535	Label	case BT_CR :	1035:2:27230:27240	10799270	6	True				
ANR	10799536	Identifier	BT_CR		10799270	0					
ANR	10799537	IfStatement	if ( ptr + MINBPC ( enc ) == end )		10799270	7					
ANR	10799538	Condition	ptr + MINBPC ( enc ) == end	1036:8:27250:27273	10799270	0	True				
ANR	10799539	EqualityExpression	ptr + MINBPC ( enc ) == end		10799270	0		==			
ANR	10799540	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799541	Identifier	ptr		10799270	0					
ANR	10799542	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799543	Callee	MINBPC		10799270	0					
ANR	10799544	Identifier	MINBPC		10799270	0					
ANR	10799545	ArgumentList	enc		10799270	1					
ANR	10799546	Argument	enc		10799270	0					
ANR	10799547	Identifier	enc		10799270	0					
ANR	10799548	Identifier	end		10799270	1					
ANR	10799549	CompoundStatement		41:34:1102:1102	10799270	1					
ANR	10799550	ExpressionStatement	* nextTokPtr = end	1037:6:27284:27301	10799270	0	True				
ANR	10799551	AssignmentExpression	* nextTokPtr = end		10799270	0		=			
ANR	10799552	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799553	UnaryOperator	*		10799270	0					
ANR	10799554	Identifier	nextTokPtr		10799270	1					
ANR	10799555	Identifier	end		10799270	1					
ANR	10799556	ReturnStatement	return - XML_TOK_PROLOG_S ;	1039:6:27370:27394	10799270	1	True				
ANR	10799557	UnaryOperationExpression	- XML_TOK_PROLOG_S		10799270	0					
ANR	10799558	UnaryOperator	-		10799270	0					
ANR	10799559	Identifier	XML_TOK_PROLOG_S		10799270	1					
ANR	10799560	Label	case BT_S :	1042:2:27427:27436	10799270	8	True				
ANR	10799561	Identifier	BT_S		10799270	0					
ANR	10799562	Label	case BT_LF :	1042:13:27438:27448	10799270	9	True				
ANR	10799563	Identifier	BT_LF		10799270	0					
ANR	10799564	ForStatement	for ( ; ; )		10799270	10					
ANR	10799565	CompoundStatement		48:13:1289:1289	10799270	0					
ANR	10799566	ExpressionStatement	ptr += MINBPC ( enc )	1044:6:27471:27489	10799270	0	True				
ANR	10799567	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10799568	Identifier	ptr		10799270	0					
ANR	10799569	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799570	Callee	MINBPC		10799270	0					
ANR	10799571	Identifier	MINBPC		10799270	0					
ANR	10799572	ArgumentList	enc		10799270	1					
ANR	10799573	Argument	enc		10799270	0					
ANR	10799574	Identifier	enc		10799270	0					
ANR	10799575	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10799270	1					
ANR	10799576	Condition	"! HAS_CHAR ( enc , ptr , end )"	1045:10:27501:27525	10799270	0	True				
ANR	10799577	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10799270	0					
ANR	10799578	UnaryOperator	!		10799270	0					
ANR	10799579	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10799270	1					
ANR	10799580	Callee	HAS_CHAR		10799270	0					
ANR	10799581	Identifier	HAS_CHAR		10799270	0					
ANR	10799582	ArgumentList	enc		10799270	1					
ANR	10799583	Argument	enc		10799270	0					
ANR	10799584	Identifier	enc		10799270	0					
ANR	10799585	Argument	ptr		10799270	1					
ANR	10799586	Identifier	ptr		10799270	0					
ANR	10799587	Argument	end		10799270	2					
ANR	10799588	Identifier	end		10799270	0					
ANR	10799589	BreakStatement	break ;	1046:8:27536:27541	10799270	1	True				
ANR	10799590	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10799270	2					
ANR	10799591	Condition	"BYTE_TYPE ( enc , ptr )"	1047:14:27557:27575	10799270	0	True				
ANR	10799592	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799270	0					
ANR	10799593	Callee	BYTE_TYPE		10799270	0					
ANR	10799594	Identifier	BYTE_TYPE		10799270	0					
ANR	10799595	ArgumentList	enc		10799270	1					
ANR	10799596	Argument	enc		10799270	0					
ANR	10799597	Identifier	enc		10799270	0					
ANR	10799598	Argument	ptr		10799270	1					
ANR	10799599	Identifier	ptr		10799270	0					
ANR	10799600	CompoundStatement		52:35:1404:1404	10799270	1					
ANR	10799601	Label	case BT_S :	1048:6:27586:27595	10799270	0	True				
ANR	10799602	Identifier	BT_S		10799270	0					
ANR	10799603	Label	case BT_LF :	1048:17:27597:27607	10799270	1	True				
ANR	10799604	Identifier	BT_LF		10799270	0					
ANR	10799605	BreakStatement	break ;	1049:8:27617:27622	10799270	2	True				
ANR	10799606	Label	case BT_CR :	1050:6:27630:27640	10799270	3	True				
ANR	10799607	Identifier	BT_CR		10799270	0					
ANR	10799608	IfStatement	if ( ptr + MINBPC ( enc ) != end )		10799270	4					
ANR	10799609	Condition	ptr + MINBPC ( enc ) != end	1052:12:27691:27714	10799270	0	True				
ANR	10799610	EqualityExpression	ptr + MINBPC ( enc ) != end		10799270	0		!=			
ANR	10799611	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799612	Identifier	ptr		10799270	0					
ANR	10799613	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799614	Callee	MINBPC		10799270	0					
ANR	10799615	Identifier	MINBPC		10799270	0					
ANR	10799616	ArgumentList	enc		10799270	1					
ANR	10799617	Argument	enc		10799270	0					
ANR	10799618	Identifier	enc		10799270	0					
ANR	10799619	Identifier	end		10799270	1					
ANR	10799620	BreakStatement	break ;	1053:10:27727:27732	10799270	1	True				
ANR	10799621	Label	default :	1055:6:27767:27774	10799270	5	True				
ANR	10799622	Identifier	default		10799270	0					
ANR	10799623	ExpressionStatement	* nextTokPtr = ptr	1056:8:27784:27801	10799270	6	True				
ANR	10799624	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10799625	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799626	UnaryOperator	*		10799270	0					
ANR	10799627	Identifier	nextTokPtr		10799270	1					
ANR	10799628	Identifier	ptr		10799270	1					
ANR	10799629	ReturnStatement	return XML_TOK_PROLOG_S ;	1057:8:27811:27834	10799270	7	True				
ANR	10799630	Identifier	XML_TOK_PROLOG_S		10799270	0					
ANR	10799631	ExpressionStatement	* nextTokPtr = ptr	1060:4:27854:27871	10799270	11	True				
ANR	10799632	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10799633	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799634	UnaryOperator	*		10799270	0					
ANR	10799635	Identifier	nextTokPtr		10799270	1					
ANR	10799636	Identifier	ptr		10799270	1					
ANR	10799637	ReturnStatement	return XML_TOK_PROLOG_S ;	1061:4:27877:27900	10799270	12	True				
ANR	10799638	Identifier	XML_TOK_PROLOG_S		10799270	0					
ANR	10799639	Label	case BT_PERCNT :	1062:2:27904:27918	10799270	13	True				
ANR	10799640	Identifier	BT_PERCNT		10799270	0					
ANR	10799641	ReturnStatement	"return PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1063:4:27924:27991	10799270	14	True				
ANR	10799642	CallExpression	"PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10799270	0					
ANR	10799643	Callee	PREFIX ( scanPercent )		10799270	0					
ANR	10799644	CallExpression	PREFIX ( scanPercent )		10799270	0					
ANR	10799645	Callee	PREFIX		10799270	0					
ANR	10799646	Identifier	PREFIX		10799270	0					
ANR	10799647	ArgumentList	scanPercent		10799270	1					
ANR	10799648	Argument	scanPercent		10799270	0					
ANR	10799649	Identifier	scanPercent		10799270	0					
ANR	10799650	ArgumentList	enc		10799270	1					
ANR	10799651	Argument	enc		10799270	0					
ANR	10799652	Identifier	enc		10799270	0					
ANR	10799653	Argument	ptr + MINBPC ( enc )		10799270	1					
ANR	10799654	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799655	Identifier	ptr		10799270	0					
ANR	10799656	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799657	Callee	MINBPC		10799270	0					
ANR	10799658	Identifier	MINBPC		10799270	0					
ANR	10799659	ArgumentList	enc		10799270	1					
ANR	10799660	Argument	enc		10799270	0					
ANR	10799661	Identifier	enc		10799270	0					
ANR	10799662	Argument	end		10799270	2					
ANR	10799663	Identifier	end		10799270	0					
ANR	10799664	Argument	nextTokPtr		10799270	3					
ANR	10799665	Identifier	nextTokPtr		10799270	0					
ANR	10799666	Label	case BT_COMMA :	1064:2:27995:28008	10799270	15	True				
ANR	10799667	Identifier	BT_COMMA		10799270	0					
ANR	10799668	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1065:4:28014:28045	10799270	16	True				
ANR	10799669	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799670	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799671	UnaryOperator	*		10799270	0					
ANR	10799672	Identifier	nextTokPtr		10799270	1					
ANR	10799673	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799674	Identifier	ptr		10799270	0					
ANR	10799675	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799676	Callee	MINBPC		10799270	0					
ANR	10799677	Identifier	MINBPC		10799270	0					
ANR	10799678	ArgumentList	enc		10799270	1					
ANR	10799679	Argument	enc		10799270	0					
ANR	10799680	Identifier	enc		10799270	0					
ANR	10799681	ReturnStatement	return XML_TOK_COMMA ;	1066:4:28051:28071	10799270	17	True				
ANR	10799682	Identifier	XML_TOK_COMMA		10799270	0					
ANR	10799683	Label	case BT_LSQB :	1067:2:28075:28087	10799270	18	True				
ANR	10799684	Identifier	BT_LSQB		10799270	0					
ANR	10799685	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1068:4:28093:28124	10799270	19	True				
ANR	10799686	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799687	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799688	UnaryOperator	*		10799270	0					
ANR	10799689	Identifier	nextTokPtr		10799270	1					
ANR	10799690	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799691	Identifier	ptr		10799270	0					
ANR	10799692	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799693	Callee	MINBPC		10799270	0					
ANR	10799694	Identifier	MINBPC		10799270	0					
ANR	10799695	ArgumentList	enc		10799270	1					
ANR	10799696	Argument	enc		10799270	0					
ANR	10799697	Identifier	enc		10799270	0					
ANR	10799698	ReturnStatement	return XML_TOK_OPEN_BRACKET ;	1069:4:28130:28157	10799270	20	True				
ANR	10799699	Identifier	XML_TOK_OPEN_BRACKET		10799270	0					
ANR	10799700	Label	case BT_RSQB :	1070:2:28161:28173	10799270	21	True				
ANR	10799701	Identifier	BT_RSQB		10799270	0					
ANR	10799702	ExpressionStatement	ptr += MINBPC ( enc )	1071:4:28179:28197	10799270	22	True				
ANR	10799703	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10799704	Identifier	ptr		10799270	0					
ANR	10799705	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799706	Callee	MINBPC		10799270	0					
ANR	10799707	Identifier	MINBPC		10799270	0					
ANR	10799708	ArgumentList	enc		10799270	1					
ANR	10799709	Argument	enc		10799270	0					
ANR	10799710	Identifier	enc		10799270	0					
ANR	10799711	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10799270	23					
ANR	10799712	Condition	"! HAS_CHAR ( enc , ptr , end )"	1072:8:28207:28231	10799270	0	True				
ANR	10799713	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10799270	0					
ANR	10799714	UnaryOperator	!		10799270	0					
ANR	10799715	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10799270	1					
ANR	10799716	Callee	HAS_CHAR		10799270	0					
ANR	10799717	Identifier	HAS_CHAR		10799270	0					
ANR	10799718	ArgumentList	enc		10799270	1					
ANR	10799719	Argument	enc		10799270	0					
ANR	10799720	Identifier	enc		10799270	0					
ANR	10799721	Argument	ptr		10799270	1					
ANR	10799722	Identifier	ptr		10799270	0					
ANR	10799723	Argument	end		10799270	2					
ANR	10799724	Identifier	end		10799270	0					
ANR	10799725	ReturnStatement	return - XML_TOK_CLOSE_BRACKET ;	1073:6:28240:28269	10799270	1	True				
ANR	10799726	UnaryOperationExpression	- XML_TOK_CLOSE_BRACKET		10799270	0					
ANR	10799727	UnaryOperator	-		10799270	0					
ANR	10799728	Identifier	XML_TOK_CLOSE_BRACKET		10799270	1					
ANR	10799729	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		10799270	24					
ANR	10799730	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	1074:8:28279:28312	10799270	0	True				
ANR	10799731	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		10799270	0					
ANR	10799732	Callee	CHAR_MATCHES		10799270	0					
ANR	10799733	Identifier	CHAR_MATCHES		10799270	0					
ANR	10799734	ArgumentList	enc		10799270	1					
ANR	10799735	Argument	enc		10799270	0					
ANR	10799736	Identifier	enc		10799270	0					
ANR	10799737	Argument	ptr		10799270	1					
ANR	10799738	Identifier	ptr		10799270	0					
ANR	10799739	Argument	ASCII_RSQB		10799270	2					
ANR	10799740	Identifier	ASCII_RSQB		10799270	0					
ANR	10799741	CompoundStatement		79:44:2141:2141	10799270	1					
ANR	10799742	ExpressionStatement	"REQUIRE_CHARS ( enc , ptr , end , 2 )"	1075:6:28323:28354	10799270	0	True				
ANR	10799743	CallExpression	"REQUIRE_CHARS ( enc , ptr , end , 2 )"		10799270	0					
ANR	10799744	Callee	REQUIRE_CHARS		10799270	0					
ANR	10799745	Identifier	REQUIRE_CHARS		10799270	0					
ANR	10799746	ArgumentList	enc		10799270	1					
ANR	10799747	Argument	enc		10799270	0					
ANR	10799748	Identifier	enc		10799270	0					
ANR	10799749	Argument	ptr		10799270	1					
ANR	10799750	Identifier	ptr		10799270	0					
ANR	10799751	Argument	end		10799270	2					
ANR	10799752	Identifier	end		10799270	0					
ANR	10799753	Argument	2		10799270	3					
ANR	10799754	PrimaryExpression	2		10799270	0					
ANR	10799755	IfStatement	"if ( CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_GT ) )"		10799270	1					
ANR	10799756	Condition	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_GT )"	1076:10:28366:28411	10799270	0	True				
ANR	10799757	CallExpression	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_GT )"		10799270	0					
ANR	10799758	Callee	CHAR_MATCHES		10799270	0					
ANR	10799759	Identifier	CHAR_MATCHES		10799270	0					
ANR	10799760	ArgumentList	enc		10799270	1					
ANR	10799761	Argument	enc		10799270	0					
ANR	10799762	Identifier	enc		10799270	0					
ANR	10799763	Argument	ptr + MINBPC ( enc )		10799270	1					
ANR	10799764	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799765	Identifier	ptr		10799270	0					
ANR	10799766	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799767	Callee	MINBPC		10799270	0					
ANR	10799768	Identifier	MINBPC		10799270	0					
ANR	10799769	ArgumentList	enc		10799270	1					
ANR	10799770	Argument	enc		10799270	0					
ANR	10799771	Identifier	enc		10799270	0					
ANR	10799772	Argument	ASCII_GT		10799270	2					
ANR	10799773	Identifier	ASCII_GT		10799270	0					
ANR	10799774	CompoundStatement		81:58:2240:2240	10799270	1					
ANR	10799775	ExpressionStatement	* nextTokPtr = ptr + 2 * MINBPC ( enc )	1077:8:28424:28457	10799270	0	True				
ANR	10799776	AssignmentExpression	* nextTokPtr = ptr + 2 * MINBPC ( enc )		10799270	0		=			
ANR	10799777	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799778	UnaryOperator	*		10799270	0					
ANR	10799779	Identifier	nextTokPtr		10799270	1					
ANR	10799780	AdditiveExpression	ptr + 2 * MINBPC ( enc )		10799270	1		+			
ANR	10799781	Identifier	ptr		10799270	0					
ANR	10799782	MultiplicativeExpression	2 * MINBPC ( enc )		10799270	1		*			
ANR	10799783	PrimaryExpression	2		10799270	0					
ANR	10799784	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799785	Callee	MINBPC		10799270	0					
ANR	10799786	Identifier	MINBPC		10799270	0					
ANR	10799787	ArgumentList	enc		10799270	1					
ANR	10799788	Argument	enc		10799270	0					
ANR	10799789	Identifier	enc		10799270	0					
ANR	10799790	ReturnStatement	return XML_TOK_COND_SECT_CLOSE ;	1078:8:28467:28497	10799270	1	True				
ANR	10799791	Identifier	XML_TOK_COND_SECT_CLOSE		10799270	0					
ANR	10799792	ExpressionStatement	* nextTokPtr = ptr	1081:4:28517:28534	10799270	25	True				
ANR	10799793	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10799794	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799795	UnaryOperator	*		10799270	0					
ANR	10799796	Identifier	nextTokPtr		10799270	1					
ANR	10799797	Identifier	ptr		10799270	1					
ANR	10799798	ReturnStatement	return XML_TOK_CLOSE_BRACKET ;	1082:4:28540:28568	10799270	26	True				
ANR	10799799	Identifier	XML_TOK_CLOSE_BRACKET		10799270	0					
ANR	10799800	Label	case BT_LPAR :	1083:2:28572:28584	10799270	27	True				
ANR	10799801	Identifier	BT_LPAR		10799270	0					
ANR	10799802	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1084:4:28590:28621	10799270	28	True				
ANR	10799803	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799804	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799805	UnaryOperator	*		10799270	0					
ANR	10799806	Identifier	nextTokPtr		10799270	1					
ANR	10799807	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799808	Identifier	ptr		10799270	0					
ANR	10799809	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799810	Callee	MINBPC		10799270	0					
ANR	10799811	Identifier	MINBPC		10799270	0					
ANR	10799812	ArgumentList	enc		10799270	1					
ANR	10799813	Argument	enc		10799270	0					
ANR	10799814	Identifier	enc		10799270	0					
ANR	10799815	ReturnStatement	return XML_TOK_OPEN_PAREN ;	1085:4:28627:28652	10799270	29	True				
ANR	10799816	Identifier	XML_TOK_OPEN_PAREN		10799270	0					
ANR	10799817	Label	case BT_RPAR :	1086:2:28656:28668	10799270	30	True				
ANR	10799818	Identifier	BT_RPAR		10799270	0					
ANR	10799819	ExpressionStatement	ptr += MINBPC ( enc )	1087:4:28674:28692	10799270	31	True				
ANR	10799820	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10799821	Identifier	ptr		10799270	0					
ANR	10799822	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799823	Callee	MINBPC		10799270	0					
ANR	10799824	Identifier	MINBPC		10799270	0					
ANR	10799825	ArgumentList	enc		10799270	1					
ANR	10799826	Argument	enc		10799270	0					
ANR	10799827	Identifier	enc		10799270	0					
ANR	10799828	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10799270	32					
ANR	10799829	Condition	"! HAS_CHAR ( enc , ptr , end )"	1088:8:28702:28726	10799270	0	True				
ANR	10799830	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10799270	0					
ANR	10799831	UnaryOperator	!		10799270	0					
ANR	10799832	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10799270	1					
ANR	10799833	Callee	HAS_CHAR		10799270	0					
ANR	10799834	Identifier	HAS_CHAR		10799270	0					
ANR	10799835	ArgumentList	enc		10799270	1					
ANR	10799836	Argument	enc		10799270	0					
ANR	10799837	Identifier	enc		10799270	0					
ANR	10799838	Argument	ptr		10799270	1					
ANR	10799839	Identifier	ptr		10799270	0					
ANR	10799840	Argument	end		10799270	2					
ANR	10799841	Identifier	end		10799270	0					
ANR	10799842	ReturnStatement	return - XML_TOK_CLOSE_PAREN ;	1089:6:28735:28762	10799270	1	True				
ANR	10799843	UnaryOperationExpression	- XML_TOK_CLOSE_PAREN		10799270	0					
ANR	10799844	UnaryOperator	-		10799270	0					
ANR	10799845	Identifier	XML_TOK_CLOSE_PAREN		10799270	1					
ANR	10799846	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10799270	33					
ANR	10799847	Condition	"BYTE_TYPE ( enc , ptr )"	1090:12:28776:28794	10799270	0	True				
ANR	10799848	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799270	0					
ANR	10799849	Callee	BYTE_TYPE		10799270	0					
ANR	10799850	Identifier	BYTE_TYPE		10799270	0					
ANR	10799851	ArgumentList	enc		10799270	1					
ANR	10799852	Argument	enc		10799270	0					
ANR	10799853	Identifier	enc		10799270	0					
ANR	10799854	Argument	ptr		10799270	1					
ANR	10799855	Identifier	ptr		10799270	0					
ANR	10799856	CompoundStatement		95:33:2623:2623	10799270	1					
ANR	10799857	Label	case BT_AST :	1091:4:28803:28814	10799270	0	True				
ANR	10799858	Identifier	BT_AST		10799270	0					
ANR	10799859	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1092:6:28822:28853	10799270	1	True				
ANR	10799860	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799861	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799862	UnaryOperator	*		10799270	0					
ANR	10799863	Identifier	nextTokPtr		10799270	1					
ANR	10799864	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799865	Identifier	ptr		10799270	0					
ANR	10799866	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799867	Callee	MINBPC		10799270	0					
ANR	10799868	Identifier	MINBPC		10799270	0					
ANR	10799869	ArgumentList	enc		10799270	1					
ANR	10799870	Argument	enc		10799270	0					
ANR	10799871	Identifier	enc		10799270	0					
ANR	10799872	ReturnStatement	return XML_TOK_CLOSE_PAREN_ASTERISK ;	1093:6:28861:28896	10799270	2	True				
ANR	10799873	Identifier	XML_TOK_CLOSE_PAREN_ASTERISK		10799270	0					
ANR	10799874	Label	case BT_QUEST :	1094:4:28902:28915	10799270	3	True				
ANR	10799875	Identifier	BT_QUEST		10799270	0					
ANR	10799876	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1095:6:28923:28954	10799270	4	True				
ANR	10799877	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799878	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799879	UnaryOperator	*		10799270	0					
ANR	10799880	Identifier	nextTokPtr		10799270	1					
ANR	10799881	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799882	Identifier	ptr		10799270	0					
ANR	10799883	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799884	Callee	MINBPC		10799270	0					
ANR	10799885	Identifier	MINBPC		10799270	0					
ANR	10799886	ArgumentList	enc		10799270	1					
ANR	10799887	Argument	enc		10799270	0					
ANR	10799888	Identifier	enc		10799270	0					
ANR	10799889	ReturnStatement	return XML_TOK_CLOSE_PAREN_QUESTION ;	1096:6:28962:28997	10799270	5	True				
ANR	10799890	Identifier	XML_TOK_CLOSE_PAREN_QUESTION		10799270	0					
ANR	10799891	Label	case BT_PLUS :	1097:4:29003:29015	10799270	6	True				
ANR	10799892	Identifier	BT_PLUS		10799270	0					
ANR	10799893	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1098:6:29023:29054	10799270	7	True				
ANR	10799894	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799895	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799896	UnaryOperator	*		10799270	0					
ANR	10799897	Identifier	nextTokPtr		10799270	1					
ANR	10799898	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799899	Identifier	ptr		10799270	0					
ANR	10799900	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799901	Callee	MINBPC		10799270	0					
ANR	10799902	Identifier	MINBPC		10799270	0					
ANR	10799903	ArgumentList	enc		10799270	1					
ANR	10799904	Argument	enc		10799270	0					
ANR	10799905	Identifier	enc		10799270	0					
ANR	10799906	ReturnStatement	return XML_TOK_CLOSE_PAREN_PLUS ;	1099:6:29062:29093	10799270	8	True				
ANR	10799907	Identifier	XML_TOK_CLOSE_PAREN_PLUS		10799270	0					
ANR	10799908	Label	case BT_CR :	1100:4:29099:29109	10799270	9	True				
ANR	10799909	Identifier	BT_CR		10799270	0					
ANR	10799910	Label	case BT_LF :	1100:16:29111:29121	10799270	10	True				
ANR	10799911	Identifier	BT_LF		10799270	0					
ANR	10799912	Label	case BT_S :	1100:28:29123:29132	10799270	11	True				
ANR	10799913	Identifier	BT_S		10799270	0					
ANR	10799914	Label	case BT_GT :	1101:4:29138:29148	10799270	12	True				
ANR	10799915	Identifier	BT_GT		10799270	0					
ANR	10799916	Label	case BT_COMMA :	1101:16:29150:29163	10799270	13	True				
ANR	10799917	Identifier	BT_COMMA		10799270	0					
ANR	10799918	Label	case BT_VERBAR :	1101:31:29165:29179	10799270	14	True				
ANR	10799919	Identifier	BT_VERBAR		10799270	0					
ANR	10799920	Label	case BT_RPAR :	1102:4:29185:29197	10799270	15	True				
ANR	10799921	Identifier	BT_RPAR		10799270	0					
ANR	10799922	ExpressionStatement	* nextTokPtr = ptr	1103:6:29205:29222	10799270	16	True				
ANR	10799923	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10799924	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799925	UnaryOperator	*		10799270	0					
ANR	10799926	Identifier	nextTokPtr		10799270	1					
ANR	10799927	Identifier	ptr		10799270	1					
ANR	10799928	ReturnStatement	return XML_TOK_CLOSE_PAREN ;	1104:6:29230:29256	10799270	17	True				
ANR	10799929	Identifier	XML_TOK_CLOSE_PAREN		10799270	0					
ANR	10799930	ExpressionStatement	* nextTokPtr = ptr	1106:4:29268:29285	10799270	34	True				
ANR	10799931	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10799932	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799933	UnaryOperator	*		10799270	0					
ANR	10799934	Identifier	nextTokPtr		10799270	1					
ANR	10799935	Identifier	ptr		10799270	1					
ANR	10799936	ReturnStatement	return XML_TOK_INVALID ;	1107:4:29291:29313	10799270	35	True				
ANR	10799937	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10799938	Label	case BT_VERBAR :	1108:2:29317:29331	10799270	36	True				
ANR	10799939	Identifier	BT_VERBAR		10799270	0					
ANR	10799940	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1109:4:29337:29368	10799270	37	True				
ANR	10799941	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799942	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799943	UnaryOperator	*		10799270	0					
ANR	10799944	Identifier	nextTokPtr		10799270	1					
ANR	10799945	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799946	Identifier	ptr		10799270	0					
ANR	10799947	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799948	Callee	MINBPC		10799270	0					
ANR	10799949	Identifier	MINBPC		10799270	0					
ANR	10799950	ArgumentList	enc		10799270	1					
ANR	10799951	Argument	enc		10799270	0					
ANR	10799952	Identifier	enc		10799270	0					
ANR	10799953	ReturnStatement	return XML_TOK_OR ;	1110:4:29374:29391	10799270	38	True				
ANR	10799954	Identifier	XML_TOK_OR		10799270	0					
ANR	10799955	Label	case BT_GT :	1111:2:29395:29405	10799270	39	True				
ANR	10799956	Identifier	BT_GT		10799270	0					
ANR	10799957	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1112:4:29411:29442	10799270	40	True				
ANR	10799958	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10799959	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10799960	UnaryOperator	*		10799270	0					
ANR	10799961	Identifier	nextTokPtr		10799270	1					
ANR	10799962	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10799963	Identifier	ptr		10799270	0					
ANR	10799964	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799965	Callee	MINBPC		10799270	0					
ANR	10799966	Identifier	MINBPC		10799270	0					
ANR	10799967	ArgumentList	enc		10799270	1					
ANR	10799968	Argument	enc		10799270	0					
ANR	10799969	Identifier	enc		10799270	0					
ANR	10799970	ReturnStatement	return XML_TOK_DECL_CLOSE ;	1113:4:29448:29473	10799270	41	True				
ANR	10799971	Identifier	XML_TOK_DECL_CLOSE		10799270	0					
ANR	10799972	Label	case BT_NUM :	1114:2:29477:29488	10799270	42	True				
ANR	10799973	Identifier	BT_NUM		10799270	0					
ANR	10799974	ReturnStatement	"return PREFIX ( scanPoundName ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1115:4:29494:29563	10799270	43	True				
ANR	10799975	CallExpression	"PREFIX ( scanPoundName ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10799270	0					
ANR	10799976	Callee	PREFIX ( scanPoundName )		10799270	0					
ANR	10799977	CallExpression	PREFIX ( scanPoundName )		10799270	0					
ANR	10799978	Callee	PREFIX		10799270	0					
ANR	10799979	Identifier	PREFIX		10799270	0					
ANR	10799980	ArgumentList	scanPoundName		10799270	1					
ANR	10799981	Argument	scanPoundName		10799270	0					
ANR	10799982	Identifier	scanPoundName		10799270	0					
ANR	10799983	ArgumentList	enc		10799270	1					
ANR	10799984	Argument	enc		10799270	0					
ANR	10799985	Identifier	enc		10799270	0					
ANR	10799986	Argument	ptr + MINBPC ( enc )		10799270	1					
ANR	10799987	AdditiveExpression	ptr + MINBPC ( enc )		10799270	0		+			
ANR	10799988	Identifier	ptr		10799270	0					
ANR	10799989	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10799990	Callee	MINBPC		10799270	0					
ANR	10799991	Identifier	MINBPC		10799270	0					
ANR	10799992	ArgumentList	enc		10799270	1					
ANR	10799993	Argument	enc		10799270	0					
ANR	10799994	Identifier	enc		10799270	0					
ANR	10799995	Argument	end		10799270	2					
ANR	10799996	Identifier	end		10799270	0					
ANR	10799997	Argument	nextTokPtr		10799270	3					
ANR	10799998	Identifier	nextTokPtr		10799270	0					
ANR	10799999	Statement	define	1116:1:29566:29571	10799270	44	True				
ANR	10800000	Statement	LEAD_CASE	1116:8:29573:29581	10799270	45	True				
ANR	10800001	Statement	(	1116:17:29582:29582	10799270	46	True				
ANR	10800002	Statement	n	1116:18:29583:29583	10799270	47	True				
ANR	10800003	Statement	)	1116:19:29584:29584	10799270	48	True				
ANR	10800004	Statement	case	1117:2:29590:29593	10799270	49	True				
ANR	10800005	Statement	BT_LEAD	1117:7:29595:29601	10799270	50	True				
ANR	10800006	Label	n :	1117:18:29606:29607	10799270	51	True				
ANR	10800007	Identifier	n		10799270	0					
ANR	10800008	IfStatement	if ( end - ptr < n )		10799270	52					
ANR	10800009	Condition	end - ptr < n	1118:8:29619:29631	10799270	0	True				
ANR	10800010	RelationalExpression	end - ptr < n		10799270	0		<			
ANR	10800011	AdditiveExpression	end - ptr		10799270	0		-			
ANR	10800012	Identifier	end		10799270	0					
ANR	10800013	Identifier	ptr		10799270	1					
ANR	10800014	Identifier	n		10799270	1					
ANR	10800015	ReturnStatement	return XML_TOK_PARTIAL_CHAR ;	1119:6:29642:29669	10799270	1	True				
ANR	10800016	Identifier	XML_TOK_PARTIAL_CHAR		10799270	0					
ANR	10800017	IfStatement	"if ( IS_NMSTRT_CHAR ( enc , ptr , n ) )"		10799270	53					
ANR	10800018	Condition	"IS_NMSTRT_CHAR ( enc , ptr , n )"	1120:8:29681:29707	10799270	0	True				
ANR	10800019	CallExpression	"IS_NMSTRT_CHAR ( enc , ptr , n )"		10799270	0					
ANR	10800020	Callee	IS_NMSTRT_CHAR		10799270	0					
ANR	10800021	Identifier	IS_NMSTRT_CHAR		10799270	0					
ANR	10800022	ArgumentList	enc		10799270	1					
ANR	10800023	Argument	enc		10799270	0					
ANR	10800024	Identifier	enc		10799270	0					
ANR	10800025	Argument	ptr		10799270	1					
ANR	10800026	Identifier	ptr		10799270	0					
ANR	10800027	Argument	n		10799270	2					
ANR	10800028	Identifier	n		10799270	0					
ANR	10800029	CompoundStatement		125:37:3536:3536	10799270	1					
ANR	10800030	ExpressionStatement	ptr += n	1121:6:29720:29728	10799270	0	True				
ANR	10800031	AssignmentExpression	ptr += n		10799270	0		+=			
ANR	10800032	Identifier	ptr		10799270	0					
ANR	10800033	Identifier	n		10799270	1					
ANR	10800034	ExpressionStatement	tok = XML_TOK_NAME	1122:6:29738:29756	10799270	1	True				
ANR	10800035	AssignmentExpression	tok = XML_TOK_NAME		10799270	0		=			
ANR	10800036	Identifier	tok		10799270	0					
ANR	10800037	Identifier	XML_TOK_NAME		10799270	1					
ANR	10800038	BreakStatement	break ;	1123:6:29766:29771	10799270	2	True				
ANR	10800039	IfStatement	"if ( IS_NAME_CHAR ( enc , ptr , n ) )"		10799270	54					
ANR	10800040	Condition	"IS_NAME_CHAR ( enc , ptr , n )"	1125:8:29791:29815	10799270	0	True				
ANR	10800041	CallExpression	"IS_NAME_CHAR ( enc , ptr , n )"		10799270	0					
ANR	10800042	Callee	IS_NAME_CHAR		10799270	0					
ANR	10800043	Identifier	IS_NAME_CHAR		10799270	0					
ANR	10800044	ArgumentList	enc		10799270	1					
ANR	10800045	Argument	enc		10799270	0					
ANR	10800046	Identifier	enc		10799270	0					
ANR	10800047	Argument	ptr		10799270	1					
ANR	10800048	Identifier	ptr		10799270	0					
ANR	10800049	Argument	n		10799270	2					
ANR	10800050	Identifier	n		10799270	0					
ANR	10800051	CompoundStatement		130:35:3644:3644	10799270	1					
ANR	10800052	ExpressionStatement	ptr += n	1126:6:29828:29836	10799270	0	True				
ANR	10800053	AssignmentExpression	ptr += n		10799270	0		+=			
ANR	10800054	Identifier	ptr		10799270	0					
ANR	10800055	Identifier	n		10799270	1					
ANR	10800056	ExpressionStatement	tok = XML_TOK_NMTOKEN	1127:6:29846:29867	10799270	1	True				
ANR	10800057	AssignmentExpression	tok = XML_TOK_NMTOKEN		10799270	0		=			
ANR	10800058	Identifier	tok		10799270	0					
ANR	10800059	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800060	BreakStatement	break ;	1128:6:29877:29882	10799270	2	True				
ANR	10800061	ExpressionStatement	* nextTokPtr = ptr	1130:4:29898:29915	10799270	55	True				
ANR	10800062	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10800063	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800064	UnaryOperator	*		10799270	0					
ANR	10800065	Identifier	nextTokPtr		10799270	1					
ANR	10800066	Identifier	ptr		10799270	1					
ANR	10800067	ReturnStatement	return XML_TOK_INVALID ;	1131:4:29923:29945	10799270	56	True				
ANR	10800068	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10800069	Statement	LEAD_CASE	1132:4:29951:29959	10799270	57	True				
ANR	10800070	Statement	(	1132:13:29960:29960	10799270	58	True				
ANR	10800071	Statement	2	1132:14:29961:29961	10799270	59	True				
ANR	10800072	Statement	)	1132:15:29962:29962	10799270	60	True				
ANR	10800073	Statement	LEAD_CASE	1132:17:29964:29972	10799270	61	True				
ANR	10800074	Statement	(	1132:26:29973:29973	10799270	62	True				
ANR	10800075	Statement	3	1132:27:29974:29974	10799270	63	True				
ANR	10800076	Statement	)	1132:28:29975:29975	10799270	64	True				
ANR	10800077	Statement	LEAD_CASE	1132:30:29977:29985	10799270	65	True				
ANR	10800078	Statement	(	1132:39:29986:29986	10799270	66	True				
ANR	10800079	Statement	4	1132:40:29987:29987	10799270	67	True				
ANR	10800080	Statement	)	1132:41:29988:29988	10799270	68	True				
ANR	10800081	Statement	undef	1133:1:29991:29995	10799270	69	True				
ANR	10800082	Statement	LEAD_CASE	1133:7:29997:30005	10799270	70	True				
ANR	10800083	Label	case BT_NMSTRT :	1134:2:30009:30023	10799270	71	True				
ANR	10800084	Identifier	BT_NMSTRT		10799270	0					
ANR	10800085	Label	case BT_HEX :	1135:2:30027:30038	10799270	72	True				
ANR	10800086	Identifier	BT_HEX		10799270	0					
ANR	10800087	ExpressionStatement	tok = XML_TOK_NAME	1136:4:30044:30062	10799270	73	True				
ANR	10800088	AssignmentExpression	tok = XML_TOK_NAME		10799270	0		=			
ANR	10800089	Identifier	tok		10799270	0					
ANR	10800090	Identifier	XML_TOK_NAME		10799270	1					
ANR	10800091	ExpressionStatement	ptr += MINBPC ( enc )	1137:4:30068:30086	10799270	74	True				
ANR	10800092	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10800093	Identifier	ptr		10799270	0					
ANR	10800094	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800095	Callee	MINBPC		10799270	0					
ANR	10800096	Identifier	MINBPC		10799270	0					
ANR	10800097	ArgumentList	enc		10799270	1					
ANR	10800098	Argument	enc		10799270	0					
ANR	10800099	Identifier	enc		10799270	0					
ANR	10800100	BreakStatement	break ;	1138:4:30092:30097	10799270	75	True				
ANR	10800101	Label	case BT_DIGIT :	1139:2:30101:30114	10799270	76	True				
ANR	10800102	Identifier	BT_DIGIT		10799270	0					
ANR	10800103	Label	case BT_NAME :	1140:2:30118:30130	10799270	77	True				
ANR	10800104	Identifier	BT_NAME		10799270	0					
ANR	10800105	Label	case BT_MINUS :	1141:2:30134:30147	10799270	78	True				
ANR	10800106	Identifier	BT_MINUS		10799270	0					
ANR	10800107	Label	case BT_COLON :	1143:2:30165:30178	10799270	79	True				
ANR	10800108	Identifier	BT_COLON		10799270	0					
ANR	10800109	ExpressionStatement	tok = XML_TOK_NMTOKEN	1145:4:30191:30212	10799270	80	True				
ANR	10800110	AssignmentExpression	tok = XML_TOK_NMTOKEN		10799270	0		=			
ANR	10800111	Identifier	tok		10799270	0					
ANR	10800112	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800113	ExpressionStatement	ptr += MINBPC ( enc )	1146:4:30218:30236	10799270	81	True				
ANR	10800114	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10800115	Identifier	ptr		10799270	0					
ANR	10800116	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800117	Callee	MINBPC		10799270	0					
ANR	10800118	Identifier	MINBPC		10799270	0					
ANR	10800119	ArgumentList	enc		10799270	1					
ANR	10800120	Argument	enc		10799270	0					
ANR	10800121	Identifier	enc		10799270	0					
ANR	10800122	BreakStatement	break ;	1147:4:30242:30247	10799270	82	True				
ANR	10800123	Label	case BT_NONASCII :	1148:2:30251:30267	10799270	83	True				
ANR	10800124	Identifier	BT_NONASCII		10799270	0					
ANR	10800125	IfStatement	"if ( IS_NMSTRT_CHAR_MINBPC ( enc , ptr ) )"		10799270	84					
ANR	10800126	Condition	"IS_NMSTRT_CHAR_MINBPC ( enc , ptr )"	1149:8:30277:30307	10799270	0	True				
ANR	10800127	CallExpression	"IS_NMSTRT_CHAR_MINBPC ( enc , ptr )"		10799270	0					
ANR	10800128	Callee	IS_NMSTRT_CHAR_MINBPC		10799270	0					
ANR	10800129	Identifier	IS_NMSTRT_CHAR_MINBPC		10799270	0					
ANR	10800130	ArgumentList	enc		10799270	1					
ANR	10800131	Argument	enc		10799270	0					
ANR	10800132	Identifier	enc		10799270	0					
ANR	10800133	Argument	ptr		10799270	1					
ANR	10800134	Identifier	ptr		10799270	0					
ANR	10800135	CompoundStatement		154:41:4136:4136	10799270	1					
ANR	10800136	ExpressionStatement	ptr += MINBPC ( enc )	1150:6:30318:30336	10799270	0	True				
ANR	10800137	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10800138	Identifier	ptr		10799270	0					
ANR	10800139	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800140	Callee	MINBPC		10799270	0					
ANR	10800141	Identifier	MINBPC		10799270	0					
ANR	10800142	ArgumentList	enc		10799270	1					
ANR	10800143	Argument	enc		10799270	0					
ANR	10800144	Identifier	enc		10799270	0					
ANR	10800145	ExpressionStatement	tok = XML_TOK_NAME	1151:6:30344:30362	10799270	1	True				
ANR	10800146	AssignmentExpression	tok = XML_TOK_NAME		10799270	0		=			
ANR	10800147	Identifier	tok		10799270	0					
ANR	10800148	Identifier	XML_TOK_NAME		10799270	1					
ANR	10800149	BreakStatement	break ;	1152:6:30370:30375	10799270	2	True				
ANR	10800150	IfStatement	"if ( IS_NAME_CHAR_MINBPC ( enc , ptr ) )"		10799270	85					
ANR	10800151	Condition	"IS_NAME_CHAR_MINBPC ( enc , ptr )"	1154:8:30391:30419	10799270	0	True				
ANR	10800152	CallExpression	"IS_NAME_CHAR_MINBPC ( enc , ptr )"		10799270	0					
ANR	10800153	Callee	IS_NAME_CHAR_MINBPC		10799270	0					
ANR	10800154	Identifier	IS_NAME_CHAR_MINBPC		10799270	0					
ANR	10800155	ArgumentList	enc		10799270	1					
ANR	10800156	Argument	enc		10799270	0					
ANR	10800157	Identifier	enc		10799270	0					
ANR	10800158	Argument	ptr		10799270	1					
ANR	10800159	Identifier	ptr		10799270	0					
ANR	10800160	CompoundStatement		159:39:4248:4248	10799270	1					
ANR	10800161	ExpressionStatement	ptr += MINBPC ( enc )	1155:6:30430:30448	10799270	0	True				
ANR	10800162	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10800163	Identifier	ptr		10799270	0					
ANR	10800164	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800165	Callee	MINBPC		10799270	0					
ANR	10800166	Identifier	MINBPC		10799270	0					
ANR	10800167	ArgumentList	enc		10799270	1					
ANR	10800168	Argument	enc		10799270	0					
ANR	10800169	Identifier	enc		10799270	0					
ANR	10800170	ExpressionStatement	tok = XML_TOK_NMTOKEN	1156:6:30456:30477	10799270	1	True				
ANR	10800171	AssignmentExpression	tok = XML_TOK_NMTOKEN		10799270	0		=			
ANR	10800172	Identifier	tok		10799270	0					
ANR	10800173	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800174	BreakStatement	break ;	1157:6:30485:30490	10799270	2	True				
ANR	10800175	Label	default :	1160:2:30523:30530	10799270	86	True				
ANR	10800176	Identifier	default		10799270	0					
ANR	10800177	ExpressionStatement	* nextTokPtr = ptr	1161:4:30536:30553	10799270	87	True				
ANR	10800178	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10800179	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800180	UnaryOperator	*		10799270	0					
ANR	10800181	Identifier	nextTokPtr		10799270	1					
ANR	10800182	Identifier	ptr		10799270	1					
ANR	10800183	ReturnStatement	return XML_TOK_INVALID ;	1162:4:30559:30581	10799270	88	True				
ANR	10800184	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10800185	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10799270	4					
ANR	10800186	Condition	"HAS_CHAR ( enc , ptr , end )"	1164:9:30596:30618	10799270	0	True				
ANR	10800187	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10799270	0					
ANR	10800188	Callee	HAS_CHAR		10799270	0					
ANR	10800189	Identifier	HAS_CHAR		10799270	0					
ANR	10800190	ArgumentList	enc		10799270	1					
ANR	10800191	Argument	enc		10799270	0					
ANR	10800192	Identifier	enc		10799270	0					
ANR	10800193	Argument	ptr		10799270	1					
ANR	10800194	Identifier	ptr		10799270	0					
ANR	10800195	Argument	end		10799270	2					
ANR	10800196	Identifier	end		10799270	0					
ANR	10800197	CompoundStatement		169:34:4447:4447	10799270	1					
ANR	10800198	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10799270	0					
ANR	10800199	Condition	"BYTE_TYPE ( enc , ptr )"	1165:12:30635:30653	10799270	0	True				
ANR	10800200	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799270	0					
ANR	10800201	Callee	BYTE_TYPE		10799270	0					
ANR	10800202	Identifier	BYTE_TYPE		10799270	0					
ANR	10800203	ArgumentList	enc		10799270	1					
ANR	10800204	Argument	enc		10799270	0					
ANR	10800205	Identifier	enc		10799270	0					
ANR	10800206	Argument	ptr		10799270	1					
ANR	10800207	Identifier	ptr		10799270	0					
ANR	10800208	CompoundStatement		170:33:4482:4482	10799270	1					
ANR	10800209	Statement	CHECK_NAME_CASES	1166:4:30662:30677	10799270	0	True				
ANR	10800210	Statement	(	1166:20:30678:30678	10799270	1	True				
ANR	10800211	Statement	enc	1166:21:30679:30681	10799270	2	True				
ANR	10800212	Statement	","	1166:24:30682:30682	10799270	3	True				
ANR	10800213	Statement	ptr	1166:26:30684:30686	10799270	4	True				
ANR	10800214	Statement	","	1166:29:30687:30687	10799270	5	True				
ANR	10800215	Statement	end	1166:31:30689:30691	10799270	6	True				
ANR	10800216	Statement	","	1166:34:30692:30692	10799270	7	True				
ANR	10800217	Statement	nextTokPtr	1166:36:30694:30703	10799270	8	True				
ANR	10800218	Statement	)	1166:46:30704:30704	10799270	9	True				
ANR	10800219	Label	case BT_GT :	1167:4:30710:30720	10799270	10	True				
ANR	10800220	Identifier	BT_GT		10799270	0					
ANR	10800221	Label	case BT_RPAR :	1167:16:30722:30734	10799270	11	True				
ANR	10800222	Identifier	BT_RPAR		10799270	0					
ANR	10800223	Label	case BT_COMMA :	1167:30:30736:30749	10799270	12	True				
ANR	10800224	Identifier	BT_COMMA		10799270	0					
ANR	10800225	Label	case BT_VERBAR :	1168:4:30755:30769	10799270	13	True				
ANR	10800226	Identifier	BT_VERBAR		10799270	0					
ANR	10800227	Label	case BT_LSQB :	1168:20:30771:30783	10799270	14	True				
ANR	10800228	Identifier	BT_LSQB		10799270	0					
ANR	10800229	Label	case BT_PERCNT :	1168:34:30785:30799	10799270	15	True				
ANR	10800230	Identifier	BT_PERCNT		10799270	0					
ANR	10800231	Label	case BT_S :	1169:4:30805:30814	10799270	16	True				
ANR	10800232	Identifier	BT_S		10799270	0					
ANR	10800233	Label	case BT_CR :	1169:15:30816:30826	10799270	17	True				
ANR	10800234	Identifier	BT_CR		10799270	0					
ANR	10800235	Label	case BT_LF :	1169:27:30828:30838	10799270	18	True				
ANR	10800236	Identifier	BT_LF		10799270	0					
ANR	10800237	ExpressionStatement	* nextTokPtr = ptr	1170:6:30846:30863	10799270	19	True				
ANR	10800238	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10800239	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800240	UnaryOperator	*		10799270	0					
ANR	10800241	Identifier	nextTokPtr		10799270	1					
ANR	10800242	Identifier	ptr		10799270	1					
ANR	10800243	ReturnStatement	return tok ;	1171:6:30871:30881	10799270	20	True				
ANR	10800244	Identifier	tok		10799270	0					
ANR	10800245	Label	case BT_COLON :	1173:4:30901:30914	10799270	21	True				
ANR	10800246	Identifier	BT_COLON		10799270	0					
ANR	10800247	ExpressionStatement	ptr += MINBPC ( enc )	1174:6:30922:30940	10799270	22	True				
ANR	10800248	AssignmentExpression	ptr += MINBPC ( enc )		10799270	0		+=			
ANR	10800249	Identifier	ptr		10799270	0					
ANR	10800250	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800251	Callee	MINBPC		10799270	0					
ANR	10800252	Identifier	MINBPC		10799270	0					
ANR	10800253	ArgumentList	enc		10799270	1					
ANR	10800254	Argument	enc		10799270	0					
ANR	10800255	Identifier	enc		10799270	0					
ANR	10800256	SwitchStatement	switch ( tok )		10799270	23					
ANR	10800257	Condition	tok	1175:14:30956:30958	10799270	0	True				
ANR	10800258	Identifier	tok		10799270	0					
ANR	10800259	CompoundStatement		180:19:4787:4787	10799270	1					
ANR	10800260	Label	case XML_TOK_NAME :	1176:6:30969:30986	10799270	0	True				
ANR	10800261	Identifier	XML_TOK_NAME		10799270	0					
ANR	10800262	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1177:8:30996:31023	10799270	1	True				
ANR	10800263	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10799270	0					
ANR	10800264	Callee	REQUIRE_CHAR		10799270	0					
ANR	10800265	Identifier	REQUIRE_CHAR		10799270	0					
ANR	10800266	ArgumentList	enc		10799270	1					
ANR	10800267	Argument	enc		10799270	0					
ANR	10800268	Identifier	enc		10799270	0					
ANR	10800269	Argument	ptr		10799270	1					
ANR	10800270	Identifier	ptr		10799270	0					
ANR	10800271	Argument	end		10799270	2					
ANR	10800272	Identifier	end		10799270	0					
ANR	10800273	ExpressionStatement	tok = XML_TOK_PREFIXED_NAME	1178:8:31033:31060	10799270	2	True				
ANR	10800274	AssignmentExpression	tok = XML_TOK_PREFIXED_NAME		10799270	0		=			
ANR	10800275	Identifier	tok		10799270	0					
ANR	10800276	Identifier	XML_TOK_PREFIXED_NAME		10799270	1					
ANR	10800277	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10799270	3					
ANR	10800278	Condition	"BYTE_TYPE ( enc , ptr )"	1179:16:31078:31096	10799270	0	True				
ANR	10800279	CallExpression	"BYTE_TYPE ( enc , ptr )"		10799270	0					
ANR	10800280	Callee	BYTE_TYPE		10799270	0					
ANR	10800281	Identifier	BYTE_TYPE		10799270	0					
ANR	10800282	ArgumentList	enc		10799270	1					
ANR	10800283	Argument	enc		10799270	0					
ANR	10800284	Identifier	enc		10799270	0					
ANR	10800285	Argument	ptr		10799270	1					
ANR	10800286	Identifier	ptr		10799270	0					
ANR	10800287	CompoundStatement		184:37:4925:4925	10799270	1					
ANR	10800288	Statement	CHECK_NAME_CASES	1180:8:31109:31124	10799270	0	True				
ANR	10800289	Statement	(	1180:24:31125:31125	10799270	1	True				
ANR	10800290	Statement	enc	1180:25:31126:31128	10799270	2	True				
ANR	10800291	Statement	","	1180:28:31129:31129	10799270	3	True				
ANR	10800292	Statement	ptr	1180:30:31131:31133	10799270	4	True				
ANR	10800293	Statement	","	1180:33:31134:31134	10799270	5	True				
ANR	10800294	Statement	end	1180:35:31136:31138	10799270	6	True				
ANR	10800295	Statement	","	1180:38:31139:31139	10799270	7	True				
ANR	10800296	Statement	nextTokPtr	1180:40:31141:31150	10799270	8	True				
ANR	10800297	Statement	)	1180:50:31151:31151	10799270	9	True				
ANR	10800298	Label	default :	1181:8:31161:31168	10799270	10	True				
ANR	10800299	Identifier	default		10799270	0					
ANR	10800300	ExpressionStatement	tok = XML_TOK_NMTOKEN	1182:10:31180:31201	10799270	11	True				
ANR	10800301	AssignmentExpression	tok = XML_TOK_NMTOKEN		10799270	0		=			
ANR	10800302	Identifier	tok		10799270	0					
ANR	10800303	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800304	BreakStatement	break ;	1183:10:31213:31218	10799270	12	True				
ANR	10800305	BreakStatement	break ;	1185:8:31238:31243	10799270	4	True				
ANR	10800306	Label	case XML_TOK_PREFIXED_NAME :	1186:6:31251:31277	10799270	5	True				
ANR	10800307	Identifier	XML_TOK_PREFIXED_NAME		10799270	0					
ANR	10800308	ExpressionStatement	tok = XML_TOK_NMTOKEN	1187:8:31287:31308	10799270	6	True				
ANR	10800309	AssignmentExpression	tok = XML_TOK_NMTOKEN		10799270	0		=			
ANR	10800310	Identifier	tok		10799270	0					
ANR	10800311	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800312	BreakStatement	break ;	1188:8:31318:31323	10799270	7	True				
ANR	10800313	BreakStatement	break ;	1190:6:31339:31344	10799270	24	True				
ANR	10800314	Label	case BT_PLUS :	1192:4:31357:31369	10799270	25	True				
ANR	10800315	Identifier	BT_PLUS		10799270	0					
ANR	10800316	IfStatement	if ( tok == XML_TOK_NMTOKEN )		10799270	26					
ANR	10800317	Condition	tok == XML_TOK_NMTOKEN	1193:10:31381:31402	10799270	0	True				
ANR	10800318	EqualityExpression	tok == XML_TOK_NMTOKEN		10799270	0		==			
ANR	10800319	Identifier	tok		10799270	0					
ANR	10800320	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800321	CompoundStatement		198:35:5232:5232	10799270	1					
ANR	10800322	ExpressionStatement	* nextTokPtr = ptr	1194:8:31416:31433	10799270	0	True				
ANR	10800323	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10800324	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800325	UnaryOperator	*		10799270	0					
ANR	10800326	Identifier	nextTokPtr		10799270	1					
ANR	10800327	Identifier	ptr		10799270	1					
ANR	10800328	ReturnStatement	return XML_TOK_INVALID ;	1195:8:31443:31465	10799270	1	True				
ANR	10800329	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10800330	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1197:6:31481:31512	10799270	27	True				
ANR	10800331	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10800332	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800333	UnaryOperator	*		10799270	0					
ANR	10800334	Identifier	nextTokPtr		10799270	1					
ANR	10800335	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10800336	Identifier	ptr		10799270	0					
ANR	10800337	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800338	Callee	MINBPC		10799270	0					
ANR	10800339	Identifier	MINBPC		10799270	0					
ANR	10800340	ArgumentList	enc		10799270	1					
ANR	10800341	Argument	enc		10799270	0					
ANR	10800342	Identifier	enc		10799270	0					
ANR	10800343	ReturnStatement	return XML_TOK_NAME_PLUS ;	1198:6:31520:31544	10799270	28	True				
ANR	10800344	Identifier	XML_TOK_NAME_PLUS		10799270	0					
ANR	10800345	Label	case BT_AST :	1199:4:31550:31561	10799270	29	True				
ANR	10800346	Identifier	BT_AST		10799270	0					
ANR	10800347	IfStatement	if ( tok == XML_TOK_NMTOKEN )		10799270	30					
ANR	10800348	Condition	tok == XML_TOK_NMTOKEN	1200:10:31573:31594	10799270	0	True				
ANR	10800349	EqualityExpression	tok == XML_TOK_NMTOKEN		10799270	0		==			
ANR	10800350	Identifier	tok		10799270	0					
ANR	10800351	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800352	CompoundStatement		205:35:5424:5424	10799270	1					
ANR	10800353	ExpressionStatement	* nextTokPtr = ptr	1201:8:31608:31625	10799270	0	True				
ANR	10800354	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10800355	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800356	UnaryOperator	*		10799270	0					
ANR	10800357	Identifier	nextTokPtr		10799270	1					
ANR	10800358	Identifier	ptr		10799270	1					
ANR	10800359	ReturnStatement	return XML_TOK_INVALID ;	1202:8:31635:31657	10799270	1	True				
ANR	10800360	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10800361	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1204:6:31673:31704	10799270	31	True				
ANR	10800362	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10800363	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800364	UnaryOperator	*		10799270	0					
ANR	10800365	Identifier	nextTokPtr		10799270	1					
ANR	10800366	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10800367	Identifier	ptr		10799270	0					
ANR	10800368	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800369	Callee	MINBPC		10799270	0					
ANR	10800370	Identifier	MINBPC		10799270	0					
ANR	10800371	ArgumentList	enc		10799270	1					
ANR	10800372	Argument	enc		10799270	0					
ANR	10800373	Identifier	enc		10799270	0					
ANR	10800374	ReturnStatement	return XML_TOK_NAME_ASTERISK ;	1205:6:31712:31740	10799270	32	True				
ANR	10800375	Identifier	XML_TOK_NAME_ASTERISK		10799270	0					
ANR	10800376	Label	case BT_QUEST :	1206:4:31746:31759	10799270	33	True				
ANR	10800377	Identifier	BT_QUEST		10799270	0					
ANR	10800378	IfStatement	if ( tok == XML_TOK_NMTOKEN )		10799270	34					
ANR	10800379	Condition	tok == XML_TOK_NMTOKEN	1207:10:31771:31792	10799270	0	True				
ANR	10800380	EqualityExpression	tok == XML_TOK_NMTOKEN		10799270	0		==			
ANR	10800381	Identifier	tok		10799270	0					
ANR	10800382	Identifier	XML_TOK_NMTOKEN		10799270	1					
ANR	10800383	CompoundStatement		212:35:5622:5622	10799270	1					
ANR	10800384	ExpressionStatement	* nextTokPtr = ptr	1208:8:31806:31823	10799270	0	True				
ANR	10800385	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10800386	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800387	UnaryOperator	*		10799270	0					
ANR	10800388	Identifier	nextTokPtr		10799270	1					
ANR	10800389	Identifier	ptr		10799270	1					
ANR	10800390	ReturnStatement	return XML_TOK_INVALID ;	1209:8:31833:31855	10799270	1	True				
ANR	10800391	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10800392	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1211:6:31871:31902	10799270	35	True				
ANR	10800393	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10799270	0		=			
ANR	10800394	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800395	UnaryOperator	*		10799270	0					
ANR	10800396	Identifier	nextTokPtr		10799270	1					
ANR	10800397	AdditiveExpression	ptr + MINBPC ( enc )		10799270	1		+			
ANR	10800398	Identifier	ptr		10799270	0					
ANR	10800399	CallExpression	MINBPC ( enc )		10799270	1					
ANR	10800400	Callee	MINBPC		10799270	0					
ANR	10800401	Identifier	MINBPC		10799270	0					
ANR	10800402	ArgumentList	enc		10799270	1					
ANR	10800403	Argument	enc		10799270	0					
ANR	10800404	Identifier	enc		10799270	0					
ANR	10800405	ReturnStatement	return XML_TOK_NAME_QUESTION ;	1212:6:31910:31938	10799270	36	True				
ANR	10800406	Identifier	XML_TOK_NAME_QUESTION		10799270	0					
ANR	10800407	Label	default :	1213:4:31944:31951	10799270	37	True				
ANR	10800408	Identifier	default		10799270	0					
ANR	10800409	ExpressionStatement	* nextTokPtr = ptr	1214:6:31959:31976	10799270	38	True				
ANR	10800410	AssignmentExpression	* nextTokPtr = ptr		10799270	0		=			
ANR	10800411	UnaryOperationExpression	* nextTokPtr		10799270	0					
ANR	10800412	UnaryOperator	*		10799270	0					
ANR	10800413	Identifier	nextTokPtr		10799270	1					
ANR	10800414	Identifier	ptr		10799270	1					
ANR	10800415	ReturnStatement	return XML_TOK_INVALID ;	1215:6:31984:32006	10799270	39	True				
ANR	10800416	Identifier	XML_TOK_INVALID		10799270	0					
ANR	10800417	ReturnStatement	return - tok ;	1218:2:32020:32031	10799270	5	True				
ANR	10800418	UnaryOperationExpression	- tok		10799270	0					
ANR	10800419	UnaryOperator	-		10799270	0					
ANR	10800420	Identifier	tok		10799270	1					
ANR	10800421	ReturnType	static int PTRCALL PREFIX		10799270	1					
ANR	10800422	Identifier	( prologTok )		10799270	2					
ANR	10800423	Identifier	prologTok		10799270	3					
ANR	10800424	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10799270	4					
ANR	10800425	Parameter	const ENCODING * enc	994:18:26075:26093	10799270	0	True				
ANR	10800426	ParameterType	const ENCODING *		10799270	0					
ANR	10800427	Identifier	enc		10799270	1					
ANR	10800428	Parameter	const char * ptr	994:39:26096:26110	10799270	1	True				
ANR	10800429	ParameterType	const char *		10799270	0					
ANR	10800430	Identifier	ptr		10799270	1					
ANR	10800431	Parameter	const char * end	994:56:26113:26127	10799270	2	True				
ANR	10800432	ParameterType	const char *		10799270	0					
ANR	10800433	Identifier	end		10799270	1					
ANR	10800434	Parameter	const char * * nextTokPtr	995:18:26148:26170	10799270	3	True				
ANR	10800435	ParameterType	const char * *		10799270	0					
ANR	10800436	Identifier	nextTokPtr		10799270	1					
ANR	10800437	CFGEntryNode	ENTRY		10799270		True				
ANR	10800438	CFGExitNode	EXIT		10799270		True				
ANR	10800439	InfiniteForNode	true		10799270		True				
ANR	10800440	Symbol	XML_TOK_PARTIAL_CHAR		10799270						
ANR	10800441	Symbol	XML_TOK_PREFIXED_NAME		10799270						
ANR	10800442	Symbol	nextTokPtr		10799270						
ANR	10800443	Symbol	BT_QUOT		10799270						
ANR	10800444	Symbol	XML_TOK_PARTIAL		10799270						
ANR	10800445	Symbol	BYTE_TYPE		10799270						
ANR	10800446	Symbol	scanPi		10799270						
ANR	10800447	Symbol	* nextTokPtr		10799270						
ANR	10800448	Symbol	IS_NAME_CHAR_MINBPC		10799270						
ANR	10800449	Symbol	MINBPC		10799270						
ANR	10800450	Symbol	IS_NMSTRT_CHAR		10799270						
ANR	10800451	Symbol	tok		10799270						
ANR	10800452	Symbol	XML_TOK_COND_SECT_CLOSE		10799270						
ANR	10800453	Symbol	XML_TOK_CLOSE_PAREN_ASTERISK		10799270						
ANR	10800454	Symbol	XML_TOK_CLOSE_PAREN		10799270						
ANR	10800455	Symbol	XML_TOK_CLOSE_PAREN_PLUS		10799270						
ANR	10800456	Symbol	XML_TOK_NAME		10799270						
ANR	10800457	Symbol	XML_TOK_CLOSE_PAREN_QUESTION		10799270						
ANR	10800458	Symbol	IS_NAME_CHAR		10799270						
ANR	10800459	Symbol	end		10799270						
ANR	10800460	Symbol	enc		10799270						
ANR	10800461	Symbol	scanPercent		10799270						
ANR	10800462	Symbol	XML_TOK_NAME_PLUS		10799270						
ANR	10800463	Symbol	XML_TOK_INSTANCE_START		10799270						
ANR	10800464	Symbol	XML_TOK_INVALID		10799270						
ANR	10800465	Symbol	scanDecl		10799270						
ANR	10800466	Symbol	XML_TOK_PROLOG_S		10799270						
ANR	10800467	Symbol	XML_TOK_NAME_ASTERISK		10799270						
ANR	10800468	Symbol	scanPoundName		10799270						
ANR	10800469	Symbol	XML_TOK_OPEN_BRACKET		10799270						
ANR	10800470	Symbol	BT_APOS		10799270						
ANR	10800471	Symbol	XML_TOK_COMMA		10799270						
ANR	10800472	Symbol	XML_TOK_OR		10799270						
ANR	10800473	Symbol	n		10799270						
ANR	10800474	Symbol	ptr		10799270						
ANR	10800475	Symbol	CHAR_MATCHES		10799270						
ANR	10800476	Symbol	XML_TOK_OPEN_PAREN		10799270						
ANR	10800477	Symbol	XML_TOK_CLOSE_BRACKET		10799270						
ANR	10800478	Symbol	PREFIX		10799270						
ANR	10800479	Symbol	ASCII_GT		10799270						
ANR	10800480	Symbol	XML_TOK_NMTOKEN		10799270						
ANR	10800481	Symbol	XML_TOK_NONE		10799270						
ANR	10800482	Symbol	XML_TOK_DECL_CLOSE		10799270						
ANR	10800483	Symbol	XML_TOK_NAME_QUESTION		10799270						
ANR	10800484	Symbol	scanLit		10799270						
ANR	10800485	Symbol	HAS_CHAR		10799270						
ANR	10800486	Symbol	ASCII_RSQB		10799270						
ANR	10800487	Symbol	IS_NMSTRT_CHAR_MINBPC		10799270						
ANR	10800488	Function	attributeValueTok	1221:0:32036:33940							
ANR	10800489	FunctionDef	"attributeValueTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10800488	0					
ANR	10800490	CompoundStatement		1224:0:32187:33940	10800488	0					
ANR	10800491	IdentifierDeclStatement	const char * start ;	1225:2:32191:32208	10800488	0	True				
ANR	10800492	IdentifierDecl	* start		10800488	0					
ANR	10800493	IdentifierDeclType	const char *		10800488	0					
ANR	10800494	Identifier	start		10800488	1					
ANR	10800495	IfStatement	if ( ptr >= end )		10800488	1					
ANR	10800496	Condition	ptr >= end	1226:6:32216:32225	10800488	0	True				
ANR	10800497	RelationalExpression	ptr >= end		10800488	0		>=			
ANR	10800498	Identifier	ptr		10800488	0					
ANR	10800499	Identifier	end		10800488	1					
ANR	10800500	ReturnStatement	return XML_TOK_NONE ;	1227:4:32232:32251	10800488	1	True				
ANR	10800501	Identifier	XML_TOK_NONE		10800488	0					
ANR	10800502	ElseStatement	else		10800488	0					
ANR	10800503	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10800488	0					
ANR	10800504	Condition	"! HAS_CHAR ( enc , ptr , end )"	1228:11:32264:32288	10800488	0	True				
ANR	10800505	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10800488	0					
ANR	10800506	UnaryOperator	!		10800488	0					
ANR	10800507	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10800488	1					
ANR	10800508	Callee	HAS_CHAR		10800488	0					
ANR	10800509	Identifier	HAS_CHAR		10800488	0					
ANR	10800510	ArgumentList	enc		10800488	1					
ANR	10800511	Argument	enc		10800488	0					
ANR	10800512	Identifier	enc		10800488	0					
ANR	10800513	Argument	ptr		10800488	1					
ANR	10800514	Identifier	ptr		10800488	0					
ANR	10800515	Argument	end		10800488	2					
ANR	10800516	Identifier	end		10800488	0					
ANR	10800517	CompoundStatement		5:38:103:103	10800488	1					
ANR	10800518	ReturnStatement	return XML_TOK_PARTIAL ;	1234:4:32553:32575	10800488	0	True				
ANR	10800519	Identifier	XML_TOK_PARTIAL		10800488	0					
ANR	10800520	ExpressionStatement	start = ptr	1236:2:32604:32615	10800488	2	True				
ANR	10800521	AssignmentExpression	start = ptr		10800488	0		=			
ANR	10800522	Identifier	start		10800488	0					
ANR	10800523	Identifier	ptr		10800488	1					
ANR	10800524	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10800488	3					
ANR	10800525	Condition	"HAS_CHAR ( enc , ptr , end )"	1237:9:32626:32648	10800488	0	True				
ANR	10800526	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10800488	0					
ANR	10800527	Callee	HAS_CHAR		10800488	0					
ANR	10800528	Identifier	HAS_CHAR		10800488	0					
ANR	10800529	ArgumentList	enc		10800488	1					
ANR	10800530	Argument	enc		10800488	0					
ANR	10800531	Identifier	enc		10800488	0					
ANR	10800532	Argument	ptr		10800488	1					
ANR	10800533	Identifier	ptr		10800488	0					
ANR	10800534	Argument	end		10800488	2					
ANR	10800535	Identifier	end		10800488	0					
ANR	10800536	CompoundStatement		14:34:463:463	10800488	1					
ANR	10800537	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10800488	0					
ANR	10800538	Condition	"BYTE_TYPE ( enc , ptr )"	1238:12:32665:32683	10800488	0	True				
ANR	10800539	CallExpression	"BYTE_TYPE ( enc , ptr )"		10800488	0					
ANR	10800540	Callee	BYTE_TYPE		10800488	0					
ANR	10800541	Identifier	BYTE_TYPE		10800488	0					
ANR	10800542	ArgumentList	enc		10800488	1					
ANR	10800543	Argument	enc		10800488	0					
ANR	10800544	Identifier	enc		10800488	0					
ANR	10800545	Argument	ptr		10800488	1					
ANR	10800546	Identifier	ptr		10800488	0					
ANR	10800547	CompoundStatement		15:33:498:498	10800488	1					
ANR	10800548	Statement	define	1239:1:32689:32694	10800488	0	True				
ANR	10800549	Statement	LEAD_CASE	1239:8:32696:32704	10800488	1	True				
ANR	10800550	Statement	(	1239:17:32705:32705	10800488	2	True				
ANR	10800551	Statement	n	1239:18:32706:32706	10800488	3	True				
ANR	10800552	Statement	)	1239:19:32707:32707	10800488	4	True				
ANR	10800553	Statement	case	1240:4:32715:32718	10800488	5	True				
ANR	10800554	Statement	BT_LEAD	1240:9:32720:32726	10800488	6	True				
ANR	10800555	Label	n :	1240:20:32731:32732	10800488	7	True				
ANR	10800556	Identifier	n		10800488	0					
ANR	10800557	ExpressionStatement	ptr += n	1240:23:32734:32742	10800488	8	True				
ANR	10800558	AssignmentExpression	ptr += n		10800488	0		+=			
ANR	10800559	Identifier	ptr		10800488	0					
ANR	10800560	Identifier	n		10800488	1					
ANR	10800561	BreakStatement	break ;	1240:33:32744:32749	10800488	9	True				
ANR	10800562	Statement	LEAD_CASE	1241:4:32755:32763	10800488	10	True				
ANR	10800563	Statement	(	1241:13:32764:32764	10800488	11	True				
ANR	10800564	Statement	2	1241:14:32765:32765	10800488	12	True				
ANR	10800565	Statement	)	1241:15:32766:32766	10800488	13	True				
ANR	10800566	Statement	LEAD_CASE	1241:17:32768:32776	10800488	14	True				
ANR	10800567	Statement	(	1241:26:32777:32777	10800488	15	True				
ANR	10800568	Statement	3	1241:27:32778:32778	10800488	16	True				
ANR	10800569	Statement	)	1241:28:32779:32779	10800488	17	True				
ANR	10800570	Statement	LEAD_CASE	1241:30:32781:32789	10800488	18	True				
ANR	10800571	Statement	(	1241:39:32790:32790	10800488	19	True				
ANR	10800572	Statement	4	1241:40:32791:32791	10800488	20	True				
ANR	10800573	Statement	)	1241:41:32792:32792	10800488	21	True				
ANR	10800574	Statement	undef	1242:1:32795:32799	10800488	22	True				
ANR	10800575	Statement	LEAD_CASE	1242:7:32801:32809	10800488	23	True				
ANR	10800576	Label	case BT_AMP :	1243:4:32815:32826	10800488	24	True				
ANR	10800577	Identifier	BT_AMP		10800488	0					
ANR	10800578	IfStatement	if ( ptr == start )		10800488	25					
ANR	10800579	Condition	ptr == start	1244:10:32838:32849	10800488	0	True				
ANR	10800580	EqualityExpression	ptr == start		10800488	0		==			
ANR	10800581	Identifier	ptr		10800488	0					
ANR	10800582	Identifier	start		10800488	1					
ANR	10800583	ReturnStatement	"return PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1245:8:32860:32923	10800488	1	True				
ANR	10800584	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10800488	0					
ANR	10800585	Callee	PREFIX ( scanRef )		10800488	0					
ANR	10800586	CallExpression	PREFIX ( scanRef )		10800488	0					
ANR	10800587	Callee	PREFIX		10800488	0					
ANR	10800588	Identifier	PREFIX		10800488	0					
ANR	10800589	ArgumentList	scanRef		10800488	1					
ANR	10800590	Argument	scanRef		10800488	0					
ANR	10800591	Identifier	scanRef		10800488	0					
ANR	10800592	ArgumentList	enc		10800488	1					
ANR	10800593	Argument	enc		10800488	0					
ANR	10800594	Identifier	enc		10800488	0					
ANR	10800595	Argument	ptr + MINBPC ( enc )		10800488	1					
ANR	10800596	AdditiveExpression	ptr + MINBPC ( enc )		10800488	0		+			
ANR	10800597	Identifier	ptr		10800488	0					
ANR	10800598	CallExpression	MINBPC ( enc )		10800488	1					
ANR	10800599	Callee	MINBPC		10800488	0					
ANR	10800600	Identifier	MINBPC		10800488	0					
ANR	10800601	ArgumentList	enc		10800488	1					
ANR	10800602	Argument	enc		10800488	0					
ANR	10800603	Identifier	enc		10800488	0					
ANR	10800604	Argument	end		10800488	2					
ANR	10800605	Identifier	end		10800488	0					
ANR	10800606	Argument	nextTokPtr		10800488	3					
ANR	10800607	Identifier	nextTokPtr		10800488	0					
ANR	10800608	ExpressionStatement	* nextTokPtr = ptr	1246:6:32931:32948	10800488	26	True				
ANR	10800609	AssignmentExpression	* nextTokPtr = ptr		10800488	0		=			
ANR	10800610	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800611	UnaryOperator	*		10800488	0					
ANR	10800612	Identifier	nextTokPtr		10800488	1					
ANR	10800613	Identifier	ptr		10800488	1					
ANR	10800614	ReturnStatement	return XML_TOK_DATA_CHARS ;	1247:6:32956:32981	10800488	27	True				
ANR	10800615	Identifier	XML_TOK_DATA_CHARS		10800488	0					
ANR	10800616	Label	case BT_LT :	1248:4:32987:32997	10800488	28	True				
ANR	10800617	Identifier	BT_LT		10800488	0					
ANR	10800618	ExpressionStatement	* nextTokPtr = ptr	1250:6:33054:33071	10800488	29	True				
ANR	10800619	AssignmentExpression	* nextTokPtr = ptr		10800488	0		=			
ANR	10800620	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800621	UnaryOperator	*		10800488	0					
ANR	10800622	Identifier	nextTokPtr		10800488	1					
ANR	10800623	Identifier	ptr		10800488	1					
ANR	10800624	ReturnStatement	return XML_TOK_INVALID ;	1251:6:33079:33101	10800488	30	True				
ANR	10800625	Identifier	XML_TOK_INVALID		10800488	0					
ANR	10800626	Label	case BT_LF :	1252:4:33107:33117	10800488	31	True				
ANR	10800627	Identifier	BT_LF		10800488	0					
ANR	10800628	IfStatement	if ( ptr == start )		10800488	32					
ANR	10800629	Condition	ptr == start	1253:10:33129:33140	10800488	0	True				
ANR	10800630	EqualityExpression	ptr == start		10800488	0		==			
ANR	10800631	Identifier	ptr		10800488	0					
ANR	10800632	Identifier	start		10800488	1					
ANR	10800633	CompoundStatement		30:24:955:955	10800488	1					
ANR	10800634	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1254:8:33153:33184	10800488	0	True				
ANR	10800635	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10800488	0		=			
ANR	10800636	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800637	UnaryOperator	*		10800488	0					
ANR	10800638	Identifier	nextTokPtr		10800488	1					
ANR	10800639	AdditiveExpression	ptr + MINBPC ( enc )		10800488	1		+			
ANR	10800640	Identifier	ptr		10800488	0					
ANR	10800641	CallExpression	MINBPC ( enc )		10800488	1					
ANR	10800642	Callee	MINBPC		10800488	0					
ANR	10800643	Identifier	MINBPC		10800488	0					
ANR	10800644	ArgumentList	enc		10800488	1					
ANR	10800645	Argument	enc		10800488	0					
ANR	10800646	Identifier	enc		10800488	0					
ANR	10800647	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1255:8:33194:33221	10800488	1	True				
ANR	10800648	Identifier	XML_TOK_DATA_NEWLINE		10800488	0					
ANR	10800649	ExpressionStatement	* nextTokPtr = ptr	1257:6:33237:33254	10800488	33	True				
ANR	10800650	AssignmentExpression	* nextTokPtr = ptr		10800488	0		=			
ANR	10800651	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800652	UnaryOperator	*		10800488	0					
ANR	10800653	Identifier	nextTokPtr		10800488	1					
ANR	10800654	Identifier	ptr		10800488	1					
ANR	10800655	ReturnStatement	return XML_TOK_DATA_CHARS ;	1258:6:33262:33287	10800488	34	True				
ANR	10800656	Identifier	XML_TOK_DATA_CHARS		10800488	0					
ANR	10800657	Label	case BT_CR :	1259:4:33293:33303	10800488	35	True				
ANR	10800658	Identifier	BT_CR		10800488	0					
ANR	10800659	IfStatement	if ( ptr == start )		10800488	36					
ANR	10800660	Condition	ptr == start	1260:10:33315:33326	10800488	0	True				
ANR	10800661	EqualityExpression	ptr == start		10800488	0		==			
ANR	10800662	Identifier	ptr		10800488	0					
ANR	10800663	Identifier	start		10800488	1					
ANR	10800664	CompoundStatement		37:24:1141:1141	10800488	1					
ANR	10800665	ExpressionStatement	ptr += MINBPC ( enc )	1261:8:33339:33357	10800488	0	True				
ANR	10800666	AssignmentExpression	ptr += MINBPC ( enc )		10800488	0		+=			
ANR	10800667	Identifier	ptr		10800488	0					
ANR	10800668	CallExpression	MINBPC ( enc )		10800488	1					
ANR	10800669	Callee	MINBPC		10800488	0					
ANR	10800670	Identifier	MINBPC		10800488	0					
ANR	10800671	ArgumentList	enc		10800488	1					
ANR	10800672	Argument	enc		10800488	0					
ANR	10800673	Identifier	enc		10800488	0					
ANR	10800674	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10800488	1					
ANR	10800675	Condition	"! HAS_CHAR ( enc , ptr , end )"	1262:12:33371:33395	10800488	0	True				
ANR	10800676	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10800488	0					
ANR	10800677	UnaryOperator	!		10800488	0					
ANR	10800678	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10800488	1					
ANR	10800679	Callee	HAS_CHAR		10800488	0					
ANR	10800680	Identifier	HAS_CHAR		10800488	0					
ANR	10800681	ArgumentList	enc		10800488	1					
ANR	10800682	Argument	enc		10800488	0					
ANR	10800683	Identifier	enc		10800488	0					
ANR	10800684	Argument	ptr		10800488	1					
ANR	10800685	Identifier	ptr		10800488	0					
ANR	10800686	Argument	end		10800488	2					
ANR	10800687	Identifier	end		10800488	0					
ANR	10800688	ReturnStatement	return XML_TOK_TRAILING_CR ;	1263:10:33408:33434	10800488	1	True				
ANR	10800689	Identifier	XML_TOK_TRAILING_CR		10800488	0					
ANR	10800690	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		10800488	2					
ANR	10800691	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	1264:12:33448:33475	10800488	0	True				
ANR	10800692	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		10800488	0		==			
ANR	10800693	CallExpression	"BYTE_TYPE ( enc , ptr )"		10800488	0					
ANR	10800694	Callee	BYTE_TYPE		10800488	0					
ANR	10800695	Identifier	BYTE_TYPE		10800488	0					
ANR	10800696	ArgumentList	enc		10800488	1					
ANR	10800697	Argument	enc		10800488	0					
ANR	10800698	Identifier	enc		10800488	0					
ANR	10800699	Argument	ptr		10800488	1					
ANR	10800700	Identifier	ptr		10800488	0					
ANR	10800701	Identifier	BT_LF		10800488	1					
ANR	10800702	ExpressionStatement	ptr += MINBPC ( enc )	1265:10:33488:33506	10800488	1	True				
ANR	10800703	AssignmentExpression	ptr += MINBPC ( enc )		10800488	0		+=			
ANR	10800704	Identifier	ptr		10800488	0					
ANR	10800705	CallExpression	MINBPC ( enc )		10800488	1					
ANR	10800706	Callee	MINBPC		10800488	0					
ANR	10800707	Identifier	MINBPC		10800488	0					
ANR	10800708	ArgumentList	enc		10800488	1					
ANR	10800709	Argument	enc		10800488	0					
ANR	10800710	Identifier	enc		10800488	0					
ANR	10800711	ExpressionStatement	* nextTokPtr = ptr	1266:8:33516:33533	10800488	3	True				
ANR	10800712	AssignmentExpression	* nextTokPtr = ptr		10800488	0		=			
ANR	10800713	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800714	UnaryOperator	*		10800488	0					
ANR	10800715	Identifier	nextTokPtr		10800488	1					
ANR	10800716	Identifier	ptr		10800488	1					
ANR	10800717	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1267:8:33543:33570	10800488	4	True				
ANR	10800718	Identifier	XML_TOK_DATA_NEWLINE		10800488	0					
ANR	10800719	ExpressionStatement	* nextTokPtr = ptr	1269:6:33586:33603	10800488	37	True				
ANR	10800720	AssignmentExpression	* nextTokPtr = ptr		10800488	0		=			
ANR	10800721	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800722	UnaryOperator	*		10800488	0					
ANR	10800723	Identifier	nextTokPtr		10800488	1					
ANR	10800724	Identifier	ptr		10800488	1					
ANR	10800725	ReturnStatement	return XML_TOK_DATA_CHARS ;	1270:6:33611:33636	10800488	38	True				
ANR	10800726	Identifier	XML_TOK_DATA_CHARS		10800488	0					
ANR	10800727	Label	case BT_S :	1271:4:33642:33651	10800488	39	True				
ANR	10800728	Identifier	BT_S		10800488	0					
ANR	10800729	IfStatement	if ( ptr == start )		10800488	40					
ANR	10800730	Condition	ptr == start	1272:10:33663:33674	10800488	0	True				
ANR	10800731	EqualityExpression	ptr == start		10800488	0		==			
ANR	10800732	Identifier	ptr		10800488	0					
ANR	10800733	Identifier	start		10800488	1					
ANR	10800734	CompoundStatement		49:24:1489:1489	10800488	1					
ANR	10800735	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1273:8:33687:33718	10800488	0	True				
ANR	10800736	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10800488	0		=			
ANR	10800737	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800738	UnaryOperator	*		10800488	0					
ANR	10800739	Identifier	nextTokPtr		10800488	1					
ANR	10800740	AdditiveExpression	ptr + MINBPC ( enc )		10800488	1		+			
ANR	10800741	Identifier	ptr		10800488	0					
ANR	10800742	CallExpression	MINBPC ( enc )		10800488	1					
ANR	10800743	Callee	MINBPC		10800488	0					
ANR	10800744	Identifier	MINBPC		10800488	0					
ANR	10800745	ArgumentList	enc		10800488	1					
ANR	10800746	Argument	enc		10800488	0					
ANR	10800747	Identifier	enc		10800488	0					
ANR	10800748	ReturnStatement	return XML_TOK_ATTRIBUTE_VALUE_S ;	1274:8:33728:33760	10800488	1	True				
ANR	10800749	Identifier	XML_TOK_ATTRIBUTE_VALUE_S		10800488	0					
ANR	10800750	ExpressionStatement	* nextTokPtr = ptr	1276:6:33776:33793	10800488	41	True				
ANR	10800751	AssignmentExpression	* nextTokPtr = ptr		10800488	0		=			
ANR	10800752	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800753	UnaryOperator	*		10800488	0					
ANR	10800754	Identifier	nextTokPtr		10800488	1					
ANR	10800755	Identifier	ptr		10800488	1					
ANR	10800756	ReturnStatement	return XML_TOK_DATA_CHARS ;	1277:6:33801:33826	10800488	42	True				
ANR	10800757	Identifier	XML_TOK_DATA_CHARS		10800488	0					
ANR	10800758	Label	default :	1278:4:33832:33839	10800488	43	True				
ANR	10800759	Identifier	default		10800488	0					
ANR	10800760	ExpressionStatement	ptr += MINBPC ( enc )	1279:6:33847:33865	10800488	44	True				
ANR	10800761	AssignmentExpression	ptr += MINBPC ( enc )		10800488	0		+=			
ANR	10800762	Identifier	ptr		10800488	0					
ANR	10800763	CallExpression	MINBPC ( enc )		10800488	1					
ANR	10800764	Callee	MINBPC		10800488	0					
ANR	10800765	Identifier	MINBPC		10800488	0					
ANR	10800766	ArgumentList	enc		10800488	1					
ANR	10800767	Argument	enc		10800488	0					
ANR	10800768	Identifier	enc		10800488	0					
ANR	10800769	BreakStatement	break ;	1280:6:33873:33878	10800488	45	True				
ANR	10800770	ExpressionStatement	* nextTokPtr = ptr	1283:2:33892:33909	10800488	4	True				
ANR	10800771	AssignmentExpression	* nextTokPtr = ptr		10800488	0		=			
ANR	10800772	UnaryOperationExpression	* nextTokPtr		10800488	0					
ANR	10800773	UnaryOperator	*		10800488	0					
ANR	10800774	Identifier	nextTokPtr		10800488	1					
ANR	10800775	Identifier	ptr		10800488	1					
ANR	10800776	ReturnStatement	return XML_TOK_DATA_CHARS ;	1284:2:33913:33938	10800488	5	True				
ANR	10800777	Identifier	XML_TOK_DATA_CHARS		10800488	0					
ANR	10800778	ReturnType	static int PTRCALL PREFIX		10800488	1					
ANR	10800779	Identifier	( attributeValueTok )		10800488	2					
ANR	10800780	Identifier	attributeValueTok		10800488	3					
ANR	10800781	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10800488	4					
ANR	10800782	Parameter	const ENCODING * enc	1222:26:32081:32099	10800488	0	True				
ANR	10800783	ParameterType	const ENCODING *		10800488	0					
ANR	10800784	Identifier	enc		10800488	1					
ANR	10800785	Parameter	const char * ptr	1222:47:32102:32116	10800488	1	True				
ANR	10800786	ParameterType	const char *		10800488	0					
ANR	10800787	Identifier	ptr		10800488	1					
ANR	10800788	Parameter	const char * end	1223:26:32145:32159	10800488	2	True				
ANR	10800789	ParameterType	const char *		10800488	0					
ANR	10800790	Identifier	end		10800488	1					
ANR	10800791	Parameter	const char * * nextTokPtr	1223:43:32162:32184	10800488	3	True				
ANR	10800792	ParameterType	const char * *		10800488	0					
ANR	10800793	Identifier	nextTokPtr		10800488	1					
ANR	10800794	CFGEntryNode	ENTRY		10800488		True				
ANR	10800795	CFGExitNode	EXIT		10800488		True				
ANR	10800796	Symbol	XML_TOK_DATA_CHARS		10800488						
ANR	10800797	Symbol	XML_TOK_INVALID		10800488						
ANR	10800798	Symbol	nextTokPtr		10800488						
ANR	10800799	Symbol	XML_TOK_PARTIAL		10800488						
ANR	10800800	Symbol	start		10800488						
ANR	10800801	Symbol	BYTE_TYPE		10800488						
ANR	10800802	Symbol	* nextTokPtr		10800488						
ANR	10800803	Symbol	MINBPC		10800488						
ANR	10800804	Symbol	n		10800488						
ANR	10800805	Symbol	BT_LF		10800488						
ANR	10800806	Symbol	ptr		10800488						
ANR	10800807	Symbol	scanRef		10800488						
ANR	10800808	Symbol	XML_TOK_DATA_NEWLINE		10800488						
ANR	10800809	Symbol	PREFIX		10800488						
ANR	10800810	Symbol	XML_TOK_NONE		10800488						
ANR	10800811	Symbol	end		10800488						
ANR	10800812	Symbol	enc		10800488						
ANR	10800813	Symbol	XML_TOK_TRAILING_CR		10800488						
ANR	10800814	Symbol	XML_TOK_ATTRIBUTE_VALUE_S		10800488						
ANR	10800815	Symbol	HAS_CHAR		10800488						
ANR	10800816	Function	entityValueTok	1287:0:33943:35828							
ANR	10800817	FunctionDef	"entityValueTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10800816	0					
ANR	10800818	CompoundStatement		1290:0:34088:35828	10800816	0					
ANR	10800819	IdentifierDeclStatement	const char * start ;	1291:2:34092:34109	10800816	0	True				
ANR	10800820	IdentifierDecl	* start		10800816	0					
ANR	10800821	IdentifierDeclType	const char *		10800816	0					
ANR	10800822	Identifier	start		10800816	1					
ANR	10800823	IfStatement	if ( ptr >= end )		10800816	1					
ANR	10800824	Condition	ptr >= end	1292:6:34117:34126	10800816	0	True				
ANR	10800825	RelationalExpression	ptr >= end		10800816	0		>=			
ANR	10800826	Identifier	ptr		10800816	0					
ANR	10800827	Identifier	end		10800816	1					
ANR	10800828	ReturnStatement	return XML_TOK_NONE ;	1293:4:34133:34152	10800816	1	True				
ANR	10800829	Identifier	XML_TOK_NONE		10800816	0					
ANR	10800830	ElseStatement	else		10800816	0					
ANR	10800831	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10800816	0					
ANR	10800832	Condition	"! HAS_CHAR ( enc , ptr , end )"	1294:11:34165:34189	10800816	0	True				
ANR	10800833	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10800816	0					
ANR	10800834	UnaryOperator	!		10800816	0					
ANR	10800835	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10800816	1					
ANR	10800836	Callee	HAS_CHAR		10800816	0					
ANR	10800837	Identifier	HAS_CHAR		10800816	0					
ANR	10800838	ArgumentList	enc		10800816	1					
ANR	10800839	Argument	enc		10800816	0					
ANR	10800840	Identifier	enc		10800816	0					
ANR	10800841	Argument	ptr		10800816	1					
ANR	10800842	Identifier	ptr		10800816	0					
ANR	10800843	Argument	end		10800816	2					
ANR	10800844	Identifier	end		10800816	0					
ANR	10800845	CompoundStatement		5:38:103:103	10800816	1					
ANR	10800846	ReturnStatement	return XML_TOK_PARTIAL ;	1300:4:34454:34476	10800816	0	True				
ANR	10800847	Identifier	XML_TOK_PARTIAL		10800816	0					
ANR	10800848	ExpressionStatement	start = ptr	1302:2:34505:34516	10800816	2	True				
ANR	10800849	AssignmentExpression	start = ptr		10800816	0		=			
ANR	10800850	Identifier	start		10800816	0					
ANR	10800851	Identifier	ptr		10800816	1					
ANR	10800852	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10800816	3					
ANR	10800853	Condition	"HAS_CHAR ( enc , ptr , end )"	1303:9:34527:34549	10800816	0	True				
ANR	10800854	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10800816	0					
ANR	10800855	Callee	HAS_CHAR		10800816	0					
ANR	10800856	Identifier	HAS_CHAR		10800816	0					
ANR	10800857	ArgumentList	enc		10800816	1					
ANR	10800858	Argument	enc		10800816	0					
ANR	10800859	Identifier	enc		10800816	0					
ANR	10800860	Argument	ptr		10800816	1					
ANR	10800861	Identifier	ptr		10800816	0					
ANR	10800862	Argument	end		10800816	2					
ANR	10800863	Identifier	end		10800816	0					
ANR	10800864	CompoundStatement		14:34:463:463	10800816	1					
ANR	10800865	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10800816	0					
ANR	10800866	Condition	"BYTE_TYPE ( enc , ptr )"	1304:12:34566:34584	10800816	0	True				
ANR	10800867	CallExpression	"BYTE_TYPE ( enc , ptr )"		10800816	0					
ANR	10800868	Callee	BYTE_TYPE		10800816	0					
ANR	10800869	Identifier	BYTE_TYPE		10800816	0					
ANR	10800870	ArgumentList	enc		10800816	1					
ANR	10800871	Argument	enc		10800816	0					
ANR	10800872	Identifier	enc		10800816	0					
ANR	10800873	Argument	ptr		10800816	1					
ANR	10800874	Identifier	ptr		10800816	0					
ANR	10800875	CompoundStatement		15:33:498:498	10800816	1					
ANR	10800876	Statement	define	1305:1:34590:34595	10800816	0	True				
ANR	10800877	Statement	LEAD_CASE	1305:8:34597:34605	10800816	1	True				
ANR	10800878	Statement	(	1305:17:34606:34606	10800816	2	True				
ANR	10800879	Statement	n	1305:18:34607:34607	10800816	3	True				
ANR	10800880	Statement	)	1305:19:34608:34608	10800816	4	True				
ANR	10800881	Statement	case	1306:4:34616:34619	10800816	5	True				
ANR	10800882	Statement	BT_LEAD	1306:9:34621:34627	10800816	6	True				
ANR	10800883	Label	n :	1306:20:34632:34633	10800816	7	True				
ANR	10800884	Identifier	n		10800816	0					
ANR	10800885	ExpressionStatement	ptr += n	1306:23:34635:34643	10800816	8	True				
ANR	10800886	AssignmentExpression	ptr += n		10800816	0		+=			
ANR	10800887	Identifier	ptr		10800816	0					
ANR	10800888	Identifier	n		10800816	1					
ANR	10800889	BreakStatement	break ;	1306:33:34645:34650	10800816	9	True				
ANR	10800890	Statement	LEAD_CASE	1307:4:34656:34664	10800816	10	True				
ANR	10800891	Statement	(	1307:13:34665:34665	10800816	11	True				
ANR	10800892	Statement	2	1307:14:34666:34666	10800816	12	True				
ANR	10800893	Statement	)	1307:15:34667:34667	10800816	13	True				
ANR	10800894	Statement	LEAD_CASE	1307:17:34669:34677	10800816	14	True				
ANR	10800895	Statement	(	1307:26:34678:34678	10800816	15	True				
ANR	10800896	Statement	3	1307:27:34679:34679	10800816	16	True				
ANR	10800897	Statement	)	1307:28:34680:34680	10800816	17	True				
ANR	10800898	Statement	LEAD_CASE	1307:30:34682:34690	10800816	18	True				
ANR	10800899	Statement	(	1307:39:34691:34691	10800816	19	True				
ANR	10800900	Statement	4	1307:40:34692:34692	10800816	20	True				
ANR	10800901	Statement	)	1307:41:34693:34693	10800816	21	True				
ANR	10800902	Statement	undef	1308:1:34696:34700	10800816	22	True				
ANR	10800903	Statement	LEAD_CASE	1308:7:34702:34710	10800816	23	True				
ANR	10800904	Label	case BT_AMP :	1309:4:34716:34727	10800816	24	True				
ANR	10800905	Identifier	BT_AMP		10800816	0					
ANR	10800906	IfStatement	if ( ptr == start )		10800816	25					
ANR	10800907	Condition	ptr == start	1310:10:34739:34750	10800816	0	True				
ANR	10800908	EqualityExpression	ptr == start		10800816	0		==			
ANR	10800909	Identifier	ptr		10800816	0					
ANR	10800910	Identifier	start		10800816	1					
ANR	10800911	ReturnStatement	"return PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1311:8:34761:34824	10800816	1	True				
ANR	10800912	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10800816	0					
ANR	10800913	Callee	PREFIX ( scanRef )		10800816	0					
ANR	10800914	CallExpression	PREFIX ( scanRef )		10800816	0					
ANR	10800915	Callee	PREFIX		10800816	0					
ANR	10800916	Identifier	PREFIX		10800816	0					
ANR	10800917	ArgumentList	scanRef		10800816	1					
ANR	10800918	Argument	scanRef		10800816	0					
ANR	10800919	Identifier	scanRef		10800816	0					
ANR	10800920	ArgumentList	enc		10800816	1					
ANR	10800921	Argument	enc		10800816	0					
ANR	10800922	Identifier	enc		10800816	0					
ANR	10800923	Argument	ptr + MINBPC ( enc )		10800816	1					
ANR	10800924	AdditiveExpression	ptr + MINBPC ( enc )		10800816	0		+			
ANR	10800925	Identifier	ptr		10800816	0					
ANR	10800926	CallExpression	MINBPC ( enc )		10800816	1					
ANR	10800927	Callee	MINBPC		10800816	0					
ANR	10800928	Identifier	MINBPC		10800816	0					
ANR	10800929	ArgumentList	enc		10800816	1					
ANR	10800930	Argument	enc		10800816	0					
ANR	10800931	Identifier	enc		10800816	0					
ANR	10800932	Argument	end		10800816	2					
ANR	10800933	Identifier	end		10800816	0					
ANR	10800934	Argument	nextTokPtr		10800816	3					
ANR	10800935	Identifier	nextTokPtr		10800816	0					
ANR	10800936	ExpressionStatement	* nextTokPtr = ptr	1312:6:34832:34849	10800816	26	True				
ANR	10800937	AssignmentExpression	* nextTokPtr = ptr		10800816	0		=			
ANR	10800938	UnaryOperationExpression	* nextTokPtr		10800816	0					
ANR	10800939	UnaryOperator	*		10800816	0					
ANR	10800940	Identifier	nextTokPtr		10800816	1					
ANR	10800941	Identifier	ptr		10800816	1					
ANR	10800942	ReturnStatement	return XML_TOK_DATA_CHARS ;	1313:6:34857:34882	10800816	27	True				
ANR	10800943	Identifier	XML_TOK_DATA_CHARS		10800816	0					
ANR	10800944	Label	case BT_PERCNT :	1314:4:34888:34902	10800816	28	True				
ANR	10800945	Identifier	BT_PERCNT		10800816	0					
ANR	10800946	IfStatement	if ( ptr == start )		10800816	29					
ANR	10800947	Condition	ptr == start	1315:10:34914:34925	10800816	0	True				
ANR	10800948	EqualityExpression	ptr == start		10800816	0		==			
ANR	10800949	Identifier	ptr		10800816	0					
ANR	10800950	Identifier	start		10800816	1					
ANR	10800951	CompoundStatement		27:8:849:959	10800816	1					
ANR	10800952	IdentifierDeclStatement	"int tok = PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1316:8:34938:35048	10800816	0	True				
ANR	10800953	IdentifierDecl	"tok = PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10800816	0					
ANR	10800954	IdentifierDeclType	int		10800816	0					
ANR	10800955	Identifier	tok		10800816	1					
ANR	10800956	AssignmentExpression	"tok = PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10800816	2		=			
ANR	10800957	Identifier	tok		10800816	0					
ANR	10800958	CallExpression	"PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		10800816	1					
ANR	10800959	Callee	PREFIX ( scanPercent )		10800816	0					
ANR	10800960	CallExpression	PREFIX ( scanPercent )		10800816	0					
ANR	10800961	Callee	PREFIX		10800816	0					
ANR	10800962	Identifier	PREFIX		10800816	0					
ANR	10800963	ArgumentList	scanPercent		10800816	1					
ANR	10800964	Argument	scanPercent		10800816	0					
ANR	10800965	Identifier	scanPercent		10800816	0					
ANR	10800966	ArgumentList	enc		10800816	1					
ANR	10800967	Argument	enc		10800816	0					
ANR	10800968	Identifier	enc		10800816	0					
ANR	10800969	Argument	ptr + MINBPC ( enc )		10800816	1					
ANR	10800970	AdditiveExpression	ptr + MINBPC ( enc )		10800816	0		+			
ANR	10800971	Identifier	ptr		10800816	0					
ANR	10800972	CallExpression	MINBPC ( enc )		10800816	1					
ANR	10800973	Callee	MINBPC		10800816	0					
ANR	10800974	Identifier	MINBPC		10800816	0					
ANR	10800975	ArgumentList	enc		10800816	1					
ANR	10800976	Argument	enc		10800816	0					
ANR	10800977	Identifier	enc		10800816	0					
ANR	10800978	Argument	end		10800816	2					
ANR	10800979	Identifier	end		10800816	0					
ANR	10800980	Argument	nextTokPtr		10800816	3					
ANR	10800981	Identifier	nextTokPtr		10800816	0					
ANR	10800982	ReturnStatement	return ( tok == XML_TOK_PERCENT ) ? XML_TOK_INVALID : tok ;	1318:8:35058:35113	10800816	1	True				
ANR	10800983	ConditionalExpression	( tok == XML_TOK_PERCENT ) ? XML_TOK_INVALID : tok		10800816	0					
ANR	10800984	Condition	tok == XML_TOK_PERCENT		10800816	0					
ANR	10800985	EqualityExpression	tok == XML_TOK_PERCENT		10800816	0		==			
ANR	10800986	Identifier	tok		10800816	0					
ANR	10800987	Identifier	XML_TOK_PERCENT		10800816	1					
ANR	10800988	Identifier	XML_TOK_INVALID		10800816	1					
ANR	10800989	Identifier	tok		10800816	2					
ANR	10800990	ExpressionStatement	* nextTokPtr = ptr	1320:6:35129:35146	10800816	30	True				
ANR	10800991	AssignmentExpression	* nextTokPtr = ptr		10800816	0		=			
ANR	10800992	UnaryOperationExpression	* nextTokPtr		10800816	0					
ANR	10800993	UnaryOperator	*		10800816	0					
ANR	10800994	Identifier	nextTokPtr		10800816	1					
ANR	10800995	Identifier	ptr		10800816	1					
ANR	10800996	ReturnStatement	return XML_TOK_DATA_CHARS ;	1321:6:35154:35179	10800816	31	True				
ANR	10800997	Identifier	XML_TOK_DATA_CHARS		10800816	0					
ANR	10800998	Label	case BT_LF :	1322:4:35185:35195	10800816	32	True				
ANR	10800999	Identifier	BT_LF		10800816	0					
ANR	10801000	IfStatement	if ( ptr == start )		10800816	33					
ANR	10801001	Condition	ptr == start	1323:10:35207:35218	10800816	0	True				
ANR	10801002	EqualityExpression	ptr == start		10800816	0		==			
ANR	10801003	Identifier	ptr		10800816	0					
ANR	10801004	Identifier	start		10800816	1					
ANR	10801005	CompoundStatement		34:24:1132:1132	10800816	1					
ANR	10801006	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1324:8:35231:35262	10800816	0	True				
ANR	10801007	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		10800816	0		=			
ANR	10801008	UnaryOperationExpression	* nextTokPtr		10800816	0					
ANR	10801009	UnaryOperator	*		10800816	0					
ANR	10801010	Identifier	nextTokPtr		10800816	1					
ANR	10801011	AdditiveExpression	ptr + MINBPC ( enc )		10800816	1		+			
ANR	10801012	Identifier	ptr		10800816	0					
ANR	10801013	CallExpression	MINBPC ( enc )		10800816	1					
ANR	10801014	Callee	MINBPC		10800816	0					
ANR	10801015	Identifier	MINBPC		10800816	0					
ANR	10801016	ArgumentList	enc		10800816	1					
ANR	10801017	Argument	enc		10800816	0					
ANR	10801018	Identifier	enc		10800816	0					
ANR	10801019	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1325:8:35272:35299	10800816	1	True				
ANR	10801020	Identifier	XML_TOK_DATA_NEWLINE		10800816	0					
ANR	10801021	ExpressionStatement	* nextTokPtr = ptr	1327:6:35315:35332	10800816	34	True				
ANR	10801022	AssignmentExpression	* nextTokPtr = ptr		10800816	0		=			
ANR	10801023	UnaryOperationExpression	* nextTokPtr		10800816	0					
ANR	10801024	UnaryOperator	*		10800816	0					
ANR	10801025	Identifier	nextTokPtr		10800816	1					
ANR	10801026	Identifier	ptr		10800816	1					
ANR	10801027	ReturnStatement	return XML_TOK_DATA_CHARS ;	1328:6:35340:35365	10800816	35	True				
ANR	10801028	Identifier	XML_TOK_DATA_CHARS		10800816	0					
ANR	10801029	Label	case BT_CR :	1329:4:35371:35381	10800816	36	True				
ANR	10801030	Identifier	BT_CR		10800816	0					
ANR	10801031	IfStatement	if ( ptr == start )		10800816	37					
ANR	10801032	Condition	ptr == start	1330:10:35393:35404	10800816	0	True				
ANR	10801033	EqualityExpression	ptr == start		10800816	0		==			
ANR	10801034	Identifier	ptr		10800816	0					
ANR	10801035	Identifier	start		10800816	1					
ANR	10801036	CompoundStatement		41:24:1318:1318	10800816	1					
ANR	10801037	ExpressionStatement	ptr += MINBPC ( enc )	1331:8:35417:35435	10800816	0	True				
ANR	10801038	AssignmentExpression	ptr += MINBPC ( enc )		10800816	0		+=			
ANR	10801039	Identifier	ptr		10800816	0					
ANR	10801040	CallExpression	MINBPC ( enc )		10800816	1					
ANR	10801041	Callee	MINBPC		10800816	0					
ANR	10801042	Identifier	MINBPC		10800816	0					
ANR	10801043	ArgumentList	enc		10800816	1					
ANR	10801044	Argument	enc		10800816	0					
ANR	10801045	Identifier	enc		10800816	0					
ANR	10801046	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		10800816	1					
ANR	10801047	Condition	"! HAS_CHAR ( enc , ptr , end )"	1332:12:35449:35473	10800816	0	True				
ANR	10801048	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		10800816	0					
ANR	10801049	UnaryOperator	!		10800816	0					
ANR	10801050	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10800816	1					
ANR	10801051	Callee	HAS_CHAR		10800816	0					
ANR	10801052	Identifier	HAS_CHAR		10800816	0					
ANR	10801053	ArgumentList	enc		10800816	1					
ANR	10801054	Argument	enc		10800816	0					
ANR	10801055	Identifier	enc		10800816	0					
ANR	10801056	Argument	ptr		10800816	1					
ANR	10801057	Identifier	ptr		10800816	0					
ANR	10801058	Argument	end		10800816	2					
ANR	10801059	Identifier	end		10800816	0					
ANR	10801060	ReturnStatement	return XML_TOK_TRAILING_CR ;	1333:10:35486:35512	10800816	1	True				
ANR	10801061	Identifier	XML_TOK_TRAILING_CR		10800816	0					
ANR	10801062	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		10800816	2					
ANR	10801063	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	1334:12:35526:35553	10800816	0	True				
ANR	10801064	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		10800816	0		==			
ANR	10801065	CallExpression	"BYTE_TYPE ( enc , ptr )"		10800816	0					
ANR	10801066	Callee	BYTE_TYPE		10800816	0					
ANR	10801067	Identifier	BYTE_TYPE		10800816	0					
ANR	10801068	ArgumentList	enc		10800816	1					
ANR	10801069	Argument	enc		10800816	0					
ANR	10801070	Identifier	enc		10800816	0					
ANR	10801071	Argument	ptr		10800816	1					
ANR	10801072	Identifier	ptr		10800816	0					
ANR	10801073	Identifier	BT_LF		10800816	1					
ANR	10801074	ExpressionStatement	ptr += MINBPC ( enc )	1335:10:35566:35584	10800816	1	True				
ANR	10801075	AssignmentExpression	ptr += MINBPC ( enc )		10800816	0		+=			
ANR	10801076	Identifier	ptr		10800816	0					
ANR	10801077	CallExpression	MINBPC ( enc )		10800816	1					
ANR	10801078	Callee	MINBPC		10800816	0					
ANR	10801079	Identifier	MINBPC		10800816	0					
ANR	10801080	ArgumentList	enc		10800816	1					
ANR	10801081	Argument	enc		10800816	0					
ANR	10801082	Identifier	enc		10800816	0					
ANR	10801083	ExpressionStatement	* nextTokPtr = ptr	1336:8:35594:35611	10800816	3	True				
ANR	10801084	AssignmentExpression	* nextTokPtr = ptr		10800816	0		=			
ANR	10801085	UnaryOperationExpression	* nextTokPtr		10800816	0					
ANR	10801086	UnaryOperator	*		10800816	0					
ANR	10801087	Identifier	nextTokPtr		10800816	1					
ANR	10801088	Identifier	ptr		10800816	1					
ANR	10801089	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1337:8:35621:35648	10800816	4	True				
ANR	10801090	Identifier	XML_TOK_DATA_NEWLINE		10800816	0					
ANR	10801091	ExpressionStatement	* nextTokPtr = ptr	1339:6:35664:35681	10800816	38	True				
ANR	10801092	AssignmentExpression	* nextTokPtr = ptr		10800816	0		=			
ANR	10801093	UnaryOperationExpression	* nextTokPtr		10800816	0					
ANR	10801094	UnaryOperator	*		10800816	0					
ANR	10801095	Identifier	nextTokPtr		10800816	1					
ANR	10801096	Identifier	ptr		10800816	1					
ANR	10801097	ReturnStatement	return XML_TOK_DATA_CHARS ;	1340:6:35689:35714	10800816	39	True				
ANR	10801098	Identifier	XML_TOK_DATA_CHARS		10800816	0					
ANR	10801099	Label	default :	1341:4:35720:35727	10800816	40	True				
ANR	10801100	Identifier	default		10800816	0					
ANR	10801101	ExpressionStatement	ptr += MINBPC ( enc )	1342:6:35735:35753	10800816	41	True				
ANR	10801102	AssignmentExpression	ptr += MINBPC ( enc )		10800816	0		+=			
ANR	10801103	Identifier	ptr		10800816	0					
ANR	10801104	CallExpression	MINBPC ( enc )		10800816	1					
ANR	10801105	Callee	MINBPC		10800816	0					
ANR	10801106	Identifier	MINBPC		10800816	0					
ANR	10801107	ArgumentList	enc		10800816	1					
ANR	10801108	Argument	enc		10800816	0					
ANR	10801109	Identifier	enc		10800816	0					
ANR	10801110	BreakStatement	break ;	1343:6:35761:35766	10800816	42	True				
ANR	10801111	ExpressionStatement	* nextTokPtr = ptr	1346:2:35780:35797	10800816	4	True				
ANR	10801112	AssignmentExpression	* nextTokPtr = ptr		10800816	0		=			
ANR	10801113	UnaryOperationExpression	* nextTokPtr		10800816	0					
ANR	10801114	UnaryOperator	*		10800816	0					
ANR	10801115	Identifier	nextTokPtr		10800816	1					
ANR	10801116	Identifier	ptr		10800816	1					
ANR	10801117	ReturnStatement	return XML_TOK_DATA_CHARS ;	1347:2:35801:35826	10800816	5	True				
ANR	10801118	Identifier	XML_TOK_DATA_CHARS		10800816	0					
ANR	10801119	ReturnType	static int PTRCALL PREFIX		10800816	1					
ANR	10801120	Identifier	( entityValueTok )		10800816	2					
ANR	10801121	Identifier	entityValueTok		10800816	3					
ANR	10801122	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10800816	4					
ANR	10801123	Parameter	const ENCODING * enc	1288:23:33985:34003	10800816	0	True				
ANR	10801124	ParameterType	const ENCODING *		10800816	0					
ANR	10801125	Identifier	enc		10800816	1					
ANR	10801126	Parameter	const char * ptr	1288:44:34006:34020	10800816	1	True				
ANR	10801127	ParameterType	const char *		10800816	0					
ANR	10801128	Identifier	ptr		10800816	1					
ANR	10801129	Parameter	const char * end	1289:23:34046:34060	10800816	2	True				
ANR	10801130	ParameterType	const char *		10800816	0					
ANR	10801131	Identifier	end		10800816	1					
ANR	10801132	Parameter	const char * * nextTokPtr	1289:40:34063:34085	10800816	3	True				
ANR	10801133	ParameterType	const char * *		10800816	0					
ANR	10801134	Identifier	nextTokPtr		10800816	1					
ANR	10801135	CFGEntryNode	ENTRY		10800816		True				
ANR	10801136	CFGExitNode	EXIT		10800816		True				
ANR	10801137	Symbol	XML_TOK_DATA_CHARS		10800816						
ANR	10801138	Symbol	XML_TOK_INVALID		10800816						
ANR	10801139	Symbol	nextTokPtr		10800816						
ANR	10801140	Symbol	XML_TOK_PARTIAL		10800816						
ANR	10801141	Symbol	start		10800816						
ANR	10801142	Symbol	BYTE_TYPE		10800816						
ANR	10801143	Symbol	* nextTokPtr		10800816						
ANR	10801144	Symbol	MINBPC		10800816						
ANR	10801145	Symbol	n		10800816						
ANR	10801146	Symbol	BT_LF		10800816						
ANR	10801147	Symbol	ptr		10800816						
ANR	10801148	Symbol	scanRef		10800816						
ANR	10801149	Symbol	tok		10800816						
ANR	10801150	Symbol	XML_TOK_DATA_NEWLINE		10800816						
ANR	10801151	Symbol	PREFIX		10800816						
ANR	10801152	Symbol	XML_TOK_PERCENT		10800816						
ANR	10801153	Symbol	XML_TOK_NONE		10800816						
ANR	10801154	Symbol	end		10800816						
ANR	10801155	Symbol	enc		10800816						
ANR	10801156	Symbol	scanPercent		10800816						
ANR	10801157	Symbol	XML_TOK_TRAILING_CR		10800816						
ANR	10801158	Symbol	HAS_CHAR		10800816						
ANR	10801159	Function	ignoreSectionTok	1352:0:35847:37106							
ANR	10801160	FunctionDef	"ignoreSectionTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10801159	0					
ANR	10801161	CompoundStatement		1355:0:35996:37106	10801159	0					
ANR	10801162	IdentifierDeclStatement	int level = 0 ;	1356:2:36000:36013	10801159	0	True				
ANR	10801163	IdentifierDecl	level = 0		10801159	0					
ANR	10801164	IdentifierDeclType	int		10801159	0					
ANR	10801165	Identifier	level		10801159	1					
ANR	10801166	AssignmentExpression	level = 0		10801159	2		=			
ANR	10801167	Identifier	level		10801159	0					
ANR	10801168	PrimaryExpression	0		10801159	1					
ANR	10801169	IfStatement	if ( MINBPC ( enc ) > 1 )		10801159	1					
ANR	10801170	Condition	MINBPC ( enc ) > 1	1357:6:36021:36035	10801159	0	True				
ANR	10801171	RelationalExpression	MINBPC ( enc ) > 1		10801159	0		>			
ANR	10801172	CallExpression	MINBPC ( enc )		10801159	0					
ANR	10801173	Callee	MINBPC		10801159	0					
ANR	10801174	Identifier	MINBPC		10801159	0					
ANR	10801175	ArgumentList	enc		10801159	1					
ANR	10801176	Argument	enc		10801159	0					
ANR	10801177	Identifier	enc		10801159	0					
ANR	10801178	PrimaryExpression	1		10801159	1					
ANR	10801179	CompoundStatement		4:4:47:67	10801159	1					
ANR	10801180	IdentifierDeclStatement	size_t n = end - ptr ;	1358:4:36044:36064	10801159	0	True				
ANR	10801181	IdentifierDecl	n = end - ptr		10801159	0					
ANR	10801182	IdentifierDeclType	size_t		10801159	0					
ANR	10801183	Identifier	n		10801159	1					
ANR	10801184	AssignmentExpression	n = end - ptr		10801159	2		=			
ANR	10801185	Identifier	n		10801159	0					
ANR	10801186	AdditiveExpression	end - ptr		10801159	1		-			
ANR	10801187	Identifier	end		10801159	0					
ANR	10801188	Identifier	ptr		10801159	1					
ANR	10801189	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		10801159	1					
ANR	10801190	Condition	n & ( MINBPC ( enc ) - 1 )	1359:8:36074:36094	10801159	0	True				
ANR	10801191	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		10801159	0		&			
ANR	10801192	Identifier	n		10801159	0					
ANR	10801193	AdditiveExpression	MINBPC ( enc ) - 1		10801159	1		-			
ANR	10801194	CallExpression	MINBPC ( enc )		10801159	0					
ANR	10801195	Callee	MINBPC		10801159	0					
ANR	10801196	Identifier	MINBPC		10801159	0					
ANR	10801197	ArgumentList	enc		10801159	1					
ANR	10801198	Argument	enc		10801159	0					
ANR	10801199	Identifier	enc		10801159	0					
ANR	10801200	PrimaryExpression	1		10801159	1					
ANR	10801201	CompoundStatement		5:31:100:100	10801159	1					
ANR	10801202	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	1360:6:36105:36128	10801159	0	True				
ANR	10801203	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		10801159	0		&=			
ANR	10801204	Identifier	n		10801159	0					
ANR	10801205	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		10801159	1					
ANR	10801206	UnaryOperator	~		10801159	0					
ANR	10801207	AdditiveExpression	MINBPC ( enc ) - 1		10801159	1		-			
ANR	10801208	CallExpression	MINBPC ( enc )		10801159	0					
ANR	10801209	Callee	MINBPC		10801159	0					
ANR	10801210	Identifier	MINBPC		10801159	0					
ANR	10801211	ArgumentList	enc		10801159	1					
ANR	10801212	Argument	enc		10801159	0					
ANR	10801213	Identifier	enc		10801159	0					
ANR	10801214	PrimaryExpression	1		10801159	1					
ANR	10801215	ExpressionStatement	end = ptr + n	1361:6:36136:36149	10801159	1	True				
ANR	10801216	AssignmentExpression	end = ptr + n		10801159	0		=			
ANR	10801217	Identifier	end		10801159	0					
ANR	10801218	AdditiveExpression	ptr + n		10801159	1		+			
ANR	10801219	Identifier	ptr		10801159	0					
ANR	10801220	Identifier	n		10801159	1					
ANR	10801221	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10801159	2					
ANR	10801222	Condition	"HAS_CHAR ( enc , ptr , end )"	1364:9:36170:36192	10801159	0	True				
ANR	10801223	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10801159	0					
ANR	10801224	Callee	HAS_CHAR		10801159	0					
ANR	10801225	Identifier	HAS_CHAR		10801159	0					
ANR	10801226	ArgumentList	enc		10801159	1					
ANR	10801227	Argument	enc		10801159	0					
ANR	10801228	Identifier	enc		10801159	0					
ANR	10801229	Argument	ptr		10801159	1					
ANR	10801230	Identifier	ptr		10801159	0					
ANR	10801231	Argument	end		10801159	2					
ANR	10801232	Identifier	end		10801159	0					
ANR	10801233	CompoundStatement		10:34:198:198	10801159	1					
ANR	10801234	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10801159	0					
ANR	10801235	Condition	"BYTE_TYPE ( enc , ptr )"	1365:12:36209:36227	10801159	0	True				
ANR	10801236	CallExpression	"BYTE_TYPE ( enc , ptr )"		10801159	0					
ANR	10801237	Callee	BYTE_TYPE		10801159	0					
ANR	10801238	Identifier	BYTE_TYPE		10801159	0					
ANR	10801239	ArgumentList	enc		10801159	1					
ANR	10801240	Argument	enc		10801159	0					
ANR	10801241	Identifier	enc		10801159	0					
ANR	10801242	Argument	ptr		10801159	1					
ANR	10801243	Identifier	ptr		10801159	0					
ANR	10801244	CompoundStatement		11:33:233:233	10801159	1					
ANR	10801245	Statement	INVALID_CASES	1366:4:36236:36248	10801159	0	True				
ANR	10801246	Statement	(	1366:17:36249:36249	10801159	1	True				
ANR	10801247	Statement	ptr	1366:18:36250:36252	10801159	2	True				
ANR	10801248	Statement	","	1366:21:36253:36253	10801159	3	True				
ANR	10801249	Statement	nextTokPtr	1366:23:36255:36264	10801159	4	True				
ANR	10801250	Statement	)	1366:33:36265:36265	10801159	5	True				
ANR	10801251	Label	case BT_LT :	1367:4:36271:36281	10801159	6	True				
ANR	10801252	Identifier	BT_LT		10801159	0					
ANR	10801253	ExpressionStatement	ptr += MINBPC ( enc )	1368:6:36289:36307	10801159	7	True				
ANR	10801254	AssignmentExpression	ptr += MINBPC ( enc )		10801159	0		+=			
ANR	10801255	Identifier	ptr		10801159	0					
ANR	10801256	CallExpression	MINBPC ( enc )		10801159	1					
ANR	10801257	Callee	MINBPC		10801159	0					
ANR	10801258	Identifier	MINBPC		10801159	0					
ANR	10801259	ArgumentList	enc		10801159	1					
ANR	10801260	Argument	enc		10801159	0					
ANR	10801261	Identifier	enc		10801159	0					
ANR	10801262	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1369:6:36315:36342	10801159	8	True				
ANR	10801263	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10801159	0					
ANR	10801264	Callee	REQUIRE_CHAR		10801159	0					
ANR	10801265	Identifier	REQUIRE_CHAR		10801159	0					
ANR	10801266	ArgumentList	enc		10801159	1					
ANR	10801267	Argument	enc		10801159	0					
ANR	10801268	Identifier	enc		10801159	0					
ANR	10801269	Argument	ptr		10801159	1					
ANR	10801270	Identifier	ptr		10801159	0					
ANR	10801271	Argument	end		10801159	2					
ANR	10801272	Identifier	end		10801159	0					
ANR	10801273	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_EXCL ) )"		10801159	9					
ANR	10801274	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_EXCL )"	1370:10:36354:36387	10801159	0	True				
ANR	10801275	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_EXCL )"		10801159	0					
ANR	10801276	Callee	CHAR_MATCHES		10801159	0					
ANR	10801277	Identifier	CHAR_MATCHES		10801159	0					
ANR	10801278	ArgumentList	enc		10801159	1					
ANR	10801279	Argument	enc		10801159	0					
ANR	10801280	Identifier	enc		10801159	0					
ANR	10801281	Argument	ptr		10801159	1					
ANR	10801282	Identifier	ptr		10801159	0					
ANR	10801283	Argument	ASCII_EXCL		10801159	2					
ANR	10801284	Identifier	ASCII_EXCL		10801159	0					
ANR	10801285	CompoundStatement		16:46:393:393	10801159	1					
ANR	10801286	ExpressionStatement	ptr += MINBPC ( enc )	1371:8:36400:36418	10801159	0	True				
ANR	10801287	AssignmentExpression	ptr += MINBPC ( enc )		10801159	0		+=			
ANR	10801288	Identifier	ptr		10801159	0					
ANR	10801289	CallExpression	MINBPC ( enc )		10801159	1					
ANR	10801290	Callee	MINBPC		10801159	0					
ANR	10801291	Identifier	MINBPC		10801159	0					
ANR	10801292	ArgumentList	enc		10801159	1					
ANR	10801293	Argument	enc		10801159	0					
ANR	10801294	Identifier	enc		10801159	0					
ANR	10801295	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1372:8:36428:36455	10801159	1	True				
ANR	10801296	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10801159	0					
ANR	10801297	Callee	REQUIRE_CHAR		10801159	0					
ANR	10801298	Identifier	REQUIRE_CHAR		10801159	0					
ANR	10801299	ArgumentList	enc		10801159	1					
ANR	10801300	Argument	enc		10801159	0					
ANR	10801301	Identifier	enc		10801159	0					
ANR	10801302	Argument	ptr		10801159	1					
ANR	10801303	Identifier	ptr		10801159	0					
ANR	10801304	Argument	end		10801159	2					
ANR	10801305	Identifier	end		10801159	0					
ANR	10801306	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_LSQB ) )"		10801159	2					
ANR	10801307	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_LSQB )"	1373:12:36469:36502	10801159	0	True				
ANR	10801308	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_LSQB )"		10801159	0					
ANR	10801309	Callee	CHAR_MATCHES		10801159	0					
ANR	10801310	Identifier	CHAR_MATCHES		10801159	0					
ANR	10801311	ArgumentList	enc		10801159	1					
ANR	10801312	Argument	enc		10801159	0					
ANR	10801313	Identifier	enc		10801159	0					
ANR	10801314	Argument	ptr		10801159	1					
ANR	10801315	Identifier	ptr		10801159	0					
ANR	10801316	Argument	ASCII_LSQB		10801159	2					
ANR	10801317	Identifier	ASCII_LSQB		10801159	0					
ANR	10801318	CompoundStatement		19:48:508:508	10801159	1					
ANR	10801319	ExpressionStatement	++ level	1374:10:36517:36524	10801159	0	True				
ANR	10801320	UnaryExpression	++ level		10801159	0					
ANR	10801321	IncDec	++		10801159	0					
ANR	10801322	Identifier	level		10801159	1					
ANR	10801323	ExpressionStatement	ptr += MINBPC ( enc )	1375:10:36536:36554	10801159	1	True				
ANR	10801324	AssignmentExpression	ptr += MINBPC ( enc )		10801159	0		+=			
ANR	10801325	Identifier	ptr		10801159	0					
ANR	10801326	CallExpression	MINBPC ( enc )		10801159	1					
ANR	10801327	Callee	MINBPC		10801159	0					
ANR	10801328	Identifier	MINBPC		10801159	0					
ANR	10801329	ArgumentList	enc		10801159	1					
ANR	10801330	Argument	enc		10801159	0					
ANR	10801331	Identifier	enc		10801159	0					
ANR	10801332	BreakStatement	break ;	1378:6:36580:36585	10801159	10	True				
ANR	10801333	Label	case BT_RSQB :	1379:4:36591:36603	10801159	11	True				
ANR	10801334	Identifier	BT_RSQB		10801159	0					
ANR	10801335	ExpressionStatement	ptr += MINBPC ( enc )	1380:6:36611:36629	10801159	12	True				
ANR	10801336	AssignmentExpression	ptr += MINBPC ( enc )		10801159	0		+=			
ANR	10801337	Identifier	ptr		10801159	0					
ANR	10801338	CallExpression	MINBPC ( enc )		10801159	1					
ANR	10801339	Callee	MINBPC		10801159	0					
ANR	10801340	Identifier	MINBPC		10801159	0					
ANR	10801341	ArgumentList	enc		10801159	1					
ANR	10801342	Argument	enc		10801159	0					
ANR	10801343	Identifier	enc		10801159	0					
ANR	10801344	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1381:6:36637:36664	10801159	13	True				
ANR	10801345	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10801159	0					
ANR	10801346	Callee	REQUIRE_CHAR		10801159	0					
ANR	10801347	Identifier	REQUIRE_CHAR		10801159	0					
ANR	10801348	ArgumentList	enc		10801159	1					
ANR	10801349	Argument	enc		10801159	0					
ANR	10801350	Identifier	enc		10801159	0					
ANR	10801351	Argument	ptr		10801159	1					
ANR	10801352	Identifier	ptr		10801159	0					
ANR	10801353	Argument	end		10801159	2					
ANR	10801354	Identifier	end		10801159	0					
ANR	10801355	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		10801159	14					
ANR	10801356	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	1382:10:36676:36709	10801159	0	True				
ANR	10801357	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		10801159	0					
ANR	10801358	Callee	CHAR_MATCHES		10801159	0					
ANR	10801359	Identifier	CHAR_MATCHES		10801159	0					
ANR	10801360	ArgumentList	enc		10801159	1					
ANR	10801361	Argument	enc		10801159	0					
ANR	10801362	Identifier	enc		10801159	0					
ANR	10801363	Argument	ptr		10801159	1					
ANR	10801364	Identifier	ptr		10801159	0					
ANR	10801365	Argument	ASCII_RSQB		10801159	2					
ANR	10801366	Identifier	ASCII_RSQB		10801159	0					
ANR	10801367	CompoundStatement		28:46:715:715	10801159	1					
ANR	10801368	ExpressionStatement	ptr += MINBPC ( enc )	1383:8:36722:36740	10801159	0	True				
ANR	10801369	AssignmentExpression	ptr += MINBPC ( enc )		10801159	0		+=			
ANR	10801370	Identifier	ptr		10801159	0					
ANR	10801371	CallExpression	MINBPC ( enc )		10801159	1					
ANR	10801372	Callee	MINBPC		10801159	0					
ANR	10801373	Identifier	MINBPC		10801159	0					
ANR	10801374	ArgumentList	enc		10801159	1					
ANR	10801375	Argument	enc		10801159	0					
ANR	10801376	Identifier	enc		10801159	0					
ANR	10801377	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1384:8:36750:36777	10801159	1	True				
ANR	10801378	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		10801159	0					
ANR	10801379	Callee	REQUIRE_CHAR		10801159	0					
ANR	10801380	Identifier	REQUIRE_CHAR		10801159	0					
ANR	10801381	ArgumentList	enc		10801159	1					
ANR	10801382	Argument	enc		10801159	0					
ANR	10801383	Identifier	enc		10801159	0					
ANR	10801384	Argument	ptr		10801159	1					
ANR	10801385	Identifier	ptr		10801159	0					
ANR	10801386	Argument	end		10801159	2					
ANR	10801387	Identifier	end		10801159	0					
ANR	10801388	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		10801159	2					
ANR	10801389	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"	1385:12:36791:36822	10801159	0	True				
ANR	10801390	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		10801159	0					
ANR	10801391	Callee	CHAR_MATCHES		10801159	0					
ANR	10801392	Identifier	CHAR_MATCHES		10801159	0					
ANR	10801393	ArgumentList	enc		10801159	1					
ANR	10801394	Argument	enc		10801159	0					
ANR	10801395	Identifier	enc		10801159	0					
ANR	10801396	Argument	ptr		10801159	1					
ANR	10801397	Identifier	ptr		10801159	0					
ANR	10801398	Argument	ASCII_GT		10801159	2					
ANR	10801399	Identifier	ASCII_GT		10801159	0					
ANR	10801400	CompoundStatement		31:46:828:828	10801159	1					
ANR	10801401	ExpressionStatement	ptr += MINBPC ( enc )	1386:10:36837:36855	10801159	0	True				
ANR	10801402	AssignmentExpression	ptr += MINBPC ( enc )		10801159	0		+=			
ANR	10801403	Identifier	ptr		10801159	0					
ANR	10801404	CallExpression	MINBPC ( enc )		10801159	1					
ANR	10801405	Callee	MINBPC		10801159	0					
ANR	10801406	Identifier	MINBPC		10801159	0					
ANR	10801407	ArgumentList	enc		10801159	1					
ANR	10801408	Argument	enc		10801159	0					
ANR	10801409	Identifier	enc		10801159	0					
ANR	10801410	IfStatement	if ( level == 0 )		10801159	1					
ANR	10801411	Condition	level == 0	1387:14:36871:36880	10801159	0	True				
ANR	10801412	EqualityExpression	level == 0		10801159	0		==			
ANR	10801413	Identifier	level		10801159	0					
ANR	10801414	PrimaryExpression	0		10801159	1					
ANR	10801415	CompoundStatement		33:26:886:886	10801159	1					
ANR	10801416	ExpressionStatement	* nextTokPtr = ptr	1388:12:36897:36914	10801159	0	True				
ANR	10801417	AssignmentExpression	* nextTokPtr = ptr		10801159	0		=			
ANR	10801418	UnaryOperationExpression	* nextTokPtr		10801159	0					
ANR	10801419	UnaryOperator	*		10801159	0					
ANR	10801420	Identifier	nextTokPtr		10801159	1					
ANR	10801421	Identifier	ptr		10801159	1					
ANR	10801422	ReturnStatement	return XML_TOK_IGNORE_SECT ;	1389:12:36928:36954	10801159	1	True				
ANR	10801423	Identifier	XML_TOK_IGNORE_SECT		10801159	0					
ANR	10801424	ExpressionStatement	-- level	1391:10:36978:36985	10801159	2	True				
ANR	10801425	UnaryExpression	-- level		10801159	0					
ANR	10801426	IncDec	--		10801159	0					
ANR	10801427	Identifier	level		10801159	1					
ANR	10801428	BreakStatement	break ;	1394:6:37011:37016	10801159	15	True				
ANR	10801429	Label	default :	1395:4:37022:37029	10801159	16	True				
ANR	10801430	Identifier	default		10801159	0					
ANR	10801431	ExpressionStatement	ptr += MINBPC ( enc )	1396:6:37037:37055	10801159	17	True				
ANR	10801432	AssignmentExpression	ptr += MINBPC ( enc )		10801159	0		+=			
ANR	10801433	Identifier	ptr		10801159	0					
ANR	10801434	CallExpression	MINBPC ( enc )		10801159	1					
ANR	10801435	Callee	MINBPC		10801159	0					
ANR	10801436	Identifier	MINBPC		10801159	0					
ANR	10801437	ArgumentList	enc		10801159	1					
ANR	10801438	Argument	enc		10801159	0					
ANR	10801439	Identifier	enc		10801159	0					
ANR	10801440	BreakStatement	break ;	1397:6:37063:37068	10801159	18	True				
ANR	10801441	ReturnStatement	return XML_TOK_PARTIAL ;	1400:2:37082:37104	10801159	3	True				
ANR	10801442	Identifier	XML_TOK_PARTIAL		10801159	0					
ANR	10801443	ReturnType	static int PTRCALL PREFIX		10801159	1					
ANR	10801444	Identifier	( ignoreSectionTok )		10801159	2					
ANR	10801445	Identifier	ignoreSectionTok		10801159	3					
ANR	10801446	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10801159	4					
ANR	10801447	Parameter	const ENCODING * enc	1353:25:35891:35909	10801159	0	True				
ANR	10801448	ParameterType	const ENCODING *		10801159	0					
ANR	10801449	Identifier	enc		10801159	1					
ANR	10801450	Parameter	const char * ptr	1353:46:35912:35926	10801159	1	True				
ANR	10801451	ParameterType	const char *		10801159	0					
ANR	10801452	Identifier	ptr		10801159	1					
ANR	10801453	Parameter	const char * end	1354:25:35954:35968	10801159	2	True				
ANR	10801454	ParameterType	const char *		10801159	0					
ANR	10801455	Identifier	end		10801159	1					
ANR	10801456	Parameter	const char * * nextTokPtr	1354:42:35971:35993	10801159	3	True				
ANR	10801457	ParameterType	const char * *		10801159	0					
ANR	10801458	Identifier	nextTokPtr		10801159	1					
ANR	10801459	CFGEntryNode	ENTRY		10801159		True				
ANR	10801460	CFGExitNode	EXIT		10801159		True				
ANR	10801461	Symbol	nextTokPtr		10801159						
ANR	10801462	Symbol	level		10801159						
ANR	10801463	Symbol	XML_TOK_PARTIAL		10801159						
ANR	10801464	Symbol	BYTE_TYPE		10801159						
ANR	10801465	Symbol	* nextTokPtr		10801159						
ANR	10801466	Symbol	MINBPC		10801159						
ANR	10801467	Symbol	n		10801159						
ANR	10801468	Symbol	ptr		10801159						
ANR	10801469	Symbol	CHAR_MATCHES		10801159						
ANR	10801470	Symbol	ASCII_EXCL		10801159						
ANR	10801471	Symbol	XML_TOK_IGNORE_SECT		10801159						
ANR	10801472	Symbol	ASCII_GT		10801159						
ANR	10801473	Symbol	end		10801159						
ANR	10801474	Symbol	enc		10801159						
ANR	10801475	Symbol	HAS_CHAR		10801159						
ANR	10801476	Symbol	ASCII_LSQB		10801159						
ANR	10801477	Symbol	ASCII_RSQB		10801159						
ANR	10801478	Function	isPublicId	1405:0:37131:38219							
ANR	10801479	FunctionDef	"isPublicId (const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr)"		10801478	0					
ANR	10801480	CompoundStatement		1408:0:37264:38219	10801478	0					
ANR	10801481	ExpressionStatement	ptr += MINBPC ( enc )	1409:2:37268:37286	10801478	0	True				
ANR	10801482	AssignmentExpression	ptr += MINBPC ( enc )		10801478	0		+=			
ANR	10801483	Identifier	ptr		10801478	0					
ANR	10801484	CallExpression	MINBPC ( enc )		10801478	1					
ANR	10801485	Callee	MINBPC		10801478	0					
ANR	10801486	Identifier	MINBPC		10801478	0					
ANR	10801487	ArgumentList	enc		10801478	1					
ANR	10801488	Argument	enc		10801478	0					
ANR	10801489	Identifier	enc		10801478	0					
ANR	10801490	ExpressionStatement	end -= MINBPC ( enc )	1410:2:37290:37308	10801478	1	True				
ANR	10801491	AssignmentExpression	end -= MINBPC ( enc )		10801478	0		-=			
ANR	10801492	Identifier	end		10801478	0					
ANR	10801493	CallExpression	MINBPC ( enc )		10801478	1					
ANR	10801494	Callee	MINBPC		10801478	0					
ANR	10801495	Identifier	MINBPC		10801478	0					
ANR	10801496	ArgumentList	enc		10801478	1					
ANR	10801497	Argument	enc		10801478	0					
ANR	10801498	Identifier	enc		10801478	0					
ANR	10801499	ForStatement	"for ( ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		10801478	2					
ANR	10801500	Condition	"HAS_CHAR ( enc , ptr , end )"	1411:9:37319:37341	10801478	0	True				
ANR	10801501	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10801478	0					
ANR	10801502	Callee	HAS_CHAR		10801478	0					
ANR	10801503	Identifier	HAS_CHAR		10801478	0					
ANR	10801504	ArgumentList	enc		10801478	1					
ANR	10801505	Argument	enc		10801478	0					
ANR	10801506	Identifier	enc		10801478	0					
ANR	10801507	Argument	ptr		10801478	1					
ANR	10801508	Identifier	ptr		10801478	0					
ANR	10801509	Argument	end		10801478	2					
ANR	10801510	Identifier	end		10801478	0					
ANR	10801511	AssignmentExpression	ptr += MINBPC ( enc )	1411:34:37344:37361	10801478	1	True	+=			
ANR	10801512	Identifier	ptr		10801478	0					
ANR	10801513	CallExpression	MINBPC ( enc )		10801478	1					
ANR	10801514	Callee	MINBPC		10801478	0					
ANR	10801515	Identifier	MINBPC		10801478	0					
ANR	10801516	ArgumentList	enc		10801478	1					
ANR	10801517	Argument	enc		10801478	0					
ANR	10801518	Identifier	enc		10801478	0					
ANR	10801519	CompoundStatement		4:54:99:99	10801478	2					
ANR	10801520	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10801478	0					
ANR	10801521	Condition	"BYTE_TYPE ( enc , ptr )"	1412:12:37378:37396	10801478	0	True				
ANR	10801522	CallExpression	"BYTE_TYPE ( enc , ptr )"		10801478	0					
ANR	10801523	Callee	BYTE_TYPE		10801478	0					
ANR	10801524	Identifier	BYTE_TYPE		10801478	0					
ANR	10801525	ArgumentList	enc		10801478	1					
ANR	10801526	Argument	enc		10801478	0					
ANR	10801527	Identifier	enc		10801478	0					
ANR	10801528	Argument	ptr		10801478	1					
ANR	10801529	Identifier	ptr		10801478	0					
ANR	10801530	CompoundStatement		5:33:134:134	10801478	1					
ANR	10801531	Label	case BT_DIGIT :	1413:4:37405:37418	10801478	0	True				
ANR	10801532	Identifier	BT_DIGIT		10801478	0					
ANR	10801533	Label	case BT_HEX :	1414:4:37424:37435	10801478	1	True				
ANR	10801534	Identifier	BT_HEX		10801478	0					
ANR	10801535	Label	case BT_MINUS :	1415:4:37441:37454	10801478	2	True				
ANR	10801536	Identifier	BT_MINUS		10801478	0					
ANR	10801537	Label	case BT_APOS :	1416:4:37460:37472	10801478	3	True				
ANR	10801538	Identifier	BT_APOS		10801478	0					
ANR	10801539	Label	case BT_LPAR :	1417:4:37478:37490	10801478	4	True				
ANR	10801540	Identifier	BT_LPAR		10801478	0					
ANR	10801541	Label	case BT_RPAR :	1418:4:37496:37508	10801478	5	True				
ANR	10801542	Identifier	BT_RPAR		10801478	0					
ANR	10801543	Label	case BT_PLUS :	1419:4:37514:37526	10801478	6	True				
ANR	10801544	Identifier	BT_PLUS		10801478	0					
ANR	10801545	Label	case BT_COMMA :	1420:4:37532:37545	10801478	7	True				
ANR	10801546	Identifier	BT_COMMA		10801478	0					
ANR	10801547	Label	case BT_SOL :	1421:4:37551:37562	10801478	8	True				
ANR	10801548	Identifier	BT_SOL		10801478	0					
ANR	10801549	Label	case BT_EQUALS :	1422:4:37568:37582	10801478	9	True				
ANR	10801550	Identifier	BT_EQUALS		10801478	0					
ANR	10801551	Label	case BT_QUEST :	1423:4:37588:37601	10801478	10	True				
ANR	10801552	Identifier	BT_QUEST		10801478	0					
ANR	10801553	Label	case BT_CR :	1424:4:37607:37617	10801478	11	True				
ANR	10801554	Identifier	BT_CR		10801478	0					
ANR	10801555	Label	case BT_LF :	1425:4:37623:37633	10801478	12	True				
ANR	10801556	Identifier	BT_LF		10801478	0					
ANR	10801557	Label	case BT_SEMI :	1426:4:37639:37651	10801478	13	True				
ANR	10801558	Identifier	BT_SEMI		10801478	0					
ANR	10801559	Label	case BT_EXCL :	1427:4:37657:37669	10801478	14	True				
ANR	10801560	Identifier	BT_EXCL		10801478	0					
ANR	10801561	Label	case BT_AST :	1428:4:37675:37686	10801478	15	True				
ANR	10801562	Identifier	BT_AST		10801478	0					
ANR	10801563	Label	case BT_PERCNT :	1429:4:37692:37706	10801478	16	True				
ANR	10801564	Identifier	BT_PERCNT		10801478	0					
ANR	10801565	Label	case BT_NUM :	1430:4:37712:37723	10801478	17	True				
ANR	10801566	Identifier	BT_NUM		10801478	0					
ANR	10801567	Label	case BT_COLON :	1432:4:37743:37756	10801478	18	True				
ANR	10801568	Identifier	BT_COLON		10801478	0					
ANR	10801569	BreakStatement	break ;	1434:6:37771:37776	10801478	19	True				
ANR	10801570	Label	case BT_S :	1435:4:37782:37791	10801478	20	True				
ANR	10801571	Identifier	BT_S		10801478	0					
ANR	10801572	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_TAB ) )"		10801478	21					
ANR	10801573	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_TAB )"	1436:10:37803:37835	10801478	0	True				
ANR	10801574	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_TAB )"		10801478	0					
ANR	10801575	Callee	CHAR_MATCHES		10801478	0					
ANR	10801576	Identifier	CHAR_MATCHES		10801478	0					
ANR	10801577	ArgumentList	enc		10801478	1					
ANR	10801578	Argument	enc		10801478	0					
ANR	10801579	Identifier	enc		10801478	0					
ANR	10801580	Argument	ptr		10801478	1					
ANR	10801581	Identifier	ptr		10801478	0					
ANR	10801582	Argument	ASCII_TAB		10801478	2					
ANR	10801583	Identifier	ASCII_TAB		10801478	0					
ANR	10801584	CompoundStatement		29:45:573:573	10801478	1					
ANR	10801585	ExpressionStatement	* badPtr = ptr	1437:8:37848:37861	10801478	0	True				
ANR	10801586	AssignmentExpression	* badPtr = ptr		10801478	0		=			
ANR	10801587	UnaryOperationExpression	* badPtr		10801478	0					
ANR	10801588	UnaryOperator	*		10801478	0					
ANR	10801589	Identifier	badPtr		10801478	1					
ANR	10801590	Identifier	ptr		10801478	1					
ANR	10801591	ReturnStatement	return 0 ;	1438:8:37871:37879	10801478	1	True				
ANR	10801592	PrimaryExpression	0		10801478	0					
ANR	10801593	BreakStatement	break ;	1440:6:37895:37900	10801478	22	True				
ANR	10801594	Label	case BT_NAME :	1441:4:37906:37918	10801478	23	True				
ANR	10801595	Identifier	BT_NAME		10801478	0					
ANR	10801596	Label	case BT_NMSTRT :	1442:4:37924:37938	10801478	24	True				
ANR	10801597	Identifier	BT_NMSTRT		10801478	0					
ANR	10801598	IfStatement	"if ( ! ( BYTE_TO_ASCII ( enc , ptr ) & ~0x7f ) )"		10801478	25					
ANR	10801599	Condition	"! ( BYTE_TO_ASCII ( enc , ptr ) & ~0x7f )"	1443:10:37950:37983	10801478	0	True				
ANR	10801600	UnaryOperationExpression	"! ( BYTE_TO_ASCII ( enc , ptr ) & ~0x7f )"		10801478	0					
ANR	10801601	UnaryOperator	!		10801478	0					
ANR	10801602	BitAndExpression	"BYTE_TO_ASCII ( enc , ptr ) & ~0x7f"		10801478	1		&			
ANR	10801603	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10801478	0					
ANR	10801604	Callee	BYTE_TO_ASCII		10801478	0					
ANR	10801605	Identifier	BYTE_TO_ASCII		10801478	0					
ANR	10801606	ArgumentList	enc		10801478	1					
ANR	10801607	Argument	enc		10801478	0					
ANR	10801608	Identifier	enc		10801478	0					
ANR	10801609	Argument	ptr		10801478	1					
ANR	10801610	Identifier	ptr		10801478	0					
ANR	10801611	Identifier	~0x7f		10801478	1					
ANR	10801612	BreakStatement	break ;	1444:8:37994:37999	10801478	1	True				
ANR	10801613	Label	default :	1445:4:38005:38012	10801478	26	True				
ANR	10801614	Identifier	default		10801478	0					
ANR	10801615	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		10801478	27					
ANR	10801616	Condition	"BYTE_TO_ASCII ( enc , ptr )"	1446:14:38028:38050	10801478	0	True				
ANR	10801617	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10801478	0					
ANR	10801618	Callee	BYTE_TO_ASCII		10801478	0					
ANR	10801619	Identifier	BYTE_TO_ASCII		10801478	0					
ANR	10801620	ArgumentList	enc		10801478	1					
ANR	10801621	Argument	enc		10801478	0					
ANR	10801622	Identifier	enc		10801478	0					
ANR	10801623	Argument	ptr		10801478	1					
ANR	10801624	Identifier	ptr		10801478	0					
ANR	10801625	CompoundStatement		39:39:788:788	10801478	1					
ANR	10801626	Label	case 0x24 :	1447:6:38061:38070	10801478	0	True				
ANR	10801627	Label	case 0x40 :	1448:6:38086:38095	10801478	1	True				
ANR	10801628	BreakStatement	break ;	1449:8:38113:38118	10801478	2	True				
ANR	10801629	Label	default :	1450:6:38126:38133	10801478	3	True				
ANR	10801630	Identifier	default		10801478	0					
ANR	10801631	ExpressionStatement	* badPtr = ptr	1451:8:38143:38156	10801478	4	True				
ANR	10801632	AssignmentExpression	* badPtr = ptr		10801478	0		=			
ANR	10801633	UnaryOperationExpression	* badPtr		10801478	0					
ANR	10801634	UnaryOperator	*		10801478	0					
ANR	10801635	Identifier	badPtr		10801478	1					
ANR	10801636	Identifier	ptr		10801478	1					
ANR	10801637	ReturnStatement	return 0 ;	1452:8:38166:38174	10801478	5	True				
ANR	10801638	PrimaryExpression	0		10801478	0					
ANR	10801639	BreakStatement	break ;	1454:6:38190:38195	10801478	28	True				
ANR	10801640	ReturnStatement	return 1 ;	1457:2:38209:38217	10801478	3	True				
ANR	10801641	PrimaryExpression	1		10801478	0					
ANR	10801642	ReturnType	static int PTRCALL PREFIX		10801478	1					
ANR	10801643	Identifier	( isPublicId )		10801478	2					
ANR	10801644	Identifier	isPublicId		10801478	3					
ANR	10801645	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr"		10801478	4					
ANR	10801646	Parameter	const ENCODING * enc	1406:19:37169:37187	10801478	0	True				
ANR	10801647	ParameterType	const ENCODING *		10801478	0					
ANR	10801648	Identifier	enc		10801478	1					
ANR	10801649	Parameter	const char * ptr	1406:40:37190:37204	10801478	1	True				
ANR	10801650	ParameterType	const char *		10801478	0					
ANR	10801651	Identifier	ptr		10801478	1					
ANR	10801652	Parameter	const char * end	1406:57:37207:37221	10801478	2	True				
ANR	10801653	ParameterType	const char *		10801478	0					
ANR	10801654	Identifier	end		10801478	1					
ANR	10801655	Parameter	const char * * badPtr	1407:19:37243:37261	10801478	3	True				
ANR	10801656	ParameterType	const char * *		10801478	0					
ANR	10801657	Identifier	badPtr		10801478	1					
ANR	10801658	CFGEntryNode	ENTRY		10801478		True				
ANR	10801659	CFGExitNode	EXIT		10801478		True				
ANR	10801660	Symbol	ASCII_TAB		10801478						
ANR	10801661	Symbol	CHAR_MATCHES		10801478						
ANR	10801662	Symbol	~0x7f		10801478						
ANR	10801663	Symbol	* badPtr		10801478						
ANR	10801664	Symbol	BYTE_TYPE		10801478						
ANR	10801665	Symbol	badPtr		10801478						
ANR	10801666	Symbol	end		10801478						
ANR	10801667	Symbol	enc		10801478						
ANR	10801668	Symbol	MINBPC		10801478						
ANR	10801669	Symbol	HAS_CHAR		10801478						
ANR	10801670	Symbol	ptr		10801478						
ANR	10801671	Symbol	BYTE_TO_ASCII		10801478						
ANR	10801672	Function	getAtts	1465:0:38407:40984							
ANR	10801673	FunctionDef	"getAtts (const ENCODING * enc , const char * ptr , int attsMax , ATTRIBUTE * atts)"		10801672	0					
ANR	10801674	CompoundStatement		1468:0:38526:40984	10801672	0					
ANR	10801675	ClassDefStatement	"enum { other , inName , inValue } state = inName ;"	1469:2:38530:38576	10801672	0	True				
ANR	10801676	IdentifierDecl	state = inName		10801672	0					
ANR	10801677	IdentifierDeclType			10801672	0					
ANR	10801678	Identifier	state		10801672	1					
ANR	10801679	AssignmentExpression	state = inName		10801672	2		=			
ANR	10801680	Identifier	inName		10801672	0					
ANR	10801681	Identifier	inName		10801672	1					
ANR	10801682	IdentifierDeclStatement	int nAtts = 0 ;	1470:2:38580:38593	10801672	1	True				
ANR	10801683	IdentifierDecl	nAtts = 0		10801672	0					
ANR	10801684	IdentifierDeclType	int		10801672	0					
ANR	10801685	Identifier	nAtts		10801672	1					
ANR	10801686	AssignmentExpression	nAtts = 0		10801672	2		=			
ANR	10801687	Identifier	nAtts		10801672	0					
ANR	10801688	PrimaryExpression	0		10801672	1					
ANR	10801689	IdentifierDeclStatement	int open = 0 ;	1471:2:38597:38609	10801672	2	True				
ANR	10801690	IdentifierDecl	open = 0		10801672	0					
ANR	10801691	IdentifierDeclType	int		10801672	0					
ANR	10801692	Identifier	open		10801672	1					
ANR	10801693	AssignmentExpression	open = 0		10801672	2		=			
ANR	10801694	Identifier	open		10801672	0					
ANR	10801695	PrimaryExpression	0		10801672	1					
ANR	10801696	ForStatement	for ( ptr += MINBPC ( enc ) ; ; ptr += MINBPC ( enc ) )		10801672	3					
ANR	10801697	ForInit	ptr += MINBPC ( enc ) ;	1474:7:38716:38734	10801672	0	True				
ANR	10801698	AssignmentExpression	ptr += MINBPC ( enc )		10801672	0		+=			
ANR	10801699	Identifier	ptr		10801672	0					
ANR	10801700	CallExpression	MINBPC ( enc )		10801672	1					
ANR	10801701	Callee	MINBPC		10801672	0					
ANR	10801702	Identifier	MINBPC		10801672	0					
ANR	10801703	ArgumentList	enc		10801672	1					
ANR	10801704	Argument	enc		10801672	0					
ANR	10801705	Identifier	enc		10801672	0					
ANR	10801706	AssignmentExpression	ptr += MINBPC ( enc )	1474:28:38737:38754	10801672	1	True	+=			
ANR	10801707	Identifier	ptr		10801672	0					
ANR	10801708	CallExpression	MINBPC ( enc )		10801672	1					
ANR	10801709	Callee	MINBPC		10801672	0					
ANR	10801710	Identifier	MINBPC		10801672	0					
ANR	10801711	ArgumentList	enc		10801672	1					
ANR	10801712	Argument	enc		10801672	0					
ANR	10801713	Identifier	enc		10801672	0					
ANR	10801714	CompoundStatement		7:48:230:230	10801672	2					
ANR	10801715	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10801672	0					
ANR	10801716	Condition	"BYTE_TYPE ( enc , ptr )"	1475:12:38771:38789	10801672	0	True				
ANR	10801717	CallExpression	"BYTE_TYPE ( enc , ptr )"		10801672	0					
ANR	10801718	Callee	BYTE_TYPE		10801672	0					
ANR	10801719	Identifier	BYTE_TYPE		10801672	0					
ANR	10801720	ArgumentList	enc		10801672	1					
ANR	10801721	Argument	enc		10801672	0					
ANR	10801722	Identifier	enc		10801672	0					
ANR	10801723	Argument	ptr		10801672	1					
ANR	10801724	Identifier	ptr		10801672	0					
ANR	10801725	CompoundStatement		8:33:265:265	10801672	1					
ANR	10801726	Statement	define	1476:1:38795:38800	10801672	0	True				
ANR	10801727	Statement	START_NAME	1476:8:38802:38811	10801672	1	True				
ANR	10801728	IfStatement	if ( state == other )		10801672	2					
ANR	10801729	Condition	state == other	1477:10:38825:38838	10801672	0	True				
ANR	10801730	EqualityExpression	state == other		10801672	0		==			
ANR	10801731	Identifier	state		10801672	0					
ANR	10801732	Identifier	other		10801672	1					
ANR	10801733	CompoundStatement		10:26:314:314	10801672	1					
ANR	10801734	IfStatement	if ( nAtts < attsMax )		10801672	0					
ANR	10801735	Condition	nAtts < attsMax	1478:12:38857:38871	10801672	0	True				
ANR	10801736	RelationalExpression	nAtts < attsMax		10801672	0		<			
ANR	10801737	Identifier	nAtts		10801672	0					
ANR	10801738	Identifier	attsMax		10801672	1					
ANR	10801739	CompoundStatement		11:29:347:347	10801672	1					
ANR	10801740	ExpressionStatement	atts [ nAtts ] . name = ptr	1479:10:38888:38910	10801672	0	True				
ANR	10801741	AssignmentExpression	atts [ nAtts ] . name = ptr		10801672	0		=			
ANR	10801742	MemberAccess	atts [ nAtts ] . name		10801672	0					
ANR	10801743	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801744	Identifier	atts		10801672	0					
ANR	10801745	Identifier	nAtts		10801672	1					
ANR	10801746	Identifier	name		10801672	1					
ANR	10801747	Identifier	ptr		10801672	1					
ANR	10801748	ExpressionStatement	atts [ nAtts ] . normalized = 1	1480:10:38924:38950	10801672	1	True				
ANR	10801749	AssignmentExpression	atts [ nAtts ] . normalized = 1		10801672	0		=			
ANR	10801750	MemberAccess	atts [ nAtts ] . normalized		10801672	0					
ANR	10801751	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801752	Identifier	atts		10801672	0					
ANR	10801753	Identifier	nAtts		10801672	1					
ANR	10801754	Identifier	normalized		10801672	1					
ANR	10801755	PrimaryExpression	1		10801672	1					
ANR	10801756	ExpressionStatement	state = inName	1482:8:38974:38988	10801672	1	True				
ANR	10801757	AssignmentExpression	state = inName		10801672	0		=			
ANR	10801758	Identifier	state		10801672	0					
ANR	10801759	Identifier	inName		10801672	1					
ANR	10801760	Statement	define	1484:1:39001:39006	10801672	3	True				
ANR	10801761	Statement	LEAD_CASE	1484:8:39008:39016	10801672	4	True				
ANR	10801762	Statement	(	1484:17:39017:39017	10801672	5	True				
ANR	10801763	Statement	n	1484:18:39018:39018	10801672	6	True				
ANR	10801764	Statement	)	1484:19:39019:39019	10801672	7	True				
ANR	10801765	Statement	case	1485:4:39027:39030	10801672	8	True				
ANR	10801766	Statement	BT_LEAD	1485:9:39032:39038	10801672	9	True				
ANR	10801767	Label	n :	1485:20:39043:39044	10801672	10	True				
ANR	10801768	Identifier	n		10801672	0					
ANR	10801769	Statement	START_NAME	1485:23:39046:39055	10801672	11	True				
ANR	10801770	ExpressionStatement	ptr += ( n - MINBPC ( enc ) )	1485:34:39057:39081	10801672	12	True				
ANR	10801771	AssignmentExpression	ptr += ( n - MINBPC ( enc ) )		10801672	0		+=			
ANR	10801772	Identifier	ptr		10801672	0					
ANR	10801773	AdditiveExpression	n - MINBPC ( enc )		10801672	1		-			
ANR	10801774	Identifier	n		10801672	0					
ANR	10801775	CallExpression	MINBPC ( enc )		10801672	1					
ANR	10801776	Callee	MINBPC		10801672	0					
ANR	10801777	Identifier	MINBPC		10801672	0					
ANR	10801778	ArgumentList	enc		10801672	1					
ANR	10801779	Argument	enc		10801672	0					
ANR	10801780	Identifier	enc		10801672	0					
ANR	10801781	BreakStatement	break ;	1485:60:39083:39088	10801672	13	True				
ANR	10801782	Statement	LEAD_CASE	1486:4:39094:39102	10801672	14	True				
ANR	10801783	Statement	(	1486:13:39103:39103	10801672	15	True				
ANR	10801784	Statement	2	1486:14:39104:39104	10801672	16	True				
ANR	10801785	Statement	)	1486:15:39105:39105	10801672	17	True				
ANR	10801786	Statement	LEAD_CASE	1486:17:39107:39115	10801672	18	True				
ANR	10801787	Statement	(	1486:26:39116:39116	10801672	19	True				
ANR	10801788	Statement	3	1486:27:39117:39117	10801672	20	True				
ANR	10801789	Statement	)	1486:28:39118:39118	10801672	21	True				
ANR	10801790	Statement	LEAD_CASE	1486:30:39120:39128	10801672	22	True				
ANR	10801791	Statement	(	1486:39:39129:39129	10801672	23	True				
ANR	10801792	Statement	4	1486:40:39130:39130	10801672	24	True				
ANR	10801793	Statement	)	1486:41:39131:39131	10801672	25	True				
ANR	10801794	Statement	undef	1487:1:39134:39138	10801672	26	True				
ANR	10801795	Statement	LEAD_CASE	1487:7:39140:39148	10801672	27	True				
ANR	10801796	Label	case BT_NONASCII :	1488:4:39154:39170	10801672	28	True				
ANR	10801797	Identifier	BT_NONASCII		10801672	0					
ANR	10801798	Label	case BT_NMSTRT :	1489:4:39176:39190	10801672	29	True				
ANR	10801799	Identifier	BT_NMSTRT		10801672	0					
ANR	10801800	Label	case BT_HEX :	1490:4:39196:39207	10801672	30	True				
ANR	10801801	Identifier	BT_HEX		10801672	0					
ANR	10801802	Statement	START_NAME	1491:6:39215:39224	10801672	31	True				
ANR	10801803	BreakStatement	break ;	1492:6:39232:39237	10801672	32	True				
ANR	10801804	Statement	undef	1493:1:39240:39244	10801672	33	True				
ANR	10801805	Statement	START_NAME	1493:7:39246:39255	10801672	34	True				
ANR	10801806	Label	case BT_QUOT :	1494:4:39261:39273	10801672	35	True				
ANR	10801807	Identifier	BT_QUOT		10801672	0					
ANR	10801808	IfStatement	if ( state != inValue )		10801672	36					
ANR	10801809	Condition	state != inValue	1495:10:39285:39300	10801672	0	True				
ANR	10801810	EqualityExpression	state != inValue		10801672	0		!=			
ANR	10801811	Identifier	state		10801672	0					
ANR	10801812	Identifier	inValue		10801672	1					
ANR	10801813	CompoundStatement		28:28:776:776	10801672	1					
ANR	10801814	IfStatement	if ( nAtts < attsMax )		10801672	0					
ANR	10801815	Condition	nAtts < attsMax	1496:12:39317:39331	10801672	0	True				
ANR	10801816	RelationalExpression	nAtts < attsMax		10801672	0		<			
ANR	10801817	Identifier	nAtts		10801672	0					
ANR	10801818	Identifier	attsMax		10801672	1					
ANR	10801819	ExpressionStatement	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )	1497:10:39344:39384	10801672	1	True				
ANR	10801820	AssignmentExpression	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )		10801672	0		=			
ANR	10801821	MemberAccess	atts [ nAtts ] . valuePtr		10801672	0					
ANR	10801822	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801823	Identifier	atts		10801672	0					
ANR	10801824	Identifier	nAtts		10801672	1					
ANR	10801825	Identifier	valuePtr		10801672	1					
ANR	10801826	AdditiveExpression	ptr + MINBPC ( enc )		10801672	1		+			
ANR	10801827	Identifier	ptr		10801672	0					
ANR	10801828	CallExpression	MINBPC ( enc )		10801672	1					
ANR	10801829	Callee	MINBPC		10801672	0					
ANR	10801830	Identifier	MINBPC		10801672	0					
ANR	10801831	ArgumentList	enc		10801672	1					
ANR	10801832	Argument	enc		10801672	0					
ANR	10801833	Identifier	enc		10801672	0					
ANR	10801834	ExpressionStatement	state = inValue	1498:8:39394:39409	10801672	1	True				
ANR	10801835	AssignmentExpression	state = inValue		10801672	0		=			
ANR	10801836	Identifier	state		10801672	0					
ANR	10801837	Identifier	inValue		10801672	1					
ANR	10801838	ExpressionStatement	open = BT_QUOT	1499:8:39419:39433	10801672	2	True				
ANR	10801839	AssignmentExpression	open = BT_QUOT		10801672	0		=			
ANR	10801840	Identifier	open		10801672	0					
ANR	10801841	Identifier	BT_QUOT		10801672	1					
ANR	10801842	ElseStatement	else		10801672	0					
ANR	10801843	IfStatement	if ( open == BT_QUOT )		10801672	0					
ANR	10801844	Condition	open == BT_QUOT	1501:15:39458:39472	10801672	0	True				
ANR	10801845	EqualityExpression	open == BT_QUOT		10801672	0		==			
ANR	10801846	Identifier	open		10801672	0					
ANR	10801847	Identifier	BT_QUOT		10801672	1					
ANR	10801848	CompoundStatement		34:32:948:948	10801672	1					
ANR	10801849	ExpressionStatement	state = other	1502:8:39485:39498	10801672	0	True				
ANR	10801850	AssignmentExpression	state = other		10801672	0		=			
ANR	10801851	Identifier	state		10801672	0					
ANR	10801852	Identifier	other		10801672	1					
ANR	10801853	IfStatement	if ( nAtts < attsMax )		10801672	1					
ANR	10801854	Condition	nAtts < attsMax	1503:12:39512:39526	10801672	0	True				
ANR	10801855	RelationalExpression	nAtts < attsMax		10801672	0		<			
ANR	10801856	Identifier	nAtts		10801672	0					
ANR	10801857	Identifier	attsMax		10801672	1					
ANR	10801858	ExpressionStatement	atts [ nAtts ] . valueEnd = ptr	1504:10:39539:39565	10801672	1	True				
ANR	10801859	AssignmentExpression	atts [ nAtts ] . valueEnd = ptr		10801672	0		=			
ANR	10801860	MemberAccess	atts [ nAtts ] . valueEnd		10801672	0					
ANR	10801861	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801862	Identifier	atts		10801672	0					
ANR	10801863	Identifier	nAtts		10801672	1					
ANR	10801864	Identifier	valueEnd		10801672	1					
ANR	10801865	Identifier	ptr		10801672	1					
ANR	10801866	ExpressionStatement	nAtts ++	1505:8:39575:39582	10801672	2	True				
ANR	10801867	PostIncDecOperationExpression	nAtts ++		10801672	0					
ANR	10801868	Identifier	nAtts		10801672	0					
ANR	10801869	IncDec	++		10801672	1					
ANR	10801870	BreakStatement	break ;	1507:6:39598:39603	10801672	37	True				
ANR	10801871	Label	case BT_APOS :	1508:4:39609:39621	10801672	38	True				
ANR	10801872	Identifier	BT_APOS		10801672	0					
ANR	10801873	IfStatement	if ( state != inValue )		10801672	39					
ANR	10801874	Condition	state != inValue	1509:10:39633:39648	10801672	0	True				
ANR	10801875	EqualityExpression	state != inValue		10801672	0		!=			
ANR	10801876	Identifier	state		10801672	0					
ANR	10801877	Identifier	inValue		10801672	1					
ANR	10801878	CompoundStatement		42:28:1124:1124	10801672	1					
ANR	10801879	IfStatement	if ( nAtts < attsMax )		10801672	0					
ANR	10801880	Condition	nAtts < attsMax	1510:12:39665:39679	10801672	0	True				
ANR	10801881	RelationalExpression	nAtts < attsMax		10801672	0		<			
ANR	10801882	Identifier	nAtts		10801672	0					
ANR	10801883	Identifier	attsMax		10801672	1					
ANR	10801884	ExpressionStatement	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )	1511:10:39692:39732	10801672	1	True				
ANR	10801885	AssignmentExpression	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )		10801672	0		=			
ANR	10801886	MemberAccess	atts [ nAtts ] . valuePtr		10801672	0					
ANR	10801887	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801888	Identifier	atts		10801672	0					
ANR	10801889	Identifier	nAtts		10801672	1					
ANR	10801890	Identifier	valuePtr		10801672	1					
ANR	10801891	AdditiveExpression	ptr + MINBPC ( enc )		10801672	1		+			
ANR	10801892	Identifier	ptr		10801672	0					
ANR	10801893	CallExpression	MINBPC ( enc )		10801672	1					
ANR	10801894	Callee	MINBPC		10801672	0					
ANR	10801895	Identifier	MINBPC		10801672	0					
ANR	10801896	ArgumentList	enc		10801672	1					
ANR	10801897	Argument	enc		10801672	0					
ANR	10801898	Identifier	enc		10801672	0					
ANR	10801899	ExpressionStatement	state = inValue	1512:8:39742:39757	10801672	1	True				
ANR	10801900	AssignmentExpression	state = inValue		10801672	0		=			
ANR	10801901	Identifier	state		10801672	0					
ANR	10801902	Identifier	inValue		10801672	1					
ANR	10801903	ExpressionStatement	open = BT_APOS	1513:8:39767:39781	10801672	2	True				
ANR	10801904	AssignmentExpression	open = BT_APOS		10801672	0		=			
ANR	10801905	Identifier	open		10801672	0					
ANR	10801906	Identifier	BT_APOS		10801672	1					
ANR	10801907	ElseStatement	else		10801672	0					
ANR	10801908	IfStatement	if ( open == BT_APOS )		10801672	0					
ANR	10801909	Condition	open == BT_APOS	1515:15:39806:39820	10801672	0	True				
ANR	10801910	EqualityExpression	open == BT_APOS		10801672	0		==			
ANR	10801911	Identifier	open		10801672	0					
ANR	10801912	Identifier	BT_APOS		10801672	1					
ANR	10801913	CompoundStatement		48:32:1296:1296	10801672	1					
ANR	10801914	ExpressionStatement	state = other	1516:8:39833:39846	10801672	0	True				
ANR	10801915	AssignmentExpression	state = other		10801672	0		=			
ANR	10801916	Identifier	state		10801672	0					
ANR	10801917	Identifier	other		10801672	1					
ANR	10801918	IfStatement	if ( nAtts < attsMax )		10801672	1					
ANR	10801919	Condition	nAtts < attsMax	1517:12:39860:39874	10801672	0	True				
ANR	10801920	RelationalExpression	nAtts < attsMax		10801672	0		<			
ANR	10801921	Identifier	nAtts		10801672	0					
ANR	10801922	Identifier	attsMax		10801672	1					
ANR	10801923	ExpressionStatement	atts [ nAtts ] . valueEnd = ptr	1518:10:39887:39913	10801672	1	True				
ANR	10801924	AssignmentExpression	atts [ nAtts ] . valueEnd = ptr		10801672	0		=			
ANR	10801925	MemberAccess	atts [ nAtts ] . valueEnd		10801672	0					
ANR	10801926	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801927	Identifier	atts		10801672	0					
ANR	10801928	Identifier	nAtts		10801672	1					
ANR	10801929	Identifier	valueEnd		10801672	1					
ANR	10801930	Identifier	ptr		10801672	1					
ANR	10801931	ExpressionStatement	nAtts ++	1519:8:39923:39930	10801672	2	True				
ANR	10801932	PostIncDecOperationExpression	nAtts ++		10801672	0					
ANR	10801933	Identifier	nAtts		10801672	0					
ANR	10801934	IncDec	++		10801672	1					
ANR	10801935	BreakStatement	break ;	1521:6:39946:39951	10801672	40	True				
ANR	10801936	Label	case BT_AMP :	1522:4:39957:39968	10801672	41	True				
ANR	10801937	Identifier	BT_AMP		10801672	0					
ANR	10801938	IfStatement	if ( nAtts < attsMax )		10801672	42					
ANR	10801939	Condition	nAtts < attsMax	1523:10:39980:39994	10801672	0	True				
ANR	10801940	RelationalExpression	nAtts < attsMax		10801672	0		<			
ANR	10801941	Identifier	nAtts		10801672	0					
ANR	10801942	Identifier	attsMax		10801672	1					
ANR	10801943	ExpressionStatement	atts [ nAtts ] . normalized = 0	1524:8:40005:40031	10801672	1	True				
ANR	10801944	AssignmentExpression	atts [ nAtts ] . normalized = 0		10801672	0		=			
ANR	10801945	MemberAccess	atts [ nAtts ] . normalized		10801672	0					
ANR	10801946	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801947	Identifier	atts		10801672	0					
ANR	10801948	Identifier	nAtts		10801672	1					
ANR	10801949	Identifier	normalized		10801672	1					
ANR	10801950	PrimaryExpression	0		10801672	1					
ANR	10801951	BreakStatement	break ;	1525:6:40039:40044	10801672	43	True				
ANR	10801952	Label	case BT_S :	1526:4:40050:40059	10801672	44	True				
ANR	10801953	Identifier	BT_S		10801672	0					
ANR	10801954	IfStatement	if ( state == inName )		10801672	45					
ANR	10801955	Condition	state == inName	1527:10:40071:40085	10801672	0	True				
ANR	10801956	EqualityExpression	state == inName		10801672	0		==			
ANR	10801957	Identifier	state		10801672	0					
ANR	10801958	Identifier	inName		10801672	1					
ANR	10801959	ExpressionStatement	state = other	1528:8:40096:40109	10801672	1	True				
ANR	10801960	AssignmentExpression	state = other		10801672	0		=			
ANR	10801961	Identifier	state		10801672	0					
ANR	10801962	Identifier	other		10801672	1					
ANR	10801963	ElseStatement	else		10801672	0					
ANR	10801964	IfStatement	"if ( state == inValue && nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open ) )"		10801672	0					
ANR	10801965	Condition	"state == inValue && nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"	1529:15:40126:40464	10801672	0	True				
ANR	10801966	AndExpression	"state == inValue && nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"		10801672	0		&&			
ANR	10801967	EqualityExpression	state == inValue		10801672	0		==			
ANR	10801968	Identifier	state		10801672	0					
ANR	10801969	Identifier	inValue		10801672	1					
ANR	10801970	AndExpression	"nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"		10801672	1		&&			
ANR	10801971	RelationalExpression	nAtts < attsMax		10801672	0		<			
ANR	10801972	Identifier	nAtts		10801672	0					
ANR	10801973	Identifier	attsMax		10801672	1					
ANR	10801974	AndExpression	"atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"		10801672	1		&&			
ANR	10801975	MemberAccess	atts [ nAtts ] . normalized		10801672	0					
ANR	10801976	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801977	Identifier	atts		10801672	0					
ANR	10801978	Identifier	nAtts		10801672	1					
ANR	10801979	Identifier	normalized		10801672	1					
ANR	10801980	OrExpression	"ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		10801672	1		||			
ANR	10801981	EqualityExpression	ptr == atts [ nAtts ] . valuePtr		10801672	0		==			
ANR	10801982	Identifier	ptr		10801672	0					
ANR	10801983	MemberAccess	atts [ nAtts ] . valuePtr		10801672	1					
ANR	10801984	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10801985	Identifier	atts		10801672	0					
ANR	10801986	Identifier	nAtts		10801672	1					
ANR	10801987	Identifier	valuePtr		10801672	1					
ANR	10801988	OrExpression	"BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		10801672	1		||			
ANR	10801989	EqualityExpression	"BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE"		10801672	0		!=			
ANR	10801990	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10801672	0					
ANR	10801991	Callee	BYTE_TO_ASCII		10801672	0					
ANR	10801992	Identifier	BYTE_TO_ASCII		10801672	0					
ANR	10801993	ArgumentList	enc		10801672	1					
ANR	10801994	Argument	enc		10801672	0					
ANR	10801995	Identifier	enc		10801672	0					
ANR	10801996	Argument	ptr		10801672	1					
ANR	10801997	Identifier	ptr		10801672	0					
ANR	10801998	Identifier	ASCII_SPACE		10801672	1					
ANR	10801999	OrExpression	"BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		10801672	1		||			
ANR	10802000	EqualityExpression	"BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE"		10801672	0		==			
ANR	10802001	CallExpression	"BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) )"		10801672	0					
ANR	10802002	Callee	BYTE_TO_ASCII		10801672	0					
ANR	10802003	Identifier	BYTE_TO_ASCII		10801672	0					
ANR	10802004	ArgumentList	enc		10801672	1					
ANR	10802005	Argument	enc		10801672	0					
ANR	10802006	Identifier	enc		10801672	0					
ANR	10802007	Argument	ptr + MINBPC ( enc )		10801672	1					
ANR	10802008	AdditiveExpression	ptr + MINBPC ( enc )		10801672	0		+			
ANR	10802009	Identifier	ptr		10801672	0					
ANR	10802010	CallExpression	MINBPC ( enc )		10801672	1					
ANR	10802011	Callee	MINBPC		10801672	0					
ANR	10802012	Identifier	MINBPC		10801672	0					
ANR	10802013	ArgumentList	enc		10801672	1					
ANR	10802014	Argument	enc		10801672	0					
ANR	10802015	Identifier	enc		10801672	0					
ANR	10802016	Identifier	ASCII_SPACE		10801672	1					
ANR	10802017	EqualityExpression	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		10801672	1		==			
ANR	10802018	CallExpression	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) )"		10801672	0					
ANR	10802019	Callee	BYTE_TYPE		10801672	0					
ANR	10802020	Identifier	BYTE_TYPE		10801672	0					
ANR	10802021	ArgumentList	enc		10801672	1					
ANR	10802022	Argument	enc		10801672	0					
ANR	10802023	Identifier	enc		10801672	0					
ANR	10802024	Argument	ptr + MINBPC ( enc )		10801672	1					
ANR	10802025	AdditiveExpression	ptr + MINBPC ( enc )		10801672	0		+			
ANR	10802026	Identifier	ptr		10801672	0					
ANR	10802027	CallExpression	MINBPC ( enc )		10801672	1					
ANR	10802028	Callee	MINBPC		10801672	0					
ANR	10802029	Identifier	MINBPC		10801672	0					
ANR	10802030	ArgumentList	enc		10801672	1					
ANR	10802031	Argument	enc		10801672	0					
ANR	10802032	Identifier	enc		10801672	0					
ANR	10802033	Identifier	open		10801672	1					
ANR	10802034	ExpressionStatement	atts [ nAtts ] . normalized = 0	1536:8:40475:40501	10801672	1	True				
ANR	10802035	AssignmentExpression	atts [ nAtts ] . normalized = 0		10801672	0		=			
ANR	10802036	MemberAccess	atts [ nAtts ] . normalized		10801672	0					
ANR	10802037	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10802038	Identifier	atts		10801672	0					
ANR	10802039	Identifier	nAtts		10801672	1					
ANR	10802040	Identifier	normalized		10801672	1					
ANR	10802041	PrimaryExpression	0		10801672	1					
ANR	10802042	BreakStatement	break ;	1537:6:40509:40514	10801672	46	True				
ANR	10802043	Label	case BT_CR :	1538:4:40520:40530	10801672	47	True				
ANR	10802044	Identifier	BT_CR		10801672	0					
ANR	10802045	Label	case BT_LF :	1538:16:40532:40542	10801672	48	True				
ANR	10802046	Identifier	BT_LF		10801672	0					
ANR	10802047	IfStatement	if ( state == inName )		10801672	49					
ANR	10802048	Condition	state == inName	1541:10:40691:40705	10801672	0	True				
ANR	10802049	EqualityExpression	state == inName		10801672	0		==			
ANR	10802050	Identifier	state		10801672	0					
ANR	10802051	Identifier	inName		10801672	1					
ANR	10802052	ExpressionStatement	state = other	1542:8:40716:40729	10801672	1	True				
ANR	10802053	AssignmentExpression	state = other		10801672	0		=			
ANR	10802054	Identifier	state		10801672	0					
ANR	10802055	Identifier	other		10801672	1					
ANR	10802056	ElseStatement	else		10801672	0					
ANR	10802057	IfStatement	if ( state == inValue && nAtts < attsMax )		10801672	0					
ANR	10802058	Condition	state == inValue && nAtts < attsMax	1543:15:40746:40780	10801672	0	True				
ANR	10802059	AndExpression	state == inValue && nAtts < attsMax		10801672	0		&&			
ANR	10802060	EqualityExpression	state == inValue		10801672	0		==			
ANR	10802061	Identifier	state		10801672	0					
ANR	10802062	Identifier	inValue		10801672	1					
ANR	10802063	RelationalExpression	nAtts < attsMax		10801672	1		<			
ANR	10802064	Identifier	nAtts		10801672	0					
ANR	10802065	Identifier	attsMax		10801672	1					
ANR	10802066	ExpressionStatement	atts [ nAtts ] . normalized = 0	1544:8:40791:40817	10801672	1	True				
ANR	10802067	AssignmentExpression	atts [ nAtts ] . normalized = 0		10801672	0		=			
ANR	10802068	MemberAccess	atts [ nAtts ] . normalized		10801672	0					
ANR	10802069	ArrayIndexing	atts [ nAtts ]		10801672	0					
ANR	10802070	Identifier	atts		10801672	0					
ANR	10802071	Identifier	nAtts		10801672	1					
ANR	10802072	Identifier	normalized		10801672	1					
ANR	10802073	PrimaryExpression	0		10801672	1					
ANR	10802074	BreakStatement	break ;	1545:6:40825:40830	10801672	50	True				
ANR	10802075	Label	case BT_GT :	1546:4:40836:40846	10801672	51	True				
ANR	10802076	Identifier	BT_GT		10801672	0					
ANR	10802077	Label	case BT_SOL :	1547:4:40852:40863	10801672	52	True				
ANR	10802078	Identifier	BT_SOL		10801672	0					
ANR	10802079	IfStatement	if ( state != inValue )		10801672	53					
ANR	10802080	Condition	state != inValue	1548:10:40875:40890	10801672	0	True				
ANR	10802081	EqualityExpression	state != inValue		10801672	0		!=			
ANR	10802082	Identifier	state		10801672	0					
ANR	10802083	Identifier	inValue		10801672	1					
ANR	10802084	ReturnStatement	return nAtts ;	1549:8:40901:40913	10801672	1	True				
ANR	10802085	Identifier	nAtts		10801672	0					
ANR	10802086	BreakStatement	break ;	1550:6:40921:40926	10801672	54	True				
ANR	10802087	Label	default :	1551:4:40932:40939	10801672	55	True				
ANR	10802088	Identifier	default		10801672	0					
ANR	10802089	BreakStatement	break ;	1552:6:40947:40952	10801672	56	True				
ANR	10802090	ReturnType	static int PTRCALL PREFIX		10801672	1					
ANR	10802091	Identifier	( getAtts )		10801672	2					
ANR	10802092	Identifier	getAtts		10801672	3					
ANR	10802093	ParameterList	"const ENCODING * enc , const char * ptr , int attsMax , ATTRIBUTE * atts"		10801672	4					
ANR	10802094	Parameter	const ENCODING * enc	1466:16:38442:38460	10801672	0	True				
ANR	10802095	ParameterType	const ENCODING *		10801672	0					
ANR	10802096	Identifier	enc		10801672	1					
ANR	10802097	Parameter	const char * ptr	1466:37:38463:38477	10801672	1	True				
ANR	10802098	ParameterType	const char *		10801672	0					
ANR	10802099	Identifier	ptr		10801672	1					
ANR	10802100	Parameter	int attsMax	1467:16:38496:38506	10801672	2	True				
ANR	10802101	ParameterType	int		10801672	0					
ANR	10802102	Identifier	attsMax		10801672	1					
ANR	10802103	Parameter	ATTRIBUTE * atts	1467:29:38509:38523	10801672	3	True				
ANR	10802104	ParameterType	ATTRIBUTE *		10801672	0					
ANR	10802105	Identifier	atts		10801672	1					
ANR	10802106	CFGEntryNode	ENTRY		10801672		True				
ANR	10802107	CFGExitNode	EXIT		10801672		True				
ANR	10802108	InfiniteForNode	true		10801672		True				
ANR	10802109	Symbol	inValue		10801672						
ANR	10802110	Symbol	other		10801672						
ANR	10802111	Symbol	ASCII_SPACE		10801672						
ANR	10802112	Symbol	atts [ nAtts ] . name		10801672						
ANR	10802113	Symbol	atts [ nAtts ] . normalized		10801672						
ANR	10802114	Symbol	* nAtts		10801672						
ANR	10802115	Symbol	BT_QUOT		10801672						
ANR	10802116	Symbol	BYTE_TYPE		10801672						
ANR	10802117	Symbol	BT_APOS		10801672						
ANR	10802118	Symbol	atts [ nAtts ] . valuePtr		10801672						
ANR	10802119	Symbol	nAtts		10801672						
ANR	10802120	Symbol	MINBPC		10801672						
ANR	10802121	Symbol	n		10801672						
ANR	10802122	Symbol	ptr		10801672						
ANR	10802123	Symbol	inName		10801672						
ANR	10802124	Symbol	BYTE_TO_ASCII		10801672						
ANR	10802125	Symbol	attsMax		10801672						
ANR	10802126	Symbol	* atts		10801672						
ANR	10802127	Symbol	enc		10801672						
ANR	10802128	Symbol	state		10801672						
ANR	10802129	Symbol	atts [ nAtts ] . valueEnd		10801672						
ANR	10802130	Symbol	open		10801672						
ANR	10802131	Symbol	atts		10801672						
ANR	10802132	Function	charRefNumber	1558:0:40987:42241							
ANR	10802133	FunctionDef	"charRefNumber (const ENCODING * UNUSED_P ( enc ) , const char * ptr)"		10802132	0					
ANR	10802134	CompoundStatement		1560:0:41080:42241	10802132	0					
ANR	10802135	IdentifierDeclStatement	int result = 0 ;	1561:2:41084:41098	10802132	0	True				
ANR	10802136	IdentifierDecl	result = 0		10802132	0					
ANR	10802137	IdentifierDeclType	int		10802132	0					
ANR	10802138	Identifier	result		10802132	1					
ANR	10802139	AssignmentExpression	result = 0		10802132	2		=			
ANR	10802140	Identifier	result		10802132	0					
ANR	10802141	PrimaryExpression	0		10802132	1					
ANR	10802142	ExpressionStatement	ptr += 2 * MINBPC ( enc )	1563:2:41118:41138	10802132	1	True				
ANR	10802143	AssignmentExpression	ptr += 2 * MINBPC ( enc )		10802132	0		+=			
ANR	10802144	Identifier	ptr		10802132	0					
ANR	10802145	MultiplicativeExpression	2 * MINBPC ( enc )		10802132	1		*			
ANR	10802146	PrimaryExpression	2		10802132	0					
ANR	10802147	CallExpression	MINBPC ( enc )		10802132	1					
ANR	10802148	Callee	MINBPC		10802132	0					
ANR	10802149	Identifier	MINBPC		10802132	0					
ANR	10802150	ArgumentList	enc		10802132	1					
ANR	10802151	Argument	enc		10802132	0					
ANR	10802152	Identifier	enc		10802132	0					
ANR	10802153	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_x ) )"		10802132	2					
ANR	10802154	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_x )"	1564:6:41146:41176	10802132	0	True				
ANR	10802155	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_x )"		10802132	0					
ANR	10802156	Callee	CHAR_MATCHES		10802132	0					
ANR	10802157	Identifier	CHAR_MATCHES		10802132	0					
ANR	10802158	ArgumentList	enc		10802132	1					
ANR	10802159	Argument	enc		10802132	0					
ANR	10802160	Identifier	enc		10802132	0					
ANR	10802161	Argument	ptr		10802132	1					
ANR	10802162	Identifier	ptr		10802132	0					
ANR	10802163	Argument	ASCII_x		10802132	2					
ANR	10802164	Identifier	ASCII_x		10802132	0					
ANR	10802165	CompoundStatement		5:39:98:98	10802132	1					
ANR	10802166	ForStatement	"for ( ptr += MINBPC ( enc ) ; ! CHAR_MATCHES ( enc , ptr , ASCII_SEMI ) ; ptr += MINBPC ( enc ) )"		10802132	0					
ANR	10802167	ForInit	ptr += MINBPC ( enc ) ;	1565:9:41190:41208	10802132	0	True				
ANR	10802168	AssignmentExpression	ptr += MINBPC ( enc )		10802132	0		+=			
ANR	10802169	Identifier	ptr		10802132	0					
ANR	10802170	CallExpression	MINBPC ( enc )		10802132	1					
ANR	10802171	Callee	MINBPC		10802132	0					
ANR	10802172	Identifier	MINBPC		10802132	0					
ANR	10802173	ArgumentList	enc		10802132	1					
ANR	10802174	Argument	enc		10802132	0					
ANR	10802175	Identifier	enc		10802132	0					
ANR	10802176	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"	1566:9:41219:41253	10802132	1	True				
ANR	10802177	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		10802132	0					
ANR	10802178	UnaryOperator	!		10802132	0					
ANR	10802179	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		10802132	1					
ANR	10802180	Callee	CHAR_MATCHES		10802132	0					
ANR	10802181	Identifier	CHAR_MATCHES		10802132	0					
ANR	10802182	ArgumentList	enc		10802132	1					
ANR	10802183	Argument	enc		10802132	0					
ANR	10802184	Identifier	enc		10802132	0					
ANR	10802185	Argument	ptr		10802132	1					
ANR	10802186	Identifier	ptr		10802132	0					
ANR	10802187	Argument	ASCII_SEMI		10802132	2					
ANR	10802188	Identifier	ASCII_SEMI		10802132	0					
ANR	10802189	AssignmentExpression	ptr += MINBPC ( enc )	1567:9:41265:41282	10802132	2	True	+=			
ANR	10802190	Identifier	ptr		10802132	0					
ANR	10802191	CallExpression	MINBPC ( enc )		10802132	1					
ANR	10802192	Callee	MINBPC		10802132	0					
ANR	10802193	Identifier	MINBPC		10802132	0					
ANR	10802194	ArgumentList	enc		10802132	1					
ANR	10802195	Argument	enc		10802132	0					
ANR	10802196	Identifier	enc		10802132	0					
ANR	10802197	CompoundStatement		9:6:212:243	10802132	3					
ANR	10802198	IdentifierDeclStatement	"int c = BYTE_TO_ASCII ( enc , ptr ) ;"	1568:6:41293:41324	10802132	0	True				
ANR	10802199	IdentifierDecl	"c = BYTE_TO_ASCII ( enc , ptr )"		10802132	0					
ANR	10802200	IdentifierDeclType	int		10802132	0					
ANR	10802201	Identifier	c		10802132	1					
ANR	10802202	AssignmentExpression	"c = BYTE_TO_ASCII ( enc , ptr )"		10802132	2		=			
ANR	10802203	Identifier	c		10802132	0					
ANR	10802204	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10802132	1					
ANR	10802205	Callee	BYTE_TO_ASCII		10802132	0					
ANR	10802206	Identifier	BYTE_TO_ASCII		10802132	0					
ANR	10802207	ArgumentList	enc		10802132	1					
ANR	10802208	Argument	enc		10802132	0					
ANR	10802209	Identifier	enc		10802132	0					
ANR	10802210	Argument	ptr		10802132	1					
ANR	10802211	Identifier	ptr		10802132	0					
ANR	10802212	SwitchStatement	switch ( c )		10802132	1					
ANR	10802213	Condition	c	1569:14:41340:41340	10802132	0	True				
ANR	10802214	Identifier	c		10802132	0					
ANR	10802215	CompoundStatement		10:17:262:262	10802132	1					
ANR	10802216	Label	case ASCII_0 :	1570:6:41351:41363	10802132	0	True				
ANR	10802217	Identifier	ASCII_0		10802132	0					
ANR	10802218	Label	case ASCII_1 :	1570:20:41365:41377	10802132	1	True				
ANR	10802219	Identifier	ASCII_1		10802132	0					
ANR	10802220	Label	case ASCII_2 :	1570:34:41379:41391	10802132	2	True				
ANR	10802221	Identifier	ASCII_2		10802132	0					
ANR	10802222	Label	case ASCII_3 :	1570:48:41393:41405	10802132	3	True				
ANR	10802223	Identifier	ASCII_3		10802132	0					
ANR	10802224	Label	case ASCII_4 :	1570:62:41407:41419	10802132	4	True				
ANR	10802225	Identifier	ASCII_4		10802132	0					
ANR	10802226	Label	case ASCII_5 :	1571:6:41427:41439	10802132	5	True				
ANR	10802227	Identifier	ASCII_5		10802132	0					
ANR	10802228	Label	case ASCII_6 :	1571:20:41441:41453	10802132	6	True				
ANR	10802229	Identifier	ASCII_6		10802132	0					
ANR	10802230	Label	case ASCII_7 :	1571:34:41455:41467	10802132	7	True				
ANR	10802231	Identifier	ASCII_7		10802132	0					
ANR	10802232	Label	case ASCII_8 :	1571:48:41469:41481	10802132	8	True				
ANR	10802233	Identifier	ASCII_8		10802132	0					
ANR	10802234	Label	case ASCII_9 :	1571:62:41483:41495	10802132	9	True				
ANR	10802235	Identifier	ASCII_9		10802132	0					
ANR	10802236	ExpressionStatement	result <<= 4	1572:8:41505:41517	10802132	10	True				
ANR	10802237	AssignmentExpression	result <<= 4		10802132	0		<<=			
ANR	10802238	Identifier	result		10802132	0					
ANR	10802239	PrimaryExpression	4		10802132	1					
ANR	10802240	ExpressionStatement	result |= ( c - ASCII_0 )	1573:8:41527:41550	10802132	11	True				
ANR	10802241	AssignmentExpression	result |= ( c - ASCII_0 )		10802132	0		|=			
ANR	10802242	Identifier	result		10802132	0					
ANR	10802243	AdditiveExpression	c - ASCII_0		10802132	1		-			
ANR	10802244	Identifier	c		10802132	0					
ANR	10802245	Identifier	ASCII_0		10802132	1					
ANR	10802246	BreakStatement	break ;	1574:8:41560:41565	10802132	12	True				
ANR	10802247	Label	case ASCII_A :	1575:6:41573:41585	10802132	13	True				
ANR	10802248	Identifier	ASCII_A		10802132	0					
ANR	10802249	Label	case ASCII_B :	1575:20:41587:41599	10802132	14	True				
ANR	10802250	Identifier	ASCII_B		10802132	0					
ANR	10802251	Label	case ASCII_C :	1575:34:41601:41613	10802132	15	True				
ANR	10802252	Identifier	ASCII_C		10802132	0					
ANR	10802253	Label	case ASCII_D :	1576:6:41621:41633	10802132	16	True				
ANR	10802254	Identifier	ASCII_D		10802132	0					
ANR	10802255	Label	case ASCII_E :	1576:20:41635:41647	10802132	17	True				
ANR	10802256	Identifier	ASCII_E		10802132	0					
ANR	10802257	Label	case ASCII_F :	1576:34:41649:41661	10802132	18	True				
ANR	10802258	Identifier	ASCII_F		10802132	0					
ANR	10802259	ExpressionStatement	result <<= 4	1577:8:41671:41683	10802132	19	True				
ANR	10802260	AssignmentExpression	result <<= 4		10802132	0		<<=			
ANR	10802261	Identifier	result		10802132	0					
ANR	10802262	PrimaryExpression	4		10802132	1					
ANR	10802263	ExpressionStatement	result += 10 + ( c - ASCII_A )	1578:8:41693:41721	10802132	20	True				
ANR	10802264	AssignmentExpression	result += 10 + ( c - ASCII_A )		10802132	0		+=			
ANR	10802265	Identifier	result		10802132	0					
ANR	10802266	AdditiveExpression	10 + ( c - ASCII_A )		10802132	1		+			
ANR	10802267	PrimaryExpression	10		10802132	0					
ANR	10802268	AdditiveExpression	c - ASCII_A		10802132	1		-			
ANR	10802269	Identifier	c		10802132	0					
ANR	10802270	Identifier	ASCII_A		10802132	1					
ANR	10802271	BreakStatement	break ;	1579:8:41731:41736	10802132	21	True				
ANR	10802272	Label	case ASCII_a :	1580:6:41744:41756	10802132	22	True				
ANR	10802273	Identifier	ASCII_a		10802132	0					
ANR	10802274	Label	case ASCII_b :	1580:20:41758:41770	10802132	23	True				
ANR	10802275	Identifier	ASCII_b		10802132	0					
ANR	10802276	Label	case ASCII_c :	1580:34:41772:41784	10802132	24	True				
ANR	10802277	Identifier	ASCII_c		10802132	0					
ANR	10802278	Label	case ASCII_d :	1581:6:41792:41804	10802132	25	True				
ANR	10802279	Identifier	ASCII_d		10802132	0					
ANR	10802280	Label	case ASCII_e :	1581:20:41806:41818	10802132	26	True				
ANR	10802281	Identifier	ASCII_e		10802132	0					
ANR	10802282	Label	case ASCII_f :	1581:34:41820:41832	10802132	27	True				
ANR	10802283	Identifier	ASCII_f		10802132	0					
ANR	10802284	ExpressionStatement	result <<= 4	1582:8:41842:41854	10802132	28	True				
ANR	10802285	AssignmentExpression	result <<= 4		10802132	0		<<=			
ANR	10802286	Identifier	result		10802132	0					
ANR	10802287	PrimaryExpression	4		10802132	1					
ANR	10802288	ExpressionStatement	result += 10 + ( c - ASCII_a )	1583:8:41864:41892	10802132	29	True				
ANR	10802289	AssignmentExpression	result += 10 + ( c - ASCII_a )		10802132	0		+=			
ANR	10802290	Identifier	result		10802132	0					
ANR	10802291	AdditiveExpression	10 + ( c - ASCII_a )		10802132	1		+			
ANR	10802292	PrimaryExpression	10		10802132	0					
ANR	10802293	AdditiveExpression	c - ASCII_a		10802132	1		-			
ANR	10802294	Identifier	c		10802132	0					
ANR	10802295	Identifier	ASCII_a		10802132	1					
ANR	10802296	BreakStatement	break ;	1584:8:41902:41907	10802132	30	True				
ANR	10802297	IfStatement	if ( result >= 0x110000 )		10802132	2					
ANR	10802298	Condition	result >= 0x110000	1586:10:41927:41944	10802132	0	True				
ANR	10802299	RelationalExpression	result >= 0x110000		10802132	0		>=			
ANR	10802300	Identifier	result		10802132	0					
ANR	10802301	PrimaryExpression	0x110000		10802132	1					
ANR	10802302	ReturnStatement	return - 1 ;	1587:8:41955:41964	10802132	1	True				
ANR	10802303	UnaryOperationExpression	- 1		10802132	0					
ANR	10802304	UnaryOperator	-		10802132	0					
ANR	10802305	PrimaryExpression	1		10802132	1					
ANR	10802306	ElseStatement	else		10802132	0					
ANR	10802307	CompoundStatement		31:7:902:902	10802132	0					
ANR	10802308	ForStatement	"for ( ; ! CHAR_MATCHES ( enc , ptr , ASCII_SEMI ) ; ptr += MINBPC ( enc ) )"		10802132	0					
ANR	10802309	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"	1591:11:41996:42030	10802132	0	True				
ANR	10802310	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		10802132	0					
ANR	10802311	UnaryOperator	!		10802132	0					
ANR	10802312	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		10802132	1					
ANR	10802313	Callee	CHAR_MATCHES		10802132	0					
ANR	10802314	Identifier	CHAR_MATCHES		10802132	0					
ANR	10802315	ArgumentList	enc		10802132	1					
ANR	10802316	Argument	enc		10802132	0					
ANR	10802317	Identifier	enc		10802132	0					
ANR	10802318	Argument	ptr		10802132	1					
ANR	10802319	Identifier	ptr		10802132	0					
ANR	10802320	Argument	ASCII_SEMI		10802132	2					
ANR	10802321	Identifier	ASCII_SEMI		10802132	0					
ANR	10802322	AssignmentExpression	ptr += MINBPC ( enc )	1591:48:42033:42050	10802132	1	True	+=			
ANR	10802323	Identifier	ptr		10802132	0					
ANR	10802324	CallExpression	MINBPC ( enc )		10802132	1					
ANR	10802325	Callee	MINBPC		10802132	0					
ANR	10802326	Identifier	MINBPC		10802132	0					
ANR	10802327	ArgumentList	enc		10802132	1					
ANR	10802328	Argument	enc		10802132	0					
ANR	10802329	Identifier	enc		10802132	0					
ANR	10802330	CompoundStatement		33:6:980:1011	10802132	2					
ANR	10802331	IdentifierDeclStatement	"int c = BYTE_TO_ASCII ( enc , ptr ) ;"	1592:6:42061:42092	10802132	0	True				
ANR	10802332	IdentifierDecl	"c = BYTE_TO_ASCII ( enc , ptr )"		10802132	0					
ANR	10802333	IdentifierDeclType	int		10802132	0					
ANR	10802334	Identifier	c		10802132	1					
ANR	10802335	AssignmentExpression	"c = BYTE_TO_ASCII ( enc , ptr )"		10802132	2		=			
ANR	10802336	Identifier	c		10802132	0					
ANR	10802337	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10802132	1					
ANR	10802338	Callee	BYTE_TO_ASCII		10802132	0					
ANR	10802339	Identifier	BYTE_TO_ASCII		10802132	0					
ANR	10802340	ArgumentList	enc		10802132	1					
ANR	10802341	Argument	enc		10802132	0					
ANR	10802342	Identifier	enc		10802132	0					
ANR	10802343	Argument	ptr		10802132	1					
ANR	10802344	Identifier	ptr		10802132	0					
ANR	10802345	ExpressionStatement	result *= 10	1593:6:42100:42112	10802132	1	True				
ANR	10802346	AssignmentExpression	result *= 10		10802132	0		*=			
ANR	10802347	Identifier	result		10802132	0					
ANR	10802348	PrimaryExpression	10		10802132	1					
ANR	10802349	ExpressionStatement	result += ( c - ASCII_0 )	1594:6:42120:42143	10802132	2	True				
ANR	10802350	AssignmentExpression	result += ( c - ASCII_0 )		10802132	0		+=			
ANR	10802351	Identifier	result		10802132	0					
ANR	10802352	AdditiveExpression	c - ASCII_0		10802132	1		-			
ANR	10802353	Identifier	c		10802132	0					
ANR	10802354	Identifier	ASCII_0		10802132	1					
ANR	10802355	IfStatement	if ( result >= 0x110000 )		10802132	3					
ANR	10802356	Condition	result >= 0x110000	1595:10:42155:42172	10802132	0	True				
ANR	10802357	RelationalExpression	result >= 0x110000		10802132	0		>=			
ANR	10802358	Identifier	result		10802132	0					
ANR	10802359	PrimaryExpression	0x110000		10802132	1					
ANR	10802360	ReturnStatement	return - 1 ;	1596:8:42183:42192	10802132	1	True				
ANR	10802361	UnaryOperationExpression	- 1		10802132	0					
ANR	10802362	UnaryOperator	-		10802132	0					
ANR	10802363	PrimaryExpression	1		10802132	1					
ANR	10802364	ReturnStatement	return checkCharRefNumber ( result ) ;	1599:2:42206:42239	10802132	3	True				
ANR	10802365	CallExpression	checkCharRefNumber ( result )		10802132	0					
ANR	10802366	Callee	checkCharRefNumber		10802132	0					
ANR	10802367	Identifier	checkCharRefNumber		10802132	0					
ANR	10802368	ArgumentList	result		10802132	1					
ANR	10802369	Argument	result		10802132	0					
ANR	10802370	Identifier	result		10802132	0					
ANR	10802371	ReturnType	static int PTRFASTCALL PREFIX		10802132	1					
ANR	10802372	Identifier	( charRefNumber )		10802132	2					
ANR	10802373	Identifier	charRefNumber		10802132	3					
ANR	10802374	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr"		10802132	4					
ANR	10802375	Parameter	const ENCODING * UNUSED_P ( enc )	1559:22:41032:41060	10802132	0	True				
ANR	10802376	ParameterType	const ENCODING * ( enc )		10802132	0					
ANR	10802377	Identifier	UNUSED_P		10802132	1					
ANR	10802378	Parameter	const char * ptr	1559:53:41063:41077	10802132	1	True				
ANR	10802379	ParameterType	const char *		10802132	0					
ANR	10802380	Identifier	ptr		10802132	1					
ANR	10802381	CFGEntryNode	ENTRY		10802132		True				
ANR	10802382	CFGExitNode	EXIT		10802132		True				
ANR	10802383	Symbol	UNUSED_P		10802132						
ANR	10802384	Symbol	ASCII_SEMI		10802132						
ANR	10802385	Symbol	ASCII_x		10802132						
ANR	10802386	Symbol	c		10802132						
ANR	10802387	Symbol	checkCharRefNumber		10802132						
ANR	10802388	Symbol	ASCII_0		10802132						
ANR	10802389	Symbol	MINBPC		10802132						
ANR	10802390	Symbol	ptr		10802132						
ANR	10802391	Symbol	BYTE_TO_ASCII		10802132						
ANR	10802392	Symbol	result		10802132						
ANR	10802393	Symbol	CHAR_MATCHES		10802132						
ANR	10802394	Symbol	ASCII_A		10802132						
ANR	10802395	Symbol	ASCII_a		10802132						
ANR	10802396	Symbol	enc		10802132						
ANR	10802397	Function	predefinedEntityName	1602:0:42244:43575							
ANR	10802398	FunctionDef	"predefinedEntityName (const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end)"		10802397	0					
ANR	10802399	CompoundStatement		1605:0:42386:43575	10802397	0					
ANR	10802400	SwitchStatement	switch ( ( end - ptr ) / MINBPC ( enc ) )		10802397	0					
ANR	10802401	Condition	( end - ptr ) / MINBPC ( enc )	1606:10:42398:42420	10802397	0	True				
ANR	10802402	MultiplicativeExpression	( end - ptr ) / MINBPC ( enc )		10802397	0		/			
ANR	10802403	AdditiveExpression	end - ptr		10802397	0		-			
ANR	10802404	Identifier	end		10802397	0					
ANR	10802405	Identifier	ptr		10802397	1					
ANR	10802406	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802407	Callee	MINBPC		10802397	0					
ANR	10802408	Identifier	MINBPC		10802397	0					
ANR	10802409	ArgumentList	enc		10802397	1					
ANR	10802410	Argument	enc		10802397	0					
ANR	10802411	Identifier	enc		10802397	0					
ANR	10802412	CompoundStatement		2:35:36:36	10802397	1					
ANR	10802413	Label	case 2 :	1607:2:42427:42433	10802397	0	True				
ANR	10802414	IfStatement	"if ( CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_t ) )"		10802397	1					
ANR	10802415	Condition	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_t )"	1608:8:42443:42487	10802397	0	True				
ANR	10802416	CallExpression	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_t )"		10802397	0					
ANR	10802417	Callee	CHAR_MATCHES		10802397	0					
ANR	10802418	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802419	ArgumentList	enc		10802397	1					
ANR	10802420	Argument	enc		10802397	0					
ANR	10802421	Identifier	enc		10802397	0					
ANR	10802422	Argument	ptr + MINBPC ( enc )		10802397	1					
ANR	10802423	AdditiveExpression	ptr + MINBPC ( enc )		10802397	0		+			
ANR	10802424	Identifier	ptr		10802397	0					
ANR	10802425	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802426	Callee	MINBPC		10802397	0					
ANR	10802427	Identifier	MINBPC		10802397	0					
ANR	10802428	ArgumentList	enc		10802397	1					
ANR	10802429	Argument	enc		10802397	0					
ANR	10802430	Identifier	enc		10802397	0					
ANR	10802431	Argument	ASCII_t		10802397	2					
ANR	10802432	Identifier	ASCII_t		10802397	0					
ANR	10802433	CompoundStatement		4:55:103:103	10802397	1					
ANR	10802434	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		10802397	0					
ANR	10802435	Condition	"BYTE_TO_ASCII ( enc , ptr )"	1609:14:42506:42528	10802397	0	True				
ANR	10802436	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10802397	0					
ANR	10802437	Callee	BYTE_TO_ASCII		10802397	0					
ANR	10802438	Identifier	BYTE_TO_ASCII		10802397	0					
ANR	10802439	ArgumentList	enc		10802397	1					
ANR	10802440	Argument	enc		10802397	0					
ANR	10802441	Identifier	enc		10802397	0					
ANR	10802442	Argument	ptr		10802397	1					
ANR	10802443	Identifier	ptr		10802397	0					
ANR	10802444	CompoundStatement		5:39:144:144	10802397	1					
ANR	10802445	Label	case ASCII_l :	1610:6:42539:42551	10802397	0	True				
ANR	10802446	Identifier	ASCII_l		10802397	0					
ANR	10802447	ReturnStatement	return ASCII_LT ;	1611:8:42561:42576	10802397	1	True				
ANR	10802448	Identifier	ASCII_LT		10802397	0					
ANR	10802449	Label	case ASCII_g :	1612:6:42584:42596	10802397	2	True				
ANR	10802450	Identifier	ASCII_g		10802397	0					
ANR	10802451	ReturnStatement	return ASCII_GT ;	1613:8:42606:42621	10802397	3	True				
ANR	10802452	Identifier	ASCII_GT		10802397	0					
ANR	10802453	BreakStatement	break ;	1616:4:42641:42646	10802397	2	True				
ANR	10802454	Label	case 3 :	1617:2:42650:42656	10802397	3	True				
ANR	10802455	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_a ) )"		10802397	4					
ANR	10802456	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_a )"	1618:8:42666:42696	10802397	0	True				
ANR	10802457	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_a )"		10802397	0					
ANR	10802458	Callee	CHAR_MATCHES		10802397	0					
ANR	10802459	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802460	ArgumentList	enc		10802397	1					
ANR	10802461	Argument	enc		10802397	0					
ANR	10802462	Identifier	enc		10802397	0					
ANR	10802463	Argument	ptr		10802397	1					
ANR	10802464	Identifier	ptr		10802397	0					
ANR	10802465	Argument	ASCII_a		10802397	2					
ANR	10802466	Identifier	ASCII_a		10802397	0					
ANR	10802467	CompoundStatement		14:41:312:312	10802397	1					
ANR	10802468	ExpressionStatement	ptr += MINBPC ( enc )	1619:6:42707:42725	10802397	0	True				
ANR	10802469	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802470	Identifier	ptr		10802397	0					
ANR	10802471	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802472	Callee	MINBPC		10802397	0					
ANR	10802473	Identifier	MINBPC		10802397	0					
ANR	10802474	ArgumentList	enc		10802397	1					
ANR	10802475	Argument	enc		10802397	0					
ANR	10802476	Identifier	enc		10802397	0					
ANR	10802477	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_m ) )"		10802397	1					
ANR	10802478	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_m )"	1620:10:42737:42767	10802397	0	True				
ANR	10802479	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_m )"		10802397	0					
ANR	10802480	Callee	CHAR_MATCHES		10802397	0					
ANR	10802481	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802482	ArgumentList	enc		10802397	1					
ANR	10802483	Argument	enc		10802397	0					
ANR	10802484	Identifier	enc		10802397	0					
ANR	10802485	Argument	ptr		10802397	1					
ANR	10802486	Identifier	ptr		10802397	0					
ANR	10802487	Argument	ASCII_m		10802397	2					
ANR	10802488	Identifier	ASCII_m		10802397	0					
ANR	10802489	CompoundStatement		16:43:383:383	10802397	1					
ANR	10802490	ExpressionStatement	ptr += MINBPC ( enc )	1621:8:42780:42798	10802397	0	True				
ANR	10802491	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802492	Identifier	ptr		10802397	0					
ANR	10802493	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802494	Callee	MINBPC		10802397	0					
ANR	10802495	Identifier	MINBPC		10802397	0					
ANR	10802496	ArgumentList	enc		10802397	1					
ANR	10802497	Argument	enc		10802397	0					
ANR	10802498	Identifier	enc		10802397	0					
ANR	10802499	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_p ) )"		10802397	1					
ANR	10802500	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_p )"	1622:12:42812:42842	10802397	0	True				
ANR	10802501	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_p )"		10802397	0					
ANR	10802502	Callee	CHAR_MATCHES		10802397	0					
ANR	10802503	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802504	ArgumentList	enc		10802397	1					
ANR	10802505	Argument	enc		10802397	0					
ANR	10802506	Identifier	enc		10802397	0					
ANR	10802507	Argument	ptr		10802397	1					
ANR	10802508	Identifier	ptr		10802397	0					
ANR	10802509	Argument	ASCII_p		10802397	2					
ANR	10802510	Identifier	ASCII_p		10802397	0					
ANR	10802511	ReturnStatement	return ASCII_AMP ;	1623:10:42855:42871	10802397	1	True				
ANR	10802512	Identifier	ASCII_AMP		10802397	0					
ANR	10802513	BreakStatement	break ;	1626:4:42891:42896	10802397	5	True				
ANR	10802514	Label	case 4 :	1627:2:42900:42906	10802397	6	True				
ANR	10802515	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		10802397	7					
ANR	10802516	Condition	"BYTE_TO_ASCII ( enc , ptr )"	1628:12:42920:42942	10802397	0	True				
ANR	10802517	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		10802397	0					
ANR	10802518	Callee	BYTE_TO_ASCII		10802397	0					
ANR	10802519	Identifier	BYTE_TO_ASCII		10802397	0					
ANR	10802520	ArgumentList	enc		10802397	1					
ANR	10802521	Argument	enc		10802397	0					
ANR	10802522	Identifier	enc		10802397	0					
ANR	10802523	Argument	ptr		10802397	1					
ANR	10802524	Identifier	ptr		10802397	0					
ANR	10802525	CompoundStatement		24:37:558:558	10802397	1					
ANR	10802526	Label	case ASCII_q :	1629:4:42951:42963	10802397	0	True				
ANR	10802527	Identifier	ASCII_q		10802397	0					
ANR	10802528	ExpressionStatement	ptr += MINBPC ( enc )	1630:6:42971:42989	10802397	1	True				
ANR	10802529	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802530	Identifier	ptr		10802397	0					
ANR	10802531	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802532	Callee	MINBPC		10802397	0					
ANR	10802533	Identifier	MINBPC		10802397	0					
ANR	10802534	ArgumentList	enc		10802397	1					
ANR	10802535	Argument	enc		10802397	0					
ANR	10802536	Identifier	enc		10802397	0					
ANR	10802537	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_u ) )"		10802397	2					
ANR	10802538	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_u )"	1631:10:43001:43031	10802397	0	True				
ANR	10802539	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_u )"		10802397	0					
ANR	10802540	Callee	CHAR_MATCHES		10802397	0					
ANR	10802541	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802542	ArgumentList	enc		10802397	1					
ANR	10802543	Argument	enc		10802397	0					
ANR	10802544	Identifier	enc		10802397	0					
ANR	10802545	Argument	ptr		10802397	1					
ANR	10802546	Identifier	ptr		10802397	0					
ANR	10802547	Argument	ASCII_u		10802397	2					
ANR	10802548	Identifier	ASCII_u		10802397	0					
ANR	10802549	CompoundStatement		27:43:647:647	10802397	1					
ANR	10802550	ExpressionStatement	ptr += MINBPC ( enc )	1632:8:43044:43062	10802397	0	True				
ANR	10802551	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802552	Identifier	ptr		10802397	0					
ANR	10802553	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802554	Callee	MINBPC		10802397	0					
ANR	10802555	Identifier	MINBPC		10802397	0					
ANR	10802556	ArgumentList	enc		10802397	1					
ANR	10802557	Argument	enc		10802397	0					
ANR	10802558	Identifier	enc		10802397	0					
ANR	10802559	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_o ) )"		10802397	1					
ANR	10802560	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_o )"	1633:12:43076:43106	10802397	0	True				
ANR	10802561	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_o )"		10802397	0					
ANR	10802562	Callee	CHAR_MATCHES		10802397	0					
ANR	10802563	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802564	ArgumentList	enc		10802397	1					
ANR	10802565	Argument	enc		10802397	0					
ANR	10802566	Identifier	enc		10802397	0					
ANR	10802567	Argument	ptr		10802397	1					
ANR	10802568	Identifier	ptr		10802397	0					
ANR	10802569	Argument	ASCII_o		10802397	2					
ANR	10802570	Identifier	ASCII_o		10802397	0					
ANR	10802571	CompoundStatement		29:45:722:722	10802397	1					
ANR	10802572	ExpressionStatement	ptr += MINBPC ( enc )	1634:10:43121:43139	10802397	0	True				
ANR	10802573	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802574	Identifier	ptr		10802397	0					
ANR	10802575	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802576	Callee	MINBPC		10802397	0					
ANR	10802577	Identifier	MINBPC		10802397	0					
ANR	10802578	ArgumentList	enc		10802397	1					
ANR	10802579	Argument	enc		10802397	0					
ANR	10802580	Identifier	enc		10802397	0					
ANR	10802581	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_t ) )"		10802397	1					
ANR	10802582	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_t )"	1635:14:43155:43185	10802397	0	True				
ANR	10802583	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_t )"		10802397	0					
ANR	10802584	Callee	CHAR_MATCHES		10802397	0					
ANR	10802585	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802586	ArgumentList	enc		10802397	1					
ANR	10802587	Argument	enc		10802397	0					
ANR	10802588	Identifier	enc		10802397	0					
ANR	10802589	Argument	ptr		10802397	1					
ANR	10802590	Identifier	ptr		10802397	0					
ANR	10802591	Argument	ASCII_t		10802397	2					
ANR	10802592	Identifier	ASCII_t		10802397	0					
ANR	10802593	ReturnStatement	return ASCII_QUOT ;	1636:12:43200:43217	10802397	1	True				
ANR	10802594	Identifier	ASCII_QUOT		10802397	0					
ANR	10802595	BreakStatement	break ;	1639:6:43243:43248	10802397	3	True				
ANR	10802596	Label	case ASCII_a :	1640:4:43254:43266	10802397	4	True				
ANR	10802597	Identifier	ASCII_a		10802397	0					
ANR	10802598	ExpressionStatement	ptr += MINBPC ( enc )	1641:6:43274:43292	10802397	5	True				
ANR	10802599	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802600	Identifier	ptr		10802397	0					
ANR	10802601	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802602	Callee	MINBPC		10802397	0					
ANR	10802603	Identifier	MINBPC		10802397	0					
ANR	10802604	ArgumentList	enc		10802397	1					
ANR	10802605	Argument	enc		10802397	0					
ANR	10802606	Identifier	enc		10802397	0					
ANR	10802607	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_p ) )"		10802397	6					
ANR	10802608	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_p )"	1642:10:43304:43334	10802397	0	True				
ANR	10802609	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_p )"		10802397	0					
ANR	10802610	Callee	CHAR_MATCHES		10802397	0					
ANR	10802611	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802612	ArgumentList	enc		10802397	1					
ANR	10802613	Argument	enc		10802397	0					
ANR	10802614	Identifier	enc		10802397	0					
ANR	10802615	Argument	ptr		10802397	1					
ANR	10802616	Identifier	ptr		10802397	0					
ANR	10802617	Argument	ASCII_p		10802397	2					
ANR	10802618	Identifier	ASCII_p		10802397	0					
ANR	10802619	CompoundStatement		38:43:950:950	10802397	1					
ANR	10802620	ExpressionStatement	ptr += MINBPC ( enc )	1643:8:43347:43365	10802397	0	True				
ANR	10802621	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802622	Identifier	ptr		10802397	0					
ANR	10802623	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802624	Callee	MINBPC		10802397	0					
ANR	10802625	Identifier	MINBPC		10802397	0					
ANR	10802626	ArgumentList	enc		10802397	1					
ANR	10802627	Argument	enc		10802397	0					
ANR	10802628	Identifier	enc		10802397	0					
ANR	10802629	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_o ) )"		10802397	1					
ANR	10802630	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_o )"	1644:12:43379:43409	10802397	0	True				
ANR	10802631	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_o )"		10802397	0					
ANR	10802632	Callee	CHAR_MATCHES		10802397	0					
ANR	10802633	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802634	ArgumentList	enc		10802397	1					
ANR	10802635	Argument	enc		10802397	0					
ANR	10802636	Identifier	enc		10802397	0					
ANR	10802637	Argument	ptr		10802397	1					
ANR	10802638	Identifier	ptr		10802397	0					
ANR	10802639	Argument	ASCII_o		10802397	2					
ANR	10802640	Identifier	ASCII_o		10802397	0					
ANR	10802641	CompoundStatement		40:45:1025:1025	10802397	1					
ANR	10802642	ExpressionStatement	ptr += MINBPC ( enc )	1645:10:43424:43442	10802397	0	True				
ANR	10802643	AssignmentExpression	ptr += MINBPC ( enc )		10802397	0		+=			
ANR	10802644	Identifier	ptr		10802397	0					
ANR	10802645	CallExpression	MINBPC ( enc )		10802397	1					
ANR	10802646	Callee	MINBPC		10802397	0					
ANR	10802647	Identifier	MINBPC		10802397	0					
ANR	10802648	ArgumentList	enc		10802397	1					
ANR	10802649	Argument	enc		10802397	0					
ANR	10802650	Identifier	enc		10802397	0					
ANR	10802651	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_s ) )"		10802397	1					
ANR	10802652	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_s )"	1646:14:43458:43488	10802397	0	True				
ANR	10802653	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_s )"		10802397	0					
ANR	10802654	Callee	CHAR_MATCHES		10802397	0					
ANR	10802655	Identifier	CHAR_MATCHES		10802397	0					
ANR	10802656	ArgumentList	enc		10802397	1					
ANR	10802657	Argument	enc		10802397	0					
ANR	10802658	Identifier	enc		10802397	0					
ANR	10802659	Argument	ptr		10802397	1					
ANR	10802660	Identifier	ptr		10802397	0					
ANR	10802661	Argument	ASCII_s		10802397	2					
ANR	10802662	Identifier	ASCII_s		10802397	0					
ANR	10802663	ReturnStatement	return ASCII_APOS ;	1647:12:43503:43520	10802397	1	True				
ANR	10802664	Identifier	ASCII_APOS		10802397	0					
ANR	10802665	BreakStatement	break ;	1650:6:43546:43551	10802397	7	True				
ANR	10802666	ReturnStatement	return 0 ;	1653:2:43565:43573	10802397	1	True				
ANR	10802667	PrimaryExpression	0		10802397	0					
ANR	10802668	ReturnType	static int PTRCALL PREFIX		10802397	1					
ANR	10802669	Identifier	( predefinedEntityName )		10802397	2					
ANR	10802670	Identifier	predefinedEntityName		10802397	3					
ANR	10802671	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end"		10802397	4					
ANR	10802672	Parameter	const ENCODING * UNUSED_P ( enc )	1603:29:42292:42320	10802397	0	True				
ANR	10802673	ParameterType	const ENCODING * ( enc )		10802397	0					
ANR	10802674	Identifier	UNUSED_P		10802397	1					
ANR	10802675	Parameter	const char * ptr	1603:60:42323:42337	10802397	1	True				
ANR	10802676	ParameterType	const char *		10802397	0					
ANR	10802677	Identifier	ptr		10802397	1					
ANR	10802678	Parameter	const char * end	1604:29:42369:42383	10802397	2	True				
ANR	10802679	ParameterType	const char *		10802397	0					
ANR	10802680	Identifier	end		10802397	1					
ANR	10802681	CFGEntryNode	ENTRY		10802397		True				
ANR	10802682	CFGExitNode	EXIT		10802397		True				
ANR	10802683	Symbol	UNUSED_P		10802397						
ANR	10802684	Symbol	ASCII_o		10802397						
ANR	10802685	Symbol	ASCII_QUOT		10802397						
ANR	10802686	Symbol	ASCII_p		10802397						
ANR	10802687	Symbol	ASCII_s		10802397						
ANR	10802688	Symbol	MINBPC		10802397						
ANR	10802689	Symbol	ASCII_u		10802397						
ANR	10802690	Symbol	ptr		10802397						
ANR	10802691	Symbol	ASCII_t		10802397						
ANR	10802692	Symbol	BYTE_TO_ASCII		10802397						
ANR	10802693	Symbol	CHAR_MATCHES		10802397						
ANR	10802694	Symbol	ASCII_AMP		10802397						
ANR	10802695	Symbol	ASCII_GT		10802397						
ANR	10802696	Symbol	ASCII_m		10802397						
ANR	10802697	Symbol	ASCII_APOS		10802397						
ANR	10802698	Symbol	end		10802397						
ANR	10802699	Symbol	ASCII_a		10802397						
ANR	10802700	Symbol	enc		10802397						
ANR	10802701	Symbol	ASCII_LT		10802397						
ANR	10802702	Function	nameMatchesAscii	1656:0:43578:44211							
ANR	10802703	FunctionDef	"nameMatchesAscii (const ENCODING * UNUSED_P ( enc ) , const char * ptr1 , const char * end1 , const char * ptr2)"		10802702	0					
ANR	10802704	CompoundStatement		1659:0:43732:44211	10802702	0					
ANR	10802705	ForStatement	"for ( ; * ptr2 ; ptr1 += MINBPC ( enc ) , ptr2 ++ )"		10802702	0					
ANR	10802706	Condition	* ptr2	1660:9:43743:43747	10802702	0	True				
ANR	10802707	UnaryOperationExpression	* ptr2		10802702	0					
ANR	10802708	UnaryOperator	*		10802702	0					
ANR	10802709	Identifier	ptr2		10802702	1					
ANR	10802710	Expression	"ptr1 += MINBPC ( enc ) , ptr2 ++"	1660:16:43750:43776	10802702	1	True				
ANR	10802711	AssignmentExpression	ptr1 += MINBPC ( enc )		10802702	0		+=			
ANR	10802712	Identifier	ptr1		10802702	0					
ANR	10802713	CallExpression	MINBPC ( enc )		10802702	1					
ANR	10802714	Callee	MINBPC		10802702	0					
ANR	10802715	Identifier	MINBPC		10802702	0					
ANR	10802716	ArgumentList	enc		10802702	1					
ANR	10802717	Argument	enc		10802702	0					
ANR	10802718	Identifier	enc		10802702	0					
ANR	10802719	PostIncDecOperationExpression	ptr2 ++		10802702	1					
ANR	10802720	Identifier	ptr2		10802702	0					
ANR	10802721	IncDec	++		10802702	1					
ANR	10802722	CompoundStatement		2:45:46:46	10802702	2					
ANR	10802723	IfStatement	if ( end1 - ptr1 < MINBPC ( enc ) )		10802702	0					
ANR	10802724	Condition	end1 - ptr1 < MINBPC ( enc )	1661:8:43789:43813	10802702	0	True				
ANR	10802725	RelationalExpression	end1 - ptr1 < MINBPC ( enc )		10802702	0		<			
ANR	10802726	AdditiveExpression	end1 - ptr1		10802702	0		-			
ANR	10802727	Identifier	end1		10802702	0					
ANR	10802728	Identifier	ptr1		10802702	1					
ANR	10802729	CallExpression	MINBPC ( enc )		10802702	1					
ANR	10802730	Callee	MINBPC		10802702	0					
ANR	10802731	Identifier	MINBPC		10802702	0					
ANR	10802732	ArgumentList	enc		10802702	1					
ANR	10802733	Argument	enc		10802702	0					
ANR	10802734	Identifier	enc		10802702	0					
ANR	10802735	CompoundStatement		3:35:83:83	10802702	1					
ANR	10802736	ReturnStatement	return 0 ;	1667:6:44090:44098	10802702	0	True				
ANR	10802737	PrimaryExpression	0		10802702	0					
ANR	10802738	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr1 , * ptr2 ) )"		10802702	1					
ANR	10802739	Condition	"! CHAR_MATCHES ( enc , ptr1 , * ptr2 )"	1669:8:44135:44165	10802702	0	True				
ANR	10802740	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr1 , * ptr2 )"		10802702	0					
ANR	10802741	UnaryOperator	!		10802702	0					
ANR	10802742	CallExpression	"CHAR_MATCHES ( enc , ptr1 , * ptr2 )"		10802702	1					
ANR	10802743	Callee	CHAR_MATCHES		10802702	0					
ANR	10802744	Identifier	CHAR_MATCHES		10802702	0					
ANR	10802745	ArgumentList	enc		10802702	1					
ANR	10802746	Argument	enc		10802702	0					
ANR	10802747	Identifier	enc		10802702	0					
ANR	10802748	Argument	ptr1		10802702	1					
ANR	10802749	Identifier	ptr1		10802702	0					
ANR	10802750	Argument	* ptr2		10802702	2					
ANR	10802751	UnaryOperationExpression	* ptr2		10802702	0					
ANR	10802752	UnaryOperator	*		10802702	0					
ANR	10802753	Identifier	ptr2		10802702	1					
ANR	10802754	ReturnStatement	return 0 ;	1670:6:44174:44182	10802702	1	True				
ANR	10802755	PrimaryExpression	0		10802702	0					
ANR	10802756	ReturnStatement	return ptr1 == end1 ;	1672:2:44190:44209	10802702	1	True				
ANR	10802757	EqualityExpression	ptr1 == end1		10802702	0		==			
ANR	10802758	Identifier	ptr1		10802702	0					
ANR	10802759	Identifier	end1		10802702	1					
ANR	10802760	ReturnType	static int PTRCALL PREFIX		10802702	1					
ANR	10802761	Identifier	( nameMatchesAscii )		10802702	2					
ANR	10802762	Identifier	nameMatchesAscii		10802702	3					
ANR	10802763	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr1 , const char * end1 , const char * ptr2"		10802702	4					
ANR	10802764	Parameter	const ENCODING * UNUSED_P ( enc )	1657:25:43622:43650	10802702	0	True				
ANR	10802765	ParameterType	const ENCODING * ( enc )		10802702	0					
ANR	10802766	Identifier	UNUSED_P		10802702	1					
ANR	10802767	Parameter	const char * ptr1	1657:56:43653:43668	10802702	1	True				
ANR	10802768	ParameterType	const char *		10802702	0					
ANR	10802769	Identifier	ptr1		10802702	1					
ANR	10802770	Parameter	const char * end1	1658:25:43696:43711	10802702	2	True				
ANR	10802771	ParameterType	const char *		10802702	0					
ANR	10802772	Identifier	end1		10802702	1					
ANR	10802773	Parameter	const char * ptr2	1658:43:43714:43729	10802702	3	True				
ANR	10802774	ParameterType	const char *		10802702	0					
ANR	10802775	Identifier	ptr2		10802702	1					
ANR	10802776	CFGEntryNode	ENTRY		10802702		True				
ANR	10802777	CFGExitNode	EXIT		10802702		True				
ANR	10802778	Symbol	UNUSED_P		10802702						
ANR	10802779	Symbol	ptr2		10802702						
ANR	10802780	Symbol	CHAR_MATCHES		10802702						
ANR	10802781	Symbol	ptr1		10802702						
ANR	10802782	Symbol	end1		10802702						
ANR	10802783	Symbol	* ptr2		10802702						
ANR	10802784	Symbol	enc		10802702						
ANR	10802785	Symbol	MINBPC		10802702						
ANR	10802786	Function	nameLength	1675:0:44214:44744							
ANR	10802787	FunctionDef	"nameLength (const ENCODING * enc , const char * ptr)"		10802786	0					
ANR	10802788	CompoundStatement		1677:0:44294:44744	10802786	0					
ANR	10802789	IdentifierDeclStatement	const char * start = ptr ;	1678:2:44298:44321	10802786	0	True				
ANR	10802790	IdentifierDecl	* start = ptr		10802786	0					
ANR	10802791	IdentifierDeclType	const char *		10802786	0					
ANR	10802792	Identifier	start		10802786	1					
ANR	10802793	AssignmentExpression	* start = ptr		10802786	2		=			
ANR	10802794	Identifier	ptr		10802786	0					
ANR	10802795	Identifier	ptr		10802786	1					
ANR	10802796	ForStatement	for ( ; ; )		10802786	1					
ANR	10802797	CompoundStatement		3:11:39:39	10802786	0					
ANR	10802798	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10802786	0					
ANR	10802799	Condition	"BYTE_TYPE ( enc , ptr )"	1680:12:44348:44366	10802786	0	True				
ANR	10802800	CallExpression	"BYTE_TYPE ( enc , ptr )"		10802786	0					
ANR	10802801	Callee	BYTE_TYPE		10802786	0					
ANR	10802802	Identifier	BYTE_TYPE		10802786	0					
ANR	10802803	ArgumentList	enc		10802786	1					
ANR	10802804	Argument	enc		10802786	0					
ANR	10802805	Identifier	enc		10802786	0					
ANR	10802806	Argument	ptr		10802786	1					
ANR	10802807	Identifier	ptr		10802786	0					
ANR	10802808	CompoundStatement		4:33:74:74	10802786	1					
ANR	10802809	Statement	define	1681:1:44372:44377	10802786	0	True				
ANR	10802810	Statement	LEAD_CASE	1681:8:44379:44387	10802786	1	True				
ANR	10802811	Statement	(	1681:17:44388:44388	10802786	2	True				
ANR	10802812	Statement	n	1681:18:44389:44389	10802786	3	True				
ANR	10802813	Statement	)	1681:19:44390:44390	10802786	4	True				
ANR	10802814	Statement	case	1682:4:44398:44401	10802786	5	True				
ANR	10802815	Statement	BT_LEAD	1682:9:44403:44409	10802786	6	True				
ANR	10802816	Label	n :	1682:20:44414:44415	10802786	7	True				
ANR	10802817	Identifier	n		10802786	0					
ANR	10802818	ExpressionStatement	ptr += n	1682:23:44417:44425	10802786	8	True				
ANR	10802819	AssignmentExpression	ptr += n		10802786	0		+=			
ANR	10802820	Identifier	ptr		10802786	0					
ANR	10802821	Identifier	n		10802786	1					
ANR	10802822	BreakStatement	break ;	1682:33:44427:44432	10802786	9	True				
ANR	10802823	Statement	LEAD_CASE	1683:4:44438:44446	10802786	10	True				
ANR	10802824	Statement	(	1683:13:44447:44447	10802786	11	True				
ANR	10802825	Statement	2	1683:14:44448:44448	10802786	12	True				
ANR	10802826	Statement	)	1683:15:44449:44449	10802786	13	True				
ANR	10802827	Statement	LEAD_CASE	1683:17:44451:44459	10802786	14	True				
ANR	10802828	Statement	(	1683:26:44460:44460	10802786	15	True				
ANR	10802829	Statement	3	1683:27:44461:44461	10802786	16	True				
ANR	10802830	Statement	)	1683:28:44462:44462	10802786	17	True				
ANR	10802831	Statement	LEAD_CASE	1683:30:44464:44472	10802786	18	True				
ANR	10802832	Statement	(	1683:39:44473:44473	10802786	19	True				
ANR	10802833	Statement	4	1683:40:44474:44474	10802786	20	True				
ANR	10802834	Statement	)	1683:41:44475:44475	10802786	21	True				
ANR	10802835	Statement	undef	1684:1:44478:44482	10802786	22	True				
ANR	10802836	Statement	LEAD_CASE	1684:7:44484:44492	10802786	23	True				
ANR	10802837	Label	case BT_NONASCII :	1685:4:44498:44514	10802786	24	True				
ANR	10802838	Identifier	BT_NONASCII		10802786	0					
ANR	10802839	Label	case BT_NMSTRT :	1686:4:44520:44534	10802786	25	True				
ANR	10802840	Identifier	BT_NMSTRT		10802786	0					
ANR	10802841	Label	case BT_COLON :	1688:4:44554:44567	10802786	26	True				
ANR	10802842	Identifier	BT_COLON		10802786	0					
ANR	10802843	Label	case BT_HEX :	1690:4:44580:44591	10802786	27	True				
ANR	10802844	Identifier	BT_HEX		10802786	0					
ANR	10802845	Label	case BT_DIGIT :	1691:4:44597:44610	10802786	28	True				
ANR	10802846	Identifier	BT_DIGIT		10802786	0					
ANR	10802847	Label	case BT_NAME :	1692:4:44616:44628	10802786	29	True				
ANR	10802848	Identifier	BT_NAME		10802786	0					
ANR	10802849	Label	case BT_MINUS :	1693:4:44634:44647	10802786	30	True				
ANR	10802850	Identifier	BT_MINUS		10802786	0					
ANR	10802851	ExpressionStatement	ptr += MINBPC ( enc )	1694:6:44655:44673	10802786	31	True				
ANR	10802852	AssignmentExpression	ptr += MINBPC ( enc )		10802786	0		+=			
ANR	10802853	Identifier	ptr		10802786	0					
ANR	10802854	CallExpression	MINBPC ( enc )		10802786	1					
ANR	10802855	Callee	MINBPC		10802786	0					
ANR	10802856	Identifier	MINBPC		10802786	0					
ANR	10802857	ArgumentList	enc		10802786	1					
ANR	10802858	Argument	enc		10802786	0					
ANR	10802859	Identifier	enc		10802786	0					
ANR	10802860	BreakStatement	break ;	1695:6:44681:44686	10802786	32	True				
ANR	10802861	Label	default :	1696:4:44692:44699	10802786	33	True				
ANR	10802862	Identifier	default		10802786	0					
ANR	10802863	ReturnStatement	return ( int ) ( ptr - start ) ;	1697:6:44707:44732	10802786	34	True				
ANR	10802864	CastExpression	( int ) ( ptr - start )		10802786	0					
ANR	10802865	CastTarget	int		10802786	0					
ANR	10802866	AdditiveExpression	ptr - start		10802786	1		-			
ANR	10802867	Identifier	ptr		10802786	0					
ANR	10802868	Identifier	start		10802786	1					
ANR	10802869	ReturnType	static int PTRFASTCALL PREFIX		10802786	1					
ANR	10802870	Identifier	( nameLength )		10802786	2					
ANR	10802871	Identifier	nameLength		10802786	3					
ANR	10802872	ParameterList	"const ENCODING * enc , const char * ptr"		10802786	4					
ANR	10802873	Parameter	const ENCODING * enc	1676:19:44256:44274	10802786	0	True				
ANR	10802874	ParameterType	const ENCODING *		10802786	0					
ANR	10802875	Identifier	enc		10802786	1					
ANR	10802876	Parameter	const char * ptr	1676:40:44277:44291	10802786	1	True				
ANR	10802877	ParameterType	const char *		10802786	0					
ANR	10802878	Identifier	ptr		10802786	1					
ANR	10802879	CFGEntryNode	ENTRY		10802786		True				
ANR	10802880	CFGExitNode	EXIT		10802786		True				
ANR	10802881	InfiniteForNode	true		10802786		True				
ANR	10802882	Symbol	start		10802786						
ANR	10802883	Symbol	BYTE_TYPE		10802786						
ANR	10802884	Symbol	enc		10802786						
ANR	10802885	Symbol	MINBPC		10802786						
ANR	10802886	Symbol	n		10802786						
ANR	10802887	Symbol	ptr		10802786						
ANR	10802888	Function	skipS	1702:20:44767:45008							
ANR	10802889	FunctionDef	"skipS (const ENCODING * enc , const char * ptr)"		10802888	0					
ANR	10802890	CompoundStatement		1704:0:44831:45008	10802888	0					
ANR	10802891	ForStatement	for ( ; ; )		10802888	0					
ANR	10802892	CompoundStatement		2:11:12:12	10802888	0					
ANR	10802893	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10802888	0					
ANR	10802894	Condition	"BYTE_TYPE ( enc , ptr )"	1706:12:44858:44876	10802888	0	True				
ANR	10802895	CallExpression	"BYTE_TYPE ( enc , ptr )"		10802888	0					
ANR	10802896	Callee	BYTE_TYPE		10802888	0					
ANR	10802897	Identifier	BYTE_TYPE		10802888	0					
ANR	10802898	ArgumentList	enc		10802888	1					
ANR	10802899	Argument	enc		10802888	0					
ANR	10802900	Identifier	enc		10802888	0					
ANR	10802901	Argument	ptr		10802888	1					
ANR	10802902	Identifier	ptr		10802888	0					
ANR	10802903	CompoundStatement		3:33:47:47	10802888	1					
ANR	10802904	Label	case BT_LF :	1707:4:44885:44895	10802888	0	True				
ANR	10802905	Identifier	BT_LF		10802888	0					
ANR	10802906	Label	case BT_CR :	1708:4:44901:44911	10802888	1	True				
ANR	10802907	Identifier	BT_CR		10802888	0					
ANR	10802908	Label	case BT_S :	1709:4:44917:44926	10802888	2	True				
ANR	10802909	Identifier	BT_S		10802888	0					
ANR	10802910	ExpressionStatement	ptr += MINBPC ( enc )	1710:6:44934:44952	10802888	3	True				
ANR	10802911	AssignmentExpression	ptr += MINBPC ( enc )		10802888	0		+=			
ANR	10802912	Identifier	ptr		10802888	0					
ANR	10802913	CallExpression	MINBPC ( enc )		10802888	1					
ANR	10802914	Callee	MINBPC		10802888	0					
ANR	10802915	Identifier	MINBPC		10802888	0					
ANR	10802916	ArgumentList	enc		10802888	1					
ANR	10802917	Argument	enc		10802888	0					
ANR	10802918	Identifier	enc		10802888	0					
ANR	10802919	BreakStatement	break ;	1711:6:44960:44965	10802888	4	True				
ANR	10802920	Label	default :	1712:4:44971:44978	10802888	5	True				
ANR	10802921	Identifier	default		10802888	0					
ANR	10802922	ReturnStatement	return ptr ;	1713:6:44986:44996	10802888	6	True				
ANR	10802923	Identifier	ptr		10802888	0					
ANR	10802924	ReturnType	PTRFASTCALL PREFIX		10802888	1					
ANR	10802925	Identifier	( skipS )		10802888	2					
ANR	10802926	Identifier	skipS		10802888	3					
ANR	10802927	ParameterList	"const ENCODING * enc , const char * ptr"		10802888	4					
ANR	10802928	Parameter	const ENCODING * enc	1703:14:44793:44811	10802888	0	True				
ANR	10802929	ParameterType	const ENCODING *		10802888	0					
ANR	10802930	Identifier	enc		10802888	1					
ANR	10802931	Parameter	const char * ptr	1703:35:44814:44828	10802888	1	True				
ANR	10802932	ParameterType	const char *		10802888	0					
ANR	10802933	Identifier	ptr		10802888	1					
ANR	10802934	CFGEntryNode	ENTRY		10802888		True				
ANR	10802935	CFGExitNode	EXIT		10802888		True				
ANR	10802936	InfiniteForNode	true		10802888		True				
ANR	10802937	Symbol	BYTE_TYPE		10802888						
ANR	10802938	Symbol	enc		10802888						
ANR	10802939	Symbol	MINBPC		10802888						
ANR	10802940	Symbol	ptr		10802888						
ANR	10802941	Function	updatePosition	1718:0:45011:45827							
ANR	10802942	FunctionDef	"updatePosition (const ENCODING * enc , const char * ptr , const char * end , POSITION * pos)"		10802941	0					
ANR	10802943	CompoundStatement		1723:0:45193:45827	10802941	0					
ANR	10802944	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		10802941	0					
ANR	10802945	Condition	"HAS_CHAR ( enc , ptr , end )"	1724:9:45204:45226	10802941	0	True				
ANR	10802946	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10802941	0					
ANR	10802947	Callee	HAS_CHAR		10802941	0					
ANR	10802948	Identifier	HAS_CHAR		10802941	0					
ANR	10802949	ArgumentList	enc		10802941	1					
ANR	10802950	Argument	enc		10802941	0					
ANR	10802951	Identifier	enc		10802941	0					
ANR	10802952	Argument	ptr		10802941	1					
ANR	10802953	Identifier	ptr		10802941	0					
ANR	10802954	Argument	end		10802941	2					
ANR	10802955	Identifier	end		10802941	0					
ANR	10802956	CompoundStatement		2:34:35:35	10802941	1					
ANR	10802957	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		10802941	0					
ANR	10802958	Condition	"BYTE_TYPE ( enc , ptr )"	1725:12:45243:45261	10802941	0	True				
ANR	10802959	CallExpression	"BYTE_TYPE ( enc , ptr )"		10802941	0					
ANR	10802960	Callee	BYTE_TYPE		10802941	0					
ANR	10802961	Identifier	BYTE_TYPE		10802941	0					
ANR	10802962	ArgumentList	enc		10802941	1					
ANR	10802963	Argument	enc		10802941	0					
ANR	10802964	Identifier	enc		10802941	0					
ANR	10802965	Argument	ptr		10802941	1					
ANR	10802966	Identifier	ptr		10802941	0					
ANR	10802967	CompoundStatement		3:33:70:70	10802941	1					
ANR	10802968	Statement	define	1726:1:45267:45272	10802941	0	True				
ANR	10802969	Statement	LEAD_CASE	1726:8:45274:45282	10802941	1	True				
ANR	10802970	Statement	(	1726:17:45283:45283	10802941	2	True				
ANR	10802971	Statement	n	1726:18:45284:45284	10802941	3	True				
ANR	10802972	Statement	)	1726:19:45285:45285	10802941	4	True				
ANR	10802973	Statement	case	1727:4:45293:45296	10802941	5	True				
ANR	10802974	Statement	BT_LEAD	1727:9:45298:45304	10802941	6	True				
ANR	10802975	Label	n :	1727:20:45309:45310	10802941	7	True				
ANR	10802976	Identifier	n		10802941	0					
ANR	10802977	ExpressionStatement	ptr += n	1728:6:45320:45328	10802941	8	True				
ANR	10802978	AssignmentExpression	ptr += n		10802941	0		+=			
ANR	10802979	Identifier	ptr		10802941	0					
ANR	10802980	Identifier	n		10802941	1					
ANR	10802981	BreakStatement	break ;	1729:6:45338:45343	10802941	9	True				
ANR	10802982	Statement	LEAD_CASE	1730:4:45349:45357	10802941	10	True				
ANR	10802983	Statement	(	1730:13:45358:45358	10802941	11	True				
ANR	10802984	Statement	2	1730:14:45359:45359	10802941	12	True				
ANR	10802985	Statement	)	1730:15:45360:45360	10802941	13	True				
ANR	10802986	Statement	LEAD_CASE	1730:17:45362:45370	10802941	14	True				
ANR	10802987	Statement	(	1730:26:45371:45371	10802941	15	True				
ANR	10802988	Statement	3	1730:27:45372:45372	10802941	16	True				
ANR	10802989	Statement	)	1730:28:45373:45373	10802941	17	True				
ANR	10802990	Statement	LEAD_CASE	1730:30:45375:45383	10802941	18	True				
ANR	10802991	Statement	(	1730:39:45384:45384	10802941	19	True				
ANR	10802992	Statement	4	1730:40:45385:45385	10802941	20	True				
ANR	10802993	Statement	)	1730:41:45386:45386	10802941	21	True				
ANR	10802994	Statement	undef	1731:1:45389:45393	10802941	22	True				
ANR	10802995	Statement	LEAD_CASE	1731:7:45395:45403	10802941	23	True				
ANR	10802996	Label	case BT_LF :	1732:4:45409:45419	10802941	24	True				
ANR	10802997	Identifier	BT_LF		10802941	0					
ANR	10802998	ExpressionStatement	pos -> columnNumber = ( XML_Size ) - 1	1733:6:45427:45459	10802941	25	True				
ANR	10802999	AssignmentExpression	pos -> columnNumber = ( XML_Size ) - 1		10802941	0		=			
ANR	10803000	PtrMemberAccess	pos -> columnNumber		10802941	0					
ANR	10803001	Identifier	pos		10802941	0					
ANR	10803002	Identifier	columnNumber		10802941	1					
ANR	10803003	CastExpression	( XML_Size ) - 1		10802941	1					
ANR	10803004	CastTarget	XML_Size		10802941	0					
ANR	10803005	UnaryOperationExpression	- 1		10802941	1					
ANR	10803006	UnaryOperator	-		10802941	0					
ANR	10803007	PrimaryExpression	1		10802941	1					
ANR	10803008	ExpressionStatement	pos -> lineNumber ++	1734:6:45467:45484	10802941	26	True				
ANR	10803009	PostIncDecOperationExpression	pos -> lineNumber ++		10802941	0					
ANR	10803010	PtrMemberAccess	pos -> lineNumber		10802941	0					
ANR	10803011	Identifier	pos		10802941	0					
ANR	10803012	Identifier	lineNumber		10802941	1					
ANR	10803013	IncDec	++		10802941	1					
ANR	10803014	ExpressionStatement	ptr += MINBPC ( enc )	1735:6:45492:45510	10802941	27	True				
ANR	10803015	AssignmentExpression	ptr += MINBPC ( enc )		10802941	0		+=			
ANR	10803016	Identifier	ptr		10802941	0					
ANR	10803017	CallExpression	MINBPC ( enc )		10802941	1					
ANR	10803018	Callee	MINBPC		10802941	0					
ANR	10803019	Identifier	MINBPC		10802941	0					
ANR	10803020	ArgumentList	enc		10802941	1					
ANR	10803021	Argument	enc		10802941	0					
ANR	10803022	Identifier	enc		10802941	0					
ANR	10803023	BreakStatement	break ;	1736:6:45518:45523	10802941	28	True				
ANR	10803024	Label	case BT_CR :	1737:4:45529:45539	10802941	29	True				
ANR	10803025	Identifier	BT_CR		10802941	0					
ANR	10803026	ExpressionStatement	pos -> lineNumber ++	1738:6:45547:45564	10802941	30	True				
ANR	10803027	PostIncDecOperationExpression	pos -> lineNumber ++		10802941	0					
ANR	10803028	PtrMemberAccess	pos -> lineNumber		10802941	0					
ANR	10803029	Identifier	pos		10802941	0					
ANR	10803030	Identifier	lineNumber		10802941	1					
ANR	10803031	IncDec	++		10802941	1					
ANR	10803032	ExpressionStatement	ptr += MINBPC ( enc )	1739:6:45572:45590	10802941	31	True				
ANR	10803033	AssignmentExpression	ptr += MINBPC ( enc )		10802941	0		+=			
ANR	10803034	Identifier	ptr		10802941	0					
ANR	10803035	CallExpression	MINBPC ( enc )		10802941	1					
ANR	10803036	Callee	MINBPC		10802941	0					
ANR	10803037	Identifier	MINBPC		10802941	0					
ANR	10803038	ArgumentList	enc		10802941	1					
ANR	10803039	Argument	enc		10802941	0					
ANR	10803040	Identifier	enc		10802941	0					
ANR	10803041	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) && BYTE_TYPE ( enc , ptr ) == BT_LF )"		10802941	32					
ANR	10803042	Condition	"HAS_CHAR ( enc , ptr , end ) && BYTE_TYPE ( enc , ptr ) == BT_LF"	1740:10:45602:45656	10802941	0	True				
ANR	10803043	AndExpression	"HAS_CHAR ( enc , ptr , end ) && BYTE_TYPE ( enc , ptr ) == BT_LF"		10802941	0		&&			
ANR	10803044	CallExpression	"HAS_CHAR ( enc , ptr , end )"		10802941	0					
ANR	10803045	Callee	HAS_CHAR		10802941	0					
ANR	10803046	Identifier	HAS_CHAR		10802941	0					
ANR	10803047	ArgumentList	enc		10802941	1					
ANR	10803048	Argument	enc		10802941	0					
ANR	10803049	Identifier	enc		10802941	0					
ANR	10803050	Argument	ptr		10802941	1					
ANR	10803051	Identifier	ptr		10802941	0					
ANR	10803052	Argument	end		10802941	2					
ANR	10803053	Identifier	end		10802941	0					
ANR	10803054	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		10802941	1		==			
ANR	10803055	CallExpression	"BYTE_TYPE ( enc , ptr )"		10802941	0					
ANR	10803056	Callee	BYTE_TYPE		10802941	0					
ANR	10803057	Identifier	BYTE_TYPE		10802941	0					
ANR	10803058	ArgumentList	enc		10802941	1					
ANR	10803059	Argument	enc		10802941	0					
ANR	10803060	Identifier	enc		10802941	0					
ANR	10803061	Argument	ptr		10802941	1					
ANR	10803062	Identifier	ptr		10802941	0					
ANR	10803063	Identifier	BT_LF		10802941	1					
ANR	10803064	ExpressionStatement	ptr += MINBPC ( enc )	1741:8:45667:45685	10802941	1	True				
ANR	10803065	AssignmentExpression	ptr += MINBPC ( enc )		10802941	0		+=			
ANR	10803066	Identifier	ptr		10802941	0					
ANR	10803067	CallExpression	MINBPC ( enc )		10802941	1					
ANR	10803068	Callee	MINBPC		10802941	0					
ANR	10803069	Identifier	MINBPC		10802941	0					
ANR	10803070	ArgumentList	enc		10802941	1					
ANR	10803071	Argument	enc		10802941	0					
ANR	10803072	Identifier	enc		10802941	0					
ANR	10803073	ExpressionStatement	pos -> columnNumber = ( XML_Size ) - 1	1742:6:45693:45725	10802941	33	True				
ANR	10803074	AssignmentExpression	pos -> columnNumber = ( XML_Size ) - 1		10802941	0		=			
ANR	10803075	PtrMemberAccess	pos -> columnNumber		10802941	0					
ANR	10803076	Identifier	pos		10802941	0					
ANR	10803077	Identifier	columnNumber		10802941	1					
ANR	10803078	CastExpression	( XML_Size ) - 1		10802941	1					
ANR	10803079	CastTarget	XML_Size		10802941	0					
ANR	10803080	UnaryOperationExpression	- 1		10802941	1					
ANR	10803081	UnaryOperator	-		10802941	0					
ANR	10803082	PrimaryExpression	1		10802941	1					
ANR	10803083	BreakStatement	break ;	1743:6:45733:45738	10802941	34	True				
ANR	10803084	Label	default :	1744:4:45744:45751	10802941	35	True				
ANR	10803085	Identifier	default		10802941	0					
ANR	10803086	ExpressionStatement	ptr += MINBPC ( enc )	1745:6:45759:45777	10802941	36	True				
ANR	10803087	AssignmentExpression	ptr += MINBPC ( enc )		10802941	0		+=			
ANR	10803088	Identifier	ptr		10802941	0					
ANR	10803089	CallExpression	MINBPC ( enc )		10802941	1					
ANR	10803090	Callee	MINBPC		10802941	0					
ANR	10803091	Identifier	MINBPC		10802941	0					
ANR	10803092	ArgumentList	enc		10802941	1					
ANR	10803093	Argument	enc		10802941	0					
ANR	10803094	Identifier	enc		10802941	0					
ANR	10803095	BreakStatement	break ;	1746:6:45785:45790	10802941	37	True				
ANR	10803096	ExpressionStatement	pos -> columnNumber ++	1748:4:45802:45821	10802941	1	True				
ANR	10803097	PostIncDecOperationExpression	pos -> columnNumber ++		10802941	0					
ANR	10803098	PtrMemberAccess	pos -> columnNumber		10802941	0					
ANR	10803099	Identifier	pos		10802941	0					
ANR	10803100	Identifier	columnNumber		10802941	1					
ANR	10803101	IncDec	++		10802941	1					
ANR	10803102	ReturnType	static void PTRCALL PREFIX		10802941	1					
ANR	10803103	Identifier	( updatePosition )		10802941	2					
ANR	10803104	Identifier	updatePosition		10802941	3					
ANR	10803105	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , POSITION * pos"		10802941	4					
ANR	10803106	Parameter	const ENCODING * enc	1719:23:45054:45072	10802941	0	True				
ANR	10803107	ParameterType	const ENCODING *		10802941	0					
ANR	10803108	Identifier	enc		10802941	1					
ANR	10803109	Parameter	const char * ptr	1720:23:45098:45112	10802941	1	True				
ANR	10803110	ParameterType	const char *		10802941	0					
ANR	10803111	Identifier	ptr		10802941	1					
ANR	10803112	Parameter	const char * end	1721:23:45138:45152	10802941	2	True				
ANR	10803113	ParameterType	const char *		10802941	0					
ANR	10803114	Identifier	end		10802941	1					
ANR	10803115	Parameter	POSITION * pos	1722:23:45178:45190	10802941	3	True				
ANR	10803116	ParameterType	POSITION *		10802941	0					
ANR	10803117	Identifier	pos		10802941	1					
ANR	10803118	CFGEntryNode	ENTRY		10802941		True				
ANR	10803119	CFGExitNode	EXIT		10802941		True				
ANR	10803120	Symbol	pos -> lineNumber		10802941						
ANR	10803121	Symbol	pos		10802941						
ANR	10803122	Symbol	BYTE_TYPE		10802941						
ANR	10803123	Symbol	end		10802941						
ANR	10803124	Symbol	enc		10802941						
ANR	10803125	Symbol	pos -> columnNumber		10802941						
ANR	10803126	Symbol	HAS_CHAR		10802941						
ANR	10803127	Symbol	MINBPC		10802941						
ANR	10803128	Symbol	n		10802941						
ANR	10803129	Symbol	* pos		10802941						
ANR	10803130	Symbol	BT_LF		10802941						
ANR	10803131	Symbol	ptr		10802941						
