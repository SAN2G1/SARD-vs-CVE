command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1026210	File	data/converged/CVE-2018-16863_ghostpdl/base_gxfapi.c								
ANR	1026211	Function	gs_fapi_renderer_retcode	42:0:1087:1461							
ANR	1026212	FunctionDef	"gs_fapi_renderer_retcode (gs_memory_t * mem , gs_fapi_server * I , gs_fapi_retcode rc)"		1026211	0					
ANR	1026213	CompoundStatement		45:0:1205:1461	1026211	0					
ANR	1026214	IfStatement	if ( rc == 0 )		1026211	0					
ANR	1026215	Condition	rc == 0	46:8:1215:1221	1026211	0	True				
ANR	1026216	EqualityExpression	rc == 0		1026211	0		==			
ANR	1026217	Identifier	rc		1026211	0					
ANR	1026218	PrimaryExpression	0		1026211	1					
ANR	1026219	ReturnStatement	return 0 ;	47:8:1232:1240	1026211	1	True				
ANR	1026220	PrimaryExpression	0		1026211	0					
ANR	1026221	IfStatement	if ( gs_debug_c ( '1' ) )		1026211	1					
ANR	1026222	Condition	gs_debug_c ( '1' )	48:8:1250:1264	1026211	0	True				
ANR	1026223	CallExpression	gs_debug_c ( '1' )		1026211	0					
ANR	1026224	Callee	gs_debug_c		1026211	0					
ANR	1026225	Identifier	gs_debug_c		1026211	0					
ANR	1026226	ArgumentList	'1'		1026211	1					
ANR	1026227	Argument	'1'		1026211	0					
ANR	1026228	PrimaryExpression	'1'		1026211	0					
ANR	1026229	CompoundStatement		4:25:61:61	1026211	1					
ANR	1026230	ExpressionStatement	"emprintf2 ( mem , ""Error: Font Renderer Plugin ( %s ) return code = %d\\n"" , I -> ig . d -> subtype , rc )"	49:8:1277:1406	1026211	0	True				
ANR	1026231	CallExpression	"emprintf2 ( mem , ""Error: Font Renderer Plugin ( %s ) return code = %d\\n"" , I -> ig . d -> subtype , rc )"		1026211	0					
ANR	1026232	Callee	emprintf2		1026211	0					
ANR	1026233	Identifier	emprintf2		1026211	0					
ANR	1026234	ArgumentList	mem		1026211	1					
ANR	1026235	Argument	mem		1026211	0					
ANR	1026236	Identifier	mem		1026211	0					
ANR	1026237	Argument	"""Error: Font Renderer Plugin ( %s ) return code = %d\\n"""		1026211	1					
ANR	1026238	PrimaryExpression	"""Error: Font Renderer Plugin ( %s ) return code = %d\\n"""		1026211	0					
ANR	1026239	Argument	I -> ig . d -> subtype		1026211	2					
ANR	1026240	PtrMemberAccess	I -> ig . d -> subtype		1026211	0					
ANR	1026241	MemberAccess	I -> ig . d		1026211	0					
ANR	1026242	PtrMemberAccess	I -> ig		1026211	0					
ANR	1026243	Identifier	I		1026211	0					
ANR	1026244	Identifier	ig		1026211	1					
ANR	1026245	Identifier	d		1026211	1					
ANR	1026246	Identifier	subtype		1026211	1					
ANR	1026247	Argument	rc		1026211	3					
ANR	1026248	Identifier	rc		1026211	0					
ANR	1026249	ReturnStatement	return rc < 0 ? rc : gs_error_invalidfont ;	53:4:1418:1459	1026211	2	True				
ANR	1026250	ConditionalExpression	rc < 0 ? rc : gs_error_invalidfont		1026211	0					
ANR	1026251	Condition	rc < 0		1026211	0					
ANR	1026252	RelationalExpression	rc < 0		1026211	0		<			
ANR	1026253	Identifier	rc		1026211	0					
ANR	1026254	PrimaryExpression	0		1026211	1					
ANR	1026255	Identifier	rc		1026211	1					
ANR	1026256	Identifier	gs_error_invalidfont		1026211	2					
ANR	1026257	ReturnType	static int		1026211	1					
ANR	1026258	Identifier	gs_fapi_renderer_retcode		1026211	2					
ANR	1026259	ParameterList	"gs_memory_t * mem , gs_fapi_server * I , gs_fapi_retcode rc"		1026211	3					
ANR	1026260	Parameter	gs_memory_t * mem	43:25:1123:1138	1026211	0	True				
ANR	1026261	ParameterType	gs_memory_t *		1026211	0					
ANR	1026262	Identifier	mem		1026211	1					
ANR	1026263	Parameter	gs_fapi_server * I	43:43:1141:1157	1026211	1	True				
ANR	1026264	ParameterType	gs_fapi_server *		1026211	0					
ANR	1026265	Identifier	I		1026211	1					
ANR	1026266	Parameter	gs_fapi_retcode rc	44:25:1185:1202	1026211	2	True				
ANR	1026267	ParameterType	gs_fapi_retcode		1026211	0					
ANR	1026268	Identifier	rc		1026211	1					
ANR	1026269	CFGEntryNode	ENTRY		1026211		True				
ANR	1026270	CFGExitNode	EXIT		1026211		True				
ANR	1026271	Symbol	I -> ig . d -> subtype		1026211						
ANR	1026272	Symbol	rc		1026211						
ANR	1026273	Symbol	* * I		1026211						
ANR	1026274	Symbol	* I		1026211						
ANR	1026275	Symbol	mem		1026211						
ANR	1026276	Symbol	* I -> ig		1026211						
ANR	1026277	Symbol	I		1026211						
ANR	1026278	Symbol	gs_debug_c		1026211						
ANR	1026279	Symbol	* I -> ig . d		1026211						
ANR	1026280	Symbol	I -> ig . d		1026211						
ANR	1026281	Symbol	gs_error_invalidfont		1026211						
ANR	1026282	Symbol	I -> ig		1026211						
ANR	1026283	ClassDef	gs_fapi_outline_handler_s	56:8:1472:1704							
ANR	1026284	DeclStmt									
ANR	1026285	Decl							struct gx_path_s	struct gx_path_s *	path
ANR	1026286	DeclStmt									
ANR	1026287	Decl							fixed	fixed	x0
ANR	1026288	DeclStmt									
ANR	1026289	Decl							fixed	fixed	y0
ANR	1026290	DeclStmt									
ANR	1026291	Decl							bool	bool	close_path
ANR	1026292	DeclStmt									
ANR	1026293	Decl							bool	bool	need_close
ANR	1026294	DeclStmt									
ANR	1026295	Decl							gs_fapi_outline_handler_s	gs_fapi_outline_handler_s	gs_fapi_outline_handler
ANR	1026296	Function	import_shift	65:0:1707:1809							
ANR	1026297	FunctionDef	"import_shift (int64_t x , int64_t n)"		1026296	0					
ANR	1026298	CompoundStatement		67:0:1764:1809	1026296	0					
ANR	1026299	ReturnStatement	return ( n > 0 ? ( x << n ) : ( x >> - n ) ) ;	68:4:1770:1807	1026296	0	True				
ANR	1026300	ConditionalExpression	n > 0 ? ( x << n ) : ( x >> - n )		1026296	0					
ANR	1026301	Condition	n > 0		1026296	0					
ANR	1026302	RelationalExpression	n > 0		1026296	0		>			
ANR	1026303	Identifier	n		1026296	0					
ANR	1026304	PrimaryExpression	0		1026296	1					
ANR	1026305	ShiftExpression	x << n		1026296	1		<<			
ANR	1026306	Identifier	x		1026296	0					
ANR	1026307	Identifier	n		1026296	1					
ANR	1026308	ShiftExpression	x >> - n		1026296	2		>>			
ANR	1026309	Identifier	x		1026296	0					
ANR	1026310	UnaryOperationExpression	- n		1026296	1					
ANR	1026311	UnaryOperator	-		1026296	0					
ANR	1026312	Identifier	n		1026296	1					
ANR	1026313	ReturnType	static inline int64_t		1026296	1					
ANR	1026314	Identifier	import_shift		1026296	2					
ANR	1026315	ParameterList	"int64_t x , int64_t n"		1026296	3					
ANR	1026316	Parameter	int64_t x	66:13:1742:1750	1026296	0	True				
ANR	1026317	ParameterType	int64_t		1026296	0					
ANR	1026318	Identifier	x		1026296	1					
ANR	1026319	Parameter	int64_t n	66:24:1753:1761	1026296	1	True				
ANR	1026320	ParameterType	int64_t		1026296	0					
ANR	1026321	Identifier	n		1026296	1					
ANR	1026322	CFGEntryNode	ENTRY		1026296		True				
ANR	1026323	CFGExitNode	EXIT		1026296		True				
ANR	1026324	Symbol	x		1026296						
ANR	1026325	Symbol	n		1026296						
ANR	1026326	Function	export_shift	71:0:1812:1902							
ANR	1026327	FunctionDef	"export_shift (int x , int n)"		1026326	0					
ANR	1026328	CompoundStatement		73:0:1857:1902	1026326	0					
ANR	1026329	ReturnStatement	return ( n > 0 ? ( x >> n ) : ( x << - n ) ) ;	74:4:1863:1900	1026326	0	True				
ANR	1026330	ConditionalExpression	n > 0 ? ( x >> n ) : ( x << - n )		1026326	0					
ANR	1026331	Condition	n > 0		1026326	0					
ANR	1026332	RelationalExpression	n > 0		1026326	0		>			
ANR	1026333	Identifier	n		1026326	0					
ANR	1026334	PrimaryExpression	0		1026326	1					
ANR	1026335	ShiftExpression	x >> n		1026326	1		>>			
ANR	1026336	Identifier	x		1026326	0					
ANR	1026337	Identifier	n		1026326	1					
ANR	1026338	ShiftExpression	x << - n		1026326	2		<<			
ANR	1026339	Identifier	x		1026326	0					
ANR	1026340	UnaryOperationExpression	- n		1026326	1					
ANR	1026341	UnaryOperator	-		1026326	0					
ANR	1026342	Identifier	n		1026326	1					
ANR	1026343	ReturnType	static inline int		1026326	1					
ANR	1026344	Identifier	export_shift		1026326	2					
ANR	1026345	ParameterList	"int x , int n"		1026326	3					
ANR	1026346	Parameter	int x	72:13:1843:1847	1026326	0	True				
ANR	1026347	ParameterType	int		1026326	0					
ANR	1026348	Identifier	x		1026326	1					
ANR	1026349	Parameter	int n	72:20:1850:1854	1026326	1	True				
ANR	1026350	ParameterType	int		1026326	0					
ANR	1026351	Identifier	n		1026326	1					
ANR	1026352	CFGEntryNode	ENTRY		1026326		True				
ANR	1026353	CFGExitNode	EXIT		1026326		True				
ANR	1026354	Symbol	x		1026326						
ANR	1026355	Symbol	n		1026326						
ANR	1026356	Function	fapi_round	77:0:1905:1973							
ANR	1026357	FunctionDef	fapi_round (double x)		1026356	0					
ANR	1026358	CompoundStatement		79:0:1944:1973	1026356	0					
ANR	1026359	ReturnStatement	return ( int ) ( x + 0.5 ) ;	80:4:1950:1971	1026356	0	True				
ANR	1026360	CastExpression	( int ) ( x + 0.5 )		1026356	0					
ANR	1026361	CastTarget	int		1026356	0					
ANR	1026362	AdditiveExpression	x + 0.5		1026356	1		+			
ANR	1026363	Identifier	x		1026356	0					
ANR	1026364	PrimaryExpression	0.5		1026356	1					
ANR	1026365	ReturnType	static inline int		1026356	1					
ANR	1026366	Identifier	fapi_round		1026356	2					
ANR	1026367	ParameterList	double x		1026356	3					
ANR	1026368	Parameter	double x	78:11:1934:1941	1026356	0	True				
ANR	1026369	ParameterType	double		1026356	0					
ANR	1026370	Identifier	x		1026356	1					
ANR	1026371	CFGEntryNode	ENTRY		1026356		True				
ANR	1026372	CFGExitNode	EXIT		1026356		True				
ANR	1026373	Symbol	x		1026356						
ANR	1026374	Function	add_closepath	83:0:1976:2257							
ANR	1026375	FunctionDef	add_closepath (gs_fapi_path * I)		1026374	0					
ANR	1026376	CompoundStatement		85:0:2018:2257	1026374	0					
ANR	1026377	IdentifierDeclStatement	gs_fapi_outline_handler * olh = ( gs_fapi_outline_handler * ) I -> olh ;	86:4:2024:2089	1026374	0	True				
ANR	1026378	IdentifierDecl	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026374	0					
ANR	1026379	IdentifierDeclType	gs_fapi_outline_handler *		1026374	0					
ANR	1026380	Identifier	olh		1026374	1					
ANR	1026381	AssignmentExpression	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026374	2		=			
ANR	1026382	Identifier	olh		1026374	0					
ANR	1026383	CastExpression	( gs_fapi_outline_handler * ) I -> olh		1026374	1					
ANR	1026384	CastTarget	gs_fapi_outline_handler *		1026374	0					
ANR	1026385	PtrMemberAccess	I -> olh		1026374	1					
ANR	1026386	Identifier	I		1026374	0					
ANR	1026387	Identifier	olh		1026374	1					
ANR	1026388	IfStatement	if ( olh -> need_close == true )		1026374	1					
ANR	1026389	Condition	olh -> need_close == true	88:8:2100:2122	1026374	0	True				
ANR	1026390	EqualityExpression	olh -> need_close == true		1026374	0		==			
ANR	1026391	PtrMemberAccess	olh -> need_close		1026374	0					
ANR	1026392	Identifier	olh		1026374	0					
ANR	1026393	Identifier	need_close		1026374	1					
ANR	1026394	Identifier	true		1026374	1					
ANR	1026395	CompoundStatement		4:33:106:106	1026374	1					
ANR	1026396	ExpressionStatement	olh -> need_close = false	89:8:2135:2158	1026374	0	True				
ANR	1026397	AssignmentExpression	olh -> need_close = false		1026374	0		=			
ANR	1026398	PtrMemberAccess	olh -> need_close		1026374	0					
ANR	1026399	Identifier	olh		1026374	0					
ANR	1026400	Identifier	need_close		1026374	1					
ANR	1026401	Identifier	false		1026374	1					
ANR	1026402	ExpressionStatement	"I -> gs_error = gx_path_close_subpath_notes ( olh -> path , 0 )"	90:8:2168:2223	1026374	1	True				
ANR	1026403	AssignmentExpression	"I -> gs_error = gx_path_close_subpath_notes ( olh -> path , 0 )"		1026374	0		=			
ANR	1026404	PtrMemberAccess	I -> gs_error		1026374	0					
ANR	1026405	Identifier	I		1026374	0					
ANR	1026406	Identifier	gs_error		1026374	1					
ANR	1026407	CallExpression	"gx_path_close_subpath_notes ( olh -> path , 0 )"		1026374	1					
ANR	1026408	Callee	gx_path_close_subpath_notes		1026374	0					
ANR	1026409	Identifier	gx_path_close_subpath_notes		1026374	0					
ANR	1026410	ArgumentList	olh -> path		1026374	1					
ANR	1026411	Argument	olh -> path		1026374	0					
ANR	1026412	PtrMemberAccess	olh -> path		1026374	0					
ANR	1026413	Identifier	olh		1026374	0					
ANR	1026414	Identifier	path		1026374	1					
ANR	1026415	Argument	0		1026374	1					
ANR	1026416	PrimaryExpression	0		1026374	0					
ANR	1026417	ReturnStatement	return ( I -> gs_error ) ;	92:4:2235:2255	1026374	2	True				
ANR	1026418	PtrMemberAccess	I -> gs_error		1026374	0					
ANR	1026419	Identifier	I		1026374	0					
ANR	1026420	Identifier	gs_error		1026374	1					
ANR	1026421	ReturnType	static int		1026374	1					
ANR	1026422	Identifier	add_closepath		1026374	2					
ANR	1026423	ParameterList	gs_fapi_path * I		1026374	3					
ANR	1026424	Parameter	gs_fapi_path * I	84:14:2001:2015	1026374	0	True				
ANR	1026425	ParameterType	gs_fapi_path *		1026374	0					
ANR	1026426	Identifier	I		1026374	1					
ANR	1026427	CFGEntryNode	ENTRY		1026374		True				
ANR	1026428	CFGExitNode	EXIT		1026374		True				
ANR	1026429	Symbol	olh -> need_close		1026374						
ANR	1026430	Symbol	I -> olh		1026374						
ANR	1026431	Symbol	* I		1026374						
ANR	1026432	Symbol	* olh		1026374						
ANR	1026433	Symbol	gx_path_close_subpath_notes		1026374						
ANR	1026434	Symbol	true		1026374						
ANR	1026435	Symbol	false		1026374						
ANR	1026436	Symbol	I		1026374						
ANR	1026437	Symbol	olh		1026374						
ANR	1026438	Symbol	olh -> path		1026374						
ANR	1026439	Symbol	I -> gs_error		1026374						
ANR	1026440	Function	add_move	95:0:2260:3047							
ANR	1026441	FunctionDef	"add_move (gs_fapi_path * I , int64_t x , int64_t y)"		1026440	0					
ANR	1026442	CompoundStatement		97:0:2319:3047	1026440	0					
ANR	1026443	IdentifierDeclStatement	gs_fapi_outline_handler * olh = ( gs_fapi_outline_handler * ) I -> olh ;	98:4:2325:2390	1026440	0	True				
ANR	1026444	IdentifierDecl	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026440	0					
ANR	1026445	IdentifierDeclType	gs_fapi_outline_handler *		1026440	0					
ANR	1026446	Identifier	olh		1026440	1					
ANR	1026447	AssignmentExpression	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026440	2		=			
ANR	1026448	Identifier	olh		1026440	0					
ANR	1026449	CastExpression	( gs_fapi_outline_handler * ) I -> olh		1026440	1					
ANR	1026450	CastTarget	gs_fapi_outline_handler *		1026440	0					
ANR	1026451	PtrMemberAccess	I -> olh		1026440	1					
ANR	1026452	Identifier	I		1026440	0					
ANR	1026453	Identifier	olh		1026440	1					
ANR	1026454	ExpressionStatement	"x = import_shift ( x , I -> shift ) + olh -> x0"	100:4:2397:2436	1026440	1	True				
ANR	1026455	AssignmentExpression	"x = import_shift ( x , I -> shift ) + olh -> x0"		1026440	0		=			
ANR	1026456	Identifier	x		1026440	0					
ANR	1026457	AdditiveExpression	"import_shift ( x , I -> shift ) + olh -> x0"		1026440	1		+			
ANR	1026458	CallExpression	"import_shift ( x , I -> shift )"		1026440	0					
ANR	1026459	Callee	import_shift		1026440	0					
ANR	1026460	Identifier	import_shift		1026440	0					
ANR	1026461	ArgumentList	x		1026440	1					
ANR	1026462	Argument	x		1026440	0					
ANR	1026463	Identifier	x		1026440	0					
ANR	1026464	Argument	I -> shift		1026440	1					
ANR	1026465	PtrMemberAccess	I -> shift		1026440	0					
ANR	1026466	Identifier	I		1026440	0					
ANR	1026467	Identifier	shift		1026440	1					
ANR	1026468	PtrMemberAccess	olh -> x0		1026440	1					
ANR	1026469	Identifier	olh		1026440	0					
ANR	1026470	Identifier	x0		1026440	1					
ANR	1026471	ExpressionStatement	"y = - import_shift ( y , I -> shift ) + olh -> y0"	101:4:2442:2482	1026440	2	True				
ANR	1026472	AssignmentExpression	"y = - import_shift ( y , I -> shift ) + olh -> y0"		1026440	0		=			
ANR	1026473	Identifier	y		1026440	0					
ANR	1026474	AdditiveExpression	"- import_shift ( y , I -> shift ) + olh -> y0"		1026440	1		+			
ANR	1026475	UnaryOperationExpression	"- import_shift ( y , I -> shift )"		1026440	0					
ANR	1026476	UnaryOperator	-		1026440	0					
ANR	1026477	CallExpression	"import_shift ( y , I -> shift )"		1026440	1					
ANR	1026478	Callee	import_shift		1026440	0					
ANR	1026479	Identifier	import_shift		1026440	0					
ANR	1026480	ArgumentList	y		1026440	1					
ANR	1026481	Argument	y		1026440	0					
ANR	1026482	Identifier	y		1026440	0					
ANR	1026483	Argument	I -> shift		1026440	1					
ANR	1026484	PtrMemberAccess	I -> shift		1026440	0					
ANR	1026485	Identifier	I		1026440	0					
ANR	1026486	Identifier	shift		1026440	1					
ANR	1026487	PtrMemberAccess	olh -> y0		1026440	1					
ANR	1026488	Identifier	olh		1026440	0					
ANR	1026489	Identifier	y0		1026440	1					
ANR	1026490	IfStatement	if ( x > ( int64_t ) max_fixed )		1026440	3					
ANR	1026491	Condition	x > ( int64_t ) max_fixed	103:8:2493:2515	1026440	0	True				
ANR	1026492	RelationalExpression	x > ( int64_t ) max_fixed		1026440	0		>			
ANR	1026493	Identifier	x		1026440	0					
ANR	1026494	CastExpression	( int64_t ) max_fixed		1026440	1					
ANR	1026495	CastTarget	int64_t		1026440	0					
ANR	1026496	Identifier	max_fixed		1026440	1					
ANR	1026497	CompoundStatement		7:33:198:198	1026440	1					
ANR	1026498	ExpressionStatement	x = ( int64_t ) max_fixed	104:8:2528:2551	1026440	0	True				
ANR	1026499	AssignmentExpression	x = ( int64_t ) max_fixed		1026440	0		=			
ANR	1026500	Identifier	x		1026440	0					
ANR	1026501	CastExpression	( int64_t ) max_fixed		1026440	1					
ANR	1026502	CastTarget	int64_t		1026440	0					
ANR	1026503	Identifier	max_fixed		1026440	1					
ANR	1026504	ElseStatement	else		1026440	0					
ANR	1026505	IfStatement	if ( x < ( int64_t ) min_fixed )		1026440	0					
ANR	1026506	Condition	x < ( int64_t ) min_fixed	106:13:2572:2594	1026440	0	True				
ANR	1026507	RelationalExpression	x < ( int64_t ) min_fixed		1026440	0		<			
ANR	1026508	Identifier	x		1026440	0					
ANR	1026509	CastExpression	( int64_t ) min_fixed		1026440	1					
ANR	1026510	CastTarget	int64_t		1026440	0					
ANR	1026511	Identifier	min_fixed		1026440	1					
ANR	1026512	CompoundStatement		10:38:277:277	1026440	1					
ANR	1026513	ExpressionStatement	x = ( int64_t ) min_fixed	107:8:2607:2630	1026440	0	True				
ANR	1026514	AssignmentExpression	x = ( int64_t ) min_fixed		1026440	0		=			
ANR	1026515	Identifier	x		1026440	0					
ANR	1026516	CastExpression	( int64_t ) min_fixed		1026440	1					
ANR	1026517	CastTarget	int64_t		1026440	0					
ANR	1026518	Identifier	min_fixed		1026440	1					
ANR	1026519	IfStatement	if ( y > ( int64_t ) max_fixed )		1026440	4					
ANR	1026520	Condition	y > ( int64_t ) max_fixed	110:8:2647:2669	1026440	0	True				
ANR	1026521	RelationalExpression	y > ( int64_t ) max_fixed		1026440	0		>			
ANR	1026522	Identifier	y		1026440	0					
ANR	1026523	CastExpression	( int64_t ) max_fixed		1026440	1					
ANR	1026524	CastTarget	int64_t		1026440	0					
ANR	1026525	Identifier	max_fixed		1026440	1					
ANR	1026526	CompoundStatement		14:33:352:352	1026440	1					
ANR	1026527	ExpressionStatement	y = ( int64_t ) max_fixed	111:8:2682:2705	1026440	0	True				
ANR	1026528	AssignmentExpression	y = ( int64_t ) max_fixed		1026440	0		=			
ANR	1026529	Identifier	y		1026440	0					
ANR	1026530	CastExpression	( int64_t ) max_fixed		1026440	1					
ANR	1026531	CastTarget	int64_t		1026440	0					
ANR	1026532	Identifier	max_fixed		1026440	1					
ANR	1026533	ElseStatement	else		1026440	0					
ANR	1026534	IfStatement	if ( y < ( int64_t ) min_fixed )		1026440	0					
ANR	1026535	Condition	y < ( int64_t ) min_fixed	113:13:2726:2748	1026440	0	True				
ANR	1026536	RelationalExpression	y < ( int64_t ) min_fixed		1026440	0		<			
ANR	1026537	Identifier	y		1026440	0					
ANR	1026538	CastExpression	( int64_t ) min_fixed		1026440	1					
ANR	1026539	CastTarget	int64_t		1026440	0					
ANR	1026540	Identifier	min_fixed		1026440	1					
ANR	1026541	CompoundStatement		17:38:431:431	1026440	1					
ANR	1026542	ExpressionStatement	y = ( int64_t ) min_fixed	114:8:2761:2784	1026440	0	True				
ANR	1026543	AssignmentExpression	y = ( int64_t ) min_fixed		1026440	0		=			
ANR	1026544	Identifier	y		1026440	0					
ANR	1026545	CastExpression	( int64_t ) min_fixed		1026440	1					
ANR	1026546	CastTarget	int64_t		1026440	0					
ANR	1026547	Identifier	min_fixed		1026440	1					
ANR	1026548	IfStatement	if ( olh -> need_close && olh -> close_path )		1026440	5					
ANR	1026549	Condition	olh -> need_close && olh -> close_path	117:8:2801:2834	1026440	0	True				
ANR	1026550	AndExpression	olh -> need_close && olh -> close_path		1026440	0		&&			
ANR	1026551	PtrMemberAccess	olh -> need_close		1026440	0					
ANR	1026552	Identifier	olh		1026440	0					
ANR	1026553	Identifier	need_close		1026440	1					
ANR	1026554	PtrMemberAccess	olh -> close_path		1026440	1					
ANR	1026555	Identifier	olh		1026440	0					
ANR	1026556	Identifier	close_path		1026440	1					
ANR	1026557	IfStatement	if ( ( I -> gs_error = add_closepath ( I ) ) < 0 )		1026440	1					
ANR	1026558	Condition	( I -> gs_error = add_closepath ( I ) ) < 0	118:12:2849:2884	1026440	0	True				
ANR	1026559	RelationalExpression	( I -> gs_error = add_closepath ( I ) ) < 0		1026440	0		<			
ANR	1026560	AssignmentExpression	I -> gs_error = add_closepath ( I )		1026440	0		=			
ANR	1026561	PtrMemberAccess	I -> gs_error		1026440	0					
ANR	1026562	Identifier	I		1026440	0					
ANR	1026563	Identifier	gs_error		1026440	1					
ANR	1026564	CallExpression	add_closepath ( I )		1026440	1					
ANR	1026565	Callee	add_closepath		1026440	0					
ANR	1026566	Identifier	add_closepath		1026440	0					
ANR	1026567	ArgumentList	I		1026440	1					
ANR	1026568	Argument	I		1026440	0					
ANR	1026569	Identifier	I		1026440	0					
ANR	1026570	PrimaryExpression	0		1026440	1					
ANR	1026571	ReturnStatement	return ( I -> gs_error ) ;	119:12:2899:2919	1026440	1	True				
ANR	1026572	PtrMemberAccess	I -> gs_error		1026440	0					
ANR	1026573	Identifier	I		1026440	0					
ANR	1026574	Identifier	gs_error		1026440	1					
ANR	1026575	ExpressionStatement	olh -> need_close = false	120:4:2925:2948	1026440	6	True				
ANR	1026576	AssignmentExpression	olh -> need_close = false		1026440	0		=			
ANR	1026577	PtrMemberAccess	olh -> need_close		1026440	0					
ANR	1026578	Identifier	olh		1026440	0					
ANR	1026579	Identifier	need_close		1026440	1					
ANR	1026580	Identifier	false		1026440	1					
ANR	1026581	ExpressionStatement	"I -> gs_error = gx_path_add_point ( olh -> path , ( fixed ) x , ( fixed ) y )"	121:4:2954:3018	1026440	7	True				
ANR	1026582	AssignmentExpression	"I -> gs_error = gx_path_add_point ( olh -> path , ( fixed ) x , ( fixed ) y )"		1026440	0		=			
ANR	1026583	PtrMemberAccess	I -> gs_error		1026440	0					
ANR	1026584	Identifier	I		1026440	0					
ANR	1026585	Identifier	gs_error		1026440	1					
ANR	1026586	CallExpression	"gx_path_add_point ( olh -> path , ( fixed ) x , ( fixed ) y )"		1026440	1					
ANR	1026587	Callee	gx_path_add_point		1026440	0					
ANR	1026588	Identifier	gx_path_add_point		1026440	0					
ANR	1026589	ArgumentList	olh -> path		1026440	1					
ANR	1026590	Argument	olh -> path		1026440	0					
ANR	1026591	PtrMemberAccess	olh -> path		1026440	0					
ANR	1026592	Identifier	olh		1026440	0					
ANR	1026593	Identifier	path		1026440	1					
ANR	1026594	Argument	( fixed ) x		1026440	1					
ANR	1026595	CastExpression	( fixed ) x		1026440	0					
ANR	1026596	CastTarget	fixed		1026440	0					
ANR	1026597	Identifier	x		1026440	1					
ANR	1026598	Argument	( fixed ) y		1026440	2					
ANR	1026599	CastExpression	( fixed ) y		1026440	0					
ANR	1026600	CastTarget	fixed		1026440	0					
ANR	1026601	Identifier	y		1026440	1					
ANR	1026602	ReturnStatement	return ( I -> gs_error ) ;	123:4:3025:3045	1026440	8	True				
ANR	1026603	PtrMemberAccess	I -> gs_error		1026440	0					
ANR	1026604	Identifier	I		1026440	0					
ANR	1026605	Identifier	gs_error		1026440	1					
ANR	1026606	ReturnType	static int		1026440	1					
ANR	1026607	Identifier	add_move		1026440	2					
ANR	1026608	ParameterList	"gs_fapi_path * I , int64_t x , int64_t y"		1026440	3					
ANR	1026609	Parameter	gs_fapi_path * I	96:9:2280:2294	1026440	0	True				
ANR	1026610	ParameterType	gs_fapi_path *		1026440	0					
ANR	1026611	Identifier	I		1026440	1					
ANR	1026612	Parameter	int64_t x	96:26:2297:2305	1026440	1	True				
ANR	1026613	ParameterType	int64_t		1026440	0					
ANR	1026614	Identifier	x		1026440	1					
ANR	1026615	Parameter	int64_t y	96:37:2308:2316	1026440	2	True				
ANR	1026616	ParameterType	int64_t		1026440	0					
ANR	1026617	Identifier	y		1026440	1					
ANR	1026618	CFGEntryNode	ENTRY		1026440		True				
ANR	1026619	CFGExitNode	EXIT		1026440		True				
ANR	1026620	Symbol	olh -> need_close		1026440						
ANR	1026621	Symbol	olh -> close_path		1026440						
ANR	1026622	Symbol	false		1026440						
ANR	1026623	Symbol	I		1026440						
ANR	1026624	Symbol	olh		1026440						
ANR	1026625	Symbol	olh -> path		1026440						
ANR	1026626	Symbol	import_shift		1026440						
ANR	1026627	Symbol	I -> gs_error		1026440						
ANR	1026628	Symbol	gx_path_add_point		1026440						
ANR	1026629	Symbol	min_fixed		1026440						
ANR	1026630	Symbol	I -> olh		1026440						
ANR	1026631	Symbol	* I		1026440						
ANR	1026632	Symbol	olh -> y0		1026440						
ANR	1026633	Symbol	add_closepath		1026440						
ANR	1026634	Symbol	* olh		1026440						
ANR	1026635	Symbol	max_fixed		1026440						
ANR	1026636	Symbol	olh -> x0		1026440						
ANR	1026637	Symbol	x		1026440						
ANR	1026638	Symbol	y		1026440						
ANR	1026639	Symbol	I -> shift		1026440						
ANR	1026640	Function	add_line	126:0:3050:3714							
ANR	1026641	FunctionDef	"add_line (gs_fapi_path * I , int64_t x , int64_t y)"		1026640	0					
ANR	1026642	CompoundStatement		128:0:3109:3714	1026640	0					
ANR	1026643	IdentifierDeclStatement	gs_fapi_outline_handler * olh = ( gs_fapi_outline_handler * ) I -> olh ;	129:4:3115:3180	1026640	0	True				
ANR	1026644	IdentifierDecl	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026640	0					
ANR	1026645	IdentifierDeclType	gs_fapi_outline_handler *		1026640	0					
ANR	1026646	Identifier	olh		1026640	1					
ANR	1026647	AssignmentExpression	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026640	2		=			
ANR	1026648	Identifier	olh		1026640	0					
ANR	1026649	CastExpression	( gs_fapi_outline_handler * ) I -> olh		1026640	1					
ANR	1026650	CastTarget	gs_fapi_outline_handler *		1026640	0					
ANR	1026651	PtrMemberAccess	I -> olh		1026640	1					
ANR	1026652	Identifier	I		1026640	0					
ANR	1026653	Identifier	olh		1026640	1					
ANR	1026654	ExpressionStatement	"x = import_shift ( x , I -> shift ) + olh -> x0"	131:4:3187:3226	1026640	1	True				
ANR	1026655	AssignmentExpression	"x = import_shift ( x , I -> shift ) + olh -> x0"		1026640	0		=			
ANR	1026656	Identifier	x		1026640	0					
ANR	1026657	AdditiveExpression	"import_shift ( x , I -> shift ) + olh -> x0"		1026640	1		+			
ANR	1026658	CallExpression	"import_shift ( x , I -> shift )"		1026640	0					
ANR	1026659	Callee	import_shift		1026640	0					
ANR	1026660	Identifier	import_shift		1026640	0					
ANR	1026661	ArgumentList	x		1026640	1					
ANR	1026662	Argument	x		1026640	0					
ANR	1026663	Identifier	x		1026640	0					
ANR	1026664	Argument	I -> shift		1026640	1					
ANR	1026665	PtrMemberAccess	I -> shift		1026640	0					
ANR	1026666	Identifier	I		1026640	0					
ANR	1026667	Identifier	shift		1026640	1					
ANR	1026668	PtrMemberAccess	olh -> x0		1026640	1					
ANR	1026669	Identifier	olh		1026640	0					
ANR	1026670	Identifier	x0		1026640	1					
ANR	1026671	ExpressionStatement	"y = - import_shift ( y , I -> shift ) + olh -> y0"	132:4:3232:3272	1026640	2	True				
ANR	1026672	AssignmentExpression	"y = - import_shift ( y , I -> shift ) + olh -> y0"		1026640	0		=			
ANR	1026673	Identifier	y		1026640	0					
ANR	1026674	AdditiveExpression	"- import_shift ( y , I -> shift ) + olh -> y0"		1026640	1		+			
ANR	1026675	UnaryOperationExpression	"- import_shift ( y , I -> shift )"		1026640	0					
ANR	1026676	UnaryOperator	-		1026640	0					
ANR	1026677	CallExpression	"import_shift ( y , I -> shift )"		1026640	1					
ANR	1026678	Callee	import_shift		1026640	0					
ANR	1026679	Identifier	import_shift		1026640	0					
ANR	1026680	ArgumentList	y		1026640	1					
ANR	1026681	Argument	y		1026640	0					
ANR	1026682	Identifier	y		1026640	0					
ANR	1026683	Argument	I -> shift		1026640	1					
ANR	1026684	PtrMemberAccess	I -> shift		1026640	0					
ANR	1026685	Identifier	I		1026640	0					
ANR	1026686	Identifier	shift		1026640	1					
ANR	1026687	PtrMemberAccess	olh -> y0		1026640	1					
ANR	1026688	Identifier	olh		1026640	0					
ANR	1026689	Identifier	y0		1026640	1					
ANR	1026690	IfStatement	if ( x > ( int64_t ) max_fixed )		1026640	3					
ANR	1026691	Condition	x > ( int64_t ) max_fixed	133:8:3282:3304	1026640	0	True				
ANR	1026692	RelationalExpression	x > ( int64_t ) max_fixed		1026640	0		>			
ANR	1026693	Identifier	x		1026640	0					
ANR	1026694	CastExpression	( int64_t ) max_fixed		1026640	1					
ANR	1026695	CastTarget	int64_t		1026640	0					
ANR	1026696	Identifier	max_fixed		1026640	1					
ANR	1026697	CompoundStatement		6:33:197:197	1026640	1					
ANR	1026698	ExpressionStatement	x = ( int64_t ) max_fixed	134:8:3317:3340	1026640	0	True				
ANR	1026699	AssignmentExpression	x = ( int64_t ) max_fixed		1026640	0		=			
ANR	1026700	Identifier	x		1026640	0					
ANR	1026701	CastExpression	( int64_t ) max_fixed		1026640	1					
ANR	1026702	CastTarget	int64_t		1026640	0					
ANR	1026703	Identifier	max_fixed		1026640	1					
ANR	1026704	ElseStatement	else		1026640	0					
ANR	1026705	IfStatement	if ( x < ( int64_t ) min_fixed )		1026640	0					
ANR	1026706	Condition	x < ( int64_t ) min_fixed	136:13:3361:3383	1026640	0	True				
ANR	1026707	RelationalExpression	x < ( int64_t ) min_fixed		1026640	0		<			
ANR	1026708	Identifier	x		1026640	0					
ANR	1026709	CastExpression	( int64_t ) min_fixed		1026640	1					
ANR	1026710	CastTarget	int64_t		1026640	0					
ANR	1026711	Identifier	min_fixed		1026640	1					
ANR	1026712	CompoundStatement		9:38:276:276	1026640	1					
ANR	1026713	ExpressionStatement	x = ( int64_t ) min_fixed	137:8:3396:3419	1026640	0	True				
ANR	1026714	AssignmentExpression	x = ( int64_t ) min_fixed		1026640	0		=			
ANR	1026715	Identifier	x		1026640	0					
ANR	1026716	CastExpression	( int64_t ) min_fixed		1026640	1					
ANR	1026717	CastTarget	int64_t		1026640	0					
ANR	1026718	Identifier	min_fixed		1026640	1					
ANR	1026719	IfStatement	if ( y > ( int64_t ) max_fixed )		1026640	4					
ANR	1026720	Condition	y > ( int64_t ) max_fixed	140:8:3436:3458	1026640	0	True				
ANR	1026721	RelationalExpression	y > ( int64_t ) max_fixed		1026640	0		>			
ANR	1026722	Identifier	y		1026640	0					
ANR	1026723	CastExpression	( int64_t ) max_fixed		1026640	1					
ANR	1026724	CastTarget	int64_t		1026640	0					
ANR	1026725	Identifier	max_fixed		1026640	1					
ANR	1026726	CompoundStatement		13:33:351:351	1026640	1					
ANR	1026727	ExpressionStatement	y = ( int64_t ) max_fixed	141:8:3471:3494	1026640	0	True				
ANR	1026728	AssignmentExpression	y = ( int64_t ) max_fixed		1026640	0		=			
ANR	1026729	Identifier	y		1026640	0					
ANR	1026730	CastExpression	( int64_t ) max_fixed		1026640	1					
ANR	1026731	CastTarget	int64_t		1026640	0					
ANR	1026732	Identifier	max_fixed		1026640	1					
ANR	1026733	ElseStatement	else		1026640	0					
ANR	1026734	IfStatement	if ( y < ( int64_t ) min_fixed )		1026640	0					
ANR	1026735	Condition	y < ( int64_t ) min_fixed	143:13:3515:3537	1026640	0	True				
ANR	1026736	RelationalExpression	y < ( int64_t ) min_fixed		1026640	0		<			
ANR	1026737	Identifier	y		1026640	0					
ANR	1026738	CastExpression	( int64_t ) min_fixed		1026640	1					
ANR	1026739	CastTarget	int64_t		1026640	0					
ANR	1026740	Identifier	min_fixed		1026640	1					
ANR	1026741	CompoundStatement		16:38:430:430	1026640	1					
ANR	1026742	ExpressionStatement	y = ( int64_t ) min_fixed	144:8:3550:3573	1026640	0	True				
ANR	1026743	AssignmentExpression	y = ( int64_t ) min_fixed		1026640	0		=			
ANR	1026744	Identifier	y		1026640	0					
ANR	1026745	CastExpression	( int64_t ) min_fixed		1026640	1					
ANR	1026746	CastTarget	int64_t		1026640	0					
ANR	1026747	Identifier	min_fixed		1026640	1					
ANR	1026748	ExpressionStatement	olh -> need_close = true	147:4:3586:3608	1026640	5	True				
ANR	1026749	AssignmentExpression	olh -> need_close = true		1026640	0		=			
ANR	1026750	PtrMemberAccess	olh -> need_close		1026640	0					
ANR	1026751	Identifier	olh		1026640	0					
ANR	1026752	Identifier	need_close		1026640	1					
ANR	1026753	Identifier	true		1026640	1					
ANR	1026754	ExpressionStatement	"I -> gs_error = gx_path_add_line_notes ( olh -> path , ( fixed ) x , ( fixed ) y , 0 )"	148:4:3614:3686	1026640	6	True				
ANR	1026755	AssignmentExpression	"I -> gs_error = gx_path_add_line_notes ( olh -> path , ( fixed ) x , ( fixed ) y , 0 )"		1026640	0		=			
ANR	1026756	PtrMemberAccess	I -> gs_error		1026640	0					
ANR	1026757	Identifier	I		1026640	0					
ANR	1026758	Identifier	gs_error		1026640	1					
ANR	1026759	CallExpression	"gx_path_add_line_notes ( olh -> path , ( fixed ) x , ( fixed ) y , 0 )"		1026640	1					
ANR	1026760	Callee	gx_path_add_line_notes		1026640	0					
ANR	1026761	Identifier	gx_path_add_line_notes		1026640	0					
ANR	1026762	ArgumentList	olh -> path		1026640	1					
ANR	1026763	Argument	olh -> path		1026640	0					
ANR	1026764	PtrMemberAccess	olh -> path		1026640	0					
ANR	1026765	Identifier	olh		1026640	0					
ANR	1026766	Identifier	path		1026640	1					
ANR	1026767	Argument	( fixed ) x		1026640	1					
ANR	1026768	CastExpression	( fixed ) x		1026640	0					
ANR	1026769	CastTarget	fixed		1026640	0					
ANR	1026770	Identifier	x		1026640	1					
ANR	1026771	Argument	( fixed ) y		1026640	2					
ANR	1026772	CastExpression	( fixed ) y		1026640	0					
ANR	1026773	CastTarget	fixed		1026640	0					
ANR	1026774	Identifier	y		1026640	1					
ANR	1026775	Argument	0		1026640	3					
ANR	1026776	PrimaryExpression	0		1026640	0					
ANR	1026777	ReturnStatement	return ( I -> gs_error ) ;	149:4:3692:3712	1026640	7	True				
ANR	1026778	PtrMemberAccess	I -> gs_error		1026640	0					
ANR	1026779	Identifier	I		1026640	0					
ANR	1026780	Identifier	gs_error		1026640	1					
ANR	1026781	ReturnType	static int		1026640	1					
ANR	1026782	Identifier	add_line		1026640	2					
ANR	1026783	ParameterList	"gs_fapi_path * I , int64_t x , int64_t y"		1026640	3					
ANR	1026784	Parameter	gs_fapi_path * I	127:9:3070:3084	1026640	0	True				
ANR	1026785	ParameterType	gs_fapi_path *		1026640	0					
ANR	1026786	Identifier	I		1026640	1					
ANR	1026787	Parameter	int64_t x	127:26:3087:3095	1026640	1	True				
ANR	1026788	ParameterType	int64_t		1026640	0					
ANR	1026789	Identifier	x		1026640	1					
ANR	1026790	Parameter	int64_t y	127:37:3098:3106	1026640	2	True				
ANR	1026791	ParameterType	int64_t		1026640	0					
ANR	1026792	Identifier	y		1026640	1					
ANR	1026793	CFGEntryNode	ENTRY		1026640		True				
ANR	1026794	CFGExitNode	EXIT		1026640		True				
ANR	1026795	Symbol	olh -> need_close		1026640						
ANR	1026796	Symbol	gx_path_add_line_notes		1026640						
ANR	1026797	Symbol	I		1026640						
ANR	1026798	Symbol	olh		1026640						
ANR	1026799	Symbol	olh -> path		1026640						
ANR	1026800	Symbol	import_shift		1026640						
ANR	1026801	Symbol	I -> gs_error		1026640						
ANR	1026802	Symbol	min_fixed		1026640						
ANR	1026803	Symbol	I -> olh		1026640						
ANR	1026804	Symbol	* I		1026640						
ANR	1026805	Symbol	olh -> y0		1026640						
ANR	1026806	Symbol	* olh		1026640						
ANR	1026807	Symbol	max_fixed		1026640						
ANR	1026808	Symbol	olh -> x0		1026640						
ANR	1026809	Symbol	x		1026640						
ANR	1026810	Symbol	true		1026640						
ANR	1026811	Symbol	y		1026640						
ANR	1026812	Symbol	I -> shift		1026640						
ANR	1026813	Function	add_curve	152:0:3717:5366							
ANR	1026814	FunctionDef	"add_curve (gs_fapi_path * I , int64_t x0 , int64_t y0 , int64_t x1 , int64_t y1 , int64_t x2 , int64_t y2)"		1026813	0					
ANR	1026815	CompoundStatement		155:0:3837:5366	1026813	0					
ANR	1026816	IdentifierDeclStatement	gs_fapi_outline_handler * olh = ( gs_fapi_outline_handler * ) I -> olh ;	156:4:3843:3908	1026813	0	True				
ANR	1026817	IdentifierDecl	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026813	0					
ANR	1026818	IdentifierDeclType	gs_fapi_outline_handler *		1026813	0					
ANR	1026819	Identifier	olh		1026813	1					
ANR	1026820	AssignmentExpression	* olh = ( gs_fapi_outline_handler * ) I -> olh		1026813	2		=			
ANR	1026821	Identifier	olh		1026813	0					
ANR	1026822	CastExpression	( gs_fapi_outline_handler * ) I -> olh		1026813	1					
ANR	1026823	CastTarget	gs_fapi_outline_handler *		1026813	0					
ANR	1026824	PtrMemberAccess	I -> olh		1026813	1					
ANR	1026825	Identifier	I		1026813	0					
ANR	1026826	Identifier	olh		1026813	1					
ANR	1026827	ExpressionStatement	"x0 = import_shift ( x0 , I -> shift ) + olh -> x0"	158:4:3915:3956	1026813	1	True				
ANR	1026828	AssignmentExpression	"x0 = import_shift ( x0 , I -> shift ) + olh -> x0"		1026813	0		=			
ANR	1026829	Identifier	x0		1026813	0					
ANR	1026830	AdditiveExpression	"import_shift ( x0 , I -> shift ) + olh -> x0"		1026813	1		+			
ANR	1026831	CallExpression	"import_shift ( x0 , I -> shift )"		1026813	0					
ANR	1026832	Callee	import_shift		1026813	0					
ANR	1026833	Identifier	import_shift		1026813	0					
ANR	1026834	ArgumentList	x0		1026813	1					
ANR	1026835	Argument	x0		1026813	0					
ANR	1026836	Identifier	x0		1026813	0					
ANR	1026837	Argument	I -> shift		1026813	1					
ANR	1026838	PtrMemberAccess	I -> shift		1026813	0					
ANR	1026839	Identifier	I		1026813	0					
ANR	1026840	Identifier	shift		1026813	1					
ANR	1026841	PtrMemberAccess	olh -> x0		1026813	1					
ANR	1026842	Identifier	olh		1026813	0					
ANR	1026843	Identifier	x0		1026813	1					
ANR	1026844	ExpressionStatement	"y0 = - import_shift ( y0 , I -> shift ) + olh -> y0"	159:4:3962:4004	1026813	2	True				
ANR	1026845	AssignmentExpression	"y0 = - import_shift ( y0 , I -> shift ) + olh -> y0"		1026813	0		=			
ANR	1026846	Identifier	y0		1026813	0					
ANR	1026847	AdditiveExpression	"- import_shift ( y0 , I -> shift ) + olh -> y0"		1026813	1		+			
ANR	1026848	UnaryOperationExpression	"- import_shift ( y0 , I -> shift )"		1026813	0					
ANR	1026849	UnaryOperator	-		1026813	0					
ANR	1026850	CallExpression	"import_shift ( y0 , I -> shift )"		1026813	1					
ANR	1026851	Callee	import_shift		1026813	0					
ANR	1026852	Identifier	import_shift		1026813	0					
ANR	1026853	ArgumentList	y0		1026813	1					
ANR	1026854	Argument	y0		1026813	0					
ANR	1026855	Identifier	y0		1026813	0					
ANR	1026856	Argument	I -> shift		1026813	1					
ANR	1026857	PtrMemberAccess	I -> shift		1026813	0					
ANR	1026858	Identifier	I		1026813	0					
ANR	1026859	Identifier	shift		1026813	1					
ANR	1026860	PtrMemberAccess	olh -> y0		1026813	1					
ANR	1026861	Identifier	olh		1026813	0					
ANR	1026862	Identifier	y0		1026813	1					
ANR	1026863	ExpressionStatement	"x1 = import_shift ( x1 , I -> shift ) + olh -> x0"	160:4:4010:4051	1026813	3	True				
ANR	1026864	AssignmentExpression	"x1 = import_shift ( x1 , I -> shift ) + olh -> x0"		1026813	0		=			
ANR	1026865	Identifier	x1		1026813	0					
ANR	1026866	AdditiveExpression	"import_shift ( x1 , I -> shift ) + olh -> x0"		1026813	1		+			
ANR	1026867	CallExpression	"import_shift ( x1 , I -> shift )"		1026813	0					
ANR	1026868	Callee	import_shift		1026813	0					
ANR	1026869	Identifier	import_shift		1026813	0					
ANR	1026870	ArgumentList	x1		1026813	1					
ANR	1026871	Argument	x1		1026813	0					
ANR	1026872	Identifier	x1		1026813	0					
ANR	1026873	Argument	I -> shift		1026813	1					
ANR	1026874	PtrMemberAccess	I -> shift		1026813	0					
ANR	1026875	Identifier	I		1026813	0					
ANR	1026876	Identifier	shift		1026813	1					
ANR	1026877	PtrMemberAccess	olh -> x0		1026813	1					
ANR	1026878	Identifier	olh		1026813	0					
ANR	1026879	Identifier	x0		1026813	1					
ANR	1026880	ExpressionStatement	"y1 = - import_shift ( y1 , I -> shift ) + olh -> y0"	161:4:4057:4099	1026813	4	True				
ANR	1026881	AssignmentExpression	"y1 = - import_shift ( y1 , I -> shift ) + olh -> y0"		1026813	0		=			
ANR	1026882	Identifier	y1		1026813	0					
ANR	1026883	AdditiveExpression	"- import_shift ( y1 , I -> shift ) + olh -> y0"		1026813	1		+			
ANR	1026884	UnaryOperationExpression	"- import_shift ( y1 , I -> shift )"		1026813	0					
ANR	1026885	UnaryOperator	-		1026813	0					
ANR	1026886	CallExpression	"import_shift ( y1 , I -> shift )"		1026813	1					
ANR	1026887	Callee	import_shift		1026813	0					
ANR	1026888	Identifier	import_shift		1026813	0					
ANR	1026889	ArgumentList	y1		1026813	1					
ANR	1026890	Argument	y1		1026813	0					
ANR	1026891	Identifier	y1		1026813	0					
ANR	1026892	Argument	I -> shift		1026813	1					
ANR	1026893	PtrMemberAccess	I -> shift		1026813	0					
ANR	1026894	Identifier	I		1026813	0					
ANR	1026895	Identifier	shift		1026813	1					
ANR	1026896	PtrMemberAccess	olh -> y0		1026813	1					
ANR	1026897	Identifier	olh		1026813	0					
ANR	1026898	Identifier	y0		1026813	1					
ANR	1026899	ExpressionStatement	"x2 = import_shift ( x2 , I -> shift ) + olh -> x0"	162:4:4105:4146	1026813	5	True				
ANR	1026900	AssignmentExpression	"x2 = import_shift ( x2 , I -> shift ) + olh -> x0"		1026813	0		=			
ANR	1026901	Identifier	x2		1026813	0					
ANR	1026902	AdditiveExpression	"import_shift ( x2 , I -> shift ) + olh -> x0"		1026813	1		+			
ANR	1026903	CallExpression	"import_shift ( x2 , I -> shift )"		1026813	0					
ANR	1026904	Callee	import_shift		1026813	0					
ANR	1026905	Identifier	import_shift		1026813	0					
ANR	1026906	ArgumentList	x2		1026813	1					
ANR	1026907	Argument	x2		1026813	0					
ANR	1026908	Identifier	x2		1026813	0					
ANR	1026909	Argument	I -> shift		1026813	1					
ANR	1026910	PtrMemberAccess	I -> shift		1026813	0					
ANR	1026911	Identifier	I		1026813	0					
ANR	1026912	Identifier	shift		1026813	1					
ANR	1026913	PtrMemberAccess	olh -> x0		1026813	1					
ANR	1026914	Identifier	olh		1026813	0					
ANR	1026915	Identifier	x0		1026813	1					
ANR	1026916	ExpressionStatement	"y2 = - import_shift ( y2 , I -> shift ) + olh -> y0"	163:4:4152:4194	1026813	6	True				
ANR	1026917	AssignmentExpression	"y2 = - import_shift ( y2 , I -> shift ) + olh -> y0"		1026813	0		=			
ANR	1026918	Identifier	y2		1026813	0					
ANR	1026919	AdditiveExpression	"- import_shift ( y2 , I -> shift ) + olh -> y0"		1026813	1		+			
ANR	1026920	UnaryOperationExpression	"- import_shift ( y2 , I -> shift )"		1026813	0					
ANR	1026921	UnaryOperator	-		1026813	0					
ANR	1026922	CallExpression	"import_shift ( y2 , I -> shift )"		1026813	1					
ANR	1026923	Callee	import_shift		1026813	0					
ANR	1026924	Identifier	import_shift		1026813	0					
ANR	1026925	ArgumentList	y2		1026813	1					
ANR	1026926	Argument	y2		1026813	0					
ANR	1026927	Identifier	y2		1026813	0					
ANR	1026928	Argument	I -> shift		1026813	1					
ANR	1026929	PtrMemberAccess	I -> shift		1026813	0					
ANR	1026930	Identifier	I		1026813	0					
ANR	1026931	Identifier	shift		1026813	1					
ANR	1026932	PtrMemberAccess	olh -> y0		1026813	1					
ANR	1026933	Identifier	olh		1026813	0					
ANR	1026934	Identifier	y0		1026813	1					
ANR	1026935	IfStatement	if ( x0 > ( int64_t ) max_fixed )		1026813	7					
ANR	1026936	Condition	x0 > ( int64_t ) max_fixed	165:8:4205:4228	1026813	0	True				
ANR	1026937	RelationalExpression	x0 > ( int64_t ) max_fixed		1026813	0		>			
ANR	1026938	Identifier	x0		1026813	0					
ANR	1026939	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1026940	CastTarget	int64_t		1026813	0					
ANR	1026941	Identifier	max_fixed		1026813	1					
ANR	1026942	CompoundStatement		11:34:393:393	1026813	1					
ANR	1026943	ExpressionStatement	x0 = ( int64_t ) max_fixed	166:8:4241:4265	1026813	0	True				
ANR	1026944	AssignmentExpression	x0 = ( int64_t ) max_fixed		1026813	0		=			
ANR	1026945	Identifier	x0		1026813	0					
ANR	1026946	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1026947	CastTarget	int64_t		1026813	0					
ANR	1026948	Identifier	max_fixed		1026813	1					
ANR	1026949	ElseStatement	else		1026813	0					
ANR	1026950	IfStatement	if ( x0 < ( int64_t ) min_fixed )		1026813	0					
ANR	1026951	Condition	x0 < ( int64_t ) min_fixed	168:13:4286:4309	1026813	0	True				
ANR	1026952	RelationalExpression	x0 < ( int64_t ) min_fixed		1026813	0		<			
ANR	1026953	Identifier	x0		1026813	0					
ANR	1026954	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1026955	CastTarget	int64_t		1026813	0					
ANR	1026956	Identifier	min_fixed		1026813	1					
ANR	1026957	CompoundStatement		14:39:474:474	1026813	1					
ANR	1026958	ExpressionStatement	x0 = ( int64_t ) min_fixed	169:8:4322:4346	1026813	0	True				
ANR	1026959	AssignmentExpression	x0 = ( int64_t ) min_fixed		1026813	0		=			
ANR	1026960	Identifier	x0		1026813	0					
ANR	1026961	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1026962	CastTarget	int64_t		1026813	0					
ANR	1026963	Identifier	min_fixed		1026813	1					
ANR	1026964	IfStatement	if ( y0 > ( int64_t ) max_fixed )		1026813	8					
ANR	1026965	Condition	y0 > ( int64_t ) max_fixed	172:8:4363:4386	1026813	0	True				
ANR	1026966	RelationalExpression	y0 > ( int64_t ) max_fixed		1026813	0		>			
ANR	1026967	Identifier	y0		1026813	0					
ANR	1026968	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1026969	CastTarget	int64_t		1026813	0					
ANR	1026970	Identifier	max_fixed		1026813	1					
ANR	1026971	CompoundStatement		18:34:551:551	1026813	1					
ANR	1026972	ExpressionStatement	y0 = ( int64_t ) max_fixed	173:8:4399:4423	1026813	0	True				
ANR	1026973	AssignmentExpression	y0 = ( int64_t ) max_fixed		1026813	0		=			
ANR	1026974	Identifier	y0		1026813	0					
ANR	1026975	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1026976	CastTarget	int64_t		1026813	0					
ANR	1026977	Identifier	max_fixed		1026813	1					
ANR	1026978	ElseStatement	else		1026813	0					
ANR	1026979	IfStatement	if ( y0 < ( int64_t ) min_fixed )		1026813	0					
ANR	1026980	Condition	y0 < ( int64_t ) min_fixed	175:13:4444:4467	1026813	0	True				
ANR	1026981	RelationalExpression	y0 < ( int64_t ) min_fixed		1026813	0		<			
ANR	1026982	Identifier	y0		1026813	0					
ANR	1026983	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1026984	CastTarget	int64_t		1026813	0					
ANR	1026985	Identifier	min_fixed		1026813	1					
ANR	1026986	CompoundStatement		21:39:632:632	1026813	1					
ANR	1026987	ExpressionStatement	y0 = ( int64_t ) min_fixed	176:8:4480:4504	1026813	0	True				
ANR	1026988	AssignmentExpression	y0 = ( int64_t ) min_fixed		1026813	0		=			
ANR	1026989	Identifier	y0		1026813	0					
ANR	1026990	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1026991	CastTarget	int64_t		1026813	0					
ANR	1026992	Identifier	min_fixed		1026813	1					
ANR	1026993	IfStatement	if ( x1 > ( int64_t ) max_fixed )		1026813	9					
ANR	1026994	Condition	x1 > ( int64_t ) max_fixed	178:8:4520:4543	1026813	0	True				
ANR	1026995	RelationalExpression	x1 > ( int64_t ) max_fixed		1026813	0		>			
ANR	1026996	Identifier	x1		1026813	0					
ANR	1026997	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1026998	CastTarget	int64_t		1026813	0					
ANR	1026999	Identifier	max_fixed		1026813	1					
ANR	1027000	CompoundStatement		24:34:708:708	1026813	1					
ANR	1027001	ExpressionStatement	x1 = ( int64_t ) max_fixed	179:8:4556:4580	1026813	0	True				
ANR	1027002	AssignmentExpression	x1 = ( int64_t ) max_fixed		1026813	0		=			
ANR	1027003	Identifier	x1		1026813	0					
ANR	1027004	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1027005	CastTarget	int64_t		1026813	0					
ANR	1027006	Identifier	max_fixed		1026813	1					
ANR	1027007	ElseStatement	else		1026813	0					
ANR	1027008	IfStatement	if ( x1 < ( int64_t ) min_fixed )		1026813	0					
ANR	1027009	Condition	x1 < ( int64_t ) min_fixed	181:13:4601:4624	1026813	0	True				
ANR	1027010	RelationalExpression	x1 < ( int64_t ) min_fixed		1026813	0		<			
ANR	1027011	Identifier	x1		1026813	0					
ANR	1027012	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027013	CastTarget	int64_t		1026813	0					
ANR	1027014	Identifier	min_fixed		1026813	1					
ANR	1027015	CompoundStatement		27:39:789:789	1026813	1					
ANR	1027016	ExpressionStatement	x1 = ( int64_t ) min_fixed	182:8:4637:4661	1026813	0	True				
ANR	1027017	AssignmentExpression	x1 = ( int64_t ) min_fixed		1026813	0		=			
ANR	1027018	Identifier	x1		1026813	0					
ANR	1027019	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027020	CastTarget	int64_t		1026813	0					
ANR	1027021	Identifier	min_fixed		1026813	1					
ANR	1027022	IfStatement	if ( y1 > ( int64_t ) max_fixed )		1026813	10					
ANR	1027023	Condition	y1 > ( int64_t ) max_fixed	185:8:4678:4701	1026813	0	True				
ANR	1027024	RelationalExpression	y1 > ( int64_t ) max_fixed		1026813	0		>			
ANR	1027025	Identifier	y1		1026813	0					
ANR	1027026	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1027027	CastTarget	int64_t		1026813	0					
ANR	1027028	Identifier	max_fixed		1026813	1					
ANR	1027029	CompoundStatement		31:34:866:866	1026813	1					
ANR	1027030	ExpressionStatement	y1 = ( int64_t ) max_fixed	186:8:4714:4738	1026813	0	True				
ANR	1027031	AssignmentExpression	y1 = ( int64_t ) max_fixed		1026813	0		=			
ANR	1027032	Identifier	y1		1026813	0					
ANR	1027033	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1027034	CastTarget	int64_t		1026813	0					
ANR	1027035	Identifier	max_fixed		1026813	1					
ANR	1027036	ElseStatement	else		1026813	0					
ANR	1027037	IfStatement	if ( y1 < ( int64_t ) min_fixed )		1026813	0					
ANR	1027038	Condition	y1 < ( int64_t ) min_fixed	188:13:4759:4782	1026813	0	True				
ANR	1027039	RelationalExpression	y1 < ( int64_t ) min_fixed		1026813	0		<			
ANR	1027040	Identifier	y1		1026813	0					
ANR	1027041	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027042	CastTarget	int64_t		1026813	0					
ANR	1027043	Identifier	min_fixed		1026813	1					
ANR	1027044	CompoundStatement		34:39:947:947	1026813	1					
ANR	1027045	ExpressionStatement	y1 = ( int64_t ) min_fixed	189:8:4795:4819	1026813	0	True				
ANR	1027046	AssignmentExpression	y1 = ( int64_t ) min_fixed		1026813	0		=			
ANR	1027047	Identifier	y1		1026813	0					
ANR	1027048	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027049	CastTarget	int64_t		1026813	0					
ANR	1027050	Identifier	min_fixed		1026813	1					
ANR	1027051	IfStatement	if ( x2 > ( int64_t ) max_fixed )		1026813	11					
ANR	1027052	Condition	x2 > ( int64_t ) max_fixed	191:8:4835:4858	1026813	0	True				
ANR	1027053	RelationalExpression	x2 > ( int64_t ) max_fixed		1026813	0		>			
ANR	1027054	Identifier	x2		1026813	0					
ANR	1027055	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1027056	CastTarget	int64_t		1026813	0					
ANR	1027057	Identifier	max_fixed		1026813	1					
ANR	1027058	CompoundStatement		37:34:1023:1023	1026813	1					
ANR	1027059	ExpressionStatement	x2 = ( int64_t ) max_fixed	192:8:4871:4895	1026813	0	True				
ANR	1027060	AssignmentExpression	x2 = ( int64_t ) max_fixed		1026813	0		=			
ANR	1027061	Identifier	x2		1026813	0					
ANR	1027062	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1027063	CastTarget	int64_t		1026813	0					
ANR	1027064	Identifier	max_fixed		1026813	1					
ANR	1027065	ElseStatement	else		1026813	0					
ANR	1027066	IfStatement	if ( x2 < ( int64_t ) min_fixed )		1026813	0					
ANR	1027067	Condition	x2 < ( int64_t ) min_fixed	194:13:4916:4939	1026813	0	True				
ANR	1027068	RelationalExpression	x2 < ( int64_t ) min_fixed		1026813	0		<			
ANR	1027069	Identifier	x2		1026813	0					
ANR	1027070	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027071	CastTarget	int64_t		1026813	0					
ANR	1027072	Identifier	min_fixed		1026813	1					
ANR	1027073	CompoundStatement		40:39:1104:1104	1026813	1					
ANR	1027074	ExpressionStatement	x2 = ( int64_t ) min_fixed	195:8:4952:4976	1026813	0	True				
ANR	1027075	AssignmentExpression	x2 = ( int64_t ) min_fixed		1026813	0		=			
ANR	1027076	Identifier	x2		1026813	0					
ANR	1027077	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027078	CastTarget	int64_t		1026813	0					
ANR	1027079	Identifier	min_fixed		1026813	1					
ANR	1027080	IfStatement	if ( y2 > ( int64_t ) max_fixed )		1026813	12					
ANR	1027081	Condition	y2 > ( int64_t ) max_fixed	198:8:4993:5016	1026813	0	True				
ANR	1027082	RelationalExpression	y2 > ( int64_t ) max_fixed		1026813	0		>			
ANR	1027083	Identifier	y2		1026813	0					
ANR	1027084	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1027085	CastTarget	int64_t		1026813	0					
ANR	1027086	Identifier	max_fixed		1026813	1					
ANR	1027087	CompoundStatement		44:34:1181:1181	1026813	1					
ANR	1027088	ExpressionStatement	y2 = ( int64_t ) max_fixed	199:8:5029:5053	1026813	0	True				
ANR	1027089	AssignmentExpression	y2 = ( int64_t ) max_fixed		1026813	0		=			
ANR	1027090	Identifier	y2		1026813	0					
ANR	1027091	CastExpression	( int64_t ) max_fixed		1026813	1					
ANR	1027092	CastTarget	int64_t		1026813	0					
ANR	1027093	Identifier	max_fixed		1026813	1					
ANR	1027094	ElseStatement	else		1026813	0					
ANR	1027095	IfStatement	if ( y2 < ( int64_t ) min_fixed )		1026813	0					
ANR	1027096	Condition	y2 < ( int64_t ) min_fixed	201:13:5074:5097	1026813	0	True				
ANR	1027097	RelationalExpression	y2 < ( int64_t ) min_fixed		1026813	0		<			
ANR	1027098	Identifier	y2		1026813	0					
ANR	1027099	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027100	CastTarget	int64_t		1026813	0					
ANR	1027101	Identifier	min_fixed		1026813	1					
ANR	1027102	CompoundStatement		47:39:1262:1262	1026813	1					
ANR	1027103	ExpressionStatement	y2 = ( int64_t ) min_fixed	202:8:5110:5134	1026813	0	True				
ANR	1027104	AssignmentExpression	y2 = ( int64_t ) min_fixed		1026813	0		=			
ANR	1027105	Identifier	y2		1026813	0					
ANR	1027106	CastExpression	( int64_t ) min_fixed		1026813	1					
ANR	1027107	CastTarget	int64_t		1026813	0					
ANR	1027108	Identifier	min_fixed		1026813	1					
ANR	1027109	ExpressionStatement	olh -> need_close = true	205:4:5147:5169	1026813	13	True				
ANR	1027110	AssignmentExpression	olh -> need_close = true		1026813	0		=			
ANR	1027111	PtrMemberAccess	olh -> need_close		1026813	0					
ANR	1027112	Identifier	olh		1026813	0					
ANR	1027113	Identifier	need_close		1026813	1					
ANR	1027114	Identifier	true		1026813	1					
ANR	1027115	ExpressionStatement	"I -> gs_error = gx_path_add_curve_notes ( olh -> path , ( fixed ) x0 , ( fixed ) y0 , ( fixed ) x1 , ( fixed ) y1 , ( fixed ) x2 , ( fixed ) y2 , 0 )"	206:4:5175:5338	1026813	14	True				
ANR	1027116	AssignmentExpression	"I -> gs_error = gx_path_add_curve_notes ( olh -> path , ( fixed ) x0 , ( fixed ) y0 , ( fixed ) x1 , ( fixed ) y1 , ( fixed ) x2 , ( fixed ) y2 , 0 )"		1026813	0		=			
ANR	1027117	PtrMemberAccess	I -> gs_error		1026813	0					
ANR	1027118	Identifier	I		1026813	0					
ANR	1027119	Identifier	gs_error		1026813	1					
ANR	1027120	CallExpression	"gx_path_add_curve_notes ( olh -> path , ( fixed ) x0 , ( fixed ) y0 , ( fixed ) x1 , ( fixed ) y1 , ( fixed ) x2 , ( fixed ) y2 , 0 )"		1026813	1					
ANR	1027121	Callee	gx_path_add_curve_notes		1026813	0					
ANR	1027122	Identifier	gx_path_add_curve_notes		1026813	0					
ANR	1027123	ArgumentList	olh -> path		1026813	1					
ANR	1027124	Argument	olh -> path		1026813	0					
ANR	1027125	PtrMemberAccess	olh -> path		1026813	0					
ANR	1027126	Identifier	olh		1026813	0					
ANR	1027127	Identifier	path		1026813	1					
ANR	1027128	Argument	( fixed ) x0		1026813	1					
ANR	1027129	CastExpression	( fixed ) x0		1026813	0					
ANR	1027130	CastTarget	fixed		1026813	0					
ANR	1027131	Identifier	x0		1026813	1					
ANR	1027132	Argument	( fixed ) y0		1026813	2					
ANR	1027133	CastExpression	( fixed ) y0		1026813	0					
ANR	1027134	CastTarget	fixed		1026813	0					
ANR	1027135	Identifier	y0		1026813	1					
ANR	1027136	Argument	( fixed ) x1		1026813	3					
ANR	1027137	CastExpression	( fixed ) x1		1026813	0					
ANR	1027138	CastTarget	fixed		1026813	0					
ANR	1027139	Identifier	x1		1026813	1					
ANR	1027140	Argument	( fixed ) y1		1026813	4					
ANR	1027141	CastExpression	( fixed ) y1		1026813	0					
ANR	1027142	CastTarget	fixed		1026813	0					
ANR	1027143	Identifier	y1		1026813	1					
ANR	1027144	Argument	( fixed ) x2		1026813	5					
ANR	1027145	CastExpression	( fixed ) x2		1026813	0					
ANR	1027146	CastTarget	fixed		1026813	0					
ANR	1027147	Identifier	x2		1026813	1					
ANR	1027148	Argument	( fixed ) y2		1026813	6					
ANR	1027149	CastExpression	( fixed ) y2		1026813	0					
ANR	1027150	CastTarget	fixed		1026813	0					
ANR	1027151	Identifier	y2		1026813	1					
ANR	1027152	Argument	0		1026813	7					
ANR	1027153	PrimaryExpression	0		1026813	0					
ANR	1027154	ReturnStatement	return ( I -> gs_error ) ;	209:4:5344:5364	1026813	15	True				
ANR	1027155	PtrMemberAccess	I -> gs_error		1026813	0					
ANR	1027156	Identifier	I		1026813	0					
ANR	1027157	Identifier	gs_error		1026813	1					
ANR	1027158	ReturnType	static int		1026813	1					
ANR	1027159	Identifier	add_curve		1026813	2					
ANR	1027160	ParameterList	"gs_fapi_path * I , int64_t x0 , int64_t y0 , int64_t x1 , int64_t y1 , int64_t x2 , int64_t y2"		1026813	3					
ANR	1027161	Parameter	gs_fapi_path * I	153:10:3738:3752	1026813	0	True				
ANR	1027162	ParameterType	gs_fapi_path *		1026813	0					
ANR	1027163	Identifier	I		1026813	1					
ANR	1027164	Parameter	int64_t x0	153:27:3755:3764	1026813	1	True				
ANR	1027165	ParameterType	int64_t		1026813	0					
ANR	1027166	Identifier	x0		1026813	1					
ANR	1027167	Parameter	int64_t y0	153:39:3767:3776	1026813	2	True				
ANR	1027168	ParameterType	int64_t		1026813	0					
ANR	1027169	Identifier	y0		1026813	1					
ANR	1027170	Parameter	int64_t x1	153:51:3779:3788	1026813	3	True				
ANR	1027171	ParameterType	int64_t		1026813	0					
ANR	1027172	Identifier	x1		1026813	1					
ANR	1027173	Parameter	int64_t y1	153:63:3791:3800	1026813	4	True				
ANR	1027174	ParameterType	int64_t		1026813	0					
ANR	1027175	Identifier	y1		1026813	1					
ANR	1027176	Parameter	int64_t x2	154:10:3813:3822	1026813	5	True				
ANR	1027177	ParameterType	int64_t		1026813	0					
ANR	1027178	Identifier	x2		1026813	1					
ANR	1027179	Parameter	int64_t y2	154:22:3825:3834	1026813	6	True				
ANR	1027180	ParameterType	int64_t		1026813	0					
ANR	1027181	Identifier	y2		1026813	1					
ANR	1027182	CFGEntryNode	ENTRY		1026813		True				
ANR	1027183	CFGExitNode	EXIT		1026813		True				
ANR	1027184	Symbol	olh -> need_close		1026813						
ANR	1027185	Symbol	I		1026813						
ANR	1027186	Symbol	olh		1026813						
ANR	1027187	Symbol	olh -> path		1026813						
ANR	1027188	Symbol	import_shift		1026813						
ANR	1027189	Symbol	I -> gs_error		1026813						
ANR	1027190	Symbol	min_fixed		1026813						
ANR	1027191	Symbol	I -> olh		1026813						
ANR	1027192	Symbol	* I		1026813						
ANR	1027193	Symbol	olh -> y0		1026813						
ANR	1027194	Symbol	* olh		1026813						
ANR	1027195	Symbol	max_fixed		1026813						
ANR	1027196	Symbol	y0		1026813						
ANR	1027197	Symbol	olh -> x0		1026813						
ANR	1027198	Symbol	x0		1026813						
ANR	1027199	Symbol	y1		1026813						
ANR	1027200	Symbol	true		1026813						
ANR	1027201	Symbol	x1		1026813						
ANR	1027202	Symbol	y2		1026813						
ANR	1027203	Symbol	x2		1026813						
ANR	1027204	Symbol	gx_path_add_curve_notes		1026813						
ANR	1027205	Symbol	I -> shift		1026813						
ANR	1027206	DeclStmt									
ANR	1027207	Decl							gs_fapi_path	gs_fapi_path	path_interface_stub
ANR	1027208	Function	gs_fapi_get_metrics_count	215:0:5478:5702							
ANR	1027209	FunctionDef	gs_fapi_get_metrics_count (gs_fapi_font * ff)		1027208	0					
ANR	1027210	CompoundStatement		217:0:5526:5702	1027208	0					
ANR	1027211	IfStatement	if ( ! ff -> is_type1 && ff -> is_cid )		1027208	0					
ANR	1027212	Condition	! ff -> is_type1 && ff -> is_cid	218:8:5536:5562	1027208	0	True				
ANR	1027213	AndExpression	! ff -> is_type1 && ff -> is_cid		1027208	0		&&			
ANR	1027214	UnaryOperationExpression	! ff -> is_type1		1027208	0					
ANR	1027215	UnaryOperator	!		1027208	0					
ANR	1027216	PtrMemberAccess	ff -> is_type1		1027208	1					
ANR	1027217	Identifier	ff		1027208	0					
ANR	1027218	Identifier	is_type1		1027208	1					
ANR	1027219	PtrMemberAccess	ff -> is_cid		1027208	1					
ANR	1027220	Identifier	ff		1027208	0					
ANR	1027221	Identifier	is_cid		1027208	1					
ANR	1027222	CompoundStatement		3:8:48:107	1027208	1					
ANR	1027223	IdentifierDeclStatement	gs_font_cid2 * pfcid = ( gs_font_cid2 * ) ff -> client_font_data ;	219:8:5575:5634	1027208	0	True				
ANR	1027224	IdentifierDecl	* pfcid = ( gs_font_cid2 * ) ff -> client_font_data		1027208	0					
ANR	1027225	IdentifierDeclType	gs_font_cid2 *		1027208	0					
ANR	1027226	Identifier	pfcid		1027208	1					
ANR	1027227	AssignmentExpression	* pfcid = ( gs_font_cid2 * ) ff -> client_font_data		1027208	2		=			
ANR	1027228	Identifier	pfcid		1027208	0					
ANR	1027229	CastExpression	( gs_font_cid2 * ) ff -> client_font_data		1027208	1					
ANR	1027230	CastTarget	gs_font_cid2 *		1027208	0					
ANR	1027231	PtrMemberAccess	ff -> client_font_data		1027208	1					
ANR	1027232	Identifier	ff		1027208	0					
ANR	1027233	Identifier	client_font_data		1027208	1					
ANR	1027234	ReturnStatement	return ( pfcid -> cidata . MetricsCount ) ;	221:8:5645:5680	1027208	1	True				
ANR	1027235	MemberAccess	pfcid -> cidata . MetricsCount		1027208	0					
ANR	1027236	PtrMemberAccess	pfcid -> cidata		1027208	0					
ANR	1027237	Identifier	pfcid		1027208	0					
ANR	1027238	Identifier	cidata		1027208	1					
ANR	1027239	Identifier	MetricsCount		1027208	1					
ANR	1027240	ReturnStatement	return 0 ;	223:4:5692:5700	1027208	1	True				
ANR	1027241	PrimaryExpression	0		1027208	0					
ANR	1027242	ReturnType	int		1027208	1					
ANR	1027243	Identifier	gs_fapi_get_metrics_count		1027208	2					
ANR	1027244	ParameterList	gs_fapi_font * ff		1027208	3					
ANR	1027245	Parameter	gs_fapi_font * ff	216:26:5508:5523	1027208	0	True				
ANR	1027246	ParameterType	gs_fapi_font *		1027208	0					
ANR	1027247	Identifier	ff		1027208	1					
ANR	1027248	CFGEntryNode	ENTRY		1027208		True				
ANR	1027249	CFGExitNode	EXIT		1027208		True				
ANR	1027250	Symbol	ff		1027208						
ANR	1027251	Symbol	pfcid -> cidata		1027208						
ANR	1027252	Symbol	pfcid -> cidata . MetricsCount		1027208						
ANR	1027253	Symbol	pfcid		1027208						
ANR	1027254	Symbol	ff -> is_type1		1027208						
ANR	1027255	Symbol	ff -> is_cid		1027208						
ANR	1027256	Symbol	* ff		1027208						
ANR	1027257	Symbol	ff -> client_font_data		1027208						
ANR	1027258	Symbol	* pfcid		1027208						
ANR	1027259	Function	fapi_gs_char_show_width_only	234:0:6035:6461							
ANR	1027260	FunctionDef	fapi_gs_char_show_width_only (const gs_text_enum_t * penum)		1027259	0					
ANR	1027261	CompoundStatement		236:0:6112:6461	1027259	0					
ANR	1027262	IfStatement	if ( ! gs_text_is_width_only ( penum ) )		1027259	0					
ANR	1027263	Condition	! gs_text_is_width_only ( penum )	237:8:6122:6150	1027259	0	True				
ANR	1027264	UnaryOperationExpression	! gs_text_is_width_only ( penum )		1027259	0					
ANR	1027265	UnaryOperator	!		1027259	0					
ANR	1027266	CallExpression	gs_text_is_width_only ( penum )		1027259	1					
ANR	1027267	Callee	gs_text_is_width_only		1027259	0					
ANR	1027268	Identifier	gs_text_is_width_only		1027259	0					
ANR	1027269	ArgumentList	penum		1027259	1					
ANR	1027270	Argument	penum		1027259	0					
ANR	1027271	Identifier	penum		1027259	0					
ANR	1027272	ReturnStatement	return false ;	238:8:6161:6173	1027259	1	True				
ANR	1027273	Identifier	false		1027259	0					
ANR	1027274	SwitchStatement	switch ( penum -> orig_font -> FontType )		1027259	1					
ANR	1027275	Condition	penum -> orig_font -> FontType	239:12:6187:6212	1027259	0	True				
ANR	1027276	PtrMemberAccess	penum -> orig_font -> FontType		1027259	0					
ANR	1027277	PtrMemberAccess	penum -> orig_font		1027259	0					
ANR	1027278	Identifier	penum		1027259	0					
ANR	1027279	Identifier	orig_font		1027259	1					
ANR	1027280	Identifier	FontType		1027259	1					
ANR	1027281	CompoundStatement		4:40:102:102	1027259	1					
ANR	1027282	Label	case ft_encrypted :	240:8:6225:6242	1027259	0	True				
ANR	1027283	Identifier	ft_encrypted		1027259	0					
ANR	1027284	Label	case ft_encrypted2 :	241:8:6252:6270	1027259	1	True				
ANR	1027285	Identifier	ft_encrypted2		1027259	0					
ANR	1027286	Label	case ft_CID_encrypted :	242:8:6280:6301	1027259	2	True				
ANR	1027287	Identifier	ft_CID_encrypted		1027259	0					
ANR	1027288	Label	case ft_CID_TrueType :	243:8:6311:6331	1027259	3	True				
ANR	1027289	Identifier	ft_CID_TrueType		1027259	0					
ANR	1027290	Label	case ft_CID_bitmap :	244:8:6341:6359	1027259	4	True				
ANR	1027291	Identifier	ft_CID_bitmap		1027259	0					
ANR	1027292	Label	case ft_TrueType :	245:8:6369:6385	1027259	5	True				
ANR	1027293	Identifier	ft_TrueType		1027259	0					
ANR	1027294	ReturnStatement	return true ;	246:12:6399:6410	1027259	6	True				
ANR	1027295	Identifier	true		1027259	0					
ANR	1027296	Label	default :	247:8:6420:6427	1027259	7	True				
ANR	1027297	Identifier	default		1027259	0					
ANR	1027298	ReturnStatement	return false ;	248:12:6441:6453	1027259	8	True				
ANR	1027299	Identifier	false		1027259	0					
ANR	1027300	ReturnType	static inline bool		1027259	1					
ANR	1027301	Identifier	fapi_gs_char_show_width_only		1027259	2					
ANR	1027302	ParameterList	const gs_text_enum_t * penum		1027259	3					
ANR	1027303	Parameter	const gs_text_enum_t * penum	235:29:6083:6109	1027259	0	True				
ANR	1027304	ParameterType	const gs_text_enum_t *		1027259	0					
ANR	1027305	Identifier	penum		1027259	1					
ANR	1027306	CFGEntryNode	ENTRY		1027259		True				
ANR	1027307	CFGExitNode	EXIT		1027259		True				
ANR	1027308	Symbol	* penum		1027259						
ANR	1027309	Symbol	penum -> orig_font -> FontType		1027259						
ANR	1027310	Symbol	gs_text_is_width_only		1027259						
ANR	1027311	Symbol	penum		1027259						
ANR	1027312	Symbol	false		1027259						
ANR	1027313	Symbol	penum -> orig_font		1027259						
ANR	1027314	Symbol	true		1027259						
ANR	1027315	Symbol	* penum -> orig_font		1027259						
ANR	1027316	Symbol	* * penum		1027259						
ANR	1027317	Function	using_transparency_pattern	259:0:6676:7019							
ANR	1027318	FunctionDef	using_transparency_pattern (gs_gstate * pgs)		1027317	0					
ANR	1027319	CompoundStatement		261:0:6738:7019	1027317	0					
ANR	1027320	IdentifierDeclStatement	gx_device * dev = gs_currentdevice_inline ( pgs ) ;	262:4:6744:6789	1027317	0	True				
ANR	1027321	IdentifierDecl	* dev = gs_currentdevice_inline ( pgs )		1027317	0					
ANR	1027322	IdentifierDeclType	gx_device *		1027317	0					
ANR	1027323	Identifier	dev		1027317	1					
ANR	1027324	AssignmentExpression	* dev = gs_currentdevice_inline ( pgs )		1027317	2		=			
ANR	1027325	Identifier	dev		1027317	0					
ANR	1027326	CallExpression	gs_currentdevice_inline ( pgs )		1027317	1					
ANR	1027327	Callee	gs_currentdevice_inline		1027317	0					
ANR	1027328	Identifier	gs_currentdevice_inline		1027317	0					
ANR	1027329	ArgumentList	pgs		1027317	1					
ANR	1027330	Argument	pgs		1027317	0					
ANR	1027331	Identifier	pgs		1027317	0					
ANR	1027332	ReturnStatement	"return ( ( ! gs_color_writes_pure ( pgs ) ) && dev_proc ( dev , begin_transparency_group ) != gx_default_begin_transparency_group && dev_proc ( dev , end_transparency_group ) != gx_default_end_transparency_group ) ;"	264:4:6796:7017	1027317	1	True				
ANR	1027333	AndExpression	"( ! gs_color_writes_pure ( pgs ) ) && dev_proc ( dev , begin_transparency_group ) != gx_default_begin_transparency_group && dev_proc ( dev , end_transparency_group ) != gx_default_end_transparency_group"		1027317	0		&&			
ANR	1027334	UnaryOperationExpression	! gs_color_writes_pure ( pgs )		1027317	0					
ANR	1027335	UnaryOperator	!		1027317	0					
ANR	1027336	CallExpression	gs_color_writes_pure ( pgs )		1027317	1					
ANR	1027337	Callee	gs_color_writes_pure		1027317	0					
ANR	1027338	Identifier	gs_color_writes_pure		1027317	0					
ANR	1027339	ArgumentList	pgs		1027317	1					
ANR	1027340	Argument	pgs		1027317	0					
ANR	1027341	Identifier	pgs		1027317	0					
ANR	1027342	AndExpression	"dev_proc ( dev , begin_transparency_group ) != gx_default_begin_transparency_group && dev_proc ( dev , end_transparency_group ) != gx_default_end_transparency_group"		1027317	1		&&			
ANR	1027343	EqualityExpression	"dev_proc ( dev , begin_transparency_group ) != gx_default_begin_transparency_group"		1027317	0		!=			
ANR	1027344	CallExpression	"dev_proc ( dev , begin_transparency_group )"		1027317	0					
ANR	1027345	Callee	dev_proc		1027317	0					
ANR	1027346	Identifier	dev_proc		1027317	0					
ANR	1027347	ArgumentList	dev		1027317	1					
ANR	1027348	Argument	dev		1027317	0					
ANR	1027349	Identifier	dev		1027317	0					
ANR	1027350	Argument	begin_transparency_group		1027317	1					
ANR	1027351	Identifier	begin_transparency_group		1027317	0					
ANR	1027352	Identifier	gx_default_begin_transparency_group		1027317	1					
ANR	1027353	EqualityExpression	"dev_proc ( dev , end_transparency_group ) != gx_default_end_transparency_group"		1027317	1		!=			
ANR	1027354	CallExpression	"dev_proc ( dev , end_transparency_group )"		1027317	0					
ANR	1027355	Callee	dev_proc		1027317	0					
ANR	1027356	Identifier	dev_proc		1027317	0					
ANR	1027357	ArgumentList	dev		1027317	1					
ANR	1027358	Argument	dev		1027317	0					
ANR	1027359	Identifier	dev		1027317	0					
ANR	1027360	Argument	end_transparency_group		1027317	1					
ANR	1027361	Identifier	end_transparency_group		1027317	0					
ANR	1027362	Identifier	gx_default_end_transparency_group		1027317	1					
ANR	1027363	ReturnType	static inline bool		1027317	1					
ANR	1027364	Identifier	using_transparency_pattern		1027317	2					
ANR	1027365	ParameterList	gs_gstate * pgs		1027317	3					
ANR	1027366	Parameter	gs_gstate * pgs	260:27:6722:6735	1027317	0	True				
ANR	1027367	ParameterType	gs_gstate *		1027317	0					
ANR	1027368	Identifier	pgs		1027317	1					
ANR	1027369	CFGEntryNode	ENTRY		1027317		True				
ANR	1027370	CFGExitNode	EXIT		1027317		True				
ANR	1027371	Symbol	dev		1027317						
ANR	1027372	Symbol	gs_currentdevice_inline		1027317						
ANR	1027373	Symbol	end_transparency_group		1027317						
ANR	1027374	Symbol	dev_proc		1027317						
ANR	1027375	Symbol	gx_default_end_transparency_group		1027317						
ANR	1027376	Symbol	begin_transparency_group		1027317						
ANR	1027377	Symbol	gx_default_begin_transparency_group		1027317						
ANR	1027378	Symbol	pgs		1027317						
ANR	1027379	Symbol	gs_color_writes_pure		1027317						
ANR	1027380	Function	recreate_multiple_master	269:0:7022:8180							
ANR	1027381	FunctionDef	recreate_multiple_master (gs_font_base * pbfont)		1027380	0					
ANR	1027382	CompoundStatement		271:0:7088:8180	1027380	0					
ANR	1027383	IdentifierDeclStatement	bool r = false ;	272:4:7094:7108	1027380	0	True				
ANR	1027384	IdentifierDecl	r = false		1027380	0					
ANR	1027385	IdentifierDeclType	bool		1027380	0					
ANR	1027386	Identifier	r		1027380	1					
ANR	1027387	AssignmentExpression	r = false		1027380	2		=			
ANR	1027388	Identifier	false		1027380	0					
ANR	1027389	Identifier	false		1027380	1					
ANR	1027390	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	273:4:7114:7146	1027380	1	True				
ANR	1027391	IdentifierDecl	* I = pbfont -> FAPI		1027380	0					
ANR	1027392	IdentifierDeclType	gs_fapi_server *		1027380	0					
ANR	1027393	Identifier	I		1027380	1					
ANR	1027394	AssignmentExpression	* I = pbfont -> FAPI		1027380	2		=			
ANR	1027395	Identifier	I		1027380	0					
ANR	1027396	PtrMemberAccess	pbfont -> FAPI		1027380	1					
ANR	1027397	Identifier	pbfont		1027380	0					
ANR	1027398	Identifier	FAPI		1027380	1					
ANR	1027399	IdentifierDeclStatement	bool changed = false ;	274:4:7152:7172	1027380	2	True				
ANR	1027400	IdentifierDecl	changed = false		1027380	0					
ANR	1027401	IdentifierDeclType	bool		1027380	0					
ANR	1027402	Identifier	changed		1027380	1					
ANR	1027403	AssignmentExpression	changed = false		1027380	2		=			
ANR	1027404	Identifier	false		1027380	0					
ANR	1027405	Identifier	false		1027380	1					
ANR	1027406	IfStatement	if ( I && I -> face . font_id != gs_no_id && ( pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2 ) )		1027380	3					
ANR	1027407	Condition	I && I -> face . font_id != gs_no_id && ( pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2 )	276:8:7183:7305	1027380	0	True				
ANR	1027408	AndExpression	I && I -> face . font_id != gs_no_id && ( pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2 )		1027380	0		&&			
ANR	1027409	Identifier	I		1027380	0					
ANR	1027410	AndExpression	I -> face . font_id != gs_no_id && ( pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2 )		1027380	1		&&			
ANR	1027411	EqualityExpression	I -> face . font_id != gs_no_id		1027380	0		!=			
ANR	1027412	MemberAccess	I -> face . font_id		1027380	0					
ANR	1027413	PtrMemberAccess	I -> face		1027380	0					
ANR	1027414	Identifier	I		1027380	0					
ANR	1027415	Identifier	face		1027380	1					
ANR	1027416	Identifier	font_id		1027380	1					
ANR	1027417	Identifier	gs_no_id		1027380	1					
ANR	1027418	OrExpression	pbfont -> FontType == ft_encrypted || pbfont -> FontType == ft_encrypted2		1027380	1		||			
ANR	1027419	EqualityExpression	pbfont -> FontType == ft_encrypted		1027380	0		==			
ANR	1027420	PtrMemberAccess	pbfont -> FontType		1027380	0					
ANR	1027421	Identifier	pbfont		1027380	0					
ANR	1027422	Identifier	FontType		1027380	1					
ANR	1027423	Identifier	ft_encrypted		1027380	1					
ANR	1027424	EqualityExpression	pbfont -> FontType == ft_encrypted2		1027380	1		==			
ANR	1027425	PtrMemberAccess	pbfont -> FontType		1027380	0					
ANR	1027426	Identifier	pbfont		1027380	0					
ANR	1027427	Identifier	FontType		1027380	1					
ANR	1027428	Identifier	ft_encrypted2		1027380	1					
ANR	1027429	CompoundStatement		9:8:229:277	1027380	1					
ANR	1027430	IdentifierDeclStatement	gs_font_type1 * pfont1 = ( gs_font_type1 * ) pbfont ;	279:8:7318:7366	1027380	0	True				
ANR	1027431	IdentifierDecl	* pfont1 = ( gs_font_type1 * ) pbfont		1027380	0					
ANR	1027432	IdentifierDeclType	gs_font_type1 *		1027380	0					
ANR	1027433	Identifier	pfont1		1027380	1					
ANR	1027434	AssignmentExpression	* pfont1 = ( gs_font_type1 * ) pbfont		1027380	2		=			
ANR	1027435	Identifier	pfont1		1027380	0					
ANR	1027436	CastExpression	( gs_font_type1 * ) pbfont		1027380	1					
ANR	1027437	CastTarget	gs_font_type1 *		1027380	0					
ANR	1027438	Identifier	pbfont		1027380	1					
ANR	1027439	IfStatement	if ( I -> face . WeightVector . count != pfont1 -> data . WeightVector . count )		1027380	1					
ANR	1027440	Condition	I -> face . WeightVector . count != pfont1 -> data . WeightVector . count	280:12:7380:7440	1027380	0	True				
ANR	1027441	EqualityExpression	I -> face . WeightVector . count != pfont1 -> data . WeightVector . count		1027380	0		!=			
ANR	1027442	MemberAccess	I -> face . WeightVector . count		1027380	0					
ANR	1027443	MemberAccess	I -> face . WeightVector		1027380	0					
ANR	1027444	PtrMemberAccess	I -> face		1027380	0					
ANR	1027445	Identifier	I		1027380	0					
ANR	1027446	Identifier	face		1027380	1					
ANR	1027447	Identifier	WeightVector		1027380	1					
ANR	1027448	Identifier	count		1027380	1					
ANR	1027449	MemberAccess	pfont1 -> data . WeightVector . count		1027380	1					
ANR	1027450	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027451	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027452	Identifier	pfont1		1027380	0					
ANR	1027453	Identifier	data		1027380	1					
ANR	1027454	Identifier	WeightVector		1027380	1					
ANR	1027455	Identifier	count		1027380	1					
ANR	1027456	CompoundStatement		10:75:354:354	1027380	1					
ANR	1027457	ExpressionStatement	changed = true	281:12:7457:7471	1027380	0	True				
ANR	1027458	AssignmentExpression	changed = true		1027380	0		=			
ANR	1027459	Identifier	changed		1027380	0					
ANR	1027460	Identifier	true		1027380	1					
ANR	1027461	ElseStatement	else		1027380	0					
ANR	1027462	CompoundStatement		13:13:407:407	1027380	0					
ANR	1027463	ExpressionStatement	"changed = ( memcmp ( I -> face . WeightVector . values , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) ) != 0 )"	284:12:7510:7704	1027380	0	True				
ANR	1027464	AssignmentExpression	"changed = ( memcmp ( I -> face . WeightVector . values , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) ) != 0 )"		1027380	0		=			
ANR	1027465	Identifier	changed		1027380	0					
ANR	1027466	EqualityExpression	"memcmp ( I -> face . WeightVector . values , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) ) != 0"		1027380	1		!=			
ANR	1027467	CallExpression	"memcmp ( I -> face . WeightVector . values , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) )"		1027380	0					
ANR	1027468	Callee	memcmp		1027380	0					
ANR	1027469	Identifier	memcmp		1027380	0					
ANR	1027470	ArgumentList	I -> face . WeightVector . values		1027380	1					
ANR	1027471	Argument	I -> face . WeightVector . values		1027380	0					
ANR	1027472	MemberAccess	I -> face . WeightVector . values		1027380	0					
ANR	1027473	MemberAccess	I -> face . WeightVector		1027380	0					
ANR	1027474	PtrMemberAccess	I -> face		1027380	0					
ANR	1027475	Identifier	I		1027380	0					
ANR	1027476	Identifier	face		1027380	1					
ANR	1027477	Identifier	WeightVector		1027380	1					
ANR	1027478	Identifier	values		1027380	1					
ANR	1027479	Argument	pfont1 -> data . WeightVector . values		1027380	1					
ANR	1027480	MemberAccess	pfont1 -> data . WeightVector . values		1027380	0					
ANR	1027481	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027482	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027483	Identifier	pfont1		1027380	0					
ANR	1027484	Identifier	data		1027380	1					
ANR	1027485	Identifier	WeightVector		1027380	1					
ANR	1027486	Identifier	values		1027380	1					
ANR	1027487	Argument	pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] )		1027380	2					
ANR	1027488	MultiplicativeExpression	pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] )		1027380	0		*			
ANR	1027489	MemberAccess	pfont1 -> data . WeightVector . count		1027380	0					
ANR	1027490	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027491	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027492	Identifier	pfont1		1027380	0					
ANR	1027493	Identifier	data		1027380	1					
ANR	1027494	Identifier	WeightVector		1027380	1					
ANR	1027495	Identifier	count		1027380	1					
ANR	1027496	SizeofExpression	sizeof ( pfont1 -> data . WeightVector . values [ 0 ] )		1027380	1					
ANR	1027497	Sizeof	sizeof		1027380	0					
ANR	1027498	ArrayIndexing	pfont1 -> data . WeightVector . values [ 0 ]		1027380	1					
ANR	1027499	MemberAccess	pfont1 -> data . WeightVector . values		1027380	0					
ANR	1027500	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027501	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027502	Identifier	pfont1		1027380	0					
ANR	1027503	Identifier	data		1027380	1					
ANR	1027504	Identifier	WeightVector		1027380	1					
ANR	1027505	Identifier	values		1027380	1					
ANR	1027506	PrimaryExpression	0		1027380	1					
ANR	1027507	PrimaryExpression	0		1027380	1					
ANR	1027508	IfStatement	if ( changed )		1027380	2					
ANR	1027509	Condition	changed	288:12:7737:7743	1027380	0	True				
ANR	1027510	Identifier	changed		1027380	0					
ANR	1027511	CompoundStatement		18:21:657:657	1027380	1					
ANR	1027512	ExpressionStatement	"r = ( I -> set_mm_weight_vector ( I , & I -> ff , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count ) == gs_error_invalidaccess )"	289:12:7760:7893	1027380	0	True				
ANR	1027513	AssignmentExpression	"r = ( I -> set_mm_weight_vector ( I , & I -> ff , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count ) == gs_error_invalidaccess )"		1027380	0		=			
ANR	1027514	Identifier	r		1027380	0					
ANR	1027515	EqualityExpression	"I -> set_mm_weight_vector ( I , & I -> ff , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count ) == gs_error_invalidaccess"		1027380	1		==			
ANR	1027516	CallExpression	"I -> set_mm_weight_vector ( I , & I -> ff , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count )"		1027380	0					
ANR	1027517	Callee	I -> set_mm_weight_vector		1027380	0					
ANR	1027518	PtrMemberAccess	I -> set_mm_weight_vector		1027380	0					
ANR	1027519	Identifier	I		1027380	0					
ANR	1027520	Identifier	set_mm_weight_vector		1027380	1					
ANR	1027521	ArgumentList	I		1027380	1					
ANR	1027522	Argument	I		1027380	0					
ANR	1027523	Identifier	I		1027380	0					
ANR	1027524	Argument	& I -> ff		1027380	1					
ANR	1027525	UnaryOperationExpression	& I -> ff		1027380	0					
ANR	1027526	UnaryOperator	&		1027380	0					
ANR	1027527	PtrMemberAccess	I -> ff		1027380	1					
ANR	1027528	Identifier	I		1027380	0					
ANR	1027529	Identifier	ff		1027380	1					
ANR	1027530	Argument	pfont1 -> data . WeightVector . values		1027380	2					
ANR	1027531	MemberAccess	pfont1 -> data . WeightVector . values		1027380	0					
ANR	1027532	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027533	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027534	Identifier	pfont1		1027380	0					
ANR	1027535	Identifier	data		1027380	1					
ANR	1027536	Identifier	WeightVector		1027380	1					
ANR	1027537	Identifier	values		1027380	1					
ANR	1027538	Argument	pfont1 -> data . WeightVector . count		1027380	3					
ANR	1027539	MemberAccess	pfont1 -> data . WeightVector . count		1027380	0					
ANR	1027540	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027541	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027542	Identifier	pfont1		1027380	0					
ANR	1027543	Identifier	data		1027380	1					
ANR	1027544	Identifier	WeightVector		1027380	1					
ANR	1027545	Identifier	count		1027380	1					
ANR	1027546	Identifier	gs_error_invalidaccess		1027380	1					
ANR	1027547	ExpressionStatement	I -> face . WeightVector . count = pfont1 -> data . WeightVector . count	290:12:7907:7967	1027380	1	True				
ANR	1027548	AssignmentExpression	I -> face . WeightVector . count = pfont1 -> data . WeightVector . count		1027380	0		=			
ANR	1027549	MemberAccess	I -> face . WeightVector . count		1027380	0					
ANR	1027550	MemberAccess	I -> face . WeightVector		1027380	0					
ANR	1027551	PtrMemberAccess	I -> face		1027380	0					
ANR	1027552	Identifier	I		1027380	0					
ANR	1027553	Identifier	face		1027380	1					
ANR	1027554	Identifier	WeightVector		1027380	1					
ANR	1027555	Identifier	count		1027380	1					
ANR	1027556	MemberAccess	pfont1 -> data . WeightVector . count		1027380	1					
ANR	1027557	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027558	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027559	Identifier	pfont1		1027380	0					
ANR	1027560	Identifier	data		1027380	1					
ANR	1027561	Identifier	WeightVector		1027380	1					
ANR	1027562	Identifier	count		1027380	1					
ANR	1027563	ExpressionStatement	"memcpy ( I -> face . WeightVector . values , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) )"	291:12:7981:8148	1027380	2	True				
ANR	1027564	CallExpression	"memcpy ( I -> face . WeightVector . values , pfont1 -> data . WeightVector . values , pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) )"		1027380	0					
ANR	1027565	Callee	memcpy		1027380	0					
ANR	1027566	Identifier	memcpy		1027380	0					
ANR	1027567	ArgumentList	I -> face . WeightVector . values		1027380	1					
ANR	1027568	Argument	I -> face . WeightVector . values		1027380	0					
ANR	1027569	MemberAccess	I -> face . WeightVector . values		1027380	0					
ANR	1027570	MemberAccess	I -> face . WeightVector		1027380	0					
ANR	1027571	PtrMemberAccess	I -> face		1027380	0					
ANR	1027572	Identifier	I		1027380	0					
ANR	1027573	Identifier	face		1027380	1					
ANR	1027574	Identifier	WeightVector		1027380	1					
ANR	1027575	Identifier	values		1027380	1					
ANR	1027576	Argument	pfont1 -> data . WeightVector . values		1027380	1					
ANR	1027577	MemberAccess	pfont1 -> data . WeightVector . values		1027380	0					
ANR	1027578	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027579	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027580	Identifier	pfont1		1027380	0					
ANR	1027581	Identifier	data		1027380	1					
ANR	1027582	Identifier	WeightVector		1027380	1					
ANR	1027583	Identifier	values		1027380	1					
ANR	1027584	Argument	pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] )		1027380	2					
ANR	1027585	MultiplicativeExpression	pfont1 -> data . WeightVector . count * sizeof ( pfont1 -> data . WeightVector . values [ 0 ] )		1027380	0		*			
ANR	1027586	MemberAccess	pfont1 -> data . WeightVector . count		1027380	0					
ANR	1027587	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027588	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027589	Identifier	pfont1		1027380	0					
ANR	1027590	Identifier	data		1027380	1					
ANR	1027591	Identifier	WeightVector		1027380	1					
ANR	1027592	Identifier	count		1027380	1					
ANR	1027593	SizeofExpression	sizeof ( pfont1 -> data . WeightVector . values [ 0 ] )		1027380	1					
ANR	1027594	Sizeof	sizeof		1027380	0					
ANR	1027595	ArrayIndexing	pfont1 -> data . WeightVector . values [ 0 ]		1027380	1					
ANR	1027596	MemberAccess	pfont1 -> data . WeightVector . values		1027380	0					
ANR	1027597	MemberAccess	pfont1 -> data . WeightVector		1027380	0					
ANR	1027598	PtrMemberAccess	pfont1 -> data		1027380	0					
ANR	1027599	Identifier	pfont1		1027380	0					
ANR	1027600	Identifier	data		1027380	1					
ANR	1027601	Identifier	WeightVector		1027380	1					
ANR	1027602	Identifier	values		1027380	1					
ANR	1027603	PrimaryExpression	0		1027380	1					
ANR	1027604	ReturnStatement	return r ;	295:4:8170:8178	1027380	4	True				
ANR	1027605	Identifier	r		1027380	0					
ANR	1027606	ReturnType	static inline bool		1027380	1					
ANR	1027607	Identifier	recreate_multiple_master		1027380	2					
ANR	1027608	ParameterList	gs_font_base * pbfont		1027380	3					
ANR	1027609	Parameter	gs_font_base * pbfont	270:25:7066:7085	1027380	0	True				
ANR	1027610	ParameterType	gs_font_base *		1027380	0					
ANR	1027611	Identifier	pbfont		1027380	1					
ANR	1027612	CFGEntryNode	ENTRY		1027380		True				
ANR	1027613	CFGExitNode	EXIT		1027380		True				
ANR	1027614	Symbol	* pfont1 -> data		1027380						
ANR	1027615	Symbol	I		1027380						
ANR	1027616	Symbol	ft_encrypted		1027380						
ANR	1027617	Symbol	pfont1 -> data . WeightVector . count		1027380						
ANR	1027618	Symbol	I -> set_mm_weight_vector		1027380						
ANR	1027619	Symbol	I -> face . WeightVector		1027380						
ANR	1027620	Symbol	* I		1027380						
ANR	1027621	Symbol	memcmp		1027380						
ANR	1027622	Symbol	pbfont -> FontType		1027380						
ANR	1027623	Symbol	ft_encrypted2		1027380						
ANR	1027624	Symbol	pfont1 -> data . WeightVector . values		1027380						
ANR	1027625	Symbol	& I -> ff		1027380						
ANR	1027626	Symbol	gs_error_invalidaccess		1027380						
ANR	1027627	Symbol	* pbfont		1027380						
ANR	1027628	Symbol	* pfont1 -> data . WeightVector . values		1027380						
ANR	1027629	Symbol	* pfont1		1027380						
ANR	1027630	Symbol	gs_no_id		1027380						
ANR	1027631	Symbol	pfont1		1027380						
ANR	1027632	Symbol	pbfont -> FAPI		1027380						
ANR	1027633	Symbol	I -> face . font_id		1027380						
ANR	1027634	Symbol	false		1027380						
ANR	1027635	Symbol	pfont1 -> data		1027380						
ANR	1027636	Symbol	pbfont		1027380						
ANR	1027637	Symbol	r		1027380						
ANR	1027638	Symbol	* pfont1 -> data . WeightVector		1027380						
ANR	1027639	Symbol	I -> face		1027380						
ANR	1027640	Symbol	pfont1 -> data . WeightVector		1027380						
ANR	1027641	Symbol	I -> face . WeightVector . count		1027380						
ANR	1027642	Symbol	true		1027380						
ANR	1027643	Symbol	I -> face . WeightVector . values		1027380						
ANR	1027644	Symbol	* * pfont1		1027380						
ANR	1027645	Symbol	changed		1027380						
ANR	1027646	Function	produce_outline_char	298:0:8183:9409							
ANR	1027647	FunctionDef	"produce_outline_char (gs_show_enum * penum_s , gs_font_base * pbfont , int abits , gs_log2_scale_point * log2_scale)"		1027646	0					
ANR	1027648	CompoundStatement		302:0:8347:9409	1027646	0					
ANR	1027649	IdentifierDeclStatement	gs_gstate * pgs = ( gs_gstate * ) penum_s -> pgs ;	303:4:8353:8396	1027646	0	True				
ANR	1027650	IdentifierDecl	* pgs = ( gs_gstate * ) penum_s -> pgs		1027646	0					
ANR	1027651	IdentifierDeclType	gs_gstate *		1027646	0					
ANR	1027652	Identifier	pgs		1027646	1					
ANR	1027653	AssignmentExpression	* pgs = ( gs_gstate * ) penum_s -> pgs		1027646	2		=			
ANR	1027654	Identifier	pgs		1027646	0					
ANR	1027655	CastExpression	( gs_gstate * ) penum_s -> pgs		1027646	1					
ANR	1027656	CastTarget	gs_gstate *		1027646	0					
ANR	1027657	PtrMemberAccess	penum_s -> pgs		1027646	1					
ANR	1027658	Identifier	penum_s		1027646	0					
ANR	1027659	Identifier	pgs		1027646	1					
ANR	1027660	ExpressionStatement	log2_scale -> x = 0	305:4:8403:8420	1027646	1	True				
ANR	1027661	AssignmentExpression	log2_scale -> x = 0		1027646	0		=			
ANR	1027662	PtrMemberAccess	log2_scale -> x		1027646	0					
ANR	1027663	Identifier	log2_scale		1027646	0					
ANR	1027664	Identifier	x		1027646	1					
ANR	1027665	PrimaryExpression	0		1027646	1					
ANR	1027666	ExpressionStatement	log2_scale -> y = 0	306:4:8426:8443	1027646	2	True				
ANR	1027667	AssignmentExpression	log2_scale -> y = 0		1027646	0		=			
ANR	1027668	PtrMemberAccess	log2_scale -> y		1027646	0					
ANR	1027669	Identifier	log2_scale		1027646	0					
ANR	1027670	Identifier	y		1027646	1					
ANR	1027671	PrimaryExpression	0		1027646	1					
ANR	1027672	ExpressionStatement	"gx_compute_text_oversampling ( penum_s , ( gs_font * ) pbfont , abits , log2_scale )"	314:4:8913:9022	1027646	3	True				
ANR	1027673	CallExpression	"gx_compute_text_oversampling ( penum_s , ( gs_font * ) pbfont , abits , log2_scale )"		1027646	0					
ANR	1027674	Callee	gx_compute_text_oversampling		1027646	0					
ANR	1027675	Identifier	gx_compute_text_oversampling		1027646	0					
ANR	1027676	ArgumentList	penum_s		1027646	1					
ANR	1027677	Argument	penum_s		1027646	0					
ANR	1027678	Identifier	penum_s		1027646	0					
ANR	1027679	Argument	( gs_font * ) pbfont		1027646	1					
ANR	1027680	CastExpression	( gs_font * ) pbfont		1027646	0					
ANR	1027681	CastTarget	gs_font *		1027646	0					
ANR	1027682	Identifier	pbfont		1027646	1					
ANR	1027683	Argument	abits		1027646	2					
ANR	1027684	Identifier	abits		1027646	0					
ANR	1027685	Argument	log2_scale		1027646	3					
ANR	1027686	Identifier	log2_scale		1027646	0					
ANR	1027687	ReturnStatement	return ( pgs -> in_charpath || pbfont -> PaintType != 0 || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && using_transparency_pattern ( ( gs_gstate * ) penum_s -> pgs ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && ( log2_scale -> x > 0 || log2_scale -> y > 0 ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && abits > 1 ) ) ;	317:4:9029:9407	1027646	4	True				
ANR	1027688	OrExpression	pgs -> in_charpath || pbfont -> PaintType != 0 || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && using_transparency_pattern ( ( gs_gstate * ) penum_s -> pgs ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && ( log2_scale -> x > 0 || log2_scale -> y > 0 ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && abits > 1 )		1027646	0		||			
ANR	1027689	PtrMemberAccess	pgs -> in_charpath		1027646	0					
ANR	1027690	Identifier	pgs		1027646	0					
ANR	1027691	Identifier	in_charpath		1027646	1					
ANR	1027692	OrExpression	pbfont -> PaintType != 0 || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && using_transparency_pattern ( ( gs_gstate * ) penum_s -> pgs ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && ( log2_scale -> x > 0 || log2_scale -> y > 0 ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && abits > 1 )		1027646	1		||			
ANR	1027693	EqualityExpression	pbfont -> PaintType != 0		1027646	0		!=			
ANR	1027694	PtrMemberAccess	pbfont -> PaintType		1027646	0					
ANR	1027695	Identifier	pbfont		1027646	0					
ANR	1027696	Identifier	PaintType		1027646	1					
ANR	1027697	PrimaryExpression	0		1027646	1					
ANR	1027698	OrExpression	( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && using_transparency_pattern ( ( gs_gstate * ) penum_s -> pgs ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && ( log2_scale -> x > 0 || log2_scale -> y > 0 ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && abits > 1 )		1027646	1		||			
ANR	1027699	AndExpression	pgs -> in_cachedevice != CACHE_DEVICE_CACHING && using_transparency_pattern ( ( gs_gstate * ) penum_s -> pgs )		1027646	0		&&			
ANR	1027700	EqualityExpression	pgs -> in_cachedevice != CACHE_DEVICE_CACHING		1027646	0		!=			
ANR	1027701	PtrMemberAccess	pgs -> in_cachedevice		1027646	0					
ANR	1027702	Identifier	pgs		1027646	0					
ANR	1027703	Identifier	in_cachedevice		1027646	1					
ANR	1027704	Identifier	CACHE_DEVICE_CACHING		1027646	1					
ANR	1027705	CallExpression	using_transparency_pattern ( ( gs_gstate * ) penum_s -> pgs )		1027646	1					
ANR	1027706	Callee	using_transparency_pattern		1027646	0					
ANR	1027707	Identifier	using_transparency_pattern		1027646	0					
ANR	1027708	ArgumentList	( gs_gstate * ) penum_s -> pgs		1027646	1					
ANR	1027709	Argument	( gs_gstate * ) penum_s -> pgs		1027646	0					
ANR	1027710	CastExpression	( gs_gstate * ) penum_s -> pgs		1027646	0					
ANR	1027711	CastTarget	gs_gstate *		1027646	0					
ANR	1027712	PtrMemberAccess	penum_s -> pgs		1027646	1					
ANR	1027713	Identifier	penum_s		1027646	0					
ANR	1027714	Identifier	pgs		1027646	1					
ANR	1027715	OrExpression	( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && ( log2_scale -> x > 0 || log2_scale -> y > 0 ) ) || ( pgs -> in_cachedevice != CACHE_DEVICE_CACHING && abits > 1 )		1027646	1		||			
ANR	1027716	AndExpression	pgs -> in_cachedevice != CACHE_DEVICE_CACHING && ( log2_scale -> x > 0 || log2_scale -> y > 0 )		1027646	0		&&			
ANR	1027717	EqualityExpression	pgs -> in_cachedevice != CACHE_DEVICE_CACHING		1027646	0		!=			
ANR	1027718	PtrMemberAccess	pgs -> in_cachedevice		1027646	0					
ANR	1027719	Identifier	pgs		1027646	0					
ANR	1027720	Identifier	in_cachedevice		1027646	1					
ANR	1027721	Identifier	CACHE_DEVICE_CACHING		1027646	1					
ANR	1027722	OrExpression	log2_scale -> x > 0 || log2_scale -> y > 0		1027646	1		||			
ANR	1027723	RelationalExpression	log2_scale -> x > 0		1027646	0		>			
ANR	1027724	PtrMemberAccess	log2_scale -> x		1027646	0					
ANR	1027725	Identifier	log2_scale		1027646	0					
ANR	1027726	Identifier	x		1027646	1					
ANR	1027727	PrimaryExpression	0		1027646	1					
ANR	1027728	RelationalExpression	log2_scale -> y > 0		1027646	1		>			
ANR	1027729	PtrMemberAccess	log2_scale -> y		1027646	0					
ANR	1027730	Identifier	log2_scale		1027646	0					
ANR	1027731	Identifier	y		1027646	1					
ANR	1027732	PrimaryExpression	0		1027646	1					
ANR	1027733	AndExpression	pgs -> in_cachedevice != CACHE_DEVICE_CACHING && abits > 1		1027646	1		&&			
ANR	1027734	EqualityExpression	pgs -> in_cachedevice != CACHE_DEVICE_CACHING		1027646	0		!=			
ANR	1027735	PtrMemberAccess	pgs -> in_cachedevice		1027646	0					
ANR	1027736	Identifier	pgs		1027646	0					
ANR	1027737	Identifier	in_cachedevice		1027646	1					
ANR	1027738	Identifier	CACHE_DEVICE_CACHING		1027646	1					
ANR	1027739	RelationalExpression	abits > 1		1027646	1		>			
ANR	1027740	Identifier	abits		1027646	0					
ANR	1027741	PrimaryExpression	1		1027646	1					
ANR	1027742	ReturnType	static bool		1027646	1					
ANR	1027743	Identifier	produce_outline_char		1027646	2					
ANR	1027744	ParameterList	"gs_show_enum * penum_s , gs_font_base * pbfont , int abits , gs_log2_scale_point * log2_scale"		1027646	3					
ANR	1027745	Parameter	gs_show_enum * penum_s	299:21:8216:8236	1027646	0	True				
ANR	1027746	ParameterType	gs_show_enum *		1027646	0					
ANR	1027747	Identifier	penum_s		1027646	1					
ANR	1027748	Parameter	gs_font_base * pbfont	300:21:8260:8279	1027646	1	True				
ANR	1027749	ParameterType	gs_font_base *		1027646	0					
ANR	1027750	Identifier	pbfont		1027646	1					
ANR	1027751	Parameter	int abits	300:43:8282:8290	1027646	2	True				
ANR	1027752	ParameterType	int		1027646	0					
ANR	1027753	Identifier	abits		1027646	1					
ANR	1027754	Parameter	gs_log2_scale_point * log2_scale	301:21:8314:8344	1027646	3	True				
ANR	1027755	ParameterType	gs_log2_scale_point *		1027646	0					
ANR	1027756	Identifier	log2_scale		1027646	1					
ANR	1027757	CFGEntryNode	ENTRY		1027646		True				
ANR	1027758	CFGExitNode	EXIT		1027646		True				
ANR	1027759	Symbol	pgs -> in_charpath		1027646						
ANR	1027760	Symbol	abits		1027646						
ANR	1027761	Symbol	* pgs		1027646						
ANR	1027762	Symbol	using_transparency_pattern		1027646						
ANR	1027763	Symbol	log2_scale -> y		1027646						
ANR	1027764	Symbol	log2_scale -> x		1027646						
ANR	1027765	Symbol	log2_scale		1027646						
ANR	1027766	Symbol	pbfont -> PaintType		1027646						
ANR	1027767	Symbol	pbfont		1027646						
ANR	1027768	Symbol	CACHE_DEVICE_CACHING		1027646						
ANR	1027769	Symbol	* penum_s		1027646						
ANR	1027770	Symbol	penum_s -> pgs		1027646						
ANR	1027771	Symbol	pgs -> in_cachedevice		1027646						
ANR	1027772	Symbol	* pbfont		1027646						
ANR	1027773	Symbol	* log2_scale		1027646						
ANR	1027774	Symbol	penum_s		1027646						
ANR	1027775	Symbol	pgs		1027646						
ANR	1027776	Function	gs_fapi_release_typeface	325:0:9412:9697							
ANR	1027777	FunctionDef	"gs_fapi_release_typeface (gs_fapi_server * I , void * * server_font_data)"		1027776	0					
ANR	1027778	CompoundStatement		327:0:9500:9697	1027776	0					
ANR	1027779	ExpressionStatement	"I -> release_typeface ( I , * server_font_data )"	328:4:9506:9547	1027776	0	True				
ANR	1027780	CallExpression	"I -> release_typeface ( I , * server_font_data )"		1027776	0					
ANR	1027781	Callee	I -> release_typeface		1027776	0					
ANR	1027782	PtrMemberAccess	I -> release_typeface		1027776	0					
ANR	1027783	Identifier	I		1027776	0					
ANR	1027784	Identifier	release_typeface		1027776	1					
ANR	1027785	ArgumentList	I		1027776	1					
ANR	1027786	Argument	I		1027776	0					
ANR	1027787	Identifier	I		1027776	0					
ANR	1027788	Argument	* server_font_data		1027776	1					
ANR	1027789	UnaryOperationExpression	* server_font_data		1027776	0					
ANR	1027790	UnaryOperator	*		1027776	0					
ANR	1027791	Identifier	server_font_data		1027776	1					
ANR	1027792	ExpressionStatement	I -> face . font_id = gs_no_id	329:4:9553:9579	1027776	1	True				
ANR	1027793	AssignmentExpression	I -> face . font_id = gs_no_id		1027776	0		=			
ANR	1027794	MemberAccess	I -> face . font_id		1027776	0					
ANR	1027795	PtrMemberAccess	I -> face		1027776	0					
ANR	1027796	Identifier	I		1027776	0					
ANR	1027797	Identifier	face		1027776	1					
ANR	1027798	Identifier	font_id		1027776	1					
ANR	1027799	Identifier	gs_no_id		1027776	1					
ANR	1027800	IfStatement	if ( I -> ff . server_font_data == * server_font_data )		1027776	2					
ANR	1027801	Condition	I -> ff . server_font_data == * server_font_data	330:8:9589:9631	1027776	0	True				
ANR	1027802	EqualityExpression	I -> ff . server_font_data == * server_font_data		1027776	0		==			
ANR	1027803	MemberAccess	I -> ff . server_font_data		1027776	0					
ANR	1027804	PtrMemberAccess	I -> ff		1027776	0					
ANR	1027805	Identifier	I		1027776	0					
ANR	1027806	Identifier	ff		1027776	1					
ANR	1027807	Identifier	server_font_data		1027776	1					
ANR	1027808	UnaryOperationExpression	* server_font_data		1027776	1					
ANR	1027809	UnaryOperator	*		1027776	0					
ANR	1027810	Identifier	server_font_data		1027776	1					
ANR	1027811	ExpressionStatement	I -> ff . server_font_data = 0	331:8:9642:9668	1027776	1	True				
ANR	1027812	AssignmentExpression	I -> ff . server_font_data = 0		1027776	0		=			
ANR	1027813	MemberAccess	I -> ff . server_font_data		1027776	0					
ANR	1027814	PtrMemberAccess	I -> ff		1027776	0					
ANR	1027815	Identifier	I		1027776	0					
ANR	1027816	Identifier	ff		1027776	1					
ANR	1027817	Identifier	server_font_data		1027776	1					
ANR	1027818	PrimaryExpression	0		1027776	1					
ANR	1027819	ExpressionStatement	* server_font_data = 0	332:4:9674:9695	1027776	3	True				
ANR	1027820	AssignmentExpression	* server_font_data = 0		1027776	0		=			
ANR	1027821	UnaryOperationExpression	* server_font_data		1027776	0					
ANR	1027822	UnaryOperator	*		1027776	0					
ANR	1027823	Identifier	server_font_data		1027776	1					
ANR	1027824	PrimaryExpression	0		1027776	1					
ANR	1027825	ReturnType	static inline void		1027776	1					
ANR	1027826	Identifier	gs_fapi_release_typeface		1027776	2					
ANR	1027827	ParameterList	"gs_fapi_server * I , void * * server_font_data"		1027776	3					
ANR	1027828	Parameter	gs_fapi_server * I	326:25:9456:9472	1027776	0	True				
ANR	1027829	ParameterType	gs_fapi_server *		1027776	0					
ANR	1027830	Identifier	I		1027776	1					
ANR	1027831	Parameter	void * * server_font_data	326:44:9475:9497	1027776	1	True				
ANR	1027832	ParameterType	void * *		1027776	0					
ANR	1027833	Identifier	server_font_data		1027776	1					
ANR	1027834	CFGEntryNode	ENTRY		1027776		True				
ANR	1027835	CFGExitNode	EXIT		1027776		True				
ANR	1027836	Symbol	I -> ff		1027776						
ANR	1027837	Symbol	server_font_data		1027776						
ANR	1027838	Symbol	gs_no_id		1027776						
ANR	1027839	Symbol	* I		1027776						
ANR	1027840	Symbol	I -> face		1027776						
ANR	1027841	Symbol	I -> ff . server_font_data		1027776						
ANR	1027842	Symbol	I -> face . font_id		1027776						
ANR	1027843	Symbol	I		1027776						
ANR	1027844	Symbol	* server_font_data		1027776						
ANR	1027845	Function	notify_remove_font	335:0:9700:10119							
ANR	1027846	FunctionDef	"notify_remove_font (void * proc_data , void * event_data)"		1027845	0					
ANR	1027847	CompoundStatement		337:0:9765:10119	1027845	0					
ANR	1027848	IfStatement	if ( event_data == NULL )		1027845	0					
ANR	1027849	Condition	event_data == NULL	338:8:9873:9890	1027845	0	True				
ANR	1027850	EqualityExpression	event_data == NULL		1027845	0		==			
ANR	1027851	Identifier	event_data		1027845	0					
ANR	1027852	Identifier	NULL		1027845	1					
ANR	1027853	CompoundStatement		4:8:179:211	1027845	1					
ANR	1027854	IdentifierDeclStatement	gs_font_base * pbfont = proc_data ;	339:8:9903:9935	1027845	0	True				
ANR	1027855	IdentifierDecl	* pbfont = proc_data		1027845	0					
ANR	1027856	IdentifierDeclType	gs_font_base *		1027845	0					
ANR	1027857	Identifier	pbfont		1027845	1					
ANR	1027858	AssignmentExpression	* pbfont = proc_data		1027845	2		=			
ANR	1027859	Identifier	proc_data		1027845	0					
ANR	1027860	Identifier	proc_data		1027845	1					
ANR	1027861	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	340:8:9945:9977	1027845	1	True				
ANR	1027862	IdentifierDecl	* I = pbfont -> FAPI		1027845	0					
ANR	1027863	IdentifierDeclType	gs_fapi_server *		1027845	0					
ANR	1027864	Identifier	I		1027845	1					
ANR	1027865	AssignmentExpression	* I = pbfont -> FAPI		1027845	2		=			
ANR	1027866	Identifier	I		1027845	0					
ANR	1027867	PtrMemberAccess	pbfont -> FAPI		1027845	1					
ANR	1027868	Identifier	pbfont		1027845	0					
ANR	1027869	Identifier	FAPI		1027845	1					
ANR	1027870	IfStatement	if ( pbfont -> FAPI_font_data != 0 )		1027845	2					
ANR	1027871	Condition	pbfont -> FAPI_font_data != 0	342:12:9992:10018	1027845	0	True				
ANR	1027872	EqualityExpression	pbfont -> FAPI_font_data != 0		1027845	0		!=			
ANR	1027873	PtrMemberAccess	pbfont -> FAPI_font_data		1027845	0					
ANR	1027874	Identifier	pbfont		1027845	0					
ANR	1027875	Identifier	FAPI_font_data		1027845	1					
ANR	1027876	PrimaryExpression	0		1027845	1					
ANR	1027877	CompoundStatement		6:41:255:255	1027845	1					
ANR	1027878	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"	343:12:10035:10087	1027845	0	True				
ANR	1027879	CallExpression	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"		1027845	0					
ANR	1027880	Callee	gs_fapi_release_typeface		1027845	0					
ANR	1027881	Identifier	gs_fapi_release_typeface		1027845	0					
ANR	1027882	ArgumentList	I		1027845	1					
ANR	1027883	Argument	I		1027845	0					
ANR	1027884	Identifier	I		1027845	0					
ANR	1027885	Argument	& pbfont -> FAPI_font_data		1027845	1					
ANR	1027886	UnaryOperationExpression	& pbfont -> FAPI_font_data		1027845	0					
ANR	1027887	UnaryOperator	&		1027845	0					
ANR	1027888	PtrMemberAccess	pbfont -> FAPI_font_data		1027845	1					
ANR	1027889	Identifier	pbfont		1027845	0					
ANR	1027890	Identifier	FAPI_font_data		1027845	1					
ANR	1027891	ReturnStatement	return 0 ;	346:4:10109:10117	1027845	1	True				
ANR	1027892	PrimaryExpression	0		1027845	0					
ANR	1027893	ReturnType	static int		1027845	1					
ANR	1027894	Identifier	notify_remove_font		1027845	2					
ANR	1027895	ParameterList	"void * proc_data , void * event_data"		1027845	3					
ANR	1027896	Parameter	void * proc_data	336:19:9730:9744	1027845	0	True				
ANR	1027897	ParameterType	void *		1027845	0					
ANR	1027898	Identifier	proc_data		1027845	1					
ANR	1027899	Parameter	void * event_data	336:36:9747:9762	1027845	1	True				
ANR	1027900	ParameterType	void *		1027845	0					
ANR	1027901	Identifier	event_data		1027845	1					
ANR	1027902	CFGEntryNode	ENTRY		1027845		True				
ANR	1027903	CFGExitNode	EXIT		1027845		True				
ANR	1027904	Symbol	proc_data		1027845						
ANR	1027905	Symbol	pbfont		1027845						
ANR	1027906	Symbol	NULL		1027845						
ANR	1027907	Symbol	pbfont -> FAPI		1027845						
ANR	1027908	Symbol	& pbfont -> FAPI_font_data		1027845						
ANR	1027909	Symbol	I		1027845						
ANR	1027910	Symbol	event_data		1027845						
ANR	1027911	Symbol	* pbfont		1027845						
ANR	1027912	Symbol	pbfont -> FAPI_font_data		1027845						
ANR	1027913	Function	gs_fapi_prepare_font	349:0:10122:19307							
ANR	1027914	FunctionDef	"gs_fapi_prepare_font (gs_font * pfont , gs_fapi_server * I , int subfont , const char * font_file_path , gs_string * full_font_buf , const char * xlatmap , const char * * decodingID)"		1027913	0					
ANR	1027915	CompoundStatement		352:0:10316:19307	1027913	0					
ANR	1027916	IdentifierDeclStatement	gs_memory_t * mem = pfont -> memory ;	374:4:11555:11587	1027913	0	True				
ANR	1027917	IdentifierDecl	* mem = pfont -> memory		1027913	0					
ANR	1027918	IdentifierDeclType	gs_memory_t *		1027913	0					
ANR	1027919	Identifier	mem		1027913	1					
ANR	1027920	AssignmentExpression	* mem = pfont -> memory		1027913	2		=			
ANR	1027921	Identifier	mem		1027913	0					
ANR	1027922	PtrMemberAccess	pfont -> memory		1027913	1					
ANR	1027923	Identifier	pfont		1027913	0					
ANR	1027924	Identifier	memory		1027913	1					
ANR	1027925	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	375:4:11593:11637	1027913	1	True				
ANR	1027926	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		1027913	0					
ANR	1027927	IdentifierDeclType	gs_font_base *		1027913	0					
ANR	1027928	Identifier	pbfont		1027913	1					
ANR	1027929	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		1027913	2		=			
ANR	1027930	Identifier	pbfont		1027913	0					
ANR	1027931	CastExpression	( gs_font_base * ) pfont		1027913	1					
ANR	1027932	CastTarget	gs_font_base *		1027913	0					
ANR	1027933	Identifier	pfont		1027913	1					
ANR	1027934	IdentifierDeclStatement	"int code , bbox_set = 0 ;"	376:4:11643:11665	1027913	2	True				
ANR	1027935	IdentifierDecl	code		1027913	0					
ANR	1027936	IdentifierDeclType	int		1027913	0					
ANR	1027937	Identifier	code		1027913	1					
ANR	1027938	IdentifierDecl	bbox_set = 0		1027913	1					
ANR	1027939	IdentifierDeclType	int		1027913	0					
ANR	1027940	Identifier	bbox_set		1027913	1					
ANR	1027941	AssignmentExpression	bbox_set = 0		1027913	2		=			
ANR	1027942	Identifier	bbox_set		1027913	0					
ANR	1027943	PrimaryExpression	0		1027913	1					
ANR	1027944	IdentifierDeclStatement	"int BBox [ 4 ] , scale ;"	377:4:11671:11689	1027913	3	True				
ANR	1027945	IdentifierDecl	BBox [ 4 ]		1027913	0					
ANR	1027946	IdentifierDeclType	int [ 4 ]		1027913	0					
ANR	1027947	Identifier	BBox		1027913	1					
ANR	1027948	PrimaryExpression	4		1027913	2					
ANR	1027949	IdentifierDecl	scale		1027913	1					
ANR	1027950	IdentifierDeclType	int		1027913	0					
ANR	1027951	Identifier	scale		1027913	1					
ANR	1027952	IdentifierDeclStatement	int units [ 2 ] ;	378:4:11695:11707	1027913	4	True				
ANR	1027953	IdentifierDecl	units [ 2 ]		1027913	0					
ANR	1027954	IdentifierDeclType	int [ 2 ]		1027913	0					
ANR	1027955	Identifier	units		1027913	1					
ANR	1027956	PrimaryExpression	2		1027913	2					
ANR	1027957	IdentifierDeclStatement	double size ;	379:4:11713:11724	1027913	5	True				
ANR	1027958	IdentifierDecl	size		1027913	0					
ANR	1027959	IdentifierDeclType	double		1027913	0					
ANR	1027960	Identifier	size		1027913	1					
ANR	1027961	IdentifierDeclStatement	"gs_fapi_font_scale font_scale = { { 1 , 0 , 0 , 1 , 0 , 0 } , { 0 , 0 } , { 1 , 1 } , true } ;"	380:4:11730:11814	1027913	6	True				
ANR	1027962	IdentifierDecl	"font_scale = { { 1 , 0 , 0 , 1 , 0 , 0 } , { 0 , 0 } , { 1 , 1 } , true }"		1027913	0					
ANR	1027963	IdentifierDeclType	gs_fapi_font_scale		1027913	0					
ANR	1027964	Identifier	font_scale		1027913	1					
ANR	1027965	AssignmentExpression	"font_scale = { { 1 , 0 , 0 , 1 , 0 , 0 } , { 0 , 0 } , { 1 , 1 } , true }"		1027913	2		=			
ANR	1027966	Identifier	font_scale		1027913	0					
ANR	1027967	InitializerList	1		1027913	1					
ANR	1027968	InitializerList	1		1027913	0					
ANR	1027969	PrimaryExpression	1		1027913	0					
ANR	1027970	PrimaryExpression	0		1027913	1					
ANR	1027971	PrimaryExpression	0		1027913	2					
ANR	1027972	PrimaryExpression	1		1027913	3					
ANR	1027973	PrimaryExpression	0		1027913	4					
ANR	1027974	PrimaryExpression	0		1027913	5					
ANR	1027975	InitializerList	0		1027913	1					
ANR	1027976	PrimaryExpression	0		1027913	0					
ANR	1027977	PrimaryExpression	0		1027913	1					
ANR	1027978	InitializerList	1		1027913	2					
ANR	1027979	PrimaryExpression	1		1027913	0					
ANR	1027980	PrimaryExpression	1		1027913	1					
ANR	1027981	Identifier	true		1027913	3					
ANR	1027982	ExpressionStatement	scale = 1 << I -> frac_shift	383:4:11821:11847	1027913	7	True				
ANR	1027983	AssignmentExpression	scale = 1 << I -> frac_shift		1027913	0		=			
ANR	1027984	Identifier	scale		1027913	0					
ANR	1027985	ShiftExpression	1 << I -> frac_shift		1027913	1		<<			
ANR	1027986	PrimaryExpression	1		1027913	0					
ANR	1027987	PtrMemberAccess	I -> frac_shift		1027913	1					
ANR	1027988	Identifier	I		1027913	0					
ANR	1027989	Identifier	frac_shift		1027913	1					
ANR	1027990	ExpressionStatement	"size = 1 / hypot ( pbfont -> FontMatrix . xx , pbfont -> FontMatrix . xy )"	384:4:11853:11915	1027913	8	True				
ANR	1027991	AssignmentExpression	"size = 1 / hypot ( pbfont -> FontMatrix . xx , pbfont -> FontMatrix . xy )"		1027913	0		=			
ANR	1027992	Identifier	size		1027913	0					
ANR	1027993	MultiplicativeExpression	"1 / hypot ( pbfont -> FontMatrix . xx , pbfont -> FontMatrix . xy )"		1027913	1		/			
ANR	1027994	PrimaryExpression	1		1027913	0					
ANR	1027995	CallExpression	"hypot ( pbfont -> FontMatrix . xx , pbfont -> FontMatrix . xy )"		1027913	1					
ANR	1027996	Callee	hypot		1027913	0					
ANR	1027997	Identifier	hypot		1027913	0					
ANR	1027998	ArgumentList	pbfont -> FontMatrix . xx		1027913	1					
ANR	1027999	Argument	pbfont -> FontMatrix . xx		1027913	0					
ANR	1028000	MemberAccess	pbfont -> FontMatrix . xx		1027913	0					
ANR	1028001	PtrMemberAccess	pbfont -> FontMatrix		1027913	0					
ANR	1028002	Identifier	pbfont		1027913	0					
ANR	1028003	Identifier	FontMatrix		1027913	1					
ANR	1028004	Identifier	xx		1027913	1					
ANR	1028005	Argument	pbfont -> FontMatrix . xy		1027913	1					
ANR	1028006	MemberAccess	pbfont -> FontMatrix . xy		1027913	0					
ANR	1028007	PtrMemberAccess	pbfont -> FontMatrix		1027913	0					
ANR	1028008	Identifier	pbfont		1027913	0					
ANR	1028009	Identifier	FontMatrix		1027913	1					
ANR	1028010	Identifier	xy		1027913	1					
ANR	1028011	IfStatement	if ( size < 1000 )		1027913	9					
ANR	1028012	Condition	size < 1000	388:8:12071:12081	1027913	0	True				
ANR	1028013	RelationalExpression	size < 1000		1027913	0		<			
ANR	1028014	Identifier	size		1027913	0					
ANR	1028015	PrimaryExpression	1000		1027913	1					
ANR	1028016	ExpressionStatement	size = 1000	389:8:12092:12103	1027913	1	True				
ANR	1028017	AssignmentExpression	size = 1000		1027913	0		=			
ANR	1028018	Identifier	size		1027913	0					
ANR	1028019	PrimaryExpression	1000		1027913	1					
ANR	1028020	ExpressionStatement	font_scale . matrix [ 0 ] = font_scale . matrix [ 3 ] = ( int ) ( size * scale + 0.5 )	391:4:12110:12181	1027913	10	True				
ANR	1028021	AssignmentExpression	font_scale . matrix [ 0 ] = font_scale . matrix [ 3 ] = ( int ) ( size * scale + 0.5 )		1027913	0		=			
ANR	1028022	ArrayIndexing	font_scale . matrix [ 0 ]		1027913	0					
ANR	1028023	MemberAccess	font_scale . matrix		1027913	0					
ANR	1028024	Identifier	font_scale		1027913	0					
ANR	1028025	Identifier	matrix		1027913	1					
ANR	1028026	PrimaryExpression	0		1027913	1					
ANR	1028027	AssignmentExpression	font_scale . matrix [ 3 ] = ( int ) ( size * scale + 0.5 )		1027913	1		=			
ANR	1028028	ArrayIndexing	font_scale . matrix [ 3 ]		1027913	0					
ANR	1028029	MemberAccess	font_scale . matrix		1027913	0					
ANR	1028030	Identifier	font_scale		1027913	0					
ANR	1028031	Identifier	matrix		1027913	1					
ANR	1028032	PrimaryExpression	3		1027913	1					
ANR	1028033	CastExpression	( int ) ( size * scale + 0.5 )		1027913	1					
ANR	1028034	CastTarget	int		1027913	0					
ANR	1028035	AdditiveExpression	size * scale + 0.5		1027913	1		+			
ANR	1028036	MultiplicativeExpression	size * scale		1027913	0		*			
ANR	1028037	Identifier	size		1027913	0					
ANR	1028038	Identifier	scale		1027913	1					
ANR	1028039	PrimaryExpression	0.5		1027913	1					
ANR	1028040	ExpressionStatement	font_scale . HWResolution [ 0 ] = ( fracint ) ( 72 * scale )	393:4:12188:12239	1027913	11	True				
ANR	1028041	AssignmentExpression	font_scale . HWResolution [ 0 ] = ( fracint ) ( 72 * scale )		1027913	0		=			
ANR	1028042	ArrayIndexing	font_scale . HWResolution [ 0 ]		1027913	0					
ANR	1028043	MemberAccess	font_scale . HWResolution		1027913	0					
ANR	1028044	Identifier	font_scale		1027913	0					
ANR	1028045	Identifier	HWResolution		1027913	1					
ANR	1028046	PrimaryExpression	0		1027913	1					
ANR	1028047	CastExpression	( fracint ) ( 72 * scale )		1027913	1					
ANR	1028048	CastTarget	fracint		1027913	0					
ANR	1028049	MultiplicativeExpression	72 * scale		1027913	1		*			
ANR	1028050	PrimaryExpression	72		1027913	0					
ANR	1028051	Identifier	scale		1027913	1					
ANR	1028052	ExpressionStatement	font_scale . HWResolution [ 1 ] = ( fracint ) ( 72 * scale )	394:4:12245:12296	1027913	12	True				
ANR	1028053	AssignmentExpression	font_scale . HWResolution [ 1 ] = ( fracint ) ( 72 * scale )		1027913	0		=			
ANR	1028054	ArrayIndexing	font_scale . HWResolution [ 1 ]		1027913	0					
ANR	1028055	MemberAccess	font_scale . HWResolution		1027913	0					
ANR	1028056	Identifier	font_scale		1027913	0					
ANR	1028057	Identifier	HWResolution		1027913	1					
ANR	1028058	PrimaryExpression	1		1027913	1					
ANR	1028059	CastExpression	( fracint ) ( 72 * scale )		1027913	1					
ANR	1028060	CastTarget	fracint		1027913	0					
ANR	1028061	MultiplicativeExpression	72 * scale		1027913	1		*			
ANR	1028062	PrimaryExpression	72		1027913	0					
ANR	1028063	Identifier	scale		1027913	1					
ANR	1028064	ExpressionStatement	I -> ff . subfont = subfont	399:4:12437:12460	1027913	13	True				
ANR	1028065	AssignmentExpression	I -> ff . subfont = subfont		1027913	0		=			
ANR	1028066	MemberAccess	I -> ff . subfont		1027913	0					
ANR	1028067	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028068	Identifier	I		1027913	0					
ANR	1028069	Identifier	ff		1027913	1					
ANR	1028070	Identifier	subfont		1027913	1					
ANR	1028071	Identifier	subfont		1027913	1					
ANR	1028072	ExpressionStatement	I -> ff . font_file_path = font_file_path	400:4:12466:12503	1027913	14	True				
ANR	1028073	AssignmentExpression	I -> ff . font_file_path = font_file_path		1027913	0		=			
ANR	1028074	MemberAccess	I -> ff . font_file_path		1027913	0					
ANR	1028075	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028076	Identifier	I		1027913	0					
ANR	1028077	Identifier	ff		1027913	1					
ANR	1028078	Identifier	font_file_path		1027913	1					
ANR	1028079	Identifier	font_file_path		1027913	1					
ANR	1028080	ExpressionStatement	I -> ff . is_type1 = FAPI_ISTYPE1GLYPHDATA ( pbfont )	401:4:12509:12555	1027913	15	True				
ANR	1028081	AssignmentExpression	I -> ff . is_type1 = FAPI_ISTYPE1GLYPHDATA ( pbfont )		1027913	0		=			
ANR	1028082	MemberAccess	I -> ff . is_type1		1027913	0					
ANR	1028083	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028084	Identifier	I		1027913	0					
ANR	1028085	Identifier	ff		1027913	1					
ANR	1028086	Identifier	is_type1		1027913	1					
ANR	1028087	CallExpression	FAPI_ISTYPE1GLYPHDATA ( pbfont )		1027913	1					
ANR	1028088	Callee	FAPI_ISTYPE1GLYPHDATA		1027913	0					
ANR	1028089	Identifier	FAPI_ISTYPE1GLYPHDATA		1027913	0					
ANR	1028090	ArgumentList	pbfont		1027913	1					
ANR	1028091	Argument	pbfont		1027913	0					
ANR	1028092	Identifier	pbfont		1027913	0					
ANR	1028093	ExpressionStatement	I -> ff . is_vertical = ( pbfont -> WMode != 0 )	402:4:12561:12601	1027913	16	True				
ANR	1028094	AssignmentExpression	I -> ff . is_vertical = ( pbfont -> WMode != 0 )		1027913	0		=			
ANR	1028095	MemberAccess	I -> ff . is_vertical		1027913	0					
ANR	1028096	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028097	Identifier	I		1027913	0					
ANR	1028098	Identifier	ff		1027913	1					
ANR	1028099	Identifier	is_vertical		1027913	1					
ANR	1028100	EqualityExpression	pbfont -> WMode != 0		1027913	1		!=			
ANR	1028101	PtrMemberAccess	pbfont -> WMode		1027913	0					
ANR	1028102	Identifier	pbfont		1027913	0					
ANR	1028103	Identifier	WMode		1027913	1					
ANR	1028104	PrimaryExpression	0		1027913	1					
ANR	1028105	ExpressionStatement	I -> ff . memory = mem	403:4:12607:12625	1027913	17	True				
ANR	1028106	AssignmentExpression	I -> ff . memory = mem		1027913	0		=			
ANR	1028107	MemberAccess	I -> ff . memory		1027913	0					
ANR	1028108	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028109	Identifier	I		1027913	0					
ANR	1028110	Identifier	ff		1027913	1					
ANR	1028111	Identifier	memory		1027913	1					
ANR	1028112	Identifier	mem		1027913	1					
ANR	1028113	ExpressionStatement	I -> ff . client_ctx_p = I -> client_ctx_p	404:4:12631:12667	1027913	18	True				
ANR	1028114	AssignmentExpression	I -> ff . client_ctx_p = I -> client_ctx_p		1027913	0		=			
ANR	1028115	MemberAccess	I -> ff . client_ctx_p		1027913	0					
ANR	1028116	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028117	Identifier	I		1027913	0					
ANR	1028118	Identifier	ff		1027913	1					
ANR	1028119	Identifier	client_ctx_p		1027913	1					
ANR	1028120	PtrMemberAccess	I -> client_ctx_p		1027913	1					
ANR	1028121	Identifier	I		1027913	0					
ANR	1028122	Identifier	client_ctx_p		1027913	1					
ANR	1028123	ExpressionStatement	I -> ff . client_font_data = pbfont	405:4:12673:12704	1027913	19	True				
ANR	1028124	AssignmentExpression	I -> ff . client_font_data = pbfont		1027913	0		=			
ANR	1028125	MemberAccess	I -> ff . client_font_data		1027913	0					
ANR	1028126	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028127	Identifier	I		1027913	0					
ANR	1028128	Identifier	ff		1027913	1					
ANR	1028129	Identifier	client_font_data		1027913	1					
ANR	1028130	Identifier	pbfont		1027913	1					
ANR	1028131	ExpressionStatement	I -> ff . client_font_data2 = pbfont	406:4:12710:12742	1027913	20	True				
ANR	1028132	AssignmentExpression	I -> ff . client_font_data2 = pbfont		1027913	0		=			
ANR	1028133	MemberAccess	I -> ff . client_font_data2		1027913	0					
ANR	1028134	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028135	Identifier	I		1027913	0					
ANR	1028136	Identifier	ff		1027913	1					
ANR	1028137	Identifier	client_font_data2		1027913	1					
ANR	1028138	Identifier	pbfont		1027913	1					
ANR	1028139	ExpressionStatement	I -> ff . server_font_data = pbfont -> FAPI_font_data	407:4:12748:12795	1027913	21	True				
ANR	1028140	AssignmentExpression	I -> ff . server_font_data = pbfont -> FAPI_font_data		1027913	0		=			
ANR	1028141	MemberAccess	I -> ff . server_font_data		1027913	0					
ANR	1028142	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028143	Identifier	I		1027913	0					
ANR	1028144	Identifier	ff		1027913	1					
ANR	1028145	Identifier	server_font_data		1027913	1					
ANR	1028146	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	1					
ANR	1028147	Identifier	pbfont		1027913	0					
ANR	1028148	Identifier	FAPI_font_data		1027913	1					
ANR	1028149	IfStatement	if ( full_font_buf )		1027913	22					
ANR	1028150	Condition	full_font_buf	408:8:12851:12863	1027913	0	True				
ANR	1028151	Identifier	full_font_buf		1027913	0					
ANR	1028152	CompoundStatement		57:23:2549:2549	1027913	1					
ANR	1028153	ExpressionStatement	I -> ff . full_font_buf = ( char * ) full_font_buf -> data	409:8:12876:12925	1027913	0	True				
ANR	1028154	AssignmentExpression	I -> ff . full_font_buf = ( char * ) full_font_buf -> data		1027913	0		=			
ANR	1028155	MemberAccess	I -> ff . full_font_buf		1027913	0					
ANR	1028156	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028157	Identifier	I		1027913	0					
ANR	1028158	Identifier	ff		1027913	1					
ANR	1028159	Identifier	full_font_buf		1027913	1					
ANR	1028160	CastExpression	( char * ) full_font_buf -> data		1027913	1					
ANR	1028161	CastTarget	char *		1027913	0					
ANR	1028162	PtrMemberAccess	full_font_buf -> data		1027913	1					
ANR	1028163	Identifier	full_font_buf		1027913	0					
ANR	1028164	Identifier	data		1027913	1					
ANR	1028165	ExpressionStatement	I -> ff . full_font_buf_len = full_font_buf -> size	410:8:12935:12980	1027913	1	True				
ANR	1028166	AssignmentExpression	I -> ff . full_font_buf_len = full_font_buf -> size		1027913	0		=			
ANR	1028167	MemberAccess	I -> ff . full_font_buf_len		1027913	0					
ANR	1028168	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028169	Identifier	I		1027913	0					
ANR	1028170	Identifier	ff		1027913	1					
ANR	1028171	Identifier	full_font_buf_len		1027913	1					
ANR	1028172	PtrMemberAccess	full_font_buf -> size		1027913	1					
ANR	1028173	Identifier	full_font_buf		1027913	0					
ANR	1028174	Identifier	size		1027913	1					
ANR	1028175	ElseStatement	else		1027913	0					
ANR	1028176	CompoundStatement		61:9:2680:2680	1027913	0					
ANR	1028177	ExpressionStatement	I -> ff . full_font_buf = NULL	413:8:13007:13033	1027913	0	True				
ANR	1028178	AssignmentExpression	I -> ff . full_font_buf = NULL		1027913	0		=			
ANR	1028179	MemberAccess	I -> ff . full_font_buf		1027913	0					
ANR	1028180	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028181	Identifier	I		1027913	0					
ANR	1028182	Identifier	ff		1027913	1					
ANR	1028183	Identifier	full_font_buf		1027913	1					
ANR	1028184	Identifier	NULL		1027913	1					
ANR	1028185	ExpressionStatement	I -> ff . full_font_buf_len = 0	414:8:13043:13070	1027913	1	True				
ANR	1028186	AssignmentExpression	I -> ff . full_font_buf_len = 0		1027913	0		=			
ANR	1028187	MemberAccess	I -> ff . full_font_buf_len		1027913	0					
ANR	1028188	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028189	Identifier	I		1027913	0					
ANR	1028190	Identifier	ff		1027913	1					
ANR	1028191	Identifier	full_font_buf_len		1027913	1					
ANR	1028192	PrimaryExpression	0		1027913	1					
ANR	1028193	ExpressionStatement	I -> ff . is_cid = FAPI_ISCIDFONT ( pbfont )	416:4:13082:13119	1027913	23	True				
ANR	1028194	AssignmentExpression	I -> ff . is_cid = FAPI_ISCIDFONT ( pbfont )		1027913	0		=			
ANR	1028195	MemberAccess	I -> ff . is_cid		1027913	0					
ANR	1028196	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028197	Identifier	I		1027913	0					
ANR	1028198	Identifier	ff		1027913	1					
ANR	1028199	Identifier	is_cid		1027913	1					
ANR	1028200	CallExpression	FAPI_ISCIDFONT ( pbfont )		1027913	1					
ANR	1028201	Callee	FAPI_ISCIDFONT		1027913	0					
ANR	1028202	Identifier	FAPI_ISCIDFONT		1027913	0					
ANR	1028203	ArgumentList	pbfont		1027913	1					
ANR	1028204	Argument	pbfont		1027913	0					
ANR	1028205	Identifier	pbfont		1027913	0					
ANR	1028206	ExpressionStatement	I -> ff . is_outline_font = pbfont -> PaintType != 0	417:4:13125:13171	1027913	24	True				
ANR	1028207	AssignmentExpression	I -> ff . is_outline_font = pbfont -> PaintType != 0		1027913	0		=			
ANR	1028208	MemberAccess	I -> ff . is_outline_font		1027913	0					
ANR	1028209	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028210	Identifier	I		1027913	0					
ANR	1028211	Identifier	ff		1027913	1					
ANR	1028212	Identifier	is_outline_font		1027913	1					
ANR	1028213	EqualityExpression	pbfont -> PaintType != 0		1027913	1		!=			
ANR	1028214	PtrMemberAccess	pbfont -> PaintType		1027913	0					
ANR	1028215	Identifier	pbfont		1027913	0					
ANR	1028216	Identifier	PaintType		1027913	1					
ANR	1028217	PrimaryExpression	0		1027913	1					
ANR	1028218	IfStatement	if ( ! I -> ff . is_mtx_skipped )		1027913	25					
ANR	1028219	Condition	! I -> ff . is_mtx_skipped	419:8:13182:13202	1027913	0	True				
ANR	1028220	UnaryOperationExpression	! I -> ff . is_mtx_skipped		1027913	0					
ANR	1028221	UnaryOperator	!		1027913	0					
ANR	1028222	MemberAccess	I -> ff . is_mtx_skipped		1027913	1					
ANR	1028223	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028224	Identifier	I		1027913	0					
ANR	1028225	Identifier	ff		1027913	1					
ANR	1028226	Identifier	is_mtx_skipped		1027913	1					
ANR	1028227	ExpressionStatement	I -> ff . is_mtx_skipped = ( gs_fapi_get_metrics_count ( & I -> ff ) != 0 )	420:8:13213:13276	1027913	1	True				
ANR	1028228	AssignmentExpression	I -> ff . is_mtx_skipped = ( gs_fapi_get_metrics_count ( & I -> ff ) != 0 )		1027913	0		=			
ANR	1028229	MemberAccess	I -> ff . is_mtx_skipped		1027913	0					
ANR	1028230	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028231	Identifier	I		1027913	0					
ANR	1028232	Identifier	ff		1027913	1					
ANR	1028233	Identifier	is_mtx_skipped		1027913	1					
ANR	1028234	EqualityExpression	gs_fapi_get_metrics_count ( & I -> ff ) != 0		1027913	1		!=			
ANR	1028235	CallExpression	gs_fapi_get_metrics_count ( & I -> ff )		1027913	0					
ANR	1028236	Callee	gs_fapi_get_metrics_count		1027913	0					
ANR	1028237	Identifier	gs_fapi_get_metrics_count		1027913	0					
ANR	1028238	ArgumentList	& I -> ff		1027913	1					
ANR	1028239	Argument	& I -> ff		1027913	0					
ANR	1028240	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028241	UnaryOperator	&		1027913	0					
ANR	1028242	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028243	Identifier	I		1027913	0					
ANR	1028244	Identifier	ff		1027913	1					
ANR	1028245	PrimaryExpression	0		1027913	1					
ANR	1028246	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_begin ) ) ) < 0 )"		1027913	26					
ANR	1028247	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_begin ) ) ) < 0"	422:8:13287:13719	1027913	0	True				
ANR	1028248	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_begin ) ) ) < 0"		1027913	0		<			
ANR	1028249	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_begin ) )"		1027913	0		=			
ANR	1028250	Identifier	code		1027913	0					
ANR	1028251	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_begin ) )"		1027913	1					
ANR	1028252	Callee	gs_fapi_renderer_retcode		1027913	0					
ANR	1028253	Identifier	gs_fapi_renderer_retcode		1027913	0					
ANR	1028254	ArgumentList	mem		1027913	1					
ANR	1028255	Argument	mem		1027913	0					
ANR	1028256	Identifier	mem		1027913	0					
ANR	1028257	Argument	I		1027913	1					
ANR	1028258	Identifier	I		1027913	0					
ANR	1028259	Argument	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_begin )"		1027913	2					
ANR	1028260	CallExpression	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_begin )"		1027913	0					
ANR	1028261	Callee	I -> get_scaled_font		1027913	0					
ANR	1028262	PtrMemberAccess	I -> get_scaled_font		1027913	0					
ANR	1028263	Identifier	I		1027913	0					
ANR	1028264	Identifier	get_scaled_font		1027913	1					
ANR	1028265	ArgumentList	I		1027913	1					
ANR	1028266	Argument	I		1027913	0					
ANR	1028267	Identifier	I		1027913	0					
ANR	1028268	Argument	& I -> ff		1027913	1					
ANR	1028269	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028270	UnaryOperator	&		1027913	0					
ANR	1028271	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028272	Identifier	I		1027913	0					
ANR	1028273	Identifier	ff		1027913	1					
ANR	1028274	Argument	( const gs_fapi_font_scale * ) & font_scale		1027913	2					
ANR	1028275	CastExpression	( const gs_fapi_font_scale * ) & font_scale		1027913	0					
ANR	1028276	CastTarget	const gs_fapi_font_scale *		1027913	0					
ANR	1028277	UnaryOperationExpression	& font_scale		1027913	1					
ANR	1028278	UnaryOperator	&		1027913	0					
ANR	1028279	Identifier	font_scale		1027913	1					
ANR	1028280	Argument	xlatmap		1027913	3					
ANR	1028281	Identifier	xlatmap		1027913	0					
ANR	1028282	Argument	gs_fapi_toplevel_begin		1027913	4					
ANR	1028283	Identifier	gs_fapi_toplevel_begin		1027913	0					
ANR	1028284	PrimaryExpression	0		1027913	1					
ANR	1028285	ReturnStatement	return code ;	428:8:13730:13741	1027913	1	True				
ANR	1028286	Identifier	code		1027913	0					
ANR	1028287	ExpressionStatement	pbfont -> FAPI_font_data = I -> ff . server_font_data	429:4:13747:13794	1027913	27	True				
ANR	1028288	AssignmentExpression	pbfont -> FAPI_font_data = I -> ff . server_font_data		1027913	0		=			
ANR	1028289	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	0					
ANR	1028290	Identifier	pbfont		1027913	0					
ANR	1028291	Identifier	FAPI_font_data		1027913	1					
ANR	1028292	MemberAccess	I -> ff . server_font_data		1027913	1					
ANR	1028293	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028294	Identifier	I		1027913	0					
ANR	1028295	Identifier	ff		1027913	1					
ANR	1028296	Identifier	server_font_data		1027913	1					
ANR	1028297	IfStatement	if ( I -> ff . server_font_data != 0 )		1027913	28					
ANR	1028298	Condition	I -> ff . server_font_data != 0	430:8:13838:13864	1027913	0	True				
ANR	1028299	EqualityExpression	I -> ff . server_font_data != 0		1027913	0		!=			
ANR	1028300	MemberAccess	I -> ff . server_font_data		1027913	0					
ANR	1028301	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028302	Identifier	I		1027913	0					
ANR	1028303	Identifier	ff		1027913	1					
ANR	1028304	Identifier	server_font_data		1027913	1					
ANR	1028305	PrimaryExpression	0		1027913	1					
ANR	1028306	CompoundStatement		79:37:3550:3550	1027913	1					
ANR	1028307	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox , units ) ) ) < 0 )"		1027913	0					
ANR	1028308	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox , units ) ) ) < 0"	431:12:13881:14073	1027913	0	True				
ANR	1028309	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox , units ) ) ) < 0"		1027913	0		<			
ANR	1028310	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox , units ) )"		1027913	0		=			
ANR	1028311	Identifier	code		1027913	0					
ANR	1028312	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox , units ) )"		1027913	1					
ANR	1028313	Callee	gs_fapi_renderer_retcode		1027913	0					
ANR	1028314	Identifier	gs_fapi_renderer_retcode		1027913	0					
ANR	1028315	ArgumentList	mem		1027913	1					
ANR	1028316	Argument	mem		1027913	0					
ANR	1028317	Identifier	mem		1027913	0					
ANR	1028318	Argument	I		1027913	1					
ANR	1028319	Identifier	I		1027913	0					
ANR	1028320	Argument	"I -> get_font_bbox ( I , & I -> ff , BBox , units )"		1027913	2					
ANR	1028321	CallExpression	"I -> get_font_bbox ( I , & I -> ff , BBox , units )"		1027913	0					
ANR	1028322	Callee	I -> get_font_bbox		1027913	0					
ANR	1028323	PtrMemberAccess	I -> get_font_bbox		1027913	0					
ANR	1028324	Identifier	I		1027913	0					
ANR	1028325	Identifier	get_font_bbox		1027913	1					
ANR	1028326	ArgumentList	I		1027913	1					
ANR	1028327	Argument	I		1027913	0					
ANR	1028328	Identifier	I		1027913	0					
ANR	1028329	Argument	& I -> ff		1027913	1					
ANR	1028330	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028331	UnaryOperator	&		1027913	0					
ANR	1028332	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028333	Identifier	I		1027913	0					
ANR	1028334	Identifier	ff		1027913	1					
ANR	1028335	Argument	BBox		1027913	2					
ANR	1028336	Identifier	BBox		1027913	0					
ANR	1028337	Argument	units		1027913	3					
ANR	1028338	Identifier	units		1027913	0					
ANR	1028339	PrimaryExpression	0		1027913	1					
ANR	1028340	CompoundStatement		83:75:3759:3759	1027913	1					
ANR	1028341	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"	435:12:14090:14142	1027913	0	True				
ANR	1028342	CallExpression	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"		1027913	0					
ANR	1028343	Callee	gs_fapi_release_typeface		1027913	0					
ANR	1028344	Identifier	gs_fapi_release_typeface		1027913	0					
ANR	1028345	ArgumentList	I		1027913	1					
ANR	1028346	Argument	I		1027913	0					
ANR	1028347	Identifier	I		1027913	0					
ANR	1028348	Argument	& pbfont -> FAPI_font_data		1027913	1					
ANR	1028349	UnaryOperationExpression	& pbfont -> FAPI_font_data		1027913	0					
ANR	1028350	UnaryOperator	&		1027913	0					
ANR	1028351	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	1					
ANR	1028352	Identifier	pbfont		1027913	0					
ANR	1028353	Identifier	FAPI_font_data		1027913	1					
ANR	1028354	ReturnStatement	return code ;	436:12:14156:14167	1027913	1	True				
ANR	1028355	Identifier	code		1027913	0					
ANR	1028356	ExpressionStatement	pbfont -> FontBBox . p . x = ( ( double ) BBox [ 0 ] / units [ 0 ] )	439:8:14219:14270	1027913	1	True				
ANR	1028357	AssignmentExpression	pbfont -> FontBBox . p . x = ( ( double ) BBox [ 0 ] / units [ 0 ] )		1027913	0		=			
ANR	1028358	MemberAccess	pbfont -> FontBBox . p . x		1027913	0					
ANR	1028359	MemberAccess	pbfont -> FontBBox . p		1027913	0					
ANR	1028360	PtrMemberAccess	pbfont -> FontBBox		1027913	0					
ANR	1028361	Identifier	pbfont		1027913	0					
ANR	1028362	Identifier	FontBBox		1027913	1					
ANR	1028363	Identifier	p		1027913	1					
ANR	1028364	Identifier	x		1027913	1					
ANR	1028365	MultiplicativeExpression	( double ) BBox [ 0 ] / units [ 0 ]		1027913	1		/			
ANR	1028366	CastExpression	( double ) BBox [ 0 ]		1027913	0					
ANR	1028367	CastTarget	double		1027913	0					
ANR	1028368	ArrayIndexing	BBox [ 0 ]		1027913	1					
ANR	1028369	Identifier	BBox		1027913	0					
ANR	1028370	PrimaryExpression	0		1027913	1					
ANR	1028371	ArrayIndexing	units [ 0 ]		1027913	1					
ANR	1028372	Identifier	units		1027913	0					
ANR	1028373	PrimaryExpression	0		1027913	1					
ANR	1028374	ExpressionStatement	pbfont -> FontBBox . p . y = ( ( double ) BBox [ 1 ] / units [ 1 ] )	440:8:14280:14331	1027913	2	True				
ANR	1028375	AssignmentExpression	pbfont -> FontBBox . p . y = ( ( double ) BBox [ 1 ] / units [ 1 ] )		1027913	0		=			
ANR	1028376	MemberAccess	pbfont -> FontBBox . p . y		1027913	0					
ANR	1028377	MemberAccess	pbfont -> FontBBox . p		1027913	0					
ANR	1028378	PtrMemberAccess	pbfont -> FontBBox		1027913	0					
ANR	1028379	Identifier	pbfont		1027913	0					
ANR	1028380	Identifier	FontBBox		1027913	1					
ANR	1028381	Identifier	p		1027913	1					
ANR	1028382	Identifier	y		1027913	1					
ANR	1028383	MultiplicativeExpression	( double ) BBox [ 1 ] / units [ 1 ]		1027913	1		/			
ANR	1028384	CastExpression	( double ) BBox [ 1 ]		1027913	0					
ANR	1028385	CastTarget	double		1027913	0					
ANR	1028386	ArrayIndexing	BBox [ 1 ]		1027913	1					
ANR	1028387	Identifier	BBox		1027913	0					
ANR	1028388	PrimaryExpression	1		1027913	1					
ANR	1028389	ArrayIndexing	units [ 1 ]		1027913	1					
ANR	1028390	Identifier	units		1027913	0					
ANR	1028391	PrimaryExpression	1		1027913	1					
ANR	1028392	ExpressionStatement	pbfont -> FontBBox . q . x = ( ( double ) BBox [ 2 ] / units [ 0 ] )	441:8:14341:14392	1027913	3	True				
ANR	1028393	AssignmentExpression	pbfont -> FontBBox . q . x = ( ( double ) BBox [ 2 ] / units [ 0 ] )		1027913	0		=			
ANR	1028394	MemberAccess	pbfont -> FontBBox . q . x		1027913	0					
ANR	1028395	MemberAccess	pbfont -> FontBBox . q		1027913	0					
ANR	1028396	PtrMemberAccess	pbfont -> FontBBox		1027913	0					
ANR	1028397	Identifier	pbfont		1027913	0					
ANR	1028398	Identifier	FontBBox		1027913	1					
ANR	1028399	Identifier	q		1027913	1					
ANR	1028400	Identifier	x		1027913	1					
ANR	1028401	MultiplicativeExpression	( double ) BBox [ 2 ] / units [ 0 ]		1027913	1		/			
ANR	1028402	CastExpression	( double ) BBox [ 2 ]		1027913	0					
ANR	1028403	CastTarget	double		1027913	0					
ANR	1028404	ArrayIndexing	BBox [ 2 ]		1027913	1					
ANR	1028405	Identifier	BBox		1027913	0					
ANR	1028406	PrimaryExpression	2		1027913	1					
ANR	1028407	ArrayIndexing	units [ 0 ]		1027913	1					
ANR	1028408	Identifier	units		1027913	0					
ANR	1028409	PrimaryExpression	0		1027913	1					
ANR	1028410	ExpressionStatement	pbfont -> FontBBox . q . y = ( ( double ) BBox [ 3 ] / units [ 1 ] )	442:8:14402:14453	1027913	4	True				
ANR	1028411	AssignmentExpression	pbfont -> FontBBox . q . y = ( ( double ) BBox [ 3 ] / units [ 1 ] )		1027913	0		=			
ANR	1028412	MemberAccess	pbfont -> FontBBox . q . y		1027913	0					
ANR	1028413	MemberAccess	pbfont -> FontBBox . q		1027913	0					
ANR	1028414	PtrMemberAccess	pbfont -> FontBBox		1027913	0					
ANR	1028415	Identifier	pbfont		1027913	0					
ANR	1028416	Identifier	FontBBox		1027913	1					
ANR	1028417	Identifier	q		1027913	1					
ANR	1028418	Identifier	y		1027913	1					
ANR	1028419	MultiplicativeExpression	( double ) BBox [ 3 ] / units [ 1 ]		1027913	1		/			
ANR	1028420	CastExpression	( double ) BBox [ 3 ]		1027913	0					
ANR	1028421	CastTarget	double		1027913	0					
ANR	1028422	ArrayIndexing	BBox [ 3 ]		1027913	1					
ANR	1028423	Identifier	BBox		1027913	0					
ANR	1028424	PrimaryExpression	3		1027913	1					
ANR	1028425	ArrayIndexing	units [ 1 ]		1027913	1					
ANR	1028426	Identifier	units		1027913	0					
ANR	1028427	PrimaryExpression	1		1027913	1					
ANR	1028428	ExpressionStatement	bbox_set = 1	444:8:14464:14476	1027913	5	True				
ANR	1028429	AssignmentExpression	bbox_set = 1		1027913	0		=			
ANR	1028430	Identifier	bbox_set		1027913	0					
ANR	1028431	PrimaryExpression	1		1027913	1					
ANR	1028432	IfStatement	if ( xlatmap != NULL && pbfont -> FAPI_font_data != NULL )		1027913	29					
ANR	1028433	Condition	xlatmap != NULL && pbfont -> FAPI_font_data != NULL	447:8:14493:14541	1027913	0	True				
ANR	1028434	AndExpression	xlatmap != NULL && pbfont -> FAPI_font_data != NULL		1027913	0		&&			
ANR	1028435	EqualityExpression	xlatmap != NULL		1027913	0		!=			
ANR	1028436	Identifier	xlatmap		1027913	0					
ANR	1028437	Identifier	NULL		1027913	1					
ANR	1028438	EqualityExpression	pbfont -> FAPI_font_data != NULL		1027913	1		!=			
ANR	1028439	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	0					
ANR	1028440	Identifier	pbfont		1027913	0					
ANR	1028441	Identifier	FAPI_font_data		1027913	1					
ANR	1028442	Identifier	NULL		1027913	1					
ANR	1028443	CompoundStatement		96:59:4227:4227	1027913	1					
ANR	1028444	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> get_decodingID ( I , & I -> ff , decodingID ) ) ) < 0 )"		1027913	0					
ANR	1028445	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_decodingID ( I , & I -> ff , decodingID ) ) ) < 0"	448:12:14558:14751	1027913	0	True				
ANR	1028446	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_decodingID ( I , & I -> ff , decodingID ) ) ) < 0"		1027913	0		<			
ANR	1028447	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_decodingID ( I , & I -> ff , decodingID ) )"		1027913	0		=			
ANR	1028448	Identifier	code		1027913	0					
ANR	1028449	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_decodingID ( I , & I -> ff , decodingID ) )"		1027913	1					
ANR	1028450	Callee	gs_fapi_renderer_retcode		1027913	0					
ANR	1028451	Identifier	gs_fapi_renderer_retcode		1027913	0					
ANR	1028452	ArgumentList	mem		1027913	1					
ANR	1028453	Argument	mem		1027913	0					
ANR	1028454	Identifier	mem		1027913	0					
ANR	1028455	Argument	I		1027913	1					
ANR	1028456	Identifier	I		1027913	0					
ANR	1028457	Argument	"I -> get_decodingID ( I , & I -> ff , decodingID )"		1027913	2					
ANR	1028458	CallExpression	"I -> get_decodingID ( I , & I -> ff , decodingID )"		1027913	0					
ANR	1028459	Callee	I -> get_decodingID		1027913	0					
ANR	1028460	PtrMemberAccess	I -> get_decodingID		1027913	0					
ANR	1028461	Identifier	I		1027913	0					
ANR	1028462	Identifier	get_decodingID		1027913	1					
ANR	1028463	ArgumentList	I		1027913	1					
ANR	1028464	Argument	I		1027913	0					
ANR	1028465	Identifier	I		1027913	0					
ANR	1028466	Argument	& I -> ff		1027913	1					
ANR	1028467	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028468	UnaryOperator	&		1027913	0					
ANR	1028469	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028470	Identifier	I		1027913	0					
ANR	1028471	Identifier	ff		1027913	1					
ANR	1028472	Argument	decodingID		1027913	2					
ANR	1028473	Identifier	decodingID		1027913	0					
ANR	1028474	PrimaryExpression	0		1027913	1					
ANR	1028475	CompoundStatement		100:75:4437:4437	1027913	1					
ANR	1028476	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"	452:12:14768:14820	1027913	0	True				
ANR	1028477	CallExpression	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"		1027913	0					
ANR	1028478	Callee	gs_fapi_release_typeface		1027913	0					
ANR	1028479	Identifier	gs_fapi_release_typeface		1027913	0					
ANR	1028480	ArgumentList	I		1027913	1					
ANR	1028481	Argument	I		1027913	0					
ANR	1028482	Identifier	I		1027913	0					
ANR	1028483	Argument	& pbfont -> FAPI_font_data		1027913	1					
ANR	1028484	UnaryOperationExpression	& pbfont -> FAPI_font_data		1027913	0					
ANR	1028485	UnaryOperator	&		1027913	0					
ANR	1028486	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	1					
ANR	1028487	Identifier	pbfont		1027913	0					
ANR	1028488	Identifier	FAPI_font_data		1027913	1					
ANR	1028489	ReturnStatement	return code ;	453:12:14834:14845	1027913	1	True				
ANR	1028490	Identifier	code		1027913	0					
ANR	1028491	IfStatement	if ( font_file_path == NULL && I -> ff . is_type1 && I -> ff . is_cid )		1027913	30					
ANR	1028492	Condition	font_file_path == NULL && I -> ff . is_type1 && I -> ff . is_cid	458:8:14909:14964	1027913	0	True				
ANR	1028493	AndExpression	font_file_path == NULL && I -> ff . is_type1 && I -> ff . is_cid		1027913	0		&&			
ANR	1028494	EqualityExpression	font_file_path == NULL		1027913	0		==			
ANR	1028495	Identifier	font_file_path		1027913	0					
ANR	1028496	Identifier	NULL		1027913	1					
ANR	1028497	AndExpression	I -> ff . is_type1 && I -> ff . is_cid		1027913	1		&&			
ANR	1028498	MemberAccess	I -> ff . is_type1		1027913	0					
ANR	1028499	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028500	Identifier	I		1027913	0					
ANR	1028501	Identifier	ff		1027913	1					
ANR	1028502	Identifier	is_type1		1027913	1					
ANR	1028503	MemberAccess	I -> ff . is_cid		1027913	1					
ANR	1028504	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028505	Identifier	I		1027913	0					
ANR	1028506	Identifier	ff		1027913	1					
ANR	1028507	Identifier	is_cid		1027913	1					
ANR	1028508	CompoundStatement		110:8:4822:4859	1027913	1					
ANR	1028509	IdentifierDeclStatement	gs_font_cid0 * pfcid = ( gs_font_cid0 * ) pbfont ;	459:8:15027:15072	1027913	0	True				
ANR	1028510	IdentifierDecl	* pfcid = ( gs_font_cid0 * ) pbfont		1027913	0					
ANR	1028511	IdentifierDeclType	gs_font_cid0 *		1027913	0					
ANR	1028512	Identifier	pfcid		1027913	1					
ANR	1028513	AssignmentExpression	* pfcid = ( gs_font_cid0 * ) pbfont		1027913	2		=			
ANR	1028514	Identifier	pfcid		1027913	0					
ANR	1028515	CastExpression	( gs_font_cid0 * ) pbfont		1027913	1					
ANR	1028516	CastTarget	gs_font_cid0 *		1027913	0					
ANR	1028517	Identifier	pbfont		1027913	1					
ANR	1028518	IdentifierDeclStatement	gs_font_type1 * * FDArray = pfcid -> cidata . FDArray ;	460:8:15082:15129	1027913	1	True				
ANR	1028519	IdentifierDecl	* * FDArray = pfcid -> cidata . FDArray		1027913	0					
ANR	1028520	IdentifierDeclType	gs_font_type1 * *		1027913	0					
ANR	1028521	Identifier	FDArray		1027913	1					
ANR	1028522	AssignmentExpression	* * FDArray = pfcid -> cidata . FDArray		1027913	2		=			
ANR	1028523	Identifier	FDArray		1027913	0					
ANR	1028524	MemberAccess	pfcid -> cidata . FDArray		1027913	1					
ANR	1028525	PtrMemberAccess	pfcid -> cidata		1027913	0					
ANR	1028526	Identifier	pfcid		1027913	0					
ANR	1028527	Identifier	cidata		1027913	1					
ANR	1028528	Identifier	FDArray		1027913	1					
ANR	1028529	IdentifierDeclStatement	"int i , n = pfcid -> cidata . FDArray_size ;"	461:8:15139:15176	1027913	2	True				
ANR	1028530	IdentifierDecl	i		1027913	0					
ANR	1028531	IdentifierDeclType	int		1027913	0					
ANR	1028532	Identifier	i		1027913	1					
ANR	1028533	IdentifierDecl	n = pfcid -> cidata . FDArray_size		1027913	1					
ANR	1028534	IdentifierDeclType	int		1027913	0					
ANR	1028535	Identifier	n		1027913	1					
ANR	1028536	AssignmentExpression	n = pfcid -> cidata . FDArray_size		1027913	2		=			
ANR	1028537	Identifier	n		1027913	0					
ANR	1028538	MemberAccess	pfcid -> cidata . FDArray_size		1027913	1					
ANR	1028539	PtrMemberAccess	pfcid -> cidata		1027913	0					
ANR	1028540	Identifier	pfcid		1027913	0					
ANR	1028541	Identifier	cidata		1027913	1					
ANR	1028542	Identifier	FDArray_size		1027913	1					
ANR	1028543	ExpressionStatement	I -> ff . is_type1 = true	463:8:15187:15208	1027913	3	True				
ANR	1028544	AssignmentExpression	I -> ff . is_type1 = true		1027913	0		=			
ANR	1028545	MemberAccess	I -> ff . is_type1		1027913	0					
ANR	1028546	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028547	Identifier	I		1027913	0					
ANR	1028548	Identifier	ff		1027913	1					
ANR	1028549	Identifier	is_type1		1027913	1					
ANR	1028550	Identifier	true		1027913	1					
ANR	1028551	ExpressionStatement	I -> ff . is_vertical = false	464:8:15218:15243	1027913	4	True				
ANR	1028552	AssignmentExpression	I -> ff . is_vertical = false		1027913	0		=			
ANR	1028553	MemberAccess	I -> ff . is_vertical		1027913	0					
ANR	1028554	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028555	Identifier	I		1027913	0					
ANR	1028556	Identifier	ff		1027913	1					
ANR	1028557	Identifier	is_vertical		1027913	1					
ANR	1028558	Identifier	false		1027913	1					
ANR	1028559	ExpressionStatement	I -> ff . memory = mem	465:8:15308:15326	1027913	5	True				
ANR	1028560	AssignmentExpression	I -> ff . memory = mem		1027913	0		=			
ANR	1028561	MemberAccess	I -> ff . memory		1027913	0					
ANR	1028562	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028563	Identifier	I		1027913	0					
ANR	1028564	Identifier	ff		1027913	1					
ANR	1028565	Identifier	memory		1027913	1					
ANR	1028566	Identifier	mem		1027913	1					
ANR	1028567	ExpressionStatement	I -> ff . client_ctx_p = I -> client_ctx_p	466:8:15336:15372	1027913	6	True				
ANR	1028568	AssignmentExpression	I -> ff . client_ctx_p = I -> client_ctx_p		1027913	0		=			
ANR	1028569	MemberAccess	I -> ff . client_ctx_p		1027913	0					
ANR	1028570	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028571	Identifier	I		1027913	0					
ANR	1028572	Identifier	ff		1027913	1					
ANR	1028573	Identifier	client_ctx_p		1027913	1					
ANR	1028574	PtrMemberAccess	I -> client_ctx_p		1027913	1					
ANR	1028575	Identifier	I		1027913	0					
ANR	1028576	Identifier	client_ctx_p		1027913	1					
ANR	1028577	ForStatement	for ( i = 0 ; i < n ; i ++ )		1027913	7					
ANR	1028578	ForInit	i = 0 ;	467:13:15387:15392	1027913	0	True				
ANR	1028579	AssignmentExpression	i = 0		1027913	0		=			
ANR	1028580	Identifier	i		1027913	0					
ANR	1028581	PrimaryExpression	0		1027913	1					
ANR	1028582	Condition	i < n	467:20:15394:15398	1027913	1	True				
ANR	1028583	RelationalExpression	i < n		1027913	0		<			
ANR	1028584	Identifier	i		1027913	0					
ANR	1028585	Identifier	n		1027913	1					
ANR	1028586	PostIncDecOperationExpression	i ++	467:27:15401:15403	1027913	2	True				
ANR	1028587	Identifier	i		1027913	0					
ANR	1028588	IncDec	++		1027913	1					
ANR	1028589	CompoundStatement		119:12:5182:5199	1027913	3					
ANR	1028590	IdentifierDeclStatement	gs_font_type1 * pbfont1 = FDArray [ i ] ;	468:12:15420:15455	1027913	0	True				
ANR	1028591	IdentifierDecl	* pbfont1 = FDArray [ i ]		1027913	0					
ANR	1028592	IdentifierDeclType	gs_font_type1 *		1027913	0					
ANR	1028593	Identifier	pbfont1		1027913	1					
ANR	1028594	AssignmentExpression	* pbfont1 = FDArray [ i ]		1027913	2		=			
ANR	1028595	Identifier	pbfont1		1027913	0					
ANR	1028596	ArrayIndexing	FDArray [ i ]		1027913	1					
ANR	1028597	Identifier	FDArray		1027913	0					
ANR	1028598	Identifier	i		1027913	1					
ANR	1028599	IdentifierDeclStatement	int BBox_temp [ 4 ] ;	469:12:15469:15485	1027913	1	True				
ANR	1028600	IdentifierDecl	BBox_temp [ 4 ]		1027913	0					
ANR	1028601	IdentifierDeclType	int [ 4 ]		1027913	0					
ANR	1028602	Identifier	BBox_temp		1027913	1					
ANR	1028603	PrimaryExpression	4		1027913	2					
ANR	1028604	IdentifierDeclStatement	int units_temp [ 2 ] ;	470:12:15499:15516	1027913	2	True				
ANR	1028605	IdentifierDecl	units_temp [ 2 ]		1027913	0					
ANR	1028606	IdentifierDeclType	int [ 2 ]		1027913	0					
ANR	1028607	Identifier	units_temp		1027913	1					
ANR	1028608	PrimaryExpression	2		1027913	2					
ANR	1028609	ExpressionStatement	pbfont1 -> FontBBox = pbfont -> FontBBox	472:12:15531:15567	1027913	3	True				
ANR	1028610	AssignmentExpression	pbfont1 -> FontBBox = pbfont -> FontBBox		1027913	0		=			
ANR	1028611	PtrMemberAccess	pbfont1 -> FontBBox		1027913	0					
ANR	1028612	Identifier	pbfont1		1027913	0					
ANR	1028613	Identifier	FontBBox		1027913	1					
ANR	1028614	PtrMemberAccess	pbfont -> FontBBox		1027913	1					
ANR	1028615	Identifier	pbfont		1027913	0					
ANR	1028616	Identifier	FontBBox		1027913	1					
ANR	1028617	ExpressionStatement	I -> ff . client_font_data = pbfont1	474:12:15633:15665	1027913	4	True				
ANR	1028618	AssignmentExpression	I -> ff . client_font_data = pbfont1		1027913	0		=			
ANR	1028619	MemberAccess	I -> ff . client_font_data		1027913	0					
ANR	1028620	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028621	Identifier	I		1027913	0					
ANR	1028622	Identifier	ff		1027913	1					
ANR	1028623	Identifier	client_font_data		1027913	1					
ANR	1028624	Identifier	pbfont1		1027913	1					
ANR	1028625	ExpressionStatement	pbfont1 -> FAPI = pbfont -> FAPI	475:12:15679:15707	1027913	5	True				
ANR	1028626	AssignmentExpression	pbfont1 -> FAPI = pbfont -> FAPI		1027913	0		=			
ANR	1028627	PtrMemberAccess	pbfont1 -> FAPI		1027913	0					
ANR	1028628	Identifier	pbfont1		1027913	0					
ANR	1028629	Identifier	FAPI		1027913	1					
ANR	1028630	PtrMemberAccess	pbfont -> FAPI		1027913	1					
ANR	1028631	Identifier	pbfont		1027913	0					
ANR	1028632	Identifier	FAPI		1027913	1					
ANR	1028633	ExpressionStatement	I -> ff . client_font_data2 = pbfont1	476:12:15721:15754	1027913	6	True				
ANR	1028634	AssignmentExpression	I -> ff . client_font_data2 = pbfont1		1027913	0		=			
ANR	1028635	MemberAccess	I -> ff . client_font_data2		1027913	0					
ANR	1028636	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028637	Identifier	I		1027913	0					
ANR	1028638	Identifier	ff		1027913	1					
ANR	1028639	Identifier	client_font_data2		1027913	1					
ANR	1028640	Identifier	pbfont1		1027913	1					
ANR	1028641	ExpressionStatement	I -> ff . server_font_data = pbfont1 -> FAPI_font_data	477:12:15768:15816	1027913	7	True				
ANR	1028642	AssignmentExpression	I -> ff . server_font_data = pbfont1 -> FAPI_font_data		1027913	0		=			
ANR	1028643	MemberAccess	I -> ff . server_font_data		1027913	0					
ANR	1028644	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028645	Identifier	I		1027913	0					
ANR	1028646	Identifier	ff		1027913	1					
ANR	1028647	Identifier	server_font_data		1027913	1					
ANR	1028648	PtrMemberAccess	pbfont1 -> FAPI_font_data		1027913	1					
ANR	1028649	Identifier	pbfont1		1027913	0					
ANR	1028650	Identifier	FAPI_font_data		1027913	1					
ANR	1028651	ExpressionStatement	I -> ff . is_cid = true	478:12:15830:15849	1027913	8	True				
ANR	1028652	AssignmentExpression	I -> ff . is_cid = true		1027913	0		=			
ANR	1028653	MemberAccess	I -> ff . is_cid		1027913	0					
ANR	1028654	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028655	Identifier	I		1027913	0					
ANR	1028656	Identifier	ff		1027913	1					
ANR	1028657	Identifier	is_cid		1027913	1					
ANR	1028658	Identifier	true		1027913	1					
ANR	1028659	ExpressionStatement	I -> ff . is_outline_font = pbfont1 -> PaintType != 0	479:12:15863:15910	1027913	9	True				
ANR	1028660	AssignmentExpression	I -> ff . is_outline_font = pbfont1 -> PaintType != 0		1027913	0		=			
ANR	1028661	MemberAccess	I -> ff . is_outline_font		1027913	0					
ANR	1028662	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028663	Identifier	I		1027913	0					
ANR	1028664	Identifier	ff		1027913	1					
ANR	1028665	Identifier	is_outline_font		1027913	1					
ANR	1028666	EqualityExpression	pbfont1 -> PaintType != 0		1027913	1		!=			
ANR	1028667	PtrMemberAccess	pbfont1 -> PaintType		1027913	0					
ANR	1028668	Identifier	pbfont1		1027913	0					
ANR	1028669	Identifier	PaintType		1027913	1					
ANR	1028670	PrimaryExpression	0		1027913	1					
ANR	1028671	IfStatement	if ( ! I -> ff . is_mtx_skipped )		1027913	10					
ANR	1028672	Condition	! I -> ff . is_mtx_skipped	480:16:15928:15948	1027913	0	True				
ANR	1028673	UnaryOperationExpression	! I -> ff . is_mtx_skipped		1027913	0					
ANR	1028674	UnaryOperator	!		1027913	0					
ANR	1028675	MemberAccess	I -> ff . is_mtx_skipped		1027913	1					
ANR	1028676	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028677	Identifier	I		1027913	0					
ANR	1028678	Identifier	ff		1027913	1					
ANR	1028679	Identifier	is_mtx_skipped		1027913	1					
ANR	1028680	ExpressionStatement	I -> ff . is_mtx_skipped = ( gs_fapi_get_metrics_count ( & I -> ff ) != 0 )	481:16:15967:16030	1027913	1	True				
ANR	1028681	AssignmentExpression	I -> ff . is_mtx_skipped = ( gs_fapi_get_metrics_count ( & I -> ff ) != 0 )		1027913	0		=			
ANR	1028682	MemberAccess	I -> ff . is_mtx_skipped		1027913	0					
ANR	1028683	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028684	Identifier	I		1027913	0					
ANR	1028685	Identifier	ff		1027913	1					
ANR	1028686	Identifier	is_mtx_skipped		1027913	1					
ANR	1028687	EqualityExpression	gs_fapi_get_metrics_count ( & I -> ff ) != 0		1027913	1		!=			
ANR	1028688	CallExpression	gs_fapi_get_metrics_count ( & I -> ff )		1027913	0					
ANR	1028689	Callee	gs_fapi_get_metrics_count		1027913	0					
ANR	1028690	Identifier	gs_fapi_get_metrics_count		1027913	0					
ANR	1028691	ArgumentList	& I -> ff		1027913	1					
ANR	1028692	Argument	& I -> ff		1027913	0					
ANR	1028693	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028694	UnaryOperator	&		1027913	0					
ANR	1028695	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028696	Identifier	I		1027913	0					
ANR	1028697	Identifier	ff		1027913	1					
ANR	1028698	PrimaryExpression	0		1027913	1					
ANR	1028699	ExpressionStatement	I -> ff . subfont = 0	482:12:16044:16061	1027913	11	True				
ANR	1028700	AssignmentExpression	I -> ff . subfont = 0		1027913	0		=			
ANR	1028701	MemberAccess	I -> ff . subfont		1027913	0					
ANR	1028702	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028703	Identifier	I		1027913	0					
ANR	1028704	Identifier	ff		1027913	1					
ANR	1028705	Identifier	subfont		1027913	1					
ANR	1028706	PrimaryExpression	0		1027913	1					
ANR	1028707	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , i ) ) ) < 0 )"		1027913	12					
ANR	1028708	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , i ) ) ) < 0"	483:16:16079:16509	1027913	0	True				
ANR	1028709	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , i ) ) ) < 0"		1027913	0		<			
ANR	1028710	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , i ) )"		1027913	0		=			
ANR	1028711	Identifier	code		1027913	0					
ANR	1028712	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , i ) )"		1027913	1					
ANR	1028713	Callee	gs_fapi_renderer_retcode		1027913	0					
ANR	1028714	Identifier	gs_fapi_renderer_retcode		1027913	0					
ANR	1028715	ArgumentList	mem		1027913	1					
ANR	1028716	Argument	mem		1027913	0					
ANR	1028717	Identifier	mem		1027913	0					
ANR	1028718	Argument	I		1027913	1					
ANR	1028719	Identifier	I		1027913	0					
ANR	1028720	Argument	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , i )"		1027913	2					
ANR	1028721	CallExpression	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , i )"		1027913	0					
ANR	1028722	Callee	I -> get_scaled_font		1027913	0					
ANR	1028723	PtrMemberAccess	I -> get_scaled_font		1027913	0					
ANR	1028724	Identifier	I		1027913	0					
ANR	1028725	Identifier	get_scaled_font		1027913	1					
ANR	1028726	ArgumentList	I		1027913	1					
ANR	1028727	Argument	I		1027913	0					
ANR	1028728	Identifier	I		1027913	0					
ANR	1028729	Argument	& I -> ff		1027913	1					
ANR	1028730	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028731	UnaryOperator	&		1027913	0					
ANR	1028732	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028733	Identifier	I		1027913	0					
ANR	1028734	Identifier	ff		1027913	1					
ANR	1028735	Argument	( const gs_fapi_font_scale * ) & font_scale		1027913	2					
ANR	1028736	CastExpression	( const gs_fapi_font_scale * ) & font_scale		1027913	0					
ANR	1028737	CastTarget	const gs_fapi_font_scale *		1027913	0					
ANR	1028738	UnaryOperationExpression	& font_scale		1027913	1					
ANR	1028739	UnaryOperator	&		1027913	0					
ANR	1028740	Identifier	font_scale		1027913	1					
ANR	1028741	Argument	NULL		1027913	3					
ANR	1028742	Identifier	NULL		1027913	0					
ANR	1028743	Argument	i		1027913	4					
ANR	1028744	Identifier	i		1027913	0					
ANR	1028745	PrimaryExpression	0		1027913	1					
ANR	1028746	CompoundStatement		138:77:6195:6195	1027913	1					
ANR	1028747	BreakStatement	break ;	490:16:16530:16535	1027913	0	True				
ANR	1028748	ExpressionStatement	pbfont1 -> FAPI_font_data = I -> ff . server_font_data	493:12:16564:16612	1027913	13	True				
ANR	1028749	AssignmentExpression	pbfont1 -> FAPI_font_data = I -> ff . server_font_data		1027913	0		=			
ANR	1028750	PtrMemberAccess	pbfont1 -> FAPI_font_data		1027913	0					
ANR	1028751	Identifier	pbfont1		1027913	0					
ANR	1028752	Identifier	FAPI_font_data		1027913	1					
ANR	1028753	MemberAccess	I -> ff . server_font_data		1027913	1					
ANR	1028754	PtrMemberAccess	I -> ff		1027913	0					
ANR	1028755	Identifier	I		1027913	0					
ANR	1028756	Identifier	ff		1027913	1					
ANR	1028757	Identifier	server_font_data		1027913	1					
ANR	1028758	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox_temp , units_temp ) ) ) < 0 )"		1027913	14					
ANR	1028759	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox_temp , units_temp ) ) ) < 0"	495:16:16756:16970	1027913	0	True				
ANR	1028760	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox_temp , units_temp ) ) ) < 0"		1027913	0		<			
ANR	1028761	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox_temp , units_temp ) )"		1027913	0		=			
ANR	1028762	Identifier	code		1027913	0					
ANR	1028763	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_font_bbox ( I , & I -> ff , BBox_temp , units_temp ) )"		1027913	1					
ANR	1028764	Callee	gs_fapi_renderer_retcode		1027913	0					
ANR	1028765	Identifier	gs_fapi_renderer_retcode		1027913	0					
ANR	1028766	ArgumentList	mem		1027913	1					
ANR	1028767	Argument	mem		1027913	0					
ANR	1028768	Identifier	mem		1027913	0					
ANR	1028769	Argument	I		1027913	1					
ANR	1028770	Identifier	I		1027913	0					
ANR	1028771	Argument	"I -> get_font_bbox ( I , & I -> ff , BBox_temp , units_temp )"		1027913	2					
ANR	1028772	CallExpression	"I -> get_font_bbox ( I , & I -> ff , BBox_temp , units_temp )"		1027913	0					
ANR	1028773	Callee	I -> get_font_bbox		1027913	0					
ANR	1028774	PtrMemberAccess	I -> get_font_bbox		1027913	0					
ANR	1028775	Identifier	I		1027913	0					
ANR	1028776	Identifier	get_font_bbox		1027913	1					
ANR	1028777	ArgumentList	I		1027913	1					
ANR	1028778	Argument	I		1027913	0					
ANR	1028779	Identifier	I		1027913	0					
ANR	1028780	Argument	& I -> ff		1027913	1					
ANR	1028781	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028782	UnaryOperator	&		1027913	0					
ANR	1028783	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028784	Identifier	I		1027913	0					
ANR	1028785	Identifier	ff		1027913	1					
ANR	1028786	Argument	BBox_temp		1027913	2					
ANR	1028787	Identifier	BBox_temp		1027913	0					
ANR	1028788	Argument	units_temp		1027913	3					
ANR	1028789	Identifier	units_temp		1027913	0					
ANR	1028790	PrimaryExpression	0		1027913	1					
ANR	1028791	CompoundStatement		147:89:6656:6656	1027913	1					
ANR	1028792	BreakStatement	break ;	499:16:16991:16996	1027913	0	True				
ANR	1028793	ExpressionStatement	"code = gs_notify_register ( & pbfont1 -> notify_list , notify_remove_font , pbfont1 )"	501:12:17024:17101	1027913	15	True				
ANR	1028794	AssignmentExpression	"code = gs_notify_register ( & pbfont1 -> notify_list , notify_remove_font , pbfont1 )"		1027913	0		=			
ANR	1028795	Identifier	code		1027913	0					
ANR	1028796	CallExpression	"gs_notify_register ( & pbfont1 -> notify_list , notify_remove_font , pbfont1 )"		1027913	1					
ANR	1028797	Callee	gs_notify_register		1027913	0					
ANR	1028798	Identifier	gs_notify_register		1027913	0					
ANR	1028799	ArgumentList	& pbfont1 -> notify_list		1027913	1					
ANR	1028800	Argument	& pbfont1 -> notify_list		1027913	0					
ANR	1028801	UnaryOperationExpression	& pbfont1 -> notify_list		1027913	0					
ANR	1028802	UnaryOperator	&		1027913	0					
ANR	1028803	PtrMemberAccess	pbfont1 -> notify_list		1027913	1					
ANR	1028804	Identifier	pbfont1		1027913	0					
ANR	1028805	Identifier	notify_list		1027913	1					
ANR	1028806	Argument	notify_remove_font		1027913	1					
ANR	1028807	Identifier	notify_remove_font		1027913	0					
ANR	1028808	Argument	pbfont1		1027913	2					
ANR	1028809	Identifier	pbfont1		1027913	0					
ANR	1028810	IfStatement	if ( code < 0 )		1027913	16					
ANR	1028811	Condition	code < 0	502:16:17119:17126	1027913	0	True				
ANR	1028812	RelationalExpression	code < 0		1027913	0		<			
ANR	1028813	Identifier	code		1027913	0					
ANR	1028814	PrimaryExpression	0		1027913	1					
ANR	1028815	CompoundStatement		151:26:6812:6812	1027913	1					
ANR	1028816	ExpressionStatement	"emprintf ( mem , ""Ignoring gs_notify_register() failure for FAPI font....."" )"	503:16:17147:17245	1027913	0	True				
ANR	1028817	CallExpression	"emprintf ( mem , ""Ignoring gs_notify_register() failure for FAPI font....."" )"		1027913	0					
ANR	1028818	Callee	emprintf		1027913	0					
ANR	1028819	Identifier	emprintf		1027913	0					
ANR	1028820	ArgumentList	mem		1027913	1					
ANR	1028821	Argument	mem		1027913	0					
ANR	1028822	Identifier	mem		1027913	0					
ANR	1028823	Argument	"""Ignoring gs_notify_register() failure for FAPI font....."""		1027913	1					
ANR	1028824	PrimaryExpression	"""Ignoring gs_notify_register() failure for FAPI font....."""		1027913	0					
ANR	1028825	IfStatement	if ( i == n )		1027913	8					
ANR	1028826	Condition	i == n	507:12:17283:17288	1027913	0	True				
ANR	1028827	EqualityExpression	i == n		1027913	0		==			
ANR	1028828	Identifier	i		1027913	0					
ANR	1028829	Identifier	n		1027913	1					
ANR	1028830	CompoundStatement		156:20:6974:6974	1027913	1					
ANR	1028831	ExpressionStatement	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , gs_fapi_toplevel_complete ) )"	508:12:17305:17808	1027913	0	True				
ANR	1028832	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , gs_fapi_toplevel_complete ) )"		1027913	0		=			
ANR	1028833	Identifier	code		1027913	0					
ANR	1028834	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , gs_fapi_toplevel_complete ) )"		1027913	1					
ANR	1028835	Callee	gs_fapi_renderer_retcode		1027913	0					
ANR	1028836	Identifier	gs_fapi_renderer_retcode		1027913	0					
ANR	1028837	ArgumentList	mem		1027913	1					
ANR	1028838	Argument	mem		1027913	0					
ANR	1028839	Identifier	mem		1027913	0					
ANR	1028840	Argument	I		1027913	1					
ANR	1028841	Identifier	I		1027913	0					
ANR	1028842	Argument	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , gs_fapi_toplevel_complete )"		1027913	2					
ANR	1028843	CallExpression	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , NULL , gs_fapi_toplevel_complete )"		1027913	0					
ANR	1028844	Callee	I -> get_scaled_font		1027913	0					
ANR	1028845	PtrMemberAccess	I -> get_scaled_font		1027913	0					
ANR	1028846	Identifier	I		1027913	0					
ANR	1028847	Identifier	get_scaled_font		1027913	1					
ANR	1028848	ArgumentList	I		1027913	1					
ANR	1028849	Argument	I		1027913	0					
ANR	1028850	Identifier	I		1027913	0					
ANR	1028851	Argument	& I -> ff		1027913	1					
ANR	1028852	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028853	UnaryOperator	&		1027913	0					
ANR	1028854	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028855	Identifier	I		1027913	0					
ANR	1028856	Identifier	ff		1027913	1					
ANR	1028857	Argument	( const gs_fapi_font_scale * ) & font_scale		1027913	2					
ANR	1028858	CastExpression	( const gs_fapi_font_scale * ) & font_scale		1027913	0					
ANR	1028859	CastTarget	const gs_fapi_font_scale *		1027913	0					
ANR	1028860	UnaryOperationExpression	& font_scale		1027913	1					
ANR	1028861	UnaryOperator	&		1027913	0					
ANR	1028862	Identifier	font_scale		1027913	1					
ANR	1028863	Argument	NULL		1027913	3					
ANR	1028864	Identifier	NULL		1027913	0					
ANR	1028865	Argument	gs_fapi_toplevel_complete		1027913	4					
ANR	1028866	Identifier	gs_fapi_toplevel_complete		1027913	0					
ANR	1028867	IfStatement	if ( code >= 0 )		1027913	1					
ANR	1028868	Condition	code >= 0	516:16:17826:17834	1027913	0	True				
ANR	1028869	RelationalExpression	code >= 0		1027913	0		>=			
ANR	1028870	Identifier	code		1027913	0					
ANR	1028871	PrimaryExpression	0		1027913	1					
ANR	1028872	ReturnStatement	return bbox_set ;	517:16:17853:17868	1027913	1	True				
ANR	1028873	Identifier	bbox_set		1027913	0					
ANR	1028874	ForStatement	for ( i = 0 ; i < n ; i ++ )		1027913	9					
ANR	1028875	ForInit	i = 0 ;	520:13:17969:17974	1027913	0	True				
ANR	1028876	AssignmentExpression	i = 0		1027913	0		=			
ANR	1028877	Identifier	i		1027913	0					
ANR	1028878	PrimaryExpression	0		1027913	1					
ANR	1028879	Condition	i < n	520:20:17976:17980	1027913	1	True				
ANR	1028880	RelationalExpression	i < n		1027913	0		<			
ANR	1028881	Identifier	i		1027913	0					
ANR	1028882	Identifier	n		1027913	1					
ANR	1028883	PostIncDecOperationExpression	i ++	520:27:17983:17985	1027913	2	True				
ANR	1028884	Identifier	i		1027913	0					
ANR	1028885	IncDec	++		1027913	1					
ANR	1028886	CompoundStatement		170:12:7685:7720	1027913	3					
ANR	1028887	IdentifierDeclStatement	gs_font_type1 * pbfont1 = FDArray [ i ] ;	521:12:18002:18037	1027913	0	True				
ANR	1028888	IdentifierDecl	* pbfont1 = FDArray [ i ]		1027913	0					
ANR	1028889	IdentifierDeclType	gs_font_type1 *		1027913	0					
ANR	1028890	Identifier	pbfont1		1027913	1					
ANR	1028891	AssignmentExpression	* pbfont1 = FDArray [ i ]		1027913	2		=			
ANR	1028892	Identifier	pbfont1		1027913	0					
ANR	1028893	ArrayIndexing	FDArray [ i ]		1027913	1					
ANR	1028894	Identifier	FDArray		1027913	0					
ANR	1028895	Identifier	i		1027913	1					
ANR	1028896	IfStatement	if ( pbfont1 -> FAPI_font_data != NULL )		1027913	1					
ANR	1028897	Condition	pbfont1 -> FAPI_font_data != NULL	523:16:18056:18086	1027913	0	True				
ANR	1028898	EqualityExpression	pbfont1 -> FAPI_font_data != NULL		1027913	0		!=			
ANR	1028899	PtrMemberAccess	pbfont1 -> FAPI_font_data		1027913	0					
ANR	1028900	Identifier	pbfont1		1027913	0					
ANR	1028901	Identifier	FAPI_font_data		1027913	1					
ANR	1028902	Identifier	NULL		1027913	1					
ANR	1028903	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont1 -> FAPI_font_data )"	524:16:18105:18158	1027913	1	True				
ANR	1028904	CallExpression	"gs_fapi_release_typeface ( I , & pbfont1 -> FAPI_font_data )"		1027913	0					
ANR	1028905	Callee	gs_fapi_release_typeface		1027913	0					
ANR	1028906	Identifier	gs_fapi_release_typeface		1027913	0					
ANR	1028907	ArgumentList	I		1027913	1					
ANR	1028908	Argument	I		1027913	0					
ANR	1028909	Identifier	I		1027913	0					
ANR	1028910	Argument	& pbfont1 -> FAPI_font_data		1027913	1					
ANR	1028911	UnaryOperationExpression	& pbfont1 -> FAPI_font_data		1027913	0					
ANR	1028912	UnaryOperator	&		1027913	0					
ANR	1028913	PtrMemberAccess	pbfont1 -> FAPI_font_data		1027913	1					
ANR	1028914	Identifier	pbfont1		1027913	0					
ANR	1028915	Identifier	FAPI_font_data		1027913	1					
ANR	1028916	IfStatement	if ( pbfont -> FAPI_font_data != NULL )		1027913	10					
ANR	1028917	Condition	pbfont -> FAPI_font_data != NULL	527:12:18183:18212	1027913	0	True				
ANR	1028918	EqualityExpression	pbfont -> FAPI_font_data != NULL		1027913	0		!=			
ANR	1028919	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	0					
ANR	1028920	Identifier	pbfont		1027913	0					
ANR	1028921	Identifier	FAPI_font_data		1027913	1					
ANR	1028922	Identifier	NULL		1027913	1					
ANR	1028923	CompoundStatement		176:44:7898:7898	1027913	1					
ANR	1028924	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"	528:12:18229:18281	1027913	0	True				
ANR	1028925	CallExpression	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"		1027913	0					
ANR	1028926	Callee	gs_fapi_release_typeface		1027913	0					
ANR	1028927	Identifier	gs_fapi_release_typeface		1027913	0					
ANR	1028928	ArgumentList	I		1027913	1					
ANR	1028929	Argument	I		1027913	0					
ANR	1028930	Identifier	I		1027913	0					
ANR	1028931	Argument	& pbfont -> FAPI_font_data		1027913	1					
ANR	1028932	UnaryOperationExpression	& pbfont -> FAPI_font_data		1027913	0					
ANR	1028933	UnaryOperator	&		1027913	0					
ANR	1028934	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	1					
ANR	1028935	Identifier	pbfont		1027913	0					
ANR	1028936	Identifier	FAPI_font_data		1027913	1					
ANR	1028937	ExpressionStatement	return_error ( gs_error_invalidfont )	530:8:18301:18335	1027913	11	True				
ANR	1028938	CallExpression	return_error ( gs_error_invalidfont )		1027913	0					
ANR	1028939	Callee	return_error		1027913	0					
ANR	1028940	Identifier	return_error		1027913	0					
ANR	1028941	ArgumentList	gs_error_invalidfont		1027913	1					
ANR	1028942	Argument	gs_error_invalidfont		1027913	0					
ANR	1028943	Identifier	gs_error_invalidfont		1027913	0					
ANR	1028944	ExpressionStatement	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_complete ) )"	536:4:18512:18976	1027913	31	True				
ANR	1028945	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_complete ) )"		1027913	0		=			
ANR	1028946	Identifier	code		1027913	0					
ANR	1028947	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_complete ) )"		1027913	1					
ANR	1028948	Callee	gs_fapi_renderer_retcode		1027913	0					
ANR	1028949	Identifier	gs_fapi_renderer_retcode		1027913	0					
ANR	1028950	ArgumentList	mem		1027913	1					
ANR	1028951	Argument	mem		1027913	0					
ANR	1028952	Identifier	mem		1027913	0					
ANR	1028953	Argument	I		1027913	1					
ANR	1028954	Identifier	I		1027913	0					
ANR	1028955	Argument	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_complete )"		1027913	2					
ANR	1028956	CallExpression	"I -> get_scaled_font ( I , & I -> ff , ( const gs_fapi_font_scale * ) & font_scale , xlatmap , gs_fapi_toplevel_complete )"		1027913	0					
ANR	1028957	Callee	I -> get_scaled_font		1027913	0					
ANR	1028958	PtrMemberAccess	I -> get_scaled_font		1027913	0					
ANR	1028959	Identifier	I		1027913	0					
ANR	1028960	Identifier	get_scaled_font		1027913	1					
ANR	1028961	ArgumentList	I		1027913	1					
ANR	1028962	Argument	I		1027913	0					
ANR	1028963	Identifier	I		1027913	0					
ANR	1028964	Argument	& I -> ff		1027913	1					
ANR	1028965	UnaryOperationExpression	& I -> ff		1027913	0					
ANR	1028966	UnaryOperator	&		1027913	0					
ANR	1028967	PtrMemberAccess	I -> ff		1027913	1					
ANR	1028968	Identifier	I		1027913	0					
ANR	1028969	Identifier	ff		1027913	1					
ANR	1028970	Argument	( const gs_fapi_font_scale * ) & font_scale		1027913	2					
ANR	1028971	CastExpression	( const gs_fapi_font_scale * ) & font_scale		1027913	0					
ANR	1028972	CastTarget	const gs_fapi_font_scale *		1027913	0					
ANR	1028973	UnaryOperationExpression	& font_scale		1027913	1					
ANR	1028974	UnaryOperator	&		1027913	0					
ANR	1028975	Identifier	font_scale		1027913	1					
ANR	1028976	Argument	xlatmap		1027913	3					
ANR	1028977	Identifier	xlatmap		1027913	0					
ANR	1028978	Argument	gs_fapi_toplevel_complete		1027913	4					
ANR	1028979	Identifier	gs_fapi_toplevel_complete		1027913	0					
ANR	1028980	IfStatement	if ( code < 0 )		1027913	32					
ANR	1028981	Condition	code < 0	542:8:18986:18993	1027913	0	True				
ANR	1028982	RelationalExpression	code < 0		1027913	0		<			
ANR	1028983	Identifier	code		1027913	0					
ANR	1028984	PrimaryExpression	0		1027913	1					
ANR	1028985	CompoundStatement		191:18:8679:8679	1027913	1					
ANR	1028986	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"	543:8:19006:19058	1027913	0	True				
ANR	1028987	CallExpression	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"		1027913	0					
ANR	1028988	Callee	gs_fapi_release_typeface		1027913	0					
ANR	1028989	Identifier	gs_fapi_release_typeface		1027913	0					
ANR	1028990	ArgumentList	I		1027913	1					
ANR	1028991	Argument	I		1027913	0					
ANR	1028992	Identifier	I		1027913	0					
ANR	1028993	Argument	& pbfont -> FAPI_font_data		1027913	1					
ANR	1028994	UnaryOperationExpression	& pbfont -> FAPI_font_data		1027913	0					
ANR	1028995	UnaryOperator	&		1027913	0					
ANR	1028996	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	1					
ANR	1028997	Identifier	pbfont		1027913	0					
ANR	1028998	Identifier	FAPI_font_data		1027913	1					
ANR	1028999	ReturnStatement	return code ;	544:8:19068:19079	1027913	1	True				
ANR	1029000	Identifier	code		1027913	0					
ANR	1029001	ExpressionStatement	"code = gs_notify_register ( & pbfont -> notify_list , notify_remove_font , pbfont )"	546:4:19091:19174	1027913	33	True				
ANR	1029002	AssignmentExpression	"code = gs_notify_register ( & pbfont -> notify_list , notify_remove_font , pbfont )"		1027913	0		=			
ANR	1029003	Identifier	code		1027913	0					
ANR	1029004	CallExpression	"gs_notify_register ( & pbfont -> notify_list , notify_remove_font , pbfont )"		1027913	1					
ANR	1029005	Callee	gs_notify_register		1027913	0					
ANR	1029006	Identifier	gs_notify_register		1027913	0					
ANR	1029007	ArgumentList	& pbfont -> notify_list		1027913	1					
ANR	1029008	Argument	& pbfont -> notify_list		1027913	0					
ANR	1029009	UnaryOperationExpression	& pbfont -> notify_list		1027913	0					
ANR	1029010	UnaryOperator	&		1027913	0					
ANR	1029011	PtrMemberAccess	pbfont -> notify_list		1027913	1					
ANR	1029012	Identifier	pbfont		1027913	0					
ANR	1029013	Identifier	notify_list		1027913	1					
ANR	1029014	Argument	notify_remove_font		1027913	1					
ANR	1029015	Identifier	notify_remove_font		1027913	0					
ANR	1029016	Argument	pbfont		1027913	2					
ANR	1029017	Identifier	pbfont		1027913	0					
ANR	1029018	IfStatement	if ( code < 0 )		1027913	34					
ANR	1029019	Condition	code < 0	548:8:19184:19191	1027913	0	True				
ANR	1029020	RelationalExpression	code < 0		1027913	0		<			
ANR	1029021	Identifier	code		1027913	0					
ANR	1029022	PrimaryExpression	0		1027913	1					
ANR	1029023	CompoundStatement		197:18:8877:8877	1027913	1					
ANR	1029024	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"	549:8:19204:19256	1027913	0	True				
ANR	1029025	CallExpression	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"		1027913	0					
ANR	1029026	Callee	gs_fapi_release_typeface		1027913	0					
ANR	1029027	Identifier	gs_fapi_release_typeface		1027913	0					
ANR	1029028	ArgumentList	I		1027913	1					
ANR	1029029	Argument	I		1027913	0					
ANR	1029030	Identifier	I		1027913	0					
ANR	1029031	Argument	& pbfont -> FAPI_font_data		1027913	1					
ANR	1029032	UnaryOperationExpression	& pbfont -> FAPI_font_data		1027913	0					
ANR	1029033	UnaryOperator	&		1027913	0					
ANR	1029034	PtrMemberAccess	pbfont -> FAPI_font_data		1027913	1					
ANR	1029035	Identifier	pbfont		1027913	0					
ANR	1029036	Identifier	FAPI_font_data		1027913	1					
ANR	1029037	ReturnStatement	return code ;	550:8:19266:19277	1027913	1	True				
ANR	1029038	Identifier	code		1027913	0					
ANR	1029039	ReturnStatement	return bbox_set ;	553:4:19290:19305	1027913	35	True				
ANR	1029040	Identifier	bbox_set		1027913	0					
ANR	1029041	ReturnType	int		1027913	1					
ANR	1029042	Identifier	gs_fapi_prepare_font		1027913	2					
ANR	1029043	ParameterList	"gs_font * pfont , gs_fapi_server * I , int subfont , const char * font_file_path , gs_string * full_font_buf , const char * xlatmap , const char * * decodingID"		1027913	3					
ANR	1029044	Parameter	gs_font * pfont	350:21:10147:10160	1027913	0	True				
ANR	1029045	ParameterType	gs_font *		1027913	0					
ANR	1029046	Identifier	pfont		1027913	1					
ANR	1029047	Parameter	gs_fapi_server * I	350:37:10163:10179	1027913	1	True				
ANR	1029048	ParameterType	gs_fapi_server *		1027913	0					
ANR	1029049	Identifier	I		1027913	1					
ANR	1029050	Parameter	int subfont	350:56:10182:10192	1027913	2	True				
ANR	1029051	ParameterType	int		1027913	0					
ANR	1029052	Identifier	subfont		1027913	1					
ANR	1029053	Parameter	const char * font_file_path	350:69:10195:10220	1027913	3	True				
ANR	1029054	ParameterType	const char *		1027913	0					
ANR	1029055	Identifier	font_file_path		1027913	1					
ANR	1029056	Parameter	gs_string * full_font_buf	351:21:10244:10267	1027913	4	True				
ANR	1029057	ParameterType	gs_string *		1027913	0					
ANR	1029058	Identifier	full_font_buf		1027913	1					
ANR	1029059	Parameter	const char * xlatmap	351:47:10270:10288	1027913	5	True				
ANR	1029060	ParameterType	const char *		1027913	0					
ANR	1029061	Identifier	xlatmap		1027913	1					
ANR	1029062	Parameter	const char * * decodingID	351:68:10291:10313	1027913	6	True				
ANR	1029063	ParameterType	const char * *		1027913	0					
ANR	1029064	Identifier	decodingID		1027913	1					
ANR	1029065	CFGEntryNode	ENTRY		1027913		True				
ANR	1029066	CFGExitNode	EXIT		1027913		True				
ANR	1029067	Symbol	& font_scale		1027913						
ANR	1029068	Symbol	I -> ff . full_font_buf_len		1027913						
ANR	1029069	Symbol	I -> get_scaled_font		1027913						
ANR	1029070	Symbol	I -> get_font_bbox		1027913						
ANR	1029071	Symbol	xlatmap		1027913						
ANR	1029072	Symbol	pbfont1 -> PaintType		1027913						
ANR	1029073	Symbol	notify_remove_font		1027913						
ANR	1029074	Symbol	pbfont1 -> FontBBox		1027913						
ANR	1029075	Symbol	I -> ff		1027913						
ANR	1029076	Symbol	full_font_buf		1027913						
ANR	1029077	Symbol	font_scale . HWResolution		1027913						
ANR	1029078	Symbol	pbfont -> FAPI		1027913						
ANR	1029079	Symbol	subfont		1027913						
ANR	1029080	Symbol	* pfcid		1027913						
ANR	1029081	Symbol	* font_scale . HWResolution		1027913						
ANR	1029082	Symbol	size		1027913						
ANR	1029083	Symbol	pfcid -> cidata . FDArray		1027913						
ANR	1029084	Symbol	BBox		1027913						
ANR	1029085	Symbol	I -> ff . client_font_data		1027913						
ANR	1029086	Symbol	full_font_buf -> data		1027913						
ANR	1029087	Symbol	* pbfont1		1027913						
ANR	1029088	Symbol	I -> ff . is_mtx_skipped		1027913						
ANR	1029089	Symbol	pfont -> memory		1027913						
ANR	1029090	Symbol	I		1027913						
ANR	1029091	Symbol	pbfont -> FontMatrix		1027913						
ANR	1029092	Symbol	* font_scale		1027913						
ANR	1029093	Symbol	I -> ff . is_cid		1027913						
ANR	1029094	Symbol	I -> ff . font_file_path		1027913						
ANR	1029095	Symbol	pfcid		1027913						
ANR	1029096	Symbol	hypot		1027913						
ANR	1029097	Symbol	gs_fapi_get_metrics_count		1027913						
ANR	1029098	Symbol	gs_error_invalidfont		1027913						
ANR	1029099	Symbol	pbfont1 -> FAPI_font_data		1027913						
ANR	1029100	Symbol	gs_notify_register		1027913						
ANR	1029101	Symbol	I -> client_ctx_p		1027913						
ANR	1029102	Symbol	* FDArray		1027913						
ANR	1029103	Symbol	* font_scale . matrix		1027913						
ANR	1029104	Symbol	i		1027913						
ANR	1029105	Symbol	pbfont -> FontBBox		1027913						
ANR	1029106	Symbol	I -> ff . client_ctx_p		1027913						
ANR	1029107	Symbol	n		1027913						
ANR	1029108	Symbol	gs_fapi_toplevel_begin		1027913						
ANR	1029109	Symbol	pbfont -> FontBBox . q . x		1027913						
ANR	1029110	Symbol	pbfont -> WMode		1027913						
ANR	1029111	Symbol	pbfont -> FontBBox . q . y		1027913						
ANR	1029112	Symbol	* full_font_buf		1027913						
ANR	1029113	Symbol	FAPI_ISTYPE1GLYPHDATA		1027913						
ANR	1029114	Symbol	I -> frac_shift		1027913						
ANR	1029115	Symbol	gs_fapi_toplevel_complete		1027913						
ANR	1029116	Symbol	I -> ff . is_outline_font		1027913						
ANR	1029117	Symbol	& pbfont -> notify_list		1027913						
ANR	1029118	Symbol	& pbfont1 -> FAPI_font_data		1027913						
ANR	1029119	Symbol	I -> ff . is_type1		1027913						
ANR	1029120	Symbol	BBox_temp		1027913						
ANR	1029121	Symbol	* pbfont		1027913						
ANR	1029122	Symbol	I -> ff . is_vertical		1027913						
ANR	1029123	Symbol	NULL		1027913						
ANR	1029124	Symbol	pbfont -> FontMatrix . xy		1027913						
ANR	1029125	Symbol	pbfont -> FontMatrix . xx		1027913						
ANR	1029126	Symbol	decodingID		1027913						
ANR	1029127	Symbol	I -> ff . server_font_data		1027913						
ANR	1029128	Symbol	I -> get_decodingID		1027913						
ANR	1029129	Symbol	pfcid -> cidata . FDArray_size		1027913						
ANR	1029130	Symbol	true		1027913						
ANR	1029131	Symbol	I -> ff . memory		1027913						
ANR	1029132	Symbol	code		1027913						
ANR	1029133	Symbol	& pbfont -> FAPI_font_data		1027913						
ANR	1029134	Symbol	scale		1027913						
ANR	1029135	Symbol	bbox_set		1027913						
ANR	1029136	Symbol	units		1027913						
ANR	1029137	Symbol	& pbfont1 -> notify_list		1027913						
ANR	1029138	Symbol	pbfont -> FAPI_font_data		1027913						
ANR	1029139	Symbol	pbfont -> PaintType		1027913						
ANR	1029140	Symbol	* BBox		1027913						
ANR	1029141	Symbol	* I		1027913						
ANR	1029142	Symbol	mem		1027913						
ANR	1029143	Symbol	pbfont1		1027913						
ANR	1029144	Symbol	& I -> ff		1027913						
ANR	1029145	Symbol	full_font_buf -> size		1027913						
ANR	1029146	Symbol	pfcid -> cidata		1027913						
ANR	1029147	Symbol	pbfont -> FontBBox . p . y		1027913						
ANR	1029148	Symbol	pbfont -> FontBBox . p . x		1027913						
ANR	1029149	Symbol	pbfont -> FontBBox . p		1027913						
ANR	1029150	Symbol	pfont		1027913						
ANR	1029151	Symbol	FAPI_ISCIDFONT		1027913						
ANR	1029152	Symbol	pbfont -> FontBBox . q		1027913						
ANR	1029153	Symbol	I -> ff . full_font_buf		1027913						
ANR	1029154	Symbol	pbfont1 -> FAPI		1027913						
ANR	1029155	Symbol	font_scale . matrix		1027913						
ANR	1029156	Symbol	I -> ff . client_font_data2		1027913						
ANR	1029157	Symbol	false		1027913						
ANR	1029158	Symbol	units_temp		1027913						
ANR	1029159	Symbol	I -> ff . subfont		1027913						
ANR	1029160	Symbol	* pfont		1027913						
ANR	1029161	Symbol	pbfont		1027913						
ANR	1029162	Symbol	gs_fapi_renderer_retcode		1027913						
ANR	1029163	Symbol	* i		1027913						
ANR	1029164	Symbol	font_file_path		1027913						
ANR	1029165	Symbol	font_scale		1027913						
ANR	1029166	Symbol	* units		1027913						
ANR	1029167	Symbol	FDArray		1027913						
ANR	1029168	Function	outline_char	557:0:19311:20743							
ANR	1029169	FunctionDef	"outline_char (gs_memory_t * mem , gs_fapi_server * I , int import_shift_v , gs_show_enum * penum_s , struct gx_path_s * path , bool close_path)"		1029168	0					
ANR	1029170	CompoundStatement		560:0:19469:20743	1029168	0					
ANR	1029171	IdentifierDeclStatement	gs_fapi_path path_interface = path_interface_stub ;	561:4:19475:19524	1029168	0	True				
ANR	1029172	IdentifierDecl	path_interface = path_interface_stub		1029168	0					
ANR	1029173	IdentifierDeclType	gs_fapi_path		1029168	0					
ANR	1029174	Identifier	path_interface		1029168	1					
ANR	1029175	AssignmentExpression	path_interface = path_interface_stub		1029168	2		=			
ANR	1029176	Identifier	path_interface_stub		1029168	0					
ANR	1029177	Identifier	path_interface_stub		1029168	1					
ANR	1029178	IdentifierDeclStatement	gs_fapi_outline_handler olh ;	562:4:19530:19557	1029168	1	True				
ANR	1029179	IdentifierDecl	olh		1029168	0					
ANR	1029180	IdentifierDeclType	gs_fapi_outline_handler		1029168	0					
ANR	1029181	Identifier	olh		1029168	1					
ANR	1029182	IdentifierDeclStatement	int code ;	563:4:19563:19571	1029168	2	True				
ANR	1029183	IdentifierDecl	code		1029168	0					
ANR	1029184	IdentifierDeclType	int		1029168	0					
ANR	1029185	Identifier	code		1029168	1					
ANR	1029186	IdentifierDeclStatement	gs_gstate * pgs ;	564:4:19577:19591	1029168	3	True				
ANR	1029187	IdentifierDecl	* pgs		1029168	0					
ANR	1029188	IdentifierDeclType	gs_gstate *		1029168	0					
ANR	1029189	Identifier	pgs		1029168	1					
ANR	1029190	ExpressionStatement	extern_st ( st_gs_show_enum )	566:4:19598:19624	1029168	4	True				
ANR	1029191	CallExpression	extern_st ( st_gs_show_enum )		1029168	0					
ANR	1029192	Callee	extern_st		1029168	0					
ANR	1029193	Identifier	extern_st		1029168	0					
ANR	1029194	ArgumentList	st_gs_show_enum		1029168	1					
ANR	1029195	Argument	st_gs_show_enum		1029168	0					
ANR	1029196	Identifier	st_gs_show_enum		1029168	0					
ANR	1029197	ExpressionStatement	extern_st ( st_gs_gstate )	567:4:19630:19653	1029168	5	True				
ANR	1029198	CallExpression	extern_st ( st_gs_gstate )		1029168	0					
ANR	1029199	Callee	extern_st		1029168	0					
ANR	1029200	Identifier	extern_st		1029168	0					
ANR	1029201	ArgumentList	st_gs_gstate		1029168	1					
ANR	1029202	Argument	st_gs_gstate		1029168	0					
ANR	1029203	Identifier	st_gs_gstate		1029168	0					
ANR	1029204	IfStatement	"if ( gs_object_type ( penum_s -> memory , penum_s ) == & st_gs_show_enum )"		1029168	6					
ANR	1029205	Condition	"gs_object_type ( penum_s -> memory , penum_s ) == & st_gs_show_enum"	569:8:19664:19723	1029168	0	True				
ANR	1029206	EqualityExpression	"gs_object_type ( penum_s -> memory , penum_s ) == & st_gs_show_enum"		1029168	0		==			
ANR	1029207	CallExpression	"gs_object_type ( penum_s -> memory , penum_s )"		1029168	0					
ANR	1029208	Callee	gs_object_type		1029168	0					
ANR	1029209	Identifier	gs_object_type		1029168	0					
ANR	1029210	ArgumentList	penum_s -> memory		1029168	1					
ANR	1029211	Argument	penum_s -> memory		1029168	0					
ANR	1029212	PtrMemberAccess	penum_s -> memory		1029168	0					
ANR	1029213	Identifier	penum_s		1029168	0					
ANR	1029214	Identifier	memory		1029168	1					
ANR	1029215	Argument	penum_s		1029168	1					
ANR	1029216	Identifier	penum_s		1029168	0					
ANR	1029217	UnaryOperationExpression	& st_gs_show_enum		1029168	1					
ANR	1029218	UnaryOperator	&		1029168	0					
ANR	1029219	Identifier	st_gs_show_enum		1029168	1					
ANR	1029220	CompoundStatement		10:70:256:256	1029168	1					
ANR	1029221	ExpressionStatement	pgs = penum_s -> pgs	570:8:19736:19754	1029168	0	True				
ANR	1029222	AssignmentExpression	pgs = penum_s -> pgs		1029168	0		=			
ANR	1029223	Identifier	pgs		1029168	0					
ANR	1029224	PtrMemberAccess	penum_s -> pgs		1029168	1					
ANR	1029225	Identifier	penum_s		1029168	0					
ANR	1029226	Identifier	pgs		1029168	1					
ANR	1029227	ElseStatement	else		1029168	0					
ANR	1029228	CompoundStatement		13:9:301:301	1029168	0					
ANR	1029229	IfStatement	"if ( gs_object_type ( penum_s -> memory , penum_s -> pgs ) == & st_gs_gstate )"		1029168	0					
ANR	1029230	Condition	"gs_object_type ( penum_s -> memory , penum_s -> pgs ) == & st_gs_gstate"	573:12:19785:19846	1029168	0	True				
ANR	1029231	EqualityExpression	"gs_object_type ( penum_s -> memory , penum_s -> pgs ) == & st_gs_gstate"		1029168	0		==			
ANR	1029232	CallExpression	"gs_object_type ( penum_s -> memory , penum_s -> pgs )"		1029168	0					
ANR	1029233	Callee	gs_object_type		1029168	0					
ANR	1029234	Identifier	gs_object_type		1029168	0					
ANR	1029235	ArgumentList	penum_s -> memory		1029168	1					
ANR	1029236	Argument	penum_s -> memory		1029168	0					
ANR	1029237	PtrMemberAccess	penum_s -> memory		1029168	0					
ANR	1029238	Identifier	penum_s		1029168	0					
ANR	1029239	Identifier	memory		1029168	1					
ANR	1029240	Argument	penum_s -> pgs		1029168	1					
ANR	1029241	PtrMemberAccess	penum_s -> pgs		1029168	0					
ANR	1029242	Identifier	penum_s		1029168	0					
ANR	1029243	Identifier	pgs		1029168	1					
ANR	1029244	UnaryOperationExpression	& st_gs_gstate		1029168	1					
ANR	1029245	UnaryOperator	&		1029168	0					
ANR	1029246	Identifier	st_gs_gstate		1029168	1					
ANR	1029247	CompoundStatement		14:76:379:379	1029168	1					
ANR	1029248	ExpressionStatement	pgs = ( gs_gstate * ) penum_s -> pgs	574:12:19863:19895	1029168	0	True				
ANR	1029249	AssignmentExpression	pgs = ( gs_gstate * ) penum_s -> pgs		1029168	0		=			
ANR	1029250	Identifier	pgs		1029168	0					
ANR	1029251	CastExpression	( gs_gstate * ) penum_s -> pgs		1029168	1					
ANR	1029252	CastTarget	gs_gstate *		1029168	0					
ANR	1029253	PtrMemberAccess	penum_s -> pgs		1029168	1					
ANR	1029254	Identifier	penum_s		1029168	0					
ANR	1029255	Identifier	pgs		1029168	1					
ANR	1029256	ElseStatement	else		1029168	0					
ANR	1029257	ExpressionStatement	return_error ( gs_error_undefined )	578:12:19980:20012	1029168	0	True				
ANR	1029258	CallExpression	return_error ( gs_error_undefined )		1029168	0					
ANR	1029259	Callee	return_error		1029168	0					
ANR	1029260	Identifier	return_error		1029168	0					
ANR	1029261	ArgumentList	gs_error_undefined		1029168	1					
ANR	1029262	Argument	gs_error_undefined		1029168	0					
ANR	1029263	Identifier	gs_error_undefined		1029168	0					
ANR	1029264	ExpressionStatement	olh . path = path	580:4:20024:20039	1029168	7	True				
ANR	1029265	AssignmentExpression	olh . path = path		1029168	0		=			
ANR	1029266	MemberAccess	olh . path		1029168	0					
ANR	1029267	Identifier	olh		1029168	0					
ANR	1029268	Identifier	path		1029168	1					
ANR	1029269	Identifier	path		1029168	1					
ANR	1029270	ExpressionStatement	olh . x0 = pgs -> ctm . tx_fixed	581:4:20045:20071	1029168	8	True				
ANR	1029271	AssignmentExpression	olh . x0 = pgs -> ctm . tx_fixed		1029168	0		=			
ANR	1029272	MemberAccess	olh . x0		1029168	0					
ANR	1029273	Identifier	olh		1029168	0					
ANR	1029274	Identifier	x0		1029168	1					
ANR	1029275	MemberAccess	pgs -> ctm . tx_fixed		1029168	1					
ANR	1029276	PtrMemberAccess	pgs -> ctm		1029168	0					
ANR	1029277	Identifier	pgs		1029168	0					
ANR	1029278	Identifier	ctm		1029168	1					
ANR	1029279	Identifier	tx_fixed		1029168	1					
ANR	1029280	ExpressionStatement	olh . y0 = pgs -> ctm . ty_fixed	582:4:20077:20103	1029168	9	True				
ANR	1029281	AssignmentExpression	olh . y0 = pgs -> ctm . ty_fixed		1029168	0		=			
ANR	1029282	MemberAccess	olh . y0		1029168	0					
ANR	1029283	Identifier	olh		1029168	0					
ANR	1029284	Identifier	y0		1029168	1					
ANR	1029285	MemberAccess	pgs -> ctm . ty_fixed		1029168	1					
ANR	1029286	PtrMemberAccess	pgs -> ctm		1029168	0					
ANR	1029287	Identifier	pgs		1029168	0					
ANR	1029288	Identifier	ctm		1029168	1					
ANR	1029289	Identifier	ty_fixed		1029168	1					
ANR	1029290	ExpressionStatement	olh . close_path = close_path	583:4:20109:20136	1029168	10	True				
ANR	1029291	AssignmentExpression	olh . close_path = close_path		1029168	0		=			
ANR	1029292	MemberAccess	olh . close_path		1029168	0					
ANR	1029293	Identifier	olh		1029168	0					
ANR	1029294	Identifier	close_path		1029168	1					
ANR	1029295	Identifier	close_path		1029168	1					
ANR	1029296	ExpressionStatement	olh . need_close = false	584:4:20142:20164	1029168	11	True				
ANR	1029297	AssignmentExpression	olh . need_close = false		1029168	0		=			
ANR	1029298	MemberAccess	olh . need_close		1029168	0					
ANR	1029299	Identifier	olh		1029168	0					
ANR	1029300	Identifier	need_close		1029168	1					
ANR	1029301	Identifier	false		1029168	1					
ANR	1029302	ExpressionStatement	path_interface . olh = & olh	585:4:20170:20195	1029168	12	True				
ANR	1029303	AssignmentExpression	path_interface . olh = & olh		1029168	0		=			
ANR	1029304	MemberAccess	path_interface . olh		1029168	0					
ANR	1029305	Identifier	path_interface		1029168	0					
ANR	1029306	Identifier	olh		1029168	1					
ANR	1029307	UnaryOperationExpression	& olh		1029168	1					
ANR	1029308	UnaryOperator	&		1029168	0					
ANR	1029309	Identifier	olh		1029168	1					
ANR	1029310	ExpressionStatement	path_interface . shift = import_shift_v	586:4:20201:20238	1029168	13	True				
ANR	1029311	AssignmentExpression	path_interface . shift = import_shift_v		1029168	0		=			
ANR	1029312	MemberAccess	path_interface . shift		1029168	0					
ANR	1029313	Identifier	path_interface		1029168	0					
ANR	1029314	Identifier	shift		1029168	1					
ANR	1029315	Identifier	import_shift_v		1029168	1					
ANR	1029316	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> get_char_outline ( I , & path_interface ) ) ) < 0 || path_interface . gs_error != 0 )"		1029168	14					
ANR	1029317	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_char_outline ( I , & path_interface ) ) ) < 0 || path_interface . gs_error != 0"	587:8:20248:20470	1029168	0	True				
ANR	1029318	OrExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_char_outline ( I , & path_interface ) ) ) < 0 || path_interface . gs_error != 0"		1029168	0		||			
ANR	1029319	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_char_outline ( I , & path_interface ) ) ) < 0"		1029168	0		<			
ANR	1029320	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_char_outline ( I , & path_interface ) )"		1029168	0		=			
ANR	1029321	Identifier	code		1029168	0					
ANR	1029322	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_char_outline ( I , & path_interface ) )"		1029168	1					
ANR	1029323	Callee	gs_fapi_renderer_retcode		1029168	0					
ANR	1029324	Identifier	gs_fapi_renderer_retcode		1029168	0					
ANR	1029325	ArgumentList	mem		1029168	1					
ANR	1029326	Argument	mem		1029168	0					
ANR	1029327	Identifier	mem		1029168	0					
ANR	1029328	Argument	I		1029168	1					
ANR	1029329	Identifier	I		1029168	0					
ANR	1029330	Argument	"I -> get_char_outline ( I , & path_interface )"		1029168	2					
ANR	1029331	CallExpression	"I -> get_char_outline ( I , & path_interface )"		1029168	0					
ANR	1029332	Callee	I -> get_char_outline		1029168	0					
ANR	1029333	PtrMemberAccess	I -> get_char_outline		1029168	0					
ANR	1029334	Identifier	I		1029168	0					
ANR	1029335	Identifier	get_char_outline		1029168	1					
ANR	1029336	ArgumentList	I		1029168	1					
ANR	1029337	Argument	I		1029168	0					
ANR	1029338	Identifier	I		1029168	0					
ANR	1029339	Argument	& path_interface		1029168	1					
ANR	1029340	UnaryOperationExpression	& path_interface		1029168	0					
ANR	1029341	UnaryOperator	&		1029168	0					
ANR	1029342	Identifier	path_interface		1029168	1					
ANR	1029343	PrimaryExpression	0		1029168	1					
ANR	1029344	EqualityExpression	path_interface . gs_error != 0		1029168	1		!=			
ANR	1029345	MemberAccess	path_interface . gs_error		1029168	0					
ANR	1029346	Identifier	path_interface		1029168	0					
ANR	1029347	Identifier	gs_error		1029168	1					
ANR	1029348	PrimaryExpression	0		1029168	1					
ANR	1029349	CompoundStatement		32:41:1003:1003	1029168	1					
ANR	1029350	IfStatement	if ( path_interface . gs_error != 0 )		1029168	0					
ANR	1029351	Condition	path_interface . gs_error != 0	592:12:20487:20514	1029168	0	True				
ANR	1029352	EqualityExpression	path_interface . gs_error != 0		1029168	0		!=			
ANR	1029353	MemberAccess	path_interface . gs_error		1029168	0					
ANR	1029354	Identifier	path_interface		1029168	0					
ANR	1029355	Identifier	gs_error		1029168	1					
ANR	1029356	PrimaryExpression	0		1029168	1					
ANR	1029357	ReturnStatement	return path_interface . gs_error ;	593:12:20529:20559	1029168	1	True				
ANR	1029358	MemberAccess	path_interface . gs_error		1029168	0					
ANR	1029359	Identifier	path_interface		1029168	0					
ANR	1029360	Identifier	gs_error		1029168	1					
ANR	1029361	ElseStatement	else		1029168	0					
ANR	1029362	ReturnStatement	return code ;	595:12:20586:20597	1029168	0	True				
ANR	1029363	Identifier	code		1029168	0					
ANR	1029364	IfStatement	if ( olh . need_close && olh . close_path )		1029168	15					
ANR	1029365	Condition	olh . need_close && olh . close_path	597:8:20613:20644	1029168	0	True				
ANR	1029366	AndExpression	olh . need_close && olh . close_path		1029168	0		&&			
ANR	1029367	MemberAccess	olh . need_close		1029168	0					
ANR	1029368	Identifier	olh		1029168	0					
ANR	1029369	Identifier	need_close		1029168	1					
ANR	1029370	MemberAccess	olh . close_path		1029168	1					
ANR	1029371	Identifier	olh		1029168	0					
ANR	1029372	Identifier	close_path		1029168	1					
ANR	1029373	IfStatement	if ( ( code = add_closepath ( & path_interface ) ) < 0 )		1029168	1					
ANR	1029374	Condition	( code = add_closepath ( & path_interface ) ) < 0	598:12:20659:20701	1029168	0	True				
ANR	1029375	RelationalExpression	( code = add_closepath ( & path_interface ) ) < 0		1029168	0		<			
ANR	1029376	AssignmentExpression	code = add_closepath ( & path_interface )		1029168	0		=			
ANR	1029377	Identifier	code		1029168	0					
ANR	1029378	CallExpression	add_closepath ( & path_interface )		1029168	1					
ANR	1029379	Callee	add_closepath		1029168	0					
ANR	1029380	Identifier	add_closepath		1029168	0					
ANR	1029381	ArgumentList	& path_interface		1029168	1					
ANR	1029382	Argument	& path_interface		1029168	0					
ANR	1029383	UnaryOperationExpression	& path_interface		1029168	0					
ANR	1029384	UnaryOperator	&		1029168	0					
ANR	1029385	Identifier	path_interface		1029168	1					
ANR	1029386	PrimaryExpression	0		1029168	1					
ANR	1029387	ReturnStatement	return code ;	599:12:20716:20727	1029168	1	True				
ANR	1029388	Identifier	code		1029168	0					
ANR	1029389	ReturnStatement	return 0 ;	600:4:20733:20741	1029168	16	True				
ANR	1029390	PrimaryExpression	0		1029168	0					
ANR	1029391	ReturnType	static int		1029168	1					
ANR	1029392	Identifier	outline_char		1029168	2					
ANR	1029393	ParameterList	"gs_memory_t * mem , gs_fapi_server * I , int import_shift_v , gs_show_enum * penum_s , struct gx_path_s * path , bool close_path"		1029168	3					
ANR	1029394	Parameter	gs_memory_t * mem	558:13:19335:19350	1029168	0	True				
ANR	1029395	ParameterType	gs_memory_t *		1029168	0					
ANR	1029396	Identifier	mem		1029168	1					
ANR	1029397	Parameter	gs_fapi_server * I	558:31:19353:19369	1029168	1	True				
ANR	1029398	ParameterType	gs_fapi_server *		1029168	0					
ANR	1029399	Identifier	I		1029168	1					
ANR	1029400	Parameter	int import_shift_v	558:50:19372:19389	1029168	2	True				
ANR	1029401	ParameterType	int		1029168	0					
ANR	1029402	Identifier	import_shift_v		1029168	1					
ANR	1029403	Parameter	gs_show_enum * penum_s	559:13:19405:19425	1029168	3	True				
ANR	1029404	ParameterType	gs_show_enum *		1029168	0					
ANR	1029405	Identifier	penum_s		1029168	1					
ANR	1029406	Parameter	struct gx_path_s * path	559:36:19428:19449	1029168	4	True				
ANR	1029407	ParameterType	struct gx_path_s *		1029168	0					
ANR	1029408	Identifier	path		1029168	1					
ANR	1029409	Parameter	bool close_path	559:60:19452:19466	1029168	5	True				
ANR	1029410	ParameterType	bool		1029168	0					
ANR	1029411	Identifier	close_path		1029168	1					
ANR	1029412	CFGEntryNode	ENTRY		1029168		True				
ANR	1029413	CFGExitNode	EXIT		1029168		True				
ANR	1029414	Symbol	olh . path		1029168						
ANR	1029415	Symbol	code		1029168						
ANR	1029416	Symbol	st_gs_gstate		1029168						
ANR	1029417	Symbol	gs_object_type		1029168						
ANR	1029418	Symbol	* pgs		1029168						
ANR	1029419	Symbol	& path_interface		1029168						
ANR	1029420	Symbol	gs_error_undefined		1029168						
ANR	1029421	Symbol	I		1029168						
ANR	1029422	Symbol	& st_gs_show_enum		1029168						
ANR	1029423	Symbol	olh . y0		1029168						
ANR	1029424	Symbol	path_interface . shift		1029168						
ANR	1029425	Symbol	path		1029168						
ANR	1029426	Symbol	close_path		1029168						
ANR	1029427	Symbol	pgs -> ctm . tx_fixed		1029168						
ANR	1029428	Symbol	* I		1029168						
ANR	1029429	Symbol	mem		1029168						
ANR	1029430	Symbol	path_interface		1029168						
ANR	1029431	Symbol	add_closepath		1029168						
ANR	1029432	Symbol	& olh		1029168						
ANR	1029433	Symbol	* penum_s		1029168						
ANR	1029434	Symbol	import_shift_v		1029168						
ANR	1029435	Symbol	path_interface_stub		1029168						
ANR	1029436	Symbol	pgs		1029168						
ANR	1029437	Symbol	I -> get_char_outline		1029168						
ANR	1029438	Symbol	path_interface . gs_error		1029168						
ANR	1029439	Symbol	st_gs_show_enum		1029168						
ANR	1029440	Symbol	penum_s -> memory		1029168						
ANR	1029441	Symbol	false		1029168						
ANR	1029442	Symbol	olh		1029168						
ANR	1029443	Symbol	olh . x0		1029168						
ANR	1029444	Symbol	pgs -> ctm		1029168						
ANR	1029445	Symbol	& st_gs_gstate		1029168						
ANR	1029446	Symbol	gs_fapi_renderer_retcode		1029168						
ANR	1029447	Symbol	pgs -> ctm . ty_fixed		1029168						
ANR	1029448	Symbol	olh . need_close		1029168						
ANR	1029449	Symbol	penum_s -> pgs		1029168						
ANR	1029450	Symbol	olh . close_path		1029168						
ANR	1029451	Symbol	path_interface . olh		1029168						
ANR	1029452	Symbol	penum_s		1029168						
ANR	1029453	Function	compute_em_scale	603:0:20746:21872							
ANR	1029454	FunctionDef	"compute_em_scale (const gs_font_base * pbfont , gs_fapi_metrics * metrics , double FontMatrix_div , double * em_scale_x , double * em_scale_y)"		1029453	0					
ANR	1029455	CompoundStatement		607:0:20926:21872	1029453	0					
ANR	1029456	IdentifierDeclStatement	gs_matrix mat ;	608:4:21015:21028	1029453	0	True				
ANR	1029457	IdentifierDecl	mat		1029453	0					
ANR	1029458	IdentifierDeclType	gs_matrix		1029453	0					
ANR	1029459	Identifier	mat		1029453	1					
ANR	1029460	IdentifierDeclStatement	gs_matrix * m = & mat ;	609:4:21034:21053	1029453	1	True				
ANR	1029461	IdentifierDecl	* m = & mat		1029453	0					
ANR	1029462	IdentifierDeclType	gs_matrix *		1029453	0					
ANR	1029463	Identifier	m		1029453	1					
ANR	1029464	AssignmentExpression	* m = & mat		1029453	2		=			
ANR	1029465	Identifier	m		1029453	0					
ANR	1029466	UnaryOperationExpression	& mat		1029453	1					
ANR	1029467	UnaryOperator	&		1029453	0					
ANR	1029468	Identifier	mat		1029453	1					
ANR	1029469	IdentifierDeclStatement	"int rounding_x , rounding_y ;"	610:4:21059:21085	1029453	2	True				
ANR	1029470	IdentifierDecl	rounding_x		1029453	0					
ANR	1029471	IdentifierDeclType	int		1029453	0					
ANR	1029472	Identifier	rounding_x		1029453	1					
ANR	1029473	IdentifierDecl	rounding_y		1029453	1					
ANR	1029474	IdentifierDeclType	int		1029453	0					
ANR	1029475	Identifier	rounding_y		1029453	1					
ANR	1029476	IdentifierDeclStatement	"double sx , sy ;"	611:4:21158:21171	1029453	3	True				
ANR	1029477	IdentifierDecl	sx		1029453	0					
ANR	1029478	IdentifierDeclType	double		1029453	0					
ANR	1029479	Identifier	sx		1029453	1					
ANR	1029480	IdentifierDecl	sy		1029453	1					
ANR	1029481	IdentifierDeclType	double		1029453	0					
ANR	1029482	Identifier	sy		1029453	1					
ANR	1029483	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	612:4:21177:21209	1029453	4	True				
ANR	1029484	IdentifierDecl	* I = pbfont -> FAPI		1029453	0					
ANR	1029485	IdentifierDeclType	gs_fapi_server *		1029453	0					
ANR	1029486	Identifier	I		1029453	1					
ANR	1029487	AssignmentExpression	* I = pbfont -> FAPI		1029453	2		=			
ANR	1029488	Identifier	I		1029453	0					
ANR	1029489	PtrMemberAccess	pbfont -> FAPI		1029453	1					
ANR	1029490	Identifier	pbfont		1029453	0					
ANR	1029491	Identifier	FAPI		1029453	1					
ANR	1029492	ExpressionStatement	"I -> get_fontmatrix ( I , m )"	615:4:21222:21245	1029453	5	True				
ANR	1029493	CallExpression	"I -> get_fontmatrix ( I , m )"		1029453	0					
ANR	1029494	Callee	I -> get_fontmatrix		1029453	0					
ANR	1029495	PtrMemberAccess	I -> get_fontmatrix		1029453	0					
ANR	1029496	Identifier	I		1029453	0					
ANR	1029497	Identifier	get_fontmatrix		1029453	1					
ANR	1029498	ArgumentList	I		1029453	1					
ANR	1029499	Argument	I		1029453	0					
ANR	1029500	Identifier	I		1029453	0					
ANR	1029501	Argument	m		1029453	1					
ANR	1029502	Identifier	m		1029453	0					
ANR	1029503	IfStatement	if ( m -> xx == 0 && m -> xy == 0 && m -> yx == 0 && m -> yy == 0 )		1029453	6					
ANR	1029504	Condition	m -> xx == 0 && m -> xy == 0 && m -> yx == 0 && m -> yy == 0	622:8:21433:21484	1029453	0	True				
ANR	1029505	AndExpression	m -> xx == 0 && m -> xy == 0 && m -> yx == 0 && m -> yy == 0		1029453	0		&&			
ANR	1029506	EqualityExpression	m -> xx == 0		1029453	0		==			
ANR	1029507	PtrMemberAccess	m -> xx		1029453	0					
ANR	1029508	Identifier	m		1029453	0					
ANR	1029509	Identifier	xx		1029453	1					
ANR	1029510	PrimaryExpression	0		1029453	1					
ANR	1029511	AndExpression	m -> xy == 0 && m -> yx == 0 && m -> yy == 0		1029453	1		&&			
ANR	1029512	EqualityExpression	m -> xy == 0		1029453	0		==			
ANR	1029513	PtrMemberAccess	m -> xy		1029453	0					
ANR	1029514	Identifier	m		1029453	0					
ANR	1029515	Identifier	xy		1029453	1					
ANR	1029516	PrimaryExpression	0		1029453	1					
ANR	1029517	AndExpression	m -> yx == 0 && m -> yy == 0		1029453	1		&&			
ANR	1029518	EqualityExpression	m -> yx == 0		1029453	0		==			
ANR	1029519	PtrMemberAccess	m -> yx		1029453	0					
ANR	1029520	Identifier	m		1029453	0					
ANR	1029521	Identifier	yx		1029453	1					
ANR	1029522	PrimaryExpression	0		1029453	1					
ANR	1029523	EqualityExpression	m -> yy == 0		1029453	1		==			
ANR	1029524	PtrMemberAccess	m -> yy		1029453	0					
ANR	1029525	Identifier	m		1029453	0					
ANR	1029526	Identifier	yy		1029453	1					
ANR	1029527	PrimaryExpression	0		1029453	1					
ANR	1029528	ExpressionStatement	m = & pbfont -> base -> FontMatrix	623:8:21495:21524	1029453	1	True				
ANR	1029529	AssignmentExpression	m = & pbfont -> base -> FontMatrix		1029453	0		=			
ANR	1029530	Identifier	m		1029453	0					
ANR	1029531	UnaryOperationExpression	& pbfont -> base -> FontMatrix		1029453	1					
ANR	1029532	UnaryOperator	&		1029453	0					
ANR	1029533	PtrMemberAccess	pbfont -> base -> FontMatrix		1029453	1					
ANR	1029534	PtrMemberAccess	pbfont -> base		1029453	0					
ANR	1029535	Identifier	pbfont		1029453	0					
ANR	1029536	Identifier	base		1029453	1					
ANR	1029537	Identifier	FontMatrix		1029453	1					
ANR	1029538	ExpressionStatement	"sx = hypot ( m -> xx , m -> xy ) * metrics -> em_x / FontMatrix_div"	624:4:21530:21587	1029453	7	True				
ANR	1029539	AssignmentExpression	"sx = hypot ( m -> xx , m -> xy ) * metrics -> em_x / FontMatrix_div"		1029453	0		=			
ANR	1029540	Identifier	sx		1029453	0					
ANR	1029541	MultiplicativeExpression	"hypot ( m -> xx , m -> xy ) * metrics -> em_x / FontMatrix_div"		1029453	1		*			
ANR	1029542	CallExpression	"hypot ( m -> xx , m -> xy )"		1029453	0					
ANR	1029543	Callee	hypot		1029453	0					
ANR	1029544	Identifier	hypot		1029453	0					
ANR	1029545	ArgumentList	m -> xx		1029453	1					
ANR	1029546	Argument	m -> xx		1029453	0					
ANR	1029547	PtrMemberAccess	m -> xx		1029453	0					
ANR	1029548	Identifier	m		1029453	0					
ANR	1029549	Identifier	xx		1029453	1					
ANR	1029550	Argument	m -> xy		1029453	1					
ANR	1029551	PtrMemberAccess	m -> xy		1029453	0					
ANR	1029552	Identifier	m		1029453	0					
ANR	1029553	Identifier	xy		1029453	1					
ANR	1029554	MultiplicativeExpression	metrics -> em_x / FontMatrix_div		1029453	1		/			
ANR	1029555	PtrMemberAccess	metrics -> em_x		1029453	0					
ANR	1029556	Identifier	metrics		1029453	0					
ANR	1029557	Identifier	em_x		1029453	1					
ANR	1029558	Identifier	FontMatrix_div		1029453	1					
ANR	1029559	ExpressionStatement	"sy = hypot ( m -> yx , m -> yy ) * metrics -> em_y / FontMatrix_div"	625:4:21593:21650	1029453	8	True				
ANR	1029560	AssignmentExpression	"sy = hypot ( m -> yx , m -> yy ) * metrics -> em_y / FontMatrix_div"		1029453	0		=			
ANR	1029561	Identifier	sy		1029453	0					
ANR	1029562	MultiplicativeExpression	"hypot ( m -> yx , m -> yy ) * metrics -> em_y / FontMatrix_div"		1029453	1		*			
ANR	1029563	CallExpression	"hypot ( m -> yx , m -> yy )"		1029453	0					
ANR	1029564	Callee	hypot		1029453	0					
ANR	1029565	Identifier	hypot		1029453	0					
ANR	1029566	ArgumentList	m -> yx		1029453	1					
ANR	1029567	Argument	m -> yx		1029453	0					
ANR	1029568	PtrMemberAccess	m -> yx		1029453	0					
ANR	1029569	Identifier	m		1029453	0					
ANR	1029570	Identifier	yx		1029453	1					
ANR	1029571	Argument	m -> yy		1029453	1					
ANR	1029572	PtrMemberAccess	m -> yy		1029453	0					
ANR	1029573	Identifier	m		1029453	0					
ANR	1029574	Identifier	yy		1029453	1					
ANR	1029575	MultiplicativeExpression	metrics -> em_y / FontMatrix_div		1029453	1		/			
ANR	1029576	PtrMemberAccess	metrics -> em_y		1029453	0					
ANR	1029577	Identifier	metrics		1029453	0					
ANR	1029578	Identifier	em_y		1029453	1					
ANR	1029579	Identifier	FontMatrix_div		1029453	1					
ANR	1029580	ExpressionStatement	rounding_x = ( int ) ( 0x00800000 / sx )	626:4:21656:21691	1029453	9	True				
ANR	1029581	AssignmentExpression	rounding_x = ( int ) ( 0x00800000 / sx )		1029453	0		=			
ANR	1029582	Identifier	rounding_x		1029453	0					
ANR	1029583	CastExpression	( int ) ( 0x00800000 / sx )		1029453	1					
ANR	1029584	CastTarget	int		1029453	0					
ANR	1029585	MultiplicativeExpression	0x00800000 / sx		1029453	1		/			
ANR	1029586	PrimaryExpression	0x00800000		1029453	0					
ANR	1029587	Identifier	sx		1029453	1					
ANR	1029588	ExpressionStatement	rounding_y = ( int ) ( 0x00800000 / sy )	627:4:21697:21732	1029453	10	True				
ANR	1029589	AssignmentExpression	rounding_y = ( int ) ( 0x00800000 / sy )		1029453	0		=			
ANR	1029590	Identifier	rounding_y		1029453	0					
ANR	1029591	CastExpression	( int ) ( 0x00800000 / sy )		1029453	1					
ANR	1029592	CastTarget	int		1029453	0					
ANR	1029593	MultiplicativeExpression	0x00800000 / sy		1029453	1		/			
ANR	1029594	PrimaryExpression	0x00800000		1029453	0					
ANR	1029595	Identifier	sy		1029453	1					
ANR	1029596	ExpressionStatement	* em_scale_x = ( int ) ( sx * rounding_x + 0.5 ) / ( double ) rounding_x	628:4:21738:21801	1029453	11	True				
ANR	1029597	AssignmentExpression	* em_scale_x = ( int ) ( sx * rounding_x + 0.5 ) / ( double ) rounding_x		1029453	0		=			
ANR	1029598	UnaryOperationExpression	* em_scale_x		1029453	0					
ANR	1029599	UnaryOperator	*		1029453	0					
ANR	1029600	Identifier	em_scale_x		1029453	1					
ANR	1029601	MultiplicativeExpression	( int ) ( sx * rounding_x + 0.5 ) / ( double ) rounding_x		1029453	1		/			
ANR	1029602	CastExpression	( int ) ( sx * rounding_x + 0.5 )		1029453	0					
ANR	1029603	CastTarget	int		1029453	0					
ANR	1029604	AdditiveExpression	sx * rounding_x + 0.5		1029453	1		+			
ANR	1029605	MultiplicativeExpression	sx * rounding_x		1029453	0		*			
ANR	1029606	Identifier	sx		1029453	0					
ANR	1029607	Identifier	rounding_x		1029453	1					
ANR	1029608	PrimaryExpression	0.5		1029453	1					
ANR	1029609	CastExpression	( double ) rounding_x		1029453	1					
ANR	1029610	CastTarget	double		1029453	0					
ANR	1029611	Identifier	rounding_x		1029453	1					
ANR	1029612	ExpressionStatement	* em_scale_y = ( int ) ( sy * rounding_y + 0.5 ) / ( double ) rounding_y	629:4:21807:21870	1029453	12	True				
ANR	1029613	AssignmentExpression	* em_scale_y = ( int ) ( sy * rounding_y + 0.5 ) / ( double ) rounding_y		1029453	0		=			
ANR	1029614	UnaryOperationExpression	* em_scale_y		1029453	0					
ANR	1029615	UnaryOperator	*		1029453	0					
ANR	1029616	Identifier	em_scale_y		1029453	1					
ANR	1029617	MultiplicativeExpression	( int ) ( sy * rounding_y + 0.5 ) / ( double ) rounding_y		1029453	1		/			
ANR	1029618	CastExpression	( int ) ( sy * rounding_y + 0.5 )		1029453	0					
ANR	1029619	CastTarget	int		1029453	0					
ANR	1029620	AdditiveExpression	sy * rounding_y + 0.5		1029453	1		+			
ANR	1029621	MultiplicativeExpression	sy * rounding_y		1029453	0		*			
ANR	1029622	Identifier	sy		1029453	0					
ANR	1029623	Identifier	rounding_y		1029453	1					
ANR	1029624	PrimaryExpression	0.5		1029453	1					
ANR	1029625	CastExpression	( double ) rounding_y		1029453	1					
ANR	1029626	CastTarget	double		1029453	0					
ANR	1029627	Identifier	rounding_y		1029453	1					
ANR	1029628	ReturnType	static void		1029453	1					
ANR	1029629	Identifier	compute_em_scale		1029453	2					
ANR	1029630	ParameterList	"const gs_font_base * pbfont , gs_fapi_metrics * metrics , double FontMatrix_div , double * em_scale_x , double * em_scale_y"		1029453	3					
ANR	1029631	Parameter	const gs_font_base * pbfont	604:17:20775:20800	1029453	0	True				
ANR	1029632	ParameterType	const gs_font_base *		1029453	0					
ANR	1029633	Identifier	pbfont		1029453	1					
ANR	1029634	Parameter	gs_fapi_metrics * metrics	604:45:20803:20826	1029453	1	True				
ANR	1029635	ParameterType	gs_fapi_metrics *		1029453	0					
ANR	1029636	Identifier	metrics		1029453	1					
ANR	1029637	Parameter	double FontMatrix_div	605:17:20846:20866	1029453	2	True				
ANR	1029638	ParameterType	double		1029453	0					
ANR	1029639	Identifier	FontMatrix_div		1029453	1					
ANR	1029640	Parameter	double * em_scale_x	605:40:20869:20886	1029453	3	True				
ANR	1029641	ParameterType	double *		1029453	0					
ANR	1029642	Identifier	em_scale_x		1029453	1					
ANR	1029643	Parameter	double * em_scale_y	606:17:20906:20923	1029453	4	True				
ANR	1029644	ParameterType	double *		1029453	0					
ANR	1029645	Identifier	em_scale_y		1029453	1					
ANR	1029646	CFGEntryNode	ENTRY		1029453		True				
ANR	1029647	CFGExitNode	EXIT		1029453		True				
ANR	1029648	Symbol	& mat		1029453						
ANR	1029649	Symbol	m -> yx		1029453						
ANR	1029650	Symbol	m -> yy		1029453						
ANR	1029651	Symbol	I		1029453						
ANR	1029652	Symbol	pbfont -> base		1029453						
ANR	1029653	Symbol	FontMatrix_div		1029453						
ANR	1029654	Symbol	* metrics		1029453						
ANR	1029655	Symbol	hypot		1029453						
ANR	1029656	Symbol	rounding_y		1029453						
ANR	1029657	Symbol	rounding_x		1029453						
ANR	1029658	Symbol	* pbfont		1029453						
ANR	1029659	Symbol	mat		1029453						
ANR	1029660	Symbol	metrics -> em_y		1029453						
ANR	1029661	Symbol	m -> xy		1029453						
ANR	1029662	Symbol	sx		1029453						
ANR	1029663	Symbol	pbfont -> FAPI		1029453						
ANR	1029664	Symbol	m -> xx		1029453						
ANR	1029665	Symbol	metrics -> em_x		1029453						
ANR	1029666	Symbol	sy		1029453						
ANR	1029667	Symbol	& pbfont -> base -> FontMatrix		1029453						
ANR	1029668	Symbol	m		1029453						
ANR	1029669	Symbol	* em_scale_y		1029453						
ANR	1029670	Symbol	* em_scale_x		1029453						
ANR	1029671	Symbol	pbfont		1029453						
ANR	1029672	Symbol	* m		1029453						
ANR	1029673	Symbol	metrics		1029453						
ANR	1029674	Symbol	em_scale_x		1029453						
ANR	1029675	Symbol	em_scale_y		1029453						
ANR	1029676	Function	fapi_copy_mono	632:0:21875:23081							
ANR	1029677	FunctionDef	"fapi_copy_mono (gx_device * dev1 , gs_fapi_raster * rast , int dx , int dy)"		1029676	0					
ANR	1029678	CompoundStatement		634:0:21956:23081	1029676	0					
ANR	1029679	IdentifierDeclStatement	"int line_step = bitmap_raster ( rast -> width ) , code ;"	635:4:21962:22010	1029676	0	True				
ANR	1029680	IdentifierDecl	line_step = bitmap_raster ( rast -> width )		1029676	0					
ANR	1029681	IdentifierDeclType	int		1029676	0					
ANR	1029682	Identifier	line_step		1029676	1					
ANR	1029683	AssignmentExpression	line_step = bitmap_raster ( rast -> width )		1029676	2		=			
ANR	1029684	Identifier	line_step		1029676	0					
ANR	1029685	CallExpression	bitmap_raster ( rast -> width )		1029676	1					
ANR	1029686	Callee	bitmap_raster		1029676	0					
ANR	1029687	Identifier	bitmap_raster		1029676	0					
ANR	1029688	ArgumentList	rast -> width		1029676	1					
ANR	1029689	Argument	rast -> width		1029676	0					
ANR	1029690	PtrMemberAccess	rast -> width		1029676	0					
ANR	1029691	Identifier	rast		1029676	0					
ANR	1029692	Identifier	width		1029676	1					
ANR	1029693	IdentifierDecl	code		1029676	1					
ANR	1029694	IdentifierDeclType	int		1029676	0					
ANR	1029695	Identifier	code		1029676	1					
ANR	1029696	IfStatement	if ( rast -> line_step >= line_step )		1029676	1					
ANR	1029697	Condition	rast -> line_step >= line_step	637:8:22021:22048	1029676	0	True				
ANR	1029698	RelationalExpression	rast -> line_step >= line_step		1029676	0		>=			
ANR	1029699	PtrMemberAccess	rast -> line_step		1029676	0					
ANR	1029700	Identifier	rast		1029676	0					
ANR	1029701	Identifier	line_step		1029676	1					
ANR	1029702	Identifier	line_step		1029676	1					
ANR	1029703	CompoundStatement		4:38:94:94	1029676	1					
ANR	1029704	ReturnStatement	"return dev_proc ( dev1 , copy_mono ) ( dev1 , rast -> p , 0 , rast -> line_step , 0 , dx , dy , rast -> width , rast -> height , 0 , 1 ) ;"	638:8:22061:22257	1029676	0	True				
ANR	1029705	CallExpression	"dev_proc ( dev1 , copy_mono ) ( dev1 , rast -> p , 0 , rast -> line_step , 0 , dx , dy , rast -> width , rast -> height , 0 , 1 )"		1029676	0					
ANR	1029706	Callee	"dev_proc ( dev1 , copy_mono )"		1029676	0					
ANR	1029707	CallExpression	"dev_proc ( dev1 , copy_mono )"		1029676	0					
ANR	1029708	Callee	dev_proc		1029676	0					
ANR	1029709	Identifier	dev_proc		1029676	0					
ANR	1029710	ArgumentList	dev1		1029676	1					
ANR	1029711	Argument	dev1		1029676	0					
ANR	1029712	Identifier	dev1		1029676	0					
ANR	1029713	Argument	copy_mono		1029676	1					
ANR	1029714	Identifier	copy_mono		1029676	0					
ANR	1029715	ArgumentList	dev1		1029676	1					
ANR	1029716	Argument	dev1		1029676	0					
ANR	1029717	Identifier	dev1		1029676	0					
ANR	1029718	Argument	rast -> p		1029676	1					
ANR	1029719	PtrMemberAccess	rast -> p		1029676	0					
ANR	1029720	Identifier	rast		1029676	0					
ANR	1029721	Identifier	p		1029676	1					
ANR	1029722	Argument	0		1029676	2					
ANR	1029723	PrimaryExpression	0		1029676	0					
ANR	1029724	Argument	rast -> line_step		1029676	3					
ANR	1029725	PtrMemberAccess	rast -> line_step		1029676	0					
ANR	1029726	Identifier	rast		1029676	0					
ANR	1029727	Identifier	line_step		1029676	1					
ANR	1029728	Argument	0		1029676	4					
ANR	1029729	PrimaryExpression	0		1029676	0					
ANR	1029730	Argument	dx		1029676	5					
ANR	1029731	Identifier	dx		1029676	0					
ANR	1029732	Argument	dy		1029676	6					
ANR	1029733	Identifier	dy		1029676	0					
ANR	1029734	Argument	rast -> width		1029676	7					
ANR	1029735	PtrMemberAccess	rast -> width		1029676	0					
ANR	1029736	Identifier	rast		1029676	0					
ANR	1029737	Identifier	width		1029676	1					
ANR	1029738	Argument	rast -> height		1029676	8					
ANR	1029739	PtrMemberAccess	rast -> height		1029676	0					
ANR	1029740	Identifier	rast		1029676	0					
ANR	1029741	Identifier	height		1029676	1					
ANR	1029742	Argument	0		1029676	9					
ANR	1029743	PrimaryExpression	0		1029676	0					
ANR	1029744	Argument	1		1029676	10					
ANR	1029745	PrimaryExpression	1		1029676	0					
ANR	1029746	ElseStatement	else		1029676	0					
ANR	1029747	CompoundStatement		12:8:545:575	1029676	0					
ANR	1029748	IdentifierDeclStatement	"byte * p = gs_alloc_byte_array ( dev1 -> memory , rast -> height , line_step , ""fapi_copy_mono"" ) ;"	643:8:22368:22492	1029676	0	True				
ANR	1029749	IdentifierDecl	"* p = gs_alloc_byte_array ( dev1 -> memory , rast -> height , line_step , ""fapi_copy_mono"" )"		1029676	0					
ANR	1029750	IdentifierDeclType	byte *		1029676	0					
ANR	1029751	Identifier	p		1029676	1					
ANR	1029752	AssignmentExpression	"* p = gs_alloc_byte_array ( dev1 -> memory , rast -> height , line_step , ""fapi_copy_mono"" )"		1029676	2		=			
ANR	1029753	Identifier	p		1029676	0					
ANR	1029754	CallExpression	"gs_alloc_byte_array ( dev1 -> memory , rast -> height , line_step , ""fapi_copy_mono"" )"		1029676	1					
ANR	1029755	Callee	gs_alloc_byte_array		1029676	0					
ANR	1029756	Identifier	gs_alloc_byte_array		1029676	0					
ANR	1029757	ArgumentList	dev1 -> memory		1029676	1					
ANR	1029758	Argument	dev1 -> memory		1029676	0					
ANR	1029759	PtrMemberAccess	dev1 -> memory		1029676	0					
ANR	1029760	Identifier	dev1		1029676	0					
ANR	1029761	Identifier	memory		1029676	1					
ANR	1029762	Argument	rast -> height		1029676	1					
ANR	1029763	PtrMemberAccess	rast -> height		1029676	0					
ANR	1029764	Identifier	rast		1029676	0					
ANR	1029765	Identifier	height		1029676	1					
ANR	1029766	Argument	line_step		1029676	2					
ANR	1029767	Identifier	line_step		1029676	0					
ANR	1029768	Argument	"""fapi_copy_mono"""		1029676	3					
ANR	1029769	PrimaryExpression	"""fapi_copy_mono"""		1029676	0					
ANR	1029770	IdentifierDeclStatement	"byte * q = p , * r = rast -> p , * pe ;"	645:8:22502:22532	1029676	1	True				
ANR	1029771	IdentifierDecl	* q = p		1029676	0					
ANR	1029772	IdentifierDeclType	byte *		1029676	0					
ANR	1029773	Identifier	q		1029676	1					
ANR	1029774	AssignmentExpression	* q = p		1029676	2		=			
ANR	1029775	Identifier	p		1029676	0					
ANR	1029776	Identifier	p		1029676	1					
ANR	1029777	IdentifierDecl	* r = rast -> p		1029676	1					
ANR	1029778	IdentifierDeclType	byte *		1029676	0					
ANR	1029779	Identifier	r		1029676	1					
ANR	1029780	AssignmentExpression	* r = rast -> p		1029676	2		=			
ANR	1029781	Identifier	r		1029676	0					
ANR	1029782	PtrMemberAccess	rast -> p		1029676	1					
ANR	1029783	Identifier	rast		1029676	0					
ANR	1029784	Identifier	p		1029676	1					
ANR	1029785	IdentifierDecl	* pe		1029676	2					
ANR	1029786	IdentifierDeclType	byte *		1029676	0					
ANR	1029787	Identifier	pe		1029676	1					
ANR	1029788	IfStatement	if ( p == NULL )		1029676	2					
ANR	1029789	Condition	p == NULL	647:12:22547:22555	1029676	0	True				
ANR	1029790	EqualityExpression	p == NULL		1029676	0		==			
ANR	1029791	Identifier	p		1029676	0					
ANR	1029792	Identifier	NULL		1029676	1					
ANR	1029793	ExpressionStatement	return_error ( gs_error_VMerror )	648:12:22570:22600	1029676	1	True				
ANR	1029794	CallExpression	return_error ( gs_error_VMerror )		1029676	0					
ANR	1029795	Callee	return_error		1029676	0					
ANR	1029796	Identifier	return_error		1029676	0					
ANR	1029797	ArgumentList	gs_error_VMerror		1029676	1					
ANR	1029798	Argument	gs_error_VMerror		1029676	0					
ANR	1029799	Identifier	gs_error_VMerror		1029676	0					
ANR	1029800	ExpressionStatement	pe = p + rast -> height * line_step	649:8:22610:22643	1029676	3	True				
ANR	1029801	AssignmentExpression	pe = p + rast -> height * line_step		1029676	0		=			
ANR	1029802	Identifier	pe		1029676	0					
ANR	1029803	AdditiveExpression	p + rast -> height * line_step		1029676	1		+			
ANR	1029804	Identifier	p		1029676	0					
ANR	1029805	MultiplicativeExpression	rast -> height * line_step		1029676	1		*			
ANR	1029806	PtrMemberAccess	rast -> height		1029676	0					
ANR	1029807	Identifier	rast		1029676	0					
ANR	1029808	Identifier	height		1029676	1					
ANR	1029809	Identifier	line_step		1029676	1					
ANR	1029810	ForStatement	"for ( ; q < pe ; q += line_step , r += rast -> line_step )"		1029676	4					
ANR	1029811	Condition	q < pe	650:15:22660:22665	1029676	0	True				
ANR	1029812	RelationalExpression	q < pe		1029676	0		<			
ANR	1029813	Identifier	q		1029676	0					
ANR	1029814	Identifier	pe		1029676	1					
ANR	1029815	Expression	"q += line_step , r += rast -> line_step"	650:23:22668:22703	1029676	1	True				
ANR	1029816	AssignmentExpression	q += line_step		1029676	0		+=			
ANR	1029817	Identifier	q		1029676	0					
ANR	1029818	Identifier	line_step		1029676	1					
ANR	1029819	AssignmentExpression	r += rast -> line_step		1029676	1		+=			
ANR	1029820	Identifier	r		1029676	0					
ANR	1029821	PtrMemberAccess	rast -> line_step		1029676	1					
ANR	1029822	Identifier	rast		1029676	0					
ANR	1029823	Identifier	line_step		1029676	1					
ANR	1029824	CompoundStatement		17:61:749:749	1029676	2					
ANR	1029825	ExpressionStatement	"memcpy ( q , r , rast -> line_step )"	651:12:22720:22749	1029676	0	True				
ANR	1029826	CallExpression	"memcpy ( q , r , rast -> line_step )"		1029676	0					
ANR	1029827	Callee	memcpy		1029676	0					
ANR	1029828	Identifier	memcpy		1029676	0					
ANR	1029829	ArgumentList	q		1029676	1					
ANR	1029830	Argument	q		1029676	0					
ANR	1029831	Identifier	q		1029676	0					
ANR	1029832	Argument	r		1029676	1					
ANR	1029833	Identifier	r		1029676	0					
ANR	1029834	Argument	rast -> line_step		1029676	2					
ANR	1029835	PtrMemberAccess	rast -> line_step		1029676	0					
ANR	1029836	Identifier	rast		1029676	0					
ANR	1029837	Identifier	line_step		1029676	1					
ANR	1029838	ExpressionStatement	"memset ( q + rast -> line_step , 0 , line_step - rast -> line_step )"	652:12:22763:22822	1029676	1	True				
ANR	1029839	CallExpression	"memset ( q + rast -> line_step , 0 , line_step - rast -> line_step )"		1029676	0					
ANR	1029840	Callee	memset		1029676	0					
ANR	1029841	Identifier	memset		1029676	0					
ANR	1029842	ArgumentList	q + rast -> line_step		1029676	1					
ANR	1029843	Argument	q + rast -> line_step		1029676	0					
ANR	1029844	AdditiveExpression	q + rast -> line_step		1029676	0		+			
ANR	1029845	Identifier	q		1029676	0					
ANR	1029846	PtrMemberAccess	rast -> line_step		1029676	1					
ANR	1029847	Identifier	rast		1029676	0					
ANR	1029848	Identifier	line_step		1029676	1					
ANR	1029849	Argument	0		1029676	1					
ANR	1029850	PrimaryExpression	0		1029676	0					
ANR	1029851	Argument	line_step - rast -> line_step		1029676	2					
ANR	1029852	AdditiveExpression	line_step - rast -> line_step		1029676	0		-			
ANR	1029853	Identifier	line_step		1029676	0					
ANR	1029854	PtrMemberAccess	rast -> line_step		1029676	1					
ANR	1029855	Identifier	rast		1029676	0					
ANR	1029856	Identifier	line_step		1029676	1					
ANR	1029857	ExpressionStatement	"code = dev_proc ( dev1 , copy_mono ) ( dev1 , p , 0 , line_step , 0 , dx , dy , rast -> width , rast -> height , 0 , 1 )"	654:8:22842:22993	1029676	5	True				
ANR	1029858	AssignmentExpression	"code = dev_proc ( dev1 , copy_mono ) ( dev1 , p , 0 , line_step , 0 , dx , dy , rast -> width , rast -> height , 0 , 1 )"		1029676	0		=			
ANR	1029859	Identifier	code		1029676	0					
ANR	1029860	CallExpression	"dev_proc ( dev1 , copy_mono ) ( dev1 , p , 0 , line_step , 0 , dx , dy , rast -> width , rast -> height , 0 , 1 )"		1029676	1					
ANR	1029861	Callee	"dev_proc ( dev1 , copy_mono )"		1029676	0					
ANR	1029862	CallExpression	"dev_proc ( dev1 , copy_mono )"		1029676	0					
ANR	1029863	Callee	dev_proc		1029676	0					
ANR	1029864	Identifier	dev_proc		1029676	0					
ANR	1029865	ArgumentList	dev1		1029676	1					
ANR	1029866	Argument	dev1		1029676	0					
ANR	1029867	Identifier	dev1		1029676	0					
ANR	1029868	Argument	copy_mono		1029676	1					
ANR	1029869	Identifier	copy_mono		1029676	0					
ANR	1029870	ArgumentList	dev1		1029676	1					
ANR	1029871	Argument	dev1		1029676	0					
ANR	1029872	Identifier	dev1		1029676	0					
ANR	1029873	Argument	p		1029676	1					
ANR	1029874	Identifier	p		1029676	0					
ANR	1029875	Argument	0		1029676	2					
ANR	1029876	PrimaryExpression	0		1029676	0					
ANR	1029877	Argument	line_step		1029676	3					
ANR	1029878	Identifier	line_step		1029676	0					
ANR	1029879	Argument	0		1029676	4					
ANR	1029880	PrimaryExpression	0		1029676	0					
ANR	1029881	Argument	dx		1029676	5					
ANR	1029882	Identifier	dx		1029676	0					
ANR	1029883	Argument	dy		1029676	6					
ANR	1029884	Identifier	dy		1029676	0					
ANR	1029885	Argument	rast -> width		1029676	7					
ANR	1029886	PtrMemberAccess	rast -> width		1029676	0					
ANR	1029887	Identifier	rast		1029676	0					
ANR	1029888	Identifier	width		1029676	1					
ANR	1029889	Argument	rast -> height		1029676	8					
ANR	1029890	PtrMemberAccess	rast -> height		1029676	0					
ANR	1029891	Identifier	rast		1029676	0					
ANR	1029892	Identifier	height		1029676	1					
ANR	1029893	Argument	0		1029676	9					
ANR	1029894	PrimaryExpression	0		1029676	0					
ANR	1029895	Argument	1		1029676	10					
ANR	1029896	PrimaryExpression	1		1029676	0					
ANR	1029897	ExpressionStatement	"gs_free_object ( dev1 -> memory , p , ""fapi_copy_mono"" )"	657:8:23003:23052	1029676	6	True				
ANR	1029898	CallExpression	"gs_free_object ( dev1 -> memory , p , ""fapi_copy_mono"" )"		1029676	0					
ANR	1029899	Callee	gs_free_object		1029676	0					
ANR	1029900	Identifier	gs_free_object		1029676	0					
ANR	1029901	ArgumentList	dev1 -> memory		1029676	1					
ANR	1029902	Argument	dev1 -> memory		1029676	0					
ANR	1029903	PtrMemberAccess	dev1 -> memory		1029676	0					
ANR	1029904	Identifier	dev1		1029676	0					
ANR	1029905	Identifier	memory		1029676	1					
ANR	1029906	Argument	p		1029676	1					
ANR	1029907	Identifier	p		1029676	0					
ANR	1029908	Argument	"""fapi_copy_mono"""		1029676	2					
ANR	1029909	PrimaryExpression	"""fapi_copy_mono"""		1029676	0					
ANR	1029910	ReturnStatement	return code ;	658:8:23062:23073	1029676	7	True				
ANR	1029911	Identifier	code		1029676	0					
ANR	1029912	ReturnType	static int		1029676	1					
ANR	1029913	Identifier	fapi_copy_mono		1029676	2					
ANR	1029914	ParameterList	"gx_device * dev1 , gs_fapi_raster * rast , int dx , int dy"		1029676	3					
ANR	1029915	Parameter	gx_device * dev1	633:15:21901:21915	1029676	0	True				
ANR	1029916	ParameterType	gx_device *		1029676	0					
ANR	1029917	Identifier	dev1		1029676	1					
ANR	1029918	Parameter	gs_fapi_raster * rast	633:32:21918:21937	1029676	1	True				
ANR	1029919	ParameterType	gs_fapi_raster *		1029676	0					
ANR	1029920	Identifier	rast		1029676	1					
ANR	1029921	Parameter	int dx	633:54:21940:21945	1029676	2	True				
ANR	1029922	ParameterType	int		1029676	0					
ANR	1029923	Identifier	dx		1029676	1					
ANR	1029924	Parameter	int dy	633:62:21948:21953	1029676	3	True				
ANR	1029925	ParameterType	int		1029676	0					
ANR	1029926	Identifier	dy		1029676	1					
ANR	1029927	CFGEntryNode	ENTRY		1029676		True				
ANR	1029928	CFGExitNode	EXIT		1029676		True				
ANR	1029929	Symbol	rast -> line_step		1029676						
ANR	1029930	Symbol	code		1029676						
ANR	1029931	Symbol	NULL		1029676						
ANR	1029932	Symbol	rast		1029676						
ANR	1029933	Symbol	* rast		1029676						
ANR	1029934	Symbol	line_step		1029676						
ANR	1029935	Symbol	dev1 -> memory		1029676						
ANR	1029936	Symbol	rast -> width		1029676						
ANR	1029937	Symbol	bitmap_raster		1029676						
ANR	1029938	Symbol	* dev1		1029676						
ANR	1029939	Symbol	rast -> height		1029676						
ANR	1029940	Symbol	p		1029676						
ANR	1029941	Symbol	q		1029676						
ANR	1029942	Symbol	gs_error_VMerror		1029676						
ANR	1029943	Symbol	dev1		1029676						
ANR	1029944	Symbol	r		1029676						
ANR	1029945	Symbol	rast -> p		1029676						
ANR	1029946	Symbol	dx		1029676						
ANR	1029947	Symbol	dy		1029676						
ANR	1029948	Symbol	pe		1029676						
ANR	1029949	Symbol	dev_proc		1029676						
ANR	1029950	Symbol	copy_mono		1029676						
ANR	1029951	Symbol	gs_alloc_byte_array		1029676						
ANR	1029952	Function	alloc_bold_lines	672:0:23600:23814							
ANR	1029953	FunctionDef	"alloc_bold_lines (gs_memory_t * mem , uint width , int bold , client_name_t cname)"		1029952	0					
ANR	1029954	CompoundStatement		674:0:23692:23814	1029952	0					
ANR	1029955	ReturnStatement	"return gs_alloc_byte_array ( mem , 2 + bold , bitmap_raster ( width + bold ) , cname ) ;"	674:7:23700:23812	1029952	0	True				
ANR	1029956	CallExpression	"gs_alloc_byte_array ( mem , 2 + bold , bitmap_raster ( width + bold ) , cname )"		1029952	0					
ANR	1029957	Callee	gs_alloc_byte_array		1029952	0					
ANR	1029958	Identifier	gs_alloc_byte_array		1029952	0					
ANR	1029959	ArgumentList	mem		1029952	1					
ANR	1029960	Argument	mem		1029952	0					
ANR	1029961	Identifier	mem		1029952	0					
ANR	1029962	Argument	2 + bold		1029952	1					
ANR	1029963	AdditiveExpression	2 + bold		1029952	0		+			
ANR	1029964	PrimaryExpression	2		1029952	0					
ANR	1029965	Identifier	bold		1029952	1					
ANR	1029966	Argument	bitmap_raster ( width + bold )		1029952	2					
ANR	1029967	CallExpression	bitmap_raster ( width + bold )		1029952	0					
ANR	1029968	Callee	bitmap_raster		1029952	0					
ANR	1029969	Identifier	bitmap_raster		1029952	0					
ANR	1029970	ArgumentList	width + bold		1029952	1					
ANR	1029971	Argument	width + bold		1029952	0					
ANR	1029972	AdditiveExpression	width + bold		1029952	0		+			
ANR	1029973	Identifier	width		1029952	0					
ANR	1029974	Identifier	bold		1029952	1					
ANR	1029975	Argument	cname		1029952	3					
ANR	1029976	Identifier	cname		1029952	0					
ANR	1029977	ReturnType	static byte *		1029952	1					
ANR	1029978	Identifier	alloc_bold_lines		1029952	2					
ANR	1029979	ParameterList	"gs_memory_t * mem , uint width , int bold , client_name_t cname"		1029952	3					
ANR	1029980	Parameter	gs_memory_t * mem	673:17:23631:23646	1029952	0	True				
ANR	1029981	ParameterType	gs_memory_t *		1029952	0					
ANR	1029982	Identifier	mem		1029952	1					
ANR	1029983	Parameter	uint width	673:35:23649:23658	1029952	1	True				
ANR	1029984	ParameterType	uint		1029952	0					
ANR	1029985	Identifier	width		1029952	1					
ANR	1029986	Parameter	int bold	673:47:23661:23668	1029952	2	True				
ANR	1029987	ParameterType	int		1029952	0					
ANR	1029988	Identifier	bold		1029952	1					
ANR	1029989	Parameter	client_name_t cname	673:57:23671:23689	1029952	3	True				
ANR	1029990	ParameterType	client_name_t		1029952	0					
ANR	1029991	Identifier	cname		1029952	1					
ANR	1029992	CFGEntryNode	ENTRY		1029952		True				
ANR	1029993	CFGExitNode	EXIT		1029952		True				
ANR	1029994	Symbol	mem		1029952						
ANR	1029995	Symbol	width		1029952						
ANR	1029996	Symbol	cname		1029952						
ANR	1029997	Symbol	bold		1029952						
ANR	1029998	Symbol	gs_alloc_byte_array		1029952						
ANR	1029999	Symbol	bitmap_raster		1029952						
ANR	1030000	Function	bits_merge	679:0:23890:24288							
ANR	1030001	FunctionDef	"bits_merge (byte * dest , const byte * src , uint nbytes)"		1030000	0					
ANR	1030002	CompoundStatement		681:0:23955:24288	1030000	0					
ANR	1030003	IdentifierDeclStatement	long * dp = ( long * ) dest ;	681:7:23963:23986	1030000	0	True				
ANR	1030004	IdentifierDecl	* dp = ( long * ) dest		1030000	0					
ANR	1030005	IdentifierDeclType	long *		1030000	0					
ANR	1030006	Identifier	dp		1030000	1					
ANR	1030007	AssignmentExpression	* dp = ( long * ) dest		1030000	2		=			
ANR	1030008	Identifier	dp		1030000	0					
ANR	1030009	CastExpression	( long * ) dest		1030000	1					
ANR	1030010	CastTarget	long *		1030000	0					
ANR	1030011	Identifier	dest		1030000	1					
ANR	1030012	IdentifierDeclStatement	const long * sp = ( const long * ) src ;	682:8:23996:24030	1030000	1	True				
ANR	1030013	IdentifierDecl	* sp = ( const long * ) src		1030000	0					
ANR	1030014	IdentifierDeclType	const long *		1030000	0					
ANR	1030015	Identifier	sp		1030000	1					
ANR	1030016	AssignmentExpression	* sp = ( const long * ) src		1030000	2		=			
ANR	1030017	Identifier	sp		1030000	0					
ANR	1030018	CastExpression	( const long * ) src		1030000	1					
ANR	1030019	CastTarget	const long *		1030000	0					
ANR	1030020	Identifier	src		1030000	1					
ANR	1030021	IdentifierDeclStatement	uint n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG ;	683:8:24040:24101	1030000	2	True				
ANR	1030022	IdentifierDecl	n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		1030000	0					
ANR	1030023	IdentifierDeclType	uint		1030000	0					
ANR	1030024	Identifier	n		1030000	1					
ANR	1030025	AssignmentExpression	n = ( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		1030000	2		=			
ANR	1030026	Identifier	n		1030000	0					
ANR	1030027	ShiftExpression	( nbytes + sizeof ( long ) - 1 ) >> ARCH_LOG2_SIZEOF_LONG		1030000	1		>>			
ANR	1030028	AdditiveExpression	nbytes + sizeof ( long ) - 1		1030000	0		+			
ANR	1030029	Identifier	nbytes		1030000	0					
ANR	1030030	AdditiveExpression	sizeof ( long ) - 1		1030000	1		-			
ANR	1030031	SizeofExpression	sizeof ( long )		1030000	0					
ANR	1030032	Sizeof	sizeof		1030000	0					
ANR	1030033	SizeofOperand	long		1030000	1					
ANR	1030034	PrimaryExpression	1		1030000	1					
ANR	1030035	Identifier	ARCH_LOG2_SIZEOF_LONG		1030000	1					
ANR	1030036	ForStatement	"for ( ; n >= 4 ; sp += 4 , dp += 4 , n -= 4 )"		1030000	3					
ANR	1030037	Condition	n >= 4	685:16:24120:24125	1030000	0	True				
ANR	1030038	RelationalExpression	n >= 4		1030000	0		>=			
ANR	1030039	Identifier	n		1030000	0					
ANR	1030040	PrimaryExpression	4		1030000	1					
ANR	1030041	Expression	"sp += 4 , dp += 4 , n -= 4"	685:24:24128:24151	1030000	1	True				
ANR	1030042	AssignmentExpression	sp += 4		1030000	0		+=			
ANR	1030043	Identifier	sp		1030000	0					
ANR	1030044	PrimaryExpression	4		1030000	1					
ANR	1030045	Expression	"dp += 4 , n -= 4"		1030000	1					
ANR	1030046	AssignmentExpression	dp += 4		1030000	0		+=			
ANR	1030047	Identifier	dp		1030000	0					
ANR	1030048	PrimaryExpression	4		1030000	1					
ANR	1030049	AssignmentExpression	n -= 4		1030000	1		-=			
ANR	1030050	Identifier	n		1030000	0					
ANR	1030051	PrimaryExpression	4		1030000	1					
ANR	1030052	ExpressionStatement	"dp [ 0 ] |= sp [ 0 ] , dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"	686:10:24165:24227	1030000	2	True				
ANR	1030053	Expression	"dp [ 0 ] |= sp [ 0 ] , dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		1030000	0					
ANR	1030054	AssignmentExpression	dp [ 0 ] |= sp [ 0 ]		1030000	0		|=			
ANR	1030055	ArrayIndexing	dp [ 0 ]		1030000	0					
ANR	1030056	Identifier	dp		1030000	0					
ANR	1030057	PrimaryExpression	0		1030000	1					
ANR	1030058	ArrayIndexing	sp [ 0 ]		1030000	1					
ANR	1030059	Identifier	sp		1030000	0					
ANR	1030060	PrimaryExpression	0		1030000	1					
ANR	1030061	Expression	"dp [ 1 ] |= sp [ 1 ] , dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		1030000	1					
ANR	1030062	AssignmentExpression	dp [ 1 ] |= sp [ 1 ]		1030000	0		|=			
ANR	1030063	ArrayIndexing	dp [ 1 ]		1030000	0					
ANR	1030064	Identifier	dp		1030000	0					
ANR	1030065	PrimaryExpression	1		1030000	1					
ANR	1030066	ArrayIndexing	sp [ 1 ]		1030000	1					
ANR	1030067	Identifier	sp		1030000	0					
ANR	1030068	PrimaryExpression	1		1030000	1					
ANR	1030069	Expression	"dp [ 2 ] |= sp [ 2 ] , dp [ 3 ] |= sp [ 3 ]"		1030000	1					
ANR	1030070	AssignmentExpression	dp [ 2 ] |= sp [ 2 ]		1030000	0		|=			
ANR	1030071	ArrayIndexing	dp [ 2 ]		1030000	0					
ANR	1030072	Identifier	dp		1030000	0					
ANR	1030073	PrimaryExpression	2		1030000	1					
ANR	1030074	ArrayIndexing	sp [ 2 ]		1030000	1					
ANR	1030075	Identifier	sp		1030000	0					
ANR	1030076	PrimaryExpression	2		1030000	1					
ANR	1030077	AssignmentExpression	dp [ 3 ] |= sp [ 3 ]		1030000	1		|=			
ANR	1030078	ArrayIndexing	dp [ 3 ]		1030000	0					
ANR	1030079	Identifier	dp		1030000	0					
ANR	1030080	PrimaryExpression	3		1030000	1					
ANR	1030081	ArrayIndexing	sp [ 3 ]		1030000	1					
ANR	1030082	Identifier	sp		1030000	0					
ANR	1030083	PrimaryExpression	3		1030000	1					
ANR	1030084	ForStatement	"for ( ; n ; ++ sp , ++ dp , -- n )"		1030000	4					
ANR	1030085	Condition	n	687:16:24245:24245	1030000	0	True				
ANR	1030086	Identifier	n		1030000	0					
ANR	1030087	Expression	"++ sp , ++ dp , -- n"	687:19:24248:24262	1030000	1	True				
ANR	1030088	UnaryExpression	++ sp		1030000	0					
ANR	1030089	IncDec	++		1030000	0					
ANR	1030090	Identifier	sp		1030000	1					
ANR	1030091	Expression	"++ dp , -- n"		1030000	1					
ANR	1030092	UnaryExpression	++ dp		1030000	0					
ANR	1030093	IncDec	++		1030000	0					
ANR	1030094	Identifier	dp		1030000	1					
ANR	1030095	UnaryExpression	-- n		1030000	1					
ANR	1030096	IncDec	--		1030000	0					
ANR	1030097	Identifier	n		1030000	1					
ANR	1030098	ExpressionStatement	* dp |= * sp	688:10:24276:24286	1030000	2	True				
ANR	1030099	AssignmentExpression	* dp |= * sp		1030000	0		|=			
ANR	1030100	UnaryOperationExpression	* dp		1030000	0					
ANR	1030101	UnaryOperator	*		1030000	0					
ANR	1030102	Identifier	dp		1030000	1					
ANR	1030103	UnaryOperationExpression	* sp		1030000	1					
ANR	1030104	UnaryOperator	*		1030000	0					
ANR	1030105	Identifier	sp		1030000	1					
ANR	1030106	ReturnType	static void		1030000	1					
ANR	1030107	Identifier	bits_merge		1030000	2					
ANR	1030108	ParameterList	"byte * dest , const byte * src , uint nbytes"		1030000	3					
ANR	1030109	Parameter	byte * dest	680:11:23913:23922	1030000	0	True				
ANR	1030110	ParameterType	byte *		1030000	0					
ANR	1030111	Identifier	dest		1030000	1					
ANR	1030112	Parameter	const byte * src	680:23:23925:23939	1030000	1	True				
ANR	1030113	ParameterType	const byte *		1030000	0					
ANR	1030114	Identifier	src		1030000	1					
ANR	1030115	Parameter	uint nbytes	680:40:23942:23952	1030000	2	True				
ANR	1030116	ParameterType	uint		1030000	0					
ANR	1030117	Identifier	nbytes		1030000	1					
ANR	1030118	CFGEntryNode	ENTRY		1030000		True				
ANR	1030119	CFGExitNode	EXIT		1030000		True				
ANR	1030120	Symbol	* sp		1030000						
ANR	1030121	Symbol	* dp		1030000						
ANR	1030122	Symbol	src		1030000						
ANR	1030123	Symbol	dest		1030000						
ANR	1030124	Symbol	dp		1030000						
ANR	1030125	Symbol	sp		1030000						
ANR	1030126	Symbol	n		1030000						
ANR	1030127	Symbol	ARCH_LOG2_SIZEOF_LONG		1030000						
ANR	1030128	Symbol	nbytes		1030000						
ANR	1030129	Function	bits_smear_horizontally	693:0:24421:26929							
ANR	1030130	FunctionDef	"bits_smear_horizontally (byte * dest , const byte * src , uint width , uint smear_width)"		1030129	0					
ANR	1030131	CompoundStatement		696:0:24518:26929	1030129	0					
ANR	1030132	IdentifierDeclStatement	uint bits_on = 0 ;	696:7:24526:24542	1030129	0	True				
ANR	1030133	IdentifierDecl	bits_on = 0		1030129	0					
ANR	1030134	IdentifierDeclType	uint		1030129	0					
ANR	1030135	Identifier	bits_on		1030129	1					
ANR	1030136	AssignmentExpression	bits_on = 0		1030129	2		=			
ANR	1030137	Identifier	bits_on		1030129	0					
ANR	1030138	PrimaryExpression	0		1030129	1					
ANR	1030139	IdentifierDeclStatement	const byte * sp = src ;	697:8:24552:24572	1030129	1	True				
ANR	1030140	IdentifierDecl	* sp = src		1030129	0					
ANR	1030141	IdentifierDeclType	const byte *		1030129	0					
ANR	1030142	Identifier	sp		1030129	1					
ANR	1030143	AssignmentExpression	* sp = src		1030129	2		=			
ANR	1030144	Identifier	src		1030129	0					
ANR	1030145	Identifier	src		1030129	1					
ANR	1030146	IdentifierDeclStatement	uint sbyte = * sp ;	698:8:24582:24598	1030129	2	True				
ANR	1030147	IdentifierDecl	sbyte = * sp		1030129	0					
ANR	1030148	IdentifierDeclType	uint		1030129	0					
ANR	1030149	Identifier	sbyte		1030129	1					
ANR	1030150	AssignmentExpression	sbyte = * sp		1030129	2		=			
ANR	1030151	Identifier	sbyte		1030129	0					
ANR	1030152	UnaryOperationExpression	* sp		1030129	1					
ANR	1030153	UnaryOperator	*		1030129	0					
ANR	1030154	Identifier	sp		1030129	1					
ANR	1030155	IdentifierDeclStatement	byte * dp = dest ;	699:8:24608:24623	1030129	3	True				
ANR	1030156	IdentifierDecl	* dp = dest		1030129	0					
ANR	1030157	IdentifierDeclType	byte *		1030129	0					
ANR	1030158	Identifier	dp		1030129	1					
ANR	1030159	AssignmentExpression	* dp = dest		1030129	2		=			
ANR	1030160	Identifier	dest		1030129	0					
ANR	1030161	Identifier	dest		1030129	1					
ANR	1030162	IdentifierDeclStatement	uint dbyte = sbyte ;	700:8:24633:24651	1030129	4	True				
ANR	1030163	IdentifierDecl	dbyte = sbyte		1030129	0					
ANR	1030164	IdentifierDeclType	uint		1030129	0					
ANR	1030165	Identifier	dbyte		1030129	1					
ANR	1030166	AssignmentExpression	dbyte = sbyte		1030129	2		=			
ANR	1030167	Identifier	sbyte		1030129	0					
ANR	1030168	Identifier	sbyte		1030129	1					
ANR	1030169	IdentifierDeclStatement	uint sdmask = 0x80 ;	701:8:24661:24679	1030129	5	True				
ANR	1030170	IdentifierDecl	sdmask = 0x80		1030129	0					
ANR	1030171	IdentifierDeclType	uint		1030129	0					
ANR	1030172	Identifier	sdmask		1030129	1					
ANR	1030173	AssignmentExpression	sdmask = 0x80		1030129	2		=			
ANR	1030174	Identifier	sdmask		1030129	0					
ANR	1030175	PrimaryExpression	0x80		1030129	1					
ANR	1030176	IdentifierDeclStatement	const byte * zp = src ;	702:8:24689:24709	1030129	6	True				
ANR	1030177	IdentifierDecl	* zp = src		1030129	0					
ANR	1030178	IdentifierDeclType	const byte *		1030129	0					
ANR	1030179	Identifier	zp		1030129	1					
ANR	1030180	AssignmentExpression	* zp = src		1030129	2		=			
ANR	1030181	Identifier	src		1030129	0					
ANR	1030182	Identifier	src		1030129	1					
ANR	1030183	IdentifierDeclStatement	uint zmask = 0x80 ;	703:8:24719:24736	1030129	7	True				
ANR	1030184	IdentifierDecl	zmask = 0x80		1030129	0					
ANR	1030185	IdentifierDeclType	uint		1030129	0					
ANR	1030186	Identifier	zmask		1030129	1					
ANR	1030187	AssignmentExpression	zmask = 0x80		1030129	2		=			
ANR	1030188	Identifier	zmask		1030129	0					
ANR	1030189	PrimaryExpression	0x80		1030129	1					
ANR	1030190	IdentifierDeclStatement	uint i = 0 ;	704:8:24746:24756	1030129	8	True				
ANR	1030191	IdentifierDecl	i = 0		1030129	0					
ANR	1030192	IdentifierDeclType	uint		1030129	0					
ANR	1030193	Identifier	i		1030129	1					
ANR	1030194	AssignmentExpression	i = 0		1030129	2		=			
ANR	1030195	Identifier	i		1030129	0					
ANR	1030196	PrimaryExpression	0		1030129	1					
ANR	1030197	CompoundStatement		12:10:300:335	1030129	9					
ANR	1030198	IdentifierDeclStatement	"uint stop = min ( smear_width , width ) ;"	707:10:24819:24854	1030129	0	True				
ANR	1030199	IdentifierDecl	"stop = min ( smear_width , width )"		1030129	0					
ANR	1030200	IdentifierDeclType	uint		1030129	0					
ANR	1030201	Identifier	stop		1030129	1					
ANR	1030202	AssignmentExpression	"stop = min ( smear_width , width )"		1030129	2		=			
ANR	1030203	Identifier	stop		1030129	0					
ANR	1030204	CallExpression	"min ( smear_width , width )"		1030129	1					
ANR	1030205	Callee	min		1030129	0					
ANR	1030206	Identifier	min		1030129	0					
ANR	1030207	ArgumentList	smear_width		1030129	1					
ANR	1030208	Argument	smear_width		1030129	0					
ANR	1030209	Identifier	smear_width		1030129	0					
ANR	1030210	Argument	width		1030129	1					
ANR	1030211	Identifier	width		1030129	0					
ANR	1030212	ForStatement	for ( ; i < stop ; ++ i )		1030129	1					
ANR	1030213	Condition	i < stop	709:18:24875:24882	1030129	0	True				
ANR	1030214	RelationalExpression	i < stop		1030129	0		<			
ANR	1030215	Identifier	i		1030129	0					
ANR	1030216	Identifier	stop		1030129	1					
ANR	1030217	UnaryExpression	++ i	709:28:24885:24887	1030129	1	True				
ANR	1030218	IncDec	++		1030129	0					
ANR	1030219	Identifier	i		1030129	1					
ANR	1030220	CompoundStatement		14:34:372:372	1030129	2					
ANR	1030221	IfStatement	if ( sbyte & sdmask )		1030129	0					
ANR	1030222	Condition	sbyte & sdmask	710:17:24910:24923	1030129	0	True				
ANR	1030223	BitAndExpression	sbyte & sdmask		1030129	0		&			
ANR	1030224	Identifier	sbyte		1030129	0					
ANR	1030225	Identifier	sdmask		1030129	1					
ANR	1030226	ExpressionStatement	bits_on ++	711:14:24941:24950	1030129	1	True				
ANR	1030227	PostIncDecOperationExpression	bits_on ++		1030129	0					
ANR	1030228	Identifier	bits_on		1030129	0					
ANR	1030229	IncDec	++		1030129	1					
ANR	1030230	ElseStatement	else		1030129	0					
ANR	1030231	IfStatement	if ( bits_on )		1030129	0					
ANR	1030232	Condition	bits_on	712:22:24974:24980	1030129	0	True				
ANR	1030233	Identifier	bits_on		1030129	0					
ANR	1030234	ExpressionStatement	dbyte |= sdmask	713:14:24998:25013	1030129	1	True				
ANR	1030235	AssignmentExpression	dbyte |= sdmask		1030129	0		|=			
ANR	1030236	Identifier	dbyte		1030129	0					
ANR	1030237	Identifier	sdmask		1030129	1					
ANR	1030238	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		1030129	1					
ANR	1030239	Condition	( sdmask >>= 1 ) == 0	714:17:25032:25050	1030129	0	True				
ANR	1030240	EqualityExpression	( sdmask >>= 1 ) == 0		1030129	0		==			
ANR	1030241	AssignmentExpression	sdmask >>= 1		1030129	0		>>=			
ANR	1030242	Identifier	sdmask		1030129	0					
ANR	1030243	PrimaryExpression	1		1030129	1					
ANR	1030244	PrimaryExpression	0		1030129	1					
ANR	1030245	ExpressionStatement	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = sbyte = * ++ sp"	715:14:25068:25119	1030129	1	True				
ANR	1030246	Expression	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = sbyte = * ++ sp"		1030129	0					
ANR	1030247	AssignmentExpression	sdmask = 0x80		1030129	0		=			
ANR	1030248	Identifier	sdmask		1030129	0					
ANR	1030249	PrimaryExpression	0x80		1030129	1					
ANR	1030250	Expression	"* dp ++ = dbyte , dbyte = sbyte = * ++ sp"		1030129	1					
ANR	1030251	AssignmentExpression	* dp ++ = dbyte		1030129	0		=			
ANR	1030252	UnaryOperationExpression	* dp ++		1030129	0					
ANR	1030253	UnaryOperator	*		1030129	0					
ANR	1030254	PostIncDecOperationExpression	dp ++		1030129	1					
ANR	1030255	Identifier	dp		1030129	0					
ANR	1030256	IncDec	++		1030129	1					
ANR	1030257	Identifier	dbyte		1030129	1					
ANR	1030258	AssignmentExpression	dbyte = sbyte = * ++ sp		1030129	1		=			
ANR	1030259	Identifier	dbyte		1030129	0					
ANR	1030260	AssignmentExpression	sbyte = * ++ sp		1030129	1		=			
ANR	1030261	Identifier	sbyte		1030129	0					
ANR	1030262	UnaryOperationExpression	* ++ sp		1030129	1					
ANR	1030263	UnaryOperator	*		1030129	0					
ANR	1030264	UnaryExpression	++ sp		1030129	1					
ANR	1030265	IncDec	++		1030129	0					
ANR	1030266	Identifier	sp		1030129	1					
ANR	1030267	CompoundStatement		25:8:690:690	1030129	10					
ANR	1030268	ForStatement	for ( ; i < width ; ++ i )		1030129	0					
ANR	1030269	Condition	i < width	720:18:25219:25227	1030129	0	True				
ANR	1030270	RelationalExpression	i < width		1030129	0		<			
ANR	1030271	Identifier	i		1030129	0					
ANR	1030272	Identifier	width		1030129	1					
ANR	1030273	UnaryExpression	++ i	720:29:25230:25232	1030129	1	True				
ANR	1030274	IncDec	++		1030129	0					
ANR	1030275	Identifier	i		1030129	1					
ANR	1030276	CompoundStatement		25:35:717:717	1030129	2					
ANR	1030277	IfStatement	if ( sbyte & sdmask )		1030129	0					
ANR	1030278	Condition	sbyte & sdmask	721:17:25255:25268	1030129	0	True				
ANR	1030279	BitAndExpression	sbyte & sdmask		1030129	0		&			
ANR	1030280	Identifier	sbyte		1030129	0					
ANR	1030281	Identifier	sdmask		1030129	1					
ANR	1030282	ExpressionStatement	bits_on ++	722:14:25286:25295	1030129	1	True				
ANR	1030283	PostIncDecOperationExpression	bits_on ++		1030129	0					
ANR	1030284	Identifier	bits_on		1030129	0					
ANR	1030285	IncDec	++		1030129	1					
ANR	1030286	ElseStatement	else		1030129	0					
ANR	1030287	IfStatement	if ( bits_on )		1030129	0					
ANR	1030288	Condition	bits_on	723:22:25319:25325	1030129	0	True				
ANR	1030289	Identifier	bits_on		1030129	0					
ANR	1030290	ExpressionStatement	dbyte |= sdmask	724:14:25343:25358	1030129	1	True				
ANR	1030291	AssignmentExpression	dbyte |= sdmask		1030129	0		|=			
ANR	1030292	Identifier	dbyte		1030129	0					
ANR	1030293	Identifier	sdmask		1030129	1					
ANR	1030294	IfStatement	if ( * zp & zmask )		1030129	1					
ANR	1030295	Condition	* zp & zmask	725:17:25377:25387	1030129	0	True				
ANR	1030296	BitAndExpression	* zp & zmask		1030129	0		&			
ANR	1030297	UnaryOperationExpression	* zp		1030129	0					
ANR	1030298	UnaryOperator	*		1030129	0					
ANR	1030299	Identifier	zp		1030129	1					
ANR	1030300	Identifier	zmask		1030129	1					
ANR	1030301	ExpressionStatement	-- bits_on	726:14:25405:25414	1030129	1	True				
ANR	1030302	UnaryExpression	-- bits_on		1030129	0					
ANR	1030303	IncDec	--		1030129	0					
ANR	1030304	Identifier	bits_on		1030129	1					
ANR	1030305	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		1030129	2					
ANR	1030306	Condition	( sdmask >>= 1 ) == 0	727:17:25433:25451	1030129	0	True				
ANR	1030307	EqualityExpression	( sdmask >>= 1 ) == 0		1030129	0		==			
ANR	1030308	AssignmentExpression	sdmask >>= 1		1030129	0		>>=			
ANR	1030309	Identifier	sdmask		1030129	0					
ANR	1030310	PrimaryExpression	1		1030129	1					
ANR	1030311	PrimaryExpression	0		1030129	1					
ANR	1030312	CompoundStatement		32:39:936:936	1030129	1					
ANR	1030313	ExpressionStatement	sdmask = 0x80	728:14:25471:25484	1030129	0	True				
ANR	1030314	AssignmentExpression	sdmask = 0x80		1030129	0		=			
ANR	1030315	Identifier	sdmask		1030129	0					
ANR	1030316	PrimaryExpression	0x80		1030129	1					
ANR	1030317	ExpressionStatement	* dp ++ = dbyte	729:14:25500:25513	1030129	1	True				
ANR	1030318	AssignmentExpression	* dp ++ = dbyte		1030129	0		=			
ANR	1030319	UnaryOperationExpression	* dp ++		1030129	0					
ANR	1030320	UnaryOperator	*		1030129	0					
ANR	1030321	PostIncDecOperationExpression	dp ++		1030129	1					
ANR	1030322	Identifier	dp		1030129	0					
ANR	1030323	IncDec	++		1030129	1					
ANR	1030324	Identifier	dbyte		1030129	1					
ANR	1030325	Label	on :	730:0:25515:25517	1030129	2	True				
ANR	1030326	Identifier	on		1030129	0					
ANR	1030327	SwitchStatement	switch ( ( dbyte = sbyte = * ++ sp ) )		1030129	3					
ANR	1030328	Condition	dbyte = sbyte = * ++ sp	730:23:25538:25560	1030129	0	True				
ANR	1030329	AssignmentExpression	dbyte = sbyte = * ++ sp		1030129	0		=			
ANR	1030330	Identifier	dbyte		1030129	0					
ANR	1030331	AssignmentExpression	sbyte = * ++ sp		1030129	1		=			
ANR	1030332	Identifier	sbyte		1030129	0					
ANR	1030333	UnaryOperationExpression	* ++ sp		1030129	1					
ANR	1030334	UnaryOperator	*		1030129	0					
ANR	1030335	UnaryExpression	++ sp		1030129	1					
ANR	1030336	IncDec	++		1030129	0					
ANR	1030337	Identifier	sp		1030129	1					
ANR	1030338	CompoundStatement		35:49:1045:1045	1030129	1					
ANR	1030339	Label	case 0xff :	731:16:25582:25591	1030129	0	True				
ANR	1030340	IfStatement	if ( width - i <= 8 )		1030129	1					
ANR	1030341	Condition	width - i <= 8	732:23:25616:25629	1030129	0	True				
ANR	1030342	RelationalExpression	width - i <= 8		1030129	0		<=			
ANR	1030343	AdditiveExpression	width - i		1030129	0		-			
ANR	1030344	Identifier	width		1030129	0					
ANR	1030345	Identifier	i		1030129	1					
ANR	1030346	PrimaryExpression	8		1030129	1					
ANR	1030347	BreakStatement	break ;	733:20:25653:25658	1030129	1	True				
ANR	1030348	ExpressionStatement	* dp ++ = 0xff	734:18:25678:25690	1030129	2	True				
ANR	1030349	AssignmentExpression	* dp ++ = 0xff		1030129	0		=			
ANR	1030350	UnaryOperationExpression	* dp ++		1030129	0					
ANR	1030351	UnaryOperator	*		1030129	0					
ANR	1030352	PostIncDecOperationExpression	dp ++		1030129	1					
ANR	1030353	Identifier	dp		1030129	0					
ANR	1030354	IncDec	++		1030129	1					
ANR	1030355	PrimaryExpression	0xff		1030129	1					
ANR	1030356	ExpressionStatement	bits_on += 8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]	735:18:25710:25805	1030129	3	True				
ANR	1030357	AssignmentExpression	bits_on += 8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		1030129	0		+=			
ANR	1030358	Identifier	bits_on		1030129	0					
ANR	1030359	AdditiveExpression	8 - byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		1030129	1		-			
ANR	1030360	PrimaryExpression	8		1030129	0					
ANR	1030361	ArrayIndexing	byte_count_bits [ ( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask ) ]		1030129	1					
ANR	1030362	Identifier	byte_count_bits		1030129	0					
ANR	1030363	AdditiveExpression	( * zp & ( zmask - 1 ) ) + ( zp [ 1 ] & - ( int ) zmask )		1030129	1		+			
ANR	1030364	BitAndExpression	* zp & ( zmask - 1 )		1030129	0		&			
ANR	1030365	UnaryOperationExpression	* zp		1030129	0					
ANR	1030366	UnaryOperator	*		1030129	0					
ANR	1030367	Identifier	zp		1030129	1					
ANR	1030368	AdditiveExpression	zmask - 1		1030129	1		-			
ANR	1030369	Identifier	zmask		1030129	0					
ANR	1030370	PrimaryExpression	1		1030129	1					
ANR	1030371	BitAndExpression	zp [ 1 ] & - ( int ) zmask		1030129	1		&			
ANR	1030372	ArrayIndexing	zp [ 1 ]		1030129	0					
ANR	1030373	Identifier	zp		1030129	0					
ANR	1030374	PrimaryExpression	1		1030129	1					
ANR	1030375	UnaryOperationExpression	- ( int ) zmask		1030129	1					
ANR	1030376	UnaryOperator	-		1030129	0					
ANR	1030377	CastExpression	( int ) zmask		1030129	1					
ANR	1030378	CastTarget	int		1030129	0					
ANR	1030379	Identifier	zmask		1030129	1					
ANR	1030380	ExpressionStatement	++ zp	737:18:25825:25829	1030129	4	True				
ANR	1030381	UnaryExpression	++ zp		1030129	0					
ANR	1030382	IncDec	++		1030129	0					
ANR	1030383	Identifier	zp		1030129	1					
ANR	1030384	ExpressionStatement	i += 8	738:18:25849:25855	1030129	5	True				
ANR	1030385	AssignmentExpression	i += 8		1030129	0		+=			
ANR	1030386	Identifier	i		1030129	0					
ANR	1030387	PrimaryExpression	8		1030129	1					
ANR	1030388	GotoStatement	goto on ;	739:18:25875:25882	1030129	6	True				
ANR	1030389	Identifier	on		1030129	0					
ANR	1030390	Label	case 0 :	740:16:25900:25906	1030129	7	True				
ANR	1030391	IfStatement	if ( bits_on || width - i <= 8 )		1030129	8					
ANR	1030392	Condition	bits_on || width - i <= 8	741:23:25931:25955	1030129	0	True				
ANR	1030393	OrExpression	bits_on || width - i <= 8		1030129	0		||			
ANR	1030394	Identifier	bits_on		1030129	0					
ANR	1030395	RelationalExpression	width - i <= 8		1030129	1		<=			
ANR	1030396	AdditiveExpression	width - i		1030129	0		-			
ANR	1030397	Identifier	width		1030129	0					
ANR	1030398	Identifier	i		1030129	1					
ANR	1030399	PrimaryExpression	8		1030129	1					
ANR	1030400	BreakStatement	break ;	742:20:25979:25984	1030129	1	True				
ANR	1030401	ExpressionStatement	* dp ++ = 0	743:18:26004:26013	1030129	9	True				
ANR	1030402	AssignmentExpression	* dp ++ = 0		1030129	0		=			
ANR	1030403	UnaryOperationExpression	* dp ++		1030129	0					
ANR	1030404	UnaryOperator	*		1030129	0					
ANR	1030405	PostIncDecOperationExpression	dp ++		1030129	1					
ANR	1030406	Identifier	dp		1030129	0					
ANR	1030407	IncDec	++		1030129	1					
ANR	1030408	PrimaryExpression	0		1030129	1					
ANR	1030409	ExpressionStatement	++ zp	746:18:26162:26166	1030129	10	True				
ANR	1030410	UnaryExpression	++ zp		1030129	0					
ANR	1030411	IncDec	++		1030129	0					
ANR	1030412	Identifier	zp		1030129	1					
ANR	1030413	ExpressionStatement	i += 8	747:18:26186:26192	1030129	11	True				
ANR	1030414	AssignmentExpression	i += 8		1030129	0		+=			
ANR	1030415	Identifier	i		1030129	0					
ANR	1030416	PrimaryExpression	8		1030129	1					
ANR	1030417	GotoStatement	goto on ;	748:18:26212:26219	1030129	12	True				
ANR	1030418	Identifier	on		1030129	0					
ANR	1030419	Label	default :	749:16:26237:26244	1030129	13	True				
ANR	1030420	Identifier	default		1030129	0					
ANR	1030421	ExpressionStatement		750:18:26264:26264	1030129	14	True				
ANR	1030422	IfStatement	if ( ( zmask >>= 1 ) == 0 )		1030129	3					
ANR	1030423	Condition	( zmask >>= 1 ) == 0	753:17:26313:26330	1030129	0	True				
ANR	1030424	EqualityExpression	( zmask >>= 1 ) == 0		1030129	0		==			
ANR	1030425	AssignmentExpression	zmask >>= 1		1030129	0		>>=			
ANR	1030426	Identifier	zmask		1030129	0					
ANR	1030427	PrimaryExpression	1		1030129	1					
ANR	1030428	PrimaryExpression	0		1030129	1					
ANR	1030429	ExpressionStatement	"zmask = 0x80 , ++ zp"	754:14:26348:26366	1030129	1	True				
ANR	1030430	Expression	"zmask = 0x80 , ++ zp"		1030129	0					
ANR	1030431	AssignmentExpression	zmask = 0x80		1030129	0		=			
ANR	1030432	Identifier	zmask		1030129	0					
ANR	1030433	PrimaryExpression	0x80		1030129	1					
ANR	1030434	UnaryExpression	++ zp		1030129	1					
ANR	1030435	IncDec	++		1030129	0					
ANR	1030436	Identifier	zp		1030129	1					
ANR	1030437	CompoundStatement		65:10:1984:2015	1030129	11					
ANR	1030438	IdentifierDeclStatement	uint stop = width + smear_width ;	760:10:26503:26534	1030129	0	True				
ANR	1030439	IdentifierDecl	stop = width + smear_width		1030129	0					
ANR	1030440	IdentifierDeclType	uint		1030129	0					
ANR	1030441	Identifier	stop		1030129	1					
ANR	1030442	AssignmentExpression	stop = width + smear_width		1030129	2		=			
ANR	1030443	Identifier	stop		1030129	0					
ANR	1030444	AdditiveExpression	width + smear_width		1030129	1		+			
ANR	1030445	Identifier	width		1030129	0					
ANR	1030446	Identifier	smear_width		1030129	1					
ANR	1030447	ForStatement	for ( ; i < stop ; ++ i )		1030129	1					
ANR	1030448	Condition	i < stop	762:18:26555:26562	1030129	0	True				
ANR	1030449	RelationalExpression	i < stop		1030129	0		<			
ANR	1030450	Identifier	i		1030129	0					
ANR	1030451	Identifier	stop		1030129	1					
ANR	1030452	UnaryExpression	++ i	762:28:26565:26567	1030129	1	True				
ANR	1030453	IncDec	++		1030129	0					
ANR	1030454	Identifier	i		1030129	1					
ANR	1030455	CompoundStatement		67:34:2052:2052	1030129	2					
ANR	1030456	IfStatement	if ( bits_on )		1030129	0					
ANR	1030457	Condition	bits_on	763:17:26590:26596	1030129	0	True				
ANR	1030458	Identifier	bits_on		1030129	0					
ANR	1030459	ExpressionStatement	dbyte |= sdmask	764:14:26614:26629	1030129	1	True				
ANR	1030460	AssignmentExpression	dbyte |= sdmask		1030129	0		|=			
ANR	1030461	Identifier	dbyte		1030129	0					
ANR	1030462	Identifier	sdmask		1030129	1					
ANR	1030463	IfStatement	if ( ( sdmask >>= 1 ) == 0 )		1030129	1					
ANR	1030464	Condition	( sdmask >>= 1 ) == 0	765:17:26648:26666	1030129	0	True				
ANR	1030465	EqualityExpression	( sdmask >>= 1 ) == 0		1030129	0		==			
ANR	1030466	AssignmentExpression	sdmask >>= 1		1030129	0		>>=			
ANR	1030467	Identifier	sdmask		1030129	0					
ANR	1030468	PrimaryExpression	1		1030129	1					
ANR	1030469	PrimaryExpression	0		1030129	1					
ANR	1030470	ExpressionStatement	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = 0"	766:14:26684:26723	1030129	1	True				
ANR	1030471	Expression	"sdmask = 0x80 , * dp ++ = dbyte , dbyte = 0"		1030129	0					
ANR	1030472	AssignmentExpression	sdmask = 0x80		1030129	0		=			
ANR	1030473	Identifier	sdmask		1030129	0					
ANR	1030474	PrimaryExpression	0x80		1030129	1					
ANR	1030475	Expression	"* dp ++ = dbyte , dbyte = 0"		1030129	1					
ANR	1030476	AssignmentExpression	* dp ++ = dbyte		1030129	0		=			
ANR	1030477	UnaryOperationExpression	* dp ++		1030129	0					
ANR	1030478	UnaryOperator	*		1030129	0					
ANR	1030479	PostIncDecOperationExpression	dp ++		1030129	1					
ANR	1030480	Identifier	dp		1030129	0					
ANR	1030481	IncDec	++		1030129	1					
ANR	1030482	Identifier	dbyte		1030129	1					
ANR	1030483	AssignmentExpression	dbyte = 0		1030129	1		=			
ANR	1030484	Identifier	dbyte		1030129	0					
ANR	1030485	PrimaryExpression	0		1030129	1					
ANR	1030486	IfStatement	if ( * zp & zmask )		1030129	2					
ANR	1030487	Condition	* zp & zmask	767:17:26742:26752	1030129	0	True				
ANR	1030488	BitAndExpression	* zp & zmask		1030129	0		&			
ANR	1030489	UnaryOperationExpression	* zp		1030129	0					
ANR	1030490	UnaryOperator	*		1030129	0					
ANR	1030491	Identifier	zp		1030129	1					
ANR	1030492	Identifier	zmask		1030129	1					
ANR	1030493	ExpressionStatement	-- bits_on	768:14:26770:26779	1030129	1	True				
ANR	1030494	UnaryExpression	-- bits_on		1030129	0					
ANR	1030495	IncDec	--		1030129	0					
ANR	1030496	Identifier	bits_on		1030129	1					
ANR	1030497	IfStatement	if ( ( zmask >>= 1 ) == 0 )		1030129	3					
ANR	1030498	Condition	( zmask >>= 1 ) == 0	769:17:26798:26815	1030129	0	True				
ANR	1030499	EqualityExpression	( zmask >>= 1 ) == 0		1030129	0		==			
ANR	1030500	AssignmentExpression	zmask >>= 1		1030129	0		>>=			
ANR	1030501	Identifier	zmask		1030129	0					
ANR	1030502	PrimaryExpression	1		1030129	1					
ANR	1030503	PrimaryExpression	0		1030129	1					
ANR	1030504	ExpressionStatement	"zmask = 0x80 , ++ zp"	770:14:26833:26851	1030129	1	True				
ANR	1030505	Expression	"zmask = 0x80 , ++ zp"		1030129	0					
ANR	1030506	AssignmentExpression	zmask = 0x80		1030129	0		=			
ANR	1030507	Identifier	zmask		1030129	0					
ANR	1030508	PrimaryExpression	0x80		1030129	1					
ANR	1030509	UnaryExpression	++ zp		1030129	1					
ANR	1030510	IncDec	++		1030129	0					
ANR	1030511	Identifier	zp		1030129	1					
ANR	1030512	IfStatement	if ( sdmask != 0x80 )		1030129	12					
ANR	1030513	Condition	sdmask != 0x80	774:13:26889:26902	1030129	0	True				
ANR	1030514	EqualityExpression	sdmask != 0x80		1030129	0		!=			
ANR	1030515	Identifier	sdmask		1030129	0					
ANR	1030516	PrimaryExpression	0x80		1030129	1					
ANR	1030517	ExpressionStatement	* dp = dbyte	775:10:26916:26927	1030129	1	True				
ANR	1030518	AssignmentExpression	* dp = dbyte		1030129	0		=			
ANR	1030519	UnaryOperationExpression	* dp		1030129	0					
ANR	1030520	UnaryOperator	*		1030129	0					
ANR	1030521	Identifier	dp		1030129	1					
ANR	1030522	Identifier	dbyte		1030129	1					
ANR	1030523	ReturnType	static void		1030129	1					
ANR	1030524	Identifier	bits_smear_horizontally		1030129	2					
ANR	1030525	ParameterList	"byte * dest , const byte * src , uint width , uint smear_width"		1030129	3					
ANR	1030526	Parameter	byte * dest	694:24:24457:24466	1030129	0	True				
ANR	1030527	ParameterType	byte *		1030129	0					
ANR	1030528	Identifier	dest		1030129	1					
ANR	1030529	Parameter	const byte * src	694:36:24469:24483	1030129	1	True				
ANR	1030530	ParameterType	const byte *		1030129	0					
ANR	1030531	Identifier	src		1030129	1					
ANR	1030532	Parameter	uint width	694:53:24486:24495	1030129	2	True				
ANR	1030533	ParameterType	uint		1030129	0					
ANR	1030534	Identifier	width		1030129	1					
ANR	1030535	Parameter	uint smear_width	695:2:24500:24515	1030129	3	True				
ANR	1030536	ParameterType	uint		1030129	0					
ANR	1030537	Identifier	smear_width		1030129	1					
ANR	1030538	CFGEntryNode	ENTRY		1030129		True				
ANR	1030539	CFGExitNode	EXIT		1030129		True				
ANR	1030540	Symbol	* sp		1030129						
ANR	1030541	Symbol	* * zp		1030129						
ANR	1030542	Symbol	dbyte		1030129						
ANR	1030543	Symbol	src		1030129						
ANR	1030544	Symbol	byte_count_bits		1030129						
ANR	1030545	Symbol	i		1030129						
ANR	1030546	Symbol	* dp ++		1030129						
ANR	1030547	Symbol	dest		1030129						
ANR	1030548	Symbol	dp		1030129						
ANR	1030549	Symbol	sdmask		1030129						
ANR	1030550	Symbol	zmask		1030129						
ANR	1030551	Symbol	* dp		1030129						
ANR	1030552	Symbol	* byte_count_bits		1030129						
ANR	1030553	Symbol	min		1030129						
ANR	1030554	Symbol	stop		1030129						
ANR	1030555	Symbol	* ++ sp		1030129						
ANR	1030556	Symbol	zp		1030129						
ANR	1030557	Symbol	smear_width		1030129						
ANR	1030558	Symbol	width		1030129						
ANR	1030559	Symbol	sbyte		1030129						
ANR	1030560	Symbol	* zmask		1030129						
ANR	1030561	Symbol	sp		1030129						
ANR	1030562	Symbol	bits_on		1030129						
ANR	1030563	Symbol	* zp		1030129						
ANR	1030564	DeclStmt									
ANR	1030565	Decl							const int	const int	frac_pixel_shift
ANR	1030566	Function	fapi_image_uncached_glyph	784:0:27274:36055							
ANR	1030567	FunctionDef	"fapi_image_uncached_glyph (gs_font * pfont , gs_gstate * pgs , gs_show_enum * penum , gs_fapi_raster * rast , const int import_shift_v)"		1030566	0					
ANR	1030568	CompoundStatement		787:0:27438:36055	1030566	0					
ANR	1030569	IdentifierDeclStatement	gx_device * dev = penum -> dev ;	788:4:27444:27471	1030566	0	True				
ANR	1030570	IdentifierDecl	* dev = penum -> dev		1030566	0					
ANR	1030571	IdentifierDeclType	gx_device *		1030566	0					
ANR	1030572	Identifier	dev		1030566	1					
ANR	1030573	AssignmentExpression	* dev = penum -> dev		1030566	2		=			
ANR	1030574	Identifier	dev		1030566	0					
ANR	1030575	PtrMemberAccess	penum -> dev		1030566	1					
ANR	1030576	Identifier	penum		1030566	0					
ANR	1030577	Identifier	dev		1030566	1					
ANR	1030578	IdentifierDeclStatement	gs_gstate * penum_pgs = ( gs_gstate * ) penum -> pgs ;	789:4:27477:27524	1030566	1	True				
ANR	1030579	IdentifierDecl	* penum_pgs = ( gs_gstate * ) penum -> pgs		1030566	0					
ANR	1030580	IdentifierDeclType	gs_gstate *		1030566	0					
ANR	1030581	Identifier	penum_pgs		1030566	1					
ANR	1030582	AssignmentExpression	* penum_pgs = ( gs_gstate * ) penum -> pgs		1030566	2		=			
ANR	1030583	Identifier	penum_pgs		1030566	0					
ANR	1030584	CastExpression	( gs_gstate * ) penum -> pgs		1030566	1					
ANR	1030585	CastTarget	gs_gstate *		1030566	0					
ANR	1030586	PtrMemberAccess	penum -> pgs		1030566	1					
ANR	1030587	Identifier	penum		1030566	0					
ANR	1030588	Identifier	pgs		1030566	1					
ANR	1030589	IdentifierDeclStatement	int code ;	790:4:27530:27538	1030566	2	True				
ANR	1030590	IdentifierDecl	code		1030566	0					
ANR	1030591	IdentifierDeclType	int		1030566	0					
ANR	1030592	Identifier	code		1030566	1					
ANR	1030593	IdentifierDeclStatement	const gx_clip_path * pcpath = pgs -> clip_path ;	791:4:27544:27587	1030566	3	True				
ANR	1030594	IdentifierDecl	* pcpath = pgs -> clip_path		1030566	0					
ANR	1030595	IdentifierDeclType	const gx_clip_path *		1030566	0					
ANR	1030596	Identifier	pcpath		1030566	1					
ANR	1030597	AssignmentExpression	* pcpath = pgs -> clip_path		1030566	2		=			
ANR	1030598	Identifier	pcpath		1030566	0					
ANR	1030599	PtrMemberAccess	pgs -> clip_path		1030566	1					
ANR	1030600	Identifier	pgs		1030566	0					
ANR	1030601	Identifier	clip_path		1030566	1					
ANR	1030602	IdentifierDeclStatement	const gx_drawing_color * pdcolor = penum -> pdcolor ;	792:4:27593:27641	1030566	4	True				
ANR	1030603	IdentifierDecl	* pdcolor = penum -> pdcolor		1030566	0					
ANR	1030604	IdentifierDeclType	const gx_drawing_color *		1030566	0					
ANR	1030605	Identifier	pdcolor		1030566	1					
ANR	1030606	AssignmentExpression	* pdcolor = penum -> pdcolor		1030566	2		=			
ANR	1030607	Identifier	pdcolor		1030566	0					
ANR	1030608	PtrMemberAccess	penum -> pdcolor		1030566	1					
ANR	1030609	Identifier	penum		1030566	0					
ANR	1030610	Identifier	pdcolor		1030566	1					
ANR	1030611	IdentifierDeclStatement	int rast_orig_x = rast -> orig_x ;	793:4:27647:27677	1030566	5	True				
ANR	1030612	IdentifierDecl	rast_orig_x = rast -> orig_x		1030566	0					
ANR	1030613	IdentifierDeclType	int		1030566	0					
ANR	1030614	Identifier	rast_orig_x		1030566	1					
ANR	1030615	AssignmentExpression	rast_orig_x = rast -> orig_x		1030566	2		=			
ANR	1030616	Identifier	rast_orig_x		1030566	0					
ANR	1030617	PtrMemberAccess	rast -> orig_x		1030566	1					
ANR	1030618	Identifier	rast		1030566	0					
ANR	1030619	Identifier	orig_x		1030566	1					
ANR	1030620	IdentifierDeclStatement	int rast_orig_y = - rast -> orig_y ;	794:4:27683:27714	1030566	6	True				
ANR	1030621	IdentifierDecl	rast_orig_y = - rast -> orig_y		1030566	0					
ANR	1030622	IdentifierDeclType	int		1030566	0					
ANR	1030623	Identifier	rast_orig_y		1030566	1					
ANR	1030624	AssignmentExpression	rast_orig_y = - rast -> orig_y		1030566	2		=			
ANR	1030625	Identifier	rast_orig_y		1030566	0					
ANR	1030626	UnaryOperationExpression	- rast -> orig_y		1030566	1					
ANR	1030627	UnaryOperator	-		1030566	0					
ANR	1030628	PtrMemberAccess	rast -> orig_y		1030566	1					
ANR	1030629	Identifier	rast		1030566	0					
ANR	1030630	Identifier	orig_y		1030566	1					
ANR	1030631	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	795:4:27720:27764	1030566	7	True				
ANR	1030632	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		1030566	0					
ANR	1030633	IdentifierDeclType	gs_font_base *		1030566	0					
ANR	1030634	Identifier	pbfont		1030566	1					
ANR	1030635	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		1030566	2		=			
ANR	1030636	Identifier	pbfont		1030566	0					
ANR	1030637	CastExpression	( gs_font_base * ) pfont		1030566	1					
ANR	1030638	CastTarget	gs_font_base *		1030566	0					
ANR	1030639	Identifier	pfont		1030566	1					
ANR	1030640	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	796:4:27770:27802	1030566	8	True				
ANR	1030641	IdentifierDecl	* I = pbfont -> FAPI		1030566	0					
ANR	1030642	IdentifierDeclType	gs_fapi_server *		1030566	0					
ANR	1030643	Identifier	I		1030566	1					
ANR	1030644	AssignmentExpression	* I = pbfont -> FAPI		1030566	2		=			
ANR	1030645	Identifier	I		1030566	0					
ANR	1030646	PtrMemberAccess	pbfont -> FAPI		1030566	1					
ANR	1030647	Identifier	pbfont		1030566	0					
ANR	1030648	Identifier	FAPI		1030566	1					
ANR	1030649	ExpressionStatement	extern_st ( st_gs_show_enum )	798:4:27809:27835	1030566	9	True				
ANR	1030650	CallExpression	extern_st ( st_gs_show_enum )		1030566	0					
ANR	1030651	Callee	extern_st		1030566	0					
ANR	1030652	Identifier	extern_st		1030566	0					
ANR	1030653	ArgumentList	st_gs_show_enum		1030566	1					
ANR	1030654	Argument	st_gs_show_enum		1030566	0					
ANR	1030655	Identifier	st_gs_show_enum		1030566	0					
ANR	1030656	IdentifierDeclStatement	byte * r = rast -> p ;	800:4:27842:27859	1030566	10	True				
ANR	1030657	IdentifierDecl	* r = rast -> p		1030566	0					
ANR	1030658	IdentifierDeclType	byte *		1030566	0					
ANR	1030659	Identifier	r		1030566	1					
ANR	1030660	AssignmentExpression	* r = rast -> p		1030566	2		=			
ANR	1030661	Identifier	r		1030566	0					
ANR	1030662	PtrMemberAccess	rast -> p		1030566	1					
ANR	1030663	Identifier	rast		1030566	0					
ANR	1030664	Identifier	p		1030566	1					
ANR	1030665	IdentifierDeclStatement	"byte * src , * dst ;"	801:4:27865:27880	1030566	11	True				
ANR	1030666	IdentifierDecl	* src		1030566	0					
ANR	1030667	IdentifierDeclType	byte *		1030566	0					
ANR	1030668	Identifier	src		1030566	1					
ANR	1030669	IdentifierDecl	* dst		1030566	1					
ANR	1030670	IdentifierDeclType	byte *		1030566	0					
ANR	1030671	Identifier	dst		1030566	1					
ANR	1030672	IdentifierDeclStatement	"int h , padbytes , cpbytes , dstr = bitmap_raster ( rast -> width ) ;"	802:4:27886:27945	1030566	12	True				
ANR	1030673	IdentifierDecl	h		1030566	0					
ANR	1030674	IdentifierDeclType	int		1030566	0					
ANR	1030675	Identifier	h		1030566	1					
ANR	1030676	IdentifierDecl	padbytes		1030566	1					
ANR	1030677	IdentifierDeclType	int		1030566	0					
ANR	1030678	Identifier	padbytes		1030566	1					
ANR	1030679	IdentifierDecl	cpbytes		1030566	2					
ANR	1030680	IdentifierDeclType	int		1030566	0					
ANR	1030681	Identifier	cpbytes		1030566	1					
ANR	1030682	IdentifierDecl	dstr = bitmap_raster ( rast -> width )		1030566	3					
ANR	1030683	IdentifierDeclType	int		1030566	0					
ANR	1030684	Identifier	dstr		1030566	1					
ANR	1030685	AssignmentExpression	dstr = bitmap_raster ( rast -> width )		1030566	2		=			
ANR	1030686	Identifier	dstr		1030566	0					
ANR	1030687	CallExpression	bitmap_raster ( rast -> width )		1030566	1					
ANR	1030688	Callee	bitmap_raster		1030566	0					
ANR	1030689	Identifier	bitmap_raster		1030566	0					
ANR	1030690	ArgumentList	rast -> width		1030566	1					
ANR	1030691	Argument	rast -> width		1030566	0					
ANR	1030692	PtrMemberAccess	rast -> width		1030566	0					
ANR	1030693	Identifier	rast		1030566	0					
ANR	1030694	Identifier	width		1030566	1					
ANR	1030695	IdentifierDeclStatement	int sstr = rast -> line_step ;	803:4:27951:27977	1030566	13	True				
ANR	1030696	IdentifierDecl	sstr = rast -> line_step		1030566	0					
ANR	1030697	IdentifierDeclType	int		1030566	0					
ANR	1030698	Identifier	sstr		1030566	1					
ANR	1030699	AssignmentExpression	sstr = rast -> line_step		1030566	2		=			
ANR	1030700	Identifier	sstr		1030566	0					
ANR	1030701	PtrMemberAccess	rast -> line_step		1030566	1					
ANR	1030702	Identifier	rast		1030566	0					
ANR	1030703	Identifier	line_step		1030566	1					
ANR	1030704	IdentifierDeclStatement	double dx = penum_pgs -> ctm . tx + ( double ) rast_orig_x / ( 1 << frac_pixel_shift ) + 0.5 ;	805:4:27984:28067	1030566	14	True				
ANR	1030705	IdentifierDecl	dx = penum_pgs -> ctm . tx + ( double ) rast_orig_x / ( 1 << frac_pixel_shift ) + 0.5		1030566	0					
ANR	1030706	IdentifierDeclType	double		1030566	0					
ANR	1030707	Identifier	dx		1030566	1					
ANR	1030708	AssignmentExpression	dx = penum_pgs -> ctm . tx + ( double ) rast_orig_x / ( 1 << frac_pixel_shift ) + 0.5		1030566	2		=			
ANR	1030709	Identifier	dx		1030566	0					
ANR	1030710	AdditiveExpression	penum_pgs -> ctm . tx + ( double ) rast_orig_x / ( 1 << frac_pixel_shift ) + 0.5		1030566	1		+			
ANR	1030711	MemberAccess	penum_pgs -> ctm . tx		1030566	0					
ANR	1030712	PtrMemberAccess	penum_pgs -> ctm		1030566	0					
ANR	1030713	Identifier	penum_pgs		1030566	0					
ANR	1030714	Identifier	ctm		1030566	1					
ANR	1030715	Identifier	tx		1030566	1					
ANR	1030716	AdditiveExpression	( double ) rast_orig_x / ( 1 << frac_pixel_shift ) + 0.5		1030566	1		+			
ANR	1030717	MultiplicativeExpression	( double ) rast_orig_x / ( 1 << frac_pixel_shift )		1030566	0		/			
ANR	1030718	CastExpression	( double ) rast_orig_x		1030566	0					
ANR	1030719	CastTarget	double		1030566	0					
ANR	1030720	Identifier	rast_orig_x		1030566	1					
ANR	1030721	ShiftExpression	1 << frac_pixel_shift		1030566	1		<<			
ANR	1030722	PrimaryExpression	1		1030566	0					
ANR	1030723	Identifier	frac_pixel_shift		1030566	1					
ANR	1030724	PrimaryExpression	0.5		1030566	1					
ANR	1030725	IdentifierDeclStatement	double dy = penum_pgs -> ctm . ty + ( double ) rast_orig_y / ( 1 << frac_pixel_shift ) + 0.5 ;	806:4:28073:28156	1030566	15	True				
ANR	1030726	IdentifierDecl	dy = penum_pgs -> ctm . ty + ( double ) rast_orig_y / ( 1 << frac_pixel_shift ) + 0.5		1030566	0					
ANR	1030727	IdentifierDeclType	double		1030566	0					
ANR	1030728	Identifier	dy		1030566	1					
ANR	1030729	AssignmentExpression	dy = penum_pgs -> ctm . ty + ( double ) rast_orig_y / ( 1 << frac_pixel_shift ) + 0.5		1030566	2		=			
ANR	1030730	Identifier	dy		1030566	0					
ANR	1030731	AdditiveExpression	penum_pgs -> ctm . ty + ( double ) rast_orig_y / ( 1 << frac_pixel_shift ) + 0.5		1030566	1		+			
ANR	1030732	MemberAccess	penum_pgs -> ctm . ty		1030566	0					
ANR	1030733	PtrMemberAccess	penum_pgs -> ctm		1030566	0					
ANR	1030734	Identifier	penum_pgs		1030566	0					
ANR	1030735	Identifier	ctm		1030566	1					
ANR	1030736	Identifier	ty		1030566	1					
ANR	1030737	AdditiveExpression	( double ) rast_orig_y / ( 1 << frac_pixel_shift ) + 0.5		1030566	1		+			
ANR	1030738	MultiplicativeExpression	( double ) rast_orig_y / ( 1 << frac_pixel_shift )		1030566	0		/			
ANR	1030739	CastExpression	( double ) rast_orig_y		1030566	0					
ANR	1030740	CastTarget	double		1030566	0					
ANR	1030741	Identifier	rast_orig_y		1030566	1					
ANR	1030742	ShiftExpression	1 << frac_pixel_shift		1030566	1		<<			
ANR	1030743	PrimaryExpression	1		1030566	0					
ANR	1030744	Identifier	frac_pixel_shift		1030566	1					
ANR	1030745	PrimaryExpression	0.5		1030566	1					
ANR	1030746	IfStatement	if ( gs_color_writes_pure ( penum_pgs ) && I -> ff . embolden == 0.0 )		1030566	16					
ANR	1030747	Condition	gs_color_writes_pure ( penum_pgs ) && I -> ff . embolden == 0.0	811:8:28309:28364	1030566	0	True				
ANR	1030748	AndExpression	gs_color_writes_pure ( penum_pgs ) && I -> ff . embolden == 0.0		1030566	0		&&			
ANR	1030749	CallExpression	gs_color_writes_pure ( penum_pgs )		1030566	0					
ANR	1030750	Callee	gs_color_writes_pure		1030566	0					
ANR	1030751	Identifier	gs_color_writes_pure		1030566	0					
ANR	1030752	ArgumentList	penum_pgs		1030566	1					
ANR	1030753	Argument	penum_pgs		1030566	0					
ANR	1030754	Identifier	penum_pgs		1030566	0					
ANR	1030755	EqualityExpression	I -> ff . embolden == 0.0		1030566	1		==			
ANR	1030756	MemberAccess	I -> ff . embolden		1030566	0					
ANR	1030757	PtrMemberAccess	I -> ff		1030566	0					
ANR	1030758	Identifier	I		1030566	0					
ANR	1030759	Identifier	ff		1030566	1					
ANR	1030760	Identifier	embolden		1030566	1					
ANR	1030761	PrimaryExpression	0.0		1030566	1					
ANR	1030762	CompoundStatement		25:66:928:928	1030566	1					
ANR	1030763	IfStatement	if ( dstr != sstr )		1030566	0					
ANR	1030764	Condition	dstr != sstr	812:12:28381:28392	1030566	0	True				
ANR	1030765	EqualityExpression	dstr != sstr		1030566	0		!=			
ANR	1030766	Identifier	dstr		1030566	0					
ANR	1030767	Identifier	sstr		1030566	1					
ANR	1030768	CompoundStatement		26:26:956:956	1030566	1					
ANR	1030769	ExpressionStatement	"r = gs_alloc_bytes ( penum -> memory , dstr * rast -> height , ""fapi_finish_render_aux"" )"	825:12:29087:29198	1030566	0	True				
ANR	1030770	AssignmentExpression	"r = gs_alloc_bytes ( penum -> memory , dstr * rast -> height , ""fapi_finish_render_aux"" )"		1030566	0		=			
ANR	1030771	Identifier	r		1030566	0					
ANR	1030772	CallExpression	"gs_alloc_bytes ( penum -> memory , dstr * rast -> height , ""fapi_finish_render_aux"" )"		1030566	1					
ANR	1030773	Callee	gs_alloc_bytes		1030566	0					
ANR	1030774	Identifier	gs_alloc_bytes		1030566	0					
ANR	1030775	ArgumentList	penum -> memory		1030566	1					
ANR	1030776	Argument	penum -> memory		1030566	0					
ANR	1030777	PtrMemberAccess	penum -> memory		1030566	0					
ANR	1030778	Identifier	penum		1030566	0					
ANR	1030779	Identifier	memory		1030566	1					
ANR	1030780	Argument	dstr * rast -> height		1030566	1					
ANR	1030781	MultiplicativeExpression	dstr * rast -> height		1030566	0		*			
ANR	1030782	Identifier	dstr		1030566	0					
ANR	1030783	PtrMemberAccess	rast -> height		1030566	1					
ANR	1030784	Identifier	rast		1030566	0					
ANR	1030785	Identifier	height		1030566	1					
ANR	1030786	Argument	"""fapi_finish_render_aux"""		1030566	2					
ANR	1030787	PrimaryExpression	"""fapi_finish_render_aux"""		1030566	0					
ANR	1030788	IfStatement	if ( ! r )		1030566	1					
ANR	1030789	Condition	! r	827:16:29216:29217	1030566	0	True				
ANR	1030790	UnaryOperationExpression	! r		1030566	0					
ANR	1030791	UnaryOperator	!		1030566	0					
ANR	1030792	Identifier	r		1030566	1					
ANR	1030793	CompoundStatement		41:20:1781:1781	1030566	1					
ANR	1030794	ExpressionStatement	return_error ( gs_error_VMerror )	828:16:29238:29268	1030566	0	True				
ANR	1030795	CallExpression	return_error ( gs_error_VMerror )		1030566	0					
ANR	1030796	Callee	return_error		1030566	0					
ANR	1030797	Identifier	return_error		1030566	0					
ANR	1030798	ArgumentList	gs_error_VMerror		1030566	1					
ANR	1030799	Argument	gs_error_VMerror		1030566	0					
ANR	1030800	Identifier	gs_error_VMerror		1030566	0					
ANR	1030801	ExpressionStatement	cpbytes = sstr < dstr ? sstr : dstr	831:12:29297:29332	1030566	2	True				
ANR	1030802	AssignmentExpression	cpbytes = sstr < dstr ? sstr : dstr		1030566	0		=			
ANR	1030803	Identifier	cpbytes		1030566	0					
ANR	1030804	ConditionalExpression	sstr < dstr ? sstr : dstr		1030566	1					
ANR	1030805	Condition	sstr < dstr		1030566	0					
ANR	1030806	RelationalExpression	sstr < dstr		1030566	0		<			
ANR	1030807	Identifier	sstr		1030566	0					
ANR	1030808	Identifier	dstr		1030566	1					
ANR	1030809	Identifier	sstr		1030566	1					
ANR	1030810	Identifier	dstr		1030566	2					
ANR	1030811	ExpressionStatement	padbytes = dstr - cpbytes	832:12:29346:29371	1030566	3	True				
ANR	1030812	AssignmentExpression	padbytes = dstr - cpbytes		1030566	0		=			
ANR	1030813	Identifier	padbytes		1030566	0					
ANR	1030814	AdditiveExpression	dstr - cpbytes		1030566	1		-			
ANR	1030815	Identifier	dstr		1030566	0					
ANR	1030816	Identifier	cpbytes		1030566	1					
ANR	1030817	ExpressionStatement	h = rast -> height	833:12:29385:29401	1030566	4	True				
ANR	1030818	AssignmentExpression	h = rast -> height		1030566	0		=			
ANR	1030819	Identifier	h		1030566	0					
ANR	1030820	PtrMemberAccess	rast -> height		1030566	1					
ANR	1030821	Identifier	rast		1030566	0					
ANR	1030822	Identifier	height		1030566	1					
ANR	1030823	ExpressionStatement	src = rast -> p	834:12:29415:29428	1030566	5	True				
ANR	1030824	AssignmentExpression	src = rast -> p		1030566	0		=			
ANR	1030825	Identifier	src		1030566	0					
ANR	1030826	PtrMemberAccess	rast -> p		1030566	1					
ANR	1030827	Identifier	rast		1030566	0					
ANR	1030828	Identifier	p		1030566	1					
ANR	1030829	ExpressionStatement	dst = r	835:12:29442:29449	1030566	6	True				
ANR	1030830	AssignmentExpression	dst = r		1030566	0		=			
ANR	1030831	Identifier	dst		1030566	0					
ANR	1030832	Identifier	r		1030566	1					
ANR	1030833	IfStatement	if ( padbytes > 0 )		1030566	7					
ANR	1030834	Condition	padbytes > 0	836:16:29467:29478	1030566	0	True				
ANR	1030835	RelationalExpression	padbytes > 0		1030566	0		>			
ANR	1030836	Identifier	padbytes		1030566	0					
ANR	1030837	PrimaryExpression	0		1030566	1					
ANR	1030838	CompoundStatement		50:30:2042:2042	1030566	1					
ANR	1030839	WhileStatement	while ( h -- > 0 )		1030566	0					
ANR	1030840	Condition	h -- > 0	837:23:29506:29512	1030566	0	True				
ANR	1030841	RelationalExpression	h -- > 0		1030566	0		>			
ANR	1030842	PostIncDecOperationExpression	h --		1030566	0					
ANR	1030843	Identifier	h		1030566	0					
ANR	1030844	IncDec	--		1030566	1					
ANR	1030845	PrimaryExpression	0		1030566	1					
ANR	1030846	CompoundStatement		51:32:2076:2076	1030566	1					
ANR	1030847	ExpressionStatement	"memcpy ( dst , src , cpbytes )"	838:20:29537:29562	1030566	0	True				
ANR	1030848	CallExpression	"memcpy ( dst , src , cpbytes )"		1030566	0					
ANR	1030849	Callee	memcpy		1030566	0					
ANR	1030850	Identifier	memcpy		1030566	0					
ANR	1030851	ArgumentList	dst		1030566	1					
ANR	1030852	Argument	dst		1030566	0					
ANR	1030853	Identifier	dst		1030566	0					
ANR	1030854	Argument	src		1030566	1					
ANR	1030855	Identifier	src		1030566	0					
ANR	1030856	Argument	cpbytes		1030566	2					
ANR	1030857	Identifier	cpbytes		1030566	0					
ANR	1030858	ExpressionStatement	"memset ( dst + cpbytes , 0 , padbytes )"	839:20:29584:29618	1030566	1	True				
ANR	1030859	CallExpression	"memset ( dst + cpbytes , 0 , padbytes )"		1030566	0					
ANR	1030860	Callee	memset		1030566	0					
ANR	1030861	Identifier	memset		1030566	0					
ANR	1030862	ArgumentList	dst + cpbytes		1030566	1					
ANR	1030863	Argument	dst + cpbytes		1030566	0					
ANR	1030864	AdditiveExpression	dst + cpbytes		1030566	0		+			
ANR	1030865	Identifier	dst		1030566	0					
ANR	1030866	Identifier	cpbytes		1030566	1					
ANR	1030867	Argument	0		1030566	1					
ANR	1030868	PrimaryExpression	0		1030566	0					
ANR	1030869	Argument	padbytes		1030566	2					
ANR	1030870	Identifier	padbytes		1030566	0					
ANR	1030871	ExpressionStatement	src += sstr	840:20:29640:29651	1030566	2	True				
ANR	1030872	AssignmentExpression	src += sstr		1030566	0		+=			
ANR	1030873	Identifier	src		1030566	0					
ANR	1030874	Identifier	sstr		1030566	1					
ANR	1030875	ExpressionStatement	dst += dstr	841:20:29673:29684	1030566	3	True				
ANR	1030876	AssignmentExpression	dst += dstr		1030566	0		+=			
ANR	1030877	Identifier	dst		1030566	0					
ANR	1030878	Identifier	dstr		1030566	1					
ANR	1030879	ElseStatement	else		1030566	0					
ANR	1030880	CompoundStatement		58:17:2296:2296	1030566	0					
ANR	1030881	WhileStatement	while ( h -- > 0 )		1030566	0					
ANR	1030882	Condition	h -- > 0	845:23:29760:29766	1030566	0	True				
ANR	1030883	RelationalExpression	h -- > 0		1030566	0		>			
ANR	1030884	PostIncDecOperationExpression	h --		1030566	0					
ANR	1030885	Identifier	h		1030566	0					
ANR	1030886	IncDec	--		1030566	1					
ANR	1030887	PrimaryExpression	0		1030566	1					
ANR	1030888	CompoundStatement		59:32:2330:2330	1030566	1					
ANR	1030889	ExpressionStatement	"memcpy ( dst , src , cpbytes )"	846:20:29791:29816	1030566	0	True				
ANR	1030890	CallExpression	"memcpy ( dst , src , cpbytes )"		1030566	0					
ANR	1030891	Callee	memcpy		1030566	0					
ANR	1030892	Identifier	memcpy		1030566	0					
ANR	1030893	ArgumentList	dst		1030566	1					
ANR	1030894	Argument	dst		1030566	0					
ANR	1030895	Identifier	dst		1030566	0					
ANR	1030896	Argument	src		1030566	1					
ANR	1030897	Identifier	src		1030566	0					
ANR	1030898	Argument	cpbytes		1030566	2					
ANR	1030899	Identifier	cpbytes		1030566	0					
ANR	1030900	ExpressionStatement	src += sstr	847:20:29838:29849	1030566	1	True				
ANR	1030901	AssignmentExpression	src += sstr		1030566	0		+=			
ANR	1030902	Identifier	src		1030566	0					
ANR	1030903	Identifier	sstr		1030566	1					
ANR	1030904	ExpressionStatement	dst += dstr	848:20:29871:29882	1030566	2	True				
ANR	1030905	AssignmentExpression	dst += dstr		1030566	0		+=			
ANR	1030906	Identifier	dst		1030566	0					
ANR	1030907	Identifier	dstr		1030566	1					
ANR	1030908	IfStatement	"if ( gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum )"		1030566	1					
ANR	1030909	Condition	"gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum"	853:12:29939:29994	1030566	0	True				
ANR	1030910	EqualityExpression	"gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum"		1030566	0		==			
ANR	1030911	CallExpression	"gs_object_type ( penum -> memory , penum )"		1030566	0					
ANR	1030912	Callee	gs_object_type		1030566	0					
ANR	1030913	Identifier	gs_object_type		1030566	0					
ANR	1030914	ArgumentList	penum -> memory		1030566	1					
ANR	1030915	Argument	penum -> memory		1030566	0					
ANR	1030916	PtrMemberAccess	penum -> memory		1030566	0					
ANR	1030917	Identifier	penum		1030566	0					
ANR	1030918	Identifier	memory		1030566	1					
ANR	1030919	Argument	penum		1030566	1					
ANR	1030920	Identifier	penum		1030566	0					
ANR	1030921	UnaryOperationExpression	& st_gs_show_enum		1030566	1					
ANR	1030922	UnaryOperator	&		1030566	0					
ANR	1030923	Identifier	st_gs_show_enum		1030566	1					
ANR	1030924	CompoundStatement		67:70:2558:2558	1030566	1					
ANR	1030925	ExpressionStatement	dx += penum -> fapi_glyph_shift . x	854:12:30011:30042	1030566	0	True				
ANR	1030926	AssignmentExpression	dx += penum -> fapi_glyph_shift . x		1030566	0		+=			
ANR	1030927	Identifier	dx		1030566	0					
ANR	1030928	MemberAccess	penum -> fapi_glyph_shift . x		1030566	1					
ANR	1030929	PtrMemberAccess	penum -> fapi_glyph_shift		1030566	0					
ANR	1030930	Identifier	penum		1030566	0					
ANR	1030931	Identifier	fapi_glyph_shift		1030566	1					
ANR	1030932	Identifier	x		1030566	1					
ANR	1030933	ExpressionStatement	dy += penum -> fapi_glyph_shift . y	855:12:30056:30087	1030566	1	True				
ANR	1030934	AssignmentExpression	dy += penum -> fapi_glyph_shift . y		1030566	0		+=			
ANR	1030935	Identifier	dy		1030566	0					
ANR	1030936	MemberAccess	penum -> fapi_glyph_shift . y		1030566	1					
ANR	1030937	PtrMemberAccess	penum -> fapi_glyph_shift		1030566	0					
ANR	1030938	Identifier	penum		1030566	0					
ANR	1030939	Identifier	fapi_glyph_shift		1030566	1					
ANR	1030940	Identifier	y		1030566	1					
ANR	1030941	ExpressionStatement	"ensure_tag_is_set ( pgs , pgs -> device , GS_TEXT_TAG )"	858:8:30193:30241	1030566	2	True				
ANR	1030942	CallExpression	"ensure_tag_is_set ( pgs , pgs -> device , GS_TEXT_TAG )"		1030566	0					
ANR	1030943	Callee	ensure_tag_is_set		1030566	0					
ANR	1030944	Identifier	ensure_tag_is_set		1030566	0					
ANR	1030945	ArgumentList	pgs		1030566	1					
ANR	1030946	Argument	pgs		1030566	0					
ANR	1030947	Identifier	pgs		1030566	0					
ANR	1030948	Argument	pgs -> device		1030566	1					
ANR	1030949	PtrMemberAccess	pgs -> device		1030566	0					
ANR	1030950	Identifier	pgs		1030566	0					
ANR	1030951	Identifier	device		1030566	1					
ANR	1030952	Argument	GS_TEXT_TAG		1030566	2					
ANR	1030953	Identifier	GS_TEXT_TAG		1030566	0					
ANR	1030954	ExpressionStatement	code = gx_set_dev_color ( pgs )	859:8:30281:30309	1030566	3	True				
ANR	1030955	AssignmentExpression	code = gx_set_dev_color ( pgs )		1030566	0		=			
ANR	1030956	Identifier	code		1030566	0					
ANR	1030957	CallExpression	gx_set_dev_color ( pgs )		1030566	1					
ANR	1030958	Callee	gx_set_dev_color		1030566	0					
ANR	1030959	Identifier	gx_set_dev_color		1030566	0					
ANR	1030960	ArgumentList	pgs		1030566	1					
ANR	1030961	Argument	pgs		1030566	0					
ANR	1030962	Identifier	pgs		1030566	0					
ANR	1030963	IfStatement	if ( code != 0 )		1030566	4					
ANR	1030964	Condition	code != 0	860:12:30323:30331	1030566	0	True				
ANR	1030965	EqualityExpression	code != 0		1030566	0		!=			
ANR	1030966	Identifier	code		1030566	0					
ANR	1030967	PrimaryExpression	0		1030566	1					
ANR	1030968	ReturnStatement	return code ;	861:12:30346:30357	1030566	1	True				
ANR	1030969	Identifier	code		1030566	0					
ANR	1030970	ExpressionStatement	code = gs_gstate_color_load ( pgs )	862:8:30367:30399	1030566	5	True				
ANR	1030971	AssignmentExpression	code = gs_gstate_color_load ( pgs )		1030566	0		=			
ANR	1030972	Identifier	code		1030566	0					
ANR	1030973	CallExpression	gs_gstate_color_load ( pgs )		1030566	1					
ANR	1030974	Callee	gs_gstate_color_load		1030566	0					
ANR	1030975	Identifier	gs_gstate_color_load		1030566	0					
ANR	1030976	ArgumentList	pgs		1030566	1					
ANR	1030977	Argument	pgs		1030566	0					
ANR	1030978	Identifier	pgs		1030566	0					
ANR	1030979	IfStatement	if ( code < 0 )		1030566	6					
ANR	1030980	Condition	code < 0	863:12:30413:30420	1030566	0	True				
ANR	1030981	RelationalExpression	code < 0		1030566	0		<			
ANR	1030982	Identifier	code		1030566	0					
ANR	1030983	PrimaryExpression	0		1030566	1					
ANR	1030984	ReturnStatement	return code ;	864:12:30435:30446	1030566	1	True				
ANR	1030985	Identifier	code		1030566	0					
ANR	1030986	ExpressionStatement	"code = gx_image_fill_masked ( dev , r , 0 , dstr , gx_no_bitmap_id , ( int ) dx , ( int ) dy , rast -> width , rast -> height , pdcolor , 1 , rop3_default , pcpath )"	866:8:30465:30713	1030566	7	True				
ANR	1030987	AssignmentExpression	"code = gx_image_fill_masked ( dev , r , 0 , dstr , gx_no_bitmap_id , ( int ) dx , ( int ) dy , rast -> width , rast -> height , pdcolor , 1 , rop3_default , pcpath )"		1030566	0		=			
ANR	1030988	Identifier	code		1030566	0					
ANR	1030989	CallExpression	"gx_image_fill_masked ( dev , r , 0 , dstr , gx_no_bitmap_id , ( int ) dx , ( int ) dy , rast -> width , rast -> height , pdcolor , 1 , rop3_default , pcpath )"		1030566	1					
ANR	1030990	Callee	gx_image_fill_masked		1030566	0					
ANR	1030991	Identifier	gx_image_fill_masked		1030566	0					
ANR	1030992	ArgumentList	dev		1030566	1					
ANR	1030993	Argument	dev		1030566	0					
ANR	1030994	Identifier	dev		1030566	0					
ANR	1030995	Argument	r		1030566	1					
ANR	1030996	Identifier	r		1030566	0					
ANR	1030997	Argument	0		1030566	2					
ANR	1030998	PrimaryExpression	0		1030566	0					
ANR	1030999	Argument	dstr		1030566	3					
ANR	1031000	Identifier	dstr		1030566	0					
ANR	1031001	Argument	gx_no_bitmap_id		1030566	4					
ANR	1031002	Identifier	gx_no_bitmap_id		1030566	0					
ANR	1031003	Argument	( int ) dx		1030566	5					
ANR	1031004	CastExpression	( int ) dx		1030566	0					
ANR	1031005	CastTarget	int		1030566	0					
ANR	1031006	Identifier	dx		1030566	1					
ANR	1031007	Argument	( int ) dy		1030566	6					
ANR	1031008	CastExpression	( int ) dy		1030566	0					
ANR	1031009	CastTarget	int		1030566	0					
ANR	1031010	Identifier	dy		1030566	1					
ANR	1031011	Argument	rast -> width		1030566	7					
ANR	1031012	PtrMemberAccess	rast -> width		1030566	0					
ANR	1031013	Identifier	rast		1030566	0					
ANR	1031014	Identifier	width		1030566	1					
ANR	1031015	Argument	rast -> height		1030566	8					
ANR	1031016	PtrMemberAccess	rast -> height		1030566	0					
ANR	1031017	Identifier	rast		1030566	0					
ANR	1031018	Identifier	height		1030566	1					
ANR	1031019	Argument	pdcolor		1030566	9					
ANR	1031020	Identifier	pdcolor		1030566	0					
ANR	1031021	Argument	1		1030566	10					
ANR	1031022	PrimaryExpression	1		1030566	0					
ANR	1031023	Argument	rop3_default		1030566	11					
ANR	1031024	Identifier	rop3_default		1030566	0					
ANR	1031025	Argument	pcpath		1030566	12					
ANR	1031026	Identifier	pcpath		1030566	0					
ANR	1031027	IfStatement	if ( rast -> p != r )		1030566	8					
ANR	1031028	Condition	rast -> p != r	870:12:30727:30738	1030566	0	True				
ANR	1031029	EqualityExpression	rast -> p != r		1030566	0		!=			
ANR	1031030	PtrMemberAccess	rast -> p		1030566	0					
ANR	1031031	Identifier	rast		1030566	0					
ANR	1031032	Identifier	p		1030566	1					
ANR	1031033	Identifier	r		1030566	1					
ANR	1031034	CompoundStatement		84:26:3302:3302	1030566	1					
ANR	1031035	ExpressionStatement	"gs_free_object ( penum -> memory , r , ""fapi_finish_render_aux"" )"	871:12:30755:30813	1030566	0	True				
ANR	1031036	CallExpression	"gs_free_object ( penum -> memory , r , ""fapi_finish_render_aux"" )"		1030566	0					
ANR	1031037	Callee	gs_free_object		1030566	0					
ANR	1031038	Identifier	gs_free_object		1030566	0					
ANR	1031039	ArgumentList	penum -> memory		1030566	1					
ANR	1031040	Argument	penum -> memory		1030566	0					
ANR	1031041	PtrMemberAccess	penum -> memory		1030566	0					
ANR	1031042	Identifier	penum		1030566	0					
ANR	1031043	Identifier	memory		1030566	1					
ANR	1031044	Argument	r		1030566	1					
ANR	1031045	Identifier	r		1030566	0					
ANR	1031046	Argument	"""fapi_finish_render_aux"""		1030566	2					
ANR	1031047	PrimaryExpression	"""fapi_finish_render_aux"""		1030566	0					
ANR	1031048	ElseStatement	else		1030566	0					
ANR	1031049	CompoundStatement		101:8:3735:3749	1030566	0					
ANR	1031050	IdentifierDeclStatement	gs_memory_t * mem = penum -> memory -> non_gc_memory ;	875:8:30850:30897	1030566	0	True				
ANR	1031051	IdentifierDecl	* mem = penum -> memory -> non_gc_memory		1030566	0					
ANR	1031052	IdentifierDeclType	gs_memory_t *		1030566	0					
ANR	1031053	Identifier	mem		1030566	1					
ANR	1031054	AssignmentExpression	* mem = penum -> memory -> non_gc_memory		1030566	2		=			
ANR	1031055	Identifier	mem		1030566	0					
ANR	1031056	PtrMemberAccess	penum -> memory -> non_gc_memory		1030566	1					
ANR	1031057	PtrMemberAccess	penum -> memory		1030566	0					
ANR	1031058	Identifier	penum		1030566	0					
ANR	1031059	Identifier	memory		1030566	1					
ANR	1031060	Identifier	non_gc_memory		1030566	1					
ANR	1031061	IdentifierDeclStatement	gs_image_enum * pie ;	876:8:30907:30925	1030566	1	True				
ANR	1031062	IdentifierDecl	* pie		1030566	0					
ANR	1031063	IdentifierDeclType	gs_image_enum *		1030566	0					
ANR	1031064	Identifier	pie		1030566	1					
ANR	1031065	IdentifierDeclStatement	gs_image_t image ;	877:8:30935:30951	1030566	2	True				
ANR	1031066	IdentifierDecl	image		1030566	0					
ANR	1031067	IdentifierDeclType	gs_image_t		1030566	0					
ANR	1031068	Identifier	image		1030566	1					
ANR	1031069	IdentifierDeclStatement	"int iy , nbytes ;"	878:8:30961:30975	1030566	3	True				
ANR	1031070	IdentifierDecl	iy		1030566	0					
ANR	1031071	IdentifierDeclType	int		1030566	0					
ANR	1031072	Identifier	iy		1030566	1					
ANR	1031073	IdentifierDecl	nbytes		1030566	1					
ANR	1031074	IdentifierDeclType	int		1030566	0					
ANR	1031075	Identifier	nbytes		1030566	1					
ANR	1031076	IdentifierDeclStatement	uint used ;	879:8:30985:30994	1030566	4	True				
ANR	1031077	IdentifierDecl	used		1030566	0					
ANR	1031078	IdentifierDeclType	uint		1030566	0					
ANR	1031079	Identifier	used		1030566	1					
ANR	1031080	IdentifierDeclStatement	int code1 ;	880:8:31004:31013	1030566	5	True				
ANR	1031081	IdentifierDecl	code1		1030566	0					
ANR	1031082	IdentifierDeclType	int		1030566	0					
ANR	1031083	Identifier	code1		1030566	1					
ANR	1031084	IdentifierDeclStatement	"int w , h ;"	881:8:31023:31031	1030566	6	True				
ANR	1031085	IdentifierDecl	w		1030566	0					
ANR	1031086	IdentifierDeclType	int		1030566	0					
ANR	1031087	Identifier	w		1030566	1					
ANR	1031088	IdentifierDecl	h		1030566	1					
ANR	1031089	IdentifierDeclType	int		1030566	0					
ANR	1031090	Identifier	h		1030566	1					
ANR	1031091	IdentifierDeclStatement	int x = ( int ) dx ;	882:8:31041:31056	1030566	7	True				
ANR	1031092	IdentifierDecl	x = ( int ) dx		1030566	0					
ANR	1031093	IdentifierDeclType	int		1030566	0					
ANR	1031094	Identifier	x		1030566	1					
ANR	1031095	AssignmentExpression	x = ( int ) dx		1030566	2		=			
ANR	1031096	Identifier	x		1030566	0					
ANR	1031097	CastExpression	( int ) dx		1030566	1					
ANR	1031098	CastTarget	int		1030566	0					
ANR	1031099	Identifier	dx		1030566	1					
ANR	1031100	IdentifierDeclStatement	int y = ( int ) dy ;	883:8:31066:31081	1030566	8	True				
ANR	1031101	IdentifierDecl	y = ( int ) dy		1030566	0					
ANR	1031102	IdentifierDeclType	int		1030566	0					
ANR	1031103	Identifier	y		1030566	1					
ANR	1031104	AssignmentExpression	y = ( int ) dy		1030566	2		=			
ANR	1031105	Identifier	y		1030566	0					
ANR	1031106	CastExpression	( int ) dy		1030566	1					
ANR	1031107	CastTarget	int		1030566	0					
ANR	1031108	Identifier	dy		1030566	1					
ANR	1031109	IdentifierDeclStatement	uint bold = 0 ;	884:8:31091:31104	1030566	9	True				
ANR	1031110	IdentifierDecl	bold = 0		1030566	0					
ANR	1031111	IdentifierDeclType	uint		1030566	0					
ANR	1031112	Identifier	bold		1030566	1					
ANR	1031113	AssignmentExpression	bold = 0		1030566	2		=			
ANR	1031114	Identifier	bold		1030566	0					
ANR	1031115	PrimaryExpression	0		1030566	1					
ANR	1031116	IdentifierDeclStatement	byte * bold_lines = NULL ;	885:8:31114:31137	1030566	10	True				
ANR	1031117	IdentifierDecl	* bold_lines = NULL		1030566	0					
ANR	1031118	IdentifierDeclType	byte *		1030566	0					
ANR	1031119	Identifier	bold_lines		1030566	1					
ANR	1031120	AssignmentExpression	* bold_lines = NULL		1030566	2		=			
ANR	1031121	Identifier	NULL		1030566	0					
ANR	1031122	Identifier	NULL		1030566	1					
ANR	1031123	IdentifierDeclStatement	byte * line = NULL ;	886:8:31147:31164	1030566	11	True				
ANR	1031124	IdentifierDecl	* line = NULL		1030566	0					
ANR	1031125	IdentifierDeclType	byte *		1030566	0					
ANR	1031126	Identifier	line		1030566	1					
ANR	1031127	AssignmentExpression	* line = NULL		1030566	2		=			
ANR	1031128	Identifier	NULL		1030566	0					
ANR	1031129	Identifier	NULL		1030566	1					
ANR	1031130	IdentifierDeclStatement	int ascent = 0 ;	887:8:31174:31188	1030566	12	True				
ANR	1031131	IdentifierDecl	ascent = 0		1030566	0					
ANR	1031132	IdentifierDeclType	int		1030566	0					
ANR	1031133	Identifier	ascent		1030566	1					
ANR	1031134	AssignmentExpression	ascent = 0		1030566	2		=			
ANR	1031135	Identifier	ascent		1030566	0					
ANR	1031136	PrimaryExpression	0		1030566	1					
ANR	1031137	ExpressionStatement	"pie = gs_image_enum_alloc ( mem , ""image_char(image_enum)"" )"	889:8:31207:31263	1030566	13	True				
ANR	1031138	AssignmentExpression	"pie = gs_image_enum_alloc ( mem , ""image_char(image_enum)"" )"		1030566	0		=			
ANR	1031139	Identifier	pie		1030566	0					
ANR	1031140	CallExpression	"gs_image_enum_alloc ( mem , ""image_char(image_enum)"" )"		1030566	1					
ANR	1031141	Callee	gs_image_enum_alloc		1030566	0					
ANR	1031142	Identifier	gs_image_enum_alloc		1030566	0					
ANR	1031143	ArgumentList	mem		1030566	1					
ANR	1031144	Argument	mem		1030566	0					
ANR	1031145	Identifier	mem		1030566	0					
ANR	1031146	Argument	"""image_char(image_enum)"""		1030566	1					
ANR	1031147	PrimaryExpression	"""image_char(image_enum)"""		1030566	0					
ANR	1031148	IfStatement	if ( ! pie )		1030566	14					
ANR	1031149	Condition	! pie	890:12:31277:31280	1030566	0	True				
ANR	1031150	UnaryOperationExpression	! pie		1030566	0					
ANR	1031151	UnaryOperator	!		1030566	0					
ANR	1031152	Identifier	pie		1030566	1					
ANR	1031153	CompoundStatement		104:18:3844:3844	1030566	1					
ANR	1031154	ExpressionStatement	return_error ( gs_error_VMerror )	891:12:31297:31327	1030566	0	True				
ANR	1031155	CallExpression	return_error ( gs_error_VMerror )		1030566	0					
ANR	1031156	Callee	return_error		1030566	0					
ANR	1031157	Identifier	return_error		1030566	0					
ANR	1031158	ArgumentList	gs_error_VMerror		1030566	1					
ANR	1031159	Argument	gs_error_VMerror		1030566	0					
ANR	1031160	Identifier	gs_error_VMerror		1030566	0					
ANR	1031161	ExpressionStatement	w = rast -> width	894:8:31348:31363	1030566	15	True				
ANR	1031162	AssignmentExpression	w = rast -> width		1030566	0		=			
ANR	1031163	Identifier	w		1030566	0					
ANR	1031164	PtrMemberAccess	rast -> width		1030566	1					
ANR	1031165	Identifier	rast		1030566	0					
ANR	1031166	Identifier	width		1030566	1					
ANR	1031167	ExpressionStatement	h = rast -> height	895:8:31373:31389	1030566	16	True				
ANR	1031168	AssignmentExpression	h = rast -> height		1030566	0		=			
ANR	1031169	Identifier	h		1030566	0					
ANR	1031170	PtrMemberAccess	rast -> height		1030566	1					
ANR	1031171	Identifier	rast		1030566	0					
ANR	1031172	Identifier	height		1030566	1					
ANR	1031173	IfStatement	if ( I -> ff . embolden != 0.0 )		1030566	17					
ANR	1031174	Condition	I -> ff . embolden != 0.0	896:12:31403:31423	1030566	0	True				
ANR	1031175	EqualityExpression	I -> ff . embolden != 0.0		1030566	0		!=			
ANR	1031176	MemberAccess	I -> ff . embolden		1030566	0					
ANR	1031177	PtrMemberAccess	I -> ff		1030566	0					
ANR	1031178	Identifier	I		1030566	0					
ANR	1031179	Identifier	ff		1030566	1					
ANR	1031180	Identifier	embolden		1030566	1					
ANR	1031181	PrimaryExpression	0.0		1030566	1					
ANR	1031182	CompoundStatement		110:35:3987:3987	1030566	1					
ANR	1031183	ExpressionStatement	bold = ( uint ) ( 2 * h * I -> ff . embolden + 0.5 )	897:12:31440:31483	1030566	0	True				
ANR	1031184	AssignmentExpression	bold = ( uint ) ( 2 * h * I -> ff . embolden + 0.5 )		1030566	0		=			
ANR	1031185	Identifier	bold		1030566	0					
ANR	1031186	CastExpression	( uint ) ( 2 * h * I -> ff . embolden + 0.5 )		1030566	1					
ANR	1031187	CastTarget	uint		1030566	0					
ANR	1031188	AdditiveExpression	2 * h * I -> ff . embolden + 0.5		1030566	1		+			
ANR	1031189	MultiplicativeExpression	2 * h * I -> ff . embolden		1030566	0		*			
ANR	1031190	PrimaryExpression	2		1030566	0					
ANR	1031191	MultiplicativeExpression	h * I -> ff . embolden		1030566	1		*			
ANR	1031192	Identifier	h		1030566	0					
ANR	1031193	MemberAccess	I -> ff . embolden		1030566	1					
ANR	1031194	PtrMemberAccess	I -> ff		1030566	0					
ANR	1031195	Identifier	I		1030566	0					
ANR	1031196	Identifier	ff		1030566	1					
ANR	1031197	Identifier	embolden		1030566	1					
ANR	1031198	PrimaryExpression	0.5		1030566	1					
ANR	1031199	ExpressionStatement	ascent += bold	898:12:31497:31511	1030566	1	True				
ANR	1031200	AssignmentExpression	ascent += bold		1030566	0		+=			
ANR	1031201	Identifier	ascent		1030566	0					
ANR	1031202	Identifier	bold		1030566	1					
ANR	1031203	ExpressionStatement	"bold_lines = alloc_bold_lines ( pgs -> memory , w , bold , ""fapi_image_uncached_glyph(bold_line)"" )"	899:12:31525:31616	1030566	2	True				
ANR	1031204	AssignmentExpression	"bold_lines = alloc_bold_lines ( pgs -> memory , w , bold , ""fapi_image_uncached_glyph(bold_line)"" )"		1030566	0		=			
ANR	1031205	Identifier	bold_lines		1030566	0					
ANR	1031206	CallExpression	"alloc_bold_lines ( pgs -> memory , w , bold , ""fapi_image_uncached_glyph(bold_line)"" )"		1030566	1					
ANR	1031207	Callee	alloc_bold_lines		1030566	0					
ANR	1031208	Identifier	alloc_bold_lines		1030566	0					
ANR	1031209	ArgumentList	pgs -> memory		1030566	1					
ANR	1031210	Argument	pgs -> memory		1030566	0					
ANR	1031211	PtrMemberAccess	pgs -> memory		1030566	0					
ANR	1031212	Identifier	pgs		1030566	0					
ANR	1031213	Identifier	memory		1030566	1					
ANR	1031214	Argument	w		1030566	1					
ANR	1031215	Identifier	w		1030566	0					
ANR	1031216	Argument	bold		1030566	2					
ANR	1031217	Identifier	bold		1030566	0					
ANR	1031218	Argument	"""fapi_image_uncached_glyph(bold_line)"""		1030566	3					
ANR	1031219	PrimaryExpression	"""fapi_image_uncached_glyph(bold_line)"""		1030566	0					
ANR	1031220	IfStatement	if ( bold_lines == NULL )		1030566	3					
ANR	1031221	Condition	bold_lines == NULL	900:16:31634:31651	1030566	0	True				
ANR	1031222	EqualityExpression	bold_lines == NULL		1030566	0		==			
ANR	1031223	Identifier	bold_lines		1030566	0					
ANR	1031224	Identifier	NULL		1030566	1					
ANR	1031225	CompoundStatement		114:36:4215:4215	1030566	1					
ANR	1031226	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	901:16:31672:31710	1030566	0	True				
ANR	1031227	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1030566	0		=			
ANR	1031228	Identifier	code		1030566	0					
ANR	1031229	CallExpression	gs_note_error ( gs_error_VMerror )		1030566	1					
ANR	1031230	Callee	gs_note_error		1030566	0					
ANR	1031231	Identifier	gs_note_error		1030566	0					
ANR	1031232	ArgumentList	gs_error_VMerror		1030566	1					
ANR	1031233	Argument	gs_error_VMerror		1030566	0					
ANR	1031234	Identifier	gs_error_VMerror		1030566	0					
ANR	1031235	ReturnStatement	return ( code ) ;	902:16:31728:31740	1030566	1	True				
ANR	1031236	Identifier	code		1030566	0					
ANR	1031237	ExpressionStatement	"line = gs_alloc_byte_array ( pgs -> memory , 1 , bitmap_raster ( w + bold ) + 1 , ""fapi_copy_mono"" )"	904:12:31768:31857	1030566	4	True				
ANR	1031238	AssignmentExpression	"line = gs_alloc_byte_array ( pgs -> memory , 1 , bitmap_raster ( w + bold ) + 1 , ""fapi_copy_mono"" )"		1030566	0		=			
ANR	1031239	Identifier	line		1030566	0					
ANR	1031240	CallExpression	"gs_alloc_byte_array ( pgs -> memory , 1 , bitmap_raster ( w + bold ) + 1 , ""fapi_copy_mono"" )"		1030566	1					
ANR	1031241	Callee	gs_alloc_byte_array		1030566	0					
ANR	1031242	Identifier	gs_alloc_byte_array		1030566	0					
ANR	1031243	ArgumentList	pgs -> memory		1030566	1					
ANR	1031244	Argument	pgs -> memory		1030566	0					
ANR	1031245	PtrMemberAccess	pgs -> memory		1030566	0					
ANR	1031246	Identifier	pgs		1030566	0					
ANR	1031247	Identifier	memory		1030566	1					
ANR	1031248	Argument	1		1030566	1					
ANR	1031249	PrimaryExpression	1		1030566	0					
ANR	1031250	Argument	bitmap_raster ( w + bold ) + 1		1030566	2					
ANR	1031251	AdditiveExpression	bitmap_raster ( w + bold ) + 1		1030566	0		+			
ANR	1031252	CallExpression	bitmap_raster ( w + bold )		1030566	0					
ANR	1031253	Callee	bitmap_raster		1030566	0					
ANR	1031254	Identifier	bitmap_raster		1030566	0					
ANR	1031255	ArgumentList	w + bold		1030566	1					
ANR	1031256	Argument	w + bold		1030566	0					
ANR	1031257	AdditiveExpression	w + bold		1030566	0		+			
ANR	1031258	Identifier	w		1030566	0					
ANR	1031259	Identifier	bold		1030566	1					
ANR	1031260	PrimaryExpression	1		1030566	1					
ANR	1031261	Argument	"""fapi_copy_mono"""		1030566	3					
ANR	1031262	PrimaryExpression	"""fapi_copy_mono"""		1030566	0					
ANR	1031263	IfStatement	if ( line == 0 )		1030566	5					
ANR	1031264	Condition	line == 0	905:16:31875:31883	1030566	0	True				
ANR	1031265	EqualityExpression	line == 0		1030566	0		==			
ANR	1031266	Identifier	line		1030566	0					
ANR	1031267	PrimaryExpression	0		1030566	1					
ANR	1031268	CompoundStatement		119:27:4447:4447	1030566	1					
ANR	1031269	ExpressionStatement	"gs_free_object ( pgs -> memory , bold_lines , ""fapi_image_uncached_glyph(bold_lines)"" )"	906:16:31904:31984	1030566	0	True				
ANR	1031270	CallExpression	"gs_free_object ( pgs -> memory , bold_lines , ""fapi_image_uncached_glyph(bold_lines)"" )"		1030566	0					
ANR	1031271	Callee	gs_free_object		1030566	0					
ANR	1031272	Identifier	gs_free_object		1030566	0					
ANR	1031273	ArgumentList	pgs -> memory		1030566	1					
ANR	1031274	Argument	pgs -> memory		1030566	0					
ANR	1031275	PtrMemberAccess	pgs -> memory		1030566	0					
ANR	1031276	Identifier	pgs		1030566	0					
ANR	1031277	Identifier	memory		1030566	1					
ANR	1031278	Argument	bold_lines		1030566	1					
ANR	1031279	Identifier	bold_lines		1030566	0					
ANR	1031280	Argument	"""fapi_image_uncached_glyph(bold_lines)"""		1030566	2					
ANR	1031281	PrimaryExpression	"""fapi_image_uncached_glyph(bold_lines)"""		1030566	0					
ANR	1031282	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	907:16:32002:32040	1030566	1	True				
ANR	1031283	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1030566	0		=			
ANR	1031284	Identifier	code		1030566	0					
ANR	1031285	CallExpression	gs_note_error ( gs_error_VMerror )		1030566	1					
ANR	1031286	Callee	gs_note_error		1030566	0					
ANR	1031287	Identifier	gs_note_error		1030566	0					
ANR	1031288	ArgumentList	gs_error_VMerror		1030566	1					
ANR	1031289	Argument	gs_error_VMerror		1030566	0					
ANR	1031290	Identifier	gs_error_VMerror		1030566	0					
ANR	1031291	ReturnStatement	return ( code ) ;	908:16:32058:32070	1030566	2	True				
ANR	1031292	Identifier	code		1030566	0					
ANR	1031293	ExpressionStatement	"gs_image_t_init_mask ( & image , true )"	914:8:32206:32240	1030566	18	True				
ANR	1031294	CallExpression	"gs_image_t_init_mask ( & image , true )"		1030566	0					
ANR	1031295	Callee	gs_image_t_init_mask		1030566	0					
ANR	1031296	Identifier	gs_image_t_init_mask		1030566	0					
ANR	1031297	ArgumentList	& image		1030566	1					
ANR	1031298	Argument	& image		1030566	0					
ANR	1031299	UnaryOperationExpression	& image		1030566	0					
ANR	1031300	UnaryOperator	&		1030566	0					
ANR	1031301	Identifier	image		1030566	1					
ANR	1031302	Argument	true		1030566	1					
ANR	1031303	Identifier	true		1030566	0					
ANR	1031304	ExpressionStatement	"gs_make_translation ( ( double ) - x , ( double ) ( - y + ascent ) , & image . ImageMatrix )"	915:8:32250:32328	1030566	19	True				
ANR	1031305	CallExpression	"gs_make_translation ( ( double ) - x , ( double ) ( - y + ascent ) , & image . ImageMatrix )"		1030566	0					
ANR	1031306	Callee	gs_make_translation		1030566	0					
ANR	1031307	Identifier	gs_make_translation		1030566	0					
ANR	1031308	ArgumentList	( double ) - x		1030566	1					
ANR	1031309	Argument	( double ) - x		1030566	0					
ANR	1031310	CastExpression	( double ) - x		1030566	0					
ANR	1031311	CastTarget	double		1030566	0					
ANR	1031312	UnaryOperationExpression	- x		1030566	1					
ANR	1031313	UnaryOperator	-		1030566	0					
ANR	1031314	Identifier	x		1030566	1					
ANR	1031315	Argument	( double ) ( - y + ascent )		1030566	1					
ANR	1031316	CastExpression	( double ) ( - y + ascent )		1030566	0					
ANR	1031317	CastTarget	double		1030566	0					
ANR	1031318	AdditiveExpression	- y + ascent		1030566	1		+			
ANR	1031319	UnaryOperationExpression	- y		1030566	0					
ANR	1031320	UnaryOperator	-		1030566	0					
ANR	1031321	Identifier	y		1030566	1					
ANR	1031322	Identifier	ascent		1030566	1					
ANR	1031323	Argument	& image . ImageMatrix		1030566	2					
ANR	1031324	UnaryOperationExpression	& image . ImageMatrix		1030566	0					
ANR	1031325	UnaryOperator	&		1030566	0					
ANR	1031326	MemberAccess	image . ImageMatrix		1030566	1					
ANR	1031327	Identifier	image		1030566	0					
ANR	1031328	Identifier	ImageMatrix		1030566	1					
ANR	1031329	ExpressionStatement	"gs_matrix_multiply ( & ctm_only ( penum_pgs ) , & image . ImageMatrix , & image . ImageMatrix )"	916:8:32338:32418	1030566	20	True				
ANR	1031330	CallExpression	"gs_matrix_multiply ( & ctm_only ( penum_pgs ) , & image . ImageMatrix , & image . ImageMatrix )"		1030566	0					
ANR	1031331	Callee	gs_matrix_multiply		1030566	0					
ANR	1031332	Identifier	gs_matrix_multiply		1030566	0					
ANR	1031333	ArgumentList	& ctm_only ( penum_pgs )		1030566	1					
ANR	1031334	Argument	& ctm_only ( penum_pgs )		1030566	0					
ANR	1031335	UnaryOperationExpression	& ctm_only ( penum_pgs )		1030566	0					
ANR	1031336	UnaryOperator	&		1030566	0					
ANR	1031337	CallExpression	ctm_only ( penum_pgs )		1030566	1					
ANR	1031338	Callee	ctm_only		1030566	0					
ANR	1031339	Identifier	ctm_only		1030566	0					
ANR	1031340	ArgumentList	penum_pgs		1030566	1					
ANR	1031341	Argument	penum_pgs		1030566	0					
ANR	1031342	Identifier	penum_pgs		1030566	0					
ANR	1031343	Argument	& image . ImageMatrix		1030566	1					
ANR	1031344	UnaryOperationExpression	& image . ImageMatrix		1030566	0					
ANR	1031345	UnaryOperator	&		1030566	0					
ANR	1031346	MemberAccess	image . ImageMatrix		1030566	1					
ANR	1031347	Identifier	image		1030566	0					
ANR	1031348	Identifier	ImageMatrix		1030566	1					
ANR	1031349	Argument	& image . ImageMatrix		1030566	2					
ANR	1031350	UnaryOperationExpression	& image . ImageMatrix		1030566	0					
ANR	1031351	UnaryOperator	&		1030566	0					
ANR	1031352	MemberAccess	image . ImageMatrix		1030566	1					
ANR	1031353	Identifier	image		1030566	0					
ANR	1031354	Identifier	ImageMatrix		1030566	1					
ANR	1031355	ExpressionStatement	image . Width = w + bold	917:8:32428:32450	1030566	21	True				
ANR	1031356	AssignmentExpression	image . Width = w + bold		1030566	0		=			
ANR	1031357	MemberAccess	image . Width		1030566	0					
ANR	1031358	Identifier	image		1030566	0					
ANR	1031359	Identifier	Width		1030566	1					
ANR	1031360	AdditiveExpression	w + bold		1030566	1		+			
ANR	1031361	Identifier	w		1030566	0					
ANR	1031362	Identifier	bold		1030566	1					
ANR	1031363	ExpressionStatement	image . Height = h + bold	918:8:32460:32483	1030566	22	True				
ANR	1031364	AssignmentExpression	image . Height = h + bold		1030566	0		=			
ANR	1031365	MemberAccess	image . Height		1030566	0					
ANR	1031366	Identifier	image		1030566	0					
ANR	1031367	Identifier	Height		1030566	1					
ANR	1031368	AdditiveExpression	h + bold		1030566	1		+			
ANR	1031369	Identifier	h		1030566	0					
ANR	1031370	Identifier	bold		1030566	1					
ANR	1031371	ExpressionStatement	image . adjust = false	919:8:32493:32513	1030566	23	True				
ANR	1031372	AssignmentExpression	image . adjust = false		1030566	0		=			
ANR	1031373	MemberAccess	image . adjust		1030566	0					
ANR	1031374	Identifier	image		1030566	0					
ANR	1031375	Identifier	adjust		1030566	1					
ANR	1031376	Identifier	false		1030566	1					
ANR	1031377	ExpressionStatement	"code = gs_image_init ( pie , & image , false , true , penum_pgs )"	920:8:32523:32580	1030566	24	True				
ANR	1031378	AssignmentExpression	"code = gs_image_init ( pie , & image , false , true , penum_pgs )"		1030566	0		=			
ANR	1031379	Identifier	code		1030566	0					
ANR	1031380	CallExpression	"gs_image_init ( pie , & image , false , true , penum_pgs )"		1030566	1					
ANR	1031381	Callee	gs_image_init		1030566	0					
ANR	1031382	Identifier	gs_image_init		1030566	0					
ANR	1031383	ArgumentList	pie		1030566	1					
ANR	1031384	Argument	pie		1030566	0					
ANR	1031385	Identifier	pie		1030566	0					
ANR	1031386	Argument	& image		1030566	1					
ANR	1031387	UnaryOperationExpression	& image		1030566	0					
ANR	1031388	UnaryOperator	&		1030566	0					
ANR	1031389	Identifier	image		1030566	1					
ANR	1031390	Argument	false		1030566	2					
ANR	1031391	Identifier	false		1030566	0					
ANR	1031392	Argument	true		1030566	3					
ANR	1031393	Identifier	true		1030566	0					
ANR	1031394	Argument	penum_pgs		1030566	4					
ANR	1031395	Identifier	penum_pgs		1030566	0					
ANR	1031396	ExpressionStatement	nbytes = ( rast -> width + 7 ) >> 3	921:8:32590:32621	1030566	25	True				
ANR	1031397	AssignmentExpression	nbytes = ( rast -> width + 7 ) >> 3		1030566	0		=			
ANR	1031398	Identifier	nbytes		1030566	0					
ANR	1031399	ShiftExpression	( rast -> width + 7 ) >> 3		1030566	1		>>			
ANR	1031400	AdditiveExpression	rast -> width + 7		1030566	0		+			
ANR	1031401	PtrMemberAccess	rast -> width		1030566	0					
ANR	1031402	Identifier	rast		1030566	0					
ANR	1031403	Identifier	width		1030566	1					
ANR	1031404	PrimaryExpression	7		1030566	1					
ANR	1031405	PrimaryExpression	3		1030566	1					
ANR	1031406	SwitchStatement	switch ( code )		1030566	26					
ANR	1031407	Condition	code	923:16:32640:32643	1030566	0	True				
ANR	1031408	Identifier	code		1030566	0					
ANR	1031409	CompoundStatement		137:22:5207:5207	1030566	1					
ANR	1031410	Label	case 1 :	924:12:32660:32666	1030566	0	True				
ANR	1031411	ExpressionStatement	code = 0	925:16:32713:32721	1030566	1	True				
ANR	1031412	AssignmentExpression	code = 0		1030566	0		=			
ANR	1031413	Identifier	code		1030566	0					
ANR	1031414	PrimaryExpression	0		1030566	1					
ANR	1031415	Label	default :	926:12:32735:32742	1030566	2	True				
ANR	1031416	Identifier	default		1030566	0					
ANR	1031417	BreakStatement	break ;	927:16:32760:32765	1030566	3	True				
ANR	1031418	Label	case 0 :	928:12:32779:32785	1030566	4	True				
ANR	1031419	IfStatement	if ( bold == 0 )		1030566	5					
ANR	1031420	Condition	bold == 0	929:20:32807:32815	1030566	0	True				
ANR	1031421	EqualityExpression	bold == 0		1030566	0		==			
ANR	1031422	Identifier	bold		1030566	0					
ANR	1031423	PrimaryExpression	0		1030566	1					
ANR	1031424	CompoundStatement		143:31:5379:5379	1030566	1					
ANR	1031425	ForStatement	"for ( iy = 0 ; iy < h && code >= 0 ; iy ++ , r += sstr )"		1030566	0					
ANR	1031426	ForInit	iy = 0 ;	930:25:32845:32851	1030566	0	True				
ANR	1031427	AssignmentExpression	iy = 0		1030566	0		=			
ANR	1031428	Identifier	iy		1030566	0					
ANR	1031429	PrimaryExpression	0		1030566	1					
ANR	1031430	Condition	iy < h && code >= 0	930:33:32853:32871	1030566	1	True				
ANR	1031431	AndExpression	iy < h && code >= 0		1030566	0		&&			
ANR	1031432	RelationalExpression	iy < h		1030566	0		<			
ANR	1031433	Identifier	iy		1030566	0					
ANR	1031434	Identifier	h		1030566	1					
ANR	1031435	RelationalExpression	code >= 0		1030566	1		>=			
ANR	1031436	Identifier	code		1030566	0					
ANR	1031437	PrimaryExpression	0		1030566	1					
ANR	1031438	Expression	"iy ++ , r += sstr"	930:54:32874:32888	1030566	2	True				
ANR	1031439	PostIncDecOperationExpression	iy ++		1030566	0					
ANR	1031440	Identifier	iy		1030566	0					
ANR	1031441	IncDec	++		1030566	1					
ANR	1031442	AssignmentExpression	r += sstr		1030566	1		+=			
ANR	1031443	Identifier	r		1030566	0					
ANR	1031444	Identifier	sstr		1030566	1					
ANR	1031445	CompoundStatement		144:71:5452:5452	1030566	3					
ANR	1031446	ExpressionStatement	"code = gs_image_next ( pie , r , nbytes , & used )"	931:24:32917:32960	1030566	0	True				
ANR	1031447	AssignmentExpression	"code = gs_image_next ( pie , r , nbytes , & used )"		1030566	0		=			
ANR	1031448	Identifier	code		1030566	0					
ANR	1031449	CallExpression	"gs_image_next ( pie , r , nbytes , & used )"		1030566	1					
ANR	1031450	Callee	gs_image_next		1030566	0					
ANR	1031451	Identifier	gs_image_next		1030566	0					
ANR	1031452	ArgumentList	pie		1030566	1					
ANR	1031453	Argument	pie		1030566	0					
ANR	1031454	Identifier	pie		1030566	0					
ANR	1031455	Argument	r		1030566	1					
ANR	1031456	Identifier	r		1030566	0					
ANR	1031457	Argument	nbytes		1030566	2					
ANR	1031458	Identifier	nbytes		1030566	0					
ANR	1031459	Argument	& used		1030566	3					
ANR	1031460	UnaryOperationExpression	& used		1030566	0					
ANR	1031461	UnaryOperator	&		1030566	0					
ANR	1031462	Identifier	used		1030566	1					
ANR	1031463	ElseStatement	else		1030566	0					
ANR	1031464	CompoundStatement		151:20:5735:5752	1030566	0					
ANR	1031465	IdentifierDeclStatement	uint dest_raster = bitmap_raster ( image . Width ) ;	935:20:33045:33090	1030566	0	True				
ANR	1031466	IdentifierDecl	dest_raster = bitmap_raster ( image . Width )		1030566	0					
ANR	1031467	IdentifierDeclType	uint		1030566	0					
ANR	1031468	Identifier	dest_raster		1030566	1					
ANR	1031469	AssignmentExpression	dest_raster = bitmap_raster ( image . Width )		1030566	2		=			
ANR	1031470	Identifier	dest_raster		1030566	0					
ANR	1031471	CallExpression	bitmap_raster ( image . Width )		1030566	1					
ANR	1031472	Callee	bitmap_raster		1030566	0					
ANR	1031473	Identifier	bitmap_raster		1030566	0					
ANR	1031474	ArgumentList	image . Width		1030566	1					
ANR	1031475	Argument	image . Width		1030566	0					
ANR	1031476	MemberAccess	image . Width		1030566	0					
ANR	1031477	Identifier	image		1030566	0					
ANR	1031478	Identifier	Width		1030566	1					
ANR	1031479	IdentifierDeclStatement	uint dest_bytes = ( image . Width + 7 ) >> 3 ;	936:20:33112:33152	1030566	1	True				
ANR	1031480	IdentifierDecl	dest_bytes = ( image . Width + 7 ) >> 3		1030566	0					
ANR	1031481	IdentifierDeclType	uint		1030566	0					
ANR	1031482	Identifier	dest_bytes		1030566	1					
ANR	1031483	AssignmentExpression	dest_bytes = ( image . Width + 7 ) >> 3		1030566	2		=			
ANR	1031484	Identifier	dest_bytes		1030566	0					
ANR	1031485	ShiftExpression	( image . Width + 7 ) >> 3		1030566	1		>>			
ANR	1031486	AdditiveExpression	image . Width + 7		1030566	0		+			
ANR	1031487	MemberAccess	image . Width		1030566	0					
ANR	1031488	Identifier	image		1030566	0					
ANR	1031489	Identifier	Width		1030566	1					
ANR	1031490	PrimaryExpression	7		1030566	1					
ANR	1031491	PrimaryExpression	3		1030566	1					
ANR	1031492	IdentifierDeclStatement	int n1 = bold + 1 ;	937:20:33174:33191	1030566	2	True				
ANR	1031493	IdentifierDecl	n1 = bold + 1		1030566	0					
ANR	1031494	IdentifierDeclType	int		1030566	0					
ANR	1031495	Identifier	n1		1030566	1					
ANR	1031496	AssignmentExpression	n1 = bold + 1		1030566	2		=			
ANR	1031497	Identifier	n1		1030566	0					
ANR	1031498	AdditiveExpression	bold + 1		1030566	1		+			
ANR	1031499	Identifier	bold		1030566	0					
ANR	1031500	PrimaryExpression	1		1030566	1					
ANR	1031501	Statement	define	938:1:33194:33199	1030566	3	True				
ANR	1031502	Statement	merged_line	938:8:33201:33211	1030566	4	True				
ANR	1031503	Statement	(	938:19:33212:33212	1030566	5	True				
ANR	1031504	Statement	i	938:20:33213:33213	1030566	6	True				
ANR	1031505	Statement	)	938:21:33214:33214	1030566	7	True				
ANR	1031506	Statement	(	938:23:33216:33216	1030566	8	True				
ANR	1031507	Statement	bold_lines	938:24:33217:33226	1030566	9	True				
ANR	1031508	Statement	+	938:35:33228:33228	1030566	10	True				
ANR	1031509	Statement	(	938:37:33230:33230	1030566	11	True				
ANR	1031510	Statement	(	938:38:33231:33231	1030566	12	True				
ANR	1031511	Statement	i	938:39:33232:33232	1030566	13	True				
ANR	1031512	Statement	)	938:40:33233:33233	1030566	14	True				
ANR	1031513	Statement	%	938:42:33235:33235	1030566	15	True				
ANR	1031514	Statement	n1	938:44:33237:33238	1030566	16	True				
ANR	1031515	Statement	+	938:47:33240:33240	1030566	17	True				
ANR	1031516	Statement	1	938:49:33242:33242	1030566	18	True				
ANR	1031517	Statement	)	938:50:33243:33243	1030566	19	True				
ANR	1031518	Statement	*	938:52:33245:33245	1030566	20	True				
ANR	1031519	Statement	dest_raster	938:54:33247:33257	1030566	21	True				
ANR	1031520	Statement	)	938:65:33258:33258	1030566	22	True				
ANR	1031521	ForStatement	for ( y = 0 ; y < image . Height ; y ++ )		1030566	23					
ANR	1031522	ForInit	y = 0 ;	940:26:33287:33292	1030566	0	True				
ANR	1031523	AssignmentExpression	y = 0		1030566	0		=			
ANR	1031524	Identifier	y		1030566	0					
ANR	1031525	PrimaryExpression	0		1030566	1					
ANR	1031526	Condition	y < image . Height	940:33:33294:33309	1030566	1	True				
ANR	1031527	RelationalExpression	y < image . Height		1030566	0		<			
ANR	1031528	Identifier	y		1030566	0					
ANR	1031529	MemberAccess	image . Height		1030566	1					
ANR	1031530	Identifier	image		1030566	0					
ANR	1031531	Identifier	Height		1030566	1					
ANR	1031532	PostIncDecOperationExpression	y ++	940:51:33312:33314	1030566	2	True				
ANR	1031533	Identifier	y		1030566	0					
ANR	1031534	IncDec	++		1030566	1					
ANR	1031535	CompoundStatement		158:24:6059:6076	1030566	3					
ANR	1031536	IdentifierDeclStatement	int y0 = ( y < bold ? 0 : y - bold ) ;	941:24:33344:33378	1030566	0	True				
ANR	1031537	IdentifierDecl	y0 = ( y < bold ? 0 : y - bold )		1030566	0					
ANR	1031538	IdentifierDeclType	int		1030566	0					
ANR	1031539	Identifier	y0		1030566	1					
ANR	1031540	AssignmentExpression	y0 = ( y < bold ? 0 : y - bold )		1030566	2		=			
ANR	1031541	Identifier	y0		1030566	0					
ANR	1031542	ConditionalExpression	y < bold ? 0 : y - bold		1030566	1					
ANR	1031543	Condition	y < bold		1030566	0					
ANR	1031544	RelationalExpression	y < bold		1030566	0		<			
ANR	1031545	Identifier	y		1030566	0					
ANR	1031546	Identifier	bold		1030566	1					
ANR	1031547	PrimaryExpression	0		1030566	1					
ANR	1031548	AdditiveExpression	y - bold		1030566	2		-			
ANR	1031549	Identifier	y		1030566	0					
ANR	1031550	Identifier	bold		1030566	1					
ANR	1031551	IdentifierDeclStatement	"int y1 = min ( y + 1 , rast -> height ) ;"	942:24:33404:33437	1030566	1	True				
ANR	1031552	IdentifierDecl	"y1 = min ( y + 1 , rast -> height )"		1030566	0					
ANR	1031553	IdentifierDeclType	int		1030566	0					
ANR	1031554	Identifier	y1		1030566	1					
ANR	1031555	AssignmentExpression	"y1 = min ( y + 1 , rast -> height )"		1030566	2		=			
ANR	1031556	Identifier	y1		1030566	0					
ANR	1031557	CallExpression	"min ( y + 1 , rast -> height )"		1030566	1					
ANR	1031558	Callee	min		1030566	0					
ANR	1031559	Identifier	min		1030566	0					
ANR	1031560	ArgumentList	y + 1		1030566	1					
ANR	1031561	Argument	y + 1		1030566	0					
ANR	1031562	AdditiveExpression	y + 1		1030566	0		+			
ANR	1031563	Identifier	y		1030566	0					
ANR	1031564	PrimaryExpression	1		1030566	1					
ANR	1031565	Argument	rast -> height		1030566	1					
ANR	1031566	PtrMemberAccess	rast -> height		1030566	0					
ANR	1031567	Identifier	rast		1030566	0					
ANR	1031568	Identifier	height		1030566	1					
ANR	1031569	IdentifierDeclStatement	int kmask ;	943:24:33463:33472	1030566	2	True				
ANR	1031570	IdentifierDecl	kmask		1030566	0					
ANR	1031571	IdentifierDeclType	int		1030566	0					
ANR	1031572	Identifier	kmask		1030566	1					
ANR	1031573	IdentifierDeclStatement	bool first = true ;	944:24:33498:33515	1030566	3	True				
ANR	1031574	IdentifierDecl	first = true		1030566	0					
ANR	1031575	IdentifierDeclType	bool		1030566	0					
ANR	1031576	Identifier	first		1030566	1					
ANR	1031577	AssignmentExpression	first = true		1030566	2		=			
ANR	1031578	Identifier	true		1030566	0					
ANR	1031579	Identifier	true		1030566	1					
ANR	1031580	IfStatement	if ( y < rast -> height )		1030566	4					
ANR	1031581	Condition	y < rast -> height	946:29:33547:33562	1030566	0	True				
ANR	1031582	RelationalExpression	y < rast -> height		1030566	0		<			
ANR	1031583	Identifier	y		1030566	0					
ANR	1031584	PtrMemberAccess	rast -> height		1030566	1					
ANR	1031585	Identifier	rast		1030566	0					
ANR	1031586	Identifier	height		1030566	1					
ANR	1031587	CompoundStatement		160:48:6127:6127	1030566	1					
ANR	1031588	ExpressionStatement	"memcpy ( line , r + y * rast -> line_step , rast -> line_step )"	947:28:33596:33650	1030566	0	True				
ANR	1031589	CallExpression	"memcpy ( line , r + y * rast -> line_step , rast -> line_step )"		1030566	0					
ANR	1031590	Callee	memcpy		1030566	0					
ANR	1031591	Identifier	memcpy		1030566	0					
ANR	1031592	ArgumentList	line		1030566	1					
ANR	1031593	Argument	line		1030566	0					
ANR	1031594	Identifier	line		1030566	0					
ANR	1031595	Argument	r + y * rast -> line_step		1030566	1					
ANR	1031596	AdditiveExpression	r + y * rast -> line_step		1030566	0		+			
ANR	1031597	Identifier	r		1030566	0					
ANR	1031598	MultiplicativeExpression	y * rast -> line_step		1030566	1		*			
ANR	1031599	Identifier	y		1030566	0					
ANR	1031600	PtrMemberAccess	rast -> line_step		1030566	1					
ANR	1031601	Identifier	rast		1030566	0					
ANR	1031602	Identifier	line_step		1030566	1					
ANR	1031603	Argument	rast -> line_step		1030566	2					
ANR	1031604	PtrMemberAccess	rast -> line_step		1030566	0					
ANR	1031605	Identifier	rast		1030566	0					
ANR	1031606	Identifier	line_step		1030566	1					
ANR	1031607	ExpressionStatement	"memset ( line + rast -> line_step , 0x00 , ( dest_raster + 1 ) - rast -> line_step )"	948:28:33680:33754	1030566	1	True				
ANR	1031608	CallExpression	"memset ( line + rast -> line_step , 0x00 , ( dest_raster + 1 ) - rast -> line_step )"		1030566	0					
ANR	1031609	Callee	memset		1030566	0					
ANR	1031610	Identifier	memset		1030566	0					
ANR	1031611	ArgumentList	line + rast -> line_step		1030566	1					
ANR	1031612	Argument	line + rast -> line_step		1030566	0					
ANR	1031613	AdditiveExpression	line + rast -> line_step		1030566	0		+			
ANR	1031614	Identifier	line		1030566	0					
ANR	1031615	PtrMemberAccess	rast -> line_step		1030566	1					
ANR	1031616	Identifier	rast		1030566	0					
ANR	1031617	Identifier	line_step		1030566	1					
ANR	1031618	Argument	0x00		1030566	1					
ANR	1031619	PrimaryExpression	0x00		1030566	0					
ANR	1031620	Argument	( dest_raster + 1 ) - rast -> line_step		1030566	2					
ANR	1031621	AdditiveExpression	( dest_raster + 1 ) - rast -> line_step		1030566	0		-			
ANR	1031622	AdditiveExpression	dest_raster + 1		1030566	0		+			
ANR	1031623	Identifier	dest_raster		1030566	0					
ANR	1031624	PrimaryExpression	1		1030566	1					
ANR	1031625	PtrMemberAccess	rast -> line_step		1030566	1					
ANR	1031626	Identifier	rast		1030566	0					
ANR	1031627	Identifier	line_step		1030566	1					
ANR	1031628	ExpressionStatement	"bits_smear_horizontally ( merged_line ( y ) , line , rast -> width , bold )"	950:28:33785:33849	1030566	2	True				
ANR	1031629	CallExpression	"bits_smear_horizontally ( merged_line ( y ) , line , rast -> width , bold )"		1030566	0					
ANR	1031630	Callee	bits_smear_horizontally		1030566	0					
ANR	1031631	Identifier	bits_smear_horizontally		1030566	0					
ANR	1031632	ArgumentList	merged_line ( y )		1030566	1					
ANR	1031633	Argument	merged_line ( y )		1030566	0					
ANR	1031634	CallExpression	merged_line ( y )		1030566	0					
ANR	1031635	Callee	merged_line		1030566	0					
ANR	1031636	Identifier	merged_line		1030566	0					
ANR	1031637	ArgumentList	y		1030566	1					
ANR	1031638	Argument	y		1030566	0					
ANR	1031639	Identifier	y		1030566	0					
ANR	1031640	Argument	line		1030566	1					
ANR	1031641	Identifier	line		1030566	0					
ANR	1031642	Argument	rast -> width		1030566	2					
ANR	1031643	PtrMemberAccess	rast -> width		1030566	0					
ANR	1031644	Identifier	rast		1030566	0					
ANR	1031645	Identifier	width		1030566	1					
ANR	1031646	Argument	bold		1030566	3					
ANR	1031647	Identifier	bold		1030566	0					
ANR	1031648	ExpressionStatement	kmask = 1	952:28:33958:33967	1030566	3	True				
ANR	1031649	AssignmentExpression	kmask = 1		1030566	0		=			
ANR	1031650	Identifier	kmask		1030566	0					
ANR	1031651	PrimaryExpression	1		1030566	1					
ANR	1031652	ForStatement	for ( ; ( y & kmask ) == kmask && y - kmask >= y0 ; kmask = ( kmask << 1 ) + 1 )		1030566	4					
ANR	1031653	Condition	( y & kmask ) == kmask && y - kmask >= y0	954:36:34006:34044	1030566	0	True				
ANR	1031654	AndExpression	( y & kmask ) == kmask && y - kmask >= y0		1030566	0		&&			
ANR	1031655	EqualityExpression	( y & kmask ) == kmask		1030566	0		==			
ANR	1031656	BitAndExpression	y & kmask		1030566	0		&			
ANR	1031657	Identifier	y		1030566	0					
ANR	1031658	Identifier	kmask		1030566	1					
ANR	1031659	Identifier	kmask		1030566	1					
ANR	1031660	RelationalExpression	y - kmask >= y0		1030566	1		>=			
ANR	1031661	AdditiveExpression	y - kmask		1030566	0		-			
ANR	1031662	Identifier	y		1030566	0					
ANR	1031663	Identifier	kmask		1030566	1					
ANR	1031664	Identifier	y0		1030566	1					
ANR	1031665	AssignmentExpression	kmask = ( kmask << 1 ) + 1	955:34:34081:34104	1030566	1	True	=			
ANR	1031666	Identifier	kmask		1030566	0					
ANR	1031667	AdditiveExpression	( kmask << 1 ) + 1		1030566	1		+			
ANR	1031668	ShiftExpression	kmask << 1		1030566	0		<<			
ANR	1031669	Identifier	kmask		1030566	0					
ANR	1031670	PrimaryExpression	1		1030566	1					
ANR	1031671	PrimaryExpression	1		1030566	1					
ANR	1031672	CompoundStatement		169:60:6668:6668	1030566	2					
ANR	1031673	ExpressionStatement	"bits_merge ( merged_line ( y - kmask ) , merged_line ( y - ( kmask >> 1 ) ) , dest_bytes )"	957:32:34142:34219	1030566	0	True				
ANR	1031674	CallExpression	"bits_merge ( merged_line ( y - kmask ) , merged_line ( y - ( kmask >> 1 ) ) , dest_bytes )"		1030566	0					
ANR	1031675	Callee	bits_merge		1030566	0					
ANR	1031676	Identifier	bits_merge		1030566	0					
ANR	1031677	ArgumentList	merged_line ( y - kmask )		1030566	1					
ANR	1031678	Argument	merged_line ( y - kmask )		1030566	0					
ANR	1031679	CallExpression	merged_line ( y - kmask )		1030566	0					
ANR	1031680	Callee	merged_line		1030566	0					
ANR	1031681	Identifier	merged_line		1030566	0					
ANR	1031682	ArgumentList	y - kmask		1030566	1					
ANR	1031683	Argument	y - kmask		1030566	0					
ANR	1031684	AdditiveExpression	y - kmask		1030566	0		-			
ANR	1031685	Identifier	y		1030566	0					
ANR	1031686	Identifier	kmask		1030566	1					
ANR	1031687	Argument	merged_line ( y - ( kmask >> 1 ) )		1030566	1					
ANR	1031688	CallExpression	merged_line ( y - ( kmask >> 1 ) )		1030566	0					
ANR	1031689	Callee	merged_line		1030566	0					
ANR	1031690	Identifier	merged_line		1030566	0					
ANR	1031691	ArgumentList	y - ( kmask >> 1 )		1030566	1					
ANR	1031692	Argument	y - ( kmask >> 1 )		1030566	0					
ANR	1031693	AdditiveExpression	y - ( kmask >> 1 )		1030566	0		-			
ANR	1031694	Identifier	y		1030566	0					
ANR	1031695	ShiftExpression	kmask >> 1		1030566	1		>>			
ANR	1031696	Identifier	kmask		1030566	0					
ANR	1031697	PrimaryExpression	1		1030566	1					
ANR	1031698	Argument	dest_bytes		1030566	2					
ANR	1031699	Identifier	dest_bytes		1030566	0					
ANR	1031700	ExpressionStatement	first = true	972:24:34958:34970	1030566	5	True				
ANR	1031701	AssignmentExpression	first = true		1030566	0		=			
ANR	1031702	Identifier	first		1030566	0					
ANR	1031703	Identifier	true		1030566	1					
ANR	1031704	ForStatement	for ( iy = y1 - 1 ; iy >= y0 ; -- iy )		1030566	6					
ANR	1031705	ForInit	iy = y1 - 1 ;	974:30:35003:35014	1030566	0	True				
ANR	1031706	AssignmentExpression	iy = y1 - 1		1030566	0		=			
ANR	1031707	Identifier	iy		1030566	0					
ANR	1031708	AdditiveExpression	y1 - 1		1030566	1		-			
ANR	1031709	Identifier	y1		1030566	0					
ANR	1031710	PrimaryExpression	1		1030566	1					
ANR	1031711	Condition	iy >= y0	974:43:35016:35023	1030566	1	True				
ANR	1031712	RelationalExpression	iy >= y0		1030566	0		>=			
ANR	1031713	Identifier	iy		1030566	0					
ANR	1031714	Identifier	y0		1030566	1					
ANR	1031715	UnaryExpression	-- iy	974:53:35026:35029	1030566	2	True				
ANR	1031716	IncDec	--		1030566	0					
ANR	1031717	Identifier	iy		1030566	1					
ANR	1031718	CompoundStatement		188:60:7594:7594	1030566	3					
ANR	1031719	ExpressionStatement	kmask = 1	975:26:35061:35070	1030566	0	True				
ANR	1031720	AssignmentExpression	kmask = 1		1030566	0		=			
ANR	1031721	Identifier	kmask		1030566	0					
ANR	1031722	PrimaryExpression	1		1030566	1					
ANR	1031723	WhileStatement	while ( ( iy & kmask ) == kmask && iy - kmask >= y0 )		1030566	1					
ANR	1031724	Condition	( iy & kmask ) == kmask && iy - kmask >= y0	977:34:35107:35147	1030566	0	True				
ANR	1031725	AndExpression	( iy & kmask ) == kmask && iy - kmask >= y0		1030566	0		&&			
ANR	1031726	EqualityExpression	( iy & kmask ) == kmask		1030566	0		==			
ANR	1031727	BitAndExpression	iy & kmask		1030566	0		&			
ANR	1031728	Identifier	iy		1030566	0					
ANR	1031729	Identifier	kmask		1030566	1					
ANR	1031730	Identifier	kmask		1030566	1					
ANR	1031731	RelationalExpression	iy - kmask >= y0		1030566	1		>=			
ANR	1031732	AdditiveExpression	iy - kmask		1030566	0		-			
ANR	1031733	Identifier	iy		1030566	0					
ANR	1031734	Identifier	kmask		1030566	1					
ANR	1031735	Identifier	y0		1030566	1					
ANR	1031736	ExpressionStatement	"iy -= kmask , kmask <<= 1"	978:28:35179:35203	1030566	1	True				
ANR	1031737	Expression	"iy -= kmask , kmask <<= 1"		1030566	0					
ANR	1031738	AssignmentExpression	iy -= kmask		1030566	0		-=			
ANR	1031739	Identifier	iy		1030566	0					
ANR	1031740	Identifier	kmask		1030566	1					
ANR	1031741	AssignmentExpression	kmask <<= 1		1030566	1		<<=			
ANR	1031742	Identifier	kmask		1030566	0					
ANR	1031743	PrimaryExpression	1		1030566	1					
ANR	1031744	IfStatement	if ( first )		1030566	2					
ANR	1031745	Condition	first	979:31:35236:35240	1030566	0	True				
ANR	1031746	Identifier	first		1030566	0					
ANR	1031747	CompoundStatement		193:39:7805:7805	1030566	1					
ANR	1031748	ExpressionStatement	"memcpy ( bold_lines , merged_line ( iy ) , dest_bytes )"	980:28:35274:35321	1030566	0	True				
ANR	1031749	CallExpression	"memcpy ( bold_lines , merged_line ( iy ) , dest_bytes )"		1030566	0					
ANR	1031750	Callee	memcpy		1030566	0					
ANR	1031751	Identifier	memcpy		1030566	0					
ANR	1031752	ArgumentList	bold_lines		1030566	1					
ANR	1031753	Argument	bold_lines		1030566	0					
ANR	1031754	Identifier	bold_lines		1030566	0					
ANR	1031755	Argument	merged_line ( iy )		1030566	1					
ANR	1031756	CallExpression	merged_line ( iy )		1030566	0					
ANR	1031757	Callee	merged_line		1030566	0					
ANR	1031758	Identifier	merged_line		1030566	0					
ANR	1031759	ArgumentList	iy		1030566	1					
ANR	1031760	Argument	iy		1030566	0					
ANR	1031761	Identifier	iy		1030566	0					
ANR	1031762	Argument	dest_bytes		1030566	2					
ANR	1031763	Identifier	dest_bytes		1030566	0					
ANR	1031764	ExpressionStatement	first = false	981:28:35351:35364	1030566	1	True				
ANR	1031765	AssignmentExpression	first = false		1030566	0		=			
ANR	1031766	Identifier	first		1030566	0					
ANR	1031767	Identifier	false		1030566	1					
ANR	1031768	ElseStatement	else		1030566	0					
ANR	1031769	ExpressionStatement	"bits_merge ( bold_lines , merged_line ( iy ) , dest_bytes )"	984:28:35453:35504	1030566	0	True				
ANR	1031770	CallExpression	"bits_merge ( bold_lines , merged_line ( iy ) , dest_bytes )"		1030566	0					
ANR	1031771	Callee	bits_merge		1030566	0					
ANR	1031772	Identifier	bits_merge		1030566	0					
ANR	1031773	ArgumentList	bold_lines		1030566	1					
ANR	1031774	Argument	bold_lines		1030566	0					
ANR	1031775	Identifier	bold_lines		1030566	0					
ANR	1031776	Argument	merged_line ( iy )		1030566	1					
ANR	1031777	CallExpression	merged_line ( iy )		1030566	0					
ANR	1031778	Callee	merged_line		1030566	0					
ANR	1031779	Identifier	merged_line		1030566	0					
ANR	1031780	ArgumentList	iy		1030566	1					
ANR	1031781	Argument	iy		1030566	0					
ANR	1031782	Identifier	iy		1030566	0					
ANR	1031783	Argument	dest_bytes		1030566	2					
ANR	1031784	Identifier	dest_bytes		1030566	0					
ANR	1031785	ExpressionStatement	"code = gs_image_next ( pie , bold_lines , dest_bytes , & used )"	986:24:35556:35612	1030566	7	True				
ANR	1031786	AssignmentExpression	"code = gs_image_next ( pie , bold_lines , dest_bytes , & used )"		1030566	0		=			
ANR	1031787	Identifier	code		1030566	0					
ANR	1031788	CallExpression	"gs_image_next ( pie , bold_lines , dest_bytes , & used )"		1030566	1					
ANR	1031789	Callee	gs_image_next		1030566	0					
ANR	1031790	Identifier	gs_image_next		1030566	0					
ANR	1031791	ArgumentList	pie		1030566	1					
ANR	1031792	Argument	pie		1030566	0					
ANR	1031793	Identifier	pie		1030566	0					
ANR	1031794	Argument	bold_lines		1030566	1					
ANR	1031795	Identifier	bold_lines		1030566	0					
ANR	1031796	Argument	dest_bytes		1030566	2					
ANR	1031797	Identifier	dest_bytes		1030566	0					
ANR	1031798	Argument	& used		1030566	3					
ANR	1031799	UnaryOperationExpression	& used		1030566	0					
ANR	1031800	UnaryOperator	&		1030566	0					
ANR	1031801	Identifier	used		1030566	1					
ANR	1031802	Statement	undef	989:1:35655:35659	1030566	6	True				
ANR	1031803	Statement	merged_line	989:7:35661:35671	1030566	7	True				
ANR	1031804	IfStatement	if ( bold_lines )		1030566	27					
ANR	1031805	Condition	bold_lines	992:12:35696:35705	1030566	0	True				
ANR	1031806	Identifier	bold_lines		1030566	0					
ANR	1031807	ExpressionStatement	"gs_free_object ( pgs -> memory , bold_lines , ""fapi_image_uncached_glyph(bold_lines)"" )"	993:12:35720:35800	1030566	1	True				
ANR	1031808	CallExpression	"gs_free_object ( pgs -> memory , bold_lines , ""fapi_image_uncached_glyph(bold_lines)"" )"		1030566	0					
ANR	1031809	Callee	gs_free_object		1030566	0					
ANR	1031810	Identifier	gs_free_object		1030566	0					
ANR	1031811	ArgumentList	pgs -> memory		1030566	1					
ANR	1031812	Argument	pgs -> memory		1030566	0					
ANR	1031813	PtrMemberAccess	pgs -> memory		1030566	0					
ANR	1031814	Identifier	pgs		1030566	0					
ANR	1031815	Identifier	memory		1030566	1					
ANR	1031816	Argument	bold_lines		1030566	1					
ANR	1031817	Identifier	bold_lines		1030566	0					
ANR	1031818	Argument	"""fapi_image_uncached_glyph(bold_lines)"""		1030566	2					
ANR	1031819	PrimaryExpression	"""fapi_image_uncached_glyph(bold_lines)"""		1030566	0					
ANR	1031820	IfStatement	if ( line )		1030566	28					
ANR	1031821	Condition	line	995:12:35815:35818	1030566	0	True				
ANR	1031822	Identifier	line		1030566	0					
ANR	1031823	ExpressionStatement	"gs_free_object ( pgs -> memory , line , ""fapi_image_uncached_glyph(line)"" )"	996:12:35833:35901	1030566	1	True				
ANR	1031824	CallExpression	"gs_free_object ( pgs -> memory , line , ""fapi_image_uncached_glyph(line)"" )"		1030566	0					
ANR	1031825	Callee	gs_free_object		1030566	0					
ANR	1031826	Identifier	gs_free_object		1030566	0					
ANR	1031827	ArgumentList	pgs -> memory		1030566	1					
ANR	1031828	Argument	pgs -> memory		1030566	0					
ANR	1031829	PtrMemberAccess	pgs -> memory		1030566	0					
ANR	1031830	Identifier	pgs		1030566	0					
ANR	1031831	Identifier	memory		1030566	1					
ANR	1031832	Argument	line		1030566	1					
ANR	1031833	Identifier	line		1030566	0					
ANR	1031834	Argument	"""fapi_image_uncached_glyph(line)"""		1030566	2					
ANR	1031835	PrimaryExpression	"""fapi_image_uncached_glyph(line)"""		1030566	0					
ANR	1031836	ExpressionStatement	"code1 = gs_image_cleanup_and_free_enum ( pie , penum_pgs )"	998:8:35912:35966	1030566	29	True				
ANR	1031837	AssignmentExpression	"code1 = gs_image_cleanup_and_free_enum ( pie , penum_pgs )"		1030566	0		=			
ANR	1031838	Identifier	code1		1030566	0					
ANR	1031839	CallExpression	"gs_image_cleanup_and_free_enum ( pie , penum_pgs )"		1030566	1					
ANR	1031840	Callee	gs_image_cleanup_and_free_enum		1030566	0					
ANR	1031841	Identifier	gs_image_cleanup_and_free_enum		1030566	0					
ANR	1031842	ArgumentList	pie		1030566	1					
ANR	1031843	Argument	pie		1030566	0					
ANR	1031844	Identifier	pie		1030566	0					
ANR	1031845	Argument	penum_pgs		1030566	1					
ANR	1031846	Identifier	penum_pgs		1030566	0					
ANR	1031847	IfStatement	if ( code >= 0 && code1 < 0 )		1030566	30					
ANR	1031848	Condition	code >= 0 && code1 < 0	999:12:35980:36001	1030566	0	True				
ANR	1031849	AndExpression	code >= 0 && code1 < 0		1030566	0		&&			
ANR	1031850	RelationalExpression	code >= 0		1030566	0		>=			
ANR	1031851	Identifier	code		1030566	0					
ANR	1031852	PrimaryExpression	0		1030566	1					
ANR	1031853	RelationalExpression	code1 < 0		1030566	1		<			
ANR	1031854	Identifier	code1		1030566	0					
ANR	1031855	PrimaryExpression	0		1030566	1					
ANR	1031856	ExpressionStatement	code = code1	1000:12:36016:36028	1030566	1	True				
ANR	1031857	AssignmentExpression	code = code1		1030566	0		=			
ANR	1031858	Identifier	code		1030566	0					
ANR	1031859	Identifier	code1		1030566	1					
ANR	1031860	ReturnStatement	return ( code ) ;	1002:4:36040:36053	1030566	17	True				
ANR	1031861	Identifier	code		1030566	0					
ANR	1031862	ReturnType	static int		1030566	1					
ANR	1031863	Identifier	fapi_image_uncached_glyph		1030566	2					
ANR	1031864	ParameterList	"gs_font * pfont , gs_gstate * pgs , gs_show_enum * penum , gs_fapi_raster * rast , const int import_shift_v"		1030566	3					
ANR	1031865	Parameter	gs_font * pfont	785:26:27311:27324	1030566	0	True				
ANR	1031866	ParameterType	gs_font *		1030566	0					
ANR	1031867	Identifier	pfont		1030566	1					
ANR	1031868	Parameter	gs_gstate * pgs	785:42:27327:27340	1030566	1	True				
ANR	1031869	ParameterType	gs_gstate *		1030566	0					
ANR	1031870	Identifier	pgs		1030566	1					
ANR	1031871	Parameter	gs_show_enum * penum	785:58:27343:27361	1030566	2	True				
ANR	1031872	ParameterType	gs_show_enum *		1030566	0					
ANR	1031873	Identifier	penum		1030566	1					
ANR	1031874	Parameter	gs_fapi_raster * rast	786:26:27390:27409	1030566	3	True				
ANR	1031875	ParameterType	gs_fapi_raster *		1030566	0					
ANR	1031876	Identifier	rast		1030566	1					
ANR	1031877	Parameter	const int import_shift_v	786:48:27412:27435	1030566	4	True				
ANR	1031878	ParameterType	const int		1030566	0					
ANR	1031879	Identifier	import_shift_v		1030566	1					
ANR	1031880	CFGEntryNode	ENTRY		1030566		True				
ANR	1031881	CFGExitNode	EXIT		1030566		True				
ANR	1031882	Symbol	penum -> dev		1030566						
ANR	1031883	Symbol	penum_pgs		1030566						
ANR	1031884	Symbol	* pgs		1030566						
ANR	1031885	Symbol	penum_pgs -> ctm . tx		1030566						
ANR	1031886	Symbol	penum_pgs -> ctm . ty		1030566						
ANR	1031887	Symbol	rast -> width		1030566						
ANR	1031888	Symbol	pgs -> clip_path		1030566						
ANR	1031889	Symbol	penum_pgs -> ctm		1030566						
ANR	1031890	Symbol	gs_image_cleanup_and_free_enum		1030566						
ANR	1031891	Symbol	rast -> p		1030566						
ANR	1031892	Symbol	dev		1030566						
ANR	1031893	Symbol	* * penum		1030566						
ANR	1031894	Symbol	I -> ff		1030566						
ANR	1031895	Symbol	penum -> fapi_glyph_shift . x		1030566						
ANR	1031896	Symbol	penum -> fapi_glyph_shift . y		1030566						
ANR	1031897	Symbol	dest_raster		1030566						
ANR	1031898	Symbol	st_gs_show_enum		1030566						
ANR	1031899	Symbol	& image		1030566						
ANR	1031900	Symbol	* penum_pgs		1030566						
ANR	1031901	Symbol	pbfont -> FAPI		1030566						
ANR	1031902	Symbol	penum		1030566						
ANR	1031903	Symbol	gs_color_writes_pure		1030566						
ANR	1031904	Symbol	iy		1030566						
ANR	1031905	Symbol	bold_lines		1030566						
ANR	1031906	Symbol	& image . ImageMatrix		1030566						
ANR	1031907	Symbol	* penum		1030566						
ANR	1031908	Symbol	penum -> fapi_glyph_shift		1030566						
ANR	1031909	Symbol	code1		1030566						
ANR	1031910	Symbol	I		1030566						
ANR	1031911	Symbol	penum -> pgs		1030566						
ANR	1031912	Symbol	min		1030566						
ANR	1031913	Symbol	pgs		1030566						
ANR	1031914	Symbol	pgs -> memory		1030566						
ANR	1031915	Symbol	pcpath		1030566						
ANR	1031916	Symbol	I -> ff . embolden		1030566						
ANR	1031917	Symbol	dstr		1030566						
ANR	1031918	Symbol	h		1030566						
ANR	1031919	Symbol	dest_bytes		1030566						
ANR	1031920	Symbol	gx_set_dev_color		1030566						
ANR	1031921	Symbol	rop3_default		1030566						
ANR	1031922	Symbol	bitmap_raster		1030566						
ANR	1031923	Symbol	r		1030566						
ANR	1031924	Symbol	merged_line		1030566						
ANR	1031925	Symbol	w		1030566						
ANR	1031926	Symbol	x		1030566						
ANR	1031927	Symbol	y		1030566						
ANR	1031928	Symbol	gs_alloc_byte_array		1030566						
ANR	1031929	Symbol	first		1030566						
ANR	1031930	Symbol	gs_object_type		1030566						
ANR	1031931	Symbol	n1		1030566						
ANR	1031932	Symbol	rast_orig_y		1030566						
ANR	1031933	Symbol	rast_orig_x		1030566						
ANR	1031934	Symbol	& st_gs_show_enum		1030566						
ANR	1031935	Symbol	used		1030566						
ANR	1031936	Symbol	pie		1030566						
ANR	1031937	Symbol	dx		1030566						
ANR	1031938	Symbol	dy		1030566						
ANR	1031939	Symbol	pgs -> device		1030566						
ANR	1031940	Symbol	import_shift_v		1030566						
ANR	1031941	Symbol	* pbfont		1030566						
ANR	1031942	Symbol	image		1030566						
ANR	1031943	Symbol	NULL		1030566						
ANR	1031944	Symbol	* rast		1030566						
ANR	1031945	Symbol	& used		1030566						
ANR	1031946	Symbol	bold		1030566						
ANR	1031947	Symbol	rast -> height		1030566						
ANR	1031948	Symbol	alloc_bold_lines		1030566						
ANR	1031949	Symbol	gx_no_bitmap_id		1030566						
ANR	1031950	Symbol	true		1030566						
ANR	1031951	Symbol	padbytes		1030566						
ANR	1031952	Symbol	rast -> line_step		1030566						
ANR	1031953	Symbol	image . Width		1030566						
ANR	1031954	Symbol	kmask		1030566						
ANR	1031955	Symbol	code		1030566						
ANR	1031956	Symbol	gs_image_enum_alloc		1030566						
ANR	1031957	Symbol	dst		1030566						
ANR	1031958	Symbol	penum -> memory		1030566						
ANR	1031959	Symbol	rast -> orig_y		1030566						
ANR	1031960	Symbol	rast -> orig_x		1030566						
ANR	1031961	Symbol	line		1030566						
ANR	1031962	Symbol	gs_gstate_color_load		1030566						
ANR	1031963	Symbol	penum -> memory -> non_gc_memory		1030566						
ANR	1031964	Symbol	GS_TEXT_TAG		1030566						
ANR	1031965	Symbol	* I		1030566						
ANR	1031966	Symbol	ascent		1030566						
ANR	1031967	Symbol	mem		1030566						
ANR	1031968	Symbol	* penum -> memory		1030566						
ANR	1031969	Symbol	y0		1030566						
ANR	1031970	Symbol	y1		1030566						
ANR	1031971	Symbol	cpbytes		1030566						
ANR	1031972	Symbol	gs_alloc_bytes		1030566						
ANR	1031973	Symbol	& ctm_only		1030566						
ANR	1031974	Symbol	pfont		1030566						
ANR	1031975	Symbol	rast		1030566						
ANR	1031976	Symbol	src		1030566						
ANR	1031977	Symbol	sstr		1030566						
ANR	1031978	Symbol	frac_pixel_shift		1030566						
ANR	1031979	Symbol	false		1030566						
ANR	1031980	Symbol	gx_image_fill_masked		1030566						
ANR	1031981	Symbol	image . Height		1030566						
ANR	1031982	Symbol	pdcolor		1030566						
ANR	1031983	Symbol	gs_image_next		1030566						
ANR	1031984	Symbol	nbytes		1030566						
ANR	1031985	Symbol	gs_error_VMerror		1030566						
ANR	1031986	Symbol	pbfont		1030566						
ANR	1031987	Symbol	gs_note_error		1030566						
ANR	1031988	Symbol	image . adjust		1030566						
ANR	1031989	Symbol	gs_image_init		1030566						
ANR	1031990	Symbol	penum -> pdcolor		1030566						
ANR	1031991	Function	gs_fapi_finish_render	1005:0:36058:44654							
ANR	1031992	FunctionDef	"gs_fapi_finish_render (gs_font * pfont , gs_gstate * pgs , gs_text_enum_t * penum , gs_fapi_server * I)"		1031991	0					
ANR	1031993	CompoundStatement		1007:0:36158:44654	1031991	0					
ANR	1031994	IdentifierDeclStatement	gs_show_enum * penum_s = ( gs_show_enum * ) penum ;	1008:4:36164:36210	1031991	0	True				
ANR	1031995	IdentifierDecl	* penum_s = ( gs_show_enum * ) penum		1031991	0					
ANR	1031996	IdentifierDeclType	gs_show_enum *		1031991	0					
ANR	1031997	Identifier	penum_s		1031991	1					
ANR	1031998	AssignmentExpression	* penum_s = ( gs_show_enum * ) penum		1031991	2		=			
ANR	1031999	Identifier	penum_s		1031991	0					
ANR	1032000	CastExpression	( gs_show_enum * ) penum		1031991	1					
ANR	1032001	CastTarget	gs_show_enum *		1031991	0					
ANR	1032002	Identifier	penum		1031991	1					
ANR	1032003	IdentifierDeclStatement	gs_gstate * penum_pgs ;	1009:4:36216:36236	1031991	1	True				
ANR	1032004	IdentifierDecl	* penum_pgs		1031991	0					
ANR	1032005	IdentifierDeclType	gs_gstate *		1031991	0					
ANR	1032006	Identifier	penum_pgs		1031991	1					
ANR	1032007	IdentifierDeclStatement	gx_device * dev1 ;	1010:4:36242:36257	1031991	2	True				
ANR	1032008	IdentifierDecl	* dev1		1031991	0					
ANR	1032009	IdentifierDeclType	gx_device *		1031991	0					
ANR	1032010	Identifier	dev1		1031991	1					
ANR	1032011	IdentifierDeclStatement	const int import_shift_v = _fixed_shift - 32 ;	1011:4:36263:36307	1031991	3	True				
ANR	1032012	IdentifierDecl	import_shift_v = _fixed_shift - 32		1031991	0					
ANR	1032013	IdentifierDeclType	const int		1031991	0					
ANR	1032014	Identifier	import_shift_v		1031991	1					
ANR	1032015	AssignmentExpression	import_shift_v = _fixed_shift - 32		1031991	2		=			
ANR	1032016	Identifier	import_shift_v		1031991	0					
ANR	1032017	AdditiveExpression	_fixed_shift - 32		1031991	1		-			
ANR	1032018	Identifier	_fixed_shift		1031991	0					
ANR	1032019	PrimaryExpression	32		1031991	1					
ANR	1032020	IdentifierDeclStatement	gs_fapi_raster rast ;	1012:4:36378:36397	1031991	4	True				
ANR	1032021	IdentifierDecl	rast		1031991	0					
ANR	1032022	IdentifierDeclType	gs_fapi_raster		1031991	0					
ANR	1032023	Identifier	rast		1031991	1					
ANR	1032024	IdentifierDeclStatement	int code ;	1013:4:36403:36411	1031991	5	True				
ANR	1032025	IdentifierDecl	code		1031991	0					
ANR	1032026	IdentifierDeclType	int		1031991	0					
ANR	1032027	Identifier	code		1031991	1					
ANR	1032028	IdentifierDeclStatement	gs_memory_t * mem = pfont -> memory ;	1014:4:36417:36449	1031991	6	True				
ANR	1032029	IdentifierDecl	* mem = pfont -> memory		1031991	0					
ANR	1032030	IdentifierDeclType	gs_memory_t *		1031991	0					
ANR	1032031	Identifier	mem		1031991	1					
ANR	1032032	AssignmentExpression	* mem = pfont -> memory		1031991	2		=			
ANR	1032033	Identifier	mem		1031991	0					
ANR	1032034	PtrMemberAccess	pfont -> memory		1031991	1					
ANR	1032035	Identifier	pfont		1031991	0					
ANR	1032036	Identifier	memory		1031991	1					
ANR	1032037	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	1015:4:36455:36499	1031991	7	True				
ANR	1032038	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		1031991	0					
ANR	1032039	IdentifierDeclType	gs_font_base *		1031991	0					
ANR	1032040	Identifier	pbfont		1031991	1					
ANR	1032041	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		1031991	2		=			
ANR	1032042	Identifier	pbfont		1031991	0					
ANR	1032043	CastExpression	( gs_font_base * ) pfont		1031991	1					
ANR	1032044	CastTarget	gs_font_base *		1031991	0					
ANR	1032045	Identifier	pfont		1031991	1					
ANR	1032046	ExpressionStatement	extern_st ( st_gs_show_enum )	1017:4:36506:36532	1031991	8	True				
ANR	1032047	CallExpression	extern_st ( st_gs_show_enum )		1031991	0					
ANR	1032048	Callee	extern_st		1031991	0					
ANR	1032049	Identifier	extern_st		1031991	0					
ANR	1032050	ArgumentList	st_gs_show_enum		1031991	1					
ANR	1032051	Argument	st_gs_show_enum		1031991	0					
ANR	1032052	Identifier	st_gs_show_enum		1031991	0					
ANR	1032053	ExpressionStatement	extern_st ( st_gs_gstate )	1018:4:36538:36561	1031991	9	True				
ANR	1032054	CallExpression	extern_st ( st_gs_gstate )		1031991	0					
ANR	1032055	Callee	extern_st		1031991	0					
ANR	1032056	Identifier	extern_st		1031991	0					
ANR	1032057	ArgumentList	st_gs_gstate		1031991	1					
ANR	1032058	Argument	st_gs_gstate		1031991	0					
ANR	1032059	Identifier	st_gs_gstate		1031991	0					
ANR	1032060	IfStatement	if ( penum == NULL )		1031991	10					
ANR	1032061	Condition	penum == NULL	1020:8:36572:36584	1031991	0	True				
ANR	1032062	EqualityExpression	penum == NULL		1031991	0		==			
ANR	1032063	Identifier	penum		1031991	0					
ANR	1032064	Identifier	NULL		1031991	1					
ANR	1032065	CompoundStatement		14:23:428:428	1031991	1					
ANR	1032066	ExpressionStatement	return_error ( gs_error_undefined )	1021:8:36597:36629	1031991	0	True				
ANR	1032067	CallExpression	return_error ( gs_error_undefined )		1031991	0					
ANR	1032068	Callee	return_error		1031991	0					
ANR	1032069	Identifier	return_error		1031991	0					
ANR	1032070	ArgumentList	gs_error_undefined		1031991	1					
ANR	1032071	Argument	gs_error_undefined		1031991	0					
ANR	1032072	Identifier	gs_error_undefined		1031991	0					
ANR	1032073	IfStatement	"if ( gs_object_type ( penum -> memory , penum -> pgs ) != & st_gs_gstate )"		1031991	11					
ANR	1032074	Condition	"gs_object_type ( penum -> memory , penum -> pgs ) != & st_gs_gstate"	1025:8:36724:36781	1031991	0	True				
ANR	1032075	EqualityExpression	"gs_object_type ( penum -> memory , penum -> pgs ) != & st_gs_gstate"		1031991	0		!=			
ANR	1032076	CallExpression	"gs_object_type ( penum -> memory , penum -> pgs )"		1031991	0					
ANR	1032077	Callee	gs_object_type		1031991	0					
ANR	1032078	Identifier	gs_object_type		1031991	0					
ANR	1032079	ArgumentList	penum -> memory		1031991	1					
ANR	1032080	Argument	penum -> memory		1031991	0					
ANR	1032081	PtrMemberAccess	penum -> memory		1031991	0					
ANR	1032082	Identifier	penum		1031991	0					
ANR	1032083	Identifier	memory		1031991	1					
ANR	1032084	Argument	penum -> pgs		1031991	1					
ANR	1032085	PtrMemberAccess	penum -> pgs		1031991	0					
ANR	1032086	Identifier	penum		1031991	0					
ANR	1032087	Identifier	pgs		1031991	1					
ANR	1032088	UnaryOperationExpression	& st_gs_gstate		1031991	1					
ANR	1032089	UnaryOperator	&		1031991	0					
ANR	1032090	Identifier	st_gs_gstate		1031991	1					
ANR	1032091	CompoundStatement		19:68:625:625	1031991	1					
ANR	1032092	IfStatement	"if ( gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum )"		1031991	0					
ANR	1032093	Condition	"gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum"	1029:12:36973:37028	1031991	0	True				
ANR	1032094	EqualityExpression	"gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum"		1031991	0		==			
ANR	1032095	CallExpression	"gs_object_type ( penum -> memory , penum )"		1031991	0					
ANR	1032096	Callee	gs_object_type		1031991	0					
ANR	1032097	Identifier	gs_object_type		1031991	0					
ANR	1032098	ArgumentList	penum -> memory		1031991	1					
ANR	1032099	Argument	penum -> memory		1031991	0					
ANR	1032100	PtrMemberAccess	penum -> memory		1031991	0					
ANR	1032101	Identifier	penum		1031991	0					
ANR	1032102	Identifier	memory		1031991	1					
ANR	1032103	Argument	penum		1031991	1					
ANR	1032104	Identifier	penum		1031991	0					
ANR	1032105	UnaryOperationExpression	& st_gs_show_enum		1031991	1					
ANR	1032106	UnaryOperator	&		1031991	0					
ANR	1032107	Identifier	st_gs_show_enum		1031991	1					
ANR	1032108	CompoundStatement		23:70:872:872	1031991	1					
ANR	1032109	ExpressionStatement	penum_pgs = penum_s -> pgs	1030:12:37045:37069	1031991	0	True				
ANR	1032110	AssignmentExpression	penum_pgs = penum_s -> pgs		1031991	0		=			
ANR	1032111	Identifier	penum_pgs		1031991	0					
ANR	1032112	PtrMemberAccess	penum_s -> pgs		1031991	1					
ANR	1032113	Identifier	penum_s		1031991	0					
ANR	1032114	Identifier	pgs		1031991	1					
ANR	1032115	ElseStatement	else		1031991	0					
ANR	1032116	ExpressionStatement	return_error ( gs_error_undefined )	1034:12:37154:37186	1031991	0	True				
ANR	1032117	CallExpression	return_error ( gs_error_undefined )		1031991	0					
ANR	1032118	Callee	return_error		1031991	0					
ANR	1032119	Identifier	return_error		1031991	0					
ANR	1032120	ArgumentList	gs_error_undefined		1031991	1					
ANR	1032121	Argument	gs_error_undefined		1031991	0					
ANR	1032122	Identifier	gs_error_undefined		1031991	0					
ANR	1032123	ElseStatement	else		1031991	0					
ANR	1032124	ExpressionStatement	penum_pgs = ( gs_gstate * ) penum -> pgs	1037:8:37211:37247	1031991	0	True				
ANR	1032125	AssignmentExpression	penum_pgs = ( gs_gstate * ) penum -> pgs		1031991	0		=			
ANR	1032126	Identifier	penum_pgs		1031991	0					
ANR	1032127	CastExpression	( gs_gstate * ) penum -> pgs		1031991	1					
ANR	1032128	CastTarget	gs_gstate *		1031991	0					
ANR	1032129	PtrMemberAccess	penum -> pgs		1031991	1					
ANR	1032130	Identifier	penum		1031991	0					
ANR	1032131	Identifier	pgs		1031991	1					
ANR	1032132	ExpressionStatement	dev1 = gs_currentdevice_inline ( penum_pgs )	1039:4:37254:37295	1031991	12	True				
ANR	1032133	AssignmentExpression	dev1 = gs_currentdevice_inline ( penum_pgs )		1031991	0		=			
ANR	1032134	Identifier	dev1		1031991	0					
ANR	1032135	CallExpression	gs_currentdevice_inline ( penum_pgs )		1031991	1					
ANR	1032136	Callee	gs_currentdevice_inline		1031991	0					
ANR	1032137	Identifier	gs_currentdevice_inline		1031991	0					
ANR	1032138	ArgumentList	penum_pgs		1031991	1					
ANR	1032139	Argument	penum_pgs		1031991	0					
ANR	1032140	Identifier	penum_pgs		1031991	0					
ANR	1032141	IfStatement	"if ( pgs -> in_charpath && ! SHOW_IS ( penum , TEXT_DO_NONE ) )"		1031991	13					
ANR	1032142	Condition	"pgs -> in_charpath && ! SHOW_IS ( penum , TEXT_DO_NONE )"	1045:8:37594:37642	1031991	0	True				
ANR	1032143	AndExpression	"pgs -> in_charpath && ! SHOW_IS ( penum , TEXT_DO_NONE )"		1031991	0		&&			
ANR	1032144	PtrMemberAccess	pgs -> in_charpath		1031991	0					
ANR	1032145	Identifier	pgs		1031991	0					
ANR	1032146	Identifier	in_charpath		1031991	1					
ANR	1032147	UnaryOperationExpression	"! SHOW_IS ( penum , TEXT_DO_NONE )"		1031991	1					
ANR	1032148	UnaryOperator	!		1031991	0					
ANR	1032149	CallExpression	"SHOW_IS ( penum , TEXT_DO_NONE )"		1031991	1					
ANR	1032150	Callee	SHOW_IS		1031991	0					
ANR	1032151	Identifier	SHOW_IS		1031991	0					
ANR	1032152	ArgumentList	penum		1031991	1					
ANR	1032153	Argument	penum		1031991	0					
ANR	1032154	Identifier	penum		1031991	0					
ANR	1032155	Argument	TEXT_DO_NONE		1031991	1					
ANR	1032156	Identifier	TEXT_DO_NONE		1031991	0					
ANR	1032157	CompoundStatement		40:8:1496:1507	1031991	1					
ANR	1032158	IdentifierDeclStatement	gs_point pt ;	1046:8:37655:37666	1031991	0	True				
ANR	1032159	IdentifierDecl	pt		1031991	0					
ANR	1032160	IdentifierDeclType	gs_point		1031991	0					
ANR	1032161	Identifier	pt		1031991	1					
ANR	1032162	IfStatement	"if ( ( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0 )"		1031991	1					
ANR	1032163	Condition	"( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0"	1048:12:37681:37724	1031991	0	True				
ANR	1032164	RelationalExpression	"( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0"		1031991	0		<			
ANR	1032165	AssignmentExpression	"code = gs_currentpoint ( penum_pgs , & pt )"		1031991	0		=			
ANR	1032166	Identifier	code		1031991	0					
ANR	1032167	CallExpression	"gs_currentpoint ( penum_pgs , & pt )"		1031991	1					
ANR	1032168	Callee	gs_currentpoint		1031991	0					
ANR	1032169	Identifier	gs_currentpoint		1031991	0					
ANR	1032170	ArgumentList	penum_pgs		1031991	1					
ANR	1032171	Argument	penum_pgs		1031991	0					
ANR	1032172	Identifier	penum_pgs		1031991	0					
ANR	1032173	Argument	& pt		1031991	1					
ANR	1032174	UnaryOperationExpression	& pt		1031991	0					
ANR	1032175	UnaryOperator	&		1031991	0					
ANR	1032176	Identifier	pt		1031991	1					
ANR	1032177	PrimaryExpression	0		1031991	1					
ANR	1032178	ReturnStatement	return code ;	1049:12:37739:37750	1031991	1	True				
ANR	1032179	Identifier	code		1031991	0					
ANR	1032180	IfStatement	"if ( ( code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType ) ) < 0 )"		1031991	2					
ANR	1032181	Condition	"( code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType ) ) < 0"	1051:12:37765:37898	1031991	0	True				
ANR	1032182	RelationalExpression	"( code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType ) ) < 0"		1031991	0		<			
ANR	1032183	AssignmentExpression	"code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType )"		1031991	0		=			
ANR	1032184	Identifier	code		1031991	0					
ANR	1032185	CallExpression	"outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType )"		1031991	1					
ANR	1032186	Callee	outline_char		1031991	0					
ANR	1032187	Identifier	outline_char		1031991	0					
ANR	1032188	ArgumentList	mem		1031991	1					
ANR	1032189	Argument	mem		1031991	0					
ANR	1032190	Identifier	mem		1031991	0					
ANR	1032191	Argument	I		1031991	1					
ANR	1032192	Identifier	I		1031991	0					
ANR	1032193	Argument	import_shift_v		1031991	2					
ANR	1032194	Identifier	import_shift_v		1031991	0					
ANR	1032195	Argument	penum_s		1031991	3					
ANR	1032196	Identifier	penum_s		1031991	0					
ANR	1032197	Argument	penum_pgs -> path		1031991	4					
ANR	1032198	PtrMemberAccess	penum_pgs -> path		1031991	0					
ANR	1032199	Identifier	penum_pgs		1031991	0					
ANR	1032200	Identifier	path		1031991	1					
ANR	1032201	Argument	! pbfont -> PaintType		1031991	5					
ANR	1032202	UnaryOperationExpression	! pbfont -> PaintType		1031991	0					
ANR	1032203	UnaryOperator	!		1031991	0					
ANR	1032204	PtrMemberAccess	pbfont -> PaintType		1031991	1					
ANR	1032205	Identifier	pbfont		1031991	0					
ANR	1032206	Identifier	PaintType		1031991	1					
ANR	1032207	PrimaryExpression	0		1031991	1					
ANR	1032208	CompoundStatement		47:52:1742:1742	1031991	1					
ANR	1032209	ReturnStatement	return code ;	1054:12:37915:37926	1031991	0	True				
ANR	1032210	Identifier	code		1031991	0					
ANR	1032211	IfStatement	"if ( ( code = gx_path_add_char_path ( penum_pgs -> show_gstate -> path , penum_pgs -> path , penum_pgs -> in_charpath ) ) < 0 )"		1031991	3					
ANR	1032212	Condition	"( code = gx_path_add_char_path ( penum_pgs -> show_gstate -> path , penum_pgs -> path , penum_pgs -> in_charpath ) ) < 0"	1057:12:37951:38138	1031991	0	True				
ANR	1032213	RelationalExpression	"( code = gx_path_add_char_path ( penum_pgs -> show_gstate -> path , penum_pgs -> path , penum_pgs -> in_charpath ) ) < 0"		1031991	0		<			
ANR	1032214	AssignmentExpression	"code = gx_path_add_char_path ( penum_pgs -> show_gstate -> path , penum_pgs -> path , penum_pgs -> in_charpath )"		1031991	0		=			
ANR	1032215	Identifier	code		1031991	0					
ANR	1032216	CallExpression	"gx_path_add_char_path ( penum_pgs -> show_gstate -> path , penum_pgs -> path , penum_pgs -> in_charpath )"		1031991	1					
ANR	1032217	Callee	gx_path_add_char_path		1031991	0					
ANR	1032218	Identifier	gx_path_add_char_path		1031991	0					
ANR	1032219	ArgumentList	penum_pgs -> show_gstate -> path		1031991	1					
ANR	1032220	Argument	penum_pgs -> show_gstate -> path		1031991	0					
ANR	1032221	PtrMemberAccess	penum_pgs -> show_gstate -> path		1031991	0					
ANR	1032222	PtrMemberAccess	penum_pgs -> show_gstate		1031991	0					
ANR	1032223	Identifier	penum_pgs		1031991	0					
ANR	1032224	Identifier	show_gstate		1031991	1					
ANR	1032225	Identifier	path		1031991	1					
ANR	1032226	Argument	penum_pgs -> path		1031991	1					
ANR	1032227	PtrMemberAccess	penum_pgs -> path		1031991	0					
ANR	1032228	Identifier	penum_pgs		1031991	0					
ANR	1032229	Identifier	path		1031991	1					
ANR	1032230	Argument	penum_pgs -> in_charpath		1031991	2					
ANR	1032231	PtrMemberAccess	penum_pgs -> in_charpath		1031991	0					
ANR	1032232	Identifier	penum_pgs		1031991	0					
ANR	1032233	Identifier	in_charpath		1031991	1					
ANR	1032234	PrimaryExpression	0		1031991	1					
ANR	1032235	CompoundStatement		54:65:1982:1982	1031991	1					
ANR	1032236	ReturnStatement	return code ;	1061:12:38155:38166	1031991	0	True				
ANR	1032237	Identifier	code		1031991	0					
ANR	1032238	ElseStatement	else		1031991	0					
ANR	1032239	CompoundStatement		60:8:2045:2053	1031991	0					
ANR	1032240	IdentifierDeclStatement	int code ;	1066:8:38204:38212	1031991	0	True				
ANR	1032241	IdentifierDecl	code		1031991	0					
ANR	1032242	IdentifierDeclType	int		1031991	0					
ANR	1032243	Identifier	code		1031991	1					
ANR	1032244	ExpressionStatement	"memset ( & rast , 0x00 , sizeof ( rast ) )"	1067:8:38222:38255	1031991	1	True				
ANR	1032245	CallExpression	"memset ( & rast , 0x00 , sizeof ( rast ) )"		1031991	0					
ANR	1032246	Callee	memset		1031991	0					
ANR	1032247	Identifier	memset		1031991	0					
ANR	1032248	ArgumentList	& rast		1031991	1					
ANR	1032249	Argument	& rast		1031991	0					
ANR	1032250	UnaryOperationExpression	& rast		1031991	0					
ANR	1032251	UnaryOperator	&		1031991	0					
ANR	1032252	Identifier	rast		1031991	1					
ANR	1032253	Argument	0x00		1031991	1					
ANR	1032254	PrimaryExpression	0x00		1031991	0					
ANR	1032255	Argument	sizeof ( rast )		1031991	2					
ANR	1032256	SizeofExpression	sizeof ( rast )		1031991	0					
ANR	1032257	Sizeof	sizeof		1031991	0					
ANR	1032258	SizeofOperand	rast		1031991	1					
ANR	1032259	IfStatement	"if ( ( code = I -> get_char_raster ( I , & rast ) ) < 0 && code != gs_error_unregistered )"		1031991	2					
ANR	1032260	Condition	"( code = I -> get_char_raster ( I , & rast ) ) < 0 && code != gs_error_unregistered"	1069:12:38270:38343	1031991	0	True				
ANR	1032261	AndExpression	"( code = I -> get_char_raster ( I , & rast ) ) < 0 && code != gs_error_unregistered"		1031991	0		&&			
ANR	1032262	RelationalExpression	"( code = I -> get_char_raster ( I , & rast ) ) < 0"		1031991	0		<			
ANR	1032263	AssignmentExpression	"code = I -> get_char_raster ( I , & rast )"		1031991	0		=			
ANR	1032264	Identifier	code		1031991	0					
ANR	1032265	CallExpression	"I -> get_char_raster ( I , & rast )"		1031991	1					
ANR	1032266	Callee	I -> get_char_raster		1031991	0					
ANR	1032267	PtrMemberAccess	I -> get_char_raster		1031991	0					
ANR	1032268	Identifier	I		1031991	0					
ANR	1032269	Identifier	get_char_raster		1031991	1					
ANR	1032270	ArgumentList	I		1031991	1					
ANR	1032271	Argument	I		1031991	0					
ANR	1032272	Identifier	I		1031991	0					
ANR	1032273	Argument	& rast		1031991	1					
ANR	1032274	UnaryOperationExpression	& rast		1031991	0					
ANR	1032275	UnaryOperator	&		1031991	0					
ANR	1032276	Identifier	rast		1031991	1					
ANR	1032277	PrimaryExpression	0		1031991	1					
ANR	1032278	EqualityExpression	code != gs_error_unregistered		1031991	1		!=			
ANR	1032279	Identifier	code		1031991	0					
ANR	1032280	Identifier	gs_error_unregistered		1031991	1					
ANR	1032281	ReturnStatement	return code ;	1070:12:38358:38369	1031991	1	True				
ANR	1032282	Identifier	code		1031991	0					
ANR	1032283	IfStatement	"if ( ! SHOW_IS ( penum , TEXT_DO_NONE ) && I -> use_outline )"		1031991	3					
ANR	1032284	Condition	"! SHOW_IS ( penum , TEXT_DO_NONE ) && I -> use_outline"	1072:12:38384:38430	1031991	0	True				
ANR	1032285	AndExpression	"! SHOW_IS ( penum , TEXT_DO_NONE ) && I -> use_outline"		1031991	0		&&			
ANR	1032286	UnaryOperationExpression	"! SHOW_IS ( penum , TEXT_DO_NONE )"		1031991	0					
ANR	1032287	UnaryOperator	!		1031991	0					
ANR	1032288	CallExpression	"SHOW_IS ( penum , TEXT_DO_NONE )"		1031991	1					
ANR	1032289	Callee	SHOW_IS		1031991	0					
ANR	1032290	Identifier	SHOW_IS		1031991	0					
ANR	1032291	ArgumentList	penum		1031991	1					
ANR	1032292	Argument	penum		1031991	0					
ANR	1032293	Identifier	penum		1031991	0					
ANR	1032294	Argument	TEXT_DO_NONE		1031991	1					
ANR	1032295	Identifier	TEXT_DO_NONE		1031991	0					
ANR	1032296	PtrMemberAccess	I -> use_outline		1031991	1					
ANR	1032297	Identifier	I		1031991	0					
ANR	1032298	Identifier	use_outline		1031991	1					
ANR	1032299	CompoundStatement		68:12:2357:2368	1031991	1					
ANR	1032300	IdentifierDeclStatement	gs_point pt ;	1074:12:38516:38527	1031991	0	True				
ANR	1032301	IdentifierDecl	pt		1031991	0					
ANR	1032302	IdentifierDeclType	gs_point		1031991	0					
ANR	1032303	Identifier	pt		1031991	1					
ANR	1032304	IfStatement	"if ( ( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0 )"		1031991	1					
ANR	1032305	Condition	"( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0"	1082:16:39033:39076	1031991	0	True				
ANR	1032306	RelationalExpression	"( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0"		1031991	0		<			
ANR	1032307	AssignmentExpression	"code = gs_currentpoint ( penum_pgs , & pt )"		1031991	0		=			
ANR	1032308	Identifier	code		1031991	0					
ANR	1032309	CallExpression	"gs_currentpoint ( penum_pgs , & pt )"		1031991	1					
ANR	1032310	Callee	gs_currentpoint		1031991	0					
ANR	1032311	Identifier	gs_currentpoint		1031991	0					
ANR	1032312	ArgumentList	penum_pgs		1031991	1					
ANR	1032313	Argument	penum_pgs		1031991	0					
ANR	1032314	Identifier	penum_pgs		1031991	0					
ANR	1032315	Argument	& pt		1031991	1					
ANR	1032316	UnaryOperationExpression	& pt		1031991	0					
ANR	1032317	UnaryOperator	&		1031991	0					
ANR	1032318	Identifier	pt		1031991	1					
ANR	1032319	PrimaryExpression	0		1031991	1					
ANR	1032320	ReturnStatement	return code ;	1083:16:39095:39106	1031991	1	True				
ANR	1032321	Identifier	code		1031991	0					
ANR	1032322	IfStatement	"if ( ( code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType ) ) < 0 )"		1031991	2					
ANR	1032323	Condition	"( code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType ) ) < 0"	1085:16:39125:39266	1031991	0	True				
ANR	1032324	RelationalExpression	"( code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType ) ) < 0"		1031991	0		<			
ANR	1032325	AssignmentExpression	"code = outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType )"		1031991	0		=			
ANR	1032326	Identifier	code		1031991	0					
ANR	1032327	CallExpression	"outline_char ( mem , I , import_shift_v , penum_s , penum_pgs -> path , ! pbfont -> PaintType )"		1031991	1					
ANR	1032328	Callee	outline_char		1031991	0					
ANR	1032329	Identifier	outline_char		1031991	0					
ANR	1032330	ArgumentList	mem		1031991	1					
ANR	1032331	Argument	mem		1031991	0					
ANR	1032332	Identifier	mem		1031991	0					
ANR	1032333	Argument	I		1031991	1					
ANR	1032334	Identifier	I		1031991	0					
ANR	1032335	Argument	import_shift_v		1031991	2					
ANR	1032336	Identifier	import_shift_v		1031991	0					
ANR	1032337	Argument	penum_s		1031991	3					
ANR	1032338	Identifier	penum_s		1031991	0					
ANR	1032339	Argument	penum_pgs -> path		1031991	4					
ANR	1032340	PtrMemberAccess	penum_pgs -> path		1031991	0					
ANR	1032341	Identifier	penum_pgs		1031991	0					
ANR	1032342	Identifier	path		1031991	1					
ANR	1032343	Argument	! pbfont -> PaintType		1031991	5					
ANR	1032344	UnaryOperationExpression	! pbfont -> PaintType		1031991	0					
ANR	1032345	UnaryOperator	!		1031991	0					
ANR	1032346	PtrMemberAccess	pbfont -> PaintType		1031991	1					
ANR	1032347	Identifier	pbfont		1031991	0					
ANR	1032348	Identifier	PaintType		1031991	1					
ANR	1032349	PrimaryExpression	0		1031991	1					
ANR	1032350	ReturnStatement	return code ;	1088:16:39285:39296	1031991	1	True				
ANR	1032351	Identifier	code		1031991	0					
ANR	1032352	IfStatement	"if ( ( code = gs_gstate_setflat ( ( gs_gstate * ) penum_pgs , gs_char_flatness ( penum_pgs -> show_gstate , 1.0 ) ) ) < 0 )"		1031991	3					
ANR	1032353	Condition	"( code = gs_gstate_setflat ( ( gs_gstate * ) penum_pgs , gs_char_flatness ( penum_pgs -> show_gstate , 1.0 ) ) ) < 0"	1089:16:39314:39467	1031991	0	True				
ANR	1032354	RelationalExpression	"( code = gs_gstate_setflat ( ( gs_gstate * ) penum_pgs , gs_char_flatness ( penum_pgs -> show_gstate , 1.0 ) ) ) < 0"		1031991	0		<			
ANR	1032355	AssignmentExpression	"code = gs_gstate_setflat ( ( gs_gstate * ) penum_pgs , gs_char_flatness ( penum_pgs -> show_gstate , 1.0 ) )"		1031991	0		=			
ANR	1032356	Identifier	code		1031991	0					
ANR	1032357	CallExpression	"gs_gstate_setflat ( ( gs_gstate * ) penum_pgs , gs_char_flatness ( penum_pgs -> show_gstate , 1.0 ) )"		1031991	1					
ANR	1032358	Callee	gs_gstate_setflat		1031991	0					
ANR	1032359	Identifier	gs_gstate_setflat		1031991	0					
ANR	1032360	ArgumentList	( gs_gstate * ) penum_pgs		1031991	1					
ANR	1032361	Argument	( gs_gstate * ) penum_pgs		1031991	0					
ANR	1032362	CastExpression	( gs_gstate * ) penum_pgs		1031991	0					
ANR	1032363	CastTarget	gs_gstate *		1031991	0					
ANR	1032364	Identifier	penum_pgs		1031991	1					
ANR	1032365	Argument	"gs_char_flatness ( penum_pgs -> show_gstate , 1.0 )"		1031991	1					
ANR	1032366	CallExpression	"gs_char_flatness ( penum_pgs -> show_gstate , 1.0 )"		1031991	0					
ANR	1032367	Callee	gs_char_flatness		1031991	0					
ANR	1032368	Identifier	gs_char_flatness		1031991	0					
ANR	1032369	ArgumentList	penum_pgs -> show_gstate		1031991	1					
ANR	1032370	Argument	penum_pgs -> show_gstate		1031991	0					
ANR	1032371	PtrMemberAccess	penum_pgs -> show_gstate		1031991	0					
ANR	1032372	Identifier	penum_pgs		1031991	0					
ANR	1032373	Identifier	show_gstate		1031991	1					
ANR	1032374	Argument	1.0		1031991	1					
ANR	1032375	PrimaryExpression	1.0		1031991	0					
ANR	1032376	PrimaryExpression	0		1031991	1					
ANR	1032377	ReturnStatement	return code ;	1092:16:39486:39497	1031991	1	True				
ANR	1032378	Identifier	code		1031991	0					
ANR	1032379	IfStatement	if ( pbfont -> PaintType )		1031991	4					
ANR	1032380	Condition	pbfont -> PaintType	1093:16:39515:39531	1031991	0	True				
ANR	1032381	PtrMemberAccess	pbfont -> PaintType		1031991	0					
ANR	1032382	Identifier	pbfont		1031991	0					
ANR	1032383	Identifier	PaintType		1031991	1					
ANR	1032384	CompoundStatement		88:16:3393:3434	1031991	1					
ANR	1032385	IdentifierDeclStatement	float lw = gs_currentlinewidth ( penum_pgs ) ;	1094:16:39552:39593	1031991	0	True				
ANR	1032386	IdentifierDecl	lw = gs_currentlinewidth ( penum_pgs )		1031991	0					
ANR	1032387	IdentifierDeclType	float		1031991	0					
ANR	1032388	Identifier	lw		1031991	1					
ANR	1032389	AssignmentExpression	lw = gs_currentlinewidth ( penum_pgs )		1031991	2		=			
ANR	1032390	Identifier	lw		1031991	0					
ANR	1032391	CallExpression	gs_currentlinewidth ( penum_pgs )		1031991	1					
ANR	1032392	Callee	gs_currentlinewidth		1031991	0					
ANR	1032393	Identifier	gs_currentlinewidth		1031991	0					
ANR	1032394	ArgumentList	penum_pgs		1031991	1					
ANR	1032395	Argument	penum_pgs		1031991	0					
ANR	1032396	Identifier	penum_pgs		1031991	0					
ANR	1032397	ExpressionStatement	"gs_setlinewidth ( penum_pgs , pbfont -> StrokeWidth )"	1096:16:39612:39659	1031991	1	True				
ANR	1032398	CallExpression	"gs_setlinewidth ( penum_pgs , pbfont -> StrokeWidth )"		1031991	0					
ANR	1032399	Callee	gs_setlinewidth		1031991	0					
ANR	1032400	Identifier	gs_setlinewidth		1031991	0					
ANR	1032401	ArgumentList	penum_pgs		1031991	1					
ANR	1032402	Argument	penum_pgs		1031991	0					
ANR	1032403	Identifier	penum_pgs		1031991	0					
ANR	1032404	Argument	pbfont -> StrokeWidth		1031991	1					
ANR	1032405	PtrMemberAccess	pbfont -> StrokeWidth		1031991	0					
ANR	1032406	Identifier	pbfont		1031991	0					
ANR	1032407	Identifier	StrokeWidth		1031991	1					
ANR	1032408	ExpressionStatement	code = gs_stroke ( penum_pgs )	1097:16:39677:39704	1031991	2	True				
ANR	1032409	AssignmentExpression	code = gs_stroke ( penum_pgs )		1031991	0		=			
ANR	1032410	Identifier	code		1031991	0					
ANR	1032411	CallExpression	gs_stroke ( penum_pgs )		1031991	1					
ANR	1032412	Callee	gs_stroke		1031991	0					
ANR	1032413	Identifier	gs_stroke		1031991	0					
ANR	1032414	ArgumentList	penum_pgs		1031991	1					
ANR	1032415	Argument	penum_pgs		1031991	0					
ANR	1032416	Identifier	penum_pgs		1031991	0					
ANR	1032417	ExpressionStatement	"gs_setlinewidth ( penum_pgs , lw )"	1098:16:39722:39752	1031991	3	True				
ANR	1032418	CallExpression	"gs_setlinewidth ( penum_pgs , lw )"		1031991	0					
ANR	1032419	Callee	gs_setlinewidth		1031991	0					
ANR	1032420	Identifier	gs_setlinewidth		1031991	0					
ANR	1032421	ArgumentList	penum_pgs		1031991	1					
ANR	1032422	Argument	penum_pgs		1031991	0					
ANR	1032423	Identifier	penum_pgs		1031991	0					
ANR	1032424	Argument	lw		1031991	1					
ANR	1032425	Identifier	lw		1031991	0					
ANR	1032426	IfStatement	if ( code < 0 )		1031991	4					
ANR	1032427	Condition	code < 0	1099:20:39774:39781	1031991	0	True				
ANR	1032428	RelationalExpression	code < 0		1031991	0		<			
ANR	1032429	Identifier	code		1031991	0					
ANR	1032430	PrimaryExpression	0		1031991	1					
ANR	1032431	ReturnStatement	return code ;	1100:20:39804:39815	1031991	1	True				
ANR	1032432	Identifier	code		1031991	0					
ANR	1032433	ElseStatement	else		1031991	0					
ANR	1032434	CompoundStatement		97:16:3707:3790	1031991	0					
ANR	1032435	IdentifierDeclStatement	gs_in_cache_device_t in_cachedevice = penum_pgs -> in_cachedevice ;	1103:16:39866:39949	1031991	0	True				
ANR	1032436	IdentifierDecl	in_cachedevice = penum_pgs -> in_cachedevice		1031991	0					
ANR	1032437	IdentifierDeclType	gs_in_cache_device_t		1031991	0					
ANR	1032438	Identifier	in_cachedevice		1031991	1					
ANR	1032439	AssignmentExpression	in_cachedevice = penum_pgs -> in_cachedevice		1031991	2		=			
ANR	1032440	Identifier	in_cachedevice		1031991	0					
ANR	1032441	PtrMemberAccess	penum_pgs -> in_cachedevice		1031991	1					
ANR	1032442	Identifier	penum_pgs		1031991	0					
ANR	1032443	Identifier	in_cachedevice		1031991	1					
ANR	1032444	ExpressionStatement	penum_pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING	1106:16:39968:40020	1031991	1	True				
ANR	1032445	AssignmentExpression	penum_pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING		1031991	0		=			
ANR	1032446	PtrMemberAccess	penum_pgs -> in_cachedevice		1031991	0					
ANR	1032447	Identifier	penum_pgs		1031991	0					
ANR	1032448	Identifier	in_cachedevice		1031991	1					
ANR	1032449	Identifier	CACHE_DEVICE_NOT_CACHING		1031991	1					
ANR	1032450	ExpressionStatement	penum_pgs -> fill_adjust . x = penum_pgs -> fill_adjust . y = 0	1108:16:40039:40094	1031991	2	True				
ANR	1032451	AssignmentExpression	penum_pgs -> fill_adjust . x = penum_pgs -> fill_adjust . y = 0		1031991	0		=			
ANR	1032452	MemberAccess	penum_pgs -> fill_adjust . x		1031991	0					
ANR	1032453	PtrMemberAccess	penum_pgs -> fill_adjust		1031991	0					
ANR	1032454	Identifier	penum_pgs		1031991	0					
ANR	1032455	Identifier	fill_adjust		1031991	1					
ANR	1032456	Identifier	x		1031991	1					
ANR	1032457	AssignmentExpression	penum_pgs -> fill_adjust . y = 0		1031991	1		=			
ANR	1032458	MemberAccess	penum_pgs -> fill_adjust . y		1031991	0					
ANR	1032459	PtrMemberAccess	penum_pgs -> fill_adjust		1031991	0					
ANR	1032460	Identifier	penum_pgs		1031991	0					
ANR	1032461	Identifier	fill_adjust		1031991	1					
ANR	1032462	Identifier	y		1031991	1					
ANR	1032463	PrimaryExpression	0		1031991	1					
ANR	1032464	ExpressionStatement	code = gs_fill ( penum_pgs )	1110:16:40113:40138	1031991	3	True				
ANR	1032465	AssignmentExpression	code = gs_fill ( penum_pgs )		1031991	0		=			
ANR	1032466	Identifier	code		1031991	0					
ANR	1032467	CallExpression	gs_fill ( penum_pgs )		1031991	1					
ANR	1032468	Callee	gs_fill		1031991	0					
ANR	1032469	Identifier	gs_fill		1031991	0					
ANR	1032470	ArgumentList	penum_pgs		1031991	1					
ANR	1032471	Argument	penum_pgs		1031991	0					
ANR	1032472	Identifier	penum_pgs		1031991	0					
ANR	1032473	ExpressionStatement	penum_pgs -> in_cachedevice = in_cachedevice	1112:16:40157:40199	1031991	4	True				
ANR	1032474	AssignmentExpression	penum_pgs -> in_cachedevice = in_cachedevice		1031991	0		=			
ANR	1032475	PtrMemberAccess	penum_pgs -> in_cachedevice		1031991	0					
ANR	1032476	Identifier	penum_pgs		1031991	0					
ANR	1032477	Identifier	in_cachedevice		1031991	1					
ANR	1032478	Identifier	in_cachedevice		1031991	1					
ANR	1032479	IfStatement	if ( code < 0 )		1031991	5					
ANR	1032480	Condition	code < 0	1114:20:40222:40229	1031991	0	True				
ANR	1032481	RelationalExpression	code < 0		1031991	0		<			
ANR	1032482	Identifier	code		1031991	0					
ANR	1032483	PrimaryExpression	0		1031991	1					
ANR	1032484	ReturnStatement	return code ;	1115:20:40252:40263	1031991	1	True				
ANR	1032485	Identifier	code		1031991	0					
ANR	1032486	IfStatement	"if ( ( code = gs_moveto ( penum_pgs , pt . x , pt . y ) ) < 0 )"		1031991	5					
ANR	1032487	Condition	"( code = gs_moveto ( penum_pgs , pt . x , pt . y ) ) < 0"	1117:16:40295:40339	1031991	0	True				
ANR	1032488	RelationalExpression	"( code = gs_moveto ( penum_pgs , pt . x , pt . y ) ) < 0"		1031991	0		<			
ANR	1032489	AssignmentExpression	"code = gs_moveto ( penum_pgs , pt . x , pt . y )"		1031991	0		=			
ANR	1032490	Identifier	code		1031991	0					
ANR	1032491	CallExpression	"gs_moveto ( penum_pgs , pt . x , pt . y )"		1031991	1					
ANR	1032492	Callee	gs_moveto		1031991	0					
ANR	1032493	Identifier	gs_moveto		1031991	0					
ANR	1032494	ArgumentList	penum_pgs		1031991	1					
ANR	1032495	Argument	penum_pgs		1031991	0					
ANR	1032496	Identifier	penum_pgs		1031991	0					
ANR	1032497	Argument	pt . x		1031991	1					
ANR	1032498	MemberAccess	pt . x		1031991	0					
ANR	1032499	Identifier	pt		1031991	0					
ANR	1032500	Identifier	x		1031991	1					
ANR	1032501	Argument	pt . y		1031991	2					
ANR	1032502	MemberAccess	pt . y		1031991	0					
ANR	1032503	Identifier	pt		1031991	0					
ANR	1032504	Identifier	y		1031991	1					
ANR	1032505	PrimaryExpression	0		1031991	1					
ANR	1032506	ReturnStatement	return code ;	1118:16:40358:40369	1031991	1	True				
ANR	1032507	Identifier	code		1031991	0					
ANR	1032508	ElseStatement	else		1031991	0					
ANR	1032509	CompoundStatement		117:12:4336:4347	1031991	0					
ANR	1032510	IdentifierDeclStatement	int rast_orig_x = rast . orig_x ;	1121:12:40408:40437	1031991	0	True				
ANR	1032511	IdentifierDecl	rast_orig_x = rast . orig_x		1031991	0					
ANR	1032512	IdentifierDeclType	int		1031991	0					
ANR	1032513	Identifier	rast_orig_x		1031991	1					
ANR	1032514	AssignmentExpression	rast_orig_x = rast . orig_x		1031991	2		=			
ANR	1032515	Identifier	rast_orig_x		1031991	0					
ANR	1032516	MemberAccess	rast . orig_x		1031991	1					
ANR	1032517	Identifier	rast		1031991	0					
ANR	1032518	Identifier	orig_x		1031991	1					
ANR	1032519	IdentifierDeclStatement	int rast_orig_y = - rast . orig_y ;	1122:12:40451:40481	1031991	1	True				
ANR	1032520	IdentifierDecl	rast_orig_y = - rast . orig_y		1031991	0					
ANR	1032521	IdentifierDeclType	int		1031991	0					
ANR	1032522	Identifier	rast_orig_y		1031991	1					
ANR	1032523	AssignmentExpression	rast_orig_y = - rast . orig_y		1031991	2		=			
ANR	1032524	Identifier	rast_orig_y		1031991	0					
ANR	1032525	UnaryOperationExpression	- rast . orig_y		1031991	1					
ANR	1032526	UnaryOperator	-		1031991	0					
ANR	1032527	MemberAccess	rast . orig_y		1031991	1					
ANR	1032528	Identifier	rast		1031991	0					
ANR	1032529	Identifier	orig_y		1031991	1					
ANR	1032530	IdentifierDeclStatement	gs_point pt ;	1123:12:40495:40506	1031991	2	True				
ANR	1032531	IdentifierDecl	pt		1031991	0					
ANR	1032532	IdentifierDeclType	gs_point		1031991	0					
ANR	1032533	Identifier	pt		1031991	1					
ANR	1032534	IfStatement	"if ( ( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0 )"		1031991	3					
ANR	1032535	Condition	"( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0"	1131:16:41012:41055	1031991	0	True				
ANR	1032536	RelationalExpression	"( code = gs_currentpoint ( penum_pgs , & pt ) ) < 0"		1031991	0		<			
ANR	1032537	AssignmentExpression	"code = gs_currentpoint ( penum_pgs , & pt )"		1031991	0		=			
ANR	1032538	Identifier	code		1031991	0					
ANR	1032539	CallExpression	"gs_currentpoint ( penum_pgs , & pt )"		1031991	1					
ANR	1032540	Callee	gs_currentpoint		1031991	0					
ANR	1032541	Identifier	gs_currentpoint		1031991	0					
ANR	1032542	ArgumentList	penum_pgs		1031991	1					
ANR	1032543	Argument	penum_pgs		1031991	0					
ANR	1032544	Identifier	penum_pgs		1031991	0					
ANR	1032545	Argument	& pt		1031991	1					
ANR	1032546	UnaryOperationExpression	& pt		1031991	0					
ANR	1032547	UnaryOperator	&		1031991	0					
ANR	1032548	Identifier	pt		1031991	1					
ANR	1032549	PrimaryExpression	0		1031991	1					
ANR	1032550	ReturnStatement	return code ;	1132:16:41074:41085	1031991	1	True				
ANR	1032551	Identifier	code		1031991	0					
ANR	1032552	IfStatement	if ( penum_pgs -> in_cachedevice == CACHE_DEVICE_CACHING )		1031991	4					
ANR	1032553	Condition	penum_pgs -> in_cachedevice == CACHE_DEVICE_CACHING	1134:16:41104:41152	1031991	0	True				
ANR	1032554	EqualityExpression	penum_pgs -> in_cachedevice == CACHE_DEVICE_CACHING		1031991	0		==			
ANR	1032555	PtrMemberAccess	penum_pgs -> in_cachedevice		1031991	0					
ANR	1032556	Identifier	penum_pgs		1031991	0					
ANR	1032557	Identifier	in_cachedevice		1031991	1					
ANR	1032558	Identifier	CACHE_DEVICE_CACHING		1031991	1					
ANR	1032559	CompoundStatement		128:67:4996:4996	1031991	1					
ANR	1032560	IfStatement	if ( rast . width != 0 )		1031991	0					
ANR	1032561	Condition	rast . width != 0	1141:20:41631:41645	1031991	0	True				
ANR	1032562	EqualityExpression	rast . width != 0		1031991	0		!=			
ANR	1032563	MemberAccess	rast . width		1031991	0					
ANR	1032564	Identifier	rast		1031991	0					
ANR	1032565	Identifier	width		1031991	1					
ANR	1032566	PrimaryExpression	0		1031991	1					
ANR	1032567	CompoundStatement		143:20:5925:6185	1031991	1					
ANR	1032568	IdentifierDeclStatement	int shift_rd = _fixed_shift - frac_pixel_shift ;	1142:20:41670:41716	1031991	0	True				
ANR	1032569	IdentifierDecl	shift_rd = _fixed_shift - frac_pixel_shift		1031991	0					
ANR	1032570	IdentifierDeclType	int		1031991	0					
ANR	1032571	Identifier	shift_rd		1031991	1					
ANR	1032572	AssignmentExpression	shift_rd = _fixed_shift - frac_pixel_shift		1031991	2		=			
ANR	1032573	Identifier	shift_rd		1031991	0					
ANR	1032574	AdditiveExpression	_fixed_shift - frac_pixel_shift		1031991	1		-			
ANR	1032575	Identifier	_fixed_shift		1031991	0					
ANR	1032576	Identifier	frac_pixel_shift		1031991	1					
ANR	1032577	IdentifierDeclStatement	int rounding = 1 << ( frac_pixel_shift - 1 ) ;	1143:20:41738:41780	1031991	1	True				
ANR	1032578	IdentifierDecl	rounding = 1 << ( frac_pixel_shift - 1 )		1031991	0					
ANR	1032579	IdentifierDeclType	int		1031991	0					
ANR	1032580	Identifier	rounding		1031991	1					
ANR	1032581	AssignmentExpression	rounding = 1 << ( frac_pixel_shift - 1 )		1031991	2		=			
ANR	1032582	Identifier	rounding		1031991	0					
ANR	1032583	ShiftExpression	1 << ( frac_pixel_shift - 1 )		1031991	1		<<			
ANR	1032584	PrimaryExpression	1		1031991	0					
ANR	1032585	AdditiveExpression	frac_pixel_shift - 1		1031991	1		-			
ANR	1032586	Identifier	frac_pixel_shift		1031991	0					
ANR	1032587	PrimaryExpression	1		1031991	1					
ANR	1032588	IdentifierDeclStatement	"int dx = arith_rshift_slow ( ( penum_pgs -> ctm . tx_fixed >> shift_rd ) + rast_orig_x + rounding , frac_pixel_shift ) ;"	1144:20:41802:42062	1031991	2	True				
ANR	1032589	IdentifierDecl	"dx = arith_rshift_slow ( ( penum_pgs -> ctm . tx_fixed >> shift_rd ) + rast_orig_x + rounding , frac_pixel_shift )"		1031991	0					
ANR	1032590	IdentifierDeclType	int		1031991	0					
ANR	1032591	Identifier	dx		1031991	1					
ANR	1032592	AssignmentExpression	"dx = arith_rshift_slow ( ( penum_pgs -> ctm . tx_fixed >> shift_rd ) + rast_orig_x + rounding , frac_pixel_shift )"		1031991	2		=			
ANR	1032593	Identifier	dx		1031991	0					
ANR	1032594	CallExpression	"arith_rshift_slow ( ( penum_pgs -> ctm . tx_fixed >> shift_rd ) + rast_orig_x + rounding , frac_pixel_shift )"		1031991	1					
ANR	1032595	Callee	arith_rshift_slow		1031991	0					
ANR	1032596	Identifier	arith_rshift_slow		1031991	0					
ANR	1032597	ArgumentList	( penum_pgs -> ctm . tx_fixed >> shift_rd ) + rast_orig_x + rounding		1031991	1					
ANR	1032598	Argument	( penum_pgs -> ctm . tx_fixed >> shift_rd ) + rast_orig_x + rounding		1031991	0					
ANR	1032599	AdditiveExpression	( penum_pgs -> ctm . tx_fixed >> shift_rd ) + rast_orig_x + rounding		1031991	0		+			
ANR	1032600	ShiftExpression	penum_pgs -> ctm . tx_fixed >> shift_rd		1031991	0		>>			
ANR	1032601	MemberAccess	penum_pgs -> ctm . tx_fixed		1031991	0					
ANR	1032602	PtrMemberAccess	penum_pgs -> ctm		1031991	0					
ANR	1032603	Identifier	penum_pgs		1031991	0					
ANR	1032604	Identifier	ctm		1031991	1					
ANR	1032605	Identifier	tx_fixed		1031991	1					
ANR	1032606	Identifier	shift_rd		1031991	1					
ANR	1032607	AdditiveExpression	rast_orig_x + rounding		1031991	1		+			
ANR	1032608	Identifier	rast_orig_x		1031991	0					
ANR	1032609	Identifier	rounding		1031991	1					
ANR	1032610	Argument	frac_pixel_shift		1031991	1					
ANR	1032611	Identifier	frac_pixel_shift		1031991	0					
ANR	1032612	IdentifierDeclStatement	"int dy = arith_rshift_slow ( ( penum_pgs -> ctm . ty_fixed >> shift_rd ) + rast_orig_y + rounding , frac_pixel_shift ) ;"	1149:20:42084:42344	1031991	3	True				
ANR	1032613	IdentifierDecl	"dy = arith_rshift_slow ( ( penum_pgs -> ctm . ty_fixed >> shift_rd ) + rast_orig_y + rounding , frac_pixel_shift )"		1031991	0					
ANR	1032614	IdentifierDeclType	int		1031991	0					
ANR	1032615	Identifier	dy		1031991	1					
ANR	1032616	AssignmentExpression	"dy = arith_rshift_slow ( ( penum_pgs -> ctm . ty_fixed >> shift_rd ) + rast_orig_y + rounding , frac_pixel_shift )"		1031991	2		=			
ANR	1032617	Identifier	dy		1031991	0					
ANR	1032618	CallExpression	"arith_rshift_slow ( ( penum_pgs -> ctm . ty_fixed >> shift_rd ) + rast_orig_y + rounding , frac_pixel_shift )"		1031991	1					
ANR	1032619	Callee	arith_rshift_slow		1031991	0					
ANR	1032620	Identifier	arith_rshift_slow		1031991	0					
ANR	1032621	ArgumentList	( penum_pgs -> ctm . ty_fixed >> shift_rd ) + rast_orig_y + rounding		1031991	1					
ANR	1032622	Argument	( penum_pgs -> ctm . ty_fixed >> shift_rd ) + rast_orig_y + rounding		1031991	0					
ANR	1032623	AdditiveExpression	( penum_pgs -> ctm . ty_fixed >> shift_rd ) + rast_orig_y + rounding		1031991	0		+			
ANR	1032624	ShiftExpression	penum_pgs -> ctm . ty_fixed >> shift_rd		1031991	0		>>			
ANR	1032625	MemberAccess	penum_pgs -> ctm . ty_fixed		1031991	0					
ANR	1032626	PtrMemberAccess	penum_pgs -> ctm		1031991	0					
ANR	1032627	Identifier	penum_pgs		1031991	0					
ANR	1032628	Identifier	ctm		1031991	1					
ANR	1032629	Identifier	ty_fixed		1031991	1					
ANR	1032630	Identifier	shift_rd		1031991	1					
ANR	1032631	AdditiveExpression	rast_orig_y + rounding		1031991	1		+			
ANR	1032632	Identifier	rast_orig_y		1031991	0					
ANR	1032633	Identifier	rounding		1031991	1					
ANR	1032634	Argument	frac_pixel_shift		1031991	1					
ANR	1032635	Identifier	frac_pixel_shift		1031991	0					
ANR	1032636	IfStatement	if ( dx + rast . left_indent < 0 || dx + rast . left_indent + rast . black_width > dev1 -> width )		1031991	4					
ANR	1032637	Condition	dx + rast . left_indent < 0 || dx + rast . left_indent + rast . black_width > dev1 -> width	1155:24:42371:42501	1031991	0	True				
ANR	1032638	OrExpression	dx + rast . left_indent < 0 || dx + rast . left_indent + rast . black_width > dev1 -> width		1031991	0		||			
ANR	1032639	RelationalExpression	dx + rast . left_indent < 0		1031991	0		<			
ANR	1032640	AdditiveExpression	dx + rast . left_indent		1031991	0		+			
ANR	1032641	Identifier	dx		1031991	0					
ANR	1032642	MemberAccess	rast . left_indent		1031991	1					
ANR	1032643	Identifier	rast		1031991	0					
ANR	1032644	Identifier	left_indent		1031991	1					
ANR	1032645	PrimaryExpression	0		1031991	1					
ANR	1032646	RelationalExpression	dx + rast . left_indent + rast . black_width > dev1 -> width		1031991	1		>			
ANR	1032647	AdditiveExpression	dx + rast . left_indent + rast . black_width		1031991	0		+			
ANR	1032648	Identifier	dx		1031991	0					
ANR	1032649	AdditiveExpression	rast . left_indent + rast . black_width		1031991	1		+			
ANR	1032650	MemberAccess	rast . left_indent		1031991	0					
ANR	1032651	Identifier	rast		1031991	0					
ANR	1032652	Identifier	left_indent		1031991	1					
ANR	1032653	MemberAccess	rast . black_width		1031991	1					
ANR	1032654	Identifier	rast		1031991	0					
ANR	1032655	Identifier	black_width		1031991	1					
ANR	1032656	PtrMemberAccess	dev1 -> width		1031991	1					
ANR	1032657	Identifier	dev1		1031991	0					
ANR	1032658	Identifier	width		1031991	1					
ANR	1032659	CompoundStatement		151:37:6345:6345	1031991	1					
ANR	1032660	IfStatement	if ( gs_debug_c ( 'm' ) )		1031991	0					
ANR	1032661	Condition	gs_debug_c ( 'm' )	1159:28:42547:42561	1031991	0	True				
ANR	1032662	CallExpression	gs_debug_c ( 'm' )		1031991	0					
ANR	1032663	Callee	gs_debug_c		1031991	0					
ANR	1032664	Identifier	gs_debug_c		1031991	0					
ANR	1032665	ArgumentList	'm'		1031991	1					
ANR	1032666	Argument	'm'		1031991	0					
ANR	1032667	PrimaryExpression	'm'		1031991	0					
ANR	1032668	CompoundStatement		153:45:6405:6405	1031991	1					
ANR	1032669	ExpressionStatement	"emprintf2 ( dev1 -> memory , ""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"" , dx + rast . left_indent , dx + rast . left_indent + rast . black_width - dev1 -> width )"	1160:28:42594:42911	1031991	0	True				
ANR	1032670	CallExpression	"emprintf2 ( dev1 -> memory , ""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"" , dx + rast . left_indent , dx + rast . left_indent + rast . black_width - dev1 -> width )"		1031991	0					
ANR	1032671	Callee	emprintf2		1031991	0					
ANR	1032672	Identifier	emprintf2		1031991	0					
ANR	1032673	ArgumentList	dev1 -> memory		1031991	1					
ANR	1032674	Argument	dev1 -> memory		1031991	0					
ANR	1032675	PtrMemberAccess	dev1 -> memory		1031991	0					
ANR	1032676	Identifier	dev1		1031991	0					
ANR	1032677	Identifier	memory		1031991	1					
ANR	1032678	Argument	"""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"""		1031991	1					
ANR	1032679	PrimaryExpression	"""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"""		1031991	0					
ANR	1032680	Argument	dx + rast . left_indent		1031991	2					
ANR	1032681	AdditiveExpression	dx + rast . left_indent		1031991	0		+			
ANR	1032682	Identifier	dx		1031991	0					
ANR	1032683	MemberAccess	rast . left_indent		1031991	1					
ANR	1032684	Identifier	rast		1031991	0					
ANR	1032685	Identifier	left_indent		1031991	1					
ANR	1032686	Argument	dx + rast . left_indent + rast . black_width - dev1 -> width		1031991	3					
ANR	1032687	AdditiveExpression	dx + rast . left_indent + rast . black_width - dev1 -> width		1031991	0		+			
ANR	1032688	Identifier	dx		1031991	0					
ANR	1032689	AdditiveExpression	rast . left_indent + rast . black_width - dev1 -> width		1031991	1		+			
ANR	1032690	MemberAccess	rast . left_indent		1031991	0					
ANR	1032691	Identifier	rast		1031991	0					
ANR	1032692	Identifier	left_indent		1031991	1					
ANR	1032693	AdditiveExpression	rast . black_width - dev1 -> width		1031991	1		-			
ANR	1032694	MemberAccess	rast . black_width		1031991	0					
ANR	1032695	Identifier	rast		1031991	0					
ANR	1032696	Identifier	black_width		1031991	1					
ANR	1032697	PtrMemberAccess	dev1 -> width		1031991	1					
ANR	1032698	Identifier	dev1		1031991	0					
ANR	1032699	Identifier	width		1031991	1					
ANR	1032700	IfStatement	if ( dx + rast . left_indent < 0 )		1031991	1					
ANR	1032701	Condition	dx + rast . left_indent < 0	1167:28:42974:42998	1031991	0	True				
ANR	1032702	RelationalExpression	dx + rast . left_indent < 0		1031991	0		<			
ANR	1032703	AdditiveExpression	dx + rast . left_indent		1031991	0		+			
ANR	1032704	Identifier	dx		1031991	0					
ANR	1032705	MemberAccess	rast . left_indent		1031991	1					
ANR	1032706	Identifier	rast		1031991	0					
ANR	1032707	Identifier	left_indent		1031991	1					
ANR	1032708	PrimaryExpression	0		1031991	1					
ANR	1032709	ExpressionStatement	dx -= dx + rast . left_indent	1168:28:43029:43056	1031991	1	True				
ANR	1032710	AssignmentExpression	dx -= dx + rast . left_indent		1031991	0		-=			
ANR	1032711	Identifier	dx		1031991	0					
ANR	1032712	AdditiveExpression	dx + rast . left_indent		1031991	1		+			
ANR	1032713	Identifier	dx		1031991	0					
ANR	1032714	MemberAccess	rast . left_indent		1031991	1					
ANR	1032715	Identifier	rast		1031991	0					
ANR	1032716	Identifier	left_indent		1031991	1					
ANR	1032717	IfStatement	if ( dy + rast . top_indent < 0 || dy + rast . top_indent + rast . black_height > dev1 -> height )		1031991	5					
ANR	1032718	Condition	dy + rast . top_indent < 0 || dy + rast . top_indent + rast . black_height > dev1 -> height	1170:24:43104:43234	1031991	0	True				
ANR	1032719	OrExpression	dy + rast . top_indent < 0 || dy + rast . top_indent + rast . black_height > dev1 -> height		1031991	0		||			
ANR	1032720	RelationalExpression	dy + rast . top_indent < 0		1031991	0		<			
ANR	1032721	AdditiveExpression	dy + rast . top_indent		1031991	0		+			
ANR	1032722	Identifier	dy		1031991	0					
ANR	1032723	MemberAccess	rast . top_indent		1031991	1					
ANR	1032724	Identifier	rast		1031991	0					
ANR	1032725	Identifier	top_indent		1031991	1					
ANR	1032726	PrimaryExpression	0		1031991	1					
ANR	1032727	RelationalExpression	dy + rast . top_indent + rast . black_height > dev1 -> height		1031991	1		>			
ANR	1032728	AdditiveExpression	dy + rast . top_indent + rast . black_height		1031991	0		+			
ANR	1032729	Identifier	dy		1031991	0					
ANR	1032730	AdditiveExpression	rast . top_indent + rast . black_height		1031991	1		+			
ANR	1032731	MemberAccess	rast . top_indent		1031991	0					
ANR	1032732	Identifier	rast		1031991	0					
ANR	1032733	Identifier	top_indent		1031991	1					
ANR	1032734	MemberAccess	rast . black_height		1031991	1					
ANR	1032735	Identifier	rast		1031991	0					
ANR	1032736	Identifier	black_height		1031991	1					
ANR	1032737	PtrMemberAccess	dev1 -> height		1031991	1					
ANR	1032738	Identifier	dev1		1031991	0					
ANR	1032739	Identifier	height		1031991	1					
ANR	1032740	CompoundStatement		166:38:7078:7078	1031991	1					
ANR	1032741	IfStatement	if ( gs_debug_c ( 'm' ) )		1031991	0					
ANR	1032742	Condition	gs_debug_c ( 'm' )	1174:28:43280:43294	1031991	0	True				
ANR	1032743	CallExpression	gs_debug_c ( 'm' )		1031991	0					
ANR	1032744	Callee	gs_debug_c		1031991	0					
ANR	1032745	Identifier	gs_debug_c		1031991	0					
ANR	1032746	ArgumentList	'm'		1031991	1					
ANR	1032747	Argument	'm'		1031991	0					
ANR	1032748	PrimaryExpression	'm'		1031991	0					
ANR	1032749	CompoundStatement		168:45:7138:7138	1031991	1					
ANR	1032750	ExpressionStatement	"emprintf2 ( dev1 -> memory , ""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"" , dy + rast . top_indent , dy + rast . top_indent + rast . black_height - dev1 -> height )"	1175:28:43327:43644	1031991	0	True				
ANR	1032751	CallExpression	"emprintf2 ( dev1 -> memory , ""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"" , dy + rast . top_indent , dy + rast . top_indent + rast . black_height - dev1 -> height )"		1031991	0					
ANR	1032752	Callee	emprintf2		1031991	0					
ANR	1032753	Identifier	emprintf2		1031991	0					
ANR	1032754	ArgumentList	dev1 -> memory		1031991	1					
ANR	1032755	Argument	dev1 -> memory		1031991	0					
ANR	1032756	PtrMemberAccess	dev1 -> memory		1031991	0					
ANR	1032757	Identifier	dev1		1031991	0					
ANR	1032758	Identifier	memory		1031991	1					
ANR	1032759	Argument	"""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"""		1031991	1					
ANR	1032760	PrimaryExpression	"""Warning : Cropping a FAPI glyph while caching : dx=%d,%d.\\n"""		1031991	0					
ANR	1032761	Argument	dy + rast . top_indent		1031991	2					
ANR	1032762	AdditiveExpression	dy + rast . top_indent		1031991	0		+			
ANR	1032763	Identifier	dy		1031991	0					
ANR	1032764	MemberAccess	rast . top_indent		1031991	1					
ANR	1032765	Identifier	rast		1031991	0					
ANR	1032766	Identifier	top_indent		1031991	1					
ANR	1032767	Argument	dy + rast . top_indent + rast . black_height - dev1 -> height		1031991	3					
ANR	1032768	AdditiveExpression	dy + rast . top_indent + rast . black_height - dev1 -> height		1031991	0		+			
ANR	1032769	Identifier	dy		1031991	0					
ANR	1032770	AdditiveExpression	rast . top_indent + rast . black_height - dev1 -> height		1031991	1		+			
ANR	1032771	MemberAccess	rast . top_indent		1031991	0					
ANR	1032772	Identifier	rast		1031991	0					
ANR	1032773	Identifier	top_indent		1031991	1					
ANR	1032774	AdditiveExpression	rast . black_height - dev1 -> height		1031991	1		-			
ANR	1032775	MemberAccess	rast . black_height		1031991	0					
ANR	1032776	Identifier	rast		1031991	0					
ANR	1032777	Identifier	black_height		1031991	1					
ANR	1032778	PtrMemberAccess	dev1 -> height		1031991	1					
ANR	1032779	Identifier	dev1		1031991	0					
ANR	1032780	Identifier	height		1031991	1					
ANR	1032781	IfStatement	if ( dy + rast . top_indent < 0 )		1031991	1					
ANR	1032782	Condition	dy + rast . top_indent < 0	1182:28:43707:43730	1031991	0	True				
ANR	1032783	RelationalExpression	dy + rast . top_indent < 0		1031991	0		<			
ANR	1032784	AdditiveExpression	dy + rast . top_indent		1031991	0		+			
ANR	1032785	Identifier	dy		1031991	0					
ANR	1032786	MemberAccess	rast . top_indent		1031991	1					
ANR	1032787	Identifier	rast		1031991	0					
ANR	1032788	Identifier	top_indent		1031991	1					
ANR	1032789	PrimaryExpression	0		1031991	1					
ANR	1032790	ExpressionStatement	dy -= dy + rast . top_indent	1183:28:43761:43787	1031991	1	True				
ANR	1032791	AssignmentExpression	dy -= dy + rast . top_indent		1031991	0		-=			
ANR	1032792	Identifier	dy		1031991	0					
ANR	1032793	AdditiveExpression	dy + rast . top_indent		1031991	1		+			
ANR	1032794	Identifier	dy		1031991	0					
ANR	1032795	MemberAccess	rast . top_indent		1031991	1					
ANR	1032796	Identifier	rast		1031991	0					
ANR	1032797	Identifier	top_indent		1031991	1					
ANR	1032798	IfStatement	"if ( ( code = fapi_copy_mono ( dev1 , & rast , dx , dy ) ) < 0 )"		1031991	6					
ANR	1032799	Condition	"( code = fapi_copy_mono ( dev1 , & rast , dx , dy ) ) < 0"	1185:24:43835:43882	1031991	0	True				
ANR	1032800	RelationalExpression	"( code = fapi_copy_mono ( dev1 , & rast , dx , dy ) ) < 0"		1031991	0		<			
ANR	1032801	AssignmentExpression	"code = fapi_copy_mono ( dev1 , & rast , dx , dy )"		1031991	0		=			
ANR	1032802	Identifier	code		1031991	0					
ANR	1032803	CallExpression	"fapi_copy_mono ( dev1 , & rast , dx , dy )"		1031991	1					
ANR	1032804	Callee	fapi_copy_mono		1031991	0					
ANR	1032805	Identifier	fapi_copy_mono		1031991	0					
ANR	1032806	ArgumentList	dev1		1031991	1					
ANR	1032807	Argument	dev1		1031991	0					
ANR	1032808	Identifier	dev1		1031991	0					
ANR	1032809	Argument	& rast		1031991	1					
ANR	1032810	UnaryOperationExpression	& rast		1031991	0					
ANR	1032811	UnaryOperator	&		1031991	0					
ANR	1032812	Identifier	rast		1031991	1					
ANR	1032813	Argument	dx		1031991	2					
ANR	1032814	Identifier	dx		1031991	0					
ANR	1032815	Argument	dy		1031991	3					
ANR	1032816	Identifier	dy		1031991	0					
ANR	1032817	PrimaryExpression	0		1031991	1					
ANR	1032818	ReturnStatement	return code ;	1186:24:43909:43920	1031991	1	True				
ANR	1032819	Identifier	code		1031991	0					
ANR	1032820	IfStatement	"if ( gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum )"		1031991	7					
ANR	1032821	Condition	"gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum"	1188:24:43947:44026	1031991	0	True				
ANR	1032822	EqualityExpression	"gs_object_type ( penum -> memory , penum ) == & st_gs_show_enum"		1031991	0		==			
ANR	1032823	CallExpression	"gs_object_type ( penum -> memory , penum )"		1031991	0					
ANR	1032824	Callee	gs_object_type		1031991	0					
ANR	1032825	Identifier	gs_object_type		1031991	0					
ANR	1032826	ArgumentList	penum -> memory		1031991	1					
ANR	1032827	Argument	penum -> memory		1031991	0					
ANR	1032828	PtrMemberAccess	penum -> memory		1031991	0					
ANR	1032829	Identifier	penum		1031991	0					
ANR	1032830	Identifier	memory		1031991	1					
ANR	1032831	Argument	penum		1031991	1					
ANR	1032832	Identifier	penum		1031991	0					
ANR	1032833	UnaryOperationExpression	& st_gs_show_enum		1031991	1					
ANR	1032834	UnaryOperator	&		1031991	0					
ANR	1032835	Identifier	st_gs_show_enum		1031991	1					
ANR	1032836	CompoundStatement		183:42:7870:7870	1031991	1					
ANR	1032837	ExpressionStatement	penum_s -> cc -> offset . x += float2fixed ( penum_s -> fapi_glyph_shift . x )	1190:24:44055:44148	1031991	0	True				
ANR	1032838	AssignmentExpression	penum_s -> cc -> offset . x += float2fixed ( penum_s -> fapi_glyph_shift . x )		1031991	0		+=			
ANR	1032839	MemberAccess	penum_s -> cc -> offset . x		1031991	0					
ANR	1032840	PtrMemberAccess	penum_s -> cc -> offset		1031991	0					
ANR	1032841	PtrMemberAccess	penum_s -> cc		1031991	0					
ANR	1032842	Identifier	penum_s		1031991	0					
ANR	1032843	Identifier	cc		1031991	1					
ANR	1032844	Identifier	offset		1031991	1					
ANR	1032845	Identifier	x		1031991	1					
ANR	1032846	CallExpression	float2fixed ( penum_s -> fapi_glyph_shift . x )		1031991	1					
ANR	1032847	Callee	float2fixed		1031991	0					
ANR	1032848	Identifier	float2fixed		1031991	0					
ANR	1032849	ArgumentList	penum_s -> fapi_glyph_shift . x		1031991	1					
ANR	1032850	Argument	penum_s -> fapi_glyph_shift . x		1031991	0					
ANR	1032851	MemberAccess	penum_s -> fapi_glyph_shift . x		1031991	0					
ANR	1032852	PtrMemberAccess	penum_s -> fapi_glyph_shift		1031991	0					
ANR	1032853	Identifier	penum_s		1031991	0					
ANR	1032854	Identifier	fapi_glyph_shift		1031991	1					
ANR	1032855	Identifier	x		1031991	1					
ANR	1032856	ExpressionStatement	penum_s -> cc -> offset . y += float2fixed ( penum_s -> fapi_glyph_shift . y )	1192:24:44174:44267	1031991	1	True				
ANR	1032857	AssignmentExpression	penum_s -> cc -> offset . y += float2fixed ( penum_s -> fapi_glyph_shift . y )		1031991	0		+=			
ANR	1032858	MemberAccess	penum_s -> cc -> offset . y		1031991	0					
ANR	1032859	PtrMemberAccess	penum_s -> cc -> offset		1031991	0					
ANR	1032860	PtrMemberAccess	penum_s -> cc		1031991	0					
ANR	1032861	Identifier	penum_s		1031991	0					
ANR	1032862	Identifier	cc		1031991	1					
ANR	1032863	Identifier	offset		1031991	1					
ANR	1032864	Identifier	y		1031991	1					
ANR	1032865	CallExpression	float2fixed ( penum_s -> fapi_glyph_shift . y )		1031991	1					
ANR	1032866	Callee	float2fixed		1031991	0					
ANR	1032867	Identifier	float2fixed		1031991	0					
ANR	1032868	ArgumentList	penum_s -> fapi_glyph_shift . y		1031991	1					
ANR	1032869	Argument	penum_s -> fapi_glyph_shift . y		1031991	0					
ANR	1032870	MemberAccess	penum_s -> fapi_glyph_shift . y		1031991	0					
ANR	1032871	PtrMemberAccess	penum_s -> fapi_glyph_shift		1031991	0					
ANR	1032872	Identifier	penum_s		1031991	0					
ANR	1032873	Identifier	fapi_glyph_shift		1031991	1					
ANR	1032874	Identifier	y		1031991	1					
ANR	1032875	ElseStatement	else		1031991	0					
ANR	1032876	IfStatement	"if ( ! SHOW_IS ( penum , TEXT_DO_NONE ) )"		1031991	0					
ANR	1032877	Condition	"! SHOW_IS ( penum , TEXT_DO_NONE )"	1197:21:44344:44372	1031991	0	True				
ANR	1032878	UnaryOperationExpression	"! SHOW_IS ( penum , TEXT_DO_NONE )"		1031991	0					
ANR	1032879	UnaryOperator	!		1031991	0					
ANR	1032880	CallExpression	"SHOW_IS ( penum , TEXT_DO_NONE )"		1031991	1					
ANR	1032881	Callee	SHOW_IS		1031991	0					
ANR	1032882	Identifier	SHOW_IS		1031991	0					
ANR	1032883	ArgumentList	penum		1031991	1					
ANR	1032884	Argument	penum		1031991	0					
ANR	1032885	Identifier	penum		1031991	0					
ANR	1032886	Argument	TEXT_DO_NONE		1031991	1					
ANR	1032887	Identifier	TEXT_DO_NONE		1031991	0					
ANR	1032888	CompoundStatement		191:52:8216:8216	1031991	1					
ANR	1032889	IfStatement	"if ( ( code = fapi_image_uncached_glyph ( pfont , pgs , penum_s , & rast , import_shift_v ) ) < 0 )"		1031991	0					
ANR	1032890	Condition	"( code = fapi_image_uncached_glyph ( pfont , pgs , penum_s , & rast , import_shift_v ) ) < 0"	1198:20:44424:44573	1031991	0	True				
ANR	1032891	RelationalExpression	"( code = fapi_image_uncached_glyph ( pfont , pgs , penum_s , & rast , import_shift_v ) ) < 0"		1031991	0		<			
ANR	1032892	AssignmentExpression	"code = fapi_image_uncached_glyph ( pfont , pgs , penum_s , & rast , import_shift_v )"		1031991	0		=			
ANR	1032893	Identifier	code		1031991	0					
ANR	1032894	CallExpression	"fapi_image_uncached_glyph ( pfont , pgs , penum_s , & rast , import_shift_v )"		1031991	1					
ANR	1032895	Callee	fapi_image_uncached_glyph		1031991	0					
ANR	1032896	Identifier	fapi_image_uncached_glyph		1031991	0					
ANR	1032897	ArgumentList	pfont		1031991	1					
ANR	1032898	Argument	pfont		1031991	0					
ANR	1032899	Identifier	pfont		1031991	0					
ANR	1032900	Argument	pgs		1031991	1					
ANR	1032901	Identifier	pgs		1031991	0					
ANR	1032902	Argument	penum_s		1031991	2					
ANR	1032903	Identifier	penum_s		1031991	0					
ANR	1032904	Argument	& rast		1031991	3					
ANR	1032905	UnaryOperationExpression	& rast		1031991	0					
ANR	1032906	UnaryOperator	&		1031991	0					
ANR	1032907	Identifier	rast		1031991	1					
ANR	1032908	Argument	import_shift_v		1031991	4					
ANR	1032909	Identifier	import_shift_v		1031991	0					
ANR	1032910	PrimaryExpression	0		1031991	1					
ANR	1032911	ReturnStatement	return code ;	1201:20:44596:44607	1031991	1	True				
ANR	1032912	Identifier	code		1031991	0					
ANR	1032913	ReturnStatement	return 0 ;	1206:4:44644:44652	1031991	14	True				
ANR	1032914	PrimaryExpression	0		1031991	0					
ANR	1032915	ReturnType	int		1031991	1					
ANR	1032916	Identifier	gs_fapi_finish_render		1031991	2					
ANR	1032917	ParameterList	"gs_font * pfont , gs_gstate * pgs , gs_text_enum_t * penum , gs_fapi_server * I"		1031991	3					
ANR	1032918	Parameter	gs_font * pfont	1006:22:36084:36097	1031991	0	True				
ANR	1032919	ParameterType	gs_font *		1031991	0					
ANR	1032920	Identifier	pfont		1031991	1					
ANR	1032921	Parameter	gs_gstate * pgs	1006:38:36100:36113	1031991	1	True				
ANR	1032922	ParameterType	gs_gstate *		1031991	0					
ANR	1032923	Identifier	pgs		1031991	1					
ANR	1032924	Parameter	gs_text_enum_t * penum	1006:54:36116:36136	1031991	2	True				
ANR	1032925	ParameterType	gs_text_enum_t *		1031991	0					
ANR	1032926	Identifier	penum		1031991	1					
ANR	1032927	Parameter	gs_fapi_server * I	1006:77:36139:36155	1031991	3	True				
ANR	1032928	ParameterType	gs_fapi_server *		1031991	0					
ANR	1032929	Identifier	I		1031991	1					
ANR	1032930	CFGEntryNode	ENTRY		1031991		True				
ANR	1032931	CFGExitNode	EXIT		1031991		True				
ANR	1032932	Symbol	* penum_pgs -> show_gstate		1031991						
ANR	1032933	Symbol	pt		1031991						
ANR	1032934	Symbol	penum_pgs -> in_cachedevice		1031991						
ANR	1032935	Symbol	penum_pgs		1031991						
ANR	1032936	Symbol	* pgs		1031991						
ANR	1032937	Symbol	penum_pgs -> ctm		1031991						
ANR	1032938	Symbol	penum_pgs -> in_charpath		1031991						
ANR	1032939	Symbol	gs_currentdevice_inline		1031991						
ANR	1032940	Symbol	fapi_image_uncached_glyph		1031991						
ANR	1032941	Symbol	penum_pgs -> ctm . ty_fixed		1031991						
ANR	1032942	Symbol	rast . black_width		1031991						
ANR	1032943	Symbol	gs_char_flatness		1031991						
ANR	1032944	Symbol	gs_stroke		1031991						
ANR	1032945	Symbol	gs_currentlinewidth		1031991						
ANR	1032946	Symbol	penum_s -> fapi_glyph_shift		1031991						
ANR	1032947	Symbol	st_gs_show_enum		1031991						
ANR	1032948	Symbol	* penum_pgs		1031991						
ANR	1032949	Symbol	rast . orig_y		1031991						
ANR	1032950	Symbol	rast . orig_x		1031991						
ANR	1032951	Symbol	penum		1031991						
ANR	1032952	Symbol	gs_currentpoint		1031991						
ANR	1032953	Symbol	& pt		1031991						
ANR	1032954	Symbol	CACHE_DEVICE_NOT_CACHING		1031991						
ANR	1032955	Symbol	penum_pgs -> fill_adjust		1031991						
ANR	1032956	Symbol	* penum		1031991						
ANR	1032957	Symbol	pfont -> memory		1031991						
ANR	1032958	Symbol	I -> use_outline		1031991						
ANR	1032959	Symbol	penum_s -> fapi_glyph_shift . x		1031991						
ANR	1032960	Symbol	I		1031991						
ANR	1032961	Symbol	penum_s -> fapi_glyph_shift . y		1031991						
ANR	1032962	Symbol	penum -> pgs		1031991						
ANR	1032963	Symbol	penum_pgs -> path		1031991						
ANR	1032964	Symbol	float2fixed		1031991						
ANR	1032965	Symbol	& rast		1031991						
ANR	1032966	Symbol	pgs		1031991						
ANR	1032967	Symbol	gs_gstate_setflat		1031991						
ANR	1032968	Symbol	fapi_copy_mono		1031991						
ANR	1032969	Symbol	rounding		1031991						
ANR	1032970	Symbol	I -> get_char_raster		1031991						
ANR	1032971	Symbol	* dev1		1031991						
ANR	1032972	Symbol	rast . top_indent		1031991						
ANR	1032973	Symbol	pt . x		1031991						
ANR	1032974	Symbol	pt . y		1031991						
ANR	1032975	Symbol	penum_s		1031991						
ANR	1032976	Symbol	gs_object_type		1031991						
ANR	1032977	Symbol	penum_pgs -> show_gstate -> path		1031991						
ANR	1032978	Symbol	dev1 -> width		1031991						
ANR	1032979	Symbol	gs_error_undefined		1031991						
ANR	1032980	Symbol	rast_orig_y		1031991						
ANR	1032981	Symbol	rast_orig_x		1031991						
ANR	1032982	Symbol	& st_gs_show_enum		1031991						
ANR	1032983	Symbol	lw		1031991						
ANR	1032984	Symbol	outline_char		1031991						
ANR	1032985	Symbol	arith_rshift_slow		1031991						
ANR	1032986	Symbol	penum_s -> cc -> offset . x		1031991						
ANR	1032987	Symbol	penum_s -> cc -> offset . y		1031991						
ANR	1032988	Symbol	dev1		1031991						
ANR	1032989	Symbol	CACHE_DEVICE_CACHING		1031991						
ANR	1032990	Symbol	dx		1031991						
ANR	1032991	Symbol	pbfont -> StrokeWidth		1031991						
ANR	1032992	Symbol	dy		1031991						
ANR	1032993	Symbol	* penum_s		1031991						
ANR	1032994	Symbol	import_shift_v		1031991						
ANR	1032995	Symbol	in_cachedevice		1031991						
ANR	1032996	Symbol	gs_debug_c		1031991						
ANR	1032997	Symbol	* pbfont		1031991						
ANR	1032998	Symbol	penum_pgs -> show_gstate		1031991						
ANR	1032999	Symbol	_fixed_shift		1031991						
ANR	1033000	Symbol	penum_pgs -> fill_adjust . x		1031991						
ANR	1033001	Symbol	shift_rd		1031991						
ANR	1033002	Symbol	penum_pgs -> fill_adjust . y		1031991						
ANR	1033003	Symbol	NULL		1031991						
ANR	1033004	Symbol	rast . width		1031991						
ANR	1033005	Symbol	SHOW_IS		1031991						
ANR	1033006	Symbol	dev1 -> memory		1031991						
ANR	1033007	Symbol	dev1 -> height		1031991						
ANR	1033008	Symbol	rast . black_height		1031991						
ANR	1033009	Symbol	* penum_s -> cc		1031991						
ANR	1033010	Symbol	penum_pgs -> ctm . tx_fixed		1031991						
ANR	1033011	Symbol	penum_s -> pgs		1031991						
ANR	1033012	Symbol	gs_fill		1031991						
ANR	1033013	Symbol	pgs -> in_charpath		1031991						
ANR	1033014	Symbol	gs_error_unregistered		1031991						
ANR	1033015	Symbol	code		1031991						
ANR	1033016	Symbol	st_gs_gstate		1031991						
ANR	1033017	Symbol	penum -> memory		1031991						
ANR	1033018	Symbol	gs_moveto		1031991						
ANR	1033019	Symbol	* * penum_pgs		1031991						
ANR	1033020	Symbol	pbfont -> PaintType		1031991						
ANR	1033021	Symbol	* * penum_s		1031991						
ANR	1033022	Symbol	* I		1031991						
ANR	1033023	Symbol	mem		1031991						
ANR	1033024	Symbol	TEXT_DO_NONE		1031991						
ANR	1033025	Symbol	penum_s -> cc -> offset		1031991						
ANR	1033026	Symbol	penum_s -> cc		1031991						
ANR	1033027	Symbol	pfont		1031991						
ANR	1033028	Symbol	rast		1031991						
ANR	1033029	Symbol	gx_path_add_char_path		1031991						
ANR	1033030	Symbol	frac_pixel_shift		1031991						
ANR	1033031	Symbol	& st_gs_gstate		1031991						
ANR	1033032	Symbol	* pfont		1031991						
ANR	1033033	Symbol	pbfont		1031991						
ANR	1033034	Symbol	rast . left_indent		1031991						
ANR	1033035	Function	gs_fapi_do_char	1216:0:44931:65727							
ANR	1033036	FunctionDef	"gs_fapi_do_char (gs_font * pfont , gs_gstate * pgs , gs_text_enum_t * penum , char * font_file_path , bool bBuildGlyph , gs_string * charstring , gs_string * glyphname , gs_char chr , gs_glyph index , int subfont)"		1033035	0					
ANR	1033037	CompoundStatement		1220:0:45165:65727	1033035	0					
ANR	1033038	IdentifierDeclStatement	gs_show_enum * penum_s = ( gs_show_enum * ) penum ;	1221:4:45240:45286	1033035	0	True				
ANR	1033039	IdentifierDecl	* penum_s = ( gs_show_enum * ) penum		1033035	0					
ANR	1033040	IdentifierDeclType	gs_show_enum *		1033035	0					
ANR	1033041	Identifier	penum_s		1033035	1					
ANR	1033042	AssignmentExpression	* penum_s = ( gs_show_enum * ) penum		1033035	2		=			
ANR	1033043	Identifier	penum_s		1033035	0					
ANR	1033044	CastExpression	( gs_show_enum * ) penum		1033035	1					
ANR	1033045	CastTarget	gs_show_enum *		1033035	0					
ANR	1033046	Identifier	penum		1033035	1					
ANR	1033047	IdentifierDeclStatement	gx_device * dev = gs_currentdevice_inline ( pgs ) ;	1222:4:45292:45337	1033035	1	True				
ANR	1033048	IdentifierDecl	* dev = gs_currentdevice_inline ( pgs )		1033035	0					
ANR	1033049	IdentifierDeclType	gx_device *		1033035	0					
ANR	1033050	Identifier	dev		1033035	1					
ANR	1033051	AssignmentExpression	* dev = gs_currentdevice_inline ( pgs )		1033035	2		=			
ANR	1033052	Identifier	dev		1033035	0					
ANR	1033053	CallExpression	gs_currentdevice_inline ( pgs )		1033035	1					
ANR	1033054	Callee	gs_currentdevice_inline		1033035	0					
ANR	1033055	Identifier	gs_currentdevice_inline		1033035	0					
ANR	1033056	ArgumentList	pgs		1033035	1					
ANR	1033057	Argument	pgs		1033035	0					
ANR	1033058	Identifier	pgs		1033035	0					
ANR	1033059	IdentifierDeclStatement	"gs_fapi_char_ref cr = { 0 , { 0 } , 0 , false , NULL , 0 , 0 , 0 , 0 , 0 , gs_fapi_metrics_notdef } ;"	1229:4:45604:45699	1033035	2	True				
ANR	1033060	IdentifierDecl	"cr = { 0 , { 0 } , 0 , false , NULL , 0 , 0 , 0 , 0 , 0 , gs_fapi_metrics_notdef }"		1033035	0					
ANR	1033061	IdentifierDeclType	gs_fapi_char_ref		1033035	0					
ANR	1033062	Identifier	cr		1033035	1					
ANR	1033063	AssignmentExpression	"cr = { 0 , { 0 } , 0 , false , NULL , 0 , 0 , 0 , 0 , 0 , gs_fapi_metrics_notdef }"		1033035	2		=			
ANR	1033064	Identifier	cr		1033035	0					
ANR	1033065	InitializerList	0		1033035	1					
ANR	1033066	PrimaryExpression	0		1033035	0					
ANR	1033067	InitializerList	0		1033035	1					
ANR	1033068	PrimaryExpression	0		1033035	0					
ANR	1033069	PrimaryExpression	0		1033035	2					
ANR	1033070	Identifier	false		1033035	3					
ANR	1033071	Identifier	NULL		1033035	4					
ANR	1033072	PrimaryExpression	0		1033035	5					
ANR	1033073	PrimaryExpression	0		1033035	6					
ANR	1033074	PrimaryExpression	0		1033035	7					
ANR	1033075	PrimaryExpression	0		1033035	8					
ANR	1033076	PrimaryExpression	0		1033035	9					
ANR	1033077	Identifier	gs_fapi_metrics_notdef		1033035	10					
ANR	1033078	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	1231:4:45705:45749	1033035	3	True				
ANR	1033079	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		1033035	0					
ANR	1033080	IdentifierDeclType	gs_font_base *		1033035	0					
ANR	1033081	Identifier	pbfont		1033035	1					
ANR	1033082	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		1033035	2		=			
ANR	1033083	Identifier	pbfont		1033035	0					
ANR	1033084	CastExpression	( gs_font_base * ) pfont		1033035	1					
ANR	1033085	CastTarget	gs_font_base *		1033035	0					
ANR	1033086	Identifier	pfont		1033035	1					
ANR	1033087	IdentifierDeclStatement	const gs_matrix * ctm = & ctm_only ( pgs ) ;	1232:4:45755:45792	1033035	4	True				
ANR	1033088	IdentifierDecl	* ctm = & ctm_only ( pgs )		1033035	0					
ANR	1033089	IdentifierDeclType	const gs_matrix *		1033035	0					
ANR	1033090	Identifier	ctm		1033035	1					
ANR	1033091	AssignmentExpression	* ctm = & ctm_only ( pgs )		1033035	2		=			
ANR	1033092	Identifier	ctm		1033035	0					
ANR	1033093	UnaryOperationExpression	& ctm_only ( pgs )		1033035	1					
ANR	1033094	UnaryOperator	&		1033035	0					
ANR	1033095	CallExpression	ctm_only ( pgs )		1033035	1					
ANR	1033096	Callee	ctm_only		1033035	0					
ANR	1033097	Identifier	ctm_only		1033035	0					
ANR	1033098	ArgumentList	pgs		1033035	1					
ANR	1033099	Argument	pgs		1033035	0					
ANR	1033100	Identifier	pgs		1033035	0					
ANR	1033101	IdentifierDeclStatement	int scale ;	1233:4:45798:45807	1033035	5	True				
ANR	1033102	IdentifierDecl	scale		1033035	0					
ANR	1033103	IdentifierDeclType	int		1033035	0					
ANR	1033104	Identifier	scale		1033035	1					
ANR	1033105	IdentifierDeclStatement	gs_fapi_metrics metrics ;	1234:4:45813:45836	1033035	6	True				
ANR	1033106	IdentifierDecl	metrics		1033035	0					
ANR	1033107	IdentifierDeclType	gs_fapi_metrics		1033035	0					
ANR	1033108	Identifier	metrics		1033035	1					
ANR	1033109	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	1235:4:45842:45874	1033035	7	True				
ANR	1033110	IdentifierDecl	* I = pbfont -> FAPI		1033035	0					
ANR	1033111	IdentifierDeclType	gs_fapi_server *		1033035	0					
ANR	1033112	Identifier	I		1033035	1					
ANR	1033113	AssignmentExpression	* I = pbfont -> FAPI		1033035	2		=			
ANR	1033114	Identifier	I		1033035	0					
ANR	1033115	PtrMemberAccess	pbfont -> FAPI		1033035	1					
ANR	1033116	Identifier	pbfont		1033035	0					
ANR	1033117	Identifier	FAPI		1033035	1					
ANR	1033118	IdentifierDeclStatement	gs_string enc_char_name_string ;	1237:4:45881:45911	1033035	8	True				
ANR	1033119	IdentifierDecl	enc_char_name_string		1033035	0					
ANR	1033120	IdentifierDeclType	gs_string		1033035	0					
ANR	1033121	Identifier	enc_char_name_string		1033035	1					
ANR	1033122	IdentifierDeclStatement	bool bCID = ( FAPI_ISCIDFONT ( pbfont ) || charstring != NULL ) ;	1238:4:45917:45975	1033035	9	True				
ANR	1033123	IdentifierDecl	bCID = ( FAPI_ISCIDFONT ( pbfont ) || charstring != NULL )		1033035	0					
ANR	1033124	IdentifierDeclType	bool		1033035	0					
ANR	1033125	Identifier	bCID		1033035	1					
ANR	1033126	AssignmentExpression	bCID = ( FAPI_ISCIDFONT ( pbfont ) || charstring != NULL )		1033035	2		=			
ANR	1033127	Identifier	bCID		1033035	0					
ANR	1033128	OrExpression	FAPI_ISCIDFONT ( pbfont ) || charstring != NULL		1033035	1		||			
ANR	1033129	CallExpression	FAPI_ISCIDFONT ( pbfont )		1033035	0					
ANR	1033130	Callee	FAPI_ISCIDFONT		1033035	0					
ANR	1033131	Identifier	FAPI_ISCIDFONT		1033035	0					
ANR	1033132	ArgumentList	pbfont		1033035	1					
ANR	1033133	Argument	pbfont		1033035	0					
ANR	1033134	Identifier	pbfont		1033035	0					
ANR	1033135	EqualityExpression	charstring != NULL		1033035	1		!=			
ANR	1033136	Identifier	charstring		1033035	0					
ANR	1033137	Identifier	NULL		1033035	1					
ANR	1033138	IdentifierDeclStatement	bool bIsType1GlyphData = FAPI_ISTYPE1GLYPHDATA ( pbfont ) ;	1239:4:45981:46035	1033035	10	True				
ANR	1033139	IdentifierDecl	bIsType1GlyphData = FAPI_ISTYPE1GLYPHDATA ( pbfont )		1033035	0					
ANR	1033140	IdentifierDeclType	bool		1033035	0					
ANR	1033141	Identifier	bIsType1GlyphData		1033035	1					
ANR	1033142	AssignmentExpression	bIsType1GlyphData = FAPI_ISTYPE1GLYPHDATA ( pbfont )		1033035	2		=			
ANR	1033143	Identifier	bIsType1GlyphData		1033035	0					
ANR	1033144	CallExpression	FAPI_ISTYPE1GLYPHDATA ( pbfont )		1033035	1					
ANR	1033145	Callee	FAPI_ISTYPE1GLYPHDATA		1033035	0					
ANR	1033146	Identifier	FAPI_ISTYPE1GLYPHDATA		1033035	0					
ANR	1033147	ArgumentList	pbfont		1033035	1					
ANR	1033148	Argument	pbfont		1033035	0					
ANR	1033149	Identifier	pbfont		1033035	0					
ANR	1033150	IdentifierDeclStatement	"gs_log2_scale_point log2_scale = { 0 , 0 } ;"	1240:4:46041:46082	1033035	11	True				
ANR	1033151	IdentifierDecl	"log2_scale = { 0 , 0 }"		1033035	0					
ANR	1033152	IdentifierDeclType	gs_log2_scale_point		1033035	0					
ANR	1033153	Identifier	log2_scale		1033035	1					
ANR	1033154	AssignmentExpression	"log2_scale = { 0 , 0 }"		1033035	2		=			
ANR	1033155	Identifier	log2_scale		1033035	0					
ANR	1033156	InitializerList	0		1033035	1					
ANR	1033157	PrimaryExpression	0		1033035	0					
ANR	1033158	PrimaryExpression	0		1033035	1					
ANR	1033159	IdentifierDeclStatement	"int alpha_bits = ( * dev_proc ( dev , get_alpha_bits ) ) ( dev , go_text ) ;"	1241:4:46088:46152	1033035	12	True				
ANR	1033160	IdentifierDecl	"alpha_bits = ( * dev_proc ( dev , get_alpha_bits ) ) ( dev , go_text )"		1033035	0					
ANR	1033161	IdentifierDeclType	int		1033035	0					
ANR	1033162	Identifier	alpha_bits		1033035	1					
ANR	1033163	AssignmentExpression	"alpha_bits = ( * dev_proc ( dev , get_alpha_bits ) ) ( dev , go_text )"		1033035	2		=			
ANR	1033164	Identifier	alpha_bits		1033035	0					
ANR	1033165	CallExpression	"( * dev_proc ( dev , get_alpha_bits ) ) ( dev , go_text )"		1033035	1					
ANR	1033166	Callee	"* dev_proc ( dev , get_alpha_bits )"		1033035	0					
ANR	1033167	UnaryOperationExpression	"* dev_proc ( dev , get_alpha_bits )"		1033035	0					
ANR	1033168	UnaryOperator	*		1033035	0					
ANR	1033169	CallExpression	"dev_proc ( dev , get_alpha_bits )"		1033035	1					
ANR	1033170	Callee	dev_proc		1033035	0					
ANR	1033171	Identifier	dev_proc		1033035	0					
ANR	1033172	ArgumentList	dev		1033035	1					
ANR	1033173	Argument	dev		1033035	0					
ANR	1033174	Identifier	dev		1033035	0					
ANR	1033175	Argument	get_alpha_bits		1033035	1					
ANR	1033176	Identifier	get_alpha_bits		1033035	0					
ANR	1033177	ArgumentList	dev		1033035	1					
ANR	1033178	Argument	dev		1033035	0					
ANR	1033179	Identifier	dev		1033035	0					
ANR	1033180	Argument	go_text		1033035	1					
ANR	1033181	Identifier	go_text		1033035	0					
ANR	1033182	IdentifierDeclStatement	double FontMatrix_div = 1 ;	1242:4:46158:46183	1033035	13	True				
ANR	1033183	IdentifierDecl	FontMatrix_div = 1		1033035	0					
ANR	1033184	IdentifierDeclType	double		1033035	0					
ANR	1033185	Identifier	FontMatrix_div		1033035	1					
ANR	1033186	AssignmentExpression	FontMatrix_div = 1		1033035	2		=			
ANR	1033187	Identifier	FontMatrix_div		1033035	0					
ANR	1033188	PrimaryExpression	1		1033035	1					
ANR	1033189	IdentifierDeclStatement	"bool bVertical = ( gs_rootfont ( pgs ) -> WMode != 0 ) , bVertical0 = bVertical ;"	1243:4:46189:46260	1033035	14	True				
ANR	1033190	IdentifierDecl	bVertical = ( gs_rootfont ( pgs ) -> WMode != 0 )		1033035	0					
ANR	1033191	IdentifierDeclType	bool		1033035	0					
ANR	1033192	Identifier	bVertical		1033035	1					
ANR	1033193	AssignmentExpression	bVertical = ( gs_rootfont ( pgs ) -> WMode != 0 )		1033035	2		=			
ANR	1033194	Identifier	bVertical		1033035	0					
ANR	1033195	EqualityExpression	gs_rootfont ( pgs ) -> WMode != 0		1033035	1		!=			
ANR	1033196	PtrMemberAccess	gs_rootfont ( pgs ) -> WMode		1033035	0					
ANR	1033197	CallExpression	gs_rootfont ( pgs )		1033035	0					
ANR	1033198	Callee	gs_rootfont		1033035	0					
ANR	1033199	Identifier	gs_rootfont		1033035	0					
ANR	1033200	ArgumentList	pgs		1033035	1					
ANR	1033201	Argument	pgs		1033035	0					
ANR	1033202	Identifier	pgs		1033035	0					
ANR	1033203	Identifier	WMode		1033035	1					
ANR	1033204	PrimaryExpression	0		1033035	1					
ANR	1033205	IdentifierDecl	bVertical0 = bVertical		1033035	1					
ANR	1033206	IdentifierDeclType	bool		1033035	0					
ANR	1033207	Identifier	bVertical0		1033035	1					
ANR	1033208	AssignmentExpression	bVertical0 = bVertical		1033035	2		=			
ANR	1033209	Identifier	bVertical		1033035	0					
ANR	1033210	Identifier	bVertical		1033035	1					
ANR	1033211	IdentifierDeclStatement	"double * sbwp , sbw [ 4 ] = { 0 , 0 , 0 , 0 } ;"	1244:4:46266:46303	1033035	15	True				
ANR	1033212	IdentifierDecl	* sbwp		1033035	0					
ANR	1033213	IdentifierDeclType	double *		1033035	0					
ANR	1033214	Identifier	sbwp		1033035	1					
ANR	1033215	IdentifierDecl	"sbw [ 4 ] = { 0 , 0 , 0 , 0 }"		1033035	1					
ANR	1033216	IdentifierDeclType	double [ 4 ]		1033035	0					
ANR	1033217	Identifier	sbw		1033035	1					
ANR	1033218	PrimaryExpression	4		1033035	2					
ANR	1033219	AssignmentExpression	"sbw [ 4 ] = { 0 , 0 , 0 , 0 }"		1033035	3		=			
ANR	1033220	Identifier	sbw		1033035	0					
ANR	1033221	InitializerList	0		1033035	1					
ANR	1033222	PrimaryExpression	0		1033035	0					
ANR	1033223	PrimaryExpression	0		1033035	1					
ANR	1033224	PrimaryExpression	0		1033035	2					
ANR	1033225	PrimaryExpression	0		1033035	3					
ANR	1033226	IdentifierDeclStatement	"double em_scale_x , em_scale_y ;"	1245:4:46309:46338	1033035	16	True				
ANR	1033227	IdentifierDecl	em_scale_x		1033035	0					
ANR	1033228	IdentifierDeclType	double		1033035	0					
ANR	1033229	Identifier	em_scale_x		1033035	1					
ANR	1033230	IdentifierDecl	em_scale_y		1033035	1					
ANR	1033231	IdentifierDeclType	double		1033035	0					
ANR	1033232	Identifier	em_scale_y		1033035	1					
ANR	1033233	IdentifierDeclStatement	gs_rect char_bbox ;	1246:4:46344:46361	1033035	17	True				
ANR	1033234	IdentifierDecl	char_bbox		1033035	0					
ANR	1033235	IdentifierDeclType	gs_rect		1033035	0					
ANR	1033236	Identifier	char_bbox		1033035	1					
ANR	1033237	IdentifierDeclStatement	int code ;	1247:4:46367:46375	1033035	18	True				
ANR	1033238	IdentifierDecl	code		1033035	0					
ANR	1033239	IdentifierDeclType	int		1033035	0					
ANR	1033240	Identifier	code		1033035	1					
ANR	1033241	IdentifierDeclStatement	bool imagenow = false ;	1248:4:46381:46402	1033035	19	True				
ANR	1033242	IdentifierDecl	imagenow = false		1033035	0					
ANR	1033243	IdentifierDeclType	bool		1033035	0					
ANR	1033244	Identifier	imagenow		1033035	1					
ANR	1033245	AssignmentExpression	imagenow = false		1033035	2		=			
ANR	1033246	Identifier	false		1033035	0					
ANR	1033247	Identifier	false		1033035	1					
ANR	1033248	IdentifierDeclStatement	bool align_to_pixels = gs_currentaligntopixels ( pbfont -> dir ) ;	1249:4:46408:46467	1033035	20	True				
ANR	1033249	IdentifierDecl	align_to_pixels = gs_currentaligntopixels ( pbfont -> dir )		1033035	0					
ANR	1033250	IdentifierDeclType	bool		1033035	0					
ANR	1033251	Identifier	align_to_pixels		1033035	1					
ANR	1033252	AssignmentExpression	align_to_pixels = gs_currentaligntopixels ( pbfont -> dir )		1033035	2		=			
ANR	1033253	Identifier	align_to_pixels		1033035	0					
ANR	1033254	CallExpression	gs_currentaligntopixels ( pbfont -> dir )		1033035	1					
ANR	1033255	Callee	gs_currentaligntopixels		1033035	0					
ANR	1033256	Identifier	gs_currentaligntopixels		1033035	0					
ANR	1033257	ArgumentList	pbfont -> dir		1033035	1					
ANR	1033258	Argument	pbfont -> dir		1033035	0					
ANR	1033259	PtrMemberAccess	pbfont -> dir		1033035	0					
ANR	1033260	Identifier	pbfont		1033035	0					
ANR	1033261	Identifier	dir		1033035	1					
ANR	1033262	IdentifierDeclStatement	gs_memory_t * mem = pfont -> memory ;	1250:4:46473:46505	1033035	21	True				
ANR	1033263	IdentifierDecl	* mem = pfont -> memory		1033035	0					
ANR	1033264	IdentifierDeclType	gs_memory_t *		1033035	0					
ANR	1033265	Identifier	mem		1033035	1					
ANR	1033266	AssignmentExpression	* mem = pfont -> memory		1033035	2		=			
ANR	1033267	Identifier	mem		1033035	0					
ANR	1033268	PtrMemberAccess	pfont -> memory		1033035	1					
ANR	1033269	Identifier	pfont		1033035	0					
ANR	1033270	Identifier	memory		1033035	1					
ANR	1033271	ClassDefStatement	"enum { SBW_DONE , SBW_SCALE , SBW_FROM_RENDERER } sbw_state = SBW_SCALE ;"	1251:4:46511:46612	1033035	22	True				
ANR	1033272	IdentifierDecl	sbw_state = SBW_SCALE		1033035	0					
ANR	1033273	IdentifierDeclType			1033035	0					
ANR	1033274	Identifier	sbw_state		1033035	1					
ANR	1033275	AssignmentExpression	sbw_state = SBW_SCALE		1033035	2		=			
ANR	1033276	Identifier	SBW_SCALE		1033035	0					
ANR	1033277	Identifier	SBW_SCALE		1033035	1					
ANR	1033278	IfStatement	if ( index == GS_NO_GLYPH )		1033035	23					
ANR	1033279	Condition	index == GS_NO_GLYPH	1258:9:46624:46643	1033035	0	True				
ANR	1033280	EqualityExpression	index == GS_NO_GLYPH		1033035	0		==			
ANR	1033281	Identifier	index		1033035	0					
ANR	1033282	Identifier	GS_NO_GLYPH		1033035	1					
ANR	1033283	ReturnStatement	return 0 ;	1259:8:46655:46663	1033035	1	True				
ANR	1033284	PrimaryExpression	0		1033035	0					
ANR	1033285	ExpressionStatement	I -> use_outline = false	1261:4:46670:46692	1033035	24	True				
ANR	1033286	AssignmentExpression	I -> use_outline = false		1033035	0		=			
ANR	1033287	PtrMemberAccess	I -> use_outline		1033035	0					
ANR	1033288	Identifier	I		1033035	0					
ANR	1033289	Identifier	use_outline		1033035	1					
ANR	1033290	Identifier	false		1033035	1					
ANR	1033291	IfStatement	if ( penum == 0 )		1033035	25					
ANR	1033292	Condition	penum == 0	1263:8:46703:46712	1033035	0	True				
ANR	1033293	EqualityExpression	penum == 0		1033035	0		==			
ANR	1033294	Identifier	penum		1033035	0					
ANR	1033295	PrimaryExpression	0		1033035	1					
ANR	1033296	ExpressionStatement	return_error ( gs_error_undefined )	1264:8:46723:46755	1033035	1	True				
ANR	1033297	CallExpression	return_error ( gs_error_undefined )		1033035	0					
ANR	1033298	Callee	return_error		1033035	0					
ANR	1033299	Identifier	return_error		1033035	0					
ANR	1033300	ArgumentList	gs_error_undefined		1033035	1					
ANR	1033301	Argument	gs_error_undefined		1033035	0					
ANR	1033302	Identifier	gs_error_undefined		1033035	0					
ANR	1033303	ExpressionStatement	"I -> use_outline = produce_outline_char ( penum_s , pbfont , alpha_bits , & log2_scale )"	1266:4:46762:46849	1033035	26	True				
ANR	1033304	AssignmentExpression	"I -> use_outline = produce_outline_char ( penum_s , pbfont , alpha_bits , & log2_scale )"		1033035	0		=			
ANR	1033305	PtrMemberAccess	I -> use_outline		1033035	0					
ANR	1033306	Identifier	I		1033035	0					
ANR	1033307	Identifier	use_outline		1033035	1					
ANR	1033308	CallExpression	"produce_outline_char ( penum_s , pbfont , alpha_bits , & log2_scale )"		1033035	1					
ANR	1033309	Callee	produce_outline_char		1033035	0					
ANR	1033310	Identifier	produce_outline_char		1033035	0					
ANR	1033311	ArgumentList	penum_s		1033035	1					
ANR	1033312	Argument	penum_s		1033035	0					
ANR	1033313	Identifier	penum_s		1033035	0					
ANR	1033314	Argument	pbfont		1033035	1					
ANR	1033315	Identifier	pbfont		1033035	0					
ANR	1033316	Argument	alpha_bits		1033035	2					
ANR	1033317	Identifier	alpha_bits		1033035	0					
ANR	1033318	Argument	& log2_scale		1033035	3					
ANR	1033319	UnaryOperationExpression	& log2_scale		1033035	0					
ANR	1033320	UnaryOperator	&		1033035	0					
ANR	1033321	Identifier	log2_scale		1033035	1					
ANR	1033322	IfStatement	if ( I -> use_outline )		1033035	27					
ANR	1033323	Condition	I -> use_outline	1269:8:46860:46873	1033035	0	True				
ANR	1033324	PtrMemberAccess	I -> use_outline		1033035	0					
ANR	1033325	Identifier	I		1033035	0					
ANR	1033326	Identifier	use_outline		1033035	1					
ANR	1033327	CompoundStatement		50:24:1710:1710	1033035	1					
ANR	1033328	ExpressionStatement	I -> max_bitmap = 0	1270:8:46886:46903	1033035	0	True				
ANR	1033329	AssignmentExpression	I -> max_bitmap = 0		1033035	0		=			
ANR	1033330	PtrMemberAccess	I -> max_bitmap		1033035	0					
ANR	1033331	Identifier	I		1033035	0					
ANR	1033332	Identifier	max_bitmap		1033035	1					
ANR	1033333	PrimaryExpression	0		1033035	1					
ANR	1033334	ElseStatement	else		1033035	0					
ANR	1033335	CompoundStatement		53:9:1754:1754	1033035	0					
ANR	1033336	ExpressionStatement	I -> max_bitmap = pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) < MAX_CCACHE_TEMP_BITMAP_BITS ? pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) : MAX_CCACHE_TEMP_BITMAP_BITS	1278:8:47264:47499	1033035	0	True				
ANR	1033337	AssignmentExpression	I -> max_bitmap = pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) < MAX_CCACHE_TEMP_BITMAP_BITS ? pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) : MAX_CCACHE_TEMP_BITMAP_BITS		1033035	0		=			
ANR	1033338	PtrMemberAccess	I -> max_bitmap		1033035	0					
ANR	1033339	Identifier	I		1033035	0					
ANR	1033340	Identifier	max_bitmap		1033035	1					
ANR	1033341	ConditionalExpression	pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) < MAX_CCACHE_TEMP_BITMAP_BITS ? pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) : MAX_CCACHE_TEMP_BITMAP_BITS		1033035	1					
ANR	1033342	Condition	pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) < MAX_CCACHE_TEMP_BITMAP_BITS		1033035	0					
ANR	1033343	RelationalExpression	pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 ) < MAX_CCACHE_TEMP_BITMAP_BITS		1033035	0		<			
ANR	1033344	AdditiveExpression	pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 )		1033035	0		+			
ANR	1033345	MemberAccess	pbfont -> dir -> ccache . upper		1033035	0					
ANR	1033346	PtrMemberAccess	pbfont -> dir -> ccache		1033035	0					
ANR	1033347	PtrMemberAccess	pbfont -> dir		1033035	0					
ANR	1033348	Identifier	pbfont		1033035	0					
ANR	1033349	Identifier	dir		1033035	1					
ANR	1033350	Identifier	ccache		1033035	1					
ANR	1033351	Identifier	upper		1033035	1					
ANR	1033352	ShiftExpression	pbfont -> dir -> ccache . upper >> 1		1033035	1		>>			
ANR	1033353	MemberAccess	pbfont -> dir -> ccache . upper		1033035	0					
ANR	1033354	PtrMemberAccess	pbfont -> dir -> ccache		1033035	0					
ANR	1033355	PtrMemberAccess	pbfont -> dir		1033035	0					
ANR	1033356	Identifier	pbfont		1033035	0					
ANR	1033357	Identifier	dir		1033035	1					
ANR	1033358	Identifier	ccache		1033035	1					
ANR	1033359	Identifier	upper		1033035	1					
ANR	1033360	PrimaryExpression	1		1033035	1					
ANR	1033361	Identifier	MAX_CCACHE_TEMP_BITMAP_BITS		1033035	1					
ANR	1033362	AdditiveExpression	pbfont -> dir -> ccache . upper + ( pbfont -> dir -> ccache . upper >> 1 )		1033035	1		+			
ANR	1033363	MemberAccess	pbfont -> dir -> ccache . upper		1033035	0					
ANR	1033364	PtrMemberAccess	pbfont -> dir -> ccache		1033035	0					
ANR	1033365	PtrMemberAccess	pbfont -> dir		1033035	0					
ANR	1033366	Identifier	pbfont		1033035	0					
ANR	1033367	Identifier	dir		1033035	1					
ANR	1033368	Identifier	ccache		1033035	1					
ANR	1033369	Identifier	upper		1033035	1					
ANR	1033370	ShiftExpression	pbfont -> dir -> ccache . upper >> 1		1033035	1		>>			
ANR	1033371	MemberAccess	pbfont -> dir -> ccache . upper		1033035	0					
ANR	1033372	PtrMemberAccess	pbfont -> dir -> ccache		1033035	0					
ANR	1033373	PtrMemberAccess	pbfont -> dir		1033035	0					
ANR	1033374	Identifier	pbfont		1033035	0					
ANR	1033375	Identifier	dir		1033035	1					
ANR	1033376	Identifier	ccache		1033035	1					
ANR	1033377	Identifier	upper		1033035	1					
ANR	1033378	PrimaryExpression	1		1033035	1					
ANR	1033379	Identifier	MAX_CCACHE_TEMP_BITMAP_BITS		1033035	2					
ANR	1033380	ExpressionStatement	I -> grid_fit = pbfont -> dir -> grid_fit_tt	1284:4:47512:47550	1033035	28	True				
ANR	1033381	AssignmentExpression	I -> grid_fit = pbfont -> dir -> grid_fit_tt		1033035	0		=			
ANR	1033382	PtrMemberAccess	I -> grid_fit		1033035	0					
ANR	1033383	Identifier	I		1033035	0					
ANR	1033384	Identifier	grid_fit		1033035	1					
ANR	1033385	PtrMemberAccess	pbfont -> dir -> grid_fit_tt		1033035	1					
ANR	1033386	PtrMemberAccess	pbfont -> dir		1033035	0					
ANR	1033387	Identifier	pbfont		1033035	0					
ANR	1033388	Identifier	dir		1033035	1					
ANR	1033389	Identifier	grid_fit_tt		1033035	1					
ANR	1033390	IfStatement	"if ( ! SHOW_IS ( penum , TEXT_DO_NONE ) && ! I -> use_outline )"		1033035	29					
ANR	1033391	Condition	"! SHOW_IS ( penum , TEXT_DO_NONE ) && ! I -> use_outline"	1287:8:47591:47638	1033035	0	True				
ANR	1033392	AndExpression	"! SHOW_IS ( penum , TEXT_DO_NONE ) && ! I -> use_outline"		1033035	0		&&			
ANR	1033393	UnaryOperationExpression	"! SHOW_IS ( penum , TEXT_DO_NONE )"		1033035	0					
ANR	1033394	UnaryOperator	!		1033035	0					
ANR	1033395	CallExpression	"SHOW_IS ( penum , TEXT_DO_NONE )"		1033035	1					
ANR	1033396	Callee	SHOW_IS		1033035	0					
ANR	1033397	Identifier	SHOW_IS		1033035	0					
ANR	1033398	ArgumentList	penum		1033035	1					
ANR	1033399	Argument	penum		1033035	0					
ANR	1033400	Identifier	penum		1033035	0					
ANR	1033401	Argument	TEXT_DO_NONE		1033035	1					
ANR	1033402	Identifier	TEXT_DO_NONE		1033035	0					
ANR	1033403	UnaryOperationExpression	! I -> use_outline		1033035	1					
ANR	1033404	UnaryOperator	!		1033035	0					
ANR	1033405	PtrMemberAccess	I -> use_outline		1033035	1					
ANR	1033406	Identifier	I		1033035	0					
ANR	1033407	Identifier	use_outline		1033035	1					
ANR	1033408	CompoundStatement		68:58:2475:2475	1033035	1					
ANR	1033409	ExpressionStatement	"gs_currentcharmatrix ( pgs , NULL , 1 )"	1288:8:47651:47685	1033035	0	True				
ANR	1033410	CallExpression	"gs_currentcharmatrix ( pgs , NULL , 1 )"		1033035	0					
ANR	1033411	Callee	gs_currentcharmatrix		1033035	0					
ANR	1033412	Identifier	gs_currentcharmatrix		1033035	0					
ANR	1033413	ArgumentList	pgs		1033035	1					
ANR	1033414	Argument	pgs		1033035	0					
ANR	1033415	Identifier	pgs		1033035	0					
ANR	1033416	Argument	NULL		1033035	1					
ANR	1033417	Identifier	NULL		1033035	0					
ANR	1033418	Argument	1		1033035	2					
ANR	1033419	PrimaryExpression	1		1033035	0					
ANR	1033420	ExpressionStatement	penum_s -> fapi_log2_scale = log2_scale	1289:8:47724:47761	1033035	1	True				
ANR	1033421	AssignmentExpression	penum_s -> fapi_log2_scale = log2_scale		1033035	0		=			
ANR	1033422	PtrMemberAccess	penum_s -> fapi_log2_scale		1033035	0					
ANR	1033423	Identifier	penum_s		1033035	0					
ANR	1033424	Identifier	fapi_log2_scale		1033035	1					
ANR	1033425	Identifier	log2_scale		1033035	1					
ANR	1033426	ElseStatement	else		1033035	0					
ANR	1033427	CompoundStatement		72:9:2612:2612	1033035	0					
ANR	1033428	ExpressionStatement	log2_scale . x = 0	1292:8:47788:47804	1033035	0	True				
ANR	1033429	AssignmentExpression	log2_scale . x = 0		1033035	0		=			
ANR	1033430	MemberAccess	log2_scale . x		1033035	0					
ANR	1033431	Identifier	log2_scale		1033035	0					
ANR	1033432	Identifier	x		1033035	1					
ANR	1033433	PrimaryExpression	0		1033035	1					
ANR	1033434	ExpressionStatement	log2_scale . y = 0	1293:8:47814:47830	1033035	1	True				
ANR	1033435	AssignmentExpression	log2_scale . y = 0		1033035	0		=			
ANR	1033436	MemberAccess	log2_scale . y		1033035	0					
ANR	1033437	Identifier	log2_scale		1033035	0					
ANR	1033438	Identifier	y		1033035	1					
ANR	1033439	PrimaryExpression	0		1033035	1					
ANR	1033440	ExpressionStatement	I -> ff . memory = pbfont -> memory	1302:4:48086:48115	1033035	30	True				
ANR	1033441	AssignmentExpression	I -> ff . memory = pbfont -> memory		1033035	0		=			
ANR	1033442	MemberAccess	I -> ff . memory		1033035	0					
ANR	1033443	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033444	Identifier	I		1033035	0					
ANR	1033445	Identifier	ff		1033035	1					
ANR	1033446	Identifier	memory		1033035	1					
ANR	1033447	PtrMemberAccess	pbfont -> memory		1033035	1					
ANR	1033448	Identifier	pbfont		1033035	0					
ANR	1033449	Identifier	memory		1033035	1					
ANR	1033450	ExpressionStatement	I -> ff . subfont = subfont	1303:4:48121:48144	1033035	31	True				
ANR	1033451	AssignmentExpression	I -> ff . subfont = subfont		1033035	0		=			
ANR	1033452	MemberAccess	I -> ff . subfont		1033035	0					
ANR	1033453	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033454	Identifier	I		1033035	0					
ANR	1033455	Identifier	ff		1033035	1					
ANR	1033456	Identifier	subfont		1033035	1					
ANR	1033457	Identifier	subfont		1033035	1					
ANR	1033458	ExpressionStatement	I -> ff . font_file_path = font_file_path	1304:4:48150:48187	1033035	32	True				
ANR	1033459	AssignmentExpression	I -> ff . font_file_path = font_file_path		1033035	0		=			
ANR	1033460	MemberAccess	I -> ff . font_file_path		1033035	0					
ANR	1033461	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033462	Identifier	I		1033035	0					
ANR	1033463	Identifier	ff		1033035	1					
ANR	1033464	Identifier	font_file_path		1033035	1					
ANR	1033465	Identifier	font_file_path		1033035	1					
ANR	1033466	ExpressionStatement	I -> ff . client_font_data = pbfont	1305:4:48193:48224	1033035	33	True				
ANR	1033467	AssignmentExpression	I -> ff . client_font_data = pbfont		1033035	0		=			
ANR	1033468	MemberAccess	I -> ff . client_font_data		1033035	0					
ANR	1033469	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033470	Identifier	I		1033035	0					
ANR	1033471	Identifier	ff		1033035	1					
ANR	1033472	Identifier	client_font_data		1033035	1					
ANR	1033473	Identifier	pbfont		1033035	1					
ANR	1033474	ExpressionStatement	I -> ff . client_font_data2 = pbfont	1306:4:48230:48262	1033035	34	True				
ANR	1033475	AssignmentExpression	I -> ff . client_font_data2 = pbfont		1033035	0		=			
ANR	1033476	MemberAccess	I -> ff . client_font_data2		1033035	0					
ANR	1033477	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033478	Identifier	I		1033035	0					
ANR	1033479	Identifier	ff		1033035	1					
ANR	1033480	Identifier	client_font_data2		1033035	1					
ANR	1033481	Identifier	pbfont		1033035	1					
ANR	1033482	ExpressionStatement	I -> ff . server_font_data = pbfont -> FAPI_font_data	1307:4:48268:48315	1033035	35	True				
ANR	1033483	AssignmentExpression	I -> ff . server_font_data = pbfont -> FAPI_font_data		1033035	0		=			
ANR	1033484	MemberAccess	I -> ff . server_font_data		1033035	0					
ANR	1033485	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033486	Identifier	I		1033035	0					
ANR	1033487	Identifier	ff		1033035	1					
ANR	1033488	Identifier	server_font_data		1033035	1					
ANR	1033489	PtrMemberAccess	pbfont -> FAPI_font_data		1033035	1					
ANR	1033490	Identifier	pbfont		1033035	0					
ANR	1033491	Identifier	FAPI_font_data		1033035	1					
ANR	1033492	ExpressionStatement	I -> ff . is_type1 = bIsType1GlyphData	1308:4:48321:48355	1033035	36	True				
ANR	1033493	AssignmentExpression	I -> ff . is_type1 = bIsType1GlyphData		1033035	0		=			
ANR	1033494	MemberAccess	I -> ff . is_type1		1033035	0					
ANR	1033495	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033496	Identifier	I		1033035	0					
ANR	1033497	Identifier	ff		1033035	1					
ANR	1033498	Identifier	is_type1		1033035	1					
ANR	1033499	Identifier	bIsType1GlyphData		1033035	1					
ANR	1033500	ExpressionStatement	I -> ff . is_cid = bCID	1309:4:48361:48380	1033035	37	True				
ANR	1033501	AssignmentExpression	I -> ff . is_cid = bCID		1033035	0		=			
ANR	1033502	MemberAccess	I -> ff . is_cid		1033035	0					
ANR	1033503	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033504	Identifier	I		1033035	0					
ANR	1033505	Identifier	ff		1033035	1					
ANR	1033506	Identifier	is_cid		1033035	1					
ANR	1033507	Identifier	bCID		1033035	1					
ANR	1033508	ExpressionStatement	I -> ff . is_outline_font = pbfont -> PaintType != 0	1310:4:48386:48432	1033035	38	True				
ANR	1033509	AssignmentExpression	I -> ff . is_outline_font = pbfont -> PaintType != 0		1033035	0		=			
ANR	1033510	MemberAccess	I -> ff . is_outline_font		1033035	0					
ANR	1033511	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033512	Identifier	I		1033035	0					
ANR	1033513	Identifier	ff		1033035	1					
ANR	1033514	Identifier	is_outline_font		1033035	1					
ANR	1033515	EqualityExpression	pbfont -> PaintType != 0		1033035	1		!=			
ANR	1033516	PtrMemberAccess	pbfont -> PaintType		1033035	0					
ANR	1033517	Identifier	pbfont		1033035	0					
ANR	1033518	Identifier	PaintType		1033035	1					
ANR	1033519	PrimaryExpression	0		1033035	1					
ANR	1033520	ExpressionStatement	I -> ff . metrics_only = fapi_gs_char_show_width_only ( penum )	1311:4:48438:48494	1033035	39	True				
ANR	1033521	AssignmentExpression	I -> ff . metrics_only = fapi_gs_char_show_width_only ( penum )		1033035	0		=			
ANR	1033522	MemberAccess	I -> ff . metrics_only		1033035	0					
ANR	1033523	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033524	Identifier	I		1033035	0					
ANR	1033525	Identifier	ff		1033035	1					
ANR	1033526	Identifier	metrics_only		1033035	1					
ANR	1033527	CallExpression	fapi_gs_char_show_width_only ( penum )		1033035	1					
ANR	1033528	Callee	fapi_gs_char_show_width_only		1033035	0					
ANR	1033529	Identifier	fapi_gs_char_show_width_only		1033035	0					
ANR	1033530	ArgumentList	penum		1033035	1					
ANR	1033531	Argument	penum		1033035	0					
ANR	1033532	Identifier	penum		1033035	0					
ANR	1033533	IfStatement	if ( ! I -> ff . is_mtx_skipped )		1033035	40					
ANR	1033534	Condition	! I -> ff . is_mtx_skipped	1313:8:48505:48525	1033035	0	True				
ANR	1033535	UnaryOperationExpression	! I -> ff . is_mtx_skipped		1033035	0					
ANR	1033536	UnaryOperator	!		1033035	0					
ANR	1033537	MemberAccess	I -> ff . is_mtx_skipped		1033035	1					
ANR	1033538	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033539	Identifier	I		1033035	0					
ANR	1033540	Identifier	ff		1033035	1					
ANR	1033541	Identifier	is_mtx_skipped		1033035	1					
ANR	1033542	ExpressionStatement	I -> ff . is_mtx_skipped = ( gs_fapi_get_metrics_count ( & I -> ff ) != 0 )	1314:8:48536:48599	1033035	1	True				
ANR	1033543	AssignmentExpression	I -> ff . is_mtx_skipped = ( gs_fapi_get_metrics_count ( & I -> ff ) != 0 )		1033035	0		=			
ANR	1033544	MemberAccess	I -> ff . is_mtx_skipped		1033035	0					
ANR	1033545	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033546	Identifier	I		1033035	0					
ANR	1033547	Identifier	ff		1033035	1					
ANR	1033548	Identifier	is_mtx_skipped		1033035	1					
ANR	1033549	EqualityExpression	gs_fapi_get_metrics_count ( & I -> ff ) != 0		1033035	1		!=			
ANR	1033550	CallExpression	gs_fapi_get_metrics_count ( & I -> ff )		1033035	0					
ANR	1033551	Callee	gs_fapi_get_metrics_count		1033035	0					
ANR	1033552	Identifier	gs_fapi_get_metrics_count		1033035	0					
ANR	1033553	ArgumentList	& I -> ff		1033035	1					
ANR	1033554	Argument	& I -> ff		1033035	0					
ANR	1033555	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1033556	UnaryOperator	&		1033035	0					
ANR	1033557	PtrMemberAccess	I -> ff		1033035	1					
ANR	1033558	Identifier	I		1033035	0					
ANR	1033559	Identifier	ff		1033035	1					
ANR	1033560	PrimaryExpression	0		1033035	1					
ANR	1033561	ExpressionStatement	I -> ff . is_vertical = bVertical	1316:4:48606:48635	1033035	41	True				
ANR	1033562	AssignmentExpression	I -> ff . is_vertical = bVertical		1033035	0		=			
ANR	1033563	MemberAccess	I -> ff . is_vertical		1033035	0					
ANR	1033564	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033565	Identifier	I		1033035	0					
ANR	1033566	Identifier	ff		1033035	1					
ANR	1033567	Identifier	is_vertical		1033035	1					
ANR	1033568	Identifier	bVertical		1033035	1					
ANR	1033569	ExpressionStatement	I -> ff . client_ctx_p = I -> client_ctx_p	1317:4:48641:48677	1033035	42	True				
ANR	1033570	AssignmentExpression	I -> ff . client_ctx_p = I -> client_ctx_p		1033035	0		=			
ANR	1033571	MemberAccess	I -> ff . client_ctx_p		1033035	0					
ANR	1033572	PtrMemberAccess	I -> ff		1033035	0					
ANR	1033573	Identifier	I		1033035	0					
ANR	1033574	Identifier	ff		1033035	1					
ANR	1033575	Identifier	client_ctx_p		1033035	1					
ANR	1033576	PtrMemberAccess	I -> client_ctx_p		1033035	1					
ANR	1033577	Identifier	I		1033035	0					
ANR	1033578	Identifier	client_ctx_p		1033035	1					
ANR	1033579	IfStatement	if ( recreate_multiple_master ( pbfont ) )		1033035	43					
ANR	1033580	Condition	recreate_multiple_master ( pbfont )	1319:8:48688:48719	1033035	0	True				
ANR	1033581	CallExpression	recreate_multiple_master ( pbfont )		1033035	0					
ANR	1033582	Callee	recreate_multiple_master		1033035	0					
ANR	1033583	Identifier	recreate_multiple_master		1033035	0					
ANR	1033584	ArgumentList	pbfont		1033035	1					
ANR	1033585	Argument	pbfont		1033035	0					
ANR	1033586	Identifier	pbfont		1033035	0					
ANR	1033587	CompoundStatement		100:42:3556:3556	1033035	1					
ANR	1033588	IfStatement	if ( ( void * ) pbfont -> base == ( void * ) pbfont )		1033035	0					
ANR	1033589	Condition	( void * ) pbfont -> base == ( void * ) pbfont	1320:12:48736:48773	1033035	0	True				
ANR	1033590	EqualityExpression	( void * ) pbfont -> base == ( void * ) pbfont		1033035	0		==			
ANR	1033591	CastExpression	( void * ) pbfont -> base		1033035	0					
ANR	1033592	CastTarget	void *		1033035	0					
ANR	1033593	PtrMemberAccess	pbfont -> base		1033035	1					
ANR	1033594	Identifier	pbfont		1033035	0					
ANR	1033595	Identifier	base		1033035	1					
ANR	1033596	CastExpression	( void * ) pbfont		1033035	1					
ANR	1033597	CastTarget	void *		1033035	0					
ANR	1033598	Identifier	pbfont		1033035	1					
ANR	1033599	CompoundStatement		101:52:3610:3610	1033035	1					
ANR	1033600	ExpressionStatement	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"	1321:11:48789:48841	1033035	0	True				
ANR	1033601	CallExpression	"gs_fapi_release_typeface ( I , & pbfont -> FAPI_font_data )"		1033035	0					
ANR	1033602	Callee	gs_fapi_release_typeface		1033035	0					
ANR	1033603	Identifier	gs_fapi_release_typeface		1033035	0					
ANR	1033604	ArgumentList	I		1033035	1					
ANR	1033605	Argument	I		1033035	0					
ANR	1033606	Identifier	I		1033035	0					
ANR	1033607	Argument	& pbfont -> FAPI_font_data		1033035	1					
ANR	1033608	UnaryOperationExpression	& pbfont -> FAPI_font_data		1033035	0					
ANR	1033609	UnaryOperator	&		1033035	0					
ANR	1033610	PtrMemberAccess	pbfont -> FAPI_font_data		1033035	1					
ANR	1033611	Identifier	pbfont		1033035	0					
ANR	1033612	Identifier	FAPI_font_data		1033035	1					
ANR	1033613	ElseStatement	else		1033035	0					
ANR	1033614	CompoundStatement		104:13:3700:3700	1033035	0					
ANR	1033615	ExpressionStatement	pbfont -> FAPI_font_data = NULL	1324:12:48880:48909	1033035	0	True				
ANR	1033616	AssignmentExpression	pbfont -> FAPI_font_data = NULL		1033035	0		=			
ANR	1033617	PtrMemberAccess	pbfont -> FAPI_font_data		1033035	0					
ANR	1033618	Identifier	pbfont		1033035	0					
ANR	1033619	Identifier	FAPI_font_data		1033035	1					
ANR	1033620	Identifier	NULL		1033035	1					
ANR	1033621	ExpressionStatement	pbfont -> FAPI -> face . font_id = gs_no_id	1325:12:48923:48960	1033035	1	True				
ANR	1033622	AssignmentExpression	pbfont -> FAPI -> face . font_id = gs_no_id		1033035	0		=			
ANR	1033623	MemberAccess	pbfont -> FAPI -> face . font_id		1033035	0					
ANR	1033624	PtrMemberAccess	pbfont -> FAPI -> face		1033035	0					
ANR	1033625	PtrMemberAccess	pbfont -> FAPI		1033035	0					
ANR	1033626	Identifier	pbfont		1033035	0					
ANR	1033627	Identifier	FAPI		1033035	1					
ANR	1033628	Identifier	face		1033035	1					
ANR	1033629	Identifier	font_id		1033035	1					
ANR	1033630	Identifier	gs_no_id		1033035	1					
ANR	1033631	ExpressionStatement	scale = 1 << I -> frac_shift	1329:3:48982:49008	1033035	44	True				
ANR	1033632	AssignmentExpression	scale = 1 << I -> frac_shift		1033035	0		=			
ANR	1033633	Identifier	scale		1033035	0					
ANR	1033634	ShiftExpression	1 << I -> frac_shift		1033035	1		<<			
ANR	1033635	PrimaryExpression	1		1033035	0					
ANR	1033636	PtrMemberAccess	I -> frac_shift		1033035	1					
ANR	1033637	Identifier	I		1033035	0					
ANR	1033638	Identifier	frac_shift		1033035	1					
ANR	1033639	Label	retry_oversampling :	1330:2:49012:49030	1033035	45	True				
ANR	1033640	Identifier	retry_oversampling		1033035	0					
ANR	1033641	IfStatement	"if ( I -> face . font_id != pbfont -> id || ! MTX_EQ ( ( & I -> face . ctm ) , ctm ) || I -> face . log2_scale . x != log2_scale . x || I -> face . log2_scale . y != log2_scale . y || I -> face . align_to_pixels != align_to_pixels || I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ] )"		1033035	46					
ANR	1033642	Condition	"I -> face . font_id != pbfont -> id || ! MTX_EQ ( ( & I -> face . ctm ) , ctm ) || I -> face . log2_scale . x != log2_scale . x || I -> face . log2_scale . y != log2_scale . y || I -> face . align_to_pixels != align_to_pixels || I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]"	1331:8:49040:49376	1033035	0	True				
ANR	1033643	OrExpression	"I -> face . font_id != pbfont -> id || ! MTX_EQ ( ( & I -> face . ctm ) , ctm ) || I -> face . log2_scale . x != log2_scale . x || I -> face . log2_scale . y != log2_scale . y || I -> face . align_to_pixels != align_to_pixels || I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]"		1033035	0		||			
ANR	1033644	EqualityExpression	I -> face . font_id != pbfont -> id		1033035	0		!=			
ANR	1033645	MemberAccess	I -> face . font_id		1033035	0					
ANR	1033646	PtrMemberAccess	I -> face		1033035	0					
ANR	1033647	Identifier	I		1033035	0					
ANR	1033648	Identifier	face		1033035	1					
ANR	1033649	Identifier	font_id		1033035	1					
ANR	1033650	PtrMemberAccess	pbfont -> id		1033035	1					
ANR	1033651	Identifier	pbfont		1033035	0					
ANR	1033652	Identifier	id		1033035	1					
ANR	1033653	OrExpression	"! MTX_EQ ( ( & I -> face . ctm ) , ctm ) || I -> face . log2_scale . x != log2_scale . x || I -> face . log2_scale . y != log2_scale . y || I -> face . align_to_pixels != align_to_pixels || I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]"		1033035	1		||			
ANR	1033654	UnaryOperationExpression	"! MTX_EQ ( ( & I -> face . ctm ) , ctm )"		1033035	0					
ANR	1033655	UnaryOperator	!		1033035	0					
ANR	1033656	CallExpression	"MTX_EQ ( ( & I -> face . ctm ) , ctm )"		1033035	1					
ANR	1033657	Callee	MTX_EQ		1033035	0					
ANR	1033658	Identifier	MTX_EQ		1033035	0					
ANR	1033659	ArgumentList	& I -> face . ctm		1033035	1					
ANR	1033660	Argument	& I -> face . ctm		1033035	0					
ANR	1033661	UnaryOperationExpression	& I -> face . ctm		1033035	0					
ANR	1033662	UnaryOperator	&		1033035	0					
ANR	1033663	MemberAccess	I -> face . ctm		1033035	1					
ANR	1033664	PtrMemberAccess	I -> face		1033035	0					
ANR	1033665	Identifier	I		1033035	0					
ANR	1033666	Identifier	face		1033035	1					
ANR	1033667	Identifier	ctm		1033035	1					
ANR	1033668	Argument	ctm		1033035	1					
ANR	1033669	Identifier	ctm		1033035	0					
ANR	1033670	OrExpression	I -> face . log2_scale . x != log2_scale . x || I -> face . log2_scale . y != log2_scale . y || I -> face . align_to_pixels != align_to_pixels || I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]		1033035	1		||			
ANR	1033671	EqualityExpression	I -> face . log2_scale . x != log2_scale . x		1033035	0		!=			
ANR	1033672	MemberAccess	I -> face . log2_scale . x		1033035	0					
ANR	1033673	MemberAccess	I -> face . log2_scale		1033035	0					
ANR	1033674	PtrMemberAccess	I -> face		1033035	0					
ANR	1033675	Identifier	I		1033035	0					
ANR	1033676	Identifier	face		1033035	1					
ANR	1033677	Identifier	log2_scale		1033035	1					
ANR	1033678	Identifier	x		1033035	1					
ANR	1033679	MemberAccess	log2_scale . x		1033035	1					
ANR	1033680	Identifier	log2_scale		1033035	0					
ANR	1033681	Identifier	x		1033035	1					
ANR	1033682	OrExpression	I -> face . log2_scale . y != log2_scale . y || I -> face . align_to_pixels != align_to_pixels || I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]		1033035	1		||			
ANR	1033683	EqualityExpression	I -> face . log2_scale . y != log2_scale . y		1033035	0		!=			
ANR	1033684	MemberAccess	I -> face . log2_scale . y		1033035	0					
ANR	1033685	MemberAccess	I -> face . log2_scale		1033035	0					
ANR	1033686	PtrMemberAccess	I -> face		1033035	0					
ANR	1033687	Identifier	I		1033035	0					
ANR	1033688	Identifier	face		1033035	1					
ANR	1033689	Identifier	log2_scale		1033035	1					
ANR	1033690	Identifier	y		1033035	1					
ANR	1033691	MemberAccess	log2_scale . y		1033035	1					
ANR	1033692	Identifier	log2_scale		1033035	0					
ANR	1033693	Identifier	y		1033035	1					
ANR	1033694	OrExpression	I -> face . align_to_pixels != align_to_pixels || I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]		1033035	1		||			
ANR	1033695	EqualityExpression	I -> face . align_to_pixels != align_to_pixels		1033035	0		!=			
ANR	1033696	MemberAccess	I -> face . align_to_pixels		1033035	0					
ANR	1033697	PtrMemberAccess	I -> face		1033035	0					
ANR	1033698	Identifier	I		1033035	0					
ANR	1033699	Identifier	face		1033035	1					
ANR	1033700	Identifier	align_to_pixels		1033035	1					
ANR	1033701	Identifier	align_to_pixels		1033035	1					
ANR	1033702	OrExpression	I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ] || I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]		1033035	1		||			
ANR	1033703	EqualityExpression	I -> face . HWResolution [ 0 ] != dev -> HWResolution [ 0 ]		1033035	0		!=			
ANR	1033704	ArrayIndexing	I -> face . HWResolution [ 0 ]		1033035	0					
ANR	1033705	MemberAccess	I -> face . HWResolution		1033035	0					
ANR	1033706	PtrMemberAccess	I -> face		1033035	0					
ANR	1033707	Identifier	I		1033035	0					
ANR	1033708	Identifier	face		1033035	1					
ANR	1033709	Identifier	HWResolution		1033035	1					
ANR	1033710	PrimaryExpression	0		1033035	1					
ANR	1033711	ArrayIndexing	dev -> HWResolution [ 0 ]		1033035	1					
ANR	1033712	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1033713	Identifier	dev		1033035	0					
ANR	1033714	Identifier	HWResolution		1033035	1					
ANR	1033715	PrimaryExpression	0		1033035	1					
ANR	1033716	EqualityExpression	I -> face . HWResolution [ 1 ] != dev -> HWResolution [ 1 ]		1033035	1		!=			
ANR	1033717	ArrayIndexing	I -> face . HWResolution [ 1 ]		1033035	0					
ANR	1033718	MemberAccess	I -> face . HWResolution		1033035	0					
ANR	1033719	PtrMemberAccess	I -> face		1033035	0					
ANR	1033720	Identifier	I		1033035	0					
ANR	1033721	Identifier	face		1033035	1					
ANR	1033722	Identifier	HWResolution		1033035	1					
ANR	1033723	PrimaryExpression	1		1033035	1					
ANR	1033724	ArrayIndexing	dev -> HWResolution [ 1 ]		1033035	1					
ANR	1033725	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1033726	Identifier	dev		1033035	0					
ANR	1033727	Identifier	HWResolution		1033035	1					
ANR	1033728	PrimaryExpression	1		1033035	1					
ANR	1033729	CompoundStatement		125:8:4353:4383	1033035	1					
ANR	1033730	IdentifierDeclStatement	"gs_fapi_font_scale font_scale = { { 1 , 0 , 0 , 1 , 0 , 0 } , { 0 , 0 } , { 1 , 1 } , true } ;"	1339:8:49398:49509	1033035	0	True				
ANR	1033731	IdentifierDecl	"font_scale = { { 1 , 0 , 0 , 1 , 0 , 0 } , { 0 , 0 } , { 1 , 1 } , true }"		1033035	0					
ANR	1033732	IdentifierDeclType	gs_fapi_font_scale		1033035	0					
ANR	1033733	Identifier	font_scale		1033035	1					
ANR	1033734	AssignmentExpression	"font_scale = { { 1 , 0 , 0 , 1 , 0 , 0 } , { 0 , 0 } , { 1 , 1 } , true }"		1033035	2		=			
ANR	1033735	Identifier	font_scale		1033035	0					
ANR	1033736	InitializerList	1		1033035	1					
ANR	1033737	InitializerList	1		1033035	0					
ANR	1033738	PrimaryExpression	1		1033035	0					
ANR	1033739	PrimaryExpression	0		1033035	1					
ANR	1033740	PrimaryExpression	0		1033035	2					
ANR	1033741	PrimaryExpression	1		1033035	3					
ANR	1033742	PrimaryExpression	0		1033035	4					
ANR	1033743	PrimaryExpression	0		1033035	5					
ANR	1033744	InitializerList	0		1033035	1					
ANR	1033745	PrimaryExpression	0		1033035	0					
ANR	1033746	PrimaryExpression	0		1033035	1					
ANR	1033747	InitializerList	1		1033035	2					
ANR	1033748	PrimaryExpression	1		1033035	0					
ANR	1033749	PrimaryExpression	1		1033035	1					
ANR	1033750	Identifier	true		1033035	3					
ANR	1033751	IdentifierDeclStatement	"gs_matrix scale_mat , scale_ctm ;"	1344:8:49519:49549	1033035	1	True				
ANR	1033752	IdentifierDecl	scale_mat		1033035	0					
ANR	1033753	IdentifierDeclType	gs_matrix		1033035	0					
ANR	1033754	Identifier	scale_mat		1033035	1					
ANR	1033755	IdentifierDecl	scale_ctm		1033035	1					
ANR	1033756	IdentifierDeclType	gs_matrix		1033035	0					
ANR	1033757	Identifier	scale_ctm		1033035	1					
ANR	1033758	ExpressionStatement	I -> face . font_id = pbfont -> id	1346:8:49560:49588	1033035	2	True				
ANR	1033759	AssignmentExpression	I -> face . font_id = pbfont -> id		1033035	0		=			
ANR	1033760	MemberAccess	I -> face . font_id		1033035	0					
ANR	1033761	PtrMemberAccess	I -> face		1033035	0					
ANR	1033762	Identifier	I		1033035	0					
ANR	1033763	Identifier	face		1033035	1					
ANR	1033764	Identifier	font_id		1033035	1					
ANR	1033765	PtrMemberAccess	pbfont -> id		1033035	1					
ANR	1033766	Identifier	pbfont		1033035	0					
ANR	1033767	Identifier	id		1033035	1					
ANR	1033768	ExpressionStatement	I -> face . ctm = * ctm	1347:8:49598:49616	1033035	3	True				
ANR	1033769	AssignmentExpression	I -> face . ctm = * ctm		1033035	0		=			
ANR	1033770	MemberAccess	I -> face . ctm		1033035	0					
ANR	1033771	PtrMemberAccess	I -> face		1033035	0					
ANR	1033772	Identifier	I		1033035	0					
ANR	1033773	Identifier	face		1033035	1					
ANR	1033774	Identifier	ctm		1033035	1					
ANR	1033775	UnaryOperationExpression	* ctm		1033035	1					
ANR	1033776	UnaryOperator	*		1033035	0					
ANR	1033777	Identifier	ctm		1033035	1					
ANR	1033778	ExpressionStatement	I -> face . log2_scale = log2_scale	1348:8:49626:49657	1033035	4	True				
ANR	1033779	AssignmentExpression	I -> face . log2_scale = log2_scale		1033035	0		=			
ANR	1033780	MemberAccess	I -> face . log2_scale		1033035	0					
ANR	1033781	PtrMemberAccess	I -> face		1033035	0					
ANR	1033782	Identifier	I		1033035	0					
ANR	1033783	Identifier	face		1033035	1					
ANR	1033784	Identifier	log2_scale		1033035	1					
ANR	1033785	Identifier	log2_scale		1033035	1					
ANR	1033786	ExpressionStatement	I -> face . align_to_pixels = align_to_pixels	1349:8:49667:49708	1033035	5	True				
ANR	1033787	AssignmentExpression	I -> face . align_to_pixels = align_to_pixels		1033035	0		=			
ANR	1033788	MemberAccess	I -> face . align_to_pixels		1033035	0					
ANR	1033789	PtrMemberAccess	I -> face		1033035	0					
ANR	1033790	Identifier	I		1033035	0					
ANR	1033791	Identifier	face		1033035	1					
ANR	1033792	Identifier	align_to_pixels		1033035	1					
ANR	1033793	Identifier	align_to_pixels		1033035	1					
ANR	1033794	ExpressionStatement	I -> face . HWResolution [ 0 ] = dev -> HWResolution [ 0 ]	1350:8:49718:49764	1033035	6	True				
ANR	1033795	AssignmentExpression	I -> face . HWResolution [ 0 ] = dev -> HWResolution [ 0 ]		1033035	0		=			
ANR	1033796	ArrayIndexing	I -> face . HWResolution [ 0 ]		1033035	0					
ANR	1033797	MemberAccess	I -> face . HWResolution		1033035	0					
ANR	1033798	PtrMemberAccess	I -> face		1033035	0					
ANR	1033799	Identifier	I		1033035	0					
ANR	1033800	Identifier	face		1033035	1					
ANR	1033801	Identifier	HWResolution		1033035	1					
ANR	1033802	PrimaryExpression	0		1033035	1					
ANR	1033803	ArrayIndexing	dev -> HWResolution [ 0 ]		1033035	1					
ANR	1033804	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1033805	Identifier	dev		1033035	0					
ANR	1033806	Identifier	HWResolution		1033035	1					
ANR	1033807	PrimaryExpression	0		1033035	1					
ANR	1033808	ExpressionStatement	I -> face . HWResolution [ 1 ] = dev -> HWResolution [ 1 ]	1351:8:49774:49820	1033035	7	True				
ANR	1033809	AssignmentExpression	I -> face . HWResolution [ 1 ] = dev -> HWResolution [ 1 ]		1033035	0		=			
ANR	1033810	ArrayIndexing	I -> face . HWResolution [ 1 ]		1033035	0					
ANR	1033811	MemberAccess	I -> face . HWResolution		1033035	0					
ANR	1033812	PtrMemberAccess	I -> face		1033035	0					
ANR	1033813	Identifier	I		1033035	0					
ANR	1033814	Identifier	face		1033035	1					
ANR	1033815	Identifier	HWResolution		1033035	1					
ANR	1033816	PrimaryExpression	1		1033035	1					
ANR	1033817	ArrayIndexing	dev -> HWResolution [ 1 ]		1033035	1					
ANR	1033818	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1033819	Identifier	dev		1033035	0					
ANR	1033820	Identifier	HWResolution		1033035	1					
ANR	1033821	PrimaryExpression	1		1033035	1					
ANR	1033822	ExpressionStatement	font_scale . subpixels [ 0 ] = 1 << log2_scale . x	1353:8:49831:49874	1033035	8	True				
ANR	1033823	AssignmentExpression	font_scale . subpixels [ 0 ] = 1 << log2_scale . x		1033035	0		=			
ANR	1033824	ArrayIndexing	font_scale . subpixels [ 0 ]		1033035	0					
ANR	1033825	MemberAccess	font_scale . subpixels		1033035	0					
ANR	1033826	Identifier	font_scale		1033035	0					
ANR	1033827	Identifier	subpixels		1033035	1					
ANR	1033828	PrimaryExpression	0		1033035	1					
ANR	1033829	ShiftExpression	1 << log2_scale . x		1033035	1		<<			
ANR	1033830	PrimaryExpression	1		1033035	0					
ANR	1033831	MemberAccess	log2_scale . x		1033035	1					
ANR	1033832	Identifier	log2_scale		1033035	0					
ANR	1033833	Identifier	x		1033035	1					
ANR	1033834	ExpressionStatement	font_scale . subpixels [ 1 ] = 1 << log2_scale . y	1354:8:49884:49927	1033035	9	True				
ANR	1033835	AssignmentExpression	font_scale . subpixels [ 1 ] = 1 << log2_scale . y		1033035	0		=			
ANR	1033836	ArrayIndexing	font_scale . subpixels [ 1 ]		1033035	0					
ANR	1033837	MemberAccess	font_scale . subpixels		1033035	0					
ANR	1033838	Identifier	font_scale		1033035	0					
ANR	1033839	Identifier	subpixels		1033035	1					
ANR	1033840	PrimaryExpression	1		1033035	1					
ANR	1033841	ShiftExpression	1 << log2_scale . y		1033035	1		<<			
ANR	1033842	PrimaryExpression	1		1033035	0					
ANR	1033843	MemberAccess	log2_scale . y		1033035	1					
ANR	1033844	Identifier	log2_scale		1033035	0					
ANR	1033845	Identifier	y		1033035	1					
ANR	1033846	ExpressionStatement	font_scale . align_to_pixels = align_to_pixels	1355:8:49937:49981	1033035	10	True				
ANR	1033847	AssignmentExpression	font_scale . align_to_pixels = align_to_pixels		1033035	0		=			
ANR	1033848	MemberAccess	font_scale . align_to_pixels		1033035	0					
ANR	1033849	Identifier	font_scale		1033035	0					
ANR	1033850	Identifier	align_to_pixels		1033035	1					
ANR	1033851	Identifier	align_to_pixels		1033035	1					
ANR	1033852	ExpressionStatement	"memset ( & scale_ctm , 0x00 , sizeof ( gs_matrix ) )"	1361:8:50113:50156	1033035	11	True				
ANR	1033853	CallExpression	"memset ( & scale_ctm , 0x00 , sizeof ( gs_matrix ) )"		1033035	0					
ANR	1033854	Callee	memset		1033035	0					
ANR	1033855	Identifier	memset		1033035	0					
ANR	1033856	ArgumentList	& scale_ctm		1033035	1					
ANR	1033857	Argument	& scale_ctm		1033035	0					
ANR	1033858	UnaryOperationExpression	& scale_ctm		1033035	0					
ANR	1033859	UnaryOperator	&		1033035	0					
ANR	1033860	Identifier	scale_ctm		1033035	1					
ANR	1033861	Argument	0x00		1033035	1					
ANR	1033862	PrimaryExpression	0x00		1033035	0					
ANR	1033863	Argument	sizeof ( gs_matrix )		1033035	2					
ANR	1033864	SizeofExpression	sizeof ( gs_matrix )		1033035	0					
ANR	1033865	Sizeof	sizeof		1033035	0					
ANR	1033866	SizeofOperand	gs_matrix		1033035	1					
ANR	1033867	ExpressionStatement	scale_ctm . xx = dev -> HWResolution [ 0 ] / 72	1362:8:50166:50206	1033035	12	True				
ANR	1033868	AssignmentExpression	scale_ctm . xx = dev -> HWResolution [ 0 ] / 72		1033035	0		=			
ANR	1033869	MemberAccess	scale_ctm . xx		1033035	0					
ANR	1033870	Identifier	scale_ctm		1033035	0					
ANR	1033871	Identifier	xx		1033035	1					
ANR	1033872	MultiplicativeExpression	dev -> HWResolution [ 0 ] / 72		1033035	1		/			
ANR	1033873	ArrayIndexing	dev -> HWResolution [ 0 ]		1033035	0					
ANR	1033874	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1033875	Identifier	dev		1033035	0					
ANR	1033876	Identifier	HWResolution		1033035	1					
ANR	1033877	PrimaryExpression	0		1033035	1					
ANR	1033878	PrimaryExpression	72		1033035	1					
ANR	1033879	ExpressionStatement	scale_ctm . yy = dev -> HWResolution [ 1 ] / 72	1363:8:50216:50256	1033035	13	True				
ANR	1033880	AssignmentExpression	scale_ctm . yy = dev -> HWResolution [ 1 ] / 72		1033035	0		=			
ANR	1033881	MemberAccess	scale_ctm . yy		1033035	0					
ANR	1033882	Identifier	scale_ctm		1033035	0					
ANR	1033883	Identifier	yy		1033035	1					
ANR	1033884	MultiplicativeExpression	dev -> HWResolution [ 1 ] / 72		1033035	1		/			
ANR	1033885	ArrayIndexing	dev -> HWResolution [ 1 ]		1033035	0					
ANR	1033886	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1033887	Identifier	dev		1033035	0					
ANR	1033888	Identifier	HWResolution		1033035	1					
ANR	1033889	PrimaryExpression	1		1033035	1					
ANR	1033890	PrimaryExpression	72		1033035	1					
ANR	1033891	IfStatement	"if ( ( code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm ) ) < 0 )"		1033035	14					
ANR	1033892	Condition	"( code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm ) ) < 0"	1365:12:50271:50342	1033035	0	True				
ANR	1033893	RelationalExpression	"( code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm ) ) < 0"		1033035	0		<			
ANR	1033894	AssignmentExpression	"code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm )"		1033035	0		=			
ANR	1033895	Identifier	code		1033035	0					
ANR	1033896	CallExpression	"gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm )"		1033035	1					
ANR	1033897	Callee	gs_matrix_invert		1033035	0					
ANR	1033898	Identifier	gs_matrix_invert		1033035	0					
ANR	1033899	ArgumentList	( const gs_matrix * ) & scale_ctm		1033035	1					
ANR	1033900	Argument	( const gs_matrix * ) & scale_ctm		1033035	0					
ANR	1033901	CastExpression	( const gs_matrix * ) & scale_ctm		1033035	0					
ANR	1033902	CastTarget	const gs_matrix *		1033035	0					
ANR	1033903	UnaryOperationExpression	& scale_ctm		1033035	1					
ANR	1033904	UnaryOperator	&		1033035	0					
ANR	1033905	Identifier	scale_ctm		1033035	1					
ANR	1033906	Argument	& scale_ctm		1033035	1					
ANR	1033907	UnaryOperationExpression	& scale_ctm		1033035	0					
ANR	1033908	UnaryOperator	&		1033035	0					
ANR	1033909	Identifier	scale_ctm		1033035	1					
ANR	1033910	PrimaryExpression	0		1033035	1					
ANR	1033911	ReturnStatement	return code ;	1366:12:50357:50368	1033035	1	True				
ANR	1033912	Identifier	code		1033035	0					
ANR	1033913	IfStatement	"if ( ( code = gs_matrix_multiply ( ctm , & scale_ctm , & scale_mat ) ) < 0 )"		1033035	15					
ANR	1033914	Condition	"( code = gs_matrix_multiply ( ctm , & scale_ctm , & scale_mat ) ) < 0"	1368:12:50383:50442	1033035	0	True				
ANR	1033915	RelationalExpression	"( code = gs_matrix_multiply ( ctm , & scale_ctm , & scale_mat ) ) < 0"		1033035	0		<			
ANR	1033916	AssignmentExpression	"code = gs_matrix_multiply ( ctm , & scale_ctm , & scale_mat )"		1033035	0		=			
ANR	1033917	Identifier	code		1033035	0					
ANR	1033918	CallExpression	"gs_matrix_multiply ( ctm , & scale_ctm , & scale_mat )"		1033035	1					
ANR	1033919	Callee	gs_matrix_multiply		1033035	0					
ANR	1033920	Identifier	gs_matrix_multiply		1033035	0					
ANR	1033921	ArgumentList	ctm		1033035	1					
ANR	1033922	Argument	ctm		1033035	0					
ANR	1033923	Identifier	ctm		1033035	0					
ANR	1033924	Argument	& scale_ctm		1033035	1					
ANR	1033925	UnaryOperationExpression	& scale_ctm		1033035	0					
ANR	1033926	UnaryOperator	&		1033035	0					
ANR	1033927	Identifier	scale_ctm		1033035	1					
ANR	1033928	Argument	& scale_mat		1033035	2					
ANR	1033929	UnaryOperationExpression	& scale_mat		1033035	0					
ANR	1033930	UnaryOperator	&		1033035	0					
ANR	1033931	Identifier	scale_mat		1033035	1					
ANR	1033932	PrimaryExpression	0		1033035	1					
ANR	1033933	ReturnStatement	return code ;	1369:12:50503:50514	1033035	1	True				
ANR	1033934	Identifier	code		1033035	0					
ANR	1033935	IfStatement	"if ( ( code = I -> get_fontmatrix ( I , & scale_ctm ) ) < 0 )"		1033035	16					
ANR	1033936	Condition	"( code = I -> get_fontmatrix ( I , & scale_ctm ) ) < 0"	1371:12:50529:50573	1033035	0	True				
ANR	1033937	RelationalExpression	"( code = I -> get_fontmatrix ( I , & scale_ctm ) ) < 0"		1033035	0		<			
ANR	1033938	AssignmentExpression	"code = I -> get_fontmatrix ( I , & scale_ctm )"		1033035	0		=			
ANR	1033939	Identifier	code		1033035	0					
ANR	1033940	CallExpression	"I -> get_fontmatrix ( I , & scale_ctm )"		1033035	1					
ANR	1033941	Callee	I -> get_fontmatrix		1033035	0					
ANR	1033942	PtrMemberAccess	I -> get_fontmatrix		1033035	0					
ANR	1033943	Identifier	I		1033035	0					
ANR	1033944	Identifier	get_fontmatrix		1033035	1					
ANR	1033945	ArgumentList	I		1033035	1					
ANR	1033946	Argument	I		1033035	0					
ANR	1033947	Identifier	I		1033035	0					
ANR	1033948	Argument	& scale_ctm		1033035	1					
ANR	1033949	UnaryOperationExpression	& scale_ctm		1033035	0					
ANR	1033950	UnaryOperator	&		1033035	0					
ANR	1033951	Identifier	scale_ctm		1033035	1					
ANR	1033952	PrimaryExpression	0		1033035	1					
ANR	1033953	ReturnStatement	return code ;	1372:12:50588:50599	1033035	1	True				
ANR	1033954	Identifier	code		1033035	0					
ANR	1033955	IfStatement	"if ( ( code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm ) ) < 0 )"		1033035	17					
ANR	1033956	Condition	"( code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm ) ) < 0"	1374:12:50614:50685	1033035	0	True				
ANR	1033957	RelationalExpression	"( code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm ) ) < 0"		1033035	0		<			
ANR	1033958	AssignmentExpression	"code = gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm )"		1033035	0		=			
ANR	1033959	Identifier	code		1033035	0					
ANR	1033960	CallExpression	"gs_matrix_invert ( ( const gs_matrix * ) & scale_ctm , & scale_ctm )"		1033035	1					
ANR	1033961	Callee	gs_matrix_invert		1033035	0					
ANR	1033962	Identifier	gs_matrix_invert		1033035	0					
ANR	1033963	ArgumentList	( const gs_matrix * ) & scale_ctm		1033035	1					
ANR	1033964	Argument	( const gs_matrix * ) & scale_ctm		1033035	0					
ANR	1033965	CastExpression	( const gs_matrix * ) & scale_ctm		1033035	0					
ANR	1033966	CastTarget	const gs_matrix *		1033035	0					
ANR	1033967	UnaryOperationExpression	& scale_ctm		1033035	1					
ANR	1033968	UnaryOperator	&		1033035	0					
ANR	1033969	Identifier	scale_ctm		1033035	1					
ANR	1033970	Argument	& scale_ctm		1033035	1					
ANR	1033971	UnaryOperationExpression	& scale_ctm		1033035	0					
ANR	1033972	UnaryOperator	&		1033035	0					
ANR	1033973	Identifier	scale_ctm		1033035	1					
ANR	1033974	PrimaryExpression	0		1033035	1					
ANR	1033975	ReturnStatement	return code ;	1375:12:50700:50711	1033035	1	True				
ANR	1033976	Identifier	code		1033035	0					
ANR	1033977	IfStatement	"if ( ( code = gs_matrix_multiply ( & scale_mat , & scale_ctm , & scale_mat ) ) < 0 )"		1033035	18					
ANR	1033978	Condition	"( code = gs_matrix_multiply ( & scale_mat , & scale_ctm , & scale_mat ) ) < 0"	1377:12:50726:50792	1033035	0	True				
ANR	1033979	RelationalExpression	"( code = gs_matrix_multiply ( & scale_mat , & scale_ctm , & scale_mat ) ) < 0"		1033035	0		<			
ANR	1033980	AssignmentExpression	"code = gs_matrix_multiply ( & scale_mat , & scale_ctm , & scale_mat )"		1033035	0		=			
ANR	1033981	Identifier	code		1033035	0					
ANR	1033982	CallExpression	"gs_matrix_multiply ( & scale_mat , & scale_ctm , & scale_mat )"		1033035	1					
ANR	1033983	Callee	gs_matrix_multiply		1033035	0					
ANR	1033984	Identifier	gs_matrix_multiply		1033035	0					
ANR	1033985	ArgumentList	& scale_mat		1033035	1					
ANR	1033986	Argument	& scale_mat		1033035	0					
ANR	1033987	UnaryOperationExpression	& scale_mat		1033035	0					
ANR	1033988	UnaryOperator	&		1033035	0					
ANR	1033989	Identifier	scale_mat		1033035	1					
ANR	1033990	Argument	& scale_ctm		1033035	1					
ANR	1033991	UnaryOperationExpression	& scale_ctm		1033035	0					
ANR	1033992	UnaryOperator	&		1033035	0					
ANR	1033993	Identifier	scale_ctm		1033035	1					
ANR	1033994	Argument	& scale_mat		1033035	2					
ANR	1033995	UnaryOperationExpression	& scale_mat		1033035	0					
ANR	1033996	UnaryOperator	&		1033035	0					
ANR	1033997	Identifier	scale_mat		1033035	1					
ANR	1033998	PrimaryExpression	0		1033035	1					
ANR	1033999	ReturnStatement	return code ;	1378:12:50874:50885	1033035	1	True				
ANR	1034000	Identifier	code		1033035	0					
ANR	1034001	ExpressionStatement	font_scale . matrix [ 0 ] = ( fracint ) ( scale_mat . xx * FontMatrix_div * scale + 0.5 )	1380:8:50896:50986	1033035	19	True				
ANR	1034002	AssignmentExpression	font_scale . matrix [ 0 ] = ( fracint ) ( scale_mat . xx * FontMatrix_div * scale + 0.5 )		1033035	0		=			
ANR	1034003	ArrayIndexing	font_scale . matrix [ 0 ]		1033035	0					
ANR	1034004	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034005	Identifier	font_scale		1033035	0					
ANR	1034006	Identifier	matrix		1033035	1					
ANR	1034007	PrimaryExpression	0		1033035	1					
ANR	1034008	CastExpression	( fracint ) ( scale_mat . xx * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034009	CastTarget	fracint		1033035	0					
ANR	1034010	AdditiveExpression	scale_mat . xx * FontMatrix_div * scale + 0.5		1033035	1		+			
ANR	1034011	MultiplicativeExpression	scale_mat . xx * FontMatrix_div * scale		1033035	0		*			
ANR	1034012	MemberAccess	scale_mat . xx		1033035	0					
ANR	1034013	Identifier	scale_mat		1033035	0					
ANR	1034014	Identifier	xx		1033035	1					
ANR	1034015	MultiplicativeExpression	FontMatrix_div * scale		1033035	1		*			
ANR	1034016	Identifier	FontMatrix_div		1033035	0					
ANR	1034017	Identifier	scale		1033035	1					
ANR	1034018	PrimaryExpression	0.5		1033035	1					
ANR	1034019	ExpressionStatement	font_scale . matrix [ 1 ] = - ( fracint ) ( scale_mat . xy * FontMatrix_div * scale + 0.5 )	1382:8:50996:51087	1033035	20	True				
ANR	1034020	AssignmentExpression	font_scale . matrix [ 1 ] = - ( fracint ) ( scale_mat . xy * FontMatrix_div * scale + 0.5 )		1033035	0		=			
ANR	1034021	ArrayIndexing	font_scale . matrix [ 1 ]		1033035	0					
ANR	1034022	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034023	Identifier	font_scale		1033035	0					
ANR	1034024	Identifier	matrix		1033035	1					
ANR	1034025	PrimaryExpression	1		1033035	1					
ANR	1034026	UnaryOperationExpression	- ( fracint ) ( scale_mat . xy * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034027	UnaryOperator	-		1033035	0					
ANR	1034028	CastExpression	( fracint ) ( scale_mat . xy * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034029	CastTarget	fracint		1033035	0					
ANR	1034030	AdditiveExpression	scale_mat . xy * FontMatrix_div * scale + 0.5		1033035	1		+			
ANR	1034031	MultiplicativeExpression	scale_mat . xy * FontMatrix_div * scale		1033035	0		*			
ANR	1034032	MemberAccess	scale_mat . xy		1033035	0					
ANR	1034033	Identifier	scale_mat		1033035	0					
ANR	1034034	Identifier	xy		1033035	1					
ANR	1034035	MultiplicativeExpression	FontMatrix_div * scale		1033035	1		*			
ANR	1034036	Identifier	FontMatrix_div		1033035	0					
ANR	1034037	Identifier	scale		1033035	1					
ANR	1034038	PrimaryExpression	0.5		1033035	1					
ANR	1034039	ExpressionStatement	font_scale . matrix [ 2 ] = ( fracint ) ( scale_mat . yx * FontMatrix_div * scale + 0.5 )	1384:8:51097:51187	1033035	21	True				
ANR	1034040	AssignmentExpression	font_scale . matrix [ 2 ] = ( fracint ) ( scale_mat . yx * FontMatrix_div * scale + 0.5 )		1033035	0		=			
ANR	1034041	ArrayIndexing	font_scale . matrix [ 2 ]		1033035	0					
ANR	1034042	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034043	Identifier	font_scale		1033035	0					
ANR	1034044	Identifier	matrix		1033035	1					
ANR	1034045	PrimaryExpression	2		1033035	1					
ANR	1034046	CastExpression	( fracint ) ( scale_mat . yx * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034047	CastTarget	fracint		1033035	0					
ANR	1034048	AdditiveExpression	scale_mat . yx * FontMatrix_div * scale + 0.5		1033035	1		+			
ANR	1034049	MultiplicativeExpression	scale_mat . yx * FontMatrix_div * scale		1033035	0		*			
ANR	1034050	MemberAccess	scale_mat . yx		1033035	0					
ANR	1034051	Identifier	scale_mat		1033035	0					
ANR	1034052	Identifier	yx		1033035	1					
ANR	1034053	MultiplicativeExpression	FontMatrix_div * scale		1033035	1		*			
ANR	1034054	Identifier	FontMatrix_div		1033035	0					
ANR	1034055	Identifier	scale		1033035	1					
ANR	1034056	PrimaryExpression	0.5		1033035	1					
ANR	1034057	ExpressionStatement	font_scale . matrix [ 3 ] = - ( fracint ) ( scale_mat . yy * FontMatrix_div * scale + 0.5 )	1386:8:51197:51288	1033035	22	True				
ANR	1034058	AssignmentExpression	font_scale . matrix [ 3 ] = - ( fracint ) ( scale_mat . yy * FontMatrix_div * scale + 0.5 )		1033035	0		=			
ANR	1034059	ArrayIndexing	font_scale . matrix [ 3 ]		1033035	0					
ANR	1034060	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034061	Identifier	font_scale		1033035	0					
ANR	1034062	Identifier	matrix		1033035	1					
ANR	1034063	PrimaryExpression	3		1033035	1					
ANR	1034064	UnaryOperationExpression	- ( fracint ) ( scale_mat . yy * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034065	UnaryOperator	-		1033035	0					
ANR	1034066	CastExpression	( fracint ) ( scale_mat . yy * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034067	CastTarget	fracint		1033035	0					
ANR	1034068	AdditiveExpression	scale_mat . yy * FontMatrix_div * scale + 0.5		1033035	1		+			
ANR	1034069	MultiplicativeExpression	scale_mat . yy * FontMatrix_div * scale		1033035	0		*			
ANR	1034070	MemberAccess	scale_mat . yy		1033035	0					
ANR	1034071	Identifier	scale_mat		1033035	0					
ANR	1034072	Identifier	yy		1033035	1					
ANR	1034073	MultiplicativeExpression	FontMatrix_div * scale		1033035	1		*			
ANR	1034074	Identifier	FontMatrix_div		1033035	0					
ANR	1034075	Identifier	scale		1033035	1					
ANR	1034076	PrimaryExpression	0.5		1033035	1					
ANR	1034077	ExpressionStatement	font_scale . matrix [ 4 ] = ( fracint ) ( scale_mat . tx * FontMatrix_div * scale + 0.5 )	1388:8:51298:51388	1033035	23	True				
ANR	1034078	AssignmentExpression	font_scale . matrix [ 4 ] = ( fracint ) ( scale_mat . tx * FontMatrix_div * scale + 0.5 )		1033035	0		=			
ANR	1034079	ArrayIndexing	font_scale . matrix [ 4 ]		1033035	0					
ANR	1034080	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034081	Identifier	font_scale		1033035	0					
ANR	1034082	Identifier	matrix		1033035	1					
ANR	1034083	PrimaryExpression	4		1033035	1					
ANR	1034084	CastExpression	( fracint ) ( scale_mat . tx * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034085	CastTarget	fracint		1033035	0					
ANR	1034086	AdditiveExpression	scale_mat . tx * FontMatrix_div * scale + 0.5		1033035	1		+			
ANR	1034087	MultiplicativeExpression	scale_mat . tx * FontMatrix_div * scale		1033035	0		*			
ANR	1034088	MemberAccess	scale_mat . tx		1033035	0					
ANR	1034089	Identifier	scale_mat		1033035	0					
ANR	1034090	Identifier	tx		1033035	1					
ANR	1034091	MultiplicativeExpression	FontMatrix_div * scale		1033035	1		*			
ANR	1034092	Identifier	FontMatrix_div		1033035	0					
ANR	1034093	Identifier	scale		1033035	1					
ANR	1034094	PrimaryExpression	0.5		1033035	1					
ANR	1034095	ExpressionStatement	font_scale . matrix [ 5 ] = ( fracint ) ( scale_mat . ty * FontMatrix_div * scale + 0.5 )	1390:8:51398:51488	1033035	24	True				
ANR	1034096	AssignmentExpression	font_scale . matrix [ 5 ] = ( fracint ) ( scale_mat . ty * FontMatrix_div * scale + 0.5 )		1033035	0		=			
ANR	1034097	ArrayIndexing	font_scale . matrix [ 5 ]		1033035	0					
ANR	1034098	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034099	Identifier	font_scale		1033035	0					
ANR	1034100	Identifier	matrix		1033035	1					
ANR	1034101	PrimaryExpression	5		1033035	1					
ANR	1034102	CastExpression	( fracint ) ( scale_mat . ty * FontMatrix_div * scale + 0.5 )		1033035	1					
ANR	1034103	CastTarget	fracint		1033035	0					
ANR	1034104	AdditiveExpression	scale_mat . ty * FontMatrix_div * scale + 0.5		1033035	1		+			
ANR	1034105	MultiplicativeExpression	scale_mat . ty * FontMatrix_div * scale		1033035	0		*			
ANR	1034106	MemberAccess	scale_mat . ty		1033035	0					
ANR	1034107	Identifier	scale_mat		1033035	0					
ANR	1034108	Identifier	ty		1033035	1					
ANR	1034109	MultiplicativeExpression	FontMatrix_div * scale		1033035	1		*			
ANR	1034110	Identifier	FontMatrix_div		1033035	0					
ANR	1034111	Identifier	scale		1033035	1					
ANR	1034112	PrimaryExpression	0.5		1033035	1					
ANR	1034113	ExpressionStatement	font_scale . HWResolution [ 0 ] = ( fracint ) ( ( double ) dev -> HWResolution [ 0 ] * font_scale . subpixels [ 0 ] * scale )	1394:8:51556:51694	1033035	25	True				
ANR	1034114	AssignmentExpression	font_scale . HWResolution [ 0 ] = ( fracint ) ( ( double ) dev -> HWResolution [ 0 ] * font_scale . subpixels [ 0 ] * scale )		1033035	0		=			
ANR	1034115	ArrayIndexing	font_scale . HWResolution [ 0 ]		1033035	0					
ANR	1034116	MemberAccess	font_scale . HWResolution		1033035	0					
ANR	1034117	Identifier	font_scale		1033035	0					
ANR	1034118	Identifier	HWResolution		1033035	1					
ANR	1034119	PrimaryExpression	0		1033035	1					
ANR	1034120	CastExpression	( fracint ) ( ( double ) dev -> HWResolution [ 0 ] * font_scale . subpixels [ 0 ] * scale )		1033035	1					
ANR	1034121	CastTarget	fracint		1033035	0					
ANR	1034122	MultiplicativeExpression	( double ) dev -> HWResolution [ 0 ] * font_scale . subpixels [ 0 ] * scale		1033035	1		*			
ANR	1034123	CastExpression	( double ) dev -> HWResolution [ 0 ]		1033035	0					
ANR	1034124	CastTarget	double		1033035	0					
ANR	1034125	ArrayIndexing	dev -> HWResolution [ 0 ]		1033035	1					
ANR	1034126	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1034127	Identifier	dev		1033035	0					
ANR	1034128	Identifier	HWResolution		1033035	1					
ANR	1034129	PrimaryExpression	0		1033035	1					
ANR	1034130	MultiplicativeExpression	font_scale . subpixels [ 0 ] * scale		1033035	1		*			
ANR	1034131	ArrayIndexing	font_scale . subpixels [ 0 ]		1033035	0					
ANR	1034132	MemberAccess	font_scale . subpixels		1033035	0					
ANR	1034133	Identifier	font_scale		1033035	0					
ANR	1034134	Identifier	subpixels		1033035	1					
ANR	1034135	PrimaryExpression	0		1033035	1					
ANR	1034136	Identifier	scale		1033035	1					
ANR	1034137	ExpressionStatement	font_scale . HWResolution [ 1 ] = ( fracint ) ( ( double ) dev -> HWResolution [ 1 ] * font_scale . subpixels [ 1 ] * scale )	1397:8:51704:51842	1033035	26	True				
ANR	1034138	AssignmentExpression	font_scale . HWResolution [ 1 ] = ( fracint ) ( ( double ) dev -> HWResolution [ 1 ] * font_scale . subpixels [ 1 ] * scale )		1033035	0		=			
ANR	1034139	ArrayIndexing	font_scale . HWResolution [ 1 ]		1033035	0					
ANR	1034140	MemberAccess	font_scale . HWResolution		1033035	0					
ANR	1034141	Identifier	font_scale		1033035	0					
ANR	1034142	Identifier	HWResolution		1033035	1					
ANR	1034143	PrimaryExpression	1		1033035	1					
ANR	1034144	CastExpression	( fracint ) ( ( double ) dev -> HWResolution [ 1 ] * font_scale . subpixels [ 1 ] * scale )		1033035	1					
ANR	1034145	CastTarget	fracint		1033035	0					
ANR	1034146	MultiplicativeExpression	( double ) dev -> HWResolution [ 1 ] * font_scale . subpixels [ 1 ] * scale		1033035	1		*			
ANR	1034147	CastExpression	( double ) dev -> HWResolution [ 1 ]		1033035	0					
ANR	1034148	CastTarget	double		1033035	0					
ANR	1034149	ArrayIndexing	dev -> HWResolution [ 1 ]		1033035	1					
ANR	1034150	PtrMemberAccess	dev -> HWResolution		1033035	0					
ANR	1034151	Identifier	dev		1033035	0					
ANR	1034152	Identifier	HWResolution		1033035	1					
ANR	1034153	PrimaryExpression	1		1033035	1					
ANR	1034154	MultiplicativeExpression	font_scale . subpixels [ 1 ] * scale		1033035	1		*			
ANR	1034155	ArrayIndexing	font_scale . subpixels [ 1 ]		1033035	0					
ANR	1034156	MemberAccess	font_scale . subpixels		1033035	0					
ANR	1034157	Identifier	font_scale		1033035	0					
ANR	1034158	Identifier	subpixels		1033035	1					
ANR	1034159	PrimaryExpression	1		1033035	1					
ANR	1034160	Identifier	scale		1033035	1					
ANR	1034161	IfStatement	"if ( ( hypot ( ( double ) font_scale . matrix [ 0 ] , ( double ) font_scale . matrix [ 2 ] ) == 0.0 || hypot ( ( double ) font_scale . matrix [ 1 ] , ( double ) font_scale . matrix [ 3 ] ) == 0.0 ) )"		1033035	27					
ANR	1034162	Condition	"hypot ( ( double ) font_scale . matrix [ 0 ] , ( double ) font_scale . matrix [ 2 ] ) == 0.0 || hypot ( ( double ) font_scale . matrix [ 1 ] , ( double ) font_scale . matrix [ 3 ] ) == 0.0"	1402:12:51858:52055	1033035	0	True				
ANR	1034163	OrExpression	"hypot ( ( double ) font_scale . matrix [ 0 ] , ( double ) font_scale . matrix [ 2 ] ) == 0.0 || hypot ( ( double ) font_scale . matrix [ 1 ] , ( double ) font_scale . matrix [ 3 ] ) == 0.0"		1033035	0		||			
ANR	1034164	EqualityExpression	"hypot ( ( double ) font_scale . matrix [ 0 ] , ( double ) font_scale . matrix [ 2 ] ) == 0.0"		1033035	0		==			
ANR	1034165	CallExpression	"hypot ( ( double ) font_scale . matrix [ 0 ] , ( double ) font_scale . matrix [ 2 ] )"		1033035	0					
ANR	1034166	Callee	hypot		1033035	0					
ANR	1034167	Identifier	hypot		1033035	0					
ANR	1034168	ArgumentList	( double ) font_scale . matrix [ 0 ]		1033035	1					
ANR	1034169	Argument	( double ) font_scale . matrix [ 0 ]		1033035	0					
ANR	1034170	CastExpression	( double ) font_scale . matrix [ 0 ]		1033035	0					
ANR	1034171	CastTarget	double		1033035	0					
ANR	1034172	ArrayIndexing	font_scale . matrix [ 0 ]		1033035	1					
ANR	1034173	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034174	Identifier	font_scale		1033035	0					
ANR	1034175	Identifier	matrix		1033035	1					
ANR	1034176	PrimaryExpression	0		1033035	1					
ANR	1034177	Argument	( double ) font_scale . matrix [ 2 ]		1033035	1					
ANR	1034178	CastExpression	( double ) font_scale . matrix [ 2 ]		1033035	0					
ANR	1034179	CastTarget	double		1033035	0					
ANR	1034180	ArrayIndexing	font_scale . matrix [ 2 ]		1033035	1					
ANR	1034181	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034182	Identifier	font_scale		1033035	0					
ANR	1034183	Identifier	matrix		1033035	1					
ANR	1034184	PrimaryExpression	2		1033035	1					
ANR	1034185	PrimaryExpression	0.0		1033035	1					
ANR	1034186	EqualityExpression	"hypot ( ( double ) font_scale . matrix [ 1 ] , ( double ) font_scale . matrix [ 3 ] ) == 0.0"		1033035	1		==			
ANR	1034187	CallExpression	"hypot ( ( double ) font_scale . matrix [ 1 ] , ( double ) font_scale . matrix [ 3 ] )"		1033035	0					
ANR	1034188	Callee	hypot		1033035	0					
ANR	1034189	Identifier	hypot		1033035	0					
ANR	1034190	ArgumentList	( double ) font_scale . matrix [ 1 ]		1033035	1					
ANR	1034191	Argument	( double ) font_scale . matrix [ 1 ]		1033035	0					
ANR	1034192	CastExpression	( double ) font_scale . matrix [ 1 ]		1033035	0					
ANR	1034193	CastTarget	double		1033035	0					
ANR	1034194	ArrayIndexing	font_scale . matrix [ 1 ]		1033035	1					
ANR	1034195	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034196	Identifier	font_scale		1033035	0					
ANR	1034197	Identifier	matrix		1033035	1					
ANR	1034198	PrimaryExpression	1		1033035	1					
ANR	1034199	Argument	( double ) font_scale . matrix [ 3 ]		1033035	1					
ANR	1034200	CastExpression	( double ) font_scale . matrix [ 3 ]		1033035	0					
ANR	1034201	CastTarget	double		1033035	0					
ANR	1034202	ArrayIndexing	font_scale . matrix [ 3 ]		1033035	1					
ANR	1034203	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034204	Identifier	font_scale		1033035	0					
ANR	1034205	Identifier	matrix		1033035	1					
ANR	1034206	PrimaryExpression	3		1033035	1					
ANR	1034207	PrimaryExpression	0.0		1033035	1					
ANR	1034208	CompoundStatement		186:61:6892:6892	1033035	1					
ANR	1034209	IfStatement	if ( ! font_scale . matrix [ 0 ] )		1033035	0					
ANR	1034210	Condition	! font_scale . matrix [ 0 ]	1408:16:52149:52169	1033035	0	True				
ANR	1034211	UnaryOperationExpression	! font_scale . matrix [ 0 ]		1033035	0					
ANR	1034212	UnaryOperator	!		1033035	0					
ANR	1034213	ArrayIndexing	font_scale . matrix [ 0 ]		1033035	1					
ANR	1034214	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034215	Identifier	font_scale		1033035	0					
ANR	1034216	Identifier	matrix		1033035	1					
ANR	1034217	PrimaryExpression	0		1033035	1					
ANR	1034218	ExpressionStatement	font_scale . matrix [ 0 ] = 1	1409:16:52188:52212	1033035	1	True				
ANR	1034219	AssignmentExpression	font_scale . matrix [ 0 ] = 1		1033035	0		=			
ANR	1034220	ArrayIndexing	font_scale . matrix [ 0 ]		1033035	0					
ANR	1034221	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034222	Identifier	font_scale		1033035	0					
ANR	1034223	Identifier	matrix		1033035	1					
ANR	1034224	PrimaryExpression	0		1033035	1					
ANR	1034225	PrimaryExpression	1		1033035	1					
ANR	1034226	IfStatement	if ( ! font_scale . matrix [ 3 ] )		1033035	1					
ANR	1034227	Condition	! font_scale . matrix [ 3 ]	1410:16:52230:52250	1033035	0	True				
ANR	1034228	UnaryOperationExpression	! font_scale . matrix [ 3 ]		1033035	0					
ANR	1034229	UnaryOperator	!		1033035	0					
ANR	1034230	ArrayIndexing	font_scale . matrix [ 3 ]		1033035	1					
ANR	1034231	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034232	Identifier	font_scale		1033035	0					
ANR	1034233	Identifier	matrix		1033035	1					
ANR	1034234	PrimaryExpression	3		1033035	1					
ANR	1034235	ExpressionStatement	font_scale . matrix [ 3 ] = 1	1411:16:52269:52293	1033035	1	True				
ANR	1034236	AssignmentExpression	font_scale . matrix [ 3 ] = 1		1033035	0		=			
ANR	1034237	ArrayIndexing	font_scale . matrix [ 3 ]		1033035	0					
ANR	1034238	MemberAccess	font_scale . matrix		1033035	0					
ANR	1034239	Identifier	font_scale		1033035	0					
ANR	1034240	Identifier	matrix		1033035	1					
ANR	1034241	PrimaryExpression	3		1033035	1					
ANR	1034242	PrimaryExpression	1		1033035	1					
ANR	1034243	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , & font_scale , NULL , gs_fapi_toplevel_prepared ) ) ) < 0 )"		1033035	28					
ANR	1034244	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , & font_scale , NULL , gs_fapi_toplevel_prepared ) ) ) < 0"	1414:12:52318:52604	1033035	0	True				
ANR	1034245	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , & font_scale , NULL , gs_fapi_toplevel_prepared ) ) ) < 0"		1033035	0		<			
ANR	1034246	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , & font_scale , NULL , gs_fapi_toplevel_prepared ) )"		1033035	0		=			
ANR	1034247	Identifier	code		1033035	0					
ANR	1034248	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> get_scaled_font ( I , & I -> ff , & font_scale , NULL , gs_fapi_toplevel_prepared ) )"		1033035	1					
ANR	1034249	Callee	gs_fapi_renderer_retcode		1033035	0					
ANR	1034250	Identifier	gs_fapi_renderer_retcode		1033035	0					
ANR	1034251	ArgumentList	mem		1033035	1					
ANR	1034252	Argument	mem		1033035	0					
ANR	1034253	Identifier	mem		1033035	0					
ANR	1034254	Argument	I		1033035	1					
ANR	1034255	Identifier	I		1033035	0					
ANR	1034256	Argument	"I -> get_scaled_font ( I , & I -> ff , & font_scale , NULL , gs_fapi_toplevel_prepared )"		1033035	2					
ANR	1034257	CallExpression	"I -> get_scaled_font ( I , & I -> ff , & font_scale , NULL , gs_fapi_toplevel_prepared )"		1033035	0					
ANR	1034258	Callee	I -> get_scaled_font		1033035	0					
ANR	1034259	PtrMemberAccess	I -> get_scaled_font		1033035	0					
ANR	1034260	Identifier	I		1033035	0					
ANR	1034261	Identifier	get_scaled_font		1033035	1					
ANR	1034262	ArgumentList	I		1033035	1					
ANR	1034263	Argument	I		1033035	0					
ANR	1034264	Identifier	I		1033035	0					
ANR	1034265	Argument	& I -> ff		1033035	1					
ANR	1034266	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1034267	UnaryOperator	&		1033035	0					
ANR	1034268	PtrMemberAccess	I -> ff		1033035	1					
ANR	1034269	Identifier	I		1033035	0					
ANR	1034270	Identifier	ff		1033035	1					
ANR	1034271	Argument	& font_scale		1033035	2					
ANR	1034272	UnaryOperationExpression	& font_scale		1033035	0					
ANR	1034273	UnaryOperator	&		1033035	0					
ANR	1034274	Identifier	font_scale		1033035	1					
ANR	1034275	Argument	NULL		1033035	3					
ANR	1034276	Identifier	NULL		1033035	0					
ANR	1034277	Argument	gs_fapi_toplevel_prepared		1033035	4					
ANR	1034278	Identifier	gs_fapi_toplevel_prepared		1033035	0					
ANR	1034279	PrimaryExpression	0		1033035	1					
ANR	1034280	CompoundStatement		199:91:7441:7441	1033035	1					
ANR	1034281	ReturnStatement	return code ;	1419:12:52621:52632	1033035	0	True				
ANR	1034282	Identifier	code		1033035	0					
ANR	1034283	ExpressionStatement	pbfont -> FAPI_font_data = I -> ff . server_font_data	1421:8:52652:52699	1033035	29	True				
ANR	1034284	AssignmentExpression	pbfont -> FAPI_font_data = I -> ff . server_font_data		1033035	0		=			
ANR	1034285	PtrMemberAccess	pbfont -> FAPI_font_data		1033035	0					
ANR	1034286	Identifier	pbfont		1033035	0					
ANR	1034287	Identifier	FAPI_font_data		1033035	1					
ANR	1034288	MemberAccess	I -> ff . server_font_data		1033035	1					
ANR	1034289	PtrMemberAccess	I -> ff		1033035	0					
ANR	1034290	Identifier	I		1033035	0					
ANR	1034291	Identifier	ff		1033035	1					
ANR	1034292	Identifier	server_font_data		1033035	1					
ANR	1034293	ExpressionStatement	cr . char_codes_count = 1	1424:4:52746:52769	1033035	47	True				
ANR	1034294	AssignmentExpression	cr . char_codes_count = 1		1033035	0		=			
ANR	1034295	MemberAccess	cr . char_codes_count		1033035	0					
ANR	1034296	Identifier	cr		1033035	0					
ANR	1034297	Identifier	char_codes_count		1033035	1					
ANR	1034298	PrimaryExpression	1		1033035	1					
ANR	1034299	ExpressionStatement	cr . char_codes [ 0 ] = index	1425:4:52775:52799	1033035	48	True				
ANR	1034300	AssignmentExpression	cr . char_codes [ 0 ] = index		1033035	0		=			
ANR	1034301	ArrayIndexing	cr . char_codes [ 0 ]		1033035	0					
ANR	1034302	MemberAccess	cr . char_codes		1033035	0					
ANR	1034303	Identifier	cr		1033035	0					
ANR	1034304	Identifier	char_codes		1033035	1					
ANR	1034305	PrimaryExpression	0		1033035	1					
ANR	1034306	Identifier	index		1033035	1					
ANR	1034307	ExpressionStatement	cr . client_char_code = chr	1426:4:52805:52830	1033035	49	True				
ANR	1034308	AssignmentExpression	cr . client_char_code = chr		1033035	0		=			
ANR	1034309	MemberAccess	cr . client_char_code		1033035	0					
ANR	1034310	Identifier	cr		1033035	0					
ANR	1034311	Identifier	client_char_code		1033035	1					
ANR	1034312	Identifier	chr		1033035	1					
ANR	1034313	ExpressionStatement	cr . is_glyph_index = true	1427:4:52836:52860	1033035	50	True				
ANR	1034314	AssignmentExpression	cr . is_glyph_index = true		1033035	0		=			
ANR	1034315	MemberAccess	cr . is_glyph_index		1033035	0					
ANR	1034316	Identifier	cr		1033035	0					
ANR	1034317	Identifier	is_glyph_index		1033035	1					
ANR	1034318	Identifier	true		1033035	1					
ANR	1034319	ExpressionStatement	enc_char_name_string . data = NULL	1428:4:52866:52898	1033035	51	True				
ANR	1034320	AssignmentExpression	enc_char_name_string . data = NULL		1033035	0		=			
ANR	1034321	MemberAccess	enc_char_name_string . data		1033035	0					
ANR	1034322	Identifier	enc_char_name_string		1033035	0					
ANR	1034323	Identifier	data		1033035	1					
ANR	1034324	Identifier	NULL		1033035	1					
ANR	1034325	ExpressionStatement	enc_char_name_string . size = 0	1429:4:52904:52933	1033035	52	True				
ANR	1034326	AssignmentExpression	enc_char_name_string . size = 0		1033035	0		=			
ANR	1034327	MemberAccess	enc_char_name_string . size		1033035	0					
ANR	1034328	Identifier	enc_char_name_string		1033035	0					
ANR	1034329	Identifier	size		1033035	1					
ANR	1034330	PrimaryExpression	0		1033035	1					
ANR	1034331	IfStatement	if ( I -> ff . get_glyphname_or_cid )		1033035	53					
ANR	1034332	Condition	I -> ff . get_glyphname_or_cid	1431:8:52944:52969	1033035	0	True				
ANR	1034333	MemberAccess	I -> ff . get_glyphname_or_cid		1033035	0					
ANR	1034334	PtrMemberAccess	I -> ff		1033035	0					
ANR	1034335	Identifier	I		1033035	0					
ANR	1034336	Identifier	ff		1033035	1					
ANR	1034337	Identifier	get_glyphname_or_cid		1033035	1					
ANR	1034338	CompoundStatement		212:36:7806:7806	1033035	1					
ANR	1034339	IfStatement	"if ( ( code = I -> ff . get_glyphname_or_cid ( penum , pbfont , charstring , glyphname , index , & enc_char_name_string , font_file_path , & cr , bCID ) ) < 0 )"		1033035	0					
ANR	1034340	Condition	"( code = I -> ff . get_glyphname_or_cid ( penum , pbfont , charstring , glyphname , index , & enc_char_name_string , font_file_path , & cr , bCID ) ) < 0"	1432:12:52986:53212	1033035	0	True				
ANR	1034341	RelationalExpression	"( code = I -> ff . get_glyphname_or_cid ( penum , pbfont , charstring , glyphname , index , & enc_char_name_string , font_file_path , & cr , bCID ) ) < 0"		1033035	0		<			
ANR	1034342	AssignmentExpression	"code = I -> ff . get_glyphname_or_cid ( penum , pbfont , charstring , glyphname , index , & enc_char_name_string , font_file_path , & cr , bCID )"		1033035	0		=			
ANR	1034343	Identifier	code		1033035	0					
ANR	1034344	CallExpression	"I -> ff . get_glyphname_or_cid ( penum , pbfont , charstring , glyphname , index , & enc_char_name_string , font_file_path , & cr , bCID )"		1033035	1					
ANR	1034345	Callee	I -> ff . get_glyphname_or_cid		1033035	0					
ANR	1034346	MemberAccess	I -> ff . get_glyphname_or_cid		1033035	0					
ANR	1034347	PtrMemberAccess	I -> ff		1033035	0					
ANR	1034348	Identifier	I		1033035	0					
ANR	1034349	Identifier	ff		1033035	1					
ANR	1034350	Identifier	get_glyphname_or_cid		1033035	1					
ANR	1034351	ArgumentList	penum		1033035	1					
ANR	1034352	Argument	penum		1033035	0					
ANR	1034353	Identifier	penum		1033035	0					
ANR	1034354	Argument	pbfont		1033035	1					
ANR	1034355	Identifier	pbfont		1033035	0					
ANR	1034356	Argument	charstring		1033035	2					
ANR	1034357	Identifier	charstring		1033035	0					
ANR	1034358	Argument	glyphname		1033035	3					
ANR	1034359	Identifier	glyphname		1033035	0					
ANR	1034360	Argument	index		1033035	4					
ANR	1034361	Identifier	index		1033035	0					
ANR	1034362	Argument	& enc_char_name_string		1033035	5					
ANR	1034363	UnaryOperationExpression	& enc_char_name_string		1033035	0					
ANR	1034364	UnaryOperator	&		1033035	0					
ANR	1034365	Identifier	enc_char_name_string		1033035	1					
ANR	1034366	Argument	font_file_path		1033035	6					
ANR	1034367	Identifier	font_file_path		1033035	0					
ANR	1034368	Argument	& cr		1033035	7					
ANR	1034369	UnaryOperationExpression	& cr		1033035	0					
ANR	1034370	UnaryOperator	&		1033035	0					
ANR	1034371	Identifier	cr		1033035	1					
ANR	1034372	Argument	bCID		1033035	8					
ANR	1034373	Identifier	bCID		1033035	0					
ANR	1034374	PrimaryExpression	0		1033035	1					
ANR	1034375	ReturnStatement	return ( code ) ;	1436:12:53227:53240	1033035	1	True				
ANR	1034376	Identifier	code		1033035	0					
ANR	1034377	IfStatement	if ( bCID && ! bIsType1GlyphData )		1033035	54					
ANR	1034378	Condition	bCID && ! bIsType1GlyphData	1440:8:53301:53326	1033035	0	True				
ANR	1034379	AndExpression	bCID && ! bIsType1GlyphData		1033035	0		&&			
ANR	1034380	Identifier	bCID		1033035	0					
ANR	1034381	UnaryOperationExpression	! bIsType1GlyphData		1033035	1					
ANR	1034382	UnaryOperator	!		1033035	0					
ANR	1034383	Identifier	bIsType1GlyphData		1033035	1					
ANR	1034384	CompoundStatement		223:8:8228:8273	1033035	1					
ANR	1034385	IdentifierDeclStatement	gs_font_cid2 * pfcid = ( gs_font_cid2 * ) pbfont ;	1441:8:53339:53384	1033035	0	True				
ANR	1034386	IdentifierDecl	* pfcid = ( gs_font_cid2 * ) pbfont		1033035	0					
ANR	1034387	IdentifierDeclType	gs_font_cid2 *		1033035	0					
ANR	1034388	Identifier	pfcid		1033035	1					
ANR	1034389	AssignmentExpression	* pfcid = ( gs_font_cid2 * ) pbfont		1033035	2		=			
ANR	1034390	Identifier	pfcid		1033035	0					
ANR	1034391	CastExpression	( gs_font_cid2 * ) pbfont		1033035	1					
ANR	1034392	CastTarget	gs_font_cid2 *		1033035	0					
ANR	1034393	Identifier	pbfont		1033035	1					
ANR	1034394	IdentifierDeclStatement	int MetricsCount = pfcid -> cidata . MetricsCount ;	1442:8:53394:53439	1033035	1	True				
ANR	1034395	IdentifierDecl	MetricsCount = pfcid -> cidata . MetricsCount		1033035	0					
ANR	1034396	IdentifierDeclType	int		1033035	0					
ANR	1034397	Identifier	MetricsCount		1033035	1					
ANR	1034398	AssignmentExpression	MetricsCount = pfcid -> cidata . MetricsCount		1033035	2		=			
ANR	1034399	Identifier	MetricsCount		1033035	0					
ANR	1034400	MemberAccess	pfcid -> cidata . MetricsCount		1033035	1					
ANR	1034401	PtrMemberAccess	pfcid -> cidata		1033035	0					
ANR	1034402	Identifier	pfcid		1033035	0					
ANR	1034403	Identifier	cidata		1033035	1					
ANR	1034404	Identifier	MetricsCount		1033035	1					
ANR	1034405	IfStatement	if ( MetricsCount > 0 )		1033035	2					
ANR	1034406	Condition	MetricsCount > 0	1444:12:53454:53469	1033035	0	True				
ANR	1034407	RelationalExpression	MetricsCount > 0		1033035	0		>			
ANR	1034408	Identifier	MetricsCount		1033035	0					
ANR	1034409	PrimaryExpression	0		1033035	1					
ANR	1034410	CompoundStatement		227:12:8354:8480	1033035	1					
ANR	1034411	IdentifierDeclStatement	const byte * data_ptr ;	1445:12:53486:53506	1033035	0	True				
ANR	1034412	IdentifierDecl	* data_ptr		1033035	0					
ANR	1034413	IdentifierDeclType	const byte *		1033035	0					
ANR	1034414	Identifier	data_ptr		1033035	1					
ANR	1034415	IdentifierDeclStatement	"int l = I -> ff . get_glyphdirectory_data ( & ( I -> ff ) , cr . char_codes [ 0 ] , & data_ptr ) ;"	1446:12:53520:53646	1033035	1	True				
ANR	1034416	IdentifierDecl	"l = I -> ff . get_glyphdirectory_data ( & ( I -> ff ) , cr . char_codes [ 0 ] , & data_ptr )"		1033035	0					
ANR	1034417	IdentifierDeclType	int		1033035	0					
ANR	1034418	Identifier	l		1033035	1					
ANR	1034419	AssignmentExpression	"l = I -> ff . get_glyphdirectory_data ( & ( I -> ff ) , cr . char_codes [ 0 ] , & data_ptr )"		1033035	2		=			
ANR	1034420	Identifier	l		1033035	0					
ANR	1034421	CallExpression	"I -> ff . get_glyphdirectory_data ( & ( I -> ff ) , cr . char_codes [ 0 ] , & data_ptr )"		1033035	1					
ANR	1034422	Callee	I -> ff . get_glyphdirectory_data		1033035	0					
ANR	1034423	MemberAccess	I -> ff . get_glyphdirectory_data		1033035	0					
ANR	1034424	PtrMemberAccess	I -> ff		1033035	0					
ANR	1034425	Identifier	I		1033035	0					
ANR	1034426	Identifier	ff		1033035	1					
ANR	1034427	Identifier	get_glyphdirectory_data		1033035	1					
ANR	1034428	ArgumentList	& ( I -> ff )		1033035	1					
ANR	1034429	Argument	& ( I -> ff )		1033035	0					
ANR	1034430	UnaryOperationExpression	& ( I -> ff )		1033035	0					
ANR	1034431	UnaryOperator	&		1033035	0					
ANR	1034432	PtrMemberAccess	I -> ff		1033035	1					
ANR	1034433	Identifier	I		1033035	0					
ANR	1034434	Identifier	ff		1033035	1					
ANR	1034435	Argument	cr . char_codes [ 0 ]		1033035	1					
ANR	1034436	ArrayIndexing	cr . char_codes [ 0 ]		1033035	0					
ANR	1034437	MemberAccess	cr . char_codes		1033035	0					
ANR	1034438	Identifier	cr		1033035	0					
ANR	1034439	Identifier	char_codes		1033035	1					
ANR	1034440	PrimaryExpression	0		1033035	1					
ANR	1034441	Argument	& data_ptr		1033035	2					
ANR	1034442	UnaryOperationExpression	& data_ptr		1033035	0					
ANR	1034443	UnaryOperator	&		1033035	0					
ANR	1034444	Identifier	data_ptr		1033035	1					
ANR	1034445	IfStatement	if ( MetricsCount == 2 && l >= 4 )		1033035	2					
ANR	1034446	Condition	MetricsCount == 2 && l >= 4	1452:16:53821:53847	1033035	0	True				
ANR	1034447	AndExpression	MetricsCount == 2 && l >= 4		1033035	0		&&			
ANR	1034448	EqualityExpression	MetricsCount == 2		1033035	0		==			
ANR	1034449	Identifier	MetricsCount		1033035	0					
ANR	1034450	PrimaryExpression	2		1033035	1					
ANR	1034451	RelationalExpression	l >= 4		1033035	1		>=			
ANR	1034452	Identifier	l		1033035	0					
ANR	1034453	PrimaryExpression	4		1033035	1					
ANR	1034454	CompoundStatement		233:45:8684:8684	1033035	1					
ANR	1034455	IfStatement	if ( ! bVertical0 )		1033035	0					
ANR	1034456	Condition	! bVertical0	1453:20:53872:53882	1033035	0	True				
ANR	1034457	UnaryOperationExpression	! bVertical0		1033035	0					
ANR	1034458	UnaryOperator	!		1033035	0					
ANR	1034459	Identifier	bVertical0		1033035	1					
ANR	1034460	CompoundStatement		234:33:8719:8719	1033035	1					
ANR	1034461	ExpressionStatement	cr . sb_x = GET_S16_MSB ( data_ptr + 2 ) * scale	1454:20:53907:53950	1033035	0	True				
ANR	1034462	AssignmentExpression	cr . sb_x = GET_S16_MSB ( data_ptr + 2 ) * scale		1033035	0		=			
ANR	1034463	MemberAccess	cr . sb_x		1033035	0					
ANR	1034464	Identifier	cr		1033035	0					
ANR	1034465	Identifier	sb_x		1033035	1					
ANR	1034466	MultiplicativeExpression	GET_S16_MSB ( data_ptr + 2 ) * scale		1033035	1		*			
ANR	1034467	CallExpression	GET_S16_MSB ( data_ptr + 2 )		1033035	0					
ANR	1034468	Callee	GET_S16_MSB		1033035	0					
ANR	1034469	Identifier	GET_S16_MSB		1033035	0					
ANR	1034470	ArgumentList	data_ptr + 2		1033035	1					
ANR	1034471	Argument	data_ptr + 2		1033035	0					
ANR	1034472	AdditiveExpression	data_ptr + 2		1033035	0		+			
ANR	1034473	Identifier	data_ptr		1033035	0					
ANR	1034474	PrimaryExpression	2		1033035	1					
ANR	1034475	Identifier	scale		1033035	1					
ANR	1034476	ExpressionStatement	cr . aw_x = GET_U16_MSB ( data_ptr + 0 ) * scale	1455:20:53972:54015	1033035	1	True				
ANR	1034477	AssignmentExpression	cr . aw_x = GET_U16_MSB ( data_ptr + 0 ) * scale		1033035	0		=			
ANR	1034478	MemberAccess	cr . aw_x		1033035	0					
ANR	1034479	Identifier	cr		1033035	0					
ANR	1034480	Identifier	aw_x		1033035	1					
ANR	1034481	MultiplicativeExpression	GET_U16_MSB ( data_ptr + 0 ) * scale		1033035	1		*			
ANR	1034482	CallExpression	GET_U16_MSB ( data_ptr + 0 )		1033035	0					
ANR	1034483	Callee	GET_U16_MSB		1033035	0					
ANR	1034484	Identifier	GET_U16_MSB		1033035	0					
ANR	1034485	ArgumentList	data_ptr + 0		1033035	1					
ANR	1034486	Argument	data_ptr + 0		1033035	0					
ANR	1034487	AdditiveExpression	data_ptr + 0		1033035	0		+			
ANR	1034488	Identifier	data_ptr		1033035	0					
ANR	1034489	PrimaryExpression	0		1033035	1					
ANR	1034490	Identifier	scale		1033035	1					
ANR	1034491	ExpressionStatement	cr . metrics_type = gs_fapi_metrics_replace	1456:20:54037:54078	1033035	2	True				
ANR	1034492	AssignmentExpression	cr . metrics_type = gs_fapi_metrics_replace		1033035	0		=			
ANR	1034493	MemberAccess	cr . metrics_type		1033035	0					
ANR	1034494	Identifier	cr		1033035	0					
ANR	1034495	Identifier	metrics_type		1033035	1					
ANR	1034496	Identifier	gs_fapi_metrics_replace		1033035	1					
ANR	1034497	ElseStatement	else		1033035	0					
ANR	1034498	IfStatement	if ( l >= 8 )		1033035	0					
ANR	1034499	Condition	l >= 8	1459:21:54133:54138	1033035	0	True				
ANR	1034500	RelationalExpression	l >= 8		1033035	0		>=			
ANR	1034501	Identifier	l		1033035	0					
ANR	1034502	PrimaryExpression	8		1033035	1					
ANR	1034503	CompoundStatement		240:29:8975:8975	1033035	1					
ANR	1034504	ExpressionStatement	cr . sb_y = GET_S16_MSB ( data_ptr + 2 ) * scale	1460:16:54159:54202	1033035	0	True				
ANR	1034505	AssignmentExpression	cr . sb_y = GET_S16_MSB ( data_ptr + 2 ) * scale		1033035	0		=			
ANR	1034506	MemberAccess	cr . sb_y		1033035	0					
ANR	1034507	Identifier	cr		1033035	0					
ANR	1034508	Identifier	sb_y		1033035	1					
ANR	1034509	MultiplicativeExpression	GET_S16_MSB ( data_ptr + 2 ) * scale		1033035	1		*			
ANR	1034510	CallExpression	GET_S16_MSB ( data_ptr + 2 )		1033035	0					
ANR	1034511	Callee	GET_S16_MSB		1033035	0					
ANR	1034512	Identifier	GET_S16_MSB		1033035	0					
ANR	1034513	ArgumentList	data_ptr + 2		1033035	1					
ANR	1034514	Argument	data_ptr + 2		1033035	0					
ANR	1034515	AdditiveExpression	data_ptr + 2		1033035	0		+			
ANR	1034516	Identifier	data_ptr		1033035	0					
ANR	1034517	PrimaryExpression	2		1033035	1					
ANR	1034518	Identifier	scale		1033035	1					
ANR	1034519	ExpressionStatement	cr . aw_y = GET_U16_MSB ( data_ptr + 0 ) * scale	1461:16:54220:54263	1033035	1	True				
ANR	1034520	AssignmentExpression	cr . aw_y = GET_U16_MSB ( data_ptr + 0 ) * scale		1033035	0		=			
ANR	1034521	MemberAccess	cr . aw_y		1033035	0					
ANR	1034522	Identifier	cr		1033035	0					
ANR	1034523	Identifier	aw_y		1033035	1					
ANR	1034524	MultiplicativeExpression	GET_U16_MSB ( data_ptr + 0 ) * scale		1033035	1		*			
ANR	1034525	CallExpression	GET_U16_MSB ( data_ptr + 0 )		1033035	0					
ANR	1034526	Callee	GET_U16_MSB		1033035	0					
ANR	1034527	Identifier	GET_U16_MSB		1033035	0					
ANR	1034528	ArgumentList	data_ptr + 0		1033035	1					
ANR	1034529	Argument	data_ptr + 0		1033035	0					
ANR	1034530	AdditiveExpression	data_ptr + 0		1033035	0		+			
ANR	1034531	Identifier	data_ptr		1033035	0					
ANR	1034532	PrimaryExpression	0		1033035	1					
ANR	1034533	Identifier	scale		1033035	1					
ANR	1034534	ExpressionStatement	cr . sb_x = GET_S16_MSB ( data_ptr + 6 ) * scale	1462:16:54281:54324	1033035	2	True				
ANR	1034535	AssignmentExpression	cr . sb_x = GET_S16_MSB ( data_ptr + 6 ) * scale		1033035	0		=			
ANR	1034536	MemberAccess	cr . sb_x		1033035	0					
ANR	1034537	Identifier	cr		1033035	0					
ANR	1034538	Identifier	sb_x		1033035	1					
ANR	1034539	MultiplicativeExpression	GET_S16_MSB ( data_ptr + 6 ) * scale		1033035	1		*			
ANR	1034540	CallExpression	GET_S16_MSB ( data_ptr + 6 )		1033035	0					
ANR	1034541	Callee	GET_S16_MSB		1033035	0					
ANR	1034542	Identifier	GET_S16_MSB		1033035	0					
ANR	1034543	ArgumentList	data_ptr + 6		1033035	1					
ANR	1034544	Argument	data_ptr + 6		1033035	0					
ANR	1034545	AdditiveExpression	data_ptr + 6		1033035	0		+			
ANR	1034546	Identifier	data_ptr		1033035	0					
ANR	1034547	PrimaryExpression	6		1033035	1					
ANR	1034548	Identifier	scale		1033035	1					
ANR	1034549	ExpressionStatement	cr . aw_x = GET_U16_MSB ( data_ptr + 4 ) * scale	1463:16:54342:54385	1033035	3	True				
ANR	1034550	AssignmentExpression	cr . aw_x = GET_U16_MSB ( data_ptr + 4 ) * scale		1033035	0		=			
ANR	1034551	MemberAccess	cr . aw_x		1033035	0					
ANR	1034552	Identifier	cr		1033035	0					
ANR	1034553	Identifier	aw_x		1033035	1					
ANR	1034554	MultiplicativeExpression	GET_U16_MSB ( data_ptr + 4 ) * scale		1033035	1		*			
ANR	1034555	CallExpression	GET_U16_MSB ( data_ptr + 4 )		1033035	0					
ANR	1034556	Callee	GET_U16_MSB		1033035	0					
ANR	1034557	Identifier	GET_U16_MSB		1033035	0					
ANR	1034558	ArgumentList	data_ptr + 4		1033035	1					
ANR	1034559	Argument	data_ptr + 4		1033035	0					
ANR	1034560	AdditiveExpression	data_ptr + 4		1033035	0		+			
ANR	1034561	Identifier	data_ptr		1033035	0					
ANR	1034562	PrimaryExpression	4		1033035	1					
ANR	1034563	Identifier	scale		1033035	1					
ANR	1034564	ExpressionStatement	cr . metrics_type = gs_fapi_metrics_replace	1464:16:54403:54444	1033035	4	True				
ANR	1034565	AssignmentExpression	cr . metrics_type = gs_fapi_metrics_replace		1033035	0		=			
ANR	1034566	MemberAccess	cr . metrics_type		1033035	0					
ANR	1034567	Identifier	cr		1033035	0					
ANR	1034568	Identifier	metrics_type		1033035	1					
ANR	1034569	Identifier	gs_fapi_metrics_replace		1033035	1					
ANR	1034570	ExpressionStatement	em_scale_x = 1.0	1471:4:54633:54649	1033035	55	True				
ANR	1034571	AssignmentExpression	em_scale_x = 1.0		1033035	0		=			
ANR	1034572	Identifier	em_scale_x		1033035	0					
ANR	1034573	PrimaryExpression	1.0		1033035	1					
ANR	1034574	IfStatement	if ( pfont -> FontType == ft_TrueType )		1033035	56					
ANR	1034575	Condition	pfont -> FontType == ft_TrueType	1472:8:54659:54688	1033035	0	True				
ANR	1034576	EqualityExpression	pfont -> FontType == ft_TrueType		1033035	0		==			
ANR	1034577	PtrMemberAccess	pfont -> FontType		1033035	0					
ANR	1034578	Identifier	pfont		1033035	0					
ANR	1034579	Identifier	FontType		1033035	1					
ANR	1034580	Identifier	ft_TrueType		1033035	1					
ANR	1034581	CompoundStatement		254:8:9535:9585	1033035	1					
ANR	1034582	IdentifierDeclStatement	gs_font_type42 * pfont42 = ( gs_font_type42 * ) pfont ;	1473:8:54701:54751	1033035	0	True				
ANR	1034583	IdentifierDecl	* pfont42 = ( gs_font_type42 * ) pfont		1033035	0					
ANR	1034584	IdentifierDeclType	gs_font_type42 *		1033035	0					
ANR	1034585	Identifier	pfont42		1033035	1					
ANR	1034586	AssignmentExpression	* pfont42 = ( gs_font_type42 * ) pfont		1033035	2		=			
ANR	1034587	Identifier	pfont42		1033035	0					
ANR	1034588	CastExpression	( gs_font_type42 * ) pfont		1033035	1					
ANR	1034589	CastTarget	gs_font_type42 *		1033035	0					
ANR	1034590	Identifier	pfont		1033035	1					
ANR	1034591	ExpressionStatement	em_scale_x = pfont42 -> data . unitsPerEm	1474:8:54761:54798	1033035	1	True				
ANR	1034592	AssignmentExpression	em_scale_x = pfont42 -> data . unitsPerEm		1033035	0		=			
ANR	1034593	Identifier	em_scale_x		1033035	0					
ANR	1034594	MemberAccess	pfont42 -> data . unitsPerEm		1033035	1					
ANR	1034595	PtrMemberAccess	pfont42 -> data		1033035	0					
ANR	1034596	Identifier	pfont42		1033035	0					
ANR	1034597	Identifier	data		1033035	1					
ANR	1034598	Identifier	unitsPerEm		1033035	1					
ANR	1034599	IfStatement	if ( cr . metrics_type != gs_fapi_metrics_replace && bVertical )		1033035	57					
ANR	1034600	Condition	cr . metrics_type != gs_fapi_metrics_replace && bVertical	1477:8:54815:54869	1033035	0	True				
ANR	1034601	AndExpression	cr . metrics_type != gs_fapi_metrics_replace && bVertical		1033035	0		&&			
ANR	1034602	EqualityExpression	cr . metrics_type != gs_fapi_metrics_replace		1033035	0		!=			
ANR	1034603	MemberAccess	cr . metrics_type		1033035	0					
ANR	1034604	Identifier	cr		1033035	0					
ANR	1034605	Identifier	metrics_type		1033035	1					
ANR	1034606	Identifier	gs_fapi_metrics_replace		1033035	1					
ANR	1034607	Identifier	bVertical		1033035	1					
ANR	1034608	CompoundStatement		259:8:9716:9729	1033035	1					
ANR	1034609	IdentifierDeclStatement	double pwv [ 4 ] ;	1478:8:54882:54895	1033035	0	True				
ANR	1034610	IdentifierDecl	pwv [ 4 ]		1033035	0					
ANR	1034611	IdentifierDeclType	double [ 4 ]		1033035	0					
ANR	1034612	Identifier	pwv		1033035	1					
ANR	1034613	PrimaryExpression	4		1033035	2					
ANR	1034614	ExpressionStatement	"code = I -> ff . fapi_get_metrics ( & I -> ff , & enc_char_name_string , index , pwv , bVertical )"	1480:8:54906:55036	1033035	1	True				
ANR	1034615	AssignmentExpression	"code = I -> ff . fapi_get_metrics ( & I -> ff , & enc_char_name_string , index , pwv , bVertical )"		1033035	0		=			
ANR	1034616	Identifier	code		1033035	0					
ANR	1034617	CallExpression	"I -> ff . fapi_get_metrics ( & I -> ff , & enc_char_name_string , index , pwv , bVertical )"		1033035	1					
ANR	1034618	Callee	I -> ff . fapi_get_metrics		1033035	0					
ANR	1034619	MemberAccess	I -> ff . fapi_get_metrics		1033035	0					
ANR	1034620	PtrMemberAccess	I -> ff		1033035	0					
ANR	1034621	Identifier	I		1033035	0					
ANR	1034622	Identifier	ff		1033035	1					
ANR	1034623	Identifier	fapi_get_metrics		1033035	1					
ANR	1034624	ArgumentList	& I -> ff		1033035	1					
ANR	1034625	Argument	& I -> ff		1033035	0					
ANR	1034626	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1034627	UnaryOperator	&		1033035	0					
ANR	1034628	PtrMemberAccess	I -> ff		1033035	1					
ANR	1034629	Identifier	I		1033035	0					
ANR	1034630	Identifier	ff		1033035	1					
ANR	1034631	Argument	& enc_char_name_string		1033035	1					
ANR	1034632	UnaryOperationExpression	& enc_char_name_string		1033035	0					
ANR	1034633	UnaryOperator	&		1033035	0					
ANR	1034634	Identifier	enc_char_name_string		1033035	1					
ANR	1034635	Argument	index		1033035	2					
ANR	1034636	Identifier	index		1033035	0					
ANR	1034637	Argument	pwv		1033035	3					
ANR	1034638	Identifier	pwv		1033035	0					
ANR	1034639	Argument	bVertical		1033035	4					
ANR	1034640	Identifier	bVertical		1033035	0					
ANR	1034641	IfStatement	if ( code < 0 )		1033035	2					
ANR	1034642	Condition	code < 0	1483:12:55050:55057	1033035	0	True				
ANR	1034643	RelationalExpression	code < 0		1033035	0		<			
ANR	1034644	Identifier	code		1033035	0					
ANR	1034645	PrimaryExpression	0		1033035	1					
ANR	1034646	ReturnStatement	return code ;	1484:12:55072:55083	1033035	1	True				
ANR	1034647	Identifier	code		1033035	0					
ANR	1034648	IfStatement	if ( code == 0 )		1033035	3					
ANR	1034649	Condition	code == 0	1485:12:55097:55105	1033035	0	True				
ANR	1034650	EqualityExpression	code == 0		1033035	0		==			
ANR	1034651	Identifier	code		1033035	0					
ANR	1034652	PrimaryExpression	0		1033035	1					
ANR	1034653	CompoundStatement		266:42:9961:9961	1033035	1					
ANR	1034654	IfStatement	if ( bCID && ( ! bIsType1GlyphData && font_file_path ) )		1033035	0					
ANR	1034655	Condition	bCID && ( ! bIsType1GlyphData && font_file_path )	1486:16:55145:55190	1033035	0	True				
ANR	1034656	AndExpression	bCID && ( ! bIsType1GlyphData && font_file_path )		1033035	0		&&			
ANR	1034657	Identifier	bCID		1033035	0					
ANR	1034658	AndExpression	! bIsType1GlyphData && font_file_path		1033035	1		&&			
ANR	1034659	UnaryOperationExpression	! bIsType1GlyphData		1033035	0					
ANR	1034660	UnaryOperator	!		1033035	0					
ANR	1034661	Identifier	bIsType1GlyphData		1033035	1					
ANR	1034662	Identifier	font_file_path		1033035	1					
ANR	1034663	CompoundStatement		267:64:10027:10027	1033035	1					
ANR	1034664	ExpressionStatement	cr . sb_x = ( fracint ) ( fapi_round ( ( sbw [ 2 ] / 2 ) * scale ) * em_scale_x )	1487:16:55211:55286	1033035	0	True				
ANR	1034665	AssignmentExpression	cr . sb_x = ( fracint ) ( fapi_round ( ( sbw [ 2 ] / 2 ) * scale ) * em_scale_x )		1033035	0		=			
ANR	1034666	MemberAccess	cr . sb_x		1033035	0					
ANR	1034667	Identifier	cr		1033035	0					
ANR	1034668	Identifier	sb_x		1033035	1					
ANR	1034669	CastExpression	( fracint ) ( fapi_round ( ( sbw [ 2 ] / 2 ) * scale ) * em_scale_x )		1033035	1					
ANR	1034670	CastTarget	fracint		1033035	0					
ANR	1034671	MultiplicativeExpression	fapi_round ( ( sbw [ 2 ] / 2 ) * scale ) * em_scale_x		1033035	1		*			
ANR	1034672	CallExpression	fapi_round ( ( sbw [ 2 ] / 2 ) * scale )		1033035	0					
ANR	1034673	Callee	fapi_round		1033035	0					
ANR	1034674	Identifier	fapi_round		1033035	0					
ANR	1034675	ArgumentList	( sbw [ 2 ] / 2 ) * scale		1033035	1					
ANR	1034676	Argument	( sbw [ 2 ] / 2 ) * scale		1033035	0					
ANR	1034677	MultiplicativeExpression	( sbw [ 2 ] / 2 ) * scale		1033035	0		*			
ANR	1034678	MultiplicativeExpression	sbw [ 2 ] / 2		1033035	0		/			
ANR	1034679	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1034680	Identifier	sbw		1033035	0					
ANR	1034681	PrimaryExpression	2		1033035	1					
ANR	1034682	PrimaryExpression	2		1033035	1					
ANR	1034683	Identifier	scale		1033035	1					
ANR	1034684	Identifier	em_scale_x		1033035	1					
ANR	1034685	ExpressionStatement	cr . sb_y = ( fracint ) ( fapi_round ( pbfont -> FontBBox . q . y * scale ) * em_scale_x )	1488:16:55304:55379	1033035	1	True				
ANR	1034686	AssignmentExpression	cr . sb_y = ( fracint ) ( fapi_round ( pbfont -> FontBBox . q . y * scale ) * em_scale_x )		1033035	0		=			
ANR	1034687	MemberAccess	cr . sb_y		1033035	0					
ANR	1034688	Identifier	cr		1033035	0					
ANR	1034689	Identifier	sb_y		1033035	1					
ANR	1034690	CastExpression	( fracint ) ( fapi_round ( pbfont -> FontBBox . q . y * scale ) * em_scale_x )		1033035	1					
ANR	1034691	CastTarget	fracint		1033035	0					
ANR	1034692	MultiplicativeExpression	fapi_round ( pbfont -> FontBBox . q . y * scale ) * em_scale_x		1033035	1		*			
ANR	1034693	CallExpression	fapi_round ( pbfont -> FontBBox . q . y * scale )		1033035	0					
ANR	1034694	Callee	fapi_round		1033035	0					
ANR	1034695	Identifier	fapi_round		1033035	0					
ANR	1034696	ArgumentList	pbfont -> FontBBox . q . y * scale		1033035	1					
ANR	1034697	Argument	pbfont -> FontBBox . q . y * scale		1033035	0					
ANR	1034698	MultiplicativeExpression	pbfont -> FontBBox . q . y * scale		1033035	0		*			
ANR	1034699	MemberAccess	pbfont -> FontBBox . q . y		1033035	0					
ANR	1034700	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1034701	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1034702	Identifier	pbfont		1033035	0					
ANR	1034703	Identifier	FontBBox		1033035	1					
ANR	1034704	Identifier	q		1033035	1					
ANR	1034705	Identifier	y		1033035	1					
ANR	1034706	Identifier	scale		1033035	1					
ANR	1034707	Identifier	em_scale_x		1033035	1					
ANR	1034708	ExpressionStatement	cr . aw_y = ( fracint ) ( fapi_round ( - pbfont -> FontBBox . q . x * scale ) * em_scale_x )	1489:16:55397:55472	1033035	2	True				
ANR	1034709	AssignmentExpression	cr . aw_y = ( fracint ) ( fapi_round ( - pbfont -> FontBBox . q . x * scale ) * em_scale_x )		1033035	0		=			
ANR	1034710	MemberAccess	cr . aw_y		1033035	0					
ANR	1034711	Identifier	cr		1033035	0					
ANR	1034712	Identifier	aw_y		1033035	1					
ANR	1034713	CastExpression	( fracint ) ( fapi_round ( - pbfont -> FontBBox . q . x * scale ) * em_scale_x )		1033035	1					
ANR	1034714	CastTarget	fracint		1033035	0					
ANR	1034715	MultiplicativeExpression	fapi_round ( - pbfont -> FontBBox . q . x * scale ) * em_scale_x		1033035	1		*			
ANR	1034716	CallExpression	fapi_round ( - pbfont -> FontBBox . q . x * scale )		1033035	0					
ANR	1034717	Callee	fapi_round		1033035	0					
ANR	1034718	Identifier	fapi_round		1033035	0					
ANR	1034719	ArgumentList	- pbfont -> FontBBox . q . x * scale		1033035	1					
ANR	1034720	Argument	- pbfont -> FontBBox . q . x * scale		1033035	0					
ANR	1034721	MultiplicativeExpression	- pbfont -> FontBBox . q . x * scale		1033035	0		*			
ANR	1034722	UnaryOperationExpression	- pbfont -> FontBBox . q . x		1033035	0					
ANR	1034723	UnaryOperator	-		1033035	0					
ANR	1034724	MemberAccess	pbfont -> FontBBox . q . x		1033035	1					
ANR	1034725	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1034726	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1034727	Identifier	pbfont		1033035	0					
ANR	1034728	Identifier	FontBBox		1033035	1					
ANR	1034729	Identifier	q		1033035	1					
ANR	1034730	Identifier	x		1033035	1					
ANR	1034731	Identifier	scale		1033035	1					
ANR	1034732	Identifier	em_scale_x		1033035	1					
ANR	1034733	ExpressionStatement	cr . metrics_scale = 1	1490:16:55505:55525	1033035	3	True				
ANR	1034734	AssignmentExpression	cr . metrics_scale = 1		1033035	0		=			
ANR	1034735	MemberAccess	cr . metrics_scale		1033035	0					
ANR	1034736	Identifier	cr		1033035	0					
ANR	1034737	Identifier	metrics_scale		1033035	1					
ANR	1034738	PrimaryExpression	1		1033035	1					
ANR	1034739	ExpressionStatement	cr . metrics_type = gs_fapi_metrics_replace	1491:16:55543:55584	1033035	4	True				
ANR	1034740	AssignmentExpression	cr . metrics_type = gs_fapi_metrics_replace		1033035	0		=			
ANR	1034741	MemberAccess	cr . metrics_type		1033035	0					
ANR	1034742	Identifier	cr		1033035	0					
ANR	1034743	Identifier	metrics_type		1033035	1					
ANR	1034744	Identifier	gs_fapi_metrics_replace		1033035	1					
ANR	1034745	ExpressionStatement	sbw [ 0 ] = sbw [ 2 ] / 2	1492:16:55602:55621	1033035	5	True				
ANR	1034746	AssignmentExpression	sbw [ 0 ] = sbw [ 2 ] / 2		1033035	0		=			
ANR	1034747	ArrayIndexing	sbw [ 0 ]		1033035	0					
ANR	1034748	Identifier	sbw		1033035	0					
ANR	1034749	PrimaryExpression	0		1033035	1					
ANR	1034750	MultiplicativeExpression	sbw [ 2 ] / 2		1033035	1		/			
ANR	1034751	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1034752	Identifier	sbw		1033035	0					
ANR	1034753	PrimaryExpression	2		1033035	1					
ANR	1034754	PrimaryExpression	2		1033035	1					
ANR	1034755	ExpressionStatement	sbw [ 1 ] = pbfont -> FontBBox . q . y	1493:16:55639:55668	1033035	6	True				
ANR	1034756	AssignmentExpression	sbw [ 1 ] = pbfont -> FontBBox . q . y		1033035	0		=			
ANR	1034757	ArrayIndexing	sbw [ 1 ]		1033035	0					
ANR	1034758	Identifier	sbw		1033035	0					
ANR	1034759	PrimaryExpression	1		1033035	1					
ANR	1034760	MemberAccess	pbfont -> FontBBox . q . y		1033035	1					
ANR	1034761	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1034762	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1034763	Identifier	pbfont		1033035	0					
ANR	1034764	Identifier	FontBBox		1033035	1					
ANR	1034765	Identifier	q		1033035	1					
ANR	1034766	Identifier	y		1033035	1					
ANR	1034767	ExpressionStatement	sbw [ 2 ] = 0	1494:16:55686:55696	1033035	7	True				
ANR	1034768	AssignmentExpression	sbw [ 2 ] = 0		1033035	0		=			
ANR	1034769	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1034770	Identifier	sbw		1033035	0					
ANR	1034771	PrimaryExpression	2		1033035	1					
ANR	1034772	PrimaryExpression	0		1033035	1					
ANR	1034773	ExpressionStatement	sbw [ 3 ] = - pbfont -> FontBBox . q . x	1495:16:55714:55744	1033035	8	True				
ANR	1034774	AssignmentExpression	sbw [ 3 ] = - pbfont -> FontBBox . q . x		1033035	0		=			
ANR	1034775	ArrayIndexing	sbw [ 3 ]		1033035	0					
ANR	1034776	Identifier	sbw		1033035	0					
ANR	1034777	PrimaryExpression	3		1033035	1					
ANR	1034778	UnaryOperationExpression	- pbfont -> FontBBox . q . x		1033035	1					
ANR	1034779	UnaryOperator	-		1033035	0					
ANR	1034780	MemberAccess	pbfont -> FontBBox . q . x		1033035	1					
ANR	1034781	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1034782	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1034783	Identifier	pbfont		1033035	0					
ANR	1034784	Identifier	FontBBox		1033035	1					
ANR	1034785	Identifier	q		1033035	1					
ANR	1034786	Identifier	x		1033035	1					
ANR	1034787	ExpressionStatement	sbw_state = SBW_DONE	1496:16:55774:55794	1033035	9	True				
ANR	1034788	AssignmentExpression	sbw_state = SBW_DONE		1033035	0		=			
ANR	1034789	Identifier	sbw_state		1033035	0					
ANR	1034790	Identifier	SBW_DONE		1033035	1					
ANR	1034791	ElseStatement	else		1033035	0					
ANR	1034792	CompoundStatement		279:17:10661:10661	1033035	0					
ANR	1034793	ExpressionStatement	bVertical = false	1499:16:55845:55862	1033035	0	True				
ANR	1034794	AssignmentExpression	bVertical = false		1033035	0		=			
ANR	1034795	Identifier	bVertical		1033035	0					
ANR	1034796	Identifier	false		1033035	1					
ANR	1034797	ElseStatement	else		1033035	0					
ANR	1034798	CompoundStatement		283:13:10735:10735	1033035	0					
ANR	1034799	ExpressionStatement	cr . sb_x = ( fracint ) ( fapi_round ( pwv [ 2 ] * scale ) * em_scale_x )	1503:12:55915:55975	1033035	0	True				
ANR	1034800	AssignmentExpression	cr . sb_x = ( fracint ) ( fapi_round ( pwv [ 2 ] * scale ) * em_scale_x )		1033035	0		=			
ANR	1034801	MemberAccess	cr . sb_x		1033035	0					
ANR	1034802	Identifier	cr		1033035	0					
ANR	1034803	Identifier	sb_x		1033035	1					
ANR	1034804	CastExpression	( fracint ) ( fapi_round ( pwv [ 2 ] * scale ) * em_scale_x )		1033035	1					
ANR	1034805	CastTarget	fracint		1033035	0					
ANR	1034806	MultiplicativeExpression	fapi_round ( pwv [ 2 ] * scale ) * em_scale_x		1033035	1		*			
ANR	1034807	CallExpression	fapi_round ( pwv [ 2 ] * scale )		1033035	0					
ANR	1034808	Callee	fapi_round		1033035	0					
ANR	1034809	Identifier	fapi_round		1033035	0					
ANR	1034810	ArgumentList	pwv [ 2 ] * scale		1033035	1					
ANR	1034811	Argument	pwv [ 2 ] * scale		1033035	0					
ANR	1034812	MultiplicativeExpression	pwv [ 2 ] * scale		1033035	0		*			
ANR	1034813	ArrayIndexing	pwv [ 2 ]		1033035	0					
ANR	1034814	Identifier	pwv		1033035	0					
ANR	1034815	PrimaryExpression	2		1033035	1					
ANR	1034816	Identifier	scale		1033035	1					
ANR	1034817	Identifier	em_scale_x		1033035	1					
ANR	1034818	ExpressionStatement	cr . sb_y = ( fracint ) ( fapi_round ( pwv [ 3 ] * scale ) * em_scale_x )	1504:12:55989:56049	1033035	1	True				
ANR	1034819	AssignmentExpression	cr . sb_y = ( fracint ) ( fapi_round ( pwv [ 3 ] * scale ) * em_scale_x )		1033035	0		=			
ANR	1034820	MemberAccess	cr . sb_y		1033035	0					
ANR	1034821	Identifier	cr		1033035	0					
ANR	1034822	Identifier	sb_y		1033035	1					
ANR	1034823	CastExpression	( fracint ) ( fapi_round ( pwv [ 3 ] * scale ) * em_scale_x )		1033035	1					
ANR	1034824	CastTarget	fracint		1033035	0					
ANR	1034825	MultiplicativeExpression	fapi_round ( pwv [ 3 ] * scale ) * em_scale_x		1033035	1		*			
ANR	1034826	CallExpression	fapi_round ( pwv [ 3 ] * scale )		1033035	0					
ANR	1034827	Callee	fapi_round		1033035	0					
ANR	1034828	Identifier	fapi_round		1033035	0					
ANR	1034829	ArgumentList	pwv [ 3 ] * scale		1033035	1					
ANR	1034830	Argument	pwv [ 3 ] * scale		1033035	0					
ANR	1034831	MultiplicativeExpression	pwv [ 3 ] * scale		1033035	0		*			
ANR	1034832	ArrayIndexing	pwv [ 3 ]		1033035	0					
ANR	1034833	Identifier	pwv		1033035	0					
ANR	1034834	PrimaryExpression	3		1033035	1					
ANR	1034835	Identifier	scale		1033035	1					
ANR	1034836	Identifier	em_scale_x		1033035	1					
ANR	1034837	ExpressionStatement	cr . aw_x = ( fracint ) ( fapi_round ( pwv [ 0 ] * scale ) * em_scale_x )	1505:12:56063:56123	1033035	2	True				
ANR	1034838	AssignmentExpression	cr . aw_x = ( fracint ) ( fapi_round ( pwv [ 0 ] * scale ) * em_scale_x )		1033035	0		=			
ANR	1034839	MemberAccess	cr . aw_x		1033035	0					
ANR	1034840	Identifier	cr		1033035	0					
ANR	1034841	Identifier	aw_x		1033035	1					
ANR	1034842	CastExpression	( fracint ) ( fapi_round ( pwv [ 0 ] * scale ) * em_scale_x )		1033035	1					
ANR	1034843	CastTarget	fracint		1033035	0					
ANR	1034844	MultiplicativeExpression	fapi_round ( pwv [ 0 ] * scale ) * em_scale_x		1033035	1		*			
ANR	1034845	CallExpression	fapi_round ( pwv [ 0 ] * scale )		1033035	0					
ANR	1034846	Callee	fapi_round		1033035	0					
ANR	1034847	Identifier	fapi_round		1033035	0					
ANR	1034848	ArgumentList	pwv [ 0 ] * scale		1033035	1					
ANR	1034849	Argument	pwv [ 0 ] * scale		1033035	0					
ANR	1034850	MultiplicativeExpression	pwv [ 0 ] * scale		1033035	0		*			
ANR	1034851	ArrayIndexing	pwv [ 0 ]		1033035	0					
ANR	1034852	Identifier	pwv		1033035	0					
ANR	1034853	PrimaryExpression	0		1033035	1					
ANR	1034854	Identifier	scale		1033035	1					
ANR	1034855	Identifier	em_scale_x		1033035	1					
ANR	1034856	ExpressionStatement	cr . aw_y = ( fracint ) ( fapi_round ( pwv [ 1 ] * scale ) * em_scale_x )	1506:12:56137:56197	1033035	3	True				
ANR	1034857	AssignmentExpression	cr . aw_y = ( fracint ) ( fapi_round ( pwv [ 1 ] * scale ) * em_scale_x )		1033035	0		=			
ANR	1034858	MemberAccess	cr . aw_y		1033035	0					
ANR	1034859	Identifier	cr		1033035	0					
ANR	1034860	Identifier	aw_y		1033035	1					
ANR	1034861	CastExpression	( fracint ) ( fapi_round ( pwv [ 1 ] * scale ) * em_scale_x )		1033035	1					
ANR	1034862	CastTarget	fracint		1033035	0					
ANR	1034863	MultiplicativeExpression	fapi_round ( pwv [ 1 ] * scale ) * em_scale_x		1033035	1		*			
ANR	1034864	CallExpression	fapi_round ( pwv [ 1 ] * scale )		1033035	0					
ANR	1034865	Callee	fapi_round		1033035	0					
ANR	1034866	Identifier	fapi_round		1033035	0					
ANR	1034867	ArgumentList	pwv [ 1 ] * scale		1033035	1					
ANR	1034868	Argument	pwv [ 1 ] * scale		1033035	0					
ANR	1034869	MultiplicativeExpression	pwv [ 1 ] * scale		1033035	0		*			
ANR	1034870	ArrayIndexing	pwv [ 1 ]		1033035	0					
ANR	1034871	Identifier	pwv		1033035	0					
ANR	1034872	PrimaryExpression	1		1033035	1					
ANR	1034873	Identifier	scale		1033035	1					
ANR	1034874	Identifier	em_scale_x		1033035	1					
ANR	1034875	ExpressionStatement	cr . metrics_scale = ( bIsType1GlyphData ? 1000 : 1 )	1507:12:56211:56260	1033035	4	True				
ANR	1034876	AssignmentExpression	cr . metrics_scale = ( bIsType1GlyphData ? 1000 : 1 )		1033035	0		=			
ANR	1034877	MemberAccess	cr . metrics_scale		1033035	0					
ANR	1034878	Identifier	cr		1033035	0					
ANR	1034879	Identifier	metrics_scale		1033035	1					
ANR	1034880	ConditionalExpression	bIsType1GlyphData ? 1000 : 1		1033035	1					
ANR	1034881	Condition	bIsType1GlyphData		1033035	0					
ANR	1034882	Identifier	bIsType1GlyphData		1033035	0					
ANR	1034883	PrimaryExpression	1000		1033035	1					
ANR	1034884	PrimaryExpression	1		1033035	2					
ANR	1034885	ExpressionStatement	cr . metrics_type = ( code == 2 ? gs_fapi_metrics_replace : gs_fapi_metrics_replace_width )	1508:12:56274:56425	1033035	5	True				
ANR	1034886	AssignmentExpression	cr . metrics_type = ( code == 2 ? gs_fapi_metrics_replace : gs_fapi_metrics_replace_width )		1033035	0		=			
ANR	1034887	MemberAccess	cr . metrics_type		1033035	0					
ANR	1034888	Identifier	cr		1033035	0					
ANR	1034889	Identifier	metrics_type		1033035	1					
ANR	1034890	ConditionalExpression	code == 2 ? gs_fapi_metrics_replace : gs_fapi_metrics_replace_width		1033035	1					
ANR	1034891	Condition	code == 2		1033035	0					
ANR	1034892	EqualityExpression	code == 2		1033035	0		==			
ANR	1034893	Identifier	code		1033035	0					
ANR	1034894	PrimaryExpression	2		1033035	1					
ANR	1034895	Identifier	gs_fapi_metrics_replace		1033035	1					
ANR	1034896	Identifier	gs_fapi_metrics_replace_width		1033035	2					
ANR	1034897	ExpressionStatement	sbw [ 0 ] = pwv [ 2 ]	1510:12:56439:56454	1033035	6	True				
ANR	1034898	AssignmentExpression	sbw [ 0 ] = pwv [ 2 ]		1033035	0		=			
ANR	1034899	ArrayIndexing	sbw [ 0 ]		1033035	0					
ANR	1034900	Identifier	sbw		1033035	0					
ANR	1034901	PrimaryExpression	0		1033035	1					
ANR	1034902	ArrayIndexing	pwv [ 2 ]		1033035	1					
ANR	1034903	Identifier	pwv		1033035	0					
ANR	1034904	PrimaryExpression	2		1033035	1					
ANR	1034905	ExpressionStatement	sbw [ 1 ] = pwv [ 3 ]	1511:12:56468:56483	1033035	7	True				
ANR	1034906	AssignmentExpression	sbw [ 1 ] = pwv [ 3 ]		1033035	0		=			
ANR	1034907	ArrayIndexing	sbw [ 1 ]		1033035	0					
ANR	1034908	Identifier	sbw		1033035	0					
ANR	1034909	PrimaryExpression	1		1033035	1					
ANR	1034910	ArrayIndexing	pwv [ 3 ]		1033035	1					
ANR	1034911	Identifier	pwv		1033035	0					
ANR	1034912	PrimaryExpression	3		1033035	1					
ANR	1034913	ExpressionStatement	sbw [ 2 ] = pwv [ 0 ]	1512:12:56497:56512	1033035	8	True				
ANR	1034914	AssignmentExpression	sbw [ 2 ] = pwv [ 0 ]		1033035	0		=			
ANR	1034915	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1034916	Identifier	sbw		1033035	0					
ANR	1034917	PrimaryExpression	2		1033035	1					
ANR	1034918	ArrayIndexing	pwv [ 0 ]		1033035	1					
ANR	1034919	Identifier	pwv		1033035	0					
ANR	1034920	PrimaryExpression	0		1033035	1					
ANR	1034921	ExpressionStatement	sbw [ 3 ] = pwv [ 1 ]	1513:12:56526:56541	1033035	9	True				
ANR	1034922	AssignmentExpression	sbw [ 3 ] = pwv [ 1 ]		1033035	0		=			
ANR	1034923	ArrayIndexing	sbw [ 3 ]		1033035	0					
ANR	1034924	Identifier	sbw		1033035	0					
ANR	1034925	PrimaryExpression	3		1033035	1					
ANR	1034926	ArrayIndexing	pwv [ 1 ]		1033035	1					
ANR	1034927	Identifier	pwv		1033035	0					
ANR	1034928	PrimaryExpression	1		1033035	1					
ANR	1034929	ExpressionStatement	sbw_state = SBW_DONE	1514:12:56555:56575	1033035	10	True				
ANR	1034930	AssignmentExpression	sbw_state = SBW_DONE		1033035	0		=			
ANR	1034931	Identifier	sbw_state		1033035	0					
ANR	1034932	Identifier	SBW_DONE		1033035	1					
ANR	1034933	IfStatement	if ( cr . metrics_type == gs_fapi_metrics_notdef && ! bVertical )		1033035	58					
ANR	1034934	Condition	cr . metrics_type == gs_fapi_metrics_notdef && ! bVertical	1517:8:56601:56655	1033035	0	True				
ANR	1034935	AndExpression	cr . metrics_type == gs_fapi_metrics_notdef && ! bVertical		1033035	0		&&			
ANR	1034936	EqualityExpression	cr . metrics_type == gs_fapi_metrics_notdef		1033035	0		==			
ANR	1034937	MemberAccess	cr . metrics_type		1033035	0					
ANR	1034938	Identifier	cr		1033035	0					
ANR	1034939	Identifier	metrics_type		1033035	1					
ANR	1034940	Identifier	gs_fapi_metrics_notdef		1033035	1					
ANR	1034941	UnaryOperationExpression	! bVertical		1033035	1					
ANR	1034942	UnaryOperator	!		1033035	0					
ANR	1034943	Identifier	bVertical		1033035	1					
ANR	1034944	CompoundStatement		298:65:11492:11492	1033035	1					
ANR	1034945	ExpressionStatement	"code = I -> ff . fapi_get_metrics ( & I -> ff , & enc_char_name_string , index , sbw , bVertical )"	1518:8:56668:56798	1033035	0	True				
ANR	1034946	AssignmentExpression	"code = I -> ff . fapi_get_metrics ( & I -> ff , & enc_char_name_string , index , sbw , bVertical )"		1033035	0		=			
ANR	1034947	Identifier	code		1033035	0					
ANR	1034948	CallExpression	"I -> ff . fapi_get_metrics ( & I -> ff , & enc_char_name_string , index , sbw , bVertical )"		1033035	1					
ANR	1034949	Callee	I -> ff . fapi_get_metrics		1033035	0					
ANR	1034950	MemberAccess	I -> ff . fapi_get_metrics		1033035	0					
ANR	1034951	PtrMemberAccess	I -> ff		1033035	0					
ANR	1034952	Identifier	I		1033035	0					
ANR	1034953	Identifier	ff		1033035	1					
ANR	1034954	Identifier	fapi_get_metrics		1033035	1					
ANR	1034955	ArgumentList	& I -> ff		1033035	1					
ANR	1034956	Argument	& I -> ff		1033035	0					
ANR	1034957	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1034958	UnaryOperator	&		1033035	0					
ANR	1034959	PtrMemberAccess	I -> ff		1033035	1					
ANR	1034960	Identifier	I		1033035	0					
ANR	1034961	Identifier	ff		1033035	1					
ANR	1034962	Argument	& enc_char_name_string		1033035	1					
ANR	1034963	UnaryOperationExpression	& enc_char_name_string		1033035	0					
ANR	1034964	UnaryOperator	&		1033035	0					
ANR	1034965	Identifier	enc_char_name_string		1033035	1					
ANR	1034966	Argument	index		1033035	2					
ANR	1034967	Identifier	index		1033035	0					
ANR	1034968	Argument	sbw		1033035	3					
ANR	1034969	Identifier	sbw		1033035	0					
ANR	1034970	Argument	bVertical		1033035	4					
ANR	1034971	Identifier	bVertical		1033035	0					
ANR	1034972	IfStatement	if ( code < 0 )		1033035	1					
ANR	1034973	Condition	code < 0	1521:12:56812:56819	1033035	0	True				
ANR	1034974	RelationalExpression	code < 0		1033035	0		<			
ANR	1034975	Identifier	code		1033035	0					
ANR	1034976	PrimaryExpression	0		1033035	1					
ANR	1034977	ReturnStatement	return code ;	1522:12:56834:56845	1033035	1	True				
ANR	1034978	Identifier	code		1033035	0					
ANR	1034979	IfStatement	if ( code == 0 )		1033035	2					
ANR	1034980	Condition	code == 0	1523:12:56859:56867	1033035	0	True				
ANR	1034981	EqualityExpression	code == 0		1033035	0		==			
ANR	1034982	Identifier	code		1033035	0					
ANR	1034983	PrimaryExpression	0		1033035	1					
ANR	1034984	CompoundStatement		304:42:11723:11723	1033035	1					
ANR	1034985	ExpressionStatement	sbw_state = SBW_FROM_RENDERER	1524:12:56903:56932	1033035	0	True				
ANR	1034986	AssignmentExpression	sbw_state = SBW_FROM_RENDERER		1033035	0		=			
ANR	1034987	Identifier	sbw_state		1033035	0					
ANR	1034988	Identifier	SBW_FROM_RENDERER		1033035	1					
ANR	1034989	IfStatement	if ( pbfont -> FontType == 2 )		1033035	1					
ANR	1034990	Condition	pbfont -> FontType == 2	1525:16:56950:56970	1033035	0	True				
ANR	1034991	EqualityExpression	pbfont -> FontType == 2		1033035	0		==			
ANR	1034992	PtrMemberAccess	pbfont -> FontType		1033035	0					
ANR	1034993	Identifier	pbfont		1033035	0					
ANR	1034994	Identifier	FontType		1033035	1					
ANR	1034995	PrimaryExpression	2		1033035	1					
ANR	1034996	CompoundStatement		307:16:11825:11873	1033035	1					
ANR	1034997	IdentifierDeclStatement	gs_font_type1 * pfont1 = ( gs_font_type1 * ) pbfont ;	1526:16:56991:57039	1033035	0	True				
ANR	1034998	IdentifierDecl	* pfont1 = ( gs_font_type1 * ) pbfont		1033035	0					
ANR	1034999	IdentifierDeclType	gs_font_type1 *		1033035	0					
ANR	1035000	Identifier	pfont1		1033035	1					
ANR	1035001	AssignmentExpression	* pfont1 = ( gs_font_type1 * ) pbfont		1033035	2		=			
ANR	1035002	Identifier	pfont1		1033035	0					
ANR	1035003	CastExpression	( gs_font_type1 * ) pbfont		1033035	1					
ANR	1035004	CastTarget	gs_font_type1 *		1033035	0					
ANR	1035005	Identifier	pbfont		1033035	1					
ANR	1035006	ExpressionStatement	"cr . aw_x = export_shift ( pfont1 -> data . defaultWidthX , _fixed_shift - I -> frac_shift )"	1528:16:57058:57191	1033035	1	True				
ANR	1035007	AssignmentExpression	"cr . aw_x = export_shift ( pfont1 -> data . defaultWidthX , _fixed_shift - I -> frac_shift )"		1033035	0		=			
ANR	1035008	MemberAccess	cr . aw_x		1033035	0					
ANR	1035009	Identifier	cr		1033035	0					
ANR	1035010	Identifier	aw_x		1033035	1					
ANR	1035011	CallExpression	"export_shift ( pfont1 -> data . defaultWidthX , _fixed_shift - I -> frac_shift )"		1033035	1					
ANR	1035012	Callee	export_shift		1033035	0					
ANR	1035013	Identifier	export_shift		1033035	0					
ANR	1035014	ArgumentList	pfont1 -> data . defaultWidthX		1033035	1					
ANR	1035015	Argument	pfont1 -> data . defaultWidthX		1033035	0					
ANR	1035016	MemberAccess	pfont1 -> data . defaultWidthX		1033035	0					
ANR	1035017	PtrMemberAccess	pfont1 -> data		1033035	0					
ANR	1035018	Identifier	pfont1		1033035	0					
ANR	1035019	Identifier	data		1033035	1					
ANR	1035020	Identifier	defaultWidthX		1033035	1					
ANR	1035021	Argument	_fixed_shift - I -> frac_shift		1033035	1					
ANR	1035022	AdditiveExpression	_fixed_shift - I -> frac_shift		1033035	0		-			
ANR	1035023	Identifier	_fixed_shift		1033035	0					
ANR	1035024	PtrMemberAccess	I -> frac_shift		1033035	1					
ANR	1035025	Identifier	I		1033035	0					
ANR	1035026	Identifier	frac_shift		1033035	1					
ANR	1035027	ExpressionStatement	cr . metrics_scale = 1000	1531:16:57209:57232	1033035	2	True				
ANR	1035028	AssignmentExpression	cr . metrics_scale = 1000		1033035	0		=			
ANR	1035029	MemberAccess	cr . metrics_scale		1033035	0					
ANR	1035030	Identifier	cr		1033035	0					
ANR	1035031	Identifier	metrics_scale		1033035	1					
ANR	1035032	PrimaryExpression	1000		1033035	1					
ANR	1035033	ExpressionStatement	cr . metrics_type = gs_fapi_metrics_add	1532:16:57250:57287	1033035	3	True				
ANR	1035034	AssignmentExpression	cr . metrics_type = gs_fapi_metrics_add		1033035	0		=			
ANR	1035035	MemberAccess	cr . metrics_type		1033035	0					
ANR	1035036	Identifier	cr		1033035	0					
ANR	1035037	Identifier	metrics_type		1033035	1					
ANR	1035038	Identifier	gs_fapi_metrics_add		1033035	1					
ANR	1035039	ElseStatement	else		1033035	0					
ANR	1035040	CompoundStatement		316:13:12160:12160	1033035	0					
ANR	1035041	ExpressionStatement	cr . sb_x = fapi_round ( sbw [ 0 ] * scale * em_scale_x )	1536:12:57340:57389	1033035	0	True				
ANR	1035042	AssignmentExpression	cr . sb_x = fapi_round ( sbw [ 0 ] * scale * em_scale_x )		1033035	0		=			
ANR	1035043	MemberAccess	cr . sb_x		1033035	0					
ANR	1035044	Identifier	cr		1033035	0					
ANR	1035045	Identifier	sb_x		1033035	1					
ANR	1035046	CallExpression	fapi_round ( sbw [ 0 ] * scale * em_scale_x )		1033035	1					
ANR	1035047	Callee	fapi_round		1033035	0					
ANR	1035048	Identifier	fapi_round		1033035	0					
ANR	1035049	ArgumentList	sbw [ 0 ] * scale * em_scale_x		1033035	1					
ANR	1035050	Argument	sbw [ 0 ] * scale * em_scale_x		1033035	0					
ANR	1035051	MultiplicativeExpression	sbw [ 0 ] * scale * em_scale_x		1033035	0		*			
ANR	1035052	ArrayIndexing	sbw [ 0 ]		1033035	0					
ANR	1035053	Identifier	sbw		1033035	0					
ANR	1035054	PrimaryExpression	0		1033035	1					
ANR	1035055	MultiplicativeExpression	scale * em_scale_x		1033035	1		*			
ANR	1035056	Identifier	scale		1033035	0					
ANR	1035057	Identifier	em_scale_x		1033035	1					
ANR	1035058	ExpressionStatement	cr . sb_y = fapi_round ( sbw [ 1 ] * scale * em_scale_x )	1537:12:57403:57452	1033035	1	True				
ANR	1035059	AssignmentExpression	cr . sb_y = fapi_round ( sbw [ 1 ] * scale * em_scale_x )		1033035	0		=			
ANR	1035060	MemberAccess	cr . sb_y		1033035	0					
ANR	1035061	Identifier	cr		1033035	0					
ANR	1035062	Identifier	sb_y		1033035	1					
ANR	1035063	CallExpression	fapi_round ( sbw [ 1 ] * scale * em_scale_x )		1033035	1					
ANR	1035064	Callee	fapi_round		1033035	0					
ANR	1035065	Identifier	fapi_round		1033035	0					
ANR	1035066	ArgumentList	sbw [ 1 ] * scale * em_scale_x		1033035	1					
ANR	1035067	Argument	sbw [ 1 ] * scale * em_scale_x		1033035	0					
ANR	1035068	MultiplicativeExpression	sbw [ 1 ] * scale * em_scale_x		1033035	0		*			
ANR	1035069	ArrayIndexing	sbw [ 1 ]		1033035	0					
ANR	1035070	Identifier	sbw		1033035	0					
ANR	1035071	PrimaryExpression	1		1033035	1					
ANR	1035072	MultiplicativeExpression	scale * em_scale_x		1033035	1		*			
ANR	1035073	Identifier	scale		1033035	0					
ANR	1035074	Identifier	em_scale_x		1033035	1					
ANR	1035075	ExpressionStatement	cr . aw_x = fapi_round ( sbw [ 2 ] * scale * em_scale_x )	1538:12:57466:57515	1033035	2	True				
ANR	1035076	AssignmentExpression	cr . aw_x = fapi_round ( sbw [ 2 ] * scale * em_scale_x )		1033035	0		=			
ANR	1035077	MemberAccess	cr . aw_x		1033035	0					
ANR	1035078	Identifier	cr		1033035	0					
ANR	1035079	Identifier	aw_x		1033035	1					
ANR	1035080	CallExpression	fapi_round ( sbw [ 2 ] * scale * em_scale_x )		1033035	1					
ANR	1035081	Callee	fapi_round		1033035	0					
ANR	1035082	Identifier	fapi_round		1033035	0					
ANR	1035083	ArgumentList	sbw [ 2 ] * scale * em_scale_x		1033035	1					
ANR	1035084	Argument	sbw [ 2 ] * scale * em_scale_x		1033035	0					
ANR	1035085	MultiplicativeExpression	sbw [ 2 ] * scale * em_scale_x		1033035	0		*			
ANR	1035086	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1035087	Identifier	sbw		1033035	0					
ANR	1035088	PrimaryExpression	2		1033035	1					
ANR	1035089	MultiplicativeExpression	scale * em_scale_x		1033035	1		*			
ANR	1035090	Identifier	scale		1033035	0					
ANR	1035091	Identifier	em_scale_x		1033035	1					
ANR	1035092	ExpressionStatement	cr . aw_y = fapi_round ( sbw [ 3 ] * scale * em_scale_x )	1539:12:57529:57578	1033035	3	True				
ANR	1035093	AssignmentExpression	cr . aw_y = fapi_round ( sbw [ 3 ] * scale * em_scale_x )		1033035	0		=			
ANR	1035094	MemberAccess	cr . aw_y		1033035	0					
ANR	1035095	Identifier	cr		1033035	0					
ANR	1035096	Identifier	aw_y		1033035	1					
ANR	1035097	CallExpression	fapi_round ( sbw [ 3 ] * scale * em_scale_x )		1033035	1					
ANR	1035098	Callee	fapi_round		1033035	0					
ANR	1035099	Identifier	fapi_round		1033035	0					
ANR	1035100	ArgumentList	sbw [ 3 ] * scale * em_scale_x		1033035	1					
ANR	1035101	Argument	sbw [ 3 ] * scale * em_scale_x		1033035	0					
ANR	1035102	MultiplicativeExpression	sbw [ 3 ] * scale * em_scale_x		1033035	0		*			
ANR	1035103	ArrayIndexing	sbw [ 3 ]		1033035	0					
ANR	1035104	Identifier	sbw		1033035	0					
ANR	1035105	PrimaryExpression	3		1033035	1					
ANR	1035106	MultiplicativeExpression	scale * em_scale_x		1033035	1		*			
ANR	1035107	Identifier	scale		1033035	0					
ANR	1035108	Identifier	em_scale_x		1033035	1					
ANR	1035109	ExpressionStatement	cr . metrics_scale = ( bIsType1GlyphData ? 1000 : 1 )	1540:12:57592:57641	1033035	4	True				
ANR	1035110	AssignmentExpression	cr . metrics_scale = ( bIsType1GlyphData ? 1000 : 1 )		1033035	0		=			
ANR	1035111	MemberAccess	cr . metrics_scale		1033035	0					
ANR	1035112	Identifier	cr		1033035	0					
ANR	1035113	Identifier	metrics_scale		1033035	1					
ANR	1035114	ConditionalExpression	bIsType1GlyphData ? 1000 : 1		1033035	1					
ANR	1035115	Condition	bIsType1GlyphData		1033035	0					
ANR	1035116	Identifier	bIsType1GlyphData		1033035	0					
ANR	1035117	PrimaryExpression	1000		1033035	1					
ANR	1035118	PrimaryExpression	1		1033035	2					
ANR	1035119	ExpressionStatement	cr . metrics_type = ( code == 2 ? gs_fapi_metrics_replace : gs_fapi_metrics_replace_width )	1541:12:57655:57806	1033035	5	True				
ANR	1035120	AssignmentExpression	cr . metrics_type = ( code == 2 ? gs_fapi_metrics_replace : gs_fapi_metrics_replace_width )		1033035	0		=			
ANR	1035121	MemberAccess	cr . metrics_type		1033035	0					
ANR	1035122	Identifier	cr		1033035	0					
ANR	1035123	Identifier	metrics_type		1033035	1					
ANR	1035124	ConditionalExpression	code == 2 ? gs_fapi_metrics_replace : gs_fapi_metrics_replace_width		1033035	1					
ANR	1035125	Condition	code == 2		1033035	0					
ANR	1035126	EqualityExpression	code == 2		1033035	0		==			
ANR	1035127	Identifier	code		1033035	0					
ANR	1035128	PrimaryExpression	2		1033035	1					
ANR	1035129	Identifier	gs_fapi_metrics_replace		1033035	1					
ANR	1035130	Identifier	gs_fapi_metrics_replace_width		1033035	2					
ANR	1035131	ExpressionStatement	sbw_state = SBW_DONE	1543:12:57820:57840	1033035	6	True				
ANR	1035132	AssignmentExpression	sbw_state = SBW_DONE		1033035	0		=			
ANR	1035133	Identifier	sbw_state		1033035	0					
ANR	1035134	Identifier	SBW_DONE		1033035	1					
ANR	1035135	ExpressionStatement	"memset ( & metrics , 0x00 , sizeof ( metrics ) )"	1546:4:57862:57901	1033035	59	True				
ANR	1035136	CallExpression	"memset ( & metrics , 0x00 , sizeof ( metrics ) )"		1033035	0					
ANR	1035137	Callee	memset		1033035	0					
ANR	1035138	Identifier	memset		1033035	0					
ANR	1035139	ArgumentList	& metrics		1033035	1					
ANR	1035140	Argument	& metrics		1033035	0					
ANR	1035141	UnaryOperationExpression	& metrics		1033035	0					
ANR	1035142	UnaryOperator	&		1033035	0					
ANR	1035143	Identifier	metrics		1033035	1					
ANR	1035144	Argument	0x00		1033035	1					
ANR	1035145	PrimaryExpression	0x00		1033035	0					
ANR	1035146	Argument	sizeof ( metrics )		1033035	2					
ANR	1035147	SizeofExpression	sizeof ( metrics )		1033035	0					
ANR	1035148	Sizeof	sizeof		1033035	0					
ANR	1035149	SizeofOperand	metrics		1033035	1					
ANR	1035150	IfStatement	if ( I -> ff . metrics_only )		1033035	60					
ANR	1035151	Condition	I -> ff . metrics_only	1548:8:57946:57963	1033035	0	True				
ANR	1035152	MemberAccess	I -> ff . metrics_only		1033035	0					
ANR	1035153	PtrMemberAccess	I -> ff		1033035	0					
ANR	1035154	Identifier	I		1033035	0					
ANR	1035155	Identifier	ff		1033035	1					
ANR	1035156	Identifier	metrics_only		1033035	1					
ANR	1035157	CompoundStatement		329:28:12800:12800	1033035	1					
ANR	1035158	ExpressionStatement	"code = I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"	1549:8:57976:58036	1033035	0	True				
ANR	1035159	AssignmentExpression	"code = I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	0		=			
ANR	1035160	Identifier	code		1033035	0					
ANR	1035161	CallExpression	"I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	1					
ANR	1035162	Callee	I -> get_char_outline_metrics		1033035	0					
ANR	1035163	PtrMemberAccess	I -> get_char_outline_metrics		1033035	0					
ANR	1035164	Identifier	I		1033035	0					
ANR	1035165	Identifier	get_char_outline_metrics		1033035	1					
ANR	1035166	ArgumentList	I		1033035	1					
ANR	1035167	Argument	I		1033035	0					
ANR	1035168	Identifier	I		1033035	0					
ANR	1035169	Argument	& I -> ff		1033035	1					
ANR	1035170	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1035171	UnaryOperator	&		1033035	0					
ANR	1035172	PtrMemberAccess	I -> ff		1033035	1					
ANR	1035173	Identifier	I		1033035	0					
ANR	1035174	Identifier	ff		1033035	1					
ANR	1035175	Argument	& cr		1033035	2					
ANR	1035176	UnaryOperationExpression	& cr		1033035	0					
ANR	1035177	UnaryOperator	&		1033035	0					
ANR	1035178	Identifier	cr		1033035	1					
ANR	1035179	Argument	& metrics		1033035	3					
ANR	1035180	UnaryOperationExpression	& metrics		1033035	0					
ANR	1035181	UnaryOperator	&		1033035	0					
ANR	1035182	Identifier	metrics		1033035	1					
ANR	1035183	ElseStatement	else		1033035	0					
ANR	1035184	IfStatement	if ( I -> use_outline )		1033035	0					
ANR	1035185	Condition	I -> use_outline	1551:13:58057:58070	1033035	0	True				
ANR	1035186	PtrMemberAccess	I -> use_outline		1033035	0					
ANR	1035187	Identifier	I		1033035	0					
ANR	1035188	Identifier	use_outline		1033035	1					
ANR	1035189	CompoundStatement		332:29:12907:12907	1033035	1					
ANR	1035190	ExpressionStatement	"code = I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"	1552:8:58083:58143	1033035	0	True				
ANR	1035191	AssignmentExpression	"code = I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	0		=			
ANR	1035192	Identifier	code		1033035	0					
ANR	1035193	CallExpression	"I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	1					
ANR	1035194	Callee	I -> get_char_outline_metrics		1033035	0					
ANR	1035195	PtrMemberAccess	I -> get_char_outline_metrics		1033035	0					
ANR	1035196	Identifier	I		1033035	0					
ANR	1035197	Identifier	get_char_outline_metrics		1033035	1					
ANR	1035198	ArgumentList	I		1033035	1					
ANR	1035199	Argument	I		1033035	0					
ANR	1035200	Identifier	I		1033035	0					
ANR	1035201	Argument	& I -> ff		1033035	1					
ANR	1035202	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1035203	UnaryOperator	&		1033035	0					
ANR	1035204	PtrMemberAccess	I -> ff		1033035	1					
ANR	1035205	Identifier	I		1033035	0					
ANR	1035206	Identifier	ff		1033035	1					
ANR	1035207	Argument	& cr		1033035	2					
ANR	1035208	UnaryOperationExpression	& cr		1033035	0					
ANR	1035209	UnaryOperator	&		1033035	0					
ANR	1035210	Identifier	cr		1033035	1					
ANR	1035211	Argument	& metrics		1033035	3					
ANR	1035212	UnaryOperationExpression	& metrics		1033035	0					
ANR	1035213	UnaryOperator	&		1033035	0					
ANR	1035214	Identifier	metrics		1033035	1					
ANR	1035215	ElseStatement	else		1033035	0					
ANR	1035216	CompoundStatement		335:9:12994:12994	1033035	0					
ANR	1035217	ExpressionStatement	"code = I -> get_char_raster_metrics ( I , & I -> ff , & cr , & metrics )"	1555:8:58170:58229	1033035	0	True				
ANR	1035218	AssignmentExpression	"code = I -> get_char_raster_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	0		=			
ANR	1035219	Identifier	code		1033035	0					
ANR	1035220	CallExpression	"I -> get_char_raster_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	1					
ANR	1035221	Callee	I -> get_char_raster_metrics		1033035	0					
ANR	1035222	PtrMemberAccess	I -> get_char_raster_metrics		1033035	0					
ANR	1035223	Identifier	I		1033035	0					
ANR	1035224	Identifier	get_char_raster_metrics		1033035	1					
ANR	1035225	ArgumentList	I		1033035	1					
ANR	1035226	Argument	I		1033035	0					
ANR	1035227	Identifier	I		1033035	0					
ANR	1035228	Argument	& I -> ff		1033035	1					
ANR	1035229	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1035230	UnaryOperator	&		1033035	0					
ANR	1035231	PtrMemberAccess	I -> ff		1033035	1					
ANR	1035232	Identifier	I		1033035	0					
ANR	1035233	Identifier	ff		1033035	1					
ANR	1035234	Argument	& cr		1033035	2					
ANR	1035235	UnaryOperationExpression	& cr		1033035	0					
ANR	1035236	UnaryOperator	&		1033035	0					
ANR	1035237	Identifier	cr		1033035	1					
ANR	1035238	Argument	& metrics		1033035	3					
ANR	1035239	UnaryOperationExpression	& metrics		1033035	0					
ANR	1035240	UnaryOperator	&		1033035	0					
ANR	1035241	Identifier	metrics		1033035	1					
ANR	1035242	IfStatement	if ( code == gs_error_VMerror )		1033035	1					
ANR	1035243	Condition	code == gs_error_VMerror	1559:12:58401:58424	1033035	0	True				
ANR	1035244	EqualityExpression	code == gs_error_VMerror		1033035	0		==			
ANR	1035245	Identifier	code		1033035	0					
ANR	1035246	Identifier	gs_error_VMerror		1033035	1					
ANR	1035247	CompoundStatement		340:38:13261:13261	1033035	1					
ANR	1035248	ExpressionStatement	I -> use_outline = true	1560:12:58441:58462	1033035	0	True				
ANR	1035249	AssignmentExpression	I -> use_outline = true		1033035	0		=			
ANR	1035250	PtrMemberAccess	I -> use_outline		1033035	0					
ANR	1035251	Identifier	I		1033035	0					
ANR	1035252	Identifier	use_outline		1033035	1					
ANR	1035253	Identifier	true		1033035	1					
ANR	1035254	GotoStatement	goto retry_oversampling ;	1561:12:58476:58499	1033035	1	True				
ANR	1035255	Identifier	retry_oversampling		1033035	0					
ANR	1035256	IfStatement	if ( code == gs_error_limitcheck )		1033035	2					
ANR	1035257	Condition	code == gs_error_limitcheck	1563:12:58523:58549	1033035	0	True				
ANR	1035258	EqualityExpression	code == gs_error_limitcheck		1033035	0		==			
ANR	1035259	Identifier	code		1033035	0					
ANR	1035260	Identifier	gs_error_limitcheck		1033035	1					
ANR	1035261	CompoundStatement		344:41:13386:13386	1033035	1					
ANR	1035262	IfStatement	if ( log2_scale . x > 0 || log2_scale . y > 0 )		1033035	0					
ANR	1035263	Condition	log2_scale . x > 0 || log2_scale . y > 0	1564:16:58570:58605	1033035	0	True				
ANR	1035264	OrExpression	log2_scale . x > 0 || log2_scale . y > 0		1033035	0		||			
ANR	1035265	RelationalExpression	log2_scale . x > 0		1033035	0		>			
ANR	1035266	MemberAccess	log2_scale . x		1033035	0					
ANR	1035267	Identifier	log2_scale		1033035	0					
ANR	1035268	Identifier	x		1033035	1					
ANR	1035269	PrimaryExpression	0		1033035	1					
ANR	1035270	RelationalExpression	log2_scale . y > 0		1033035	1		>			
ANR	1035271	MemberAccess	log2_scale . y		1033035	0					
ANR	1035272	Identifier	log2_scale		1033035	0					
ANR	1035273	Identifier	y		1033035	1					
ANR	1035274	PrimaryExpression	0		1033035	1					
ANR	1035275	CompoundStatement		345:54:13442:13442	1033035	1					
ANR	1035276	ExpressionStatement	penum_s -> fapi_log2_scale . x = log2_scale . x = penum_s -> fapi_log2_scale . y = log2_scale . y = 0	1565:16:58626:58735	1033035	0	True				
ANR	1035277	AssignmentExpression	penum_s -> fapi_log2_scale . x = log2_scale . x = penum_s -> fapi_log2_scale . y = log2_scale . y = 0		1033035	0		=			
ANR	1035278	MemberAccess	penum_s -> fapi_log2_scale . x		1033035	0					
ANR	1035279	PtrMemberAccess	penum_s -> fapi_log2_scale		1033035	0					
ANR	1035280	Identifier	penum_s		1033035	0					
ANR	1035281	Identifier	fapi_log2_scale		1033035	1					
ANR	1035282	Identifier	x		1033035	1					
ANR	1035283	AssignmentExpression	log2_scale . x = penum_s -> fapi_log2_scale . y = log2_scale . y = 0		1033035	1		=			
ANR	1035284	MemberAccess	log2_scale . x		1033035	0					
ANR	1035285	Identifier	log2_scale		1033035	0					
ANR	1035286	Identifier	x		1033035	1					
ANR	1035287	AssignmentExpression	penum_s -> fapi_log2_scale . y = log2_scale . y = 0		1033035	1		=			
ANR	1035288	MemberAccess	penum_s -> fapi_log2_scale . y		1033035	0					
ANR	1035289	PtrMemberAccess	penum_s -> fapi_log2_scale		1033035	0					
ANR	1035290	Identifier	penum_s		1033035	0					
ANR	1035291	Identifier	fapi_log2_scale		1033035	1					
ANR	1035292	Identifier	y		1033035	1					
ANR	1035293	AssignmentExpression	log2_scale . y = 0		1033035	1		=			
ANR	1035294	MemberAccess	log2_scale . y		1033035	0					
ANR	1035295	Identifier	log2_scale		1033035	0					
ANR	1035296	Identifier	y		1033035	1					
ANR	1035297	PrimaryExpression	0		1033035	1					
ANR	1035298	ExpressionStatement	I -> release_char_data ( I )	1567:16:58753:58776	1033035	1	True				
ANR	1035299	CallExpression	I -> release_char_data ( I )		1033035	0					
ANR	1035300	Callee	I -> release_char_data		1033035	0					
ANR	1035301	PtrMemberAccess	I -> release_char_data		1033035	0					
ANR	1035302	Identifier	I		1033035	0					
ANR	1035303	Identifier	release_char_data		1033035	1					
ANR	1035304	ArgumentList	I		1033035	1					
ANR	1035305	Argument	I		1033035	0					
ANR	1035306	Identifier	I		1033035	0					
ANR	1035307	GotoStatement	goto retry_oversampling ;	1568:16:58794:58817	1033035	2	True				
ANR	1035308	Identifier	retry_oversampling		1033035	0					
ANR	1035309	ExpressionStatement	"code = I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"	1570:12:58845:58905	1033035	1	True				
ANR	1035310	AssignmentExpression	"code = I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	0		=			
ANR	1035311	Identifier	code		1033035	0					
ANR	1035312	CallExpression	"I -> get_char_outline_metrics ( I , & I -> ff , & cr , & metrics )"		1033035	1					
ANR	1035313	Callee	I -> get_char_outline_metrics		1033035	0					
ANR	1035314	PtrMemberAccess	I -> get_char_outline_metrics		1033035	0					
ANR	1035315	Identifier	I		1033035	0					
ANR	1035316	Identifier	get_char_outline_metrics		1033035	1					
ANR	1035317	ArgumentList	I		1033035	1					
ANR	1035318	Argument	I		1033035	0					
ANR	1035319	Identifier	I		1033035	0					
ANR	1035320	Argument	& I -> ff		1033035	1					
ANR	1035321	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1035322	UnaryOperator	&		1033035	0					
ANR	1035323	PtrMemberAccess	I -> ff		1033035	1					
ANR	1035324	Identifier	I		1033035	0					
ANR	1035325	Identifier	ff		1033035	1					
ANR	1035326	Argument	& cr		1033035	2					
ANR	1035327	UnaryOperationExpression	& cr		1033035	0					
ANR	1035328	UnaryOperator	&		1033035	0					
ANR	1035329	Identifier	cr		1033035	1					
ANR	1035330	Argument	& metrics		1033035	3					
ANR	1035331	UnaryOperationExpression	& metrics		1033035	0					
ANR	1035332	UnaryOperator	&		1033035	0					
ANR	1035333	Identifier	metrics		1033035	1					
ANR	1035334	IfStatement	if ( code > 0 )		1033035	61					
ANR	1035335	Condition	code > 0	1578:8:59155:59162	1033035	0	True				
ANR	1035336	RelationalExpression	code > 0		1033035	0		>			
ANR	1035337	Identifier	code		1033035	0					
ANR	1035338	PrimaryExpression	0		1033035	1					
ANR	1035339	CompoundStatement		359:18:13999:13999	1033035	1					
ANR	1035340	ReturnStatement	return ( gs_error_unregistered ) ;	1579:8:59175:59205	1033035	0	True				
ANR	1035341	Identifier	gs_error_unregistered		1033035	0					
ANR	1035342	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , code ) ) < 0 )"		1033035	62					
ANR	1035343	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , code ) ) < 0"	1582:8:59222:59272	1033035	0	True				
ANR	1035344	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , code ) ) < 0"		1033035	0		<			
ANR	1035345	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , code )"		1033035	0		=			
ANR	1035346	Identifier	code		1033035	0					
ANR	1035347	CallExpression	"gs_fapi_renderer_retcode ( mem , I , code )"		1033035	1					
ANR	1035348	Callee	gs_fapi_renderer_retcode		1033035	0					
ANR	1035349	Identifier	gs_fapi_renderer_retcode		1033035	0					
ANR	1035350	ArgumentList	mem		1033035	1					
ANR	1035351	Argument	mem		1033035	0					
ANR	1035352	Identifier	mem		1033035	0					
ANR	1035353	Argument	I		1033035	1					
ANR	1035354	Identifier	I		1033035	0					
ANR	1035355	Argument	code		1033035	2					
ANR	1035356	Identifier	code		1033035	0					
ANR	1035357	PrimaryExpression	0		1033035	1					
ANR	1035358	ReturnStatement	return code ;	1583:8:59283:59294	1033035	1	True				
ANR	1035359	Identifier	code		1033035	0					
ANR	1035360	ExpressionStatement	"compute_em_scale ( pbfont , & metrics , FontMatrix_div , & em_scale_x , & em_scale_y )"	1585:4:59301:59398	1033035	63	True				
ANR	1035361	CallExpression	"compute_em_scale ( pbfont , & metrics , FontMatrix_div , & em_scale_x , & em_scale_y )"		1033035	0					
ANR	1035362	Callee	compute_em_scale		1033035	0					
ANR	1035363	Identifier	compute_em_scale		1033035	0					
ANR	1035364	ArgumentList	pbfont		1033035	1					
ANR	1035365	Argument	pbfont		1033035	0					
ANR	1035366	Identifier	pbfont		1033035	0					
ANR	1035367	Argument	& metrics		1033035	1					
ANR	1035368	UnaryOperationExpression	& metrics		1033035	0					
ANR	1035369	UnaryOperator	&		1033035	0					
ANR	1035370	Identifier	metrics		1033035	1					
ANR	1035371	Argument	FontMatrix_div		1033035	2					
ANR	1035372	Identifier	FontMatrix_div		1033035	0					
ANR	1035373	Argument	& em_scale_x		1033035	3					
ANR	1035374	UnaryOperationExpression	& em_scale_x		1033035	0					
ANR	1035375	UnaryOperator	&		1033035	0					
ANR	1035376	Identifier	em_scale_x		1033035	1					
ANR	1035377	Argument	& em_scale_y		1033035	4					
ANR	1035378	UnaryOperationExpression	& em_scale_y		1033035	0					
ANR	1035379	UnaryOperator	&		1033035	0					
ANR	1035380	Identifier	em_scale_y		1033035	1					
ANR	1035381	ExpressionStatement	char_bbox . p . x = metrics . bbox_x0 / em_scale_x	1587:4:59404:59448	1033035	64	True				
ANR	1035382	AssignmentExpression	char_bbox . p . x = metrics . bbox_x0 / em_scale_x		1033035	0		=			
ANR	1035383	MemberAccess	char_bbox . p . x		1033035	0					
ANR	1035384	MemberAccess	char_bbox . p		1033035	0					
ANR	1035385	Identifier	char_bbox		1033035	0					
ANR	1035386	Identifier	p		1033035	1					
ANR	1035387	Identifier	x		1033035	1					
ANR	1035388	MultiplicativeExpression	metrics . bbox_x0 / em_scale_x		1033035	1		/			
ANR	1035389	MemberAccess	metrics . bbox_x0		1033035	0					
ANR	1035390	Identifier	metrics		1033035	0					
ANR	1035391	Identifier	bbox_x0		1033035	1					
ANR	1035392	Identifier	em_scale_x		1033035	1					
ANR	1035393	ExpressionStatement	char_bbox . p . y = metrics . bbox_y0 / em_scale_y	1588:4:59454:59498	1033035	65	True				
ANR	1035394	AssignmentExpression	char_bbox . p . y = metrics . bbox_y0 / em_scale_y		1033035	0		=			
ANR	1035395	MemberAccess	char_bbox . p . y		1033035	0					
ANR	1035396	MemberAccess	char_bbox . p		1033035	0					
ANR	1035397	Identifier	char_bbox		1033035	0					
ANR	1035398	Identifier	p		1033035	1					
ANR	1035399	Identifier	y		1033035	1					
ANR	1035400	MultiplicativeExpression	metrics . bbox_y0 / em_scale_y		1033035	1		/			
ANR	1035401	MemberAccess	metrics . bbox_y0		1033035	0					
ANR	1035402	Identifier	metrics		1033035	0					
ANR	1035403	Identifier	bbox_y0		1033035	1					
ANR	1035404	Identifier	em_scale_y		1033035	1					
ANR	1035405	ExpressionStatement	char_bbox . q . x = metrics . bbox_x1 / em_scale_x	1589:4:59504:59548	1033035	66	True				
ANR	1035406	AssignmentExpression	char_bbox . q . x = metrics . bbox_x1 / em_scale_x		1033035	0		=			
ANR	1035407	MemberAccess	char_bbox . q . x		1033035	0					
ANR	1035408	MemberAccess	char_bbox . q		1033035	0					
ANR	1035409	Identifier	char_bbox		1033035	0					
ANR	1035410	Identifier	q		1033035	1					
ANR	1035411	Identifier	x		1033035	1					
ANR	1035412	MultiplicativeExpression	metrics . bbox_x1 / em_scale_x		1033035	1		/			
ANR	1035413	MemberAccess	metrics . bbox_x1		1033035	0					
ANR	1035414	Identifier	metrics		1033035	0					
ANR	1035415	Identifier	bbox_x1		1033035	1					
ANR	1035416	Identifier	em_scale_x		1033035	1					
ANR	1035417	ExpressionStatement	char_bbox . q . y = metrics . bbox_y1 / em_scale_y	1590:4:59554:59598	1033035	67	True				
ANR	1035418	AssignmentExpression	char_bbox . q . y = metrics . bbox_y1 / em_scale_y		1033035	0		=			
ANR	1035419	MemberAccess	char_bbox . q . y		1033035	0					
ANR	1035420	MemberAccess	char_bbox . q		1033035	0					
ANR	1035421	Identifier	char_bbox		1033035	0					
ANR	1035422	Identifier	q		1033035	1					
ANR	1035423	Identifier	y		1033035	1					
ANR	1035424	MultiplicativeExpression	metrics . bbox_y1 / em_scale_y		1033035	1		/			
ANR	1035425	MemberAccess	metrics . bbox_y1		1033035	0					
ANR	1035426	Identifier	metrics		1033035	0					
ANR	1035427	Identifier	bbox_y1		1033035	1					
ANR	1035428	Identifier	em_scale_y		1033035	1					
ANR	1035429	IfStatement	if ( pbfont -> FontType != ft_MicroType && ! bCID && pbfont -> FontBBox . q . x > pbfont -> FontBBox . p . x && pbfont -> FontBBox . q . y > pbfont -> FontBBox . p . y )		1033035	68					
ANR	1035430	Condition	pbfont -> FontType != ft_MicroType && ! bCID && pbfont -> FontBBox . q . x > pbfont -> FontBBox . p . x && pbfont -> FontBBox . q . y > pbfont -> FontBBox . p . y	1595:8:59760:59910	1033035	0	True				
ANR	1035431	AndExpression	pbfont -> FontType != ft_MicroType && ! bCID && pbfont -> FontBBox . q . x > pbfont -> FontBBox . p . x && pbfont -> FontBBox . q . y > pbfont -> FontBBox . p . y		1033035	0		&&			
ANR	1035432	EqualityExpression	pbfont -> FontType != ft_MicroType		1033035	0		!=			
ANR	1035433	PtrMemberAccess	pbfont -> FontType		1033035	0					
ANR	1035434	Identifier	pbfont		1033035	0					
ANR	1035435	Identifier	FontType		1033035	1					
ANR	1035436	Identifier	ft_MicroType		1033035	1					
ANR	1035437	AndExpression	! bCID && pbfont -> FontBBox . q . x > pbfont -> FontBBox . p . x && pbfont -> FontBBox . q . y > pbfont -> FontBBox . p . y		1033035	1		&&			
ANR	1035438	UnaryOperationExpression	! bCID		1033035	0					
ANR	1035439	UnaryOperator	!		1033035	0					
ANR	1035440	Identifier	bCID		1033035	1					
ANR	1035441	AndExpression	pbfont -> FontBBox . q . x > pbfont -> FontBBox . p . x && pbfont -> FontBBox . q . y > pbfont -> FontBBox . p . y		1033035	1		&&			
ANR	1035442	RelationalExpression	pbfont -> FontBBox . q . x > pbfont -> FontBBox . p . x		1033035	0		>			
ANR	1035443	MemberAccess	pbfont -> FontBBox . q . x		1033035	0					
ANR	1035444	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1035445	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035446	Identifier	pbfont		1033035	0					
ANR	1035447	Identifier	FontBBox		1033035	1					
ANR	1035448	Identifier	q		1033035	1					
ANR	1035449	Identifier	x		1033035	1					
ANR	1035450	MemberAccess	pbfont -> FontBBox . p . x		1033035	1					
ANR	1035451	MemberAccess	pbfont -> FontBBox . p		1033035	0					
ANR	1035452	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035453	Identifier	pbfont		1033035	0					
ANR	1035454	Identifier	FontBBox		1033035	1					
ANR	1035455	Identifier	p		1033035	1					
ANR	1035456	Identifier	x		1033035	1					
ANR	1035457	RelationalExpression	pbfont -> FontBBox . q . y > pbfont -> FontBBox . p . y		1033035	1		>			
ANR	1035458	MemberAccess	pbfont -> FontBBox . q . y		1033035	0					
ANR	1035459	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1035460	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035461	Identifier	pbfont		1033035	0					
ANR	1035462	Identifier	FontBBox		1033035	1					
ANR	1035463	Identifier	q		1033035	1					
ANR	1035464	Identifier	y		1033035	1					
ANR	1035465	MemberAccess	pbfont -> FontBBox . p . y		1033035	1					
ANR	1035466	MemberAccess	pbfont -> FontBBox . p		1033035	0					
ANR	1035467	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035468	Identifier	pbfont		1033035	0					
ANR	1035469	Identifier	FontBBox		1033035	1					
ANR	1035470	Identifier	p		1033035	1					
ANR	1035471	Identifier	y		1033035	1					
ANR	1035472	CompoundStatement		378:56:14747:14747	1033035	1					
ANR	1035473	ExpressionStatement	"char_bbox . p . x = min ( char_bbox . p . x , pbfont -> FontBBox . p . x )"	1598:8:59923:59979	1033035	0	True				
ANR	1035474	AssignmentExpression	"char_bbox . p . x = min ( char_bbox . p . x , pbfont -> FontBBox . p . x )"		1033035	0		=			
ANR	1035475	MemberAccess	char_bbox . p . x		1033035	0					
ANR	1035476	MemberAccess	char_bbox . p		1033035	0					
ANR	1035477	Identifier	char_bbox		1033035	0					
ANR	1035478	Identifier	p		1033035	1					
ANR	1035479	Identifier	x		1033035	1					
ANR	1035480	CallExpression	"min ( char_bbox . p . x , pbfont -> FontBBox . p . x )"		1033035	1					
ANR	1035481	Callee	min		1033035	0					
ANR	1035482	Identifier	min		1033035	0					
ANR	1035483	ArgumentList	char_bbox . p . x		1033035	1					
ANR	1035484	Argument	char_bbox . p . x		1033035	0					
ANR	1035485	MemberAccess	char_bbox . p . x		1033035	0					
ANR	1035486	MemberAccess	char_bbox . p		1033035	0					
ANR	1035487	Identifier	char_bbox		1033035	0					
ANR	1035488	Identifier	p		1033035	1					
ANR	1035489	Identifier	x		1033035	1					
ANR	1035490	Argument	pbfont -> FontBBox . p . x		1033035	1					
ANR	1035491	MemberAccess	pbfont -> FontBBox . p . x		1033035	0					
ANR	1035492	MemberAccess	pbfont -> FontBBox . p		1033035	0					
ANR	1035493	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035494	Identifier	pbfont		1033035	0					
ANR	1035495	Identifier	FontBBox		1033035	1					
ANR	1035496	Identifier	p		1033035	1					
ANR	1035497	Identifier	x		1033035	1					
ANR	1035498	ExpressionStatement	"char_bbox . p . y = min ( char_bbox . p . y , pbfont -> FontBBox . p . y )"	1599:8:59989:60045	1033035	1	True				
ANR	1035499	AssignmentExpression	"char_bbox . p . y = min ( char_bbox . p . y , pbfont -> FontBBox . p . y )"		1033035	0		=			
ANR	1035500	MemberAccess	char_bbox . p . y		1033035	0					
ANR	1035501	MemberAccess	char_bbox . p		1033035	0					
ANR	1035502	Identifier	char_bbox		1033035	0					
ANR	1035503	Identifier	p		1033035	1					
ANR	1035504	Identifier	y		1033035	1					
ANR	1035505	CallExpression	"min ( char_bbox . p . y , pbfont -> FontBBox . p . y )"		1033035	1					
ANR	1035506	Callee	min		1033035	0					
ANR	1035507	Identifier	min		1033035	0					
ANR	1035508	ArgumentList	char_bbox . p . y		1033035	1					
ANR	1035509	Argument	char_bbox . p . y		1033035	0					
ANR	1035510	MemberAccess	char_bbox . p . y		1033035	0					
ANR	1035511	MemberAccess	char_bbox . p		1033035	0					
ANR	1035512	Identifier	char_bbox		1033035	0					
ANR	1035513	Identifier	p		1033035	1					
ANR	1035514	Identifier	y		1033035	1					
ANR	1035515	Argument	pbfont -> FontBBox . p . y		1033035	1					
ANR	1035516	MemberAccess	pbfont -> FontBBox . p . y		1033035	0					
ANR	1035517	MemberAccess	pbfont -> FontBBox . p		1033035	0					
ANR	1035518	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035519	Identifier	pbfont		1033035	0					
ANR	1035520	Identifier	FontBBox		1033035	1					
ANR	1035521	Identifier	p		1033035	1					
ANR	1035522	Identifier	y		1033035	1					
ANR	1035523	ExpressionStatement	"char_bbox . q . x = max ( char_bbox . q . x , pbfont -> FontBBox . q . x )"	1600:8:60055:60111	1033035	2	True				
ANR	1035524	AssignmentExpression	"char_bbox . q . x = max ( char_bbox . q . x , pbfont -> FontBBox . q . x )"		1033035	0		=			
ANR	1035525	MemberAccess	char_bbox . q . x		1033035	0					
ANR	1035526	MemberAccess	char_bbox . q		1033035	0					
ANR	1035527	Identifier	char_bbox		1033035	0					
ANR	1035528	Identifier	q		1033035	1					
ANR	1035529	Identifier	x		1033035	1					
ANR	1035530	CallExpression	"max ( char_bbox . q . x , pbfont -> FontBBox . q . x )"		1033035	1					
ANR	1035531	Callee	max		1033035	0					
ANR	1035532	Identifier	max		1033035	0					
ANR	1035533	ArgumentList	char_bbox . q . x		1033035	1					
ANR	1035534	Argument	char_bbox . q . x		1033035	0					
ANR	1035535	MemberAccess	char_bbox . q . x		1033035	0					
ANR	1035536	MemberAccess	char_bbox . q		1033035	0					
ANR	1035537	Identifier	char_bbox		1033035	0					
ANR	1035538	Identifier	q		1033035	1					
ANR	1035539	Identifier	x		1033035	1					
ANR	1035540	Argument	pbfont -> FontBBox . q . x		1033035	1					
ANR	1035541	MemberAccess	pbfont -> FontBBox . q . x		1033035	0					
ANR	1035542	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1035543	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035544	Identifier	pbfont		1033035	0					
ANR	1035545	Identifier	FontBBox		1033035	1					
ANR	1035546	Identifier	q		1033035	1					
ANR	1035547	Identifier	x		1033035	1					
ANR	1035548	ExpressionStatement	"char_bbox . q . y = max ( char_bbox . q . y , pbfont -> FontBBox . q . y )"	1601:8:60121:60177	1033035	3	True				
ANR	1035549	AssignmentExpression	"char_bbox . q . y = max ( char_bbox . q . y , pbfont -> FontBBox . q . y )"		1033035	0		=			
ANR	1035550	MemberAccess	char_bbox . q . y		1033035	0					
ANR	1035551	MemberAccess	char_bbox . q		1033035	0					
ANR	1035552	Identifier	char_bbox		1033035	0					
ANR	1035553	Identifier	q		1033035	1					
ANR	1035554	Identifier	y		1033035	1					
ANR	1035555	CallExpression	"max ( char_bbox . q . y , pbfont -> FontBBox . q . y )"		1033035	1					
ANR	1035556	Callee	max		1033035	0					
ANR	1035557	Identifier	max		1033035	0					
ANR	1035558	ArgumentList	char_bbox . q . y		1033035	1					
ANR	1035559	Argument	char_bbox . q . y		1033035	0					
ANR	1035560	MemberAccess	char_bbox . q . y		1033035	0					
ANR	1035561	MemberAccess	char_bbox . q		1033035	0					
ANR	1035562	Identifier	char_bbox		1033035	0					
ANR	1035563	Identifier	q		1033035	1					
ANR	1035564	Identifier	y		1033035	1					
ANR	1035565	Argument	pbfont -> FontBBox . q . y		1033035	1					
ANR	1035566	MemberAccess	pbfont -> FontBBox . q . y		1033035	0					
ANR	1035567	MemberAccess	pbfont -> FontBBox . q		1033035	0					
ANR	1035568	PtrMemberAccess	pbfont -> FontBBox		1033035	0					
ANR	1035569	Identifier	pbfont		1033035	0					
ANR	1035570	Identifier	FontBBox		1033035	1					
ANR	1035571	Identifier	q		1033035	1					
ANR	1035572	Identifier	y		1033035	1					
ANR	1035573	IfStatement	if ( pbfont -> PaintType != 0 )		1033035	69					
ANR	1035574	Condition	pbfont -> PaintType != 0	1604:8:60194:60215	1033035	0	True				
ANR	1035575	EqualityExpression	pbfont -> PaintType != 0		1033035	0		!=			
ANR	1035576	PtrMemberAccess	pbfont -> PaintType		1033035	0					
ANR	1035577	Identifier	pbfont		1033035	0					
ANR	1035578	Identifier	PaintType		1033035	1					
ANR	1035579	PrimaryExpression	0		1033035	1					
ANR	1035580	CompoundStatement		386:8:15062:15095	1033035	1					
ANR	1035581	IdentifierDeclStatement	float w = pbfont -> StrokeWidth / 2 ;	1605:8:60228:60261	1033035	0	True				
ANR	1035582	IdentifierDecl	w = pbfont -> StrokeWidth / 2		1033035	0					
ANR	1035583	IdentifierDeclType	float		1033035	0					
ANR	1035584	Identifier	w		1033035	1					
ANR	1035585	AssignmentExpression	w = pbfont -> StrokeWidth / 2		1033035	2		=			
ANR	1035586	Identifier	w		1033035	0					
ANR	1035587	MultiplicativeExpression	pbfont -> StrokeWidth / 2		1033035	1		/			
ANR	1035588	PtrMemberAccess	pbfont -> StrokeWidth		1033035	0					
ANR	1035589	Identifier	pbfont		1033035	0					
ANR	1035590	Identifier	StrokeWidth		1033035	1					
ANR	1035591	PrimaryExpression	2		1033035	1					
ANR	1035592	ExpressionStatement	char_bbox . p . x -= w	1607:8:60272:60290	1033035	1	True				
ANR	1035593	AssignmentExpression	char_bbox . p . x -= w		1033035	0		-=			
ANR	1035594	MemberAccess	char_bbox . p . x		1033035	0					
ANR	1035595	MemberAccess	char_bbox . p		1033035	0					
ANR	1035596	Identifier	char_bbox		1033035	0					
ANR	1035597	Identifier	p		1033035	1					
ANR	1035598	Identifier	x		1033035	1					
ANR	1035599	Identifier	w		1033035	1					
ANR	1035600	ExpressionStatement	char_bbox . p . y -= w	1608:8:60300:60318	1033035	2	True				
ANR	1035601	AssignmentExpression	char_bbox . p . y -= w		1033035	0		-=			
ANR	1035602	MemberAccess	char_bbox . p . y		1033035	0					
ANR	1035603	MemberAccess	char_bbox . p		1033035	0					
ANR	1035604	Identifier	char_bbox		1033035	0					
ANR	1035605	Identifier	p		1033035	1					
ANR	1035606	Identifier	y		1033035	1					
ANR	1035607	Identifier	w		1033035	1					
ANR	1035608	ExpressionStatement	char_bbox . q . x += w	1609:8:60328:60346	1033035	3	True				
ANR	1035609	AssignmentExpression	char_bbox . q . x += w		1033035	0		+=			
ANR	1035610	MemberAccess	char_bbox . q . x		1033035	0					
ANR	1035611	MemberAccess	char_bbox . q		1033035	0					
ANR	1035612	Identifier	char_bbox		1033035	0					
ANR	1035613	Identifier	q		1033035	1					
ANR	1035614	Identifier	x		1033035	1					
ANR	1035615	Identifier	w		1033035	1					
ANR	1035616	ExpressionStatement	char_bbox . q . y += w	1610:8:60356:60374	1033035	4	True				
ANR	1035617	AssignmentExpression	char_bbox . q . y += w		1033035	0		+=			
ANR	1035618	MemberAccess	char_bbox . q . y		1033035	0					
ANR	1035619	MemberAccess	char_bbox . q		1033035	0					
ANR	1035620	Identifier	char_bbox		1033035	0					
ANR	1035621	Identifier	q		1033035	1					
ANR	1035622	Identifier	y		1033035	1					
ANR	1035623	Identifier	w		1033035	1					
ANR	1035624	ExpressionStatement	penum_s -> fapi_glyph_shift . x = penum_s -> fapi_glyph_shift . y = 0	1612:4:60386:60447	1033035	70	True				
ANR	1035625	AssignmentExpression	penum_s -> fapi_glyph_shift . x = penum_s -> fapi_glyph_shift . y = 0		1033035	0		=			
ANR	1035626	MemberAccess	penum_s -> fapi_glyph_shift . x		1033035	0					
ANR	1035627	PtrMemberAccess	penum_s -> fapi_glyph_shift		1033035	0					
ANR	1035628	Identifier	penum_s		1033035	0					
ANR	1035629	Identifier	fapi_glyph_shift		1033035	1					
ANR	1035630	Identifier	x		1033035	1					
ANR	1035631	AssignmentExpression	penum_s -> fapi_glyph_shift . y = 0		1033035	1		=			
ANR	1035632	MemberAccess	penum_s -> fapi_glyph_shift . y		1033035	0					
ANR	1035633	PtrMemberAccess	penum_s -> fapi_glyph_shift		1033035	0					
ANR	1035634	Identifier	penum_s		1033035	0					
ANR	1035635	Identifier	fapi_glyph_shift		1033035	1					
ANR	1035636	Identifier	y		1033035	1					
ANR	1035637	PrimaryExpression	0		1033035	1					
ANR	1035638	IfStatement	if ( sbw_state == SBW_FROM_RENDERER )		1033035	71					
ANR	1035639	Condition	sbw_state == SBW_FROM_RENDERER	1613:8:60457:60486	1033035	0	True				
ANR	1035640	EqualityExpression	sbw_state == SBW_FROM_RENDERER		1033035	0		==			
ANR	1035641	Identifier	sbw_state		1033035	0					
ANR	1035642	Identifier	SBW_FROM_RENDERER		1033035	1					
ANR	1035643	CompoundStatement		395:8:15333:15356	1033035	1					
ANR	1035644	IdentifierDeclStatement	int can_replace_metrics ;	1614:8:60499:60522	1033035	0	True				
ANR	1035645	IdentifierDecl	can_replace_metrics		1033035	0					
ANR	1035646	IdentifierDeclType	int		1033035	0					
ANR	1035647	Identifier	can_replace_metrics		1033035	1					
ANR	1035648	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) ) ) < 0 )"		1033035	1					
ANR	1035649	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) ) ) < 0"	1616:12:60537:60767	1033035	0	True				
ANR	1035650	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) ) ) < 0"		1033035	0		<			
ANR	1035651	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) )"		1033035	0		=			
ANR	1035652	Identifier	code		1033035	0					
ANR	1035653	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) )"		1033035	1					
ANR	1035654	Callee	gs_fapi_renderer_retcode		1033035	0					
ANR	1035655	Identifier	gs_fapi_renderer_retcode		1033035	0					
ANR	1035656	ArgumentList	mem		1033035	1					
ANR	1035657	Argument	mem		1033035	0					
ANR	1035658	Identifier	mem		1033035	0					
ANR	1035659	Argument	I		1033035	1					
ANR	1035660	Identifier	I		1033035	0					
ANR	1035661	Argument	"I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics )"		1033035	2					
ANR	1035662	CallExpression	"I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics )"		1033035	0					
ANR	1035663	Callee	I -> can_replace_metrics		1033035	0					
ANR	1035664	PtrMemberAccess	I -> can_replace_metrics		1033035	0					
ANR	1035665	Identifier	I		1033035	0					
ANR	1035666	Identifier	can_replace_metrics		1033035	1					
ANR	1035667	ArgumentList	I		1033035	1					
ANR	1035668	Argument	I		1033035	0					
ANR	1035669	Identifier	I		1033035	0					
ANR	1035670	Argument	& I -> ff		1033035	1					
ANR	1035671	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1035672	UnaryOperator	&		1033035	0					
ANR	1035673	PtrMemberAccess	I -> ff		1033035	1					
ANR	1035674	Identifier	I		1033035	0					
ANR	1035675	Identifier	ff		1033035	1					
ANR	1035676	Argument	& cr		1033035	2					
ANR	1035677	UnaryOperationExpression	& cr		1033035	0					
ANR	1035678	UnaryOperator	&		1033035	0					
ANR	1035679	Identifier	cr		1033035	1					
ANR	1035680	Argument	& can_replace_metrics		1033035	3					
ANR	1035681	UnaryOperationExpression	& can_replace_metrics		1033035	0					
ANR	1035682	UnaryOperator	&		1033035	0					
ANR	1035683	Identifier	can_replace_metrics		1033035	1					
ANR	1035684	PrimaryExpression	0		1033035	1					
ANR	1035685	ReturnStatement	return code ;	1621:12:60782:60793	1033035	1	True				
ANR	1035686	Identifier	code		1033035	0					
ANR	1035687	ExpressionStatement	sbw [ 2 ] = metrics . escapement / em_scale_x	1623:8:60804:60844	1033035	2	True				
ANR	1035688	AssignmentExpression	sbw [ 2 ] = metrics . escapement / em_scale_x		1033035	0		=			
ANR	1035689	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1035690	Identifier	sbw		1033035	0					
ANR	1035691	PrimaryExpression	2		1033035	1					
ANR	1035692	MultiplicativeExpression	metrics . escapement / em_scale_x		1033035	1		/			
ANR	1035693	MemberAccess	metrics . escapement		1033035	0					
ANR	1035694	Identifier	metrics		1033035	0					
ANR	1035695	Identifier	escapement		1033035	1					
ANR	1035696	Identifier	em_scale_x		1033035	1					
ANR	1035697	ExpressionStatement	sbw [ 3 ] = metrics . v_escapement / em_scale_y	1624:8:60854:60896	1033035	3	True				
ANR	1035698	AssignmentExpression	sbw [ 3 ] = metrics . v_escapement / em_scale_y		1033035	0		=			
ANR	1035699	ArrayIndexing	sbw [ 3 ]		1033035	0					
ANR	1035700	Identifier	sbw		1033035	0					
ANR	1035701	PrimaryExpression	3		1033035	1					
ANR	1035702	MultiplicativeExpression	metrics . v_escapement / em_scale_y		1033035	1		/			
ANR	1035703	MemberAccess	metrics . v_escapement		1033035	0					
ANR	1035704	Identifier	metrics		1033035	0					
ANR	1035705	Identifier	v_escapement		1033035	1					
ANR	1035706	Identifier	em_scale_y		1033035	1					
ANR	1035707	IfStatement	if ( pbfont -> FontType == 2 && ! can_replace_metrics )		1033035	4					
ANR	1035708	Condition	pbfont -> FontType == 2 && ! can_replace_metrics	1625:12:60910:60954	1033035	0	True				
ANR	1035709	AndExpression	pbfont -> FontType == 2 && ! can_replace_metrics		1033035	0		&&			
ANR	1035710	EqualityExpression	pbfont -> FontType == 2		1033035	0		==			
ANR	1035711	PtrMemberAccess	pbfont -> FontType		1033035	0					
ANR	1035712	Identifier	pbfont		1033035	0					
ANR	1035713	Identifier	FontType		1033035	1					
ANR	1035714	PrimaryExpression	2		1033035	1					
ANR	1035715	UnaryOperationExpression	! can_replace_metrics		1033035	1					
ANR	1035716	UnaryOperator	!		1033035	0					
ANR	1035717	Identifier	can_replace_metrics		1033035	1					
ANR	1035718	CompoundStatement		407:12:15805:15853	1033035	1					
ANR	1035719	IdentifierDeclStatement	gs_font_type1 * pfont1 = ( gs_font_type1 * ) pbfont ;	1626:12:60971:61019	1033035	0	True				
ANR	1035720	IdentifierDecl	* pfont1 = ( gs_font_type1 * ) pbfont		1033035	0					
ANR	1035721	IdentifierDeclType	gs_font_type1 *		1033035	0					
ANR	1035722	Identifier	pfont1		1033035	1					
ANR	1035723	AssignmentExpression	* pfont1 = ( gs_font_type1 * ) pbfont		1033035	2		=			
ANR	1035724	Identifier	pfont1		1033035	0					
ANR	1035725	CastExpression	( gs_font_type1 * ) pbfont		1033035	1					
ANR	1035726	CastTarget	gs_font_type1 *		1033035	0					
ANR	1035727	Identifier	pbfont		1033035	1					
ANR	1035728	ExpressionStatement	sbw [ 2 ] += fixed2float ( pfont1 -> data . nominalWidthX )	1628:12:61034:61083	1033035	1	True				
ANR	1035729	AssignmentExpression	sbw [ 2 ] += fixed2float ( pfont1 -> data . nominalWidthX )		1033035	0		+=			
ANR	1035730	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1035731	Identifier	sbw		1033035	0					
ANR	1035732	PrimaryExpression	2		1033035	1					
ANR	1035733	CallExpression	fixed2float ( pfont1 -> data . nominalWidthX )		1033035	1					
ANR	1035734	Callee	fixed2float		1033035	0					
ANR	1035735	Identifier	fixed2float		1033035	0					
ANR	1035736	ArgumentList	pfont1 -> data . nominalWidthX		1033035	1					
ANR	1035737	Argument	pfont1 -> data . nominalWidthX		1033035	0					
ANR	1035738	MemberAccess	pfont1 -> data . nominalWidthX		1033035	0					
ANR	1035739	PtrMemberAccess	pfont1 -> data		1033035	0					
ANR	1035740	Identifier	pfont1		1033035	0					
ANR	1035741	Identifier	data		1033035	1					
ANR	1035742	Identifier	nominalWidthX		1033035	1					
ANR	1035743	ElseStatement	else		1033035	0					
ANR	1035744	IfStatement	if ( sbw_state == SBW_SCALE )		1033035	0					
ANR	1035745	Condition	sbw_state == SBW_SCALE	1631:13:61114:61135	1033035	0	True				
ANR	1035746	EqualityExpression	sbw_state == SBW_SCALE		1033035	0		==			
ANR	1035747	Identifier	sbw_state		1033035	0					
ANR	1035748	Identifier	SBW_SCALE		1033035	1					
ANR	1035749	CompoundStatement		412:37:15972:15972	1033035	1					
ANR	1035750	ExpressionStatement	sbw [ 0 ] = ( double ) cr . sb_x / scale / em_scale_x	1632:8:61148:61193	1033035	0	True				
ANR	1035751	AssignmentExpression	sbw [ 0 ] = ( double ) cr . sb_x / scale / em_scale_x		1033035	0		=			
ANR	1035752	ArrayIndexing	sbw [ 0 ]		1033035	0					
ANR	1035753	Identifier	sbw		1033035	0					
ANR	1035754	PrimaryExpression	0		1033035	1					
ANR	1035755	MultiplicativeExpression	( double ) cr . sb_x / scale / em_scale_x		1033035	1		/			
ANR	1035756	CastExpression	( double ) cr . sb_x		1033035	0					
ANR	1035757	CastTarget	double		1033035	0					
ANR	1035758	MemberAccess	cr . sb_x		1033035	1					
ANR	1035759	Identifier	cr		1033035	0					
ANR	1035760	Identifier	sb_x		1033035	1					
ANR	1035761	MultiplicativeExpression	scale / em_scale_x		1033035	1		/			
ANR	1035762	Identifier	scale		1033035	0					
ANR	1035763	Identifier	em_scale_x		1033035	1					
ANR	1035764	ExpressionStatement	sbw [ 1 ] = ( double ) cr . sb_y / scale / em_scale_y	1633:8:61203:61248	1033035	1	True				
ANR	1035765	AssignmentExpression	sbw [ 1 ] = ( double ) cr . sb_y / scale / em_scale_y		1033035	0		=			
ANR	1035766	ArrayIndexing	sbw [ 1 ]		1033035	0					
ANR	1035767	Identifier	sbw		1033035	0					
ANR	1035768	PrimaryExpression	1		1033035	1					
ANR	1035769	MultiplicativeExpression	( double ) cr . sb_y / scale / em_scale_y		1033035	1		/			
ANR	1035770	CastExpression	( double ) cr . sb_y		1033035	0					
ANR	1035771	CastTarget	double		1033035	0					
ANR	1035772	MemberAccess	cr . sb_y		1033035	1					
ANR	1035773	Identifier	cr		1033035	0					
ANR	1035774	Identifier	sb_y		1033035	1					
ANR	1035775	MultiplicativeExpression	scale / em_scale_y		1033035	1		/			
ANR	1035776	Identifier	scale		1033035	0					
ANR	1035777	Identifier	em_scale_y		1033035	1					
ANR	1035778	ExpressionStatement	sbw [ 2 ] = ( double ) cr . aw_x / scale / em_scale_x	1634:8:61258:61303	1033035	2	True				
ANR	1035779	AssignmentExpression	sbw [ 2 ] = ( double ) cr . aw_x / scale / em_scale_x		1033035	0		=			
ANR	1035780	ArrayIndexing	sbw [ 2 ]		1033035	0					
ANR	1035781	Identifier	sbw		1033035	0					
ANR	1035782	PrimaryExpression	2		1033035	1					
ANR	1035783	MultiplicativeExpression	( double ) cr . aw_x / scale / em_scale_x		1033035	1		/			
ANR	1035784	CastExpression	( double ) cr . aw_x		1033035	0					
ANR	1035785	CastTarget	double		1033035	0					
ANR	1035786	MemberAccess	cr . aw_x		1033035	1					
ANR	1035787	Identifier	cr		1033035	0					
ANR	1035788	Identifier	aw_x		1033035	1					
ANR	1035789	MultiplicativeExpression	scale / em_scale_x		1033035	1		/			
ANR	1035790	Identifier	scale		1033035	0					
ANR	1035791	Identifier	em_scale_x		1033035	1					
ANR	1035792	ExpressionStatement	sbw [ 3 ] = ( double ) cr . aw_y / scale / em_scale_y	1635:8:61313:61358	1033035	3	True				
ANR	1035793	AssignmentExpression	sbw [ 3 ] = ( double ) cr . aw_y / scale / em_scale_y		1033035	0		=			
ANR	1035794	ArrayIndexing	sbw [ 3 ]		1033035	0					
ANR	1035795	Identifier	sbw		1033035	0					
ANR	1035796	PrimaryExpression	3		1033035	1					
ANR	1035797	MultiplicativeExpression	( double ) cr . aw_y / scale / em_scale_y		1033035	1		/			
ANR	1035798	CastExpression	( double ) cr . aw_y		1033035	0					
ANR	1035799	CastTarget	double		1033035	0					
ANR	1035800	MemberAccess	cr . aw_y		1033035	1					
ANR	1035801	Identifier	cr		1033035	0					
ANR	1035802	Identifier	aw_y		1033035	1					
ANR	1035803	MultiplicativeExpression	scale / em_scale_y		1033035	1		/			
ANR	1035804	Identifier	scale		1033035	0					
ANR	1035805	Identifier	em_scale_y		1033035	1					
ANR	1035806	IfStatement	if ( cr . metrics_type == gs_fapi_metrics_replace )		1033035	72					
ANR	1035807	Condition	cr . metrics_type == gs_fapi_metrics_replace	1639:8:61410:61451	1033035	0	True				
ANR	1035808	EqualityExpression	cr . metrics_type == gs_fapi_metrics_replace		1033035	0		==			
ANR	1035809	MemberAccess	cr . metrics_type		1033035	0					
ANR	1035810	Identifier	cr		1033035	0					
ANR	1035811	Identifier	metrics_type		1033035	1					
ANR	1035812	Identifier	gs_fapi_metrics_replace		1033035	1					
ANR	1035813	CompoundStatement		425:8:16436:16459	1033035	1					
ANR	1035814	IdentifierDeclStatement	int can_replace_metrics ;	1644:8:61602:61625	1033035	0	True				
ANR	1035815	IdentifierDecl	can_replace_metrics		1033035	0					
ANR	1035816	IdentifierDeclType	int		1033035	0					
ANR	1035817	Identifier	can_replace_metrics		1033035	1					
ANR	1035818	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) ) ) < 0 )"		1033035	1					
ANR	1035819	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) ) ) < 0"	1646:12:61640:61870	1033035	0	True				
ANR	1035820	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) ) ) < 0"		1033035	0		<			
ANR	1035821	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) )"		1033035	0		=			
ANR	1035822	Identifier	code		1033035	0					
ANR	1035823	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics ) )"		1033035	1					
ANR	1035824	Callee	gs_fapi_renderer_retcode		1033035	0					
ANR	1035825	Identifier	gs_fapi_renderer_retcode		1033035	0					
ANR	1035826	ArgumentList	mem		1033035	1					
ANR	1035827	Argument	mem		1033035	0					
ANR	1035828	Identifier	mem		1033035	0					
ANR	1035829	Argument	I		1033035	1					
ANR	1035830	Identifier	I		1033035	0					
ANR	1035831	Argument	"I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics )"		1033035	2					
ANR	1035832	CallExpression	"I -> can_replace_metrics ( I , & I -> ff , & cr , & can_replace_metrics )"		1033035	0					
ANR	1035833	Callee	I -> can_replace_metrics		1033035	0					
ANR	1035834	PtrMemberAccess	I -> can_replace_metrics		1033035	0					
ANR	1035835	Identifier	I		1033035	0					
ANR	1035836	Identifier	can_replace_metrics		1033035	1					
ANR	1035837	ArgumentList	I		1033035	1					
ANR	1035838	Argument	I		1033035	0					
ANR	1035839	Identifier	I		1033035	0					
ANR	1035840	Argument	& I -> ff		1033035	1					
ANR	1035841	UnaryOperationExpression	& I -> ff		1033035	0					
ANR	1035842	UnaryOperator	&		1033035	0					
ANR	1035843	PtrMemberAccess	I -> ff		1033035	1					
ANR	1035844	Identifier	I		1033035	0					
ANR	1035845	Identifier	ff		1033035	1					
ANR	1035846	Argument	& cr		1033035	2					
ANR	1035847	UnaryOperationExpression	& cr		1033035	0					
ANR	1035848	UnaryOperator	&		1033035	0					
ANR	1035849	Identifier	cr		1033035	1					
ANR	1035850	Argument	& can_replace_metrics		1033035	3					
ANR	1035851	UnaryOperationExpression	& can_replace_metrics		1033035	0					
ANR	1035852	UnaryOperator	&		1033035	0					
ANR	1035853	Identifier	can_replace_metrics		1033035	1					
ANR	1035854	PrimaryExpression	0		1033035	1					
ANR	1035855	ReturnStatement	return code ;	1651:12:61885:61896	1033035	1	True				
ANR	1035856	Identifier	code		1033035	0					
ANR	1035857	IfStatement	if ( ! can_replace_metrics )		1033035	2					
ANR	1035858	Condition	! can_replace_metrics	1652:12:61910:61929	1033035	0	True				
ANR	1035859	UnaryOperationExpression	! can_replace_metrics		1033035	0					
ANR	1035860	UnaryOperator	!		1033035	0					
ANR	1035861	Identifier	can_replace_metrics		1033035	1					
ANR	1035862	CompoundStatement		433:34:16766:16766	1033035	1					
ANR	1035863	ExpressionStatement	char_bbox . q . x -= char_bbox . p . x	1659:12:62243:62273	1033035	0	True				
ANR	1035864	AssignmentExpression	char_bbox . q . x -= char_bbox . p . x		1033035	0		-=			
ANR	1035865	MemberAccess	char_bbox . q . x		1033035	0					
ANR	1035866	MemberAccess	char_bbox . q		1033035	0					
ANR	1035867	Identifier	char_bbox		1033035	0					
ANR	1035868	Identifier	q		1033035	1					
ANR	1035869	Identifier	x		1033035	1					
ANR	1035870	MemberAccess	char_bbox . p . x		1033035	1					
ANR	1035871	MemberAccess	char_bbox . p		1033035	0					
ANR	1035872	Identifier	char_bbox		1033035	0					
ANR	1035873	Identifier	p		1033035	1					
ANR	1035874	Identifier	x		1033035	1					
ANR	1035875	ExpressionStatement	char_bbox . p . x = 0	1660:12:62287:62304	1033035	1	True				
ANR	1035876	AssignmentExpression	char_bbox . p . x = 0		1033035	0		=			
ANR	1035877	MemberAccess	char_bbox . p . x		1033035	0					
ANR	1035878	MemberAccess	char_bbox . p		1033035	0					
ANR	1035879	Identifier	char_bbox		1033035	0					
ANR	1035880	Identifier	p		1033035	1					
ANR	1035881	Identifier	x		1033035	1					
ANR	1035882	PrimaryExpression	0		1033035	1					
ANR	1035883	ExpressionStatement	"gs_distance_transform ( ( metrics . bbox_x0 / em_scale_x - sbw [ 0 ] ) , 0 , ctm , & penum_s -> fapi_glyph_shift )"	1661:12:62318:62450	1033035	2	True				
ANR	1035884	CallExpression	"gs_distance_transform ( ( metrics . bbox_x0 / em_scale_x - sbw [ 0 ] ) , 0 , ctm , & penum_s -> fapi_glyph_shift )"		1033035	0					
ANR	1035885	Callee	gs_distance_transform		1033035	0					
ANR	1035886	Identifier	gs_distance_transform		1033035	0					
ANR	1035887	ArgumentList	metrics . bbox_x0 / em_scale_x - sbw [ 0 ]		1033035	1					
ANR	1035888	Argument	metrics . bbox_x0 / em_scale_x - sbw [ 0 ]		1033035	0					
ANR	1035889	AdditiveExpression	metrics . bbox_x0 / em_scale_x - sbw [ 0 ]		1033035	0		-			
ANR	1035890	MultiplicativeExpression	metrics . bbox_x0 / em_scale_x		1033035	0		/			
ANR	1035891	MemberAccess	metrics . bbox_x0		1033035	0					
ANR	1035892	Identifier	metrics		1033035	0					
ANR	1035893	Identifier	bbox_x0		1033035	1					
ANR	1035894	Identifier	em_scale_x		1033035	1					
ANR	1035895	ArrayIndexing	sbw [ 0 ]		1033035	1					
ANR	1035896	Identifier	sbw		1033035	0					
ANR	1035897	PrimaryExpression	0		1033035	1					
ANR	1035898	Argument	0		1033035	1					
ANR	1035899	PrimaryExpression	0		1033035	0					
ANR	1035900	Argument	ctm		1033035	2					
ANR	1035901	Identifier	ctm		1033035	0					
ANR	1035902	Argument	& penum_s -> fapi_glyph_shift		1033035	3					
ANR	1035903	UnaryOperationExpression	& penum_s -> fapi_glyph_shift		1033035	0					
ANR	1035904	UnaryOperator	&		1033035	0					
ANR	1035905	PtrMemberAccess	penum_s -> fapi_glyph_shift		1033035	1					
ANR	1035906	Identifier	penum_s		1033035	0					
ANR	1035907	Identifier	fapi_glyph_shift		1033035	1					
ANR	1035908	ExpressionStatement	penum_s -> fapi_glyph_shift . x *= 1 << log2_scale . x	1663:12:62464:62512	1033035	3	True				
ANR	1035909	AssignmentExpression	penum_s -> fapi_glyph_shift . x *= 1 << log2_scale . x		1033035	0		*=			
ANR	1035910	MemberAccess	penum_s -> fapi_glyph_shift . x		1033035	0					
ANR	1035911	PtrMemberAccess	penum_s -> fapi_glyph_shift		1033035	0					
ANR	1035912	Identifier	penum_s		1033035	0					
ANR	1035913	Identifier	fapi_glyph_shift		1033035	1					
ANR	1035914	Identifier	x		1033035	1					
ANR	1035915	ShiftExpression	1 << log2_scale . x		1033035	1		<<			
ANR	1035916	PrimaryExpression	1		1033035	0					
ANR	1035917	MemberAccess	log2_scale . x		1033035	1					
ANR	1035918	Identifier	log2_scale		1033035	0					
ANR	1035919	Identifier	x		1033035	1					
ANR	1035920	ExpressionStatement	penum_s -> fapi_glyph_shift . y *= 1 << log2_scale . y	1664:12:62526:62574	1033035	4	True				
ANR	1035921	AssignmentExpression	penum_s -> fapi_glyph_shift . y *= 1 << log2_scale . y		1033035	0		*=			
ANR	1035922	MemberAccess	penum_s -> fapi_glyph_shift . y		1033035	0					
ANR	1035923	PtrMemberAccess	penum_s -> fapi_glyph_shift		1033035	0					
ANR	1035924	Identifier	penum_s		1033035	0					
ANR	1035925	Identifier	fapi_glyph_shift		1033035	1					
ANR	1035926	Identifier	y		1033035	1					
ANR	1035927	ShiftExpression	1 << log2_scale . y		1033035	1		<<			
ANR	1035928	PrimaryExpression	1		1033035	0					
ANR	1035929	MemberAccess	log2_scale . y		1033035	1					
ANR	1035930	Identifier	log2_scale		1033035	0					
ANR	1035931	Identifier	y		1033035	1					
ANR	1035932	IfStatement	if ( I -> ff . metrics_only )		1033035	73					
ANR	1035933	Condition	I -> ff . metrics_only	1696:8:64008:64025	1033035	0	True				
ANR	1035934	MemberAccess	I -> ff . metrics_only		1033035	0					
ANR	1035935	PtrMemberAccess	I -> ff		1033035	0					
ANR	1035936	Identifier	I		1033035	0					
ANR	1035937	Identifier	ff		1033035	1					
ANR	1035938	Identifier	metrics_only		1033035	1					
ANR	1035939	CompoundStatement		477:28:18862:18862	1033035	1					
ANR	1035940	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING	1697:8:64038:64084	1033035	0	True				
ANR	1035941	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING		1033035	0		=			
ANR	1035942	PtrMemberAccess	pgs -> in_cachedevice		1033035	0					
ANR	1035943	Identifier	pgs		1033035	0					
ANR	1035944	Identifier	in_cachedevice		1033035	1					
ANR	1035945	Identifier	CACHE_DEVICE_NOT_CACHING		1033035	1					
ANR	1035946	IfStatement	if ( pgs -> in_cachedevice == CACHE_DEVICE_CACHING )		1033035	74					
ANR	1035947	Condition	pgs -> in_cachedevice == CACHE_DEVICE_CACHING	1700:8:64101:64143	1033035	0	True				
ANR	1035948	EqualityExpression	pgs -> in_cachedevice == CACHE_DEVICE_CACHING		1033035	0		==			
ANR	1035949	PtrMemberAccess	pgs -> in_cachedevice		1033035	0					
ANR	1035950	Identifier	pgs		1033035	0					
ANR	1035951	Identifier	in_cachedevice		1033035	1					
ANR	1035952	Identifier	CACHE_DEVICE_CACHING		1033035	1					
ANR	1035953	CompoundStatement		481:53:18980:18980	1033035	1					
ANR	1035954	ExpressionStatement	sbwp = sbw	1701:8:64156:64166	1033035	0	True				
ANR	1035955	AssignmentExpression	sbwp = sbw		1033035	0		=			
ANR	1035956	Identifier	sbwp		1033035	0					
ANR	1035957	Identifier	sbw		1033035	1					
ANR	1035958	ElseStatement	else		1033035	0					
ANR	1035959	CompoundStatement		484:9:19017:19017	1033035	0					
ANR	1035960	ExpressionStatement	sbwp = NULL	1708:8:64394:64405	1033035	0	True				
ANR	1035961	AssignmentExpression	sbwp = NULL		1033035	0		=			
ANR	1035962	Identifier	sbwp		1033035	0					
ANR	1035963	Identifier	NULL		1033035	1					
ANR	1035964	IfStatement	if ( I -> use_outline )		1033035	1					
ANR	1035965	Condition	I -> use_outline	1710:12:64420:64433	1033035	0	True				
ANR	1035966	PtrMemberAccess	I -> use_outline		1033035	0					
ANR	1035967	Identifier	I		1033035	0					
ANR	1035968	Identifier	use_outline		1033035	1					
ANR	1035969	CompoundStatement		491:28:19270:19270	1033035	1					
ANR	1035970	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING	1715:12:64614:64660	1033035	0	True				
ANR	1035971	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING		1033035	0		=			
ANR	1035972	PtrMemberAccess	pgs -> in_cachedevice		1033035	0					
ANR	1035973	Identifier	pgs		1033035	0					
ANR	1035974	Identifier	in_cachedevice		1033035	1					
ANR	1035975	Identifier	CACHE_DEVICE_NOT_CACHING		1033035	1					
ANR	1035976	IfStatement	if ( bCID )		1033035	75					
ANR	1035977	Condition	bCID	1719:8:64687:64690	1033035	0	True				
ANR	1035978	Identifier	bCID		1033035	0					
ANR	1035979	CompoundStatement		500:14:19527:19527	1033035	1					
ANR	1035980	ExpressionStatement	"code = I -> ff . fapi_set_cache ( penum , pbfont , & enc_char_name_string , index , sbw + 2 , & char_bbox , sbwp , & imagenow )"	1720:8:64703:64858	1033035	0	True				
ANR	1035981	AssignmentExpression	"code = I -> ff . fapi_set_cache ( penum , pbfont , & enc_char_name_string , index , sbw + 2 , & char_bbox , sbwp , & imagenow )"		1033035	0		=			
ANR	1035982	Identifier	code		1033035	0					
ANR	1035983	CallExpression	"I -> ff . fapi_set_cache ( penum , pbfont , & enc_char_name_string , index , sbw + 2 , & char_bbox , sbwp , & imagenow )"		1033035	1					
ANR	1035984	Callee	I -> ff . fapi_set_cache		1033035	0					
ANR	1035985	MemberAccess	I -> ff . fapi_set_cache		1033035	0					
ANR	1035986	PtrMemberAccess	I -> ff		1033035	0					
ANR	1035987	Identifier	I		1033035	0					
ANR	1035988	Identifier	ff		1033035	1					
ANR	1035989	Identifier	fapi_set_cache		1033035	1					
ANR	1035990	ArgumentList	penum		1033035	1					
ANR	1035991	Argument	penum		1033035	0					
ANR	1035992	Identifier	penum		1033035	0					
ANR	1035993	Argument	pbfont		1033035	1					
ANR	1035994	Identifier	pbfont		1033035	0					
ANR	1035995	Argument	& enc_char_name_string		1033035	2					
ANR	1035996	UnaryOperationExpression	& enc_char_name_string		1033035	0					
ANR	1035997	UnaryOperator	&		1033035	0					
ANR	1035998	Identifier	enc_char_name_string		1033035	1					
ANR	1035999	Argument	index		1033035	3					
ANR	1036000	Identifier	index		1033035	0					
ANR	1036001	Argument	sbw + 2		1033035	4					
ANR	1036002	AdditiveExpression	sbw + 2		1033035	0		+			
ANR	1036003	Identifier	sbw		1033035	0					
ANR	1036004	PrimaryExpression	2		1033035	1					
ANR	1036005	Argument	& char_bbox		1033035	5					
ANR	1036006	UnaryOperationExpression	& char_bbox		1033035	0					
ANR	1036007	UnaryOperator	&		1033035	0					
ANR	1036008	Identifier	char_bbox		1033035	1					
ANR	1036009	Argument	sbwp		1033035	6					
ANR	1036010	Identifier	sbwp		1033035	0					
ANR	1036011	Argument	& imagenow		1033035	7					
ANR	1036012	UnaryOperationExpression	& imagenow		1033035	0					
ANR	1036013	UnaryOperator	&		1033035	0					
ANR	1036014	Identifier	imagenow		1033035	1					
ANR	1036015	ElseStatement	else		1033035	0					
ANR	1036016	CompoundStatement		505:9:19709:19709	1033035	0					
ANR	1036017	ExpressionStatement	"code = I -> ff . fapi_set_cache ( penum , pbfont , & enc_char_name_string , - 1 , sbw + 2 , & char_bbox , sbwp , & imagenow )"	1725:8:64885:65037	1033035	0	True				
ANR	1036018	AssignmentExpression	"code = I -> ff . fapi_set_cache ( penum , pbfont , & enc_char_name_string , - 1 , sbw + 2 , & char_bbox , sbwp , & imagenow )"		1033035	0		=			
ANR	1036019	Identifier	code		1033035	0					
ANR	1036020	CallExpression	"I -> ff . fapi_set_cache ( penum , pbfont , & enc_char_name_string , - 1 , sbw + 2 , & char_bbox , sbwp , & imagenow )"		1033035	1					
ANR	1036021	Callee	I -> ff . fapi_set_cache		1033035	0					
ANR	1036022	MemberAccess	I -> ff . fapi_set_cache		1033035	0					
ANR	1036023	PtrMemberAccess	I -> ff		1033035	0					
ANR	1036024	Identifier	I		1033035	0					
ANR	1036025	Identifier	ff		1033035	1					
ANR	1036026	Identifier	fapi_set_cache		1033035	1					
ANR	1036027	ArgumentList	penum		1033035	1					
ANR	1036028	Argument	penum		1033035	0					
ANR	1036029	Identifier	penum		1033035	0					
ANR	1036030	Argument	pbfont		1033035	1					
ANR	1036031	Identifier	pbfont		1033035	0					
ANR	1036032	Argument	& enc_char_name_string		1033035	2					
ANR	1036033	UnaryOperationExpression	& enc_char_name_string		1033035	0					
ANR	1036034	UnaryOperator	&		1033035	0					
ANR	1036035	Identifier	enc_char_name_string		1033035	1					
ANR	1036036	Argument	- 1		1033035	3					
ANR	1036037	UnaryOperationExpression	- 1		1033035	0					
ANR	1036038	UnaryOperator	-		1033035	0					
ANR	1036039	PrimaryExpression	1		1033035	1					
ANR	1036040	Argument	sbw + 2		1033035	4					
ANR	1036041	AdditiveExpression	sbw + 2		1033035	0		+			
ANR	1036042	Identifier	sbw		1033035	0					
ANR	1036043	PrimaryExpression	2		1033035	1					
ANR	1036044	Argument	& char_bbox		1033035	5					
ANR	1036045	UnaryOperationExpression	& char_bbox		1033035	0					
ANR	1036046	UnaryOperator	&		1033035	0					
ANR	1036047	Identifier	char_bbox		1033035	1					
ANR	1036048	Argument	sbwp		1033035	6					
ANR	1036049	Identifier	sbwp		1033035	0					
ANR	1036050	Argument	& imagenow		1033035	7					
ANR	1036051	UnaryOperationExpression	& imagenow		1033035	0					
ANR	1036052	UnaryOperator	&		1033035	0					
ANR	1036053	Identifier	imagenow		1033035	1					
ANR	1036054	IfStatement	if ( code >= 0 && imagenow == true )		1033035	76					
ANR	1036055	Condition	code >= 0 && imagenow == true	1736:8:65348:65376	1033035	0	True				
ANR	1036056	AndExpression	code >= 0 && imagenow == true		1033035	0		&&			
ANR	1036057	RelationalExpression	code >= 0		1033035	0		>=			
ANR	1036058	Identifier	code		1033035	0					
ANR	1036059	PrimaryExpression	0		1033035	1					
ANR	1036060	EqualityExpression	imagenow == true		1033035	1		==			
ANR	1036061	Identifier	imagenow		1033035	0					
ANR	1036062	Identifier	true		1033035	1					
ANR	1036063	CompoundStatement		517:39:20213:20213	1033035	1					
ANR	1036064	ExpressionStatement	"code = gs_fapi_finish_render ( pfont , pgs , penum , I )"	1737:8:65389:65439	1033035	0	True				
ANR	1036065	AssignmentExpression	"code = gs_fapi_finish_render ( pfont , pgs , penum , I )"		1033035	0		=			
ANR	1036066	Identifier	code		1033035	0					
ANR	1036067	CallExpression	"gs_fapi_finish_render ( pfont , pgs , penum , I )"		1033035	1					
ANR	1036068	Callee	gs_fapi_finish_render		1033035	0					
ANR	1036069	Identifier	gs_fapi_finish_render		1033035	0					
ANR	1036070	ArgumentList	pfont		1033035	1					
ANR	1036071	Argument	pfont		1033035	0					
ANR	1036072	Identifier	pfont		1033035	0					
ANR	1036073	Argument	pgs		1033035	1					
ANR	1036074	Identifier	pgs		1033035	0					
ANR	1036075	Argument	penum		1033035	2					
ANR	1036076	Identifier	penum		1033035	0					
ANR	1036077	Argument	I		1033035	3					
ANR	1036078	Identifier	I		1033035	0					
ANR	1036079	ExpressionStatement	I -> release_char_data ( I )	1738:8:65449:65472	1033035	1	True				
ANR	1036080	CallExpression	I -> release_char_data ( I )		1033035	0					
ANR	1036081	Callee	I -> release_char_data		1033035	0					
ANR	1036082	PtrMemberAccess	I -> release_char_data		1033035	0					
ANR	1036083	Identifier	I		1033035	0					
ANR	1036084	Identifier	release_char_data		1033035	1					
ANR	1036085	ArgumentList	I		1033035	1					
ANR	1036086	Argument	I		1033035	0					
ANR	1036087	Identifier	I		1033035	0					
ANR	1036088	IfStatement	if ( code != 0 )		1033035	77					
ANR	1036089	Condition	code != 0	1741:8:65489:65497	1033035	0	True				
ANR	1036090	EqualityExpression	code != 0		1033035	0		!=			
ANR	1036091	Identifier	code		1033035	0					
ANR	1036092	PrimaryExpression	0		1033035	1					
ANR	1036093	CompoundStatement		522:19:20334:20334	1033035	1					
ANR	1036094	IfStatement	if ( code < 0 )		1033035	0					
ANR	1036095	Condition	code < 0	1742:12:65514:65521	1033035	0	True				
ANR	1036096	RelationalExpression	code < 0		1033035	0		<			
ANR	1036097	Identifier	code		1033035	0					
ANR	1036098	PrimaryExpression	0		1033035	1					
ANR	1036099	CompoundStatement		523:22:20358:20358	1033035	1					
ANR	1036100	ExpressionStatement	I -> release_char_data ( I )	1744:12:65565:65588	1033035	0	True				
ANR	1036101	CallExpression	I -> release_char_data ( I )		1033035	0					
ANR	1036102	Callee	I -> release_char_data		1033035	0					
ANR	1036103	PtrMemberAccess	I -> release_char_data		1033035	0					
ANR	1036104	Identifier	I		1033035	0					
ANR	1036105	Identifier	release_char_data		1033035	1					
ANR	1036106	ArgumentList	I		1033035	1					
ANR	1036107	Argument	I		1033035	0					
ANR	1036108	Identifier	I		1033035	0					
ANR	1036109	ElseStatement	else		1033035	0					
ANR	1036110	CompoundStatement		527:13:20447:20447	1033035	0					
ANR	1036111	ReturnStatement	return code ;	1751:4:65714:65725	1033035	78	True				
ANR	1036112	Identifier	code		1033035	0					
ANR	1036113	ReturnType	int		1033035	1					
ANR	1036114	Identifier	gs_fapi_do_char		1033035	2					
ANR	1036115	ParameterList	"gs_font * pfont , gs_gstate * pgs , gs_text_enum_t * penum , char * font_file_path , bool bBuildGlyph , gs_string * charstring , gs_string * glyphname , gs_char chr , gs_glyph index , int subfont"		1033035	3					
ANR	1036116	Parameter	gs_font * pfont	1217:16:44951:44964	1033035	0	True				
ANR	1036117	ParameterType	gs_font *		1033035	0					
ANR	1036118	Identifier	pfont		1033035	1					
ANR	1036119	Parameter	gs_gstate * pgs	1217:32:44967:44980	1033035	1	True				
ANR	1036120	ParameterType	gs_gstate *		1033035	0					
ANR	1036121	Identifier	pgs		1033035	1					
ANR	1036122	Parameter	gs_text_enum_t * penum	1217:48:44983:45003	1033035	2	True				
ANR	1036123	ParameterType	gs_text_enum_t *		1033035	0					
ANR	1036124	Identifier	penum		1033035	1					
ANR	1036125	Parameter	char * font_file_path	1217:71:45006:45025	1033035	3	True				
ANR	1036126	ParameterType	char *		1033035	0					
ANR	1036127	Identifier	font_file_path		1033035	1					
ANR	1036128	Parameter	bool bBuildGlyph	1218:16:45044:45059	1033035	4	True				
ANR	1036129	ParameterType	bool		1033035	0					
ANR	1036130	Identifier	bBuildGlyph		1033035	1					
ANR	1036131	Parameter	gs_string * charstring	1218:34:45062:45082	1033035	5	True				
ANR	1036132	ParameterType	gs_string *		1033035	0					
ANR	1036133	Identifier	charstring		1033035	1					
ANR	1036134	Parameter	gs_string * glyphname	1218:57:45085:45104	1033035	6	True				
ANR	1036135	ParameterType	gs_string *		1033035	0					
ANR	1036136	Identifier	glyphname		1033035	1					
ANR	1036137	Parameter	gs_char chr	1219:16:45123:45133	1033035	7	True				
ANR	1036138	ParameterType	gs_char		1033035	0					
ANR	1036139	Identifier	chr		1033035	1					
ANR	1036140	Parameter	gs_glyph index	1219:29:45136:45149	1033035	8	True				
ANR	1036141	ParameterType	gs_glyph		1033035	0					
ANR	1036142	Identifier	index		1033035	1					
ANR	1036143	Parameter	int subfont	1219:45:45152:45162	1033035	9	True				
ANR	1036144	ParameterType	int		1033035	0					
ANR	1036145	Identifier	subfont		1033035	1					
ANR	1036146	CFGEntryNode	ENTRY		1033035		True				
ANR	1036147	CFGExitNode	EXIT		1033035		True				
ANR	1036148	Symbol	& font_scale		1033035						
ANR	1036149	Symbol	gs_currentaligntopixels		1033035						
ANR	1036150	Symbol	* pgs		1033035						
ANR	1036151	Symbol	sbw		1033035						
ANR	1036152	Symbol	I -> get_scaled_font		1033035						
ANR	1036153	Symbol	pbfont -> base		1033035						
ANR	1036154	Symbol	pfont1 -> data . nominalWidthX		1033035						
ANR	1036155	Symbol	dev		1033035						
ANR	1036156	Symbol	scale_mat . xy		1033035						
ANR	1036157	Symbol	enc_char_name_string		1033035						
ANR	1036158	Symbol	scale_mat . xx		1033035						
ANR	1036159	Symbol	gs_fapi_toplevel_prepared		1033035						
ANR	1036160	Symbol	& I -> face		1033035						
ANR	1036161	Symbol	* font_scale . subpixels		1033035						
ANR	1036162	Symbol	ctm		1033035						
ANR	1036163	Symbol	I -> ff		1033035						
ANR	1036164	Symbol	penum_s -> fapi_glyph_shift		1033035						
ANR	1036165	Symbol	gs_no_id		1033035						
ANR	1036166	Symbol	font_scale . HWResolution		1033035						
ANR	1036167	Symbol	subfont		1033035						
ANR	1036168	Symbol	I -> face . font_id		1033035						
ANR	1036169	Symbol	fapi_gs_char_show_width_only		1033035						
ANR	1036170	Symbol	* * pbfont		1033035						
ANR	1036171	Symbol	bVertical		1033035						
ANR	1036172	Symbol	pbfont -> id		1033035						
ANR	1036173	Symbol	MTX_EQ		1033035						
ANR	1036174	Symbol	* cr		1033035						
ANR	1036175	Symbol	scale_mat . yx		1033035						
ANR	1036176	Symbol	scale_mat . yy		1033035						
ANR	1036177	Symbol	* pwv		1033035						
ANR	1036178	Symbol	metrics		1033035						
ANR	1036179	Symbol	pbfont -> dir -> ccache . upper		1033035						
ANR	1036180	Symbol	I -> ff . is_mtx_skipped		1033035						
ANR	1036181	Symbol	pfcid -> cidata . MetricsCount		1033035						
ANR	1036182	Symbol	pbfont -> dir -> ccache		1033035						
ANR	1036183	Symbol	* dev_proc		1033035						
ANR	1036184	Symbol	& scale_mat		1033035						
ANR	1036185	Symbol	font_scale . subpixels		1033035						
ANR	1036186	Symbol	enc_char_name_string . data		1033035						
ANR	1036187	Symbol	penum_s -> fapi_glyph_shift . x		1033035						
ANR	1036188	Symbol	I		1033035						
ANR	1036189	Symbol	penum_s -> fapi_glyph_shift . y		1033035						
ANR	1036190	Symbol	"* dev_proc ( dev , get_alpha_bits )"		1033035						
ANR	1036191	Symbol	min		1033035						
ANR	1036192	Symbol	pfont -> FontType		1033035						
ANR	1036193	Symbol	pfont42 -> data . unitsPerEm		1033035						
ANR	1036194	Symbol	SBW_DONE		1033035						
ANR	1036195	Symbol	hypot		1033035						
ANR	1036196	Symbol	gs_error_limitcheck		1033035						
ANR	1036197	Symbol	gs_rootfont		1033035						
ANR	1036198	Symbol	pfont42		1033035						
ANR	1036199	Symbol	bVertical0		1033035						
ANR	1036200	Symbol	pbfont -> FontBBox		1033035						
ANR	1036201	Symbol	char_bbox		1033035						
ANR	1036202	Symbol	l		1033035						
ANR	1036203	Symbol	& imagenow		1033035						
ANR	1036204	Symbol	I -> ff . client_ctx_p		1033035						
ANR	1036205	Symbol	cr		1033035						
ANR	1036206	Symbol	dev -> HWResolution		1033035						
ANR	1036207	Symbol	cr . metrics_scale		1033035						
ANR	1036208	Symbol	w		1033035						
ANR	1036209	Symbol	char_bbox . p . x		1033035						
ANR	1036210	Symbol	char_bbox . p . y		1033035						
ANR	1036211	Symbol	penum_s		1033035						
ANR	1036212	Symbol	FAPI_ISTYPE1GLYPHDATA		1033035						
ANR	1036213	Symbol	data_ptr		1033035						
ANR	1036214	Symbol	I -> frac_shift		1033035						
ANR	1036215	Symbol	* * I		1033035						
ANR	1036216	Symbol	* pbfont -> FAPI		1033035						
ANR	1036217	Symbol	gs_error_undefined		1033035						
ANR	1036218	Symbol	I -> ff . fapi_set_cache		1033035						
ANR	1036219	Symbol	I -> ff . is_outline_font		1033035						
ANR	1036220	Symbol	* I -> face		1033035						
ANR	1036221	Symbol	I -> ff . get_glyphdirectory_data		1033035						
ANR	1036222	Symbol	I -> ff . is_vertical		1033035						
ANR	1036223	Symbol	_fixed_shift		1033035						
ANR	1036224	Symbol	* pfont1		1033035						
ANR	1036225	Symbol	font_scale . align_to_pixels		1033035						
ANR	1036226	Symbol	I -> face . log2_scale . x		1033035						
ANR	1036227	Symbol	metrics . v_escapement		1033035						
ANR	1036228	Symbol	I -> face . log2_scale . y		1033035						
ANR	1036229	Symbol	chr		1033035						
ANR	1036230	Symbol	I -> get_char_outline_metrics		1033035						
ANR	1036231	Symbol	I -> ff . server_font_data		1033035						
ANR	1036232	Symbol	& cr		1033035						
ANR	1036233	Symbol	I -> ff . memory		1033035						
ANR	1036234	Symbol	ft_MicroType		1033035						
ANR	1036235	Symbol	em_scale_x		1033035						
ANR	1036236	Symbol	* I -> face . HWResolution		1033035						
ANR	1036237	Symbol	em_scale_y		1033035						
ANR	1036238	Symbol	gs_error_unregistered		1033035						
ANR	1036239	Symbol	MetricsCount		1033035						
ANR	1036240	Symbol	I -> grid_fit		1033035						
ANR	1036241	Symbol	gs_fapi_metrics_replace_width		1033035						
ANR	1036242	Symbol	pbfont -> FAPI_font_data		1033035						
ANR	1036243	Symbol	recreate_multiple_master		1033035						
ANR	1036244	Symbol	bCID		1033035						
ANR	1036245	Symbol	pfont42 -> data		1033035						
ANR	1036246	Symbol	I -> ff . metrics_only		1033035						
ANR	1036247	Symbol	dev_proc		1033035						
ANR	1036248	Symbol	I -> get_fontmatrix		1033035						
ANR	1036249	Symbol	pgs -> in_cachedevice		1033035						
ANR	1036250	Symbol	gs_fapi_metrics_notdef		1033035						
ANR	1036251	Symbol	TEXT_DO_NONE		1033035						
ANR	1036252	Symbol	SBW_FROM_RENDERER		1033035						
ANR	1036253	Symbol	pfcid -> cidata		1033035						
ANR	1036254	Symbol	I -> face . ctm		1033035						
ANR	1036255	Symbol	pbfont -> FontBBox . p . y		1033035						
ANR	1036256	Symbol	pbfont -> FontBBox . p . x		1033035						
ANR	1036257	Symbol	pbfont -> FontBBox . p		1033035						
ANR	1036258	Symbol	pfont		1033035						
ANR	1036259	Symbol	FAPI_ISCIDFONT		1033035						
ANR	1036260	Symbol	pbfont -> FontBBox . q		1033035						
ANR	1036261	Symbol	false		1033035						
ANR	1036262	Symbol	font_scale . matrix		1033035						
ANR	1036263	Symbol	alpha_bits		1033035						
ANR	1036264	Symbol	* dev -> HWResolution		1033035						
ANR	1036265	Symbol	log2_scale		1033035						
ANR	1036266	Symbol	gs_error_VMerror		1033035						
ANR	1036267	Symbol	gs_fapi_renderer_retcode		1033035						
ANR	1036268	Symbol	font_file_path		1033035						
ANR	1036269	Symbol	scale_mat		1033035						
ANR	1036270	Symbol	pbfont -> FAPI -> face		1033035						
ANR	1036271	Symbol	charstring		1033035						
ANR	1036272	Symbol	sbw_state		1033035						
ANR	1036273	Symbol	pbfont -> memory		1033035						
ANR	1036274	Symbol	metrics . bbox_x1		1033035						
ANR	1036275	Symbol	cr . char_codes		1033035						
ANR	1036276	Symbol	metrics . bbox_y0		1033035						
ANR	1036277	Symbol	FontMatrix_div		1033035						
ANR	1036278	Symbol	metrics . bbox_y1		1033035						
ANR	1036279	Symbol	gs_currentdevice_inline		1033035						
ANR	1036280	Symbol	& scale_ctm		1033035						
ANR	1036281	Symbol	* gs_rootfont		1033035						
ANR	1036282	Symbol	log2_scale . y		1033035						
ANR	1036283	Symbol	* cr . char_codes		1033035						
ANR	1036284	Symbol	log2_scale . x		1033035						
ANR	1036285	Symbol	pbfont -> FAPI		1033035						
ANR	1036286	Symbol	gs_matrix_multiply		1033035						
ANR	1036287	Symbol	I -> face . HWResolution		1033035						
ANR	1036288	Symbol	penum		1033035						
ANR	1036289	Symbol	get_alpha_bits		1033035						
ANR	1036290	Symbol	* pfcid		1033035						
ANR	1036291	Symbol	& penum_s -> fapi_glyph_shift		1033035						
ANR	1036292	Symbol	index		1033035						
ANR	1036293	Symbol	I -> face . log2_scale		1033035						
ANR	1036294	Symbol	* font_scale . HWResolution		1033035						
ANR	1036295	Symbol	metrics . escapement		1033035						
ANR	1036296	Symbol	cr . client_char_code		1033035						
ANR	1036297	Symbol	I -> ff . client_font_data		1033035						
ANR	1036298	Symbol	fapi_round		1033035						
ANR	1036299	Symbol	CACHE_DEVICE_NOT_CACHING		1033035						
ANR	1036300	Symbol	penum_s -> fapi_log2_scale . y		1033035						
ANR	1036301	Symbol	penum_s -> fapi_log2_scale . x		1033035						
ANR	1036302	Symbol	* dev		1033035						
ANR	1036303	Symbol	I -> ff . fapi_get_metrics		1033035						
ANR	1036304	Symbol	pfont -> memory		1033035						
ANR	1036305	Symbol	cr . metrics_type		1033035						
ANR	1036306	Symbol	I -> use_outline		1033035						
ANR	1036307	Symbol	& I -> face . ctm		1033035						
ANR	1036308	Symbol	I -> ff . is_cid		1033035						
ANR	1036309	Symbol	* font_scale		1033035						
ANR	1036310	Symbol	pwv		1033035						
ANR	1036311	Symbol	I -> ff . font_file_path		1033035						
ANR	1036312	Symbol	pfcid		1033035						
ANR	1036313	Symbol	char_bbox . p		1033035						
ANR	1036314	Symbol	char_bbox . q		1033035						
ANR	1036315	Symbol	pbfont -> FontType		1033035						
ANR	1036316	Symbol	gs_fapi_get_metrics_count		1033035						
ANR	1036317	Symbol	I -> can_replace_metrics		1033035						
ANR	1036318	Symbol	go_text		1033035						
ANR	1036319	Symbol	imagenow		1033035						
ANR	1036320	Symbol	SBW_SCALE		1033035						
ANR	1036321	Symbol	penum_s -> fapi_log2_scale		1033035						
ANR	1036322	Symbol	pgs		1033035						
ANR	1036323	Symbol	sbwp		1033035						
ANR	1036324	Symbol	MAX_CCACHE_TEMP_BITMAP_BITS		1033035						
ANR	1036325	Symbol	bIsType1GlyphData		1033035						
ANR	1036326	Symbol	I -> client_ctx_p		1033035						
ANR	1036327	Symbol	export_shift		1033035						
ANR	1036328	Symbol	max		1033035						
ANR	1036329	Symbol	* font_scale . matrix		1033035						
ANR	1036330	Symbol	* * dev		1033035						
ANR	1036331	Symbol	pbfont -> FontBBox . q . x		1033035						
ANR	1036332	Symbol	GS_NO_GLYPH		1033035						
ANR	1036333	Symbol	* sbw		1033035						
ANR	1036334	Symbol	pbfont -> FontBBox . q . y		1033035						
ANR	1036335	Symbol	I -> face		1033035						
ANR	1036336	Symbol	* ctm		1033035						
ANR	1036337	Symbol	I -> face . align_to_pixels		1033035						
ANR	1036338	Symbol	gs_matrix_invert		1033035						
ANR	1036339	Symbol	& can_replace_metrics		1033035						
ANR	1036340	Symbol	cr . char_codes_count		1033035						
ANR	1036341	Symbol	& data_ptr		1033035						
ANR	1036342	Symbol	& metrics		1033035						
ANR	1036343	Symbol	gs_rootfont ( pgs ) -> WMode		1033035						
ANR	1036344	Symbol	gs_fapi_finish_render		1033035						
ANR	1036345	Symbol	scale_mat . ty		1033035						
ANR	1036346	Symbol	align_to_pixels		1033035						
ANR	1036347	Symbol	can_replace_metrics		1033035						
ANR	1036348	Symbol	I -> ff . is_type1		1033035						
ANR	1036349	Symbol	pfont1 -> data . defaultWidthX		1033035						
ANR	1036350	Symbol	CACHE_DEVICE_CACHING		1033035						
ANR	1036351	Symbol	scale_mat . tx		1033035						
ANR	1036352	Symbol	pbfont -> StrokeWidth		1033035						
ANR	1036353	Symbol	* penum_s		1033035						
ANR	1036354	Symbol	* pbfont -> dir		1033035						
ANR	1036355	Symbol	produce_outline_char		1033035						
ANR	1036356	Symbol	* pbfont		1033035						
ANR	1036357	Symbol	pbfont -> dir		1033035						
ANR	1036358	Symbol	scale_ctm . yy		1033035						
ANR	1036359	Symbol	bBuildGlyph		1033035						
ANR	1036360	Symbol	pfont1		1033035						
ANR	1036361	Symbol	NULL		1033035						
ANR	1036362	Symbol	SHOW_IS		1033035						
ANR	1036363	Symbol	pfont1 -> data		1033035						
ANR	1036364	Symbol	scale_ctm		1033035						
ANR	1036365	Symbol	true		1033035						
ANR	1036366	Symbol	pbfont -> FAPI -> face . font_id		1033035						
ANR	1036367	Symbol	scale_ctm . xx		1033035						
ANR	1036368	Symbol	& log2_scale		1033035						
ANR	1036369	Symbol	GET_U16_MSB		1033035						
ANR	1036370	Symbol	code		1033035						
ANR	1036371	Symbol	& pbfont -> FAPI_font_data		1033035						
ANR	1036372	Symbol	cr . aw_x		1033035						
ANR	1036373	Symbol	cr . aw_y		1033035						
ANR	1036374	Symbol	& char_bbox		1033035						
ANR	1036375	Symbol	scale		1033035						
ANR	1036376	Symbol	ft_TrueType		1033035						
ANR	1036377	Symbol	I -> get_char_raster_metrics		1033035						
ANR	1036378	Symbol	pbfont -> dir -> grid_fit_tt		1033035						
ANR	1036379	Symbol	pbfont -> PaintType		1033035						
ANR	1036380	Symbol	glyphname		1033035						
ANR	1036381	Symbol	* I		1033035						
ANR	1036382	Symbol	mem		1033035						
ANR	1036383	Symbol	& I -> ff		1033035						
ANR	1036384	Symbol	cr . is_glyph_index		1033035						
ANR	1036385	Symbol	gs_fapi_metrics_add		1033035						
ANR	1036386	Symbol	& em_scale_y		1033035						
ANR	1036387	Symbol	& em_scale_x		1033035						
ANR	1036388	Symbol	char_bbox . q . y		1033035						
ANR	1036389	Symbol	& ctm_only		1033035						
ANR	1036390	Symbol	fixed2float		1033035						
ANR	1036391	Symbol	I -> ff . get_glyphname_or_cid		1033035						
ANR	1036392	Symbol	I -> ff . client_font_data2		1033035						
ANR	1036393	Symbol	enc_char_name_string . size		1033035						
ANR	1036394	Symbol	GET_S16_MSB		1033035						
ANR	1036395	Symbol	char_bbox . q . x		1033035						
ANR	1036396	Symbol	cr . sb_x		1033035						
ANR	1036397	Symbol	* pfont42		1033035						
ANR	1036398	Symbol	I -> ff . subfont		1033035						
ANR	1036399	Symbol	metrics . bbox_x0		1033035						
ANR	1036400	Symbol	pbfont		1033035						
ANR	1036401	Symbol	* pfont		1033035						
ANR	1036402	Symbol	& enc_char_name_string		1033035						
ANR	1036403	Symbol	cr . sb_y		1033035						
ANR	1036404	Symbol	font_scale		1033035						
ANR	1036405	Symbol	I -> max_bitmap		1033035						
ANR	1036406	Symbol	gs_fapi_metrics_replace		1033035						
ANR	1036407	Function	gs_fapi_get_font_info	1754:0:65730:66054							
ANR	1036408	FunctionDef	"gs_fapi_get_font_info (gs_font * pfont , gs_fapi_font_info item , int index , void * data , int * data_len)"		1036407	0					
ANR	1036409	CompoundStatement		1757:0:65856:66054	1036407	0					
ANR	1036410	IdentifierDeclStatement	int code = 0 ;	1758:4:65862:65874	1036407	0	True				
ANR	1036411	IdentifierDecl	code = 0		1036407	0					
ANR	1036412	IdentifierDeclType	int		1036407	0					
ANR	1036413	Identifier	code		1036407	1					
ANR	1036414	AssignmentExpression	code = 0		1036407	2		=			
ANR	1036415	Identifier	code		1036407	0					
ANR	1036416	PrimaryExpression	0		1036407	1					
ANR	1036417	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	1759:4:65880:65925	1036407	1	True				
ANR	1036418	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		1036407	0					
ANR	1036419	IdentifierDeclType	gs_font_base *		1036407	0					
ANR	1036420	Identifier	pbfont		1036407	1					
ANR	1036421	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		1036407	2		=			
ANR	1036422	Identifier	pbfont		1036407	0					
ANR	1036423	CastExpression	( gs_font_base * ) pfont		1036407	1					
ANR	1036424	CastTarget	gs_font_base *		1036407	0					
ANR	1036425	Identifier	pfont		1036407	1					
ANR	1036426	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	1760:4:65931:65963	1036407	2	True				
ANR	1036427	IdentifierDecl	* I = pbfont -> FAPI		1036407	0					
ANR	1036428	IdentifierDeclType	gs_fapi_server *		1036407	0					
ANR	1036429	Identifier	I		1036407	1					
ANR	1036430	AssignmentExpression	* I = pbfont -> FAPI		1036407	2		=			
ANR	1036431	Identifier	I		1036407	0					
ANR	1036432	PtrMemberAccess	pbfont -> FAPI		1036407	1					
ANR	1036433	Identifier	pbfont		1036407	0					
ANR	1036434	Identifier	FAPI		1036407	1					
ANR	1036435	ExpressionStatement	"code = I -> get_font_info ( I , & I -> ff , item , index , data , data_len )"	1762:4:65970:66033	1036407	3	True				
ANR	1036436	AssignmentExpression	"code = I -> get_font_info ( I , & I -> ff , item , index , data , data_len )"		1036407	0		=			
ANR	1036437	Identifier	code		1036407	0					
ANR	1036438	CallExpression	"I -> get_font_info ( I , & I -> ff , item , index , data , data_len )"		1036407	1					
ANR	1036439	Callee	I -> get_font_info		1036407	0					
ANR	1036440	PtrMemberAccess	I -> get_font_info		1036407	0					
ANR	1036441	Identifier	I		1036407	0					
ANR	1036442	Identifier	get_font_info		1036407	1					
ANR	1036443	ArgumentList	I		1036407	1					
ANR	1036444	Argument	I		1036407	0					
ANR	1036445	Identifier	I		1036407	0					
ANR	1036446	Argument	& I -> ff		1036407	1					
ANR	1036447	UnaryOperationExpression	& I -> ff		1036407	0					
ANR	1036448	UnaryOperator	&		1036407	0					
ANR	1036449	PtrMemberAccess	I -> ff		1036407	1					
ANR	1036450	Identifier	I		1036407	0					
ANR	1036451	Identifier	ff		1036407	1					
ANR	1036452	Argument	item		1036407	2					
ANR	1036453	Identifier	item		1036407	0					
ANR	1036454	Argument	index		1036407	3					
ANR	1036455	Identifier	index		1036407	0					
ANR	1036456	Argument	data		1036407	4					
ANR	1036457	Identifier	data		1036407	0					
ANR	1036458	Argument	data_len		1036407	5					
ANR	1036459	Identifier	data_len		1036407	0					
ANR	1036460	ReturnStatement	return ( code ) ;	1763:4:66039:66052	1036407	4	True				
ANR	1036461	Identifier	code		1036407	0					
ANR	1036462	ReturnType	int		1036407	1					
ANR	1036463	Identifier	gs_fapi_get_font_info		1036407	2					
ANR	1036464	ParameterList	"gs_font * pfont , gs_fapi_font_info item , int index , void * data , int * data_len"		1036407	3					
ANR	1036465	Parameter	gs_font * pfont	1755:22:65756:65769	1036407	0	True				
ANR	1036466	ParameterType	gs_font *		1036407	0					
ANR	1036467	Identifier	pfont		1036407	1					
ANR	1036468	Parameter	gs_fapi_font_info item	1755:38:65772:65793	1036407	1	True				
ANR	1036469	ParameterType	gs_fapi_font_info		1036407	0					
ANR	1036470	Identifier	item		1036407	1					
ANR	1036471	Parameter	int index	1755:62:65796:65804	1036407	2	True				
ANR	1036472	ParameterType	int		1036407	0					
ANR	1036473	Identifier	index		1036407	1					
ANR	1036474	Parameter	void * data	1756:22:65829:65838	1036407	3	True				
ANR	1036475	ParameterType	void *		1036407	0					
ANR	1036476	Identifier	data		1036407	1					
ANR	1036477	Parameter	int * data_len	1756:34:65841:65853	1036407	4	True				
ANR	1036478	ParameterType	int *		1036407	0					
ANR	1036479	Identifier	data_len		1036407	1					
ANR	1036480	CFGEntryNode	ENTRY		1036407		True				
ANR	1036481	CFGExitNode	EXIT		1036407		True				
ANR	1036482	Symbol	item		1036407						
ANR	1036483	Symbol	code		1036407						
ANR	1036484	Symbol	data		1036407						
ANR	1036485	Symbol	pfont		1036407						
ANR	1036486	Symbol	pbfont -> FAPI		1036407						
ANR	1036487	Symbol	I -> get_font_info		1036407						
ANR	1036488	Symbol	data_len		1036407						
ANR	1036489	Symbol	index		1036407						
ANR	1036490	Symbol	I		1036407						
ANR	1036491	Symbol	pbfont		1036407						
ANR	1036492	Symbol	* I		1036407						
ANR	1036493	Symbol	& I -> ff		1036407						
ANR	1036494	Symbol	* pbfont		1036407						
ANR	1036495	Function	gs_fapi_passfont	1771:0:66463:69969							
ANR	1036496	FunctionDef	"gs_fapi_passfont (gs_font * pfont , int subfont , char * font_file_path , gs_string * full_font_buf , char * fapi_request , char * xlatmap , char * * fapi_id , gs_fapi_get_server_param_callback get_server_param_cb)"		1036495	0					
ANR	1036497	CompoundStatement		1775:0:66701:69969	1036495	0					
ANR	1036498	IdentifierDeclStatement	gs_font_base * pbfont ;	1776:4:66707:66727	1036495	0	True				
ANR	1036499	IdentifierDecl	* pbfont		1036495	0					
ANR	1036500	IdentifierDeclType	gs_font_base *		1036495	0					
ANR	1036501	Identifier	pbfont		1036495	1					
ANR	1036502	IdentifierDeclStatement	int code = 0 ;	1777:4:66733:66745	1036495	1	True				
ANR	1036503	IdentifierDecl	code = 0		1036495	0					
ANR	1036504	IdentifierDeclType	int		1036495	0					
ANR	1036505	Identifier	code		1036495	1					
ANR	1036506	AssignmentExpression	code = 0		1036495	2		=			
ANR	1036507	Identifier	code		1036495	0					
ANR	1036508	PrimaryExpression	0		1036495	1					
ANR	1036509	IdentifierDeclStatement	"gs_fapi_server * I , * * list ;"	1778:4:66751:66776	1036495	2	True				
ANR	1036510	IdentifierDecl	* I		1036495	0					
ANR	1036511	IdentifierDeclType	gs_fapi_server *		1036495	0					
ANR	1036512	Identifier	I		1036495	1					
ANR	1036513	IdentifierDecl	* * list		1036495	1					
ANR	1036514	IdentifierDeclType	gs_fapi_server * *		1036495	0					
ANR	1036515	Identifier	list		1036495	1					
ANR	1036516	IdentifierDeclStatement	bool free_params = false ;	1779:4:66782:66806	1036495	3	True				
ANR	1036517	IdentifierDecl	free_params = false		1036495	0					
ANR	1036518	IdentifierDeclType	bool		1036495	0					
ANR	1036519	Identifier	free_params		1036495	1					
ANR	1036520	AssignmentExpression	free_params = false		1036495	2		=			
ANR	1036521	Identifier	false		1036495	0					
ANR	1036522	Identifier	false		1036495	1					
ANR	1036523	IdentifierDeclStatement	gs_memory_t * mem = pfont -> memory ;	1780:4:66812:66844	1036495	4	True				
ANR	1036524	IdentifierDecl	* mem = pfont -> memory		1036495	0					
ANR	1036525	IdentifierDeclType	gs_memory_t *		1036495	0					
ANR	1036526	Identifier	mem		1036495	1					
ANR	1036527	AssignmentExpression	* mem = pfont -> memory		1036495	2		=			
ANR	1036528	Identifier	mem		1036495	0					
ANR	1036529	PtrMemberAccess	pfont -> memory		1036495	1					
ANR	1036530	Identifier	pfont		1036495	0					
ANR	1036531	Identifier	memory		1036495	1					
ANR	1036532	IdentifierDeclStatement	const char * decodingID = NULL ;	1781:4:66851:66880	1036495	5	True				
ANR	1036533	IdentifierDecl	* decodingID = NULL		1036495	0					
ANR	1036534	IdentifierDeclType	const char *		1036495	0					
ANR	1036535	Identifier	decodingID		1036495	1					
ANR	1036536	AssignmentExpression	* decodingID = NULL		1036495	2		=			
ANR	1036537	Identifier	NULL		1036495	0					
ANR	1036538	Identifier	NULL		1036495	1					
ANR	1036539	IdentifierDeclStatement	bool do_restart = false ;	1782:4:66886:66909	1036495	6	True				
ANR	1036540	IdentifierDecl	do_restart = false		1036495	0					
ANR	1036541	IdentifierDeclType	bool		1036495	0					
ANR	1036542	Identifier	do_restart		1036495	1					
ANR	1036543	AssignmentExpression	do_restart = false		1036495	2		=			
ANR	1036544	Identifier	false		1036495	0					
ANR	1036545	Identifier	false		1036495	1					
ANR	1036546	ExpressionStatement	list = gs_fapi_get_server_list ( mem )	1784:4:66920:66955	1036495	7	True				
ANR	1036547	AssignmentExpression	list = gs_fapi_get_server_list ( mem )		1036495	0		=			
ANR	1036548	Identifier	list		1036495	0					
ANR	1036549	CallExpression	gs_fapi_get_server_list ( mem )		1036495	1					
ANR	1036550	Callee	gs_fapi_get_server_list		1036495	0					
ANR	1036551	Identifier	gs_fapi_get_server_list		1036495	0					
ANR	1036552	ArgumentList	mem		1036495	1					
ANR	1036553	Argument	mem		1036495	0					
ANR	1036554	Identifier	mem		1036495	0					
ANR	1036555	IfStatement	if ( ! list )		1036495	8					
ANR	1036556	Condition	! list	1786:8:66970:66974	1036495	0	True				
ANR	1036557	UnaryOperationExpression	! list		1036495	0					
ANR	1036558	UnaryOperator	!		1036495	0					
ANR	1036559	Identifier	list		1036495	1					
ANR	1036560	ExpressionStatement	return_error ( gs_error_unregistered )	1787:6:67009:67044	1036495	1	True				
ANR	1036561	CallExpression	return_error ( gs_error_unregistered )		1036495	0					
ANR	1036562	Callee	return_error		1036495	0					
ANR	1036563	Identifier	return_error		1036495	0					
ANR	1036564	ArgumentList	gs_error_unregistered		1036495	1					
ANR	1036565	Argument	gs_error_unregistered		1036495	0					
ANR	1036566	Identifier	gs_error_unregistered		1036495	0					
ANR	1036567	ExpressionStatement	( * fapi_id ) = NULL	1789:4:67051:67068	1036495	9	True				
ANR	1036568	AssignmentExpression	( * fapi_id ) = NULL		1036495	0		=			
ANR	1036569	UnaryOperationExpression	* fapi_id		1036495	0					
ANR	1036570	UnaryOperator	*		1036495	0					
ANR	1036571	Identifier	fapi_id		1036495	1					
ANR	1036572	Identifier	NULL		1036495	1					
ANR	1036573	ExpressionStatement	pbfont = ( gs_font_base * ) pfont	1791:4:67075:67106	1036495	10	True				
ANR	1036574	AssignmentExpression	pbfont = ( gs_font_base * ) pfont		1036495	0		=			
ANR	1036575	Identifier	pbfont		1036495	0					
ANR	1036576	CastExpression	( gs_font_base * ) pfont		1036495	1					
ANR	1036577	CastTarget	gs_font_base *		1036495	0					
ANR	1036578	Identifier	pfont		1036495	1					
ANR	1036579	ExpressionStatement	I = * list	1793:4:67113:67122	1036495	11	True				
ANR	1036580	AssignmentExpression	I = * list		1036495	0		=			
ANR	1036581	Identifier	I		1036495	0					
ANR	1036582	UnaryOperationExpression	* list		1036495	1					
ANR	1036583	UnaryOperator	*		1036495	0					
ANR	1036584	Identifier	list		1036495	1					
ANR	1036585	IfStatement	if ( fapi_request )		1036495	12					
ANR	1036586	Condition	fapi_request	1795:8:67133:67144	1036495	0	True				
ANR	1036587	Identifier	fapi_request		1036495	0					
ANR	1036588	CompoundStatement		21:22:445:445	1036495	1					
ANR	1036589	IfStatement	if ( gs_debug_c ( '1' ) )		1036495	0					
ANR	1036590	Condition	gs_debug_c ( '1' )	1796:12:67161:67175	1036495	0	True				
ANR	1036591	CallExpression	gs_debug_c ( '1' )		1036495	0					
ANR	1036592	Callee	gs_debug_c		1036495	0					
ANR	1036593	Identifier	gs_debug_c		1036495	0					
ANR	1036594	ArgumentList	'1'		1036495	1					
ANR	1036595	Argument	'1'		1036495	0					
ANR	1036596	PrimaryExpression	'1'		1036495	0					
ANR	1036597	ExpressionStatement	"dprintf1 ( ""Requested FAPI plugin: %s "" , fapi_request )"	1797:12:67190:67242	1036495	1	True				
ANR	1036598	CallExpression	"dprintf1 ( ""Requested FAPI plugin: %s "" , fapi_request )"		1036495	0					
ANR	1036599	Callee	dprintf1		1036495	0					
ANR	1036600	Identifier	dprintf1		1036495	0					
ANR	1036601	ArgumentList	"""Requested FAPI plugin: %s """		1036495	1					
ANR	1036602	Argument	"""Requested FAPI plugin: %s """		1036495	0					
ANR	1036603	PrimaryExpression	"""Requested FAPI plugin: %s """		1036495	0					
ANR	1036604	Argument	fapi_request		1036495	1					
ANR	1036605	Identifier	fapi_request		1036495	0					
ANR	1036606	WhileStatement	"while ( ( I = * list ) != NULL && strncmp ( I -> ig . d -> subtype , fapi_request , strlen ( fapi_request ) ) != 0 )"		1036495	1					
ANR	1036607	Condition	"( I = * list ) != NULL && strncmp ( I -> ig . d -> subtype , fapi_request , strlen ( fapi_request ) ) != 0"	1799:15:67260:67389	1036495	0	True				
ANR	1036608	AndExpression	"( I = * list ) != NULL && strncmp ( I -> ig . d -> subtype , fapi_request , strlen ( fapi_request ) ) != 0"		1036495	0		&&			
ANR	1036609	EqualityExpression	( I = * list ) != NULL		1036495	0		!=			
ANR	1036610	AssignmentExpression	I = * list		1036495	0		=			
ANR	1036611	Identifier	I		1036495	0					
ANR	1036612	UnaryOperationExpression	* list		1036495	1					
ANR	1036613	UnaryOperator	*		1036495	0					
ANR	1036614	Identifier	list		1036495	1					
ANR	1036615	Identifier	NULL		1036495	1					
ANR	1036616	EqualityExpression	"strncmp ( I -> ig . d -> subtype , fapi_request , strlen ( fapi_request ) ) != 0"		1036495	1		!=			
ANR	1036617	CallExpression	"strncmp ( I -> ig . d -> subtype , fapi_request , strlen ( fapi_request ) )"		1036495	0					
ANR	1036618	Callee	strncmp		1036495	0					
ANR	1036619	Identifier	strncmp		1036495	0					
ANR	1036620	ArgumentList	I -> ig . d -> subtype		1036495	1					
ANR	1036621	Argument	I -> ig . d -> subtype		1036495	0					
ANR	1036622	PtrMemberAccess	I -> ig . d -> subtype		1036495	0					
ANR	1036623	MemberAccess	I -> ig . d		1036495	0					
ANR	1036624	PtrMemberAccess	I -> ig		1036495	0					
ANR	1036625	Identifier	I		1036495	0					
ANR	1036626	Identifier	ig		1036495	1					
ANR	1036627	Identifier	d		1036495	1					
ANR	1036628	Identifier	subtype		1036495	1					
ANR	1036629	Argument	fapi_request		1036495	1					
ANR	1036630	Identifier	fapi_request		1036495	0					
ANR	1036631	Argument	strlen ( fapi_request )		1036495	2					
ANR	1036632	CallExpression	strlen ( fapi_request )		1036495	0					
ANR	1036633	Callee	strlen		1036495	0					
ANR	1036634	Identifier	strlen		1036495	0					
ANR	1036635	ArgumentList	fapi_request		1036495	1					
ANR	1036636	Argument	fapi_request		1036495	0					
ANR	1036637	Identifier	fapi_request		1036495	0					
ANR	1036638	PrimaryExpression	0		1036495	1					
ANR	1036639	CompoundStatement		27:54:690:690	1036495	1					
ANR	1036640	ExpressionStatement	list ++	1802:12:67406:67412	1036495	0	True				
ANR	1036641	PostIncDecOperationExpression	list ++		1036495	0					
ANR	1036642	Identifier	list		1036495	0					
ANR	1036643	IncDec	++		1036495	1					
ANR	1036644	IfStatement	if ( ! I )		1036495	2					
ANR	1036645	Condition	! I	1804:12:67436:67437	1036495	0	True				
ANR	1036646	UnaryOperationExpression	! I		1036495	0					
ANR	1036647	UnaryOperator	!		1036495	0					
ANR	1036648	Identifier	I		1036495	1					
ANR	1036649	CompoundStatement		30:16:738:738	1036495	1					
ANR	1036650	IfStatement	if ( gs_debug_c ( '1' ) )		1036495	0					
ANR	1036651	Condition	gs_debug_c ( '1' )	1805:16:67458:67472	1036495	0	True				
ANR	1036652	CallExpression	gs_debug_c ( '1' )		1036495	0					
ANR	1036653	Callee	gs_debug_c		1036495	0					
ANR	1036654	Identifier	gs_debug_c		1036495	0					
ANR	1036655	ArgumentList	'1'		1036495	1					
ANR	1036656	Argument	'1'		1036495	0					
ANR	1036657	PrimaryExpression	'1'		1036495	0					
ANR	1036658	ExpressionStatement	"dprintf ( ""not found. Falling back to normal plugin search\\n"" )"	1806:16:67491:67551	1036495	1	True				
ANR	1036659	CallExpression	"dprintf ( ""not found. Falling back to normal plugin search\\n"" )"		1036495	0					
ANR	1036660	Callee	dprintf		1036495	0					
ANR	1036661	Identifier	dprintf		1036495	0					
ANR	1036662	ArgumentList	"""not found. Falling back to normal plugin search\\n"""		1036495	1					
ANR	1036663	Argument	"""not found. Falling back to normal plugin search\\n"""		1036495	0					
ANR	1036664	PrimaryExpression	"""not found. Falling back to normal plugin search\\n"""		1036495	0					
ANR	1036665	ExpressionStatement	list = ( gs_fapi_server * * ) gs_fapi_get_server_list ( mem )	1807:12:67565:67620	1036495	1	True				
ANR	1036666	AssignmentExpression	list = ( gs_fapi_server * * ) gs_fapi_get_server_list ( mem )		1036495	0		=			
ANR	1036667	Identifier	list		1036495	0					
ANR	1036668	CastExpression	( gs_fapi_server * * ) gs_fapi_get_server_list ( mem )		1036495	1					
ANR	1036669	CastTarget	gs_fapi_server * *		1036495	0					
ANR	1036670	CallExpression	gs_fapi_get_server_list ( mem )		1036495	1					
ANR	1036671	Callee	gs_fapi_get_server_list		1036495	0					
ANR	1036672	Identifier	gs_fapi_get_server_list		1036495	0					
ANR	1036673	ArgumentList	mem		1036495	1					
ANR	1036674	Argument	mem		1036495	0					
ANR	1036675	Identifier	mem		1036495	0					
ANR	1036676	ExpressionStatement	I = * list	1808:12:67634:67643	1036495	2	True				
ANR	1036677	AssignmentExpression	I = * list		1036495	0		=			
ANR	1036678	Identifier	I		1036495	0					
ANR	1036679	UnaryOperationExpression	* list		1036495	1					
ANR	1036680	UnaryOperator	*		1036495	0					
ANR	1036681	Identifier	list		1036495	1					
ANR	1036682	ElseStatement	else		1036495	0					
ANR	1036683	CompoundStatement		36:13:966:966	1036495	0					
ANR	1036684	IfStatement	if ( gs_debug_c ( '1' ) )		1036495	0					
ANR	1036685	Condition	gs_debug_c ( '1' )	1811:16:67686:67700	1036495	0	True				
ANR	1036686	CallExpression	gs_debug_c ( '1' )		1036495	0					
ANR	1036687	Callee	gs_debug_c		1036495	0					
ANR	1036688	Identifier	gs_debug_c		1036495	0					
ANR	1036689	ArgumentList	'1'		1036495	1					
ANR	1036690	Argument	'1'		1036495	0					
ANR	1036691	PrimaryExpression	'1'		1036495	0					
ANR	1036692	ExpressionStatement	"dprintf ( ""found.\\n"" )"	1812:16:67719:67738	1036495	1	True				
ANR	1036693	CallExpression	"dprintf ( ""found.\\n"" )"		1036495	0					
ANR	1036694	Callee	dprintf		1036495	0					
ANR	1036695	Identifier	dprintf		1036495	0					
ANR	1036696	ArgumentList	"""found.\\n"""		1036495	1					
ANR	1036697	Argument	"""found.\\n"""		1036495	0					
ANR	1036698	PrimaryExpression	"""found.\\n"""		1036495	0					
ANR	1036699	ExpressionStatement	do_restart = true	1813:12:67752:67769	1036495	1	True				
ANR	1036700	AssignmentExpression	do_restart = true		1036495	0		=			
ANR	1036701	Identifier	do_restart		1036495	0					
ANR	1036702	Identifier	true		1036495	1					
ANR	1036703	WhileStatement	while ( I )		1036495	13					
ANR	1036704	Condition	I	1817:11:67799:67799	1036495	0	True				
ANR	1036705	Identifier	I		1036495	0					
ANR	1036706	CompoundStatement		45:8:1145:1170	1036495	1					
ANR	1036707	IdentifierDeclStatement	char * server_param = NULL ;	1818:8:67812:67837	1036495	0	True				
ANR	1036708	IdentifierDecl	* server_param = NULL		1036495	0					
ANR	1036709	IdentifierDeclType	char *		1036495	0					
ANR	1036710	Identifier	server_param		1036495	1					
ANR	1036711	AssignmentExpression	* server_param = NULL		1036495	2		=			
ANR	1036712	Identifier	NULL		1036495	0					
ANR	1036713	Identifier	NULL		1036495	1					
ANR	1036714	IdentifierDeclStatement	int server_param_size = 0 ;	1819:8:67847:67872	1036495	1	True				
ANR	1036715	IdentifierDecl	server_param_size = 0		1036495	0					
ANR	1036716	IdentifierDeclType	int		1036495	0					
ANR	1036717	Identifier	server_param_size		1036495	1					
ANR	1036718	AssignmentExpression	server_param_size = 0		1036495	2		=			
ANR	1036719	Identifier	server_param_size		1036495	0					
ANR	1036720	PrimaryExpression	0		1036495	1					
ANR	1036721	ExpressionStatement	"( * get_server_param_cb ) ( I , ( const char * ) I -> ig . d -> subtype , & server_param , & server_param_size )"	1821:8:67883:68008	1036495	2	True				
ANR	1036722	CallExpression	"( * get_server_param_cb ) ( I , ( const char * ) I -> ig . d -> subtype , & server_param , & server_param_size )"		1036495	0					
ANR	1036723	Callee	* get_server_param_cb		1036495	0					
ANR	1036724	UnaryOperationExpression	* get_server_param_cb		1036495	0					
ANR	1036725	UnaryOperator	*		1036495	0					
ANR	1036726	Identifier	get_server_param_cb		1036495	1					
ANR	1036727	ArgumentList	I		1036495	1					
ANR	1036728	Argument	I		1036495	0					
ANR	1036729	Identifier	I		1036495	0					
ANR	1036730	Argument	( const char * ) I -> ig . d -> subtype		1036495	1					
ANR	1036731	CastExpression	( const char * ) I -> ig . d -> subtype		1036495	0					
ANR	1036732	CastTarget	const char *		1036495	0					
ANR	1036733	PtrMemberAccess	I -> ig . d -> subtype		1036495	1					
ANR	1036734	MemberAccess	I -> ig . d		1036495	0					
ANR	1036735	PtrMemberAccess	I -> ig		1036495	0					
ANR	1036736	Identifier	I		1036495	0					
ANR	1036737	Identifier	ig		1036495	1					
ANR	1036738	Identifier	d		1036495	1					
ANR	1036739	Identifier	subtype		1036495	1					
ANR	1036740	Argument	& server_param		1036495	2					
ANR	1036741	UnaryOperationExpression	& server_param		1036495	0					
ANR	1036742	UnaryOperator	&		1036495	0					
ANR	1036743	Identifier	server_param		1036495	1					
ANR	1036744	Argument	& server_param_size		1036495	3					
ANR	1036745	UnaryOperationExpression	& server_param_size		1036495	0					
ANR	1036746	UnaryOperator	&		1036495	0					
ANR	1036747	Identifier	server_param_size		1036495	1					
ANR	1036748	IfStatement	if ( server_param == NULL && server_param_size > 0 )		1036495	3					
ANR	1036749	Condition	server_param == NULL && server_param_size > 0	1824:12:68023:68067	1036495	0	True				
ANR	1036750	AndExpression	server_param == NULL && server_param_size > 0		1036495	0		&&			
ANR	1036751	EqualityExpression	server_param == NULL		1036495	0		==			
ANR	1036752	Identifier	server_param		1036495	0					
ANR	1036753	Identifier	NULL		1036495	1					
ANR	1036754	RelationalExpression	server_param_size > 0		1036495	1		>			
ANR	1036755	Identifier	server_param_size		1036495	0					
ANR	1036756	PrimaryExpression	0		1036495	1					
ANR	1036757	CompoundStatement		50:59:1368:1368	1036495	1					
ANR	1036758	ExpressionStatement	"server_param = ( char * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_passfont server params"" )"	1825:12:68084:68302	1036495	0	True				
ANR	1036759	AssignmentExpression	"server_param = ( char * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_passfont server params"" )"		1036495	0		=			
ANR	1036760	Identifier	server_param		1036495	0					
ANR	1036761	CastExpression	"( char * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_passfont server params"" )"		1036495	1					
ANR	1036762	CastTarget	char *		1036495	0					
ANR	1036763	CallExpression	"gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_passfont server params"" )"		1036495	1					
ANR	1036764	Callee	gs_alloc_bytes_immovable		1036495	0					
ANR	1036765	Identifier	gs_alloc_bytes_immovable		1036495	0					
ANR	1036766	ArgumentList	mem -> non_gc_memory		1036495	1					
ANR	1036767	Argument	mem -> non_gc_memory		1036495	0					
ANR	1036768	PtrMemberAccess	mem -> non_gc_memory		1036495	0					
ANR	1036769	Identifier	mem		1036495	0					
ANR	1036770	Identifier	non_gc_memory		1036495	1					
ANR	1036771	Argument	server_param_size		1036495	1					
ANR	1036772	Identifier	server_param_size		1036495	0					
ANR	1036773	Argument	"""gs_fapi_passfont server params"""		1036495	2					
ANR	1036774	PrimaryExpression	"""gs_fapi_passfont server params"""		1036495	0					
ANR	1036775	IfStatement	if ( ! server_param )		1036495	1					
ANR	1036776	Condition	! server_param	1829:16:68320:68332	1036495	0	True				
ANR	1036777	UnaryOperationExpression	! server_param		1036495	0					
ANR	1036778	UnaryOperator	!		1036495	0					
ANR	1036779	Identifier	server_param		1036495	1					
ANR	1036780	CompoundStatement		55:31:1633:1633	1036495	1					
ANR	1036781	ExpressionStatement	return_error ( gs_error_VMerror )	1830:16:68353:68383	1036495	0	True				
ANR	1036782	CallExpression	return_error ( gs_error_VMerror )		1036495	0					
ANR	1036783	Callee	return_error		1036495	0					
ANR	1036784	Identifier	return_error		1036495	0					
ANR	1036785	ArgumentList	gs_error_VMerror		1036495	1					
ANR	1036786	Argument	gs_error_VMerror		1036495	0					
ANR	1036787	Identifier	gs_error_VMerror		1036495	0					
ANR	1036788	ExpressionStatement	free_params = true	1832:12:68411:68429	1036495	2	True				
ANR	1036789	AssignmentExpression	free_params = true		1036495	0		=			
ANR	1036790	Identifier	free_params		1036495	0					
ANR	1036791	Identifier	true		1036495	1					
ANR	1036792	ExpressionStatement	"( * get_server_param_cb ) ( I , ( const char * ) I -> ig . d -> subtype , & server_param , & server_param_size )"	1833:12:68443:68572	1036495	3	True				
ANR	1036793	CallExpression	"( * get_server_param_cb ) ( I , ( const char * ) I -> ig . d -> subtype , & server_param , & server_param_size )"		1036495	0					
ANR	1036794	Callee	* get_server_param_cb		1036495	0					
ANR	1036795	UnaryOperationExpression	* get_server_param_cb		1036495	0					
ANR	1036796	UnaryOperator	*		1036495	0					
ANR	1036797	Identifier	get_server_param_cb		1036495	1					
ANR	1036798	ArgumentList	I		1036495	1					
ANR	1036799	Argument	I		1036495	0					
ANR	1036800	Identifier	I		1036495	0					
ANR	1036801	Argument	( const char * ) I -> ig . d -> subtype		1036495	1					
ANR	1036802	CastExpression	( const char * ) I -> ig . d -> subtype		1036495	0					
ANR	1036803	CastTarget	const char *		1036495	0					
ANR	1036804	PtrMemberAccess	I -> ig . d -> subtype		1036495	1					
ANR	1036805	MemberAccess	I -> ig . d		1036495	0					
ANR	1036806	PtrMemberAccess	I -> ig		1036495	0					
ANR	1036807	Identifier	I		1036495	0					
ANR	1036808	Identifier	ig		1036495	1					
ANR	1036809	Identifier	d		1036495	1					
ANR	1036810	Identifier	subtype		1036495	1					
ANR	1036811	Argument	& server_param		1036495	2					
ANR	1036812	UnaryOperationExpression	& server_param		1036495	0					
ANR	1036813	UnaryOperator	&		1036495	0					
ANR	1036814	Identifier	server_param		1036495	1					
ANR	1036815	Argument	& server_param_size		1036495	3					
ANR	1036816	UnaryOperationExpression	& server_param_size		1036495	0					
ANR	1036817	UnaryOperator	&		1036495	0					
ANR	1036818	Identifier	server_param_size		1036495	1					
ANR	1036819	IfStatement	"if ( ( code = gs_fapi_renderer_retcode ( mem , I , I -> ensure_open ( I , server_param , server_param_size ) ) ) < 0 )"		1036495	4					
ANR	1036820	Condition	"( code = gs_fapi_renderer_retcode ( mem , I , I -> ensure_open ( I , server_param , server_param_size ) ) ) < 0"	1837:12:68597:68797	1036495	0	True				
ANR	1036821	RelationalExpression	"( code = gs_fapi_renderer_retcode ( mem , I , I -> ensure_open ( I , server_param , server_param_size ) ) ) < 0"		1036495	0		<			
ANR	1036822	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , I , I -> ensure_open ( I , server_param , server_param_size ) )"		1036495	0		=			
ANR	1036823	Identifier	code		1036495	0					
ANR	1036824	CallExpression	"gs_fapi_renderer_retcode ( mem , I , I -> ensure_open ( I , server_param , server_param_size ) )"		1036495	1					
ANR	1036825	Callee	gs_fapi_renderer_retcode		1036495	0					
ANR	1036826	Identifier	gs_fapi_renderer_retcode		1036495	0					
ANR	1036827	ArgumentList	mem		1036495	1					
ANR	1036828	Argument	mem		1036495	0					
ANR	1036829	Identifier	mem		1036495	0					
ANR	1036830	Argument	I		1036495	1					
ANR	1036831	Identifier	I		1036495	0					
ANR	1036832	Argument	"I -> ensure_open ( I , server_param , server_param_size )"		1036495	2					
ANR	1036833	CallExpression	"I -> ensure_open ( I , server_param , server_param_size )"		1036495	0					
ANR	1036834	Callee	I -> ensure_open		1036495	0					
ANR	1036835	PtrMemberAccess	I -> ensure_open		1036495	0					
ANR	1036836	Identifier	I		1036495	0					
ANR	1036837	Identifier	ensure_open		1036495	1					
ANR	1036838	ArgumentList	I		1036495	1					
ANR	1036839	Argument	I		1036495	0					
ANR	1036840	Identifier	I		1036495	0					
ANR	1036841	Argument	server_param		1036495	1					
ANR	1036842	Identifier	server_param		1036495	0					
ANR	1036843	Argument	server_param_size		1036495	2					
ANR	1036844	Identifier	server_param_size		1036495	0					
ANR	1036845	PrimaryExpression	0		1036495	1					
ANR	1036846	CompoundStatement		66:79:2098:2098	1036495	1					
ANR	1036847	ExpressionStatement	"gs_free_object ( mem -> non_gc_memory , server_param , ""gs_fapi_passfont server params"" )"	1841:12:68814:68923	1036495	0	True				
ANR	1036848	CallExpression	"gs_free_object ( mem -> non_gc_memory , server_param , ""gs_fapi_passfont server params"" )"		1036495	0					
ANR	1036849	Callee	gs_free_object		1036495	0					
ANR	1036850	Identifier	gs_free_object		1036495	0					
ANR	1036851	ArgumentList	mem -> non_gc_memory		1036495	1					
ANR	1036852	Argument	mem -> non_gc_memory		1036495	0					
ANR	1036853	PtrMemberAccess	mem -> non_gc_memory		1036495	0					
ANR	1036854	Identifier	mem		1036495	0					
ANR	1036855	Identifier	non_gc_memory		1036495	1					
ANR	1036856	Argument	server_param		1036495	1					
ANR	1036857	Identifier	server_param		1036495	0					
ANR	1036858	Argument	"""gs_fapi_passfont server params"""		1036495	2					
ANR	1036859	PrimaryExpression	"""gs_fapi_passfont server params"""		1036495	0					
ANR	1036860	ReturnStatement	return code ;	1843:12:68937:68948	1036495	1	True				
ANR	1036861	Identifier	code		1036495	0					
ANR	1036862	IfStatement	if ( free_params )		1036495	5					
ANR	1036863	Condition	free_params	1846:12:68973:68983	1036495	0	True				
ANR	1036864	Identifier	free_params		1036495	0					
ANR	1036865	CompoundStatement		72:25:2284:2284	1036495	1					
ANR	1036866	ExpressionStatement	"gs_free_object ( mem -> non_gc_memory , server_param , ""gs_fapi_passfont server params"" )"	1847:12:69000:69109	1036495	0	True				
ANR	1036867	CallExpression	"gs_free_object ( mem -> non_gc_memory , server_param , ""gs_fapi_passfont server params"" )"		1036495	0					
ANR	1036868	Callee	gs_free_object		1036495	0					
ANR	1036869	Identifier	gs_free_object		1036495	0					
ANR	1036870	ArgumentList	mem -> non_gc_memory		1036495	1					
ANR	1036871	Argument	mem -> non_gc_memory		1036495	0					
ANR	1036872	PtrMemberAccess	mem -> non_gc_memory		1036495	0					
ANR	1036873	Identifier	mem		1036495	0					
ANR	1036874	Identifier	non_gc_memory		1036495	1					
ANR	1036875	Argument	server_param		1036495	1					
ANR	1036876	Identifier	server_param		1036495	0					
ANR	1036877	Argument	"""gs_fapi_passfont server params"""		1036495	2					
ANR	1036878	PrimaryExpression	"""gs_fapi_passfont server params"""		1036495	0					
ANR	1036879	ExpressionStatement	pbfont -> FAPI = I	1851:8:69130:69146	1036495	6	True				
ANR	1036880	AssignmentExpression	pbfont -> FAPI = I		1036495	0		=			
ANR	1036881	PtrMemberAccess	pbfont -> FAPI		1036495	0					
ANR	1036882	Identifier	pbfont		1036495	0					
ANR	1036883	Identifier	FAPI		1036495	1					
ANR	1036884	Identifier	I		1036495	1					
ANR	1036885	ExpressionStatement	"code = gs_fapi_prepare_font ( pfont , I , subfont , font_file_path , full_font_buf , xlatmap , & decodingID )"	1852:8:69210:69354	1036495	7	True				
ANR	1036886	AssignmentExpression	"code = gs_fapi_prepare_font ( pfont , I , subfont , font_file_path , full_font_buf , xlatmap , & decodingID )"		1036495	0		=			
ANR	1036887	Identifier	code		1036495	0					
ANR	1036888	CallExpression	"gs_fapi_prepare_font ( pfont , I , subfont , font_file_path , full_font_buf , xlatmap , & decodingID )"		1036495	1					
ANR	1036889	Callee	gs_fapi_prepare_font		1036495	0					
ANR	1036890	Identifier	gs_fapi_prepare_font		1036495	0					
ANR	1036891	ArgumentList	pfont		1036495	1					
ANR	1036892	Argument	pfont		1036495	0					
ANR	1036893	Identifier	pfont		1036495	0					
ANR	1036894	Argument	I		1036495	1					
ANR	1036895	Identifier	I		1036495	0					
ANR	1036896	Argument	subfont		1036495	2					
ANR	1036897	Identifier	subfont		1036495	0					
ANR	1036898	Argument	font_file_path		1036495	3					
ANR	1036899	Identifier	font_file_path		1036495	0					
ANR	1036900	Argument	full_font_buf		1036495	4					
ANR	1036901	Identifier	full_font_buf		1036495	0					
ANR	1036902	Argument	xlatmap		1036495	5					
ANR	1036903	Identifier	xlatmap		1036495	0					
ANR	1036904	Argument	& decodingID		1036495	6					
ANR	1036905	UnaryOperationExpression	& decodingID		1036495	0					
ANR	1036906	UnaryOperator	&		1036495	0					
ANR	1036907	Identifier	decodingID		1036495	1					
ANR	1036908	IfStatement	if ( code >= 0 )		1036495	8					
ANR	1036909	Condition	code >= 0	1855:12:69368:69376	1036495	0	True				
ANR	1036910	RelationalExpression	code >= 0		1036495	0		>=			
ANR	1036911	Identifier	code		1036495	0					
ANR	1036912	PrimaryExpression	0		1036495	1					
ANR	1036913	CompoundStatement		81:23:2677:2677	1036495	1					
ANR	1036914	ExpressionStatement	( * fapi_id ) = ( char * ) I -> ig . d -> subtype	1856:12:69393:69430	1036495	0	True				
ANR	1036915	AssignmentExpression	( * fapi_id ) = ( char * ) I -> ig . d -> subtype		1036495	0		=			
ANR	1036916	UnaryOperationExpression	* fapi_id		1036495	0					
ANR	1036917	UnaryOperator	*		1036495	0					
ANR	1036918	Identifier	fapi_id		1036495	1					
ANR	1036919	CastExpression	( char * ) I -> ig . d -> subtype		1036495	1					
ANR	1036920	CastTarget	char *		1036495	0					
ANR	1036921	PtrMemberAccess	I -> ig . d -> subtype		1036495	1					
ANR	1036922	MemberAccess	I -> ig . d		1036495	0					
ANR	1036923	PtrMemberAccess	I -> ig		1036495	0					
ANR	1036924	Identifier	I		1036495	0					
ANR	1036925	Identifier	ig		1036495	1					
ANR	1036926	Identifier	d		1036495	1					
ANR	1036927	Identifier	subtype		1036495	1					
ANR	1036928	ReturnStatement	return 0 ;	1857:12:69444:69452	1036495	1	True				
ANR	1036929	PrimaryExpression	0		1036495	0					
ANR	1036930	ExpressionStatement	pbfont -> FAPI = NULL	1861:8:69520:69539	1036495	9	True				
ANR	1036931	AssignmentExpression	pbfont -> FAPI = NULL		1036495	0		=			
ANR	1036932	PtrMemberAccess	pbfont -> FAPI		1036495	0					
ANR	1036933	Identifier	pbfont		1036495	0					
ANR	1036934	Identifier	FAPI		1036495	1					
ANR	1036935	Identifier	NULL		1036495	1					
ANR	1036936	IfStatement	if ( do_restart == true )		1036495	10					
ANR	1036937	Condition	do_restart == true	1862:12:69553:69570	1036495	0	True				
ANR	1036938	EqualityExpression	do_restart == true		1036495	0		==			
ANR	1036939	Identifier	do_restart		1036495	0					
ANR	1036940	Identifier	true		1036495	1					
ANR	1036941	CompoundStatement		88:32:2871:2871	1036495	1					
ANR	1036942	IfStatement	if ( gs_debug_c ( '1' ) )		1036495	0					
ANR	1036943	Condition	gs_debug_c ( '1' )	1863:16:69591:69605	1036495	0	True				
ANR	1036944	CallExpression	gs_debug_c ( '1' )		1036495	0					
ANR	1036945	Callee	gs_debug_c		1036495	0					
ANR	1036946	Identifier	gs_debug_c		1036495	0					
ANR	1036947	ArgumentList	'1'		1036495	1					
ANR	1036948	Argument	'1'		1036495	0					
ANR	1036949	PrimaryExpression	'1'		1036495	0					
ANR	1036950	ExpressionStatement	"dprintf1 ( ""Requested FAPI plugin %s failed, searching for alternative plugin\\n"" , I -> ig . d -> subtype )"	1864:16:69624:69763	1036495	1	True				
ANR	1036951	CallExpression	"dprintf1 ( ""Requested FAPI plugin %s failed, searching for alternative plugin\\n"" , I -> ig . d -> subtype )"		1036495	0					
ANR	1036952	Callee	dprintf1		1036495	0					
ANR	1036953	Identifier	dprintf1		1036495	0					
ANR	1036954	ArgumentList	"""Requested FAPI plugin %s failed, searching for alternative plugin\\n"""		1036495	1					
ANR	1036955	Argument	"""Requested FAPI plugin %s failed, searching for alternative plugin\\n"""		1036495	0					
ANR	1036956	PrimaryExpression	"""Requested FAPI plugin %s failed, searching for alternative plugin\\n"""		1036495	0					
ANR	1036957	Argument	I -> ig . d -> subtype		1036495	1					
ANR	1036958	PtrMemberAccess	I -> ig . d -> subtype		1036495	0					
ANR	1036959	MemberAccess	I -> ig . d		1036495	0					
ANR	1036960	PtrMemberAccess	I -> ig		1036495	0					
ANR	1036961	Identifier	I		1036495	0					
ANR	1036962	Identifier	ig		1036495	1					
ANR	1036963	Identifier	d		1036495	1					
ANR	1036964	Identifier	subtype		1036495	1					
ANR	1036965	ExpressionStatement	list = ( gs_fapi_server * * ) gs_fapi_get_server_list ( mem )	1867:12:69777:69832	1036495	1	True				
ANR	1036966	AssignmentExpression	list = ( gs_fapi_server * * ) gs_fapi_get_server_list ( mem )		1036495	0		=			
ANR	1036967	Identifier	list		1036495	0					
ANR	1036968	CastExpression	( gs_fapi_server * * ) gs_fapi_get_server_list ( mem )		1036495	1					
ANR	1036969	CastTarget	gs_fapi_server * *		1036495	0					
ANR	1036970	CallExpression	gs_fapi_get_server_list ( mem )		1036495	1					
ANR	1036971	Callee	gs_fapi_get_server_list		1036495	0					
ANR	1036972	Identifier	gs_fapi_get_server_list		1036495	0					
ANR	1036973	ArgumentList	mem		1036495	1					
ANR	1036974	Argument	mem		1036495	0					
ANR	1036975	Identifier	mem		1036495	0					
ANR	1036976	ExpressionStatement	do_restart = false	1868:12:69846:69864	1036495	2	True				
ANR	1036977	AssignmentExpression	do_restart = false		1036495	0		=			
ANR	1036978	Identifier	do_restart		1036495	0					
ANR	1036979	Identifier	false		1036495	1					
ANR	1036980	ElseStatement	else		1036495	0					
ANR	1036981	CompoundStatement		96:13:3187:3187	1036495	0					
ANR	1036982	ExpressionStatement	I = * list	1871:12:69903:69912	1036495	0	True				
ANR	1036983	AssignmentExpression	I = * list		1036495	0		=			
ANR	1036984	Identifier	I		1036495	0					
ANR	1036985	UnaryOperationExpression	* list		1036495	1					
ANR	1036986	UnaryOperator	*		1036495	0					
ANR	1036987	Identifier	list		1036495	1					
ANR	1036988	ExpressionStatement	list ++	1872:12:69926:69932	1036495	1	True				
ANR	1036989	PostIncDecOperationExpression	list ++		1036495	0					
ANR	1036990	Identifier	list		1036495	0					
ANR	1036991	IncDec	++		1036495	1					
ANR	1036992	ReturnStatement	return ( code ) ;	1875:4:69954:69967	1036495	14	True				
ANR	1036993	Identifier	code		1036495	0					
ANR	1036994	ReturnType	int		1036495	1					
ANR	1036995	Identifier	gs_fapi_passfont		1036495	2					
ANR	1036996	ParameterList	"gs_font * pfont , int subfont , char * font_file_path , gs_string * full_font_buf , char * fapi_request , char * xlatmap , char * * fapi_id , gs_fapi_get_server_param_callback get_server_param_cb"		1036495	3					
ANR	1036997	Parameter	gs_font * pfont	1772:17:66484:66497	1036495	0	True				
ANR	1036998	ParameterType	gs_font *		1036495	0					
ANR	1036999	Identifier	pfont		1036495	1					
ANR	1037000	Parameter	int subfont	1772:33:66500:66510	1036495	1	True				
ANR	1037001	ParameterType	int		1036495	0					
ANR	1037002	Identifier	subfont		1036495	1					
ANR	1037003	Parameter	char * font_file_path	1772:46:66513:66532	1036495	2	True				
ANR	1037004	ParameterType	char *		1036495	0					
ANR	1037005	Identifier	font_file_path		1036495	1					
ANR	1037006	Parameter	gs_string * full_font_buf	1773:17:66552:66575	1036495	3	True				
ANR	1037007	ParameterType	gs_string *		1036495	0					
ANR	1037008	Identifier	full_font_buf		1036495	1					
ANR	1037009	Parameter	char * fapi_request	1773:43:66578:66595	1036495	4	True				
ANR	1037010	ParameterType	char *		1036495	0					
ANR	1037011	Identifier	fapi_request		1036495	1					
ANR	1037012	Parameter	char * xlatmap	1773:63:66598:66610	1036495	5	True				
ANR	1037013	ParameterType	char *		1036495	0					
ANR	1037014	Identifier	xlatmap		1036495	1					
ANR	1037015	Parameter	char * * fapi_id	1774:17:66630:66643	1036495	6	True				
ANR	1037016	ParameterType	char * *		1036495	0					
ANR	1037017	Identifier	fapi_id		1036495	1					
ANR	1037018	Parameter	gs_fapi_get_server_param_callback get_server_param_cb	1774:33:66646:66698	1036495	7	True				
ANR	1037019	ParameterType	gs_fapi_get_server_param_callback		1036495	0					
ANR	1037020	Identifier	get_server_param_cb		1036495	1					
ANR	1037021	CFGEntryNode	ENTRY		1036495		True				
ANR	1037022	CFGExitNode	EXIT		1036495		True				
ANR	1037023	Symbol	I -> ig . d -> subtype		1036495						
ANR	1037024	Symbol	* * I		1036495						
ANR	1037025	Symbol	server_param		1036495						
ANR	1037026	Symbol	I -> ig . d		1036495						
ANR	1037027	Symbol	do_restart		1036495						
ANR	1037028	Symbol	I -> ig		1036495						
ANR	1037029	Symbol	xlatmap		1036495						
ANR	1037030	Symbol	strncmp		1036495						
ANR	1037031	Symbol	strlen		1036495						
ANR	1037032	Symbol	server_param_size		1036495						
ANR	1037033	Symbol	gs_fapi_get_server_list		1036495						
ANR	1037034	Symbol	gs_debug_c		1036495						
ANR	1037035	Symbol	* pbfont		1036495						
ANR	1037036	Symbol	full_font_buf		1036495						
ANR	1037037	Symbol	NULL		1036495						
ANR	1037038	Symbol	pbfont -> FAPI		1036495						
ANR	1037039	Symbol	subfont		1036495						
ANR	1037040	Symbol	list		1036495						
ANR	1037041	Symbol	* fapi_id		1036495						
ANR	1037042	Symbol	mem -> non_gc_memory		1036495						
ANR	1037043	Symbol	& server_param		1036495						
ANR	1037044	Symbol	decodingID		1036495						
ANR	1037045	Symbol	gs_fapi_prepare_font		1036495						
ANR	1037046	Symbol	true		1036495						
ANR	1037047	Symbol	* mem		1036495						
ANR	1037048	Symbol	gs_error_unregistered		1036495						
ANR	1037049	Symbol	I -> ensure_open		1036495						
ANR	1037050	Symbol	code		1036495						
ANR	1037051	Symbol	pfont -> memory		1036495						
ANR	1037052	Symbol	fapi_request		1036495						
ANR	1037053	Symbol	I		1036495						
ANR	1037054	Symbol	get_server_param_cb		1036495						
ANR	1037055	Symbol	* I		1036495						
ANR	1037056	Symbol	mem		1036495						
ANR	1037057	Symbol	gs_alloc_bytes_immovable		1036495						
ANR	1037058	Symbol	* I -> ig		1036495						
ANR	1037059	Symbol	fapi_id		1036495						
ANR	1037060	Symbol	pfont		1036495						
ANR	1037061	Symbol	false		1036495						
ANR	1037062	Symbol	* I -> ig . d		1036495						
ANR	1037063	Symbol	& decodingID		1036495						
ANR	1037064	Symbol	gs_error_VMerror		1036495						
ANR	1037065	Symbol	pbfont		1036495						
ANR	1037066	Symbol	* pfont		1036495						
ANR	1037067	Symbol	gs_fapi_renderer_retcode		1036495						
ANR	1037068	Symbol	* list		1036495						
ANR	1037069	Symbol	& server_param_size		1036495						
ANR	1037070	Symbol	font_file_path		1036495						
ANR	1037071	Symbol	free_params		1036495						
ANR	1037072	Function	gs_fapi_available	1878:0:69972:70332							
ANR	1037073	FunctionDef	"gs_fapi_available (gs_memory_t * mem , char * server)"		1037072	0					
ANR	1037074	CompoundStatement		1880:0:70027:70332	1037072	0					
ANR	1037075	IdentifierDeclStatement	bool retval = false ;	1881:4:70033:70052	1037072	0	True				
ANR	1037076	IdentifierDecl	retval = false		1037072	0					
ANR	1037077	IdentifierDeclType	bool		1037072	0					
ANR	1037078	Identifier	retval		1037072	1					
ANR	1037079	AssignmentExpression	retval = false		1037072	2		=			
ANR	1037080	Identifier	false		1037072	0					
ANR	1037081	Identifier	false		1037072	1					
ANR	1037082	IfStatement	if ( server )		1037072	1					
ANR	1037083	Condition	server	1883:8:70063:70068	1037072	0	True				
ANR	1037084	Identifier	server		1037072	0					
ANR	1037085	CompoundStatement		5:8:53:80	1037072	1					
ANR	1037086	IdentifierDeclStatement	gs_fapi_server * serv = NULL ;	1884:8:70081:70108	1037072	0	True				
ANR	1037087	IdentifierDecl	* serv = NULL		1037072	0					
ANR	1037088	IdentifierDeclType	gs_fapi_server *		1037072	0					
ANR	1037089	Identifier	serv		1037072	1					
ANR	1037090	AssignmentExpression	* serv = NULL		1037072	2		=			
ANR	1037091	Identifier	NULL		1037072	0					
ANR	1037092	Identifier	NULL		1037072	1					
ANR	1037093	ExpressionStatement	"retval = ( gs_fapi_find_server ( mem , server , & serv , NULL ) >= 0 )"	1886:8:70119:70180	1037072	1	True				
ANR	1037094	AssignmentExpression	"retval = ( gs_fapi_find_server ( mem , server , & serv , NULL ) >= 0 )"		1037072	0		=			
ANR	1037095	Identifier	retval		1037072	0					
ANR	1037096	RelationalExpression	"gs_fapi_find_server ( mem , server , & serv , NULL ) >= 0"		1037072	1		>=			
ANR	1037097	CallExpression	"gs_fapi_find_server ( mem , server , & serv , NULL )"		1037072	0					
ANR	1037098	Callee	gs_fapi_find_server		1037072	0					
ANR	1037099	Identifier	gs_fapi_find_server		1037072	0					
ANR	1037100	ArgumentList	mem		1037072	1					
ANR	1037101	Argument	mem		1037072	0					
ANR	1037102	Identifier	mem		1037072	0					
ANR	1037103	Argument	server		1037072	1					
ANR	1037104	Identifier	server		1037072	0					
ANR	1037105	Argument	& serv		1037072	2					
ANR	1037106	UnaryOperationExpression	& serv		1037072	0					
ANR	1037107	UnaryOperator	&		1037072	0					
ANR	1037108	Identifier	serv		1037072	1					
ANR	1037109	Argument	NULL		1037072	3					
ANR	1037110	Identifier	NULL		1037072	0					
ANR	1037111	PrimaryExpression	0		1037072	1					
ANR	1037112	ElseStatement	else		1037072	0					
ANR	1037113	CompoundStatement		9:9:169:169	1037072	0					
ANR	1037114	ExpressionStatement	retval = ( ( mem -> gs_lib_ctx -> fapi_servers ) != NULL ) && ( * ( mem -> gs_lib_ctx -> fapi_servers ) != NULL )	1889:8:70207:70303	1037072	0	True				
ANR	1037115	AssignmentExpression	retval = ( ( mem -> gs_lib_ctx -> fapi_servers ) != NULL ) && ( * ( mem -> gs_lib_ctx -> fapi_servers ) != NULL )		1037072	0		=			
ANR	1037116	Identifier	retval		1037072	0					
ANR	1037117	AndExpression	( ( mem -> gs_lib_ctx -> fapi_servers ) != NULL ) && ( * ( mem -> gs_lib_ctx -> fapi_servers ) != NULL )		1037072	1		&&			
ANR	1037118	EqualityExpression	( mem -> gs_lib_ctx -> fapi_servers ) != NULL		1037072	0		!=			
ANR	1037119	PtrMemberAccess	mem -> gs_lib_ctx -> fapi_servers		1037072	0					
ANR	1037120	PtrMemberAccess	mem -> gs_lib_ctx		1037072	0					
ANR	1037121	Identifier	mem		1037072	0					
ANR	1037122	Identifier	gs_lib_ctx		1037072	1					
ANR	1037123	Identifier	fapi_servers		1037072	1					
ANR	1037124	Identifier	NULL		1037072	1					
ANR	1037125	EqualityExpression	* ( mem -> gs_lib_ctx -> fapi_servers ) != NULL		1037072	1		!=			
ANR	1037126	UnaryOperationExpression	* ( mem -> gs_lib_ctx -> fapi_servers )		1037072	0					
ANR	1037127	UnaryOperator	*		1037072	0					
ANR	1037128	PtrMemberAccess	mem -> gs_lib_ctx -> fapi_servers		1037072	1					
ANR	1037129	PtrMemberAccess	mem -> gs_lib_ctx		1037072	0					
ANR	1037130	Identifier	mem		1037072	0					
ANR	1037131	Identifier	gs_lib_ctx		1037072	1					
ANR	1037132	Identifier	fapi_servers		1037072	1					
ANR	1037133	Identifier	NULL		1037072	1					
ANR	1037134	ReturnStatement	return ( retval ) ;	1891:4:70315:70330	1037072	2	True				
ANR	1037135	Identifier	retval		1037072	0					
ANR	1037136	ReturnType	bool		1037072	1					
ANR	1037137	Identifier	gs_fapi_available		1037072	2					
ANR	1037138	ParameterList	"gs_memory_t * mem , char * server"		1037072	3					
ANR	1037139	Parameter	gs_memory_t * mem	1879:18:69995:70010	1037072	0	True				
ANR	1037140	ParameterType	gs_memory_t *		1037072	0					
ANR	1037141	Identifier	mem		1037072	1					
ANR	1037142	Parameter	char * server	1879:36:70013:70024	1037072	1	True				
ANR	1037143	ParameterType	char *		1037072	0					
ANR	1037144	Identifier	server		1037072	1					
ANR	1037145	CFGEntryNode	ENTRY		1037072		True				
ANR	1037146	CFGExitNode	EXIT		1037072		True				
ANR	1037147	Symbol	& serv		1037072						
ANR	1037148	Symbol	server		1037072						
ANR	1037149	Symbol	* ( mem -> gs_lib_ctx -> fapi_servers )		1037072						
ANR	1037150	Symbol	serv		1037072						
ANR	1037151	Symbol	NULL		1037072						
ANR	1037152	Symbol	* mem -> gs_lib_ctx -> fapi_servers		1037072						
ANR	1037153	Symbol	mem -> gs_lib_ctx -> fapi_servers		1037072						
ANR	1037154	Symbol	false		1037072						
ANR	1037155	Symbol	* * mem		1037072						
ANR	1037156	Symbol	retval		1037072						
ANR	1037157	Symbol	gs_fapi_find_server		1037072						
ANR	1037158	Symbol	* * * mem		1037072						
ANR	1037159	Symbol	mem		1037072						
ANR	1037160	Symbol	* * mem -> gs_lib_ctx		1037072						
ANR	1037161	Symbol	* mem -> gs_lib_ctx		1037072						
ANR	1037162	Symbol	mem -> gs_lib_ctx		1037072						
ANR	1037163	Symbol	* mem		1037072						
ANR	1037164	Function	gs_fapi_set_servers_client_data	1894:0:70335:70690							
ANR	1037165	FunctionDef	"gs_fapi_set_servers_client_data (gs_memory_t * mem , const gs_fapi_font * ff_proto , void * ctx_ptr)"		1037164	0					
ANR	1037166	CompoundStatement		1896:0:70435:70690	1037164	0					
ANR	1037167	IdentifierDeclStatement	gs_fapi_server * * servs = gs_fapi_get_server_list ( mem ) ;	1897:4:70441:70494	1037164	0	True				
ANR	1037168	IdentifierDecl	* * servs = gs_fapi_get_server_list ( mem )		1037164	0					
ANR	1037169	IdentifierDeclType	gs_fapi_server * *		1037164	0					
ANR	1037170	Identifier	servs		1037164	1					
ANR	1037171	AssignmentExpression	* * servs = gs_fapi_get_server_list ( mem )		1037164	2		=			
ANR	1037172	Identifier	servs		1037164	0					
ANR	1037173	CallExpression	gs_fapi_get_server_list ( mem )		1037164	1					
ANR	1037174	Callee	gs_fapi_get_server_list		1037164	0					
ANR	1037175	Identifier	gs_fapi_get_server_list		1037164	0					
ANR	1037176	ArgumentList	mem		1037164	1					
ANR	1037177	Argument	mem		1037164	0					
ANR	1037178	Identifier	mem		1037164	0					
ANR	1037179	IfStatement	if ( servs )		1037164	1					
ANR	1037180	Condition	servs	1899:8:70505:70509	1037164	0	True				
ANR	1037181	Identifier	servs		1037164	0					
ANR	1037182	CompoundStatement		4:15:76:76	1037164	1					
ANR	1037183	WhileStatement	while ( * servs )		1037164	0					
ANR	1037184	Condition	* servs	1900:15:70529:70534	1037164	0	True				
ANR	1037185	UnaryOperationExpression	* servs		1037164	0					
ANR	1037186	UnaryOperator	*		1037164	0					
ANR	1037187	Identifier	servs		1037164	1					
ANR	1037188	CompoundStatement		5:23:101:101	1037164	1					
ANR	1037189	ExpressionStatement	( * servs ) -> client_ctx_p = ctx_ptr	1901:12:70551:70583	1037164	0	True				
ANR	1037190	AssignmentExpression	( * servs ) -> client_ctx_p = ctx_ptr		1037164	0		=			
ANR	1037191	PtrMemberAccess	( * servs ) -> client_ctx_p		1037164	0					
ANR	1037192	UnaryOperationExpression	* servs		1037164	0					
ANR	1037193	UnaryOperator	*		1037164	0					
ANR	1037194	Identifier	servs		1037164	1					
ANR	1037195	Identifier	client_ctx_p		1037164	1					
ANR	1037196	Identifier	ctx_ptr		1037164	1					
ANR	1037197	IfStatement	if ( ff_proto )		1037164	1					
ANR	1037198	Condition	ff_proto	1902:16:70601:70608	1037164	0	True				
ANR	1037199	Identifier	ff_proto		1037164	0					
ANR	1037200	ExpressionStatement	( * servs ) -> ff = * ff_proto	1903:16:70627:70651	1037164	1	True				
ANR	1037201	AssignmentExpression	( * servs ) -> ff = * ff_proto		1037164	0		=			
ANR	1037202	PtrMemberAccess	( * servs ) -> ff		1037164	0					
ANR	1037203	UnaryOperationExpression	* servs		1037164	0					
ANR	1037204	UnaryOperator	*		1037164	0					
ANR	1037205	Identifier	servs		1037164	1					
ANR	1037206	Identifier	ff		1037164	1					
ANR	1037207	UnaryOperationExpression	* ff_proto		1037164	1					
ANR	1037208	UnaryOperator	*		1037164	0					
ANR	1037209	Identifier	ff_proto		1037164	1					
ANR	1037210	ExpressionStatement	servs ++	1904:12:70665:70672	1037164	2	True				
ANR	1037211	PostIncDecOperationExpression	servs ++		1037164	0					
ANR	1037212	Identifier	servs		1037164	0					
ANR	1037213	IncDec	++		1037164	1					
ANR	1037214	ReturnType	void		1037164	1					
ANR	1037215	Identifier	gs_fapi_set_servers_client_data		1037164	2					
ANR	1037216	ParameterList	"gs_memory_t * mem , const gs_fapi_font * ff_proto , void * ctx_ptr"		1037164	3					
ANR	1037217	Parameter	gs_memory_t * mem	1895:32:70372:70387	1037164	0	True				
ANR	1037218	ParameterType	gs_memory_t *		1037164	0					
ANR	1037219	Identifier	mem		1037164	1					
ANR	1037220	Parameter	const gs_fapi_font * ff_proto	1895:50:70390:70417	1037164	1	True				
ANR	1037221	ParameterType	const gs_fapi_font *		1037164	0					
ANR	1037222	Identifier	ff_proto		1037164	1					
ANR	1037223	Parameter	void * ctx_ptr	1895:80:70420:70432	1037164	2	True				
ANR	1037224	ParameterType	void *		1037164	0					
ANR	1037225	Identifier	ctx_ptr		1037164	1					
ANR	1037226	CFGEntryNode	ENTRY		1037164		True				
ANR	1037227	CFGExitNode	EXIT		1037164		True				
ANR	1037228	Symbol	( * servs ) -> client_ctx_p		1037164						
ANR	1037229	Symbol	( * servs ) -> ff		1037164						
ANR	1037230	Symbol	* servs		1037164						
ANR	1037231	Symbol	mem		1037164						
ANR	1037232	Symbol	ctx_ptr		1037164						
ANR	1037233	Symbol	* * servs		1037164						
ANR	1037234	Symbol	* ff_proto		1037164						
ANR	1037235	Symbol	ff_proto		1037164						
ANR	1037236	Symbol	gs_fapi_get_server_list		1037164						
ANR	1037237	Symbol	servs		1037164						
ANR	1037238	Function	gs_fapi_get_server_list	1909:0:70693:70799							
ANR	1037239	FunctionDef	gs_fapi_get_server_list (gs_memory_t * mem)		1037238	0					
ANR	1037240	CompoundStatement		1911:0:70753:70799	1037238	0					
ANR	1037241	ReturnStatement	return ( mem -> gs_lib_ctx -> fapi_servers ) ;	1912:4:70759:70797	1037238	0	True				
ANR	1037242	PtrMemberAccess	mem -> gs_lib_ctx -> fapi_servers		1037238	0					
ANR	1037243	PtrMemberAccess	mem -> gs_lib_ctx		1037238	0					
ANR	1037244	Identifier	mem		1037238	0					
ANR	1037245	Identifier	gs_lib_ctx		1037238	1					
ANR	1037246	Identifier	fapi_servers		1037238	1					
ANR	1037247	ReturnType	gs_fapi_server * *		1037238	1					
ANR	1037248	Identifier	gs_fapi_get_server_list		1037238	2					
ANR	1037249	ParameterList	gs_memory_t * mem		1037238	3					
ANR	1037250	Parameter	gs_memory_t * mem	1910:24:70735:70750	1037238	0	True				
ANR	1037251	ParameterType	gs_memory_t *		1037238	0					
ANR	1037252	Identifier	mem		1037238	1					
ANR	1037253	CFGEntryNode	ENTRY		1037238		True				
ANR	1037254	CFGExitNode	EXIT		1037238		True				
ANR	1037255	Symbol	mem		1037238						
ANR	1037256	Symbol	mem -> gs_lib_ctx -> fapi_servers		1037238						
ANR	1037257	Symbol	* * mem		1037238						
ANR	1037258	Symbol	* mem -> gs_lib_ctx		1037238						
ANR	1037259	Symbol	mem -> gs_lib_ctx		1037238						
ANR	1037260	Symbol	* mem		1037238						
ANR	1037261	Function	gs_fapi_find_server	1915:0:70802:72682							
ANR	1037262	FunctionDef	"gs_fapi_find_server (gs_memory_t * mem , const char * name , gs_fapi_server * * server , gs_fapi_get_server_param_callback get_server_param_cb)"		1037261	0					
ANR	1037263	CompoundStatement		1918:0:70962:72682	1037261	0					
ANR	1037264	IdentifierDeclStatement	gs_fapi_server * * servs = gs_fapi_get_server_list ( mem ) ;	1919:4:70968:71021	1037261	0	True				
ANR	1037265	IdentifierDecl	* * servs = gs_fapi_get_server_list ( mem )		1037261	0					
ANR	1037266	IdentifierDeclType	gs_fapi_server * *		1037261	0					
ANR	1037267	Identifier	servs		1037261	1					
ANR	1037268	AssignmentExpression	* * servs = gs_fapi_get_server_list ( mem )		1037261	2		=			
ANR	1037269	Identifier	servs		1037261	0					
ANR	1037270	CallExpression	gs_fapi_get_server_list ( mem )		1037261	1					
ANR	1037271	Callee	gs_fapi_get_server_list		1037261	0					
ANR	1037272	Identifier	gs_fapi_get_server_list		1037261	0					
ANR	1037273	ArgumentList	mem		1037261	1					
ANR	1037274	Argument	mem		1037261	0					
ANR	1037275	Identifier	mem		1037261	0					
ANR	1037276	IdentifierDeclStatement	char * server_param = NULL ;	1920:4:71027:71052	1037261	1	True				
ANR	1037277	IdentifierDecl	* server_param = NULL		1037261	0					
ANR	1037278	IdentifierDeclType	char *		1037261	0					
ANR	1037279	Identifier	server_param		1037261	1					
ANR	1037280	AssignmentExpression	* server_param = NULL		1037261	2		=			
ANR	1037281	Identifier	NULL		1037261	0					
ANR	1037282	Identifier	NULL		1037261	1					
ANR	1037283	IdentifierDeclStatement	int server_param_size = 0 ;	1921:4:71058:71083	1037261	2	True				
ANR	1037284	IdentifierDecl	server_param_size = 0		1037261	0					
ANR	1037285	IdentifierDeclType	int		1037261	0					
ANR	1037286	Identifier	server_param_size		1037261	1					
ANR	1037287	AssignmentExpression	server_param_size = 0		1037261	2		=			
ANR	1037288	Identifier	server_param_size		1037261	0					
ANR	1037289	PrimaryExpression	0		1037261	1					
ANR	1037290	IdentifierDeclStatement	int code = 0 ;	1922:4:71089:71101	1037261	3	True				
ANR	1037291	IdentifierDecl	code = 0		1037261	0					
ANR	1037292	IdentifierDeclType	int		1037261	0					
ANR	1037293	Identifier	code		1037261	1					
ANR	1037294	AssignmentExpression	code = 0		1037261	2		=			
ANR	1037295	Identifier	code		1037261	0					
ANR	1037296	PrimaryExpression	0		1037261	1					
ANR	1037297	IdentifierDeclStatement	bool free_params = false ;	1923:4:71107:71131	1037261	4	True				
ANR	1037298	IdentifierDecl	free_params = false		1037261	0					
ANR	1037299	IdentifierDeclType	bool		1037261	0					
ANR	1037300	Identifier	free_params		1037261	1					
ANR	1037301	AssignmentExpression	free_params = false		1037261	2		=			
ANR	1037302	Identifier	false		1037261	0					
ANR	1037303	Identifier	false		1037261	1					
ANR	1037304	ExpressionStatement	( * server ) = NULL	1925:4:71138:71154	1037261	5	True				
ANR	1037305	AssignmentExpression	( * server ) = NULL		1037261	0		=			
ANR	1037306	UnaryOperationExpression	* server		1037261	0					
ANR	1037307	UnaryOperator	*		1037261	0					
ANR	1037308	Identifier	server		1037261	1					
ANR	1037309	Identifier	NULL		1037261	1					
ANR	1037310	WhileStatement	"while ( servs && * servs && strcmp ( ( char * ) ( * servs ) -> ig . d -> subtype , ( char * ) name ) )"		1037261	6					
ANR	1037311	Condition	"servs && * servs && strcmp ( ( char * ) ( * servs ) -> ig . d -> subtype , ( char * ) name )"	1927:11:71168:71239	1037261	0	True				
ANR	1037312	AndExpression	"servs && * servs && strcmp ( ( char * ) ( * servs ) -> ig . d -> subtype , ( char * ) name )"		1037261	0		&&			
ANR	1037313	Identifier	servs		1037261	0					
ANR	1037314	AndExpression	"* servs && strcmp ( ( char * ) ( * servs ) -> ig . d -> subtype , ( char * ) name )"		1037261	1		&&			
ANR	1037315	UnaryOperationExpression	* servs		1037261	0					
ANR	1037316	UnaryOperator	*		1037261	0					
ANR	1037317	Identifier	servs		1037261	1					
ANR	1037318	CallExpression	"strcmp ( ( char * ) ( * servs ) -> ig . d -> subtype , ( char * ) name )"		1037261	1					
ANR	1037319	Callee	strcmp		1037261	0					
ANR	1037320	Identifier	strcmp		1037261	0					
ANR	1037321	ArgumentList	( char * ) ( * servs ) -> ig . d -> subtype		1037261	1					
ANR	1037322	Argument	( char * ) ( * servs ) -> ig . d -> subtype		1037261	0					
ANR	1037323	CastExpression	( char * ) ( * servs ) -> ig . d -> subtype		1037261	0					
ANR	1037324	CastTarget	char *		1037261	0					
ANR	1037325	PtrMemberAccess	( * servs ) -> ig . d -> subtype		1037261	1					
ANR	1037326	MemberAccess	( * servs ) -> ig . d		1037261	0					
ANR	1037327	PtrMemberAccess	( * servs ) -> ig		1037261	0					
ANR	1037328	UnaryOperationExpression	* servs		1037261	0					
ANR	1037329	UnaryOperator	*		1037261	0					
ANR	1037330	Identifier	servs		1037261	1					
ANR	1037331	Identifier	ig		1037261	1					
ANR	1037332	Identifier	d		1037261	1					
ANR	1037333	Identifier	subtype		1037261	1					
ANR	1037334	Argument	( char * ) name		1037261	1					
ANR	1037335	CastExpression	( char * ) name		1037261	0					
ANR	1037336	CastTarget	char *		1037261	0					
ANR	1037337	Identifier	name		1037261	1					
ANR	1037338	CompoundStatement		10:85:279:279	1037261	1					
ANR	1037339	ExpressionStatement	servs ++	1928:8:71252:71259	1037261	0	True				
ANR	1037340	PostIncDecOperationExpression	servs ++		1037261	0					
ANR	1037341	Identifier	servs		1037261	0					
ANR	1037342	IncDec	++		1037261	1					
ANR	1037343	IfStatement	if ( servs && * servs && get_server_param_cb )		1037261	7					
ANR	1037344	Condition	servs && * servs && get_server_param_cb	1931:8:71276:71313	1037261	0	True				
ANR	1037345	AndExpression	servs && * servs && get_server_param_cb		1037261	0		&&			
ANR	1037346	Identifier	servs		1037261	0					
ANR	1037347	AndExpression	* servs && get_server_param_cb		1037261	1		&&			
ANR	1037348	UnaryOperationExpression	* servs		1037261	0					
ANR	1037349	UnaryOperator	*		1037261	0					
ANR	1037350	Identifier	servs		1037261	1					
ANR	1037351	Identifier	get_server_param_cb		1037261	1					
ANR	1037352	CompoundStatement		14:48:353:353	1037261	1					
ANR	1037353	ExpressionStatement	"( * get_server_param_cb ) ( ( * servs ) , ( char * ) ( * servs ) -> ig . d -> subtype , & server_param , & server_param_size )"	1932:8:71326:71460	1037261	0	True				
ANR	1037354	CallExpression	"( * get_server_param_cb ) ( ( * servs ) , ( char * ) ( * servs ) -> ig . d -> subtype , & server_param , & server_param_size )"		1037261	0					
ANR	1037355	Callee	* get_server_param_cb		1037261	0					
ANR	1037356	UnaryOperationExpression	* get_server_param_cb		1037261	0					
ANR	1037357	UnaryOperator	*		1037261	0					
ANR	1037358	Identifier	get_server_param_cb		1037261	1					
ANR	1037359	ArgumentList	* servs		1037261	1					
ANR	1037360	Argument	* servs		1037261	0					
ANR	1037361	UnaryOperationExpression	* servs		1037261	0					
ANR	1037362	UnaryOperator	*		1037261	0					
ANR	1037363	Identifier	servs		1037261	1					
ANR	1037364	Argument	( char * ) ( * servs ) -> ig . d -> subtype		1037261	1					
ANR	1037365	CastExpression	( char * ) ( * servs ) -> ig . d -> subtype		1037261	0					
ANR	1037366	CastTarget	char *		1037261	0					
ANR	1037367	PtrMemberAccess	( * servs ) -> ig . d -> subtype		1037261	1					
ANR	1037368	MemberAccess	( * servs ) -> ig . d		1037261	0					
ANR	1037369	PtrMemberAccess	( * servs ) -> ig		1037261	0					
ANR	1037370	UnaryOperationExpression	* servs		1037261	0					
ANR	1037371	UnaryOperator	*		1037261	0					
ANR	1037372	Identifier	servs		1037261	1					
ANR	1037373	Identifier	ig		1037261	1					
ANR	1037374	Identifier	d		1037261	1					
ANR	1037375	Identifier	subtype		1037261	1					
ANR	1037376	Argument	& server_param		1037261	2					
ANR	1037377	UnaryOperationExpression	& server_param		1037261	0					
ANR	1037378	UnaryOperator	&		1037261	0					
ANR	1037379	Identifier	server_param		1037261	1					
ANR	1037380	Argument	& server_param_size		1037261	3					
ANR	1037381	UnaryOperationExpression	& server_param_size		1037261	0					
ANR	1037382	UnaryOperator	&		1037261	0					
ANR	1037383	Identifier	server_param_size		1037261	1					
ANR	1037384	IfStatement	if ( server_param == NULL && server_param_size > 0 )		1037261	1					
ANR	1037385	Condition	server_param == NULL && server_param_size > 0	1935:12:71475:71519	1037261	0	True				
ANR	1037386	AndExpression	server_param == NULL && server_param_size > 0		1037261	0		&&			
ANR	1037387	EqualityExpression	server_param == NULL		1037261	0		==			
ANR	1037388	Identifier	server_param		1037261	0					
ANR	1037389	Identifier	NULL		1037261	1					
ANR	1037390	RelationalExpression	server_param_size > 0		1037261	1		>			
ANR	1037391	Identifier	server_param_size		1037261	0					
ANR	1037392	PrimaryExpression	0		1037261	1					
ANR	1037393	CompoundStatement		18:59:559:559	1037261	1					
ANR	1037394	ExpressionStatement	"server_param = ( char * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_find_server server params"" )"	1936:12:71536:71757	1037261	0	True				
ANR	1037395	AssignmentExpression	"server_param = ( char * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_find_server server params"" )"		1037261	0		=			
ANR	1037396	Identifier	server_param		1037261	0					
ANR	1037397	CastExpression	"( char * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_find_server server params"" )"		1037261	1					
ANR	1037398	CastTarget	char *		1037261	0					
ANR	1037399	CallExpression	"gs_alloc_bytes_immovable ( mem -> non_gc_memory , server_param_size , ""gs_fapi_find_server server params"" )"		1037261	1					
ANR	1037400	Callee	gs_alloc_bytes_immovable		1037261	0					
ANR	1037401	Identifier	gs_alloc_bytes_immovable		1037261	0					
ANR	1037402	ArgumentList	mem -> non_gc_memory		1037261	1					
ANR	1037403	Argument	mem -> non_gc_memory		1037261	0					
ANR	1037404	PtrMemberAccess	mem -> non_gc_memory		1037261	0					
ANR	1037405	Identifier	mem		1037261	0					
ANR	1037406	Identifier	non_gc_memory		1037261	1					
ANR	1037407	Argument	server_param_size		1037261	1					
ANR	1037408	Identifier	server_param_size		1037261	0					
ANR	1037409	Argument	"""gs_fapi_find_server server params"""		1037261	2					
ANR	1037410	PrimaryExpression	"""gs_fapi_find_server server params"""		1037261	0					
ANR	1037411	IfStatement	if ( ! server_param )		1037261	1					
ANR	1037412	Condition	! server_param	1940:16:71775:71787	1037261	0	True				
ANR	1037413	UnaryOperationExpression	! server_param		1037261	0					
ANR	1037414	UnaryOperator	!		1037261	0					
ANR	1037415	Identifier	server_param		1037261	1					
ANR	1037416	CompoundStatement		23:31:827:827	1037261	1					
ANR	1037417	ExpressionStatement	return_error ( gs_error_VMerror )	1941:16:71808:71838	1037261	0	True				
ANR	1037418	CallExpression	return_error ( gs_error_VMerror )		1037261	0					
ANR	1037419	Callee	return_error		1037261	0					
ANR	1037420	Identifier	return_error		1037261	0					
ANR	1037421	ArgumentList	gs_error_VMerror		1037261	1					
ANR	1037422	Argument	gs_error_VMerror		1037261	0					
ANR	1037423	Identifier	gs_error_VMerror		1037261	0					
ANR	1037424	ExpressionStatement	free_params = true	1943:12:71866:71884	1037261	2	True				
ANR	1037425	AssignmentExpression	free_params = true		1037261	0		=			
ANR	1037426	Identifier	free_params		1037261	0					
ANR	1037427	Identifier	true		1037261	1					
ANR	1037428	ExpressionStatement	"( * get_server_param_cb ) ( ( * servs ) , ( const char * ) ( * servs ) -> ig . d -> subtype , & server_param , & server_param_size )"	1944:12:71898:72077	1037261	3	True				
ANR	1037429	CallExpression	"( * get_server_param_cb ) ( ( * servs ) , ( const char * ) ( * servs ) -> ig . d -> subtype , & server_param , & server_param_size )"		1037261	0					
ANR	1037430	Callee	* get_server_param_cb		1037261	0					
ANR	1037431	UnaryOperationExpression	* get_server_param_cb		1037261	0					
ANR	1037432	UnaryOperator	*		1037261	0					
ANR	1037433	Identifier	get_server_param_cb		1037261	1					
ANR	1037434	ArgumentList	* servs		1037261	1					
ANR	1037435	Argument	* servs		1037261	0					
ANR	1037436	UnaryOperationExpression	* servs		1037261	0					
ANR	1037437	UnaryOperator	*		1037261	0					
ANR	1037438	Identifier	servs		1037261	1					
ANR	1037439	Argument	( const char * ) ( * servs ) -> ig . d -> subtype		1037261	1					
ANR	1037440	CastExpression	( const char * ) ( * servs ) -> ig . d -> subtype		1037261	0					
ANR	1037441	CastTarget	const char *		1037261	0					
ANR	1037442	PtrMemberAccess	( * servs ) -> ig . d -> subtype		1037261	1					
ANR	1037443	MemberAccess	( * servs ) -> ig . d		1037261	0					
ANR	1037444	PtrMemberAccess	( * servs ) -> ig		1037261	0					
ANR	1037445	UnaryOperationExpression	* servs		1037261	0					
ANR	1037446	UnaryOperator	*		1037261	0					
ANR	1037447	Identifier	servs		1037261	1					
ANR	1037448	Identifier	ig		1037261	1					
ANR	1037449	Identifier	d		1037261	1					
ANR	1037450	Identifier	subtype		1037261	1					
ANR	1037451	Argument	& server_param		1037261	2					
ANR	1037452	UnaryOperationExpression	& server_param		1037261	0					
ANR	1037453	UnaryOperator	&		1037261	0					
ANR	1037454	Identifier	server_param		1037261	1					
ANR	1037455	Argument	& server_param_size		1037261	3					
ANR	1037456	UnaryOperationExpression	& server_param_size		1037261	0					
ANR	1037457	UnaryOperator	&		1037261	0					
ANR	1037458	Identifier	server_param_size		1037261	1					
ANR	1037459	ExpressionStatement	"code = gs_fapi_renderer_retcode ( mem , ( * servs ) , ( * servs ) -> ensure_open ( ( * servs ) , server_param , server_param_size ) )"	1949:8:72098:72353	1037261	2	True				
ANR	1037460	AssignmentExpression	"code = gs_fapi_renderer_retcode ( mem , ( * servs ) , ( * servs ) -> ensure_open ( ( * servs ) , server_param , server_param_size ) )"		1037261	0		=			
ANR	1037461	Identifier	code		1037261	0					
ANR	1037462	CallExpression	"gs_fapi_renderer_retcode ( mem , ( * servs ) , ( * servs ) -> ensure_open ( ( * servs ) , server_param , server_param_size ) )"		1037261	1					
ANR	1037463	Callee	gs_fapi_renderer_retcode		1037261	0					
ANR	1037464	Identifier	gs_fapi_renderer_retcode		1037261	0					
ANR	1037465	ArgumentList	mem		1037261	1					
ANR	1037466	Argument	mem		1037261	0					
ANR	1037467	Identifier	mem		1037261	0					
ANR	1037468	Argument	* servs		1037261	1					
ANR	1037469	UnaryOperationExpression	* servs		1037261	0					
ANR	1037470	UnaryOperator	*		1037261	0					
ANR	1037471	Identifier	servs		1037261	1					
ANR	1037472	Argument	"( * servs ) -> ensure_open ( ( * servs ) , server_param , server_param_size )"		1037261	2					
ANR	1037473	CallExpression	"( * servs ) -> ensure_open ( ( * servs ) , server_param , server_param_size )"		1037261	0					
ANR	1037474	Callee	( * servs ) -> ensure_open		1037261	0					
ANR	1037475	PtrMemberAccess	( * servs ) -> ensure_open		1037261	0					
ANR	1037476	UnaryOperationExpression	* servs		1037261	0					
ANR	1037477	UnaryOperator	*		1037261	0					
ANR	1037478	Identifier	servs		1037261	1					
ANR	1037479	Identifier	ensure_open		1037261	1					
ANR	1037480	ArgumentList	* servs		1037261	1					
ANR	1037481	Argument	* servs		1037261	0					
ANR	1037482	UnaryOperationExpression	* servs		1037261	0					
ANR	1037483	UnaryOperator	*		1037261	0					
ANR	1037484	Identifier	servs		1037261	1					
ANR	1037485	Argument	server_param		1037261	1					
ANR	1037486	Identifier	server_param		1037261	0					
ANR	1037487	Argument	server_param_size		1037261	2					
ANR	1037488	Identifier	server_param_size		1037261	0					
ANR	1037489	IfStatement	if ( free_params )		1037261	3					
ANR	1037490	Condition	free_params	1954:12:72368:72378	1037261	0	True				
ANR	1037491	Identifier	free_params		1037261	0					
ANR	1037492	CompoundStatement		37:25:1418:1418	1037261	1					
ANR	1037493	ExpressionStatement	"gs_free_object ( mem -> non_gc_memory , server_param , ""gs_fapi_find_server: server_param"" )"	1955:12:72395:72507	1037261	0	True				
ANR	1037494	CallExpression	"gs_free_object ( mem -> non_gc_memory , server_param , ""gs_fapi_find_server: server_param"" )"		1037261	0					
ANR	1037495	Callee	gs_free_object		1037261	0					
ANR	1037496	Identifier	gs_free_object		1037261	0					
ANR	1037497	ArgumentList	mem -> non_gc_memory		1037261	1					
ANR	1037498	Argument	mem -> non_gc_memory		1037261	0					
ANR	1037499	PtrMemberAccess	mem -> non_gc_memory		1037261	0					
ANR	1037500	Identifier	mem		1037261	0					
ANR	1037501	Identifier	non_gc_memory		1037261	1					
ANR	1037502	Argument	server_param		1037261	1					
ANR	1037503	Identifier	server_param		1037261	0					
ANR	1037504	Argument	"""gs_fapi_find_server: server_param"""		1037261	2					
ANR	1037505	PrimaryExpression	"""gs_fapi_find_server: server_param"""		1037261	0					
ANR	1037506	ExpressionStatement	( * server ) = ( * servs )	1959:8:72528:72548	1037261	4	True				
ANR	1037507	AssignmentExpression	( * server ) = ( * servs )		1037261	0		=			
ANR	1037508	UnaryOperationExpression	* server		1037261	0					
ANR	1037509	UnaryOperator	*		1037261	0					
ANR	1037510	Identifier	server		1037261	1					
ANR	1037511	UnaryOperationExpression	* servs		1037261	1					
ANR	1037512	UnaryOperator	*		1037261	0					
ANR	1037513	Identifier	servs		1037261	1					
ANR	1037514	ElseStatement	else		1037261	0					
ANR	1037515	CompoundStatement		44:9:1602:1602	1037261	0					
ANR	1037516	IfStatement	if ( ! servs || ! ( * servs ) )		1037261	0					
ANR	1037517	Condition	! servs || ! ( * servs )	1962:12:72579:72597	1037261	0	True				
ANR	1037518	OrExpression	! servs || ! ( * servs )		1037261	0		||			
ANR	1037519	UnaryOperationExpression	! servs		1037261	0					
ANR	1037520	UnaryOperator	!		1037261	0					
ANR	1037521	Identifier	servs		1037261	1					
ANR	1037522	UnaryOperationExpression	! ( * servs )		1037261	1					
ANR	1037523	UnaryOperator	!		1037261	0					
ANR	1037524	UnaryOperationExpression	* servs		1037261	1					
ANR	1037525	UnaryOperator	*		1037261	0					
ANR	1037526	Identifier	servs		1037261	1					
ANR	1037527	CompoundStatement		45:33:1637:1637	1037261	1					
ANR	1037528	ExpressionStatement	code = gs_error_invalidaccess	1963:12:72614:72643	1037261	0	True				
ANR	1037529	AssignmentExpression	code = gs_error_invalidaccess		1037261	0		=			
ANR	1037530	Identifier	code		1037261	0					
ANR	1037531	Identifier	gs_error_invalidaccess		1037261	1					
ANR	1037532	ReturnStatement	return ( code ) ;	1968:4:72667:72680	1037261	8	True				
ANR	1037533	Identifier	code		1037261	0					
ANR	1037534	ReturnType	int		1037261	1					
ANR	1037535	Identifier	gs_fapi_find_server		1037261	2					
ANR	1037536	ParameterList	"gs_memory_t * mem , const char * name , gs_fapi_server * * server , gs_fapi_get_server_param_callback get_server_param_cb"		1037261	3					
ANR	1037537	Parameter	gs_memory_t * mem	1916:20:70826:70841	1037261	0	True				
ANR	1037538	ParameterType	gs_memory_t *		1037261	0					
ANR	1037539	Identifier	mem		1037261	1					
ANR	1037540	Parameter	const char * name	1916:38:70844:70859	1037261	1	True				
ANR	1037541	ParameterType	const char *		1037261	0					
ANR	1037542	Identifier	name		1037261	1					
ANR	1037543	Parameter	gs_fapi_server * * server	1916:56:70862:70884	1037261	2	True				
ANR	1037544	ParameterType	gs_fapi_server * *		1037261	0					
ANR	1037545	Identifier	server		1037261	1					
ANR	1037546	Parameter	gs_fapi_get_server_param_callback get_server_param_cb	1917:20:70907:70959	1037261	3	True				
ANR	1037547	ParameterType	gs_fapi_get_server_param_callback		1037261	0					
ANR	1037548	Identifier	get_server_param_cb		1037261	1					
ANR	1037549	CFGEntryNode	ENTRY		1037261		True				
ANR	1037550	CFGExitNode	EXIT		1037261		True				
ANR	1037551	Symbol	server		1037261						
ANR	1037552	Symbol	code		1037261						
ANR	1037553	Symbol	* server		1037261						
ANR	1037554	Symbol	* servs		1037261						
ANR	1037555	Symbol	* * * servs		1037261						
ANR	1037556	Symbol	* ( * servs ) -> ig		1037261						
ANR	1037557	Symbol	server_param		1037261						
ANR	1037558	Symbol	get_server_param_cb		1037261						
ANR	1037559	Symbol	( * servs ) -> ig		1037261						
ANR	1037560	Symbol	mem		1037261						
ANR	1037561	Symbol	gs_alloc_bytes_immovable		1037261						
ANR	1037562	Symbol	server_param_size		1037261						
ANR	1037563	Symbol	gs_fapi_get_server_list		1037261						
ANR	1037564	Symbol	( * servs ) -> ensure_open		1037261						
ANR	1037565	Symbol	servs		1037261						
ANR	1037566	Symbol	gs_error_invalidaccess		1037261						
ANR	1037567	Symbol	strcmp		1037261						
ANR	1037568	Symbol	NULL		1037261						
ANR	1037569	Symbol	( * servs ) -> ig . d -> subtype		1037261						
ANR	1037570	Symbol	false		1037261						
ANR	1037571	Symbol	( * servs ) -> ig . d		1037261						
ANR	1037572	Symbol	mem -> non_gc_memory		1037261						
ANR	1037573	Symbol	& server_param		1037261						
ANR	1037574	Symbol	gs_error_VMerror		1037261						
ANR	1037575	Symbol	gs_fapi_renderer_retcode		1037261						
ANR	1037576	Symbol	* * servs		1037261						
ANR	1037577	Symbol	& server_param_size		1037261						
ANR	1037578	Symbol	* ( * servs ) -> ig . d		1037261						
ANR	1037579	Symbol	name		1037261						
ANR	1037580	Symbol	true		1037261						
ANR	1037581	Symbol	free_params		1037261						
ANR	1037582	Symbol	* mem		1037261						
ANR	1037583	Function	gs_fapi_init	1971:0:72685:73955							
ANR	1037584	FunctionDef	gs_fapi_init (gs_memory_t * mem)		1037583	0					
ANR	1037585	CompoundStatement		1973:0:72720:73955	1037583	0					
ANR	1037586	IdentifierDeclStatement	int code = 0 ;	1974:4:72726:72738	1037583	0	True				
ANR	1037587	IdentifierDecl	code = 0		1037583	0					
ANR	1037588	IdentifierDeclType	int		1037583	0					
ANR	1037589	Identifier	code		1037583	1					
ANR	1037590	AssignmentExpression	code = 0		1037583	2		=			
ANR	1037591	Identifier	code		1037583	0					
ANR	1037592	PrimaryExpression	0		1037583	1					
ANR	1037593	IdentifierDeclStatement	"int i , num_servers = 0 ;"	1975:4:72744:72766	1037583	1	True				
ANR	1037594	IdentifierDecl	i		1037583	0					
ANR	1037595	IdentifierDeclType	int		1037583	0					
ANR	1037596	Identifier	i		1037583	1					
ANR	1037597	IdentifierDecl	num_servers = 0		1037583	1					
ANR	1037598	IdentifierDeclType	int		1037583	0					
ANR	1037599	Identifier	num_servers		1037583	1					
ANR	1037600	AssignmentExpression	num_servers = 0		1037583	2		=			
ANR	1037601	Identifier	num_servers		1037583	0					
ANR	1037602	PrimaryExpression	0		1037583	1					
ANR	1037603	IdentifierDeclStatement	gs_fapi_server * * servs = NULL ;	1976:4:72772:72801	1037583	2	True				
ANR	1037604	IdentifierDecl	* * servs = NULL		1037583	0					
ANR	1037605	IdentifierDeclType	gs_fapi_server * *		1037583	0					
ANR	1037606	Identifier	servs		1037583	1					
ANR	1037607	AssignmentExpression	* * servs = NULL		1037583	2		=			
ANR	1037608	Identifier	NULL		1037583	0					
ANR	1037609	Identifier	NULL		1037583	1					
ANR	1037610	IdentifierDeclStatement	const gs_fapi_server_init_func * gs_fapi_server_inits = gs_get_fapi_server_inits ( ) ;	1977:4:72807:72896	1037583	3	True				
ANR	1037611	IdentifierDecl	* gs_fapi_server_inits = gs_get_fapi_server_inits ( )		1037583	0					
ANR	1037612	IdentifierDeclType	const gs_fapi_server_init_func *		1037583	0					
ANR	1037613	Identifier	gs_fapi_server_inits		1037583	1					
ANR	1037614	AssignmentExpression	* gs_fapi_server_inits = gs_get_fapi_server_inits ( )		1037583	2		=			
ANR	1037615	Identifier	gs_fapi_server_inits		1037583	0					
ANR	1037616	CallExpression	gs_get_fapi_server_inits ( )		1037583	1					
ANR	1037617	Callee	gs_get_fapi_server_inits		1037583	0					
ANR	1037618	Identifier	gs_get_fapi_server_inits		1037583	0					
ANR	1037619	ArgumentList			1037583	1					
ANR	1037620	WhileStatement	while ( gs_fapi_server_inits [ num_servers ] )		1037583	4					
ANR	1037621	Condition	gs_fapi_server_inits [ num_servers ]	1980:11:72910:72942	1037583	0	True				
ANR	1037622	ArrayIndexing	gs_fapi_server_inits [ num_servers ]		1037583	0					
ANR	1037623	Identifier	gs_fapi_server_inits		1037583	0					
ANR	1037624	Identifier	num_servers		1037583	1					
ANR	1037625	CompoundStatement		8:46:224:224	1037583	1					
ANR	1037626	ExpressionStatement	num_servers ++	1981:8:72955:72968	1037583	0	True				
ANR	1037627	PostIncDecOperationExpression	num_servers ++		1037583	0					
ANR	1037628	Identifier	num_servers		1037583	0					
ANR	1037629	IncDec	++		1037583	1					
ANR	1037630	ExpressionStatement	"servs = ( gs_fapi_server * * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , ( num_servers + 1 ) * sizeof ( gs_fapi_server * ) , ""gs_fapi_init"" )"	1984:4:72981:73336	1037583	5	True				
ANR	1037631	AssignmentExpression	"servs = ( gs_fapi_server * * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , ( num_servers + 1 ) * sizeof ( gs_fapi_server * ) , ""gs_fapi_init"" )"		1037583	0		=			
ANR	1037632	Identifier	servs		1037583	0					
ANR	1037633	CastExpression	"( gs_fapi_server * * ) gs_alloc_bytes_immovable ( mem -> non_gc_memory , ( num_servers + 1 ) * sizeof ( gs_fapi_server * ) , ""gs_fapi_init"" )"		1037583	1					
ANR	1037634	CastTarget	gs_fapi_server * *		1037583	0					
ANR	1037635	CallExpression	"gs_alloc_bytes_immovable ( mem -> non_gc_memory , ( num_servers + 1 ) * sizeof ( gs_fapi_server * ) , ""gs_fapi_init"" )"		1037583	1					
ANR	1037636	Callee	gs_alloc_bytes_immovable		1037583	0					
ANR	1037637	Identifier	gs_alloc_bytes_immovable		1037583	0					
ANR	1037638	ArgumentList	mem -> non_gc_memory		1037583	1					
ANR	1037639	Argument	mem -> non_gc_memory		1037583	0					
ANR	1037640	PtrMemberAccess	mem -> non_gc_memory		1037583	0					
ANR	1037641	Identifier	mem		1037583	0					
ANR	1037642	Identifier	non_gc_memory		1037583	1					
ANR	1037643	Argument	( num_servers + 1 ) * sizeof ( gs_fapi_server * )		1037583	1					
ANR	1037644	MultiplicativeExpression	( num_servers + 1 ) * sizeof ( gs_fapi_server * )		1037583	0		*			
ANR	1037645	AdditiveExpression	num_servers + 1		1037583	0		+			
ANR	1037646	Identifier	num_servers		1037583	0					
ANR	1037647	PrimaryExpression	1		1037583	1					
ANR	1037648	SizeofExpression	sizeof ( gs_fapi_server * )		1037583	1					
ANR	1037649	Sizeof	sizeof		1037583	0					
ANR	1037650	SizeofOperand	gs_fapi_server *		1037583	1					
ANR	1037651	Argument	"""gs_fapi_init"""		1037583	2					
ANR	1037652	PrimaryExpression	"""gs_fapi_init"""		1037583	0					
ANR	1037653	IfStatement	if ( ! servs )		1037583	6					
ANR	1037654	Condition	! servs	1990:8:73346:73351	1037583	0	True				
ANR	1037655	UnaryOperationExpression	! servs		1037583	0					
ANR	1037656	UnaryOperator	!		1037583	0					
ANR	1037657	Identifier	servs		1037583	1					
ANR	1037658	CompoundStatement		18:16:633:633	1037583	1					
ANR	1037659	ExpressionStatement	return_error ( gs_error_VMerror )	1991:8:73364:73394	1037583	0	True				
ANR	1037660	CallExpression	return_error ( gs_error_VMerror )		1037583	0					
ANR	1037661	Callee	return_error		1037583	0					
ANR	1037662	Identifier	return_error		1037583	0					
ANR	1037663	ArgumentList	gs_error_VMerror		1037583	1					
ANR	1037664	Argument	gs_error_VMerror		1037583	0					
ANR	1037665	Identifier	gs_error_VMerror		1037583	0					
ANR	1037666	ForStatement	for ( i = 0 ; i < num_servers ; i ++ )		1037583	7					
ANR	1037667	ForInit	i = 0 ;	1994:9:73412:73417	1037583	0	True				
ANR	1037668	AssignmentExpression	i = 0		1037583	0		=			
ANR	1037669	Identifier	i		1037583	0					
ANR	1037670	PrimaryExpression	0		1037583	1					
ANR	1037671	Condition	i < num_servers	1994:16:73419:73433	1037583	1	True				
ANR	1037672	RelationalExpression	i < num_servers		1037583	0		<			
ANR	1037673	Identifier	i		1037583	0					
ANR	1037674	Identifier	num_servers		1037583	1					
ANR	1037675	PostIncDecOperationExpression	i ++	1994:33:73436:73438	1037583	2	True				
ANR	1037676	Identifier	i		1037583	0					
ANR	1037677	IncDec	++		1037583	1					
ANR	1037678	CompoundStatement		23:8:730:828	1037583	3					
ANR	1037679	IdentifierDeclStatement	gs_fapi_server_init_func * f = ( gs_fapi_server_init_func * ) & ( gs_fapi_server_inits [ i ] ) ;	1995:8:73451:73549	1037583	0	True				
ANR	1037680	IdentifierDecl	* f = ( gs_fapi_server_init_func * ) & ( gs_fapi_server_inits [ i ] )		1037583	0					
ANR	1037681	IdentifierDeclType	gs_fapi_server_init_func *		1037583	0					
ANR	1037682	Identifier	f		1037583	1					
ANR	1037683	AssignmentExpression	* f = ( gs_fapi_server_init_func * ) & ( gs_fapi_server_inits [ i ] )		1037583	2		=			
ANR	1037684	Identifier	f		1037583	0					
ANR	1037685	CastExpression	( gs_fapi_server_init_func * ) & ( gs_fapi_server_inits [ i ] )		1037583	1					
ANR	1037686	CastTarget	gs_fapi_server_init_func *		1037583	0					
ANR	1037687	UnaryOperationExpression	& ( gs_fapi_server_inits [ i ] )		1037583	1					
ANR	1037688	UnaryOperator	&		1037583	0					
ANR	1037689	ArrayIndexing	gs_fapi_server_inits [ i ]		1037583	1					
ANR	1037690	Identifier	gs_fapi_server_inits		1037583	0					
ANR	1037691	Identifier	i		1037583	1					
ANR	1037692	ExpressionStatement	"code = ( * f ) ( mem , & ( servs [ i ] ) )"	1998:8:73560:73590	1037583	1	True				
ANR	1037693	AssignmentExpression	"code = ( * f ) ( mem , & ( servs [ i ] ) )"		1037583	0		=			
ANR	1037694	Identifier	code		1037583	0					
ANR	1037695	CallExpression	"( * f ) ( mem , & ( servs [ i ] ) )"		1037583	1					
ANR	1037696	Callee	* f		1037583	0					
ANR	1037697	UnaryOperationExpression	* f		1037583	0					
ANR	1037698	UnaryOperator	*		1037583	0					
ANR	1037699	Identifier	f		1037583	1					
ANR	1037700	ArgumentList	mem		1037583	1					
ANR	1037701	Argument	mem		1037583	0					
ANR	1037702	Identifier	mem		1037583	0					
ANR	1037703	Argument	& ( servs [ i ] )		1037583	1					
ANR	1037704	UnaryOperationExpression	& ( servs [ i ] )		1037583	0					
ANR	1037705	UnaryOperator	&		1037583	0					
ANR	1037706	ArrayIndexing	servs [ i ]		1037583	1					
ANR	1037707	Identifier	servs		1037583	0					
ANR	1037708	Identifier	i		1037583	1					
ANR	1037709	IfStatement	if ( code != 0 )		1037583	2					
ANR	1037710	Condition	code != 0	1999:12:73604:73612	1037583	0	True				
ANR	1037711	EqualityExpression	code != 0		1037583	0		!=			
ANR	1037712	Identifier	code		1037583	0					
ANR	1037713	PrimaryExpression	0		1037583	1					
ANR	1037714	CompoundStatement		27:23:894:894	1037583	1					
ANR	1037715	BreakStatement	break ;	2000:12:73629:73634	1037583	0	True				
ANR	1037716	ExpressionStatement	servs [ i ] -> client_ctx_p = NULL	2004:8:73783:73812	1037583	3	True				
ANR	1037717	AssignmentExpression	servs [ i ] -> client_ctx_p = NULL		1037583	0		=			
ANR	1037718	PtrMemberAccess	servs [ i ] -> client_ctx_p		1037583	0					
ANR	1037719	ArrayIndexing	servs [ i ]		1037583	0					
ANR	1037720	Identifier	servs		1037583	0					
ANR	1037721	Identifier	i		1037583	1					
ANR	1037722	Identifier	client_ctx_p		1037583	1					
ANR	1037723	Identifier	NULL		1037583	1					
ANR	1037724	ForStatement	for ( ; i < num_servers + 1 ; i ++ )		1037583	8					
ANR	1037725	Condition	i < num_servers + 1	2007:11:73832:73850	1037583	0	True				
ANR	1037726	RelationalExpression	i < num_servers + 1		1037583	0		<			
ANR	1037727	Identifier	i		1037583	0					
ANR	1037728	AdditiveExpression	num_servers + 1		1037583	1		+			
ANR	1037729	Identifier	num_servers		1037583	0					
ANR	1037730	PrimaryExpression	1		1037583	1					
ANR	1037731	PostIncDecOperationExpression	i ++	2007:32:73853:73855	1037583	1	True				
ANR	1037732	Identifier	i		1037583	0					
ANR	1037733	IncDec	++		1037583	1					
ANR	1037734	CompoundStatement		35:37:1137:1137	1037583	2					
ANR	1037735	ExpressionStatement	servs [ i ] = NULL	2008:8:73868:73883	1037583	0	True				
ANR	1037736	AssignmentExpression	servs [ i ] = NULL		1037583	0		=			
ANR	1037737	ArrayIndexing	servs [ i ]		1037583	0					
ANR	1037738	Identifier	servs		1037583	0					
ANR	1037739	Identifier	i		1037583	1					
ANR	1037740	Identifier	NULL		1037583	1					
ANR	1037741	ExpressionStatement	mem -> gs_lib_ctx -> fapi_servers = servs	2011:4:73896:73933	1037583	9	True				
ANR	1037742	AssignmentExpression	mem -> gs_lib_ctx -> fapi_servers = servs		1037583	0		=			
ANR	1037743	PtrMemberAccess	mem -> gs_lib_ctx -> fapi_servers		1037583	0					
ANR	1037744	PtrMemberAccess	mem -> gs_lib_ctx		1037583	0					
ANR	1037745	Identifier	mem		1037583	0					
ANR	1037746	Identifier	gs_lib_ctx		1037583	1					
ANR	1037747	Identifier	fapi_servers		1037583	1					
ANR	1037748	Identifier	servs		1037583	1					
ANR	1037749	ReturnStatement	return ( code ) ;	2013:4:73940:73953	1037583	10	True				
ANR	1037750	Identifier	code		1037583	0					
ANR	1037751	ReturnType	int		1037583	1					
ANR	1037752	Identifier	gs_fapi_init		1037583	2					
ANR	1037753	ParameterList	gs_memory_t * mem		1037583	3					
ANR	1037754	Parameter	gs_memory_t * mem	1972:13:72702:72717	1037583	0	True				
ANR	1037755	ParameterType	gs_memory_t *		1037583	0					
ANR	1037756	Identifier	mem		1037583	1					
ANR	1037757	CFGEntryNode	ENTRY		1037583		True				
ANR	1037758	CFGExitNode	EXIT		1037583		True				
ANR	1037759	Symbol	code		1037583						
ANR	1037760	Symbol	* servs		1037583						
ANR	1037761	Symbol	mem		1037583						
ANR	1037762	Symbol	gs_alloc_bytes_immovable		1037583						
ANR	1037763	Symbol	servs		1037583						
ANR	1037764	Symbol	num_servers		1037583						
ANR	1037765	Symbol	* num_servers		1037583						
ANR	1037766	Symbol	gs_get_fapi_server_inits		1037583						
ANR	1037767	Symbol	* * i		1037583						
ANR	1037768	Symbol	NULL		1037583						
ANR	1037769	Symbol	mem -> gs_lib_ctx -> fapi_servers		1037583						
ANR	1037770	Symbol	f		1037583						
ANR	1037771	Symbol	i		1037583						
ANR	1037772	Symbol	* * mem		1037583						
ANR	1037773	Symbol	* gs_fapi_server_inits		1037583						
ANR	1037774	Symbol	mem -> non_gc_memory		1037583						
ANR	1037775	Symbol	servs [ i ] -> client_ctx_p		1037583						
ANR	1037776	Symbol	gs_fapi_server_inits		1037583						
ANR	1037777	Symbol	* f		1037583						
ANR	1037778	Symbol	gs_error_VMerror		1037583						
ANR	1037779	Symbol	* i		1037583						
ANR	1037780	Symbol	* * servs		1037583						
ANR	1037781	Symbol	* mem -> gs_lib_ctx		1037583						
ANR	1037782	Symbol	mem -> gs_lib_ctx		1037583						
ANR	1037783	Symbol	* mem		1037583						
ANR	1037784	Function	gs_fapi_finit	2016:0:73958:74332							
ANR	1037785	FunctionDef	gs_fapi_finit (gs_memory_t * mem)		1037784	0					
ANR	1037786	CompoundStatement		2018:0:73995:74332	1037784	0					
ANR	1037787	IdentifierDeclStatement	gs_fapi_server * * servs = mem -> gs_lib_ctx -> fapi_servers ;	2019:4:74001:74055	1037784	0	True				
ANR	1037788	IdentifierDecl	* * servs = mem -> gs_lib_ctx -> fapi_servers		1037784	0					
ANR	1037789	IdentifierDeclType	gs_fapi_server * *		1037784	0					
ANR	1037790	Identifier	servs		1037784	1					
ANR	1037791	AssignmentExpression	* * servs = mem -> gs_lib_ctx -> fapi_servers		1037784	2		=			
ANR	1037792	Identifier	servs		1037784	0					
ANR	1037793	PtrMemberAccess	mem -> gs_lib_ctx -> fapi_servers		1037784	1					
ANR	1037794	PtrMemberAccess	mem -> gs_lib_ctx		1037784	0					
ANR	1037795	Identifier	mem		1037784	0					
ANR	1037796	Identifier	gs_lib_ctx		1037784	1					
ANR	1037797	Identifier	fapi_servers		1037784	1					
ANR	1037798	WhileStatement	while ( servs && * servs )		1037784	1					
ANR	1037799	Condition	servs && * servs	2021:11:74069:74083	1037784	0	True				
ANR	1037800	AndExpression	servs && * servs		1037784	0		&&			
ANR	1037801	Identifier	servs		1037784	0					
ANR	1037802	UnaryOperationExpression	* servs		1037784	1					
ANR	1037803	UnaryOperator	*		1037784	0					
ANR	1037804	Identifier	servs		1037784	1					
ANR	1037805	CompoundStatement		4:28:90:90	1037784	1					
ANR	1037806	ExpressionStatement	( ( * servs ) -> ig . d -> finit ) ( servs )	2022:8:74096:74127	1037784	0	True				
ANR	1037807	CallExpression	( ( * servs ) -> ig . d -> finit ) ( servs )		1037784	0					
ANR	1037808	Callee	( * servs ) -> ig . d -> finit		1037784	0					
ANR	1037809	PtrMemberAccess	( * servs ) -> ig . d -> finit		1037784	0					
ANR	1037810	MemberAccess	( * servs ) -> ig . d		1037784	0					
ANR	1037811	PtrMemberAccess	( * servs ) -> ig		1037784	0					
ANR	1037812	UnaryOperationExpression	* servs		1037784	0					
ANR	1037813	UnaryOperator	*		1037784	0					
ANR	1037814	Identifier	servs		1037784	1					
ANR	1037815	Identifier	ig		1037784	1					
ANR	1037816	Identifier	d		1037784	1					
ANR	1037817	Identifier	finit		1037784	1					
ANR	1037818	ArgumentList	servs		1037784	1					
ANR	1037819	Argument	servs		1037784	0					
ANR	1037820	Identifier	servs		1037784	0					
ANR	1037821	ExpressionStatement	servs ++	2023:8:74137:74144	1037784	1	True				
ANR	1037822	PostIncDecOperationExpression	servs ++		1037784	0					
ANR	1037823	Identifier	servs		1037784	0					
ANR	1037824	IncDec	++		1037784	1					
ANR	1037825	ExpressionStatement	"gs_free_object ( mem -> non_gc_memory , mem -> gs_lib_ctx -> fapi_servers , ""gs_fapi_finit: mem->gs_lib_ctx->fapi_servers"" )"	2025:4:74156:74288	1037784	2	True				
ANR	1037826	CallExpression	"gs_free_object ( mem -> non_gc_memory , mem -> gs_lib_ctx -> fapi_servers , ""gs_fapi_finit: mem->gs_lib_ctx->fapi_servers"" )"		1037784	0					
ANR	1037827	Callee	gs_free_object		1037784	0					
ANR	1037828	Identifier	gs_free_object		1037784	0					
ANR	1037829	ArgumentList	mem -> non_gc_memory		1037784	1					
ANR	1037830	Argument	mem -> non_gc_memory		1037784	0					
ANR	1037831	PtrMemberAccess	mem -> non_gc_memory		1037784	0					
ANR	1037832	Identifier	mem		1037784	0					
ANR	1037833	Identifier	non_gc_memory		1037784	1					
ANR	1037834	Argument	mem -> gs_lib_ctx -> fapi_servers		1037784	1					
ANR	1037835	PtrMemberAccess	mem -> gs_lib_ctx -> fapi_servers		1037784	0					
ANR	1037836	PtrMemberAccess	mem -> gs_lib_ctx		1037784	0					
ANR	1037837	Identifier	mem		1037784	0					
ANR	1037838	Identifier	gs_lib_ctx		1037784	1					
ANR	1037839	Identifier	fapi_servers		1037784	1					
ANR	1037840	Argument	"""gs_fapi_finit: mem->gs_lib_ctx->fapi_servers"""		1037784	2					
ANR	1037841	PrimaryExpression	"""gs_fapi_finit: mem->gs_lib_ctx->fapi_servers"""		1037784	0					
ANR	1037842	ExpressionStatement	mem -> gs_lib_ctx -> fapi_servers = NULL	2027:4:74294:74330	1037784	3	True				
ANR	1037843	AssignmentExpression	mem -> gs_lib_ctx -> fapi_servers = NULL		1037784	0		=			
ANR	1037844	PtrMemberAccess	mem -> gs_lib_ctx -> fapi_servers		1037784	0					
ANR	1037845	PtrMemberAccess	mem -> gs_lib_ctx		1037784	0					
ANR	1037846	Identifier	mem		1037784	0					
ANR	1037847	Identifier	gs_lib_ctx		1037784	1					
ANR	1037848	Identifier	fapi_servers		1037784	1					
ANR	1037849	Identifier	NULL		1037784	1					
ANR	1037850	ReturnType	void		1037784	1					
ANR	1037851	Identifier	gs_fapi_finit		1037784	2					
ANR	1037852	ParameterList	gs_memory_t * mem		1037784	3					
ANR	1037853	Parameter	gs_memory_t * mem	2017:14:73977:73992	1037784	0	True				
ANR	1037854	ParameterType	gs_memory_t *		1037784	0					
ANR	1037855	Identifier	mem		1037784	1					
ANR	1037856	CFGEntryNode	ENTRY		1037784		True				
ANR	1037857	CFGExitNode	EXIT		1037784		True				
ANR	1037858	Symbol	* servs		1037784						
ANR	1037859	Symbol	NULL		1037784						
ANR	1037860	Symbol	mem -> gs_lib_ctx -> fapi_servers		1037784						
ANR	1037861	Symbol	* * mem		1037784						
ANR	1037862	Symbol	( * servs ) -> ig . d		1037784						
ANR	1037863	Symbol	mem -> non_gc_memory		1037784						
ANR	1037864	Symbol	( * servs ) -> ig		1037784						
ANR	1037865	Symbol	mem		1037784						
ANR	1037866	Symbol	* * servs		1037784						
ANR	1037867	Symbol	servs		1037784						
ANR	1037868	Symbol	* mem -> gs_lib_ctx		1037784						
ANR	1037869	Symbol	mem -> gs_lib_ctx		1037784						
ANR	1037870	Symbol	* mem		1037784						
