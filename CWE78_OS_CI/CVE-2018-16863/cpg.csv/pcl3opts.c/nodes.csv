command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8029009	File	data/converged/CVE-2018-16863_ghostpdl/pcl3opts.c								
ANR	8029010	DeclStmt									
ANR	8029011	Decl							const char	const char *	progname
ANR	8029012	DeclStmt									
ANR	8029013	Decl							nl_catd	nl_catd	catd
ANR	8029014	Function	message	55:0:1774:1935							
ANR	8029015	FunctionDef	"message (FILE * f , int msg_id , const char * fmt , va_list ap)"		8029014	0					
ANR	8029016	CompoundStatement		56:0:1844:1935	8029014	0					
ANR	8029017	ExpressionStatement	"vfprintf ( f , catd == ( nl_catd ) ( - 1 ) ? fmt : catgets ( catd , 2 , msg_id , fmt ) , ap )"	57:2:1848:1922	8029014	0	True				
ANR	8029018	CallExpression	"vfprintf ( f , catd == ( nl_catd ) ( - 1 ) ? fmt : catgets ( catd , 2 , msg_id , fmt ) , ap )"		8029014	0					
ANR	8029019	Callee	vfprintf		8029014	0					
ANR	8029020	Identifier	vfprintf		8029014	0					
ANR	8029021	ArgumentList	f		8029014	1					
ANR	8029022	Argument	f		8029014	0					
ANR	8029023	Identifier	f		8029014	0					
ANR	8029024	Argument	"catd == ( nl_catd ) ( - 1 ) ? fmt : catgets ( catd , 2 , msg_id , fmt )"		8029014	1					
ANR	8029025	ConditionalExpression	"catd == ( nl_catd ) ( - 1 ) ? fmt : catgets ( catd , 2 , msg_id , fmt )"		8029014	0					
ANR	8029026	Condition	catd == ( nl_catd ) ( - 1 )		8029014	0					
ANR	8029027	EqualityExpression	catd == ( nl_catd ) ( - 1 )		8029014	0		==			
ANR	8029028	Identifier	catd		8029014	0					
ANR	8029029	CastExpression	( nl_catd ) ( - 1 )		8029014	1					
ANR	8029030	CastTarget	nl_catd		8029014	0					
ANR	8029031	UnaryOperationExpression	- 1		8029014	1					
ANR	8029032	UnaryOperator	-		8029014	0					
ANR	8029033	PrimaryExpression	1		8029014	1					
ANR	8029034	Identifier	fmt		8029014	1					
ANR	8029035	CallExpression	"catgets ( catd , 2 , msg_id , fmt )"		8029014	2					
ANR	8029036	Callee	catgets		8029014	0					
ANR	8029037	Identifier	catgets		8029014	0					
ANR	8029038	ArgumentList	catd		8029014	1					
ANR	8029039	Argument	catd		8029014	0					
ANR	8029040	Identifier	catd		8029014	0					
ANR	8029041	Argument	2		8029014	1					
ANR	8029042	PrimaryExpression	2		8029014	0					
ANR	8029043	Argument	msg_id		8029014	2					
ANR	8029044	Identifier	msg_id		8029014	0					
ANR	8029045	Argument	fmt		8029014	3					
ANR	8029046	Identifier	fmt		8029014	0					
ANR	8029047	Argument	ap		8029014	2					
ANR	8029048	Identifier	ap		8029014	0					
ANR	8029049	ReturnStatement	return ;	59:2:1927:1933	8029014	1	True				
ANR	8029050	ReturnType	static void		8029014	1					
ANR	8029051	Identifier	message		8029014	2					
ANR	8029052	ParameterList	"FILE * f , int msg_id , const char * fmt , va_list ap"		8029014	3					
ANR	8029053	Parameter	FILE * f	55:20:1794:1800	8029014	0	True				
ANR	8029054	ParameterType	FILE *		8029014	0					
ANR	8029055	Identifier	f		8029014	1					
ANR	8029056	Parameter	int msg_id	55:29:1803:1812	8029014	1	True				
ANR	8029057	ParameterType	int		8029014	0					
ANR	8029058	Identifier	msg_id		8029014	1					
ANR	8029059	Parameter	const char * fmt	55:41:1815:1829	8029014	2	True				
ANR	8029060	ParameterType	const char *		8029014	0					
ANR	8029061	Identifier	fmt		8029014	1					
ANR	8029062	Parameter	va_list ap	55:58:1832:1841	8029014	3	True				
ANR	8029063	ParameterType	va_list		8029014	0					
ANR	8029064	Identifier	ap		8029014	1					
ANR	8029065	CFGEntryNode	ENTRY		8029014		True				
ANR	8029066	CFGExitNode	EXIT		8029014		True				
ANR	8029067	Symbol	catd		8029014						
ANR	8029068	Symbol	catgets		8029014						
ANR	8029069	Symbol	f		8029014						
ANR	8029070	Symbol	msg_id		8029014						
ANR	8029071	Symbol	fmt		8029014						
ANR	8029072	Symbol	ap		8029014						
ANR	8029073	Function	emessage	64:0:2019:2212							
ANR	8029074	FunctionDef	"emessage (int msg_id , const char * fmt)"		8029073	0					
ANR	8029075	CompoundStatement		65:0:2074:2212	8029073	0					
ANR	8029076	IdentifierDeclStatement	va_list ap ;	66:2:2078:2088	8029073	0	True				
ANR	8029077	IdentifierDecl	ap		8029073	0					
ANR	8029078	IdentifierDeclType	va_list		8029073	0					
ANR	8029079	Identifier	ap		8029073	1					
ANR	8029080	ExpressionStatement	"fprintf ( stderr , ""? %s: "" , progname )"	68:2:2093:2128	8029073	1	True				
ANR	8029081	CallExpression	"fprintf ( stderr , ""? %s: "" , progname )"		8029073	0					
ANR	8029082	Callee	fprintf		8029073	0					
ANR	8029083	Identifier	fprintf		8029073	0					
ANR	8029084	ArgumentList	stderr		8029073	1					
ANR	8029085	Argument	stderr		8029073	0					
ANR	8029086	Identifier	stderr		8029073	0					
ANR	8029087	Argument	"""? %s: """		8029073	1					
ANR	8029088	PrimaryExpression	"""? %s: """		8029073	0					
ANR	8029089	Argument	progname		8029073	2					
ANR	8029090	Identifier	progname		8029073	0					
ANR	8029091	ExpressionStatement	"va_start ( ap , fmt )"	69:2:2132:2149	8029073	2	True				
ANR	8029092	CallExpression	"va_start ( ap , fmt )"		8029073	0					
ANR	8029093	Callee	va_start		8029073	0					
ANR	8029094	Identifier	va_start		8029073	0					
ANR	8029095	ArgumentList	ap		8029073	1					
ANR	8029096	Argument	ap		8029073	0					
ANR	8029097	Identifier	ap		8029073	0					
ANR	8029098	Argument	fmt		8029073	1					
ANR	8029099	Identifier	fmt		8029073	0					
ANR	8029100	ExpressionStatement	"message ( stderr , msg_id , fmt , ap )"	70:2:2153:2185	8029073	3	True				
ANR	8029101	CallExpression	"message ( stderr , msg_id , fmt , ap )"		8029073	0					
ANR	8029102	Callee	message		8029073	0					
ANR	8029103	Identifier	message		8029073	0					
ANR	8029104	ArgumentList	stderr		8029073	1					
ANR	8029105	Argument	stderr		8029073	0					
ANR	8029106	Identifier	stderr		8029073	0					
ANR	8029107	Argument	msg_id		8029073	1					
ANR	8029108	Identifier	msg_id		8029073	0					
ANR	8029109	Argument	fmt		8029073	2					
ANR	8029110	Identifier	fmt		8029073	0					
ANR	8029111	Argument	ap		8029073	3					
ANR	8029112	Identifier	ap		8029073	0					
ANR	8029113	ExpressionStatement	va_end ( ap )	71:2:2189:2199	8029073	4	True				
ANR	8029114	CallExpression	va_end ( ap )		8029073	0					
ANR	8029115	Callee	va_end		8029073	0					
ANR	8029116	Identifier	va_end		8029073	0					
ANR	8029117	ArgumentList	ap		8029073	1					
ANR	8029118	Argument	ap		8029073	0					
ANR	8029119	Identifier	ap		8029073	0					
ANR	8029120	ReturnStatement	return ;	73:2:2204:2210	8029073	5	True				
ANR	8029121	ReturnType	static void		8029073	1					
ANR	8029122	Identifier	emessage		8029073	2					
ANR	8029123	ParameterList	"int msg_id , const char * fmt"		8029073	3					
ANR	8029124	Parameter	int msg_id	64:21:2040:2049	8029073	0	True				
ANR	8029125	ParameterType	int		8029073	0					
ANR	8029126	Identifier	msg_id		8029073	1					
ANR	8029127	Parameter	const char * fmt	64:33:2052:2066	8029073	1	True				
ANR	8029128	ParameterType	const char *		8029073	0					
ANR	8029129	Identifier	fmt		8029073	1					
ANR	8029130	CFGEntryNode	ENTRY		8029073		True				
ANR	8029131	CFGExitNode	EXIT		8029073		True				
ANR	8029132	Symbol	progname		8029073						
ANR	8029133	Symbol	msg_id		8029073						
ANR	8029134	Symbol	fmt		8029073						
ANR	8029135	Symbol	stderr		8029073						
ANR	8029136	Symbol	ap		8029073						
ANR	8029137	Function	imessage	78:0:2296:2454							
ANR	8029138	FunctionDef	"imessage (FILE * f , int msg_id , const char * fmt)"		8029137	0					
ANR	8029139	CompoundStatement		79:0:2360:2454	8029137	0					
ANR	8029140	IdentifierDeclStatement	va_list ap ;	80:2:2364:2374	8029137	0	True				
ANR	8029141	IdentifierDecl	ap		8029137	0					
ANR	8029142	IdentifierDeclType	va_list		8029137	0					
ANR	8029143	Identifier	ap		8029137	1					
ANR	8029144	ExpressionStatement	"va_start ( ap , fmt )"	82:2:2379:2396	8029137	1	True				
ANR	8029145	CallExpression	"va_start ( ap , fmt )"		8029137	0					
ANR	8029146	Callee	va_start		8029137	0					
ANR	8029147	Identifier	va_start		8029137	0					
ANR	8029148	ArgumentList	ap		8029137	1					
ANR	8029149	Argument	ap		8029137	0					
ANR	8029150	Identifier	ap		8029137	0					
ANR	8029151	Argument	fmt		8029137	1					
ANR	8029152	Identifier	fmt		8029137	0					
ANR	8029153	ExpressionStatement	"message ( f , msg_id , fmt , ap )"	83:2:2400:2427	8029137	2	True				
ANR	8029154	CallExpression	"message ( f , msg_id , fmt , ap )"		8029137	0					
ANR	8029155	Callee	message		8029137	0					
ANR	8029156	Identifier	message		8029137	0					
ANR	8029157	ArgumentList	f		8029137	1					
ANR	8029158	Argument	f		8029137	0					
ANR	8029159	Identifier	f		8029137	0					
ANR	8029160	Argument	msg_id		8029137	1					
ANR	8029161	Identifier	msg_id		8029137	0					
ANR	8029162	Argument	fmt		8029137	2					
ANR	8029163	Identifier	fmt		8029137	0					
ANR	8029164	Argument	ap		8029137	3					
ANR	8029165	Identifier	ap		8029137	0					
ANR	8029166	ExpressionStatement	va_end ( ap )	84:2:2431:2441	8029137	3	True				
ANR	8029167	CallExpression	va_end ( ap )		8029137	0					
ANR	8029168	Callee	va_end		8029137	0					
ANR	8029169	Identifier	va_end		8029137	0					
ANR	8029170	ArgumentList	ap		8029137	1					
ANR	8029171	Argument	ap		8029137	0					
ANR	8029172	Identifier	ap		8029137	0					
ANR	8029173	ReturnStatement	return ;	86:2:2446:2452	8029137	4	True				
ANR	8029174	ReturnType	static void		8029137	1					
ANR	8029175	Identifier	imessage		8029137	2					
ANR	8029176	ParameterList	"FILE * f , int msg_id , const char * fmt"		8029137	3					
ANR	8029177	Parameter	FILE * f	78:21:2317:2323	8029137	0	True				
ANR	8029178	ParameterType	FILE *		8029137	0					
ANR	8029179	Identifier	f		8029137	1					
ANR	8029180	Parameter	int msg_id	78:30:2326:2335	8029137	1	True				
ANR	8029181	ParameterType	int		8029137	0					
ANR	8029182	Identifier	msg_id		8029137	1					
ANR	8029183	Parameter	const char * fmt	78:42:2338:2352	8029137	2	True				
ANR	8029184	ParameterType	const char *		8029137	0					
ANR	8029185	Identifier	fmt		8029137	1					
ANR	8029186	CFGEntryNode	ENTRY		8029137		True				
ANR	8029187	CFGExitNode	EXIT		8029137		True				
ANR	8029188	Symbol	f		8029137						
ANR	8029189	Symbol	msg_id		8029137						
ANR	8029190	Symbol	fmt		8029137						
ANR	8029191	Symbol	ap		8029137						
ANR	8029192	Function	check_line_length	91:0:2538:2735							
ANR	8029193	FunctionDef	"check_line_length (FILE * out , int * line_length , int expected)"		8029192	0					
ANR	8029194	CompoundStatement		92:0:2611:2735	8029192	0					
ANR	8029195	IfStatement	if ( * line_length + expected <= 78 )		8029192	0					
ANR	8029196	Condition	* line_length + expected <= 78	93:6:2619:2647	8029192	0	True				
ANR	8029197	RelationalExpression	* line_length + expected <= 78		8029192	0		<=			
ANR	8029198	AdditiveExpression	* line_length + expected		8029192	0		+			
ANR	8029199	UnaryOperationExpression	* line_length		8029192	0					
ANR	8029200	UnaryOperator	*		8029192	0					
ANR	8029201	Identifier	line_length		8029192	1					
ANR	8029202	Identifier	expected		8029192	1					
ANR	8029203	PrimaryExpression	78		8029192	1					
ANR	8029204	ReturnStatement	return ;	93:37:2650:2656	8029192	1	True				
ANR	8029205	ExpressionStatement	"fputs ( "" \\\\\\n"" , out )"	95:2:2661:2680	8029192	1	True				
ANR	8029206	CallExpression	"fputs ( "" \\\\\\n"" , out )"		8029192	0					
ANR	8029207	Callee	fputs		8029192	0					
ANR	8029208	Identifier	fputs		8029192	0					
ANR	8029209	ArgumentList	""" \\\\\\n"""		8029192	1					
ANR	8029210	Argument	""" \\\\\\n"""		8029192	0					
ANR	8029211	PrimaryExpression	""" \\\\\\n"""		8029192	0					
ANR	8029212	Argument	out		8029192	1					
ANR	8029213	Identifier	out		8029192	0					
ANR	8029214	ExpressionStatement	"fputs ( ""    "" , out )"	96:2:2684:2702	8029192	2	True				
ANR	8029215	CallExpression	"fputs ( ""    "" , out )"		8029192	0					
ANR	8029216	Callee	fputs		8029192	0					
ANR	8029217	Identifier	fputs		8029192	0					
ANR	8029218	ArgumentList	"""    """		8029192	1					
ANR	8029219	Argument	"""    """		8029192	0					
ANR	8029220	PrimaryExpression	"""    """		8029192	0					
ANR	8029221	Argument	out		8029192	1					
ANR	8029222	Identifier	out		8029192	0					
ANR	8029223	ExpressionStatement	* line_length = 4	97:2:2706:2722	8029192	3	True				
ANR	8029224	AssignmentExpression	* line_length = 4		8029192	0		=			
ANR	8029225	UnaryOperationExpression	* line_length		8029192	0					
ANR	8029226	UnaryOperator	*		8029192	0					
ANR	8029227	Identifier	line_length		8029192	1					
ANR	8029228	PrimaryExpression	4		8029192	1					
ANR	8029229	ReturnStatement	return ;	99:2:2727:2733	8029192	4	True				
ANR	8029230	ReturnType	static void		8029192	1					
ANR	8029231	Identifier	check_line_length		8029192	2					
ANR	8029232	ParameterList	"FILE * out , int * line_length , int expected"		8029192	3					
ANR	8029233	Parameter	FILE * out	91:30:2568:2576	8029192	0	True				
ANR	8029234	ParameterType	FILE *		8029192	0					
ANR	8029235	Identifier	out		8029192	1					
ANR	8029236	Parameter	int * line_length	91:41:2579:2594	8029192	1	True				
ANR	8029237	ParameterType	int *		8029192	0					
ANR	8029238	Identifier	line_length		8029192	1					
ANR	8029239	Parameter	int expected	91:59:2597:2608	8029192	2	True				
ANR	8029240	ParameterType	int		8029192	0					
ANR	8029241	Identifier	expected		8029192	1					
ANR	8029242	CFGEntryNode	ENTRY		8029192		True				
ANR	8029243	CFGExitNode	EXIT		8029192		True				
ANR	8029244	Symbol	* line_length		8029192						
ANR	8029245	Symbol	line_length		8029192						
ANR	8029246	Symbol	expected		8029192						
ANR	8029247	Symbol	out		8029192						
ANR	8029248	ClassDef	<unnamed>	105:8:2896:3390							
ANR	8029249	DeclStmt									
ANR	8029250	Decl							FILE	FILE *	out
ANR	8029251	DeclStmt									
ANR	8029252	Decl							pcl_bool	pcl_bool	seen_ERG_B
ANR	8029253	Decl							pcl_bool	pcl_bool	seen_ERG_C
ANR	8029254	Decl							pcl_bool	pcl_bool	seen_RGR
ANR	8029255	Decl							pcl_bool	pcl_bool	seen_CRD
ANR	8029256	Decl							pcl_bool	pcl_bool	seen_old_quality
ANR	8029257	Decl							pcl_bool	pcl_bool	seen_new_quality
ANR	8029258	Decl							pcl_bool	pcl_bool	seen_unknown_compression
ANR	8029259	DeclStmt									
ANR	8029260	Decl							int	int	first_colorant_planes
ANR	8029261	Decl							int	int	next_plane
ANR	8029262	Decl							int	int	number_of_outputs
ANR	8029263	DeclStmt									
ANR	8029264	Decl							pcl_FileData	pcl_FileData	fdata
ANR	8029265	Decl							pcl_FileData	pcl_FileData	fdata_old
ANR	8029266	DeclStmt									
ANR	8029267	Decl							pcl_bool	pcl_bool	CRD_active
ANR	8029268	Decl							pcl_bool	pcl_bool	seen_first_colorant
ANR	8029269	Decl							pcl_bool	pcl_bool	seen_raster_data
ANR	8029270	DeclStmt									
ANR	8029271	Decl									CollectedInfo
ANR	8029272	Function	print_result	134:0:3474:14010							
ANR	8029273	FunctionDef	print_result (CollectedInfo * ip)		8029272	0					
ANR	8029274	CompoundStatement		135:0:3537:14010	8029272	0					
ANR	8029275	IdentifierDeclStatement	"pcl_bool different_resolutions = FALSE , different_non_black_levels = FALSE ;"	136:2:3541:3623	8029272	0	True				
ANR	8029276	IdentifierDecl	different_resolutions = FALSE		8029272	0					
ANR	8029277	IdentifierDeclType	pcl_bool		8029272	0					
ANR	8029278	Identifier	different_resolutions		8029272	1					
ANR	8029279	AssignmentExpression	different_resolutions = FALSE		8029272	2		=			
ANR	8029280	Identifier	FALSE		8029272	0					
ANR	8029281	Identifier	FALSE		8029272	1					
ANR	8029282	IdentifierDecl	different_non_black_levels = FALSE		8029272	1					
ANR	8029283	IdentifierDeclType	pcl_bool		8029272	0					
ANR	8029284	Identifier	different_non_black_levels		8029272	1					
ANR	8029285	AssignmentExpression	different_non_black_levels = FALSE		8029272	2		=			
ANR	8029286	Identifier	FALSE		8029272	0					
ANR	8029287	Identifier	FALSE		8029272	1					
ANR	8029288	IdentifierDeclStatement	pcl_Compression default_compression ;	139:2:3627:3666	8029272	1	True				
ANR	8029289	IdentifierDecl	default_compression		8029272	0					
ANR	8029290	IdentifierDeclType	pcl_Compression		8029272	0					
ANR	8029291	Identifier	default_compression		8029272	1					
ANR	8029292	IdentifierDeclStatement	int j ;	141:2:3670:3675	8029272	2	True				
ANR	8029293	IdentifierDecl	j		8029272	0					
ANR	8029294	IdentifierDeclType	int		8029272	0					
ANR	8029295	Identifier	j		8029272	1					
ANR	8029296	IdentifierDeclStatement	int ll ;	142:2:3679:3685	8029272	3	True				
ANR	8029297	IdentifierDecl	ll		8029272	0					
ANR	8029298	IdentifierDeclType	int		8029272	0					
ANR	8029299	Identifier	ll		8029272	1					
ANR	8029300	IdentifierDeclStatement	"unsigned int min_hres , min_vres , black_levels , non_black_levels , start ;"	143:2:3707:3777	8029272	4	True				
ANR	8029301	IdentifierDecl	min_hres		8029272	0					
ANR	8029302	IdentifierDeclType	unsigned int		8029272	0					
ANR	8029303	Identifier	min_hres		8029272	1					
ANR	8029304	IdentifierDecl	min_vres		8029272	1					
ANR	8029305	IdentifierDeclType	unsigned int		8029272	0					
ANR	8029306	Identifier	min_vres		8029272	1					
ANR	8029307	IdentifierDecl	black_levels		8029272	2					
ANR	8029308	IdentifierDeclType	unsigned int		8029272	0					
ANR	8029309	Identifier	black_levels		8029272	1					
ANR	8029310	IdentifierDecl	non_black_levels		8029272	3					
ANR	8029311	IdentifierDeclType	unsigned int		8029272	0					
ANR	8029312	Identifier	non_black_levels		8029272	1					
ANR	8029313	IdentifierDecl	start		8029272	4					
ANR	8029314	IdentifierDeclType	unsigned int		8029272	0					
ANR	8029315	Identifier	start		8029272	1					
ANR	8029316	IfStatement	if ( ip -> number_of_outputs > 0 )		8029272	5					
ANR	8029317	Condition	ip -> number_of_outputs > 0	145:6:3786:3810	8029272	0	True				
ANR	8029318	RelationalExpression	ip -> number_of_outputs > 0		8029272	0		>			
ANR	8029319	PtrMemberAccess	ip -> number_of_outputs		8029272	0					
ANR	8029320	Identifier	ip		8029272	0					
ANR	8029321	Identifier	number_of_outputs		8029272	1					
ANR	8029322	PrimaryExpression	0		8029272	1					
ANR	8029323	Statement	imessage	146:4:3817:3824	8029272	1	True				
ANR	8029324	Statement	(	146:12:3825:3825	8029272	6	True				
ANR	8029325	Statement	ip	146:13:3826:3827	8029272	7	True				
ANR	8029326	Statement	->	146:15:3828:3829	8029272	8	True				
ANR	8029327	Statement	out	146:17:3830:3832	8029272	9	True				
ANR	8029328	Statement	","	146:20:3833:3833	8029272	10	True				
ANR	8029329	Statement	10	146:22:3835:3836	8029272	11	True				
ANR	8029330	Statement	","	146:24:3837:3837	8029272	12	True				
ANR	8029331	Statement	"""\\nThe previous raster data section is followed by one with a different\\n"""	147:6:3845:3918	8029272	13	True				
ANR	8029332	Statement	"""configuration.\\n"""	148:6:3926:3943	8029272	14	True				
ANR	8029333	Statement	)	148:24:3944:3944	8029272	15	True				
ANR	8029334	ExpressionStatement		148:25:3945:3945	8029272	16	True				
ANR	8029335	ExpressionStatement	ip -> number_of_outputs ++	149:2:3949:3972	8029272	17	True				
ANR	8029336	PostIncDecOperationExpression	ip -> number_of_outputs ++		8029272	0					
ANR	8029337	PtrMemberAccess	ip -> number_of_outputs		8029272	0					
ANR	8029338	Identifier	ip		8029272	0					
ANR	8029339	Identifier	number_of_outputs		8029272	1					
ANR	8029340	IncDec	++		8029272	1					
ANR	8029341	ExpressionStatement	min_hres = ip -> fdata . colorant_array [ 0 ] . hres	152:2:4050:4093	8029272	18	True				
ANR	8029342	AssignmentExpression	min_hres = ip -> fdata . colorant_array [ 0 ] . hres		8029272	0		=			
ANR	8029343	Identifier	min_hres		8029272	0					
ANR	8029344	MemberAccess	ip -> fdata . colorant_array [ 0 ] . hres		8029272	1					
ANR	8029345	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8029272	0					
ANR	8029346	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029347	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029348	Identifier	ip		8029272	0					
ANR	8029349	Identifier	fdata		8029272	1					
ANR	8029350	Identifier	colorant_array		8029272	1					
ANR	8029351	PrimaryExpression	0		8029272	1					
ANR	8029352	Identifier	hres		8029272	1					
ANR	8029353	ExpressionStatement	min_vres = ip -> fdata . colorant_array [ 0 ] . vres	153:2:4097:4140	8029272	19	True				
ANR	8029354	AssignmentExpression	min_vres = ip -> fdata . colorant_array [ 0 ] . vres		8029272	0		=			
ANR	8029355	Identifier	min_vres		8029272	0					
ANR	8029356	MemberAccess	ip -> fdata . colorant_array [ 0 ] . vres		8029272	1					
ANR	8029357	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8029272	0					
ANR	8029358	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029359	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029360	Identifier	ip		8029272	0					
ANR	8029361	Identifier	fdata		8029272	1					
ANR	8029362	Identifier	colorant_array		8029272	1					
ANR	8029363	PrimaryExpression	0		8029272	1					
ANR	8029364	Identifier	vres		8029272	1					
ANR	8029365	ForStatement	for ( j = 1 ; j < ip -> fdata . number_of_colorants ; j ++ )		8029272	20					
ANR	8029366	ForInit	j = 1 ;	154:7:4149:4154	8029272	0	True				
ANR	8029367	AssignmentExpression	j = 1		8029272	0		=			
ANR	8029368	Identifier	j		8029272	0					
ANR	8029369	PrimaryExpression	1		8029272	1					
ANR	8029370	Condition	j < ip -> fdata . number_of_colorants	154:14:4156:4188	8029272	1	True				
ANR	8029371	RelationalExpression	j < ip -> fdata . number_of_colorants		8029272	0		<			
ANR	8029372	Identifier	j		8029272	0					
ANR	8029373	MemberAccess	ip -> fdata . number_of_colorants		8029272	1					
ANR	8029374	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029375	Identifier	ip		8029272	0					
ANR	8029376	Identifier	fdata		8029272	1					
ANR	8029377	Identifier	number_of_colorants		8029272	1					
ANR	8029378	PostIncDecOperationExpression	j ++	154:49:4191:4193	8029272	2	True				
ANR	8029379	Identifier	j		8029272	0					
ANR	8029380	IncDec	++		8029272	1					
ANR	8029381	CompoundStatement		21:4:664:754	8029272	3					
ANR	8029382	IdentifierDeclStatement	"int h = ip -> fdata . colorant_array [ j ] . hres , v = ip -> fdata . colorant_array [ j ] . vres ;"	155:4:4202:4292	8029272	0	True				
ANR	8029383	IdentifierDecl	h = ip -> fdata . colorant_array [ j ] . hres		8029272	0					
ANR	8029384	IdentifierDeclType	int		8029272	0					
ANR	8029385	Identifier	h		8029272	1					
ANR	8029386	AssignmentExpression	h = ip -> fdata . colorant_array [ j ] . hres		8029272	2		=			
ANR	8029387	Identifier	h		8029272	0					
ANR	8029388	MemberAccess	ip -> fdata . colorant_array [ j ] . hres		8029272	1					
ANR	8029389	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8029272	0					
ANR	8029390	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029391	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029392	Identifier	ip		8029272	0					
ANR	8029393	Identifier	fdata		8029272	1					
ANR	8029394	Identifier	colorant_array		8029272	1					
ANR	8029395	Identifier	j		8029272	1					
ANR	8029396	Identifier	hres		8029272	1					
ANR	8029397	IdentifierDecl	v = ip -> fdata . colorant_array [ j ] . vres		8029272	1					
ANR	8029398	IdentifierDeclType	int		8029272	0					
ANR	8029399	Identifier	v		8029272	1					
ANR	8029400	AssignmentExpression	v = ip -> fdata . colorant_array [ j ] . vres		8029272	2		=			
ANR	8029401	Identifier	v		8029272	0					
ANR	8029402	MemberAccess	ip -> fdata . colorant_array [ j ] . vres		8029272	1					
ANR	8029403	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8029272	0					
ANR	8029404	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029405	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029406	Identifier	ip		8029272	0					
ANR	8029407	Identifier	fdata		8029272	1					
ANR	8029408	Identifier	colorant_array		8029272	1					
ANR	8029409	Identifier	j		8029272	1					
ANR	8029410	Identifier	vres		8029272	1					
ANR	8029411	IfStatement	if ( h != min_hres || v != min_vres )		8029272	1					
ANR	8029412	Condition	h != min_hres || v != min_vres	158:8:4302:4331	8029272	0	True				
ANR	8029413	OrExpression	h != min_hres || v != min_vres		8029272	0		||			
ANR	8029414	EqualityExpression	h != min_hres		8029272	0		!=			
ANR	8029415	Identifier	h		8029272	0					
ANR	8029416	Identifier	min_hres		8029272	1					
ANR	8029417	EqualityExpression	v != min_vres		8029272	1		!=			
ANR	8029418	Identifier	v		8029272	0					
ANR	8029419	Identifier	min_vres		8029272	1					
ANR	8029420	ExpressionStatement	different_resolutions = TRUE	158:40:4334:4362	8029272	1	True				
ANR	8029421	AssignmentExpression	different_resolutions = TRUE		8029272	0		=			
ANR	8029422	Identifier	different_resolutions		8029272	0					
ANR	8029423	Identifier	TRUE		8029272	1					
ANR	8029424	IfStatement	if ( h < min_hres )		8029272	2					
ANR	8029425	Condition	h < min_hres	159:8:4372:4383	8029272	0	True				
ANR	8029426	RelationalExpression	h < min_hres		8029272	0		<			
ANR	8029427	Identifier	h		8029272	0					
ANR	8029428	Identifier	min_hres		8029272	1					
ANR	8029429	ExpressionStatement	min_hres = h	159:22:4386:4398	8029272	1	True				
ANR	8029430	AssignmentExpression	min_hres = h		8029272	0		=			
ANR	8029431	Identifier	min_hres		8029272	0					
ANR	8029432	Identifier	h		8029272	1					
ANR	8029433	IfStatement	if ( v < min_vres )		8029272	3					
ANR	8029434	Condition	v < min_vres	160:8:4408:4419	8029272	0	True				
ANR	8029435	RelationalExpression	v < min_vres		8029272	0		<			
ANR	8029436	Identifier	v		8029272	0					
ANR	8029437	Identifier	min_vres		8029272	1					
ANR	8029438	ExpressionStatement	min_vres = v	160:22:4422:4434	8029272	1	True				
ANR	8029439	AssignmentExpression	min_vres = v		8029272	0		=			
ANR	8029440	Identifier	min_vres		8029272	0					
ANR	8029441	Identifier	v		8029272	1					
ANR	8029442	ExpressionStatement	black_levels = ip -> fdata . colorant_array [ 0 ] . levels	163:2:4443:4492	8029272	21	True				
ANR	8029443	AssignmentExpression	black_levels = ip -> fdata . colorant_array [ 0 ] . levels		8029272	0		=			
ANR	8029444	Identifier	black_levels		8029272	0					
ANR	8029445	MemberAccess	ip -> fdata . colorant_array [ 0 ] . levels		8029272	1					
ANR	8029446	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8029272	0					
ANR	8029447	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029448	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029449	Identifier	ip		8029272	0					
ANR	8029450	Identifier	fdata		8029272	1					
ANR	8029451	Identifier	colorant_array		8029272	1					
ANR	8029452	PrimaryExpression	0		8029272	1					
ANR	8029453	Identifier	levels		8029272	1					
ANR	8029454	ExpressionStatement	start = ( ip -> fdata . palette == pcl_CMY || ip -> fdata . palette == pcl_RGB ? 0 : 1 )	166:2:4550:4626	8029272	22	True				
ANR	8029455	AssignmentExpression	start = ( ip -> fdata . palette == pcl_CMY || ip -> fdata . palette == pcl_RGB ? 0 : 1 )		8029272	0		=			
ANR	8029456	Identifier	start		8029272	0					
ANR	8029457	ConditionalExpression	ip -> fdata . palette == pcl_CMY || ip -> fdata . palette == pcl_RGB ? 0 : 1		8029272	1					
ANR	8029458	Condition	ip -> fdata . palette == pcl_CMY || ip -> fdata . palette == pcl_RGB		8029272	0					
ANR	8029459	OrExpression	ip -> fdata . palette == pcl_CMY || ip -> fdata . palette == pcl_RGB		8029272	0		||			
ANR	8029460	EqualityExpression	ip -> fdata . palette == pcl_CMY		8029272	0		==			
ANR	8029461	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8029462	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029463	Identifier	ip		8029272	0					
ANR	8029464	Identifier	fdata		8029272	1					
ANR	8029465	Identifier	palette		8029272	1					
ANR	8029466	Identifier	pcl_CMY		8029272	1					
ANR	8029467	EqualityExpression	ip -> fdata . palette == pcl_RGB		8029272	1		==			
ANR	8029468	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8029469	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029470	Identifier	ip		8029272	0					
ANR	8029471	Identifier	fdata		8029272	1					
ANR	8029472	Identifier	palette		8029272	1					
ANR	8029473	Identifier	pcl_RGB		8029272	1					
ANR	8029474	PrimaryExpression	0		8029272	1					
ANR	8029475	PrimaryExpression	1		8029272	2					
ANR	8029476	ExpressionStatement	non_black_levels = ip -> fdata . colorant_array [ start ] . levels	167:2:4630:4687	8029272	23	True				
ANR	8029477	AssignmentExpression	non_black_levels = ip -> fdata . colorant_array [ start ] . levels		8029272	0		=			
ANR	8029478	Identifier	non_black_levels		8029272	0					
ANR	8029479	MemberAccess	ip -> fdata . colorant_array [ start ] . levels		8029272	1					
ANR	8029480	ArrayIndexing	ip -> fdata . colorant_array [ start ]		8029272	0					
ANR	8029481	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029482	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029483	Identifier	ip		8029272	0					
ANR	8029484	Identifier	fdata		8029272	1					
ANR	8029485	Identifier	colorant_array		8029272	1					
ANR	8029486	Identifier	start		8029272	1					
ANR	8029487	Identifier	levels		8029272	1					
ANR	8029488	ForStatement	for ( j = 1 ; j < 3 ; j ++ )		8029272	24					
ANR	8029489	ForInit	j = 1 ;	168:7:4696:4701	8029272	0	True				
ANR	8029490	AssignmentExpression	j = 1		8029272	0		=			
ANR	8029491	Identifier	j		8029272	0					
ANR	8029492	PrimaryExpression	1		8029272	1					
ANR	8029493	Condition	j < 3	168:14:4703:4707	8029272	1	True				
ANR	8029494	RelationalExpression	j < 3		8029272	0		<			
ANR	8029495	Identifier	j		8029272	0					
ANR	8029496	PrimaryExpression	3		8029272	1					
ANR	8029497	PostIncDecOperationExpression	j ++	168:21:4710:4712	8029272	2	True				
ANR	8029498	Identifier	j		8029272	0					
ANR	8029499	IncDec	++		8029272	1					
ANR	8029500	IfStatement	if ( ip -> fdata . colorant_array [ start + j ] . levels != non_black_levels )		8029272	3					
ANR	8029501	Condition	ip -> fdata . colorant_array [ start + j ] . levels != non_black_levels	169:8:4723:4784	8029272	0	True				
ANR	8029502	EqualityExpression	ip -> fdata . colorant_array [ start + j ] . levels != non_black_levels		8029272	0		!=			
ANR	8029503	MemberAccess	ip -> fdata . colorant_array [ start + j ] . levels		8029272	0					
ANR	8029504	ArrayIndexing	ip -> fdata . colorant_array [ start + j ]		8029272	0					
ANR	8029505	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029506	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029507	Identifier	ip		8029272	0					
ANR	8029508	Identifier	fdata		8029272	1					
ANR	8029509	Identifier	colorant_array		8029272	1					
ANR	8029510	AdditiveExpression	start + j		8029272	1		+			
ANR	8029511	Identifier	start		8029272	0					
ANR	8029512	Identifier	j		8029272	1					
ANR	8029513	Identifier	levels		8029272	1					
ANR	8029514	Identifier	non_black_levels		8029272	1					
ANR	8029515	ExpressionStatement	different_non_black_levels = TRUE	170:6:4793:4826	8029272	1	True				
ANR	8029516	AssignmentExpression	different_non_black_levels = TRUE		8029272	0		=			
ANR	8029517	Identifier	different_non_black_levels		8029272	0					
ANR	8029518	Identifier	TRUE		8029272	1					
ANR	8029519	IfStatement	if ( different_resolutions || different_non_black_levels )		8029272	25					
ANR	8029520	Condition	different_resolutions || different_non_black_levels	172:6:4835:4885	8029272	0	True				
ANR	8029521	OrExpression	different_resolutions || different_non_black_levels		8029272	0		||			
ANR	8029522	Identifier	different_resolutions		8029272	0					
ANR	8029523	Identifier	different_non_black_levels		8029272	1					
ANR	8029524	CompoundStatement		38:59:1350:1350	8029272	1					
ANR	8029525	Statement	imessage	173:4:4894:4901	8029272	0	True				
ANR	8029526	Statement	(	173:12:4902:4902	8029272	1	True				
ANR	8029527	Statement	ip	173:13:4903:4904	8029272	2	True				
ANR	8029528	Statement	->	173:15:4905:4906	8029272	3	True				
ANR	8029529	Statement	out	173:17:4907:4909	8029272	4	True				
ANR	8029530	Statement	","	173:20:4910:4910	8029272	5	True				
ANR	8029531	Statement	11	173:22:4912:4913	8029272	6	True				
ANR	8029532	Statement	","	173:24:4914:4914	8029272	7	True				
ANR	8029533	Statement	"""I've found a raster data section which uses a combination of """	174:6:4922:4984	8029272	8	True				
ANR	8029534	Statement	"""resolutions\\n"""	175:8:4994:5008	8029272	9	True				
ANR	8029535	Statement	"""and intensity levels which pcl3 cannot reproduce:\\n"""	176:6:5016:5068	8029272	10	True				
ANR	8029536	Statement	)	176:59:5069:5069	8029272	11	True				
ANR	8029537	ExpressionStatement		176:60:5070:5070	8029272	12	True				
ANR	8029538	ForStatement	for ( j = 0 ; j < ip -> fdata . number_of_colorants ; j ++ )		8029272	13					
ANR	8029539	ForInit	j = 0 ;	177:9:5081:5086	8029272	0	True				
ANR	8029540	AssignmentExpression	j = 0		8029272	0		=			
ANR	8029541	Identifier	j		8029272	0					
ANR	8029542	PrimaryExpression	0		8029272	1					
ANR	8029543	Condition	j < ip -> fdata . number_of_colorants	177:16:5088:5120	8029272	1	True				
ANR	8029544	RelationalExpression	j < ip -> fdata . number_of_colorants		8029272	0		<			
ANR	8029545	Identifier	j		8029272	0					
ANR	8029546	MemberAccess	ip -> fdata . number_of_colorants		8029272	1					
ANR	8029547	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029548	Identifier	ip		8029272	0					
ANR	8029549	Identifier	fdata		8029272	1					
ANR	8029550	Identifier	number_of_colorants		8029272	1					
ANR	8029551	PostIncDecOperationExpression	j ++	177:51:5123:5125	8029272	2	True				
ANR	8029552	Identifier	j		8029272	0					
ANR	8029553	IncDec	++		8029272	1					
ANR	8029554	ExpressionStatement	"imessage ( ip -> out , 12 , ""    colorant %d: %4d x %4d ppi %2d levels\\n"" , j + 1 , ip -> fdata . colorant_array [ j ] . hres , ip -> fdata . colorant_array [ j ] . vres , ip -> fdata . colorant_array [ j ] . levels )"	178:6:5134:5337	8029272	3	True				
ANR	8029555	CallExpression	"imessage ( ip -> out , 12 , ""    colorant %d: %4d x %4d ppi %2d levels\\n"" , j + 1 , ip -> fdata . colorant_array [ j ] . hres , ip -> fdata . colorant_array [ j ] . vres , ip -> fdata . colorant_array [ j ] . levels )"		8029272	0					
ANR	8029556	Callee	imessage		8029272	0					
ANR	8029557	Identifier	imessage		8029272	0					
ANR	8029558	ArgumentList	ip -> out		8029272	1					
ANR	8029559	Argument	ip -> out		8029272	0					
ANR	8029560	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029561	Identifier	ip		8029272	0					
ANR	8029562	Identifier	out		8029272	1					
ANR	8029563	Argument	12		8029272	1					
ANR	8029564	PrimaryExpression	12		8029272	0					
ANR	8029565	Argument	"""    colorant %d: %4d x %4d ppi %2d levels\\n"""		8029272	2					
ANR	8029566	PrimaryExpression	"""    colorant %d: %4d x %4d ppi %2d levels\\n"""		8029272	0					
ANR	8029567	Argument	j + 1		8029272	3					
ANR	8029568	AdditiveExpression	j + 1		8029272	0		+			
ANR	8029569	Identifier	j		8029272	0					
ANR	8029570	PrimaryExpression	1		8029272	1					
ANR	8029571	Argument	ip -> fdata . colorant_array [ j ] . hres		8029272	4					
ANR	8029572	MemberAccess	ip -> fdata . colorant_array [ j ] . hres		8029272	0					
ANR	8029573	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8029272	0					
ANR	8029574	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029575	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029576	Identifier	ip		8029272	0					
ANR	8029577	Identifier	fdata		8029272	1					
ANR	8029578	Identifier	colorant_array		8029272	1					
ANR	8029579	Identifier	j		8029272	1					
ANR	8029580	Identifier	hres		8029272	1					
ANR	8029581	Argument	ip -> fdata . colorant_array [ j ] . vres		8029272	5					
ANR	8029582	MemberAccess	ip -> fdata . colorant_array [ j ] . vres		8029272	0					
ANR	8029583	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8029272	0					
ANR	8029584	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029585	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029586	Identifier	ip		8029272	0					
ANR	8029587	Identifier	fdata		8029272	1					
ANR	8029588	Identifier	colorant_array		8029272	1					
ANR	8029589	Identifier	j		8029272	1					
ANR	8029590	Identifier	vres		8029272	1					
ANR	8029591	Argument	ip -> fdata . colorant_array [ j ] . levels		8029272	6					
ANR	8029592	MemberAccess	ip -> fdata . colorant_array [ j ] . levels		8029272	0					
ANR	8029593	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8029272	0					
ANR	8029594	MemberAccess	ip -> fdata . colorant_array		8029272	0					
ANR	8029595	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029596	Identifier	ip		8029272	0					
ANR	8029597	Identifier	fdata		8029272	1					
ANR	8029598	Identifier	colorant_array		8029272	1					
ANR	8029599	Identifier	j		8029272	1					
ANR	8029600	Identifier	levels		8029272	1					
ANR	8029601	IfStatement	if ( ip -> fdata . palette == pcl_CMYK && non_black_levels > 2 && black_levels < 4 )		8029272	14					
ANR	8029602	Condition	ip -> fdata . palette == pcl_CMYK && non_black_levels > 2 && black_levels < 4	182:8:5347:5427	8029272	0	True				
ANR	8029603	AndExpression	ip -> fdata . palette == pcl_CMYK && non_black_levels > 2 && black_levels < 4		8029272	0		&&			
ANR	8029604	EqualityExpression	ip -> fdata . palette == pcl_CMYK		8029272	0		==			
ANR	8029605	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8029606	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029607	Identifier	ip		8029272	0					
ANR	8029608	Identifier	fdata		8029272	1					
ANR	8029609	Identifier	palette		8029272	1					
ANR	8029610	Identifier	pcl_CMYK		8029272	1					
ANR	8029611	AndExpression	non_black_levels > 2 && black_levels < 4		8029272	1		&&			
ANR	8029612	RelationalExpression	non_black_levels > 2		8029272	0		>			
ANR	8029613	Identifier	non_black_levels		8029272	0					
ANR	8029614	PrimaryExpression	2		8029272	1					
ANR	8029615	RelationalExpression	black_levels < 4		8029272	1		<			
ANR	8029616	Identifier	black_levels		8029272	0					
ANR	8029617	PrimaryExpression	4		8029272	1					
ANR	8029618	ExpressionStatement	black_levels = 4	184:6:5436:5452	8029272	1	True				
ANR	8029619	AssignmentExpression	black_levels = 4		8029272	0		=			
ANR	8029620	Identifier	black_levels		8029272	0					
ANR	8029621	PrimaryExpression	4		8029272	1					
ANR	8029622	Statement	imessage	187:2:5461:5468	8029272	26	True				
ANR	8029623	Statement	(	187:10:5469:5469	8029272	27	True				
ANR	8029624	Statement	ip	187:11:5470:5471	8029272	28	True				
ANR	8029625	Statement	->	187:13:5472:5473	8029272	29	True				
ANR	8029626	Statement	out	187:15:5474:5476	8029272	30	True				
ANR	8029627	Statement	","	187:18:5477:5477	8029272	31	True				
ANR	8029628	Statement	13	187:20:5479:5480	8029272	32	True				
ANR	8029629	Statement	","	187:22:5481:5481	8029272	33	True				
ANR	8029630	Statement	"""My best guess for the command line needed to generate a similar file """	188:4:5487:5557	8029272	34	True				
ANR	8029631	Statement	"""is:\\n"""	189:4:5563:5569	8029272	35	True				
ANR	8029632	Statement	)	189:11:5570:5570	8029272	36	True				
ANR	8029633	ExpressionStatement		189:12:5571:5571	8029272	37	True				
ANR	8029634	ExpressionStatement	ll = - 1	192:2:5601:5608	8029272	38	True				
ANR	8029635	AssignmentExpression	ll = - 1		8029272	0		=			
ANR	8029636	Identifier	ll		8029272	0					
ANR	8029637	UnaryOperationExpression	- 1		8029272	1					
ANR	8029638	UnaryOperator	-		8029272	0					
ANR	8029639	PrimaryExpression	1		8029272	1					
ANR	8029640	ExpressionStatement	"ll += fprintf ( ip -> out , ""\\n  gs -sDEVICE=pcl3 -sSubdevice="" )"	193:2:5612:5671	8029272	39	True				
ANR	8029641	AssignmentExpression	"ll += fprintf ( ip -> out , ""\\n  gs -sDEVICE=pcl3 -sSubdevice="" )"		8029272	0		+=			
ANR	8029642	Identifier	ll		8029272	0					
ANR	8029643	CallExpression	"fprintf ( ip -> out , ""\\n  gs -sDEVICE=pcl3 -sSubdevice="" )"		8029272	1					
ANR	8029644	Callee	fprintf		8029272	0					
ANR	8029645	Identifier	fprintf		8029272	0					
ANR	8029646	ArgumentList	ip -> out		8029272	1					
ANR	8029647	Argument	ip -> out		8029272	0					
ANR	8029648	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029649	Identifier	ip		8029272	0					
ANR	8029650	Identifier	out		8029272	1					
ANR	8029651	Argument	"""\\n  gs -sDEVICE=pcl3 -sSubdevice="""		8029272	1					
ANR	8029652	PrimaryExpression	"""\\n  gs -sDEVICE=pcl3 -sSubdevice="""		8029272	0					
ANR	8029653	ExpressionStatement	default_compression = pcl_cm_tiff	194:2:5675:5708	8029272	40	True				
ANR	8029654	AssignmentExpression	default_compression = pcl_cm_tiff		8029272	0		=			
ANR	8029655	Identifier	default_compression		8029272	0					
ANR	8029656	Identifier	pcl_cm_tiff		8029272	1					
ANR	8029657	IfStatement	if ( ip -> seen_CRD || ip -> seen_new_quality )		8029272	41					
ANR	8029658	Condition	ip -> seen_CRD || ip -> seen_new_quality	195:6:5716:5751	8029272	0	True				
ANR	8029659	OrExpression	ip -> seen_CRD || ip -> seen_new_quality		8029272	0		||			
ANR	8029660	PtrMemberAccess	ip -> seen_CRD		8029272	0					
ANR	8029661	Identifier	ip		8029272	0					
ANR	8029662	Identifier	seen_CRD		8029272	1					
ANR	8029663	PtrMemberAccess	ip -> seen_new_quality		8029272	1					
ANR	8029664	Identifier	ip		8029272	0					
ANR	8029665	Identifier	seen_new_quality		8029272	1					
ANR	8029666	ExpressionStatement	"ll += fprintf ( ip -> out , ""unspec"" )"	196:4:5758:5790	8029272	1	True				
ANR	8029667	AssignmentExpression	"ll += fprintf ( ip -> out , ""unspec"" )"		8029272	0		+=			
ANR	8029668	Identifier	ll		8029272	0					
ANR	8029669	CallExpression	"fprintf ( ip -> out , ""unspec"" )"		8029272	1					
ANR	8029670	Callee	fprintf		8029272	0					
ANR	8029671	Identifier	fprintf		8029272	0					
ANR	8029672	ArgumentList	ip -> out		8029272	1					
ANR	8029673	Argument	ip -> out		8029272	0					
ANR	8029674	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029675	Identifier	ip		8029272	0					
ANR	8029676	Identifier	out		8029272	1					
ANR	8029677	Argument	"""unspec"""		8029272	1					
ANR	8029678	PrimaryExpression	"""unspec"""		8029272	0					
ANR	8029679	ElseStatement	else		8029272	0					
ANR	8029680	IfStatement	if ( ip -> seen_ERG_B && ! ip -> seen_ERG_C && ip -> fdata . shingling == - 1 && ( ip -> fdata . palette == pcl_no_palette || ip -> fdata . palette == pcl_black ) )		8029272	0					
ANR	8029681	Condition	ip -> seen_ERG_B && ! ip -> seen_ERG_C && ip -> fdata . shingling == - 1 && ( ip -> fdata . palette == pcl_no_palette || ip -> fdata . palette == pcl_black )	197:11:5803:5945	8029272	0	True				
ANR	8029682	AndExpression	ip -> seen_ERG_B && ! ip -> seen_ERG_C && ip -> fdata . shingling == - 1 && ( ip -> fdata . palette == pcl_no_palette || ip -> fdata . palette == pcl_black )		8029272	0		&&			
ANR	8029683	PtrMemberAccess	ip -> seen_ERG_B		8029272	0					
ANR	8029684	Identifier	ip		8029272	0					
ANR	8029685	Identifier	seen_ERG_B		8029272	1					
ANR	8029686	AndExpression	! ip -> seen_ERG_C && ip -> fdata . shingling == - 1 && ( ip -> fdata . palette == pcl_no_palette || ip -> fdata . palette == pcl_black )		8029272	1		&&			
ANR	8029687	UnaryOperationExpression	! ip -> seen_ERG_C		8029272	0					
ANR	8029688	UnaryOperator	!		8029272	0					
ANR	8029689	PtrMemberAccess	ip -> seen_ERG_C		8029272	1					
ANR	8029690	Identifier	ip		8029272	0					
ANR	8029691	Identifier	seen_ERG_C		8029272	1					
ANR	8029692	AndExpression	ip -> fdata . shingling == - 1 && ( ip -> fdata . palette == pcl_no_palette || ip -> fdata . palette == pcl_black )		8029272	1		&&			
ANR	8029693	EqualityExpression	ip -> fdata . shingling == - 1		8029272	0		==			
ANR	8029694	MemberAccess	ip -> fdata . shingling		8029272	0					
ANR	8029695	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029696	Identifier	ip		8029272	0					
ANR	8029697	Identifier	fdata		8029272	1					
ANR	8029698	Identifier	shingling		8029272	1					
ANR	8029699	UnaryOperationExpression	- 1		8029272	1					
ANR	8029700	UnaryOperator	-		8029272	0					
ANR	8029701	PrimaryExpression	1		8029272	1					
ANR	8029702	OrExpression	ip -> fdata . palette == pcl_no_palette || ip -> fdata . palette == pcl_black		8029272	1		||			
ANR	8029703	EqualityExpression	ip -> fdata . palette == pcl_no_palette		8029272	0		==			
ANR	8029704	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8029705	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029706	Identifier	ip		8029272	0					
ANR	8029707	Identifier	fdata		8029272	1					
ANR	8029708	Identifier	palette		8029272	1					
ANR	8029709	Identifier	pcl_no_palette		8029272	1					
ANR	8029710	EqualityExpression	ip -> fdata . palette == pcl_black		8029272	1		==			
ANR	8029711	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8029712	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029713	Identifier	ip		8029272	0					
ANR	8029714	Identifier	fdata		8029272	1					
ANR	8029715	Identifier	palette		8029272	1					
ANR	8029716	Identifier	pcl_black		8029272	1					
ANR	8029717	CompoundStatement		64:79:2410:2410	8029272	1					
ANR	8029718	ExpressionStatement	"ll += fprintf ( ip -> out , ""hpdj500"" )"	200:4:6029:6062	8029272	0	True				
ANR	8029719	AssignmentExpression	"ll += fprintf ( ip -> out , ""hpdj500"" )"		8029272	0		+=			
ANR	8029720	Identifier	ll		8029272	0					
ANR	8029721	CallExpression	"fprintf ( ip -> out , ""hpdj500"" )"		8029272	1					
ANR	8029722	Callee	fprintf		8029272	0					
ANR	8029723	Identifier	fprintf		8029272	0					
ANR	8029724	ArgumentList	ip -> out		8029272	1					
ANR	8029725	Argument	ip -> out		8029272	0					
ANR	8029726	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029727	Identifier	ip		8029272	0					
ANR	8029728	Identifier	out		8029272	1					
ANR	8029729	Argument	"""hpdj500"""		8029272	1					
ANR	8029730	PrimaryExpression	"""hpdj500"""		8029272	0					
ANR	8029731	ExpressionStatement	default_compression = pcl_cm_delta	201:4:6068:6102	8029272	1	True				
ANR	8029732	AssignmentExpression	default_compression = pcl_cm_delta		8029272	0		=			
ANR	8029733	Identifier	default_compression		8029272	0					
ANR	8029734	Identifier	pcl_cm_delta		8029272	1					
ANR	8029735	ElseStatement	else		8029272	0					
ANR	8029736	ExpressionStatement	"ll += fprintf ( ip -> out , ""unspecold"" )"	204:4:6119:6154	8029272	0	True				
ANR	8029737	AssignmentExpression	"ll += fprintf ( ip -> out , ""unspecold"" )"		8029272	0		+=			
ANR	8029738	Identifier	ll		8029272	0					
ANR	8029739	CallExpression	"fprintf ( ip -> out , ""unspecold"" )"		8029272	1					
ANR	8029740	Callee	fprintf		8029272	0					
ANR	8029741	Identifier	fprintf		8029272	0					
ANR	8029742	ArgumentList	ip -> out		8029272	1					
ANR	8029743	Argument	ip -> out		8029272	0					
ANR	8029744	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029745	Identifier	ip		8029272	0					
ANR	8029746	Identifier	out		8029272	1					
ANR	8029747	Argument	"""unspecold"""		8029272	1					
ANR	8029748	PrimaryExpression	"""unspecold"""		8029272	0					
ANR	8029749	IfStatement	if ( ip -> fdata . NULs_to_send > 0 )		8029272	42					
ANR	8029750	Condition	ip -> fdata . NULs_to_send > 0	207:6:6204:6229	8029272	0	True				
ANR	8029751	RelationalExpression	ip -> fdata . NULs_to_send > 0		8029272	0		>			
ANR	8029752	MemberAccess	ip -> fdata . NULs_to_send		8029272	0					
ANR	8029753	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029754	Identifier	ip		8029272	0					
ANR	8029755	Identifier	fdata		8029272	1					
ANR	8029756	Identifier	NULs_to_send		8029272	1					
ANR	8029757	PrimaryExpression	0		8029272	1					
ANR	8029758	CompoundStatement		73:34:2694:2694	8029272	1					
ANR	8029759	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dSendNULs=9600"" ) )"	208:4:6238:6296	8029272	0	True				
ANR	8029760	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dSendNULs=9600"" ) )"		8029272	0					
ANR	8029761	Callee	check_line_length		8029272	0					
ANR	8029762	Identifier	check_line_length		8029272	0					
ANR	8029763	ArgumentList	ip -> out		8029272	1					
ANR	8029764	Argument	ip -> out		8029272	0					
ANR	8029765	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029766	Identifier	ip		8029272	0					
ANR	8029767	Identifier	out		8029272	1					
ANR	8029768	Argument	& ll		8029272	1					
ANR	8029769	UnaryOperationExpression	& ll		8029272	0					
ANR	8029770	UnaryOperator	&		8029272	0					
ANR	8029771	Identifier	ll		8029272	1					
ANR	8029772	Argument	"sizeof ( ""-dSendNULs=9600"" )"		8029272	2					
ANR	8029773	SizeofExpression	"sizeof ( ""-dSendNULs=9600"" )"		8029272	0					
ANR	8029774	Sizeof	sizeof		8029272	0					
ANR	8029775	PrimaryExpression	"""-dSendNULs=9600"""		8029272	1					
ANR	8029776	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dSendNULs=%d"" , ip -> fdata . NULs_to_send )"	210:4:6374:6438	8029272	1	True				
ANR	8029777	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dSendNULs=%d"" , ip -> fdata . NULs_to_send )"		8029272	0		+=			
ANR	8029778	Identifier	ll		8029272	0					
ANR	8029779	CallExpression	"fprintf ( ip -> out , "" -dSendNULs=%d"" , ip -> fdata . NULs_to_send )"		8029272	1					
ANR	8029780	Callee	fprintf		8029272	0					
ANR	8029781	Identifier	fprintf		8029272	0					
ANR	8029782	ArgumentList	ip -> out		8029272	1					
ANR	8029783	Argument	ip -> out		8029272	0					
ANR	8029784	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029785	Identifier	ip		8029272	0					
ANR	8029786	Identifier	out		8029272	1					
ANR	8029787	Argument	""" -dSendNULs=%d"""		8029272	1					
ANR	8029788	PrimaryExpression	""" -dSendNULs=%d"""		8029272	0					
ANR	8029789	Argument	ip -> fdata . NULs_to_send		8029272	2					
ANR	8029790	MemberAccess	ip -> fdata . NULs_to_send		8029272	0					
ANR	8029791	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029792	Identifier	ip		8029272	0					
ANR	8029793	Identifier	fdata		8029272	1					
ANR	8029794	Identifier	NULs_to_send		8029272	1					
ANR	8029795	IfStatement	if ( ip -> fdata . PJL_job != NULL )		8029272	43					
ANR	8029796	Condition	ip -> fdata . PJL_job != NULL	212:6:6450:6474	8029272	0	True				
ANR	8029797	EqualityExpression	ip -> fdata . PJL_job != NULL		8029272	0		!=			
ANR	8029798	MemberAccess	ip -> fdata . PJL_job		8029272	0					
ANR	8029799	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029800	Identifier	ip		8029272	0					
ANR	8029801	Identifier	fdata		8029272	1					
ANR	8029802	Identifier	PJL_job		8029272	1					
ANR	8029803	Identifier	NULL		8029272	1					
ANR	8029804	CompoundStatement		78:33:2939:2939	8029272	1					
ANR	8029805	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-sPJLJob="" ) + strlen ( ip -> fdata . PJL_job ) )"	213:4:6483:6569	8029272	0	True				
ANR	8029806	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-sPJLJob="" ) + strlen ( ip -> fdata . PJL_job ) )"		8029272	0					
ANR	8029807	Callee	check_line_length		8029272	0					
ANR	8029808	Identifier	check_line_length		8029272	0					
ANR	8029809	ArgumentList	ip -> out		8029272	1					
ANR	8029810	Argument	ip -> out		8029272	0					
ANR	8029811	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029812	Identifier	ip		8029272	0					
ANR	8029813	Identifier	out		8029272	1					
ANR	8029814	Argument	& ll		8029272	1					
ANR	8029815	UnaryOperationExpression	& ll		8029272	0					
ANR	8029816	UnaryOperator	&		8029272	0					
ANR	8029817	Identifier	ll		8029272	1					
ANR	8029818	Argument	"sizeof ( ""-sPJLJob="" ) + strlen ( ip -> fdata . PJL_job )"		8029272	2					
ANR	8029819	AdditiveExpression	"sizeof ( ""-sPJLJob="" ) + strlen ( ip -> fdata . PJL_job )"		8029272	0		+			
ANR	8029820	SizeofExpression	"sizeof ( ""-sPJLJob="" )"		8029272	0					
ANR	8029821	Sizeof	sizeof		8029272	0					
ANR	8029822	PrimaryExpression	"""-sPJLJob="""		8029272	1					
ANR	8029823	CallExpression	strlen ( ip -> fdata . PJL_job )		8029272	1					
ANR	8029824	Callee	strlen		8029272	0					
ANR	8029825	Identifier	strlen		8029272	0					
ANR	8029826	ArgumentList	ip -> fdata . PJL_job		8029272	1					
ANR	8029827	Argument	ip -> fdata . PJL_job		8029272	0					
ANR	8029828	MemberAccess	ip -> fdata . PJL_job		8029272	0					
ANR	8029829	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029830	Identifier	ip		8029272	0					
ANR	8029831	Identifier	fdata		8029272	1					
ANR	8029832	Identifier	PJL_job		8029272	1					
ANR	8029833	ExpressionStatement	"ll += fprintf ( ip -> out , "" -sPJLJob=%s"" , ip -> fdata . PJL_job )"	215:4:6575:6632	8029272	1	True				
ANR	8029834	AssignmentExpression	"ll += fprintf ( ip -> out , "" -sPJLJob=%s"" , ip -> fdata . PJL_job )"		8029272	0		+=			
ANR	8029835	Identifier	ll		8029272	0					
ANR	8029836	CallExpression	"fprintf ( ip -> out , "" -sPJLJob=%s"" , ip -> fdata . PJL_job )"		8029272	1					
ANR	8029837	Callee	fprintf		8029272	0					
ANR	8029838	Identifier	fprintf		8029272	0					
ANR	8029839	ArgumentList	ip -> out		8029272	1					
ANR	8029840	Argument	ip -> out		8029272	0					
ANR	8029841	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029842	Identifier	ip		8029272	0					
ANR	8029843	Identifier	out		8029272	1					
ANR	8029844	Argument	""" -sPJLJob=%s"""		8029272	1					
ANR	8029845	PrimaryExpression	""" -sPJLJob=%s"""		8029272	0					
ANR	8029846	Argument	ip -> fdata . PJL_job		8029272	2					
ANR	8029847	MemberAccess	ip -> fdata . PJL_job		8029272	0					
ANR	8029848	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029849	Identifier	ip		8029272	0					
ANR	8029850	Identifier	fdata		8029272	1					
ANR	8029851	Identifier	PJL_job		8029272	1					
ANR	8029852	IfStatement	if ( ip -> fdata . PJL_language != NULL )		8029272	44					
ANR	8029853	Condition	ip -> fdata . PJL_language != NULL	217:6:6644:6673	8029272	0	True				
ANR	8029854	EqualityExpression	ip -> fdata . PJL_language != NULL		8029272	0		!=			
ANR	8029855	MemberAccess	ip -> fdata . PJL_language		8029272	0					
ANR	8029856	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029857	Identifier	ip		8029272	0					
ANR	8029858	Identifier	fdata		8029272	1					
ANR	8029859	Identifier	PJL_language		8029272	1					
ANR	8029860	Identifier	NULL		8029272	1					
ANR	8029861	CompoundStatement		83:38:3138:3138	8029272	1					
ANR	8029862	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-sPJLLanguage="" ) + strlen ( ip -> fdata . PJL_language ) )"	218:4:6682:6778	8029272	0	True				
ANR	8029863	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-sPJLLanguage="" ) + strlen ( ip -> fdata . PJL_language ) )"		8029272	0					
ANR	8029864	Callee	check_line_length		8029272	0					
ANR	8029865	Identifier	check_line_length		8029272	0					
ANR	8029866	ArgumentList	ip -> out		8029272	1					
ANR	8029867	Argument	ip -> out		8029272	0					
ANR	8029868	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029869	Identifier	ip		8029272	0					
ANR	8029870	Identifier	out		8029272	1					
ANR	8029871	Argument	& ll		8029272	1					
ANR	8029872	UnaryOperationExpression	& ll		8029272	0					
ANR	8029873	UnaryOperator	&		8029272	0					
ANR	8029874	Identifier	ll		8029272	1					
ANR	8029875	Argument	"sizeof ( ""-sPJLLanguage="" ) + strlen ( ip -> fdata . PJL_language )"		8029272	2					
ANR	8029876	AdditiveExpression	"sizeof ( ""-sPJLLanguage="" ) + strlen ( ip -> fdata . PJL_language )"		8029272	0		+			
ANR	8029877	SizeofExpression	"sizeof ( ""-sPJLLanguage="" )"		8029272	0					
ANR	8029878	Sizeof	sizeof		8029272	0					
ANR	8029879	PrimaryExpression	"""-sPJLLanguage="""		8029272	1					
ANR	8029880	CallExpression	strlen ( ip -> fdata . PJL_language )		8029272	1					
ANR	8029881	Callee	strlen		8029272	0					
ANR	8029882	Identifier	strlen		8029272	0					
ANR	8029883	ArgumentList	ip -> fdata . PJL_language		8029272	1					
ANR	8029884	Argument	ip -> fdata . PJL_language		8029272	0					
ANR	8029885	MemberAccess	ip -> fdata . PJL_language		8029272	0					
ANR	8029886	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029887	Identifier	ip		8029272	0					
ANR	8029888	Identifier	fdata		8029272	1					
ANR	8029889	Identifier	PJL_language		8029272	1					
ANR	8029890	ExpressionStatement	"ll += fprintf ( ip -> out , "" -sPJLLanguage=%s"" , ip -> fdata . PJL_language )"	220:4:6784:6851	8029272	1	True				
ANR	8029891	AssignmentExpression	"ll += fprintf ( ip -> out , "" -sPJLLanguage=%s"" , ip -> fdata . PJL_language )"		8029272	0		+=			
ANR	8029892	Identifier	ll		8029272	0					
ANR	8029893	CallExpression	"fprintf ( ip -> out , "" -sPJLLanguage=%s"" , ip -> fdata . PJL_language )"		8029272	1					
ANR	8029894	Callee	fprintf		8029272	0					
ANR	8029895	Identifier	fprintf		8029272	0					
ANR	8029896	ArgumentList	ip -> out		8029272	1					
ANR	8029897	Argument	ip -> out		8029272	0					
ANR	8029898	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029899	Identifier	ip		8029272	0					
ANR	8029900	Identifier	out		8029272	1					
ANR	8029901	Argument	""" -sPJLLanguage=%s"""		8029272	1					
ANR	8029902	PrimaryExpression	""" -sPJLLanguage=%s"""		8029272	0					
ANR	8029903	Argument	ip -> fdata . PJL_language		8029272	2					
ANR	8029904	MemberAccess	ip -> fdata . PJL_language		8029272	0					
ANR	8029905	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029906	Identifier	ip		8029272	0					
ANR	8029907	Identifier	fdata		8029272	1					
ANR	8029908	Identifier	PJL_language		8029272	1					
ANR	8029909	IfStatement	if ( ip -> seen_CRD && ! ip -> seen_RGR )		8029272	45					
ANR	8029910	Condition	ip -> seen_CRD && ! ip -> seen_RGR	222:6:6863:6891	8029272	0	True				
ANR	8029911	AndExpression	ip -> seen_CRD && ! ip -> seen_RGR		8029272	0		&&			
ANR	8029912	PtrMemberAccess	ip -> seen_CRD		8029272	0					
ANR	8029913	Identifier	ip		8029272	0					
ANR	8029914	Identifier	seen_CRD		8029272	1					
ANR	8029915	UnaryOperationExpression	! ip -> seen_RGR		8029272	1					
ANR	8029916	UnaryOperator	!		8029272	0					
ANR	8029917	PtrMemberAccess	ip -> seen_RGR		8029272	1					
ANR	8029918	Identifier	ip		8029272	0					
ANR	8029919	Identifier	seen_RGR		8029272	1					
ANR	8029920	CompoundStatement		88:37:3356:3356	8029272	1					
ANR	8029921	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dOnlyCRD"" ) )"	223:4:6900:6952	8029272	0	True				
ANR	8029922	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dOnlyCRD"" ) )"		8029272	0					
ANR	8029923	Callee	check_line_length		8029272	0					
ANR	8029924	Identifier	check_line_length		8029272	0					
ANR	8029925	ArgumentList	ip -> out		8029272	1					
ANR	8029926	Argument	ip -> out		8029272	0					
ANR	8029927	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029928	Identifier	ip		8029272	0					
ANR	8029929	Identifier	out		8029272	1					
ANR	8029930	Argument	& ll		8029272	1					
ANR	8029931	UnaryOperationExpression	& ll		8029272	0					
ANR	8029932	UnaryOperator	&		8029272	0					
ANR	8029933	Identifier	ll		8029272	1					
ANR	8029934	Argument	"sizeof ( ""-dOnlyCRD"" )"		8029272	2					
ANR	8029935	SizeofExpression	"sizeof ( ""-dOnlyCRD"" )"		8029272	0					
ANR	8029936	Sizeof	sizeof		8029272	0					
ANR	8029937	PrimaryExpression	"""-dOnlyCRD"""		8029272	1					
ANR	8029938	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dOnlyCRD"" )"	224:4:6958:6994	8029272	1	True				
ANR	8029939	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dOnlyCRD"" )"		8029272	0		+=			
ANR	8029940	Identifier	ll		8029272	0					
ANR	8029941	CallExpression	"fprintf ( ip -> out , "" -dOnlyCRD"" )"		8029272	1					
ANR	8029942	Callee	fprintf		8029272	0					
ANR	8029943	Identifier	fprintf		8029272	0					
ANR	8029944	ArgumentList	ip -> out		8029272	1					
ANR	8029945	Argument	ip -> out		8029272	0					
ANR	8029946	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029947	Identifier	ip		8029272	0					
ANR	8029948	Identifier	out		8029272	1					
ANR	8029949	Argument	""" -dOnlyCRD"""		8029272	1					
ANR	8029950	PrimaryExpression	""" -dOnlyCRD"""		8029272	0					
ANR	8029951	IfStatement	if ( ip -> fdata . manual_feed )		8029272	46					
ANR	8029952	Condition	ip -> fdata . manual_feed	228:6:7050:7070	8029272	0	True				
ANR	8029953	MemberAccess	ip -> fdata . manual_feed		8029272	0					
ANR	8029954	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029955	Identifier	ip		8029272	0					
ANR	8029956	Identifier	fdata		8029272	1					
ANR	8029957	Identifier	manual_feed		8029272	1					
ANR	8029958	CompoundStatement		94:29:3535:3535	8029272	1					
ANR	8029959	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dManualFeed"" ) )"	229:4:7079:7134	8029272	0	True				
ANR	8029960	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dManualFeed"" ) )"		8029272	0					
ANR	8029961	Callee	check_line_length		8029272	0					
ANR	8029962	Identifier	check_line_length		8029272	0					
ANR	8029963	ArgumentList	ip -> out		8029272	1					
ANR	8029964	Argument	ip -> out		8029272	0					
ANR	8029965	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029966	Identifier	ip		8029272	0					
ANR	8029967	Identifier	out		8029272	1					
ANR	8029968	Argument	& ll		8029272	1					
ANR	8029969	UnaryOperationExpression	& ll		8029272	0					
ANR	8029970	UnaryOperator	&		8029272	0					
ANR	8029971	Identifier	ll		8029272	1					
ANR	8029972	Argument	"sizeof ( ""-dManualFeed"" )"		8029272	2					
ANR	8029973	SizeofExpression	"sizeof ( ""-dManualFeed"" )"		8029272	0					
ANR	8029974	Sizeof	sizeof		8029272	0					
ANR	8029975	PrimaryExpression	"""-dManualFeed"""		8029272	1					
ANR	8029976	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dManualFeed"" )"	230:4:7140:7179	8029272	1	True				
ANR	8029977	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dManualFeed"" )"		8029272	0		+=			
ANR	8029978	Identifier	ll		8029272	0					
ANR	8029979	CallExpression	"fprintf ( ip -> out , "" -dManualFeed"" )"		8029272	1					
ANR	8029980	Callee	fprintf		8029272	0					
ANR	8029981	Identifier	fprintf		8029272	0					
ANR	8029982	ArgumentList	ip -> out		8029272	1					
ANR	8029983	Argument	ip -> out		8029272	0					
ANR	8029984	PtrMemberAccess	ip -> out		8029272	0					
ANR	8029985	Identifier	ip		8029272	0					
ANR	8029986	Identifier	out		8029272	1					
ANR	8029987	Argument	""" -dManualFeed"""		8029272	1					
ANR	8029988	PrimaryExpression	""" -dManualFeed"""		8029272	0					
ANR	8029989	IfStatement	if ( ip -> fdata . duplex > 0 )		8029272	47					
ANR	8029990	Condition	ip -> fdata . duplex > 0	232:6:7191:7210	8029272	0	True				
ANR	8029991	RelationalExpression	ip -> fdata . duplex > 0		8029272	0		>			
ANR	8029992	MemberAccess	ip -> fdata . duplex		8029272	0					
ANR	8029993	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8029994	Identifier	ip		8029272	0					
ANR	8029995	Identifier	fdata		8029272	1					
ANR	8029996	Identifier	duplex		8029272	1					
ANR	8029997	PrimaryExpression	0		8029272	1					
ANR	8029998	CompoundStatement		99:4:3681:3709	8029272	1					
ANR	8029999	IdentifierDeclStatement	"const char s [ ] = "" -dDuplex"" ;"	233:4:7219:7247	8029272	0	True				
ANR	8030000	IdentifierDecl	"s [ ] = "" -dDuplex"""		8029272	0					
ANR	8030001	IdentifierDeclType	const char [ ]		8029272	0					
ANR	8030002	Identifier	s		8029272	1					
ANR	8030003	AssignmentExpression	"s [ ] = "" -dDuplex"""		8029272	2		=			
ANR	8030004	Identifier	s		8029272	0					
ANR	8030005	PrimaryExpression	""" -dDuplex"""		8029272	1					
ANR	8030006	IfStatement	if ( ip -> fdata . duplex == 1 )		8029272	1					
ANR	8030007	Condition	ip -> fdata . duplex == 1	235:8:7258:7278	8029272	0	True				
ANR	8030008	EqualityExpression	ip -> fdata . duplex == 1		8029272	0		==			
ANR	8030009	MemberAccess	ip -> fdata . duplex		8029272	0					
ANR	8030010	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030011	Identifier	ip		8029272	0					
ANR	8030012	Identifier	fdata		8029272	1					
ANR	8030013	Identifier	duplex		8029272	1					
ANR	8030014	PrimaryExpression	1		8029272	1					
ANR	8030015	CompoundStatement		102:6:3751:3805	8029272	1					
ANR	8030016	IdentifierDeclStatement	"const char s [ ] = "" -sDuplexCapability=sameLeadingEdge"" ;"	236:6:7289:7343	8029272	0	True				
ANR	8030017	IdentifierDecl	"s [ ] = "" -sDuplexCapability=sameLeadingEdge"""		8029272	0					
ANR	8030018	IdentifierDeclType	const char [ ]		8029272	0					
ANR	8030019	Identifier	s		8029272	1					
ANR	8030020	AssignmentExpression	"s [ ] = "" -sDuplexCapability=sameLeadingEdge"""		8029272	2		=			
ANR	8030021	Identifier	s		8029272	0					
ANR	8030022	PrimaryExpression	""" -sDuplexCapability=sameLeadingEdge"""		8029272	1					
ANR	8030023	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( s ) - 1 )"	237:6:7351:7397	8029272	1	True				
ANR	8030024	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( s ) - 1 )"		8029272	0					
ANR	8030025	Callee	check_line_length		8029272	0					
ANR	8030026	Identifier	check_line_length		8029272	0					
ANR	8030027	ArgumentList	ip -> out		8029272	1					
ANR	8030028	Argument	ip -> out		8029272	0					
ANR	8030029	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030030	Identifier	ip		8029272	0					
ANR	8030031	Identifier	out		8029272	1					
ANR	8030032	Argument	& ll		8029272	1					
ANR	8030033	UnaryOperationExpression	& ll		8029272	0					
ANR	8030034	UnaryOperator	&		8029272	0					
ANR	8030035	Identifier	ll		8029272	1					
ANR	8030036	Argument	sizeof ( s ) - 1		8029272	2					
ANR	8030037	AdditiveExpression	sizeof ( s ) - 1		8029272	0		-			
ANR	8030038	SizeofExpression	sizeof ( s )		8029272	0					
ANR	8030039	Sizeof	sizeof		8029272	0					
ANR	8030040	SizeofOperand	s		8029272	1					
ANR	8030041	PrimaryExpression	1		8029272	1					
ANR	8030042	ExpressionStatement	"ll += fprintf ( ip -> out , s )"	238:6:7405:7430	8029272	2	True				
ANR	8030043	AssignmentExpression	"ll += fprintf ( ip -> out , s )"		8029272	0		+=			
ANR	8030044	Identifier	ll		8029272	0					
ANR	8030045	CallExpression	"fprintf ( ip -> out , s )"		8029272	1					
ANR	8030046	Callee	fprintf		8029272	0					
ANR	8030047	Identifier	fprintf		8029272	0					
ANR	8030048	ArgumentList	ip -> out		8029272	1					
ANR	8030049	Argument	ip -> out		8029272	0					
ANR	8030050	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030051	Identifier	ip		8029272	0					
ANR	8030052	Identifier	out		8029272	1					
ANR	8030053	Argument	s		8029272	1					
ANR	8030054	Identifier	s		8029272	0					
ANR	8030055	ElseStatement	else		8029272	0					
ANR	8030056	IfStatement	if ( ip -> fdata . duplex == 2 )		8029272	0					
ANR	8030057	Condition	ip -> fdata . duplex == 2	240:13:7451:7471	8029272	0	True				
ANR	8030058	EqualityExpression	ip -> fdata . duplex == 2		8029272	0		==			
ANR	8030059	MemberAccess	ip -> fdata . duplex		8029272	0					
ANR	8030060	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030061	Identifier	ip		8029272	0					
ANR	8030062	Identifier	fdata		8029272	1					
ANR	8030063	Identifier	duplex		8029272	1					
ANR	8030064	PrimaryExpression	2		8029272	1					
ANR	8030065	CompoundStatement		107:6:3944:4002	8029272	1					
ANR	8030066	IdentifierDeclStatement	"const char s [ ] = "" -sDuplexCapability=oppositeLeadingEdge"" ;"	241:6:7482:7540	8029272	0	True				
ANR	8030067	IdentifierDecl	"s [ ] = "" -sDuplexCapability=oppositeLeadingEdge"""		8029272	0					
ANR	8030068	IdentifierDeclType	const char [ ]		8029272	0					
ANR	8030069	Identifier	s		8029272	1					
ANR	8030070	AssignmentExpression	"s [ ] = "" -sDuplexCapability=oppositeLeadingEdge"""		8029272	2		=			
ANR	8030071	Identifier	s		8029272	0					
ANR	8030072	PrimaryExpression	""" -sDuplexCapability=oppositeLeadingEdge"""		8029272	1					
ANR	8030073	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( s ) - 1 )"	242:6:7548:7594	8029272	1	True				
ANR	8030074	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( s ) - 1 )"		8029272	0					
ANR	8030075	Callee	check_line_length		8029272	0					
ANR	8030076	Identifier	check_line_length		8029272	0					
ANR	8030077	ArgumentList	ip -> out		8029272	1					
ANR	8030078	Argument	ip -> out		8029272	0					
ANR	8030079	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030080	Identifier	ip		8029272	0					
ANR	8030081	Identifier	out		8029272	1					
ANR	8030082	Argument	& ll		8029272	1					
ANR	8030083	UnaryOperationExpression	& ll		8029272	0					
ANR	8030084	UnaryOperator	&		8029272	0					
ANR	8030085	Identifier	ll		8029272	1					
ANR	8030086	Argument	sizeof ( s ) - 1		8029272	2					
ANR	8030087	AdditiveExpression	sizeof ( s ) - 1		8029272	0		-			
ANR	8030088	SizeofExpression	sizeof ( s )		8029272	0					
ANR	8030089	Sizeof	sizeof		8029272	0					
ANR	8030090	SizeofOperand	s		8029272	1					
ANR	8030091	PrimaryExpression	1		8029272	1					
ANR	8030092	ExpressionStatement	"ll += fprintf ( ip -> out , s )"	243:6:7602:7627	8029272	2	True				
ANR	8030093	AssignmentExpression	"ll += fprintf ( ip -> out , s )"		8029272	0		+=			
ANR	8030094	Identifier	ll		8029272	0					
ANR	8030095	CallExpression	"fprintf ( ip -> out , s )"		8029272	1					
ANR	8030096	Callee	fprintf		8029272	0					
ANR	8030097	Identifier	fprintf		8029272	0					
ANR	8030098	ArgumentList	ip -> out		8029272	1					
ANR	8030099	Argument	ip -> out		8029272	0					
ANR	8030100	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030101	Identifier	ip		8029272	0					
ANR	8030102	Identifier	out		8029272	1					
ANR	8030103	Argument	s		8029272	1					
ANR	8030104	Identifier	s		8029272	0					
ANR	8030105	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( s ) - 1 )"	245:4:7639:7685	8029272	2	True				
ANR	8030106	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( s ) - 1 )"		8029272	0					
ANR	8030107	Callee	check_line_length		8029272	0					
ANR	8030108	Identifier	check_line_length		8029272	0					
ANR	8030109	ArgumentList	ip -> out		8029272	1					
ANR	8030110	Argument	ip -> out		8029272	0					
ANR	8030111	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030112	Identifier	ip		8029272	0					
ANR	8030113	Identifier	out		8029272	1					
ANR	8030114	Argument	& ll		8029272	1					
ANR	8030115	UnaryOperationExpression	& ll		8029272	0					
ANR	8030116	UnaryOperator	&		8029272	0					
ANR	8030117	Identifier	ll		8029272	1					
ANR	8030118	Argument	sizeof ( s ) - 1		8029272	2					
ANR	8030119	AdditiveExpression	sizeof ( s ) - 1		8029272	0		-			
ANR	8030120	SizeofExpression	sizeof ( s )		8029272	0					
ANR	8030121	Sizeof	sizeof		8029272	0					
ANR	8030122	SizeofOperand	s		8029272	1					
ANR	8030123	PrimaryExpression	1		8029272	1					
ANR	8030124	ExpressionStatement	"ll += fprintf ( ip -> out , s )"	246:4:7691:7716	8029272	3	True				
ANR	8030125	AssignmentExpression	"ll += fprintf ( ip -> out , s )"		8029272	0		+=			
ANR	8030126	Identifier	ll		8029272	0					
ANR	8030127	CallExpression	"fprintf ( ip -> out , s )"		8029272	1					
ANR	8030128	Callee	fprintf		8029272	0					
ANR	8030129	Identifier	fprintf		8029272	0					
ANR	8030130	ArgumentList	ip -> out		8029272	1					
ANR	8030131	Argument	ip -> out		8029272	0					
ANR	8030132	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030133	Identifier	ip		8029272	0					
ANR	8030134	Identifier	out		8029272	1					
ANR	8030135	Argument	s		8029272	1					
ANR	8030136	Identifier	s		8029272	0					
ANR	8030137	IfStatement	if ( ip -> fdata . dry_time >= 0 )		8029272	48					
ANR	8030138	Condition	ip -> fdata . dry_time >= 0	248:6:7728:7750	8029272	0	True				
ANR	8030139	RelationalExpression	ip -> fdata . dry_time >= 0		8029272	0		>=			
ANR	8030140	MemberAccess	ip -> fdata . dry_time		8029272	0					
ANR	8030141	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030142	Identifier	ip		8029272	0					
ANR	8030143	Identifier	fdata		8029272	1					
ANR	8030144	Identifier	dry_time		8029272	1					
ANR	8030145	PrimaryExpression	0		8029272	1					
ANR	8030146	CompoundStatement		114:31:4215:4215	8029272	1					
ANR	8030147	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dDryTime="" ) + 4 )"	249:4:7759:7816	8029272	0	True				
ANR	8030148	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dDryTime="" ) + 4 )"		8029272	0					
ANR	8030149	Callee	check_line_length		8029272	0					
ANR	8030150	Identifier	check_line_length		8029272	0					
ANR	8030151	ArgumentList	ip -> out		8029272	1					
ANR	8030152	Argument	ip -> out		8029272	0					
ANR	8030153	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030154	Identifier	ip		8029272	0					
ANR	8030155	Identifier	out		8029272	1					
ANR	8030156	Argument	& ll		8029272	1					
ANR	8030157	UnaryOperationExpression	& ll		8029272	0					
ANR	8030158	UnaryOperator	&		8029272	0					
ANR	8030159	Identifier	ll		8029272	1					
ANR	8030160	Argument	"sizeof ( ""-dDryTime="" ) + 4"		8029272	2					
ANR	8030161	AdditiveExpression	"sizeof ( ""-dDryTime="" ) + 4"		8029272	0		+			
ANR	8030162	SizeofExpression	"sizeof ( ""-dDryTime="" )"		8029272	0					
ANR	8030163	Sizeof	sizeof		8029272	0					
ANR	8030164	PrimaryExpression	"""-dDryTime="""		8029272	1					
ANR	8030165	PrimaryExpression	4		8029272	1					
ANR	8030166	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dDryTime=%d"" , ip -> fdata . dry_time )"	250:4:7822:7881	8029272	1	True				
ANR	8030167	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dDryTime=%d"" , ip -> fdata . dry_time )"		8029272	0		+=			
ANR	8030168	Identifier	ll		8029272	0					
ANR	8030169	CallExpression	"fprintf ( ip -> out , "" -dDryTime=%d"" , ip -> fdata . dry_time )"		8029272	1					
ANR	8030170	Callee	fprintf		8029272	0					
ANR	8030171	Identifier	fprintf		8029272	0					
ANR	8030172	ArgumentList	ip -> out		8029272	1					
ANR	8030173	Argument	ip -> out		8029272	0					
ANR	8030174	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030175	Identifier	ip		8029272	0					
ANR	8030176	Identifier	out		8029272	1					
ANR	8030177	Argument	""" -dDryTime=%d"""		8029272	1					
ANR	8030178	PrimaryExpression	""" -dDryTime=%d"""		8029272	0					
ANR	8030179	Argument	ip -> fdata . dry_time		8029272	2					
ANR	8030180	MemberAccess	ip -> fdata . dry_time		8029272	0					
ANR	8030181	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030182	Identifier	ip		8029272	0					
ANR	8030183	Identifier	fdata		8029272	1					
ANR	8030184	Identifier	dry_time		8029272	1					
ANR	8030185	IfStatement	if ( min_hres != 0 )		8029272	49					
ANR	8030186	Condition	min_hres != 0	254:6:7913:7925	8029272	0	True				
ANR	8030187	EqualityExpression	min_hres != 0		8029272	0		!=			
ANR	8030188	Identifier	min_hres		8029272	0					
ANR	8030189	PrimaryExpression	0		8029272	1					
ANR	8030190	CompoundStatement		120:21:4390:4390	8029272	1					
ANR	8030191	ExpressionStatement	"check_line_length ( ip -> out , & ll , 12 )"	255:4:7934:7969	8029272	0	True				
ANR	8030192	CallExpression	"check_line_length ( ip -> out , & ll , 12 )"		8029272	0					
ANR	8030193	Callee	check_line_length		8029272	0					
ANR	8030194	Identifier	check_line_length		8029272	0					
ANR	8030195	ArgumentList	ip -> out		8029272	1					
ANR	8030196	Argument	ip -> out		8029272	0					
ANR	8030197	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030198	Identifier	ip		8029272	0					
ANR	8030199	Identifier	out		8029272	1					
ANR	8030200	Argument	& ll		8029272	1					
ANR	8030201	UnaryOperationExpression	& ll		8029272	0					
ANR	8030202	UnaryOperator	&		8029272	0					
ANR	8030203	Identifier	ll		8029272	1					
ANR	8030204	Argument	12		8029272	2					
ANR	8030205	PrimaryExpression	12		8029272	0					
ANR	8030206	ExpressionStatement	"ll += fprintf ( ip -> out , "" -r%u"" , min_hres )"	256:4:7975:8016	8029272	1	True				
ANR	8030207	AssignmentExpression	"ll += fprintf ( ip -> out , "" -r%u"" , min_hres )"		8029272	0		+=			
ANR	8030208	Identifier	ll		8029272	0					
ANR	8030209	CallExpression	"fprintf ( ip -> out , "" -r%u"" , min_hres )"		8029272	1					
ANR	8030210	Callee	fprintf		8029272	0					
ANR	8030211	Identifier	fprintf		8029272	0					
ANR	8030212	ArgumentList	ip -> out		8029272	1					
ANR	8030213	Argument	ip -> out		8029272	0					
ANR	8030214	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030215	Identifier	ip		8029272	0					
ANR	8030216	Identifier	out		8029272	1					
ANR	8030217	Argument	""" -r%u"""		8029272	1					
ANR	8030218	PrimaryExpression	""" -r%u"""		8029272	0					
ANR	8030219	Argument	min_hres		8029272	2					
ANR	8030220	Identifier	min_hres		8029272	0					
ANR	8030221	IfStatement	if ( min_vres != min_hres )		8029272	2					
ANR	8030222	Condition	min_vres != min_hres	257:8:8026:8045	8029272	0	True				
ANR	8030223	EqualityExpression	min_vres != min_hres		8029272	0		!=			
ANR	8030224	Identifier	min_vres		8029272	0					
ANR	8030225	Identifier	min_hres		8029272	1					
ANR	8030226	ExpressionStatement	"ll += fprintf ( ip -> out , ""x%u"" , min_vres )"	257:30:8048:8087	8029272	1	True				
ANR	8030227	AssignmentExpression	"ll += fprintf ( ip -> out , ""x%u"" , min_vres )"		8029272	0		+=			
ANR	8030228	Identifier	ll		8029272	0					
ANR	8030229	CallExpression	"fprintf ( ip -> out , ""x%u"" , min_vres )"		8029272	1					
ANR	8030230	Callee	fprintf		8029272	0					
ANR	8030231	Identifier	fprintf		8029272	0					
ANR	8030232	ArgumentList	ip -> out		8029272	1					
ANR	8030233	Argument	ip -> out		8029272	0					
ANR	8030234	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030235	Identifier	ip		8029272	0					
ANR	8030236	Identifier	out		8029272	1					
ANR	8030237	Argument	"""x%u"""		8029272	1					
ANR	8030238	PrimaryExpression	"""x%u"""		8029272	0					
ANR	8030239	Argument	min_vres		8029272	2					
ANR	8030240	Identifier	min_vres		8029272	0					
ANR	8030241	IfStatement	if ( ip -> fdata . palette != pcl_no_palette )		8029272	50					
ANR	8030242	Condition	ip -> fdata . palette != pcl_no_palette	261:6:8121:8155	8029272	0	True				
ANR	8030243	EqualityExpression	ip -> fdata . palette != pcl_no_palette		8029272	0		!=			
ANR	8030244	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8030245	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030246	Identifier	ip		8029272	0					
ANR	8030247	Identifier	fdata		8029272	1					
ANR	8030248	Identifier	palette		8029272	1					
ANR	8030249	Identifier	pcl_no_palette		8029272	1					
ANR	8030250	CompoundStatement		127:43:4620:4620	8029272	1					
ANR	8030251	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-sColourModel=CMY+K"" ) )"	262:4:8164:8226	8029272	0	True				
ANR	8030252	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-sColourModel=CMY+K"" ) )"		8029272	0					
ANR	8030253	Callee	check_line_length		8029272	0					
ANR	8030254	Identifier	check_line_length		8029272	0					
ANR	8030255	ArgumentList	ip -> out		8029272	1					
ANR	8030256	Argument	ip -> out		8029272	0					
ANR	8030257	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030258	Identifier	ip		8029272	0					
ANR	8030259	Identifier	out		8029272	1					
ANR	8030260	Argument	& ll		8029272	1					
ANR	8030261	UnaryOperationExpression	& ll		8029272	0					
ANR	8030262	UnaryOperator	&		8029272	0					
ANR	8030263	Identifier	ll		8029272	1					
ANR	8030264	Argument	"sizeof ( ""-sColourModel=CMY+K"" )"		8029272	2					
ANR	8030265	SizeofExpression	"sizeof ( ""-sColourModel=CMY+K"" )"		8029272	0					
ANR	8030266	Sizeof	sizeof		8029272	0					
ANR	8030267	PrimaryExpression	"""-sColourModel=CMY+K"""		8029272	1					
ANR	8030268	ExpressionStatement	"ll += fprintf ( ip -> out , "" -sColourModel="" )"	263:4:8232:8273	8029272	1	True				
ANR	8030269	AssignmentExpression	"ll += fprintf ( ip -> out , "" -sColourModel="" )"		8029272	0		+=			
ANR	8030270	Identifier	ll		8029272	0					
ANR	8030271	CallExpression	"fprintf ( ip -> out , "" -sColourModel="" )"		8029272	1					
ANR	8030272	Callee	fprintf		8029272	0					
ANR	8030273	Identifier	fprintf		8029272	0					
ANR	8030274	ArgumentList	ip -> out		8029272	1					
ANR	8030275	Argument	ip -> out		8029272	0					
ANR	8030276	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030277	Identifier	ip		8029272	0					
ANR	8030278	Identifier	out		8029272	1					
ANR	8030279	Argument	""" -sColourModel="""		8029272	1					
ANR	8030280	PrimaryExpression	""" -sColourModel="""		8029272	0					
ANR	8030281	SwitchStatement	switch ( ip -> fdata . palette )		8029272	2					
ANR	8030282	Condition	ip -> fdata . palette	264:12:8287:8303	8029272	0	True				
ANR	8030283	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8030284	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030285	Identifier	ip		8029272	0					
ANR	8030286	Identifier	fdata		8029272	1					
ANR	8030287	Identifier	palette		8029272	1					
ANR	8030288	CompoundStatement		130:31:4768:4768	8029272	1					
ANR	8030289	Label	case pcl_black :	265:6:8314:8328	8029272	0	True				
ANR	8030290	Identifier	pcl_black		8029272	0					
ANR	8030291	ExpressionStatement	"ll += fprintf ( ip -> out , ""Gray"" )"	266:8:8338:8368	8029272	1	True				
ANR	8030292	AssignmentExpression	"ll += fprintf ( ip -> out , ""Gray"" )"		8029272	0		+=			
ANR	8030293	Identifier	ll		8029272	0					
ANR	8030294	CallExpression	"fprintf ( ip -> out , ""Gray"" )"		8029272	1					
ANR	8030295	Callee	fprintf		8029272	0					
ANR	8030296	Identifier	fprintf		8029272	0					
ANR	8030297	ArgumentList	ip -> out		8029272	1					
ANR	8030298	Argument	ip -> out		8029272	0					
ANR	8030299	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030300	Identifier	ip		8029272	0					
ANR	8030301	Identifier	out		8029272	1					
ANR	8030302	Argument	"""Gray"""		8029272	1					
ANR	8030303	PrimaryExpression	"""Gray"""		8029272	0					
ANR	8030304	BreakStatement	break ;	266:40:8370:8375	8029272	2	True				
ANR	8030305	Label	case pcl_RGB :	267:6:8383:8395	8029272	3	True				
ANR	8030306	Identifier	pcl_RGB		8029272	0					
ANR	8030307	ExpressionStatement	"ll += fprintf ( ip -> out , ""RGB"" )"	268:8:8405:8434	8029272	4	True				
ANR	8030308	AssignmentExpression	"ll += fprintf ( ip -> out , ""RGB"" )"		8029272	0		+=			
ANR	8030309	Identifier	ll		8029272	0					
ANR	8030310	CallExpression	"fprintf ( ip -> out , ""RGB"" )"		8029272	1					
ANR	8030311	Callee	fprintf		8029272	0					
ANR	8030312	Identifier	fprintf		8029272	0					
ANR	8030313	ArgumentList	ip -> out		8029272	1					
ANR	8030314	Argument	ip -> out		8029272	0					
ANR	8030315	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030316	Identifier	ip		8029272	0					
ANR	8030317	Identifier	out		8029272	1					
ANR	8030318	Argument	"""RGB"""		8029272	1					
ANR	8030319	PrimaryExpression	"""RGB"""		8029272	0					
ANR	8030320	BreakStatement	break ;	268:39:8436:8441	8029272	5	True				
ANR	8030321	Label	case pcl_CMY :	269:6:8449:8461	8029272	6	True				
ANR	8030322	Identifier	pcl_CMY		8029272	0					
ANR	8030323	ExpressionStatement	"ll += fprintf ( ip -> out , ""CMY"" )"	270:8:8471:8500	8029272	7	True				
ANR	8030324	AssignmentExpression	"ll += fprintf ( ip -> out , ""CMY"" )"		8029272	0		+=			
ANR	8030325	Identifier	ll		8029272	0					
ANR	8030326	CallExpression	"fprintf ( ip -> out , ""CMY"" )"		8029272	1					
ANR	8030327	Callee	fprintf		8029272	0					
ANR	8030328	Identifier	fprintf		8029272	0					
ANR	8030329	ArgumentList	ip -> out		8029272	1					
ANR	8030330	Argument	ip -> out		8029272	0					
ANR	8030331	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030332	Identifier	ip		8029272	0					
ANR	8030333	Identifier	out		8029272	1					
ANR	8030334	Argument	"""CMY"""		8029272	1					
ANR	8030335	PrimaryExpression	"""CMY"""		8029272	0					
ANR	8030336	BreakStatement	break ;	270:39:8502:8507	8029272	8	True				
ANR	8030337	Label	case pcl_CMYK :	271:6:8515:8528	8029272	9	True				
ANR	8030338	Identifier	pcl_CMYK		8029272	0					
ANR	8030339	IfStatement	if ( ip -> seen_new_quality || ip -> seen_CRD )		8029272	10					
ANR	8030340	Condition	ip -> seen_new_quality || ip -> seen_CRD	272:12:8542:8577	8029272	0	True				
ANR	8030341	OrExpression	ip -> seen_new_quality || ip -> seen_CRD		8029272	0		||			
ANR	8030342	PtrMemberAccess	ip -> seen_new_quality		8029272	0					
ANR	8030343	Identifier	ip		8029272	0					
ANR	8030344	Identifier	seen_new_quality		8029272	1					
ANR	8030345	PtrMemberAccess	ip -> seen_CRD		8029272	1					
ANR	8030346	Identifier	ip		8029272	0					
ANR	8030347	Identifier	seen_CRD		8029272	1					
ANR	8030348	ExpressionStatement	"ll += fprintf ( ip -> out , ""CMYK"" )"	273:10:8602:8632	8029272	1	True				
ANR	8030349	AssignmentExpression	"ll += fprintf ( ip -> out , ""CMYK"" )"		8029272	0		+=			
ANR	8030350	Identifier	ll		8029272	0					
ANR	8030351	CallExpression	"fprintf ( ip -> out , ""CMYK"" )"		8029272	1					
ANR	8030352	Callee	fprintf		8029272	0					
ANR	8030353	Identifier	fprintf		8029272	0					
ANR	8030354	ArgumentList	ip -> out		8029272	1					
ANR	8030355	Argument	ip -> out		8029272	0					
ANR	8030356	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030357	Identifier	ip		8029272	0					
ANR	8030358	Identifier	out		8029272	1					
ANR	8030359	Argument	"""CMYK"""		8029272	1					
ANR	8030360	PrimaryExpression	"""CMYK"""		8029272	0					
ANR	8030361	ElseStatement	else		8029272	0					
ANR	8030362	ExpressionStatement	"ll += fprintf ( ip -> out , ""CMY+K"" )"	275:10:8657:8688	8029272	0	True				
ANR	8030363	AssignmentExpression	"ll += fprintf ( ip -> out , ""CMY+K"" )"		8029272	0		+=			
ANR	8030364	Identifier	ll		8029272	0					
ANR	8030365	CallExpression	"fprintf ( ip -> out , ""CMY+K"" )"		8029272	1					
ANR	8030366	Callee	fprintf		8029272	0					
ANR	8030367	Identifier	fprintf		8029272	0					
ANR	8030368	ArgumentList	ip -> out		8029272	1					
ANR	8030369	Argument	ip -> out		8029272	0					
ANR	8030370	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030371	Identifier	ip		8029272	0					
ANR	8030372	Identifier	out		8029272	1					
ANR	8030373	Argument	"""CMY+K"""		8029272	1					
ANR	8030374	PrimaryExpression	"""CMY+K"""		8029272	0					
ANR	8030375	BreakStatement	break ;	276:8:8698:8703	8029272	11	True				
ANR	8030376	Label	default :	277:6:8711:8718	8029272	12	True				
ANR	8030377	Identifier	default		8029272	0					
ANR	8030378	ExpressionStatement	assert ( 0 )	278:8:8728:8737	8029272	13	True				
ANR	8030379	CallExpression	assert ( 0 )		8029272	0					
ANR	8030380	Callee	assert		8029272	0					
ANR	8030381	Identifier	assert		8029272	0					
ANR	8030382	ArgumentList	0		8029272	1					
ANR	8030383	Argument	0		8029272	0					
ANR	8030384	PrimaryExpression	0		8029272	0					
ANR	8030385	IfStatement	if ( ip -> fdata . palette == pcl_CMY )		8029272	51					
ANR	8030386	Condition	ip -> fdata . palette == pcl_CMY	283:6:8797:8824	8029272	0	True				
ANR	8030387	EqualityExpression	ip -> fdata . palette == pcl_CMY		8029272	0		==			
ANR	8030388	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8030389	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030390	Identifier	ip		8029272	0					
ANR	8030391	Identifier	fdata		8029272	1					
ANR	8030392	Identifier	palette		8029272	1					
ANR	8030393	Identifier	pcl_CMY		8029272	1					
ANR	8030394	CompoundStatement		149:36:5289:5289	8029272	1					
ANR	8030395	IfStatement	if ( non_black_levels > 2 )		8029272	0					
ANR	8030396	Condition	non_black_levels > 2	284:8:8837:8856	8029272	0	True				
ANR	8030397	RelationalExpression	non_black_levels > 2		8029272	0		>			
ANR	8030398	Identifier	non_black_levels		8029272	0					
ANR	8030399	PrimaryExpression	2		8029272	1					
ANR	8030400	CompoundStatement		150:30:5321:5321	8029272	1					
ANR	8030401	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dCMYLevels="" ) + 2 )"	285:6:8867:8926	8029272	0	True				
ANR	8030402	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dCMYLevels="" ) + 2 )"		8029272	0					
ANR	8030403	Callee	check_line_length		8029272	0					
ANR	8030404	Identifier	check_line_length		8029272	0					
ANR	8030405	ArgumentList	ip -> out		8029272	1					
ANR	8030406	Argument	ip -> out		8029272	0					
ANR	8030407	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030408	Identifier	ip		8029272	0					
ANR	8030409	Identifier	out		8029272	1					
ANR	8030410	Argument	& ll		8029272	1					
ANR	8030411	UnaryOperationExpression	& ll		8029272	0					
ANR	8030412	UnaryOperator	&		8029272	0					
ANR	8030413	Identifier	ll		8029272	1					
ANR	8030414	Argument	"sizeof ( ""-dCMYLevels="" ) + 2"		8029272	2					
ANR	8030415	AdditiveExpression	"sizeof ( ""-dCMYLevels="" ) + 2"		8029272	0		+			
ANR	8030416	SizeofExpression	"sizeof ( ""-dCMYLevels="" )"		8029272	0					
ANR	8030417	Sizeof	sizeof		8029272	0					
ANR	8030418	PrimaryExpression	"""-dCMYLevels="""		8029272	1					
ANR	8030419	PrimaryExpression	2		8029272	1					
ANR	8030420	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dCMYLevels=%d"" , non_black_levels )"	286:6:8934:8993	8029272	1	True				
ANR	8030421	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dCMYLevels=%d"" , non_black_levels )"		8029272	0		+=			
ANR	8030422	Identifier	ll		8029272	0					
ANR	8030423	CallExpression	"fprintf ( ip -> out , "" -dCMYLevels=%d"" , non_black_levels )"		8029272	1					
ANR	8030424	Callee	fprintf		8029272	0					
ANR	8030425	Identifier	fprintf		8029272	0					
ANR	8030426	ArgumentList	ip -> out		8029272	1					
ANR	8030427	Argument	ip -> out		8029272	0					
ANR	8030428	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030429	Identifier	ip		8029272	0					
ANR	8030430	Identifier	out		8029272	1					
ANR	8030431	Argument	""" -dCMYLevels=%d"""		8029272	1					
ANR	8030432	PrimaryExpression	""" -dCMYLevels=%d"""		8029272	0					
ANR	8030433	Argument	non_black_levels		8029272	2					
ANR	8030434	Identifier	non_black_levels		8029272	0					
ANR	8030435	ElseStatement	else		8029272	0					
ANR	8030436	CompoundStatement		155:7:5474:5474	8029272	0					
ANR	8030437	IfStatement	if ( black_levels > 2 )		8029272	0					
ANR	8030438	Condition	black_levels > 2	290:8:9022:9037	8029272	0	True				
ANR	8030439	RelationalExpression	black_levels > 2		8029272	0		>			
ANR	8030440	Identifier	black_levels		8029272	0					
ANR	8030441	PrimaryExpression	2		8029272	1					
ANR	8030442	CompoundStatement		156:26:5502:5502	8029272	1					
ANR	8030443	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dBlackLevels="" ) + 2 )"	291:6:9048:9109	8029272	0	True				
ANR	8030444	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dBlackLevels="" ) + 2 )"		8029272	0					
ANR	8030445	Callee	check_line_length		8029272	0					
ANR	8030446	Identifier	check_line_length		8029272	0					
ANR	8030447	ArgumentList	ip -> out		8029272	1					
ANR	8030448	Argument	ip -> out		8029272	0					
ANR	8030449	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030450	Identifier	ip		8029272	0					
ANR	8030451	Identifier	out		8029272	1					
ANR	8030452	Argument	& ll		8029272	1					
ANR	8030453	UnaryOperationExpression	& ll		8029272	0					
ANR	8030454	UnaryOperator	&		8029272	0					
ANR	8030455	Identifier	ll		8029272	1					
ANR	8030456	Argument	"sizeof ( ""-dBlackLevels="" ) + 2"		8029272	2					
ANR	8030457	AdditiveExpression	"sizeof ( ""-dBlackLevels="" ) + 2"		8029272	0		+			
ANR	8030458	SizeofExpression	"sizeof ( ""-dBlackLevels="" )"		8029272	0					
ANR	8030459	Sizeof	sizeof		8029272	0					
ANR	8030460	PrimaryExpression	"""-dBlackLevels="""		8029272	1					
ANR	8030461	PrimaryExpression	2		8029272	1					
ANR	8030462	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dBlackLevels=%d"" , black_levels )"	292:6:9117:9174	8029272	1	True				
ANR	8030463	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dBlackLevels=%d"" , black_levels )"		8029272	0		+=			
ANR	8030464	Identifier	ll		8029272	0					
ANR	8030465	CallExpression	"fprintf ( ip -> out , "" -dBlackLevels=%d"" , black_levels )"		8029272	1					
ANR	8030466	Callee	fprintf		8029272	0					
ANR	8030467	Identifier	fprintf		8029272	0					
ANR	8030468	ArgumentList	ip -> out		8029272	1					
ANR	8030469	Argument	ip -> out		8029272	0					
ANR	8030470	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030471	Identifier	ip		8029272	0					
ANR	8030472	Identifier	out		8029272	1					
ANR	8030473	Argument	""" -dBlackLevels=%d"""		8029272	1					
ANR	8030474	PrimaryExpression	""" -dBlackLevels=%d"""		8029272	0					
ANR	8030475	Argument	black_levels		8029272	2					
ANR	8030476	Identifier	black_levels		8029272	0					
ANR	8030477	IfStatement	if ( ip -> fdata . palette == pcl_CMYK && non_black_levels > 2 )		8029272	1					
ANR	8030478	Condition	ip -> fdata . palette == pcl_CMYK && non_black_levels > 2	294:8:9190:9242	8029272	0	True				
ANR	8030479	AndExpression	ip -> fdata . palette == pcl_CMYK && non_black_levels > 2		8029272	0		&&			
ANR	8030480	EqualityExpression	ip -> fdata . palette == pcl_CMYK		8029272	0		==			
ANR	8030481	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8030482	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030483	Identifier	ip		8029272	0					
ANR	8030484	Identifier	fdata		8029272	1					
ANR	8030485	Identifier	palette		8029272	1					
ANR	8030486	Identifier	pcl_CMYK		8029272	1					
ANR	8030487	RelationalExpression	non_black_levels > 2		8029272	1		>			
ANR	8030488	Identifier	non_black_levels		8029272	0					
ANR	8030489	PrimaryExpression	2		8029272	1					
ANR	8030490	CompoundStatement		160:63:5707:5707	8029272	1					
ANR	8030491	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dCMYLevels="" ) + 2 )"	295:6:9253:9312	8029272	0	True				
ANR	8030492	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dCMYLevels="" ) + 2 )"		8029272	0					
ANR	8030493	Callee	check_line_length		8029272	0					
ANR	8030494	Identifier	check_line_length		8029272	0					
ANR	8030495	ArgumentList	ip -> out		8029272	1					
ANR	8030496	Argument	ip -> out		8029272	0					
ANR	8030497	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030498	Identifier	ip		8029272	0					
ANR	8030499	Identifier	out		8029272	1					
ANR	8030500	Argument	& ll		8029272	1					
ANR	8030501	UnaryOperationExpression	& ll		8029272	0					
ANR	8030502	UnaryOperator	&		8029272	0					
ANR	8030503	Identifier	ll		8029272	1					
ANR	8030504	Argument	"sizeof ( ""-dCMYLevels="" ) + 2"		8029272	2					
ANR	8030505	AdditiveExpression	"sizeof ( ""-dCMYLevels="" ) + 2"		8029272	0		+			
ANR	8030506	SizeofExpression	"sizeof ( ""-dCMYLevels="" )"		8029272	0					
ANR	8030507	Sizeof	sizeof		8029272	0					
ANR	8030508	PrimaryExpression	"""-dCMYLevels="""		8029272	1					
ANR	8030509	PrimaryExpression	2		8029272	1					
ANR	8030510	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dCMYLevels=%d"" , non_black_levels )"	296:6:9320:9379	8029272	1	True				
ANR	8030511	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dCMYLevels=%d"" , non_black_levels )"		8029272	0		+=			
ANR	8030512	Identifier	ll		8029272	0					
ANR	8030513	CallExpression	"fprintf ( ip -> out , "" -dCMYLevels=%d"" , non_black_levels )"		8029272	1					
ANR	8030514	Callee	fprintf		8029272	0					
ANR	8030515	Identifier	fprintf		8029272	0					
ANR	8030516	ArgumentList	ip -> out		8029272	1					
ANR	8030517	Argument	ip -> out		8029272	0					
ANR	8030518	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030519	Identifier	ip		8029272	0					
ANR	8030520	Identifier	out		8029272	1					
ANR	8030521	Argument	""" -dCMYLevels=%d"""		8029272	1					
ANR	8030522	PrimaryExpression	""" -dCMYLevels=%d"""		8029272	0					
ANR	8030523	Argument	non_black_levels		8029272	2					
ANR	8030524	Identifier	non_black_levels		8029272	0					
ANR	8030525	IfStatement	if ( ip -> seen_new_quality )		8029272	52					
ANR	8030526	Condition	ip -> seen_new_quality	301:6:9442:9461	8029272	0	True				
ANR	8030527	PtrMemberAccess	ip -> seen_new_quality		8029272	0					
ANR	8030528	Identifier	ip		8029272	0					
ANR	8030529	Identifier	seen_new_quality		8029272	1					
ANR	8030530	CompoundStatement		167:28:5926:5926	8029272	1					
ANR	8030531	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-sPrintQuality=presentation"" ) )"	302:4:9470:9540	8029272	0	True				
ANR	8030532	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-sPrintQuality=presentation"" ) )"		8029272	0					
ANR	8030533	Callee	check_line_length		8029272	0					
ANR	8030534	Identifier	check_line_length		8029272	0					
ANR	8030535	ArgumentList	ip -> out		8029272	1					
ANR	8030536	Argument	ip -> out		8029272	0					
ANR	8030537	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030538	Identifier	ip		8029272	0					
ANR	8030539	Identifier	out		8029272	1					
ANR	8030540	Argument	& ll		8029272	1					
ANR	8030541	UnaryOperationExpression	& ll		8029272	0					
ANR	8030542	UnaryOperator	&		8029272	0					
ANR	8030543	Identifier	ll		8029272	1					
ANR	8030544	Argument	"sizeof ( ""-sPrintQuality=presentation"" )"		8029272	2					
ANR	8030545	SizeofExpression	"sizeof ( ""-sPrintQuality=presentation"" )"		8029272	0					
ANR	8030546	Sizeof	sizeof		8029272	0					
ANR	8030547	PrimaryExpression	"""-sPrintQuality=presentation"""		8029272	1					
ANR	8030548	ExpressionStatement	"ll += fprintf ( ip -> out , "" -sPrintQuality="" )"	303:4:9546:9588	8029272	1	True				
ANR	8030549	AssignmentExpression	"ll += fprintf ( ip -> out , "" -sPrintQuality="" )"		8029272	0		+=			
ANR	8030550	Identifier	ll		8029272	0					
ANR	8030551	CallExpression	"fprintf ( ip -> out , "" -sPrintQuality="" )"		8029272	1					
ANR	8030552	Callee	fprintf		8029272	0					
ANR	8030553	Identifier	fprintf		8029272	0					
ANR	8030554	ArgumentList	ip -> out		8029272	1					
ANR	8030555	Argument	ip -> out		8029272	0					
ANR	8030556	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030557	Identifier	ip		8029272	0					
ANR	8030558	Identifier	out		8029272	1					
ANR	8030559	Argument	""" -sPrintQuality="""		8029272	1					
ANR	8030560	PrimaryExpression	""" -sPrintQuality="""		8029272	0					
ANR	8030561	SwitchStatement	switch ( ip -> fdata . print_quality )		8029272	2					
ANR	8030562	Condition	ip -> fdata . print_quality	304:12:9602:9624	8029272	0	True				
ANR	8030563	MemberAccess	ip -> fdata . print_quality		8029272	0					
ANR	8030564	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030565	Identifier	ip		8029272	0					
ANR	8030566	Identifier	fdata		8029272	1					
ANR	8030567	Identifier	print_quality		8029272	1					
ANR	8030568	CompoundStatement		170:37:6089:6089	8029272	1					
ANR	8030569	Statement	case	305:6:9635:9638	8029272	0	True				
ANR	8030570	Statement	-	305:11:9640:9640	8029272	1	True				
ANR	8030571	Label	1 :	305:12:9641:9642	8029272	2	True				
ANR	8030572	ExpressionStatement	"ll += fprintf ( ip -> out , ""draft"" )"	306:8:9652:9683	8029272	3	True				
ANR	8030573	AssignmentExpression	"ll += fprintf ( ip -> out , ""draft"" )"		8029272	0		+=			
ANR	8030574	Identifier	ll		8029272	0					
ANR	8030575	CallExpression	"fprintf ( ip -> out , ""draft"" )"		8029272	1					
ANR	8030576	Callee	fprintf		8029272	0					
ANR	8030577	Identifier	fprintf		8029272	0					
ANR	8030578	ArgumentList	ip -> out		8029272	1					
ANR	8030579	Argument	ip -> out		8029272	0					
ANR	8030580	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030581	Identifier	ip		8029272	0					
ANR	8030582	Identifier	out		8029272	1					
ANR	8030583	Argument	"""draft"""		8029272	1					
ANR	8030584	PrimaryExpression	"""draft"""		8029272	0					
ANR	8030585	BreakStatement	break ;	306:41:9685:9690	8029272	4	True				
ANR	8030586	Label	case 0 :	307:6:9698:9704	8029272	5	True				
ANR	8030587	ExpressionStatement	"ll += fprintf ( ip -> out , ""normal"" )"	308:8:9714:9746	8029272	6	True				
ANR	8030588	AssignmentExpression	"ll += fprintf ( ip -> out , ""normal"" )"		8029272	0		+=			
ANR	8030589	Identifier	ll		8029272	0					
ANR	8030590	CallExpression	"fprintf ( ip -> out , ""normal"" )"		8029272	1					
ANR	8030591	Callee	fprintf		8029272	0					
ANR	8030592	Identifier	fprintf		8029272	0					
ANR	8030593	ArgumentList	ip -> out		8029272	1					
ANR	8030594	Argument	ip -> out		8029272	0					
ANR	8030595	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030596	Identifier	ip		8029272	0					
ANR	8030597	Identifier	out		8029272	1					
ANR	8030598	Argument	"""normal"""		8029272	1					
ANR	8030599	PrimaryExpression	"""normal"""		8029272	0					
ANR	8030600	BreakStatement	break ;	308:42:9748:9753	8029272	7	True				
ANR	8030601	Label	case 1 :	309:6:9761:9767	8029272	8	True				
ANR	8030602	ExpressionStatement	"ll += fprintf ( ip -> out , ""presentation"" )"	310:8:9777:9815	8029272	9	True				
ANR	8030603	AssignmentExpression	"ll += fprintf ( ip -> out , ""presentation"" )"		8029272	0		+=			
ANR	8030604	Identifier	ll		8029272	0					
ANR	8030605	CallExpression	"fprintf ( ip -> out , ""presentation"" )"		8029272	1					
ANR	8030606	Callee	fprintf		8029272	0					
ANR	8030607	Identifier	fprintf		8029272	0					
ANR	8030608	ArgumentList	ip -> out		8029272	1					
ANR	8030609	Argument	ip -> out		8029272	0					
ANR	8030610	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030611	Identifier	ip		8029272	0					
ANR	8030612	Identifier	out		8029272	1					
ANR	8030613	Argument	"""presentation"""		8029272	1					
ANR	8030614	PrimaryExpression	"""presentation"""		8029272	0					
ANR	8030615	BreakStatement	break ;	310:48:9817:9822	8029272	10	True				
ANR	8030616	Label	default :	311:6:9830:9837	8029272	11	True				
ANR	8030617	Identifier	default		8029272	0					
ANR	8030618	ExpressionStatement	"ll += fprintf ( ip -> out , ""%d"" , ip -> fdata . print_quality )"	312:8:9847:9900	8029272	12	True				
ANR	8030619	AssignmentExpression	"ll += fprintf ( ip -> out , ""%d"" , ip -> fdata . print_quality )"		8029272	0		+=			
ANR	8030620	Identifier	ll		8029272	0					
ANR	8030621	CallExpression	"fprintf ( ip -> out , ""%d"" , ip -> fdata . print_quality )"		8029272	1					
ANR	8030622	Callee	fprintf		8029272	0					
ANR	8030623	Identifier	fprintf		8029272	0					
ANR	8030624	ArgumentList	ip -> out		8029272	1					
ANR	8030625	Argument	ip -> out		8029272	0					
ANR	8030626	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030627	Identifier	ip		8029272	0					
ANR	8030628	Identifier	out		8029272	1					
ANR	8030629	Argument	"""%d"""		8029272	1					
ANR	8030630	PrimaryExpression	"""%d"""		8029272	0					
ANR	8030631	Argument	ip -> fdata . print_quality		8029272	2					
ANR	8030632	MemberAccess	ip -> fdata . print_quality		8029272	0					
ANR	8030633	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030634	Identifier	ip		8029272	0					
ANR	8030635	Identifier	fdata		8029272	1					
ANR	8030636	Identifier	print_quality		8029272	1					
ANR	8030637	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-sMedium='quick dry transparency'"" ) )"	315:4:9913:9995	8029272	3	True				
ANR	8030638	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-sMedium='quick dry transparency'"" ) )"		8029272	0					
ANR	8030639	Callee	check_line_length		8029272	0					
ANR	8030640	Identifier	check_line_length		8029272	0					
ANR	8030641	ArgumentList	ip -> out		8029272	1					
ANR	8030642	Argument	ip -> out		8029272	0					
ANR	8030643	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030644	Identifier	ip		8029272	0					
ANR	8030645	Identifier	out		8029272	1					
ANR	8030646	Argument	& ll		8029272	1					
ANR	8030647	UnaryOperationExpression	& ll		8029272	0					
ANR	8030648	UnaryOperator	&		8029272	0					
ANR	8030649	Identifier	ll		8029272	1					
ANR	8030650	Argument	"sizeof ( ""-sMedium='quick dry transparency'"" )"		8029272	2					
ANR	8030651	SizeofExpression	"sizeof ( ""-sMedium='quick dry transparency'"" )"		8029272	0					
ANR	8030652	Sizeof	sizeof		8029272	0					
ANR	8030653	PrimaryExpression	"""-sMedium='quick dry transparency'"""		8029272	1					
ANR	8030654	ExpressionStatement	"ll += fprintf ( ip -> out , "" -sMedium="" )"	317:4:10001:10037	8029272	4	True				
ANR	8030655	AssignmentExpression	"ll += fprintf ( ip -> out , "" -sMedium="" )"		8029272	0		+=			
ANR	8030656	Identifier	ll		8029272	0					
ANR	8030657	CallExpression	"fprintf ( ip -> out , "" -sMedium="" )"		8029272	1					
ANR	8030658	Callee	fprintf		8029272	0					
ANR	8030659	Identifier	fprintf		8029272	0					
ANR	8030660	ArgumentList	ip -> out		8029272	1					
ANR	8030661	Argument	ip -> out		8029272	0					
ANR	8030662	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030663	Identifier	ip		8029272	0					
ANR	8030664	Identifier	out		8029272	1					
ANR	8030665	Argument	""" -sMedium="""		8029272	1					
ANR	8030666	PrimaryExpression	""" -sMedium="""		8029272	0					
ANR	8030667	SwitchStatement	switch ( ip -> fdata . media_type )		8029272	5					
ANR	8030668	Condition	ip -> fdata . media_type	318:12:10051:10070	8029272	0	True				
ANR	8030669	MemberAccess	ip -> fdata . media_type		8029272	0					
ANR	8030670	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030671	Identifier	ip		8029272	0					
ANR	8030672	Identifier	fdata		8029272	1					
ANR	8030673	Identifier	media_type		8029272	1					
ANR	8030674	CompoundStatement		184:34:6535:6535	8029272	1					
ANR	8030675	Label	case 0 :	319:6:10081:10087	8029272	0	True				
ANR	8030676	ExpressionStatement	"ll += fprintf ( ip -> out , ""plain"" )"	320:8:10097:10128	8029272	1	True				
ANR	8030677	AssignmentExpression	"ll += fprintf ( ip -> out , ""plain"" )"		8029272	0		+=			
ANR	8030678	Identifier	ll		8029272	0					
ANR	8030679	CallExpression	"fprintf ( ip -> out , ""plain"" )"		8029272	1					
ANR	8030680	Callee	fprintf		8029272	0					
ANR	8030681	Identifier	fprintf		8029272	0					
ANR	8030682	ArgumentList	ip -> out		8029272	1					
ANR	8030683	Argument	ip -> out		8029272	0					
ANR	8030684	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030685	Identifier	ip		8029272	0					
ANR	8030686	Identifier	out		8029272	1					
ANR	8030687	Argument	"""plain"""		8029272	1					
ANR	8030688	PrimaryExpression	"""plain"""		8029272	0					
ANR	8030689	BreakStatement	break ;	320:41:10130:10135	8029272	2	True				
ANR	8030690	Label	case 1 :	321:6:10143:10149	8029272	3	True				
ANR	8030691	ExpressionStatement	"ll += fprintf ( ip -> out , ""bond"" )"	322:8:10159:10189	8029272	4	True				
ANR	8030692	AssignmentExpression	"ll += fprintf ( ip -> out , ""bond"" )"		8029272	0		+=			
ANR	8030693	Identifier	ll		8029272	0					
ANR	8030694	CallExpression	"fprintf ( ip -> out , ""bond"" )"		8029272	1					
ANR	8030695	Callee	fprintf		8029272	0					
ANR	8030696	Identifier	fprintf		8029272	0					
ANR	8030697	ArgumentList	ip -> out		8029272	1					
ANR	8030698	Argument	ip -> out		8029272	0					
ANR	8030699	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030700	Identifier	ip		8029272	0					
ANR	8030701	Identifier	out		8029272	1					
ANR	8030702	Argument	"""bond"""		8029272	1					
ANR	8030703	PrimaryExpression	"""bond"""		8029272	0					
ANR	8030704	BreakStatement	break ;	322:40:10191:10196	8029272	5	True				
ANR	8030705	Label	case 2 :	323:6:10204:10210	8029272	6	True				
ANR	8030706	ExpressionStatement	"ll += fprintf ( ip -> out , ""Premium"" )"	324:8:10220:10253	8029272	7	True				
ANR	8030707	AssignmentExpression	"ll += fprintf ( ip -> out , ""Premium"" )"		8029272	0		+=			
ANR	8030708	Identifier	ll		8029272	0					
ANR	8030709	CallExpression	"fprintf ( ip -> out , ""Premium"" )"		8029272	1					
ANR	8030710	Callee	fprintf		8029272	0					
ANR	8030711	Identifier	fprintf		8029272	0					
ANR	8030712	ArgumentList	ip -> out		8029272	1					
ANR	8030713	Argument	ip -> out		8029272	0					
ANR	8030714	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030715	Identifier	ip		8029272	0					
ANR	8030716	Identifier	out		8029272	1					
ANR	8030717	Argument	"""Premium"""		8029272	1					
ANR	8030718	PrimaryExpression	"""Premium"""		8029272	0					
ANR	8030719	BreakStatement	break ;	324:43:10255:10260	8029272	8	True				
ANR	8030720	Label	case 3 :	325:6:10268:10274	8029272	9	True				
ANR	8030721	ExpressionStatement	"ll += fprintf ( ip -> out , ""glossy"" )"	326:8:10284:10316	8029272	10	True				
ANR	8030722	AssignmentExpression	"ll += fprintf ( ip -> out , ""glossy"" )"		8029272	0		+=			
ANR	8030723	Identifier	ll		8029272	0					
ANR	8030724	CallExpression	"fprintf ( ip -> out , ""glossy"" )"		8029272	1					
ANR	8030725	Callee	fprintf		8029272	0					
ANR	8030726	Identifier	fprintf		8029272	0					
ANR	8030727	ArgumentList	ip -> out		8029272	1					
ANR	8030728	Argument	ip -> out		8029272	0					
ANR	8030729	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030730	Identifier	ip		8029272	0					
ANR	8030731	Identifier	out		8029272	1					
ANR	8030732	Argument	"""glossy"""		8029272	1					
ANR	8030733	PrimaryExpression	"""glossy"""		8029272	0					
ANR	8030734	BreakStatement	break ;	326:42:10318:10323	8029272	11	True				
ANR	8030735	Label	case 4 :	327:6:10331:10337	8029272	12	True				
ANR	8030736	ExpressionStatement	"ll += fprintf ( ip -> out , ""transparency"" )"	328:8:10347:10385	8029272	13	True				
ANR	8030737	AssignmentExpression	"ll += fprintf ( ip -> out , ""transparency"" )"		8029272	0		+=			
ANR	8030738	Identifier	ll		8029272	0					
ANR	8030739	CallExpression	"fprintf ( ip -> out , ""transparency"" )"		8029272	1					
ANR	8030740	Callee	fprintf		8029272	0					
ANR	8030741	Identifier	fprintf		8029272	0					
ANR	8030742	ArgumentList	ip -> out		8029272	1					
ANR	8030743	Argument	ip -> out		8029272	0					
ANR	8030744	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030745	Identifier	ip		8029272	0					
ANR	8030746	Identifier	out		8029272	1					
ANR	8030747	Argument	"""transparency"""		8029272	1					
ANR	8030748	PrimaryExpression	"""transparency"""		8029272	0					
ANR	8030749	BreakStatement	break ;	328:48:10387:10392	8029272	14	True				
ANR	8030750	Label	case 5 :	329:6:10400:10406	8029272	15	True				
ANR	8030751	ExpressionStatement	"ll += fprintf ( ip -> out , ""'quick dry glossy'"" )"	330:8:10416:10460	8029272	16	True				
ANR	8030752	AssignmentExpression	"ll += fprintf ( ip -> out , ""'quick dry glossy'"" )"		8029272	0		+=			
ANR	8030753	Identifier	ll		8029272	0					
ANR	8030754	CallExpression	"fprintf ( ip -> out , ""'quick dry glossy'"" )"		8029272	1					
ANR	8030755	Callee	fprintf		8029272	0					
ANR	8030756	Identifier	fprintf		8029272	0					
ANR	8030757	ArgumentList	ip -> out		8029272	1					
ANR	8030758	Argument	ip -> out		8029272	0					
ANR	8030759	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030760	Identifier	ip		8029272	0					
ANR	8030761	Identifier	out		8029272	1					
ANR	8030762	Argument	"""'quick dry glossy'"""		8029272	1					
ANR	8030763	PrimaryExpression	"""'quick dry glossy'"""		8029272	0					
ANR	8030764	BreakStatement	break ;	330:54:10462:10467	8029272	17	True				
ANR	8030765	Label	case 6 :	331:6:10475:10481	8029272	18	True				
ANR	8030766	ExpressionStatement	"ll += fprintf ( ip -> out , ""'quick dry transparency'"" )"	332:8:10491:10541	8029272	19	True				
ANR	8030767	AssignmentExpression	"ll += fprintf ( ip -> out , ""'quick dry transparency'"" )"		8029272	0		+=			
ANR	8030768	Identifier	ll		8029272	0					
ANR	8030769	CallExpression	"fprintf ( ip -> out , ""'quick dry transparency'"" )"		8029272	1					
ANR	8030770	Callee	fprintf		8029272	0					
ANR	8030771	Identifier	fprintf		8029272	0					
ANR	8030772	ArgumentList	ip -> out		8029272	1					
ANR	8030773	Argument	ip -> out		8029272	0					
ANR	8030774	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030775	Identifier	ip		8029272	0					
ANR	8030776	Identifier	out		8029272	1					
ANR	8030777	Argument	"""'quick dry transparency'"""		8029272	1					
ANR	8030778	PrimaryExpression	"""'quick dry transparency'"""		8029272	0					
ANR	8030779	BreakStatement	break ;	332:60:10543:10548	8029272	20	True				
ANR	8030780	Label	default :	333:6:10556:10563	8029272	21	True				
ANR	8030781	Identifier	default		8029272	0					
ANR	8030782	ExpressionStatement	"ll += fprintf ( ip -> out , ""%d"" , ip -> fdata . media_type )"	334:8:10573:10623	8029272	22	True				
ANR	8030783	AssignmentExpression	"ll += fprintf ( ip -> out , ""%d"" , ip -> fdata . media_type )"		8029272	0		+=			
ANR	8030784	Identifier	ll		8029272	0					
ANR	8030785	CallExpression	"fprintf ( ip -> out , ""%d"" , ip -> fdata . media_type )"		8029272	1					
ANR	8030786	Callee	fprintf		8029272	0					
ANR	8030787	Identifier	fprintf		8029272	0					
ANR	8030788	ArgumentList	ip -> out		8029272	1					
ANR	8030789	Argument	ip -> out		8029272	0					
ANR	8030790	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030791	Identifier	ip		8029272	0					
ANR	8030792	Identifier	out		8029272	1					
ANR	8030793	Argument	"""%d"""		8029272	1					
ANR	8030794	PrimaryExpression	"""%d"""		8029272	0					
ANR	8030795	Argument	ip -> fdata . media_type		8029272	2					
ANR	8030796	MemberAccess	ip -> fdata . media_type		8029272	0					
ANR	8030797	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030798	Identifier	ip		8029272	0					
ANR	8030799	Identifier	fdata		8029272	1					
ANR	8030800	Identifier	media_type		8029272	1					
ANR	8030801	ElseStatement	else		8029272	0					
ANR	8030802	IfStatement	if ( ip -> seen_old_quality )		8029272	0					
ANR	8030803	Condition	ip -> seen_old_quality	337:11:10646:10665	8029272	0	True				
ANR	8030804	PtrMemberAccess	ip -> seen_old_quality		8029272	0					
ANR	8030805	Identifier	ip		8029272	0					
ANR	8030806	Identifier	seen_old_quality		8029272	1					
ANR	8030807	CompoundStatement		203:33:7130:7130	8029272	1					
ANR	8030808	IfStatement	if ( ip -> fdata . depletion != 0 )		8029272	0					
ANR	8030809	Condition	ip -> fdata . depletion != 0	338:8:10678:10701	8029272	0	True				
ANR	8030810	EqualityExpression	ip -> fdata . depletion != 0		8029272	0		!=			
ANR	8030811	MemberAccess	ip -> fdata . depletion		8029272	0					
ANR	8030812	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030813	Identifier	ip		8029272	0					
ANR	8030814	Identifier	fdata		8029272	1					
ANR	8030815	Identifier	depletion		8029272	1					
ANR	8030816	PrimaryExpression	0		8029272	1					
ANR	8030817	CompoundStatement		204:34:7166:7166	8029272	1					
ANR	8030818	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dDepletion="" ) + 2 )"	339:6:10712:10771	8029272	0	True				
ANR	8030819	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dDepletion="" ) + 2 )"		8029272	0					
ANR	8030820	Callee	check_line_length		8029272	0					
ANR	8030821	Identifier	check_line_length		8029272	0					
ANR	8030822	ArgumentList	ip -> out		8029272	1					
ANR	8030823	Argument	ip -> out		8029272	0					
ANR	8030824	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030825	Identifier	ip		8029272	0					
ANR	8030826	Identifier	out		8029272	1					
ANR	8030827	Argument	& ll		8029272	1					
ANR	8030828	UnaryOperationExpression	& ll		8029272	0					
ANR	8030829	UnaryOperator	&		8029272	0					
ANR	8030830	Identifier	ll		8029272	1					
ANR	8030831	Argument	"sizeof ( ""-dDepletion="" ) + 2"		8029272	2					
ANR	8030832	AdditiveExpression	"sizeof ( ""-dDepletion="" ) + 2"		8029272	0		+			
ANR	8030833	SizeofExpression	"sizeof ( ""-dDepletion="" )"		8029272	0					
ANR	8030834	Sizeof	sizeof		8029272	0					
ANR	8030835	PrimaryExpression	"""-dDepletion="""		8029272	1					
ANR	8030836	PrimaryExpression	2		8029272	1					
ANR	8030837	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dDepletion=%d"" , ip -> fdata . depletion )"	340:6:10779:10841	8029272	1	True				
ANR	8030838	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dDepletion=%d"" , ip -> fdata . depletion )"		8029272	0		+=			
ANR	8030839	Identifier	ll		8029272	0					
ANR	8030840	CallExpression	"fprintf ( ip -> out , "" -dDepletion=%d"" , ip -> fdata . depletion )"		8029272	1					
ANR	8030841	Callee	fprintf		8029272	0					
ANR	8030842	Identifier	fprintf		8029272	0					
ANR	8030843	ArgumentList	ip -> out		8029272	1					
ANR	8030844	Argument	ip -> out		8029272	0					
ANR	8030845	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030846	Identifier	ip		8029272	0					
ANR	8030847	Identifier	out		8029272	1					
ANR	8030848	Argument	""" -dDepletion=%d"""		8029272	1					
ANR	8030849	PrimaryExpression	""" -dDepletion=%d"""		8029272	0					
ANR	8030850	Argument	ip -> fdata . depletion		8029272	2					
ANR	8030851	MemberAccess	ip -> fdata . depletion		8029272	0					
ANR	8030852	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030853	Identifier	ip		8029272	0					
ANR	8030854	Identifier	fdata		8029272	1					
ANR	8030855	Identifier	depletion		8029272	1					
ANR	8030856	IfStatement	if ( ip -> fdata . shingling != - 1 )		8029272	1					
ANR	8030857	Condition	ip -> fdata . shingling != - 1	342:8:10857:10881	8029272	0	True				
ANR	8030858	EqualityExpression	ip -> fdata . shingling != - 1		8029272	0		!=			
ANR	8030859	MemberAccess	ip -> fdata . shingling		8029272	0					
ANR	8030860	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030861	Identifier	ip		8029272	0					
ANR	8030862	Identifier	fdata		8029272	1					
ANR	8030863	Identifier	shingling		8029272	1					
ANR	8030864	UnaryOperationExpression	- 1		8029272	1					
ANR	8030865	UnaryOperator	-		8029272	0					
ANR	8030866	PrimaryExpression	1		8029272	1					
ANR	8030867	CompoundStatement		208:35:7346:7346	8029272	1					
ANR	8030868	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dShingling="" ) + 2 )"	343:6:10892:10951	8029272	0	True				
ANR	8030869	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dShingling="" ) + 2 )"		8029272	0					
ANR	8030870	Callee	check_line_length		8029272	0					
ANR	8030871	Identifier	check_line_length		8029272	0					
ANR	8030872	ArgumentList	ip -> out		8029272	1					
ANR	8030873	Argument	ip -> out		8029272	0					
ANR	8030874	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030875	Identifier	ip		8029272	0					
ANR	8030876	Identifier	out		8029272	1					
ANR	8030877	Argument	& ll		8029272	1					
ANR	8030878	UnaryOperationExpression	& ll		8029272	0					
ANR	8030879	UnaryOperator	&		8029272	0					
ANR	8030880	Identifier	ll		8029272	1					
ANR	8030881	Argument	"sizeof ( ""-dShingling="" ) + 2"		8029272	2					
ANR	8030882	AdditiveExpression	"sizeof ( ""-dShingling="" ) + 2"		8029272	0		+			
ANR	8030883	SizeofExpression	"sizeof ( ""-dShingling="" )"		8029272	0					
ANR	8030884	Sizeof	sizeof		8029272	0					
ANR	8030885	PrimaryExpression	"""-dShingling="""		8029272	1					
ANR	8030886	PrimaryExpression	2		8029272	1					
ANR	8030887	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dShingling=%d"" , ip -> fdata . shingling )"	344:6:10959:11021	8029272	1	True				
ANR	8030888	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dShingling=%d"" , ip -> fdata . shingling )"		8029272	0		+=			
ANR	8030889	Identifier	ll		8029272	0					
ANR	8030890	CallExpression	"fprintf ( ip -> out , "" -dShingling=%d"" , ip -> fdata . shingling )"		8029272	1					
ANR	8030891	Callee	fprintf		8029272	0					
ANR	8030892	Identifier	fprintf		8029272	0					
ANR	8030893	ArgumentList	ip -> out		8029272	1					
ANR	8030894	Argument	ip -> out		8029272	0					
ANR	8030895	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030896	Identifier	ip		8029272	0					
ANR	8030897	Identifier	out		8029272	1					
ANR	8030898	Argument	""" -dShingling=%d"""		8029272	1					
ANR	8030899	PrimaryExpression	""" -dShingling=%d"""		8029272	0					
ANR	8030900	Argument	ip -> fdata . shingling		8029272	2					
ANR	8030901	MemberAccess	ip -> fdata . shingling		8029272	0					
ANR	8030902	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030903	Identifier	ip		8029272	0					
ANR	8030904	Identifier	fdata		8029272	1					
ANR	8030905	Identifier	shingling		8029272	1					
ANR	8030906	IfStatement	if ( ip -> fdata . raster_graphics_quality != - 1 )		8029272	2					
ANR	8030907	Condition	ip -> fdata . raster_graphics_quality != - 1	346:8:11037:11075	8029272	0	True				
ANR	8030908	EqualityExpression	ip -> fdata . raster_graphics_quality != - 1		8029272	0		!=			
ANR	8030909	MemberAccess	ip -> fdata . raster_graphics_quality		8029272	0					
ANR	8030910	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030911	Identifier	ip		8029272	0					
ANR	8030912	Identifier	fdata		8029272	1					
ANR	8030913	Identifier	raster_graphics_quality		8029272	1					
ANR	8030914	UnaryOperationExpression	- 1		8029272	1					
ANR	8030915	UnaryOperator	-		8029272	0					
ANR	8030916	PrimaryExpression	1		8029272	1					
ANR	8030917	CompoundStatement		212:49:7540:7540	8029272	1					
ANR	8030918	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dRasterGraphicsQuality="" ) + 2 )"	347:6:11086:11165	8029272	0	True				
ANR	8030919	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dRasterGraphicsQuality="" ) + 2 )"		8029272	0					
ANR	8030920	Callee	check_line_length		8029272	0					
ANR	8030921	Identifier	check_line_length		8029272	0					
ANR	8030922	ArgumentList	ip -> out		8029272	1					
ANR	8030923	Argument	ip -> out		8029272	0					
ANR	8030924	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030925	Identifier	ip		8029272	0					
ANR	8030926	Identifier	out		8029272	1					
ANR	8030927	Argument	& ll		8029272	1					
ANR	8030928	UnaryOperationExpression	& ll		8029272	0					
ANR	8030929	UnaryOperator	&		8029272	0					
ANR	8030930	Identifier	ll		8029272	1					
ANR	8030931	Argument	"sizeof ( ""-dRasterGraphicsQuality="" ) + 2"		8029272	2					
ANR	8030932	AdditiveExpression	"sizeof ( ""-dRasterGraphicsQuality="" ) + 2"		8029272	0		+			
ANR	8030933	SizeofExpression	"sizeof ( ""-dRasterGraphicsQuality="" )"		8029272	0					
ANR	8030934	Sizeof	sizeof		8029272	0					
ANR	8030935	PrimaryExpression	"""-dRasterGraphicsQuality="""		8029272	1					
ANR	8030936	PrimaryExpression	2		8029272	1					
ANR	8030937	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dRasterGraphicsQuality=%d"" , ip -> fdata . raster_graphics_quality )"	349:6:11173:11269	8029272	1	True				
ANR	8030938	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dRasterGraphicsQuality=%d"" , ip -> fdata . raster_graphics_quality )"		8029272	0		+=			
ANR	8030939	Identifier	ll		8029272	0					
ANR	8030940	CallExpression	"fprintf ( ip -> out , "" -dRasterGraphicsQuality=%d"" , ip -> fdata . raster_graphics_quality )"		8029272	1					
ANR	8030941	Callee	fprintf		8029272	0					
ANR	8030942	Identifier	fprintf		8029272	0					
ANR	8030943	ArgumentList	ip -> out		8029272	1					
ANR	8030944	Argument	ip -> out		8029272	0					
ANR	8030945	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030946	Identifier	ip		8029272	0					
ANR	8030947	Identifier	out		8029272	1					
ANR	8030948	Argument	""" -dRasterGraphicsQuality=%d"""		8029272	1					
ANR	8030949	PrimaryExpression	""" -dRasterGraphicsQuality=%d"""		8029272	0					
ANR	8030950	Argument	ip -> fdata . raster_graphics_quality		8029272	2					
ANR	8030951	MemberAccess	ip -> fdata . raster_graphics_quality		8029272	0					
ANR	8030952	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030953	Identifier	ip		8029272	0					
ANR	8030954	Identifier	fdata		8029272	1					
ANR	8030955	Identifier	raster_graphics_quality		8029272	1					
ANR	8030956	IfStatement	if ( ip -> fdata . compression != default_compression )		8029272	53					
ANR	8030957	Condition	ip -> fdata . compression != default_compression	356:6:11404:11447	8029272	0	True				
ANR	8030958	EqualityExpression	ip -> fdata . compression != default_compression		8029272	0		!=			
ANR	8030959	MemberAccess	ip -> fdata . compression		8029272	0					
ANR	8030960	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8030961	Identifier	ip		8029272	0					
ANR	8030962	Identifier	fdata		8029272	1					
ANR	8030963	Identifier	compression		8029272	1					
ANR	8030964	Identifier	default_compression		8029272	1					
ANR	8030965	CompoundStatement		222:52:7912:7912	8029272	1					
ANR	8030966	ExpressionStatement	"check_line_length ( ip -> out , & ll , sizeof ( ""-dCompressionMethod="" ) + 1 )"	357:4:11456:11523	8029272	0	True				
ANR	8030967	CallExpression	"check_line_length ( ip -> out , & ll , sizeof ( ""-dCompressionMethod="" ) + 1 )"		8029272	0					
ANR	8030968	Callee	check_line_length		8029272	0					
ANR	8030969	Identifier	check_line_length		8029272	0					
ANR	8030970	ArgumentList	ip -> out		8029272	1					
ANR	8030971	Argument	ip -> out		8029272	0					
ANR	8030972	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030973	Identifier	ip		8029272	0					
ANR	8030974	Identifier	out		8029272	1					
ANR	8030975	Argument	& ll		8029272	1					
ANR	8030976	UnaryOperationExpression	& ll		8029272	0					
ANR	8030977	UnaryOperator	&		8029272	0					
ANR	8030978	Identifier	ll		8029272	1					
ANR	8030979	Argument	"sizeof ( ""-dCompressionMethod="" ) + 1"		8029272	2					
ANR	8030980	AdditiveExpression	"sizeof ( ""-dCompressionMethod="" ) + 1"		8029272	0		+			
ANR	8030981	SizeofExpression	"sizeof ( ""-dCompressionMethod="" )"		8029272	0					
ANR	8030982	Sizeof	sizeof		8029272	0					
ANR	8030983	PrimaryExpression	"""-dCompressionMethod="""		8029272	1					
ANR	8030984	PrimaryExpression	1		8029272	1					
ANR	8030985	ExpressionStatement	"ll += fprintf ( ip -> out , "" -dCompressionMethod=%d"" , ip -> fdata . compression )"	358:4:11529:11601	8029272	1	True				
ANR	8030986	AssignmentExpression	"ll += fprintf ( ip -> out , "" -dCompressionMethod=%d"" , ip -> fdata . compression )"		8029272	0		+=			
ANR	8030987	Identifier	ll		8029272	0					
ANR	8030988	CallExpression	"fprintf ( ip -> out , "" -dCompressionMethod=%d"" , ip -> fdata . compression )"		8029272	1					
ANR	8030989	Callee	fprintf		8029272	0					
ANR	8030990	Identifier	fprintf		8029272	0					
ANR	8030991	ArgumentList	ip -> out		8029272	1					
ANR	8030992	Argument	ip -> out		8029272	0					
ANR	8030993	PtrMemberAccess	ip -> out		8029272	0					
ANR	8030994	Identifier	ip		8029272	0					
ANR	8030995	Identifier	out		8029272	1					
ANR	8030996	Argument	""" -dCompressionMethod=%d"""		8029272	1					
ANR	8030997	PrimaryExpression	""" -dCompressionMethod=%d"""		8029272	0					
ANR	8030998	Argument	ip -> fdata . compression		8029272	2					
ANR	8030999	MemberAccess	ip -> fdata . compression		8029272	0					
ANR	8031000	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031001	Identifier	ip		8029272	0					
ANR	8031002	Identifier	fdata		8029272	1					
ANR	8031003	Identifier	compression		8029272	1					
ANR	8031004	ExpressionStatement	"fputs ( ""\\n\\n"" , ip -> out )"	361:2:11610:11632	8029272	54	True				
ANR	8031005	CallExpression	"fputs ( ""\\n\\n"" , ip -> out )"		8029272	0					
ANR	8031006	Callee	fputs		8029272	0					
ANR	8031007	Identifier	fputs		8029272	0					
ANR	8031008	ArgumentList	"""\\n\\n"""		8029272	1					
ANR	8031009	Argument	"""\\n\\n"""		8029272	0					
ANR	8031010	PrimaryExpression	"""\\n\\n"""		8029272	0					
ANR	8031011	Argument	ip -> out		8029272	1					
ANR	8031012	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031013	Identifier	ip		8029272	0					
ANR	8031014	Identifier	out		8029272	1					
ANR	8031015	IfStatement	if ( ip -> fdata . palette == pcl_CMYK && ! ip -> seen_first_colorant )		8029272	55					
ANR	8031016	Condition	ip -> fdata . palette == pcl_CMYK && ! ip -> seen_first_colorant	362:6:11640:11696	8029272	0	True				
ANR	8031017	AndExpression	ip -> fdata . palette == pcl_CMYK && ! ip -> seen_first_colorant		8029272	0		&&			
ANR	8031018	EqualityExpression	ip -> fdata . palette == pcl_CMYK		8029272	0		==			
ANR	8031019	MemberAccess	ip -> fdata . palette		8029272	0					
ANR	8031020	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031021	Identifier	ip		8029272	0					
ANR	8031022	Identifier	fdata		8029272	1					
ANR	8031023	Identifier	palette		8029272	1					
ANR	8031024	Identifier	pcl_CMYK		8029272	1					
ANR	8031025	UnaryOperationExpression	! ip -> seen_first_colorant		8029272	1					
ANR	8031026	UnaryOperator	!		8029272	0					
ANR	8031027	PtrMemberAccess	ip -> seen_first_colorant		8029272	1					
ANR	8031028	Identifier	ip		8029272	0					
ANR	8031029	Identifier	seen_first_colorant		8029272	1					
ANR	8031030	CompoundStatement		228:65:8161:8161	8029272	1					
ANR	8031031	Statement	imessage	363:4:11705:11712	8029272	0	True				
ANR	8031032	Statement	(	363:12:11713:11713	8029272	1	True				
ANR	8031033	Statement	ip	363:13:11714:11715	8029272	2	True				
ANR	8031034	Statement	->	363:15:11716:11717	8029272	3	True				
ANR	8031035	Statement	out	363:17:11718:11720	8029272	4	True				
ANR	8031036	Statement	","	363:20:11721:11721	8029272	5	True				
ANR	8031037	Statement	70	363:22:11723:11724	8029272	6	True				
ANR	8031038	Statement	","	363:24:11725:11725	8029272	7	True				
ANR	8031039	Statement	"""Although the colour model in this file is declared as CMYK, """	364:6:11733:11794	8029272	8	True				
ANR	8031040	Statement	"""the file does not\\n"""	365:8:11804:11824	8029272	9	True				
ANR	8031041	Statement	"""use the black colorant. If you find that the printer does not accept """	366:6:11832:11902	8029272	10	True				
ANR	8031042	Statement	"""a file\\n"""	367:8:11912:11921	8029272	11	True				
ANR	8031043	Statement	"""generated with the command line above, """	368:6:11929:11969	8029272	12	True				
ANR	8031044	Statement	"""try the CMY colour model instead.\\n\\n"""	369:8:11979:12017	8029272	13	True				
ANR	8031045	Statement	)	369:47:12018:12018	8029272	14	True				
ANR	8031046	ExpressionStatement		369:48:12019:12019	8029272	15	True				
ANR	8031047	IfStatement	if ( ip -> fdata . size != 0 )		8029272	56					
ANR	8031048	Condition	ip -> fdata . size != 0	372:6:12032:12050	8029272	0	True				
ANR	8031049	EqualityExpression	ip -> fdata . size != 0		8029272	0		!=			
ANR	8031050	MemberAccess	ip -> fdata . size		8029272	0					
ANR	8031051	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031052	Identifier	ip		8029272	0					
ANR	8031053	Identifier	fdata		8029272	1					
ANR	8031054	Identifier	size		8029272	1					
ANR	8031055	PrimaryExpression	0		8029272	1					
ANR	8031056	CompoundStatement		240:4:8584:8651	8029272	1					
ANR	8031057	IdentifierDeclStatement	ms_MediaCode media_code = pcl3_media_code ( ip -> fdata . size ) ;	373:4:12059:12116	8029272	0	True				
ANR	8031058	IdentifierDecl	media_code = pcl3_media_code ( ip -> fdata . size )		8029272	0					
ANR	8031059	IdentifierDeclType	ms_MediaCode		8029272	0					
ANR	8031060	Identifier	media_code		8029272	1					
ANR	8031061	AssignmentExpression	media_code = pcl3_media_code ( ip -> fdata . size )		8029272	2		=			
ANR	8031062	Identifier	media_code		8029272	0					
ANR	8031063	CallExpression	pcl3_media_code ( ip -> fdata . size )		8029272	1					
ANR	8031064	Callee	pcl3_media_code		8029272	0					
ANR	8031065	Identifier	pcl3_media_code		8029272	0					
ANR	8031066	ArgumentList	ip -> fdata . size		8029272	1					
ANR	8031067	Argument	ip -> fdata . size		8029272	0					
ANR	8031068	MemberAccess	ip -> fdata . size		8029272	0					
ANR	8031069	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031070	Identifier	ip		8029272	0					
ANR	8031071	Identifier	fdata		8029272	1					
ANR	8031072	Identifier	size		8029272	1					
ANR	8031073	IdentifierDeclStatement	const ms_SizeDescription * size = ms_find_size_from_code ( media_code ) ;	374:4:12122:12189	8029272	1	True				
ANR	8031074	IdentifierDecl	* size = ms_find_size_from_code ( media_code )		8029272	0					
ANR	8031075	IdentifierDeclType	const ms_SizeDescription *		8029272	0					
ANR	8031076	Identifier	size		8029272	1					
ANR	8031077	AssignmentExpression	* size = ms_find_size_from_code ( media_code )		8029272	2		=			
ANR	8031078	Identifier	size		8029272	0					
ANR	8031079	CallExpression	ms_find_size_from_code ( media_code )		8029272	1					
ANR	8031080	Callee	ms_find_size_from_code		8029272	0					
ANR	8031081	Identifier	ms_find_size_from_code		8029272	0					
ANR	8031082	ArgumentList	media_code		8029272	1					
ANR	8031083	Argument	media_code		8029272	0					
ANR	8031084	Identifier	media_code		8029272	0					
ANR	8031085	IfStatement	if ( size == NULL )		8029272	2					
ANR	8031086	Condition	size == NULL	375:8:12199:12210	8029272	0	True				
ANR	8031087	EqualityExpression	size == NULL		8029272	0		==			
ANR	8031088	Identifier	size		8029272	0					
ANR	8031089	Identifier	NULL		8029272	1					
ANR	8031090	ExpressionStatement	"imessage ( ip -> out , 14 , ""This file uses a PCL page size code (%d) which is unknown to pcl3.\\n"" , ( int ) ip -> fdata . size )"	376:6:12219:12349	8029272	1	True				
ANR	8031091	CallExpression	"imessage ( ip -> out , 14 , ""This file uses a PCL page size code (%d) which is unknown to pcl3.\\n"" , ( int ) ip -> fdata . size )"		8029272	0					
ANR	8031092	Callee	imessage		8029272	0					
ANR	8031093	Identifier	imessage		8029272	0					
ANR	8031094	ArgumentList	ip -> out		8029272	1					
ANR	8031095	Argument	ip -> out		8029272	0					
ANR	8031096	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031097	Identifier	ip		8029272	0					
ANR	8031098	Identifier	out		8029272	1					
ANR	8031099	Argument	14		8029272	1					
ANR	8031100	PrimaryExpression	14		8029272	0					
ANR	8031101	Argument	"""This file uses a PCL page size code (%d) which is unknown to pcl3.\\n"""		8029272	2					
ANR	8031102	PrimaryExpression	"""This file uses a PCL page size code (%d) which is unknown to pcl3.\\n"""		8029272	0					
ANR	8031103	Argument	( int ) ip -> fdata . size		8029272	3					
ANR	8031104	CastExpression	( int ) ip -> fdata . size		8029272	0					
ANR	8031105	CastTarget	int		8029272	0					
ANR	8031106	MemberAccess	ip -> fdata . size		8029272	1					
ANR	8031107	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031108	Identifier	ip		8029272	0					
ANR	8031109	Identifier	fdata		8029272	1					
ANR	8031110	Identifier	size		8029272	1					
ANR	8031111	ElseStatement	else		8029272	0					
ANR	8031112	CompoundStatement		245:9:8822:8822	8029272	0					
ANR	8031113	ExpressionStatement	"imessage ( ip -> out , 15 , ""The page size is set to %s"" , size -> name )"	380:6:12368:12431	8029272	0	True				
ANR	8031114	CallExpression	"imessage ( ip -> out , 15 , ""The page size is set to %s"" , size -> name )"		8029272	0					
ANR	8031115	Callee	imessage		8029272	0					
ANR	8031116	Identifier	imessage		8029272	0					
ANR	8031117	ArgumentList	ip -> out		8029272	1					
ANR	8031118	Argument	ip -> out		8029272	0					
ANR	8031119	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031120	Identifier	ip		8029272	0					
ANR	8031121	Identifier	out		8029272	1					
ANR	8031122	Argument	15		8029272	1					
ANR	8031123	PrimaryExpression	15		8029272	0					
ANR	8031124	Argument	"""The page size is set to %s"""		8029272	2					
ANR	8031125	PrimaryExpression	"""The page size is set to %s"""		8029272	0					
ANR	8031126	Argument	size -> name		8029272	3					
ANR	8031127	PtrMemberAccess	size -> name		8029272	0					
ANR	8031128	Identifier	size		8029272	0					
ANR	8031129	Identifier	name		8029272	1					
ANR	8031130	IfStatement	if ( media_code & PCL_CARD_FLAG )		8029272	1					
ANR	8031131	Condition	media_code & PCL_CARD_FLAG	384:10:12639:12664	8029272	0	True				
ANR	8031132	BitAndExpression	media_code & PCL_CARD_FLAG		8029272	0		&			
ANR	8031133	Identifier	media_code		8029272	0					
ANR	8031134	Identifier	PCL_CARD_FLAG		8029272	1					
ANR	8031135	ExpressionStatement	"fputs ( PCL_CARD_STRING , ip -> out )"	384:38:12667:12698	8029272	1	True				
ANR	8031136	CallExpression	"fputs ( PCL_CARD_STRING , ip -> out )"		8029272	0					
ANR	8031137	Callee	fputs		8029272	0					
ANR	8031138	Identifier	fputs		8029272	0					
ANR	8031139	ArgumentList	PCL_CARD_STRING		8029272	1					
ANR	8031140	Argument	PCL_CARD_STRING		8029272	0					
ANR	8031141	Identifier	PCL_CARD_STRING		8029272	0					
ANR	8031142	Argument	ip -> out		8029272	1					
ANR	8031143	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031144	Identifier	ip		8029272	0					
ANR	8031145	Identifier	out		8029272	1					
ANR	8031146	IfStatement	if ( size -> dimen [ 0 ] > 0 )		8029272	2					
ANR	8031147	Condition	size -> dimen [ 0 ] > 0	385:10:12710:12727	8029272	0	True				
ANR	8031148	RelationalExpression	size -> dimen [ 0 ] > 0		8029272	0		>			
ANR	8031149	ArrayIndexing	size -> dimen [ 0 ]		8029272	0					
ANR	8031150	PtrMemberAccess	size -> dimen		8029272	0					
ANR	8031151	Identifier	size		8029272	0					
ANR	8031152	Identifier	dimen		8029272	1					
ANR	8031153	PrimaryExpression	0		8029272	1					
ANR	8031154	PrimaryExpression	0		8029272	1					
ANR	8031155	CompoundStatement		252:8:9202:9247	8029272	1					
ANR	8031156	IdentifierDeclStatement	"const char * unit = catgets ( catd , 2 , 16 , ""mm"" ) ;"	386:8:12740:12785	8029272	0	True				
ANR	8031157	IdentifierDecl	"* unit = catgets ( catd , 2 , 16 , ""mm"" )"		8029272	0					
ANR	8031158	IdentifierDeclType	const char *		8029272	0					
ANR	8031159	Identifier	unit		8029272	1					
ANR	8031160	AssignmentExpression	"* unit = catgets ( catd , 2 , 16 , ""mm"" )"		8029272	2		=			
ANR	8031161	Identifier	unit		8029272	0					
ANR	8031162	CallExpression	"catgets ( catd , 2 , 16 , ""mm"" )"		8029272	1					
ANR	8031163	Callee	catgets		8029272	0					
ANR	8031164	Identifier	catgets		8029272	0					
ANR	8031165	ArgumentList	catd		8029272	1					
ANR	8031166	Argument	catd		8029272	0					
ANR	8031167	Identifier	catd		8029272	0					
ANR	8031168	Argument	2		8029272	1					
ANR	8031169	PrimaryExpression	2		8029272	0					
ANR	8031170	Argument	16		8029272	2					
ANR	8031171	PrimaryExpression	16		8029272	0					
ANR	8031172	Argument	"""mm"""		8029272	3					
ANR	8031173	PrimaryExpression	"""mm"""		8029272	0					
ANR	8031174	ExpressionStatement	"fputs ( "" ("" , ip -> out )"	388:8:12796:12816	8029272	1	True				
ANR	8031175	CallExpression	"fputs ( "" ("" , ip -> out )"		8029272	0					
ANR	8031176	Callee	fputs		8029272	0					
ANR	8031177	Identifier	fputs		8029272	0					
ANR	8031178	ArgumentList	""" ("""		8029272	1					
ANR	8031179	Argument	""" ("""		8029272	0					
ANR	8031180	PrimaryExpression	""" ("""		8029272	0					
ANR	8031181	Argument	ip -> out		8029272	1					
ANR	8031182	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031183	Identifier	ip		8029272	0					
ANR	8031184	Identifier	out		8029272	1					
ANR	8031185	IfStatement	"if ( strcmp ( unit , ""bp"" ) == 0 )"		8029272	2					
ANR	8031186	Condition	"strcmp ( unit , ""bp"" ) == 0"	389:12:12830:12852	8029272	0	True				
ANR	8031187	EqualityExpression	"strcmp ( unit , ""bp"" ) == 0"		8029272	0		==			
ANR	8031188	CallExpression	"strcmp ( unit , ""bp"" )"		8029272	0					
ANR	8031189	Callee	strcmp		8029272	0					
ANR	8031190	Identifier	strcmp		8029272	0					
ANR	8031191	ArgumentList	unit		8029272	1					
ANR	8031192	Argument	unit		8029272	0					
ANR	8031193	Identifier	unit		8029272	0					
ANR	8031194	Argument	"""bp"""		8029272	1					
ANR	8031195	PrimaryExpression	"""bp"""		8029272	0					
ANR	8031196	PrimaryExpression	0		8029272	1					
ANR	8031197	ExpressionStatement	"fprintf ( ip -> out , ""%.0f x %.0f bp"" , size -> dimen [ 0 ] , size -> dimen [ 1 ] )"	390:10:12865:12943	8029272	1	True				
ANR	8031198	CallExpression	"fprintf ( ip -> out , ""%.0f x %.0f bp"" , size -> dimen [ 0 ] , size -> dimen [ 1 ] )"		8029272	0					
ANR	8031199	Callee	fprintf		8029272	0					
ANR	8031200	Identifier	fprintf		8029272	0					
ANR	8031201	ArgumentList	ip -> out		8029272	1					
ANR	8031202	Argument	ip -> out		8029272	0					
ANR	8031203	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031204	Identifier	ip		8029272	0					
ANR	8031205	Identifier	out		8029272	1					
ANR	8031206	Argument	"""%.0f x %.0f bp"""		8029272	1					
ANR	8031207	PrimaryExpression	"""%.0f x %.0f bp"""		8029272	0					
ANR	8031208	Argument	size -> dimen [ 0 ]		8029272	2					
ANR	8031209	ArrayIndexing	size -> dimen [ 0 ]		8029272	0					
ANR	8031210	PtrMemberAccess	size -> dimen		8029272	0					
ANR	8031211	Identifier	size		8029272	0					
ANR	8031212	Identifier	dimen		8029272	1					
ANR	8031213	PrimaryExpression	0		8029272	1					
ANR	8031214	Argument	size -> dimen [ 1 ]		8029272	3					
ANR	8031215	ArrayIndexing	size -> dimen [ 1 ]		8029272	0					
ANR	8031216	PtrMemberAccess	size -> dimen		8029272	0					
ANR	8031217	Identifier	size		8029272	0					
ANR	8031218	Identifier	dimen		8029272	1					
ANR	8031219	PrimaryExpression	1		8029272	1					
ANR	8031220	ElseStatement	else		8029272	0					
ANR	8031221	IfStatement	"if ( strcmp ( unit , ""in"" ) == 0 )"		8029272	0					
ANR	8031222	Condition	"strcmp ( unit , ""in"" ) == 0"	392:17:12962:12984	8029272	0	True				
ANR	8031223	EqualityExpression	"strcmp ( unit , ""in"" ) == 0"		8029272	0		==			
ANR	8031224	CallExpression	"strcmp ( unit , ""in"" )"		8029272	0					
ANR	8031225	Callee	strcmp		8029272	0					
ANR	8031226	Identifier	strcmp		8029272	0					
ANR	8031227	ArgumentList	unit		8029272	1					
ANR	8031228	Argument	unit		8029272	0					
ANR	8031229	Identifier	unit		8029272	0					
ANR	8031230	Argument	"""in"""		8029272	1					
ANR	8031231	PrimaryExpression	"""in"""		8029272	0					
ANR	8031232	PrimaryExpression	0		8029272	1					
ANR	8031233	ExpressionStatement	"fprintf ( ip -> out , ""%.1f x %.1f in"" , size -> dimen [ 0 ] / BP_PER_IN , size -> dimen [ 1 ] / BP_PER_IN )"	393:10:12997:13095	8029272	1	True				
ANR	8031234	CallExpression	"fprintf ( ip -> out , ""%.1f x %.1f in"" , size -> dimen [ 0 ] / BP_PER_IN , size -> dimen [ 1 ] / BP_PER_IN )"		8029272	0					
ANR	8031235	Callee	fprintf		8029272	0					
ANR	8031236	Identifier	fprintf		8029272	0					
ANR	8031237	ArgumentList	ip -> out		8029272	1					
ANR	8031238	Argument	ip -> out		8029272	0					
ANR	8031239	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031240	Identifier	ip		8029272	0					
ANR	8031241	Identifier	out		8029272	1					
ANR	8031242	Argument	"""%.1f x %.1f in"""		8029272	1					
ANR	8031243	PrimaryExpression	"""%.1f x %.1f in"""		8029272	0					
ANR	8031244	Argument	size -> dimen [ 0 ] / BP_PER_IN		8029272	2					
ANR	8031245	MultiplicativeExpression	size -> dimen [ 0 ] / BP_PER_IN		8029272	0		/			
ANR	8031246	ArrayIndexing	size -> dimen [ 0 ]		8029272	0					
ANR	8031247	PtrMemberAccess	size -> dimen		8029272	0					
ANR	8031248	Identifier	size		8029272	0					
ANR	8031249	Identifier	dimen		8029272	1					
ANR	8031250	PrimaryExpression	0		8029272	1					
ANR	8031251	Identifier	BP_PER_IN		8029272	1					
ANR	8031252	Argument	size -> dimen [ 1 ] / BP_PER_IN		8029272	3					
ANR	8031253	MultiplicativeExpression	size -> dimen [ 1 ] / BP_PER_IN		8029272	0		/			
ANR	8031254	ArrayIndexing	size -> dimen [ 1 ]		8029272	0					
ANR	8031255	PtrMemberAccess	size -> dimen		8029272	0					
ANR	8031256	Identifier	size		8029272	0					
ANR	8031257	Identifier	dimen		8029272	1					
ANR	8031258	PrimaryExpression	1		8029272	1					
ANR	8031259	Identifier	BP_PER_IN		8029272	1					
ANR	8031260	ElseStatement	else		8029272	0					
ANR	8031261	ExpressionStatement	"fprintf ( ip -> out , ""%.0f x %.0f mm"" , size -> dimen [ 0 ] / BP_PER_MM , size -> dimen [ 1 ] / BP_PER_MM )"	396:10:13120:13218	8029272	0	True				
ANR	8031262	CallExpression	"fprintf ( ip -> out , ""%.0f x %.0f mm"" , size -> dimen [ 0 ] / BP_PER_MM , size -> dimen [ 1 ] / BP_PER_MM )"		8029272	0					
ANR	8031263	Callee	fprintf		8029272	0					
ANR	8031264	Identifier	fprintf		8029272	0					
ANR	8031265	ArgumentList	ip -> out		8029272	1					
ANR	8031266	Argument	ip -> out		8029272	0					
ANR	8031267	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031268	Identifier	ip		8029272	0					
ANR	8031269	Identifier	out		8029272	1					
ANR	8031270	Argument	"""%.0f x %.0f mm"""		8029272	1					
ANR	8031271	PrimaryExpression	"""%.0f x %.0f mm"""		8029272	0					
ANR	8031272	Argument	size -> dimen [ 0 ] / BP_PER_MM		8029272	2					
ANR	8031273	MultiplicativeExpression	size -> dimen [ 0 ] / BP_PER_MM		8029272	0		/			
ANR	8031274	ArrayIndexing	size -> dimen [ 0 ]		8029272	0					
ANR	8031275	PtrMemberAccess	size -> dimen		8029272	0					
ANR	8031276	Identifier	size		8029272	0					
ANR	8031277	Identifier	dimen		8029272	1					
ANR	8031278	PrimaryExpression	0		8029272	1					
ANR	8031279	Identifier	BP_PER_MM		8029272	1					
ANR	8031280	Argument	size -> dimen [ 1 ] / BP_PER_MM		8029272	3					
ANR	8031281	MultiplicativeExpression	size -> dimen [ 1 ] / BP_PER_MM		8029272	0		/			
ANR	8031282	ArrayIndexing	size -> dimen [ 1 ]		8029272	0					
ANR	8031283	PtrMemberAccess	size -> dimen		8029272	0					
ANR	8031284	Identifier	size		8029272	0					
ANR	8031285	Identifier	dimen		8029272	1					
ANR	8031286	PrimaryExpression	1		8029272	1					
ANR	8031287	Identifier	BP_PER_MM		8029272	1					
ANR	8031288	ExpressionStatement	"fputc ( ')' , ip -> out )"	398:8:13228:13247	8029272	3	True				
ANR	8031289	CallExpression	"fputc ( ')' , ip -> out )"		8029272	0					
ANR	8031290	Callee	fputc		8029272	0					
ANR	8031291	Identifier	fputc		8029272	0					
ANR	8031292	ArgumentList	')'		8029272	1					
ANR	8031293	Argument	')'		8029272	0					
ANR	8031294	PrimaryExpression	')'		8029272	0					
ANR	8031295	Argument	ip -> out		8029272	1					
ANR	8031296	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031297	Identifier	ip		8029272	0					
ANR	8031298	Identifier	out		8029272	1					
ANR	8031299	ExpressionStatement	"fputs ( "".\\n"" , ip -> out )"	400:6:13263:13284	8029272	3	True				
ANR	8031300	CallExpression	"fputs ( "".\\n"" , ip -> out )"		8029272	0					
ANR	8031301	Callee	fputs		8029272	0					
ANR	8031302	Identifier	fputs		8029272	0					
ANR	8031303	ArgumentList	""".\\n"""		8029272	1					
ANR	8031304	Argument	""".\\n"""		8029272	0					
ANR	8031305	PrimaryExpression	""".\\n"""		8029272	0					
ANR	8031306	Argument	ip -> out		8029272	1					
ANR	8031307	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031308	Identifier	ip		8029272	0					
ANR	8031309	Identifier	out		8029272	1					
ANR	8031310	IfStatement	if ( ip -> fdata . media_source != 0 && ip -> fdata . media_source != 1 )		8029272	57					
ANR	8031311	Condition	ip -> fdata . media_source != 0 && ip -> fdata . media_source != 1	403:6:13302:13359	8029272	0	True				
ANR	8031312	AndExpression	ip -> fdata . media_source != 0 && ip -> fdata . media_source != 1		8029272	0		&&			
ANR	8031313	EqualityExpression	ip -> fdata . media_source != 0		8029272	0		!=			
ANR	8031314	MemberAccess	ip -> fdata . media_source		8029272	0					
ANR	8031315	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031316	Identifier	ip		8029272	0					
ANR	8031317	Identifier	fdata		8029272	1					
ANR	8031318	Identifier	media_source		8029272	1					
ANR	8031319	PrimaryExpression	0		8029272	1					
ANR	8031320	EqualityExpression	ip -> fdata . media_source != 1		8029272	1		!=			
ANR	8031321	MemberAccess	ip -> fdata . media_source		8029272	0					
ANR	8031322	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031323	Identifier	ip		8029272	0					
ANR	8031324	Identifier	fdata		8029272	1					
ANR	8031325	Identifier	media_source		8029272	1					
ANR	8031326	PrimaryExpression	1		8029272	1					
ANR	8031327	ExpressionStatement	"imessage ( ip -> out , 19 , ""The media source (input tray) selected is %d.\\n"" , ip -> fdata . media_source )"	404:4:13366:13468	8029272	1	True				
ANR	8031328	CallExpression	"imessage ( ip -> out , 19 , ""The media source (input tray) selected is %d.\\n"" , ip -> fdata . media_source )"		8029272	0					
ANR	8031329	Callee	imessage		8029272	0					
ANR	8031330	Identifier	imessage		8029272	0					
ANR	8031331	ArgumentList	ip -> out		8029272	1					
ANR	8031332	Argument	ip -> out		8029272	0					
ANR	8031333	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031334	Identifier	ip		8029272	0					
ANR	8031335	Identifier	out		8029272	1					
ANR	8031336	Argument	19		8029272	1					
ANR	8031337	PrimaryExpression	19		8029272	0					
ANR	8031338	Argument	"""The media source (input tray) selected is %d.\\n"""		8029272	2					
ANR	8031339	PrimaryExpression	"""The media source (input tray) selected is %d.\\n"""		8029272	0					
ANR	8031340	Argument	ip -> fdata . media_source		8029272	3					
ANR	8031341	MemberAccess	ip -> fdata . media_source		8029272	0					
ANR	8031342	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031343	Identifier	ip		8029272	0					
ANR	8031344	Identifier	fdata		8029272	1					
ANR	8031345	Identifier	media_source		8029272	1					
ANR	8031346	IfStatement	if ( ip -> fdata . media_destination != 0 )		8029272	58					
ANR	8031347	Condition	ip -> fdata . media_destination != 0	406:6:13476:13507	8029272	0	True				
ANR	8031348	EqualityExpression	ip -> fdata . media_destination != 0		8029272	0		!=			
ANR	8031349	MemberAccess	ip -> fdata . media_destination		8029272	0					
ANR	8031350	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031351	Identifier	ip		8029272	0					
ANR	8031352	Identifier	fdata		8029272	1					
ANR	8031353	Identifier	media_destination		8029272	1					
ANR	8031354	PrimaryExpression	0		8029272	1					
ANR	8031355	ExpressionStatement	"imessage ( ip -> out , 17 , ""The media destination (output tray) selected is %d.\\n"" , ip -> fdata . media_destination )"	407:4:13514:13633	8029272	1	True				
ANR	8031356	CallExpression	"imessage ( ip -> out , 17 , ""The media destination (output tray) selected is %d.\\n"" , ip -> fdata . media_destination )"		8029272	0					
ANR	8031357	Callee	imessage		8029272	0					
ANR	8031358	Identifier	imessage		8029272	0					
ANR	8031359	ArgumentList	ip -> out		8029272	1					
ANR	8031360	Argument	ip -> out		8029272	0					
ANR	8031361	PtrMemberAccess	ip -> out		8029272	0					
ANR	8031362	Identifier	ip		8029272	0					
ANR	8031363	Identifier	out		8029272	1					
ANR	8031364	Argument	17		8029272	1					
ANR	8031365	PrimaryExpression	17		8029272	0					
ANR	8031366	Argument	"""The media destination (output tray) selected is %d.\\n"""		8029272	2					
ANR	8031367	PrimaryExpression	"""The media destination (output tray) selected is %d.\\n"""		8029272	0					
ANR	8031368	Argument	ip -> fdata . media_destination		8029272	3					
ANR	8031369	MemberAccess	ip -> fdata . media_destination		8029272	0					
ANR	8031370	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031371	Identifier	ip		8029272	0					
ANR	8031372	Identifier	fdata		8029272	1					
ANR	8031373	Identifier	media_destination		8029272	1					
ANR	8031374	IfStatement	if ( ip -> fdata . media_source != 0 && ip -> fdata . media_source != 1 || ip -> fdata . media_destination != 0 )		8029272	59					
ANR	8031375	Condition	ip -> fdata . media_source != 0 && ip -> fdata . media_source != 1 || ip -> fdata . media_destination != 0	410:6:13641:13740	8029272	0	True				
ANR	8031376	OrExpression	ip -> fdata . media_source != 0 && ip -> fdata . media_source != 1 || ip -> fdata . media_destination != 0		8029272	0		||			
ANR	8031377	AndExpression	ip -> fdata . media_source != 0 && ip -> fdata . media_source != 1		8029272	0		&&			
ANR	8031378	EqualityExpression	ip -> fdata . media_source != 0		8029272	0		!=			
ANR	8031379	MemberAccess	ip -> fdata . media_source		8029272	0					
ANR	8031380	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031381	Identifier	ip		8029272	0					
ANR	8031382	Identifier	fdata		8029272	1					
ANR	8031383	Identifier	media_source		8029272	1					
ANR	8031384	PrimaryExpression	0		8029272	1					
ANR	8031385	EqualityExpression	ip -> fdata . media_source != 1		8029272	1		!=			
ANR	8031386	MemberAccess	ip -> fdata . media_source		8029272	0					
ANR	8031387	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031388	Identifier	ip		8029272	0					
ANR	8031389	Identifier	fdata		8029272	1					
ANR	8031390	Identifier	media_source		8029272	1					
ANR	8031391	PrimaryExpression	1		8029272	1					
ANR	8031392	EqualityExpression	ip -> fdata . media_destination != 0		8029272	1		!=			
ANR	8031393	MemberAccess	ip -> fdata . media_destination		8029272	0					
ANR	8031394	PtrMemberAccess	ip -> fdata		8029272	0					
ANR	8031395	Identifier	ip		8029272	0					
ANR	8031396	Identifier	fdata		8029272	1					
ANR	8031397	Identifier	media_destination		8029272	1					
ANR	8031398	PrimaryExpression	0		8029272	1					
ANR	8031399	Statement	imessage	412:4:13747:13754	8029272	1	True				
ANR	8031400	Statement	(	412:12:13755:13755	8029272	60	True				
ANR	8031401	Statement	ip	412:13:13756:13757	8029272	61	True				
ANR	8031402	Statement	->	412:15:13758:13759	8029272	62	True				
ANR	8031403	Statement	out	412:17:13760:13762	8029272	63	True				
ANR	8031404	Statement	","	412:20:13763:13763	8029272	64	True				
ANR	8031405	Statement	18	412:22:13765:13766	8029272	65	True				
ANR	8031406	Statement	","	412:24:13767:13767	8029272	66	True				
ANR	8031407	Statement	"""To be able to select a media position (input or output) you will have """	413:6:13775:13846	8029272	67	True				
ANR	8031408	Statement	"""to\\n"""	414:8:13856:13861	8029272	68	True				
ANR	8031409	Statement	"""configure the `InputAttributes' or `OutputAttributes' dictionaries\\n"""	415:6:13869:13938	8029272	69	True				
ANR	8031410	Statement	"""appropriately. See the manual page gs-pcl3(1).\\n"""	416:6:13946:13995	8029272	70	True				
ANR	8031411	Statement	)	416:56:13996:13996	8029272	71	True				
ANR	8031412	ExpressionStatement		416:57:13997:13997	8029272	72	True				
ANR	8031413	ReturnStatement	return ;	418:2:14002:14008	8029272	73	True				
ANR	8031414	ReturnType	static void		8029272	1					
ANR	8031415	Identifier	print_result		8029272	2					
ANR	8031416	ParameterList	CollectedInfo * ip		8029272	3					
ANR	8031417	Parameter	CollectedInfo * ip	134:25:3499:3515	8029272	0	True				
ANR	8031418	ParameterType	CollectedInfo *		8029272	0					
ANR	8031419	Identifier	ip		8029272	1					
ANR	8031420	CFGEntryNode	ENTRY		8029272		True				
ANR	8031421	CFGExitNode	EXIT		8029272		True				
ANR	8031422	Symbol	ll		8029272						
ANR	8031423	Symbol	size -> name		8029272						
ANR	8031424	Symbol	ip -> fdata		8029272						
ANR	8031425	Symbol	* start		8029272						
ANR	8031426	Symbol	ip -> fdata . print_quality		8029272						
ANR	8031427	Symbol	ip -> fdata . colorant_array [ start ] . levels		8029272						
ANR	8031428	Symbol	pcl_no_palette		8029272						
ANR	8031429	Symbol	pcl_CMY		8029272						
ANR	8031430	Symbol	* ip -> fdata . colorant_array		8029272						
ANR	8031431	Symbol	pcl_RGB		8029272						
ANR	8031432	Symbol	pcl_CMYK		8029272						
ANR	8031433	Symbol	* * ip		8029272						
ANR	8031434	Symbol	strlen		8029272						
ANR	8031435	Symbol	catgets		8029272						
ANR	8031436	Symbol	different_resolutions		8029272						
ANR	8031437	Symbol	* size		8029272						
ANR	8031438	Symbol	ip -> fdata . palette		8029272						
ANR	8031439	Symbol	ip -> seen_first_colorant		8029272						
ANR	8031440	Symbol	ip -> seen_RGR		8029272						
ANR	8031441	Symbol	pcl_cm_tiff		8029272						
ANR	8031442	Symbol	PCL_CARD_STRING		8029272						
ANR	8031443	Symbol	ip -> fdata . shingling		8029272						
ANR	8031444	Symbol	ip -> seen_CRD		8029272						
ANR	8031445	Symbol	strcmp		8029272						
ANR	8031446	Symbol	ip -> fdata . colorant_array [ 0 ] . levels		8029272						
ANR	8031447	Symbol	NULL		8029272						
ANR	8031448	Symbol	size -> dimen		8029272						
ANR	8031449	Symbol	ip		8029272						
ANR	8031450	Symbol	TRUE		8029272						
ANR	8031451	Symbol	pcl3_media_code		8029272						
ANR	8031452	Symbol	ip -> fdata . media_type		8029272						
ANR	8031453	Symbol	* ip -> fdata		8029272						
ANR	8031454	Symbol	& ll		8029272						
ANR	8031455	Symbol	ip -> seen_old_quality		8029272						
ANR	8031456	Symbol	ip -> fdata . NULs_to_send		8029272						
ANR	8031457	Symbol	* * size		8029272						
ANR	8031458	Symbol	unit		8029272						
ANR	8031459	Symbol	ip -> fdata . colorant_array [ j ] . hres		8029272						
ANR	8031460	Symbol	ip -> fdata . duplex		8029272						
ANR	8031461	Symbol	size		8029272						
ANR	8031462	Symbol	ip -> fdata . PJL_language		8029272						
ANR	8031463	Symbol	ip -> fdata . number_of_colorants		8029272						
ANR	8031464	Symbol	ip -> fdata . depletion		8029272						
ANR	8031465	Symbol	pcl_cm_delta		8029272						
ANR	8031466	Symbol	ip -> fdata . colorant_array [ 0 ] . vres		8029272						
ANR	8031467	Symbol	pcl_black		8029272						
ANR	8031468	Symbol	min_vres		8029272						
ANR	8031469	Symbol	non_black_levels		8029272						
ANR	8031470	Symbol	ip -> number_of_outputs		8029272						
ANR	8031471	Symbol	black_levels		8029272						
ANR	8031472	Symbol	ip -> fdata . size		8029272						
ANR	8031473	Symbol	ip -> fdata . compression		8029272						
ANR	8031474	Symbol	ms_find_size_from_code		8029272						
ANR	8031475	Symbol	* ip		8029272						
ANR	8031476	Symbol	ip -> seen_ERG_B		8029272						
ANR	8031477	Symbol	ip -> seen_ERG_C		8029272						
ANR	8031478	Symbol	* size -> dimen		8029272						
ANR	8031479	Symbol	BP_PER_IN		8029272						
ANR	8031480	Symbol	ip -> fdata . PJL_job		8029272						
ANR	8031481	Symbol	ip -> out		8029272						
ANR	8031482	Symbol	BP_PER_MM		8029272						
ANR	8031483	Symbol	ip -> fdata . raster_graphics_quality		8029272						
ANR	8031484	Symbol	catd		8029272						
ANR	8031485	Symbol	ip -> fdata . media_destination		8029272						
ANR	8031486	Symbol	ip -> fdata . colorant_array [ j ] . vres		8029272						
ANR	8031487	Symbol	ip -> fdata . colorant_array		8029272						
ANR	8031488	Symbol	PCL_CARD_FLAG		8029272						
ANR	8031489	Symbol	default_compression		8029272						
ANR	8031490	Symbol	start		8029272						
ANR	8031491	Symbol	h		8029272						
ANR	8031492	Symbol	j		8029272						
ANR	8031493	Symbol	min_hres		8029272						
ANR	8031494	Symbol	different_non_black_levels		8029272						
ANR	8031495	Symbol	ip -> fdata . colorant_array [ j ] . levels		8029272						
ANR	8031496	Symbol	fprintf		8029272						
ANR	8031497	Symbol	media_code		8029272						
ANR	8031498	Symbol	ip -> fdata . colorant_array [ 0 ] . hres		8029272						
ANR	8031499	Symbol	ip -> seen_new_quality		8029272						
ANR	8031500	Symbol	s		8029272						
ANR	8031501	Symbol	* j		8029272						
ANR	8031502	Symbol	ip -> fdata . dry_time		8029272						
ANR	8031503	Symbol	v		8029272						
ANR	8031504	Symbol	ip -> fdata . media_source		8029272						
ANR	8031505	Symbol	ip -> fdata . colorant_array [ start + j ] . levels		8029272						
ANR	8031506	Symbol	FALSE		8029272						
ANR	8031507	Symbol	ip -> fdata . manual_feed		8029272						
ANR	8031508	Function	action_PageSize	423:0:14094:14232							
ANR	8031509	FunctionDef	"action_PageSize (FILE * in , const pcl_Command * cmd , void * i)"		8031508	0					
ANR	8031510	CompoundStatement		424:0:14164:14232	8031508	0					
ANR	8031511	IdentifierDeclStatement	CollectedInfo * ip = i ;	425:2:14168:14189	8031508	0	True				
ANR	8031512	IdentifierDecl	* ip = i		8031508	0					
ANR	8031513	IdentifierDeclType	CollectedInfo *		8031508	0					
ANR	8031514	Identifier	ip		8031508	1					
ANR	8031515	AssignmentExpression	* ip = i		8031508	2		=			
ANR	8031516	Identifier	i		8031508	0					
ANR	8031517	Identifier	i		8031508	1					
ANR	8031518	ExpressionStatement	ip -> fdata . size = cmd -> i	427:2:14194:14217	8031508	1	True				
ANR	8031519	AssignmentExpression	ip -> fdata . size = cmd -> i		8031508	0		=			
ANR	8031520	MemberAccess	ip -> fdata . size		8031508	0					
ANR	8031521	PtrMemberAccess	ip -> fdata		8031508	0					
ANR	8031522	Identifier	ip		8031508	0					
ANR	8031523	Identifier	fdata		8031508	1					
ANR	8031524	Identifier	size		8031508	1					
ANR	8031525	PtrMemberAccess	cmd -> i		8031508	1					
ANR	8031526	Identifier	cmd		8031508	0					
ANR	8031527	Identifier	i		8031508	1					
ANR	8031528	ReturnStatement	return 0 ;	429:2:14222:14230	8031508	2	True				
ANR	8031529	PrimaryExpression	0		8031508	0					
ANR	8031530	ReturnType	static int		8031508	1					
ANR	8031531	Identifier	action_PageSize		8031508	2					
ANR	8031532	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8031508	3					
ANR	8031533	Parameter	FILE * in	423:27:14121:14128	8031508	0	True				
ANR	8031534	ParameterType	FILE *		8031508	0					
ANR	8031535	Identifier	in		8031508	1					
ANR	8031536	Parameter	const pcl_Command * cmd	423:37:14131:14152	8031508	1	True				
ANR	8031537	ParameterType	const pcl_Command *		8031508	0					
ANR	8031538	Identifier	cmd		8031508	1					
ANR	8031539	Parameter	void * i	423:61:14155:14161	8031508	2	True				
ANR	8031540	ParameterType	void *		8031508	0					
ANR	8031541	Identifier	i		8031508	1					
ANR	8031542	CFGEntryNode	ENTRY		8031508		True				
ANR	8031543	CFGExitNode	EXIT		8031508		True				
ANR	8031544	Symbol	ip -> fdata		8031508						
ANR	8031545	Symbol	in		8031508						
ANR	8031546	Symbol	ip		8031508						
ANR	8031547	Symbol	cmd -> i		8031508						
ANR	8031548	Symbol	i		8031508						
ANR	8031549	Symbol	ip -> fdata . size		8031508						
ANR	8031550	Symbol	cmd		8031508						
ANR	8031551	Symbol	* cmd		8031508						
ANR	8031552	Symbol	* ip		8031508						
ANR	8031553	Function	action_dry_time	434:0:14316:14458							
ANR	8031554	FunctionDef	"action_dry_time (FILE * in , const pcl_Command * cmd , void * i)"		8031553	0					
ANR	8031555	CompoundStatement		435:0:14386:14458	8031553	0					
ANR	8031556	IdentifierDeclStatement	CollectedInfo * ip = i ;	436:2:14390:14411	8031553	0	True				
ANR	8031557	IdentifierDecl	* ip = i		8031553	0					
ANR	8031558	IdentifierDeclType	CollectedInfo *		8031553	0					
ANR	8031559	Identifier	ip		8031553	1					
ANR	8031560	AssignmentExpression	* ip = i		8031553	2		=			
ANR	8031561	Identifier	i		8031553	0					
ANR	8031562	Identifier	i		8031553	1					
ANR	8031563	ExpressionStatement	ip -> fdata . dry_time = cmd -> i	438:2:14416:14443	8031553	1	True				
ANR	8031564	AssignmentExpression	ip -> fdata . dry_time = cmd -> i		8031553	0		=			
ANR	8031565	MemberAccess	ip -> fdata . dry_time		8031553	0					
ANR	8031566	PtrMemberAccess	ip -> fdata		8031553	0					
ANR	8031567	Identifier	ip		8031553	0					
ANR	8031568	Identifier	fdata		8031553	1					
ANR	8031569	Identifier	dry_time		8031553	1					
ANR	8031570	PtrMemberAccess	cmd -> i		8031553	1					
ANR	8031571	Identifier	cmd		8031553	0					
ANR	8031572	Identifier	i		8031553	1					
ANR	8031573	ReturnStatement	return 0 ;	440:2:14448:14456	8031553	2	True				
ANR	8031574	PrimaryExpression	0		8031553	0					
ANR	8031575	ReturnType	static int		8031553	1					
ANR	8031576	Identifier	action_dry_time		8031553	2					
ANR	8031577	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8031553	3					
ANR	8031578	Parameter	FILE * in	434:27:14343:14350	8031553	0	True				
ANR	8031579	ParameterType	FILE *		8031553	0					
ANR	8031580	Identifier	in		8031553	1					
ANR	8031581	Parameter	const pcl_Command * cmd	434:37:14353:14374	8031553	1	True				
ANR	8031582	ParameterType	const pcl_Command *		8031553	0					
ANR	8031583	Identifier	cmd		8031553	1					
ANR	8031584	Parameter	void * i	434:61:14377:14383	8031553	2	True				
ANR	8031585	ParameterType	void *		8031553	0					
ANR	8031586	Identifier	i		8031553	1					
ANR	8031587	CFGEntryNode	ENTRY		8031553		True				
ANR	8031588	CFGExitNode	EXIT		8031553		True				
ANR	8031589	Symbol	ip -> fdata		8031553						
ANR	8031590	Symbol	ip -> fdata . dry_time		8031553						
ANR	8031591	Symbol	in		8031553						
ANR	8031592	Symbol	ip		8031553						
ANR	8031593	Symbol	cmd -> i		8031553						
ANR	8031594	Symbol	i		8031553						
ANR	8031595	Symbol	cmd		8031553						
ANR	8031596	Symbol	* cmd		8031553						
ANR	8031597	Symbol	* ip		8031553						
ANR	8031598	Function	action_destination	445:0:14542:14696							
ANR	8031599	FunctionDef	"action_destination (FILE * in , const pcl_Command * cmd , void * i)"		8031598	0					
ANR	8031600	CompoundStatement		446:0:14615:14696	8031598	0					
ANR	8031601	IdentifierDeclStatement	CollectedInfo * ip = i ;	447:2:14619:14640	8031598	0	True				
ANR	8031602	IdentifierDecl	* ip = i		8031598	0					
ANR	8031603	IdentifierDeclType	CollectedInfo *		8031598	0					
ANR	8031604	Identifier	ip		8031598	1					
ANR	8031605	AssignmentExpression	* ip = i		8031598	2		=			
ANR	8031606	Identifier	i		8031598	0					
ANR	8031607	Identifier	i		8031598	1					
ANR	8031608	ExpressionStatement	ip -> fdata . media_destination = cmd -> i	449:2:14645:14681	8031598	1	True				
ANR	8031609	AssignmentExpression	ip -> fdata . media_destination = cmd -> i		8031598	0		=			
ANR	8031610	MemberAccess	ip -> fdata . media_destination		8031598	0					
ANR	8031611	PtrMemberAccess	ip -> fdata		8031598	0					
ANR	8031612	Identifier	ip		8031598	0					
ANR	8031613	Identifier	fdata		8031598	1					
ANR	8031614	Identifier	media_destination		8031598	1					
ANR	8031615	PtrMemberAccess	cmd -> i		8031598	1					
ANR	8031616	Identifier	cmd		8031598	0					
ANR	8031617	Identifier	i		8031598	1					
ANR	8031618	ReturnStatement	return 0 ;	451:2:14686:14694	8031598	2	True				
ANR	8031619	PrimaryExpression	0		8031598	0					
ANR	8031620	ReturnType	static int		8031598	1					
ANR	8031621	Identifier	action_destination		8031598	2					
ANR	8031622	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8031598	3					
ANR	8031623	Parameter	FILE * in	445:30:14572:14579	8031598	0	True				
ANR	8031624	ParameterType	FILE *		8031598	0					
ANR	8031625	Identifier	in		8031598	1					
ANR	8031626	Parameter	const pcl_Command * cmd	445:40:14582:14603	8031598	1	True				
ANR	8031627	ParameterType	const pcl_Command *		8031598	0					
ANR	8031628	Identifier	cmd		8031598	1					
ANR	8031629	Parameter	void * i	445:64:14606:14612	8031598	2	True				
ANR	8031630	ParameterType	void *		8031598	0					
ANR	8031631	Identifier	i		8031598	1					
ANR	8031632	CFGEntryNode	ENTRY		8031598		True				
ANR	8031633	CFGExitNode	EXIT		8031598		True				
ANR	8031634	Symbol	ip -> fdata		8031598						
ANR	8031635	Symbol	ip -> fdata . media_destination		8031598						
ANR	8031636	Symbol	in		8031598						
ANR	8031637	Symbol	ip		8031598						
ANR	8031638	Symbol	cmd -> i		8031598						
ANR	8031639	Symbol	i		8031598						
ANR	8031640	Symbol	cmd		8031598						
ANR	8031641	Symbol	* cmd		8031598						
ANR	8031642	Symbol	* ip		8031598						
ANR	8031643	Function	action_source	456:0:14780:15023							
ANR	8031644	FunctionDef	"action_source (FILE * in , const pcl_Command * cmd , void * i)"		8031643	0					
ANR	8031645	CompoundStatement		457:0:14848:15023	8031643	0					
ANR	8031646	IdentifierDeclStatement	CollectedInfo * ip = i ;	458:2:14852:14873	8031643	0	True				
ANR	8031647	IdentifierDecl	* ip = i		8031643	0					
ANR	8031648	IdentifierDeclType	CollectedInfo *		8031643	0					
ANR	8031649	Identifier	ip		8031643	1					
ANR	8031650	AssignmentExpression	* ip = i		8031643	2		=			
ANR	8031651	Identifier	i		8031643	0					
ANR	8031652	Identifier	i		8031643	1					
ANR	8031653	IfStatement	if ( cmd -> i != 0 && cmd -> i != - 2 )		8031643	1					
ANR	8031654	Condition	cmd -> i != 0 && cmd -> i != - 2	460:6:14882:14908	8031643	0	True				
ANR	8031655	AndExpression	cmd -> i != 0 && cmd -> i != - 2		8031643	0		&&			
ANR	8031656	EqualityExpression	cmd -> i != 0		8031643	0		!=			
ANR	8031657	PtrMemberAccess	cmd -> i		8031643	0					
ANR	8031658	Identifier	cmd		8031643	0					
ANR	8031659	Identifier	i		8031643	1					
ANR	8031660	PrimaryExpression	0		8031643	1					
ANR	8031661	EqualityExpression	cmd -> i != - 2		8031643	1		!=			
ANR	8031662	PtrMemberAccess	cmd -> i		8031643	0					
ANR	8031663	Identifier	cmd		8031643	0					
ANR	8031664	Identifier	i		8031643	1					
ANR	8031665	UnaryOperationExpression	- 2		8031643	1					
ANR	8031666	UnaryOperator	-		8031643	0					
ANR	8031667	PrimaryExpression	2		8031643	1					
ANR	8031668	CompoundStatement		4:35:62:62	8031643	1					
ANR	8031669	IfStatement	if ( cmd -> i == 2 )		8031643	0					
ANR	8031670	Condition	cmd -> i == 2	461:8:14921:14931	8031643	0	True				
ANR	8031671	EqualityExpression	cmd -> i == 2		8031643	0		==			
ANR	8031672	PtrMemberAccess	cmd -> i		8031643	0					
ANR	8031673	Identifier	cmd		8031643	0					
ANR	8031674	Identifier	i		8031643	1					
ANR	8031675	PrimaryExpression	2		8031643	1					
ANR	8031676	ExpressionStatement	ip -> fdata . manual_feed = TRUE	461:21:14934:14962	8031643	1	True				
ANR	8031677	AssignmentExpression	ip -> fdata . manual_feed = TRUE		8031643	0		=			
ANR	8031678	MemberAccess	ip -> fdata . manual_feed		8031643	0					
ANR	8031679	PtrMemberAccess	ip -> fdata		8031643	0					
ANR	8031680	Identifier	ip		8031643	0					
ANR	8031681	Identifier	fdata		8031643	1					
ANR	8031682	Identifier	manual_feed		8031643	1					
ANR	8031683	Identifier	TRUE		8031643	1					
ANR	8031684	ElseStatement	else		8031643	0					
ANR	8031685	ExpressionStatement	ip -> fdata . media_source = cmd -> i	462:9:14973:15004	8031643	0	True				
ANR	8031686	AssignmentExpression	ip -> fdata . media_source = cmd -> i		8031643	0		=			
ANR	8031687	MemberAccess	ip -> fdata . media_source		8031643	0					
ANR	8031688	PtrMemberAccess	ip -> fdata		8031643	0					
ANR	8031689	Identifier	ip		8031643	0					
ANR	8031690	Identifier	fdata		8031643	1					
ANR	8031691	Identifier	media_source		8031643	1					
ANR	8031692	PtrMemberAccess	cmd -> i		8031643	1					
ANR	8031693	Identifier	cmd		8031643	0					
ANR	8031694	Identifier	i		8031643	1					
ANR	8031695	ReturnStatement	return 0 ;	465:2:15013:15021	8031643	2	True				
ANR	8031696	PrimaryExpression	0		8031643	0					
ANR	8031697	ReturnType	static int		8031643	1					
ANR	8031698	Identifier	action_source		8031643	2					
ANR	8031699	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8031643	3					
ANR	8031700	Parameter	FILE * in	456:25:14805:14812	8031643	0	True				
ANR	8031701	ParameterType	FILE *		8031643	0					
ANR	8031702	Identifier	in		8031643	1					
ANR	8031703	Parameter	const pcl_Command * cmd	456:35:14815:14836	8031643	1	True				
ANR	8031704	ParameterType	const pcl_Command *		8031643	0					
ANR	8031705	Identifier	cmd		8031643	1					
ANR	8031706	Parameter	void * i	456:59:14839:14845	8031643	2	True				
ANR	8031707	ParameterType	void *		8031643	0					
ANR	8031708	Identifier	i		8031643	1					
ANR	8031709	CFGEntryNode	ENTRY		8031643		True				
ANR	8031710	CFGExitNode	EXIT		8031643		True				
ANR	8031711	Symbol	ip -> fdata		8031643						
ANR	8031712	Symbol	in		8031643						
ANR	8031713	Symbol	ip -> fdata . media_source		8031643						
ANR	8031714	Symbol	ip		8031643						
ANR	8031715	Symbol	cmd -> i		8031643						
ANR	8031716	Symbol	i		8031643						
ANR	8031717	Symbol	TRUE		8031643						
ANR	8031718	Symbol	cmd		8031643						
ANR	8031719	Symbol	* cmd		8031643						
ANR	8031720	Symbol	ip -> fdata . manual_feed		8031643						
ANR	8031721	Symbol	* ip		8031643						
ANR	8031722	Function	action_media_type	470:0:15107:15284							
ANR	8031723	FunctionDef	"action_media_type (FILE * in , const pcl_Command * cmd , void * i)"		8031722	0					
ANR	8031724	CompoundStatement		471:0:15179:15284	8031722	0					
ANR	8031725	IdentifierDeclStatement	CollectedInfo * ip = i ;	472:2:15183:15204	8031722	0	True				
ANR	8031726	IdentifierDecl	* ip = i		8031722	0					
ANR	8031727	IdentifierDeclType	CollectedInfo *		8031722	0					
ANR	8031728	Identifier	ip		8031722	1					
ANR	8031729	AssignmentExpression	* ip = i		8031722	2		=			
ANR	8031730	Identifier	i		8031722	0					
ANR	8031731	Identifier	i		8031722	1					
ANR	8031732	ExpressionStatement	ip -> seen_new_quality = TRUE	474:2:15209:15236	8031722	1	True				
ANR	8031733	AssignmentExpression	ip -> seen_new_quality = TRUE		8031722	0		=			
ANR	8031734	PtrMemberAccess	ip -> seen_new_quality		8031722	0					
ANR	8031735	Identifier	ip		8031722	0					
ANR	8031736	Identifier	seen_new_quality		8031722	1					
ANR	8031737	Identifier	TRUE		8031722	1					
ANR	8031738	ExpressionStatement	ip -> fdata . media_type = cmd -> i	475:2:15240:15269	8031722	2	True				
ANR	8031739	AssignmentExpression	ip -> fdata . media_type = cmd -> i		8031722	0		=			
ANR	8031740	MemberAccess	ip -> fdata . media_type		8031722	0					
ANR	8031741	PtrMemberAccess	ip -> fdata		8031722	0					
ANR	8031742	Identifier	ip		8031722	0					
ANR	8031743	Identifier	fdata		8031722	1					
ANR	8031744	Identifier	media_type		8031722	1					
ANR	8031745	PtrMemberAccess	cmd -> i		8031722	1					
ANR	8031746	Identifier	cmd		8031722	0					
ANR	8031747	Identifier	i		8031722	1					
ANR	8031748	ReturnStatement	return 0 ;	477:2:15274:15282	8031722	3	True				
ANR	8031749	PrimaryExpression	0		8031722	0					
ANR	8031750	ReturnType	static int		8031722	1					
ANR	8031751	Identifier	action_media_type		8031722	2					
ANR	8031752	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8031722	3					
ANR	8031753	Parameter	FILE * in	470:29:15136:15143	8031722	0	True				
ANR	8031754	ParameterType	FILE *		8031722	0					
ANR	8031755	Identifier	in		8031722	1					
ANR	8031756	Parameter	const pcl_Command * cmd	470:39:15146:15167	8031722	1	True				
ANR	8031757	ParameterType	const pcl_Command *		8031722	0					
ANR	8031758	Identifier	cmd		8031722	1					
ANR	8031759	Parameter	void * i	470:63:15170:15176	8031722	2	True				
ANR	8031760	ParameterType	void *		8031722	0					
ANR	8031761	Identifier	i		8031722	1					
ANR	8031762	CFGEntryNode	ENTRY		8031722		True				
ANR	8031763	CFGExitNode	EXIT		8031722		True				
ANR	8031764	Symbol	ip -> seen_new_quality		8031722						
ANR	8031765	Symbol	ip -> fdata		8031722						
ANR	8031766	Symbol	in		8031722						
ANR	8031767	Symbol	ip		8031722						
ANR	8031768	Symbol	cmd -> i		8031722						
ANR	8031769	Symbol	i		8031722						
ANR	8031770	Symbol	TRUE		8031722						
ANR	8031771	Symbol	ip -> fdata . media_type		8031722						
ANR	8031772	Symbol	cmd		8031722						
ANR	8031773	Symbol	* cmd		8031722						
ANR	8031774	Symbol	* ip		8031722						
ANR	8031775	Function	action_duplex	482:0:15368:15722							
ANR	8031776	FunctionDef	"action_duplex (FILE * in , const pcl_Command * cmd , void * i)"		8031775	0					
ANR	8031777	CompoundStatement		483:0:15436:15722	8031775	0					
ANR	8031778	IdentifierDeclStatement	CollectedInfo * ip = i ;	484:2:15461:15482	8031775	0	True				
ANR	8031779	IdentifierDecl	* ip = i		8031775	0					
ANR	8031780	IdentifierDeclType	CollectedInfo *		8031775	0					
ANR	8031781	Identifier	ip		8031775	1					
ANR	8031782	AssignmentExpression	* ip = i		8031775	2		=			
ANR	8031783	Identifier	i		8031775	0					
ANR	8031784	Identifier	i		8031775	1					
ANR	8031785	ExpressionStatement	ip -> fdata . duplex = cmd -> i	486:2:15487:15512	8031775	1	True				
ANR	8031786	AssignmentExpression	ip -> fdata . duplex = cmd -> i		8031775	0		=			
ANR	8031787	MemberAccess	ip -> fdata . duplex		8031775	0					
ANR	8031788	PtrMemberAccess	ip -> fdata		8031775	0					
ANR	8031789	Identifier	ip		8031775	0					
ANR	8031790	Identifier	fdata		8031775	1					
ANR	8031791	Identifier	duplex		8031775	1					
ANR	8031792	PtrMemberAccess	cmd -> i		8031775	1					
ANR	8031793	Identifier	cmd		8031775	0					
ANR	8031794	Identifier	i		8031775	1					
ANR	8031795	IfStatement	if ( ip -> fdata . duplex < 0 || 2 < ip -> fdata . duplex )		8031775	2					
ANR	8031796	Condition	ip -> fdata . duplex < 0 || 2 < ip -> fdata . duplex	487:6:15520:15563	8031775	0	True				
ANR	8031797	OrExpression	ip -> fdata . duplex < 0 || 2 < ip -> fdata . duplex		8031775	0		||			
ANR	8031798	RelationalExpression	ip -> fdata . duplex < 0		8031775	0		<			
ANR	8031799	MemberAccess	ip -> fdata . duplex		8031775	0					
ANR	8031800	PtrMemberAccess	ip -> fdata		8031775	0					
ANR	8031801	Identifier	ip		8031775	0					
ANR	8031802	Identifier	fdata		8031775	1					
ANR	8031803	Identifier	duplex		8031775	1					
ANR	8031804	PrimaryExpression	0		8031775	1					
ANR	8031805	RelationalExpression	2 < ip -> fdata . duplex		8031775	1		<			
ANR	8031806	PrimaryExpression	2		8031775	0					
ANR	8031807	MemberAccess	ip -> fdata . duplex		8031775	1					
ANR	8031808	PtrMemberAccess	ip -> fdata		8031775	0					
ANR	8031809	Identifier	ip		8031775	0					
ANR	8031810	Identifier	fdata		8031775	1					
ANR	8031811	Identifier	duplex		8031775	1					
ANR	8031812	Statement	imessage	488:4:15570:15577	8031775	1	True				
ANR	8031813	Statement	(	488:12:15578:15578	8031775	3	True				
ANR	8031814	Statement	ip	488:13:15579:15580	8031775	4	True				
ANR	8031815	Statement	->	488:15:15581:15582	8031775	5	True				
ANR	8031816	Statement	out	488:17:15583:15585	8031775	6	True				
ANR	8031817	Statement	","	488:20:15586:15586	8031775	7	True				
ANR	8031818	Statement	60	488:22:15588:15589	8031775	8	True				
ANR	8031819	Statement	","	488:24:15590:15590	8031775	9	True				
ANR	8031820	Statement	"""I've found an unknown value for the command to """	488:26:15592:15640	8031775	10	True				
ANR	8031821	Statement	"""select\\nsimplex/duplex printing: %d.\\n"""	489:6:15648:15687	8031775	11	True				
ANR	8031822	Statement	","	489:46:15688:15688	8031775	12	True				
ANR	8031823	Statement	ip	489:48:15690:15691	8031775	13	True				
ANR	8031824	Statement	->	489:50:15692:15693	8031775	14	True				
ANR	8031825	Statement	fdata	489:52:15694:15698	8031775	15	True				
ANR	8031826	Statement	.	489:57:15699:15699	8031775	16	True				
ANR	8031827	Statement	duplex	489:58:15700:15705	8031775	17	True				
ANR	8031828	Statement	)	489:64:15706:15706	8031775	18	True				
ANR	8031829	ExpressionStatement		489:65:15707:15707	8031775	19	True				
ANR	8031830	ReturnStatement	return 0 ;	491:2:15712:15720	8031775	20	True				
ANR	8031831	PrimaryExpression	0		8031775	0					
ANR	8031832	ReturnType	static int		8031775	1					
ANR	8031833	Identifier	action_duplex		8031775	2					
ANR	8031834	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8031775	3					
ANR	8031835	Parameter	FILE * in	482:25:15393:15400	8031775	0	True				
ANR	8031836	ParameterType	FILE *		8031775	0					
ANR	8031837	Identifier	in		8031775	1					
ANR	8031838	Parameter	const pcl_Command * cmd	482:35:15403:15424	8031775	1	True				
ANR	8031839	ParameterType	const pcl_Command *		8031775	0					
ANR	8031840	Identifier	cmd		8031775	1					
ANR	8031841	Parameter	void * i	482:59:15427:15433	8031775	2	True				
ANR	8031842	ParameterType	void *		8031775	0					
ANR	8031843	Identifier	i		8031775	1					
ANR	8031844	CFGEntryNode	ENTRY		8031775		True				
ANR	8031845	CFGExitNode	EXIT		8031775		True				
ANR	8031846	Symbol	ip -> fdata		8031775						
ANR	8031847	Symbol	ip -> fdata . duplex		8031775						
ANR	8031848	Symbol	in		8031775						
ANR	8031849	Symbol	ip		8031775						
ANR	8031850	Symbol	cmd -> i		8031775						
ANR	8031851	Symbol	i		8031775						
ANR	8031852	Symbol	cmd		8031775						
ANR	8031853	Symbol	* cmd		8031775						
ANR	8031854	Symbol	* ip		8031775						
ANR	8031855	Function	check_prefix	510:0:16272:17458							
ANR	8031856	FunctionDef	check_prefix (FILE * in)		8031855	0					
ANR	8031857	CompoundStatement		511:0:16306:17458	8031855	0					
ANR	8031858	Statement	static	512:2:16310:16315	8031855	0	True				
ANR	8031859	IdentifierDeclStatement	"const pcl_Octet prefix [ ] = ""@PJL"" ;"	512:9:16317:16350	8031855	1	True				
ANR	8031860	IdentifierDecl	"prefix [ ] = ""@PJL"""		8031855	0					
ANR	8031861	IdentifierDeclType	const pcl_Octet [ ]		8031855	0					
ANR	8031862	Identifier	prefix		8031855	1					
ANR	8031863	AssignmentExpression	"prefix [ ] = ""@PJL"""		8031855	2		=			
ANR	8031864	Identifier	prefix		8031855	0					
ANR	8031865	PrimaryExpression	"""@PJL"""		8031855	1					
ANR	8031866	IdentifierDeclStatement	"int c , j ;"	514:2:16428:16436	8031855	2	True				
ANR	8031867	IdentifierDecl	c		8031855	0					
ANR	8031868	IdentifierDeclType	int		8031855	0					
ANR	8031869	Identifier	c		8031855	1					
ANR	8031870	IdentifierDecl	j		8031855	1					
ANR	8031871	IdentifierDeclType	int		8031855	0					
ANR	8031872	Identifier	j		8031855	1					
ANR	8031873	ExpressionStatement	j = 0	517:2:16497:16502	8031855	3	True				
ANR	8031874	AssignmentExpression	j = 0		8031855	0		=			
ANR	8031875	Identifier	j		8031855	0					
ANR	8031876	PrimaryExpression	0		8031855	1					
ANR	8031877	WhileStatement	while ( j < 4 && ( c = fgetc ( in ) ) == prefix [ j ] )		8031855	4					
ANR	8031878	Condition	j < 4 && ( c = fgetc ( in ) ) == prefix [ j ]	518:9:16554:16590	8031855	0	True				
ANR	8031879	AndExpression	j < 4 && ( c = fgetc ( in ) ) == prefix [ j ]		8031855	0		&&			
ANR	8031880	RelationalExpression	j < 4		8031855	0		<			
ANR	8031881	Identifier	j		8031855	0					
ANR	8031882	PrimaryExpression	4		8031855	1					
ANR	8031883	EqualityExpression	( c = fgetc ( in ) ) == prefix [ j ]		8031855	1		==			
ANR	8031884	AssignmentExpression	c = fgetc ( in )		8031855	0		=			
ANR	8031885	Identifier	c		8031855	0					
ANR	8031886	CallExpression	fgetc ( in )		8031855	1					
ANR	8031887	Callee	fgetc		8031855	0					
ANR	8031888	Identifier	fgetc		8031855	0					
ANR	8031889	ArgumentList	in		8031855	1					
ANR	8031890	Argument	in		8031855	0					
ANR	8031891	Identifier	in		8031855	0					
ANR	8031892	ArrayIndexing	prefix [ j ]		8031855	1					
ANR	8031893	Identifier	prefix		8031855	0					
ANR	8031894	Identifier	j		8031855	1					
ANR	8031895	ExpressionStatement	j ++	518:48:16593:16596	8031855	1	True				
ANR	8031896	PostIncDecOperationExpression	j ++		8031855	0					
ANR	8031897	Identifier	j		8031855	0					
ANR	8031898	IncDec	++		8031855	1					
ANR	8031899	IfStatement	if ( j == 4 )		8031855	5					
ANR	8031900	Condition	j == 4	519:6:16604:16609	8031855	0	True				
ANR	8031901	EqualityExpression	j == 4		8031855	0		==			
ANR	8031902	Identifier	j		8031855	0					
ANR	8031903	PrimaryExpression	4		8031855	1					
ANR	8031904	CompoundStatement		9:14:305:305	8031855	1					
ANR	8031905	ExpressionStatement	c = fgetc ( in )	520:4:16618:16631	8031855	0	True				
ANR	8031906	AssignmentExpression	c = fgetc ( in )		8031855	0		=			
ANR	8031907	Identifier	c		8031855	0					
ANR	8031908	CallExpression	fgetc ( in )		8031855	1					
ANR	8031909	Callee	fgetc		8031855	0					
ANR	8031910	Identifier	fgetc		8031855	0					
ANR	8031911	ArgumentList	in		8031855	1					
ANR	8031912	Argument	in		8031855	0					
ANR	8031913	Identifier	in		8031855	0					
ANR	8031914	IfStatement	if ( PJL_ws ( c ) || c == '\\r' || c == '\\n' )		8031855	1					
ANR	8031915	Condition	PJL_ws ( c ) || c == '\\r' || c == '\\n'	521:8:16641:16675	8031855	0	True				
ANR	8031916	OrExpression	PJL_ws ( c ) || c == '\\r' || c == '\\n'		8031855	0		||			
ANR	8031917	CallExpression	PJL_ws ( c )		8031855	0					
ANR	8031918	Callee	PJL_ws		8031855	0					
ANR	8031919	Identifier	PJL_ws		8031855	0					
ANR	8031920	ArgumentList	c		8031855	1					
ANR	8031921	Argument	c		8031855	0					
ANR	8031922	Identifier	c		8031855	0					
ANR	8031923	OrExpression	c == '\\r' || c == '\\n'		8031855	1		||			
ANR	8031924	EqualityExpression	c == '\\r'		8031855	0		==			
ANR	8031925	Identifier	c		8031855	0					
ANR	8031926	PrimaryExpression	'\\r'		8031855	1					
ANR	8031927	EqualityExpression	c == '\\n'		8031855	1		==			
ANR	8031928	Identifier	c		8031855	0					
ANR	8031929	PrimaryExpression	'\\n'		8031855	1					
ANR	8031930	ExpressionStatement	j ++	521:45:16678:16681	8031855	1	True				
ANR	8031931	PostIncDecOperationExpression	j ++		8031855	0					
ANR	8031932	Identifier	j		8031855	0					
ANR	8031933	IncDec	++		8031855	1					
ANR	8031934	IfStatement	if ( j < 5 )		8031855	6					
ANR	8031935	Condition	j < 5	526:6:16873:16877	8031855	0	True				
ANR	8031936	RelationalExpression	j < 5		8031855	0		<			
ANR	8031937	Identifier	j		8031855	0					
ANR	8031938	PrimaryExpression	5		8031855	1					
ANR	8031939	CompoundStatement		16:13:573:573	8031855	1					
ANR	8031940	IfStatement	if ( c != EOF )		8031855	0					
ANR	8031941	Condition	c != EOF	528:8:16963:16970	8031855	0	True				
ANR	8031942	EqualityExpression	c != EOF		8031855	0		!=			
ANR	8031943	Identifier	c		8031855	0					
ANR	8031944	Identifier	EOF		8031855	1					
ANR	8031945	ExpressionStatement	"ungetc ( c , in )"	528:18:16973:16986	8031855	1	True				
ANR	8031946	CallExpression	"ungetc ( c , in )"		8031855	0					
ANR	8031947	Callee	ungetc		8031855	0					
ANR	8031948	Identifier	ungetc		8031855	0					
ANR	8031949	ArgumentList	c		8031855	1					
ANR	8031950	Argument	c		8031855	0					
ANR	8031951	Identifier	c		8031855	0					
ANR	8031952	Argument	in		8031855	1					
ANR	8031953	Identifier	in		8031855	0					
ANR	8031954	WhileStatement	while ( j > 0 )		8031855	1					
ANR	8031955	Condition	j > 0	529:11:16999:17003	8031855	0	True				
ANR	8031956	RelationalExpression	j > 0		8031855	0		>			
ANR	8031957	Identifier	j		8031855	0					
ANR	8031958	PrimaryExpression	0		8031855	1					
ANR	8031959	CompoundStatement		19:18:699:699	8031855	1					
ANR	8031960	ExpressionStatement	j --	530:6:17014:17017	8031855	0	True				
ANR	8031961	PostIncDecOperationExpression	j --		8031855	0					
ANR	8031962	Identifier	j		8031855	0					
ANR	8031963	IncDec	--		8031855	1					
ANR	8031964	IfStatement	"if ( ungetc ( prefix [ j ] , in ) == EOF )"		8031855	1					
ANR	8031965	Condition	"ungetc ( prefix [ j ] , in ) == EOF"	531:10:17029:17056	8031855	0	True				
ANR	8031966	EqualityExpression	"ungetc ( prefix [ j ] , in ) == EOF"		8031855	0		==			
ANR	8031967	CallExpression	"ungetc ( prefix [ j ] , in )"		8031855	0					
ANR	8031968	Callee	ungetc		8031855	0					
ANR	8031969	Identifier	ungetc		8031855	0					
ANR	8031970	ArgumentList	prefix [ j ]		8031855	1					
ANR	8031971	Argument	prefix [ j ]		8031855	0					
ANR	8031972	ArrayIndexing	prefix [ j ]		8031855	0					
ANR	8031973	Identifier	prefix		8031855	0					
ANR	8031974	Identifier	j		8031855	1					
ANR	8031975	Argument	in		8031855	1					
ANR	8031976	Identifier	in		8031855	0					
ANR	8031977	Identifier	EOF		8031855	1					
ANR	8031978	CompoundStatement		21:40:752:752	8031855	1					
ANR	8031979	ExpressionStatement	"emessage ( 80 , ""Error trying to push back characters while parsing PJL:\\n  %s.\\n"" , strerror ( errno ) )"	532:8:17069:17186	8031855	0	True				
ANR	8031980	CallExpression	"emessage ( 80 , ""Error trying to push back characters while parsing PJL:\\n  %s.\\n"" , strerror ( errno ) )"		8031855	0					
ANR	8031981	Callee	emessage		8031855	0					
ANR	8031982	Identifier	emessage		8031855	0					
ANR	8031983	ArgumentList	80		8031855	1					
ANR	8031984	Argument	80		8031855	0					
ANR	8031985	PrimaryExpression	80		8031855	0					
ANR	8031986	Argument	"""Error trying to push back characters while parsing PJL:\\n  %s.\\n"""		8031855	1					
ANR	8031987	PrimaryExpression	"""Error trying to push back characters while parsing PJL:\\n  %s.\\n"""		8031855	0					
ANR	8031988	Argument	strerror ( errno )		8031855	2					
ANR	8031989	CallExpression	strerror ( errno )		8031855	0					
ANR	8031990	Callee	strerror		8031855	0					
ANR	8031991	Identifier	strerror		8031855	0					
ANR	8031992	ArgumentList	errno		8031855	1					
ANR	8031993	Argument	errno		8031855	0					
ANR	8031994	Identifier	errno		8031855	0					
ANR	8031995	ReturnStatement	return - 1 ;	537:8:17313:17322	8031855	1	True				
ANR	8031996	UnaryOperationExpression	- 1		8031855	0					
ANR	8031997	UnaryOperator	-		8031855	0					
ANR	8031998	PrimaryExpression	1		8031855	1					
ANR	8031999	ReturnStatement	return 1 ;	541:4:17343:17351	8031855	2	True				
ANR	8032000	PrimaryExpression	1		8031855	0					
ANR	8032001	IfStatement	if ( c == '\\n' )		8031855	7					
ANR	8032002	Condition	c == '\\n'	545:6:17419:17427	8031855	0	True				
ANR	8032003	EqualityExpression	c == '\\n'		8031855	0		==			
ANR	8032004	Identifier	c		8031855	0					
ANR	8032005	PrimaryExpression	'\\n'		8031855	1					
ANR	8032006	ExpressionStatement	"ungetc ( c , in )"	545:17:17430:17443	8031855	1	True				
ANR	8032007	CallExpression	"ungetc ( c , in )"		8031855	0					
ANR	8032008	Callee	ungetc		8031855	0					
ANR	8032009	Identifier	ungetc		8031855	0					
ANR	8032010	ArgumentList	c		8031855	1					
ANR	8032011	Argument	c		8031855	0					
ANR	8032012	Identifier	c		8031855	0					
ANR	8032013	Argument	in		8031855	1					
ANR	8032014	Identifier	in		8031855	0					
ANR	8032015	ReturnStatement	return 0 ;	547:2:17448:17456	8031855	8	True				
ANR	8032016	PrimaryExpression	0		8031855	0					
ANR	8032017	ReturnType	static int		8031855	1					
ANR	8032018	Identifier	check_prefix		8031855	2					
ANR	8032019	ParameterList	FILE * in		8031855	3					
ANR	8032020	Parameter	FILE * in	510:24:16296:16303	8031855	0	True				
ANR	8032021	ParameterType	FILE *		8031855	0					
ANR	8032022	Identifier	in		8031855	1					
ANR	8032023	CFGEntryNode	ENTRY		8031855		True				
ANR	8032024	CFGExitNode	EXIT		8031855		True				
ANR	8032025	Symbol	strerror		8031855						
ANR	8032026	Symbol	errno		8031855						
ANR	8032027	Symbol	c		8031855						
ANR	8032028	Symbol	PJL_ws		8031855						
ANR	8032029	Symbol	ungetc		8031855						
ANR	8032030	Symbol	* j		8031855						
ANR	8032031	Symbol	in		8031855						
ANR	8032032	Symbol	* prefix		8031855						
ANR	8032033	Symbol	prefix		8031855						
ANR	8032034	Symbol	j		8031855						
ANR	8032035	Symbol	EOF		8031855						
ANR	8032036	Symbol	fgetc		8031855						
ANR	8032037	Function	action_UEL	558:0:17724:20812							
ANR	8032038	FunctionDef	"action_UEL (FILE * in , const pcl_Command * cmd , void * i)"		8032037	0					
ANR	8032039	CompoundStatement		559:0:17789:20812	8032037	0					
ANR	8032040	IdentifierDeclStatement	CollectedInfo * ip = i ;	560:2:17793:17814	8032037	0	True				
ANR	8032041	IdentifierDecl	* ip = i		8032037	0					
ANR	8032042	IdentifierDeclType	CollectedInfo *		8032037	0					
ANR	8032043	Identifier	ip		8032037	1					
ANR	8032044	AssignmentExpression	* ip = i		8032037	2		=			
ANR	8032045	Identifier	i		8032037	0					
ANR	8032046	Identifier	i		8032037	1					
ANR	8032047	IdentifierDeclStatement	int c ;	561:2:17818:17823	8032037	1	True				
ANR	8032048	IdentifierDecl	c		8032037	0					
ANR	8032049	IdentifierDeclType	int		8032037	0					
ANR	8032050	Identifier	c		8032037	1					
ANR	8032051	IdentifierDeclStatement	"pcl_Octet * buffer , * s ;"	562:2:17827:17848	8032037	2	True				
ANR	8032052	IdentifierDecl	* buffer		8032037	0					
ANR	8032053	IdentifierDeclType	pcl_Octet *		8032037	0					
ANR	8032054	Identifier	buffer		8032037	1					
ANR	8032055	IdentifierDecl	* s		8032037	1					
ANR	8032056	IdentifierDeclType	pcl_Octet *		8032037	0					
ANR	8032057	Identifier	s		8032037	1					
ANR	8032058	IdentifierDeclStatement	"size_t allocated , used ;"	563:2:17852:17874	8032037	3	True				
ANR	8032059	IdentifierDecl	allocated		8032037	0					
ANR	8032060	IdentifierDeclType	size_t		8032037	0					
ANR	8032061	Identifier	allocated		8032037	1					
ANR	8032062	IdentifierDecl	used		8032037	1					
ANR	8032063	IdentifierDeclType	size_t		8032037	0					
ANR	8032064	Identifier	used		8032037	1					
ANR	8032065	IfStatement	if ( cmd -> i != 12345 )		8032037	4					
ANR	8032066	Condition	cmd -> i != 12345	565:6:17883:17897	8032037	0	True				
ANR	8032067	EqualityExpression	cmd -> i != 12345		8032037	0		!=			
ANR	8032068	PtrMemberAccess	cmd -> i		8032037	0					
ANR	8032069	Identifier	cmd		8032037	0					
ANR	8032070	Identifier	i		8032037	1					
ANR	8032071	PrimaryExpression	12345		8032037	1					
ANR	8032072	ReturnStatement	return 1 ;	565:23:17900:17908	8032037	1	True				
ANR	8032073	PrimaryExpression	1		8032037	0					
ANR	8032074	IfStatement	if ( ip -> fdata . PJL_language != NULL )		8032037	5					
ANR	8032075	Condition	ip -> fdata . PJL_language != NULL	568:6:17989:18018	8032037	0	True				
ANR	8032076	EqualityExpression	ip -> fdata . PJL_language != NULL		8032037	0		!=			
ANR	8032077	MemberAccess	ip -> fdata . PJL_language		8032037	0					
ANR	8032078	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032079	Identifier	ip		8032037	0					
ANR	8032080	Identifier	fdata		8032037	1					
ANR	8032081	Identifier	PJL_language		8032037	1					
ANR	8032082	Identifier	NULL		8032037	1					
ANR	8032083	CompoundStatement		10:38:231:231	8032037	1					
ANR	8032084	ExpressionStatement	free ( ip -> fdata . PJL_language )	569:4:18027:18055	8032037	0	True				
ANR	8032085	CallExpression	free ( ip -> fdata . PJL_language )		8032037	0					
ANR	8032086	Callee	free		8032037	0					
ANR	8032087	Identifier	free		8032037	0					
ANR	8032088	ArgumentList	ip -> fdata . PJL_language		8032037	1					
ANR	8032089	Argument	ip -> fdata . PJL_language		8032037	0					
ANR	8032090	MemberAccess	ip -> fdata . PJL_language		8032037	0					
ANR	8032091	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032092	Identifier	ip		8032037	0					
ANR	8032093	Identifier	fdata		8032037	1					
ANR	8032094	Identifier	PJL_language		8032037	1					
ANR	8032095	ExpressionStatement	ip -> fdata . PJL_language = NULL	569:34:18057:18086	8032037	1	True				
ANR	8032096	AssignmentExpression	ip -> fdata . PJL_language = NULL		8032037	0		=			
ANR	8032097	MemberAccess	ip -> fdata . PJL_language		8032037	0					
ANR	8032098	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032099	Identifier	ip		8032037	0					
ANR	8032100	Identifier	fdata		8032037	1					
ANR	8032101	Identifier	PJL_language		8032037	1					
ANR	8032102	Identifier	NULL		8032037	1					
ANR	8032103	ExpressionStatement	buffer = ( pcl_Octet * ) malloc ( TILE_SIZE )	572:2:18095:18134	8032037	6	True				
ANR	8032104	AssignmentExpression	buffer = ( pcl_Octet * ) malloc ( TILE_SIZE )		8032037	0		=			
ANR	8032105	Identifier	buffer		8032037	0					
ANR	8032106	CastExpression	( pcl_Octet * ) malloc ( TILE_SIZE )		8032037	1					
ANR	8032107	CastTarget	pcl_Octet *		8032037	0					
ANR	8032108	CallExpression	malloc ( TILE_SIZE )		8032037	1					
ANR	8032109	Callee	malloc		8032037	0					
ANR	8032110	Identifier	malloc		8032037	0					
ANR	8032111	ArgumentList	TILE_SIZE		8032037	1					
ANR	8032112	Argument	TILE_SIZE		8032037	0					
ANR	8032113	Identifier	TILE_SIZE		8032037	0					
ANR	8032114	ExpressionStatement	check ( buffer )	573:2:18138:18151	8032037	7	True				
ANR	8032115	CallExpression	check ( buffer )		8032037	0					
ANR	8032116	Callee	check		8032037	0					
ANR	8032117	Identifier	check		8032037	0					
ANR	8032118	ArgumentList	buffer		8032037	1					
ANR	8032119	Argument	buffer		8032037	0					
ANR	8032120	Identifier	buffer		8032037	0					
ANR	8032121	ExpressionStatement	allocated = TILE_SIZE	574:2:18155:18176	8032037	8	True				
ANR	8032122	AssignmentExpression	allocated = TILE_SIZE		8032037	0		=			
ANR	8032123	Identifier	allocated		8032037	0					
ANR	8032124	Identifier	TILE_SIZE		8032037	1					
ANR	8032125	DoStatement	do		8032037	9					
ANR	8032126	CompoundStatement		19:5:469:469	8032037	0					
ANR	8032127	ExpressionStatement	c = check_prefix ( in )	578:4:18265:18285	8032037	0	True				
ANR	8032128	AssignmentExpression	c = check_prefix ( in )		8032037	0		=			
ANR	8032129	Identifier	c		8032037	0					
ANR	8032130	CallExpression	check_prefix ( in )		8032037	1					
ANR	8032131	Callee	check_prefix		8032037	0					
ANR	8032132	Identifier	check_prefix		8032037	0					
ANR	8032133	ArgumentList	in		8032037	1					
ANR	8032134	Argument	in		8032037	0					
ANR	8032135	Identifier	in		8032037	0					
ANR	8032136	IfStatement	if ( c != 0 )		8032037	1					
ANR	8032137	Condition	c != 0	579:8:18295:18300	8032037	0	True				
ANR	8032138	EqualityExpression	c != 0		8032037	0		!=			
ANR	8032139	Identifier	c		8032037	0					
ANR	8032140	PrimaryExpression	0		8032037	1					
ANR	8032141	ExpressionStatement	c = EOF	579:16:18303:18310	8032037	1	True				
ANR	8032142	AssignmentExpression	c = EOF		8032037	0		=			
ANR	8032143	Identifier	c		8032037	0					
ANR	8032144	Identifier	EOF		8032037	1					
ANR	8032145	ElseStatement	else		8032037	0					
ANR	8032146	CompoundStatement		22:9:531:531	8032037	0					
ANR	8032147	ExpressionStatement	used = 0	582:6:18363:18371	8032037	0	True				
ANR	8032148	AssignmentExpression	used = 0		8032037	0		=			
ANR	8032149	Identifier	used		8032037	0					
ANR	8032150	PrimaryExpression	0		8032037	1					
ANR	8032151	WhileStatement	while ( ( c = fgetc ( in ) ) != EOF && c != '\\n' )		8032037	1					
ANR	8032152	Condition	( c = fgetc ( in ) ) != EOF && c != '\\n'	583:13:18386:18420	8032037	0	True				
ANR	8032153	AndExpression	( c = fgetc ( in ) ) != EOF && c != '\\n'		8032037	0		&&			
ANR	8032154	EqualityExpression	( c = fgetc ( in ) ) != EOF		8032037	0		!=			
ANR	8032155	AssignmentExpression	c = fgetc ( in )		8032037	0		=			
ANR	8032156	Identifier	c		8032037	0					
ANR	8032157	CallExpression	fgetc ( in )		8032037	1					
ANR	8032158	Callee	fgetc		8032037	0					
ANR	8032159	Identifier	fgetc		8032037	0					
ANR	8032160	ArgumentList	in		8032037	1					
ANR	8032161	Argument	in		8032037	0					
ANR	8032162	Identifier	in		8032037	0					
ANR	8032163	Identifier	EOF		8032037	1					
ANR	8032164	EqualityExpression	c != '\\n'		8032037	1		!=			
ANR	8032165	Identifier	c		8032037	0					
ANR	8032166	PrimaryExpression	'\\n'		8032037	1					
ANR	8032167	CompoundStatement		25:50:633:633	8032037	1					
ANR	8032168	IfStatement	if ( used >= allocated - 1 )		8032037	0					
ANR	8032169	Condition	used >= allocated - 1	584:12:18437:18457	8032037	0	True				
ANR	8032170	RelationalExpression	used >= allocated - 1		8032037	0		>=			
ANR	8032171	Identifier	used		8032037	0					
ANR	8032172	AdditiveExpression	allocated - 1		8032037	1		-			
ANR	8032173	Identifier	allocated		8032037	0					
ANR	8032174	PrimaryExpression	1		8032037	1					
ANR	8032175	CompoundStatement		26:35:670:670	8032037	1					
ANR	8032176	ExpressionStatement	allocated += TILE_SIZE	585:10:18472:18494	8032037	0	True				
ANR	8032177	AssignmentExpression	allocated += TILE_SIZE		8032037	0		+=			
ANR	8032178	Identifier	allocated		8032037	0					
ANR	8032179	Identifier	TILE_SIZE		8032037	1					
ANR	8032180	ExpressionStatement	"buffer = ( pcl_Octet * ) realloc ( buffer , allocated )"	586:10:18506:18554	8032037	1	True				
ANR	8032181	AssignmentExpression	"buffer = ( pcl_Octet * ) realloc ( buffer , allocated )"		8032037	0		=			
ANR	8032182	Identifier	buffer		8032037	0					
ANR	8032183	CastExpression	"( pcl_Octet * ) realloc ( buffer , allocated )"		8032037	1					
ANR	8032184	CastTarget	pcl_Octet *		8032037	0					
ANR	8032185	CallExpression	"realloc ( buffer , allocated )"		8032037	1					
ANR	8032186	Callee	realloc		8032037	0					
ANR	8032187	Identifier	realloc		8032037	0					
ANR	8032188	ArgumentList	buffer		8032037	1					
ANR	8032189	Argument	buffer		8032037	0					
ANR	8032190	Identifier	buffer		8032037	0					
ANR	8032191	Argument	allocated		8032037	1					
ANR	8032192	Identifier	allocated		8032037	0					
ANR	8032193	ExpressionStatement	check ( buffer )	587:10:18566:18579	8032037	2	True				
ANR	8032194	CallExpression	check ( buffer )		8032037	0					
ANR	8032195	Callee	check		8032037	0					
ANR	8032196	Identifier	check		8032037	0					
ANR	8032197	ArgumentList	buffer		8032037	1					
ANR	8032198	Argument	buffer		8032037	0					
ANR	8032199	Identifier	buffer		8032037	0					
ANR	8032200	ExpressionStatement	buffer [ used ] = c	589:8:18599:18615	8032037	1	True				
ANR	8032201	AssignmentExpression	buffer [ used ] = c		8032037	0		=			
ANR	8032202	ArrayIndexing	buffer [ used ]		8032037	0					
ANR	8032203	Identifier	buffer		8032037	0					
ANR	8032204	Identifier	used		8032037	1					
ANR	8032205	Identifier	c		8032037	1					
ANR	8032206	ExpressionStatement	used ++	590:8:18625:18631	8032037	2	True				
ANR	8032207	PostIncDecOperationExpression	used ++		8032037	0					
ANR	8032208	Identifier	used		8032037	0					
ANR	8032209	IncDec	++		8032037	1					
ANR	8032210	IfStatement	if ( used > 0 && buffer [ used - 1 ] == 'r' )		8032037	2					
ANR	8032211	Condition	used > 0 && buffer [ used - 1 ] == 'r'	593:10:18694:18726	8032037	0	True				
ANR	8032212	AndExpression	used > 0 && buffer [ used - 1 ] == 'r'		8032037	0		&&			
ANR	8032213	RelationalExpression	used > 0		8032037	0		>			
ANR	8032214	Identifier	used		8032037	0					
ANR	8032215	PrimaryExpression	0		8032037	1					
ANR	8032216	EqualityExpression	buffer [ used - 1 ] == 'r'		8032037	1		==			
ANR	8032217	ArrayIndexing	buffer [ used - 1 ]		8032037	0					
ANR	8032218	Identifier	buffer		8032037	0					
ANR	8032219	AdditiveExpression	used - 1		8032037	1		-			
ANR	8032220	Identifier	used		8032037	0					
ANR	8032221	PrimaryExpression	1		8032037	1					
ANR	8032222	PrimaryExpression	'r'		8032037	1					
ANR	8032223	ExpressionStatement	used --	593:45:18729:18735	8032037	1	True				
ANR	8032224	PostIncDecOperationExpression	used --		8032037	0					
ANR	8032225	Identifier	used		8032037	0					
ANR	8032226	IncDec	--		8032037	1					
ANR	8032227	ExpressionStatement	buffer [ used ] = '\\0'	594:6:18743:18762	8032037	3	True				
ANR	8032228	AssignmentExpression	buffer [ used ] = '\\0'		8032037	0		=			
ANR	8032229	ArrayIndexing	buffer [ used ]		8032037	0					
ANR	8032230	Identifier	buffer		8032037	0					
ANR	8032231	Identifier	used		8032037	1					
ANR	8032232	PrimaryExpression	'\\0'		8032037	1					
ANR	8032233	ExpressionStatement	s = buffer	597:6:18808:18818	8032037	4	True				
ANR	8032234	AssignmentExpression	s = buffer		8032037	0		=			
ANR	8032235	Identifier	s		8032037	0					
ANR	8032236	Identifier	buffer		8032037	1					
ANR	8032237	WhileStatement	while ( PJL_ws ( * s ) )		8032037	5					
ANR	8032238	Condition	PJL_ws ( * s )	598:13:18833:18842	8032037	0	True				
ANR	8032239	CallExpression	PJL_ws ( * s )		8032037	0					
ANR	8032240	Callee	PJL_ws		8032037	0					
ANR	8032241	Identifier	PJL_ws		8032037	0					
ANR	8032242	ArgumentList	* s		8032037	1					
ANR	8032243	Argument	* s		8032037	0					
ANR	8032244	UnaryOperationExpression	* s		8032037	0					
ANR	8032245	UnaryOperator	*		8032037	0					
ANR	8032246	Identifier	s		8032037	1					
ANR	8032247	ExpressionStatement	s ++	598:25:18845:18848	8032037	1	True				
ANR	8032248	PostIncDecOperationExpression	s ++		8032037	0					
ANR	8032249	Identifier	s		8032037	0					
ANR	8032250	IncDec	++		8032037	1					
ANR	8032251	IfStatement	if ( PJL_letter ( * s ) )		8032037	6					
ANR	8032252	Condition	PJL_letter ( * s )	600:10:18861:18874	8032037	0	True				
ANR	8032253	CallExpression	PJL_letter ( * s )		8032037	0					
ANR	8032254	Callee	PJL_letter		8032037	0					
ANR	8032255	Identifier	PJL_letter		8032037	0					
ANR	8032256	ArgumentList	* s		8032037	1					
ANR	8032257	Argument	* s		8032037	0					
ANR	8032258	UnaryOperationExpression	* s		8032037	0					
ANR	8032259	UnaryOperator	*		8032037	0					
ANR	8032260	Identifier	s		8032037	1					
ANR	8032261	CompoundStatement		44:8:1119:1124	8032037	1					
ANR	8032262	IdentifierDeclStatement	pcl_Octet * t ;	601:8:18887:18899	8032037	0	True				
ANR	8032263	IdentifierDecl	* t		8032037	0					
ANR	8032264	IdentifierDeclType	pcl_Octet *		8032037	0					
ANR	8032265	Identifier	t		8032037	1					
ANR	8032266	IdentifierDeclStatement	int l ;	602:8:18909:18914	8032037	1	True				
ANR	8032267	IdentifierDecl	l		8032037	0					
ANR	8032268	IdentifierDeclType	int		8032037	0					
ANR	8032269	Identifier	l		8032037	1					
ANR	8032270	ExpressionStatement	t = s	606:8:19084:19089	8032037	2	True				
ANR	8032271	AssignmentExpression	t = s		8032037	0		=			
ANR	8032272	Identifier	t		8032037	0					
ANR	8032273	Identifier	s		8032037	1					
ANR	8032274	DoStatement	do		8032037	3					
ANR	8032275	CompoundStatement		49:11:1312:1312	8032037	0					
ANR	8032276	IfStatement	if ( 'a' <= * t && * t <= 'z' )		8032037	0					
ANR	8032277	Condition	'a' <= * t && * t <= 'z'	608:14:19118:19139	8032037	0	True				
ANR	8032278	AndExpression	'a' <= * t && * t <= 'z'		8032037	0		&&			
ANR	8032279	RelationalExpression	'a' <= * t		8032037	0		<=			
ANR	8032280	PrimaryExpression	'a'		8032037	0					
ANR	8032281	UnaryOperationExpression	* t		8032037	1					
ANR	8032282	UnaryOperator	*		8032037	0					
ANR	8032283	Identifier	t		8032037	1					
ANR	8032284	RelationalExpression	* t <= 'z'		8032037	1		<=			
ANR	8032285	UnaryOperationExpression	* t		8032037	0					
ANR	8032286	UnaryOperator	*		8032037	0					
ANR	8032287	Identifier	t		8032037	1					
ANR	8032288	PrimaryExpression	'z'		8032037	1					
ANR	8032289	ExpressionStatement	* t -= 'a' - 'A'	608:38:19142:19157	8032037	1	True				
ANR	8032290	AssignmentExpression	* t -= 'a' - 'A'		8032037	0		-=			
ANR	8032291	UnaryOperationExpression	* t		8032037	0					
ANR	8032292	UnaryOperator	*		8032037	0					
ANR	8032293	Identifier	t		8032037	1					
ANR	8032294	AdditiveExpression	'a' - 'A'		8032037	1		-			
ANR	8032295	PrimaryExpression	'a'		8032037	0					
ANR	8032296	PrimaryExpression	'A'		8032037	1					
ANR	8032297	ExpressionStatement	t ++	609:10:19169:19172	8032037	1	True				
ANR	8032298	PostIncDecOperationExpression	t ++		8032037	0					
ANR	8032299	Identifier	t		8032037	0					
ANR	8032300	IncDec	++		8032037	1					
ANR	8032301	Condition	* t != '\\0' && ! PJL_ws ( * t )	610:17:19191:19215	8032037	1	True				
ANR	8032302	AndExpression	* t != '\\0' && ! PJL_ws ( * t )		8032037	0		&&			
ANR	8032303	EqualityExpression	* t != '\\0'		8032037	0		!=			
ANR	8032304	UnaryOperationExpression	* t		8032037	0					
ANR	8032305	UnaryOperator	*		8032037	0					
ANR	8032306	Identifier	t		8032037	1					
ANR	8032307	PrimaryExpression	'\\0'		8032037	1					
ANR	8032308	UnaryOperationExpression	! PJL_ws ( * t )		8032037	1					
ANR	8032309	UnaryOperator	!		8032037	0					
ANR	8032310	CallExpression	PJL_ws ( * t )		8032037	1					
ANR	8032311	Callee	PJL_ws		8032037	0					
ANR	8032312	Identifier	PJL_ws		8032037	0					
ANR	8032313	ArgumentList	* t		8032037	1					
ANR	8032314	Argument	* t		8032037	0					
ANR	8032315	UnaryOperationExpression	* t		8032037	0					
ANR	8032316	UnaryOperator	*		8032037	0					
ANR	8032317	Identifier	t		8032037	1					
ANR	8032318	ExpressionStatement	l = t - s	613:8:19259:19268	8032037	4	True				
ANR	8032319	AssignmentExpression	l = t - s		8032037	0		=			
ANR	8032320	Identifier	l		8032037	0					
ANR	8032321	AdditiveExpression	t - s		8032037	1		-			
ANR	8032322	Identifier	t		8032037	0					
ANR	8032323	Identifier	s		8032037	1					
ANR	8032324	ExpressionStatement	"fprintf ( stderr , ""Command (length %d): `"" , l )"	615:8:19284:19328	8032037	5	True				
ANR	8032325	CallExpression	"fprintf ( stderr , ""Command (length %d): `"" , l )"		8032037	0					
ANR	8032326	Callee	fprintf		8032037	0					
ANR	8032327	Identifier	fprintf		8032037	0					
ANR	8032328	ArgumentList	stderr		8032037	1					
ANR	8032329	Argument	stderr		8032037	0					
ANR	8032330	Identifier	stderr		8032037	0					
ANR	8032331	Argument	"""Command (length %d): `"""		8032037	1					
ANR	8032332	PrimaryExpression	"""Command (length %d): `"""		8032037	0					
ANR	8032333	Argument	l		8032037	2					
ANR	8032334	Identifier	l		8032037	0					
ANR	8032335	ExpressionStatement	"fwrite ( s , 1 , l , stderr )"	616:8:19338:19361	8032037	6	True				
ANR	8032336	CallExpression	"fwrite ( s , 1 , l , stderr )"		8032037	0					
ANR	8032337	Callee	fwrite		8032037	0					
ANR	8032338	Identifier	fwrite		8032037	0					
ANR	8032339	ArgumentList	s		8032037	1					
ANR	8032340	Argument	s		8032037	0					
ANR	8032341	Identifier	s		8032037	0					
ANR	8032342	Argument	1		8032037	1					
ANR	8032343	PrimaryExpression	1		8032037	0					
ANR	8032344	Argument	l		8032037	2					
ANR	8032345	Identifier	l		8032037	0					
ANR	8032346	Argument	stderr		8032037	3					
ANR	8032347	Identifier	stderr		8032037	0					
ANR	8032348	ExpressionStatement	"fprintf ( stderr , ""'.\\n"" )"	617:8:19371:19394	8032037	7	True				
ANR	8032349	CallExpression	"fprintf ( stderr , ""'.\\n"" )"		8032037	0					
ANR	8032350	Callee	fprintf		8032037	0					
ANR	8032351	Identifier	fprintf		8032037	0					
ANR	8032352	ArgumentList	stderr		8032037	1					
ANR	8032353	Argument	stderr		8032037	0					
ANR	8032354	Identifier	stderr		8032037	0					
ANR	8032355	Argument	"""'.\\n"""		8032037	1					
ANR	8032356	PrimaryExpression	"""'.\\n"""		8032037	0					
ANR	8032357	IfStatement	"if ( l == sizeof ( ""ENTER"" ) - 1 && strncmp ( s , ""ENTER"" , l ) == 0 && PJL_ws ( * t ) )"		8032037	8					
ANR	8032358	Condition	"l == sizeof ( ""ENTER"" ) - 1 && strncmp ( s , ""ENTER"" , l ) == 0 && PJL_ws ( * t )"	619:12:19415:19495	8032037	0	True				
ANR	8032359	AndExpression	"l == sizeof ( ""ENTER"" ) - 1 && strncmp ( s , ""ENTER"" , l ) == 0 && PJL_ws ( * t )"		8032037	0		&&			
ANR	8032360	EqualityExpression	"l == sizeof ( ""ENTER"" ) - 1"		8032037	0		==			
ANR	8032361	Identifier	l		8032037	0					
ANR	8032362	AdditiveExpression	"sizeof ( ""ENTER"" ) - 1"		8032037	1		-			
ANR	8032363	SizeofExpression	"sizeof ( ""ENTER"" )"		8032037	0					
ANR	8032364	Sizeof	sizeof		8032037	0					
ANR	8032365	PrimaryExpression	"""ENTER"""		8032037	1					
ANR	8032366	PrimaryExpression	1		8032037	1					
ANR	8032367	AndExpression	"strncmp ( s , ""ENTER"" , l ) == 0 && PJL_ws ( * t )"		8032037	1		&&			
ANR	8032368	EqualityExpression	"strncmp ( s , ""ENTER"" , l ) == 0"		8032037	0		==			
ANR	8032369	CallExpression	"strncmp ( s , ""ENTER"" , l )"		8032037	0					
ANR	8032370	Callee	strncmp		8032037	0					
ANR	8032371	Identifier	strncmp		8032037	0					
ANR	8032372	ArgumentList	s		8032037	1					
ANR	8032373	Argument	s		8032037	0					
ANR	8032374	Identifier	s		8032037	0					
ANR	8032375	Argument	"""ENTER"""		8032037	1					
ANR	8032376	PrimaryExpression	"""ENTER"""		8032037	0					
ANR	8032377	Argument	l		8032037	2					
ANR	8032378	Identifier	l		8032037	0					
ANR	8032379	PrimaryExpression	0		8032037	1					
ANR	8032380	CallExpression	PJL_ws ( * t )		8032037	1					
ANR	8032381	Callee	PJL_ws		8032037	0					
ANR	8032382	Identifier	PJL_ws		8032037	0					
ANR	8032383	ArgumentList	* t		8032037	1					
ANR	8032384	Argument	* t		8032037	0					
ANR	8032385	UnaryOperationExpression	* t		8032037	0					
ANR	8032386	UnaryOperator	*		8032037	0					
ANR	8032387	Identifier	t		8032037	1					
ANR	8032388	CompoundStatement		62:24:1708:1708	8032037	1					
ANR	8032389	ExpressionStatement	s = t + 1	622:10:19547:19556	8032037	0	True				
ANR	8032390	AssignmentExpression	s = t + 1		8032037	0		=			
ANR	8032391	Identifier	s		8032037	0					
ANR	8032392	AdditiveExpression	t + 1		8032037	1		+			
ANR	8032393	Identifier	t		8032037	0					
ANR	8032394	PrimaryExpression	1		8032037	1					
ANR	8032395	WhileStatement	while ( PJL_ws ( * s ) )		8032037	1					
ANR	8032396	Condition	PJL_ws ( * s )	623:17:19575:19584	8032037	0	True				
ANR	8032397	CallExpression	PJL_ws ( * s )		8032037	0					
ANR	8032398	Callee	PJL_ws		8032037	0					
ANR	8032399	Identifier	PJL_ws		8032037	0					
ANR	8032400	ArgumentList	* s		8032037	1					
ANR	8032401	Argument	* s		8032037	0					
ANR	8032402	UnaryOperationExpression	* s		8032037	0					
ANR	8032403	UnaryOperator	*		8032037	0					
ANR	8032404	Identifier	s		8032037	1					
ANR	8032405	ExpressionStatement	s ++	623:29:19587:19590	8032037	1	True				
ANR	8032406	PostIncDecOperationExpression	s ++		8032037	0					
ANR	8032407	Identifier	s		8032037	0					
ANR	8032408	IncDec	++		8032037	1					
ANR	8032409	ExpressionStatement	t = s	624:10:19602:19607	8032037	2	True				
ANR	8032410	AssignmentExpression	t = s		8032037	0		=			
ANR	8032411	Identifier	t		8032037	0					
ANR	8032412	Identifier	s		8032037	1					
ANR	8032413	WhileStatement	while ( * t != '\\0' && ! PJL_ws ( * t ) && * t != '=' )		8032037	3					
ANR	8032414	Condition	* t != '\\0' && ! PJL_ws ( * t ) && * t != '='	625:17:19626:19663	8032037	0	True				
ANR	8032415	AndExpression	* t != '\\0' && ! PJL_ws ( * t ) && * t != '='		8032037	0		&&			
ANR	8032416	EqualityExpression	* t != '\\0'		8032037	0		!=			
ANR	8032417	UnaryOperationExpression	* t		8032037	0					
ANR	8032418	UnaryOperator	*		8032037	0					
ANR	8032419	Identifier	t		8032037	1					
ANR	8032420	PrimaryExpression	'\\0'		8032037	1					
ANR	8032421	AndExpression	! PJL_ws ( * t ) && * t != '='		8032037	1		&&			
ANR	8032422	UnaryOperationExpression	! PJL_ws ( * t )		8032037	0					
ANR	8032423	UnaryOperator	!		8032037	0					
ANR	8032424	CallExpression	PJL_ws ( * t )		8032037	1					
ANR	8032425	Callee	PJL_ws		8032037	0					
ANR	8032426	Identifier	PJL_ws		8032037	0					
ANR	8032427	ArgumentList	* t		8032037	1					
ANR	8032428	Argument	* t		8032037	0					
ANR	8032429	UnaryOperationExpression	* t		8032037	0					
ANR	8032430	UnaryOperator	*		8032037	0					
ANR	8032431	Identifier	t		8032037	1					
ANR	8032432	EqualityExpression	* t != '='		8032037	1		!=			
ANR	8032433	UnaryOperationExpression	* t		8032037	0					
ANR	8032434	UnaryOperator	*		8032037	0					
ANR	8032435	Identifier	t		8032037	1					
ANR	8032436	PrimaryExpression	'='		8032037	1					
ANR	8032437	CompoundStatement		67:57:1876:1876	8032037	1					
ANR	8032438	IfStatement	if ( 'a' <= * t && * t <= 'z' )		8032037	0					
ANR	8032439	Condition	'a' <= * t && * t <= 'z'	626:16:19684:19705	8032037	0	True				
ANR	8032440	AndExpression	'a' <= * t && * t <= 'z'		8032037	0		&&			
ANR	8032441	RelationalExpression	'a' <= * t		8032037	0		<=			
ANR	8032442	PrimaryExpression	'a'		8032037	0					
ANR	8032443	UnaryOperationExpression	* t		8032037	1					
ANR	8032444	UnaryOperator	*		8032037	0					
ANR	8032445	Identifier	t		8032037	1					
ANR	8032446	RelationalExpression	* t <= 'z'		8032037	1		<=			
ANR	8032447	UnaryOperationExpression	* t		8032037	0					
ANR	8032448	UnaryOperator	*		8032037	0					
ANR	8032449	Identifier	t		8032037	1					
ANR	8032450	PrimaryExpression	'z'		8032037	1					
ANR	8032451	ExpressionStatement	* t -= 'a' - 'A'	626:40:19708:19723	8032037	1	True				
ANR	8032452	AssignmentExpression	* t -= 'a' - 'A'		8032037	0		-=			
ANR	8032453	UnaryOperationExpression	* t		8032037	0					
ANR	8032454	UnaryOperator	*		8032037	0					
ANR	8032455	Identifier	t		8032037	1					
ANR	8032456	AdditiveExpression	'a' - 'A'		8032037	1		-			
ANR	8032457	PrimaryExpression	'a'		8032037	0					
ANR	8032458	PrimaryExpression	'A'		8032037	1					
ANR	8032459	ExpressionStatement	t ++	627:12:19737:19740	8032037	1	True				
ANR	8032460	PostIncDecOperationExpression	t ++		8032037	0					
ANR	8032461	Identifier	t		8032037	0					
ANR	8032462	IncDec	++		8032037	1					
ANR	8032463	ExpressionStatement	l = t - s	629:10:19764:19773	8032037	4	True				
ANR	8032464	AssignmentExpression	l = t - s		8032037	0		=			
ANR	8032465	Identifier	l		8032037	0					
ANR	8032466	AdditiveExpression	t - s		8032037	1		-			
ANR	8032467	Identifier	t		8032037	0					
ANR	8032468	Identifier	s		8032037	1					
ANR	8032469	IfStatement	"if ( l == sizeof ( ""LANGUAGE"" ) - 1 && strncmp ( s , ""LANGUAGE"" , t - s ) == 0 && ( PJL_ws ( * t ) || * t == '=' ) )"		8032037	5					
ANR	8032470	Condition	"l == sizeof ( ""LANGUAGE"" ) - 1 && strncmp ( s , ""LANGUAGE"" , t - s ) == 0 && ( PJL_ws ( * t ) || * t == '=' )"	630:14:19789:19896	8032037	0	True				
ANR	8032471	AndExpression	"l == sizeof ( ""LANGUAGE"" ) - 1 && strncmp ( s , ""LANGUAGE"" , t - s ) == 0 && ( PJL_ws ( * t ) || * t == '=' )"		8032037	0		&&			
ANR	8032472	EqualityExpression	"l == sizeof ( ""LANGUAGE"" ) - 1"		8032037	0		==			
ANR	8032473	Identifier	l		8032037	0					
ANR	8032474	AdditiveExpression	"sizeof ( ""LANGUAGE"" ) - 1"		8032037	1		-			
ANR	8032475	SizeofExpression	"sizeof ( ""LANGUAGE"" )"		8032037	0					
ANR	8032476	Sizeof	sizeof		8032037	0					
ANR	8032477	PrimaryExpression	"""LANGUAGE"""		8032037	1					
ANR	8032478	PrimaryExpression	1		8032037	1					
ANR	8032479	AndExpression	"strncmp ( s , ""LANGUAGE"" , t - s ) == 0 && ( PJL_ws ( * t ) || * t == '=' )"		8032037	1		&&			
ANR	8032480	EqualityExpression	"strncmp ( s , ""LANGUAGE"" , t - s ) == 0"		8032037	0		==			
ANR	8032481	CallExpression	"strncmp ( s , ""LANGUAGE"" , t - s )"		8032037	0					
ANR	8032482	Callee	strncmp		8032037	0					
ANR	8032483	Identifier	strncmp		8032037	0					
ANR	8032484	ArgumentList	s		8032037	1					
ANR	8032485	Argument	s		8032037	0					
ANR	8032486	Identifier	s		8032037	0					
ANR	8032487	Argument	"""LANGUAGE"""		8032037	1					
ANR	8032488	PrimaryExpression	"""LANGUAGE"""		8032037	0					
ANR	8032489	Argument	t - s		8032037	2					
ANR	8032490	AdditiveExpression	t - s		8032037	0		-			
ANR	8032491	Identifier	t		8032037	0					
ANR	8032492	Identifier	s		8032037	1					
ANR	8032493	PrimaryExpression	0		8032037	1					
ANR	8032494	OrExpression	PJL_ws ( * t ) || * t == '='		8032037	1		||			
ANR	8032495	CallExpression	PJL_ws ( * t )		8032037	0					
ANR	8032496	Callee	PJL_ws		8032037	0					
ANR	8032497	Identifier	PJL_ws		8032037	0					
ANR	8032498	ArgumentList	* t		8032037	1					
ANR	8032499	Argument	* t		8032037	0					
ANR	8032500	UnaryOperationExpression	* t		8032037	0					
ANR	8032501	UnaryOperator	*		8032037	0					
ANR	8032502	Identifier	t		8032037	1					
ANR	8032503	EqualityExpression	* t == '='		8032037	1		==			
ANR	8032504	UnaryOperationExpression	* t		8032037	0					
ANR	8032505	UnaryOperator	*		8032037	0					
ANR	8032506	Identifier	t		8032037	1					
ANR	8032507	PrimaryExpression	'='		8032037	1					
ANR	8032508	CompoundStatement		73:44:2109:2109	8032037	1					
ANR	8032509	ExpressionStatement	"s = strchr ( t , '=' )"	632:12:19913:19931	8032037	0	True				
ANR	8032510	AssignmentExpression	"s = strchr ( t , '=' )"		8032037	0		=			
ANR	8032511	Identifier	s		8032037	0					
ANR	8032512	CallExpression	"strchr ( t , '=' )"		8032037	1					
ANR	8032513	Callee	strchr		8032037	0					
ANR	8032514	Identifier	strchr		8032037	0					
ANR	8032515	ArgumentList	t		8032037	1					
ANR	8032516	Argument	t		8032037	0					
ANR	8032517	Identifier	t		8032037	0					
ANR	8032518	Argument	'='		8032037	1					
ANR	8032519	PrimaryExpression	'='		8032037	0					
ANR	8032520	IfStatement	if ( s != NULL )		8032037	1					
ANR	8032521	Condition	s != NULL	633:16:19980:19988	8032037	0	True				
ANR	8032522	EqualityExpression	s != NULL		8032037	0		!=			
ANR	8032523	Identifier	s		8032037	0					
ANR	8032524	Identifier	NULL		8032037	1					
ANR	8032525	CompoundStatement		75:27:2201:2201	8032037	1					
ANR	8032526	ExpressionStatement	s ++	634:14:20007:20010	8032037	0	True				
ANR	8032527	PostIncDecOperationExpression	s ++		8032037	0					
ANR	8032528	Identifier	s		8032037	0					
ANR	8032529	IncDec	++		8032037	1					
ANR	8032530	WhileStatement	while ( PJL_ws ( * s ) )		8032037	1					
ANR	8032531	Condition	PJL_ws ( * s )	635:21:20033:20042	8032037	0	True				
ANR	8032532	CallExpression	PJL_ws ( * s )		8032037	0					
ANR	8032533	Callee	PJL_ws		8032037	0					
ANR	8032534	Identifier	PJL_ws		8032037	0					
ANR	8032535	ArgumentList	* s		8032037	1					
ANR	8032536	Argument	* s		8032037	0					
ANR	8032537	UnaryOperationExpression	* s		8032037	0					
ANR	8032538	UnaryOperator	*		8032037	0					
ANR	8032539	Identifier	s		8032037	1					
ANR	8032540	ExpressionStatement	s ++	635:33:20045:20048	8032037	1	True				
ANR	8032541	PostIncDecOperationExpression	s ++		8032037	0					
ANR	8032542	Identifier	s		8032037	0					
ANR	8032543	IncDec	++		8032037	1					
ANR	8032544	IfStatement	if ( PJL_letter ( * s ) )		8032037	2					
ANR	8032545	Condition	PJL_letter ( * s )	636:18:20068:20081	8032037	0	True				
ANR	8032546	CallExpression	PJL_letter ( * s )		8032037	0					
ANR	8032547	Callee	PJL_letter		8032037	0					
ANR	8032548	Identifier	PJL_letter		8032037	0					
ANR	8032549	ArgumentList	* s		8032037	1					
ANR	8032550	Argument	* s		8032037	0					
ANR	8032551	UnaryOperationExpression	* s		8032037	0					
ANR	8032552	UnaryOperator	*		8032037	0					
ANR	8032553	Identifier	s		8032037	1					
ANR	8032554	CompoundStatement		78:33:2293:2293	8032037	1					
ANR	8032555	ExpressionStatement	t = s + 1	637:16:20101:20110	8032037	0	True				
ANR	8032556	AssignmentExpression	t = s + 1		8032037	0		=			
ANR	8032557	Identifier	t		8032037	0					
ANR	8032558	AdditiveExpression	s + 1		8032037	1		+			
ANR	8032559	Identifier	s		8032037	0					
ANR	8032560	PrimaryExpression	1		8032037	1					
ANR	8032561	WhileStatement	while ( * t != '\\0' && ! PJL_ws ( * t ) )		8032037	1					
ANR	8032562	Condition	* t != '\\0' && ! PJL_ws ( * t )	638:23:20135:20159	8032037	0	True				
ANR	8032563	AndExpression	* t != '\\0' && ! PJL_ws ( * t )		8032037	0		&&			
ANR	8032564	EqualityExpression	* t != '\\0'		8032037	0		!=			
ANR	8032565	UnaryOperationExpression	* t		8032037	0					
ANR	8032566	UnaryOperator	*		8032037	0					
ANR	8032567	Identifier	t		8032037	1					
ANR	8032568	PrimaryExpression	'\\0'		8032037	1					
ANR	8032569	UnaryOperationExpression	! PJL_ws ( * t )		8032037	1					
ANR	8032570	UnaryOperator	!		8032037	0					
ANR	8032571	CallExpression	PJL_ws ( * t )		8032037	1					
ANR	8032572	Callee	PJL_ws		8032037	0					
ANR	8032573	Identifier	PJL_ws		8032037	0					
ANR	8032574	ArgumentList	* t		8032037	1					
ANR	8032575	Argument	* t		8032037	0					
ANR	8032576	UnaryOperationExpression	* t		8032037	0					
ANR	8032577	UnaryOperator	*		8032037	0					
ANR	8032578	Identifier	t		8032037	1					
ANR	8032579	ExpressionStatement	t ++	638:50:20162:20165	8032037	1	True				
ANR	8032580	PostIncDecOperationExpression	t ++		8032037	0					
ANR	8032581	Identifier	t		8032037	0					
ANR	8032582	IncDec	++		8032037	1					
ANR	8032583	ExpressionStatement	ip -> fdata . PJL_language = ( char * ) malloc ( t - s + 1 )	639:16:20183:20233	8032037	2	True				
ANR	8032584	AssignmentExpression	ip -> fdata . PJL_language = ( char * ) malloc ( t - s + 1 )		8032037	0		=			
ANR	8032585	MemberAccess	ip -> fdata . PJL_language		8032037	0					
ANR	8032586	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032587	Identifier	ip		8032037	0					
ANR	8032588	Identifier	fdata		8032037	1					
ANR	8032589	Identifier	PJL_language		8032037	1					
ANR	8032590	CastExpression	( char * ) malloc ( t - s + 1 )		8032037	1					
ANR	8032591	CastTarget	char *		8032037	0					
ANR	8032592	CallExpression	malloc ( t - s + 1 )		8032037	1					
ANR	8032593	Callee	malloc		8032037	0					
ANR	8032594	Identifier	malloc		8032037	0					
ANR	8032595	ArgumentList	t - s + 1		8032037	1					
ANR	8032596	Argument	t - s + 1		8032037	0					
ANR	8032597	AdditiveExpression	t - s + 1		8032037	0		-			
ANR	8032598	Identifier	t		8032037	0					
ANR	8032599	AdditiveExpression	s + 1		8032037	1		+			
ANR	8032600	Identifier	s		8032037	0					
ANR	8032601	PrimaryExpression	1		8032037	1					
ANR	8032602	ExpressionStatement	check ( ip -> fdata . PJL_language )	640:16:20251:20280	8032037	3	True				
ANR	8032603	CallExpression	check ( ip -> fdata . PJL_language )		8032037	0					
ANR	8032604	Callee	check		8032037	0					
ANR	8032605	Identifier	check		8032037	0					
ANR	8032606	ArgumentList	ip -> fdata . PJL_language		8032037	1					
ANR	8032607	Argument	ip -> fdata . PJL_language		8032037	0					
ANR	8032608	MemberAccess	ip -> fdata . PJL_language		8032037	0					
ANR	8032609	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032610	Identifier	ip		8032037	0					
ANR	8032611	Identifier	fdata		8032037	1					
ANR	8032612	Identifier	PJL_language		8032037	1					
ANR	8032613	ExpressionStatement	"strncpy ( ip -> fdata . PJL_language , s , t - s )"	641:16:20298:20339	8032037	4	True				
ANR	8032614	CallExpression	"strncpy ( ip -> fdata . PJL_language , s , t - s )"		8032037	0					
ANR	8032615	Callee	strncpy		8032037	0					
ANR	8032616	Identifier	strncpy		8032037	0					
ANR	8032617	ArgumentList	ip -> fdata . PJL_language		8032037	1					
ANR	8032618	Argument	ip -> fdata . PJL_language		8032037	0					
ANR	8032619	MemberAccess	ip -> fdata . PJL_language		8032037	0					
ANR	8032620	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032621	Identifier	ip		8032037	0					
ANR	8032622	Identifier	fdata		8032037	1					
ANR	8032623	Identifier	PJL_language		8032037	1					
ANR	8032624	Argument	s		8032037	1					
ANR	8032625	Identifier	s		8032037	0					
ANR	8032626	Argument	t - s		8032037	2					
ANR	8032627	AdditiveExpression	t - s		8032037	0		-			
ANR	8032628	Identifier	t		8032037	0					
ANR	8032629	Identifier	s		8032037	1					
ANR	8032630	ExpressionStatement	ip -> fdata . PJL_language [ t - s ] = '\\0'	642:16:20357:20393	8032037	5	True				
ANR	8032631	AssignmentExpression	ip -> fdata . PJL_language [ t - s ] = '\\0'		8032037	0		=			
ANR	8032632	ArrayIndexing	ip -> fdata . PJL_language [ t - s ]		8032037	0					
ANR	8032633	MemberAccess	ip -> fdata . PJL_language		8032037	0					
ANR	8032634	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032635	Identifier	ip		8032037	0					
ANR	8032636	Identifier	fdata		8032037	1					
ANR	8032637	Identifier	PJL_language		8032037	1					
ANR	8032638	AdditiveExpression	t - s		8032037	1		-			
ANR	8032639	Identifier	t		8032037	0					
ANR	8032640	Identifier	s		8032037	1					
ANR	8032641	PrimaryExpression	'\\0'		8032037	1					
ANR	8032642	ExpressionStatement	c = EOF	645:12:20437:20444	8032037	2	True				
ANR	8032643	AssignmentExpression	c = EOF		8032037	0		=			
ANR	8032644	Identifier	c		8032037	0					
ANR	8032645	Identifier	EOF		8032037	1					
ANR	8032646	ElseStatement	else		8032037	0					
ANR	8032647	IfStatement	"if ( l == 3 && strncmp ( s , ""JOB"" , 3 ) == 0 )"		8032037	0					
ANR	8032648	Condition	"l == 3 && strncmp ( s , ""JOB"" , 3 ) == 0"	648:17:20514:20548	8032037	0	True				
ANR	8032649	AndExpression	"l == 3 && strncmp ( s , ""JOB"" , 3 ) == 0"		8032037	0		&&			
ANR	8032650	EqualityExpression	l == 3		8032037	0		==			
ANR	8032651	Identifier	l		8032037	0					
ANR	8032652	PrimaryExpression	3		8032037	1					
ANR	8032653	EqualityExpression	"strncmp ( s , ""JOB"" , 3 ) == 0"		8032037	1		==			
ANR	8032654	CallExpression	"strncmp ( s , ""JOB"" , 3 )"		8032037	0					
ANR	8032655	Callee	strncmp		8032037	0					
ANR	8032656	Identifier	strncmp		8032037	0					
ANR	8032657	ArgumentList	s		8032037	1					
ANR	8032658	Argument	s		8032037	0					
ANR	8032659	Identifier	s		8032037	0					
ANR	8032660	Argument	"""JOB"""		8032037	1					
ANR	8032661	PrimaryExpression	"""JOB"""		8032037	0					
ANR	8032662	Argument	3		8032037	2					
ANR	8032663	PrimaryExpression	3		8032037	0					
ANR	8032664	PrimaryExpression	0		8032037	1					
ANR	8032665	CompoundStatement		93:17:2884:2903	8032037	1					
ANR	8032666	Statement	static	651:10:20667:20672	8032037	0	True				
ANR	8032667	IdentifierDeclStatement	"char jobname [ ] = """" ;"	651:17:20674:20693	8032037	1	True				
ANR	8032668	IdentifierDecl	"jobname [ ] = """""		8032037	0					
ANR	8032669	IdentifierDeclType	char [ ]		8032037	0					
ANR	8032670	Identifier	jobname		8032037	1					
ANR	8032671	AssignmentExpression	"jobname [ ] = """""		8032037	2		=			
ANR	8032672	Identifier	jobname		8032037	0					
ANR	8032673	PrimaryExpression	""""""		8032037	1					
ANR	8032674	ExpressionStatement	ip -> fdata . PJL_job = jobname	652:10:20705:20732	8032037	2	True				
ANR	8032675	AssignmentExpression	ip -> fdata . PJL_job = jobname		8032037	0		=			
ANR	8032676	MemberAccess	ip -> fdata . PJL_job		8032037	0					
ANR	8032677	PtrMemberAccess	ip -> fdata		8032037	0					
ANR	8032678	Identifier	ip		8032037	0					
ANR	8032679	Identifier	fdata		8032037	1					
ANR	8032680	Identifier	PJL_job		8032037	1					
ANR	8032681	Identifier	jobname		8032037	1					
ANR	8032682	Condition	c != EOF	657:9:20771:20778	8032037	1	True				
ANR	8032683	EqualityExpression	c != EOF		8032037	0		!=			
ANR	8032684	Identifier	c		8032037	0					
ANR	8032685	Identifier	EOF		8032037	1					
ANR	8032686	ExpressionStatement	free ( buffer )	659:2:20785:20797	8032037	10	True				
ANR	8032687	CallExpression	free ( buffer )		8032037	0					
ANR	8032688	Callee	free		8032037	0					
ANR	8032689	Identifier	free		8032037	0					
ANR	8032690	ArgumentList	buffer		8032037	1					
ANR	8032691	Argument	buffer		8032037	0					
ANR	8032692	Identifier	buffer		8032037	0					
ANR	8032693	ReturnStatement	return 0 ;	661:2:20802:20810	8032037	11	True				
ANR	8032694	PrimaryExpression	0		8032037	0					
ANR	8032695	ReturnType	static int		8032037	1					
ANR	8032696	Identifier	action_UEL		8032037	2					
ANR	8032697	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8032037	3					
ANR	8032698	Parameter	FILE * in	558:22:17746:17753	8032037	0	True				
ANR	8032699	ParameterType	FILE *		8032037	0					
ANR	8032700	Identifier	in		8032037	1					
ANR	8032701	Parameter	const pcl_Command * cmd	558:32:17756:17777	8032037	1	True				
ANR	8032702	ParameterType	const pcl_Command *		8032037	0					
ANR	8032703	Identifier	cmd		8032037	1					
ANR	8032704	Parameter	void * i	558:56:17780:17786	8032037	2	True				
ANR	8032705	ParameterType	void *		8032037	0					
ANR	8032706	Identifier	i		8032037	1					
ANR	8032707	CFGEntryNode	ENTRY		8032037		True				
ANR	8032708	CFGExitNode	EXIT		8032037		True				
ANR	8032709	Symbol	ip -> fdata		8032037						
ANR	8032710	Symbol	check_prefix		8032037						
ANR	8032711	Symbol	strchr		8032037						
ANR	8032712	Symbol	used		8032037						
ANR	8032713	Symbol	realloc		8032037						
ANR	8032714	Symbol	* ip -> fdata . PJL_language		8032037						
ANR	8032715	Symbol	* ip		8032037						
ANR	8032716	Symbol	TILE_SIZE		8032037						
ANR	8032717	Symbol	strncmp		8032037						
ANR	8032718	Symbol	* * ip		8032037						
ANR	8032719	Symbol	ip -> fdata . PJL_job		8032037						
ANR	8032720	Symbol	PJL_ws		8032037						
ANR	8032721	Symbol	* used		8032037						
ANR	8032722	Symbol	buffer		8032037						
ANR	8032723	Symbol	* cmd		8032037						
ANR	8032724	Symbol	EOF		8032037						
ANR	8032725	Symbol	jobname		8032037						
ANR	8032726	Symbol	allocated		8032037						
ANR	8032727	Symbol	malloc		8032037						
ANR	8032728	Symbol	* buffer		8032037						
ANR	8032729	Symbol	c		8032037						
ANR	8032730	Symbol	NULL		8032037						
ANR	8032731	Symbol	in		8032037						
ANR	8032732	Symbol	PJL_letter		8032037						
ANR	8032733	Symbol	ip		8032037						
ANR	8032734	Symbol	i		8032037						
ANR	8032735	Symbol	* ip -> fdata		8032037						
ANR	8032736	Symbol	l		8032037						
ANR	8032737	Symbol	stderr		8032037						
ANR	8032738	Symbol	s		8032037						
ANR	8032739	Symbol	t		8032037						
ANR	8032740	Symbol	ip -> fdata . PJL_language		8032037						
ANR	8032741	Symbol	cmd -> i		8032037						
ANR	8032742	Symbol	cmd		8032037						
ANR	8032743	Symbol	* s		8032037						
ANR	8032744	Symbol	fgetc		8032037						
ANR	8032745	Symbol	* t		8032037						
ANR	8032746	Function	action_compression	667:0:20974:21549							
ANR	8032747	FunctionDef	"action_compression (FILE * in , const pcl_Command * cmd , void * i)"		8032746	0					
ANR	8032748	CompoundStatement		668:0:21047:21549	8032746	0					
ANR	8032749	IdentifierDeclStatement	CollectedInfo * ip = i ;	669:2:21051:21072	8032746	0	True				
ANR	8032750	IdentifierDecl	* ip = i		8032746	0					
ANR	8032751	IdentifierDeclType	CollectedInfo *		8032746	0					
ANR	8032752	Identifier	ip		8032746	1					
ANR	8032753	AssignmentExpression	* ip = i		8032746	2		=			
ANR	8032754	Identifier	i		8032746	0					
ANR	8032755	Identifier	i		8032746	1					
ANR	8032756	IfStatement	if ( cmd -> i != pcl_cm_none && cmd -> i != pcl_cm_rl && cmd -> i != pcl_cm_tiff && cmd -> i != pcl_cm_delta && cmd -> i != pcl_cm_crdr )		8032746	1					
ANR	8032757	Condition	cmd -> i != pcl_cm_none && cmd -> i != pcl_cm_rl && cmd -> i != pcl_cm_tiff && cmd -> i != pcl_cm_delta && cmd -> i != pcl_cm_crdr	671:6:21081:21206	8032746	0	True				
ANR	8032758	AndExpression	cmd -> i != pcl_cm_none && cmd -> i != pcl_cm_rl && cmd -> i != pcl_cm_tiff && cmd -> i != pcl_cm_delta && cmd -> i != pcl_cm_crdr		8032746	0		&&			
ANR	8032759	EqualityExpression	cmd -> i != pcl_cm_none		8032746	0		!=			
ANR	8032760	PtrMemberAccess	cmd -> i		8032746	0					
ANR	8032761	Identifier	cmd		8032746	0					
ANR	8032762	Identifier	i		8032746	1					
ANR	8032763	Identifier	pcl_cm_none		8032746	1					
ANR	8032764	AndExpression	cmd -> i != pcl_cm_rl && cmd -> i != pcl_cm_tiff && cmd -> i != pcl_cm_delta && cmd -> i != pcl_cm_crdr		8032746	1		&&			
ANR	8032765	EqualityExpression	cmd -> i != pcl_cm_rl		8032746	0		!=			
ANR	8032766	PtrMemberAccess	cmd -> i		8032746	0					
ANR	8032767	Identifier	cmd		8032746	0					
ANR	8032768	Identifier	i		8032746	1					
ANR	8032769	Identifier	pcl_cm_rl		8032746	1					
ANR	8032770	AndExpression	cmd -> i != pcl_cm_tiff && cmd -> i != pcl_cm_delta && cmd -> i != pcl_cm_crdr		8032746	1		&&			
ANR	8032771	EqualityExpression	cmd -> i != pcl_cm_tiff		8032746	0		!=			
ANR	8032772	PtrMemberAccess	cmd -> i		8032746	0					
ANR	8032773	Identifier	cmd		8032746	0					
ANR	8032774	Identifier	i		8032746	1					
ANR	8032775	Identifier	pcl_cm_tiff		8032746	1					
ANR	8032776	AndExpression	cmd -> i != pcl_cm_delta && cmd -> i != pcl_cm_crdr		8032746	1		&&			
ANR	8032777	EqualityExpression	cmd -> i != pcl_cm_delta		8032746	0		!=			
ANR	8032778	PtrMemberAccess	cmd -> i		8032746	0					
ANR	8032779	Identifier	cmd		8032746	0					
ANR	8032780	Identifier	i		8032746	1					
ANR	8032781	Identifier	pcl_cm_delta		8032746	1					
ANR	8032782	EqualityExpression	cmd -> i != pcl_cm_crdr		8032746	1		!=			
ANR	8032783	PtrMemberAccess	cmd -> i		8032746	0					
ANR	8032784	Identifier	cmd		8032746	0					
ANR	8032785	Identifier	i		8032746	1					
ANR	8032786	Identifier	pcl_cm_crdr		8032746	1					
ANR	8032787	CompoundStatement		5:55:161:161	8032746	1					
ANR	8032788	IfStatement	if ( ! ip -> seen_unknown_compression )		8032746	0					
ANR	8032789	Condition	! ip -> seen_unknown_compression	673:8:21219:21247	8032746	0	True				
ANR	8032790	UnaryOperationExpression	! ip -> seen_unknown_compression		8032746	0					
ANR	8032791	UnaryOperator	!		8032746	0					
ANR	8032792	PtrMemberAccess	ip -> seen_unknown_compression		8032746	1					
ANR	8032793	Identifier	ip		8032746	0					
ANR	8032794	Identifier	seen_unknown_compression		8032746	1					
ANR	8032795	Statement	imessage	674:6:21256:21263	8032746	1	True				
ANR	8032796	Statement	(	674:14:21264:21264	8032746	1	True				
ANR	8032797	Statement	ip	674:15:21265:21266	8032746	2	True				
ANR	8032798	Statement	->	674:17:21267:21268	8032746	3	True				
ANR	8032799	Statement	out	674:19:21269:21271	8032746	4	True				
ANR	8032800	Statement	","	674:22:21272:21272	8032746	5	True				
ANR	8032801	Statement	20	674:24:21274:21275	8032746	6	True				
ANR	8032802	Statement	","	674:26:21276:21276	8032746	7	True				
ANR	8032803	Statement	"""This file uses at least one compression method for raster data (%d)\\n"""	675:8:21286:21356	8032746	8	True				
ANR	8032804	Statement	"""which pcl3 does not know.\\n"""	676:8:21366:21394	8032746	9	True				
ANR	8032805	Statement	","	676:37:21395:21395	8032746	10	True				
ANR	8032806	Statement	cmd	676:39:21397:21399	8032746	11	True				
ANR	8032807	Statement	->	676:42:21400:21401	8032746	12	True				
ANR	8032808	Statement	i	676:44:21402:21402	8032746	13	True				
ANR	8032809	Statement	)	676:45:21403:21403	8032746	14	True				
ANR	8032810	ExpressionStatement		676:46:21404:21404	8032746	15	True				
ANR	8032811	ExpressionStatement	ip -> seen_unknown_compression = TRUE	677:4:21410:21445	8032746	16	True				
ANR	8032812	AssignmentExpression	ip -> seen_unknown_compression = TRUE		8032746	0		=			
ANR	8032813	PtrMemberAccess	ip -> seen_unknown_compression		8032746	0					
ANR	8032814	Identifier	ip		8032746	0					
ANR	8032815	Identifier	seen_unknown_compression		8032746	1					
ANR	8032816	Identifier	TRUE		8032746	1					
ANR	8032817	ElseStatement	else		8032746	0					
ANR	8032818	CompoundStatement		12:7:410:410	8032746	0					
ANR	8032819	IfStatement	if ( cmd -> i > ip -> fdata . compression )		8032746	0					
ANR	8032820	Condition	cmd -> i > ip -> fdata . compression	680:8:21468:21497	8032746	0	True				
ANR	8032821	RelationalExpression	cmd -> i > ip -> fdata . compression		8032746	0		>			
ANR	8032822	PtrMemberAccess	cmd -> i		8032746	0					
ANR	8032823	Identifier	cmd		8032746	0					
ANR	8032824	Identifier	i		8032746	1					
ANR	8032825	MemberAccess	ip -> fdata . compression		8032746	1					
ANR	8032826	PtrMemberAccess	ip -> fdata		8032746	0					
ANR	8032827	Identifier	ip		8032746	0					
ANR	8032828	Identifier	fdata		8032746	1					
ANR	8032829	Identifier	compression		8032746	1					
ANR	8032830	ExpressionStatement	ip -> fdata . compression = cmd -> i	680:40:21500:21530	8032746	1	True				
ANR	8032831	AssignmentExpression	ip -> fdata . compression = cmd -> i		8032746	0		=			
ANR	8032832	MemberAccess	ip -> fdata . compression		8032746	0					
ANR	8032833	PtrMemberAccess	ip -> fdata		8032746	0					
ANR	8032834	Identifier	ip		8032746	0					
ANR	8032835	Identifier	fdata		8032746	1					
ANR	8032836	Identifier	compression		8032746	1					
ANR	8032837	PtrMemberAccess	cmd -> i		8032746	1					
ANR	8032838	Identifier	cmd		8032746	0					
ANR	8032839	Identifier	i		8032746	1					
ANR	8032840	ReturnStatement	return 0 ;	683:2:21539:21547	8032746	2	True				
ANR	8032841	PrimaryExpression	0		8032746	0					
ANR	8032842	ReturnType	static int		8032746	1					
ANR	8032843	Identifier	action_compression		8032746	2					
ANR	8032844	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8032746	3					
ANR	8032845	Parameter	FILE * in	667:30:21004:21011	8032746	0	True				
ANR	8032846	ParameterType	FILE *		8032746	0					
ANR	8032847	Identifier	in		8032746	1					
ANR	8032848	Parameter	const pcl_Command * cmd	667:40:21014:21035	8032746	1	True				
ANR	8032849	ParameterType	const pcl_Command *		8032746	0					
ANR	8032850	Identifier	cmd		8032746	1					
ANR	8032851	Parameter	void * i	667:64:21038:21044	8032746	2	True				
ANR	8032852	ParameterType	void *		8032746	0					
ANR	8032853	Identifier	i		8032746	1					
ANR	8032854	CFGEntryNode	ENTRY		8032746		True				
ANR	8032855	CFGExitNode	EXIT		8032746		True				
ANR	8032856	Symbol	pcl_cm_rl		8032746						
ANR	8032857	Symbol	ip -> fdata		8032746						
ANR	8032858	Symbol	in		8032746						
ANR	8032859	Symbol	ip		8032746						
ANR	8032860	Symbol	i		8032746						
ANR	8032861	Symbol	TRUE		8032746						
ANR	8032862	Symbol	ip -> fdata . compression		8032746						
ANR	8032863	Symbol	* ip		8032746						
ANR	8032864	Symbol	ip -> seen_unknown_compression		8032746						
ANR	8032865	Symbol	cmd -> i		8032746						
ANR	8032866	Symbol	pcl_cm_tiff		8032746						
ANR	8032867	Symbol	pcl_cm_delta		8032746						
ANR	8032868	Symbol	pcl_cm_crdr		8032746						
ANR	8032869	Symbol	cmd		8032746						
ANR	8032870	Symbol	* cmd		8032746						
ANR	8032871	Symbol	pcl_cm_none		8032746						
ANR	8032872	Function	action_raster_data	690:0:21699:22101							
ANR	8032873	FunctionDef	"action_raster_data (FILE * in , const pcl_Command * cmd , void * i)"		8032872	0					
ANR	8032874	CompoundStatement		691:0:21772:22101	8032872	0					
ANR	8032875	IdentifierDeclStatement	CollectedInfo * ip = i ;	692:2:21776:21797	8032872	0	True				
ANR	8032876	IdentifierDecl	* ip = i		8032872	0					
ANR	8032877	IdentifierDeclType	CollectedInfo *		8032872	0					
ANR	8032878	Identifier	ip		8032872	1					
ANR	8032879	AssignmentExpression	* ip = i		8032872	2		=			
ANR	8032880	Identifier	i		8032872	0					
ANR	8032881	Identifier	i		8032872	1					
ANR	8032882	IdentifierDeclStatement	int j ;	693:2:21801:21806	8032872	1	True				
ANR	8032883	IdentifierDecl	j		8032872	0					
ANR	8032884	IdentifierDeclType	int		8032872	0					
ANR	8032885	Identifier	j		8032872	1					
ANR	8032886	ExpressionStatement	ip -> seen_raster_data = TRUE	695:2:21811:21838	8032872	2	True				
ANR	8032887	AssignmentExpression	ip -> seen_raster_data = TRUE		8032872	0		=			
ANR	8032888	PtrMemberAccess	ip -> seen_raster_data		8032872	0					
ANR	8032889	Identifier	ip		8032872	0					
ANR	8032890	Identifier	seen_raster_data		8032872	1					
ANR	8032891	Identifier	TRUE		8032872	1					
ANR	8032892	IfStatement	if ( ! ip -> seen_first_colorant && cmd -> i > 0 && ip -> next_plane < ip -> first_colorant_planes )		8032872	3					
ANR	8032893	Condition	! ip -> seen_first_colorant && cmd -> i > 0 && ip -> next_plane < ip -> first_colorant_planes	696:6:21846:21935	8032872	0	True				
ANR	8032894	AndExpression	! ip -> seen_first_colorant && cmd -> i > 0 && ip -> next_plane < ip -> first_colorant_planes		8032872	0		&&			
ANR	8032895	UnaryOperationExpression	! ip -> seen_first_colorant		8032872	0					
ANR	8032896	UnaryOperator	!		8032872	0					
ANR	8032897	PtrMemberAccess	ip -> seen_first_colorant		8032872	1					
ANR	8032898	Identifier	ip		8032872	0					
ANR	8032899	Identifier	seen_first_colorant		8032872	1					
ANR	8032900	AndExpression	cmd -> i > 0 && ip -> next_plane < ip -> first_colorant_planes		8032872	1		&&			
ANR	8032901	RelationalExpression	cmd -> i > 0		8032872	0		>			
ANR	8032902	PtrMemberAccess	cmd -> i		8032872	0					
ANR	8032903	Identifier	cmd		8032872	0					
ANR	8032904	Identifier	i		8032872	1					
ANR	8032905	PrimaryExpression	0		8032872	1					
ANR	8032906	RelationalExpression	ip -> next_plane < ip -> first_colorant_planes		8032872	1		<			
ANR	8032907	PtrMemberAccess	ip -> next_plane		8032872	0					
ANR	8032908	Identifier	ip		8032872	0					
ANR	8032909	Identifier	next_plane		8032872	1					
ANR	8032910	PtrMemberAccess	ip -> first_colorant_planes		8032872	1					
ANR	8032911	Identifier	ip		8032872	0					
ANR	8032912	Identifier	first_colorant_planes		8032872	1					
ANR	8032913	ExpressionStatement	ip -> seen_first_colorant = TRUE	698:4:21942:21972	8032872	1	True				
ANR	8032914	AssignmentExpression	ip -> seen_first_colorant = TRUE		8032872	0		=			
ANR	8032915	PtrMemberAccess	ip -> seen_first_colorant		8032872	0					
ANR	8032916	Identifier	ip		8032872	0					
ANR	8032917	Identifier	seen_first_colorant		8032872	1					
ANR	8032918	Identifier	TRUE		8032872	1					
ANR	8032919	ForStatement	for ( j = cmd -> i ; j > 0 ; j -- )		8032872	4					
ANR	8032920	ForInit	j = cmd -> i ;	700:7:21982:21992	8032872	0	True				
ANR	8032921	AssignmentExpression	j = cmd -> i		8032872	0		=			
ANR	8032922	Identifier	j		8032872	0					
ANR	8032923	PtrMemberAccess	cmd -> i		8032872	1					
ANR	8032924	Identifier	cmd		8032872	0					
ANR	8032925	Identifier	i		8032872	1					
ANR	8032926	Condition	j > 0	700:19:21994:21998	8032872	1	True				
ANR	8032927	RelationalExpression	j > 0		8032872	0		>			
ANR	8032928	Identifier	j		8032872	0					
ANR	8032929	PrimaryExpression	0		8032872	1					
ANR	8032930	PostIncDecOperationExpression	j --	700:26:22001:22003	8032872	2	True				
ANR	8032931	Identifier	j		8032872	0					
ANR	8032932	IncDec	--		8032872	1					
ANR	8032933	ExpressionStatement	fgetc ( in )	700:31:22006:22015	8032872	3	True				
ANR	8032934	CallExpression	fgetc ( in )		8032872	0					
ANR	8032935	Callee	fgetc		8032872	0					
ANR	8032936	Identifier	fgetc		8032872	0					
ANR	8032937	ArgumentList	in		8032872	1					
ANR	8032938	Argument	in		8032872	0					
ANR	8032939	Identifier	in		8032872	0					
ANR	8032940	IfStatement	if ( cmd -> chars [ 2 ] == 'W' )		8032872	5					
ANR	8032941	Condition	cmd -> chars [ 2 ] == 'W'	701:6:22023:22042	8032872	0	True				
ANR	8032942	EqualityExpression	cmd -> chars [ 2 ] == 'W'		8032872	0		==			
ANR	8032943	ArrayIndexing	cmd -> chars [ 2 ]		8032872	0					
ANR	8032944	PtrMemberAccess	cmd -> chars		8032872	0					
ANR	8032945	Identifier	cmd		8032872	0					
ANR	8032946	Identifier	chars		8032872	1					
ANR	8032947	PrimaryExpression	2		8032872	1					
ANR	8032948	PrimaryExpression	'W'		8032872	1					
ANR	8032949	ExpressionStatement	ip -> next_plane = 0	701:28:22045:22063	8032872	1	True				
ANR	8032950	AssignmentExpression	ip -> next_plane = 0		8032872	0		=			
ANR	8032951	PtrMemberAccess	ip -> next_plane		8032872	0					
ANR	8032952	Identifier	ip		8032872	0					
ANR	8032953	Identifier	next_plane		8032872	1					
ANR	8032954	PrimaryExpression	0		8032872	1					
ANR	8032955	ElseStatement	else		8032872	0					
ANR	8032956	ExpressionStatement	ip -> next_plane ++	701:53:22070:22086	8032872	0	True				
ANR	8032957	PostIncDecOperationExpression	ip -> next_plane ++		8032872	0					
ANR	8032958	PtrMemberAccess	ip -> next_plane		8032872	0					
ANR	8032959	Identifier	ip		8032872	0					
ANR	8032960	Identifier	next_plane		8032872	1					
ANR	8032961	IncDec	++		8032872	1					
ANR	8032962	ReturnStatement	return 0 ;	703:2:22091:22099	8032872	6	True				
ANR	8032963	PrimaryExpression	0		8032872	0					
ANR	8032964	ReturnType	static int		8032872	1					
ANR	8032965	Identifier	action_raster_data		8032872	2					
ANR	8032966	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8032872	3					
ANR	8032967	Parameter	FILE * in	690:30:21729:21736	8032872	0	True				
ANR	8032968	ParameterType	FILE *		8032872	0					
ANR	8032969	Identifier	in		8032872	1					
ANR	8032970	Parameter	const pcl_Command * cmd	690:40:21739:21760	8032872	1	True				
ANR	8032971	ParameterType	const pcl_Command *		8032872	0					
ANR	8032972	Identifier	cmd		8032872	1					
ANR	8032973	Parameter	void * i	690:64:21763:21769	8032872	2	True				
ANR	8032974	ParameterType	void *		8032872	0					
ANR	8032975	Identifier	i		8032872	1					
ANR	8032976	CFGEntryNode	ENTRY		8032872		True				
ANR	8032977	CFGExitNode	EXIT		8032872		True				
ANR	8032978	Symbol	* cmd -> chars		8032872						
ANR	8032979	Symbol	ip -> first_colorant_planes		8032872						
ANR	8032980	Symbol	in		8032872						
ANR	8032981	Symbol	ip		8032872						
ANR	8032982	Symbol	i		8032872						
ANR	8032983	Symbol	TRUE		8032872						
ANR	8032984	Symbol	j		8032872						
ANR	8032985	Symbol	* ip		8032872						
ANR	8032986	Symbol	* * cmd		8032872						
ANR	8032987	Symbol	ip -> next_plane		8032872						
ANR	8032988	Symbol	ip -> seen_raster_data		8032872						
ANR	8032989	Symbol	cmd -> chars		8032872						
ANR	8032990	Symbol	ip -> seen_first_colorant		8032872						
ANR	8032991	Symbol	cmd -> i		8032872						
ANR	8032992	Symbol	cmd		8032872						
ANR	8032993	Symbol	* cmd		8032872						
ANR	8032994	Function	print_CRD	712:0:22335:22602							
ANR	8032995	FunctionDef	"print_CRD (FILE * out , const pcl_Octet * buffer)"		8032994	0					
ANR	8032996	CompoundStatement		713:0:22393:22602	8032994	0					
ANR	8032997	IdentifierDeclStatement	int j ;	714:2:22397:22402	8032994	0	True				
ANR	8032998	IdentifierDecl	j		8032994	0					
ANR	8032999	IdentifierDeclType	int		8032994	0					
ANR	8033000	Identifier	j		8032994	1					
ANR	8033001	ForStatement	for ( j = 0 ; j < buffer [ 1 ] ; j ++ )		8032994	1					
ANR	8033002	ForInit	j = 0 ;	716:7:22412:22417	8032994	0	True				
ANR	8033003	AssignmentExpression	j = 0		8032994	0		=			
ANR	8033004	Identifier	j		8032994	0					
ANR	8033005	PrimaryExpression	0		8032994	1					
ANR	8033006	Condition	j < buffer [ 1 ]	716:14:22419:22431	8032994	1	True				
ANR	8033007	RelationalExpression	j < buffer [ 1 ]		8032994	0		<			
ANR	8033008	Identifier	j		8032994	0					
ANR	8033009	ArrayIndexing	buffer [ 1 ]		8032994	1					
ANR	8033010	Identifier	buffer		8032994	0					
ANR	8033011	PrimaryExpression	1		8032994	1					
ANR	8033012	PostIncDecOperationExpression	j ++	716:29:22434:22436	8032994	2	True				
ANR	8033013	Identifier	j		8032994	0					
ANR	8033014	IncDec	++		8032994	1					
ANR	8033015	ExpressionStatement	"imessage ( out , 12 , ""    colorant %d: %4d x %4d ppi %2d levels\\n"" , j + 1 , two_octets ( 2 + 6 * j ) , two_octets ( 4 + 6 * j ) , two_octets ( 6 + 6 * j ) )"	717:4:22443:22589	8032994	3	True				
ANR	8033016	CallExpression	"imessage ( out , 12 , ""    colorant %d: %4d x %4d ppi %2d levels\\n"" , j + 1 , two_octets ( 2 + 6 * j ) , two_octets ( 4 + 6 * j ) , two_octets ( 6 + 6 * j ) )"		8032994	0					
ANR	8033017	Callee	imessage		8032994	0					
ANR	8033018	Identifier	imessage		8032994	0					
ANR	8033019	ArgumentList	out		8032994	1					
ANR	8033020	Argument	out		8032994	0					
ANR	8033021	Identifier	out		8032994	0					
ANR	8033022	Argument	12		8032994	1					
ANR	8033023	PrimaryExpression	12		8032994	0					
ANR	8033024	Argument	"""    colorant %d: %4d x %4d ppi %2d levels\\n"""		8032994	2					
ANR	8033025	PrimaryExpression	"""    colorant %d: %4d x %4d ppi %2d levels\\n"""		8032994	0					
ANR	8033026	Argument	j + 1		8032994	3					
ANR	8033027	AdditiveExpression	j + 1		8032994	0		+			
ANR	8033028	Identifier	j		8032994	0					
ANR	8033029	PrimaryExpression	1		8032994	1					
ANR	8033030	Argument	two_octets ( 2 + 6 * j )		8032994	4					
ANR	8033031	CallExpression	two_octets ( 2 + 6 * j )		8032994	0					
ANR	8033032	Callee	two_octets		8032994	0					
ANR	8033033	Identifier	two_octets		8032994	0					
ANR	8033034	ArgumentList	2 + 6 * j		8032994	1					
ANR	8033035	Argument	2 + 6 * j		8032994	0					
ANR	8033036	AdditiveExpression	2 + 6 * j		8032994	0		+			
ANR	8033037	PrimaryExpression	2		8032994	0					
ANR	8033038	MultiplicativeExpression	6 * j		8032994	1		*			
ANR	8033039	PrimaryExpression	6		8032994	0					
ANR	8033040	Identifier	j		8032994	1					
ANR	8033041	Argument	two_octets ( 4 + 6 * j )		8032994	5					
ANR	8033042	CallExpression	two_octets ( 4 + 6 * j )		8032994	0					
ANR	8033043	Callee	two_octets		8032994	0					
ANR	8033044	Identifier	two_octets		8032994	0					
ANR	8033045	ArgumentList	4 + 6 * j		8032994	1					
ANR	8033046	Argument	4 + 6 * j		8032994	0					
ANR	8033047	AdditiveExpression	4 + 6 * j		8032994	0		+			
ANR	8033048	PrimaryExpression	4		8032994	0					
ANR	8033049	MultiplicativeExpression	6 * j		8032994	1		*			
ANR	8033050	PrimaryExpression	6		8032994	0					
ANR	8033051	Identifier	j		8032994	1					
ANR	8033052	Argument	two_octets ( 6 + 6 * j )		8032994	6					
ANR	8033053	CallExpression	two_octets ( 6 + 6 * j )		8032994	0					
ANR	8033054	Callee	two_octets		8032994	0					
ANR	8033055	Identifier	two_octets		8032994	0					
ANR	8033056	ArgumentList	6 + 6 * j		8032994	1					
ANR	8033057	Argument	6 + 6 * j		8032994	0					
ANR	8033058	AdditiveExpression	6 + 6 * j		8032994	0		+			
ANR	8033059	PrimaryExpression	6		8032994	0					
ANR	8033060	MultiplicativeExpression	6 * j		8032994	1		*			
ANR	8033061	PrimaryExpression	6		8032994	0					
ANR	8033062	Identifier	j		8032994	1					
ANR	8033063	ReturnStatement	return ;	721:2:22594:22600	8032994	2	True				
ANR	8033064	ReturnType	static void		8032994	1					
ANR	8033065	Identifier	print_CRD		8032994	2					
ANR	8033066	ParameterList	"FILE * out , const pcl_Octet * buffer"		8032994	3					
ANR	8033067	Parameter	FILE * out	712:22:22357:22365	8032994	0	True				
ANR	8033068	ParameterType	FILE *		8032994	0					
ANR	8033069	Identifier	out		8032994	1					
ANR	8033070	Parameter	const pcl_Octet * buffer	712:33:22368:22390	8032994	1	True				
ANR	8033071	ParameterType	const pcl_Octet *		8032994	0					
ANR	8033072	Identifier	buffer		8032994	1					
ANR	8033073	CFGEntryNode	ENTRY		8032994		True				
ANR	8033074	CFGExitNode	EXIT		8032994		True				
ANR	8033075	Symbol	* buffer		8032994						
ANR	8033076	Symbol	j		8032994						
ANR	8033077	Symbol	buffer		8032994						
ANR	8033078	Symbol	two_octets		8032994						
ANR	8033079	Symbol	out		8032994						
ANR	8033080	Function	action_CRD	726:0:22686:25128							
ANR	8033081	FunctionDef	"action_CRD (FILE * in , const pcl_Command * cmd , void * i)"		8033080	0					
ANR	8033082	CompoundStatement		727:0:22765:25128	8033080	0					
ANR	8033083	IdentifierDeclStatement	CollectedInfo * ip = i ;	728:2:22769:22790	8033080	0	True				
ANR	8033084	IdentifierDecl	* ip = i		8033080	0					
ANR	8033085	IdentifierDeclType	CollectedInfo *		8033080	0					
ANR	8033086	Identifier	ip		8033080	1					
ANR	8033087	AssignmentExpression	* ip = i		8033080	2		=			
ANR	8033088	Identifier	i		8033080	0					
ANR	8033089	Identifier	i		8033080	1					
ANR	8033090	IdentifierDeclStatement	pcl_Octet * buffer ;	729:2:22794:22811	8033080	1	True				
ANR	8033091	IdentifierDecl	* buffer		8033080	0					
ANR	8033092	IdentifierDeclType	pcl_Octet *		8033080	0					
ANR	8033093	Identifier	buffer		8033080	1					
ANR	8033094	IdentifierDeclStatement	int errors = 0 ;	730:2:22815:22829	8033080	2	True				
ANR	8033095	IdentifierDecl	errors = 0		8033080	0					
ANR	8033096	IdentifierDeclType	int		8033080	0					
ANR	8033097	Identifier	errors		8033080	1					
ANR	8033098	AssignmentExpression	errors = 0		8033080	2		=			
ANR	8033099	Identifier	errors		8033080	0					
ANR	8033100	PrimaryExpression	0		8033080	1					
ANR	8033101	ExpressionStatement	ip -> seen_CRD = TRUE	732:2:22834:22853	8033080	3	True				
ANR	8033102	AssignmentExpression	ip -> seen_CRD = TRUE		8033080	0		=			
ANR	8033103	PtrMemberAccess	ip -> seen_CRD		8033080	0					
ANR	8033104	Identifier	ip		8033080	0					
ANR	8033105	Identifier	seen_CRD		8033080	1					
ANR	8033106	Identifier	TRUE		8033080	1					
ANR	8033107	IfStatement	if ( cmd -> i <= 0 )		8033080	4					
ANR	8033108	Condition	cmd -> i <= 0	734:6:22862:22872	8033080	0	True				
ANR	8033109	RelationalExpression	cmd -> i <= 0		8033080	0		<=			
ANR	8033110	PtrMemberAccess	cmd -> i		8033080	0					
ANR	8033111	Identifier	cmd		8033080	0					
ANR	8033112	Identifier	i		8033080	1					
ANR	8033113	PrimaryExpression	0		8033080	1					
ANR	8033114	CompoundStatement		8:19:109:109	8033080	1					
ANR	8033115	ExpressionStatement	ip -> CRD_active = FALSE	735:4:22881:22903	8033080	0	True				
ANR	8033116	AssignmentExpression	ip -> CRD_active = FALSE		8033080	0		=			
ANR	8033117	PtrMemberAccess	ip -> CRD_active		8033080	0					
ANR	8033118	Identifier	ip		8033080	0					
ANR	8033119	Identifier	CRD_active		8033080	1					
ANR	8033120	Identifier	FALSE		8033080	1					
ANR	8033121	ExpressionStatement	ip -> fdata . palette = pcl_no_palette	736:4:22909:22943	8033080	1	True				
ANR	8033122	AssignmentExpression	ip -> fdata . palette = pcl_no_palette		8033080	0		=			
ANR	8033123	MemberAccess	ip -> fdata . palette		8033080	0					
ANR	8033124	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033125	Identifier	ip		8033080	0					
ANR	8033126	Identifier	fdata		8033080	1					
ANR	8033127	Identifier	palette		8033080	1					
ANR	8033128	Identifier	pcl_no_palette		8033080	1					
ANR	8033129	ExpressionStatement	ip -> fdata . number_of_colorants = 1	737:4:22949:22982	8033080	2	True				
ANR	8033130	AssignmentExpression	ip -> fdata . number_of_colorants = 1		8033080	0		=			
ANR	8033131	MemberAccess	ip -> fdata . number_of_colorants		8033080	0					
ANR	8033132	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033133	Identifier	ip		8033080	0					
ANR	8033134	Identifier	fdata		8033080	1					
ANR	8033135	Identifier	number_of_colorants		8033080	1					
ANR	8033136	PrimaryExpression	1		8033080	1					
ANR	8033137	ExpressionStatement	ip -> fdata . colorant_array [ 0 ] . hres = ip -> fdata . colorant_array [ 0 ] . vres = 75	738:4:22988:23060	8033080	3	True				
ANR	8033138	AssignmentExpression	ip -> fdata . colorant_array [ 0 ] . hres = ip -> fdata . colorant_array [ 0 ] . vres = 75		8033080	0		=			
ANR	8033139	MemberAccess	ip -> fdata . colorant_array [ 0 ] . hres		8033080	0					
ANR	8033140	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8033080	0					
ANR	8033141	MemberAccess	ip -> fdata . colorant_array		8033080	0					
ANR	8033142	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033143	Identifier	ip		8033080	0					
ANR	8033144	Identifier	fdata		8033080	1					
ANR	8033145	Identifier	colorant_array		8033080	1					
ANR	8033146	PrimaryExpression	0		8033080	1					
ANR	8033147	Identifier	hres		8033080	1					
ANR	8033148	AssignmentExpression	ip -> fdata . colorant_array [ 0 ] . vres = 75		8033080	1		=			
ANR	8033149	MemberAccess	ip -> fdata . colorant_array [ 0 ] . vres		8033080	0					
ANR	8033150	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8033080	0					
ANR	8033151	MemberAccess	ip -> fdata . colorant_array		8033080	0					
ANR	8033152	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033153	Identifier	ip		8033080	0					
ANR	8033154	Identifier	fdata		8033080	1					
ANR	8033155	Identifier	colorant_array		8033080	1					
ANR	8033156	PrimaryExpression	0		8033080	1					
ANR	8033157	Identifier	vres		8033080	1					
ANR	8033158	PrimaryExpression	75		8033080	1					
ANR	8033159	ExpressionStatement	ip -> fdata . colorant_array [ 0 ] . levels = 2	739:4:23066:23104	8033080	4	True				
ANR	8033160	AssignmentExpression	ip -> fdata . colorant_array [ 0 ] . levels = 2		8033080	0		=			
ANR	8033161	MemberAccess	ip -> fdata . colorant_array [ 0 ] . levels		8033080	0					
ANR	8033162	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8033080	0					
ANR	8033163	MemberAccess	ip -> fdata . colorant_array		8033080	0					
ANR	8033164	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033165	Identifier	ip		8033080	0					
ANR	8033166	Identifier	fdata		8033080	1					
ANR	8033167	Identifier	colorant_array		8033080	1					
ANR	8033168	PrimaryExpression	0		8033080	1					
ANR	8033169	Identifier	levels		8033080	1					
ANR	8033170	PrimaryExpression	2		8033080	1					
ANR	8033171	ExpressionStatement	ip -> first_colorant_planes = 1	740:4:23110:23139	8033080	5	True				
ANR	8033172	AssignmentExpression	ip -> first_colorant_planes = 1		8033080	0		=			
ANR	8033173	PtrMemberAccess	ip -> first_colorant_planes		8033080	0					
ANR	8033174	Identifier	ip		8033080	0					
ANR	8033175	Identifier	first_colorant_planes		8033080	1					
ANR	8033176	PrimaryExpression	1		8033080	1					
ANR	8033177	ReturnStatement	return 0 ;	741:4:23145:23153	8033080	6	True				
ANR	8033178	PrimaryExpression	0		8033080	0					
ANR	8033179	ExpressionStatement	ip -> CRD_active = TRUE	743:2:23161:23182	8033080	5	True				
ANR	8033180	AssignmentExpression	ip -> CRD_active = TRUE		8033080	0		=			
ANR	8033181	PtrMemberAccess	ip -> CRD_active		8033080	0					
ANR	8033182	Identifier	ip		8033080	0					
ANR	8033183	Identifier	CRD_active		8033080	1					
ANR	8033184	Identifier	TRUE		8033080	1					
ANR	8033185	ExpressionStatement	buffer = ( pcl_Octet * ) malloc ( cmd -> i )	745:2:23187:23223	8033080	6	True				
ANR	8033186	AssignmentExpression	buffer = ( pcl_Octet * ) malloc ( cmd -> i )		8033080	0		=			
ANR	8033187	Identifier	buffer		8033080	0					
ANR	8033188	CastExpression	( pcl_Octet * ) malloc ( cmd -> i )		8033080	1					
ANR	8033189	CastTarget	pcl_Octet *		8033080	0					
ANR	8033190	CallExpression	malloc ( cmd -> i )		8033080	1					
ANR	8033191	Callee	malloc		8033080	0					
ANR	8033192	Identifier	malloc		8033080	0					
ANR	8033193	ArgumentList	cmd -> i		8033080	1					
ANR	8033194	Argument	cmd -> i		8033080	0					
ANR	8033195	PtrMemberAccess	cmd -> i		8033080	0					
ANR	8033196	Identifier	cmd		8033080	0					
ANR	8033197	Identifier	i		8033080	1					
ANR	8033198	ExpressionStatement	check ( buffer )	746:2:23227:23240	8033080	7	True				
ANR	8033199	CallExpression	check ( buffer )		8033080	0					
ANR	8033200	Callee	check		8033080	0					
ANR	8033201	Identifier	check		8033080	0					
ANR	8033202	ArgumentList	buffer		8033080	1					
ANR	8033203	Argument	buffer		8033080	0					
ANR	8033204	Identifier	buffer		8033080	0					
ANR	8033205	ExpressionStatement	"fread ( buffer , sizeof ( pcl_Octet ) , cmd -> i , in )"	747:2:23244:23288	8033080	8	True				
ANR	8033206	CallExpression	"fread ( buffer , sizeof ( pcl_Octet ) , cmd -> i , in )"		8033080	0					
ANR	8033207	Callee	fread		8033080	0					
ANR	8033208	Identifier	fread		8033080	0					
ANR	8033209	ArgumentList	buffer		8033080	1					
ANR	8033210	Argument	buffer		8033080	0					
ANR	8033211	Identifier	buffer		8033080	0					
ANR	8033212	Argument	sizeof ( pcl_Octet )		8033080	1					
ANR	8033213	SizeofExpression	sizeof ( pcl_Octet )		8033080	0					
ANR	8033214	Sizeof	sizeof		8033080	0					
ANR	8033215	SizeofOperand	pcl_Octet		8033080	1					
ANR	8033216	Argument	cmd -> i		8033080	2					
ANR	8033217	PtrMemberAccess	cmd -> i		8033080	0					
ANR	8033218	Identifier	cmd		8033080	0					
ANR	8033219	Identifier	i		8033080	1					
ANR	8033220	Argument	in		8033080	3					
ANR	8033221	Identifier	in		8033080	0					
ANR	8033222	IfStatement	if ( buffer [ 0 ] == 2 )		8033080	9					
ANR	8033223	Condition	buffer [ 0 ] == 2	749:6:23297:23310	8033080	0	True				
ANR	8033224	EqualityExpression	buffer [ 0 ] == 2		8033080	0		==			
ANR	8033225	ArrayIndexing	buffer [ 0 ]		8033080	0					
ANR	8033226	Identifier	buffer		8033080	0					
ANR	8033227	PrimaryExpression	0		8033080	1					
ANR	8033228	PrimaryExpression	2		8033080	1					
ANR	8033229	CompoundStatement		23:22:547:547	8033080	1					
ANR	8033230	IfStatement	if ( 2 + buffer [ 1 ] * 6 != cmd -> i )		8033080	0					
ANR	8033231	Condition	2 + buffer [ 1 ] * 6 != cmd -> i	752:8:23449:23473	8033080	0	True				
ANR	8033232	EqualityExpression	2 + buffer [ 1 ] * 6 != cmd -> i		8033080	0		!=			
ANR	8033233	AdditiveExpression	2 + buffer [ 1 ] * 6		8033080	0		+			
ANR	8033234	PrimaryExpression	2		8033080	0					
ANR	8033235	MultiplicativeExpression	buffer [ 1 ] * 6		8033080	1		*			
ANR	8033236	ArrayIndexing	buffer [ 1 ]		8033080	0					
ANR	8033237	Identifier	buffer		8033080	0					
ANR	8033238	PrimaryExpression	1		8033080	1					
ANR	8033239	PrimaryExpression	6		8033080	1					
ANR	8033240	PtrMemberAccess	cmd -> i		8033080	1					
ANR	8033241	Identifier	cmd		8033080	0					
ANR	8033242	Identifier	i		8033080	1					
ANR	8033243	CompoundStatement		26:35:710:710	8033080	1					
ANR	8033244	ExpressionStatement	"emessage ( 30 , ""Illegal field length in Configure Raster Data command.\\n"" )"	753:6:23484:23556	8033080	0	True				
ANR	8033245	CallExpression	"emessage ( 30 , ""Illegal field length in Configure Raster Data command.\\n"" )"		8033080	0					
ANR	8033246	Callee	emessage		8033080	0					
ANR	8033247	Identifier	emessage		8033080	0					
ANR	8033248	ArgumentList	30		8033080	1					
ANR	8033249	Argument	30		8033080	0					
ANR	8033250	PrimaryExpression	30		8033080	0					
ANR	8033251	Argument	"""Illegal field length in Configure Raster Data command.\\n"""		8033080	1					
ANR	8033252	PrimaryExpression	"""Illegal field length in Configure Raster Data command.\\n"""		8033080	0					
ANR	8033253	ReturnStatement	return - 1 ;	754:6:23564:23573	8033080	1	True				
ANR	8033254	UnaryOperationExpression	- 1		8033080	0					
ANR	8033255	UnaryOperator	-		8033080	0					
ANR	8033256	PrimaryExpression	1		8033080	1					
ANR	8033257	IfStatement	if ( buffer [ 1 ] == 1 || buffer [ 1 ] == 3 || buffer [ 1 ] == 4 )		8033080	1					
ANR	8033258	Condition	buffer [ 1 ] == 1 || buffer [ 1 ] == 3 || buffer [ 1 ] == 4	757:8:23590:23639	8033080	0	True				
ANR	8033259	OrExpression	buffer [ 1 ] == 1 || buffer [ 1 ] == 3 || buffer [ 1 ] == 4		8033080	0		||			
ANR	8033260	EqualityExpression	buffer [ 1 ] == 1		8033080	0		==			
ANR	8033261	ArrayIndexing	buffer [ 1 ]		8033080	0					
ANR	8033262	Identifier	buffer		8033080	0					
ANR	8033263	PrimaryExpression	1		8033080	1					
ANR	8033264	PrimaryExpression	1		8033080	1					
ANR	8033265	OrExpression	buffer [ 1 ] == 3 || buffer [ 1 ] == 4		8033080	1		||			
ANR	8033266	EqualityExpression	buffer [ 1 ] == 3		8033080	0		==			
ANR	8033267	ArrayIndexing	buffer [ 1 ]		8033080	0					
ANR	8033268	Identifier	buffer		8033080	0					
ANR	8033269	PrimaryExpression	1		8033080	1					
ANR	8033270	PrimaryExpression	3		8033080	1					
ANR	8033271	EqualityExpression	buffer [ 1 ] == 4		8033080	1		==			
ANR	8033272	ArrayIndexing	buffer [ 1 ]		8033080	0					
ANR	8033273	Identifier	buffer		8033080	0					
ANR	8033274	PrimaryExpression	1		8033080	1					
ANR	8033275	PrimaryExpression	4		8033080	1					
ANR	8033276	CompoundStatement		32:6:884:889	8033080	1					
ANR	8033277	IdentifierDeclStatement	int j ;	758:6:23650:23655	8033080	0	True				
ANR	8033278	IdentifierDecl	j		8033080	0					
ANR	8033279	IdentifierDeclType	int		8033080	0					
ANR	8033280	Identifier	j		8033080	1					
ANR	8033281	ExpressionStatement	ip -> fdata . number_of_colorants = buffer [ 1 ]	760:6:23664:23705	8033080	1	True				
ANR	8033282	AssignmentExpression	ip -> fdata . number_of_colorants = buffer [ 1 ]		8033080	0		=			
ANR	8033283	MemberAccess	ip -> fdata . number_of_colorants		8033080	0					
ANR	8033284	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033285	Identifier	ip		8033080	0					
ANR	8033286	Identifier	fdata		8033080	1					
ANR	8033287	Identifier	number_of_colorants		8033080	1					
ANR	8033288	ArrayIndexing	buffer [ 1 ]		8033080	1					
ANR	8033289	Identifier	buffer		8033080	0					
ANR	8033290	PrimaryExpression	1		8033080	1					
ANR	8033291	SwitchStatement	switch ( ip -> fdata . number_of_colorants )		8033080	2					
ANR	8033292	Condition	ip -> fdata . number_of_colorants	761:14:23721:23749	8033080	0	True				
ANR	8033293	MemberAccess	ip -> fdata . number_of_colorants		8033080	0					
ANR	8033294	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033295	Identifier	ip		8033080	0					
ANR	8033296	Identifier	fdata		8033080	1					
ANR	8033297	Identifier	number_of_colorants		8033080	1					
ANR	8033298	CompoundStatement		35:45:986:986	8033080	1					
ANR	8033299	Label	case 1 :	762:8:23762:23768	8033080	0	True				
ANR	8033300	ExpressionStatement	ip -> fdata . palette = pcl_black	763:10:23780:23809	8033080	1	True				
ANR	8033301	AssignmentExpression	ip -> fdata . palette = pcl_black		8033080	0		=			
ANR	8033302	MemberAccess	ip -> fdata . palette		8033080	0					
ANR	8033303	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033304	Identifier	ip		8033080	0					
ANR	8033305	Identifier	fdata		8033080	1					
ANR	8033306	Identifier	palette		8033080	1					
ANR	8033307	Identifier	pcl_black		8033080	1					
ANR	8033308	BreakStatement	break ;	763:41:23811:23816	8033080	2	True				
ANR	8033309	Label	case 3 :	764:8:23826:23832	8033080	3	True				
ANR	8033310	ExpressionStatement	ip -> fdata . palette = pcl_CMY	765:10:23844:23871	8033080	4	True				
ANR	8033311	AssignmentExpression	ip -> fdata . palette = pcl_CMY		8033080	0		=			
ANR	8033312	MemberAccess	ip -> fdata . palette		8033080	0					
ANR	8033313	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033314	Identifier	ip		8033080	0					
ANR	8033315	Identifier	fdata		8033080	1					
ANR	8033316	Identifier	palette		8033080	1					
ANR	8033317	Identifier	pcl_CMY		8033080	1					
ANR	8033318	BreakStatement	break ;	765:39:23873:23878	8033080	5	True				
ANR	8033319	Label	case 4 :	766:8:23888:23894	8033080	6	True				
ANR	8033320	ExpressionStatement	ip -> fdata . palette = pcl_CMYK	767:10:23906:23934	8033080	7	True				
ANR	8033321	AssignmentExpression	ip -> fdata . palette = pcl_CMYK		8033080	0		=			
ANR	8033322	MemberAccess	ip -> fdata . palette		8033080	0					
ANR	8033323	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033324	Identifier	ip		8033080	0					
ANR	8033325	Identifier	fdata		8033080	1					
ANR	8033326	Identifier	palette		8033080	1					
ANR	8033327	Identifier	pcl_CMYK		8033080	1					
ANR	8033328	BreakStatement	break ;	767:40:23936:23941	8033080	8	True				
ANR	8033329	ForStatement	for ( j = 0 ; j < ip -> fdata . number_of_colorants ; j ++ )		8033080	3					
ANR	8033330	ForInit	j = 0 ;	770:11:23963:23968	8033080	0	True				
ANR	8033331	AssignmentExpression	j = 0		8033080	0		=			
ANR	8033332	Identifier	j		8033080	0					
ANR	8033333	PrimaryExpression	0		8033080	1					
ANR	8033334	Condition	j < ip -> fdata . number_of_colorants	770:18:23970:24002	8033080	1	True				
ANR	8033335	RelationalExpression	j < ip -> fdata . number_of_colorants		8033080	0		<			
ANR	8033336	Identifier	j		8033080	0					
ANR	8033337	MemberAccess	ip -> fdata . number_of_colorants		8033080	1					
ANR	8033338	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033339	Identifier	ip		8033080	0					
ANR	8033340	Identifier	fdata		8033080	1					
ANR	8033341	Identifier	number_of_colorants		8033080	1					
ANR	8033342	PostIncDecOperationExpression	j ++	770:53:24005:24007	8033080	2	True				
ANR	8033343	Identifier	j		8033080	0					
ANR	8033344	IncDec	++		8033080	1					
ANR	8033345	CompoundStatement		44:58:1244:1244	8033080	3					
ANR	8033346	ExpressionStatement	ip -> fdata . colorant_array [ j ] . hres = two_octets ( 2 + 6 * j )	771:8:24020:24074	8033080	0	True				
ANR	8033347	AssignmentExpression	ip -> fdata . colorant_array [ j ] . hres = two_octets ( 2 + 6 * j )		8033080	0		=			
ANR	8033348	MemberAccess	ip -> fdata . colorant_array [ j ] . hres		8033080	0					
ANR	8033349	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8033080	0					
ANR	8033350	MemberAccess	ip -> fdata . colorant_array		8033080	0					
ANR	8033351	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033352	Identifier	ip		8033080	0					
ANR	8033353	Identifier	fdata		8033080	1					
ANR	8033354	Identifier	colorant_array		8033080	1					
ANR	8033355	Identifier	j		8033080	1					
ANR	8033356	Identifier	hres		8033080	1					
ANR	8033357	CallExpression	two_octets ( 2 + 6 * j )		8033080	1					
ANR	8033358	Callee	two_octets		8033080	0					
ANR	8033359	Identifier	two_octets		8033080	0					
ANR	8033360	ArgumentList	2 + 6 * j		8033080	1					
ANR	8033361	Argument	2 + 6 * j		8033080	0					
ANR	8033362	AdditiveExpression	2 + 6 * j		8033080	0		+			
ANR	8033363	PrimaryExpression	2		8033080	0					
ANR	8033364	MultiplicativeExpression	6 * j		8033080	1		*			
ANR	8033365	PrimaryExpression	6		8033080	0					
ANR	8033366	Identifier	j		8033080	1					
ANR	8033367	ExpressionStatement	ip -> fdata . colorant_array [ j ] . vres = two_octets ( 4 + 6 * j )	772:8:24084:24138	8033080	1	True				
ANR	8033368	AssignmentExpression	ip -> fdata . colorant_array [ j ] . vres = two_octets ( 4 + 6 * j )		8033080	0		=			
ANR	8033369	MemberAccess	ip -> fdata . colorant_array [ j ] . vres		8033080	0					
ANR	8033370	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8033080	0					
ANR	8033371	MemberAccess	ip -> fdata . colorant_array		8033080	0					
ANR	8033372	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033373	Identifier	ip		8033080	0					
ANR	8033374	Identifier	fdata		8033080	1					
ANR	8033375	Identifier	colorant_array		8033080	1					
ANR	8033376	Identifier	j		8033080	1					
ANR	8033377	Identifier	vres		8033080	1					
ANR	8033378	CallExpression	two_octets ( 4 + 6 * j )		8033080	1					
ANR	8033379	Callee	two_octets		8033080	0					
ANR	8033380	Identifier	two_octets		8033080	0					
ANR	8033381	ArgumentList	4 + 6 * j		8033080	1					
ANR	8033382	Argument	4 + 6 * j		8033080	0					
ANR	8033383	AdditiveExpression	4 + 6 * j		8033080	0		+			
ANR	8033384	PrimaryExpression	4		8033080	0					
ANR	8033385	MultiplicativeExpression	6 * j		8033080	1		*			
ANR	8033386	PrimaryExpression	6		8033080	0					
ANR	8033387	Identifier	j		8033080	1					
ANR	8033388	ExpressionStatement	ip -> fdata . colorant_array [ j ] . levels = two_octets ( 6 + 6 * j )	773:8:24148:24204	8033080	2	True				
ANR	8033389	AssignmentExpression	ip -> fdata . colorant_array [ j ] . levels = two_octets ( 6 + 6 * j )		8033080	0		=			
ANR	8033390	MemberAccess	ip -> fdata . colorant_array [ j ] . levels		8033080	0					
ANR	8033391	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8033080	0					
ANR	8033392	MemberAccess	ip -> fdata . colorant_array		8033080	0					
ANR	8033393	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033394	Identifier	ip		8033080	0					
ANR	8033395	Identifier	fdata		8033080	1					
ANR	8033396	Identifier	colorant_array		8033080	1					
ANR	8033397	Identifier	j		8033080	1					
ANR	8033398	Identifier	levels		8033080	1					
ANR	8033399	CallExpression	two_octets ( 6 + 6 * j )		8033080	1					
ANR	8033400	Callee	two_octets		8033080	0					
ANR	8033401	Identifier	two_octets		8033080	0					
ANR	8033402	ArgumentList	6 + 6 * j		8033080	1					
ANR	8033403	Argument	6 + 6 * j		8033080	0					
ANR	8033404	AdditiveExpression	6 + 6 * j		8033080	0		+			
ANR	8033405	PrimaryExpression	6		8033080	0					
ANR	8033406	MultiplicativeExpression	6 * j		8033080	1		*			
ANR	8033407	PrimaryExpression	6		8033080	0					
ANR	8033408	Identifier	j		8033080	1					
ANR	8033409	CompoundStatement		51:8:1465:1478	8033080	4					
ANR	8033410	IdentifierDeclStatement	int power = 1 ;	777:8:24231:24244	8033080	0	True				
ANR	8033411	IdentifierDecl	power = 1		8033080	0					
ANR	8033412	IdentifierDeclType	int		8033080	0					
ANR	8033413	Identifier	power		8033080	1					
ANR	8033414	AssignmentExpression	power = 1		8033080	2		=			
ANR	8033415	Identifier	power		8033080	0					
ANR	8033416	PrimaryExpression	1		8033080	1					
ANR	8033417	ExpressionStatement	ip -> first_colorant_planes = 0	778:8:24254:24283	8033080	1	True				
ANR	8033418	AssignmentExpression	ip -> first_colorant_planes = 0		8033080	0		=			
ANR	8033419	PtrMemberAccess	ip -> first_colorant_planes		8033080	0					
ANR	8033420	Identifier	ip		8033080	0					
ANR	8033421	Identifier	first_colorant_planes		8033080	1					
ANR	8033422	PrimaryExpression	0		8033080	1					
ANR	8033423	WhileStatement	while ( power < ip -> fdata . colorant_array [ 0 ] . levels )		8033080	2					
ANR	8033424	Condition	power < ip -> fdata . colorant_array [ 0 ] . levels	780:15:24301:24342	8033080	0	True				
ANR	8033425	RelationalExpression	power < ip -> fdata . colorant_array [ 0 ] . levels		8033080	0		<			
ANR	8033426	Identifier	power		8033080	0					
ANR	8033427	MemberAccess	ip -> fdata . colorant_array [ 0 ] . levels		8033080	1					
ANR	8033428	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8033080	0					
ANR	8033429	MemberAccess	ip -> fdata . colorant_array		8033080	0					
ANR	8033430	PtrMemberAccess	ip -> fdata		8033080	0					
ANR	8033431	Identifier	ip		8033080	0					
ANR	8033432	Identifier	fdata		8033080	1					
ANR	8033433	Identifier	colorant_array		8033080	1					
ANR	8033434	PrimaryExpression	0		8033080	1					
ANR	8033435	Identifier	levels		8033080	1					
ANR	8033436	CompoundStatement		54:59:1579:1579	8033080	1					
ANR	8033437	ExpressionStatement	power *= 2	781:10:24357:24367	8033080	0	True				
ANR	8033438	AssignmentExpression	power *= 2		8033080	0		*=			
ANR	8033439	Identifier	power		8033080	0					
ANR	8033440	PrimaryExpression	2		8033080	1					
ANR	8033441	ExpressionStatement	ip -> first_colorant_planes ++	782:10:24379:24406	8033080	1	True				
ANR	8033442	PostIncDecOperationExpression	ip -> first_colorant_planes ++		8033080	0					
ANR	8033443	PtrMemberAccess	ip -> first_colorant_planes		8033080	0					
ANR	8033444	Identifier	ip		8033080	0					
ANR	8033445	Identifier	first_colorant_planes		8033080	1					
ANR	8033446	IncDec	++		8033080	1					
ANR	8033447	ElseStatement	else		8033080	0					
ANR	8033448	CompoundStatement		60:9:1675:1675	8033080	0					
ANR	8033449	Statement	emessage	787:6:24449:24456	8033080	0	True				
ANR	8033450	Statement	(	787:14:24457:24457	8033080	1	True				
ANR	8033451	Statement	31	787:15:24458:24459	8033080	2	True				
ANR	8033452	Statement	","	787:17:24460:24460	8033080	3	True				
ANR	8033453	Statement	"""This file contains a Configure Raster Data command with an\\n"""	788:8:24470:24531	8033080	4	True				
ANR	8033454	Statement	"""  illegal number of colorants (%d) and the following data:\\n"""	789:8:24541:24602	8033080	5	True				
ANR	8033455	Statement	","	789:70:24603:24603	8033080	6	True				
ANR	8033456	Statement	buffer	790:8:24613:24618	8033080	7	True				
ANR	8033457	Statement	[	790:14:24619:24619	8033080	8	True				
ANR	8033458	Statement	1	790:15:24620:24620	8033080	9	True				
ANR	8033459	Statement	]	790:16:24621:24621	8033080	10	True				
ANR	8033460	Statement	)	790:17:24622:24622	8033080	11	True				
ANR	8033461	ExpressionStatement		790:18:24623:24623	8033080	12	True				
ANR	8033462	ExpressionStatement	"print_CRD ( stderr , buffer )"	791:6:24631:24656	8033080	13	True				
ANR	8033463	CallExpression	"print_CRD ( stderr , buffer )"		8033080	0					
ANR	8033464	Callee	print_CRD		8033080	0					
ANR	8033465	Identifier	print_CRD		8033080	0					
ANR	8033466	ArgumentList	stderr		8033080	1					
ANR	8033467	Argument	stderr		8033080	0					
ANR	8033468	Identifier	stderr		8033080	0					
ANR	8033469	Argument	buffer		8033080	1					
ANR	8033470	Identifier	buffer		8033080	0					
ANR	8033471	ExpressionStatement	errors ++	792:6:24664:24672	8033080	14	True				
ANR	8033472	PostIncDecOperationExpression	errors ++		8033080	0					
ANR	8033473	Identifier	errors		8033080	0					
ANR	8033474	IncDec	++		8033080	1					
ANR	8033475	ElseStatement	else		8033080	0					
ANR	8033476	CompoundStatement		69:7:1925:1925	8033080	0					
ANR	8033477	Statement	emessage	796:4:24697:24704	8033080	0	True				
ANR	8033478	Statement	(	796:12:24705:24705	8033080	1	True				
ANR	8033479	Statement	32	796:13:24706:24707	8033080	2	True				
ANR	8033480	Statement	","	796:15:24708:24708	8033080	3	True				
ANR	8033481	Statement	"""This file contains a Configure Raster Data command with an\\n"""	797:6:24716:24777	8033080	4	True				
ANR	8033482	Statement	"""  unknown format (%d).\\n"""	798:6:24785:24810	8033080	5	True				
ANR	8033483	Statement	","	798:32:24811:24811	8033080	6	True				
ANR	8033484	Statement	(	799:6:24819:24819	8033080	7	True				
ANR	8033485	Statement	int	799:7:24820:24822	8033080	8	True				
ANR	8033486	Statement	)	799:10:24823:24823	8033080	9	True				
ANR	8033487	Statement	buffer	799:11:24824:24829	8033080	10	True				
ANR	8033488	Statement	[	799:17:24830:24830	8033080	11	True				
ANR	8033489	Statement	0	799:18:24831:24831	8033080	12	True				
ANR	8033490	Statement	]	799:19:24832:24832	8033080	13	True				
ANR	8033491	Statement	)	799:20:24833:24833	8033080	14	True				
ANR	8033492	ExpressionStatement		799:21:24834:24834	8033080	15	True				
ANR	8033493	IfStatement	if ( cmd -> i > 2 && cmd -> i == 2 + buffer [ 1 ] * 6 )		8033080	16					
ANR	8033494	Condition	cmd -> i > 2 && cmd -> i == 2 + buffer [ 1 ] * 6	800:8:24844:24882	8033080	0	True				
ANR	8033495	AndExpression	cmd -> i > 2 && cmd -> i == 2 + buffer [ 1 ] * 6		8033080	0		&&			
ANR	8033496	RelationalExpression	cmd -> i > 2		8033080	0		>			
ANR	8033497	PtrMemberAccess	cmd -> i		8033080	0					
ANR	8033498	Identifier	cmd		8033080	0					
ANR	8033499	Identifier	i		8033080	1					
ANR	8033500	PrimaryExpression	2		8033080	1					
ANR	8033501	EqualityExpression	cmd -> i == 2 + buffer [ 1 ] * 6		8033080	1		==			
ANR	8033502	PtrMemberAccess	cmd -> i		8033080	0					
ANR	8033503	Identifier	cmd		8033080	0					
ANR	8033504	Identifier	i		8033080	1					
ANR	8033505	AdditiveExpression	2 + buffer [ 1 ] * 6		8033080	1		+			
ANR	8033506	PrimaryExpression	2		8033080	0					
ANR	8033507	MultiplicativeExpression	buffer [ 1 ] * 6		8033080	1		*			
ANR	8033508	ArrayIndexing	buffer [ 1 ]		8033080	0					
ANR	8033509	Identifier	buffer		8033080	0					
ANR	8033510	PrimaryExpression	1		8033080	1					
ANR	8033511	PrimaryExpression	6		8033080	1					
ANR	8033512	CompoundStatement		74:49:2119:2119	8033080	1					
ANR	8033513	ExpressionStatement	"imessage ( stderr , 33 , ""  It *might* mean the following:\\n"" )"	801:6:24893:24951	8033080	0	True				
ANR	8033514	CallExpression	"imessage ( stderr , 33 , ""  It *might* mean the following:\\n"" )"		8033080	0					
ANR	8033515	Callee	imessage		8033080	0					
ANR	8033516	Identifier	imessage		8033080	0					
ANR	8033517	ArgumentList	stderr		8033080	1					
ANR	8033518	Argument	stderr		8033080	0					
ANR	8033519	Identifier	stderr		8033080	0					
ANR	8033520	Argument	33		8033080	1					
ANR	8033521	PrimaryExpression	33		8033080	0					
ANR	8033522	Argument	"""  It *might* mean the following:\\n"""		8033080	2					
ANR	8033523	PrimaryExpression	"""  It *might* mean the following:\\n"""		8033080	0					
ANR	8033524	ExpressionStatement	"print_CRD ( stderr , buffer )"	802:6:24959:24984	8033080	1	True				
ANR	8033525	CallExpression	"print_CRD ( stderr , buffer )"		8033080	0					
ANR	8033526	Callee	print_CRD		8033080	0					
ANR	8033527	Identifier	print_CRD		8033080	0					
ANR	8033528	ArgumentList	stderr		8033080	1					
ANR	8033529	Argument	stderr		8033080	0					
ANR	8033530	Identifier	stderr		8033080	0					
ANR	8033531	Argument	buffer		8033080	1					
ANR	8033532	Identifier	buffer		8033080	0					
ANR	8033533	ExpressionStatement	"imessage ( stderr , 34 , ""  This format is not supported by pcl3.\\n"" )"	803:6:24992:25057	8033080	2	True				
ANR	8033534	CallExpression	"imessage ( stderr , 34 , ""  This format is not supported by pcl3.\\n"" )"		8033080	0					
ANR	8033535	Callee	imessage		8033080	0					
ANR	8033536	Identifier	imessage		8033080	0					
ANR	8033537	ArgumentList	stderr		8033080	1					
ANR	8033538	Argument	stderr		8033080	0					
ANR	8033539	Identifier	stderr		8033080	0					
ANR	8033540	Argument	34		8033080	1					
ANR	8033541	PrimaryExpression	34		8033080	0					
ANR	8033542	Argument	"""  This format is not supported by pcl3.\\n"""		8033080	2					
ANR	8033543	PrimaryExpression	"""  This format is not supported by pcl3.\\n"""		8033080	0					
ANR	8033544	ExpressionStatement	errors ++	805:4:25069:25077	8033080	17	True				
ANR	8033545	PostIncDecOperationExpression	errors ++		8033080	0					
ANR	8033546	Identifier	errors		8033080	0					
ANR	8033547	IncDec	++		8033080	1					
ANR	8033548	ExpressionStatement	free ( buffer )	807:2:25085:25097	8033080	10	True				
ANR	8033549	CallExpression	free ( buffer )		8033080	0					
ANR	8033550	Callee	free		8033080	0					
ANR	8033551	Identifier	free		8033080	0					
ANR	8033552	ArgumentList	buffer		8033080	1					
ANR	8033553	Argument	buffer		8033080	0					
ANR	8033554	Identifier	buffer		8033080	0					
ANR	8033555	ReturnStatement	return errors > 0 ? - 1 : 0 ;	809:2:25102:25126	8033080	11	True				
ANR	8033556	ConditionalExpression	errors > 0 ? - 1 : 0		8033080	0					
ANR	8033557	Condition	errors > 0		8033080	0					
ANR	8033558	RelationalExpression	errors > 0		8033080	0		>			
ANR	8033559	Identifier	errors		8033080	0					
ANR	8033560	PrimaryExpression	0		8033080	1					
ANR	8033561	UnaryOperationExpression	- 1		8033080	1					
ANR	8033562	UnaryOperator	-		8033080	0					
ANR	8033563	PrimaryExpression	1		8033080	1					
ANR	8033564	PrimaryExpression	0		8033080	2					
ANR	8033565	ReturnType	static int		8033080	1					
ANR	8033566	Identifier	action_CRD		8033080	2					
ANR	8033567	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8033080	3					
ANR	8033568	Parameter	FILE * in	726:22:22708:22715	8033080	0	True				
ANR	8033569	ParameterType	FILE *		8033080	0					
ANR	8033570	Identifier	in		8033080	1					
ANR	8033571	Parameter	const pcl_Command * cmd	726:32:22718:22739	8033080	1	True				
ANR	8033572	ParameterType	const pcl_Command *		8033080	0					
ANR	8033573	Identifier	cmd		8033080	1					
ANR	8033574	Parameter	void * i	726:56:22742:22748	8033080	2	True				
ANR	8033575	ParameterType	void *		8033080	0					
ANR	8033576	Identifier	i		8033080	1					
ANR	8033577	CFGEntryNode	ENTRY		8033080		True				
ANR	8033578	CFGExitNode	EXIT		8033080		True				
ANR	8033579	Symbol	pcl_black		8033080						
ANR	8033580	Symbol	ip -> fdata		8033080						
ANR	8033581	Symbol	pcl_no_palette		8033080						
ANR	8033582	Symbol	* ip		8033080						
ANR	8033583	Symbol	pcl_CMY		8033080						
ANR	8033584	Symbol	* ip -> fdata . colorant_array		8033080						
ANR	8033585	Symbol	pcl_CMYK		8033080						
ANR	8033586	Symbol	* * ip		8033080						
ANR	8033587	Symbol	ip -> fdata . palette		8033080						
ANR	8033588	Symbol	buffer		8033080						
ANR	8033589	Symbol	* cmd		8033080						
ANR	8033590	Symbol	power		8033080						
ANR	8033591	Symbol	ip -> seen_CRD		8033080						
ANR	8033592	Symbol	ip -> fdata . colorant_array [ 0 ] . levels		8033080						
ANR	8033593	Symbol	malloc		8033080						
ANR	8033594	Symbol	ip -> first_colorant_planes		8033080						
ANR	8033595	Symbol	* buffer		8033080						
ANR	8033596	Symbol	ip -> fdata . colorant_array [ j ] . vres		8033080						
ANR	8033597	Symbol	ip -> fdata . colorant_array		8033080						
ANR	8033598	Symbol	in		8033080						
ANR	8033599	Symbol	ip -> CRD_active		8033080						
ANR	8033600	Symbol	ip		8033080						
ANR	8033601	Symbol	i		8033080						
ANR	8033602	Symbol	TRUE		8033080						
ANR	8033603	Symbol	j		8033080						
ANR	8033604	Symbol	* ip -> fdata		8033080						
ANR	8033605	Symbol	two_octets		8033080						
ANR	8033606	Symbol	ip -> fdata . colorant_array [ j ] . levels		8033080						
ANR	8033607	Symbol	stderr		8033080						
ANR	8033608	Symbol	ip -> fdata . colorant_array [ 0 ] . hres		8033080						
ANR	8033609	Symbol	ip -> fdata . colorant_array [ j ] . hres		8033080						
ANR	8033610	Symbol	* j		8033080						
ANR	8033611	Symbol	ip -> fdata . number_of_colorants		8033080						
ANR	8033612	Symbol	cmd -> i		8033080						
ANR	8033613	Symbol	FALSE		8033080						
ANR	8033614	Symbol	cmd		8033080						
ANR	8033615	Symbol	ip -> fdata . colorant_array [ 0 ] . vres		8033080						
ANR	8033616	Symbol	errors		8033080						
ANR	8033617	Function	action_old_quality	814:0:25212:25621							
ANR	8033618	FunctionDef	"action_old_quality (FILE * in , const pcl_Command * cmd , void * i)"		8033617	0					
ANR	8033619	CompoundStatement		815:0:25285:25621	8033617	0					
ANR	8033620	IdentifierDeclStatement	CollectedInfo * ip = i ;	816:2:25289:25310	8033617	0	True				
ANR	8033621	IdentifierDecl	* ip = i		8033617	0					
ANR	8033622	IdentifierDeclType	CollectedInfo *		8033617	0					
ANR	8033623	Identifier	ip		8033617	1					
ANR	8033624	AssignmentExpression	* ip = i		8033617	2		=			
ANR	8033625	Identifier	i		8033617	0					
ANR	8033626	Identifier	i		8033617	1					
ANR	8033627	ExpressionStatement	ip -> seen_old_quality = TRUE	818:2:25315:25342	8033617	1	True				
ANR	8033628	AssignmentExpression	ip -> seen_old_quality = TRUE		8033617	0		=			
ANR	8033629	PtrMemberAccess	ip -> seen_old_quality		8033617	0					
ANR	8033630	Identifier	ip		8033617	0					
ANR	8033631	Identifier	seen_old_quality		8033617	1					
ANR	8033632	Identifier	TRUE		8033617	1					
ANR	8033633	IfStatement	if ( cmd -> chars [ 1 ] == 'o' )		8033617	2					
ANR	8033634	Condition	cmd -> chars [ 1 ] == 'o'	819:6:25350:25369	8033617	0	True				
ANR	8033635	EqualityExpression	cmd -> chars [ 1 ] == 'o'		8033617	0		==			
ANR	8033636	ArrayIndexing	cmd -> chars [ 1 ]		8033617	0					
ANR	8033637	PtrMemberAccess	cmd -> chars		8033617	0					
ANR	8033638	Identifier	cmd		8033617	0					
ANR	8033639	Identifier	chars		8033617	1					
ANR	8033640	PrimaryExpression	1		8033617	1					
ANR	8033641	PrimaryExpression	'o'		8033617	1					
ANR	8033642	CompoundStatement		5:28:86:86	8033617	1					
ANR	8033643	IfStatement	if ( cmd -> chars [ 2 ] == 'D' )		8033617	0					
ANR	8033644	Condition	cmd -> chars [ 2 ] == 'D'	820:8:25382:25401	8033617	0	True				
ANR	8033645	EqualityExpression	cmd -> chars [ 2 ] == 'D'		8033617	0		==			
ANR	8033646	ArrayIndexing	cmd -> chars [ 2 ]		8033617	0					
ANR	8033647	PtrMemberAccess	cmd -> chars		8033617	0					
ANR	8033648	Identifier	cmd		8033617	0					
ANR	8033649	Identifier	chars		8033617	1					
ANR	8033650	PrimaryExpression	2		8033617	1					
ANR	8033651	PrimaryExpression	'D'		8033617	1					
ANR	8033652	ExpressionStatement	ip -> fdata . depletion = cmd -> i	820:30:25404:25432	8033617	1	True				
ANR	8033653	AssignmentExpression	ip -> fdata . depletion = cmd -> i		8033617	0		=			
ANR	8033654	MemberAccess	ip -> fdata . depletion		8033617	0					
ANR	8033655	PtrMemberAccess	ip -> fdata		8033617	0					
ANR	8033656	Identifier	ip		8033617	0					
ANR	8033657	Identifier	fdata		8033617	1					
ANR	8033658	Identifier	depletion		8033617	1					
ANR	8033659	PtrMemberAccess	cmd -> i		8033617	1					
ANR	8033660	Identifier	cmd		8033617	0					
ANR	8033661	Identifier	i		8033617	1					
ANR	8033662	ElseStatement	else		8033617	0					
ANR	8033663	IfStatement	if ( cmd -> chars [ 2 ] == 'Q' )		8033617	0					
ANR	8033664	Condition	cmd -> chars [ 2 ] == 'Q'	821:13:25447:25466	8033617	0	True				
ANR	8033665	EqualityExpression	cmd -> chars [ 2 ] == 'Q'		8033617	0		==			
ANR	8033666	ArrayIndexing	cmd -> chars [ 2 ]		8033617	0					
ANR	8033667	PtrMemberAccess	cmd -> chars		8033617	0					
ANR	8033668	Identifier	cmd		8033617	0					
ANR	8033669	Identifier	chars		8033617	1					
ANR	8033670	PrimaryExpression	2		8033617	1					
ANR	8033671	PrimaryExpression	'Q'		8033617	1					
ANR	8033672	ExpressionStatement	ip -> fdata . shingling = cmd -> i	821:35:25469:25497	8033617	1	True				
ANR	8033673	AssignmentExpression	ip -> fdata . shingling = cmd -> i		8033617	0		=			
ANR	8033674	MemberAccess	ip -> fdata . shingling		8033617	0					
ANR	8033675	PtrMemberAccess	ip -> fdata		8033617	0					
ANR	8033676	Identifier	ip		8033617	0					
ANR	8033677	Identifier	fdata		8033617	1					
ANR	8033678	Identifier	shingling		8033617	1					
ANR	8033679	PtrMemberAccess	cmd -> i		8033617	1					
ANR	8033680	Identifier	cmd		8033617	0					
ANR	8033681	Identifier	i		8033617	1					
ANR	8033682	ElseStatement	else		8033617	0					
ANR	8033683	IfStatement	if ( cmd -> chars [ 1 ] == 'r' && cmd -> chars [ 2 ] == 'Q' )		8033617	0					
ANR	8033684	Condition	cmd -> chars [ 1 ] == 'r' && cmd -> chars [ 2 ] == 'Q'	823:11:25514:25557	8033617	0	True				
ANR	8033685	AndExpression	cmd -> chars [ 1 ] == 'r' && cmd -> chars [ 2 ] == 'Q'		8033617	0		&&			
ANR	8033686	EqualityExpression	cmd -> chars [ 1 ] == 'r'		8033617	0		==			
ANR	8033687	ArrayIndexing	cmd -> chars [ 1 ]		8033617	0					
ANR	8033688	PtrMemberAccess	cmd -> chars		8033617	0					
ANR	8033689	Identifier	cmd		8033617	0					
ANR	8033690	Identifier	chars		8033617	1					
ANR	8033691	PrimaryExpression	1		8033617	1					
ANR	8033692	PrimaryExpression	'r'		8033617	1					
ANR	8033693	EqualityExpression	cmd -> chars [ 2 ] == 'Q'		8033617	1		==			
ANR	8033694	ArrayIndexing	cmd -> chars [ 2 ]		8033617	0					
ANR	8033695	PtrMemberAccess	cmd -> chars		8033617	0					
ANR	8033696	Identifier	cmd		8033617	0					
ANR	8033697	Identifier	chars		8033617	1					
ANR	8033698	PrimaryExpression	2		8033617	1					
ANR	8033699	PrimaryExpression	'Q'		8033617	1					
ANR	8033700	ExpressionStatement	ip -> fdata . raster_graphics_quality = cmd -> i	824:4:25564:25606	8033617	1	True				
ANR	8033701	AssignmentExpression	ip -> fdata . raster_graphics_quality = cmd -> i		8033617	0		=			
ANR	8033702	MemberAccess	ip -> fdata . raster_graphics_quality		8033617	0					
ANR	8033703	PtrMemberAccess	ip -> fdata		8033617	0					
ANR	8033704	Identifier	ip		8033617	0					
ANR	8033705	Identifier	fdata		8033617	1					
ANR	8033706	Identifier	raster_graphics_quality		8033617	1					
ANR	8033707	PtrMemberAccess	cmd -> i		8033617	1					
ANR	8033708	Identifier	cmd		8033617	0					
ANR	8033709	Identifier	i		8033617	1					
ANR	8033710	ReturnStatement	return 0 ;	826:2:25611:25619	8033617	3	True				
ANR	8033711	PrimaryExpression	0		8033617	0					
ANR	8033712	ReturnType	static int		8033617	1					
ANR	8033713	Identifier	action_old_quality		8033617	2					
ANR	8033714	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8033617	3					
ANR	8033715	Parameter	FILE * in	814:30:25242:25249	8033617	0	True				
ANR	8033716	ParameterType	FILE *		8033617	0					
ANR	8033717	Identifier	in		8033617	1					
ANR	8033718	Parameter	const pcl_Command * cmd	814:40:25252:25273	8033617	1	True				
ANR	8033719	ParameterType	const pcl_Command *		8033617	0					
ANR	8033720	Identifier	cmd		8033617	1					
ANR	8033721	Parameter	void * i	814:64:25276:25282	8033617	2	True				
ANR	8033722	ParameterType	void *		8033617	0					
ANR	8033723	Identifier	i		8033617	1					
ANR	8033724	CFGEntryNode	ENTRY		8033617		True				
ANR	8033725	CFGExitNode	EXIT		8033617		True				
ANR	8033726	Symbol	* cmd -> chars		8033617						
ANR	8033727	Symbol	ip -> fdata		8033617						
ANR	8033728	Symbol	in		8033617						
ANR	8033729	Symbol	ip		8033617						
ANR	8033730	Symbol	i		8033617						
ANR	8033731	Symbol	TRUE		8033617						
ANR	8033732	Symbol	ip -> seen_old_quality		8033617						
ANR	8033733	Symbol	* ip		8033617						
ANR	8033734	Symbol	* * cmd		8033617						
ANR	8033735	Symbol	cmd -> chars		8033617						
ANR	8033736	Symbol	ip -> fdata . depletion		8033617						
ANR	8033737	Symbol	cmd -> i		8033617						
ANR	8033738	Symbol	cmd		8033617						
ANR	8033739	Symbol	* cmd		8033617						
ANR	8033740	Symbol	ip -> fdata . shingling		8033617						
ANR	8033741	Symbol	ip -> fdata . raster_graphics_quality		8033617						
ANR	8033742	Function	action_quality	831:0:25705:25882							
ANR	8033743	FunctionDef	"action_quality (FILE * in , const pcl_Command * cmd , void * i)"		8033742	0					
ANR	8033744	CompoundStatement		832:0:25774:25882	8033742	0					
ANR	8033745	IdentifierDeclStatement	CollectedInfo * ip = i ;	833:2:25778:25799	8033742	0	True				
ANR	8033746	IdentifierDecl	* ip = i		8033742	0					
ANR	8033747	IdentifierDeclType	CollectedInfo *		8033742	0					
ANR	8033748	Identifier	ip		8033742	1					
ANR	8033749	AssignmentExpression	* ip = i		8033742	2		=			
ANR	8033750	Identifier	i		8033742	0					
ANR	8033751	Identifier	i		8033742	1					
ANR	8033752	ExpressionStatement	ip -> seen_new_quality = TRUE	835:2:25804:25831	8033742	1	True				
ANR	8033753	AssignmentExpression	ip -> seen_new_quality = TRUE		8033742	0		=			
ANR	8033754	PtrMemberAccess	ip -> seen_new_quality		8033742	0					
ANR	8033755	Identifier	ip		8033742	0					
ANR	8033756	Identifier	seen_new_quality		8033742	1					
ANR	8033757	Identifier	TRUE		8033742	1					
ANR	8033758	ExpressionStatement	ip -> fdata . print_quality = cmd -> i	836:2:25835:25867	8033742	2	True				
ANR	8033759	AssignmentExpression	ip -> fdata . print_quality = cmd -> i		8033742	0		=			
ANR	8033760	MemberAccess	ip -> fdata . print_quality		8033742	0					
ANR	8033761	PtrMemberAccess	ip -> fdata		8033742	0					
ANR	8033762	Identifier	ip		8033742	0					
ANR	8033763	Identifier	fdata		8033742	1					
ANR	8033764	Identifier	print_quality		8033742	1					
ANR	8033765	PtrMemberAccess	cmd -> i		8033742	1					
ANR	8033766	Identifier	cmd		8033742	0					
ANR	8033767	Identifier	i		8033742	1					
ANR	8033768	ReturnStatement	return 0 ;	838:2:25872:25880	8033742	3	True				
ANR	8033769	PrimaryExpression	0		8033742	0					
ANR	8033770	ReturnType	static int		8033742	1					
ANR	8033771	Identifier	action_quality		8033742	2					
ANR	8033772	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8033742	3					
ANR	8033773	Parameter	FILE * in	831:26:25731:25738	8033742	0	True				
ANR	8033774	ParameterType	FILE *		8033742	0					
ANR	8033775	Identifier	in		8033742	1					
ANR	8033776	Parameter	const pcl_Command * cmd	831:36:25741:25762	8033742	1	True				
ANR	8033777	ParameterType	const pcl_Command *		8033742	0					
ANR	8033778	Identifier	cmd		8033742	1					
ANR	8033779	Parameter	void * i	831:60:25765:25771	8033742	2	True				
ANR	8033780	ParameterType	void *		8033742	0					
ANR	8033781	Identifier	i		8033742	1					
ANR	8033782	CFGEntryNode	ENTRY		8033742		True				
ANR	8033783	CFGExitNode	EXIT		8033742		True				
ANR	8033784	Symbol	ip -> seen_new_quality		8033742						
ANR	8033785	Symbol	ip -> fdata		8033742						
ANR	8033786	Symbol	in		8033742						
ANR	8033787	Symbol	ip		8033742						
ANR	8033788	Symbol	cmd -> i		8033742						
ANR	8033789	Symbol	ip -> fdata . print_quality		8033742						
ANR	8033790	Symbol	i		8033742						
ANR	8033791	Symbol	TRUE		8033742						
ANR	8033792	Symbol	cmd		8033742						
ANR	8033793	Symbol	* cmd		8033742						
ANR	8033794	Symbol	* ip		8033742						
ANR	8033795	Function	action_colour	844:0:26044:27006							
ANR	8033796	FunctionDef	"action_colour (FILE * in , const pcl_Command * cmd , void * i)"		8033795	0					
ANR	8033797	CompoundStatement		845:0:26112:27006	8033795	0					
ANR	8033798	IdentifierDeclStatement	CollectedInfo * ip = i ;	846:2:26116:26137	8033795	0	True				
ANR	8033799	IdentifierDecl	* ip = i		8033795	0					
ANR	8033800	IdentifierDeclType	CollectedInfo *		8033795	0					
ANR	8033801	Identifier	ip		8033795	1					
ANR	8033802	AssignmentExpression	* ip = i		8033795	2		=			
ANR	8033803	Identifier	i		8033795	0					
ANR	8033804	Identifier	i		8033795	1					
ANR	8033805	IfStatement	if ( ! ip -> CRD_active )		8033795	1					
ANR	8033806	Condition	! ip -> CRD_active	848:6:26146:26160	8033795	0	True				
ANR	8033807	UnaryOperationExpression	! ip -> CRD_active		8033795	0					
ANR	8033808	UnaryOperator	!		8033795	0					
ANR	8033809	PtrMemberAccess	ip -> CRD_active		8033795	1					
ANR	8033810	Identifier	ip		8033795	0					
ANR	8033811	Identifier	CRD_active		8033795	1					
ANR	8033812	CompoundStatement		4:23:50:50	8033795	1					
ANR	8033813	SwitchStatement	switch ( cmd -> i )		8033795	0					
ANR	8033814	Condition	cmd -> i	849:12:26177:26182	8033795	0	True				
ANR	8033815	PtrMemberAccess	cmd -> i		8033795	0					
ANR	8033816	Identifier	cmd		8033795	0					
ANR	8033817	Identifier	i		8033795	1					
ANR	8033818	CompoundStatement		5:20:72:72	8033795	1					
ANR	8033819	Statement	case	850:6:26193:26196	8033795	0	True				
ANR	8033820	Statement	-	850:11:26198:26198	8033795	1	True				
ANR	8033821	Label	4 :	850:12:26199:26200	8033795	2	True				
ANR	8033822	ExpressionStatement	ip -> fdata . palette = pcl_CMYK	851:8:26210:26238	8033795	3	True				
ANR	8033823	AssignmentExpression	ip -> fdata . palette = pcl_CMYK		8033795	0		=			
ANR	8033824	MemberAccess	ip -> fdata . palette		8033795	0					
ANR	8033825	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033826	Identifier	ip		8033795	0					
ANR	8033827	Identifier	fdata		8033795	1					
ANR	8033828	Identifier	palette		8033795	1					
ANR	8033829	Identifier	pcl_CMYK		8033795	1					
ANR	8033830	BreakStatement	break ;	851:38:26240:26245	8033795	4	True				
ANR	8033831	Statement	case	852:6:26253:26256	8033795	5	True				
ANR	8033832	Statement	-	852:11:26258:26258	8033795	6	True				
ANR	8033833	Label	3 :	852:12:26259:26260	8033795	7	True				
ANR	8033834	ExpressionStatement	ip -> fdata . palette = pcl_CMY	853:8:26270:26297	8033795	8	True				
ANR	8033835	AssignmentExpression	ip -> fdata . palette = pcl_CMY		8033795	0		=			
ANR	8033836	MemberAccess	ip -> fdata . palette		8033795	0					
ANR	8033837	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033838	Identifier	ip		8033795	0					
ANR	8033839	Identifier	fdata		8033795	1					
ANR	8033840	Identifier	palette		8033795	1					
ANR	8033841	Identifier	pcl_CMY		8033795	1					
ANR	8033842	BreakStatement	break ;	853:37:26299:26304	8033795	9	True				
ANR	8033843	Statement	case	854:6:26312:26315	8033795	10	True				
ANR	8033844	Statement	-	854:11:26317:26317	8033795	11	True				
ANR	8033845	Label	1 :	854:12:26318:26319	8033795	12	True				
ANR	8033846	Label	case 0 :	856:6:26351:26357	8033795	13	True				
ANR	8033847	Label	case 1 :	858:6:26389:26395	8033795	14	True				
ANR	8033848	ExpressionStatement	ip -> fdata . palette = pcl_black	859:8:26405:26434	8033795	15	True				
ANR	8033849	AssignmentExpression	ip -> fdata . palette = pcl_black		8033795	0		=			
ANR	8033850	MemberAccess	ip -> fdata . palette		8033795	0					
ANR	8033851	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033852	Identifier	ip		8033795	0					
ANR	8033853	Identifier	fdata		8033795	1					
ANR	8033854	Identifier	palette		8033795	1					
ANR	8033855	Identifier	pcl_black		8033795	1					
ANR	8033856	BreakStatement	break ;	859:39:26436:26441	8033795	16	True				
ANR	8033857	Label	case 3 :	860:6:26449:26455	8033795	17	True				
ANR	8033858	ExpressionStatement	ip -> fdata . palette = pcl_RGB	861:8:26465:26492	8033795	18	True				
ANR	8033859	AssignmentExpression	ip -> fdata . palette = pcl_RGB		8033795	0		=			
ANR	8033860	MemberAccess	ip -> fdata . palette		8033795	0					
ANR	8033861	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033862	Identifier	ip		8033795	0					
ANR	8033863	Identifier	fdata		8033795	1					
ANR	8033864	Identifier	palette		8033795	1					
ANR	8033865	Identifier	pcl_RGB		8033795	1					
ANR	8033866	BreakStatement	break ;	861:37:26494:26499	8033795	19	True				
ANR	8033867	Label	default :	862:6:26507:26514	8033795	20	True				
ANR	8033868	Identifier	default		8033795	0					
ANR	8033869	ExpressionStatement	"emessage ( 41 , ""This file uses a palette (%d) not supported by pcl3.\\n"" , cmd -> i )"	863:8:26524:26612	8033795	21	True				
ANR	8033870	CallExpression	"emessage ( 41 , ""This file uses a palette (%d) not supported by pcl3.\\n"" , cmd -> i )"		8033795	0					
ANR	8033871	Callee	emessage		8033795	0					
ANR	8033872	Identifier	emessage		8033795	0					
ANR	8033873	ArgumentList	41		8033795	1					
ANR	8033874	Argument	41		8033795	0					
ANR	8033875	PrimaryExpression	41		8033795	0					
ANR	8033876	Argument	"""This file uses a palette (%d) not supported by pcl3.\\n"""		8033795	1					
ANR	8033877	PrimaryExpression	"""This file uses a palette (%d) not supported by pcl3.\\n"""		8033795	0					
ANR	8033878	Argument	cmd -> i		8033795	2					
ANR	8033879	PtrMemberAccess	cmd -> i		8033795	0					
ANR	8033880	Identifier	cmd		8033795	0					
ANR	8033881	Identifier	i		8033795	1					
ANR	8033882	ReturnStatement	return - 1 ;	865:8:26622:26631	8033795	22	True				
ANR	8033883	UnaryOperationExpression	- 1		8033795	0					
ANR	8033884	UnaryOperator	-		8033795	0					
ANR	8033885	PrimaryExpression	1		8033795	1					
ANR	8033886	ExpressionStatement	ip -> fdata . number_of_colorants = abs ( cmd -> i )	867:4:26643:26686	8033795	1	True				
ANR	8033887	AssignmentExpression	ip -> fdata . number_of_colorants = abs ( cmd -> i )		8033795	0		=			
ANR	8033888	MemberAccess	ip -> fdata . number_of_colorants		8033795	0					
ANR	8033889	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033890	Identifier	ip		8033795	0					
ANR	8033891	Identifier	fdata		8033795	1					
ANR	8033892	Identifier	number_of_colorants		8033795	1					
ANR	8033893	CallExpression	abs ( cmd -> i )		8033795	1					
ANR	8033894	Callee	abs		8033795	0					
ANR	8033895	Identifier	abs		8033795	0					
ANR	8033896	ArgumentList	cmd -> i		8033795	1					
ANR	8033897	Argument	cmd -> i		8033795	0					
ANR	8033898	PtrMemberAccess	cmd -> i		8033795	0					
ANR	8033899	Identifier	cmd		8033795	0					
ANR	8033900	Identifier	i		8033795	1					
ANR	8033901	CompoundStatement		26:6:588:593	8033795	2					
ANR	8033902	IdentifierDeclStatement	int j ;	870:6:26701:26706	8033795	0	True				
ANR	8033903	IdentifierDecl	j		8033795	0					
ANR	8033904	IdentifierDeclType	int		8033795	0					
ANR	8033905	Identifier	j		8033795	1					
ANR	8033906	ForStatement	for ( j = 0 ; j < ip -> fdata . number_of_colorants ; j ++ )		8033795	1					
ANR	8033907	ForInit	j = 0 ;	872:11:26720:26725	8033795	0	True				
ANR	8033908	AssignmentExpression	j = 0		8033795	0		=			
ANR	8033909	Identifier	j		8033795	0					
ANR	8033910	PrimaryExpression	0		8033795	1					
ANR	8033911	Condition	j < ip -> fdata . number_of_colorants	872:18:26727:26759	8033795	1	True				
ANR	8033912	RelationalExpression	j < ip -> fdata . number_of_colorants		8033795	0		<			
ANR	8033913	Identifier	j		8033795	0					
ANR	8033914	MemberAccess	ip -> fdata . number_of_colorants		8033795	1					
ANR	8033915	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033916	Identifier	ip		8033795	0					
ANR	8033917	Identifier	fdata		8033795	1					
ANR	8033918	Identifier	number_of_colorants		8033795	1					
ANR	8033919	PostIncDecOperationExpression	j ++	872:53:26762:26764	8033795	2	True				
ANR	8033920	Identifier	j		8033795	0					
ANR	8033921	IncDec	++		8033795	1					
ANR	8033922	CompoundStatement		28:58:654:654	8033795	3					
ANR	8033923	ExpressionStatement	ip -> fdata . colorant_array [ j ] . hres = ip -> fdata . colorant_array [ j ] . vres = ip -> fdata . colorant_array [ 0 ] . hres	873:8:26777:26889	8033795	0	True				
ANR	8033924	AssignmentExpression	ip -> fdata . colorant_array [ j ] . hres = ip -> fdata . colorant_array [ j ] . vres = ip -> fdata . colorant_array [ 0 ] . hres		8033795	0		=			
ANR	8033925	MemberAccess	ip -> fdata . colorant_array [ j ] . hres		8033795	0					
ANR	8033926	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8033795	0					
ANR	8033927	MemberAccess	ip -> fdata . colorant_array		8033795	0					
ANR	8033928	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033929	Identifier	ip		8033795	0					
ANR	8033930	Identifier	fdata		8033795	1					
ANR	8033931	Identifier	colorant_array		8033795	1					
ANR	8033932	Identifier	j		8033795	1					
ANR	8033933	Identifier	hres		8033795	1					
ANR	8033934	AssignmentExpression	ip -> fdata . colorant_array [ j ] . vres = ip -> fdata . colorant_array [ 0 ] . hres		8033795	1		=			
ANR	8033935	MemberAccess	ip -> fdata . colorant_array [ j ] . vres		8033795	0					
ANR	8033936	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8033795	0					
ANR	8033937	MemberAccess	ip -> fdata . colorant_array		8033795	0					
ANR	8033938	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033939	Identifier	ip		8033795	0					
ANR	8033940	Identifier	fdata		8033795	1					
ANR	8033941	Identifier	colorant_array		8033795	1					
ANR	8033942	Identifier	j		8033795	1					
ANR	8033943	Identifier	vres		8033795	1					
ANR	8033944	MemberAccess	ip -> fdata . colorant_array [ 0 ] . hres		8033795	1					
ANR	8033945	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8033795	0					
ANR	8033946	MemberAccess	ip -> fdata . colorant_array		8033795	0					
ANR	8033947	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033948	Identifier	ip		8033795	0					
ANR	8033949	Identifier	fdata		8033795	1					
ANR	8033950	Identifier	colorant_array		8033795	1					
ANR	8033951	PrimaryExpression	0		8033795	1					
ANR	8033952	Identifier	hres		8033795	1					
ANR	8033953	ExpressionStatement	ip -> fdata . colorant_array [ j ] . levels = 2	875:8:26899:26937	8033795	1	True				
ANR	8033954	AssignmentExpression	ip -> fdata . colorant_array [ j ] . levels = 2		8033795	0		=			
ANR	8033955	MemberAccess	ip -> fdata . colorant_array [ j ] . levels		8033795	0					
ANR	8033956	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8033795	0					
ANR	8033957	MemberAccess	ip -> fdata . colorant_array		8033795	0					
ANR	8033958	PtrMemberAccess	ip -> fdata		8033795	0					
ANR	8033959	Identifier	ip		8033795	0					
ANR	8033960	Identifier	fdata		8033795	1					
ANR	8033961	Identifier	colorant_array		8033795	1					
ANR	8033962	Identifier	j		8033795	1					
ANR	8033963	Identifier	levels		8033795	1					
ANR	8033964	PrimaryExpression	2		8033795	1					
ANR	8033965	ExpressionStatement	ip -> first_colorant_planes = 1	879:4:26958:26987	8033795	3	True				
ANR	8033966	AssignmentExpression	ip -> first_colorant_planes = 1		8033795	0		=			
ANR	8033967	PtrMemberAccess	ip -> first_colorant_planes		8033795	0					
ANR	8033968	Identifier	ip		8033795	0					
ANR	8033969	Identifier	first_colorant_planes		8033795	1					
ANR	8033970	PrimaryExpression	1		8033795	1					
ANR	8033971	ReturnStatement	return 0 ;	882:2:26996:27004	8033795	2	True				
ANR	8033972	PrimaryExpression	0		8033795	0					
ANR	8033973	ReturnType	static int		8033795	1					
ANR	8033974	Identifier	action_colour		8033795	2					
ANR	8033975	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8033795	3					
ANR	8033976	Parameter	FILE * in	844:25:26069:26076	8033795	0	True				
ANR	8033977	ParameterType	FILE *		8033795	0					
ANR	8033978	Identifier	in		8033795	1					
ANR	8033979	Parameter	const pcl_Command * cmd	844:35:26079:26100	8033795	1	True				
ANR	8033980	ParameterType	const pcl_Command *		8033795	0					
ANR	8033981	Identifier	cmd		8033795	1					
ANR	8033982	Parameter	void * i	844:59:26103:26109	8033795	2	True				
ANR	8033983	ParameterType	void *		8033795	0					
ANR	8033984	Identifier	i		8033795	1					
ANR	8033985	CFGEntryNode	ENTRY		8033795		True				
ANR	8033986	CFGExitNode	EXIT		8033795		True				
ANR	8033987	Symbol	pcl_black		8033795						
ANR	8033988	Symbol	ip -> fdata		8033795						
ANR	8033989	Symbol	* ip		8033795						
ANR	8033990	Symbol	pcl_CMY		8033795						
ANR	8033991	Symbol	pcl_RGB		8033795						
ANR	8033992	Symbol	* ip -> fdata . colorant_array		8033795						
ANR	8033993	Symbol	pcl_CMYK		8033795						
ANR	8033994	Symbol	* * ip		8033795						
ANR	8033995	Symbol	ip -> fdata . palette		8033795						
ANR	8033996	Symbol	* cmd		8033795						
ANR	8033997	Symbol	ip -> first_colorant_planes		8033795						
ANR	8033998	Symbol	ip -> fdata . colorant_array [ j ] . vres		8033795						
ANR	8033999	Symbol	ip -> fdata . colorant_array		8033795						
ANR	8034000	Symbol	in		8033795						
ANR	8034001	Symbol	ip -> CRD_active		8033795						
ANR	8034002	Symbol	ip		8033795						
ANR	8034003	Symbol	i		8033795						
ANR	8034004	Symbol	j		8033795						
ANR	8034005	Symbol	* ip -> fdata		8033795						
ANR	8034006	Symbol	ip -> fdata . colorant_array [ j ] . levels		8033795						
ANR	8034007	Symbol	ip -> fdata . colorant_array [ 0 ] . hres		8033795						
ANR	8034008	Symbol	abs		8033795						
ANR	8034009	Symbol	ip -> fdata . colorant_array [ j ] . hres		8033795						
ANR	8034010	Symbol	* j		8033795						
ANR	8034011	Symbol	ip -> fdata . number_of_colorants		8033795						
ANR	8034012	Symbol	cmd -> i		8033795						
ANR	8034013	Symbol	cmd		8033795						
ANR	8034014	Function	action_resolution	887:0:27090:27470							
ANR	8034015	FunctionDef	"action_resolution (FILE * in , const pcl_Command * cmd , void * i)"		8034014	0					
ANR	8034016	CompoundStatement		888:0:27162:27470	8034014	0					
ANR	8034017	IdentifierDeclStatement	CollectedInfo * ip = i ;	889:2:27166:27187	8034014	0	True				
ANR	8034018	IdentifierDecl	* ip = i		8034014	0					
ANR	8034019	IdentifierDeclType	CollectedInfo *		8034014	0					
ANR	8034020	Identifier	ip		8034014	1					
ANR	8034021	AssignmentExpression	* ip = i		8034014	2		=			
ANR	8034022	Identifier	i		8034014	0					
ANR	8034023	Identifier	i		8034014	1					
ANR	8034024	ExpressionStatement	ip -> seen_RGR = TRUE	891:2:27192:27211	8034014	1	True				
ANR	8034025	AssignmentExpression	ip -> seen_RGR = TRUE		8034014	0		=			
ANR	8034026	PtrMemberAccess	ip -> seen_RGR		8034014	0					
ANR	8034027	Identifier	ip		8034014	0					
ANR	8034028	Identifier	seen_RGR		8034014	1					
ANR	8034029	Identifier	TRUE		8034014	1					
ANR	8034030	IfStatement	if ( ! ip -> CRD_active )		8034014	2					
ANR	8034031	Condition	! ip -> CRD_active	893:6:27220:27234	8034014	0	True				
ANR	8034032	UnaryOperationExpression	! ip -> CRD_active		8034014	0					
ANR	8034033	UnaryOperator	!		8034014	0					
ANR	8034034	PtrMemberAccess	ip -> CRD_active		8034014	1					
ANR	8034035	Identifier	ip		8034014	0					
ANR	8034036	Identifier	CRD_active		8034014	1					
ANR	8034037	CompoundStatement		7:4:80:85	8034014	1					
ANR	8034038	IdentifierDeclStatement	int j ;	894:4:27243:27248	8034014	0	True				
ANR	8034039	IdentifierDecl	j		8034014	0					
ANR	8034040	IdentifierDeclType	int		8034014	0					
ANR	8034041	Identifier	j		8034014	1					
ANR	8034042	ForStatement	for ( j = 0 ; j < ip -> fdata . number_of_colorants ; j ++ )		8034014	1					
ANR	8034043	ForInit	j = 0 ;	896:9:27260:27265	8034014	0	True				
ANR	8034044	AssignmentExpression	j = 0		8034014	0		=			
ANR	8034045	Identifier	j		8034014	0					
ANR	8034046	PrimaryExpression	0		8034014	1					
ANR	8034047	Condition	j < ip -> fdata . number_of_colorants	896:16:27267:27299	8034014	1	True				
ANR	8034048	RelationalExpression	j < ip -> fdata . number_of_colorants		8034014	0		<			
ANR	8034049	Identifier	j		8034014	0					
ANR	8034050	MemberAccess	ip -> fdata . number_of_colorants		8034014	1					
ANR	8034051	PtrMemberAccess	ip -> fdata		8034014	0					
ANR	8034052	Identifier	ip		8034014	0					
ANR	8034053	Identifier	fdata		8034014	1					
ANR	8034054	Identifier	number_of_colorants		8034014	1					
ANR	8034055	PostIncDecOperationExpression	j ++	896:51:27302:27304	8034014	2	True				
ANR	8034056	Identifier	j		8034014	0					
ANR	8034057	IncDec	++		8034014	1					
ANR	8034058	CompoundStatement		9:56:144:144	8034014	3					
ANR	8034059	ExpressionStatement	ip -> fdata . colorant_array [ j ] . hres = ip -> fdata . colorant_array [ j ] . vres = cmd -> i	897:6:27315:27399	8034014	0	True				
ANR	8034060	AssignmentExpression	ip -> fdata . colorant_array [ j ] . hres = ip -> fdata . colorant_array [ j ] . vres = cmd -> i		8034014	0		=			
ANR	8034061	MemberAccess	ip -> fdata . colorant_array [ j ] . hres		8034014	0					
ANR	8034062	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8034014	0					
ANR	8034063	MemberAccess	ip -> fdata . colorant_array		8034014	0					
ANR	8034064	PtrMemberAccess	ip -> fdata		8034014	0					
ANR	8034065	Identifier	ip		8034014	0					
ANR	8034066	Identifier	fdata		8034014	1					
ANR	8034067	Identifier	colorant_array		8034014	1					
ANR	8034068	Identifier	j		8034014	1					
ANR	8034069	Identifier	hres		8034014	1					
ANR	8034070	AssignmentExpression	ip -> fdata . colorant_array [ j ] . vres = cmd -> i		8034014	1		=			
ANR	8034071	MemberAccess	ip -> fdata . colorant_array [ j ] . vres		8034014	0					
ANR	8034072	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8034014	0					
ANR	8034073	MemberAccess	ip -> fdata . colorant_array		8034014	0					
ANR	8034074	PtrMemberAccess	ip -> fdata		8034014	0					
ANR	8034075	Identifier	ip		8034014	0					
ANR	8034076	Identifier	fdata		8034014	1					
ANR	8034077	Identifier	colorant_array		8034014	1					
ANR	8034078	Identifier	j		8034014	1					
ANR	8034079	Identifier	vres		8034014	1					
ANR	8034080	PtrMemberAccess	cmd -> i		8034014	1					
ANR	8034081	Identifier	cmd		8034014	0					
ANR	8034082	Identifier	i		8034014	1					
ANR	8034083	ExpressionStatement	ip -> fdata . colorant_array [ j ] . levels = 2	899:6:27407:27445	8034014	1	True				
ANR	8034084	AssignmentExpression	ip -> fdata . colorant_array [ j ] . levels = 2		8034014	0		=			
ANR	8034085	MemberAccess	ip -> fdata . colorant_array [ j ] . levels		8034014	0					
ANR	8034086	ArrayIndexing	ip -> fdata . colorant_array [ j ]		8034014	0					
ANR	8034087	MemberAccess	ip -> fdata . colorant_array		8034014	0					
ANR	8034088	PtrMemberAccess	ip -> fdata		8034014	0					
ANR	8034089	Identifier	ip		8034014	0					
ANR	8034090	Identifier	fdata		8034014	1					
ANR	8034091	Identifier	colorant_array		8034014	1					
ANR	8034092	Identifier	j		8034014	1					
ANR	8034093	Identifier	levels		8034014	1					
ANR	8034094	PrimaryExpression	2		8034014	1					
ANR	8034095	ReturnStatement	return 0 ;	903:2:27460:27468	8034014	3	True				
ANR	8034096	PrimaryExpression	0		8034014	0					
ANR	8034097	ReturnType	static int		8034014	1					
ANR	8034098	Identifier	action_resolution		8034014	2					
ANR	8034099	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8034014	3					
ANR	8034100	Parameter	FILE * in	887:29:27119:27126	8034014	0	True				
ANR	8034101	ParameterType	FILE *		8034014	0					
ANR	8034102	Identifier	in		8034014	1					
ANR	8034103	Parameter	const pcl_Command * cmd	887:39:27129:27150	8034014	1	True				
ANR	8034104	ParameterType	const pcl_Command *		8034014	0					
ANR	8034105	Identifier	cmd		8034014	1					
ANR	8034106	Parameter	void * i	887:63:27153:27159	8034014	2	True				
ANR	8034107	ParameterType	void *		8034014	0					
ANR	8034108	Identifier	i		8034014	1					
ANR	8034109	CFGEntryNode	ENTRY		8034014		True				
ANR	8034110	CFGExitNode	EXIT		8034014		True				
ANR	8034111	Symbol	ip -> fdata		8034014						
ANR	8034112	Symbol	ip -> fdata . colorant_array [ j ] . vres		8034014						
ANR	8034113	Symbol	ip -> fdata . colorant_array		8034014						
ANR	8034114	Symbol	in		8034014						
ANR	8034115	Symbol	ip -> CRD_active		8034014						
ANR	8034116	Symbol	ip		8034014						
ANR	8034117	Symbol	i		8034014						
ANR	8034118	Symbol	TRUE		8034014						
ANR	8034119	Symbol	j		8034014						
ANR	8034120	Symbol	* ip -> fdata		8034014						
ANR	8034121	Symbol	ip -> fdata . colorant_array [ j ] . levels		8034014						
ANR	8034122	Symbol	* ip		8034014						
ANR	8034123	Symbol	* ip -> fdata . colorant_array		8034014						
ANR	8034124	Symbol	* * ip		8034014						
ANR	8034125	Symbol	ip -> fdata . colorant_array [ j ] . hres		8034014						
ANR	8034126	Symbol	* j		8034014						
ANR	8034127	Symbol	ip -> seen_RGR		8034014						
ANR	8034128	Symbol	ip -> fdata . number_of_colorants		8034014						
ANR	8034129	Symbol	cmd -> i		8034014						
ANR	8034130	Symbol	cmd		8034014						
ANR	8034131	Symbol	* cmd		8034014						
ANR	8034132	Function	action_end_raster	908:0:27554:27996							
ANR	8034133	FunctionDef	"action_end_raster (FILE * in , const pcl_Command * cmd , void * i)"		8034132	0					
ANR	8034134	CompoundStatement		909:0:27626:27996	8034132	0					
ANR	8034135	IdentifierDeclStatement	CollectedInfo * ip = i ;	910:2:27630:27651	8034132	0	True				
ANR	8034136	IdentifierDecl	* ip = i		8034132	0					
ANR	8034137	IdentifierDeclType	CollectedInfo *		8034132	0					
ANR	8034138	Identifier	ip		8034132	1					
ANR	8034139	AssignmentExpression	* ip = i		8034132	2		=			
ANR	8034140	Identifier	i		8034132	0					
ANR	8034141	Identifier	i		8034132	1					
ANR	8034142	IfStatement	if ( cmd -> chars [ 2 ] == 'B' )		8034132	1					
ANR	8034143	Condition	cmd -> chars [ 2 ] == 'B'	912:6:27660:27679	8034132	0	True				
ANR	8034144	EqualityExpression	cmd -> chars [ 2 ] == 'B'		8034132	0		==			
ANR	8034145	ArrayIndexing	cmd -> chars [ 2 ]		8034132	0					
ANR	8034146	PtrMemberAccess	cmd -> chars		8034132	0					
ANR	8034147	Identifier	cmd		8034132	0					
ANR	8034148	Identifier	chars		8034132	1					
ANR	8034149	PrimaryExpression	2		8034132	1					
ANR	8034150	PrimaryExpression	'B'		8034132	1					
ANR	8034151	ExpressionStatement	ip -> seen_ERG_B = TRUE	912:28:27682:27703	8034132	1	True				
ANR	8034152	AssignmentExpression	ip -> seen_ERG_B = TRUE		8034132	0		=			
ANR	8034153	PtrMemberAccess	ip -> seen_ERG_B		8034132	0					
ANR	8034154	Identifier	ip		8034132	0					
ANR	8034155	Identifier	seen_ERG_B		8034132	1					
ANR	8034156	Identifier	TRUE		8034132	1					
ANR	8034157	ElseStatement	else		8034132	0					
ANR	8034158	IfStatement	if ( cmd -> chars [ 2 ] == 'C' )		8034132	0					
ANR	8034159	Condition	cmd -> chars [ 2 ] == 'C'	913:11:27716:27735	8034132	0	True				
ANR	8034160	EqualityExpression	cmd -> chars [ 2 ] == 'C'		8034132	0		==			
ANR	8034161	ArrayIndexing	cmd -> chars [ 2 ]		8034132	0					
ANR	8034162	PtrMemberAccess	cmd -> chars		8034132	0					
ANR	8034163	Identifier	cmd		8034132	0					
ANR	8034164	Identifier	chars		8034132	1					
ANR	8034165	PrimaryExpression	2		8034132	1					
ANR	8034166	PrimaryExpression	'C'		8034132	1					
ANR	8034167	ExpressionStatement	ip -> seen_ERG_C = TRUE	913:33:27738:27759	8034132	1	True				
ANR	8034168	AssignmentExpression	ip -> seen_ERG_C = TRUE		8034132	0		=			
ANR	8034169	PtrMemberAccess	ip -> seen_ERG_C		8034132	0					
ANR	8034170	Identifier	ip		8034132	0					
ANR	8034171	Identifier	seen_ERG_C		8034132	1					
ANR	8034172	Identifier	TRUE		8034132	1					
ANR	8034173	IfStatement	"if ( ip -> seen_raster_data && memcmp ( & ip -> fdata , & ip -> fdata_old , sizeof ( pcl_FileData ) ) != 0 )"		8034132	2					
ANR	8034174	Condition	"ip -> seen_raster_data && memcmp ( & ip -> fdata , & ip -> fdata_old , sizeof ( pcl_FileData ) ) != 0"	915:6:27768:27858	8034132	0	True				
ANR	8034175	AndExpression	"ip -> seen_raster_data && memcmp ( & ip -> fdata , & ip -> fdata_old , sizeof ( pcl_FileData ) ) != 0"		8034132	0		&&			
ANR	8034176	PtrMemberAccess	ip -> seen_raster_data		8034132	0					
ANR	8034177	Identifier	ip		8034132	0					
ANR	8034178	Identifier	seen_raster_data		8034132	1					
ANR	8034179	EqualityExpression	"memcmp ( & ip -> fdata , & ip -> fdata_old , sizeof ( pcl_FileData ) ) != 0"		8034132	1		!=			
ANR	8034180	CallExpression	"memcmp ( & ip -> fdata , & ip -> fdata_old , sizeof ( pcl_FileData ) )"		8034132	0					
ANR	8034181	Callee	memcmp		8034132	0					
ANR	8034182	Identifier	memcmp		8034132	0					
ANR	8034183	ArgumentList	& ip -> fdata		8034132	1					
ANR	8034184	Argument	& ip -> fdata		8034132	0					
ANR	8034185	UnaryOperationExpression	& ip -> fdata		8034132	0					
ANR	8034186	UnaryOperator	&		8034132	0					
ANR	8034187	PtrMemberAccess	ip -> fdata		8034132	1					
ANR	8034188	Identifier	ip		8034132	0					
ANR	8034189	Identifier	fdata		8034132	1					
ANR	8034190	Argument	& ip -> fdata_old		8034132	1					
ANR	8034191	UnaryOperationExpression	& ip -> fdata_old		8034132	0					
ANR	8034192	UnaryOperator	&		8034132	0					
ANR	8034193	PtrMemberAccess	ip -> fdata_old		8034132	1					
ANR	8034194	Identifier	ip		8034132	0					
ANR	8034195	Identifier	fdata_old		8034132	1					
ANR	8034196	Argument	sizeof ( pcl_FileData )		8034132	2					
ANR	8034197	SizeofExpression	sizeof ( pcl_FileData )		8034132	0					
ANR	8034198	Sizeof	sizeof		8034132	0					
ANR	8034199	SizeofOperand	pcl_FileData		8034132	1					
ANR	8034200	PrimaryExpression	0		8034132	1					
ANR	8034201	CompoundStatement		8:69:234:234	8034132	1					
ANR	8034202	ExpressionStatement	print_result ( ip )	917:4:27867:27883	8034132	0	True				
ANR	8034203	CallExpression	print_result ( ip )		8034132	0					
ANR	8034204	Callee	print_result		8034132	0					
ANR	8034205	Identifier	print_result		8034132	0					
ANR	8034206	ArgumentList	ip		8034132	1					
ANR	8034207	Argument	ip		8034132	0					
ANR	8034208	Identifier	ip		8034132	0					
ANR	8034209	ExpressionStatement	"memcpy ( & ip -> fdata_old , & ip -> fdata , sizeof ( pcl_FileData ) )"	918:4:27889:27945	8034132	1	True				
ANR	8034210	CallExpression	"memcpy ( & ip -> fdata_old , & ip -> fdata , sizeof ( pcl_FileData ) )"		8034132	0					
ANR	8034211	Callee	memcpy		8034132	0					
ANR	8034212	Identifier	memcpy		8034132	0					
ANR	8034213	ArgumentList	& ip -> fdata_old		8034132	1					
ANR	8034214	Argument	& ip -> fdata_old		8034132	0					
ANR	8034215	UnaryOperationExpression	& ip -> fdata_old		8034132	0					
ANR	8034216	UnaryOperator	&		8034132	0					
ANR	8034217	PtrMemberAccess	ip -> fdata_old		8034132	1					
ANR	8034218	Identifier	ip		8034132	0					
ANR	8034219	Identifier	fdata_old		8034132	1					
ANR	8034220	Argument	& ip -> fdata		8034132	1					
ANR	8034221	UnaryOperationExpression	& ip -> fdata		8034132	0					
ANR	8034222	UnaryOperator	&		8034132	0					
ANR	8034223	PtrMemberAccess	ip -> fdata		8034132	1					
ANR	8034224	Identifier	ip		8034132	0					
ANR	8034225	Identifier	fdata		8034132	1					
ANR	8034226	Argument	sizeof ( pcl_FileData )		8034132	2					
ANR	8034227	SizeofExpression	sizeof ( pcl_FileData )		8034132	0					
ANR	8034228	Sizeof	sizeof		8034132	0					
ANR	8034229	SizeofOperand	pcl_FileData		8034132	1					
ANR	8034230	ExpressionStatement	ip -> seen_raster_data = FALSE	920:2:27953:27981	8034132	3	True				
ANR	8034231	AssignmentExpression	ip -> seen_raster_data = FALSE		8034132	0		=			
ANR	8034232	PtrMemberAccess	ip -> seen_raster_data		8034132	0					
ANR	8034233	Identifier	ip		8034132	0					
ANR	8034234	Identifier	seen_raster_data		8034132	1					
ANR	8034235	Identifier	FALSE		8034132	1					
ANR	8034236	ReturnStatement	return 0 ;	922:2:27986:27994	8034132	4	True				
ANR	8034237	PrimaryExpression	0		8034132	0					
ANR	8034238	ReturnType	static int		8034132	1					
ANR	8034239	Identifier	action_end_raster		8034132	2					
ANR	8034240	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8034132	3					
ANR	8034241	Parameter	FILE * in	908:29:27583:27590	8034132	0	True				
ANR	8034242	ParameterType	FILE *		8034132	0					
ANR	8034243	Identifier	in		8034132	1					
ANR	8034244	Parameter	const pcl_Command * cmd	908:39:27593:27614	8034132	1	True				
ANR	8034245	ParameterType	const pcl_Command *		8034132	0					
ANR	8034246	Identifier	cmd		8034132	1					
ANR	8034247	Parameter	void * i	908:63:27617:27623	8034132	2	True				
ANR	8034248	ParameterType	void *		8034132	0					
ANR	8034249	Identifier	i		8034132	1					
ANR	8034250	CFGEntryNode	ENTRY		8034132		True				
ANR	8034251	CFGExitNode	EXIT		8034132		True				
ANR	8034252	Symbol	* cmd -> chars		8034132						
ANR	8034253	Symbol	& ip -> fdata		8034132						
ANR	8034254	Symbol	in		8034132						
ANR	8034255	Symbol	ip		8034132						
ANR	8034256	Symbol	i		8034132						
ANR	8034257	Symbol	TRUE		8034132						
ANR	8034258	Symbol	* * cmd		8034132						
ANR	8034259	Symbol	* ip		8034132						
ANR	8034260	Symbol	ip -> seen_ERG_B		8034132						
ANR	8034261	Symbol	ip -> seen_ERG_C		8034132						
ANR	8034262	Symbol	cmd -> chars		8034132						
ANR	8034263	Symbol	ip -> seen_raster_data		8034132						
ANR	8034264	Symbol	memcmp		8034132						
ANR	8034265	Symbol	& ip -> fdata_old		8034132						
ANR	8034266	Symbol	FALSE		8034132						
ANR	8034267	Symbol	cmd		8034132						
ANR	8034268	Symbol	* cmd		8034132						
ANR	8034269	ClassDef	<unnamed>	927:8:28088:28158							
ANR	8034270	DeclStmt									
ANR	8034271	Decl							char	char [ 4 ]	cmd
ANR	8034272	DeclStmt									
ANR	8034273	Decl							pcl_CommandInterpreter	pcl_CommandInterpreter	action
ANR	8034274	DeclStmt									
ANR	8034275	Decl									ActionEntry
ANR	8034276	DeclStmt									
ANR	8034277	Decl							ActionEntry	ActionEntry [ ]	action_table
ANR	8034278	Function	cmp_entries	956:0:29439:29581							
ANR	8034279	FunctionDef	"cmp_entries (const void * a , const void * b)"		8034278	0					
ANR	8034280	CompoundStatement		957:0:29492:29581	8034278	0					
ANR	8034281	ReturnStatement	"return strncmp ( ( ( const ActionEntry * ) a ) -> cmd , ( ( const ActionEntry * ) b ) -> cmd , 3 ) ;"	958:2:29496:29579	8034278	0	True				
ANR	8034282	CallExpression	"strncmp ( ( ( const ActionEntry * ) a ) -> cmd , ( ( const ActionEntry * ) b ) -> cmd , 3 )"		8034278	0					
ANR	8034283	Callee	strncmp		8034278	0					
ANR	8034284	Identifier	strncmp		8034278	0					
ANR	8034285	ArgumentList	( ( const ActionEntry * ) a ) -> cmd		8034278	1					
ANR	8034286	Argument	( ( const ActionEntry * ) a ) -> cmd		8034278	0					
ANR	8034287	PtrMemberAccess	( ( const ActionEntry * ) a ) -> cmd		8034278	0					
ANR	8034288	CastExpression	( const ActionEntry * ) a		8034278	0					
ANR	8034289	CastTarget	const ActionEntry *		8034278	0					
ANR	8034290	Identifier	a		8034278	1					
ANR	8034291	Identifier	cmd		8034278	1					
ANR	8034292	Argument	( ( const ActionEntry * ) b ) -> cmd		8034278	1					
ANR	8034293	PtrMemberAccess	( ( const ActionEntry * ) b ) -> cmd		8034278	0					
ANR	8034294	CastExpression	( const ActionEntry * ) b		8034278	0					
ANR	8034295	CastTarget	const ActionEntry *		8034278	0					
ANR	8034296	Identifier	b		8034278	1					
ANR	8034297	Identifier	cmd		8034278	1					
ANR	8034298	Argument	3		8034278	2					
ANR	8034299	PrimaryExpression	3		8034278	0					
ANR	8034300	ReturnType	static int		8034278	1					
ANR	8034301	Identifier	cmp_entries		8034278	2					
ANR	8034302	ParameterList	"const void * a , const void * b"		8034278	3					
ANR	8034303	Parameter	const void * a	956:23:29462:29474	8034278	0	True				
ANR	8034304	ParameterType	const void *		8034278	0					
ANR	8034305	Identifier	a		8034278	1					
ANR	8034306	Parameter	const void * b	956:38:29477:29489	8034278	1	True				
ANR	8034307	ParameterType	const void *		8034278	0					
ANR	8034308	Identifier	b		8034278	1					
ANR	8034309	CFGEntryNode	ENTRY		8034278		True				
ANR	8034310	CFGExitNode	EXIT		8034278		True				
ANR	8034311	Symbol	a		8034278						
ANR	8034312	Symbol	strncmp		8034278						
ANR	8034313	Symbol	b		8034278						
ANR	8034314	Symbol	( ( const ActionEntry * ) a ) -> cmd		8034278						
ANR	8034315	Symbol	* a		8034278						
ANR	8034316	Symbol	* b		8034278						
ANR	8034317	Symbol	( ( const ActionEntry * ) b ) -> cmd		8034278						
ANR	8034318	Function	analyzer	964:0:29665:31380							
ANR	8034319	FunctionDef	"analyzer (FILE * in , const pcl_Command * cmd , void * i)"		8034318	0					
ANR	8034320	CompoundStatement		965:0:29728:31380	8034318	0					
ANR	8034321	IdentifierDeclStatement	ActionEntry key ;	966:2:29732:29747	8034318	0	True				
ANR	8034322	IdentifierDecl	key		8034318	0					
ANR	8034323	IdentifierDeclType	ActionEntry		8034318	0					
ANR	8034324	Identifier	key		8034318	1					
ANR	8034325	IdentifierDeclStatement	const ActionEntry * entry ;	967:2:29751:29775	8034318	1	True				
ANR	8034326	IdentifierDecl	* entry		8034318	0					
ANR	8034327	IdentifierDeclType	const ActionEntry *		8034318	0					
ANR	8034328	Identifier	entry		8034318	1					
ANR	8034329	IdentifierDeclStatement	CollectedInfo * ip = i ;	968:2:29779:29800	8034318	2	True				
ANR	8034330	IdentifierDecl	* ip = i		8034318	0					
ANR	8034331	IdentifierDeclType	CollectedInfo *		8034318	0					
ANR	8034332	Identifier	ip		8034318	1					
ANR	8034333	AssignmentExpression	* ip = i		8034318	2		=			
ANR	8034334	Identifier	i		8034318	0					
ANR	8034335	Identifier	i		8034318	1					
ANR	8034336	IfStatement	if ( cmd -> kind == 1 )		8034318	3					
ANR	8034337	Condition	cmd -> kind == 1	971:6:29831:29844	8034318	0	True				
ANR	8034338	EqualityExpression	cmd -> kind == 1		8034318	0		==			
ANR	8034339	PtrMemberAccess	cmd -> kind		8034318	0					
ANR	8034340	Identifier	cmd		8034318	0					
ANR	8034341	Identifier	kind		8034318	1					
ANR	8034342	PrimaryExpression	1		8034318	1					
ANR	8034343	CompoundStatement		7:22:118:118	8034318	1					
ANR	8034344	IfStatement	if ( cmd -> chars [ 0 ] == '\\0' && ! ip -> seen_RGR && ! ip -> seen_CRD )		8034318	0					
ANR	8034345	Condition	cmd -> chars [ 0 ] == '\\0' && ! ip -> seen_RGR && ! ip -> seen_CRD	972:8:29857:29984	8034318	0	True				
ANR	8034346	AndExpression	cmd -> chars [ 0 ] == '\\0' && ! ip -> seen_RGR && ! ip -> seen_CRD		8034318	0		&&			
ANR	8034347	EqualityExpression	cmd -> chars [ 0 ] == '\\0'		8034318	0		==			
ANR	8034348	ArrayIndexing	cmd -> chars [ 0 ]		8034318	0					
ANR	8034349	PtrMemberAccess	cmd -> chars		8034318	0					
ANR	8034350	Identifier	cmd		8034318	0					
ANR	8034351	Identifier	chars		8034318	1					
ANR	8034352	PrimaryExpression	0		8034318	1					
ANR	8034353	PrimaryExpression	'\\0'		8034318	1					
ANR	8034354	AndExpression	! ip -> seen_RGR && ! ip -> seen_CRD		8034318	1		&&			
ANR	8034355	UnaryOperationExpression	! ip -> seen_RGR		8034318	0					
ANR	8034356	UnaryOperator	!		8034318	0					
ANR	8034357	PtrMemberAccess	ip -> seen_RGR		8034318	1					
ANR	8034358	Identifier	ip		8034318	0					
ANR	8034359	Identifier	seen_RGR		8034318	1					
ANR	8034360	UnaryOperationExpression	! ip -> seen_CRD		8034318	1					
ANR	8034361	UnaryOperator	!		8034318	0					
ANR	8034362	PtrMemberAccess	ip -> seen_CRD		8034318	1					
ANR	8034363	Identifier	ip		8034318	0					
ANR	8034364	Identifier	seen_CRD		8034318	1					
ANR	8034365	ExpressionStatement	ip -> fdata . NULs_to_send = cmd -> i	975:6:29993:30024	8034318	1	True				
ANR	8034366	AssignmentExpression	ip -> fdata . NULs_to_send = cmd -> i		8034318	0		=			
ANR	8034367	MemberAccess	ip -> fdata . NULs_to_send		8034318	0					
ANR	8034368	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034369	Identifier	ip		8034318	0					
ANR	8034370	Identifier	fdata		8034318	1					
ANR	8034371	Identifier	NULs_to_send		8034318	1					
ANR	8034372	PtrMemberAccess	cmd -> i		8034318	1					
ANR	8034373	Identifier	cmd		8034318	0					
ANR	8034374	Identifier	i		8034318	1					
ANR	8034375	ReturnStatement	return 0 ;	976:4:30030:30038	8034318	1	True				
ANR	8034376	PrimaryExpression	0		8034318	0					
ANR	8034377	IfStatement	if ( cmd -> kind == 2 )		8034318	4					
ANR	8034378	Condition	cmd -> kind == 2	980:6:30090:30103	8034318	0	True				
ANR	8034379	EqualityExpression	cmd -> kind == 2		8034318	0		==			
ANR	8034380	PtrMemberAccess	cmd -> kind		8034318	0					
ANR	8034381	Identifier	cmd		8034318	0					
ANR	8034382	Identifier	kind		8034318	1					
ANR	8034383	PrimaryExpression	2		8034318	1					
ANR	8034384	CompoundStatement		16:22:377:377	8034318	1					
ANR	8034385	SwitchStatement	switch ( cmd -> chars [ 0 ] )		8034318	0					
ANR	8034386	Condition	cmd -> chars [ 0 ]	981:12:30120:30132	8034318	0	True				
ANR	8034387	ArrayIndexing	cmd -> chars [ 0 ]		8034318	0					
ANR	8034388	PtrMemberAccess	cmd -> chars		8034318	0					
ANR	8034389	Identifier	cmd		8034318	0					
ANR	8034390	Identifier	chars		8034318	1					
ANR	8034391	PrimaryExpression	0		8034318	1					
ANR	8034392	CompoundStatement		17:27:406:406	8034318	1					
ANR	8034393	Label	case 'E' :	982:4:30141:30149	8034318	0	True				
ANR	8034394	CompoundStatement		24:8:670:703	8034318	1					
ANR	8034395	IdentifierDeclStatement	unsigned int NULs_to_send = ip -> fdata . NULs_to_send ;	986:8:30286:30336	8034318	0	True				
ANR	8034396	IdentifierDecl	NULs_to_send = ip -> fdata . NULs_to_send		8034318	0					
ANR	8034397	IdentifierDeclType	unsigned int		8034318	0					
ANR	8034398	Identifier	NULs_to_send		8034318	1					
ANR	8034399	AssignmentExpression	NULs_to_send = ip -> fdata . NULs_to_send		8034318	2		=			
ANR	8034400	Identifier	NULs_to_send		8034318	0					
ANR	8034401	MemberAccess	ip -> fdata . NULs_to_send		8034318	1					
ANR	8034402	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034403	Identifier	ip		8034318	0					
ANR	8034404	Identifier	fdata		8034318	1					
ANR	8034405	Identifier	NULs_to_send		8034318	1					
ANR	8034406	IdentifierDeclStatement	char * PJL_language = ip -> fdata . PJL_language ;	987:8:30346:30389	8034318	1	True				
ANR	8034407	IdentifierDecl	* PJL_language = ip -> fdata . PJL_language		8034318	0					
ANR	8034408	IdentifierDeclType	char *		8034318	0					
ANR	8034409	Identifier	PJL_language		8034318	1					
ANR	8034410	AssignmentExpression	* PJL_language = ip -> fdata . PJL_language		8034318	2		=			
ANR	8034411	Identifier	PJL_language		8034318	0					
ANR	8034412	MemberAccess	ip -> fdata . PJL_language		8034318	1					
ANR	8034413	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034414	Identifier	ip		8034318	0					
ANR	8034415	Identifier	fdata		8034318	1					
ANR	8034416	Identifier	PJL_language		8034318	1					
ANR	8034417	IdentifierDeclStatement	char * PJL_job = ip -> fdata . PJL_job ;	988:8:30399:30432	8034318	2	True				
ANR	8034418	IdentifierDecl	* PJL_job = ip -> fdata . PJL_job		8034318	0					
ANR	8034419	IdentifierDeclType	char *		8034318	0					
ANR	8034420	Identifier	PJL_job		8034318	1					
ANR	8034421	AssignmentExpression	* PJL_job = ip -> fdata . PJL_job		8034318	2		=			
ANR	8034422	Identifier	PJL_job		8034318	0					
ANR	8034423	MemberAccess	ip -> fdata . PJL_job		8034318	1					
ANR	8034424	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034425	Identifier	ip		8034318	0					
ANR	8034426	Identifier	fdata		8034318	1					
ANR	8034427	Identifier	PJL_job		8034318	1					
ANR	8034428	ExpressionStatement	ip -> CRD_active = FALSE	990:8:30443:30465	8034318	3	True				
ANR	8034429	AssignmentExpression	ip -> CRD_active = FALSE		8034318	0		=			
ANR	8034430	PtrMemberAccess	ip -> CRD_active		8034318	0					
ANR	8034431	Identifier	ip		8034318	0					
ANR	8034432	Identifier	CRD_active		8034318	1					
ANR	8034433	Identifier	FALSE		8034318	1					
ANR	8034434	ExpressionStatement	ip -> seen_raster_data = FALSE	991:8:30475:30503	8034318	4	True				
ANR	8034435	AssignmentExpression	ip -> seen_raster_data = FALSE		8034318	0		=			
ANR	8034436	PtrMemberAccess	ip -> seen_raster_data		8034318	0					
ANR	8034437	Identifier	ip		8034318	0					
ANR	8034438	Identifier	seen_raster_data		8034318	1					
ANR	8034439	Identifier	FALSE		8034318	1					
ANR	8034440	ExpressionStatement	"memset ( & ip -> fdata , 0 , sizeof ( pcl_FileData ) )"	992:8:30513:30556	8034318	5	True				
ANR	8034441	CallExpression	"memset ( & ip -> fdata , 0 , sizeof ( pcl_FileData ) )"		8034318	0					
ANR	8034442	Callee	memset		8034318	0					
ANR	8034443	Identifier	memset		8034318	0					
ANR	8034444	ArgumentList	& ip -> fdata		8034318	1					
ANR	8034445	Argument	& ip -> fdata		8034318	0					
ANR	8034446	UnaryOperationExpression	& ip -> fdata		8034318	0					
ANR	8034447	UnaryOperator	&		8034318	0					
ANR	8034448	PtrMemberAccess	ip -> fdata		8034318	1					
ANR	8034449	Identifier	ip		8034318	0					
ANR	8034450	Identifier	fdata		8034318	1					
ANR	8034451	Argument	0		8034318	1					
ANR	8034452	PrimaryExpression	0		8034318	0					
ANR	8034453	Argument	sizeof ( pcl_FileData )		8034318	2					
ANR	8034454	SizeofExpression	sizeof ( pcl_FileData )		8034318	0					
ANR	8034455	Sizeof	sizeof		8034318	0					
ANR	8034456	SizeofOperand	pcl_FileData		8034318	1					
ANR	8034457	ExpressionStatement	ip -> fdata . colorant_array [ 0 ] . hres = ip -> fdata . colorant_array [ 0 ] . vres = 75	993:8:30566:30648	8034318	6	True				
ANR	8034458	AssignmentExpression	ip -> fdata . colorant_array [ 0 ] . hres = ip -> fdata . colorant_array [ 0 ] . vres = 75		8034318	0		=			
ANR	8034459	MemberAccess	ip -> fdata . colorant_array [ 0 ] . hres		8034318	0					
ANR	8034460	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8034318	0					
ANR	8034461	MemberAccess	ip -> fdata . colorant_array		8034318	0					
ANR	8034462	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034463	Identifier	ip		8034318	0					
ANR	8034464	Identifier	fdata		8034318	1					
ANR	8034465	Identifier	colorant_array		8034318	1					
ANR	8034466	PrimaryExpression	0		8034318	1					
ANR	8034467	Identifier	hres		8034318	1					
ANR	8034468	AssignmentExpression	ip -> fdata . colorant_array [ 0 ] . vres = 75		8034318	1		=			
ANR	8034469	MemberAccess	ip -> fdata . colorant_array [ 0 ] . vres		8034318	0					
ANR	8034470	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8034318	0					
ANR	8034471	MemberAccess	ip -> fdata . colorant_array		8034318	0					
ANR	8034472	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034473	Identifier	ip		8034318	0					
ANR	8034474	Identifier	fdata		8034318	1					
ANR	8034475	Identifier	colorant_array		8034318	1					
ANR	8034476	PrimaryExpression	0		8034318	1					
ANR	8034477	Identifier	vres		8034318	1					
ANR	8034478	PrimaryExpression	75		8034318	1					
ANR	8034479	ExpressionStatement	ip -> fdata . colorant_array [ 0 ] . levels = 2	995:8:30658:30696	8034318	7	True				
ANR	8034480	AssignmentExpression	ip -> fdata . colorant_array [ 0 ] . levels = 2		8034318	0		=			
ANR	8034481	MemberAccess	ip -> fdata . colorant_array [ 0 ] . levels		8034318	0					
ANR	8034482	ArrayIndexing	ip -> fdata . colorant_array [ 0 ]		8034318	0					
ANR	8034483	MemberAccess	ip -> fdata . colorant_array		8034318	0					
ANR	8034484	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034485	Identifier	ip		8034318	0					
ANR	8034486	Identifier	fdata		8034318	1					
ANR	8034487	Identifier	colorant_array		8034318	1					
ANR	8034488	PrimaryExpression	0		8034318	1					
ANR	8034489	Identifier	levels		8034318	1					
ANR	8034490	PrimaryExpression	2		8034318	1					
ANR	8034491	ExpressionStatement	ip -> fdata . number_of_colorants = 1	996:8:30706:30739	8034318	8	True				
ANR	8034492	AssignmentExpression	ip -> fdata . number_of_colorants = 1		8034318	0		=			
ANR	8034493	MemberAccess	ip -> fdata . number_of_colorants		8034318	0					
ANR	8034494	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034495	Identifier	ip		8034318	0					
ANR	8034496	Identifier	fdata		8034318	1					
ANR	8034497	Identifier	number_of_colorants		8034318	1					
ANR	8034498	PrimaryExpression	1		8034318	1					
ANR	8034499	ExpressionStatement	ip -> fdata . duplex = - 1	997:8:30749:30770	8034318	9	True				
ANR	8034500	AssignmentExpression	ip -> fdata . duplex = - 1		8034318	0		=			
ANR	8034501	MemberAccess	ip -> fdata . duplex		8034318	0					
ANR	8034502	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034503	Identifier	ip		8034318	0					
ANR	8034504	Identifier	fdata		8034318	1					
ANR	8034505	Identifier	duplex		8034318	1					
ANR	8034506	UnaryOperationExpression	- 1		8034318	1					
ANR	8034507	UnaryOperator	-		8034318	0					
ANR	8034508	PrimaryExpression	1		8034318	1					
ANR	8034509	ExpressionStatement	ip -> fdata . dry_time = - 1	998:8:30780:30803	8034318	10	True				
ANR	8034510	AssignmentExpression	ip -> fdata . dry_time = - 1		8034318	0		=			
ANR	8034511	MemberAccess	ip -> fdata . dry_time		8034318	0					
ANR	8034512	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034513	Identifier	ip		8034318	0					
ANR	8034514	Identifier	fdata		8034318	1					
ANR	8034515	Identifier	dry_time		8034318	1					
ANR	8034516	UnaryOperationExpression	- 1		8034318	1					
ANR	8034517	UnaryOperator	-		8034318	0					
ANR	8034518	PrimaryExpression	1		8034318	1					
ANR	8034519	ExpressionStatement	ip -> fdata . raster_graphics_quality = - 1	999:8:30813:30851	8034318	11	True				
ANR	8034520	AssignmentExpression	ip -> fdata . raster_graphics_quality = - 1		8034318	0		=			
ANR	8034521	MemberAccess	ip -> fdata . raster_graphics_quality		8034318	0					
ANR	8034522	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034523	Identifier	ip		8034318	0					
ANR	8034524	Identifier	fdata		8034318	1					
ANR	8034525	Identifier	raster_graphics_quality		8034318	1					
ANR	8034526	UnaryOperationExpression	- 1		8034318	1					
ANR	8034527	UnaryOperator	-		8034318	0					
ANR	8034528	PrimaryExpression	1		8034318	1					
ANR	8034529	ExpressionStatement	ip -> fdata . shingling = - 1	1000:8:30861:30885	8034318	12	True				
ANR	8034530	AssignmentExpression	ip -> fdata . shingling = - 1		8034318	0		=			
ANR	8034531	MemberAccess	ip -> fdata . shingling		8034318	0					
ANR	8034532	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034533	Identifier	ip		8034318	0					
ANR	8034534	Identifier	fdata		8034318	1					
ANR	8034535	Identifier	shingling		8034318	1					
ANR	8034536	UnaryOperationExpression	- 1		8034318	1					
ANR	8034537	UnaryOperator	-		8034318	0					
ANR	8034538	PrimaryExpression	1		8034318	1					
ANR	8034539	ExpressionStatement	ip -> fdata . NULs_to_send = NULs_to_send	1002:8:30896:30933	8034318	13	True				
ANR	8034540	AssignmentExpression	ip -> fdata . NULs_to_send = NULs_to_send		8034318	0		=			
ANR	8034541	MemberAccess	ip -> fdata . NULs_to_send		8034318	0					
ANR	8034542	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034543	Identifier	ip		8034318	0					
ANR	8034544	Identifier	fdata		8034318	1					
ANR	8034545	Identifier	NULs_to_send		8034318	1					
ANR	8034546	Identifier	NULs_to_send		8034318	1					
ANR	8034547	ExpressionStatement	ip -> fdata . PJL_language = PJL_language	1003:8:30943:30980	8034318	14	True				
ANR	8034548	AssignmentExpression	ip -> fdata . PJL_language = PJL_language		8034318	0		=			
ANR	8034549	MemberAccess	ip -> fdata . PJL_language		8034318	0					
ANR	8034550	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034551	Identifier	ip		8034318	0					
ANR	8034552	Identifier	fdata		8034318	1					
ANR	8034553	Identifier	PJL_language		8034318	1					
ANR	8034554	Identifier	PJL_language		8034318	1					
ANR	8034555	ExpressionStatement	ip -> fdata . PJL_job = PJL_job	1004:8:30990:31017	8034318	15	True				
ANR	8034556	AssignmentExpression	ip -> fdata . PJL_job = PJL_job		8034318	0		=			
ANR	8034557	MemberAccess	ip -> fdata . PJL_job		8034318	0					
ANR	8034558	PtrMemberAccess	ip -> fdata		8034318	0					
ANR	8034559	Identifier	ip		8034318	0					
ANR	8034560	Identifier	fdata		8034318	1					
ANR	8034561	Identifier	PJL_job		8034318	1					
ANR	8034562	Identifier	PJL_job		8034318	1					
ANR	8034563	BreakStatement	break ;	1006:6:31033:31038	8034318	2	True				
ANR	8034564	Label	default :	1007:4:31044:31051	8034318	3	True				
ANR	8034565	Identifier	default		8034318	0					
ANR	8034566	ReturnStatement	return 1 ;	1008:6:31059:31067	8034318	4	True				
ANR	8034567	PrimaryExpression	1		8034318	0					
ANR	8034568	ReturnStatement	return 0 ;	1010:4:31079:31087	8034318	1	True				
ANR	8034569	PrimaryExpression	0		8034318	0					
ANR	8034570	ExpressionStatement	"strncpy ( key . cmd , cmd -> chars , 3 )"	1014:2:31135:31166	8034318	5	True				
ANR	8034571	CallExpression	"strncpy ( key . cmd , cmd -> chars , 3 )"		8034318	0					
ANR	8034572	Callee	strncpy		8034318	0					
ANR	8034573	Identifier	strncpy		8034318	0					
ANR	8034574	ArgumentList	key . cmd		8034318	1					
ANR	8034575	Argument	key . cmd		8034318	0					
ANR	8034576	MemberAccess	key . cmd		8034318	0					
ANR	8034577	Identifier	key		8034318	0					
ANR	8034578	Identifier	cmd		8034318	1					
ANR	8034579	Argument	cmd -> chars		8034318	1					
ANR	8034580	PtrMemberAccess	cmd -> chars		8034318	0					
ANR	8034581	Identifier	cmd		8034318	0					
ANR	8034582	Identifier	chars		8034318	1					
ANR	8034583	Argument	3		8034318	2					
ANR	8034584	PrimaryExpression	3		8034318	0					
ANR	8034585	ExpressionStatement	"entry = ( const ActionEntry * ) bsearch ( & key , action_table , sizeof ( action_table ) / sizeof ( ActionEntry ) , sizeof ( ActionEntry ) , cmp_entries )"	1015:2:31170:31306	8034318	6	True				
ANR	8034586	AssignmentExpression	"entry = ( const ActionEntry * ) bsearch ( & key , action_table , sizeof ( action_table ) / sizeof ( ActionEntry ) , sizeof ( ActionEntry ) , cmp_entries )"		8034318	0		=			
ANR	8034587	Identifier	entry		8034318	0					
ANR	8034588	CastExpression	"( const ActionEntry * ) bsearch ( & key , action_table , sizeof ( action_table ) / sizeof ( ActionEntry ) , sizeof ( ActionEntry ) , cmp_entries )"		8034318	1					
ANR	8034589	CastTarget	const ActionEntry *		8034318	0					
ANR	8034590	CallExpression	"bsearch ( & key , action_table , sizeof ( action_table ) / sizeof ( ActionEntry ) , sizeof ( ActionEntry ) , cmp_entries )"		8034318	1					
ANR	8034591	Callee	bsearch		8034318	0					
ANR	8034592	Identifier	bsearch		8034318	0					
ANR	8034593	ArgumentList	& key		8034318	1					
ANR	8034594	Argument	& key		8034318	0					
ANR	8034595	UnaryOperationExpression	& key		8034318	0					
ANR	8034596	UnaryOperator	&		8034318	0					
ANR	8034597	Identifier	key		8034318	1					
ANR	8034598	Argument	action_table		8034318	1					
ANR	8034599	Identifier	action_table		8034318	0					
ANR	8034600	Argument	sizeof ( action_table ) / sizeof ( ActionEntry )		8034318	2					
ANR	8034601	MultiplicativeExpression	sizeof ( action_table ) / sizeof ( ActionEntry )		8034318	0		/			
ANR	8034602	SizeofExpression	sizeof ( action_table )		8034318	0					
ANR	8034603	Sizeof	sizeof		8034318	0					
ANR	8034604	SizeofOperand	action_table		8034318	1					
ANR	8034605	SizeofExpression	sizeof ( ActionEntry )		8034318	1					
ANR	8034606	Sizeof	sizeof		8034318	0					
ANR	8034607	SizeofOperand	ActionEntry		8034318	1					
ANR	8034608	Argument	sizeof ( ActionEntry )		8034318	3					
ANR	8034609	SizeofExpression	sizeof ( ActionEntry )		8034318	0					
ANR	8034610	Sizeof	sizeof		8034318	0					
ANR	8034611	SizeofOperand	ActionEntry		8034318	1					
ANR	8034612	Argument	cmp_entries		8034318	4					
ANR	8034613	Identifier	cmp_entries		8034318	0					
ANR	8034614	IfStatement	if ( entry != NULL )		8034318	7					
ANR	8034615	Condition	entry != NULL	1017:6:31314:31326	8034318	0	True				
ANR	8034616	EqualityExpression	entry != NULL		8034318	0		!=			
ANR	8034617	Identifier	entry		8034318	0					
ANR	8034618	Identifier	NULL		8034318	1					
ANR	8034619	ReturnStatement	"return ( * entry -> action ) ( in , cmd , ip ) ;"	1017:21:31329:31365	8034318	1	True				
ANR	8034620	CallExpression	"( * entry -> action ) ( in , cmd , ip )"		8034318	0					
ANR	8034621	Callee	* entry -> action		8034318	0					
ANR	8034622	UnaryOperationExpression	* entry -> action		8034318	0					
ANR	8034623	UnaryOperator	*		8034318	0					
ANR	8034624	PtrMemberAccess	entry -> action		8034318	1					
ANR	8034625	Identifier	entry		8034318	0					
ANR	8034626	Identifier	action		8034318	1					
ANR	8034627	ArgumentList	in		8034318	1					
ANR	8034628	Argument	in		8034318	0					
ANR	8034629	Identifier	in		8034318	0					
ANR	8034630	Argument	cmd		8034318	1					
ANR	8034631	Identifier	cmd		8034318	0					
ANR	8034632	Argument	ip		8034318	2					
ANR	8034633	Identifier	ip		8034318	0					
ANR	8034634	ReturnStatement	return 1 ;	1019:2:31370:31378	8034318	8	True				
ANR	8034635	PrimaryExpression	1		8034318	0					
ANR	8034636	ReturnType	static int		8034318	1					
ANR	8034637	Identifier	analyzer		8034318	2					
ANR	8034638	ParameterList	"FILE * in , const pcl_Command * cmd , void * i"		8034318	3					
ANR	8034639	Parameter	FILE * in	964:20:29685:29692	8034318	0	True				
ANR	8034640	ParameterType	FILE *		8034318	0					
ANR	8034641	Identifier	in		8034318	1					
ANR	8034642	Parameter	const pcl_Command * cmd	964:30:29695:29716	8034318	1	True				
ANR	8034643	ParameterType	const pcl_Command *		8034318	0					
ANR	8034644	Identifier	cmd		8034318	1					
ANR	8034645	Parameter	void * i	964:54:29719:29725	8034318	2	True				
ANR	8034646	ParameterType	void *		8034318	0					
ANR	8034647	Identifier	i		8034318	1					
ANR	8034648	CFGEntryNode	ENTRY		8034318		True				
ANR	8034649	CFGExitNode	EXIT		8034318		True				
ANR	8034650	Symbol	ip -> fdata		8034318						
ANR	8034651	Symbol	PJL_language		8034318						
ANR	8034652	Symbol	& key		8034318						
ANR	8034653	Symbol	PJL_job		8034318						
ANR	8034654	Symbol	* * entry		8034318						
ANR	8034655	Symbol	* ip		8034318						
ANR	8034656	Symbol	* * cmd		8034318						
ANR	8034657	Symbol	cmp_entries		8034318						
ANR	8034658	Symbol	* ip -> fdata . colorant_array		8034318						
ANR	8034659	Symbol	* * ip		8034318						
ANR	8034660	Symbol	ip -> fdata . PJL_job		8034318						
ANR	8034661	Symbol	action_table		8034318						
ANR	8034662	Symbol	ip -> seen_RGR		8034318						
ANR	8034663	Symbol	bsearch		8034318						
ANR	8034664	Symbol	* cmd		8034318						
ANR	8034665	Symbol	ip -> fdata . shingling		8034318						
ANR	8034666	Symbol	ip -> fdata . raster_graphics_quality		8034318						
ANR	8034667	Symbol	ip -> seen_CRD		8034318						
ANR	8034668	Symbol	key		8034318						
ANR	8034669	Symbol	* entry		8034318						
ANR	8034670	Symbol	* cmd -> chars		8034318						
ANR	8034671	Symbol	ip -> fdata . colorant_array [ 0 ] . levels		8034318						
ANR	8034672	Symbol	* entry -> action		8034318						
ANR	8034673	Symbol	& ip -> fdata		8034318						
ANR	8034674	Symbol	NULs_to_send		8034318						
ANR	8034675	Symbol	NULL		8034318						
ANR	8034676	Symbol	ip -> fdata . colorant_array		8034318						
ANR	8034677	Symbol	in		8034318						
ANR	8034678	Symbol	ip -> CRD_active		8034318						
ANR	8034679	Symbol	ip		8034318						
ANR	8034680	Symbol	i		8034318						
ANR	8034681	Symbol	* ip -> fdata		8034318						
ANR	8034682	Symbol	cmd -> kind		8034318						
ANR	8034683	Symbol	ip -> fdata . NULs_to_send		8034318						
ANR	8034684	Symbol	entry		8034318						
ANR	8034685	Symbol	ip -> fdata . colorant_array [ 0 ] . hres		8034318						
ANR	8034686	Symbol	key . cmd		8034318						
ANR	8034687	Symbol	entry -> action		8034318						
ANR	8034688	Symbol	cmd -> chars		8034318						
ANR	8034689	Symbol	ip -> seen_raster_data		8034318						
ANR	8034690	Symbol	ip -> fdata . duplex		8034318						
ANR	8034691	Symbol	ip -> fdata . dry_time		8034318						
ANR	8034692	Symbol	ip -> fdata . PJL_language		8034318						
ANR	8034693	Symbol	ip -> fdata . number_of_colorants		8034318						
ANR	8034694	Symbol	cmd -> i		8034318						
ANR	8034695	Symbol	FALSE		8034318						
ANR	8034696	Symbol	cmd		8034318						
ANR	8034697	Symbol	ip -> fdata . colorant_array [ 0 ] . vres		8034318						
ANR	8034698	Function	work	1030:0:31630:32141							
ANR	8034699	FunctionDef	"work (FILE * in , FILE * out)"		8034698	0					
ANR	8034700	CompoundStatement		1031:0:31684:32141	8034698	0					
ANR	8034701	IdentifierDeclStatement	CollectedInfo info ;	1032:2:31688:31706	8034698	0	True				
ANR	8034702	IdentifierDecl	info		8034698	0					
ANR	8034703	IdentifierDeclType	CollectedInfo		8034698	0					
ANR	8034704	Identifier	info		8034698	1					
ANR	8034705	IdentifierDeclStatement	int rc ;	1033:2:31710:31716	8034698	1	True				
ANR	8034706	IdentifierDecl	rc		8034698	0					
ANR	8034707	IdentifierDeclType	int		8034698	0					
ANR	8034708	Identifier	rc		8034698	1					
ANR	8034709	ExpressionStatement	"memset ( & info , 0 , sizeof ( CollectedInfo ) )"	1035:2:31721:31760	8034698	2	True				
ANR	8034710	CallExpression	"memset ( & info , 0 , sizeof ( CollectedInfo ) )"		8034698	0					
ANR	8034711	Callee	memset		8034698	0					
ANR	8034712	Identifier	memset		8034698	0					
ANR	8034713	ArgumentList	& info		8034698	1					
ANR	8034714	Argument	& info		8034698	0					
ANR	8034715	UnaryOperationExpression	& info		8034698	0					
ANR	8034716	UnaryOperator	&		8034698	0					
ANR	8034717	Identifier	info		8034698	1					
ANR	8034718	Argument	0		8034698	1					
ANR	8034719	PrimaryExpression	0		8034698	0					
ANR	8034720	Argument	sizeof ( CollectedInfo )		8034698	2					
ANR	8034721	SizeofExpression	sizeof ( CollectedInfo )		8034698	0					
ANR	8034722	Sizeof	sizeof		8034698	0					
ANR	8034723	SizeofOperand	CollectedInfo		8034698	1					
ANR	8034724	ExpressionStatement	info . out = out	1036:2:31764:31778	8034698	3	True				
ANR	8034725	AssignmentExpression	info . out = out		8034698	0		=			
ANR	8034726	MemberAccess	info . out		8034698	0					
ANR	8034727	Identifier	info		8034698	0					
ANR	8034728	Identifier	out		8034698	1					
ANR	8034729	Identifier	out		8034698	1					
ANR	8034730	ExpressionStatement	info . fdata . duplex = - 1	1037:2:31782:31804	8034698	4	True				
ANR	8034731	AssignmentExpression	info . fdata . duplex = - 1		8034698	0		=			
ANR	8034732	MemberAccess	info . fdata . duplex		8034698	0					
ANR	8034733	MemberAccess	info . fdata		8034698	0					
ANR	8034734	Identifier	info		8034698	0					
ANR	8034735	Identifier	fdata		8034698	1					
ANR	8034736	Identifier	duplex		8034698	1					
ANR	8034737	UnaryOperationExpression	- 1		8034698	1					
ANR	8034738	UnaryOperator	-		8034698	0					
ANR	8034739	PrimaryExpression	1		8034698	1					
ANR	8034740	ExpressionStatement	info . fdata . dry_time = - 1	1038:2:31808:31832	8034698	5	True				
ANR	8034741	AssignmentExpression	info . fdata . dry_time = - 1		8034698	0		=			
ANR	8034742	MemberAccess	info . fdata . dry_time		8034698	0					
ANR	8034743	MemberAccess	info . fdata		8034698	0					
ANR	8034744	Identifier	info		8034698	0					
ANR	8034745	Identifier	fdata		8034698	1					
ANR	8034746	Identifier	dry_time		8034698	1					
ANR	8034747	UnaryOperationExpression	- 1		8034698	1					
ANR	8034748	UnaryOperator	-		8034698	0					
ANR	8034749	PrimaryExpression	1		8034698	1					
ANR	8034750	ExpressionStatement	info . fdata . raster_graphics_quality = - 1	1039:2:31836:31875	8034698	6	True				
ANR	8034751	AssignmentExpression	info . fdata . raster_graphics_quality = - 1		8034698	0		=			
ANR	8034752	MemberAccess	info . fdata . raster_graphics_quality		8034698	0					
ANR	8034753	MemberAccess	info . fdata		8034698	0					
ANR	8034754	Identifier	info		8034698	0					
ANR	8034755	Identifier	fdata		8034698	1					
ANR	8034756	Identifier	raster_graphics_quality		8034698	1					
ANR	8034757	UnaryOperationExpression	- 1		8034698	1					
ANR	8034758	UnaryOperator	-		8034698	0					
ANR	8034759	PrimaryExpression	1		8034698	1					
ANR	8034760	ExpressionStatement	info . fdata . shingling = - 1	1040:2:31879:31904	8034698	7	True				
ANR	8034761	AssignmentExpression	info . fdata . shingling = - 1		8034698	0		=			
ANR	8034762	MemberAccess	info . fdata . shingling		8034698	0					
ANR	8034763	MemberAccess	info . fdata		8034698	0					
ANR	8034764	Identifier	info		8034698	0					
ANR	8034765	Identifier	fdata		8034698	1					
ANR	8034766	Identifier	shingling		8034698	1					
ANR	8034767	UnaryOperationExpression	- 1		8034698	1					
ANR	8034768	UnaryOperator	-		8034698	0					
ANR	8034769	PrimaryExpression	1		8034698	1					
ANR	8034770	ExpressionStatement	"rc = pcl_scan ( in , & analyzer , & info , NULL , NULL )"	1042:2:31909:31956	8034698	8	True				
ANR	8034771	AssignmentExpression	"rc = pcl_scan ( in , & analyzer , & info , NULL , NULL )"		8034698	0		=			
ANR	8034772	Identifier	rc		8034698	0					
ANR	8034773	CallExpression	"pcl_scan ( in , & analyzer , & info , NULL , NULL )"		8034698	1					
ANR	8034774	Callee	pcl_scan		8034698	0					
ANR	8034775	Identifier	pcl_scan		8034698	0					
ANR	8034776	ArgumentList	in		8034698	1					
ANR	8034777	Argument	in		8034698	0					
ANR	8034778	Identifier	in		8034698	0					
ANR	8034779	Argument	& analyzer		8034698	1					
ANR	8034780	UnaryOperationExpression	& analyzer		8034698	0					
ANR	8034781	UnaryOperator	&		8034698	0					
ANR	8034782	Identifier	analyzer		8034698	1					
ANR	8034783	Argument	& info		8034698	2					
ANR	8034784	UnaryOperationExpression	& info		8034698	0					
ANR	8034785	UnaryOperator	&		8034698	0					
ANR	8034786	Identifier	info		8034698	1					
ANR	8034787	Argument	NULL		8034698	3					
ANR	8034788	Identifier	NULL		8034698	0					
ANR	8034789	Argument	NULL		8034698	4					
ANR	8034790	Identifier	NULL		8034698	0					
ANR	8034791	IfStatement	if ( rc != 0 )		8034698	9					
ANR	8034792	Condition	rc != 0	1043:6:31964:31970	8034698	0	True				
ANR	8034793	EqualityExpression	rc != 0		8034698	0		!=			
ANR	8034794	Identifier	rc		8034698	0					
ANR	8034795	PrimaryExpression	0		8034698	1					
ANR	8034796	ReturnStatement	return 1 ;	1043:15:31973:31981	8034698	1	True				
ANR	8034797	PrimaryExpression	1		8034698	0					
ANR	8034798	IfStatement	if ( info . number_of_outputs == 0 )		8034698	10					
ANR	8034799	Condition	info . number_of_outputs == 0	1045:6:31990:32016	8034698	0	True				
ANR	8034800	EqualityExpression	info . number_of_outputs == 0		8034698	0		==			
ANR	8034801	MemberAccess	info . number_of_outputs		8034698	0					
ANR	8034802	Identifier	info		8034698	0					
ANR	8034803	Identifier	number_of_outputs		8034698	1					
ANR	8034804	PrimaryExpression	0		8034698	1					
ANR	8034805	CompoundStatement		15:35:334:334	8034698	1					
ANR	8034806	ExpressionStatement	"emessage ( 50 , ""This does not seem to be a PCL file containing raster data.\\n"" )"	1046:4:32025:32108	8034698	0	True				
ANR	8034807	CallExpression	"emessage ( 50 , ""This does not seem to be a PCL file containing raster data.\\n"" )"		8034698	0					
ANR	8034808	Callee	emessage		8034698	0					
ANR	8034809	Identifier	emessage		8034698	0					
ANR	8034810	ArgumentList	50		8034698	1					
ANR	8034811	Argument	50		8034698	0					
ANR	8034812	PrimaryExpression	50		8034698	0					
ANR	8034813	Argument	"""This does not seem to be a PCL file containing raster data.\\n"""		8034698	1					
ANR	8034814	PrimaryExpression	"""This does not seem to be a PCL file containing raster data.\\n"""		8034698	0					
ANR	8034815	ReturnStatement	return 1 ;	1048:4:32114:32122	8034698	1	True				
ANR	8034816	PrimaryExpression	1		8034698	0					
ANR	8034817	ReturnStatement	return 0 ;	1051:2:32131:32139	8034698	11	True				
ANR	8034818	PrimaryExpression	0		8034698	0					
ANR	8034819	ReturnType	static int		8034698	1					
ANR	8034820	Identifier	work		8034698	2					
ANR	8034821	ParameterList	"FILE * in , FILE * out"		8034698	3					
ANR	8034822	Parameter	FILE * in	1030:16:31646:31653	8034698	0	True				
ANR	8034823	ParameterType	FILE *		8034698	0					
ANR	8034824	Identifier	in		8034698	1					
ANR	8034825	Parameter	FILE * out	1030:26:31656:31664	8034698	1	True				
ANR	8034826	ParameterType	FILE *		8034698	0					
ANR	8034827	Identifier	out		8034698	1					
ANR	8034828	CFGEntryNode	ENTRY		8034698		True				
ANR	8034829	CFGExitNode	EXIT		8034698		True				
ANR	8034830	Symbol	info . fdata . raster_graphics_quality		8034698						
ANR	8034831	Symbol	NULL		8034698						
ANR	8034832	Symbol	& info		8034698						
ANR	8034833	Symbol	& analyzer		8034698						
ANR	8034834	Symbol	in		8034698						
ANR	8034835	Symbol	pcl_scan		8034698						
ANR	8034836	Symbol	info . out		8034698						
ANR	8034837	Symbol	out		8034698						
ANR	8034838	Symbol	info . fdata		8034698						
ANR	8034839	Symbol	rc		8034698						
ANR	8034840	Symbol	info . fdata . dry_time		8034698						
ANR	8034841	Symbol	info . fdata . shingling		8034698						
ANR	8034842	Symbol	info . fdata . duplex		8034698						
ANR	8034843	Symbol	info . number_of_outputs		8034698						
ANR	8034844	Symbol	info		8034698						
ANR	8034845	Function	main	1064:0:32458:35094							
ANR	8034846	FunctionDef	"main (int argc , char * * argv)"		8034845	0					
ANR	8034847	CompoundStatement		1065:0:32490:35094	8034845	0					
ANR	8034848	IdentifierDeclStatement	char * outfile_name = NULL ;	1066:2:32494:32523	8034845	0	True				
ANR	8034849	IdentifierDecl	* outfile_name = NULL		8034845	0					
ANR	8034850	IdentifierDeclType	char *		8034845	0					
ANR	8034851	Identifier	outfile_name		8034845	1					
ANR	8034852	AssignmentExpression	* outfile_name = NULL		8034845	2		=			
ANR	8034853	Identifier	NULL		8034845	0					
ANR	8034854	Identifier	NULL		8034845	1					
ANR	8034855	IdentifierDeclStatement	"FILE * outfile , * infile ;"	1068:2:32527:32557	8034845	1	True				
ANR	8034856	IdentifierDecl	* outfile		8034845	0					
ANR	8034857	IdentifierDeclType	FILE *		8034845	0					
ANR	8034858	Identifier	outfile		8034845	1					
ANR	8034859	IdentifierDecl	* infile		8034845	1					
ANR	8034860	IdentifierDeclType	FILE *		8034845	0					
ANR	8034861	Identifier	infile		8034845	1					
ANR	8034862	IdentifierDeclStatement	"int c , errors = 0 , number_of_infiles ;"	1071:2:32561:32609	8034845	2	True				
ANR	8034863	IdentifierDecl	c		8034845	0					
ANR	8034864	IdentifierDeclType	int		8034845	0					
ANR	8034865	Identifier	c		8034845	1					
ANR	8034866	IdentifierDecl	errors = 0		8034845	1					
ANR	8034867	IdentifierDeclType	int		8034845	0					
ANR	8034868	Identifier	errors		8034845	1					
ANR	8034869	AssignmentExpression	errors = 0		8034845	2		=			
ANR	8034870	Identifier	errors		8034845	0					
ANR	8034871	PrimaryExpression	0		8034845	1					
ANR	8034872	IdentifierDecl	number_of_infiles		8034845	2					
ANR	8034873	IdentifierDeclType	int		8034845	0					
ANR	8034874	Identifier	number_of_infiles		8034845	1					
ANR	8034875	CompoundStatement		14:4:144:149	8034845	3					
ANR	8034876	IdentifierDeclStatement	int j ;	1078:4:32635:32640	8034845	0	True				
ANR	8034877	IdentifierDecl	j		8034845	0					
ANR	8034878	IdentifierDeclType	int		8034845	0					
ANR	8034879	Identifier	j		8034845	1					
ANR	8034880	ForStatement	for ( j = 1 ; j < sizeof ( action_table ) / sizeof ( ActionEntry ) ; j ++ )		8034845	1					
ANR	8034881	ForInit	j = 1 ;	1080:9:32652:32657	8034845	0	True				
ANR	8034882	AssignmentExpression	j = 1		8034845	0		=			
ANR	8034883	Identifier	j		8034845	0					
ANR	8034884	PrimaryExpression	1		8034845	1					
ANR	8034885	Condition	j < sizeof ( action_table ) / sizeof ( ActionEntry )	1080:16:32659:32702	8034845	1	True				
ANR	8034886	RelationalExpression	j < sizeof ( action_table ) / sizeof ( ActionEntry )		8034845	0		<			
ANR	8034887	Identifier	j		8034845	0					
ANR	8034888	MultiplicativeExpression	sizeof ( action_table ) / sizeof ( ActionEntry )		8034845	1		/			
ANR	8034889	SizeofExpression	sizeof ( action_table )		8034845	0					
ANR	8034890	Sizeof	sizeof		8034845	0					
ANR	8034891	SizeofOperand	action_table		8034845	1					
ANR	8034892	SizeofExpression	sizeof ( ActionEntry )		8034845	1					
ANR	8034893	Sizeof	sizeof		8034845	0					
ANR	8034894	SizeofOperand	ActionEntry		8034845	1					
ANR	8034895	PostIncDecOperationExpression	j ++	1080:62:32705:32707	8034845	2	True				
ANR	8034896	Identifier	j		8034845	0					
ANR	8034897	IncDec	++		8034845	1					
ANR	8034898	ExpressionStatement	"assert ( cmp_entries ( action_table + ( j - 1 ) , action_table + j ) < 0 )"	1081:6:32716:32781	8034845	3	True				
ANR	8034899	CallExpression	"assert ( cmp_entries ( action_table + ( j - 1 ) , action_table + j ) < 0 )"		8034845	0					
ANR	8034900	Callee	assert		8034845	0					
ANR	8034901	Identifier	assert		8034845	0					
ANR	8034902	ArgumentList	"cmp_entries ( action_table + ( j - 1 ) , action_table + j ) < 0"		8034845	1					
ANR	8034903	Argument	"cmp_entries ( action_table + ( j - 1 ) , action_table + j ) < 0"		8034845	0					
ANR	8034904	RelationalExpression	"cmp_entries ( action_table + ( j - 1 ) , action_table + j ) < 0"		8034845	0		<			
ANR	8034905	CallExpression	"cmp_entries ( action_table + ( j - 1 ) , action_table + j )"		8034845	0					
ANR	8034906	Callee	cmp_entries		8034845	0					
ANR	8034907	Identifier	cmp_entries		8034845	0					
ANR	8034908	ArgumentList	action_table + ( j - 1 )		8034845	1					
ANR	8034909	Argument	action_table + ( j - 1 )		8034845	0					
ANR	8034910	AdditiveExpression	action_table + ( j - 1 )		8034845	0		+			
ANR	8034911	Identifier	action_table		8034845	0					
ANR	8034912	AdditiveExpression	j - 1		8034845	1		-			
ANR	8034913	Identifier	j		8034845	0					
ANR	8034914	PrimaryExpression	1		8034845	1					
ANR	8034915	Argument	action_table + j		8034845	1					
ANR	8034916	AdditiveExpression	action_table + j		8034845	0		+			
ANR	8034917	Identifier	action_table		8034845	0					
ANR	8034918	Identifier	j		8034845	1					
ANR	8034919	PrimaryExpression	0		8034845	1					
ANR	8034920	ExpressionStatement	"setlocale ( LC_ALL , """" )"	1086:2:32863:32884	8034845	4	True				
ANR	8034921	CallExpression	"setlocale ( LC_ALL , """" )"		8034845	0					
ANR	8034922	Callee	setlocale		8034845	0					
ANR	8034923	Identifier	setlocale		8034845	0					
ANR	8034924	ArgumentList	LC_ALL		8034845	1					
ANR	8034925	Argument	LC_ALL		8034845	0					
ANR	8034926	Identifier	LC_ALL		8034845	0					
ANR	8034927	Argument	""""""		8034845	1					
ANR	8034928	PrimaryExpression	""""""		8034845	0					
ANR	8034929	ExpressionStatement	"catd = catopen ( ""pcl3opts"" , 0 )"	1087:2:32888:32917	8034845	5	True				
ANR	8034930	AssignmentExpression	"catd = catopen ( ""pcl3opts"" , 0 )"		8034845	0		=			
ANR	8034931	Identifier	catd		8034845	0					
ANR	8034932	CallExpression	"catopen ( ""pcl3opts"" , 0 )"		8034845	1					
ANR	8034933	Callee	catopen		8034845	0					
ANR	8034934	Identifier	catopen		8034845	0					
ANR	8034935	ArgumentList	"""pcl3opts"""		8034845	1					
ANR	8034936	Argument	"""pcl3opts"""		8034845	0					
ANR	8034937	PrimaryExpression	"""pcl3opts"""		8034845	0					
ANR	8034938	Argument	0		8034845	1					
ANR	8034939	PrimaryExpression	0		8034845	0					
ANR	8034940	ExpressionStatement	"puts ( ""*** pcl3opts\\n"" )"	1089:2:32922:32944	8034845	6	True				
ANR	8034941	CallExpression	"puts ( ""*** pcl3opts\\n"" )"		8034845	0					
ANR	8034942	Callee	puts		8034845	0					
ANR	8034943	Identifier	puts		8034845	0					
ANR	8034944	ArgumentList	"""*** pcl3opts\\n"""		8034845	1					
ANR	8034945	Argument	"""*** pcl3opts\\n"""		8034845	0					
ANR	8034946	PrimaryExpression	"""*** pcl3opts\\n"""		8034845	0					
ANR	8034947	IfStatement	if ( argc <= 0 || argv [ 0 ] == NULL || argv [ 0 ] [ 0 ] == '\\0' )		8034845	7					
ANR	8034948	Condition	argc <= 0 || argv [ 0 ] == NULL || argv [ 0 ] [ 0 ] == '\\0'	1092:6:33072:33121	8034845	0	True				
ANR	8034949	OrExpression	argc <= 0 || argv [ 0 ] == NULL || argv [ 0 ] [ 0 ] == '\\0'		8034845	0		||			
ANR	8034950	RelationalExpression	argc <= 0		8034845	0		<=			
ANR	8034951	Identifier	argc		8034845	0					
ANR	8034952	PrimaryExpression	0		8034845	1					
ANR	8034953	OrExpression	argv [ 0 ] == NULL || argv [ 0 ] [ 0 ] == '\\0'		8034845	1		||			
ANR	8034954	EqualityExpression	argv [ 0 ] == NULL		8034845	0		==			
ANR	8034955	ArrayIndexing	argv [ 0 ]		8034845	0					
ANR	8034956	Identifier	argv		8034845	0					
ANR	8034957	PrimaryExpression	0		8034845	1					
ANR	8034958	Identifier	NULL		8034845	1					
ANR	8034959	EqualityExpression	argv [ 0 ] [ 0 ] == '\\0'		8034845	1		==			
ANR	8034960	ArrayIndexing	argv [ 0 ] [ 0 ]		8034845	0					
ANR	8034961	ArrayIndexing	argv [ 0 ]		8034845	0					
ANR	8034962	Identifier	argv		8034845	0					
ANR	8034963	PrimaryExpression	0		8034845	1					
ANR	8034964	PrimaryExpression	0		8034845	1					
ANR	8034965	PrimaryExpression	'\\0'		8034845	1					
ANR	8034966	ExpressionStatement	"progname = ""pcl3opts"""	1093:4:33128:33149	8034845	1	True				
ANR	8034967	AssignmentExpression	"progname = ""pcl3opts"""		8034845	0		=			
ANR	8034968	Identifier	progname		8034845	0					
ANR	8034969	PrimaryExpression	"""pcl3opts"""		8034845	1					
ANR	8034970	ElseStatement	else		8034845	0					
ANR	8034971	CompoundStatement		30:7:667:667	8034845	0					
ANR	8034972	IfStatement	"if ( ( progname = strrchr ( argv [ 0 ] , '/' ) ) == NULL || progname [ 1 ] == '\\0' )"		8034845	0					
ANR	8034973	Condition	"( progname = strrchr ( argv [ 0 ] , '/' ) ) == NULL || progname [ 1 ] == '\\0'"	1095:8:33168:33232	8034845	0	True				
ANR	8034974	OrExpression	"( progname = strrchr ( argv [ 0 ] , '/' ) ) == NULL || progname [ 1 ] == '\\0'"		8034845	0		||			
ANR	8034975	EqualityExpression	"( progname = strrchr ( argv [ 0 ] , '/' ) ) == NULL"		8034845	0		==			
ANR	8034976	AssignmentExpression	"progname = strrchr ( argv [ 0 ] , '/' )"		8034845	0		=			
ANR	8034977	Identifier	progname		8034845	0					
ANR	8034978	CallExpression	"strrchr ( argv [ 0 ] , '/' )"		8034845	1					
ANR	8034979	Callee	strrchr		8034845	0					
ANR	8034980	Identifier	strrchr		8034845	0					
ANR	8034981	ArgumentList	argv [ 0 ]		8034845	1					
ANR	8034982	Argument	argv [ 0 ]		8034845	0					
ANR	8034983	ArrayIndexing	argv [ 0 ]		8034845	0					
ANR	8034984	Identifier	argv		8034845	0					
ANR	8034985	PrimaryExpression	0		8034845	1					
ANR	8034986	Argument	'/'		8034845	1					
ANR	8034987	PrimaryExpression	'/'		8034845	0					
ANR	8034988	Identifier	NULL		8034845	1					
ANR	8034989	EqualityExpression	progname [ 1 ] == '\\0'		8034845	1		==			
ANR	8034990	ArrayIndexing	progname [ 1 ]		8034845	0					
ANR	8034991	Identifier	progname		8034845	0					
ANR	8034992	PrimaryExpression	1		8034845	1					
ANR	8034993	PrimaryExpression	'\\0'		8034845	1					
ANR	8034994	ExpressionStatement	progname = argv [ 0 ]	1096:6:33241:33259	8034845	1	True				
ANR	8034995	AssignmentExpression	progname = argv [ 0 ]		8034845	0		=			
ANR	8034996	Identifier	progname		8034845	0					
ANR	8034997	ArrayIndexing	argv [ 0 ]		8034845	1					
ANR	8034998	Identifier	argv		8034845	0					
ANR	8034999	PrimaryExpression	0		8034845	1					
ANR	8035000	ElseStatement	else		8034845	0					
ANR	8035001	ExpressionStatement	progname ++	1098:6:33276:33286	8034845	0	True				
ANR	8035002	PostIncDecOperationExpression	progname ++		8034845	0					
ANR	8035003	Identifier	progname		8034845	0					
ANR	8035004	IncDec	++		8034845	1					
ANR	8035005	WhileStatement	"while ( ( c = getopt ( argc , argv , ""o:"" ) ) != EOF )"		8034845	8					
ANR	8035006	Condition	"( c = getopt ( argc , argv , ""o:"" ) ) != EOF"	1102:9:33328:33364	8034845	0	True				
ANR	8035007	EqualityExpression	"( c = getopt ( argc , argv , ""o:"" ) ) != EOF"		8034845	0		!=			
ANR	8035008	AssignmentExpression	"c = getopt ( argc , argv , ""o:"" )"		8034845	0		=			
ANR	8035009	Identifier	c		8034845	0					
ANR	8035010	CallExpression	"getopt ( argc , argv , ""o:"" )"		8034845	1					
ANR	8035011	Callee	getopt		8034845	0					
ANR	8035012	Identifier	getopt		8034845	0					
ANR	8035013	ArgumentList	argc		8034845	1					
ANR	8035014	Argument	argc		8034845	0					
ANR	8035015	Identifier	argc		8034845	0					
ANR	8035016	Argument	argv		8034845	1					
ANR	8035017	Identifier	argv		8034845	0					
ANR	8035018	Argument	"""o:"""		8034845	2					
ANR	8035019	PrimaryExpression	"""o:"""		8034845	0					
ANR	8035020	Identifier	EOF		8034845	1					
ANR	8035021	CompoundStatement		38:48:876:876	8034845	1					
ANR	8035022	SwitchStatement	switch ( c )		8034845	0					
ANR	8035023	Condition	c	1103:11:33380:33380	8034845	0	True				
ANR	8035024	Identifier	c		8034845	0					
ANR	8035025	CompoundStatement		39:14:892:892	8034845	1					
ANR	8035026	Label	case 'o' :	1104:4:33389:33397	8034845	0	True				
ANR	8035027	ExpressionStatement	outfile_name = optarg	1105:6:33405:33426	8034845	1	True				
ANR	8035028	AssignmentExpression	outfile_name = optarg		8034845	0		=			
ANR	8035029	Identifier	outfile_name		8034845	0					
ANR	8035030	Identifier	optarg		8034845	1					
ANR	8035031	BreakStatement	break ;	1106:6:33434:33439	8034845	2	True				
ANR	8035032	Label	default :	1107:4:33445:33452	8034845	3	True				
ANR	8035033	Identifier	default		8034845	0					
ANR	8035034	ExpressionStatement	errors ++	1108:6:33460:33468	8034845	4	True				
ANR	8035035	PostIncDecOperationExpression	errors ++		8034845	0					
ANR	8035036	Identifier	errors		8034845	0					
ANR	8035037	IncDec	++		8034845	1					
ANR	8035038	BreakStatement	break ;	1109:6:33476:33481	8034845	5	True				
ANR	8035039	IfStatement	if ( errors > 0 )		8034845	9					
ANR	8035040	Condition	errors > 0	1114:6:33544:33553	8034845	0	True				
ANR	8035041	RelationalExpression	errors > 0		8034845	0		>			
ANR	8035042	Identifier	errors		8034845	0					
ANR	8035043	PrimaryExpression	0		8034845	1					
ANR	8035044	CompoundStatement		50:18:1065:1065	8034845	1					
ANR	8035045	Statement	emessage	1115:4:33562:33569	8034845	0	True				
ANR	8035046	Statement	(	1115:12:33570:33570	8034845	1	True				
ANR	8035047	Statement	1	1115:13:33571:33571	8034845	2	True				
ANR	8035048	Statement	","	1115:14:33572:33572	8034845	3	True				
ANR	8035049	Statement	"""Usage: %s [<options>] [<input files>].\\n"""	1115:16:33574:33615	8034845	4	True				
ANR	8035050	Statement	"""  <option> ::= -o <output file>\\n"""	1116:6:33623:33657	8034845	5	True				
ANR	8035051	Statement	","	1116:41:33658:33658	8034845	6	True				
ANR	8035052	Statement	progname	1117:6:33666:33673	8034845	7	True				
ANR	8035053	Statement	)	1117:14:33674:33674	8034845	8	True				
ANR	8035054	ExpressionStatement		1117:15:33675:33675	8034845	9	True				
ANR	8035055	ExpressionStatement	exit ( EXIT_FAILURE )	1118:4:33681:33699	8034845	10	True				
ANR	8035056	CallExpression	exit ( EXIT_FAILURE )		8034845	0					
ANR	8035057	Callee	exit		8034845	0					
ANR	8035058	Identifier	exit		8034845	0					
ANR	8035059	ArgumentList	EXIT_FAILURE		8034845	1					
ANR	8035060	Argument	EXIT_FAILURE		8034845	0					
ANR	8035061	Identifier	EXIT_FAILURE		8034845	0					
ANR	8035062	IfStatement	if ( outfile_name == NULL )		8034845	10					
ANR	8035063	Condition	outfile_name == NULL	1122:6:33741:33760	8034845	0	True				
ANR	8035064	EqualityExpression	outfile_name == NULL		8034845	0		==			
ANR	8035065	Identifier	outfile_name		8034845	0					
ANR	8035066	Identifier	NULL		8034845	1					
ANR	8035067	ExpressionStatement	outfile = stdout	1122:28:33763:33779	8034845	1	True				
ANR	8035068	AssignmentExpression	outfile = stdout		8034845	0		=			
ANR	8035069	Identifier	outfile		8034845	0					
ANR	8035070	Identifier	stdout		8034845	1					
ANR	8035071	ElseStatement	else		8034845	0					
ANR	8035072	CompoundStatement		59:7:1297:1297	8034845	0					
ANR	8035073	ExpressionStatement	"outfile = fopen ( outfile_name , ""w"" )"	1124:4:33794:33828	8034845	0	True				
ANR	8035074	AssignmentExpression	"outfile = fopen ( outfile_name , ""w"" )"		8034845	0		=			
ANR	8035075	Identifier	outfile		8034845	0					
ANR	8035076	CallExpression	"fopen ( outfile_name , ""w"" )"		8034845	1					
ANR	8035077	Callee	fopen		8034845	0					
ANR	8035078	Identifier	fopen		8034845	0					
ANR	8035079	ArgumentList	outfile_name		8034845	1					
ANR	8035080	Argument	outfile_name		8034845	0					
ANR	8035081	Identifier	outfile_name		8034845	0					
ANR	8035082	Argument	"""w"""		8034845	1					
ANR	8035083	PrimaryExpression	"""w"""		8034845	0					
ANR	8035084	IfStatement	if ( outfile == NULL )		8034845	1					
ANR	8035085	Condition	outfile == NULL	1125:8:33838:33852	8034845	0	True				
ANR	8035086	EqualityExpression	outfile == NULL		8034845	0		==			
ANR	8035087	Identifier	outfile		8034845	0					
ANR	8035088	Identifier	NULL		8034845	1					
ANR	8035089	CompoundStatement		61:25:1364:1364	8034845	1					
ANR	8035090	ExpressionStatement	"emessage ( 2 , ""The file `%s' could not be opened for writing:\\n  %s.\\n"" , outfile_name , strerror ( errno ) )"	1126:6:33863:33972	8034845	0	True				
ANR	8035091	CallExpression	"emessage ( 2 , ""The file `%s' could not be opened for writing:\\n  %s.\\n"" , outfile_name , strerror ( errno ) )"		8034845	0					
ANR	8035092	Callee	emessage		8034845	0					
ANR	8035093	Identifier	emessage		8034845	0					
ANR	8035094	ArgumentList	2		8034845	1					
ANR	8035095	Argument	2		8034845	0					
ANR	8035096	PrimaryExpression	2		8034845	0					
ANR	8035097	Argument	"""The file `%s' could not be opened for writing:\\n  %s.\\n"""		8034845	1					
ANR	8035098	PrimaryExpression	"""The file `%s' could not be opened for writing:\\n  %s.\\n"""		8034845	0					
ANR	8035099	Argument	outfile_name		8034845	2					
ANR	8035100	Identifier	outfile_name		8034845	0					
ANR	8035101	Argument	strerror ( errno )		8034845	3					
ANR	8035102	CallExpression	strerror ( errno )		8034845	0					
ANR	8035103	Callee	strerror		8034845	0					
ANR	8035104	Identifier	strerror		8034845	0					
ANR	8035105	ArgumentList	errno		8034845	1					
ANR	8035106	Argument	errno		8034845	0					
ANR	8035107	Identifier	errno		8034845	0					
ANR	8035108	ExpressionStatement	exit ( EXIT_FAILURE )	1128:6:33980:33998	8034845	1	True				
ANR	8035109	CallExpression	exit ( EXIT_FAILURE )		8034845	0					
ANR	8035110	Callee	exit		8034845	0					
ANR	8035111	Identifier	exit		8034845	0					
ANR	8035112	ArgumentList	EXIT_FAILURE		8034845	1					
ANR	8035113	Argument	EXIT_FAILURE		8034845	0					
ANR	8035114	Identifier	EXIT_FAILURE		8034845	0					
ANR	8035115	ExpressionStatement	number_of_infiles = argc - optind	1133:2:34047:34080	8034845	11	True				
ANR	8035116	AssignmentExpression	number_of_infiles = argc - optind		8034845	0		=			
ANR	8035117	Identifier	number_of_infiles		8034845	0					
ANR	8035118	AdditiveExpression	argc - optind		8034845	1		-			
ANR	8035119	Identifier	argc		8034845	0					
ANR	8035120	Identifier	optind		8034845	1					
ANR	8035121	IfStatement	if ( number_of_infiles <= 0 )		8034845	12					
ANR	8035122	Condition	number_of_infiles <= 0	1134:6:34088:34109	8034845	0	True				
ANR	8035123	RelationalExpression	number_of_infiles <= 0		8034845	0		<=			
ANR	8035124	Identifier	number_of_infiles		8034845	0					
ANR	8035125	PrimaryExpression	0		8034845	1					
ANR	8035126	ExpressionStatement	"errors += work ( stdin , outfile )"	1134:30:34112:34142	8034845	1	True				
ANR	8035127	AssignmentExpression	"errors += work ( stdin , outfile )"		8034845	0		+=			
ANR	8035128	Identifier	errors		8034845	0					
ANR	8035129	CallExpression	"work ( stdin , outfile )"		8034845	1					
ANR	8035130	Callee	work		8034845	0					
ANR	8035131	Identifier	work		8034845	0					
ANR	8035132	ArgumentList	stdin		8034845	1					
ANR	8035133	Argument	stdin		8034845	0					
ANR	8035134	Identifier	stdin		8034845	0					
ANR	8035135	Argument	outfile		8034845	1					
ANR	8035136	Identifier	outfile		8034845	0					
ANR	8035137	ReturnType	int		8034845	1					
ANR	8035138	Identifier	main		8034845	2					
ANR	8035139	ParameterList	"int argc , char * * argv"		8034845	3					
ANR	8035140	Parameter	int argc	1064:9:32467:32474	8034845	0	True				
ANR	8035141	ParameterType	int		8034845	0					
ANR	8035142	Identifier	argc		8034845	1					
ANR	8035143	Parameter	char * * argv	1064:19:32477:32487	8034845	1	True				
ANR	8035144	ParameterType	char * *		8034845	0					
ANR	8035145	Identifier	argv		8034845	1					
ANR	8035146	CFGEntryNode	ENTRY		8034845		True				
ANR	8035147	CFGExitNode	EXIT		8034845		True				
ANR	8035148	Symbol	stdin		8034845						
ANR	8035149	Symbol	number_of_infiles		8034845						
ANR	8035150	Symbol	stdout		8034845						
ANR	8035151	Symbol	catopen		8034845						
ANR	8035152	Symbol	optind		8034845						
ANR	8035153	Symbol	outfile		8034845						
ANR	8035154	Symbol	optarg		8034845						
ANR	8035155	Symbol	* argv		8034845						
ANR	8035156	Symbol	infile		8034845						
ANR	8035157	Symbol	argv		8034845						
ANR	8035158	Symbol	cmp_entries		8034845						
ANR	8035159	Symbol	action_table		8034845						
ANR	8035160	Symbol	getopt		8034845						
ANR	8035161	Symbol	* * argv		8034845						
ANR	8035162	Symbol	EOF		8034845						
ANR	8035163	Symbol	argc		8034845						
ANR	8035164	Symbol	catd		8034845						
ANR	8035165	Symbol	fopen		8034845						
ANR	8035166	Symbol	errno		8034845						
ANR	8035167	Symbol	NULL		8034845						
ANR	8035168	Symbol	c		8034845						
ANR	8035169	Symbol	work		8034845						
ANR	8035170	Symbol	j		8034845						
ANR	8035171	Symbol	strerror		8034845						
ANR	8035172	Symbol	LC_ALL		8034845						
ANR	8035173	Symbol	EXIT_FAILURE		8034845						
ANR	8035174	Symbol	* progname		8034845						
ANR	8035175	Symbol	strrchr		8034845						
ANR	8035176	Symbol	progname		8034845						
ANR	8035177	Symbol	outfile_name		8034845						
ANR	8035178	Symbol	errors		8034845						
