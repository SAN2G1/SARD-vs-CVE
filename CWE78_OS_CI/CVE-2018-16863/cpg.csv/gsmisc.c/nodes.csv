command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5237014	File	data/converged/CVE-2018-16863_ghostpdl/gsmisc.c								
ANR	5237015	Function	orig_sqrt	31:0:1015:1078							
ANR	5237016	FunctionDef	orig_sqrt (double x)		5237015	0					
ANR	5237017	CompoundStatement		33:0:1056:1078	5237015	0					
ANR	5237018	ReturnStatement	return sqrt ( x ) ;	34:4:1062:1076	5237015	0	True				
ANR	5237019	CallExpression	sqrt ( x )		5237015	0					
ANR	5237020	Callee	sqrt		5237015	0					
ANR	5237021	Identifier	sqrt		5237015	0					
ANR	5237022	ArgumentList	x		5237015	1					
ANR	5237023	Argument	x		5237015	0					
ANR	5237024	Identifier	x		5237015	0					
ANR	5237025	ReturnType	static inline double		5237015	1					
ANR	5237026	Identifier	orig_sqrt		5237015	2					
ANR	5237027	ParameterList	double x		5237015	3					
ANR	5237028	Parameter	double x	32:10:1046:1053	5237015	0	True				
ANR	5237029	ParameterType	double		5237015	0					
ANR	5237030	Identifier	x		5237015	1					
ANR	5237031	CFGEntryNode	ENTRY		5237015		True				
ANR	5237032	CFGExitNode	EXIT		5237015		True				
ANR	5237033	Symbol	sqrt		5237015						
ANR	5237034	Symbol	x		5237015						
ANR	5237035	DeclStmt									
ANR	5237036	Decl							const char	const char [ ]	msg_truncated
ANR	5237037	Function	outprintf	58:0:1600:2070							
ANR	5237038	FunctionDef	"outprintf (const gs_memory_t * mem , const char * fmt)"		5237037	0					
ANR	5237039	CompoundStatement		59:0:1660:2070	5237037	0					
ANR	5237040	IdentifierDeclStatement	int count ;	60:4:1666:1675	5237037	0	True				
ANR	5237041	IdentifierDecl	count		5237037	0					
ANR	5237042	IdentifierDeclType	int		5237037	0					
ANR	5237043	Identifier	count		5237037	1					
ANR	5237044	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	61:4:1681:1708	5237037	1	True				
ANR	5237045	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		5237037	0					
ANR	5237046	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		5237037	0					
ANR	5237047	Identifier	buf		5237037	1					
ANR	5237048	Identifier	PRINTF_BUF_LENGTH		5237037	2					
ANR	5237049	IdentifierDeclStatement	va_list args ;	62:4:1714:1726	5237037	2	True				
ANR	5237050	IdentifierDecl	args		5237037	0					
ANR	5237051	IdentifierDeclType	va_list		5237037	0					
ANR	5237052	Identifier	args		5237037	1					
ANR	5237053	ExpressionStatement	"va_start ( args , fmt )"	64:4:1733:1752	5237037	3	True				
ANR	5237054	CallExpression	"va_start ( args , fmt )"		5237037	0					
ANR	5237055	Callee	va_start		5237037	0					
ANR	5237056	Identifier	va_start		5237037	0					
ANR	5237057	ArgumentList	args		5237037	1					
ANR	5237058	Argument	args		5237037	0					
ANR	5237059	Identifier	args		5237037	0					
ANR	5237060	Argument	fmt		5237037	1					
ANR	5237061	Identifier	fmt		5237037	0					
ANR	5237062	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	65:4:1758:1804	5237037	4	True				
ANR	5237063	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		5237037	0		=			
ANR	5237064	Identifier	count		5237037	0					
ANR	5237065	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		5237037	1					
ANR	5237066	Callee	vsnprintf		5237037	0					
ANR	5237067	Identifier	vsnprintf		5237037	0					
ANR	5237068	ArgumentList	buf		5237037	1					
ANR	5237069	Argument	buf		5237037	0					
ANR	5237070	Identifier	buf		5237037	0					
ANR	5237071	Argument	sizeof ( buf )		5237037	1					
ANR	5237072	SizeofExpression	sizeof ( buf )		5237037	0					
ANR	5237073	Sizeof	sizeof		5237037	0					
ANR	5237074	SizeofOperand	buf		5237037	1					
ANR	5237075	Argument	fmt		5237037	2					
ANR	5237076	Identifier	fmt		5237037	0					
ANR	5237077	Argument	args		5237037	3					
ANR	5237078	Identifier	args		5237037	0					
ANR	5237079	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		5237037	5					
ANR	5237080	Condition	count >= sizeof ( buf ) || count < 0	66:8:1814:1846	5237037	0	True				
ANR	5237081	OrExpression	count >= sizeof ( buf ) || count < 0		5237037	0		||			
ANR	5237082	RelationalExpression	count >= sizeof ( buf )		5237037	0		>=			
ANR	5237083	Identifier	count		5237037	0					
ANR	5237084	SizeofExpression	sizeof ( buf )		5237037	1					
ANR	5237085	Sizeof	sizeof		5237037	0					
ANR	5237086	SizeofOperand	buf		5237037	1					
ANR	5237087	RelationalExpression	count < 0		5237037	1		<			
ANR	5237088	Identifier	count		5237037	0					
ANR	5237089	PrimaryExpression	0		5237037	1					
ANR	5237090	CompoundStatement		8:44:189:189	5237037	1					
ANR	5237091	ExpressionStatement	"outwrite ( mem , buf , sizeof ( buf ) - 1 )"	67:8:1878:1913	5237037	0	True				
ANR	5237092	CallExpression	"outwrite ( mem , buf , sizeof ( buf ) - 1 )"		5237037	0					
ANR	5237093	Callee	outwrite		5237037	0					
ANR	5237094	Identifier	outwrite		5237037	0					
ANR	5237095	ArgumentList	mem		5237037	1					
ANR	5237096	Argument	mem		5237037	0					
ANR	5237097	Identifier	mem		5237037	0					
ANR	5237098	Argument	buf		5237037	1					
ANR	5237099	Identifier	buf		5237037	0					
ANR	5237100	Argument	sizeof ( buf ) - 1		5237037	2					
ANR	5237101	AdditiveExpression	sizeof ( buf ) - 1		5237037	0		-			
ANR	5237102	SizeofExpression	sizeof ( buf )		5237037	0					
ANR	5237103	Sizeof	sizeof		5237037	0					
ANR	5237104	SizeofOperand	buf		5237037	1					
ANR	5237105	PrimaryExpression	1		5237037	1					
ANR	5237106	ExpressionStatement	"outwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"	68:8:1923:1978	5237037	1	True				
ANR	5237107	CallExpression	"outwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"		5237037	0					
ANR	5237108	Callee	outwrite		5237037	0					
ANR	5237109	Identifier	outwrite		5237037	0					
ANR	5237110	ArgumentList	mem		5237037	1					
ANR	5237111	Argument	mem		5237037	0					
ANR	5237112	Identifier	mem		5237037	0					
ANR	5237113	Argument	msg_truncated		5237037	1					
ANR	5237114	Identifier	msg_truncated		5237037	0					
ANR	5237115	Argument	sizeof ( msg_truncated ) - 1		5237037	2					
ANR	5237116	AdditiveExpression	sizeof ( msg_truncated ) - 1		5237037	0		-			
ANR	5237117	SizeofExpression	sizeof ( msg_truncated )		5237037	0					
ANR	5237118	Sizeof	sizeof		5237037	0					
ANR	5237119	SizeofOperand	msg_truncated		5237037	1					
ANR	5237120	PrimaryExpression	1		5237037	1					
ANR	5237121	ElseStatement	else		5237037	0					
ANR	5237122	CompoundStatement		11:11:330:330	5237037	0					
ANR	5237123	ExpressionStatement	"outwrite ( mem , buf , count )"	70:8:2001:2026	5237037	0	True				
ANR	5237124	CallExpression	"outwrite ( mem , buf , count )"		5237037	0					
ANR	5237125	Callee	outwrite		5237037	0					
ANR	5237126	Identifier	outwrite		5237037	0					
ANR	5237127	ArgumentList	mem		5237037	1					
ANR	5237128	Argument	mem		5237037	0					
ANR	5237129	Identifier	mem		5237037	0					
ANR	5237130	Argument	buf		5237037	1					
ANR	5237131	Identifier	buf		5237037	0					
ANR	5237132	Argument	count		5237037	2					
ANR	5237133	Identifier	count		5237037	0					
ANR	5237134	ExpressionStatement	va_end ( args )	72:4:2038:2050	5237037	6	True				
ANR	5237135	CallExpression	va_end ( args )		5237037	0					
ANR	5237136	Callee	va_end		5237037	0					
ANR	5237137	Identifier	va_end		5237037	0					
ANR	5237138	ArgumentList	args		5237037	1					
ANR	5237139	Argument	args		5237037	0					
ANR	5237140	Identifier	args		5237037	0					
ANR	5237141	ReturnStatement	return count ;	73:4:2056:2068	5237037	7	True				
ANR	5237142	Identifier	count		5237037	0					
ANR	5237143	ReturnType	int		5237037	1					
ANR	5237144	Identifier	outprintf		5237037	2					
ANR	5237145	ParameterList	"const gs_memory_t * mem , const char * fmt"		5237037	3					
ANR	5237146	Parameter	const gs_memory_t * mem	58:14:1614:1635	5237037	0	True				
ANR	5237147	ParameterType	const gs_memory_t *		5237037	0					
ANR	5237148	Identifier	mem		5237037	1					
ANR	5237149	Parameter	const char * fmt	58:38:1638:1652	5237037	1	True				
ANR	5237150	ParameterType	const char *		5237037	0					
ANR	5237151	Identifier	fmt		5237037	1					
ANR	5237152	CFGEntryNode	ENTRY		5237037		True				
ANR	5237153	CFGExitNode	EXIT		5237037		True				
ANR	5237154	Symbol	args		5237037						
ANR	5237155	Symbol	buf		5237037						
ANR	5237156	Symbol	msg_truncated		5237037						
ANR	5237157	Symbol	mem		5237037						
ANR	5237158	Symbol	count		5237037						
ANR	5237159	Symbol	fmt		5237037						
ANR	5237160	Symbol	vsnprintf		5237037						
ANR	5237161	Function	errprintf_nomem	77:0:2095:2550							
ANR	5237162	FunctionDef	errprintf_nomem (const char * fmt)		5237161	0					
ANR	5237163	CompoundStatement		78:0:2137:2550	5237161	0					
ANR	5237164	IdentifierDeclStatement	int count ;	79:4:2143:2152	5237161	0	True				
ANR	5237165	IdentifierDecl	count		5237161	0					
ANR	5237166	IdentifierDeclType	int		5237161	0					
ANR	5237167	Identifier	count		5237161	1					
ANR	5237168	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	80:4:2158:2185	5237161	1	True				
ANR	5237169	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		5237161	0					
ANR	5237170	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		5237161	0					
ANR	5237171	Identifier	buf		5237161	1					
ANR	5237172	Identifier	PRINTF_BUF_LENGTH		5237161	2					
ANR	5237173	IdentifierDeclStatement	va_list args ;	81:4:2191:2203	5237161	2	True				
ANR	5237174	IdentifierDecl	args		5237161	0					
ANR	5237175	IdentifierDeclType	va_list		5237161	0					
ANR	5237176	Identifier	args		5237161	1					
ANR	5237177	ExpressionStatement	"va_start ( args , fmt )"	83:4:2210:2229	5237161	3	True				
ANR	5237178	CallExpression	"va_start ( args , fmt )"		5237161	0					
ANR	5237179	Callee	va_start		5237161	0					
ANR	5237180	Identifier	va_start		5237161	0					
ANR	5237181	ArgumentList	args		5237161	1					
ANR	5237182	Argument	args		5237161	0					
ANR	5237183	Identifier	args		5237161	0					
ANR	5237184	Argument	fmt		5237161	1					
ANR	5237185	Identifier	fmt		5237161	0					
ANR	5237186	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	84:4:2235:2281	5237161	4	True				
ANR	5237187	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		5237161	0		=			
ANR	5237188	Identifier	count		5237161	0					
ANR	5237189	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		5237161	1					
ANR	5237190	Callee	vsnprintf		5237161	0					
ANR	5237191	Identifier	vsnprintf		5237161	0					
ANR	5237192	ArgumentList	buf		5237161	1					
ANR	5237193	Argument	buf		5237161	0					
ANR	5237194	Identifier	buf		5237161	0					
ANR	5237195	Argument	sizeof ( buf )		5237161	1					
ANR	5237196	SizeofExpression	sizeof ( buf )		5237161	0					
ANR	5237197	Sizeof	sizeof		5237161	0					
ANR	5237198	SizeofOperand	buf		5237161	1					
ANR	5237199	Argument	fmt		5237161	2					
ANR	5237200	Identifier	fmt		5237161	0					
ANR	5237201	Argument	args		5237161	3					
ANR	5237202	Identifier	args		5237161	0					
ANR	5237203	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		5237161	5					
ANR	5237204	Condition	count >= sizeof ( buf ) || count < 0	85:8:2291:2323	5237161	0	True				
ANR	5237205	OrExpression	count >= sizeof ( buf ) || count < 0		5237161	0		||			
ANR	5237206	RelationalExpression	count >= sizeof ( buf )		5237161	0		>=			
ANR	5237207	Identifier	count		5237161	0					
ANR	5237208	SizeofExpression	sizeof ( buf )		5237161	1					
ANR	5237209	Sizeof	sizeof		5237161	0					
ANR	5237210	SizeofOperand	buf		5237161	1					
ANR	5237211	RelationalExpression	count < 0		5237161	1		<			
ANR	5237212	Identifier	count		5237161	0					
ANR	5237213	PrimaryExpression	0		5237161	1					
ANR	5237214	CompoundStatement		8:44:189:189	5237161	1					
ANR	5237215	ExpressionStatement	"errwrite_nomem ( buf , sizeof ( buf ) - 1 )"	86:8:2355:2391	5237161	0	True				
ANR	5237216	CallExpression	"errwrite_nomem ( buf , sizeof ( buf ) - 1 )"		5237161	0					
ANR	5237217	Callee	errwrite_nomem		5237161	0					
ANR	5237218	Identifier	errwrite_nomem		5237161	0					
ANR	5237219	ArgumentList	buf		5237161	1					
ANR	5237220	Argument	buf		5237161	0					
ANR	5237221	Identifier	buf		5237161	0					
ANR	5237222	Argument	sizeof ( buf ) - 1		5237161	1					
ANR	5237223	AdditiveExpression	sizeof ( buf ) - 1		5237161	0		-			
ANR	5237224	SizeofExpression	sizeof ( buf )		5237161	0					
ANR	5237225	Sizeof	sizeof		5237161	0					
ANR	5237226	SizeofOperand	buf		5237161	1					
ANR	5237227	PrimaryExpression	1		5237161	1					
ANR	5237228	ExpressionStatement	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"	87:8:2401:2457	5237161	1	True				
ANR	5237229	CallExpression	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"		5237161	0					
ANR	5237230	Callee	errwrite_nomem		5237161	0					
ANR	5237231	Identifier	errwrite_nomem		5237161	0					
ANR	5237232	ArgumentList	msg_truncated		5237161	1					
ANR	5237233	Argument	msg_truncated		5237161	0					
ANR	5237234	Identifier	msg_truncated		5237161	0					
ANR	5237235	Argument	sizeof ( msg_truncated ) - 1		5237161	1					
ANR	5237236	AdditiveExpression	sizeof ( msg_truncated ) - 1		5237161	0		-			
ANR	5237237	SizeofExpression	sizeof ( msg_truncated )		5237161	0					
ANR	5237238	Sizeof	sizeof		5237161	0					
ANR	5237239	SizeofOperand	msg_truncated		5237161	1					
ANR	5237240	PrimaryExpression	1		5237161	1					
ANR	5237241	ElseStatement	else		5237161	0					
ANR	5237242	CompoundStatement		11:11:332:332	5237161	0					
ANR	5237243	ExpressionStatement	"errwrite_nomem ( buf , count )"	89:8:2480:2506	5237161	0	True				
ANR	5237244	CallExpression	"errwrite_nomem ( buf , count )"		5237161	0					
ANR	5237245	Callee	errwrite_nomem		5237161	0					
ANR	5237246	Identifier	errwrite_nomem		5237161	0					
ANR	5237247	ArgumentList	buf		5237161	1					
ANR	5237248	Argument	buf		5237161	0					
ANR	5237249	Identifier	buf		5237161	0					
ANR	5237250	Argument	count		5237161	1					
ANR	5237251	Identifier	count		5237161	0					
ANR	5237252	ExpressionStatement	va_end ( args )	91:4:2518:2530	5237161	6	True				
ANR	5237253	CallExpression	va_end ( args )		5237161	0					
ANR	5237254	Callee	va_end		5237161	0					
ANR	5237255	Identifier	va_end		5237161	0					
ANR	5237256	ArgumentList	args		5237161	1					
ANR	5237257	Argument	args		5237161	0					
ANR	5237258	Identifier	args		5237161	0					
ANR	5237259	ReturnStatement	return count ;	92:4:2536:2548	5237161	7	True				
ANR	5237260	Identifier	count		5237161	0					
ANR	5237261	ReturnType	int		5237161	1					
ANR	5237262	Identifier	errprintf_nomem		5237161	2					
ANR	5237263	ParameterList	const char * fmt		5237161	3					
ANR	5237264	Parameter	const char * fmt	77:20:2115:2129	5237161	0	True				
ANR	5237265	ParameterType	const char *		5237161	0					
ANR	5237266	Identifier	fmt		5237161	1					
ANR	5237267	CFGEntryNode	ENTRY		5237161		True				
ANR	5237268	CFGExitNode	EXIT		5237161		True				
ANR	5237269	Symbol	args		5237161						
ANR	5237270	Symbol	buf		5237161						
ANR	5237271	Symbol	msg_truncated		5237161						
ANR	5237272	Symbol	count		5237161						
ANR	5237273	Symbol	fmt		5237161						
ANR	5237274	Symbol	vsnprintf		5237161						
ANR	5237275	Function	errprintf	96:0:2560:3030							
ANR	5237276	FunctionDef	"errprintf (const gs_memory_t * mem , const char * fmt)"		5237275	0					
ANR	5237277	CompoundStatement		97:0:2620:3030	5237275	0					
ANR	5237278	IdentifierDeclStatement	int count ;	98:4:2626:2635	5237275	0	True				
ANR	5237279	IdentifierDecl	count		5237275	0					
ANR	5237280	IdentifierDeclType	int		5237275	0					
ANR	5237281	Identifier	count		5237275	1					
ANR	5237282	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	99:4:2641:2668	5237275	1	True				
ANR	5237283	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		5237275	0					
ANR	5237284	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		5237275	0					
ANR	5237285	Identifier	buf		5237275	1					
ANR	5237286	Identifier	PRINTF_BUF_LENGTH		5237275	2					
ANR	5237287	IdentifierDeclStatement	va_list args ;	100:4:2674:2686	5237275	2	True				
ANR	5237288	IdentifierDecl	args		5237275	0					
ANR	5237289	IdentifierDeclType	va_list		5237275	0					
ANR	5237290	Identifier	args		5237275	1					
ANR	5237291	ExpressionStatement	"va_start ( args , fmt )"	102:4:2693:2712	5237275	3	True				
ANR	5237292	CallExpression	"va_start ( args , fmt )"		5237275	0					
ANR	5237293	Callee	va_start		5237275	0					
ANR	5237294	Identifier	va_start		5237275	0					
ANR	5237295	ArgumentList	args		5237275	1					
ANR	5237296	Argument	args		5237275	0					
ANR	5237297	Identifier	args		5237275	0					
ANR	5237298	Argument	fmt		5237275	1					
ANR	5237299	Identifier	fmt		5237275	0					
ANR	5237300	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	103:4:2718:2764	5237275	4	True				
ANR	5237301	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		5237275	0		=			
ANR	5237302	Identifier	count		5237275	0					
ANR	5237303	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		5237275	1					
ANR	5237304	Callee	vsnprintf		5237275	0					
ANR	5237305	Identifier	vsnprintf		5237275	0					
ANR	5237306	ArgumentList	buf		5237275	1					
ANR	5237307	Argument	buf		5237275	0					
ANR	5237308	Identifier	buf		5237275	0					
ANR	5237309	Argument	sizeof ( buf )		5237275	1					
ANR	5237310	SizeofExpression	sizeof ( buf )		5237275	0					
ANR	5237311	Sizeof	sizeof		5237275	0					
ANR	5237312	SizeofOperand	buf		5237275	1					
ANR	5237313	Argument	fmt		5237275	2					
ANR	5237314	Identifier	fmt		5237275	0					
ANR	5237315	Argument	args		5237275	3					
ANR	5237316	Identifier	args		5237275	0					
ANR	5237317	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		5237275	5					
ANR	5237318	Condition	count >= sizeof ( buf ) || count < 0	104:8:2774:2806	5237275	0	True				
ANR	5237319	OrExpression	count >= sizeof ( buf ) || count < 0		5237275	0		||			
ANR	5237320	RelationalExpression	count >= sizeof ( buf )		5237275	0		>=			
ANR	5237321	Identifier	count		5237275	0					
ANR	5237322	SizeofExpression	sizeof ( buf )		5237275	1					
ANR	5237323	Sizeof	sizeof		5237275	0					
ANR	5237324	SizeofOperand	buf		5237275	1					
ANR	5237325	RelationalExpression	count < 0		5237275	1		<			
ANR	5237326	Identifier	count		5237275	0					
ANR	5237327	PrimaryExpression	0		5237275	1					
ANR	5237328	CompoundStatement		8:44:189:189	5237275	1					
ANR	5237329	ExpressionStatement	"errwrite ( mem , buf , sizeof ( buf ) - 1 )"	105:8:2838:2873	5237275	0	True				
ANR	5237330	CallExpression	"errwrite ( mem , buf , sizeof ( buf ) - 1 )"		5237275	0					
ANR	5237331	Callee	errwrite		5237275	0					
ANR	5237332	Identifier	errwrite		5237275	0					
ANR	5237333	ArgumentList	mem		5237275	1					
ANR	5237334	Argument	mem		5237275	0					
ANR	5237335	Identifier	mem		5237275	0					
ANR	5237336	Argument	buf		5237275	1					
ANR	5237337	Identifier	buf		5237275	0					
ANR	5237338	Argument	sizeof ( buf ) - 1		5237275	2					
ANR	5237339	AdditiveExpression	sizeof ( buf ) - 1		5237275	0		-			
ANR	5237340	SizeofExpression	sizeof ( buf )		5237275	0					
ANR	5237341	Sizeof	sizeof		5237275	0					
ANR	5237342	SizeofOperand	buf		5237275	1					
ANR	5237343	PrimaryExpression	1		5237275	1					
ANR	5237344	ExpressionStatement	"errwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"	106:8:2883:2938	5237275	1	True				
ANR	5237345	CallExpression	"errwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"		5237275	0					
ANR	5237346	Callee	errwrite		5237275	0					
ANR	5237347	Identifier	errwrite		5237275	0					
ANR	5237348	ArgumentList	mem		5237275	1					
ANR	5237349	Argument	mem		5237275	0					
ANR	5237350	Identifier	mem		5237275	0					
ANR	5237351	Argument	msg_truncated		5237275	1					
ANR	5237352	Identifier	msg_truncated		5237275	0					
ANR	5237353	Argument	sizeof ( msg_truncated ) - 1		5237275	2					
ANR	5237354	AdditiveExpression	sizeof ( msg_truncated ) - 1		5237275	0		-			
ANR	5237355	SizeofExpression	sizeof ( msg_truncated )		5237275	0					
ANR	5237356	Sizeof	sizeof		5237275	0					
ANR	5237357	SizeofOperand	msg_truncated		5237275	1					
ANR	5237358	PrimaryExpression	1		5237275	1					
ANR	5237359	ElseStatement	else		5237275	0					
ANR	5237360	CompoundStatement		11:11:330:330	5237275	0					
ANR	5237361	ExpressionStatement	"errwrite ( mem , buf , count )"	108:8:2961:2986	5237275	0	True				
ANR	5237362	CallExpression	"errwrite ( mem , buf , count )"		5237275	0					
ANR	5237363	Callee	errwrite		5237275	0					
ANR	5237364	Identifier	errwrite		5237275	0					
ANR	5237365	ArgumentList	mem		5237275	1					
ANR	5237366	Argument	mem		5237275	0					
ANR	5237367	Identifier	mem		5237275	0					
ANR	5237368	Argument	buf		5237275	1					
ANR	5237369	Identifier	buf		5237275	0					
ANR	5237370	Argument	count		5237275	2					
ANR	5237371	Identifier	count		5237275	0					
ANR	5237372	ExpressionStatement	va_end ( args )	110:4:2998:3010	5237275	6	True				
ANR	5237373	CallExpression	va_end ( args )		5237275	0					
ANR	5237374	Callee	va_end		5237275	0					
ANR	5237375	Identifier	va_end		5237275	0					
ANR	5237376	ArgumentList	args		5237275	1					
ANR	5237377	Argument	args		5237275	0					
ANR	5237378	Identifier	args		5237275	0					
ANR	5237379	ReturnStatement	return count ;	111:4:3016:3028	5237275	7	True				
ANR	5237380	Identifier	count		5237275	0					
ANR	5237381	ReturnType	int		5237275	1					
ANR	5237382	Identifier	errprintf		5237275	2					
ANR	5237383	ParameterList	"const gs_memory_t * mem , const char * fmt"		5237275	3					
ANR	5237384	Parameter	const gs_memory_t * mem	96:14:2574:2595	5237275	0	True				
ANR	5237385	ParameterType	const gs_memory_t *		5237275	0					
ANR	5237386	Identifier	mem		5237275	1					
ANR	5237387	Parameter	const char * fmt	96:38:2598:2612	5237275	1	True				
ANR	5237388	ParameterType	const char *		5237275	0					
ANR	5237389	Identifier	fmt		5237275	1					
ANR	5237390	CFGEntryNode	ENTRY		5237275		True				
ANR	5237391	CFGExitNode	EXIT		5237275		True				
ANR	5237392	Symbol	args		5237275						
ANR	5237393	Symbol	buf		5237275						
ANR	5237394	Symbol	msg_truncated		5237275						
ANR	5237395	Symbol	mem		5237275						
ANR	5237396	Symbol	count		5237275						
ANR	5237397	Symbol	fmt		5237275						
ANR	5237398	Symbol	vsnprintf		5237275						
ANR	5237399	DeclStmt									
ANR	5237400	Decl							char	char [ 128 ]	gs_debug
ANR	5237401	Function	gs_debug_c	125:0:3494:3787							
ANR	5237402	FunctionDef	gs_debug_c (int c)		5237401	0					
ANR	5237403	CompoundStatement		127:0:3517:3787	5237401	0					
ANR	5237404	IdentifierDeclStatement	bool ret = gs_debug [ c ] ;	128:4:3523:3545	5237401	0	True				
ANR	5237405	IdentifierDecl	ret = gs_debug [ c ]		5237401	0					
ANR	5237406	IdentifierDeclType	bool		5237401	0					
ANR	5237407	Identifier	ret		5237401	1					
ANR	5237408	AssignmentExpression	ret = gs_debug [ c ]		5237401	2		=			
ANR	5237409	Identifier	ret		5237401	0					
ANR	5237410	ArrayIndexing	gs_debug [ c ]		5237401	1					
ANR	5237411	Identifier	gs_debug		5237401	0					
ANR	5237412	Identifier	c		5237401	1					
ANR	5237413	ExpressionStatement	c = gs_debug_flag_implied_by [ c ]	131:4:3610:3641	5237401	1	True				
ANR	5237414	AssignmentExpression	c = gs_debug_flag_implied_by [ c ]		5237401	0		=			
ANR	5237415	Identifier	c		5237401	0					
ANR	5237416	ArrayIndexing	gs_debug_flag_implied_by [ c ]		5237401	1					
ANR	5237417	Identifier	gs_debug_flag_implied_by		5237401	0					
ANR	5237418	Identifier	c		5237401	1					
ANR	5237419	IfStatement	if ( c == 0 )		5237401	2					
ANR	5237420	Condition	c == 0	132:8:3651:3656	5237401	0	True				
ANR	5237421	EqualityExpression	c == 0		5237401	0		==			
ANR	5237422	Identifier	c		5237401	0					
ANR	5237423	PrimaryExpression	0		5237401	1					
ANR	5237424	ReturnStatement	return ret ;	133:8:3667:3677	5237401	1	True				
ANR	5237425	Identifier	ret		5237401	0					
ANR	5237426	DoStatement	do		5237401	3					
ANR	5237427	CompoundStatement		9:7:169:169	5237401	0					
ANR	5237428	ExpressionStatement	ret |= gs_debug [ c ]	136:8:3697:3715	5237401	0	True				
ANR	5237429	AssignmentExpression	ret |= gs_debug [ c ]		5237401	0		|=			
ANR	5237430	Identifier	ret		5237401	0					
ANR	5237431	ArrayIndexing	gs_debug [ c ]		5237401	1					
ANR	5237432	Identifier	gs_debug		5237401	0					
ANR	5237433	Identifier	c		5237401	1					
ANR	5237434	Condition	( c = gs_debug_flag_implied_by [ c ] ) != 0	137:13:3730:3767	5237401	1	True				
ANR	5237435	EqualityExpression	( c = gs_debug_flag_implied_by [ c ] ) != 0		5237401	0		!=			
ANR	5237436	AssignmentExpression	c = gs_debug_flag_implied_by [ c ]		5237401	0		=			
ANR	5237437	Identifier	c		5237401	0					
ANR	5237438	ArrayIndexing	gs_debug_flag_implied_by [ c ]		5237401	1					
ANR	5237439	Identifier	gs_debug_flag_implied_by		5237401	0					
ANR	5237440	Identifier	c		5237401	1					
ANR	5237441	PrimaryExpression	0		5237401	1					
ANR	5237442	ReturnStatement	return ret ;	138:4:3775:3785	5237401	4	True				
ANR	5237443	Identifier	ret		5237401	0					
ANR	5237444	ReturnType	bool		5237401	1					
ANR	5237445	Identifier	gs_debug_c		5237401	2					
ANR	5237446	ParameterList	int c		5237401	3					
ANR	5237447	Parameter	int c	126:11:3510:3514	5237401	0	True				
ANR	5237448	ParameterType	int		5237401	0					
ANR	5237449	Identifier	c		5237401	1					
ANR	5237450	CFGEntryNode	ENTRY		5237401		True				
ANR	5237451	CFGExitNode	EXIT		5237401		True				
ANR	5237452	Symbol	ret		5237401						
ANR	5237453	Symbol	gs_debug		5237401						
ANR	5237454	Symbol	c		5237401						
ANR	5237455	Symbol	* gs_debug_flag_implied_by		5237401						
ANR	5237456	Symbol	* gs_debug		5237401						
ANR	5237457	Symbol	gs_debug_flag_implied_by		5237401						
ANR	5237458	Symbol	* c		5237401						
ANR	5237459	Function	dprintf_file_tail	151:0:4250:4506							
ANR	5237460	FunctionDef	dprintf_file_tail (const char * file)		5237459	0					
ANR	5237461	CompoundStatement		153:0:4306:4506	5237459	0					
ANR	5237462	IdentifierDeclStatement	const char * tail = file + strlen ( file ) ;	154:4:4312:4350	5237459	0	True				
ANR	5237463	IdentifierDecl	* tail = file + strlen ( file )		5237459	0					
ANR	5237464	IdentifierDeclType	const char *		5237459	0					
ANR	5237465	Identifier	tail		5237459	1					
ANR	5237466	AssignmentExpression	* tail = file + strlen ( file )		5237459	2		=			
ANR	5237467	Identifier	tail		5237459	0					
ANR	5237468	AdditiveExpression	file + strlen ( file )		5237459	1		+			
ANR	5237469	Identifier	file		5237459	0					
ANR	5237470	CallExpression	strlen ( file )		5237459	1					
ANR	5237471	Callee	strlen		5237459	0					
ANR	5237472	Identifier	strlen		5237459	0					
ANR	5237473	ArgumentList	file		5237459	1					
ANR	5237474	Argument	file		5237459	0					
ANR	5237475	Identifier	file		5237459	0					
ANR	5237476	WhileStatement	while ( tail > file && ( isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_' ) )		5237459	1					
ANR	5237477	Condition	tail > file && ( isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_' )	156:11:4364:4461	5237459	0	True				
ANR	5237478	AndExpression	tail > file && ( isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_' )		5237459	0		&&			
ANR	5237479	RelationalExpression	tail > file		5237459	0		>			
ANR	5237480	Identifier	tail		5237459	0					
ANR	5237481	Identifier	file		5237459	1					
ANR	5237482	OrExpression	isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_'		5237459	1		||			
ANR	5237483	CallExpression	isalnum ( ( unsigned char ) tail [ - 1 ] )		5237459	0					
ANR	5237484	Callee	isalnum		5237459	0					
ANR	5237485	Identifier	isalnum		5237459	0					
ANR	5237486	ArgumentList	( unsigned char ) tail [ - 1 ]		5237459	1					
ANR	5237487	Argument	( unsigned char ) tail [ - 1 ]		5237459	0					
ANR	5237488	CastExpression	( unsigned char ) tail [ - 1 ]		5237459	0					
ANR	5237489	CastTarget	unsigned char		5237459	0					
ANR	5237490	ArrayIndexing	tail [ - 1 ]		5237459	1					
ANR	5237491	Identifier	tail		5237459	0					
ANR	5237492	UnaryOperationExpression	- 1		5237459	1					
ANR	5237493	UnaryOperator	-		5237459	0					
ANR	5237494	PrimaryExpression	1		5237459	1					
ANR	5237495	OrExpression	tail [ - 1 ] == '.' || tail [ - 1 ] == '_'		5237459	1		||			
ANR	5237496	EqualityExpression	tail [ - 1 ] == '.'		5237459	0		==			
ANR	5237497	ArrayIndexing	tail [ - 1 ]		5237459	0					
ANR	5237498	Identifier	tail		5237459	0					
ANR	5237499	UnaryOperationExpression	- 1		5237459	1					
ANR	5237500	UnaryOperator	-		5237459	0					
ANR	5237501	PrimaryExpression	1		5237459	1					
ANR	5237502	PrimaryExpression	'.'		5237459	1					
ANR	5237503	EqualityExpression	tail [ - 1 ] == '_'		5237459	1		==			
ANR	5237504	ArrayIndexing	tail [ - 1 ]		5237459	0					
ANR	5237505	Identifier	tail		5237459	0					
ANR	5237506	UnaryOperationExpression	- 1		5237459	1					
ANR	5237507	UnaryOperator	-		5237459	0					
ANR	5237508	PrimaryExpression	1		5237459	1					
ANR	5237509	PrimaryExpression	'_'		5237459	1					
ANR	5237510	ExpressionStatement	-- tail	159:8:4481:4487	5237459	1	True				
ANR	5237511	UnaryExpression	-- tail		5237459	0					
ANR	5237512	IncDec	--		5237459	0					
ANR	5237513	Identifier	tail		5237459	1					
ANR	5237514	ReturnStatement	return tail ;	160:4:4493:4504	5237459	2	True				
ANR	5237515	Identifier	tail		5237459	0					
ANR	5237516	ReturnType	static const char *		5237459	1					
ANR	5237517	Identifier	dprintf_file_tail		5237459	2					
ANR	5237518	ParameterList	const char * file		5237459	3					
ANR	5237519	Parameter	const char * file	152:18:4288:4303	5237459	0	True				
ANR	5237520	ParameterType	const char *		5237459	0					
ANR	5237521	Identifier	file		5237459	1					
ANR	5237522	CFGEntryNode	ENTRY		5237459		True				
ANR	5237523	CFGExitNode	EXIT		5237459		True				
ANR	5237524	Symbol	strlen		5237459						
ANR	5237525	Symbol	* tail		5237459						
ANR	5237526	Symbol	file		5237459						
ANR	5237527	Symbol	isalnum		5237459						
ANR	5237528	Symbol	tail		5237459						
ANR	5237529	Function	dflush	163:0:4530:4572							
ANR	5237530	FunctionDef	dflush ()		5237529	0					
ANR	5237531	CompoundStatement		165:0:4548:4572	5237529	0					
ANR	5237532	ExpressionStatement	errflush_nomem ( )	166:4:4554:4570	5237529	0	True				
ANR	5237533	CallExpression	errflush_nomem ( )		5237529	0					
ANR	5237534	Callee	errflush_nomem		5237529	0					
ANR	5237535	Identifier	errflush_nomem		5237529	0					
ANR	5237536	ArgumentList			5237529	1					
ANR	5237537	ReturnType	void		5237529	1					
ANR	5237538	Identifier	dflush		5237529	2					
ANR	5237539	ParameterList			5237529	3					
ANR	5237540	CFGEntryNode	ENTRY		5237529		True				
ANR	5237541	CFGExitNode	EXIT		5237529		True				
ANR	5237542	Function	dprintf_file_and_line	169:0:4633:4803							
ANR	5237543	FunctionDef	"dprintf_file_and_line (const char * file , int line)"		5237542	0					
ANR	5237544	CompoundStatement		171:0:4688:4803	5237542	0					
ANR	5237545	IfStatement	if ( gs_debug [ '/' ] )		5237542	0					
ANR	5237546	Condition	gs_debug [ '/' ]	172:8:4698:4710	5237542	0	True				
ANR	5237547	ArrayIndexing	gs_debug [ '/' ]		5237542	0					
ANR	5237548	Identifier	gs_debug		5237542	0					
ANR	5237549	PrimaryExpression	'/'		5237542	1					
ANR	5237550	ExpressionStatement	"dpf ( dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"	173:8:4721:4801	5237542	1	True				
ANR	5237551	CallExpression	"dpf ( dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"		5237542	0					
ANR	5237552	Callee	dpf		5237542	0					
ANR	5237553	Identifier	dpf		5237542	0					
ANR	5237554	ArgumentList	dprintf_file_and_line_format		5237542	1					
ANR	5237555	Argument	dprintf_file_and_line_format		5237542	0					
ANR	5237556	Identifier	dprintf_file_and_line_format		5237542	0					
ANR	5237557	Argument	dprintf_file_tail ( file )		5237542	1					
ANR	5237558	CallExpression	dprintf_file_tail ( file )		5237542	0					
ANR	5237559	Callee	dprintf_file_tail		5237542	0					
ANR	5237560	Identifier	dprintf_file_tail		5237542	0					
ANR	5237561	ArgumentList	file		5237542	1					
ANR	5237562	Argument	file		5237542	0					
ANR	5237563	Identifier	file		5237542	0					
ANR	5237564	Argument	line		5237542	2					
ANR	5237565	Identifier	line		5237542	0					
ANR	5237566	ReturnType	void		5237542	1					
ANR	5237567	Identifier	dprintf_file_and_line		5237542	2					
ANR	5237568	ParameterList	"const char * file , int line"		5237542	3					
ANR	5237569	Parameter	const char * file	170:22:4660:4675	5237542	0	True				
ANR	5237570	ParameterType	const char *		5237542	0					
ANR	5237571	Identifier	file		5237542	1					
ANR	5237572	Parameter	int line	170:40:4678:4685	5237542	1	True				
ANR	5237573	ParameterType	int		5237542	0					
ANR	5237574	Identifier	line		5237542	1					
ANR	5237575	CFGEntryNode	ENTRY		5237542		True				
ANR	5237576	CFGExitNode	EXIT		5237542		True				
ANR	5237577	Symbol	gs_debug		5237542						
ANR	5237578	Symbol	file		5237542						
ANR	5237579	Symbol	line		5237542						
ANR	5237580	Symbol	* gs_debug		5237542						
ANR	5237581	Symbol	dprintf_file_tail		5237542						
ANR	5237582	Symbol	dprintf_file_and_line_format		5237542						
ANR	5237583	Function	lprintf_file_and_line	176:0:4805:4895							
ANR	5237584	FunctionDef	"lprintf_file_and_line (const char * file , int line)"		5237583	0					
ANR	5237585	CompoundStatement		178:0:4860:4895	5237583	0					
ANR	5237586	ExpressionStatement	"epf ( ""%s(%d): "" , file , line )"	179:4:4866:4893	5237583	0	True				
ANR	5237587	CallExpression	"epf ( ""%s(%d): "" , file , line )"		5237583	0					
ANR	5237588	Callee	epf		5237583	0					
ANR	5237589	Identifier	epf		5237583	0					
ANR	5237590	ArgumentList	"""%s(%d): """		5237583	1					
ANR	5237591	Argument	"""%s(%d): """		5237583	0					
ANR	5237592	PrimaryExpression	"""%s(%d): """		5237583	0					
ANR	5237593	Argument	file		5237583	1					
ANR	5237594	Identifier	file		5237583	0					
ANR	5237595	Argument	line		5237583	2					
ANR	5237596	Identifier	line		5237583	0					
ANR	5237597	ReturnType	void		5237583	1					
ANR	5237598	Identifier	lprintf_file_and_line		5237583	2					
ANR	5237599	ParameterList	"const char * file , int line"		5237583	3					
ANR	5237600	Parameter	const char * file	177:22:4832:4847	5237583	0	True				
ANR	5237601	ParameterType	const char *		5237583	0					
ANR	5237602	Identifier	file		5237583	1					
ANR	5237603	Parameter	int line	177:40:4850:4857	5237583	1	True				
ANR	5237604	ParameterType	int		5237583	0					
ANR	5237605	Identifier	line		5237583	1					
ANR	5237606	CFGEntryNode	ENTRY		5237583		True				
ANR	5237607	CFGExitNode	EXIT		5237583		True				
ANR	5237608	Symbol	file		5237583						
ANR	5237609	Symbol	line		5237583						
ANR	5237610	Function	dprintf_file_only	182:0:4903:5033							
ANR	5237611	FunctionDef	dprintf_file_only (const char * file)		5237610	0					
ANR	5237612	CompoundStatement		184:0:4944:5033	5237610	0					
ANR	5237613	IfStatement	if ( gs_debug [ '/' ] )		5237610	0					
ANR	5237614	Condition	gs_debug [ '/' ]	185:8:4954:4966	5237610	0	True				
ANR	5237615	ArrayIndexing	gs_debug [ '/' ]		5237610	0					
ANR	5237616	Identifier	gs_debug		5237610	0					
ANR	5237617	PrimaryExpression	'/'		5237610	1					
ANR	5237618	ExpressionStatement	"dpf ( dprintf_file_only_format , dprintf_file_tail ( file ) )"	186:8:4977:5031	5237610	1	True				
ANR	5237619	CallExpression	"dpf ( dprintf_file_only_format , dprintf_file_tail ( file ) )"		5237610	0					
ANR	5237620	Callee	dpf		5237610	0					
ANR	5237621	Identifier	dpf		5237610	0					
ANR	5237622	ArgumentList	dprintf_file_only_format		5237610	1					
ANR	5237623	Argument	dprintf_file_only_format		5237610	0					
ANR	5237624	Identifier	dprintf_file_only_format		5237610	0					
ANR	5237625	Argument	dprintf_file_tail ( file )		5237610	1					
ANR	5237626	CallExpression	dprintf_file_tail ( file )		5237610	0					
ANR	5237627	Callee	dprintf_file_tail		5237610	0					
ANR	5237628	Identifier	dprintf_file_tail		5237610	0					
ANR	5237629	ArgumentList	file		5237610	1					
ANR	5237630	Argument	file		5237610	0					
ANR	5237631	Identifier	file		5237610	0					
ANR	5237632	ReturnType	void		5237610	1					
ANR	5237633	Identifier	dprintf_file_only		5237610	2					
ANR	5237634	ParameterList	const char * file		5237610	3					
ANR	5237635	Parameter	const char * file	183:18:4926:4941	5237610	0	True				
ANR	5237636	ParameterType	const char *		5237610	0					
ANR	5237637	Identifier	file		5237610	1					
ANR	5237638	CFGEntryNode	ENTRY		5237610		True				
ANR	5237639	CFGExitNode	EXIT		5237610		True				
ANR	5237640	Symbol	gs_debug		5237610						
ANR	5237641	Symbol	file		5237610						
ANR	5237642	Symbol	dprintf_file_only_format		5237610						
ANR	5237643	Symbol	* gs_debug		5237610						
ANR	5237644	Symbol	dprintf_file_tail		5237610						
ANR	5237645	Function	lprintf_file_only	188:0:5035:5114							
ANR	5237646	FunctionDef	"lprintf_file_only (FILE * f , const char * file)"		5237645	0					
ANR	5237647	CompoundStatement		190:0:5086:5114	5237645	0					
ANR	5237648	ExpressionStatement	"epf ( ""%s(?): "" , file )"	191:4:5092:5112	5237645	0	True				
ANR	5237649	CallExpression	"epf ( ""%s(?): "" , file )"		5237645	0					
ANR	5237650	Callee	epf		5237645	0					
ANR	5237651	Identifier	epf		5237645	0					
ANR	5237652	ArgumentList	"""%s(?): """		5237645	1					
ANR	5237653	Argument	"""%s(?): """		5237645	0					
ANR	5237654	PrimaryExpression	"""%s(?): """		5237645	0					
ANR	5237655	Argument	file		5237645	1					
ANR	5237656	Identifier	file		5237645	0					
ANR	5237657	ReturnType	void		5237645	1					
ANR	5237658	Identifier	lprintf_file_only		5237645	2					
ANR	5237659	ParameterList	"FILE * f , const char * file"		5237645	3					
ANR	5237660	Parameter	FILE * f	189:18:5058:5065	5237645	0	True				
ANR	5237661	ParameterType	FILE *		5237645	0					
ANR	5237662	Identifier	f		5237645	1					
ANR	5237663	Parameter	const char * file	189:28:5068:5083	5237645	1	True				
ANR	5237664	ParameterType	const char *		5237645	0					
ANR	5237665	Identifier	file		5237645	1					
ANR	5237666	CFGEntryNode	ENTRY		5237645		True				
ANR	5237667	CFGExitNode	EXIT		5237645		True				
ANR	5237668	Symbol	file		5237645						
ANR	5237669	Symbol	f		5237645						
ANR	5237670	Function	eprintf_program_ident	194:0:5123:5486							
ANR	5237671	FunctionDef	"eprintf_program_ident (const char * program_name , long revision_number)"		5237670	0					
ANR	5237672	CompoundStatement		197:0:5220:5486	5237670	0					
ANR	5237673	IfStatement	if ( program_name )		5237670	0					
ANR	5237674	Condition	program_name	198:8:5230:5241	5237670	0	True				
ANR	5237675	Identifier	program_name		5237670	0					
ANR	5237676	CompoundStatement		2:22:23:23	5237670	1					
ANR	5237677	ExpressionStatement	"epf ( ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	199:8:5254:5305	5237670	0	True				
ANR	5237678	CallExpression	"epf ( ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		5237670	0					
ANR	5237679	Callee	epf		5237670	0					
ANR	5237680	Identifier	epf		5237670	0					
ANR	5237681	ArgumentList	"revision_number ? ""%s "" : ""%s"""		5237670	1					
ANR	5237682	Argument	"revision_number ? ""%s "" : ""%s"""		5237670	0					
ANR	5237683	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		5237670	0					
ANR	5237684	Condition	revision_number		5237670	0					
ANR	5237685	Identifier	revision_number		5237670	0					
ANR	5237686	PrimaryExpression	"""%s """		5237670	1					
ANR	5237687	PrimaryExpression	"""%s"""		5237670	2					
ANR	5237688	Argument	program_name		5237670	1					
ANR	5237689	Identifier	program_name		5237670	0					
ANR	5237690	IfStatement	if ( revision_number )		5237670	1					
ANR	5237691	Condition	revision_number	200:12:5319:5333	5237670	0	True				
ANR	5237692	Identifier	revision_number		5237670	0					
ANR	5237693	CompoundStatement		5:12:129:162	5237670	1					
ANR	5237694	IdentifierDeclStatement	int fpart = revision_number % 100 ;	201:12:5350:5383	5237670	0	True				
ANR	5237695	IdentifierDecl	fpart = revision_number % 100		5237670	0					
ANR	5237696	IdentifierDeclType	int		5237670	0					
ANR	5237697	Identifier	fpart		5237670	1					
ANR	5237698	AssignmentExpression	fpart = revision_number % 100		5237670	2		=			
ANR	5237699	Identifier	fpart		5237670	0					
ANR	5237700	MultiplicativeExpression	revision_number % 100		5237670	1		%			
ANR	5237701	Identifier	revision_number		5237670	0					
ANR	5237702	PrimaryExpression	100		5237670	1					
ANR	5237703	ExpressionStatement	"epf ( ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	203:12:5398:5449	5237670	1	True				
ANR	5237704	CallExpression	"epf ( ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		5237670	0					
ANR	5237705	Callee	epf		5237670	0					
ANR	5237706	Identifier	epf		5237670	0					
ANR	5237707	ArgumentList	"""%d.%02d"""		5237670	1					
ANR	5237708	Argument	"""%d.%02d"""		5237670	0					
ANR	5237709	PrimaryExpression	"""%d.%02d"""		5237670	0					
ANR	5237710	Argument	( int ) ( revision_number / 100 )		5237670	1					
ANR	5237711	CastExpression	( int ) ( revision_number / 100 )		5237670	0					
ANR	5237712	CastTarget	int		5237670	0					
ANR	5237713	MultiplicativeExpression	revision_number / 100		5237670	1		/			
ANR	5237714	Identifier	revision_number		5237670	0					
ANR	5237715	PrimaryExpression	100		5237670	1					
ANR	5237716	Argument	fpart		5237670	2					
ANR	5237717	Identifier	fpart		5237670	0					
ANR	5237718	ExpressionStatement	"epf ( "": "" )"	205:8:5469:5478	5237670	2	True				
ANR	5237719	CallExpression	"epf ( "": "" )"		5237670	0					
ANR	5237720	Callee	epf		5237670	0					
ANR	5237721	Identifier	epf		5237670	0					
ANR	5237722	ArgumentList	""": """		5237670	1					
ANR	5237723	Argument	""": """		5237670	0					
ANR	5237724	PrimaryExpression	""": """		5237670	0					
ANR	5237725	ReturnType	void		5237670	1					
ANR	5237726	Identifier	eprintf_program_ident		5237670	2					
ANR	5237727	ParameterList	"const char * program_name , long revision_number"		5237670	3					
ANR	5237728	Parameter	const char * program_name	195:22:5150:5173	5237670	0	True				
ANR	5237729	ParameterType	const char *		5237670	0					
ANR	5237730	Identifier	program_name		5237670	1					
ANR	5237731	Parameter	long revision_number	196:22:5198:5217	5237670	1	True				
ANR	5237732	ParameterType	long		5237670	0					
ANR	5237733	Identifier	revision_number		5237670	1					
ANR	5237734	CFGEntryNode	ENTRY		5237670		True				
ANR	5237735	CFGExitNode	EXIT		5237670		True				
ANR	5237736	Symbol	revision_number		5237670						
ANR	5237737	Symbol	program_name		5237670						
ANR	5237738	Symbol	fpart		5237670						
ANR	5237739	Function	dmprintf_file_and_line	210:0:5554:5754							
ANR	5237740	FunctionDef	"dmprintf_file_and_line (const gs_memory_t * mem , const char * file , int line)"		5237739	0					
ANR	5237741	CompoundStatement		212:0:5633:5754	5237739	0					
ANR	5237742	IfStatement	if ( gs_debug [ '/' ] )		5237739	0					
ANR	5237743	Condition	gs_debug [ '/' ]	213:8:5643:5655	5237739	0	True				
ANR	5237744	ArrayIndexing	gs_debug [ '/' ]		5237739	0					
ANR	5237745	Identifier	gs_debug		5237739	0					
ANR	5237746	PrimaryExpression	'/'		5237739	1					
ANR	5237747	ExpressionStatement	"dpfm ( mem , dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"	214:8:5666:5752	5237739	1	True				
ANR	5237748	CallExpression	"dpfm ( mem , dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"		5237739	0					
ANR	5237749	Callee	dpfm		5237739	0					
ANR	5237750	Identifier	dpfm		5237739	0					
ANR	5237751	ArgumentList	mem		5237739	1					
ANR	5237752	Argument	mem		5237739	0					
ANR	5237753	Identifier	mem		5237739	0					
ANR	5237754	Argument	dprintf_file_and_line_format		5237739	1					
ANR	5237755	Identifier	dprintf_file_and_line_format		5237739	0					
ANR	5237756	Argument	dprintf_file_tail ( file )		5237739	2					
ANR	5237757	CallExpression	dprintf_file_tail ( file )		5237739	0					
ANR	5237758	Callee	dprintf_file_tail		5237739	0					
ANR	5237759	Identifier	dprintf_file_tail		5237739	0					
ANR	5237760	ArgumentList	file		5237739	1					
ANR	5237761	Argument	file		5237739	0					
ANR	5237762	Identifier	file		5237739	0					
ANR	5237763	Argument	line		5237739	3					
ANR	5237764	Identifier	line		5237739	0					
ANR	5237765	ReturnType	void		5237739	1					
ANR	5237766	Identifier	dmprintf_file_and_line		5237739	2					
ANR	5237767	ParameterList	"const gs_memory_t * mem , const char * file , int line"		5237739	3					
ANR	5237768	Parameter	const gs_memory_t * mem	211:23:5582:5603	5237739	0	True				
ANR	5237769	ParameterType	const gs_memory_t *		5237739	0					
ANR	5237770	Identifier	mem		5237739	1					
ANR	5237771	Parameter	const char * file	211:46:5605:5620	5237739	1	True				
ANR	5237772	ParameterType	const char *		5237739	0					
ANR	5237773	Identifier	file		5237739	1					
ANR	5237774	Parameter	int line	211:64:5623:5630	5237739	2	True				
ANR	5237775	ParameterType	int		5237739	0					
ANR	5237776	Identifier	line		5237739	1					
ANR	5237777	CFGEntryNode	ENTRY		5237739		True				
ANR	5237778	CFGExitNode	EXIT		5237739		True				
ANR	5237779	Symbol	gs_debug		5237739						
ANR	5237780	Symbol	file		5237739						
ANR	5237781	Symbol	mem		5237739						
ANR	5237782	Symbol	line		5237739						
ANR	5237783	Symbol	* gs_debug		5237739						
ANR	5237784	Symbol	dprintf_file_tail		5237739						
ANR	5237785	Symbol	dprintf_file_and_line_format		5237739						
ANR	5237786	Function	dmprintf_file_only	218:0:5762:5922							
ANR	5237787	FunctionDef	"dmprintf_file_only (const gs_memory_t * mem , const char * file)"		5237786	0					
ANR	5237788	CompoundStatement		220:0:5827:5922	5237786	0					
ANR	5237789	IfStatement	if ( gs_debug [ '/' ] )		5237786	0					
ANR	5237790	Condition	gs_debug [ '/' ]	221:8:5837:5849	5237786	0	True				
ANR	5237791	ArrayIndexing	gs_debug [ '/' ]		5237786	0					
ANR	5237792	Identifier	gs_debug		5237786	0					
ANR	5237793	PrimaryExpression	'/'		5237786	1					
ANR	5237794	ExpressionStatement	"dpfm ( mem , dprintf_file_only_format , dprintf_file_tail ( file ) )"	222:8:5860:5920	5237786	1	True				
ANR	5237795	CallExpression	"dpfm ( mem , dprintf_file_only_format , dprintf_file_tail ( file ) )"		5237786	0					
ANR	5237796	Callee	dpfm		5237786	0					
ANR	5237797	Identifier	dpfm		5237786	0					
ANR	5237798	ArgumentList	mem		5237786	1					
ANR	5237799	Argument	mem		5237786	0					
ANR	5237800	Identifier	mem		5237786	0					
ANR	5237801	Argument	dprintf_file_only_format		5237786	1					
ANR	5237802	Identifier	dprintf_file_only_format		5237786	0					
ANR	5237803	Argument	dprintf_file_tail ( file )		5237786	2					
ANR	5237804	CallExpression	dprintf_file_tail ( file )		5237786	0					
ANR	5237805	Callee	dprintf_file_tail		5237786	0					
ANR	5237806	Identifier	dprintf_file_tail		5237786	0					
ANR	5237807	ArgumentList	file		5237786	1					
ANR	5237808	Argument	file		5237786	0					
ANR	5237809	Identifier	file		5237786	0					
ANR	5237810	ReturnType	void		5237786	1					
ANR	5237811	Identifier	dmprintf_file_only		5237786	2					
ANR	5237812	ParameterList	"const gs_memory_t * mem , const char * file"		5237786	3					
ANR	5237813	Parameter	const gs_memory_t * mem	219:19:5786:5807	5237786	0	True				
ANR	5237814	ParameterType	const gs_memory_t *		5237786	0					
ANR	5237815	Identifier	mem		5237786	1					
ANR	5237816	Parameter	const char * file	219:42:5809:5824	5237786	1	True				
ANR	5237817	ParameterType	const char *		5237786	0					
ANR	5237818	Identifier	file		5237786	1					
ANR	5237819	CFGEntryNode	ENTRY		5237786		True				
ANR	5237820	CFGExitNode	EXIT		5237786		True				
ANR	5237821	Symbol	gs_debug		5237786						
ANR	5237822	Symbol	file		5237786						
ANR	5237823	Symbol	mem		5237786						
ANR	5237824	Symbol	dprintf_file_only_format		5237786						
ANR	5237825	Symbol	* gs_debug		5237786						
ANR	5237826	Symbol	dprintf_file_tail		5237786						
ANR	5237827	Function	printf_program_ident	225:0:5931:6274							
ANR	5237828	FunctionDef	"printf_program_ident (const gs_memory_t * mem , const char * program_name , long revision_number)"		5237827	0					
ANR	5237829	CompoundStatement		227:0:6029:6274	5237827	0					
ANR	5237830	IfStatement	if ( program_name )		5237827	0					
ANR	5237831	Condition	program_name	228:8:6039:6050	5237827	0	True				
ANR	5237832	Identifier	program_name		5237827	0					
ANR	5237833	ExpressionStatement	"outprintf ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	229:8:6061:6123	5237827	1	True				
ANR	5237834	CallExpression	"outprintf ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		5237827	0					
ANR	5237835	Callee	outprintf		5237827	0					
ANR	5237836	Identifier	outprintf		5237827	0					
ANR	5237837	ArgumentList	mem		5237827	1					
ANR	5237838	Argument	mem		5237827	0					
ANR	5237839	Identifier	mem		5237827	0					
ANR	5237840	Argument	"revision_number ? ""%s "" : ""%s"""		5237827	1					
ANR	5237841	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		5237827	0					
ANR	5237842	Condition	revision_number		5237827	0					
ANR	5237843	Identifier	revision_number		5237827	0					
ANR	5237844	PrimaryExpression	"""%s """		5237827	1					
ANR	5237845	PrimaryExpression	"""%s"""		5237827	2					
ANR	5237846	Argument	program_name		5237827	2					
ANR	5237847	Identifier	program_name		5237827	0					
ANR	5237848	IfStatement	if ( revision_number )		5237827	1					
ANR	5237849	Condition	revision_number	230:8:6133:6147	5237827	0	True				
ANR	5237850	Identifier	revision_number		5237827	0					
ANR	5237851	CompoundStatement		5:8:130:163	5237827	1					
ANR	5237852	IdentifierDeclStatement	int fpart = revision_number % 100 ;	231:8:6160:6193	5237827	0	True				
ANR	5237853	IdentifierDecl	fpart = revision_number % 100		5237827	0					
ANR	5237854	IdentifierDeclType	int		5237827	0					
ANR	5237855	Identifier	fpart		5237827	1					
ANR	5237856	AssignmentExpression	fpart = revision_number % 100		5237827	2		=			
ANR	5237857	Identifier	fpart		5237827	0					
ANR	5237858	MultiplicativeExpression	revision_number % 100		5237827	1		%			
ANR	5237859	Identifier	revision_number		5237827	0					
ANR	5237860	PrimaryExpression	100		5237827	1					
ANR	5237861	ExpressionStatement	"outprintf ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	233:8:6204:6266	5237827	1	True				
ANR	5237862	CallExpression	"outprintf ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		5237827	0					
ANR	5237863	Callee	outprintf		5237827	0					
ANR	5237864	Identifier	outprintf		5237827	0					
ANR	5237865	ArgumentList	mem		5237827	1					
ANR	5237866	Argument	mem		5237827	0					
ANR	5237867	Identifier	mem		5237827	0					
ANR	5237868	Argument	"""%d.%02d"""		5237827	1					
ANR	5237869	PrimaryExpression	"""%d.%02d"""		5237827	0					
ANR	5237870	Argument	( int ) ( revision_number / 100 )		5237827	2					
ANR	5237871	CastExpression	( int ) ( revision_number / 100 )		5237827	0					
ANR	5237872	CastTarget	int		5237827	0					
ANR	5237873	MultiplicativeExpression	revision_number / 100		5237827	1		/			
ANR	5237874	Identifier	revision_number		5237827	0					
ANR	5237875	PrimaryExpression	100		5237827	1					
ANR	5237876	Argument	fpart		5237827	3					
ANR	5237877	Identifier	fpart		5237827	0					
ANR	5237878	ReturnType	void		5237827	1					
ANR	5237879	Identifier	printf_program_ident		5237827	2					
ANR	5237880	ParameterList	"const gs_memory_t * mem , const char * program_name , long revision_number"		5237827	3					
ANR	5237881	Parameter	const gs_memory_t * mem	226:21:5957:5978	5237827	0	True				
ANR	5237882	ParameterType	const gs_memory_t *		5237827	0					
ANR	5237883	Identifier	mem		5237827	1					
ANR	5237884	Parameter	const char * program_name	226:45:5981:6004	5237827	1	True				
ANR	5237885	ParameterType	const char *		5237827	0					
ANR	5237886	Identifier	program_name		5237827	1					
ANR	5237887	Parameter	long revision_number	226:71:6007:6026	5237827	2	True				
ANR	5237888	ParameterType	long		5237827	0					
ANR	5237889	Identifier	revision_number		5237827	1					
ANR	5237890	CFGEntryNode	ENTRY		5237827		True				
ANR	5237891	CFGExitNode	EXIT		5237827		True				
ANR	5237892	Symbol	mem		5237827						
ANR	5237893	Symbol	revision_number		5237827						
ANR	5237894	Symbol	program_name		5237827						
ANR	5237895	Symbol	fpart		5237827						
ANR	5237896	Function	emprintf_program_ident	236:0:6276:6706							
ANR	5237897	FunctionDef	"emprintf_program_ident (const gs_memory_t * mem , const char * program_name , long revision_number)"		5237896	0					
ANR	5237898	CompoundStatement		240:0:6422:6706	5237896	0					
ANR	5237899	IfStatement	if ( program_name )		5237896	0					
ANR	5237900	Condition	program_name	241:8:6432:6443	5237896	0	True				
ANR	5237901	Identifier	program_name		5237896	0					
ANR	5237902	CompoundStatement		2:22:23:23	5237896	1					
ANR	5237903	ExpressionStatement	"epfm ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	242:8:6456:6513	5237896	0	True				
ANR	5237904	CallExpression	"epfm ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		5237896	0					
ANR	5237905	Callee	epfm		5237896	0					
ANR	5237906	Identifier	epfm		5237896	0					
ANR	5237907	ArgumentList	mem		5237896	1					
ANR	5237908	Argument	mem		5237896	0					
ANR	5237909	Identifier	mem		5237896	0					
ANR	5237910	Argument	"revision_number ? ""%s "" : ""%s"""		5237896	1					
ANR	5237911	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		5237896	0					
ANR	5237912	Condition	revision_number		5237896	0					
ANR	5237913	Identifier	revision_number		5237896	0					
ANR	5237914	PrimaryExpression	"""%s """		5237896	1					
ANR	5237915	PrimaryExpression	"""%s"""		5237896	2					
ANR	5237916	Argument	program_name		5237896	2					
ANR	5237917	Identifier	program_name		5237896	0					
ANR	5237918	IfStatement	if ( revision_number )		5237896	1					
ANR	5237919	Condition	revision_number	243:12:6527:6541	5237896	0	True				
ANR	5237920	Identifier	revision_number		5237896	0					
ANR	5237921	CompoundStatement		5:12:135:168	5237896	1					
ANR	5237922	IdentifierDeclStatement	int fpart = revision_number % 100 ;	244:12:6558:6591	5237896	0	True				
ANR	5237923	IdentifierDecl	fpart = revision_number % 100		5237896	0					
ANR	5237924	IdentifierDeclType	int		5237896	0					
ANR	5237925	Identifier	fpart		5237896	1					
ANR	5237926	AssignmentExpression	fpart = revision_number % 100		5237896	2		=			
ANR	5237927	Identifier	fpart		5237896	0					
ANR	5237928	MultiplicativeExpression	revision_number % 100		5237896	1		%			
ANR	5237929	Identifier	revision_number		5237896	0					
ANR	5237930	PrimaryExpression	100		5237896	1					
ANR	5237931	ExpressionStatement	"epfm ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	246:12:6606:6663	5237896	1	True				
ANR	5237932	CallExpression	"epfm ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		5237896	0					
ANR	5237933	Callee	epfm		5237896	0					
ANR	5237934	Identifier	epfm		5237896	0					
ANR	5237935	ArgumentList	mem		5237896	1					
ANR	5237936	Argument	mem		5237896	0					
ANR	5237937	Identifier	mem		5237896	0					
ANR	5237938	Argument	"""%d.%02d"""		5237896	1					
ANR	5237939	PrimaryExpression	"""%d.%02d"""		5237896	0					
ANR	5237940	Argument	( int ) ( revision_number / 100 )		5237896	2					
ANR	5237941	CastExpression	( int ) ( revision_number / 100 )		5237896	0					
ANR	5237942	CastTarget	int		5237896	0					
ANR	5237943	MultiplicativeExpression	revision_number / 100		5237896	1		/			
ANR	5237944	Identifier	revision_number		5237896	0					
ANR	5237945	PrimaryExpression	100		5237896	1					
ANR	5237946	Argument	fpart		5237896	3					
ANR	5237947	Identifier	fpart		5237896	0					
ANR	5237948	ExpressionStatement	"epfm ( mem , "": "" )"	248:8:6683:6698	5237896	2	True				
ANR	5237949	CallExpression	"epfm ( mem , "": "" )"		5237896	0					
ANR	5237950	Callee	epfm		5237896	0					
ANR	5237951	Identifier	epfm		5237896	0					
ANR	5237952	ArgumentList	mem		5237896	1					
ANR	5237953	Argument	mem		5237896	0					
ANR	5237954	Identifier	mem		5237896	0					
ANR	5237955	Argument	""": """		5237896	1					
ANR	5237956	PrimaryExpression	""": """		5237896	0					
ANR	5237957	ReturnType	void		5237896	1					
ANR	5237958	Identifier	emprintf_program_ident		5237896	2					
ANR	5237959	ParameterList	"const gs_memory_t * mem , const char * program_name , long revision_number"		5237896	3					
ANR	5237960	Parameter	const gs_memory_t * mem	237:23:6304:6325	5237896	0	True				
ANR	5237961	ParameterType	const gs_memory_t *		5237896	0					
ANR	5237962	Identifier	mem		5237896	1					
ANR	5237963	Parameter	const char * program_name	238:23:6351:6374	5237896	1	True				
ANR	5237964	ParameterType	const char *		5237896	0					
ANR	5237965	Identifier	program_name		5237896	1					
ANR	5237966	Parameter	long revision_number	239:23:6400:6419	5237896	2	True				
ANR	5237967	ParameterType	long		5237896	0					
ANR	5237968	Identifier	revision_number		5237896	1					
ANR	5237969	CFGEntryNode	ENTRY		5237896		True				
ANR	5237970	CFGExitNode	EXIT		5237896		True				
ANR	5237971	Symbol	mem		5237896						
ANR	5237972	Symbol	revision_number		5237896						
ANR	5237973	Symbol	program_name		5237896						
ANR	5237974	Symbol	fpart		5237896						
ANR	5237975	Function	mlprintf_file_and_line	252:0:6767:6888							
ANR	5237976	FunctionDef	"mlprintf_file_and_line (const gs_memory_t * mem , const char * file , int line)"		5237975	0					
ANR	5237977	CompoundStatement		254:0:6847:6888	5237975	0					
ANR	5237978	ExpressionStatement	"epfm ( mem , ""%s(%d): "" , file , line )"	255:4:6853:6886	5237975	0	True				
ANR	5237979	CallExpression	"epfm ( mem , ""%s(%d): "" , file , line )"		5237975	0					
ANR	5237980	Callee	epfm		5237975	0					
ANR	5237981	Identifier	epfm		5237975	0					
ANR	5237982	ArgumentList	mem		5237975	1					
ANR	5237983	Argument	mem		5237975	0					
ANR	5237984	Identifier	mem		5237975	0					
ANR	5237985	Argument	"""%s(%d): """		5237975	1					
ANR	5237986	PrimaryExpression	"""%s(%d): """		5237975	0					
ANR	5237987	Argument	file		5237975	2					
ANR	5237988	Identifier	file		5237975	0					
ANR	5237989	Argument	line		5237975	3					
ANR	5237990	Identifier	line		5237975	0					
ANR	5237991	ReturnType	void		5237975	1					
ANR	5237992	Identifier	mlprintf_file_and_line		5237975	2					
ANR	5237993	ParameterList	"const gs_memory_t * mem , const char * file , int line"		5237975	3					
ANR	5237994	Parameter	const gs_memory_t * mem	253:23:6795:6816	5237975	0	True				
ANR	5237995	ParameterType	const gs_memory_t *		5237975	0					
ANR	5237996	Identifier	mem		5237975	1					
ANR	5237997	Parameter	const char * file	253:47:6819:6834	5237975	1	True				
ANR	5237998	ParameterType	const char *		5237975	0					
ANR	5237999	Identifier	file		5237975	1					
ANR	5238000	Parameter	int line	253:65:6837:6844	5237975	2	True				
ANR	5238001	ParameterType	int		5237975	0					
ANR	5238002	Identifier	line		5237975	1					
ANR	5238003	CFGEntryNode	ENTRY		5237975		True				
ANR	5238004	CFGExitNode	EXIT		5237975		True				
ANR	5238005	Symbol	file		5237975						
ANR	5238006	Symbol	mem		5237975						
ANR	5238007	Symbol	line		5237975						
ANR	5238008	Function	mlprintf_file_only	258:0:6896:7006							
ANR	5238009	FunctionDef	"mlprintf_file_only (const gs_memory_t * mem , FILE * f , const char * file)"		5238008	0					
ANR	5238010	CompoundStatement		260:0:6972:7006	5238008	0					
ANR	5238011	ExpressionStatement	"epfm ( mem , ""%s(?): "" , file )"	261:4:6978:7004	5238008	0	True				
ANR	5238012	CallExpression	"epfm ( mem , ""%s(?): "" , file )"		5238008	0					
ANR	5238013	Callee	epfm		5238008	0					
ANR	5238014	Identifier	epfm		5238008	0					
ANR	5238015	ArgumentList	mem		5238008	1					
ANR	5238016	Argument	mem		5238008	0					
ANR	5238017	Identifier	mem		5238008	0					
ANR	5238018	Argument	"""%s(?): """		5238008	1					
ANR	5238019	PrimaryExpression	"""%s(?): """		5238008	0					
ANR	5238020	Argument	file		5238008	2					
ANR	5238021	Identifier	file		5238008	0					
ANR	5238022	ReturnType	void		5238008	1					
ANR	5238023	Identifier	mlprintf_file_only		5238008	2					
ANR	5238024	ParameterList	"const gs_memory_t * mem , FILE * f , const char * file"		5238008	3					
ANR	5238025	Parameter	const gs_memory_t * mem	259:19:6920:6941	5238008	0	True				
ANR	5238026	ParameterType	const gs_memory_t *		5238008	0					
ANR	5238027	Identifier	mem		5238008	1					
ANR	5238028	Parameter	FILE * f	259:43:6944:6951	5238008	1	True				
ANR	5238029	ParameterType	FILE *		5238008	0					
ANR	5238030	Identifier	f		5238008	1					
ANR	5238031	Parameter	const char * file	259:53:6954:6969	5238008	2	True				
ANR	5238032	ParameterType	const char *		5238008	0					
ANR	5238033	Identifier	file		5238008	1					
ANR	5238034	CFGEntryNode	ENTRY		5238008		True				
ANR	5238035	CFGExitNode	EXIT		5238008		True				
ANR	5238036	Symbol	file		5238008						
ANR	5238037	Symbol	mem		5238008						
ANR	5238038	Symbol	f		5238008						
ANR	5238039	Function	gs_log_error	267:1:7127:7489							
ANR	5238040	FunctionDef	"gs_log_error (int err , const char * file , int line)"		5238039	0					
ANR	5238041	CompoundStatement		270:0:7242:7489	5238039	0					
ANR	5238042	IfStatement	if ( gs_log_errors )		5238039	0					
ANR	5238043	Condition	gs_log_errors	271:8:7252:7264	5238039	0	True				
ANR	5238044	Identifier	gs_log_errors		5238039	0					
ANR	5238045	CompoundStatement		2:23:24:24	5238039	1					
ANR	5238046	IfStatement	if ( file == NULL )		5238039	0					
ANR	5238047	Condition	file == NULL	272:12:7281:7292	5238039	0	True				
ANR	5238048	EqualityExpression	file == NULL		5238039	0		==			
ANR	5238049	Identifier	file		5238039	0					
ANR	5238050	Identifier	NULL		5238039	1					
ANR	5238051	ExpressionStatement	"dprintf1 ( ""Returning error %d.\\n"" , err )"	273:12:7307:7345	5238039	1	True				
ANR	5238052	CallExpression	"dprintf1 ( ""Returning error %d.\\n"" , err )"		5238039	0					
ANR	5238053	Callee	dprintf1		5238039	0					
ANR	5238054	Identifier	dprintf1		5238039	0					
ANR	5238055	ArgumentList	"""Returning error %d.\\n"""		5238039	1					
ANR	5238056	Argument	"""Returning error %d.\\n"""		5238039	0					
ANR	5238057	PrimaryExpression	"""Returning error %d.\\n"""		5238039	0					
ANR	5238058	Argument	err		5238039	1					
ANR	5238059	Identifier	err		5238039	0					
ANR	5238060	ElseStatement	else		5238039	0					
ANR	5238061	ExpressionStatement	"dprintf3 ( ""%s(%d): Returning error %d.\\n"" , ( const char * ) file , line , err )"	275:12:7372:7465	5238039	0	True				
ANR	5238062	CallExpression	"dprintf3 ( ""%s(%d): Returning error %d.\\n"" , ( const char * ) file , line , err )"		5238039	0					
ANR	5238063	Callee	dprintf3		5238039	0					
ANR	5238064	Identifier	dprintf3		5238039	0					
ANR	5238065	ArgumentList	"""%s(%d): Returning error %d.\\n"""		5238039	1					
ANR	5238066	Argument	"""%s(%d): Returning error %d.\\n"""		5238039	0					
ANR	5238067	PrimaryExpression	"""%s(%d): Returning error %d.\\n"""		5238039	0					
ANR	5238068	Argument	( const char * ) file		5238039	1					
ANR	5238069	CastExpression	( const char * ) file		5238039	0					
ANR	5238070	CastTarget	const char *		5238039	0					
ANR	5238071	Identifier	file		5238039	1					
ANR	5238072	Argument	line		5238039	2					
ANR	5238073	Identifier	line		5238039	0					
ANR	5238074	Argument	err		5238039	3					
ANR	5238075	Identifier	err		5238039	0					
ANR	5238076	ReturnStatement	return err ;	278:4:7477:7487	5238039	1	True				
ANR	5238077	Identifier	err		5238039	0					
ANR	5238078	ReturnType	undef gs_log_error int		5238039	1					
ANR	5238079	Identifier	gs_log_error		5238039	2					
ANR	5238080	ParameterList	"int err , const char * file , int line"		5238039	3					
ANR	5238081	Parameter	int err	269:13:7205:7211	5238039	0	True				
ANR	5238082	ParameterType	int		5238039	0					
ANR	5238083	Identifier	err		5238039	1					
ANR	5238084	Parameter	const char * file	269:22:7214:7229	5238039	1	True				
ANR	5238085	ParameterType	const char *		5238039	0					
ANR	5238086	Identifier	file		5238039	1					
ANR	5238087	Parameter	int line	269:40:7232:7239	5238039	2	True				
ANR	5238088	ParameterType	int		5238039	0					
ANR	5238089	Identifier	line		5238039	1					
ANR	5238090	CFGEntryNode	ENTRY		5238039		True				
ANR	5238091	CFGExitNode	EXIT		5238039		True				
ANR	5238092	Symbol	gs_log_errors		5238039						
ANR	5238093	Symbol	file		5238039						
ANR	5238094	Symbol	NULL		5238039						
ANR	5238095	Symbol	err		5238039						
ANR	5238096	Symbol	line		5238039						
ANR	5238097	Function	gs_return_check_interrupt	282:0:7536:7810							
ANR	5238098	FunctionDef	"gs_return_check_interrupt (const gs_memory_t * mem , int code)"		5238097	0					
ANR	5238099	CompoundStatement		284:0:7600:7810	5238097	0					
ANR	5238100	IfStatement	if ( code < 0 )		5238097	0					
ANR	5238101	Condition	code < 0	285:8:7610:7617	5238097	0	True				
ANR	5238102	RelationalExpression	code < 0		5238097	0		<			
ANR	5238103	Identifier	code		5238097	0					
ANR	5238104	PrimaryExpression	0		5238097	1					
ANR	5238105	ReturnStatement	return code ;	286:8:7628:7639	5238097	1	True				
ANR	5238106	Identifier	code		5238097	0					
ANR	5238107	CompoundStatement		5:8:54:90	5238097	1					
ANR	5238108	IdentifierDeclStatement	int icode = gp_check_interrupts ( mem ) ;	288:8:7655:7691	5238097	0	True				
ANR	5238109	IdentifierDecl	icode = gp_check_interrupts ( mem )		5238097	0					
ANR	5238110	IdentifierDeclType	int		5238097	0					
ANR	5238111	Identifier	icode		5238097	1					
ANR	5238112	AssignmentExpression	icode = gp_check_interrupts ( mem )		5238097	2		=			
ANR	5238113	Identifier	icode		5238097	0					
ANR	5238114	CallExpression	gp_check_interrupts ( mem )		5238097	1					
ANR	5238115	Callee	gp_check_interrupts		5238097	0					
ANR	5238116	Identifier	gp_check_interrupts		5238097	0					
ANR	5238117	ArgumentList	mem		5238097	1					
ANR	5238118	Argument	mem		5238097	0					
ANR	5238119	Identifier	mem		5238097	0					
ANR	5238120	ReturnStatement	return ( icode == 0 ? code : gs_note_error ( ( icode > 0 ? gs_error_interrupt : icode ) ) ) ;	290:8:7702:7802	5238097	1	True				
ANR	5238121	ConditionalExpression	icode == 0 ? code : gs_note_error ( ( icode > 0 ? gs_error_interrupt : icode ) )		5238097	0					
ANR	5238122	Condition	icode == 0		5238097	0					
ANR	5238123	EqualityExpression	icode == 0		5238097	0		==			
ANR	5238124	Identifier	icode		5238097	0					
ANR	5238125	PrimaryExpression	0		5238097	1					
ANR	5238126	Identifier	code		5238097	1					
ANR	5238127	CallExpression	gs_note_error ( ( icode > 0 ? gs_error_interrupt : icode ) )		5238097	2					
ANR	5238128	Callee	gs_note_error		5238097	0					
ANR	5238129	Identifier	gs_note_error		5238097	0					
ANR	5238130	ArgumentList	icode > 0 ? gs_error_interrupt : icode		5238097	1					
ANR	5238131	Argument	icode > 0 ? gs_error_interrupt : icode		5238097	0					
ANR	5238132	ConditionalExpression	icode > 0 ? gs_error_interrupt : icode		5238097	0					
ANR	5238133	Condition	icode > 0		5238097	0					
ANR	5238134	RelationalExpression	icode > 0		5238097	0		>			
ANR	5238135	Identifier	icode		5238097	0					
ANR	5238136	PrimaryExpression	0		5238097	1					
ANR	5238137	Identifier	gs_error_interrupt		5238097	1					
ANR	5238138	Identifier	icode		5238097	2					
ANR	5238139	ReturnType	int		5238097	1					
ANR	5238140	Identifier	gs_return_check_interrupt		5238097	2					
ANR	5238141	ParameterList	"const gs_memory_t * mem , int code"		5238097	3					
ANR	5238142	Parameter	const gs_memory_t * mem	283:26:7566:7587	5238097	0	True				
ANR	5238143	ParameterType	const gs_memory_t *		5238097	0					
ANR	5238144	Identifier	mem		5238097	1					
ANR	5238145	Parameter	int code	283:50:7590:7597	5238097	1	True				
ANR	5238146	ParameterType	int		5238097	0					
ANR	5238147	Identifier	code		5238097	1					
ANR	5238148	CFGEntryNode	ENTRY		5238097		True				
ANR	5238149	CFGExitNode	EXIT		5238097		True				
ANR	5238150	Symbol	icode		5238097						
ANR	5238151	Symbol	gs_note_error		5238097						
ANR	5238152	Symbol	code		5238097						
ANR	5238153	Symbol	gs_error_interrupt		5238097						
ANR	5238154	Symbol	mem		5238097						
ANR	5238155	Symbol	gp_check_interrupts		5238097						
ANR	5238156	Function	gs_throw_imp	296:0:7835:8904							
ANR	5238157	FunctionDef	"gs_throw_imp (const char * func , const char * file , int line , int op , int code , const char * fmt)"		5238156	0					
ANR	5238158	CompoundStatement		297:0:7938:8904	5238156	0					
ANR	5238159	IdentifierDeclStatement	char msg [ 1024 ] ;	298:4:7944:7958	5238156	0	True				
ANR	5238160	IdentifierDecl	msg [ 1024 ]		5238156	0					
ANR	5238161	IdentifierDeclType	char [ 1024 ]		5238156	0					
ANR	5238162	Identifier	msg		5238156	1					
ANR	5238163	PrimaryExpression	1024		5238156	2					
ANR	5238164	IdentifierDeclStatement	va_list ap ;	299:4:7964:7974	5238156	1	True				
ANR	5238165	IdentifierDecl	ap		5238156	0					
ANR	5238166	IdentifierDeclType	va_list		5238156	0					
ANR	5238167	Identifier	ap		5238156	1					
ANR	5238168	IdentifierDeclStatement	int count ;	300:4:7980:7989	5238156	2	True				
ANR	5238169	IdentifierDecl	count		5238156	0					
ANR	5238170	IdentifierDeclType	int		5238156	0					
ANR	5238171	Identifier	count		5238156	1					
ANR	5238172	ExpressionStatement	"va_start ( ap , fmt )"	302:4:7996:8013	5238156	3	True				
ANR	5238173	CallExpression	"va_start ( ap , fmt )"		5238156	0					
ANR	5238174	Callee	va_start		5238156	0					
ANR	5238175	Identifier	va_start		5238156	0					
ANR	5238176	ArgumentList	ap		5238156	1					
ANR	5238177	Argument	ap		5238156	0					
ANR	5238178	Identifier	ap		5238156	0					
ANR	5238179	Argument	fmt		5238156	1					
ANR	5238180	Identifier	fmt		5238156	0					
ANR	5238181	ExpressionStatement	"count = vsnprintf ( msg , sizeof ( msg ) , fmt , ap )"	303:4:8019:8063	5238156	4	True				
ANR	5238182	AssignmentExpression	"count = vsnprintf ( msg , sizeof ( msg ) , fmt , ap )"		5238156	0		=			
ANR	5238183	Identifier	count		5238156	0					
ANR	5238184	CallExpression	"vsnprintf ( msg , sizeof ( msg ) , fmt , ap )"		5238156	1					
ANR	5238185	Callee	vsnprintf		5238156	0					
ANR	5238186	Identifier	vsnprintf		5238156	0					
ANR	5238187	ArgumentList	msg		5238156	1					
ANR	5238188	Argument	msg		5238156	0					
ANR	5238189	Identifier	msg		5238156	0					
ANR	5238190	Argument	sizeof ( msg )		5238156	1					
ANR	5238191	SizeofExpression	sizeof ( msg )		5238156	0					
ANR	5238192	Sizeof	sizeof		5238156	0					
ANR	5238193	SizeofOperand	msg		5238156	1					
ANR	5238194	Argument	fmt		5238156	2					
ANR	5238195	Identifier	fmt		5238156	0					
ANR	5238196	Argument	ap		5238156	3					
ANR	5238197	Identifier	ap		5238156	0					
ANR	5238198	ExpressionStatement	msg [ sizeof ( msg ) - 1 ] = 0	304:4:8069:8093	5238156	5	True				
ANR	5238199	AssignmentExpression	msg [ sizeof ( msg ) - 1 ] = 0		5238156	0		=			
ANR	5238200	ArrayIndexing	msg [ sizeof ( msg ) - 1 ]		5238156	0					
ANR	5238201	Identifier	msg		5238156	0					
ANR	5238202	AdditiveExpression	sizeof ( msg ) - 1		5238156	1		-			
ANR	5238203	SizeofExpression	sizeof ( msg )		5238156	0					
ANR	5238204	Sizeof	sizeof		5238156	0					
ANR	5238205	SizeofOperand	msg		5238156	1					
ANR	5238206	PrimaryExpression	1		5238156	1					
ANR	5238207	PrimaryExpression	0		5238156	1					
ANR	5238208	ExpressionStatement	va_end ( ap )	305:4:8099:8109	5238156	6	True				
ANR	5238209	CallExpression	va_end ( ap )		5238156	0					
ANR	5238210	Callee	va_end		5238156	0					
ANR	5238211	Identifier	va_end		5238156	0					
ANR	5238212	ArgumentList	ap		5238156	1					
ANR	5238213	Argument	ap		5238156	0					
ANR	5238214	Identifier	ap		5238156	0					
ANR	5238215	IfStatement	if ( ! gs_debug_c ( '#' ) )		5238156	7					
ANR	5238216	Condition	! gs_debug_c ( '#' )	307:8:8120:8135	5238156	0	True				
ANR	5238217	UnaryOperationExpression	! gs_debug_c ( '#' )		5238156	0					
ANR	5238218	UnaryOperator	!		5238156	0					
ANR	5238219	CallExpression	gs_debug_c ( '#' )		5238156	1					
ANR	5238220	Callee	gs_debug_c		5238156	0					
ANR	5238221	Identifier	gs_debug_c		5238156	0					
ANR	5238222	ArgumentList	'#'		5238156	1					
ANR	5238223	Argument	'#'		5238156	0					
ANR	5238224	PrimaryExpression	'#'		5238156	0					
ANR	5238225	CompoundStatement		11:26:199:199	5238156	1					
ANR	5238226	ExpressionStatement		308:8:8148:8148	5238156	0	True				
ANR	5238227	IfStatement	if ( op == 0 )		5238156	8					
ANR	5238228	Condition	op == 0	316:8:8354:8360	5238156	0	True				
ANR	5238229	EqualityExpression	op == 0		5238156	0		==			
ANR	5238230	Identifier	op		5238156	0					
ANR	5238231	PrimaryExpression	0		5238156	1					
ANR	5238232	ExpressionStatement	"errprintf_nomem ( ""+ %s:%d: %s(): %s\\n"" , file , line , func , msg )"	317:8:8371:8432	5238156	1	True				
ANR	5238233	CallExpression	"errprintf_nomem ( ""+ %s:%d: %s(): %s\\n"" , file , line , func , msg )"		5238156	0					
ANR	5238234	Callee	errprintf_nomem		5238156	0					
ANR	5238235	Identifier	errprintf_nomem		5238156	0					
ANR	5238236	ArgumentList	"""+ %s:%d: %s(): %s\\n"""		5238156	1					
ANR	5238237	Argument	"""+ %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238238	PrimaryExpression	"""+ %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238239	Argument	file		5238156	1					
ANR	5238240	Identifier	file		5238156	0					
ANR	5238241	Argument	line		5238156	2					
ANR	5238242	Identifier	line		5238156	0					
ANR	5238243	Argument	func		5238156	3					
ANR	5238244	Identifier	func		5238156	0					
ANR	5238245	Argument	msg		5238156	4					
ANR	5238246	Identifier	msg		5238156	0					
ANR	5238247	IfStatement	if ( op == 1 )		5238156	9					
ANR	5238248	Condition	op == 1	320:8:8461:8467	5238156	0	True				
ANR	5238249	EqualityExpression	op == 1		5238156	0		==			
ANR	5238250	Identifier	op		5238156	0					
ANR	5238251	PrimaryExpression	1		5238156	1					
ANR	5238252	ExpressionStatement	"errprintf_nomem ( ""| %s:%d: %s(): %s\\n"" , file , line , func , msg )"	321:8:8478:8539	5238156	1	True				
ANR	5238253	CallExpression	"errprintf_nomem ( ""| %s:%d: %s(): %s\\n"" , file , line , func , msg )"		5238156	0					
ANR	5238254	Callee	errprintf_nomem		5238156	0					
ANR	5238255	Identifier	errprintf_nomem		5238156	0					
ANR	5238256	ArgumentList	"""| %s:%d: %s(): %s\\n"""		5238156	1					
ANR	5238257	Argument	"""| %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238258	PrimaryExpression	"""| %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238259	Argument	file		5238156	1					
ANR	5238260	Identifier	file		5238156	0					
ANR	5238261	Argument	line		5238156	2					
ANR	5238262	Identifier	line		5238156	0					
ANR	5238263	Argument	func		5238156	3					
ANR	5238264	Identifier	func		5238156	0					
ANR	5238265	Argument	msg		5238156	4					
ANR	5238266	Identifier	msg		5238156	0					
ANR	5238267	IfStatement	if ( op == 2 )		5238156	10					
ANR	5238268	Condition	op == 2	324:8:8566:8572	5238156	0	True				
ANR	5238269	EqualityExpression	op == 2		5238156	0		==			
ANR	5238270	Identifier	op		5238156	0					
ANR	5238271	PrimaryExpression	2		5238156	1					
ANR	5238272	ExpressionStatement	"errprintf_nomem ( ""- %s:%d: %s(): %s\\n"" , file , line , func , msg )"	325:8:8583:8644	5238156	1	True				
ANR	5238273	CallExpression	"errprintf_nomem ( ""- %s:%d: %s(): %s\\n"" , file , line , func , msg )"		5238156	0					
ANR	5238274	Callee	errprintf_nomem		5238156	0					
ANR	5238275	Identifier	errprintf_nomem		5238156	0					
ANR	5238276	ArgumentList	"""- %s:%d: %s(): %s\\n"""		5238156	1					
ANR	5238277	Argument	"""- %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238278	PrimaryExpression	"""- %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238279	Argument	file		5238156	1					
ANR	5238280	Identifier	file		5238156	0					
ANR	5238281	Argument	line		5238156	2					
ANR	5238282	Identifier	line		5238156	0					
ANR	5238283	Argument	func		5238156	3					
ANR	5238284	Identifier	func		5238156	0					
ANR	5238285	Argument	msg		5238156	4					
ANR	5238286	Identifier	msg		5238156	0					
ANR	5238287	IfStatement	if ( op == 3 )		5238156	11					
ANR	5238288	Condition	op == 3	328:8:8670:8676	5238156	0	True				
ANR	5238289	EqualityExpression	op == 3		5238156	0		==			
ANR	5238290	Identifier	op		5238156	0					
ANR	5238291	PrimaryExpression	3		5238156	1					
ANR	5238292	ExpressionStatement	"errprintf_nomem ( ""  %s:%d: %s(): %s\\n"" , file , line , func , msg )"	329:8:8687:8748	5238156	1	True				
ANR	5238293	CallExpression	"errprintf_nomem ( ""  %s:%d: %s(): %s\\n"" , file , line , func , msg )"		5238156	0					
ANR	5238294	Callee	errprintf_nomem		5238156	0					
ANR	5238295	Identifier	errprintf_nomem		5238156	0					
ANR	5238296	ArgumentList	"""  %s:%d: %s(): %s\\n"""		5238156	1					
ANR	5238297	Argument	"""  %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238298	PrimaryExpression	"""  %s:%d: %s(): %s\\n"""		5238156	0					
ANR	5238299	Argument	file		5238156	1					
ANR	5238300	Identifier	file		5238156	0					
ANR	5238301	Argument	line		5238156	2					
ANR	5238302	Identifier	line		5238156	0					
ANR	5238303	Argument	func		5238156	3					
ANR	5238304	Identifier	func		5238156	0					
ANR	5238305	Argument	msg		5238156	4					
ANR	5238306	Identifier	msg		5238156	0					
ANR	5238307	IfStatement	if ( count >= sizeof ( msg ) || count < 0 )		5238156	12					
ANR	5238308	Condition	count >= sizeof ( msg ) || count < 0	331:8:8759:8791	5238156	0	True				
ANR	5238309	OrExpression	count >= sizeof ( msg ) || count < 0		5238156	0		||			
ANR	5238310	RelationalExpression	count >= sizeof ( msg )		5238156	0		>=			
ANR	5238311	Identifier	count		5238156	0					
ANR	5238312	SizeofExpression	sizeof ( msg )		5238156	1					
ANR	5238313	Sizeof	sizeof		5238156	0					
ANR	5238314	SizeofOperand	msg		5238156	1					
ANR	5238315	RelationalExpression	count < 0		5238156	1		<			
ANR	5238316	Identifier	count		5238156	0					
ANR	5238317	PrimaryExpression	0		5238156	1					
ANR	5238318	CompoundStatement		35:44:856:856	5238156	1					
ANR	5238319	ExpressionStatement	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"	332:8:8823:8879	5238156	0	True				
ANR	5238320	CallExpression	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"		5238156	0					
ANR	5238321	Callee	errwrite_nomem		5238156	0					
ANR	5238322	Identifier	errwrite_nomem		5238156	0					
ANR	5238323	ArgumentList	msg_truncated		5238156	1					
ANR	5238324	Argument	msg_truncated		5238156	0					
ANR	5238325	Identifier	msg_truncated		5238156	0					
ANR	5238326	Argument	sizeof ( msg_truncated ) - 1		5238156	1					
ANR	5238327	AdditiveExpression	sizeof ( msg_truncated ) - 1		5238156	0		-			
ANR	5238328	SizeofExpression	sizeof ( msg_truncated )		5238156	0					
ANR	5238329	Sizeof	sizeof		5238156	0					
ANR	5238330	SizeofOperand	msg_truncated		5238156	1					
ANR	5238331	PrimaryExpression	1		5238156	1					
ANR	5238332	ReturnStatement	return code ;	334:4:8891:8902	5238156	13	True				
ANR	5238333	Identifier	code		5238156	0					
ANR	5238334	ReturnType	int		5238156	1					
ANR	5238335	Identifier	gs_throw_imp		5238156	2					
ANR	5238336	ParameterList	"const char * func , const char * file , int line , int op , int code , const char * fmt"		5238156	3					
ANR	5238337	Parameter	const char * func	296:17:7852:7867	5238156	0	True				
ANR	5238338	ParameterType	const char *		5238156	0					
ANR	5238339	Identifier	func		5238156	1					
ANR	5238340	Parameter	const char * file	296:35:7870:7885	5238156	1	True				
ANR	5238341	ParameterType	const char *		5238156	0					
ANR	5238342	Identifier	file		5238156	1					
ANR	5238343	Parameter	int line	296:53:7888:7895	5238156	2	True				
ANR	5238344	ParameterType	int		5238156	0					
ANR	5238345	Identifier	line		5238156	1					
ANR	5238346	Parameter	int op	296:63:7898:7903	5238156	3	True				
ANR	5238347	ParameterType	int		5238156	0					
ANR	5238348	Identifier	op		5238156	1					
ANR	5238349	Parameter	int code	296:71:7906:7913	5238156	4	True				
ANR	5238350	ParameterType	int		5238156	0					
ANR	5238351	Identifier	code		5238156	1					
ANR	5238352	Parameter	const char * fmt	296:81:7916:7930	5238156	5	True				
ANR	5238353	ParameterType	const char *		5238156	0					
ANR	5238354	Identifier	fmt		5238156	1					
ANR	5238355	CFGEntryNode	ENTRY		5238156		True				
ANR	5238356	CFGExitNode	EXIT		5238156		True				
ANR	5238357	Symbol	msg		5238156						
ANR	5238358	Symbol	op		5238156						
ANR	5238359	Symbol	code		5238156						
ANR	5238360	Symbol	line		5238156						
ANR	5238361	Symbol	count		5238156						
ANR	5238362	Symbol	* msg		5238156						
ANR	5238363	Symbol	fmt		5238156						
ANR	5238364	Symbol	ap		5238156						
ANR	5238365	Symbol	file		5238156						
ANR	5238366	Symbol	msg_truncated		5238156						
ANR	5238367	Symbol	func		5238156						
ANR	5238368	Symbol	gs_debug_c		5238156						
ANR	5238369	Symbol	vsnprintf		5238156						
ANR	5238370	Function	gs_errstr	338:0:8914:9892							
ANR	5238371	FunctionDef	gs_errstr (int code)		5238370	0					
ANR	5238372	CompoundStatement		339:0:8946:9892	5238370	0					
ANR	5238373	SwitchStatement	switch ( code )		5238370	0					
ANR	5238374	Condition	code	340:12:8960:8963	5238370	0	True				
ANR	5238375	Identifier	code		5238370	0					
ANR	5238376	CompoundStatement		2:18:19:19	5238370	1					
ANR	5238377	Label	default :	341:4:8972:8979	5238370	0	True				
ANR	5238378	Identifier	default		5238370	0					
ANR	5238379	Label	case gs_error_unknownerror :	342:4:8985:9011	5238370	1	True				
ANR	5238380	Identifier	gs_error_unknownerror		5238370	0					
ANR	5238381	ReturnStatement	"return ""unknownerror"" ;"	342:32:9013:9034	5238370	2	True				
ANR	5238382	PrimaryExpression	"""unknownerror"""		5238370	0					
ANR	5238383	Label	case gs_error_interrupt :	343:4:9040:9063	5238370	3	True				
ANR	5238384	Identifier	gs_error_interrupt		5238370	0					
ANR	5238385	ReturnStatement	"return ""interrupt"" ;"	343:29:9065:9083	5238370	4	True				
ANR	5238386	PrimaryExpression	"""interrupt"""		5238370	0					
ANR	5238387	Label	case gs_error_invalidaccess :	344:4:9089:9116	5238370	5	True				
ANR	5238388	Identifier	gs_error_invalidaccess		5238370	0					
ANR	5238389	ReturnStatement	"return ""invalidaccess"" ;"	344:33:9118:9140	5238370	6	True				
ANR	5238390	PrimaryExpression	"""invalidaccess"""		5238370	0					
ANR	5238391	Label	case gs_error_invalidfileaccess :	345:4:9146:9177	5238370	7	True				
ANR	5238392	Identifier	gs_error_invalidfileaccess		5238370	0					
ANR	5238393	ReturnStatement	"return ""invalidfileaccess"" ;"	345:37:9179:9205	5238370	8	True				
ANR	5238394	PrimaryExpression	"""invalidfileaccess"""		5238370	0					
ANR	5238395	Label	case gs_error_invalidfont :	346:4:9211:9236	5238370	9	True				
ANR	5238396	Identifier	gs_error_invalidfont		5238370	0					
ANR	5238397	ReturnStatement	"return ""invalidfont"" ;"	346:31:9238:9258	5238370	10	True				
ANR	5238398	PrimaryExpression	"""invalidfont"""		5238370	0					
ANR	5238399	Label	case gs_error_ioerror :	347:4:9264:9285	5238370	11	True				
ANR	5238400	Identifier	gs_error_ioerror		5238370	0					
ANR	5238401	ReturnStatement	"return ""ioerror"" ;"	347:27:9287:9303	5238370	12	True				
ANR	5238402	PrimaryExpression	"""ioerror"""		5238370	0					
ANR	5238403	Label	case gs_error_limitcheck :	348:4:9309:9333	5238370	13	True				
ANR	5238404	Identifier	gs_error_limitcheck		5238370	0					
ANR	5238405	ReturnStatement	"return ""limitcheck"" ;"	348:30:9335:9354	5238370	14	True				
ANR	5238406	PrimaryExpression	"""limitcheck"""		5238370	0					
ANR	5238407	Label	case gs_error_nocurrentpoint :	349:4:9360:9388	5238370	15	True				
ANR	5238408	Identifier	gs_error_nocurrentpoint		5238370	0					
ANR	5238409	ReturnStatement	"return ""nocurrentpoint"" ;"	349:34:9390:9413	5238370	16	True				
ANR	5238410	PrimaryExpression	"""nocurrentpoint"""		5238370	0					
ANR	5238411	Label	case gs_error_rangecheck :	350:4:9419:9443	5238370	17	True				
ANR	5238412	Identifier	gs_error_rangecheck		5238370	0					
ANR	5238413	ReturnStatement	"return ""rangecheck"" ;"	350:30:9445:9464	5238370	18	True				
ANR	5238414	PrimaryExpression	"""rangecheck"""		5238370	0					
ANR	5238415	Label	case gs_error_typecheck :	351:4:9470:9493	5238370	19	True				
ANR	5238416	Identifier	gs_error_typecheck		5238370	0					
ANR	5238417	ReturnStatement	"return ""typecheck"" ;"	351:29:9495:9513	5238370	20	True				
ANR	5238418	PrimaryExpression	"""typecheck"""		5238370	0					
ANR	5238419	Label	case gs_error_undefined :	352:4:9519:9542	5238370	21	True				
ANR	5238420	Identifier	gs_error_undefined		5238370	0					
ANR	5238421	ReturnStatement	"return ""undefined"" ;"	352:29:9544:9562	5238370	22	True				
ANR	5238422	PrimaryExpression	"""undefined"""		5238370	0					
ANR	5238423	Label	case gs_error_undefinedfilename :	353:4:9568:9599	5238370	23	True				
ANR	5238424	Identifier	gs_error_undefinedfilename		5238370	0					
ANR	5238425	ReturnStatement	"return ""undefinedfilename"" ;"	353:37:9601:9627	5238370	24	True				
ANR	5238426	PrimaryExpression	"""undefinedfilename"""		5238370	0					
ANR	5238427	Label	case gs_error_undefinedresult :	354:4:9633:9662	5238370	25	True				
ANR	5238428	Identifier	gs_error_undefinedresult		5238370	0					
ANR	5238429	ReturnStatement	"return ""undefinedresult"" ;"	354:35:9664:9688	5238370	26	True				
ANR	5238430	PrimaryExpression	"""undefinedresult"""		5238370	0					
ANR	5238431	Label	case gs_error_VMerror :	355:4:9694:9715	5238370	27	True				
ANR	5238432	Identifier	gs_error_VMerror		5238370	0					
ANR	5238433	ReturnStatement	"return ""vmerror"" ;"	355:27:9717:9733	5238370	28	True				
ANR	5238434	PrimaryExpression	"""vmerror"""		5238370	0					
ANR	5238435	Label	case gs_error_unregistered :	356:4:9739:9765	5238370	29	True				
ANR	5238436	Identifier	gs_error_unregistered		5238370	0					
ANR	5238437	ReturnStatement	"return ""unregistered"" ;"	356:32:9767:9788	5238370	30	True				
ANR	5238438	PrimaryExpression	"""unregistered"""		5238370	0					
ANR	5238439	Label	case gs_error_hit_detected :	357:4:9794:9820	5238370	31	True				
ANR	5238440	Identifier	gs_error_hit_detected		5238370	0					
ANR	5238441	ReturnStatement	"return ""hit_detected"" ;"	357:32:9822:9843	5238370	32	True				
ANR	5238442	PrimaryExpression	"""hit_detected"""		5238370	0					
ANR	5238443	Label	case gs_error_Fatal :	358:4:9849:9868	5238370	33	True				
ANR	5238444	Identifier	gs_error_Fatal		5238370	0					
ANR	5238445	ReturnStatement	"return ""Fatal"" ;"	358:25:9870:9884	5238370	34	True				
ANR	5238446	PrimaryExpression	"""Fatal"""		5238370	0					
ANR	5238447	ReturnType	const char *		5238370	1					
ANR	5238448	Identifier	gs_errstr		5238370	2					
ANR	5238449	ParameterList	int code		5238370	3					
ANR	5238450	Parameter	int code	338:22:8936:8943	5238370	0	True				
ANR	5238451	ParameterType	int		5238370	0					
ANR	5238452	Identifier	code		5238370	1					
ANR	5238453	CFGEntryNode	ENTRY		5238370		True				
ANR	5238454	CFGExitNode	EXIT		5238370		True				
ANR	5238455	Symbol	code		5238370						
ANR	5238456	Function	gs_memmove	368:0:10195:11564							
ANR	5238457	FunctionDef	"gs_memmove (void * dest , const void * src , size_t len)"		5238456	0					
ANR	5238458	CompoundStatement		370:0:10254:11564	5238456	0					
ANR	5238459	IfStatement	if ( ! len )		5238456	0					
ANR	5238460	Condition	! len	371:8:10264:10267	5238456	0	True				
ANR	5238461	UnaryOperationExpression	! len		5238456	0					
ANR	5238462	UnaryOperator	!		5238456	0					
ANR	5238463	Identifier	len		5238456	1					
ANR	5238464	ReturnStatement	return ( void * ) src ;	372:8:10278:10296	5238456	1	True				
ANR	5238465	CastExpression	( void * ) src		5238456	0					
ANR	5238466	CastTarget	void *		5238456	0					
ANR	5238467	Identifier	src		5238456	1					
ANR	5238468	Statement	define	373:1:10299:10304	5238456	1	True				
ANR	5238469	Statement	bdest	373:8:10306:10310	5238456	2	True				
ANR	5238470	Statement	(	373:14:10312:10312	5238456	3	True				
ANR	5238471	Statement	(	373:15:10313:10313	5238456	4	True				
ANR	5238472	Statement	byte	373:16:10314:10317	5238456	5	True				
ANR	5238473	Statement	*	373:21:10319:10319	5238456	6	True				
ANR	5238474	Statement	)	373:22:10320:10320	5238456	7	True				
ANR	5238475	Statement	dest	373:23:10321:10324	5238456	8	True				
ANR	5238476	Statement	)	373:27:10325:10325	5238456	9	True				
ANR	5238477	Statement	define	374:1:10328:10333	5238456	10	True				
ANR	5238478	Statement	bsrc	374:8:10335:10338	5238456	11	True				
ANR	5238479	Statement	(	374:13:10340:10340	5238456	12	True				
ANR	5238480	Statement	(	374:14:10341:10341	5238456	13	True				
ANR	5238481	Statement	const	374:15:10342:10346	5238456	14	True				
ANR	5238482	Statement	byte	374:21:10348:10351	5238456	15	True				
ANR	5238483	Statement	*	374:26:10353:10353	5238456	16	True				
ANR	5238484	Statement	)	374:27:10354:10354	5238456	17	True				
ANR	5238485	Statement	src	374:28:10355:10357	5238456	18	True				
ANR	5238486	Statement	)	374:31:10358:10358	5238456	19	True				
ANR	5238487	IfStatement	"if ( PTR_LE ( bdest , bsrc ) )"		5238456	20					
ANR	5238488	Condition	"PTR_LE ( bdest , bsrc )"	377:8:10491:10509	5238456	0	True				
ANR	5238489	CallExpression	"PTR_LE ( bdest , bsrc )"		5238456	0					
ANR	5238490	Callee	PTR_LE		5238456	0					
ANR	5238491	Identifier	PTR_LE		5238456	0					
ANR	5238492	ArgumentList	bdest		5238456	1					
ANR	5238493	Argument	bdest		5238456	0					
ANR	5238494	Identifier	bdest		5238456	0					
ANR	5238495	Argument	bsrc		5238456	1					
ANR	5238496	Identifier	bsrc		5238456	0					
ANR	5238497	CompoundStatement		9:17:276:305	5238456	1					
ANR	5238498	Statement	register	378:8:10522:10529	5238456	0	True				
ANR	5238499	IdentifierDeclStatement	byte * end = bdest + ( len - 1 ) ;	378:17:10531:10560	5238456	1	True				
ANR	5238500	IdentifierDecl	* end = bdest + ( len - 1 )		5238456	0					
ANR	5238501	IdentifierDeclType	byte *		5238456	0					
ANR	5238502	Identifier	end		5238456	1					
ANR	5238503	AssignmentExpression	* end = bdest + ( len - 1 )		5238456	2		=			
ANR	5238504	Identifier	end		5238456	0					
ANR	5238505	AdditiveExpression	bdest + ( len - 1 )		5238456	1		+			
ANR	5238506	Identifier	bdest		5238456	0					
ANR	5238507	AdditiveExpression	len - 1		5238456	1		-			
ANR	5238508	Identifier	len		5238456	0					
ANR	5238509	PrimaryExpression	1		5238456	1					
ANR	5238510	IfStatement	"if ( PTR_LE ( bsrc , end ) )"		5238456	2					
ANR	5238511	Condition	"PTR_LE ( bsrc , end )"	380:12:10575:10591	5238456	0	True				
ANR	5238512	CallExpression	"PTR_LE ( bsrc , end )"		5238456	0					
ANR	5238513	Callee	PTR_LE		5238456	0					
ANR	5238514	Identifier	PTR_LE		5238456	0					
ANR	5238515	ArgumentList	bsrc		5238456	1					
ANR	5238516	Argument	bsrc		5238456	0					
ANR	5238517	Identifier	bsrc		5238456	0					
ANR	5238518	Argument	end		5238456	1					
ANR	5238519	Identifier	end		5238456	0					
ANR	5238520	CompoundStatement		14:21:466:482	5238456	1					
ANR	5238521	Statement	register	382:12:10666:10673	5238456	0	True				
ANR	5238522	IdentifierDeclStatement	const byte * from = bsrc ;	382:21:10675:10698	5238456	1	True				
ANR	5238523	IdentifierDecl	* from = bsrc		5238456	0					
ANR	5238524	IdentifierDeclType	const byte *		5238456	0					
ANR	5238525	Identifier	from		5238456	1					
ANR	5238526	AssignmentExpression	* from = bsrc		5238456	2		=			
ANR	5238527	Identifier	bsrc		5238456	0					
ANR	5238528	Identifier	bsrc		5238456	1					
ANR	5238529	Statement	register	383:12:10712:10719	5238456	2	True				
ANR	5238530	IdentifierDeclStatement	byte * to = bdest ;	383:21:10721:10737	5238456	3	True				
ANR	5238531	IdentifierDecl	* to = bdest		5238456	0					
ANR	5238532	IdentifierDeclType	byte *		5238456	0					
ANR	5238533	Identifier	to		5238456	1					
ANR	5238534	AssignmentExpression	* to = bdest		5238456	2		=			
ANR	5238535	Identifier	bdest		5238456	0					
ANR	5238536	Identifier	bdest		5238456	1					
ANR	5238537	ForStatement	for ( ; ; )		5238456	4					
ANR	5238538	CompoundStatement		16:21:506:506	5238456	0					
ANR	5238539	ExpressionStatement	* to = * from	386:16:10779:10790	5238456	0	True				
ANR	5238540	AssignmentExpression	* to = * from		5238456	0		=			
ANR	5238541	UnaryOperationExpression	* to		5238456	0					
ANR	5238542	UnaryOperator	*		5238456	0					
ANR	5238543	Identifier	to		5238456	1					
ANR	5238544	UnaryOperationExpression	* from		5238456	1					
ANR	5238545	UnaryOperator	*		5238456	0					
ANR	5238546	Identifier	from		5238456	1					
ANR	5238547	IfStatement	if ( to >= end )		5238456	1					
ANR	5238548	Condition	to >= end	387:20:10812:10820	5238456	0	True				
ANR	5238549	RelationalExpression	to >= end		5238456	0		>=			
ANR	5238550	Identifier	to		5238456	0					
ANR	5238551	Identifier	end		5238456	1					
ANR	5238552	ReturnStatement	return ( void * ) src ;	388:20:10864:10882	5238456	1	True				
ANR	5238553	CastExpression	( void * ) src		5238456	0					
ANR	5238554	CastTarget	void *		5238456	0					
ANR	5238555	Identifier	src		5238456	1					
ANR	5238556	ExpressionStatement	to ++	389:16:10900:10904	5238456	2	True				
ANR	5238557	PostIncDecOperationExpression	to ++		5238456	0					
ANR	5238558	Identifier	to		5238456	0					
ANR	5238559	IncDec	++		5238456	1					
ANR	5238560	ExpressionStatement	from ++	390:16:10922:10928	5238456	3	True				
ANR	5238561	PostIncDecOperationExpression	from ++		5238456	0					
ANR	5238562	Identifier	from		5238456	0					
ANR	5238563	IncDec	++		5238456	1					
ANR	5238564	ElseStatement	else		5238456	0					
ANR	5238565	CompoundStatement		25:17:729:764	5238456	0					
ANR	5238566	Statement	register	394:8:10975:10982	5238456	0	True				
ANR	5238567	IdentifierDeclStatement	const byte * from = bsrc + ( len - 1 ) ;	394:17:10984:11019	5238456	1	True				
ANR	5238568	IdentifierDecl	* from = bsrc + ( len - 1 )		5238456	0					
ANR	5238569	IdentifierDeclType	const byte *		5238456	0					
ANR	5238570	Identifier	from		5238456	1					
ANR	5238571	AssignmentExpression	* from = bsrc + ( len - 1 )		5238456	2		=			
ANR	5238572	Identifier	from		5238456	0					
ANR	5238573	AdditiveExpression	bsrc + ( len - 1 )		5238456	1		+			
ANR	5238574	Identifier	bsrc		5238456	0					
ANR	5238575	AdditiveExpression	len - 1		5238456	1		-			
ANR	5238576	Identifier	len		5238456	0					
ANR	5238577	PrimaryExpression	1		5238456	1					
ANR	5238578	IfStatement	"if ( PTR_LE ( bdest , from ) )"		5238456	2					
ANR	5238579	Condition	"PTR_LE ( bdest , from )"	396:12:11034:11052	5238456	0	True				
ANR	5238580	CallExpression	"PTR_LE ( bdest , from )"		5238456	0					
ANR	5238581	Callee	PTR_LE		5238456	0					
ANR	5238582	Identifier	PTR_LE		5238456	0					
ANR	5238583	ArgumentList	bdest		5238456	1					
ANR	5238584	Argument	bdest		5238456	0					
ANR	5238585	Identifier	bdest		5238456	0					
ANR	5238586	Argument	from		5238456	1					
ANR	5238587	Identifier	from		5238456	0					
ANR	5238588	CompoundStatement		30:21:926:954	5238456	1					
ANR	5238589	Statement	register	398:12:11127:11134	5238456	0	True				
ANR	5238590	IdentifierDeclStatement	const byte * end = bsrc ;	398:21:11136:11158	5238456	1	True				
ANR	5238591	IdentifierDecl	* end = bsrc		5238456	0					
ANR	5238592	IdentifierDeclType	const byte *		5238456	0					
ANR	5238593	Identifier	end		5238456	1					
ANR	5238594	AssignmentExpression	* end = bsrc		5238456	2		=			
ANR	5238595	Identifier	bsrc		5238456	0					
ANR	5238596	Identifier	bsrc		5238456	1					
ANR	5238597	Statement	register	399:12:11172:11179	5238456	2	True				
ANR	5238598	IdentifierDeclStatement	byte * to = bdest + ( len - 1 ) ;	399:21:11181:11209	5238456	3	True				
ANR	5238599	IdentifierDecl	* to = bdest + ( len - 1 )		5238456	0					
ANR	5238600	IdentifierDeclType	byte *		5238456	0					
ANR	5238601	Identifier	to		5238456	1					
ANR	5238602	AssignmentExpression	* to = bdest + ( len - 1 )		5238456	2		=			
ANR	5238603	Identifier	to		5238456	0					
ANR	5238604	AdditiveExpression	bdest + ( len - 1 )		5238456	1		+			
ANR	5238605	Identifier	bdest		5238456	0					
ANR	5238606	AdditiveExpression	len - 1		5238456	1		-			
ANR	5238607	Identifier	len		5238456	0					
ANR	5238608	PrimaryExpression	1		5238456	1					
ANR	5238609	ForStatement	for ( ; ; )		5238456	4					
ANR	5238610	CompoundStatement		32:21:978:978	5238456	0					
ANR	5238611	ExpressionStatement	* to = * from	402:16:11251:11262	5238456	0	True				
ANR	5238612	AssignmentExpression	* to = * from		5238456	0		=			
ANR	5238613	UnaryOperationExpression	* to		5238456	0					
ANR	5238614	UnaryOperator	*		5238456	0					
ANR	5238615	Identifier	to		5238456	1					
ANR	5238616	UnaryOperationExpression	* from		5238456	1					
ANR	5238617	UnaryOperator	*		5238456	0					
ANR	5238618	Identifier	from		5238456	1					
ANR	5238619	IfStatement	if ( from <= end )		5238456	1					
ANR	5238620	Condition	from <= end	403:20:11284:11294	5238456	0	True				
ANR	5238621	RelationalExpression	from <= end		5238456	0		<=			
ANR	5238622	Identifier	from		5238456	0					
ANR	5238623	Identifier	end		5238456	1					
ANR	5238624	ReturnStatement	return ( void * ) src ;	404:20:11344:11362	5238456	1	True				
ANR	5238625	CastExpression	( void * ) src		5238456	0					
ANR	5238626	CastTarget	void *		5238456	0					
ANR	5238627	Identifier	src		5238456	1					
ANR	5238628	ExpressionStatement	to --	405:16:11380:11384	5238456	2	True				
ANR	5238629	PostIncDecOperationExpression	to --		5238456	0					
ANR	5238630	Identifier	to		5238456	0					
ANR	5238631	IncDec	--		5238456	1					
ANR	5238632	ExpressionStatement	from --	406:16:11402:11408	5238456	3	True				
ANR	5238633	PostIncDecOperationExpression	from --		5238456	0					
ANR	5238634	Identifier	from		5238456	0					
ANR	5238635	IncDec	--		5238456	1					
ANR	5238636	IdentifierDeclStatement	"undef bdest undef bsrc memcpy ( dest , src , len ) ;"	410:1:11441:11538	5238456	21	True				
ANR	5238637	IdentifierDecl	"memcpy ( dest , src , len )"		5238456	0					
ANR	5238638	IdentifierDeclType	undef bdest undef bsrc		5238456	0					
ANR	5238639	Identifier	memcpy		5238456	1					
ANR	5238640	Expression	"dest , src , len"		5238456	2					
ANR	5238641	Identifier	dest		5238456	0					
ANR	5238642	Expression	"src , len"		5238456	1					
ANR	5238643	Identifier	src		5238456	0					
ANR	5238644	Identifier	len		5238456	1					
ANR	5238645	ReturnStatement	return ( void * ) src ;	414:4:11544:11562	5238456	22	True				
ANR	5238646	CastExpression	( void * ) src		5238456	0					
ANR	5238647	CastTarget	void *		5238456	0					
ANR	5238648	Identifier	src		5238456	1					
ANR	5238649	ReturnType	void *		5238456	1					
ANR	5238650	Identifier	gs_memmove		5238456	2					
ANR	5238651	ParameterList	"void * dest , const void * src , size_t len"		5238456	3					
ANR	5238652	Parameter	void * dest	369:11:10213:10222	5238456	0	True				
ANR	5238653	ParameterType	void *		5238456	0					
ANR	5238654	Identifier	dest		5238456	1					
ANR	5238655	Parameter	const void * src	369:23:10225:10239	5238456	1	True				
ANR	5238656	ParameterType	const void *		5238456	0					
ANR	5238657	Identifier	src		5238456	1					
ANR	5238658	Parameter	size_t len	369:40:10242:10251	5238456	2	True				
ANR	5238659	ParameterType	size_t		5238456	0					
ANR	5238660	Identifier	len		5238456	1					
ANR	5238661	CFGEntryNode	ENTRY		5238456		True				
ANR	5238662	CFGExitNode	EXIT		5238456		True				
ANR	5238663	InfiniteForNode	true		5238456		True				
ANR	5238664	InfiniteForNode	true		5238456		True				
ANR	5238665	Symbol	PTR_LE		5238456						
ANR	5238666	Symbol	* to		5238456						
ANR	5238667	Symbol	len		5238456						
ANR	5238668	Symbol	src		5238456						
ANR	5238669	Symbol	memcpy		5238456						
ANR	5238670	Symbol	bdest		5238456						
ANR	5238671	Symbol	end		5238456						
ANR	5238672	Symbol	from		5238456						
ANR	5238673	Symbol	to		5238456						
ANR	5238674	Symbol	dest		5238456						
ANR	5238675	Symbol	bsrc		5238456						
ANR	5238676	Symbol	* from		5238456						
ANR	5238677	Function	gs_memcpy	419:0:11626:12172							
ANR	5238678	FunctionDef	"gs_memcpy (void * dest , const void * src , size_t len)"		5238677	0					
ANR	5238679	CompoundStatement		421:0:11684:12172	5238677	0					
ANR	5238680	IfStatement	if ( len > 0 )		5238677	0					
ANR	5238681	Condition	len > 0	422:8:11694:11700	5238677	0	True				
ANR	5238682	RelationalExpression	len > 0		5238677	0		>			
ANR	5238683	Identifier	len		5238677	0					
ANR	5238684	PrimaryExpression	0		5238677	1					
ANR	5238685	CompoundStatement		8:17:246:262	5238677	1					
ANR	5238686	Statement	define	423:1:11706:11711	5238677	0	True				
ANR	5238687	Statement	bdest	423:8:11713:11717	5238677	1	True				
ANR	5238688	Statement	(	423:14:11719:11719	5238677	2	True				
ANR	5238689	Statement	(	423:15:11720:11720	5238677	3	True				
ANR	5238690	Statement	byte	423:16:11721:11724	5238677	4	True				
ANR	5238691	Statement	*	423:21:11726:11726	5238677	5	True				
ANR	5238692	Statement	)	423:22:11727:11727	5238677	6	True				
ANR	5238693	Statement	dest	423:23:11728:11731	5238677	7	True				
ANR	5238694	Statement	)	423:27:11732:11732	5238677	8	True				
ANR	5238695	Statement	define	424:1:11735:11740	5238677	9	True				
ANR	5238696	Statement	bsrc	424:8:11742:11745	5238677	10	True				
ANR	5238697	Statement	(	424:13:11747:11747	5238677	11	True				
ANR	5238698	Statement	(	424:14:11748:11748	5238677	12	True				
ANR	5238699	Statement	const	424:15:11749:11753	5238677	13	True				
ANR	5238700	Statement	byte	424:21:11755:11758	5238677	14	True				
ANR	5238701	Statement	*	424:26:11760:11760	5238677	15	True				
ANR	5238702	Statement	)	424:27:11761:11761	5238677	16	True				
ANR	5238703	Statement	src	424:28:11762:11764	5238677	17	True				
ANR	5238704	Statement	)	424:31:11765:11765	5238677	18	True				
ANR	5238705	Statement	register	426:8:11832:11839	5238677	19	True				
ANR	5238706	IdentifierDeclStatement	byte * end = bdest + ( len - 1 ) ;	426:17:11841:11870	5238677	20	True				
ANR	5238707	IdentifierDecl	* end = bdest + ( len - 1 )		5238677	0					
ANR	5238708	IdentifierDeclType	byte *		5238677	0					
ANR	5238709	Identifier	end		5238677	1					
ANR	5238710	AssignmentExpression	* end = bdest + ( len - 1 )		5238677	2		=			
ANR	5238711	Identifier	end		5238677	0					
ANR	5238712	AdditiveExpression	bdest + ( len - 1 )		5238677	1		+			
ANR	5238713	Identifier	bdest		5238677	0					
ANR	5238714	AdditiveExpression	len - 1		5238677	1		-			
ANR	5238715	Identifier	len		5238677	0					
ANR	5238716	PrimaryExpression	1		5238677	1					
ANR	5238717	Statement	register	427:8:11880:11887	5238677	21	True				
ANR	5238718	IdentifierDeclStatement	const byte * from = bsrc ;	427:17:11889:11912	5238677	22	True				
ANR	5238719	IdentifierDecl	* from = bsrc		5238677	0					
ANR	5238720	IdentifierDeclType	const byte *		5238677	0					
ANR	5238721	Identifier	from		5238677	1					
ANR	5238722	AssignmentExpression	* from = bsrc		5238677	2		=			
ANR	5238723	Identifier	bsrc		5238677	0					
ANR	5238724	Identifier	bsrc		5238677	1					
ANR	5238725	Statement	register	428:8:11922:11929	5238677	23	True				
ANR	5238726	IdentifierDeclStatement	byte * to = bdest ;	428:17:11931:11947	5238677	24	True				
ANR	5238727	IdentifierDecl	* to = bdest		5238677	0					
ANR	5238728	IdentifierDeclType	byte *		5238677	0					
ANR	5238729	Identifier	to		5238677	1					
ANR	5238730	AssignmentExpression	* to = bdest		5238677	2		=			
ANR	5238731	Identifier	bdest		5238677	0					
ANR	5238732	Identifier	bdest		5238677	1					
ANR	5238733	ForStatement	for ( ; ; )		5238677	25					
ANR	5238734	CompoundStatement		10:17:282:282	5238677	0					
ANR	5238735	ExpressionStatement	* to = * from	431:12:11981:11992	5238677	0	True				
ANR	5238736	AssignmentExpression	* to = * from		5238677	0		=			
ANR	5238737	UnaryOperationExpression	* to		5238677	0					
ANR	5238738	UnaryOperator	*		5238677	0					
ANR	5238739	Identifier	to		5238677	1					
ANR	5238740	UnaryOperationExpression	* from		5238677	1					
ANR	5238741	UnaryOperator	*		5238677	0					
ANR	5238742	Identifier	from		5238677	1					
ANR	5238743	IfStatement	if ( to >= end )		5238677	1					
ANR	5238744	Condition	to >= end	432:16:12010:12018	5238677	0	True				
ANR	5238745	RelationalExpression	to >= end		5238677	0		>=			
ANR	5238746	Identifier	to		5238677	0					
ANR	5238747	Identifier	end		5238677	1					
ANR	5238748	BreakStatement	break ;	433:16:12062:12067	5238677	1	True				
ANR	5238749	ExpressionStatement	to ++	434:12:12081:12085	5238677	2	True				
ANR	5238750	PostIncDecOperationExpression	to ++		5238677	0					
ANR	5238751	Identifier	to		5238677	0					
ANR	5238752	IncDec	++		5238677	1					
ANR	5238753	ExpressionStatement	from ++	435:12:12099:12105	5238677	3	True				
ANR	5238754	PostIncDecOperationExpression	from ++		5238677	0					
ANR	5238755	Identifier	from		5238677	0					
ANR	5238756	IncDec	++		5238677	1					
ANR	5238757	Statement	undef	438:1:12124:12128	5238677	1	True				
ANR	5238758	Statement	bdest	438:7:12130:12134	5238677	2	True				
ANR	5238759	Statement	undef	439:1:12137:12141	5238677	3	True				
ANR	5238760	Statement	bsrc	439:7:12143:12146	5238677	4	True				
ANR	5238761	ReturnStatement	return ( void * ) src ;	440:4:12152:12170	5238677	5	True				
ANR	5238762	CastExpression	( void * ) src		5238677	0					
ANR	5238763	CastTarget	void *		5238677	0					
ANR	5238764	Identifier	src		5238677	1					
ANR	5238765	ReturnType	void *		5238677	1					
ANR	5238766	Identifier	gs_memcpy		5238677	2					
ANR	5238767	ParameterList	"void * dest , const void * src , size_t len"		5238677	3					
ANR	5238768	Parameter	void * dest	420:10:11643:11652	5238677	0	True				
ANR	5238769	ParameterType	void *		5238677	0					
ANR	5238770	Identifier	dest		5238677	1					
ANR	5238771	Parameter	const void * src	420:22:11655:11669	5238677	1	True				
ANR	5238772	ParameterType	const void *		5238677	0					
ANR	5238773	Identifier	src		5238677	1					
ANR	5238774	Parameter	size_t len	420:39:11672:11681	5238677	2	True				
ANR	5238775	ParameterType	size_t		5238677	0					
ANR	5238776	Identifier	len		5238677	1					
ANR	5238777	CFGEntryNode	ENTRY		5238677		True				
ANR	5238778	CFGExitNode	EXIT		5238677		True				
ANR	5238779	InfiniteForNode	true		5238677		True				
ANR	5238780	Symbol	* to		5238677						
ANR	5238781	Symbol	len		5238677						
ANR	5238782	Symbol	src		5238677						
ANR	5238783	Symbol	bdest		5238677						
ANR	5238784	Symbol	end		5238677						
ANR	5238785	Symbol	from		5238677						
ANR	5238786	Symbol	to		5238677						
ANR	5238787	Symbol	dest		5238677						
ANR	5238788	Symbol	bsrc		5238677						
ANR	5238789	Symbol	* from		5238677						
ANR	5238790	Function	gs_memchr	447:0:12335:12627							
ANR	5238791	FunctionDef	"gs_memchr (const void * ptr , int ch , size_t len)"		5238790	0					
ANR	5238792	CompoundStatement		449:0:12389:12627	5238790	0					
ANR	5238793	IfStatement	if ( len > 0 )		5238790	0					
ANR	5238794	Condition	len > 0	450:8:12399:12405	5238790	0	True				
ANR	5238795	RelationalExpression	len > 0		5238790	0		>			
ANR	5238796	Identifier	len		5238790	0					
ANR	5238797	PrimaryExpression	0		5238790	1					
ANR	5238798	CompoundStatement		4:17:75:91	5238790	1					
ANR	5238799	Statement	register	451:8:12418:12425	5238790	0	True				
ANR	5238800	IdentifierDeclStatement	const char * p = ptr ;	451:17:12427:12446	5238790	1	True				
ANR	5238801	IdentifierDecl	* p = ptr		5238790	0					
ANR	5238802	IdentifierDeclType	const char *		5238790	0					
ANR	5238803	Identifier	p		5238790	1					
ANR	5238804	AssignmentExpression	* p = ptr		5238790	2		=			
ANR	5238805	Identifier	ptr		5238790	0					
ANR	5238806	Identifier	ptr		5238790	1					
ANR	5238807	Statement	register	452:8:12456:12463	5238790	2	True				
ANR	5238808	IdentifierDeclStatement	uint count = len ;	452:17:12465:12481	5238790	3	True				
ANR	5238809	IdentifierDecl	count = len		5238790	0					
ANR	5238810	IdentifierDeclType	uint		5238790	0					
ANR	5238811	Identifier	count		5238790	1					
ANR	5238812	AssignmentExpression	count = len		5238790	2		=			
ANR	5238813	Identifier	len		5238790	0					
ANR	5238814	Identifier	len		5238790	1					
ANR	5238815	DoStatement	do		5238790	4					
ANR	5238816	CompoundStatement		6:11:105:105	5238790	0					
ANR	5238817	IfStatement	if ( * p == ( char ) ch )		5238790	0					
ANR	5238818	Condition	* p == ( char ) ch	455:16:12513:12526	5238790	0	True				
ANR	5238819	EqualityExpression	* p == ( char ) ch		5238790	0		==			
ANR	5238820	UnaryOperationExpression	* p		5238790	0					
ANR	5238821	UnaryOperator	*		5238790	0					
ANR	5238822	Identifier	p		5238790	1					
ANR	5238823	CastExpression	( char ) ch		5238790	1					
ANR	5238824	CastTarget	char		5238790	0					
ANR	5238825	Identifier	ch		5238790	1					
ANR	5238826	ReturnStatement	return ( void * ) p ;	456:16:12545:12561	5238790	1	True				
ANR	5238827	CastExpression	( void * ) p		5238790	0					
ANR	5238828	CastTarget	void *		5238790	0					
ANR	5238829	Identifier	p		5238790	1					
ANR	5238830	ExpressionStatement	p ++	457:12:12575:12578	5238790	1	True				
ANR	5238831	PostIncDecOperationExpression	p ++		5238790	0					
ANR	5238832	Identifier	p		5238790	0					
ANR	5238833	IncDec	++		5238790	1					
ANR	5238834	Condition	-- count	458:17:12597:12603	5238790	1	True				
ANR	5238835	UnaryExpression	-- count		5238790	0					
ANR	5238836	IncDec	--		5238790	0					
ANR	5238837	Identifier	count		5238790	1					
ANR	5238838	ReturnStatement	return 0 ;	460:4:12617:12625	5238790	1	True				
ANR	5238839	PrimaryExpression	0		5238790	0					
ANR	5238840	ReturnType	void *		5238790	1					
ANR	5238841	Identifier	gs_memchr		5238790	2					
ANR	5238842	ParameterList	"const void * ptr , int ch , size_t len"		5238790	3					
ANR	5238843	Parameter	const void * ptr	448:10:12352:12366	5238790	0	True				
ANR	5238844	ParameterType	const void *		5238790	0					
ANR	5238845	Identifier	ptr		5238790	1					
ANR	5238846	Parameter	int ch	448:27:12369:12374	5238790	1	True				
ANR	5238847	ParameterType	int		5238790	0					
ANR	5238848	Identifier	ch		5238790	1					
ANR	5238849	Parameter	size_t len	448:35:12377:12386	5238790	2	True				
ANR	5238850	ParameterType	size_t		5238790	0					
ANR	5238851	Identifier	len		5238790	1					
ANR	5238852	CFGEntryNode	ENTRY		5238790		True				
ANR	5238853	CFGExitNode	EXIT		5238790		True				
ANR	5238854	Symbol	p		5238790						
ANR	5238855	Symbol	len		5238790						
ANR	5238856	Symbol	ch		5238790						
ANR	5238857	Symbol	count		5238790						
ANR	5238858	Symbol	* p		5238790						
ANR	5238859	Symbol	ptr		5238790						
ANR	5238860	Function	gs_memset	467:0:12790:13959							
ANR	5238861	FunctionDef	"gs_memset (void * dest , register int ch , size_t len)"		5238860	0					
ANR	5238862	CompoundStatement		469:0:12848:13959	5238860	0					
ANR	5238863	Statement	register	474:4:12985:12992	5238860	0	True				
ANR	5238864	IdentifierDeclStatement	char * p = dest ;	474:13:12994:13008	5238860	1	True				
ANR	5238865	IdentifierDecl	* p = dest		5238860	0					
ANR	5238866	IdentifierDeclType	char *		5238860	0					
ANR	5238867	Identifier	p		5238860	1					
ANR	5238868	AssignmentExpression	* p = dest		5238860	2		=			
ANR	5238869	Identifier	dest		5238860	0					
ANR	5238870	Identifier	dest		5238860	1					
ANR	5238871	Statement	register	475:4:13014:13021	5238860	2	True				
ANR	5238872	IdentifierDeclStatement	size_t count = len ;	475:13:13023:13041	5238860	3	True				
ANR	5238873	IdentifierDecl	count = len		5238860	0					
ANR	5238874	IdentifierDeclType	size_t		5238860	0					
ANR	5238875	Identifier	count		5238860	1					
ANR	5238876	AssignmentExpression	count = len		5238860	2		=			
ANR	5238877	Identifier	len		5238860	0					
ANR	5238878	Identifier	len		5238860	1					
ANR	5238879	ExpressionStatement	ch &= 255	477:4:13048:13057	5238860	4	True				
ANR	5238880	AssignmentExpression	ch &= 255		5238860	0		&=			
ANR	5238881	Identifier	ch		5238860	0					
ANR	5238882	PrimaryExpression	255		5238860	1					
ANR	5238883	IfStatement	if ( len >= sizeof ( long ) * 3 )		5238860	5					
ANR	5238884	Condition	len >= sizeof ( long ) * 3	478:8:13067:13089	5238860	0	True				
ANR	5238885	RelationalExpression	len >= sizeof ( long ) * 3		5238860	0		>=			
ANR	5238886	Identifier	len		5238860	0					
ANR	5238887	MultiplicativeExpression	sizeof ( long ) * 3		5238860	1		*			
ANR	5238888	SizeofExpression	sizeof ( long )		5238860	0					
ANR	5238889	Sizeof	sizeof		5238860	0					
ANR	5238890	SizeofOperand	long		5238860	1					
ANR	5238891	PrimaryExpression	3		5238860	1					
ANR	5238892	CompoundStatement		11:8:253:303	5238860	1					
ANR	5238893	IdentifierDeclStatement	long wd = ( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch ;	479:8:13102:13152	5238860	0	True				
ANR	5238894	IdentifierDecl	wd = ( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch		5238860	0					
ANR	5238895	IdentifierDeclType	long		5238860	0					
ANR	5238896	Identifier	wd		5238860	1					
ANR	5238897	AssignmentExpression	wd = ( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch		5238860	2		=			
ANR	5238898	Identifier	wd		5238860	0					
ANR	5238899	InclusiveOrExpression	( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch		5238860	1		|			
ANR	5238900	ShiftExpression	ch << 24		5238860	0		<<			
ANR	5238901	Identifier	ch		5238860	0					
ANR	5238902	PrimaryExpression	24		5238860	1					
ANR	5238903	InclusiveOrExpression	( ch << 16 ) | ( ch << 8 ) | ch		5238860	1		|			
ANR	5238904	ShiftExpression	ch << 16		5238860	0		<<			
ANR	5238905	Identifier	ch		5238860	0					
ANR	5238906	PrimaryExpression	16		5238860	1					
ANR	5238907	InclusiveOrExpression	( ch << 8 ) | ch		5238860	1		|			
ANR	5238908	ShiftExpression	ch << 8		5238860	0		<<			
ANR	5238909	Identifier	ch		5238860	0					
ANR	5238910	PrimaryExpression	8		5238860	1					
ANR	5238911	Identifier	ch		5238860	1					
ANR	5238912	WhileStatement	"while ( ALIGNMENT_MOD ( p , sizeof ( long ) ) )"		5238860	1					
ANR	5238913	Condition	"ALIGNMENT_MOD ( p , sizeof ( long ) )"	481:15:13170:13199	5238860	0	True				
ANR	5238914	CallExpression	"ALIGNMENT_MOD ( p , sizeof ( long ) )"		5238860	0					
ANR	5238915	Callee	ALIGNMENT_MOD		5238860	0					
ANR	5238916	Identifier	ALIGNMENT_MOD		5238860	0					
ANR	5238917	ArgumentList	p		5238860	1					
ANR	5238918	Argument	p		5238860	0					
ANR	5238919	Identifier	p		5238860	0					
ANR	5238920	Argument	sizeof ( long )		5238860	1					
ANR	5238921	SizeofExpression	sizeof ( long )		5238860	0					
ANR	5238922	Sizeof	sizeof		5238860	0					
ANR	5238923	SizeofOperand	long		5238860	1					
ANR	5238924	ExpressionStatement	"* p ++ = ( char ) ch , -- count"	482:12:13214:13238	5238860	1	True				
ANR	5238925	Expression	"* p ++ = ( char ) ch , -- count"		5238860	0					
ANR	5238926	AssignmentExpression	* p ++ = ( char ) ch		5238860	0		=			
ANR	5238927	UnaryOperationExpression	* p ++		5238860	0					
ANR	5238928	UnaryOperator	*		5238860	0					
ANR	5238929	PostIncDecOperationExpression	p ++		5238860	1					
ANR	5238930	Identifier	p		5238860	0					
ANR	5238931	IncDec	++		5238860	1					
ANR	5238932	CastExpression	( char ) ch		5238860	1					
ANR	5238933	CastTarget	char		5238860	0					
ANR	5238934	Identifier	ch		5238860	1					
ANR	5238935	UnaryExpression	-- count		5238860	1					
ANR	5238936	IncDec	--		5238860	0					
ANR	5238937	Identifier	count		5238860	1					
ANR	5238938	ForStatement	"for ( ; count >= sizeof ( long ) * 4 ; p += sizeof ( long ) * 4 , count -= sizeof ( long ) * 4 )"		5238860	2					
ANR	5238939	Condition	count >= sizeof ( long ) * 4	483:15:13255:13279	5238860	0	True				
ANR	5238940	RelationalExpression	count >= sizeof ( long ) * 4		5238860	0		>=			
ANR	5238941	Identifier	count		5238860	0					
ANR	5238942	MultiplicativeExpression	sizeof ( long ) * 4		5238860	1		*			
ANR	5238943	SizeofExpression	sizeof ( long )		5238860	0					
ANR	5238944	Sizeof	sizeof		5238860	0					
ANR	5238945	SizeofOperand	long		5238860	1					
ANR	5238946	PrimaryExpression	4		5238860	1					
ANR	5238947	Expression	"p += sizeof ( long ) * 4 , count -= sizeof ( long ) * 4"	484:13:13295:13342	5238860	1	True				
ANR	5238948	AssignmentExpression	p += sizeof ( long ) * 4		5238860	0		+=			
ANR	5238949	Identifier	p		5238860	0					
ANR	5238950	MultiplicativeExpression	sizeof ( long ) * 4		5238860	1		*			
ANR	5238951	SizeofExpression	sizeof ( long )		5238860	0					
ANR	5238952	Sizeof	sizeof		5238860	0					
ANR	5238953	SizeofOperand	long		5238860	1					
ANR	5238954	PrimaryExpression	4		5238860	1					
ANR	5238955	AssignmentExpression	count -= sizeof ( long ) * 4		5238860	1		-=			
ANR	5238956	Identifier	count		5238860	0					
ANR	5238957	MultiplicativeExpression	sizeof ( long ) * 4		5238860	1		*			
ANR	5238958	SizeofExpression	sizeof ( long )		5238860	0					
ANR	5238959	Sizeof	sizeof		5238860	0					
ANR	5238960	SizeofOperand	long		5238860	1					
ANR	5238961	PrimaryExpression	4		5238860	1					
ANR	5238962	ExpressionStatement	( ( long * ) p ) [ 3 ] = ( ( long * ) p ) [ 2 ] = ( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd	486:12:13371:13457	5238860	2	True				
ANR	5238963	AssignmentExpression	( ( long * ) p ) [ 3 ] = ( ( long * ) p ) [ 2 ] = ( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd		5238860	0		=			
ANR	5238964	ArrayIndexing	( ( long * ) p ) [ 3 ]		5238860	0					
ANR	5238965	CastExpression	( long * ) p		5238860	0					
ANR	5238966	CastTarget	long *		5238860	0					
ANR	5238967	Identifier	p		5238860	1					
ANR	5238968	PrimaryExpression	3		5238860	1					
ANR	5238969	AssignmentExpression	( ( long * ) p ) [ 2 ] = ( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd		5238860	1		=			
ANR	5238970	ArrayIndexing	( ( long * ) p ) [ 2 ]		5238860	0					
ANR	5238971	CastExpression	( long * ) p		5238860	0					
ANR	5238972	CastTarget	long *		5238860	0					
ANR	5238973	Identifier	p		5238860	1					
ANR	5238974	PrimaryExpression	2		5238860	1					
ANR	5238975	AssignmentExpression	( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd		5238860	1		=			
ANR	5238976	ArrayIndexing	( ( long * ) p ) [ 1 ]		5238860	0					
ANR	5238977	CastExpression	( long * ) p		5238860	0					
ANR	5238978	CastTarget	long *		5238860	0					
ANR	5238979	Identifier	p		5238860	1					
ANR	5238980	PrimaryExpression	1		5238860	1					
ANR	5238981	AssignmentExpression	( ( long * ) p ) [ 0 ] = wd		5238860	1		=			
ANR	5238982	ArrayIndexing	( ( long * ) p ) [ 0 ]		5238860	0					
ANR	5238983	CastExpression	( long * ) p		5238860	0					
ANR	5238984	CastTarget	long *		5238860	0					
ANR	5238985	Identifier	p		5238860	1					
ANR	5238986	PrimaryExpression	0		5238860	1					
ANR	5238987	Identifier	wd		5238860	1					
ANR	5238988	SwitchStatement	switch ( count >> ARCH_LOG2_SIZEOF_LONG )		5238860	3					
ANR	5238989	Condition	count >> ARCH_LOG2_SIZEOF_LONG	488:16:13475:13504	5238860	0	True				
ANR	5238990	ShiftExpression	count >> ARCH_LOG2_SIZEOF_LONG		5238860	0		>>			
ANR	5238991	Identifier	count		5238860	0					
ANR	5238992	Identifier	ARCH_LOG2_SIZEOF_LONG		5238860	1					
ANR	5238993	CompoundStatement		20:48:658:658	5238860	1					
ANR	5238994	Label	case 3 :	489:8:13517:13523	5238860	0	True				
ANR	5238995	ExpressionStatement	* ( ( long * ) p ) = wd	490:12:13537:13554	5238860	1	True				
ANR	5238996	AssignmentExpression	* ( ( long * ) p ) = wd		5238860	0		=			
ANR	5238997	UnaryOperationExpression	* ( ( long * ) p )		5238860	0					
ANR	5238998	UnaryOperator	*		5238860	0					
ANR	5238999	CastExpression	( long * ) p		5238860	1					
ANR	5239000	CastTarget	long *		5238860	0					
ANR	5239001	Identifier	p		5238860	1					
ANR	5239002	Identifier	wd		5238860	1					
ANR	5239003	ExpressionStatement	p += sizeof ( long )	490:31:13556:13573	5238860	2	True				
ANR	5239004	AssignmentExpression	p += sizeof ( long )		5238860	0		+=			
ANR	5239005	Identifier	p		5238860	0					
ANR	5239006	SizeofExpression	sizeof ( long )		5238860	1					
ANR	5239007	Sizeof	sizeof		5238860	0					
ANR	5239008	SizeofOperand	long		5238860	1					
ANR	5239009	Label	case 2 :	491:8:13583:13589	5238860	3	True				
ANR	5239010	ExpressionStatement	* ( ( long * ) p ) = wd	492:12:13603:13620	5238860	4	True				
ANR	5239011	AssignmentExpression	* ( ( long * ) p ) = wd		5238860	0		=			
ANR	5239012	UnaryOperationExpression	* ( ( long * ) p )		5238860	0					
ANR	5239013	UnaryOperator	*		5238860	0					
ANR	5239014	CastExpression	( long * ) p		5238860	1					
ANR	5239015	CastTarget	long *		5238860	0					
ANR	5239016	Identifier	p		5238860	1					
ANR	5239017	Identifier	wd		5238860	1					
ANR	5239018	ExpressionStatement	p += sizeof ( long )	492:31:13622:13639	5238860	5	True				
ANR	5239019	AssignmentExpression	p += sizeof ( long )		5238860	0		+=			
ANR	5239020	Identifier	p		5238860	0					
ANR	5239021	SizeofExpression	sizeof ( long )		5238860	1					
ANR	5239022	Sizeof	sizeof		5238860	0					
ANR	5239023	SizeofOperand	long		5238860	1					
ANR	5239024	Label	case 1 :	493:8:13649:13655	5238860	6	True				
ANR	5239025	ExpressionStatement	* ( ( long * ) p ) = wd	494:12:13669:13686	5238860	7	True				
ANR	5239026	AssignmentExpression	* ( ( long * ) p ) = wd		5238860	0		=			
ANR	5239027	UnaryOperationExpression	* ( ( long * ) p )		5238860	0					
ANR	5239028	UnaryOperator	*		5238860	0					
ANR	5239029	CastExpression	( long * ) p		5238860	1					
ANR	5239030	CastTarget	long *		5238860	0					
ANR	5239031	Identifier	p		5238860	1					
ANR	5239032	Identifier	wd		5238860	1					
ANR	5239033	ExpressionStatement	p += sizeof ( long )	494:31:13688:13705	5238860	8	True				
ANR	5239034	AssignmentExpression	p += sizeof ( long )		5238860	0		+=			
ANR	5239035	Identifier	p		5238860	0					
ANR	5239036	SizeofExpression	sizeof ( long )		5238860	1					
ANR	5239037	Sizeof	sizeof		5238860	0					
ANR	5239038	SizeofOperand	long		5238860	1					
ANR	5239039	ExpressionStatement	count &= sizeof ( long ) - 1	495:12:13719:13744	5238860	9	True				
ANR	5239040	AssignmentExpression	count &= sizeof ( long ) - 1		5238860	0		&=			
ANR	5239041	Identifier	count		5238860	0					
ANR	5239042	AdditiveExpression	sizeof ( long ) - 1		5238860	1		-			
ANR	5239043	SizeofExpression	sizeof ( long )		5238860	0					
ANR	5239044	Sizeof	sizeof		5238860	0					
ANR	5239045	SizeofOperand	long		5238860	1					
ANR	5239046	PrimaryExpression	1		5238860	1					
ANR	5239047	Label	case 0 :	496:8:13754:13760	5238860	10	True				
ANR	5239048	Label	default :	497:8:13770:13777	5238860	11	True				
ANR	5239049	Identifier	default		5238860	0					
ANR	5239050	ExpressionStatement	DO_NOTHING	498:12:13825:13835	5238860	12	True				
ANR	5239051	Identifier	DO_NOTHING		5238860	0					
ANR	5239052	ForStatement	for ( ; count > 0 ; -- count )		5238860	6					
ANR	5239053	Condition	count > 0	502:11:13897:13905	5238860	0	True				
ANR	5239054	RelationalExpression	count > 0		5238860	0		>			
ANR	5239055	Identifier	count		5238860	0					
ANR	5239056	PrimaryExpression	0		5238860	1					
ANR	5239057	UnaryExpression	-- count	502:22:13908:13914	5238860	1	True				
ANR	5239058	IncDec	--		5238860	0					
ANR	5239059	Identifier	count		5238860	1					
ANR	5239060	ExpressionStatement	* p ++ = ( char ) ch	503:8:13925:13940	5238860	2	True				
ANR	5239061	AssignmentExpression	* p ++ = ( char ) ch		5238860	0		=			
ANR	5239062	UnaryOperationExpression	* p ++		5238860	0					
ANR	5239063	UnaryOperator	*		5238860	0					
ANR	5239064	PostIncDecOperationExpression	p ++		5238860	1					
ANR	5239065	Identifier	p		5238860	0					
ANR	5239066	IncDec	++		5238860	1					
ANR	5239067	CastExpression	( char ) ch		5238860	1					
ANR	5239068	CastTarget	char		5238860	0					
ANR	5239069	Identifier	ch		5238860	1					
ANR	5239070	ReturnStatement	return dest ;	504:4:13946:13957	5238860	7	True				
ANR	5239071	Identifier	dest		5238860	0					
ANR	5239072	ReturnType	void *		5238860	1					
ANR	5239073	Identifier	gs_memset		5238860	2					
ANR	5239074	ParameterList	"void * dest , register int ch , size_t len"		5238860	3					
ANR	5239075	Parameter	void * dest	468:10:12807:12816	5238860	0	True				
ANR	5239076	ParameterType	void *		5238860	0					
ANR	5239077	Identifier	dest		5238860	1					
ANR	5239078	Parameter	register int ch	468:22:12819:12833	5238860	1	True				
ANR	5239079	ParameterType	register int		5238860	0					
ANR	5239080	Identifier	ch		5238860	1					
ANR	5239081	Parameter	size_t len	468:39:12836:12845	5238860	2	True				
ANR	5239082	ParameterType	size_t		5238860	0					
ANR	5239083	Identifier	len		5238860	1					
ANR	5239084	CFGEntryNode	ENTRY		5238860		True				
ANR	5239085	CFGExitNode	EXIT		5238860		True				
ANR	5239086	Symbol	p		5238860						
ANR	5239087	Symbol	len		5238860						
ANR	5239088	Symbol	ch		5238860						
ANR	5239089	Symbol	* p ++		5238860						
ANR	5239090	Symbol	count		5238860						
ANR	5239091	Symbol	* ( ( long * ) p )		5238860						
ANR	5239092	Symbol	ALIGNMENT_MOD		5238860						
ANR	5239093	Symbol	* p		5238860						
ANR	5239094	Symbol	dest		5238860						
ANR	5239095	Symbol	wd		5238860						
ANR	5239096	Symbol	ARCH_LOG2_SIZEOF_LONG		5238860						
ANR	5239097	Function	gs_realloc	510:0:14085:14588							
ANR	5239098	FunctionDef	"gs_realloc (void * old_ptr , size_t old_size , size_t new_size)"		5239097	0					
ANR	5239099	CompoundStatement		512:0:14152:14588	5239097	0					
ANR	5239100	IdentifierDeclStatement	void * new_ptr ;	513:4:14158:14171	5239097	0	True				
ANR	5239101	IdentifierDecl	* new_ptr		5239097	0					
ANR	5239102	IdentifierDeclType	void *		5239097	0					
ANR	5239103	Identifier	new_ptr		5239097	1					
ANR	5239104	IfStatement	if ( new_size )		5239097	1					
ANR	5239105	Condition	new_size	515:8:14182:14189	5239097	0	True				
ANR	5239106	Identifier	new_size		5239097	0					
ANR	5239107	CompoundStatement		4:18:39:39	5239097	1					
ANR	5239108	ExpressionStatement	new_ptr = malloc ( new_size )	516:8:14202:14228	5239097	0	True				
ANR	5239109	AssignmentExpression	new_ptr = malloc ( new_size )		5239097	0		=			
ANR	5239110	Identifier	new_ptr		5239097	0					
ANR	5239111	CallExpression	malloc ( new_size )		5239097	1					
ANR	5239112	Callee	malloc		5239097	0					
ANR	5239113	Identifier	malloc		5239097	0					
ANR	5239114	ArgumentList	new_size		5239097	1					
ANR	5239115	Argument	new_size		5239097	0					
ANR	5239116	Identifier	new_size		5239097	0					
ANR	5239117	IfStatement	if ( new_ptr == NULL )		5239097	1					
ANR	5239118	Condition	new_ptr == NULL	517:12:14242:14256	5239097	0	True				
ANR	5239119	EqualityExpression	new_ptr == NULL		5239097	0		==			
ANR	5239120	Identifier	new_ptr		5239097	0					
ANR	5239121	Identifier	NULL		5239097	1					
ANR	5239122	ReturnStatement	return NULL ;	518:12:14271:14282	5239097	1	True				
ANR	5239123	Identifier	NULL		5239097	0					
ANR	5239124	ElseStatement	else		5239097	0					
ANR	5239125	ExpressionStatement	new_ptr = NULL	520:8:14303:14317	5239097	0	True				
ANR	5239126	AssignmentExpression	new_ptr = NULL		5239097	0		=			
ANR	5239127	Identifier	new_ptr		5239097	0					
ANR	5239128	Identifier	NULL		5239097	1					
ANR	5239129	IfStatement	if ( old_ptr != NULL )		5239097	2					
ANR	5239130	Condition	old_ptr != NULL	523:8:14428:14442	5239097	0	True				
ANR	5239131	EqualityExpression	old_ptr != NULL		5239097	0		!=			
ANR	5239132	Identifier	old_ptr		5239097	0					
ANR	5239133	Identifier	NULL		5239097	1					
ANR	5239134	CompoundStatement		12:25:292:292	5239097	1					
ANR	5239135	IfStatement	if ( new_ptr != NULL )		5239097	0					
ANR	5239136	Condition	new_ptr != NULL	524:12:14459:14473	5239097	0	True				
ANR	5239137	EqualityExpression	new_ptr != NULL		5239097	0		!=			
ANR	5239138	Identifier	new_ptr		5239097	0					
ANR	5239139	Identifier	NULL		5239097	1					
ANR	5239140	ExpressionStatement	"memcpy ( new_ptr , old_ptr , min ( old_size , new_size ) )"	525:12:14488:14537	5239097	1	True				
ANR	5239141	CallExpression	"memcpy ( new_ptr , old_ptr , min ( old_size , new_size ) )"		5239097	0					
ANR	5239142	Callee	memcpy		5239097	0					
ANR	5239143	Identifier	memcpy		5239097	0					
ANR	5239144	ArgumentList	new_ptr		5239097	1					
ANR	5239145	Argument	new_ptr		5239097	0					
ANR	5239146	Identifier	new_ptr		5239097	0					
ANR	5239147	Argument	old_ptr		5239097	1					
ANR	5239148	Identifier	old_ptr		5239097	0					
ANR	5239149	Argument	"min ( old_size , new_size )"		5239097	2					
ANR	5239150	CallExpression	"min ( old_size , new_size )"		5239097	0					
ANR	5239151	Callee	min		5239097	0					
ANR	5239152	Identifier	min		5239097	0					
ANR	5239153	ArgumentList	old_size		5239097	1					
ANR	5239154	Argument	old_size		5239097	0					
ANR	5239155	Identifier	old_size		5239097	0					
ANR	5239156	Argument	new_size		5239097	1					
ANR	5239157	Identifier	new_size		5239097	0					
ANR	5239158	ExpressionStatement	free ( old_ptr )	526:8:14547:14560	5239097	1	True				
ANR	5239159	CallExpression	free ( old_ptr )		5239097	0					
ANR	5239160	Callee	free		5239097	0					
ANR	5239161	Identifier	free		5239097	0					
ANR	5239162	ArgumentList	old_ptr		5239097	1					
ANR	5239163	Argument	old_ptr		5239097	0					
ANR	5239164	Identifier	old_ptr		5239097	0					
ANR	5239165	ReturnStatement	return new_ptr ;	528:4:14572:14586	5239097	3	True				
ANR	5239166	Identifier	new_ptr		5239097	0					
ANR	5239167	ReturnType	void *		5239097	1					
ANR	5239168	Identifier	gs_realloc		5239097	2					
ANR	5239169	ParameterList	"void * old_ptr , size_t old_size , size_t new_size"		5239097	3					
ANR	5239170	Parameter	void * old_ptr	511:11:14103:14115	5239097	0	True				
ANR	5239171	ParameterType	void *		5239097	0					
ANR	5239172	Identifier	old_ptr		5239097	1					
ANR	5239173	Parameter	size_t old_size	511:26:14118:14132	5239097	1	True				
ANR	5239174	ParameterType	size_t		5239097	0					
ANR	5239175	Identifier	old_size		5239097	1					
ANR	5239176	Parameter	size_t new_size	511:43:14135:14149	5239097	2	True				
ANR	5239177	ParameterType	size_t		5239097	0					
ANR	5239178	Identifier	new_size		5239097	1					
ANR	5239179	CFGEntryNode	ENTRY		5239097		True				
ANR	5239180	CFGExitNode	EXIT		5239097		True				
ANR	5239181	Symbol	old_size		5239097						
ANR	5239182	Symbol	malloc		5239097						
ANR	5239183	Symbol	NULL		5239097						
ANR	5239184	Symbol	min		5239097						
ANR	5239185	Symbol	new_size		5239097						
ANR	5239186	Symbol	old_ptr		5239097						
ANR	5239187	Symbol	new_ptr		5239097						
ANR	5239188	Function	debug_print_string_hex_nomem	536:0:14699:14856							
ANR	5239189	FunctionDef	"debug_print_string_hex_nomem (const byte * chrs , uint len)"		5239188	0					
ANR	5239190	CompoundStatement		538:0:14762:14856	5239188	0					
ANR	5239191	IdentifierDeclStatement	uint i ;	539:4:14768:14774	5239188	0	True				
ANR	5239192	IdentifierDecl	i		5239188	0					
ANR	5239193	IdentifierDeclType	uint		5239188	0					
ANR	5239194	Identifier	i		5239188	1					
ANR	5239195	ForStatement	for ( i = 0 ; i < len ; i ++ )		5239188	1					
ANR	5239196	ForInit	i = 0 ;	541:9:14786:14791	5239188	0	True				
ANR	5239197	AssignmentExpression	i = 0		5239188	0		=			
ANR	5239198	Identifier	i		5239188	0					
ANR	5239199	PrimaryExpression	0		5239188	1					
ANR	5239200	Condition	i < len	541:16:14793:14799	5239188	1	True				
ANR	5239201	RelationalExpression	i < len		5239188	0		<			
ANR	5239202	Identifier	i		5239188	0					
ANR	5239203	Identifier	len		5239188	1					
ANR	5239204	PostIncDecOperationExpression	i ++	541:25:14802:14804	5239188	2	True				
ANR	5239205	Identifier	i		5239188	0					
ANR	5239206	IncDec	++		5239188	1					
ANR	5239207	ExpressionStatement	"dprintf1 ( ""%02x"" , chrs [ i ] )"	542:8:14815:14840	5239188	3	True				
ANR	5239208	CallExpression	"dprintf1 ( ""%02x"" , chrs [ i ] )"		5239188	0					
ANR	5239209	Callee	dprintf1		5239188	0					
ANR	5239210	Identifier	dprintf1		5239188	0					
ANR	5239211	ArgumentList	"""%02x"""		5239188	1					
ANR	5239212	Argument	"""%02x"""		5239188	0					
ANR	5239213	PrimaryExpression	"""%02x"""		5239188	0					
ANR	5239214	Argument	chrs [ i ]		5239188	1					
ANR	5239215	ArrayIndexing	chrs [ i ]		5239188	0					
ANR	5239216	Identifier	chrs		5239188	0					
ANR	5239217	Identifier	i		5239188	1					
ANR	5239218	ExpressionStatement	dflush ( )	543:4:14846:14854	5239188	2	True				
ANR	5239219	CallExpression	dflush ( )		5239188	0					
ANR	5239220	Callee	dflush		5239188	0					
ANR	5239221	Identifier	dflush		5239188	0					
ANR	5239222	ArgumentList			5239188	1					
ANR	5239223	ReturnType	void		5239188	1					
ANR	5239224	Identifier	debug_print_string_hex_nomem		5239188	2					
ANR	5239225	ParameterList	"const byte * chrs , uint len"		5239188	3					
ANR	5239226	Parameter	const byte * chrs	537:29:14733:14749	5239188	0	True				
ANR	5239227	ParameterType	const byte *		5239188	0					
ANR	5239228	Identifier	chrs		5239188	1					
ANR	5239229	Parameter	uint len	537:48:14752:14759	5239188	1	True				
ANR	5239230	ParameterType	uint		5239188	0					
ANR	5239231	Identifier	len		5239188	1					
ANR	5239232	CFGEntryNode	ENTRY		5239188		True				
ANR	5239233	CFGExitNode	EXIT		5239188		True				
ANR	5239234	Symbol	* chrs		5239188						
ANR	5239235	Symbol	* i		5239188						
ANR	5239236	Symbol	len		5239188						
ANR	5239237	Symbol	chrs		5239188						
ANR	5239238	Symbol	i		5239188						
ANR	5239239	Function	debug_dump_bytes	548:0:14897:15297							
ANR	5239240	FunctionDef	"debug_dump_bytes (const gs_memory_t * mem , const byte * from , const byte * to , const char * msg)"		5239239	0					
ANR	5239241	CompoundStatement		550:0:14996:15297	5239239	0					
ANR	5239242	IdentifierDeclStatement	const byte * p = from ;	551:4:15002:15022	5239239	0	True				
ANR	5239243	IdentifierDecl	* p = from		5239239	0					
ANR	5239244	IdentifierDeclType	const byte *		5239239	0					
ANR	5239245	Identifier	p		5239239	1					
ANR	5239246	AssignmentExpression	* p = from		5239239	2		=			
ANR	5239247	Identifier	from		5239239	0					
ANR	5239248	Identifier	from		5239239	1					
ANR	5239249	IfStatement	if ( from < to && msg )		5239239	1					
ANR	5239250	Condition	from < to && msg	553:8:15033:15048	5239239	0	True				
ANR	5239251	AndExpression	from < to && msg		5239239	0		&&			
ANR	5239252	RelationalExpression	from < to		5239239	0		<			
ANR	5239253	Identifier	from		5239239	0					
ANR	5239254	Identifier	to		5239239	1					
ANR	5239255	Identifier	msg		5239239	1					
ANR	5239256	ExpressionStatement	"dmprintf1 ( mem , ""%s:\\n"" , msg )"	554:8:15059:15087	5239239	1	True				
ANR	5239257	CallExpression	"dmprintf1 ( mem , ""%s:\\n"" , msg )"		5239239	0					
ANR	5239258	Callee	dmprintf1		5239239	0					
ANR	5239259	Identifier	dmprintf1		5239239	0					
ANR	5239260	ArgumentList	mem		5239239	1					
ANR	5239261	Argument	mem		5239239	0					
ANR	5239262	Identifier	mem		5239239	0					
ANR	5239263	Argument	"""%s:\\n"""		5239239	1					
ANR	5239264	PrimaryExpression	"""%s:\\n"""		5239239	0					
ANR	5239265	Argument	msg		5239239	2					
ANR	5239266	Identifier	msg		5239239	0					
ANR	5239267	WhileStatement	while ( p != to )		5239239	2					
ANR	5239268	Condition	p != to	555:11:15100:15106	5239239	0	True				
ANR	5239269	EqualityExpression	p != to		5239239	0		!=			
ANR	5239270	Identifier	p		5239239	0					
ANR	5239271	Identifier	to		5239239	1					
ANR	5239272	CompoundStatement		7:8:122:153	5239239	1					
ANR	5239273	IdentifierDeclStatement	"const byte * q = min ( p + 16 , to ) ;"	556:8:15119:15150	5239239	0	True				
ANR	5239274	IdentifierDecl	"* q = min ( p + 16 , to )"		5239239	0					
ANR	5239275	IdentifierDeclType	const byte *		5239239	0					
ANR	5239276	Identifier	q		5239239	1					
ANR	5239277	AssignmentExpression	"* q = min ( p + 16 , to )"		5239239	2		=			
ANR	5239278	Identifier	q		5239239	0					
ANR	5239279	CallExpression	"min ( p + 16 , to )"		5239239	1					
ANR	5239280	Callee	min		5239239	0					
ANR	5239281	Identifier	min		5239239	0					
ANR	5239282	ArgumentList	p + 16		5239239	1					
ANR	5239283	Argument	p + 16		5239239	0					
ANR	5239284	AdditiveExpression	p + 16		5239239	0		+			
ANR	5239285	Identifier	p		5239239	0					
ANR	5239286	PrimaryExpression	16		5239239	1					
ANR	5239287	Argument	to		5239239	1					
ANR	5239288	Identifier	to		5239239	0					
ANR	5239289	ExpressionStatement	"dmprintf1 ( mem , ""0x%lx:"" , ( ulong ) p )"	558:8:15161:15196	5239239	1	True				
ANR	5239290	CallExpression	"dmprintf1 ( mem , ""0x%lx:"" , ( ulong ) p )"		5239239	0					
ANR	5239291	Callee	dmprintf1		5239239	0					
ANR	5239292	Identifier	dmprintf1		5239239	0					
ANR	5239293	ArgumentList	mem		5239239	1					
ANR	5239294	Argument	mem		5239239	0					
ANR	5239295	Identifier	mem		5239239	0					
ANR	5239296	Argument	"""0x%lx:"""		5239239	1					
ANR	5239297	PrimaryExpression	"""0x%lx:"""		5239239	0					
ANR	5239298	Argument	( ulong ) p		5239239	2					
ANR	5239299	CastExpression	( ulong ) p		5239239	0					
ANR	5239300	CastTarget	ulong		5239239	0					
ANR	5239301	Identifier	p		5239239	1					
ANR	5239302	WhileStatement	while ( p != q )		5239239	2					
ANR	5239303	Condition	p != q	559:15:15213:15218	5239239	0	True				
ANR	5239304	EqualityExpression	p != q		5239239	0		!=			
ANR	5239305	Identifier	p		5239239	0					
ANR	5239306	Identifier	q		5239239	1					
ANR	5239307	ExpressionStatement	"dmprintf1 ( mem , "" %02x"" , * p ++ )"	560:12:15233:15262	5239239	1	True				
ANR	5239308	CallExpression	"dmprintf1 ( mem , "" %02x"" , * p ++ )"		5239239	0					
ANR	5239309	Callee	dmprintf1		5239239	0					
ANR	5239310	Identifier	dmprintf1		5239239	0					
ANR	5239311	ArgumentList	mem		5239239	1					
ANR	5239312	Argument	mem		5239239	0					
ANR	5239313	Identifier	mem		5239239	0					
ANR	5239314	Argument	""" %02x"""		5239239	1					
ANR	5239315	PrimaryExpression	""" %02x"""		5239239	0					
ANR	5239316	Argument	* p ++		5239239	2					
ANR	5239317	UnaryOperationExpression	* p ++		5239239	0					
ANR	5239318	UnaryOperator	*		5239239	0					
ANR	5239319	PostIncDecOperationExpression	p ++		5239239	1					
ANR	5239320	Identifier	p		5239239	0					
ANR	5239321	IncDec	++		5239239	1					
ANR	5239322	ExpressionStatement	"dmputc ( mem , '\\n' )"	561:8:15272:15289	5239239	3	True				
ANR	5239323	CallExpression	"dmputc ( mem , '\\n' )"		5239239	0					
ANR	5239324	Callee	dmputc		5239239	0					
ANR	5239325	Identifier	dmputc		5239239	0					
ANR	5239326	ArgumentList	mem		5239239	1					
ANR	5239327	Argument	mem		5239239	0					
ANR	5239328	Identifier	mem		5239239	0					
ANR	5239329	Argument	'\\n'		5239239	1					
ANR	5239330	PrimaryExpression	'\\n'		5239239	0					
ANR	5239331	ReturnType	void		5239239	1					
ANR	5239332	Identifier	debug_dump_bytes		5239239	2					
ANR	5239333	ParameterList	"const gs_memory_t * mem , const byte * from , const byte * to , const char * msg"		5239239	3					
ANR	5239334	Parameter	const gs_memory_t * mem	549:17:14919:14940	5239239	0	True				
ANR	5239335	ParameterType	const gs_memory_t *		5239239	0					
ANR	5239336	Identifier	mem		5239239	1					
ANR	5239337	Parameter	const byte * from	549:41:14943:14959	5239239	1	True				
ANR	5239338	ParameterType	const byte *		5239239	0					
ANR	5239339	Identifier	from		5239239	1					
ANR	5239340	Parameter	const byte * to	549:60:14962:14976	5239239	2	True				
ANR	5239341	ParameterType	const byte *		5239239	0					
ANR	5239342	Identifier	to		5239239	1					
ANR	5239343	Parameter	const char * msg	549:77:14979:14993	5239239	3	True				
ANR	5239344	ParameterType	const char *		5239239	0					
ANR	5239345	Identifier	msg		5239239	1					
ANR	5239346	CFGEntryNode	ENTRY		5239239		True				
ANR	5239347	CFGExitNode	EXIT		5239239		True				
ANR	5239348	Symbol	msg		5239239						
ANR	5239349	Symbol	p		5239239						
ANR	5239350	Symbol	q		5239239						
ANR	5239351	Symbol	min		5239239						
ANR	5239352	Symbol	mem		5239239						
ANR	5239353	Symbol	* p ++		5239239						
ANR	5239354	Symbol	from		5239239						
ANR	5239355	Symbol	to		5239239						
ANR	5239356	Function	debug_dump_bitmap	566:0:15321:15598							
ANR	5239357	FunctionDef	"debug_dump_bitmap (const gs_memory_t * mem , const byte * bits , uint raster , uint height , const char * msg)"		5239356	0					
ANR	5239358	CompoundStatement		568:0:15430:15598	5239356	0					
ANR	5239359	IdentifierDeclStatement	uint y ;	569:4:15436:15442	5239356	0	True				
ANR	5239360	IdentifierDecl	y		5239356	0					
ANR	5239361	IdentifierDeclType	uint		5239356	0					
ANR	5239362	Identifier	y		5239356	1					
ANR	5239363	IdentifierDeclStatement	const byte * data = bits ;	570:4:15448:15471	5239356	1	True				
ANR	5239364	IdentifierDecl	* data = bits		5239356	0					
ANR	5239365	IdentifierDeclType	const byte *		5239356	0					
ANR	5239366	Identifier	data		5239356	1					
ANR	5239367	AssignmentExpression	* data = bits		5239356	2		=			
ANR	5239368	Identifier	bits		5239356	0					
ANR	5239369	Identifier	bits		5239356	1					
ANR	5239370	ForStatement	"for ( y = 0 ; y < height ; ++ y , data += raster )"		5239356	2					
ANR	5239371	ForInit	y = 0 ;	572:9:15483:15488	5239356	0	True				
ANR	5239372	AssignmentExpression	y = 0		5239356	0		=			
ANR	5239373	Identifier	y		5239356	0					
ANR	5239374	PrimaryExpression	0		5239356	1					
ANR	5239375	Condition	y < height	572:16:15490:15499	5239356	1	True				
ANR	5239376	RelationalExpression	y < height		5239356	0		<			
ANR	5239377	Identifier	y		5239356	0					
ANR	5239378	Identifier	height		5239356	1					
ANR	5239379	Expression	"++ y , data += raster"	572:28:15502:15520	5239356	2	True				
ANR	5239380	UnaryExpression	++ y		5239356	0					
ANR	5239381	IncDec	++		5239356	0					
ANR	5239382	Identifier	y		5239356	1					
ANR	5239383	AssignmentExpression	data += raster		5239356	1		+=			
ANR	5239384	Identifier	data		5239356	0					
ANR	5239385	Identifier	raster		5239356	1					
ANR	5239386	ExpressionStatement	"debug_dump_bytes ( mem , data , data + raster , ( y == 0 ? msg : NULL ) )"	573:8:15531:15596	5239356	3	True				
ANR	5239387	CallExpression	"debug_dump_bytes ( mem , data , data + raster , ( y == 0 ? msg : NULL ) )"		5239356	0					
ANR	5239388	Callee	debug_dump_bytes		5239356	0					
ANR	5239389	Identifier	debug_dump_bytes		5239356	0					
ANR	5239390	ArgumentList	mem		5239356	1					
ANR	5239391	Argument	mem		5239356	0					
ANR	5239392	Identifier	mem		5239356	0					
ANR	5239393	Argument	data		5239356	1					
ANR	5239394	Identifier	data		5239356	0					
ANR	5239395	Argument	data + raster		5239356	2					
ANR	5239396	AdditiveExpression	data + raster		5239356	0		+			
ANR	5239397	Identifier	data		5239356	0					
ANR	5239398	Identifier	raster		5239356	1					
ANR	5239399	Argument	y == 0 ? msg : NULL		5239356	3					
ANR	5239400	ConditionalExpression	y == 0 ? msg : NULL		5239356	0					
ANR	5239401	Condition	y == 0		5239356	0					
ANR	5239402	EqualityExpression	y == 0		5239356	0		==			
ANR	5239403	Identifier	y		5239356	0					
ANR	5239404	PrimaryExpression	0		5239356	1					
ANR	5239405	Identifier	msg		5239356	1					
ANR	5239406	Identifier	NULL		5239356	2					
ANR	5239407	ReturnType	void		5239356	1					
ANR	5239408	Identifier	debug_dump_bitmap		5239356	2					
ANR	5239409	ParameterList	"const gs_memory_t * mem , const byte * bits , uint raster , uint height , const char * msg"		5239356	3					
ANR	5239410	Parameter	const gs_memory_t * mem	567:18:15344:15365	5239356	0	True				
ANR	5239411	ParameterType	const gs_memory_t *		5239356	0					
ANR	5239412	Identifier	mem		5239356	1					
ANR	5239413	Parameter	const byte * bits	567:42:15368:15384	5239356	1	True				
ANR	5239414	ParameterType	const byte *		5239356	0					
ANR	5239415	Identifier	bits		5239356	1					
ANR	5239416	Parameter	uint raster	567:61:15387:15397	5239356	2	True				
ANR	5239417	ParameterType	uint		5239356	0					
ANR	5239418	Identifier	raster		5239356	1					
ANR	5239419	Parameter	uint height	567:74:15400:15410	5239356	3	True				
ANR	5239420	ParameterType	uint		5239356	0					
ANR	5239421	Identifier	height		5239356	1					
ANR	5239422	Parameter	const char * msg	567:87:15413:15427	5239356	4	True				
ANR	5239423	ParameterType	const char *		5239356	0					
ANR	5239424	Identifier	msg		5239356	1					
ANR	5239425	CFGEntryNode	ENTRY		5239356		True				
ANR	5239426	CFGExitNode	EXIT		5239356		True				
ANR	5239427	Symbol	msg		5239356						
ANR	5239428	Symbol	NULL		5239356						
ANR	5239429	Symbol	mem		5239356						
ANR	5239430	Symbol	data		5239356						
ANR	5239431	Symbol	bits		5239356						
ANR	5239432	Symbol	raster		5239356						
ANR	5239433	Symbol	y		5239356						
ANR	5239434	Symbol	height		5239356						
ANR	5239435	Function	debug_print_string	577:0:15623:15793							
ANR	5239436	FunctionDef	"debug_print_string (const gs_memory_t * mem , const byte * chrs , uint len)"		5239435	0					
ANR	5239437	CompoundStatement		579:0:15700:15793	5239435	0					
ANR	5239438	IdentifierDeclStatement	uint i ;	580:4:15706:15712	5239435	0	True				
ANR	5239439	IdentifierDecl	i		5239435	0					
ANR	5239440	IdentifierDeclType	uint		5239435	0					
ANR	5239441	Identifier	i		5239435	1					
ANR	5239442	ForStatement	for ( i = 0 ; i < len ; i ++ )		5239435	1					
ANR	5239443	ForInit	i = 0 ;	582:9:15724:15729	5239435	0	True				
ANR	5239444	AssignmentExpression	i = 0		5239435	0		=			
ANR	5239445	Identifier	i		5239435	0					
ANR	5239446	PrimaryExpression	0		5239435	1					
ANR	5239447	Condition	i < len	582:16:15731:15737	5239435	1	True				
ANR	5239448	RelationalExpression	i < len		5239435	0		<			
ANR	5239449	Identifier	i		5239435	0					
ANR	5239450	Identifier	len		5239435	1					
ANR	5239451	PostIncDecOperationExpression	i ++	582:25:15740:15742	5239435	2	True				
ANR	5239452	Identifier	i		5239435	0					
ANR	5239453	IncDec	++		5239435	1					
ANR	5239454	ExpressionStatement	"dmputc ( mem , chrs [ i ] )"	583:8:15753:15773	5239435	3	True				
ANR	5239455	CallExpression	"dmputc ( mem , chrs [ i ] )"		5239435	0					
ANR	5239456	Callee	dmputc		5239435	0					
ANR	5239457	Identifier	dmputc		5239435	0					
ANR	5239458	ArgumentList	mem		5239435	1					
ANR	5239459	Argument	mem		5239435	0					
ANR	5239460	Identifier	mem		5239435	0					
ANR	5239461	Argument	chrs [ i ]		5239435	1					
ANR	5239462	ArrayIndexing	chrs [ i ]		5239435	0					
ANR	5239463	Identifier	chrs		5239435	0					
ANR	5239464	Identifier	i		5239435	1					
ANR	5239465	ExpressionStatement	dmflush ( mem )	584:4:15779:15791	5239435	2	True				
ANR	5239466	CallExpression	dmflush ( mem )		5239435	0					
ANR	5239467	Callee	dmflush		5239435	0					
ANR	5239468	Identifier	dmflush		5239435	0					
ANR	5239469	ArgumentList	mem		5239435	1					
ANR	5239470	Argument	mem		5239435	0					
ANR	5239471	Identifier	mem		5239435	0					
ANR	5239472	ReturnType	void		5239435	1					
ANR	5239473	Identifier	debug_print_string		5239435	2					
ANR	5239474	ParameterList	"const gs_memory_t * mem , const byte * chrs , uint len"		5239435	3					
ANR	5239475	Parameter	const gs_memory_t * mem	578:19:15647:15668	5239435	0	True				
ANR	5239476	ParameterType	const gs_memory_t *		5239435	0					
ANR	5239477	Identifier	mem		5239435	1					
ANR	5239478	Parameter	const byte * chrs	578:43:15671:15687	5239435	1	True				
ANR	5239479	ParameterType	const byte *		5239435	0					
ANR	5239480	Identifier	chrs		5239435	1					
ANR	5239481	Parameter	uint len	578:62:15690:15697	5239435	2	True				
ANR	5239482	ParameterType	uint		5239435	0					
ANR	5239483	Identifier	len		5239435	1					
ANR	5239484	CFGEntryNode	ENTRY		5239435		True				
ANR	5239485	CFGExitNode	EXIT		5239435		True				
ANR	5239486	Symbol	* chrs		5239435						
ANR	5239487	Symbol	* i		5239435						
ANR	5239488	Symbol	mem		5239435						
ANR	5239489	Symbol	len		5239435						
ANR	5239490	Symbol	chrs		5239435						
ANR	5239491	Symbol	i		5239435						
ANR	5239492	Function	debug_print_string_hex	588:0:15836:16021							
ANR	5239493	FunctionDef	"debug_print_string_hex (const gs_memory_t * mem , const byte * chrs , uint len)"		5239492	0					
ANR	5239494	CompoundStatement		590:0:15917:16021	5239492	0					
ANR	5239495	IdentifierDeclStatement	uint i ;	591:4:15923:15929	5239492	0	True				
ANR	5239496	IdentifierDecl	i		5239492	0					
ANR	5239497	IdentifierDeclType	uint		5239492	0					
ANR	5239498	Identifier	i		5239492	1					
ANR	5239499	ForStatement	for ( i = 0 ; i < len ; i ++ )		5239492	1					
ANR	5239500	ForInit	i = 0 ;	593:9:15941:15946	5239492	0	True				
ANR	5239501	AssignmentExpression	i = 0		5239492	0		=			
ANR	5239502	Identifier	i		5239492	0					
ANR	5239503	PrimaryExpression	0		5239492	1					
ANR	5239504	Condition	i < len	593:16:15948:15954	5239492	1	True				
ANR	5239505	RelationalExpression	i < len		5239492	0		<			
ANR	5239506	Identifier	i		5239492	0					
ANR	5239507	Identifier	len		5239492	1					
ANR	5239508	PostIncDecOperationExpression	i ++	593:25:15957:15959	5239492	2	True				
ANR	5239509	Identifier	i		5239492	0					
ANR	5239510	IncDec	++		5239492	1					
ANR	5239511	ExpressionStatement	"dmprintf1 ( mem , ""%02x"" , chrs [ i ] )"	594:8:15970:16001	5239492	3	True				
ANR	5239512	CallExpression	"dmprintf1 ( mem , ""%02x"" , chrs [ i ] )"		5239492	0					
ANR	5239513	Callee	dmprintf1		5239492	0					
ANR	5239514	Identifier	dmprintf1		5239492	0					
ANR	5239515	ArgumentList	mem		5239492	1					
ANR	5239516	Argument	mem		5239492	0					
ANR	5239517	Identifier	mem		5239492	0					
ANR	5239518	Argument	"""%02x"""		5239492	1					
ANR	5239519	PrimaryExpression	"""%02x"""		5239492	0					
ANR	5239520	Argument	chrs [ i ]		5239492	2					
ANR	5239521	ArrayIndexing	chrs [ i ]		5239492	0					
ANR	5239522	Identifier	chrs		5239492	0					
ANR	5239523	Identifier	i		5239492	1					
ANR	5239524	ExpressionStatement	dmflush ( mem )	595:4:16007:16019	5239492	2	True				
ANR	5239525	CallExpression	dmflush ( mem )		5239492	0					
ANR	5239526	Callee	dmflush		5239492	0					
ANR	5239527	Identifier	dmflush		5239492	0					
ANR	5239528	ArgumentList	mem		5239492	1					
ANR	5239529	Argument	mem		5239492	0					
ANR	5239530	Identifier	mem		5239492	0					
ANR	5239531	ReturnType	void		5239492	1					
ANR	5239532	Identifier	debug_print_string_hex		5239492	2					
ANR	5239533	ParameterList	"const gs_memory_t * mem , const byte * chrs , uint len"		5239492	3					
ANR	5239534	Parameter	const gs_memory_t * mem	589:23:15864:15885	5239492	0	True				
ANR	5239535	ParameterType	const gs_memory_t *		5239492	0					
ANR	5239536	Identifier	mem		5239492	1					
ANR	5239537	Parameter	const byte * chrs	589:47:15888:15904	5239492	1	True				
ANR	5239538	ParameterType	const byte *		5239492	0					
ANR	5239539	Identifier	chrs		5239492	1					
ANR	5239540	Parameter	uint len	589:66:15907:15914	5239492	2	True				
ANR	5239541	ParameterType	uint		5239492	0					
ANR	5239542	Identifier	len		5239492	1					
ANR	5239543	CFGEntryNode	ENTRY		5239492		True				
ANR	5239544	CFGExitNode	EXIT		5239492		True				
ANR	5239545	Symbol	* chrs		5239492						
ANR	5239546	Symbol	* i		5239492						
ANR	5239547	Symbol	mem		5239492						
ANR	5239548	Symbol	len		5239492						
ANR	5239549	Symbol	chrs		5239492						
ANR	5239550	Symbol	i		5239492						
ANR	5239551	DeclStmt									
ANR	5239552	Decl							BEGIN ulong	BEGIN ulong *	fp_
ANR	5239553	Function	imod	620:0:16793:16997							
ANR	5239554	FunctionDef	"imod (int m , int n)"		5239553	0					
ANR	5239555	CompoundStatement		622:0:16816:16997	5239553	0					
ANR	5239556	IfStatement	if ( n <= 0 )		5239553	0					
ANR	5239557	Condition	n <= 0	623:8:16826:16831	5239553	0	True				
ANR	5239558	RelationalExpression	n <= 0		5239553	0		<=			
ANR	5239559	Identifier	n		5239553	0					
ANR	5239560	PrimaryExpression	0		5239553	1					
ANR	5239561	ReturnStatement	return 0 ;	624:8:16842:16850	5239553	1	True				
ANR	5239562	PrimaryExpression	0		5239553	0					
ANR	5239563	IfStatement	if ( m >= 0 )		5239553	1					
ANR	5239564	Condition	m >= 0	625:8:16893:16898	5239553	0	True				
ANR	5239565	RelationalExpression	m >= 0		5239553	0		>=			
ANR	5239566	Identifier	m		5239553	0					
ANR	5239567	PrimaryExpression	0		5239553	1					
ANR	5239568	ReturnStatement	return m % n ;	626:8:16909:16921	5239553	1	True				
ANR	5239569	MultiplicativeExpression	m % n		5239553	0		%			
ANR	5239570	Identifier	m		5239553	0					
ANR	5239571	Identifier	n		5239553	1					
ANR	5239572	CompoundStatement		7:8:120:134	5239553	2					
ANR	5239573	IdentifierDeclStatement	int r = - m % n ;	628:8:16937:16951	5239553	0	True				
ANR	5239574	IdentifierDecl	r = - m % n		5239553	0					
ANR	5239575	IdentifierDeclType	int		5239553	0					
ANR	5239576	Identifier	r		5239553	1					
ANR	5239577	AssignmentExpression	r = - m % n		5239553	2		=			
ANR	5239578	Identifier	r		5239553	0					
ANR	5239579	MultiplicativeExpression	- m % n		5239553	1		%			
ANR	5239580	UnaryOperationExpression	- m		5239553	0					
ANR	5239581	UnaryOperator	-		5239553	0					
ANR	5239582	Identifier	m		5239553	1					
ANR	5239583	Identifier	n		5239553	1					
ANR	5239584	ReturnStatement	return ( r == 0 ? 0 : n - r ) ;	630:8:16962:16989	5239553	1	True				
ANR	5239585	ConditionalExpression	r == 0 ? 0 : n - r		5239553	0					
ANR	5239586	Condition	r == 0		5239553	0					
ANR	5239587	EqualityExpression	r == 0		5239553	0		==			
ANR	5239588	Identifier	r		5239553	0					
ANR	5239589	PrimaryExpression	0		5239553	1					
ANR	5239590	PrimaryExpression	0		5239553	1					
ANR	5239591	AdditiveExpression	n - r		5239553	2		-			
ANR	5239592	Identifier	n		5239553	0					
ANR	5239593	Identifier	r		5239553	1					
ANR	5239594	ReturnType	int		5239553	1					
ANR	5239595	Identifier	imod		5239553	2					
ANR	5239596	ParameterList	"int m , int n"		5239553	3					
ANR	5239597	Parameter	int m	621:5:16802:16806	5239553	0	True				
ANR	5239598	ParameterType	int		5239553	0					
ANR	5239599	Identifier	m		5239553	1					
ANR	5239600	Parameter	int n	621:12:16809:16813	5239553	1	True				
ANR	5239601	ParameterType	int		5239553	0					
ANR	5239602	Identifier	n		5239553	1					
ANR	5239603	CFGEntryNode	ENTRY		5239553		True				
ANR	5239604	CFGExitNode	EXIT		5239553		True				
ANR	5239605	Symbol	r		5239553						
ANR	5239606	Symbol	m		5239553						
ANR	5239607	Symbol	n		5239553						
ANR	5239608	Function	igcd	635:0:17039:17312							
ANR	5239609	FunctionDef	"igcd (int x , int y)"		5239608	0					
ANR	5239610	CompoundStatement		637:0:17062:17312	5239608	0					
ANR	5239611	IdentifierDeclStatement	"int c = x , d = y ;"	638:4:17068:17084	5239608	0	True				
ANR	5239612	IdentifierDecl	c = x		5239608	0					
ANR	5239613	IdentifierDeclType	int		5239608	0					
ANR	5239614	Identifier	c		5239608	1					
ANR	5239615	AssignmentExpression	c = x		5239608	2		=			
ANR	5239616	Identifier	x		5239608	0					
ANR	5239617	Identifier	x		5239608	1					
ANR	5239618	IdentifierDecl	d = y		5239608	1					
ANR	5239619	IdentifierDeclType	int		5239608	0					
ANR	5239620	Identifier	d		5239608	1					
ANR	5239621	AssignmentExpression	d = y		5239608	2		=			
ANR	5239622	Identifier	y		5239608	0					
ANR	5239623	Identifier	y		5239608	1					
ANR	5239624	IfStatement	if ( c < 0 )		5239608	1					
ANR	5239625	Condition	c < 0	640:8:17095:17099	5239608	0	True				
ANR	5239626	RelationalExpression	c < 0		5239608	0		<			
ANR	5239627	Identifier	c		5239608	0					
ANR	5239628	PrimaryExpression	0		5239608	1					
ANR	5239629	ExpressionStatement	c = - c	641:8:17110:17116	5239608	1	True				
ANR	5239630	AssignmentExpression	c = - c		5239608	0		=			
ANR	5239631	Identifier	c		5239608	0					
ANR	5239632	UnaryOperationExpression	- c		5239608	1					
ANR	5239633	UnaryOperator	-		5239608	0					
ANR	5239634	Identifier	c		5239608	1					
ANR	5239635	IfStatement	if ( d < 0 )		5239608	2					
ANR	5239636	Condition	d < 0	642:8:17126:17130	5239608	0	True				
ANR	5239637	RelationalExpression	d < 0		5239608	0		<			
ANR	5239638	Identifier	d		5239608	0					
ANR	5239639	PrimaryExpression	0		5239608	1					
ANR	5239640	ExpressionStatement	d = - d	643:8:17141:17147	5239608	1	True				
ANR	5239641	AssignmentExpression	d = - d		5239608	0		=			
ANR	5239642	Identifier	d		5239608	0					
ANR	5239643	UnaryOperationExpression	- d		5239608	1					
ANR	5239644	UnaryOperator	-		5239608	0					
ANR	5239645	Identifier	d		5239608	1					
ANR	5239646	WhileStatement	while ( c != 0 && d != 0 )		5239608	3					
ANR	5239647	Condition	c != 0 && d != 0	644:11:17160:17175	5239608	0	True				
ANR	5239648	AndExpression	c != 0 && d != 0		5239608	0		&&			
ANR	5239649	EqualityExpression	c != 0		5239608	0		!=			
ANR	5239650	Identifier	c		5239608	0					
ANR	5239651	PrimaryExpression	0		5239608	1					
ANR	5239652	EqualityExpression	d != 0		5239608	1		!=			
ANR	5239653	Identifier	d		5239608	0					
ANR	5239654	PrimaryExpression	0		5239608	1					
ANR	5239655	IfStatement	if ( c > d )		5239608	1					
ANR	5239656	Condition	c > d	645:12:17190:17194	5239608	0	True				
ANR	5239657	RelationalExpression	c > d		5239608	0		>			
ANR	5239658	Identifier	c		5239608	0					
ANR	5239659	Identifier	d		5239608	1					
ANR	5239660	ExpressionStatement	c %= d	646:12:17209:17215	5239608	1	True				
ANR	5239661	AssignmentExpression	c %= d		5239608	0		%=			
ANR	5239662	Identifier	c		5239608	0					
ANR	5239663	Identifier	d		5239608	1					
ANR	5239664	ElseStatement	else		5239608	0					
ANR	5239665	ExpressionStatement	d %= c	648:12:17242:17248	5239608	0	True				
ANR	5239666	AssignmentExpression	d %= c		5239608	0		%=			
ANR	5239667	Identifier	d		5239608	0					
ANR	5239668	Identifier	c		5239608	1					
ANR	5239669	ReturnStatement	return d + c ;	649:4:17254:17266	5239608	4	True				
ANR	5239670	AdditiveExpression	d + c		5239608	0		+			
ANR	5239671	Identifier	d		5239608	0					
ANR	5239672	Identifier	c		5239608	1					
ANR	5239673	ReturnType	int		5239608	1					
ANR	5239674	Identifier	igcd		5239608	2					
ANR	5239675	ParameterList	"int x , int y"		5239608	3					
ANR	5239676	Parameter	int x	636:5:17048:17052	5239608	0	True				
ANR	5239677	ParameterType	int		5239608	0					
ANR	5239678	Identifier	x		5239608	1					
ANR	5239679	Parameter	int y	636:12:17055:17059	5239608	1	True				
ANR	5239680	ParameterType	int		5239608	0					
ANR	5239681	Identifier	y		5239608	1					
ANR	5239682	CFGEntryNode	ENTRY		5239608		True				
ANR	5239683	CFGExitNode	EXIT		5239608		True				
ANR	5239684	Symbol	c		5239608						
ANR	5239685	Symbol	d		5239608						
ANR	5239686	Symbol	x		5239608						
ANR	5239687	Symbol	y		5239608						
ANR	5239688	Function	idivmod	653:0:17384:18042							
ANR	5239689	FunctionDef	"idivmod (int a , int b , int m)"		5239688	0					
ANR	5239690	CompoundStatement		655:0:17417:18042	5239688	0					
ANR	5239691	IdentifierDeclStatement	"int u1 = 0 , u3 = m ;"	660:4:17575:17593	5239688	0	True				
ANR	5239692	IdentifierDecl	u1 = 0		5239688	0					
ANR	5239693	IdentifierDeclType	int		5239688	0					
ANR	5239694	Identifier	u1		5239688	1					
ANR	5239695	AssignmentExpression	u1 = 0		5239688	2		=			
ANR	5239696	Identifier	u1		5239688	0					
ANR	5239697	PrimaryExpression	0		5239688	1					
ANR	5239698	IdentifierDecl	u3 = m		5239688	1					
ANR	5239699	IdentifierDeclType	int		5239688	0					
ANR	5239700	Identifier	u3		5239688	1					
ANR	5239701	AssignmentExpression	u3 = m		5239688	2		=			
ANR	5239702	Identifier	m		5239688	0					
ANR	5239703	Identifier	m		5239688	1					
ANR	5239704	IdentifierDeclStatement	"int v1 = 1 , v3 = a ;"	661:4:17599:17617	5239688	1	True				
ANR	5239705	IdentifierDecl	v1 = 1		5239688	0					
ANR	5239706	IdentifierDeclType	int		5239688	0					
ANR	5239707	Identifier	v1		5239688	1					
ANR	5239708	AssignmentExpression	v1 = 1		5239688	2		=			
ANR	5239709	Identifier	v1		5239688	0					
ANR	5239710	PrimaryExpression	1		5239688	1					
ANR	5239711	IdentifierDecl	v3 = a		5239688	1					
ANR	5239712	IdentifierDeclType	int		5239688	0					
ANR	5239713	Identifier	v3		5239688	1					
ANR	5239714	AssignmentExpression	v3 = a		5239688	2		=			
ANR	5239715	Identifier	a		5239688	0					
ANR	5239716	Identifier	a		5239688	1					
ANR	5239717	WhileStatement	while ( v3 )		5239688	2					
ANR	5239718	Condition	v3	668:11:17876:17877	5239688	0	True				
ANR	5239719	Identifier	v3		5239688	0					
ANR	5239720	CompoundStatement		15:8:472:490	5239688	1					
ANR	5239721	IdentifierDeclStatement	"int q = u3 / v3 , t ;"	669:8:17890:17908	5239688	0	True				
ANR	5239722	IdentifierDecl	q = u3 / v3		5239688	0					
ANR	5239723	IdentifierDeclType	int		5239688	0					
ANR	5239724	Identifier	q		5239688	1					
ANR	5239725	AssignmentExpression	q = u3 / v3		5239688	2		=			
ANR	5239726	Identifier	q		5239688	0					
ANR	5239727	MultiplicativeExpression	u3 / v3		5239688	1		/			
ANR	5239728	Identifier	u3		5239688	0					
ANR	5239729	Identifier	v3		5239688	1					
ANR	5239730	IdentifierDecl	t		5239688	1					
ANR	5239731	IdentifierDeclType	int		5239688	0					
ANR	5239732	Identifier	t		5239688	1					
ANR	5239733	ExpressionStatement	"t = u1 - v1 * q , u1 = v1 , v1 = t"	671:8:17919:17951	5239688	1	True				
ANR	5239734	Expression	"t = u1 - v1 * q , u1 = v1 , v1 = t"		5239688	0					
ANR	5239735	AssignmentExpression	t = u1 - v1 * q		5239688	0		=			
ANR	5239736	Identifier	t		5239688	0					
ANR	5239737	AdditiveExpression	u1 - v1 * q		5239688	1		-			
ANR	5239738	Identifier	u1		5239688	0					
ANR	5239739	MultiplicativeExpression	v1 * q		5239688	1		*			
ANR	5239740	Identifier	v1		5239688	0					
ANR	5239741	Identifier	q		5239688	1					
ANR	5239742	Expression	"u1 = v1 , v1 = t"		5239688	1					
ANR	5239743	AssignmentExpression	u1 = v1		5239688	0		=			
ANR	5239744	Identifier	u1		5239688	0					
ANR	5239745	Identifier	v1		5239688	1					
ANR	5239746	AssignmentExpression	v1 = t		5239688	1		=			
ANR	5239747	Identifier	v1		5239688	0					
ANR	5239748	Identifier	t		5239688	1					
ANR	5239749	ExpressionStatement	"t = u3 - v3 * q , u3 = v3 , v3 = t"	672:8:17961:17993	5239688	2	True				
ANR	5239750	Expression	"t = u3 - v3 * q , u3 = v3 , v3 = t"		5239688	0					
ANR	5239751	AssignmentExpression	t = u3 - v3 * q		5239688	0		=			
ANR	5239752	Identifier	t		5239688	0					
ANR	5239753	AdditiveExpression	u3 - v3 * q		5239688	1		-			
ANR	5239754	Identifier	u3		5239688	0					
ANR	5239755	MultiplicativeExpression	v3 * q		5239688	1		*			
ANR	5239756	Identifier	v3		5239688	0					
ANR	5239757	Identifier	q		5239688	1					
ANR	5239758	Expression	"u3 = v3 , v3 = t"		5239688	1					
ANR	5239759	AssignmentExpression	u3 = v3		5239688	0		=			
ANR	5239760	Identifier	u3		5239688	0					
ANR	5239761	Identifier	v3		5239688	1					
ANR	5239762	AssignmentExpression	v3 = t		5239688	1		=			
ANR	5239763	Identifier	v3		5239688	0					
ANR	5239764	Identifier	t		5239688	1					
ANR	5239765	ReturnStatement	"return imod ( u1 * b / igcd ( a , m ) , m ) ;"	674:4:18005:18040	5239688	3	True				
ANR	5239766	CallExpression	"imod ( u1 * b / igcd ( a , m ) , m )"		5239688	0					
ANR	5239767	Callee	imod		5239688	0					
ANR	5239768	Identifier	imod		5239688	0					
ANR	5239769	ArgumentList	"u1 * b / igcd ( a , m )"		5239688	1					
ANR	5239770	Argument	"u1 * b / igcd ( a , m )"		5239688	0					
ANR	5239771	MultiplicativeExpression	"u1 * b / igcd ( a , m )"		5239688	0		*			
ANR	5239772	Identifier	u1		5239688	0					
ANR	5239773	MultiplicativeExpression	"b / igcd ( a , m )"		5239688	1		/			
ANR	5239774	Identifier	b		5239688	0					
ANR	5239775	CallExpression	"igcd ( a , m )"		5239688	1					
ANR	5239776	Callee	igcd		5239688	0					
ANR	5239777	Identifier	igcd		5239688	0					
ANR	5239778	ArgumentList	a		5239688	1					
ANR	5239779	Argument	a		5239688	0					
ANR	5239780	Identifier	a		5239688	0					
ANR	5239781	Argument	m		5239688	1					
ANR	5239782	Identifier	m		5239688	0					
ANR	5239783	Argument	m		5239688	1					
ANR	5239784	Identifier	m		5239688	0					
ANR	5239785	ReturnType	int		5239688	1					
ANR	5239786	Identifier	idivmod		5239688	2					
ANR	5239787	ParameterList	"int a , int b , int m"		5239688	3					
ANR	5239788	Parameter	int a	654:8:17396:17400	5239688	0	True				
ANR	5239789	ParameterType	int		5239688	0					
ANR	5239790	Identifier	a		5239688	1					
ANR	5239791	Parameter	int b	654:15:17403:17407	5239688	1	True				
ANR	5239792	ParameterType	int		5239688	0					
ANR	5239793	Identifier	b		5239688	1					
ANR	5239794	Parameter	int m	654:22:17410:17414	5239688	2	True				
ANR	5239795	ParameterType	int		5239688	0					
ANR	5239796	Identifier	m		5239688	1					
ANR	5239797	CFGEntryNode	ENTRY		5239688		True				
ANR	5239798	CFGExitNode	EXIT		5239688		True				
ANR	5239799	Symbol	a		5239688						
ANR	5239800	Symbol	q		5239688						
ANR	5239801	Symbol	b		5239688						
ANR	5239802	Symbol	t		5239688						
ANR	5239803	Symbol	imod		5239688						
ANR	5239804	Symbol	v1		5239688						
ANR	5239805	Symbol	u1		5239688						
ANR	5239806	Symbol	m		5239688						
ANR	5239807	Symbol	v3		5239688						
ANR	5239808	Symbol	u3		5239688						
ANR	5239809	Symbol	igcd		5239688						
ANR	5239810	Function	ilog2	678:0:18092:18297							
ANR	5239811	FunctionDef	ilog2 (int n)		5239810	0					
ANR	5239812	CompoundStatement		680:0:18109:18297	5239810	0					
ANR	5239813	IdentifierDeclStatement	"int m = n , l = 0 ;"	681:4:18115:18131	5239810	0	True				
ANR	5239814	IdentifierDecl	m = n		5239810	0					
ANR	5239815	IdentifierDeclType	int		5239810	0					
ANR	5239816	Identifier	m		5239810	1					
ANR	5239817	AssignmentExpression	m = n		5239810	2		=			
ANR	5239818	Identifier	n		5239810	0					
ANR	5239819	Identifier	n		5239810	1					
ANR	5239820	IdentifierDecl	l = 0		5239810	1					
ANR	5239821	IdentifierDeclType	int		5239810	0					
ANR	5239822	Identifier	l		5239810	1					
ANR	5239823	AssignmentExpression	l = 0		5239810	2		=			
ANR	5239824	Identifier	l		5239810	0					
ANR	5239825	PrimaryExpression	0		5239810	1					
ANR	5239826	WhileStatement	while ( m >= 16 )		5239810	1					
ANR	5239827	Condition	m >= 16	683:11:18145:18151	5239810	0	True				
ANR	5239828	RelationalExpression	m >= 16		5239810	0		>=			
ANR	5239829	Identifier	m		5239810	0					
ANR	5239830	PrimaryExpression	16		5239810	1					
ANR	5239831	ExpressionStatement	"m >>= 4 , l += 4"	684:8:18162:18177	5239810	1	True				
ANR	5239832	Expression	"m >>= 4 , l += 4"		5239810	0					
ANR	5239833	AssignmentExpression	m >>= 4		5239810	0		>>=			
ANR	5239834	Identifier	m		5239810	0					
ANR	5239835	PrimaryExpression	4		5239810	1					
ANR	5239836	AssignmentExpression	l += 4		5239810	1		+=			
ANR	5239837	Identifier	l		5239810	0					
ANR	5239838	PrimaryExpression	4		5239810	1					
ANR	5239839	ReturnStatement	"return ( m <= 1 ? l : ""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ] + l ) ;"	685:4:18183:18295	5239810	2	True				
ANR	5239840	ConditionalExpression	"m <= 1 ? l : ""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ] + l"		5239810	0					
ANR	5239841	Condition	m <= 1		5239810	0					
ANR	5239842	RelationalExpression	m <= 1		5239810	0		<=			
ANR	5239843	Identifier	m		5239810	0					
ANR	5239844	PrimaryExpression	1		5239810	1					
ANR	5239845	Identifier	l		5239810	1					
ANR	5239846	AdditiveExpression	"""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ] + l"		5239810	2		+			
ANR	5239847	ArrayIndexing	"""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ]"		5239810	0					
ANR	5239848	PrimaryExpression	"""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"""		5239810	0					
ANR	5239849	Identifier	m		5239810	1					
ANR	5239850	Identifier	l		5239810	1					
ANR	5239851	ReturnType	int		5239810	1					
ANR	5239852	Identifier	ilog2		5239810	2					
ANR	5239853	ParameterList	int n		5239810	3					
ANR	5239854	Parameter	int n	679:6:18102:18106	5239810	0	True				
ANR	5239855	ParameterType	int		5239810	0					
ANR	5239856	Identifier	n		5239810	1					
ANR	5239857	CFGEntryNode	ENTRY		5239810		True				
ANR	5239858	CFGExitNode	EXIT		5239810		True				
ANR	5239859	Symbol	* m		5239810						
ANR	5239860	Symbol	l		5239810						
ANR	5239861	Symbol	m		5239810						
ANR	5239862	Symbol	n		5239810						
ANR	5239863	ClassDef	<unnamed>	714:0:19089:19171							
ANR	5239864	DeclStmt									
ANR	5239865	Decl							long	long	mnanb
ANR	5239866	Decl							long	long	mnab
ANR	5239867	Decl							long	long	manb
ANR	5239868	Decl							long	long	mab
ANR	5239869	Decl							long	long	mnc
ANR	5239870	Decl							long	long	mdq
ANR	5239871	Decl							long	long	mde
ANR	5239872	Decl							long	long	mds
ANR	5239873	Decl							long	long	mqh
ANR	5239874	Decl							long	long	mql
ANR	5239875	DeclStmt									
ANR	5239876	Decl									fmq_stat
ANR	5239877	Function	fixed_mult_quo	721:0:19248:23906							
ANR	5239878	FunctionDef	"fixed_mult_quo (fixed signed_A , fixed B , fixed C)"		5239877	0					
ANR	5239879	CompoundStatement		723:0:19303:23906	5239877	0					
ANR	5239880	IdentifierDeclStatement	ulong A = ( signed_A < 0 ? - signed_A : signed_A ) ;	725:4:19366:19413	5239877	0	True				
ANR	5239881	IdentifierDecl	A = ( signed_A < 0 ? - signed_A : signed_A )		5239877	0					
ANR	5239882	IdentifierDeclType	ulong		5239877	0					
ANR	5239883	Identifier	A		5239877	1					
ANR	5239884	AssignmentExpression	A = ( signed_A < 0 ? - signed_A : signed_A )		5239877	2		=			
ANR	5239885	Identifier	A		5239877	0					
ANR	5239886	ConditionalExpression	signed_A < 0 ? - signed_A : signed_A		5239877	1					
ANR	5239887	Condition	signed_A < 0		5239877	0					
ANR	5239888	RelationalExpression	signed_A < 0		5239877	0		<			
ANR	5239889	Identifier	signed_A		5239877	0					
ANR	5239890	PrimaryExpression	0		5239877	1					
ANR	5239891	UnaryOperationExpression	- signed_A		5239877	1					
ANR	5239892	UnaryOperator	-		5239877	0					
ANR	5239893	Identifier	signed_A		5239877	1					
ANR	5239894	Identifier	signed_A		5239877	2					
ANR	5239895	IdentifierDeclStatement	long msw ;	726:4:19419:19427	5239877	1	True				
ANR	5239896	IdentifierDecl	msw		5239877	0					
ANR	5239897	IdentifierDeclType	long		5239877	0					
ANR	5239898	Identifier	msw		5239877	1					
ANR	5239899	IdentifierDeclStatement	ulong lsw ;	727:4:19433:19442	5239877	2	True				
ANR	5239900	IdentifierDecl	lsw		5239877	0					
ANR	5239901	IdentifierDeclType	ulong		5239877	0					
ANR	5239902	Identifier	lsw		5239877	1					
ANR	5239903	IdentifierDeclStatement	ulong p1 ;	728:4:19448:19456	5239877	3	True				
ANR	5239904	IdentifierDecl	p1		5239877	0					
ANR	5239905	IdentifierDeclType	ulong		5239877	0					
ANR	5239906	Identifier	p1		5239877	1					
ANR	5239907	IfStatement	if ( B <= half_mask )		5239877	4					
ANR	5239908	Condition	B <= half_mask	730:8:19467:19480	5239877	0	True				
ANR	5239909	RelationalExpression	B <= half_mask		5239877	0		<=			
ANR	5239910	Identifier	B		5239877	0					
ANR	5239911	Identifier	half_mask		5239877	1					
ANR	5239912	CompoundStatement		8:24:179:179	5239877	1					
ANR	5239913	IfStatement	if ( A <= half_mask )		5239877	0					
ANR	5239914	Condition	A <= half_mask	731:12:19497:19510	5239877	0	True				
ANR	5239915	RelationalExpression	A <= half_mask		5239877	0		<=			
ANR	5239916	Identifier	A		5239877	0					
ANR	5239917	Identifier	half_mask		5239877	1					
ANR	5239918	CompoundStatement		11:12:252:274	5239877	1					
ANR	5239919	IdentifierDeclStatement	ulong P = A * B ;	732:12:19527:19542	5239877	0	True				
ANR	5239920	IdentifierDecl	P = A * B		5239877	0					
ANR	5239921	IdentifierDeclType	ulong		5239877	0					
ANR	5239922	Identifier	P		5239877	1					
ANR	5239923	AssignmentExpression	P = A * B		5239877	2		=			
ANR	5239924	Identifier	P		5239877	0					
ANR	5239925	MultiplicativeExpression	A * B		5239877	1		*			
ANR	5239926	Identifier	A		5239877	0					
ANR	5239927	Identifier	B		5239877	1					
ANR	5239928	IdentifierDeclStatement	fixed Q = P / ( ulong ) C ;	733:12:19556:19578	5239877	1	True				
ANR	5239929	IdentifierDecl	Q = P / ( ulong ) C		5239877	0					
ANR	5239930	IdentifierDeclType	fixed		5239877	0					
ANR	5239931	Identifier	Q		5239877	1					
ANR	5239932	AssignmentExpression	Q = P / ( ulong ) C		5239877	2		=			
ANR	5239933	Identifier	Q		5239877	0					
ANR	5239934	MultiplicativeExpression	P / ( ulong ) C		5239877	1		/			
ANR	5239935	Identifier	P		5239877	0					
ANR	5239936	CastExpression	( ulong ) C		5239877	1					
ANR	5239937	CastTarget	ulong		5239877	0					
ANR	5239938	Identifier	C		5239877	1					
ANR	5239939	ExpressionStatement	mincr ( mnanb )	735:12:19593:19605	5239877	2	True				
ANR	5239940	CallExpression	mincr ( mnanb )		5239877	0					
ANR	5239941	Callee	mincr		5239877	0					
ANR	5239942	Identifier	mincr		5239877	0					
ANR	5239943	ArgumentList	mnanb		5239877	1					
ANR	5239944	Argument	mnanb		5239877	0					
ANR	5239945	Identifier	mnanb		5239877	0					
ANR	5239946	ReturnStatement	return ( signed_A >= 0 ? Q : Q * C == P ? - Q : ~Q ) ;	737:12:19692:19754	5239877	3	True				
ANR	5239947	ConditionalExpression	signed_A >= 0 ? Q : Q * C == P ? - Q : ~Q		5239877	0					
ANR	5239948	Condition	signed_A >= 0		5239877	0					
ANR	5239949	RelationalExpression	signed_A >= 0		5239877	0		>=			
ANR	5239950	Identifier	signed_A		5239877	0					
ANR	5239951	PrimaryExpression	0		5239877	1					
ANR	5239952	Identifier	Q		5239877	1					
ANR	5239953	ConditionalExpression	Q * C == P ? - Q : ~Q		5239877	2					
ANR	5239954	Condition	Q * C == P		5239877	0					
ANR	5239955	EqualityExpression	Q * C == P		5239877	0		==			
ANR	5239956	MultiplicativeExpression	Q * C		5239877	0		*			
ANR	5239957	Identifier	Q		5239877	0					
ANR	5239958	Identifier	C		5239877	1					
ANR	5239959	Identifier	P		5239877	1					
ANR	5239960	UnaryOperationExpression	- Q		5239877	1					
ANR	5239961	UnaryOperator	-		5239877	0					
ANR	5239962	Identifier	Q		5239877	1					
ANR	5239963	Identifier	~Q		5239877	2					
ANR	5239964	ExpressionStatement	lsw = ( A & half_mask ) * B	743:8:19901:19926	5239877	1	True				
ANR	5239965	AssignmentExpression	lsw = ( A & half_mask ) * B		5239877	0		=			
ANR	5239966	Identifier	lsw		5239877	0					
ANR	5239967	MultiplicativeExpression	( A & half_mask ) * B		5239877	1		*			
ANR	5239968	BitAndExpression	A & half_mask		5239877	0		&			
ANR	5239969	Identifier	A		5239877	0					
ANR	5239970	Identifier	half_mask		5239877	1					
ANR	5239971	Identifier	B		5239877	1					
ANR	5239972	ExpressionStatement	p1 = ( A >> half_bits ) * B	744:8:19936:19961	5239877	2	True				
ANR	5239973	AssignmentExpression	p1 = ( A >> half_bits ) * B		5239877	0		=			
ANR	5239974	Identifier	p1		5239877	0					
ANR	5239975	MultiplicativeExpression	( A >> half_bits ) * B		5239877	1		*			
ANR	5239976	ShiftExpression	A >> half_bits		5239877	0		>>			
ANR	5239977	Identifier	A		5239877	0					
ANR	5239978	Identifier	half_bits		5239877	1					
ANR	5239979	Identifier	B		5239877	1					
ANR	5239980	IfStatement	if ( C <= half_mask )		5239877	3					
ANR	5239981	Condition	C <= half_mask	745:12:19975:19988	5239877	0	True				
ANR	5239982	RelationalExpression	C <= half_mask		5239877	0		<=			
ANR	5239983	Identifier	C		5239877	0					
ANR	5239984	Identifier	half_mask		5239877	1					
ANR	5239985	CompoundStatement		27:12:867:899	5239877	1					
ANR	5239986	IdentifierDeclStatement	fixed q0 = ( p1 += lsw >> half_bits ) / C ;	746:12:20005:20044	5239877	0	True				
ANR	5239987	IdentifierDecl	q0 = ( p1 += lsw >> half_bits ) / C		5239877	0					
ANR	5239988	IdentifierDeclType	fixed		5239877	0					
ANR	5239989	Identifier	q0		5239877	1					
ANR	5239990	AssignmentExpression	q0 = ( p1 += lsw >> half_bits ) / C		5239877	2		=			
ANR	5239991	Identifier	q0		5239877	0					
ANR	5239992	MultiplicativeExpression	( p1 += lsw >> half_bits ) / C		5239877	1		/			
ANR	5239993	AssignmentExpression	p1 += lsw >> half_bits		5239877	0		+=			
ANR	5239994	Identifier	p1		5239877	0					
ANR	5239995	ShiftExpression	lsw >> half_bits		5239877	1		>>			
ANR	5239996	Identifier	lsw		5239877	0					
ANR	5239997	Identifier	half_bits		5239877	1					
ANR	5239998	Identifier	C		5239877	1					
ANR	5239999	IdentifierDeclStatement	ulong rem = ( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask ) ;	747:12:20058:20118	5239877	1	True				
ANR	5240000	IdentifierDecl	rem = ( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask )		5239877	0					
ANR	5240001	IdentifierDeclType	ulong		5239877	0					
ANR	5240002	Identifier	rem		5239877	1					
ANR	5240003	AssignmentExpression	rem = ( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask )		5239877	2		=			
ANR	5240004	Identifier	rem		5239877	0					
ANR	5240005	AdditiveExpression	( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask )		5239877	1		+			
ANR	5240006	ShiftExpression	( p1 - C * q0 ) << half_bits		5239877	0		<<			
ANR	5240007	AdditiveExpression	p1 - C * q0		5239877	0		-			
ANR	5240008	Identifier	p1		5239877	0					
ANR	5240009	MultiplicativeExpression	C * q0		5239877	1		*			
ANR	5240010	Identifier	C		5239877	0					
ANR	5240011	Identifier	q0		5239877	1					
ANR	5240012	Identifier	half_bits		5239877	1					
ANR	5240013	BitAndExpression	lsw & half_mask		5239877	1		&			
ANR	5240014	Identifier	lsw		5239877	0					
ANR	5240015	Identifier	half_mask		5239877	1					
ANR	5240016	IdentifierDeclStatement	ulong q1 = rem / ( ulong ) C ;	748:12:20132:20157	5239877	2	True				
ANR	5240017	IdentifierDecl	q1 = rem / ( ulong ) C		5239877	0					
ANR	5240018	IdentifierDeclType	ulong		5239877	0					
ANR	5240019	Identifier	q1		5239877	1					
ANR	5240020	AssignmentExpression	q1 = rem / ( ulong ) C		5239877	2		=			
ANR	5240021	Identifier	q1		5239877	0					
ANR	5240022	MultiplicativeExpression	rem / ( ulong ) C		5239877	1		/			
ANR	5240023	Identifier	rem		5239877	0					
ANR	5240024	CastExpression	( ulong ) C		5239877	1					
ANR	5240025	CastTarget	ulong		5239877	0					
ANR	5240026	Identifier	C		5239877	1					
ANR	5240027	IdentifierDeclStatement	fixed Q = ( q0 << half_bits ) + q1 ;	749:12:20171:20203	5239877	3	True				
ANR	5240028	IdentifierDecl	Q = ( q0 << half_bits ) + q1		5239877	0					
ANR	5240029	IdentifierDeclType	fixed		5239877	0					
ANR	5240030	Identifier	Q		5239877	1					
ANR	5240031	AssignmentExpression	Q = ( q0 << half_bits ) + q1		5239877	2		=			
ANR	5240032	Identifier	Q		5239877	0					
ANR	5240033	AdditiveExpression	( q0 << half_bits ) + q1		5239877	1		+			
ANR	5240034	ShiftExpression	q0 << half_bits		5239877	0		<<			
ANR	5240035	Identifier	q0		5239877	0					
ANR	5240036	Identifier	half_bits		5239877	1					
ANR	5240037	Identifier	q1		5239877	1					
ANR	5240038	ExpressionStatement	mincr ( mnc )	751:12:20218:20228	5239877	4	True				
ANR	5240039	CallExpression	mincr ( mnc )		5239877	0					
ANR	5240040	Callee	mincr		5239877	0					
ANR	5240041	Identifier	mincr		5239877	0					
ANR	5240042	ArgumentList	mnc		5239877	1					
ANR	5240043	Argument	mnc		5239877	0					
ANR	5240044	Identifier	mnc		5239877	0					
ANR	5240045	ReturnStatement	return ( signed_A >= 0 ? Q : q1 * C == rem ? - Q : ~Q ) ;	753:12:20315:20367	5239877	5	True				
ANR	5240046	ConditionalExpression	signed_A >= 0 ? Q : q1 * C == rem ? - Q : ~Q		5239877	0					
ANR	5240047	Condition	signed_A >= 0		5239877	0					
ANR	5240048	RelationalExpression	signed_A >= 0		5239877	0		>=			
ANR	5240049	Identifier	signed_A		5239877	0					
ANR	5240050	PrimaryExpression	0		5239877	1					
ANR	5240051	Identifier	Q		5239877	1					
ANR	5240052	ConditionalExpression	q1 * C == rem ? - Q : ~Q		5239877	2					
ANR	5240053	Condition	q1 * C == rem		5239877	0					
ANR	5240054	EqualityExpression	q1 * C == rem		5239877	0		==			
ANR	5240055	MultiplicativeExpression	q1 * C		5239877	0		*			
ANR	5240056	Identifier	q1		5239877	0					
ANR	5240057	Identifier	C		5239877	1					
ANR	5240058	Identifier	rem		5239877	1					
ANR	5240059	UnaryOperationExpression	- Q		5239877	1					
ANR	5240060	UnaryOperator	-		5239877	0					
ANR	5240061	Identifier	Q		5239877	1					
ANR	5240062	Identifier	~Q		5239877	2					
ANR	5240063	ExpressionStatement	msw = p1 >> half_bits	755:8:20387:20408	5239877	4	True				
ANR	5240064	AssignmentExpression	msw = p1 >> half_bits		5239877	0		=			
ANR	5240065	Identifier	msw		5239877	0					
ANR	5240066	ShiftExpression	p1 >> half_bits		5239877	1		>>			
ANR	5240067	Identifier	p1		5239877	0					
ANR	5240068	Identifier	half_bits		5239877	1					
ANR	5240069	ExpressionStatement	mincr ( manb )	756:8:20418:20429	5239877	5	True				
ANR	5240070	CallExpression	mincr ( manb )		5239877	0					
ANR	5240071	Callee	mincr		5239877	0					
ANR	5240072	Identifier	mincr		5239877	0					
ANR	5240073	ArgumentList	manb		5239877	1					
ANR	5240074	Argument	manb		5239877	0					
ANR	5240075	Identifier	manb		5239877	0					
ANR	5240076	ElseStatement	else		5239877	0					
ANR	5240077	IfStatement	if ( A <= half_mask )		5239877	0					
ANR	5240078	Condition	A <= half_mask	757:15:20446:20459	5239877	0	True				
ANR	5240079	RelationalExpression	A <= half_mask		5239877	0		<=			
ANR	5240080	Identifier	A		5239877	0					
ANR	5240081	Identifier	half_mask		5239877	1					
ANR	5240082	CompoundStatement		35:31:1158:1158	5239877	1					
ANR	5240083	ExpressionStatement	p1 = A * ( B >> half_bits )	758:8:20472:20497	5239877	0	True				
ANR	5240084	AssignmentExpression	p1 = A * ( B >> half_bits )		5239877	0		=			
ANR	5240085	Identifier	p1		5239877	0					
ANR	5240086	MultiplicativeExpression	A * ( B >> half_bits )		5239877	1		*			
ANR	5240087	Identifier	A		5239877	0					
ANR	5240088	ShiftExpression	B >> half_bits		5239877	1		>>			
ANR	5240089	Identifier	B		5239877	0					
ANR	5240090	Identifier	half_bits		5239877	1					
ANR	5240091	ExpressionStatement	msw = p1 >> half_bits	759:8:20507:20528	5239877	1	True				
ANR	5240092	AssignmentExpression	msw = p1 >> half_bits		5239877	0		=			
ANR	5240093	Identifier	msw		5239877	0					
ANR	5240094	ShiftExpression	p1 >> half_bits		5239877	1		>>			
ANR	5240095	Identifier	p1		5239877	0					
ANR	5240096	Identifier	half_bits		5239877	1					
ANR	5240097	ExpressionStatement	lsw = A * ( B & half_mask )	760:8:20538:20563	5239877	2	True				
ANR	5240098	AssignmentExpression	lsw = A * ( B & half_mask )		5239877	0		=			
ANR	5240099	Identifier	lsw		5239877	0					
ANR	5240100	MultiplicativeExpression	A * ( B & half_mask )		5239877	1		*			
ANR	5240101	Identifier	A		5239877	0					
ANR	5240102	BitAndExpression	B & half_mask		5239877	1		&			
ANR	5240103	Identifier	B		5239877	0					
ANR	5240104	Identifier	half_mask		5239877	1					
ANR	5240105	ExpressionStatement	mincr ( mnab )	761:8:20573:20584	5239877	3	True				
ANR	5240106	CallExpression	mincr ( mnab )		5239877	0					
ANR	5240107	Callee	mincr		5239877	0					
ANR	5240108	Identifier	mincr		5239877	0					
ANR	5240109	ArgumentList	mnab		5239877	1					
ANR	5240110	Argument	mnab		5239877	0					
ANR	5240111	Identifier	mnab		5239877	0					
ANR	5240112	ElseStatement	else		5239877	0					
ANR	5240113	CompoundStatement		45:8:1514:1537	5239877	0					
ANR	5240114	IdentifierDeclStatement	ulong lo_A = A & half_mask ;	763:8:20672:20698	5239877	0	True				
ANR	5240115	IdentifierDecl	lo_A = A & half_mask		5239877	0					
ANR	5240116	IdentifierDeclType	ulong		5239877	0					
ANR	5240117	Identifier	lo_A		5239877	1					
ANR	5240118	AssignmentExpression	lo_A = A & half_mask		5239877	2		=			
ANR	5240119	Identifier	lo_A		5239877	0					
ANR	5240120	BitAndExpression	A & half_mask		5239877	1		&			
ANR	5240121	Identifier	A		5239877	0					
ANR	5240122	Identifier	half_mask		5239877	1					
ANR	5240123	IdentifierDeclStatement	ulong hi_A = A >> half_bits ;	764:8:20708:20735	5239877	1	True				
ANR	5240124	IdentifierDecl	hi_A = A >> half_bits		5239877	0					
ANR	5240125	IdentifierDeclType	ulong		5239877	0					
ANR	5240126	Identifier	hi_A		5239877	1					
ANR	5240127	AssignmentExpression	hi_A = A >> half_bits		5239877	2		=			
ANR	5240128	Identifier	hi_A		5239877	0					
ANR	5240129	ShiftExpression	A >> half_bits		5239877	1		>>			
ANR	5240130	Identifier	A		5239877	0					
ANR	5240131	Identifier	half_bits		5239877	1					
ANR	5240132	IdentifierDeclStatement	ulong lo_B = B & half_mask ;	765:8:20745:20771	5239877	2	True				
ANR	5240133	IdentifierDecl	lo_B = B & half_mask		5239877	0					
ANR	5240134	IdentifierDeclType	ulong		5239877	0					
ANR	5240135	Identifier	lo_B		5239877	1					
ANR	5240136	AssignmentExpression	lo_B = B & half_mask		5239877	2		=			
ANR	5240137	Identifier	lo_B		5239877	0					
ANR	5240138	BitAndExpression	B & half_mask		5239877	1		&			
ANR	5240139	Identifier	B		5239877	0					
ANR	5240140	Identifier	half_mask		5239877	1					
ANR	5240141	IdentifierDeclStatement	ulong hi_B = B >> half_bits ;	766:8:20781:20808	5239877	3	True				
ANR	5240142	IdentifierDecl	hi_B = B >> half_bits		5239877	0					
ANR	5240143	IdentifierDeclType	ulong		5239877	0					
ANR	5240144	Identifier	hi_B		5239877	1					
ANR	5240145	AssignmentExpression	hi_B = B >> half_bits		5239877	2		=			
ANR	5240146	Identifier	hi_B		5239877	0					
ANR	5240147	ShiftExpression	B >> half_bits		5239877	1		>>			
ANR	5240148	Identifier	B		5239877	0					
ANR	5240149	Identifier	half_bits		5239877	1					
ANR	5240150	IdentifierDeclStatement	ulong p1x = hi_A * lo_B ;	767:8:20818:20841	5239877	4	True				
ANR	5240151	IdentifierDecl	p1x = hi_A * lo_B		5239877	0					
ANR	5240152	IdentifierDeclType	ulong		5239877	0					
ANR	5240153	Identifier	p1x		5239877	1					
ANR	5240154	AssignmentExpression	p1x = hi_A * lo_B		5239877	2		=			
ANR	5240155	Identifier	p1x		5239877	0					
ANR	5240156	MultiplicativeExpression	hi_A * lo_B		5239877	1		*			
ANR	5240157	Identifier	hi_A		5239877	0					
ANR	5240158	Identifier	lo_B		5239877	1					
ANR	5240159	ExpressionStatement	msw = hi_A * hi_B	769:8:20852:20869	5239877	5	True				
ANR	5240160	AssignmentExpression	msw = hi_A * hi_B		5239877	0		=			
ANR	5240161	Identifier	msw		5239877	0					
ANR	5240162	MultiplicativeExpression	hi_A * hi_B		5239877	1		*			
ANR	5240163	Identifier	hi_A		5239877	0					
ANR	5240164	Identifier	hi_B		5239877	1					
ANR	5240165	ExpressionStatement	lsw = lo_A * lo_B	770:8:20879:20896	5239877	6	True				
ANR	5240166	AssignmentExpression	lsw = lo_A * lo_B		5239877	0		=			
ANR	5240167	Identifier	lsw		5239877	0					
ANR	5240168	MultiplicativeExpression	lo_A * lo_B		5239877	1		*			
ANR	5240169	Identifier	lo_A		5239877	0					
ANR	5240170	Identifier	lo_B		5239877	1					
ANR	5240171	ExpressionStatement	p1 = lo_A * hi_B	771:8:20906:20922	5239877	7	True				
ANR	5240172	AssignmentExpression	p1 = lo_A * hi_B		5239877	0		=			
ANR	5240173	Identifier	p1		5239877	0					
ANR	5240174	MultiplicativeExpression	lo_A * hi_B		5239877	1		*			
ANR	5240175	Identifier	lo_A		5239877	0					
ANR	5240176	Identifier	hi_B		5239877	1					
ANR	5240177	IfStatement	if ( p1 > max_ulong - p1x )		5239877	8					
ANR	5240178	Condition	p1 > max_ulong - p1x	772:12:20936:20955	5239877	0	True				
ANR	5240179	RelationalExpression	p1 > max_ulong - p1x		5239877	0		>			
ANR	5240180	Identifier	p1		5239877	0					
ANR	5240181	AdditiveExpression	max_ulong - p1x		5239877	1		-			
ANR	5240182	Identifier	max_ulong		5239877	0					
ANR	5240183	Identifier	p1x		5239877	1					
ANR	5240184	ExpressionStatement	msw += 1L << half_bits	773:12:20970:20992	5239877	1	True				
ANR	5240185	AssignmentExpression	msw += 1L << half_bits		5239877	0		+=			
ANR	5240186	Identifier	msw		5239877	0					
ANR	5240187	ShiftExpression	1L << half_bits		5239877	1		<<			
ANR	5240188	PrimaryExpression	1L		5239877	0					
ANR	5240189	Identifier	half_bits		5239877	1					
ANR	5240190	ExpressionStatement	p1 += p1x	774:8:21002:21011	5239877	9	True				
ANR	5240191	AssignmentExpression	p1 += p1x		5239877	0		+=			
ANR	5240192	Identifier	p1		5239877	0					
ANR	5240193	Identifier	p1x		5239877	1					
ANR	5240194	ExpressionStatement	msw += p1 >> half_bits	775:8:21021:21043	5239877	10	True				
ANR	5240195	AssignmentExpression	msw += p1 >> half_bits		5239877	0		+=			
ANR	5240196	Identifier	msw		5239877	0					
ANR	5240197	ShiftExpression	p1 >> half_bits		5239877	1		>>			
ANR	5240198	Identifier	p1		5239877	0					
ANR	5240199	Identifier	half_bits		5239877	1					
ANR	5240200	ExpressionStatement	mincr ( mab )	776:8:21053:21063	5239877	11	True				
ANR	5240201	CallExpression	mincr ( mab )		5239877	0					
ANR	5240202	Callee	mincr		5239877	0					
ANR	5240203	Identifier	mincr		5239877	0					
ANR	5240204	ArgumentList	mab		5239877	1					
ANR	5240205	Argument	mab		5239877	0					
ANR	5240206	Identifier	mab		5239877	0					
ANR	5240207	ExpressionStatement	p1 &= half_mask	780:4:21174:21189	5239877	5	True				
ANR	5240208	AssignmentExpression	p1 &= half_mask		5239877	0		&=			
ANR	5240209	Identifier	p1		5239877	0					
ANR	5240210	Identifier	half_mask		5239877	1					
ANR	5240211	ExpressionStatement	p1 <<= half_bits	782:4:21202:21218	5239877	6	True				
ANR	5240212	AssignmentExpression	p1 <<= half_bits		5239877	0		<<=			
ANR	5240213	Identifier	p1		5239877	0					
ANR	5240214	Identifier	half_bits		5239877	1					
ANR	5240215	IfStatement	if ( p1 > max_ulong - lsw )		5239877	7					
ANR	5240216	Condition	p1 > max_ulong - lsw	783:8:21228:21247	5239877	0	True				
ANR	5240217	RelationalExpression	p1 > max_ulong - lsw		5239877	0		>			
ANR	5240218	Identifier	p1		5239877	0					
ANR	5240219	AdditiveExpression	max_ulong - lsw		5239877	1		-			
ANR	5240220	Identifier	max_ulong		5239877	0					
ANR	5240221	Identifier	lsw		5239877	1					
ANR	5240222	ExpressionStatement	msw ++	784:8:21258:21263	5239877	1	True				
ANR	5240223	PostIncDecOperationExpression	msw ++		5239877	0					
ANR	5240224	Identifier	msw		5239877	0					
ANR	5240225	IncDec	++		5239877	1					
ANR	5240226	ExpressionStatement	lsw += p1	785:4:21269:21278	5239877	8	True				
ANR	5240227	AssignmentExpression	lsw += p1		5239877	0		+=			
ANR	5240228	Identifier	lsw		5239877	0					
ANR	5240229	Identifier	p1		5239877	1					
ANR	5240230	CompoundStatement		71:8:2234:2247	5239877	9					
ANR	5240231	IdentifierDeclStatement	ulong denom = C ;	792:8:21513:21528	5239877	0	True				
ANR	5240232	IdentifierDecl	denom = C		5239877	0					
ANR	5240233	IdentifierDeclType	ulong		5239877	0					
ANR	5240234	Identifier	denom		5239877	1					
ANR	5240235	AssignmentExpression	denom = C		5239877	2		=			
ANR	5240236	Identifier	C		5239877	0					
ANR	5240237	Identifier	C		5239877	1					
ANR	5240238	IdentifierDeclStatement	int shift = 0 ;	793:8:21538:21551	5239877	1	True				
ANR	5240239	IdentifierDecl	shift = 0		5239877	0					
ANR	5240240	IdentifierDeclType	int		5239877	0					
ANR	5240241	Identifier	shift		5239877	1					
ANR	5240242	AssignmentExpression	shift = 0		5239877	2		=			
ANR	5240243	Identifier	shift		5239877	0					
ANR	5240244	PrimaryExpression	0		5239877	1					
ANR	5240245	Statement	define	795:1:21555:21560	5239877	2	True				
ANR	5240246	Statement	bits_4th	795:8:21562:21569	5239877	3	True				
ANR	5240247	Statement	(	795:17:21571:21571	5239877	4	True				
ANR	5240248	Statement	num_bits	795:18:21572:21579	5239877	5	True				
ANR	5240249	Statement	/	795:27:21581:21581	5239877	6	True				
ANR	5240250	Statement	4	795:29:21583:21583	5239877	7	True				
ANR	5240251	Statement	)	795:30:21584:21584	5239877	8	True				
ANR	5240252	IfStatement	if ( denom < 1L << ( num_bits - bits_4th ) )		5239877	9					
ANR	5240253	Condition	denom < 1L << ( num_bits - bits_4th )	796:12:21598:21632	5239877	0	True				
ANR	5240254	RelationalExpression	denom < 1L << ( num_bits - bits_4th )		5239877	0		<			
ANR	5240255	Identifier	denom		5239877	0					
ANR	5240256	ShiftExpression	1L << ( num_bits - bits_4th )		5239877	1		<<			
ANR	5240257	PrimaryExpression	1L		5239877	0					
ANR	5240258	AdditiveExpression	num_bits - bits_4th		5239877	1		-			
ANR	5240259	Identifier	num_bits		5239877	0					
ANR	5240260	Identifier	bits_4th		5239877	1					
ANR	5240261	CompoundStatement		74:49:2331:2331	5239877	1					
ANR	5240262	ExpressionStatement	mincr ( mdq )	797:12:21649:21659	5239877	0	True				
ANR	5240263	CallExpression	mincr ( mdq )		5239877	0					
ANR	5240264	Callee	mincr		5239877	0					
ANR	5240265	Identifier	mincr		5239877	0					
ANR	5240266	ArgumentList	mdq		5239877	1					
ANR	5240267	Argument	mdq		5239877	0					
ANR	5240268	Identifier	mdq		5239877	0					
ANR	5240269	ExpressionStatement	"denom <<= bits_4th , shift += bits_4th"	798:12:21673:21710	5239877	1	True				
ANR	5240270	Expression	"denom <<= bits_4th , shift += bits_4th"		5239877	0					
ANR	5240271	AssignmentExpression	denom <<= bits_4th		5239877	0		<<=			
ANR	5240272	Identifier	denom		5239877	0					
ANR	5240273	Identifier	bits_4th		5239877	1					
ANR	5240274	AssignmentExpression	shift += bits_4th		5239877	1		+=			
ANR	5240275	Identifier	shift		5239877	0					
ANR	5240276	Identifier	bits_4th		5239877	1					
ANR	5240277	Statement	undef	800:1:21723:21727	5239877	10	True				
ANR	5240278	Statement	bits_4th	800:7:21729:21736	5239877	11	True				
ANR	5240279	Statement	define	801:1:21739:21744	5239877	12	True				
ANR	5240280	Statement	bits_8th	801:8:21746:21753	5239877	13	True				
ANR	5240281	Statement	(	801:17:21755:21755	5239877	14	True				
ANR	5240282	Statement	num_bits	801:18:21756:21763	5239877	15	True				
ANR	5240283	Statement	/	801:27:21765:21765	5239877	16	True				
ANR	5240284	Statement	8	801:29:21767:21767	5239877	17	True				
ANR	5240285	Statement	)	801:30:21768:21768	5239877	18	True				
ANR	5240286	IfStatement	if ( denom < 1L << ( num_bits - bits_8th ) )		5239877	19					
ANR	5240287	Condition	denom < 1L << ( num_bits - bits_8th )	802:12:21782:21816	5239877	0	True				
ANR	5240288	RelationalExpression	denom < 1L << ( num_bits - bits_8th )		5239877	0		<			
ANR	5240289	Identifier	denom		5239877	0					
ANR	5240290	ShiftExpression	1L << ( num_bits - bits_8th )		5239877	1		<<			
ANR	5240291	PrimaryExpression	1L		5239877	0					
ANR	5240292	AdditiveExpression	num_bits - bits_8th		5239877	1		-			
ANR	5240293	Identifier	num_bits		5239877	0					
ANR	5240294	Identifier	bits_8th		5239877	1					
ANR	5240295	CompoundStatement		80:49:2515:2515	5239877	1					
ANR	5240296	ExpressionStatement	mincr ( mde )	803:12:21833:21843	5239877	0	True				
ANR	5240297	CallExpression	mincr ( mde )		5239877	0					
ANR	5240298	Callee	mincr		5239877	0					
ANR	5240299	Identifier	mincr		5239877	0					
ANR	5240300	ArgumentList	mde		5239877	1					
ANR	5240301	Argument	mde		5239877	0					
ANR	5240302	Identifier	mde		5239877	0					
ANR	5240303	ExpressionStatement	"denom <<= bits_8th , shift += bits_8th"	804:12:21857:21894	5239877	1	True				
ANR	5240304	Expression	"denom <<= bits_8th , shift += bits_8th"		5239877	0					
ANR	5240305	AssignmentExpression	denom <<= bits_8th		5239877	0		<<=			
ANR	5240306	Identifier	denom		5239877	0					
ANR	5240307	Identifier	bits_8th		5239877	1					
ANR	5240308	AssignmentExpression	shift += bits_8th		5239877	1		+=			
ANR	5240309	Identifier	shift		5239877	0					
ANR	5240310	Identifier	bits_8th		5239877	1					
ANR	5240311	Statement	undef	806:1:21907:21911	5239877	20	True				
ANR	5240312	Statement	bits_8th	806:7:21913:21920	5239877	21	True				
ANR	5240313	WhileStatement	while ( ! ( denom & ( - 1L << ( num_bits - 1 ) ) ) )		5239877	22					
ANR	5240314	Condition	! ( denom & ( - 1L << ( num_bits - 1 ) ) )	807:15:21937:21970	5239877	0	True				
ANR	5240315	UnaryOperationExpression	! ( denom & ( - 1L << ( num_bits - 1 ) ) )		5239877	0					
ANR	5240316	UnaryOperator	!		5239877	0					
ANR	5240317	BitAndExpression	denom & ( - 1L << ( num_bits - 1 ) )		5239877	1		&			
ANR	5240318	Identifier	denom		5239877	0					
ANR	5240319	ShiftExpression	- 1L << ( num_bits - 1 )		5239877	1		<<			
ANR	5240320	UnaryOperationExpression	- 1L		5239877	0					
ANR	5240321	UnaryOperator	-		5239877	0					
ANR	5240322	PrimaryExpression	1L		5239877	1					
ANR	5240323	AdditiveExpression	num_bits - 1		5239877	1		-			
ANR	5240324	Identifier	num_bits		5239877	0					
ANR	5240325	PrimaryExpression	1		5239877	1					
ANR	5240326	CompoundStatement		85:51:2669:2669	5239877	1					
ANR	5240327	ExpressionStatement	mincr ( mds )	808:12:21987:21997	5239877	0	True				
ANR	5240328	CallExpression	mincr ( mds )		5239877	0					
ANR	5240329	Callee	mincr		5239877	0					
ANR	5240330	Identifier	mincr		5239877	0					
ANR	5240331	ArgumentList	mds		5239877	1					
ANR	5240332	Argument	mds		5239877	0					
ANR	5240333	Identifier	mds		5239877	0					
ANR	5240334	ExpressionStatement	"denom <<= 1 , ++ shift"	809:12:22011:22031	5239877	1	True				
ANR	5240335	Expression	"denom <<= 1 , ++ shift"		5239877	0					
ANR	5240336	AssignmentExpression	denom <<= 1		5239877	0		<<=			
ANR	5240337	Identifier	denom		5239877	0					
ANR	5240338	PrimaryExpression	1		5239877	1					
ANR	5240339	UnaryExpression	++ shift		5239877	1					
ANR	5240340	IncDec	++		5239877	0					
ANR	5240341	Identifier	shift		5239877	1					
ANR	5240342	ExpressionStatement	msw = ( msw << shift ) + ( lsw >> ( num_bits - shift ) )	811:8:22051:22101	5239877	23	True				
ANR	5240343	AssignmentExpression	msw = ( msw << shift ) + ( lsw >> ( num_bits - shift ) )		5239877	0		=			
ANR	5240344	Identifier	msw		5239877	0					
ANR	5240345	AdditiveExpression	( msw << shift ) + ( lsw >> ( num_bits - shift ) )		5239877	1		+			
ANR	5240346	ShiftExpression	msw << shift		5239877	0		<<			
ANR	5240347	Identifier	msw		5239877	0					
ANR	5240348	Identifier	shift		5239877	1					
ANR	5240349	ShiftExpression	lsw >> ( num_bits - shift )		5239877	1		>>			
ANR	5240350	Identifier	lsw		5239877	0					
ANR	5240351	AdditiveExpression	num_bits - shift		5239877	1		-			
ANR	5240352	Identifier	num_bits		5239877	0					
ANR	5240353	Identifier	shift		5239877	1					
ANR	5240354	ExpressionStatement	lsw <<= shift	812:8:22111:22124	5239877	24	True				
ANR	5240355	AssignmentExpression	lsw <<= shift		5239877	0		<<=			
ANR	5240356	Identifier	lsw		5239877	0					
ANR	5240357	Identifier	shift		5239877	1					
ANR	5240358	ExpressionStatement	lsw &= ( 1L << ( sizeof ( fixed ) * 8 ) ) - 1	814:8:22159:22197	5239877	25	True				
ANR	5240359	AssignmentExpression	lsw &= ( 1L << ( sizeof ( fixed ) * 8 ) ) - 1		5239877	0		&=			
ANR	5240360	Identifier	lsw		5239877	0					
ANR	5240361	AdditiveExpression	( 1L << ( sizeof ( fixed ) * 8 ) ) - 1		5239877	1		-			
ANR	5240362	ShiftExpression	1L << ( sizeof ( fixed ) * 8 )		5239877	0		<<			
ANR	5240363	PrimaryExpression	1L		5239877	0					
ANR	5240364	MultiplicativeExpression	sizeof ( fixed ) * 8		5239877	1		*			
ANR	5240365	SizeofExpression	sizeof ( fixed )		5239877	0					
ANR	5240366	Sizeof	sizeof		5239877	0					
ANR	5240367	SizeofOperand	fixed		5239877	1					
ANR	5240368	PrimaryExpression	8		5239877	1					
ANR	5240369	PrimaryExpression	1		5239877	1					
ANR	5240370	CompoundStatement		103:12:3256:3266	5239877	26					
ANR	5240371	IdentifierDeclStatement	ulong hi_D = denom >> half_bits ;	818:12:22279:22310	5239877	0	True				
ANR	5240372	IdentifierDecl	hi_D = denom >> half_bits		5239877	0					
ANR	5240373	IdentifierDeclType	ulong		5239877	0					
ANR	5240374	Identifier	hi_D		5239877	1					
ANR	5240375	AssignmentExpression	hi_D = denom >> half_bits		5239877	2		=			
ANR	5240376	Identifier	hi_D		5239877	0					
ANR	5240377	ShiftExpression	denom >> half_bits		5239877	1		>>			
ANR	5240378	Identifier	denom		5239877	0					
ANR	5240379	Identifier	half_bits		5239877	1					
ANR	5240380	IdentifierDeclStatement	ulong lo_D = denom & half_mask ;	819:12:22324:22354	5239877	1	True				
ANR	5240381	IdentifierDecl	lo_D = denom & half_mask		5239877	0					
ANR	5240382	IdentifierDeclType	ulong		5239877	0					
ANR	5240383	Identifier	lo_D		5239877	1					
ANR	5240384	AssignmentExpression	lo_D = denom & half_mask		5239877	2		=			
ANR	5240385	Identifier	lo_D		5239877	0					
ANR	5240386	BitAndExpression	denom & half_mask		5239877	1		&			
ANR	5240387	Identifier	denom		5239877	0					
ANR	5240388	Identifier	half_mask		5239877	1					
ANR	5240389	IdentifierDeclStatement	ulong hi_Q = ( ulong ) msw / hi_D ;	820:12:22368:22399	5239877	2	True				
ANR	5240390	IdentifierDecl	hi_Q = ( ulong ) msw / hi_D		5239877	0					
ANR	5240391	IdentifierDeclType	ulong		5239877	0					
ANR	5240392	Identifier	hi_Q		5239877	1					
ANR	5240393	AssignmentExpression	hi_Q = ( ulong ) msw / hi_D		5239877	2		=			
ANR	5240394	Identifier	hi_Q		5239877	0					
ANR	5240395	MultiplicativeExpression	( ulong ) msw / hi_D		5239877	1		/			
ANR	5240396	CastExpression	( ulong ) msw		5239877	0					
ANR	5240397	CastTarget	ulong		5239877	0					
ANR	5240398	Identifier	msw		5239877	1					
ANR	5240399	Identifier	hi_D		5239877	1					
ANR	5240400	IdentifierDeclStatement	ulong p0 = hi_Q * hi_D ;	823:12:22488:22510	5239877	3	True				
ANR	5240401	IdentifierDecl	p0 = hi_Q * hi_D		5239877	0					
ANR	5240402	IdentifierDeclType	ulong		5239877	0					
ANR	5240403	Identifier	p0		5239877	1					
ANR	5240404	AssignmentExpression	p0 = hi_Q * hi_D		5239877	2		=			
ANR	5240405	Identifier	p0		5239877	0					
ANR	5240406	MultiplicativeExpression	hi_Q * hi_D		5239877	1		*			
ANR	5240407	Identifier	hi_Q		5239877	0					
ANR	5240408	Identifier	hi_D		5239877	1					
ANR	5240409	IdentifierDeclStatement	ulong p1 = hi_Q * lo_D ;	824:12:22524:22546	5239877	4	True				
ANR	5240410	IdentifierDecl	p1 = hi_Q * lo_D		5239877	0					
ANR	5240411	IdentifierDeclType	ulong		5239877	0					
ANR	5240412	Identifier	p1		5239877	1					
ANR	5240413	AssignmentExpression	p1 = hi_Q * lo_D		5239877	2		=			
ANR	5240414	Identifier	p1		5239877	0					
ANR	5240415	MultiplicativeExpression	hi_Q * lo_D		5239877	1		*			
ANR	5240416	Identifier	hi_Q		5239877	0					
ANR	5240417	Identifier	lo_D		5239877	1					
ANR	5240418	IdentifierDeclStatement	ulong hi_P ;	825:12:22560:22570	5239877	5	True				
ANR	5240419	IdentifierDecl	hi_P		5239877	0					
ANR	5240420	IdentifierDeclType	ulong		5239877	0					
ANR	5240421	Identifier	hi_P		5239877	1					
ANR	5240422	WhileStatement	while ( ( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw ) )		5239877	6					
ANR	5240423	Condition	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )	827:19:22592:22705	5239877	0	True				
ANR	5240424	OrExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )		5239877	0		||			
ANR	5240425	RelationalExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw		5239877	0		>			
ANR	5240426	AssignmentExpression	hi_P = p0 + ( p1 >> half_bits )		5239877	0		=			
ANR	5240427	Identifier	hi_P		5239877	0					
ANR	5240428	AdditiveExpression	p0 + ( p1 >> half_bits )		5239877	1		+			
ANR	5240429	Identifier	p0		5239877	0					
ANR	5240430	ShiftExpression	p1 >> half_bits		5239877	1		>>			
ANR	5240431	Identifier	p1		5239877	0					
ANR	5240432	Identifier	half_bits		5239877	1					
ANR	5240433	Identifier	msw		5239877	1					
ANR	5240434	AndExpression	hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw		5239877	1		&&			
ANR	5240435	EqualityExpression	hi_P == msw		5239877	0		==			
ANR	5240436	Identifier	hi_P		5239877	0					
ANR	5240437	Identifier	msw		5239877	1					
ANR	5240438	RelationalExpression	( ( p1 & half_mask ) << half_bits ) > lsw		5239877	1		>			
ANR	5240439	ShiftExpression	( p1 & half_mask ) << half_bits		5239877	0		<<			
ANR	5240440	BitAndExpression	p1 & half_mask		5239877	0		&			
ANR	5240441	Identifier	p1		5239877	0					
ANR	5240442	Identifier	half_mask		5239877	1					
ANR	5240443	Identifier	half_bits		5239877	1					
ANR	5240444	Identifier	lsw		5239877	1					
ANR	5240445	CompoundStatement		107:18:3421:3421	5239877	1					
ANR	5240446	ExpressionStatement	-- hi_Q	830:16:22785:22791	5239877	0	True				
ANR	5240447	UnaryExpression	-- hi_Q		5239877	0					
ANR	5240448	IncDec	--		5239877	0					
ANR	5240449	Identifier	hi_Q		5239877	1					
ANR	5240450	ExpressionStatement	p0 -= hi_D	831:16:22809:22819	5239877	1	True				
ANR	5240451	AssignmentExpression	p0 -= hi_D		5239877	0		-=			
ANR	5240452	Identifier	p0		5239877	0					
ANR	5240453	Identifier	hi_D		5239877	1					
ANR	5240454	ExpressionStatement	p1 -= lo_D	832:16:22837:22847	5239877	2	True				
ANR	5240455	AssignmentExpression	p1 -= lo_D		5239877	0		-=			
ANR	5240456	Identifier	p1		5239877	0					
ANR	5240457	Identifier	lo_D		5239877	1					
ANR	5240458	ExpressionStatement	mincr ( mqh )	833:16:22865:22875	5239877	3	True				
ANR	5240459	CallExpression	mincr ( mqh )		5239877	0					
ANR	5240460	Callee	mincr		5239877	0					
ANR	5240461	Identifier	mincr		5239877	0					
ANR	5240462	ArgumentList	mqh		5239877	1					
ANR	5240463	Argument	mqh		5239877	0					
ANR	5240464	Identifier	mqh		5239877	0					
ANR	5240465	ExpressionStatement	p1 = ( p1 & half_mask ) << half_bits	835:12:22903:22937	5239877	7	True				
ANR	5240466	AssignmentExpression	p1 = ( p1 & half_mask ) << half_bits		5239877	0		=			
ANR	5240467	Identifier	p1		5239877	0					
ANR	5240468	ShiftExpression	( p1 & half_mask ) << half_bits		5239877	1		<<			
ANR	5240469	BitAndExpression	p1 & half_mask		5239877	0		&			
ANR	5240470	Identifier	p1		5239877	0					
ANR	5240471	Identifier	half_mask		5239877	1					
ANR	5240472	Identifier	half_bits		5239877	1					
ANR	5240473	IfStatement	if ( p1 > lsw )		5239877	8					
ANR	5240474	Condition	p1 > lsw	836:16:22955:22962	5239877	0	True				
ANR	5240475	RelationalExpression	p1 > lsw		5239877	0		>			
ANR	5240476	Identifier	p1		5239877	0					
ANR	5240477	Identifier	lsw		5239877	1					
ANR	5240478	ExpressionStatement	msw --	837:16:22981:22986	5239877	1	True				
ANR	5240479	PostIncDecOperationExpression	msw --		5239877	0					
ANR	5240480	Identifier	msw		5239877	0					
ANR	5240481	IncDec	--		5239877	1					
ANR	5240482	ExpressionStatement	lsw -= p1	838:12:23000:23009	5239877	9	True				
ANR	5240483	AssignmentExpression	lsw -= p1		5239877	0		-=			
ANR	5240484	Identifier	lsw		5239877	0					
ANR	5240485	Identifier	p1		5239877	1					
ANR	5240486	ExpressionStatement	msw -= hi_P	839:12:23023:23034	5239877	10	True				
ANR	5240487	AssignmentExpression	msw -= hi_P		5239877	0		-=			
ANR	5240488	Identifier	msw		5239877	0					
ANR	5240489	Identifier	hi_P		5239877	1					
ANR	5240490	ExpressionStatement	msw = ( msw << half_bits ) + ( lsw >> half_bits )	841:12:23109:23154	5239877	11	True				
ANR	5240491	AssignmentExpression	msw = ( msw << half_bits ) + ( lsw >> half_bits )		5239877	0		=			
ANR	5240492	Identifier	msw		5239877	0					
ANR	5240493	AdditiveExpression	( msw << half_bits ) + ( lsw >> half_bits )		5239877	1		+			
ANR	5240494	ShiftExpression	msw << half_bits		5239877	0		<<			
ANR	5240495	Identifier	msw		5239877	0					
ANR	5240496	Identifier	half_bits		5239877	1					
ANR	5240497	ShiftExpression	lsw >> half_bits		5239877	1		>>			
ANR	5240498	Identifier	lsw		5239877	0					
ANR	5240499	Identifier	half_bits		5239877	1					
ANR	5240500	ExpressionStatement	lsw &= half_mask	843:12:23193:23209	5239877	12	True				
ANR	5240501	AssignmentExpression	lsw &= half_mask		5239877	0		&=			
ANR	5240502	Identifier	lsw		5239877	0					
ANR	5240503	Identifier	half_mask		5239877	1					
ANR	5240504	ExpressionStatement	lsw <<= half_bits	845:12:23230:23247	5239877	13	True				
ANR	5240505	AssignmentExpression	lsw <<= half_bits		5239877	0		<<=			
ANR	5240506	Identifier	lsw		5239877	0					
ANR	5240507	Identifier	half_bits		5239877	1					
ANR	5240508	CompoundStatement		126:16:4024:4030	5239877	14					
ANR	5240509	IdentifierDeclStatement	ulong lo_Q = ( ulong ) msw / hi_D ;	847:16:23279:23310	5239877	0	True				
ANR	5240510	IdentifierDecl	lo_Q = ( ulong ) msw / hi_D		5239877	0					
ANR	5240511	IdentifierDeclType	ulong		5239877	0					
ANR	5240512	Identifier	lo_Q		5239877	1					
ANR	5240513	AssignmentExpression	lo_Q = ( ulong ) msw / hi_D		5239877	2		=			
ANR	5240514	Identifier	lo_Q		5239877	0					
ANR	5240515	MultiplicativeExpression	( ulong ) msw / hi_D		5239877	1		/			
ANR	5240516	CastExpression	( ulong ) msw		5239877	0					
ANR	5240517	CastTarget	ulong		5239877	0					
ANR	5240518	Identifier	msw		5239877	1					
ANR	5240519	Identifier	hi_D		5239877	1					
ANR	5240520	IdentifierDeclStatement	long Q ;	848:16:23328:23334	5239877	1	True				
ANR	5240521	IdentifierDecl	Q		5239877	0					
ANR	5240522	IdentifierDeclType	long		5239877	0					
ANR	5240523	Identifier	Q		5239877	1					
ANR	5240524	ExpressionStatement	p1 = lo_Q * lo_D	850:16:23353:23369	5239877	2	True				
ANR	5240525	AssignmentExpression	p1 = lo_Q * lo_D		5239877	0		=			
ANR	5240526	Identifier	p1		5239877	0					
ANR	5240527	MultiplicativeExpression	lo_Q * lo_D		5239877	1		*			
ANR	5240528	Identifier	lo_Q		5239877	0					
ANR	5240529	Identifier	lo_D		5239877	1					
ANR	5240530	ExpressionStatement	p0 = lo_Q * hi_D	851:16:23387:23403	5239877	3	True				
ANR	5240531	AssignmentExpression	p0 = lo_Q * hi_D		5239877	0		=			
ANR	5240532	Identifier	p0		5239877	0					
ANR	5240533	MultiplicativeExpression	lo_Q * hi_D		5239877	1		*			
ANR	5240534	Identifier	lo_Q		5239877	0					
ANR	5240535	Identifier	hi_D		5239877	1					
ANR	5240536	WhileStatement	while ( ( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw ) )		5239877	4					
ANR	5240537	Condition	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )	852:23:23428:23545	5239877	0	True				
ANR	5240538	OrExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )		5239877	0		||			
ANR	5240539	RelationalExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw		5239877	0		>			
ANR	5240540	AssignmentExpression	hi_P = p0 + ( p1 >> half_bits )		5239877	0		=			
ANR	5240541	Identifier	hi_P		5239877	0					
ANR	5240542	AdditiveExpression	p0 + ( p1 >> half_bits )		5239877	1		+			
ANR	5240543	Identifier	p0		5239877	0					
ANR	5240544	ShiftExpression	p1 >> half_bits		5239877	1		>>			
ANR	5240545	Identifier	p1		5239877	0					
ANR	5240546	Identifier	half_bits		5239877	1					
ANR	5240547	Identifier	msw		5239877	1					
ANR	5240548	AndExpression	hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw		5239877	1		&&			
ANR	5240549	EqualityExpression	hi_P == msw		5239877	0		==			
ANR	5240550	Identifier	hi_P		5239877	0					
ANR	5240551	Identifier	msw		5239877	1					
ANR	5240552	RelationalExpression	( ( p1 & half_mask ) << half_bits ) > lsw		5239877	1		>			
ANR	5240553	ShiftExpression	( p1 & half_mask ) << half_bits		5239877	0		<<			
ANR	5240554	BitAndExpression	p1 & half_mask		5239877	0		&			
ANR	5240555	Identifier	p1		5239877	0					
ANR	5240556	Identifier	half_mask		5239877	1					
ANR	5240557	Identifier	half_bits		5239877	1					
ANR	5240558	Identifier	lsw		5239877	1					
ANR	5240559	CompoundStatement		132:22:4265:4265	5239877	1					
ANR	5240560	ExpressionStatement	-- lo_Q	855:20:23629:23635	5239877	0	True				
ANR	5240561	UnaryExpression	-- lo_Q		5239877	0					
ANR	5240562	IncDec	--		5239877	0					
ANR	5240563	Identifier	lo_Q		5239877	1					
ANR	5240564	ExpressionStatement	p0 -= hi_D	856:20:23657:23667	5239877	1	True				
ANR	5240565	AssignmentExpression	p0 -= hi_D		5239877	0		-=			
ANR	5240566	Identifier	p0		5239877	0					
ANR	5240567	Identifier	hi_D		5239877	1					
ANR	5240568	ExpressionStatement	p1 -= lo_D	857:20:23689:23699	5239877	2	True				
ANR	5240569	AssignmentExpression	p1 -= lo_D		5239877	0		-=			
ANR	5240570	Identifier	p1		5239877	0					
ANR	5240571	Identifier	lo_D		5239877	1					
ANR	5240572	ExpressionStatement	mincr ( mql )	858:20:23721:23731	5239877	3	True				
ANR	5240573	CallExpression	mincr ( mql )		5239877	0					
ANR	5240574	Callee	mincr		5239877	0					
ANR	5240575	Identifier	mincr		5239877	0					
ANR	5240576	ArgumentList	mql		5239877	1					
ANR	5240577	Argument	mql		5239877	0					
ANR	5240578	Identifier	mql		5239877	0					
ANR	5240579	ExpressionStatement	Q = ( hi_Q << half_bits ) + lo_Q	860:16:23767:23797	5239877	5	True				
ANR	5240580	AssignmentExpression	Q = ( hi_Q << half_bits ) + lo_Q		5239877	0		=			
ANR	5240581	Identifier	Q		5239877	0					
ANR	5240582	AdditiveExpression	( hi_Q << half_bits ) + lo_Q		5239877	1		+			
ANR	5240583	ShiftExpression	hi_Q << half_bits		5239877	0		<<			
ANR	5240584	Identifier	hi_Q		5239877	0					
ANR	5240585	Identifier	half_bits		5239877	1					
ANR	5240586	Identifier	lo_Q		5239877	1					
ANR	5240587	ReturnStatement	return ( signed_A >= 0 ? Q : p0 | p1 ? ~Q : - Q ) ;	861:16:23815:23874	5239877	6	True				
ANR	5240588	ConditionalExpression	signed_A >= 0 ? Q : p0 | p1 ? ~Q : - Q		5239877	0					
ANR	5240589	Condition	signed_A >= 0		5239877	0					
ANR	5240590	RelationalExpression	signed_A >= 0		5239877	0		>=			
ANR	5240591	Identifier	signed_A		5239877	0					
ANR	5240592	PrimaryExpression	0		5239877	1					
ANR	5240593	Identifier	Q		5239877	1					
ANR	5240594	ConditionalExpression	p0 | p1 ? ~Q : - Q		5239877	2					
ANR	5240595	Condition	p0 | p1		5239877	0					
ANR	5240596	InclusiveOrExpression	p0 | p1		5239877	0		|			
ANR	5240597	Identifier	p0		5239877	0					
ANR	5240598	Identifier	p1		5239877	1					
ANR	5240599	Identifier	~Q		5239877	1					
ANR	5240600	UnaryOperationExpression	- Q		5239877	2					
ANR	5240601	UnaryOperator	-		5239877	0					
ANR	5240602	Identifier	Q		5239877	1					
ANR	5240603	ReturnType	fixed		5239877	1					
ANR	5240604	Identifier	fixed_mult_quo		5239877	2					
ANR	5240605	ParameterList	"fixed signed_A , fixed B , fixed C"		5239877	3					
ANR	5240606	Parameter	fixed signed_A	722:15:19269:19282	5239877	0	True				
ANR	5240607	ParameterType	fixed		5239877	0					
ANR	5240608	Identifier	signed_A		5239877	1					
ANR	5240609	Parameter	fixed B	722:31:19285:19291	5239877	1	True				
ANR	5240610	ParameterType	fixed		5239877	0					
ANR	5240611	Identifier	B		5239877	1					
ANR	5240612	Parameter	fixed C	722:40:19294:19300	5239877	2	True				
ANR	5240613	ParameterType	fixed		5239877	0					
ANR	5240614	Identifier	C		5239877	1					
ANR	5240615	CFGEntryNode	ENTRY		5239877		True				
ANR	5240616	CFGExitNode	EXIT		5239877		True				
ANR	5240617	Symbol	p0		5239877						
ANR	5240618	Symbol	A		5239877						
ANR	5240619	Symbol	p1		5239877						
ANR	5240620	Symbol	B		5239877						
ANR	5240621	Symbol	C		5239877						
ANR	5240622	Symbol	half_mask		5239877						
ANR	5240623	Symbol	mqh		5239877						
ANR	5240624	Symbol	shift		5239877						
ANR	5240625	Symbol	signed_A		5239877						
ANR	5240626	Symbol	mql		5239877						
ANR	5240627	Symbol	mab		5239877						
ANR	5240628	Symbol	msw		5239877						
ANR	5240629	Symbol	P		5239877						
ANR	5240630	Symbol	lsw		5239877						
ANR	5240631	Symbol	Q		5239877						
ANR	5240632	Symbol	~Q		5239877						
ANR	5240633	Symbol	p1x		5239877						
ANR	5240634	Symbol	rem		5239877						
ANR	5240635	Symbol	denom		5239877						
ANR	5240636	Symbol	q0		5239877						
ANR	5240637	Symbol	q1		5239877						
ANR	5240638	Symbol	hi_P		5239877						
ANR	5240639	Symbol	mnc		5239877						
ANR	5240640	Symbol	hi_Q		5239877						
ANR	5240641	Symbol	half_bits		5239877						
ANR	5240642	Symbol	mnanb		5239877						
ANR	5240643	Symbol	bits_8th		5239877						
ANR	5240644	Symbol	lo_Q		5239877						
ANR	5240645	Symbol	mde		5239877						
ANR	5240646	Symbol	mnab		5239877						
ANR	5240647	Symbol	hi_A		5239877						
ANR	5240648	Symbol	lo_B		5239877						
ANR	5240649	Symbol	hi_B		5239877						
ANR	5240650	Symbol	max_ulong		5239877						
ANR	5240651	Symbol	hi_D		5239877						
ANR	5240652	Symbol	lo_A		5239877						
ANR	5240653	Symbol	lo_D		5239877						
ANR	5240654	Symbol	manb		5239877						
ANR	5240655	Symbol	bits_4th		5239877						
ANR	5240656	Symbol	mdq		5239877						
ANR	5240657	Symbol	num_bits		5239877						
ANR	5240658	Symbol	mds		5239877						
ANR	5240659	Function	fixed_mult_quo	873:0:24106:25717							
ANR	5240660	FunctionDef	"fixed_mult_quo (fixed signed_A , fixed B , fixed C)"		5240659	0					
ANR	5240661	CompoundStatement		875:0:24161:25717	5240659	0					
ANR	5240662	Statement	define	879:1:24244:24249	5240659	0	True				
ANR	5240663	Statement	MAX_OTHER_FACTOR	879:8:24251:24266	5240659	1	True				
ANR	5240664	Statement	(	879:25:24268:24268	5240659	2	True				
ANR	5240665	Statement	1L	879:26:24269:24270	5240659	3	True				
ANR	5240666	Statement	<<	879:29:24272:24273	5240659	4	True				
ANR	5240667	Statement	MAX_OTHER_FACTOR_BITS	879:32:24275:24295	5240659	5	True				
ANR	5240668	Statement	)	879:53:24296:24296	5240659	6	True				
ANR	5240669	IfStatement	if ( B < MAX_OTHER_FACTOR || any_abs ( signed_A ) < MAX_OTHER_FACTOR )		5240659	7					
ANR	5240670	Condition	B < MAX_OTHER_FACTOR || any_abs ( signed_A ) < MAX_OTHER_FACTOR	880:8:24306:24365	5240659	0	True				
ANR	5240671	OrExpression	B < MAX_OTHER_FACTOR || any_abs ( signed_A ) < MAX_OTHER_FACTOR		5240659	0		||			
ANR	5240672	RelationalExpression	B < MAX_OTHER_FACTOR		5240659	0		<			
ANR	5240673	Identifier	B		5240659	0					
ANR	5240674	Identifier	MAX_OTHER_FACTOR		5240659	1					
ANR	5240675	RelationalExpression	any_abs ( signed_A ) < MAX_OTHER_FACTOR		5240659	1		<			
ANR	5240676	CallExpression	any_abs ( signed_A )		5240659	0					
ANR	5240677	Callee	any_abs		5240659	0					
ANR	5240678	Identifier	any_abs		5240659	0					
ANR	5240679	ArgumentList	signed_A		5240659	1					
ANR	5240680	Argument	signed_A		5240659	0					
ANR	5240681	Identifier	signed_A		5240659	0					
ANR	5240682	Identifier	MAX_OTHER_FACTOR		5240659	1					
ANR	5240683	CompoundStatement		6:70:206:206	5240659	1					
ANR	5240684	Statement	undef	881:1:24371:24375	5240659	0	True				
ANR	5240685	Statement	MAX_OTHER_FACTOR	881:7:24377:24392	5240659	1	True				
ANR	5240686	ReturnStatement	return ( fixed ) floor ( ( double ) signed_A * B / C ) ;	886:8:24520:24565	5240659	2	True				
ANR	5240687	CastExpression	( fixed ) floor ( ( double ) signed_A * B / C )		5240659	0					
ANR	5240688	CastTarget	fixed		5240659	0					
ANR	5240689	CallExpression	floor ( ( double ) signed_A * B / C )		5240659	1					
ANR	5240690	Callee	floor		5240659	0					
ANR	5240691	Identifier	floor		5240659	0					
ANR	5240692	ArgumentList	( double ) signed_A * B / C		5240659	1					
ANR	5240693	Argument	( double ) signed_A * B / C		5240659	0					
ANR	5240694	MultiplicativeExpression	( double ) signed_A * B / C		5240659	0		*			
ANR	5240695	CastExpression	( double ) signed_A		5240659	0					
ANR	5240696	CastTarget	double		5240659	0					
ANR	5240697	Identifier	signed_A		5240659	1					
ANR	5240698	MultiplicativeExpression	B / C		5240659	1		/			
ANR	5240699	Identifier	B		5240659	0					
ANR	5240700	Identifier	C		5240659	1					
ANR	5240701	ElseStatement	else		5240659	0					
ANR	5240702	CompoundStatement		27:8:1234:1317	5240659	0					
ANR	5240703	IdentifierDeclStatement	fixed q = ( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C ) ;	901:8:25396:25479	5240659	0	True				
ANR	5240704	IdentifierDecl	q = ( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		5240659	0					
ANR	5240705	IdentifierDeclType	fixed		5240659	0					
ANR	5240706	Identifier	q		5240659	1					
ANR	5240707	AssignmentExpression	q = ( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		5240659	2		=			
ANR	5240708	Identifier	q		5240659	0					
ANR	5240709	CastExpression	( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		5240659	1					
ANR	5240710	CastTarget	fixed		5240659	0					
ANR	5240711	CallExpression	floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		5240659	1					
ANR	5240712	Callee	floor		5240659	0					
ANR	5240713	Identifier	floor		5240659	0					
ANR	5240714	ArgumentList	( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C		5240659	1					
ANR	5240715	Argument	( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C		5240659	0					
ANR	5240716	MultiplicativeExpression	( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C		5240659	0		/			
ANR	5240717	AdditiveExpression	( double ) signed_A * B + ( 1L << ROUND_BITS )		5240659	0		+			
ANR	5240718	MultiplicativeExpression	( double ) signed_A * B		5240659	0		*			
ANR	5240719	CastExpression	( double ) signed_A		5240659	0					
ANR	5240720	CastTarget	double		5240659	0					
ANR	5240721	Identifier	signed_A		5240659	1					
ANR	5240722	Identifier	B		5240659	1					
ANR	5240723	ShiftExpression	1L << ROUND_BITS		5240659	1		<<			
ANR	5240724	PrimaryExpression	1L		5240659	0					
ANR	5240725	Identifier	ROUND_BITS		5240659	1					
ANR	5240726	Identifier	C		5240659	1					
ANR	5240727	IfStatement	if ( signed_A * B - q * C < 0 )		5240659	1					
ANR	5240728	Condition	signed_A * B - q * C < 0	908:12:25650:25673	5240659	0	True				
ANR	5240729	RelationalExpression	signed_A * B - q * C < 0		5240659	0		<			
ANR	5240730	AdditiveExpression	signed_A * B - q * C		5240659	0		-			
ANR	5240731	MultiplicativeExpression	signed_A * B		5240659	0		*			
ANR	5240732	Identifier	signed_A		5240659	0					
ANR	5240733	Identifier	B		5240659	1					
ANR	5240734	MultiplicativeExpression	q * C		5240659	1		*			
ANR	5240735	Identifier	q		5240659	0					
ANR	5240736	Identifier	C		5240659	1					
ANR	5240737	PrimaryExpression	0		5240659	1					
ANR	5240738	ExpressionStatement	-- q	909:12:25688:25691	5240659	1	True				
ANR	5240739	UnaryExpression	-- q		5240659	0					
ANR	5240740	IncDec	--		5240659	0					
ANR	5240741	Identifier	q		5240659	1					
ANR	5240742	ReturnStatement	return q ;	910:8:25701:25709	5240659	2	True				
ANR	5240743	Identifier	q		5240659	0					
ANR	5240744	ReturnType	fixed		5240659	1					
ANR	5240745	Identifier	fixed_mult_quo		5240659	2					
ANR	5240746	ParameterList	"fixed signed_A , fixed B , fixed C"		5240659	3					
ANR	5240747	Parameter	fixed signed_A	874:15:24127:24140	5240659	0	True				
ANR	5240748	ParameterType	fixed		5240659	0					
ANR	5240749	Identifier	signed_A		5240659	1					
ANR	5240750	Parameter	fixed B	874:31:24143:24149	5240659	1	True				
ANR	5240751	ParameterType	fixed		5240659	0					
ANR	5240752	Identifier	B		5240659	1					
ANR	5240753	Parameter	fixed C	874:40:24152:24158	5240659	2	True				
ANR	5240754	ParameterType	fixed		5240659	0					
ANR	5240755	Identifier	C		5240659	1					
ANR	5240756	CFGEntryNode	ENTRY		5240659		True				
ANR	5240757	CFGExitNode	EXIT		5240659		True				
ANR	5240758	Symbol	q		5240659						
ANR	5240759	Symbol	B		5240659						
ANR	5240760	Symbol	C		5240659						
ANR	5240761	Symbol	ROUND_BITS		5240659						
ANR	5240762	Symbol	signed_A		5240659						
ANR	5240763	Symbol	any_abs		5240659						
ANR	5240764	Symbol	MAX_OTHER_FACTOR		5240659						
ANR	5240765	Symbol	floor		5240659						
ANR	5240766	Function	gs_sqrt	916:1:25729:26102							
ANR	5240767	FunctionDef	"gs_sqrt (double x , const char * file , int line)"		5240766	0					
ANR	5240768	CompoundStatement		926:0:25922:26102	5240766	0					
ANR	5240769	IfStatement	if ( gs_debug_c ( '~' ) )		5240766	0					
ANR	5240770	Condition	gs_debug_c ( '~' )	928:8:25954:25968	5240766	0	True				
ANR	5240771	CallExpression	gs_debug_c ( '~' )		5240766	0					
ANR	5240772	Callee	gs_debug_c		5240766	0					
ANR	5240773	Identifier	gs_debug_c		5240766	0					
ANR	5240774	ArgumentList	'~'		5240766	1					
ANR	5240775	Argument	'~'		5240766	0					
ANR	5240776	PrimaryExpression	'~'		5240766	0					
ANR	5240777	CompoundStatement		3:25:48:48	5240766	1					
ANR	5240778	ExpressionStatement	"dprintf3 ( ""[~]sqrt(%g) at %s:%d\\n"" , x , ( const char * ) file , line )"	929:8:25981:26044	5240766	0	True				
ANR	5240779	CallExpression	"dprintf3 ( ""[~]sqrt(%g) at %s:%d\\n"" , x , ( const char * ) file , line )"		5240766	0					
ANR	5240780	Callee	dprintf3		5240766	0					
ANR	5240781	Identifier	dprintf3		5240766	0					
ANR	5240782	ArgumentList	"""[~]sqrt(%g) at %s:%d\\n"""		5240766	1					
ANR	5240783	Argument	"""[~]sqrt(%g) at %s:%d\\n"""		5240766	0					
ANR	5240784	PrimaryExpression	"""[~]sqrt(%g) at %s:%d\\n"""		5240766	0					
ANR	5240785	Argument	x		5240766	1					
ANR	5240786	Identifier	x		5240766	0					
ANR	5240787	Argument	( const char * ) file		5240766	2					
ANR	5240788	CastExpression	( const char * ) file		5240766	0					
ANR	5240789	CastTarget	const char *		5240766	0					
ANR	5240790	Identifier	file		5240766	1					
ANR	5240791	Argument	line		5240766	3					
ANR	5240792	Identifier	line		5240766	0					
ANR	5240793	ExpressionStatement	dflush ( )	930:8:26054:26062	5240766	1	True				
ANR	5240794	CallExpression	dflush ( )		5240766	0					
ANR	5240795	Callee	dflush		5240766	0					
ANR	5240796	Identifier	dflush		5240766	0					
ANR	5240797	ArgumentList			5240766	1					
ANR	5240798	ReturnStatement	return orig_sqrt ( x ) ;	933:4:26081:26100	5240766	1	True				
ANR	5240799	CallExpression	orig_sqrt ( x )		5240766	0					
ANR	5240800	Callee	orig_sqrt		5240766	0					
ANR	5240801	Identifier	orig_sqrt		5240766	0					
ANR	5240802	ArgumentList	x		5240766	1					
ANR	5240803	Argument	x		5240766	0					
ANR	5240804	Identifier	x		5240766	0					
ANR	5240805	ReturnType	undef MAX_OTHER_FACTOR_BITS undef ROUND_BITS undef num_bits undef half_bits undef half_mask double		5240766	1					
ANR	5240806	Identifier	gs_sqrt		5240766	2					
ANR	5240807	ParameterList	"double x , const char * file , int line"		5240766	3					
ANR	5240808	Parameter	double x	925:8:25884:25891	5240766	0	True				
ANR	5240809	ParameterType	double		5240766	0					
ANR	5240810	Identifier	x		5240766	1					
ANR	5240811	Parameter	const char * file	925:18:25894:25909	5240766	1	True				
ANR	5240812	ParameterType	const char *		5240766	0					
ANR	5240813	Identifier	file		5240766	1					
ANR	5240814	Parameter	int line	925:36:25912:25919	5240766	2	True				
ANR	5240815	ParameterType	int		5240766	0					
ANR	5240816	Identifier	line		5240766	1					
ANR	5240817	CFGEntryNode	ENTRY		5240766		True				
ANR	5240818	CFGExitNode	EXIT		5240766		True				
ANR	5240819	Symbol	file		5240766						
ANR	5240820	Symbol	line		5240766						
ANR	5240821	Symbol	x		5240766						
ANR	5240822	Symbol	gs_debug_c		5240766						
ANR	5240823	Symbol	orig_sqrt		5240766						
ANR	5240824	DeclStmt									
ANR	5240825	Decl							const int	const int [ 5 ]	isincos
ANR	5240826	DeclStmt									
ANR	5240827	Decl							double	double	const_90_degrees
ANR	5240828	Function	gs_sin_degrees	945:0:26406:26760							
ANR	5240829	FunctionDef	gs_sin_degrees (double ang)		5240828	0					
ANR	5240830	CompoundStatement		947:0:26440:26760	5240828	0					
ANR	5240831	IdentifierDeclStatement	double quot = ang / const_90_degrees ;	948:4:26446:26482	5240828	0	True				
ANR	5240832	IdentifierDecl	quot = ang / const_90_degrees		5240828	0					
ANR	5240833	IdentifierDeclType	double		5240828	0					
ANR	5240834	Identifier	quot		5240828	1					
ANR	5240835	AssignmentExpression	quot = ang / const_90_degrees		5240828	2		=			
ANR	5240836	Identifier	quot		5240828	0					
ANR	5240837	MultiplicativeExpression	ang / const_90_degrees		5240828	1		/			
ANR	5240838	Identifier	ang		5240828	0					
ANR	5240839	Identifier	const_90_degrees		5240828	1					
ANR	5240840	IfStatement	if ( floor ( quot ) == quot )		5240828	1					
ANR	5240841	Condition	floor ( quot ) == quot	950:8:26493:26511	5240828	0	True				
ANR	5240842	EqualityExpression	floor ( quot ) == quot		5240828	0		==			
ANR	5240843	CallExpression	floor ( quot )		5240828	0					
ANR	5240844	Callee	floor		5240828	0					
ANR	5240845	Identifier	floor		5240828	0					
ANR	5240846	ArgumentList	quot		5240828	1					
ANR	5240847	Argument	quot		5240828	0					
ANR	5240848	Identifier	quot		5240828	0					
ANR	5240849	Identifier	quot		5240828	1					
ANR	5240850	CompoundStatement		4:29:73:73	5240828	1					
ANR	5240851	ReturnStatement	"return isincos [ ( int ) fmod ( quot , 4.0 ) & 3 ] ;"	955:8:26676:26716	5240828	0	True				
ANR	5240852	ArrayIndexing	"isincos [ ( int ) fmod ( quot , 4.0 ) & 3 ]"		5240828	0					
ANR	5240853	Identifier	isincos		5240828	0					
ANR	5240854	BitAndExpression	"( int ) fmod ( quot , 4.0 ) & 3"		5240828	1		&			
ANR	5240855	CastExpression	"( int ) fmod ( quot , 4.0 )"		5240828	0					
ANR	5240856	CastTarget	int		5240828	0					
ANR	5240857	CallExpression	"fmod ( quot , 4.0 )"		5240828	1					
ANR	5240858	Callee	fmod		5240828	0					
ANR	5240859	Identifier	fmod		5240828	0					
ANR	5240860	ArgumentList	quot		5240828	1					
ANR	5240861	Argument	quot		5240828	0					
ANR	5240862	Identifier	quot		5240828	0					
ANR	5240863	Argument	4.0		5240828	1					
ANR	5240864	PrimaryExpression	4.0		5240828	0					
ANR	5240865	PrimaryExpression	3		5240828	1					
ANR	5240866	ReturnStatement	return sin ( ang * ( M_PI / 180 ) ) ;	957:4:26728:26758	5240828	2	True				
ANR	5240867	CallExpression	sin ( ang * ( M_PI / 180 ) )		5240828	0					
ANR	5240868	Callee	sin		5240828	0					
ANR	5240869	Identifier	sin		5240828	0					
ANR	5240870	ArgumentList	ang * ( M_PI / 180 )		5240828	1					
ANR	5240871	Argument	ang * ( M_PI / 180 )		5240828	0					
ANR	5240872	MultiplicativeExpression	ang * ( M_PI / 180 )		5240828	0		*			
ANR	5240873	Identifier	ang		5240828	0					
ANR	5240874	MultiplicativeExpression	M_PI / 180		5240828	1		/			
ANR	5240875	Identifier	M_PI		5240828	0					
ANR	5240876	PrimaryExpression	180		5240828	1					
ANR	5240877	ReturnType	double		5240828	1					
ANR	5240878	Identifier	gs_sin_degrees		5240828	2					
ANR	5240879	ParameterList	double ang		5240828	3					
ANR	5240880	Parameter	double ang	946:15:26428:26437	5240828	0	True				
ANR	5240881	ParameterType	double		5240828	0					
ANR	5240882	Identifier	ang		5240828	1					
ANR	5240883	CFGEntryNode	ENTRY		5240828		True				
ANR	5240884	CFGExitNode	EXIT		5240828		True				
ANR	5240885	Symbol	const_90_degrees		5240828						
ANR	5240886	Symbol	* isincos		5240828						
ANR	5240887	Symbol	sin		5240828						
ANR	5240888	Symbol	ang		5240828						
ANR	5240889	Symbol	quot		5240828						
ANR	5240890	Symbol	floor		5240828						
ANR	5240891	Symbol	* fmod		5240828						
ANR	5240892	Symbol	fmod		5240828						
ANR	5240893	Symbol	isincos		5240828						
ANR	5240894	Symbol	M_PI		5240828						
ANR	5240895	Function	gs_cos_degrees	960:0:26763:27018							
ANR	5240896	FunctionDef	gs_cos_degrees (double ang)		5240895	0					
ANR	5240897	CompoundStatement		962:0:26797:27018	5240895	0					
ANR	5240898	IdentifierDeclStatement	double quot = ang / const_90_degrees ;	963:4:26803:26839	5240895	0	True				
ANR	5240899	IdentifierDecl	quot = ang / const_90_degrees		5240895	0					
ANR	5240900	IdentifierDeclType	double		5240895	0					
ANR	5240901	Identifier	quot		5240895	1					
ANR	5240902	AssignmentExpression	quot = ang / const_90_degrees		5240895	2		=			
ANR	5240903	Identifier	quot		5240895	0					
ANR	5240904	MultiplicativeExpression	ang / const_90_degrees		5240895	1		/			
ANR	5240905	Identifier	ang		5240895	0					
ANR	5240906	Identifier	const_90_degrees		5240895	1					
ANR	5240907	IfStatement	if ( floor ( quot ) == quot )		5240895	1					
ANR	5240908	Condition	floor ( quot ) == quot	965:8:26850:26868	5240895	0	True				
ANR	5240909	EqualityExpression	floor ( quot ) == quot		5240895	0		==			
ANR	5240910	CallExpression	floor ( quot )		5240895	0					
ANR	5240911	Callee	floor		5240895	0					
ANR	5240912	Identifier	floor		5240895	0					
ANR	5240913	ArgumentList	quot		5240895	1					
ANR	5240914	Argument	quot		5240895	0					
ANR	5240915	Identifier	quot		5240895	0					
ANR	5240916	Identifier	quot		5240895	1					
ANR	5240917	CompoundStatement		4:29:73:73	5240895	1					
ANR	5240918	ReturnStatement	"return isincos [ ( ( int ) fmod ( quot , 4.0 ) & 3 ) + 1 ] ;"	967:8:26928:26974	5240895	0	True				
ANR	5240919	ArrayIndexing	"isincos [ ( ( int ) fmod ( quot , 4.0 ) & 3 ) + 1 ]"		5240895	0					
ANR	5240920	Identifier	isincos		5240895	0					
ANR	5240921	AdditiveExpression	"( ( int ) fmod ( quot , 4.0 ) & 3 ) + 1"		5240895	1		+			
ANR	5240922	BitAndExpression	"( int ) fmod ( quot , 4.0 ) & 3"		5240895	0		&			
ANR	5240923	CastExpression	"( int ) fmod ( quot , 4.0 )"		5240895	0					
ANR	5240924	CastTarget	int		5240895	0					
ANR	5240925	CallExpression	"fmod ( quot , 4.0 )"		5240895	1					
ANR	5240926	Callee	fmod		5240895	0					
ANR	5240927	Identifier	fmod		5240895	0					
ANR	5240928	ArgumentList	quot		5240895	1					
ANR	5240929	Argument	quot		5240895	0					
ANR	5240930	Identifier	quot		5240895	0					
ANR	5240931	Argument	4.0		5240895	1					
ANR	5240932	PrimaryExpression	4.0		5240895	0					
ANR	5240933	PrimaryExpression	3		5240895	1					
ANR	5240934	PrimaryExpression	1		5240895	1					
ANR	5240935	ReturnStatement	return cos ( ang * ( M_PI / 180 ) ) ;	969:4:26986:27016	5240895	2	True				
ANR	5240936	CallExpression	cos ( ang * ( M_PI / 180 ) )		5240895	0					
ANR	5240937	Callee	cos		5240895	0					
ANR	5240938	Identifier	cos		5240895	0					
ANR	5240939	ArgumentList	ang * ( M_PI / 180 )		5240895	1					
ANR	5240940	Argument	ang * ( M_PI / 180 )		5240895	0					
ANR	5240941	MultiplicativeExpression	ang * ( M_PI / 180 )		5240895	0		*			
ANR	5240942	Identifier	ang		5240895	0					
ANR	5240943	MultiplicativeExpression	M_PI / 180		5240895	1		/			
ANR	5240944	Identifier	M_PI		5240895	0					
ANR	5240945	PrimaryExpression	180		5240895	1					
ANR	5240946	ReturnType	double		5240895	1					
ANR	5240947	Identifier	gs_cos_degrees		5240895	2					
ANR	5240948	ParameterList	double ang		5240895	3					
ANR	5240949	Parameter	double ang	961:15:26785:26794	5240895	0	True				
ANR	5240950	ParameterType	double		5240895	0					
ANR	5240951	Identifier	ang		5240895	1					
ANR	5240952	CFGEntryNode	ENTRY		5240895		True				
ANR	5240953	CFGExitNode	EXIT		5240895		True				
ANR	5240954	Symbol	const_90_degrees		5240895						
ANR	5240955	Symbol	* isincos		5240895						
ANR	5240956	Symbol	cos		5240895						
ANR	5240957	Symbol	ang		5240895						
ANR	5240958	Symbol	quot		5240895						
ANR	5240959	Symbol	floor		5240895						
ANR	5240960	Symbol	fmod		5240895						
ANR	5240961	Symbol	* fmod		5240895						
ANR	5240962	Symbol	isincos		5240895						
ANR	5240963	Symbol	M_PI		5240895						
ANR	5240964	Function	gs_sincos_degrees	972:0:27021:27534							
ANR	5240965	FunctionDef	"gs_sincos_degrees (double ang , gs_sincos_t * psincos)"		5240964	0					
ANR	5240966	CompoundStatement		974:0:27079:27534	5240964	0					
ANR	5240967	IdentifierDeclStatement	double quot = ang / const_90_degrees ;	975:4:27085:27121	5240964	0	True				
ANR	5240968	IdentifierDecl	quot = ang / const_90_degrees		5240964	0					
ANR	5240969	IdentifierDeclType	double		5240964	0					
ANR	5240970	Identifier	quot		5240964	1					
ANR	5240971	AssignmentExpression	quot = ang / const_90_degrees		5240964	2		=			
ANR	5240972	Identifier	quot		5240964	0					
ANR	5240973	MultiplicativeExpression	ang / const_90_degrees		5240964	1		/			
ANR	5240974	Identifier	ang		5240964	0					
ANR	5240975	Identifier	const_90_degrees		5240964	1					
ANR	5240976	IfStatement	if ( floor ( quot ) == quot )		5240964	1					
ANR	5240977	Condition	floor ( quot ) == quot	977:8:27132:27150	5240964	0	True				
ANR	5240978	EqualityExpression	floor ( quot ) == quot		5240964	0		==			
ANR	5240979	CallExpression	floor ( quot )		5240964	0					
ANR	5240980	Callee	floor		5240964	0					
ANR	5240981	Identifier	floor		5240964	0					
ANR	5240982	ArgumentList	quot		5240964	1					
ANR	5240983	Argument	quot		5240964	0					
ANR	5240984	Identifier	quot		5240964	0					
ANR	5240985	Identifier	quot		5240964	1					
ANR	5240986	CompoundStatement		6:8:130:166	5240964	1					
ANR	5240987	IdentifierDeclStatement	"int quads = ( int ) fmod ( quot , 4.0 ) & 3 ;"	979:8:27210:27246	5240964	0	True				
ANR	5240988	IdentifierDecl	"quads = ( int ) fmod ( quot , 4.0 ) & 3"		5240964	0					
ANR	5240989	IdentifierDeclType	int		5240964	0					
ANR	5240990	Identifier	quads		5240964	1					
ANR	5240991	AssignmentExpression	"quads = ( int ) fmod ( quot , 4.0 ) & 3"		5240964	2		=			
ANR	5240992	Identifier	quads		5240964	0					
ANR	5240993	BitAndExpression	"( int ) fmod ( quot , 4.0 ) & 3"		5240964	1		&			
ANR	5240994	CastExpression	"( int ) fmod ( quot , 4.0 )"		5240964	0					
ANR	5240995	CastTarget	int		5240964	0					
ANR	5240996	CallExpression	"fmod ( quot , 4.0 )"		5240964	1					
ANR	5240997	Callee	fmod		5240964	0					
ANR	5240998	Identifier	fmod		5240964	0					
ANR	5240999	ArgumentList	quot		5240964	1					
ANR	5241000	Argument	quot		5240964	0					
ANR	5241001	Identifier	quot		5240964	0					
ANR	5241002	Argument	4.0		5240964	1					
ANR	5241003	PrimaryExpression	4.0		5240964	0					
ANR	5241004	PrimaryExpression	3		5240964	1					
ANR	5241005	ExpressionStatement	psincos -> sin = isincos [ quads ]	981:8:27257:27286	5240964	1	True				
ANR	5241006	AssignmentExpression	psincos -> sin = isincos [ quads ]		5240964	0		=			
ANR	5241007	PtrMemberAccess	psincos -> sin		5240964	0					
ANR	5241008	Identifier	psincos		5240964	0					
ANR	5241009	Identifier	sin		5240964	1					
ANR	5241010	ArrayIndexing	isincos [ quads ]		5240964	1					
ANR	5241011	Identifier	isincos		5240964	0					
ANR	5241012	Identifier	quads		5240964	1					
ANR	5241013	ExpressionStatement	psincos -> cos = isincos [ quads + 1 ]	982:8:27296:27329	5240964	2	True				
ANR	5241014	AssignmentExpression	psincos -> cos = isincos [ quads + 1 ]		5240964	0		=			
ANR	5241015	PtrMemberAccess	psincos -> cos		5240964	0					
ANR	5241016	Identifier	psincos		5240964	0					
ANR	5241017	Identifier	cos		5240964	1					
ANR	5241018	ArrayIndexing	isincos [ quads + 1 ]		5240964	1					
ANR	5241019	Identifier	isincos		5240964	0					
ANR	5241020	AdditiveExpression	quads + 1		5240964	1		+			
ANR	5241021	Identifier	quads		5240964	0					
ANR	5241022	PrimaryExpression	1		5240964	1					
ANR	5241023	ExpressionStatement	psincos -> orthogonal = true	983:8:27339:27365	5240964	3	True				
ANR	5241024	AssignmentExpression	psincos -> orthogonal = true		5240964	0		=			
ANR	5241025	PtrMemberAccess	psincos -> orthogonal		5240964	0					
ANR	5241026	Identifier	psincos		5240964	0					
ANR	5241027	Identifier	orthogonal		5240964	1					
ANR	5241028	Identifier	true		5240964	1					
ANR	5241029	ElseStatement	else		5240964	0					
ANR	5241030	CompoundStatement		12:8:308:340	5240964	0					
ANR	5241031	IdentifierDeclStatement	double arad = ang * ( M_PI / 180 ) ;	985:8:27388:27420	5240964	0	True				
ANR	5241032	IdentifierDecl	arad = ang * ( M_PI / 180 )		5240964	0					
ANR	5241033	IdentifierDeclType	double		5240964	0					
ANR	5241034	Identifier	arad		5240964	1					
ANR	5241035	AssignmentExpression	arad = ang * ( M_PI / 180 )		5240964	2		=			
ANR	5241036	Identifier	arad		5240964	0					
ANR	5241037	MultiplicativeExpression	ang * ( M_PI / 180 )		5240964	1		*			
ANR	5241038	Identifier	ang		5240964	0					
ANR	5241039	MultiplicativeExpression	M_PI / 180		5240964	1		/			
ANR	5241040	Identifier	M_PI		5240964	0					
ANR	5241041	PrimaryExpression	180		5240964	1					
ANR	5241042	ExpressionStatement	psincos -> sin = sin ( arad )	987:8:27431:27455	5240964	1	True				
ANR	5241043	AssignmentExpression	psincos -> sin = sin ( arad )		5240964	0		=			
ANR	5241044	PtrMemberAccess	psincos -> sin		5240964	0					
ANR	5241045	Identifier	psincos		5240964	0					
ANR	5241046	Identifier	sin		5240964	1					
ANR	5241047	CallExpression	sin ( arad )		5240964	1					
ANR	5241048	Callee	sin		5240964	0					
ANR	5241049	Identifier	sin		5240964	0					
ANR	5241050	ArgumentList	arad		5240964	1					
ANR	5241051	Argument	arad		5240964	0					
ANR	5241052	Identifier	arad		5240964	0					
ANR	5241053	ExpressionStatement	psincos -> cos = cos ( arad )	988:8:27465:27489	5240964	2	True				
ANR	5241054	AssignmentExpression	psincos -> cos = cos ( arad )		5240964	0		=			
ANR	5241055	PtrMemberAccess	psincos -> cos		5240964	0					
ANR	5241056	Identifier	psincos		5240964	0					
ANR	5241057	Identifier	cos		5240964	1					
ANR	5241058	CallExpression	cos ( arad )		5240964	1					
ANR	5241059	Callee	cos		5240964	0					
ANR	5241060	Identifier	cos		5240964	0					
ANR	5241061	ArgumentList	arad		5240964	1					
ANR	5241062	Argument	arad		5240964	0					
ANR	5241063	Identifier	arad		5240964	0					
ANR	5241064	ExpressionStatement	psincos -> orthogonal = false	989:8:27499:27526	5240964	3	True				
ANR	5241065	AssignmentExpression	psincos -> orthogonal = false		5240964	0		=			
ANR	5241066	PtrMemberAccess	psincos -> orthogonal		5240964	0					
ANR	5241067	Identifier	psincos		5240964	0					
ANR	5241068	Identifier	orthogonal		5240964	1					
ANR	5241069	Identifier	false		5240964	1					
ANR	5241070	ReturnType	void		5240964	1					
ANR	5241071	Identifier	gs_sincos_degrees		5240964	2					
ANR	5241072	ParameterList	"double ang , gs_sincos_t * psincos"		5240964	3					
ANR	5241073	Parameter	double ang	973:18:27044:27053	5240964	0	True				
ANR	5241074	ParameterType	double		5240964	0					
ANR	5241075	Identifier	ang		5240964	1					
ANR	5241076	Parameter	gs_sincos_t * psincos	973:30:27056:27076	5240964	1	True				
ANR	5241077	ParameterType	gs_sincos_t *		5240964	0					
ANR	5241078	Identifier	psincos		5240964	1					
ANR	5241079	CFGEntryNode	ENTRY		5240964		True				
ANR	5241080	CFGExitNode	EXIT		5240964		True				
ANR	5241081	Symbol	psincos -> sin		5240964						
ANR	5241082	Symbol	const_90_degrees		5240964						
ANR	5241083	Symbol	quads		5240964						
ANR	5241084	Symbol	* isincos		5240964						
ANR	5241085	Symbol	cos		5240964						
ANR	5241086	Symbol	false		5240964						
ANR	5241087	Symbol	fmod		5240964						
ANR	5241088	Symbol	psincos		5240964						
ANR	5241089	Symbol	M_PI		5240964						
ANR	5241090	Symbol	psincos -> cos		5240964						
ANR	5241091	Symbol	true		5240964						
ANR	5241092	Symbol	* quads		5240964						
ANR	5241093	Symbol	arad		5240964						
ANR	5241094	Symbol	sin		5240964						
ANR	5241095	Symbol	ang		5240964						
ANR	5241096	Symbol	* psincos		5240964						
ANR	5241097	Symbol	quot		5240964						
ANR	5241098	Symbol	floor		5240964						
ANR	5241099	Symbol	isincos		5240964						
ANR	5241100	Symbol	psincos -> orthogonal		5240964						
ANR	5241101	Function	gs_atan2_degrees	998:0:27702:28093							
ANR	5241102	FunctionDef	"gs_atan2_degrees (double y , double x , double * pangle)"		5241101	0					
ANR	5241103	CompoundStatement		1000:0:27759:28093	5241101	0					
ANR	5241104	IfStatement	if ( y == 0 )		5241101	0					
ANR	5241105	Condition	y == 0	1001:8:27769:27774	5241101	0	True				
ANR	5241106	EqualityExpression	y == 0		5241101	0		==			
ANR	5241107	Identifier	y		5241101	0					
ANR	5241108	PrimaryExpression	0		5241101	1					
ANR	5241109	CompoundStatement		2:16:17:17	5241101	1					
ANR	5241110	IfStatement	if ( x == 0 )		5241101	0					
ANR	5241111	Condition	x == 0	1002:12:27827:27832	5241101	0	True				
ANR	5241112	EqualityExpression	x == 0		5241101	0		==			
ANR	5241113	Identifier	x		5241101	0					
ANR	5241114	PrimaryExpression	0		5241101	1					
ANR	5241115	ExpressionStatement	return_error ( gs_error_undefinedresult )	1003:12:27847:27885	5241101	1	True				
ANR	5241116	CallExpression	return_error ( gs_error_undefinedresult )		5241101	0					
ANR	5241117	Callee	return_error		5241101	0					
ANR	5241118	Identifier	return_error		5241101	0					
ANR	5241119	ArgumentList	gs_error_undefinedresult		5241101	1					
ANR	5241120	Argument	gs_error_undefinedresult		5241101	0					
ANR	5241121	Identifier	gs_error_undefinedresult		5241101	0					
ANR	5241122	ExpressionStatement	* pangle = ( x < 0 ? 180 : 0 )	1004:8:27895:27922	5241101	1	True				
ANR	5241123	AssignmentExpression	* pangle = ( x < 0 ? 180 : 0 )		5241101	0		=			
ANR	5241124	UnaryOperationExpression	* pangle		5241101	0					
ANR	5241125	UnaryOperator	*		5241101	0					
ANR	5241126	Identifier	pangle		5241101	1					
ANR	5241127	ConditionalExpression	x < 0 ? 180 : 0		5241101	1					
ANR	5241128	Condition	x < 0		5241101	0					
ANR	5241129	RelationalExpression	x < 0		5241101	0		<			
ANR	5241130	Identifier	x		5241101	0					
ANR	5241131	PrimaryExpression	0		5241101	1					
ANR	5241132	PrimaryExpression	180		5241101	1					
ANR	5241133	PrimaryExpression	0		5241101	2					
ANR	5241134	ElseStatement	else		5241101	0					
ANR	5241135	CompoundStatement		7:8:185:233	5241101	0					
ANR	5241136	IdentifierDeclStatement	"double result = atan2 ( y , x ) * radians_to_degrees ;"	1006:8:27945:27993	5241101	0	True				
ANR	5241137	IdentifierDecl	"result = atan2 ( y , x ) * radians_to_degrees"		5241101	0					
ANR	5241138	IdentifierDeclType	double		5241101	0					
ANR	5241139	Identifier	result		5241101	1					
ANR	5241140	AssignmentExpression	"result = atan2 ( y , x ) * radians_to_degrees"		5241101	2		=			
ANR	5241141	Identifier	result		5241101	0					
ANR	5241142	MultiplicativeExpression	"atan2 ( y , x ) * radians_to_degrees"		5241101	1		*			
ANR	5241143	CallExpression	"atan2 ( y , x )"		5241101	0					
ANR	5241144	Callee	atan2		5241101	0					
ANR	5241145	Identifier	atan2		5241101	0					
ANR	5241146	ArgumentList	y		5241101	1					
ANR	5241147	Argument	y		5241101	0					
ANR	5241148	Identifier	y		5241101	0					
ANR	5241149	Argument	x		5241101	1					
ANR	5241150	Identifier	x		5241101	0					
ANR	5241151	Identifier	radians_to_degrees		5241101	1					
ANR	5241152	IfStatement	if ( result < 0 )		5241101	1					
ANR	5241153	Condition	result < 0	1008:12:28008:28017	5241101	0	True				
ANR	5241154	RelationalExpression	result < 0		5241101	0		<			
ANR	5241155	Identifier	result		5241101	0					
ANR	5241156	PrimaryExpression	0		5241101	1					
ANR	5241157	ExpressionStatement	result += 360	1009:12:28032:28045	5241101	1	True				
ANR	5241158	AssignmentExpression	result += 360		5241101	0		+=			
ANR	5241159	Identifier	result		5241101	0					
ANR	5241160	PrimaryExpression	360		5241101	1					
ANR	5241161	ExpressionStatement	* pangle = result	1010:8:28055:28071	5241101	2	True				
ANR	5241162	AssignmentExpression	* pangle = result		5241101	0		=			
ANR	5241163	UnaryOperationExpression	* pangle		5241101	0					
ANR	5241164	UnaryOperator	*		5241101	0					
ANR	5241165	Identifier	pangle		5241101	1					
ANR	5241166	Identifier	result		5241101	1					
ANR	5241167	ReturnStatement	return 0 ;	1012:4:28083:28091	5241101	1	True				
ANR	5241168	PrimaryExpression	0		5241101	0					
ANR	5241169	ReturnType	int		5241101	1					
ANR	5241170	Identifier	gs_atan2_degrees		5241101	2					
ANR	5241171	ParameterList	"double y , double x , double * pangle"		5241101	3					
ANR	5241172	Parameter	double y	999:17:27723:27730	5241101	0	True				
ANR	5241173	ParameterType	double		5241101	0					
ANR	5241174	Identifier	y		5241101	1					
ANR	5241175	Parameter	double x	999:27:27733:27740	5241101	1	True				
ANR	5241176	ParameterType	double		5241101	0					
ANR	5241177	Identifier	x		5241101	1					
ANR	5241178	Parameter	double * pangle	999:37:27743:27756	5241101	2	True				
ANR	5241179	ParameterType	double *		5241101	0					
ANR	5241180	Identifier	pangle		5241101	1					
ANR	5241181	CFGEntryNode	ENTRY		5241101		True				
ANR	5241182	CFGExitNode	EXIT		5241101		True				
ANR	5241183	Symbol	result		5241101						
ANR	5241184	Symbol	x		5241101						
ANR	5241185	Symbol	y		5241101						
ANR	5241186	Symbol	pangle		5241101						
ANR	5241187	Symbol	* pangle		5241101						
ANR	5241188	Symbol	radians_to_degrees		5241101						
ANR	5241189	Symbol	gs_error_undefinedresult		5241101						
ANR	5241190	Symbol	atan2		5241101						
ANR	5241191	Function	gx_intersect_small_bars	1024:0:28538:32283							
ANR	5241192	FunctionDef	"gx_intersect_small_bars (fixed q0x , fixed q0y , fixed q1x , fixed q1y , fixed q2x , fixed q2y , fixed q3x , fixed q3y , fixed * ry , fixed * ey)"		5241191	0					
ANR	5241193	CompoundStatement		1027:0:28701:32283	5241191	0					
ANR	5241194	IdentifierDeclStatement	"fixed dx1 = q1x - q0x , dy1 = q1y - q0y ;"	1028:4:28707:28745	5241191	0	True				
ANR	5241195	IdentifierDecl	dx1 = q1x - q0x		5241191	0					
ANR	5241196	IdentifierDeclType	fixed		5241191	0					
ANR	5241197	Identifier	dx1		5241191	1					
ANR	5241198	AssignmentExpression	dx1 = q1x - q0x		5241191	2		=			
ANR	5241199	Identifier	dx1		5241191	0					
ANR	5241200	AdditiveExpression	q1x - q0x		5241191	1		-			
ANR	5241201	Identifier	q1x		5241191	0					
ANR	5241202	Identifier	q0x		5241191	1					
ANR	5241203	IdentifierDecl	dy1 = q1y - q0y		5241191	1					
ANR	5241204	IdentifierDeclType	fixed		5241191	0					
ANR	5241205	Identifier	dy1		5241191	1					
ANR	5241206	AssignmentExpression	dy1 = q1y - q0y		5241191	2		=			
ANR	5241207	Identifier	dy1		5241191	0					
ANR	5241208	AdditiveExpression	q1y - q0y		5241191	1		-			
ANR	5241209	Identifier	q1y		5241191	0					
ANR	5241210	Identifier	q0y		5241191	1					
ANR	5241211	IdentifierDeclStatement	"fixed dx2 = q2x - q0x , dy2 = q2y - q0y ;"	1029:4:28751:28789	5241191	1	True				
ANR	5241212	IdentifierDecl	dx2 = q2x - q0x		5241191	0					
ANR	5241213	IdentifierDeclType	fixed		5241191	0					
ANR	5241214	Identifier	dx2		5241191	1					
ANR	5241215	AssignmentExpression	dx2 = q2x - q0x		5241191	2		=			
ANR	5241216	Identifier	dx2		5241191	0					
ANR	5241217	AdditiveExpression	q2x - q0x		5241191	1		-			
ANR	5241218	Identifier	q2x		5241191	0					
ANR	5241219	Identifier	q0x		5241191	1					
ANR	5241220	IdentifierDecl	dy2 = q2y - q0y		5241191	1					
ANR	5241221	IdentifierDeclType	fixed		5241191	0					
ANR	5241222	Identifier	dy2		5241191	1					
ANR	5241223	AssignmentExpression	dy2 = q2y - q0y		5241191	2		=			
ANR	5241224	Identifier	dy2		5241191	0					
ANR	5241225	AdditiveExpression	q2y - q0y		5241191	1		-			
ANR	5241226	Identifier	q2y		5241191	0					
ANR	5241227	Identifier	q0y		5241191	1					
ANR	5241228	IdentifierDeclStatement	"fixed dx3 = q3x - q0x , dy3 = q3y - q0y ;"	1030:4:28795:28833	5241191	2	True				
ANR	5241229	IdentifierDecl	dx3 = q3x - q0x		5241191	0					
ANR	5241230	IdentifierDeclType	fixed		5241191	0					
ANR	5241231	Identifier	dx3		5241191	1					
ANR	5241232	AssignmentExpression	dx3 = q3x - q0x		5241191	2		=			
ANR	5241233	Identifier	dx3		5241191	0					
ANR	5241234	AdditiveExpression	q3x - q0x		5241191	1		-			
ANR	5241235	Identifier	q3x		5241191	0					
ANR	5241236	Identifier	q0x		5241191	1					
ANR	5241237	IdentifierDecl	dy3 = q3y - q0y		5241191	1					
ANR	5241238	IdentifierDeclType	fixed		5241191	0					
ANR	5241239	Identifier	dy3		5241191	1					
ANR	5241240	AssignmentExpression	dy3 = q3y - q0y		5241191	2		=			
ANR	5241241	Identifier	dy3		5241191	0					
ANR	5241242	AdditiveExpression	q3y - q0y		5241191	1		-			
ANR	5241243	Identifier	q3y		5241191	0					
ANR	5241244	Identifier	q0y		5241191	1					
ANR	5241245	IdentifierDeclStatement	"int64_t vp2a , vp2b , vp3a , vp3b ;"	1032:4:28840:28870	5241191	3	True				
ANR	5241246	IdentifierDecl	vp2a		5241191	0					
ANR	5241247	IdentifierDeclType	int64_t		5241191	0					
ANR	5241248	Identifier	vp2a		5241191	1					
ANR	5241249	IdentifierDecl	vp2b		5241191	1					
ANR	5241250	IdentifierDeclType	int64_t		5241191	0					
ANR	5241251	Identifier	vp2b		5241191	1					
ANR	5241252	IdentifierDecl	vp3a		5241191	2					
ANR	5241253	IdentifierDeclType	int64_t		5241191	0					
ANR	5241254	Identifier	vp3a		5241191	1					
ANR	5241255	IdentifierDecl	vp3b		5241191	3					
ANR	5241256	IdentifierDeclType	int64_t		5241191	0					
ANR	5241257	Identifier	vp3b		5241191	1					
ANR	5241258	IdentifierDeclStatement	"int s2 , s3 ;"	1033:4:28876:28886	5241191	4	True				
ANR	5241259	IdentifierDecl	s2		5241191	0					
ANR	5241260	IdentifierDeclType	int		5241191	0					
ANR	5241261	Identifier	s2		5241191	1					
ANR	5241262	IdentifierDecl	s3		5241191	1					
ANR	5241263	IdentifierDeclType	int		5241191	0					
ANR	5241264	Identifier	s3		5241191	1					
ANR	5241265	IfStatement	if ( dx1 == 0 && dy1 == 0 )		5241191	5					
ANR	5241266	Condition	dx1 == 0 && dy1 == 0	1035:8:28897:28916	5241191	0	True				
ANR	5241267	AndExpression	dx1 == 0 && dy1 == 0		5241191	0		&&			
ANR	5241268	EqualityExpression	dx1 == 0		5241191	0		==			
ANR	5241269	Identifier	dx1		5241191	0					
ANR	5241270	PrimaryExpression	0		5241191	1					
ANR	5241271	EqualityExpression	dy1 == 0		5241191	1		==			
ANR	5241272	Identifier	dy1		5241191	0					
ANR	5241273	PrimaryExpression	0		5241191	1					
ANR	5241274	ReturnStatement	return false ;	1036:8:28927:28939	5241191	1	True				
ANR	5241275	Identifier	false		5241191	0					
ANR	5241276	IfStatement	if ( dx2 == 0 && dy2 == 0 )		5241191	6					
ANR	5241277	Condition	dx2 == 0 && dy2 == 0	1037:8:28993:29012	5241191	0	True				
ANR	5241278	AndExpression	dx2 == 0 && dy2 == 0		5241191	0		&&			
ANR	5241279	EqualityExpression	dx2 == 0		5241191	0		==			
ANR	5241280	Identifier	dx2		5241191	0					
ANR	5241281	PrimaryExpression	0		5241191	1					
ANR	5241282	EqualityExpression	dy2 == 0		5241191	1		==			
ANR	5241283	Identifier	dy2		5241191	0					
ANR	5241284	PrimaryExpression	0		5241191	1					
ANR	5241285	ReturnStatement	return false ;	1038:8:29023:29035	5241191	1	True				
ANR	5241286	Identifier	false		5241191	0					
ANR	5241287	IfStatement	if ( dx3 == 0 && dy3 == 0 )		5241191	7					
ANR	5241288	Condition	dx3 == 0 && dy3 == 0	1039:8:29088:29107	5241191	0	True				
ANR	5241289	AndExpression	dx3 == 0 && dy3 == 0		5241191	0		&&			
ANR	5241290	EqualityExpression	dx3 == 0		5241191	0		==			
ANR	5241291	Identifier	dx3		5241191	0					
ANR	5241292	PrimaryExpression	0		5241191	1					
ANR	5241293	EqualityExpression	dy3 == 0		5241191	1		==			
ANR	5241294	Identifier	dy3		5241191	0					
ANR	5241295	PrimaryExpression	0		5241191	1					
ANR	5241296	ReturnStatement	return false ;	1040:8:29118:29130	5241191	1	True				
ANR	5241297	Identifier	false		5241191	0					
ANR	5241298	IfStatement	if ( dx2 == dx1 && dy2 == dy1 )		5241191	8					
ANR	5241299	Condition	dx2 == dx1 && dy2 == dy1	1041:8:29183:29206	5241191	0	True				
ANR	5241300	AndExpression	dx2 == dx1 && dy2 == dy1		5241191	0		&&			
ANR	5241301	EqualityExpression	dx2 == dx1		5241191	0		==			
ANR	5241302	Identifier	dx2		5241191	0					
ANR	5241303	Identifier	dx1		5241191	1					
ANR	5241304	EqualityExpression	dy2 == dy1		5241191	1		==			
ANR	5241305	Identifier	dy2		5241191	0					
ANR	5241306	Identifier	dy1		5241191	1					
ANR	5241307	ReturnStatement	return false ;	1042:8:29217:29229	5241191	1	True				
ANR	5241308	Identifier	false		5241191	0					
ANR	5241309	IfStatement	if ( dx3 == dx1 && dy3 == dy1 )		5241191	9					
ANR	5241310	Condition	dx3 == dx1 && dy3 == dy1	1043:8:29282:29305	5241191	0	True				
ANR	5241311	AndExpression	dx3 == dx1 && dy3 == dy1		5241191	0		&&			
ANR	5241312	EqualityExpression	dx3 == dx1		5241191	0		==			
ANR	5241313	Identifier	dx3		5241191	0					
ANR	5241314	Identifier	dx1		5241191	1					
ANR	5241315	EqualityExpression	dy3 == dy1		5241191	1		==			
ANR	5241316	Identifier	dy3		5241191	0					
ANR	5241317	Identifier	dy1		5241191	1					
ANR	5241318	ReturnStatement	return false ;	1044:8:29316:29328	5241191	1	True				
ANR	5241319	Identifier	false		5241191	0					
ANR	5241320	IfStatement	if ( dx2 == dx3 && dy2 == dy3 )		5241191	10					
ANR	5241321	Condition	dx2 == dx3 && dy2 == dy3	1045:8:29381:29404	5241191	0	True				
ANR	5241322	AndExpression	dx2 == dx3 && dy2 == dy3		5241191	0		&&			
ANR	5241323	EqualityExpression	dx2 == dx3		5241191	0		==			
ANR	5241324	Identifier	dx2		5241191	0					
ANR	5241325	Identifier	dx3		5241191	1					
ANR	5241326	EqualityExpression	dy2 == dy3		5241191	1		==			
ANR	5241327	Identifier	dy2		5241191	0					
ANR	5241328	Identifier	dy3		5241191	1					
ANR	5241329	ReturnStatement	return false ;	1046:8:29415:29427	5241191	1	True				
ANR	5241330	Identifier	false		5241191	0					
ANR	5241331	ExpressionStatement	vp2a = ( int64_t ) dx1 * dy2	1047:4:29477:29502	5241191	11	True				
ANR	5241332	AssignmentExpression	vp2a = ( int64_t ) dx1 * dy2		5241191	0		=			
ANR	5241333	Identifier	vp2a		5241191	0					
ANR	5241334	MultiplicativeExpression	( int64_t ) dx1 * dy2		5241191	1		*			
ANR	5241335	CastExpression	( int64_t ) dx1		5241191	0					
ANR	5241336	CastTarget	int64_t		5241191	0					
ANR	5241337	Identifier	dx1		5241191	1					
ANR	5241338	Identifier	dy2		5241191	1					
ANR	5241339	ExpressionStatement	vp2b = ( int64_t ) dy1 * dx2	1048:4:29508:29533	5241191	12	True				
ANR	5241340	AssignmentExpression	vp2b = ( int64_t ) dy1 * dx2		5241191	0		=			
ANR	5241341	Identifier	vp2b		5241191	0					
ANR	5241342	MultiplicativeExpression	( int64_t ) dy1 * dx2		5241191	1		*			
ANR	5241343	CastExpression	( int64_t ) dy1		5241191	0					
ANR	5241344	CastTarget	int64_t		5241191	0					
ANR	5241345	Identifier	dy1		5241191	1					
ANR	5241346	Identifier	dx2		5241191	1					
ANR	5241347	IfStatement	if ( vp2a > vp2b )		5241191	13					
ANR	5241348	Condition	vp2a > vp2b	1050:8:29624:29634	5241191	0	True				
ANR	5241349	RelationalExpression	vp2a > vp2b		5241191	0		>			
ANR	5241350	Identifier	vp2a		5241191	0					
ANR	5241351	Identifier	vp2b		5241191	1					
ANR	5241352	ExpressionStatement	s2 = 1	1051:8:29645:29651	5241191	1	True				
ANR	5241353	AssignmentExpression	s2 = 1		5241191	0		=			
ANR	5241354	Identifier	s2		5241191	0					
ANR	5241355	PrimaryExpression	1		5241191	1					
ANR	5241356	ElseStatement	else		5241191	0					
ANR	5241357	IfStatement	if ( vp2a < vp2b )		5241191	0					
ANR	5241358	Condition	vp2a < vp2b	1052:13:29666:29676	5241191	0	True				
ANR	5241359	RelationalExpression	vp2a < vp2b		5241191	0		<			
ANR	5241360	Identifier	vp2a		5241191	0					
ANR	5241361	Identifier	vp2b		5241191	1					
ANR	5241362	ExpressionStatement	s2 = - 1	1053:8:29687:29694	5241191	1	True				
ANR	5241363	AssignmentExpression	s2 = - 1		5241191	0		=			
ANR	5241364	Identifier	s2		5241191	0					
ANR	5241365	UnaryOperationExpression	- 1		5241191	1					
ANR	5241366	UnaryOperator	-		5241191	0					
ANR	5241367	PrimaryExpression	1		5241191	1					
ANR	5241368	ElseStatement	else		5241191	0					
ANR	5241369	ExpressionStatement	s2 = 0	1055:8:29713:29719	5241191	0	True				
ANR	5241370	AssignmentExpression	s2 = 0		5241191	0		=			
ANR	5241371	Identifier	s2		5241191	0					
ANR	5241372	PrimaryExpression	0		5241191	1					
ANR	5241373	ExpressionStatement	vp3a = ( int64_t ) dx1 * dy3	1056:4:29725:29750	5241191	14	True				
ANR	5241374	AssignmentExpression	vp3a = ( int64_t ) dx1 * dy3		5241191	0		=			
ANR	5241375	Identifier	vp3a		5241191	0					
ANR	5241376	MultiplicativeExpression	( int64_t ) dx1 * dy3		5241191	1		*			
ANR	5241377	CastExpression	( int64_t ) dx1		5241191	0					
ANR	5241378	CastTarget	int64_t		5241191	0					
ANR	5241379	Identifier	dx1		5241191	1					
ANR	5241380	Identifier	dy3		5241191	1					
ANR	5241381	ExpressionStatement	vp3b = ( int64_t ) dy1 * dx3	1057:4:29756:29781	5241191	15	True				
ANR	5241382	AssignmentExpression	vp3b = ( int64_t ) dy1 * dx3		5241191	0		=			
ANR	5241383	Identifier	vp3b		5241191	0					
ANR	5241384	MultiplicativeExpression	( int64_t ) dy1 * dx3		5241191	1		*			
ANR	5241385	CastExpression	( int64_t ) dy1		5241191	0					
ANR	5241386	CastTarget	int64_t		5241191	0					
ANR	5241387	Identifier	dy1		5241191	1					
ANR	5241388	Identifier	dx3		5241191	1					
ANR	5241389	IfStatement	if ( vp3a > vp3b )		5241191	16					
ANR	5241390	Condition	vp3a > vp3b	1059:8:29872:29882	5241191	0	True				
ANR	5241391	RelationalExpression	vp3a > vp3b		5241191	0		>			
ANR	5241392	Identifier	vp3a		5241191	0					
ANR	5241393	Identifier	vp3b		5241191	1					
ANR	5241394	ExpressionStatement	s3 = 1	1060:8:29893:29899	5241191	1	True				
ANR	5241395	AssignmentExpression	s3 = 1		5241191	0		=			
ANR	5241396	Identifier	s3		5241191	0					
ANR	5241397	PrimaryExpression	1		5241191	1					
ANR	5241398	ElseStatement	else		5241191	0					
ANR	5241399	IfStatement	if ( vp3a < vp3b )		5241191	0					
ANR	5241400	Condition	vp3a < vp3b	1061:13:29914:29924	5241191	0	True				
ANR	5241401	RelationalExpression	vp3a < vp3b		5241191	0		<			
ANR	5241402	Identifier	vp3a		5241191	0					
ANR	5241403	Identifier	vp3b		5241191	1					
ANR	5241404	ExpressionStatement	s3 = - 1	1062:8:29935:29942	5241191	1	True				
ANR	5241405	AssignmentExpression	s3 = - 1		5241191	0		=			
ANR	5241406	Identifier	s3		5241191	0					
ANR	5241407	UnaryOperationExpression	- 1		5241191	1					
ANR	5241408	UnaryOperator	-		5241191	0					
ANR	5241409	PrimaryExpression	1		5241191	1					
ANR	5241410	ElseStatement	else		5241191	0					
ANR	5241411	ExpressionStatement	s3 = 0	1064:8:29961:29967	5241191	0	True				
ANR	5241412	AssignmentExpression	s3 = 0		5241191	0		=			
ANR	5241413	Identifier	s3		5241191	0					
ANR	5241414	PrimaryExpression	0		5241191	1					
ANR	5241415	IfStatement	if ( s2 == 0 )		5241191	17					
ANR	5241416	Condition	s2 == 0	1065:8:29977:29983	5241191	0	True				
ANR	5241417	EqualityExpression	s2 == 0		5241191	0		==			
ANR	5241418	Identifier	s2		5241191	0					
ANR	5241419	PrimaryExpression	0		5241191	1					
ANR	5241420	CompoundStatement		39:17:1284:1284	5241191	1					
ANR	5241421	IfStatement	if ( s3 == 0 )		5241191	0					
ANR	5241422	Condition	s3 == 0	1066:12:30000:30006	5241191	0	True				
ANR	5241423	EqualityExpression	s3 == 0		5241191	0		==			
ANR	5241424	Identifier	s3		5241191	0					
ANR	5241425	PrimaryExpression	0		5241191	1					
ANR	5241426	ReturnStatement	return false ;	1067:12:30021:30033	5241191	1	True				
ANR	5241427	Identifier	false		5241191	0					
ANR	5241428	IfStatement	if ( 0 <= dx2 && dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1 )		5241191	1					
ANR	5241429	Condition	0 <= dx2 && dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1	1068:12:30087:30134	5241191	0	True				
ANR	5241430	AndExpression	0 <= dx2 && dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1		5241191	0		&&			
ANR	5241431	RelationalExpression	0 <= dx2		5241191	0		<=			
ANR	5241432	PrimaryExpression	0		5241191	0					
ANR	5241433	Identifier	dx2		5241191	1					
ANR	5241434	AndExpression	dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1		5241191	1		&&			
ANR	5241435	RelationalExpression	dx2 <= dx1		5241191	0		<=			
ANR	5241436	Identifier	dx2		5241191	0					
ANR	5241437	Identifier	dx1		5241191	1					
ANR	5241438	AndExpression	0 <= dy2 && dy2 <= dy1		5241191	1		&&			
ANR	5241439	RelationalExpression	0 <= dy2		5241191	0		<=			
ANR	5241440	PrimaryExpression	0		5241191	0					
ANR	5241441	Identifier	dy2		5241191	1					
ANR	5241442	RelationalExpression	dy2 <= dy1		5241191	1		<=			
ANR	5241443	Identifier	dy2		5241191	0					
ANR	5241444	Identifier	dy1		5241191	1					
ANR	5241445	CompoundStatement		42:62:1435:1435	5241191	1					
ANR	5241446	ExpressionStatement	* ry = q2y	1070:12:30209:30218	5241191	0	True				
ANR	5241447	AssignmentExpression	* ry = q2y		5241191	0		=			
ANR	5241448	UnaryOperationExpression	* ry		5241191	0					
ANR	5241449	UnaryOperator	*		5241191	0					
ANR	5241450	Identifier	ry		5241191	1					
ANR	5241451	Identifier	q2y		5241191	1					
ANR	5241452	ExpressionStatement	* ey = 0	1071:12:30232:30239	5241191	1	True				
ANR	5241453	AssignmentExpression	* ey = 0		5241191	0		=			
ANR	5241454	UnaryOperationExpression	* ey		5241191	0					
ANR	5241455	UnaryOperator	*		5241191	0					
ANR	5241456	Identifier	ey		5241191	1					
ANR	5241457	PrimaryExpression	0		5241191	1					
ANR	5241458	ReturnStatement	return true ;	1072:12:30253:30264	5241191	2	True				
ANR	5241459	Identifier	true		5241191	0					
ANR	5241460	ElseStatement	else		5241191	0					
ANR	5241461	IfStatement	if ( s3 == 0 )		5241191	0					
ANR	5241462	Condition	s3 == 0	1074:15:30291:30297	5241191	0	True				
ANR	5241463	EqualityExpression	s3 == 0		5241191	0		==			
ANR	5241464	Identifier	s3		5241191	0					
ANR	5241465	PrimaryExpression	0		5241191	1					
ANR	5241466	CompoundStatement		48:24:1598:1598	5241191	1					
ANR	5241467	IfStatement	if ( 0 <= dx3 && dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1 )		5241191	0					
ANR	5241468	Condition	0 <= dx3 && dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1	1075:12:30314:30361	5241191	0	True				
ANR	5241469	AndExpression	0 <= dx3 && dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1		5241191	0		&&			
ANR	5241470	RelationalExpression	0 <= dx3		5241191	0		<=			
ANR	5241471	PrimaryExpression	0		5241191	0					
ANR	5241472	Identifier	dx3		5241191	1					
ANR	5241473	AndExpression	dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1		5241191	1		&&			
ANR	5241474	RelationalExpression	dx3 <= dx1		5241191	0		<=			
ANR	5241475	Identifier	dx3		5241191	0					
ANR	5241476	Identifier	dx1		5241191	1					
ANR	5241477	AndExpression	0 <= dy3 && dy3 <= dy1		5241191	1		&&			
ANR	5241478	RelationalExpression	0 <= dy3		5241191	0		<=			
ANR	5241479	PrimaryExpression	0		5241191	0					
ANR	5241480	Identifier	dy3		5241191	1					
ANR	5241481	RelationalExpression	dy3 <= dy1		5241191	1		<=			
ANR	5241482	Identifier	dy3		5241191	0					
ANR	5241483	Identifier	dy1		5241191	1					
ANR	5241484	CompoundStatement		49:62:1662:1662	5241191	1					
ANR	5241485	ExpressionStatement	* ry = q3y	1077:12:30434:30443	5241191	0	True				
ANR	5241486	AssignmentExpression	* ry = q3y		5241191	0		=			
ANR	5241487	UnaryOperationExpression	* ry		5241191	0					
ANR	5241488	UnaryOperator	*		5241191	0					
ANR	5241489	Identifier	ry		5241191	1					
ANR	5241490	Identifier	q3y		5241191	1					
ANR	5241491	ExpressionStatement	* ey = 0	1078:12:30457:30464	5241191	1	True				
ANR	5241492	AssignmentExpression	* ey = 0		5241191	0		=			
ANR	5241493	UnaryOperationExpression	* ey		5241191	0					
ANR	5241494	UnaryOperator	*		5241191	0					
ANR	5241495	Identifier	ey		5241191	1					
ANR	5241496	PrimaryExpression	0		5241191	1					
ANR	5241497	ReturnStatement	return true ;	1079:12:30478:30489	5241191	2	True				
ANR	5241498	Identifier	true		5241191	0					
ANR	5241499	ElseStatement	else		5241191	0					
ANR	5241500	IfStatement	if ( s2 * s3 < 0 )		5241191	0					
ANR	5241501	Condition	s2 * s3 < 0	1081:15:30516:30526	5241191	0	True				
ANR	5241502	RelationalExpression	s2 * s3 < 0		5241191	0		<			
ANR	5241503	MultiplicativeExpression	s2 * s3		5241191	0		*			
ANR	5241504	Identifier	s2		5241191	0					
ANR	5241505	Identifier	s3		5241191	1					
ANR	5241506	PrimaryExpression	0		5241191	1					
ANR	5241507	CompoundStatement		59:8:2034:2089	5241191	1					
ANR	5241508	IdentifierDeclStatement	"fixed d23x = dx3 - dx2 , d23y = dy3 - dy2 ;"	1083:8:30621:30661	5241191	0	True				
ANR	5241509	IdentifierDecl	d23x = dx3 - dx2		5241191	0					
ANR	5241510	IdentifierDeclType	fixed		5241191	0					
ANR	5241511	Identifier	d23x		5241191	1					
ANR	5241512	AssignmentExpression	d23x = dx3 - dx2		5241191	2		=			
ANR	5241513	Identifier	d23x		5241191	0					
ANR	5241514	AdditiveExpression	dx3 - dx2		5241191	1		-			
ANR	5241515	Identifier	dx3		5241191	0					
ANR	5241516	Identifier	dx2		5241191	1					
ANR	5241517	IdentifierDecl	d23y = dy3 - dy2		5241191	1					
ANR	5241518	IdentifierDeclType	fixed		5241191	0					
ANR	5241519	Identifier	d23y		5241191	1					
ANR	5241520	AssignmentExpression	d23y = dy3 - dy2		5241191	2		=			
ANR	5241521	Identifier	d23y		5241191	0					
ANR	5241522	AdditiveExpression	dy3 - dy2		5241191	1		-			
ANR	5241523	Identifier	dy3		5241191	0					
ANR	5241524	Identifier	dy2		5241191	1					
ANR	5241525	IdentifierDeclStatement	int64_t det = ( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x ;	1084:8:30671:30726	5241191	1	True				
ANR	5241526	IdentifierDecl	det = ( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x		5241191	0					
ANR	5241527	IdentifierDeclType	int64_t		5241191	0					
ANR	5241528	Identifier	det		5241191	1					
ANR	5241529	AssignmentExpression	det = ( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x		5241191	2		=			
ANR	5241530	Identifier	det		5241191	0					
ANR	5241531	AdditiveExpression	( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x		5241191	1		-			
ANR	5241532	MultiplicativeExpression	( int64_t ) dx1 * d23y		5241191	0		*			
ANR	5241533	CastExpression	( int64_t ) dx1		5241191	0					
ANR	5241534	CastTarget	int64_t		5241191	0					
ANR	5241535	Identifier	dx1		5241191	1					
ANR	5241536	Identifier	d23y		5241191	1					
ANR	5241537	MultiplicativeExpression	( int64_t ) dy1 * d23x		5241191	1		*			
ANR	5241538	CastExpression	( int64_t ) dy1		5241191	0					
ANR	5241539	CastTarget	int64_t		5241191	0					
ANR	5241540	Identifier	dy1		5241191	1					
ANR	5241541	Identifier	d23x		5241191	1					
ANR	5241542	IdentifierDeclStatement	int64_t mul = ( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x ;	1085:8:30736:30791	5241191	2	True				
ANR	5241543	IdentifierDecl	mul = ( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x		5241191	0					
ANR	5241544	IdentifierDeclType	int64_t		5241191	0					
ANR	5241545	Identifier	mul		5241191	1					
ANR	5241546	AssignmentExpression	mul = ( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x		5241191	2		=			
ANR	5241547	Identifier	mul		5241191	0					
ANR	5241548	AdditiveExpression	( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x		5241191	1		-			
ANR	5241549	MultiplicativeExpression	( int64_t ) dx2 * d23y		5241191	0		*			
ANR	5241550	CastExpression	( int64_t ) dx2		5241191	0					
ANR	5241551	CastTarget	int64_t		5241191	0					
ANR	5241552	Identifier	dx2		5241191	1					
ANR	5241553	Identifier	d23y		5241191	1					
ANR	5241554	MultiplicativeExpression	( int64_t ) dy2 * d23x		5241191	1		*			
ANR	5241555	CastExpression	( int64_t ) dy2		5241191	0					
ANR	5241556	CastTarget	int64_t		5241191	0					
ANR	5241557	Identifier	dy2		5241191	1					
ANR	5241558	Identifier	d23x		5241191	1					
ANR	5241559	CompoundStatement		65:12:2310:2324	5241191	3					
ANR	5241560	IdentifierDeclStatement	"int64_t num = dy1 * mul , iiy ;"	1089:12:30948:30976	5241191	0	True				
ANR	5241561	IdentifierDecl	num = dy1 * mul		5241191	0					
ANR	5241562	IdentifierDeclType	int64_t		5241191	0					
ANR	5241563	Identifier	num		5241191	1					
ANR	5241564	AssignmentExpression	num = dy1 * mul		5241191	2		=			
ANR	5241565	Identifier	num		5241191	0					
ANR	5241566	MultiplicativeExpression	dy1 * mul		5241191	1		*			
ANR	5241567	Identifier	dy1		5241191	0					
ANR	5241568	Identifier	mul		5241191	1					
ANR	5241569	IdentifierDecl	iiy		5241191	1					
ANR	5241570	IdentifierDeclType	int64_t		5241191	0					
ANR	5241571	Identifier	iiy		5241191	1					
ANR	5241572	IdentifierDeclStatement	fixed iy ;	1090:12:30990:30998	5241191	1	True				
ANR	5241573	IdentifierDecl	iy		5241191	0					
ANR	5241574	IdentifierDeclType	fixed		5241191	0					
ANR	5241575	Identifier	iy		5241191	1					
ANR	5241576	IdentifierDeclStatement	"fixed pry , pey ;"	1091:12:31012:31026	5241191	2	True				
ANR	5241577	IdentifierDecl	pry		5241191	0					
ANR	5241578	IdentifierDeclType	fixed		5241191	0					
ANR	5241579	Identifier	pry		5241191	1					
ANR	5241580	IdentifierDecl	pey		5241191	1					
ANR	5241581	IdentifierDeclType	fixed		5241191	0					
ANR	5241582	Identifier	pey		5241191	1					
ANR	5241583	CompoundStatement		67:12:2339:2339	5241191	3					
ANR	5241584	IfStatement	if ( det < 0 )		5241191	0					
ANR	5241585	Condition	det < 0	1095:20:31240:31246	5241191	0	True				
ANR	5241586	RelationalExpression	det < 0		5241191	0		<			
ANR	5241587	Identifier	det		5241191	0					
ANR	5241588	PrimaryExpression	0		5241191	1					
ANR	5241589	ExpressionStatement	"num = - num , det = - det"	1096:20:31269:31291	5241191	1	True				
ANR	5241590	Expression	"num = - num , det = - det"		5241191	0					
ANR	5241591	AssignmentExpression	num = - num		5241191	0		=			
ANR	5241592	Identifier	num		5241191	0					
ANR	5241593	UnaryOperationExpression	- num		5241191	1					
ANR	5241594	UnaryOperator	-		5241191	0					
ANR	5241595	Identifier	num		5241191	1					
ANR	5241596	AssignmentExpression	det = - det		5241191	1		=			
ANR	5241597	Identifier	det		5241191	0					
ANR	5241598	UnaryOperationExpression	- det		5241191	1					
ANR	5241599	UnaryOperator	-		5241191	0					
ANR	5241600	Identifier	det		5241191	1					
ANR	5241601	ExpressionStatement	iiy = ( num >= 0 ? num / det : ( num - det + 1 ) / det )	1097:16:31309:31361	5241191	1	True				
ANR	5241602	AssignmentExpression	iiy = ( num >= 0 ? num / det : ( num - det + 1 ) / det )		5241191	0		=			
ANR	5241603	Identifier	iiy		5241191	0					
ANR	5241604	ConditionalExpression	num >= 0 ? num / det : ( num - det + 1 ) / det		5241191	1					
ANR	5241605	Condition	num >= 0		5241191	0					
ANR	5241606	RelationalExpression	num >= 0		5241191	0		>=			
ANR	5241607	Identifier	num		5241191	0					
ANR	5241608	PrimaryExpression	0		5241191	1					
ANR	5241609	MultiplicativeExpression	num / det		5241191	1		/			
ANR	5241610	Identifier	num		5241191	0					
ANR	5241611	Identifier	det		5241191	1					
ANR	5241612	MultiplicativeExpression	( num - det + 1 ) / det		5241191	2		/			
ANR	5241613	AdditiveExpression	num - det + 1		5241191	0		-			
ANR	5241614	Identifier	num		5241191	0					
ANR	5241615	AdditiveExpression	det + 1		5241191	1		+			
ANR	5241616	Identifier	det		5241191	0					
ANR	5241617	PrimaryExpression	1		5241191	1					
ANR	5241618	Identifier	det		5241191	1					
ANR	5241619	ExpressionStatement	iy = ( fixed ) iiy	1098:16:31379:31394	5241191	2	True				
ANR	5241620	AssignmentExpression	iy = ( fixed ) iiy		5241191	0		=			
ANR	5241621	Identifier	iy		5241191	0					
ANR	5241622	CastExpression	( fixed ) iiy		5241191	1					
ANR	5241623	CastTarget	fixed		5241191	0					
ANR	5241624	Identifier	iiy		5241191	1					
ANR	5241625	IfStatement	if ( iy != iiy )		5241191	3					
ANR	5241626	Condition	iy != iiy	1099:20:31416:31424	5241191	0	True				
ANR	5241627	EqualityExpression	iy != iiy		5241191	0		!=			
ANR	5241628	Identifier	iy		5241191	0					
ANR	5241629	Identifier	iiy		5241191	1					
ANR	5241630	CompoundStatement		73:31:2725:2725	5241191	1					
ANR	5241631	ReturnStatement	return false ;	1101:20:31525:31537	5241191	0	True				
ANR	5241632	Identifier	false		5241191	0					
ANR	5241633	IfStatement	if ( dy1 > 0 )		5241191	4					
ANR	5241634	Condition	dy1 > 0	1104:16:31587:31593	5241191	0	True				
ANR	5241635	RelationalExpression	dy1 > 0		5241191	0		>			
ANR	5241636	Identifier	dy1		5241191	0					
ANR	5241637	PrimaryExpression	0		5241191	1					
ANR	5241638	CompoundStatement		78:25:2894:2894	5241191	1					
ANR	5241639	IfStatement	if ( iy < 0 || iy >= dy1 )		5241191	0					
ANR	5241640	Condition	iy < 0 || iy >= dy1	1105:20:31618:31636	5241191	0	True				
ANR	5241641	OrExpression	iy < 0 || iy >= dy1		5241191	0		||			
ANR	5241642	RelationalExpression	iy < 0		5241191	0		<			
ANR	5241643	Identifier	iy		5241191	0					
ANR	5241644	PrimaryExpression	0		5241191	1					
ANR	5241645	RelationalExpression	iy >= dy1		5241191	1		>=			
ANR	5241646	Identifier	iy		5241191	0					
ANR	5241647	Identifier	dy1		5241191	1					
ANR	5241648	ReturnStatement	return false ;	1106:20:31659:31671	5241191	1	True				
ANR	5241649	Identifier	false		5241191	0					
ANR	5241650	ElseStatement	else		5241191	0					
ANR	5241651	CompoundStatement		81:19:3015:3015	5241191	0					
ANR	5241652	IfStatement	if ( iy > 0 || iy <= dy1 )		5241191	0					
ANR	5241653	Condition	iy > 0 || iy <= dy1	1108:20:31739:31757	5241191	0	True				
ANR	5241654	OrExpression	iy > 0 || iy <= dy1		5241191	0		||			
ANR	5241655	RelationalExpression	iy > 0		5241191	0		>			
ANR	5241656	Identifier	iy		5241191	0					
ANR	5241657	PrimaryExpression	0		5241191	1					
ANR	5241658	RelationalExpression	iy <= dy1		5241191	1		<=			
ANR	5241659	Identifier	iy		5241191	0					
ANR	5241660	Identifier	dy1		5241191	1					
ANR	5241661	ReturnStatement	return false ;	1109:20:31780:31792	5241191	1	True				
ANR	5241662	Identifier	false		5241191	0					
ANR	5241663	IfStatement	if ( dy2 < dy3 )		5241191	5					
ANR	5241664	Condition	dy2 < dy3	1111:16:31849:31857	5241191	0	True				
ANR	5241665	RelationalExpression	dy2 < dy3		5241191	0		<			
ANR	5241666	Identifier	dy2		5241191	0					
ANR	5241667	Identifier	dy3		5241191	1					
ANR	5241668	CompoundStatement		85:27:3158:3158	5241191	1					
ANR	5241669	IfStatement	if ( iy <= dy2 || iy >= dy3 )		5241191	0					
ANR	5241670	Condition	iy <= dy2 || iy >= dy3	1112:20:31882:31903	5241191	0	True				
ANR	5241671	OrExpression	iy <= dy2 || iy >= dy3		5241191	0		||			
ANR	5241672	RelationalExpression	iy <= dy2		5241191	0		<=			
ANR	5241673	Identifier	iy		5241191	0					
ANR	5241674	Identifier	dy2		5241191	1					
ANR	5241675	RelationalExpression	iy >= dy3		5241191	1		>=			
ANR	5241676	Identifier	iy		5241191	0					
ANR	5241677	Identifier	dy3		5241191	1					
ANR	5241678	ReturnStatement	return false ;	1113:20:31926:31938	5241191	1	True				
ANR	5241679	Identifier	false		5241191	0					
ANR	5241680	ElseStatement	else		5241191	0					
ANR	5241681	CompoundStatement		88:19:3282:3282	5241191	0					
ANR	5241682	IfStatement	if ( iy >= dy2 || iy <= dy3 )		5241191	0					
ANR	5241683	Condition	iy >= dy2 || iy <= dy3	1115:20:32006:32027	5241191	0	True				
ANR	5241684	OrExpression	iy >= dy2 || iy <= dy3		5241191	0		||			
ANR	5241685	RelationalExpression	iy >= dy2		5241191	0		>=			
ANR	5241686	Identifier	iy		5241191	0					
ANR	5241687	Identifier	dy2		5241191	1					
ANR	5241688	RelationalExpression	iy <= dy3		5241191	1		<=			
ANR	5241689	Identifier	iy		5241191	0					
ANR	5241690	Identifier	dy3		5241191	1					
ANR	5241691	ReturnStatement	return false ;	1116:20:32050:32062	5241191	1	True				
ANR	5241692	Identifier	false		5241191	0					
ANR	5241693	ExpressionStatement	pry = q0y + ( fixed ) iy	1118:12:32115:32136	5241191	6	True				
ANR	5241694	AssignmentExpression	pry = q0y + ( fixed ) iy		5241191	0		=			
ANR	5241695	Identifier	pry		5241191	0					
ANR	5241696	AdditiveExpression	q0y + ( fixed ) iy		5241191	1		+			
ANR	5241697	Identifier	q0y		5241191	0					
ANR	5241698	CastExpression	( fixed ) iy		5241191	1					
ANR	5241699	CastTarget	fixed		5241191	0					
ANR	5241700	Identifier	iy		5241191	1					
ANR	5241701	ExpressionStatement	pey = ( iy * det < num ? 1 : 0 )	1119:12:32150:32180	5241191	7	True				
ANR	5241702	AssignmentExpression	pey = ( iy * det < num ? 1 : 0 )		5241191	0		=			
ANR	5241703	Identifier	pey		5241191	0					
ANR	5241704	ConditionalExpression	iy * det < num ? 1 : 0		5241191	1					
ANR	5241705	Condition	iy * det < num		5241191	0					
ANR	5241706	RelationalExpression	iy * det < num		5241191	0		<			
ANR	5241707	MultiplicativeExpression	iy * det		5241191	0		*			
ANR	5241708	Identifier	iy		5241191	0					
ANR	5241709	Identifier	det		5241191	1					
ANR	5241710	Identifier	num		5241191	1					
ANR	5241711	PrimaryExpression	1		5241191	1					
ANR	5241712	PrimaryExpression	0		5241191	2					
ANR	5241713	ExpressionStatement	* ry = pry	1120:12:32194:32203	5241191	8	True				
ANR	5241714	AssignmentExpression	* ry = pry		5241191	0		=			
ANR	5241715	UnaryOperationExpression	* ry		5241191	0					
ANR	5241716	UnaryOperator	*		5241191	0					
ANR	5241717	Identifier	ry		5241191	1					
ANR	5241718	Identifier	pry		5241191	1					
ANR	5241719	ExpressionStatement	* ey = pey	1121:12:32217:32226	5241191	9	True				
ANR	5241720	AssignmentExpression	* ey = pey		5241191	0		=			
ANR	5241721	UnaryOperationExpression	* ey		5241191	0					
ANR	5241722	UnaryOperator	*		5241191	0					
ANR	5241723	Identifier	ey		5241191	1					
ANR	5241724	Identifier	pey		5241191	1					
ANR	5241725	ReturnStatement	return true ;	1123:8:32246:32257	5241191	4	True				
ANR	5241726	Identifier	true		5241191	0					
ANR	5241727	ReturnStatement	return false ;	1125:4:32269:32281	5241191	18	True				
ANR	5241728	Identifier	false		5241191	0					
ANR	5241729	ReturnType	bool		5241191	1					
ANR	5241730	Identifier	gx_intersect_small_bars		5241191	2					
ANR	5241731	ParameterList	"fixed q0x , fixed q0y , fixed q1x , fixed q1y , fixed q2x , fixed q2y , fixed q3x , fixed q3y , fixed * ry , fixed * ey"		5241191	3					
ANR	5241732	Parameter	fixed q0x	1025:24:28567:28575	5241191	0	True				
ANR	5241733	ParameterType	fixed		5241191	0					
ANR	5241734	Identifier	q0x		5241191	1					
ANR	5241735	Parameter	fixed q0y	1025:35:28578:28586	5241191	1	True				
ANR	5241736	ParameterType	fixed		5241191	0					
ANR	5241737	Identifier	q0y		5241191	1					
ANR	5241738	Parameter	fixed q1x	1025:46:28589:28597	5241191	2	True				
ANR	5241739	ParameterType	fixed		5241191	0					
ANR	5241740	Identifier	q1x		5241191	1					
ANR	5241741	Parameter	fixed q1y	1025:57:28600:28608	5241191	3	True				
ANR	5241742	ParameterType	fixed		5241191	0					
ANR	5241743	Identifier	q1y		5241191	1					
ANR	5241744	Parameter	fixed q2x	1025:68:28611:28619	5241191	4	True				
ANR	5241745	ParameterType	fixed		5241191	0					
ANR	5241746	Identifier	q2x		5241191	1					
ANR	5241747	Parameter	fixed q2y	1025:79:28622:28630	5241191	5	True				
ANR	5241748	ParameterType	fixed		5241191	0					
ANR	5241749	Identifier	q2y		5241191	1					
ANR	5241750	Parameter	fixed q3x	1026:24:28657:28665	5241191	6	True				
ANR	5241751	ParameterType	fixed		5241191	0					
ANR	5241752	Identifier	q3x		5241191	1					
ANR	5241753	Parameter	fixed q3y	1026:35:28668:28676	5241191	7	True				
ANR	5241754	ParameterType	fixed		5241191	0					
ANR	5241755	Identifier	q3y		5241191	1					
ANR	5241756	Parameter	fixed * ry	1026:46:28679:28687	5241191	8	True				
ANR	5241757	ParameterType	fixed *		5241191	0					
ANR	5241758	Identifier	ry		5241191	1					
ANR	5241759	Parameter	fixed * ey	1026:57:28690:28698	5241191	9	True				
ANR	5241760	ParameterType	fixed *		5241191	0					
ANR	5241761	Identifier	ey		5241191	1					
ANR	5241762	CFGEntryNode	ENTRY		5241191		True				
ANR	5241763	CFGExitNode	EXIT		5241191		True				
ANR	5241764	Symbol	mul		5241191						
ANR	5241765	Symbol	ry		5241191						
ANR	5241766	Symbol	num		5241191						
ANR	5241767	Symbol	det		5241191						
ANR	5241768	Symbol	q3y		5241191						
ANR	5241769	Symbol	q3x		5241191						
ANR	5241770	Symbol	q1y		5241191						
ANR	5241771	Symbol	iiy		5241191						
ANR	5241772	Symbol	q1x		5241191						
ANR	5241773	Symbol	d23y		5241191						
ANR	5241774	Symbol	dx1		5241191						
ANR	5241775	Symbol	vp2b		5241191						
ANR	5241776	Symbol	d23x		5241191						
ANR	5241777	Symbol	dx3		5241191						
ANR	5241778	Symbol	vp2a		5241191						
ANR	5241779	Symbol	dx2		5241191						
ANR	5241780	Symbol	s2		5241191						
ANR	5241781	Symbol	s3		5241191						
ANR	5241782	Symbol	pey		5241191						
ANR	5241783	Symbol	false		5241191						
ANR	5241784	Symbol	* ry		5241191						
ANR	5241785	Symbol	iy		5241191						
ANR	5241786	Symbol	ey		5241191						
ANR	5241787	Symbol	q2x		5241191						
ANR	5241788	Symbol	pry		5241191						
ANR	5241789	Symbol	q0x		5241191						
ANR	5241790	Symbol	true		5241191						
ANR	5241791	Symbol	q2y		5241191						
ANR	5241792	Symbol	* ey		5241191						
ANR	5241793	Symbol	q0y		5241191						
ANR	5241794	Symbol	dy2		5241191						
ANR	5241795	Symbol	dy1		5241191						
ANR	5241796	Symbol	vp3b		5241191						
ANR	5241797	Symbol	dy3		5241191						
ANR	5241798	Symbol	vp3a		5241191						
ANR	5241799	DeclStmt									
ANR	5241800	Decl							const gs_debug_flag_details	const gs_debug_flag_details [ ]	gs_debug_flags
ANR	5241801	DeclStmt									
ANR	5241802	Decl							const byte	const byte [ ]	gs_debug_flag_implied_by
ANR	5241803	Function	gs_debug_flags_parse	1148:0:32629:34229							
ANR	5241804	FunctionDef	"gs_debug_flags_parse (gs_memory_t * heap , const char * arg)"		5241803	0					
ANR	5241805	CompoundStatement		1149:0:32690:34229	5241803	0					
ANR	5241806	IdentifierDeclStatement	const char * p ;	1151:4:32709:32722	5241803	0	True				
ANR	5241807	IdentifierDecl	* p		5241803	0					
ANR	5241808	IdentifierDeclType	const char *		5241803	0					
ANR	5241809	Identifier	p		5241803	1					
ANR	5241810	IdentifierDeclStatement	"int i , j ;"	1152:4:32728:32736	5241803	1	True				
ANR	5241811	IdentifierDecl	i		5241803	0					
ANR	5241812	IdentifierDeclType	int		5241803	0					
ANR	5241813	Identifier	i		5241803	1					
ANR	5241814	IdentifierDecl	j		5241803	1					
ANR	5241815	IdentifierDeclType	int		5241803	0					
ANR	5241816	Identifier	j		5241803	1					
ANR	5241817	IdentifierDeclStatement	int result = 0 ;	1153:4:32742:32756	5241803	2	True				
ANR	5241818	IdentifierDecl	result = 0		5241803	0					
ANR	5241819	IdentifierDeclType	int		5241803	0					
ANR	5241820	Identifier	result		5241803	1					
ANR	5241821	AssignmentExpression	result = 0		5241803	2		=			
ANR	5241822	Identifier	result		5241803	0					
ANR	5241823	PrimaryExpression	0		5241803	1					
ANR	5241824	WhileStatement	while ( * arg != 0 )		5241803	3					
ANR	5241825	Condition	* arg != 0	1155:11:32770:32778	5241803	0	True				
ANR	5241826	EqualityExpression	* arg != 0		5241803	0		!=			
ANR	5241827	UnaryOperationExpression	* arg		5241803	0					
ANR	5241828	UnaryOperator	*		5241803	0					
ANR	5241829	Identifier	arg		5241803	1					
ANR	5241830	PrimaryExpression	0		5241803	1					
ANR	5241831	CompoundStatement		9:8:135:152	5241803	1					
ANR	5241832	IdentifierDeclStatement	byte value = 0xff ;	1157:8:32826:32843	5241803	0	True				
ANR	5241833	IdentifierDecl	value = 0xff		5241803	0					
ANR	5241834	IdentifierDeclType	byte		5241803	0					
ANR	5241835	Identifier	value		5241803	1					
ANR	5241836	AssignmentExpression	value = 0xff		5241803	2		=			
ANR	5241837	Identifier	value		5241803	0					
ANR	5241838	PrimaryExpression	0xff		5241803	1					
ANR	5241839	WhileStatement	"while ( * arg == ',' )"		5241803	1					
ANR	5241840	Condition	"* arg == ','"	1158:15:32860:32870	5241803	0	True				
ANR	5241841	EqualityExpression	"* arg == ','"		5241803	0		==			
ANR	5241842	UnaryOperationExpression	* arg		5241803	0					
ANR	5241843	UnaryOperator	*		5241803	0					
ANR	5241844	Identifier	arg		5241803	1					
ANR	5241845	PrimaryExpression	"','"		5241803	1					
ANR	5241846	ExpressionStatement	arg ++	1159:12:32885:32890	5241803	1	True				
ANR	5241847	PostIncDecOperationExpression	arg ++		5241803	0					
ANR	5241848	Identifier	arg		5241803	0					
ANR	5241849	IncDec	++		5241803	1					
ANR	5241850	IfStatement	if ( * arg == '-' )		5241803	2					
ANR	5241851	Condition	* arg == '-'	1160:12:32904:32914	5241803	0	True				
ANR	5241852	EqualityExpression	* arg == '-'		5241803	0		==			
ANR	5241853	UnaryOperationExpression	* arg		5241803	0					
ANR	5241854	UnaryOperator	*		5241803	0					
ANR	5241855	Identifier	arg		5241803	1					
ANR	5241856	PrimaryExpression	'-'		5241803	1					
ANR	5241857	CompoundStatement		12:25:226:226	5241803	1					
ANR	5241858	ExpressionStatement	value = 0	1161:12:32931:32940	5241803	0	True				
ANR	5241859	AssignmentExpression	value = 0		5241803	0		=			
ANR	5241860	Identifier	value		5241803	0					
ANR	5241861	PrimaryExpression	0		5241803	1					
ANR	5241862	ExpressionStatement	arg ++	1162:12:32954:32959	5241803	1	True				
ANR	5241863	PostIncDecOperationExpression	arg ++		5241803	0					
ANR	5241864	Identifier	arg		5241803	0					
ANR	5241865	IncDec	++		5241803	1					
ANR	5241866	IfStatement	"if ( * arg == ',' )"		5241803	3					
ANR	5241867	Condition	"* arg == ','"	1164:12:32983:32993	5241803	0	True				
ANR	5241868	EqualityExpression	"* arg == ','"		5241803	0		==			
ANR	5241869	UnaryOperationExpression	* arg		5241803	0					
ANR	5241870	UnaryOperator	*		5241803	0					
ANR	5241871	Identifier	arg		5241803	1					
ANR	5241872	PrimaryExpression	"','"		5241803	1					
ANR	5241873	CompoundStatement		16:25:305:305	5241803	1					
ANR	5241874	ExpressionStatement	arg ++	1165:12:33010:33015	5241803	0	True				
ANR	5241875	PostIncDecOperationExpression	arg ++		5241803	0					
ANR	5241876	Identifier	arg		5241803	0					
ANR	5241877	IncDec	++		5241803	1					
ANR	5241878	ContinueStatement	continue ;	1166:12:33029:33037	5241803	1	True				
ANR	5241879	IfStatement	if ( * arg == 0 )		5241803	4					
ANR	5241880	Condition	* arg == 0	1168:12:33061:33069	5241803	0	True				
ANR	5241881	EqualityExpression	* arg == 0		5241803	0		==			
ANR	5241882	UnaryOperationExpression	* arg		5241803	0					
ANR	5241883	UnaryOperator	*		5241803	0					
ANR	5241884	Identifier	arg		5241803	1					
ANR	5241885	PrimaryExpression	0		5241803	1					
ANR	5241886	ReturnStatement	return result ;	1169:12:33084:33097	5241803	1	True				
ANR	5241887	Identifier	result		5241803	0					
ANR	5241888	ForStatement	for ( i = 0 ; i < gs_debug_flags_max ; i ++ )		5241803	5					
ANR	5241889	ForInit	i = 0 ;	1170:13:33112:33115	5241803	0	True				
ANR	5241890	AssignmentExpression	i = 0		5241803	0		=			
ANR	5241891	Identifier	i		5241803	0					
ANR	5241892	PrimaryExpression	0		5241803	1					
ANR	5241893	Condition	i < gs_debug_flags_max	1170:18:33117:33138	5241803	1	True				
ANR	5241894	RelationalExpression	i < gs_debug_flags_max		5241803	0		<			
ANR	5241895	Identifier	i		5241803	0					
ANR	5241896	Identifier	gs_debug_flags_max		5241803	1					
ANR	5241897	PostIncDecOperationExpression	i ++	1170:42:33141:33143	5241803	2	True				
ANR	5241898	Identifier	i		5241803	0					
ANR	5241899	IncDec	++		5241803	1					
ANR	5241900	CompoundStatement		23:12:469:478	5241803	3					
ANR	5241901	IdentifierDeclStatement	"char c , d ;"	1171:12:33160:33169	5241803	0	True				
ANR	5241902	IdentifierDecl	c		5241803	0					
ANR	5241903	IdentifierDeclType	char		5241803	0					
ANR	5241904	Identifier	c		5241803	1					
ANR	5241905	IdentifierDecl	d		5241803	1					
ANR	5241906	IdentifierDeclType	char		5241803	0					
ANR	5241907	Identifier	d		5241803	1					
ANR	5241908	IfStatement	if ( ! gs_debug_flags [ i ] . used )		5241803	1					
ANR	5241909	Condition	! gs_debug_flags [ i ] . used	1172:16:33187:33209	5241803	0	True				
ANR	5241910	UnaryOperationExpression	! gs_debug_flags [ i ] . used		5241803	0					
ANR	5241911	UnaryOperator	!		5241803	0					
ANR	5241912	MemberAccess	gs_debug_flags [ i ] . used		5241803	1					
ANR	5241913	ArrayIndexing	gs_debug_flags [ i ]		5241803	0					
ANR	5241914	Identifier	gs_debug_flags		5241803	0					
ANR	5241915	Identifier	i		5241803	1					
ANR	5241916	Identifier	used		5241803	1					
ANR	5241917	ContinueStatement	continue ;	1173:16:33228:33236	5241803	1	True				
ANR	5241918	ExpressionStatement	p = arg	1174:12:33250:33257	5241803	2	True				
ANR	5241919	AssignmentExpression	p = arg		5241803	0		=			
ANR	5241920	Identifier	p		5241803	0					
ANR	5241921	Identifier	arg		5241803	1					
ANR	5241922	ForStatement	for ( j = 0 ; j < sizeof ( gs_debug_flags [ i ] . short_desc ) ; j ++ )		5241803	3					
ANR	5241923	ForInit	j = 0 ;	1175:17:33276:33279	5241803	0	True				
ANR	5241924	AssignmentExpression	j = 0		5241803	0		=			
ANR	5241925	Identifier	j		5241803	0					
ANR	5241926	PrimaryExpression	0		5241803	1					
ANR	5241927	Condition	j < sizeof ( gs_debug_flags [ i ] . short_desc )	1175:22:33281:33320	5241803	1	True				
ANR	5241928	RelationalExpression	j < sizeof ( gs_debug_flags [ i ] . short_desc )		5241803	0		<			
ANR	5241929	Identifier	j		5241803	0					
ANR	5241930	SizeofExpression	sizeof ( gs_debug_flags [ i ] . short_desc )		5241803	1					
ANR	5241931	Sizeof	sizeof		5241803	0					
ANR	5241932	MemberAccess	gs_debug_flags [ i ] . short_desc		5241803	1					
ANR	5241933	ArrayIndexing	gs_debug_flags [ i ]		5241803	0					
ANR	5241934	Identifier	gs_debug_flags		5241803	0					
ANR	5241935	Identifier	i		5241803	1					
ANR	5241936	Identifier	short_desc		5241803	1					
ANR	5241937	PostIncDecOperationExpression	j ++	1175:64:33323:33325	5241803	2	True				
ANR	5241938	Identifier	j		5241803	0					
ANR	5241939	IncDec	++		5241803	1					
ANR	5241940	CompoundStatement		27:69:637:637	5241803	3					
ANR	5241941	ExpressionStatement	d = gs_debug_flags [ i ] . short_desc [ j ]	1176:16:33346:33381	5241803	0	True				
ANR	5241942	AssignmentExpression	d = gs_debug_flags [ i ] . short_desc [ j ]		5241803	0		=			
ANR	5241943	Identifier	d		5241803	0					
ANR	5241944	ArrayIndexing	gs_debug_flags [ i ] . short_desc [ j ]		5241803	1					
ANR	5241945	MemberAccess	gs_debug_flags [ i ] . short_desc		5241803	0					
ANR	5241946	ArrayIndexing	gs_debug_flags [ i ]		5241803	0					
ANR	5241947	Identifier	gs_debug_flags		5241803	0					
ANR	5241948	Identifier	i		5241803	1					
ANR	5241949	Identifier	short_desc		5241803	1					
ANR	5241950	Identifier	j		5241803	1					
ANR	5241951	ExpressionStatement	c = * p ++	1177:16:33399:33407	5241803	1	True				
ANR	5241952	AssignmentExpression	c = * p ++		5241803	0		=			
ANR	5241953	Identifier	c		5241803	0					
ANR	5241954	UnaryOperationExpression	* p ++		5241803	1					
ANR	5241955	UnaryOperator	*		5241803	0					
ANR	5241956	PostIncDecOperationExpression	p ++		5241803	1					
ANR	5241957	Identifier	p		5241803	0					
ANR	5241958	IncDec	++		5241803	1					
ANR	5241959	IfStatement	if ( d == '_' )		5241803	2					
ANR	5241960	Condition	d == '_'	1178:20:33429:33436	5241803	0	True				
ANR	5241961	EqualityExpression	d == '_'		5241803	0		==			
ANR	5241962	Identifier	d		5241803	0					
ANR	5241963	PrimaryExpression	'_'		5241803	1					
ANR	5241964	ExpressionStatement	d = '-'	1178:30:33439:33446	5241803	1	True				
ANR	5241965	AssignmentExpression	d = '-'		5241803	0		=			
ANR	5241966	Identifier	d		5241803	0					
ANR	5241967	PrimaryExpression	'-'		5241803	1					
ANR	5241968	IfStatement	"if ( c == ',' )"		5241803	3					
ANR	5241969	Condition	"c == ','"	1179:20:33468:33475	5241803	0	True				
ANR	5241970	EqualityExpression	"c == ','"		5241803	0		==			
ANR	5241971	Identifier	c		5241803	0					
ANR	5241972	PrimaryExpression	"','"		5241803	1					
ANR	5241973	ExpressionStatement	c = 0	1180:20:33498:33503	5241803	1	True				
ANR	5241974	AssignmentExpression	c = 0		5241803	0		=			
ANR	5241975	Identifier	c		5241803	0					
ANR	5241976	PrimaryExpression	0		5241803	1					
ANR	5241977	IfStatement	if ( ( c != d ) || ( c == 0 ) )		5241803	4					
ANR	5241978	Condition	( c != d ) || ( c == 0 )	1181:20:33525:33544	5241803	0	True				
ANR	5241979	OrExpression	( c != d ) || ( c == 0 )		5241803	0		||			
ANR	5241980	EqualityExpression	c != d		5241803	0		!=			
ANR	5241981	Identifier	c		5241803	0					
ANR	5241982	Identifier	d		5241803	1					
ANR	5241983	EqualityExpression	c == 0		5241803	1		==			
ANR	5241984	Identifier	c		5241803	0					
ANR	5241985	PrimaryExpression	0		5241803	1					
ANR	5241986	BreakStatement	break ;	1182:20:33567:33572	5241803	1	True				
ANR	5241987	IfStatement	if ( ( c == 0 ) && ( d == 0 ) )		5241803	4					
ANR	5241988	Condition	( c == 0 ) && ( d == 0 )	1184:16:33604:33623	5241803	0	True				
ANR	5241989	AndExpression	( c == 0 ) && ( d == 0 )		5241803	0		&&			
ANR	5241990	EqualityExpression	c == 0		5241803	0		==			
ANR	5241991	Identifier	c		5241803	0					
ANR	5241992	PrimaryExpression	0		5241803	1					
ANR	5241993	EqualityExpression	d == 0		5241803	1		==			
ANR	5241994	Identifier	d		5241803	0					
ANR	5241995	PrimaryExpression	0		5241803	1					
ANR	5241996	BreakStatement	break ;	1185:16:33642:33647	5241803	1	True				
ANR	5241997	IfStatement	if ( i < gs_debug_flags_max )		5241803	6					
ANR	5241998	Condition	i < gs_debug_flags_max	1187:12:33671:33692	5241803	0	True				
ANR	5241999	RelationalExpression	i < gs_debug_flags_max		5241803	0		<			
ANR	5242000	Identifier	i		5241803	0					
ANR	5242001	Identifier	gs_debug_flags_max		5241803	1					
ANR	5242002	ExpressionStatement	gs_debug [ i ] = value	1188:12:33707:33726	5241803	1	True				
ANR	5242003	AssignmentExpression	gs_debug [ i ] = value		5241803	0		=			
ANR	5242004	ArrayIndexing	gs_debug [ i ]		5241803	0					
ANR	5242005	Identifier	gs_debug		5241803	0					
ANR	5242006	Identifier	i		5241803	1					
ANR	5242007	Identifier	value		5241803	1					
ANR	5242008	ElseStatement	else		5241803	0					
ANR	5242009	CompoundStatement		41:13:1050:1050	5241803	0					
ANR	5242010	ExpressionStatement	"outprintf ( heap , ""Unknown debug flag: "" )"	1190:12:33755:33794	5241803	0	True				
ANR	5242011	CallExpression	"outprintf ( heap , ""Unknown debug flag: "" )"		5241803	0					
ANR	5242012	Callee	outprintf		5241803	0					
ANR	5242013	Identifier	outprintf		5241803	0					
ANR	5242014	ArgumentList	heap		5241803	1					
ANR	5242015	Argument	heap		5241803	0					
ANR	5242016	Identifier	heap		5241803	0					
ANR	5242017	Argument	"""Unknown debug flag: """		5241803	1					
ANR	5242018	PrimaryExpression	"""Unknown debug flag: """		5241803	0					
ANR	5242019	ExpressionStatement	p = arg	1191:12:33808:33815	5241803	1	True				
ANR	5242020	AssignmentExpression	p = arg		5241803	0		=			
ANR	5242021	Identifier	p		5241803	0					
ANR	5242022	Identifier	arg		5241803	1					
ANR	5242023	DoStatement	do		5241803	2					
ANR	5242024	CompoundStatement		45:16:1159:1172	5241803	0					
ANR	5242025	IdentifierDeclStatement	char c = * p ++ ;	1193:16:33850:33863	5241803	0	True				
ANR	5242026	IdentifierDecl	c = * p ++		5241803	0					
ANR	5242027	IdentifierDeclType	char		5241803	0					
ANR	5242028	Identifier	c		5241803	1					
ANR	5242029	AssignmentExpression	c = * p ++		5241803	2		=			
ANR	5242030	Identifier	c		5241803	0					
ANR	5242031	UnaryOperationExpression	* p ++		5241803	1					
ANR	5242032	UnaryOperator	*		5241803	0					
ANR	5242033	PostIncDecOperationExpression	p ++		5241803	1					
ANR	5242034	Identifier	p		5241803	0					
ANR	5242035	IncDec	++		5241803	1					
ANR	5242036	IfStatement	"if ( ( c == 0 ) || ( c == ',' ) )"		5241803	1					
ANR	5242037	Condition	"( c == 0 ) || ( c == ',' )"	1194:20:33885:33906	5241803	0	True				
ANR	5242038	OrExpression	"( c == 0 ) || ( c == ',' )"		5241803	0		||			
ANR	5242039	EqualityExpression	c == 0		5241803	0		==			
ANR	5242040	Identifier	c		5241803	0					
ANR	5242041	PrimaryExpression	0		5241803	1					
ANR	5242042	EqualityExpression	"c == ','"		5241803	1		==			
ANR	5242043	Identifier	c		5241803	0					
ANR	5242044	PrimaryExpression	"','"		5241803	1					
ANR	5242045	BreakStatement	break ;	1195:20:33929:33934	5241803	1	True				
ANR	5242046	ExpressionStatement	"outprintf ( heap , ""%c"" , c )"	1196:16:33952:33976	5241803	2	True				
ANR	5242047	CallExpression	"outprintf ( heap , ""%c"" , c )"		5241803	0					
ANR	5242048	Callee	outprintf		5241803	0					
ANR	5242049	Identifier	outprintf		5241803	0					
ANR	5242050	ArgumentList	heap		5241803	1					
ANR	5242051	Argument	heap		5241803	0					
ANR	5242052	Identifier	heap		5241803	0					
ANR	5242053	Argument	"""%c"""		5241803	1					
ANR	5242054	PrimaryExpression	"""%c"""		5241803	0					
ANR	5242055	Argument	c		5241803	2					
ANR	5242056	Identifier	c		5241803	0					
ANR	5242057	Condition	1	1197:21:33999:33999	5241803	1	True				
ANR	5242058	PrimaryExpression	1		5241803	0					
ANR	5242059	ExpressionStatement	"outprintf ( heap , ""\\n"" )"	1198:12:34015:34036	5241803	3	True				
ANR	5242060	CallExpression	"outprintf ( heap , ""\\n"" )"		5241803	0					
ANR	5242061	Callee	outprintf		5241803	0					
ANR	5242062	Identifier	outprintf		5241803	0					
ANR	5242063	ArgumentList	heap		5241803	1					
ANR	5242064	Argument	heap		5241803	0					
ANR	5242065	Identifier	heap		5241803	0					
ANR	5242066	Argument	"""\\n"""		5241803	1					
ANR	5242067	PrimaryExpression	"""\\n"""		5241803	0					
ANR	5242068	ExpressionStatement	result = gs_error_Fatal	1199:12:34050:34073	5241803	4	True				
ANR	5242069	AssignmentExpression	result = gs_error_Fatal		5241803	0		=			
ANR	5242070	Identifier	result		5241803	0					
ANR	5242071	Identifier	gs_error_Fatal		5241803	1					
ANR	5242072	ExpressionStatement	arg = p - 1	1201:8:34093:34102	5241803	7	True				
ANR	5242073	AssignmentExpression	arg = p - 1		5241803	0		=			
ANR	5242074	Identifier	arg		5241803	0					
ANR	5242075	AdditiveExpression	p - 1		5241803	1		-			
ANR	5242076	Identifier	p		5241803	0					
ANR	5242077	PrimaryExpression	1		5241803	1					
ANR	5242078	ReturnStatement	return result ;	1203:4:34114:34127	5241803	4	True				
ANR	5242079	Identifier	result		5241803	0					
ANR	5242080	ReturnType	int		5241803	1					
ANR	5242081	Identifier	gs_debug_flags_parse		5241803	2					
ANR	5242082	ParameterList	"gs_memory_t * heap , const char * arg"		5241803	3					
ANR	5242083	Parameter	gs_memory_t * heap	1148:25:32654:32670	5241803	0	True				
ANR	5242084	ParameterType	gs_memory_t *		5241803	0					
ANR	5242085	Identifier	heap		5241803	1					
ANR	5242086	Parameter	const char * arg	1148:44:32673:32687	5241803	1	True				
ANR	5242087	ParameterType	const char *		5241803	0					
ANR	5242088	Identifier	arg		5241803	1					
ANR	5242089	CFGEntryNode	ENTRY		5241803		True				
ANR	5242090	CFGExitNode	EXIT		5241803		True				
ANR	5242091	Symbol	gs_error_Fatal		5241803						
ANR	5242092	Symbol	* * i		5241803						
ANR	5242093	Symbol	c		5241803						
ANR	5242094	Symbol	d		5241803						
ANR	5242095	Symbol	* gs_debug_flags		5241803						
ANR	5242096	Symbol	* p ++		5241803						
ANR	5242097	Symbol	i		5241803						
ANR	5242098	Symbol	j		5241803						
ANR	5242099	Symbol	* gs_debug_flags [ i ] . short_desc		5241803						
ANR	5242100	Symbol	p		5241803						
ANR	5242101	Symbol	result		5241803						
ANR	5242102	Symbol	* * gs_debug_flags		5241803						
ANR	5242103	Symbol	gs_debug		5241803						
ANR	5242104	Symbol	* i		5241803						
ANR	5242105	Symbol	* j		5241803						
ANR	5242106	Symbol	gs_debug_flags		5241803						
ANR	5242107	Symbol	arg		5241803						
ANR	5242108	Symbol	gs_debug_flags_max		5241803						
ANR	5242109	Symbol	* gs_debug		5241803						
ANR	5242110	Symbol	heap		5241803						
ANR	5242111	Symbol	gs_debug_flags [ i ] . short_desc		5241803						
ANR	5242112	Symbol	value		5241803						
ANR	5242113	Symbol	gs_debug_flags [ i ] . used		5241803						
ANR	5242114	Symbol	* arg		5241803						
ANR	5242115	Function	gs_debug_flags_list	1210:0:34232:35446							
ANR	5242116	FunctionDef	gs_debug_flags_list (gs_memory_t * heap)		5242115	0					
ANR	5242117	CompoundStatement		1212:0:34276:35446	5242115	0					
ANR	5242118	IdentifierDeclStatement	"int i , j ;"	1214:4:34295:34303	5242115	0	True				
ANR	5242119	IdentifierDecl	i		5242115	0					
ANR	5242120	IdentifierDeclType	int		5242115	0					
ANR	5242121	Identifier	i		5242115	1					
ANR	5242122	IdentifierDecl	j		5242115	1					
ANR	5242123	IdentifierDeclType	int		5242115	0					
ANR	5242124	Identifier	j		5242115	1					
ANR	5242125	ExpressionStatement	"outprintf ( heap , ""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"" )"	1216:4:34310:34401	5242115	1	True				
ANR	5242126	CallExpression	"outprintf ( heap , ""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"" )"		5242115	0					
ANR	5242127	Callee	outprintf		5242115	0					
ANR	5242128	Identifier	outprintf		5242115	0					
ANR	5242129	ArgumentList	heap		5242115	1					
ANR	5242130	Argument	heap		5242115	0					
ANR	5242131	Identifier	heap		5242115	0					
ANR	5242132	Argument	"""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"""		5242115	1					
ANR	5242133	PrimaryExpression	"""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"""		5242115	0					
ANR	5242134	ForStatement	for ( i = 0 ; i < gs_debug_flags_max ; i ++ )		5242115	2					
ANR	5242135	ForInit	i = 0 ;	1217:9:34412:34415	5242115	0	True				
ANR	5242136	AssignmentExpression	i = 0		5242115	0		=			
ANR	5242137	Identifier	i		5242115	0					
ANR	5242138	PrimaryExpression	0		5242115	1					
ANR	5242139	Condition	i < gs_debug_flags_max	1217:14:34417:34438	5242115	1	True				
ANR	5242140	RelationalExpression	i < gs_debug_flags_max		5242115	0		<			
ANR	5242141	Identifier	i		5242115	0					
ANR	5242142	Identifier	gs_debug_flags_max		5242115	1					
ANR	5242143	PostIncDecOperationExpression	i ++	1217:38:34441:34443	5242115	2	True				
ANR	5242144	Identifier	i		5242115	0					
ANR	5242145	IncDec	++		5242115	1					
ANR	5242146	CompoundStatement		6:43:169:169	5242115	3					
ANR	5242147	IfStatement	if ( ! gs_debug_flags [ i ] . used )		5242115	0					
ANR	5242148	Condition	! gs_debug_flags [ i ] . used	1218:12:34460:34482	5242115	0	True				
ANR	5242149	UnaryOperationExpression	! gs_debug_flags [ i ] . used		5242115	0					
ANR	5242150	UnaryOperator	!		5242115	0					
ANR	5242151	MemberAccess	gs_debug_flags [ i ] . used		5242115	1					
ANR	5242152	ArrayIndexing	gs_debug_flags [ i ]		5242115	0					
ANR	5242153	Identifier	gs_debug_flags		5242115	0					
ANR	5242154	Identifier	i		5242115	1					
ANR	5242155	Identifier	used		5242115	1					
ANR	5242156	ContinueStatement	continue ;	1219:12:34497:34505	5242115	1	True				
ANR	5242157	ExpressionStatement	"outprintf ( heap , "" %c  "" , ( i < 32 || i > 126 ? ' ' : i ) )"	1220:8:34515:34570	5242115	1	True				
ANR	5242158	CallExpression	"outprintf ( heap , "" %c  "" , ( i < 32 || i > 126 ? ' ' : i ) )"		5242115	0					
ANR	5242159	Callee	outprintf		5242115	0					
ANR	5242160	Identifier	outprintf		5242115	0					
ANR	5242161	ArgumentList	heap		5242115	1					
ANR	5242162	Argument	heap		5242115	0					
ANR	5242163	Identifier	heap		5242115	0					
ANR	5242164	Argument	""" %c  """		5242115	1					
ANR	5242165	PrimaryExpression	""" %c  """		5242115	0					
ANR	5242166	Argument	i < 32 || i > 126 ? ' ' : i		5242115	2					
ANR	5242167	ConditionalExpression	i < 32 || i > 126 ? ' ' : i		5242115	0					
ANR	5242168	Condition	i < 32 || i > 126		5242115	0					
ANR	5242169	OrExpression	i < 32 || i > 126		5242115	0		||			
ANR	5242170	RelationalExpression	i < 32		5242115	0		<			
ANR	5242171	Identifier	i		5242115	0					
ANR	5242172	PrimaryExpression	32		5242115	1					
ANR	5242173	RelationalExpression	i > 126		5242115	1		>			
ANR	5242174	Identifier	i		5242115	0					
ANR	5242175	PrimaryExpression	126		5242115	1					
ANR	5242176	PrimaryExpression	' '		5242115	1					
ANR	5242177	Identifier	i		5242115	2					
ANR	5242178	ForStatement	for ( j = 0 ; j < sizeof ( gs_debug_flags [ i ] . short_desc ) ; j ++ )		5242115	2					
ANR	5242179	ForInit	j = 0 ;	1221:13:34585:34588	5242115	0	True				
ANR	5242180	AssignmentExpression	j = 0		5242115	0		=			
ANR	5242181	Identifier	j		5242115	0					
ANR	5242182	PrimaryExpression	0		5242115	1					
ANR	5242183	Condition	j < sizeof ( gs_debug_flags [ i ] . short_desc )	1221:18:34590:34629	5242115	1	True				
ANR	5242184	RelationalExpression	j < sizeof ( gs_debug_flags [ i ] . short_desc )		5242115	0		<			
ANR	5242185	Identifier	j		5242115	0					
ANR	5242186	SizeofExpression	sizeof ( gs_debug_flags [ i ] . short_desc )		5242115	1					
ANR	5242187	Sizeof	sizeof		5242115	0					
ANR	5242188	MemberAccess	gs_debug_flags [ i ] . short_desc		5242115	1					
ANR	5242189	ArrayIndexing	gs_debug_flags [ i ]		5242115	0					
ANR	5242190	Identifier	gs_debug_flags		5242115	0					
ANR	5242191	Identifier	i		5242115	1					
ANR	5242192	Identifier	short_desc		5242115	1					
ANR	5242193	PostIncDecOperationExpression	j ++	1221:60:34632:34634	5242115	2	True				
ANR	5242194	Identifier	j		5242115	0					
ANR	5242195	IncDec	++		5242115	1					
ANR	5242196	CompoundStatement		11:12:374:414	5242115	3					
ANR	5242197	IdentifierDeclStatement	char c = gs_debug_flags [ i ] . short_desc [ j ] ;	1222:12:34651:34691	5242115	0	True				
ANR	5242198	IdentifierDecl	c = gs_debug_flags [ i ] . short_desc [ j ]		5242115	0					
ANR	5242199	IdentifierDeclType	char		5242115	0					
ANR	5242200	Identifier	c		5242115	1					
ANR	5242201	AssignmentExpression	c = gs_debug_flags [ i ] . short_desc [ j ]		5242115	2		=			
ANR	5242202	Identifier	c		5242115	0					
ANR	5242203	ArrayIndexing	gs_debug_flags [ i ] . short_desc [ j ]		5242115	1					
ANR	5242204	MemberAccess	gs_debug_flags [ i ] . short_desc		5242115	0					
ANR	5242205	ArrayIndexing	gs_debug_flags [ i ]		5242115	0					
ANR	5242206	Identifier	gs_debug_flags		5242115	0					
ANR	5242207	Identifier	i		5242115	1					
ANR	5242208	Identifier	short_desc		5242115	1					
ANR	5242209	Identifier	j		5242115	1					
ANR	5242210	IfStatement	if ( c == 0 )		5242115	1					
ANR	5242211	Condition	c == 0	1223:16:34709:34714	5242115	0	True				
ANR	5242212	EqualityExpression	c == 0		5242115	0		==			
ANR	5242213	Identifier	c		5242115	0					
ANR	5242214	PrimaryExpression	0		5242115	1					
ANR	5242215	BreakStatement	break ;	1224:16:34733:34738	5242115	1	True				
ANR	5242216	IfStatement	if ( c == '_' )		5242115	2					
ANR	5242217	Condition	c == '_'	1225:16:34756:34763	5242115	0	True				
ANR	5242218	EqualityExpression	c == '_'		5242115	0		==			
ANR	5242219	Identifier	c		5242115	0					
ANR	5242220	PrimaryExpression	'_'		5242115	1					
ANR	5242221	ExpressionStatement	c = '-'	1226:16:34782:34789	5242115	1	True				
ANR	5242222	AssignmentExpression	c = '-'		5242115	0		=			
ANR	5242223	Identifier	c		5242115	0					
ANR	5242224	PrimaryExpression	'-'		5242115	1					
ANR	5242225	ExpressionStatement	"outprintf ( heap , ""%c"" , c )"	1227:12:34803:34827	5242115	3	True				
ANR	5242226	CallExpression	"outprintf ( heap , ""%c"" , c )"		5242115	0					
ANR	5242227	Callee	outprintf		5242115	0					
ANR	5242228	Identifier	outprintf		5242115	0					
ANR	5242229	ArgumentList	heap		5242115	1					
ANR	5242230	Argument	heap		5242115	0					
ANR	5242231	Identifier	heap		5242115	0					
ANR	5242232	Argument	"""%c"""		5242115	1					
ANR	5242233	PrimaryExpression	"""%c"""		5242115	0					
ANR	5242234	Argument	c		5242115	2					
ANR	5242235	Identifier	c		5242115	0					
ANR	5242236	ForStatement	for ( ; j < sizeof ( gs_debug_flags [ i ] . short_desc ) ; j ++ )		5242115	3					
ANR	5242237	Condition	j < sizeof ( gs_debug_flags [ i ] . short_desc )	1229:15:34854:34893	5242115	0	True				
ANR	5242238	RelationalExpression	j < sizeof ( gs_debug_flags [ i ] . short_desc )		5242115	0		<			
ANR	5242239	Identifier	j		5242115	0					
ANR	5242240	SizeofExpression	sizeof ( gs_debug_flags [ i ] . short_desc )		5242115	1					
ANR	5242241	Sizeof	sizeof		5242115	0					
ANR	5242242	MemberAccess	gs_debug_flags [ i ] . short_desc		5242115	1					
ANR	5242243	ArrayIndexing	gs_debug_flags [ i ]		5242115	0					
ANR	5242244	Identifier	gs_debug_flags		5242115	0					
ANR	5242245	Identifier	i		5242115	1					
ANR	5242246	Identifier	short_desc		5242115	1					
ANR	5242247	PostIncDecOperationExpression	j ++	1229:57:34896:34898	5242115	1	True				
ANR	5242248	Identifier	j		5242115	0					
ANR	5242249	IncDec	++		5242115	1					
ANR	5242250	CompoundStatement		18:62:624:624	5242115	2					
ANR	5242251	ExpressionStatement	"outprintf ( heap , "" "" )"	1230:12:34915:34935	5242115	0	True				
ANR	5242252	CallExpression	"outprintf ( heap , "" "" )"		5242115	0					
ANR	5242253	Callee	outprintf		5242115	0					
ANR	5242254	Identifier	outprintf		5242115	0					
ANR	5242255	ArgumentList	heap		5242115	1					
ANR	5242256	Argument	heap		5242115	0					
ANR	5242257	Identifier	heap		5242115	0					
ANR	5242258	Argument	""" """		5242115	1					
ANR	5242259	PrimaryExpression	""" """		5242115	0					
ANR	5242260	ExpressionStatement	"outprintf ( heap , ""%s\\n"" , gs_debug_flags [ i ] . long_desc )"	1232:8:34955:35007	5242115	4	True				
ANR	5242261	CallExpression	"outprintf ( heap , ""%s\\n"" , gs_debug_flags [ i ] . long_desc )"		5242115	0					
ANR	5242262	Callee	outprintf		5242115	0					
ANR	5242263	Identifier	outprintf		5242115	0					
ANR	5242264	ArgumentList	heap		5242115	1					
ANR	5242265	Argument	heap		5242115	0					
ANR	5242266	Identifier	heap		5242115	0					
ANR	5242267	Argument	"""%s\\n"""		5242115	1					
ANR	5242268	PrimaryExpression	"""%s\\n"""		5242115	0					
ANR	5242269	Argument	gs_debug_flags [ i ] . long_desc		5242115	2					
ANR	5242270	MemberAccess	gs_debug_flags [ i ] . long_desc		5242115	0					
ANR	5242271	ArrayIndexing	gs_debug_flags [ i ]		5242115	0					
ANR	5242272	Identifier	gs_debug_flags		5242115	0					
ANR	5242273	Identifier	i		5242115	1					
ANR	5242274	Identifier	long_desc		5242115	1					
ANR	5242275	Statement	outprintf	1234:4:35019:35027	5242115	3	True				
ANR	5242276	Statement	(	1234:13:35028:35028	5242115	4	True				
ANR	5242277	Statement	heap	1234:14:35029:35032	5242115	5	True				
ANR	5242278	Statement	","	1234:18:35033:35033	5242115	6	True				
ANR	5242279	Statement	"""\\nDebugging may be enabled by using -Zx (where x is one of the 1 character\\n"""	1235:14:35049:35126	5242115	7	True				
ANR	5242280	Statement	"""codes given above), or by using --debug=xxxxx. Multiple flags may be specified\\n"""	1236:14:35142:35223	5242115	8	True				
ANR	5242281	Statement	"""at once, using -Zxyz or --debug=xxxxx,yyyyy,zzzzz. -Z=-x or --debug=-xxxxx\\n"""	1237:14:35239:35316	5242115	9	True				
ANR	5242282	Statement	"""disables a flag once set.\\n"""	1238:14:35332:35360	5242115	10	True				
ANR	5242283	Statement	)	1238:43:35361:35361	5242115	11	True				
ANR	5242284	ExpressionStatement		1238:44:35362:35362	5242115	12	True				
ANR	5242285	ReturnType	void		5242115	1					
ANR	5242286	Identifier	gs_debug_flags_list		5242115	2					
ANR	5242287	ParameterList	gs_memory_t * heap		5242115	3					
ANR	5242288	Parameter	gs_memory_t * heap	1211:20:34257:34273	5242115	0	True				
ANR	5242289	ParameterType	gs_memory_t *		5242115	0					
ANR	5242290	Identifier	heap		5242115	1					
ANR	5242291	CFGEntryNode	ENTRY		5242115		True				
ANR	5242292	CFGExitNode	EXIT		5242115		True				
ANR	5242293	Symbol	* * i		5242115						
ANR	5242294	Symbol	c		5242115						
ANR	5242295	Symbol	* gs_debug_flags		5242115						
ANR	5242296	Symbol	i		5242115						
ANR	5242297	Symbol	j		5242115						
ANR	5242298	Symbol	gs_debug_flags [ i ] . long_desc		5242115						
ANR	5242299	Symbol	* gs_debug_flags [ i ] . short_desc		5242115						
ANR	5242300	Symbol	* * gs_debug_flags		5242115						
ANR	5242301	Symbol	* i		5242115						
ANR	5242302	Symbol	* j		5242115						
ANR	5242303	Symbol	gs_debug_flags		5242115						
ANR	5242304	Symbol	gs_debug_flags_max		5242115						
ANR	5242305	Symbol	heap		5242115						
ANR	5242306	Symbol	gs_debug_flags [ i ] . short_desc		5242115						
ANR	5242307	Symbol	gs_debug_flags [ i ] . used		5242115						
