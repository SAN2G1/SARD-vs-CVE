command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6146096	File	data/converged/CVE-2018-16863_ghostpdl/iutil.c								
ANR	6146097	DeclStmt									
ANR	6146098	Decl							const byte	const byte [ ]	ref_type_properties
ANR	6146099	Function	refcpy_to_old	54:0:1580:2167							
ANR	6146100	FunctionDef	"refcpy_to_old (ref * aref , uint index , const ref * from , uint size , gs_dual_memory_t * idmemory , client_name_t cname)"		6146099	0					
ANR	6146101	CompoundStatement		57:0:1714:2167	6146099	0					
ANR	6146102	IdentifierDeclStatement	ref * to = aref -> value . refs + index ;	58:4:1720:1754	6146099	0	True				
ANR	6146103	IdentifierDecl	* to = aref -> value . refs + index		6146099	0					
ANR	6146104	IdentifierDeclType	ref *		6146099	0					
ANR	6146105	Identifier	to		6146099	1					
ANR	6146106	AssignmentExpression	* to = aref -> value . refs + index		6146099	2		=			
ANR	6146107	Identifier	to		6146099	0					
ANR	6146108	AdditiveExpression	aref -> value . refs + index		6146099	1		+			
ANR	6146109	MemberAccess	aref -> value . refs		6146099	0					
ANR	6146110	PtrMemberAccess	aref -> value		6146099	0					
ANR	6146111	Identifier	aref		6146099	0					
ANR	6146112	Identifier	value		6146099	1					
ANR	6146113	Identifier	refs		6146099	1					
ANR	6146114	Identifier	index		6146099	1					
ANR	6146115	IdentifierDeclStatement	"int code = refs_check_space ( from , size , r_space ( aref ) ) ;"	59:4:1760:1814	6146099	1	True				
ANR	6146116	IdentifierDecl	"code = refs_check_space ( from , size , r_space ( aref ) )"		6146099	0					
ANR	6146117	IdentifierDeclType	int		6146099	0					
ANR	6146118	Identifier	code		6146099	1					
ANR	6146119	AssignmentExpression	"code = refs_check_space ( from , size , r_space ( aref ) )"		6146099	2		=			
ANR	6146120	Identifier	code		6146099	0					
ANR	6146121	CallExpression	"refs_check_space ( from , size , r_space ( aref ) )"		6146099	1					
ANR	6146122	Callee	refs_check_space		6146099	0					
ANR	6146123	Identifier	refs_check_space		6146099	0					
ANR	6146124	ArgumentList	from		6146099	1					
ANR	6146125	Argument	from		6146099	0					
ANR	6146126	Identifier	from		6146099	0					
ANR	6146127	Argument	size		6146099	1					
ANR	6146128	Identifier	size		6146099	0					
ANR	6146129	Argument	r_space ( aref )		6146099	2					
ANR	6146130	CallExpression	r_space ( aref )		6146099	0					
ANR	6146131	Callee	r_space		6146099	0					
ANR	6146132	Identifier	r_space		6146099	0					
ANR	6146133	ArgumentList	aref		6146099	1					
ANR	6146134	Argument	aref		6146099	0					
ANR	6146135	Identifier	aref		6146099	0					
ANR	6146136	IfStatement	if ( code < 0 )		6146099	2					
ANR	6146137	Condition	code < 0	61:8:1825:1832	6146099	0	True				
ANR	6146138	RelationalExpression	code < 0		6146099	0		<			
ANR	6146139	Identifier	code		6146099	0					
ANR	6146140	PrimaryExpression	0		6146099	1					
ANR	6146141	ReturnStatement	return code ;	62:8:1843:1854	6146099	1	True				
ANR	6146142	Identifier	code		6146099	0					
ANR	6146143	IfStatement	if ( to <= from || from + size <= to )		6146099	3					
ANR	6146144	Condition	to <= from || from + size <= to	64:8:1910:1940	6146099	0	True				
ANR	6146145	OrExpression	to <= from || from + size <= to		6146099	0		||			
ANR	6146146	RelationalExpression	to <= from		6146099	0		<=			
ANR	6146147	Identifier	to		6146099	0					
ANR	6146148	Identifier	from		6146099	1					
ANR	6146149	RelationalExpression	from + size <= to		6146099	1		<=			
ANR	6146150	AdditiveExpression	from + size		6146099	0		+			
ANR	6146151	Identifier	from		6146099	0					
ANR	6146152	Identifier	size		6146099	1					
ANR	6146153	Identifier	to		6146099	1					
ANR	6146154	WhileStatement	while ( size -- )		6146099	1					
ANR	6146155	Condition	size --	65:15:1958:1963	6146099	0	True				
ANR	6146156	PostIncDecOperationExpression	size --		6146099	0					
ANR	6146157	Identifier	size		6146099	0					
ANR	6146158	IncDec	--		6146099	1					
ANR	6146159	ExpressionStatement	"ref_assign_old ( aref , to , from , cname ) , to ++ , from ++"	66:12:1978:2029	6146099	1	True				
ANR	6146160	Expression	"ref_assign_old ( aref , to , from , cname ) , to ++ , from ++"		6146099	0					
ANR	6146161	CallExpression	"ref_assign_old ( aref , to , from , cname )"		6146099	0					
ANR	6146162	Callee	ref_assign_old		6146099	0					
ANR	6146163	Identifier	ref_assign_old		6146099	0					
ANR	6146164	ArgumentList	aref		6146099	1					
ANR	6146165	Argument	aref		6146099	0					
ANR	6146166	Identifier	aref		6146099	0					
ANR	6146167	Argument	to		6146099	1					
ANR	6146168	Identifier	to		6146099	0					
ANR	6146169	Argument	from		6146099	2					
ANR	6146170	Identifier	from		6146099	0					
ANR	6146171	Argument	cname		6146099	3					
ANR	6146172	Identifier	cname		6146099	0					
ANR	6146173	Expression	"to ++ , from ++"		6146099	1					
ANR	6146174	PostIncDecOperationExpression	to ++		6146099	0					
ANR	6146175	Identifier	to		6146099	0					
ANR	6146176	IncDec	++		6146099	1					
ANR	6146177	PostIncDecOperationExpression	from ++		6146099	1					
ANR	6146178	Identifier	from		6146099	0					
ANR	6146179	IncDec	++		6146099	1					
ANR	6146180	ElseStatement	else		6146099	0					
ANR	6146181	ForStatement	"for ( from += size , to += size ; size -- ; )"		6146099	0					
ANR	6146182	ForInit	"from += size , to += size ;"	68:13:2053:2077	6146099	0	True				
ANR	6146183	Expression	"from += size , to += size"		6146099	0					
ANR	6146184	AssignmentExpression	from += size		6146099	0		+=			
ANR	6146185	Identifier	from		6146099	0					
ANR	6146186	Identifier	size		6146099	1					
ANR	6146187	AssignmentExpression	to += size		6146099	1		+=			
ANR	6146188	Identifier	to		6146099	0					
ANR	6146189	Identifier	size		6146099	1					
ANR	6146190	Condition	size --	68:39:2079:2084	6146099	1	True				
ANR	6146191	PostIncDecOperationExpression	size --		6146099	0					
ANR	6146192	Identifier	size		6146099	0					
ANR	6146193	IncDec	--		6146099	1					
ANR	6146194	ExpressionStatement	"from -- , to -- , ref_assign_old ( aref , to , from , cname )"	69:12:2100:2151	6146099	2	True				
ANR	6146195	Expression	"from -- , to -- , ref_assign_old ( aref , to , from , cname )"		6146099	0					
ANR	6146196	PostIncDecOperationExpression	from --		6146099	0					
ANR	6146197	Identifier	from		6146099	0					
ANR	6146198	IncDec	--		6146099	1					
ANR	6146199	Expression	"to -- , ref_assign_old ( aref , to , from , cname )"		6146099	1					
ANR	6146200	PostIncDecOperationExpression	to --		6146099	0					
ANR	6146201	Identifier	to		6146099	0					
ANR	6146202	IncDec	--		6146099	1					
ANR	6146203	CallExpression	"ref_assign_old ( aref , to , from , cname )"		6146099	1					
ANR	6146204	Callee	ref_assign_old		6146099	0					
ANR	6146205	Identifier	ref_assign_old		6146099	0					
ANR	6146206	ArgumentList	aref		6146099	1					
ANR	6146207	Argument	aref		6146099	0					
ANR	6146208	Identifier	aref		6146099	0					
ANR	6146209	Argument	to		6146099	1					
ANR	6146210	Identifier	to		6146099	0					
ANR	6146211	Argument	from		6146099	2					
ANR	6146212	Identifier	from		6146099	0					
ANR	6146213	Argument	cname		6146099	3					
ANR	6146214	Identifier	cname		6146099	0					
ANR	6146215	ReturnStatement	return 0 ;	70:4:2157:2165	6146099	4	True				
ANR	6146216	PrimaryExpression	0		6146099	0					
ANR	6146217	ReturnType	int		6146099	1					
ANR	6146218	Identifier	refcpy_to_old		6146099	2					
ANR	6146219	ParameterList	"ref * aref , uint index , const ref * from , uint size , gs_dual_memory_t * idmemory , client_name_t cname"		6146099	3					
ANR	6146220	Parameter	ref * aref	55:14:1598:1607	6146099	0	True				
ANR	6146221	ParameterType	ref *		6146099	0					
ANR	6146222	Identifier	aref		6146099	1					
ANR	6146223	Parameter	uint index	55:26:1610:1619	6146099	1	True				
ANR	6146224	ParameterType	uint		6146099	0					
ANR	6146225	Identifier	index		6146099	1					
ANR	6146226	Parameter	const ref * from	55:38:1622:1637	6146099	2	True				
ANR	6146227	ParameterType	const ref *		6146099	0					
ANR	6146228	Identifier	from		6146099	1					
ANR	6146229	Parameter	uint size	56:14:1654:1662	6146099	3	True				
ANR	6146230	ParameterType	uint		6146099	0					
ANR	6146231	Identifier	size		6146099	1					
ANR	6146232	Parameter	gs_dual_memory_t * idmemory	56:25:1665:1690	6146099	4	True				
ANR	6146233	ParameterType	gs_dual_memory_t *		6146099	0					
ANR	6146234	Identifier	idmemory		6146099	1					
ANR	6146235	Parameter	client_name_t cname	56:53:1693:1711	6146099	5	True				
ANR	6146236	ParameterType	client_name_t		6146099	0					
ANR	6146237	Identifier	cname		6146099	1					
ANR	6146238	CFGEntryNode	ENTRY		6146099		True				
ANR	6146239	CFGExitNode	EXIT		6146099		True				
ANR	6146240	Symbol	code		6146099						
ANR	6146241	Symbol	cname		6146099						
ANR	6146242	Symbol	index		6146099						
ANR	6146243	Symbol	idmemory		6146099						
ANR	6146244	Symbol	r_space		6146099						
ANR	6146245	Symbol	size		6146099						
ANR	6146246	Symbol	* aref		6146099						
ANR	6146247	Symbol	aref -> value . refs		6146099						
ANR	6146248	Symbol	refs_check_space		6146099						
ANR	6146249	Symbol	from		6146099						
ANR	6146250	Symbol	aref -> value		6146099						
ANR	6146251	Symbol	to		6146099						
ANR	6146252	Symbol	aref		6146099						
ANR	6146253	Function	refcpy_to_new	72:0:2169:2338							
ANR	6146254	FunctionDef	"refcpy_to_new (ref * to , const ref * from , uint size , gs_dual_memory_t * idmemory)"		6146253	0					
ANR	6146255	CompoundStatement		75:0:2269:2338	6146253	0					
ANR	6146256	WhileStatement	while ( size -- )		6146253	0					
ANR	6146257	Condition	size --	76:11:2282:2287	6146253	0	True				
ANR	6146258	PostIncDecOperationExpression	size --		6146253	0					
ANR	6146259	Identifier	size		6146253	0					
ANR	6146260	IncDec	--		6146253	1					
ANR	6146261	ExpressionStatement	"ref_assign_new ( to , from ) , to ++ , from ++"	77:8:2298:2336	6146253	1	True				
ANR	6146262	Expression	"ref_assign_new ( to , from ) , to ++ , from ++"		6146253	0					
ANR	6146263	CallExpression	"ref_assign_new ( to , from )"		6146253	0					
ANR	6146264	Callee	ref_assign_new		6146253	0					
ANR	6146265	Identifier	ref_assign_new		6146253	0					
ANR	6146266	ArgumentList	to		6146253	1					
ANR	6146267	Argument	to		6146253	0					
ANR	6146268	Identifier	to		6146253	0					
ANR	6146269	Argument	from		6146253	1					
ANR	6146270	Identifier	from		6146253	0					
ANR	6146271	Expression	"to ++ , from ++"		6146253	1					
ANR	6146272	PostIncDecOperationExpression	to ++		6146253	0					
ANR	6146273	Identifier	to		6146253	0					
ANR	6146274	IncDec	++		6146253	1					
ANR	6146275	PostIncDecOperationExpression	from ++		6146253	1					
ANR	6146276	Identifier	from		6146253	0					
ANR	6146277	IncDec	++		6146253	1					
ANR	6146278	ReturnType	void		6146253	1					
ANR	6146279	Identifier	refcpy_to_new		6146253	2					
ANR	6146280	ParameterList	"ref * to , const ref * from , uint size , gs_dual_memory_t * idmemory"		6146253	3					
ANR	6146281	Parameter	ref * to	73:14:2188:2195	6146253	0	True				
ANR	6146282	ParameterType	ref *		6146253	0					
ANR	6146283	Identifier	to		6146253	1					
ANR	6146284	Parameter	const ref * from	73:24:2198:2213	6146253	1	True				
ANR	6146285	ParameterType	const ref *		6146253	0					
ANR	6146286	Identifier	from		6146253	1					
ANR	6146287	Parameter	uint size	73:42:2216:2224	6146253	2	True				
ANR	6146288	ParameterType	uint		6146253	0					
ANR	6146289	Identifier	size		6146253	1					
ANR	6146290	Parameter	gs_dual_memory_t * idmemory	74:14:2241:2266	6146253	3	True				
ANR	6146291	ParameterType	gs_dual_memory_t *		6146253	0					
ANR	6146292	Identifier	idmemory		6146253	1					
ANR	6146293	CFGEntryNode	ENTRY		6146253		True				
ANR	6146294	CFGExitNode	EXIT		6146253		True				
ANR	6146295	Symbol	idmemory		6146253						
ANR	6146296	Symbol	size		6146253						
ANR	6146297	Symbol	from		6146253						
ANR	6146298	Symbol	to		6146253						
ANR	6146299	Function	refset_null_new	81:0:2377:2500							
ANR	6146300	FunctionDef	"refset_null_new (ref * to , uint size , uint new_mask)"		6146299	0					
ANR	6146301	CompoundStatement		83:0:2434:2500	6146299	0					
ANR	6146302	ForStatement	for ( ; size -- ; ++ to )		6146299	0					
ANR	6146303	Condition	size --	84:11:2447:2452	6146299	0	True				
ANR	6146304	PostIncDecOperationExpression	size --		6146299	0					
ANR	6146305	Identifier	size		6146299	0					
ANR	6146306	IncDec	--		6146299	1					
ANR	6146307	UnaryExpression	++ to	84:19:2455:2458	6146299	1	True				
ANR	6146308	IncDec	++		6146299	0					
ANR	6146309	Identifier	to		6146299	1					
ANR	6146310	ExpressionStatement	"make_ta ( to , t_null , new_mask )"	85:8:2469:2498	6146299	2	True				
ANR	6146311	CallExpression	"make_ta ( to , t_null , new_mask )"		6146299	0					
ANR	6146312	Callee	make_ta		6146299	0					
ANR	6146313	Identifier	make_ta		6146299	0					
ANR	6146314	ArgumentList	to		6146299	1					
ANR	6146315	Argument	to		6146299	0					
ANR	6146316	Identifier	to		6146299	0					
ANR	6146317	Argument	t_null		6146299	1					
ANR	6146318	Identifier	t_null		6146299	0					
ANR	6146319	Argument	new_mask		6146299	2					
ANR	6146320	Identifier	new_mask		6146299	0					
ANR	6146321	ReturnType	void		6146299	1					
ANR	6146322	Identifier	refset_null_new		6146299	2					
ANR	6146323	ParameterList	"ref * to , uint size , uint new_mask"		6146299	3					
ANR	6146324	Parameter	ref * to	82:16:2398:2405	6146299	0	True				
ANR	6146325	ParameterType	ref *		6146299	0					
ANR	6146326	Identifier	to		6146299	1					
ANR	6146327	Parameter	uint size	82:26:2408:2416	6146299	1	True				
ANR	6146328	ParameterType	uint		6146299	0					
ANR	6146329	Identifier	size		6146299	1					
ANR	6146330	Parameter	uint new_mask	82:37:2419:2431	6146299	2	True				
ANR	6146331	ParameterType	uint		6146299	0					
ANR	6146332	Identifier	new_mask		6146299	1					
ANR	6146333	CFGEntryNode	ENTRY		6146299		True				
ANR	6146334	CFGExitNode	EXIT		6146299		True				
ANR	6146335	Symbol	t_null		6146299						
ANR	6146336	Symbol	size		6146299						
ANR	6146337	Symbol	to		6146299						
ANR	6146338	Symbol	new_mask		6146299						
ANR	6146339	DeclStmt									
ANR	6146340	Decl							bool	"bool ( const gs_memory_t * mem , const gs_font * pfont1 , const gs_font * pfont2 )"	fid_eq
ANR	6146341	Function	obj_eq	91:0:2653:6538							
ANR	6146342	FunctionDef	"obj_eq (const gs_memory_t * mem , const ref * pref1 , const ref * pref2)"		6146341	0					
ANR	6146343	CompoundStatement		93:0:2727:6538	6146341	0					
ANR	6146344	IdentifierDeclStatement	ref nref ;	94:4:2733:2741	6146341	0	True				
ANR	6146345	IdentifierDecl	nref		6146341	0					
ANR	6146346	IdentifierDeclType	ref		6146341	0					
ANR	6146347	Identifier	nref		6146341	1					
ANR	6146348	IfStatement	if ( r_type ( pref1 ) != r_type ( pref2 ) )		6146341	1					
ANR	6146349	Condition	r_type ( pref1 ) != r_type ( pref2 )	96:8:2752:2781	6146341	0	True				
ANR	6146350	EqualityExpression	r_type ( pref1 ) != r_type ( pref2 )		6146341	0		!=			
ANR	6146351	CallExpression	r_type ( pref1 )		6146341	0					
ANR	6146352	Callee	r_type		6146341	0					
ANR	6146353	Identifier	r_type		6146341	0					
ANR	6146354	ArgumentList	pref1		6146341	1					
ANR	6146355	Argument	pref1		6146341	0					
ANR	6146356	Identifier	pref1		6146341	0					
ANR	6146357	CallExpression	r_type ( pref2 )		6146341	1					
ANR	6146358	Callee	r_type		6146341	0					
ANR	6146359	Identifier	r_type		6146341	0					
ANR	6146360	ArgumentList	pref2		6146341	1					
ANR	6146361	Argument	pref2		6146341	0					
ANR	6146362	Identifier	pref2		6146341	0					
ANR	6146363	CompoundStatement		4:40:56:56	6146341	1					
ANR	6146364	SwitchStatement	switch ( r_type ( pref1 ) )		6146341	0					
ANR	6146365	Condition	r_type ( pref1 )	102:16:2993:3005	6146341	0	True				
ANR	6146366	CallExpression	r_type ( pref1 )		6146341	0					
ANR	6146367	Callee	r_type		6146341	0					
ANR	6146368	Identifier	r_type		6146341	0					
ANR	6146369	ArgumentList	pref1		6146341	1					
ANR	6146370	Argument	pref1		6146341	0					
ANR	6146371	Identifier	pref1		6146341	0					
ANR	6146372	CompoundStatement		10:31:280:280	6146341	1					
ANR	6146373	Label	case t_integer :	103:12:3022:3036	6146341	0	True				
ANR	6146374	Identifier	t_integer		6146341	0					
ANR	6146375	ReturnStatement	"return ( r_has_type ( pref2 , t_real ) && pref2 -> value . realval == pref1 -> value . intval ) ;"	104:16:3054:3159	6146341	1	True				
ANR	6146376	AndExpression	"r_has_type ( pref2 , t_real ) && pref2 -> value . realval == pref1 -> value . intval"		6146341	0		&&			
ANR	6146377	CallExpression	"r_has_type ( pref2 , t_real )"		6146341	0					
ANR	6146378	Callee	r_has_type		6146341	0					
ANR	6146379	Identifier	r_has_type		6146341	0					
ANR	6146380	ArgumentList	pref2		6146341	1					
ANR	6146381	Argument	pref2		6146341	0					
ANR	6146382	Identifier	pref2		6146341	0					
ANR	6146383	Argument	t_real		6146341	1					
ANR	6146384	Identifier	t_real		6146341	0					
ANR	6146385	EqualityExpression	pref2 -> value . realval == pref1 -> value . intval		6146341	1		==			
ANR	6146386	MemberAccess	pref2 -> value . realval		6146341	0					
ANR	6146387	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146388	Identifier	pref2		6146341	0					
ANR	6146389	Identifier	value		6146341	1					
ANR	6146390	Identifier	realval		6146341	1					
ANR	6146391	MemberAccess	pref1 -> value . intval		6146341	1					
ANR	6146392	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146393	Identifier	pref1		6146341	0					
ANR	6146394	Identifier	value		6146341	1					
ANR	6146395	Identifier	intval		6146341	1					
ANR	6146396	Label	case t_real :	106:12:3173:3184	6146341	2	True				
ANR	6146397	Identifier	t_real		6146341	0					
ANR	6146398	ReturnStatement	"return ( r_has_type ( pref2 , t_integer ) && pref2 -> value . intval == pref1 -> value . realval ) ;"	107:16:3202:3310	6146341	3	True				
ANR	6146399	AndExpression	"r_has_type ( pref2 , t_integer ) && pref2 -> value . intval == pref1 -> value . realval"		6146341	0		&&			
ANR	6146400	CallExpression	"r_has_type ( pref2 , t_integer )"		6146341	0					
ANR	6146401	Callee	r_has_type		6146341	0					
ANR	6146402	Identifier	r_has_type		6146341	0					
ANR	6146403	ArgumentList	pref2		6146341	1					
ANR	6146404	Argument	pref2		6146341	0					
ANR	6146405	Identifier	pref2		6146341	0					
ANR	6146406	Argument	t_integer		6146341	1					
ANR	6146407	Identifier	t_integer		6146341	0					
ANR	6146408	EqualityExpression	pref2 -> value . intval == pref1 -> value . realval		6146341	1		==			
ANR	6146409	MemberAccess	pref2 -> value . intval		6146341	0					
ANR	6146410	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146411	Identifier	pref2		6146341	0					
ANR	6146412	Identifier	value		6146341	1					
ANR	6146413	Identifier	intval		6146341	1					
ANR	6146414	MemberAccess	pref1 -> value . realval		6146341	1					
ANR	6146415	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146416	Identifier	pref1		6146341	0					
ANR	6146417	Identifier	value		6146341	1					
ANR	6146418	Identifier	realval		6146341	1					
ANR	6146419	Label	case t_name :	109:12:3324:3335	6146341	4	True				
ANR	6146420	Identifier	t_name		6146341	0					
ANR	6146421	IfStatement	"if ( ! r_has_type ( pref2 , t_string ) )"		6146341	5					
ANR	6146422	Condition	"! r_has_type ( pref2 , t_string )"	110:20:3357:3384	6146341	0	True				
ANR	6146423	UnaryOperationExpression	"! r_has_type ( pref2 , t_string )"		6146341	0					
ANR	6146424	UnaryOperator	!		6146341	0					
ANR	6146425	CallExpression	"r_has_type ( pref2 , t_string )"		6146341	1					
ANR	6146426	Callee	r_has_type		6146341	0					
ANR	6146427	Identifier	r_has_type		6146341	0					
ANR	6146428	ArgumentList	pref2		6146341	1					
ANR	6146429	Argument	pref2		6146341	0					
ANR	6146430	Identifier	pref2		6146341	0					
ANR	6146431	Argument	t_string		6146341	1					
ANR	6146432	Identifier	t_string		6146341	0					
ANR	6146433	ReturnStatement	return false ;	111:20:3407:3419	6146341	1	True				
ANR	6146434	Identifier	false		6146341	0					
ANR	6146435	ExpressionStatement	"name_string_ref ( mem , pref1 , & nref )"	112:16:3437:3471	6146341	6	True				
ANR	6146436	CallExpression	"name_string_ref ( mem , pref1 , & nref )"		6146341	0					
ANR	6146437	Callee	name_string_ref		6146341	0					
ANR	6146438	Identifier	name_string_ref		6146341	0					
ANR	6146439	ArgumentList	mem		6146341	1					
ANR	6146440	Argument	mem		6146341	0					
ANR	6146441	Identifier	mem		6146341	0					
ANR	6146442	Argument	pref1		6146341	1					
ANR	6146443	Identifier	pref1		6146341	0					
ANR	6146444	Argument	& nref		6146341	2					
ANR	6146445	UnaryOperationExpression	& nref		6146341	0					
ANR	6146446	UnaryOperator	&		6146341	0					
ANR	6146447	Identifier	nref		6146341	1					
ANR	6146448	ExpressionStatement	pref1 = & nref	113:16:3489:3502	6146341	7	True				
ANR	6146449	AssignmentExpression	pref1 = & nref		6146341	0		=			
ANR	6146450	Identifier	pref1		6146341	0					
ANR	6146451	UnaryOperationExpression	& nref		6146341	1					
ANR	6146452	UnaryOperator	&		6146341	0					
ANR	6146453	Identifier	nref		6146341	1					
ANR	6146454	BreakStatement	break ;	114:16:3520:3525	6146341	8	True				
ANR	6146455	Label	case t_string :	115:12:3539:3552	6146341	9	True				
ANR	6146456	Identifier	t_string		6146341	0					
ANR	6146457	IfStatement	"if ( ! r_has_type ( pref2 , t_name ) )"		6146341	10					
ANR	6146458	Condition	"! r_has_type ( pref2 , t_name )"	116:20:3574:3599	6146341	0	True				
ANR	6146459	UnaryOperationExpression	"! r_has_type ( pref2 , t_name )"		6146341	0					
ANR	6146460	UnaryOperator	!		6146341	0					
ANR	6146461	CallExpression	"r_has_type ( pref2 , t_name )"		6146341	1					
ANR	6146462	Callee	r_has_type		6146341	0					
ANR	6146463	Identifier	r_has_type		6146341	0					
ANR	6146464	ArgumentList	pref2		6146341	1					
ANR	6146465	Argument	pref2		6146341	0					
ANR	6146466	Identifier	pref2		6146341	0					
ANR	6146467	Argument	t_name		6146341	1					
ANR	6146468	Identifier	t_name		6146341	0					
ANR	6146469	ReturnStatement	return false ;	117:20:3622:3634	6146341	1	True				
ANR	6146470	Identifier	false		6146341	0					
ANR	6146471	ExpressionStatement	"name_string_ref ( mem , pref2 , & nref )"	118:16:3652:3686	6146341	11	True				
ANR	6146472	CallExpression	"name_string_ref ( mem , pref2 , & nref )"		6146341	0					
ANR	6146473	Callee	name_string_ref		6146341	0					
ANR	6146474	Identifier	name_string_ref		6146341	0					
ANR	6146475	ArgumentList	mem		6146341	1					
ANR	6146476	Argument	mem		6146341	0					
ANR	6146477	Identifier	mem		6146341	0					
ANR	6146478	Argument	pref2		6146341	1					
ANR	6146479	Identifier	pref2		6146341	0					
ANR	6146480	Argument	& nref		6146341	2					
ANR	6146481	UnaryOperationExpression	& nref		6146341	0					
ANR	6146482	UnaryOperator	&		6146341	0					
ANR	6146483	Identifier	nref		6146341	1					
ANR	6146484	ExpressionStatement	pref2 = & nref	119:16:3704:3717	6146341	12	True				
ANR	6146485	AssignmentExpression	pref2 = & nref		6146341	0		=			
ANR	6146486	Identifier	pref2		6146341	0					
ANR	6146487	UnaryOperationExpression	& nref		6146341	1					
ANR	6146488	UnaryOperator	&		6146341	0					
ANR	6146489	Identifier	nref		6146341	1					
ANR	6146490	BreakStatement	break ;	120:16:3735:3740	6146341	13	True				
ANR	6146491	Label	case t_mixedarray :	126:12:3968:3985	6146341	14	True				
ANR	6146492	Identifier	t_mixedarray		6146341	0					
ANR	6146493	Label	case t_shortarray :	127:12:3999:4016	6146341	15	True				
ANR	6146494	Identifier	t_shortarray		6146341	0					
ANR	6146495	ReturnStatement	return ( ( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 ) == t_mixedarray + t_shortarray ) && r_size ( pref1 ) == 0 && r_size ( pref2 ) == 0 ;	132:16:4215:4382	6146341	16	True				
ANR	6146496	AndExpression	( ( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 ) == t_mixedarray + t_shortarray ) && r_size ( pref1 ) == 0 && r_size ( pref2 ) == 0		6146341	0		&&			
ANR	6146497	EqualityExpression	( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 ) == t_mixedarray + t_shortarray		6146341	0		==			
ANR	6146498	AdditiveExpression	( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 )		6146341	0		+			
ANR	6146499	CastExpression	( int ) r_type ( pref1 )		6146341	0					
ANR	6146500	CastTarget	int		6146341	0					
ANR	6146501	CallExpression	r_type ( pref1 )		6146341	1					
ANR	6146502	Callee	r_type		6146341	0					
ANR	6146503	Identifier	r_type		6146341	0					
ANR	6146504	ArgumentList	pref1		6146341	1					
ANR	6146505	Argument	pref1		6146341	0					
ANR	6146506	Identifier	pref1		6146341	0					
ANR	6146507	CastExpression	( int ) r_type ( pref2 )		6146341	1					
ANR	6146508	CastTarget	int		6146341	0					
ANR	6146509	CallExpression	r_type ( pref2 )		6146341	1					
ANR	6146510	Callee	r_type		6146341	0					
ANR	6146511	Identifier	r_type		6146341	0					
ANR	6146512	ArgumentList	pref2		6146341	1					
ANR	6146513	Argument	pref2		6146341	0					
ANR	6146514	Identifier	pref2		6146341	0					
ANR	6146515	AdditiveExpression	t_mixedarray + t_shortarray		6146341	1		+			
ANR	6146516	Identifier	t_mixedarray		6146341	0					
ANR	6146517	Identifier	t_shortarray		6146341	1					
ANR	6146518	AndExpression	r_size ( pref1 ) == 0 && r_size ( pref2 ) == 0		6146341	1		&&			
ANR	6146519	EqualityExpression	r_size ( pref1 ) == 0		6146341	0		==			
ANR	6146520	CallExpression	r_size ( pref1 )		6146341	0					
ANR	6146521	Callee	r_size		6146341	0					
ANR	6146522	Identifier	r_size		6146341	0					
ANR	6146523	ArgumentList	pref1		6146341	1					
ANR	6146524	Argument	pref1		6146341	0					
ANR	6146525	Identifier	pref1		6146341	0					
ANR	6146526	PrimaryExpression	0		6146341	1					
ANR	6146527	EqualityExpression	r_size ( pref2 ) == 0		6146341	1		==			
ANR	6146528	CallExpression	r_size ( pref2 )		6146341	0					
ANR	6146529	Callee	r_size		6146341	0					
ANR	6146530	Identifier	r_size		6146341	0					
ANR	6146531	ArgumentList	pref2		6146341	1					
ANR	6146532	Argument	pref2		6146341	0					
ANR	6146533	Identifier	pref2		6146341	0					
ANR	6146534	PrimaryExpression	0		6146341	1					
ANR	6146535	Label	default :	135:12:4396:4403	6146341	17	True				
ANR	6146536	Identifier	default		6146341	0					
ANR	6146537	IfStatement	if ( r_btype ( pref1 ) != r_btype ( pref2 ) )		6146341	18					
ANR	6146538	Condition	r_btype ( pref1 ) != r_btype ( pref2 )	136:20:4425:4456	6146341	0	True				
ANR	6146539	EqualityExpression	r_btype ( pref1 ) != r_btype ( pref2 )		6146341	0		!=			
ANR	6146540	CallExpression	r_btype ( pref1 )		6146341	0					
ANR	6146541	Callee	r_btype		6146341	0					
ANR	6146542	Identifier	r_btype		6146341	0					
ANR	6146543	ArgumentList	pref1		6146341	1					
ANR	6146544	Argument	pref1		6146341	0					
ANR	6146545	Identifier	pref1		6146341	0					
ANR	6146546	CallExpression	r_btype ( pref2 )		6146341	1					
ANR	6146547	Callee	r_btype		6146341	0					
ANR	6146548	Identifier	r_btype		6146341	0					
ANR	6146549	ArgumentList	pref2		6146341	1					
ANR	6146550	Argument	pref2		6146341	0					
ANR	6146551	Identifier	pref2		6146341	0					
ANR	6146552	ReturnStatement	return false ;	137:20:4479:4491	6146341	1	True				
ANR	6146553	Identifier	false		6146341	0					
ANR	6146554	SwitchStatement	switch ( r_btype ( pref1 ) )		6146341	2					
ANR	6146555	Condition	r_btype ( pref1 )	144:12:4684:4697	6146341	0	True				
ANR	6146556	CallExpression	r_btype ( pref1 )		6146341	0					
ANR	6146557	Callee	r_btype		6146341	0					
ANR	6146558	Identifier	r_btype		6146341	0					
ANR	6146559	ArgumentList	pref1		6146341	1					
ANR	6146560	Argument	pref1		6146341	0					
ANR	6146561	Identifier	pref1		6146341	0					
ANR	6146562	CompoundStatement		52:28:1972:1972	6146341	1					
ANR	6146563	Label	case t_array :	145:8:4710:4722	6146341	0	True				
ANR	6146564	Identifier	t_array		6146341	0					
ANR	6146565	ReturnStatement	return ( ( pref1 -> value . refs == pref2 -> value . refs || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 ) ) ;	146:12:4736:4882	6146341	1	True				
ANR	6146566	AndExpression	( pref1 -> value . refs == pref2 -> value . refs || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 )		6146341	0		&&			
ANR	6146567	OrExpression	pref1 -> value . refs == pref2 -> value . refs || r_size ( pref1 ) == 0		6146341	0		||			
ANR	6146568	EqualityExpression	pref1 -> value . refs == pref2 -> value . refs		6146341	0		==			
ANR	6146569	MemberAccess	pref1 -> value . refs		6146341	0					
ANR	6146570	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146571	Identifier	pref1		6146341	0					
ANR	6146572	Identifier	value		6146341	1					
ANR	6146573	Identifier	refs		6146341	1					
ANR	6146574	MemberAccess	pref2 -> value . refs		6146341	1					
ANR	6146575	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146576	Identifier	pref2		6146341	0					
ANR	6146577	Identifier	value		6146341	1					
ANR	6146578	Identifier	refs		6146341	1					
ANR	6146579	EqualityExpression	r_size ( pref1 ) == 0		6146341	1		==			
ANR	6146580	CallExpression	r_size ( pref1 )		6146341	0					
ANR	6146581	Callee	r_size		6146341	0					
ANR	6146582	Identifier	r_size		6146341	0					
ANR	6146583	ArgumentList	pref1		6146341	1					
ANR	6146584	Argument	pref1		6146341	0					
ANR	6146585	Identifier	pref1		6146341	0					
ANR	6146586	PrimaryExpression	0		6146341	1					
ANR	6146587	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		6146341	1		==			
ANR	6146588	CallExpression	r_size ( pref1 )		6146341	0					
ANR	6146589	Callee	r_size		6146341	0					
ANR	6146590	Identifier	r_size		6146341	0					
ANR	6146591	ArgumentList	pref1		6146341	1					
ANR	6146592	Argument	pref1		6146341	0					
ANR	6146593	Identifier	pref1		6146341	0					
ANR	6146594	CallExpression	r_size ( pref2 )		6146341	1					
ANR	6146595	Callee	r_size		6146341	0					
ANR	6146596	Identifier	r_size		6146341	0					
ANR	6146597	ArgumentList	pref2		6146341	1					
ANR	6146598	Argument	pref2		6146341	0					
ANR	6146599	Identifier	pref2		6146341	0					
ANR	6146600	Label	case t_mixedarray :	149:8:4892:4909	6146341	2	True				
ANR	6146601	Identifier	t_mixedarray		6146341	0					
ANR	6146602	Label	case t_shortarray :	150:8:4919:4936	6146341	3	True				
ANR	6146603	Identifier	t_shortarray		6146341	0					
ANR	6146604	ReturnStatement	return ( ( pref1 -> value . packed == pref2 -> value . packed || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 ) ) ;	151:12:4950:5100	6146341	4	True				
ANR	6146605	AndExpression	( pref1 -> value . packed == pref2 -> value . packed || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 )		6146341	0		&&			
ANR	6146606	OrExpression	pref1 -> value . packed == pref2 -> value . packed || r_size ( pref1 ) == 0		6146341	0		||			
ANR	6146607	EqualityExpression	pref1 -> value . packed == pref2 -> value . packed		6146341	0		==			
ANR	6146608	MemberAccess	pref1 -> value . packed		6146341	0					
ANR	6146609	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146610	Identifier	pref1		6146341	0					
ANR	6146611	Identifier	value		6146341	1					
ANR	6146612	Identifier	packed		6146341	1					
ANR	6146613	MemberAccess	pref2 -> value . packed		6146341	1					
ANR	6146614	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146615	Identifier	pref2		6146341	0					
ANR	6146616	Identifier	value		6146341	1					
ANR	6146617	Identifier	packed		6146341	1					
ANR	6146618	EqualityExpression	r_size ( pref1 ) == 0		6146341	1		==			
ANR	6146619	CallExpression	r_size ( pref1 )		6146341	0					
ANR	6146620	Callee	r_size		6146341	0					
ANR	6146621	Identifier	r_size		6146341	0					
ANR	6146622	ArgumentList	pref1		6146341	1					
ANR	6146623	Argument	pref1		6146341	0					
ANR	6146624	Identifier	pref1		6146341	0					
ANR	6146625	PrimaryExpression	0		6146341	1					
ANR	6146626	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		6146341	1		==			
ANR	6146627	CallExpression	r_size ( pref1 )		6146341	0					
ANR	6146628	Callee	r_size		6146341	0					
ANR	6146629	Identifier	r_size		6146341	0					
ANR	6146630	ArgumentList	pref1		6146341	1					
ANR	6146631	Argument	pref1		6146341	0					
ANR	6146632	Identifier	pref1		6146341	0					
ANR	6146633	CallExpression	r_size ( pref2 )		6146341	1					
ANR	6146634	Callee	r_size		6146341	0					
ANR	6146635	Identifier	r_size		6146341	0					
ANR	6146636	ArgumentList	pref2		6146341	1					
ANR	6146637	Argument	pref2		6146341	0					
ANR	6146638	Identifier	pref2		6146341	0					
ANR	6146639	Label	case t_boolean :	154:8:5110:5124	6146341	5	True				
ANR	6146640	Identifier	t_boolean		6146341	0					
ANR	6146641	ReturnStatement	return ( pref1 -> value . boolval == pref2 -> value . boolval ) ;	155:12:5138:5191	6146341	6	True				
ANR	6146642	EqualityExpression	pref1 -> value . boolval == pref2 -> value . boolval		6146341	0		==			
ANR	6146643	MemberAccess	pref1 -> value . boolval		6146341	0					
ANR	6146644	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146645	Identifier	pref1		6146341	0					
ANR	6146646	Identifier	value		6146341	1					
ANR	6146647	Identifier	boolval		6146341	1					
ANR	6146648	MemberAccess	pref2 -> value . boolval		6146341	1					
ANR	6146649	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146650	Identifier	pref2		6146341	0					
ANR	6146651	Identifier	value		6146341	1					
ANR	6146652	Identifier	boolval		6146341	1					
ANR	6146653	Label	case t_dictionary :	156:8:5201:5218	6146341	7	True				
ANR	6146654	Identifier	t_dictionary		6146341	0					
ANR	6146655	ReturnStatement	return ( pref1 -> value . pdict == pref2 -> value . pdict ) ;	157:12:5232:5281	6146341	8	True				
ANR	6146656	EqualityExpression	pref1 -> value . pdict == pref2 -> value . pdict		6146341	0		==			
ANR	6146657	MemberAccess	pref1 -> value . pdict		6146341	0					
ANR	6146658	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146659	Identifier	pref1		6146341	0					
ANR	6146660	Identifier	value		6146341	1					
ANR	6146661	Identifier	pdict		6146341	1					
ANR	6146662	MemberAccess	pref2 -> value . pdict		6146341	1					
ANR	6146663	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146664	Identifier	pref2		6146341	0					
ANR	6146665	Identifier	value		6146341	1					
ANR	6146666	Identifier	pdict		6146341	1					
ANR	6146667	Label	case t_file :	158:8:5291:5302	6146341	9	True				
ANR	6146668	Identifier	t_file		6146341	0					
ANR	6146669	ReturnStatement	return ( pref1 -> value . pfile == pref2 -> value . pfile && r_size ( pref1 ) == r_size ( pref2 ) ) ;	159:12:5316:5419	6146341	10	True				
ANR	6146670	AndExpression	pref1 -> value . pfile == pref2 -> value . pfile && r_size ( pref1 ) == r_size ( pref2 )		6146341	0		&&			
ANR	6146671	EqualityExpression	pref1 -> value . pfile == pref2 -> value . pfile		6146341	0		==			
ANR	6146672	MemberAccess	pref1 -> value . pfile		6146341	0					
ANR	6146673	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146674	Identifier	pref1		6146341	0					
ANR	6146675	Identifier	value		6146341	1					
ANR	6146676	Identifier	pfile		6146341	1					
ANR	6146677	MemberAccess	pref2 -> value . pfile		6146341	1					
ANR	6146678	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146679	Identifier	pref2		6146341	0					
ANR	6146680	Identifier	value		6146341	1					
ANR	6146681	Identifier	pfile		6146341	1					
ANR	6146682	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		6146341	1		==			
ANR	6146683	CallExpression	r_size ( pref1 )		6146341	0					
ANR	6146684	Callee	r_size		6146341	0					
ANR	6146685	Identifier	r_size		6146341	0					
ANR	6146686	ArgumentList	pref1		6146341	1					
ANR	6146687	Argument	pref1		6146341	0					
ANR	6146688	Identifier	pref1		6146341	0					
ANR	6146689	CallExpression	r_size ( pref2 )		6146341	1					
ANR	6146690	Callee	r_size		6146341	0					
ANR	6146691	Identifier	r_size		6146341	0					
ANR	6146692	ArgumentList	pref2		6146341	1					
ANR	6146693	Argument	pref2		6146341	0					
ANR	6146694	Identifier	pref2		6146341	0					
ANR	6146695	Label	case t_integer :	161:8:5429:5443	6146341	11	True				
ANR	6146696	Identifier	t_integer		6146341	0					
ANR	6146697	ReturnStatement	return ( pref1 -> value . intval == pref2 -> value . intval ) ;	162:12:5457:5508	6146341	12	True				
ANR	6146698	EqualityExpression	pref1 -> value . intval == pref2 -> value . intval		6146341	0		==			
ANR	6146699	MemberAccess	pref1 -> value . intval		6146341	0					
ANR	6146700	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146701	Identifier	pref1		6146341	0					
ANR	6146702	Identifier	value		6146341	1					
ANR	6146703	Identifier	intval		6146341	1					
ANR	6146704	MemberAccess	pref2 -> value . intval		6146341	1					
ANR	6146705	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146706	Identifier	pref2		6146341	0					
ANR	6146707	Identifier	value		6146341	1					
ANR	6146708	Identifier	intval		6146341	1					
ANR	6146709	Label	case t_mark :	163:8:5518:5529	6146341	13	True				
ANR	6146710	Identifier	t_mark		6146341	0					
ANR	6146711	Label	case t_null :	164:8:5539:5550	6146341	14	True				
ANR	6146712	Identifier	t_null		6146341	0					
ANR	6146713	ReturnStatement	return true ;	165:12:5564:5575	6146341	15	True				
ANR	6146714	Identifier	true		6146341	0					
ANR	6146715	Label	case t_name :	166:8:5585:5596	6146341	16	True				
ANR	6146716	Identifier	t_name		6146341	0					
ANR	6146717	ReturnStatement	return ( pref1 -> value . pname == pref2 -> value . pname ) ;	167:12:5610:5659	6146341	17	True				
ANR	6146718	EqualityExpression	pref1 -> value . pname == pref2 -> value . pname		6146341	0		==			
ANR	6146719	MemberAccess	pref1 -> value . pname		6146341	0					
ANR	6146720	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146721	Identifier	pref1		6146341	0					
ANR	6146722	Identifier	value		6146341	1					
ANR	6146723	Identifier	pname		6146341	1					
ANR	6146724	MemberAccess	pref2 -> value . pname		6146341	1					
ANR	6146725	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146726	Identifier	pref2		6146341	0					
ANR	6146727	Identifier	value		6146341	1					
ANR	6146728	Identifier	pname		6146341	1					
ANR	6146729	Label	case t_oparray :	168:8:5669:5683	6146341	18	True				
ANR	6146730	Identifier	t_oparray		6146341	0					
ANR	6146731	Label	case t_operator :	169:8:5693:5708	6146341	19	True				
ANR	6146732	Identifier	t_operator		6146341	0					
ANR	6146733	ReturnStatement	return ( op_index ( pref1 ) == op_index ( pref2 ) ) ;	170:12:5722:5765	6146341	20	True				
ANR	6146734	EqualityExpression	op_index ( pref1 ) == op_index ( pref2 )		6146341	0		==			
ANR	6146735	CallExpression	op_index ( pref1 )		6146341	0					
ANR	6146736	Callee	op_index		6146341	0					
ANR	6146737	Identifier	op_index		6146341	0					
ANR	6146738	ArgumentList	pref1		6146341	1					
ANR	6146739	Argument	pref1		6146341	0					
ANR	6146740	Identifier	pref1		6146341	0					
ANR	6146741	CallExpression	op_index ( pref2 )		6146341	1					
ANR	6146742	Callee	op_index		6146341	0					
ANR	6146743	Identifier	op_index		6146341	0					
ANR	6146744	ArgumentList	pref2		6146341	1					
ANR	6146745	Argument	pref2		6146341	0					
ANR	6146746	Identifier	pref2		6146341	0					
ANR	6146747	Label	case t_real :	171:8:5775:5786	6146341	21	True				
ANR	6146748	Identifier	t_real		6146341	0					
ANR	6146749	ReturnStatement	return ( pref1 -> value . realval == pref2 -> value . realval ) ;	172:12:5800:5853	6146341	22	True				
ANR	6146750	EqualityExpression	pref1 -> value . realval == pref2 -> value . realval		6146341	0		==			
ANR	6146751	MemberAccess	pref1 -> value . realval		6146341	0					
ANR	6146752	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146753	Identifier	pref1		6146341	0					
ANR	6146754	Identifier	value		6146341	1					
ANR	6146755	Identifier	realval		6146341	1					
ANR	6146756	MemberAccess	pref2 -> value . realval		6146341	1					
ANR	6146757	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146758	Identifier	pref2		6146341	0					
ANR	6146759	Identifier	value		6146341	1					
ANR	6146760	Identifier	realval		6146341	1					
ANR	6146761	Label	case t_save :	173:8:5863:5874	6146341	23	True				
ANR	6146762	Identifier	t_save		6146341	0					
ANR	6146763	ReturnStatement	return ( pref2 -> value . saveid == pref1 -> value . saveid ) ;	174:12:5888:5939	6146341	24	True				
ANR	6146764	EqualityExpression	pref2 -> value . saveid == pref1 -> value . saveid		6146341	0		==			
ANR	6146765	MemberAccess	pref2 -> value . saveid		6146341	0					
ANR	6146766	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146767	Identifier	pref2		6146341	0					
ANR	6146768	Identifier	value		6146341	1					
ANR	6146769	Identifier	saveid		6146341	1					
ANR	6146770	MemberAccess	pref1 -> value . saveid		6146341	1					
ANR	6146771	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146772	Identifier	pref1		6146341	0					
ANR	6146773	Identifier	value		6146341	1					
ANR	6146774	Identifier	saveid		6146341	1					
ANR	6146775	Label	case t_string :	175:8:5949:5962	6146341	25	True				
ANR	6146776	Identifier	t_string		6146341	0					
ANR	6146777	ReturnStatement	"return ( ! bytes_compare ( pref1 -> value . bytes , r_size ( pref1 ) , pref2 -> value . bytes , r_size ( pref2 ) ) ) ;"	176:12:5976:6104	6146341	26	True				
ANR	6146778	UnaryOperationExpression	"! bytes_compare ( pref1 -> value . bytes , r_size ( pref1 ) , pref2 -> value . bytes , r_size ( pref2 ) )"		6146341	0					
ANR	6146779	UnaryOperator	!		6146341	0					
ANR	6146780	CallExpression	"bytes_compare ( pref1 -> value . bytes , r_size ( pref1 ) , pref2 -> value . bytes , r_size ( pref2 ) )"		6146341	1					
ANR	6146781	Callee	bytes_compare		6146341	0					
ANR	6146782	Identifier	bytes_compare		6146341	0					
ANR	6146783	ArgumentList	pref1 -> value . bytes		6146341	1					
ANR	6146784	Argument	pref1 -> value . bytes		6146341	0					
ANR	6146785	MemberAccess	pref1 -> value . bytes		6146341	0					
ANR	6146786	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146787	Identifier	pref1		6146341	0					
ANR	6146788	Identifier	value		6146341	1					
ANR	6146789	Identifier	bytes		6146341	1					
ANR	6146790	Argument	r_size ( pref1 )		6146341	1					
ANR	6146791	CallExpression	r_size ( pref1 )		6146341	0					
ANR	6146792	Callee	r_size		6146341	0					
ANR	6146793	Identifier	r_size		6146341	0					
ANR	6146794	ArgumentList	pref1		6146341	1					
ANR	6146795	Argument	pref1		6146341	0					
ANR	6146796	Identifier	pref1		6146341	0					
ANR	6146797	Argument	pref2 -> value . bytes		6146341	2					
ANR	6146798	MemberAccess	pref2 -> value . bytes		6146341	0					
ANR	6146799	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146800	Identifier	pref2		6146341	0					
ANR	6146801	Identifier	value		6146341	1					
ANR	6146802	Identifier	bytes		6146341	1					
ANR	6146803	Argument	r_size ( pref2 )		6146341	3					
ANR	6146804	CallExpression	r_size ( pref2 )		6146341	0					
ANR	6146805	Callee	r_size		6146341	0					
ANR	6146806	Identifier	r_size		6146341	0					
ANR	6146807	ArgumentList	pref2		6146341	1					
ANR	6146808	Argument	pref2		6146341	0					
ANR	6146809	Identifier	pref2		6146341	0					
ANR	6146810	Label	case t_device :	178:8:6114:6127	6146341	27	True				
ANR	6146811	Identifier	t_device		6146341	0					
ANR	6146812	ReturnStatement	return ( pref1 -> value . pdevice == pref2 -> value . pdevice ) ;	179:12:6141:6194	6146341	28	True				
ANR	6146813	EqualityExpression	pref1 -> value . pdevice == pref2 -> value . pdevice		6146341	0		==			
ANR	6146814	MemberAccess	pref1 -> value . pdevice		6146341	0					
ANR	6146815	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146816	Identifier	pref1		6146341	0					
ANR	6146817	Identifier	value		6146341	1					
ANR	6146818	Identifier	pdevice		6146341	1					
ANR	6146819	MemberAccess	pref2 -> value . pdevice		6146341	1					
ANR	6146820	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146821	Identifier	pref2		6146341	0					
ANR	6146822	Identifier	value		6146341	1					
ANR	6146823	Identifier	pdevice		6146341	1					
ANR	6146824	Label	case t_struct :	180:8:6204:6217	6146341	29	True				
ANR	6146825	Identifier	t_struct		6146341	0					
ANR	6146826	Label	case t_astruct :	181:8:6227:6241	6146341	30	True				
ANR	6146827	Identifier	t_astruct		6146341	0					
ANR	6146828	ReturnStatement	return ( pref1 -> value . pstruct == pref2 -> value . pstruct ) ;	182:12:6255:6308	6146341	31	True				
ANR	6146829	EqualityExpression	pref1 -> value . pstruct == pref2 -> value . pstruct		6146341	0		==			
ANR	6146830	MemberAccess	pref1 -> value . pstruct		6146341	0					
ANR	6146831	PtrMemberAccess	pref1 -> value		6146341	0					
ANR	6146832	Identifier	pref1		6146341	0					
ANR	6146833	Identifier	value		6146341	1					
ANR	6146834	Identifier	pstruct		6146341	1					
ANR	6146835	MemberAccess	pref2 -> value . pstruct		6146341	1					
ANR	6146836	PtrMemberAccess	pref2 -> value		6146341	0					
ANR	6146837	Identifier	pref2		6146341	0					
ANR	6146838	Identifier	value		6146341	1					
ANR	6146839	Identifier	pstruct		6146341	1					
ANR	6146840	Label	case t_fontID :	183:8:6318:6331	6146341	32	True				
ANR	6146841	Identifier	t_fontID		6146341	0					
ANR	6146842	ReturnStatement	"return fid_eq ( mem , r_ptr ( pref1 , gs_font ) , r_ptr ( pref2 , gs_font ) ) ;"	185:12:6423:6487	6146341	33	True				
ANR	6146843	CallExpression	"fid_eq ( mem , r_ptr ( pref1 , gs_font ) , r_ptr ( pref2 , gs_font ) )"		6146341	0					
ANR	6146844	Callee	fid_eq		6146341	0					
ANR	6146845	Identifier	fid_eq		6146341	0					
ANR	6146846	ArgumentList	mem		6146341	1					
ANR	6146847	Argument	mem		6146341	0					
ANR	6146848	Identifier	mem		6146341	0					
ANR	6146849	Argument	"r_ptr ( pref1 , gs_font )"		6146341	1					
ANR	6146850	CallExpression	"r_ptr ( pref1 , gs_font )"		6146341	0					
ANR	6146851	Callee	r_ptr		6146341	0					
ANR	6146852	Identifier	r_ptr		6146341	0					
ANR	6146853	ArgumentList	pref1		6146341	1					
ANR	6146854	Argument	pref1		6146341	0					
ANR	6146855	Identifier	pref1		6146341	0					
ANR	6146856	Argument	gs_font		6146341	1					
ANR	6146857	Identifier	gs_font		6146341	0					
ANR	6146858	Argument	"r_ptr ( pref2 , gs_font )"		6146341	2					
ANR	6146859	CallExpression	"r_ptr ( pref2 , gs_font )"		6146341	0					
ANR	6146860	Callee	r_ptr		6146341	0					
ANR	6146861	Identifier	r_ptr		6146341	0					
ANR	6146862	ArgumentList	pref2		6146341	1					
ANR	6146863	Argument	pref2		6146341	0					
ANR	6146864	Identifier	pref2		6146341	0					
ANR	6146865	Argument	gs_font		6146341	1					
ANR	6146866	Identifier	gs_font		6146341	0					
ANR	6146867	ReturnStatement	return false ;	187:4:6499:6511	6146341	3	True				
ANR	6146868	Identifier	false		6146341	0					
ANR	6146869	ReturnType	bool		6146341	1					
ANR	6146870	Identifier	obj_eq		6146341	2					
ANR	6146871	ParameterList	"const gs_memory_t * mem , const ref * pref1 , const ref * pref2"		6146341	3					
ANR	6146872	Parameter	const gs_memory_t * mem	92:7:2665:2686	6146341	0	True				
ANR	6146873	ParameterType	const gs_memory_t *		6146341	0					
ANR	6146874	Identifier	mem		6146341	1					
ANR	6146875	Parameter	const ref * pref1	92:31:2689:2705	6146341	1	True				
ANR	6146876	ParameterType	const ref *		6146341	0					
ANR	6146877	Identifier	pref1		6146341	1					
ANR	6146878	Parameter	const ref * pref2	92:50:2708:2724	6146341	2	True				
ANR	6146879	ParameterType	const ref *		6146341	0					
ANR	6146880	Identifier	pref2		6146341	1					
ANR	6146881	CFGEntryNode	ENTRY		6146341		True				
ANR	6146882	CFGExitNode	EXIT		6146341		True				
ANR	6146883	Symbol	pref1 -> value . boolval		6146341						
ANR	6146884	Symbol	pref1 -> value . saveid		6146341						
ANR	6146885	Symbol	op_index		6146341						
ANR	6146886	Symbol	pref2 -> value . realval		6146341						
ANR	6146887	Symbol	gs_font		6146341						
ANR	6146888	Symbol	pref1 -> value . pdevice		6146341						
ANR	6146889	Symbol	pref1 -> value . bytes		6146341						
ANR	6146890	Symbol	r_has_type		6146341						
ANR	6146891	Symbol	t_name		6146341						
ANR	6146892	Symbol	pref2 -> value . refs		6146341						
ANR	6146893	Symbol	r_type		6146341						
ANR	6146894	Symbol	pref2 -> value . packed		6146341						
ANR	6146895	Symbol	pref2 -> value . pdict		6146341						
ANR	6146896	Symbol	pref2 -> value . saveid		6146341						
ANR	6146897	Symbol	t_mixedarray		6146341						
ANR	6146898	Symbol	fid_eq		6146341						
ANR	6146899	Symbol	pref2		6146341						
ANR	6146900	Symbol	pref1 -> value . pfile		6146341						
ANR	6146901	Symbol	pref1		6146341						
ANR	6146902	Symbol	r_btype		6146341						
ANR	6146903	Symbol	t_integer		6146341						
ANR	6146904	Symbol	pref2 -> value . pstruct		6146341						
ANR	6146905	Symbol	pref1 -> value . pstruct		6146341						
ANR	6146906	Symbol	* pref1		6146341						
ANR	6146907	Symbol	true		6146341						
ANR	6146908	Symbol	* pref2		6146341						
ANR	6146909	Symbol	bytes_compare		6146341						
ANR	6146910	Symbol	pref2 -> value . bytes		6146341						
ANR	6146911	Symbol	pref1 -> value . refs		6146341						
ANR	6146912	Symbol	t_shortarray		6146341						
ANR	6146913	Symbol	pref2 -> value . boolval		6146341						
ANR	6146914	Symbol	pref2 -> value		6146341						
ANR	6146915	Symbol	pref1 -> value . realval		6146341						
ANR	6146916	Symbol	pref2 -> value . pdevice		6146341						
ANR	6146917	Symbol	& nref		6146341						
ANR	6146918	Symbol	r_ptr		6146341						
ANR	6146919	Symbol	mem		6146341						
ANR	6146920	Symbol	nref		6146341						
ANR	6146921	Symbol	r_size		6146341						
ANR	6146922	Symbol	pref1 -> value . packed		6146341						
ANR	6146923	Symbol	pref1 -> value . pname		6146341						
ANR	6146924	Symbol	pref1 -> value		6146341						
ANR	6146925	Symbol	pref1 -> value . intval		6146341						
ANR	6146926	Symbol	false		6146341						
ANR	6146927	Symbol	pref2 -> value . pname		6146341						
ANR	6146928	Symbol	t_real		6146341						
ANR	6146929	Symbol	t_string		6146341						
ANR	6146930	Symbol	pref2 -> value . intval		6146341						
ANR	6146931	Symbol	pref1 -> value . pdict		6146341						
ANR	6146932	Symbol	pref2 -> value . pfile		6146341						
ANR	6146933	Function	fid_eq	200:0:7056:8628							
ANR	6146934	FunctionDef	"fid_eq (const gs_memory_t * mem , const gs_font * pfont1 , const gs_font * pfont2)"		6146933	0					
ANR	6146935	CompoundStatement		202:0:7145:8628	6146933	0					
ANR	6146936	WhileStatement	while ( pfont1 -> base != pfont1 )		6146933	0					
ANR	6146937	Condition	pfont1 -> base != pfont1	203:11:7158:7179	6146933	0	True				
ANR	6146938	EqualityExpression	pfont1 -> base != pfont1		6146933	0		!=			
ANR	6146939	PtrMemberAccess	pfont1 -> base		6146933	0					
ANR	6146940	Identifier	pfont1		6146933	0					
ANR	6146941	Identifier	base		6146933	1					
ANR	6146942	Identifier	pfont1		6146933	1					
ANR	6146943	ExpressionStatement	pfont1 = pfont1 -> base	204:8:7190:7211	6146933	1	True				
ANR	6146944	AssignmentExpression	pfont1 = pfont1 -> base		6146933	0		=			
ANR	6146945	Identifier	pfont1		6146933	0					
ANR	6146946	PtrMemberAccess	pfont1 -> base		6146933	1					
ANR	6146947	Identifier	pfont1		6146933	0					
ANR	6146948	Identifier	base		6146933	1					
ANR	6146949	WhileStatement	while ( pfont2 -> base != pfont2 )		6146933	1					
ANR	6146950	Condition	pfont2 -> base != pfont2	205:11:7224:7245	6146933	0	True				
ANR	6146951	EqualityExpression	pfont2 -> base != pfont2		6146933	0		!=			
ANR	6146952	PtrMemberAccess	pfont2 -> base		6146933	0					
ANR	6146953	Identifier	pfont2		6146933	0					
ANR	6146954	Identifier	base		6146933	1					
ANR	6146955	Identifier	pfont2		6146933	1					
ANR	6146956	ExpressionStatement	pfont2 = pfont2 -> base	206:8:7256:7277	6146933	1	True				
ANR	6146957	AssignmentExpression	pfont2 = pfont2 -> base		6146933	0		=			
ANR	6146958	Identifier	pfont2		6146933	0					
ANR	6146959	PtrMemberAccess	pfont2 -> base		6146933	1					
ANR	6146960	Identifier	pfont2		6146933	0					
ANR	6146961	Identifier	base		6146933	1					
ANR	6146962	IfStatement	if ( pfont1 == pfont2 )		6146933	2					
ANR	6146963	Condition	pfont1 == pfont2	207:8:7287:7302	6146933	0	True				
ANR	6146964	EqualityExpression	pfont1 == pfont2		6146933	0		==			
ANR	6146965	Identifier	pfont1		6146933	0					
ANR	6146966	Identifier	pfont2		6146933	1					
ANR	6146967	ReturnStatement	return true ;	208:8:7313:7324	6146933	1	True				
ANR	6146968	Identifier	true		6146933	0					
ANR	6146969	SwitchStatement	switch ( pfont1 -> FontType )		6146933	3					
ANR	6146970	Condition	pfont1 -> FontType	209:12:7338:7353	6146933	0	True				
ANR	6146971	PtrMemberAccess	pfont1 -> FontType		6146933	0					
ANR	6146972	Identifier	pfont1		6146933	0					
ANR	6146973	Identifier	FontType		6146933	1					
ANR	6146974	CompoundStatement		8:30:210:210	6146933	1					
ANR	6146975	Label	case 1 :	210:4:7362:7368	6146933	0	True				
ANR	6146976	Label	case 3 :	210:12:7370:7376	6146933	1	True				
ANR	6146977	IfStatement	if ( pfont1 -> FontType == pfont2 -> FontType )		6146933	2					
ANR	6146978	Condition	pfont1 -> FontType == pfont2 -> FontType	211:12:7390:7425	6146933	0	True				
ANR	6146979	EqualityExpression	pfont1 -> FontType == pfont2 -> FontType		6146933	0		==			
ANR	6146980	PtrMemberAccess	pfont1 -> FontType		6146933	0					
ANR	6146981	Identifier	pfont1		6146933	0					
ANR	6146982	Identifier	FontType		6146933	1					
ANR	6146983	PtrMemberAccess	pfont2 -> FontType		6146933	1					
ANR	6146984	Identifier	pfont2		6146933	0					
ANR	6146985	Identifier	FontType		6146933	1					
ANR	6146986	BreakStatement	break ;	212:12:7440:7445	6146933	1	True				
ANR	6146987	Label	default :	213:4:7451:7458	6146933	3	True				
ANR	6146988	Identifier	default		6146933	0					
ANR	6146989	ReturnStatement	return false ;	214:8:7468:7480	6146933	4	True				
ANR	6146990	Identifier	false		6146933	0					
ANR	6146991	CompoundStatement		18:8:488:546	6146933	4					
ANR	6146992	IdentifierDeclStatement	const gs_uid * puid1 = & ( ( const gs_font_base * ) pfont1 ) -> UID ;	218:8:7566:7624	6146933	0	True				
ANR	6146993	IdentifierDecl	* puid1 = & ( ( const gs_font_base * ) pfont1 ) -> UID		6146933	0					
ANR	6146994	IdentifierDeclType	const gs_uid *		6146933	0					
ANR	6146995	Identifier	puid1		6146933	1					
ANR	6146996	AssignmentExpression	* puid1 = & ( ( const gs_font_base * ) pfont1 ) -> UID		6146933	2		=			
ANR	6146997	Identifier	puid1		6146933	0					
ANR	6146998	UnaryOperationExpression	& ( ( const gs_font_base * ) pfont1 ) -> UID		6146933	1					
ANR	6146999	UnaryOperator	&		6146933	0					
ANR	6147000	PtrMemberAccess	( ( const gs_font_base * ) pfont1 ) -> UID		6146933	1					
ANR	6147001	CastExpression	( const gs_font_base * ) pfont1		6146933	0					
ANR	6147002	CastTarget	const gs_font_base *		6146933	0					
ANR	6147003	Identifier	pfont1		6146933	1					
ANR	6147004	Identifier	UID		6146933	1					
ANR	6147005	IdentifierDeclStatement	const gs_uid * puid2 = & ( ( const gs_font_base * ) pfont2 ) -> UID ;	219:8:7634:7692	6146933	1	True				
ANR	6147006	IdentifierDecl	* puid2 = & ( ( const gs_font_base * ) pfont2 ) -> UID		6146933	0					
ANR	6147007	IdentifierDeclType	const gs_uid *		6146933	0					
ANR	6147008	Identifier	puid2		6146933	1					
ANR	6147009	AssignmentExpression	* puid2 = & ( ( const gs_font_base * ) pfont2 ) -> UID		6146933	2		=			
ANR	6147010	Identifier	puid2		6146933	0					
ANR	6147011	UnaryOperationExpression	& ( ( const gs_font_base * ) pfont2 ) -> UID		6146933	1					
ANR	6147012	UnaryOperator	&		6146933	0					
ANR	6147013	PtrMemberAccess	( ( const gs_font_base * ) pfont2 ) -> UID		6146933	1					
ANR	6147014	CastExpression	( const gs_font_base * ) pfont2		6146933	0					
ANR	6147015	CastTarget	const gs_font_base *		6146933	0					
ANR	6147016	Identifier	pfont2		6146933	1					
ANR	6147017	Identifier	UID		6146933	1					
ANR	6147018	IfStatement	"if ( uid_is_UniqueID ( puid1 ) || uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) ) )"		6146933	2					
ANR	6147019	Condition	"uid_is_UniqueID ( puid1 ) || uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) )"	220:8:7702:7842	6146933	0	True				
ANR	6147020	OrExpression	"uid_is_UniqueID ( puid1 ) || uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) )"		6146933	0		||			
ANR	6147021	CallExpression	uid_is_UniqueID ( puid1 )		6146933	0					
ANR	6147022	Callee	uid_is_UniqueID		6146933	0					
ANR	6147023	Identifier	uid_is_UniqueID		6146933	0					
ANR	6147024	ArgumentList	puid1		6146933	1					
ANR	6147025	Argument	puid1		6146933	0					
ANR	6147026	Identifier	puid1		6146933	0					
ANR	6147027	OrExpression	"uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) )"		6146933	1		||			
ANR	6147028	CallExpression	uid_is_UniqueID ( puid2 )		6146933	0					
ANR	6147029	Callee	uid_is_UniqueID		6146933	0					
ANR	6147030	Identifier	uid_is_UniqueID		6146933	0					
ANR	6147031	ArgumentList	puid2		6146933	1					
ANR	6147032	Argument	puid2		6146933	0					
ANR	6147033	Identifier	puid2		6146933	0					
ANR	6147034	AndExpression	"( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 )"		6146933	1		&&			
ANR	6147035	OrExpression	uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 )		6146933	0		||			
ANR	6147036	CallExpression	uid_is_XUID ( puid1 )		6146933	0					
ANR	6147037	Callee	uid_is_XUID		6146933	0					
ANR	6147038	Identifier	uid_is_XUID		6146933	0					
ANR	6147039	ArgumentList	puid1		6146933	1					
ANR	6147040	Argument	puid1		6146933	0					
ANR	6147041	Identifier	puid1		6146933	0					
ANR	6147042	CallExpression	uid_is_XUID ( puid2 )		6146933	1					
ANR	6147043	Callee	uid_is_XUID		6146933	0					
ANR	6147044	Identifier	uid_is_XUID		6146933	0					
ANR	6147045	ArgumentList	puid2		6146933	1					
ANR	6147046	Argument	puid2		6146933	0					
ANR	6147047	Identifier	puid2		6146933	0					
ANR	6147048	UnaryOperationExpression	"! uid_equal ( puid1 , puid2 )"		6146933	1					
ANR	6147049	UnaryOperator	!		6146933	0					
ANR	6147050	CallExpression	"uid_equal ( puid1 , puid2 )"		6146933	1					
ANR	6147051	Callee	uid_equal		6146933	0					
ANR	6147052	Identifier	uid_equal		6146933	0					
ANR	6147053	ArgumentList	puid1		6146933	1					
ANR	6147054	Argument	puid1		6146933	0					
ANR	6147055	Identifier	puid1		6146933	0					
ANR	6147056	Argument	puid2		6146933	1					
ANR	6147057	Identifier	puid2		6146933	0					
ANR	6147058	ReturnStatement	return false ;	223:8:7853:7865	6146933	1	True				
ANR	6147059	Identifier	false		6146933	0					
ANR	6147060	CompoundStatement		26:8:813:875	6146933	5					
ANR	6147061	IdentifierDeclStatement	const font_data * pfd1 = ( const font_data * ) pfont1 -> client_data ;	226:8:7887:7949	6146933	0	True				
ANR	6147062	IdentifierDecl	* pfd1 = ( const font_data * ) pfont1 -> client_data		6146933	0					
ANR	6147063	IdentifierDeclType	const font_data *		6146933	0					
ANR	6147064	Identifier	pfd1		6146933	1					
ANR	6147065	AssignmentExpression	* pfd1 = ( const font_data * ) pfont1 -> client_data		6146933	2		=			
ANR	6147066	Identifier	pfd1		6146933	0					
ANR	6147067	CastExpression	( const font_data * ) pfont1 -> client_data		6146933	1					
ANR	6147068	CastTarget	const font_data *		6146933	0					
ANR	6147069	PtrMemberAccess	pfont1 -> client_data		6146933	1					
ANR	6147070	Identifier	pfont1		6146933	0					
ANR	6147071	Identifier	client_data		6146933	1					
ANR	6147072	IdentifierDeclStatement	const font_data * pfd2 = ( const font_data * ) pfont2 -> client_data ;	227:8:7959:8021	6146933	1	True				
ANR	6147073	IdentifierDecl	* pfd2 = ( const font_data * ) pfont2 -> client_data		6146933	0					
ANR	6147074	IdentifierDeclType	const font_data *		6146933	0					
ANR	6147075	Identifier	pfd2		6146933	1					
ANR	6147076	AssignmentExpression	* pfd2 = ( const font_data * ) pfont2 -> client_data		6146933	2		=			
ANR	6147077	Identifier	pfd2		6146933	0					
ANR	6147078	CastExpression	( const font_data * ) pfont2 -> client_data		6146933	1					
ANR	6147079	CastTarget	const font_data *		6146933	0					
ANR	6147080	PtrMemberAccess	pfont2 -> client_data		6146933	1					
ANR	6147081	Identifier	pfont2		6146933	0					
ANR	6147082	Identifier	client_data		6146933	1					
ANR	6147083	IfStatement	"if ( ! ( obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings ) ) )"		6146933	2					
ANR	6147084	Condition	"! ( obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings ) )"	229:12:8036:8284	6146933	0	True				
ANR	6147085	UnaryOperationExpression	"! ( obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings ) )"		6146933	0					
ANR	6147086	UnaryOperator	!		6146933	0					
ANR	6147087	AndExpression	"obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		6146933	1		&&			
ANR	6147088	CallExpression	"obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar )"		6146933	0					
ANR	6147089	Callee	obj_eq		6146933	0					
ANR	6147090	Identifier	obj_eq		6146933	0					
ANR	6147091	ArgumentList	mem		6146933	1					
ANR	6147092	Argument	mem		6146933	0					
ANR	6147093	Identifier	mem		6146933	0					
ANR	6147094	Argument	& pfd1 -> BuildChar		6146933	1					
ANR	6147095	UnaryOperationExpression	& pfd1 -> BuildChar		6146933	0					
ANR	6147096	UnaryOperator	&		6146933	0					
ANR	6147097	PtrMemberAccess	pfd1 -> BuildChar		6146933	1					
ANR	6147098	Identifier	pfd1		6146933	0					
ANR	6147099	Identifier	BuildChar		6146933	1					
ANR	6147100	Argument	& pfd2 -> BuildChar		6146933	2					
ANR	6147101	UnaryOperationExpression	& pfd2 -> BuildChar		6146933	0					
ANR	6147102	UnaryOperator	&		6146933	0					
ANR	6147103	PtrMemberAccess	pfd2 -> BuildChar		6146933	1					
ANR	6147104	Identifier	pfd2		6146933	0					
ANR	6147105	Identifier	BuildChar		6146933	1					
ANR	6147106	AndExpression	"obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		6146933	1		&&			
ANR	6147107	CallExpression	"obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph )"		6146933	0					
ANR	6147108	Callee	obj_eq		6146933	0					
ANR	6147109	Identifier	obj_eq		6146933	0					
ANR	6147110	ArgumentList	mem		6146933	1					
ANR	6147111	Argument	mem		6146933	0					
ANR	6147112	Identifier	mem		6146933	0					
ANR	6147113	Argument	& pfd1 -> BuildGlyph		6146933	1					
ANR	6147114	UnaryOperationExpression	& pfd1 -> BuildGlyph		6146933	0					
ANR	6147115	UnaryOperator	&		6146933	0					
ANR	6147116	PtrMemberAccess	pfd1 -> BuildGlyph		6146933	1					
ANR	6147117	Identifier	pfd1		6146933	0					
ANR	6147118	Identifier	BuildGlyph		6146933	1					
ANR	6147119	Argument	& pfd2 -> BuildGlyph		6146933	2					
ANR	6147120	UnaryOperationExpression	& pfd2 -> BuildGlyph		6146933	0					
ANR	6147121	UnaryOperator	&		6146933	0					
ANR	6147122	PtrMemberAccess	pfd2 -> BuildGlyph		6146933	1					
ANR	6147123	Identifier	pfd2		6146933	0					
ANR	6147124	Identifier	BuildGlyph		6146933	1					
ANR	6147125	AndExpression	"obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		6146933	1		&&			
ANR	6147126	CallExpression	"obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding )"		6146933	0					
ANR	6147127	Callee	obj_eq		6146933	0					
ANR	6147128	Identifier	obj_eq		6146933	0					
ANR	6147129	ArgumentList	mem		6146933	1					
ANR	6147130	Argument	mem		6146933	0					
ANR	6147131	Identifier	mem		6146933	0					
ANR	6147132	Argument	& pfd1 -> Encoding		6146933	1					
ANR	6147133	UnaryOperationExpression	& pfd1 -> Encoding		6146933	0					
ANR	6147134	UnaryOperator	&		6146933	0					
ANR	6147135	PtrMemberAccess	pfd1 -> Encoding		6146933	1					
ANR	6147136	Identifier	pfd1		6146933	0					
ANR	6147137	Identifier	Encoding		6146933	1					
ANR	6147138	Argument	& pfd2 -> Encoding		6146933	2					
ANR	6147139	UnaryOperationExpression	& pfd2 -> Encoding		6146933	0					
ANR	6147140	UnaryOperator	&		6146933	0					
ANR	6147141	PtrMemberAccess	pfd2 -> Encoding		6146933	1					
ANR	6147142	Identifier	pfd2		6146933	0					
ANR	6147143	Identifier	Encoding		6146933	1					
ANR	6147144	CallExpression	"obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		6146933	1					
ANR	6147145	Callee	obj_eq		6146933	0					
ANR	6147146	Identifier	obj_eq		6146933	0					
ANR	6147147	ArgumentList	mem		6146933	1					
ANR	6147148	Argument	mem		6146933	0					
ANR	6147149	Identifier	mem		6146933	0					
ANR	6147150	Argument	& pfd1 -> CharStrings		6146933	1					
ANR	6147151	UnaryOperationExpression	& pfd1 -> CharStrings		6146933	0					
ANR	6147152	UnaryOperator	&		6146933	0					
ANR	6147153	PtrMemberAccess	pfd1 -> CharStrings		6146933	1					
ANR	6147154	Identifier	pfd1		6146933	0					
ANR	6147155	Identifier	CharStrings		6146933	1					
ANR	6147156	Argument	& pfd2 -> CharStrings		6146933	2					
ANR	6147157	UnaryOperationExpression	& pfd2 -> CharStrings		6146933	0					
ANR	6147158	UnaryOperator	&		6146933	0					
ANR	6147159	PtrMemberAccess	pfd2 -> CharStrings		6146933	1					
ANR	6147160	Identifier	pfd2		6146933	0					
ANR	6147161	Identifier	CharStrings		6146933	1					
ANR	6147162	ReturnStatement	return false ;	233:12:8299:8311	6146933	1	True				
ANR	6147163	Identifier	false		6146933	0					
ANR	6147164	IfStatement	if ( pfont1 -> FontType == 1 )		6146933	3					
ANR	6147165	Condition	pfont1 -> FontType == 1	234:12:8325:8345	6146933	0	True				
ANR	6147166	EqualityExpression	pfont1 -> FontType == 1		6146933	0		==			
ANR	6147167	PtrMemberAccess	pfont1 -> FontType		6146933	0					
ANR	6147168	Identifier	pfont1		6146933	0					
ANR	6147169	Identifier	FontType		6146933	1					
ANR	6147170	PrimaryExpression	1		6146933	1					
ANR	6147171	CompoundStatement		34:12:1216:1232	6146933	1					
ANR	6147172	IdentifierDeclStatement	"ref * ppd1 , * ppd2 ;"	235:12:8362:8378	6146933	0	True				
ANR	6147173	IdentifierDecl	* ppd1		6146933	0					
ANR	6147174	IdentifierDeclType	ref *		6146933	0					
ANR	6147175	Identifier	ppd1		6146933	1					
ANR	6147176	IdentifierDecl	* ppd2		6146933	1					
ANR	6147177	IdentifierDeclType	ref *		6146933	0					
ANR	6147178	Identifier	ppd2		6146933	1					
ANR	6147179	IfStatement	"if ( dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0 && dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 ) )"		6146933	1					
ANR	6147180	Condition	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0 && dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 )"	237:16:8397:8562	6146933	0	True				
ANR	6147181	AndExpression	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0 && dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 )"		6146933	0		&&			
ANR	6147182	RelationalExpression	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0"		6146933	0		>			
ANR	6147183	CallExpression	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 )"		6146933	0					
ANR	6147184	Callee	dict_find_string		6146933	0					
ANR	6147185	Identifier	dict_find_string		6146933	0					
ANR	6147186	ArgumentList	& pfd1 -> dict		6146933	1					
ANR	6147187	Argument	& pfd1 -> dict		6146933	0					
ANR	6147188	UnaryOperationExpression	& pfd1 -> dict		6146933	0					
ANR	6147189	UnaryOperator	&		6146933	0					
ANR	6147190	PtrMemberAccess	pfd1 -> dict		6146933	1					
ANR	6147191	Identifier	pfd1		6146933	0					
ANR	6147192	Identifier	dict		6146933	1					
ANR	6147193	Argument	"""Private"""		6146933	1					
ANR	6147194	PrimaryExpression	"""Private"""		6146933	0					
ANR	6147195	Argument	& ppd1		6146933	2					
ANR	6147196	UnaryOperationExpression	& ppd1		6146933	0					
ANR	6147197	UnaryOperator	&		6146933	0					
ANR	6147198	Identifier	ppd1		6146933	1					
ANR	6147199	PrimaryExpression	0		6146933	1					
ANR	6147200	AndExpression	"dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 )"		6146933	1		&&			
ANR	6147201	RelationalExpression	"dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0"		6146933	0		>			
ANR	6147202	CallExpression	"dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 )"		6146933	0					
ANR	6147203	Callee	dict_find_string		6146933	0					
ANR	6147204	Identifier	dict_find_string		6146933	0					
ANR	6147205	ArgumentList	& pfd2 -> dict		6146933	1					
ANR	6147206	Argument	& pfd2 -> dict		6146933	0					
ANR	6147207	UnaryOperationExpression	& pfd2 -> dict		6146933	0					
ANR	6147208	UnaryOperator	&		6146933	0					
ANR	6147209	PtrMemberAccess	pfd2 -> dict		6146933	1					
ANR	6147210	Identifier	pfd2		6146933	0					
ANR	6147211	Identifier	dict		6146933	1					
ANR	6147212	Argument	"""Private"""		6146933	1					
ANR	6147213	PrimaryExpression	"""Private"""		6146933	0					
ANR	6147214	Argument	& ppd2		6146933	2					
ANR	6147215	UnaryOperationExpression	& ppd2		6146933	0					
ANR	6147216	UnaryOperator	&		6146933	0					
ANR	6147217	Identifier	ppd2		6146933	1					
ANR	6147218	PrimaryExpression	0		6146933	1					
ANR	6147219	UnaryOperationExpression	"! obj_eq ( mem , ppd1 , ppd2 )"		6146933	1					
ANR	6147220	UnaryOperator	!		6146933	0					
ANR	6147221	CallExpression	"obj_eq ( mem , ppd1 , ppd2 )"		6146933	1					
ANR	6147222	Callee	obj_eq		6146933	0					
ANR	6147223	Identifier	obj_eq		6146933	0					
ANR	6147224	ArgumentList	mem		6146933	1					
ANR	6147225	Argument	mem		6146933	0					
ANR	6147226	Identifier	mem		6146933	0					
ANR	6147227	Argument	ppd1		6146933	1					
ANR	6147228	Identifier	ppd1		6146933	0					
ANR	6147229	Argument	ppd2		6146933	2					
ANR	6147230	Identifier	ppd2		6146933	0					
ANR	6147231	ReturnStatement	return false ;	240:16:8581:8593	6146933	1	True				
ANR	6147232	Identifier	false		6146933	0					
ANR	6147233	ReturnStatement	return true ;	243:4:8615:8626	6146933	6	True				
ANR	6147234	Identifier	true		6146933	0					
ANR	6147235	ReturnType	static bool		6146933	1					
ANR	6147236	Identifier	fid_eq		6146933	2					
ANR	6147237	ParameterList	"const gs_memory_t * mem , const gs_font * pfont1 , const gs_font * pfont2"		6146933	3					
ANR	6147238	Parameter	const gs_memory_t * mem	201:7:7075:7096	6146933	0	True				
ANR	6147239	ParameterType	const gs_memory_t *		6146933	0					
ANR	6147240	Identifier	mem		6146933	1					
ANR	6147241	Parameter	const gs_font * pfont1	201:31:7099:7119	6146933	1	True				
ANR	6147242	ParameterType	const gs_font *		6146933	0					
ANR	6147243	Identifier	pfont1		6146933	1					
ANR	6147244	Parameter	const gs_font * pfont2	201:54:7122:7142	6146933	2	True				
ANR	6147245	ParameterType	const gs_font *		6146933	0					
ANR	6147246	Identifier	pfont2		6146933	1					
ANR	6147247	CFGEntryNode	ENTRY		6146933		True				
ANR	6147248	CFGExitNode	EXIT		6146933		True				
ANR	6147249	Symbol	& ( ( const gs_font_base * ) pfont1 ) -> UID		6146933						
ANR	6147250	Symbol	uid_is_UniqueID		6146933						
ANR	6147251	Symbol	& ppd2		6146933						
ANR	6147252	Symbol	pfont2 -> FontType		6146933						
ANR	6147253	Symbol	& ppd1		6146933						
ANR	6147254	Symbol	pfont1 -> FontType		6146933						
ANR	6147255	Symbol	& pfd2 -> BuildGlyph		6146933						
ANR	6147256	Symbol	& pfd2 -> Encoding		6146933						
ANR	6147257	Symbol	mem		6146933						
ANR	6147258	Symbol	pfont1 -> base		6146933						
ANR	6147259	Symbol	pfont2 -> base		6146933						
ANR	6147260	Symbol	& pfd2 -> CharStrings		6146933						
ANR	6147261	Symbol	* pfont2		6146933						
ANR	6147262	Symbol	* pfont1		6146933						
ANR	6147263	Symbol	uid_is_XUID		6146933						
ANR	6147264	Symbol	pfont1		6146933						
ANR	6147265	Symbol	pfont2		6146933						
ANR	6147266	Symbol	dict_find_string		6146933						
ANR	6147267	Symbol	& pfd2 -> BuildChar		6146933						
ANR	6147268	Symbol	false		6146933						
ANR	6147269	Symbol	& pfd1 -> dict		6146933						
ANR	6147270	Symbol	& pfd1 -> BuildChar		6146933						
ANR	6147271	Symbol	& pfd2 -> dict		6146933						
ANR	6147272	Symbol	& pfd1 -> CharStrings		6146933						
ANR	6147273	Symbol	pfont1 -> client_data		6146933						
ANR	6147274	Symbol	& pfd1 -> Encoding		6146933						
ANR	6147275	Symbol	puid1		6146933						
ANR	6147276	Symbol	pfd2		6146933						
ANR	6147277	Symbol	puid2		6146933						
ANR	6147278	Symbol	obj_eq		6146933						
ANR	6147279	Symbol	uid_equal		6146933						
ANR	6147280	Symbol	pfd1		6146933						
ANR	6147281	Symbol	& pfd1 -> BuildGlyph		6146933						
ANR	6147282	Symbol	true		6146933						
ANR	6147283	Symbol	pfont2 -> client_data		6146933						
ANR	6147284	Symbol	& ( ( const gs_font_base * ) pfont2 ) -> UID		6146933						
ANR	6147285	Symbol	ppd1		6146933						
ANR	6147286	Symbol	ppd2		6146933						
ANR	6147287	Function	obj_ident_eq	247:0:8671:8999							
ANR	6147288	FunctionDef	"obj_ident_eq (const gs_memory_t * mem , const ref * pref1 , const ref * pref2)"		6147287	0					
ANR	6147289	CompoundStatement		249:0:8751:8999	6147287	0					
ANR	6147290	IfStatement	if ( r_type ( pref1 ) != r_type ( pref2 ) )		6147287	0					
ANR	6147291	Condition	r_type ( pref1 ) != r_type ( pref2 )	250:8:8761:8790	6147287	0	True				
ANR	6147292	EqualityExpression	r_type ( pref1 ) != r_type ( pref2 )		6147287	0		!=			
ANR	6147293	CallExpression	r_type ( pref1 )		6147287	0					
ANR	6147294	Callee	r_type		6147287	0					
ANR	6147295	Identifier	r_type		6147287	0					
ANR	6147296	ArgumentList	pref1		6147287	1					
ANR	6147297	Argument	pref1		6147287	0					
ANR	6147298	Identifier	pref1		6147287	0					
ANR	6147299	CallExpression	r_type ( pref2 )		6147287	1					
ANR	6147300	Callee	r_type		6147287	0					
ANR	6147301	Identifier	r_type		6147287	0					
ANR	6147302	ArgumentList	pref2		6147287	1					
ANR	6147303	Argument	pref2		6147287	0					
ANR	6147304	Identifier	pref2		6147287	0					
ANR	6147305	ReturnStatement	return false ;	251:8:8801:8813	6147287	1	True				
ANR	6147306	Identifier	false		6147287	0					
ANR	6147307	IfStatement	"if ( r_has_type ( pref1 , t_string ) )"		6147287	1					
ANR	6147308	Condition	"r_has_type ( pref1 , t_string )"	252:8:8823:8849	6147287	0	True				
ANR	6147309	CallExpression	"r_has_type ( pref1 , t_string )"		6147287	0					
ANR	6147310	Callee	r_has_type		6147287	0					
ANR	6147311	Identifier	r_has_type		6147287	0					
ANR	6147312	ArgumentList	pref1		6147287	1					
ANR	6147313	Argument	pref1		6147287	0					
ANR	6147314	Identifier	pref1		6147287	0					
ANR	6147315	Argument	t_string		6147287	1					
ANR	6147316	Identifier	t_string		6147287	0					
ANR	6147317	ReturnStatement	return ( pref1 -> value . bytes == pref2 -> value . bytes && r_size ( pref1 ) == r_size ( pref2 ) ) ;	253:8:8860:8959	6147287	1	True				
ANR	6147318	AndExpression	pref1 -> value . bytes == pref2 -> value . bytes && r_size ( pref1 ) == r_size ( pref2 )		6147287	0		&&			
ANR	6147319	EqualityExpression	pref1 -> value . bytes == pref2 -> value . bytes		6147287	0		==			
ANR	6147320	MemberAccess	pref1 -> value . bytes		6147287	0					
ANR	6147321	PtrMemberAccess	pref1 -> value		6147287	0					
ANR	6147322	Identifier	pref1		6147287	0					
ANR	6147323	Identifier	value		6147287	1					
ANR	6147324	Identifier	bytes		6147287	1					
ANR	6147325	MemberAccess	pref2 -> value . bytes		6147287	1					
ANR	6147326	PtrMemberAccess	pref2 -> value		6147287	0					
ANR	6147327	Identifier	pref2		6147287	0					
ANR	6147328	Identifier	value		6147287	1					
ANR	6147329	Identifier	bytes		6147287	1					
ANR	6147330	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		6147287	1		==			
ANR	6147331	CallExpression	r_size ( pref1 )		6147287	0					
ANR	6147332	Callee	r_size		6147287	0					
ANR	6147333	Identifier	r_size		6147287	0					
ANR	6147334	ArgumentList	pref1		6147287	1					
ANR	6147335	Argument	pref1		6147287	0					
ANR	6147336	Identifier	pref1		6147287	0					
ANR	6147337	CallExpression	r_size ( pref2 )		6147287	1					
ANR	6147338	Callee	r_size		6147287	0					
ANR	6147339	Identifier	r_size		6147287	0					
ANR	6147340	ArgumentList	pref2		6147287	1					
ANR	6147341	Argument	pref2		6147287	0					
ANR	6147342	Identifier	pref2		6147287	0					
ANR	6147343	ReturnStatement	"return obj_eq ( mem , pref1 , pref2 ) ;"	255:4:8965:8997	6147287	2	True				
ANR	6147344	CallExpression	"obj_eq ( mem , pref1 , pref2 )"		6147287	0					
ANR	6147345	Callee	obj_eq		6147287	0					
ANR	6147346	Identifier	obj_eq		6147287	0					
ANR	6147347	ArgumentList	mem		6147287	1					
ANR	6147348	Argument	mem		6147287	0					
ANR	6147349	Identifier	mem		6147287	0					
ANR	6147350	Argument	pref1		6147287	1					
ANR	6147351	Identifier	pref1		6147287	0					
ANR	6147352	Argument	pref2		6147287	2					
ANR	6147353	Identifier	pref2		6147287	0					
ANR	6147354	ReturnType	bool		6147287	1					
ANR	6147355	Identifier	obj_ident_eq		6147287	2					
ANR	6147356	ParameterList	"const gs_memory_t * mem , const ref * pref1 , const ref * pref2"		6147287	3					
ANR	6147357	Parameter	const gs_memory_t * mem	248:13:8689:8710	6147287	0	True				
ANR	6147358	ParameterType	const gs_memory_t *		6147287	0					
ANR	6147359	Identifier	mem		6147287	1					
ANR	6147360	Parameter	const ref * pref1	248:37:8713:8729	6147287	1	True				
ANR	6147361	ParameterType	const ref *		6147287	0					
ANR	6147362	Identifier	pref1		6147287	1					
ANR	6147363	Parameter	const ref * pref2	248:56:8732:8748	6147287	2	True				
ANR	6147364	ParameterType	const ref *		6147287	0					
ANR	6147365	Identifier	pref2		6147287	1					
ANR	6147366	CFGEntryNode	ENTRY		6147287		True				
ANR	6147367	CFGExitNode	EXIT		6147287		True				
ANR	6147368	Symbol	pref1 -> value		6147287						
ANR	6147369	Symbol	false		6147287						
ANR	6147370	Symbol	pref2 -> value		6147287						
ANR	6147371	Symbol	pref1 -> value . bytes		6147287						
ANR	6147372	Symbol	pref2		6147287						
ANR	6147373	Symbol	pref1		6147287						
ANR	6147374	Symbol	t_string		6147287						
ANR	6147375	Symbol	r_has_type		6147287						
ANR	6147376	Symbol	mem		6147287						
ANR	6147377	Symbol	obj_eq		6147287						
ANR	6147378	Symbol	r_size		6147287						
ANR	6147379	Symbol	* pref1		6147287						
ANR	6147380	Symbol	* pref2		6147287						
ANR	6147381	Symbol	r_type		6147287						
ANR	6147382	Symbol	pref2 -> value . bytes		6147287						
ANR	6147383	Function	obj_string_data	263:0:9240:9716							
ANR	6147384	FunctionDef	"obj_string_data (const gs_memory_t * mem , const ref * op , const byte * * pchars , uint * plen)"		6147383	0					
ANR	6147385	CompoundStatement		265:0:9332:9716	6147383	0					
ANR	6147386	SwitchStatement	switch ( r_type ( op ) )		6147383	0					
ANR	6147387	Condition	r_type ( op )	266:12:9346:9355	6147383	0	True				
ANR	6147388	CallExpression	r_type ( op )		6147383	0					
ANR	6147389	Callee	r_type		6147383	0					
ANR	6147390	Identifier	r_type		6147383	0					
ANR	6147391	ArgumentList	op		6147383	1					
ANR	6147392	Argument	op		6147383	0					
ANR	6147393	Identifier	op		6147383	0					
ANR	6147394	CompoundStatement		2:24:25:25	6147383	1					
ANR	6147395	Label	case t_name :	267:4:9364:9375	6147383	0	True				
ANR	6147396	Identifier	t_name		6147383	0					
ANR	6147397	CompoundStatement		4:8:54:62	6147383	1					
ANR	6147398	IdentifierDeclStatement	ref nref ;	268:8:9387:9395	6147383	0	True				
ANR	6147399	IdentifierDecl	nref		6147383	0					
ANR	6147400	IdentifierDeclType	ref		6147383	0					
ANR	6147401	Identifier	nref		6147383	1					
ANR	6147402	ExpressionStatement	"name_string_ref ( mem , op , & nref )"	270:8:9406:9437	6147383	1	True				
ANR	6147403	CallExpression	"name_string_ref ( mem , op , & nref )"		6147383	0					
ANR	6147404	Callee	name_string_ref		6147383	0					
ANR	6147405	Identifier	name_string_ref		6147383	0					
ANR	6147406	ArgumentList	mem		6147383	1					
ANR	6147407	Argument	mem		6147383	0					
ANR	6147408	Identifier	mem		6147383	0					
ANR	6147409	Argument	op		6147383	1					
ANR	6147410	Identifier	op		6147383	0					
ANR	6147411	Argument	& nref		6147383	2					
ANR	6147412	UnaryOperationExpression	& nref		6147383	0					
ANR	6147413	UnaryOperator	&		6147383	0					
ANR	6147414	Identifier	nref		6147383	1					
ANR	6147415	ExpressionStatement	* pchars = nref . value . bytes	271:8:9447:9473	6147383	2	True				
ANR	6147416	AssignmentExpression	* pchars = nref . value . bytes		6147383	0		=			
ANR	6147417	UnaryOperationExpression	* pchars		6147383	0					
ANR	6147418	UnaryOperator	*		6147383	0					
ANR	6147419	Identifier	pchars		6147383	1					
ANR	6147420	MemberAccess	nref . value . bytes		6147383	1					
ANR	6147421	MemberAccess	nref . value		6147383	0					
ANR	6147422	Identifier	nref		6147383	0					
ANR	6147423	Identifier	value		6147383	1					
ANR	6147424	Identifier	bytes		6147383	1					
ANR	6147425	ExpressionStatement	* plen = r_size ( & nref )	272:8:9483:9504	6147383	3	True				
ANR	6147426	AssignmentExpression	* plen = r_size ( & nref )		6147383	0		=			
ANR	6147427	UnaryOperationExpression	* plen		6147383	0					
ANR	6147428	UnaryOperator	*		6147383	0					
ANR	6147429	Identifier	plen		6147383	1					
ANR	6147430	CallExpression	r_size ( & nref )		6147383	1					
ANR	6147431	Callee	r_size		6147383	0					
ANR	6147432	Identifier	r_size		6147383	0					
ANR	6147433	ArgumentList	& nref		6147383	1					
ANR	6147434	Argument	& nref		6147383	0					
ANR	6147435	UnaryOperationExpression	& nref		6147383	0					
ANR	6147436	UnaryOperator	&		6147383	0					
ANR	6147437	Identifier	nref		6147383	1					
ANR	6147438	ReturnStatement	return 0 ;	273:8:9514:9522	6147383	4	True				
ANR	6147439	PrimaryExpression	0		6147383	0					
ANR	6147440	Label	case t_string :	275:4:9534:9547	6147383	2	True				
ANR	6147441	Identifier	t_string		6147383	0					
ANR	6147442	ExpressionStatement	check_read ( * op )	276:8:9557:9572	6147383	3	True				
ANR	6147443	CallExpression	check_read ( * op )		6147383	0					
ANR	6147444	Callee	check_read		6147383	0					
ANR	6147445	Identifier	check_read		6147383	0					
ANR	6147446	ArgumentList	* op		6147383	1					
ANR	6147447	Argument	* op		6147383	0					
ANR	6147448	UnaryOperationExpression	* op		6147383	0					
ANR	6147449	UnaryOperator	*		6147383	0					
ANR	6147450	Identifier	op		6147383	1					
ANR	6147451	ExpressionStatement	* pchars = op -> value . bytes	277:8:9582:9607	6147383	4	True				
ANR	6147452	AssignmentExpression	* pchars = op -> value . bytes		6147383	0		=			
ANR	6147453	UnaryOperationExpression	* pchars		6147383	0					
ANR	6147454	UnaryOperator	*		6147383	0					
ANR	6147455	Identifier	pchars		6147383	1					
ANR	6147456	MemberAccess	op -> value . bytes		6147383	1					
ANR	6147457	PtrMemberAccess	op -> value		6147383	0					
ANR	6147458	Identifier	op		6147383	0					
ANR	6147459	Identifier	value		6147383	1					
ANR	6147460	Identifier	bytes		6147383	1					
ANR	6147461	ExpressionStatement	* plen = r_size ( op )	278:8:9617:9635	6147383	5	True				
ANR	6147462	AssignmentExpression	* plen = r_size ( op )		6147383	0		=			
ANR	6147463	UnaryOperationExpression	* plen		6147383	0					
ANR	6147464	UnaryOperator	*		6147383	0					
ANR	6147465	Identifier	plen		6147383	1					
ANR	6147466	CallExpression	r_size ( op )		6147383	1					
ANR	6147467	Callee	r_size		6147383	0					
ANR	6147468	Identifier	r_size		6147383	0					
ANR	6147469	ArgumentList	op		6147383	1					
ANR	6147470	Argument	op		6147383	0					
ANR	6147471	Identifier	op		6147383	0					
ANR	6147472	ReturnStatement	return 0 ;	279:8:9645:9653	6147383	6	True				
ANR	6147473	PrimaryExpression	0		6147383	0					
ANR	6147474	Label	default :	280:4:9659:9666	6147383	7	True				
ANR	6147475	Identifier	default		6147383	0					
ANR	6147476	ExpressionStatement	return_error ( gs_error_typecheck )	281:8:9676:9708	6147383	8	True				
ANR	6147477	CallExpression	return_error ( gs_error_typecheck )		6147383	0					
ANR	6147478	Callee	return_error		6147383	0					
ANR	6147479	Identifier	return_error		6147383	0					
ANR	6147480	ArgumentList	gs_error_typecheck		6147383	1					
ANR	6147481	Argument	gs_error_typecheck		6147383	0					
ANR	6147482	Identifier	gs_error_typecheck		6147383	0					
ANR	6147483	ReturnType	int		6147383	1					
ANR	6147484	Identifier	obj_string_data		6147383	2					
ANR	6147485	ParameterList	"const gs_memory_t * mem , const ref * op , const byte * * pchars , uint * plen"		6147383	3					
ANR	6147486	Parameter	const gs_memory_t * mem	264:16:9260:9281	6147383	0	True				
ANR	6147487	ParameterType	const gs_memory_t *		6147383	0					
ANR	6147488	Identifier	mem		6147383	1					
ANR	6147489	Parameter	const ref * op	264:40:9284:9296	6147383	1	True				
ANR	6147490	ParameterType	const ref *		6147383	0					
ANR	6147491	Identifier	op		6147383	1					
ANR	6147492	Parameter	const byte * * pchars	264:55:9299:9317	6147383	2	True				
ANR	6147493	ParameterType	const byte * *		6147383	0					
ANR	6147494	Identifier	pchars		6147383	1					
ANR	6147495	Parameter	uint * plen	264:76:9320:9329	6147383	3	True				
ANR	6147496	ParameterType	uint *		6147383	0					
ANR	6147497	Identifier	plen		6147383	1					
ANR	6147498	CFGEntryNode	ENTRY		6147383		True				
ANR	6147499	CFGExitNode	EXIT		6147383		True				
ANR	6147500	Symbol	op		6147383						
ANR	6147501	Symbol	* op		6147383						
ANR	6147502	Symbol	pchars		6147383						
ANR	6147503	Symbol	plen		6147383						
ANR	6147504	Symbol	& nref		6147383						
ANR	6147505	Symbol	nref . value		6147383						
ANR	6147506	Symbol	gs_error_typecheck		6147383						
ANR	6147507	Symbol	mem		6147383						
ANR	6147508	Symbol	nref		6147383						
ANR	6147509	Symbol	op -> value		6147383						
ANR	6147510	Symbol	r_size		6147383						
ANR	6147511	Symbol	op -> value . bytes		6147383						
ANR	6147512	Symbol	* pchars		6147383						
ANR	6147513	Symbol	nref . value . bytes		6147383						
ANR	6147514	Symbol	* plen		6147383						
ANR	6147515	Symbol	r_type		6147383						
ANR	6147516	DeclStmt									
ANR	6147517	Decl							void	void ( char * )	ensure_dot
ANR	6147518	Function	obj_cvp	307:0:10827:20001							
ANR	6147519	FunctionDef	"obj_cvp (const ref * op , byte * str , uint len , uint * prlen , int full_print , uint start_pos , const gs_memory_t * mem , bool restart)"		6147518	0					
ANR	6147520	CompoundStatement		310:0:10969:20001	6147518	0					
ANR	6147521	IdentifierDeclStatement	char buf [ 256 ] ;	311:4:10975:10988	6147518	0	True				
ANR	6147522	IdentifierDecl	buf [ 256 ]		6147518	0					
ANR	6147523	IdentifierDeclType	char [ 256 ]		6147518	0					
ANR	6147524	Identifier	buf		6147518	1					
ANR	6147525	PrimaryExpression	256		6147518	2					
ANR	6147526	IdentifierDeclStatement	const byte * data = ( const byte * ) buf ;	312:4:11050:11086	6147518	1	True				
ANR	6147527	IdentifierDecl	* data = ( const byte * ) buf		6147518	0					
ANR	6147528	IdentifierDeclType	const byte *		6147518	0					
ANR	6147529	Identifier	data		6147518	1					
ANR	6147530	AssignmentExpression	* data = ( const byte * ) buf		6147518	2		=			
ANR	6147531	Identifier	data		6147518	0					
ANR	6147532	CastExpression	( const byte * ) buf		6147518	1					
ANR	6147533	CastTarget	const byte *		6147518	0					
ANR	6147534	Identifier	buf		6147518	1					
ANR	6147535	IdentifierDeclStatement	uint size ;	313:4:11092:11101	6147518	2	True				
ANR	6147536	IdentifierDecl	size		6147518	0					
ANR	6147537	IdentifierDeclType	uint		6147518	0					
ANR	6147538	Identifier	size		6147518	1					
ANR	6147539	IdentifierDeclStatement	int code ;	314:4:11107:11115	6147518	3	True				
ANR	6147540	IdentifierDecl	code		6147518	0					
ANR	6147541	IdentifierDeclType	int		6147518	0					
ANR	6147542	Identifier	code		6147518	1					
ANR	6147543	IdentifierDeclStatement	ref nref ;	315:4:11121:11129	6147518	4	True				
ANR	6147544	IdentifierDecl	nref		6147518	0					
ANR	6147545	IdentifierDeclType	ref		6147518	0					
ANR	6147546	Identifier	nref		6147518	1					
ANR	6147547	IfStatement	if ( full_print )		6147518	5					
ANR	6147548	Condition	full_print	317:8:11140:11149	6147518	0	True				
ANR	6147549	Identifier	full_print		6147518	0					
ANR	6147550	CompoundStatement		8:20:182:182	6147518	1					
ANR	6147551	Statement	static	318:8:11162:11167	6147518	0	True				
ANR	6147552	Statement	const	318:15:11169:11173	6147518	1	True				
ANR	6147553	Statement	char	318:21:11175:11178	6147518	2	True				
ANR	6147554	Statement	*	318:26:11180:11180	6147518	3	True				
ANR	6147555	Statement	const	318:28:11182:11186	6147518	4	True				
ANR	6147556	Statement	type_strings	318:34:11188:11199	6147518	5	True				
ANR	6147557	Statement	[	318:46:11200:11200	6147518	6	True				
ANR	6147558	Statement	]	318:47:11201:11201	6147518	7	True				
ANR	6147559	Statement	=	318:49:11203:11203	6147518	8	True				
ANR	6147560	CompoundStatement		9:51:235:235	6147518	9					
ANR	6147561	Statement	REF_TYPE_PRINT_STRINGS	318:53:11207:11228	6147518	0	True				
ANR	6147562	ExpressionStatement		318:77:11231:11231	6147518	10	True				
ANR	6147563	SwitchStatement	switch ( r_btype ( op ) )		6147518	11					
ANR	6147564	Condition	r_btype ( op )	320:16:11250:11260	6147518	0	True				
ANR	6147565	CallExpression	r_btype ( op )		6147518	0					
ANR	6147566	Callee	r_btype		6147518	0					
ANR	6147567	Identifier	r_btype		6147518	0					
ANR	6147568	ArgumentList	op		6147518	1					
ANR	6147569	Argument	op		6147518	0					
ANR	6147570	Identifier	op		6147518	0					
ANR	6147571	CompoundStatement		11:29:293:293	6147518	1					
ANR	6147572	Label	case t_boolean :	321:8:11273:11287	6147518	0	True				
ANR	6147573	Identifier	t_boolean		6147518	0					
ANR	6147574	Label	case t_integer :	322:8:11297:11311	6147518	1	True				
ANR	6147575	Identifier	t_integer		6147518	0					
ANR	6147576	BreakStatement	break ;	323:12:11325:11330	6147518	2	True				
ANR	6147577	Label	case t_real :	324:8:11340:11351	6147518	3	True				
ANR	6147578	Identifier	t_real		6147518	0					
ANR	6147579	CompoundStatement		32:12:1374:1387	6147518	4					
ANR	6147580	IdentifierDeclStatement	float value = op -> value . realval ;	340:12:12299:12330	6147518	0	True				
ANR	6147581	IdentifierDecl	value = op -> value . realval		6147518	0					
ANR	6147582	IdentifierDeclType	float		6147518	0					
ANR	6147583	Identifier	value		6147518	1					
ANR	6147584	AssignmentExpression	value = op -> value . realval		6147518	2		=			
ANR	6147585	Identifier	value		6147518	0					
ANR	6147586	MemberAccess	op -> value . realval		6147518	1					
ANR	6147587	PtrMemberAccess	op -> value		6147518	0					
ANR	6147588	Identifier	op		6147518	0					
ANR	6147589	Identifier	value		6147518	1					
ANR	6147590	Identifier	realval		6147518	1					
ANR	6147591	IdentifierDeclStatement	float scanned ;	341:12:12344:12357	6147518	1	True				
ANR	6147592	IdentifierDecl	scanned		6147518	0					
ANR	6147593	IdentifierDeclType	float		6147518	0					
ANR	6147594	Identifier	scanned		6147518	1					
ANR	6147595	ExpressionStatement	"gs_sprintf ( buf , ""%g"" , value )"	343:12:12372:12400	6147518	2	True				
ANR	6147596	CallExpression	"gs_sprintf ( buf , ""%g"" , value )"		6147518	0					
ANR	6147597	Callee	gs_sprintf		6147518	0					
ANR	6147598	Identifier	gs_sprintf		6147518	0					
ANR	6147599	ArgumentList	buf		6147518	1					
ANR	6147600	Argument	buf		6147518	0					
ANR	6147601	Identifier	buf		6147518	0					
ANR	6147602	Argument	"""%g"""		6147518	1					
ANR	6147603	PrimaryExpression	"""%g"""		6147518	0					
ANR	6147604	Argument	value		6147518	2					
ANR	6147605	Identifier	value		6147518	0					
ANR	6147606	ExpressionStatement	"sscanf ( buf , ""%f"" , & scanned )"	344:12:12414:12441	6147518	3	True				
ANR	6147607	CallExpression	"sscanf ( buf , ""%f"" , & scanned )"		6147518	0					
ANR	6147608	Callee	sscanf		6147518	0					
ANR	6147609	Identifier	sscanf		6147518	0					
ANR	6147610	ArgumentList	buf		6147518	1					
ANR	6147611	Argument	buf		6147518	0					
ANR	6147612	Identifier	buf		6147518	0					
ANR	6147613	Argument	"""%f"""		6147518	1					
ANR	6147614	PrimaryExpression	"""%f"""		6147518	0					
ANR	6147615	Argument	& scanned		6147518	2					
ANR	6147616	UnaryOperationExpression	& scanned		6147518	0					
ANR	6147617	UnaryOperator	&		6147518	0					
ANR	6147618	Identifier	scanned		6147518	1					
ANR	6147619	IfStatement	if ( scanned != value )		6147518	4					
ANR	6147620	Condition	scanned != value	345:16:12459:12474	6147518	0	True				
ANR	6147621	EqualityExpression	scanned != value		6147518	0		!=			
ANR	6147622	Identifier	scanned		6147518	0					
ANR	6147623	Identifier	value		6147518	1					
ANR	6147624	ExpressionStatement	"gs_sprintf ( buf , ""%.9g"" , value )"	346:16:12493:12523	6147518	1	True				
ANR	6147625	CallExpression	"gs_sprintf ( buf , ""%.9g"" , value )"		6147518	0					
ANR	6147626	Callee	gs_sprintf		6147518	0					
ANR	6147627	Identifier	gs_sprintf		6147518	0					
ANR	6147628	ArgumentList	buf		6147518	1					
ANR	6147629	Argument	buf		6147518	0					
ANR	6147630	Identifier	buf		6147518	0					
ANR	6147631	Argument	"""%.9g"""		6147518	1					
ANR	6147632	PrimaryExpression	"""%.9g"""		6147518	0					
ANR	6147633	Argument	value		6147518	2					
ANR	6147634	Identifier	value		6147518	0					
ANR	6147635	ExpressionStatement	ensure_dot ( buf )	347:12:12537:12552	6147518	5	True				
ANR	6147636	CallExpression	ensure_dot ( buf )		6147518	0					
ANR	6147637	Callee	ensure_dot		6147518	0					
ANR	6147638	Identifier	ensure_dot		6147518	0					
ANR	6147639	ArgumentList	buf		6147518	1					
ANR	6147640	Argument	buf		6147518	0					
ANR	6147641	Identifier	buf		6147518	0					
ANR	6147642	GotoStatement	goto rs ;	348:12:12566:12573	6147518	6	True				
ANR	6147643	Identifier	rs		6147518	0					
ANR	6147644	Label	case t_operator :	350:8:12593:12608	6147518	5	True				
ANR	6147645	Identifier	t_operator		6147518	0					
ANR	6147646	Label	case t_oparray :	351:8:12618:12632	6147518	6	True				
ANR	6147647	Identifier	t_oparray		6147518	0					
ANR	6147648	ExpressionStatement	"code = obj_cvp ( op , ( byte * ) buf + 2 , sizeof ( buf ) - 4 , & size , 0 , 0 , mem , restart )"	352:12:12646:12725	6147518	7	True				
ANR	6147649	AssignmentExpression	"code = obj_cvp ( op , ( byte * ) buf + 2 , sizeof ( buf ) - 4 , & size , 0 , 0 , mem , restart )"		6147518	0		=			
ANR	6147650	Identifier	code		6147518	0					
ANR	6147651	CallExpression	"obj_cvp ( op , ( byte * ) buf + 2 , sizeof ( buf ) - 4 , & size , 0 , 0 , mem , restart )"		6147518	1					
ANR	6147652	Callee	obj_cvp		6147518	0					
ANR	6147653	Identifier	obj_cvp		6147518	0					
ANR	6147654	ArgumentList	op		6147518	1					
ANR	6147655	Argument	op		6147518	0					
ANR	6147656	Identifier	op		6147518	0					
ANR	6147657	Argument	( byte * ) buf + 2		6147518	1					
ANR	6147658	AdditiveExpression	( byte * ) buf + 2		6147518	0		+			
ANR	6147659	CastExpression	( byte * ) buf		6147518	0					
ANR	6147660	CastTarget	byte *		6147518	0					
ANR	6147661	Identifier	buf		6147518	1					
ANR	6147662	PrimaryExpression	2		6147518	1					
ANR	6147663	Argument	sizeof ( buf ) - 4		6147518	2					
ANR	6147664	AdditiveExpression	sizeof ( buf ) - 4		6147518	0		-			
ANR	6147665	SizeofExpression	sizeof ( buf )		6147518	0					
ANR	6147666	Sizeof	sizeof		6147518	0					
ANR	6147667	SizeofOperand	buf		6147518	1					
ANR	6147668	PrimaryExpression	4		6147518	1					
ANR	6147669	Argument	& size		6147518	3					
ANR	6147670	UnaryOperationExpression	& size		6147518	0					
ANR	6147671	UnaryOperator	&		6147518	0					
ANR	6147672	Identifier	size		6147518	1					
ANR	6147673	Argument	0		6147518	4					
ANR	6147674	PrimaryExpression	0		6147518	0					
ANR	6147675	Argument	0		6147518	5					
ANR	6147676	PrimaryExpression	0		6147518	0					
ANR	6147677	Argument	mem		6147518	6					
ANR	6147678	Identifier	mem		6147518	0					
ANR	6147679	Argument	restart		6147518	7					
ANR	6147680	Identifier	restart		6147518	0					
ANR	6147681	IfStatement	if ( code < 0 )		6147518	8					
ANR	6147682	Condition	code < 0	353:16:12743:12750	6147518	0	True				
ANR	6147683	RelationalExpression	code < 0		6147518	0		<			
ANR	6147684	Identifier	code		6147518	0					
ANR	6147685	PrimaryExpression	0		6147518	1					
ANR	6147686	ReturnStatement	return code ;	354:16:12769:12780	6147518	1	True				
ANR	6147687	Identifier	code		6147518	0					
ANR	6147688	ExpressionStatement	buf [ 0 ] = buf [ 1 ] = buf [ size + 2 ] = buf [ size + 3 ] = '-'	355:12:12794:12847	6147518	9	True				
ANR	6147689	AssignmentExpression	buf [ 0 ] = buf [ 1 ] = buf [ size + 2 ] = buf [ size + 3 ] = '-'		6147518	0		=			
ANR	6147690	ArrayIndexing	buf [ 0 ]		6147518	0					
ANR	6147691	Identifier	buf		6147518	0					
ANR	6147692	PrimaryExpression	0		6147518	1					
ANR	6147693	AssignmentExpression	buf [ 1 ] = buf [ size + 2 ] = buf [ size + 3 ] = '-'		6147518	1		=			
ANR	6147694	ArrayIndexing	buf [ 1 ]		6147518	0					
ANR	6147695	Identifier	buf		6147518	0					
ANR	6147696	PrimaryExpression	1		6147518	1					
ANR	6147697	AssignmentExpression	buf [ size + 2 ] = buf [ size + 3 ] = '-'		6147518	1		=			
ANR	6147698	ArrayIndexing	buf [ size + 2 ]		6147518	0					
ANR	6147699	Identifier	buf		6147518	0					
ANR	6147700	AdditiveExpression	size + 2		6147518	1		+			
ANR	6147701	Identifier	size		6147518	0					
ANR	6147702	PrimaryExpression	2		6147518	1					
ANR	6147703	AssignmentExpression	buf [ size + 3 ] = '-'		6147518	1		=			
ANR	6147704	ArrayIndexing	buf [ size + 3 ]		6147518	0					
ANR	6147705	Identifier	buf		6147518	0					
ANR	6147706	AdditiveExpression	size + 3		6147518	1		+			
ANR	6147707	Identifier	size		6147518	0					
ANR	6147708	PrimaryExpression	3		6147518	1					
ANR	6147709	PrimaryExpression	'-'		6147518	1					
ANR	6147710	ExpressionStatement	size += 4	356:12:12861:12870	6147518	10	True				
ANR	6147711	AssignmentExpression	size += 4		6147518	0		+=			
ANR	6147712	Identifier	size		6147518	0					
ANR	6147713	PrimaryExpression	4		6147518	1					
ANR	6147714	GotoStatement	goto nl ;	357:12:12884:12891	6147518	11	True				
ANR	6147715	Identifier	nl		6147518	0					
ANR	6147716	Label	case t_name :	358:8:12901:12912	6147518	12	True				
ANR	6147717	Identifier	t_name		6147518	0					
ANR	6147718	IfStatement	"if ( r_has_attr ( op , a_executable ) )"		6147518	13					
ANR	6147719	Condition	"r_has_attr ( op , a_executable )"	359:16:12930:12957	6147518	0	True				
ANR	6147720	CallExpression	"r_has_attr ( op , a_executable )"		6147518	0					
ANR	6147721	Callee	r_has_attr		6147518	0					
ANR	6147722	Identifier	r_has_attr		6147518	0					
ANR	6147723	ArgumentList	op		6147518	1					
ANR	6147724	Argument	op		6147518	0					
ANR	6147725	Identifier	op		6147518	0					
ANR	6147726	Argument	a_executable		6147518	1					
ANR	6147727	Identifier	a_executable		6147518	0					
ANR	6147728	CompoundStatement		50:46:1990:1990	6147518	1					
ANR	6147729	ExpressionStatement	"code = obj_string_data ( mem , op , & data , & size )"	360:16:12978:13023	6147518	0	True				
ANR	6147730	AssignmentExpression	"code = obj_string_data ( mem , op , & data , & size )"		6147518	0		=			
ANR	6147731	Identifier	code		6147518	0					
ANR	6147732	CallExpression	"obj_string_data ( mem , op , & data , & size )"		6147518	1					
ANR	6147733	Callee	obj_string_data		6147518	0					
ANR	6147734	Identifier	obj_string_data		6147518	0					
ANR	6147735	ArgumentList	mem		6147518	1					
ANR	6147736	Argument	mem		6147518	0					
ANR	6147737	Identifier	mem		6147518	0					
ANR	6147738	Argument	op		6147518	1					
ANR	6147739	Identifier	op		6147518	0					
ANR	6147740	Argument	& data		6147518	2					
ANR	6147741	UnaryOperationExpression	& data		6147518	0					
ANR	6147742	UnaryOperator	&		6147518	0					
ANR	6147743	Identifier	data		6147518	1					
ANR	6147744	Argument	& size		6147518	3					
ANR	6147745	UnaryOperationExpression	& size		6147518	0					
ANR	6147746	UnaryOperator	&		6147518	0					
ANR	6147747	Identifier	size		6147518	1					
ANR	6147748	IfStatement	if ( code < 0 )		6147518	1					
ANR	6147749	Condition	code < 0	361:20:13045:13052	6147518	0	True				
ANR	6147750	RelationalExpression	code < 0		6147518	0		<			
ANR	6147751	Identifier	code		6147518	0					
ANR	6147752	PrimaryExpression	0		6147518	1					
ANR	6147753	ReturnStatement	return code ;	362:20:13075:13086	6147518	1	True				
ANR	6147754	Identifier	code		6147518	0					
ANR	6147755	GotoStatement	goto nl ;	363:16:13104:13111	6147518	2	True				
ANR	6147756	Identifier	nl		6147518	0					
ANR	6147757	IfStatement	if ( start_pos > 0 )		6147518	14					
ANR	6147758	Condition	start_pos > 0	365:16:13143:13155	6147518	0	True				
ANR	6147759	RelationalExpression	start_pos > 0		6147518	0		>			
ANR	6147760	Identifier	start_pos		6147518	0					
ANR	6147761	PrimaryExpression	0		6147518	1					
ANR	6147762	ReturnStatement	"return obj_cvp ( op , str , len , prlen , 0 , start_pos - 1 , mem , restart ) ;"	366:16:13174:13241	6147518	1	True				
ANR	6147763	CallExpression	"obj_cvp ( op , str , len , prlen , 0 , start_pos - 1 , mem , restart )"		6147518	0					
ANR	6147764	Callee	obj_cvp		6147518	0					
ANR	6147765	Identifier	obj_cvp		6147518	0					
ANR	6147766	ArgumentList	op		6147518	1					
ANR	6147767	Argument	op		6147518	0					
ANR	6147768	Identifier	op		6147518	0					
ANR	6147769	Argument	str		6147518	1					
ANR	6147770	Identifier	str		6147518	0					
ANR	6147771	Argument	len		6147518	2					
ANR	6147772	Identifier	len		6147518	0					
ANR	6147773	Argument	prlen		6147518	3					
ANR	6147774	Identifier	prlen		6147518	0					
ANR	6147775	Argument	0		6147518	4					
ANR	6147776	PrimaryExpression	0		6147518	0					
ANR	6147777	Argument	start_pos - 1		6147518	5					
ANR	6147778	AdditiveExpression	start_pos - 1		6147518	0		-			
ANR	6147779	Identifier	start_pos		6147518	0					
ANR	6147780	PrimaryExpression	1		6147518	1					
ANR	6147781	Argument	mem		6147518	6					
ANR	6147782	Identifier	mem		6147518	0					
ANR	6147783	Argument	restart		6147518	7					
ANR	6147784	Identifier	restart		6147518	0					
ANR	6147785	IfStatement	if ( len < 1 )		6147518	15					
ANR	6147786	Condition	len < 1	367:16:13259:13265	6147518	0	True				
ANR	6147787	RelationalExpression	len < 1		6147518	0		<			
ANR	6147788	Identifier	len		6147518	0					
ANR	6147789	PrimaryExpression	1		6147518	1					
ANR	6147790	ExpressionStatement	return_error ( gs_error_rangecheck )	368:16:13284:13317	6147518	1	True				
ANR	6147791	CallExpression	return_error ( gs_error_rangecheck )		6147518	0					
ANR	6147792	Callee	return_error		6147518	0					
ANR	6147793	Identifier	return_error		6147518	0					
ANR	6147794	ArgumentList	gs_error_rangecheck		6147518	1					
ANR	6147795	Argument	gs_error_rangecheck		6147518	0					
ANR	6147796	Identifier	gs_error_rangecheck		6147518	0					
ANR	6147797	ExpressionStatement	"code = obj_cvp ( op , str + 1 , len - 1 , prlen , 0 , 0 , mem , restart )"	369:12:13331:13394	6147518	16	True				
ANR	6147798	AssignmentExpression	"code = obj_cvp ( op , str + 1 , len - 1 , prlen , 0 , 0 , mem , restart )"		6147518	0		=			
ANR	6147799	Identifier	code		6147518	0					
ANR	6147800	CallExpression	"obj_cvp ( op , str + 1 , len - 1 , prlen , 0 , 0 , mem , restart )"		6147518	1					
ANR	6147801	Callee	obj_cvp		6147518	0					
ANR	6147802	Identifier	obj_cvp		6147518	0					
ANR	6147803	ArgumentList	op		6147518	1					
ANR	6147804	Argument	op		6147518	0					
ANR	6147805	Identifier	op		6147518	0					
ANR	6147806	Argument	str + 1		6147518	1					
ANR	6147807	AdditiveExpression	str + 1		6147518	0		+			
ANR	6147808	Identifier	str		6147518	0					
ANR	6147809	PrimaryExpression	1		6147518	1					
ANR	6147810	Argument	len - 1		6147518	2					
ANR	6147811	AdditiveExpression	len - 1		6147518	0		-			
ANR	6147812	Identifier	len		6147518	0					
ANR	6147813	PrimaryExpression	1		6147518	1					
ANR	6147814	Argument	prlen		6147518	3					
ANR	6147815	Identifier	prlen		6147518	0					
ANR	6147816	Argument	0		6147518	4					
ANR	6147817	PrimaryExpression	0		6147518	0					
ANR	6147818	Argument	0		6147518	5					
ANR	6147819	PrimaryExpression	0		6147518	0					
ANR	6147820	Argument	mem		6147518	6					
ANR	6147821	Identifier	mem		6147518	0					
ANR	6147822	Argument	restart		6147518	7					
ANR	6147823	Identifier	restart		6147518	0					
ANR	6147824	IfStatement	if ( code < 0 )		6147518	17					
ANR	6147825	Condition	code < 0	370:16:13412:13419	6147518	0	True				
ANR	6147826	RelationalExpression	code < 0		6147518	0		<			
ANR	6147827	Identifier	code		6147518	0					
ANR	6147828	PrimaryExpression	0		6147518	1					
ANR	6147829	ReturnStatement	return code ;	371:16:13438:13449	6147518	1	True				
ANR	6147830	Identifier	code		6147518	0					
ANR	6147831	ExpressionStatement	str [ 0 ] = '/'	372:12:13463:13475	6147518	18	True				
ANR	6147832	AssignmentExpression	str [ 0 ] = '/'		6147518	0		=			
ANR	6147833	ArrayIndexing	str [ 0 ]		6147518	0					
ANR	6147834	Identifier	str		6147518	0					
ANR	6147835	PrimaryExpression	0		6147518	1					
ANR	6147836	PrimaryExpression	'/'		6147518	1					
ANR	6147837	ExpressionStatement	++ * prlen	373:12:13489:13497	6147518	19	True				
ANR	6147838	UnaryExpression	++ * prlen		6147518	0					
ANR	6147839	IncDec	++		6147518	0					
ANR	6147840	UnaryOperationExpression	* prlen		6147518	1					
ANR	6147841	UnaryOperator	*		6147518	0					
ANR	6147842	Identifier	prlen		6147518	1					
ANR	6147843	ReturnStatement	return code ;	374:12:13511:13522	6147518	20	True				
ANR	6147844	Identifier	code		6147518	0					
ANR	6147845	Label	case t_null :	375:8:13532:13543	6147518	21	True				
ANR	6147846	Identifier	t_null		6147518	0					
ANR	6147847	ExpressionStatement	"data = ( const byte * ) ""null"""	376:12:13557:13584	6147518	22	True				
ANR	6147848	AssignmentExpression	"data = ( const byte * ) ""null"""		6147518	0		=			
ANR	6147849	Identifier	data		6147518	0					
ANR	6147850	CastExpression	"( const byte * ) ""null"""		6147518	1					
ANR	6147851	CastTarget	const byte *		6147518	0					
ANR	6147852	PrimaryExpression	"""null"""		6147518	1					
ANR	6147853	GotoStatement	goto rs ;	377:12:13598:13605	6147518	23	True				
ANR	6147854	Identifier	rs		6147518	0					
ANR	6147855	Label	case t_string :	378:8:13615:13628	6147518	24	True				
ANR	6147856	Identifier	t_string		6147518	0					
ANR	6147857	IfStatement	"if ( ! r_has_attr ( op , a_read ) )"		6147518	25					
ANR	6147858	Condition	"! r_has_attr ( op , a_read )"	379:16:13646:13668	6147518	0	True				
ANR	6147859	UnaryOperationExpression	"! r_has_attr ( op , a_read )"		6147518	0					
ANR	6147860	UnaryOperator	!		6147518	0					
ANR	6147861	CallExpression	"r_has_attr ( op , a_read )"		6147518	1					
ANR	6147862	Callee	r_has_attr		6147518	0					
ANR	6147863	Identifier	r_has_attr		6147518	0					
ANR	6147864	ArgumentList	op		6147518	1					
ANR	6147865	Argument	op		6147518	0					
ANR	6147866	Identifier	op		6147518	0					
ANR	6147867	Argument	a_read		6147518	1					
ANR	6147868	Identifier	a_read		6147518	0					
ANR	6147869	GotoStatement	goto other ;	380:16:13687:13697	6147518	1	True				
ANR	6147870	Identifier	other		6147518	0					
ANR	6147871	ExpressionStatement	size = r_size ( op )	381:12:13711:13728	6147518	26	True				
ANR	6147872	AssignmentExpression	size = r_size ( op )		6147518	0		=			
ANR	6147873	Identifier	size		6147518	0					
ANR	6147874	CallExpression	r_size ( op )		6147518	1					
ANR	6147875	Callee	r_size		6147518	0					
ANR	6147876	Identifier	r_size		6147518	0					
ANR	6147877	ArgumentList	op		6147518	1					
ANR	6147878	Argument	op		6147518	0					
ANR	6147879	Identifier	op		6147518	0					
ANR	6147880	CompoundStatement		80:16:3025:3039	6147518	27					
ANR	6147881	IdentifierDeclStatement	bool truncate = ( full_print == 1 && size > CVP_MAX_STRING ) ;	383:16:13760:13818	6147518	0	True				
ANR	6147882	IdentifierDecl	truncate = ( full_print == 1 && size > CVP_MAX_STRING )		6147518	0					
ANR	6147883	IdentifierDeclType	bool		6147518	0					
ANR	6147884	Identifier	truncate		6147518	1					
ANR	6147885	AssignmentExpression	truncate = ( full_print == 1 && size > CVP_MAX_STRING )		6147518	2		=			
ANR	6147886	Identifier	truncate		6147518	0					
ANR	6147887	AndExpression	full_print == 1 && size > CVP_MAX_STRING		6147518	1		&&			
ANR	6147888	EqualityExpression	full_print == 1		6147518	0		==			
ANR	6147889	Identifier	full_print		6147518	0					
ANR	6147890	PrimaryExpression	1		6147518	1					
ANR	6147891	RelationalExpression	size > CVP_MAX_STRING		6147518	1		>			
ANR	6147892	Identifier	size		6147518	0					
ANR	6147893	Identifier	CVP_MAX_STRING		6147518	1					
ANR	6147894	IdentifierDeclStatement	stream_cursor_read r ;	384:16:13836:13856	6147518	1	True				
ANR	6147895	IdentifierDecl	r		6147518	0					
ANR	6147896	IdentifierDeclType	stream_cursor_read		6147518	0					
ANR	6147897	Identifier	r		6147518	1					
ANR	6147898	IdentifierDeclStatement	stream_cursor_write w ;	385:16:13874:13895	6147518	2	True				
ANR	6147899	IdentifierDecl	w		6147518	0					
ANR	6147900	IdentifierDeclType	stream_cursor_write		6147518	0					
ANR	6147901	Identifier	w		6147518	1					
ANR	6147902	IdentifierDeclStatement	uint skip ;	386:16:13913:13922	6147518	3	True				
ANR	6147903	IdentifierDecl	skip		6147518	0					
ANR	6147904	IdentifierDeclType	uint		6147518	0					
ANR	6147905	Identifier	skip		6147518	1					
ANR	6147906	IdentifierDeclStatement	byte * wstr ;	387:16:13940:13950	6147518	4	True				
ANR	6147907	IdentifierDecl	* wstr		6147518	0					
ANR	6147908	IdentifierDeclType	byte *		6147518	0					
ANR	6147909	Identifier	wstr		6147518	1					
ANR	6147910	IdentifierDeclStatement	uint len1 ;	388:16:13968:13977	6147518	5	True				
ANR	6147911	IdentifierDecl	len1		6147518	0					
ANR	6147912	IdentifierDeclType	uint		6147518	0					
ANR	6147913	Identifier	len1		6147518	1					
ANR	6147914	IdentifierDeclStatement	int status = 1 ;	389:16:13995:14009	6147518	6	True				
ANR	6147915	IdentifierDecl	status = 1		6147518	0					
ANR	6147916	IdentifierDeclType	int		6147518	0					
ANR	6147917	Identifier	status		6147518	1					
ANR	6147918	AssignmentExpression	status = 1		6147518	2		=			
ANR	6147919	Identifier	status		6147518	0					
ANR	6147920	PrimaryExpression	1		6147518	1					
ANR	6147921	IfStatement	if ( start_pos == 0 )		6147518	7					
ANR	6147922	Condition	start_pos == 0	391:20:14032:14045	6147518	0	True				
ANR	6147923	EqualityExpression	start_pos == 0		6147518	0		==			
ANR	6147924	Identifier	start_pos		6147518	0					
ANR	6147925	PrimaryExpression	0		6147518	1					
ANR	6147926	CompoundStatement		82:36:3078:3078	6147518	1					
ANR	6147927	IfStatement	if ( len < 1 )		6147518	0					
ANR	6147928	Condition	len < 1	392:24:14074:14080	6147518	0	True				
ANR	6147929	RelationalExpression	len < 1		6147518	0		<			
ANR	6147930	Identifier	len		6147518	0					
ANR	6147931	PrimaryExpression	1		6147518	1					
ANR	6147932	ExpressionStatement	return_error ( gs_error_rangecheck )	393:24:14107:14140	6147518	1	True				
ANR	6147933	CallExpression	return_error ( gs_error_rangecheck )		6147518	0					
ANR	6147934	Callee	return_error		6147518	0					
ANR	6147935	Identifier	return_error		6147518	0					
ANR	6147936	ArgumentList	gs_error_rangecheck		6147518	1					
ANR	6147937	Argument	gs_error_rangecheck		6147518	0					
ANR	6147938	Identifier	gs_error_rangecheck		6147518	0					
ANR	6147939	ExpressionStatement	str [ 0 ] = '('	394:20:14162:14174	6147518	1	True				
ANR	6147940	AssignmentExpression	str [ 0 ] = '('		6147518	0		=			
ANR	6147941	ArrayIndexing	str [ 0 ]		6147518	0					
ANR	6147942	Identifier	str		6147518	0					
ANR	6147943	PrimaryExpression	0		6147518	1					
ANR	6147944	PrimaryExpression	'('		6147518	1					
ANR	6147945	ExpressionStatement	skip = 0	395:20:14196:14204	6147518	2	True				
ANR	6147946	AssignmentExpression	skip = 0		6147518	0		=			
ANR	6147947	Identifier	skip		6147518	0					
ANR	6147948	PrimaryExpression	0		6147518	1					
ANR	6147949	ExpressionStatement	wstr = str + 1	396:20:14226:14240	6147518	3	True				
ANR	6147950	AssignmentExpression	wstr = str + 1		6147518	0		=			
ANR	6147951	Identifier	wstr		6147518	0					
ANR	6147952	AdditiveExpression	str + 1		6147518	1		+			
ANR	6147953	Identifier	str		6147518	0					
ANR	6147954	PrimaryExpression	1		6147518	1					
ANR	6147955	ElseStatement	else		6147518	0					
ANR	6147956	CompoundStatement		88:23:3295:3295	6147518	0					
ANR	6147957	ExpressionStatement	skip = start_pos - 1	398:20:14287:14307	6147518	0	True				
ANR	6147958	AssignmentExpression	skip = start_pos - 1		6147518	0		=			
ANR	6147959	Identifier	skip		6147518	0					
ANR	6147960	AdditiveExpression	start_pos - 1		6147518	1		-			
ANR	6147961	Identifier	start_pos		6147518	0					
ANR	6147962	PrimaryExpression	1		6147518	1					
ANR	6147963	ExpressionStatement	wstr = str	399:20:14329:14339	6147518	1	True				
ANR	6147964	AssignmentExpression	wstr = str		6147518	0		=			
ANR	6147965	Identifier	wstr		6147518	0					
ANR	6147966	Identifier	str		6147518	1					
ANR	6147967	ExpressionStatement	len1 = len + ( str - wstr )	401:16:14375:14400	6147518	8	True				
ANR	6147968	AssignmentExpression	len1 = len + ( str - wstr )		6147518	0		=			
ANR	6147969	Identifier	len1		6147518	0					
ANR	6147970	AdditiveExpression	len + ( str - wstr )		6147518	1		+			
ANR	6147971	Identifier	len		6147518	0					
ANR	6147972	AdditiveExpression	str - wstr		6147518	1		-			
ANR	6147973	Identifier	str		6147518	0					
ANR	6147974	Identifier	wstr		6147518	1					
ANR	6147975	ExpressionStatement	r . ptr = op -> value . const_bytes - 1	402:16:14418:14451	6147518	9	True				
ANR	6147976	AssignmentExpression	r . ptr = op -> value . const_bytes - 1		6147518	0		=			
ANR	6147977	MemberAccess	r . ptr		6147518	0					
ANR	6147978	Identifier	r		6147518	0					
ANR	6147979	Identifier	ptr		6147518	1					
ANR	6147980	AdditiveExpression	op -> value . const_bytes - 1		6147518	1		-			
ANR	6147981	MemberAccess	op -> value . const_bytes		6147518	0					
ANR	6147982	PtrMemberAccess	op -> value		6147518	0					
ANR	6147983	Identifier	op		6147518	0					
ANR	6147984	Identifier	value		6147518	1					
ANR	6147985	Identifier	const_bytes		6147518	1					
ANR	6147986	PrimaryExpression	1		6147518	1					
ANR	6147987	ExpressionStatement	r . limit = r . ptr + ( truncate ? CVP_MAX_STRING : size )	403:16:14469:14521	6147518	10	True				
ANR	6147988	AssignmentExpression	r . limit = r . ptr + ( truncate ? CVP_MAX_STRING : size )		6147518	0		=			
ANR	6147989	MemberAccess	r . limit		6147518	0					
ANR	6147990	Identifier	r		6147518	0					
ANR	6147991	Identifier	limit		6147518	1					
ANR	6147992	AdditiveExpression	r . ptr + ( truncate ? CVP_MAX_STRING : size )		6147518	1		+			
ANR	6147993	MemberAccess	r . ptr		6147518	0					
ANR	6147994	Identifier	r		6147518	0					
ANR	6147995	Identifier	ptr		6147518	1					
ANR	6147996	ConditionalExpression	truncate ? CVP_MAX_STRING : size		6147518	1					
ANR	6147997	Condition	truncate		6147518	0					
ANR	6147998	Identifier	truncate		6147518	0					
ANR	6147999	Identifier	CVP_MAX_STRING		6147518	1					
ANR	6148000	Identifier	size		6147518	2					
ANR	6148001	WhileStatement	while ( skip && status == 1 )		6147518	11					
ANR	6148002	Condition	skip && status == 1	404:23:14546:14564	6147518	0	True				
ANR	6148003	AndExpression	skip && status == 1		6147518	0		&&			
ANR	6148004	Identifier	skip		6147518	0					
ANR	6148005	EqualityExpression	status == 1		6147518	1		==			
ANR	6148006	Identifier	status		6147518	0					
ANR	6148007	PrimaryExpression	1		6147518	1					
ANR	6148008	CompoundStatement		96:20:3619:3631	6147518	1					
ANR	6148009	IdentifierDeclStatement	uint written ;	405:20:14589:14601	6147518	0	True				
ANR	6148010	IdentifierDecl	written		6147518	0					
ANR	6148011	IdentifierDeclType	uint		6147518	0					
ANR	6148012	Identifier	written		6147518	1					
ANR	6148013	ExpressionStatement	w . ptr = ( byte * ) buf - 1	407:20:14624:14647	6147518	1	True				
ANR	6148014	AssignmentExpression	w . ptr = ( byte * ) buf - 1		6147518	0		=			
ANR	6148015	MemberAccess	w . ptr		6147518	0					
ANR	6148016	Identifier	w		6147518	0					
ANR	6148017	Identifier	ptr		6147518	1					
ANR	6148018	AdditiveExpression	( byte * ) buf - 1		6147518	1		-			
ANR	6148019	CastExpression	( byte * ) buf		6147518	0					
ANR	6148020	CastTarget	byte *		6147518	0					
ANR	6148021	Identifier	buf		6147518	1					
ANR	6148022	PrimaryExpression	1		6147518	1					
ANR	6148023	ExpressionStatement	"w . limit = w . ptr + min ( skip + len1 , sizeof ( buf ) )"	408:20:14669:14716	6147518	2	True				
ANR	6148024	AssignmentExpression	"w . limit = w . ptr + min ( skip + len1 , sizeof ( buf ) )"		6147518	0		=			
ANR	6148025	MemberAccess	w . limit		6147518	0					
ANR	6148026	Identifier	w		6147518	0					
ANR	6148027	Identifier	limit		6147518	1					
ANR	6148028	AdditiveExpression	"w . ptr + min ( skip + len1 , sizeof ( buf ) )"		6147518	1		+			
ANR	6148029	MemberAccess	w . ptr		6147518	0					
ANR	6148030	Identifier	w		6147518	0					
ANR	6148031	Identifier	ptr		6147518	1					
ANR	6148032	CallExpression	"min ( skip + len1 , sizeof ( buf ) )"		6147518	1					
ANR	6148033	Callee	min		6147518	0					
ANR	6148034	Identifier	min		6147518	0					
ANR	6148035	ArgumentList	skip + len1		6147518	1					
ANR	6148036	Argument	skip + len1		6147518	0					
ANR	6148037	AdditiveExpression	skip + len1		6147518	0		+			
ANR	6148038	Identifier	skip		6147518	0					
ANR	6148039	Identifier	len1		6147518	1					
ANR	6148040	Argument	sizeof ( buf )		6147518	1					
ANR	6148041	SizeofExpression	sizeof ( buf )		6147518	0					
ANR	6148042	Sizeof	sizeof		6147518	0					
ANR	6148043	SizeofOperand	buf		6147518	1					
ANR	6148044	ExpressionStatement	"status = s_PSSE_template . process ( NULL , & r , & w , false )"	409:20:14738:14791	6147518	3	True				
ANR	6148045	AssignmentExpression	"status = s_PSSE_template . process ( NULL , & r , & w , false )"		6147518	0		=			
ANR	6148046	Identifier	status		6147518	0					
ANR	6148047	CallExpression	"s_PSSE_template . process ( NULL , & r , & w , false )"		6147518	1					
ANR	6148048	Callee	s_PSSE_template . process		6147518	0					
ANR	6148049	MemberAccess	s_PSSE_template . process		6147518	0					
ANR	6148050	Identifier	s_PSSE_template		6147518	0					
ANR	6148051	Identifier	process		6147518	1					
ANR	6148052	ArgumentList	NULL		6147518	1					
ANR	6148053	Argument	NULL		6147518	0					
ANR	6148054	Identifier	NULL		6147518	0					
ANR	6148055	Argument	& r		6147518	1					
ANR	6148056	UnaryOperationExpression	& r		6147518	0					
ANR	6148057	UnaryOperator	&		6147518	0					
ANR	6148058	Identifier	r		6147518	1					
ANR	6148059	Argument	& w		6147518	2					
ANR	6148060	UnaryOperationExpression	& w		6147518	0					
ANR	6148061	UnaryOperator	&		6147518	0					
ANR	6148062	Identifier	w		6147518	1					
ANR	6148063	Argument	false		6147518	3					
ANR	6148064	Identifier	false		6147518	0					
ANR	6148065	ExpressionStatement	written = w . ptr - ( ( byte * ) buf - 1 )	410:20:14813:14848	6147518	4	True				
ANR	6148066	AssignmentExpression	written = w . ptr - ( ( byte * ) buf - 1 )		6147518	0		=			
ANR	6148067	Identifier	written		6147518	0					
ANR	6148068	AdditiveExpression	w . ptr - ( ( byte * ) buf - 1 )		6147518	1		-			
ANR	6148069	MemberAccess	w . ptr		6147518	0					
ANR	6148070	Identifier	w		6147518	0					
ANR	6148071	Identifier	ptr		6147518	1					
ANR	6148072	AdditiveExpression	( byte * ) buf - 1		6147518	1		-			
ANR	6148073	CastExpression	( byte * ) buf		6147518	0					
ANR	6148074	CastTarget	byte *		6147518	0					
ANR	6148075	Identifier	buf		6147518	1					
ANR	6148076	PrimaryExpression	1		6147518	1					
ANR	6148077	IfStatement	if ( written > skip )		6147518	5					
ANR	6148078	Condition	written > skip	411:24:14874:14887	6147518	0	True				
ANR	6148079	RelationalExpression	written > skip		6147518	0		>			
ANR	6148080	Identifier	written		6147518	0					
ANR	6148081	Identifier	skip		6147518	1					
ANR	6148082	CompoundStatement		102:40:3920:3920	6147518	1					
ANR	6148083	ExpressionStatement	written -= skip	412:24:14916:14931	6147518	0	True				
ANR	6148084	AssignmentExpression	written -= skip		6147518	0		-=			
ANR	6148085	Identifier	written		6147518	0					
ANR	6148086	Identifier	skip		6147518	1					
ANR	6148087	ExpressionStatement	"memcpy ( wstr , buf + skip , written )"	413:24:14957:14990	6147518	1	True				
ANR	6148088	CallExpression	"memcpy ( wstr , buf + skip , written )"		6147518	0					
ANR	6148089	Callee	memcpy		6147518	0					
ANR	6148090	Identifier	memcpy		6147518	0					
ANR	6148091	ArgumentList	wstr		6147518	1					
ANR	6148092	Argument	wstr		6147518	0					
ANR	6148093	Identifier	wstr		6147518	0					
ANR	6148094	Argument	buf + skip		6147518	1					
ANR	6148095	AdditiveExpression	buf + skip		6147518	0		+			
ANR	6148096	Identifier	buf		6147518	0					
ANR	6148097	Identifier	skip		6147518	1					
ANR	6148098	Argument	written		6147518	2					
ANR	6148099	Identifier	written		6147518	0					
ANR	6148100	ExpressionStatement	wstr += written	414:24:15016:15031	6147518	2	True				
ANR	6148101	AssignmentExpression	wstr += written		6147518	0		+=			
ANR	6148102	Identifier	wstr		6147518	0					
ANR	6148103	Identifier	written		6147518	1					
ANR	6148104	ExpressionStatement	skip = 0	415:24:15057:15065	6147518	3	True				
ANR	6148105	AssignmentExpression	skip = 0		6147518	0		=			
ANR	6148106	Identifier	skip		6147518	0					
ANR	6148107	PrimaryExpression	0		6147518	1					
ANR	6148108	BreakStatement	break ;	416:24:15091:15096	6147518	4	True				
ANR	6148109	ExpressionStatement	skip -= written	418:20:15140:15155	6147518	6	True				
ANR	6148110	AssignmentExpression	skip -= written		6147518	0		-=			
ANR	6148111	Identifier	skip		6147518	0					
ANR	6148112	Identifier	written		6147518	1					
ANR	6148113	IfStatement	if ( status == 0 )		6147518	12					
ANR	6148114	Condition	status == 0	424:20:15377:15387	6147518	0	True				
ANR	6148115	EqualityExpression	status == 0		6147518	0		==			
ANR	6148116	Identifier	status		6147518	0					
ANR	6148117	PrimaryExpression	0		6147518	1					
ANR	6148118	CompoundStatement		115:33:4420:4420	6147518	1					
ANR	6148119	IfStatement	if ( skip > ( truncate ? 4 : 1 ) )		6147518	0					
ANR	6148120	Condition	skip > ( truncate ? 4 : 1 )	426:24:15429:15453	6147518	0	True				
ANR	6148121	RelationalExpression	skip > ( truncate ? 4 : 1 )		6147518	0		>			
ANR	6148122	Identifier	skip		6147518	0					
ANR	6148123	ConditionalExpression	truncate ? 4 : 1		6147518	1					
ANR	6148124	Condition	truncate		6147518	0					
ANR	6148125	Identifier	truncate		6147518	0					
ANR	6148126	PrimaryExpression	4		6147518	1					
ANR	6148127	PrimaryExpression	1		6147518	2					
ANR	6148128	CompoundStatement		117:51:4486:4486	6147518	1					
ANR	6148129	ExpressionStatement	return_error ( gs_error_Fatal )	427:24:15482:15510	6147518	0	True				
ANR	6148130	CallExpression	return_error ( gs_error_Fatal )		6147518	0					
ANR	6148131	Callee	return_error		6147518	0					
ANR	6148132	Identifier	return_error		6147518	0					
ANR	6148133	ArgumentList	gs_error_Fatal		6147518	1					
ANR	6148134	Argument	gs_error_Fatal		6147518	0					
ANR	6148135	Identifier	gs_error_Fatal		6147518	0					
ANR	6148136	ExpressionStatement	w . ptr = wstr - 1	431:16:15575:15591	6147518	13	True				
ANR	6148137	AssignmentExpression	w . ptr = wstr - 1		6147518	0		=			
ANR	6148138	MemberAccess	w . ptr		6147518	0					
ANR	6148139	Identifier	w		6147518	0					
ANR	6148140	Identifier	ptr		6147518	1					
ANR	6148141	AdditiveExpression	wstr - 1		6147518	1		-			
ANR	6148142	Identifier	wstr		6147518	0					
ANR	6148143	PrimaryExpression	1		6147518	1					
ANR	6148144	ExpressionStatement	w . limit = str - 1 + len	432:16:15609:15632	6147518	14	True				
ANR	6148145	AssignmentExpression	w . limit = str - 1 + len		6147518	0		=			
ANR	6148146	MemberAccess	w . limit		6147518	0					
ANR	6148147	Identifier	w		6147518	0					
ANR	6148148	Identifier	limit		6147518	1					
ANR	6148149	AdditiveExpression	str - 1 + len		6147518	1		-			
ANR	6148150	Identifier	str		6147518	0					
ANR	6148151	AdditiveExpression	1 + len		6147518	1		+			
ANR	6148152	PrimaryExpression	1		6147518	0					
ANR	6148153	Identifier	len		6147518	1					
ANR	6148154	IfStatement	if ( status == 1 )		6147518	15					
ANR	6148155	Condition	status == 1	433:20:15654:15664	6147518	0	True				
ANR	6148156	EqualityExpression	status == 1		6147518	0		==			
ANR	6148157	Identifier	status		6147518	0					
ANR	6148158	PrimaryExpression	1		6147518	1					
ANR	6148159	ExpressionStatement	"status = s_PSSE_template . process ( NULL , & r , & w , false )"	434:20:15687:15740	6147518	1	True				
ANR	6148160	AssignmentExpression	"status = s_PSSE_template . process ( NULL , & r , & w , false )"		6147518	0		=			
ANR	6148161	Identifier	status		6147518	0					
ANR	6148162	CallExpression	"s_PSSE_template . process ( NULL , & r , & w , false )"		6147518	1					
ANR	6148163	Callee	s_PSSE_template . process		6147518	0					
ANR	6148164	MemberAccess	s_PSSE_template . process		6147518	0					
ANR	6148165	Identifier	s_PSSE_template		6147518	0					
ANR	6148166	Identifier	process		6147518	1					
ANR	6148167	ArgumentList	NULL		6147518	1					
ANR	6148168	Argument	NULL		6147518	0					
ANR	6148169	Identifier	NULL		6147518	0					
ANR	6148170	Argument	& r		6147518	1					
ANR	6148171	UnaryOperationExpression	& r		6147518	0					
ANR	6148172	UnaryOperator	&		6147518	0					
ANR	6148173	Identifier	r		6147518	1					
ANR	6148174	Argument	& w		6147518	2					
ANR	6148175	UnaryOperationExpression	& w		6147518	0					
ANR	6148176	UnaryOperator	&		6147518	0					
ANR	6148177	Identifier	w		6147518	1					
ANR	6148178	Argument	false		6147518	3					
ANR	6148179	Identifier	false		6147518	0					
ANR	6148180	ExpressionStatement	* prlen = w . ptr - ( str - 1 )	435:16:15758:15784	6147518	16	True				
ANR	6148181	AssignmentExpression	* prlen = w . ptr - ( str - 1 )		6147518	0		=			
ANR	6148182	UnaryOperationExpression	* prlen		6147518	0					
ANR	6148183	UnaryOperator	*		6147518	0					
ANR	6148184	Identifier	prlen		6147518	1					
ANR	6148185	AdditiveExpression	w . ptr - ( str - 1 )		6147518	1		-			
ANR	6148186	MemberAccess	w . ptr		6147518	0					
ANR	6148187	Identifier	w		6147518	0					
ANR	6148188	Identifier	ptr		6147518	1					
ANR	6148189	AdditiveExpression	str - 1		6147518	1		-			
ANR	6148190	Identifier	str		6147518	0					
ANR	6148191	PrimaryExpression	1		6147518	1					
ANR	6148192	IfStatement	if ( status != 0 )		6147518	17					
ANR	6148193	Condition	status != 0	436:20:15806:15816	6147518	0	True				
ANR	6148194	EqualityExpression	status != 0		6147518	0		!=			
ANR	6148195	Identifier	status		6147518	0					
ANR	6148196	PrimaryExpression	0		6147518	1					
ANR	6148197	ReturnStatement	return 1 ;	437:20:15839:15847	6147518	1	True				
ANR	6148198	PrimaryExpression	1		6147518	0					
ANR	6148199	IfStatement	if ( truncate )		6147518	18					
ANR	6148200	Condition	truncate	438:20:15869:15876	6147518	0	True				
ANR	6148201	Identifier	truncate		6147518	0					
ANR	6148202	CompoundStatement		129:30:4909:4909	6147518	1					
ANR	6148203	IfStatement	if ( len - * prlen < 4 - skip )		6147518	0					
ANR	6148204	Condition	len - * prlen < 4 - skip	439:24:15905:15927	6147518	0	True				
ANR	6148205	RelationalExpression	len - * prlen < 4 - skip		6147518	0		<			
ANR	6148206	AdditiveExpression	len - * prlen		6147518	0		-			
ANR	6148207	Identifier	len		6147518	0					
ANR	6148208	UnaryOperationExpression	* prlen		6147518	1					
ANR	6148209	UnaryOperator	*		6147518	0					
ANR	6148210	Identifier	prlen		6147518	1					
ANR	6148211	AdditiveExpression	4 - skip		6147518	1		-			
ANR	6148212	PrimaryExpression	4		6147518	0					
ANR	6148213	Identifier	skip		6147518	1					
ANR	6148214	ReturnStatement	return 1 ;	440:24:15954:15962	6147518	1	True				
ANR	6148215	PrimaryExpression	1		6147518	0					
ANR	6148216	ExpressionStatement	"memcpy ( w . ptr + 1 , & ""...)"" [ skip ] , 4 - skip )"	441:20:15984:16026	6147518	1	True				
ANR	6148217	CallExpression	"memcpy ( w . ptr + 1 , & ""...)"" [ skip ] , 4 - skip )"		6147518	0					
ANR	6148218	Callee	memcpy		6147518	0					
ANR	6148219	Identifier	memcpy		6147518	0					
ANR	6148220	ArgumentList	w . ptr + 1		6147518	1					
ANR	6148221	Argument	w . ptr + 1		6147518	0					
ANR	6148222	AdditiveExpression	w . ptr + 1		6147518	0		+			
ANR	6148223	MemberAccess	w . ptr		6147518	0					
ANR	6148224	Identifier	w		6147518	0					
ANR	6148225	Identifier	ptr		6147518	1					
ANR	6148226	PrimaryExpression	1		6147518	1					
ANR	6148227	Argument	"& ""...)"" [ skip ]"		6147518	1					
ANR	6148228	UnaryOperationExpression	"& ""...)"" [ skip ]"		6147518	0					
ANR	6148229	UnaryOperator	&		6147518	0					
ANR	6148230	ArrayIndexing	"""...)"" [ skip ]"		6147518	1					
ANR	6148231	PrimaryExpression	"""...)"""		6147518	0					
ANR	6148232	Identifier	skip		6147518	1					
ANR	6148233	Argument	4 - skip		6147518	2					
ANR	6148234	AdditiveExpression	4 - skip		6147518	0		-			
ANR	6148235	PrimaryExpression	4		6147518	0					
ANR	6148236	Identifier	skip		6147518	1					
ANR	6148237	ExpressionStatement	* prlen += 4 - skip	442:20:16048:16066	6147518	2	True				
ANR	6148238	AssignmentExpression	* prlen += 4 - skip		6147518	0		+=			
ANR	6148239	UnaryOperationExpression	* prlen		6147518	0					
ANR	6148240	UnaryOperator	*		6147518	0					
ANR	6148241	Identifier	prlen		6147518	1					
ANR	6148242	AdditiveExpression	4 - skip		6147518	1		-			
ANR	6148243	PrimaryExpression	4		6147518	0					
ANR	6148244	Identifier	skip		6147518	1					
ANR	6148245	ElseStatement	else		6147518	0					
ANR	6148246	CompoundStatement		134:23:5121:5121	6147518	0					
ANR	6148247	IfStatement	if ( len - * prlen < 1 - skip )		6147518	0					
ANR	6148248	Condition	len - * prlen < 1 - skip	444:24:16117:16139	6147518	0	True				
ANR	6148249	RelationalExpression	len - * prlen < 1 - skip		6147518	0		<			
ANR	6148250	AdditiveExpression	len - * prlen		6147518	0		-			
ANR	6148251	Identifier	len		6147518	0					
ANR	6148252	UnaryOperationExpression	* prlen		6147518	1					
ANR	6148253	UnaryOperator	*		6147518	0					
ANR	6148254	Identifier	prlen		6147518	1					
ANR	6148255	AdditiveExpression	1 - skip		6147518	1		-			
ANR	6148256	PrimaryExpression	1		6147518	0					
ANR	6148257	Identifier	skip		6147518	1					
ANR	6148258	ReturnStatement	return 1 ;	445:24:16166:16174	6147518	1	True				
ANR	6148259	PrimaryExpression	1		6147518	0					
ANR	6148260	IfStatement	if ( ! skip )		6147518	1					
ANR	6148261	Condition	! skip	446:24:16200:16204	6147518	0	True				
ANR	6148262	UnaryOperationExpression	! skip		6147518	0					
ANR	6148263	UnaryOperator	!		6147518	0					
ANR	6148264	Identifier	skip		6147518	1					
ANR	6148265	CompoundStatement		137:31:5237:5237	6147518	1					
ANR	6148266	ExpressionStatement	w . ptr [ 1 ] = ')'	447:24:16233:16247	6147518	0	True				
ANR	6148267	AssignmentExpression	w . ptr [ 1 ] = ')'		6147518	0		=			
ANR	6148268	ArrayIndexing	w . ptr [ 1 ]		6147518	0					
ANR	6148269	MemberAccess	w . ptr		6147518	0					
ANR	6148270	Identifier	w		6147518	0					
ANR	6148271	Identifier	ptr		6147518	1					
ANR	6148272	PrimaryExpression	1		6147518	1					
ANR	6148273	PrimaryExpression	')'		6147518	1					
ANR	6148274	ExpressionStatement	* prlen += 1	448:24:16273:16284	6147518	1	True				
ANR	6148275	AssignmentExpression	* prlen += 1		6147518	0		+=			
ANR	6148276	UnaryOperationExpression	* prlen		6147518	0					
ANR	6148277	UnaryOperator	*		6147518	0					
ANR	6148278	Identifier	prlen		6147518	1					
ANR	6148279	PrimaryExpression	1		6147518	1					
ANR	6148280	ReturnStatement	return 0 ;	452:12:16352:16360	6147518	28	True				
ANR	6148281	PrimaryExpression	0		6147518	0					
ANR	6148282	Label	case t_astruct :	453:8:16370:16384	6147518	29	True				
ANR	6148283	Identifier	t_astruct		6147518	0					
ANR	6148284	Label	case t_struct :	454:8:16394:16407	6147518	30	True				
ANR	6148285	Identifier	t_struct		6147518	0					
ANR	6148286	IfStatement	if ( r_is_foreign ( op ) )		6147518	31					
ANR	6148287	Condition	r_is_foreign ( op )	455:16:16425:16440	6147518	0	True				
ANR	6148288	CallExpression	r_is_foreign ( op )		6147518	0					
ANR	6148289	Callee	r_is_foreign		6147518	0					
ANR	6148290	Identifier	r_is_foreign		6147518	0					
ANR	6148291	ArgumentList	op		6147518	1					
ANR	6148292	Argument	op		6147518	0					
ANR	6148293	Identifier	op		6147518	0					
ANR	6148294	CompoundStatement		146:34:5473:5473	6147518	1					
ANR	6148295	ExpressionStatement	"data = ( const byte * ) ""-foreign-struct-"""	457:16:16512:16551	6147518	0	True				
ANR	6148296	AssignmentExpression	"data = ( const byte * ) ""-foreign-struct-"""		6147518	0		=			
ANR	6148297	Identifier	data		6147518	0					
ANR	6148298	CastExpression	"( const byte * ) ""-foreign-struct-"""		6147518	1					
ANR	6148299	CastTarget	const byte *		6147518	0					
ANR	6148300	PrimaryExpression	"""-foreign-struct-"""		6147518	1					
ANR	6148301	GotoStatement	goto rs ;	458:16:16569:16576	6147518	1	True				
ANR	6148302	Identifier	rs		6147518	0					
ANR	6148303	IfStatement	if ( ! mem )		6147518	32					
ANR	6148304	Condition	! mem	460:16:16608:16611	6147518	0	True				
ANR	6148305	UnaryOperationExpression	! mem		6147518	0					
ANR	6148306	UnaryOperator	!		6147518	0					
ANR	6148307	Identifier	mem		6147518	1					
ANR	6148308	CompoundStatement		151:22:5644:5644	6147518	1					
ANR	6148309	ExpressionStatement	"data = ( const byte * ) ""-(struct)-"""	461:16:16632:16665	6147518	0	True				
ANR	6148310	AssignmentExpression	"data = ( const byte * ) ""-(struct)-"""		6147518	0		=			
ANR	6148311	Identifier	data		6147518	0					
ANR	6148312	CastExpression	"( const byte * ) ""-(struct)-"""		6147518	1					
ANR	6148313	CastTarget	const byte *		6147518	0					
ANR	6148314	PrimaryExpression	"""-(struct)-"""		6147518	1					
ANR	6148315	GotoStatement	goto rs ;	462:16:16683:16690	6147518	1	True				
ANR	6148316	Identifier	rs		6147518	0					
ANR	6148317	ExpressionStatement	"data = ( const byte * ) gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"	464:12:16718:16913	6147518	33	True				
ANR	6148318	AssignmentExpression	"data = ( const byte * ) gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"		6147518	0		=			
ANR	6148319	Identifier	data		6147518	0					
ANR	6148320	CastExpression	"( const byte * ) gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"		6147518	1					
ANR	6148321	CastTarget	const byte *		6147518	0					
ANR	6148322	CallExpression	"gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"		6147518	1					
ANR	6148323	Callee	gs_struct_type_name_string		6147518	0					
ANR	6148324	Identifier	gs_struct_type_name_string		6147518	0					
ANR	6148325	ArgumentList	"gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct )"		6147518	1					
ANR	6148326	Argument	"gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct )"		6147518	0					
ANR	6148327	CallExpression	"gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct )"		6147518	0					
ANR	6148328	Callee	gs_object_type		6147518	0					
ANR	6148329	Identifier	gs_object_type		6147518	0					
ANR	6148330	ArgumentList	mem		6147518	1					
ANR	6148331	Argument	mem		6147518	0					
ANR	6148332	Identifier	mem		6147518	0					
ANR	6148333	Argument	( const obj_header_t * ) op -> value . pstruct		6147518	1					
ANR	6148334	CastExpression	( const obj_header_t * ) op -> value . pstruct		6147518	0					
ANR	6148335	CastTarget	const obj_header_t *		6147518	0					
ANR	6148336	MemberAccess	op -> value . pstruct		6147518	1					
ANR	6148337	PtrMemberAccess	op -> value		6147518	0					
ANR	6148338	Identifier	op		6147518	0					
ANR	6148339	Identifier	value		6147518	1					
ANR	6148340	Identifier	pstruct		6147518	1					
ANR	6148341	ExpressionStatement	size = strlen ( ( const char * ) data )	468:12:16927:16960	6147518	34	True				
ANR	6148342	AssignmentExpression	size = strlen ( ( const char * ) data )		6147518	0		=			
ANR	6148343	Identifier	size		6147518	0					
ANR	6148344	CallExpression	strlen ( ( const char * ) data )		6147518	1					
ANR	6148345	Callee	strlen		6147518	0					
ANR	6148346	Identifier	strlen		6147518	0					
ANR	6148347	ArgumentList	( const char * ) data		6147518	1					
ANR	6148348	Argument	( const char * ) data		6147518	0					
ANR	6148349	CastExpression	( const char * ) data		6147518	0					
ANR	6148350	CastTarget	const char *		6147518	0					
ANR	6148351	Identifier	data		6147518	1					
ANR	6148352	IfStatement	"if ( size > 4 && ! memcmp ( data + size - 4 , ""type"" , 4 ) )"		6147518	35					
ANR	6148353	Condition	"size > 4 && ! memcmp ( data + size - 4 , ""type"" , 4 )"	469:16:16978:17024	6147518	0	True				
ANR	6148354	AndExpression	"size > 4 && ! memcmp ( data + size - 4 , ""type"" , 4 )"		6147518	0		&&			
ANR	6148355	RelationalExpression	size > 4		6147518	0		>			
ANR	6148356	Identifier	size		6147518	0					
ANR	6148357	PrimaryExpression	4		6147518	1					
ANR	6148358	UnaryOperationExpression	"! memcmp ( data + size - 4 , ""type"" , 4 )"		6147518	1					
ANR	6148359	UnaryOperator	!		6147518	0					
ANR	6148360	CallExpression	"memcmp ( data + size - 4 , ""type"" , 4 )"		6147518	1					
ANR	6148361	Callee	memcmp		6147518	0					
ANR	6148362	Identifier	memcmp		6147518	0					
ANR	6148363	ArgumentList	data + size - 4		6147518	1					
ANR	6148364	Argument	data + size - 4		6147518	0					
ANR	6148365	AdditiveExpression	data + size - 4		6147518	0		+			
ANR	6148366	Identifier	data		6147518	0					
ANR	6148367	AdditiveExpression	size - 4		6147518	1		-			
ANR	6148368	Identifier	size		6147518	0					
ANR	6148369	PrimaryExpression	4		6147518	1					
ANR	6148370	Argument	"""type"""		6147518	1					
ANR	6148371	PrimaryExpression	"""type"""		6147518	0					
ANR	6148372	Argument	4		6147518	2					
ANR	6148373	PrimaryExpression	4		6147518	0					
ANR	6148374	ExpressionStatement	size -= 4	470:16:17043:17052	6147518	1	True				
ANR	6148375	AssignmentExpression	size -= 4		6147518	0		-=			
ANR	6148376	Identifier	size		6147518	0					
ANR	6148377	PrimaryExpression	4		6147518	1					
ANR	6148378	IfStatement	if ( size > sizeof ( buf ) - 3 )		6147518	36					
ANR	6148379	Condition	size > sizeof ( buf ) - 3	471:16:17070:17091	6147518	0	True				
ANR	6148380	RelationalExpression	size > sizeof ( buf ) - 3		6147518	0		>			
ANR	6148381	Identifier	size		6147518	0					
ANR	6148382	AdditiveExpression	sizeof ( buf ) - 3		6147518	1		-			
ANR	6148383	SizeofExpression	sizeof ( buf )		6147518	0					
ANR	6148384	Sizeof	sizeof		6147518	0					
ANR	6148385	SizeofOperand	buf		6147518	1					
ANR	6148386	PrimaryExpression	3		6147518	1					
ANR	6148387	ExpressionStatement	return_error ( gs_error_rangecheck )	472:16:17110:17143	6147518	1	True				
ANR	6148388	CallExpression	return_error ( gs_error_rangecheck )		6147518	0					
ANR	6148389	Callee	return_error		6147518	0					
ANR	6148390	Identifier	return_error		6147518	0					
ANR	6148391	ArgumentList	gs_error_rangecheck		6147518	1					
ANR	6148392	Argument	gs_error_rangecheck		6147518	0					
ANR	6148393	Identifier	gs_error_rangecheck		6147518	0					
ANR	6148394	ExpressionStatement	buf [ 0 ] = '-'	473:12:17157:17169	6147518	37	True				
ANR	6148395	AssignmentExpression	buf [ 0 ] = '-'		6147518	0		=			
ANR	6148396	ArrayIndexing	buf [ 0 ]		6147518	0					
ANR	6148397	Identifier	buf		6147518	0					
ANR	6148398	PrimaryExpression	0		6147518	1					
ANR	6148399	PrimaryExpression	'-'		6147518	1					
ANR	6148400	ExpressionStatement	"memcpy ( buf + 1 , data , size )"	474:12:17183:17210	6147518	38	True				
ANR	6148401	CallExpression	"memcpy ( buf + 1 , data , size )"		6147518	0					
ANR	6148402	Callee	memcpy		6147518	0					
ANR	6148403	Identifier	memcpy		6147518	0					
ANR	6148404	ArgumentList	buf + 1		6147518	1					
ANR	6148405	Argument	buf + 1		6147518	0					
ANR	6148406	AdditiveExpression	buf + 1		6147518	0		+			
ANR	6148407	Identifier	buf		6147518	0					
ANR	6148408	PrimaryExpression	1		6147518	1					
ANR	6148409	Argument	data		6147518	1					
ANR	6148410	Identifier	data		6147518	0					
ANR	6148411	Argument	size		6147518	2					
ANR	6148412	Identifier	size		6147518	0					
ANR	6148413	ExpressionStatement	buf [ size + 1 ] = '-'	475:12:17224:17243	6147518	39	True				
ANR	6148414	AssignmentExpression	buf [ size + 1 ] = '-'		6147518	0		=			
ANR	6148415	ArrayIndexing	buf [ size + 1 ]		6147518	0					
ANR	6148416	Identifier	buf		6147518	0					
ANR	6148417	AdditiveExpression	size + 1		6147518	1		+			
ANR	6148418	Identifier	size		6147518	0					
ANR	6148419	PrimaryExpression	1		6147518	1					
ANR	6148420	PrimaryExpression	'-'		6147518	1					
ANR	6148421	ExpressionStatement	size += 2	476:12:17257:17266	6147518	40	True				
ANR	6148422	AssignmentExpression	size += 2		6147518	0		+=			
ANR	6148423	Identifier	size		6147518	0					
ANR	6148424	PrimaryExpression	2		6147518	1					
ANR	6148425	ExpressionStatement	data = ( const byte * ) buf	477:12:17280:17304	6147518	41	True				
ANR	6148426	AssignmentExpression	data = ( const byte * ) buf		6147518	0		=			
ANR	6148427	Identifier	data		6147518	0					
ANR	6148428	CastExpression	( const byte * ) buf		6147518	1					
ANR	6148429	CastTarget	const byte *		6147518	0					
ANR	6148430	Identifier	buf		6147518	1					
ANR	6148431	GotoStatement	goto nl ;	478:12:17318:17325	6147518	42	True				
ANR	6148432	Identifier	nl		6147518	0					
ANR	6148433	Label	default :	479:8:17335:17342	6147518	43	True				
ANR	6148434	Identifier	default		6147518	0					
ANR	6148435	Label	other :	480:0:17344:17349	6147518	44	True				
ANR	6148436	Identifier	other		6147518	0					
ANR	6148437	CompoundStatement		173:16:6411:6434	6147518	45					
ANR	6148438	IdentifierDeclStatement	int rtype = r_btype ( op ) ;	482:16:17381:17404	6147518	0	True				
ANR	6148439	IdentifierDecl	rtype = r_btype ( op )		6147518	0					
ANR	6148440	IdentifierDeclType	int		6147518	0					
ANR	6148441	Identifier	rtype		6147518	1					
ANR	6148442	AssignmentExpression	rtype = r_btype ( op )		6147518	2		=			
ANR	6148443	Identifier	rtype		6147518	0					
ANR	6148444	CallExpression	r_btype ( op )		6147518	1					
ANR	6148445	Callee	r_btype		6147518	0					
ANR	6148446	Identifier	r_btype		6147518	0					
ANR	6148447	ArgumentList	op		6147518	1					
ANR	6148448	Argument	op		6147518	0					
ANR	6148449	Identifier	op		6147518	0					
ANR	6148450	IfStatement	if ( rtype >= countof ( type_strings ) )		6147518	1					
ANR	6148451	Condition	rtype >= countof ( type_strings )	484:20:17427:17456	6147518	0	True				
ANR	6148452	RelationalExpression	rtype >= countof ( type_strings )		6147518	0		>=			
ANR	6148453	Identifier	rtype		6147518	0					
ANR	6148454	CallExpression	countof ( type_strings )		6147518	1					
ANR	6148455	Callee	countof		6147518	0					
ANR	6148456	Identifier	countof		6147518	0					
ANR	6148457	ArgumentList	type_strings		6147518	1					
ANR	6148458	Argument	type_strings		6147518	0					
ANR	6148459	Identifier	type_strings		6147518	0					
ANR	6148460	ExpressionStatement	return_error ( gs_error_rangecheck )	485:20:17479:17512	6147518	1	True				
ANR	6148461	CallExpression	return_error ( gs_error_rangecheck )		6147518	0					
ANR	6148462	Callee	return_error		6147518	0					
ANR	6148463	Identifier	return_error		6147518	0					
ANR	6148464	ArgumentList	gs_error_rangecheck		6147518	1					
ANR	6148465	Argument	gs_error_rangecheck		6147518	0					
ANR	6148466	Identifier	gs_error_rangecheck		6147518	0					
ANR	6148467	ExpressionStatement	data = ( const byte * ) type_strings [ rtype ]	486:16:17530:17570	6147518	2	True				
ANR	6148468	AssignmentExpression	data = ( const byte * ) type_strings [ rtype ]		6147518	0		=			
ANR	6148469	Identifier	data		6147518	0					
ANR	6148470	CastExpression	( const byte * ) type_strings [ rtype ]		6147518	1					
ANR	6148471	CastTarget	const byte *		6147518	0					
ANR	6148472	ArrayIndexing	type_strings [ rtype ]		6147518	1					
ANR	6148473	Identifier	type_strings		6147518	0					
ANR	6148474	Identifier	rtype		6147518	1					
ANR	6148475	IfStatement	if ( data == 0 )		6147518	3					
ANR	6148476	Condition	data == 0	487:20:17592:17600	6147518	0	True				
ANR	6148477	EqualityExpression	data == 0		6147518	0		==			
ANR	6148478	Identifier	data		6147518	0					
ANR	6148479	PrimaryExpression	0		6147518	1					
ANR	6148480	ExpressionStatement	return_error ( gs_error_rangecheck )	488:20:17623:17656	6147518	1	True				
ANR	6148481	CallExpression	return_error ( gs_error_rangecheck )		6147518	0					
ANR	6148482	Callee	return_error		6147518	0					
ANR	6148483	Identifier	return_error		6147518	0					
ANR	6148484	ArgumentList	gs_error_rangecheck		6147518	1					
ANR	6148485	Argument	gs_error_rangecheck		6147518	0					
ANR	6148486	Identifier	gs_error_rangecheck		6147518	0					
ANR	6148487	GotoStatement	goto rs ;	490:12:17684:17691	6147518	46	True				
ANR	6148488	Identifier	rs		6147518	0					
ANR	6148489	SwitchStatement	switch ( r_btype ( op ) )		6147518	6					
ANR	6148490	Condition	r_btype ( op )	494:12:17746:17756	6147518	0	True				
ANR	6148491	CallExpression	r_btype ( op )		6147518	0					
ANR	6148492	Callee	r_btype		6147518	0					
ANR	6148493	Identifier	r_btype		6147518	0					
ANR	6148494	ArgumentList	op		6147518	1					
ANR	6148495	Argument	op		6147518	0					
ANR	6148496	Identifier	op		6147518	0					
ANR	6148497	CompoundStatement		185:25:6789:6789	6147518	1					
ANR	6148498	Label	case t_boolean :	495:4:17765:17779	6147518	0	True				
ANR	6148499	Identifier	t_boolean		6147518	0					
ANR	6148500	ExpressionStatement	"data = ( const byte * ) ( op -> value . boolval ? ""true"" : ""false"" )"	496:8:17789:17848	6147518	1	True				
ANR	6148501	AssignmentExpression	"data = ( const byte * ) ( op -> value . boolval ? ""true"" : ""false"" )"		6147518	0		=			
ANR	6148502	Identifier	data		6147518	0					
ANR	6148503	CastExpression	"( const byte * ) ( op -> value . boolval ? ""true"" : ""false"" )"		6147518	1					
ANR	6148504	CastTarget	const byte *		6147518	0					
ANR	6148505	ConditionalExpression	"op -> value . boolval ? ""true"" : ""false"""		6147518	1					
ANR	6148506	Condition	op -> value . boolval		6147518	0					
ANR	6148507	MemberAccess	op -> value . boolval		6147518	0					
ANR	6148508	PtrMemberAccess	op -> value		6147518	0					
ANR	6148509	Identifier	op		6147518	0					
ANR	6148510	Identifier	value		6147518	1					
ANR	6148511	Identifier	boolval		6147518	1					
ANR	6148512	PrimaryExpression	"""true"""		6147518	1					
ANR	6148513	PrimaryExpression	"""false"""		6147518	2					
ANR	6148514	BreakStatement	break ;	497:8:17858:17863	6147518	2	True				
ANR	6148515	Label	case t_integer :	498:4:17869:17883	6147518	3	True				
ANR	6148516	Identifier	t_integer		6147518	0					
ANR	6148517	Statement	gs_sprintf	499:8:17893:17902	6147518	4	True				
ANR	6148518	Statement	(	499:18:17903:17903	6147518	5	True				
ANR	6148519	Statement	buf	499:19:17904:17906	6147518	6	True				
ANR	6148520	Statement	","	499:22:17907:17907	6147518	7	True				
ANR	6148521	Statement	"""%"""	499:24:17909:17911	6147518	8	True				
ANR	6148522	Statement	PRIpsint	499:27:17912:17919	6147518	9	True				
ANR	6148523	Statement	","	499:35:17920:17920	6147518	10	True				
ANR	6148524	Statement	op	499:37:17922:17923	6147518	11	True				
ANR	6148525	Statement	->	499:39:17924:17925	6147518	12	True				
ANR	6148526	Statement	value	499:41:17926:17930	6147518	13	True				
ANR	6148527	Statement	.	499:46:17931:17931	6147518	14	True				
ANR	6148528	Statement	intval	499:47:17932:17937	6147518	15	True				
ANR	6148529	Statement	)	499:53:17938:17938	6147518	16	True				
ANR	6148530	ExpressionStatement		499:54:17939:17939	6147518	17	True				
ANR	6148531	BreakStatement	break ;	500:8:17949:17954	6147518	18	True				
ANR	6148532	Label	case t_string :	501:4:17960:17973	6147518	19	True				
ANR	6148533	Identifier	t_string		6147518	0					
ANR	6148534	ExpressionStatement	check_read ( * op )	502:8:17983:17998	6147518	20	True				
ANR	6148535	CallExpression	check_read ( * op )		6147518	0					
ANR	6148536	Callee	check_read		6147518	0					
ANR	6148537	Identifier	check_read		6147518	0					
ANR	6148538	ArgumentList	* op		6147518	1					
ANR	6148539	Argument	* op		6147518	0					
ANR	6148540	UnaryOperationExpression	* op		6147518	0					
ANR	6148541	UnaryOperator	*		6147518	0					
ANR	6148542	Identifier	op		6147518	1					
ANR	6148543	Label	case t_name :	504:4:18032:18043	6147518	21	True				
ANR	6148544	Identifier	t_name		6147518	0					
ANR	6148545	ExpressionStatement	"code = obj_string_data ( mem , op , & data , & size )"	505:8:18053:18098	6147518	22	True				
ANR	6148546	AssignmentExpression	"code = obj_string_data ( mem , op , & data , & size )"		6147518	0		=			
ANR	6148547	Identifier	code		6147518	0					
ANR	6148548	CallExpression	"obj_string_data ( mem , op , & data , & size )"		6147518	1					
ANR	6148549	Callee	obj_string_data		6147518	0					
ANR	6148550	Identifier	obj_string_data		6147518	0					
ANR	6148551	ArgumentList	mem		6147518	1					
ANR	6148552	Argument	mem		6147518	0					
ANR	6148553	Identifier	mem		6147518	0					
ANR	6148554	Argument	op		6147518	1					
ANR	6148555	Identifier	op		6147518	0					
ANR	6148556	Argument	& data		6147518	2					
ANR	6148557	UnaryOperationExpression	& data		6147518	0					
ANR	6148558	UnaryOperator	&		6147518	0					
ANR	6148559	Identifier	data		6147518	1					
ANR	6148560	Argument	& size		6147518	3					
ANR	6148561	UnaryOperationExpression	& size		6147518	0					
ANR	6148562	UnaryOperator	&		6147518	0					
ANR	6148563	Identifier	size		6147518	1					
ANR	6148564	IfStatement	if ( code < 0 )		6147518	23					
ANR	6148565	Condition	code < 0	506:12:18112:18119	6147518	0	True				
ANR	6148566	RelationalExpression	code < 0		6147518	0		<			
ANR	6148567	Identifier	code		6147518	0					
ANR	6148568	PrimaryExpression	0		6147518	1					
ANR	6148569	ReturnStatement	return code ;	507:12:18134:18145	6147518	1	True				
ANR	6148570	Identifier	code		6147518	0					
ANR	6148571	GotoStatement	goto nl ;	508:8:18155:18162	6147518	24	True				
ANR	6148572	Identifier	nl		6147518	0					
ANR	6148573	Label	case t_oparray :	509:4:18168:18182	6147518	25	True				
ANR	6148574	Identifier	t_oparray		6147518	0					
ANR	6148575	CompoundStatement		202:8:7259:7311	6147518	26					
ANR	6148576	IdentifierDeclStatement	uint index = op_index ( op ) ;	510:8:18194:18219	6147518	0	True				
ANR	6148577	IdentifierDecl	index = op_index ( op )		6147518	0					
ANR	6148578	IdentifierDeclType	uint		6147518	0					
ANR	6148579	Identifier	index		6147518	1					
ANR	6148580	AssignmentExpression	index = op_index ( op )		6147518	2		=			
ANR	6148581	Identifier	index		6147518	0					
ANR	6148582	CallExpression	op_index ( op )		6147518	1					
ANR	6148583	Callee	op_index		6147518	0					
ANR	6148584	Identifier	op_index		6147518	0					
ANR	6148585	ArgumentList	op		6147518	1					
ANR	6148586	Argument	op		6147518	0					
ANR	6148587	Identifier	op		6147518	0					
ANR	6148588	IdentifierDeclStatement	"const op_array_table * opt = get_op_array ( mem , index ) ;"	511:8:18229:18281	6147518	1	True				
ANR	6148589	IdentifierDecl	"* opt = get_op_array ( mem , index )"		6147518	0					
ANR	6148590	IdentifierDeclType	const op_array_table *		6147518	0					
ANR	6148591	Identifier	opt		6147518	1					
ANR	6148592	AssignmentExpression	"* opt = get_op_array ( mem , index )"		6147518	2		=			
ANR	6148593	Identifier	opt		6147518	0					
ANR	6148594	CallExpression	"get_op_array ( mem , index )"		6147518	1					
ANR	6148595	Callee	get_op_array		6147518	0					
ANR	6148596	Identifier	get_op_array		6147518	0					
ANR	6148597	ArgumentList	mem		6147518	1					
ANR	6148598	Argument	mem		6147518	0					
ANR	6148599	Identifier	mem		6147518	0					
ANR	6148600	Argument	index		6147518	1					
ANR	6148601	Identifier	index		6147518	0					
ANR	6148602	ExpressionStatement	"name_index_ref ( mem , opt -> nx_table [ index - opt -> base_index ] , & nref )"	513:8:18292:18358	6147518	2	True				
ANR	6148603	CallExpression	"name_index_ref ( mem , opt -> nx_table [ index - opt -> base_index ] , & nref )"		6147518	0					
ANR	6148604	Callee	name_index_ref		6147518	0					
ANR	6148605	Identifier	name_index_ref		6147518	0					
ANR	6148606	ArgumentList	mem		6147518	1					
ANR	6148607	Argument	mem		6147518	0					
ANR	6148608	Identifier	mem		6147518	0					
ANR	6148609	Argument	opt -> nx_table [ index - opt -> base_index ]		6147518	1					
ANR	6148610	ArrayIndexing	opt -> nx_table [ index - opt -> base_index ]		6147518	0					
ANR	6148611	PtrMemberAccess	opt -> nx_table		6147518	0					
ANR	6148612	Identifier	opt		6147518	0					
ANR	6148613	Identifier	nx_table		6147518	1					
ANR	6148614	AdditiveExpression	index - opt -> base_index		6147518	1		-			
ANR	6148615	Identifier	index		6147518	0					
ANR	6148616	PtrMemberAccess	opt -> base_index		6147518	1					
ANR	6148617	Identifier	opt		6147518	0					
ANR	6148618	Identifier	base_index		6147518	1					
ANR	6148619	Argument	& nref		6147518	2					
ANR	6148620	UnaryOperationExpression	& nref		6147518	0					
ANR	6148621	UnaryOperator	&		6147518	0					
ANR	6148622	Identifier	nref		6147518	1					
ANR	6148623	ExpressionStatement	"name_string_ref ( mem , & nref , & nref )"	514:8:18368:18402	6147518	3	True				
ANR	6148624	CallExpression	"name_string_ref ( mem , & nref , & nref )"		6147518	0					
ANR	6148625	Callee	name_string_ref		6147518	0					
ANR	6148626	Identifier	name_string_ref		6147518	0					
ANR	6148627	ArgumentList	mem		6147518	1					
ANR	6148628	Argument	mem		6147518	0					
ANR	6148629	Identifier	mem		6147518	0					
ANR	6148630	Argument	& nref		6147518	1					
ANR	6148631	UnaryOperationExpression	& nref		6147518	0					
ANR	6148632	UnaryOperator	&		6147518	0					
ANR	6148633	Identifier	nref		6147518	1					
ANR	6148634	Argument	& nref		6147518	2					
ANR	6148635	UnaryOperationExpression	& nref		6147518	0					
ANR	6148636	UnaryOperator	&		6147518	0					
ANR	6148637	Identifier	nref		6147518	1					
ANR	6148638	ExpressionStatement	"code = obj_string_data ( mem , & nref , & data , & size )"	515:8:18412:18460	6147518	4	True				
ANR	6148639	AssignmentExpression	"code = obj_string_data ( mem , & nref , & data , & size )"		6147518	0		=			
ANR	6148640	Identifier	code		6147518	0					
ANR	6148641	CallExpression	"obj_string_data ( mem , & nref , & data , & size )"		6147518	1					
ANR	6148642	Callee	obj_string_data		6147518	0					
ANR	6148643	Identifier	obj_string_data		6147518	0					
ANR	6148644	ArgumentList	mem		6147518	1					
ANR	6148645	Argument	mem		6147518	0					
ANR	6148646	Identifier	mem		6147518	0					
ANR	6148647	Argument	& nref		6147518	1					
ANR	6148648	UnaryOperationExpression	& nref		6147518	0					
ANR	6148649	UnaryOperator	&		6147518	0					
ANR	6148650	Identifier	nref		6147518	1					
ANR	6148651	Argument	& data		6147518	2					
ANR	6148652	UnaryOperationExpression	& data		6147518	0					
ANR	6148653	UnaryOperator	&		6147518	0					
ANR	6148654	Identifier	data		6147518	1					
ANR	6148655	Argument	& size		6147518	3					
ANR	6148656	UnaryOperationExpression	& size		6147518	0					
ANR	6148657	UnaryOperator	&		6147518	0					
ANR	6148658	Identifier	size		6147518	1					
ANR	6148659	IfStatement	if ( code < 0 )		6147518	5					
ANR	6148660	Condition	code < 0	516:12:18474:18481	6147518	0	True				
ANR	6148661	RelationalExpression	code < 0		6147518	0		<			
ANR	6148662	Identifier	code		6147518	0					
ANR	6148663	PrimaryExpression	0		6147518	1					
ANR	6148664	ReturnStatement	return code ;	517:12:18496:18507	6147518	1	True				
ANR	6148665	Identifier	code		6147518	0					
ANR	6148666	GotoStatement	goto nl ;	518:8:18517:18524	6147518	6	True				
ANR	6148667	Identifier	nl		6147518	0					
ANR	6148668	Label	case t_operator :	520:4:18536:18551	6147518	27	True				
ANR	6148669	Identifier	t_operator		6147518	0					
ANR	6148670	CompoundStatement		213:8:7655:7680	6147518	28					
ANR	6148671	IdentifierDeclStatement	uint index = op_index ( op ) ;	522:8:18625:18650	6147518	0	True				
ANR	6148672	IdentifierDecl	index = op_index ( op )		6147518	0					
ANR	6148673	IdentifierDeclType	uint		6147518	0					
ANR	6148674	Identifier	index		6147518	1					
ANR	6148675	AssignmentExpression	index = op_index ( op )		6147518	2		=			
ANR	6148676	Identifier	index		6147518	0					
ANR	6148677	CallExpression	op_index ( op )		6147518	1					
ANR	6148678	Callee	op_index		6147518	0					
ANR	6148679	Identifier	op_index		6147518	0					
ANR	6148680	ArgumentList	op		6147518	1					
ANR	6148681	Argument	op		6147518	0					
ANR	6148682	Identifier	op		6147518	0					
ANR	6148683	IfStatement	if ( index > 0 && index < op_def_count )		6147518	1					
ANR	6148684	Condition	index > 0 && index < op_def_count	529:12:18850:18882	6147518	0	True				
ANR	6148685	AndExpression	index > 0 && index < op_def_count		6147518	0		&&			
ANR	6148686	RelationalExpression	index > 0		6147518	0		>			
ANR	6148687	Identifier	index		6147518	0					
ANR	6148688	PrimaryExpression	0		6147518	1					
ANR	6148689	RelationalExpression	index < op_def_count		6147518	1		<			
ANR	6148690	Identifier	index		6147518	0					
ANR	6148691	Identifier	op_def_count		6147518	1					
ANR	6148692	CompoundStatement		220:47:7915:7915	6147518	1					
ANR	6148693	ExpressionStatement	data = ( const byte * ) ( op_index_def ( index ) -> oname + 1 )	530:12:18899:18952	6147518	0	True				
ANR	6148694	AssignmentExpression	data = ( const byte * ) ( op_index_def ( index ) -> oname + 1 )		6147518	0		=			
ANR	6148695	Identifier	data		6147518	0					
ANR	6148696	CastExpression	( const byte * ) ( op_index_def ( index ) -> oname + 1 )		6147518	1					
ANR	6148697	CastTarget	const byte *		6147518	0					
ANR	6148698	AdditiveExpression	op_index_def ( index ) -> oname + 1		6147518	1		+			
ANR	6148699	PtrMemberAccess	op_index_def ( index ) -> oname		6147518	0					
ANR	6148700	CallExpression	op_index_def ( index )		6147518	0					
ANR	6148701	Callee	op_index_def		6147518	0					
ANR	6148702	Identifier	op_index_def		6147518	0					
ANR	6148703	ArgumentList	index		6147518	1					
ANR	6148704	Argument	index		6147518	0					
ANR	6148705	Identifier	index		6147518	0					
ANR	6148706	Identifier	oname		6147518	1					
ANR	6148707	PrimaryExpression	1		6147518	1					
ANR	6148708	BreakStatement	break ;	531:12:18966:18971	6147518	1	True				
ANR	6148709	ExpressionStatement	"gs_sprintf ( buf , ""@0x%lx"" , ( ulong ) op -> value . opproc )"	534:8:19033:19084	6147518	2	True				
ANR	6148710	CallExpression	"gs_sprintf ( buf , ""@0x%lx"" , ( ulong ) op -> value . opproc )"		6147518	0					
ANR	6148711	Callee	gs_sprintf		6147518	0					
ANR	6148712	Identifier	gs_sprintf		6147518	0					
ANR	6148713	ArgumentList	buf		6147518	1					
ANR	6148714	Argument	buf		6147518	0					
ANR	6148715	Identifier	buf		6147518	0					
ANR	6148716	Argument	"""@0x%lx"""		6147518	1					
ANR	6148717	PrimaryExpression	"""@0x%lx"""		6147518	0					
ANR	6148718	Argument	( ulong ) op -> value . opproc		6147518	2					
ANR	6148719	CastExpression	( ulong ) op -> value . opproc		6147518	0					
ANR	6148720	CastTarget	ulong		6147518	0					
ANR	6148721	MemberAccess	op -> value . opproc		6147518	1					
ANR	6148722	PtrMemberAccess	op -> value		6147518	0					
ANR	6148723	Identifier	op		6147518	0					
ANR	6148724	Identifier	value		6147518	1					
ANR	6148725	Identifier	opproc		6147518	1					
ANR	6148726	BreakStatement	break ;	535:8:19094:19099	6147518	3	True				
ANR	6148727	Label	case t_real :	537:4:19111:19122	6147518	29	True				
ANR	6148728	Identifier	t_real		6147518	0					
ANR	6148729	IfStatement	if ( op -> value . realval == ( float ) 0.0001 )		6147518	30					
ANR	6148730	Condition	op -> value . realval == ( float ) 0.0001	544:12:19436:19469	6147518	0	True				
ANR	6148731	EqualityExpression	op -> value . realval == ( float ) 0.0001		6147518	0		==			
ANR	6148732	MemberAccess	op -> value . realval		6147518	0					
ANR	6148733	PtrMemberAccess	op -> value		6147518	0					
ANR	6148734	Identifier	op		6147518	0					
ANR	6148735	Identifier	value		6147518	1					
ANR	6148736	Identifier	realval		6147518	1					
ANR	6148737	CastExpression	( float ) 0.0001		6147518	1					
ANR	6148738	CastTarget	float		6147518	0					
ANR	6148739	PrimaryExpression	0.0001		6147518	1					
ANR	6148740	CompoundStatement		235:48:8502:8502	6147518	1					
ANR	6148741	ExpressionStatement	"strcpy ( buf , ""0.0001"" )"	545:12:19486:19507	6147518	0	True				
ANR	6148742	CallExpression	"strcpy ( buf , ""0.0001"" )"		6147518	0					
ANR	6148743	Callee	strcpy		6147518	0					
ANR	6148744	Identifier	strcpy		6147518	0					
ANR	6148745	ArgumentList	buf		6147518	1					
ANR	6148746	Argument	buf		6147518	0					
ANR	6148747	Identifier	buf		6147518	0					
ANR	6148748	Argument	"""0.0001"""		6147518	1					
ANR	6148749	PrimaryExpression	"""0.0001"""		6147518	0					
ANR	6148750	ElseStatement	else		6147518	0					
ANR	6148751	CompoundStatement		237:15:8554:8554	6147518	0					
ANR	6148752	ExpressionStatement	"gs_sprintf ( buf , ""%g"" , op -> value . realval )"	547:12:19538:19578	6147518	0	True				
ANR	6148753	CallExpression	"gs_sprintf ( buf , ""%g"" , op -> value . realval )"		6147518	0					
ANR	6148754	Callee	gs_sprintf		6147518	0					
ANR	6148755	Identifier	gs_sprintf		6147518	0					
ANR	6148756	ArgumentList	buf		6147518	1					
ANR	6148757	Argument	buf		6147518	0					
ANR	6148758	Identifier	buf		6147518	0					
ANR	6148759	Argument	"""%g"""		6147518	1					
ANR	6148760	PrimaryExpression	"""%g"""		6147518	0					
ANR	6148761	Argument	op -> value . realval		6147518	2					
ANR	6148762	MemberAccess	op -> value . realval		6147518	0					
ANR	6148763	PtrMemberAccess	op -> value		6147518	0					
ANR	6148764	Identifier	op		6147518	0					
ANR	6148765	Identifier	value		6147518	1					
ANR	6148766	Identifier	realval		6147518	1					
ANR	6148767	ExpressionStatement	ensure_dot ( buf )	549:8:19598:19613	6147518	31	True				
ANR	6148768	CallExpression	ensure_dot ( buf )		6147518	0					
ANR	6148769	Callee	ensure_dot		6147518	0					
ANR	6148770	Identifier	ensure_dot		6147518	0					
ANR	6148771	ArgumentList	buf		6147518	1					
ANR	6148772	Argument	buf		6147518	0					
ANR	6148773	Identifier	buf		6147518	0					
ANR	6148774	BreakStatement	break ;	550:8:19623:19628	6147518	32	True				
ANR	6148775	Label	default :	551:4:19634:19641	6147518	33	True				
ANR	6148776	Identifier	default		6147518	0					
ANR	6148777	ExpressionStatement	"data = ( const byte * ) ""--nostringval--"""	552:8:19651:19689	6147518	34	True				
ANR	6148778	AssignmentExpression	"data = ( const byte * ) ""--nostringval--"""		6147518	0		=			
ANR	6148779	Identifier	data		6147518	0					
ANR	6148780	CastExpression	"( const byte * ) ""--nostringval--"""		6147518	1					
ANR	6148781	CastTarget	const byte *		6147518	0					
ANR	6148782	PrimaryExpression	"""--nostringval--"""		6147518	1					
ANR	6148783	Label	rs :	554:0:19697:19699	6147518	7	True				
ANR	6148784	Identifier	rs		6147518	0					
ANR	6148785	ExpressionStatement	size = strlen ( ( const char * ) data )	554:4:19701:19734	6147518	8	True				
ANR	6148786	AssignmentExpression	size = strlen ( ( const char * ) data )		6147518	0		=			
ANR	6148787	Identifier	size		6147518	0					
ANR	6148788	CallExpression	strlen ( ( const char * ) data )		6147518	1					
ANR	6148789	Callee	strlen		6147518	0					
ANR	6148790	Identifier	strlen		6147518	0					
ANR	6148791	ArgumentList	( const char * ) data		6147518	1					
ANR	6148792	Argument	( const char * ) data		6147518	0					
ANR	6148793	CastExpression	( const char * ) data		6147518	0					
ANR	6148794	CastTarget	const char *		6147518	0					
ANR	6148795	Identifier	data		6147518	1					
ANR	6148796	Label	nl :	555:0:19736:19738	6147518	9	True				
ANR	6148797	Identifier	nl		6147518	0					
ANR	6148798	IfStatement	if ( size < start_pos )		6147518	10					
ANR	6148799	Condition	size < start_pos	555:8:19744:19759	6147518	0	True				
ANR	6148800	RelationalExpression	size < start_pos		6147518	0		<			
ANR	6148801	Identifier	size		6147518	0					
ANR	6148802	Identifier	start_pos		6147518	1					
ANR	6148803	ExpressionStatement	return_error ( gs_error_rangecheck )	556:8:19770:19803	6147518	1	True				
ANR	6148804	CallExpression	return_error ( gs_error_rangecheck )		6147518	0					
ANR	6148805	Callee	return_error		6147518	0					
ANR	6148806	Identifier	return_error		6147518	0					
ANR	6148807	ArgumentList	gs_error_rangecheck		6147518	1					
ANR	6148808	Argument	gs_error_rangecheck		6147518	0					
ANR	6148809	Identifier	gs_error_rangecheck		6147518	0					
ANR	6148810	IfStatement	if ( ! restart && size > len )		6147518	11					
ANR	6148811	Condition	! restart && size > len	557:8:19813:19834	6147518	0	True				
ANR	6148812	AndExpression	! restart && size > len		6147518	0		&&			
ANR	6148813	UnaryOperationExpression	! restart		6147518	0					
ANR	6148814	UnaryOperator	!		6147518	0					
ANR	6148815	Identifier	restart		6147518	1					
ANR	6148816	RelationalExpression	size > len		6147518	1		>			
ANR	6148817	Identifier	size		6147518	0					
ANR	6148818	Identifier	len		6147518	1					
ANR	6148819	ExpressionStatement	return_error ( gs_error_rangecheck )	558:8:19845:19878	6147518	1	True				
ANR	6148820	CallExpression	return_error ( gs_error_rangecheck )		6147518	0					
ANR	6148821	Callee	return_error		6147518	0					
ANR	6148822	Identifier	return_error		6147518	0					
ANR	6148823	ArgumentList	gs_error_rangecheck		6147518	1					
ANR	6148824	Argument	gs_error_rangecheck		6147518	0					
ANR	6148825	Identifier	gs_error_rangecheck		6147518	0					
ANR	6148826	ExpressionStatement	size -= start_pos	559:4:19884:19901	6147518	12	True				
ANR	6148827	AssignmentExpression	size -= start_pos		6147518	0		-=			
ANR	6148828	Identifier	size		6147518	0					
ANR	6148829	Identifier	start_pos		6147518	1					
ANR	6148830	ExpressionStatement	"* prlen = min ( size , len )"	560:4:19907:19930	6147518	13	True				
ANR	6148831	AssignmentExpression	"* prlen = min ( size , len )"		6147518	0		=			
ANR	6148832	UnaryOperationExpression	* prlen		6147518	0					
ANR	6148833	UnaryOperator	*		6147518	0					
ANR	6148834	Identifier	prlen		6147518	1					
ANR	6148835	CallExpression	"min ( size , len )"		6147518	1					
ANR	6148836	Callee	min		6147518	0					
ANR	6148837	Identifier	min		6147518	0					
ANR	6148838	ArgumentList	size		6147518	1					
ANR	6148839	Argument	size		6147518	0					
ANR	6148840	Identifier	size		6147518	0					
ANR	6148841	Argument	len		6147518	1					
ANR	6148842	Identifier	len		6147518	0					
ANR	6148843	ExpressionStatement	"memmove ( str , data + start_pos , * prlen )"	561:4:19936:19974	6147518	14	True				
ANR	6148844	CallExpression	"memmove ( str , data + start_pos , * prlen )"		6147518	0					
ANR	6148845	Callee	memmove		6147518	0					
ANR	6148846	Identifier	memmove		6147518	0					
ANR	6148847	ArgumentList	str		6147518	1					
ANR	6148848	Argument	str		6147518	0					
ANR	6148849	Identifier	str		6147518	0					
ANR	6148850	Argument	data + start_pos		6147518	1					
ANR	6148851	AdditiveExpression	data + start_pos		6147518	0		+			
ANR	6148852	Identifier	data		6147518	0					
ANR	6148853	Identifier	start_pos		6147518	1					
ANR	6148854	Argument	* prlen		6147518	2					
ANR	6148855	UnaryOperationExpression	* prlen		6147518	0					
ANR	6148856	UnaryOperator	*		6147518	0					
ANR	6148857	Identifier	prlen		6147518	1					
ANR	6148858	ReturnStatement	return ( size > len ) ;	562:4:19980:19999	6147518	15	True				
ANR	6148859	RelationalExpression	size > len		6147518	0		>			
ANR	6148860	Identifier	size		6147518	0					
ANR	6148861	Identifier	len		6147518	1					
ANR	6148862	ReturnType	int		6147518	1					
ANR	6148863	Identifier	obj_cvp		6147518	2					
ANR	6148864	ParameterList	"const ref * op , byte * str , uint len , uint * prlen , int full_print , uint start_pos , const gs_memory_t * mem , bool restart"		6147518	3					
ANR	6148865	Parameter	const ref * op	308:8:10839:10852	6147518	0	True				
ANR	6148866	ParameterType	const ref *		6147518	0					
ANR	6148867	Identifier	op		6147518	1					
ANR	6148868	Parameter	byte * str	308:24:10855:10864	6147518	1	True				
ANR	6148869	ParameterType	byte *		6147518	0					
ANR	6148870	Identifier	str		6147518	1					
ANR	6148871	Parameter	uint len	308:36:10867:10874	6147518	2	True				
ANR	6148872	ParameterType	uint		6147518	0					
ANR	6148873	Identifier	len		6147518	1					
ANR	6148874	Parameter	uint * prlen	308:46:10877:10888	6147518	3	True				
ANR	6148875	ParameterType	uint *		6147518	0					
ANR	6148876	Identifier	prlen		6147518	1					
ANR	6148877	Parameter	int full_print	309:8:10899:10912	6147518	4	True				
ANR	6148878	ParameterType	int		6147518	0					
ANR	6148879	Identifier	full_print		6147518	1					
ANR	6148880	Parameter	uint start_pos	309:24:10915:10928	6147518	5	True				
ANR	6148881	ParameterType	uint		6147518	0					
ANR	6148882	Identifier	start_pos		6147518	1					
ANR	6148883	Parameter	const gs_memory_t * mem	309:40:10931:10952	6147518	6	True				
ANR	6148884	ParameterType	const gs_memory_t *		6147518	0					
ANR	6148885	Identifier	mem		6147518	1					
ANR	6148886	Parameter	bool restart	309:64:10955:10966	6147518	7	True				
ANR	6148887	ParameterType	bool		6147518	0					
ANR	6148888	Identifier	restart		6147518	1					
ANR	6148889	CFGEntryNode	ENTRY		6147518		True				
ANR	6148890	CFGExitNode	EXIT		6147518		True				
ANR	6148891	Symbol	* w		6147518						
ANR	6148892	Symbol	* opt -> base_index		6147518						
ANR	6148893	Symbol	gs_object_type		6147518						
ANR	6148894	Symbol	op_index_def		6147518						
ANR	6148895	Symbol	data		6147518						
ANR	6148896	Symbol	* op		6147518						
ANR	6148897	Symbol	obj_cvp		6147518						
ANR	6148898	Symbol	gs_error_rangecheck		6147518						
ANR	6148899	Symbol	* w . ptr		6147518						
ANR	6148900	Symbol	CVP_MAX_STRING		6147518						
ANR	6148901	Symbol	op_index		6147518						
ANR	6148902	Symbol	* * opt		6147518						
ANR	6148903	Symbol	* index		6147518						
ANR	6148904	Symbol	op_index_def ( index ) -> oname		6147518						
ANR	6148905	Symbol	prlen		6147518						
ANR	6148906	Symbol	op -> value . boolval		6147518						
ANR	6148907	Symbol	* op_index_def		6147518						
ANR	6148908	Symbol	len1		6147518						
ANR	6148909	Symbol	op_def_count		6147518						
ANR	6148910	Symbol	strlen		6147518						
ANR	6148911	Symbol	* size		6147518						
ANR	6148912	Symbol	memcmp		6147518						
ANR	6148913	Symbol	len		6147518						
ANR	6148914	Symbol	truncate		6147518						
ANR	6148915	Symbol	scanned		6147518						
ANR	6148916	Symbol	opt -> nx_table		6147518						
ANR	6148917	Symbol	written		6147518						
ANR	6148918	Symbol	s_PSSE_template . process		6147518						
ANR	6148919	Symbol	* prlen		6147518						
ANR	6148920	Symbol	gs_error_Fatal		6147518						
ANR	6148921	Symbol	get_op_array		6147518						
ANR	6148922	Symbol	* buf		6147518						
ANR	6148923	Symbol	NULL		6147518						
ANR	6148924	Symbol	r . limit		6147518						
ANR	6148925	Symbol	index		6147518						
ANR	6148926	Symbol	w . ptr		6147518						
ANR	6148927	Symbol	& data		6147518						
ANR	6148928	Symbol	r_is_foreign		6147518						
ANR	6148929	Symbol	str		6147518						
ANR	6148930	Symbol	r_btype		6147518						
ANR	6148931	Symbol	countof		6147518						
ANR	6148932	Symbol	w . limit		6147518						
ANR	6148933	Symbol	opt		6147518						
ANR	6148934	Symbol	size		6147518						
ANR	6148935	Symbol	a_executable		6147518						
ANR	6148936	Symbol	status		6147518						
ANR	6148937	Symbol	a_read		6147518						
ANR	6148938	Symbol	code		6147518						
ANR	6148939	Symbol	& scanned		6147518						
ANR	6148940	Symbol	op -> value . realval		6147518						
ANR	6148941	Symbol	skip		6147518						
ANR	6148942	Symbol	rtype		6147518						
ANR	6148943	Symbol	* type_strings		6147518						
ANR	6148944	Symbol	& nref		6147518						
ANR	6148945	Symbol	min		6147518						
ANR	6148946	Symbol	mem		6147518						
ANR	6148947	Symbol	r_has_attr		6147518						
ANR	6148948	Symbol	nref		6147518						
ANR	6148949	Symbol	op -> value		6147518						
ANR	6148950	Symbol	r_size		6147518						
ANR	6148951	Symbol	full_print		6147518						
ANR	6148952	Symbol	* str		6147518						
ANR	6148953	Symbol	value		6147518						
ANR	6148954	Symbol	* opt		6147518						
ANR	6148955	Symbol	op		6147518						
ANR	6148956	Symbol	s_PSSE_template		6147518						
ANR	6148957	Symbol	type_strings		6147518						
ANR	6148958	Symbol	restart		6147518						
ANR	6148959	Symbol	opt -> base_index		6147518						
ANR	6148960	Symbol	false		6147518						
ANR	6148961	Symbol	gs_struct_type_name_string		6147518						
ANR	6148962	Symbol	op -> value . pstruct		6147518						
ANR	6148963	Symbol	& size		6147518						
ANR	6148964	Symbol	* rtype		6147518						
ANR	6148965	Symbol	start_pos		6147518						
ANR	6148966	Symbol	wstr		6147518						
ANR	6148967	Symbol	buf		6147518						
ANR	6148968	Symbol	r		6147518						
ANR	6148969	Symbol	op -> value . const_bytes		6147518						
ANR	6148970	Symbol	w		6147518						
ANR	6148971	Symbol	r . ptr		6147518						
ANR	6148972	Symbol	& r		6147518						
ANR	6148973	Symbol	* opt -> nx_table		6147518						
ANR	6148974	Symbol	obj_string_data		6147518						
ANR	6148975	Symbol	& w		6147518						
ANR	6148976	Symbol	op -> value . opproc		6147518						
ANR	6148977	Function	ensure_dot	569:0:20202:20593							
ANR	6148978	FunctionDef	ensure_dot (char * buf)		6148977	0					
ANR	6148979	CompoundStatement		571:0:20236:20593	6148977	0					
ANR	6148980	IdentifierDeclStatement	"char * pe = strchr ( buf , 'e' ) ;"	572:4:20242:20269	6148977	0	True				
ANR	6148981	IdentifierDecl	"* pe = strchr ( buf , 'e' )"		6148977	0					
ANR	6148982	IdentifierDeclType	char *		6148977	0					
ANR	6148983	Identifier	pe		6148977	1					
ANR	6148984	AssignmentExpression	"* pe = strchr ( buf , 'e' )"		6148977	2		=			
ANR	6148985	Identifier	pe		6148977	0					
ANR	6148986	CallExpression	"strchr ( buf , 'e' )"		6148977	1					
ANR	6148987	Callee	strchr		6148977	0					
ANR	6148988	Identifier	strchr		6148977	0					
ANR	6148989	ArgumentList	buf		6148977	1					
ANR	6148990	Argument	buf		6148977	0					
ANR	6148991	Identifier	buf		6148977	0					
ANR	6148992	Argument	'e'		6148977	1					
ANR	6148993	PrimaryExpression	'e'		6148977	0					
ANR	6148994	IfStatement	if ( pe )		6148977	1					
ANR	6148995	Condition	pe	573:8:20279:20280	6148977	0	True				
ANR	6148996	Identifier	pe		6148977	0					
ANR	6148997	CompoundStatement		4:8:56:61	6148977	1					
ANR	6148998	IdentifierDeclStatement	int i ;	574:8:20293:20298	6148977	0	True				
ANR	6148999	IdentifierDecl	i		6148977	0					
ANR	6149000	IdentifierDeclType	int		6148977	0					
ANR	6149001	Identifier	i		6148977	1					
ANR	6149002	ExpressionStatement	"sscanf ( pe + 1 , ""%d"" , & i )"	575:8:20308:20332	6148977	1	True				
ANR	6149003	CallExpression	"sscanf ( pe + 1 , ""%d"" , & i )"		6148977	0					
ANR	6149004	Callee	sscanf		6148977	0					
ANR	6149005	Identifier	sscanf		6148977	0					
ANR	6149006	ArgumentList	pe + 1		6148977	1					
ANR	6149007	Argument	pe + 1		6148977	0					
ANR	6149008	AdditiveExpression	pe + 1		6148977	0		+			
ANR	6149009	Identifier	pe		6148977	0					
ANR	6149010	PrimaryExpression	1		6148977	1					
ANR	6149011	Argument	"""%d"""		6148977	1					
ANR	6149012	PrimaryExpression	"""%d"""		6148977	0					
ANR	6149013	Argument	& i		6148977	2					
ANR	6149014	UnaryOperationExpression	& i		6148977	0					
ANR	6149015	UnaryOperator	&		6148977	0					
ANR	6149016	Identifier	i		6148977	1					
ANR	6149017	IfStatement	if ( i >= 0 )		6148977	2					
ANR	6149018	Condition	i >= 0	577:12:20407:20412	6148977	0	True				
ANR	6149019	RelationalExpression	i >= 0		6148977	0		>=			
ANR	6149020	Identifier	i		6148977	0					
ANR	6149021	PrimaryExpression	0		6148977	1					
ANR	6149022	ExpressionStatement	"gs_sprintf ( pe + 1 , ""+%02d"" , i )"	578:12:20427:20457	6148977	1	True				
ANR	6149023	CallExpression	"gs_sprintf ( pe + 1 , ""+%02d"" , i )"		6148977	0					
ANR	6149024	Callee	gs_sprintf		6148977	0					
ANR	6149025	Identifier	gs_sprintf		6148977	0					
ANR	6149026	ArgumentList	pe + 1		6148977	1					
ANR	6149027	Argument	pe + 1		6148977	0					
ANR	6149028	AdditiveExpression	pe + 1		6148977	0		+			
ANR	6149029	Identifier	pe		6148977	0					
ANR	6149030	PrimaryExpression	1		6148977	1					
ANR	6149031	Argument	"""+%02d"""		6148977	1					
ANR	6149032	PrimaryExpression	"""+%02d"""		6148977	0					
ANR	6149033	Argument	i		6148977	2					
ANR	6149034	Identifier	i		6148977	0					
ANR	6149035	ElseStatement	else		6148977	0					
ANR	6149036	ExpressionStatement	"gs_sprintf ( pe + 1 , ""-%02d"" , - i )"	580:12:20484:20515	6148977	0	True				
ANR	6149037	CallExpression	"gs_sprintf ( pe + 1 , ""-%02d"" , - i )"		6148977	0					
ANR	6149038	Callee	gs_sprintf		6148977	0					
ANR	6149039	Identifier	gs_sprintf		6148977	0					
ANR	6149040	ArgumentList	pe + 1		6148977	1					
ANR	6149041	Argument	pe + 1		6148977	0					
ANR	6149042	AdditiveExpression	pe + 1		6148977	0		+			
ANR	6149043	Identifier	pe		6148977	0					
ANR	6149044	PrimaryExpression	1		6148977	1					
ANR	6149045	Argument	"""-%02d"""		6148977	1					
ANR	6149046	PrimaryExpression	"""-%02d"""		6148977	0					
ANR	6149047	Argument	- i		6148977	2					
ANR	6149048	UnaryOperationExpression	- i		6148977	0					
ANR	6149049	UnaryOperator	-		6148977	0					
ANR	6149050	Identifier	i		6148977	1					
ANR	6149051	ElseStatement	else		6148977	0					
ANR	6149052	IfStatement	"if ( strchr ( buf , '.' ) == NULL )"		6148977	0					
ANR	6149053	Condition	"strchr ( buf , '.' ) == NULL"	581:15:20532:20555	6148977	0	True				
ANR	6149054	EqualityExpression	"strchr ( buf , '.' ) == NULL"		6148977	0		==			
ANR	6149055	CallExpression	"strchr ( buf , '.' )"		6148977	0					
ANR	6149056	Callee	strchr		6148977	0					
ANR	6149057	Identifier	strchr		6148977	0					
ANR	6149058	ArgumentList	buf		6148977	1					
ANR	6149059	Argument	buf		6148977	0					
ANR	6149060	Identifier	buf		6148977	0					
ANR	6149061	Argument	'.'		6148977	1					
ANR	6149062	PrimaryExpression	'.'		6148977	0					
ANR	6149063	Identifier	NULL		6148977	1					
ANR	6149064	CompoundStatement		11:41:321:321	6148977	1					
ANR	6149065	ExpressionStatement	"strcat ( buf , "".0"" )"	582:8:20568:20585	6148977	0	True				
ANR	6149066	CallExpression	"strcat ( buf , "".0"" )"		6148977	0					
ANR	6149067	Callee	strcat		6148977	0					
ANR	6149068	Identifier	strcat		6148977	0					
ANR	6149069	ArgumentList	buf		6148977	1					
ANR	6149070	Argument	buf		6148977	0					
ANR	6149071	Identifier	buf		6148977	0					
ANR	6149072	Argument	""".0"""		6148977	1					
ANR	6149073	PrimaryExpression	""".0"""		6148977	0					
ANR	6149074	ReturnType	static void		6148977	1					
ANR	6149075	Identifier	ensure_dot		6148977	2					
ANR	6149076	ParameterList	char * buf		6148977	3					
ANR	6149077	Parameter	char * buf	570:11:20225:20233	6148977	0	True				
ANR	6149078	ParameterType	char *		6148977	0					
ANR	6149079	Identifier	buf		6148977	1					
ANR	6149080	CFGEntryNode	ENTRY		6148977		True				
ANR	6149081	CFGExitNode	EXIT		6148977		True				
ANR	6149082	Symbol	buf		6148977						
ANR	6149083	Symbol	NULL		6148977						
ANR	6149084	Symbol	pe		6148977						
ANR	6149085	Symbol	strchr		6148977						
ANR	6149086	Symbol	i		6148977						
ANR	6149087	Symbol	& i		6148977						
ANR	6149088	Function	obj_cvs	594:0:21032:21469							
ANR	6149089	FunctionDef	"obj_cvs (const gs_memory_t * mem , const ref * op , byte * str , uint len , uint * prlen , const byte * * pchars)"		6149088	0					
ANR	6149090	CompoundStatement		597:0:21150:21469	6149088	0					
ANR	6149091	IdentifierDeclStatement	"int code = obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false ) ;"	598:4:21156:21213	6149088	0	True				
ANR	6149092	IdentifierDecl	"code = obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false )"		6149088	0					
ANR	6149093	IdentifierDeclType	int		6149088	0					
ANR	6149094	Identifier	code		6149088	1					
ANR	6149095	AssignmentExpression	"code = obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false )"		6149088	2		=			
ANR	6149096	Identifier	code		6149088	0					
ANR	6149097	CallExpression	"obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false )"		6149088	1					
ANR	6149098	Callee	obj_cvp		6149088	0					
ANR	6149099	Identifier	obj_cvp		6149088	0					
ANR	6149100	ArgumentList	op		6149088	1					
ANR	6149101	Argument	op		6149088	0					
ANR	6149102	Identifier	op		6149088	0					
ANR	6149103	Argument	str		6149088	1					
ANR	6149104	Identifier	str		6149088	0					
ANR	6149105	Argument	len		6149088	2					
ANR	6149106	Identifier	len		6149088	0					
ANR	6149107	Argument	prlen		6149088	3					
ANR	6149108	Identifier	prlen		6149088	0					
ANR	6149109	Argument	0		6149088	4					
ANR	6149110	PrimaryExpression	0		6149088	0					
ANR	6149111	Argument	0		6149088	5					
ANR	6149112	PrimaryExpression	0		6149088	0					
ANR	6149113	Argument	mem		6149088	6					
ANR	6149114	Identifier	mem		6149088	0					
ANR	6149115	Argument	false		6149088	7					
ANR	6149116	Identifier	false		6149088	0					
ANR	6149117	IfStatement	if ( code == 1 )		6149088	1					
ANR	6149118	Condition	code == 1	600:8:21247:21255	6149088	0	True				
ANR	6149119	EqualityExpression	code == 1		6149088	0		==			
ANR	6149120	Identifier	code		6149088	0					
ANR	6149121	PrimaryExpression	1		6149088	1					
ANR	6149122	CompoundStatement		4:19:107:107	6149088	1					
ANR	6149123	IfStatement	if ( pchars )		6149088	0					
ANR	6149124	Condition	pchars	601:12:21272:21277	6149088	0	True				
ANR	6149125	Identifier	pchars		6149088	0					
ANR	6149126	ExpressionStatement	"obj_string_data ( mem , op , pchars , prlen )"	602:12:21292:21331	6149088	1	True				
ANR	6149127	CallExpression	"obj_string_data ( mem , op , pchars , prlen )"		6149088	0					
ANR	6149128	Callee	obj_string_data		6149088	0					
ANR	6149129	Identifier	obj_string_data		6149088	0					
ANR	6149130	ArgumentList	mem		6149088	1					
ANR	6149131	Argument	mem		6149088	0					
ANR	6149132	Identifier	mem		6149088	0					
ANR	6149133	Argument	op		6149088	1					
ANR	6149134	Identifier	op		6149088	0					
ANR	6149135	Argument	pchars		6149088	2					
ANR	6149136	Identifier	pchars		6149088	0					
ANR	6149137	Argument	prlen		6149088	3					
ANR	6149138	Identifier	prlen		6149088	0					
ANR	6149139	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	603:8:21341:21382	6149088	1	True				
ANR	6149140	CallExpression	gs_note_error ( gs_error_rangecheck )		6149088	0					
ANR	6149141	Callee	gs_note_error		6149088	0					
ANR	6149142	Identifier	gs_note_error		6149088	0					
ANR	6149143	ArgumentList	gs_error_rangecheck		6149088	1					
ANR	6149144	Argument	gs_error_rangecheck		6149088	0					
ANR	6149145	Identifier	gs_error_rangecheck		6149088	0					
ANR	6149146	ElseStatement	else		6149088	0					
ANR	6149147	CompoundStatement		8:11:244:244	6149088	0					
ANR	6149148	IfStatement	if ( pchars )		6149088	0					
ANR	6149149	Condition	pchars	605:12:21409:21414	6149088	0	True				
ANR	6149150	Identifier	pchars		6149088	0					
ANR	6149151	ExpressionStatement	* pchars = str	606:10:21427:21440	6149088	1	True				
ANR	6149152	AssignmentExpression	* pchars = str		6149088	0		=			
ANR	6149153	UnaryOperationExpression	* pchars		6149088	0					
ANR	6149154	UnaryOperator	*		6149088	0					
ANR	6149155	Identifier	pchars		6149088	1					
ANR	6149156	Identifier	str		6149088	1					
ANR	6149157	ReturnStatement	return code ;	607:8:21450:21461	6149088	1	True				
ANR	6149158	Identifier	code		6149088	0					
ANR	6149159	ReturnType	int		6149088	1					
ANR	6149160	Identifier	obj_cvs		6149088	2					
ANR	6149161	ParameterList	"const gs_memory_t * mem , const ref * op , byte * str , uint len , uint * prlen , const byte * * pchars"		6149088	3					
ANR	6149162	Parameter	const gs_memory_t * mem	595:8:21044:21065	6149088	0	True				
ANR	6149163	ParameterType	const gs_memory_t *		6149088	0					
ANR	6149164	Identifier	mem		6149088	1					
ANR	6149165	Parameter	const ref * op	595:32:21068:21081	6149088	1	True				
ANR	6149166	ParameterType	const ref *		6149088	0					
ANR	6149167	Identifier	op		6149088	1					
ANR	6149168	Parameter	byte * str	595:48:21084:21093	6149088	2	True				
ANR	6149169	ParameterType	byte *		6149088	0					
ANR	6149170	Identifier	str		6149088	1					
ANR	6149171	Parameter	uint len	595:60:21096:21103	6149088	3	True				
ANR	6149172	ParameterType	uint		6149088	0					
ANR	6149173	Identifier	len		6149088	1					
ANR	6149174	Parameter	uint * prlen	595:70:21106:21117	6149088	4	True				
ANR	6149175	ParameterType	uint *		6149088	0					
ANR	6149176	Identifier	prlen		6149088	1					
ANR	6149177	Parameter	const byte * * pchars	596:8:21128:21147	6149088	5	True				
ANR	6149178	ParameterType	const byte * *		6149088	0					
ANR	6149179	Identifier	pchars		6149088	1					
ANR	6149180	CFGEntryNode	ENTRY		6149088		True				
ANR	6149181	CFGExitNode	EXIT		6149088		True				
ANR	6149182	Symbol	str		6149088						
ANR	6149183	Symbol	op		6149088						
ANR	6149184	Symbol	gs_note_error		6149088						
ANR	6149185	Symbol	code		6149088						
ANR	6149186	Symbol	mem		6149088						
ANR	6149187	Symbol	len		6149088						
ANR	6149188	Symbol	obj_cvp		6149088						
ANR	6149189	Symbol	gs_error_rangecheck		6149088						
ANR	6149190	Symbol	false		6149088						
ANR	6149191	Symbol	* pchars		6149088						
ANR	6149192	Symbol	prlen		6149088						
ANR	6149193	Symbol	pchars		6149088						
ANR	6149194	Function	op_find_index	612:0:21544:22052							
ANR	6149195	FunctionDef	op_find_index (const ref * pref)		6149194	0					
ANR	6149196	CompoundStatement		614:0:21601:22052	6149194	0					
ANR	6149197	IdentifierDeclStatement	op_proc_t proc = real_opproc ( pref ) ;	615:4:21607:21641	6149194	0	True				
ANR	6149198	IdentifierDecl	proc = real_opproc ( pref )		6149194	0					
ANR	6149199	IdentifierDeclType	op_proc_t		6149194	0					
ANR	6149200	Identifier	proc		6149194	1					
ANR	6149201	AssignmentExpression	proc = real_opproc ( pref )		6149194	2		=			
ANR	6149202	Identifier	proc		6149194	0					
ANR	6149203	CallExpression	real_opproc ( pref )		6149194	1					
ANR	6149204	Callee	real_opproc		6149194	0					
ANR	6149205	Identifier	real_opproc		6149194	0					
ANR	6149206	ArgumentList	pref		6149194	1					
ANR	6149207	Argument	pref		6149194	0					
ANR	6149208	Identifier	pref		6149194	0					
ANR	6149209	Statement	const	616:4:21647:21651	6149194	1	True				
ANR	6149210	Statement	op_def	616:10:21653:21658	6149194	2	True				
ANR	6149211	Statement	*	616:17:21660:21660	6149194	3	True				
ANR	6149212	Statement	const	616:18:21661:21665	6149194	4	True				
ANR	6149213	ExpressionStatement	* opp = op_defs_all	616:24:21667:21685	6149194	5	True				
ANR	6149214	AssignmentExpression	* opp = op_defs_all		6149194	0		=			
ANR	6149215	UnaryOperationExpression	* opp		6149194	0					
ANR	6149216	UnaryOperator	*		6149194	0					
ANR	6149217	Identifier	opp		6149194	1					
ANR	6149218	Identifier	op_defs_all		6149194	1					
ANR	6149219	Statement	const	617:4:21691:21695	6149194	6	True				
ANR	6149220	Statement	op_def	617:10:21697:21702	6149194	7	True				
ANR	6149221	Statement	*	617:17:21704:21704	6149194	8	True				
ANR	6149222	Statement	const	617:18:21705:21709	6149194	9	True				
ANR	6149223	ExpressionStatement	* opend = opp + ( op_def_count / OP_DEFS_MAX_SIZE )	617:24:21711:21759	6149194	10	True				
ANR	6149224	AssignmentExpression	* opend = opp + ( op_def_count / OP_DEFS_MAX_SIZE )		6149194	0		=			
ANR	6149225	UnaryOperationExpression	* opend		6149194	0					
ANR	6149226	UnaryOperator	*		6149194	0					
ANR	6149227	Identifier	opend		6149194	1					
ANR	6149228	AdditiveExpression	opp + ( op_def_count / OP_DEFS_MAX_SIZE )		6149194	1		+			
ANR	6149229	Identifier	opp		6149194	0					
ANR	6149230	MultiplicativeExpression	op_def_count / OP_DEFS_MAX_SIZE		6149194	1		/			
ANR	6149231	Identifier	op_def_count		6149194	0					
ANR	6149232	Identifier	OP_DEFS_MAX_SIZE		6149194	1					
ANR	6149233	ForStatement	for ( ; opp < opend ; ++ opp )		6149194	11					
ANR	6149234	Condition	opp < opend	619:11:21773:21783	6149194	0	True				
ANR	6149235	RelationalExpression	opp < opend		6149194	0		<			
ANR	6149236	Identifier	opp		6149194	0					
ANR	6149237	Identifier	opend		6149194	1					
ANR	6149238	UnaryExpression	++ opp	619:24:21786:21790	6149194	1	True				
ANR	6149239	IncDec	++		6149194	0					
ANR	6149240	Identifier	opp		6149194	1					
ANR	6149241	CompoundStatement		7:8:201:225	6149194	2					
ANR	6149242	IdentifierDeclStatement	const op_def * def = * opp ;	620:8:21803:21827	6149194	0	True				
ANR	6149243	IdentifierDecl	* def = * opp		6149194	0					
ANR	6149244	IdentifierDeclType	const op_def *		6149194	0					
ANR	6149245	Identifier	def		6149194	1					
ANR	6149246	AssignmentExpression	* def = * opp		6149194	2		=			
ANR	6149247	Identifier	def		6149194	0					
ANR	6149248	UnaryOperationExpression	* opp		6149194	1					
ANR	6149249	UnaryOperator	*		6149194	0					
ANR	6149250	Identifier	opp		6149194	1					
ANR	6149251	ForStatement	for ( ; def -> oname != 0 ; ++ def )		6149194	1					
ANR	6149252	Condition	def -> oname != 0	622:15:21845:21859	6149194	0	True				
ANR	6149253	EqualityExpression	def -> oname != 0		6149194	0		!=			
ANR	6149254	PtrMemberAccess	def -> oname		6149194	0					
ANR	6149255	Identifier	def		6149194	0					
ANR	6149256	Identifier	oname		6149194	1					
ANR	6149257	PrimaryExpression	0		6149194	1					
ANR	6149258	UnaryExpression	++ def	622:32:21862:21866	6149194	1	True				
ANR	6149259	IncDec	++		6149194	0					
ANR	6149260	Identifier	def		6149194	1					
ANR	6149261	IfStatement	if ( def -> proc == proc )		6149194	2					
ANR	6149262	Condition	def -> proc == proc	623:16:21885:21901	6149194	0	True				
ANR	6149263	EqualityExpression	def -> proc == proc		6149194	0		==			
ANR	6149264	PtrMemberAccess	def -> proc		6149194	0					
ANR	6149265	Identifier	def		6149194	0					
ANR	6149266	Identifier	proc		6149194	1					
ANR	6149267	Identifier	proc		6149194	1					
ANR	6149268	ReturnStatement	return ( opp - op_defs_all ) * OP_DEFS_MAX_SIZE + ( def - * opp ) ;	624:16:21920:21980	6149194	1	True				
ANR	6149269	AdditiveExpression	( opp - op_defs_all ) * OP_DEFS_MAX_SIZE + ( def - * opp )		6149194	0		+			
ANR	6149270	MultiplicativeExpression	( opp - op_defs_all ) * OP_DEFS_MAX_SIZE		6149194	0		*			
ANR	6149271	AdditiveExpression	opp - op_defs_all		6149194	0		-			
ANR	6149272	Identifier	opp		6149194	0					
ANR	6149273	Identifier	op_defs_all		6149194	1					
ANR	6149274	Identifier	OP_DEFS_MAX_SIZE		6149194	1					
ANR	6149275	AdditiveExpression	def - * opp		6149194	1		-			
ANR	6149276	Identifier	def		6149194	0					
ANR	6149277	UnaryOperationExpression	* opp		6149194	1					
ANR	6149278	UnaryOperator	*		6149194	0					
ANR	6149279	Identifier	opp		6149194	1					
ANR	6149280	ReturnStatement	return 0 ;	627:4:22042:22050	6149194	12	True				
ANR	6149281	PrimaryExpression	0		6149194	0					
ANR	6149282	ReturnType	ushort		6149194	1					
ANR	6149283	Identifier	op_find_index		6149194	2					
ANR	6149284	ParameterList	const ref * pref		6149194	3					
ANR	6149285	Parameter	const ref * pref	613:14:21565:21580	6149194	0	True				
ANR	6149286	ParameterType	const ref *		6149194	0					
ANR	6149287	Identifier	pref		6149194	1					
ANR	6149288	CFGEntryNode	ENTRY		6149194		True				
ANR	6149289	CFGExitNode	EXIT		6149194		True				
ANR	6149290	Symbol	proc		6149194						
ANR	6149291	Symbol	op_defs_all		6149194						
ANR	6149292	Symbol	OP_DEFS_MAX_SIZE		6149194						
ANR	6149293	Symbol	def		6149194						
ANR	6149294	Symbol	opend		6149194						
ANR	6149295	Symbol	opp		6149194						
ANR	6149296	Symbol	real_opproc		6149194						
ANR	6149297	Symbol	op_def_count		6149194						
ANR	6149298	Symbol	* def		6149194						
ANR	6149299	Symbol	def -> oname		6149194						
ANR	6149300	Symbol	* opend		6149194						
ANR	6149301	Symbol	pref		6149194						
ANR	6149302	Symbol	* opp		6149194						
ANR	6149303	Symbol	def -> proc		6149194						
ANR	6149304	Function	op_index_ref	635:0:22230:22642							
ANR	6149305	FunctionDef	"op_index_ref (const gs_memory_t * mem , uint index , ref * pref)"		6149304	0					
ANR	6149306	CompoundStatement		637:0:22296:22642	6149304	0					
ANR	6149307	IdentifierDeclStatement	const op_array_table * opt ;	638:4:22302:22327	6149304	0	True				
ANR	6149308	IdentifierDecl	* opt		6149304	0					
ANR	6149309	IdentifierDeclType	const op_array_table *		6149304	0					
ANR	6149310	Identifier	opt		6149304	1					
ANR	6149311	IfStatement	if ( op_index_is_operator ( index ) )		6149304	1					
ANR	6149312	Condition	op_index_is_operator ( index )	640:8:22338:22364	6149304	0	True				
ANR	6149313	CallExpression	op_index_is_operator ( index )		6149304	0					
ANR	6149314	Callee	op_index_is_operator		6149304	0					
ANR	6149315	Identifier	op_index_is_operator		6149304	0					
ANR	6149316	ArgumentList	index		6149304	1					
ANR	6149317	Argument	index		6149304	0					
ANR	6149318	Identifier	index		6149304	0					
ANR	6149319	CompoundStatement		4:37:70:70	6149304	1					
ANR	6149320	ExpressionStatement	"make_oper ( pref , index , op_index_proc ( index ) )"	641:8:22377:22421	6149304	0	True				
ANR	6149321	CallExpression	"make_oper ( pref , index , op_index_proc ( index ) )"		6149304	0					
ANR	6149322	Callee	make_oper		6149304	0					
ANR	6149323	Identifier	make_oper		6149304	0					
ANR	6149324	ArgumentList	pref		6149304	1					
ANR	6149325	Argument	pref		6149304	0					
ANR	6149326	Identifier	pref		6149304	0					
ANR	6149327	Argument	index		6149304	1					
ANR	6149328	Identifier	index		6149304	0					
ANR	6149329	Argument	op_index_proc ( index )		6149304	2					
ANR	6149330	CallExpression	op_index_proc ( index )		6149304	0					
ANR	6149331	Callee	op_index_proc		6149304	0					
ANR	6149332	Identifier	op_index_proc		6149304	0					
ANR	6149333	ArgumentList	index		6149304	1					
ANR	6149334	Argument	index		6149304	0					
ANR	6149335	Identifier	index		6149304	0					
ANR	6149336	ReturnStatement	return ;	642:8:22431:22437	6149304	1	True				
ANR	6149337	ExpressionStatement	"opt = get_op_array ( mem , index )"	644:4:22449:22479	6149304	2	True				
ANR	6149338	AssignmentExpression	"opt = get_op_array ( mem , index )"		6149304	0		=			
ANR	6149339	Identifier	opt		6149304	0					
ANR	6149340	CallExpression	"get_op_array ( mem , index )"		6149304	1					
ANR	6149341	Callee	get_op_array		6149304	0					
ANR	6149342	Identifier	get_op_array		6149304	0					
ANR	6149343	ArgumentList	mem		6149304	1					
ANR	6149344	Argument	mem		6149304	0					
ANR	6149345	Identifier	mem		6149304	0					
ANR	6149346	Argument	index		6149304	1					
ANR	6149347	Identifier	index		6149304	0					
ANR	6149348	ExpressionStatement	"make_tasv ( pref , t_oparray , opt -> attrs , index , const_refs , ( opt -> table . value . const_refs + index - opt -> base_index ) )"	645:4:22485:22640	6149304	3	True				
ANR	6149349	CallExpression	"make_tasv ( pref , t_oparray , opt -> attrs , index , const_refs , ( opt -> table . value . const_refs + index - opt -> base_index ) )"		6149304	0					
ANR	6149350	Callee	make_tasv		6149304	0					
ANR	6149351	Identifier	make_tasv		6149304	0					
ANR	6149352	ArgumentList	pref		6149304	1					
ANR	6149353	Argument	pref		6149304	0					
ANR	6149354	Identifier	pref		6149304	0					
ANR	6149355	Argument	t_oparray		6149304	1					
ANR	6149356	Identifier	t_oparray		6149304	0					
ANR	6149357	Argument	opt -> attrs		6149304	2					
ANR	6149358	PtrMemberAccess	opt -> attrs		6149304	0					
ANR	6149359	Identifier	opt		6149304	0					
ANR	6149360	Identifier	attrs		6149304	1					
ANR	6149361	Argument	index		6149304	3					
ANR	6149362	Identifier	index		6149304	0					
ANR	6149363	Argument	const_refs		6149304	4					
ANR	6149364	Identifier	const_refs		6149304	0					
ANR	6149365	Argument	opt -> table . value . const_refs + index - opt -> base_index		6149304	5					
ANR	6149366	AdditiveExpression	opt -> table . value . const_refs + index - opt -> base_index		6149304	0		+			
ANR	6149367	MemberAccess	opt -> table . value . const_refs		6149304	0					
ANR	6149368	MemberAccess	opt -> table . value		6149304	0					
ANR	6149369	PtrMemberAccess	opt -> table		6149304	0					
ANR	6149370	Identifier	opt		6149304	0					
ANR	6149371	Identifier	table		6149304	1					
ANR	6149372	Identifier	value		6149304	1					
ANR	6149373	Identifier	const_refs		6149304	1					
ANR	6149374	AdditiveExpression	index - opt -> base_index		6149304	1		-			
ANR	6149375	Identifier	index		6149304	0					
ANR	6149376	PtrMemberAccess	opt -> base_index		6149304	1					
ANR	6149377	Identifier	opt		6149304	0					
ANR	6149378	Identifier	base_index		6149304	1					
ANR	6149379	ReturnType	void		6149304	1					
ANR	6149380	Identifier	op_index_ref		6149304	2					
ANR	6149381	ParameterList	"const gs_memory_t * mem , uint index , ref * pref"		6149304	3					
ANR	6149382	Parameter	const gs_memory_t * mem	636:13:22248:22269	6149304	0	True				
ANR	6149383	ParameterType	const gs_memory_t *		6149304	0					
ANR	6149384	Identifier	mem		6149304	1					
ANR	6149385	Parameter	uint index	636:37:22272:22281	6149304	1	True				
ANR	6149386	ParameterType	uint		6149304	0					
ANR	6149387	Identifier	index		6149304	1					
ANR	6149388	Parameter	ref * pref	636:49:22284:22293	6149304	2	True				
ANR	6149389	ParameterType	ref *		6149304	0					
ANR	6149390	Identifier	pref		6149304	1					
ANR	6149391	CFGEntryNode	ENTRY		6149304		True				
ANR	6149392	CFGExitNode	EXIT		6149304		True				
ANR	6149393	Symbol	opt -> table		6149304						
ANR	6149394	Symbol	get_op_array		6149304						
ANR	6149395	Symbol	opt -> table . value . const_refs		6149304						
ANR	6149396	Symbol	opt -> base_index		6149304						
ANR	6149397	Symbol	index		6149304						
ANR	6149398	Symbol	opt -> attrs		6149304						
ANR	6149399	Symbol	op_index_proc		6149304						
ANR	6149400	Symbol	opt		6149304						
ANR	6149401	Symbol	mem		6149304						
ANR	6149402	Symbol	op_index_is_operator		6149304						
ANR	6149403	Symbol	pref		6149304						
ANR	6149404	Symbol	opt -> table . value		6149304						
ANR	6149405	Symbol	t_oparray		6149304						
ANR	6149406	Symbol	* opt		6149304						
ANR	6149407	Symbol	const_refs		6149304						
ANR	6149408	Function	array_get	653:0:22784:23760							
ANR	6149409	FunctionDef	"array_get (const gs_memory_t * mem , const ref * aref , long index_long , ref * pref)"		6149408	0					
ANR	6149410	CompoundStatement		655:0:22869:23760	6149408	0					
ANR	6149411	IfStatement	if ( ( ulong ) index_long >= r_size ( aref ) )		6149408	0					
ANR	6149412	Condition	( ulong ) index_long >= r_size ( aref )	656:8:22879:22911	6149408	0	True				
ANR	6149413	RelationalExpression	( ulong ) index_long >= r_size ( aref )		6149408	0		>=			
ANR	6149414	CastExpression	( ulong ) index_long		6149408	0					
ANR	6149415	CastTarget	ulong		6149408	0					
ANR	6149416	Identifier	index_long		6149408	1					
ANR	6149417	CallExpression	r_size ( aref )		6149408	1					
ANR	6149418	Callee	r_size		6149408	0					
ANR	6149419	Identifier	r_size		6149408	0					
ANR	6149420	ArgumentList	aref		6149408	1					
ANR	6149421	Argument	aref		6149408	0					
ANR	6149422	Identifier	aref		6149408	0					
ANR	6149423	ExpressionStatement	return_error ( gs_error_rangecheck )	657:8:22922:22955	6149408	1	True				
ANR	6149424	CallExpression	return_error ( gs_error_rangecheck )		6149408	0					
ANR	6149425	Callee	return_error		6149408	0					
ANR	6149426	Identifier	return_error		6149408	0					
ANR	6149427	ArgumentList	gs_error_rangecheck		6149408	1					
ANR	6149428	Argument	gs_error_rangecheck		6149408	0					
ANR	6149429	Identifier	gs_error_rangecheck		6149408	0					
ANR	6149430	SwitchStatement	switch ( r_type ( aref ) )		6149408	1					
ANR	6149431	Condition	r_type ( aref )	658:12:22969:22980	6149408	0	True				
ANR	6149432	CallExpression	r_type ( aref )		6149408	0					
ANR	6149433	Callee	r_type		6149408	0					
ANR	6149434	Identifier	r_type		6149408	0					
ANR	6149435	ArgumentList	aref		6149408	1					
ANR	6149436	Argument	aref		6149408	0					
ANR	6149437	Identifier	aref		6149408	0					
ANR	6149438	CompoundStatement		4:26:113:113	6149408	1					
ANR	6149439	Label	case t_array :	659:8:22993:23005	6149408	0	True				
ANR	6149440	Identifier	t_array		6149408	0					
ANR	6149441	CompoundStatement		7:16:167:216	6149408	1					
ANR	6149442	IdentifierDeclStatement	const ref * pvalue = aref -> value . refs + index_long ;	661:16:23037:23086	6149408	0	True				
ANR	6149443	IdentifierDecl	* pvalue = aref -> value . refs + index_long		6149408	0					
ANR	6149444	IdentifierDeclType	const ref *		6149408	0					
ANR	6149445	Identifier	pvalue		6149408	1					
ANR	6149446	AssignmentExpression	* pvalue = aref -> value . refs + index_long		6149408	2		=			
ANR	6149447	Identifier	pvalue		6149408	0					
ANR	6149448	AdditiveExpression	aref -> value . refs + index_long		6149408	1		+			
ANR	6149449	MemberAccess	aref -> value . refs		6149408	0					
ANR	6149450	PtrMemberAccess	aref -> value		6149408	0					
ANR	6149451	Identifier	aref		6149408	0					
ANR	6149452	Identifier	value		6149408	1					
ANR	6149453	Identifier	refs		6149408	1					
ANR	6149454	Identifier	index_long		6149408	1					
ANR	6149455	ExpressionStatement	"ref_assign ( pref , pvalue )"	663:16:23105:23129	6149408	1	True				
ANR	6149456	CallExpression	"ref_assign ( pref , pvalue )"		6149408	0					
ANR	6149457	Callee	ref_assign		6149408	0					
ANR	6149458	Identifier	ref_assign		6149408	0					
ANR	6149459	ArgumentList	pref		6149408	1					
ANR	6149460	Argument	pref		6149408	0					
ANR	6149461	Identifier	pref		6149408	0					
ANR	6149462	Argument	pvalue		6149408	1					
ANR	6149463	Identifier	pvalue		6149408	0					
ANR	6149464	BreakStatement	break ;	665:12:23157:23162	6149408	2	True				
ANR	6149465	Label	case t_mixedarray :	666:8:23172:23189	6149408	3	True				
ANR	6149466	Identifier	t_mixedarray		6149408	0					
ANR	6149467	CompoundStatement		15:16:414:443	6149408	4					
ANR	6149468	IdentifierDeclStatement	const ref_packed * packed = aref -> value . packed ;	668:16:23221:23266	6149408	0	True				
ANR	6149469	IdentifierDecl	* packed = aref -> value . packed		6149408	0					
ANR	6149470	IdentifierDeclType	const ref_packed *		6149408	0					
ANR	6149471	Identifier	packed		6149408	1					
ANR	6149472	AssignmentExpression	* packed = aref -> value . packed		6149408	2		=			
ANR	6149473	Identifier	packed		6149408	0					
ANR	6149474	MemberAccess	aref -> value . packed		6149408	1					
ANR	6149475	PtrMemberAccess	aref -> value		6149408	0					
ANR	6149476	Identifier	aref		6149408	0					
ANR	6149477	Identifier	value		6149408	1					
ANR	6149478	Identifier	packed		6149408	1					
ANR	6149479	IdentifierDeclStatement	uint index = ( uint ) index_long ;	669:16:23284:23313	6149408	1	True				
ANR	6149480	IdentifierDecl	index = ( uint ) index_long		6149408	0					
ANR	6149481	IdentifierDeclType	uint		6149408	0					
ANR	6149482	Identifier	index		6149408	1					
ANR	6149483	AssignmentExpression	index = ( uint ) index_long		6149408	2		=			
ANR	6149484	Identifier	index		6149408	0					
ANR	6149485	CastExpression	( uint ) index_long		6149408	1					
ANR	6149486	CastTarget	uint		6149408	0					
ANR	6149487	Identifier	index_long		6149408	1					
ANR	6149488	ForStatement	for ( ; index -- ; )		6149408	2					
ANR	6149489	Condition	index --	671:23:23339:23345	6149408	0	True				
ANR	6149490	PostIncDecOperationExpression	index --		6149408	0					
ANR	6149491	Identifier	index		6149408	0					
ANR	6149492	IncDec	--		6149408	1					
ANR	6149493	ExpressionStatement	packed = packed_next ( packed )	672:20:23369:23397	6149408	1	True				
ANR	6149494	AssignmentExpression	packed = packed_next ( packed )		6149408	0		=			
ANR	6149495	Identifier	packed		6149408	0					
ANR	6149496	CallExpression	packed_next ( packed )		6149408	1					
ANR	6149497	Callee	packed_next		6149408	0					
ANR	6149498	Identifier	packed_next		6149408	0					
ANR	6149499	ArgumentList	packed		6149408	1					
ANR	6149500	Argument	packed		6149408	0					
ANR	6149501	Identifier	packed		6149408	0					
ANR	6149502	ExpressionStatement	"packed_get ( mem , packed , pref )"	673:16:23415:23444	6149408	3	True				
ANR	6149503	CallExpression	"packed_get ( mem , packed , pref )"		6149408	0					
ANR	6149504	Callee	packed_get		6149408	0					
ANR	6149505	Identifier	packed_get		6149408	0					
ANR	6149506	ArgumentList	mem		6149408	1					
ANR	6149507	Argument	mem		6149408	0					
ANR	6149508	Identifier	mem		6149408	0					
ANR	6149509	Argument	packed		6149408	1					
ANR	6149510	Identifier	packed		6149408	0					
ANR	6149511	Argument	pref		6149408	2					
ANR	6149512	Identifier	pref		6149408	0					
ANR	6149513	BreakStatement	break ;	675:12:23472:23477	6149408	5	True				
ANR	6149514	Label	case t_shortarray :	676:8:23487:23504	6149408	6	True				
ANR	6149515	Identifier	t_shortarray		6149408	0					
ANR	6149516	CompoundStatement		24:16:666:724	6149408	7					
ANR	6149517	IdentifierDeclStatement	const ref_packed * packed = aref -> value . packed + index_long ;	678:16:23536:23594	6149408	0	True				
ANR	6149518	IdentifierDecl	* packed = aref -> value . packed + index_long		6149408	0					
ANR	6149519	IdentifierDeclType	const ref_packed *		6149408	0					
ANR	6149520	Identifier	packed		6149408	1					
ANR	6149521	AssignmentExpression	* packed = aref -> value . packed + index_long		6149408	2		=			
ANR	6149522	Identifier	packed		6149408	0					
ANR	6149523	AdditiveExpression	aref -> value . packed + index_long		6149408	1		+			
ANR	6149524	MemberAccess	aref -> value . packed		6149408	0					
ANR	6149525	PtrMemberAccess	aref -> value		6149408	0					
ANR	6149526	Identifier	aref		6149408	0					
ANR	6149527	Identifier	value		6149408	1					
ANR	6149528	Identifier	packed		6149408	1					
ANR	6149529	Identifier	index_long		6149408	1					
ANR	6149530	ExpressionStatement	"packed_get ( mem , packed , pref )"	680:16:23613:23642	6149408	1	True				
ANR	6149531	CallExpression	"packed_get ( mem , packed , pref )"		6149408	0					
ANR	6149532	Callee	packed_get		6149408	0					
ANR	6149533	Identifier	packed_get		6149408	0					
ANR	6149534	ArgumentList	mem		6149408	1					
ANR	6149535	Argument	mem		6149408	0					
ANR	6149536	Identifier	mem		6149408	0					
ANR	6149537	Argument	packed		6149408	1					
ANR	6149538	Identifier	packed		6149408	0					
ANR	6149539	Argument	pref		6149408	2					
ANR	6149540	Identifier	pref		6149408	0					
ANR	6149541	BreakStatement	break ;	682:12:23670:23675	6149408	8	True				
ANR	6149542	Label	default :	683:8:23685:23692	6149408	9	True				
ANR	6149543	Identifier	default		6149408	0					
ANR	6149544	ExpressionStatement	return_error ( gs_error_typecheck )	684:12:23706:23738	6149408	10	True				
ANR	6149545	CallExpression	return_error ( gs_error_typecheck )		6149408	0					
ANR	6149546	Callee	return_error		6149408	0					
ANR	6149547	Identifier	return_error		6149408	0					
ANR	6149548	ArgumentList	gs_error_typecheck		6149408	1					
ANR	6149549	Argument	gs_error_typecheck		6149408	0					
ANR	6149550	Identifier	gs_error_typecheck		6149408	0					
ANR	6149551	ReturnStatement	return 0 ;	686:4:23750:23758	6149408	2	True				
ANR	6149552	PrimaryExpression	0		6149408	0					
ANR	6149553	ReturnType	int		6149408	1					
ANR	6149554	Identifier	array_get		6149408	2					
ANR	6149555	ParameterList	"const gs_memory_t * mem , const ref * aref , long index_long , ref * pref"		6149408	3					
ANR	6149556	Parameter	const gs_memory_t * mem	654:10:22798:22819	6149408	0	True				
ANR	6149557	ParameterType	const gs_memory_t *		6149408	0					
ANR	6149558	Identifier	mem		6149408	1					
ANR	6149559	Parameter	const ref * aref	654:34:22822:22837	6149408	1	True				
ANR	6149560	ParameterType	const ref *		6149408	0					
ANR	6149561	Identifier	aref		6149408	1					
ANR	6149562	Parameter	long index_long	654:52:22840:22854	6149408	2	True				
ANR	6149563	ParameterType	long		6149408	0					
ANR	6149564	Identifier	index_long		6149408	1					
ANR	6149565	Parameter	ref * pref	654:69:22857:22866	6149408	3	True				
ANR	6149566	ParameterType	ref *		6149408	0					
ANR	6149567	Identifier	pref		6149408	1					
ANR	6149568	CFGEntryNode	ENTRY		6149408		True				
ANR	6149569	CFGExitNode	EXIT		6149408		True				
ANR	6149570	Symbol	gs_error_rangecheck		6149408						
ANR	6149571	Symbol	packed_next		6149408						
ANR	6149572	Symbol	index		6149408						
ANR	6149573	Symbol	pvalue		6149408						
ANR	6149574	Symbol	index_long		6149408						
ANR	6149575	Symbol	gs_error_typecheck		6149408						
ANR	6149576	Symbol	mem		6149408						
ANR	6149577	Symbol	* aref		6149408						
ANR	6149578	Symbol	pref		6149408						
ANR	6149579	Symbol	r_size		6149408						
ANR	6149580	Symbol	aref -> value . refs		6149408						
ANR	6149581	Symbol	aref -> value . packed		6149408						
ANR	6149582	Symbol	aref -> value		6149408						
ANR	6149583	Symbol	packed		6149408						
ANR	6149584	Symbol	r_type		6149408						
ANR	6149585	Symbol	aref		6149408						
ANR	6149586	Function	packed_get	693:0:23958:24809							
ANR	6149587	FunctionDef	"packed_get (const gs_memory_t * mem , const ref_packed * packed , ref * pref)"		6149586	0					
ANR	6149588	CompoundStatement		695:0:24037:24809	6149586	0					
ANR	6149589	IdentifierDeclStatement	const ref_packed elt = * packed ;	696:4:24043:24073	6149586	0	True				
ANR	6149590	IdentifierDecl	elt = * packed		6149586	0					
ANR	6149591	IdentifierDeclType	const ref_packed		6149586	0					
ANR	6149592	Identifier	elt		6149586	1					
ANR	6149593	AssignmentExpression	elt = * packed		6149586	2		=			
ANR	6149594	Identifier	elt		6149586	0					
ANR	6149595	UnaryOperationExpression	* packed		6149586	1					
ANR	6149596	UnaryOperator	*		6149586	0					
ANR	6149597	Identifier	packed		6149586	1					
ANR	6149598	IdentifierDeclStatement	uint value = elt & packed_value_mask ;	697:4:24079:24115	6149586	1	True				
ANR	6149599	IdentifierDecl	value = elt & packed_value_mask		6149586	0					
ANR	6149600	IdentifierDeclType	uint		6149586	0					
ANR	6149601	Identifier	value		6149586	1					
ANR	6149602	AssignmentExpression	value = elt & packed_value_mask		6149586	2		=			
ANR	6149603	Identifier	value		6149586	0					
ANR	6149604	BitAndExpression	elt & packed_value_mask		6149586	1		&			
ANR	6149605	Identifier	elt		6149586	0					
ANR	6149606	Identifier	packed_value_mask		6149586	1					
ANR	6149607	SwitchStatement	switch ( elt >> r_packed_type_shift )		6149586	2					
ANR	6149608	Condition	elt >> r_packed_type_shift	699:12:24130:24155	6149586	0	True				
ANR	6149609	ShiftExpression	elt >> r_packed_type_shift		6149586	0		>>			
ANR	6149610	Identifier	elt		6149586	0					
ANR	6149611	Identifier	r_packed_type_shift		6149586	1					
ANR	6149612	CompoundStatement		5:40:120:120	6149586	1					
ANR	6149613	Label	default :	700:8:24168:24175	6149586	0	True				
ANR	6149614	Identifier	default		6149586	0					
ANR	6149615	ExpressionStatement	make_null ( pref )	701:12:24215:24230	6149586	1	True				
ANR	6149616	CallExpression	make_null ( pref )		6149586	0					
ANR	6149617	Callee	make_null		6149586	0					
ANR	6149618	Identifier	make_null		6149586	0					
ANR	6149619	ArgumentList	pref		6149586	1					
ANR	6149620	Argument	pref		6149586	0					
ANR	6149621	Identifier	pref		6149586	0					
ANR	6149622	BreakStatement	break ;	702:12:24244:24249	6149586	2	True				
ANR	6149623	Label	case pt_executable_operator :	703:8:24259:24286	6149586	3	True				
ANR	6149624	Identifier	pt_executable_operator		6149586	0					
ANR	6149625	ExpressionStatement	"op_index_ref ( mem , value , pref )"	704:12:24300:24330	6149586	4	True				
ANR	6149626	CallExpression	"op_index_ref ( mem , value , pref )"		6149586	0					
ANR	6149627	Callee	op_index_ref		6149586	0					
ANR	6149628	Identifier	op_index_ref		6149586	0					
ANR	6149629	ArgumentList	mem		6149586	1					
ANR	6149630	Argument	mem		6149586	0					
ANR	6149631	Identifier	mem		6149586	0					
ANR	6149632	Argument	value		6149586	1					
ANR	6149633	Identifier	value		6149586	0					
ANR	6149634	Argument	pref		6149586	2					
ANR	6149635	Identifier	pref		6149586	0					
ANR	6149636	BreakStatement	break ;	705:12:24344:24349	6149586	5	True				
ANR	6149637	Label	case pt_integer :	706:8:24359:24374	6149586	6	True				
ANR	6149638	Identifier	pt_integer		6149586	0					
ANR	6149639	ExpressionStatement	"make_int ( pref , ( ps_int ) value + packed_min_intval )"	707:12:24388:24437	6149586	7	True				
ANR	6149640	CallExpression	"make_int ( pref , ( ps_int ) value + packed_min_intval )"		6149586	0					
ANR	6149641	Callee	make_int		6149586	0					
ANR	6149642	Identifier	make_int		6149586	0					
ANR	6149643	ArgumentList	pref		6149586	1					
ANR	6149644	Argument	pref		6149586	0					
ANR	6149645	Identifier	pref		6149586	0					
ANR	6149646	Argument	( ps_int ) value + packed_min_intval		6149586	1					
ANR	6149647	AdditiveExpression	( ps_int ) value + packed_min_intval		6149586	0		+			
ANR	6149648	CastExpression	( ps_int ) value		6149586	0					
ANR	6149649	CastTarget	ps_int		6149586	0					
ANR	6149650	Identifier	value		6149586	1					
ANR	6149651	Identifier	packed_min_intval		6149586	1					
ANR	6149652	BreakStatement	break ;	708:12:24451:24456	6149586	8	True				
ANR	6149653	Label	case pt_literal_name :	709:8:24466:24486	6149586	9	True				
ANR	6149654	Identifier	pt_literal_name		6149586	0					
ANR	6149655	ExpressionStatement	"name_index_ref ( mem , value , pref )"	710:12:24500:24532	6149586	10	True				
ANR	6149656	CallExpression	"name_index_ref ( mem , value , pref )"		6149586	0					
ANR	6149657	Callee	name_index_ref		6149586	0					
ANR	6149658	Identifier	name_index_ref		6149586	0					
ANR	6149659	ArgumentList	mem		6149586	1					
ANR	6149660	Argument	mem		6149586	0					
ANR	6149661	Identifier	mem		6149586	0					
ANR	6149662	Argument	value		6149586	1					
ANR	6149663	Identifier	value		6149586	0					
ANR	6149664	Argument	pref		6149586	2					
ANR	6149665	Identifier	pref		6149586	0					
ANR	6149666	BreakStatement	break ;	711:12:24546:24551	6149586	11	True				
ANR	6149667	Label	case pt_executable_name :	712:8:24561:24584	6149586	12	True				
ANR	6149668	Identifier	pt_executable_name		6149586	0					
ANR	6149669	ExpressionStatement	"name_index_ref ( mem , value , pref )"	713:12:24598:24630	6149586	13	True				
ANR	6149670	CallExpression	"name_index_ref ( mem , value , pref )"		6149586	0					
ANR	6149671	Callee	name_index_ref		6149586	0					
ANR	6149672	Identifier	name_index_ref		6149586	0					
ANR	6149673	ArgumentList	mem		6149586	1					
ANR	6149674	Argument	mem		6149586	0					
ANR	6149675	Identifier	mem		6149586	0					
ANR	6149676	Argument	value		6149586	1					
ANR	6149677	Identifier	value		6149586	0					
ANR	6149678	Argument	pref		6149586	2					
ANR	6149679	Identifier	pref		6149586	0					
ANR	6149680	ExpressionStatement	"r_set_attrs ( pref , a_executable )"	714:12:24644:24675	6149586	14	True				
ANR	6149681	CallExpression	"r_set_attrs ( pref , a_executable )"		6149586	0					
ANR	6149682	Callee	r_set_attrs		6149586	0					
ANR	6149683	Identifier	r_set_attrs		6149586	0					
ANR	6149684	ArgumentList	pref		6149586	1					
ANR	6149685	Argument	pref		6149586	0					
ANR	6149686	Identifier	pref		6149586	0					
ANR	6149687	Argument	a_executable		6149586	1					
ANR	6149688	Identifier	a_executable		6149586	0					
ANR	6149689	BreakStatement	break ;	715:12:24689:24694	6149586	15	True				
ANR	6149690	Label	case pt_full_ref :	716:8:24704:24720	6149586	16	True				
ANR	6149691	Identifier	pt_full_ref		6149586	0					
ANR	6149692	Statement	case	717:8:24730:24733	6149586	17	True				
ANR	6149693	Statement	pt_full_ref	717:13:24735:24745	6149586	18	True				
ANR	6149694	Statement	+	717:25:24747:24747	6149586	19	True				
ANR	6149695	Label	1 :	717:27:24749:24750	6149586	20	True				
ANR	6149696	ExpressionStatement	"ref_assign ( pref , ( const ref * ) packed )"	718:12:24764:24801	6149586	21	True				
ANR	6149697	CallExpression	"ref_assign ( pref , ( const ref * ) packed )"		6149586	0					
ANR	6149698	Callee	ref_assign		6149586	0					
ANR	6149699	Identifier	ref_assign		6149586	0					
ANR	6149700	ArgumentList	pref		6149586	1					
ANR	6149701	Argument	pref		6149586	0					
ANR	6149702	Identifier	pref		6149586	0					
ANR	6149703	Argument	( const ref * ) packed		6149586	1					
ANR	6149704	CastExpression	( const ref * ) packed		6149586	0					
ANR	6149705	CastTarget	const ref *		6149586	0					
ANR	6149706	Identifier	packed		6149586	1					
ANR	6149707	ReturnType	void		6149586	1					
ANR	6149708	Identifier	packed_get		6149586	2					
ANR	6149709	ParameterList	"const gs_memory_t * mem , const ref_packed * packed , ref * pref"		6149586	3					
ANR	6149710	Parameter	const gs_memory_t * mem	694:11:23974:23995	6149586	0	True				
ANR	6149711	ParameterType	const gs_memory_t *		6149586	0					
ANR	6149712	Identifier	mem		6149586	1					
ANR	6149713	Parameter	const ref_packed * packed	694:35:23998:24022	6149586	1	True				
ANR	6149714	ParameterType	const ref_packed *		6149586	0					
ANR	6149715	Identifier	packed		6149586	1					
ANR	6149716	Parameter	ref * pref	694:62:24025:24034	6149586	2	True				
ANR	6149717	ParameterType	ref *		6149586	0					
ANR	6149718	Identifier	pref		6149586	1					
ANR	6149719	CFGEntryNode	ENTRY		6149586		True				
ANR	6149720	CFGExitNode	EXIT		6149586		True				
ANR	6149721	Symbol	r_packed_type_shift		6149586						
ANR	6149722	Symbol	* packed		6149586						
ANR	6149723	Symbol	mem		6149586						
ANR	6149724	Symbol	pref		6149586						
ANR	6149725	Symbol	packed_min_intval		6149586						
ANR	6149726	Symbol	a_executable		6149586						
ANR	6149727	Symbol	packed		6149586						
ANR	6149728	Symbol	elt		6149586						
ANR	6149729	Symbol	value		6149586						
ANR	6149730	Symbol	packed_value_mask		6149586						
ANR	6149731	Function	refs_check_space	725:0:24964:25106							
ANR	6149732	FunctionDef	"refs_check_space (const ref * bot , uint size , uint space)"		6149731	0					
ANR	6149733	CompoundStatement		727:0:25025:25106	6149731	0					
ANR	6149734	ForStatement	for ( ; size -- ; bot ++ )		6149731	0					
ANR	6149735	Condition	size --	728:11:25038:25043	6149731	0	True				
ANR	6149736	PostIncDecOperationExpression	size --		6149731	0					
ANR	6149737	Identifier	size		6149731	0					
ANR	6149738	IncDec	--		6149731	1					
ANR	6149739	PostIncDecOperationExpression	bot ++	728:19:25046:25050	6149731	1	True				
ANR	6149740	Identifier	bot		6149731	0					
ANR	6149741	IncDec	++		6149731	1					
ANR	6149742	ExpressionStatement	"store_check_space ( space , bot )"	729:8:25061:25090	6149731	2	True				
ANR	6149743	CallExpression	"store_check_space ( space , bot )"		6149731	0					
ANR	6149744	Callee	store_check_space		6149731	0					
ANR	6149745	Identifier	store_check_space		6149731	0					
ANR	6149746	ArgumentList	space		6149731	1					
ANR	6149747	Argument	space		6149731	0					
ANR	6149748	Identifier	space		6149731	0					
ANR	6149749	Argument	bot		6149731	1					
ANR	6149750	Identifier	bot		6149731	0					
ANR	6149751	ReturnStatement	return 0 ;	730:4:25096:25104	6149731	1	True				
ANR	6149752	PrimaryExpression	0		6149731	0					
ANR	6149753	ReturnType	int		6149731	1					
ANR	6149754	Identifier	refs_check_space		6149731	2					
ANR	6149755	ParameterList	"const ref * bot , uint size , uint space"		6149731	3					
ANR	6149756	Parameter	const ref * bot	726:17:24985:24999	6149731	0	True				
ANR	6149757	ParameterType	const ref *		6149731	0					
ANR	6149758	Identifier	bot		6149731	1					
ANR	6149759	Parameter	uint size	726:34:25002:25010	6149731	1	True				
ANR	6149760	ParameterType	uint		6149731	0					
ANR	6149761	Identifier	size		6149731	1					
ANR	6149762	Parameter	uint space	726:45:25013:25022	6149731	2	True				
ANR	6149763	ParameterType	uint		6149731	0					
ANR	6149764	Identifier	space		6149731	1					
ANR	6149765	CFGEntryNode	ENTRY		6149731		True				
ANR	6149766	CFGExitNode	EXIT		6149731		True				
ANR	6149767	Symbol	size		6149731						
ANR	6149768	Symbol	bot		6149731						
ANR	6149769	Symbol	space		6149731						
ANR	6149770	Function	string_to_ref	736:0:25196:25498							
ANR	6149771	FunctionDef	"string_to_ref (const char * cstr , ref * pref , gs_ref_memory_t * mem , client_name_t cname)"		6149770	0					
ANR	6149772	CompoundStatement		739:0:25302:25498	6149770	0					
ANR	6149773	IdentifierDeclStatement	uint size = strlen ( cstr ) ;	740:4:25308:25332	6149770	0	True				
ANR	6149774	IdentifierDecl	size = strlen ( cstr )		6149770	0					
ANR	6149775	IdentifierDeclType	uint		6149770	0					
ANR	6149776	Identifier	size		6149770	1					
ANR	6149777	AssignmentExpression	size = strlen ( cstr )		6149770	2		=			
ANR	6149778	Identifier	size		6149770	0					
ANR	6149779	CallExpression	strlen ( cstr )		6149770	1					
ANR	6149780	Callee	strlen		6149770	0					
ANR	6149781	Identifier	strlen		6149770	0					
ANR	6149782	ArgumentList	cstr		6149770	1					
ANR	6149783	Argument	cstr		6149770	0					
ANR	6149784	Identifier	cstr		6149770	0					
ANR	6149785	IdentifierDeclStatement	"int code = gs_alloc_string_ref ( mem , pref , a_all , size , cname ) ;"	741:4:25338:25399	6149770	1	True				
ANR	6149786	IdentifierDecl	"code = gs_alloc_string_ref ( mem , pref , a_all , size , cname )"		6149770	0					
ANR	6149787	IdentifierDeclType	int		6149770	0					
ANR	6149788	Identifier	code		6149770	1					
ANR	6149789	AssignmentExpression	"code = gs_alloc_string_ref ( mem , pref , a_all , size , cname )"		6149770	2		=			
ANR	6149790	Identifier	code		6149770	0					
ANR	6149791	CallExpression	"gs_alloc_string_ref ( mem , pref , a_all , size , cname )"		6149770	1					
ANR	6149792	Callee	gs_alloc_string_ref		6149770	0					
ANR	6149793	Identifier	gs_alloc_string_ref		6149770	0					
ANR	6149794	ArgumentList	mem		6149770	1					
ANR	6149795	Argument	mem		6149770	0					
ANR	6149796	Identifier	mem		6149770	0					
ANR	6149797	Argument	pref		6149770	1					
ANR	6149798	Identifier	pref		6149770	0					
ANR	6149799	Argument	a_all		6149770	2					
ANR	6149800	Identifier	a_all		6149770	0					
ANR	6149801	Argument	size		6149770	3					
ANR	6149802	Identifier	size		6149770	0					
ANR	6149803	Argument	cname		6149770	4					
ANR	6149804	Identifier	cname		6149770	0					
ANR	6149805	IfStatement	if ( code < 0 )		6149770	2					
ANR	6149806	Condition	code < 0	743:8:25410:25417	6149770	0	True				
ANR	6149807	RelationalExpression	code < 0		6149770	0		<			
ANR	6149808	Identifier	code		6149770	0					
ANR	6149809	PrimaryExpression	0		6149770	1					
ANR	6149810	ReturnStatement	return code ;	744:8:25428:25439	6149770	1	True				
ANR	6149811	Identifier	code		6149770	0					
ANR	6149812	ExpressionStatement	"memcpy ( pref -> value . bytes , cstr , size )"	745:4:25445:25482	6149770	3	True				
ANR	6149813	CallExpression	"memcpy ( pref -> value . bytes , cstr , size )"		6149770	0					
ANR	6149814	Callee	memcpy		6149770	0					
ANR	6149815	Identifier	memcpy		6149770	0					
ANR	6149816	ArgumentList	pref -> value . bytes		6149770	1					
ANR	6149817	Argument	pref -> value . bytes		6149770	0					
ANR	6149818	MemberAccess	pref -> value . bytes		6149770	0					
ANR	6149819	PtrMemberAccess	pref -> value		6149770	0					
ANR	6149820	Identifier	pref		6149770	0					
ANR	6149821	Identifier	value		6149770	1					
ANR	6149822	Identifier	bytes		6149770	1					
ANR	6149823	Argument	cstr		6149770	1					
ANR	6149824	Identifier	cstr		6149770	0					
ANR	6149825	Argument	size		6149770	2					
ANR	6149826	Identifier	size		6149770	0					
ANR	6149827	ReturnStatement	return 0 ;	746:4:25488:25496	6149770	4	True				
ANR	6149828	PrimaryExpression	0		6149770	0					
ANR	6149829	ReturnType	int		6149770	1					
ANR	6149830	Identifier	string_to_ref		6149770	2					
ANR	6149831	ParameterList	"const char * cstr , ref * pref , gs_ref_memory_t * mem , client_name_t cname"		6149770	3					
ANR	6149832	Parameter	const char * cstr	737:14:25214:25229	6149770	0	True				
ANR	6149833	ParameterType	const char *		6149770	0					
ANR	6149834	Identifier	cstr		6149770	1					
ANR	6149835	Parameter	ref * pref	737:32:25232:25241	6149770	1	True				
ANR	6149836	ParameterType	ref *		6149770	0					
ANR	6149837	Identifier	pref		6149770	1					
ANR	6149838	Parameter	gs_ref_memory_t * mem	737:44:25244:25264	6149770	2	True				
ANR	6149839	ParameterType	gs_ref_memory_t *		6149770	0					
ANR	6149840	Identifier	mem		6149770	1					
ANR	6149841	Parameter	client_name_t cname	738:14:25281:25299	6149770	3	True				
ANR	6149842	ParameterType	client_name_t		6149770	0					
ANR	6149843	Identifier	cname		6149770	1					
ANR	6149844	CFGEntryNode	ENTRY		6149770		True				
ANR	6149845	CFGExitNode	EXIT		6149770		True				
ANR	6149846	Symbol	cstr		6149770						
ANR	6149847	Symbol	a_all		6149770						
ANR	6149848	Symbol	strlen		6149770						
ANR	6149849	Symbol	code		6149770						
ANR	6149850	Symbol	mem		6149770						
ANR	6149851	Symbol	size		6149770						
ANR	6149852	Symbol	pref		6149770						
ANR	6149853	Symbol	pref -> value		6149770						
ANR	6149854	Symbol	pref -> value . bytes		6149770						
ANR	6149855	Symbol	cname		6149770						
ANR	6149856	Symbol	* pref		6149770						
ANR	6149857	Symbol	gs_alloc_string_ref		6149770						
ANR	6149858	Function	ref_to_string	751:0:25601:25903							
ANR	6149859	FunctionDef	"ref_to_string (const ref * pref , gs_memory_t * mem , client_name_t cname)"		6149858	0					
ANR	6149860	CompoundStatement		753:0:25680:25903	6149858	0					
ANR	6149861	IdentifierDeclStatement	uint size = r_size ( pref ) ;	754:4:25686:25710	6149858	0	True				
ANR	6149862	IdentifierDecl	size = r_size ( pref )		6149858	0					
ANR	6149863	IdentifierDeclType	uint		6149858	0					
ANR	6149864	Identifier	size		6149858	1					
ANR	6149865	AssignmentExpression	size = r_size ( pref )		6149858	2		=			
ANR	6149866	Identifier	size		6149858	0					
ANR	6149867	CallExpression	r_size ( pref )		6149858	1					
ANR	6149868	Callee	r_size		6149858	0					
ANR	6149869	Identifier	r_size		6149858	0					
ANR	6149870	ArgumentList	pref		6149858	1					
ANR	6149871	Argument	pref		6149858	0					
ANR	6149872	Identifier	pref		6149858	0					
ANR	6149873	IdentifierDeclStatement	"char * str = ( char * ) gs_alloc_string ( mem , size + 1 , cname ) ;"	755:4:25716:25773	6149858	1	True				
ANR	6149874	IdentifierDecl	"* str = ( char * ) gs_alloc_string ( mem , size + 1 , cname )"		6149858	0					
ANR	6149875	IdentifierDeclType	char *		6149858	0					
ANR	6149876	Identifier	str		6149858	1					
ANR	6149877	AssignmentExpression	"* str = ( char * ) gs_alloc_string ( mem , size + 1 , cname )"		6149858	2		=			
ANR	6149878	Identifier	str		6149858	0					
ANR	6149879	CastExpression	"( char * ) gs_alloc_string ( mem , size + 1 , cname )"		6149858	1					
ANR	6149880	CastTarget	char *		6149858	0					
ANR	6149881	CallExpression	"gs_alloc_string ( mem , size + 1 , cname )"		6149858	1					
ANR	6149882	Callee	gs_alloc_string		6149858	0					
ANR	6149883	Identifier	gs_alloc_string		6149858	0					
ANR	6149884	ArgumentList	mem		6149858	1					
ANR	6149885	Argument	mem		6149858	0					
ANR	6149886	Identifier	mem		6149858	0					
ANR	6149887	Argument	size + 1		6149858	1					
ANR	6149888	AdditiveExpression	size + 1		6149858	0		+			
ANR	6149889	Identifier	size		6149858	0					
ANR	6149890	PrimaryExpression	1		6149858	1					
ANR	6149891	Argument	cname		6149858	2					
ANR	6149892	Identifier	cname		6149858	0					
ANR	6149893	IfStatement	if ( str == 0 )		6149858	2					
ANR	6149894	Condition	str == 0	757:8:25784:25791	6149858	0	True				
ANR	6149895	EqualityExpression	str == 0		6149858	0		==			
ANR	6149896	Identifier	str		6149858	0					
ANR	6149897	PrimaryExpression	0		6149858	1					
ANR	6149898	ReturnStatement	return 0 ;	758:8:25802:25810	6149858	1	True				
ANR	6149899	PrimaryExpression	0		6149858	0					
ANR	6149900	ExpressionStatement	"memcpy ( str , ( const char * ) pref -> value . bytes , size )"	759:4:25816:25866	6149858	3	True				
ANR	6149901	CallExpression	"memcpy ( str , ( const char * ) pref -> value . bytes , size )"		6149858	0					
ANR	6149902	Callee	memcpy		6149858	0					
ANR	6149903	Identifier	memcpy		6149858	0					
ANR	6149904	ArgumentList	str		6149858	1					
ANR	6149905	Argument	str		6149858	0					
ANR	6149906	Identifier	str		6149858	0					
ANR	6149907	Argument	( const char * ) pref -> value . bytes		6149858	1					
ANR	6149908	CastExpression	( const char * ) pref -> value . bytes		6149858	0					
ANR	6149909	CastTarget	const char *		6149858	0					
ANR	6149910	MemberAccess	pref -> value . bytes		6149858	1					
ANR	6149911	PtrMemberAccess	pref -> value		6149858	0					
ANR	6149912	Identifier	pref		6149858	0					
ANR	6149913	Identifier	value		6149858	1					
ANR	6149914	Identifier	bytes		6149858	1					
ANR	6149915	Argument	size		6149858	2					
ANR	6149916	Identifier	size		6149858	0					
ANR	6149917	ExpressionStatement	str [ size ] = 0	760:4:25872:25885	6149858	4	True				
ANR	6149918	AssignmentExpression	str [ size ] = 0		6149858	0		=			
ANR	6149919	ArrayIndexing	str [ size ]		6149858	0					
ANR	6149920	Identifier	str		6149858	0					
ANR	6149921	Identifier	size		6149858	1					
ANR	6149922	PrimaryExpression	0		6149858	1					
ANR	6149923	ReturnStatement	return str ;	761:4:25891:25901	6149858	5	True				
ANR	6149924	Identifier	str		6149858	0					
ANR	6149925	ReturnType	char *		6149858	1					
ANR	6149926	Identifier	ref_to_string		6149858	2					
ANR	6149927	ParameterList	"const ref * pref , gs_memory_t * mem , client_name_t cname"		6149858	3					
ANR	6149928	Parameter	const ref * pref	752:14:25622:25637	6149858	0	True				
ANR	6149929	ParameterType	const ref *		6149858	0					
ANR	6149930	Identifier	pref		6149858	1					
ANR	6149931	Parameter	gs_memory_t * mem	752:32:25640:25656	6149858	1	True				
ANR	6149932	ParameterType	gs_memory_t *		6149858	0					
ANR	6149933	Identifier	mem		6149858	1					
ANR	6149934	Parameter	client_name_t cname	752:51:25659:25677	6149858	2	True				
ANR	6149935	ParameterType	client_name_t		6149858	0					
ANR	6149936	Identifier	cname		6149858	1					
ANR	6149937	CFGEntryNode	ENTRY		6149858		True				
ANR	6149938	CFGExitNode	EXIT		6149858		True				
ANR	6149939	Symbol	str		6149858						
ANR	6149940	Symbol	* size		6149858						
ANR	6149941	Symbol	mem		6149858						
ANR	6149942	Symbol	size		6149858						
ANR	6149943	Symbol	pref		6149858						
ANR	6149944	Symbol	r_size		6149858						
ANR	6149945	Symbol	pref -> value		6149858						
ANR	6149946	Symbol	pref -> value . bytes		6149858						
ANR	6149947	Symbol	cname		6149858						
ANR	6149948	Symbol	* pref		6149858						
ANR	6149949	Symbol	gs_alloc_string		6149858						
ANR	6149950	Symbol	* str		6149858						
ANR	6149951	Function	num_params	773:0:26346:27083							
ANR	6149952	FunctionDef	"num_params (const ref * op , int count , double * pval)"		6149951	0					
ANR	6149953	CompoundStatement		775:0:26402:27083	6149951	0					
ANR	6149954	IdentifierDeclStatement	int mask = 0 ;	776:4:26408:26420	6149951	0	True				
ANR	6149955	IdentifierDecl	mask = 0		6149951	0					
ANR	6149956	IdentifierDeclType	int		6149951	0					
ANR	6149957	Identifier	mask		6149951	1					
ANR	6149958	AssignmentExpression	mask = 0		6149951	2		=			
ANR	6149959	Identifier	mask		6149951	0					
ANR	6149960	PrimaryExpression	0		6149951	1					
ANR	6149961	ExpressionStatement	pval += count	778:4:26427:26440	6149951	1	True				
ANR	6149962	AssignmentExpression	pval += count		6149951	0		+=			
ANR	6149963	Identifier	pval		6149951	0					
ANR	6149964	Identifier	count		6149951	1					
ANR	6149965	WhileStatement	while ( -- count >= 0 )		6149951	2					
ANR	6149966	Condition	-- count >= 0	779:11:26453:26464	6149951	0	True				
ANR	6149967	RelationalExpression	-- count >= 0		6149951	0		>=			
ANR	6149968	UnaryExpression	-- count		6149951	0					
ANR	6149969	IncDec	--		6149951	0					
ANR	6149970	Identifier	count		6149951	1					
ANR	6149971	PrimaryExpression	0		6149951	1					
ANR	6149972	CompoundStatement		5:25:64:64	6149951	1					
ANR	6149973	ExpressionStatement	mask <<= 1	780:8:26477:26487	6149951	0	True				
ANR	6149974	AssignmentExpression	mask <<= 1		6149951	0		<<=			
ANR	6149975	Identifier	mask		6149951	0					
ANR	6149976	PrimaryExpression	1		6149951	1					
ANR	6149977	SwitchStatement	switch ( r_type ( op ) )		6149951	1					
ANR	6149978	Condition	r_type ( op )	781:16:26505:26514	6149951	0	True				
ANR	6149979	CallExpression	r_type ( op )		6149951	0					
ANR	6149980	Callee	r_type		6149951	0					
ANR	6149981	Identifier	r_type		6149951	0					
ANR	6149982	ArgumentList	op		6149951	1					
ANR	6149983	Argument	op		6149951	0					
ANR	6149984	Identifier	op		6149951	0					
ANR	6149985	CompoundStatement		7:28:114:114	6149951	1					
ANR	6149986	Label	case t_real :	782:12:26531:26542	6149951	0	True				
ANR	6149987	Identifier	t_real		6149951	0					
ANR	6149988	ExpressionStatement	* -- pval = op -> value . realval	783:16:26560:26587	6149951	1	True				
ANR	6149989	AssignmentExpression	* -- pval = op -> value . realval		6149951	0		=			
ANR	6149990	UnaryOperationExpression	* -- pval		6149951	0					
ANR	6149991	UnaryOperator	*		6149951	0					
ANR	6149992	UnaryExpression	-- pval		6149951	1					
ANR	6149993	IncDec	--		6149951	0					
ANR	6149994	Identifier	pval		6149951	1					
ANR	6149995	MemberAccess	op -> value . realval		6149951	1					
ANR	6149996	PtrMemberAccess	op -> value		6149951	0					
ANR	6149997	Identifier	op		6149951	0					
ANR	6149998	Identifier	value		6149951	1					
ANR	6149999	Identifier	realval		6149951	1					
ANR	6150000	BreakStatement	break ;	784:16:26605:26610	6149951	2	True				
ANR	6150001	Label	case t_integer :	785:12:26624:26638	6149951	3	True				
ANR	6150002	Identifier	t_integer		6149951	0					
ANR	6150003	ExpressionStatement	* -- pval = ( double ) op -> value . intval	786:16:26656:26690	6149951	4	True				
ANR	6150004	AssignmentExpression	* -- pval = ( double ) op -> value . intval		6149951	0		=			
ANR	6150005	UnaryOperationExpression	* -- pval		6149951	0					
ANR	6150006	UnaryOperator	*		6149951	0					
ANR	6150007	UnaryExpression	-- pval		6149951	1					
ANR	6150008	IncDec	--		6149951	0					
ANR	6150009	Identifier	pval		6149951	1					
ANR	6150010	CastExpression	( double ) op -> value . intval		6149951	1					
ANR	6150011	CastTarget	double		6149951	0					
ANR	6150012	MemberAccess	op -> value . intval		6149951	1					
ANR	6150013	PtrMemberAccess	op -> value		6149951	0					
ANR	6150014	Identifier	op		6149951	0					
ANR	6150015	Identifier	value		6149951	1					
ANR	6150016	Identifier	intval		6149951	1					
ANR	6150017	ExpressionStatement	mask ++	787:16:26708:26714	6149951	5	True				
ANR	6150018	PostIncDecOperationExpression	mask ++		6149951	0					
ANR	6150019	Identifier	mask		6149951	0					
ANR	6150020	IncDec	++		6149951	1					
ANR	6150021	BreakStatement	break ;	788:16:26732:26737	6149951	6	True				
ANR	6150022	Label	case t__invalid :	789:12:26751:26766	6149951	7	True				
ANR	6150023	Identifier	t__invalid		6149951	0					
ANR	6150024	ExpressionStatement	return_error ( gs_error_stackunderflow )	790:16:26784:26821	6149951	8	True				
ANR	6150025	CallExpression	return_error ( gs_error_stackunderflow )		6149951	0					
ANR	6150026	Callee	return_error		6149951	0					
ANR	6150027	Identifier	return_error		6149951	0					
ANR	6150028	ArgumentList	gs_error_stackunderflow		6149951	1					
ANR	6150029	Argument	gs_error_stackunderflow		6149951	0					
ANR	6150030	Identifier	gs_error_stackunderflow		6149951	0					
ANR	6150031	Label	default :	791:12:26835:26842	6149951	9	True				
ANR	6150032	Identifier	default		6149951	0					
ANR	6150033	ExpressionStatement	return_error ( gs_error_typecheck )	792:16:26860:26892	6149951	10	True				
ANR	6150034	CallExpression	return_error ( gs_error_typecheck )		6149951	0					
ANR	6150035	Callee	return_error		6149951	0					
ANR	6150036	Identifier	return_error		6149951	0					
ANR	6150037	ArgumentList	gs_error_typecheck		6149951	1					
ANR	6150038	Argument	gs_error_typecheck		6149951	0					
ANR	6150039	Identifier	gs_error_typecheck		6149951	0					
ANR	6150040	ExpressionStatement	op --	794:8:26912:26916	6149951	2	True				
ANR	6150041	PostIncDecOperationExpression	op --		6149951	0					
ANR	6150042	Identifier	op		6149951	0					
ANR	6150043	IncDec	--		6149951	1					
ANR	6150044	ReturnStatement	return ( mask < 0 ? 0 : mask ) ;	798:4:27053:27081	6149951	3	True				
ANR	6150045	ConditionalExpression	mask < 0 ? 0 : mask		6149951	0					
ANR	6150046	Condition	mask < 0		6149951	0					
ANR	6150047	RelationalExpression	mask < 0		6149951	0		<			
ANR	6150048	Identifier	mask		6149951	0					
ANR	6150049	PrimaryExpression	0		6149951	1					
ANR	6150050	PrimaryExpression	0		6149951	1					
ANR	6150051	Identifier	mask		6149951	2					
ANR	6150052	ReturnType	int		6149951	1					
ANR	6150053	Identifier	num_params		6149951	2					
ANR	6150054	ParameterList	"const ref * op , int count , double * pval"		6149951	3					
ANR	6150055	Parameter	const ref * op	774:11:26361:26374	6149951	0	True				
ANR	6150056	ParameterType	const ref *		6149951	0					
ANR	6150057	Identifier	op		6149951	1					
ANR	6150058	Parameter	int count	774:27:26377:26385	6149951	1	True				
ANR	6150059	ParameterType	int		6149951	0					
ANR	6150060	Identifier	count		6149951	1					
ANR	6150061	Parameter	double * pval	774:38:26388:26399	6149951	2	True				
ANR	6150062	ParameterType	double *		6149951	0					
ANR	6150063	Identifier	pval		6149951	1					
ANR	6150064	CFGEntryNode	ENTRY		6149951		True				
ANR	6150065	CFGExitNode	EXIT		6149951		True				
ANR	6150066	Symbol	op		6149951						
ANR	6150067	Symbol	* -- pval		6149951						
ANR	6150068	Symbol	* op		6149951						
ANR	6150069	Symbol	* pval		6149951						
ANR	6150070	Symbol	pval		6149951						
ANR	6150071	Symbol	count		6149951						
ANR	6150072	Symbol	op -> value . realval		6149951						
ANR	6150073	Symbol	gs_error_typecheck		6149951						
ANR	6150074	Symbol	gs_error_stackunderflow		6149951						
ANR	6150075	Symbol	op -> value		6149951						
ANR	6150076	Symbol	op -> value . intval		6149951						
ANR	6150077	Symbol	r_type		6149951						
ANR	6150078	Symbol	mask		6149951						
ANR	6150079	Function	float_params	801:0:27146:27653							
ANR	6150080	FunctionDef	"float_params (const ref * op , int count , float * pval)"		6150079	0					
ANR	6150081	CompoundStatement		803:0:27203:27653	6150079	0					
ANR	6150082	ForStatement	for ( pval += count ; -- count >= 0 ; -- op )		6150079	0					
ANR	6150083	ForInit	pval += count ;	804:9:27214:27227	6150079	0	True				
ANR	6150084	AssignmentExpression	pval += count		6150079	0		+=			
ANR	6150085	Identifier	pval		6150079	0					
ANR	6150086	Identifier	count		6150079	1					
ANR	6150087	Condition	-- count >= 0	804:24:27229:27240	6150079	1	True				
ANR	6150088	RelationalExpression	-- count >= 0		6150079	0		>=			
ANR	6150089	UnaryExpression	-- count		6150079	0					
ANR	6150090	IncDec	--		6150079	0					
ANR	6150091	Identifier	count		6150079	1					
ANR	6150092	PrimaryExpression	0		6150079	1					
ANR	6150093	UnaryExpression	-- op	804:38:27243:27246	6150079	2	True				
ANR	6150094	IncDec	--		6150079	0					
ANR	6150095	Identifier	op		6150079	1					
ANR	6150096	SwitchStatement	switch ( r_type ( op ) )		6150079	3					
ANR	6150097	Condition	r_type ( op )	805:16:27265:27274	6150079	0	True				
ANR	6150098	CallExpression	r_type ( op )		6150079	0					
ANR	6150099	Callee	r_type		6150079	0					
ANR	6150100	Identifier	r_type		6150079	0					
ANR	6150101	ArgumentList	op		6150079	1					
ANR	6150102	Argument	op		6150079	0					
ANR	6150103	Identifier	op		6150079	0					
ANR	6150104	CompoundStatement		3:28:73:73	6150079	1					
ANR	6150105	Label	case t_real :	806:12:27291:27302	6150079	0	True				
ANR	6150106	Identifier	t_real		6150079	0					
ANR	6150107	ExpressionStatement	* -- pval = op -> value . realval	807:16:27320:27347	6150079	1	True				
ANR	6150108	AssignmentExpression	* -- pval = op -> value . realval		6150079	0		=			
ANR	6150109	UnaryOperationExpression	* -- pval		6150079	0					
ANR	6150110	UnaryOperator	*		6150079	0					
ANR	6150111	UnaryExpression	-- pval		6150079	1					
ANR	6150112	IncDec	--		6150079	0					
ANR	6150113	Identifier	pval		6150079	1					
ANR	6150114	MemberAccess	op -> value . realval		6150079	1					
ANR	6150115	PtrMemberAccess	op -> value		6150079	0					
ANR	6150116	Identifier	op		6150079	0					
ANR	6150117	Identifier	value		6150079	1					
ANR	6150118	Identifier	realval		6150079	1					
ANR	6150119	BreakStatement	break ;	808:16:27365:27370	6150079	2	True				
ANR	6150120	Label	case t_integer :	809:12:27384:27398	6150079	3	True				
ANR	6150121	Identifier	t_integer		6150079	0					
ANR	6150122	ExpressionStatement	* -- pval = ( float ) op -> value . intval	810:16:27416:27449	6150079	4	True				
ANR	6150123	AssignmentExpression	* -- pval = ( float ) op -> value . intval		6150079	0		=			
ANR	6150124	UnaryOperationExpression	* -- pval		6150079	0					
ANR	6150125	UnaryOperator	*		6150079	0					
ANR	6150126	UnaryExpression	-- pval		6150079	1					
ANR	6150127	IncDec	--		6150079	0					
ANR	6150128	Identifier	pval		6150079	1					
ANR	6150129	CastExpression	( float ) op -> value . intval		6150079	1					
ANR	6150130	CastTarget	float		6150079	0					
ANR	6150131	MemberAccess	op -> value . intval		6150079	1					
ANR	6150132	PtrMemberAccess	op -> value		6150079	0					
ANR	6150133	Identifier	op		6150079	0					
ANR	6150134	Identifier	value		6150079	1					
ANR	6150135	Identifier	intval		6150079	1					
ANR	6150136	BreakStatement	break ;	811:16:27467:27472	6150079	5	True				
ANR	6150137	Label	case t__invalid :	812:12:27486:27501	6150079	6	True				
ANR	6150138	Identifier	t__invalid		6150079	0					
ANR	6150139	ExpressionStatement	return_error ( gs_error_stackunderflow )	813:16:27519:27556	6150079	7	True				
ANR	6150140	CallExpression	return_error ( gs_error_stackunderflow )		6150079	0					
ANR	6150141	Callee	return_error		6150079	0					
ANR	6150142	Identifier	return_error		6150079	0					
ANR	6150143	ArgumentList	gs_error_stackunderflow		6150079	1					
ANR	6150144	Argument	gs_error_stackunderflow		6150079	0					
ANR	6150145	Identifier	gs_error_stackunderflow		6150079	0					
ANR	6150146	Label	default :	814:12:27570:27577	6150079	8	True				
ANR	6150147	Identifier	default		6150079	0					
ANR	6150148	ExpressionStatement	return_error ( gs_error_typecheck )	815:16:27595:27627	6150079	9	True				
ANR	6150149	CallExpression	return_error ( gs_error_typecheck )		6150079	0					
ANR	6150150	Callee	return_error		6150079	0					
ANR	6150151	Identifier	return_error		6150079	0					
ANR	6150152	ArgumentList	gs_error_typecheck		6150079	1					
ANR	6150153	Argument	gs_error_typecheck		6150079	0					
ANR	6150154	Identifier	gs_error_typecheck		6150079	0					
ANR	6150155	ReturnStatement	return 0 ;	817:4:27643:27651	6150079	1	True				
ANR	6150156	PrimaryExpression	0		6150079	0					
ANR	6150157	ReturnType	int		6150079	1					
ANR	6150158	Identifier	float_params		6150079	2					
ANR	6150159	ParameterList	"const ref * op , int count , float * pval"		6150079	3					
ANR	6150160	Parameter	const ref * op	802:13:27163:27176	6150079	0	True				
ANR	6150161	ParameterType	const ref *		6150079	0					
ANR	6150162	Identifier	op		6150079	1					
ANR	6150163	Parameter	int count	802:29:27179:27187	6150079	1	True				
ANR	6150164	ParameterType	int		6150079	0					
ANR	6150165	Identifier	count		6150079	1					
ANR	6150166	Parameter	float * pval	802:40:27190:27200	6150079	2	True				
ANR	6150167	ParameterType	float *		6150079	0					
ANR	6150168	Identifier	pval		6150079	1					
ANR	6150169	CFGEntryNode	ENTRY		6150079		True				
ANR	6150170	CFGExitNode	EXIT		6150079		True				
ANR	6150171	Symbol	op		6150079						
ANR	6150172	Symbol	* -- pval		6150079						
ANR	6150173	Symbol	gs_error_typecheck		6150079						
ANR	6150174	Symbol	* pval		6150079						
ANR	6150175	Symbol	* op		6150079						
ANR	6150176	Symbol	pval		6150079						
ANR	6150177	Symbol	gs_error_stackunderflow		6150079						
ANR	6150178	Symbol	op -> value		6150079						
ANR	6150179	Symbol	count		6150079						
ANR	6150180	Symbol	op -> value . realval		6150079						
ANR	6150181	Symbol	op -> value . intval		6150079						
ANR	6150182	Symbol	r_type		6150079						
ANR	6150183	Function	process_float_array	821:0:27729:28629							
ANR	6150184	FunctionDef	"process_float_array (const gs_memory_t * mem , const ref * parray , int count , float * pval)"		6150183	0					
ANR	6150185	CompoundStatement		823:0:27822:28629	6150183	0					
ANR	6150186	IdentifierDeclStatement	"int code = 0 , indx0 = 0 ;"	824:4:27828:27859	6150183	0	True				
ANR	6150187	IdentifierDecl	code = 0		6150183	0					
ANR	6150188	IdentifierDeclType	int		6150183	0					
ANR	6150189	Identifier	code		6150183	1					
ANR	6150190	AssignmentExpression	code = 0		6150183	2		=			
ANR	6150191	Identifier	code		6150183	0					
ANR	6150192	PrimaryExpression	0		6150183	1					
ANR	6150193	IdentifierDecl	indx0 = 0		6150183	1					
ANR	6150194	IdentifierDeclType	int		6150183	0					
ANR	6150195	Identifier	indx0		6150183	1					
ANR	6150196	AssignmentExpression	indx0 = 0		6150183	2		=			
ANR	6150197	Identifier	indx0		6150183	0					
ANR	6150198	PrimaryExpression	0		6150183	1					
ANR	6150199	IfStatement	"if ( r_has_type ( parray , t_array ) )"		6150183	1					
ANR	6150200	Condition	"r_has_type ( parray , t_array )"	827:8:27942:27968	6150183	0	True				
ANR	6150201	CallExpression	"r_has_type ( parray , t_array )"		6150183	0					
ANR	6150202	Callee	r_has_type		6150183	0					
ANR	6150203	Identifier	r_has_type		6150183	0					
ANR	6150204	ArgumentList	parray		6150183	1					
ANR	6150205	Argument	parray		6150183	0					
ANR	6150206	Identifier	parray		6150183	0					
ANR	6150207	Argument	t_array		6150183	1					
ANR	6150208	Identifier	t_array		6150183	0					
ANR	6150209	ReturnStatement	"return float_params ( parray -> value . refs + count - 1 , count , pval ) ;"	828:8:27979:28043	6150183	1	True				
ANR	6150210	CallExpression	"float_params ( parray -> value . refs + count - 1 , count , pval )"		6150183	0					
ANR	6150211	Callee	float_params		6150183	0					
ANR	6150212	Identifier	float_params		6150183	0					
ANR	6150213	ArgumentList	parray -> value . refs + count - 1		6150183	1					
ANR	6150214	Argument	parray -> value . refs + count - 1		6150183	0					
ANR	6150215	AdditiveExpression	parray -> value . refs + count - 1		6150183	0		+			
ANR	6150216	MemberAccess	parray -> value . refs		6150183	0					
ANR	6150217	PtrMemberAccess	parray -> value		6150183	0					
ANR	6150218	Identifier	parray		6150183	0					
ANR	6150219	Identifier	value		6150183	1					
ANR	6150220	Identifier	refs		6150183	1					
ANR	6150221	AdditiveExpression	count - 1		6150183	1		-			
ANR	6150222	Identifier	count		6150183	0					
ANR	6150223	PrimaryExpression	1		6150183	1					
ANR	6150224	Argument	count		6150183	1					
ANR	6150225	Identifier	count		6150183	0					
ANR	6150226	Argument	pval		6150183	2					
ANR	6150227	Identifier	pval		6150183	0					
ANR	6150228	WhileStatement	while ( count > 0 && code >= 0 )		6150183	2					
ANR	6150229	Condition	count > 0 && code >= 0	831:11:28114:28135	6150183	0	True				
ANR	6150230	AndExpression	count > 0 && code >= 0		6150183	0		&&			
ANR	6150231	RelationalExpression	count > 0		6150183	0		>			
ANR	6150232	Identifier	count		6150183	0					
ANR	6150233	PrimaryExpression	0		6150183	1					
ANR	6150234	RelationalExpression	code >= 0		6150183	1		>=			
ANR	6150235	Identifier	code		6150183	0					
ANR	6150236	PrimaryExpression	0		6150183	1					
ANR	6150237	CompoundStatement		11:8:354:374	6150183	1					
ANR	6150238	IdentifierDeclStatement	"int i , subcount ;"	832:8:28148:28167	6150183	0	True				
ANR	6150239	IdentifierDecl	i		6150183	0					
ANR	6150240	IdentifierDeclType	int		6150183	0					
ANR	6150241	Identifier	i		6150183	1					
ANR	6150242	IdentifierDecl	subcount		6150183	1					
ANR	6150243	IdentifierDeclType	int		6150183	0					
ANR	6150244	Identifier	subcount		6150183	1					
ANR	6150245	IdentifierDeclStatement	ref ref_buff [ 20 ] ;	833:8:28177:28197	6150183	1	True				
ANR	6150246	IdentifierDecl	ref_buff [ 20 ]		6150183	0					
ANR	6150247	IdentifierDeclType	ref [ 20 ]		6150183	0					
ANR	6150248	Identifier	ref_buff		6150183	1					
ANR	6150249	PrimaryExpression	20		6150183	2					
ANR	6150250	ExpressionStatement	subcount = ( count > countof ( ref_buff ) ? countof ( ref_buff ) : count )	835:8:28232:28298	6150183	2	True				
ANR	6150251	AssignmentExpression	subcount = ( count > countof ( ref_buff ) ? countof ( ref_buff ) : count )		6150183	0		=			
ANR	6150252	Identifier	subcount		6150183	0					
ANR	6150253	ConditionalExpression	count > countof ( ref_buff ) ? countof ( ref_buff ) : count		6150183	1					
ANR	6150254	Condition	count > countof ( ref_buff )		6150183	0					
ANR	6150255	RelationalExpression	count > countof ( ref_buff )		6150183	0		>			
ANR	6150256	Identifier	count		6150183	0					
ANR	6150257	CallExpression	countof ( ref_buff )		6150183	1					
ANR	6150258	Callee	countof		6150183	0					
ANR	6150259	Identifier	countof		6150183	0					
ANR	6150260	ArgumentList	ref_buff		6150183	1					
ANR	6150261	Argument	ref_buff		6150183	0					
ANR	6150262	Identifier	ref_buff		6150183	0					
ANR	6150263	CallExpression	countof ( ref_buff )		6150183	1					
ANR	6150264	Callee	countof		6150183	0					
ANR	6150265	Identifier	countof		6150183	0					
ANR	6150266	ArgumentList	ref_buff		6150183	1					
ANR	6150267	Argument	ref_buff		6150183	0					
ANR	6150268	Identifier	ref_buff		6150183	0					
ANR	6150269	Identifier	count		6150183	2					
ANR	6150270	ForStatement	for ( i = 0 ; i < subcount && code >= 0 ; i ++ )		6150183	3					
ANR	6150271	ForInit	i = 0 ;	836:13:28313:28318	6150183	0	True				
ANR	6150272	AssignmentExpression	i = 0		6150183	0		=			
ANR	6150273	Identifier	i		6150183	0					
ANR	6150274	PrimaryExpression	0		6150183	1					
ANR	6150275	Condition	i < subcount && code >= 0	836:20:28320:28344	6150183	1	True				
ANR	6150276	AndExpression	i < subcount && code >= 0		6150183	0		&&			
ANR	6150277	RelationalExpression	i < subcount		6150183	0		<			
ANR	6150278	Identifier	i		6150183	0					
ANR	6150279	Identifier	subcount		6150183	1					
ANR	6150280	RelationalExpression	code >= 0		6150183	1		>=			
ANR	6150281	Identifier	code		6150183	0					
ANR	6150282	PrimaryExpression	0		6150183	1					
ANR	6150283	PostIncDecOperationExpression	i ++	836:47:28347:28349	6150183	2	True				
ANR	6150284	Identifier	i		6150183	0					
ANR	6150285	IncDec	++		6150183	1					
ANR	6150286	ExpressionStatement	"code = array_get ( mem , parray , ( long ) ( i + indx0 ) , & ref_buff [ i ] )"	837:12:28364:28426	6150183	3	True				
ANR	6150287	AssignmentExpression	"code = array_get ( mem , parray , ( long ) ( i + indx0 ) , & ref_buff [ i ] )"		6150183	0		=			
ANR	6150288	Identifier	code		6150183	0					
ANR	6150289	CallExpression	"array_get ( mem , parray , ( long ) ( i + indx0 ) , & ref_buff [ i ] )"		6150183	1					
ANR	6150290	Callee	array_get		6150183	0					
ANR	6150291	Identifier	array_get		6150183	0					
ANR	6150292	ArgumentList	mem		6150183	1					
ANR	6150293	Argument	mem		6150183	0					
ANR	6150294	Identifier	mem		6150183	0					
ANR	6150295	Argument	parray		6150183	1					
ANR	6150296	Identifier	parray		6150183	0					
ANR	6150297	Argument	( long ) ( i + indx0 )		6150183	2					
ANR	6150298	CastExpression	( long ) ( i + indx0 )		6150183	0					
ANR	6150299	CastTarget	long		6150183	0					
ANR	6150300	AdditiveExpression	i + indx0		6150183	1		+			
ANR	6150301	Identifier	i		6150183	0					
ANR	6150302	Identifier	indx0		6150183	1					
ANR	6150303	Argument	& ref_buff [ i ]		6150183	3					
ANR	6150304	UnaryOperationExpression	& ref_buff [ i ]		6150183	0					
ANR	6150305	UnaryOperator	&		6150183	0					
ANR	6150306	ArrayIndexing	ref_buff [ i ]		6150183	1					
ANR	6150307	Identifier	ref_buff		6150183	0					
ANR	6150308	Identifier	i		6150183	1					
ANR	6150309	IfStatement	if ( code >= 0 )		6150183	4					
ANR	6150310	Condition	code >= 0	838:12:28440:28448	6150183	0	True				
ANR	6150311	RelationalExpression	code >= 0		6150183	0		>=			
ANR	6150312	Identifier	code		6150183	0					
ANR	6150313	PrimaryExpression	0		6150183	1					
ANR	6150314	ExpressionStatement	"code = float_params ( ref_buff + subcount - 1 , subcount , pval )"	839:12:28463:28523	6150183	1	True				
ANR	6150315	AssignmentExpression	"code = float_params ( ref_buff + subcount - 1 , subcount , pval )"		6150183	0		=			
ANR	6150316	Identifier	code		6150183	0					
ANR	6150317	CallExpression	"float_params ( ref_buff + subcount - 1 , subcount , pval )"		6150183	1					
ANR	6150318	Callee	float_params		6150183	0					
ANR	6150319	Identifier	float_params		6150183	0					
ANR	6150320	ArgumentList	ref_buff + subcount - 1		6150183	1					
ANR	6150321	Argument	ref_buff + subcount - 1		6150183	0					
ANR	6150322	AdditiveExpression	ref_buff + subcount - 1		6150183	0		+			
ANR	6150323	Identifier	ref_buff		6150183	0					
ANR	6150324	AdditiveExpression	subcount - 1		6150183	1		-			
ANR	6150325	Identifier	subcount		6150183	0					
ANR	6150326	PrimaryExpression	1		6150183	1					
ANR	6150327	Argument	subcount		6150183	1					
ANR	6150328	Identifier	subcount		6150183	0					
ANR	6150329	Argument	pval		6150183	2					
ANR	6150330	Identifier	pval		6150183	0					
ANR	6150331	ExpressionStatement	count -= subcount	840:8:28533:28550	6150183	5	True				
ANR	6150332	AssignmentExpression	count -= subcount		6150183	0		-=			
ANR	6150333	Identifier	count		6150183	0					
ANR	6150334	Identifier	subcount		6150183	1					
ANR	6150335	ExpressionStatement	pval += subcount	841:8:28560:28576	6150183	6	True				
ANR	6150336	AssignmentExpression	pval += subcount		6150183	0		+=			
ANR	6150337	Identifier	pval		6150183	0					
ANR	6150338	Identifier	subcount		6150183	1					
ANR	6150339	ExpressionStatement	indx0 += subcount	842:8:28586:28603	6150183	7	True				
ANR	6150340	AssignmentExpression	indx0 += subcount		6150183	0		+=			
ANR	6150341	Identifier	indx0		6150183	0					
ANR	6150342	Identifier	subcount		6150183	1					
ANR	6150343	ReturnStatement	return code ;	845:4:28616:28627	6150183	3	True				
ANR	6150344	Identifier	code		6150183	0					
ANR	6150345	ReturnType	int		6150183	1					
ANR	6150346	Identifier	process_float_array		6150183	2					
ANR	6150347	ParameterList	"const gs_memory_t * mem , const ref * parray , int count , float * pval"		6150183	3					
ANR	6150348	Parameter	const gs_memory_t * mem	822:20:27753:27774	6150183	0	True				
ANR	6150349	ParameterType	const gs_memory_t *		6150183	0					
ANR	6150350	Identifier	mem		6150183	1					
ANR	6150351	Parameter	const ref * parray	822:44:27777:27794	6150183	1	True				
ANR	6150352	ParameterType	const ref *		6150183	0					
ANR	6150353	Identifier	parray		6150183	1					
ANR	6150354	Parameter	int count	822:64:27797:27805	6150183	2	True				
ANR	6150355	ParameterType	int		6150183	0					
ANR	6150356	Identifier	count		6150183	1					
ANR	6150357	Parameter	float * pval	822:75:27808:27819	6150183	3	True				
ANR	6150358	ParameterType	float *		6150183	0					
ANR	6150359	Identifier	pval		6150183	1					
ANR	6150360	CFGEntryNode	ENTRY		6150183		True				
ANR	6150361	CFGExitNode	EXIT		6150183		True				
ANR	6150362	Symbol	parray		6150183						
ANR	6150363	Symbol	code		6150183						
ANR	6150364	Symbol	pval		6150183						
ANR	6150365	Symbol	float_params		6150183						
ANR	6150366	Symbol	parray -> value . refs		6150183						
ANR	6150367	Symbol	array_get		6150183						
ANR	6150368	Symbol	count		6150183						
ANR	6150369	Symbol	i		6150183						
ANR	6150370	Symbol	indx0		6150183						
ANR	6150371	Symbol	subcount		6150183						
ANR	6150372	Symbol	ref_buff		6150183						
ANR	6150373	Symbol	countof		6150183						
ANR	6150374	Symbol	r_has_type		6150183						
ANR	6150375	Symbol	mem		6150183						
ANR	6150376	Symbol	t_array		6150183						
ANR	6150377	Symbol	* parray		6150183						
ANR	6150378	Symbol	parray -> value		6150183						
ANR	6150379	Function	real_param	851:0:28814:29220							
ANR	6150380	FunctionDef	"real_param (const ref * op , double * pparam)"		6150379	0					
ANR	6150381	CompoundStatement		853:0:28861:29220	6150379	0					
ANR	6150382	SwitchStatement	switch ( r_type ( op ) )		6150379	0					
ANR	6150383	Condition	r_type ( op )	854:12:28875:28884	6150379	0	True				
ANR	6150384	CallExpression	r_type ( op )		6150379	0					
ANR	6150385	Callee	r_type		6150379	0					
ANR	6150386	Identifier	r_type		6150379	0					
ANR	6150387	ArgumentList	op		6150379	1					
ANR	6150388	Argument	op		6150379	0					
ANR	6150389	Identifier	op		6150379	0					
ANR	6150390	CompoundStatement		2:24:25:25	6150379	1					
ANR	6150391	Label	case t_integer :	855:8:28897:28911	6150379	0	True				
ANR	6150392	Identifier	t_integer		6150379	0					
ANR	6150393	ExpressionStatement	* pparam = ( double ) op -> value . intval	856:12:28925:28959	6150379	1	True				
ANR	6150394	AssignmentExpression	* pparam = ( double ) op -> value . intval		6150379	0		=			
ANR	6150395	UnaryOperationExpression	* pparam		6150379	0					
ANR	6150396	UnaryOperator	*		6150379	0					
ANR	6150397	Identifier	pparam		6150379	1					
ANR	6150398	CastExpression	( double ) op -> value . intval		6150379	1					
ANR	6150399	CastTarget	double		6150379	0					
ANR	6150400	MemberAccess	op -> value . intval		6150379	1					
ANR	6150401	PtrMemberAccess	op -> value		6150379	0					
ANR	6150402	Identifier	op		6150379	0					
ANR	6150403	Identifier	value		6150379	1					
ANR	6150404	Identifier	intval		6150379	1					
ANR	6150405	BreakStatement	break ;	857:12:28973:28978	6150379	2	True				
ANR	6150406	Label	case t_real :	858:8:28988:28999	6150379	3	True				
ANR	6150407	Identifier	t_real		6150379	0					
ANR	6150408	ExpressionStatement	* pparam = op -> value . realval	859:12:29013:29040	6150379	4	True				
ANR	6150409	AssignmentExpression	* pparam = op -> value . realval		6150379	0		=			
ANR	6150410	UnaryOperationExpression	* pparam		6150379	0					
ANR	6150411	UnaryOperator	*		6150379	0					
ANR	6150412	Identifier	pparam		6150379	1					
ANR	6150413	MemberAccess	op -> value . realval		6150379	1					
ANR	6150414	PtrMemberAccess	op -> value		6150379	0					
ANR	6150415	Identifier	op		6150379	0					
ANR	6150416	Identifier	value		6150379	1					
ANR	6150417	Identifier	realval		6150379	1					
ANR	6150418	BreakStatement	break ;	860:12:29054:29059	6150379	5	True				
ANR	6150419	Label	case t__invalid :	861:8:29069:29084	6150379	6	True				
ANR	6150420	Identifier	t__invalid		6150379	0					
ANR	6150421	ExpressionStatement	return_error ( gs_error_stackunderflow )	862:12:29098:29135	6150379	7	True				
ANR	6150422	CallExpression	return_error ( gs_error_stackunderflow )		6150379	0					
ANR	6150423	Callee	return_error		6150379	0					
ANR	6150424	Identifier	return_error		6150379	0					
ANR	6150425	ArgumentList	gs_error_stackunderflow		6150379	1					
ANR	6150426	Argument	gs_error_stackunderflow		6150379	0					
ANR	6150427	Identifier	gs_error_stackunderflow		6150379	0					
ANR	6150428	Label	default :	863:8:29145:29152	6150379	8	True				
ANR	6150429	Identifier	default		6150379	0					
ANR	6150430	ExpressionStatement	return_error ( gs_error_typecheck )	864:12:29166:29198	6150379	9	True				
ANR	6150431	CallExpression	return_error ( gs_error_typecheck )		6150379	0					
ANR	6150432	Callee	return_error		6150379	0					
ANR	6150433	Identifier	return_error		6150379	0					
ANR	6150434	ArgumentList	gs_error_typecheck		6150379	1					
ANR	6150435	Argument	gs_error_typecheck		6150379	0					
ANR	6150436	Identifier	gs_error_typecheck		6150379	0					
ANR	6150437	ReturnStatement	return 0 ;	866:4:29210:29218	6150379	1	True				
ANR	6150438	PrimaryExpression	0		6150379	0					
ANR	6150439	ReturnType	int		6150379	1					
ANR	6150440	Identifier	real_param		6150379	2					
ANR	6150441	ParameterList	"const ref * op , double * pparam"		6150379	3					
ANR	6150442	Parameter	const ref * op	852:11:28829:28842	6150379	0	True				
ANR	6150443	ParameterType	const ref *		6150379	0					
ANR	6150444	Identifier	op		6150379	1					
ANR	6150445	Parameter	double * pparam	852:27:28845:28858	6150379	1	True				
ANR	6150446	ParameterType	double *		6150379	0					
ANR	6150447	Identifier	pparam		6150379	1					
ANR	6150448	CFGEntryNode	ENTRY		6150379		True				
ANR	6150449	CFGExitNode	EXIT		6150379		True				
ANR	6150450	Symbol	op		6150379						
ANR	6150451	Symbol	gs_error_typecheck		6150379						
ANR	6150452	Symbol	* op		6150379						
ANR	6150453	Symbol	gs_error_stackunderflow		6150379						
ANR	6150454	Symbol	op -> value		6150379						
ANR	6150455	Symbol	op -> value . realval		6150379						
ANR	6150456	Symbol	pparam		6150379						
ANR	6150457	Symbol	* pparam		6150379						
ANR	6150458	Symbol	op -> value . intval		6150379						
ANR	6150459	Symbol	r_type		6150379						
ANR	6150460	Function	float_param	868:0:29222:29415							
ANR	6150461	FunctionDef	"float_param (const ref * op , float * pparam)"		6150460	0					
ANR	6150462	CompoundStatement		870:0:29269:29415	6150460	0					
ANR	6150463	IdentifierDeclStatement	double dval ;	871:4:29275:29286	6150460	0	True				
ANR	6150464	IdentifierDecl	dval		6150460	0					
ANR	6150465	IdentifierDeclType	double		6150460	0					
ANR	6150466	Identifier	dval		6150460	1					
ANR	6150467	IdentifierDeclStatement	"int code = real_param ( op , & dval ) ;"	872:4:29292:29324	6150460	1	True				
ANR	6150468	IdentifierDecl	"code = real_param ( op , & dval )"		6150460	0					
ANR	6150469	IdentifierDeclType	int		6150460	0					
ANR	6150470	Identifier	code		6150460	1					
ANR	6150471	AssignmentExpression	"code = real_param ( op , & dval )"		6150460	2		=			
ANR	6150472	Identifier	code		6150460	0					
ANR	6150473	CallExpression	"real_param ( op , & dval )"		6150460	1					
ANR	6150474	Callee	real_param		6150460	0					
ANR	6150475	Identifier	real_param		6150460	0					
ANR	6150476	ArgumentList	op		6150460	1					
ANR	6150477	Argument	op		6150460	0					
ANR	6150478	Identifier	op		6150460	0					
ANR	6150479	Argument	& dval		6150460	1					
ANR	6150480	UnaryOperationExpression	& dval		6150460	0					
ANR	6150481	UnaryOperator	&		6150460	0					
ANR	6150482	Identifier	dval		6150460	1					
ANR	6150483	IfStatement	if ( code >= 0 )		6150460	2					
ANR	6150484	Condition	code >= 0	874:8:29335:29343	6150460	0	True				
ANR	6150485	RelationalExpression	code >= 0		6150460	0		>=			
ANR	6150486	Identifier	code		6150460	0					
ANR	6150487	PrimaryExpression	0		6150460	1					
ANR	6150488	ExpressionStatement	* pparam = ( float ) dval	875:8:29354:29375	6150460	1	True				
ANR	6150489	AssignmentExpression	* pparam = ( float ) dval		6150460	0		=			
ANR	6150490	UnaryOperationExpression	* pparam		6150460	0					
ANR	6150491	UnaryOperator	*		6150460	0					
ANR	6150492	Identifier	pparam		6150460	1					
ANR	6150493	CastExpression	( float ) dval		6150460	1					
ANR	6150494	CastTarget	float		6150460	0					
ANR	6150495	Identifier	dval		6150460	1					
ANR	6150496	ReturnStatement	return code ;	876:4:29402:29413	6150460	3	True				
ANR	6150497	Identifier	code		6150460	0					
ANR	6150498	ReturnType	int		6150460	1					
ANR	6150499	Identifier	float_param		6150460	2					
ANR	6150500	ParameterList	"const ref * op , float * pparam"		6150460	3					
ANR	6150501	Parameter	const ref * op	869:12:29238:29251	6150460	0	True				
ANR	6150502	ParameterType	const ref *		6150460	0					
ANR	6150503	Identifier	op		6150460	1					
ANR	6150504	Parameter	float * pparam	869:28:29254:29266	6150460	1	True				
ANR	6150505	ParameterType	float *		6150460	0					
ANR	6150506	Identifier	pparam		6150460	1					
ANR	6150507	CFGEntryNode	ENTRY		6150460		True				
ANR	6150508	CFGExitNode	EXIT		6150460		True				
ANR	6150509	Symbol	op		6150460						
ANR	6150510	Symbol	dval		6150460						
ANR	6150511	Symbol	code		6150460						
ANR	6150512	Symbol	real_param		6150460						
ANR	6150513	Symbol	pparam		6150460						
ANR	6150514	Symbol	* pparam		6150460						
ANR	6150515	Symbol	& dval		6150460						
ANR	6150516	Function	int_param	880:0:29467:29613							
ANR	6150517	FunctionDef	"int_param (const ref * op , int max_value , int * pparam)"		6150516	0					
ANR	6150518	CompoundStatement		882:0:29525:29613	6150516	0					
ANR	6150519	ExpressionStatement	"check_int_leu ( * op , max_value )"	883:4:29531:29560	6150516	0	True				
ANR	6150520	CallExpression	"check_int_leu ( * op , max_value )"		6150516	0					
ANR	6150521	Callee	check_int_leu		6150516	0					
ANR	6150522	Identifier	check_int_leu		6150516	0					
ANR	6150523	ArgumentList	* op		6150516	1					
ANR	6150524	Argument	* op		6150516	0					
ANR	6150525	UnaryOperationExpression	* op		6150516	0					
ANR	6150526	UnaryOperator	*		6150516	0					
ANR	6150527	Identifier	op		6150516	1					
ANR	6150528	Argument	max_value		6150516	1					
ANR	6150529	Identifier	max_value		6150516	0					
ANR	6150530	ExpressionStatement	* pparam = ( int ) op -> value . intval	884:4:29566:29597	6150516	1	True				
ANR	6150531	AssignmentExpression	* pparam = ( int ) op -> value . intval		6150516	0		=			
ANR	6150532	UnaryOperationExpression	* pparam		6150516	0					
ANR	6150533	UnaryOperator	*		6150516	0					
ANR	6150534	Identifier	pparam		6150516	1					
ANR	6150535	CastExpression	( int ) op -> value . intval		6150516	1					
ANR	6150536	CastTarget	int		6150516	0					
ANR	6150537	MemberAccess	op -> value . intval		6150516	1					
ANR	6150538	PtrMemberAccess	op -> value		6150516	0					
ANR	6150539	Identifier	op		6150516	0					
ANR	6150540	Identifier	value		6150516	1					
ANR	6150541	Identifier	intval		6150516	1					
ANR	6150542	ReturnStatement	return 0 ;	885:4:29603:29611	6150516	2	True				
ANR	6150543	PrimaryExpression	0		6150516	0					
ANR	6150544	ReturnType	int		6150516	1					
ANR	6150545	Identifier	int_param		6150516	2					
ANR	6150546	ParameterList	"const ref * op , int max_value , int * pparam"		6150516	3					
ANR	6150547	Parameter	const ref * op	881:10:29481:29494	6150516	0	True				
ANR	6150548	ParameterType	const ref *		6150516	0					
ANR	6150549	Identifier	op		6150516	1					
ANR	6150550	Parameter	int max_value	881:26:29497:29509	6150516	1	True				
ANR	6150551	ParameterType	int		6150516	0					
ANR	6150552	Identifier	max_value		6150516	1					
ANR	6150553	Parameter	int * pparam	881:41:29512:29522	6150516	2	True				
ANR	6150554	ParameterType	int *		6150516	0					
ANR	6150555	Identifier	pparam		6150516	1					
ANR	6150556	CFGEntryNode	ENTRY		6150516		True				
ANR	6150557	CFGExitNode	EXIT		6150516		True				
ANR	6150558	Symbol	op		6150516						
ANR	6150559	Symbol	* op		6150516						
ANR	6150560	Symbol	op -> value		6150516						
ANR	6150561	Symbol	pparam		6150516						
ANR	6150562	Symbol	* pparam		6150516						
ANR	6150563	Symbol	op -> value . intval		6150516						
ANR	6150564	Symbol	max_value		6150516						
ANR	6150565	Function	make_reals	889:0:29661:29915							
ANR	6150566	FunctionDef	"make_reals (ref * op , const double * pval , int count)"		6150565	0					
ANR	6150567	CompoundStatement		891:0:29717:29915	6150565	0					
ANR	6150568	ForStatement	"for ( ; count -- ; op ++ , pval ++ )"		6150565	0					
ANR	6150569	Condition	count --	894:11:29848:29854	6150565	0	True				
ANR	6150570	PostIncDecOperationExpression	count --		6150565	0					
ANR	6150571	Identifier	count		6150565	0					
ANR	6150572	IncDec	--		6150565	1					
ANR	6150573	Expression	"op ++ , pval ++"	894:20:29857:29868	6150565	1	True				
ANR	6150574	PostIncDecOperationExpression	op ++		6150565	0					
ANR	6150575	Identifier	op		6150565	0					
ANR	6150576	IncDec	++		6150565	1					
ANR	6150577	PostIncDecOperationExpression	pval ++		6150565	1					
ANR	6150578	Identifier	pval		6150565	0					
ANR	6150579	IncDec	++		6150565	1					
ANR	6150580	ExpressionStatement	"make_real ( op , * pval )"	895:8:29879:29899	6150565	2	True				
ANR	6150581	CallExpression	"make_real ( op , * pval )"		6150565	0					
ANR	6150582	Callee	make_real		6150565	0					
ANR	6150583	Identifier	make_real		6150565	0					
ANR	6150584	ArgumentList	op		6150565	1					
ANR	6150585	Argument	op		6150565	0					
ANR	6150586	Identifier	op		6150565	0					
ANR	6150587	Argument	* pval		6150565	1					
ANR	6150588	UnaryOperationExpression	* pval		6150565	0					
ANR	6150589	UnaryOperator	*		6150565	0					
ANR	6150590	Identifier	pval		6150565	1					
ANR	6150591	ReturnStatement	return 0 ;	896:4:29905:29913	6150565	1	True				
ANR	6150592	PrimaryExpression	0		6150565	0					
ANR	6150593	ReturnType	int		6150565	1					
ANR	6150594	Identifier	make_reals		6150565	2					
ANR	6150595	ParameterList	"ref * op , const double * pval , int count"		6150565	3					
ANR	6150596	Parameter	ref * op	890:11:29676:29683	6150565	0	True				
ANR	6150597	ParameterType	ref *		6150565	0					
ANR	6150598	Identifier	op		6150565	1					
ANR	6150599	Parameter	const double * pval	890:21:29686:29703	6150565	1	True				
ANR	6150600	ParameterType	const double *		6150565	0					
ANR	6150601	Identifier	pval		6150565	1					
ANR	6150602	Parameter	int count	890:41:29706:29714	6150565	2	True				
ANR	6150603	ParameterType	int		6150565	0					
ANR	6150604	Identifier	count		6150565	1					
ANR	6150605	CFGEntryNode	ENTRY		6150565		True				
ANR	6150606	CFGExitNode	EXIT		6150565		True				
ANR	6150607	Symbol	op		6150565						
ANR	6150608	Symbol	* pval		6150565						
ANR	6150609	Symbol	pval		6150565						
ANR	6150610	Symbol	count		6150565						
ANR	6150611	Function	make_floats	898:0:29917:30123							
ANR	6150612	FunctionDef	"make_floats (ref * op , const float * pval , int count)"		6150611	0					
ANR	6150613	CompoundStatement		900:0:29973:30123	6150611	0					
ANR	6150614	ForStatement	"for ( ; count -- ; op ++ , pval ++ )"		6150611	0					
ANR	6150615	Condition	count --	902:11:30056:30062	6150611	0	True				
ANR	6150616	PostIncDecOperationExpression	count --		6150611	0					
ANR	6150617	Identifier	count		6150611	0					
ANR	6150618	IncDec	--		6150611	1					
ANR	6150619	Expression	"op ++ , pval ++"	902:20:30065:30076	6150611	1	True				
ANR	6150620	PostIncDecOperationExpression	op ++		6150611	0					
ANR	6150621	Identifier	op		6150611	0					
ANR	6150622	IncDec	++		6150611	1					
ANR	6150623	PostIncDecOperationExpression	pval ++		6150611	1					
ANR	6150624	Identifier	pval		6150611	0					
ANR	6150625	IncDec	++		6150611	1					
ANR	6150626	ExpressionStatement	"make_real ( op , * pval )"	903:8:30087:30107	6150611	2	True				
ANR	6150627	CallExpression	"make_real ( op , * pval )"		6150611	0					
ANR	6150628	Callee	make_real		6150611	0					
ANR	6150629	Identifier	make_real		6150611	0					
ANR	6150630	ArgumentList	op		6150611	1					
ANR	6150631	Argument	op		6150611	0					
ANR	6150632	Identifier	op		6150611	0					
ANR	6150633	Argument	* pval		6150611	1					
ANR	6150634	UnaryOperationExpression	* pval		6150611	0					
ANR	6150635	UnaryOperator	*		6150611	0					
ANR	6150636	Identifier	pval		6150611	1					
ANR	6150637	ReturnStatement	return 0 ;	904:4:30113:30121	6150611	1	True				
ANR	6150638	PrimaryExpression	0		6150611	0					
ANR	6150639	ReturnType	int		6150611	1					
ANR	6150640	Identifier	make_floats		6150611	2					
ANR	6150641	ParameterList	"ref * op , const float * pval , int count"		6150611	3					
ANR	6150642	Parameter	ref * op	899:12:29933:29940	6150611	0	True				
ANR	6150643	ParameterType	ref *		6150611	0					
ANR	6150644	Identifier	op		6150611	1					
ANR	6150645	Parameter	const float * pval	899:22:29943:29959	6150611	1	True				
ANR	6150646	ParameterType	const float *		6150611	0					
ANR	6150647	Identifier	pval		6150611	1					
ANR	6150648	Parameter	int count	899:41:29962:29970	6150611	2	True				
ANR	6150649	ParameterType	int		6150611	0					
ANR	6150650	Identifier	count		6150611	1					
ANR	6150651	CFGEntryNode	ENTRY		6150611		True				
ANR	6150652	CFGExitNode	EXIT		6150611		True				
ANR	6150653	Symbol	op		6150611						
ANR	6150654	Symbol	* pval		6150611						
ANR	6150655	Symbol	pval		6150611						
ANR	6150656	Symbol	count		6150611						
ANR	6150657	Function	check_proc_failed	910:0:30312:30678							
ANR	6150658	FunctionDef	check_proc_failed (const ref * pref)		6150657	0					
ANR	6150659	CompoundStatement		912:0:30352:30678	6150657	0					
ANR	6150660	IfStatement	if ( r_is_array ( pref ) )		6150657	0					
ANR	6150661	Condition	r_is_array ( pref )	913:8:30362:30377	6150657	0	True				
ANR	6150662	CallExpression	r_is_array ( pref )		6150657	0					
ANR	6150663	Callee	r_is_array		6150657	0					
ANR	6150664	Identifier	r_is_array		6150657	0					
ANR	6150665	ArgumentList	pref		6150657	1					
ANR	6150666	Argument	pref		6150657	0					
ANR	6150667	Identifier	pref		6150657	0					
ANR	6150668	CompoundStatement		2:26:27:27	6150657	1					
ANR	6150669	IfStatement	"if ( r_has_attr ( pref , a_executable ) )"		6150657	0					
ANR	6150670	Condition	"r_has_attr ( pref , a_executable )"	914:12:30394:30423	6150657	0	True				
ANR	6150671	CallExpression	"r_has_attr ( pref , a_executable )"		6150657	0					
ANR	6150672	Callee	r_has_attr		6150657	0					
ANR	6150673	Identifier	r_has_attr		6150657	0					
ANR	6150674	ArgumentList	pref		6150657	1					
ANR	6150675	Argument	pref		6150657	0					
ANR	6150676	Identifier	pref		6150657	0					
ANR	6150677	Argument	a_executable		6150657	1					
ANR	6150678	Identifier	a_executable		6150657	0					
ANR	6150679	ReturnStatement	return gs_error_invalidaccess ;	915:12:30438:30467	6150657	1	True				
ANR	6150680	Identifier	gs_error_invalidaccess		6150657	0					
ANR	6150681	ElseStatement	else		6150657	0					
ANR	6150682	ReturnStatement	return gs_error_typecheck ;	917:12:30494:30519	6150657	0	True				
ANR	6150683	Identifier	gs_error_typecheck		6150657	0					
ANR	6150684	ElseStatement	else		6150657	0					
ANR	6150685	CompoundStatement		7:11:179:179	6150657	0					
ANR	6150686	IfStatement	"if ( r_has_type ( pref , t__invalid ) )"		6150657	0					
ANR	6150687	Condition	"r_has_type ( pref , t__invalid )"	919:12:30546:30573	6150657	0	True				
ANR	6150688	CallExpression	"r_has_type ( pref , t__invalid )"		6150657	0					
ANR	6150689	Callee	r_has_type		6150657	0					
ANR	6150690	Identifier	r_has_type		6150657	0					
ANR	6150691	ArgumentList	pref		6150657	1					
ANR	6150692	Argument	pref		6150657	0					
ANR	6150693	Identifier	pref		6150657	0					
ANR	6150694	Argument	t__invalid		6150657	1					
ANR	6150695	Identifier	t__invalid		6150657	0					
ANR	6150696	ReturnStatement	return gs_error_stackunderflow ;	920:12:30588:30618	6150657	1	True				
ANR	6150697	Identifier	gs_error_stackunderflow		6150657	0					
ANR	6150698	ElseStatement	else		6150657	0					
ANR	6150699	ReturnStatement	return gs_error_typecheck ;	922:12:30645:30670	6150657	0	True				
ANR	6150700	Identifier	gs_error_typecheck		6150657	0					
ANR	6150701	ReturnType	int		6150657	1					
ANR	6150702	Identifier	check_proc_failed		6150657	2					
ANR	6150703	ParameterList	const ref * pref		6150657	3					
ANR	6150704	Parameter	const ref * pref	911:18:30334:30349	6150657	0	True				
ANR	6150705	ParameterType	const ref *		6150657	0					
ANR	6150706	Identifier	pref		6150657	1					
ANR	6150707	CFGEntryNode	ENTRY		6150657		True				
ANR	6150708	CFGExitNode	EXIT		6150657		True				
ANR	6150709	Symbol	gs_error_typecheck		6150657						
ANR	6150710	Symbol	r_has_type		6150657						
ANR	6150711	Symbol	r_has_attr		6150657						
ANR	6150712	Symbol	gs_error_stackunderflow		6150657						
ANR	6150713	Symbol	pref		6150657						
ANR	6150714	Symbol	a_executable		6150657						
ANR	6150715	Symbol	gs_error_invalidaccess		6150657						
ANR	6150716	Symbol	r_is_array		6150657						
ANR	6150717	Symbol	t__invalid		6150657						
ANR	6150718	Function	check_type_failed	928:0:30815:30943							
ANR	6150719	FunctionDef	check_type_failed (const ref * op)		6150718	0					
ANR	6150720	CompoundStatement		930:0:30853:30943	6150718	0					
ANR	6150721	ReturnStatement	"return ( r_has_type ( op , t__invalid ) ? gs_error_stackunderflow : gs_error_typecheck ) ;"	931:4:30859:30941	6150718	0	True				
ANR	6150722	ConditionalExpression	"r_has_type ( op , t__invalid ) ? gs_error_stackunderflow : gs_error_typecheck"		6150718	0					
ANR	6150723	Condition	"r_has_type ( op , t__invalid )"		6150718	0					
ANR	6150724	CallExpression	"r_has_type ( op , t__invalid )"		6150718	0					
ANR	6150725	Callee	r_has_type		6150718	0					
ANR	6150726	Identifier	r_has_type		6150718	0					
ANR	6150727	ArgumentList	op		6150718	1					
ANR	6150728	Argument	op		6150718	0					
ANR	6150729	Identifier	op		6150718	0					
ANR	6150730	Argument	t__invalid		6150718	1					
ANR	6150731	Identifier	t__invalid		6150718	0					
ANR	6150732	Identifier	gs_error_stackunderflow		6150718	1					
ANR	6150733	Identifier	gs_error_typecheck		6150718	2					
ANR	6150734	ReturnType	int		6150718	1					
ANR	6150735	Identifier	check_type_failed		6150718	2					
ANR	6150736	ParameterList	const ref * op		6150718	3					
ANR	6150737	Parameter	const ref * op	929:18:30837:30850	6150718	0	True				
ANR	6150738	ParameterType	const ref *		6150718	0					
ANR	6150739	Identifier	op		6150718	1					
ANR	6150740	CFGEntryNode	ENTRY		6150718		True				
ANR	6150741	CFGExitNode	EXIT		6150718		True				
ANR	6150742	Symbol	op		6150718						
ANR	6150743	Symbol	r_has_type		6150718						
ANR	6150744	Symbol	gs_error_typecheck		6150718						
ANR	6150745	Symbol	gs_error_stackunderflow		6150718						
ANR	6150746	Symbol	t__invalid		6150718						
ANR	6150747	Function	read_matrix	938:0:31054:31890							
ANR	6150748	FunctionDef	"read_matrix (const gs_memory_t * mem , const ref * op , gs_matrix * pmat)"		6150747	0					
ANR	6150749	CompoundStatement		940:0:31128:31890	6150747	0					
ANR	6150750	IdentifierDeclStatement	int code ;	941:4:31134:31142	6150747	0	True				
ANR	6150751	IdentifierDecl	code		6150747	0					
ANR	6150752	IdentifierDeclType	int		6150747	0					
ANR	6150753	Identifier	code		6150747	1					
ANR	6150754	IdentifierDeclStatement	ref values [ 6 ] ;	942:4:31148:31161	6150747	1	True				
ANR	6150755	IdentifierDecl	values [ 6 ]		6150747	0					
ANR	6150756	IdentifierDeclType	ref [ 6 ]		6150747	0					
ANR	6150757	Identifier	values		6150747	1					
ANR	6150758	PrimaryExpression	6		6150747	2					
ANR	6150759	IdentifierDeclStatement	const ref * pvalues ;	943:4:31167:31185	6150747	2	True				
ANR	6150760	IdentifierDecl	* pvalues		6150747	0					
ANR	6150761	IdentifierDeclType	const ref *		6150747	0					
ANR	6150762	Identifier	pvalues		6150747	1					
ANR	6150763	SwitchStatement	switch ( r_type ( op ) )		6150747	3					
ANR	6150764	Condition	r_type ( op )	945:12:31200:31209	6150747	0	True				
ANR	6150765	CallExpression	r_type ( op )		6150747	0					
ANR	6150766	Callee	r_type		6150747	0					
ANR	6150767	Identifier	r_type		6150747	0					
ANR	6150768	ArgumentList	op		6150747	1					
ANR	6150769	Argument	op		6150747	0					
ANR	6150770	Identifier	op		6150747	0					
ANR	6150771	CompoundStatement		6:24:83:83	6150747	1					
ANR	6150772	Label	case t_array :	946:8:31222:31234	6150747	0	True				
ANR	6150773	Identifier	t_array		6150747	0					
ANR	6150774	ExpressionStatement	pvalues = op -> value . refs	947:12:31248:31272	6150747	1	True				
ANR	6150775	AssignmentExpression	pvalues = op -> value . refs		6150747	0		=			
ANR	6150776	Identifier	pvalues		6150747	0					
ANR	6150777	MemberAccess	op -> value . refs		6150747	1					
ANR	6150778	PtrMemberAccess	op -> value		6150747	0					
ANR	6150779	Identifier	op		6150747	0					
ANR	6150780	Identifier	value		6150747	1					
ANR	6150781	Identifier	refs		6150747	1					
ANR	6150782	BreakStatement	break ;	948:12:31286:31291	6150747	2	True				
ANR	6150783	Label	case t_mixedarray :	949:8:31301:31318	6150747	3	True				
ANR	6150784	Identifier	t_mixedarray		6150747	0					
ANR	6150785	Label	case t_shortarray :	950:8:31328:31345	6150747	4	True				
ANR	6150786	Identifier	t_shortarray		6150747	0					
ANR	6150787	CompoundStatement		13:16:248:253	6150747	5					
ANR	6150788	IdentifierDeclStatement	int i ;	952:16:31377:31382	6150747	0	True				
ANR	6150789	IdentifierDecl	i		6150747	0					
ANR	6150790	IdentifierDeclType	int		6150747	0					
ANR	6150791	Identifier	i		6150747	1					
ANR	6150792	ForStatement	for ( i = 0 ; i < 6 ; ++ i )		6150747	1					
ANR	6150793	ForInit	i = 0 ;	954:21:31406:31411	6150747	0	True				
ANR	6150794	AssignmentExpression	i = 0		6150747	0		=			
ANR	6150795	Identifier	i		6150747	0					
ANR	6150796	PrimaryExpression	0		6150747	1					
ANR	6150797	Condition	i < 6	954:28:31413:31417	6150747	1	True				
ANR	6150798	RelationalExpression	i < 6		6150747	0		<			
ANR	6150799	Identifier	i		6150747	0					
ANR	6150800	PrimaryExpression	6		6150747	1					
ANR	6150801	UnaryExpression	++ i	954:35:31420:31422	6150747	2	True				
ANR	6150802	IncDec	++		6150747	0					
ANR	6150803	Identifier	i		6150747	1					
ANR	6150804	CompoundStatement		15:40:296:296	6150747	3					
ANR	6150805	ExpressionStatement	"code = array_get ( mem , op , ( long ) i , & values [ i ] )"	955:20:31447:31493	6150747	0	True				
ANR	6150806	AssignmentExpression	"code = array_get ( mem , op , ( long ) i , & values [ i ] )"		6150747	0		=			
ANR	6150807	Identifier	code		6150747	0					
ANR	6150808	CallExpression	"array_get ( mem , op , ( long ) i , & values [ i ] )"		6150747	1					
ANR	6150809	Callee	array_get		6150747	0					
ANR	6150810	Identifier	array_get		6150747	0					
ANR	6150811	ArgumentList	mem		6150747	1					
ANR	6150812	Argument	mem		6150747	0					
ANR	6150813	Identifier	mem		6150747	0					
ANR	6150814	Argument	op		6150747	1					
ANR	6150815	Identifier	op		6150747	0					
ANR	6150816	Argument	( long ) i		6150747	2					
ANR	6150817	CastExpression	( long ) i		6150747	0					
ANR	6150818	CastTarget	long		6150747	0					
ANR	6150819	Identifier	i		6150747	1					
ANR	6150820	Argument	& values [ i ]		6150747	3					
ANR	6150821	UnaryOperationExpression	& values [ i ]		6150747	0					
ANR	6150822	UnaryOperator	&		6150747	0					
ANR	6150823	ArrayIndexing	values [ i ]		6150747	1					
ANR	6150824	Identifier	values		6150747	0					
ANR	6150825	Identifier	i		6150747	1					
ANR	6150826	IfStatement	if ( code < 0 )		6150747	1					
ANR	6150827	Condition	code < 0	956:24:31519:31526	6150747	0	True				
ANR	6150828	RelationalExpression	code < 0		6150747	0		<			
ANR	6150829	Identifier	code		6150747	0					
ANR	6150830	PrimaryExpression	0		6150747	1					
ANR	6150831	ReturnStatement	return code ;	957:24:31553:31564	6150747	1	True				
ANR	6150832	Identifier	code		6150747	0					
ANR	6150833	ExpressionStatement	pvalues = values	959:16:31600:31616	6150747	2	True				
ANR	6150834	AssignmentExpression	pvalues = values		6150747	0		=			
ANR	6150835	Identifier	pvalues		6150747	0					
ANR	6150836	Identifier	values		6150747	1					
ANR	6150837	BreakStatement	break ;	961:12:31644:31649	6150747	6	True				
ANR	6150838	Label	default :	962:8:31659:31666	6150747	7	True				
ANR	6150839	Identifier	default		6150747	0					
ANR	6150840	ExpressionStatement	return_op_typecheck ( op )	963:12:31680:31703	6150747	8	True				
ANR	6150841	CallExpression	return_op_typecheck ( op )		6150747	0					
ANR	6150842	Callee	return_op_typecheck		6150747	0					
ANR	6150843	Identifier	return_op_typecheck		6150747	0					
ANR	6150844	ArgumentList	op		6150747	1					
ANR	6150845	Argument	op		6150747	0					
ANR	6150846	Identifier	op		6150747	0					
ANR	6150847	ExpressionStatement	check_read ( * op )	965:4:31715:31730	6150747	4	True				
ANR	6150848	CallExpression	check_read ( * op )		6150747	0					
ANR	6150849	Callee	check_read		6150747	0					
ANR	6150850	Identifier	check_read		6150747	0					
ANR	6150851	ArgumentList	* op		6150747	1					
ANR	6150852	Argument	* op		6150747	0					
ANR	6150853	UnaryOperationExpression	* op		6150747	0					
ANR	6150854	UnaryOperator	*		6150747	0					
ANR	6150855	Identifier	op		6150747	1					
ANR	6150856	IfStatement	if ( r_size ( op ) != 6 )		6150747	5					
ANR	6150857	Condition	r_size ( op ) != 6	966:8:31740:31754	6150747	0	True				
ANR	6150858	EqualityExpression	r_size ( op ) != 6		6150747	0		!=			
ANR	6150859	CallExpression	r_size ( op )		6150747	0					
ANR	6150860	Callee	r_size		6150747	0					
ANR	6150861	Identifier	r_size		6150747	0					
ANR	6150862	ArgumentList	op		6150747	1					
ANR	6150863	Argument	op		6150747	0					
ANR	6150864	Identifier	op		6150747	0					
ANR	6150865	PrimaryExpression	6		6150747	1					
ANR	6150866	ExpressionStatement	return_error ( gs_error_rangecheck )	967:8:31765:31798	6150747	1	True				
ANR	6150867	CallExpression	return_error ( gs_error_rangecheck )		6150747	0					
ANR	6150868	Callee	return_error		6150747	0					
ANR	6150869	Identifier	return_error		6150747	0					
ANR	6150870	ArgumentList	gs_error_rangecheck		6150747	1					
ANR	6150871	Argument	gs_error_rangecheck		6150747	0					
ANR	6150872	Identifier	gs_error_rangecheck		6150747	0					
ANR	6150873	ExpressionStatement	"code = float_params ( pvalues + 5 , 6 , ( float * ) pmat )"	968:4:31804:31854	6150747	6	True				
ANR	6150874	AssignmentExpression	"code = float_params ( pvalues + 5 , 6 , ( float * ) pmat )"		6150747	0		=			
ANR	6150875	Identifier	code		6150747	0					
ANR	6150876	CallExpression	"float_params ( pvalues + 5 , 6 , ( float * ) pmat )"		6150747	1					
ANR	6150877	Callee	float_params		6150747	0					
ANR	6150878	Identifier	float_params		6150747	0					
ANR	6150879	ArgumentList	pvalues + 5		6150747	1					
ANR	6150880	Argument	pvalues + 5		6150747	0					
ANR	6150881	AdditiveExpression	pvalues + 5		6150747	0		+			
ANR	6150882	Identifier	pvalues		6150747	0					
ANR	6150883	PrimaryExpression	5		6150747	1					
ANR	6150884	Argument	6		6150747	1					
ANR	6150885	PrimaryExpression	6		6150747	0					
ANR	6150886	Argument	( float * ) pmat		6150747	2					
ANR	6150887	CastExpression	( float * ) pmat		6150747	0					
ANR	6150888	CastTarget	float *		6150747	0					
ANR	6150889	Identifier	pmat		6150747	1					
ANR	6150890	ReturnStatement	return ( code < 0 ? code : 0 ) ;	969:4:31860:31888	6150747	7	True				
ANR	6150891	ConditionalExpression	code < 0 ? code : 0		6150747	0					
ANR	6150892	Condition	code < 0		6150747	0					
ANR	6150893	RelationalExpression	code < 0		6150747	0		<			
ANR	6150894	Identifier	code		6150747	0					
ANR	6150895	PrimaryExpression	0		6150747	1					
ANR	6150896	Identifier	code		6150747	1					
ANR	6150897	PrimaryExpression	0		6150747	2					
ANR	6150898	ReturnType	int		6150747	1					
ANR	6150899	Identifier	read_matrix		6150747	2					
ANR	6150900	ParameterList	"const gs_memory_t * mem , const ref * op , gs_matrix * pmat"		6150747	3					
ANR	6150901	Parameter	const gs_memory_t * mem	939:12:31070:31091	6150747	0	True				
ANR	6150902	ParameterType	const gs_memory_t *		6150747	0					
ANR	6150903	Identifier	mem		6150747	1					
ANR	6150904	Parameter	const ref * op	939:36:31094:31107	6150747	1	True				
ANR	6150905	ParameterType	const ref *		6150747	0					
ANR	6150906	Identifier	op		6150747	1					
ANR	6150907	Parameter	gs_matrix * pmat	939:52:31110:31125	6150747	2	True				
ANR	6150908	ParameterType	gs_matrix *		6150747	0					
ANR	6150909	Identifier	pmat		6150747	1					
ANR	6150910	CFGEntryNode	ENTRY		6150747		True				
ANR	6150911	CFGExitNode	EXIT		6150747		True				
ANR	6150912	Symbol	op		6150747						
ANR	6150913	Symbol	code		6150747						
ANR	6150914	Symbol	pmat		6150747						
ANR	6150915	Symbol	* op		6150747						
ANR	6150916	Symbol	gs_error_rangecheck		6150747						
ANR	6150917	Symbol	float_params		6150747						
ANR	6150918	Symbol	array_get		6150747						
ANR	6150919	Symbol	values		6150747						
ANR	6150920	Symbol	op -> value . refs		6150747						
ANR	6150921	Symbol	i		6150747						
ANR	6150922	Symbol	pvalues		6150747						
ANR	6150923	Symbol	mem		6150747						
ANR	6150924	Symbol	op -> value		6150747						
ANR	6150925	Symbol	r_size		6150747						
ANR	6150926	Symbol	r_type		6150747						
ANR	6150927	Function	write_matrix_in	974:0:31964:32577							
ANR	6150928	FunctionDef	"write_matrix_in (ref * op , const gs_matrix * pmat , gs_dual_memory_t * idmemory , gs_ref_memory_t * imem)"		6150927	0					
ANR	6150929	CompoundStatement		977:0:32085:32577	6150927	0					
ANR	6150930	IdentifierDeclStatement	ref * aptr ;	978:4:32091:32100	6150927	0	True				
ANR	6150931	IdentifierDecl	* aptr		6150927	0					
ANR	6150932	IdentifierDeclType	ref *		6150927	0					
ANR	6150933	Identifier	aptr		6150927	1					
ANR	6150934	IdentifierDeclStatement	const float * pel ;	979:4:32106:32122	6150927	1	True				
ANR	6150935	IdentifierDecl	* pel		6150927	0					
ANR	6150936	IdentifierDeclType	const float *		6150927	0					
ANR	6150937	Identifier	pel		6150927	1					
ANR	6150938	IdentifierDeclStatement	int i ;	980:4:32128:32133	6150927	2	True				
ANR	6150939	IdentifierDecl	i		6150927	0					
ANR	6150940	IdentifierDeclType	int		6150927	0					
ANR	6150941	Identifier	i		6150927	1					
ANR	6150942	ExpressionStatement	"check_write_type ( * op , t_array )"	982:4:32140:32170	6150927	3	True				
ANR	6150943	CallExpression	"check_write_type ( * op , t_array )"		6150927	0					
ANR	6150944	Callee	check_write_type		6150927	0					
ANR	6150945	Identifier	check_write_type		6150927	0					
ANR	6150946	ArgumentList	* op		6150927	1					
ANR	6150947	Argument	* op		6150927	0					
ANR	6150948	UnaryOperationExpression	* op		6150927	0					
ANR	6150949	UnaryOperator	*		6150927	0					
ANR	6150950	Identifier	op		6150927	1					
ANR	6150951	Argument	t_array		6150927	1					
ANR	6150952	Identifier	t_array		6150927	0					
ANR	6150953	IfStatement	if ( r_size ( op ) != 6 )		6150927	4					
ANR	6150954	Condition	r_size ( op ) != 6	983:8:32180:32194	6150927	0	True				
ANR	6150955	EqualityExpression	r_size ( op ) != 6		6150927	0		!=			
ANR	6150956	CallExpression	r_size ( op )		6150927	0					
ANR	6150957	Callee	r_size		6150927	0					
ANR	6150958	Identifier	r_size		6150927	0					
ANR	6150959	ArgumentList	op		6150927	1					
ANR	6150960	Argument	op		6150927	0					
ANR	6150961	Identifier	op		6150927	0					
ANR	6150962	PrimaryExpression	6		6150927	1					
ANR	6150963	ExpressionStatement	return_error ( gs_error_rangecheck )	984:8:32205:32238	6150927	1	True				
ANR	6150964	CallExpression	return_error ( gs_error_rangecheck )		6150927	0					
ANR	6150965	Callee	return_error		6150927	0					
ANR	6150966	Identifier	return_error		6150927	0					
ANR	6150967	ArgumentList	gs_error_rangecheck		6150927	1					
ANR	6150968	Argument	gs_error_rangecheck		6150927	0					
ANR	6150969	Identifier	gs_error_rangecheck		6150927	0					
ANR	6150970	ExpressionStatement	aptr = op -> value . refs	985:4:32244:32265	6150927	5	True				
ANR	6150971	AssignmentExpression	aptr = op -> value . refs		6150927	0		=			
ANR	6150972	Identifier	aptr		6150927	0					
ANR	6150973	MemberAccess	op -> value . refs		6150927	1					
ANR	6150974	PtrMemberAccess	op -> value		6150927	0					
ANR	6150975	Identifier	op		6150927	0					
ANR	6150976	Identifier	value		6150927	1					
ANR	6150977	Identifier	refs		6150927	1					
ANR	6150978	ExpressionStatement	pel = ( const float * ) pmat	986:4:32271:32296	6150927	6	True				
ANR	6150979	AssignmentExpression	pel = ( const float * ) pmat		6150927	0		=			
ANR	6150980	Identifier	pel		6150927	0					
ANR	6150981	CastExpression	( const float * ) pmat		6150927	1					
ANR	6150982	CastTarget	const float *		6150927	0					
ANR	6150983	Identifier	pmat		6150927	1					
ANR	6150984	ForStatement	"for ( i = 5 ; i >= 0 ; i -- , aptr ++ , pel ++ )"		6150927	7					
ANR	6150985	ForInit	i = 5 ;	987:9:32307:32312	6150927	0	True				
ANR	6150986	AssignmentExpression	i = 5		6150927	0		=			
ANR	6150987	Identifier	i		6150927	0					
ANR	6150988	PrimaryExpression	5		6150927	1					
ANR	6150989	Condition	i >= 0	987:16:32314:32319	6150927	1	True				
ANR	6150990	RelationalExpression	i >= 0		6150927	0		>=			
ANR	6150991	Identifier	i		6150927	0					
ANR	6150992	PrimaryExpression	0		6150927	1					
ANR	6150993	Expression	"i -- , aptr ++ , pel ++"	987:24:32322:32339	6150927	2	True				
ANR	6150994	PostIncDecOperationExpression	i --		6150927	0					
ANR	6150995	Identifier	i		6150927	0					
ANR	6150996	IncDec	--		6150927	1					
ANR	6150997	Expression	"aptr ++ , pel ++"		6150927	1					
ANR	6150998	PostIncDecOperationExpression	aptr ++		6150927	0					
ANR	6150999	Identifier	aptr		6150927	0					
ANR	6151000	IncDec	++		6150927	1					
ANR	6151001	PostIncDecOperationExpression	pel ++		6150927	1					
ANR	6151002	Identifier	pel		6150927	0					
ANR	6151003	IncDec	++		6150927	1					
ANR	6151004	CompoundStatement		11:44:256:256	6150927	3					
ANR	6151005	IfStatement	if ( idmemory )		6150927	0					
ANR	6151006	Condition	idmemory	988:12:32356:32363	6150927	0	True				
ANR	6151007	Identifier	idmemory		6150927	0					
ANR	6151008	CompoundStatement		12:22:280:280	6150927	1					
ANR	6151009	ExpressionStatement	"ref_save ( op , aptr , ""write_matrix"" )"	989:12:32380:32414	6150927	0	True				
ANR	6151010	CallExpression	"ref_save ( op , aptr , ""write_matrix"" )"		6150927	0					
ANR	6151011	Callee	ref_save		6150927	0					
ANR	6151012	Identifier	ref_save		6150927	0					
ANR	6151013	ArgumentList	op		6150927	1					
ANR	6151014	Argument	op		6150927	0					
ANR	6151015	Identifier	op		6150927	0					
ANR	6151016	Argument	aptr		6150927	1					
ANR	6151017	Identifier	aptr		6150927	0					
ANR	6151018	Argument	"""write_matrix"""		6150927	2					
ANR	6151019	PrimaryExpression	"""write_matrix"""		6150927	0					
ANR	6151020	ExpressionStatement	"make_real_new ( aptr , * pel )"	990:12:32428:32453	6150927	1	True				
ANR	6151021	CallExpression	"make_real_new ( aptr , * pel )"		6150927	0					
ANR	6151022	Callee	make_real_new		6150927	0					
ANR	6151023	Identifier	make_real_new		6150927	0					
ANR	6151024	ArgumentList	aptr		6150927	1					
ANR	6151025	Argument	aptr		6150927	0					
ANR	6151026	Identifier	aptr		6150927	0					
ANR	6151027	Argument	* pel		6150927	1					
ANR	6151028	UnaryOperationExpression	* pel		6150927	0					
ANR	6151029	UnaryOperator	*		6150927	0					
ANR	6151030	Identifier	pel		6150927	1					
ANR	6151031	ElseStatement	else		6150927	0					
ANR	6151032	CompoundStatement		15:15:384:384	6150927	0					
ANR	6151033	ExpressionStatement	"make_tav ( aptr , t_real , imemory_new_mask ( imem ) , realval , * pel )"	992:12:32484:32545	6150927	0	True				
ANR	6151034	CallExpression	"make_tav ( aptr , t_real , imemory_new_mask ( imem ) , realval , * pel )"		6150927	0					
ANR	6151035	Callee	make_tav		6150927	0					
ANR	6151036	Identifier	make_tav		6150927	0					
ANR	6151037	ArgumentList	aptr		6150927	1					
ANR	6151038	Argument	aptr		6150927	0					
ANR	6151039	Identifier	aptr		6150927	0					
ANR	6151040	Argument	t_real		6150927	1					
ANR	6151041	Identifier	t_real		6150927	0					
ANR	6151042	Argument	imemory_new_mask ( imem )		6150927	2					
ANR	6151043	CallExpression	imemory_new_mask ( imem )		6150927	0					
ANR	6151044	Callee	imemory_new_mask		6150927	0					
ANR	6151045	Identifier	imemory_new_mask		6150927	0					
ANR	6151046	ArgumentList	imem		6150927	1					
ANR	6151047	Argument	imem		6150927	0					
ANR	6151048	Identifier	imem		6150927	0					
ANR	6151049	Argument	realval		6150927	3					
ANR	6151050	Identifier	realval		6150927	0					
ANR	6151051	Argument	* pel		6150927	4					
ANR	6151052	UnaryOperationExpression	* pel		6150927	0					
ANR	6151053	UnaryOperator	*		6150927	0					
ANR	6151054	Identifier	pel		6150927	1					
ANR	6151055	ReturnStatement	return 0 ;	995:4:32567:32575	6150927	8	True				
ANR	6151056	PrimaryExpression	0		6150927	0					
ANR	6151057	ReturnType	int		6150927	1					
ANR	6151058	Identifier	write_matrix_in		6150927	2					
ANR	6151059	ParameterList	"ref * op , const gs_matrix * pmat , gs_dual_memory_t * idmemory , gs_ref_memory_t * imem"		6150927	3					
ANR	6151060	Parameter	ref * op	975:16:31984:31991	6150927	0	True				
ANR	6151061	ParameterType	ref *		6150927	0					
ANR	6151062	Identifier	op		6150927	1					
ANR	6151063	Parameter	const gs_matrix * pmat	975:26:31994:32015	6150927	1	True				
ANR	6151064	ParameterType	const gs_matrix *		6150927	0					
ANR	6151065	Identifier	pmat		6150927	1					
ANR	6151066	Parameter	gs_dual_memory_t * idmemory	975:50:32018:32043	6150927	2	True				
ANR	6151067	ParameterType	gs_dual_memory_t *		6150927	0					
ANR	6151068	Identifier	idmemory		6150927	1					
ANR	6151069	Parameter	gs_ref_memory_t * imem	976:16:32062:32082	6150927	3	True				
ANR	6151070	ParameterType	gs_ref_memory_t *		6150927	0					
ANR	6151071	Identifier	imem		6150927	1					
ANR	6151072	CFGEntryNode	ENTRY		6150927		True				
ANR	6151073	CFGExitNode	EXIT		6150927		True				
ANR	6151074	Symbol	aptr		6150927						
ANR	6151075	Symbol	op		6150927						
ANR	6151076	Symbol	* pel		6150927						
ANR	6151077	Symbol	pmat		6150927						
ANR	6151078	Symbol	* op		6150927						
ANR	6151079	Symbol	gs_error_rangecheck		6150927						
ANR	6151080	Symbol	i		6150927						
ANR	6151081	Symbol	op -> value . refs		6150927						
ANR	6151082	Symbol	realval		6150927						
ANR	6151083	Symbol	t_real		6150927						
ANR	6151084	Symbol	idmemory		6150927						
ANR	6151085	Symbol	t_array		6150927						
ANR	6151086	Symbol	pel		6150927						
ANR	6151087	Symbol	op -> value		6150927						
ANR	6151088	Symbol	r_size		6150927						
ANR	6151089	Symbol	imemory_new_mask		6150927						
ANR	6151090	Symbol	imem		6150927						
