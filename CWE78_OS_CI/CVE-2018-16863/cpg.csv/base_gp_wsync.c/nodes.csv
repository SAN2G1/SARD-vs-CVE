command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	414801	File	data/converged/CVE-2018-16863_ghostpdl/base_gp_wsync.c								
ANR	414802	ClassDef	win32_semaphore_s	49:8:1787:1887							
ANR	414803	DeclStmt									
ANR	414804	Decl							HANDLE	HANDLE	handle
ANR	414805	DeclStmt									
ANR	414806	Decl							win32_semaphore_s	win32_semaphore_s	win32_semaphore
ANR	414807	Function	gp_semaphore_sizeof	53:0:1890:1959							
ANR	414808	FunctionDef	gp_semaphore_sizeof ()		414807	0					
ANR	414809	CompoundStatement		55:0:1921:1959	414807	0					
ANR	414810	ReturnStatement	return sizeof ( win32_semaphore ) ;	56:4:1927:1957	414807	0	True				
ANR	414811	SizeofExpression	sizeof ( win32_semaphore )		414807	0					
ANR	414812	Sizeof	sizeof		414807	0					
ANR	414813	SizeofOperand	win32_semaphore		414807	1					
ANR	414814	ReturnType	uint		414807	1					
ANR	414815	Identifier	gp_semaphore_sizeof		414807	2					
ANR	414816	ParameterList			414807	3					
ANR	414817	CFGEntryNode	ENTRY		414807		True				
ANR	414818	CFGExitNode	EXIT		414807		True				
ANR	414819	Function	gp_semaphore_open	59:0:1962:2562							
ANR	414820	FunctionDef	gp_semaphore_open (gp_semaphore * sema)		414819	0					
ANR	414821	CompoundStatement		63:0:2127:2562	414819	0					
ANR	414822	Statement	win32_semaphore	64:4:2133:2147	414819	0	True				
ANR	414823	Statement	*	64:20:2149:2149	414819	1	True				
ANR	414824	Statement	const	64:21:2150:2154	414819	2	True				
ANR	414825	ExpressionStatement	winSema = ( win32_semaphore * ) sema	64:27:2156:2189	414819	3	True				
ANR	414826	AssignmentExpression	winSema = ( win32_semaphore * ) sema		414819	0		=			
ANR	414827	Identifier	winSema		414819	0					
ANR	414828	CastExpression	( win32_semaphore * ) sema		414819	1					
ANR	414829	CastTarget	win32_semaphore *		414819	0					
ANR	414830	Identifier	sema		414819	1					
ANR	414831	IfStatement	if ( winSema )		414819	4					
ANR	414832	Condition	winSema	66:8:2200:2206	414819	0	True				
ANR	414833	Identifier	winSema		414819	0					
ANR	414834	CompoundStatement		4:17:81:81	414819	1					
ANR	414835	Statement	winSema	67:8:2219:2225	414819	0	True				
ANR	414836	Statement	->	67:15:2226:2227	414819	1	True				
ANR	414837	Statement	handle	67:17:2228:2233	414819	2	True				
ANR	414838	Statement	=	67:24:2235:2235	414819	3	True				
ANR	414839	ExpressionStatement	"CreateSemaphoreExW ( NULL , 0 , max_int , NULL , 0 , 0 )"	69:12:2262:2310	414819	4	True				
ANR	414840	CallExpression	"CreateSemaphoreExW ( NULL , 0 , max_int , NULL , 0 , 0 )"		414819	0					
ANR	414841	Callee	CreateSemaphoreExW		414819	0					
ANR	414842	Identifier	CreateSemaphoreExW		414819	0					
ANR	414843	ArgumentList	NULL		414819	1					
ANR	414844	Argument	NULL		414819	0					
ANR	414845	Identifier	NULL		414819	0					
ANR	414846	Argument	0		414819	1					
ANR	414847	PrimaryExpression	0		414819	0					
ANR	414848	Argument	max_int		414819	2					
ANR	414849	Identifier	max_int		414819	0					
ANR	414850	Argument	NULL		414819	3					
ANR	414851	Identifier	NULL		414819	0					
ANR	414852	Argument	0		414819	4					
ANR	414853	PrimaryExpression	0		414819	0					
ANR	414854	Argument	0		414819	5					
ANR	414855	PrimaryExpression	0		414819	0					
ANR	414856	ReturnStatement	return ( winSema -> handle != NULL ? 0 : gs_note_error ( gs_error_unknownerror ) ) ;	73:8:2386:2486	414819	5	True				
ANR	414857	ConditionalExpression	winSema -> handle != NULL ? 0 : gs_note_error ( gs_error_unknownerror )		414819	0					
ANR	414858	Condition	winSema -> handle != NULL		414819	0					
ANR	414859	EqualityExpression	winSema -> handle != NULL		414819	0		!=			
ANR	414860	PtrMemberAccess	winSema -> handle		414819	0					
ANR	414861	Identifier	winSema		414819	0					
ANR	414862	Identifier	handle		414819	1					
ANR	414863	Identifier	NULL		414819	1					
ANR	414864	PrimaryExpression	0		414819	1					
ANR	414865	CallExpression	gs_note_error ( gs_error_unknownerror )		414819	2					
ANR	414866	Callee	gs_note_error		414819	0					
ANR	414867	Identifier	gs_note_error		414819	0					
ANR	414868	ArgumentList	gs_error_unknownerror		414819	1					
ANR	414869	Argument	gs_error_unknownerror		414819	0					
ANR	414870	Identifier	gs_error_unknownerror		414819	0					
ANR	414871	ElseStatement	else		414819	0					
ANR	414872	ReturnStatement	return 0 ;	77:8:2507:2515	414819	0	True				
ANR	414873	PrimaryExpression	0		414819	0					
ANR	414874	ReturnType	int		414819	1					
ANR	414875	Identifier	gp_semaphore_open		414819	2					
ANR	414876	ParameterList	gp_semaphore * sema		414819	3					
ANR	414877	Parameter	gp_semaphore * sema	61:18:2077:2095	414819	0	True				
ANR	414878	ParameterType	gp_semaphore *		414819	0					
ANR	414879	Identifier	sema		414819	1					
ANR	414880	CFGEntryNode	ENTRY		414819		True				
ANR	414881	CFGExitNode	EXIT		414819		True				
ANR	414882	Symbol	max_int		414819						
ANR	414883	Symbol	gs_note_error		414819						
ANR	414884	Symbol	sema		414819						
ANR	414885	Symbol	NULL		414819						
ANR	414886	Symbol	winSema		414819						
ANR	414887	Symbol	winSema -> handle		414819						
ANR	414888	Symbol	* winSema		414819						
ANR	414889	Symbol	gs_error_unknownerror		414819						
ANR	414890	Function	gp_semaphore_close	80:0:2565:2834							
ANR	414891	FunctionDef	gp_semaphore_close (gp_semaphore * sema)		414890	0					
ANR	414892	CompoundStatement		84:0:2656:2834	414890	0					
ANR	414893	Statement	win32_semaphore	85:4:2662:2676	414890	0	True				
ANR	414894	Statement	*	85:20:2678:2678	414890	1	True				
ANR	414895	Statement	const	85:21:2679:2683	414890	2	True				
ANR	414896	ExpressionStatement	winSema = ( win32_semaphore * ) sema	85:27:2685:2718	414890	3	True				
ANR	414897	AssignmentExpression	winSema = ( win32_semaphore * ) sema		414890	0		=			
ANR	414898	Identifier	winSema		414890	0					
ANR	414899	CastExpression	( win32_semaphore * ) sema		414890	1					
ANR	414900	CastTarget	win32_semaphore *		414890	0					
ANR	414901	Identifier	sema		414890	1					
ANR	414902	IfStatement	if ( winSema -> handle != NULL )		414890	4					
ANR	414903	Condition	winSema -> handle != NULL	87:8:2729:2751	414890	0	True				
ANR	414904	EqualityExpression	winSema -> handle != NULL		414890	0		!=			
ANR	414905	PtrMemberAccess	winSema -> handle		414890	0					
ANR	414906	Identifier	winSema		414890	0					
ANR	414907	Identifier	handle		414890	1					
ANR	414908	Identifier	NULL		414890	1					
ANR	414909	ExpressionStatement	CloseHandle ( winSema -> handle )	88:8:2762:2790	414890	1	True				
ANR	414910	CallExpression	CloseHandle ( winSema -> handle )		414890	0					
ANR	414911	Callee	CloseHandle		414890	0					
ANR	414912	Identifier	CloseHandle		414890	0					
ANR	414913	ArgumentList	winSema -> handle		414890	1					
ANR	414914	Argument	winSema -> handle		414890	0					
ANR	414915	PtrMemberAccess	winSema -> handle		414890	0					
ANR	414916	Identifier	winSema		414890	0					
ANR	414917	Identifier	handle		414890	1					
ANR	414918	ExpressionStatement	winSema -> handle = NULL	89:4:2796:2818	414890	5	True				
ANR	414919	AssignmentExpression	winSema -> handle = NULL		414890	0		=			
ANR	414920	PtrMemberAccess	winSema -> handle		414890	0					
ANR	414921	Identifier	winSema		414890	0					
ANR	414922	Identifier	handle		414890	1					
ANR	414923	Identifier	NULL		414890	1					
ANR	414924	ReturnStatement	return 0 ;	90:4:2824:2832	414890	6	True				
ANR	414925	PrimaryExpression	0		414890	0					
ANR	414926	ReturnType	int		414890	1					
ANR	414927	Identifier	gp_semaphore_close		414890	2					
ANR	414928	ParameterList	gp_semaphore * sema		414890	3					
ANR	414929	Parameter	gp_semaphore * sema	82:19:2608:2626	414890	0	True				
ANR	414930	ParameterType	gp_semaphore *		414890	0					
ANR	414931	Identifier	sema		414890	1					
ANR	414932	CFGEntryNode	ENTRY		414890		True				
ANR	414933	CFGExitNode	EXIT		414890		True				
ANR	414934	Symbol	sema		414890						
ANR	414935	Symbol	NULL		414890						
ANR	414936	Symbol	winSema		414890						
ANR	414937	Symbol	winSema -> handle		414890						
ANR	414938	Symbol	* winSema		414890						
ANR	414939	Function	gp_semaphore_wait	93:0:2837:3244							
ANR	414940	FunctionDef	gp_semaphore_wait (gp_semaphore * sema)		414939	0					
ANR	414941	CompoundStatement		97:0:2956:3244	414939	0					
ANR	414942	Statement	win32_semaphore	98:4:2962:2976	414939	0	True				
ANR	414943	Statement	*	98:20:2978:2978	414939	1	True				
ANR	414944	Statement	const	98:21:2979:2983	414939	2	True				
ANR	414945	ExpressionStatement	winSema = ( win32_semaphore * ) sema	98:27:2985:3018	414939	3	True				
ANR	414946	AssignmentExpression	winSema = ( win32_semaphore * ) sema		414939	0		=			
ANR	414947	Identifier	winSema		414939	0					
ANR	414948	CastExpression	( win32_semaphore * ) sema		414939	1					
ANR	414949	CastTarget	win32_semaphore *		414939	0					
ANR	414950	Identifier	sema		414939	1					
ANR	414951	Statement	return	100:4:3025:3030	414939	4	True				
ANR	414952	Statement	(	101:8:3040:3040	414939	5	True				
ANR	414953	Statement	WaitForSingleObjectEx	103:8:3063:3083	414939	6	True				
ANR	414954	Statement	(	103:29:3084:3084	414939	7	True				
ANR	414955	Statement	winSema	103:30:3085:3091	414939	8	True				
ANR	414956	Statement	->	103:37:3092:3093	414939	9	True				
ANR	414957	Statement	handle	103:39:3094:3099	414939	10	True				
ANR	414958	Statement	","	103:45:3100:3100	414939	11	True				
ANR	414959	Statement	INFINITE	103:47:3102:3109	414939	12	True				
ANR	414960	Statement	","	103:55:3110:3110	414939	13	True				
ANR	414961	Statement	FALSE	103:57:3112:3116	414939	14	True				
ANR	414962	Statement	)	103:62:3117:3117	414939	15	True				
ANR	414963	Statement	==	107:10:3197:3198	414939	16	True				
ANR	414964	Statement	WAIT_OBJECT_0	107:13:3200:3212	414939	17	True				
ANR	414965	Statement	?	107:27:3214:3214	414939	18	True				
ANR	414966	Label	0 :	107:29:3216:3218	414939	19	True				
ANR	414967	Statement	gs_error_unknownerror	107:33:3220:3240	414939	20	True				
ANR	414968	Statement	)	107:54:3241:3241	414939	21	True				
ANR	414969	ExpressionStatement		107:55:3242:3242	414939	22	True				
ANR	414970	ReturnType	int		414939	1					
ANR	414971	Identifier	gp_semaphore_wait		414939	2					
ANR	414972	ParameterList	gp_semaphore * sema		414939	3					
ANR	414973	Parameter	gp_semaphore * sema	95:18:2908:2926	414939	0	True				
ANR	414974	ParameterType	gp_semaphore *		414939	0					
ANR	414975	Identifier	sema		414939	1					
ANR	414976	CFGEntryNode	ENTRY		414939		True				
ANR	414977	CFGExitNode	EXIT		414939		True				
ANR	414978	Symbol	sema		414939						
ANR	414979	Symbol	winSema		414939						
ANR	414980	Function	gp_semaphore_signal	110:0:3247:3537							
ANR	414981	FunctionDef	gp_semaphore_signal (gp_semaphore * sema)		414980	0					
ANR	414982	CompoundStatement		114:0:3370:3537	414980	0					
ANR	414983	Statement	win32_semaphore	115:4:3376:3390	414980	0	True				
ANR	414984	Statement	*	115:20:3392:3392	414980	1	True				
ANR	414985	Statement	const	115:21:3393:3397	414980	2	True				
ANR	414986	ExpressionStatement	winSema = ( win32_semaphore * ) sema	115:27:3399:3432	414980	3	True				
ANR	414987	AssignmentExpression	winSema = ( win32_semaphore * ) sema		414980	0		=			
ANR	414988	Identifier	winSema		414980	0					
ANR	414989	CastExpression	( win32_semaphore * ) sema		414980	1					
ANR	414990	CastTarget	win32_semaphore *		414980	0					
ANR	414991	Identifier	sema		414980	1					
ANR	414992	ReturnStatement	"return ( ReleaseSemaphore ( winSema -> handle , 1 , NULL ) ? 0 : gs_error_unknownerror ) ;"	117:4:3439:3535	414980	4	True				
ANR	414993	ConditionalExpression	"ReleaseSemaphore ( winSema -> handle , 1 , NULL ) ? 0 : gs_error_unknownerror"		414980	0					
ANR	414994	Condition	"ReleaseSemaphore ( winSema -> handle , 1 , NULL )"		414980	0					
ANR	414995	CallExpression	"ReleaseSemaphore ( winSema -> handle , 1 , NULL )"		414980	0					
ANR	414996	Callee	ReleaseSemaphore		414980	0					
ANR	414997	Identifier	ReleaseSemaphore		414980	0					
ANR	414998	ArgumentList	winSema -> handle		414980	1					
ANR	414999	Argument	winSema -> handle		414980	0					
ANR	415000	PtrMemberAccess	winSema -> handle		414980	0					
ANR	415001	Identifier	winSema		414980	0					
ANR	415002	Identifier	handle		414980	1					
ANR	415003	Argument	1		414980	1					
ANR	415004	PrimaryExpression	1		414980	0					
ANR	415005	Argument	NULL		414980	2					
ANR	415006	Identifier	NULL		414980	0					
ANR	415007	PrimaryExpression	0		414980	1					
ANR	415008	Identifier	gs_error_unknownerror		414980	2					
ANR	415009	ReturnType	int		414980	1					
ANR	415010	Identifier	gp_semaphore_signal		414980	2					
ANR	415011	ParameterList	gp_semaphore * sema		414980	3					
ANR	415012	Parameter	gp_semaphore * sema	112:20:3322:3340	414980	0	True				
ANR	415013	ParameterType	gp_semaphore *		414980	0					
ANR	415014	Identifier	sema		414980	1					
ANR	415015	CFGEntryNode	ENTRY		414980		True				
ANR	415016	CFGExitNode	EXIT		414980		True				
ANR	415017	Symbol	sema		414980						
ANR	415018	Symbol	NULL		414980						
ANR	415019	Symbol	winSema		414980						
ANR	415020	Symbol	winSema -> handle		414980						
ANR	415021	Symbol	* winSema		414980						
ANR	415022	Symbol	ReleaseSemaphore		414980						
ANR	415023	Symbol	gs_error_unknownerror		414980						
ANR	415024	ClassDef	win32_monitor_s	124:8:3594:3689							
ANR	415025	DeclStmt									
ANR	415026	Decl							CRITICAL_SECTION	CRITICAL_SECTION	lock
ANR	415027	DeclStmt									
ANR	415028	Decl							win32_monitor_s	win32_monitor_s	win32_monitor
ANR	415029	Function	gp_monitor_sizeof	128:0:3692:3757							
ANR	415030	FunctionDef	gp_monitor_sizeof ()		415029	0					
ANR	415031	CompoundStatement		130:0:3721:3757	415029	0					
ANR	415032	ReturnStatement	return sizeof ( win32_monitor ) ;	131:4:3727:3755	415029	0	True				
ANR	415033	SizeofExpression	sizeof ( win32_monitor )		415029	0					
ANR	415034	Sizeof	sizeof		415029	0					
ANR	415035	SizeofOperand	win32_monitor		415029	1					
ANR	415036	ReturnType	uint		415029	1					
ANR	415037	Identifier	gp_monitor_sizeof		415029	2					
ANR	415038	ParameterList			415029	3					
ANR	415039	CFGEntryNode	ENTRY		415029		True				
ANR	415040	CFGExitNode	EXIT		415029		True				
ANR	415041	Function	gp_monitor_open	134:0:3760:4267							
ANR	415042	FunctionDef	gp_monitor_open (gp_monitor * mon)		415041	0					
ANR	415043	CompoundStatement		138:0:3916:4267	415041	0					
ANR	415044	Statement	win32_monitor	139:4:3922:3934	415041	0	True				
ANR	415045	Statement	*	139:18:3936:3936	415041	1	True				
ANR	415046	Statement	const	139:19:3937:3941	415041	2	True				
ANR	415047	ExpressionStatement	winMon = ( win32_monitor * ) mon	139:25:3943:3972	415041	3	True				
ANR	415048	AssignmentExpression	winMon = ( win32_monitor * ) mon		415041	0		=			
ANR	415049	Identifier	winMon		415041	0					
ANR	415050	CastExpression	( win32_monitor * ) mon		415041	1					
ANR	415051	CastTarget	win32_monitor *		415041	0					
ANR	415052	Identifier	mon		415041	1					
ANR	415053	IfStatement	if ( mon )		415041	4					
ANR	415054	Condition	mon	141:8:3983:3985	415041	0	True				
ANR	415055	Identifier	mon		415041	0					
ANR	415056	CompoundStatement		4:13:71:71	415041	1					
ANR	415057	ExpressionStatement	"InitializeCriticalSectionEx ( & winMon -> lock , 0 , 0 )"	143:8:4011:4059	415041	0	True				
ANR	415058	CallExpression	"InitializeCriticalSectionEx ( & winMon -> lock , 0 , 0 )"		415041	0					
ANR	415059	Callee	InitializeCriticalSectionEx		415041	0					
ANR	415060	Identifier	InitializeCriticalSectionEx		415041	0					
ANR	415061	ArgumentList	& winMon -> lock		415041	1					
ANR	415062	Argument	& winMon -> lock		415041	0					
ANR	415063	UnaryOperationExpression	& winMon -> lock		415041	0					
ANR	415064	UnaryOperator	&		415041	0					
ANR	415065	PtrMemberAccess	winMon -> lock		415041	1					
ANR	415066	Identifier	winMon		415041	0					
ANR	415067	Identifier	lock		415041	1					
ANR	415068	Argument	0		415041	1					
ANR	415069	PrimaryExpression	0		415041	0					
ANR	415070	Argument	0		415041	2					
ANR	415071	PrimaryExpression	0		415041	0					
ANR	415072	ReturnStatement	return 0 ;	147:8:4180:4188	415041	1	True				
ANR	415073	PrimaryExpression	0		415041	0					
ANR	415074	ElseStatement	else		415041	0					
ANR	415075	ReturnStatement	return 1 ;	149:8:4209:4217	415041	0	True				
ANR	415076	PrimaryExpression	1		415041	0					
ANR	415077	ReturnType	int		415041	1					
ANR	415078	Identifier	gp_monitor_open		415041	2					
ANR	415079	ParameterList	gp_monitor * mon		415041	3					
ANR	415080	Parameter	gp_monitor * mon	136:16:3871:3886	415041	0	True				
ANR	415081	ParameterType	gp_monitor *		415041	0					
ANR	415082	Identifier	mon		415041	1					
ANR	415083	CFGEntryNode	ENTRY		415041		True				
ANR	415084	CFGExitNode	EXIT		415041		True				
ANR	415085	Symbol	winMon		415041						
ANR	415086	Symbol	mon		415041						
ANR	415087	Symbol	& winMon -> lock		415041						
ANR	415088	Function	gp_monitor_close	152:0:4270:4488							
ANR	415089	FunctionDef	gp_monitor_close (gp_monitor * mon)		415088	0					
ANR	415090	CompoundStatement		156:0:4352:4488	415088	0					
ANR	415091	Statement	win32_monitor	157:4:4358:4370	415088	0	True				
ANR	415092	Statement	*	157:18:4372:4372	415088	1	True				
ANR	415093	Statement	const	157:19:4373:4377	415088	2	True				
ANR	415094	ExpressionStatement	winMon = ( win32_monitor * ) mon	157:25:4379:4408	415088	3	True				
ANR	415095	AssignmentExpression	winMon = ( win32_monitor * ) mon		415088	0		=			
ANR	415096	Identifier	winMon		415088	0					
ANR	415097	CastExpression	( win32_monitor * ) mon		415088	1					
ANR	415098	CastTarget	win32_monitor *		415088	0					
ANR	415099	Identifier	mon		415088	1					
ANR	415100	ExpressionStatement	DeleteCriticalSection ( & winMon -> lock )	159:4:4415:4451	415088	4	True				
ANR	415101	CallExpression	DeleteCriticalSection ( & winMon -> lock )		415088	0					
ANR	415102	Callee	DeleteCriticalSection		415088	0					
ANR	415103	Identifier	DeleteCriticalSection		415088	0					
ANR	415104	ArgumentList	& winMon -> lock		415088	1					
ANR	415105	Argument	& winMon -> lock		415088	0					
ANR	415106	UnaryOperationExpression	& winMon -> lock		415088	0					
ANR	415107	UnaryOperator	&		415088	0					
ANR	415108	PtrMemberAccess	winMon -> lock		415088	1					
ANR	415109	Identifier	winMon		415088	0					
ANR	415110	Identifier	lock		415088	1					
ANR	415111	ReturnStatement	return 0 ;	160:4:4478:4486	415088	5	True				
ANR	415112	PrimaryExpression	0		415088	0					
ANR	415113	ReturnType	int		415088	1					
ANR	415114	Identifier	gp_monitor_close		415088	2					
ANR	415115	ParameterList	gp_monitor * mon		415088	3					
ANR	415116	Parameter	gp_monitor * mon	154:17:4309:4324	415088	0	True				
ANR	415117	ParameterType	gp_monitor *		415088	0					
ANR	415118	Identifier	mon		415088	1					
ANR	415119	CFGEntryNode	ENTRY		415088		True				
ANR	415120	CFGExitNode	EXIT		415088		True				
ANR	415121	Symbol	winMon		415088						
ANR	415122	Symbol	mon		415088						
ANR	415123	Symbol	& winMon -> lock		415088						
ANR	415124	Function	gp_monitor_enter	163:0:4491:4738							
ANR	415125	FunctionDef	gp_monitor_enter (gp_monitor * mon)		415124	0					
ANR	415126	CompoundStatement		167:0:4603:4738	415124	0					
ANR	415127	Statement	win32_monitor	168:4:4609:4621	415124	0	True				
ANR	415128	Statement	*	168:18:4623:4623	415124	1	True				
ANR	415129	Statement	const	168:19:4624:4628	415124	2	True				
ANR	415130	ExpressionStatement	winMon = ( win32_monitor * ) mon	168:25:4630:4659	415124	3	True				
ANR	415131	AssignmentExpression	winMon = ( win32_monitor * ) mon		415124	0		=			
ANR	415132	Identifier	winMon		415124	0					
ANR	415133	CastExpression	( win32_monitor * ) mon		415124	1					
ANR	415134	CastTarget	win32_monitor *		415124	0					
ANR	415135	Identifier	mon		415124	1					
ANR	415136	ExpressionStatement	EnterCriticalSection ( & winMon -> lock )	170:4:4666:4701	415124	4	True				
ANR	415137	CallExpression	EnterCriticalSection ( & winMon -> lock )		415124	0					
ANR	415138	Callee	EnterCriticalSection		415124	0					
ANR	415139	Identifier	EnterCriticalSection		415124	0					
ANR	415140	ArgumentList	& winMon -> lock		415124	1					
ANR	415141	Argument	& winMon -> lock		415124	0					
ANR	415142	UnaryOperationExpression	& winMon -> lock		415124	0					
ANR	415143	UnaryOperator	&		415124	0					
ANR	415144	PtrMemberAccess	winMon -> lock		415124	1					
ANR	415145	Identifier	winMon		415124	0					
ANR	415146	Identifier	lock		415124	1					
ANR	415147	ReturnStatement	return 0 ;	171:4:4728:4736	415124	5	True				
ANR	415148	PrimaryExpression	0		415124	0					
ANR	415149	ReturnType	int		415124	1					
ANR	415150	Identifier	gp_monitor_enter		415124	2					
ANR	415151	ParameterList	gp_monitor * mon		415124	3					
ANR	415152	Parameter	gp_monitor * mon	165:17:4560:4575	415124	0	True				
ANR	415153	ParameterType	gp_monitor *		415124	0					
ANR	415154	Identifier	mon		415124	1					
ANR	415155	CFGEntryNode	ENTRY		415124		True				
ANR	415156	CFGExitNode	EXIT		415124		True				
ANR	415157	Symbol	winMon		415124						
ANR	415158	Symbol	mon		415124						
ANR	415159	Symbol	& winMon -> lock		415124						
ANR	415160	Function	gp_monitor_leave	174:0:4741:4988							
ANR	415161	FunctionDef	gp_monitor_leave (gp_monitor * mon)		415160	0					
ANR	415162	CompoundStatement		178:0:4853:4988	415160	0					
ANR	415163	Statement	win32_monitor	179:4:4859:4871	415160	0	True				
ANR	415164	Statement	*	179:18:4873:4873	415160	1	True				
ANR	415165	Statement	const	179:19:4874:4878	415160	2	True				
ANR	415166	ExpressionStatement	winMon = ( win32_monitor * ) mon	179:25:4880:4909	415160	3	True				
ANR	415167	AssignmentExpression	winMon = ( win32_monitor * ) mon		415160	0		=			
ANR	415168	Identifier	winMon		415160	0					
ANR	415169	CastExpression	( win32_monitor * ) mon		415160	1					
ANR	415170	CastTarget	win32_monitor *		415160	0					
ANR	415171	Identifier	mon		415160	1					
ANR	415172	ExpressionStatement	LeaveCriticalSection ( & winMon -> lock )	181:4:4916:4951	415160	4	True				
ANR	415173	CallExpression	LeaveCriticalSection ( & winMon -> lock )		415160	0					
ANR	415174	Callee	LeaveCriticalSection		415160	0					
ANR	415175	Identifier	LeaveCriticalSection		415160	0					
ANR	415176	ArgumentList	& winMon -> lock		415160	1					
ANR	415177	Argument	& winMon -> lock		415160	0					
ANR	415178	UnaryOperationExpression	& winMon -> lock		415160	0					
ANR	415179	UnaryOperator	&		415160	0					
ANR	415180	PtrMemberAccess	winMon -> lock		415160	1					
ANR	415181	Identifier	winMon		415160	0					
ANR	415182	Identifier	lock		415160	1					
ANR	415183	ReturnStatement	return 0 ;	182:4:4978:4986	415160	5	True				
ANR	415184	PrimaryExpression	0		415160	0					
ANR	415185	ReturnType	int		415160	1					
ANR	415186	Identifier	gp_monitor_leave		415160	2					
ANR	415187	ParameterList	gp_monitor * mon		415160	3					
ANR	415188	Parameter	gp_monitor * mon	176:17:4810:4825	415160	0	True				
ANR	415189	ParameterType	gp_monitor *		415160	0					
ANR	415190	Identifier	mon		415160	1					
ANR	415191	CFGEntryNode	ENTRY		415160		True				
ANR	415192	CFGExitNode	EXIT		415160		True				
ANR	415193	Symbol	winMon		415160						
ANR	415194	Symbol	mon		415160						
ANR	415195	Symbol	& winMon -> lock		415160						
ANR	415196	ClassDef	gp_thread_creation_closure_s	187:8:5045:5232							
ANR	415197	DeclStmt									
ANR	415198	Decl							gp_thread_creation_callback_t	gp_thread_creation_callback_t	function
ANR	415199	DeclStmt									
ANR	415200	Decl							void	void *	data
ANR	415201	DeclStmt									
ANR	415202	Decl							gp_thread_creation_closure_s	gp_thread_creation_closure_s	gp_thread_creation_closure
ANR	415203	Function	gp_thread_begin_wrapper	193:0:5291:5607							
ANR	415204	FunctionDef	gp_thread_begin_wrapper (void * thread_data)		415203	0					
ANR	415205	CompoundStatement		197:0:5426:5607	415203	0					
ANR	415206	IdentifierDeclStatement	gp_thread_creation_closure closure ;	198:4:5432:5466	415203	0	True				
ANR	415207	IdentifierDecl	closure		415203	0					
ANR	415208	IdentifierDeclType	gp_thread_creation_closure		415203	0					
ANR	415209	Identifier	closure		415203	1					
ANR	415210	ExpressionStatement	closure = * ( gp_thread_creation_closure * ) thread_data	200:4:5473:5525	415203	1	True				
ANR	415211	AssignmentExpression	closure = * ( gp_thread_creation_closure * ) thread_data		415203	0		=			
ANR	415212	Identifier	closure		415203	0					
ANR	415213	UnaryOperationExpression	* ( gp_thread_creation_closure * ) thread_data		415203	1					
ANR	415214	UnaryOperator	*		415203	0					
ANR	415215	CastExpression	( gp_thread_creation_closure * ) thread_data		415203	1					
ANR	415216	CastTarget	gp_thread_creation_closure *		415203	0					
ANR	415217	Identifier	thread_data		415203	1					
ANR	415218	ExpressionStatement	free ( thread_data )	201:4:5531:5548	415203	2	True				
ANR	415219	CallExpression	free ( thread_data )		415203	0					
ANR	415220	Callee	free		415203	0					
ANR	415221	Identifier	free		415203	0					
ANR	415222	ArgumentList	thread_data		415203	1					
ANR	415223	Argument	thread_data		415203	0					
ANR	415224	Identifier	thread_data		415203	0					
ANR	415225	ExpressionStatement	( * closure . function ) ( closure . data )	202:4:5554:5587	415203	3	True				
ANR	415226	CallExpression	( * closure . function ) ( closure . data )		415203	0					
ANR	415227	Callee	* closure . function		415203	0					
ANR	415228	UnaryOperationExpression	* closure . function		415203	0					
ANR	415229	UnaryOperator	*		415203	0					
ANR	415230	MemberAccess	closure . function		415203	1					
ANR	415231	Identifier	closure		415203	0					
ANR	415232	Identifier	function		415203	1					
ANR	415233	ArgumentList	closure . data		415203	1					
ANR	415234	Argument	closure . data		415203	0					
ANR	415235	MemberAccess	closure . data		415203	0					
ANR	415236	Identifier	closure		415203	0					
ANR	415237	Identifier	data		415203	1					
ANR	415238	ExpressionStatement	_endthread ( )	203:4:5593:5605	415203	4	True				
ANR	415239	CallExpression	_endthread ( )		415203	0					
ANR	415240	Callee	_endthread		415203	0					
ANR	415241	Identifier	_endthread		415203	0					
ANR	415242	ArgumentList			415203	1					
ANR	415243	ReturnType	static void		415203	1					
ANR	415244	Identifier	gp_thread_begin_wrapper		415203	2					
ANR	415245	ParameterList	void * thread_data		415203	3					
ANR	415246	Parameter	void * thread_data	195:24:5352:5368	415203	0	True				
ANR	415247	ParameterType	void *		415203	0					
ANR	415248	Identifier	thread_data		415203	1					
ANR	415249	CFGEntryNode	ENTRY		415203		True				
ANR	415250	CFGExitNode	EXIT		415203		True				
ANR	415251	Symbol	* ( gp_thread_creation_closure * ) thread_data		415203						
ANR	415252	Symbol	closure . data		415203						
ANR	415253	Symbol	closure . function		415203						
ANR	415254	Symbol	* thread_data		415203						
ANR	415255	Symbol	closure		415203						
ANR	415256	Symbol	thread_data		415203						
ANR	415257	Function	gp_create_thread	207:0:5654:6868							
ANR	415258	FunctionDef	"gp_create_thread (gp_thread_creation_callback_t function , void * data)"		415257	0					
ANR	415259	CompoundStatement		212:0:5850:6868	415257	0					
ANR	415260	IdentifierDeclStatement	gp_thread_creation_closure * closure = ( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) ) ;	214:4:5923:6023	415257	0	True				
ANR	415261	IdentifierDecl	* closure = ( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) )		415257	0					
ANR	415262	IdentifierDeclType	gp_thread_creation_closure *		415257	0					
ANR	415263	Identifier	closure		415257	1					
ANR	415264	AssignmentExpression	* closure = ( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) )		415257	2		=			
ANR	415265	Identifier	closure		415257	0					
ANR	415266	CastExpression	( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) )		415257	1					
ANR	415267	CastTarget	gp_thread_creation_closure *		415257	0					
ANR	415268	CallExpression	malloc ( sizeof ( * closure ) )		415257	1					
ANR	415269	Callee	malloc		415257	0					
ANR	415270	Identifier	malloc		415257	0					
ANR	415271	ArgumentList	sizeof ( * closure )		415257	1					
ANR	415272	Argument	sizeof ( * closure )		415257	0					
ANR	415273	SizeofExpression	sizeof ( * closure )		415257	0					
ANR	415274	Sizeof	sizeof		415257	0					
ANR	415275	UnaryOperationExpression	* closure		415257	1					
ANR	415276	UnaryOperator	*		415257	0					
ANR	415277	Identifier	closure		415257	1					
ANR	415278	IfStatement	if ( ! closure )		415257	1					
ANR	415279	Condition	! closure	217:8:6034:6041	415257	0	True				
ANR	415280	UnaryOperationExpression	! closure		415257	0					
ANR	415281	UnaryOperator	!		415257	0					
ANR	415282	Identifier	closure		415257	1					
ANR	415283	ExpressionStatement	return_error ( gs_error_VMerror )	218:8:6052:6082	415257	1	True				
ANR	415284	CallExpression	return_error ( gs_error_VMerror )		415257	0					
ANR	415285	Callee	return_error		415257	0					
ANR	415286	Identifier	return_error		415257	0					
ANR	415287	ArgumentList	gs_error_VMerror		415257	1					
ANR	415288	Argument	gs_error_VMerror		415257	0					
ANR	415289	Identifier	gs_error_VMerror		415257	0					
ANR	415290	ExpressionStatement	closure -> function = function	219:4:6088:6116	415257	2	True				
ANR	415291	AssignmentExpression	closure -> function = function		415257	0		=			
ANR	415292	PtrMemberAccess	closure -> function		415257	0					
ANR	415293	Identifier	closure		415257	0					
ANR	415294	Identifier	function		415257	1					
ANR	415295	Identifier	function		415257	1					
ANR	415296	ExpressionStatement	closure -> data = data	220:4:6122:6142	415257	3	True				
ANR	415297	AssignmentExpression	closure -> data = data		415257	0		=			
ANR	415298	PtrMemberAccess	closure -> data		415257	0					
ANR	415299	Identifier	closure		415257	0					
ANR	415300	Identifier	data		415257	1					
ANR	415301	Identifier	data		415257	1					
ANR	415302	IfStatement	"if ( ~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure ) != 0 )"		415257	4					
ANR	415303	Condition	"~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure ) != 0"	233:8:6710:6771	415257	0	True				
ANR	415304	EqualityExpression	"~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure ) != 0"		415257	0		!=			
ANR	415305	CallExpression	"~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure )"		415257	0					
ANR	415306	Callee	~BEGIN_THREAD		415257	0					
ANR	415307	Identifier	~BEGIN_THREAD		415257	0					
ANR	415308	ArgumentList	gp_thread_begin_wrapper		415257	1					
ANR	415309	Argument	gp_thread_begin_wrapper		415257	0					
ANR	415310	Identifier	gp_thread_begin_wrapper		415257	0					
ANR	415311	Argument	128 * 1024		415257	1					
ANR	415312	MultiplicativeExpression	128 * 1024		415257	0		*			
ANR	415313	PrimaryExpression	128		415257	0					
ANR	415314	PrimaryExpression	1024		415257	1					
ANR	415315	Argument	closure		415257	2					
ANR	415316	Identifier	closure		415257	0					
ANR	415317	PrimaryExpression	0		415257	1					
ANR	415318	CompoundStatement		23:4:927:927	415257	1					
ANR	415319	ExpressionStatement	free ( closure )	235:8:6788:6801	415257	0	True				
ANR	415320	CallExpression	free ( closure )		415257	0					
ANR	415321	Callee	free		415257	0					
ANR	415322	Identifier	free		415257	0					
ANR	415323	ArgumentList	closure		415257	1					
ANR	415324	Argument	closure		415257	0					
ANR	415325	Identifier	closure		415257	0					
ANR	415326	ReturnStatement	return 0 ;	236:8:6811:6819	415257	1	True				
ANR	415327	PrimaryExpression	0		415257	0					
ANR	415328	ExpressionStatement	return_error ( gs_error_unknownerror )	238:4:6831:6866	415257	5	True				
ANR	415329	CallExpression	return_error ( gs_error_unknownerror )		415257	0					
ANR	415330	Callee	return_error		415257	0					
ANR	415331	Identifier	return_error		415257	0					
ANR	415332	ArgumentList	gs_error_unknownerror		415257	1					
ANR	415333	Argument	gs_error_unknownerror		415257	0					
ANR	415334	Identifier	gs_error_unknownerror		415257	0					
ANR	415335	ReturnType	int		415257	1					
ANR	415336	Identifier	gp_create_thread		415257	2					
ANR	415337	ParameterList	"gp_thread_creation_callback_t function , void * data"		415257	3					
ANR	415338	Parameter	gp_thread_creation_callback_t function	209:17:5718:5755	415257	0	True				
ANR	415339	ParameterType	gp_thread_creation_callback_t		415257	0					
ANR	415340	Identifier	function		415257	1					
ANR	415341	Parameter	void * data	210:17:5799:5808	415257	1	True				
ANR	415342	ParameterType	void *		415257	0					
ANR	415343	Identifier	data		415257	1					
ANR	415344	CFGEntryNode	ENTRY		415257		True				
ANR	415345	CFGExitNode	EXIT		415257		True				
ANR	415346	Symbol	malloc		415257						
ANR	415347	Symbol	gs_error_VMerror		415257						
ANR	415348	Symbol	~BEGIN_THREAD		415257						
ANR	415349	Symbol	gp_thread_begin_wrapper		415257						
ANR	415350	Symbol	* closure		415257						
ANR	415351	Symbol	data		415257						
ANR	415352	Symbol	function		415257						
ANR	415353	Symbol	closure -> function		415257						
ANR	415354	Symbol	closure -> data		415257						
ANR	415355	Symbol	closure		415257						
ANR	415356	Symbol	gs_error_unknownerror		415257						
ANR	415357	Function	gp_thread_start_wrapper	242:0:6925:7192							
ANR	415358	FunctionDef	gp_thread_start_wrapper (void * thread_data)		415357	0					
ANR	415359	CompoundStatement		244:0:6994:7192	415357	0					
ANR	415360	IdentifierDeclStatement	gp_thread_creation_closure closure ;	245:4:7000:7034	415357	0	True				
ANR	415361	IdentifierDecl	closure		415357	0					
ANR	415362	IdentifierDeclType	gp_thread_creation_closure		415357	0					
ANR	415363	Identifier	closure		415357	1					
ANR	415364	ExpressionStatement	closure = * ( gp_thread_creation_closure * ) thread_data	247:4:7041:7093	415357	1	True				
ANR	415365	AssignmentExpression	closure = * ( gp_thread_creation_closure * ) thread_data		415357	0		=			
ANR	415366	Identifier	closure		415357	0					
ANR	415367	UnaryOperationExpression	* ( gp_thread_creation_closure * ) thread_data		415357	1					
ANR	415368	UnaryOperator	*		415357	0					
ANR	415369	CastExpression	( gp_thread_creation_closure * ) thread_data		415357	1					
ANR	415370	CastTarget	gp_thread_creation_closure *		415357	0					
ANR	415371	Identifier	thread_data		415357	1					
ANR	415372	ExpressionStatement	free ( thread_data )	248:4:7099:7116	415357	2	True				
ANR	415373	CallExpression	free ( thread_data )		415357	0					
ANR	415374	Callee	free		415357	0					
ANR	415375	Identifier	free		415357	0					
ANR	415376	ArgumentList	thread_data		415357	1					
ANR	415377	Argument	thread_data		415357	0					
ANR	415378	Identifier	thread_data		415357	0					
ANR	415379	ExpressionStatement	( * closure . function ) ( closure . data )	249:4:7122:7155	415357	3	True				
ANR	415380	CallExpression	( * closure . function ) ( closure . data )		415357	0					
ANR	415381	Callee	* closure . function		415357	0					
ANR	415382	UnaryOperationExpression	* closure . function		415357	0					
ANR	415383	UnaryOperator	*		415357	0					
ANR	415384	MemberAccess	closure . function		415357	1					
ANR	415385	Identifier	closure		415357	0					
ANR	415386	Identifier	function		415357	1					
ANR	415387	ArgumentList	closure . data		415357	1					
ANR	415388	Argument	closure . data		415357	0					
ANR	415389	MemberAccess	closure . data		415357	0					
ANR	415390	Identifier	closure		415357	0					
ANR	415391	Identifier	data		415357	1					
ANR	415392	ExpressionStatement	_endthreadex ( 0 )	250:4:7161:7176	415357	4	True				
ANR	415393	CallExpression	_endthreadex ( 0 )		415357	0					
ANR	415394	Callee	_endthreadex		415357	0					
ANR	415395	Identifier	_endthreadex		415357	0					
ANR	415396	ArgumentList	0		415357	1					
ANR	415397	Argument	0		415357	0					
ANR	415398	PrimaryExpression	0		415357	0					
ANR	415399	ReturnStatement	return 0 ;	251:4:7182:7190	415357	5	True				
ANR	415400	PrimaryExpression	0		415357	0					
ANR	415401	ReturnType	static unsigned __stdcall		415357	1					
ANR	415402	Identifier	gp_thread_start_wrapper		415357	2					
ANR	415403	ParameterList	void * thread_data		415357	3					
ANR	415404	Parameter	void * thread_data	243:24:6975:6991	415357	0	True				
ANR	415405	ParameterType	void *		415357	0					
ANR	415406	Identifier	thread_data		415357	1					
ANR	415407	CFGEntryNode	ENTRY		415357		True				
ANR	415408	CFGExitNode	EXIT		415357		True				
ANR	415409	Symbol	* ( gp_thread_creation_closure * ) thread_data		415357						
ANR	415410	Symbol	closure . data		415357						
ANR	415411	Symbol	closure . function		415357						
ANR	415412	Symbol	* thread_data		415357						
ANR	415413	Symbol	closure		415357						
ANR	415414	Symbol	thread_data		415357						
ANR	415415	Function	gp_thread_start	254:0:7195:8096							
ANR	415416	FunctionDef	"gp_thread_start (gp_thread_creation_callback_t function , void * data , gp_thread_id * thread)"		415415	0					
ANR	415417	CompoundStatement		256:0:7309:8096	415415	0					
ANR	415418	ExpressionStatement	* thread = ( gp_thread_id ) 1	258:4:7358:7383	415415	0	True				
ANR	415419	AssignmentExpression	* thread = ( gp_thread_id ) 1		415415	0		=			
ANR	415420	UnaryOperationExpression	* thread		415415	0					
ANR	415421	UnaryOperator	*		415415	0					
ANR	415422	Identifier	thread		415415	1					
ANR	415423	CastExpression	( gp_thread_id ) 1		415415	1					
ANR	415424	CastTarget	gp_thread_id		415415	0					
ANR	415425	PrimaryExpression	1		415415	1					
ANR	415426	ReturnStatement	"return gp_create_thread ( function , data ) ;"	259:4:7389:7428	415415	1	True				
ANR	415427	CallExpression	"gp_create_thread ( function , data )"		415415	0					
ANR	415428	Callee	gp_create_thread		415415	0					
ANR	415429	Identifier	gp_create_thread		415415	0					
ANR	415430	ArgumentList	function		415415	1					
ANR	415431	Argument	function		415415	0					
ANR	415432	Identifier	function		415415	0					
ANR	415433	Argument	data		415415	1					
ANR	415434	Identifier	data		415415	0					
ANR	415435	ReturnType	int		415415	1					
ANR	415436	Identifier	gp_thread_start		415415	2					
ANR	415437	ParameterList	"gp_thread_creation_callback_t function , void * data , gp_thread_id * thread"		415415	3					
ANR	415438	Parameter	gp_thread_creation_callback_t function	254:20:7215:7252	415415	0	True				
ANR	415439	ParameterType	gp_thread_creation_callback_t		415415	0					
ANR	415440	Identifier	function		415415	1					
ANR	415441	Parameter	void * data	255:20:7275:7284	415415	1	True				
ANR	415442	ParameterType	void *		415415	0					
ANR	415443	Identifier	data		415415	1					
ANR	415444	Parameter	gp_thread_id * thread	255:32:7287:7306	415415	2	True				
ANR	415445	ParameterType	gp_thread_id *		415415	0					
ANR	415446	Identifier	thread		415415	1					
ANR	415447	CFGEntryNode	ENTRY		415415		True				
ANR	415448	CFGExitNode	EXIT		415415		True				
ANR	415449	Symbol	data		415415						
ANR	415450	Symbol	function		415415						
ANR	415451	Symbol	* thread		415415						
ANR	415452	Symbol	thread		415415						
ANR	415453	Symbol	gp_create_thread		415415						
ANR	415454	Function	gp_thread_finish	284:0:8099:8405							
ANR	415455	FunctionDef	gp_thread_finish (gp_thread_id thread)		415454	0					
ANR	415456	CompoundStatement		285:0:8142:8405	415454	0					
ANR	415457	IfStatement	if ( thread == NULL )		415454	0					
ANR	415458	Condition	thread == NULL	287:8:8196:8209	415454	0	True				
ANR	415459	EqualityExpression	thread == NULL		415454	0		==			
ANR	415460	Identifier	thread		415454	0					
ANR	415461	Identifier	NULL		415454	1					
ANR	415462	ReturnStatement	return ;	288:8:8220:8226	415454	1	True				
ANR	415463	ExpressionStatement	"WaitForSingleObjectEx ( ( HANDLE ) thread , INFINITE , FALSE )"	290:4:8245:8299	415454	1	True				
ANR	415464	CallExpression	"WaitForSingleObjectEx ( ( HANDLE ) thread , INFINITE , FALSE )"		415454	0					
ANR	415465	Callee	WaitForSingleObjectEx		415454	0					
ANR	415466	Identifier	WaitForSingleObjectEx		415454	0					
ANR	415467	ArgumentList	( HANDLE ) thread		415454	1					
ANR	415468	Argument	( HANDLE ) thread		415454	0					
ANR	415469	CastExpression	( HANDLE ) thread		415454	0					
ANR	415470	CastTarget	HANDLE		415454	0					
ANR	415471	Identifier	thread		415454	1					
ANR	415472	Argument	INFINITE		415454	1					
ANR	415473	Identifier	INFINITE		415454	0					
ANR	415474	Argument	FALSE		415454	2					
ANR	415475	Identifier	FALSE		415454	0					
ANR	415476	ExpressionStatement	CloseHandle ( ( HANDLE ) thread )	294:4:8369:8396	415454	2	True				
ANR	415477	CallExpression	CloseHandle ( ( HANDLE ) thread )		415454	0					
ANR	415478	Callee	CloseHandle		415454	0					
ANR	415479	Identifier	CloseHandle		415454	0					
ANR	415480	ArgumentList	( HANDLE ) thread		415454	1					
ANR	415481	Argument	( HANDLE ) thread		415454	0					
ANR	415482	CastExpression	( HANDLE ) thread		415454	0					
ANR	415483	CastTarget	HANDLE		415454	0					
ANR	415484	Identifier	thread		415454	1					
ANR	415485	ReturnType	void		415454	1					
ANR	415486	Identifier	gp_thread_finish		415454	2					
ANR	415487	ParameterList	gp_thread_id thread		415454	3					
ANR	415488	Parameter	gp_thread_id thread	284:22:8121:8139	415454	0	True				
ANR	415489	ParameterType	gp_thread_id		415454	0					
ANR	415490	Identifier	thread		415454	1					
ANR	415491	CFGEntryNode	ENTRY		415454		True				
ANR	415492	CFGExitNode	EXIT		415454		True				
ANR	415493	Symbol	NULL		415454						
ANR	415494	Symbol	FALSE		415454						
ANR	415495	Symbol	thread		415454						
ANR	415496	Symbol	INFINITE		415454						
