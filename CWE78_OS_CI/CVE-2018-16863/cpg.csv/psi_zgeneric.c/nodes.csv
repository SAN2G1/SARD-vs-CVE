command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9129403	File	data/converged/CVE-2018-16863_ghostpdl/psi_zgeneric.c								
ANR	9129404	DeclStmt									
ANR	9129405	Decl							int	int ( i_ctx_t * )	zcopy_integer
ANR	9129406	DeclStmt									
ANR	9129407	Decl							int	int ( i_ctx_t * )	zcopy_interval
ANR	9129408	DeclStmt									
ANR	9129409	Decl							int	"int ( i_ctx_t * , os_ptr , uint , os_ptr , client_name_t )"	copy_interval
ANR	9129410	Function	zcopy	47:0:1695:2093							
ANR	9129411	FunctionDef	zcopy (i_ctx_t * i_ctx_p)		9129410	0					
ANR	9129412	CompoundStatement		49:0:1723:2093	9129410	0					
ANR	9129413	IdentifierDeclStatement	os_ptr op = osp ;	50:4:1729:1744	9129410	0	True				
ANR	9129414	IdentifierDecl	op = osp		9129410	0					
ANR	9129415	IdentifierDeclType	os_ptr		9129410	0					
ANR	9129416	Identifier	op		9129410	1					
ANR	9129417	AssignmentExpression	op = osp		9129410	2		=			
ANR	9129418	Identifier	osp		9129410	0					
ANR	9129419	Identifier	osp		9129410	1					
ANR	9129420	IdentifierDeclStatement	int type = r_type ( op ) ;	51:4:1750:1771	9129410	1	True				
ANR	9129421	IdentifierDecl	type = r_type ( op )		9129410	0					
ANR	9129422	IdentifierDeclType	int		9129410	0					
ANR	9129423	Identifier	type		9129410	1					
ANR	9129424	AssignmentExpression	type = r_type ( op )		9129410	2		=			
ANR	9129425	Identifier	type		9129410	0					
ANR	9129426	CallExpression	r_type ( op )		9129410	1					
ANR	9129427	Callee	r_type		9129410	0					
ANR	9129428	Identifier	r_type		9129410	0					
ANR	9129429	ArgumentList	op		9129410	1					
ANR	9129430	Argument	op		9129410	0					
ANR	9129431	Identifier	op		9129410	0					
ANR	9129432	IfStatement	if ( type == t_integer )		9129410	2					
ANR	9129433	Condition	type == t_integer	53:8:1782:1798	9129410	0	True				
ANR	9129434	EqualityExpression	type == t_integer		9129410	0		==			
ANR	9129435	Identifier	type		9129410	0					
ANR	9129436	Identifier	t_integer		9129410	1					
ANR	9129437	ReturnStatement	return zcopy_integer ( i_ctx_p ) ;	54:8:1809:1838	9129410	1	True				
ANR	9129438	CallExpression	zcopy_integer ( i_ctx_p )		9129410	0					
ANR	9129439	Callee	zcopy_integer		9129410	0					
ANR	9129440	Identifier	zcopy_integer		9129410	0					
ANR	9129441	ArgumentList	i_ctx_p		9129410	1					
ANR	9129442	Argument	i_ctx_p		9129410	0					
ANR	9129443	Identifier	i_ctx_p		9129410	0					
ANR	9129444	ExpressionStatement	check_op ( 2 )	55:4:1844:1855	9129410	3	True				
ANR	9129445	CallExpression	check_op ( 2 )		9129410	0					
ANR	9129446	Callee	check_op		9129410	0					
ANR	9129447	Identifier	check_op		9129410	0					
ANR	9129448	ArgumentList	2		9129410	1					
ANR	9129449	Argument	2		9129410	0					
ANR	9129450	PrimaryExpression	2		9129410	0					
ANR	9129451	SwitchStatement	switch ( type )		9129410	4					
ANR	9129452	Condition	type	56:12:1869:1872	9129410	0	True				
ANR	9129453	Identifier	type		9129410	0					
ANR	9129454	CompoundStatement		8:18:151:151	9129410	1					
ANR	9129455	Label	case t_array :	57:8:1885:1897	9129410	0	True				
ANR	9129456	Identifier	t_array		9129410	0					
ANR	9129457	Label	case t_string :	58:8:1907:1920	9129410	1	True				
ANR	9129458	Identifier	t_string		9129410	0					
ANR	9129459	ReturnStatement	return zcopy_interval ( i_ctx_p ) ;	59:12:1934:1964	9129410	2	True				
ANR	9129460	CallExpression	zcopy_interval ( i_ctx_p )		9129410	0					
ANR	9129461	Callee	zcopy_interval		9129410	0					
ANR	9129462	Identifier	zcopy_interval		9129410	0					
ANR	9129463	ArgumentList	i_ctx_p		9129410	1					
ANR	9129464	Argument	i_ctx_p		9129410	0					
ANR	9129465	Identifier	i_ctx_p		9129410	0					
ANR	9129466	Label	case t_dictionary :	60:8:1974:1991	9129410	3	True				
ANR	9129467	Identifier	t_dictionary		9129410	0					
ANR	9129468	ReturnStatement	return zcopy_dict ( i_ctx_p ) ;	61:12:2005:2031	9129410	4	True				
ANR	9129469	CallExpression	zcopy_dict ( i_ctx_p )		9129410	0					
ANR	9129470	Callee	zcopy_dict		9129410	0					
ANR	9129471	Identifier	zcopy_dict		9129410	0					
ANR	9129472	ArgumentList	i_ctx_p		9129410	1					
ANR	9129473	Argument	i_ctx_p		9129410	0					
ANR	9129474	Identifier	i_ctx_p		9129410	0					
ANR	9129475	Label	default :	62:8:2041:2048	9129410	5	True				
ANR	9129476	Identifier	default		9129410	0					
ANR	9129477	ExpressionStatement	return_op_typecheck ( op )	63:12:2062:2085	9129410	6	True				
ANR	9129478	CallExpression	return_op_typecheck ( op )		9129410	0					
ANR	9129479	Callee	return_op_typecheck		9129410	0					
ANR	9129480	Identifier	return_op_typecheck		9129410	0					
ANR	9129481	ArgumentList	op		9129410	1					
ANR	9129482	Argument	op		9129410	0					
ANR	9129483	Identifier	op		9129410	0					
ANR	9129484	ReturnType	int		9129410	1					
ANR	9129485	Identifier	zcopy		9129410	2					
ANR	9129486	ParameterList	i_ctx_t * i_ctx_p		9129410	3					
ANR	9129487	Parameter	i_ctx_t * i_ctx_p	48:6:1705:1720	9129410	0	True				
ANR	9129488	ParameterType	i_ctx_t *		9129410	0					
ANR	9129489	Identifier	i_ctx_p		9129410	1					
ANR	9129490	CFGEntryNode	ENTRY		9129410		True				
ANR	9129491	CFGExitNode	EXIT		9129410		True				
ANR	9129492	Symbol	op		9129410						
ANR	9129493	Symbol	zcopy_dict		9129410						
ANR	9129494	Symbol	zcopy_integer		9129410						
ANR	9129495	Symbol	t_integer		9129410						
ANR	9129496	Symbol	i_ctx_p		9129410						
ANR	9129497	Symbol	zcopy_interval		9129410						
ANR	9129498	Symbol	type		9129410						
ANR	9129499	Symbol	osp		9129410						
ANR	9129500	Symbol	r_type		9129410						
ANR	9129501	Function	zcopy_integer	68:0:2167:3198							
ANR	9129502	FunctionDef	zcopy_integer (i_ctx_t * i_ctx_p)		9129501	0					
ANR	9129503	CompoundStatement		70:0:2210:3198	9129501	0					
ANR	9129504	IdentifierDeclStatement	os_ptr op = osp ;	71:4:2216:2231	9129501	0	True				
ANR	9129505	IdentifierDecl	op = osp		9129501	0					
ANR	9129506	IdentifierDeclType	os_ptr		9129501	0					
ANR	9129507	Identifier	op		9129501	1					
ANR	9129508	AssignmentExpression	op = osp		9129501	2		=			
ANR	9129509	Identifier	osp		9129501	0					
ANR	9129510	Identifier	osp		9129501	1					
ANR	9129511	IdentifierDeclStatement	os_ptr op1 = op - 1 ;	72:4:2237:2256	9129501	1	True				
ANR	9129512	IdentifierDecl	op1 = op - 1		9129501	0					
ANR	9129513	IdentifierDeclType	os_ptr		9129501	0					
ANR	9129514	Identifier	op1		9129501	1					
ANR	9129515	AssignmentExpression	op1 = op - 1		9129501	2		=			
ANR	9129516	Identifier	op1		9129501	0					
ANR	9129517	AdditiveExpression	op - 1		9129501	1		-			
ANR	9129518	Identifier	op		9129501	0					
ANR	9129519	PrimaryExpression	1		9129501	1					
ANR	9129520	IdentifierDeclStatement	"int count , i ;"	73:4:2262:2274	9129501	2	True				
ANR	9129521	IdentifierDecl	count		9129501	0					
ANR	9129522	IdentifierDeclType	int		9129501	0					
ANR	9129523	Identifier	count		9129501	1					
ANR	9129524	IdentifierDecl	i		9129501	1					
ANR	9129525	IdentifierDeclType	int		9129501	0					
ANR	9129526	Identifier	i		9129501	1					
ANR	9129527	IdentifierDeclStatement	int code ;	74:4:2280:2288	9129501	3	True				
ANR	9129528	IdentifierDecl	code		9129501	0					
ANR	9129529	IdentifierDeclType	int		9129501	0					
ANR	9129530	Identifier	code		9129501	1					
ANR	9129531	IfStatement	if ( ( uint ) op -> value . intval > ( uint ) ( op - osbot ) )		9129501	4					
ANR	9129532	Condition	( uint ) op -> value . intval > ( uint ) ( op - osbot )	76:8:2299:2342	9129501	0	True				
ANR	9129533	RelationalExpression	( uint ) op -> value . intval > ( uint ) ( op - osbot )		9129501	0		>			
ANR	9129534	CastExpression	( uint ) op -> value . intval		9129501	0					
ANR	9129535	CastTarget	uint		9129501	0					
ANR	9129536	MemberAccess	op -> value . intval		9129501	1					
ANR	9129537	PtrMemberAccess	op -> value		9129501	0					
ANR	9129538	Identifier	op		9129501	0					
ANR	9129539	Identifier	value		9129501	1					
ANR	9129540	Identifier	intval		9129501	1					
ANR	9129541	CastExpression	( uint ) ( op - osbot )		9129501	1					
ANR	9129542	CastTarget	uint		9129501	0					
ANR	9129543	AdditiveExpression	op - osbot		9129501	1		-			
ANR	9129544	Identifier	op		9129501	0					
ANR	9129545	Identifier	osbot		9129501	1					
ANR	9129546	CompoundStatement		7:54:134:134	9129501	1					
ANR	9129547	ExpressionStatement	"check_type ( * op , t_integer )"	78:8:2417:2443	9129501	0	True				
ANR	9129548	CallExpression	"check_type ( * op , t_integer )"		9129501	0					
ANR	9129549	Callee	check_type		9129501	0					
ANR	9129550	Identifier	check_type		9129501	0					
ANR	9129551	ArgumentList	* op		9129501	1					
ANR	9129552	Argument	* op		9129501	0					
ANR	9129553	UnaryOperationExpression	* op		9129501	0					
ANR	9129554	UnaryOperator	*		9129501	0					
ANR	9129555	Identifier	op		9129501	1					
ANR	9129556	Argument	t_integer		9129501	1					
ANR	9129557	Identifier	t_integer		9129501	0					
ANR	9129558	IfStatement	if ( op -> value . intval >= ( int ) ref_stack_count ( & o_stack ) )		9129501	1					
ANR	9129559	Condition	op -> value . intval >= ( int ) ref_stack_count ( & o_stack )	79:12:2457:2506	9129501	0	True				
ANR	9129560	RelationalExpression	op -> value . intval >= ( int ) ref_stack_count ( & o_stack )		9129501	0		>=			
ANR	9129561	MemberAccess	op -> value . intval		9129501	0					
ANR	9129562	PtrMemberAccess	op -> value		9129501	0					
ANR	9129563	Identifier	op		9129501	0					
ANR	9129564	Identifier	value		9129501	1					
ANR	9129565	Identifier	intval		9129501	1					
ANR	9129566	CastExpression	( int ) ref_stack_count ( & o_stack )		9129501	1					
ANR	9129567	CastTarget	int		9129501	0					
ANR	9129568	CallExpression	ref_stack_count ( & o_stack )		9129501	1					
ANR	9129569	Callee	ref_stack_count		9129501	0					
ANR	9129570	Identifier	ref_stack_count		9129501	0					
ANR	9129571	ArgumentList	& o_stack		9129501	1					
ANR	9129572	Argument	& o_stack		9129501	0					
ANR	9129573	UnaryOperationExpression	& o_stack		9129501	0					
ANR	9129574	UnaryOperator	&		9129501	0					
ANR	9129575	Identifier	o_stack		9129501	1					
ANR	9129576	ExpressionStatement	return_error ( gs_error_stackunderflow )	80:12:2521:2558	9129501	1	True				
ANR	9129577	CallExpression	return_error ( gs_error_stackunderflow )		9129501	0					
ANR	9129578	Callee	return_error		9129501	0					
ANR	9129579	Identifier	return_error		9129501	0					
ANR	9129580	ArgumentList	gs_error_stackunderflow		9129501	1					
ANR	9129581	Argument	gs_error_stackunderflow		9129501	0					
ANR	9129582	Identifier	gs_error_stackunderflow		9129501	0					
ANR	9129583	IfStatement	if ( op -> value . intval < 0 )		9129501	2					
ANR	9129584	Condition	op -> value . intval < 0	81:12:2572:2591	9129501	0	True				
ANR	9129585	RelationalExpression	op -> value . intval < 0		9129501	0		<			
ANR	9129586	MemberAccess	op -> value . intval		9129501	0					
ANR	9129587	PtrMemberAccess	op -> value		9129501	0					
ANR	9129588	Identifier	op		9129501	0					
ANR	9129589	Identifier	value		9129501	1					
ANR	9129590	Identifier	intval		9129501	1					
ANR	9129591	PrimaryExpression	0		9129501	1					
ANR	9129592	ExpressionStatement	return_error ( gs_error_rangecheck )	82:12:2606:2639	9129501	1	True				
ANR	9129593	CallExpression	return_error ( gs_error_rangecheck )		9129501	0					
ANR	9129594	Callee	return_error		9129501	0					
ANR	9129595	Identifier	return_error		9129501	0					
ANR	9129596	ArgumentList	gs_error_rangecheck		9129501	1					
ANR	9129597	Argument	gs_error_rangecheck		9129501	0					
ANR	9129598	Identifier	gs_error_rangecheck		9129501	0					
ANR	9129599	ExpressionStatement	"check_int_ltu ( * op , ref_stack_count ( & o_stack ) )"	83:8:2649:2694	9129501	3	True				
ANR	9129600	CallExpression	"check_int_ltu ( * op , ref_stack_count ( & o_stack ) )"		9129501	0					
ANR	9129601	Callee	check_int_ltu		9129501	0					
ANR	9129602	Identifier	check_int_ltu		9129501	0					
ANR	9129603	ArgumentList	* op		9129501	1					
ANR	9129604	Argument	* op		9129501	0					
ANR	9129605	UnaryOperationExpression	* op		9129501	0					
ANR	9129606	UnaryOperator	*		9129501	0					
ANR	9129607	Identifier	op		9129501	1					
ANR	9129608	Argument	ref_stack_count ( & o_stack )		9129501	1					
ANR	9129609	CallExpression	ref_stack_count ( & o_stack )		9129501	0					
ANR	9129610	Callee	ref_stack_count		9129501	0					
ANR	9129611	Identifier	ref_stack_count		9129501	0					
ANR	9129612	ArgumentList	& o_stack		9129501	1					
ANR	9129613	Argument	& o_stack		9129501	0					
ANR	9129614	UnaryOperationExpression	& o_stack		9129501	0					
ANR	9129615	UnaryOperator	&		9129501	0					
ANR	9129616	Identifier	o_stack		9129501	1					
ANR	9129617	ExpressionStatement	count = op -> value . intval	84:8:2704:2728	9129501	4	True				
ANR	9129618	AssignmentExpression	count = op -> value . intval		9129501	0		=			
ANR	9129619	Identifier	count		9129501	0					
ANR	9129620	MemberAccess	op -> value . intval		9129501	1					
ANR	9129621	PtrMemberAccess	op -> value		9129501	0					
ANR	9129622	Identifier	op		9129501	0					
ANR	9129623	Identifier	value		9129501	1					
ANR	9129624	Identifier	intval		9129501	1					
ANR	9129625	ElseStatement	else		9129501	0					
ANR	9129626	IfStatement	if ( op1 + ( count = op -> value . intval ) <= ostop )		9129501	0					
ANR	9129627	Condition	op1 + ( count = op -> value . intval ) <= ostop	85:15:2745:2785	9129501	0	True				
ANR	9129628	RelationalExpression	op1 + ( count = op -> value . intval ) <= ostop		9129501	0		<=			
ANR	9129629	AdditiveExpression	op1 + ( count = op -> value . intval )		9129501	0		+			
ANR	9129630	Identifier	op1		9129501	0					
ANR	9129631	AssignmentExpression	count = op -> value . intval		9129501	1		=			
ANR	9129632	Identifier	count		9129501	0					
ANR	9129633	MemberAccess	op -> value . intval		9129501	1					
ANR	9129634	PtrMemberAccess	op -> value		9129501	0					
ANR	9129635	Identifier	op		9129501	0					
ANR	9129636	Identifier	value		9129501	1					
ANR	9129637	Identifier	intval		9129501	1					
ANR	9129638	Identifier	ostop		9129501	1					
ANR	9129639	CompoundStatement		16:58:577:577	9129501	1					
ANR	9129640	ExpressionStatement	"memcpy ( ( char * ) op , ( char * ) ( op - count ) , count * sizeof ( ref ) )"	87:8:2823:2884	9129501	0	True				
ANR	9129641	CallExpression	"memcpy ( ( char * ) op , ( char * ) ( op - count ) , count * sizeof ( ref ) )"		9129501	0					
ANR	9129642	Callee	memcpy		9129501	0					
ANR	9129643	Identifier	memcpy		9129501	0					
ANR	9129644	ArgumentList	( char * ) op		9129501	1					
ANR	9129645	Argument	( char * ) op		9129501	0					
ANR	9129646	CastExpression	( char * ) op		9129501	0					
ANR	9129647	CastTarget	char *		9129501	0					
ANR	9129648	Identifier	op		9129501	1					
ANR	9129649	Argument	( char * ) ( op - count )		9129501	1					
ANR	9129650	CastExpression	( char * ) ( op - count )		9129501	0					
ANR	9129651	CastTarget	char *		9129501	0					
ANR	9129652	AdditiveExpression	op - count		9129501	1		-			
ANR	9129653	Identifier	op		9129501	0					
ANR	9129654	Identifier	count		9129501	1					
ANR	9129655	Argument	count * sizeof ( ref )		9129501	2					
ANR	9129656	MultiplicativeExpression	count * sizeof ( ref )		9129501	0		*			
ANR	9129657	Identifier	count		9129501	0					
ANR	9129658	SizeofExpression	sizeof ( ref )		9129501	1					
ANR	9129659	Sizeof	sizeof		9129501	0					
ANR	9129660	SizeofOperand	ref		9129501	1					
ANR	9129661	ExpressionStatement	push ( count - 1 )	88:8:2894:2909	9129501	1	True				
ANR	9129662	CallExpression	push ( count - 1 )		9129501	0					
ANR	9129663	Callee	push		9129501	0					
ANR	9129664	Identifier	push		9129501	0					
ANR	9129665	ArgumentList	count - 1		9129501	1					
ANR	9129666	Argument	count - 1		9129501	0					
ANR	9129667	AdditiveExpression	count - 1		9129501	0		-			
ANR	9129668	Identifier	count		9129501	0					
ANR	9129669	PrimaryExpression	1		9129501	1					
ANR	9129670	ReturnStatement	return 0 ;	89:8:2919:2927	9129501	2	True				
ANR	9129671	PrimaryExpression	0		9129501	0					
ANR	9129672	ExpressionStatement	"code = ref_stack_push ( & o_stack , count - 1 )"	92:4:2978:3020	9129501	5	True				
ANR	9129673	AssignmentExpression	"code = ref_stack_push ( & o_stack , count - 1 )"		9129501	0		=			
ANR	9129674	Identifier	code		9129501	0					
ANR	9129675	CallExpression	"ref_stack_push ( & o_stack , count - 1 )"		9129501	1					
ANR	9129676	Callee	ref_stack_push		9129501	0					
ANR	9129677	Identifier	ref_stack_push		9129501	0					
ANR	9129678	ArgumentList	& o_stack		9129501	1					
ANR	9129679	Argument	& o_stack		9129501	0					
ANR	9129680	UnaryOperationExpression	& o_stack		9129501	0					
ANR	9129681	UnaryOperator	&		9129501	0					
ANR	9129682	Identifier	o_stack		9129501	1					
ANR	9129683	Argument	count - 1		9129501	1					
ANR	9129684	AdditiveExpression	count - 1		9129501	0		-			
ANR	9129685	Identifier	count		9129501	0					
ANR	9129686	PrimaryExpression	1		9129501	1					
ANR	9129687	IfStatement	if ( code < 0 )		9129501	6					
ANR	9129688	Condition	code < 0	93:8:3030:3037	9129501	0	True				
ANR	9129689	RelationalExpression	code < 0		9129501	0		<			
ANR	9129690	Identifier	code		9129501	0					
ANR	9129691	PrimaryExpression	0		9129501	1					
ANR	9129692	ReturnStatement	return code ;	94:8:3048:3059	9129501	1	True				
ANR	9129693	Identifier	code		9129501	0					
ANR	9129694	ForStatement	for ( i = 0 ; i < count ; i ++ )		9129501	7					
ANR	9129695	ForInit	i = 0 ;	95:9:3070:3075	9129501	0	True				
ANR	9129696	AssignmentExpression	i = 0		9129501	0		=			
ANR	9129697	Identifier	i		9129501	0					
ANR	9129698	PrimaryExpression	0		9129501	1					
ANR	9129699	Condition	i < count	95:16:3077:3085	9129501	1	True				
ANR	9129700	RelationalExpression	i < count		9129501	0		<			
ANR	9129701	Identifier	i		9129501	0					
ANR	9129702	Identifier	count		9129501	1					
ANR	9129703	PostIncDecOperationExpression	i ++	95:27:3088:3090	9129501	2	True				
ANR	9129704	Identifier	i		9129501	0					
ANR	9129705	IncDec	++		9129501	1					
ANR	9129706	ExpressionStatement	"* ref_stack_index ( & o_stack , i ) = * ref_stack_index ( & o_stack , i + count )"	96:8:3101:3182	9129501	3	True				
ANR	9129707	AssignmentExpression	"* ref_stack_index ( & o_stack , i ) = * ref_stack_index ( & o_stack , i + count )"		9129501	0		=			
ANR	9129708	UnaryOperationExpression	"* ref_stack_index ( & o_stack , i )"		9129501	0					
ANR	9129709	UnaryOperator	*		9129501	0					
ANR	9129710	CallExpression	"ref_stack_index ( & o_stack , i )"		9129501	1					
ANR	9129711	Callee	ref_stack_index		9129501	0					
ANR	9129712	Identifier	ref_stack_index		9129501	0					
ANR	9129713	ArgumentList	& o_stack		9129501	1					
ANR	9129714	Argument	& o_stack		9129501	0					
ANR	9129715	UnaryOperationExpression	& o_stack		9129501	0					
ANR	9129716	UnaryOperator	&		9129501	0					
ANR	9129717	Identifier	o_stack		9129501	1					
ANR	9129718	Argument	i		9129501	1					
ANR	9129719	Identifier	i		9129501	0					
ANR	9129720	UnaryOperationExpression	"* ref_stack_index ( & o_stack , i + count )"		9129501	1					
ANR	9129721	UnaryOperator	*		9129501	0					
ANR	9129722	CallExpression	"ref_stack_index ( & o_stack , i + count )"		9129501	1					
ANR	9129723	Callee	ref_stack_index		9129501	0					
ANR	9129724	Identifier	ref_stack_index		9129501	0					
ANR	9129725	ArgumentList	& o_stack		9129501	1					
ANR	9129726	Argument	& o_stack		9129501	0					
ANR	9129727	UnaryOperationExpression	& o_stack		9129501	0					
ANR	9129728	UnaryOperator	&		9129501	0					
ANR	9129729	Identifier	o_stack		9129501	1					
ANR	9129730	Argument	i + count		9129501	1					
ANR	9129731	AdditiveExpression	i + count		9129501	0		+			
ANR	9129732	Identifier	i		9129501	0					
ANR	9129733	Identifier	count		9129501	1					
ANR	9129734	ReturnStatement	return 0 ;	98:4:3188:3196	9129501	8	True				
ANR	9129735	PrimaryExpression	0		9129501	0					
ANR	9129736	ReturnType	static int		9129501	1					
ANR	9129737	Identifier	zcopy_integer		9129501	2					
ANR	9129738	ParameterList	i_ctx_t * i_ctx_p		9129501	3					
ANR	9129739	Parameter	i_ctx_t * i_ctx_p	69:14:2192:2207	9129501	0	True				
ANR	9129740	ParameterType	i_ctx_t *		9129501	0					
ANR	9129741	Identifier	i_ctx_p		9129501	1					
ANR	9129742	CFGEntryNode	ENTRY		9129501		True				
ANR	9129743	CFGExitNode	EXIT		9129501		True				
ANR	9129744	Symbol	ref_stack_index		9129501						
ANR	9129745	Symbol	op		9129501						
ANR	9129746	Symbol	ref_stack_push		9129501						
ANR	9129747	Symbol	"* ref_stack_index ( & o_stack , i + count )"		9129501						
ANR	9129748	Symbol	"* ref_stack_index ( & o_stack , i )"		9129501						
ANR	9129749	Symbol	code		9129501						
ANR	9129750	Symbol	ostop		9129501						
ANR	9129751	Symbol	* op		9129501						
ANR	9129752	Symbol	gs_error_rangecheck		9129501						
ANR	9129753	Symbol	count		9129501						
ANR	9129754	Symbol	i		9129501						
ANR	9129755	Symbol	osp		9129501						
ANR	9129756	Symbol	* ref_stack_index		9129501						
ANR	9129757	Symbol	op1		9129501						
ANR	9129758	Symbol	osbot		9129501						
ANR	9129759	Symbol	t_integer		9129501						
ANR	9129760	Symbol	gs_error_stackunderflow		9129501						
ANR	9129761	Symbol	i_ctx_p		9129501						
ANR	9129762	Symbol	op -> value		9129501						
ANR	9129763	Symbol	& o_stack		9129501						
ANR	9129764	Symbol	ref_stack_count		9129501						
ANR	9129765	Symbol	op -> value . intval		9129501						
ANR	9129766	Function	zcopy_interval	103:0:3286:3552							
ANR	9129767	FunctionDef	zcopy_interval (i_ctx_t * i_ctx_p)		9129766	0					
ANR	9129768	CompoundStatement		105:0:3330:3552	9129766	0					
ANR	9129769	IdentifierDeclStatement	os_ptr op = osp ;	106:4:3336:3351	9129766	0	True				
ANR	9129770	IdentifierDecl	op = osp		9129766	0					
ANR	9129771	IdentifierDeclType	os_ptr		9129766	0					
ANR	9129772	Identifier	op		9129766	1					
ANR	9129773	AssignmentExpression	op = osp		9129766	2		=			
ANR	9129774	Identifier	osp		9129766	0					
ANR	9129775	Identifier	osp		9129766	1					
ANR	9129776	IdentifierDeclStatement	os_ptr op1 = op - 1 ;	107:4:3357:3376	9129766	1	True				
ANR	9129777	IdentifierDecl	op1 = op - 1		9129766	0					
ANR	9129778	IdentifierDeclType	os_ptr		9129766	0					
ANR	9129779	Identifier	op1		9129766	1					
ANR	9129780	AssignmentExpression	op1 = op - 1		9129766	2		=			
ANR	9129781	Identifier	op1		9129766	0					
ANR	9129782	AdditiveExpression	op - 1		9129766	1		-			
ANR	9129783	Identifier	op		9129766	0					
ANR	9129784	PrimaryExpression	1		9129766	1					
ANR	9129785	IdentifierDeclStatement	"int code = copy_interval ( i_ctx_p , op , 0 , op1 , ""copy"" ) ;"	108:4:3382:3435	9129766	2	True				
ANR	9129786	IdentifierDecl	"code = copy_interval ( i_ctx_p , op , 0 , op1 , ""copy"" )"		9129766	0					
ANR	9129787	IdentifierDeclType	int		9129766	0					
ANR	9129788	Identifier	code		9129766	1					
ANR	9129789	AssignmentExpression	"code = copy_interval ( i_ctx_p , op , 0 , op1 , ""copy"" )"		9129766	2		=			
ANR	9129790	Identifier	code		9129766	0					
ANR	9129791	CallExpression	"copy_interval ( i_ctx_p , op , 0 , op1 , ""copy"" )"		9129766	1					
ANR	9129792	Callee	copy_interval		9129766	0					
ANR	9129793	Identifier	copy_interval		9129766	0					
ANR	9129794	ArgumentList	i_ctx_p		9129766	1					
ANR	9129795	Argument	i_ctx_p		9129766	0					
ANR	9129796	Identifier	i_ctx_p		9129766	0					
ANR	9129797	Argument	op		9129766	1					
ANR	9129798	Identifier	op		9129766	0					
ANR	9129799	Argument	0		9129766	2					
ANR	9129800	PrimaryExpression	0		9129766	0					
ANR	9129801	Argument	op1		9129766	3					
ANR	9129802	Identifier	op1		9129766	0					
ANR	9129803	Argument	"""copy"""		9129766	4					
ANR	9129804	PrimaryExpression	"""copy"""		9129766	0					
ANR	9129805	IfStatement	if ( code < 0 )		9129766	3					
ANR	9129806	Condition	code < 0	110:8:3446:3453	9129766	0	True				
ANR	9129807	RelationalExpression	code < 0		9129766	0		<			
ANR	9129808	Identifier	code		9129766	0					
ANR	9129809	PrimaryExpression	0		9129766	1					
ANR	9129810	ReturnStatement	return code ;	111:8:3464:3475	9129766	1	True				
ANR	9129811	Identifier	code		9129766	0					
ANR	9129812	ExpressionStatement	"r_set_size ( op , r_size ( op1 ) )"	112:4:3481:3508	9129766	4	True				
ANR	9129813	CallExpression	"r_set_size ( op , r_size ( op1 ) )"		9129766	0					
ANR	9129814	Callee	r_set_size		9129766	0					
ANR	9129815	Identifier	r_set_size		9129766	0					
ANR	9129816	ArgumentList	op		9129766	1					
ANR	9129817	Argument	op		9129766	0					
ANR	9129818	Identifier	op		9129766	0					
ANR	9129819	Argument	r_size ( op1 )		9129766	1					
ANR	9129820	CallExpression	r_size ( op1 )		9129766	0					
ANR	9129821	Callee	r_size		9129766	0					
ANR	9129822	Identifier	r_size		9129766	0					
ANR	9129823	ArgumentList	op1		9129766	1					
ANR	9129824	Argument	op1		9129766	0					
ANR	9129825	Identifier	op1		9129766	0					
ANR	9129826	ExpressionStatement	* op1 = * op	113:4:3514:3524	9129766	5	True				
ANR	9129827	AssignmentExpression	* op1 = * op		9129766	0		=			
ANR	9129828	UnaryOperationExpression	* op1		9129766	0					
ANR	9129829	UnaryOperator	*		9129766	0					
ANR	9129830	Identifier	op1		9129766	1					
ANR	9129831	UnaryOperationExpression	* op		9129766	1					
ANR	9129832	UnaryOperator	*		9129766	0					
ANR	9129833	Identifier	op		9129766	1					
ANR	9129834	ExpressionStatement	pop ( 1 )	114:4:3530:3536	9129766	6	True				
ANR	9129835	CallExpression	pop ( 1 )		9129766	0					
ANR	9129836	Callee	pop		9129766	0					
ANR	9129837	Identifier	pop		9129766	0					
ANR	9129838	ArgumentList	1		9129766	1					
ANR	9129839	Argument	1		9129766	0					
ANR	9129840	PrimaryExpression	1		9129766	0					
ANR	9129841	ReturnStatement	return 0 ;	115:4:3542:3550	9129766	7	True				
ANR	9129842	PrimaryExpression	0		9129766	0					
ANR	9129843	ReturnType	static int		9129766	1					
ANR	9129844	Identifier	zcopy_interval		9129766	2					
ANR	9129845	ParameterList	i_ctx_t * i_ctx_p		9129766	3					
ANR	9129846	Parameter	i_ctx_t * i_ctx_p	104:15:3312:3327	9129766	0	True				
ANR	9129847	ParameterType	i_ctx_t *		9129766	0					
ANR	9129848	Identifier	i_ctx_p		9129766	1					
ANR	9129849	CFGEntryNode	ENTRY		9129766		True				
ANR	9129850	CFGExitNode	EXIT		9129766		True				
ANR	9129851	Symbol	op		9129766						
ANR	9129852	Symbol	op1		9129766						
ANR	9129853	Symbol	code		9129766						
ANR	9129854	Symbol	copy_interval		9129766						
ANR	9129855	Symbol	* op		9129766						
ANR	9129856	Symbol	i_ctx_p		9129766						
ANR	9129857	Symbol	r_size		9129766						
ANR	9129858	Symbol	* op1		9129766						
ANR	9129859	Symbol	osp		9129766						
ANR	9129860	Function	zlength	119:0:3611:4504							
ANR	9129861	FunctionDef	zlength (i_ctx_t * i_ctx_p)		9129860	0					
ANR	9129862	CompoundStatement		121:0:3648:4504	9129860	0					
ANR	9129863	IdentifierDeclStatement	os_ptr op = osp ;	122:4:3654:3669	9129860	0	True				
ANR	9129864	IdentifierDecl	op = osp		9129860	0					
ANR	9129865	IdentifierDeclType	os_ptr		9129860	0					
ANR	9129866	Identifier	op		9129860	1					
ANR	9129867	AssignmentExpression	op = osp		9129860	2		=			
ANR	9129868	Identifier	osp		9129860	0					
ANR	9129869	Identifier	osp		9129860	1					
ANR	9129870	SwitchStatement	switch ( r_type ( op ) )		9129860	1					
ANR	9129871	Condition	r_type ( op )	123:12:3683:3692	9129860	0	True				
ANR	9129872	CallExpression	r_type ( op )		9129860	0					
ANR	9129873	Callee	r_type		9129860	0					
ANR	9129874	Identifier	r_type		9129860	0					
ANR	9129875	ArgumentList	op		9129860	1					
ANR	9129876	Argument	op		9129860	0					
ANR	9129877	Identifier	op		9129860	0					
ANR	9129878	CompoundStatement		3:24:46:46	9129860	1					
ANR	9129879	Label	case t_array :	124:8:3705:3717	9129860	0	True				
ANR	9129880	Identifier	t_array		9129860	0					
ANR	9129881	Label	case t_string :	125:8:3727:3740	9129860	1	True				
ANR	9129882	Identifier	t_string		9129860	0					
ANR	9129883	Label	case t_mixedarray :	126:8:3750:3767	9129860	2	True				
ANR	9129884	Identifier	t_mixedarray		9129860	0					
ANR	9129885	Label	case t_shortarray :	127:8:3777:3794	9129860	3	True				
ANR	9129886	Identifier	t_shortarray		9129860	0					
ANR	9129887	ExpressionStatement	check_read ( * op )	128:12:3808:3823	9129860	4	True				
ANR	9129888	CallExpression	check_read ( * op )		9129860	0					
ANR	9129889	Callee	check_read		9129860	0					
ANR	9129890	Identifier	check_read		9129860	0					
ANR	9129891	ArgumentList	* op		9129860	1					
ANR	9129892	Argument	* op		9129860	0					
ANR	9129893	UnaryOperationExpression	* op		9129860	0					
ANR	9129894	UnaryOperator	*		9129860	0					
ANR	9129895	Identifier	op		9129860	1					
ANR	9129896	ExpressionStatement	"make_int ( op , r_size ( op ) )"	129:12:3837:3861	9129860	5	True				
ANR	9129897	CallExpression	"make_int ( op , r_size ( op ) )"		9129860	0					
ANR	9129898	Callee	make_int		9129860	0					
ANR	9129899	Identifier	make_int		9129860	0					
ANR	9129900	ArgumentList	op		9129860	1					
ANR	9129901	Argument	op		9129860	0					
ANR	9129902	Identifier	op		9129860	0					
ANR	9129903	Argument	r_size ( op )		9129860	1					
ANR	9129904	CallExpression	r_size ( op )		9129860	0					
ANR	9129905	Callee	r_size		9129860	0					
ANR	9129906	Identifier	r_size		9129860	0					
ANR	9129907	ArgumentList	op		9129860	1					
ANR	9129908	Argument	op		9129860	0					
ANR	9129909	Identifier	op		9129860	0					
ANR	9129910	ReturnStatement	return 0 ;	130:12:3875:3883	9129860	6	True				
ANR	9129911	PrimaryExpression	0		9129860	0					
ANR	9129912	Label	case t_dictionary :	131:8:3893:3910	9129860	7	True				
ANR	9129913	Identifier	t_dictionary		9129860	0					
ANR	9129914	ExpressionStatement	check_dict_read ( * op )	132:12:3924:3944	9129860	8	True				
ANR	9129915	CallExpression	check_dict_read ( * op )		9129860	0					
ANR	9129916	Callee	check_dict_read		9129860	0					
ANR	9129917	Identifier	check_dict_read		9129860	0					
ANR	9129918	ArgumentList	* op		9129860	1					
ANR	9129919	Argument	* op		9129860	0					
ANR	9129920	UnaryOperationExpression	* op		9129860	0					
ANR	9129921	UnaryOperator	*		9129860	0					
ANR	9129922	Identifier	op		9129860	1					
ANR	9129923	ExpressionStatement	"make_int ( op , dict_length ( op ) )"	133:12:3958:3987	9129860	9	True				
ANR	9129924	CallExpression	"make_int ( op , dict_length ( op ) )"		9129860	0					
ANR	9129925	Callee	make_int		9129860	0					
ANR	9129926	Identifier	make_int		9129860	0					
ANR	9129927	ArgumentList	op		9129860	1					
ANR	9129928	Argument	op		9129860	0					
ANR	9129929	Identifier	op		9129860	0					
ANR	9129930	Argument	dict_length ( op )		9129860	1					
ANR	9129931	CallExpression	dict_length ( op )		9129860	0					
ANR	9129932	Callee	dict_length		9129860	0					
ANR	9129933	Identifier	dict_length		9129860	0					
ANR	9129934	ArgumentList	op		9129860	1					
ANR	9129935	Argument	op		9129860	0					
ANR	9129936	Identifier	op		9129860	0					
ANR	9129937	ReturnStatement	return 0 ;	134:12:4001:4009	9129860	10	True				
ANR	9129938	PrimaryExpression	0		9129860	0					
ANR	9129939	Label	case t_name :	135:8:4019:4030	9129860	11	True				
ANR	9129940	Identifier	t_name		9129860	0					
ANR	9129941	CompoundStatement		16:12:397:404	9129860	12					
ANR	9129942	IdentifierDeclStatement	ref str ;	136:12:4046:4053	9129860	0	True				
ANR	9129943	IdentifierDecl	str		9129860	0					
ANR	9129944	IdentifierDeclType	ref		9129860	0					
ANR	9129945	Identifier	str		9129860	1					
ANR	9129946	ExpressionStatement	"name_string_ref ( imemory , op , & str )"	138:12:4068:4102	9129860	1	True				
ANR	9129947	CallExpression	"name_string_ref ( imemory , op , & str )"		9129860	0					
ANR	9129948	Callee	name_string_ref		9129860	0					
ANR	9129949	Identifier	name_string_ref		9129860	0					
ANR	9129950	ArgumentList	imemory		9129860	1					
ANR	9129951	Argument	imemory		9129860	0					
ANR	9129952	Identifier	imemory		9129860	0					
ANR	9129953	Argument	op		9129860	1					
ANR	9129954	Identifier	op		9129860	0					
ANR	9129955	Argument	& str		9129860	2					
ANR	9129956	UnaryOperationExpression	& str		9129860	0					
ANR	9129957	UnaryOperator	&		9129860	0					
ANR	9129958	Identifier	str		9129860	1					
ANR	9129959	ExpressionStatement	"make_int ( op , r_size ( & str ) )"	139:12:4116:4142	9129860	2	True				
ANR	9129960	CallExpression	"make_int ( op , r_size ( & str ) )"		9129860	0					
ANR	9129961	Callee	make_int		9129860	0					
ANR	9129962	Identifier	make_int		9129860	0					
ANR	9129963	ArgumentList	op		9129860	1					
ANR	9129964	Argument	op		9129860	0					
ANR	9129965	Identifier	op		9129860	0					
ANR	9129966	Argument	r_size ( & str )		9129860	1					
ANR	9129967	CallExpression	r_size ( & str )		9129860	0					
ANR	9129968	Callee	r_size		9129860	0					
ANR	9129969	Identifier	r_size		9129860	0					
ANR	9129970	ArgumentList	& str		9129860	1					
ANR	9129971	Argument	& str		9129860	0					
ANR	9129972	UnaryOperationExpression	& str		9129860	0					
ANR	9129973	UnaryOperator	&		9129860	0					
ANR	9129974	Identifier	str		9129860	1					
ANR	9129975	ReturnStatement	return 0 ;	140:12:4156:4164	9129860	3	True				
ANR	9129976	PrimaryExpression	0		9129860	0					
ANR	9129977	Label	case t_astruct :	142:8:4184:4198	9129860	13	True				
ANR	9129978	Identifier	t_astruct		9129860	0					
ANR	9129979	IfStatement	"if ( gs_object_type ( imemory , op -> value . pstruct ) != & st_bytes )"		9129860	14					
ANR	9129980	Condition	"gs_object_type ( imemory , op -> value . pstruct ) != & st_bytes"	143:16:4216:4270	9129860	0	True				
ANR	9129981	EqualityExpression	"gs_object_type ( imemory , op -> value . pstruct ) != & st_bytes"		9129860	0		!=			
ANR	9129982	CallExpression	"gs_object_type ( imemory , op -> value . pstruct )"		9129860	0					
ANR	9129983	Callee	gs_object_type		9129860	0					
ANR	9129984	Identifier	gs_object_type		9129860	0					
ANR	9129985	ArgumentList	imemory		9129860	1					
ANR	9129986	Argument	imemory		9129860	0					
ANR	9129987	Identifier	imemory		9129860	0					
ANR	9129988	Argument	op -> value . pstruct		9129860	1					
ANR	9129989	MemberAccess	op -> value . pstruct		9129860	0					
ANR	9129990	PtrMemberAccess	op -> value		9129860	0					
ANR	9129991	Identifier	op		9129860	0					
ANR	9129992	Identifier	value		9129860	1					
ANR	9129993	Identifier	pstruct		9129860	1					
ANR	9129994	UnaryOperationExpression	& st_bytes		9129860	1					
ANR	9129995	UnaryOperator	&		9129860	0					
ANR	9129996	Identifier	st_bytes		9129860	1					
ANR	9129997	ExpressionStatement	return_error ( gs_error_typecheck )	144:16:4289:4321	9129860	1	True				
ANR	9129998	CallExpression	return_error ( gs_error_typecheck )		9129860	0					
ANR	9129999	Callee	return_error		9129860	0					
ANR	9130000	Identifier	return_error		9129860	0					
ANR	9130001	ArgumentList	gs_error_typecheck		9129860	1					
ANR	9130002	Argument	gs_error_typecheck		9129860	0					
ANR	9130003	Identifier	gs_error_typecheck		9129860	0					
ANR	9130004	ExpressionStatement	check_read ( * op )	145:12:4335:4350	9129860	15	True				
ANR	9130005	CallExpression	check_read ( * op )		9129860	0					
ANR	9130006	Callee	check_read		9129860	0					
ANR	9130007	Identifier	check_read		9129860	0					
ANR	9130008	ArgumentList	* op		9129860	1					
ANR	9130009	Argument	* op		9129860	0					
ANR	9130010	UnaryOperationExpression	* op		9129860	0					
ANR	9130011	UnaryOperator	*		9129860	0					
ANR	9130012	Identifier	op		9129860	1					
ANR	9130013	ExpressionStatement	"make_int ( op , gs_object_size ( imemory , op -> value . pstruct ) )"	146:12:4364:4420	9129860	16	True				
ANR	9130014	CallExpression	"make_int ( op , gs_object_size ( imemory , op -> value . pstruct ) )"		9129860	0					
ANR	9130015	Callee	make_int		9129860	0					
ANR	9130016	Identifier	make_int		9129860	0					
ANR	9130017	ArgumentList	op		9129860	1					
ANR	9130018	Argument	op		9129860	0					
ANR	9130019	Identifier	op		9129860	0					
ANR	9130020	Argument	"gs_object_size ( imemory , op -> value . pstruct )"		9129860	1					
ANR	9130021	CallExpression	"gs_object_size ( imemory , op -> value . pstruct )"		9129860	0					
ANR	9130022	Callee	gs_object_size		9129860	0					
ANR	9130023	Identifier	gs_object_size		9129860	0					
ANR	9130024	ArgumentList	imemory		9129860	1					
ANR	9130025	Argument	imemory		9129860	0					
ANR	9130026	Identifier	imemory		9129860	0					
ANR	9130027	Argument	op -> value . pstruct		9129860	1					
ANR	9130028	MemberAccess	op -> value . pstruct		9129860	0					
ANR	9130029	PtrMemberAccess	op -> value		9129860	0					
ANR	9130030	Identifier	op		9129860	0					
ANR	9130031	Identifier	value		9129860	1					
ANR	9130032	Identifier	pstruct		9129860	1					
ANR	9130033	ReturnStatement	return 0 ;	147:12:4434:4442	9129860	17	True				
ANR	9130034	PrimaryExpression	0		9129860	0					
ANR	9130035	Label	default :	148:8:4452:4459	9129860	18	True				
ANR	9130036	Identifier	default		9129860	0					
ANR	9130037	ExpressionStatement	return_op_typecheck ( op )	149:12:4473:4496	9129860	19	True				
ANR	9130038	CallExpression	return_op_typecheck ( op )		9129860	0					
ANR	9130039	Callee	return_op_typecheck		9129860	0					
ANR	9130040	Identifier	return_op_typecheck		9129860	0					
ANR	9130041	ArgumentList	op		9129860	1					
ANR	9130042	Argument	op		9129860	0					
ANR	9130043	Identifier	op		9129860	0					
ANR	9130044	ReturnType	static int		9129860	1					
ANR	9130045	Identifier	zlength		9129860	2					
ANR	9130046	ParameterList	i_ctx_t * i_ctx_p		9129860	3					
ANR	9130047	Parameter	i_ctx_t * i_ctx_p	120:8:3630:3645	9129860	0	True				
ANR	9130048	ParameterType	i_ctx_t *		9129860	0					
ANR	9130049	Identifier	i_ctx_p		9129860	1					
ANR	9130050	CFGEntryNode	ENTRY		9129860		True				
ANR	9130051	CFGExitNode	EXIT		9129860		True				
ANR	9130052	Symbol	op		9129860						
ANR	9130053	Symbol	gs_object_type		9129860						
ANR	9130054	Symbol	* op		9129860						
ANR	9130055	Symbol	op -> value . pstruct		9129860						
ANR	9130056	Symbol	osp		9129860						
ANR	9130057	Symbol	gs_object_size		9129860						
ANR	9130058	Symbol	& st_bytes		9129860						
ANR	9130059	Symbol	str		9129860						
ANR	9130060	Symbol	& str		9129860						
ANR	9130061	Symbol	gs_error_typecheck		9129860						
ANR	9130062	Symbol	i_ctx_p		9129860						
ANR	9130063	Symbol	op -> value		9129860						
ANR	9130064	Symbol	r_size		9129860						
ANR	9130065	Symbol	imemory		9129860						
ANR	9130066	Symbol	dict_length		9129860						
ANR	9130067	Symbol	r_type		9129860						
ANR	9130068	Function	zget	155:0:4587:5584							
ANR	9130069	FunctionDef	zget (i_ctx_t * i_ctx_p)		9130068	0					
ANR	9130070	CompoundStatement		157:0:4621:5584	9130068	0					
ANR	9130071	IdentifierDeclStatement	int code ;	158:4:4627:4635	9130068	0	True				
ANR	9130072	IdentifierDecl	code		9130068	0					
ANR	9130073	IdentifierDeclType	int		9130068	0					
ANR	9130074	Identifier	code		9130068	1					
ANR	9130075	IdentifierDeclStatement	os_ptr op = osp ;	159:4:4641:4656	9130068	1	True				
ANR	9130076	IdentifierDecl	op = osp		9130068	0					
ANR	9130077	IdentifierDeclType	os_ptr		9130068	0					
ANR	9130078	Identifier	op		9130068	1					
ANR	9130079	AssignmentExpression	op = osp		9130068	2		=			
ANR	9130080	Identifier	osp		9130068	0					
ANR	9130081	Identifier	osp		9130068	1					
ANR	9130082	IdentifierDeclStatement	os_ptr op1 = op - 1 ;	160:4:4662:4681	9130068	2	True				
ANR	9130083	IdentifierDecl	op1 = op - 1		9130068	0					
ANR	9130084	IdentifierDeclType	os_ptr		9130068	0					
ANR	9130085	Identifier	op1		9130068	1					
ANR	9130086	AssignmentExpression	op1 = op - 1		9130068	2		=			
ANR	9130087	Identifier	op1		9130068	0					
ANR	9130088	AdditiveExpression	op - 1		9130068	1		-			
ANR	9130089	Identifier	op		9130068	0					
ANR	9130090	PrimaryExpression	1		9130068	1					
ANR	9130091	IdentifierDeclStatement	ref * pvalue ;	161:4:4687:4698	9130068	3	True				
ANR	9130092	IdentifierDecl	* pvalue		9130068	0					
ANR	9130093	IdentifierDeclType	ref *		9130068	0					
ANR	9130094	Identifier	pvalue		9130068	1					
ANR	9130095	SwitchStatement	switch ( r_type ( op1 ) )		9130068	4					
ANR	9130096	Condition	r_type ( op1 )	163:12:4713:4723	9130068	0	True				
ANR	9130097	CallExpression	r_type ( op1 )		9130068	0					
ANR	9130098	Callee	r_type		9130068	0					
ANR	9130099	Identifier	r_type		9130068	0					
ANR	9130100	ArgumentList	op1		9130068	1					
ANR	9130101	Argument	op1		9130068	0					
ANR	9130102	Identifier	op1		9130068	0					
ANR	9130103	CompoundStatement		7:25:104:104	9130068	1					
ANR	9130104	Label	case t_dictionary :	164:8:4736:4753	9130068	0	True				
ANR	9130105	Identifier	t_dictionary		9130068	0					
ANR	9130106	ExpressionStatement	check_dict_read ( * op1 )	165:12:4767:4788	9130068	1	True				
ANR	9130107	CallExpression	check_dict_read ( * op1 )		9130068	0					
ANR	9130108	Callee	check_dict_read		9130068	0					
ANR	9130109	Identifier	check_dict_read		9130068	0					
ANR	9130110	ArgumentList	* op1		9130068	1					
ANR	9130111	Argument	* op1		9130068	0					
ANR	9130112	UnaryOperationExpression	* op1		9130068	0					
ANR	9130113	UnaryOperator	*		9130068	0					
ANR	9130114	Identifier	op1		9130068	1					
ANR	9130115	IfStatement	"if ( dict_find ( op1 , op , & pvalue ) <= 0 )"		9130068	2					
ANR	9130116	Condition	"dict_find ( op1 , op , & pvalue ) <= 0"	166:16:4806:4837	9130068	0	True				
ANR	9130117	RelationalExpression	"dict_find ( op1 , op , & pvalue ) <= 0"		9130068	0		<=			
ANR	9130118	CallExpression	"dict_find ( op1 , op , & pvalue )"		9130068	0					
ANR	9130119	Callee	dict_find		9130068	0					
ANR	9130120	Identifier	dict_find		9130068	0					
ANR	9130121	ArgumentList	op1		9130068	1					
ANR	9130122	Argument	op1		9130068	0					
ANR	9130123	Identifier	op1		9130068	0					
ANR	9130124	Argument	op		9130068	1					
ANR	9130125	Identifier	op		9130068	0					
ANR	9130126	Argument	& pvalue		9130068	2					
ANR	9130127	UnaryOperationExpression	& pvalue		9130068	0					
ANR	9130128	UnaryOperator	&		9130068	0					
ANR	9130129	Identifier	pvalue		9130068	1					
ANR	9130130	PrimaryExpression	0		9130068	1					
ANR	9130131	ExpressionStatement	return_error ( gs_error_undefined )	167:16:4856:4888	9130068	1	True				
ANR	9130132	CallExpression	return_error ( gs_error_undefined )		9130068	0					
ANR	9130133	Callee	return_error		9130068	0					
ANR	9130134	Identifier	return_error		9130068	0					
ANR	9130135	ArgumentList	gs_error_undefined		9130068	1					
ANR	9130136	Argument	gs_error_undefined		9130068	0					
ANR	9130137	Identifier	gs_error_undefined		9130068	0					
ANR	9130138	ExpressionStatement	op [ - 1 ] = * pvalue	168:12:4902:4918	9130068	3	True				
ANR	9130139	AssignmentExpression	op [ - 1 ] = * pvalue		9130068	0		=			
ANR	9130140	ArrayIndexing	op [ - 1 ]		9130068	0					
ANR	9130141	Identifier	op		9130068	0					
ANR	9130142	UnaryOperationExpression	- 1		9130068	1					
ANR	9130143	UnaryOperator	-		9130068	0					
ANR	9130144	PrimaryExpression	1		9130068	1					
ANR	9130145	UnaryOperationExpression	* pvalue		9130068	1					
ANR	9130146	UnaryOperator	*		9130068	0					
ANR	9130147	Identifier	pvalue		9130068	1					
ANR	9130148	BreakStatement	break ;	169:12:4932:4937	9130068	4	True				
ANR	9130149	Label	case t_string :	170:8:4947:4960	9130068	5	True				
ANR	9130150	Identifier	t_string		9130068	0					
ANR	9130151	ExpressionStatement	check_read ( * op1 )	171:12:4974:4990	9130068	6	True				
ANR	9130152	CallExpression	check_read ( * op1 )		9130068	0					
ANR	9130153	Callee	check_read		9130068	0					
ANR	9130154	Identifier	check_read		9130068	0					
ANR	9130155	ArgumentList	* op1		9130068	1					
ANR	9130156	Argument	* op1		9130068	0					
ANR	9130157	UnaryOperationExpression	* op1		9130068	0					
ANR	9130158	UnaryOperator	*		9130068	0					
ANR	9130159	Identifier	op1		9130068	1					
ANR	9130160	ExpressionStatement	"check_int_ltu ( * op , r_size ( op1 ) )"	172:12:5004:5035	9130068	7	True				
ANR	9130161	CallExpression	"check_int_ltu ( * op , r_size ( op1 ) )"		9130068	0					
ANR	9130162	Callee	check_int_ltu		9130068	0					
ANR	9130163	Identifier	check_int_ltu		9130068	0					
ANR	9130164	ArgumentList	* op		9130068	1					
ANR	9130165	Argument	* op		9130068	0					
ANR	9130166	UnaryOperationExpression	* op		9130068	0					
ANR	9130167	UnaryOperator	*		9130068	0					
ANR	9130168	Identifier	op		9130068	1					
ANR	9130169	Argument	r_size ( op1 )		9130068	1					
ANR	9130170	CallExpression	r_size ( op1 )		9130068	0					
ANR	9130171	Callee	r_size		9130068	0					
ANR	9130172	Identifier	r_size		9130068	0					
ANR	9130173	ArgumentList	op1		9130068	1					
ANR	9130174	Argument	op1		9130068	0					
ANR	9130175	Identifier	op1		9130068	0					
ANR	9130176	ExpressionStatement	"make_int ( op1 , op1 -> value . bytes [ ( uint ) op -> value . intval ] )"	173:12:5049:5105	9130068	8	True				
ANR	9130177	CallExpression	"make_int ( op1 , op1 -> value . bytes [ ( uint ) op -> value . intval ] )"		9130068	0					
ANR	9130178	Callee	make_int		9130068	0					
ANR	9130179	Identifier	make_int		9130068	0					
ANR	9130180	ArgumentList	op1		9130068	1					
ANR	9130181	Argument	op1		9130068	0					
ANR	9130182	Identifier	op1		9130068	0					
ANR	9130183	Argument	op1 -> value . bytes [ ( uint ) op -> value . intval ]		9130068	1					
ANR	9130184	ArrayIndexing	op1 -> value . bytes [ ( uint ) op -> value . intval ]		9130068	0					
ANR	9130185	MemberAccess	op1 -> value . bytes		9130068	0					
ANR	9130186	PtrMemberAccess	op1 -> value		9130068	0					
ANR	9130187	Identifier	op1		9130068	0					
ANR	9130188	Identifier	value		9130068	1					
ANR	9130189	Identifier	bytes		9130068	1					
ANR	9130190	CastExpression	( uint ) op -> value . intval		9130068	1					
ANR	9130191	CastTarget	uint		9130068	0					
ANR	9130192	MemberAccess	op -> value . intval		9130068	1					
ANR	9130193	PtrMemberAccess	op -> value		9130068	0					
ANR	9130194	Identifier	op		9130068	0					
ANR	9130195	Identifier	value		9130068	1					
ANR	9130196	Identifier	intval		9130068	1					
ANR	9130197	BreakStatement	break ;	174:12:5119:5124	9130068	9	True				
ANR	9130198	Label	case t_array :	175:8:5134:5146	9130068	10	True				
ANR	9130199	Identifier	t_array		9130068	0					
ANR	9130200	Label	case t_mixedarray :	176:8:5156:5173	9130068	11	True				
ANR	9130201	Identifier	t_mixedarray		9130068	0					
ANR	9130202	Label	case t_shortarray :	177:8:5183:5200	9130068	12	True				
ANR	9130203	Identifier	t_shortarray		9130068	0					
ANR	9130204	ExpressionStatement	"check_type ( * op , t_integer )"	178:12:5214:5240	9130068	13	True				
ANR	9130205	CallExpression	"check_type ( * op , t_integer )"		9130068	0					
ANR	9130206	Callee	check_type		9130068	0					
ANR	9130207	Identifier	check_type		9130068	0					
ANR	9130208	ArgumentList	* op		9130068	1					
ANR	9130209	Argument	* op		9130068	0					
ANR	9130210	UnaryOperationExpression	* op		9130068	0					
ANR	9130211	UnaryOperator	*		9130068	0					
ANR	9130212	Identifier	op		9130068	1					
ANR	9130213	Argument	t_integer		9130068	1					
ANR	9130214	Identifier	t_integer		9130068	0					
ANR	9130215	ExpressionStatement	check_read ( * op1 )	179:12:5254:5270	9130068	14	True				
ANR	9130216	CallExpression	check_read ( * op1 )		9130068	0					
ANR	9130217	Callee	check_read		9130068	0					
ANR	9130218	Identifier	check_read		9130068	0					
ANR	9130219	ArgumentList	* op1		9130068	1					
ANR	9130220	Argument	* op1		9130068	0					
ANR	9130221	UnaryOperationExpression	* op1		9130068	0					
ANR	9130222	UnaryOperator	*		9130068	0					
ANR	9130223	Identifier	op1		9130068	1					
ANR	9130224	ExpressionStatement	"code = array_get ( imemory , op1 , op -> value . intval , op1 )"	180:12:5284:5337	9130068	15	True				
ANR	9130225	AssignmentExpression	"code = array_get ( imemory , op1 , op -> value . intval , op1 )"		9130068	0		=			
ANR	9130226	Identifier	code		9130068	0					
ANR	9130227	CallExpression	"array_get ( imemory , op1 , op -> value . intval , op1 )"		9130068	1					
ANR	9130228	Callee	array_get		9130068	0					
ANR	9130229	Identifier	array_get		9130068	0					
ANR	9130230	ArgumentList	imemory		9130068	1					
ANR	9130231	Argument	imemory		9130068	0					
ANR	9130232	Identifier	imemory		9130068	0					
ANR	9130233	Argument	op1		9130068	1					
ANR	9130234	Identifier	op1		9130068	0					
ANR	9130235	Argument	op -> value . intval		9130068	2					
ANR	9130236	MemberAccess	op -> value . intval		9130068	0					
ANR	9130237	PtrMemberAccess	op -> value		9130068	0					
ANR	9130238	Identifier	op		9130068	0					
ANR	9130239	Identifier	value		9130068	1					
ANR	9130240	Identifier	intval		9130068	1					
ANR	9130241	Argument	op1		9130068	3					
ANR	9130242	Identifier	op1		9130068	0					
ANR	9130243	IfStatement	if ( code < 0 )		9130068	16					
ANR	9130244	Condition	code < 0	181:16:5355:5362	9130068	0	True				
ANR	9130245	RelationalExpression	code < 0		9130068	0		<			
ANR	9130246	Identifier	code		9130068	0					
ANR	9130247	PrimaryExpression	0		9130068	1					
ANR	9130248	ReturnStatement	return code ;	182:16:5381:5392	9130068	1	True				
ANR	9130249	Identifier	code		9130068	0					
ANR	9130250	BreakStatement	break ;	183:12:5406:5411	9130068	17	True				
ANR	9130251	Label	case t__invalid :	184:8:5421:5436	9130068	18	True				
ANR	9130252	Identifier	t__invalid		9130068	0					
ANR	9130253	ExpressionStatement	return_error ( gs_error_stackunderflow )	185:12:5450:5487	9130068	19	True				
ANR	9130254	CallExpression	return_error ( gs_error_stackunderflow )		9130068	0					
ANR	9130255	Callee	return_error		9130068	0					
ANR	9130256	Identifier	return_error		9130068	0					
ANR	9130257	ArgumentList	gs_error_stackunderflow		9130068	1					
ANR	9130258	Argument	gs_error_stackunderflow		9130068	0					
ANR	9130259	Identifier	gs_error_stackunderflow		9130068	0					
ANR	9130260	Label	default :	186:8:5497:5504	9130068	20	True				
ANR	9130261	Identifier	default		9130068	0					
ANR	9130262	ExpressionStatement	return_error ( gs_error_typecheck )	187:12:5518:5550	9130068	21	True				
ANR	9130263	CallExpression	return_error ( gs_error_typecheck )		9130068	0					
ANR	9130264	Callee	return_error		9130068	0					
ANR	9130265	Identifier	return_error		9130068	0					
ANR	9130266	ArgumentList	gs_error_typecheck		9130068	1					
ANR	9130267	Argument	gs_error_typecheck		9130068	0					
ANR	9130268	Identifier	gs_error_typecheck		9130068	0					
ANR	9130269	ExpressionStatement	pop ( 1 )	189:4:5562:5568	9130068	5	True				
ANR	9130270	CallExpression	pop ( 1 )		9130068	0					
ANR	9130271	Callee	pop		9130068	0					
ANR	9130272	Identifier	pop		9130068	0					
ANR	9130273	ArgumentList	1		9130068	1					
ANR	9130274	Argument	1		9130068	0					
ANR	9130275	PrimaryExpression	1		9130068	0					
ANR	9130276	ReturnStatement	return 0 ;	190:4:5574:5582	9130068	6	True				
ANR	9130277	PrimaryExpression	0		9130068	0					
ANR	9130278	ReturnType	static int		9130068	1					
ANR	9130279	Identifier	zget		9130068	2					
ANR	9130280	ParameterList	i_ctx_t * i_ctx_p		9130068	3					
ANR	9130281	Parameter	i_ctx_t * i_ctx_p	156:5:4603:4618	9130068	0	True				
ANR	9130282	ParameterType	i_ctx_t *		9130068	0					
ANR	9130283	Identifier	i_ctx_p		9130068	1					
ANR	9130284	CFGEntryNode	ENTRY		9130068		True				
ANR	9130285	CFGExitNode	EXIT		9130068		True				
ANR	9130286	Symbol	* op -> value		9130068						
ANR	9130287	Symbol	code		9130068						
ANR	9130288	Symbol	& pvalue		9130068						
ANR	9130289	Symbol	* op		9130068						
ANR	9130290	Symbol	* * op1		9130068						
ANR	9130291	Symbol	gs_error_undefined		9130068						
ANR	9130292	Symbol	pvalue		9130068						
ANR	9130293	Symbol	osp		9130068						
ANR	9130294	Symbol	* * op		9130068						
ANR	9130295	Symbol	gs_error_typecheck		9130068						
ANR	9130296	Symbol	op -> value		9130068						
ANR	9130297	Symbol	op1 -> value . bytes		9130068						
ANR	9130298	Symbol	r_size		9130068						
ANR	9130299	Symbol	* op1		9130068						
ANR	9130300	Symbol	imemory		9130068						
ANR	9130301	Symbol	r_type		9130068						
ANR	9130302	Symbol	dict_find		9130068						
ANR	9130303	Symbol	op		9130068						
ANR	9130304	Symbol	op1 -> value		9130068						
ANR	9130305	Symbol	array_get		9130068						
ANR	9130306	Symbol	* op1 -> value . bytes		9130068						
ANR	9130307	Symbol	op1		9130068						
ANR	9130308	Symbol	* pvalue		9130068						
ANR	9130309	Symbol	* op -> value . intval		9130068						
ANR	9130310	Symbol	t_integer		9130068						
ANR	9130311	Symbol	gs_error_stackunderflow		9130068						
ANR	9130312	Symbol	i_ctx_p		9130068						
ANR	9130313	Symbol	* op1 -> value		9130068						
ANR	9130314	Symbol	op -> value . intval		9130068						
ANR	9130315	Function	zput	196:0:5689:7242							
ANR	9130316	FunctionDef	zput (i_ctx_t * i_ctx_p)		9130315	0					
ANR	9130317	CompoundStatement		198:0:5723:7242	9130315	0					
ANR	9130318	IdentifierDeclStatement	os_ptr op = osp ;	199:4:5729:5744	9130315	0	True				
ANR	9130319	IdentifierDecl	op = osp		9130315	0					
ANR	9130320	IdentifierDeclType	os_ptr		9130315	0					
ANR	9130321	Identifier	op		9130315	1					
ANR	9130322	AssignmentExpression	op = osp		9130315	2		=			
ANR	9130323	Identifier	osp		9130315	0					
ANR	9130324	Identifier	osp		9130315	1					
ANR	9130325	IdentifierDeclStatement	os_ptr op1 = op - 1 ;	200:4:5750:5769	9130315	1	True				
ANR	9130326	IdentifierDecl	op1 = op - 1		9130315	0					
ANR	9130327	IdentifierDeclType	os_ptr		9130315	0					
ANR	9130328	Identifier	op1		9130315	1					
ANR	9130329	AssignmentExpression	op1 = op - 1		9130315	2		=			
ANR	9130330	Identifier	op1		9130315	0					
ANR	9130331	AdditiveExpression	op - 1		9130315	1		-			
ANR	9130332	Identifier	op		9130315	0					
ANR	9130333	PrimaryExpression	1		9130315	1					
ANR	9130334	IdentifierDeclStatement	os_ptr op2 = op1 - 1 ;	201:4:5775:5795	9130315	2	True				
ANR	9130335	IdentifierDecl	op2 = op1 - 1		9130315	0					
ANR	9130336	IdentifierDeclType	os_ptr		9130315	0					
ANR	9130337	Identifier	op2		9130315	1					
ANR	9130338	AssignmentExpression	op2 = op1 - 1		9130315	2		=			
ANR	9130339	Identifier	op2		9130315	0					
ANR	9130340	AdditiveExpression	op1 - 1		9130315	1		-			
ANR	9130341	Identifier	op1		9130315	0					
ANR	9130342	PrimaryExpression	1		9130315	1					
ANR	9130343	IdentifierDeclStatement	byte * sdata ;	202:4:5801:5812	9130315	3	True				
ANR	9130344	IdentifierDecl	* sdata		9130315	0					
ANR	9130345	IdentifierDeclType	byte *		9130315	0					
ANR	9130346	Identifier	sdata		9130315	1					
ANR	9130347	IdentifierDeclStatement	uint ssize ;	203:4:5818:5828	9130315	4	True				
ANR	9130348	IdentifierDecl	ssize		9130315	0					
ANR	9130349	IdentifierDeclType	uint		9130315	0					
ANR	9130350	Identifier	ssize		9130315	1					
ANR	9130351	SwitchStatement	switch ( r_type ( op2 ) )		9130315	5					
ANR	9130352	Condition	r_type ( op2 )	205:12:5843:5853	9130315	0	True				
ANR	9130353	CallExpression	r_type ( op2 )		9130315	0					
ANR	9130354	Callee	r_type		9130315	0					
ANR	9130355	Identifier	r_type		9130315	0					
ANR	9130356	ArgumentList	op2		9130315	1					
ANR	9130357	Argument	op2		9130315	0					
ANR	9130358	Identifier	op2		9130315	0					
ANR	9130359	CompoundStatement		8:25:132:132	9130315	1					
ANR	9130360	Label	case t_dictionary :	206:8:5866:5883	9130315	0	True				
ANR	9130361	Identifier	t_dictionary		9130315	0					
ANR	9130362	IfStatement	if ( i_ctx_p -> in_superexec == 0 )		9130315	1					
ANR	9130363	Condition	i_ctx_p -> in_superexec == 0	207:16:5901:5926	9130315	0	True				
ANR	9130364	EqualityExpression	i_ctx_p -> in_superexec == 0		9130315	0		==			
ANR	9130365	PtrMemberAccess	i_ctx_p -> in_superexec		9130315	0					
ANR	9130366	Identifier	i_ctx_p		9130315	0					
ANR	9130367	Identifier	in_superexec		9130315	1					
ANR	9130368	PrimaryExpression	0		9130315	1					
ANR	9130369	ExpressionStatement	check_dict_write ( * op2 )	208:16:5945:5967	9130315	1	True				
ANR	9130370	CallExpression	check_dict_write ( * op2 )		9130315	0					
ANR	9130371	Callee	check_dict_write		9130315	0					
ANR	9130372	Identifier	check_dict_write		9130315	0					
ANR	9130373	ArgumentList	* op2		9130315	1					
ANR	9130374	Argument	* op2		9130315	0					
ANR	9130375	UnaryOperationExpression	* op2		9130315	0					
ANR	9130376	UnaryOperator	*		9130315	0					
ANR	9130377	Identifier	op2		9130315	1					
ANR	9130378	CompoundStatement		13:16:275:309	9130315	2					
ANR	9130379	IdentifierDeclStatement	"int code = idict_put ( op2 , op1 , op ) ;"	210:16:5999:6033	9130315	0	True				
ANR	9130380	IdentifierDecl	"code = idict_put ( op2 , op1 , op )"		9130315	0					
ANR	9130381	IdentifierDeclType	int		9130315	0					
ANR	9130382	Identifier	code		9130315	1					
ANR	9130383	AssignmentExpression	"code = idict_put ( op2 , op1 , op )"		9130315	2		=			
ANR	9130384	Identifier	code		9130315	0					
ANR	9130385	CallExpression	"idict_put ( op2 , op1 , op )"		9130315	1					
ANR	9130386	Callee	idict_put		9130315	0					
ANR	9130387	Identifier	idict_put		9130315	0					
ANR	9130388	ArgumentList	op2		9130315	1					
ANR	9130389	Argument	op2		9130315	0					
ANR	9130390	Identifier	op2		9130315	0					
ANR	9130391	Argument	op1		9130315	1					
ANR	9130392	Identifier	op1		9130315	0					
ANR	9130393	Argument	op		9130315	2					
ANR	9130394	Identifier	op		9130315	0					
ANR	9130395	IfStatement	if ( code < 0 )		9130315	1					
ANR	9130396	Condition	code < 0	212:20:6056:6063	9130315	0	True				
ANR	9130397	RelationalExpression	code < 0		9130315	0		<			
ANR	9130398	Identifier	code		9130315	0					
ANR	9130399	PrimaryExpression	0		9130315	1					
ANR	9130400	ReturnStatement	return code ;	213:20:6086:6097	9130315	1	True				
ANR	9130401	Identifier	code		9130315	0					
ANR	9130402	BreakStatement	break ;	215:12:6137:6142	9130315	3	True				
ANR	9130403	Label	case t_array :	216:8:6152:6164	9130315	4	True				
ANR	9130404	Identifier	t_array		9130315	0					
ANR	9130405	ExpressionStatement	check_write ( * op2 )	217:12:6178:6195	9130315	5	True				
ANR	9130406	CallExpression	check_write ( * op2 )		9130315	0					
ANR	9130407	Callee	check_write		9130315	0					
ANR	9130408	Identifier	check_write		9130315	0					
ANR	9130409	ArgumentList	* op2		9130315	1					
ANR	9130410	Argument	* op2		9130315	0					
ANR	9130411	UnaryOperationExpression	* op2		9130315	0					
ANR	9130412	UnaryOperator	*		9130315	0					
ANR	9130413	Identifier	op2		9130315	1					
ANR	9130414	ExpressionStatement	"check_int_ltu ( * op1 , r_size ( op2 ) )"	218:12:6209:6241	9130315	6	True				
ANR	9130415	CallExpression	"check_int_ltu ( * op1 , r_size ( op2 ) )"		9130315	0					
ANR	9130416	Callee	check_int_ltu		9130315	0					
ANR	9130417	Identifier	check_int_ltu		9130315	0					
ANR	9130418	ArgumentList	* op1		9130315	1					
ANR	9130419	Argument	* op1		9130315	0					
ANR	9130420	UnaryOperationExpression	* op1		9130315	0					
ANR	9130421	UnaryOperator	*		9130315	0					
ANR	9130422	Identifier	op1		9130315	1					
ANR	9130423	Argument	r_size ( op2 )		9130315	1					
ANR	9130424	CallExpression	r_size ( op2 )		9130315	0					
ANR	9130425	Callee	r_size		9130315	0					
ANR	9130426	Identifier	r_size		9130315	0					
ANR	9130427	ArgumentList	op2		9130315	1					
ANR	9130428	Argument	op2		9130315	0					
ANR	9130429	Identifier	op2		9130315	0					
ANR	9130430	ExpressionStatement	"store_check_dest ( op2 , op )"	219:12:6255:6280	9130315	7	True				
ANR	9130431	CallExpression	"store_check_dest ( op2 , op )"		9130315	0					
ANR	9130432	Callee	store_check_dest		9130315	0					
ANR	9130433	Identifier	store_check_dest		9130315	0					
ANR	9130434	ArgumentList	op2		9130315	1					
ANR	9130435	Argument	op2		9130315	0					
ANR	9130436	Identifier	op2		9130315	0					
ANR	9130437	Argument	op		9130315	1					
ANR	9130438	Identifier	op		9130315	0					
ANR	9130439	CompoundStatement		24:16:588:642	9130315	8					
ANR	9130440	IdentifierDeclStatement	ref * eltp = op2 -> value . refs + ( uint ) op1 -> value . intval ;	221:16:6312:6366	9130315	0	True				
ANR	9130441	IdentifierDecl	* eltp = op2 -> value . refs + ( uint ) op1 -> value . intval		9130315	0					
ANR	9130442	IdentifierDeclType	ref *		9130315	0					
ANR	9130443	Identifier	eltp		9130315	1					
ANR	9130444	AssignmentExpression	* eltp = op2 -> value . refs + ( uint ) op1 -> value . intval		9130315	2		=			
ANR	9130445	Identifier	eltp		9130315	0					
ANR	9130446	AdditiveExpression	op2 -> value . refs + ( uint ) op1 -> value . intval		9130315	1		+			
ANR	9130447	MemberAccess	op2 -> value . refs		9130315	0					
ANR	9130448	PtrMemberAccess	op2 -> value		9130315	0					
ANR	9130449	Identifier	op2		9130315	0					
ANR	9130450	Identifier	value		9130315	1					
ANR	9130451	Identifier	refs		9130315	1					
ANR	9130452	CastExpression	( uint ) op1 -> value . intval		9130315	1					
ANR	9130453	CastTarget	uint		9130315	0					
ANR	9130454	MemberAccess	op1 -> value . intval		9130315	1					
ANR	9130455	PtrMemberAccess	op1 -> value		9130315	0					
ANR	9130456	Identifier	op1		9130315	0					
ANR	9130457	Identifier	value		9130315	1					
ANR	9130458	Identifier	intval		9130315	1					
ANR	9130459	ExpressionStatement	"ref_assign_old ( op2 , eltp , op , ""put"" )"	223:16:6385:6421	9130315	1	True				
ANR	9130460	CallExpression	"ref_assign_old ( op2 , eltp , op , ""put"" )"		9130315	0					
ANR	9130461	Callee	ref_assign_old		9130315	0					
ANR	9130462	Identifier	ref_assign_old		9130315	0					
ANR	9130463	ArgumentList	op2		9130315	1					
ANR	9130464	Argument	op2		9130315	0					
ANR	9130465	Identifier	op2		9130315	0					
ANR	9130466	Argument	eltp		9130315	1					
ANR	9130467	Identifier	eltp		9130315	0					
ANR	9130468	Argument	op		9130315	2					
ANR	9130469	Identifier	op		9130315	0					
ANR	9130470	Argument	"""put"""		9130315	3					
ANR	9130471	PrimaryExpression	"""put"""		9130315	0					
ANR	9130472	BreakStatement	break ;	225:12:6449:6454	9130315	9	True				
ANR	9130473	Label	case t_mixedarray :	226:8:6464:6481	9130315	10	True				
ANR	9130474	Identifier	t_mixedarray		9130315	0					
ANR	9130475	Label	case t_shortarray :	227:8:6525:6542	9130315	11	True				
ANR	9130476	Identifier	t_shortarray		9130315	0					
ANR	9130477	ExpressionStatement	return_error ( gs_error_invalidaccess )	228:12:6556:6592	9130315	12	True				
ANR	9130478	CallExpression	return_error ( gs_error_invalidaccess )		9130315	0					
ANR	9130479	Callee	return_error		9130315	0					
ANR	9130480	Identifier	return_error		9130315	0					
ANR	9130481	ArgumentList	gs_error_invalidaccess		9130315	1					
ANR	9130482	Argument	gs_error_invalidaccess		9130315	0					
ANR	9130483	Identifier	gs_error_invalidaccess		9130315	0					
ANR	9130484	Label	case t_string :	229:8:6602:6615	9130315	13	True				
ANR	9130485	Identifier	t_string		9130315	0					
ANR	9130486	ExpressionStatement	sdata = op2 -> value . bytes	230:12:6629:6653	9130315	14	True				
ANR	9130487	AssignmentExpression	sdata = op2 -> value . bytes		9130315	0		=			
ANR	9130488	Identifier	sdata		9130315	0					
ANR	9130489	MemberAccess	op2 -> value . bytes		9130315	1					
ANR	9130490	PtrMemberAccess	op2 -> value		9130315	0					
ANR	9130491	Identifier	op2		9130315	0					
ANR	9130492	Identifier	value		9130315	1					
ANR	9130493	Identifier	bytes		9130315	1					
ANR	9130494	ExpressionStatement	ssize = r_size ( op2 )	231:12:6667:6686	9130315	15	True				
ANR	9130495	AssignmentExpression	ssize = r_size ( op2 )		9130315	0		=			
ANR	9130496	Identifier	ssize		9130315	0					
ANR	9130497	CallExpression	r_size ( op2 )		9130315	1					
ANR	9130498	Callee	r_size		9130315	0					
ANR	9130499	Identifier	r_size		9130315	0					
ANR	9130500	ArgumentList	op2		9130315	1					
ANR	9130501	Argument	op2		9130315	0					
ANR	9130502	Identifier	op2		9130315	0					
ANR	9130503	Label	str :	232:0:6688:6691	9130315	16	True				
ANR	9130504	Identifier	str		9130315	0					
ANR	9130505	ExpressionStatement	check_write ( * op2 )	232:9:6697:6714	9130315	17	True				
ANR	9130506	CallExpression	check_write ( * op2 )		9130315	0					
ANR	9130507	Callee	check_write		9130315	0					
ANR	9130508	Identifier	check_write		9130315	0					
ANR	9130509	ArgumentList	* op2		9130315	1					
ANR	9130510	Argument	* op2		9130315	0					
ANR	9130511	UnaryOperationExpression	* op2		9130315	0					
ANR	9130512	UnaryOperator	*		9130315	0					
ANR	9130513	Identifier	op2		9130315	1					
ANR	9130514	ExpressionStatement	"check_int_ltu ( * op1 , ssize )"	233:12:6728:6754	9130315	18	True				
ANR	9130515	CallExpression	"check_int_ltu ( * op1 , ssize )"		9130315	0					
ANR	9130516	Callee	check_int_ltu		9130315	0					
ANR	9130517	Identifier	check_int_ltu		9130315	0					
ANR	9130518	ArgumentList	* op1		9130315	1					
ANR	9130519	Argument	* op1		9130315	0					
ANR	9130520	UnaryOperationExpression	* op1		9130315	0					
ANR	9130521	UnaryOperator	*		9130315	0					
ANR	9130522	Identifier	op1		9130315	1					
ANR	9130523	Argument	ssize		9130315	1					
ANR	9130524	Identifier	ssize		9130315	0					
ANR	9130525	ExpressionStatement	"check_int_leu ( * op , 0xff )"	234:12:6768:6792	9130315	19	True				
ANR	9130526	CallExpression	"check_int_leu ( * op , 0xff )"		9130315	0					
ANR	9130527	Callee	check_int_leu		9130315	0					
ANR	9130528	Identifier	check_int_leu		9130315	0					
ANR	9130529	ArgumentList	* op		9130315	1					
ANR	9130530	Argument	* op		9130315	0					
ANR	9130531	UnaryOperationExpression	* op		9130315	0					
ANR	9130532	UnaryOperator	*		9130315	0					
ANR	9130533	Identifier	op		9130315	1					
ANR	9130534	Argument	0xff		9130315	1					
ANR	9130535	PrimaryExpression	0xff		9130315	0					
ANR	9130536	ExpressionStatement	sdata [ ( uint ) op1 -> value . intval ] = ( byte ) op -> value . intval	235:12:6806:6861	9130315	20	True				
ANR	9130537	AssignmentExpression	sdata [ ( uint ) op1 -> value . intval ] = ( byte ) op -> value . intval		9130315	0		=			
ANR	9130538	ArrayIndexing	sdata [ ( uint ) op1 -> value . intval ]		9130315	0					
ANR	9130539	Identifier	sdata		9130315	0					
ANR	9130540	CastExpression	( uint ) op1 -> value . intval		9130315	1					
ANR	9130541	CastTarget	uint		9130315	0					
ANR	9130542	MemberAccess	op1 -> value . intval		9130315	1					
ANR	9130543	PtrMemberAccess	op1 -> value		9130315	0					
ANR	9130544	Identifier	op1		9130315	0					
ANR	9130545	Identifier	value		9130315	1					
ANR	9130546	Identifier	intval		9130315	1					
ANR	9130547	CastExpression	( byte ) op -> value . intval		9130315	1					
ANR	9130548	CastTarget	byte		9130315	0					
ANR	9130549	MemberAccess	op -> value . intval		9130315	1					
ANR	9130550	PtrMemberAccess	op -> value		9130315	0					
ANR	9130551	Identifier	op		9130315	0					
ANR	9130552	Identifier	value		9130315	1					
ANR	9130553	Identifier	intval		9130315	1					
ANR	9130554	BreakStatement	break ;	236:12:6875:6880	9130315	21	True				
ANR	9130555	Label	case t_astruct :	237:8:6890:6904	9130315	22	True				
ANR	9130556	Identifier	t_astruct		9130315	0					
ANR	9130557	IfStatement	"if ( gs_object_type ( imemory , op2 -> value . pstruct ) != & st_bytes )"		9130315	23					
ANR	9130558	Condition	"gs_object_type ( imemory , op2 -> value . pstruct ) != & st_bytes"	238:16:6922:6977	9130315	0	True				
ANR	9130559	EqualityExpression	"gs_object_type ( imemory , op2 -> value . pstruct ) != & st_bytes"		9130315	0		!=			
ANR	9130560	CallExpression	"gs_object_type ( imemory , op2 -> value . pstruct )"		9130315	0					
ANR	9130561	Callee	gs_object_type		9130315	0					
ANR	9130562	Identifier	gs_object_type		9130315	0					
ANR	9130563	ArgumentList	imemory		9130315	1					
ANR	9130564	Argument	imemory		9130315	0					
ANR	9130565	Identifier	imemory		9130315	0					
ANR	9130566	Argument	op2 -> value . pstruct		9130315	1					
ANR	9130567	MemberAccess	op2 -> value . pstruct		9130315	0					
ANR	9130568	PtrMemberAccess	op2 -> value		9130315	0					
ANR	9130569	Identifier	op2		9130315	0					
ANR	9130570	Identifier	value		9130315	1					
ANR	9130571	Identifier	pstruct		9130315	1					
ANR	9130572	UnaryOperationExpression	& st_bytes		9130315	1					
ANR	9130573	UnaryOperator	&		9130315	0					
ANR	9130574	Identifier	st_bytes		9130315	1					
ANR	9130575	ExpressionStatement	return_error ( gs_error_typecheck )	239:16:6996:7028	9130315	1	True				
ANR	9130576	CallExpression	return_error ( gs_error_typecheck )		9130315	0					
ANR	9130577	Callee	return_error		9130315	0					
ANR	9130578	Identifier	return_error		9130315	0					
ANR	9130579	ArgumentList	gs_error_typecheck		9130315	1					
ANR	9130580	Argument	gs_error_typecheck		9130315	0					
ANR	9130581	Identifier	gs_error_typecheck		9130315	0					
ANR	9130582	ExpressionStatement	"sdata = r_ptr ( op2 , byte )"	240:12:7042:7066	9130315	24	True				
ANR	9130583	AssignmentExpression	"sdata = r_ptr ( op2 , byte )"		9130315	0		=			
ANR	9130584	Identifier	sdata		9130315	0					
ANR	9130585	CallExpression	"r_ptr ( op2 , byte )"		9130315	1					
ANR	9130586	Callee	r_ptr		9130315	0					
ANR	9130587	Identifier	r_ptr		9130315	0					
ANR	9130588	ArgumentList	op2		9130315	1					
ANR	9130589	Argument	op2		9130315	0					
ANR	9130590	Identifier	op2		9130315	0					
ANR	9130591	Argument	byte		9130315	1					
ANR	9130592	Identifier	byte		9130315	0					
ANR	9130593	ExpressionStatement	"ssize = gs_object_size ( imemory , op2 -> value . pstruct )"	241:12:7080:7131	9130315	25	True				
ANR	9130594	AssignmentExpression	"ssize = gs_object_size ( imemory , op2 -> value . pstruct )"		9130315	0		=			
ANR	9130595	Identifier	ssize		9130315	0					
ANR	9130596	CallExpression	"gs_object_size ( imemory , op2 -> value . pstruct )"		9130315	1					
ANR	9130597	Callee	gs_object_size		9130315	0					
ANR	9130598	Identifier	gs_object_size		9130315	0					
ANR	9130599	ArgumentList	imemory		9130315	1					
ANR	9130600	Argument	imemory		9130315	0					
ANR	9130601	Identifier	imemory		9130315	0					
ANR	9130602	Argument	op2 -> value . pstruct		9130315	1					
ANR	9130603	MemberAccess	op2 -> value . pstruct		9130315	0					
ANR	9130604	PtrMemberAccess	op2 -> value		9130315	0					
ANR	9130605	Identifier	op2		9130315	0					
ANR	9130606	Identifier	value		9130315	1					
ANR	9130607	Identifier	pstruct		9130315	1					
ANR	9130608	GotoStatement	goto str ;	242:12:7145:7153	9130315	26	True				
ANR	9130609	Identifier	str		9130315	0					
ANR	9130610	Label	default :	243:8:7163:7170	9130315	27	True				
ANR	9130611	Identifier	default		9130315	0					
ANR	9130612	ExpressionStatement	return_op_typecheck ( op2 )	244:12:7184:7208	9130315	28	True				
ANR	9130613	CallExpression	return_op_typecheck ( op2 )		9130315	0					
ANR	9130614	Callee	return_op_typecheck		9130315	0					
ANR	9130615	Identifier	return_op_typecheck		9130315	0					
ANR	9130616	ArgumentList	op2		9130315	1					
ANR	9130617	Argument	op2		9130315	0					
ANR	9130618	Identifier	op2		9130315	0					
ANR	9130619	ExpressionStatement	pop ( 3 )	246:4:7220:7226	9130315	6	True				
ANR	9130620	CallExpression	pop ( 3 )		9130315	0					
ANR	9130621	Callee	pop		9130315	0					
ANR	9130622	Identifier	pop		9130315	0					
ANR	9130623	ArgumentList	3		9130315	1					
ANR	9130624	Argument	3		9130315	0					
ANR	9130625	PrimaryExpression	3		9130315	0					
ANR	9130626	ReturnStatement	return 0 ;	247:4:7232:7240	9130315	7	True				
ANR	9130627	PrimaryExpression	0		9130315	0					
ANR	9130628	ReturnType	static int		9130315	1					
ANR	9130629	Identifier	zput		9130315	2					
ANR	9130630	ParameterList	i_ctx_t * i_ctx_p		9130315	3					
ANR	9130631	Parameter	i_ctx_t * i_ctx_p	197:5:5705:5720	9130315	0	True				
ANR	9130632	ParameterType	i_ctx_t *		9130315	0					
ANR	9130633	Identifier	i_ctx_p		9130315	1					
ANR	9130634	CFGEntryNode	ENTRY		9130315		True				
ANR	9130635	CFGExitNode	EXIT		9130315		True				
ANR	9130636	Symbol	code		9130315						
ANR	9130637	Symbol	* sdata		9130315						
ANR	9130638	Symbol	* op1 -> value . intval		9130315						
ANR	9130639	Symbol	gs_object_type		9130315						
ANR	9130640	Symbol	* op		9130315						
ANR	9130641	Symbol	* * op1		9130315						
ANR	9130642	Symbol	op2 -> value . bytes		9130315						
ANR	9130643	Symbol	op2 -> value . refs		9130315						
ANR	9130644	Symbol	op2 -> value		9130315						
ANR	9130645	Symbol	eltp		9130315						
ANR	9130646	Symbol	osp		9130315						
ANR	9130647	Symbol	gs_object_size		9130315						
ANR	9130648	Symbol	gs_error_typecheck		9130315						
ANR	9130649	Symbol	r_ptr		9130315						
ANR	9130650	Symbol	op1 -> value . intval		9130315						
ANR	9130651	Symbol	op -> value		9130315						
ANR	9130652	Symbol	r_size		9130315						
ANR	9130653	Symbol	* i_ctx_p		9130315						
ANR	9130654	Symbol	* op1		9130315						
ANR	9130655	Symbol	gs_error_invalidaccess		9130315						
ANR	9130656	Symbol	* op2		9130315						
ANR	9130657	Symbol	idict_put		9130315						
ANR	9130658	Symbol	imemory		9130315						
ANR	9130659	Symbol	i_ctx_p -> in_superexec		9130315						
ANR	9130660	Symbol	sdata		9130315						
ANR	9130661	Symbol	r_type		9130315						
ANR	9130662	Symbol	op		9130315						
ANR	9130663	Symbol	op1 -> value		9130315						
ANR	9130664	Symbol	op2 -> value . pstruct		9130315						
ANR	9130665	Symbol	byte		9130315						
ANR	9130666	Symbol	& st_bytes		9130315						
ANR	9130667	Symbol	op2		9130315						
ANR	9130668	Symbol	op1		9130315						
ANR	9130669	Symbol	i_ctx_p		9130315						
ANR	9130670	Symbol	* op1 -> value		9130315						
ANR	9130671	Symbol	op -> value . intval		9130315						
ANR	9130672	Symbol	ssize		9130315						
ANR	9130673	Function	zforceput	260:0:7733:8763							
ANR	9130674	FunctionDef	zforceput (i_ctx_t * i_ctx_p)		9130673	0					
ANR	9130675	CompoundStatement		262:0:7772:8763	9130673	0					
ANR	9130676	IdentifierDeclStatement	os_ptr op = osp ;	263:4:7778:7793	9130673	0	True				
ANR	9130677	IdentifierDecl	op = osp		9130673	0					
ANR	9130678	IdentifierDeclType	os_ptr		9130673	0					
ANR	9130679	Identifier	op		9130673	1					
ANR	9130680	AssignmentExpression	op = osp		9130673	2		=			
ANR	9130681	Identifier	osp		9130673	0					
ANR	9130682	Identifier	osp		9130673	1					
ANR	9130683	IdentifierDeclStatement	os_ptr op1 = op - 1 ;	264:4:7799:7818	9130673	1	True				
ANR	9130684	IdentifierDecl	op1 = op - 1		9130673	0					
ANR	9130685	IdentifierDeclType	os_ptr		9130673	0					
ANR	9130686	Identifier	op1		9130673	1					
ANR	9130687	AssignmentExpression	op1 = op - 1		9130673	2		=			
ANR	9130688	Identifier	op1		9130673	0					
ANR	9130689	AdditiveExpression	op - 1		9130673	1		-			
ANR	9130690	Identifier	op		9130673	0					
ANR	9130691	PrimaryExpression	1		9130673	1					
ANR	9130692	IdentifierDeclStatement	os_ptr op2 = op - 2 ;	265:4:7824:7843	9130673	2	True				
ANR	9130693	IdentifierDecl	op2 = op - 2		9130673	0					
ANR	9130694	IdentifierDeclType	os_ptr		9130673	0					
ANR	9130695	Identifier	op2		9130673	1					
ANR	9130696	AssignmentExpression	op2 = op - 2		9130673	2		=			
ANR	9130697	Identifier	op2		9130673	0					
ANR	9130698	AdditiveExpression	op - 2		9130673	1		-			
ANR	9130699	Identifier	op		9130673	0					
ANR	9130700	PrimaryExpression	2		9130673	1					
ANR	9130701	IdentifierDeclStatement	int code ;	266:4:7849:7857	9130673	3	True				
ANR	9130702	IdentifierDecl	code		9130673	0					
ANR	9130703	IdentifierDeclType	int		9130673	0					
ANR	9130704	Identifier	code		9130673	1					
ANR	9130705	SwitchStatement	switch ( r_type ( op2 ) )		9130673	4					
ANR	9130706	Condition	r_type ( op2 )	268:12:7872:7882	9130673	0	True				
ANR	9130707	CallExpression	r_type ( op2 )		9130673	0					
ANR	9130708	Callee	r_type		9130673	0					
ANR	9130709	Identifier	r_type		9130673	0					
ANR	9130710	ArgumentList	op2		9130673	1					
ANR	9130711	Argument	op2		9130673	0					
ANR	9130712	Identifier	op2		9130673	0					
ANR	9130713	CompoundStatement		7:25:112:112	9130673	1					
ANR	9130714	Label	case t_array :	269:4:7891:7903	9130673	0	True				
ANR	9130715	Identifier	t_array		9130673	0					
ANR	9130716	ExpressionStatement	"check_int_ltu ( * op1 , r_size ( op2 ) )"	270:8:7913:7945	9130673	1	True				
ANR	9130717	CallExpression	"check_int_ltu ( * op1 , r_size ( op2 ) )"		9130673	0					
ANR	9130718	Callee	check_int_ltu		9130673	0					
ANR	9130719	Identifier	check_int_ltu		9130673	0					
ANR	9130720	ArgumentList	* op1		9130673	1					
ANR	9130721	Argument	* op1		9130673	0					
ANR	9130722	UnaryOperationExpression	* op1		9130673	0					
ANR	9130723	UnaryOperator	*		9130673	0					
ANR	9130724	Identifier	op1		9130673	1					
ANR	9130725	Argument	r_size ( op2 )		9130673	1					
ANR	9130726	CallExpression	r_size ( op2 )		9130673	0					
ANR	9130727	Callee	r_size		9130673	0					
ANR	9130728	Identifier	r_size		9130673	0					
ANR	9130729	ArgumentList	op2		9130673	1					
ANR	9130730	Argument	op2		9130673	0					
ANR	9130731	Identifier	op2		9130673	0					
ANR	9130732	IfStatement	if ( r_space ( op2 ) > r_space ( op ) )		9130673	2					
ANR	9130733	Condition	r_space ( op2 ) > r_space ( op )	271:12:7959:7984	9130673	0	True				
ANR	9130734	RelationalExpression	r_space ( op2 ) > r_space ( op )		9130673	0		>			
ANR	9130735	CallExpression	r_space ( op2 )		9130673	0					
ANR	9130736	Callee	r_space		9130673	0					
ANR	9130737	Identifier	r_space		9130673	0					
ANR	9130738	ArgumentList	op2		9130673	1					
ANR	9130739	Argument	op2		9130673	0					
ANR	9130740	Identifier	op2		9130673	0					
ANR	9130741	CallExpression	r_space ( op )		9130673	1					
ANR	9130742	Callee	r_space		9130673	0					
ANR	9130743	Identifier	r_space		9130673	0					
ANR	9130744	ArgumentList	op		9130673	1					
ANR	9130745	Argument	op		9130673	0					
ANR	9130746	Identifier	op		9130673	0					
ANR	9130747	CompoundStatement		10:40:214:214	9130673	1					
ANR	9130748	IfStatement	if ( imemory_save_level ( iimemory ) )		9130673	0					
ANR	9130749	Condition	imemory_save_level ( iimemory )	272:16:8005:8032	9130673	0	True				
ANR	9130750	CallExpression	imemory_save_level ( iimemory )		9130673	0					
ANR	9130751	Callee	imemory_save_level		9130673	0					
ANR	9130752	Identifier	imemory_save_level		9130673	0					
ANR	9130753	ArgumentList	iimemory		9130673	1					
ANR	9130754	Argument	iimemory		9130673	0					
ANR	9130755	Identifier	iimemory		9130673	0					
ANR	9130756	ExpressionStatement	return_error ( gs_error_invalidaccess )	273:16:8051:8087	9130673	1	True				
ANR	9130757	CallExpression	return_error ( gs_error_invalidaccess )		9130673	0					
ANR	9130758	Callee	return_error		9130673	0					
ANR	9130759	Identifier	return_error		9130673	0					
ANR	9130760	ArgumentList	gs_error_invalidaccess		9130673	1					
ANR	9130761	Argument	gs_error_invalidaccess		9130673	0					
ANR	9130762	Identifier	gs_error_invalidaccess		9130673	0					
ANR	9130763	CompoundStatement		15:12:348:402	9130673	3					
ANR	9130764	IdentifierDeclStatement	ref * eltp = op2 -> value . refs + ( uint ) op1 -> value . intval ;	276:12:8121:8175	9130673	0	True				
ANR	9130765	IdentifierDecl	* eltp = op2 -> value . refs + ( uint ) op1 -> value . intval		9130673	0					
ANR	9130766	IdentifierDeclType	ref *		9130673	0					
ANR	9130767	Identifier	eltp		9130673	1					
ANR	9130768	AssignmentExpression	* eltp = op2 -> value . refs + ( uint ) op1 -> value . intval		9130673	2		=			
ANR	9130769	Identifier	eltp		9130673	0					
ANR	9130770	AdditiveExpression	op2 -> value . refs + ( uint ) op1 -> value . intval		9130673	1		+			
ANR	9130771	MemberAccess	op2 -> value . refs		9130673	0					
ANR	9130772	PtrMemberAccess	op2 -> value		9130673	0					
ANR	9130773	Identifier	op2		9130673	0					
ANR	9130774	Identifier	value		9130673	1					
ANR	9130775	Identifier	refs		9130673	1					
ANR	9130776	CastExpression	( uint ) op1 -> value . intval		9130673	1					
ANR	9130777	CastTarget	uint		9130673	0					
ANR	9130778	MemberAccess	op1 -> value . intval		9130673	1					
ANR	9130779	PtrMemberAccess	op1 -> value		9130673	0					
ANR	9130780	Identifier	op1		9130673	0					
ANR	9130781	Identifier	value		9130673	1					
ANR	9130782	Identifier	intval		9130673	1					
ANR	9130783	ExpressionStatement	"ref_assign_old ( op2 , eltp , op , ""put"" )"	278:12:8190:8226	9130673	1	True				
ANR	9130784	CallExpression	"ref_assign_old ( op2 , eltp , op , ""put"" )"		9130673	0					
ANR	9130785	Callee	ref_assign_old		9130673	0					
ANR	9130786	Identifier	ref_assign_old		9130673	0					
ANR	9130787	ArgumentList	op2		9130673	1					
ANR	9130788	Argument	op2		9130673	0					
ANR	9130789	Identifier	op2		9130673	0					
ANR	9130790	Argument	eltp		9130673	1					
ANR	9130791	Identifier	eltp		9130673	0					
ANR	9130792	Argument	op		9130673	2					
ANR	9130793	Identifier	op		9130673	0					
ANR	9130794	Argument	"""put"""		9130673	3					
ANR	9130795	PrimaryExpression	"""put"""		9130673	0					
ANR	9130796	BreakStatement	break ;	280:8:8246:8251	9130673	4	True				
ANR	9130797	Label	case t_dictionary :	281:4:8257:8274	9130673	5	True				
ANR	9130798	Identifier	t_dictionary		9130673	0					
ANR	9130799	IfStatement	if ( op2 -> value . pdict == systemdict -> value . pdict || ! imemory_save_level ( iimemory ) )		9130673	6					
ANR	9130800	Condition	op2 -> value . pdict == systemdict -> value . pdict || ! imemory_save_level ( iimemory )	282:12:8288:8375	9130673	0	True				
ANR	9130801	OrExpression	op2 -> value . pdict == systemdict -> value . pdict || ! imemory_save_level ( iimemory )		9130673	0		||			
ANR	9130802	EqualityExpression	op2 -> value . pdict == systemdict -> value . pdict		9130673	0		==			
ANR	9130803	MemberAccess	op2 -> value . pdict		9130673	0					
ANR	9130804	PtrMemberAccess	op2 -> value		9130673	0					
ANR	9130805	Identifier	op2		9130673	0					
ANR	9130806	Identifier	value		9130673	1					
ANR	9130807	Identifier	pdict		9130673	1					
ANR	9130808	MemberAccess	systemdict -> value . pdict		9130673	1					
ANR	9130809	PtrMemberAccess	systemdict -> value		9130673	0					
ANR	9130810	Identifier	systemdict		9130673	0					
ANR	9130811	Identifier	value		9130673	1					
ANR	9130812	Identifier	pdict		9130673	1					
ANR	9130813	UnaryOperationExpression	! imemory_save_level ( iimemory )		9130673	1					
ANR	9130814	UnaryOperator	!		9130673	0					
ANR	9130815	CallExpression	imemory_save_level ( iimemory )		9130673	1					
ANR	9130816	Callee	imemory_save_level		9130673	0					
ANR	9130817	Identifier	imemory_save_level		9130673	0					
ANR	9130818	ArgumentList	iimemory		9130673	1					
ANR	9130819	Argument	iimemory		9130673	0					
ANR	9130820	Identifier	iimemory		9130673	0					
ANR	9130821	CompoundStatement		24:12:632:657	9130673	1					
ANR	9130822	IdentifierDeclStatement	uint space = r_space ( op2 ) ;	285:12:8405:8430	9130673	0	True				
ANR	9130823	IdentifierDecl	space = r_space ( op2 )		9130673	0					
ANR	9130824	IdentifierDeclType	uint		9130673	0					
ANR	9130825	Identifier	space		9130673	1					
ANR	9130826	AssignmentExpression	space = r_space ( op2 )		9130673	2		=			
ANR	9130827	Identifier	space		9130673	0					
ANR	9130828	CallExpression	r_space ( op2 )		9130673	1					
ANR	9130829	Callee	r_space		9130673	0					
ANR	9130830	Identifier	r_space		9130673	0					
ANR	9130831	ArgumentList	op2		9130673	1					
ANR	9130832	Argument	op2		9130673	0					
ANR	9130833	Identifier	op2		9130673	0					
ANR	9130834	ExpressionStatement	"r_set_space ( op2 , avm_local )"	287:12:8445:8472	9130673	1	True				
ANR	9130835	CallExpression	"r_set_space ( op2 , avm_local )"		9130673	0					
ANR	9130836	Callee	r_set_space		9130673	0					
ANR	9130837	Identifier	r_set_space		9130673	0					
ANR	9130838	ArgumentList	op2		9130673	1					
ANR	9130839	Argument	op2		9130673	0					
ANR	9130840	Identifier	op2		9130673	0					
ANR	9130841	Argument	avm_local		9130673	1					
ANR	9130842	Identifier	avm_local		9130673	0					
ANR	9130843	ExpressionStatement	"code = idict_put ( op2 , op1 , op )"	288:12:8486:8516	9130673	2	True				
ANR	9130844	AssignmentExpression	"code = idict_put ( op2 , op1 , op )"		9130673	0		=			
ANR	9130845	Identifier	code		9130673	0					
ANR	9130846	CallExpression	"idict_put ( op2 , op1 , op )"		9130673	1					
ANR	9130847	Callee	idict_put		9130673	0					
ANR	9130848	Identifier	idict_put		9130673	0					
ANR	9130849	ArgumentList	op2		9130673	1					
ANR	9130850	Argument	op2		9130673	0					
ANR	9130851	Identifier	op2		9130673	0					
ANR	9130852	Argument	op1		9130673	1					
ANR	9130853	Identifier	op1		9130673	0					
ANR	9130854	Argument	op		9130673	2					
ANR	9130855	Identifier	op		9130673	0					
ANR	9130856	ExpressionStatement	"r_set_space ( op2 , space )"	289:12:8530:8553	9130673	3	True				
ANR	9130857	CallExpression	"r_set_space ( op2 , space )"		9130673	0					
ANR	9130858	Callee	r_set_space		9130673	0					
ANR	9130859	Identifier	r_set_space		9130673	0					
ANR	9130860	ArgumentList	op2		9130673	1					
ANR	9130861	Argument	op2		9130673	0					
ANR	9130862	Identifier	op2		9130673	0					
ANR	9130863	Argument	space		9130673	1					
ANR	9130864	Identifier	space		9130673	0					
ANR	9130865	ElseStatement	else		9130673	0					
ANR	9130866	ExpressionStatement	"code = idict_put ( op2 , op1 , op )"	291:12:8582:8612	9130673	0	True				
ANR	9130867	AssignmentExpression	"code = idict_put ( op2 , op1 , op )"		9130673	0		=			
ANR	9130868	Identifier	code		9130673	0					
ANR	9130869	CallExpression	"idict_put ( op2 , op1 , op )"		9130673	1					
ANR	9130870	Callee	idict_put		9130673	0					
ANR	9130871	Identifier	idict_put		9130673	0					
ANR	9130872	ArgumentList	op2		9130673	1					
ANR	9130873	Argument	op2		9130673	0					
ANR	9130874	Identifier	op2		9130673	0					
ANR	9130875	Argument	op1		9130673	1					
ANR	9130876	Identifier	op1		9130673	0					
ANR	9130877	Argument	op		9130673	2					
ANR	9130878	Identifier	op		9130673	0					
ANR	9130879	IfStatement	if ( code < 0 )		9130673	7					
ANR	9130880	Condition	code < 0	292:12:8626:8633	9130673	0	True				
ANR	9130881	RelationalExpression	code < 0		9130673	0		<			
ANR	9130882	Identifier	code		9130673	0					
ANR	9130883	PrimaryExpression	0		9130673	1					
ANR	9130884	ReturnStatement	return code ;	293:12:8648:8659	9130673	1	True				
ANR	9130885	Identifier	code		9130673	0					
ANR	9130886	BreakStatement	break ;	294:8:8669:8674	9130673	8	True				
ANR	9130887	Label	default :	295:4:8680:8687	9130673	9	True				
ANR	9130888	Identifier	default		9130673	0					
ANR	9130889	ExpressionStatement	return_error ( gs_error_typecheck )	296:8:8697:8729	9130673	10	True				
ANR	9130890	CallExpression	return_error ( gs_error_typecheck )		9130673	0					
ANR	9130891	Callee	return_error		9130673	0					
ANR	9130892	Identifier	return_error		9130673	0					
ANR	9130893	ArgumentList	gs_error_typecheck		9130673	1					
ANR	9130894	Argument	gs_error_typecheck		9130673	0					
ANR	9130895	Identifier	gs_error_typecheck		9130673	0					
ANR	9130896	ExpressionStatement	pop ( 3 )	298:4:8741:8747	9130673	5	True				
ANR	9130897	CallExpression	pop ( 3 )		9130673	0					
ANR	9130898	Callee	pop		9130673	0					
ANR	9130899	Identifier	pop		9130673	0					
ANR	9130900	ArgumentList	3		9130673	1					
ANR	9130901	Argument	3		9130673	0					
ANR	9130902	PrimaryExpression	3		9130673	0					
ANR	9130903	ReturnStatement	return 0 ;	299:4:8753:8761	9130673	6	True				
ANR	9130904	PrimaryExpression	0		9130673	0					
ANR	9130905	ReturnType	static int		9130673	1					
ANR	9130906	Identifier	zforceput		9130673	2					
ANR	9130907	ParameterList	i_ctx_t * i_ctx_p		9130673	3					
ANR	9130908	Parameter	i_ctx_t * i_ctx_p	261:10:7754:7769	9130673	0	True				
ANR	9130909	ParameterType	i_ctx_t *		9130673	0					
ANR	9130910	Identifier	i_ctx_p		9130673	1					
ANR	9130911	CFGEntryNode	ENTRY		9130673		True				
ANR	9130912	CFGExitNode	EXIT		9130673		True				
ANR	9130913	Symbol	code		9130673						
ANR	9130914	Symbol	op2 -> value . refs		9130673						
ANR	9130915	Symbol	avm_local		9130673						
ANR	9130916	Symbol	op2 -> value		9130673						
ANR	9130917	Symbol	systemdict -> value		9130673						
ANR	9130918	Symbol	eltp		9130673						
ANR	9130919	Symbol	osp		9130673						
ANR	9130920	Symbol	space		9130673						
ANR	9130921	Symbol	* systemdict		9130673						
ANR	9130922	Symbol	op2 -> value . pdict		9130673						
ANR	9130923	Symbol	systemdict -> value . pdict		9130673						
ANR	9130924	Symbol	r_space		9130673						
ANR	9130925	Symbol	gs_error_typecheck		9130673						
ANR	9130926	Symbol	op1 -> value . intval		9130673						
ANR	9130927	Symbol	r_size		9130673						
ANR	9130928	Symbol	* op1		9130673						
ANR	9130929	Symbol	gs_error_invalidaccess		9130673						
ANR	9130930	Symbol	* op2		9130673						
ANR	9130931	Symbol	idict_put		9130673						
ANR	9130932	Symbol	r_type		9130673						
ANR	9130933	Symbol	op		9130673						
ANR	9130934	Symbol	op1 -> value		9130673						
ANR	9130935	Symbol	iimemory		9130673						
ANR	9130936	Symbol	op2		9130673						
ANR	9130937	Symbol	op1		9130673						
ANR	9130938	Symbol	imemory_save_level		9130673						
ANR	9130939	Symbol	i_ctx_p		9130673						
ANR	9130940	Symbol	systemdict		9130673						
ANR	9130941	Function	zgetinterval	303:0:8840:9908							
ANR	9130942	FunctionDef	zgetinterval (i_ctx_t * i_ctx_p)		9130941	0					
ANR	9130943	CompoundStatement		305:0:8882:9908	9130941	0					
ANR	9130944	IdentifierDeclStatement	os_ptr op = osp ;	306:4:8888:8903	9130941	0	True				
ANR	9130945	IdentifierDecl	op = osp		9130941	0					
ANR	9130946	IdentifierDeclType	os_ptr		9130941	0					
ANR	9130947	Identifier	op		9130941	1					
ANR	9130948	AssignmentExpression	op = osp		9130941	2		=			
ANR	9130949	Identifier	osp		9130941	0					
ANR	9130950	Identifier	osp		9130941	1					
ANR	9130951	IdentifierDeclStatement	os_ptr op1 = op - 1 ;	307:4:8909:8928	9130941	1	True				
ANR	9130952	IdentifierDecl	op1 = op - 1		9130941	0					
ANR	9130953	IdentifierDeclType	os_ptr		9130941	0					
ANR	9130954	Identifier	op1		9130941	1					
ANR	9130955	AssignmentExpression	op1 = op - 1		9130941	2		=			
ANR	9130956	Identifier	op1		9130941	0					
ANR	9130957	AdditiveExpression	op - 1		9130941	1		-			
ANR	9130958	Identifier	op		9130941	0					
ANR	9130959	PrimaryExpression	1		9130941	1					
ANR	9130960	IdentifierDeclStatement	os_ptr op2 = op1 - 1 ;	308:4:8934:8954	9130941	2	True				
ANR	9130961	IdentifierDecl	op2 = op1 - 1		9130941	0					
ANR	9130962	IdentifierDeclType	os_ptr		9130941	0					
ANR	9130963	Identifier	op2		9130941	1					
ANR	9130964	AssignmentExpression	op2 = op1 - 1		9130941	2		=			
ANR	9130965	Identifier	op2		9130941	0					
ANR	9130966	AdditiveExpression	op1 - 1		9130941	1		-			
ANR	9130967	Identifier	op1		9130941	0					
ANR	9130968	PrimaryExpression	1		9130941	1					
ANR	9130969	IdentifierDeclStatement	uint index ;	309:4:8960:8970	9130941	3	True				
ANR	9130970	IdentifierDecl	index		9130941	0					
ANR	9130971	IdentifierDeclType	uint		9130941	0					
ANR	9130972	Identifier	index		9130941	1					
ANR	9130973	IdentifierDeclStatement	uint count ;	310:4:8976:8986	9130941	4	True				
ANR	9130974	IdentifierDecl	count		9130941	0					
ANR	9130975	IdentifierDeclType	uint		9130941	0					
ANR	9130976	Identifier	count		9130941	1					
ANR	9130977	SwitchStatement	switch ( r_type ( op2 ) )		9130941	5					
ANR	9130978	Condition	r_type ( op2 )	312:12:9001:9011	9130941	0	True				
ANR	9130979	CallExpression	r_type ( op2 )		9130941	0					
ANR	9130980	Callee	r_type		9130941	0					
ANR	9130981	Identifier	r_type		9130941	0					
ANR	9130982	ArgumentList	op2		9130941	1					
ANR	9130983	Argument	op2		9130941	0					
ANR	9130984	Identifier	op2		9130941	0					
ANR	9130985	CompoundStatement		8:25:131:131	9130941	1					
ANR	9130986	Label	default :	313:8:9024:9031	9130941	0	True				
ANR	9130987	Identifier	default		9130941	0					
ANR	9130988	ExpressionStatement	return_op_typecheck ( op2 )	314:12:9045:9069	9130941	1	True				
ANR	9130989	CallExpression	return_op_typecheck ( op2 )		9130941	0					
ANR	9130990	Callee	return_op_typecheck		9130941	0					
ANR	9130991	Identifier	return_op_typecheck		9130941	0					
ANR	9130992	ArgumentList	op2		9130941	1					
ANR	9130993	Argument	op2		9130941	0					
ANR	9130994	Identifier	op2		9130941	0					
ANR	9130995	Label	case t_array :	315:8:9079:9091	9130941	2	True				
ANR	9130996	Identifier	t_array		9130941	0					
ANR	9130997	Label	case t_string :	316:8:9101:9114	9130941	3	True				
ANR	9130998	Identifier	t_string		9130941	0					
ANR	9130999	Label	case t_mixedarray :	317:8:9124:9141	9130941	4	True				
ANR	9131000	Identifier	t_mixedarray		9130941	0					
ANR	9131001	Label	case t_shortarray :	318:8:9151:9168	9130941	5	True				
ANR	9131002	Identifier	t_shortarray		9130941	0					
ANR	9131003	ExpressionStatement		318:26:9169:9169	9130941	6	True				
ANR	9131004	ExpressionStatement	check_read ( * op2 )	320:4:9181:9197	9130941	6	True				
ANR	9131005	CallExpression	check_read ( * op2 )		9130941	0					
ANR	9131006	Callee	check_read		9130941	0					
ANR	9131007	Identifier	check_read		9130941	0					
ANR	9131008	ArgumentList	* op2		9130941	1					
ANR	9131009	Argument	* op2		9130941	0					
ANR	9131010	UnaryOperationExpression	* op2		9130941	0					
ANR	9131011	UnaryOperator	*		9130941	0					
ANR	9131012	Identifier	op2		9130941	1					
ANR	9131013	ExpressionStatement	"check_int_leu ( * op1 , r_size ( op2 ) )"	321:4:9203:9235	9130941	7	True				
ANR	9131014	CallExpression	"check_int_leu ( * op1 , r_size ( op2 ) )"		9130941	0					
ANR	9131015	Callee	check_int_leu		9130941	0					
ANR	9131016	Identifier	check_int_leu		9130941	0					
ANR	9131017	ArgumentList	* op1		9130941	1					
ANR	9131018	Argument	* op1		9130941	0					
ANR	9131019	UnaryOperationExpression	* op1		9130941	0					
ANR	9131020	UnaryOperator	*		9130941	0					
ANR	9131021	Identifier	op1		9130941	1					
ANR	9131022	Argument	r_size ( op2 )		9130941	1					
ANR	9131023	CallExpression	r_size ( op2 )		9130941	0					
ANR	9131024	Callee	r_size		9130941	0					
ANR	9131025	Identifier	r_size		9130941	0					
ANR	9131026	ArgumentList	op2		9130941	1					
ANR	9131027	Argument	op2		9130941	0					
ANR	9131028	Identifier	op2		9130941	0					
ANR	9131029	ExpressionStatement	index = op1 -> value . intval	322:4:9241:9266	9130941	8	True				
ANR	9131030	AssignmentExpression	index = op1 -> value . intval		9130941	0		=			
ANR	9131031	Identifier	index		9130941	0					
ANR	9131032	MemberAccess	op1 -> value . intval		9130941	1					
ANR	9131033	PtrMemberAccess	op1 -> value		9130941	0					
ANR	9131034	Identifier	op1		9130941	0					
ANR	9131035	Identifier	value		9130941	1					
ANR	9131036	Identifier	intval		9130941	1					
ANR	9131037	ExpressionStatement	"check_int_leu ( * op , r_size ( op2 ) - index )"	323:4:9272:9311	9130941	9	True				
ANR	9131038	CallExpression	"check_int_leu ( * op , r_size ( op2 ) - index )"		9130941	0					
ANR	9131039	Callee	check_int_leu		9130941	0					
ANR	9131040	Identifier	check_int_leu		9130941	0					
ANR	9131041	ArgumentList	* op		9130941	1					
ANR	9131042	Argument	* op		9130941	0					
ANR	9131043	UnaryOperationExpression	* op		9130941	0					
ANR	9131044	UnaryOperator	*		9130941	0					
ANR	9131045	Identifier	op		9130941	1					
ANR	9131046	Argument	r_size ( op2 ) - index		9130941	1					
ANR	9131047	AdditiveExpression	r_size ( op2 ) - index		9130941	0		-			
ANR	9131048	CallExpression	r_size ( op2 )		9130941	0					
ANR	9131049	Callee	r_size		9130941	0					
ANR	9131050	Identifier	r_size		9130941	0					
ANR	9131051	ArgumentList	op2		9130941	1					
ANR	9131052	Argument	op2		9130941	0					
ANR	9131053	Identifier	op2		9130941	0					
ANR	9131054	Identifier	index		9130941	1					
ANR	9131055	ExpressionStatement	count = op -> value . intval	324:4:9317:9341	9130941	10	True				
ANR	9131056	AssignmentExpression	count = op -> value . intval		9130941	0		=			
ANR	9131057	Identifier	count		9130941	0					
ANR	9131058	MemberAccess	op -> value . intval		9130941	1					
ANR	9131059	PtrMemberAccess	op -> value		9130941	0					
ANR	9131060	Identifier	op		9130941	0					
ANR	9131061	Identifier	value		9130941	1					
ANR	9131062	Identifier	intval		9130941	1					
ANR	9131063	SwitchStatement	switch ( r_type ( op2 ) )		9130941	11					
ANR	9131064	Condition	r_type ( op2 )	325:12:9355:9365	9130941	0	True				
ANR	9131065	CallExpression	r_type ( op2 )		9130941	0					
ANR	9131066	Callee	r_type		9130941	0					
ANR	9131067	Identifier	r_type		9130941	0					
ANR	9131068	ArgumentList	op2		9130941	1					
ANR	9131069	Argument	op2		9130941	0					
ANR	9131070	Identifier	op2		9130941	0					
ANR	9131071	CompoundStatement		21:25:485:485	9130941	1					
ANR	9131072	Label	case t_array :	326:8:9378:9390	9130941	0	True				
ANR	9131073	Identifier	t_array		9130941	0					
ANR	9131074	ExpressionStatement	op2 -> value . refs += index	327:12:9404:9428	9130941	1	True				
ANR	9131075	AssignmentExpression	op2 -> value . refs += index		9130941	0		+=			
ANR	9131076	MemberAccess	op2 -> value . refs		9130941	0					
ANR	9131077	PtrMemberAccess	op2 -> value		9130941	0					
ANR	9131078	Identifier	op2		9130941	0					
ANR	9131079	Identifier	value		9130941	1					
ANR	9131080	Identifier	refs		9130941	1					
ANR	9131081	Identifier	index		9130941	1					
ANR	9131082	BreakStatement	break ;	328:12:9442:9447	9130941	2	True				
ANR	9131083	Label	case t_string :	329:8:9457:9470	9130941	3	True				
ANR	9131084	Identifier	t_string		9130941	0					
ANR	9131085	ExpressionStatement	op2 -> value . bytes += index	330:12:9484:9509	9130941	4	True				
ANR	9131086	AssignmentExpression	op2 -> value . bytes += index		9130941	0		+=			
ANR	9131087	MemberAccess	op2 -> value . bytes		9130941	0					
ANR	9131088	PtrMemberAccess	op2 -> value		9130941	0					
ANR	9131089	Identifier	op2		9130941	0					
ANR	9131090	Identifier	value		9130941	1					
ANR	9131091	Identifier	bytes		9130941	1					
ANR	9131092	Identifier	index		9130941	1					
ANR	9131093	BreakStatement	break ;	331:12:9523:9528	9130941	5	True				
ANR	9131094	Label	case t_mixedarray :	332:8:9538:9555	9130941	6	True				
ANR	9131095	Identifier	t_mixedarray		9130941	0					
ANR	9131096	CompoundStatement		29:12:688:732	9130941	7					
ANR	9131097	IdentifierDeclStatement	const ref_packed * packed = op2 -> value . packed ;	333:12:9571:9615	9130941	0	True				
ANR	9131098	IdentifierDecl	* packed = op2 -> value . packed		9130941	0					
ANR	9131099	IdentifierDeclType	const ref_packed *		9130941	0					
ANR	9131100	Identifier	packed		9130941	1					
ANR	9131101	AssignmentExpression	* packed = op2 -> value . packed		9130941	2		=			
ANR	9131102	Identifier	packed		9130941	0					
ANR	9131103	MemberAccess	op2 -> value . packed		9130941	1					
ANR	9131104	PtrMemberAccess	op2 -> value		9130941	0					
ANR	9131105	Identifier	op2		9130941	0					
ANR	9131106	Identifier	value		9130941	1					
ANR	9131107	Identifier	packed		9130941	1					
ANR	9131108	ForStatement	for ( ; index -- ; )		9130941	1					
ANR	9131109	Condition	index --	335:19:9637:9643	9130941	0	True				
ANR	9131110	PostIncDecOperationExpression	index --		9130941	0					
ANR	9131111	Identifier	index		9130941	0					
ANR	9131112	IncDec	--		9130941	1					
ANR	9131113	ExpressionStatement	packed = packed_next ( packed )	336:16:9663:9691	9130941	1	True				
ANR	9131114	AssignmentExpression	packed = packed_next ( packed )		9130941	0		=			
ANR	9131115	Identifier	packed		9130941	0					
ANR	9131116	CallExpression	packed_next ( packed )		9130941	1					
ANR	9131117	Callee	packed_next		9130941	0					
ANR	9131118	Identifier	packed_next		9130941	0					
ANR	9131119	ArgumentList	packed		9130941	1					
ANR	9131120	Argument	packed		9130941	0					
ANR	9131121	Identifier	packed		9130941	0					
ANR	9131122	ExpressionStatement	op2 -> value . packed = packed	337:12:9705:9731	9130941	2	True				
ANR	9131123	AssignmentExpression	op2 -> value . packed = packed		9130941	0		=			
ANR	9131124	MemberAccess	op2 -> value . packed		9130941	0					
ANR	9131125	PtrMemberAccess	op2 -> value		9130941	0					
ANR	9131126	Identifier	op2		9130941	0					
ANR	9131127	Identifier	value		9130941	1					
ANR	9131128	Identifier	packed		9130941	1					
ANR	9131129	Identifier	packed		9130941	1					
ANR	9131130	BreakStatement	break ;	338:12:9745:9750	9130941	3	True				
ANR	9131131	Label	case t_shortarray :	340:8:9770:9787	9130941	8	True				
ANR	9131132	Identifier	t_shortarray		9130941	0					
ANR	9131133	ExpressionStatement	op2 -> value . packed += index	341:12:9801:9827	9130941	9	True				
ANR	9131134	AssignmentExpression	op2 -> value . packed += index		9130941	0		+=			
ANR	9131135	MemberAccess	op2 -> value . packed		9130941	0					
ANR	9131136	PtrMemberAccess	op2 -> value		9130941	0					
ANR	9131137	Identifier	op2		9130941	0					
ANR	9131138	Identifier	value		9130941	1					
ANR	9131139	Identifier	packed		9130941	1					
ANR	9131140	Identifier	index		9130941	1					
ANR	9131141	BreakStatement	break ;	342:12:9841:9846	9130941	10	True				
ANR	9131142	ExpressionStatement	"r_set_size ( op2 , count )"	344:4:9858:9880	9130941	12	True				
ANR	9131143	CallExpression	"r_set_size ( op2 , count )"		9130941	0					
ANR	9131144	Callee	r_set_size		9130941	0					
ANR	9131145	Identifier	r_set_size		9130941	0					
ANR	9131146	ArgumentList	op2		9130941	1					
ANR	9131147	Argument	op2		9130941	0					
ANR	9131148	Identifier	op2		9130941	0					
ANR	9131149	Argument	count		9130941	1					
ANR	9131150	Identifier	count		9130941	0					
ANR	9131151	ExpressionStatement	pop ( 2 )	345:4:9886:9892	9130941	13	True				
ANR	9131152	CallExpression	pop ( 2 )		9130941	0					
ANR	9131153	Callee	pop		9130941	0					
ANR	9131154	Identifier	pop		9130941	0					
ANR	9131155	ArgumentList	2		9130941	1					
ANR	9131156	Argument	2		9130941	0					
ANR	9131157	PrimaryExpression	2		9130941	0					
ANR	9131158	ReturnStatement	return 0 ;	346:4:9898:9906	9130941	14	True				
ANR	9131159	PrimaryExpression	0		9130941	0					
ANR	9131160	ReturnType	static int		9130941	1					
ANR	9131161	Identifier	zgetinterval		9130941	2					
ANR	9131162	ParameterList	i_ctx_t * i_ctx_p		9130941	3					
ANR	9131163	Parameter	i_ctx_t * i_ctx_p	304:13:8864:8879	9130941	0	True				
ANR	9131164	ParameterType	i_ctx_t *		9130941	0					
ANR	9131165	Identifier	i_ctx_p		9130941	1					
ANR	9131166	CFGEntryNode	ENTRY		9130941		True				
ANR	9131167	CFGExitNode	EXIT		9130941		True				
ANR	9131168	Symbol	op		9130941						
ANR	9131169	Symbol	op1 -> value		9130941						
ANR	9131170	Symbol	* op		9130941						
ANR	9131171	Symbol	op2 -> value . bytes		9130941						
ANR	9131172	Symbol	packed_next		9130941						
ANR	9131173	Symbol	op2 -> value . refs		9130941						
ANR	9131174	Symbol	count		9130941						
ANR	9131175	Symbol	op2 -> value		9130941						
ANR	9131176	Symbol	index		9130941						
ANR	9131177	Symbol	osp		9130941						
ANR	9131178	Symbol	op2		9130941						
ANR	9131179	Symbol	op1		9130941						
ANR	9131180	Symbol	i_ctx_p		9130941						
ANR	9131181	Symbol	op1 -> value . intval		9130941						
ANR	9131182	Symbol	op -> value		9130941						
ANR	9131183	Symbol	r_size		9130941						
ANR	9131184	Symbol	op2 -> value . packed		9130941						
ANR	9131185	Symbol	* op1		9130941						
ANR	9131186	Symbol	* op2		9130941						
ANR	9131187	Symbol	packed		9130941						
ANR	9131188	Symbol	op -> value . intval		9130941						
ANR	9131189	Symbol	r_type		9130941						
ANR	9131190	Function	zputinterval	352:0:10070:11682							
ANR	9131191	FunctionDef	zputinterval (i_ctx_t * i_ctx_p)		9131190	0					
ANR	9131192	CompoundStatement		354:0:10112:11682	9131190	0					
ANR	9131193	IdentifierDeclStatement	os_ptr op = osp ;	355:4:10118:10133	9131190	0	True				
ANR	9131194	IdentifierDecl	op = osp		9131190	0					
ANR	9131195	IdentifierDeclType	os_ptr		9131190	0					
ANR	9131196	Identifier	op		9131190	1					
ANR	9131197	AssignmentExpression	op = osp		9131190	2		=			
ANR	9131198	Identifier	osp		9131190	0					
ANR	9131199	Identifier	osp		9131190	1					
ANR	9131200	IdentifierDeclStatement	os_ptr opindex = op - 1 ;	356:4:10139:10162	9131190	1	True				
ANR	9131201	IdentifierDecl	opindex = op - 1		9131190	0					
ANR	9131202	IdentifierDeclType	os_ptr		9131190	0					
ANR	9131203	Identifier	opindex		9131190	1					
ANR	9131204	AssignmentExpression	opindex = op - 1		9131190	2		=			
ANR	9131205	Identifier	opindex		9131190	0					
ANR	9131206	AdditiveExpression	op - 1		9131190	1		-			
ANR	9131207	Identifier	op		9131190	0					
ANR	9131208	PrimaryExpression	1		9131190	1					
ANR	9131209	IdentifierDeclStatement	os_ptr opto = opindex - 1 ;	357:4:10168:10193	9131190	2	True				
ANR	9131210	IdentifierDecl	opto = opindex - 1		9131190	0					
ANR	9131211	IdentifierDeclType	os_ptr		9131190	0					
ANR	9131212	Identifier	opto		9131190	1					
ANR	9131213	AssignmentExpression	opto = opindex - 1		9131190	2		=			
ANR	9131214	Identifier	opto		9131190	0					
ANR	9131215	AdditiveExpression	opindex - 1		9131190	1		-			
ANR	9131216	Identifier	opindex		9131190	0					
ANR	9131217	PrimaryExpression	1		9131190	1					
ANR	9131218	IdentifierDeclStatement	int code ;	358:4:10199:10207	9131190	3	True				
ANR	9131219	IdentifierDecl	code		9131190	0					
ANR	9131220	IdentifierDeclType	int		9131190	0					
ANR	9131221	Identifier	code		9131190	1					
ANR	9131222	SwitchStatement	switch ( r_type ( opto ) )		9131190	4					
ANR	9131223	Condition	r_type ( opto )	360:12:10222:10233	9131190	0	True				
ANR	9131224	CallExpression	r_type ( opto )		9131190	0					
ANR	9131225	Callee	r_type		9131190	0					
ANR	9131226	Identifier	r_type		9131190	0					
ANR	9131227	ArgumentList	opto		9131190	1					
ANR	9131228	Argument	opto		9131190	0					
ANR	9131229	Identifier	opto		9131190	0					
ANR	9131230	CompoundStatement		7:26:123:123	9131190	1					
ANR	9131231	Label	default :	361:8:10246:10253	9131190	0	True				
ANR	9131232	Identifier	default		9131190	0					
ANR	9131233	ExpressionStatement	return_error ( gs_error_typecheck )	362:12:10267:10299	9131190	1	True				
ANR	9131234	CallExpression	return_error ( gs_error_typecheck )		9131190	0					
ANR	9131235	Callee	return_error		9131190	0					
ANR	9131236	Identifier	return_error		9131190	0					
ANR	9131237	ArgumentList	gs_error_typecheck		9131190	1					
ANR	9131238	Argument	gs_error_typecheck		9131190	0					
ANR	9131239	Identifier	gs_error_typecheck		9131190	0					
ANR	9131240	Label	case t__invalid :	363:8:10309:10324	9131190	2	True				
ANR	9131241	Identifier	t__invalid		9131190	0					
ANR	9131242	IfStatement	if ( r_type ( op ) != t_array && r_type ( op ) != t_string && r_type ( op ) != t__invalid )		9131190	3					
ANR	9131243	Condition	r_type ( op ) != t_array && r_type ( op ) != t_string && r_type ( op ) != t__invalid	364:16:10342:10416	9131190	0	True				
ANR	9131244	AndExpression	r_type ( op ) != t_array && r_type ( op ) != t_string && r_type ( op ) != t__invalid		9131190	0		&&			
ANR	9131245	EqualityExpression	r_type ( op ) != t_array		9131190	0		!=			
ANR	9131246	CallExpression	r_type ( op )		9131190	0					
ANR	9131247	Callee	r_type		9131190	0					
ANR	9131248	Identifier	r_type		9131190	0					
ANR	9131249	ArgumentList	op		9131190	1					
ANR	9131250	Argument	op		9131190	0					
ANR	9131251	Identifier	op		9131190	0					
ANR	9131252	Identifier	t_array		9131190	1					
ANR	9131253	AndExpression	r_type ( op ) != t_string && r_type ( op ) != t__invalid		9131190	1		&&			
ANR	9131254	EqualityExpression	r_type ( op ) != t_string		9131190	0		!=			
ANR	9131255	CallExpression	r_type ( op )		9131190	0					
ANR	9131256	Callee	r_type		9131190	0					
ANR	9131257	Identifier	r_type		9131190	0					
ANR	9131258	ArgumentList	op		9131190	1					
ANR	9131259	Argument	op		9131190	0					
ANR	9131260	Identifier	op		9131190	0					
ANR	9131261	Identifier	t_string		9131190	1					
ANR	9131262	EqualityExpression	r_type ( op ) != t__invalid		9131190	1		!=			
ANR	9131263	CallExpression	r_type ( op )		9131190	0					
ANR	9131264	Callee	r_type		9131190	0					
ANR	9131265	Identifier	r_type		9131190	0					
ANR	9131266	ArgumentList	op		9131190	1					
ANR	9131267	Argument	op		9131190	0					
ANR	9131268	Identifier	op		9131190	0					
ANR	9131269	Identifier	t__invalid		9131190	1					
ANR	9131270	ExpressionStatement	return_error ( gs_error_typecheck )	365:16:10435:10467	9131190	1	True				
ANR	9131271	CallExpression	return_error ( gs_error_typecheck )		9131190	0					
ANR	9131272	Callee	return_error		9131190	0					
ANR	9131273	Identifier	return_error		9131190	0					
ANR	9131274	ArgumentList	gs_error_typecheck		9131190	1					
ANR	9131275	Argument	gs_error_typecheck		9131190	0					
ANR	9131276	Identifier	gs_error_typecheck		9131190	0					
ANR	9131277	ElseStatement	else		9131190	0					
ANR	9131278	ExpressionStatement	return_error ( gs_error_stackunderflow )	367:16:10527:10564	9131190	0	True				
ANR	9131279	CallExpression	return_error ( gs_error_stackunderflow )		9131190	0					
ANR	9131280	Callee	return_error		9131190	0					
ANR	9131281	Identifier	return_error		9131190	0					
ANR	9131282	ArgumentList	gs_error_stackunderflow		9131190	1					
ANR	9131283	Argument	gs_error_stackunderflow		9131190	0					
ANR	9131284	Identifier	gs_error_stackunderflow		9131190	0					
ANR	9131285	Label	case t_mixedarray :	368:8:10574:10591	9131190	4	True				
ANR	9131286	Identifier	t_mixedarray		9131190	0					
ANR	9131287	Label	case t_shortarray :	369:8:10601:10618	9131190	5	True				
ANR	9131288	Identifier	t_shortarray		9131190	0					
ANR	9131289	ExpressionStatement	return_error ( gs_error_invalidaccess )	370:12:10632:10668	9131190	6	True				
ANR	9131290	CallExpression	return_error ( gs_error_invalidaccess )		9131190	0					
ANR	9131291	Callee	return_error		9131190	0					
ANR	9131292	Identifier	return_error		9131190	0					
ANR	9131293	ArgumentList	gs_error_invalidaccess		9131190	1					
ANR	9131294	Argument	gs_error_invalidaccess		9131190	0					
ANR	9131295	Identifier	gs_error_invalidaccess		9131190	0					
ANR	9131296	Label	case t_array :	371:8:10678:10690	9131190	7	True				
ANR	9131297	Identifier	t_array		9131190	0					
ANR	9131298	Label	case t_string :	372:8:10700:10713	9131190	8	True				
ANR	9131299	Identifier	t_string		9131190	0					
ANR	9131300	ExpressionStatement	check_write ( * opto )	373:12:10727:10745	9131190	9	True				
ANR	9131301	CallExpression	check_write ( * opto )		9131190	0					
ANR	9131302	Callee	check_write		9131190	0					
ANR	9131303	Identifier	check_write		9131190	0					
ANR	9131304	ArgumentList	* opto		9131190	1					
ANR	9131305	Argument	* opto		9131190	0					
ANR	9131306	UnaryOperationExpression	* opto		9131190	0					
ANR	9131307	UnaryOperator	*		9131190	0					
ANR	9131308	Identifier	opto		9131190	1					
ANR	9131309	ExpressionStatement	"check_int_leu ( * opindex , r_size ( opto ) )"	374:12:10759:10796	9131190	10	True				
ANR	9131310	CallExpression	"check_int_leu ( * opindex , r_size ( opto ) )"		9131190	0					
ANR	9131311	Callee	check_int_leu		9131190	0					
ANR	9131312	Identifier	check_int_leu		9131190	0					
ANR	9131313	ArgumentList	* opindex		9131190	1					
ANR	9131314	Argument	* opindex		9131190	0					
ANR	9131315	UnaryOperationExpression	* opindex		9131190	0					
ANR	9131316	UnaryOperator	*		9131190	0					
ANR	9131317	Identifier	opindex		9131190	1					
ANR	9131318	Argument	r_size ( opto )		9131190	1					
ANR	9131319	CallExpression	r_size ( opto )		9131190	0					
ANR	9131320	Callee	r_size		9131190	0					
ANR	9131321	Identifier	r_size		9131190	0					
ANR	9131322	ArgumentList	opto		9131190	1					
ANR	9131323	Argument	opto		9131190	0					
ANR	9131324	Identifier	opto		9131190	0					
ANR	9131325	ExpressionStatement	"code = copy_interval ( i_ctx_p , opto , ( uint ) ( opindex -> value . intval ) , op , ""putinterval"" )"	375:12:10810:10928	9131190	11	True				
ANR	9131326	AssignmentExpression	"code = copy_interval ( i_ctx_p , opto , ( uint ) ( opindex -> value . intval ) , op , ""putinterval"" )"		9131190	0		=			
ANR	9131327	Identifier	code		9131190	0					
ANR	9131328	CallExpression	"copy_interval ( i_ctx_p , opto , ( uint ) ( opindex -> value . intval ) , op , ""putinterval"" )"		9131190	1					
ANR	9131329	Callee	copy_interval		9131190	0					
ANR	9131330	Identifier	copy_interval		9131190	0					
ANR	9131331	ArgumentList	i_ctx_p		9131190	1					
ANR	9131332	Argument	i_ctx_p		9131190	0					
ANR	9131333	Identifier	i_ctx_p		9131190	0					
ANR	9131334	Argument	opto		9131190	1					
ANR	9131335	Identifier	opto		9131190	0					
ANR	9131336	Argument	( uint ) ( opindex -> value . intval )		9131190	2					
ANR	9131337	CastExpression	( uint ) ( opindex -> value . intval )		9131190	0					
ANR	9131338	CastTarget	uint		9131190	0					
ANR	9131339	MemberAccess	opindex -> value . intval		9131190	1					
ANR	9131340	PtrMemberAccess	opindex -> value		9131190	0					
ANR	9131341	Identifier	opindex		9131190	0					
ANR	9131342	Identifier	value		9131190	1					
ANR	9131343	Identifier	intval		9131190	1					
ANR	9131344	Argument	op		9131190	3					
ANR	9131345	Identifier	op		9131190	0					
ANR	9131346	Argument	"""putinterval"""		9131190	4					
ANR	9131347	PrimaryExpression	"""putinterval"""		9131190	0					
ANR	9131348	BreakStatement	break ;	377:12:10942:10947	9131190	12	True				
ANR	9131349	Label	case t_astruct :	378:8:10957:10971	9131190	13	True				
ANR	9131350	Identifier	t_astruct		9131190	0					
ANR	9131351	CompoundStatement		26:12:874:898	9131190	14					
ANR	9131352	IdentifierDeclStatement	"uint dsize , ssize , index ;"	379:12:10987:11011	9131190	0	True				
ANR	9131353	IdentifierDecl	dsize		9131190	0					
ANR	9131354	IdentifierDeclType	uint		9131190	0					
ANR	9131355	Identifier	dsize		9131190	1					
ANR	9131356	IdentifierDecl	ssize		9131190	1					
ANR	9131357	IdentifierDeclType	uint		9131190	0					
ANR	9131358	Identifier	ssize		9131190	1					
ANR	9131359	IdentifierDecl	index		9131190	2					
ANR	9131360	IdentifierDeclType	uint		9131190	0					
ANR	9131361	Identifier	index		9131190	1					
ANR	9131362	ExpressionStatement	check_write ( * opto )	381:12:11026:11044	9131190	1	True				
ANR	9131363	CallExpression	check_write ( * opto )		9131190	0					
ANR	9131364	Callee	check_write		9131190	0					
ANR	9131365	Identifier	check_write		9131190	0					
ANR	9131366	ArgumentList	* opto		9131190	1					
ANR	9131367	Argument	* opto		9131190	0					
ANR	9131368	UnaryOperationExpression	* opto		9131190	0					
ANR	9131369	UnaryOperator	*		9131190	0					
ANR	9131370	Identifier	opto		9131190	1					
ANR	9131371	IfStatement	"if ( gs_object_type ( imemory , opto -> value . pstruct ) != & st_bytes )"		9131190	2					
ANR	9131372	Condition	"gs_object_type ( imemory , opto -> value . pstruct ) != & st_bytes"	382:16:11062:11118	9131190	0	True				
ANR	9131373	EqualityExpression	"gs_object_type ( imemory , opto -> value . pstruct ) != & st_bytes"		9131190	0		!=			
ANR	9131374	CallExpression	"gs_object_type ( imemory , opto -> value . pstruct )"		9131190	0					
ANR	9131375	Callee	gs_object_type		9131190	0					
ANR	9131376	Identifier	gs_object_type		9131190	0					
ANR	9131377	ArgumentList	imemory		9131190	1					
ANR	9131378	Argument	imemory		9131190	0					
ANR	9131379	Identifier	imemory		9131190	0					
ANR	9131380	Argument	opto -> value . pstruct		9131190	1					
ANR	9131381	MemberAccess	opto -> value . pstruct		9131190	0					
ANR	9131382	PtrMemberAccess	opto -> value		9131190	0					
ANR	9131383	Identifier	opto		9131190	0					
ANR	9131384	Identifier	value		9131190	1					
ANR	9131385	Identifier	pstruct		9131190	1					
ANR	9131386	UnaryOperationExpression	& st_bytes		9131190	1					
ANR	9131387	UnaryOperator	&		9131190	0					
ANR	9131388	Identifier	st_bytes		9131190	1					
ANR	9131389	ExpressionStatement	return_error ( gs_error_typecheck )	383:16:11137:11169	9131190	1	True				
ANR	9131390	CallExpression	return_error ( gs_error_typecheck )		9131190	0					
ANR	9131391	Callee	return_error		9131190	0					
ANR	9131392	Identifier	return_error		9131190	0					
ANR	9131393	ArgumentList	gs_error_typecheck		9131190	1					
ANR	9131394	Argument	gs_error_typecheck		9131190	0					
ANR	9131395	Identifier	gs_error_typecheck		9131190	0					
ANR	9131396	ExpressionStatement	"dsize = gs_object_size ( imemory , opto -> value . pstruct )"	384:12:11183:11235	9131190	3	True				
ANR	9131397	AssignmentExpression	"dsize = gs_object_size ( imemory , opto -> value . pstruct )"		9131190	0		=			
ANR	9131398	Identifier	dsize		9131190	0					
ANR	9131399	CallExpression	"gs_object_size ( imemory , opto -> value . pstruct )"		9131190	1					
ANR	9131400	Callee	gs_object_size		9131190	0					
ANR	9131401	Identifier	gs_object_size		9131190	0					
ANR	9131402	ArgumentList	imemory		9131190	1					
ANR	9131403	Argument	imemory		9131190	0					
ANR	9131404	Identifier	imemory		9131190	0					
ANR	9131405	Argument	opto -> value . pstruct		9131190	1					
ANR	9131406	MemberAccess	opto -> value . pstruct		9131190	0					
ANR	9131407	PtrMemberAccess	opto -> value		9131190	0					
ANR	9131408	Identifier	opto		9131190	0					
ANR	9131409	Identifier	value		9131190	1					
ANR	9131410	Identifier	pstruct		9131190	1					
ANR	9131411	ExpressionStatement	"check_int_leu ( * opindex , dsize )"	385:12:11249:11279	9131190	4	True				
ANR	9131412	CallExpression	"check_int_leu ( * opindex , dsize )"		9131190	0					
ANR	9131413	Callee	check_int_leu		9131190	0					
ANR	9131414	Identifier	check_int_leu		9131190	0					
ANR	9131415	ArgumentList	* opindex		9131190	1					
ANR	9131416	Argument	* opindex		9131190	0					
ANR	9131417	UnaryOperationExpression	* opindex		9131190	0					
ANR	9131418	UnaryOperator	*		9131190	0					
ANR	9131419	Identifier	opindex		9131190	1					
ANR	9131420	Argument	dsize		9131190	1					
ANR	9131421	Identifier	dsize		9131190	0					
ANR	9131422	ExpressionStatement	index = ( uint ) opindex -> value . intval	386:12:11293:11328	9131190	5	True				
ANR	9131423	AssignmentExpression	index = ( uint ) opindex -> value . intval		9131190	0		=			
ANR	9131424	Identifier	index		9131190	0					
ANR	9131425	CastExpression	( uint ) opindex -> value . intval		9131190	1					
ANR	9131426	CastTarget	uint		9131190	0					
ANR	9131427	MemberAccess	opindex -> value . intval		9131190	1					
ANR	9131428	PtrMemberAccess	opindex -> value		9131190	0					
ANR	9131429	Identifier	opindex		9131190	0					
ANR	9131430	Identifier	value		9131190	1					
ANR	9131431	Identifier	intval		9131190	1					
ANR	9131432	ExpressionStatement	"check_read_type ( * op , t_string )"	387:12:11342:11372	9131190	6	True				
ANR	9131433	CallExpression	"check_read_type ( * op , t_string )"		9131190	0					
ANR	9131434	Callee	check_read_type		9131190	0					
ANR	9131435	Identifier	check_read_type		9131190	0					
ANR	9131436	ArgumentList	* op		9131190	1					
ANR	9131437	Argument	* op		9131190	0					
ANR	9131438	UnaryOperationExpression	* op		9131190	0					
ANR	9131439	UnaryOperator	*		9131190	0					
ANR	9131440	Identifier	op		9131190	1					
ANR	9131441	Argument	t_string		9131190	1					
ANR	9131442	Identifier	t_string		9131190	0					
ANR	9131443	ExpressionStatement	ssize = r_size ( op )	388:12:11386:11404	9131190	7	True				
ANR	9131444	AssignmentExpression	ssize = r_size ( op )		9131190	0		=			
ANR	9131445	Identifier	ssize		9131190	0					
ANR	9131446	CallExpression	r_size ( op )		9131190	1					
ANR	9131447	Callee	r_size		9131190	0					
ANR	9131448	Identifier	r_size		9131190	0					
ANR	9131449	ArgumentList	op		9131190	1					
ANR	9131450	Argument	op		9131190	0					
ANR	9131451	Identifier	op		9131190	0					
ANR	9131452	IfStatement	if ( ssize > dsize - index )		9131190	8					
ANR	9131453	Condition	ssize > dsize - index	389:16:11422:11442	9131190	0	True				
ANR	9131454	RelationalExpression	ssize > dsize - index		9131190	0		>			
ANR	9131455	Identifier	ssize		9131190	0					
ANR	9131456	AdditiveExpression	dsize - index		9131190	1		-			
ANR	9131457	Identifier	dsize		9131190	0					
ANR	9131458	Identifier	index		9131190	1					
ANR	9131459	ExpressionStatement	return_error ( gs_error_rangecheck )	390:16:11461:11494	9131190	1	True				
ANR	9131460	CallExpression	return_error ( gs_error_rangecheck )		9131190	0					
ANR	9131461	Callee	return_error		9131190	0					
ANR	9131462	Identifier	return_error		9131190	0					
ANR	9131463	ArgumentList	gs_error_rangecheck		9131190	1					
ANR	9131464	Argument	gs_error_rangecheck		9131190	0					
ANR	9131465	Identifier	gs_error_rangecheck		9131190	0					
ANR	9131466	ExpressionStatement	"memcpy ( r_ptr ( opto , byte ) + index , op -> value . const_bytes , ssize )"	391:12:11508:11571	9131190	9	True				
ANR	9131467	CallExpression	"memcpy ( r_ptr ( opto , byte ) + index , op -> value . const_bytes , ssize )"		9131190	0					
ANR	9131468	Callee	memcpy		9131190	0					
ANR	9131469	Identifier	memcpy		9131190	0					
ANR	9131470	ArgumentList	"r_ptr ( opto , byte ) + index"		9131190	1					
ANR	9131471	Argument	"r_ptr ( opto , byte ) + index"		9131190	0					
ANR	9131472	AdditiveExpression	"r_ptr ( opto , byte ) + index"		9131190	0		+			
ANR	9131473	CallExpression	"r_ptr ( opto , byte )"		9131190	0					
ANR	9131474	Callee	r_ptr		9131190	0					
ANR	9131475	Identifier	r_ptr		9131190	0					
ANR	9131476	ArgumentList	opto		9131190	1					
ANR	9131477	Argument	opto		9131190	0					
ANR	9131478	Identifier	opto		9131190	0					
ANR	9131479	Argument	byte		9131190	1					
ANR	9131480	Identifier	byte		9131190	0					
ANR	9131481	Identifier	index		9131190	1					
ANR	9131482	Argument	op -> value . const_bytes		9131190	1					
ANR	9131483	MemberAccess	op -> value . const_bytes		9131190	0					
ANR	9131484	PtrMemberAccess	op -> value		9131190	0					
ANR	9131485	Identifier	op		9131190	0					
ANR	9131486	Identifier	value		9131190	1					
ANR	9131487	Identifier	const_bytes		9131190	1					
ANR	9131488	Argument	ssize		9131190	2					
ANR	9131489	Identifier	ssize		9131190	0					
ANR	9131490	ExpressionStatement	code = 0	392:12:11585:11593	9131190	10	True				
ANR	9131491	AssignmentExpression	code = 0		9131190	0		=			
ANR	9131492	Identifier	code		9131190	0					
ANR	9131493	PrimaryExpression	0		9131190	1					
ANR	9131494	BreakStatement	break ;	393:12:11607:11612	9131190	11	True				
ANR	9131495	IfStatement	if ( code >= 0 )		9131190	5					
ANR	9131496	Condition	code >= 0	396:8:11638:11646	9131190	0	True				
ANR	9131497	RelationalExpression	code >= 0		9131190	0		>=			
ANR	9131498	Identifier	code		9131190	0					
ANR	9131499	PrimaryExpression	0		9131190	1					
ANR	9131500	ExpressionStatement	pop ( 3 )	397:8:11657:11663	9131190	1	True				
ANR	9131501	CallExpression	pop ( 3 )		9131190	0					
ANR	9131502	Callee	pop		9131190	0					
ANR	9131503	Identifier	pop		9131190	0					
ANR	9131504	ArgumentList	3		9131190	1					
ANR	9131505	Argument	3		9131190	0					
ANR	9131506	PrimaryExpression	3		9131190	0					
ANR	9131507	ReturnStatement	return code ;	398:4:11669:11680	9131190	6	True				
ANR	9131508	Identifier	code		9131190	0					
ANR	9131509	ReturnType	static int		9131190	1					
ANR	9131510	Identifier	zputinterval		9131190	2					
ANR	9131511	ParameterList	i_ctx_t * i_ctx_p		9131190	3					
ANR	9131512	Parameter	i_ctx_t * i_ctx_p	353:13:10094:10109	9131190	0	True				
ANR	9131513	ParameterType	i_ctx_t *		9131190	0					
ANR	9131514	Identifier	i_ctx_p		9131190	1					
ANR	9131515	CFGEntryNode	ENTRY		9131190		True				
ANR	9131516	CFGExitNode	EXIT		9131190		True				
ANR	9131517	Symbol	code		9131190						
ANR	9131518	Symbol	gs_object_type		9131190						
ANR	9131519	Symbol	* op		9131190						
ANR	9131520	Symbol	gs_error_rangecheck		9131190						
ANR	9131521	Symbol	opindex -> value		9131190						
ANR	9131522	Symbol	osp		9131190						
ANR	9131523	Symbol	gs_object_size		9131190						
ANR	9131524	Symbol	gs_error_typecheck		9131190						
ANR	9131525	Symbol	dsize		9131190						
ANR	9131526	Symbol	r_ptr		9131190						
ANR	9131527	Symbol	copy_interval		9131190						
ANR	9131528	Symbol	* opindex		9131190						
ANR	9131529	Symbol	op -> value		9131190						
ANR	9131530	Symbol	r_size		9131190						
ANR	9131531	Symbol	gs_error_invalidaccess		9131190						
ANR	9131532	Symbol	imemory		9131190						
ANR	9131533	Symbol	r_type		9131190						
ANR	9131534	Symbol	opindex -> value . intval		9131190						
ANR	9131535	Symbol	op		9131190						
ANR	9131536	Symbol	opto -> value . pstruct		9131190						
ANR	9131537	Symbol	byte		9131190						
ANR	9131538	Symbol	opto		9131190						
ANR	9131539	Symbol	index		9131190						
ANR	9131540	Symbol	opto -> value		9131190						
ANR	9131541	Symbol	t__invalid		9131190						
ANR	9131542	Symbol	& st_bytes		9131190						
ANR	9131543	Symbol	* opto		9131190						
ANR	9131544	Symbol	t_string		9131190						
ANR	9131545	Symbol	op -> value . const_bytes		9131190						
ANR	9131546	Symbol	t_array		9131190						
ANR	9131547	Symbol	gs_error_stackunderflow		9131190						
ANR	9131548	Symbol	i_ctx_p		9131190						
ANR	9131549	Symbol	opindex		9131190						
ANR	9131550	Symbol	ssize		9131190						
ANR	9131551	DeclStmt									
ANR	9131552	Decl							int	int ( i_ctx_t * )	array_continue
ANR	9131553	Decl							int	int ( i_ctx_t * )	dict_continue
ANR	9131554	Decl							int	int ( i_ctx_t * )	string_continue
ANR	9131555	Decl							int	int ( i_ctx_t * )	packedarray_continue
ANR	9131556	DeclStmt									
ANR	9131557	Decl							int	int ( i_ctx_t * )	forall_cleanup
ANR	9131558	Function	zforall	409:0:11966:13218							
ANR	9131559	FunctionDef	zforall (i_ctx_t * i_ctx_p)		9131558	0					
ANR	9131560	CompoundStatement		411:0:12003:13218	9131558	0					
ANR	9131561	IdentifierDeclStatement	os_ptr op = osp ;	412:4:12009:12024	9131558	0	True				
ANR	9131562	IdentifierDecl	op = osp		9131558	0					
ANR	9131563	IdentifierDeclType	os_ptr		9131558	0					
ANR	9131564	Identifier	op		9131558	1					
ANR	9131565	AssignmentExpression	op = osp		9131558	2		=			
ANR	9131566	Identifier	osp		9131558	0					
ANR	9131567	Identifier	osp		9131558	1					
ANR	9131568	IdentifierDeclStatement	os_ptr obj = op - 1 ;	413:4:12030:12049	9131558	1	True				
ANR	9131569	IdentifierDecl	obj = op - 1		9131558	0					
ANR	9131570	IdentifierDeclType	os_ptr		9131558	0					
ANR	9131571	Identifier	obj		9131558	1					
ANR	9131572	AssignmentExpression	obj = op - 1		9131558	2		=			
ANR	9131573	Identifier	obj		9131558	0					
ANR	9131574	AdditiveExpression	op - 1		9131558	1		-			
ANR	9131575	Identifier	op		9131558	0					
ANR	9131576	PrimaryExpression	1		9131558	1					
ANR	9131577	IdentifierDeclStatement	es_ptr ep = esp ;	414:4:12055:12070	9131558	2	True				
ANR	9131578	IdentifierDecl	ep = esp		9131558	0					
ANR	9131579	IdentifierDeclType	es_ptr		9131558	0					
ANR	9131580	Identifier	ep		9131558	1					
ANR	9131581	AssignmentExpression	ep = esp		9131558	2		=			
ANR	9131582	Identifier	esp		9131558	0					
ANR	9131583	Identifier	esp		9131558	1					
ANR	9131584	IdentifierDeclStatement	es_ptr cproc = ep + 4 ;	415:4:12076:12097	9131558	3	True				
ANR	9131585	IdentifierDecl	cproc = ep + 4		9131558	0					
ANR	9131586	IdentifierDeclType	es_ptr		9131558	0					
ANR	9131587	Identifier	cproc		9131558	1					
ANR	9131588	AssignmentExpression	cproc = ep + 4		9131558	2		=			
ANR	9131589	Identifier	cproc		9131558	0					
ANR	9131590	AdditiveExpression	ep + 4		9131558	1		+			
ANR	9131591	Identifier	ep		9131558	0					
ANR	9131592	PrimaryExpression	4		9131558	1					
ANR	9131593	ExpressionStatement	check_estack ( 6 )	417:4:12104:12119	9131558	4	True				
ANR	9131594	CallExpression	check_estack ( 6 )		9131558	0					
ANR	9131595	Callee	check_estack		9131558	0					
ANR	9131596	Identifier	check_estack		9131558	0					
ANR	9131597	ArgumentList	6		9131558	1					
ANR	9131598	Argument	6		9131558	0					
ANR	9131599	PrimaryExpression	6		9131558	0					
ANR	9131600	ExpressionStatement	check_proc ( * op )	418:4:12125:12140	9131558	5	True				
ANR	9131601	CallExpression	check_proc ( * op )		9131558	0					
ANR	9131602	Callee	check_proc		9131558	0					
ANR	9131603	Identifier	check_proc		9131558	0					
ANR	9131604	ArgumentList	* op		9131558	1					
ANR	9131605	Argument	* op		9131558	0					
ANR	9131606	UnaryOperationExpression	* op		9131558	0					
ANR	9131607	UnaryOperator	*		9131558	0					
ANR	9131608	Identifier	op		9131558	1					
ANR	9131609	SwitchStatement	switch ( r_type ( obj ) )		9131558	6					
ANR	9131610	Condition	r_type ( obj )	419:12:12154:12164	9131558	0	True				
ANR	9131611	CallExpression	r_type ( obj )		9131558	0					
ANR	9131612	Callee	r_type		9131558	0					
ANR	9131613	Identifier	r_type		9131558	0					
ANR	9131614	ArgumentList	obj		9131558	1					
ANR	9131615	Argument	obj		9131558	0					
ANR	9131616	Identifier	obj		9131558	0					
ANR	9131617	CompoundStatement		9:25:163:163	9131558	1					
ANR	9131618	Label	default :	420:8:12177:12184	9131558	0	True				
ANR	9131619	Identifier	default		9131558	0					
ANR	9131620	ExpressionStatement	return_op_typecheck ( obj )	421:12:12198:12222	9131558	1	True				
ANR	9131621	CallExpression	return_op_typecheck ( obj )		9131558	0					
ANR	9131622	Callee	return_op_typecheck		9131558	0					
ANR	9131623	Identifier	return_op_typecheck		9131558	0					
ANR	9131624	ArgumentList	obj		9131558	1					
ANR	9131625	Argument	obj		9131558	0					
ANR	9131626	Identifier	obj		9131558	0					
ANR	9131627	Label	case t_array :	422:8:12232:12244	9131558	2	True				
ANR	9131628	Identifier	t_array		9131558	0					
ANR	9131629	ExpressionStatement	check_read ( * obj )	423:12:12258:12274	9131558	3	True				
ANR	9131630	CallExpression	check_read ( * obj )		9131558	0					
ANR	9131631	Callee	check_read		9131558	0					
ANR	9131632	Identifier	check_read		9131558	0					
ANR	9131633	ArgumentList	* obj		9131558	1					
ANR	9131634	Argument	* obj		9131558	0					
ANR	9131635	UnaryOperationExpression	* obj		9131558	0					
ANR	9131636	UnaryOperator	*		9131558	0					
ANR	9131637	Identifier	obj		9131558	1					
ANR	9131638	ExpressionStatement	"make_op_estack ( cproc , array_continue )"	424:12:12288:12325	9131558	4	True				
ANR	9131639	CallExpression	"make_op_estack ( cproc , array_continue )"		9131558	0					
ANR	9131640	Callee	make_op_estack		9131558	0					
ANR	9131641	Identifier	make_op_estack		9131558	0					
ANR	9131642	ArgumentList	cproc		9131558	1					
ANR	9131643	Argument	cproc		9131558	0					
ANR	9131644	Identifier	cproc		9131558	0					
ANR	9131645	Argument	array_continue		9131558	1					
ANR	9131646	Identifier	array_continue		9131558	0					
ANR	9131647	BreakStatement	break ;	425:12:12339:12344	9131558	5	True				
ANR	9131648	Label	case t_dictionary :	426:8:12354:12371	9131558	6	True				
ANR	9131649	Identifier	t_dictionary		9131558	0					
ANR	9131650	ExpressionStatement	check_dict_read ( * obj )	427:12:12385:12406	9131558	7	True				
ANR	9131651	CallExpression	check_dict_read ( * obj )		9131558	0					
ANR	9131652	Callee	check_dict_read		9131558	0					
ANR	9131653	Identifier	check_dict_read		9131558	0					
ANR	9131654	ArgumentList	* obj		9131558	1					
ANR	9131655	Argument	* obj		9131558	0					
ANR	9131656	UnaryOperationExpression	* obj		9131558	0					
ANR	9131657	UnaryOperator	*		9131558	0					
ANR	9131658	Identifier	obj		9131558	1					
ANR	9131659	ExpressionStatement	"make_int ( cproc , dict_first ( obj ) )"	428:12:12420:12452	9131558	8	True				
ANR	9131660	CallExpression	"make_int ( cproc , dict_first ( obj ) )"		9131558	0					
ANR	9131661	Callee	make_int		9131558	0					
ANR	9131662	Identifier	make_int		9131558	0					
ANR	9131663	ArgumentList	cproc		9131558	1					
ANR	9131664	Argument	cproc		9131558	0					
ANR	9131665	Identifier	cproc		9131558	0					
ANR	9131666	Argument	dict_first ( obj )		9131558	1					
ANR	9131667	CallExpression	dict_first ( obj )		9131558	0					
ANR	9131668	Callee	dict_first		9131558	0					
ANR	9131669	Identifier	dict_first		9131558	0					
ANR	9131670	ArgumentList	obj		9131558	1					
ANR	9131671	Argument	obj		9131558	0					
ANR	9131672	Identifier	obj		9131558	0					
ANR	9131673	ExpressionStatement	++ cproc	429:12:12466:12473	9131558	9	True				
ANR	9131674	UnaryExpression	++ cproc		9131558	0					
ANR	9131675	IncDec	++		9131558	0					
ANR	9131676	Identifier	cproc		9131558	1					
ANR	9131677	ExpressionStatement	"make_op_estack ( cproc , dict_continue )"	430:12:12487:12523	9131558	10	True				
ANR	9131678	CallExpression	"make_op_estack ( cproc , dict_continue )"		9131558	0					
ANR	9131679	Callee	make_op_estack		9131558	0					
ANR	9131680	Identifier	make_op_estack		9131558	0					
ANR	9131681	ArgumentList	cproc		9131558	1					
ANR	9131682	Argument	cproc		9131558	0					
ANR	9131683	Identifier	cproc		9131558	0					
ANR	9131684	Argument	dict_continue		9131558	1					
ANR	9131685	Identifier	dict_continue		9131558	0					
ANR	9131686	BreakStatement	break ;	431:12:12537:12542	9131558	11	True				
ANR	9131687	Label	case t_string :	432:8:12552:12565	9131558	12	True				
ANR	9131688	Identifier	t_string		9131558	0					
ANR	9131689	ExpressionStatement	check_read ( * obj )	433:12:12579:12595	9131558	13	True				
ANR	9131690	CallExpression	check_read ( * obj )		9131558	0					
ANR	9131691	Callee	check_read		9131558	0					
ANR	9131692	Identifier	check_read		9131558	0					
ANR	9131693	ArgumentList	* obj		9131558	1					
ANR	9131694	Argument	* obj		9131558	0					
ANR	9131695	UnaryOperationExpression	* obj		9131558	0					
ANR	9131696	UnaryOperator	*		9131558	0					
ANR	9131697	Identifier	obj		9131558	1					
ANR	9131698	ExpressionStatement	"make_op_estack ( cproc , string_continue )"	434:12:12609:12647	9131558	14	True				
ANR	9131699	CallExpression	"make_op_estack ( cproc , string_continue )"		9131558	0					
ANR	9131700	Callee	make_op_estack		9131558	0					
ANR	9131701	Identifier	make_op_estack		9131558	0					
ANR	9131702	ArgumentList	cproc		9131558	1					
ANR	9131703	Argument	cproc		9131558	0					
ANR	9131704	Identifier	cproc		9131558	0					
ANR	9131705	Argument	string_continue		9131558	1					
ANR	9131706	Identifier	string_continue		9131558	0					
ANR	9131707	BreakStatement	break ;	435:12:12661:12666	9131558	15	True				
ANR	9131708	Label	case t_mixedarray :	436:8:12676:12693	9131558	16	True				
ANR	9131709	Identifier	t_mixedarray		9131558	0					
ANR	9131710	Label	case t_shortarray :	437:8:12703:12720	9131558	17	True				
ANR	9131711	Identifier	t_shortarray		9131558	0					
ANR	9131712	ExpressionStatement	check_read ( * obj )	438:12:12734:12750	9131558	18	True				
ANR	9131713	CallExpression	check_read ( * obj )		9131558	0					
ANR	9131714	Callee	check_read		9131558	0					
ANR	9131715	Identifier	check_read		9131558	0					
ANR	9131716	ArgumentList	* obj		9131558	1					
ANR	9131717	Argument	* obj		9131558	0					
ANR	9131718	UnaryOperationExpression	* obj		9131558	0					
ANR	9131719	UnaryOperator	*		9131558	0					
ANR	9131720	Identifier	obj		9131558	1					
ANR	9131721	ExpressionStatement	"make_op_estack ( cproc , packedarray_continue )"	439:12:12764:12807	9131558	19	True				
ANR	9131722	CallExpression	"make_op_estack ( cproc , packedarray_continue )"		9131558	0					
ANR	9131723	Callee	make_op_estack		9131558	0					
ANR	9131724	Identifier	make_op_estack		9131558	0					
ANR	9131725	ArgumentList	cproc		9131558	1					
ANR	9131726	Argument	cproc		9131558	0					
ANR	9131727	Identifier	cproc		9131558	0					
ANR	9131728	Argument	packedarray_continue		9131558	1					
ANR	9131729	Identifier	packedarray_continue		9131558	0					
ANR	9131730	BreakStatement	break ;	440:12:12821:12826	9131558	20	True				
ANR	9131731	ExpressionStatement	"make_mark_estack ( ep + 1 , es_for , forall_cleanup )"	450:4:13057:13105	9131558	7	True				
ANR	9131732	CallExpression	"make_mark_estack ( ep + 1 , es_for , forall_cleanup )"		9131558	0					
ANR	9131733	Callee	make_mark_estack		9131558	0					
ANR	9131734	Identifier	make_mark_estack		9131558	0					
ANR	9131735	ArgumentList	ep + 1		9131558	1					
ANR	9131736	Argument	ep + 1		9131558	0					
ANR	9131737	AdditiveExpression	ep + 1		9131558	0		+			
ANR	9131738	Identifier	ep		9131558	0					
ANR	9131739	PrimaryExpression	1		9131558	1					
ANR	9131740	Argument	es_for		9131558	1					
ANR	9131741	Identifier	es_for		9131558	0					
ANR	9131742	Argument	forall_cleanup		9131558	2					
ANR	9131743	Identifier	forall_cleanup		9131558	0					
ANR	9131744	ExpressionStatement	ep [ 2 ] = * obj	451:4:13111:13123	9131558	8	True				
ANR	9131745	AssignmentExpression	ep [ 2 ] = * obj		9131558	0		=			
ANR	9131746	ArrayIndexing	ep [ 2 ]		9131558	0					
ANR	9131747	Identifier	ep		9131558	0					
ANR	9131748	PrimaryExpression	2		9131558	1					
ANR	9131749	UnaryOperationExpression	* obj		9131558	1					
ANR	9131750	UnaryOperator	*		9131558	0					
ANR	9131751	Identifier	obj		9131558	1					
ANR	9131752	ExpressionStatement	ep [ 3 ] = * op	452:4:13129:13140	9131558	9	True				
ANR	9131753	AssignmentExpression	ep [ 3 ] = * op		9131558	0		=			
ANR	9131754	ArrayIndexing	ep [ 3 ]		9131558	0					
ANR	9131755	Identifier	ep		9131558	0					
ANR	9131756	PrimaryExpression	3		9131558	1					
ANR	9131757	UnaryOperationExpression	* op		9131558	1					
ANR	9131758	UnaryOperator	*		9131558	0					
ANR	9131759	Identifier	op		9131558	1					
ANR	9131760	ExpressionStatement	esp = cproc - 1	453:4:13146:13161	9131558	10	True				
ANR	9131761	AssignmentExpression	esp = cproc - 1		9131558	0		=			
ANR	9131762	Identifier	esp		9131558	0					
ANR	9131763	AdditiveExpression	cproc - 1		9131558	1		-			
ANR	9131764	Identifier	cproc		9131558	0					
ANR	9131765	PrimaryExpression	1		9131558	1					
ANR	9131766	ExpressionStatement	pop ( 2 )	454:4:13167:13173	9131558	11	True				
ANR	9131767	CallExpression	pop ( 2 )		9131558	0					
ANR	9131768	Callee	pop		9131558	0					
ANR	9131769	Identifier	pop		9131558	0					
ANR	9131770	ArgumentList	2		9131558	1					
ANR	9131771	Argument	2		9131558	0					
ANR	9131772	PrimaryExpression	2		9131558	0					
ANR	9131773	ReturnStatement	return ( * real_opproc ( cproc ) ) ( i_ctx_p ) ;	455:4:13179:13216	9131558	12	True				
ANR	9131774	CallExpression	( * real_opproc ( cproc ) ) ( i_ctx_p )		9131558	0					
ANR	9131775	Callee	* real_opproc ( cproc )		9131558	0					
ANR	9131776	UnaryOperationExpression	* real_opproc ( cproc )		9131558	0					
ANR	9131777	UnaryOperator	*		9131558	0					
ANR	9131778	CallExpression	real_opproc ( cproc )		9131558	1					
ANR	9131779	Callee	real_opproc		9131558	0					
ANR	9131780	Identifier	real_opproc		9131558	0					
ANR	9131781	ArgumentList	cproc		9131558	1					
ANR	9131782	Argument	cproc		9131558	0					
ANR	9131783	Identifier	cproc		9131558	0					
ANR	9131784	ArgumentList	i_ctx_p		9131558	1					
ANR	9131785	Argument	i_ctx_p		9131558	0					
ANR	9131786	Identifier	i_ctx_p		9131558	0					
ANR	9131787	ReturnType	static int		9131558	1					
ANR	9131788	Identifier	zforall		9131558	2					
ANR	9131789	ParameterList	i_ctx_t * i_ctx_p		9131558	3					
ANR	9131790	Parameter	i_ctx_t * i_ctx_p	410:8:11985:12000	9131558	0	True				
ANR	9131791	ParameterType	i_ctx_t *		9131558	0					
ANR	9131792	Identifier	i_ctx_p		9131558	1					
ANR	9131793	CFGEntryNode	ENTRY		9131558		True				
ANR	9131794	CFGExitNode	EXIT		9131558		True				
ANR	9131795	Symbol	op		9131558						
ANR	9131796	Symbol	* obj		9131558						
ANR	9131797	Symbol	es_for		9131558						
ANR	9131798	Symbol	esp		9131558						
ANR	9131799	Symbol	* op		9131558						
ANR	9131800	Symbol	* real_opproc		9131558						
ANR	9131801	Symbol	dict_continue		9131558						
ANR	9131802	Symbol	ep		9131558						
ANR	9131803	Symbol	osp		9131558						
ANR	9131804	Symbol	real_opproc		9131558						
ANR	9131805	Symbol	forall_cleanup		9131558						
ANR	9131806	Symbol	* ep		9131558						
ANR	9131807	Symbol	dict_first		9131558						
ANR	9131808	Symbol	i_ctx_p		9131558						
ANR	9131809	Symbol	obj		9131558						
ANR	9131810	Symbol	string_continue		9131558						
ANR	9131811	Symbol	cproc		9131558						
ANR	9131812	Symbol	r_type		9131558						
ANR	9131813	Symbol	packedarray_continue		9131558						
ANR	9131814	Symbol	* real_opproc ( cproc )		9131558						
ANR	9131815	Symbol	array_continue		9131558						
ANR	9131816	Function	array_continue	458:0:13259:13676							
ANR	9131817	FunctionDef	array_continue (i_ctx_t * i_ctx_p)		9131816	0					
ANR	9131818	CompoundStatement		460:0:13303:13676	9131816	0					
ANR	9131819	IdentifierDeclStatement	os_ptr op = osp ;	461:4:13309:13324	9131816	0	True				
ANR	9131820	IdentifierDecl	op = osp		9131816	0					
ANR	9131821	IdentifierDeclType	os_ptr		9131816	0					
ANR	9131822	Identifier	op		9131816	1					
ANR	9131823	AssignmentExpression	op = osp		9131816	2		=			
ANR	9131824	Identifier	osp		9131816	0					
ANR	9131825	Identifier	osp		9131816	1					
ANR	9131826	IdentifierDeclStatement	es_ptr obj = esp - 1 ;	462:4:13330:13350	9131816	1	True				
ANR	9131827	IdentifierDecl	obj = esp - 1		9131816	0					
ANR	9131828	IdentifierDeclType	es_ptr		9131816	0					
ANR	9131829	Identifier	obj		9131816	1					
ANR	9131830	AssignmentExpression	obj = esp - 1		9131816	2		=			
ANR	9131831	Identifier	obj		9131816	0					
ANR	9131832	AdditiveExpression	esp - 1		9131816	1		-			
ANR	9131833	Identifier	esp		9131816	0					
ANR	9131834	PrimaryExpression	1		9131816	1					
ANR	9131835	IfStatement	if ( r_size ( obj ) )		9131816	2					
ANR	9131836	Condition	r_size ( obj )	464:8:13361:13371	9131816	0	True				
ANR	9131837	CallExpression	r_size ( obj )		9131816	0					
ANR	9131838	Callee	r_size		9131816	0					
ANR	9131839	Identifier	r_size		9131816	0					
ANR	9131840	ArgumentList	obj		9131816	1					
ANR	9131841	Argument	obj		9131816	0					
ANR	9131842	Identifier	obj		9131816	0					
ANR	9131843	CompoundStatement		5:21:70:70	9131816	1					
ANR	9131844	ExpressionStatement	push ( 1 )	465:8:13400:13407	9131816	0	True				
ANR	9131845	CallExpression	push ( 1 )		9131816	0					
ANR	9131846	Callee	push		9131816	0					
ANR	9131847	Identifier	push		9131816	0					
ANR	9131848	ArgumentList	1		9131816	1					
ANR	9131849	Argument	1		9131816	0					
ANR	9131850	PrimaryExpression	1		9131816	0					
ANR	9131851	ExpressionStatement	"r_dec_size ( obj , 1 )"	466:8:13417:13435	9131816	1	True				
ANR	9131852	CallExpression	"r_dec_size ( obj , 1 )"		9131816	0					
ANR	9131853	Callee	r_dec_size		9131816	0					
ANR	9131854	Identifier	r_dec_size		9131816	0					
ANR	9131855	ArgumentList	obj		9131816	1					
ANR	9131856	Argument	obj		9131816	0					
ANR	9131857	Identifier	obj		9131816	0					
ANR	9131858	Argument	1		9131816	1					
ANR	9131859	PrimaryExpression	1		9131816	0					
ANR	9131860	ExpressionStatement	* op = * obj -> value . refs	467:8:13445:13467	9131816	2	True				
ANR	9131861	AssignmentExpression	* op = * obj -> value . refs		9131816	0		=			
ANR	9131862	UnaryOperationExpression	* op		9131816	0					
ANR	9131863	UnaryOperator	*		9131816	0					
ANR	9131864	Identifier	op		9131816	1					
ANR	9131865	UnaryOperationExpression	* obj -> value . refs		9131816	1					
ANR	9131866	UnaryOperator	*		9131816	0					
ANR	9131867	MemberAccess	obj -> value . refs		9131816	1					
ANR	9131868	PtrMemberAccess	obj -> value		9131816	0					
ANR	9131869	Identifier	obj		9131816	0					
ANR	9131870	Identifier	value		9131816	1					
ANR	9131871	Identifier	refs		9131816	1					
ANR	9131872	ExpressionStatement	obj -> value . refs ++	468:8:13477:13494	9131816	3	True				
ANR	9131873	PostIncDecOperationExpression	obj -> value . refs ++		9131816	0					
ANR	9131874	MemberAccess	obj -> value . refs		9131816	0					
ANR	9131875	PtrMemberAccess	obj -> value		9131816	0					
ANR	9131876	Identifier	obj		9131816	0					
ANR	9131877	Identifier	value		9131816	1					
ANR	9131878	Identifier	refs		9131816	1					
ANR	9131879	IncDec	++		9131816	1					
ANR	9131880	ExpressionStatement	esp += 2	469:8:13504:13512	9131816	4	True				
ANR	9131881	AssignmentExpression	esp += 2		9131816	0		+=			
ANR	9131882	Identifier	esp		9131816	0					
ANR	9131883	PrimaryExpression	2		9131816	1					
ANR	9131884	ExpressionStatement	* esp = obj [ 1 ]	470:8:13522:13535	9131816	5	True				
ANR	9131885	AssignmentExpression	* esp = obj [ 1 ]		9131816	0		=			
ANR	9131886	UnaryOperationExpression	* esp		9131816	0					
ANR	9131887	UnaryOperator	*		9131816	0					
ANR	9131888	Identifier	esp		9131816	1					
ANR	9131889	ArrayIndexing	obj [ 1 ]		9131816	1					
ANR	9131890	Identifier	obj		9131816	0					
ANR	9131891	PrimaryExpression	1		9131816	1					
ANR	9131892	ReturnStatement	return o_push_estack ;	471:8:13545:13565	9131816	6	True				
ANR	9131893	Identifier	o_push_estack		9131816	0					
ANR	9131894	ElseStatement	else		9131816	0					
ANR	9131895	CompoundStatement		13:11:274:274	9131816	0					
ANR	9131896	ExpressionStatement	esp -= 3	473:8:13601:13609	9131816	0	True				
ANR	9131897	AssignmentExpression	esp -= 3		9131816	0		-=			
ANR	9131898	Identifier	esp		9131816	0					
ANR	9131899	PrimaryExpression	3		9131816	1					
ANR	9131900	ReturnStatement	return o_pop_estack ;	474:8:13649:13668	9131816	1	True				
ANR	9131901	Identifier	o_pop_estack		9131816	0					
ANR	9131902	ReturnType	static int		9131816	1					
ANR	9131903	Identifier	array_continue		9131816	2					
ANR	9131904	ParameterList	i_ctx_t * i_ctx_p		9131816	3					
ANR	9131905	Parameter	i_ctx_t * i_ctx_p	459:15:13285:13300	9131816	0	True				
ANR	9131906	ParameterType	i_ctx_t *		9131816	0					
ANR	9131907	Identifier	i_ctx_p		9131816	1					
ANR	9131908	CFGEntryNode	ENTRY		9131816		True				
ANR	9131909	CFGExitNode	EXIT		9131816		True				
ANR	9131910	Symbol	op		9131816						
ANR	9131911	Symbol	* obj		9131816						
ANR	9131912	Symbol	esp		9131816						
ANR	9131913	Symbol	obj -> value		9131816						
ANR	9131914	Symbol	* op		9131816						
ANR	9131915	Symbol	* * obj		9131816						
ANR	9131916	Symbol	o_pop_estack		9131816						
ANR	9131917	Symbol	osp		9131816						
ANR	9131918	Symbol	* obj -> value		9131816						
ANR	9131919	Symbol	obj -> value . refs		9131816						
ANR	9131920	Symbol	* esp		9131816						
ANR	9131921	Symbol	i_ctx_p		9131816						
ANR	9131922	Symbol	obj		9131816						
ANR	9131923	Symbol	r_size		9131816						
ANR	9131924	Symbol	* obj -> value . refs		9131816						
ANR	9131925	Symbol	o_push_estack		9131816						
ANR	9131926	Function	dict_continue	478:0:13723:14227							
ANR	9131927	FunctionDef	dict_continue (i_ctx_t * i_ctx_p)		9131926	0					
ANR	9131928	CompoundStatement		480:0:13766:14227	9131926	0					
ANR	9131929	IdentifierDeclStatement	os_ptr op = osp ;	481:4:13772:13787	9131926	0	True				
ANR	9131930	IdentifierDecl	op = osp		9131926	0					
ANR	9131931	IdentifierDeclType	os_ptr		9131926	0					
ANR	9131932	Identifier	op		9131926	1					
ANR	9131933	AssignmentExpression	op = osp		9131926	2		=			
ANR	9131934	Identifier	osp		9131926	0					
ANR	9131935	Identifier	osp		9131926	1					
ANR	9131936	IdentifierDeclStatement	es_ptr obj = esp - 2 ;	482:4:13793:13813	9131926	1	True				
ANR	9131937	IdentifierDecl	obj = esp - 2		9131926	0					
ANR	9131938	IdentifierDeclType	es_ptr		9131926	0					
ANR	9131939	Identifier	obj		9131926	1					
ANR	9131940	AssignmentExpression	obj = esp - 2		9131926	2		=			
ANR	9131941	Identifier	obj		9131926	0					
ANR	9131942	AdditiveExpression	esp - 2		9131926	1		-			
ANR	9131943	Identifier	esp		9131926	0					
ANR	9131944	PrimaryExpression	2		9131926	1					
ANR	9131945	IdentifierDeclStatement	int index = esp -> value . intval ;	483:4:13819:13848	9131926	2	True				
ANR	9131946	IdentifierDecl	index = esp -> value . intval		9131926	0					
ANR	9131947	IdentifierDeclType	int		9131926	0					
ANR	9131948	Identifier	index		9131926	1					
ANR	9131949	AssignmentExpression	index = esp -> value . intval		9131926	2		=			
ANR	9131950	Identifier	index		9131926	0					
ANR	9131951	MemberAccess	esp -> value . intval		9131926	1					
ANR	9131952	PtrMemberAccess	esp -> value		9131926	0					
ANR	9131953	Identifier	esp		9131926	0					
ANR	9131954	Identifier	value		9131926	1					
ANR	9131955	Identifier	intval		9131926	1					
ANR	9131956	ExpressionStatement	push ( 2 )	485:4:13855:13862	9131926	3	True				
ANR	9131957	CallExpression	push ( 2 )		9131926	0					
ANR	9131958	Callee	push		9131926	0					
ANR	9131959	Identifier	push		9131926	0					
ANR	9131960	ArgumentList	2		9131926	1					
ANR	9131961	Argument	2		9131926	0					
ANR	9131962	PrimaryExpression	2		9131926	0					
ANR	9131963	IfStatement	"if ( ( index = dict_next ( obj , index , op - 1 ) ) >= 0 )"		9131926	4					
ANR	9131964	Condition	"( index = dict_next ( obj , index , op - 1 ) ) >= 0"	486:8:13908:13951	9131926	0	True				
ANR	9131965	RelationalExpression	"( index = dict_next ( obj , index , op - 1 ) ) >= 0"		9131926	0		>=			
ANR	9131966	AssignmentExpression	"index = dict_next ( obj , index , op - 1 )"		9131926	0		=			
ANR	9131967	Identifier	index		9131926	0					
ANR	9131968	CallExpression	"dict_next ( obj , index , op - 1 )"		9131926	1					
ANR	9131969	Callee	dict_next		9131926	0					
ANR	9131970	Identifier	dict_next		9131926	0					
ANR	9131971	ArgumentList	obj		9131926	1					
ANR	9131972	Argument	obj		9131926	0					
ANR	9131973	Identifier	obj		9131926	0					
ANR	9131974	Argument	index		9131926	1					
ANR	9131975	Identifier	index		9131926	0					
ANR	9131976	Argument	op - 1		9131926	2					
ANR	9131977	AdditiveExpression	op - 1		9131926	0		-			
ANR	9131978	Identifier	op		9131926	0					
ANR	9131979	PrimaryExpression	1		9131926	1					
ANR	9131980	PrimaryExpression	0		9131926	1					
ANR	9131981	CompoundStatement		7:54:187:187	9131926	1					
ANR	9131982	ExpressionStatement	esp -> value . intval = index	487:8:13979:14004	9131926	0	True				
ANR	9131983	AssignmentExpression	esp -> value . intval = index		9131926	0		=			
ANR	9131984	MemberAccess	esp -> value . intval		9131926	0					
ANR	9131985	PtrMemberAccess	esp -> value		9131926	0					
ANR	9131986	Identifier	esp		9131926	0					
ANR	9131987	Identifier	value		9131926	1					
ANR	9131988	Identifier	intval		9131926	1					
ANR	9131989	Identifier	index		9131926	1					
ANR	9131990	ExpressionStatement	esp += 2	488:8:14014:14022	9131926	1	True				
ANR	9131991	AssignmentExpression	esp += 2		9131926	0		+=			
ANR	9131992	Identifier	esp		9131926	0					
ANR	9131993	PrimaryExpression	2		9131926	1					
ANR	9131994	ExpressionStatement	* esp = obj [ 1 ]	489:8:14032:14045	9131926	2	True				
ANR	9131995	AssignmentExpression	* esp = obj [ 1 ]		9131926	0		=			
ANR	9131996	UnaryOperationExpression	* esp		9131926	0					
ANR	9131997	UnaryOperator	*		9131926	0					
ANR	9131998	Identifier	esp		9131926	1					
ANR	9131999	ArrayIndexing	obj [ 1 ]		9131926	1					
ANR	9132000	Identifier	obj		9131926	0					
ANR	9132001	PrimaryExpression	1		9131926	1					
ANR	9132002	ReturnStatement	return o_push_estack ;	490:8:14055:14075	9131926	3	True				
ANR	9132003	Identifier	o_push_estack		9131926	0					
ANR	9132004	ElseStatement	else		9131926	0					
ANR	9132005	CompoundStatement		12:11:321:321	9131926	0					
ANR	9132006	ExpressionStatement	pop ( 2 )	492:8:14111:14117	9131926	0	True				
ANR	9132007	CallExpression	pop ( 2 )		9131926	0					
ANR	9132008	Callee	pop		9131926	0					
ANR	9132009	Identifier	pop		9131926	0					
ANR	9132010	ArgumentList	2		9131926	1					
ANR	9132011	Argument	2		9131926	0					
ANR	9132012	PrimaryExpression	2		9131926	0					
ANR	9132013	ExpressionStatement	esp -= 4	493:8:14145:14153	9131926	1	True				
ANR	9132014	AssignmentExpression	esp -= 4		9131926	0		-=			
ANR	9132015	Identifier	esp		9131926	0					
ANR	9132016	PrimaryExpression	4		9131926	1					
ANR	9132017	ReturnStatement	return o_pop_estack ;	494:8:14200:14219	9131926	2	True				
ANR	9132018	Identifier	o_pop_estack		9131926	0					
ANR	9132019	ReturnType	static int		9131926	1					
ANR	9132020	Identifier	dict_continue		9131926	2					
ANR	9132021	ParameterList	i_ctx_t * i_ctx_p		9131926	3					
ANR	9132022	Parameter	i_ctx_t * i_ctx_p	479:14:13748:13763	9131926	0	True				
ANR	9132023	ParameterType	i_ctx_t *		9131926	0					
ANR	9132024	Identifier	i_ctx_p		9131926	1					
ANR	9132025	CFGEntryNode	ENTRY		9131926		True				
ANR	9132026	CFGExitNode	EXIT		9131926		True				
ANR	9132027	Symbol	esp -> value		9131926						
ANR	9132028	Symbol	op		9131926						
ANR	9132029	Symbol	* obj		9131926						
ANR	9132030	Symbol	esp		9131926						
ANR	9132031	Symbol	index		9131926						
ANR	9132032	Symbol	o_pop_estack		9131926						
ANR	9132033	Symbol	osp		9131926						
ANR	9132034	Symbol	* esp		9131926						
ANR	9132035	Symbol	i_ctx_p		9131926						
ANR	9132036	Symbol	obj		9131926						
ANR	9132037	Symbol	esp -> value . intval		9131926						
ANR	9132038	Symbol	dict_next		9131926						
ANR	9132039	Symbol	o_push_estack		9131926						
ANR	9132040	Function	string_continue	498:0:14269:14697							
ANR	9132041	FunctionDef	string_continue (i_ctx_t * i_ctx_p)		9132040	0					
ANR	9132042	CompoundStatement		500:0:14314:14697	9132040	0					
ANR	9132043	IdentifierDeclStatement	os_ptr op = osp ;	501:4:14320:14335	9132040	0	True				
ANR	9132044	IdentifierDecl	op = osp		9132040	0					
ANR	9132045	IdentifierDeclType	os_ptr		9132040	0					
ANR	9132046	Identifier	op		9132040	1					
ANR	9132047	AssignmentExpression	op = osp		9132040	2		=			
ANR	9132048	Identifier	osp		9132040	0					
ANR	9132049	Identifier	osp		9132040	1					
ANR	9132050	IdentifierDeclStatement	es_ptr obj = esp - 1 ;	502:4:14341:14361	9132040	1	True				
ANR	9132051	IdentifierDecl	obj = esp - 1		9132040	0					
ANR	9132052	IdentifierDeclType	es_ptr		9132040	0					
ANR	9132053	Identifier	obj		9132040	1					
ANR	9132054	AssignmentExpression	obj = esp - 1		9132040	2		=			
ANR	9132055	Identifier	obj		9132040	0					
ANR	9132056	AdditiveExpression	esp - 1		9132040	1		-			
ANR	9132057	Identifier	esp		9132040	0					
ANR	9132058	PrimaryExpression	1		9132040	1					
ANR	9132059	IfStatement	if ( r_size ( obj ) )		9132040	2					
ANR	9132060	Condition	r_size ( obj )	504:8:14372:14382	9132040	0	True				
ANR	9132061	CallExpression	r_size ( obj )		9132040	0					
ANR	9132062	Callee	r_size		9132040	0					
ANR	9132063	Identifier	r_size		9132040	0					
ANR	9132064	ArgumentList	obj		9132040	1					
ANR	9132065	Argument	obj		9132040	0					
ANR	9132066	Identifier	obj		9132040	0					
ANR	9132067	CompoundStatement		5:21:70:70	9132040	1					
ANR	9132068	ExpressionStatement	"r_dec_size ( obj , 1 )"	505:8:14411:14429	9132040	0	True				
ANR	9132069	CallExpression	"r_dec_size ( obj , 1 )"		9132040	0					
ANR	9132070	Callee	r_dec_size		9132040	0					
ANR	9132071	Identifier	r_dec_size		9132040	0					
ANR	9132072	ArgumentList	obj		9132040	1					
ANR	9132073	Argument	obj		9132040	0					
ANR	9132074	Identifier	obj		9132040	0					
ANR	9132075	Argument	1		9132040	1					
ANR	9132076	PrimaryExpression	1		9132040	0					
ANR	9132077	ExpressionStatement	push ( 1 )	506:8:14439:14446	9132040	1	True				
ANR	9132078	CallExpression	push ( 1 )		9132040	0					
ANR	9132079	Callee	push		9132040	0					
ANR	9132080	Identifier	push		9132040	0					
ANR	9132081	ArgumentList	1		9132040	1					
ANR	9132082	Argument	1		9132040	0					
ANR	9132083	PrimaryExpression	1		9132040	0					
ANR	9132084	ExpressionStatement	"make_int ( op , * obj -> value . bytes )"	507:8:14456:14487	9132040	2	True				
ANR	9132085	CallExpression	"make_int ( op , * obj -> value . bytes )"		9132040	0					
ANR	9132086	Callee	make_int		9132040	0					
ANR	9132087	Identifier	make_int		9132040	0					
ANR	9132088	ArgumentList	op		9132040	1					
ANR	9132089	Argument	op		9132040	0					
ANR	9132090	Identifier	op		9132040	0					
ANR	9132091	Argument	* obj -> value . bytes		9132040	1					
ANR	9132092	UnaryOperationExpression	* obj -> value . bytes		9132040	0					
ANR	9132093	UnaryOperator	*		9132040	0					
ANR	9132094	MemberAccess	obj -> value . bytes		9132040	1					
ANR	9132095	PtrMemberAccess	obj -> value		9132040	0					
ANR	9132096	Identifier	obj		9132040	0					
ANR	9132097	Identifier	value		9132040	1					
ANR	9132098	Identifier	bytes		9132040	1					
ANR	9132099	ExpressionStatement	obj -> value . bytes ++	508:8:14497:14515	9132040	3	True				
ANR	9132100	PostIncDecOperationExpression	obj -> value . bytes ++		9132040	0					
ANR	9132101	MemberAccess	obj -> value . bytes		9132040	0					
ANR	9132102	PtrMemberAccess	obj -> value		9132040	0					
ANR	9132103	Identifier	obj		9132040	0					
ANR	9132104	Identifier	value		9132040	1					
ANR	9132105	Identifier	bytes		9132040	1					
ANR	9132106	IncDec	++		9132040	1					
ANR	9132107	ExpressionStatement	esp += 2	509:8:14525:14533	9132040	4	True				
ANR	9132108	AssignmentExpression	esp += 2		9132040	0		+=			
ANR	9132109	Identifier	esp		9132040	0					
ANR	9132110	PrimaryExpression	2		9132040	1					
ANR	9132111	ExpressionStatement	* esp = obj [ 1 ]	510:8:14543:14556	9132040	5	True				
ANR	9132112	AssignmentExpression	* esp = obj [ 1 ]		9132040	0		=			
ANR	9132113	UnaryOperationExpression	* esp		9132040	0					
ANR	9132114	UnaryOperator	*		9132040	0					
ANR	9132115	Identifier	esp		9132040	1					
ANR	9132116	ArrayIndexing	obj [ 1 ]		9132040	1					
ANR	9132117	Identifier	obj		9132040	0					
ANR	9132118	PrimaryExpression	1		9132040	1					
ANR	9132119	ReturnStatement	return o_push_estack ;	511:8:14566:14586	9132040	6	True				
ANR	9132120	Identifier	o_push_estack		9132040	0					
ANR	9132121	ElseStatement	else		9132040	0					
ANR	9132122	CompoundStatement		13:11:284:284	9132040	0					
ANR	9132123	ExpressionStatement	esp -= 3	513:8:14622:14630	9132040	0	True				
ANR	9132124	AssignmentExpression	esp -= 3		9132040	0		-=			
ANR	9132125	Identifier	esp		9132040	0					
ANR	9132126	PrimaryExpression	3		9132040	1					
ANR	9132127	ReturnStatement	return o_pop_estack ;	514:8:14670:14689	9132040	1	True				
ANR	9132128	Identifier	o_pop_estack		9132040	0					
ANR	9132129	ReturnType	static int		9132040	1					
ANR	9132130	Identifier	string_continue		9132040	2					
ANR	9132131	ParameterList	i_ctx_t * i_ctx_p		9132040	3					
ANR	9132132	Parameter	i_ctx_t * i_ctx_p	499:16:14296:14311	9132040	0	True				
ANR	9132133	ParameterType	i_ctx_t *		9132040	0					
ANR	9132134	Identifier	i_ctx_p		9132040	1					
ANR	9132135	CFGEntryNode	ENTRY		9132040		True				
ANR	9132136	CFGExitNode	EXIT		9132040		True				
ANR	9132137	Symbol	op		9132040						
ANR	9132138	Symbol	* obj		9132040						
ANR	9132139	Symbol	esp		9132040						
ANR	9132140	Symbol	obj -> value		9132040						
ANR	9132141	Symbol	obj -> value . bytes		9132040						
ANR	9132142	Symbol	* * obj		9132040						
ANR	9132143	Symbol	o_pop_estack		9132040						
ANR	9132144	Symbol	* obj -> value . bytes		9132040						
ANR	9132145	Symbol	osp		9132040						
ANR	9132146	Symbol	* obj -> value		9132040						
ANR	9132147	Symbol	* esp		9132040						
ANR	9132148	Symbol	i_ctx_p		9132040						
ANR	9132149	Symbol	obj		9132040						
ANR	9132150	Symbol	r_size		9132040						
ANR	9132151	Symbol	o_push_estack		9132040						
ANR	9132152	Function	packedarray_continue	518:0:14745:15254							
ANR	9132153	FunctionDef	packedarray_continue (i_ctx_t * i_ctx_p)		9132152	0					
ANR	9132154	CompoundStatement		520:0:14795:15254	9132152	0					
ANR	9132155	IdentifierDeclStatement	os_ptr op = osp ;	521:4:14801:14816	9132152	0	True				
ANR	9132156	IdentifierDecl	op = osp		9132152	0					
ANR	9132157	IdentifierDeclType	os_ptr		9132152	0					
ANR	9132158	Identifier	op		9132152	1					
ANR	9132159	AssignmentExpression	op = osp		9132152	2		=			
ANR	9132160	Identifier	osp		9132152	0					
ANR	9132161	Identifier	osp		9132152	1					
ANR	9132162	IdentifierDeclStatement	es_ptr obj = esp - 1 ;	522:4:14822:14842	9132152	1	True				
ANR	9132163	IdentifierDecl	obj = esp - 1		9132152	0					
ANR	9132164	IdentifierDeclType	es_ptr		9132152	0					
ANR	9132165	Identifier	obj		9132152	1					
ANR	9132166	AssignmentExpression	obj = esp - 1		9132152	2		=			
ANR	9132167	Identifier	obj		9132152	0					
ANR	9132168	AdditiveExpression	esp - 1		9132152	1		-			
ANR	9132169	Identifier	esp		9132152	0					
ANR	9132170	PrimaryExpression	1		9132152	1					
ANR	9132171	IfStatement	if ( r_size ( obj ) )		9132152	2					
ANR	9132172	Condition	r_size ( obj )	524:8:14853:14863	9132152	0	True				
ANR	9132173	CallExpression	r_size ( obj )		9132152	0					
ANR	9132174	Callee	r_size		9132152	0					
ANR	9132175	Identifier	r_size		9132152	0					
ANR	9132176	ArgumentList	obj		9132152	1					
ANR	9132177	Argument	obj		9132152	0					
ANR	9132178	Identifier	obj		9132152	0					
ANR	9132179	CompoundStatement		6:8:96:140	9132152	1					
ANR	9132180	IdentifierDeclStatement	const ref_packed * packed = obj -> value . packed ;	525:8:14892:14936	9132152	0	True				
ANR	9132181	IdentifierDecl	* packed = obj -> value . packed		9132152	0					
ANR	9132182	IdentifierDeclType	const ref_packed *		9132152	0					
ANR	9132183	Identifier	packed		9132152	1					
ANR	9132184	AssignmentExpression	* packed = obj -> value . packed		9132152	2		=			
ANR	9132185	Identifier	packed		9132152	0					
ANR	9132186	MemberAccess	obj -> value . packed		9132152	1					
ANR	9132187	PtrMemberAccess	obj -> value		9132152	0					
ANR	9132188	Identifier	obj		9132152	0					
ANR	9132189	Identifier	value		9132152	1					
ANR	9132190	Identifier	packed		9132152	1					
ANR	9132191	ExpressionStatement	"r_dec_size ( obj , 1 )"	527:8:14947:14965	9132152	1	True				
ANR	9132192	CallExpression	"r_dec_size ( obj , 1 )"		9132152	0					
ANR	9132193	Callee	r_dec_size		9132152	0					
ANR	9132194	Identifier	r_dec_size		9132152	0					
ANR	9132195	ArgumentList	obj		9132152	1					
ANR	9132196	Argument	obj		9132152	0					
ANR	9132197	Identifier	obj		9132152	0					
ANR	9132198	Argument	1		9132152	1					
ANR	9132199	PrimaryExpression	1		9132152	0					
ANR	9132200	ExpressionStatement	push ( 1 )	528:8:14975:14982	9132152	2	True				
ANR	9132201	CallExpression	push ( 1 )		9132152	0					
ANR	9132202	Callee	push		9132152	0					
ANR	9132203	Identifier	push		9132152	0					
ANR	9132204	ArgumentList	1		9132152	1					
ANR	9132205	Argument	1		9132152	0					
ANR	9132206	PrimaryExpression	1		9132152	0					
ANR	9132207	ExpressionStatement	"packed_get ( imemory , packed , op )"	529:8:14992:15023	9132152	3	True				
ANR	9132208	CallExpression	"packed_get ( imemory , packed , op )"		9132152	0					
ANR	9132209	Callee	packed_get		9132152	0					
ANR	9132210	Identifier	packed_get		9132152	0					
ANR	9132211	ArgumentList	imemory		9132152	1					
ANR	9132212	Argument	imemory		9132152	0					
ANR	9132213	Identifier	imemory		9132152	0					
ANR	9132214	Argument	packed		9132152	1					
ANR	9132215	Identifier	packed		9132152	0					
ANR	9132216	Argument	op		9132152	2					
ANR	9132217	Identifier	op		9132152	0					
ANR	9132218	ExpressionStatement	obj -> value . packed = packed_next ( packed )	530:8:15033:15072	9132152	4	True				
ANR	9132219	AssignmentExpression	obj -> value . packed = packed_next ( packed )		9132152	0		=			
ANR	9132220	MemberAccess	obj -> value . packed		9132152	0					
ANR	9132221	PtrMemberAccess	obj -> value		9132152	0					
ANR	9132222	Identifier	obj		9132152	0					
ANR	9132223	Identifier	value		9132152	1					
ANR	9132224	Identifier	packed		9132152	1					
ANR	9132225	CallExpression	packed_next ( packed )		9132152	1					
ANR	9132226	Callee	packed_next		9132152	0					
ANR	9132227	Identifier	packed_next		9132152	0					
ANR	9132228	ArgumentList	packed		9132152	1					
ANR	9132229	Argument	packed		9132152	0					
ANR	9132230	Identifier	packed		9132152	0					
ANR	9132231	ExpressionStatement	esp += 2	531:8:15082:15090	9132152	5	True				
ANR	9132232	AssignmentExpression	esp += 2		9132152	0		+=			
ANR	9132233	Identifier	esp		9132152	0					
ANR	9132234	PrimaryExpression	2		9132152	1					
ANR	9132235	ExpressionStatement	* esp = obj [ 1 ]	532:8:15100:15113	9132152	6	True				
ANR	9132236	AssignmentExpression	* esp = obj [ 1 ]		9132152	0		=			
ANR	9132237	UnaryOperationExpression	* esp		9132152	0					
ANR	9132238	UnaryOperator	*		9132152	0					
ANR	9132239	Identifier	esp		9132152	1					
ANR	9132240	ArrayIndexing	obj [ 1 ]		9132152	1					
ANR	9132241	Identifier	obj		9132152	0					
ANR	9132242	PrimaryExpression	1		9132152	1					
ANR	9132243	ReturnStatement	return o_push_estack ;	533:8:15123:15143	9132152	7	True				
ANR	9132244	Identifier	o_push_estack		9132152	0					
ANR	9132245	ElseStatement	else		9132152	0					
ANR	9132246	CompoundStatement		15:11:360:360	9132152	0					
ANR	9132247	ExpressionStatement	esp -= 3	535:8:15179:15187	9132152	0	True				
ANR	9132248	AssignmentExpression	esp -= 3		9132152	0		-=			
ANR	9132249	Identifier	esp		9132152	0					
ANR	9132250	PrimaryExpression	3		9132152	1					
ANR	9132251	ReturnStatement	return o_pop_estack ;	536:8:15227:15246	9132152	1	True				
ANR	9132252	Identifier	o_pop_estack		9132152	0					
ANR	9132253	ReturnType	static int		9132152	1					
ANR	9132254	Identifier	packedarray_continue		9132152	2					
ANR	9132255	ParameterList	i_ctx_t * i_ctx_p		9132152	3					
ANR	9132256	Parameter	i_ctx_t * i_ctx_p	519:21:14777:14792	9132152	0	True				
ANR	9132257	ParameterType	i_ctx_t *		9132152	0					
ANR	9132258	Identifier	i_ctx_p		9132152	1					
ANR	9132259	CFGEntryNode	ENTRY		9132152		True				
ANR	9132260	CFGExitNode	EXIT		9132152		True				
ANR	9132261	Symbol	op		9132152						
ANR	9132262	Symbol	* obj		9132152						
ANR	9132263	Symbol	esp		9132152						
ANR	9132264	Symbol	obj -> value		9132152						
ANR	9132265	Symbol	packed_next		9132152						
ANR	9132266	Symbol	o_pop_estack		9132152						
ANR	9132267	Symbol	osp		9132152						
ANR	9132268	Symbol	obj -> value . packed		9132152						
ANR	9132269	Symbol	* esp		9132152						
ANR	9132270	Symbol	i_ctx_p		9132152						
ANR	9132271	Symbol	obj		9132152						
ANR	9132272	Symbol	r_size		9132152						
ANR	9132273	Symbol	imemory		9132152						
ANR	9132274	Symbol	packed		9132152						
ANR	9132275	Symbol	o_push_estack		9132152						
ANR	9132276	Function	forall_cleanup	540:0:15288:15348							
ANR	9132277	FunctionDef	forall_cleanup (i_ctx_t * i_ctx_p)		9132276	0					
ANR	9132278	CompoundStatement		542:0:15332:15348	9132276	0					
ANR	9132279	ReturnStatement	return 0 ;	543:4:15338:15346	9132276	0	True				
ANR	9132280	PrimaryExpression	0		9132276	0					
ANR	9132281	ReturnType	static int		9132276	1					
ANR	9132282	Identifier	forall_cleanup		9132276	2					
ANR	9132283	ParameterList	i_ctx_t * i_ctx_p		9132276	3					
ANR	9132284	Parameter	i_ctx_t * i_ctx_p	541:15:15314:15329	9132276	0	True				
ANR	9132285	ParameterType	i_ctx_t *		9132276	0					
ANR	9132286	Identifier	i_ctx_p		9132276	1					
ANR	9132287	CFGEntryNode	ENTRY		9132276		True				
ANR	9132288	CFGExitNode	EXIT		9132276		True				
ANR	9132289	Symbol	i_ctx_p		9132276						
ANR	9132290	DeclStmt									
ANR	9132291	Decl							const op_def	const op_def [ ]	zgeneric_op_defs
ANR	9132292	Function	copy_interval	573:0:16216:17997							
ANR	9132293	FunctionDef	"copy_interval (i_ctx_t * i_ctx_p , os_ptr prto , uint index , os_ptr prfrom , client_name_t cname)"		9132292	0					
ANR	9132294	CompoundStatement		576:0:16359:17997	9132292	0					
ANR	9132295	IdentifierDeclStatement	int fromtype = r_type ( prfrom ) ;	577:4:16365:16394	9132292	0	True				
ANR	9132296	IdentifierDecl	fromtype = r_type ( prfrom )		9132292	0					
ANR	9132297	IdentifierDeclType	int		9132292	0					
ANR	9132298	Identifier	fromtype		9132292	1					
ANR	9132299	AssignmentExpression	fromtype = r_type ( prfrom )		9132292	2		=			
ANR	9132300	Identifier	fromtype		9132292	0					
ANR	9132301	CallExpression	r_type ( prfrom )		9132292	1					
ANR	9132302	Callee	r_type		9132292	0					
ANR	9132303	Identifier	r_type		9132292	0					
ANR	9132304	ArgumentList	prfrom		9132292	1					
ANR	9132305	Argument	prfrom		9132292	0					
ANR	9132306	Identifier	prfrom		9132292	0					
ANR	9132307	IdentifierDeclStatement	uint fromsize = r_size ( prfrom ) ;	578:4:16400:16430	9132292	1	True				
ANR	9132308	IdentifierDecl	fromsize = r_size ( prfrom )		9132292	0					
ANR	9132309	IdentifierDeclType	uint		9132292	0					
ANR	9132310	Identifier	fromsize		9132292	1					
ANR	9132311	AssignmentExpression	fromsize = r_size ( prfrom )		9132292	2		=			
ANR	9132312	Identifier	fromsize		9132292	0					
ANR	9132313	CallExpression	r_size ( prfrom )		9132292	1					
ANR	9132314	Callee	r_size		9132292	0					
ANR	9132315	Identifier	r_size		9132292	0					
ANR	9132316	ArgumentList	prfrom		9132292	1					
ANR	9132317	Argument	prfrom		9132292	0					
ANR	9132318	Identifier	prfrom		9132292	0					
ANR	9132319	IfStatement	if ( ! ( fromtype == r_type ( prto ) || ( ( fromtype == t_shortarray || fromtype == t_mixedarray ) && r_type ( prto ) == t_array ) ) )		9132292	2					
ANR	9132320	Condition	! ( fromtype == r_type ( prto ) || ( ( fromtype == t_shortarray || fromtype == t_mixedarray ) && r_type ( prto ) == t_array ) )	580:8:16441:16575	9132292	0	True				
ANR	9132321	UnaryOperationExpression	! ( fromtype == r_type ( prto ) || ( ( fromtype == t_shortarray || fromtype == t_mixedarray ) && r_type ( prto ) == t_array ) )		9132292	0					
ANR	9132322	UnaryOperator	!		9132292	0					
ANR	9132323	OrExpression	fromtype == r_type ( prto ) || ( ( fromtype == t_shortarray || fromtype == t_mixedarray ) && r_type ( prto ) == t_array )		9132292	1		||			
ANR	9132324	EqualityExpression	fromtype == r_type ( prto )		9132292	0		==			
ANR	9132325	Identifier	fromtype		9132292	0					
ANR	9132326	CallExpression	r_type ( prto )		9132292	1					
ANR	9132327	Callee	r_type		9132292	0					
ANR	9132328	Identifier	r_type		9132292	0					
ANR	9132329	ArgumentList	prto		9132292	1					
ANR	9132330	Argument	prto		9132292	0					
ANR	9132331	Identifier	prto		9132292	0					
ANR	9132332	AndExpression	( fromtype == t_shortarray || fromtype == t_mixedarray ) && r_type ( prto ) == t_array		9132292	1		&&			
ANR	9132333	OrExpression	fromtype == t_shortarray || fromtype == t_mixedarray		9132292	0		||			
ANR	9132334	EqualityExpression	fromtype == t_shortarray		9132292	0		==			
ANR	9132335	Identifier	fromtype		9132292	0					
ANR	9132336	Identifier	t_shortarray		9132292	1					
ANR	9132337	EqualityExpression	fromtype == t_mixedarray		9132292	1		==			
ANR	9132338	Identifier	fromtype		9132292	0					
ANR	9132339	Identifier	t_mixedarray		9132292	1					
ANR	9132340	EqualityExpression	r_type ( prto ) == t_array		9132292	1		==			
ANR	9132341	CallExpression	r_type ( prto )		9132292	0					
ANR	9132342	Callee	r_type		9132292	0					
ANR	9132343	Identifier	r_type		9132292	0					
ANR	9132344	ArgumentList	prto		9132292	1					
ANR	9132345	Argument	prto		9132292	0					
ANR	9132346	Identifier	prto		9132292	0					
ANR	9132347	Identifier	t_array		9132292	1					
ANR	9132348	ExpressionStatement	return_op_typecheck ( prfrom )	584:8:16595:16622	9132292	1	True				
ANR	9132349	CallExpression	return_op_typecheck ( prfrom )		9132292	0					
ANR	9132350	Callee	return_op_typecheck		9132292	0					
ANR	9132351	Identifier	return_op_typecheck		9132292	0					
ANR	9132352	ArgumentList	prfrom		9132292	1					
ANR	9132353	Argument	prfrom		9132292	0					
ANR	9132354	Identifier	prfrom		9132292	0					
ANR	9132355	ExpressionStatement	check_read ( * prfrom )	585:4:16628:16647	9132292	3	True				
ANR	9132356	CallExpression	check_read ( * prfrom )		9132292	0					
ANR	9132357	Callee	check_read		9132292	0					
ANR	9132358	Identifier	check_read		9132292	0					
ANR	9132359	ArgumentList	* prfrom		9132292	1					
ANR	9132360	Argument	* prfrom		9132292	0					
ANR	9132361	UnaryOperationExpression	* prfrom		9132292	0					
ANR	9132362	UnaryOperator	*		9132292	0					
ANR	9132363	Identifier	prfrom		9132292	1					
ANR	9132364	ExpressionStatement	check_write ( * prto )	586:4:16653:16671	9132292	4	True				
ANR	9132365	CallExpression	check_write ( * prto )		9132292	0					
ANR	9132366	Callee	check_write		9132292	0					
ANR	9132367	Identifier	check_write		9132292	0					
ANR	9132368	ArgumentList	* prto		9132292	1					
ANR	9132369	Argument	* prto		9132292	0					
ANR	9132370	UnaryOperationExpression	* prto		9132292	0					
ANR	9132371	UnaryOperator	*		9132292	0					
ANR	9132372	Identifier	prto		9132292	1					
ANR	9132373	IfStatement	if ( fromsize > r_size ( prto ) - index )		9132292	5					
ANR	9132374	Condition	fromsize > r_size ( prto ) - index	587:8:16681:16711	9132292	0	True				
ANR	9132375	RelationalExpression	fromsize > r_size ( prto ) - index		9132292	0		>			
ANR	9132376	Identifier	fromsize		9132292	0					
ANR	9132377	AdditiveExpression	r_size ( prto ) - index		9132292	1		-			
ANR	9132378	CallExpression	r_size ( prto )		9132292	0					
ANR	9132379	Callee	r_size		9132292	0					
ANR	9132380	Identifier	r_size		9132292	0					
ANR	9132381	ArgumentList	prto		9132292	1					
ANR	9132382	Argument	prto		9132292	0					
ANR	9132383	Identifier	prto		9132292	0					
ANR	9132384	Identifier	index		9132292	1					
ANR	9132385	ExpressionStatement	return_error ( gs_error_rangecheck )	588:8:16722:16755	9132292	1	True				
ANR	9132386	CallExpression	return_error ( gs_error_rangecheck )		9132292	0					
ANR	9132387	Callee	return_error		9132292	0					
ANR	9132388	Identifier	return_error		9132292	0					
ANR	9132389	ArgumentList	gs_error_rangecheck		9132292	1					
ANR	9132390	Argument	gs_error_rangecheck		9132292	0					
ANR	9132391	Identifier	gs_error_rangecheck		9132292	0					
ANR	9132392	SwitchStatement	switch ( fromtype )		9132292	6					
ANR	9132393	Condition	fromtype	589:12:16769:16776	9132292	0	True				
ANR	9132394	Identifier	fromtype		9132292	0					
ANR	9132395	CompoundStatement		14:22:419:419	9132292	1					
ANR	9132396	Label	case t_array :	590:8:16789:16801	9132292	0	True				
ANR	9132397	Identifier	t_array		9132292	0					
ANR	9132398	CompoundStatement		16:12:455:455	9132292	1					
ANR	9132399	ReturnStatement	"return refcpy_to_old ( prto , index , prfrom -> value . refs , fromsize , idmemory , cname ) ;"	593:16:16939:17056	9132292	0	True				
ANR	9132400	CallExpression	"refcpy_to_old ( prto , index , prfrom -> value . refs , fromsize , idmemory , cname )"		9132292	0					
ANR	9132401	Callee	refcpy_to_old		9132292	0					
ANR	9132402	Identifier	refcpy_to_old		9132292	0					
ANR	9132403	ArgumentList	prto		9132292	1					
ANR	9132404	Argument	prto		9132292	0					
ANR	9132405	Identifier	prto		9132292	0					
ANR	9132406	Argument	index		9132292	1					
ANR	9132407	Identifier	index		9132292	0					
ANR	9132408	Argument	prfrom -> value . refs		9132292	2					
ANR	9132409	MemberAccess	prfrom -> value . refs		9132292	0					
ANR	9132410	PtrMemberAccess	prfrom -> value		9132292	0					
ANR	9132411	Identifier	prfrom		9132292	0					
ANR	9132412	Identifier	value		9132292	1					
ANR	9132413	Identifier	refs		9132292	1					
ANR	9132414	Argument	fromsize		9132292	3					
ANR	9132415	Identifier	fromsize		9132292	0					
ANR	9132416	Argument	idmemory		9132292	4					
ANR	9132417	Identifier	idmemory		9132292	0					
ANR	9132418	Argument	cname		9132292	5					
ANR	9132419	Identifier	cname		9132292	0					
ANR	9132420	Label	case t_string :	596:8:17080:17093	9132292	2	True				
ANR	9132421	Identifier	t_string		9132292	0					
ANR	9132422	CompoundStatement		22:12:747:747	9132292	3					
ANR	9132423	ExpressionStatement	"memmove ( prto -> value . bytes + index , prfrom -> value . bytes , fromsize )"	598:16:17163:17252	9132292	0	True				
ANR	9132424	CallExpression	"memmove ( prto -> value . bytes + index , prfrom -> value . bytes , fromsize )"		9132292	0					
ANR	9132425	Callee	memmove		9132292	0					
ANR	9132426	Identifier	memmove		9132292	0					
ANR	9132427	ArgumentList	prto -> value . bytes + index		9132292	1					
ANR	9132428	Argument	prto -> value . bytes + index		9132292	0					
ANR	9132429	AdditiveExpression	prto -> value . bytes + index		9132292	0		+			
ANR	9132430	MemberAccess	prto -> value . bytes		9132292	0					
ANR	9132431	PtrMemberAccess	prto -> value		9132292	0					
ANR	9132432	Identifier	prto		9132292	0					
ANR	9132433	Identifier	value		9132292	1					
ANR	9132434	Identifier	bytes		9132292	1					
ANR	9132435	Identifier	index		9132292	1					
ANR	9132436	Argument	prfrom -> value . bytes		9132292	1					
ANR	9132437	MemberAccess	prfrom -> value . bytes		9132292	0					
ANR	9132438	PtrMemberAccess	prfrom -> value		9132292	0					
ANR	9132439	Identifier	prfrom		9132292	0					
ANR	9132440	Identifier	value		9132292	1					
ANR	9132441	Identifier	bytes		9132292	1					
ANR	9132442	Argument	fromsize		9132292	2					
ANR	9132443	Identifier	fromsize		9132292	0					
ANR	9132444	BreakStatement	break ;	601:12:17280:17285	9132292	4	True				
ANR	9132445	Label	case t_mixedarray :	602:8:17295:17312	9132292	5	True				
ANR	9132446	Identifier	t_mixedarray		9132292	0					
ANR	9132447	Label	case t_shortarray :	603:8:17322:17339	9132292	6	True				
ANR	9132448	Identifier	t_shortarray		9132292	0					
ANR	9132449	CompoundStatement		35:16:1331:1338	9132292	7					
ANR	9132450	IdentifierDeclStatement	uint i ;	607:16:17547:17553	9132292	0	True				
ANR	9132451	IdentifierDecl	i		9132292	0					
ANR	9132452	IdentifierDeclType	uint		9132292	0					
ANR	9132453	Identifier	i		9132292	1					
ANR	9132454	IdentifierDeclStatement	const ref_packed * packed = prfrom -> value . packed ;	608:16:17571:17618	9132292	1	True				
ANR	9132455	IdentifierDecl	* packed = prfrom -> value . packed		9132292	0					
ANR	9132456	IdentifierDeclType	const ref_packed *		9132292	0					
ANR	9132457	Identifier	packed		9132292	1					
ANR	9132458	AssignmentExpression	* packed = prfrom -> value . packed		9132292	2		=			
ANR	9132459	Identifier	packed		9132292	0					
ANR	9132460	MemberAccess	prfrom -> value . packed		9132292	1					
ANR	9132461	PtrMemberAccess	prfrom -> value		9132292	0					
ANR	9132462	Identifier	prfrom		9132292	0					
ANR	9132463	Identifier	value		9132292	1					
ANR	9132464	Identifier	packed		9132292	1					
ANR	9132465	IdentifierDeclStatement	ref * pdest = prto -> value . refs + index ;	609:16:17636:17673	9132292	2	True				
ANR	9132466	IdentifierDecl	* pdest = prto -> value . refs + index		9132292	0					
ANR	9132467	IdentifierDeclType	ref *		9132292	0					
ANR	9132468	Identifier	pdest		9132292	1					
ANR	9132469	AssignmentExpression	* pdest = prto -> value . refs + index		9132292	2		=			
ANR	9132470	Identifier	pdest		9132292	0					
ANR	9132471	AdditiveExpression	prto -> value . refs + index		9132292	1		+			
ANR	9132472	MemberAccess	prto -> value . refs		9132292	0					
ANR	9132473	PtrMemberAccess	prto -> value		9132292	0					
ANR	9132474	Identifier	prto		9132292	0					
ANR	9132475	Identifier	value		9132292	1					
ANR	9132476	Identifier	refs		9132292	1					
ANR	9132477	Identifier	index		9132292	1					
ANR	9132478	IdentifierDeclStatement	ref elt ;	610:16:17691:17698	9132292	3	True				
ANR	9132479	IdentifierDecl	elt		9132292	0					
ANR	9132480	IdentifierDeclType	ref		9132292	0					
ANR	9132481	Identifier	elt		9132292	1					
ANR	9132482	ForStatement	"for ( i = 0 ; i < fromsize ; i ++ , pdest ++ )"		9132292	4					
ANR	9132483	ForInit	i = 0 ;	612:21:17722:17727	9132292	0	True				
ANR	9132484	AssignmentExpression	i = 0		9132292	0		=			
ANR	9132485	Identifier	i		9132292	0					
ANR	9132486	PrimaryExpression	0		9132292	1					
ANR	9132487	Condition	i < fromsize	612:28:17729:17740	9132292	1	True				
ANR	9132488	RelationalExpression	i < fromsize		9132292	0		<			
ANR	9132489	Identifier	i		9132292	0					
ANR	9132490	Identifier	fromsize		9132292	1					
ANR	9132491	Expression	"i ++ , pdest ++"	612:42:17743:17754	9132292	2	True				
ANR	9132492	PostIncDecOperationExpression	i ++		9132292	0					
ANR	9132493	Identifier	i		9132292	0					
ANR	9132494	IncDec	++		9132292	1					
ANR	9132495	PostIncDecOperationExpression	pdest ++		9132292	1					
ANR	9132496	Identifier	pdest		9132292	0					
ANR	9132497	IncDec	++		9132292	1					
ANR	9132498	CompoundStatement		37:56:1397:1397	9132292	3					
ANR	9132499	ExpressionStatement	"packed_get ( imemory , packed , & elt )"	613:20:17779:17812	9132292	0	True				
ANR	9132500	CallExpression	"packed_get ( imemory , packed , & elt )"		9132292	0					
ANR	9132501	Callee	packed_get		9132292	0					
ANR	9132502	Identifier	packed_get		9132292	0					
ANR	9132503	ArgumentList	imemory		9132292	1					
ANR	9132504	Argument	imemory		9132292	0					
ANR	9132505	Identifier	imemory		9132292	0					
ANR	9132506	Argument	packed		9132292	1					
ANR	9132507	Identifier	packed		9132292	0					
ANR	9132508	Argument	& elt		9132292	2					
ANR	9132509	UnaryOperationExpression	& elt		9132292	0					
ANR	9132510	UnaryOperator	&		9132292	0					
ANR	9132511	Identifier	elt		9132292	1					
ANR	9132512	ExpressionStatement	"ref_assign_old ( prto , pdest , & elt , cname )"	614:20:17834:17874	9132292	1	True				
ANR	9132513	CallExpression	"ref_assign_old ( prto , pdest , & elt , cname )"		9132292	0					
ANR	9132514	Callee	ref_assign_old		9132292	0					
ANR	9132515	Identifier	ref_assign_old		9132292	0					
ANR	9132516	ArgumentList	prto		9132292	1					
ANR	9132517	Argument	prto		9132292	0					
ANR	9132518	Identifier	prto		9132292	0					
ANR	9132519	Argument	pdest		9132292	1					
ANR	9132520	Identifier	pdest		9132292	0					
ANR	9132521	Argument	& elt		9132292	2					
ANR	9132522	UnaryOperationExpression	& elt		9132292	0					
ANR	9132523	UnaryOperator	&		9132292	0					
ANR	9132524	Identifier	elt		9132292	1					
ANR	9132525	Argument	cname		9132292	3					
ANR	9132526	Identifier	cname		9132292	0					
ANR	9132527	ExpressionStatement	packed = packed_next ( packed )	615:20:17896:17924	9132292	2	True				
ANR	9132528	AssignmentExpression	packed = packed_next ( packed )		9132292	0		=			
ANR	9132529	Identifier	packed		9132292	0					
ANR	9132530	CallExpression	packed_next ( packed )		9132292	1					
ANR	9132531	Callee	packed_next		9132292	0					
ANR	9132532	Identifier	packed_next		9132292	0					
ANR	9132533	ArgumentList	packed		9132292	1					
ANR	9132534	Argument	packed		9132292	0					
ANR	9132535	Identifier	packed		9132292	0					
ANR	9132536	BreakStatement	break ;	618:12:17970:17975	9132292	8	True				
ANR	9132537	ReturnStatement	return 0 ;	620:4:17987:17995	9132292	7	True				
ANR	9132538	PrimaryExpression	0		9132292	0					
ANR	9132539	ReturnType	static int		9132292	1					
ANR	9132540	Identifier	copy_interval		9132292	2					
ANR	9132541	ParameterList	"i_ctx_t * i_ctx_p , os_ptr prto , uint index , os_ptr prfrom , client_name_t cname"		9132292	3					
ANR	9132542	Parameter	i_ctx_t * i_ctx_p	574:14:16241:16256	9132292	0	True				
ANR	9132543	ParameterType	i_ctx_t *		9132292	0					
ANR	9132544	Identifier	i_ctx_p		9132292	1					
ANR	9132545	Parameter	os_ptr prto	574:57:16284:16294	9132292	1	True				
ANR	9132546	ParameterType	os_ptr		9132292	0					
ANR	9132547	Identifier	prto		9132292	1					
ANR	9132548	Parameter	uint index	575:14:16311:16320	9132292	2	True				
ANR	9132549	ParameterType	uint		9132292	0					
ANR	9132550	Identifier	index		9132292	1					
ANR	9132551	Parameter	os_ptr prfrom	575:26:16323:16335	9132292	3	True				
ANR	9132552	ParameterType	os_ptr		9132292	0					
ANR	9132553	Identifier	prfrom		9132292	1					
ANR	9132554	Parameter	client_name_t cname	575:41:16338:16356	9132292	4	True				
ANR	9132555	ParameterType	client_name_t		9132292	0					
ANR	9132556	Identifier	cname		9132292	1					
ANR	9132557	CFGEntryNode	ENTRY		9132292		True				
ANR	9132558	CFGExitNode	EXIT		9132292		True				
ANR	9132559	Symbol	gs_error_rangecheck		9132292						
ANR	9132560	Symbol	packed_next		9132292						
ANR	9132561	Symbol	t_shortarray		9132292						
ANR	9132562	Symbol	cname		9132292						
ANR	9132563	Symbol	prto		9132292						
ANR	9132564	Symbol	prfrom -> value . refs		9132292						
ANR	9132565	Symbol	pdest		9132292						
ANR	9132566	Symbol	* prto		9132292						
ANR	9132567	Symbol	idmemory		9132292						
ANR	9132568	Symbol	prto -> value		9132292						
ANR	9132569	Symbol	& elt		9132292						
ANR	9132570	Symbol	refcpy_to_old		9132292						
ANR	9132571	Symbol	r_size		9132292						
ANR	9132572	Symbol	prto -> value . refs		9132292						
ANR	9132573	Symbol	prfrom -> value		9132292						
ANR	9132574	Symbol	imemory		9132292						
ANR	9132575	Symbol	packed		9132292						
ANR	9132576	Symbol	r_type		9132292						
ANR	9132577	Symbol	prfrom -> value . packed		9132292						
ANR	9132578	Symbol	index		9132292						
ANR	9132579	Symbol	i		9132292						
ANR	9132580	Symbol	* prfrom		9132292						
ANR	9132581	Symbol	elt		9132292						
ANR	9132582	Symbol	t_mixedarray		9132292						
ANR	9132583	Symbol	prto -> value . bytes		9132292						
ANR	9132584	Symbol	prfrom -> value . bytes		9132292						
ANR	9132585	Symbol	fromsize		9132292						
ANR	9132586	Symbol	t_array		9132292						
ANR	9132587	Symbol	i_ctx_p		9132292						
ANR	9132588	Symbol	prfrom		9132292						
ANR	9132589	Symbol	fromtype		9132292						
