command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3082879	File	data/converged/CVE-2018-16863_ghostpdl/enough.c								
ANR	3082880	DeclStmt									
ANR	3082881	Decl							unsigned long long	unsigned long long	big_t
ANR	3082882	DeclStmt									
ANR	3082883	Decl							unsigned long long	unsigned long long	code_t
ANR	3082884	ClassDef	tab	112:0:6385:6564							
ANR	3082885	DeclStmt									
ANR	3082886	Decl							size_t	size_t	len
ANR	3082887	DeclStmt									
ANR	3082888	Decl							char	char *	vec
ANR	3082889	DeclStmt									
ANR	3082890	Decl							local int	local int	max
ANR	3082891	DeclStmt									
ANR	3082892	Decl							local int	local int	root
ANR	3082893	DeclStmt									
ANR	3082894	Decl							local int	local int	large
ANR	3082895	DeclStmt									
ANR	3082896	Decl							local size_t	local size_t	size
ANR	3082897	DeclStmt									
ANR	3082898	Decl							local int	local int *	code
ANR	3082899	DeclStmt									
ANR	3082900	Decl							local big_t	local big_t *	num
ANR	3082901	DeclStmt									
ANR	3082902	Decl							struct tab	struct tab *	done
ANR	3082903	Function	cleanup	182:0:10195:10468							
ANR	3082904	FunctionDef	cleanup ()		3082903	0					
ANR	3082905	CompoundStatement		183:0:10220:10468	3082903	0					
ANR	3082906	IdentifierDeclStatement	size_t n ;	184:4:10226:10234	3082903	0	True				
ANR	3082907	IdentifierDecl	n		3082903	0					
ANR	3082908	IdentifierDeclType	size_t		3082903	0					
ANR	3082909	Identifier	n		3082903	1					
ANR	3082910	IfStatement	if ( done != NULL )		3082903	1					
ANR	3082911	Condition	done != NULL	186:8:10245:10256	3082903	0	True				
ANR	3082912	EqualityExpression	done != NULL		3082903	0		!=			
ANR	3082913	Identifier	done		3082903	0					
ANR	3082914	Identifier	NULL		3082903	1					
ANR	3082915	CompoundStatement		4:22:38:38	3082903	1					
ANR	3082916	ForStatement	for ( n = 0 ; n < size ; n ++ )		3082903	0					
ANR	3082917	ForInit	n = 0 ;	187:13:10274:10279	3082903	0	True				
ANR	3082918	AssignmentExpression	n = 0		3082903	0		=			
ANR	3082919	Identifier	n		3082903	0					
ANR	3082920	PrimaryExpression	0		3082903	1					
ANR	3082921	Condition	n < size	187:20:10281:10288	3082903	1	True				
ANR	3082922	RelationalExpression	n < size		3082903	0		<			
ANR	3082923	Identifier	n		3082903	0					
ANR	3082924	Identifier	size		3082903	1					
ANR	3082925	PostIncDecOperationExpression	n ++	187:30:10291:10293	3082903	2	True				
ANR	3082926	Identifier	n		3082903	0					
ANR	3082927	IncDec	++		3082903	1					
ANR	3082928	IfStatement	if ( done [ n ] . len )		3082903	3					
ANR	3082929	Condition	done [ n ] . len	188:16:10312:10322	3082903	0	True				
ANR	3082930	MemberAccess	done [ n ] . len		3082903	0					
ANR	3082931	ArrayIndexing	done [ n ]		3082903	0					
ANR	3082932	Identifier	done		3082903	0					
ANR	3082933	Identifier	n		3082903	1					
ANR	3082934	Identifier	len		3082903	1					
ANR	3082935	ExpressionStatement	free ( done [ n ] . vec )	189:16:10341:10358	3082903	1	True				
ANR	3082936	CallExpression	free ( done [ n ] . vec )		3082903	0					
ANR	3082937	Callee	free		3082903	0					
ANR	3082938	Identifier	free		3082903	0					
ANR	3082939	ArgumentList	done [ n ] . vec		3082903	1					
ANR	3082940	Argument	done [ n ] . vec		3082903	0					
ANR	3082941	MemberAccess	done [ n ] . vec		3082903	0					
ANR	3082942	ArrayIndexing	done [ n ]		3082903	0					
ANR	3082943	Identifier	done		3082903	0					
ANR	3082944	Identifier	n		3082903	1					
ANR	3082945	Identifier	vec		3082903	1					
ANR	3082946	ExpressionStatement	free ( done )	190:8:10368:10378	3082903	1	True				
ANR	3082947	CallExpression	free ( done )		3082903	0					
ANR	3082948	Callee	free		3082903	0					
ANR	3082949	Identifier	free		3082903	0					
ANR	3082950	ArgumentList	done		3082903	1					
ANR	3082951	Argument	done		3082903	0					
ANR	3082952	Identifier	done		3082903	0					
ANR	3082953	IfStatement	if ( num != NULL )		3082903	2					
ANR	3082954	Condition	num != NULL	192:8:10394:10404	3082903	0	True				
ANR	3082955	EqualityExpression	num != NULL		3082903	0		!=			
ANR	3082956	Identifier	num		3082903	0					
ANR	3082957	Identifier	NULL		3082903	1					
ANR	3082958	ExpressionStatement	free ( num )	193:8:10415:10424	3082903	1	True				
ANR	3082959	CallExpression	free ( num )		3082903	0					
ANR	3082960	Callee	free		3082903	0					
ANR	3082961	Identifier	free		3082903	0					
ANR	3082962	ArgumentList	num		3082903	1					
ANR	3082963	Argument	num		3082903	0					
ANR	3082964	Identifier	num		3082903	0					
ANR	3082965	IfStatement	if ( code != NULL )		3082903	3					
ANR	3082966	Condition	code != NULL	194:8:10434:10445	3082903	0	True				
ANR	3082967	EqualityExpression	code != NULL		3082903	0		!=			
ANR	3082968	Identifier	code		3082903	0					
ANR	3082969	Identifier	NULL		3082903	1					
ANR	3082970	ExpressionStatement	free ( code )	195:8:10456:10466	3082903	1	True				
ANR	3082971	CallExpression	free ( code )		3082903	0					
ANR	3082972	Callee	free		3082903	0					
ANR	3082973	Identifier	free		3082903	0					
ANR	3082974	ArgumentList	code		3082903	1					
ANR	3082975	Argument	code		3082903	0					
ANR	3082976	Identifier	code		3082903	0					
ANR	3082977	ReturnType	local void		3082903	1					
ANR	3082978	Identifier	cleanup		3082903	2					
ANR	3082979	ParameterList			3082903	3					
ANR	3082980	CFGEntryNode	ENTRY		3082903		True				
ANR	3082981	CFGExitNode	EXIT		3082903		True				
ANR	3082982	Symbol	NULL		3082903						
ANR	3082983	Symbol	code		3082903						
ANR	3082984	Symbol	size		3082903						
ANR	3082985	Symbol	done [ n ] . vec		3082903						
ANR	3082986	Symbol	done [ n ] . len		3082903						
ANR	3082987	Symbol	* done		3082903						
ANR	3082988	Symbol	num		3082903						
ANR	3082989	Symbol	* n		3082903						
ANR	3082990	Symbol	done		3082903						
ANR	3082991	Symbol	n		3082903						
ANR	3082992	Function	count	203:0:10824:12670							
ANR	3082993	FunctionDef	"count (int syms , int len , int left)"		3082992	0					
ANR	3082994	CompoundStatement		204:0:10871:12670	3082992	0					
ANR	3082995	IdentifierDeclStatement	big_t sum ;	205:4:10877:10886	3082992	0	True				
ANR	3082996	IdentifierDecl	sum		3082992	0					
ANR	3082997	IdentifierDeclType	big_t		3082992	0					
ANR	3082998	Identifier	sum		3082992	1					
ANR	3082999	IdentifierDeclStatement	big_t got ;	206:4:10951:10960	3082992	1	True				
ANR	3083000	IdentifierDecl	got		3082992	0					
ANR	3083001	IdentifierDeclType	big_t		3082992	0					
ANR	3083002	Identifier	got		3082992	1					
ANR	3083003	IdentifierDeclStatement	int least ;	207:4:11009:11018	3082992	2	True				
ANR	3083004	IdentifierDecl	least		3082992	0					
ANR	3083005	IdentifierDeclType	int		3082992	0					
ANR	3083006	Identifier	least		3082992	1					
ANR	3083007	IdentifierDeclStatement	int most ;	208:4:11084:11092	3082992	3	True				
ANR	3083008	IdentifierDecl	most		3082992	0					
ANR	3083009	IdentifierDeclType	int		3082992	0					
ANR	3083010	Identifier	most		3082992	1					
ANR	3083011	IdentifierDeclStatement	int use ;	209:4:11158:11165	3082992	4	True				
ANR	3083012	IdentifierDecl	use		3082992	0					
ANR	3083013	IdentifierDeclType	int		3082992	0					
ANR	3083014	Identifier	use		3082992	1					
ANR	3083015	IdentifierDeclStatement	size_t index ;	210:4:11231:11243	3082992	5	True				
ANR	3083016	IdentifierDecl	index		3082992	0					
ANR	3083017	IdentifierDeclType	size_t		3082992	0					
ANR	3083018	Identifier	index		3082992	1					
ANR	3083019	IfStatement	if ( syms == left )		3082992	6					
ANR	3083020	Condition	syms == left	213:8:11333:11344	3082992	0	True				
ANR	3083021	EqualityExpression	syms == left		3082992	0		==			
ANR	3083022	Identifier	syms		3082992	0					
ANR	3083023	Identifier	left		3082992	1					
ANR	3083024	ReturnStatement	return 1 ;	214:8:11355:11363	3082992	1	True				
ANR	3083025	PrimaryExpression	1		3082992	0					
ANR	3083026	ExpressionStatement	assert ( syms > left && left > 0 && len < max )	217:4:11415:11459	3082992	7	True				
ANR	3083027	CallExpression	assert ( syms > left && left > 0 && len < max )		3082992	0					
ANR	3083028	Callee	assert		3082992	0					
ANR	3083029	Identifier	assert		3082992	0					
ANR	3083030	ArgumentList	syms > left && left > 0 && len < max		3082992	1					
ANR	3083031	Argument	syms > left && left > 0 && len < max		3082992	0					
ANR	3083032	AndExpression	syms > left && left > 0 && len < max		3082992	0		&&			
ANR	3083033	RelationalExpression	syms > left		3082992	0		>			
ANR	3083034	Identifier	syms		3082992	0					
ANR	3083035	Identifier	left		3082992	1					
ANR	3083036	AndExpression	left > 0 && len < max		3082992	1		&&			
ANR	3083037	RelationalExpression	left > 0		3082992	0		>			
ANR	3083038	Identifier	left		3082992	0					
ANR	3083039	PrimaryExpression	0		3082992	1					
ANR	3083040	RelationalExpression	len < max		3082992	1		<			
ANR	3083041	Identifier	len		3082992	0					
ANR	3083042	Identifier	max		3082992	1					
ANR	3083043	ExpressionStatement	"index = INDEX ( syms , left , len )"	220:4:11511:11541	3082992	8	True				
ANR	3083044	AssignmentExpression	"index = INDEX ( syms , left , len )"		3082992	0		=			
ANR	3083045	Identifier	index		3082992	0					
ANR	3083046	CallExpression	"INDEX ( syms , left , len )"		3082992	1					
ANR	3083047	Callee	INDEX		3082992	0					
ANR	3083048	Identifier	INDEX		3082992	0					
ANR	3083049	ArgumentList	syms		3082992	1					
ANR	3083050	Argument	syms		3082992	0					
ANR	3083051	Identifier	syms		3082992	0					
ANR	3083052	Argument	left		3082992	1					
ANR	3083053	Identifier	left		3082992	0					
ANR	3083054	Argument	len		3082992	2					
ANR	3083055	Identifier	len		3082992	0					
ANR	3083056	ExpressionStatement	got = num [ index ]	221:4:11547:11563	3082992	9	True				
ANR	3083057	AssignmentExpression	got = num [ index ]		3082992	0		=			
ANR	3083058	Identifier	got		3082992	0					
ANR	3083059	ArrayIndexing	num [ index ]		3082992	1					
ANR	3083060	Identifier	num		3082992	0					
ANR	3083061	Identifier	index		3082992	1					
ANR	3083062	IfStatement	if ( got )		3082992	10					
ANR	3083063	Condition	got	222:8:11573:11575	3082992	0	True				
ANR	3083064	Identifier	got		3082992	0					
ANR	3083065	ReturnStatement	return got ;	223:8:11586:11596	3082992	1	True				
ANR	3083066	Identifier	got		3082992	0					
ANR	3083067	ExpressionStatement	least = ( left << 1 ) - syms	227:4:11805:11831	3082992	11	True				
ANR	3083068	AssignmentExpression	least = ( left << 1 ) - syms		3082992	0		=			
ANR	3083069	Identifier	least		3082992	0					
ANR	3083070	AdditiveExpression	( left << 1 ) - syms		3082992	1		-			
ANR	3083071	ShiftExpression	left << 1		3082992	0		<<			
ANR	3083072	Identifier	left		3082992	0					
ANR	3083073	PrimaryExpression	1		3082992	1					
ANR	3083074	Identifier	syms		3082992	1					
ANR	3083075	IfStatement	if ( least < 0 )		3082992	12					
ANR	3083076	Condition	least < 0	228:8:11841:11849	3082992	0	True				
ANR	3083077	RelationalExpression	least < 0		3082992	0		<			
ANR	3083078	Identifier	least		3082992	0					
ANR	3083079	PrimaryExpression	0		3082992	1					
ANR	3083080	ExpressionStatement	least = 0	229:8:11860:11869	3082992	1	True				
ANR	3083081	AssignmentExpression	least = 0		3082992	0		=			
ANR	3083082	Identifier	least		3082992	0					
ANR	3083083	PrimaryExpression	0		3082992	1					
ANR	3083084	ExpressionStatement	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )	234:4:12106:12198	3082992	13	True				
ANR	3083085	AssignmentExpression	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		3082992	0		=			
ANR	3083086	Identifier	most		3082992	0					
ANR	3083087	MultiplicativeExpression	( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		3082992	1		/			
ANR	3083088	AdditiveExpression	( ( code_t ) left << ( max - len ) ) - syms		3082992	0		-			
ANR	3083089	ShiftExpression	( code_t ) left << ( max - len )		3082992	0		<<			
ANR	3083090	CastExpression	( code_t ) left		3082992	0					
ANR	3083091	CastTarget	code_t		3082992	0					
ANR	3083092	Identifier	left		3082992	1					
ANR	3083093	AdditiveExpression	max - len		3082992	1		-			
ANR	3083094	Identifier	max		3082992	0					
ANR	3083095	Identifier	len		3082992	1					
ANR	3083096	Identifier	syms		3082992	1					
ANR	3083097	AdditiveExpression	( ( code_t ) 1 << ( max - len ) ) - 1		3082992	1		-			
ANR	3083098	ShiftExpression	( code_t ) 1 << ( max - len )		3082992	0		<<			
ANR	3083099	CastExpression	( code_t ) 1		3082992	0					
ANR	3083100	CastTarget	code_t		3082992	0					
ANR	3083101	PrimaryExpression	1		3082992	1					
ANR	3083102	AdditiveExpression	max - len		3082992	1		-			
ANR	3083103	Identifier	max		3082992	0					
ANR	3083104	Identifier	len		3082992	1					
ANR	3083105	PrimaryExpression	1		3082992	1					
ANR	3083106	ExpressionStatement	sum = 0	238:4:12275:12282	3082992	14	True				
ANR	3083107	AssignmentExpression	sum = 0		3082992	0		=			
ANR	3083108	Identifier	sum		3082992	0					
ANR	3083109	PrimaryExpression	0		3082992	1					
ANR	3083110	ForStatement	for ( use = least ; use <= most ; use ++ )		3082992	15					
ANR	3083111	ForInit	use = least ;	239:9:12293:12304	3082992	0	True				
ANR	3083112	AssignmentExpression	use = least		3082992	0		=			
ANR	3083113	Identifier	use		3082992	0					
ANR	3083114	Identifier	least		3082992	1					
ANR	3083115	Condition	use <= most	239:22:12306:12316	3082992	1	True				
ANR	3083116	RelationalExpression	use <= most		3082992	0		<=			
ANR	3083117	Identifier	use		3082992	0					
ANR	3083118	Identifier	most		3082992	1					
ANR	3083119	PostIncDecOperationExpression	use ++	239:35:12319:12323	3082992	2	True				
ANR	3083120	Identifier	use		3082992	0					
ANR	3083121	IncDec	++		3082992	1					
ANR	3083122	CompoundStatement		36:42:1454:1454	3082992	3					
ANR	3083123	ExpressionStatement	"got = count ( syms - use , len + 1 , ( left - use ) << 1 )"	240:8:12336:12387	3082992	0	True				
ANR	3083124	AssignmentExpression	"got = count ( syms - use , len + 1 , ( left - use ) << 1 )"		3082992	0		=			
ANR	3083125	Identifier	got		3082992	0					
ANR	3083126	CallExpression	"count ( syms - use , len + 1 , ( left - use ) << 1 )"		3082992	1					
ANR	3083127	Callee	count		3082992	0					
ANR	3083128	Identifier	count		3082992	0					
ANR	3083129	ArgumentList	syms - use		3082992	1					
ANR	3083130	Argument	syms - use		3082992	0					
ANR	3083131	AdditiveExpression	syms - use		3082992	0		-			
ANR	3083132	Identifier	syms		3082992	0					
ANR	3083133	Identifier	use		3082992	1					
ANR	3083134	Argument	len + 1		3082992	1					
ANR	3083135	AdditiveExpression	len + 1		3082992	0		+			
ANR	3083136	Identifier	len		3082992	0					
ANR	3083137	PrimaryExpression	1		3082992	1					
ANR	3083138	Argument	( left - use ) << 1		3082992	2					
ANR	3083139	ShiftExpression	( left - use ) << 1		3082992	0		<<			
ANR	3083140	AdditiveExpression	left - use		3082992	0		-			
ANR	3083141	Identifier	left		3082992	0					
ANR	3083142	Identifier	use		3082992	1					
ANR	3083143	PrimaryExpression	1		3082992	1					
ANR	3083144	ExpressionStatement	sum += got	241:8:12397:12407	3082992	1	True				
ANR	3083145	AssignmentExpression	sum += got		3082992	0		+=			
ANR	3083146	Identifier	sum		3082992	0					
ANR	3083147	Identifier	got		3082992	1					
ANR	3083148	IfStatement	if ( got == ( big_t ) 0 - 1 || sum < got )		3082992	2					
ANR	3083149	Condition	got == ( big_t ) 0 - 1 || sum < got	242:12:12421:12452	3082992	0	True				
ANR	3083150	OrExpression	got == ( big_t ) 0 - 1 || sum < got		3082992	0		||			
ANR	3083151	EqualityExpression	got == ( big_t ) 0 - 1		3082992	0		==			
ANR	3083152	Identifier	got		3082992	0					
ANR	3083153	AdditiveExpression	( big_t ) 0 - 1		3082992	1		-			
ANR	3083154	CastExpression	( big_t ) 0		3082992	0					
ANR	3083155	CastTarget	big_t		3082992	0					
ANR	3083156	PrimaryExpression	0		3082992	1					
ANR	3083157	PrimaryExpression	1		3082992	1					
ANR	3083158	RelationalExpression	sum < got		3082992	1		<			
ANR	3083159	Identifier	sum		3082992	0					
ANR	3083160	Identifier	got		3082992	1					
ANR	3083161	ReturnStatement	return ( big_t ) 0 - 1 ;	243:12:12484:12503	3082992	1	True				
ANR	3083162	AdditiveExpression	( big_t ) 0 - 1		3082992	0		-			
ANR	3083163	CastExpression	( big_t ) 0		3082992	0					
ANR	3083164	CastTarget	big_t		3082992	0					
ANR	3083165	PrimaryExpression	0		3082992	1					
ANR	3083166	PrimaryExpression	1		3082992	1					
ANR	3083167	ExpressionStatement	assert ( sum != 0 )	247:4:12573:12589	3082992	16	True				
ANR	3083168	CallExpression	assert ( sum != 0 )		3082992	0					
ANR	3083169	Callee	assert		3082992	0					
ANR	3083170	Identifier	assert		3082992	0					
ANR	3083171	ArgumentList	sum != 0		3082992	1					
ANR	3083172	Argument	sum != 0		3082992	0					
ANR	3083173	EqualityExpression	sum != 0		3082992	0		!=			
ANR	3083174	Identifier	sum		3082992	0					
ANR	3083175	PrimaryExpression	0		3082992	1					
ANR	3083176	ExpressionStatement	num [ index ] = sum	250:4:12636:12652	3082992	17	True				
ANR	3083177	AssignmentExpression	num [ index ] = sum		3082992	0		=			
ANR	3083178	ArrayIndexing	num [ index ]		3082992	0					
ANR	3083179	Identifier	num		3082992	0					
ANR	3083180	Identifier	index		3082992	1					
ANR	3083181	Identifier	sum		3082992	1					
ANR	3083182	ReturnStatement	return sum ;	251:4:12658:12668	3082992	18	True				
ANR	3083183	Identifier	sum		3082992	0					
ANR	3083184	ReturnType	local big_t		3082992	1					
ANR	3083185	Identifier	count		3082992	2					
ANR	3083186	ParameterList	"int syms , int len , int left"		3082992	3					
ANR	3083187	Parameter	int syms	203:18:10842:10849	3082992	0	True				
ANR	3083188	ParameterType	int		3082992	0					
ANR	3083189	Identifier	syms		3082992	1					
ANR	3083190	Parameter	int len	203:28:10852:10858	3082992	1	True				
ANR	3083191	ParameterType	int		3082992	0					
ANR	3083192	Identifier	len		3082992	1					
ANR	3083193	Parameter	int left	203:37:10861:10868	3082992	2	True				
ANR	3083194	ParameterType	int		3082992	0					
ANR	3083195	Identifier	left		3082992	1					
ANR	3083196	CFGEntryNode	ENTRY		3082992		True				
ANR	3083197	CFGExitNode	EXIT		3082992		True				
ANR	3083198	Symbol	max		3082992						
ANR	3083199	Symbol	use		3082992						
ANR	3083200	Symbol	* index		3082992						
ANR	3083201	Symbol	num		3082992						
ANR	3083202	Symbol	least		3082992						
ANR	3083203	Symbol	count		3082992						
ANR	3083204	Symbol	index		3082992						
ANR	3083205	Symbol	sum		3082992						
ANR	3083206	Symbol	got		3082992						
ANR	3083207	Symbol	most		3082992						
ANR	3083208	Symbol	* num		3082992						
ANR	3083209	Symbol	len		3082992						
ANR	3083210	Symbol	left		3082992						
ANR	3083211	Symbol	syms		3082992						
ANR	3083212	Symbol	INDEX		3082992						
ANR	3083213	Function	beenhere	258:0:12964:14944							
ANR	3083214	FunctionDef	"beenhere (int syms , int len , int left , int mem , int rem)"		3083213	0					
ANR	3083215	CompoundStatement		259:0:13030:14944	3083213	0					
ANR	3083216	IdentifierDeclStatement	size_t index ;	260:4:13036:13048	3083213	0	True				
ANR	3083217	IdentifierDecl	index		3083213	0					
ANR	3083218	IdentifierDeclType	size_t		3083213	0					
ANR	3083219	Identifier	index		3083213	1					
ANR	3083220	IdentifierDeclStatement	size_t offset ;	261:4:13100:13113	3083213	1	True				
ANR	3083221	IdentifierDecl	offset		3083213	0					
ANR	3083222	IdentifierDeclType	size_t		3083213	0					
ANR	3083223	Identifier	offset		3083213	1					
ANR	3083224	IdentifierDeclStatement	int bit ;	262:4:13164:13171	3083213	2	True				
ANR	3083225	IdentifierDecl	bit		3083213	0					
ANR	3083226	IdentifierDeclType	int		3083213	0					
ANR	3083227	Identifier	bit		3083213	1					
ANR	3083228	IdentifierDeclStatement	size_t length ;	263:4:13220:13233	3083213	3	True				
ANR	3083229	IdentifierDecl	length		3083213	0					
ANR	3083230	IdentifierDeclType	size_t		3083213	0					
ANR	3083231	Identifier	length		3083213	1					
ANR	3083232	IdentifierDeclStatement	char * vector ;	264:4:13284:13296	3083213	4	True				
ANR	3083233	IdentifierDecl	* vector		3083213	0					
ANR	3083234	IdentifierDeclType	char *		3083213	0					
ANR	3083235	Identifier	vector		3083213	1					
ANR	3083236	ExpressionStatement	"index = INDEX ( syms , left , len )"	267:4:13417:13447	3083213	5	True				
ANR	3083237	AssignmentExpression	"index = INDEX ( syms , left , len )"		3083213	0		=			
ANR	3083238	Identifier	index		3083213	0					
ANR	3083239	CallExpression	"INDEX ( syms , left , len )"		3083213	1					
ANR	3083240	Callee	INDEX		3083213	0					
ANR	3083241	Identifier	INDEX		3083213	0					
ANR	3083242	ArgumentList	syms		3083213	1					
ANR	3083243	Argument	syms		3083213	0					
ANR	3083244	Identifier	syms		3083213	0					
ANR	3083245	Argument	left		3083213	1					
ANR	3083246	Identifier	left		3083213	0					
ANR	3083247	Argument	len		3083213	2					
ANR	3083248	Identifier	len		3083213	0					
ANR	3083249	ExpressionStatement	mem -= 1 << root	268:4:13453:13469	3083213	6	True				
ANR	3083250	AssignmentExpression	mem -= 1 << root		3083213	0		-=			
ANR	3083251	Identifier	mem		3083213	0					
ANR	3083252	ShiftExpression	1 << root		3083213	1		<<			
ANR	3083253	PrimaryExpression	1		3083213	0					
ANR	3083254	Identifier	root		3083213	1					
ANR	3083255	ExpressionStatement	offset = ( mem >> 3 ) + rem	269:4:13475:13500	3083213	7	True				
ANR	3083256	AssignmentExpression	offset = ( mem >> 3 ) + rem		3083213	0		=			
ANR	3083257	Identifier	offset		3083213	0					
ANR	3083258	AdditiveExpression	( mem >> 3 ) + rem		3083213	1		+			
ANR	3083259	ShiftExpression	mem >> 3		3083213	0		>>			
ANR	3083260	Identifier	mem		3083213	0					
ANR	3083261	PrimaryExpression	3		3083213	1					
ANR	3083262	Identifier	rem		3083213	1					
ANR	3083263	ExpressionStatement	offset = ( ( offset * ( offset + 1 ) ) >> 1 ) + rem	270:4:13506:13551	3083213	8	True				
ANR	3083264	AssignmentExpression	offset = ( ( offset * ( offset + 1 ) ) >> 1 ) + rem		3083213	0		=			
ANR	3083265	Identifier	offset		3083213	0					
ANR	3083266	AdditiveExpression	( ( offset * ( offset + 1 ) ) >> 1 ) + rem		3083213	1		+			
ANR	3083267	ShiftExpression	( offset * ( offset + 1 ) ) >> 1		3083213	0		>>			
ANR	3083268	MultiplicativeExpression	offset * ( offset + 1 )		3083213	0		*			
ANR	3083269	Identifier	offset		3083213	0					
ANR	3083270	AdditiveExpression	offset + 1		3083213	1		+			
ANR	3083271	Identifier	offset		3083213	0					
ANR	3083272	PrimaryExpression	1		3083213	1					
ANR	3083273	PrimaryExpression	1		3083213	1					
ANR	3083274	Identifier	rem		3083213	1					
ANR	3083275	ExpressionStatement	bit = 1 << ( mem & 7 )	271:4:13557:13577	3083213	9	True				
ANR	3083276	AssignmentExpression	bit = 1 << ( mem & 7 )		3083213	0		=			
ANR	3083277	Identifier	bit		3083213	0					
ANR	3083278	ShiftExpression	1 << ( mem & 7 )		3083213	1		<<			
ANR	3083279	PrimaryExpression	1		3083213	0					
ANR	3083280	BitAndExpression	mem & 7		3083213	1		&			
ANR	3083281	Identifier	mem		3083213	0					
ANR	3083282	PrimaryExpression	7		3083213	1					
ANR	3083283	ExpressionStatement	length = done [ index ] . len	274:4:13617:13641	3083213	10	True				
ANR	3083284	AssignmentExpression	length = done [ index ] . len		3083213	0		=			
ANR	3083285	Identifier	length		3083213	0					
ANR	3083286	MemberAccess	done [ index ] . len		3083213	1					
ANR	3083287	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083288	Identifier	done		3083213	0					
ANR	3083289	Identifier	index		3083213	1					
ANR	3083290	Identifier	len		3083213	1					
ANR	3083291	IfStatement	if ( offset < length && ( done [ index ] . vec [ offset ] & bit ) != 0 )		3083213	11					
ANR	3083292	Condition	offset < length && ( done [ index ] . vec [ offset ] & bit ) != 0	275:8:13651:13705	3083213	0	True				
ANR	3083293	AndExpression	offset < length && ( done [ index ] . vec [ offset ] & bit ) != 0		3083213	0		&&			
ANR	3083294	RelationalExpression	offset < length		3083213	0		<			
ANR	3083295	Identifier	offset		3083213	0					
ANR	3083296	Identifier	length		3083213	1					
ANR	3083297	EqualityExpression	( done [ index ] . vec [ offset ] & bit ) != 0		3083213	1		!=			
ANR	3083298	BitAndExpression	done [ index ] . vec [ offset ] & bit		3083213	0		&			
ANR	3083299	ArrayIndexing	done [ index ] . vec [ offset ]		3083213	0					
ANR	3083300	MemberAccess	done [ index ] . vec		3083213	0					
ANR	3083301	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083302	Identifier	done		3083213	0					
ANR	3083303	Identifier	index		3083213	1					
ANR	3083304	Identifier	vec		3083213	1					
ANR	3083305	Identifier	offset		3083213	1					
ANR	3083306	Identifier	bit		3083213	1					
ANR	3083307	PrimaryExpression	0		3083213	1					
ANR	3083308	ReturnStatement	return 1 ;	276:8:13716:13724	3083213	1	True				
ANR	3083309	PrimaryExpression	1		3083213	0					
ANR	3083310	IfStatement	if ( length <= offset )		3083213	12					
ANR	3083311	Condition	length <= offset	281:8:13904:13919	3083213	0	True				
ANR	3083312	RelationalExpression	length <= offset		3083213	0		<=			
ANR	3083313	Identifier	length		3083213	0					
ANR	3083314	Identifier	offset		3083213	1					
ANR	3083315	CompoundStatement		23:26:891:891	3083213	1					
ANR	3083316	IfStatement	if ( length )		3083213	0					
ANR	3083317	Condition	length	283:12:14014:14019	3083213	0	True				
ANR	3083318	Identifier	length		3083213	0					
ANR	3083319	CompoundStatement		25:20:991:991	3083213	1					
ANR	3083320	DoStatement	do		3083213	0					
ANR	3083321	CompoundStatement		26:15:1008:1008	3083213	0					
ANR	3083322	ExpressionStatement	length <<= 1	285:16:14057:14069	3083213	0	True				
ANR	3083323	AssignmentExpression	length <<= 1		3083213	0		<<=			
ANR	3083324	Identifier	length		3083213	0					
ANR	3083325	PrimaryExpression	1		3083213	1					
ANR	3083326	Condition	length <= offset	286:21:14092:14107	3083213	1	True				
ANR	3083327	RelationalExpression	length <= offset		3083213	0		<=			
ANR	3083328	Identifier	length		3083213	0					
ANR	3083329	Identifier	offset		3083213	1					
ANR	3083330	ExpressionStatement	"vector = realloc ( done [ index ] . vec , length )"	287:12:14123:14164	3083213	1	True				
ANR	3083331	AssignmentExpression	"vector = realloc ( done [ index ] . vec , length )"		3083213	0		=			
ANR	3083332	Identifier	vector		3083213	0					
ANR	3083333	CallExpression	"realloc ( done [ index ] . vec , length )"		3083213	1					
ANR	3083334	Callee	realloc		3083213	0					
ANR	3083335	Identifier	realloc		3083213	0					
ANR	3083336	ArgumentList	done [ index ] . vec		3083213	1					
ANR	3083337	Argument	done [ index ] . vec		3083213	0					
ANR	3083338	MemberAccess	done [ index ] . vec		3083213	0					
ANR	3083339	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083340	Identifier	done		3083213	0					
ANR	3083341	Identifier	index		3083213	1					
ANR	3083342	Identifier	vec		3083213	1					
ANR	3083343	Argument	length		3083213	1					
ANR	3083344	Identifier	length		3083213	0					
ANR	3083345	IfStatement	if ( vector != NULL )		3083213	2					
ANR	3083346	Condition	vector != NULL	288:16:14182:14195	3083213	0	True				
ANR	3083347	EqualityExpression	vector != NULL		3083213	0		!=			
ANR	3083348	Identifier	vector		3083213	0					
ANR	3083349	Identifier	NULL		3083213	1					
ANR	3083350	ExpressionStatement	"memset ( vector + done [ index ] . len , 0 , length - done [ index ] . len )"	289:16:14214:14275	3083213	1	True				
ANR	3083351	CallExpression	"memset ( vector + done [ index ] . len , 0 , length - done [ index ] . len )"		3083213	0					
ANR	3083352	Callee	memset		3083213	0					
ANR	3083353	Identifier	memset		3083213	0					
ANR	3083354	ArgumentList	vector + done [ index ] . len		3083213	1					
ANR	3083355	Argument	vector + done [ index ] . len		3083213	0					
ANR	3083356	AdditiveExpression	vector + done [ index ] . len		3083213	0		+			
ANR	3083357	Identifier	vector		3083213	0					
ANR	3083358	MemberAccess	done [ index ] . len		3083213	1					
ANR	3083359	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083360	Identifier	done		3083213	0					
ANR	3083361	Identifier	index		3083213	1					
ANR	3083362	Identifier	len		3083213	1					
ANR	3083363	Argument	0		3083213	1					
ANR	3083364	PrimaryExpression	0		3083213	0					
ANR	3083365	Argument	length - done [ index ] . len		3083213	2					
ANR	3083366	AdditiveExpression	length - done [ index ] . len		3083213	0		-			
ANR	3083367	Identifier	length		3083213	0					
ANR	3083368	MemberAccess	done [ index ] . len		3083213	1					
ANR	3083369	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083370	Identifier	done		3083213	0					
ANR	3083371	Identifier	index		3083213	1					
ANR	3083372	Identifier	len		3083213	1					
ANR	3083373	ElseStatement	else		3083213	0					
ANR	3083374	CompoundStatement		35:13:1339:1339	3083213	0					
ANR	3083375	ExpressionStatement	length = 1 << ( len - root )	294:12:14384:14410	3083213	0	True				
ANR	3083376	AssignmentExpression	length = 1 << ( len - root )		3083213	0		=			
ANR	3083377	Identifier	length		3083213	0					
ANR	3083378	ShiftExpression	1 << ( len - root )		3083213	1		<<			
ANR	3083379	PrimaryExpression	1		3083213	0					
ANR	3083380	AdditiveExpression	len - root		3083213	1		-			
ANR	3083381	Identifier	len		3083213	0					
ANR	3083382	Identifier	root		3083213	1					
ANR	3083383	WhileStatement	while ( length <= offset )		3083213	1					
ANR	3083384	Condition	length <= offset	295:19:14431:14446	3083213	0	True				
ANR	3083385	RelationalExpression	length <= offset		3083213	0		<=			
ANR	3083386	Identifier	length		3083213	0					
ANR	3083387	Identifier	offset		3083213	1					
ANR	3083388	ExpressionStatement	length <<= 1	296:16:14465:14477	3083213	1	True				
ANR	3083389	AssignmentExpression	length <<= 1		3083213	0		<<=			
ANR	3083390	Identifier	length		3083213	0					
ANR	3083391	PrimaryExpression	1		3083213	1					
ANR	3083392	ExpressionStatement	"vector = calloc ( length , sizeof ( char ) )"	297:12:14491:14528	3083213	2	True				
ANR	3083393	AssignmentExpression	"vector = calloc ( length , sizeof ( char ) )"		3083213	0		=			
ANR	3083394	Identifier	vector		3083213	0					
ANR	3083395	CallExpression	"calloc ( length , sizeof ( char ) )"		3083213	1					
ANR	3083396	Callee	calloc		3083213	0					
ANR	3083397	Identifier	calloc		3083213	0					
ANR	3083398	ArgumentList	length		3083213	1					
ANR	3083399	Argument	length		3083213	0					
ANR	3083400	Identifier	length		3083213	0					
ANR	3083401	Argument	sizeof ( char )		3083213	1					
ANR	3083402	SizeofExpression	sizeof ( char )		3083213	0					
ANR	3083403	Sizeof	sizeof		3083213	0					
ANR	3083404	SizeofOperand	char		3083213	1					
ANR	3083405	IfStatement	if ( vector == NULL )		3083213	1					
ANR	3083406	Condition	vector == NULL	301:12:14615:14628	3083213	0	True				
ANR	3083407	EqualityExpression	vector == NULL		3083213	0		==			
ANR	3083408	Identifier	vector		3083213	0					
ANR	3083409	Identifier	NULL		3083213	1					
ANR	3083410	CompoundStatement		43:28:1600:1600	3083213	1					
ANR	3083411	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	302:12:14645:14703	3083213	0	True				
ANR	3083412	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		3083213	0					
ANR	3083413	Callee	fputs		3083213	0					
ANR	3083414	Identifier	fputs		3083213	0					
ANR	3083415	ArgumentList	"""abort: unable to allocate enough memory\\n"""		3083213	1					
ANR	3083416	Argument	"""abort: unable to allocate enough memory\\n"""		3083213	0					
ANR	3083417	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		3083213	0					
ANR	3083418	Argument	stderr		3083213	1					
ANR	3083419	Identifier	stderr		3083213	0					
ANR	3083420	ExpressionStatement	cleanup ( )	303:12:14717:14726	3083213	1	True				
ANR	3083421	CallExpression	cleanup ( )		3083213	0					
ANR	3083422	Callee	cleanup		3083213	0					
ANR	3083423	Identifier	cleanup		3083213	0					
ANR	3083424	ArgumentList			3083213	1					
ANR	3083425	ExpressionStatement	exit ( 1 )	304:12:14740:14747	3083213	2	True				
ANR	3083426	CallExpression	exit ( 1 )		3083213	0					
ANR	3083427	Callee	exit		3083213	0					
ANR	3083428	Identifier	exit		3083213	0					
ANR	3083429	ArgumentList	1		3083213	1					
ANR	3083430	Argument	1		3083213	0					
ANR	3083431	PrimaryExpression	1		3083213	0					
ANR	3083432	ExpressionStatement	done [ index ] . len = length	308:8:14805:14829	3083213	2	True				
ANR	3083433	AssignmentExpression	done [ index ] . len = length		3083213	0		=			
ANR	3083434	MemberAccess	done [ index ] . len		3083213	0					
ANR	3083435	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083436	Identifier	done		3083213	0					
ANR	3083437	Identifier	index		3083213	1					
ANR	3083438	Identifier	len		3083213	1					
ANR	3083439	Identifier	length		3083213	1					
ANR	3083440	ExpressionStatement	done [ index ] . vec = vector	309:8:14839:14863	3083213	3	True				
ANR	3083441	AssignmentExpression	done [ index ] . vec = vector		3083213	0		=			
ANR	3083442	MemberAccess	done [ index ] . vec		3083213	0					
ANR	3083443	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083444	Identifier	done		3083213	0					
ANR	3083445	Identifier	index		3083213	1					
ANR	3083446	Identifier	vec		3083213	1					
ANR	3083447	Identifier	vector		3083213	1					
ANR	3083448	ExpressionStatement	done [ index ] . vec [ offset ] |= bit	313:4:14898:14928	3083213	13	True				
ANR	3083449	AssignmentExpression	done [ index ] . vec [ offset ] |= bit		3083213	0		|=			
ANR	3083450	ArrayIndexing	done [ index ] . vec [ offset ]		3083213	0					
ANR	3083451	MemberAccess	done [ index ] . vec		3083213	0					
ANR	3083452	ArrayIndexing	done [ index ]		3083213	0					
ANR	3083453	Identifier	done		3083213	0					
ANR	3083454	Identifier	index		3083213	1					
ANR	3083455	Identifier	vec		3083213	1					
ANR	3083456	Identifier	offset		3083213	1					
ANR	3083457	Identifier	bit		3083213	1					
ANR	3083458	ReturnStatement	return 0 ;	314:4:14934:14942	3083213	14	True				
ANR	3083459	PrimaryExpression	0		3083213	0					
ANR	3083460	ReturnType	local int		3083213	1					
ANR	3083461	Identifier	beenhere		3083213	2					
ANR	3083462	ParameterList	"int syms , int len , int left , int mem , int rem"		3083213	3					
ANR	3083463	Parameter	int syms	258:19:12983:12990	3083213	0	True				
ANR	3083464	ParameterType	int		3083213	0					
ANR	3083465	Identifier	syms		3083213	1					
ANR	3083466	Parameter	int len	258:29:12993:12999	3083213	1	True				
ANR	3083467	ParameterType	int		3083213	0					
ANR	3083468	Identifier	len		3083213	1					
ANR	3083469	Parameter	int left	258:38:13002:13009	3083213	2	True				
ANR	3083470	ParameterType	int		3083213	0					
ANR	3083471	Identifier	left		3083213	1					
ANR	3083472	Parameter	int mem	258:48:13012:13018	3083213	3	True				
ANR	3083473	ParameterType	int		3083213	0					
ANR	3083474	Identifier	mem		3083213	1					
ANR	3083475	Parameter	int rem	258:57:13021:13027	3083213	4	True				
ANR	3083476	ParameterType	int		3083213	0					
ANR	3083477	Identifier	rem		3083213	1					
ANR	3083478	CFGEntryNode	ENTRY		3083213		True				
ANR	3083479	CFGExitNode	EXIT		3083213		True				
ANR	3083480	Symbol	* index		3083213						
ANR	3083481	Symbol	realloc		3083213						
ANR	3083482	Symbol	calloc		3083213						
ANR	3083483	Symbol	bit		3083213						
ANR	3083484	Symbol	len		3083213						
ANR	3083485	Symbol	mem		3083213						
ANR	3083486	Symbol	root		3083213						
ANR	3083487	Symbol	vector		3083213						
ANR	3083488	Symbol	rem		3083213						
ANR	3083489	Symbol	INDEX		3083213						
ANR	3083490	Symbol	done [ index ] . vec		3083213						
ANR	3083491	Symbol	done [ index ] . len		3083213						
ANR	3083492	Symbol	* * index		3083213						
ANR	3083493	Symbol	NULL		3083213						
ANR	3083494	Symbol	offset		3083213						
ANR	3083495	Symbol	* done		3083213						
ANR	3083496	Symbol	* done [ index ] . vec		3083213						
ANR	3083497	Symbol	length		3083213						
ANR	3083498	Symbol	index		3083213						
ANR	3083499	Symbol	stderr		3083213						
ANR	3083500	Symbol	done		3083213						
ANR	3083501	Symbol	left		3083213						
ANR	3083502	Symbol	* * done		3083213						
ANR	3083503	Symbol	* offset		3083213						
ANR	3083504	Symbol	syms		3083213						
ANR	3083505	Function	examine	322:0:15272:17707							
ANR	3083506	FunctionDef	"examine (int syms , int len , int left , int mem , int rem)"		3083505	0					
ANR	3083507	CompoundStatement		323:0:15338:17707	3083505	0					
ANR	3083508	IdentifierDeclStatement	int least ;	324:4:15344:15353	3083505	0	True				
ANR	3083509	IdentifierDecl	least		3083505	0					
ANR	3083510	IdentifierDeclType	int		3083505	0					
ANR	3083511	Identifier	least		3083505	1					
ANR	3083512	IdentifierDeclStatement	int most ;	325:4:15419:15427	3083505	1	True				
ANR	3083513	IdentifierDecl	most		3083505	0					
ANR	3083514	IdentifierDeclType	int		3083505	0					
ANR	3083515	Identifier	most		3083505	1					
ANR	3083516	IdentifierDeclStatement	int use ;	326:4:15493:15500	3083505	2	True				
ANR	3083517	IdentifierDecl	use		3083505	0					
ANR	3083518	IdentifierDeclType	int		3083505	0					
ANR	3083519	Identifier	use		3083505	1					
ANR	3083520	IfStatement	if ( syms == left )		3083505	3					
ANR	3083521	Condition	syms == left	329:8:15612:15623	3083505	0	True				
ANR	3083522	EqualityExpression	syms == left		3083505	0		==			
ANR	3083523	Identifier	syms		3083505	0					
ANR	3083524	Identifier	left		3083505	1					
ANR	3083525	CompoundStatement		7:22:287:287	3083505	1					
ANR	3083526	ExpressionStatement	code [ len ] = left	331:8:15674:15690	3083505	0	True				
ANR	3083527	AssignmentExpression	code [ len ] = left		3083505	0		=			
ANR	3083528	ArrayIndexing	code [ len ]		3083505	0					
ANR	3083529	Identifier	code		3083505	0					
ANR	3083530	Identifier	len		3083505	1					
ANR	3083531	Identifier	left		3083505	1					
ANR	3083532	WhileStatement	while ( rem < left )		3083505	1					
ANR	3083533	Condition	rem < left	334:15:15771:15780	3083505	0	True				
ANR	3083534	RelationalExpression	rem < left		3083505	0		<			
ANR	3083535	Identifier	rem		3083505	0					
ANR	3083536	Identifier	left		3083505	1					
ANR	3083537	CompoundStatement		12:27:444:444	3083505	1					
ANR	3083538	ExpressionStatement	left -= rem	335:12:15797:15808	3083505	0	True				
ANR	3083539	AssignmentExpression	left -= rem		3083505	0		-=			
ANR	3083540	Identifier	left		3083505	0					
ANR	3083541	Identifier	rem		3083505	1					
ANR	3083542	ExpressionStatement	rem = 1 << ( len - root )	336:12:15822:15845	3083505	1	True				
ANR	3083543	AssignmentExpression	rem = 1 << ( len - root )		3083505	0		=			
ANR	3083544	Identifier	rem		3083505	0					
ANR	3083545	ShiftExpression	1 << ( len - root )		3083505	1		<<			
ANR	3083546	PrimaryExpression	1		3083505	0					
ANR	3083547	AdditiveExpression	len - root		3083505	1		-			
ANR	3083548	Identifier	len		3083505	0					
ANR	3083549	Identifier	root		3083505	1					
ANR	3083550	ExpressionStatement	mem += rem	337:12:15859:15869	3083505	2	True				
ANR	3083551	AssignmentExpression	mem += rem		3083505	0		+=			
ANR	3083552	Identifier	mem		3083505	0					
ANR	3083553	Identifier	rem		3083505	1					
ANR	3083554	ExpressionStatement	assert ( rem == left )	339:8:15889:15908	3083505	2	True				
ANR	3083555	CallExpression	assert ( rem == left )		3083505	0					
ANR	3083556	Callee	assert		3083505	0					
ANR	3083557	Identifier	assert		3083505	0					
ANR	3083558	ArgumentList	rem == left		3083505	1					
ANR	3083559	Argument	rem == left		3083505	0					
ANR	3083560	EqualityExpression	rem == left		3083505	0		==			
ANR	3083561	Identifier	rem		3083505	0					
ANR	3083562	Identifier	left		3083505	1					
ANR	3083563	IfStatement	if ( mem > large )		3083505	3					
ANR	3083564	Condition	mem > large	342:12:16002:16012	3083505	0	True				
ANR	3083565	RelationalExpression	mem > large		3083505	0		>			
ANR	3083566	Identifier	mem		3083505	0					
ANR	3083567	Identifier	large		3083505	1					
ANR	3083568	CompoundStatement		20:25:676:676	3083505	1					
ANR	3083569	ExpressionStatement	large = mem	343:12:16029:16040	3083505	0	True				
ANR	3083570	AssignmentExpression	large = mem		3083505	0		=			
ANR	3083571	Identifier	large		3083505	0					
ANR	3083572	Identifier	mem		3083505	1					
ANR	3083573	ExpressionStatement	"printf ( ""max %d: "" , mem )"	344:12:16054:16077	3083505	1	True				
ANR	3083574	CallExpression	"printf ( ""max %d: "" , mem )"		3083505	0					
ANR	3083575	Callee	printf		3083505	0					
ANR	3083576	Identifier	printf		3083505	0					
ANR	3083577	ArgumentList	"""max %d: """		3083505	1					
ANR	3083578	Argument	"""max %d: """		3083505	0					
ANR	3083579	PrimaryExpression	"""max %d: """		3083505	0					
ANR	3083580	Argument	mem		3083505	1					
ANR	3083581	Identifier	mem		3083505	0					
ANR	3083582	ForStatement	for ( use = root + 1 ; use <= max ; use ++ )		3083505	2					
ANR	3083583	ForInit	use = root + 1 ;	345:17:16096:16110	3083505	0	True				
ANR	3083584	AssignmentExpression	use = root + 1		3083505	0		=			
ANR	3083585	Identifier	use		3083505	0					
ANR	3083586	AdditiveExpression	root + 1		3083505	1		+			
ANR	3083587	Identifier	root		3083505	0					
ANR	3083588	PrimaryExpression	1		3083505	1					
ANR	3083589	Condition	use <= max	345:33:16112:16121	3083505	1	True				
ANR	3083590	RelationalExpression	use <= max		3083505	0		<=			
ANR	3083591	Identifier	use		3083505	0					
ANR	3083592	Identifier	max		3083505	1					
ANR	3083593	PostIncDecOperationExpression	use ++	345:45:16124:16128	3083505	2	True				
ANR	3083594	Identifier	use		3083505	0					
ANR	3083595	IncDec	++		3083505	1					
ANR	3083596	IfStatement	if ( code [ use ] )		3083505	3					
ANR	3083597	Condition	code [ use ]	346:20:16151:16159	3083505	0	True				
ANR	3083598	ArrayIndexing	code [ use ]		3083505	0					
ANR	3083599	Identifier	code		3083505	0					
ANR	3083600	Identifier	use		3083505	1					
ANR	3083601	ExpressionStatement	"printf ( ""%d[%d] "" , code [ use ] , use )"	347:20:16182:16215	3083505	1	True				
ANR	3083602	CallExpression	"printf ( ""%d[%d] "" , code [ use ] , use )"		3083505	0					
ANR	3083603	Callee	printf		3083505	0					
ANR	3083604	Identifier	printf		3083505	0					
ANR	3083605	ArgumentList	"""%d[%d] """		3083505	1					
ANR	3083606	Argument	"""%d[%d] """		3083505	0					
ANR	3083607	PrimaryExpression	"""%d[%d] """		3083505	0					
ANR	3083608	Argument	code [ use ]		3083505	1					
ANR	3083609	ArrayIndexing	code [ use ]		3083505	0					
ANR	3083610	Identifier	code		3083505	0					
ANR	3083611	Identifier	use		3083505	1					
ANR	3083612	Argument	use		3083505	2					
ANR	3083613	Identifier	use		3083505	0					
ANR	3083614	ExpressionStatement	putchar ( '\\n' )	348:12:16229:16242	3083505	3	True				
ANR	3083615	CallExpression	putchar ( '\\n' )		3083505	0					
ANR	3083616	Callee	putchar		3083505	0					
ANR	3083617	Identifier	putchar		3083505	0					
ANR	3083618	ArgumentList	'\\n'		3083505	1					
ANR	3083619	Argument	'\\n'		3083505	0					
ANR	3083620	PrimaryExpression	'\\n'		3083505	0					
ANR	3083621	ExpressionStatement	fflush ( stdout )	349:12:16256:16270	3083505	4	True				
ANR	3083622	CallExpression	fflush ( stdout )		3083505	0					
ANR	3083623	Callee	fflush		3083505	0					
ANR	3083624	Identifier	fflush		3083505	0					
ANR	3083625	ArgumentList	stdout		3083505	1					
ANR	3083626	Argument	stdout		3083505	0					
ANR	3083627	Identifier	stdout		3083505	0					
ANR	3083628	ExpressionStatement	code [ len ] = 0	353:8:16358:16371	3083505	4	True				
ANR	3083629	AssignmentExpression	code [ len ] = 0		3083505	0		=			
ANR	3083630	ArrayIndexing	code [ len ]		3083505	0					
ANR	3083631	Identifier	code		3083505	0					
ANR	3083632	Identifier	len		3083505	1					
ANR	3083633	PrimaryExpression	0		3083505	1					
ANR	3083634	ReturnStatement	return ;	354:8:16381:16387	3083505	5	True				
ANR	3083635	IfStatement	"if ( beenhere ( syms , len , left , mem , rem ) )"		3083505	4					
ANR	3083636	Condition	"beenhere ( syms , len , left , mem , rem )"	358:8:16439:16473	3083505	0	True				
ANR	3083637	CallExpression	"beenhere ( syms , len , left , mem , rem )"		3083505	0					
ANR	3083638	Callee	beenhere		3083505	0					
ANR	3083639	Identifier	beenhere		3083505	0					
ANR	3083640	ArgumentList	syms		3083505	1					
ANR	3083641	Argument	syms		3083505	0					
ANR	3083642	Identifier	syms		3083505	0					
ANR	3083643	Argument	len		3083505	1					
ANR	3083644	Identifier	len		3083505	0					
ANR	3083645	Argument	left		3083505	2					
ANR	3083646	Identifier	left		3083505	0					
ANR	3083647	Argument	mem		3083505	3					
ANR	3083648	Identifier	mem		3083505	0					
ANR	3083649	Argument	rem		3083505	4					
ANR	3083650	Identifier	rem		3083505	0					
ANR	3083651	ReturnStatement	return ;	359:8:16484:16490	3083505	1	True				
ANR	3083652	ExpressionStatement	least = ( left << 1 ) - syms	363:4:16650:16676	3083505	5	True				
ANR	3083653	AssignmentExpression	least = ( left << 1 ) - syms		3083505	0		=			
ANR	3083654	Identifier	least		3083505	0					
ANR	3083655	AdditiveExpression	( left << 1 ) - syms		3083505	1		-			
ANR	3083656	ShiftExpression	left << 1		3083505	0		<<			
ANR	3083657	Identifier	left		3083505	0					
ANR	3083658	PrimaryExpression	1		3083505	1					
ANR	3083659	Identifier	syms		3083505	1					
ANR	3083660	IfStatement	if ( least < 0 )		3083505	6					
ANR	3083661	Condition	least < 0	364:8:16686:16694	3083505	0	True				
ANR	3083662	RelationalExpression	least < 0		3083505	0		<			
ANR	3083663	Identifier	least		3083505	0					
ANR	3083664	PrimaryExpression	0		3083505	1					
ANR	3083665	ExpressionStatement	least = 0	365:8:16705:16714	3083505	1	True				
ANR	3083666	AssignmentExpression	least = 0		3083505	0		=			
ANR	3083667	Identifier	least		3083505	0					
ANR	3083668	PrimaryExpression	0		3083505	1					
ANR	3083669	ExpressionStatement	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )	370:4:16951:17043	3083505	7	True				
ANR	3083670	AssignmentExpression	most = ( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		3083505	0		=			
ANR	3083671	Identifier	most		3083505	0					
ANR	3083672	MultiplicativeExpression	( ( ( code_t ) left << ( max - len ) ) - syms ) / ( ( ( code_t ) 1 << ( max - len ) ) - 1 )		3083505	1		/			
ANR	3083673	AdditiveExpression	( ( code_t ) left << ( max - len ) ) - syms		3083505	0		-			
ANR	3083674	ShiftExpression	( code_t ) left << ( max - len )		3083505	0		<<			
ANR	3083675	CastExpression	( code_t ) left		3083505	0					
ANR	3083676	CastTarget	code_t		3083505	0					
ANR	3083677	Identifier	left		3083505	1					
ANR	3083678	AdditiveExpression	max - len		3083505	1		-			
ANR	3083679	Identifier	max		3083505	0					
ANR	3083680	Identifier	len		3083505	1					
ANR	3083681	Identifier	syms		3083505	1					
ANR	3083682	AdditiveExpression	( ( code_t ) 1 << ( max - len ) ) - 1		3083505	1		-			
ANR	3083683	ShiftExpression	( code_t ) 1 << ( max - len )		3083505	0		<<			
ANR	3083684	CastExpression	( code_t ) 1		3083505	0					
ANR	3083685	CastTarget	code_t		3083505	0					
ANR	3083686	PrimaryExpression	1		3083505	1					
ANR	3083687	AdditiveExpression	max - len		3083505	1		-			
ANR	3083688	Identifier	max		3083505	0					
ANR	3083689	Identifier	len		3083505	1					
ANR	3083690	PrimaryExpression	1		3083505	1					
ANR	3083691	ExpressionStatement	use = least	374:4:17121:17132	3083505	8	True				
ANR	3083692	AssignmentExpression	use = least		3083505	0		=			
ANR	3083693	Identifier	use		3083505	0					
ANR	3083694	Identifier	least		3083505	1					
ANR	3083695	WhileStatement	while ( rem < use )		3083505	9					
ANR	3083696	Condition	rem < use	375:11:17145:17153	3083505	0	True				
ANR	3083697	RelationalExpression	rem < use		3083505	0		<			
ANR	3083698	Identifier	rem		3083505	0					
ANR	3083699	Identifier	use		3083505	1					
ANR	3083700	CompoundStatement		53:22:1817:1817	3083505	1					
ANR	3083701	ExpressionStatement	use -= rem	376:8:17166:17176	3083505	0	True				
ANR	3083702	AssignmentExpression	use -= rem		3083505	0		-=			
ANR	3083703	Identifier	use		3083505	0					
ANR	3083704	Identifier	rem		3083505	1					
ANR	3083705	ExpressionStatement	rem = 1 << ( len - root )	377:8:17186:17209	3083505	1	True				
ANR	3083706	AssignmentExpression	rem = 1 << ( len - root )		3083505	0		=			
ANR	3083707	Identifier	rem		3083505	0					
ANR	3083708	ShiftExpression	1 << ( len - root )		3083505	1		<<			
ANR	3083709	PrimaryExpression	1		3083505	0					
ANR	3083710	AdditiveExpression	len - root		3083505	1		-			
ANR	3083711	Identifier	len		3083505	0					
ANR	3083712	Identifier	root		3083505	1					
ANR	3083713	ExpressionStatement	mem += rem	378:8:17219:17229	3083505	2	True				
ANR	3083714	AssignmentExpression	mem += rem		3083505	0		+=			
ANR	3083715	Identifier	mem		3083505	0					
ANR	3083716	Identifier	rem		3083505	1					
ANR	3083717	ExpressionStatement	rem -= use	380:4:17241:17251	3083505	10	True				
ANR	3083718	AssignmentExpression	rem -= use		3083505	0		-=			
ANR	3083719	Identifier	rem		3083505	0					
ANR	3083720	Identifier	use		3083505	1					
ANR	3083721	ForStatement	for ( use = least ; use <= most ; use ++ )		3083505	11					
ANR	3083722	ForInit	use = least ;	383:9:17328:17339	3083505	0	True				
ANR	3083723	AssignmentExpression	use = least		3083505	0		=			
ANR	3083724	Identifier	use		3083505	0					
ANR	3083725	Identifier	least		3083505	1					
ANR	3083726	Condition	use <= most	383:22:17341:17351	3083505	1	True				
ANR	3083727	RelationalExpression	use <= most		3083505	0		<=			
ANR	3083728	Identifier	use		3083505	0					
ANR	3083729	Identifier	most		3083505	1					
ANR	3083730	PostIncDecOperationExpression	use ++	383:35:17354:17358	3083505	2	True				
ANR	3083731	Identifier	use		3083505	0					
ANR	3083732	IncDec	++		3083505	1					
ANR	3083733	CompoundStatement		61:42:2022:2022	3083505	3					
ANR	3083734	ExpressionStatement	code [ len ] = use	384:8:17371:17386	3083505	0	True				
ANR	3083735	AssignmentExpression	code [ len ] = use		3083505	0		=			
ANR	3083736	ArrayIndexing	code [ len ]		3083505	0					
ANR	3083737	Identifier	code		3083505	0					
ANR	3083738	Identifier	len		3083505	1					
ANR	3083739	Identifier	use		3083505	1					
ANR	3083740	ExpressionStatement	"examine ( syms - use , len + 1 , ( left - use ) << 1 , mem + ( rem ? 1 << ( len - root ) : 0 ) , rem << 1 )"	385:8:17396:17506	3083505	1	True				
ANR	3083741	CallExpression	"examine ( syms - use , len + 1 , ( left - use ) << 1 , mem + ( rem ? 1 << ( len - root ) : 0 ) , rem << 1 )"		3083505	0					
ANR	3083742	Callee	examine		3083505	0					
ANR	3083743	Identifier	examine		3083505	0					
ANR	3083744	ArgumentList	syms - use		3083505	1					
ANR	3083745	Argument	syms - use		3083505	0					
ANR	3083746	AdditiveExpression	syms - use		3083505	0		-			
ANR	3083747	Identifier	syms		3083505	0					
ANR	3083748	Identifier	use		3083505	1					
ANR	3083749	Argument	len + 1		3083505	1					
ANR	3083750	AdditiveExpression	len + 1		3083505	0		+			
ANR	3083751	Identifier	len		3083505	0					
ANR	3083752	PrimaryExpression	1		3083505	1					
ANR	3083753	Argument	( left - use ) << 1		3083505	2					
ANR	3083754	ShiftExpression	( left - use ) << 1		3083505	0		<<			
ANR	3083755	AdditiveExpression	left - use		3083505	0		-			
ANR	3083756	Identifier	left		3083505	0					
ANR	3083757	Identifier	use		3083505	1					
ANR	3083758	PrimaryExpression	1		3083505	1					
ANR	3083759	Argument	mem + ( rem ? 1 << ( len - root ) : 0 )		3083505	3					
ANR	3083760	AdditiveExpression	mem + ( rem ? 1 << ( len - root ) : 0 )		3083505	0		+			
ANR	3083761	Identifier	mem		3083505	0					
ANR	3083762	ConditionalExpression	rem ? 1 << ( len - root ) : 0		3083505	1					
ANR	3083763	Condition	rem		3083505	0					
ANR	3083764	Identifier	rem		3083505	0					
ANR	3083765	ShiftExpression	1 << ( len - root )		3083505	1		<<			
ANR	3083766	PrimaryExpression	1		3083505	0					
ANR	3083767	AdditiveExpression	len - root		3083505	1		-			
ANR	3083768	Identifier	len		3083505	0					
ANR	3083769	Identifier	root		3083505	1					
ANR	3083770	PrimaryExpression	0		3083505	2					
ANR	3083771	Argument	rem << 1		3083505	4					
ANR	3083772	ShiftExpression	rem << 1		3083505	0		<<			
ANR	3083773	Identifier	rem		3083505	0					
ANR	3083774	PrimaryExpression	1		3083505	1					
ANR	3083775	IfStatement	if ( rem == 0 )		3083505	2					
ANR	3083776	Condition	rem == 0	387:12:17520:17527	3083505	0	True				
ANR	3083777	EqualityExpression	rem == 0		3083505	0		==			
ANR	3083778	Identifier	rem		3083505	0					
ANR	3083779	PrimaryExpression	0		3083505	1					
ANR	3083780	CompoundStatement		65:22:2191:2191	3083505	1					
ANR	3083781	ExpressionStatement	rem = 1 << ( len - root )	388:12:17544:17567	3083505	0	True				
ANR	3083782	AssignmentExpression	rem = 1 << ( len - root )		3083505	0		=			
ANR	3083783	Identifier	rem		3083505	0					
ANR	3083784	ShiftExpression	1 << ( len - root )		3083505	1		<<			
ANR	3083785	PrimaryExpression	1		3083505	0					
ANR	3083786	AdditiveExpression	len - root		3083505	1		-			
ANR	3083787	Identifier	len		3083505	0					
ANR	3083788	Identifier	root		3083505	1					
ANR	3083789	ExpressionStatement	mem += rem	389:12:17581:17591	3083505	1	True				
ANR	3083790	AssignmentExpression	mem += rem		3083505	0		+=			
ANR	3083791	Identifier	mem		3083505	0					
ANR	3083792	Identifier	rem		3083505	1					
ANR	3083793	ExpressionStatement	rem --	391:8:17611:17616	3083505	3	True				
ANR	3083794	PostIncDecOperationExpression	rem --		3083505	0					
ANR	3083795	Identifier	rem		3083505	0					
ANR	3083796	IncDec	--		3083505	1					
ANR	3083797	ExpressionStatement	code [ len ] = 0	395:4:17692:17705	3083505	12	True				
ANR	3083798	AssignmentExpression	code [ len ] = 0		3083505	0		=			
ANR	3083799	ArrayIndexing	code [ len ]		3083505	0					
ANR	3083800	Identifier	code		3083505	0					
ANR	3083801	Identifier	len		3083505	1					
ANR	3083802	PrimaryExpression	0		3083505	1					
ANR	3083803	ReturnType	local void		3083505	1					
ANR	3083804	Identifier	examine		3083505	2					
ANR	3083805	ParameterList	"int syms , int len , int left , int mem , int rem"		3083505	3					
ANR	3083806	Parameter	int syms	322:19:15291:15298	3083505	0	True				
ANR	3083807	ParameterType	int		3083505	0					
ANR	3083808	Identifier	syms		3083505	1					
ANR	3083809	Parameter	int len	322:29:15301:15307	3083505	1	True				
ANR	3083810	ParameterType	int		3083505	0					
ANR	3083811	Identifier	len		3083505	1					
ANR	3083812	Parameter	int left	322:38:15310:15317	3083505	2	True				
ANR	3083813	ParameterType	int		3083505	0					
ANR	3083814	Identifier	left		3083505	1					
ANR	3083815	Parameter	int mem	322:48:15320:15326	3083505	3	True				
ANR	3083816	ParameterType	int		3083505	0					
ANR	3083817	Identifier	mem		3083505	1					
ANR	3083818	Parameter	int rem	322:57:15329:15335	3083505	4	True				
ANR	3083819	ParameterType	int		3083505	0					
ANR	3083820	Identifier	rem		3083505	1					
ANR	3083821	CFGEntryNode	ENTRY		3083505		True				
ANR	3083822	CFGExitNode	EXIT		3083505		True				
ANR	3083823	Symbol	code		3083505						
ANR	3083824	Symbol	large		3083505						
ANR	3083825	Symbol	stdout		3083505						
ANR	3083826	Symbol	max		3083505						
ANR	3083827	Symbol	use		3083505						
ANR	3083828	Symbol	least		3083505						
ANR	3083829	Symbol	most		3083505						
ANR	3083830	Symbol	* use		3083505						
ANR	3083831	Symbol	len		3083505						
ANR	3083832	Symbol	mem		3083505						
ANR	3083833	Symbol	left		3083505						
ANR	3083834	Symbol	root		3083505						
ANR	3083835	Symbol	syms		3083505						
ANR	3083836	Symbol	rem		3083505						
ANR	3083837	Symbol	beenhere		3083505						
ANR	3083838	Symbol	* code		3083505						
ANR	3083839	Symbol	* len		3083505						
ANR	3083840	Function	enough	403:0:18081:19411							
ANR	3083841	FunctionDef	enough (int syms)		3083840	0					
ANR	3083842	CompoundStatement		404:0:18109:19411	3083840	0					
ANR	3083843	IdentifierDeclStatement	int n ;	405:4:18115:18120	3083840	0	True				
ANR	3083844	IdentifierDecl	n		3083840	0					
ANR	3083845	IdentifierDeclType	int		3083840	0					
ANR	3083846	Identifier	n		3083840	1					
ANR	3083847	IdentifierDeclStatement	int left ;	406:4:18185:18193	3083840	1	True				
ANR	3083848	IdentifierDecl	left		3083840	0					
ANR	3083849	IdentifierDeclType	int		3083840	0					
ANR	3083850	Identifier	left		3083840	1					
ANR	3083851	IdentifierDeclStatement	size_t index ;	407:4:18260:18272	3083840	2	True				
ANR	3083852	IdentifierDecl	index		3083840	0					
ANR	3083853	IdentifierDeclType	size_t		3083840	0					
ANR	3083854	Identifier	index		3083840	1					
ANR	3083855	ForStatement	for ( n = 0 ; n <= max ; n ++ )		3083840	3					
ANR	3083856	ForInit	n = 0 ;	410:9:18344:18349	3083840	0	True				
ANR	3083857	AssignmentExpression	n = 0		3083840	0		=			
ANR	3083858	Identifier	n		3083840	0					
ANR	3083859	PrimaryExpression	0		3083840	1					
ANR	3083860	Condition	n <= max	410:16:18351:18358	3083840	1	True				
ANR	3083861	RelationalExpression	n <= max		3083840	0		<=			
ANR	3083862	Identifier	n		3083840	0					
ANR	3083863	Identifier	max		3083840	1					
ANR	3083864	PostIncDecOperationExpression	n ++	410:26:18361:18363	3083840	2	True				
ANR	3083865	Identifier	n		3083840	0					
ANR	3083866	IncDec	++		3083840	1					
ANR	3083867	ExpressionStatement	code [ n ] = 0	411:8:18374:18385	3083840	3	True				
ANR	3083868	AssignmentExpression	code [ n ] = 0		3083840	0		=			
ANR	3083869	ArrayIndexing	code [ n ]		3083840	0					
ANR	3083870	Identifier	code		3083840	0					
ANR	3083871	Identifier	n		3083840	1					
ANR	3083872	PrimaryExpression	0		3083840	1					
ANR	3083873	ExpressionStatement	large = 1 << root	414:4:18446:18463	3083840	4	True				
ANR	3083874	AssignmentExpression	large = 1 << root		3083840	0		=			
ANR	3083875	Identifier	large		3083840	0					
ANR	3083876	ShiftExpression	1 << root		3083840	1		<<			
ANR	3083877	PrimaryExpression	1		3083840	0					
ANR	3083878	Identifier	root		3083840	1					
ANR	3083879	IfStatement	if ( root < max )		3083840	5					
ANR	3083880	Condition	root < max	415:8:18503:18512	3083840	0	True				
ANR	3083881	RelationalExpression	root < max		3083840	0		<			
ANR	3083882	Identifier	root		3083840	0					
ANR	3083883	Identifier	max		3083840	1					
ANR	3083884	ForStatement	for ( n = 3 ; n <= syms ; n ++ )		3083840	1					
ANR	3083885	ForInit	n = 3 ;	416:13:18587:18592	3083840	0	True				
ANR	3083886	AssignmentExpression	n = 3		3083840	0		=			
ANR	3083887	Identifier	n		3083840	0					
ANR	3083888	PrimaryExpression	3		3083840	1					
ANR	3083889	Condition	n <= syms	416:20:18594:18602	3083840	1	True				
ANR	3083890	RelationalExpression	n <= syms		3083840	0		<=			
ANR	3083891	Identifier	n		3083840	0					
ANR	3083892	Identifier	syms		3083840	1					
ANR	3083893	PostIncDecOperationExpression	n ++	416:31:18605:18607	3083840	2	True				
ANR	3083894	Identifier	n		3083840	0					
ANR	3083895	IncDec	++		3083840	1					
ANR	3083896	ForStatement	for ( left = 2 ; left < n ; left += 2 )		3083840	3					
ANR	3083897	ForInit	left = 2 ;	417:17:18627:18635	3083840	0	True				
ANR	3083898	AssignmentExpression	left = 2		3083840	0		=			
ANR	3083899	Identifier	left		3083840	0					
ANR	3083900	PrimaryExpression	2		3083840	1					
ANR	3083901	Condition	left < n	417:27:18637:18644	3083840	1	True				
ANR	3083902	RelationalExpression	left < n		3083840	0		<			
ANR	3083903	Identifier	left		3083840	0					
ANR	3083904	Identifier	n		3083840	1					
ANR	3083905	AssignmentExpression	left += 2	417:37:18647:18655	3083840	2	True	+=			
ANR	3083906	Identifier	left		3083840	0					
ANR	3083907	PrimaryExpression	2		3083840	1					
ANR	3083908	CompoundStatement		15:12:560:560	3083840	3					
ANR	3083909	ExpressionStatement	"index = INDEX ( n , left , root + 1 )"	421:16:18828:18860	3083840	0	True				
ANR	3083910	AssignmentExpression	"index = INDEX ( n , left , root + 1 )"		3083840	0		=			
ANR	3083911	Identifier	index		3083840	0					
ANR	3083912	CallExpression	"INDEX ( n , left , root + 1 )"		3083840	1					
ANR	3083913	Callee	INDEX		3083840	0					
ANR	3083914	Identifier	INDEX		3083840	0					
ANR	3083915	ArgumentList	n		3083840	1					
ANR	3083916	Argument	n		3083840	0					
ANR	3083917	Identifier	n		3083840	0					
ANR	3083918	Argument	left		3083840	1					
ANR	3083919	Identifier	left		3083840	0					
ANR	3083920	Argument	root + 1		3083840	2					
ANR	3083921	AdditiveExpression	root + 1		3083840	0		+			
ANR	3083922	Identifier	root		3083840	0					
ANR	3083923	PrimaryExpression	1		3083840	1					
ANR	3083924	IfStatement	if ( root + 1 < max && num [ index ] )		3083840	1					
ANR	3083925	Condition	root + 1 < max && num [ index ]	422:20:18882:18909	3083840	0	True				
ANR	3083926	AndExpression	root + 1 < max && num [ index ]		3083840	0		&&			
ANR	3083927	RelationalExpression	root + 1 < max		3083840	0		<			
ANR	3083928	AdditiveExpression	root + 1		3083840	0		+			
ANR	3083929	Identifier	root		3083840	0					
ANR	3083930	PrimaryExpression	1		3083840	1					
ANR	3083931	Identifier	max		3083840	1					
ANR	3083932	ArrayIndexing	num [ index ]		3083840	1					
ANR	3083933	Identifier	num		3083840	0					
ANR	3083934	Identifier	index		3083840	1					
ANR	3083935	ExpressionStatement	"examine ( n , root + 1 , left , 1 << root , 0 )"	423:20:18959:18999	3083840	1	True				
ANR	3083936	CallExpression	"examine ( n , root + 1 , left , 1 << root , 0 )"		3083840	0					
ANR	3083937	Callee	examine		3083840	0					
ANR	3083938	Identifier	examine		3083840	0					
ANR	3083939	ArgumentList	n		3083840	1					
ANR	3083940	Argument	n		3083840	0					
ANR	3083941	Identifier	n		3083840	0					
ANR	3083942	Argument	root + 1		3083840	1					
ANR	3083943	AdditiveExpression	root + 1		3083840	0		+			
ANR	3083944	Identifier	root		3083840	0					
ANR	3083945	PrimaryExpression	1		3083840	1					
ANR	3083946	Argument	left		3083840	2					
ANR	3083947	Identifier	left		3083840	0					
ANR	3083948	Argument	1 << root		3083840	3					
ANR	3083949	ShiftExpression	1 << root		3083840	0		<<			
ANR	3083950	PrimaryExpression	1		3083840	0					
ANR	3083951	Identifier	root		3083840	1					
ANR	3083952	Argument	0		3083840	4					
ANR	3083953	PrimaryExpression	0		3083840	0					
ANR	3083954	IfStatement	if ( num [ index - 1 ] && n <= left << 1 )		3083840	2					
ANR	3083955	Condition	num [ index - 1 ] && n <= left << 1	427:20:19174:19205	3083840	0	True				
ANR	3083956	AndExpression	num [ index - 1 ] && n <= left << 1		3083840	0		&&			
ANR	3083957	ArrayIndexing	num [ index - 1 ]		3083840	0					
ANR	3083958	Identifier	num		3083840	0					
ANR	3083959	AdditiveExpression	index - 1		3083840	1		-			
ANR	3083960	Identifier	index		3083840	0					
ANR	3083961	PrimaryExpression	1		3083840	1					
ANR	3083962	RelationalExpression	n <= left << 1		3083840	1		<=			
ANR	3083963	Identifier	n		3083840	0					
ANR	3083964	ShiftExpression	left << 1		3083840	1		<<			
ANR	3083965	Identifier	left		3083840	0					
ANR	3083966	PrimaryExpression	1		3083840	1					
ANR	3083967	ExpressionStatement	"examine ( ( n - left ) << 1 , root + 1 , ( n - left ) << 1 , 1 << root , 0 )"	428:20:19228:19321	3083840	1	True				
ANR	3083968	CallExpression	"examine ( ( n - left ) << 1 , root + 1 , ( n - left ) << 1 , 1 << root , 0 )"		3083840	0					
ANR	3083969	Callee	examine		3083840	0					
ANR	3083970	Identifier	examine		3083840	0					
ANR	3083971	ArgumentList	( n - left ) << 1		3083840	1					
ANR	3083972	Argument	( n - left ) << 1		3083840	0					
ANR	3083973	ShiftExpression	( n - left ) << 1		3083840	0		<<			
ANR	3083974	AdditiveExpression	n - left		3083840	0		-			
ANR	3083975	Identifier	n		3083840	0					
ANR	3083976	Identifier	left		3083840	1					
ANR	3083977	PrimaryExpression	1		3083840	1					
ANR	3083978	Argument	root + 1		3083840	1					
ANR	3083979	AdditiveExpression	root + 1		3083840	0		+			
ANR	3083980	Identifier	root		3083840	0					
ANR	3083981	PrimaryExpression	1		3083840	1					
ANR	3083982	Argument	( n - left ) << 1		3083840	2					
ANR	3083983	ShiftExpression	( n - left ) << 1		3083840	0		<<			
ANR	3083984	AdditiveExpression	n - left		3083840	0		-			
ANR	3083985	Identifier	n		3083840	0					
ANR	3083986	Identifier	left		3083840	1					
ANR	3083987	PrimaryExpression	1		3083840	1					
ANR	3083988	Argument	1 << root		3083840	3					
ANR	3083989	ShiftExpression	1 << root		3083840	0		<<			
ANR	3083990	PrimaryExpression	1		3083840	0					
ANR	3083991	Identifier	root		3083840	1					
ANR	3083992	Argument	0		3083840	4					
ANR	3083993	PrimaryExpression	0		3083840	0					
ANR	3083994	ExpressionStatement	"printf ( ""done: maximum of %d table entries\\n"" , large )"	433:4:19357:19409	3083840	6	True				
ANR	3083995	CallExpression	"printf ( ""done: maximum of %d table entries\\n"" , large )"		3083840	0					
ANR	3083996	Callee	printf		3083840	0					
ANR	3083997	Identifier	printf		3083840	0					
ANR	3083998	ArgumentList	"""done: maximum of %d table entries\\n"""		3083840	1					
ANR	3083999	Argument	"""done: maximum of %d table entries\\n"""		3083840	0					
ANR	3084000	PrimaryExpression	"""done: maximum of %d table entries\\n"""		3083840	0					
ANR	3084001	Argument	large		3083840	1					
ANR	3084002	Identifier	large		3083840	0					
ANR	3084003	ReturnType	local void		3083840	1					
ANR	3084004	Identifier	enough		3083840	2					
ANR	3084005	ParameterList	int syms		3083840	3					
ANR	3084006	Parameter	int syms	403:18:18099:18106	3083840	0	True				
ANR	3084007	ParameterType	int		3083840	0					
ANR	3084008	Identifier	syms		3083840	1					
ANR	3084009	CFGEntryNode	ENTRY		3083840		True				
ANR	3084010	CFGExitNode	EXIT		3083840		True				
ANR	3084011	Symbol	code		3083840						
ANR	3084012	Symbol	large		3083840						
ANR	3084013	Symbol	max		3083840						
ANR	3084014	Symbol	num		3083840						
ANR	3084015	Symbol	* index		3083840						
ANR	3084016	Symbol	index		3083840						
ANR	3084017	Symbol	n		3083840						
ANR	3084018	Symbol	* num		3083840						
ANR	3084019	Symbol	left		3083840						
ANR	3084020	Symbol	root		3083840						
ANR	3084021	Symbol	* n		3083840						
ANR	3084022	Symbol	syms		3083840						
ANR	3084023	Symbol	INDEX		3083840						
ANR	3084024	Symbol	* code		3083840						
ANR	3084025	Function	main	458:0:20604:24336							
ANR	3084026	FunctionDef	"main (int argc , char * * argv)"		3084025	0					
ANR	3084027	CompoundStatement		459:0:20636:24336	3084025	0					
ANR	3084028	IdentifierDeclStatement	int syms ;	460:4:20642:20650	3084025	0	True				
ANR	3084029	IdentifierDecl	syms		3084025	0					
ANR	3084030	IdentifierDeclType	int		3084025	0					
ANR	3084031	Identifier	syms		3084025	1					
ANR	3084032	IdentifierDeclStatement	int n ;	461:4:20704:20709	3084025	1	True				
ANR	3084033	IdentifierDecl	n		3084025	0					
ANR	3084034	IdentifierDeclType	int		3084025	0					
ANR	3084035	Identifier	n		3084025	1					
ANR	3084036	IdentifierDeclStatement	big_t got ;	462:4:20773:20782	3084025	2	True				
ANR	3084037	IdentifierDecl	got		3084025	0					
ANR	3084038	IdentifierDeclType	big_t		3084025	0					
ANR	3084039	Identifier	got		3084025	1					
ANR	3084040	IdentifierDeclStatement	big_t sum ;	463:4:20827:20836	3084025	3	True				
ANR	3084041	IdentifierDecl	sum		3084025	0					
ANR	3084042	IdentifierDeclType	big_t		3084025	0					
ANR	3084043	Identifier	sum		3084025	1					
ANR	3084044	IdentifierDeclStatement	code_t word ;	464:4:20892:20903	3084025	4	True				
ANR	3084045	IdentifierDecl	word		3084025	0					
ANR	3084046	IdentifierDeclType	code_t		3084025	0					
ANR	3084047	Identifier	word		3084025	1					
ANR	3084048	ExpressionStatement	code = NULL	467:4:20990:21001	3084025	5	True				
ANR	3084049	AssignmentExpression	code = NULL		3084025	0		=			
ANR	3084050	Identifier	code		3084025	0					
ANR	3084051	Identifier	NULL		3084025	1					
ANR	3084052	ExpressionStatement	num = NULL	468:4:21007:21017	3084025	6	True				
ANR	3084053	AssignmentExpression	num = NULL		3084025	0		=			
ANR	3084054	Identifier	num		3084025	0					
ANR	3084055	Identifier	NULL		3084025	1					
ANR	3084056	ExpressionStatement	done = NULL	469:4:21023:21034	3084025	7	True				
ANR	3084057	AssignmentExpression	done = NULL		3084025	0		=			
ANR	3084058	Identifier	done		3084025	0					
ANR	3084059	Identifier	NULL		3084025	1					
ANR	3084060	ExpressionStatement	syms = 286	472:4:21111:21121	3084025	8	True				
ANR	3084061	AssignmentExpression	syms = 286		3084025	0		=			
ANR	3084062	Identifier	syms		3084025	0					
ANR	3084063	PrimaryExpression	286		3084025	1					
ANR	3084064	ExpressionStatement	root = 9	473:4:21127:21135	3084025	9	True				
ANR	3084065	AssignmentExpression	root = 9		3084025	0		=			
ANR	3084066	Identifier	root		3084025	0					
ANR	3084067	PrimaryExpression	9		3084025	1					
ANR	3084068	ExpressionStatement	max = 15	474:4:21141:21149	3084025	10	True				
ANR	3084069	AssignmentExpression	max = 15		3084025	0		=			
ANR	3084070	Identifier	max		3084025	0					
ANR	3084071	PrimaryExpression	15		3084025	1					
ANR	3084072	IfStatement	if ( argc > 1 )		3084025	11					
ANR	3084073	Condition	argc > 1	475:8:21159:21166	3084025	0	True				
ANR	3084074	RelationalExpression	argc > 1		3084025	0		>			
ANR	3084075	Identifier	argc		3084025	0					
ANR	3084076	PrimaryExpression	1		3084025	1					
ANR	3084077	CompoundStatement		17:18:532:532	3084025	1					
ANR	3084078	ExpressionStatement	syms = atoi ( argv [ 1 ] )	476:8:21179:21199	3084025	0	True				
ANR	3084079	AssignmentExpression	syms = atoi ( argv [ 1 ] )		3084025	0		=			
ANR	3084080	Identifier	syms		3084025	0					
ANR	3084081	CallExpression	atoi ( argv [ 1 ] )		3084025	1					
ANR	3084082	Callee	atoi		3084025	0					
ANR	3084083	Identifier	atoi		3084025	0					
ANR	3084084	ArgumentList	argv [ 1 ]		3084025	1					
ANR	3084085	Argument	argv [ 1 ]		3084025	0					
ANR	3084086	ArrayIndexing	argv [ 1 ]		3084025	0					
ANR	3084087	Identifier	argv		3084025	0					
ANR	3084088	PrimaryExpression	1		3084025	1					
ANR	3084089	IfStatement	if ( argc > 2 )		3084025	1					
ANR	3084090	Condition	argc > 2	477:12:21213:21220	3084025	0	True				
ANR	3084091	RelationalExpression	argc > 2		3084025	0		>			
ANR	3084092	Identifier	argc		3084025	0					
ANR	3084093	PrimaryExpression	2		3084025	1					
ANR	3084094	CompoundStatement		19:22:586:586	3084025	1					
ANR	3084095	ExpressionStatement	root = atoi ( argv [ 2 ] )	478:12:21237:21257	3084025	0	True				
ANR	3084096	AssignmentExpression	root = atoi ( argv [ 2 ] )		3084025	0		=			
ANR	3084097	Identifier	root		3084025	0					
ANR	3084098	CallExpression	atoi ( argv [ 2 ] )		3084025	1					
ANR	3084099	Callee	atoi		3084025	0					
ANR	3084100	Identifier	atoi		3084025	0					
ANR	3084101	ArgumentList	argv [ 2 ]		3084025	1					
ANR	3084102	Argument	argv [ 2 ]		3084025	0					
ANR	3084103	ArrayIndexing	argv [ 2 ]		3084025	0					
ANR	3084104	Identifier	argv		3084025	0					
ANR	3084105	PrimaryExpression	2		3084025	1					
ANR	3084106	IfStatement	if ( argc > 3 )		3084025	1					
ANR	3084107	Condition	argc > 3	479:16:21275:21282	3084025	0	True				
ANR	3084108	RelationalExpression	argc > 3		3084025	0		>			
ANR	3084109	Identifier	argc		3084025	0					
ANR	3084110	PrimaryExpression	3		3084025	1					
ANR	3084111	ExpressionStatement	max = atoi ( argv [ 3 ] )	480:16:21301:21320	3084025	1	True				
ANR	3084112	AssignmentExpression	max = atoi ( argv [ 3 ] )		3084025	0		=			
ANR	3084113	Identifier	max		3084025	0					
ANR	3084114	CallExpression	atoi ( argv [ 3 ] )		3084025	1					
ANR	3084115	Callee	atoi		3084025	0					
ANR	3084116	Identifier	atoi		3084025	0					
ANR	3084117	ArgumentList	argv [ 3 ]		3084025	1					
ANR	3084118	Argument	argv [ 3 ]		3084025	0					
ANR	3084119	ArrayIndexing	argv [ 3 ]		3084025	0					
ANR	3084120	Identifier	argv		3084025	0					
ANR	3084121	PrimaryExpression	3		3084025	1					
ANR	3084122	IfStatement	if ( argc > 4 || syms < 2 || root < 1 || max < 1 )		3084025	12					
ANR	3084123	Condition	argc > 4 || syms < 2 || root < 1 || max < 1	483:8:21346:21388	3084025	0	True				
ANR	3084124	OrExpression	argc > 4 || syms < 2 || root < 1 || max < 1		3084025	0		||			
ANR	3084125	RelationalExpression	argc > 4		3084025	0		>			
ANR	3084126	Identifier	argc		3084025	0					
ANR	3084127	PrimaryExpression	4		3084025	1					
ANR	3084128	OrExpression	syms < 2 || root < 1 || max < 1		3084025	1		||			
ANR	3084129	RelationalExpression	syms < 2		3084025	0		<			
ANR	3084130	Identifier	syms		3084025	0					
ANR	3084131	PrimaryExpression	2		3084025	1					
ANR	3084132	OrExpression	root < 1 || max < 1		3084025	1		||			
ANR	3084133	RelationalExpression	root < 1		3084025	0		<			
ANR	3084134	Identifier	root		3084025	0					
ANR	3084135	PrimaryExpression	1		3084025	1					
ANR	3084136	RelationalExpression	max < 1		3084025	1		<			
ANR	3084137	Identifier	max		3084025	0					
ANR	3084138	PrimaryExpression	1		3084025	1					
ANR	3084139	CompoundStatement		25:53:754:754	3084025	1					
ANR	3084140	ExpressionStatement	"fputs ( ""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"" , stderr )"	484:8:21401:21492	3084025	0	True				
ANR	3084141	CallExpression	"fputs ( ""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"" , stderr )"		3084025	0					
ANR	3084142	Callee	fputs		3084025	0					
ANR	3084143	Identifier	fputs		3084025	0					
ANR	3084144	ArgumentList	"""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"""		3084025	1					
ANR	3084145	Argument	"""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"""		3084025	0					
ANR	3084146	PrimaryExpression	"""invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n"""		3084025	0					
ANR	3084147	Argument	stderr		3084025	1					
ANR	3084148	Identifier	stderr		3084025	0					
ANR	3084149	ReturnStatement	return 1 ;	486:8:21502:21510	3084025	1	True				
ANR	3084150	PrimaryExpression	1		3084025	0					
ANR	3084151	IfStatement	if ( max > syms - 1 )		3084025	13					
ANR	3084152	Condition	max > syms - 1	490:8:21597:21610	3084025	0	True				
ANR	3084153	RelationalExpression	max > syms - 1		3084025	0		>			
ANR	3084154	Identifier	max		3084025	0					
ANR	3084155	AdditiveExpression	syms - 1		3084025	1		-			
ANR	3084156	Identifier	syms		3084025	0					
ANR	3084157	PrimaryExpression	1		3084025	1					
ANR	3084158	ExpressionStatement	max = syms - 1	491:8:21621:21635	3084025	1	True				
ANR	3084159	AssignmentExpression	max = syms - 1		3084025	0		=			
ANR	3084160	Identifier	max		3084025	0					
ANR	3084161	AdditiveExpression	syms - 1		3084025	1		-			
ANR	3084162	Identifier	syms		3084025	0					
ANR	3084163	PrimaryExpression	1		3084025	1					
ANR	3084164	ForStatement	"for ( n = 0 , word = 1 ; word ; n ++ , word <<= 1 )"		3084025	14					
ANR	3084165	ForInit	"n = 0 , word = 1 ;"	494:9:21698:21713	3084025	0	True				
ANR	3084166	Expression	"n = 0 , word = 1"		3084025	0					
ANR	3084167	AssignmentExpression	n = 0		3084025	0		=			
ANR	3084168	Identifier	n		3084025	0					
ANR	3084169	PrimaryExpression	0		3084025	1					
ANR	3084170	AssignmentExpression	word = 1		3084025	1		=			
ANR	3084171	Identifier	word		3084025	0					
ANR	3084172	PrimaryExpression	1		3084025	1					
ANR	3084173	Condition	word	494:26:21715:21718	3084025	1	True				
ANR	3084174	Identifier	word		3084025	0					
ANR	3084175	Expression	"n ++ , word <<= 1"	494:32:21721:21735	3084025	2	True				
ANR	3084176	PostIncDecOperationExpression	n ++		3084025	0					
ANR	3084177	Identifier	n		3084025	0					
ANR	3084178	IncDec	++		3084025	1					
ANR	3084179	AssignmentExpression	word <<= 1		3084025	1		<<=			
ANR	3084180	Identifier	word		3084025	0					
ANR	3084181	PrimaryExpression	1		3084025	1					
ANR	3084182	ExpressionStatement		495:8:21746:21746	3084025	3	True				
ANR	3084183	IfStatement	if ( max > n || ( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) ) )		3084025	15					
ANR	3084184	Condition	max > n || ( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) )	498:8:21824:21886	3084025	0	True				
ANR	3084185	OrExpression	max > n || ( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) )		3084025	0		||			
ANR	3084186	RelationalExpression	max > n		3084025	0		>			
ANR	3084187	Identifier	max		3084025	0					
ANR	3084188	Identifier	n		3084025	1					
ANR	3084189	RelationalExpression	( code_t ) ( syms - 2 ) >= ( ( ( code_t ) 0 - 1 ) >> ( max - 1 ) )		3084025	1		>=			
ANR	3084190	CastExpression	( code_t ) ( syms - 2 )		3084025	0					
ANR	3084191	CastTarget	code_t		3084025	0					
ANR	3084192	AdditiveExpression	syms - 2		3084025	1		-			
ANR	3084193	Identifier	syms		3084025	0					
ANR	3084194	PrimaryExpression	2		3084025	1					
ANR	3084195	ShiftExpression	( ( code_t ) 0 - 1 ) >> ( max - 1 )		3084025	1		>>			
ANR	3084196	AdditiveExpression	( code_t ) 0 - 1		3084025	0		-			
ANR	3084197	CastExpression	( code_t ) 0		3084025	0					
ANR	3084198	CastTarget	code_t		3084025	0					
ANR	3084199	PrimaryExpression	0		3084025	1					
ANR	3084200	PrimaryExpression	1		3084025	1					
ANR	3084201	AdditiveExpression	max - 1		3084025	1		-			
ANR	3084202	Identifier	max		3084025	0					
ANR	3084203	PrimaryExpression	1		3084025	1					
ANR	3084204	CompoundStatement		40:73:1252:1252	3084025	1					
ANR	3084205	ExpressionStatement	"fputs ( ""abort: code length too long for internal types\\n"" , stderr )"	499:8:21899:21964	3084025	0	True				
ANR	3084206	CallExpression	"fputs ( ""abort: code length too long for internal types\\n"" , stderr )"		3084025	0					
ANR	3084207	Callee	fputs		3084025	0					
ANR	3084208	Identifier	fputs		3084025	0					
ANR	3084209	ArgumentList	"""abort: code length too long for internal types\\n"""		3084025	1					
ANR	3084210	Argument	"""abort: code length too long for internal types\\n"""		3084025	0					
ANR	3084211	PrimaryExpression	"""abort: code length too long for internal types\\n"""		3084025	0					
ANR	3084212	Argument	stderr		3084025	1					
ANR	3084213	Identifier	stderr		3084025	0					
ANR	3084214	ReturnStatement	return 1 ;	500:8:21974:21982	3084025	1	True				
ANR	3084215	PrimaryExpression	1		3084025	0					
ANR	3084216	IfStatement	if ( ( code_t ) ( syms - 1 ) > ( ( code_t ) 1 << max ) - 1 )		3084025	16					
ANR	3084217	Condition	( code_t ) ( syms - 1 ) > ( ( code_t ) 1 << max ) - 1	504:8:22041:22083	3084025	0	True				
ANR	3084218	RelationalExpression	( code_t ) ( syms - 1 ) > ( ( code_t ) 1 << max ) - 1		3084025	0		>			
ANR	3084219	CastExpression	( code_t ) ( syms - 1 )		3084025	0					
ANR	3084220	CastTarget	code_t		3084025	0					
ANR	3084221	AdditiveExpression	syms - 1		3084025	1		-			
ANR	3084222	Identifier	syms		3084025	0					
ANR	3084223	PrimaryExpression	1		3084025	1					
ANR	3084224	AdditiveExpression	( ( code_t ) 1 << max ) - 1		3084025	1		-			
ANR	3084225	ShiftExpression	( code_t ) 1 << max		3084025	0		<<			
ANR	3084226	CastExpression	( code_t ) 1		3084025	0					
ANR	3084227	CastTarget	code_t		3084025	0					
ANR	3084228	PrimaryExpression	1		3084025	1					
ANR	3084229	Identifier	max		3084025	1					
ANR	3084230	PrimaryExpression	1		3084025	1					
ANR	3084231	CompoundStatement		46:53:1449:1449	3084025	1					
ANR	3084232	ExpressionStatement	"fprintf ( stderr , ""%d symbols cannot be coded in %d bits\\n"" , syms , max )"	505:8:22096:22181	3084025	0	True				
ANR	3084233	CallExpression	"fprintf ( stderr , ""%d symbols cannot be coded in %d bits\\n"" , syms , max )"		3084025	0					
ANR	3084234	Callee	fprintf		3084025	0					
ANR	3084235	Identifier	fprintf		3084025	0					
ANR	3084236	ArgumentList	stderr		3084025	1					
ANR	3084237	Argument	stderr		3084025	0					
ANR	3084238	Identifier	stderr		3084025	0					
ANR	3084239	Argument	"""%d symbols cannot be coded in %d bits\\n"""		3084025	1					
ANR	3084240	PrimaryExpression	"""%d symbols cannot be coded in %d bits\\n"""		3084025	0					
ANR	3084241	Argument	syms		3084025	2					
ANR	3084242	Identifier	syms		3084025	0					
ANR	3084243	Argument	max		3084025	3					
ANR	3084244	Identifier	max		3084025	0					
ANR	3084245	ReturnStatement	return 1 ;	507:8:22191:22199	3084025	1	True				
ANR	3084246	PrimaryExpression	1		3084025	0					
ANR	3084247	ExpressionStatement	"code = calloc ( max + 1 , sizeof ( int ) )"	511:4:22243:22278	3084025	17	True				
ANR	3084248	AssignmentExpression	"code = calloc ( max + 1 , sizeof ( int ) )"		3084025	0		=			
ANR	3084249	Identifier	code		3084025	0					
ANR	3084250	CallExpression	"calloc ( max + 1 , sizeof ( int ) )"		3084025	1					
ANR	3084251	Callee	calloc		3084025	0					
ANR	3084252	Identifier	calloc		3084025	0					
ANR	3084253	ArgumentList	max + 1		3084025	1					
ANR	3084254	Argument	max + 1		3084025	0					
ANR	3084255	AdditiveExpression	max + 1		3084025	0		+			
ANR	3084256	Identifier	max		3084025	0					
ANR	3084257	PrimaryExpression	1		3084025	1					
ANR	3084258	Argument	sizeof ( int )		3084025	1					
ANR	3084259	SizeofExpression	sizeof ( int )		3084025	0					
ANR	3084260	Sizeof	sizeof		3084025	0					
ANR	3084261	SizeofOperand	int		3084025	1					
ANR	3084262	IfStatement	if ( code == NULL )		3084025	18					
ANR	3084263	Condition	code == NULL	512:8:22288:22299	3084025	0	True				
ANR	3084264	EqualityExpression	code == NULL		3084025	0		==			
ANR	3084265	Identifier	code		3084025	0					
ANR	3084266	Identifier	NULL		3084025	1					
ANR	3084267	CompoundStatement		54:22:1665:1665	3084025	1					
ANR	3084268	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	513:8:22312:22370	3084025	0	True				
ANR	3084269	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		3084025	0					
ANR	3084270	Callee	fputs		3084025	0					
ANR	3084271	Identifier	fputs		3084025	0					
ANR	3084272	ArgumentList	"""abort: unable to allocate enough memory\\n"""		3084025	1					
ANR	3084273	Argument	"""abort: unable to allocate enough memory\\n"""		3084025	0					
ANR	3084274	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		3084025	0					
ANR	3084275	Argument	stderr		3084025	1					
ANR	3084276	Identifier	stderr		3084025	0					
ANR	3084277	ReturnStatement	return 1 ;	514:8:22380:22388	3084025	1	True				
ANR	3084278	PrimaryExpression	1		3084025	0					
ANR	3084279	IfStatement	if ( syms == 2 )		3084025	19					
ANR	3084280	Condition	syms == 2	519:8:22546:22554	3084025	0	True				
ANR	3084281	EqualityExpression	syms == 2		3084025	0		==			
ANR	3084282	Identifier	syms		3084025	0					
ANR	3084283	PrimaryExpression	2		3084025	1					
ANR	3084284	ExpressionStatement	num = NULL	520:8:22597:22607	3084025	1	True				
ANR	3084285	AssignmentExpression	num = NULL		3084025	0		=			
ANR	3084286	Identifier	num		3084025	0					
ANR	3084287	Identifier	NULL		3084025	1					
ANR	3084288	ElseStatement	else		3084025	0					
ANR	3084289	CompoundStatement		63:9:2027:2027	3084025	0					
ANR	3084290	ExpressionStatement	size = syms >> 1	522:8:22674:22690	3084025	0	True				
ANR	3084291	AssignmentExpression	size = syms >> 1		3084025	0		=			
ANR	3084292	Identifier	size		3084025	0					
ANR	3084293	ShiftExpression	syms >> 1		3084025	1		>>			
ANR	3084294	Identifier	syms		3084025	0					
ANR	3084295	PrimaryExpression	1		3084025	1					
ANR	3084296	IfStatement	"if ( size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL )"		3084025	1					
ANR	3084297	Condition	"size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"	523:12:22704:22954	3084025	0	True				
ANR	3084298	OrExpression	"size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		3084025	0		||			
ANR	3084299	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 )		3084025	0		>			
ANR	3084300	Identifier	size		3084025	0					
ANR	3084301	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / ( n = ( syms - 1 ) >> 1 )		3084025	1		/			
ANR	3084302	AdditiveExpression	( size_t ) 0 - 1		3084025	0		-			
ANR	3084303	CastExpression	( size_t ) 0		3084025	0					
ANR	3084304	CastTarget	size_t		3084025	0					
ANR	3084305	PrimaryExpression	0		3084025	1					
ANR	3084306	PrimaryExpression	1		3084025	1					
ANR	3084307	AssignmentExpression	n = ( syms - 1 ) >> 1		3084025	1		=			
ANR	3084308	Identifier	n		3084025	0					
ANR	3084309	ShiftExpression	( syms - 1 ) >> 1		3084025	1		>>			
ANR	3084310	AdditiveExpression	syms - 1		3084025	0		-			
ANR	3084311	Identifier	syms		3084025	0					
ANR	3084312	PrimaryExpression	1		3084025	1					
ANR	3084313	PrimaryExpression	1		3084025	1					
ANR	3084314	OrExpression	"( size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 ) ) || ( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		3084025	1		||			
ANR	3084315	Expression	"size *= n , size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 )"		3084025	0					
ANR	3084316	AssignmentExpression	size *= n		3084025	0		*=			
ANR	3084317	Identifier	size		3084025	0					
ANR	3084318	Identifier	n		3084025	1					
ANR	3084319	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / ( n = max - 1 )		3084025	1		>			
ANR	3084320	Identifier	size		3084025	0					
ANR	3084321	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / ( n = max - 1 )		3084025	1		/			
ANR	3084322	AdditiveExpression	( size_t ) 0 - 1		3084025	0		-			
ANR	3084323	CastExpression	( size_t ) 0		3084025	0					
ANR	3084324	CastTarget	size_t		3084025	0					
ANR	3084325	PrimaryExpression	0		3084025	1					
ANR	3084326	PrimaryExpression	1		3084025	1					
ANR	3084327	AssignmentExpression	n = max - 1		3084025	1		=			
ANR	3084328	Identifier	n		3084025	0					
ANR	3084329	AdditiveExpression	max - 1		3084025	1		-			
ANR	3084330	Identifier	max		3084025	0					
ANR	3084331	PrimaryExpression	1		3084025	1					
ANR	3084332	OrExpression	"( size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t ) ) || ( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		3084025	1		||			
ANR	3084333	Expression	"size *= n , size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t )"		3084025	0					
ANR	3084334	AssignmentExpression	size *= n		3084025	0		*=			
ANR	3084335	Identifier	size		3084025	0					
ANR	3084336	Identifier	n		3084025	1					
ANR	3084337	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / sizeof ( big_t )		3084025	1		>			
ANR	3084338	Identifier	size		3084025	0					
ANR	3084339	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / sizeof ( big_t )		3084025	1		/			
ANR	3084340	AdditiveExpression	( size_t ) 0 - 1		3084025	0		-			
ANR	3084341	CastExpression	( size_t ) 0		3084025	0					
ANR	3084342	CastTarget	size_t		3084025	0					
ANR	3084343	PrimaryExpression	0		3084025	1					
ANR	3084344	PrimaryExpression	1		3084025	1					
ANR	3084345	SizeofExpression	sizeof ( big_t )		3084025	1					
ANR	3084346	Sizeof	sizeof		3084025	0					
ANR	3084347	SizeofOperand	big_t		3084025	1					
ANR	3084348	EqualityExpression	"( num = calloc ( size , sizeof ( big_t ) ) ) == NULL"		3084025	1		==			
ANR	3084349	AssignmentExpression	"num = calloc ( size , sizeof ( big_t ) )"		3084025	0		=			
ANR	3084350	Identifier	num		3084025	0					
ANR	3084351	CallExpression	"calloc ( size , sizeof ( big_t ) )"		3084025	1					
ANR	3084352	Callee	calloc		3084025	0					
ANR	3084353	Identifier	calloc		3084025	0					
ANR	3084354	ArgumentList	size		3084025	1					
ANR	3084355	Argument	size		3084025	0					
ANR	3084356	Identifier	size		3084025	0					
ANR	3084357	Argument	sizeof ( big_t )		3084025	1					
ANR	3084358	SizeofExpression	sizeof ( big_t )		3084025	0					
ANR	3084359	Sizeof	sizeof		3084025	0					
ANR	3084360	SizeofOperand	big_t		3084025	1					
ANR	3084361	Identifier	NULL		3084025	1					
ANR	3084362	CompoundStatement		68:61:2320:2320	3084025	1					
ANR	3084363	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	527:12:22971:23029	3084025	0	True				
ANR	3084364	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		3084025	0					
ANR	3084365	Callee	fputs		3084025	0					
ANR	3084366	Identifier	fputs		3084025	0					
ANR	3084367	ArgumentList	"""abort: unable to allocate enough memory\\n"""		3084025	1					
ANR	3084368	Argument	"""abort: unable to allocate enough memory\\n"""		3084025	0					
ANR	3084369	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		3084025	0					
ANR	3084370	Argument	stderr		3084025	1					
ANR	3084371	Identifier	stderr		3084025	0					
ANR	3084372	ExpressionStatement	cleanup ( )	528:12:23043:23052	3084025	1	True				
ANR	3084373	CallExpression	cleanup ( )		3084025	0					
ANR	3084374	Callee	cleanup		3084025	0					
ANR	3084375	Identifier	cleanup		3084025	0					
ANR	3084376	ArgumentList			3084025	1					
ANR	3084377	ReturnStatement	return 1 ;	529:12:23066:23074	3084025	2	True				
ANR	3084378	PrimaryExpression	1		3084025	0					
ANR	3084379	ExpressionStatement	sum = 0	534:4:23170:23177	3084025	20	True				
ANR	3084380	AssignmentExpression	sum = 0		3084025	0		=			
ANR	3084381	Identifier	sum		3084025	0					
ANR	3084382	PrimaryExpression	0		3084025	1					
ANR	3084383	ForStatement	for ( n = 2 ; n <= syms ; n ++ )		3084025	21					
ANR	3084384	ForInit	n = 2 ;	535:9:23188:23193	3084025	0	True				
ANR	3084385	AssignmentExpression	n = 2		3084025	0		=			
ANR	3084386	Identifier	n		3084025	0					
ANR	3084387	PrimaryExpression	2		3084025	1					
ANR	3084388	Condition	n <= syms	535:16:23195:23203	3084025	1	True				
ANR	3084389	RelationalExpression	n <= syms		3084025	0		<=			
ANR	3084390	Identifier	n		3084025	0					
ANR	3084391	Identifier	syms		3084025	1					
ANR	3084392	PostIncDecOperationExpression	n ++	535:27:23206:23208	3084025	2	True				
ANR	3084393	Identifier	n		3084025	0					
ANR	3084394	IncDec	++		3084025	1					
ANR	3084395	CompoundStatement		77:32:2574:2574	3084025	3					
ANR	3084396	ExpressionStatement	"got = count ( n , 1 , 2 )"	536:8:23221:23241	3084025	0	True				
ANR	3084397	AssignmentExpression	"got = count ( n , 1 , 2 )"		3084025	0		=			
ANR	3084398	Identifier	got		3084025	0					
ANR	3084399	CallExpression	"count ( n , 1 , 2 )"		3084025	1					
ANR	3084400	Callee	count		3084025	0					
ANR	3084401	Identifier	count		3084025	0					
ANR	3084402	ArgumentList	n		3084025	1					
ANR	3084403	Argument	n		3084025	0					
ANR	3084404	Identifier	n		3084025	0					
ANR	3084405	Argument	1		3084025	1					
ANR	3084406	PrimaryExpression	1		3084025	0					
ANR	3084407	Argument	2		3084025	2					
ANR	3084408	PrimaryExpression	2		3084025	0					
ANR	3084409	ExpressionStatement	sum += got	537:8:23251:23261	3084025	1	True				
ANR	3084410	AssignmentExpression	sum += got		3084025	0		+=			
ANR	3084411	Identifier	sum		3084025	0					
ANR	3084412	Identifier	got		3084025	1					
ANR	3084413	IfStatement	if ( got == ( big_t ) 0 - 1 || sum < got )		3084025	2					
ANR	3084414	Condition	got == ( big_t ) 0 - 1 || sum < got	538:12:23275:23306	3084025	0	True				
ANR	3084415	OrExpression	got == ( big_t ) 0 - 1 || sum < got		3084025	0		||			
ANR	3084416	EqualityExpression	got == ( big_t ) 0 - 1		3084025	0		==			
ANR	3084417	Identifier	got		3084025	0					
ANR	3084418	AdditiveExpression	( big_t ) 0 - 1		3084025	1		-			
ANR	3084419	CastExpression	( big_t ) 0		3084025	0					
ANR	3084420	CastTarget	big_t		3084025	0					
ANR	3084421	PrimaryExpression	0		3084025	1					
ANR	3084422	PrimaryExpression	1		3084025	1					
ANR	3084423	RelationalExpression	sum < got		3084025	1		<			
ANR	3084424	Identifier	sum		3084025	0					
ANR	3084425	Identifier	got		3084025	1					
ANR	3084426	CompoundStatement		80:46:2672:2672	3084025	1					
ANR	3084427	ExpressionStatement	"fputs ( ""abort: can't count that high!\\n"" , stderr )"	539:12:23342:23390	3084025	0	True				
ANR	3084428	CallExpression	"fputs ( ""abort: can't count that high!\\n"" , stderr )"		3084025	0					
ANR	3084429	Callee	fputs		3084025	0					
ANR	3084430	Identifier	fputs		3084025	0					
ANR	3084431	ArgumentList	"""abort: can't count that high!\\n"""		3084025	1					
ANR	3084432	Argument	"""abort: can't count that high!\\n"""		3084025	0					
ANR	3084433	PrimaryExpression	"""abort: can't count that high!\\n"""		3084025	0					
ANR	3084434	Argument	stderr		3084025	1					
ANR	3084435	Identifier	stderr		3084025	0					
ANR	3084436	ExpressionStatement	cleanup ( )	540:12:23404:23413	3084025	1	True				
ANR	3084437	CallExpression	cleanup ( )		3084025	0					
ANR	3084438	Callee	cleanup		3084025	0					
ANR	3084439	Identifier	cleanup		3084025	0					
ANR	3084440	ArgumentList			3084025	1					
ANR	3084441	ReturnStatement	return 1 ;	541:12:23427:23435	3084025	2	True				
ANR	3084442	PrimaryExpression	1		3084025	0					
ANR	3084443	ExpressionStatement	"printf ( ""%llu %d-codes\\n"" , got , n )"	543:8:23455:23488	3084025	3	True				
ANR	3084444	CallExpression	"printf ( ""%llu %d-codes\\n"" , got , n )"		3084025	0					
ANR	3084445	Callee	printf		3084025	0					
ANR	3084446	Identifier	printf		3084025	0					
ANR	3084447	ArgumentList	"""%llu %d-codes\\n"""		3084025	1					
ANR	3084448	Argument	"""%llu %d-codes\\n"""		3084025	0					
ANR	3084449	PrimaryExpression	"""%llu %d-codes\\n"""		3084025	0					
ANR	3084450	Argument	got		3084025	1					
ANR	3084451	Identifier	got		3084025	0					
ANR	3084452	Argument	n		3084025	2					
ANR	3084453	Identifier	n		3084025	0					
ANR	3084454	ExpressionStatement	"printf ( ""%llu total codes for 2 to %d symbols"" , sum , syms )"	545:4:23500:23557	3084025	22	True				
ANR	3084455	CallExpression	"printf ( ""%llu total codes for 2 to %d symbols"" , sum , syms )"		3084025	0					
ANR	3084456	Callee	printf		3084025	0					
ANR	3084457	Identifier	printf		3084025	0					
ANR	3084458	ArgumentList	"""%llu total codes for 2 to %d symbols"""		3084025	1					
ANR	3084459	Argument	"""%llu total codes for 2 to %d symbols"""		3084025	0					
ANR	3084460	PrimaryExpression	"""%llu total codes for 2 to %d symbols"""		3084025	0					
ANR	3084461	Argument	sum		3084025	1					
ANR	3084462	Identifier	sum		3084025	0					
ANR	3084463	Argument	syms		3084025	2					
ANR	3084464	Identifier	syms		3084025	0					
ANR	3084465	IfStatement	if ( max < syms - 1 )		3084025	23					
ANR	3084466	Condition	max < syms - 1	546:8:23567:23580	3084025	0	True				
ANR	3084467	RelationalExpression	max < syms - 1		3084025	0		<			
ANR	3084468	Identifier	max		3084025	0					
ANR	3084469	AdditiveExpression	syms - 1		3084025	1		-			
ANR	3084470	Identifier	syms		3084025	0					
ANR	3084471	PrimaryExpression	1		3084025	1					
ANR	3084472	ExpressionStatement	"printf ( "" (%d-bit length limit)\\n"" , max )"	547:8:23591:23630	3084025	1	True				
ANR	3084473	CallExpression	"printf ( "" (%d-bit length limit)\\n"" , max )"		3084025	0					
ANR	3084474	Callee	printf		3084025	0					
ANR	3084475	Identifier	printf		3084025	0					
ANR	3084476	ArgumentList	""" (%d-bit length limit)\\n"""		3084025	1					
ANR	3084477	Argument	""" (%d-bit length limit)\\n"""		3084025	0					
ANR	3084478	PrimaryExpression	""" (%d-bit length limit)\\n"""		3084025	0					
ANR	3084479	Argument	max		3084025	1					
ANR	3084480	Identifier	max		3084025	0					
ANR	3084481	ElseStatement	else		3084025	0					
ANR	3084482	ExpressionStatement	"puts ( "" (no length limit)"" )"	549:8:23649:23675	3084025	0	True				
ANR	3084483	CallExpression	"puts ( "" (no length limit)"" )"		3084025	0					
ANR	3084484	Callee	puts		3084025	0					
ANR	3084485	Identifier	puts		3084025	0					
ANR	3084486	ArgumentList	""" (no length limit)"""		3084025	1					
ANR	3084487	Argument	""" (no length limit)"""		3084025	0					
ANR	3084488	PrimaryExpression	""" (no length limit)"""		3084025	0					
ANR	3084489	IfStatement	if ( syms == 2 )		3084025	24					
ANR	3084490	Condition	syms == 2	552:8:23741:23749	3084025	0	True				
ANR	3084491	EqualityExpression	syms == 2		3084025	0		==			
ANR	3084492	Identifier	syms		3084025	0					
ANR	3084493	PrimaryExpression	2		3084025	1					
ANR	3084494	ExpressionStatement	done = NULL	553:8:23760:23771	3084025	1	True				
ANR	3084495	AssignmentExpression	done = NULL		3084025	0		=			
ANR	3084496	Identifier	done		3084025	0					
ANR	3084497	Identifier	NULL		3084025	1					
ANR	3084498	ElseStatement	else		3084025	0					
ANR	3084499	IfStatement	"if ( size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab ) || ( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL )"		3084025	0					
ANR	3084500	Condition	"size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab ) || ( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL"	554:13:23786:23894	3084025	0	True				
ANR	3084501	OrExpression	"size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab ) || ( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL"		3084025	0		||			
ANR	3084502	RelationalExpression	size > ( ( size_t ) 0 - 1 ) / sizeof ( struct tab )		3084025	0		>			
ANR	3084503	Identifier	size		3084025	0					
ANR	3084504	MultiplicativeExpression	( ( size_t ) 0 - 1 ) / sizeof ( struct tab )		3084025	1		/			
ANR	3084505	AdditiveExpression	( size_t ) 0 - 1		3084025	0		-			
ANR	3084506	CastExpression	( size_t ) 0		3084025	0					
ANR	3084507	CastTarget	size_t		3084025	0					
ANR	3084508	PrimaryExpression	0		3084025	1					
ANR	3084509	PrimaryExpression	1		3084025	1					
ANR	3084510	SizeofExpression	sizeof ( struct tab )		3084025	1					
ANR	3084511	Sizeof	sizeof		3084025	0					
ANR	3084512	SizeofOperand	struct tab		3084025	1					
ANR	3084513	EqualityExpression	"( done = calloc ( size , sizeof ( struct tab ) ) ) == NULL"		3084025	1		==			
ANR	3084514	AssignmentExpression	"done = calloc ( size , sizeof ( struct tab ) )"		3084025	0		=			
ANR	3084515	Identifier	done		3084025	0					
ANR	3084516	CallExpression	"calloc ( size , sizeof ( struct tab ) )"		3084025	1					
ANR	3084517	Callee	calloc		3084025	0					
ANR	3084518	Identifier	calloc		3084025	0					
ANR	3084519	ArgumentList	size		3084025	1					
ANR	3084520	Argument	size		3084025	0					
ANR	3084521	Identifier	size		3084025	0					
ANR	3084522	Argument	sizeof ( struct tab )		3084025	1					
ANR	3084523	SizeofExpression	sizeof ( struct tab )		3084025	0					
ANR	3084524	Sizeof	sizeof		3084025	0					
ANR	3084525	SizeofOperand	struct tab		3084025	1					
ANR	3084526	Identifier	NULL		3084025	1					
ANR	3084527	CompoundStatement		97:64:3260:3260	3084025	1					
ANR	3084528	ExpressionStatement	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"	556:8:23907:23965	3084025	0	True				
ANR	3084529	CallExpression	"fputs ( ""abort: unable to allocate enough memory\\n"" , stderr )"		3084025	0					
ANR	3084530	Callee	fputs		3084025	0					
ANR	3084531	Identifier	fputs		3084025	0					
ANR	3084532	ArgumentList	"""abort: unable to allocate enough memory\\n"""		3084025	1					
ANR	3084533	Argument	"""abort: unable to allocate enough memory\\n"""		3084025	0					
ANR	3084534	PrimaryExpression	"""abort: unable to allocate enough memory\\n"""		3084025	0					
ANR	3084535	Argument	stderr		3084025	1					
ANR	3084536	Identifier	stderr		3084025	0					
ANR	3084537	ExpressionStatement	cleanup ( )	557:8:23975:23984	3084025	1	True				
ANR	3084538	CallExpression	cleanup ( )		3084025	0					
ANR	3084539	Callee	cleanup		3084025	0					
ANR	3084540	Identifier	cleanup		3084025	0					
ANR	3084541	ArgumentList			3084025	1					
ANR	3084542	ReturnStatement	return 1 ;	558:8:23994:24002	3084025	2	True				
ANR	3084543	PrimaryExpression	1		3084025	0					
ANR	3084544	IfStatement	if ( root > max )		3084025	25					
ANR	3084545	Condition	root > max	562:8:24071:24080	3084025	0	True				
ANR	3084546	RelationalExpression	root > max		3084025	0		>			
ANR	3084547	Identifier	root		3084025	0					
ANR	3084548	Identifier	max		3084025	1					
ANR	3084549	ExpressionStatement	root = max	563:8:24139:24149	3084025	1	True				
ANR	3084550	AssignmentExpression	root = max		3084025	0		=			
ANR	3084551	Identifier	root		3084025	0					
ANR	3084552	Identifier	max		3084025	1					
ANR	3084553	IfStatement	if ( ( code_t ) syms < ( ( code_t ) 1 << ( root + 1 ) ) )		3084025	26					
ANR	3084554	Condition	( code_t ) syms < ( ( code_t ) 1 << ( root + 1 ) )	564:8:24159:24198	3084025	0	True				
ANR	3084555	RelationalExpression	( code_t ) syms < ( ( code_t ) 1 << ( root + 1 ) )		3084025	0		<			
ANR	3084556	CastExpression	( code_t ) syms		3084025	0					
ANR	3084557	CastTarget	code_t		3084025	0					
ANR	3084558	Identifier	syms		3084025	1					
ANR	3084559	ShiftExpression	( code_t ) 1 << ( root + 1 )		3084025	1		<<			
ANR	3084560	CastExpression	( code_t ) 1		3084025	0					
ANR	3084561	CastTarget	code_t		3084025	0					
ANR	3084562	PrimaryExpression	1		3084025	1					
ANR	3084563	AdditiveExpression	root + 1		3084025	1		+			
ANR	3084564	Identifier	root		3084025	0					
ANR	3084565	PrimaryExpression	1		3084025	1					
ANR	3084566	ExpressionStatement	enough ( syms )	565:8:24209:24221	3084025	1	True				
ANR	3084567	CallExpression	enough ( syms )		3084025	0					
ANR	3084568	Callee	enough		3084025	0					
ANR	3084569	Identifier	enough		3084025	0					
ANR	3084570	ArgumentList	syms		3084025	1					
ANR	3084571	Argument	syms		3084025	0					
ANR	3084572	Identifier	syms		3084025	0					
ANR	3084573	ElseStatement	else		3084025	0					
ANR	3084574	ExpressionStatement	"puts ( ""cannot handle minimum code lengths > root"" )"	567:8:24240:24289	3084025	0	True				
ANR	3084575	CallExpression	"puts ( ""cannot handle minimum code lengths > root"" )"		3084025	0					
ANR	3084576	Callee	puts		3084025	0					
ANR	3084577	Identifier	puts		3084025	0					
ANR	3084578	ArgumentList	"""cannot handle minimum code lengths > root"""		3084025	1					
ANR	3084579	Argument	"""cannot handle minimum code lengths > root"""		3084025	0					
ANR	3084580	PrimaryExpression	"""cannot handle minimum code lengths > root"""		3084025	0					
ANR	3084581	ExpressionStatement	cleanup ( )	570:4:24311:24320	3084025	27	True				
ANR	3084582	CallExpression	cleanup ( )		3084025	0					
ANR	3084583	Callee	cleanup		3084025	0					
ANR	3084584	Identifier	cleanup		3084025	0					
ANR	3084585	ArgumentList			3084025	1					
ANR	3084586	ReturnStatement	return 0 ;	571:4:24326:24334	3084025	28	True				
ANR	3084587	PrimaryExpression	0		3084025	0					
ANR	3084588	ReturnType	int		3084025	1					
ANR	3084589	Identifier	main		3084025	2					
ANR	3084590	ParameterList	"int argc , char * * argv"		3084025	3					
ANR	3084591	Parameter	int argc	458:9:20613:20620	3084025	0	True				
ANR	3084592	ParameterType	int		3084025	0					
ANR	3084593	Identifier	argc		3084025	1					
ANR	3084594	Parameter	char * * argv	458:19:20623:20633	3084025	1	True				
ANR	3084595	ParameterType	char * *		3084025	0					
ANR	3084596	Identifier	argv		3084025	1					
ANR	3084597	CFGEntryNode	ENTRY		3084025		True				
ANR	3084598	CFGExitNode	EXIT		3084025		True				
ANR	3084599	Symbol	argc		3084025						
ANR	3084600	Symbol	atoi		3084025						
ANR	3084601	Symbol	code		3084025						
ANR	3084602	Symbol	NULL		3084025						
ANR	3084603	Symbol	max		3084025						
ANR	3084604	Symbol	num		3084025						
ANR	3084605	Symbol	count		3084025						
ANR	3084606	Symbol	sum		3084025						
ANR	3084607	Symbol	* argv		3084025						
ANR	3084608	Symbol	calloc		3084025						
ANR	3084609	Symbol	stderr		3084025						
ANR	3084610	Symbol	argv		3084025						
ANR	3084611	Symbol	got		3084025						
ANR	3084612	Symbol	done		3084025						
ANR	3084613	Symbol	n		3084025						
ANR	3084614	Symbol	size		3084025						
ANR	3084615	Symbol	root		3084025						
ANR	3084616	Symbol	syms		3084025						
ANR	3084617	Symbol	word		3084025						
