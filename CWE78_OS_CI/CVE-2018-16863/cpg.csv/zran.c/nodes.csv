command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11262505	File	data/converged/CVE-2018-16863_ghostpdl/zran.c								
ANR	11262506	ClassDef	point	67:0:3334:3645							
ANR	11262507	DeclStmt									
ANR	11262508	Decl							off_t	off_t	out
ANR	11262509	DeclStmt									
ANR	11262510	Decl							off_t	off_t	in
ANR	11262511	DeclStmt									
ANR	11262512	Decl							int	int	bits
ANR	11262513	DeclStmt									
ANR	11262514	Decl							unsigned char	unsigned char [ WINSIZE ]	window
ANR	11262515	ClassDef	access	75:0:3673:3860							
ANR	11262516	DeclStmt									
ANR	11262517	Decl							int	int	have
ANR	11262518	DeclStmt									
ANR	11262519	Decl							int	int	size
ANR	11262520	DeclStmt									
ANR	11262521	Decl							struct point	struct point *	list
ANR	11262522	Function	free_index	82:0:3913:4038							
ANR	11262523	FunctionDef	free_index (struct access * index)		11262522	0					
ANR	11262524	CompoundStatement		83:0:3957:4038	11262522	0					
ANR	11262525	IfStatement	if ( index != NULL )		11262522	0					
ANR	11262526	Condition	index != NULL	84:8:3967:3979	11262522	0	True				
ANR	11262527	EqualityExpression	index != NULL		11262522	0		!=			
ANR	11262528	Identifier	index		11262522	0					
ANR	11262529	Identifier	NULL		11262522	1					
ANR	11262530	CompoundStatement		2:23:24:24	11262522	1					
ANR	11262531	ExpressionStatement	free ( index -> list )	85:8:3992:4009	11262522	0	True				
ANR	11262532	CallExpression	free ( index -> list )		11262522	0					
ANR	11262533	Callee	free		11262522	0					
ANR	11262534	Identifier	free		11262522	0					
ANR	11262535	ArgumentList	index -> list		11262522	1					
ANR	11262536	Argument	index -> list		11262522	0					
ANR	11262537	PtrMemberAccess	index -> list		11262522	0					
ANR	11262538	Identifier	index		11262522	0					
ANR	11262539	Identifier	list		11262522	1					
ANR	11262540	ExpressionStatement	free ( index )	86:8:4019:4030	11262522	1	True				
ANR	11262541	CallExpression	free ( index )		11262522	0					
ANR	11262542	Callee	free		11262522	0					
ANR	11262543	Identifier	free		11262522	0					
ANR	11262544	ArgumentList	index		11262522	1					
ANR	11262545	Argument	index		11262522	0					
ANR	11262546	Identifier	index		11262522	0					
ANR	11262547	ReturnType	local void		11262522	1					
ANR	11262548	Identifier	free_index		11262522	2					
ANR	11262549	ParameterList	struct access * index		11262522	3					
ANR	11262550	Parameter	struct access * index	82:22:3935:3954	11262522	0	True				
ANR	11262551	ParameterType	struct access *		11262522	0					
ANR	11262552	Identifier	index		11262522	1					
ANR	11262553	CFGEntryNode	ENTRY		11262522		True				
ANR	11262554	CFGExitNode	EXIT		11262522		True				
ANR	11262555	Symbol	NULL		11262522						
ANR	11262556	Symbol	* index		11262522						
ANR	11262557	Symbol	index		11262522						
ANR	11262558	Symbol	index -> list		11262522						
ANR	11262559	Function	addpoint	92:6:4160:5403							
ANR	11262560	FunctionDef	"addpoint (struct access * index , int bits , off_t in , off_t out , unsigned left , unsigned char * window)"		11262559	0					
ANR	11262561	CompoundStatement		94:0:4279:5403	11262559	0					
ANR	11262562	IdentifierDeclStatement	struct point * next ;	95:4:4285:4303	11262559	0	True				
ANR	11262563	IdentifierDecl	* next		11262559	0					
ANR	11262564	IdentifierDeclType	struct point *		11262559	0					
ANR	11262565	Identifier	next		11262559	1					
ANR	11262566	IfStatement	if ( index == NULL )		11262559	1					
ANR	11262567	Condition	index == NULL	98:8:4378:4390	11262559	0	True				
ANR	11262568	EqualityExpression	index == NULL		11262559	0		==			
ANR	11262569	Identifier	index		11262559	0					
ANR	11262570	Identifier	NULL		11262559	1					
ANR	11262571	CompoundStatement		5:23:113:113	11262559	1					
ANR	11262572	ExpressionStatement	index = malloc ( sizeof ( struct access ) )	99:8:4403:4440	11262559	0	True				
ANR	11262573	AssignmentExpression	index = malloc ( sizeof ( struct access ) )		11262559	0		=			
ANR	11262574	Identifier	index		11262559	0					
ANR	11262575	CallExpression	malloc ( sizeof ( struct access ) )		11262559	1					
ANR	11262576	Callee	malloc		11262559	0					
ANR	11262577	Identifier	malloc		11262559	0					
ANR	11262578	ArgumentList	sizeof ( struct access )		11262559	1					
ANR	11262579	Argument	sizeof ( struct access )		11262559	0					
ANR	11262580	SizeofExpression	sizeof ( struct access )		11262559	0					
ANR	11262581	Sizeof	sizeof		11262559	0					
ANR	11262582	SizeofOperand	struct access		11262559	1					
ANR	11262583	IfStatement	if ( index == NULL )		11262559	1					
ANR	11262584	Condition	index == NULL	100:12:4454:4466	11262559	0	True				
ANR	11262585	EqualityExpression	index == NULL		11262559	0		==			
ANR	11262586	Identifier	index		11262559	0					
ANR	11262587	Identifier	NULL		11262559	1					
ANR	11262588	ReturnStatement	return NULL ;	100:27:4469:4480	11262559	1	True				
ANR	11262589	Identifier	NULL		11262559	0					
ANR	11262590	ExpressionStatement	index -> list = malloc ( sizeof ( struct point ) << 3 )	101:8:4490:4537	11262559	2	True				
ANR	11262591	AssignmentExpression	index -> list = malloc ( sizeof ( struct point ) << 3 )		11262559	0		=			
ANR	11262592	PtrMemberAccess	index -> list		11262559	0					
ANR	11262593	Identifier	index		11262559	0					
ANR	11262594	Identifier	list		11262559	1					
ANR	11262595	CallExpression	malloc ( sizeof ( struct point ) << 3 )		11262559	1					
ANR	11262596	Callee	malloc		11262559	0					
ANR	11262597	Identifier	malloc		11262559	0					
ANR	11262598	ArgumentList	sizeof ( struct point ) << 3		11262559	1					
ANR	11262599	Argument	sizeof ( struct point ) << 3		11262559	0					
ANR	11262600	ShiftExpression	sizeof ( struct point ) << 3		11262559	0		<<			
ANR	11262601	SizeofExpression	sizeof ( struct point )		11262559	0					
ANR	11262602	Sizeof	sizeof		11262559	0					
ANR	11262603	SizeofOperand	struct point		11262559	1					
ANR	11262604	PrimaryExpression	3		11262559	1					
ANR	11262605	IfStatement	if ( index -> list == NULL )		11262559	3					
ANR	11262606	Condition	index -> list == NULL	102:12:4551:4569	11262559	0	True				
ANR	11262607	EqualityExpression	index -> list == NULL		11262559	0		==			
ANR	11262608	PtrMemberAccess	index -> list		11262559	0					
ANR	11262609	Identifier	index		11262559	0					
ANR	11262610	Identifier	list		11262559	1					
ANR	11262611	Identifier	NULL		11262559	1					
ANR	11262612	CompoundStatement		9:33:292:292	11262559	1					
ANR	11262613	ExpressionStatement	free ( index )	103:12:4586:4597	11262559	0	True				
ANR	11262614	CallExpression	free ( index )		11262559	0					
ANR	11262615	Callee	free		11262559	0					
ANR	11262616	Identifier	free		11262559	0					
ANR	11262617	ArgumentList	index		11262559	1					
ANR	11262618	Argument	index		11262559	0					
ANR	11262619	Identifier	index		11262559	0					
ANR	11262620	ReturnStatement	return NULL ;	104:12:4611:4622	11262559	1	True				
ANR	11262621	Identifier	NULL		11262559	0					
ANR	11262622	ExpressionStatement	index -> size = 8	106:8:4642:4657	11262559	4	True				
ANR	11262623	AssignmentExpression	index -> size = 8		11262559	0		=			
ANR	11262624	PtrMemberAccess	index -> size		11262559	0					
ANR	11262625	Identifier	index		11262559	0					
ANR	11262626	Identifier	size		11262559	1					
ANR	11262627	PrimaryExpression	8		11262559	1					
ANR	11262628	ExpressionStatement	index -> have = 0	107:8:4667:4682	11262559	5	True				
ANR	11262629	AssignmentExpression	index -> have = 0		11262559	0		=			
ANR	11262630	PtrMemberAccess	index -> have		11262559	0					
ANR	11262631	Identifier	index		11262559	0					
ANR	11262632	Identifier	have		11262559	1					
ANR	11262633	PrimaryExpression	0		11262559	1					
ANR	11262634	ElseStatement	else		11262559	0					
ANR	11262635	IfStatement	if ( index -> have == index -> size )		11262559	0					
ANR	11262636	Condition	index -> have == index -> size	111:13:4746:4771	11262559	0	True				
ANR	11262637	EqualityExpression	index -> have == index -> size		11262559	0		==			
ANR	11262638	PtrMemberAccess	index -> have		11262559	0					
ANR	11262639	Identifier	index		11262559	0					
ANR	11262640	Identifier	have		11262559	1					
ANR	11262641	PtrMemberAccess	index -> size		11262559	1					
ANR	11262642	Identifier	index		11262559	0					
ANR	11262643	Identifier	size		11262559	1					
ANR	11262644	CompoundStatement		18:41:494:494	11262559	1					
ANR	11262645	ExpressionStatement	index -> size <<= 1	112:8:4784:4801	11262559	0	True				
ANR	11262646	AssignmentExpression	index -> size <<= 1		11262559	0		<<=			
ANR	11262647	PtrMemberAccess	index -> size		11262559	0					
ANR	11262648	Identifier	index		11262559	0					
ANR	11262649	Identifier	size		11262559	1					
ANR	11262650	PrimaryExpression	1		11262559	1					
ANR	11262651	ExpressionStatement	"next = realloc ( index -> list , sizeof ( struct point ) * index -> size )"	113:8:4811:4874	11262559	1	True				
ANR	11262652	AssignmentExpression	"next = realloc ( index -> list , sizeof ( struct point ) * index -> size )"		11262559	0		=			
ANR	11262653	Identifier	next		11262559	0					
ANR	11262654	CallExpression	"realloc ( index -> list , sizeof ( struct point ) * index -> size )"		11262559	1					
ANR	11262655	Callee	realloc		11262559	0					
ANR	11262656	Identifier	realloc		11262559	0					
ANR	11262657	ArgumentList	index -> list		11262559	1					
ANR	11262658	Argument	index -> list		11262559	0					
ANR	11262659	PtrMemberAccess	index -> list		11262559	0					
ANR	11262660	Identifier	index		11262559	0					
ANR	11262661	Identifier	list		11262559	1					
ANR	11262662	Argument	sizeof ( struct point ) * index -> size		11262559	1					
ANR	11262663	MultiplicativeExpression	sizeof ( struct point ) * index -> size		11262559	0		*			
ANR	11262664	SizeofExpression	sizeof ( struct point )		11262559	0					
ANR	11262665	Sizeof	sizeof		11262559	0					
ANR	11262666	SizeofOperand	struct point		11262559	1					
ANR	11262667	PtrMemberAccess	index -> size		11262559	1					
ANR	11262668	Identifier	index		11262559	0					
ANR	11262669	Identifier	size		11262559	1					
ANR	11262670	IfStatement	if ( next == NULL )		11262559	2					
ANR	11262671	Condition	next == NULL	114:12:4888:4899	11262559	0	True				
ANR	11262672	EqualityExpression	next == NULL		11262559	0		==			
ANR	11262673	Identifier	next		11262559	0					
ANR	11262674	Identifier	NULL		11262559	1					
ANR	11262675	CompoundStatement		21:26:622:622	11262559	1					
ANR	11262676	ExpressionStatement	free_index ( index )	115:12:4916:4933	11262559	0	True				
ANR	11262677	CallExpression	free_index ( index )		11262559	0					
ANR	11262678	Callee	free_index		11262559	0					
ANR	11262679	Identifier	free_index		11262559	0					
ANR	11262680	ArgumentList	index		11262559	1					
ANR	11262681	Argument	index		11262559	0					
ANR	11262682	Identifier	index		11262559	0					
ANR	11262683	ReturnStatement	return NULL ;	116:12:4947:4958	11262559	1	True				
ANR	11262684	Identifier	NULL		11262559	0					
ANR	11262685	ExpressionStatement	index -> list = next	118:8:4978:4996	11262559	3	True				
ANR	11262686	AssignmentExpression	index -> list = next		11262559	0		=			
ANR	11262687	PtrMemberAccess	index -> list		11262559	0					
ANR	11262688	Identifier	index		11262559	0					
ANR	11262689	Identifier	list		11262559	1					
ANR	11262690	Identifier	next		11262559	1					
ANR	11262691	ExpressionStatement	next = index -> list + index -> have	122:4:5064:5096	11262559	2	True				
ANR	11262692	AssignmentExpression	next = index -> list + index -> have		11262559	0		=			
ANR	11262693	Identifier	next		11262559	0					
ANR	11262694	AdditiveExpression	index -> list + index -> have		11262559	1		+			
ANR	11262695	PtrMemberAccess	index -> list		11262559	0					
ANR	11262696	Identifier	index		11262559	0					
ANR	11262697	Identifier	list		11262559	1					
ANR	11262698	PtrMemberAccess	index -> have		11262559	1					
ANR	11262699	Identifier	index		11262559	0					
ANR	11262700	Identifier	have		11262559	1					
ANR	11262701	ExpressionStatement	next -> bits = bits	123:4:5102:5119	11262559	3	True				
ANR	11262702	AssignmentExpression	next -> bits = bits		11262559	0		=			
ANR	11262703	PtrMemberAccess	next -> bits		11262559	0					
ANR	11262704	Identifier	next		11262559	0					
ANR	11262705	Identifier	bits		11262559	1					
ANR	11262706	Identifier	bits		11262559	1					
ANR	11262707	ExpressionStatement	next -> in = in	124:4:5125:5138	11262559	4	True				
ANR	11262708	AssignmentExpression	next -> in = in		11262559	0		=			
ANR	11262709	PtrMemberAccess	next -> in		11262559	0					
ANR	11262710	Identifier	next		11262559	0					
ANR	11262711	Identifier	in		11262559	1					
ANR	11262712	Identifier	in		11262559	1					
ANR	11262713	ExpressionStatement	next -> out = out	125:4:5144:5159	11262559	5	True				
ANR	11262714	AssignmentExpression	next -> out = out		11262559	0		=			
ANR	11262715	PtrMemberAccess	next -> out		11262559	0					
ANR	11262716	Identifier	next		11262559	0					
ANR	11262717	Identifier	out		11262559	1					
ANR	11262718	Identifier	out		11262559	1					
ANR	11262719	IfStatement	if ( left )		11262559	6					
ANR	11262720	Condition	left	126:8:5169:5172	11262559	0	True				
ANR	11262721	Identifier	left		11262559	0					
ANR	11262722	ExpressionStatement	"memcpy ( next -> window , window + WINSIZE - left , left )"	127:8:5183:5234	11262559	1	True				
ANR	11262723	CallExpression	"memcpy ( next -> window , window + WINSIZE - left , left )"		11262559	0					
ANR	11262724	Callee	memcpy		11262559	0					
ANR	11262725	Identifier	memcpy		11262559	0					
ANR	11262726	ArgumentList	next -> window		11262559	1					
ANR	11262727	Argument	next -> window		11262559	0					
ANR	11262728	PtrMemberAccess	next -> window		11262559	0					
ANR	11262729	Identifier	next		11262559	0					
ANR	11262730	Identifier	window		11262559	1					
ANR	11262731	Argument	window + WINSIZE - left		11262559	1					
ANR	11262732	AdditiveExpression	window + WINSIZE - left		11262559	0		+			
ANR	11262733	Identifier	window		11262559	0					
ANR	11262734	AdditiveExpression	WINSIZE - left		11262559	1		-			
ANR	11262735	Identifier	WINSIZE		11262559	0					
ANR	11262736	Identifier	left		11262559	1					
ANR	11262737	Argument	left		11262559	2					
ANR	11262738	Identifier	left		11262559	0					
ANR	11262739	IfStatement	if ( left < WINSIZE )		11262559	7					
ANR	11262740	Condition	left < WINSIZE	128:8:5244:5257	11262559	0	True				
ANR	11262741	RelationalExpression	left < WINSIZE		11262559	0		<			
ANR	11262742	Identifier	left		11262559	0					
ANR	11262743	Identifier	WINSIZE		11262559	1					
ANR	11262744	ExpressionStatement	"memcpy ( next -> window + left , window , WINSIZE - left )"	129:8:5268:5319	11262559	1	True				
ANR	11262745	CallExpression	"memcpy ( next -> window + left , window , WINSIZE - left )"		11262559	0					
ANR	11262746	Callee	memcpy		11262559	0					
ANR	11262747	Identifier	memcpy		11262559	0					
ANR	11262748	ArgumentList	next -> window + left		11262559	1					
ANR	11262749	Argument	next -> window + left		11262559	0					
ANR	11262750	AdditiveExpression	next -> window + left		11262559	0		+			
ANR	11262751	PtrMemberAccess	next -> window		11262559	0					
ANR	11262752	Identifier	next		11262559	0					
ANR	11262753	Identifier	window		11262559	1					
ANR	11262754	Identifier	left		11262559	1					
ANR	11262755	Argument	window		11262559	1					
ANR	11262756	Identifier	window		11262559	0					
ANR	11262757	Argument	WINSIZE - left		11262559	2					
ANR	11262758	AdditiveExpression	WINSIZE - left		11262559	0		-			
ANR	11262759	Identifier	WINSIZE		11262559	0					
ANR	11262760	Identifier	left		11262559	1					
ANR	11262761	ExpressionStatement	index -> have ++	130:4:5325:5338	11262559	8	True				
ANR	11262762	PostIncDecOperationExpression	index -> have ++		11262559	0					
ANR	11262763	PtrMemberAccess	index -> have		11262559	0					
ANR	11262764	Identifier	index		11262559	0					
ANR	11262765	Identifier	have		11262559	1					
ANR	11262766	IncDec	++		11262559	1					
ANR	11262767	ReturnStatement	return index ;	133:4:5389:5401	11262559	9	True				
ANR	11262768	Identifier	index		11262559	0					
ANR	11262769	ReturnType	struct access *		11262559	1					
ANR	11262770	Identifier	addpoint		11262559	2					
ANR	11262771	ParameterList	"struct access * index , int bits , off_t in , off_t out , unsigned left , unsigned char * window"		11262559	3					
ANR	11262772	Parameter	struct access * index	92:30:4184:4203	11262559	0	True				
ANR	11262773	ParameterType	struct access *		11262559	0					
ANR	11262774	Identifier	index		11262559	1					
ANR	11262775	Parameter	int bits	92:52:4206:4213	11262559	1	True				
ANR	11262776	ParameterType	int		11262559	0					
ANR	11262777	Identifier	bits		11262559	1					
ANR	11262778	Parameter	off_t in	93:4:4220:4227	11262559	2	True				
ANR	11262779	ParameterType	off_t		11262559	0					
ANR	11262780	Identifier	in		11262559	1					
ANR	11262781	Parameter	off_t out	93:14:4230:4238	11262559	3	True				
ANR	11262782	ParameterType	off_t		11262559	0					
ANR	11262783	Identifier	out		11262559	1					
ANR	11262784	Parameter	unsigned left	93:25:4241:4253	11262559	4	True				
ANR	11262785	ParameterType	unsigned		11262559	0					
ANR	11262786	Identifier	left		11262559	1					
ANR	11262787	Parameter	unsigned char * window	93:40:4256:4276	11262559	5	True				
ANR	11262788	ParameterType	unsigned char *		11262559	0					
ANR	11262789	Identifier	window		11262559	1					
ANR	11262790	CFGEntryNode	ENTRY		11262559		True				
ANR	11262791	CFGExitNode	EXIT		11262559		True				
ANR	11262792	Symbol	next		11262559						
ANR	11262793	Symbol	malloc		11262559						
ANR	11262794	Symbol	NULL		11262559						
ANR	11262795	Symbol	next -> window		11262559						
ANR	11262796	Symbol	in		11262559						
ANR	11262797	Symbol	* index		11262559						
ANR	11262798	Symbol	next -> in		11262559						
ANR	11262799	Symbol	bits		11262559						
ANR	11262800	Symbol	index		11262559						
ANR	11262801	Symbol	index -> list		11262559						
ANR	11262802	Symbol	next -> out		11262559						
ANR	11262803	Symbol	realloc		11262559						
ANR	11262804	Symbol	* next		11262559						
ANR	11262805	Symbol	out		11262559						
ANR	11262806	Symbol	next -> bits		11262559						
ANR	11262807	Symbol	left		11262559						
ANR	11262808	Symbol	window		11262559						
ANR	11262809	Symbol	index -> size		11262559						
ANR	11262810	Symbol	WINSIZE		11262559						
ANR	11262811	Symbol	index -> have		11262559						
ANR	11262812	Function	build_index	144:0:6022:9775							
ANR	11262813	FunctionDef	"build_index (FILE * in , off_t span , struct access * * built)"		11262812	0					
ANR	11262814	CompoundStatement		145:0:6089:9775	11262812	0					
ANR	11262815	IdentifierDeclStatement	int ret ;	146:4:6095:6102	11262812	0	True				
ANR	11262816	IdentifierDecl	ret		11262812	0					
ANR	11262817	IdentifierDeclType	int		11262812	0					
ANR	11262818	Identifier	ret		11262812	1					
ANR	11262819	IdentifierDeclStatement	"off_t totin , totout ;"	147:4:6108:6127	11262812	1	True				
ANR	11262820	IdentifierDecl	totin		11262812	0					
ANR	11262821	IdentifierDeclType	off_t		11262812	0					
ANR	11262822	Identifier	totin		11262812	1					
ANR	11262823	IdentifierDecl	totout		11262812	1					
ANR	11262824	IdentifierDeclType	off_t		11262812	0					
ANR	11262825	Identifier	totout		11262812	1					
ANR	11262826	IdentifierDeclStatement	off_t last ;	148:4:6188:6198	11262812	2	True				
ANR	11262827	IdentifierDecl	last		11262812	0					
ANR	11262828	IdentifierDeclType	off_t		11262812	0					
ANR	11262829	Identifier	last		11262812	1					
ANR	11262830	IdentifierDeclStatement	struct access * index ;	149:4:6260:6280	11262812	3	True				
ANR	11262831	IdentifierDecl	* index		11262812	0					
ANR	11262832	IdentifierDeclType	struct access *		11262812	0					
ANR	11262833	Identifier	index		11262812	1					
ANR	11262834	IdentifierDeclStatement	z_stream strm ;	150:4:6328:6341	11262812	4	True				
ANR	11262835	IdentifierDecl	strm		11262812	0					
ANR	11262836	IdentifierDeclType	z_stream		11262812	0					
ANR	11262837	Identifier	strm		11262812	1					
ANR	11262838	IdentifierDeclStatement	unsigned char input [ CHUNK ] ;	151:4:6347:6373	11262812	5	True				
ANR	11262839	IdentifierDecl	input [ CHUNK ]		11262812	0					
ANR	11262840	IdentifierDeclType	unsigned char [ CHUNK ]		11262812	0					
ANR	11262841	Identifier	input		11262812	1					
ANR	11262842	Identifier	CHUNK		11262812	2					
ANR	11262843	IdentifierDeclStatement	unsigned char window [ WINSIZE ] ;	152:4:6379:6408	11262812	6	True				
ANR	11262844	IdentifierDecl	window [ WINSIZE ]		11262812	0					
ANR	11262845	IdentifierDeclType	unsigned char [ WINSIZE ]		11262812	0					
ANR	11262846	Identifier	window		11262812	1					
ANR	11262847	Identifier	WINSIZE		11262812	2					
ANR	11262848	ExpressionStatement	strm . zalloc = Z_NULL	155:4:6444:6464	11262812	7	True				
ANR	11262849	AssignmentExpression	strm . zalloc = Z_NULL		11262812	0		=			
ANR	11262850	MemberAccess	strm . zalloc		11262812	0					
ANR	11262851	Identifier	strm		11262812	0					
ANR	11262852	Identifier	zalloc		11262812	1					
ANR	11262853	Identifier	Z_NULL		11262812	1					
ANR	11262854	ExpressionStatement	strm . zfree = Z_NULL	156:4:6470:6489	11262812	8	True				
ANR	11262855	AssignmentExpression	strm . zfree = Z_NULL		11262812	0		=			
ANR	11262856	MemberAccess	strm . zfree		11262812	0					
ANR	11262857	Identifier	strm		11262812	0					
ANR	11262858	Identifier	zfree		11262812	1					
ANR	11262859	Identifier	Z_NULL		11262812	1					
ANR	11262860	ExpressionStatement	strm . opaque = Z_NULL	157:4:6495:6515	11262812	9	True				
ANR	11262861	AssignmentExpression	strm . opaque = Z_NULL		11262812	0		=			
ANR	11262862	MemberAccess	strm . opaque		11262812	0					
ANR	11262863	Identifier	strm		11262812	0					
ANR	11262864	Identifier	opaque		11262812	1					
ANR	11262865	Identifier	Z_NULL		11262812	1					
ANR	11262866	ExpressionStatement	strm . avail_in = 0	158:4:6521:6538	11262812	10	True				
ANR	11262867	AssignmentExpression	strm . avail_in = 0		11262812	0		=			
ANR	11262868	MemberAccess	strm . avail_in		11262812	0					
ANR	11262869	Identifier	strm		11262812	0					
ANR	11262870	Identifier	avail_in		11262812	1					
ANR	11262871	PrimaryExpression	0		11262812	1					
ANR	11262872	ExpressionStatement	strm . next_in = Z_NULL	159:4:6544:6565	11262812	11	True				
ANR	11262873	AssignmentExpression	strm . next_in = Z_NULL		11262812	0		=			
ANR	11262874	MemberAccess	strm . next_in		11262812	0					
ANR	11262875	Identifier	strm		11262812	0					
ANR	11262876	Identifier	next_in		11262812	1					
ANR	11262877	Identifier	Z_NULL		11262812	1					
ANR	11262878	ExpressionStatement	"ret = inflateInit2 ( & strm , 47 )"	160:4:6571:6600	11262812	12	True				
ANR	11262879	AssignmentExpression	"ret = inflateInit2 ( & strm , 47 )"		11262812	0		=			
ANR	11262880	Identifier	ret		11262812	0					
ANR	11262881	CallExpression	"inflateInit2 ( & strm , 47 )"		11262812	1					
ANR	11262882	Callee	inflateInit2		11262812	0					
ANR	11262883	Identifier	inflateInit2		11262812	0					
ANR	11262884	ArgumentList	& strm		11262812	1					
ANR	11262885	Argument	& strm		11262812	0					
ANR	11262886	UnaryOperationExpression	& strm		11262812	0					
ANR	11262887	UnaryOperator	&		11262812	0					
ANR	11262888	Identifier	strm		11262812	1					
ANR	11262889	Argument	47		11262812	1					
ANR	11262890	PrimaryExpression	47		11262812	0					
ANR	11262891	IfStatement	if ( ret != Z_OK )		11262812	13					
ANR	11262892	Condition	ret != Z_OK	161:8:6653:6663	11262812	0	True				
ANR	11262893	EqualityExpression	ret != Z_OK		11262812	0		!=			
ANR	11262894	Identifier	ret		11262812	0					
ANR	11262895	Identifier	Z_OK		11262812	1					
ANR	11262896	ReturnStatement	return ret ;	162:8:6674:6684	11262812	1	True				
ANR	11262897	Identifier	ret		11262812	0					
ANR	11262898	ExpressionStatement	totin = totout = last = 0	167:4:6906:6931	11262812	14	True				
ANR	11262899	AssignmentExpression	totin = totout = last = 0		11262812	0		=			
ANR	11262900	Identifier	totin		11262812	0					
ANR	11262901	AssignmentExpression	totout = last = 0		11262812	1		=			
ANR	11262902	Identifier	totout		11262812	0					
ANR	11262903	AssignmentExpression	last = 0		11262812	1		=			
ANR	11262904	Identifier	last		11262812	0					
ANR	11262905	PrimaryExpression	0		11262812	1					
ANR	11262906	ExpressionStatement	index = NULL	168:4:6937:6949	11262812	15	True				
ANR	11262907	AssignmentExpression	index = NULL		11262812	0		=			
ANR	11262908	Identifier	index		11262812	0					
ANR	11262909	Identifier	NULL		11262812	1					
ANR	11262910	ExpressionStatement	strm . avail_out = 0	169:4:7013:7031	11262812	16	True				
ANR	11262911	AssignmentExpression	strm . avail_out = 0		11262812	0		=			
ANR	11262912	MemberAccess	strm . avail_out		11262812	0					
ANR	11262913	Identifier	strm		11262812	0					
ANR	11262914	Identifier	avail_out		11262812	1					
ANR	11262915	PrimaryExpression	0		11262812	1					
ANR	11262916	DoStatement	do		11262812	17					
ANR	11262917	CompoundStatement		26:7:950:950	11262812	0					
ANR	11262918	ExpressionStatement	"strm . avail_in = fread ( input , 1 , CHUNK , in )"	172:8:7105:7147	11262812	0	True				
ANR	11262919	AssignmentExpression	"strm . avail_in = fread ( input , 1 , CHUNK , in )"		11262812	0		=			
ANR	11262920	MemberAccess	strm . avail_in		11262812	0					
ANR	11262921	Identifier	strm		11262812	0					
ANR	11262922	Identifier	avail_in		11262812	1					
ANR	11262923	CallExpression	"fread ( input , 1 , CHUNK , in )"		11262812	1					
ANR	11262924	Callee	fread		11262812	0					
ANR	11262925	Identifier	fread		11262812	0					
ANR	11262926	ArgumentList	input		11262812	1					
ANR	11262927	Argument	input		11262812	0					
ANR	11262928	Identifier	input		11262812	0					
ANR	11262929	Argument	1		11262812	1					
ANR	11262930	PrimaryExpression	1		11262812	0					
ANR	11262931	Argument	CHUNK		11262812	2					
ANR	11262932	Identifier	CHUNK		11262812	0					
ANR	11262933	Argument	in		11262812	3					
ANR	11262934	Identifier	in		11262812	0					
ANR	11262935	IfStatement	if ( ferror ( in ) )		11262812	1					
ANR	11262936	Condition	ferror ( in )	173:12:7161:7170	11262812	0	True				
ANR	11262937	CallExpression	ferror ( in )		11262812	0					
ANR	11262938	Callee	ferror		11262812	0					
ANR	11262939	Identifier	ferror		11262812	0					
ANR	11262940	ArgumentList	in		11262812	1					
ANR	11262941	Argument	in		11262812	0					
ANR	11262942	Identifier	in		11262812	0					
ANR	11262943	CompoundStatement		29:24:1083:1083	11262812	1					
ANR	11262944	ExpressionStatement	ret = Z_ERRNO	174:12:7187:7200	11262812	0	True				
ANR	11262945	AssignmentExpression	ret = Z_ERRNO		11262812	0		=			
ANR	11262946	Identifier	ret		11262812	0					
ANR	11262947	Identifier	Z_ERRNO		11262812	1					
ANR	11262948	GotoStatement	goto build_index_error ;	175:12:7214:7236	11262812	1	True				
ANR	11262949	Identifier	build_index_error		11262812	0					
ANR	11262950	IfStatement	if ( strm . avail_in == 0 )		11262812	2					
ANR	11262951	Condition	strm . avail_in == 0	177:12:7260:7277	11262812	0	True				
ANR	11262952	EqualityExpression	strm . avail_in == 0		11262812	0		==			
ANR	11262953	MemberAccess	strm . avail_in		11262812	0					
ANR	11262954	Identifier	strm		11262812	0					
ANR	11262955	Identifier	avail_in		11262812	1					
ANR	11262956	PrimaryExpression	0		11262812	1					
ANR	11262957	CompoundStatement		33:32:1190:1190	11262812	1					
ANR	11262958	ExpressionStatement	ret = Z_DATA_ERROR	178:12:7294:7312	11262812	0	True				
ANR	11262959	AssignmentExpression	ret = Z_DATA_ERROR		11262812	0		=			
ANR	11262960	Identifier	ret		11262812	0					
ANR	11262961	Identifier	Z_DATA_ERROR		11262812	1					
ANR	11262962	GotoStatement	goto build_index_error ;	179:12:7326:7348	11262812	1	True				
ANR	11262963	Identifier	build_index_error		11262812	0					
ANR	11262964	ExpressionStatement	strm . next_in = input	181:8:7368:7388	11262812	3	True				
ANR	11262965	AssignmentExpression	strm . next_in = input		11262812	0		=			
ANR	11262966	MemberAccess	strm . next_in		11262812	0					
ANR	11262967	Identifier	strm		11262812	0					
ANR	11262968	Identifier	next_in		11262812	1					
ANR	11262969	Identifier	input		11262812	1					
ANR	11262970	DoStatement	do		11262812	4					
ANR	11262971	CompoundStatement		40:11:1370:1370	11262812	0					
ANR	11262972	IfStatement	if ( strm . avail_out == 0 )		11262812	0					
ANR	11262973	Condition	strm . avail_out == 0	186:16:7530:7548	11262812	0	True				
ANR	11262974	EqualityExpression	strm . avail_out == 0		11262812	0		==			
ANR	11262975	MemberAccess	strm . avail_out		11262812	0					
ANR	11262976	Identifier	strm		11262812	0					
ANR	11262977	Identifier	avail_out		11262812	1					
ANR	11262978	PrimaryExpression	0		11262812	1					
ANR	11262979	CompoundStatement		42:37:1461:1461	11262812	1					
ANR	11262980	ExpressionStatement	strm . avail_out = WINSIZE	187:16:7569:7593	11262812	0	True				
ANR	11262981	AssignmentExpression	strm . avail_out = WINSIZE		11262812	0		=			
ANR	11262982	MemberAccess	strm . avail_out		11262812	0					
ANR	11262983	Identifier	strm		11262812	0					
ANR	11262984	Identifier	avail_out		11262812	1					
ANR	11262985	Identifier	WINSIZE		11262812	1					
ANR	11262986	ExpressionStatement	strm . next_out = window	188:16:7611:7633	11262812	1	True				
ANR	11262987	AssignmentExpression	strm . next_out = window		11262812	0		=			
ANR	11262988	MemberAccess	strm . next_out		11262812	0					
ANR	11262989	Identifier	strm		11262812	0					
ANR	11262990	Identifier	next_out		11262812	1					
ANR	11262991	Identifier	window		11262812	1					
ANR	11262992	ExpressionStatement	totin += strm . avail_in	193:12:7796:7818	11262812	1	True				
ANR	11262993	AssignmentExpression	totin += strm . avail_in		11262812	0		+=			
ANR	11262994	Identifier	totin		11262812	0					
ANR	11262995	MemberAccess	strm . avail_in		11262812	1					
ANR	11262996	Identifier	strm		11262812	0					
ANR	11262997	Identifier	avail_in		11262812	1					
ANR	11262998	ExpressionStatement	totout += strm . avail_out	194:12:7832:7856	11262812	2	True				
ANR	11262999	AssignmentExpression	totout += strm . avail_out		11262812	0		+=			
ANR	11263000	Identifier	totout		11262812	0					
ANR	11263001	MemberAccess	strm . avail_out		11262812	1					
ANR	11263002	Identifier	strm		11262812	0					
ANR	11263003	Identifier	avail_out		11262812	1					
ANR	11263004	ExpressionStatement	"ret = inflate ( & strm , Z_BLOCK )"	195:12:7870:7899	11262812	3	True				
ANR	11263005	AssignmentExpression	"ret = inflate ( & strm , Z_BLOCK )"		11262812	0		=			
ANR	11263006	Identifier	ret		11262812	0					
ANR	11263007	CallExpression	"inflate ( & strm , Z_BLOCK )"		11262812	1					
ANR	11263008	Callee	inflate		11262812	0					
ANR	11263009	Identifier	inflate		11262812	0					
ANR	11263010	ArgumentList	& strm		11262812	1					
ANR	11263011	Argument	& strm		11262812	0					
ANR	11263012	UnaryOperationExpression	& strm		11262812	0					
ANR	11263013	UnaryOperator	&		11262812	0					
ANR	11263014	Identifier	strm		11262812	1					
ANR	11263015	Argument	Z_BLOCK		11262812	1					
ANR	11263016	Identifier	Z_BLOCK		11262812	0					
ANR	11263017	ExpressionStatement	totin -= strm . avail_in	196:12:7947:7969	11262812	4	True				
ANR	11263018	AssignmentExpression	totin -= strm . avail_in		11262812	0		-=			
ANR	11263019	Identifier	totin		11262812	0					
ANR	11263020	MemberAccess	strm . avail_in		11262812	1					
ANR	11263021	Identifier	strm		11262812	0					
ANR	11263022	Identifier	avail_in		11262812	1					
ANR	11263023	ExpressionStatement	totout -= strm . avail_out	197:12:7983:8007	11262812	5	True				
ANR	11263024	AssignmentExpression	totout -= strm . avail_out		11262812	0		-=			
ANR	11263025	Identifier	totout		11262812	0					
ANR	11263026	MemberAccess	strm . avail_out		11262812	1					
ANR	11263027	Identifier	strm		11262812	0					
ANR	11263028	Identifier	avail_out		11262812	1					
ANR	11263029	IfStatement	if ( ret == Z_NEED_DICT )		11262812	6					
ANR	11263030	Condition	ret == Z_NEED_DICT	198:16:8025:8042	11262812	0	True				
ANR	11263031	EqualityExpression	ret == Z_NEED_DICT		11262812	0		==			
ANR	11263032	Identifier	ret		11262812	0					
ANR	11263033	Identifier	Z_NEED_DICT		11262812	1					
ANR	11263034	ExpressionStatement	ret = Z_DATA_ERROR	199:16:8061:8079	11262812	1	True				
ANR	11263035	AssignmentExpression	ret = Z_DATA_ERROR		11262812	0		=			
ANR	11263036	Identifier	ret		11262812	0					
ANR	11263037	Identifier	Z_DATA_ERROR		11262812	1					
ANR	11263038	IfStatement	if ( ret == Z_MEM_ERROR || ret == Z_DATA_ERROR )		11262812	7					
ANR	11263039	Condition	ret == Z_MEM_ERROR || ret == Z_DATA_ERROR	200:16:8097:8137	11262812	0	True				
ANR	11263040	OrExpression	ret == Z_MEM_ERROR || ret == Z_DATA_ERROR		11262812	0		||			
ANR	11263041	EqualityExpression	ret == Z_MEM_ERROR		11262812	0		==			
ANR	11263042	Identifier	ret		11262812	0					
ANR	11263043	Identifier	Z_MEM_ERROR		11262812	1					
ANR	11263044	EqualityExpression	ret == Z_DATA_ERROR		11262812	1		==			
ANR	11263045	Identifier	ret		11262812	0					
ANR	11263046	Identifier	Z_DATA_ERROR		11262812	1					
ANR	11263047	GotoStatement	goto build_index_error ;	201:16:8156:8178	11262812	1	True				
ANR	11263048	Identifier	build_index_error		11262812	0					
ANR	11263049	IfStatement	if ( ret == Z_STREAM_END )		11262812	8					
ANR	11263050	Condition	ret == Z_STREAM_END	202:16:8196:8214	11262812	0	True				
ANR	11263051	EqualityExpression	ret == Z_STREAM_END		11262812	0		==			
ANR	11263052	Identifier	ret		11262812	0					
ANR	11263053	Identifier	Z_STREAM_END		11262812	1					
ANR	11263054	BreakStatement	break ;	203:16:8233:8238	11262812	1	True				
ANR	11263055	IfStatement	if ( ( strm . data_type & 128 ) && ! ( strm . data_type & 64 ) && ( totout == 0 || totout - last > span ) )		11262812	9					
ANR	11263056	Condition	( strm . data_type & 128 ) && ! ( strm . data_type & 64 ) && ( totout == 0 || totout - last > span )	214:16:8887:8991	11262812	0	True				
ANR	11263057	AndExpression	( strm . data_type & 128 ) && ! ( strm . data_type & 64 ) && ( totout == 0 || totout - last > span )		11262812	0		&&			
ANR	11263058	BitAndExpression	strm . data_type & 128		11262812	0		&			
ANR	11263059	MemberAccess	strm . data_type		11262812	0					
ANR	11263060	Identifier	strm		11262812	0					
ANR	11263061	Identifier	data_type		11262812	1					
ANR	11263062	PrimaryExpression	128		11262812	1					
ANR	11263063	AndExpression	! ( strm . data_type & 64 ) && ( totout == 0 || totout - last > span )		11262812	1		&&			
ANR	11263064	UnaryOperationExpression	! ( strm . data_type & 64 )		11262812	0					
ANR	11263065	UnaryOperator	!		11262812	0					
ANR	11263066	BitAndExpression	strm . data_type & 64		11262812	1		&			
ANR	11263067	MemberAccess	strm . data_type		11262812	0					
ANR	11263068	Identifier	strm		11262812	0					
ANR	11263069	Identifier	data_type		11262812	1					
ANR	11263070	PrimaryExpression	64		11262812	1					
ANR	11263071	OrExpression	totout == 0 || totout - last > span		11262812	1		||			
ANR	11263072	EqualityExpression	totout == 0		11262812	0		==			
ANR	11263073	Identifier	totout		11262812	0					
ANR	11263074	PrimaryExpression	0		11262812	1					
ANR	11263075	RelationalExpression	totout - last > span		11262812	1		>			
ANR	11263076	AdditiveExpression	totout - last		11262812	0		-			
ANR	11263077	Identifier	totout		11262812	0					
ANR	11263078	Identifier	last		11262812	1					
ANR	11263079	Identifier	span		11262812	1					
ANR	11263080	CompoundStatement		71:55:2904:2904	11262812	1					
ANR	11263081	ExpressionStatement	"index = addpoint ( index , strm . data_type & 7 , totin , totout , strm . avail_out , window )"	216:16:9012:9127	11262812	0	True				
ANR	11263082	AssignmentExpression	"index = addpoint ( index , strm . data_type & 7 , totin , totout , strm . avail_out , window )"		11262812	0		=			
ANR	11263083	Identifier	index		11262812	0					
ANR	11263084	CallExpression	"addpoint ( index , strm . data_type & 7 , totin , totout , strm . avail_out , window )"		11262812	1					
ANR	11263085	Callee	addpoint		11262812	0					
ANR	11263086	Identifier	addpoint		11262812	0					
ANR	11263087	ArgumentList	index		11262812	1					
ANR	11263088	Argument	index		11262812	0					
ANR	11263089	Identifier	index		11262812	0					
ANR	11263090	Argument	strm . data_type & 7		11262812	1					
ANR	11263091	BitAndExpression	strm . data_type & 7		11262812	0		&			
ANR	11263092	MemberAccess	strm . data_type		11262812	0					
ANR	11263093	Identifier	strm		11262812	0					
ANR	11263094	Identifier	data_type		11262812	1					
ANR	11263095	PrimaryExpression	7		11262812	1					
ANR	11263096	Argument	totin		11262812	2					
ANR	11263097	Identifier	totin		11262812	0					
ANR	11263098	Argument	totout		11262812	3					
ANR	11263099	Identifier	totout		11262812	0					
ANR	11263100	Argument	strm . avail_out		11262812	4					
ANR	11263101	MemberAccess	strm . avail_out		11262812	0					
ANR	11263102	Identifier	strm		11262812	0					
ANR	11263103	Identifier	avail_out		11262812	1					
ANR	11263104	Argument	window		11262812	5					
ANR	11263105	Identifier	window		11262812	0					
ANR	11263106	IfStatement	if ( index == NULL )		11262812	1					
ANR	11263107	Condition	index == NULL	218:20:9149:9161	11262812	0	True				
ANR	11263108	EqualityExpression	index == NULL		11262812	0		==			
ANR	11263109	Identifier	index		11262812	0					
ANR	11263110	Identifier	NULL		11262812	1					
ANR	11263111	CompoundStatement		74:35:3074:3074	11262812	1					
ANR	11263112	ExpressionStatement	ret = Z_MEM_ERROR	219:20:9186:9203	11262812	0	True				
ANR	11263113	AssignmentExpression	ret = Z_MEM_ERROR		11262812	0		=			
ANR	11263114	Identifier	ret		11262812	0					
ANR	11263115	Identifier	Z_MEM_ERROR		11262812	1					
ANR	11263116	GotoStatement	goto build_index_error ;	220:20:9225:9247	11262812	1	True				
ANR	11263117	Identifier	build_index_error		11262812	0					
ANR	11263118	ExpressionStatement	last = totout	222:16:9283:9296	11262812	2	True				
ANR	11263119	AssignmentExpression	last = totout		11262812	0		=			
ANR	11263120	Identifier	last		11262812	0					
ANR	11263121	Identifier	totout		11262812	1					
ANR	11263122	Condition	strm . avail_in != 0	224:17:9329:9346	11262812	1	True				
ANR	11263123	EqualityExpression	strm . avail_in != 0		11262812	0		!=			
ANR	11263124	MemberAccess	strm . avail_in		11262812	0					
ANR	11263125	Identifier	strm		11262812	0					
ANR	11263126	Identifier	avail_in		11262812	1					
ANR	11263127	PrimaryExpression	0		11262812	1					
ANR	11263128	Condition	ret != Z_STREAM_END	225:13:9363:9381	11262812	1	True				
ANR	11263129	EqualityExpression	ret != Z_STREAM_END		11262812	0		!=			
ANR	11263130	Identifier	ret		11262812	0					
ANR	11263131	Identifier	Z_STREAM_END		11262812	1					
ANR	11263132	ExpressionStatement	( void ) inflateEnd ( & strm )	228:4:9459:9482	11262812	18	True				
ANR	11263133	CastExpression	( void ) inflateEnd ( & strm )		11262812	0					
ANR	11263134	CastTarget	void		11262812	0					
ANR	11263135	CallExpression	inflateEnd ( & strm )		11262812	1					
ANR	11263136	Callee	inflateEnd		11262812	0					
ANR	11263137	Identifier	inflateEnd		11262812	0					
ANR	11263138	ArgumentList	& strm		11262812	1					
ANR	11263139	Argument	& strm		11262812	0					
ANR	11263140	UnaryOperationExpression	& strm		11262812	0					
ANR	11263141	UnaryOperator	&		11262812	0					
ANR	11263142	Identifier	strm		11262812	1					
ANR	11263143	ExpressionStatement	"index -> list = realloc ( index -> list , sizeof ( struct point ) * index -> have )"	229:4:9488:9558	11262812	19	True				
ANR	11263144	AssignmentExpression	"index -> list = realloc ( index -> list , sizeof ( struct point ) * index -> have )"		11262812	0		=			
ANR	11263145	PtrMemberAccess	index -> list		11262812	0					
ANR	11263146	Identifier	index		11262812	0					
ANR	11263147	Identifier	list		11262812	1					
ANR	11263148	CallExpression	"realloc ( index -> list , sizeof ( struct point ) * index -> have )"		11262812	1					
ANR	11263149	Callee	realloc		11262812	0					
ANR	11263150	Identifier	realloc		11262812	0					
ANR	11263151	ArgumentList	index -> list		11262812	1					
ANR	11263152	Argument	index -> list		11262812	0					
ANR	11263153	PtrMemberAccess	index -> list		11262812	0					
ANR	11263154	Identifier	index		11262812	0					
ANR	11263155	Identifier	list		11262812	1					
ANR	11263156	Argument	sizeof ( struct point ) * index -> have		11262812	1					
ANR	11263157	MultiplicativeExpression	sizeof ( struct point ) * index -> have		11262812	0		*			
ANR	11263158	SizeofExpression	sizeof ( struct point )		11262812	0					
ANR	11263159	Sizeof	sizeof		11262812	0					
ANR	11263160	SizeofOperand	struct point		11262812	1					
ANR	11263161	PtrMemberAccess	index -> have		11262812	1					
ANR	11263162	Identifier	index		11262812	0					
ANR	11263163	Identifier	have		11262812	1					
ANR	11263164	ExpressionStatement	index -> size = index -> have	230:4:9564:9589	11262812	20	True				
ANR	11263165	AssignmentExpression	index -> size = index -> have		11262812	0		=			
ANR	11263166	PtrMemberAccess	index -> size		11262812	0					
ANR	11263167	Identifier	index		11262812	0					
ANR	11263168	Identifier	size		11262812	1					
ANR	11263169	PtrMemberAccess	index -> have		11262812	1					
ANR	11263170	Identifier	index		11262812	0					
ANR	11263171	Identifier	have		11262812	1					
ANR	11263172	ExpressionStatement	* built = index	231:4:9595:9609	11262812	21	True				
ANR	11263173	AssignmentExpression	* built = index		11262812	0		=			
ANR	11263174	UnaryOperationExpression	* built		11262812	0					
ANR	11263175	UnaryOperator	*		11262812	0					
ANR	11263176	Identifier	built		11262812	1					
ANR	11263177	Identifier	index		11262812	1					
ANR	11263178	ReturnStatement	return index -> size ;	232:4:9615:9633	11262812	22	True				
ANR	11263179	PtrMemberAccess	index -> size		11262812	0					
ANR	11263180	Identifier	index		11262812	0					
ANR	11263181	Identifier	size		11262812	1					
ANR	11263182	Label	build_index_error :	235:2:9661:9678	11262812	23	True				
ANR	11263183	Identifier	build_index_error		11262812	0					
ANR	11263184	ExpressionStatement	( void ) inflateEnd ( & strm )	236:4:9684:9707	11262812	24	True				
ANR	11263185	CastExpression	( void ) inflateEnd ( & strm )		11262812	0					
ANR	11263186	CastTarget	void		11262812	0					
ANR	11263187	CallExpression	inflateEnd ( & strm )		11262812	1					
ANR	11263188	Callee	inflateEnd		11262812	0					
ANR	11263189	Identifier	inflateEnd		11262812	0					
ANR	11263190	ArgumentList	& strm		11262812	1					
ANR	11263191	Argument	& strm		11262812	0					
ANR	11263192	UnaryOperationExpression	& strm		11262812	0					
ANR	11263193	UnaryOperator	&		11262812	0					
ANR	11263194	Identifier	strm		11262812	1					
ANR	11263195	IfStatement	if ( index != NULL )		11262812	25					
ANR	11263196	Condition	index != NULL	237:8:9717:9729	11262812	0	True				
ANR	11263197	EqualityExpression	index != NULL		11262812	0		!=			
ANR	11263198	Identifier	index		11262812	0					
ANR	11263199	Identifier	NULL		11262812	1					
ANR	11263200	ExpressionStatement	free_index ( index )	238:8:9740:9757	11262812	1	True				
ANR	11263201	CallExpression	free_index ( index )		11262812	0					
ANR	11263202	Callee	free_index		11262812	0					
ANR	11263203	Identifier	free_index		11262812	0					
ANR	11263204	ArgumentList	index		11262812	1					
ANR	11263205	Argument	index		11262812	0					
ANR	11263206	Identifier	index		11262812	0					
ANR	11263207	ReturnStatement	return ret ;	239:4:9763:9773	11262812	26	True				
ANR	11263208	Identifier	ret		11262812	0					
ANR	11263209	ReturnType	local int		11262812	1					
ANR	11263210	Identifier	build_index		11262812	2					
ANR	11263211	ParameterList	"FILE * in , off_t span , struct access * * built"		11262812	3					
ANR	11263212	Parameter	FILE * in	144:22:6044:6051	11262812	0	True				
ANR	11263213	ParameterType	FILE *		11262812	0					
ANR	11263214	Identifier	in		11262812	1					
ANR	11263215	Parameter	off_t span	144:32:6054:6063	11262812	1	True				
ANR	11263216	ParameterType	off_t		11262812	0					
ANR	11263217	Identifier	span		11262812	1					
ANR	11263218	Parameter	struct access * * built	144:44:6066:6086	11262812	2	True				
ANR	11263219	ParameterType	struct access * *		11262812	0					
ANR	11263220	Identifier	built		11262812	1					
ANR	11263221	CFGEntryNode	ENTRY		11262812		True				
ANR	11263222	CFGExitNode	EXIT		11262812		True				
ANR	11263223	Symbol	Z_DATA_ERROR		11262812						
ANR	11263224	Symbol	Z_MEM_ERROR		11262812						
ANR	11263225	Symbol	& strm		11262812						
ANR	11263226	Symbol	* index		11262812						
ANR	11263227	Symbol	index -> list		11262812						
ANR	11263228	Symbol	strm . zalloc		11262812						
ANR	11263229	Symbol	Z_OK		11262812						
ANR	11263230	Symbol	addpoint		11262812						
ANR	11263231	Symbol	realloc		11262812						
ANR	11263232	Symbol	strm . next_in		11262812						
ANR	11263233	Symbol	totout		11262812						
ANR	11263234	Symbol	strm . opaque		11262812						
ANR	11263235	Symbol	Z_STREAM_END		11262812						
ANR	11263236	Symbol	Z_BLOCK		11262812						
ANR	11263237	Symbol	index -> size		11262812						
ANR	11263238	Symbol	CHUNK		11262812						
ANR	11263239	Symbol	ret		11262812						
ANR	11263240	Symbol	inflateInit2		11262812						
ANR	11263241	Symbol	Z_ERRNO		11262812						
ANR	11263242	Symbol	NULL		11262812						
ANR	11263243	Symbol	last		11262812						
ANR	11263244	Symbol	in		11262812						
ANR	11263245	Symbol	built		11262812						
ANR	11263246	Symbol	totin		11262812						
ANR	11263247	Symbol	index		11262812						
ANR	11263248	Symbol	strm		11262812						
ANR	11263249	Symbol	strm . data_type		11262812						
ANR	11263250	Symbol	fread		11262812						
ANR	11263251	Symbol	input		11262812						
ANR	11263252	Symbol	ferror		11262812						
ANR	11263253	Symbol	strm . avail_out		11262812						
ANR	11263254	Symbol	inflate		11262812						
ANR	11263255	Symbol	* built		11262812						
ANR	11263256	Symbol	strm . next_out		11262812						
ANR	11263257	Symbol	window		11262812						
ANR	11263258	Symbol	strm . zfree		11262812						
ANR	11263259	Symbol	WINSIZE		11262812						
ANR	11263260	Symbol	index -> have		11262812						
ANR	11263261	Symbol	Z_NEED_DICT		11262812						
ANR	11263262	Symbol	span		11262812						
ANR	11263263	Symbol	Z_NULL		11262812						
ANR	11263264	Symbol	strm . avail_in		11262812						
ANR	11263265	Function	extract	249:0:10285:13593							
ANR	11263266	FunctionDef	"extract (FILE * in , struct access * index , off_t offset , unsigned char * buf , int len)"		11263265	0					
ANR	11263267	CompoundStatement		251:0:10396:13593	11263265	0					
ANR	11263268	IdentifierDeclStatement	"int ret , skip ;"	252:4:10402:10415	11263265	0	True				
ANR	11263269	IdentifierDecl	ret		11263265	0					
ANR	11263270	IdentifierDeclType	int		11263265	0					
ANR	11263271	Identifier	ret		11263265	1					
ANR	11263272	IdentifierDecl	skip		11263265	1					
ANR	11263273	IdentifierDeclType	int		11263265	0					
ANR	11263274	Identifier	skip		11263265	1					
ANR	11263275	IdentifierDeclStatement	z_stream strm ;	253:4:10421:10434	11263265	1	True				
ANR	11263276	IdentifierDecl	strm		11263265	0					
ANR	11263277	IdentifierDeclType	z_stream		11263265	0					
ANR	11263278	Identifier	strm		11263265	1					
ANR	11263279	IdentifierDeclStatement	struct point * here ;	254:4:10440:10458	11263265	2	True				
ANR	11263280	IdentifierDecl	* here		11263265	0					
ANR	11263281	IdentifierDeclType	struct point *		11263265	0					
ANR	11263282	Identifier	here		11263265	1					
ANR	11263283	IdentifierDeclStatement	unsigned char input [ CHUNK ] ;	255:4:10464:10490	11263265	3	True				
ANR	11263284	IdentifierDecl	input [ CHUNK ]		11263265	0					
ANR	11263285	IdentifierDeclType	unsigned char [ CHUNK ]		11263265	0					
ANR	11263286	Identifier	input		11263265	1					
ANR	11263287	Identifier	CHUNK		11263265	2					
ANR	11263288	IdentifierDeclStatement	unsigned char discard [ WINSIZE ] ;	256:4:10496:10526	11263265	4	True				
ANR	11263289	IdentifierDecl	discard [ WINSIZE ]		11263265	0					
ANR	11263290	IdentifierDeclType	unsigned char [ WINSIZE ]		11263265	0					
ANR	11263291	Identifier	discard		11263265	1					
ANR	11263292	Identifier	WINSIZE		11263265	2					
ANR	11263293	IfStatement	if ( len < 0 )		11263265	5					
ANR	11263294	Condition	len < 0	259:8:10590:10596	11263265	0	True				
ANR	11263295	RelationalExpression	len < 0		11263265	0		<			
ANR	11263296	Identifier	len		11263265	0					
ANR	11263297	PrimaryExpression	0		11263265	1					
ANR	11263298	ReturnStatement	return 0 ;	260:8:10607:10615	11263265	1	True				
ANR	11263299	PrimaryExpression	0		11263265	0					
ANR	11263300	ExpressionStatement	here = index -> list	263:4:10662:10680	11263265	6	True				
ANR	11263301	AssignmentExpression	here = index -> list		11263265	0		=			
ANR	11263302	Identifier	here		11263265	0					
ANR	11263303	PtrMemberAccess	index -> list		11263265	1					
ANR	11263304	Identifier	index		11263265	0					
ANR	11263305	Identifier	list		11263265	1					
ANR	11263306	ExpressionStatement	ret = index -> have	264:4:10686:10703	11263265	7	True				
ANR	11263307	AssignmentExpression	ret = index -> have		11263265	0		=			
ANR	11263308	Identifier	ret		11263265	0					
ANR	11263309	PtrMemberAccess	index -> have		11263265	1					
ANR	11263310	Identifier	index		11263265	0					
ANR	11263311	Identifier	have		11263265	1					
ANR	11263312	WhileStatement	while ( -- ret && here [ 1 ] . out <= offset )		11263265	8					
ANR	11263313	Condition	-- ret && here [ 1 ] . out <= offset	265:11:10716:10745	11263265	0	True				
ANR	11263314	AndExpression	-- ret && here [ 1 ] . out <= offset		11263265	0		&&			
ANR	11263315	UnaryExpression	-- ret		11263265	0					
ANR	11263316	IncDec	--		11263265	0					
ANR	11263317	Identifier	ret		11263265	1					
ANR	11263318	RelationalExpression	here [ 1 ] . out <= offset		11263265	1		<=			
ANR	11263319	MemberAccess	here [ 1 ] . out		11263265	0					
ANR	11263320	ArrayIndexing	here [ 1 ]		11263265	0					
ANR	11263321	Identifier	here		11263265	0					
ANR	11263322	PrimaryExpression	1		11263265	1					
ANR	11263323	Identifier	out		11263265	1					
ANR	11263324	Identifier	offset		11263265	1					
ANR	11263325	ExpressionStatement	here ++	266:8:10756:10762	11263265	1	True				
ANR	11263326	PostIncDecOperationExpression	here ++		11263265	0					
ANR	11263327	Identifier	here		11263265	0					
ANR	11263328	IncDec	++		11263265	1					
ANR	11263329	ExpressionStatement	strm . zalloc = Z_NULL	269:4:10828:10848	11263265	9	True				
ANR	11263330	AssignmentExpression	strm . zalloc = Z_NULL		11263265	0		=			
ANR	11263331	MemberAccess	strm . zalloc		11263265	0					
ANR	11263332	Identifier	strm		11263265	0					
ANR	11263333	Identifier	zalloc		11263265	1					
ANR	11263334	Identifier	Z_NULL		11263265	1					
ANR	11263335	ExpressionStatement	strm . zfree = Z_NULL	270:4:10854:10873	11263265	10	True				
ANR	11263336	AssignmentExpression	strm . zfree = Z_NULL		11263265	0		=			
ANR	11263337	MemberAccess	strm . zfree		11263265	0					
ANR	11263338	Identifier	strm		11263265	0					
ANR	11263339	Identifier	zfree		11263265	1					
ANR	11263340	Identifier	Z_NULL		11263265	1					
ANR	11263341	ExpressionStatement	strm . opaque = Z_NULL	271:4:10879:10899	11263265	11	True				
ANR	11263342	AssignmentExpression	strm . opaque = Z_NULL		11263265	0		=			
ANR	11263343	MemberAccess	strm . opaque		11263265	0					
ANR	11263344	Identifier	strm		11263265	0					
ANR	11263345	Identifier	opaque		11263265	1					
ANR	11263346	Identifier	Z_NULL		11263265	1					
ANR	11263347	ExpressionStatement	strm . avail_in = 0	272:4:10905:10922	11263265	12	True				
ANR	11263348	AssignmentExpression	strm . avail_in = 0		11263265	0		=			
ANR	11263349	MemberAccess	strm . avail_in		11263265	0					
ANR	11263350	Identifier	strm		11263265	0					
ANR	11263351	Identifier	avail_in		11263265	1					
ANR	11263352	PrimaryExpression	0		11263265	1					
ANR	11263353	ExpressionStatement	strm . next_in = Z_NULL	273:4:10928:10949	11263265	13	True				
ANR	11263354	AssignmentExpression	strm . next_in = Z_NULL		11263265	0		=			
ANR	11263355	MemberAccess	strm . next_in		11263265	0					
ANR	11263356	Identifier	strm		11263265	0					
ANR	11263357	Identifier	next_in		11263265	1					
ANR	11263358	Identifier	Z_NULL		11263265	1					
ANR	11263359	ExpressionStatement	"ret = inflateInit2 ( & strm , - 15 )"	274:4:10955:10985	11263265	14	True				
ANR	11263360	AssignmentExpression	"ret = inflateInit2 ( & strm , - 15 )"		11263265	0		=			
ANR	11263361	Identifier	ret		11263265	0					
ANR	11263362	CallExpression	"inflateInit2 ( & strm , - 15 )"		11263265	1					
ANR	11263363	Callee	inflateInit2		11263265	0					
ANR	11263364	Identifier	inflateInit2		11263265	0					
ANR	11263365	ArgumentList	& strm		11263265	1					
ANR	11263366	Argument	& strm		11263265	0					
ANR	11263367	UnaryOperationExpression	& strm		11263265	0					
ANR	11263368	UnaryOperator	&		11263265	0					
ANR	11263369	Identifier	strm		11263265	1					
ANR	11263370	Argument	- 15		11263265	1					
ANR	11263371	UnaryOperationExpression	- 15		11263265	0					
ANR	11263372	UnaryOperator	-		11263265	0					
ANR	11263373	PrimaryExpression	15		11263265	1					
ANR	11263374	IfStatement	if ( ret != Z_OK )		11263265	15					
ANR	11263375	Condition	ret != Z_OK	275:8:11021:11031	11263265	0	True				
ANR	11263376	EqualityExpression	ret != Z_OK		11263265	0		!=			
ANR	11263377	Identifier	ret		11263265	0					
ANR	11263378	Identifier	Z_OK		11263265	1					
ANR	11263379	ReturnStatement	return ret ;	276:8:11042:11052	11263265	1	True				
ANR	11263380	Identifier	ret		11263265	0					
ANR	11263381	ExpressionStatement	"ret = fseeko ( in , here -> in - ( here -> bits ? 1 : 0 ) , SEEK_SET )"	277:4:11058:11117	11263265	16	True				
ANR	11263382	AssignmentExpression	"ret = fseeko ( in , here -> in - ( here -> bits ? 1 : 0 ) , SEEK_SET )"		11263265	0		=			
ANR	11263383	Identifier	ret		11263265	0					
ANR	11263384	CallExpression	"fseeko ( in , here -> in - ( here -> bits ? 1 : 0 ) , SEEK_SET )"		11263265	1					
ANR	11263385	Callee	fseeko		11263265	0					
ANR	11263386	Identifier	fseeko		11263265	0					
ANR	11263387	ArgumentList	in		11263265	1					
ANR	11263388	Argument	in		11263265	0					
ANR	11263389	Identifier	in		11263265	0					
ANR	11263390	Argument	here -> in - ( here -> bits ? 1 : 0 )		11263265	1					
ANR	11263391	AdditiveExpression	here -> in - ( here -> bits ? 1 : 0 )		11263265	0		-			
ANR	11263392	PtrMemberAccess	here -> in		11263265	0					
ANR	11263393	Identifier	here		11263265	0					
ANR	11263394	Identifier	in		11263265	1					
ANR	11263395	ConditionalExpression	here -> bits ? 1 : 0		11263265	1					
ANR	11263396	Condition	here -> bits		11263265	0					
ANR	11263397	PtrMemberAccess	here -> bits		11263265	0					
ANR	11263398	Identifier	here		11263265	0					
ANR	11263399	Identifier	bits		11263265	1					
ANR	11263400	PrimaryExpression	1		11263265	1					
ANR	11263401	PrimaryExpression	0		11263265	2					
ANR	11263402	Argument	SEEK_SET		11263265	2					
ANR	11263403	Identifier	SEEK_SET		11263265	0					
ANR	11263404	IfStatement	if ( ret == - 1 )		11263265	17					
ANR	11263405	Condition	ret == - 1	278:8:11127:11135	11263265	0	True				
ANR	11263406	EqualityExpression	ret == - 1		11263265	0		==			
ANR	11263407	Identifier	ret		11263265	0					
ANR	11263408	UnaryOperationExpression	- 1		11263265	1					
ANR	11263409	UnaryOperator	-		11263265	0					
ANR	11263410	PrimaryExpression	1		11263265	1					
ANR	11263411	GotoStatement	goto extract_ret ;	279:8:11146:11162	11263265	1	True				
ANR	11263412	Identifier	extract_ret		11263265	0					
ANR	11263413	IfStatement	if ( here -> bits )		11263265	18					
ANR	11263414	Condition	here -> bits	280:8:11172:11181	11263265	0	True				
ANR	11263415	PtrMemberAccess	here -> bits		11263265	0					
ANR	11263416	Identifier	here		11263265	0					
ANR	11263417	Identifier	bits		11263265	1					
ANR	11263418	CompoundStatement		30:20:787:787	11263265	1					
ANR	11263419	ExpressionStatement	ret = getc ( in )	281:8:11194:11208	11263265	0	True				
ANR	11263420	AssignmentExpression	ret = getc ( in )		11263265	0		=			
ANR	11263421	Identifier	ret		11263265	0					
ANR	11263422	CallExpression	getc ( in )		11263265	1					
ANR	11263423	Callee	getc		11263265	0					
ANR	11263424	Identifier	getc		11263265	0					
ANR	11263425	ArgumentList	in		11263265	1					
ANR	11263426	Argument	in		11263265	0					
ANR	11263427	Identifier	in		11263265	0					
ANR	11263428	IfStatement	if ( ret == - 1 )		11263265	1					
ANR	11263429	Condition	ret == - 1	282:12:11222:11230	11263265	0	True				
ANR	11263430	EqualityExpression	ret == - 1		11263265	0		==			
ANR	11263431	Identifier	ret		11263265	0					
ANR	11263432	UnaryOperationExpression	- 1		11263265	1					
ANR	11263433	UnaryOperator	-		11263265	0					
ANR	11263434	PrimaryExpression	1		11263265	1					
ANR	11263435	CompoundStatement		32:23:836:836	11263265	1					
ANR	11263436	ExpressionStatement	ret = ferror ( in ) ? Z_ERRNO : Z_DATA_ERROR	283:12:11247:11288	11263265	0	True				
ANR	11263437	AssignmentExpression	ret = ferror ( in ) ? Z_ERRNO : Z_DATA_ERROR		11263265	0		=			
ANR	11263438	Identifier	ret		11263265	0					
ANR	11263439	ConditionalExpression	ferror ( in ) ? Z_ERRNO : Z_DATA_ERROR		11263265	1					
ANR	11263440	Condition	ferror ( in )		11263265	0					
ANR	11263441	CallExpression	ferror ( in )		11263265	0					
ANR	11263442	Callee	ferror		11263265	0					
ANR	11263443	Identifier	ferror		11263265	0					
ANR	11263444	ArgumentList	in		11263265	1					
ANR	11263445	Argument	in		11263265	0					
ANR	11263446	Identifier	in		11263265	0					
ANR	11263447	Identifier	Z_ERRNO		11263265	1					
ANR	11263448	Identifier	Z_DATA_ERROR		11263265	2					
ANR	11263449	GotoStatement	goto extract_ret ;	284:12:11302:11318	11263265	1	True				
ANR	11263450	Identifier	extract_ret		11263265	0					
ANR	11263451	ExpressionStatement	"( void ) inflatePrime ( & strm , here -> bits , ret >> ( 8 - here -> bits ) )"	286:8:11338:11400	11263265	2	True				
ANR	11263452	CastExpression	"( void ) inflatePrime ( & strm , here -> bits , ret >> ( 8 - here -> bits ) )"		11263265	0					
ANR	11263453	CastTarget	void		11263265	0					
ANR	11263454	CallExpression	"inflatePrime ( & strm , here -> bits , ret >> ( 8 - here -> bits ) )"		11263265	1					
ANR	11263455	Callee	inflatePrime		11263265	0					
ANR	11263456	Identifier	inflatePrime		11263265	0					
ANR	11263457	ArgumentList	& strm		11263265	1					
ANR	11263458	Argument	& strm		11263265	0					
ANR	11263459	UnaryOperationExpression	& strm		11263265	0					
ANR	11263460	UnaryOperator	&		11263265	0					
ANR	11263461	Identifier	strm		11263265	1					
ANR	11263462	Argument	here -> bits		11263265	1					
ANR	11263463	PtrMemberAccess	here -> bits		11263265	0					
ANR	11263464	Identifier	here		11263265	0					
ANR	11263465	Identifier	bits		11263265	1					
ANR	11263466	Argument	ret >> ( 8 - here -> bits )		11263265	2					
ANR	11263467	ShiftExpression	ret >> ( 8 - here -> bits )		11263265	0		>>			
ANR	11263468	Identifier	ret		11263265	0					
ANR	11263469	AdditiveExpression	8 - here -> bits		11263265	1		-			
ANR	11263470	PrimaryExpression	8		11263265	0					
ANR	11263471	PtrMemberAccess	here -> bits		11263265	1					
ANR	11263472	Identifier	here		11263265	0					
ANR	11263473	Identifier	bits		11263265	1					
ANR	11263474	ExpressionStatement	"( void ) inflateSetDictionary ( & strm , here -> window , WINSIZE )"	288:4:11412:11468	11263265	19	True				
ANR	11263475	CastExpression	"( void ) inflateSetDictionary ( & strm , here -> window , WINSIZE )"		11263265	0					
ANR	11263476	CastTarget	void		11263265	0					
ANR	11263477	CallExpression	"inflateSetDictionary ( & strm , here -> window , WINSIZE )"		11263265	1					
ANR	11263478	Callee	inflateSetDictionary		11263265	0					
ANR	11263479	Identifier	inflateSetDictionary		11263265	0					
ANR	11263480	ArgumentList	& strm		11263265	1					
ANR	11263481	Argument	& strm		11263265	0					
ANR	11263482	UnaryOperationExpression	& strm		11263265	0					
ANR	11263483	UnaryOperator	&		11263265	0					
ANR	11263484	Identifier	strm		11263265	1					
ANR	11263485	Argument	here -> window		11263265	1					
ANR	11263486	PtrMemberAccess	here -> window		11263265	0					
ANR	11263487	Identifier	here		11263265	0					
ANR	11263488	Identifier	window		11263265	1					
ANR	11263489	Argument	WINSIZE		11263265	2					
ANR	11263490	Identifier	WINSIZE		11263265	0					
ANR	11263491	ExpressionStatement	offset -= here -> out	291:4:11552:11571	11263265	20	True				
ANR	11263492	AssignmentExpression	offset -= here -> out		11263265	0		-=			
ANR	11263493	Identifier	offset		11263265	0					
ANR	11263494	PtrMemberAccess	here -> out		11263265	1					
ANR	11263495	Identifier	here		11263265	0					
ANR	11263496	Identifier	out		11263265	1					
ANR	11263497	ExpressionStatement	strm . avail_in = 0	292:4:11577:11594	11263265	21	True				
ANR	11263498	AssignmentExpression	strm . avail_in = 0		11263265	0		=			
ANR	11263499	MemberAccess	strm . avail_in		11263265	0					
ANR	11263500	Identifier	strm		11263265	0					
ANR	11263501	Identifier	avail_in		11263265	1					
ANR	11263502	PrimaryExpression	0		11263265	1					
ANR	11263503	ExpressionStatement	skip = 1	293:4:11600:11608	11263265	22	True				
ANR	11263504	AssignmentExpression	skip = 1		11263265	0		=			
ANR	11263505	Identifier	skip		11263265	0					
ANR	11263506	PrimaryExpression	1		11263265	1					
ANR	11263507	DoStatement	do		11263265	23					
ANR	11263508	CompoundStatement		44:7:1281:1281	11263265	0					
ANR	11263509	IfStatement	if ( offset == 0 && skip )		11263265	0					
ANR	11263510	Condition	offset == 0 && skip	296:12:11758:11776	11263265	0	True				
ANR	11263511	AndExpression	offset == 0 && skip		11263265	0		&&			
ANR	11263512	EqualityExpression	offset == 0		11263265	0		==			
ANR	11263513	Identifier	offset		11263265	0					
ANR	11263514	PrimaryExpression	0		11263265	1					
ANR	11263515	Identifier	skip		11263265	1					
ANR	11263516	CompoundStatement		46:33:1382:1382	11263265	1					
ANR	11263517	ExpressionStatement	strm . avail_out = len	297:12:11822:11842	11263265	0	True				
ANR	11263518	AssignmentExpression	strm . avail_out = len		11263265	0		=			
ANR	11263519	MemberAccess	strm . avail_out		11263265	0					
ANR	11263520	Identifier	strm		11263265	0					
ANR	11263521	Identifier	avail_out		11263265	1					
ANR	11263522	Identifier	len		11263265	1					
ANR	11263523	ExpressionStatement	strm . next_out = buf	298:12:11856:11875	11263265	1	True				
ANR	11263524	AssignmentExpression	strm . next_out = buf		11263265	0		=			
ANR	11263525	MemberAccess	strm . next_out		11263265	0					
ANR	11263526	Identifier	strm		11263265	0					
ANR	11263527	Identifier	next_out		11263265	1					
ANR	11263528	Identifier	buf		11263265	1					
ANR	11263529	ExpressionStatement	skip = 0	299:12:11889:11897	11263265	2	True				
ANR	11263530	AssignmentExpression	skip = 0		11263265	0		=			
ANR	11263531	Identifier	skip		11263265	0					
ANR	11263532	PrimaryExpression	0		11263265	1					
ANR	11263533	IfStatement	if ( offset > WINSIZE )		11263265	1					
ANR	11263534	Condition	offset > WINSIZE	301:12:11967:11982	11263265	0	True				
ANR	11263535	RelationalExpression	offset > WINSIZE		11263265	0		>			
ANR	11263536	Identifier	offset		11263265	0					
ANR	11263537	Identifier	WINSIZE		11263265	1					
ANR	11263538	CompoundStatement		51:30:1588:1588	11263265	1					
ANR	11263539	ExpressionStatement	strm . avail_out = WINSIZE	302:12:12036:12060	11263265	0	True				
ANR	11263540	AssignmentExpression	strm . avail_out = WINSIZE		11263265	0		=			
ANR	11263541	MemberAccess	strm . avail_out		11263265	0					
ANR	11263542	Identifier	strm		11263265	0					
ANR	11263543	Identifier	avail_out		11263265	1					
ANR	11263544	Identifier	WINSIZE		11263265	1					
ANR	11263545	ExpressionStatement	strm . next_out = discard	303:12:12074:12097	11263265	1	True				
ANR	11263546	AssignmentExpression	strm . next_out = discard		11263265	0		=			
ANR	11263547	MemberAccess	strm . next_out		11263265	0					
ANR	11263548	Identifier	strm		11263265	0					
ANR	11263549	Identifier	next_out		11263265	1					
ANR	11263550	Identifier	discard		11263265	1					
ANR	11263551	ExpressionStatement	offset -= WINSIZE	304:12:12111:12128	11263265	2	True				
ANR	11263552	AssignmentExpression	offset -= WINSIZE		11263265	0		-=			
ANR	11263553	Identifier	offset		11263265	0					
ANR	11263554	Identifier	WINSIZE		11263265	1					
ANR	11263555	ElseStatement	else		11263265	0					
ANR	11263556	IfStatement	if ( offset != 0 )		11263265	0					
ANR	11263557	Condition	offset != 0	306:17:12157:12167	11263265	0	True				
ANR	11263558	EqualityExpression	offset != 0		11263265	0		!=			
ANR	11263559	Identifier	offset		11263265	0					
ANR	11263560	PrimaryExpression	0		11263265	1					
ANR	11263561	CompoundStatement		56:30:1773:1773	11263265	1					
ANR	11263562	ExpressionStatement	strm . avail_out = ( unsigned ) offset	307:12:12212:12245	11263265	0	True				
ANR	11263563	AssignmentExpression	strm . avail_out = ( unsigned ) offset		11263265	0		=			
ANR	11263564	MemberAccess	strm . avail_out		11263265	0					
ANR	11263565	Identifier	strm		11263265	0					
ANR	11263566	Identifier	avail_out		11263265	1					
ANR	11263567	CastExpression	( unsigned ) offset		11263265	1					
ANR	11263568	CastTarget	unsigned		11263265	0					
ANR	11263569	Identifier	offset		11263265	1					
ANR	11263570	ExpressionStatement	strm . next_out = discard	308:12:12259:12282	11263265	1	True				
ANR	11263571	AssignmentExpression	strm . next_out = discard		11263265	0		=			
ANR	11263572	MemberAccess	strm . next_out		11263265	0					
ANR	11263573	Identifier	strm		11263265	0					
ANR	11263574	Identifier	next_out		11263265	1					
ANR	11263575	Identifier	discard		11263265	1					
ANR	11263576	ExpressionStatement	offset = 0	309:12:12296:12306	11263265	2	True				
ANR	11263577	AssignmentExpression	offset = 0		11263265	0		=			
ANR	11263578	Identifier	offset		11263265	0					
ANR	11263579	PrimaryExpression	0		11263265	1					
ANR	11263580	DoStatement	do		11263265	2					
ANR	11263581	CompoundStatement		63:11:1999:1999	11263265	0					
ANR	11263582	IfStatement	if ( strm . avail_in == 0 )		11263265	0					
ANR	11263583	Condition	strm . avail_in == 0	314:16:12414:12431	11263265	0	True				
ANR	11263584	EqualityExpression	strm . avail_in == 0		11263265	0		==			
ANR	11263585	MemberAccess	strm . avail_in		11263265	0					
ANR	11263586	Identifier	strm		11263265	0					
ANR	11263587	Identifier	avail_in		11263265	1					
ANR	11263588	PrimaryExpression	0		11263265	1					
ANR	11263589	CompoundStatement		64:36:2037:2037	11263265	1					
ANR	11263590	ExpressionStatement	"strm . avail_in = fread ( input , 1 , CHUNK , in )"	315:16:12452:12494	11263265	0	True				
ANR	11263591	AssignmentExpression	"strm . avail_in = fread ( input , 1 , CHUNK , in )"		11263265	0		=			
ANR	11263592	MemberAccess	strm . avail_in		11263265	0					
ANR	11263593	Identifier	strm		11263265	0					
ANR	11263594	Identifier	avail_in		11263265	1					
ANR	11263595	CallExpression	"fread ( input , 1 , CHUNK , in )"		11263265	1					
ANR	11263596	Callee	fread		11263265	0					
ANR	11263597	Identifier	fread		11263265	0					
ANR	11263598	ArgumentList	input		11263265	1					
ANR	11263599	Argument	input		11263265	0					
ANR	11263600	Identifier	input		11263265	0					
ANR	11263601	Argument	1		11263265	1					
ANR	11263602	PrimaryExpression	1		11263265	0					
ANR	11263603	Argument	CHUNK		11263265	2					
ANR	11263604	Identifier	CHUNK		11263265	0					
ANR	11263605	Argument	in		11263265	3					
ANR	11263606	Identifier	in		11263265	0					
ANR	11263607	IfStatement	if ( ferror ( in ) )		11263265	1					
ANR	11263608	Condition	ferror ( in )	316:20:12516:12525	11263265	0	True				
ANR	11263609	CallExpression	ferror ( in )		11263265	0					
ANR	11263610	Callee	ferror		11263265	0					
ANR	11263611	Identifier	ferror		11263265	0					
ANR	11263612	ArgumentList	in		11263265	1					
ANR	11263613	Argument	in		11263265	0					
ANR	11263614	Identifier	in		11263265	0					
ANR	11263615	CompoundStatement		66:32:2131:2131	11263265	1					
ANR	11263616	ExpressionStatement	ret = Z_ERRNO	317:20:12550:12563	11263265	0	True				
ANR	11263617	AssignmentExpression	ret = Z_ERRNO		11263265	0		=			
ANR	11263618	Identifier	ret		11263265	0					
ANR	11263619	Identifier	Z_ERRNO		11263265	1					
ANR	11263620	GotoStatement	goto extract_ret ;	318:20:12585:12601	11263265	1	True				
ANR	11263621	Identifier	extract_ret		11263265	0					
ANR	11263622	IfStatement	if ( strm . avail_in == 0 )		11263265	2					
ANR	11263623	Condition	strm . avail_in == 0	320:20:12641:12658	11263265	0	True				
ANR	11263624	EqualityExpression	strm . avail_in == 0		11263265	0		==			
ANR	11263625	MemberAccess	strm . avail_in		11263265	0					
ANR	11263626	Identifier	strm		11263265	0					
ANR	11263627	Identifier	avail_in		11263265	1					
ANR	11263628	PrimaryExpression	0		11263265	1					
ANR	11263629	CompoundStatement		70:40:2264:2264	11263265	1					
ANR	11263630	ExpressionStatement	ret = Z_DATA_ERROR	321:20:12683:12701	11263265	0	True				
ANR	11263631	AssignmentExpression	ret = Z_DATA_ERROR		11263265	0		=			
ANR	11263632	Identifier	ret		11263265	0					
ANR	11263633	Identifier	Z_DATA_ERROR		11263265	1					
ANR	11263634	GotoStatement	goto extract_ret ;	322:20:12723:12739	11263265	1	True				
ANR	11263635	Identifier	extract_ret		11263265	0					
ANR	11263636	ExpressionStatement	strm . next_in = input	324:16:12775:12795	11263265	3	True				
ANR	11263637	AssignmentExpression	strm . next_in = input		11263265	0		=			
ANR	11263638	MemberAccess	strm . next_in		11263265	0					
ANR	11263639	Identifier	strm		11263265	0					
ANR	11263640	Identifier	next_in		11263265	1					
ANR	11263641	Identifier	input		11263265	1					
ANR	11263642	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	326:12:12823:12855	11263265	1	True				
ANR	11263643	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11263265	0		=			
ANR	11263644	Identifier	ret		11263265	0					
ANR	11263645	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11263265	1					
ANR	11263646	Callee	inflate		11263265	0					
ANR	11263647	Identifier	inflate		11263265	0					
ANR	11263648	ArgumentList	& strm		11263265	1					
ANR	11263649	Argument	& strm		11263265	0					
ANR	11263650	UnaryOperationExpression	& strm		11263265	0					
ANR	11263651	UnaryOperator	&		11263265	0					
ANR	11263652	Identifier	strm		11263265	1					
ANR	11263653	Argument	Z_NO_FLUSH		11263265	1					
ANR	11263654	Identifier	Z_NO_FLUSH		11263265	0					
ANR	11263655	IfStatement	if ( ret == Z_NEED_DICT )		11263265	2					
ANR	11263656	Condition	ret == Z_NEED_DICT	327:16:12900:12917	11263265	0	True				
ANR	11263657	EqualityExpression	ret == Z_NEED_DICT		11263265	0		==			
ANR	11263658	Identifier	ret		11263265	0					
ANR	11263659	Identifier	Z_NEED_DICT		11263265	1					
ANR	11263660	ExpressionStatement	ret = Z_DATA_ERROR	328:16:12936:12954	11263265	1	True				
ANR	11263661	AssignmentExpression	ret = Z_DATA_ERROR		11263265	0		=			
ANR	11263662	Identifier	ret		11263265	0					
ANR	11263663	Identifier	Z_DATA_ERROR		11263265	1					
ANR	11263664	IfStatement	if ( ret == Z_MEM_ERROR || ret == Z_DATA_ERROR )		11263265	3					
ANR	11263665	Condition	ret == Z_MEM_ERROR || ret == Z_DATA_ERROR	329:16:12972:13012	11263265	0	True				
ANR	11263666	OrExpression	ret == Z_MEM_ERROR || ret == Z_DATA_ERROR		11263265	0		||			
ANR	11263667	EqualityExpression	ret == Z_MEM_ERROR		11263265	0		==			
ANR	11263668	Identifier	ret		11263265	0					
ANR	11263669	Identifier	Z_MEM_ERROR		11263265	1					
ANR	11263670	EqualityExpression	ret == Z_DATA_ERROR		11263265	1		==			
ANR	11263671	Identifier	ret		11263265	0					
ANR	11263672	Identifier	Z_DATA_ERROR		11263265	1					
ANR	11263673	GotoStatement	goto extract_ret ;	330:16:13031:13047	11263265	1	True				
ANR	11263674	Identifier	extract_ret		11263265	0					
ANR	11263675	IfStatement	if ( ret == Z_STREAM_END )		11263265	4					
ANR	11263676	Condition	ret == Z_STREAM_END	331:16:13065:13083	11263265	0	True				
ANR	11263677	EqualityExpression	ret == Z_STREAM_END		11263265	0		==			
ANR	11263678	Identifier	ret		11263265	0					
ANR	11263679	Identifier	Z_STREAM_END		11263265	1					
ANR	11263680	BreakStatement	break ;	332:16:13102:13107	11263265	1	True				
ANR	11263681	Condition	strm . avail_out != 0	333:17:13126:13144	11263265	1	True				
ANR	11263682	EqualityExpression	strm . avail_out != 0		11263265	0		!=			
ANR	11263683	MemberAccess	strm . avail_out		11263265	0					
ANR	11263684	Identifier	strm		11263265	0					
ANR	11263685	Identifier	avail_out		11263265	1					
ANR	11263686	PrimaryExpression	0		11263265	1					
ANR	11263687	IfStatement	if ( ret == Z_STREAM_END )		11263265	3					
ANR	11263688	Condition	ret == Z_STREAM_END	336:12:13234:13252	11263265	0	True				
ANR	11263689	EqualityExpression	ret == Z_STREAM_END		11263265	0		==			
ANR	11263690	Identifier	ret		11263265	0					
ANR	11263691	Identifier	Z_STREAM_END		11263265	1					
ANR	11263692	BreakStatement	break ;	337:12:13267:13272	11263265	1	True				
ANR	11263693	Condition	skip	340:13:13366:13369	11263265	1	True				
ANR	11263694	Identifier	skip		11263265	0					
ANR	11263695	ExpressionStatement	ret = skip ? 0 : len - strm . avail_out	343:4:13443:13480	11263265	24	True				
ANR	11263696	AssignmentExpression	ret = skip ? 0 : len - strm . avail_out		11263265	0		=			
ANR	11263697	Identifier	ret		11263265	0					
ANR	11263698	ConditionalExpression	skip ? 0 : len - strm . avail_out		11263265	1					
ANR	11263699	Condition	skip		11263265	0					
ANR	11263700	Identifier	skip		11263265	0					
ANR	11263701	PrimaryExpression	0		11263265	1					
ANR	11263702	AdditiveExpression	len - strm . avail_out		11263265	2		-			
ANR	11263703	Identifier	len		11263265	0					
ANR	11263704	MemberAccess	strm . avail_out		11263265	1					
ANR	11263705	Identifier	strm		11263265	0					
ANR	11263706	Identifier	avail_out		11263265	1					
ANR	11263707	Label	extract_ret :	346:2:13535:13546	11263265	25	True				
ANR	11263708	Identifier	extract_ret		11263265	0					
ANR	11263709	ExpressionStatement	( void ) inflateEnd ( & strm )	347:4:13552:13575	11263265	26	True				
ANR	11263710	CastExpression	( void ) inflateEnd ( & strm )		11263265	0					
ANR	11263711	CastTarget	void		11263265	0					
ANR	11263712	CallExpression	inflateEnd ( & strm )		11263265	1					
ANR	11263713	Callee	inflateEnd		11263265	0					
ANR	11263714	Identifier	inflateEnd		11263265	0					
ANR	11263715	ArgumentList	& strm		11263265	1					
ANR	11263716	Argument	& strm		11263265	0					
ANR	11263717	UnaryOperationExpression	& strm		11263265	0					
ANR	11263718	UnaryOperator	&		11263265	0					
ANR	11263719	Identifier	strm		11263265	1					
ANR	11263720	ReturnStatement	return ret ;	348:4:13581:13591	11263265	27	True				
ANR	11263721	Identifier	ret		11263265	0					
ANR	11263722	ReturnType	local int		11263265	1					
ANR	11263723	Identifier	extract		11263265	2					
ANR	11263724	ParameterList	"FILE * in , struct access * index , off_t offset , unsigned char * buf , int len"		11263265	3					
ANR	11263725	Parameter	FILE * in	249:18:10303:10310	11263265	0	True				
ANR	11263726	ParameterType	FILE *		11263265	0					
ANR	11263727	Identifier	in		11263265	1					
ANR	11263728	Parameter	struct access * index	249:28:10313:10332	11263265	1	True				
ANR	11263729	ParameterType	struct access *		11263265	0					
ANR	11263730	Identifier	index		11263265	1					
ANR	11263731	Parameter	off_t offset	249:50:10335:10346	11263265	2	True				
ANR	11263732	ParameterType	off_t		11263265	0					
ANR	11263733	Identifier	offset		11263265	1					
ANR	11263734	Parameter	unsigned char * buf	250:18:10367:10384	11263265	3	True				
ANR	11263735	ParameterType	unsigned char *		11263265	0					
ANR	11263736	Identifier	buf		11263265	1					
ANR	11263737	Parameter	int len	250:38:10387:10393	11263265	4	True				
ANR	11263738	ParameterType	int		11263265	0					
ANR	11263739	Identifier	len		11263265	1					
ANR	11263740	CFGEntryNode	ENTRY		11263265		True				
ANR	11263741	CFGExitNode	EXIT		11263265		True				
ANR	11263742	Symbol	here		11263265						
ANR	11263743	Symbol	discard		11263265						
ANR	11263744	Symbol	fseeko		11263265						
ANR	11263745	Symbol	Z_DATA_ERROR		11263265						
ANR	11263746	Symbol	Z_MEM_ERROR		11263265						
ANR	11263747	Symbol	* index		11263265						
ANR	11263748	Symbol	& strm		11263265						
ANR	11263749	Symbol	index -> list		11263265						
ANR	11263750	Symbol	skip		11263265						
ANR	11263751	Symbol	strm . zalloc		11263265						
ANR	11263752	Symbol	Z_OK		11263265						
ANR	11263753	Symbol	strm . next_in		11263265						
ANR	11263754	Symbol	here -> bits		11263265						
ANR	11263755	Symbol	Z_NO_FLUSH		11263265						
ANR	11263756	Symbol	strm . opaque		11263265						
ANR	11263757	Symbol	len		11263265						
ANR	11263758	Symbol	Z_STREAM_END		11263265						
ANR	11263759	Symbol	CHUNK		11263265						
ANR	11263760	Symbol	ret		11263265						
ANR	11263761	Symbol	SEEK_SET		11263265						
ANR	11263762	Symbol	inflateInit2		11263265						
ANR	11263763	Symbol	Z_ERRNO		11263265						
ANR	11263764	Symbol	offset		11263265						
ANR	11263765	Symbol	in		11263265						
ANR	11263766	Symbol	here -> in		11263265						
ANR	11263767	Symbol	index		11263265						
ANR	11263768	Symbol	strm		11263265						
ANR	11263769	Symbol	fread		11263265						
ANR	11263770	Symbol	input		11263265						
ANR	11263771	Symbol	ferror		11263265						
ANR	11263772	Symbol	buf		11263265						
ANR	11263773	Symbol	here -> out		11263265						
ANR	11263774	Symbol	strm . avail_out		11263265						
ANR	11263775	Symbol	inflate		11263265						
ANR	11263776	Symbol	strm . next_out		11263265						
ANR	11263777	Symbol	here [ 1 ] . out		11263265						
ANR	11263778	Symbol	* here		11263265						
ANR	11263779	Symbol	strm . zfree		11263265						
ANR	11263780	Symbol	here -> window		11263265						
ANR	11263781	Symbol	WINSIZE		11263265						
ANR	11263782	Symbol	index -> have		11263265						
ANR	11263783	Symbol	getc		11263265						
ANR	11263784	Symbol	Z_NEED_DICT		11263265						
ANR	11263785	Symbol	Z_NULL		11263265						
ANR	11263786	Symbol	strm . avail_in		11263265						
ANR	11263787	Function	main	354:0:13825:15436							
ANR	11263788	FunctionDef	"main (int argc , char * * argv)"		11263787	0					
ANR	11263789	CompoundStatement		355:0:13857:15436	11263787	0					
ANR	11263790	IdentifierDeclStatement	int len ;	356:4:13863:13870	11263787	0	True				
ANR	11263791	IdentifierDecl	len		11263787	0					
ANR	11263792	IdentifierDeclType	int		11263787	0					
ANR	11263793	Identifier	len		11263787	1					
ANR	11263794	IdentifierDeclStatement	off_t offset ;	357:4:13876:13888	11263787	1	True				
ANR	11263795	IdentifierDecl	offset		11263787	0					
ANR	11263796	IdentifierDeclType	off_t		11263787	0					
ANR	11263797	Identifier	offset		11263787	1					
ANR	11263798	IdentifierDeclStatement	FILE * in ;	358:4:13894:13902	11263787	2	True				
ANR	11263799	IdentifierDecl	* in		11263787	0					
ANR	11263800	IdentifierDeclType	FILE *		11263787	0					
ANR	11263801	Identifier	in		11263787	1					
ANR	11263802	IdentifierDeclStatement	struct access * index = NULL ;	359:4:13908:13935	11263787	3	True				
ANR	11263803	IdentifierDecl	* index = NULL		11263787	0					
ANR	11263804	IdentifierDeclType	struct access *		11263787	0					
ANR	11263805	Identifier	index		11263787	1					
ANR	11263806	AssignmentExpression	* index = NULL		11263787	2		=			
ANR	11263807	Identifier	NULL		11263787	0					
ANR	11263808	Identifier	NULL		11263787	1					
ANR	11263809	IdentifierDeclStatement	unsigned char buf [ CHUNK ] ;	360:4:13941:13965	11263787	4	True				
ANR	11263810	IdentifierDecl	buf [ CHUNK ]		11263787	0					
ANR	11263811	IdentifierDeclType	unsigned char [ CHUNK ]		11263787	0					
ANR	11263812	Identifier	buf		11263787	1					
ANR	11263813	Identifier	CHUNK		11263787	2					
ANR	11263814	IfStatement	if ( argc != 2 )		11263787	5					
ANR	11263815	Condition	argc != 2	363:8:14002:14010	11263787	0	True				
ANR	11263816	EqualityExpression	argc != 2		11263787	0		!=			
ANR	11263817	Identifier	argc		11263787	0					
ANR	11263818	PrimaryExpression	2		11263787	1					
ANR	11263819	CompoundStatement		9:19:155:155	11263787	1					
ANR	11263820	ExpressionStatement	"fprintf ( stderr , ""usage: zran file.gz\\n"" )"	364:8:14023:14063	11263787	0	True				
ANR	11263821	CallExpression	"fprintf ( stderr , ""usage: zran file.gz\\n"" )"		11263787	0					
ANR	11263822	Callee	fprintf		11263787	0					
ANR	11263823	Identifier	fprintf		11263787	0					
ANR	11263824	ArgumentList	stderr		11263787	1					
ANR	11263825	Argument	stderr		11263787	0					
ANR	11263826	Identifier	stderr		11263787	0					
ANR	11263827	Argument	"""usage: zran file.gz\\n"""		11263787	1					
ANR	11263828	PrimaryExpression	"""usage: zran file.gz\\n"""		11263787	0					
ANR	11263829	ReturnStatement	return 1 ;	365:8:14073:14081	11263787	1	True				
ANR	11263830	PrimaryExpression	1		11263787	0					
ANR	11263831	ExpressionStatement	"in = fopen ( argv [ 1 ] , ""rb"" )"	367:4:14093:14118	11263787	6	True				
ANR	11263832	AssignmentExpression	"in = fopen ( argv [ 1 ] , ""rb"" )"		11263787	0		=			
ANR	11263833	Identifier	in		11263787	0					
ANR	11263834	CallExpression	"fopen ( argv [ 1 ] , ""rb"" )"		11263787	1					
ANR	11263835	Callee	fopen		11263787	0					
ANR	11263836	Identifier	fopen		11263787	0					
ANR	11263837	ArgumentList	argv [ 1 ]		11263787	1					
ANR	11263838	Argument	argv [ 1 ]		11263787	0					
ANR	11263839	ArrayIndexing	argv [ 1 ]		11263787	0					
ANR	11263840	Identifier	argv		11263787	0					
ANR	11263841	PrimaryExpression	1		11263787	1					
ANR	11263842	Argument	"""rb"""		11263787	1					
ANR	11263843	PrimaryExpression	"""rb"""		11263787	0					
ANR	11263844	IfStatement	if ( in == NULL )		11263787	7					
ANR	11263845	Condition	in == NULL	368:8:14128:14137	11263787	0	True				
ANR	11263846	EqualityExpression	in == NULL		11263787	0		==			
ANR	11263847	Identifier	in		11263787	0					
ANR	11263848	Identifier	NULL		11263787	1					
ANR	11263849	CompoundStatement		14:20:282:282	11263787	1					
ANR	11263850	ExpressionStatement	"fprintf ( stderr , ""zran: could not open %s for reading\\n"" , argv [ 1 ] )"	369:8:14150:14215	11263787	0	True				
ANR	11263851	CallExpression	"fprintf ( stderr , ""zran: could not open %s for reading\\n"" , argv [ 1 ] )"		11263787	0					
ANR	11263852	Callee	fprintf		11263787	0					
ANR	11263853	Identifier	fprintf		11263787	0					
ANR	11263854	ArgumentList	stderr		11263787	1					
ANR	11263855	Argument	stderr		11263787	0					
ANR	11263856	Identifier	stderr		11263787	0					
ANR	11263857	Argument	"""zran: could not open %s for reading\\n"""		11263787	1					
ANR	11263858	PrimaryExpression	"""zran: could not open %s for reading\\n"""		11263787	0					
ANR	11263859	Argument	argv [ 1 ]		11263787	2					
ANR	11263860	ArrayIndexing	argv [ 1 ]		11263787	0					
ANR	11263861	Identifier	argv		11263787	0					
ANR	11263862	PrimaryExpression	1		11263787	1					
ANR	11263863	ReturnStatement	return 1 ;	370:8:14225:14233	11263787	1	True				
ANR	11263864	PrimaryExpression	1		11263787	0					
ANR	11263865	ExpressionStatement	"len = build_index ( in , SPAN , & index )"	374:4:14268:14303	11263787	8	True				
ANR	11263866	AssignmentExpression	"len = build_index ( in , SPAN , & index )"		11263787	0		=			
ANR	11263867	Identifier	len		11263787	0					
ANR	11263868	CallExpression	"build_index ( in , SPAN , & index )"		11263787	1					
ANR	11263869	Callee	build_index		11263787	0					
ANR	11263870	Identifier	build_index		11263787	0					
ANR	11263871	ArgumentList	in		11263787	1					
ANR	11263872	Argument	in		11263787	0					
ANR	11263873	Identifier	in		11263787	0					
ANR	11263874	Argument	SPAN		11263787	1					
ANR	11263875	Identifier	SPAN		11263787	0					
ANR	11263876	Argument	& index		11263787	2					
ANR	11263877	UnaryOperationExpression	& index		11263787	0					
ANR	11263878	UnaryOperator	&		11263787	0					
ANR	11263879	Identifier	index		11263787	1					
ANR	11263880	IfStatement	if ( len < 0 )		11263787	9					
ANR	11263881	Condition	len < 0	375:8:14313:14319	11263787	0	True				
ANR	11263882	RelationalExpression	len < 0		11263787	0		<			
ANR	11263883	Identifier	len		11263787	0					
ANR	11263884	PrimaryExpression	0		11263787	1					
ANR	11263885	CompoundStatement		21:17:464:464	11263787	1					
ANR	11263886	ExpressionStatement	fclose ( in )	376:8:14332:14342	11263787	0	True				
ANR	11263887	CallExpression	fclose ( in )		11263787	0					
ANR	11263888	Callee	fclose		11263787	0					
ANR	11263889	Identifier	fclose		11263787	0					
ANR	11263890	ArgumentList	in		11263787	1					
ANR	11263891	Argument	in		11263787	0					
ANR	11263892	Identifier	in		11263787	0					
ANR	11263893	SwitchStatement	switch ( len )		11263787	1					
ANR	11263894	Condition	len	377:16:14360:14362	11263787	0	True				
ANR	11263895	Identifier	len		11263787	0					
ANR	11263896	CompoundStatement		23:21:507:507	11263787	1					
ANR	11263897	Label	case Z_MEM_ERROR :	378:8:14375:14391	11263787	0	True				
ANR	11263898	Identifier	Z_MEM_ERROR		11263787	0					
ANR	11263899	ExpressionStatement	"fprintf ( stderr , ""zran: out of memory\\n"" )"	379:12:14405:14445	11263787	1	True				
ANR	11263900	CallExpression	"fprintf ( stderr , ""zran: out of memory\\n"" )"		11263787	0					
ANR	11263901	Callee	fprintf		11263787	0					
ANR	11263902	Identifier	fprintf		11263787	0					
ANR	11263903	ArgumentList	stderr		11263787	1					
ANR	11263904	Argument	stderr		11263787	0					
ANR	11263905	Identifier	stderr		11263787	0					
ANR	11263906	Argument	"""zran: out of memory\\n"""		11263787	1					
ANR	11263907	PrimaryExpression	"""zran: out of memory\\n"""		11263787	0					
ANR	11263908	BreakStatement	break ;	380:12:14459:14464	11263787	2	True				
ANR	11263909	Label	case Z_DATA_ERROR :	381:8:14474:14491	11263787	3	True				
ANR	11263910	Identifier	Z_DATA_ERROR		11263787	0					
ANR	11263911	ExpressionStatement	"fprintf ( stderr , ""zran: compressed data error in %s\\n"" , argv [ 1 ] )"	382:12:14505:14568	11263787	4	True				
ANR	11263912	CallExpression	"fprintf ( stderr , ""zran: compressed data error in %s\\n"" , argv [ 1 ] )"		11263787	0					
ANR	11263913	Callee	fprintf		11263787	0					
ANR	11263914	Identifier	fprintf		11263787	0					
ANR	11263915	ArgumentList	stderr		11263787	1					
ANR	11263916	Argument	stderr		11263787	0					
ANR	11263917	Identifier	stderr		11263787	0					
ANR	11263918	Argument	"""zran: compressed data error in %s\\n"""		11263787	1					
ANR	11263919	PrimaryExpression	"""zran: compressed data error in %s\\n"""		11263787	0					
ANR	11263920	Argument	argv [ 1 ]		11263787	2					
ANR	11263921	ArrayIndexing	argv [ 1 ]		11263787	0					
ANR	11263922	Identifier	argv		11263787	0					
ANR	11263923	PrimaryExpression	1		11263787	1					
ANR	11263924	BreakStatement	break ;	383:12:14582:14587	11263787	5	True				
ANR	11263925	Label	case Z_ERRNO :	384:8:14597:14609	11263787	6	True				
ANR	11263926	Identifier	Z_ERRNO		11263787	0					
ANR	11263927	ExpressionStatement	"fprintf ( stderr , ""zran: read error on %s\\n"" , argv [ 1 ] )"	385:12:14623:14675	11263787	7	True				
ANR	11263928	CallExpression	"fprintf ( stderr , ""zran: read error on %s\\n"" , argv [ 1 ] )"		11263787	0					
ANR	11263929	Callee	fprintf		11263787	0					
ANR	11263930	Identifier	fprintf		11263787	0					
ANR	11263931	ArgumentList	stderr		11263787	1					
ANR	11263932	Argument	stderr		11263787	0					
ANR	11263933	Identifier	stderr		11263787	0					
ANR	11263934	Argument	"""zran: read error on %s\\n"""		11263787	1					
ANR	11263935	PrimaryExpression	"""zran: read error on %s\\n"""		11263787	0					
ANR	11263936	Argument	argv [ 1 ]		11263787	2					
ANR	11263937	ArrayIndexing	argv [ 1 ]		11263787	0					
ANR	11263938	Identifier	argv		11263787	0					
ANR	11263939	PrimaryExpression	1		11263787	1					
ANR	11263940	BreakStatement	break ;	386:12:14689:14694	11263787	8	True				
ANR	11263941	Label	default :	387:8:14704:14711	11263787	9	True				
ANR	11263942	Identifier	default		11263787	0					
ANR	11263943	ExpressionStatement	"fprintf ( stderr , ""zran: error %d while building index\\n"" , len )"	388:12:14725:14786	11263787	10	True				
ANR	11263944	CallExpression	"fprintf ( stderr , ""zran: error %d while building index\\n"" , len )"		11263787	0					
ANR	11263945	Callee	fprintf		11263787	0					
ANR	11263946	Identifier	fprintf		11263787	0					
ANR	11263947	ArgumentList	stderr		11263787	1					
ANR	11263948	Argument	stderr		11263787	0					
ANR	11263949	Identifier	stderr		11263787	0					
ANR	11263950	Argument	"""zran: error %d while building index\\n"""		11263787	1					
ANR	11263951	PrimaryExpression	"""zran: error %d while building index\\n"""		11263787	0					
ANR	11263952	Argument	len		11263787	2					
ANR	11263953	Identifier	len		11263787	0					
ANR	11263954	ReturnStatement	return 1 ;	390:8:14806:14814	11263787	2	True				
ANR	11263955	PrimaryExpression	1		11263787	0					
ANR	11263956	ExpressionStatement	"fprintf ( stderr , ""zran: built index with %d access points\\n"" , len )"	392:4:14826:14891	11263787	10	True				
ANR	11263957	CallExpression	"fprintf ( stderr , ""zran: built index with %d access points\\n"" , len )"		11263787	0					
ANR	11263958	Callee	fprintf		11263787	0					
ANR	11263959	Identifier	fprintf		11263787	0					
ANR	11263960	ArgumentList	stderr		11263787	1					
ANR	11263961	Argument	stderr		11263787	0					
ANR	11263962	Identifier	stderr		11263787	0					
ANR	11263963	Argument	"""zran: built index with %d access points\\n"""		11263787	1					
ANR	11263964	PrimaryExpression	"""zran: built index with %d access points\\n"""		11263787	0					
ANR	11263965	Argument	len		11263787	2					
ANR	11263966	Identifier	len		11263787	0					
ANR	11263967	ExpressionStatement	offset = ( index -> list [ index -> have - 1 ] . out << 1 ) / 3	395:4:14965:15017	11263787	11	True				
ANR	11263968	AssignmentExpression	offset = ( index -> list [ index -> have - 1 ] . out << 1 ) / 3		11263787	0		=			
ANR	11263969	Identifier	offset		11263787	0					
ANR	11263970	MultiplicativeExpression	( index -> list [ index -> have - 1 ] . out << 1 ) / 3		11263787	1		/			
ANR	11263971	ShiftExpression	index -> list [ index -> have - 1 ] . out << 1		11263787	0		<<			
ANR	11263972	MemberAccess	index -> list [ index -> have - 1 ] . out		11263787	0					
ANR	11263973	ArrayIndexing	index -> list [ index -> have - 1 ]		11263787	0					
ANR	11263974	PtrMemberAccess	index -> list		11263787	0					
ANR	11263975	Identifier	index		11263787	0					
ANR	11263976	Identifier	list		11263787	1					
ANR	11263977	AdditiveExpression	index -> have - 1		11263787	1		-			
ANR	11263978	PtrMemberAccess	index -> have		11263787	0					
ANR	11263979	Identifier	index		11263787	0					
ANR	11263980	Identifier	have		11263787	1					
ANR	11263981	PrimaryExpression	1		11263787	1					
ANR	11263982	Identifier	out		11263787	1					
ANR	11263983	PrimaryExpression	1		11263787	1					
ANR	11263984	PrimaryExpression	3		11263787	1					
ANR	11263985	ExpressionStatement	"len = extract ( in , index , offset , buf , CHUNK )"	396:4:15023:15067	11263787	12	True				
ANR	11263986	AssignmentExpression	"len = extract ( in , index , offset , buf , CHUNK )"		11263787	0		=			
ANR	11263987	Identifier	len		11263787	0					
ANR	11263988	CallExpression	"extract ( in , index , offset , buf , CHUNK )"		11263787	1					
ANR	11263989	Callee	extract		11263787	0					
ANR	11263990	Identifier	extract		11263787	0					
ANR	11263991	ArgumentList	in		11263787	1					
ANR	11263992	Argument	in		11263787	0					
ANR	11263993	Identifier	in		11263787	0					
ANR	11263994	Argument	index		11263787	1					
ANR	11263995	Identifier	index		11263787	0					
ANR	11263996	Argument	offset		11263787	2					
ANR	11263997	Identifier	offset		11263787	0					
ANR	11263998	Argument	buf		11263787	3					
ANR	11263999	Identifier	buf		11263787	0					
ANR	11264000	Argument	CHUNK		11263787	4					
ANR	11264001	Identifier	CHUNK		11263787	0					
ANR	11264002	IfStatement	if ( len < 0 )		11263787	13					
ANR	11264003	Condition	len < 0	397:8:15077:15083	11263787	0	True				
ANR	11264004	RelationalExpression	len < 0		11263787	0		<			
ANR	11264005	Identifier	len		11263787	0					
ANR	11264006	PrimaryExpression	0		11263787	1					
ANR	11264007	ExpressionStatement	"fprintf ( stderr , ""zran: extraction failed: %s error\\n"" , len == Z_MEM_ERROR ? ""out of memory"" : ""input corrupted"" )"	398:8:15094:15222	11263787	1	True				
ANR	11264008	CallExpression	"fprintf ( stderr , ""zran: extraction failed: %s error\\n"" , len == Z_MEM_ERROR ? ""out of memory"" : ""input corrupted"" )"		11263787	0					
ANR	11264009	Callee	fprintf		11263787	0					
ANR	11264010	Identifier	fprintf		11263787	0					
ANR	11264011	ArgumentList	stderr		11263787	1					
ANR	11264012	Argument	stderr		11263787	0					
ANR	11264013	Identifier	stderr		11263787	0					
ANR	11264014	Argument	"""zran: extraction failed: %s error\\n"""		11263787	1					
ANR	11264015	PrimaryExpression	"""zran: extraction failed: %s error\\n"""		11263787	0					
ANR	11264016	Argument	"len == Z_MEM_ERROR ? ""out of memory"" : ""input corrupted"""		11263787	2					
ANR	11264017	ConditionalExpression	"len == Z_MEM_ERROR ? ""out of memory"" : ""input corrupted"""		11263787	0					
ANR	11264018	Condition	len == Z_MEM_ERROR		11263787	0					
ANR	11264019	EqualityExpression	len == Z_MEM_ERROR		11263787	0		==			
ANR	11264020	Identifier	len		11263787	0					
ANR	11264021	Identifier	Z_MEM_ERROR		11263787	1					
ANR	11264022	PrimaryExpression	"""out of memory"""		11263787	1					
ANR	11264023	PrimaryExpression	"""input corrupted"""		11263787	2					
ANR	11264024	ElseStatement	else		11263787	0					
ANR	11264025	CompoundStatement		46:9:1375:1375	11263787	0					
ANR	11264026	ExpressionStatement	"fwrite ( buf , 1 , len , stdout )"	401:8:15243:15270	11263787	0	True				
ANR	11264027	CallExpression	"fwrite ( buf , 1 , len , stdout )"		11263787	0					
ANR	11264028	Callee	fwrite		11263787	0					
ANR	11264029	Identifier	fwrite		11263787	0					
ANR	11264030	ArgumentList	buf		11263787	1					
ANR	11264031	Argument	buf		11263787	0					
ANR	11264032	Identifier	buf		11263787	0					
ANR	11264033	Argument	1		11263787	1					
ANR	11264034	PrimaryExpression	1		11263787	0					
ANR	11264035	Argument	len		11263787	2					
ANR	11264036	Identifier	len		11263787	0					
ANR	11264037	Argument	stdout		11263787	3					
ANR	11264038	Identifier	stdout		11263787	0					
ANR	11264039	ExpressionStatement	"fprintf ( stderr , ""zran: extracted %d bytes at %llu\\n"" , len , offset )"	402:8:15280:15346	11263787	1	True				
ANR	11264040	CallExpression	"fprintf ( stderr , ""zran: extracted %d bytes at %llu\\n"" , len , offset )"		11263787	0					
ANR	11264041	Callee	fprintf		11263787	0					
ANR	11264042	Identifier	fprintf		11263787	0					
ANR	11264043	ArgumentList	stderr		11263787	1					
ANR	11264044	Argument	stderr		11263787	0					
ANR	11264045	Identifier	stderr		11263787	0					
ANR	11264046	Argument	"""zran: extracted %d bytes at %llu\\n"""		11263787	1					
ANR	11264047	PrimaryExpression	"""zran: extracted %d bytes at %llu\\n"""		11263787	0					
ANR	11264048	Argument	len		11263787	2					
ANR	11264049	Identifier	len		11263787	0					
ANR	11264050	Argument	offset		11263787	3					
ANR	11264051	Identifier	offset		11263787	0					
ANR	11264052	ExpressionStatement	free_index ( index )	406:4:15387:15404	11263787	14	True				
ANR	11264053	CallExpression	free_index ( index )		11263787	0					
ANR	11264054	Callee	free_index		11263787	0					
ANR	11264055	Identifier	free_index		11263787	0					
ANR	11264056	ArgumentList	index		11263787	1					
ANR	11264057	Argument	index		11263787	0					
ANR	11264058	Identifier	index		11263787	0					
ANR	11264059	ExpressionStatement	fclose ( in )	407:4:15410:15420	11263787	15	True				
ANR	11264060	CallExpression	fclose ( in )		11263787	0					
ANR	11264061	Callee	fclose		11263787	0					
ANR	11264062	Identifier	fclose		11263787	0					
ANR	11264063	ArgumentList	in		11263787	1					
ANR	11264064	Argument	in		11263787	0					
ANR	11264065	Identifier	in		11263787	0					
ANR	11264066	ReturnStatement	return 0 ;	408:4:15426:15434	11263787	16	True				
ANR	11264067	PrimaryExpression	0		11263787	0					
ANR	11264068	ReturnType	int		11263787	1					
ANR	11264069	Identifier	main		11263787	2					
ANR	11264070	ParameterList	"int argc , char * * argv"		11263787	3					
ANR	11264071	Parameter	int argc	354:9:13834:13841	11263787	0	True				
ANR	11264072	ParameterType	int		11263787	0					
ANR	11264073	Identifier	argc		11263787	1					
ANR	11264074	Parameter	char * * argv	354:19:13844:13854	11263787	1	True				
ANR	11264075	ParameterType	char * *		11263787	0					
ANR	11264076	Identifier	argv		11263787	1					
ANR	11264077	CFGEntryNode	ENTRY		11263787		True				
ANR	11264078	CFGExitNode	EXIT		11263787		True				
ANR	11264079	Symbol	Z_MEM_ERROR		11263787						
ANR	11264080	Symbol	stdout		11263787						
ANR	11264081	Symbol	* index		11263787						
ANR	11264082	Symbol	index -> list		11263787						
ANR	11264083	Symbol	* argv		11263787						
ANR	11264084	Symbol	argv		11263787						
ANR	11264085	Symbol	len		11263787						
ANR	11264086	Symbol	& index		11263787						
ANR	11264087	Symbol	* * index		11263787						
ANR	11264088	Symbol	CHUNK		11263787						
ANR	11264089	Symbol	argc		11263787						
ANR	11264090	Symbol	fopen		11263787						
ANR	11264091	Symbol	NULL		11263787						
ANR	11264092	Symbol	offset		11263787						
ANR	11264093	Symbol	in		11263787						
ANR	11264094	Symbol	index -> list [ index -> have - 1 ] . out		11263787						
ANR	11264095	Symbol	* index -> list		11263787						
ANR	11264096	Symbol	index		11263787						
ANR	11264097	Symbol	stderr		11263787						
ANR	11264098	Symbol	SPAN		11263787						
ANR	11264099	Symbol	buf		11263787						
ANR	11264100	Symbol	extract		11263787						
ANR	11264101	Symbol	build_index		11263787						
ANR	11264102	Symbol	index -> have		11263787						
ANR	11264103	Symbol	* index -> have		11263787						
