command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3265612	File	data/converged/CVE-2018-16863_ghostpdl/freetype_builds_wince_ftdebug.c								
ANR	3265613	Function	OutputDebugStringEx	58:2:3215:3550							
ANR	3265614	FunctionDef	OutputDebugStringEx (const char * str)		3265613	0					
ANR	3265615	CompoundStatement		60:2:3264:3550	3265613	0					
ANR	3265616	Statement	static	61:4:3270:3275	3265613	0	True				
ANR	3265617	IdentifierDeclStatement	WCHAR buf [ 8192 ] ;	61:11:3277:3293	3265613	1	True				
ANR	3265618	IdentifierDecl	buf [ 8192 ]		3265613	0					
ANR	3265619	IdentifierDeclType	WCHAR [ 8192 ]		3265613	0					
ANR	3265620	Identifier	buf		3265613	1					
ANR	3265621	PrimaryExpression	8192		3265613	2					
ANR	3265622	IdentifierDeclStatement	"int sz = MultiByteToWideChar ( CP_ACP , 0 , str , - 1 , buf , sizeof ( buf ) / sizeof ( * buf ) ) ;"	64:4:3301:3424	3265613	2	True				
ANR	3265623	IdentifierDecl	"sz = MultiByteToWideChar ( CP_ACP , 0 , str , - 1 , buf , sizeof ( buf ) / sizeof ( * buf ) )"		3265613	0					
ANR	3265624	IdentifierDeclType	int		3265613	0					
ANR	3265625	Identifier	sz		3265613	1					
ANR	3265626	AssignmentExpression	"sz = MultiByteToWideChar ( CP_ACP , 0 , str , - 1 , buf , sizeof ( buf ) / sizeof ( * buf ) )"		3265613	2		=			
ANR	3265627	Identifier	sz		3265613	0					
ANR	3265628	CallExpression	"MultiByteToWideChar ( CP_ACP , 0 , str , - 1 , buf , sizeof ( buf ) / sizeof ( * buf ) )"		3265613	1					
ANR	3265629	Callee	MultiByteToWideChar		3265613	0					
ANR	3265630	Identifier	MultiByteToWideChar		3265613	0					
ANR	3265631	ArgumentList	CP_ACP		3265613	1					
ANR	3265632	Argument	CP_ACP		3265613	0					
ANR	3265633	Identifier	CP_ACP		3265613	0					
ANR	3265634	Argument	0		3265613	1					
ANR	3265635	PrimaryExpression	0		3265613	0					
ANR	3265636	Argument	str		3265613	2					
ANR	3265637	Identifier	str		3265613	0					
ANR	3265638	Argument	- 1		3265613	3					
ANR	3265639	UnaryOperationExpression	- 1		3265613	0					
ANR	3265640	UnaryOperator	-		3265613	0					
ANR	3265641	PrimaryExpression	1		3265613	1					
ANR	3265642	Argument	buf		3265613	4					
ANR	3265643	Identifier	buf		3265613	0					
ANR	3265644	Argument	sizeof ( buf ) / sizeof ( * buf )		3265613	5					
ANR	3265645	MultiplicativeExpression	sizeof ( buf ) / sizeof ( * buf )		3265613	0		/			
ANR	3265646	SizeofExpression	sizeof ( buf )		3265613	0					
ANR	3265647	Sizeof	sizeof		3265613	0					
ANR	3265648	SizeofOperand	buf		3265613	1					
ANR	3265649	SizeofExpression	sizeof ( * buf )		3265613	1					
ANR	3265650	Sizeof	sizeof		3265613	0					
ANR	3265651	UnaryOperationExpression	* buf		3265613	1					
ANR	3265652	UnaryOperator	*		3265613	0					
ANR	3265653	Identifier	buf		3265613	1					
ANR	3265654	IfStatement	if ( ! sz )		3265613	3					
ANR	3265655	Condition	! sz	66:9:3435:3437	3265613	0	True				
ANR	3265656	UnaryOperationExpression	! sz		3265613	0					
ANR	3265657	UnaryOperator	!		3265613	0					
ANR	3265658	Identifier	sz		3265613	1					
ANR	3265659	Statement	lstrcpyW	67:6:3447:3454	3265613	1	True				
ANR	3265660	Statement	(	67:14:3455:3455	3265613	4	True				
ANR	3265661	Statement	buf	67:16:3457:3459	3265613	5	True				
ANR	3265662	Statement	","	67:19:3460:3460	3265613	6	True				
ANR	3265663	Statement	L	67:21:3462:3462	3265613	7	True				
ANR	3265664	Statement	"""OutputDebugStringEx: MultiByteToWideChar failed"""	67:22:3463:3511	3265613	8	True				
ANR	3265665	Statement	)	67:72:3513:3513	3265613	9	True				
ANR	3265666	ExpressionStatement		67:73:3514:3514	3265613	10	True				
ANR	3265667	ExpressionStatement	OutputDebugStringW ( buf )	69:4:3521:3546	3265613	11	True				
ANR	3265668	CallExpression	OutputDebugStringW ( buf )		3265613	0					
ANR	3265669	Callee	OutputDebugStringW		3265613	0					
ANR	3265670	Identifier	OutputDebugStringW		3265613	0					
ANR	3265671	ArgumentList	buf		3265613	1					
ANR	3265672	Argument	buf		3265613	0					
ANR	3265673	Identifier	buf		3265613	0					
ANR	3265674	ReturnType	void		3265613	1					
ANR	3265675	Identifier	OutputDebugStringEx		3265613	2					
ANR	3265676	ParameterList	const char * str		3265613	3					
ANR	3265677	Parameter	const char * str	59:23:3243:3258	3265613	0	True				
ANR	3265678	ParameterType	const char *		3265613	0					
ANR	3265679	Identifier	str		3265613	1					
ANR	3265680	CFGEntryNode	ENTRY		3265613		True				
ANR	3265681	CFGExitNode	EXIT		3265613		True				
ANR	3265682	Symbol	str		3265613						
ANR	3265683	Symbol	buf		3265613						
ANR	3265684	Symbol	* buf		3265613						
ANR	3265685	Symbol	CP_ACP		3265613						
ANR	3265686	Symbol	sz		3265613						
ANR	3265687	Symbol	MultiByteToWideChar		3265613						
ANR	3265688	Function	FT_Message	74:2:3578:3873							
ANR	3265689	FunctionDef	FT_Message (const char * fmt)		3265688	0					
ANR	3265690	CompoundStatement		76:2:3630:3873	3265688	0					
ANR	3265691	Statement	static	77:4:3636:3641	3265688	0	True				
ANR	3265692	IdentifierDeclStatement	char buf [ 8192 ] ;	77:11:3643:3658	3265688	1	True				
ANR	3265693	IdentifierDecl	buf [ 8192 ]		3265688	0					
ANR	3265694	IdentifierDeclType	char [ 8192 ]		3265688	0					
ANR	3265695	Identifier	buf		3265688	1					
ANR	3265696	PrimaryExpression	8192		3265688	2					
ANR	3265697	IdentifierDeclStatement	va_list ap ;	78:4:3664:3679	3265688	2	True				
ANR	3265698	IdentifierDecl	ap		3265688	0					
ANR	3265699	IdentifierDeclType	va_list		3265688	0					
ANR	3265700	Identifier	ap		3265688	1					
ANR	3265701	ExpressionStatement	"va_start ( ap , fmt )"	81:4:3687:3706	3265688	3	True				
ANR	3265702	CallExpression	"va_start ( ap , fmt )"		3265688	0					
ANR	3265703	Callee	va_start		3265688	0					
ANR	3265704	Identifier	va_start		3265688	0					
ANR	3265705	ArgumentList	ap		3265688	1					
ANR	3265706	Argument	ap		3265688	0					
ANR	3265707	Identifier	ap		3265688	0					
ANR	3265708	Argument	fmt		3265688	1					
ANR	3265709	Identifier	fmt		3265688	0					
ANR	3265710	ExpressionStatement	"vfprintf ( stderr , fmt , ap )"	82:4:3712:3739	3265688	4	True				
ANR	3265711	CallExpression	"vfprintf ( stderr , fmt , ap )"		3265688	0					
ANR	3265712	Callee	vfprintf		3265688	0					
ANR	3265713	Identifier	vfprintf		3265688	0					
ANR	3265714	ArgumentList	stderr		3265688	1					
ANR	3265715	Argument	stderr		3265688	0					
ANR	3265716	Identifier	stderr		3265688	0					
ANR	3265717	Argument	fmt		3265688	1					
ANR	3265718	Identifier	fmt		3265688	0					
ANR	3265719	Argument	ap		3265688	2					
ANR	3265720	Identifier	ap		3265688	0					
ANR	3265721	ExpressionStatement	"vsprintf ( buf , fmt , ap )"	84:4:3795:3819	3265688	5	True				
ANR	3265722	CallExpression	"vsprintf ( buf , fmt , ap )"		3265688	0					
ANR	3265723	Callee	vsprintf		3265688	0					
ANR	3265724	Identifier	vsprintf		3265688	0					
ANR	3265725	ArgumentList	buf		3265688	1					
ANR	3265726	Argument	buf		3265688	0					
ANR	3265727	Identifier	buf		3265688	0					
ANR	3265728	Argument	fmt		3265688	1					
ANR	3265729	Identifier	fmt		3265688	0					
ANR	3265730	Argument	ap		3265688	2					
ANR	3265731	Identifier	ap		3265688	0					
ANR	3265732	ExpressionStatement	OutputDebugStringEx ( buf )	85:4:3825:3851	3265688	6	True				
ANR	3265733	CallExpression	OutputDebugStringEx ( buf )		3265688	0					
ANR	3265734	Callee	OutputDebugStringEx		3265688	0					
ANR	3265735	Identifier	OutputDebugStringEx		3265688	0					
ANR	3265736	ArgumentList	buf		3265688	1					
ANR	3265737	Argument	buf		3265688	0					
ANR	3265738	Identifier	buf		3265688	0					
ANR	3265739	ExpressionStatement	va_end ( ap )	86:4:3857:3869	3265688	7	True				
ANR	3265740	CallExpression	va_end ( ap )		3265688	0					
ANR	3265741	Callee	va_end		3265688	0					
ANR	3265742	Identifier	va_end		3265688	0					
ANR	3265743	ArgumentList	ap		3265688	1					
ANR	3265744	Argument	ap		3265688	0					
ANR	3265745	Identifier	ap		3265688	0					
ANR	3265746	Identifier	FT_Message		3265688	1					
ANR	3265747	ParameterList	const char * fmt		3265688	2					
ANR	3265748	Parameter	const char * fmt	74:14:3590:3605	3265688	0	True				
ANR	3265749	ParameterType	const char *		3265688	0					
ANR	3265750	Identifier	fmt		3265688	1					
ANR	3265751	CFGEntryNode	ENTRY		3265688		True				
ANR	3265752	CFGExitNode	EXIT		3265688		True				
ANR	3265753	Symbol	buf		3265688						
ANR	3265754	Symbol	fmt		3265688						
ANR	3265755	Symbol	stderr		3265688						
ANR	3265756	Symbol	ap		3265688						
ANR	3265757	Function	FT_Panic	91:2:3901:4136							
ANR	3265758	FunctionDef	FT_Panic (const char * fmt)		3265757	0					
ANR	3265759	CompoundStatement		93:2:3949:4136	3265757	0					
ANR	3265760	Statement	static	94:4:3955:3960	3265757	0	True				
ANR	3265761	IdentifierDeclStatement	char buf [ 8192 ] ;	94:11:3962:3977	3265757	1	True				
ANR	3265762	IdentifierDecl	buf [ 8192 ]		3265757	0					
ANR	3265763	IdentifierDeclType	char [ 8192 ]		3265757	0					
ANR	3265764	Identifier	buf		3265757	1					
ANR	3265765	PrimaryExpression	8192		3265757	2					
ANR	3265766	IdentifierDeclStatement	va_list ap ;	95:4:3983:3998	3265757	2	True				
ANR	3265767	IdentifierDecl	ap		3265757	0					
ANR	3265768	IdentifierDeclType	va_list		3265757	0					
ANR	3265769	Identifier	ap		3265757	1					
ANR	3265770	ExpressionStatement	"va_start ( ap , fmt )"	98:4:4006:4025	3265757	3	True				
ANR	3265771	CallExpression	"va_start ( ap , fmt )"		3265757	0					
ANR	3265772	Callee	va_start		3265757	0					
ANR	3265773	Identifier	va_start		3265757	0					
ANR	3265774	ArgumentList	ap		3265757	1					
ANR	3265775	Argument	ap		3265757	0					
ANR	3265776	Identifier	ap		3265757	0					
ANR	3265777	Argument	fmt		3265757	1					
ANR	3265778	Identifier	fmt		3265757	0					
ANR	3265779	ExpressionStatement	"vsprintf ( buf , fmt , ap )"	99:4:4031:4055	3265757	4	True				
ANR	3265780	CallExpression	"vsprintf ( buf , fmt , ap )"		3265757	0					
ANR	3265781	Callee	vsprintf		3265757	0					
ANR	3265782	Identifier	vsprintf		3265757	0					
ANR	3265783	ArgumentList	buf		3265757	1					
ANR	3265784	Argument	buf		3265757	0					
ANR	3265785	Identifier	buf		3265757	0					
ANR	3265786	Argument	fmt		3265757	1					
ANR	3265787	Identifier	fmt		3265757	0					
ANR	3265788	Argument	ap		3265757	2					
ANR	3265789	Identifier	ap		3265757	0					
ANR	3265790	ExpressionStatement	OutputDebugStringEx ( buf )	100:4:4061:4087	3265757	5	True				
ANR	3265791	CallExpression	OutputDebugStringEx ( buf )		3265757	0					
ANR	3265792	Callee	OutputDebugStringEx		3265757	0					
ANR	3265793	Identifier	OutputDebugStringEx		3265757	0					
ANR	3265794	ArgumentList	buf		3265757	1					
ANR	3265795	Argument	buf		3265757	0					
ANR	3265796	Identifier	buf		3265757	0					
ANR	3265797	ExpressionStatement	va_end ( ap )	101:4:4093:4105	3265757	6	True				
ANR	3265798	CallExpression	va_end ( ap )		3265757	0					
ANR	3265799	Callee	va_end		3265757	0					
ANR	3265800	Identifier	va_end		3265757	0					
ANR	3265801	ArgumentList	ap		3265757	1					
ANR	3265802	Argument	ap		3265757	0					
ANR	3265803	Identifier	ap		3265757	0					
ANR	3265804	ExpressionStatement	exit ( EXIT_FAILURE )	103:4:4112:4132	3265757	7	True				
ANR	3265805	CallExpression	exit ( EXIT_FAILURE )		3265757	0					
ANR	3265806	Callee	exit		3265757	0					
ANR	3265807	Identifier	exit		3265757	0					
ANR	3265808	ArgumentList	EXIT_FAILURE		3265757	1					
ANR	3265809	Argument	EXIT_FAILURE		3265757	0					
ANR	3265810	Identifier	EXIT_FAILURE		3265757	0					
ANR	3265811	Identifier	FT_Panic		3265757	1					
ANR	3265812	ParameterList	const char * fmt		3265757	2					
ANR	3265813	Parameter	const char * fmt	91:12:3911:3926	3265757	0	True				
ANR	3265814	ParameterType	const char *		3265757	0					
ANR	3265815	Identifier	fmt		3265757	1					
ANR	3265816	CFGEntryNode	ENTRY		3265757		True				
ANR	3265817	CFGExitNode	EXIT		3265757		True				
ANR	3265818	Symbol	buf		3265757						
ANR	3265819	Symbol	EXIT_FAILURE		3265757						
ANR	3265820	Symbol	fmt		3265757						
ANR	3265821	Symbol	ap		3265757						
ANR	3265822	Function	FT_Throw	110:2:4202:4386							
ANR	3265823	FunctionDef	"FT_Throw (FT_Error error , int line , const char * file)"		3265822	0					
ANR	3265824	CompoundStatement		113:2:4297:4386	3265822	0					
ANR	3265825	ExpressionStatement	FT_UNUSED ( error )	114:4:4303:4321	3265822	0	True				
ANR	3265826	CallExpression	FT_UNUSED ( error )		3265822	0					
ANR	3265827	Callee	FT_UNUSED		3265822	0					
ANR	3265828	Identifier	FT_UNUSED		3265822	0					
ANR	3265829	ArgumentList	error		3265822	1					
ANR	3265830	Argument	error		3265822	0					
ANR	3265831	Identifier	error		3265822	0					
ANR	3265832	ExpressionStatement	FT_UNUSED ( line )	115:4:4327:4344	3265822	1	True				
ANR	3265833	CallExpression	FT_UNUSED ( line )		3265822	0					
ANR	3265834	Callee	FT_UNUSED		3265822	0					
ANR	3265835	Identifier	FT_UNUSED		3265822	0					
ANR	3265836	ArgumentList	line		3265822	1					
ANR	3265837	Argument	line		3265822	0					
ANR	3265838	Identifier	line		3265822	0					
ANR	3265839	ExpressionStatement	FT_UNUSED ( file )	116:4:4350:4367	3265822	2	True				
ANR	3265840	CallExpression	FT_UNUSED ( file )		3265822	0					
ANR	3265841	Callee	FT_UNUSED		3265822	0					
ANR	3265842	Identifier	FT_UNUSED		3265822	0					
ANR	3265843	ArgumentList	file		3265822	1					
ANR	3265844	Argument	file		3265822	0					
ANR	3265845	Identifier	file		3265822	0					
ANR	3265846	ReturnStatement	return 0 ;	118:4:4374:4382	3265822	3	True				
ANR	3265847	PrimaryExpression	0		3265822	0					
ANR	3265848	Identifier	FT_Throw		3265822	1					
ANR	3265849	ParameterList	"FT_Error error , int line , const char * file"		3265822	2					
ANR	3265850	Parameter	FT_Error error	110:12:4212:4229	3265822	0	True				
ANR	3265851	ParameterType	FT_Error		3265822	0					
ANR	3265852	Identifier	error		3265822	1					
ANR	3265853	Parameter	int line	111:12:4244:4260	3265822	1	True				
ANR	3265854	ParameterType	int		3265822	0					
ANR	3265855	Identifier	line		3265822	1					
ANR	3265856	Parameter	const char * file	112:12:4275:4291	3265822	2	True				
ANR	3265857	ParameterType	const char *		3265822	0					
ANR	3265858	Identifier	file		3265822	1					
ANR	3265859	CFGEntryNode	ENTRY		3265822		True				
ANR	3265860	CFGExitNode	EXIT		3265822		True				
ANR	3265861	Symbol	file		3265822						
ANR	3265862	Symbol	line		3265822						
ANR	3265863	Symbol	error		3265822						
ANR	3265864	DeclStmt									
ANR	3265865	Decl							int	int [ trace_count ]	ft_trace_levels
ANR	3265866	DeclStmt									
ANR	3265867	Decl							const char	const char * [ trace_count + 1 ]	ft_trace_toggles
ANR	3265868	Function	ft_debug_init	158:2:6137:7986							
ANR	3265869	FunctionDef	ft_debug_init ()		3265868	0					
ANR	3265870	CompoundStatement		159:2:6161:7986	3265868	0					
ANR	3265871	IdentifierDeclStatement	const char * ft2_debug = 0 ;	167:4:6487:6513	3265868	0	True				
ANR	3265872	IdentifierDecl	* ft2_debug = 0		3265868	0					
ANR	3265873	IdentifierDeclType	const char *		3265868	0					
ANR	3265874	Identifier	ft2_debug		3265868	1					
ANR	3265875	AssignmentExpression	* ft2_debug = 0		3265868	2		=			
ANR	3265876	Identifier	ft2_debug		3265868	0					
ANR	3265877	PrimaryExpression	0		3265868	1					
ANR	3265878	IfStatement	if ( ft2_debug )		3265868	1					
ANR	3265879	Condition	ft2_debug	170:9:6526:6534	3265868	0	True				
ANR	3265880	Identifier	ft2_debug		3265868	0					
ANR	3265881	CompoundStatement		15:6:422:436	3265868	1					
ANR	3265882	IdentifierDeclStatement	const char * p = ft2_debug ;	172:6:6550:6576	3265868	0	True				
ANR	3265883	IdentifierDecl	* p = ft2_debug		3265868	0					
ANR	3265884	IdentifierDeclType	const char *		3265868	0					
ANR	3265885	Identifier	p		3265868	1					
ANR	3265886	AssignmentExpression	* p = ft2_debug		3265868	2		=			
ANR	3265887	Identifier	ft2_debug		3265868	0					
ANR	3265888	Identifier	ft2_debug		3265868	1					
ANR	3265889	IdentifierDeclStatement	const char * q ;	173:6:6584:6598	3265868	1	True				
ANR	3265890	IdentifierDecl	* q		3265868	0					
ANR	3265891	IdentifierDeclType	const char *		3265868	0					
ANR	3265892	Identifier	q		3265868	1					
ANR	3265893	ForStatement	for ( ; * p ; p ++ )		3265868	2					
ANR	3265894	Condition	* p	176:14:6616:6617	3265868	0	True				
ANR	3265895	UnaryOperationExpression	* p		3265868	0					
ANR	3265896	UnaryOperator	*		3265868	0					
ANR	3265897	Identifier	p		3265868	1					
ANR	3265898	PostIncDecOperationExpression	p ++	176:18:6620:6622	3265868	1	True				
ANR	3265899	Identifier	p		3265868	0					
ANR	3265900	IncDec	++		3265868	1					
ANR	3265901	CompoundStatement		19:6:470:470	3265868	2					
ANR	3265902	IfStatement	"if ( * p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '=' )"		3265868	0					
ANR	3265903	Condition	"* p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '='"	179:13:6700:6761	3265868	0	True				
ANR	3265904	OrExpression	"* p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '='"		3265868	0		||			
ANR	3265905	EqualityExpression	* p == ' '		3265868	0		==			
ANR	3265906	UnaryOperationExpression	* p		3265868	0					
ANR	3265907	UnaryOperator	*		3265868	0					
ANR	3265908	Identifier	p		3265868	1					
ANR	3265909	PrimaryExpression	' '		3265868	1					
ANR	3265910	OrExpression	"* p == '\\t' || * p == ',' || * p == ';' || * p == '='"		3265868	1		||			
ANR	3265911	EqualityExpression	* p == '\\t'		3265868	0		==			
ANR	3265912	UnaryOperationExpression	* p		3265868	0					
ANR	3265913	UnaryOperator	*		3265868	0					
ANR	3265914	Identifier	p		3265868	1					
ANR	3265915	PrimaryExpression	'\\t'		3265868	1					
ANR	3265916	OrExpression	"* p == ',' || * p == ';' || * p == '='"		3265868	1		||			
ANR	3265917	EqualityExpression	"* p == ','"		3265868	0		==			
ANR	3265918	UnaryOperationExpression	* p		3265868	0					
ANR	3265919	UnaryOperator	*		3265868	0					
ANR	3265920	Identifier	p		3265868	1					
ANR	3265921	PrimaryExpression	"','"		3265868	1					
ANR	3265922	OrExpression	* p == ';' || * p == '='		3265868	1		||			
ANR	3265923	EqualityExpression	* p == ';'		3265868	0		==			
ANR	3265924	UnaryOperationExpression	* p		3265868	0					
ANR	3265925	UnaryOperator	*		3265868	0					
ANR	3265926	Identifier	p		3265868	1					
ANR	3265927	PrimaryExpression	';'		3265868	1					
ANR	3265928	EqualityExpression	* p == '='		3265868	1		==			
ANR	3265929	UnaryOperationExpression	* p		3265868	0					
ANR	3265930	UnaryOperator	*		3265868	0					
ANR	3265931	Identifier	p		3265868	1					
ANR	3265932	PrimaryExpression	'='		3265868	1					
ANR	3265933	ContinueStatement	continue ;	180:10:6775:6783	3265868	1	True				
ANR	3265934	ExpressionStatement	q = p	183:8:6842:6847	3265868	1	True				
ANR	3265935	AssignmentExpression	q = p		3265868	0		=			
ANR	3265936	Identifier	q		3265868	0					
ANR	3265937	Identifier	p		3265868	1					
ANR	3265938	WhileStatement	while ( * p && * p != ':' )		3265868	2					
ANR	3265939	Condition	* p && * p != ':'	184:16:6865:6879	3265868	0	True				
ANR	3265940	AndExpression	* p && * p != ':'		3265868	0		&&			
ANR	3265941	UnaryOperationExpression	* p		3265868	0					
ANR	3265942	UnaryOperator	*		3265868	0					
ANR	3265943	Identifier	p		3265868	1					
ANR	3265944	EqualityExpression	* p != ':'		3265868	1		!=			
ANR	3265945	UnaryOperationExpression	* p		3265868	0					
ANR	3265946	UnaryOperator	*		3265868	0					
ANR	3265947	Identifier	p		3265868	1					
ANR	3265948	PrimaryExpression	':'		3265868	1					
ANR	3265949	ExpressionStatement	p ++	185:10:6893:6896	3265868	1	True				
ANR	3265950	PostIncDecOperationExpression	p ++		3265868	0					
ANR	3265951	Identifier	p		3265868	0					
ANR	3265952	IncDec	++		3265868	1					
ANR	3265953	IfStatement	if ( ! * p )		3265868	3					
ANR	3265954	Condition	! * p	187:13:6912:6914	3265868	0	True				
ANR	3265955	UnaryOperationExpression	! * p		3265868	0					
ANR	3265956	UnaryOperator	!		3265868	0					
ANR	3265957	UnaryOperationExpression	* p		3265868	1					
ANR	3265958	UnaryOperator	*		3265868	0					
ANR	3265959	Identifier	p		3265868	1					
ANR	3265960	BreakStatement	break ;	188:10:6928:6933	3265868	1	True				
ANR	3265961	IfStatement	if ( * p == ':' && p > q )		3265868	4					
ANR	3265962	Condition	* p == ':' && p > q	190:13:6949:6966	3265868	0	True				
ANR	3265963	AndExpression	* p == ':' && p > q		3265868	0		&&			
ANR	3265964	EqualityExpression	* p == ':'		3265868	0		==			
ANR	3265965	UnaryOperationExpression	* p		3265868	0					
ANR	3265966	UnaryOperator	*		3265868	0					
ANR	3265967	Identifier	p		3265868	1					
ANR	3265968	PrimaryExpression	':'		3265868	1					
ANR	3265969	RelationalExpression	p > q		3265868	1		>			
ANR	3265970	Identifier	p		3265868	0					
ANR	3265971	Identifier	q		3265868	1					
ANR	3265972	CompoundStatement		35:10:871:898	3265868	1					
ANR	3265973	IdentifierDeclStatement	"int n , i , len = ( int ) ( p - q ) ;"	192:10:6990:7021	3265868	0	True				
ANR	3265974	IdentifierDecl	n		3265868	0					
ANR	3265975	IdentifierDeclType	int		3265868	0					
ANR	3265976	Identifier	n		3265868	1					
ANR	3265977	IdentifierDecl	i		3265868	1					
ANR	3265978	IdentifierDeclType	int		3265868	0					
ANR	3265979	Identifier	i		3265868	1					
ANR	3265980	IdentifierDecl	len = ( int ) ( p - q )		3265868	2					
ANR	3265981	IdentifierDeclType	int		3265868	0					
ANR	3265982	Identifier	len		3265868	1					
ANR	3265983	AssignmentExpression	len = ( int ) ( p - q )		3265868	2		=			
ANR	3265984	Identifier	len		3265868	0					
ANR	3265985	CastExpression	( int ) ( p - q )		3265868	1					
ANR	3265986	CastTarget	int		3265868	0					
ANR	3265987	AdditiveExpression	p - q		3265868	1		-			
ANR	3265988	Identifier	p		3265868	0					
ANR	3265989	Identifier	q		3265868	1					
ANR	3265990	IdentifierDeclStatement	"int level = - 1 , found = - 1 ;"	193:10:7033:7060	3265868	1	True				
ANR	3265991	IdentifierDecl	level = - 1		3265868	0					
ANR	3265992	IdentifierDeclType	int		3265868	0					
ANR	3265993	Identifier	level		3265868	1					
ANR	3265994	AssignmentExpression	level = - 1		3265868	2		=			
ANR	3265995	Identifier	level		3265868	0					
ANR	3265996	UnaryOperationExpression	- 1		3265868	1					
ANR	3265997	UnaryOperator	-		3265868	0					
ANR	3265998	PrimaryExpression	1		3265868	1					
ANR	3265999	IdentifierDecl	found = - 1		3265868	1					
ANR	3266000	IdentifierDeclType	int		3265868	0					
ANR	3266001	Identifier	found		3265868	1					
ANR	3266002	AssignmentExpression	found = - 1		3265868	2		=			
ANR	3266003	Identifier	found		3265868	0					
ANR	3266004	UnaryOperationExpression	- 1		3265868	1					
ANR	3266005	UnaryOperator	-		3265868	0					
ANR	3266006	PrimaryExpression	1		3265868	1					
ANR	3266007	ForStatement	for ( n = 0 ; n < trace_count ; n ++ )		3265868	2					
ANR	3266008	ForInit	n = 0 ;	196:16:7080:7085	3265868	0	True				
ANR	3266009	AssignmentExpression	n = 0		3265868	0		=			
ANR	3266010	Identifier	n		3265868	0					
ANR	3266011	PrimaryExpression	0		3265868	1					
ANR	3266012	Condition	n < trace_count	196:23:7087:7101	3265868	1	True				
ANR	3266013	RelationalExpression	n < trace_count		3265868	0		<			
ANR	3266014	Identifier	n		3265868	0					
ANR	3266015	Identifier	trace_count		3265868	1					
ANR	3266016	PostIncDecOperationExpression	n ++	196:40:7104:7106	3265868	2	True				
ANR	3266017	Identifier	n		3265868	0					
ANR	3266018	IncDec	++		3265868	1					
ANR	3266019	CompoundStatement		40:12:972:1013	3265868	3					
ANR	3266020	IdentifierDeclStatement	const char * toggle = ft_trace_toggles [ n ] ;	198:12:7134:7175	3265868	0	True				
ANR	3266021	IdentifierDecl	* toggle = ft_trace_toggles [ n ]		3265868	0					
ANR	3266022	IdentifierDeclType	const char *		3265868	0					
ANR	3266023	Identifier	toggle		3265868	1					
ANR	3266024	AssignmentExpression	* toggle = ft_trace_toggles [ n ]		3265868	2		=			
ANR	3266025	Identifier	toggle		3265868	0					
ANR	3266026	ArrayIndexing	ft_trace_toggles [ n ]		3265868	1					
ANR	3266027	Identifier	ft_trace_toggles		3265868	0					
ANR	3266028	Identifier	n		3265868	1					
ANR	3266029	ForStatement	for ( i = 0 ; i < len ; i ++ )		3265868	1					
ANR	3266030	ForInit	i = 0 ;	201:18:7197:7202	3265868	0	True				
ANR	3266031	AssignmentExpression	i = 0		3265868	0		=			
ANR	3266032	Identifier	i		3265868	0					
ANR	3266033	PrimaryExpression	0		3265868	1					
ANR	3266034	Condition	i < len	201:25:7204:7210	3265868	1	True				
ANR	3266035	RelationalExpression	i < len		3265868	0		<			
ANR	3266036	Identifier	i		3265868	0					
ANR	3266037	Identifier	len		3265868	1					
ANR	3266038	PostIncDecOperationExpression	i ++	201:34:7213:7215	3265868	2	True				
ANR	3266039	Identifier	i		3265868	0					
ANR	3266040	IncDec	++		3265868	1					
ANR	3266041	CompoundStatement		44:12:1069:1069	3265868	3					
ANR	3266042	IfStatement	if ( toggle [ i ] != q [ i ] )		3265868	0					
ANR	3266043	Condition	toggle [ i ] != q [ i ]	203:19:7252:7268	3265868	0	True				
ANR	3266044	EqualityExpression	toggle [ i ] != q [ i ]		3265868	0		!=			
ANR	3266045	ArrayIndexing	toggle [ i ]		3265868	0					
ANR	3266046	Identifier	toggle		3265868	0					
ANR	3266047	Identifier	i		3265868	1					
ANR	3266048	ArrayIndexing	q [ i ]		3265868	1					
ANR	3266049	Identifier	q		3265868	0					
ANR	3266050	Identifier	i		3265868	1					
ANR	3266051	BreakStatement	break ;	204:16:7288:7293	3265868	1	True				
ANR	3266052	IfStatement	if ( i == len && toggle [ i ] == 0 )		3265868	2					
ANR	3266053	Condition	i == len && toggle [ i ] == 0	207:17:7327:7352	3265868	0	True				
ANR	3266054	AndExpression	i == len && toggle [ i ] == 0		3265868	0		&&			
ANR	3266055	EqualityExpression	i == len		3265868	0		==			
ANR	3266056	Identifier	i		3265868	0					
ANR	3266057	Identifier	len		3265868	1					
ANR	3266058	EqualityExpression	toggle [ i ] == 0		3265868	1		==			
ANR	3266059	ArrayIndexing	toggle [ i ]		3265868	0					
ANR	3266060	Identifier	toggle		3265868	0					
ANR	3266061	Identifier	i		3265868	1					
ANR	3266062	PrimaryExpression	0		3265868	1					
ANR	3266063	CompoundStatement		50:12:1206:1206	3265868	1					
ANR	3266064	ExpressionStatement	found = n	209:14:7384:7393	3265868	0	True				
ANR	3266065	AssignmentExpression	found = n		3265868	0		=			
ANR	3266066	Identifier	found		3265868	0					
ANR	3266067	Identifier	n		3265868	1					
ANR	3266068	BreakStatement	break ;	210:14:7409:7414	3265868	1	True				
ANR	3266069	ExpressionStatement	p ++	215:10:7480:7483	3265868	3	True				
ANR	3266070	PostIncDecOperationExpression	p ++		3265868	0					
ANR	3266071	Identifier	p		3265868	0					
ANR	3266072	IncDec	++		3265868	1					
ANR	3266073	IfStatement	if ( * p )		3265868	4					
ANR	3266074	Condition	* p	216:15:7500:7501	3265868	0	True				
ANR	3266075	UnaryOperationExpression	* p		3265868	0					
ANR	3266076	UnaryOperator	*		3265868	0					
ANR	3266077	Identifier	p		3265868	1					
ANR	3266078	CompoundStatement		59:10:1353:1353	3265868	1					
ANR	3266079	ExpressionStatement	level = * p - '0'	218:12:7529:7545	3265868	0	True				
ANR	3266080	AssignmentExpression	level = * p - '0'		3265868	0		=			
ANR	3266081	Identifier	level		3265868	0					
ANR	3266082	AdditiveExpression	* p - '0'		3265868	1		-			
ANR	3266083	UnaryOperationExpression	* p		3265868	0					
ANR	3266084	UnaryOperator	*		3265868	0					
ANR	3266085	Identifier	p		3265868	1					
ANR	3266086	PrimaryExpression	'0'		3265868	1					
ANR	3266087	IfStatement	if ( level < 0 || level > 7 )		3265868	1					
ANR	3266088	Condition	level < 0 || level > 7	219:17:7564:7585	3265868	0	True				
ANR	3266089	OrExpression	level < 0 || level > 7		3265868	0		||			
ANR	3266090	RelationalExpression	level < 0		3265868	0		<			
ANR	3266091	Identifier	level		3265868	0					
ANR	3266092	PrimaryExpression	0		3265868	1					
ANR	3266093	RelationalExpression	level > 7		3265868	1		>			
ANR	3266094	Identifier	level		3265868	0					
ANR	3266095	PrimaryExpression	7		3265868	1					
ANR	3266096	ExpressionStatement	level = - 1	220:14:7603:7613	3265868	1	True				
ANR	3266097	AssignmentExpression	level = - 1		3265868	0		=			
ANR	3266098	Identifier	level		3265868	0					
ANR	3266099	UnaryOperationExpression	- 1		3265868	1					
ANR	3266100	UnaryOperator	-		3265868	0					
ANR	3266101	PrimaryExpression	1		3265868	1					
ANR	3266102	IfStatement	if ( found >= 0 && level >= 0 )		3265868	5					
ANR	3266103	Condition	found >= 0 && level >= 0	223:15:7643:7666	3265868	0	True				
ANR	3266104	AndExpression	found >= 0 && level >= 0		3265868	0		&&			
ANR	3266105	RelationalExpression	found >= 0		3265868	0		>=			
ANR	3266106	Identifier	found		3265868	0					
ANR	3266107	PrimaryExpression	0		3265868	1					
ANR	3266108	RelationalExpression	level >= 0		3265868	1		>=			
ANR	3266109	Identifier	level		3265868	0					
ANR	3266110	PrimaryExpression	0		3265868	1					
ANR	3266111	CompoundStatement		66:10:1518:1518	3265868	1					
ANR	3266112	IfStatement	if ( found == trace_any )		3265868	0					
ANR	3266113	Condition	found == trace_any	225:17:7699:7716	3265868	0	True				
ANR	3266114	EqualityExpression	found == trace_any		3265868	0		==			
ANR	3266115	Identifier	found		3265868	0					
ANR	3266116	Identifier	trace_any		3265868	1					
ANR	3266117	CompoundStatement		68:12:1570:1570	3265868	1					
ANR	3266118	ForStatement	for ( n = 0 ; n < trace_count ; n ++ )		3265868	0					
ANR	3266119	ForInit	n = 0 ;	228:20:7797:7802	3265868	0	True				
ANR	3266120	AssignmentExpression	n = 0		3265868	0		=			
ANR	3266121	Identifier	n		3265868	0					
ANR	3266122	PrimaryExpression	0		3265868	1					
ANR	3266123	Condition	n < trace_count	228:27:7804:7818	3265868	1	True				
ANR	3266124	RelationalExpression	n < trace_count		3265868	0		<			
ANR	3266125	Identifier	n		3265868	0					
ANR	3266126	Identifier	trace_count		3265868	1					
ANR	3266127	PostIncDecOperationExpression	n ++	228:44:7821:7823	3265868	2	True				
ANR	3266128	Identifier	n		3265868	0					
ANR	3266129	IncDec	++		3265868	1					
ANR	3266130	ExpressionStatement	ft_trace_levels [ n ] = level	229:16:7843:7869	3265868	3	True				
ANR	3266131	AssignmentExpression	ft_trace_levels [ n ] = level		3265868	0		=			
ANR	3266132	ArrayIndexing	ft_trace_levels [ n ]		3265868	0					
ANR	3266133	Identifier	ft_trace_levels		3265868	0					
ANR	3266134	Identifier	n		3265868	1					
ANR	3266135	Identifier	level		3265868	1					
ANR	3266136	ElseStatement	else		3265868	0					
ANR	3266137	ExpressionStatement	ft_trace_levels [ found ] = level	232:14:7916:7946	3265868	0	True				
ANR	3266138	AssignmentExpression	ft_trace_levels [ found ] = level		3265868	0		=			
ANR	3266139	ArrayIndexing	ft_trace_levels [ found ]		3265868	0					
ANR	3266140	Identifier	ft_trace_levels		3265868	0					
ANR	3266141	Identifier	found		3265868	1					
ANR	3266142	Identifier	level		3265868	1					
ANR	3266143	Identifier	ft_debug_init		3265868	1					
ANR	3266144	ParameterList			3265868	2					
ANR	3266145	CFGEntryNode	ENTRY		3265868		True				
ANR	3266146	CFGExitNode	EXIT		3265868		True				
ANR	3266147	Symbol	trace_any		3265868						
ANR	3266148	Symbol	level		3265868						
ANR	3266149	Symbol	trace_count		3265868						
ANR	3266150	Symbol	ft2_debug		3265868						
ANR	3266151	Symbol	i		3265868						
ANR	3266152	Symbol	toggle		3265868						
ANR	3266153	Symbol	n		3265868						
ANR	3266154	Symbol	p		3265868						
ANR	3266155	Symbol	q		3265868						
ANR	3266156	Symbol	found		3265868						
ANR	3266157	Symbol	* i		3265868						
ANR	3266158	Symbol	len		3265868						
ANR	3266159	Symbol	* n		3265868						
ANR	3266160	Symbol	* p		3265868						
ANR	3266161	Symbol	* q		3265868						
ANR	3266162	Symbol	* ft_trace_levels		3265868						
ANR	3266163	Symbol	ft_trace_toggles		3265868						
ANR	3266164	Symbol	* toggle		3265868						
ANR	3266165	Symbol	* ft_trace_toggles		3265868						
ANR	3266166	Symbol	ft_trace_levels		3265868						
ANR	3266167	Symbol	* found		3265868						
ANR	3266168	Function	ft_debug_init	244:2:8051:8097							
ANR	3266169	FunctionDef	ft_debug_init ()		3266168	0					
ANR	3266170	CompoundStatement		245:2:8075:8097	3266168	0					
ANR	3266171	Identifier	ft_debug_init		3266168	1					
ANR	3266172	ParameterList			3266168	2					
ANR	3266173	CFGEntryNode	ENTRY		3266168		True				
ANR	3266174	CFGExitNode	EXIT		3266168		True				
