command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7607172	File	data/converged/CVE-2018-16863_ghostpdl/openjpeg_src_bin_jp2_opj_compress.c								
ANR	7607173	ClassDef	dircnt	74:8:2807:2966							
ANR	7607174	DeclStmt									
ANR	7607175	Decl							char	char *	filename_buf
ANR	7607176	DeclStmt									
ANR	7607177	Decl							char	char * *	filename
ANR	7607178	DeclStmt									
ANR	7607179	Decl							dircnt	dircnt	dircnt_t
ANR	7607180	ClassDef	img_folder	81:8:2977:3252							
ANR	7607181	DeclStmt									
ANR	7607182	Decl							char	char *	imgdirpath
ANR	7607183	DeclStmt									
ANR	7607184	Decl							char	char *	out_format
ANR	7607185	DeclStmt									
ANR	7607186	Decl							char	char	set_imgdir
ANR	7607187	DeclStmt									
ANR	7607188	Decl							char	char	set_out_format
ANR	7607189	DeclStmt									
ANR	7607190	Decl							img_folder	img_folder	img_fol_t
ANR	7607191	Function	encode_help_display	92:0:3255:20771							
ANR	7607192	FunctionDef	encode_help_display ()		7607191	0					
ANR	7607193	CompoundStatement		93:0:3293:20771	7607191	0					
ANR	7607194	Statement	fprintf	94:4:3299:3305	7607191	0	True				
ANR	7607195	Statement	(	94:11:3306:3306	7607191	1	True				
ANR	7607196	Statement	stdout	94:12:3307:3312	7607191	2	True				
ANR	7607197	Statement	","	94:18:3313:3313	7607191	3	True				
ANR	7607198	Statement	"""\\nThis is the opj_compress utility from the OpenJPEG project.\\n"""	95:12:3327:3391	7607191	4	True				
ANR	7607199	Statement	"""It compresses various image formats with the JPEG 2000 algorithm.\\n"""	96:12:3405:3473	7607191	5	True				
ANR	7607200	Statement	"""It has been compiled against openjp2 library v%s.\\n\\n"""	97:12:3487:3541	7607191	6	True				
ANR	7607201	Statement	","	97:67:3542:3542	7607191	7	True				
ANR	7607202	Statement	opj_version	97:69:3544:3554	7607191	8	True				
ANR	7607203	Statement	(	97:80:3555:3555	7607191	9	True				
ANR	7607204	Statement	)	97:81:3556:3556	7607191	10	True				
ANR	7607205	Statement	)	97:82:3557:3557	7607191	11	True				
ANR	7607206	ExpressionStatement		97:83:3558:3558	7607191	12	True				
ANR	7607207	ExpressionStatement	"fprintf ( stdout , ""Default encoding options:\\n"" )"	99:4:3565:3611	7607191	13	True				
ANR	7607208	CallExpression	"fprintf ( stdout , ""Default encoding options:\\n"" )"		7607191	0					
ANR	7607209	Callee	fprintf		7607191	0					
ANR	7607210	Identifier	fprintf		7607191	0					
ANR	7607211	ArgumentList	stdout		7607191	1					
ANR	7607212	Argument	stdout		7607191	0					
ANR	7607213	Identifier	stdout		7607191	0					
ANR	7607214	Argument	"""Default encoding options:\\n"""		7607191	1					
ANR	7607215	PrimaryExpression	"""Default encoding options:\\n"""		7607191	0					
ANR	7607216	ExpressionStatement	"fprintf ( stdout , ""-------------------------\\n"" )"	100:4:3617:3663	7607191	14	True				
ANR	7607217	CallExpression	"fprintf ( stdout , ""-------------------------\\n"" )"		7607191	0					
ANR	7607218	Callee	fprintf		7607191	0					
ANR	7607219	Identifier	fprintf		7607191	0					
ANR	7607220	ArgumentList	stdout		7607191	1					
ANR	7607221	Argument	stdout		7607191	0					
ANR	7607222	Identifier	stdout		7607191	0					
ANR	7607223	Argument	"""-------------------------\\n"""		7607191	1					
ANR	7607224	PrimaryExpression	"""-------------------------\\n"""		7607191	0					
ANR	7607225	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	101:4:3669:3690	7607191	15	True				
ANR	7607226	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607227	Callee	fprintf		7607191	0					
ANR	7607228	Identifier	fprintf		7607191	0					
ANR	7607229	ArgumentList	stdout		7607191	1					
ANR	7607230	Argument	stdout		7607191	0					
ANR	7607231	Identifier	stdout		7607191	0					
ANR	7607232	Argument	"""\\n"""		7607191	1					
ANR	7607233	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607234	ExpressionStatement	"fprintf ( stdout , "" * Lossless\\n"" )"	102:4:3696:3728	7607191	16	True				
ANR	7607235	CallExpression	"fprintf ( stdout , "" * Lossless\\n"" )"		7607191	0					
ANR	7607236	Callee	fprintf		7607191	0					
ANR	7607237	Identifier	fprintf		7607191	0					
ANR	7607238	ArgumentList	stdout		7607191	1					
ANR	7607239	Argument	stdout		7607191	0					
ANR	7607240	Identifier	stdout		7607191	0					
ANR	7607241	Argument	""" * Lossless\\n"""		7607191	1					
ANR	7607242	PrimaryExpression	""" * Lossless\\n"""		7607191	0					
ANR	7607243	ExpressionStatement	"fprintf ( stdout , "" * 1 tile\\n"" )"	103:4:3734:3764	7607191	17	True				
ANR	7607244	CallExpression	"fprintf ( stdout , "" * 1 tile\\n"" )"		7607191	0					
ANR	7607245	Callee	fprintf		7607191	0					
ANR	7607246	Identifier	fprintf		7607191	0					
ANR	7607247	ArgumentList	stdout		7607191	1					
ANR	7607248	Argument	stdout		7607191	0					
ANR	7607249	Identifier	stdout		7607191	0					
ANR	7607250	Argument	""" * 1 tile\\n"""		7607191	1					
ANR	7607251	PrimaryExpression	""" * 1 tile\\n"""		7607191	0					
ANR	7607252	ExpressionStatement	"fprintf ( stdout , "" * RGB->YCC conversion if at least 3 components\\n"" )"	104:4:3770:3838	7607191	18	True				
ANR	7607253	CallExpression	"fprintf ( stdout , "" * RGB->YCC conversion if at least 3 components\\n"" )"		7607191	0					
ANR	7607254	Callee	fprintf		7607191	0					
ANR	7607255	Identifier	fprintf		7607191	0					
ANR	7607256	ArgumentList	stdout		7607191	1					
ANR	7607257	Argument	stdout		7607191	0					
ANR	7607258	Identifier	stdout		7607191	0					
ANR	7607259	Argument	""" * RGB->YCC conversion if at least 3 components\\n"""		7607191	1					
ANR	7607260	PrimaryExpression	""" * RGB->YCC conversion if at least 3 components\\n"""		7607191	0					
ANR	7607261	ExpressionStatement	"fprintf ( stdout , "" * Size of precinct : 2^15 x 2^15 (means 1 precinct)\\n"" )"	105:4:3844:3917	7607191	19	True				
ANR	7607262	CallExpression	"fprintf ( stdout , "" * Size of precinct : 2^15 x 2^15 (means 1 precinct)\\n"" )"		7607191	0					
ANR	7607263	Callee	fprintf		7607191	0					
ANR	7607264	Identifier	fprintf		7607191	0					
ANR	7607265	ArgumentList	stdout		7607191	1					
ANR	7607266	Argument	stdout		7607191	0					
ANR	7607267	Identifier	stdout		7607191	0					
ANR	7607268	Argument	""" * Size of precinct : 2^15 x 2^15 (means 1 precinct)\\n"""		7607191	1					
ANR	7607269	PrimaryExpression	""" * Size of precinct : 2^15 x 2^15 (means 1 precinct)\\n"""		7607191	0					
ANR	7607270	ExpressionStatement	"fprintf ( stdout , "" * Size of code-block : 64 x 64\\n"" )"	106:4:3923:3975	7607191	20	True				
ANR	7607271	CallExpression	"fprintf ( stdout , "" * Size of code-block : 64 x 64\\n"" )"		7607191	0					
ANR	7607272	Callee	fprintf		7607191	0					
ANR	7607273	Identifier	fprintf		7607191	0					
ANR	7607274	ArgumentList	stdout		7607191	1					
ANR	7607275	Argument	stdout		7607191	0					
ANR	7607276	Identifier	stdout		7607191	0					
ANR	7607277	Argument	""" * Size of code-block : 64 x 64\\n"""		7607191	1					
ANR	7607278	PrimaryExpression	""" * Size of code-block : 64 x 64\\n"""		7607191	0					
ANR	7607279	ExpressionStatement	"fprintf ( stdout , "" * Number of resolutions: 6\\n"" )"	107:4:3981:4029	7607191	21	True				
ANR	7607280	CallExpression	"fprintf ( stdout , "" * Number of resolutions: 6\\n"" )"		7607191	0					
ANR	7607281	Callee	fprintf		7607191	0					
ANR	7607282	Identifier	fprintf		7607191	0					
ANR	7607283	ArgumentList	stdout		7607191	1					
ANR	7607284	Argument	stdout		7607191	0					
ANR	7607285	Identifier	stdout		7607191	0					
ANR	7607286	Argument	""" * Number of resolutions: 6\\n"""		7607191	1					
ANR	7607287	PrimaryExpression	""" * Number of resolutions: 6\\n"""		7607191	0					
ANR	7607288	ExpressionStatement	"fprintf ( stdout , "" * No SOP marker in the codestream\\n"" )"	108:4:4035:4090	7607191	22	True				
ANR	7607289	CallExpression	"fprintf ( stdout , "" * No SOP marker in the codestream\\n"" )"		7607191	0					
ANR	7607290	Callee	fprintf		7607191	0					
ANR	7607291	Identifier	fprintf		7607191	0					
ANR	7607292	ArgumentList	stdout		7607191	1					
ANR	7607293	Argument	stdout		7607191	0					
ANR	7607294	Identifier	stdout		7607191	0					
ANR	7607295	Argument	""" * No SOP marker in the codestream\\n"""		7607191	1					
ANR	7607296	PrimaryExpression	""" * No SOP marker in the codestream\\n"""		7607191	0					
ANR	7607297	ExpressionStatement	"fprintf ( stdout , "" * No EPH marker in the codestream\\n"" )"	109:4:4096:4151	7607191	23	True				
ANR	7607298	CallExpression	"fprintf ( stdout , "" * No EPH marker in the codestream\\n"" )"		7607191	0					
ANR	7607299	Callee	fprintf		7607191	0					
ANR	7607300	Identifier	fprintf		7607191	0					
ANR	7607301	ArgumentList	stdout		7607191	1					
ANR	7607302	Argument	stdout		7607191	0					
ANR	7607303	Identifier	stdout		7607191	0					
ANR	7607304	Argument	""" * No EPH marker in the codestream\\n"""		7607191	1					
ANR	7607305	PrimaryExpression	""" * No EPH marker in the codestream\\n"""		7607191	0					
ANR	7607306	ExpressionStatement	"fprintf ( stdout , "" * No sub-sampling in x or y direction\\n"" )"	110:4:4157:4216	7607191	24	True				
ANR	7607307	CallExpression	"fprintf ( stdout , "" * No sub-sampling in x or y direction\\n"" )"		7607191	0					
ANR	7607308	Callee	fprintf		7607191	0					
ANR	7607309	Identifier	fprintf		7607191	0					
ANR	7607310	ArgumentList	stdout		7607191	1					
ANR	7607311	Argument	stdout		7607191	0					
ANR	7607312	Identifier	stdout		7607191	0					
ANR	7607313	Argument	""" * No sub-sampling in x or y direction\\n"""		7607191	1					
ANR	7607314	PrimaryExpression	""" * No sub-sampling in x or y direction\\n"""		7607191	0					
ANR	7607315	ExpressionStatement	"fprintf ( stdout , "" * No mode switch activated\\n"" )"	111:4:4222:4270	7607191	25	True				
ANR	7607316	CallExpression	"fprintf ( stdout , "" * No mode switch activated\\n"" )"		7607191	0					
ANR	7607317	Callee	fprintf		7607191	0					
ANR	7607318	Identifier	fprintf		7607191	0					
ANR	7607319	ArgumentList	stdout		7607191	1					
ANR	7607320	Argument	stdout		7607191	0					
ANR	7607321	Identifier	stdout		7607191	0					
ANR	7607322	Argument	""" * No mode switch activated\\n"""		7607191	1					
ANR	7607323	PrimaryExpression	""" * No mode switch activated\\n"""		7607191	0					
ANR	7607324	ExpressionStatement	"fprintf ( stdout , "" * Progression order: LRCP\\n"" )"	112:4:4276:4323	7607191	26	True				
ANR	7607325	CallExpression	"fprintf ( stdout , "" * Progression order: LRCP\\n"" )"		7607191	0					
ANR	7607326	Callee	fprintf		7607191	0					
ANR	7607327	Identifier	fprintf		7607191	0					
ANR	7607328	ArgumentList	stdout		7607191	1					
ANR	7607329	Argument	stdout		7607191	0					
ANR	7607330	Identifier	stdout		7607191	0					
ANR	7607331	Argument	""" * Progression order: LRCP\\n"""		7607191	1					
ANR	7607332	PrimaryExpression	""" * Progression order: LRCP\\n"""		7607191	0					
ANR	7607333	ExpressionStatement	"fprintf ( stdout , "" * No index file\\n"" )"	114:4:4348:4385	7607191	27	True				
ANR	7607334	CallExpression	"fprintf ( stdout , "" * No index file\\n"" )"		7607191	0					
ANR	7607335	Callee	fprintf		7607191	0					
ANR	7607336	Identifier	fprintf		7607191	0					
ANR	7607337	ArgumentList	stdout		7607191	1					
ANR	7607338	Argument	stdout		7607191	0					
ANR	7607339	Identifier	stdout		7607191	0					
ANR	7607340	Argument	""" * No index file\\n"""		7607191	1					
ANR	7607341	PrimaryExpression	""" * No index file\\n"""		7607191	0					
ANR	7607342	ExpressionStatement	"fprintf ( stdout , "" * No ROI upshifted\\n"" )"	116:4:4416:4456	7607191	28	True				
ANR	7607343	CallExpression	"fprintf ( stdout , "" * No ROI upshifted\\n"" )"		7607191	0					
ANR	7607344	Callee	fprintf		7607191	0					
ANR	7607345	Identifier	fprintf		7607191	0					
ANR	7607346	ArgumentList	stdout		7607191	1					
ANR	7607347	Argument	stdout		7607191	0					
ANR	7607348	Identifier	stdout		7607191	0					
ANR	7607349	Argument	""" * No ROI upshifted\\n"""		7607191	1					
ANR	7607350	PrimaryExpression	""" * No ROI upshifted\\n"""		7607191	0					
ANR	7607351	ExpressionStatement	"fprintf ( stdout , "" * No offset of the origin of the image\\n"" )"	117:4:4462:4522	7607191	29	True				
ANR	7607352	CallExpression	"fprintf ( stdout , "" * No offset of the origin of the image\\n"" )"		7607191	0					
ANR	7607353	Callee	fprintf		7607191	0					
ANR	7607354	Identifier	fprintf		7607191	0					
ANR	7607355	ArgumentList	stdout		7607191	1					
ANR	7607356	Argument	stdout		7607191	0					
ANR	7607357	Identifier	stdout		7607191	0					
ANR	7607358	Argument	""" * No offset of the origin of the image\\n"""		7607191	1					
ANR	7607359	PrimaryExpression	""" * No offset of the origin of the image\\n"""		7607191	0					
ANR	7607360	ExpressionStatement	"fprintf ( stdout , "" * No offset of the origin of the tiles\\n"" )"	118:4:4528:4588	7607191	30	True				
ANR	7607361	CallExpression	"fprintf ( stdout , "" * No offset of the origin of the tiles\\n"" )"		7607191	0					
ANR	7607362	Callee	fprintf		7607191	0					
ANR	7607363	Identifier	fprintf		7607191	0					
ANR	7607364	ArgumentList	stdout		7607191	1					
ANR	7607365	Argument	stdout		7607191	0					
ANR	7607366	Identifier	stdout		7607191	0					
ANR	7607367	Argument	""" * No offset of the origin of the tiles\\n"""		7607191	1					
ANR	7607368	PrimaryExpression	""" * No offset of the origin of the tiles\\n"""		7607191	0					
ANR	7607369	ExpressionStatement	"fprintf ( stdout , "" * Reversible DWT 5-3\\n"" )"	119:4:4594:4636	7607191	31	True				
ANR	7607370	CallExpression	"fprintf ( stdout , "" * Reversible DWT 5-3\\n"" )"		7607191	0					
ANR	7607371	Callee	fprintf		7607191	0					
ANR	7607372	Identifier	fprintf		7607191	0					
ANR	7607373	ArgumentList	stdout		7607191	1					
ANR	7607374	Argument	stdout		7607191	0					
ANR	7607375	Identifier	stdout		7607191	0					
ANR	7607376	Argument	""" * Reversible DWT 5-3\\n"""		7607191	1					
ANR	7607377	PrimaryExpression	""" * Reversible DWT 5-3\\n"""		7607191	0					
ANR	7607378	ExpressionStatement	"fprintf ( stdout , "" * No JPWL protection\\n"" )"	122:4:4676:4718	7607191	32	True				
ANR	7607379	CallExpression	"fprintf ( stdout , "" * No JPWL protection\\n"" )"		7607191	0					
ANR	7607380	Callee	fprintf		7607191	0					
ANR	7607381	Identifier	fprintf		7607191	0					
ANR	7607382	ArgumentList	stdout		7607191	1					
ANR	7607383	Argument	stdout		7607191	0					
ANR	7607384	Identifier	stdout		7607191	0					
ANR	7607385	Argument	""" * No JPWL protection\\n"""		7607191	1					
ANR	7607386	PrimaryExpression	""" * No JPWL protection\\n"""		7607191	0					
ANR	7607387	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	125:4:4764:4785	7607191	33	True				
ANR	7607388	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607389	Callee	fprintf		7607191	0					
ANR	7607390	Identifier	fprintf		7607191	0					
ANR	7607391	ArgumentList	stdout		7607191	1					
ANR	7607392	Argument	stdout		7607191	0					
ANR	7607393	Identifier	stdout		7607191	0					
ANR	7607394	Argument	"""\\n"""		7607191	1					
ANR	7607395	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607396	ExpressionStatement	"fprintf ( stdout , ""Note:\\n"" )"	127:4:4792:4818	7607191	34	True				
ANR	7607397	CallExpression	"fprintf ( stdout , ""Note:\\n"" )"		7607191	0					
ANR	7607398	Callee	fprintf		7607191	0					
ANR	7607399	Identifier	fprintf		7607191	0					
ANR	7607400	ArgumentList	stdout		7607191	1					
ANR	7607401	Argument	stdout		7607191	0					
ANR	7607402	Identifier	stdout		7607191	0					
ANR	7607403	Argument	"""Note:\\n"""		7607191	1					
ANR	7607404	PrimaryExpression	"""Note:\\n"""		7607191	0					
ANR	7607405	ExpressionStatement	"fprintf ( stdout , ""-----\\n"" )"	128:4:4824:4850	7607191	35	True				
ANR	7607406	CallExpression	"fprintf ( stdout , ""-----\\n"" )"		7607191	0					
ANR	7607407	Callee	fprintf		7607191	0					
ANR	7607408	Identifier	fprintf		7607191	0					
ANR	7607409	ArgumentList	stdout		7607191	1					
ANR	7607410	Argument	stdout		7607191	0					
ANR	7607411	Identifier	stdout		7607191	0					
ANR	7607412	Argument	"""-----\\n"""		7607191	1					
ANR	7607413	PrimaryExpression	"""-----\\n"""		7607191	0					
ANR	7607414	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	129:4:4856:4877	7607191	36	True				
ANR	7607415	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607416	Callee	fprintf		7607191	0					
ANR	7607417	Identifier	fprintf		7607191	0					
ANR	7607418	ArgumentList	stdout		7607191	1					
ANR	7607419	Argument	stdout		7607191	0					
ANR	7607420	Identifier	stdout		7607191	0					
ANR	7607421	Argument	"""\\n"""		7607191	1					
ANR	7607422	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607423	ExpressionStatement	"fprintf ( stdout , ""The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"" )"	130:4:4883:4981	7607191	37	True				
ANR	7607424	CallExpression	"fprintf ( stdout , ""The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"" )"		7607191	0					
ANR	7607425	Callee	fprintf		7607191	0					
ANR	7607426	Identifier	fprintf		7607191	0					
ANR	7607427	ArgumentList	stdout		7607191	1					
ANR	7607428	Argument	stdout		7607191	0					
ANR	7607429	Identifier	stdout		7607191	0					
ANR	7607430	Argument	"""The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"""		7607191	1					
ANR	7607431	PrimaryExpression	"""The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"""		7607191	0					
ANR	7607432	ExpressionStatement	"fprintf ( stdout , ""COD and QCD never appear in the tile_header.\\n"" )"	132:4:4987:5052	7607191	38	True				
ANR	7607433	CallExpression	"fprintf ( stdout , ""COD and QCD never appear in the tile_header.\\n"" )"		7607191	0					
ANR	7607434	Callee	fprintf		7607191	0					
ANR	7607435	Identifier	fprintf		7607191	0					
ANR	7607436	ArgumentList	stdout		7607191	1					
ANR	7607437	Argument	stdout		7607191	0					
ANR	7607438	Identifier	stdout		7607191	0					
ANR	7607439	Argument	"""COD and QCD never appear in the tile_header.\\n"""		7607191	1					
ANR	7607440	PrimaryExpression	"""COD and QCD never appear in the tile_header.\\n"""		7607191	0					
ANR	7607441	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	133:4:5058:5079	7607191	39	True				
ANR	7607442	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607443	Callee	fprintf		7607191	0					
ANR	7607444	Identifier	fprintf		7607191	0					
ANR	7607445	ArgumentList	stdout		7607191	1					
ANR	7607446	Argument	stdout		7607191	0					
ANR	7607447	Identifier	stdout		7607191	0					
ANR	7607448	Argument	"""\\n"""		7607191	1					
ANR	7607449	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607450	ExpressionStatement	"fprintf ( stdout , ""Parameters:\\n"" )"	135:4:5086:5118	7607191	40	True				
ANR	7607451	CallExpression	"fprintf ( stdout , ""Parameters:\\n"" )"		7607191	0					
ANR	7607452	Callee	fprintf		7607191	0					
ANR	7607453	Identifier	fprintf		7607191	0					
ANR	7607454	ArgumentList	stdout		7607191	1					
ANR	7607455	Argument	stdout		7607191	0					
ANR	7607456	Identifier	stdout		7607191	0					
ANR	7607457	Argument	"""Parameters:\\n"""		7607191	1					
ANR	7607458	PrimaryExpression	"""Parameters:\\n"""		7607191	0					
ANR	7607459	ExpressionStatement	"fprintf ( stdout , ""-----------\\n"" )"	136:4:5124:5156	7607191	41	True				
ANR	7607460	CallExpression	"fprintf ( stdout , ""-----------\\n"" )"		7607191	0					
ANR	7607461	Callee	fprintf		7607191	0					
ANR	7607462	Identifier	fprintf		7607191	0					
ANR	7607463	ArgumentList	stdout		7607191	1					
ANR	7607464	Argument	stdout		7607191	0					
ANR	7607465	Identifier	stdout		7607191	0					
ANR	7607466	Argument	"""-----------\\n"""		7607191	1					
ANR	7607467	PrimaryExpression	"""-----------\\n"""		7607191	0					
ANR	7607468	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	137:4:5162:5183	7607191	42	True				
ANR	7607469	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607470	Callee	fprintf		7607191	0					
ANR	7607471	Identifier	fprintf		7607191	0					
ANR	7607472	ArgumentList	stdout		7607191	1					
ANR	7607473	Argument	stdout		7607191	0					
ANR	7607474	Identifier	stdout		7607191	0					
ANR	7607475	Argument	"""\\n"""		7607191	1					
ANR	7607476	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607477	ExpressionStatement	"fprintf ( stdout , ""Required Parameters (except with -h):\\n"" )"	138:4:5189:5247	7607191	43	True				
ANR	7607478	CallExpression	"fprintf ( stdout , ""Required Parameters (except with -h):\\n"" )"		7607191	0					
ANR	7607479	Callee	fprintf		7607191	0					
ANR	7607480	Identifier	fprintf		7607191	0					
ANR	7607481	ArgumentList	stdout		7607191	1					
ANR	7607482	Argument	stdout		7607191	0					
ANR	7607483	Identifier	stdout		7607191	0					
ANR	7607484	Argument	"""Required Parameters (except with -h):\\n"""		7607191	1					
ANR	7607485	PrimaryExpression	"""Required Parameters (except with -h):\\n"""		7607191	0					
ANR	7607486	ExpressionStatement	"fprintf ( stdout , ""One of the two options -ImgDir or -i must be used\\n"" )"	139:4:5253:5323	7607191	44	True				
ANR	7607487	CallExpression	"fprintf ( stdout , ""One of the two options -ImgDir or -i must be used\\n"" )"		7607191	0					
ANR	7607488	Callee	fprintf		7607191	0					
ANR	7607489	Identifier	fprintf		7607191	0					
ANR	7607490	ArgumentList	stdout		7607191	1					
ANR	7607491	Argument	stdout		7607191	0					
ANR	7607492	Identifier	stdout		7607191	0					
ANR	7607493	Argument	"""One of the two options -ImgDir or -i must be used\\n"""		7607191	1					
ANR	7607494	PrimaryExpression	"""One of the two options -ImgDir or -i must be used\\n"""		7607191	0					
ANR	7607495	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	140:4:5329:5350	7607191	45	True				
ANR	7607496	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607497	Callee	fprintf		7607191	0					
ANR	7607498	Identifier	fprintf		7607191	0					
ANR	7607499	ArgumentList	stdout		7607191	1					
ANR	7607500	Argument	stdout		7607191	0					
ANR	7607501	Identifier	stdout		7607191	0					
ANR	7607502	Argument	"""\\n"""		7607191	1					
ANR	7607503	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607504	ExpressionStatement	"fprintf ( stdout , ""-i <file>\\n"" )"	141:4:5356:5386	7607191	46	True				
ANR	7607505	CallExpression	"fprintf ( stdout , ""-i <file>\\n"" )"		7607191	0					
ANR	7607506	Callee	fprintf		7607191	0					
ANR	7607507	Identifier	fprintf		7607191	0					
ANR	7607508	ArgumentList	stdout		7607191	1					
ANR	7607509	Argument	stdout		7607191	0					
ANR	7607510	Identifier	stdout		7607191	0					
ANR	7607511	Argument	"""-i <file>\\n"""		7607191	1					
ANR	7607512	PrimaryExpression	"""-i <file>\\n"""		7607191	0					
ANR	7607513	ExpressionStatement	"fprintf ( stdout , ""    Input file\\n"" )"	142:4:5392:5427	7607191	47	True				
ANR	7607514	CallExpression	"fprintf ( stdout , ""    Input file\\n"" )"		7607191	0					
ANR	7607515	Callee	fprintf		7607191	0					
ANR	7607516	Identifier	fprintf		7607191	0					
ANR	7607517	ArgumentList	stdout		7607191	1					
ANR	7607518	Argument	stdout		7607191	0					
ANR	7607519	Identifier	stdout		7607191	0					
ANR	7607520	Argument	"""    Input file\\n"""		7607191	1					
ANR	7607521	PrimaryExpression	"""    Input file\\n"""		7607191	0					
ANR	7607522	ExpressionStatement	"fprintf ( stdout , ""    Known extensions are <PBM|PGM|PPM|PNM|PAM|PGX|PNG|BMP|TIF|RAW|RAWL|TGA>\\n"" )"	143:4:5433:5541	7607191	48	True				
ANR	7607523	CallExpression	"fprintf ( stdout , ""    Known extensions are <PBM|PGM|PPM|PNM|PAM|PGX|PNG|BMP|TIF|RAW|RAWL|TGA>\\n"" )"		7607191	0					
ANR	7607524	Callee	fprintf		7607191	0					
ANR	7607525	Identifier	fprintf		7607191	0					
ANR	7607526	ArgumentList	stdout		7607191	1					
ANR	7607527	Argument	stdout		7607191	0					
ANR	7607528	Identifier	stdout		7607191	0					
ANR	7607529	Argument	"""    Known extensions are <PBM|PGM|PPM|PNM|PAM|PGX|PNG|BMP|TIF|RAW|RAWL|TGA>\\n"""		7607191	1					
ANR	7607530	PrimaryExpression	"""    Known extensions are <PBM|PGM|PPM|PNM|PAM|PGX|PNG|BMP|TIF|RAW|RAWL|TGA>\\n"""		7607191	0					
ANR	7607531	ExpressionStatement	"fprintf ( stdout , ""    If used, '-o <file>' must be provided\\n"" )"	145:4:5547:5609	7607191	49	True				
ANR	7607532	CallExpression	"fprintf ( stdout , ""    If used, '-o <file>' must be provided\\n"" )"		7607191	0					
ANR	7607533	Callee	fprintf		7607191	0					
ANR	7607534	Identifier	fprintf		7607191	0					
ANR	7607535	ArgumentList	stdout		7607191	1					
ANR	7607536	Argument	stdout		7607191	0					
ANR	7607537	Identifier	stdout		7607191	0					
ANR	7607538	Argument	"""    If used, '-o <file>' must be provided\\n"""		7607191	1					
ANR	7607539	PrimaryExpression	"""    If used, '-o <file>' must be provided\\n"""		7607191	0					
ANR	7607540	ExpressionStatement	"fprintf ( stdout , ""-o <compressed file>\\n"" )"	146:4:5615:5656	7607191	50	True				
ANR	7607541	CallExpression	"fprintf ( stdout , ""-o <compressed file>\\n"" )"		7607191	0					
ANR	7607542	Callee	fprintf		7607191	0					
ANR	7607543	Identifier	fprintf		7607191	0					
ANR	7607544	ArgumentList	stdout		7607191	1					
ANR	7607545	Argument	stdout		7607191	0					
ANR	7607546	Identifier	stdout		7607191	0					
ANR	7607547	Argument	"""-o <compressed file>\\n"""		7607191	1					
ANR	7607548	PrimaryExpression	"""-o <compressed file>\\n"""		7607191	0					
ANR	7607549	ExpressionStatement	"fprintf ( stdout , ""    Output file (accepted extensions are j2k or jp2).\\n"" )"	147:4:5662:5736	7607191	51	True				
ANR	7607550	CallExpression	"fprintf ( stdout , ""    Output file (accepted extensions are j2k or jp2).\\n"" )"		7607191	0					
ANR	7607551	Callee	fprintf		7607191	0					
ANR	7607552	Identifier	fprintf		7607191	0					
ANR	7607553	ArgumentList	stdout		7607191	1					
ANR	7607554	Argument	stdout		7607191	0					
ANR	7607555	Identifier	stdout		7607191	0					
ANR	7607556	Argument	"""    Output file (accepted extensions are j2k or jp2).\\n"""		7607191	1					
ANR	7607557	PrimaryExpression	"""    Output file (accepted extensions are j2k or jp2).\\n"""		7607191	0					
ANR	7607558	ExpressionStatement	"fprintf ( stdout , ""-ImgDir <dir>\\n"" )"	148:4:5742:5776	7607191	52	True				
ANR	7607559	CallExpression	"fprintf ( stdout , ""-ImgDir <dir>\\n"" )"		7607191	0					
ANR	7607560	Callee	fprintf		7607191	0					
ANR	7607561	Identifier	fprintf		7607191	0					
ANR	7607562	ArgumentList	stdout		7607191	1					
ANR	7607563	Argument	stdout		7607191	0					
ANR	7607564	Identifier	stdout		7607191	0					
ANR	7607565	Argument	"""-ImgDir <dir>\\n"""		7607191	1					
ANR	7607566	PrimaryExpression	"""-ImgDir <dir>\\n"""		7607191	0					
ANR	7607567	ExpressionStatement	"fprintf ( stdout , ""    Image file Directory path (example ../Images) \\n"" )"	149:4:5782:5853	7607191	53	True				
ANR	7607568	CallExpression	"fprintf ( stdout , ""    Image file Directory path (example ../Images) \\n"" )"		7607191	0					
ANR	7607569	Callee	fprintf		7607191	0					
ANR	7607570	Identifier	fprintf		7607191	0					
ANR	7607571	ArgumentList	stdout		7607191	1					
ANR	7607572	Argument	stdout		7607191	0					
ANR	7607573	Identifier	stdout		7607191	0					
ANR	7607574	Argument	"""    Image file Directory path (example ../Images) \\n"""		7607191	1					
ANR	7607575	PrimaryExpression	"""    Image file Directory path (example ../Images) \\n"""		7607191	0					
ANR	7607576	ExpressionStatement	"fprintf ( stdout , ""    When using this option -OutFor must be used\\n"" )"	150:4:5859:5927	7607191	54	True				
ANR	7607577	CallExpression	"fprintf ( stdout , ""    When using this option -OutFor must be used\\n"" )"		7607191	0					
ANR	7607578	Callee	fprintf		7607191	0					
ANR	7607579	Identifier	fprintf		7607191	0					
ANR	7607580	ArgumentList	stdout		7607191	1					
ANR	7607581	Argument	stdout		7607191	0					
ANR	7607582	Identifier	stdout		7607191	0					
ANR	7607583	Argument	"""    When using this option -OutFor must be used\\n"""		7607191	1					
ANR	7607584	PrimaryExpression	"""    When using this option -OutFor must be used\\n"""		7607191	0					
ANR	7607585	ExpressionStatement	"fprintf ( stdout , ""-OutFor <J2K|J2C|JP2>\\n"" )"	151:4:5933:5975	7607191	55	True				
ANR	7607586	CallExpression	"fprintf ( stdout , ""-OutFor <J2K|J2C|JP2>\\n"" )"		7607191	0					
ANR	7607587	Callee	fprintf		7607191	0					
ANR	7607588	Identifier	fprintf		7607191	0					
ANR	7607589	ArgumentList	stdout		7607191	1					
ANR	7607590	Argument	stdout		7607191	0					
ANR	7607591	Identifier	stdout		7607191	0					
ANR	7607592	Argument	"""-OutFor <J2K|J2C|JP2>\\n"""		7607191	1					
ANR	7607593	PrimaryExpression	"""-OutFor <J2K|J2C|JP2>\\n"""		7607191	0					
ANR	7607594	ExpressionStatement	"fprintf ( stdout , ""    Output format for compressed files.\\n"" )"	152:4:5981:6041	7607191	56	True				
ANR	7607595	CallExpression	"fprintf ( stdout , ""    Output format for compressed files.\\n"" )"		7607191	0					
ANR	7607596	Callee	fprintf		7607191	0					
ANR	7607597	Identifier	fprintf		7607191	0					
ANR	7607598	ArgumentList	stdout		7607191	1					
ANR	7607599	Argument	stdout		7607191	0					
ANR	7607600	Identifier	stdout		7607191	0					
ANR	7607601	Argument	"""    Output format for compressed files.\\n"""		7607191	1					
ANR	7607602	PrimaryExpression	"""    Output format for compressed files.\\n"""		7607191	0					
ANR	7607603	ExpressionStatement	"fprintf ( stdout , ""    Required only if -ImgDir is used\\n"" )"	153:4:6047:6104	7607191	57	True				
ANR	7607604	CallExpression	"fprintf ( stdout , ""    Required only if -ImgDir is used\\n"" )"		7607191	0					
ANR	7607605	Callee	fprintf		7607191	0					
ANR	7607606	Identifier	fprintf		7607191	0					
ANR	7607607	ArgumentList	stdout		7607191	1					
ANR	7607608	Argument	stdout		7607191	0					
ANR	7607609	Identifier	stdout		7607191	0					
ANR	7607610	Argument	"""    Required only if -ImgDir is used\\n"""		7607191	1					
ANR	7607611	PrimaryExpression	"""    Required only if -ImgDir is used\\n"""		7607191	0					
ANR	7607612	ExpressionStatement	"fprintf ( stdout , ""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"" )"	154:4:6110:6215	7607191	58	True				
ANR	7607613	CallExpression	"fprintf ( stdout , ""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"" )"		7607191	0					
ANR	7607614	Callee	fprintf		7607191	0					
ANR	7607615	Identifier	fprintf		7607191	0					
ANR	7607616	ArgumentList	stdout		7607191	1					
ANR	7607617	Argument	stdout		7607191	0					
ANR	7607618	Identifier	stdout		7607191	0					
ANR	7607619	Argument	"""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"""		7607191	1					
ANR	7607620	PrimaryExpression	"""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"""		7607191	0					
ANR	7607621	ExpressionStatement	"fprintf ( stdout , ""    Characteristics of the raw input image\\n"" )"	156:4:6221:6284	7607191	59	True				
ANR	7607622	CallExpression	"fprintf ( stdout , ""    Characteristics of the raw input image\\n"" )"		7607191	0					
ANR	7607623	Callee	fprintf		7607191	0					
ANR	7607624	Identifier	fprintf		7607191	0					
ANR	7607625	ArgumentList	stdout		7607191	1					
ANR	7607626	Argument	stdout		7607191	0					
ANR	7607627	Identifier	stdout		7607191	0					
ANR	7607628	Argument	"""    Characteristics of the raw input image\\n"""		7607191	1					
ANR	7607629	PrimaryExpression	"""    Characteristics of the raw input image\\n"""		7607191	0					
ANR	7607630	ExpressionStatement	"fprintf ( stdout , ""    If subsampling is omitted, 1x1 is assumed for all components\\n"" )"	157:4:6290:6387	7607191	60	True				
ANR	7607631	CallExpression	"fprintf ( stdout , ""    If subsampling is omitted, 1x1 is assumed for all components\\n"" )"		7607191	0					
ANR	7607632	Callee	fprintf		7607191	0					
ANR	7607633	Identifier	fprintf		7607191	0					
ANR	7607634	ArgumentList	stdout		7607191	1					
ANR	7607635	Argument	stdout		7607191	0					
ANR	7607636	Identifier	stdout		7607191	0					
ANR	7607637	Argument	"""    If subsampling is omitted, 1x1 is assumed for all components\\n"""		7607191	1					
ANR	7607638	PrimaryExpression	"""    If subsampling is omitted, 1x1 is assumed for all components\\n"""		7607191	0					
ANR	7607639	ExpressionStatement	"fprintf ( stdout , ""      Example: -F 512,512,3,8,u@1x1:2x2:2x2\\n"" )"	159:4:6393:6457	7607191	61	True				
ANR	7607640	CallExpression	"fprintf ( stdout , ""      Example: -F 512,512,3,8,u@1x1:2x2:2x2\\n"" )"		7607191	0					
ANR	7607641	Callee	fprintf		7607191	0					
ANR	7607642	Identifier	fprintf		7607191	0					
ANR	7607643	ArgumentList	stdout		7607191	1					
ANR	7607644	Argument	stdout		7607191	0					
ANR	7607645	Identifier	stdout		7607191	0					
ANR	7607646	Argument	"""      Example: -F 512,512,3,8,u@1x1:2x2:2x2\\n"""		7607191	1					
ANR	7607647	PrimaryExpression	"""      Example: -F 512,512,3,8,u@1x1:2x2:2x2\\n"""		7607191	0					
ANR	7607648	ExpressionStatement	"fprintf ( stdout , ""               for raw 512x512 image with 4:2:0 subsampling\\n"" )"	160:4:6463:6555	7607191	62	True				
ANR	7607649	CallExpression	"fprintf ( stdout , ""               for raw 512x512 image with 4:2:0 subsampling\\n"" )"		7607191	0					
ANR	7607650	Callee	fprintf		7607191	0					
ANR	7607651	Identifier	fprintf		7607191	0					
ANR	7607652	ArgumentList	stdout		7607191	1					
ANR	7607653	Argument	stdout		7607191	0					
ANR	7607654	Identifier	stdout		7607191	0					
ANR	7607655	Argument	"""               for raw 512x512 image with 4:2:0 subsampling\\n"""		7607191	1					
ANR	7607656	PrimaryExpression	"""               for raw 512x512 image with 4:2:0 subsampling\\n"""		7607191	0					
ANR	7607657	ExpressionStatement	"fprintf ( stdout , ""    Required only if RAW or RAWL input file is provided.\\n"" )"	162:4:6561:6638	7607191	63	True				
ANR	7607658	CallExpression	"fprintf ( stdout , ""    Required only if RAW or RAWL input file is provided.\\n"" )"		7607191	0					
ANR	7607659	Callee	fprintf		7607191	0					
ANR	7607660	Identifier	fprintf		7607191	0					
ANR	7607661	ArgumentList	stdout		7607191	1					
ANR	7607662	Argument	stdout		7607191	0					
ANR	7607663	Identifier	stdout		7607191	0					
ANR	7607664	Argument	"""    Required only if RAW or RAWL input file is provided.\\n"""		7607191	1					
ANR	7607665	PrimaryExpression	"""    Required only if RAW or RAWL input file is provided.\\n"""		7607191	0					
ANR	7607666	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	163:4:6644:6665	7607191	64	True				
ANR	7607667	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607668	Callee	fprintf		7607191	0					
ANR	7607669	Identifier	fprintf		7607191	0					
ANR	7607670	ArgumentList	stdout		7607191	1					
ANR	7607671	Argument	stdout		7607191	0					
ANR	7607672	Identifier	stdout		7607191	0					
ANR	7607673	Argument	"""\\n"""		7607191	1					
ANR	7607674	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607675	ExpressionStatement	"fprintf ( stdout , ""Optional Parameters:\\n"" )"	164:4:6671:6712	7607191	65	True				
ANR	7607676	CallExpression	"fprintf ( stdout , ""Optional Parameters:\\n"" )"		7607191	0					
ANR	7607677	Callee	fprintf		7607191	0					
ANR	7607678	Identifier	fprintf		7607191	0					
ANR	7607679	ArgumentList	stdout		7607191	1					
ANR	7607680	Argument	stdout		7607191	0					
ANR	7607681	Identifier	stdout		7607191	0					
ANR	7607682	Argument	"""Optional Parameters:\\n"""		7607191	1					
ANR	7607683	PrimaryExpression	"""Optional Parameters:\\n"""		7607191	0					
ANR	7607684	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	165:4:6718:6739	7607191	66	True				
ANR	7607685	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7607686	Callee	fprintf		7607191	0					
ANR	7607687	Identifier	fprintf		7607191	0					
ANR	7607688	ArgumentList	stdout		7607191	1					
ANR	7607689	Argument	stdout		7607191	0					
ANR	7607690	Identifier	stdout		7607191	0					
ANR	7607691	Argument	"""\\n"""		7607191	1					
ANR	7607692	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7607693	ExpressionStatement	"fprintf ( stdout , ""-h\\n"" )"	166:4:6745:6768	7607191	67	True				
ANR	7607694	CallExpression	"fprintf ( stdout , ""-h\\n"" )"		7607191	0					
ANR	7607695	Callee	fprintf		7607191	0					
ANR	7607696	Identifier	fprintf		7607191	0					
ANR	7607697	ArgumentList	stdout		7607191	1					
ANR	7607698	Argument	stdout		7607191	0					
ANR	7607699	Identifier	stdout		7607191	0					
ANR	7607700	Argument	"""-h\\n"""		7607191	1					
ANR	7607701	PrimaryExpression	"""-h\\n"""		7607191	0					
ANR	7607702	ExpressionStatement	"fprintf ( stdout , ""    Display the help information.\\n"" )"	167:4:6774:6828	7607191	68	True				
ANR	7607703	CallExpression	"fprintf ( stdout , ""    Display the help information.\\n"" )"		7607191	0					
ANR	7607704	Callee	fprintf		7607191	0					
ANR	7607705	Identifier	fprintf		7607191	0					
ANR	7607706	ArgumentList	stdout		7607191	1					
ANR	7607707	Argument	stdout		7607191	0					
ANR	7607708	Identifier	stdout		7607191	0					
ANR	7607709	Argument	"""    Display the help information.\\n"""		7607191	1					
ANR	7607710	PrimaryExpression	"""    Display the help information.\\n"""		7607191	0					
ANR	7607711	ExpressionStatement	"fprintf ( stdout , ""-r <compression ratio>,<compression ratio>,...\\n"" )"	168:4:6834:6901	7607191	69	True				
ANR	7607712	CallExpression	"fprintf ( stdout , ""-r <compression ratio>,<compression ratio>,...\\n"" )"		7607191	0					
ANR	7607713	Callee	fprintf		7607191	0					
ANR	7607714	Identifier	fprintf		7607191	0					
ANR	7607715	ArgumentList	stdout		7607191	1					
ANR	7607716	Argument	stdout		7607191	0					
ANR	7607717	Identifier	stdout		7607191	0					
ANR	7607718	Argument	"""-r <compression ratio>,<compression ratio>,...\\n"""		7607191	1					
ANR	7607719	PrimaryExpression	"""-r <compression ratio>,<compression ratio>,...\\n"""		7607191	0					
ANR	7607720	ExpressionStatement	"fprintf ( stdout , ""    Different compression ratios for successive layers.\\n"" )"	169:4:6907:6983	7607191	70	True				
ANR	7607721	CallExpression	"fprintf ( stdout , ""    Different compression ratios for successive layers.\\n"" )"		7607191	0					
ANR	7607722	Callee	fprintf		7607191	0					
ANR	7607723	Identifier	fprintf		7607191	0					
ANR	7607724	ArgumentList	stdout		7607191	1					
ANR	7607725	Argument	stdout		7607191	0					
ANR	7607726	Identifier	stdout		7607191	0					
ANR	7607727	Argument	"""    Different compression ratios for successive layers.\\n"""		7607191	1					
ANR	7607728	PrimaryExpression	"""    Different compression ratios for successive layers.\\n"""		7607191	0					
ANR	7607729	ExpressionStatement	"fprintf ( stdout , ""    The rate specified for each quality level is the desired\\n"" )"	170:4:6989:7082	7607191	71	True				
ANR	7607730	CallExpression	"fprintf ( stdout , ""    The rate specified for each quality level is the desired\\n"" )"		7607191	0					
ANR	7607731	Callee	fprintf		7607191	0					
ANR	7607732	Identifier	fprintf		7607191	0					
ANR	7607733	ArgumentList	stdout		7607191	1					
ANR	7607734	Argument	stdout		7607191	0					
ANR	7607735	Identifier	stdout		7607191	0					
ANR	7607736	Argument	"""    The rate specified for each quality level is the desired\\n"""		7607191	1					
ANR	7607737	PrimaryExpression	"""    The rate specified for each quality level is the desired\\n"""		7607191	0					
ANR	7607738	ExpressionStatement	"fprintf ( stdout , ""    compression factor (use 1 for lossless)\\n"" )"	172:4:7088:7152	7607191	72	True				
ANR	7607739	CallExpression	"fprintf ( stdout , ""    compression factor (use 1 for lossless)\\n"" )"		7607191	0					
ANR	7607740	Callee	fprintf		7607191	0					
ANR	7607741	Identifier	fprintf		7607191	0					
ANR	7607742	ArgumentList	stdout		7607191	1					
ANR	7607743	Argument	stdout		7607191	0					
ANR	7607744	Identifier	stdout		7607191	0					
ANR	7607745	Argument	"""    compression factor (use 1 for lossless)\\n"""		7607191	1					
ANR	7607746	PrimaryExpression	"""    compression factor (use 1 for lossless)\\n"""		7607191	0					
ANR	7607747	ExpressionStatement	"fprintf ( stdout , ""    Decreasing ratios required.\\n"" )"	173:4:7158:7210	7607191	73	True				
ANR	7607748	CallExpression	"fprintf ( stdout , ""    Decreasing ratios required.\\n"" )"		7607191	0					
ANR	7607749	Callee	fprintf		7607191	0					
ANR	7607750	Identifier	fprintf		7607191	0					
ANR	7607751	ArgumentList	stdout		7607191	1					
ANR	7607752	Argument	stdout		7607191	0					
ANR	7607753	Identifier	stdout		7607191	0					
ANR	7607754	Argument	"""    Decreasing ratios required.\\n"""		7607191	1					
ANR	7607755	PrimaryExpression	"""    Decreasing ratios required.\\n"""		7607191	0					
ANR	7607756	ExpressionStatement	"fprintf ( stdout , ""      Example: -r 20,10,1 means \\n"" )"	174:4:7216:7269	7607191	74	True				
ANR	7607757	CallExpression	"fprintf ( stdout , ""      Example: -r 20,10,1 means \\n"" )"		7607191	0					
ANR	7607758	Callee	fprintf		7607191	0					
ANR	7607759	Identifier	fprintf		7607191	0					
ANR	7607760	ArgumentList	stdout		7607191	1					
ANR	7607761	Argument	stdout		7607191	0					
ANR	7607762	Identifier	stdout		7607191	0					
ANR	7607763	Argument	"""      Example: -r 20,10,1 means \\n"""		7607191	1					
ANR	7607764	PrimaryExpression	"""      Example: -r 20,10,1 means \\n"""		7607191	0					
ANR	7607765	ExpressionStatement	"fprintf ( stdout , ""            quality layer 1: compress 20x, \\n"" )"	175:4:7275:7339	7607191	75	True				
ANR	7607766	CallExpression	"fprintf ( stdout , ""            quality layer 1: compress 20x, \\n"" )"		7607191	0					
ANR	7607767	Callee	fprintf		7607191	0					
ANR	7607768	Identifier	fprintf		7607191	0					
ANR	7607769	ArgumentList	stdout		7607191	1					
ANR	7607770	Argument	stdout		7607191	0					
ANR	7607771	Identifier	stdout		7607191	0					
ANR	7607772	Argument	"""            quality layer 1: compress 20x, \\n"""		7607191	1					
ANR	7607773	PrimaryExpression	"""            quality layer 1: compress 20x, \\n"""		7607191	0					
ANR	7607774	ExpressionStatement	"fprintf ( stdout , ""            quality layer 2: compress 10x \\n"" )"	176:4:7345:7408	7607191	76	True				
ANR	7607775	CallExpression	"fprintf ( stdout , ""            quality layer 2: compress 10x \\n"" )"		7607191	0					
ANR	7607776	Callee	fprintf		7607191	0					
ANR	7607777	Identifier	fprintf		7607191	0					
ANR	7607778	ArgumentList	stdout		7607191	1					
ANR	7607779	Argument	stdout		7607191	0					
ANR	7607780	Identifier	stdout		7607191	0					
ANR	7607781	Argument	"""            quality layer 2: compress 10x \\n"""		7607191	1					
ANR	7607782	PrimaryExpression	"""            quality layer 2: compress 10x \\n"""		7607191	0					
ANR	7607783	ExpressionStatement	"fprintf ( stdout , ""            quality layer 3: compress lossless\\n"" )"	177:4:7414:7481	7607191	77	True				
ANR	7607784	CallExpression	"fprintf ( stdout , ""            quality layer 3: compress lossless\\n"" )"		7607191	0					
ANR	7607785	Callee	fprintf		7607191	0					
ANR	7607786	Identifier	fprintf		7607191	0					
ANR	7607787	ArgumentList	stdout		7607191	1					
ANR	7607788	Argument	stdout		7607191	0					
ANR	7607789	Identifier	stdout		7607191	0					
ANR	7607790	Argument	"""            quality layer 3: compress lossless\\n"""		7607191	1					
ANR	7607791	PrimaryExpression	"""            quality layer 3: compress lossless\\n"""		7607191	0					
ANR	7607792	ExpressionStatement	"fprintf ( stdout , ""    Options -r and -q cannot be used together.\\n"" )"	178:4:7487:7554	7607191	78	True				
ANR	7607793	CallExpression	"fprintf ( stdout , ""    Options -r and -q cannot be used together.\\n"" )"		7607191	0					
ANR	7607794	Callee	fprintf		7607191	0					
ANR	7607795	Identifier	fprintf		7607191	0					
ANR	7607796	ArgumentList	stdout		7607191	1					
ANR	7607797	Argument	stdout		7607191	0					
ANR	7607798	Identifier	stdout		7607191	0					
ANR	7607799	Argument	"""    Options -r and -q cannot be used together.\\n"""		7607191	1					
ANR	7607800	PrimaryExpression	"""    Options -r and -q cannot be used together.\\n"""		7607191	0					
ANR	7607801	ExpressionStatement	"fprintf ( stdout , ""-q <psnr value>,<psnr value>,<psnr value>,...\\n"" )"	179:4:7560:7626	7607191	79	True				
ANR	7607802	CallExpression	"fprintf ( stdout , ""-q <psnr value>,<psnr value>,<psnr value>,...\\n"" )"		7607191	0					
ANR	7607803	Callee	fprintf		7607191	0					
ANR	7607804	Identifier	fprintf		7607191	0					
ANR	7607805	ArgumentList	stdout		7607191	1					
ANR	7607806	Argument	stdout		7607191	0					
ANR	7607807	Identifier	stdout		7607191	0					
ANR	7607808	Argument	"""-q <psnr value>,<psnr value>,<psnr value>,...\\n"""		7607191	1					
ANR	7607809	PrimaryExpression	"""-q <psnr value>,<psnr value>,<psnr value>,...\\n"""		7607191	0					
ANR	7607810	ExpressionStatement	"fprintf ( stdout , ""    Different psnr for successive layers (-q 30,40,50).\\n"" )"	180:4:7632:7708	7607191	80	True				
ANR	7607811	CallExpression	"fprintf ( stdout , ""    Different psnr for successive layers (-q 30,40,50).\\n"" )"		7607191	0					
ANR	7607812	Callee	fprintf		7607191	0					
ANR	7607813	Identifier	fprintf		7607191	0					
ANR	7607814	ArgumentList	stdout		7607191	1					
ANR	7607815	Argument	stdout		7607191	0					
ANR	7607816	Identifier	stdout		7607191	0					
ANR	7607817	Argument	"""    Different psnr for successive layers (-q 30,40,50).\\n"""		7607191	1					
ANR	7607818	PrimaryExpression	"""    Different psnr for successive layers (-q 30,40,50).\\n"""		7607191	0					
ANR	7607819	ExpressionStatement	"fprintf ( stdout , ""    Increasing PSNR values required, except 0 which can\\n"" )"	181:4:7714:7790	7607191	81	True				
ANR	7607820	CallExpression	"fprintf ( stdout , ""    Increasing PSNR values required, except 0 which can\\n"" )"		7607191	0					
ANR	7607821	Callee	fprintf		7607191	0					
ANR	7607822	Identifier	fprintf		7607191	0					
ANR	7607823	ArgumentList	stdout		7607191	1					
ANR	7607824	Argument	stdout		7607191	0					
ANR	7607825	Identifier	stdout		7607191	0					
ANR	7607826	Argument	"""    Increasing PSNR values required, except 0 which can\\n"""		7607191	1					
ANR	7607827	PrimaryExpression	"""    Increasing PSNR values required, except 0 which can\\n"""		7607191	0					
ANR	7607828	ExpressionStatement	"fprintf ( stdout , ""    be used for the last layer to indicate it is lossless.\\n"" )"	182:4:7796:7875	7607191	82	True				
ANR	7607829	CallExpression	"fprintf ( stdout , ""    be used for the last layer to indicate it is lossless.\\n"" )"		7607191	0					
ANR	7607830	Callee	fprintf		7607191	0					
ANR	7607831	Identifier	fprintf		7607191	0					
ANR	7607832	ArgumentList	stdout		7607191	1					
ANR	7607833	Argument	stdout		7607191	0					
ANR	7607834	Identifier	stdout		7607191	0					
ANR	7607835	Argument	"""    be used for the last layer to indicate it is lossless.\\n"""		7607191	1					
ANR	7607836	PrimaryExpression	"""    be used for the last layer to indicate it is lossless.\\n"""		7607191	0					
ANR	7607837	ExpressionStatement	"fprintf ( stdout , ""    Options -r and -q cannot be used together.\\n"" )"	183:4:7881:7948	7607191	83	True				
ANR	7607838	CallExpression	"fprintf ( stdout , ""    Options -r and -q cannot be used together.\\n"" )"		7607191	0					
ANR	7607839	Callee	fprintf		7607191	0					
ANR	7607840	Identifier	fprintf		7607191	0					
ANR	7607841	ArgumentList	stdout		7607191	1					
ANR	7607842	Argument	stdout		7607191	0					
ANR	7607843	Identifier	stdout		7607191	0					
ANR	7607844	Argument	"""    Options -r and -q cannot be used together.\\n"""		7607191	1					
ANR	7607845	PrimaryExpression	"""    Options -r and -q cannot be used together.\\n"""		7607191	0					
ANR	7607846	ExpressionStatement	"fprintf ( stdout , ""-n <number of resolutions>\\n"" )"	184:4:7954:8001	7607191	84	True				
ANR	7607847	CallExpression	"fprintf ( stdout , ""-n <number of resolutions>\\n"" )"		7607191	0					
ANR	7607848	Callee	fprintf		7607191	0					
ANR	7607849	Identifier	fprintf		7607191	0					
ANR	7607850	ArgumentList	stdout		7607191	1					
ANR	7607851	Argument	stdout		7607191	0					
ANR	7607852	Identifier	stdout		7607191	0					
ANR	7607853	Argument	"""-n <number of resolutions>\\n"""		7607191	1					
ANR	7607854	PrimaryExpression	"""-n <number of resolutions>\\n"""		7607191	0					
ANR	7607855	ExpressionStatement	"fprintf ( stdout , ""    Number of resolutions.\\n"" )"	185:4:8007:8054	7607191	85	True				
ANR	7607856	CallExpression	"fprintf ( stdout , ""    Number of resolutions.\\n"" )"		7607191	0					
ANR	7607857	Callee	fprintf		7607191	0					
ANR	7607858	Identifier	fprintf		7607191	0					
ANR	7607859	ArgumentList	stdout		7607191	1					
ANR	7607860	Argument	stdout		7607191	0					
ANR	7607861	Identifier	stdout		7607191	0					
ANR	7607862	Argument	"""    Number of resolutions.\\n"""		7607191	1					
ANR	7607863	PrimaryExpression	"""    Number of resolutions.\\n"""		7607191	0					
ANR	7607864	ExpressionStatement	"fprintf ( stdout , ""    It corresponds to the number of DWT decompositions +1. \\n"" )"	186:4:8060:8152	7607191	86	True				
ANR	7607865	CallExpression	"fprintf ( stdout , ""    It corresponds to the number of DWT decompositions +1. \\n"" )"		7607191	0					
ANR	7607866	Callee	fprintf		7607191	0					
ANR	7607867	Identifier	fprintf		7607191	0					
ANR	7607868	ArgumentList	stdout		7607191	1					
ANR	7607869	Argument	stdout		7607191	0					
ANR	7607870	Identifier	stdout		7607191	0					
ANR	7607871	Argument	"""    It corresponds to the number of DWT decompositions +1. \\n"""		7607191	1					
ANR	7607872	PrimaryExpression	"""    It corresponds to the number of DWT decompositions +1. \\n"""		7607191	0					
ANR	7607873	ExpressionStatement	"fprintf ( stdout , ""    Default: 6.\\n"" )"	188:4:8158:8194	7607191	87	True				
ANR	7607874	CallExpression	"fprintf ( stdout , ""    Default: 6.\\n"" )"		7607191	0					
ANR	7607875	Callee	fprintf		7607191	0					
ANR	7607876	Identifier	fprintf		7607191	0					
ANR	7607877	ArgumentList	stdout		7607191	1					
ANR	7607878	Argument	stdout		7607191	0					
ANR	7607879	Identifier	stdout		7607191	0					
ANR	7607880	Argument	"""    Default: 6.\\n"""		7607191	1					
ANR	7607881	PrimaryExpression	"""    Default: 6.\\n"""		7607191	0					
ANR	7607882	ExpressionStatement	"fprintf ( stdout , ""-b <cblk width>,<cblk height>\\n"" )"	189:4:8200:8250	7607191	88	True				
ANR	7607883	CallExpression	"fprintf ( stdout , ""-b <cblk width>,<cblk height>\\n"" )"		7607191	0					
ANR	7607884	Callee	fprintf		7607191	0					
ANR	7607885	Identifier	fprintf		7607191	0					
ANR	7607886	ArgumentList	stdout		7607191	1					
ANR	7607887	Argument	stdout		7607191	0					
ANR	7607888	Identifier	stdout		7607191	0					
ANR	7607889	Argument	"""-b <cblk width>,<cblk height>\\n"""		7607191	1					
ANR	7607890	PrimaryExpression	"""-b <cblk width>,<cblk height>\\n"""		7607191	0					
ANR	7607891	ExpressionStatement	"fprintf ( stdout , ""    Code-block size. The dimension must respect the constraint \\n"" )"	190:4:8256:8352	7607191	89	True				
ANR	7607892	CallExpression	"fprintf ( stdout , ""    Code-block size. The dimension must respect the constraint \\n"" )"		7607191	0					
ANR	7607893	Callee	fprintf		7607191	0					
ANR	7607894	Identifier	fprintf		7607191	0					
ANR	7607895	ArgumentList	stdout		7607191	1					
ANR	7607896	Argument	stdout		7607191	0					
ANR	7607897	Identifier	stdout		7607191	0					
ANR	7607898	Argument	"""    Code-block size. The dimension must respect the constraint \\n"""		7607191	1					
ANR	7607899	PrimaryExpression	"""    Code-block size. The dimension must respect the constraint \\n"""		7607191	0					
ANR	7607900	ExpressionStatement	"fprintf ( stdout , ""    defined in the JPEG-2000 standard (no dimension smaller than 4 \\n"" )"	192:4:8358:8458	7607191	90	True				
ANR	7607901	CallExpression	"fprintf ( stdout , ""    defined in the JPEG-2000 standard (no dimension smaller than 4 \\n"" )"		7607191	0					
ANR	7607902	Callee	fprintf		7607191	0					
ANR	7607903	Identifier	fprintf		7607191	0					
ANR	7607904	ArgumentList	stdout		7607191	1					
ANR	7607905	Argument	stdout		7607191	0					
ANR	7607906	Identifier	stdout		7607191	0					
ANR	7607907	Argument	"""    defined in the JPEG-2000 standard (no dimension smaller than 4 \\n"""		7607191	1					
ANR	7607908	PrimaryExpression	"""    defined in the JPEG-2000 standard (no dimension smaller than 4 \\n"""		7607191	0					
ANR	7607909	ExpressionStatement	"fprintf ( stdout , ""    or greater than 1024, no code-block with more than 4096 coefficients).\\n"" )"	194:4:8464:8571	7607191	91	True				
ANR	7607910	CallExpression	"fprintf ( stdout , ""    or greater than 1024, no code-block with more than 4096 coefficients).\\n"" )"		7607191	0					
ANR	7607911	Callee	fprintf		7607191	0					
ANR	7607912	Identifier	fprintf		7607191	0					
ANR	7607913	ArgumentList	stdout		7607191	1					
ANR	7607914	Argument	stdout		7607191	0					
ANR	7607915	Identifier	stdout		7607191	0					
ANR	7607916	Argument	"""    or greater than 1024, no code-block with more than 4096 coefficients).\\n"""		7607191	1					
ANR	7607917	PrimaryExpression	"""    or greater than 1024, no code-block with more than 4096 coefficients).\\n"""		7607191	0					
ANR	7607918	ExpressionStatement	"fprintf ( stdout , ""    The maximum value authorized is 64x64. \\n"" )"	196:4:8577:8641	7607191	92	True				
ANR	7607919	CallExpression	"fprintf ( stdout , ""    The maximum value authorized is 64x64. \\n"" )"		7607191	0					
ANR	7607920	Callee	fprintf		7607191	0					
ANR	7607921	Identifier	fprintf		7607191	0					
ANR	7607922	ArgumentList	stdout		7607191	1					
ANR	7607923	Argument	stdout		7607191	0					
ANR	7607924	Identifier	stdout		7607191	0					
ANR	7607925	Argument	"""    The maximum value authorized is 64x64. \\n"""		7607191	1					
ANR	7607926	PrimaryExpression	"""    The maximum value authorized is 64x64. \\n"""		7607191	0					
ANR	7607927	ExpressionStatement	"fprintf ( stdout , ""    Default: 64x64.\\n"" )"	197:4:8647:8687	7607191	93	True				
ANR	7607928	CallExpression	"fprintf ( stdout , ""    Default: 64x64.\\n"" )"		7607191	0					
ANR	7607929	Callee	fprintf		7607191	0					
ANR	7607930	Identifier	fprintf		7607191	0					
ANR	7607931	ArgumentList	stdout		7607191	1					
ANR	7607932	Argument	stdout		7607191	0					
ANR	7607933	Identifier	stdout		7607191	0					
ANR	7607934	Argument	"""    Default: 64x64.\\n"""		7607191	1					
ANR	7607935	PrimaryExpression	"""    Default: 64x64.\\n"""		7607191	0					
ANR	7607936	ExpressionStatement	"fprintf ( stdout , ""-c [<prec width>,<prec height>],[<prec width>,<prec height>],...\\n"" )"	198:4:8693:8790	7607191	94	True				
ANR	7607937	CallExpression	"fprintf ( stdout , ""-c [<prec width>,<prec height>],[<prec width>,<prec height>],...\\n"" )"		7607191	0					
ANR	7607938	Callee	fprintf		7607191	0					
ANR	7607939	Identifier	fprintf		7607191	0					
ANR	7607940	ArgumentList	stdout		7607191	1					
ANR	7607941	Argument	stdout		7607191	0					
ANR	7607942	Identifier	stdout		7607191	0					
ANR	7607943	Argument	"""-c [<prec width>,<prec height>],[<prec width>,<prec height>],...\\n"""		7607191	1					
ANR	7607944	PrimaryExpression	"""-c [<prec width>,<prec height>],[<prec width>,<prec height>],...\\n"""		7607191	0					
ANR	7607945	ExpressionStatement	"fprintf ( stdout , ""    Precinct size. Values specified must be power of 2. \\n"" )"	200:4:8796:8873	7607191	95	True				
ANR	7607946	CallExpression	"fprintf ( stdout , ""    Precinct size. Values specified must be power of 2. \\n"" )"		7607191	0					
ANR	7607947	Callee	fprintf		7607191	0					
ANR	7607948	Identifier	fprintf		7607191	0					
ANR	7607949	ArgumentList	stdout		7607191	1					
ANR	7607950	Argument	stdout		7607191	0					
ANR	7607951	Identifier	stdout		7607191	0					
ANR	7607952	Argument	"""    Precinct size. Values specified must be power of 2. \\n"""		7607191	1					
ANR	7607953	PrimaryExpression	"""    Precinct size. Values specified must be power of 2. \\n"""		7607191	0					
ANR	7607954	ExpressionStatement	"fprintf ( stdout , ""    Multiple records may be supplied, in which case the first record refers\\n"" )"	201:4:8879:8987	7607191	96	True				
ANR	7607955	CallExpression	"fprintf ( stdout , ""    Multiple records may be supplied, in which case the first record refers\\n"" )"		7607191	0					
ANR	7607956	Callee	fprintf		7607191	0					
ANR	7607957	Identifier	fprintf		7607191	0					
ANR	7607958	ArgumentList	stdout		7607191	1					
ANR	7607959	Argument	stdout		7607191	0					
ANR	7607960	Identifier	stdout		7607191	0					
ANR	7607961	Argument	"""    Multiple records may be supplied, in which case the first record refers\\n"""		7607191	1					
ANR	7607962	PrimaryExpression	"""    Multiple records may be supplied, in which case the first record refers\\n"""		7607191	0					
ANR	7607963	ExpressionStatement	"fprintf ( stdout , ""    to the highest resolution level and subsequent records to lower \\n"" )"	203:4:8993:9094	7607191	97	True				
ANR	7607964	CallExpression	"fprintf ( stdout , ""    to the highest resolution level and subsequent records to lower \\n"" )"		7607191	0					
ANR	7607965	Callee	fprintf		7607191	0					
ANR	7607966	Identifier	fprintf		7607191	0					
ANR	7607967	ArgumentList	stdout		7607191	1					
ANR	7607968	Argument	stdout		7607191	0					
ANR	7607969	Identifier	stdout		7607191	0					
ANR	7607970	Argument	"""    to the highest resolution level and subsequent records to lower \\n"""		7607191	1					
ANR	7607971	PrimaryExpression	"""    to the highest resolution level and subsequent records to lower \\n"""		7607191	0					
ANR	7607972	ExpressionStatement	"fprintf ( stdout , ""    resolution levels. The last specified record is right-shifted for each \\n"" )"	205:4:9100:9208	7607191	98	True				
ANR	7607973	CallExpression	"fprintf ( stdout , ""    resolution levels. The last specified record is right-shifted for each \\n"" )"		7607191	0					
ANR	7607974	Callee	fprintf		7607191	0					
ANR	7607975	Identifier	fprintf		7607191	0					
ANR	7607976	ArgumentList	stdout		7607191	1					
ANR	7607977	Argument	stdout		7607191	0					
ANR	7607978	Identifier	stdout		7607191	0					
ANR	7607979	Argument	"""    resolution levels. The last specified record is right-shifted for each \\n"""		7607191	1					
ANR	7607980	PrimaryExpression	"""    resolution levels. The last specified record is right-shifted for each \\n"""		7607191	0					
ANR	7607981	ExpressionStatement	"fprintf ( stdout , ""    remaining lower resolution levels.\\n"" )"	207:4:9214:9273	7607191	99	True				
ANR	7607982	CallExpression	"fprintf ( stdout , ""    remaining lower resolution levels.\\n"" )"		7607191	0					
ANR	7607983	Callee	fprintf		7607191	0					
ANR	7607984	Identifier	fprintf		7607191	0					
ANR	7607985	ArgumentList	stdout		7607191	1					
ANR	7607986	Argument	stdout		7607191	0					
ANR	7607987	Identifier	stdout		7607191	0					
ANR	7607988	Argument	"""    remaining lower resolution levels.\\n"""		7607191	1					
ANR	7607989	PrimaryExpression	"""    remaining lower resolution levels.\\n"""		7607191	0					
ANR	7607990	ExpressionStatement	"fprintf ( stdout , ""    Default: 215x215 at each resolution.\\n"" )"	208:4:9279:9340	7607191	100	True				
ANR	7607991	CallExpression	"fprintf ( stdout , ""    Default: 215x215 at each resolution.\\n"" )"		7607191	0					
ANR	7607992	Callee	fprintf		7607191	0					
ANR	7607993	Identifier	fprintf		7607191	0					
ANR	7607994	ArgumentList	stdout		7607191	1					
ANR	7607995	Argument	stdout		7607191	0					
ANR	7607996	Identifier	stdout		7607191	0					
ANR	7607997	Argument	"""    Default: 215x215 at each resolution.\\n"""		7607191	1					
ANR	7607998	PrimaryExpression	"""    Default: 215x215 at each resolution.\\n"""		7607191	0					
ANR	7607999	ExpressionStatement	"fprintf ( stdout , ""-t <tile width>,<tile height>\\n"" )"	209:4:9346:9396	7607191	101	True				
ANR	7608000	CallExpression	"fprintf ( stdout , ""-t <tile width>,<tile height>\\n"" )"		7607191	0					
ANR	7608001	Callee	fprintf		7607191	0					
ANR	7608002	Identifier	fprintf		7607191	0					
ANR	7608003	ArgumentList	stdout		7607191	1					
ANR	7608004	Argument	stdout		7607191	0					
ANR	7608005	Identifier	stdout		7607191	0					
ANR	7608006	Argument	"""-t <tile width>,<tile height>\\n"""		7607191	1					
ANR	7608007	PrimaryExpression	"""-t <tile width>,<tile height>\\n"""		7607191	0					
ANR	7608008	ExpressionStatement	"fprintf ( stdout , ""    Tile size.\\n"" )"	210:4:9402:9437	7607191	102	True				
ANR	7608009	CallExpression	"fprintf ( stdout , ""    Tile size.\\n"" )"		7607191	0					
ANR	7608010	Callee	fprintf		7607191	0					
ANR	7608011	Identifier	fprintf		7607191	0					
ANR	7608012	ArgumentList	stdout		7607191	1					
ANR	7608013	Argument	stdout		7607191	0					
ANR	7608014	Identifier	stdout		7607191	0					
ANR	7608015	Argument	"""    Tile size.\\n"""		7607191	1					
ANR	7608016	PrimaryExpression	"""    Tile size.\\n"""		7607191	0					
ANR	7608017	ExpressionStatement	"fprintf ( stdout , ""    Default: the dimension of the whole image, thus only one tile.\\n"" )"	211:4:9443:9542	7607191	103	True				
ANR	7608018	CallExpression	"fprintf ( stdout , ""    Default: the dimension of the whole image, thus only one tile.\\n"" )"		7607191	0					
ANR	7608019	Callee	fprintf		7607191	0					
ANR	7608020	Identifier	fprintf		7607191	0					
ANR	7608021	ArgumentList	stdout		7607191	1					
ANR	7608022	Argument	stdout		7607191	0					
ANR	7608023	Identifier	stdout		7607191	0					
ANR	7608024	Argument	"""    Default: the dimension of the whole image, thus only one tile.\\n"""		7607191	1					
ANR	7608025	PrimaryExpression	"""    Default: the dimension of the whole image, thus only one tile.\\n"""		7607191	0					
ANR	7608026	ExpressionStatement	"fprintf ( stdout , ""-p <LRCP|RLCP|RPCL|PCRL|CPRL>\\n"" )"	213:4:9548:9598	7607191	104	True				
ANR	7608027	CallExpression	"fprintf ( stdout , ""-p <LRCP|RLCP|RPCL|PCRL|CPRL>\\n"" )"		7607191	0					
ANR	7608028	Callee	fprintf		7607191	0					
ANR	7608029	Identifier	fprintf		7607191	0					
ANR	7608030	ArgumentList	stdout		7607191	1					
ANR	7608031	Argument	stdout		7607191	0					
ANR	7608032	Identifier	stdout		7607191	0					
ANR	7608033	Argument	"""-p <LRCP|RLCP|RPCL|PCRL|CPRL>\\n"""		7607191	1					
ANR	7608034	PrimaryExpression	"""-p <LRCP|RLCP|RPCL|PCRL|CPRL>\\n"""		7607191	0					
ANR	7608035	ExpressionStatement	"fprintf ( stdout , ""    Progression order.\\n"" )"	214:4:9604:9647	7607191	105	True				
ANR	7608036	CallExpression	"fprintf ( stdout , ""    Progression order.\\n"" )"		7607191	0					
ANR	7608037	Callee	fprintf		7607191	0					
ANR	7608038	Identifier	fprintf		7607191	0					
ANR	7608039	ArgumentList	stdout		7607191	1					
ANR	7608040	Argument	stdout		7607191	0					
ANR	7608041	Identifier	stdout		7607191	0					
ANR	7608042	Argument	"""    Progression order.\\n"""		7607191	1					
ANR	7608043	PrimaryExpression	"""    Progression order.\\n"""		7607191	0					
ANR	7608044	ExpressionStatement	"fprintf ( stdout , ""    Default: LRCP.\\n"" )"	215:4:9653:9692	7607191	106	True				
ANR	7608045	CallExpression	"fprintf ( stdout , ""    Default: LRCP.\\n"" )"		7607191	0					
ANR	7608046	Callee	fprintf		7607191	0					
ANR	7608047	Identifier	fprintf		7607191	0					
ANR	7608048	ArgumentList	stdout		7607191	1					
ANR	7608049	Argument	stdout		7607191	0					
ANR	7608050	Identifier	stdout		7607191	0					
ANR	7608051	Argument	"""    Default: LRCP.\\n"""		7607191	1					
ANR	7608052	PrimaryExpression	"""    Default: LRCP.\\n"""		7607191	0					
ANR	7608053	ExpressionStatement	"fprintf ( stdout , ""-s  <subX,subY>\\n"" )"	216:4:9698:9734	7607191	107	True				
ANR	7608054	CallExpression	"fprintf ( stdout , ""-s  <subX,subY>\\n"" )"		7607191	0					
ANR	7608055	Callee	fprintf		7607191	0					
ANR	7608056	Identifier	fprintf		7607191	0					
ANR	7608057	ArgumentList	stdout		7607191	1					
ANR	7608058	Argument	stdout		7607191	0					
ANR	7608059	Identifier	stdout		7607191	0					
ANR	7608060	Argument	"""-s  <subX,subY>\\n"""		7607191	1					
ANR	7608061	PrimaryExpression	"""-s  <subX,subY>\\n"""		7607191	0					
ANR	7608062	ExpressionStatement	"fprintf ( stdout , ""    Subsampling factor.\\n"" )"	217:4:9740:9784	7607191	108	True				
ANR	7608063	CallExpression	"fprintf ( stdout , ""    Subsampling factor.\\n"" )"		7607191	0					
ANR	7608064	Callee	fprintf		7607191	0					
ANR	7608065	Identifier	fprintf		7607191	0					
ANR	7608066	ArgumentList	stdout		7607191	1					
ANR	7608067	Argument	stdout		7607191	0					
ANR	7608068	Identifier	stdout		7607191	0					
ANR	7608069	Argument	"""    Subsampling factor.\\n"""		7607191	1					
ANR	7608070	PrimaryExpression	"""    Subsampling factor.\\n"""		7607191	0					
ANR	7608071	ExpressionStatement	"fprintf ( stdout , ""    Subsampling bigger than 2 can produce error\\n"" )"	218:4:9790:9858	7607191	109	True				
ANR	7608072	CallExpression	"fprintf ( stdout , ""    Subsampling bigger than 2 can produce error\\n"" )"		7607191	0					
ANR	7608073	Callee	fprintf		7607191	0					
ANR	7608074	Identifier	fprintf		7607191	0					
ANR	7608075	ArgumentList	stdout		7607191	1					
ANR	7608076	Argument	stdout		7607191	0					
ANR	7608077	Identifier	stdout		7607191	0					
ANR	7608078	Argument	"""    Subsampling bigger than 2 can produce error\\n"""		7607191	1					
ANR	7608079	PrimaryExpression	"""    Subsampling bigger than 2 can produce error\\n"""		7607191	0					
ANR	7608080	ExpressionStatement	"fprintf ( stdout , ""    Default: no subsampling.\\n"" )"	219:4:9864:9913	7607191	110	True				
ANR	7608081	CallExpression	"fprintf ( stdout , ""    Default: no subsampling.\\n"" )"		7607191	0					
ANR	7608082	Callee	fprintf		7607191	0					
ANR	7608083	Identifier	fprintf		7607191	0					
ANR	7608084	ArgumentList	stdout		7607191	1					
ANR	7608085	Argument	stdout		7607191	0					
ANR	7608086	Identifier	stdout		7607191	0					
ANR	7608087	Argument	"""    Default: no subsampling.\\n"""		7607191	1					
ANR	7608088	PrimaryExpression	"""    Default: no subsampling.\\n"""		7607191	0					
ANR	7608089	ExpressionStatement	"fprintf ( stdout , ""-POC <progression order change>/<progression order change>/...\\n"" )"	220:4:9919:10014	7607191	111	True				
ANR	7608090	CallExpression	"fprintf ( stdout , ""-POC <progression order change>/<progression order change>/...\\n"" )"		7607191	0					
ANR	7608091	Callee	fprintf		7607191	0					
ANR	7608092	Identifier	fprintf		7607191	0					
ANR	7608093	ArgumentList	stdout		7607191	1					
ANR	7608094	Argument	stdout		7607191	0					
ANR	7608095	Identifier	stdout		7607191	0					
ANR	7608096	Argument	"""-POC <progression order change>/<progression order change>/...\\n"""		7607191	1					
ANR	7608097	PrimaryExpression	"""-POC <progression order change>/<progression order change>/...\\n"""		7607191	0					
ANR	7608098	ExpressionStatement	"fprintf ( stdout , ""    Progression order change.\\n"" )"	222:4:10020:10070	7607191	112	True				
ANR	7608099	CallExpression	"fprintf ( stdout , ""    Progression order change.\\n"" )"		7607191	0					
ANR	7608100	Callee	fprintf		7607191	0					
ANR	7608101	Identifier	fprintf		7607191	0					
ANR	7608102	ArgumentList	stdout		7607191	1					
ANR	7608103	Argument	stdout		7607191	0					
ANR	7608104	Identifier	stdout		7607191	0					
ANR	7608105	Argument	"""    Progression order change.\\n"""		7607191	1					
ANR	7608106	PrimaryExpression	"""    Progression order change.\\n"""		7607191	0					
ANR	7608107	ExpressionStatement	"fprintf ( stdout , ""    The syntax of a progression order change is the following:\\n"" )"	223:4:10076:10171	7607191	113	True				
ANR	7608108	CallExpression	"fprintf ( stdout , ""    The syntax of a progression order change is the following:\\n"" )"		7607191	0					
ANR	7608109	Callee	fprintf		7607191	0					
ANR	7608110	Identifier	fprintf		7607191	0					
ANR	7608111	ArgumentList	stdout		7607191	1					
ANR	7608112	Argument	stdout		7607191	0					
ANR	7608113	Identifier	stdout		7607191	0					
ANR	7608114	Argument	"""    The syntax of a progression order change is the following:\\n"""		7607191	1					
ANR	7608115	PrimaryExpression	"""    The syntax of a progression order change is the following:\\n"""		7607191	0					
ANR	7608116	ExpressionStatement	"fprintf ( stdout , ""    T<tile>=<resStart>,<compStart>,<layerEnd>,<resEnd>,<compEnd>,<progOrder>\\n"" )"	225:4:10177:10286	7607191	114	True				
ANR	7608117	CallExpression	"fprintf ( stdout , ""    T<tile>=<resStart>,<compStart>,<layerEnd>,<resEnd>,<compEnd>,<progOrder>\\n"" )"		7607191	0					
ANR	7608118	Callee	fprintf		7607191	0					
ANR	7608119	Identifier	fprintf		7607191	0					
ANR	7608120	ArgumentList	stdout		7607191	1					
ANR	7608121	Argument	stdout		7607191	0					
ANR	7608122	Identifier	stdout		7607191	0					
ANR	7608123	Argument	"""    T<tile>=<resStart>,<compStart>,<layerEnd>,<resEnd>,<compEnd>,<progOrder>\\n"""		7607191	1					
ANR	7608124	PrimaryExpression	"""    T<tile>=<resStart>,<compStart>,<layerEnd>,<resEnd>,<compEnd>,<progOrder>\\n"""		7607191	0					
ANR	7608125	ExpressionStatement	"fprintf ( stdout , ""      Example: -POC T1=0,0,1,5,3,CPRL/T1=5,0,1,6,3,CPRL\\n"" )"	227:4:10292:10368	7607191	115	True				
ANR	7608126	CallExpression	"fprintf ( stdout , ""      Example: -POC T1=0,0,1,5,3,CPRL/T1=5,0,1,6,3,CPRL\\n"" )"		7607191	0					
ANR	7608127	Callee	fprintf		7607191	0					
ANR	7608128	Identifier	fprintf		7607191	0					
ANR	7608129	ArgumentList	stdout		7607191	1					
ANR	7608130	Argument	stdout		7607191	0					
ANR	7608131	Identifier	stdout		7607191	0					
ANR	7608132	Argument	"""      Example: -POC T1=0,0,1,5,3,CPRL/T1=5,0,1,6,3,CPRL\\n"""		7607191	1					
ANR	7608133	PrimaryExpression	"""      Example: -POC T1=0,0,1,5,3,CPRL/T1=5,0,1,6,3,CPRL\\n"""		7607191	0					
ANR	7608134	ExpressionStatement	"fprintf ( stdout , ""-SOP\\n"" )"	228:4:10374:10399	7607191	116	True				
ANR	7608135	CallExpression	"fprintf ( stdout , ""-SOP\\n"" )"		7607191	0					
ANR	7608136	Callee	fprintf		7607191	0					
ANR	7608137	Identifier	fprintf		7607191	0					
ANR	7608138	ArgumentList	stdout		7607191	1					
ANR	7608139	Argument	stdout		7607191	0					
ANR	7608140	Identifier	stdout		7607191	0					
ANR	7608141	Argument	"""-SOP\\n"""		7607191	1					
ANR	7608142	PrimaryExpression	"""-SOP\\n"""		7607191	0					
ANR	7608143	ExpressionStatement	"fprintf ( stdout , ""    Write SOP marker before each packet.\\n"" )"	229:4:10405:10466	7607191	117	True				
ANR	7608144	CallExpression	"fprintf ( stdout , ""    Write SOP marker before each packet.\\n"" )"		7607191	0					
ANR	7608145	Callee	fprintf		7607191	0					
ANR	7608146	Identifier	fprintf		7607191	0					
ANR	7608147	ArgumentList	stdout		7607191	1					
ANR	7608148	Argument	stdout		7607191	0					
ANR	7608149	Identifier	stdout		7607191	0					
ANR	7608150	Argument	"""    Write SOP marker before each packet.\\n"""		7607191	1					
ANR	7608151	PrimaryExpression	"""    Write SOP marker before each packet.\\n"""		7607191	0					
ANR	7608152	ExpressionStatement	"fprintf ( stdout , ""-EPH\\n"" )"	230:4:10472:10497	7607191	118	True				
ANR	7608153	CallExpression	"fprintf ( stdout , ""-EPH\\n"" )"		7607191	0					
ANR	7608154	Callee	fprintf		7607191	0					
ANR	7608155	Identifier	fprintf		7607191	0					
ANR	7608156	ArgumentList	stdout		7607191	1					
ANR	7608157	Argument	stdout		7607191	0					
ANR	7608158	Identifier	stdout		7607191	0					
ANR	7608159	Argument	"""-EPH\\n"""		7607191	1					
ANR	7608160	PrimaryExpression	"""-EPH\\n"""		7607191	0					
ANR	7608161	ExpressionStatement	"fprintf ( stdout , ""    Write EPH marker after each header packet.\\n"" )"	231:4:10503:10570	7607191	119	True				
ANR	7608162	CallExpression	"fprintf ( stdout , ""    Write EPH marker after each header packet.\\n"" )"		7607191	0					
ANR	7608163	Callee	fprintf		7607191	0					
ANR	7608164	Identifier	fprintf		7607191	0					
ANR	7608165	ArgumentList	stdout		7607191	1					
ANR	7608166	Argument	stdout		7607191	0					
ANR	7608167	Identifier	stdout		7607191	0					
ANR	7608168	Argument	"""    Write EPH marker after each header packet.\\n"""		7607191	1					
ANR	7608169	PrimaryExpression	"""    Write EPH marker after each header packet.\\n"""		7607191	0					
ANR	7608170	ExpressionStatement	"fprintf ( stdout , ""-M <key value>\\n"" )"	232:4:10576:10611	7607191	120	True				
ANR	7608171	CallExpression	"fprintf ( stdout , ""-M <key value>\\n"" )"		7607191	0					
ANR	7608172	Callee	fprintf		7607191	0					
ANR	7608173	Identifier	fprintf		7607191	0					
ANR	7608174	ArgumentList	stdout		7607191	1					
ANR	7608175	Argument	stdout		7607191	0					
ANR	7608176	Identifier	stdout		7607191	0					
ANR	7608177	Argument	"""-M <key value>\\n"""		7607191	1					
ANR	7608178	PrimaryExpression	"""-M <key value>\\n"""		7607191	0					
ANR	7608179	ExpressionStatement	"fprintf ( stdout , ""    Mode switch.\\n"" )"	233:4:10617:10654	7607191	121	True				
ANR	7608180	CallExpression	"fprintf ( stdout , ""    Mode switch.\\n"" )"		7607191	0					
ANR	7608181	Callee	fprintf		7607191	0					
ANR	7608182	Identifier	fprintf		7607191	0					
ANR	7608183	ArgumentList	stdout		7607191	1					
ANR	7608184	Argument	stdout		7607191	0					
ANR	7608185	Identifier	stdout		7607191	0					
ANR	7608186	Argument	"""    Mode switch.\\n"""		7607191	1					
ANR	7608187	PrimaryExpression	"""    Mode switch.\\n"""		7607191	0					
ANR	7608188	ExpressionStatement	"fprintf ( stdout , ""    [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"" )"	234:4:10660:10727	7607191	122	True				
ANR	7608189	CallExpression	"fprintf ( stdout , ""    [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"" )"		7607191	0					
ANR	7608190	Callee	fprintf		7607191	0					
ANR	7608191	Identifier	fprintf		7607191	0					
ANR	7608192	ArgumentList	stdout		7607191	1					
ANR	7608193	Argument	stdout		7607191	0					
ANR	7608194	Identifier	stdout		7607191	0					
ANR	7608195	Argument	"""    [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"""		7607191	1					
ANR	7608196	PrimaryExpression	"""    [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"""		7607191	0					
ANR	7608197	ExpressionStatement	"fprintf ( stdout , ""    8=VSC 16=ERTERM(SEGTERM) 32=SEGMARK(SEGSYM)]\\n"" )"	235:4:10733:10802	7607191	123	True				
ANR	7608198	CallExpression	"fprintf ( stdout , ""    8=VSC 16=ERTERM(SEGTERM) 32=SEGMARK(SEGSYM)]\\n"" )"		7607191	0					
ANR	7608199	Callee	fprintf		7607191	0					
ANR	7608200	Identifier	fprintf		7607191	0					
ANR	7608201	ArgumentList	stdout		7607191	1					
ANR	7608202	Argument	stdout		7607191	0					
ANR	7608203	Identifier	stdout		7607191	0					
ANR	7608204	Argument	"""    8=VSC 16=ERTERM(SEGTERM) 32=SEGMARK(SEGSYM)]\\n"""		7607191	1					
ANR	7608205	PrimaryExpression	"""    8=VSC 16=ERTERM(SEGTERM) 32=SEGMARK(SEGSYM)]\\n"""		7607191	0					
ANR	7608206	ExpressionStatement	"fprintf ( stdout , ""    Indicate multiple modes by adding their values.\\n"" )"	236:4:10808:10880	7607191	124	True				
ANR	7608207	CallExpression	"fprintf ( stdout , ""    Indicate multiple modes by adding their values.\\n"" )"		7607191	0					
ANR	7608208	Callee	fprintf		7607191	0					
ANR	7608209	Identifier	fprintf		7607191	0					
ANR	7608210	ArgumentList	stdout		7607191	1					
ANR	7608211	Argument	stdout		7607191	0					
ANR	7608212	Identifier	stdout		7607191	0					
ANR	7608213	Argument	"""    Indicate multiple modes by adding their values.\\n"""		7607191	1					
ANR	7608214	PrimaryExpression	"""    Indicate multiple modes by adding their values.\\n"""		7607191	0					
ANR	7608215	ExpressionStatement	"fprintf ( stdout , ""      Example: RESTART(4) + RESET(2) + SEGMARK(32) => -M 38\\n"" )"	237:4:10886:10978	7607191	125	True				
ANR	7608216	CallExpression	"fprintf ( stdout , ""      Example: RESTART(4) + RESET(2) + SEGMARK(32) => -M 38\\n"" )"		7607191	0					
ANR	7608217	Callee	fprintf		7607191	0					
ANR	7608218	Identifier	fprintf		7607191	0					
ANR	7608219	ArgumentList	stdout		7607191	1					
ANR	7608220	Argument	stdout		7607191	0					
ANR	7608221	Identifier	stdout		7607191	0					
ANR	7608222	Argument	"""      Example: RESTART(4) + RESET(2) + SEGMARK(32) => -M 38\\n"""		7607191	1					
ANR	7608223	PrimaryExpression	"""      Example: RESTART(4) + RESET(2) + SEGMARK(32) => -M 38\\n"""		7607191	0					
ANR	7608224	ExpressionStatement	"fprintf ( stdout , ""-TP <R|L|C>\\n"" )"	239:4:10984:11016	7607191	126	True				
ANR	7608225	CallExpression	"fprintf ( stdout , ""-TP <R|L|C>\\n"" )"		7607191	0					
ANR	7608226	Callee	fprintf		7607191	0					
ANR	7608227	Identifier	fprintf		7607191	0					
ANR	7608228	ArgumentList	stdout		7607191	1					
ANR	7608229	Argument	stdout		7607191	0					
ANR	7608230	Identifier	stdout		7607191	0					
ANR	7608231	Argument	"""-TP <R|L|C>\\n"""		7607191	1					
ANR	7608232	PrimaryExpression	"""-TP <R|L|C>\\n"""		7607191	0					
ANR	7608233	ExpressionStatement	"fprintf ( stdout , ""    Divide packets of every tile into tile-parts.\\n"" )"	240:4:11022:11092	7607191	127	True				
ANR	7608234	CallExpression	"fprintf ( stdout , ""    Divide packets of every tile into tile-parts.\\n"" )"		7607191	0					
ANR	7608235	Callee	fprintf		7607191	0					
ANR	7608236	Identifier	fprintf		7607191	0					
ANR	7608237	ArgumentList	stdout		7607191	1					
ANR	7608238	Argument	stdout		7607191	0					
ANR	7608239	Identifier	stdout		7607191	0					
ANR	7608240	Argument	"""    Divide packets of every tile into tile-parts.\\n"""		7607191	1					
ANR	7608241	PrimaryExpression	"""    Divide packets of every tile into tile-parts.\\n"""		7607191	0					
ANR	7608242	ExpressionStatement	"fprintf ( stdout , ""    Division is made by grouping Resolutions (R), Layers (L)\\n"" )"	241:4:11098:11191	7607191	128	True				
ANR	7608243	CallExpression	"fprintf ( stdout , ""    Division is made by grouping Resolutions (R), Layers (L)\\n"" )"		7607191	0					
ANR	7608244	Callee	fprintf		7607191	0					
ANR	7608245	Identifier	fprintf		7607191	0					
ANR	7608246	ArgumentList	stdout		7607191	1					
ANR	7608247	Argument	stdout		7607191	0					
ANR	7608248	Identifier	stdout		7607191	0					
ANR	7608249	Argument	"""    Division is made by grouping Resolutions (R), Layers (L)\\n"""		7607191	1					
ANR	7608250	PrimaryExpression	"""    Division is made by grouping Resolutions (R), Layers (L)\\n"""		7607191	0					
ANR	7608251	ExpressionStatement	"fprintf ( stdout , ""    or Components (C).\\n"" )"	243:4:11197:11240	7607191	129	True				
ANR	7608252	CallExpression	"fprintf ( stdout , ""    or Components (C).\\n"" )"		7607191	0					
ANR	7608253	Callee	fprintf		7607191	0					
ANR	7608254	Identifier	fprintf		7607191	0					
ANR	7608255	ArgumentList	stdout		7607191	1					
ANR	7608256	Argument	stdout		7607191	0					
ANR	7608257	Identifier	stdout		7607191	0					
ANR	7608258	Argument	"""    or Components (C).\\n"""		7607191	1					
ANR	7608259	PrimaryExpression	"""    or Components (C).\\n"""		7607191	0					
ANR	7608260	ExpressionStatement	"fprintf ( stdout , ""-x  <index file>\\n"" )"	245:4:11265:11302	7607191	130	True				
ANR	7608261	CallExpression	"fprintf ( stdout , ""-x  <index file>\\n"" )"		7607191	0					
ANR	7608262	Callee	fprintf		7607191	0					
ANR	7608263	Identifier	fprintf		7607191	0					
ANR	7608264	ArgumentList	stdout		7607191	1					
ANR	7608265	Argument	stdout		7607191	0					
ANR	7608266	Identifier	stdout		7607191	0					
ANR	7608267	Argument	"""-x  <index file>\\n"""		7607191	1					
ANR	7608268	PrimaryExpression	"""-x  <index file>\\n"""		7607191	0					
ANR	7608269	ExpressionStatement	"fprintf ( stdout , ""    Create an index file.\\n"" )"	246:4:11308:11354	7607191	131	True				
ANR	7608270	CallExpression	"fprintf ( stdout , ""    Create an index file.\\n"" )"		7607191	0					
ANR	7608271	Callee	fprintf		7607191	0					
ANR	7608272	Identifier	fprintf		7607191	0					
ANR	7608273	ArgumentList	stdout		7607191	1					
ANR	7608274	Argument	stdout		7607191	0					
ANR	7608275	Identifier	stdout		7607191	0					
ANR	7608276	Argument	"""    Create an index file.\\n"""		7607191	1					
ANR	7608277	PrimaryExpression	"""    Create an index file.\\n"""		7607191	0					
ANR	7608278	ExpressionStatement	"fprintf ( stdout , ""-ROI c=<component index>,U=<upshifting value>\\n"" )"	248:4:11383:11449	7607191	132	True				
ANR	7608279	CallExpression	"fprintf ( stdout , ""-ROI c=<component index>,U=<upshifting value>\\n"" )"		7607191	0					
ANR	7608280	Callee	fprintf		7607191	0					
ANR	7608281	Identifier	fprintf		7607191	0					
ANR	7608282	ArgumentList	stdout		7607191	1					
ANR	7608283	Argument	stdout		7607191	0					
ANR	7608284	Identifier	stdout		7607191	0					
ANR	7608285	Argument	"""-ROI c=<component index>,U=<upshifting value>\\n"""		7607191	1					
ANR	7608286	PrimaryExpression	"""-ROI c=<component index>,U=<upshifting value>\\n"""		7607191	0					
ANR	7608287	ExpressionStatement	"fprintf ( stdout , ""    Quantization indices upshifted for a component. \\n"" )"	249:4:11455:11528	7607191	133	True				
ANR	7608288	CallExpression	"fprintf ( stdout , ""    Quantization indices upshifted for a component. \\n"" )"		7607191	0					
ANR	7608289	Callee	fprintf		7607191	0					
ANR	7608290	Identifier	fprintf		7607191	0					
ANR	7608291	ArgumentList	stdout		7607191	1					
ANR	7608292	Argument	stdout		7607191	0					
ANR	7608293	Identifier	stdout		7607191	0					
ANR	7608294	Argument	"""    Quantization indices upshifted for a component. \\n"""		7607191	1					
ANR	7608295	PrimaryExpression	"""    Quantization indices upshifted for a component. \\n"""		7607191	0					
ANR	7608296	ExpressionStatement	"fprintf ( stdout , ""    Warning: This option does not implement the usual ROI (Region of Interest).\\n"" )"	250:4:11534:11646	7607191	134	True				
ANR	7608297	CallExpression	"fprintf ( stdout , ""    Warning: This option does not implement the usual ROI (Region of Interest).\\n"" )"		7607191	0					
ANR	7608298	Callee	fprintf		7607191	0					
ANR	7608299	Identifier	fprintf		7607191	0					
ANR	7608300	ArgumentList	stdout		7607191	1					
ANR	7608301	Argument	stdout		7607191	0					
ANR	7608302	Identifier	stdout		7607191	0					
ANR	7608303	Argument	"""    Warning: This option does not implement the usual ROI (Region of Interest).\\n"""		7607191	1					
ANR	7608304	PrimaryExpression	"""    Warning: This option does not implement the usual ROI (Region of Interest).\\n"""		7607191	0					
ANR	7608305	ExpressionStatement	"fprintf ( stdout , ""    It should be understood as a 'Component of Interest'. It offers the \\n"" )"	252:4:11652:11757	7607191	135	True				
ANR	7608306	CallExpression	"fprintf ( stdout , ""    It should be understood as a 'Component of Interest'. It offers the \\n"" )"		7607191	0					
ANR	7608307	Callee	fprintf		7607191	0					
ANR	7608308	Identifier	fprintf		7607191	0					
ANR	7608309	ArgumentList	stdout		7607191	1					
ANR	7608310	Argument	stdout		7607191	0					
ANR	7608311	Identifier	stdout		7607191	0					
ANR	7608312	Argument	"""    It should be understood as a 'Component of Interest'. It offers the \\n"""		7607191	1					
ANR	7608313	PrimaryExpression	"""    It should be understood as a 'Component of Interest'. It offers the \\n"""		7607191	0					
ANR	7608314	ExpressionStatement	"fprintf ( stdout , ""    possibility to upshift the value of a component during quantization step.\\n"" )"	254:4:11763:11873	7607191	136	True				
ANR	7608315	CallExpression	"fprintf ( stdout , ""    possibility to upshift the value of a component during quantization step.\\n"" )"		7607191	0					
ANR	7608316	Callee	fprintf		7607191	0					
ANR	7608317	Identifier	fprintf		7607191	0					
ANR	7608318	ArgumentList	stdout		7607191	1					
ANR	7608319	Argument	stdout		7607191	0					
ANR	7608320	Identifier	stdout		7607191	0					
ANR	7608321	Argument	"""    possibility to upshift the value of a component during quantization step.\\n"""		7607191	1					
ANR	7608322	PrimaryExpression	"""    possibility to upshift the value of a component during quantization step.\\n"""		7607191	0					
ANR	7608323	ExpressionStatement	"fprintf ( stdout , ""    The value after c= is the component number [0, 1, 2, ...] and the value \\n"" )"	256:4:11879:11988	7607191	137	True				
ANR	7608324	CallExpression	"fprintf ( stdout , ""    The value after c= is the component number [0, 1, 2, ...] and the value \\n"" )"		7607191	0					
ANR	7608325	Callee	fprintf		7607191	0					
ANR	7608326	Identifier	fprintf		7607191	0					
ANR	7608327	ArgumentList	stdout		7607191	1					
ANR	7608328	Argument	stdout		7607191	0					
ANR	7608329	Identifier	stdout		7607191	0					
ANR	7608330	Argument	"""    The value after c= is the component number [0, 1, 2, ...] and the value \\n"""		7607191	1					
ANR	7608331	PrimaryExpression	"""    The value after c= is the component number [0, 1, 2, ...] and the value \\n"""		7607191	0					
ANR	7608332	ExpressionStatement	"fprintf ( stdout , ""    after U= is the value of upshifting. U must be in the range [0, 37].\\n"" )"	258:4:11994:12099	7607191	138	True				
ANR	7608333	CallExpression	"fprintf ( stdout , ""    after U= is the value of upshifting. U must be in the range [0, 37].\\n"" )"		7607191	0					
ANR	7608334	Callee	fprintf		7607191	0					
ANR	7608335	Identifier	fprintf		7607191	0					
ANR	7608336	ArgumentList	stdout		7607191	1					
ANR	7608337	Argument	stdout		7607191	0					
ANR	7608338	Identifier	stdout		7607191	0					
ANR	7608339	Argument	"""    after U= is the value of upshifting. U must be in the range [0, 37].\\n"""		7607191	1					
ANR	7608340	PrimaryExpression	"""    after U= is the value of upshifting. U must be in the range [0, 37].\\n"""		7607191	0					
ANR	7608341	ExpressionStatement	"fprintf ( stdout , ""-d <image offset X,image offset Y>\\n"" )"	260:4:12105:12160	7607191	139	True				
ANR	7608342	CallExpression	"fprintf ( stdout , ""-d <image offset X,image offset Y>\\n"" )"		7607191	0					
ANR	7608343	Callee	fprintf		7607191	0					
ANR	7608344	Identifier	fprintf		7607191	0					
ANR	7608345	ArgumentList	stdout		7607191	1					
ANR	7608346	Argument	stdout		7607191	0					
ANR	7608347	Identifier	stdout		7607191	0					
ANR	7608348	Argument	"""-d <image offset X,image offset Y>\\n"""		7607191	1					
ANR	7608349	PrimaryExpression	"""-d <image offset X,image offset Y>\\n"""		7607191	0					
ANR	7608350	ExpressionStatement	"fprintf ( stdout , ""    Offset of the origin of the image.\\n"" )"	261:4:12166:12225	7607191	140	True				
ANR	7608351	CallExpression	"fprintf ( stdout , ""    Offset of the origin of the image.\\n"" )"		7607191	0					
ANR	7608352	Callee	fprintf		7607191	0					
ANR	7608353	Identifier	fprintf		7607191	0					
ANR	7608354	ArgumentList	stdout		7607191	1					
ANR	7608355	Argument	stdout		7607191	0					
ANR	7608356	Identifier	stdout		7607191	0					
ANR	7608357	Argument	"""    Offset of the origin of the image.\\n"""		7607191	1					
ANR	7608358	PrimaryExpression	"""    Offset of the origin of the image.\\n"""		7607191	0					
ANR	7608359	ExpressionStatement	"fprintf ( stdout , ""-T <tile offset X,tile offset Y>\\n"" )"	262:4:12231:12284	7607191	141	True				
ANR	7608360	CallExpression	"fprintf ( stdout , ""-T <tile offset X,tile offset Y>\\n"" )"		7607191	0					
ANR	7608361	Callee	fprintf		7607191	0					
ANR	7608362	Identifier	fprintf		7607191	0					
ANR	7608363	ArgumentList	stdout		7607191	1					
ANR	7608364	Argument	stdout		7607191	0					
ANR	7608365	Identifier	stdout		7607191	0					
ANR	7608366	Argument	"""-T <tile offset X,tile offset Y>\\n"""		7607191	1					
ANR	7608367	PrimaryExpression	"""-T <tile offset X,tile offset Y>\\n"""		7607191	0					
ANR	7608368	ExpressionStatement	"fprintf ( stdout , ""    Offset of the origin of the tiles.\\n"" )"	263:4:12290:12349	7607191	142	True				
ANR	7608369	CallExpression	"fprintf ( stdout , ""    Offset of the origin of the tiles.\\n"" )"		7607191	0					
ANR	7608370	Callee	fprintf		7607191	0					
ANR	7608371	Identifier	fprintf		7607191	0					
ANR	7608372	ArgumentList	stdout		7607191	1					
ANR	7608373	Argument	stdout		7607191	0					
ANR	7608374	Identifier	stdout		7607191	0					
ANR	7608375	Argument	"""    Offset of the origin of the tiles.\\n"""		7607191	1					
ANR	7608376	PrimaryExpression	"""    Offset of the origin of the tiles.\\n"""		7607191	0					
ANR	7608377	ExpressionStatement	"fprintf ( stdout , ""-I\\n"" )"	264:4:12355:12378	7607191	143	True				
ANR	7608378	CallExpression	"fprintf ( stdout , ""-I\\n"" )"		7607191	0					
ANR	7608379	Callee	fprintf		7607191	0					
ANR	7608380	Identifier	fprintf		7607191	0					
ANR	7608381	ArgumentList	stdout		7607191	1					
ANR	7608382	Argument	stdout		7607191	0					
ANR	7608383	Identifier	stdout		7607191	0					
ANR	7608384	Argument	"""-I\\n"""		7607191	1					
ANR	7608385	PrimaryExpression	"""-I\\n"""		7607191	0					
ANR	7608386	ExpressionStatement	"fprintf ( stdout , ""    Use the irreversible DWT 9-7.\\n"" )"	265:4:12384:12438	7607191	144	True				
ANR	7608387	CallExpression	"fprintf ( stdout , ""    Use the irreversible DWT 9-7.\\n"" )"		7607191	0					
ANR	7608388	Callee	fprintf		7607191	0					
ANR	7608389	Identifier	fprintf		7607191	0					
ANR	7608390	ArgumentList	stdout		7607191	1					
ANR	7608391	Argument	stdout		7607191	0					
ANR	7608392	Identifier	stdout		7607191	0					
ANR	7608393	Argument	"""    Use the irreversible DWT 9-7.\\n"""		7607191	1					
ANR	7608394	PrimaryExpression	"""    Use the irreversible DWT 9-7.\\n"""		7607191	0					
ANR	7608395	ExpressionStatement	"fprintf ( stdout , ""-mct <0|1|2>\\n"" )"	266:4:12444:12477	7607191	145	True				
ANR	7608396	CallExpression	"fprintf ( stdout , ""-mct <0|1|2>\\n"" )"		7607191	0					
ANR	7608397	Callee	fprintf		7607191	0					
ANR	7608398	Identifier	fprintf		7607191	0					
ANR	7608399	ArgumentList	stdout		7607191	1					
ANR	7608400	Argument	stdout		7607191	0					
ANR	7608401	Identifier	stdout		7607191	0					
ANR	7608402	Argument	"""-mct <0|1|2>\\n"""		7607191	1					
ANR	7608403	PrimaryExpression	"""-mct <0|1|2>\\n"""		7607191	0					
ANR	7608404	ExpressionStatement	"fprintf ( stdout , ""    Explicitly specifies if a Multiple Component Transform has to be used.\\n"" )"	267:4:12483:12590	7607191	146	True				
ANR	7608405	CallExpression	"fprintf ( stdout , ""    Explicitly specifies if a Multiple Component Transform has to be used.\\n"" )"		7607191	0					
ANR	7608406	Callee	fprintf		7607191	0					
ANR	7608407	Identifier	fprintf		7607191	0					
ANR	7608408	ArgumentList	stdout		7607191	1					
ANR	7608409	Argument	stdout		7607191	0					
ANR	7608410	Identifier	stdout		7607191	0					
ANR	7608411	Argument	"""    Explicitly specifies if a Multiple Component Transform has to be used.\\n"""		7607191	1					
ANR	7608412	PrimaryExpression	"""    Explicitly specifies if a Multiple Component Transform has to be used.\\n"""		7607191	0					
ANR	7608413	ExpressionStatement	"fprintf ( stdout , ""    0: no MCT ; 1: RGB->YCC conversion ; 2: custom MCT.\\n"" )"	269:4:12596:12672	7607191	147	True				
ANR	7608414	CallExpression	"fprintf ( stdout , ""    0: no MCT ; 1: RGB->YCC conversion ; 2: custom MCT.\\n"" )"		7607191	0					
ANR	7608415	Callee	fprintf		7607191	0					
ANR	7608416	Identifier	fprintf		7607191	0					
ANR	7608417	ArgumentList	stdout		7607191	1					
ANR	7608418	Argument	stdout		7607191	0					
ANR	7608419	Identifier	stdout		7607191	0					
ANR	7608420	Argument	"""    0: no MCT ; 1: RGB->YCC conversion ; 2: custom MCT.\\n"""		7607191	1					
ANR	7608421	PrimaryExpression	"""    0: no MCT ; 1: RGB->YCC conversion ; 2: custom MCT.\\n"""		7607191	0					
ANR	7608422	ExpressionStatement	"fprintf ( stdout , ""    If custom MCT, \\""-m\\"" option has to be used (see hereunder).\\n"" )"	270:4:12678:12775	7607191	148	True				
ANR	7608423	CallExpression	"fprintf ( stdout , ""    If custom MCT, \\""-m\\"" option has to be used (see hereunder).\\n"" )"		7607191	0					
ANR	7608424	Callee	fprintf		7607191	0					
ANR	7608425	Identifier	fprintf		7607191	0					
ANR	7608426	ArgumentList	stdout		7607191	1					
ANR	7608427	Argument	stdout		7607191	0					
ANR	7608428	Identifier	stdout		7607191	0					
ANR	7608429	Argument	"""    If custom MCT, \\""-m\\"" option has to be used (see hereunder).\\n"""		7607191	1					
ANR	7608430	PrimaryExpression	"""    If custom MCT, \\""-m\\"" option has to be used (see hereunder).\\n"""		7607191	0					
ANR	7608431	ExpressionStatement	"fprintf ( stdout , ""    By default, RGB->YCC conversion is used if there are 3 components or more,\\n"" )"	272:4:12781:12892	7607191	149	True				
ANR	7608432	CallExpression	"fprintf ( stdout , ""    By default, RGB->YCC conversion is used if there are 3 components or more,\\n"" )"		7607191	0					
ANR	7608433	Callee	fprintf		7607191	0					
ANR	7608434	Identifier	fprintf		7607191	0					
ANR	7608435	ArgumentList	stdout		7607191	1					
ANR	7608436	Argument	stdout		7607191	0					
ANR	7608437	Identifier	stdout		7607191	0					
ANR	7608438	Argument	"""    By default, RGB->YCC conversion is used if there are 3 components or more,\\n"""		7607191	1					
ANR	7608439	PrimaryExpression	"""    By default, RGB->YCC conversion is used if there are 3 components or more,\\n"""		7607191	0					
ANR	7608440	ExpressionStatement	"fprintf ( stdout , ""    no conversion otherwise.\\n"" )"	274:4:12898:12947	7607191	150	True				
ANR	7608441	CallExpression	"fprintf ( stdout , ""    no conversion otherwise.\\n"" )"		7607191	0					
ANR	7608442	Callee	fprintf		7607191	0					
ANR	7608443	Identifier	fprintf		7607191	0					
ANR	7608444	ArgumentList	stdout		7607191	1					
ANR	7608445	Argument	stdout		7607191	0					
ANR	7608446	Identifier	stdout		7607191	0					
ANR	7608447	Argument	"""    no conversion otherwise.\\n"""		7607191	1					
ANR	7608448	PrimaryExpression	"""    no conversion otherwise.\\n"""		7607191	0					
ANR	7608449	ExpressionStatement	"fprintf ( stdout , ""-m <file>\\n"" )"	275:4:12953:12983	7607191	151	True				
ANR	7608450	CallExpression	"fprintf ( stdout , ""-m <file>\\n"" )"		7607191	0					
ANR	7608451	Callee	fprintf		7607191	0					
ANR	7608452	Identifier	fprintf		7607191	0					
ANR	7608453	ArgumentList	stdout		7607191	1					
ANR	7608454	Argument	stdout		7607191	0					
ANR	7608455	Identifier	stdout		7607191	0					
ANR	7608456	Argument	"""-m <file>\\n"""		7607191	1					
ANR	7608457	PrimaryExpression	"""-m <file>\\n"""		7607191	0					
ANR	7608458	ExpressionStatement	"fprintf ( stdout , ""    Use array-based MCT, values are coma separated, line by line\\n"" )"	276:4:12989:13086	7607191	152	True				
ANR	7608459	CallExpression	"fprintf ( stdout , ""    Use array-based MCT, values are coma separated, line by line\\n"" )"		7607191	0					
ANR	7608460	Callee	fprintf		7607191	0					
ANR	7608461	Identifier	fprintf		7607191	0					
ANR	7608462	ArgumentList	stdout		7607191	1					
ANR	7608463	Argument	stdout		7607191	0					
ANR	7608464	Identifier	stdout		7607191	0					
ANR	7608465	Argument	"""    Use array-based MCT, values are coma separated, line by line\\n"""		7607191	1					
ANR	7608466	PrimaryExpression	"""    Use array-based MCT, values are coma separated, line by line\\n"""		7607191	0					
ANR	7608467	ExpressionStatement	"fprintf ( stdout , ""    No specific separators between lines, no space allowed between values.\\n"" )"	278:4:13092:13199	7607191	153	True				
ANR	7608468	CallExpression	"fprintf ( stdout , ""    No specific separators between lines, no space allowed between values.\\n"" )"		7607191	0					
ANR	7608469	Callee	fprintf		7607191	0					
ANR	7608470	Identifier	fprintf		7607191	0					
ANR	7608471	ArgumentList	stdout		7607191	1					
ANR	7608472	Argument	stdout		7607191	0					
ANR	7608473	Identifier	stdout		7607191	0					
ANR	7608474	Argument	"""    No specific separators between lines, no space allowed between values.\\n"""		7607191	1					
ANR	7608475	PrimaryExpression	"""    No specific separators between lines, no space allowed between values.\\n"""		7607191	0					
ANR	7608476	ExpressionStatement	"fprintf ( stdout , ""    If this option is used, it automatically sets \\""-mct\\"" option to 2.\\n"" )"	280:4:13205:13309	7607191	154	True				
ANR	7608477	CallExpression	"fprintf ( stdout , ""    If this option is used, it automatically sets \\""-mct\\"" option to 2.\\n"" )"		7607191	0					
ANR	7608478	Callee	fprintf		7607191	0					
ANR	7608479	Identifier	fprintf		7607191	0					
ANR	7608480	ArgumentList	stdout		7607191	1					
ANR	7608481	Argument	stdout		7607191	0					
ANR	7608482	Identifier	stdout		7607191	0					
ANR	7608483	Argument	"""    If this option is used, it automatically sets \\""-mct\\"" option to 2.\\n"""		7607191	1					
ANR	7608484	PrimaryExpression	"""    If this option is used, it automatically sets \\""-mct\\"" option to 2.\\n"""		7607191	0					
ANR	7608485	ExpressionStatement	"fprintf ( stdout , ""-cinema2K <24|48>\\n"" )"	282:4:13315:13353	7607191	155	True				
ANR	7608486	CallExpression	"fprintf ( stdout , ""-cinema2K <24|48>\\n"" )"		7607191	0					
ANR	7608487	Callee	fprintf		7607191	0					
ANR	7608488	Identifier	fprintf		7607191	0					
ANR	7608489	ArgumentList	stdout		7607191	1					
ANR	7608490	Argument	stdout		7607191	0					
ANR	7608491	Identifier	stdout		7607191	0					
ANR	7608492	Argument	"""-cinema2K <24|48>\\n"""		7607191	1					
ANR	7608493	PrimaryExpression	"""-cinema2K <24|48>\\n"""		7607191	0					
ANR	7608494	ExpressionStatement	"fprintf ( stdout , ""    Digital Cinema 2K profile compliant codestream.\\n"" )"	283:4:13359:13431	7607191	156	True				
ANR	7608495	CallExpression	"fprintf ( stdout , ""    Digital Cinema 2K profile compliant codestream.\\n"" )"		7607191	0					
ANR	7608496	Callee	fprintf		7607191	0					
ANR	7608497	Identifier	fprintf		7607191	0					
ANR	7608498	ArgumentList	stdout		7607191	1					
ANR	7608499	Argument	stdout		7607191	0					
ANR	7608500	Identifier	stdout		7607191	0					
ANR	7608501	Argument	"""    Digital Cinema 2K profile compliant codestream.\\n"""		7607191	1					
ANR	7608502	PrimaryExpression	"""    Digital Cinema 2K profile compliant codestream.\\n"""		7607191	0					
ANR	7608503	ExpressionStatement	"fprintf ( stdout , ""\\tNeed to specify the frames per second for a 2K resolution.\\n"" )"	284:4:13437:13529	7607191	157	True				
ANR	7608504	CallExpression	"fprintf ( stdout , ""\\tNeed to specify the frames per second for a 2K resolution.\\n"" )"		7607191	0					
ANR	7608505	Callee	fprintf		7607191	0					
ANR	7608506	Identifier	fprintf		7607191	0					
ANR	7608507	ArgumentList	stdout		7607191	1					
ANR	7608508	Argument	stdout		7607191	0					
ANR	7608509	Identifier	stdout		7607191	0					
ANR	7608510	Argument	"""\\tNeed to specify the frames per second for a 2K resolution.\\n"""		7607191	1					
ANR	7608511	PrimaryExpression	"""\\tNeed to specify the frames per second for a 2K resolution.\\n"""		7607191	0					
ANR	7608512	ExpressionStatement	"fprintf ( stdout , ""    Only 24 or 48 fps are currently allowed.\\n"" )"	286:4:13535:13600	7607191	158	True				
ANR	7608513	CallExpression	"fprintf ( stdout , ""    Only 24 or 48 fps are currently allowed.\\n"" )"		7607191	0					
ANR	7608514	Callee	fprintf		7607191	0					
ANR	7608515	Identifier	fprintf		7607191	0					
ANR	7608516	ArgumentList	stdout		7607191	1					
ANR	7608517	Argument	stdout		7607191	0					
ANR	7608518	Identifier	stdout		7607191	0					
ANR	7608519	Argument	"""    Only 24 or 48 fps are currently allowed.\\n"""		7607191	1					
ANR	7608520	PrimaryExpression	"""    Only 24 or 48 fps are currently allowed.\\n"""		7607191	0					
ANR	7608521	ExpressionStatement	"fprintf ( stdout , ""-cinema4K\\n"" )"	287:4:13606:13636	7607191	159	True				
ANR	7608522	CallExpression	"fprintf ( stdout , ""-cinema4K\\n"" )"		7607191	0					
ANR	7608523	Callee	fprintf		7607191	0					
ANR	7608524	Identifier	fprintf		7607191	0					
ANR	7608525	ArgumentList	stdout		7607191	1					
ANR	7608526	Argument	stdout		7607191	0					
ANR	7608527	Identifier	stdout		7607191	0					
ANR	7608528	Argument	"""-cinema4K\\n"""		7607191	1					
ANR	7608529	PrimaryExpression	"""-cinema4K\\n"""		7607191	0					
ANR	7608530	ExpressionStatement	"fprintf ( stdout , ""    Digital Cinema 4K profile compliant codestream.\\n"" )"	288:4:13642:13714	7607191	160	True				
ANR	7608531	CallExpression	"fprintf ( stdout , ""    Digital Cinema 4K profile compliant codestream.\\n"" )"		7607191	0					
ANR	7608532	Callee	fprintf		7607191	0					
ANR	7608533	Identifier	fprintf		7607191	0					
ANR	7608534	ArgumentList	stdout		7607191	1					
ANR	7608535	Argument	stdout		7607191	0					
ANR	7608536	Identifier	stdout		7607191	0					
ANR	7608537	Argument	"""    Digital Cinema 4K profile compliant codestream.\\n"""		7607191	1					
ANR	7608538	PrimaryExpression	"""    Digital Cinema 4K profile compliant codestream.\\n"""		7607191	0					
ANR	7608539	ExpressionStatement	"fprintf ( stdout , ""\\tFrames per second not required. Default value is 24fps.\\n"" )"	289:4:13720:13797	7607191	161	True				
ANR	7608540	CallExpression	"fprintf ( stdout , ""\\tFrames per second not required. Default value is 24fps.\\n"" )"		7607191	0					
ANR	7608541	Callee	fprintf		7607191	0					
ANR	7608542	Identifier	fprintf		7607191	0					
ANR	7608543	ArgumentList	stdout		7607191	1					
ANR	7608544	Argument	stdout		7607191	0					
ANR	7608545	Identifier	stdout		7607191	0					
ANR	7608546	Argument	"""\\tFrames per second not required. Default value is 24fps.\\n"""		7607191	1					
ANR	7608547	PrimaryExpression	"""\\tFrames per second not required. Default value is 24fps.\\n"""		7607191	0					
ANR	7608548	ExpressionStatement	"fprintf ( stdout , ""-jpip\\n"" )"	290:4:13803:13829	7607191	162	True				
ANR	7608549	CallExpression	"fprintf ( stdout , ""-jpip\\n"" )"		7607191	0					
ANR	7608550	Callee	fprintf		7607191	0					
ANR	7608551	Identifier	fprintf		7607191	0					
ANR	7608552	ArgumentList	stdout		7607191	1					
ANR	7608553	Argument	stdout		7607191	0					
ANR	7608554	Identifier	stdout		7607191	0					
ANR	7608555	Argument	"""-jpip\\n"""		7607191	1					
ANR	7608556	PrimaryExpression	"""-jpip\\n"""		7607191	0					
ANR	7608557	ExpressionStatement	"fprintf ( stdout , ""    Write jpip codestream index box in JP2 output file.\\n"" )"	291:4:13835:13911	7607191	163	True				
ANR	7608558	CallExpression	"fprintf ( stdout , ""    Write jpip codestream index box in JP2 output file.\\n"" )"		7607191	0					
ANR	7608559	Callee	fprintf		7607191	0					
ANR	7608560	Identifier	fprintf		7607191	0					
ANR	7608561	ArgumentList	stdout		7607191	1					
ANR	7608562	Argument	stdout		7607191	0					
ANR	7608563	Identifier	stdout		7607191	0					
ANR	7608564	Argument	"""    Write jpip codestream index box in JP2 output file.\\n"""		7607191	1					
ANR	7608565	PrimaryExpression	"""    Write jpip codestream index box in JP2 output file.\\n"""		7607191	0					
ANR	7608566	ExpressionStatement	"fprintf ( stdout , ""    Currently supports only RPCL order.\\n"" )"	292:4:13917:13977	7607191	164	True				
ANR	7608567	CallExpression	"fprintf ( stdout , ""    Currently supports only RPCL order.\\n"" )"		7607191	0					
ANR	7608568	Callee	fprintf		7607191	0					
ANR	7608569	Identifier	fprintf		7607191	0					
ANR	7608570	ArgumentList	stdout		7607191	1					
ANR	7608571	Argument	stdout		7607191	0					
ANR	7608572	Identifier	stdout		7607191	0					
ANR	7608573	Argument	"""    Currently supports only RPCL order.\\n"""		7607191	1					
ANR	7608574	PrimaryExpression	"""    Currently supports only RPCL order.\\n"""		7607191	0					
ANR	7608575	ExpressionStatement	"fprintf ( stdout , ""-C <comment>\\n"" )"	293:4:13983:14016	7607191	165	True				
ANR	7608576	CallExpression	"fprintf ( stdout , ""-C <comment>\\n"" )"		7607191	0					
ANR	7608577	Callee	fprintf		7607191	0					
ANR	7608578	Identifier	fprintf		7607191	0					
ANR	7608579	ArgumentList	stdout		7607191	1					
ANR	7608580	Argument	stdout		7607191	0					
ANR	7608581	Identifier	stdout		7607191	0					
ANR	7608582	Argument	"""-C <comment>\\n"""		7607191	1					
ANR	7608583	PrimaryExpression	"""-C <comment>\\n"""		7607191	0					
ANR	7608584	ExpressionStatement	"fprintf ( stdout , ""    Add <comment> in the comment marker segment.\\n"" )"	294:4:14022:14091	7607191	166	True				
ANR	7608585	CallExpression	"fprintf ( stdout , ""    Add <comment> in the comment marker segment.\\n"" )"		7607191	0					
ANR	7608586	Callee	fprintf		7607191	0					
ANR	7608587	Identifier	fprintf		7607191	0					
ANR	7608588	ArgumentList	stdout		7607191	1					
ANR	7608589	Argument	stdout		7607191	0					
ANR	7608590	Identifier	stdout		7607191	0					
ANR	7608591	Argument	"""    Add <comment> in the comment marker segment.\\n"""		7607191	1					
ANR	7608592	PrimaryExpression	"""    Add <comment> in the comment marker segment.\\n"""		7607191	0					
ANR	7608593	ExpressionStatement	"fprintf ( stdout , ""-W <params>\\n"" )"	297:4:14131:14163	7607191	167	True				
ANR	7608594	CallExpression	"fprintf ( stdout , ""-W <params>\\n"" )"		7607191	0					
ANR	7608595	Callee	fprintf		7607191	0					
ANR	7608596	Identifier	fprintf		7607191	0					
ANR	7608597	ArgumentList	stdout		7607191	1					
ANR	7608598	Argument	stdout		7607191	0					
ANR	7608599	Identifier	stdout		7607191	0					
ANR	7608600	Argument	"""-W <params>\\n"""		7607191	1					
ANR	7608601	PrimaryExpression	"""-W <params>\\n"""		7607191	0					
ANR	7608602	ExpressionStatement	"fprintf ( stdout , ""    Adoption of JPWL (Part 11) capabilities (-W params)\\n"" )"	298:4:14169:14245	7607191	168	True				
ANR	7608603	CallExpression	"fprintf ( stdout , ""    Adoption of JPWL (Part 11) capabilities (-W params)\\n"" )"		7607191	0					
ANR	7608604	Callee	fprintf		7607191	0					
ANR	7608605	Identifier	fprintf		7607191	0					
ANR	7608606	ArgumentList	stdout		7607191	1					
ANR	7608607	Argument	stdout		7607191	0					
ANR	7608608	Identifier	stdout		7607191	0					
ANR	7608609	Argument	"""    Adoption of JPWL (Part 11) capabilities (-W params)\\n"""		7607191	1					
ANR	7608610	PrimaryExpression	"""    Adoption of JPWL (Part 11) capabilities (-W params)\\n"""		7607191	0					
ANR	7608611	ExpressionStatement	"fprintf ( stdout , ""    The <params> field can be written and repeated in any order:\\n"" )"	299:4:14251:14348	7607191	169	True				
ANR	7608612	CallExpression	"fprintf ( stdout , ""    The <params> field can be written and repeated in any order:\\n"" )"		7607191	0					
ANR	7608613	Callee	fprintf		7607191	0					
ANR	7608614	Identifier	fprintf		7607191	0					
ANR	7608615	ArgumentList	stdout		7607191	1					
ANR	7608616	Argument	stdout		7607191	0					
ANR	7608617	Identifier	stdout		7607191	0					
ANR	7608618	Argument	"""    The <params> field can be written and repeated in any order:\\n"""		7607191	1					
ANR	7608619	PrimaryExpression	"""    The <params> field can be written and repeated in any order:\\n"""		7607191	0					
ANR	7608620	ExpressionStatement	"fprintf ( stdout , ""    [h<tilepart><=type>,s<tilepart><=method>,a=<addr>,...\\n"" )"	301:4:14354:14432	7607191	170	True				
ANR	7608621	CallExpression	"fprintf ( stdout , ""    [h<tilepart><=type>,s<tilepart><=method>,a=<addr>,...\\n"" )"		7607191	0					
ANR	7608622	Callee	fprintf		7607191	0					
ANR	7608623	Identifier	fprintf		7607191	0					
ANR	7608624	ArgumentList	stdout		7607191	1					
ANR	7608625	Argument	stdout		7607191	0					
ANR	7608626	Identifier	stdout		7607191	0					
ANR	7608627	Argument	"""    [h<tilepart><=type>,s<tilepart><=method>,a=<addr>,...\\n"""		7607191	1					
ANR	7608628	PrimaryExpression	"""    [h<tilepart><=type>,s<tilepart><=method>,a=<addr>,...\\n"""		7607191	0					
ANR	7608629	ExpressionStatement	"fprintf ( stdout , ""    ...,z=<size>,g=<range>,p<tilepart:pack><=type>]\\n"" )"	302:4:14438:14510	7607191	171	True				
ANR	7608630	CallExpression	"fprintf ( stdout , ""    ...,z=<size>,g=<range>,p<tilepart:pack><=type>]\\n"" )"		7607191	0					
ANR	7608631	Callee	fprintf		7607191	0					
ANR	7608632	Identifier	fprintf		7607191	0					
ANR	7608633	ArgumentList	stdout		7607191	1					
ANR	7608634	Argument	stdout		7607191	0					
ANR	7608635	Identifier	stdout		7607191	0					
ANR	7608636	Argument	"""    ...,z=<size>,g=<range>,p<tilepart:pack><=type>]\\n"""		7607191	1					
ANR	7608637	PrimaryExpression	"""    ...,z=<size>,g=<range>,p<tilepart:pack><=type>]\\n"""		7607191	0					
ANR	7608638	ExpressionStatement	"fprintf ( stdout , ""     h selects the header error protection (EPB): 'type' can be\\n"" )"	303:4:14516:14612	7607191	172	True				
ANR	7608639	CallExpression	"fprintf ( stdout , ""     h selects the header error protection (EPB): 'type' can be\\n"" )"		7607191	0					
ANR	7608640	Callee	fprintf		7607191	0					
ANR	7608641	Identifier	fprintf		7607191	0					
ANR	7608642	ArgumentList	stdout		7607191	1					
ANR	7608643	Argument	stdout		7607191	0					
ANR	7608644	Identifier	stdout		7607191	0					
ANR	7608645	Argument	"""     h selects the header error protection (EPB): 'type' can be\\n"""		7607191	1					
ANR	7608646	PrimaryExpression	"""     h selects the header error protection (EPB): 'type' can be\\n"""		7607191	0					
ANR	7608647	ExpressionStatement	"fprintf ( stdout , ""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"" )"	305:4:14618:14716	7607191	173	True				
ANR	7608648	CallExpression	"fprintf ( stdout , ""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"" )"		7607191	0					
ANR	7608649	Callee	fprintf		7607191	0					
ANR	7608650	Identifier	fprintf		7607191	0					
ANR	7608651	ArgumentList	stdout		7607191	1					
ANR	7608652	Argument	stdout		7607191	0					
ANR	7608653	Identifier	stdout		7607191	0					
ANR	7608654	Argument	"""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"""		7607191	1					
ANR	7608655	PrimaryExpression	"""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"""		7607191	0					
ANR	7608656	ExpressionStatement	"fprintf ( stdout , ""       if 'tilepart' is absent, it is for main and tile headers\\n"" )"	307:4:14722:14818	7607191	174	True				
ANR	7608657	CallExpression	"fprintf ( stdout , ""       if 'tilepart' is absent, it is for main and tile headers\\n"" )"		7607191	0					
ANR	7608658	Callee	fprintf		7607191	0					
ANR	7608659	Identifier	fprintf		7607191	0					
ANR	7608660	ArgumentList	stdout		7607191	1					
ANR	7608661	Argument	stdout		7607191	0					
ANR	7608662	Identifier	stdout		7607191	0					
ANR	7608663	Argument	"""       if 'tilepart' is absent, it is for main and tile headers\\n"""		7607191	1					
ANR	7608664	PrimaryExpression	"""       if 'tilepart' is absent, it is for main and tile headers\\n"""		7607191	0					
ANR	7608665	ExpressionStatement	"fprintf ( stdout , ""       if 'tilepart' is present, it applies from that tile\\n"" )"	309:4:14824:14903	7607191	175	True				
ANR	7608666	CallExpression	"fprintf ( stdout , ""       if 'tilepart' is present, it applies from that tile\\n"" )"		7607191	0					
ANR	7608667	Callee	fprintf		7607191	0					
ANR	7608668	Identifier	fprintf		7607191	0					
ANR	7608669	ArgumentList	stdout		7607191	1					
ANR	7608670	Argument	stdout		7607191	0					
ANR	7608671	Identifier	stdout		7607191	0					
ANR	7608672	Argument	"""       if 'tilepart' is present, it applies from that tile\\n"""		7607191	1					
ANR	7608673	PrimaryExpression	"""       if 'tilepart' is present, it applies from that tile\\n"""		7607191	0					
ANR	7608674	ExpressionStatement	"fprintf ( stdout , ""         onwards, up to the next h<> spec, or to the last tilepart\\n"" )"	310:4:14909:15008	7607191	176	True				
ANR	7608675	CallExpression	"fprintf ( stdout , ""         onwards, up to the next h<> spec, or to the last tilepart\\n"" )"		7607191	0					
ANR	7608676	Callee	fprintf		7607191	0					
ANR	7608677	Identifier	fprintf		7607191	0					
ANR	7608678	ArgumentList	stdout		7607191	1					
ANR	7608679	Argument	stdout		7607191	0					
ANR	7608680	Identifier	stdout		7607191	0					
ANR	7608681	Argument	"""         onwards, up to the next h<> spec, or to the last tilepart\\n"""		7607191	1					
ANR	7608682	PrimaryExpression	"""         onwards, up to the next h<> spec, or to the last tilepart\\n"""		7607191	0					
ANR	7608683	ExpressionStatement	"fprintf ( stdout , ""         in the codestream (max. %d specs)\\n"" , JPWL_MAX_NO_TILESPECS )"	312:4:15014:15112	7607191	177	True				
ANR	7608684	CallExpression	"fprintf ( stdout , ""         in the codestream (max. %d specs)\\n"" , JPWL_MAX_NO_TILESPECS )"		7607191	0					
ANR	7608685	Callee	fprintf		7607191	0					
ANR	7608686	Identifier	fprintf		7607191	0					
ANR	7608687	ArgumentList	stdout		7607191	1					
ANR	7608688	Argument	stdout		7607191	0					
ANR	7608689	Identifier	stdout		7607191	0					
ANR	7608690	Argument	"""         in the codestream (max. %d specs)\\n"""		7607191	1					
ANR	7608691	PrimaryExpression	"""         in the codestream (max. %d specs)\\n"""		7607191	0					
ANR	7608692	Argument	JPWL_MAX_NO_TILESPECS		7607191	2					
ANR	7608693	Identifier	JPWL_MAX_NO_TILESPECS		7607191	0					
ANR	7608694	ExpressionStatement	"fprintf ( stdout , ""     p selects the packet error protection (EEP/UEP with EPBs)\\n"" )"	314:4:15118:15213	7607191	178	True				
ANR	7608695	CallExpression	"fprintf ( stdout , ""     p selects the packet error protection (EEP/UEP with EPBs)\\n"" )"		7607191	0					
ANR	7608696	Callee	fprintf		7607191	0					
ANR	7608697	Identifier	fprintf		7607191	0					
ANR	7608698	ArgumentList	stdout		7607191	1					
ANR	7608699	Argument	stdout		7607191	0					
ANR	7608700	Identifier	stdout		7607191	0					
ANR	7608701	Argument	"""     p selects the packet error protection (EEP/UEP with EPBs)\\n"""		7607191	1					
ANR	7608702	PrimaryExpression	"""     p selects the packet error protection (EEP/UEP with EPBs)\\n"""		7607191	0					
ANR	7608703	ExpressionStatement	"fprintf ( stdout , ""      to be applied to raw data: 'type' can be\\n"" )"	316:4:15219:15286	7607191	179	True				
ANR	7608704	CallExpression	"fprintf ( stdout , ""      to be applied to raw data: 'type' can be\\n"" )"		7607191	0					
ANR	7608705	Callee	fprintf		7607191	0					
ANR	7608706	Identifier	fprintf		7607191	0					
ANR	7608707	ArgumentList	stdout		7607191	1					
ANR	7608708	Argument	stdout		7607191	0					
ANR	7608709	Identifier	stdout		7607191	0					
ANR	7608710	Argument	"""      to be applied to raw data: 'type' can be\\n"""		7607191	1					
ANR	7608711	PrimaryExpression	"""      to be applied to raw data: 'type' can be\\n"""		7607191	0					
ANR	7608712	ExpressionStatement	"fprintf ( stdout , ""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"" )"	317:4:15292:15390	7607191	180	True				
ANR	7608713	CallExpression	"fprintf ( stdout , ""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"" )"		7607191	0					
ANR	7608714	Callee	fprintf		7607191	0					
ANR	7608715	Identifier	fprintf		7607191	0					
ANR	7608716	ArgumentList	stdout		7607191	1					
ANR	7608717	Argument	stdout		7607191	0					
ANR	7608718	Identifier	stdout		7607191	0					
ANR	7608719	Argument	"""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"""		7607191	1					
ANR	7608720	PrimaryExpression	"""       [0=none 1,absent=predefined 16=CRC-16 32=CRC-32 37-128=RS]\\n"""		7607191	0					
ANR	7608721	ExpressionStatement	"fprintf ( stdout , ""       if 'tilepart:pack' is absent, it is from tile 0, packet 0\\n"" )"	319:4:15396:15493	7607191	181	True				
ANR	7608722	CallExpression	"fprintf ( stdout , ""       if 'tilepart:pack' is absent, it is from tile 0, packet 0\\n"" )"		7607191	0					
ANR	7608723	Callee	fprintf		7607191	0					
ANR	7608724	Identifier	fprintf		7607191	0					
ANR	7608725	ArgumentList	stdout		7607191	1					
ANR	7608726	Argument	stdout		7607191	0					
ANR	7608727	Identifier	stdout		7607191	0					
ANR	7608728	Argument	"""       if 'tilepart:pack' is absent, it is from tile 0, packet 0\\n"""		7607191	1					
ANR	7608729	PrimaryExpression	"""       if 'tilepart:pack' is absent, it is from tile 0, packet 0\\n"""		7607191	0					
ANR	7608730	ExpressionStatement	"fprintf ( stdout , ""       if 'tilepart:pack' is present, it applies from that tile\\n"" )"	321:4:15499:15595	7607191	182	True				
ANR	7608731	CallExpression	"fprintf ( stdout , ""       if 'tilepart:pack' is present, it applies from that tile\\n"" )"		7607191	0					
ANR	7608732	Callee	fprintf		7607191	0					
ANR	7608733	Identifier	fprintf		7607191	0					
ANR	7608734	ArgumentList	stdout		7607191	1					
ANR	7608735	Argument	stdout		7607191	0					
ANR	7608736	Identifier	stdout		7607191	0					
ANR	7608737	Argument	"""       if 'tilepart:pack' is present, it applies from that tile\\n"""		7607191	1					
ANR	7608738	PrimaryExpression	"""       if 'tilepart:pack' is present, it applies from that tile\\n"""		7607191	0					
ANR	7608739	ExpressionStatement	"fprintf ( stdout , ""         and that packet onwards, up to the next packet spec\\n"" )"	323:4:15601:15694	7607191	183	True				
ANR	7608740	CallExpression	"fprintf ( stdout , ""         and that packet onwards, up to the next packet spec\\n"" )"		7607191	0					
ANR	7608741	Callee	fprintf		7607191	0					
ANR	7608742	Identifier	fprintf		7607191	0					
ANR	7608743	ArgumentList	stdout		7607191	1					
ANR	7608744	Argument	stdout		7607191	0					
ANR	7608745	Identifier	stdout		7607191	0					
ANR	7608746	Argument	"""         and that packet onwards, up to the next packet spec\\n"""		7607191	1					
ANR	7608747	PrimaryExpression	"""         and that packet onwards, up to the next packet spec\\n"""		7607191	0					
ANR	7608748	ExpressionStatement	"fprintf ( stdout , ""         or to the last packet in the last tilepart in the stream\\n"" )"	325:4:15700:15798	7607191	184	True				
ANR	7608749	CallExpression	"fprintf ( stdout , ""         or to the last packet in the last tilepart in the stream\\n"" )"		7607191	0					
ANR	7608750	Callee	fprintf		7607191	0					
ANR	7608751	Identifier	fprintf		7607191	0					
ANR	7608752	ArgumentList	stdout		7607191	1					
ANR	7608753	Argument	stdout		7607191	0					
ANR	7608754	Identifier	stdout		7607191	0					
ANR	7608755	Argument	"""         or to the last packet in the last tilepart in the stream\\n"""		7607191	1					
ANR	7608756	PrimaryExpression	"""         or to the last packet in the last tilepart in the stream\\n"""		7607191	0					
ANR	7608757	ExpressionStatement	"fprintf ( stdout , ""         (max. %d specs)\\n"" , JPWL_MAX_NO_PACKSPECS )"	327:4:15804:15872	7607191	185	True				
ANR	7608758	CallExpression	"fprintf ( stdout , ""         (max. %d specs)\\n"" , JPWL_MAX_NO_PACKSPECS )"		7607191	0					
ANR	7608759	Callee	fprintf		7607191	0					
ANR	7608760	Identifier	fprintf		7607191	0					
ANR	7608761	ArgumentList	stdout		7607191	1					
ANR	7608762	Argument	stdout		7607191	0					
ANR	7608763	Identifier	stdout		7607191	0					
ANR	7608764	Argument	"""         (max. %d specs)\\n"""		7607191	1					
ANR	7608765	PrimaryExpression	"""         (max. %d specs)\\n"""		7607191	0					
ANR	7608766	Argument	JPWL_MAX_NO_PACKSPECS		7607191	2					
ANR	7608767	Identifier	JPWL_MAX_NO_PACKSPECS		7607191	0					
ANR	7608768	ExpressionStatement	"fprintf ( stdout , ""     s enables sensitivity data insertion (ESD): 'method' can be\\n"" )"	328:4:15878:15975	7607191	186	True				
ANR	7608769	CallExpression	"fprintf ( stdout , ""     s enables sensitivity data insertion (ESD): 'method' can be\\n"" )"		7607191	0					
ANR	7608770	Callee	fprintf		7607191	0					
ANR	7608771	Identifier	fprintf		7607191	0					
ANR	7608772	ArgumentList	stdout		7607191	1					
ANR	7608773	Argument	stdout		7607191	0					
ANR	7608774	Identifier	stdout		7607191	0					
ANR	7608775	Argument	"""     s enables sensitivity data insertion (ESD): 'method' can be\\n"""		7607191	1					
ANR	7608776	PrimaryExpression	"""     s enables sensitivity data insertion (ESD): 'method' can be\\n"""		7607191	0					
ANR	7608777	ExpressionStatement	"fprintf ( stdout , ""       [-1=NO ESD 0=RELATIVE ERROR 1=MSE 2=MSE REDUCTION 3=PSNR\\n"" )"	330:4:15981:16077	7607191	187	True				
ANR	7608778	CallExpression	"fprintf ( stdout , ""       [-1=NO ESD 0=RELATIVE ERROR 1=MSE 2=MSE REDUCTION 3=PSNR\\n"" )"		7607191	0					
ANR	7608779	Callee	fprintf		7607191	0					
ANR	7608780	Identifier	fprintf		7607191	0					
ANR	7608781	ArgumentList	stdout		7607191	1					
ANR	7608782	Argument	stdout		7607191	0					
ANR	7608783	Identifier	stdout		7607191	0					
ANR	7608784	Argument	"""       [-1=NO ESD 0=RELATIVE ERROR 1=MSE 2=MSE REDUCTION 3=PSNR\\n"""		7607191	1					
ANR	7608785	PrimaryExpression	"""       [-1=NO ESD 0=RELATIVE ERROR 1=MSE 2=MSE REDUCTION 3=PSNR\\n"""		7607191	0					
ANR	7608786	ExpressionStatement	"fprintf ( stdout , ""        4=PSNR INCREMENT 5=MAXERR 6=TSE 7=RESERVED]\\n"" )"	332:4:16083:16155	7607191	188	True				
ANR	7608787	CallExpression	"fprintf ( stdout , ""        4=PSNR INCREMENT 5=MAXERR 6=TSE 7=RESERVED]\\n"" )"		7607191	0					
ANR	7608788	Callee	fprintf		7607191	0					
ANR	7608789	Identifier	fprintf		7607191	0					
ANR	7608790	ArgumentList	stdout		7607191	1					
ANR	7608791	Argument	stdout		7607191	0					
ANR	7608792	Identifier	stdout		7607191	0					
ANR	7608793	Argument	"""        4=PSNR INCREMENT 5=MAXERR 6=TSE 7=RESERVED]\\n"""		7607191	1					
ANR	7608794	PrimaryExpression	"""        4=PSNR INCREMENT 5=MAXERR 6=TSE 7=RESERVED]\\n"""		7607191	0					
ANR	7608795	ExpressionStatement	"fprintf ( stdout , ""       if 'tilepart' is absent, it is for main header only\\n"" )"	333:4:16161:16240	7607191	189	True				
ANR	7608796	CallExpression	"fprintf ( stdout , ""       if 'tilepart' is absent, it is for main header only\\n"" )"		7607191	0					
ANR	7608797	Callee	fprintf		7607191	0					
ANR	7608798	Identifier	fprintf		7607191	0					
ANR	7608799	ArgumentList	stdout		7607191	1					
ANR	7608800	Argument	stdout		7607191	0					
ANR	7608801	Identifier	stdout		7607191	0					
ANR	7608802	Argument	"""       if 'tilepart' is absent, it is for main header only\\n"""		7607191	1					
ANR	7608803	PrimaryExpression	"""       if 'tilepart' is absent, it is for main header only\\n"""		7607191	0					
ANR	7608804	ExpressionStatement	"fprintf ( stdout , ""       if 'tilepart' is present, it applies from that tile\\n"" )"	334:4:16246:16325	7607191	190	True				
ANR	7608805	CallExpression	"fprintf ( stdout , ""       if 'tilepart' is present, it applies from that tile\\n"" )"		7607191	0					
ANR	7608806	Callee	fprintf		7607191	0					
ANR	7608807	Identifier	fprintf		7607191	0					
ANR	7608808	ArgumentList	stdout		7607191	1					
ANR	7608809	Argument	stdout		7607191	0					
ANR	7608810	Identifier	stdout		7607191	0					
ANR	7608811	Argument	"""       if 'tilepart' is present, it applies from that tile\\n"""		7607191	1					
ANR	7608812	PrimaryExpression	"""       if 'tilepart' is present, it applies from that tile\\n"""		7607191	0					
ANR	7608813	ExpressionStatement	"fprintf ( stdout , ""         onwards, up to the next s<> spec, or to the last tilepart\\n"" )"	335:4:16331:16430	7607191	191	True				
ANR	7608814	CallExpression	"fprintf ( stdout , ""         onwards, up to the next s<> spec, or to the last tilepart\\n"" )"		7607191	0					
ANR	7608815	Callee	fprintf		7607191	0					
ANR	7608816	Identifier	fprintf		7607191	0					
ANR	7608817	ArgumentList	stdout		7607191	1					
ANR	7608818	Argument	stdout		7607191	0					
ANR	7608819	Identifier	stdout		7607191	0					
ANR	7608820	Argument	"""         onwards, up to the next s<> spec, or to the last tilepart\\n"""		7607191	1					
ANR	7608821	PrimaryExpression	"""         onwards, up to the next s<> spec, or to the last tilepart\\n"""		7607191	0					
ANR	7608822	ExpressionStatement	"fprintf ( stdout , ""         in the codestream (max. %d specs)\\n"" , JPWL_MAX_NO_TILESPECS )"	337:4:16436:16534	7607191	192	True				
ANR	7608823	CallExpression	"fprintf ( stdout , ""         in the codestream (max. %d specs)\\n"" , JPWL_MAX_NO_TILESPECS )"		7607191	0					
ANR	7608824	Callee	fprintf		7607191	0					
ANR	7608825	Identifier	fprintf		7607191	0					
ANR	7608826	ArgumentList	stdout		7607191	1					
ANR	7608827	Argument	stdout		7607191	0					
ANR	7608828	Identifier	stdout		7607191	0					
ANR	7608829	Argument	"""         in the codestream (max. %d specs)\\n"""		7607191	1					
ANR	7608830	PrimaryExpression	"""         in the codestream (max. %d specs)\\n"""		7607191	0					
ANR	7608831	Argument	JPWL_MAX_NO_TILESPECS		7607191	2					
ANR	7608832	Identifier	JPWL_MAX_NO_TILESPECS		7607191	0					
ANR	7608833	ExpressionStatement	"fprintf ( stdout , ""     g determines the addressing mode: <range> can be\\n"" )"	339:4:16540:16614	7607191	193	True				
ANR	7608834	CallExpression	"fprintf ( stdout , ""     g determines the addressing mode: <range> can be\\n"" )"		7607191	0					
ANR	7608835	Callee	fprintf		7607191	0					
ANR	7608836	Identifier	fprintf		7607191	0					
ANR	7608837	ArgumentList	stdout		7607191	1					
ANR	7608838	Argument	stdout		7607191	0					
ANR	7608839	Identifier	stdout		7607191	0					
ANR	7608840	Argument	"""     g determines the addressing mode: <range> can be\\n"""		7607191	1					
ANR	7608841	PrimaryExpression	"""     g determines the addressing mode: <range> can be\\n"""		7607191	0					
ANR	7608842	ExpressionStatement	"fprintf ( stdout , ""       [0=PACKET 1=BYTE RANGE 2=PACKET RANGE]\\n"" )"	340:4:16620:16686	7607191	194	True				
ANR	7608843	CallExpression	"fprintf ( stdout , ""       [0=PACKET 1=BYTE RANGE 2=PACKET RANGE]\\n"" )"		7607191	0					
ANR	7608844	Callee	fprintf		7607191	0					
ANR	7608845	Identifier	fprintf		7607191	0					
ANR	7608846	ArgumentList	stdout		7607191	1					
ANR	7608847	Argument	stdout		7607191	0					
ANR	7608848	Identifier	stdout		7607191	0					
ANR	7608849	Argument	"""       [0=PACKET 1=BYTE RANGE 2=PACKET RANGE]\\n"""		7607191	1					
ANR	7608850	PrimaryExpression	"""       [0=PACKET 1=BYTE RANGE 2=PACKET RANGE]\\n"""		7607191	0					
ANR	7608851	ExpressionStatement	"fprintf ( stdout , ""     a determines the size of data addressing: <addr> can be\\n"" )"	341:4:16692:16785	7607191	195	True				
ANR	7608852	CallExpression	"fprintf ( stdout , ""     a determines the size of data addressing: <addr> can be\\n"" )"		7607191	0					
ANR	7608853	Callee	fprintf		7607191	0					
ANR	7608854	Identifier	fprintf		7607191	0					
ANR	7608855	ArgumentList	stdout		7607191	1					
ANR	7608856	Argument	stdout		7607191	0					
ANR	7608857	Identifier	stdout		7607191	0					
ANR	7608858	Argument	"""     a determines the size of data addressing: <addr> can be\\n"""		7607191	1					
ANR	7608859	PrimaryExpression	"""     a determines the size of data addressing: <addr> can be\\n"""		7607191	0					
ANR	7608860	ExpressionStatement	"fprintf ( stdout , ""       2/4 bytes (small/large codestreams). If not set, auto-mode\\n"" )"	343:4:16791:16889	7607191	196	True				
ANR	7608861	CallExpression	"fprintf ( stdout , ""       2/4 bytes (small/large codestreams). If not set, auto-mode\\n"" )"		7607191	0					
ANR	7608862	Callee	fprintf		7607191	0					
ANR	7608863	Identifier	fprintf		7607191	0					
ANR	7608864	ArgumentList	stdout		7607191	1					
ANR	7608865	Argument	stdout		7607191	0					
ANR	7608866	Identifier	stdout		7607191	0					
ANR	7608867	Argument	"""       2/4 bytes (small/large codestreams). If not set, auto-mode\\n"""		7607191	1					
ANR	7608868	PrimaryExpression	"""       2/4 bytes (small/large codestreams). If not set, auto-mode\\n"""		7607191	0					
ANR	7608869	ExpressionStatement	"fprintf ( stdout , ""     z determines the size of sensitivity values: <size> can be\\n"" )"	345:4:16895:16991	7607191	197	True				
ANR	7608870	CallExpression	"fprintf ( stdout , ""     z determines the size of sensitivity values: <size> can be\\n"" )"		7607191	0					
ANR	7608871	Callee	fprintf		7607191	0					
ANR	7608872	Identifier	fprintf		7607191	0					
ANR	7608873	ArgumentList	stdout		7607191	1					
ANR	7608874	Argument	stdout		7607191	0					
ANR	7608875	Identifier	stdout		7607191	0					
ANR	7608876	Argument	"""     z determines the size of sensitivity values: <size> can be\\n"""		7607191	1					
ANR	7608877	PrimaryExpression	"""     z determines the size of sensitivity values: <size> can be\\n"""		7607191	0					
ANR	7608878	ExpressionStatement	"fprintf ( stdout , ""       1/2 bytes, for the transformed pseudo-floating point value\\n"" )"	347:4:16997:17095	7607191	198	True				
ANR	7608879	CallExpression	"fprintf ( stdout , ""       1/2 bytes, for the transformed pseudo-floating point value\\n"" )"		7607191	0					
ANR	7608880	Callee	fprintf		7607191	0					
ANR	7608881	Identifier	fprintf		7607191	0					
ANR	7608882	ArgumentList	stdout		7607191	1					
ANR	7608883	Argument	stdout		7607191	0					
ANR	7608884	Identifier	stdout		7607191	0					
ANR	7608885	Argument	"""       1/2 bytes, for the transformed pseudo-floating point value\\n"""		7607191	1					
ANR	7608886	PrimaryExpression	"""       1/2 bytes, for the transformed pseudo-floating point value\\n"""		7607191	0					
ANR	7608887	ExpressionStatement	"fprintf ( stdout , ""     ex.:\\n"" )"	349:4:17101:17131	7607191	199	True				
ANR	7608888	CallExpression	"fprintf ( stdout , ""     ex.:\\n"" )"		7607191	0					
ANR	7608889	Callee	fprintf		7607191	0					
ANR	7608890	Identifier	fprintf		7607191	0					
ANR	7608891	ArgumentList	stdout		7607191	1					
ANR	7608892	Argument	stdout		7607191	0					
ANR	7608893	Identifier	stdout		7607191	0					
ANR	7608894	Argument	"""     ex.:\\n"""		7607191	1					
ANR	7608895	PrimaryExpression	"""     ex.:\\n"""		7607191	0					
ANR	7608896	ExpressionStatement	"fprintf ( stdout , ""       h,h0=64,h3=16,h5=32,p0=78,p0:24=56,p1,p3:0=0,p3:20=32,s=0,\\n"" )"	350:4:17137:17235	7607191	200	True				
ANR	7608897	CallExpression	"fprintf ( stdout , ""       h,h0=64,h3=16,h5=32,p0=78,p0:24=56,p1,p3:0=0,p3:20=32,s=0,\\n"" )"		7607191	0					
ANR	7608898	Callee	fprintf		7607191	0					
ANR	7608899	Identifier	fprintf		7607191	0					
ANR	7608900	ArgumentList	stdout		7607191	1					
ANR	7608901	Argument	stdout		7607191	0					
ANR	7608902	Identifier	stdout		7607191	0					
ANR	7608903	Argument	"""       h,h0=64,h3=16,h5=32,p0=78,p0:24=56,p1,p3:0=0,p3:20=32,s=0,\\n"""		7607191	1					
ANR	7608904	PrimaryExpression	"""       h,h0=64,h3=16,h5=32,p0=78,p0:24=56,p1,p3:0=0,p3:20=32,s=0,\\n"""		7607191	0					
ANR	7608905	ExpressionStatement	"fprintf ( stdout , ""         s0=6,s3=-1,a=0,g=1,z=1\\n"" )"	352:4:17241:17293	7607191	201	True				
ANR	7608906	CallExpression	"fprintf ( stdout , ""         s0=6,s3=-1,a=0,g=1,z=1\\n"" )"		7607191	0					
ANR	7608907	Callee	fprintf		7607191	0					
ANR	7608908	Identifier	fprintf		7607191	0					
ANR	7608909	ArgumentList	stdout		7607191	1					
ANR	7608910	Argument	stdout		7607191	0					
ANR	7608911	Identifier	stdout		7607191	0					
ANR	7608912	Argument	"""         s0=6,s3=-1,a=0,g=1,z=1\\n"""		7607191	1					
ANR	7608913	PrimaryExpression	"""         s0=6,s3=-1,a=0,g=1,z=1\\n"""		7607191	0					
ANR	7608914	ExpressionStatement	"fprintf ( stdout , ""     means\\n"" )"	353:4:17299:17330	7607191	202	True				
ANR	7608915	CallExpression	"fprintf ( stdout , ""     means\\n"" )"		7607191	0					
ANR	7608916	Callee	fprintf		7607191	0					
ANR	7608917	Identifier	fprintf		7607191	0					
ANR	7608918	ArgumentList	stdout		7607191	1					
ANR	7608919	Argument	stdout		7607191	0					
ANR	7608920	Identifier	stdout		7607191	0					
ANR	7608921	Argument	"""     means\\n"""		7607191	1					
ANR	7608922	PrimaryExpression	"""     means\\n"""		7607191	0					
ANR	7608923	ExpressionStatement	"fprintf ( stdout , ""       predefined EPB in MH, rs(64,32) from TPH 0 to TPH 2,\\n"" )"	354:4:17336:17428	7607191	203	True				
ANR	7608924	CallExpression	"fprintf ( stdout , ""       predefined EPB in MH, rs(64,32) from TPH 0 to TPH 2,\\n"" )"		7607191	0					
ANR	7608925	Callee	fprintf		7607191	0					
ANR	7608926	Identifier	fprintf		7607191	0					
ANR	7608927	ArgumentList	stdout		7607191	1					
ANR	7608928	Argument	stdout		7607191	0					
ANR	7608929	Identifier	stdout		7607191	0					
ANR	7608930	Argument	"""       predefined EPB in MH, rs(64,32) from TPH 0 to TPH 2,\\n"""		7607191	1					
ANR	7608931	PrimaryExpression	"""       predefined EPB in MH, rs(64,32) from TPH 0 to TPH 2,\\n"""		7607191	0					
ANR	7608932	ExpressionStatement	"fprintf ( stdout , ""       CRC-16 in TPH 3 and TPH 4, CRC-32 in remaining TPHs,\\n"" )"	356:4:17434:17526	7607191	204	True				
ANR	7608933	CallExpression	"fprintf ( stdout , ""       CRC-16 in TPH 3 and TPH 4, CRC-32 in remaining TPHs,\\n"" )"		7607191	0					
ANR	7608934	Callee	fprintf		7607191	0					
ANR	7608935	Identifier	fprintf		7607191	0					
ANR	7608936	ArgumentList	stdout		7607191	1					
ANR	7608937	Argument	stdout		7607191	0					
ANR	7608938	Identifier	stdout		7607191	0					
ANR	7608939	Argument	"""       CRC-16 in TPH 3 and TPH 4, CRC-32 in remaining TPHs,\\n"""		7607191	1					
ANR	7608940	PrimaryExpression	"""       CRC-16 in TPH 3 and TPH 4, CRC-32 in remaining TPHs,\\n"""		7607191	0					
ANR	7608941	ExpressionStatement	"fprintf ( stdout , ""       UEP rs(78,32) for packets 0 to 23 of tile 0,\\n"" )"	358:4:17532:17604	7607191	205	True				
ANR	7608942	CallExpression	"fprintf ( stdout , ""       UEP rs(78,32) for packets 0 to 23 of tile 0,\\n"" )"		7607191	0					
ANR	7608943	Callee	fprintf		7607191	0					
ANR	7608944	Identifier	fprintf		7607191	0					
ANR	7608945	ArgumentList	stdout		7607191	1					
ANR	7608946	Argument	stdout		7607191	0					
ANR	7608947	Identifier	stdout		7607191	0					
ANR	7608948	Argument	"""       UEP rs(78,32) for packets 0 to 23 of tile 0,\\n"""		7607191	1					
ANR	7608949	PrimaryExpression	"""       UEP rs(78,32) for packets 0 to 23 of tile 0,\\n"""		7607191	0					
ANR	7608950	ExpressionStatement	"fprintf ( stdout , ""       UEP rs(56,32) for packs. 24 to the last of tilepart 0,\\n"" )"	359:4:17610:17704	7607191	206	True				
ANR	7608951	CallExpression	"fprintf ( stdout , ""       UEP rs(56,32) for packs. 24 to the last of tilepart 0,\\n"" )"		7607191	0					
ANR	7608952	Callee	fprintf		7607191	0					
ANR	7608953	Identifier	fprintf		7607191	0					
ANR	7608954	ArgumentList	stdout		7607191	1					
ANR	7608955	Argument	stdout		7607191	0					
ANR	7608956	Identifier	stdout		7607191	0					
ANR	7608957	Argument	"""       UEP rs(56,32) for packs. 24 to the last of tilepart 0,\\n"""		7607191	1					
ANR	7608958	PrimaryExpression	"""       UEP rs(56,32) for packs. 24 to the last of tilepart 0,\\n"""		7607191	0					
ANR	7608959	ExpressionStatement	"fprintf ( stdout , ""       UEP rs default for packets of tilepart 1,\\n"" )"	361:4:17710:17779	7607191	207	True				
ANR	7608960	CallExpression	"fprintf ( stdout , ""       UEP rs default for packets of tilepart 1,\\n"" )"		7607191	0					
ANR	7608961	Callee	fprintf		7607191	0					
ANR	7608962	Identifier	fprintf		7607191	0					
ANR	7608963	ArgumentList	stdout		7607191	1					
ANR	7608964	Argument	stdout		7607191	0					
ANR	7608965	Identifier	stdout		7607191	0					
ANR	7608966	Argument	"""       UEP rs default for packets of tilepart 1,\\n"""		7607191	1					
ANR	7608967	PrimaryExpression	"""       UEP rs default for packets of tilepart 1,\\n"""		7607191	0					
ANR	7608968	ExpressionStatement	"fprintf ( stdout , ""       no UEP for packets 0 to 19 of tilepart 3,\\n"" )"	362:4:17785:17854	7607191	208	True				
ANR	7608969	CallExpression	"fprintf ( stdout , ""       no UEP for packets 0 to 19 of tilepart 3,\\n"" )"		7607191	0					
ANR	7608970	Callee	fprintf		7607191	0					
ANR	7608971	Identifier	fprintf		7607191	0					
ANR	7608972	ArgumentList	stdout		7607191	1					
ANR	7608973	Argument	stdout		7607191	0					
ANR	7608974	Identifier	stdout		7607191	0					
ANR	7608975	Argument	"""       no UEP for packets 0 to 19 of tilepart 3,\\n"""		7607191	1					
ANR	7608976	PrimaryExpression	"""       no UEP for packets 0 to 19 of tilepart 3,\\n"""		7607191	0					
ANR	7608977	ExpressionStatement	"fprintf ( stdout , ""       UEP CRC-32 for packs. 20 of tilepart 3 to last tilepart,\\n"" )"	363:4:17860:17956	7607191	209	True				
ANR	7608978	CallExpression	"fprintf ( stdout , ""       UEP CRC-32 for packs. 20 of tilepart 3 to last tilepart,\\n"" )"		7607191	0					
ANR	7608979	Callee	fprintf		7607191	0					
ANR	7608980	Identifier	fprintf		7607191	0					
ANR	7608981	ArgumentList	stdout		7607191	1					
ANR	7608982	Argument	stdout		7607191	0					
ANR	7608983	Identifier	stdout		7607191	0					
ANR	7608984	Argument	"""       UEP CRC-32 for packs. 20 of tilepart 3 to last tilepart,\\n"""		7607191	1					
ANR	7608985	PrimaryExpression	"""       UEP CRC-32 for packs. 20 of tilepart 3 to last tilepart,\\n"""		7607191	0					
ANR	7608986	ExpressionStatement	"fprintf ( stdout , ""       relative sensitivity ESD for MH,\\n"" )"	365:4:17962:18022	7607191	210	True				
ANR	7608987	CallExpression	"fprintf ( stdout , ""       relative sensitivity ESD for MH,\\n"" )"		7607191	0					
ANR	7608988	Callee	fprintf		7607191	0					
ANR	7608989	Identifier	fprintf		7607191	0					
ANR	7608990	ArgumentList	stdout		7607191	1					
ANR	7608991	Argument	stdout		7607191	0					
ANR	7608992	Identifier	stdout		7607191	0					
ANR	7608993	Argument	"""       relative sensitivity ESD for MH,\\n"""		7607191	1					
ANR	7608994	PrimaryExpression	"""       relative sensitivity ESD for MH,\\n"""		7607191	0					
ANR	7608995	ExpressionStatement	"fprintf ( stdout , ""       TSE ESD from TPH 0 to TPH 2, byte range with automatic\\n"" )"	366:4:18028:18122	7607191	211	True				
ANR	7608996	CallExpression	"fprintf ( stdout , ""       TSE ESD from TPH 0 to TPH 2, byte range with automatic\\n"" )"		7607191	0					
ANR	7608997	Callee	fprintf		7607191	0					
ANR	7608998	Identifier	fprintf		7607191	0					
ANR	7608999	ArgumentList	stdout		7607191	1					
ANR	7609000	Argument	stdout		7607191	0					
ANR	7609001	Identifier	stdout		7607191	0					
ANR	7609002	Argument	"""       TSE ESD from TPH 0 to TPH 2, byte range with automatic\\n"""		7607191	1					
ANR	7609003	PrimaryExpression	"""       TSE ESD from TPH 0 to TPH 2, byte range with automatic\\n"""		7607191	0					
ANR	7609004	ExpressionStatement	"fprintf ( stdout , ""       size of addresses and 1 byte for each sensitivity value\\n"" )"	368:4:18128:18223	7607191	212	True				
ANR	7609005	CallExpression	"fprintf ( stdout , ""       size of addresses and 1 byte for each sensitivity value\\n"" )"		7607191	0					
ANR	7609006	Callee	fprintf		7607191	0					
ANR	7609007	Identifier	fprintf		7607191	0					
ANR	7609008	ArgumentList	stdout		7607191	1					
ANR	7609009	Argument	stdout		7607191	0					
ANR	7609010	Identifier	stdout		7607191	0					
ANR	7609011	Argument	"""       size of addresses and 1 byte for each sensitivity value\\n"""		7607191	1					
ANR	7609012	PrimaryExpression	"""       size of addresses and 1 byte for each sensitivity value\\n"""		7607191	0					
ANR	7609013	ExpressionStatement	"fprintf ( stdout , ""     ex.:\\n"" )"	370:4:18229:18259	7607191	213	True				
ANR	7609014	CallExpression	"fprintf ( stdout , ""     ex.:\\n"" )"		7607191	0					
ANR	7609015	Callee	fprintf		7607191	0					
ANR	7609016	Identifier	fprintf		7607191	0					
ANR	7609017	ArgumentList	stdout		7607191	1					
ANR	7609018	Argument	stdout		7607191	0					
ANR	7609019	Identifier	stdout		7607191	0					
ANR	7609020	Argument	"""     ex.:\\n"""		7607191	1					
ANR	7609021	PrimaryExpression	"""     ex.:\\n"""		7607191	0					
ANR	7609022	ExpressionStatement	"fprintf ( stdout , ""           h,s,p\\n"" )"	371:4:18265:18302	7607191	214	True				
ANR	7609023	CallExpression	"fprintf ( stdout , ""           h,s,p\\n"" )"		7607191	0					
ANR	7609024	Callee	fprintf		7607191	0					
ANR	7609025	Identifier	fprintf		7607191	0					
ANR	7609026	ArgumentList	stdout		7607191	1					
ANR	7609027	Argument	stdout		7607191	0					
ANR	7609028	Identifier	stdout		7607191	0					
ANR	7609029	Argument	"""           h,s,p\\n"""		7607191	1					
ANR	7609030	PrimaryExpression	"""           h,s,p\\n"""		7607191	0					
ANR	7609031	ExpressionStatement	"fprintf ( stdout , ""     means\\n"" )"	372:4:18308:18339	7607191	215	True				
ANR	7609032	CallExpression	"fprintf ( stdout , ""     means\\n"" )"		7607191	0					
ANR	7609033	Callee	fprintf		7607191	0					
ANR	7609034	Identifier	fprintf		7607191	0					
ANR	7609035	ArgumentList	stdout		7607191	1					
ANR	7609036	Argument	stdout		7607191	0					
ANR	7609037	Identifier	stdout		7607191	0					
ANR	7609038	Argument	"""     means\\n"""		7607191	1					
ANR	7609039	PrimaryExpression	"""     means\\n"""		7607191	0					
ANR	7609040	ExpressionStatement	"fprintf ( stdout , ""       default protection to headers (MH and TPHs) as well as\\n"" )"	373:4:18345:18439	7607191	216	True				
ANR	7609041	CallExpression	"fprintf ( stdout , ""       default protection to headers (MH and TPHs) as well as\\n"" )"		7607191	0					
ANR	7609042	Callee	fprintf		7607191	0					
ANR	7609043	Identifier	fprintf		7607191	0					
ANR	7609044	ArgumentList	stdout		7607191	1					
ANR	7609045	Argument	stdout		7607191	0					
ANR	7609046	Identifier	stdout		7607191	0					
ANR	7609047	Argument	"""       default protection to headers (MH and TPHs) as well as\\n"""		7607191	1					
ANR	7609048	PrimaryExpression	"""       default protection to headers (MH and TPHs) as well as\\n"""		7607191	0					
ANR	7609049	ExpressionStatement	"fprintf ( stdout , ""       data packets, one ESD in MH\\n"" )"	375:4:18445:18500	7607191	217	True				
ANR	7609050	CallExpression	"fprintf ( stdout , ""       data packets, one ESD in MH\\n"" )"		7607191	0					
ANR	7609051	Callee	fprintf		7607191	0					
ANR	7609052	Identifier	fprintf		7607191	0					
ANR	7609053	ArgumentList	stdout		7607191	1					
ANR	7609054	Argument	stdout		7607191	0					
ANR	7609055	Identifier	stdout		7607191	0					
ANR	7609056	Argument	"""       data packets, one ESD in MH\\n"""		7607191	1					
ANR	7609057	PrimaryExpression	"""       data packets, one ESD in MH\\n"""		7607191	0					
ANR	7609058	ExpressionStatement	"fprintf ( stdout , ""     N.B.: use the following recommendations when specifying\\n"" )"	376:4:18506:18599	7607191	218	True				
ANR	7609059	CallExpression	"fprintf ( stdout , ""     N.B.: use the following recommendations when specifying\\n"" )"		7607191	0					
ANR	7609060	Callee	fprintf		7607191	0					
ANR	7609061	Identifier	fprintf		7607191	0					
ANR	7609062	ArgumentList	stdout		7607191	1					
ANR	7609063	Argument	stdout		7607191	0					
ANR	7609064	Identifier	stdout		7607191	0					
ANR	7609065	Argument	"""     N.B.: use the following recommendations when specifying\\n"""		7607191	1					
ANR	7609066	PrimaryExpression	"""     N.B.: use the following recommendations when specifying\\n"""		7607191	0					
ANR	7609067	ExpressionStatement	"fprintf ( stdout , ""           the JPWL parameters list\\n"" )"	378:4:18605:18661	7607191	219	True				
ANR	7609068	CallExpression	"fprintf ( stdout , ""           the JPWL parameters list\\n"" )"		7607191	0					
ANR	7609069	Callee	fprintf		7607191	0					
ANR	7609070	Identifier	fprintf		7607191	0					
ANR	7609071	ArgumentList	stdout		7607191	1					
ANR	7609072	Argument	stdout		7607191	0					
ANR	7609073	Identifier	stdout		7607191	0					
ANR	7609074	Argument	"""           the JPWL parameters list\\n"""		7607191	1					
ANR	7609075	PrimaryExpression	"""           the JPWL parameters list\\n"""		7607191	0					
ANR	7609076	ExpressionStatement	"fprintf ( stdout , ""       - when you use UEP, always pair the 'p' option with 'h'\\n"" )"	379:4:18667:18762	7607191	220	True				
ANR	7609077	CallExpression	"fprintf ( stdout , ""       - when you use UEP, always pair the 'p' option with 'h'\\n"" )"		7607191	0					
ANR	7609078	Callee	fprintf		7607191	0					
ANR	7609079	Identifier	fprintf		7607191	0					
ANR	7609080	ArgumentList	stdout		7607191	1					
ANR	7609081	Argument	stdout		7607191	0					
ANR	7609082	Identifier	stdout		7607191	0					
ANR	7609083	Argument	"""       - when you use UEP, always pair the 'p' option with 'h'\\n"""		7607191	1					
ANR	7609084	PrimaryExpression	"""       - when you use UEP, always pair the 'p' option with 'h'\\n"""		7607191	0					
ANR	7609085	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	383:4:18808:18829	7607191	221	True				
ANR	7609086	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7609087	Callee	fprintf		7607191	0					
ANR	7609088	Identifier	fprintf		7607191	0					
ANR	7609089	ArgumentList	stdout		7607191	1					
ANR	7609090	Argument	stdout		7607191	0					
ANR	7609091	Identifier	stdout		7607191	0					
ANR	7609092	Argument	"""\\n"""		7607191	1					
ANR	7609093	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7609094	ExpressionStatement	"fprintf ( stdout , ""Index structure:\\n"" )"	385:4:18854:18891	7607191	222	True				
ANR	7609095	CallExpression	"fprintf ( stdout , ""Index structure:\\n"" )"		7607191	0					
ANR	7609096	Callee	fprintf		7607191	0					
ANR	7609097	Identifier	fprintf		7607191	0					
ANR	7609098	ArgumentList	stdout		7607191	1					
ANR	7609099	Argument	stdout		7607191	0					
ANR	7609100	Identifier	stdout		7607191	0					
ANR	7609101	Argument	"""Index structure:\\n"""		7607191	1					
ANR	7609102	PrimaryExpression	"""Index structure:\\n"""		7607191	0					
ANR	7609103	ExpressionStatement	"fprintf ( stdout , ""----------------\\n"" )"	386:4:18897:18934	7607191	223	True				
ANR	7609104	CallExpression	"fprintf ( stdout , ""----------------\\n"" )"		7607191	0					
ANR	7609105	Callee	fprintf		7607191	0					
ANR	7609106	Identifier	fprintf		7607191	0					
ANR	7609107	ArgumentList	stdout		7607191	1					
ANR	7609108	Argument	stdout		7607191	0					
ANR	7609109	Identifier	stdout		7607191	0					
ANR	7609110	Argument	"""----------------\\n"""		7607191	1					
ANR	7609111	PrimaryExpression	"""----------------\\n"""		7607191	0					
ANR	7609112	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	387:4:18940:18961	7607191	224	True				
ANR	7609113	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7609114	Callee	fprintf		7607191	0					
ANR	7609115	Identifier	fprintf		7607191	0					
ANR	7609116	ArgumentList	stdout		7607191	1					
ANR	7609117	Argument	stdout		7607191	0					
ANR	7609118	Identifier	stdout		7607191	0					
ANR	7609119	Argument	"""\\n"""		7607191	1					
ANR	7609120	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7609121	ExpressionStatement	"fprintf ( stdout , ""Image_height Image_width\\n"" )"	388:4:18967:19012	7607191	225	True				
ANR	7609122	CallExpression	"fprintf ( stdout , ""Image_height Image_width\\n"" )"		7607191	0					
ANR	7609123	Callee	fprintf		7607191	0					
ANR	7609124	Identifier	fprintf		7607191	0					
ANR	7609125	ArgumentList	stdout		7607191	1					
ANR	7609126	Argument	stdout		7607191	0					
ANR	7609127	Identifier	stdout		7607191	0					
ANR	7609128	Argument	"""Image_height Image_width\\n"""		7607191	1					
ANR	7609129	PrimaryExpression	"""Image_height Image_width\\n"""		7607191	0					
ANR	7609130	ExpressionStatement	"fprintf ( stdout , ""progression order\\n"" )"	389:4:19018:19056	7607191	226	True				
ANR	7609131	CallExpression	"fprintf ( stdout , ""progression order\\n"" )"		7607191	0					
ANR	7609132	Callee	fprintf		7607191	0					
ANR	7609133	Identifier	fprintf		7607191	0					
ANR	7609134	ArgumentList	stdout		7607191	1					
ANR	7609135	Argument	stdout		7607191	0					
ANR	7609136	Identifier	stdout		7607191	0					
ANR	7609137	Argument	"""progression order\\n"""		7607191	1					
ANR	7609138	PrimaryExpression	"""progression order\\n"""		7607191	0					
ANR	7609139	ExpressionStatement	"fprintf ( stdout , ""Tiles_size_X Tiles_size_Y\\n"" )"	390:4:19062:19108	7607191	227	True				
ANR	7609140	CallExpression	"fprintf ( stdout , ""Tiles_size_X Tiles_size_Y\\n"" )"		7607191	0					
ANR	7609141	Callee	fprintf		7607191	0					
ANR	7609142	Identifier	fprintf		7607191	0					
ANR	7609143	ArgumentList	stdout		7607191	1					
ANR	7609144	Argument	stdout		7607191	0					
ANR	7609145	Identifier	stdout		7607191	0					
ANR	7609146	Argument	"""Tiles_size_X Tiles_size_Y\\n"""		7607191	1					
ANR	7609147	PrimaryExpression	"""Tiles_size_X Tiles_size_Y\\n"""		7607191	0					
ANR	7609148	ExpressionStatement	"fprintf ( stdout , ""Tiles_nb_X Tiles_nb_Y\\n"" )"	391:4:19114:19156	7607191	228	True				
ANR	7609149	CallExpression	"fprintf ( stdout , ""Tiles_nb_X Tiles_nb_Y\\n"" )"		7607191	0					
ANR	7609150	Callee	fprintf		7607191	0					
ANR	7609151	Identifier	fprintf		7607191	0					
ANR	7609152	ArgumentList	stdout		7607191	1					
ANR	7609153	Argument	stdout		7607191	0					
ANR	7609154	Identifier	stdout		7607191	0					
ANR	7609155	Argument	"""Tiles_nb_X Tiles_nb_Y\\n"""		7607191	1					
ANR	7609156	PrimaryExpression	"""Tiles_nb_X Tiles_nb_Y\\n"""		7607191	0					
ANR	7609157	ExpressionStatement	"fprintf ( stdout , ""Components_nb\\n"" )"	392:4:19162:19196	7607191	229	True				
ANR	7609158	CallExpression	"fprintf ( stdout , ""Components_nb\\n"" )"		7607191	0					
ANR	7609159	Callee	fprintf		7607191	0					
ANR	7609160	Identifier	fprintf		7607191	0					
ANR	7609161	ArgumentList	stdout		7607191	1					
ANR	7609162	Argument	stdout		7607191	0					
ANR	7609163	Identifier	stdout		7607191	0					
ANR	7609164	Argument	"""Components_nb\\n"""		7607191	1					
ANR	7609165	PrimaryExpression	"""Components_nb\\n"""		7607191	0					
ANR	7609166	ExpressionStatement	"fprintf ( stdout , ""Layers_nb\\n"" )"	393:4:19202:19232	7607191	230	True				
ANR	7609167	CallExpression	"fprintf ( stdout , ""Layers_nb\\n"" )"		7607191	0					
ANR	7609168	Callee	fprintf		7607191	0					
ANR	7609169	Identifier	fprintf		7607191	0					
ANR	7609170	ArgumentList	stdout		7607191	1					
ANR	7609171	Argument	stdout		7607191	0					
ANR	7609172	Identifier	stdout		7607191	0					
ANR	7609173	Argument	"""Layers_nb\\n"""		7607191	1					
ANR	7609174	PrimaryExpression	"""Layers_nb\\n"""		7607191	0					
ANR	7609175	ExpressionStatement	"fprintf ( stdout , ""decomposition_levels\\n"" )"	394:4:19238:19279	7607191	231	True				
ANR	7609176	CallExpression	"fprintf ( stdout , ""decomposition_levels\\n"" )"		7607191	0					
ANR	7609177	Callee	fprintf		7607191	0					
ANR	7609178	Identifier	fprintf		7607191	0					
ANR	7609179	ArgumentList	stdout		7607191	1					
ANR	7609180	Argument	stdout		7607191	0					
ANR	7609181	Identifier	stdout		7607191	0					
ANR	7609182	Argument	"""decomposition_levels\\n"""		7607191	1					
ANR	7609183	PrimaryExpression	"""decomposition_levels\\n"""		7607191	0					
ANR	7609184	ExpressionStatement	"fprintf ( stdout , ""[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr]...\\n"" )"	395:4:19285:19358	7607191	232	True				
ANR	7609185	CallExpression	"fprintf ( stdout , ""[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr]...\\n"" )"		7607191	0					
ANR	7609186	Callee	fprintf		7607191	0					
ANR	7609187	Identifier	fprintf		7607191	0					
ANR	7609188	ArgumentList	stdout		7607191	1					
ANR	7609189	Argument	stdout		7607191	0					
ANR	7609190	Identifier	stdout		7607191	0					
ANR	7609191	Argument	"""[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr]...\\n"""		7607191	1					
ANR	7609192	PrimaryExpression	"""[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr]...\\n"""		7607191	0					
ANR	7609193	ExpressionStatement	"fprintf ( stdout , ""   [Precincts_size_X_res_0 Precincts_size_Y_res_0]\\n"" )"	396:4:19364:19435	7607191	233	True				
ANR	7609194	CallExpression	"fprintf ( stdout , ""   [Precincts_size_X_res_0 Precincts_size_Y_res_0]\\n"" )"		7607191	0					
ANR	7609195	Callee	fprintf		7607191	0					
ANR	7609196	Identifier	fprintf		7607191	0					
ANR	7609197	ArgumentList	stdout		7607191	1					
ANR	7609198	Argument	stdout		7607191	0					
ANR	7609199	Identifier	stdout		7607191	0					
ANR	7609200	Argument	"""   [Precincts_size_X_res_0 Precincts_size_Y_res_0]\\n"""		7607191	1					
ANR	7609201	PrimaryExpression	"""   [Precincts_size_X_res_0 Precincts_size_Y_res_0]\\n"""		7607191	0					
ANR	7609202	ExpressionStatement	"fprintf ( stdout , ""Main_header_start_position\\n"" )"	397:4:19441:19488	7607191	234	True				
ANR	7609203	CallExpression	"fprintf ( stdout , ""Main_header_start_position\\n"" )"		7607191	0					
ANR	7609204	Callee	fprintf		7607191	0					
ANR	7609205	Identifier	fprintf		7607191	0					
ANR	7609206	ArgumentList	stdout		7607191	1					
ANR	7609207	Argument	stdout		7607191	0					
ANR	7609208	Identifier	stdout		7607191	0					
ANR	7609209	Argument	"""Main_header_start_position\\n"""		7607191	1					
ANR	7609210	PrimaryExpression	"""Main_header_start_position\\n"""		7607191	0					
ANR	7609211	ExpressionStatement	"fprintf ( stdout , ""Main_header_end_position\\n"" )"	398:4:19494:19539	7607191	235	True				
ANR	7609212	CallExpression	"fprintf ( stdout , ""Main_header_end_position\\n"" )"		7607191	0					
ANR	7609213	Callee	fprintf		7607191	0					
ANR	7609214	Identifier	fprintf		7607191	0					
ANR	7609215	ArgumentList	stdout		7607191	1					
ANR	7609216	Argument	stdout		7607191	0					
ANR	7609217	Identifier	stdout		7607191	0					
ANR	7609218	Argument	"""Main_header_end_position\\n"""		7607191	1					
ANR	7609219	PrimaryExpression	"""Main_header_end_position\\n"""		7607191	0					
ANR	7609220	ExpressionStatement	"fprintf ( stdout , ""Codestream_size\\n"" )"	399:4:19545:19581	7607191	236	True				
ANR	7609221	CallExpression	"fprintf ( stdout , ""Codestream_size\\n"" )"		7607191	0					
ANR	7609222	Callee	fprintf		7607191	0					
ANR	7609223	Identifier	fprintf		7607191	0					
ANR	7609224	ArgumentList	stdout		7607191	1					
ANR	7609225	Argument	stdout		7607191	0					
ANR	7609226	Identifier	stdout		7607191	0					
ANR	7609227	Argument	"""Codestream_size\\n"""		7607191	1					
ANR	7609228	PrimaryExpression	"""Codestream_size\\n"""		7607191	0					
ANR	7609229	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	400:4:19587:19608	7607191	237	True				
ANR	7609230	CallExpression	"fprintf ( stdout , ""\\n"" )"		7607191	0					
ANR	7609231	Callee	fprintf		7607191	0					
ANR	7609232	Identifier	fprintf		7607191	0					
ANR	7609233	ArgumentList	stdout		7607191	1					
ANR	7609234	Argument	stdout		7607191	0					
ANR	7609235	Identifier	stdout		7607191	0					
ANR	7609236	Argument	"""\\n"""		7607191	1					
ANR	7609237	PrimaryExpression	"""\\n"""		7607191	0					
ANR	7609238	ExpressionStatement	"fprintf ( stdout , ""INFO ON TILES\\n"" )"	401:4:19614:19648	7607191	238	True				
ANR	7609239	CallExpression	"fprintf ( stdout , ""INFO ON TILES\\n"" )"		7607191	0					
ANR	7609240	Callee	fprintf		7607191	0					
ANR	7609241	Identifier	fprintf		7607191	0					
ANR	7609242	ArgumentList	stdout		7607191	1					
ANR	7609243	Argument	stdout		7607191	0					
ANR	7609244	Identifier	stdout		7607191	0					
ANR	7609245	Argument	"""INFO ON TILES\\n"""		7607191	1					
ANR	7609246	PrimaryExpression	"""INFO ON TILES\\n"""		7607191	0					
ANR	7609247	ExpressionStatement	"fprintf ( stdout , ""tileno start_pos end_hd end_tile nbparts disto nbpix disto/nbpix\\n"" )"	402:4:19654:19751	7607191	239	True				
ANR	7609248	CallExpression	"fprintf ( stdout , ""tileno start_pos end_hd end_tile nbparts disto nbpix disto/nbpix\\n"" )"		7607191	0					
ANR	7609249	Callee	fprintf		7607191	0					
ANR	7609250	Identifier	fprintf		7607191	0					
ANR	7609251	ArgumentList	stdout		7607191	1					
ANR	7609252	Argument	stdout		7607191	0					
ANR	7609253	Identifier	stdout		7607191	0					
ANR	7609254	Argument	"""tileno start_pos end_hd end_tile nbparts disto nbpix disto/nbpix\\n"""		7607191	1					
ANR	7609255	PrimaryExpression	"""tileno start_pos end_hd end_tile nbparts disto nbpix disto/nbpix\\n"""		7607191	0					
ANR	7609256	ExpressionStatement	"fprintf ( stdout , ""Tile_0 start_pos end_Theader end_pos NumParts TotalDisto NumPix MaxMSE\\n"" )"	404:4:19757:19860	7607191	240	True				
ANR	7609257	CallExpression	"fprintf ( stdout , ""Tile_0 start_pos end_Theader end_pos NumParts TotalDisto NumPix MaxMSE\\n"" )"		7607191	0					
ANR	7609258	Callee	fprintf		7607191	0					
ANR	7609259	Identifier	fprintf		7607191	0					
ANR	7609260	ArgumentList	stdout		7607191	1					
ANR	7609261	Argument	stdout		7607191	0					
ANR	7609262	Identifier	stdout		7607191	0					
ANR	7609263	Argument	"""Tile_0 start_pos end_Theader end_pos NumParts TotalDisto NumPix MaxMSE\\n"""		7607191	1					
ANR	7609264	PrimaryExpression	"""Tile_0 start_pos end_Theader end_pos NumParts TotalDisto NumPix MaxMSE\\n"""		7607191	0					
ANR	7609265	ExpressionStatement	"fprintf ( stdout , ""Tile_1   ''           ''        ''        ''       ''    ''      ''\\n"" )"	406:4:19866:19966	7607191	241	True				
ANR	7609266	CallExpression	"fprintf ( stdout , ""Tile_1   ''           ''        ''        ''       ''    ''      ''\\n"" )"		7607191	0					
ANR	7609267	Callee	fprintf		7607191	0					
ANR	7609268	Identifier	fprintf		7607191	0					
ANR	7609269	ArgumentList	stdout		7607191	1					
ANR	7609270	Argument	stdout		7607191	0					
ANR	7609271	Identifier	stdout		7607191	0					
ANR	7609272	Argument	"""Tile_1   ''           ''        ''        ''       ''    ''      ''\\n"""		7607191	1					
ANR	7609273	PrimaryExpression	"""Tile_1   ''           ''        ''        ''       ''    ''      ''\\n"""		7607191	0					
ANR	7609274	ExpressionStatement	"fprintf ( stdout , ""...\\n"" )"	408:4:19972:19996	7607191	242	True				
ANR	7609275	CallExpression	"fprintf ( stdout , ""...\\n"" )"		7607191	0					
ANR	7609276	Callee	fprintf		7607191	0					
ANR	7609277	Identifier	fprintf		7607191	0					
ANR	7609278	ArgumentList	stdout		7607191	1					
ANR	7609279	Argument	stdout		7607191	0					
ANR	7609280	Identifier	stdout		7607191	0					
ANR	7609281	Argument	"""...\\n"""		7607191	1					
ANR	7609282	PrimaryExpression	"""...\\n"""		7607191	0					
ANR	7609283	ExpressionStatement	"fprintf ( stdout , ""Tile_Nt   ''           ''        ''        ''       ''    ''     ''\\n"" )"	409:4:20002:20102	7607191	243	True				
ANR	7609284	CallExpression	"fprintf ( stdout , ""Tile_Nt   ''           ''        ''        ''       ''    ''     ''\\n"" )"		7607191	0					
ANR	7609285	Callee	fprintf		7607191	0					
ANR	7609286	Identifier	fprintf		7607191	0					
ANR	7609287	ArgumentList	stdout		7607191	1					
ANR	7609288	Argument	stdout		7607191	0					
ANR	7609289	Identifier	stdout		7607191	0					
ANR	7609290	Argument	"""Tile_Nt   ''           ''        ''        ''       ''    ''     ''\\n"""		7607191	1					
ANR	7609291	PrimaryExpression	"""Tile_Nt   ''           ''        ''        ''       ''    ''     ''\\n"""		7607191	0					
ANR	7609292	ExpressionStatement	"fprintf ( stdout , ""...\\n"" )"	411:4:20108:20132	7607191	244	True				
ANR	7609293	CallExpression	"fprintf ( stdout , ""...\\n"" )"		7607191	0					
ANR	7609294	Callee	fprintf		7607191	0					
ANR	7609295	Identifier	fprintf		7607191	0					
ANR	7609296	ArgumentList	stdout		7607191	1					
ANR	7609297	Argument	stdout		7607191	0					
ANR	7609298	Identifier	stdout		7607191	0					
ANR	7609299	Argument	"""...\\n"""		7607191	1					
ANR	7609300	PrimaryExpression	"""...\\n"""		7607191	0					
ANR	7609301	ExpressionStatement	"fprintf ( stdout , ""TILE 0 DETAILS\\n"" )"	412:4:20138:20173	7607191	245	True				
ANR	7609302	CallExpression	"fprintf ( stdout , ""TILE 0 DETAILS\\n"" )"		7607191	0					
ANR	7609303	Callee	fprintf		7607191	0					
ANR	7609304	Identifier	fprintf		7607191	0					
ANR	7609305	ArgumentList	stdout		7607191	1					
ANR	7609306	Argument	stdout		7607191	0					
ANR	7609307	Identifier	stdout		7607191	0					
ANR	7609308	Argument	"""TILE 0 DETAILS\\n"""		7607191	1					
ANR	7609309	PrimaryExpression	"""TILE 0 DETAILS\\n"""		7607191	0					
ANR	7609310	ExpressionStatement	"fprintf ( stdout , ""part_nb tileno num_packs start_pos end_tph_pos end_pos\\n"" )"	413:4:20179:20254	7607191	246	True				
ANR	7609311	CallExpression	"fprintf ( stdout , ""part_nb tileno num_packs start_pos end_tph_pos end_pos\\n"" )"		7607191	0					
ANR	7609312	Callee	fprintf		7607191	0					
ANR	7609313	Identifier	fprintf		7607191	0					
ANR	7609314	ArgumentList	stdout		7607191	1					
ANR	7609315	Argument	stdout		7607191	0					
ANR	7609316	Identifier	stdout		7607191	0					
ANR	7609317	Argument	"""part_nb tileno num_packs start_pos end_tph_pos end_pos\\n"""		7607191	1					
ANR	7609318	PrimaryExpression	"""part_nb tileno num_packs start_pos end_tph_pos end_pos\\n"""		7607191	0					
ANR	7609319	ExpressionStatement	"fprintf ( stdout , ""...\\n"" )"	414:4:20260:20284	7607191	247	True				
ANR	7609320	CallExpression	"fprintf ( stdout , ""...\\n"" )"		7607191	0					
ANR	7609321	Callee	fprintf		7607191	0					
ANR	7609322	Identifier	fprintf		7607191	0					
ANR	7609323	ArgumentList	stdout		7607191	1					
ANR	7609324	Argument	stdout		7607191	0					
ANR	7609325	Identifier	stdout		7607191	0					
ANR	7609326	Argument	"""...\\n"""		7607191	1					
ANR	7609327	PrimaryExpression	"""...\\n"""		7607191	0					
ANR	7609328	ExpressionStatement	"fprintf ( stdout , ""Progression_string\\n"" )"	415:4:20290:20329	7607191	248	True				
ANR	7609329	CallExpression	"fprintf ( stdout , ""Progression_string\\n"" )"		7607191	0					
ANR	7609330	Callee	fprintf		7607191	0					
ANR	7609331	Identifier	fprintf		7607191	0					
ANR	7609332	ArgumentList	stdout		7607191	1					
ANR	7609333	Argument	stdout		7607191	0					
ANR	7609334	Identifier	stdout		7607191	0					
ANR	7609335	Argument	"""Progression_string\\n"""		7607191	1					
ANR	7609336	PrimaryExpression	"""Progression_string\\n"""		7607191	0					
ANR	7609337	ExpressionStatement	"fprintf ( stdout , ""pack_nb tileno layno resno compno precno start_pos end_ph_pos end_pos disto\\n"" )"	416:4:20335:20443	7607191	249	True				
ANR	7609338	CallExpression	"fprintf ( stdout , ""pack_nb tileno layno resno compno precno start_pos end_ph_pos end_pos disto\\n"" )"		7607191	0					
ANR	7609339	Callee	fprintf		7607191	0					
ANR	7609340	Identifier	fprintf		7607191	0					
ANR	7609341	ArgumentList	stdout		7607191	1					
ANR	7609342	Argument	stdout		7607191	0					
ANR	7609343	Identifier	stdout		7607191	0					
ANR	7609344	Argument	"""pack_nb tileno layno resno compno precno start_pos end_ph_pos end_pos disto\\n"""		7607191	1					
ANR	7609345	PrimaryExpression	"""pack_nb tileno layno resno compno precno start_pos end_ph_pos end_pos disto\\n"""		7607191	0					
ANR	7609346	ExpressionStatement	"fprintf ( stdout , ""Tpacket_0 Tile layer res. comp. prec. start_pos end_pos disto\\n"" )"	418:4:20449:20543	7607191	250	True				
ANR	7609347	CallExpression	"fprintf ( stdout , ""Tpacket_0 Tile layer res. comp. prec. start_pos end_pos disto\\n"" )"		7607191	0					
ANR	7609348	Callee	fprintf		7607191	0					
ANR	7609349	Identifier	fprintf		7607191	0					
ANR	7609350	ArgumentList	stdout		7607191	1					
ANR	7609351	Argument	stdout		7607191	0					
ANR	7609352	Identifier	stdout		7607191	0					
ANR	7609353	Argument	"""Tpacket_0 Tile layer res. comp. prec. start_pos end_pos disto\\n"""		7607191	1					
ANR	7609354	PrimaryExpression	"""Tpacket_0 Tile layer res. comp. prec. start_pos end_pos disto\\n"""		7607191	0					
ANR	7609355	ExpressionStatement	"fprintf ( stdout , ""...\\n"" )"	420:4:20549:20573	7607191	251	True				
ANR	7609356	CallExpression	"fprintf ( stdout , ""...\\n"" )"		7607191	0					
ANR	7609357	Callee	fprintf		7607191	0					
ANR	7609358	Identifier	fprintf		7607191	0					
ANR	7609359	ArgumentList	stdout		7607191	1					
ANR	7609360	Argument	stdout		7607191	0					
ANR	7609361	Identifier	stdout		7607191	0					
ANR	7609362	Argument	"""...\\n"""		7607191	1					
ANR	7609363	PrimaryExpression	"""...\\n"""		7607191	0					
ANR	7609364	ExpressionStatement	"fprintf ( stdout , ""Tpacket_Np ''   ''    ''   ''    ''       ''       ''     ''\\n"" )"	421:4:20579:20672	7607191	252	True				
ANR	7609365	CallExpression	"fprintf ( stdout , ""Tpacket_Np ''   ''    ''   ''    ''       ''       ''     ''\\n"" )"		7607191	0					
ANR	7609366	Callee	fprintf		7607191	0					
ANR	7609367	Identifier	fprintf		7607191	0					
ANR	7609368	ArgumentList	stdout		7607191	1					
ANR	7609369	Argument	stdout		7607191	0					
ANR	7609370	Identifier	stdout		7607191	0					
ANR	7609371	Argument	"""Tpacket_Np ''   ''    ''   ''    ''       ''       ''     ''\\n"""		7607191	1					
ANR	7609372	PrimaryExpression	"""Tpacket_Np ''   ''    ''   ''    ''       ''       ''     ''\\n"""		7607191	0					
ANR	7609373	ExpressionStatement	"fprintf ( stdout , ""MaxDisto\\n"" )"	423:4:20678:20707	7607191	253	True				
ANR	7609374	CallExpression	"fprintf ( stdout , ""MaxDisto\\n"" )"		7607191	0					
ANR	7609375	Callee	fprintf		7607191	0					
ANR	7609376	Identifier	fprintf		7607191	0					
ANR	7609377	ArgumentList	stdout		7607191	1					
ANR	7609378	Argument	stdout		7607191	0					
ANR	7609379	Identifier	stdout		7607191	0					
ANR	7609380	Argument	"""MaxDisto\\n"""		7607191	1					
ANR	7609381	PrimaryExpression	"""MaxDisto\\n"""		7607191	0					
ANR	7609382	ExpressionStatement	"fprintf ( stdout , ""TotalDisto\\n\\n"" )"	424:4:20713:20746	7607191	254	True				
ANR	7609383	CallExpression	"fprintf ( stdout , ""TotalDisto\\n\\n"" )"		7607191	0					
ANR	7609384	Callee	fprintf		7607191	0					
ANR	7609385	Identifier	fprintf		7607191	0					
ANR	7609386	ArgumentList	stdout		7607191	1					
ANR	7609387	Argument	stdout		7607191	0					
ANR	7609388	Identifier	stdout		7607191	0					
ANR	7609389	Argument	"""TotalDisto\\n\\n"""		7607191	1					
ANR	7609390	PrimaryExpression	"""TotalDisto\\n\\n"""		7607191	0					
ANR	7609391	ReturnType	static void		7607191	1					
ANR	7609392	Identifier	encode_help_display		7607191	2					
ANR	7609393	ParameterList			7607191	3					
ANR	7609394	CFGEntryNode	ENTRY		7607191		True				
ANR	7609395	CFGExitNode	EXIT		7607191		True				
ANR	7609396	Symbol	JPWL_MAX_NO_TILESPECS		7607191						
ANR	7609397	Symbol	JPWL_MAX_NO_PACKSPECS		7607191						
ANR	7609398	Symbol	stdout		7607191						
ANR	7609399	Function	give_progression	428:0:20774:21267							
ANR	7609400	FunctionDef	give_progression (const char progression [ 4 ])		7609399	0					
ANR	7609401	CompoundStatement		429:0:20840:21267	7609399	0					
ANR	7609402	IfStatement	"if ( strncmp ( progression , ""LRCP"" , 4 ) == 0 )"		7609399	0					
ANR	7609403	Condition	"strncmp ( progression , ""LRCP"" , 4 ) == 0"	430:8:20850:20885	7609399	0	True				
ANR	7609404	EqualityExpression	"strncmp ( progression , ""LRCP"" , 4 ) == 0"		7609399	0		==			
ANR	7609405	CallExpression	"strncmp ( progression , ""LRCP"" , 4 )"		7609399	0					
ANR	7609406	Callee	strncmp		7609399	0					
ANR	7609407	Identifier	strncmp		7609399	0					
ANR	7609408	ArgumentList	progression		7609399	1					
ANR	7609409	Argument	progression		7609399	0					
ANR	7609410	Identifier	progression		7609399	0					
ANR	7609411	Argument	"""LRCP"""		7609399	1					
ANR	7609412	PrimaryExpression	"""LRCP"""		7609399	0					
ANR	7609413	Argument	4		7609399	2					
ANR	7609414	PrimaryExpression	4		7609399	0					
ANR	7609415	PrimaryExpression	0		7609399	1					
ANR	7609416	CompoundStatement		2:46:47:47	7609399	1					
ANR	7609417	ReturnStatement	return OPJ_LRCP ;	431:8:20898:20913	7609399	0	True				
ANR	7609418	Identifier	OPJ_LRCP		7609399	0					
ANR	7609419	IfStatement	"if ( strncmp ( progression , ""RLCP"" , 4 ) == 0 )"		7609399	1					
ANR	7609420	Condition	"strncmp ( progression , ""RLCP"" , 4 ) == 0"	433:8:20929:20964	7609399	0	True				
ANR	7609421	EqualityExpression	"strncmp ( progression , ""RLCP"" , 4 ) == 0"		7609399	0		==			
ANR	7609422	CallExpression	"strncmp ( progression , ""RLCP"" , 4 )"		7609399	0					
ANR	7609423	Callee	strncmp		7609399	0					
ANR	7609424	Identifier	strncmp		7609399	0					
ANR	7609425	ArgumentList	progression		7609399	1					
ANR	7609426	Argument	progression		7609399	0					
ANR	7609427	Identifier	progression		7609399	0					
ANR	7609428	Argument	"""RLCP"""		7609399	1					
ANR	7609429	PrimaryExpression	"""RLCP"""		7609399	0					
ANR	7609430	Argument	4		7609399	2					
ANR	7609431	PrimaryExpression	4		7609399	0					
ANR	7609432	PrimaryExpression	0		7609399	1					
ANR	7609433	CompoundStatement		5:46:126:126	7609399	1					
ANR	7609434	ReturnStatement	return OPJ_RLCP ;	434:8:20977:20992	7609399	0	True				
ANR	7609435	Identifier	OPJ_RLCP		7609399	0					
ANR	7609436	IfStatement	"if ( strncmp ( progression , ""RPCL"" , 4 ) == 0 )"		7609399	2					
ANR	7609437	Condition	"strncmp ( progression , ""RPCL"" , 4 ) == 0"	436:8:21008:21043	7609399	0	True				
ANR	7609438	EqualityExpression	"strncmp ( progression , ""RPCL"" , 4 ) == 0"		7609399	0		==			
ANR	7609439	CallExpression	"strncmp ( progression , ""RPCL"" , 4 )"		7609399	0					
ANR	7609440	Callee	strncmp		7609399	0					
ANR	7609441	Identifier	strncmp		7609399	0					
ANR	7609442	ArgumentList	progression		7609399	1					
ANR	7609443	Argument	progression		7609399	0					
ANR	7609444	Identifier	progression		7609399	0					
ANR	7609445	Argument	"""RPCL"""		7609399	1					
ANR	7609446	PrimaryExpression	"""RPCL"""		7609399	0					
ANR	7609447	Argument	4		7609399	2					
ANR	7609448	PrimaryExpression	4		7609399	0					
ANR	7609449	PrimaryExpression	0		7609399	1					
ANR	7609450	CompoundStatement		8:46:205:205	7609399	1					
ANR	7609451	ReturnStatement	return OPJ_RPCL ;	437:8:21056:21071	7609399	0	True				
ANR	7609452	Identifier	OPJ_RPCL		7609399	0					
ANR	7609453	IfStatement	"if ( strncmp ( progression , ""PCRL"" , 4 ) == 0 )"		7609399	3					
ANR	7609454	Condition	"strncmp ( progression , ""PCRL"" , 4 ) == 0"	439:8:21087:21122	7609399	0	True				
ANR	7609455	EqualityExpression	"strncmp ( progression , ""PCRL"" , 4 ) == 0"		7609399	0		==			
ANR	7609456	CallExpression	"strncmp ( progression , ""PCRL"" , 4 )"		7609399	0					
ANR	7609457	Callee	strncmp		7609399	0					
ANR	7609458	Identifier	strncmp		7609399	0					
ANR	7609459	ArgumentList	progression		7609399	1					
ANR	7609460	Argument	progression		7609399	0					
ANR	7609461	Identifier	progression		7609399	0					
ANR	7609462	Argument	"""PCRL"""		7609399	1					
ANR	7609463	PrimaryExpression	"""PCRL"""		7609399	0					
ANR	7609464	Argument	4		7609399	2					
ANR	7609465	PrimaryExpression	4		7609399	0					
ANR	7609466	PrimaryExpression	0		7609399	1					
ANR	7609467	CompoundStatement		11:46:284:284	7609399	1					
ANR	7609468	ReturnStatement	return OPJ_PCRL ;	440:8:21135:21150	7609399	0	True				
ANR	7609469	Identifier	OPJ_PCRL		7609399	0					
ANR	7609470	IfStatement	"if ( strncmp ( progression , ""CPRL"" , 4 ) == 0 )"		7609399	4					
ANR	7609471	Condition	"strncmp ( progression , ""CPRL"" , 4 ) == 0"	442:8:21166:21201	7609399	0	True				
ANR	7609472	EqualityExpression	"strncmp ( progression , ""CPRL"" , 4 ) == 0"		7609399	0		==			
ANR	7609473	CallExpression	"strncmp ( progression , ""CPRL"" , 4 )"		7609399	0					
ANR	7609474	Callee	strncmp		7609399	0					
ANR	7609475	Identifier	strncmp		7609399	0					
ANR	7609476	ArgumentList	progression		7609399	1					
ANR	7609477	Argument	progression		7609399	0					
ANR	7609478	Identifier	progression		7609399	0					
ANR	7609479	Argument	"""CPRL"""		7609399	1					
ANR	7609480	PrimaryExpression	"""CPRL"""		7609399	0					
ANR	7609481	Argument	4		7609399	2					
ANR	7609482	PrimaryExpression	4		7609399	0					
ANR	7609483	PrimaryExpression	0		7609399	1					
ANR	7609484	CompoundStatement		14:46:363:363	7609399	1					
ANR	7609485	ReturnStatement	return OPJ_CPRL ;	443:8:21214:21229	7609399	0	True				
ANR	7609486	Identifier	OPJ_CPRL		7609399	0					
ANR	7609487	ReturnStatement	return OPJ_PROG_UNKNOWN ;	446:4:21242:21265	7609399	5	True				
ANR	7609488	Identifier	OPJ_PROG_UNKNOWN		7609399	0					
ANR	7609489	ReturnType	static OPJ_PROG_ORDER		7609399	1					
ANR	7609490	Identifier	give_progression		7609399	2					
ANR	7609491	ParameterList	const char progression [ 4 ]		7609399	3					
ANR	7609492	Parameter	const char progression [ 4 ]	428:39:20813:20837	7609399	0	True				
ANR	7609493	ParameterType	const char [ 4 ]		7609399	0					
ANR	7609494	Identifier	progression		7609399	1					
ANR	7609495	CFGEntryNode	ENTRY		7609399		True				
ANR	7609496	CFGExitNode	EXIT		7609399		True				
ANR	7609497	Symbol	strncmp		7609399						
ANR	7609498	Symbol	OPJ_PROG_UNKNOWN		7609399						
ANR	7609499	Symbol	OPJ_PCRL		7609399						
ANR	7609500	Symbol	progression		7609399						
ANR	7609501	Symbol	OPJ_RLCP		7609399						
ANR	7609502	Symbol	OPJ_RPCL		7609399						
ANR	7609503	Symbol	OPJ_LRCP		7609399						
ANR	7609504	Symbol	OPJ_CPRL		7609399						
ANR	7609505	Function	get_num_images	449:0:21270:21857							
ANR	7609506	FunctionDef	get_num_images (char * imgdirpath)		7609505	0					
ANR	7609507	CompoundStatement		450:0:21323:21857	7609505	0					
ANR	7609508	IdentifierDeclStatement	DIR * dir ;	451:4:21329:21337	7609505	0	True				
ANR	7609509	IdentifierDecl	* dir		7609505	0					
ANR	7609510	IdentifierDeclType	DIR *		7609505	0					
ANR	7609511	Identifier	dir		7609505	1					
ANR	7609512	IdentifierDeclStatement	struct dirent * content ;	452:4:21343:21365	7609505	1	True				
ANR	7609513	IdentifierDecl	* content		7609505	0					
ANR	7609514	IdentifierDeclType	struct dirent *		7609505	0					
ANR	7609515	Identifier	content		7609505	1					
ANR	7609516	IdentifierDeclStatement	unsigned int num_images = 0 ;	453:4:21371:21398	7609505	2	True				
ANR	7609517	IdentifierDecl	num_images = 0		7609505	0					
ANR	7609518	IdentifierDeclType	unsigned int		7609505	0					
ANR	7609519	Identifier	num_images		7609505	1					
ANR	7609520	AssignmentExpression	num_images = 0		7609505	2		=			
ANR	7609521	Identifier	num_images		7609505	0					
ANR	7609522	PrimaryExpression	0		7609505	1					
ANR	7609523	ExpressionStatement	dir = opendir ( imgdirpath )	457:4:21466:21491	7609505	3	True				
ANR	7609524	AssignmentExpression	dir = opendir ( imgdirpath )		7609505	0		=			
ANR	7609525	Identifier	dir		7609505	0					
ANR	7609526	CallExpression	opendir ( imgdirpath )		7609505	1					
ANR	7609527	Callee	opendir		7609505	0					
ANR	7609528	Identifier	opendir		7609505	0					
ANR	7609529	ArgumentList	imgdirpath		7609505	1					
ANR	7609530	Argument	imgdirpath		7609505	0					
ANR	7609531	Identifier	imgdirpath		7609505	0					
ANR	7609532	IfStatement	if ( ! dir )		7609505	4					
ANR	7609533	Condition	! dir	458:8:21501:21504	7609505	0	True				
ANR	7609534	UnaryOperationExpression	! dir		7609505	0					
ANR	7609535	UnaryOperator	!		7609505	0					
ANR	7609536	Identifier	dir		7609505	1					
ANR	7609537	CompoundStatement		9:14:183:183	7609505	1					
ANR	7609538	ExpressionStatement	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"	459:8:21517:21574	7609505	0	True				
ANR	7609539	CallExpression	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"		7609505	0					
ANR	7609540	Callee	fprintf		7609505	0					
ANR	7609541	Identifier	fprintf		7609505	0					
ANR	7609542	ArgumentList	stderr		7609505	1					
ANR	7609543	Argument	stderr		7609505	0					
ANR	7609544	Identifier	stderr		7609505	0					
ANR	7609545	Argument	"""Could not open Folder %s\\n"""		7609505	1					
ANR	7609546	PrimaryExpression	"""Could not open Folder %s\\n"""		7609505	0					
ANR	7609547	Argument	imgdirpath		7609505	2					
ANR	7609548	Identifier	imgdirpath		7609505	0					
ANR	7609549	ReturnStatement	return 0 ;	460:8:21584:21592	7609505	1	True				
ANR	7609550	PrimaryExpression	0		7609505	0					
ANR	7609551	ExpressionStatement	num_images = 0	463:4:21605:21619	7609505	5	True				
ANR	7609552	AssignmentExpression	num_images = 0		7609505	0		=			
ANR	7609553	Identifier	num_images		7609505	0					
ANR	7609554	PrimaryExpression	0		7609505	1					
ANR	7609555	WhileStatement	while ( ( content = readdir ( dir ) ) != NULL )		7609505	6					
ANR	7609556	Condition	( content = readdir ( dir ) ) != NULL	464:11:21632:21663	7609505	0	True				
ANR	7609557	EqualityExpression	( content = readdir ( dir ) ) != NULL		7609505	0		!=			
ANR	7609558	AssignmentExpression	content = readdir ( dir )		7609505	0		=			
ANR	7609559	Identifier	content		7609505	0					
ANR	7609560	CallExpression	readdir ( dir )		7609505	1					
ANR	7609561	Callee	readdir		7609505	0					
ANR	7609562	Identifier	readdir		7609505	0					
ANR	7609563	ArgumentList	dir		7609505	1					
ANR	7609564	Argument	dir		7609505	0					
ANR	7609565	Identifier	dir		7609505	0					
ANR	7609566	Identifier	NULL		7609505	1					
ANR	7609567	CompoundStatement		15:45:342:342	7609505	1					
ANR	7609568	IfStatement	"if ( strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0 )"		7609505	0					
ANR	7609569	Condition	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"	465:12:21680:21750	7609505	0	True				
ANR	7609570	OrExpression	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"		7609505	0		||			
ANR	7609571	EqualityExpression	"strcmp ( ""."" , content -> d_name ) == 0"		7609505	0		==			
ANR	7609572	CallExpression	"strcmp ( ""."" , content -> d_name )"		7609505	0					
ANR	7609573	Callee	strcmp		7609505	0					
ANR	7609574	Identifier	strcmp		7609505	0					
ANR	7609575	ArgumentList	"""."""		7609505	1					
ANR	7609576	Argument	"""."""		7609505	0					
ANR	7609577	PrimaryExpression	"""."""		7609505	0					
ANR	7609578	Argument	content -> d_name		7609505	1					
ANR	7609579	PtrMemberAccess	content -> d_name		7609505	0					
ANR	7609580	Identifier	content		7609505	0					
ANR	7609581	Identifier	d_name		7609505	1					
ANR	7609582	PrimaryExpression	0		7609505	1					
ANR	7609583	EqualityExpression	"strcmp ( "".."" , content -> d_name ) == 0"		7609505	1		==			
ANR	7609584	CallExpression	"strcmp ( "".."" , content -> d_name )"		7609505	0					
ANR	7609585	Callee	strcmp		7609505	0					
ANR	7609586	Identifier	strcmp		7609505	0					
ANR	7609587	ArgumentList	""".."""		7609505	1					
ANR	7609588	Argument	""".."""		7609505	0					
ANR	7609589	PrimaryExpression	""".."""		7609505	0					
ANR	7609590	Argument	content -> d_name		7609505	1					
ANR	7609591	PtrMemberAccess	content -> d_name		7609505	0					
ANR	7609592	Identifier	content		7609505	0					
ANR	7609593	Identifier	d_name		7609505	1					
ANR	7609594	PrimaryExpression	0		7609505	1					
ANR	7609595	CompoundStatement		16:85:429:429	7609505	1					
ANR	7609596	ContinueStatement	continue ;	466:12:21767:21775	7609505	0	True				
ANR	7609597	ExpressionStatement	num_images ++	468:8:21795:21807	7609505	1	True				
ANR	7609598	PostIncDecOperationExpression	num_images ++		7609505	0					
ANR	7609599	Identifier	num_images		7609505	0					
ANR	7609600	IncDec	++		7609505	1					
ANR	7609601	ExpressionStatement	closedir ( dir )	470:4:21819:21832	7609505	7	True				
ANR	7609602	CallExpression	closedir ( dir )		7609505	0					
ANR	7609603	Callee	closedir		7609505	0					
ANR	7609604	Identifier	closedir		7609505	0					
ANR	7609605	ArgumentList	dir		7609505	1					
ANR	7609606	Argument	dir		7609505	0					
ANR	7609607	Identifier	dir		7609505	0					
ANR	7609608	ReturnStatement	return num_images ;	471:4:21838:21855	7609505	8	True				
ANR	7609609	Identifier	num_images		7609505	0					
ANR	7609610	ReturnType	static unsigned int		7609505	1					
ANR	7609611	Identifier	get_num_images		7609505	2					
ANR	7609612	ParameterList	char * imgdirpath		7609505	3					
ANR	7609613	Parameter	char * imgdirpath	449:35:21305:21320	7609505	0	True				
ANR	7609614	ParameterType	char *		7609505	0					
ANR	7609615	Identifier	imgdirpath		7609505	1					
ANR	7609616	CFGEntryNode	ENTRY		7609505		True				
ANR	7609617	CFGExitNode	EXIT		7609505		True				
ANR	7609618	Symbol	strcmp		7609505						
ANR	7609619	Symbol	readdir		7609505						
ANR	7609620	Symbol	NULL		7609505						
ANR	7609621	Symbol	* content		7609505						
ANR	7609622	Symbol	opendir		7609505						
ANR	7609623	Symbol	content -> d_name		7609505						
ANR	7609624	Symbol	dir		7609505						
ANR	7609625	Symbol	stderr		7609505						
ANR	7609626	Symbol	imgdirpath		7609505						
ANR	7609627	Symbol	content		7609505						
ANR	7609628	Symbol	num_images		7609505						
ANR	7609629	Function	load_images	474:0:21860:22524							
ANR	7609630	FunctionDef	"load_images (dircnt_t * dirptr , char * imgdirpath)"		7609629	0					
ANR	7609631	CompoundStatement		475:0:21919:22524	7609629	0					
ANR	7609632	IdentifierDeclStatement	DIR * dir ;	476:4:21925:21933	7609629	0	True				
ANR	7609633	IdentifierDecl	* dir		7609629	0					
ANR	7609634	IdentifierDeclType	DIR *		7609629	0					
ANR	7609635	Identifier	dir		7609629	1					
ANR	7609636	IdentifierDeclStatement	struct dirent * content ;	477:4:21939:21961	7609629	1	True				
ANR	7609637	IdentifierDecl	* content		7609629	0					
ANR	7609638	IdentifierDeclType	struct dirent *		7609629	0					
ANR	7609639	Identifier	content		7609629	1					
ANR	7609640	IdentifierDeclStatement	int i = 0 ;	478:4:21967:21976	7609629	2	True				
ANR	7609641	IdentifierDecl	i = 0		7609629	0					
ANR	7609642	IdentifierDeclType	int		7609629	0					
ANR	7609643	Identifier	i		7609629	1					
ANR	7609644	AssignmentExpression	i = 0		7609629	2		=			
ANR	7609645	Identifier	i		7609629	0					
ANR	7609646	PrimaryExpression	0		7609629	1					
ANR	7609647	ExpressionStatement	dir = opendir ( imgdirpath )	482:4:22044:22069	7609629	3	True				
ANR	7609648	AssignmentExpression	dir = opendir ( imgdirpath )		7609629	0		=			
ANR	7609649	Identifier	dir		7609629	0					
ANR	7609650	CallExpression	opendir ( imgdirpath )		7609629	1					
ANR	7609651	Callee	opendir		7609629	0					
ANR	7609652	Identifier	opendir		7609629	0					
ANR	7609653	ArgumentList	imgdirpath		7609629	1					
ANR	7609654	Argument	imgdirpath		7609629	0					
ANR	7609655	Identifier	imgdirpath		7609629	0					
ANR	7609656	IfStatement	if ( ! dir )		7609629	4					
ANR	7609657	Condition	! dir	483:8:22079:22082	7609629	0	True				
ANR	7609658	UnaryOperationExpression	! dir		7609629	0					
ANR	7609659	UnaryOperator	!		7609629	0					
ANR	7609660	Identifier	dir		7609629	1					
ANR	7609661	CompoundStatement		9:14:165:165	7609629	1					
ANR	7609662	ExpressionStatement	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"	484:8:22095:22152	7609629	0	True				
ANR	7609663	CallExpression	"fprintf ( stderr , ""Could not open Folder %s\\n"" , imgdirpath )"		7609629	0					
ANR	7609664	Callee	fprintf		7609629	0					
ANR	7609665	Identifier	fprintf		7609629	0					
ANR	7609666	ArgumentList	stderr		7609629	1					
ANR	7609667	Argument	stderr		7609629	0					
ANR	7609668	Identifier	stderr		7609629	0					
ANR	7609669	Argument	"""Could not open Folder %s\\n"""		7609629	1					
ANR	7609670	PrimaryExpression	"""Could not open Folder %s\\n"""		7609629	0					
ANR	7609671	Argument	imgdirpath		7609629	2					
ANR	7609672	Identifier	imgdirpath		7609629	0					
ANR	7609673	ReturnStatement	return 1 ;	485:8:22162:22170	7609629	1	True				
ANR	7609674	PrimaryExpression	1		7609629	0					
ANR	7609675	ElseStatement	else		7609629	0					
ANR	7609676	CompoundStatement		12:13:265:265	7609629	0					
ANR	7609677	ExpressionStatement	"fprintf ( stderr , ""Folder opened successfully\\n"" )"	487:8:22195:22242	7609629	0	True				
ANR	7609678	CallExpression	"fprintf ( stderr , ""Folder opened successfully\\n"" )"		7609629	0					
ANR	7609679	Callee	fprintf		7609629	0					
ANR	7609680	Identifier	fprintf		7609629	0					
ANR	7609681	ArgumentList	stderr		7609629	1					
ANR	7609682	Argument	stderr		7609629	0					
ANR	7609683	Identifier	stderr		7609629	0					
ANR	7609684	Argument	"""Folder opened successfully\\n"""		7609629	1					
ANR	7609685	PrimaryExpression	"""Folder opened successfully\\n"""		7609629	0					
ANR	7609686	WhileStatement	while ( ( content = readdir ( dir ) ) != NULL )		7609629	5					
ANR	7609687	Condition	( content = readdir ( dir ) ) != NULL	490:11:22262:22293	7609629	0	True				
ANR	7609688	EqualityExpression	( content = readdir ( dir ) ) != NULL		7609629	0		!=			
ANR	7609689	AssignmentExpression	content = readdir ( dir )		7609629	0		=			
ANR	7609690	Identifier	content		7609629	0					
ANR	7609691	CallExpression	readdir ( dir )		7609629	1					
ANR	7609692	Callee	readdir		7609629	0					
ANR	7609693	Identifier	readdir		7609629	0					
ANR	7609694	ArgumentList	dir		7609629	1					
ANR	7609695	Argument	dir		7609629	0					
ANR	7609696	Identifier	dir		7609629	0					
ANR	7609697	Identifier	NULL		7609629	1					
ANR	7609698	CompoundStatement		16:45:376:376	7609629	1					
ANR	7609699	IfStatement	"if ( strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0 )"		7609629	0					
ANR	7609700	Condition	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"	491:12:22310:22380	7609629	0	True				
ANR	7609701	OrExpression	"strcmp ( ""."" , content -> d_name ) == 0 || strcmp ( "".."" , content -> d_name ) == 0"		7609629	0		||			
ANR	7609702	EqualityExpression	"strcmp ( ""."" , content -> d_name ) == 0"		7609629	0		==			
ANR	7609703	CallExpression	"strcmp ( ""."" , content -> d_name )"		7609629	0					
ANR	7609704	Callee	strcmp		7609629	0					
ANR	7609705	Identifier	strcmp		7609629	0					
ANR	7609706	ArgumentList	"""."""		7609629	1					
ANR	7609707	Argument	"""."""		7609629	0					
ANR	7609708	PrimaryExpression	"""."""		7609629	0					
ANR	7609709	Argument	content -> d_name		7609629	1					
ANR	7609710	PtrMemberAccess	content -> d_name		7609629	0					
ANR	7609711	Identifier	content		7609629	0					
ANR	7609712	Identifier	d_name		7609629	1					
ANR	7609713	PrimaryExpression	0		7609629	1					
ANR	7609714	EqualityExpression	"strcmp ( "".."" , content -> d_name ) == 0"		7609629	1		==			
ANR	7609715	CallExpression	"strcmp ( "".."" , content -> d_name )"		7609629	0					
ANR	7609716	Callee	strcmp		7609629	0					
ANR	7609717	Identifier	strcmp		7609629	0					
ANR	7609718	ArgumentList	""".."""		7609629	1					
ANR	7609719	Argument	""".."""		7609629	0					
ANR	7609720	PrimaryExpression	""".."""		7609629	0					
ANR	7609721	Argument	content -> d_name		7609629	1					
ANR	7609722	PtrMemberAccess	content -> d_name		7609629	0					
ANR	7609723	Identifier	content		7609629	0					
ANR	7609724	Identifier	d_name		7609629	1					
ANR	7609725	PrimaryExpression	0		7609629	1					
ANR	7609726	CompoundStatement		17:85:463:463	7609629	1					
ANR	7609727	ContinueStatement	continue ;	492:12:22397:22405	7609629	0	True				
ANR	7609728	ExpressionStatement	"strcpy ( dirptr -> filename [ i ] , content -> d_name )"	495:8:22426:22470	7609629	1	True				
ANR	7609729	CallExpression	"strcpy ( dirptr -> filename [ i ] , content -> d_name )"		7609629	0					
ANR	7609730	Callee	strcpy		7609629	0					
ANR	7609731	Identifier	strcpy		7609629	0					
ANR	7609732	ArgumentList	dirptr -> filename [ i ]		7609629	1					
ANR	7609733	Argument	dirptr -> filename [ i ]		7609629	0					
ANR	7609734	ArrayIndexing	dirptr -> filename [ i ]		7609629	0					
ANR	7609735	PtrMemberAccess	dirptr -> filename		7609629	0					
ANR	7609736	Identifier	dirptr		7609629	0					
ANR	7609737	Identifier	filename		7609629	1					
ANR	7609738	Identifier	i		7609629	1					
ANR	7609739	Argument	content -> d_name		7609629	1					
ANR	7609740	PtrMemberAccess	content -> d_name		7609629	0					
ANR	7609741	Identifier	content		7609629	0					
ANR	7609742	Identifier	d_name		7609629	1					
ANR	7609743	ExpressionStatement	i ++	496:8:22480:22483	7609629	2	True				
ANR	7609744	PostIncDecOperationExpression	i ++		7609629	0					
ANR	7609745	Identifier	i		7609629	0					
ANR	7609746	IncDec	++		7609629	1					
ANR	7609747	ExpressionStatement	closedir ( dir )	498:4:22495:22508	7609629	6	True				
ANR	7609748	CallExpression	closedir ( dir )		7609629	0					
ANR	7609749	Callee	closedir		7609629	0					
ANR	7609750	Identifier	closedir		7609629	0					
ANR	7609751	ArgumentList	dir		7609629	1					
ANR	7609752	Argument	dir		7609629	0					
ANR	7609753	Identifier	dir		7609629	0					
ANR	7609754	ReturnStatement	return 0 ;	499:4:22514:22522	7609629	7	True				
ANR	7609755	PrimaryExpression	0		7609629	0					
ANR	7609756	ReturnType	static int		7609629	1					
ANR	7609757	Identifier	load_images		7609629	2					
ANR	7609758	ParameterList	"dircnt_t * dirptr , char * imgdirpath"		7609629	3					
ANR	7609759	Parameter	dircnt_t * dirptr	474:23:21883:21898	7609629	0	True				
ANR	7609760	ParameterType	dircnt_t *		7609629	0					
ANR	7609761	Identifier	dirptr		7609629	1					
ANR	7609762	Parameter	char * imgdirpath	474:41:21901:21916	7609629	1	True				
ANR	7609763	ParameterType	char *		7609629	0					
ANR	7609764	Identifier	imgdirpath		7609629	1					
ANR	7609765	CFGEntryNode	ENTRY		7609629		True				
ANR	7609766	CFGExitNode	EXIT		7609629		True				
ANR	7609767	Symbol	dirptr		7609629						
ANR	7609768	Symbol	strcmp		7609629						
ANR	7609769	Symbol	NULL		7609629						
ANR	7609770	Symbol	i		7609629						
ANR	7609771	Symbol	dir		7609629						
ANR	7609772	Symbol	stderr		7609629						
ANR	7609773	Symbol	* dirptr -> filename		7609629						
ANR	7609774	Symbol	* dirptr		7609629						
ANR	7609775	Symbol	content		7609629						
ANR	7609776	Symbol	dirptr -> filename		7609629						
ANR	7609777	Symbol	readdir		7609629						
ANR	7609778	Symbol	* i		7609629						
ANR	7609779	Symbol	* content		7609629						
ANR	7609780	Symbol	opendir		7609629						
ANR	7609781	Symbol	content -> d_name		7609629						
ANR	7609782	Symbol	* * dirptr		7609629						
ANR	7609783	Symbol	imgdirpath		7609629						
ANR	7609784	Function	get_file_format	502:0:22527:23239							
ANR	7609785	FunctionDef	get_file_format (char * filename)		7609784	0					
ANR	7609786	CompoundStatement		503:0:22570:23239	7609784	0					
ANR	7609787	IdentifierDeclStatement	unsigned int i ;	504:4:22576:22590	7609784	0	True				
ANR	7609788	IdentifierDecl	i		7609784	0					
ANR	7609789	IdentifierDeclType	unsigned int		7609784	0					
ANR	7609790	Identifier	i		7609784	1					
ANR	7609791	Statement	static	505:4:22596:22601	7609784	1	True				
ANR	7609792	IdentifierDeclStatement	"const char * extension [ ] = { ""pgx"" , ""pnm"" , ""pgm"" , ""ppm"" , ""pbm"" , ""pam"" , ""bmp"" , ""tif"" , ""raw"" , ""rawl"" , ""tga"" , ""png"" , ""j2k"" , ""jp2"" , ""j2c"" , ""jpc"" } ;"	505:11:22603:22756	7609784	2	True				
ANR	7609793	IdentifierDecl	"* extension [ ] = { ""pgx"" , ""pnm"" , ""pgm"" , ""ppm"" , ""pbm"" , ""pam"" , ""bmp"" , ""tif"" , ""raw"" , ""rawl"" , ""tga"" , ""png"" , ""j2k"" , ""jp2"" , ""j2c"" , ""jpc"" }"		7609784	0					
ANR	7609794	IdentifierDeclType	const char * [ ]		7609784	0					
ANR	7609795	Identifier	extension		7609784	1					
ANR	7609796	AssignmentExpression	"* extension [ ] = { ""pgx"" , ""pnm"" , ""pgm"" , ""ppm"" , ""pbm"" , ""pam"" , ""bmp"" , ""tif"" , ""raw"" , ""rawl"" , ""tga"" , ""png"" , ""j2k"" , ""jp2"" , ""j2c"" , ""jpc"" }"		7609784	2		=			
ANR	7609797	Identifier	extension		7609784	0					
ANR	7609798	InitializerList	"""pgx"""		7609784	1					
ANR	7609799	PrimaryExpression	"""pgx"""		7609784	0					
ANR	7609800	PrimaryExpression	"""pnm"""		7609784	1					
ANR	7609801	PrimaryExpression	"""pgm"""		7609784	2					
ANR	7609802	PrimaryExpression	"""ppm"""		7609784	3					
ANR	7609803	PrimaryExpression	"""pbm"""		7609784	4					
ANR	7609804	PrimaryExpression	"""pam"""		7609784	5					
ANR	7609805	PrimaryExpression	"""bmp"""		7609784	6					
ANR	7609806	PrimaryExpression	"""tif"""		7609784	7					
ANR	7609807	PrimaryExpression	"""raw"""		7609784	8					
ANR	7609808	PrimaryExpression	"""rawl"""		7609784	9					
ANR	7609809	PrimaryExpression	"""tga"""		7609784	10					
ANR	7609810	PrimaryExpression	"""png"""		7609784	11					
ANR	7609811	PrimaryExpression	"""j2k"""		7609784	12					
ANR	7609812	PrimaryExpression	"""jp2"""		7609784	13					
ANR	7609813	PrimaryExpression	"""j2c"""		7609784	14					
ANR	7609814	PrimaryExpression	"""jpc"""		7609784	15					
ANR	7609815	Statement	static	508:4:22762:22767	7609784	3	True				
ANR	7609816	IdentifierDeclStatement	"const int format [ ] = { PGX_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , BMP_DFMT , TIF_DFMT , RAW_DFMT , RAWL_DFMT , TGA_DFMT , PNG_DFMT , J2K_CFMT , JP2_CFMT , J2K_CFMT , J2K_CFMT } ;"	508:11:22769:22965	7609784	4	True				
ANR	7609817	IdentifierDecl	"format [ ] = { PGX_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , BMP_DFMT , TIF_DFMT , RAW_DFMT , RAWL_DFMT , TGA_DFMT , PNG_DFMT , J2K_CFMT , JP2_CFMT , J2K_CFMT , J2K_CFMT }"		7609784	0					
ANR	7609818	IdentifierDeclType	const int [ ]		7609784	0					
ANR	7609819	Identifier	format		7609784	1					
ANR	7609820	AssignmentExpression	"format [ ] = { PGX_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , PXM_DFMT , BMP_DFMT , TIF_DFMT , RAW_DFMT , RAWL_DFMT , TGA_DFMT , PNG_DFMT , J2K_CFMT , JP2_CFMT , J2K_CFMT , J2K_CFMT }"		7609784	2		=			
ANR	7609821	Identifier	format		7609784	0					
ANR	7609822	InitializerList	PGX_DFMT		7609784	1					
ANR	7609823	Identifier	PGX_DFMT		7609784	0					
ANR	7609824	Identifier	PXM_DFMT		7609784	1					
ANR	7609825	Identifier	PXM_DFMT		7609784	2					
ANR	7609826	Identifier	PXM_DFMT		7609784	3					
ANR	7609827	Identifier	PXM_DFMT		7609784	4					
ANR	7609828	Identifier	PXM_DFMT		7609784	5					
ANR	7609829	Identifier	BMP_DFMT		7609784	6					
ANR	7609830	Identifier	TIF_DFMT		7609784	7					
ANR	7609831	Identifier	RAW_DFMT		7609784	8					
ANR	7609832	Identifier	RAWL_DFMT		7609784	9					
ANR	7609833	Identifier	TGA_DFMT		7609784	10					
ANR	7609834	Identifier	PNG_DFMT		7609784	11					
ANR	7609835	Identifier	J2K_CFMT		7609784	12					
ANR	7609836	Identifier	JP2_CFMT		7609784	13					
ANR	7609837	Identifier	J2K_CFMT		7609784	14					
ANR	7609838	Identifier	J2K_CFMT		7609784	15					
ANR	7609839	IdentifierDeclStatement	"char * ext = strrchr ( filename , '.' ) ;"	511:4:22971:23006	7609784	5	True				
ANR	7609840	IdentifierDecl	"* ext = strrchr ( filename , '.' )"		7609784	0					
ANR	7609841	IdentifierDeclType	char *		7609784	0					
ANR	7609842	Identifier	ext		7609784	1					
ANR	7609843	AssignmentExpression	"* ext = strrchr ( filename , '.' )"		7609784	2		=			
ANR	7609844	Identifier	ext		7609784	0					
ANR	7609845	CallExpression	"strrchr ( filename , '.' )"		7609784	1					
ANR	7609846	Callee	strrchr		7609784	0					
ANR	7609847	Identifier	strrchr		7609784	0					
ANR	7609848	ArgumentList	filename		7609784	1					
ANR	7609849	Argument	filename		7609784	0					
ANR	7609850	Identifier	filename		7609784	0					
ANR	7609851	Argument	'.'		7609784	1					
ANR	7609852	PrimaryExpression	'.'		7609784	0					
ANR	7609853	IfStatement	if ( ext == NULL )		7609784	6					
ANR	7609854	Condition	ext == NULL	512:8:23016:23026	7609784	0	True				
ANR	7609855	EqualityExpression	ext == NULL		7609784	0		==			
ANR	7609856	Identifier	ext		7609784	0					
ANR	7609857	Identifier	NULL		7609784	1					
ANR	7609858	CompoundStatement		10:21:458:458	7609784	1					
ANR	7609859	ReturnStatement	return - 1 ;	513:8:23039:23048	7609784	0	True				
ANR	7609860	UnaryOperationExpression	- 1		7609784	0					
ANR	7609861	UnaryOperator	-		7609784	0					
ANR	7609862	PrimaryExpression	1		7609784	1					
ANR	7609863	ExpressionStatement	ext ++	515:4:23060:23065	7609784	7	True				
ANR	7609864	PostIncDecOperationExpression	ext ++		7609784	0					
ANR	7609865	Identifier	ext		7609784	0					
ANR	7609866	IncDec	++		7609784	1					
ANR	7609867	ForStatement	for ( i = 0 ; i < sizeof ( format ) / sizeof ( * format ) ; i ++ )		7609784	8					
ANR	7609868	ForInit	i = 0 ;	516:9:23076:23081	7609784	0	True				
ANR	7609869	AssignmentExpression	i = 0		7609784	0		=			
ANR	7609870	Identifier	i		7609784	0					
ANR	7609871	PrimaryExpression	0		7609784	1					
ANR	7609872	Condition	i < sizeof ( format ) / sizeof ( * format )	516:16:23083:23118	7609784	1	True				
ANR	7609873	RelationalExpression	i < sizeof ( format ) / sizeof ( * format )		7609784	0		<			
ANR	7609874	Identifier	i		7609784	0					
ANR	7609875	MultiplicativeExpression	sizeof ( format ) / sizeof ( * format )		7609784	1		/			
ANR	7609876	SizeofExpression	sizeof ( format )		7609784	0					
ANR	7609877	Sizeof	sizeof		7609784	0					
ANR	7609878	SizeofOperand	format		7609784	1					
ANR	7609879	SizeofExpression	sizeof ( * format )		7609784	1					
ANR	7609880	Sizeof	sizeof		7609784	0					
ANR	7609881	UnaryOperationExpression	* format		7609784	1					
ANR	7609882	UnaryOperator	*		7609784	0					
ANR	7609883	Identifier	format		7609784	1					
ANR	7609884	PostIncDecOperationExpression	i ++	516:54:23121:23123	7609784	2	True				
ANR	7609885	Identifier	i		7609784	0					
ANR	7609886	IncDec	++		7609784	1					
ANR	7609887	CompoundStatement		14:59:555:555	7609784	3					
ANR	7609888	IfStatement	"if ( strcasecmp ( ext , extension [ i ] ) == 0 )"		7609784	0					
ANR	7609889	Condition	"strcasecmp ( ext , extension [ i ] ) == 0"	517:12:23140:23173	7609784	0	True				
ANR	7609890	EqualityExpression	"strcasecmp ( ext , extension [ i ] ) == 0"		7609784	0		==			
ANR	7609891	CallExpression	"strcasecmp ( ext , extension [ i ] )"		7609784	0					
ANR	7609892	Callee	strcasecmp		7609784	0					
ANR	7609893	Identifier	strcasecmp		7609784	0					
ANR	7609894	ArgumentList	ext		7609784	1					
ANR	7609895	Argument	ext		7609784	0					
ANR	7609896	Identifier	ext		7609784	0					
ANR	7609897	Argument	extension [ i ]		7609784	1					
ANR	7609898	ArrayIndexing	extension [ i ]		7609784	0					
ANR	7609899	Identifier	extension		7609784	0					
ANR	7609900	Identifier	i		7609784	1					
ANR	7609901	PrimaryExpression	0		7609784	1					
ANR	7609902	CompoundStatement		15:48:605:605	7609784	1					
ANR	7609903	ReturnStatement	return format [ i ] ;	518:12:23190:23206	7609784	0	True				
ANR	7609904	ArrayIndexing	format [ i ]		7609784	0					
ANR	7609905	Identifier	format		7609784	0					
ANR	7609906	Identifier	i		7609784	1					
ANR	7609907	ReturnStatement	return - 1 ;	521:4:23228:23237	7609784	9	True				
ANR	7609908	UnaryOperationExpression	- 1		7609784	0					
ANR	7609909	UnaryOperator	-		7609784	0					
ANR	7609910	PrimaryExpression	1		7609784	1					
ANR	7609911	ReturnType	static int		7609784	1					
ANR	7609912	Identifier	get_file_format		7609784	2					
ANR	7609913	ParameterList	char * filename		7609784	3					
ANR	7609914	Parameter	char * filename	502:27:22554:22567	7609784	0	True				
ANR	7609915	ParameterType	char *		7609784	0					
ANR	7609916	Identifier	filename		7609784	1					
ANR	7609917	CFGEntryNode	ENTRY		7609784		True				
ANR	7609918	CFGExitNode	EXIT		7609784		True				
ANR	7609919	Symbol	TIF_DFMT		7609784						
ANR	7609920	Symbol	ext		7609784						
ANR	7609921	Symbol	PXM_DFMT		7609784						
ANR	7609922	Symbol	extension		7609784						
ANR	7609923	Symbol	J2K_CFMT		7609784						
ANR	7609924	Symbol	NULL		7609784						
ANR	7609925	Symbol	RAW_DFMT		7609784						
ANR	7609926	Symbol	RAWL_DFMT		7609784						
ANR	7609927	Symbol	format		7609784						
ANR	7609928	Symbol	BMP_DFMT		7609784						
ANR	7609929	Symbol	i		7609784						
ANR	7609930	Symbol	JP2_CFMT		7609784						
ANR	7609931	Symbol	filename		7609784						
ANR	7609932	Symbol	* i		7609784						
ANR	7609933	Symbol	* format		7609784						
ANR	7609934	Symbol	strrchr		7609784						
ANR	7609935	Symbol	TGA_DFMT		7609784						
ANR	7609936	Symbol	PNG_DFMT		7609784						
ANR	7609937	Symbol	* extension		7609784						
ANR	7609938	Symbol	PGX_DFMT		7609784						
ANR	7609939	Symbol	strcasecmp		7609784						
ANR	7609940	Function	get_file_name	524:0:23242:23339							
ANR	7609941	FunctionDef	get_file_name (char * name)		7609940	0					
ANR	7609942	CompoundStatement		525:0:23282:23339	7609940	0					
ANR	7609943	IdentifierDeclStatement	"char * fname = strtok ( name , ""."" ) ;"	526:4:23288:23319	7609940	0	True				
ANR	7609944	IdentifierDecl	"* fname = strtok ( name , ""."" )"		7609940	0					
ANR	7609945	IdentifierDeclType	char *		7609940	0					
ANR	7609946	Identifier	fname		7609940	1					
ANR	7609947	AssignmentExpression	"* fname = strtok ( name , ""."" )"		7609940	2		=			
ANR	7609948	Identifier	fname		7609940	0					
ANR	7609949	CallExpression	"strtok ( name , ""."" )"		7609940	1					
ANR	7609950	Callee	strtok		7609940	0					
ANR	7609951	Identifier	strtok		7609940	0					
ANR	7609952	ArgumentList	name		7609940	1					
ANR	7609953	Argument	name		7609940	0					
ANR	7609954	Identifier	name		7609940	0					
ANR	7609955	Argument	"""."""		7609940	1					
ANR	7609956	PrimaryExpression	"""."""		7609940	0					
ANR	7609957	ReturnStatement	return fname ;	527:4:23325:23337	7609940	1	True				
ANR	7609958	Identifier	fname		7609940	0					
ANR	7609959	ReturnType	static char *		7609940	1					
ANR	7609960	Identifier	get_file_name		7609940	2					
ANR	7609961	ParameterList	char * name		7609940	3					
ANR	7609962	Parameter	char * name	524:28:23270:23279	7609940	0	True				
ANR	7609963	ParameterType	char *		7609940	0					
ANR	7609964	Identifier	name		7609940	1					
ANR	7609965	CFGEntryNode	ENTRY		7609940		True				
ANR	7609966	CFGExitNode	EXIT		7609940		True				
ANR	7609967	Symbol	fname		7609940						
ANR	7609968	Symbol	name		7609940						
ANR	7609969	Symbol	strtok		7609940						
ANR	7609970	Function	get_next_file	530:0:23342:24653							
ANR	7609971	FunctionDef	"get_next_file (int imageno , dircnt_t * dirptr , img_fol_t * img_fol , opj_cparameters_t * parameters)"		7609970	0					
ANR	7609972	CompoundStatement		532:0:23476:24653	7609970	0					
ANR	7609973	IdentifierDeclStatement	"char image_filename [ OPJ_PATH_LEN ] , infilename [ OPJ_PATH_LEN ] , outfilename [ OPJ_PATH_LEN ] , temp_ofname [ OPJ_PATH_LEN ] ;"	533:4:23482:23604	7609970	0	True				
ANR	7609974	IdentifierDecl	image_filename [ OPJ_PATH_LEN ]		7609970	0					
ANR	7609975	IdentifierDeclType	char [ OPJ_PATH_LEN ]		7609970	0					
ANR	7609976	Identifier	image_filename		7609970	1					
ANR	7609977	Identifier	OPJ_PATH_LEN		7609970	2					
ANR	7609978	IdentifierDecl	infilename [ OPJ_PATH_LEN ]		7609970	1					
ANR	7609979	IdentifierDeclType	char [ OPJ_PATH_LEN ]		7609970	0					
ANR	7609980	Identifier	infilename		7609970	1					
ANR	7609981	Identifier	OPJ_PATH_LEN		7609970	2					
ANR	7609982	IdentifierDecl	outfilename [ OPJ_PATH_LEN ]		7609970	2					
ANR	7609983	IdentifierDeclType	char [ OPJ_PATH_LEN ]		7609970	0					
ANR	7609984	Identifier	outfilename		7609970	1					
ANR	7609985	Identifier	OPJ_PATH_LEN		7609970	2					
ANR	7609986	IdentifierDecl	temp_ofname [ OPJ_PATH_LEN ]		7609970	3					
ANR	7609987	IdentifierDeclType	char [ OPJ_PATH_LEN ]		7609970	0					
ANR	7609988	Identifier	temp_ofname		7609970	1					
ANR	7609989	Identifier	OPJ_PATH_LEN		7609970	2					
ANR	7609990	IdentifierDeclStatement	"char * temp_p , temp1 [ OPJ_PATH_LEN ] = """" ;"	535:4:23610:23648	7609970	1	True				
ANR	7609991	IdentifierDecl	* temp_p		7609970	0					
ANR	7609992	IdentifierDeclType	char *		7609970	0					
ANR	7609993	Identifier	temp_p		7609970	1					
ANR	7609994	IdentifierDecl	"temp1 [ OPJ_PATH_LEN ] = """""		7609970	1					
ANR	7609995	IdentifierDeclType	char [ OPJ_PATH_LEN ]		7609970	0					
ANR	7609996	Identifier	temp1		7609970	1					
ANR	7609997	Identifier	OPJ_PATH_LEN		7609970	2					
ANR	7609998	AssignmentExpression	"temp1 [ OPJ_PATH_LEN ] = """""		7609970	3		=			
ANR	7609999	Identifier	OPJ_PATH_LEN		7609970	0					
ANR	7610000	PrimaryExpression	""""""		7609970	1					
ANR	7610001	ExpressionStatement	"strcpy ( image_filename , dirptr -> filename [ imageno ] )"	537:4:23655:23704	7609970	2	True				
ANR	7610002	CallExpression	"strcpy ( image_filename , dirptr -> filename [ imageno ] )"		7609970	0					
ANR	7610003	Callee	strcpy		7609970	0					
ANR	7610004	Identifier	strcpy		7609970	0					
ANR	7610005	ArgumentList	image_filename		7609970	1					
ANR	7610006	Argument	image_filename		7609970	0					
ANR	7610007	Identifier	image_filename		7609970	0					
ANR	7610008	Argument	dirptr -> filename [ imageno ]		7609970	1					
ANR	7610009	ArrayIndexing	dirptr -> filename [ imageno ]		7609970	0					
ANR	7610010	PtrMemberAccess	dirptr -> filename		7609970	0					
ANR	7610011	Identifier	dirptr		7609970	0					
ANR	7610012	Identifier	filename		7609970	1					
ANR	7610013	Identifier	imageno		7609970	1					
ANR	7610014	ExpressionStatement	"fprintf ( stderr , ""File Number %d \\""%s\\""\\n"" , imageno , image_filename )"	538:4:23710:23777	7609970	3	True				
ANR	7610015	CallExpression	"fprintf ( stderr , ""File Number %d \\""%s\\""\\n"" , imageno , image_filename )"		7609970	0					
ANR	7610016	Callee	fprintf		7609970	0					
ANR	7610017	Identifier	fprintf		7609970	0					
ANR	7610018	ArgumentList	stderr		7609970	1					
ANR	7610019	Argument	stderr		7609970	0					
ANR	7610020	Identifier	stderr		7609970	0					
ANR	7610021	Argument	"""File Number %d \\""%s\\""\\n"""		7609970	1					
ANR	7610022	PrimaryExpression	"""File Number %d \\""%s\\""\\n"""		7609970	0					
ANR	7610023	Argument	imageno		7609970	2					
ANR	7610024	Identifier	imageno		7609970	0					
ANR	7610025	Argument	image_filename		7609970	3					
ANR	7610026	Identifier	image_filename		7609970	0					
ANR	7610027	ExpressionStatement	parameters -> decod_format = get_file_format ( image_filename )	539:4:23783:23841	7609970	4	True				
ANR	7610028	AssignmentExpression	parameters -> decod_format = get_file_format ( image_filename )		7609970	0		=			
ANR	7610029	PtrMemberAccess	parameters -> decod_format		7609970	0					
ANR	7610030	Identifier	parameters		7609970	0					
ANR	7610031	Identifier	decod_format		7609970	1					
ANR	7610032	CallExpression	get_file_format ( image_filename )		7609970	1					
ANR	7610033	Callee	get_file_format		7609970	0					
ANR	7610034	Identifier	get_file_format		7609970	0					
ANR	7610035	ArgumentList	image_filename		7609970	1					
ANR	7610036	Argument	image_filename		7609970	0					
ANR	7610037	Identifier	image_filename		7609970	0					
ANR	7610038	IfStatement	if ( parameters -> decod_format == - 1 )		7609970	5					
ANR	7610039	Condition	parameters -> decod_format == - 1	540:8:23851:23880	7609970	0	True				
ANR	7610040	EqualityExpression	parameters -> decod_format == - 1		7609970	0		==			
ANR	7610041	PtrMemberAccess	parameters -> decod_format		7609970	0					
ANR	7610042	Identifier	parameters		7609970	0					
ANR	7610043	Identifier	decod_format		7609970	1					
ANR	7610044	UnaryOperationExpression	- 1		7609970	1					
ANR	7610045	UnaryOperator	-		7609970	0					
ANR	7610046	PrimaryExpression	1		7609970	1					
ANR	7610047	CompoundStatement		9:40:406:406	7609970	1					
ANR	7610048	ReturnStatement	return 1 ;	541:8:23893:23901	7609970	0	True				
ANR	7610049	PrimaryExpression	1		7609970	0					
ANR	7610050	ExpressionStatement	"sprintf ( infilename , ""%s/%s"" , img_fol -> imgdirpath , image_filename )"	543:4:23913:23978	7609970	6	True				
ANR	7610051	CallExpression	"sprintf ( infilename , ""%s/%s"" , img_fol -> imgdirpath , image_filename )"		7609970	0					
ANR	7610052	Callee	sprintf		7609970	0					
ANR	7610053	Identifier	sprintf		7609970	0					
ANR	7610054	ArgumentList	infilename		7609970	1					
ANR	7610055	Argument	infilename		7609970	0					
ANR	7610056	Identifier	infilename		7609970	0					
ANR	7610057	Argument	"""%s/%s"""		7609970	1					
ANR	7610058	PrimaryExpression	"""%s/%s"""		7609970	0					
ANR	7610059	Argument	img_fol -> imgdirpath		7609970	2					
ANR	7610060	PtrMemberAccess	img_fol -> imgdirpath		7609970	0					
ANR	7610061	Identifier	img_fol		7609970	0					
ANR	7610062	Identifier	imgdirpath		7609970	1					
ANR	7610063	Argument	image_filename		7609970	3					
ANR	7610064	Identifier	image_filename		7609970	0					
ANR	7610065	IfStatement	"if ( opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infilename ) != 0 )"		7609970	7					
ANR	7610066	Condition	"opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infilename ) != 0"	544:8:23988:24085	7609970	0	True				
ANR	7610067	EqualityExpression	"opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infilename ) != 0"		7609970	0		!=			
ANR	7610068	CallExpression	"opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infilename )"		7609970	0					
ANR	7610069	Callee	opj_strcpy_s		7609970	0					
ANR	7610070	Identifier	opj_strcpy_s		7609970	0					
ANR	7610071	ArgumentList	parameters -> infile		7609970	1					
ANR	7610072	Argument	parameters -> infile		7609970	0					
ANR	7610073	PtrMemberAccess	parameters -> infile		7609970	0					
ANR	7610074	Identifier	parameters		7609970	0					
ANR	7610075	Identifier	infile		7609970	1					
ANR	7610076	Argument	sizeof ( parameters -> infile )		7609970	1					
ANR	7610077	SizeofExpression	sizeof ( parameters -> infile )		7609970	0					
ANR	7610078	Sizeof	sizeof		7609970	0					
ANR	7610079	PtrMemberAccess	parameters -> infile		7609970	1					
ANR	7610080	Identifier	parameters		7609970	0					
ANR	7610081	Identifier	infile		7609970	1					
ANR	7610082	Argument	infilename		7609970	2					
ANR	7610083	Identifier	infilename		7609970	0					
ANR	7610084	PrimaryExpression	0		7609970	1					
ANR	7610085	CompoundStatement		14:39:611:611	7609970	1					
ANR	7610086	ReturnStatement	return 1 ;	546:8:24098:24106	7609970	0	True				
ANR	7610087	PrimaryExpression	1		7609970	0					
ANR	7610088	ExpressionStatement	"strcpy ( temp_ofname , get_file_name ( image_filename ) )"	550:4:24143:24193	7609970	8	True				
ANR	7610089	CallExpression	"strcpy ( temp_ofname , get_file_name ( image_filename ) )"		7609970	0					
ANR	7610090	Callee	strcpy		7609970	0					
ANR	7610091	Identifier	strcpy		7609970	0					
ANR	7610092	ArgumentList	temp_ofname		7609970	1					
ANR	7610093	Argument	temp_ofname		7609970	0					
ANR	7610094	Identifier	temp_ofname		7609970	0					
ANR	7610095	Argument	get_file_name ( image_filename )		7609970	1					
ANR	7610096	CallExpression	get_file_name ( image_filename )		7609970	0					
ANR	7610097	Callee	get_file_name		7609970	0					
ANR	7610098	Identifier	get_file_name		7609970	0					
ANR	7610099	ArgumentList	image_filename		7609970	1					
ANR	7610100	Argument	image_filename		7609970	0					
ANR	7610101	Identifier	image_filename		7609970	0					
ANR	7610102	WhileStatement	"while ( ( temp_p = strtok ( NULL , ""."" ) ) != NULL )"		7609970	9					
ANR	7610103	Condition	"( temp_p = strtok ( NULL , ""."" ) ) != NULL"	551:11:24206:24241	7609970	0	True				
ANR	7610104	EqualityExpression	"( temp_p = strtok ( NULL , ""."" ) ) != NULL"		7609970	0		!=			
ANR	7610105	AssignmentExpression	"temp_p = strtok ( NULL , ""."" )"		7609970	0		=			
ANR	7610106	Identifier	temp_p		7609970	0					
ANR	7610107	CallExpression	"strtok ( NULL , ""."" )"		7609970	1					
ANR	7610108	Callee	strtok		7609970	0					
ANR	7610109	Identifier	strtok		7609970	0					
ANR	7610110	ArgumentList	NULL		7609970	1					
ANR	7610111	Argument	NULL		7609970	0					
ANR	7610112	Identifier	NULL		7609970	0					
ANR	7610113	Argument	"""."""		7609970	1					
ANR	7610114	PrimaryExpression	"""."""		7609970	0					
ANR	7610115	Identifier	NULL		7609970	1					
ANR	7610116	CompoundStatement		20:49:767:767	7609970	1					
ANR	7610117	ExpressionStatement	"strcat ( temp_ofname , temp1 )"	552:8:24254:24280	7609970	0	True				
ANR	7610118	CallExpression	"strcat ( temp_ofname , temp1 )"		7609970	0					
ANR	7610119	Callee	strcat		7609970	0					
ANR	7610120	Identifier	strcat		7609970	0					
ANR	7610121	ArgumentList	temp_ofname		7609970	1					
ANR	7610122	Argument	temp_ofname		7609970	0					
ANR	7610123	Identifier	temp_ofname		7609970	0					
ANR	7610124	Argument	temp1		7609970	1					
ANR	7610125	Identifier	temp1		7609970	0					
ANR	7610126	ExpressionStatement	"sprintf ( temp1 , "".%s"" , temp_p )"	553:8:24290:24319	7609970	1	True				
ANR	7610127	CallExpression	"sprintf ( temp1 , "".%s"" , temp_p )"		7609970	0					
ANR	7610128	Callee	sprintf		7609970	0					
ANR	7610129	Identifier	sprintf		7609970	0					
ANR	7610130	ArgumentList	temp1		7609970	1					
ANR	7610131	Argument	temp1		7609970	0					
ANR	7610132	Identifier	temp1		7609970	0					
ANR	7610133	Argument	""".%s"""		7609970	1					
ANR	7610134	PrimaryExpression	""".%s"""		7609970	0					
ANR	7610135	Argument	temp_p		7609970	2					
ANR	7610136	Identifier	temp_p		7609970	0					
ANR	7610137	IfStatement	if ( img_fol -> set_out_format == 1 )		7609970	10					
ANR	7610138	Condition	img_fol -> set_out_format == 1	555:8:24335:24362	7609970	0	True				
ANR	7610139	EqualityExpression	img_fol -> set_out_format == 1		7609970	0		==			
ANR	7610140	PtrMemberAccess	img_fol -> set_out_format		7609970	0					
ANR	7610141	Identifier	img_fol		7609970	0					
ANR	7610142	Identifier	set_out_format		7609970	1					
ANR	7610143	PrimaryExpression	1		7609970	1					
ANR	7610144	CompoundStatement		24:38:888:888	7609970	1					
ANR	7610145	ExpressionStatement	"sprintf ( outfilename , ""%s/%s.%s"" , img_fol -> imgdirpath , temp_ofname , img_fol -> out_format )"	556:8:24375:24478	7609970	0	True				
ANR	7610146	CallExpression	"sprintf ( outfilename , ""%s/%s.%s"" , img_fol -> imgdirpath , temp_ofname , img_fol -> out_format )"		7609970	0					
ANR	7610147	Callee	sprintf		7609970	0					
ANR	7610148	Identifier	sprintf		7609970	0					
ANR	7610149	ArgumentList	outfilename		7609970	1					
ANR	7610150	Argument	outfilename		7609970	0					
ANR	7610151	Identifier	outfilename		7609970	0					
ANR	7610152	Argument	"""%s/%s.%s"""		7609970	1					
ANR	7610153	PrimaryExpression	"""%s/%s.%s"""		7609970	0					
ANR	7610154	Argument	img_fol -> imgdirpath		7609970	2					
ANR	7610155	PtrMemberAccess	img_fol -> imgdirpath		7609970	0					
ANR	7610156	Identifier	img_fol		7609970	0					
ANR	7610157	Identifier	imgdirpath		7609970	1					
ANR	7610158	Argument	temp_ofname		7609970	3					
ANR	7610159	Identifier	temp_ofname		7609970	0					
ANR	7610160	Argument	img_fol -> out_format		7609970	4					
ANR	7610161	PtrMemberAccess	img_fol -> out_format		7609970	0					
ANR	7610162	Identifier	img_fol		7609970	0					
ANR	7610163	Identifier	out_format		7609970	1					
ANR	7610164	IfStatement	"if ( opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfilename ) != 0 )"		7609970	1					
ANR	7610165	Condition	"opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfilename ) != 0"	558:12:24492:24596	7609970	0	True				
ANR	7610166	EqualityExpression	"opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfilename ) != 0"		7609970	0		!=			
ANR	7610167	CallExpression	"opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfilename )"		7609970	0					
ANR	7610168	Callee	opj_strcpy_s		7609970	0					
ANR	7610169	Identifier	opj_strcpy_s		7609970	0					
ANR	7610170	ArgumentList	parameters -> outfile		7609970	1					
ANR	7610171	Argument	parameters -> outfile		7609970	0					
ANR	7610172	PtrMemberAccess	parameters -> outfile		7609970	0					
ANR	7610173	Identifier	parameters		7609970	0					
ANR	7610174	Identifier	outfile		7609970	1					
ANR	7610175	Argument	sizeof ( parameters -> outfile )		7609970	1					
ANR	7610176	SizeofExpression	sizeof ( parameters -> outfile )		7609970	0					
ANR	7610177	Sizeof	sizeof		7609970	0					
ANR	7610178	PtrMemberAccess	parameters -> outfile		7609970	1					
ANR	7610179	Identifier	parameters		7609970	0					
ANR	7610180	Identifier	outfile		7609970	1					
ANR	7610181	Argument	outfilename		7609970	2					
ANR	7610182	Identifier	outfilename		7609970	0					
ANR	7610183	PrimaryExpression	0		7609970	1					
ANR	7610184	CompoundStatement		28:44:1122:1122	7609970	1					
ANR	7610185	ReturnStatement	return 1 ;	560:12:24613:24621	7609970	0	True				
ANR	7610186	PrimaryExpression	1		7609970	0					
ANR	7610187	ReturnStatement	return 0 ;	563:4:24643:24651	7609970	11	True				
ANR	7610188	PrimaryExpression	0		7609970	0					
ANR	7610189	ReturnType	static char		7609970	1					
ANR	7610190	Identifier	get_next_file		7609970	2					
ANR	7610191	ParameterList	"int imageno , dircnt_t * dirptr , img_fol_t * img_fol , opj_cparameters_t * parameters"		7609970	3					
ANR	7610192	Parameter	int imageno	530:26:23368:23378	7609970	0	True				
ANR	7610193	ParameterType	int		7609970	0					
ANR	7610194	Identifier	imageno		7609970	1					
ANR	7610195	Parameter	dircnt_t * dirptr	530:39:23381:23396	7609970	1	True				
ANR	7610196	ParameterType	dircnt_t *		7609970	0					
ANR	7610197	Identifier	dirptr		7609970	1					
ANR	7610198	Parameter	img_fol_t * img_fol	530:57:23399:23416	7609970	2	True				
ANR	7610199	ParameterType	img_fol_t *		7609970	0					
ANR	7610200	Identifier	img_fol		7609970	1					
ANR	7610201	Parameter	opj_cparameters_t * parameters	531:26:23445:23473	7609970	3	True				
ANR	7610202	ParameterType	opj_cparameters_t *		7609970	0					
ANR	7610203	Identifier	parameters		7609970	1					
ANR	7610204	CFGEntryNode	ENTRY		7609970		True				
ANR	7610205	CFGExitNode	EXIT		7609970		True				
ANR	7610206	Symbol	img_fol		7609970						
ANR	7610207	Symbol	temp_ofname		7609970						
ANR	7610208	Symbol	image_filename		7609970						
ANR	7610209	Symbol	parameters -> outfile		7609970						
ANR	7610210	Symbol	temp1		7609970						
ANR	7610211	Symbol	dirptr -> filename		7609970						
ANR	7610212	Symbol	img_fol -> out_format		7609970						
ANR	7610213	Symbol	infilename		7609970						
ANR	7610214	Symbol	* * dirptr		7609970						
ANR	7610215	Symbol	dirptr		7609970						
ANR	7610216	Symbol	img_fol -> imgdirpath		7609970						
ANR	7610217	Symbol	NULL		7609970						
ANR	7610218	Symbol	outfilename		7609970						
ANR	7610219	Symbol	get_file_format		7609970						
ANR	7610220	Symbol	OPJ_PATH_LEN		7609970						
ANR	7610221	Symbol	opj_strcpy_s		7609970						
ANR	7610222	Symbol	imageno		7609970						
ANR	7610223	Symbol	strtok		7609970						
ANR	7610224	Symbol	* dirptr -> filename		7609970						
ANR	7610225	Symbol	stderr		7609970						
ANR	7610226	Symbol	parameters -> infile		7609970						
ANR	7610227	Symbol	* dirptr		7609970						
ANR	7610228	Symbol	parameters -> decod_format		7609970						
ANR	7610229	Symbol	temp_p		7609970						
ANR	7610230	Symbol	* imageno		7609970						
ANR	7610231	Symbol	* parameters		7609970						
ANR	7610232	Symbol	img_fol -> set_out_format		7609970						
ANR	7610233	Symbol	* img_fol		7609970						
ANR	7610234	Symbol	parameters		7609970						
ANR	7610235	Symbol	get_file_name		7609970						
ANR	7610236	Function	parse_cmdline_encoder	568:0:24748:67182							
ANR	7610237	FunctionDef	"parse_cmdline_encoder (int argc , char * * argv , opj_cparameters_t * parameters , img_fol_t * img_fol , raw_cparameters_t * raw_cp , char * indexfilename , size_t indexfilename_size)"		7610236	0					
ANR	7610238	CompoundStatement		572:0:25029:67182	7610236	0					
ANR	7610239	IdentifierDeclStatement	"OPJ_UINT32 i , j ;"	573:4:25035:25050	7610236	0	True				
ANR	7610240	IdentifierDecl	i		7610236	0					
ANR	7610241	IdentifierDeclType	OPJ_UINT32		7610236	0					
ANR	7610242	Identifier	i		7610236	1					
ANR	7610243	IdentifierDecl	j		7610236	1					
ANR	7610244	IdentifierDeclType	OPJ_UINT32		7610236	0					
ANR	7610245	Identifier	j		7610236	1					
ANR	7610246	IdentifierDeclStatement	"int totlen , c ;"	574:4:25056:25069	7610236	1	True				
ANR	7610247	IdentifierDecl	totlen		7610236	0					
ANR	7610248	IdentifierDeclType	int		7610236	0					
ANR	7610249	Identifier	totlen		7610236	1					
ANR	7610250	IdentifierDecl	c		7610236	1					
ANR	7610251	IdentifierDeclType	int		7610236	0					
ANR	7610252	Identifier	c		7610236	1					
ANR	7610253	IdentifierDeclStatement	"opj_option_t long_option [ ] = { { ""cinema2K"" , REQ_ARG , NULL , 'w' } , { ""cinema4K"" , NO_ARG , NULL , 'y' } , { ""ImgDir"" , REQ_ARG , NULL , 'z' } , { ""TP"" , REQ_ARG , NULL , 'u' } , { ""SOP"" , NO_ARG , NULL , 'S' } , { ""EPH"" , NO_ARG , NULL , 'E' } , { ""OutFor"" , REQ_ARG , NULL , 'O' } , { ""POC"" , REQ_ARG , NULL , 'P' } , { ""ROI"" , REQ_ARG , NULL , 'R' } , { ""jpip"" , NO_ARG , NULL , 'J' } , { ""mct"" , REQ_ARG , NULL , 'Y' } } ;"	575:4:25075:25529	7610236	2	True				
ANR	7610254	IdentifierDecl	"long_option [ ] = { { ""cinema2K"" , REQ_ARG , NULL , 'w' } , { ""cinema4K"" , NO_ARG , NULL , 'y' } , { ""ImgDir"" , REQ_ARG , NULL , 'z' } , { ""TP"" , REQ_ARG , NULL , 'u' } , { ""SOP"" , NO_ARG , NULL , 'S' } , { ""EPH"" , NO_ARG , NULL , 'E' } , { ""OutFor"" , REQ_ARG , NULL , 'O' } , { ""POC"" , REQ_ARG , NULL , 'P' } , { ""ROI"" , REQ_ARG , NULL , 'R' } , { ""jpip"" , NO_ARG , NULL , 'J' } , { ""mct"" , REQ_ARG , NULL , 'Y' } }"		7610236	0					
ANR	7610255	IdentifierDeclType	opj_option_t [ ]		7610236	0					
ANR	7610256	Identifier	long_option		7610236	1					
ANR	7610257	AssignmentExpression	"long_option [ ] = { { ""cinema2K"" , REQ_ARG , NULL , 'w' } , { ""cinema4K"" , NO_ARG , NULL , 'y' } , { ""ImgDir"" , REQ_ARG , NULL , 'z' } , { ""TP"" , REQ_ARG , NULL , 'u' } , { ""SOP"" , NO_ARG , NULL , 'S' } , { ""EPH"" , NO_ARG , NULL , 'E' } , { ""OutFor"" , REQ_ARG , NULL , 'O' } , { ""POC"" , REQ_ARG , NULL , 'P' } , { ""ROI"" , REQ_ARG , NULL , 'R' } , { ""jpip"" , NO_ARG , NULL , 'J' } , { ""mct"" , REQ_ARG , NULL , 'Y' } }"		7610236	2		=			
ANR	7610258	Identifier	long_option		7610236	0					
ANR	7610259	InitializerList	"""cinema2K"""		7610236	1					
ANR	7610260	InitializerList	"""cinema2K"""		7610236	0					
ANR	7610261	PrimaryExpression	"""cinema2K"""		7610236	0					
ANR	7610262	Identifier	REQ_ARG		7610236	1					
ANR	7610263	Identifier	NULL		7610236	2					
ANR	7610264	PrimaryExpression	'w'		7610236	3					
ANR	7610265	InitializerList	"""cinema4K"""		7610236	1					
ANR	7610266	PrimaryExpression	"""cinema4K"""		7610236	0					
ANR	7610267	Identifier	NO_ARG		7610236	1					
ANR	7610268	Identifier	NULL		7610236	2					
ANR	7610269	PrimaryExpression	'y'		7610236	3					
ANR	7610270	InitializerList	"""ImgDir"""		7610236	2					
ANR	7610271	PrimaryExpression	"""ImgDir"""		7610236	0					
ANR	7610272	Identifier	REQ_ARG		7610236	1					
ANR	7610273	Identifier	NULL		7610236	2					
ANR	7610274	PrimaryExpression	'z'		7610236	3					
ANR	7610275	InitializerList	"""TP"""		7610236	3					
ANR	7610276	PrimaryExpression	"""TP"""		7610236	0					
ANR	7610277	Identifier	REQ_ARG		7610236	1					
ANR	7610278	Identifier	NULL		7610236	2					
ANR	7610279	PrimaryExpression	'u'		7610236	3					
ANR	7610280	InitializerList	"""SOP"""		7610236	4					
ANR	7610281	PrimaryExpression	"""SOP"""		7610236	0					
ANR	7610282	Identifier	NO_ARG		7610236	1					
ANR	7610283	Identifier	NULL		7610236	2					
ANR	7610284	PrimaryExpression	'S'		7610236	3					
ANR	7610285	InitializerList	"""EPH"""		7610236	5					
ANR	7610286	PrimaryExpression	"""EPH"""		7610236	0					
ANR	7610287	Identifier	NO_ARG		7610236	1					
ANR	7610288	Identifier	NULL		7610236	2					
ANR	7610289	PrimaryExpression	'E'		7610236	3					
ANR	7610290	InitializerList	"""OutFor"""		7610236	6					
ANR	7610291	PrimaryExpression	"""OutFor"""		7610236	0					
ANR	7610292	Identifier	REQ_ARG		7610236	1					
ANR	7610293	Identifier	NULL		7610236	2					
ANR	7610294	PrimaryExpression	'O'		7610236	3					
ANR	7610295	InitializerList	"""POC"""		7610236	7					
ANR	7610296	PrimaryExpression	"""POC"""		7610236	0					
ANR	7610297	Identifier	REQ_ARG		7610236	1					
ANR	7610298	Identifier	NULL		7610236	2					
ANR	7610299	PrimaryExpression	'P'		7610236	3					
ANR	7610300	InitializerList	"""ROI"""		7610236	8					
ANR	7610301	PrimaryExpression	"""ROI"""		7610236	0					
ANR	7610302	Identifier	REQ_ARG		7610236	1					
ANR	7610303	Identifier	NULL		7610236	2					
ANR	7610304	PrimaryExpression	'R'		7610236	3					
ANR	7610305	InitializerList	"""jpip"""		7610236	9					
ANR	7610306	PrimaryExpression	"""jpip"""		7610236	0					
ANR	7610307	Identifier	NO_ARG		7610236	1					
ANR	7610308	Identifier	NULL		7610236	2					
ANR	7610309	PrimaryExpression	'J'		7610236	3					
ANR	7610310	InitializerList	"""mct"""		7610236	10					
ANR	7610311	PrimaryExpression	"""mct"""		7610236	0					
ANR	7610312	Identifier	REQ_ARG		7610236	1					
ANR	7610313	Identifier	NULL		7610236	2					
ANR	7610314	PrimaryExpression	'Y'		7610236	3					
ANR	7610315	Statement	const	590:4:25569:25573	7610236	3	True				
ANR	7610316	Statement	char	590:10:25575:25578	7610236	4	True				
ANR	7610317	Statement	optlist	590:15:25580:25586	7610236	5	True				
ANR	7610318	Statement	[	590:22:25587:25587	7610236	6	True				
ANR	7610319	Statement	]	590:23:25588:25588	7610236	7	True				
ANR	7610320	Statement	=	590:25:25590:25590	7610236	8	True				
ANR	7610321	Statement	"""i:o:r:q:n:b:c:t:p:s:SEM:x:R:d:T:If:P:C:F:u:JY:"""	590:27:25592:25639	7610236	9	True				
ANR	7610322	Statement	"""W:"""	592:27:25684:25687	7610236	10	True				
ANR	7610323	ExpressionStatement	"""h"""	594:27:25738:25741	7610236	11	True				
ANR	7610324	PrimaryExpression	"""h"""		7610236	0					
ANR	7610325	ExpressionStatement	totlen = sizeof ( long_option )	596:4:25748:25776	7610236	12	True				
ANR	7610326	AssignmentExpression	totlen = sizeof ( long_option )		7610236	0		=			
ANR	7610327	Identifier	totlen		7610236	0					
ANR	7610328	SizeofExpression	sizeof ( long_option )		7610236	1					
ANR	7610329	Sizeof	sizeof		7610236	0					
ANR	7610330	SizeofOperand	long_option		7610236	1					
ANR	7610331	ExpressionStatement	img_fol -> set_out_format = 0	597:4:25782:25809	7610236	13	True				
ANR	7610332	AssignmentExpression	img_fol -> set_out_format = 0		7610236	0		=			
ANR	7610333	PtrMemberAccess	img_fol -> set_out_format		7610236	0					
ANR	7610334	Identifier	img_fol		7610236	0					
ANR	7610335	Identifier	set_out_format		7610236	1					
ANR	7610336	PrimaryExpression	0		7610236	1					
ANR	7610337	ExpressionStatement	raw_cp -> rawWidth = 0	598:4:25815:25835	7610236	14	True				
ANR	7610338	AssignmentExpression	raw_cp -> rawWidth = 0		7610236	0		=			
ANR	7610339	PtrMemberAccess	raw_cp -> rawWidth		7610236	0					
ANR	7610340	Identifier	raw_cp		7610236	0					
ANR	7610341	Identifier	rawWidth		7610236	1					
ANR	7610342	PrimaryExpression	0		7610236	1					
ANR	7610343	DoStatement	do		7610236	15					
ANR	7610344	CompoundStatement		29:7:815:815	7610236	0					
ANR	7610345	ExpressionStatement	"c = opj_getopt_long ( argc , argv , optlist , long_option , totlen )"	601:8:25855:25916	7610236	0	True				
ANR	7610346	AssignmentExpression	"c = opj_getopt_long ( argc , argv , optlist , long_option , totlen )"		7610236	0		=			
ANR	7610347	Identifier	c		7610236	0					
ANR	7610348	CallExpression	"opj_getopt_long ( argc , argv , optlist , long_option , totlen )"		7610236	1					
ANR	7610349	Callee	opj_getopt_long		7610236	0					
ANR	7610350	Identifier	opj_getopt_long		7610236	0					
ANR	7610351	ArgumentList	argc		7610236	1					
ANR	7610352	Argument	argc		7610236	0					
ANR	7610353	Identifier	argc		7610236	0					
ANR	7610354	Argument	argv		7610236	1					
ANR	7610355	Identifier	argv		7610236	0					
ANR	7610356	Argument	optlist		7610236	2					
ANR	7610357	Identifier	optlist		7610236	0					
ANR	7610358	Argument	long_option		7610236	3					
ANR	7610359	Identifier	long_option		7610236	0					
ANR	7610360	Argument	totlen		7610236	4					
ANR	7610361	Identifier	totlen		7610236	0					
ANR	7610362	IfStatement	if ( c == - 1 )		7610236	1					
ANR	7610363	Condition	c == - 1	602:12:25930:25936	7610236	0	True				
ANR	7610364	EqualityExpression	c == - 1		7610236	0		==			
ANR	7610365	Identifier	c		7610236	0					
ANR	7610366	UnaryOperationExpression	- 1		7610236	1					
ANR	7610367	UnaryOperator	-		7610236	0					
ANR	7610368	PrimaryExpression	1		7610236	1					
ANR	7610369	CompoundStatement		31:21:909:909	7610236	1					
ANR	7610370	BreakStatement	break ;	603:12:25953:25958	7610236	0	True				
ANR	7610371	SwitchStatement	switch ( c )		7610236	2					
ANR	7610372	Condition	c	605:16:25986:25986	7610236	0	True				
ANR	7610373	Identifier	c		7610236	0					
ANR	7610374	CompoundStatement		34:19:959:959	7610236	1					
ANR	7610375	Label	case 'i' :	606:8:25999:26007	7610236	0	True				
ANR	7610376	CompoundStatement		36:12:1018:1043	7610236	1					
ANR	7610377	IdentifierDeclStatement	char * infile = opj_optarg ;	607:12:26048:26073	7610236	0	True				
ANR	7610378	IdentifierDecl	* infile = opj_optarg		7610236	0					
ANR	7610379	IdentifierDeclType	char *		7610236	0					
ANR	7610380	Identifier	infile		7610236	1					
ANR	7610381	AssignmentExpression	* infile = opj_optarg		7610236	2		=			
ANR	7610382	Identifier	opj_optarg		7610236	0					
ANR	7610383	Identifier	opj_optarg		7610236	1					
ANR	7610384	ExpressionStatement	parameters -> decod_format = get_file_format ( infile )	608:12:26087:26137	7610236	1	True				
ANR	7610385	AssignmentExpression	parameters -> decod_format = get_file_format ( infile )		7610236	0		=			
ANR	7610386	PtrMemberAccess	parameters -> decod_format		7610236	0					
ANR	7610387	Identifier	parameters		7610236	0					
ANR	7610388	Identifier	decod_format		7610236	1					
ANR	7610389	CallExpression	get_file_format ( infile )		7610236	1					
ANR	7610390	Callee	get_file_format		7610236	0					
ANR	7610391	Identifier	get_file_format		7610236	0					
ANR	7610392	ArgumentList	infile		7610236	1					
ANR	7610393	Argument	infile		7610236	0					
ANR	7610394	Identifier	infile		7610236	0					
ANR	7610395	SwitchStatement	switch ( parameters -> decod_format )		7610236	2					
ANR	7610396	Condition	parameters -> decod_format	609:20:26159:26182	7610236	0	True				
ANR	7610397	PtrMemberAccess	parameters -> decod_format		7610236	0					
ANR	7610398	Identifier	parameters		7610236	0					
ANR	7610399	Identifier	decod_format		7610236	1					
ANR	7610400	CompoundStatement		38:46:1155:1155	7610236	1					
ANR	7610401	Label	case PGX_DFMT :	610:12:26199:26212	7610236	0	True				
ANR	7610402	Identifier	PGX_DFMT		7610236	0					
ANR	7610403	Label	case PXM_DFMT :	611:12:26226:26239	7610236	1	True				
ANR	7610404	Identifier	PXM_DFMT		7610236	0					
ANR	7610405	Label	case BMP_DFMT :	612:12:26253:26266	7610236	2	True				
ANR	7610406	Identifier	BMP_DFMT		7610236	0					
ANR	7610407	Label	case TIF_DFMT :	613:12:26280:26293	7610236	3	True				
ANR	7610408	Identifier	TIF_DFMT		7610236	0					
ANR	7610409	Label	case RAW_DFMT :	614:12:26307:26320	7610236	4	True				
ANR	7610410	Identifier	RAW_DFMT		7610236	0					
ANR	7610411	Label	case RAWL_DFMT :	615:12:26334:26348	7610236	5	True				
ANR	7610412	Identifier	RAWL_DFMT		7610236	0					
ANR	7610413	Label	case TGA_DFMT :	616:12:26362:26375	7610236	6	True				
ANR	7610414	Identifier	TGA_DFMT		7610236	0					
ANR	7610415	Label	case PNG_DFMT :	617:12:26389:26402	7610236	7	True				
ANR	7610416	Identifier	PNG_DFMT		7610236	0					
ANR	7610417	BreakStatement	break ;	618:16:26420:26425	7610236	8	True				
ANR	7610418	Label	default :	619:12:26439:26446	7610236	9	True				
ANR	7610419	Identifier	default		7610236	0					
ANR	7610420	Statement	fprintf	620:16:26464:26470	7610236	10	True				
ANR	7610421	Statement	(	620:23:26471:26471	7610236	11	True				
ANR	7610422	Statement	stderr	620:24:26472:26477	7610236	12	True				
ANR	7610423	Statement	","	620:30:26478:26478	7610236	13	True				
ANR	7610424	Statement	"""[ERROR] Unknown input file format: %s \\n"""	621:24:26504:26545	7610236	14	True				
ANR	7610425	Statement	"""        Known file formats are *.pnm, *.pgm, *.ppm, *.pgx, *png, *.bmp, *.tif, *.raw or *.tga\\n"""	622:24:26571:26667	7610236	15	True				
ANR	7610426	Statement	","	622:121:26668:26668	7610236	16	True				
ANR	7610427	Statement	infile	623:24:26694:26699	7610236	17	True				
ANR	7610428	Statement	)	623:30:26700:26700	7610236	18	True				
ANR	7610429	ExpressionStatement		623:31:26701:26701	7610236	19	True				
ANR	7610430	ReturnStatement	return 1 ;	624:16:26719:26727	7610236	20	True				
ANR	7610431	PrimaryExpression	1		7610236	0					
ANR	7610432	IfStatement	"if ( opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infile ) != 0 )"		7610236	3					
ANR	7610433	Condition	"opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infile ) != 0"	626:16:26759:26831	7610236	0	True				
ANR	7610434	EqualityExpression	"opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infile ) != 0"		7610236	0		!=			
ANR	7610435	CallExpression	"opj_strcpy_s ( parameters -> infile , sizeof ( parameters -> infile ) , infile )"		7610236	0					
ANR	7610436	Callee	opj_strcpy_s		7610236	0					
ANR	7610437	Identifier	opj_strcpy_s		7610236	0					
ANR	7610438	ArgumentList	parameters -> infile		7610236	1					
ANR	7610439	Argument	parameters -> infile		7610236	0					
ANR	7610440	PtrMemberAccess	parameters -> infile		7610236	0					
ANR	7610441	Identifier	parameters		7610236	0					
ANR	7610442	Identifier	infile		7610236	1					
ANR	7610443	Argument	sizeof ( parameters -> infile )		7610236	1					
ANR	7610444	SizeofExpression	sizeof ( parameters -> infile )		7610236	0					
ANR	7610445	Sizeof	sizeof		7610236	0					
ANR	7610446	PtrMemberAccess	parameters -> infile		7610236	1					
ANR	7610447	Identifier	parameters		7610236	0					
ANR	7610448	Identifier	infile		7610236	1					
ANR	7610449	Argument	infile		7610236	2					
ANR	7610450	Identifier	infile		7610236	0					
ANR	7610451	PrimaryExpression	0		7610236	1					
ANR	7610452	CompoundStatement		55:91:1804:1804	7610236	1					
ANR	7610453	ReturnStatement	return 1 ;	627:16:26852:26860	7610236	0	True				
ANR	7610454	PrimaryExpression	1		7610236	0					
ANR	7610455	BreakStatement	break ;	630:8:26894:26899	7610236	2	True				
ANR	7610456	Label	case 'o' :	634:8:26979:26987	7610236	3	True				
ANR	7610457	CompoundStatement		64:12:1999:2025	7610236	4					
ANR	7610458	IdentifierDeclStatement	char * outfile = opj_optarg ;	635:12:27029:27055	7610236	0	True				
ANR	7610459	IdentifierDecl	* outfile = opj_optarg		7610236	0					
ANR	7610460	IdentifierDeclType	char *		7610236	0					
ANR	7610461	Identifier	outfile		7610236	1					
ANR	7610462	AssignmentExpression	* outfile = opj_optarg		7610236	2		=			
ANR	7610463	Identifier	opj_optarg		7610236	0					
ANR	7610464	Identifier	opj_optarg		7610236	1					
ANR	7610465	ExpressionStatement	parameters -> cod_format = get_file_format ( outfile )	636:12:27069:27118	7610236	1	True				
ANR	7610466	AssignmentExpression	parameters -> cod_format = get_file_format ( outfile )		7610236	0		=			
ANR	7610467	PtrMemberAccess	parameters -> cod_format		7610236	0					
ANR	7610468	Identifier	parameters		7610236	0					
ANR	7610469	Identifier	cod_format		7610236	1					
ANR	7610470	CallExpression	get_file_format ( outfile )		7610236	1					
ANR	7610471	Callee	get_file_format		7610236	0					
ANR	7610472	Identifier	get_file_format		7610236	0					
ANR	7610473	ArgumentList	outfile		7610236	1					
ANR	7610474	Argument	outfile		7610236	0					
ANR	7610475	Identifier	outfile		7610236	0					
ANR	7610476	SwitchStatement	switch ( parameters -> cod_format )		7610236	2					
ANR	7610477	Condition	parameters -> cod_format	637:20:27140:27161	7610236	0	True				
ANR	7610478	PtrMemberAccess	parameters -> cod_format		7610236	0					
ANR	7610479	Identifier	parameters		7610236	0					
ANR	7610480	Identifier	cod_format		7610236	1					
ANR	7610481	CompoundStatement		66:44:2134:2134	7610236	1					
ANR	7610482	Label	case J2K_CFMT :	638:12:27178:27191	7610236	0	True				
ANR	7610483	Identifier	J2K_CFMT		7610236	0					
ANR	7610484	Label	case JP2_CFMT :	639:12:27205:27218	7610236	1	True				
ANR	7610485	Identifier	JP2_CFMT		7610236	0					
ANR	7610486	BreakStatement	break ;	640:16:27236:27241	7610236	2	True				
ANR	7610487	Label	default :	641:12:27255:27262	7610236	3	True				
ANR	7610488	Identifier	default		7610236	0					
ANR	7610489	ExpressionStatement	"fprintf ( stderr , ""Unknown output format image %s [only *.j2k, *.j2c or *.jp2]!! \\n"" , outfile )"	642:16:27280:27396	7610236	4	True				
ANR	7610490	CallExpression	"fprintf ( stderr , ""Unknown output format image %s [only *.j2k, *.j2c or *.jp2]!! \\n"" , outfile )"		7610236	0					
ANR	7610491	Callee	fprintf		7610236	0					
ANR	7610492	Identifier	fprintf		7610236	0					
ANR	7610493	ArgumentList	stderr		7610236	1					
ANR	7610494	Argument	stderr		7610236	0					
ANR	7610495	Identifier	stderr		7610236	0					
ANR	7610496	Argument	"""Unknown output format image %s [only *.j2k, *.j2c or *.jp2]!! \\n"""		7610236	1					
ANR	7610497	PrimaryExpression	"""Unknown output format image %s [only *.j2k, *.j2c or *.jp2]!! \\n"""		7610236	0					
ANR	7610498	Argument	outfile		7610236	2					
ANR	7610499	Identifier	outfile		7610236	0					
ANR	7610500	ReturnStatement	return 1 ;	644:16:27414:27422	7610236	5	True				
ANR	7610501	PrimaryExpression	1		7610236	0					
ANR	7610502	IfStatement	"if ( opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfile ) != 0 )"		7610236	3					
ANR	7610503	Condition	"opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfile ) != 0"	646:16:27454:27558	7610236	0	True				
ANR	7610504	EqualityExpression	"opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfile ) != 0"		7610236	0		!=			
ANR	7610505	CallExpression	"opj_strcpy_s ( parameters -> outfile , sizeof ( parameters -> outfile ) , outfile )"		7610236	0					
ANR	7610506	Callee	opj_strcpy_s		7610236	0					
ANR	7610507	Identifier	opj_strcpy_s		7610236	0					
ANR	7610508	ArgumentList	parameters -> outfile		7610236	1					
ANR	7610509	Argument	parameters -> outfile		7610236	0					
ANR	7610510	PtrMemberAccess	parameters -> outfile		7610236	0					
ANR	7610511	Identifier	parameters		7610236	0					
ANR	7610512	Identifier	outfile		7610236	1					
ANR	7610513	Argument	sizeof ( parameters -> outfile )		7610236	1					
ANR	7610514	SizeofExpression	sizeof ( parameters -> outfile )		7610236	0					
ANR	7610515	Sizeof	sizeof		7610236	0					
ANR	7610516	PtrMemberAccess	parameters -> outfile		7610236	1					
ANR	7610517	Identifier	parameters		7610236	0					
ANR	7610518	Identifier	outfile		7610236	1					
ANR	7610519	Argument	outfile		7610236	2					
ANR	7610520	Identifier	outfile		7610236	0					
ANR	7610521	PrimaryExpression	0		7610236	1					
ANR	7610522	CompoundStatement		76:44:2531:2531	7610236	1					
ANR	7610523	ReturnStatement	return 1 ;	648:16:27579:27587	7610236	0	True				
ANR	7610524	PrimaryExpression	1		7610236	0					
ANR	7610525	BreakStatement	break ;	651:8:27621:27626	7610236	5	True				
ANR	7610526	Label	case 'O' :	654:8:27705:27713	7610236	6	True				
ANR	7610527	CompoundStatement		85:12:2759:2780	7610236	7					
ANR	7610528	IdentifierDeclStatement	char outformat [ 50 ] ;	655:12:27757:27775	7610236	0	True				
ANR	7610529	IdentifierDecl	outformat [ 50 ]		7610236	0					
ANR	7610530	IdentifierDeclType	char [ 50 ]		7610236	0					
ANR	7610531	Identifier	outformat		7610236	1					
ANR	7610532	PrimaryExpression	50		7610236	2					
ANR	7610533	IdentifierDeclStatement	char * of = opj_optarg ;	656:12:27789:27810	7610236	1	True				
ANR	7610534	IdentifierDecl	* of = opj_optarg		7610236	0					
ANR	7610535	IdentifierDeclType	char *		7610236	0					
ANR	7610536	Identifier	of		7610236	1					
ANR	7610537	AssignmentExpression	* of = opj_optarg		7610236	2		=			
ANR	7610538	Identifier	opj_optarg		7610236	0					
ANR	7610539	Identifier	opj_optarg		7610236	1					
ANR	7610540	ExpressionStatement	"sprintf ( outformat , "".%s"" , of )"	657:12:27824:27853	7610236	2	True				
ANR	7610541	CallExpression	"sprintf ( outformat , "".%s"" , of )"		7610236	0					
ANR	7610542	Callee	sprintf		7610236	0					
ANR	7610543	Identifier	sprintf		7610236	0					
ANR	7610544	ArgumentList	outformat		7610236	1					
ANR	7610545	Argument	outformat		7610236	0					
ANR	7610546	Identifier	outformat		7610236	0					
ANR	7610547	Argument	""".%s"""		7610236	1					
ANR	7610548	PrimaryExpression	""".%s"""		7610236	0					
ANR	7610549	Argument	of		7610236	2					
ANR	7610550	Identifier	of		7610236	0					
ANR	7610551	ExpressionStatement	img_fol -> set_out_format = 1	658:12:27867:27894	7610236	3	True				
ANR	7610552	AssignmentExpression	img_fol -> set_out_format = 1		7610236	0		=			
ANR	7610553	PtrMemberAccess	img_fol -> set_out_format		7610236	0					
ANR	7610554	Identifier	img_fol		7610236	0					
ANR	7610555	Identifier	set_out_format		7610236	1					
ANR	7610556	PrimaryExpression	1		7610236	1					
ANR	7610557	ExpressionStatement	parameters -> cod_format = get_file_format ( outformat )	659:12:27908:27959	7610236	4	True				
ANR	7610558	AssignmentExpression	parameters -> cod_format = get_file_format ( outformat )		7610236	0		=			
ANR	7610559	PtrMemberAccess	parameters -> cod_format		7610236	0					
ANR	7610560	Identifier	parameters		7610236	0					
ANR	7610561	Identifier	cod_format		7610236	1					
ANR	7610562	CallExpression	get_file_format ( outformat )		7610236	1					
ANR	7610563	Callee	get_file_format		7610236	0					
ANR	7610564	Identifier	get_file_format		7610236	0					
ANR	7610565	ArgumentList	outformat		7610236	1					
ANR	7610566	Argument	outformat		7610236	0					
ANR	7610567	Identifier	outformat		7610236	0					
ANR	7610568	SwitchStatement	switch ( parameters -> cod_format )		7610236	5					
ANR	7610569	Condition	parameters -> cod_format	660:20:27981:28002	7610236	0	True				
ANR	7610570	PtrMemberAccess	parameters -> cod_format		7610236	0					
ANR	7610571	Identifier	parameters		7610236	0					
ANR	7610572	Identifier	cod_format		7610236	1					
ANR	7610573	CompoundStatement		89:44:2975:2975	7610236	1					
ANR	7610574	Label	case J2K_CFMT :	661:12:28019:28032	7610236	0	True				
ANR	7610575	Identifier	J2K_CFMT		7610236	0					
ANR	7610576	Label	case JP2_CFMT :	662:12:28046:28059	7610236	1	True				
ANR	7610577	Identifier	JP2_CFMT		7610236	0					
ANR	7610578	ExpressionStatement	img_fol -> out_format = opj_optarg	663:16:28077:28109	7610236	2	True				
ANR	7610579	AssignmentExpression	img_fol -> out_format = opj_optarg		7610236	0		=			
ANR	7610580	PtrMemberAccess	img_fol -> out_format		7610236	0					
ANR	7610581	Identifier	img_fol		7610236	0					
ANR	7610582	Identifier	out_format		7610236	1					
ANR	7610583	Identifier	opj_optarg		7610236	1					
ANR	7610584	BreakStatement	break ;	664:16:28127:28132	7610236	3	True				
ANR	7610585	Label	default :	665:12:28146:28153	7610236	4	True				
ANR	7610586	Identifier	default		7610236	0					
ANR	7610587	ExpressionStatement	"fprintf ( stderr , ""Unknown output format image [only j2k, j2c, jp2]!! \\n"" )"	666:16:28171:28243	7610236	5	True				
ANR	7610588	CallExpression	"fprintf ( stderr , ""Unknown output format image [only j2k, j2c, jp2]!! \\n"" )"		7610236	0					
ANR	7610589	Callee	fprintf		7610236	0					
ANR	7610590	Identifier	fprintf		7610236	0					
ANR	7610591	ArgumentList	stderr		7610236	1					
ANR	7610592	Argument	stderr		7610236	0					
ANR	7610593	Identifier	stderr		7610236	0					
ANR	7610594	Argument	"""Unknown output format image [only j2k, j2c, jp2]!! \\n"""		7610236	1					
ANR	7610595	PrimaryExpression	"""Unknown output format image [only j2k, j2c, jp2]!! \\n"""		7610236	0					
ANR	7610596	ReturnStatement	return 1 ;	667:16:28261:28269	7610236	6	True				
ANR	7610597	PrimaryExpression	1		7610236	0					
ANR	7610598	BreakStatement	break ;	670:8:28303:28308	7610236	8	True				
ANR	7610599	Label	case 'r' :	676:8:28390:28398	7610236	9	True				
ANR	7610600	CompoundStatement		106:12:3421:3441	7610236	10					
ANR	7610601	IdentifierDeclStatement	char * s = opj_optarg ;	677:12:28451:28471	7610236	0	True				
ANR	7610602	IdentifierDecl	* s = opj_optarg		7610236	0					
ANR	7610603	IdentifierDeclType	char *		7610236	0					
ANR	7610604	Identifier	s		7610236	1					
ANR	7610605	AssignmentExpression	* s = opj_optarg		7610236	2		=			
ANR	7610606	Identifier	opj_optarg		7610236	0					
ANR	7610607	Identifier	opj_optarg		7610236	1					
ANR	7610608	ExpressionStatement	parameters -> tcp_numlayers = 0	678:12:28485:28514	7610236	1	True				
ANR	7610609	AssignmentExpression	parameters -> tcp_numlayers = 0		7610236	0		=			
ANR	7610610	PtrMemberAccess	parameters -> tcp_numlayers		7610236	0					
ANR	7610611	Identifier	parameters		7610236	0					
ANR	7610612	Identifier	tcp_numlayers		7610236	1					
ANR	7610613	PrimaryExpression	0		7610236	1					
ANR	7610614	WhileStatement	"while ( sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1 )"		7610236	2					
ANR	7610615	Condition	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1"	679:19:28535:28625	7610236	0	True				
ANR	7610616	EqualityExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1"		7610236	0		==			
ANR	7610617	CallExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] )"		7610236	0					
ANR	7610618	Callee	sscanf		7610236	0					
ANR	7610619	Identifier	sscanf		7610236	0					
ANR	7610620	ArgumentList	s		7610236	1					
ANR	7610621	Argument	s		7610236	0					
ANR	7610622	Identifier	s		7610236	0					
ANR	7610623	Argument	"""%f"""		7610236	1					
ANR	7610624	PrimaryExpression	"""%f"""		7610236	0					
ANR	7610625	Argument	& parameters -> tcp_rates [ parameters -> tcp_numlayers ]		7610236	2					
ANR	7610626	UnaryOperationExpression	& parameters -> tcp_rates [ parameters -> tcp_numlayers ]		7610236	0					
ANR	7610627	UnaryOperator	&		7610236	0					
ANR	7610628	ArrayIndexing	parameters -> tcp_rates [ parameters -> tcp_numlayers ]		7610236	1					
ANR	7610629	PtrMemberAccess	parameters -> tcp_rates		7610236	0					
ANR	7610630	Identifier	parameters		7610236	0					
ANR	7610631	Identifier	tcp_rates		7610236	1					
ANR	7610632	PtrMemberAccess	parameters -> tcp_numlayers		7610236	1					
ANR	7610633	Identifier	parameters		7610236	0					
ANR	7610634	Identifier	tcp_numlayers		7610236	1					
ANR	7610635	PrimaryExpression	1		7610236	1					
ANR	7610636	CompoundStatement		109:23:3598:3598	7610236	1					
ANR	7610637	ExpressionStatement	parameters -> tcp_numlayers ++	681:16:28646:28673	7610236	0	True				
ANR	7610638	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		7610236	0					
ANR	7610639	PtrMemberAccess	parameters -> tcp_numlayers		7610236	0					
ANR	7610640	Identifier	parameters		7610236	0					
ANR	7610641	Identifier	tcp_numlayers		7610236	1					
ANR	7610642	IncDec	++		7610236	1					
ANR	7610643	WhileStatement	"while ( * s && * s != ',' )"		7610236	1					
ANR	7610644	Condition	"* s && * s != ','"	682:23:28698:28712	7610236	0	True				
ANR	7610645	AndExpression	"* s && * s != ','"		7610236	0		&&			
ANR	7610646	UnaryOperationExpression	* s		7610236	0					
ANR	7610647	UnaryOperator	*		7610236	0					
ANR	7610648	Identifier	s		7610236	1					
ANR	7610649	EqualityExpression	"* s != ','"		7610236	1		!=			
ANR	7610650	UnaryOperationExpression	* s		7610236	0					
ANR	7610651	UnaryOperator	*		7610236	0					
ANR	7610652	Identifier	s		7610236	1					
ANR	7610653	PrimaryExpression	"','"		7610236	1					
ANR	7610654	CompoundStatement		111:40:3685:3685	7610236	1					
ANR	7610655	ExpressionStatement	s ++	683:20:28737:28740	7610236	0	True				
ANR	7610656	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7610657	Identifier	s		7610236	0					
ANR	7610658	IncDec	++		7610236	1					
ANR	7610659	IfStatement	if ( ! * s )		7610236	2					
ANR	7610660	Condition	! * s	685:20:28780:28782	7610236	0	True				
ANR	7610661	UnaryOperationExpression	! * s		7610236	0					
ANR	7610662	UnaryOperator	!		7610236	0					
ANR	7610663	UnaryOperationExpression	* s		7610236	1					
ANR	7610664	UnaryOperator	*		7610236	0					
ANR	7610665	Identifier	s		7610236	1					
ANR	7610666	CompoundStatement		114:25:3755:3755	7610236	1					
ANR	7610667	BreakStatement	break ;	686:20:28807:28812	7610236	0	True				
ANR	7610668	ExpressionStatement	s ++	688:16:28848:28851	7610236	3	True				
ANR	7610669	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7610670	Identifier	s		7610236	0					
ANR	7610671	IncDec	++		7610236	1					
ANR	7610672	ExpressionStatement	parameters -> cp_disto_alloc = 1	690:12:28879:28909	7610236	3	True				
ANR	7610673	AssignmentExpression	parameters -> cp_disto_alloc = 1		7610236	0		=			
ANR	7610674	PtrMemberAccess	parameters -> cp_disto_alloc		7610236	0					
ANR	7610675	Identifier	parameters		7610236	0					
ANR	7610676	Identifier	cp_disto_alloc		7610236	1					
ANR	7610677	PrimaryExpression	1		7610236	1					
ANR	7610678	BreakStatement	break ;	692:8:28929:28934	7610236	11	True				
ANR	7610679	Label	case 'F' :	697:8:29015:29023	7610236	12	True				
ANR	7610680	CompoundStatement		134:12:4268:4299	7610236	13					
ANR	7610681	IdentifierDeclStatement	OPJ_BOOL wrong = OPJ_FALSE ;	698:12:29081:29107	7610236	0	True				
ANR	7610682	IdentifierDecl	wrong = OPJ_FALSE		7610236	0					
ANR	7610683	IdentifierDeclType	OPJ_BOOL		7610236	0					
ANR	7610684	Identifier	wrong		7610236	1					
ANR	7610685	AssignmentExpression	wrong = OPJ_FALSE		7610236	2		=			
ANR	7610686	Identifier	OPJ_FALSE		7610236	0					
ANR	7610687	Identifier	OPJ_FALSE		7610236	1					
ANR	7610688	IdentifierDeclStatement	char * substr1 ;	699:12:29121:29134	7610236	1	True				
ANR	7610689	IdentifierDecl	* substr1		7610236	0					
ANR	7610690	IdentifierDeclType	char *		7610236	0					
ANR	7610691	Identifier	substr1		7610236	1					
ANR	7610692	IdentifierDeclStatement	char * substr2 ;	700:12:29148:29161	7610236	2	True				
ANR	7610693	IdentifierDecl	* substr2		7610236	0					
ANR	7610694	IdentifierDeclType	char *		7610236	0					
ANR	7610695	Identifier	substr2		7610236	1					
ANR	7610696	IdentifierDeclStatement	char * sep ;	701:12:29175:29184	7610236	3	True				
ANR	7610697	IdentifierDecl	* sep		7610236	0					
ANR	7610698	IdentifierDeclType	char *		7610236	0					
ANR	7610699	Identifier	sep		7610236	1					
ANR	7610700	IdentifierDeclStatement	char signo ;	702:12:29198:29208	7610236	4	True				
ANR	7610701	IdentifierDecl	signo		7610236	0					
ANR	7610702	IdentifierDeclType	char		7610236	0					
ANR	7610703	Identifier	signo		7610236	1					
ANR	7610704	IdentifierDeclStatement	"int width , height , bitdepth , ncomp ;"	703:12:29222:29256	7610236	5	True				
ANR	7610705	IdentifierDecl	width		7610236	0					
ANR	7610706	IdentifierDeclType	int		7610236	0					
ANR	7610707	Identifier	width		7610236	1					
ANR	7610708	IdentifierDecl	height		7610236	1					
ANR	7610709	IdentifierDeclType	int		7610236	0					
ANR	7610710	Identifier	height		7610236	1					
ANR	7610711	IdentifierDecl	bitdepth		7610236	2					
ANR	7610712	IdentifierDeclType	int		7610236	0					
ANR	7610713	Identifier	bitdepth		7610236	1					
ANR	7610714	IdentifierDecl	ncomp		7610236	3					
ANR	7610715	IdentifierDeclType	int		7610236	0					
ANR	7610716	Identifier	ncomp		7610236	1					
ANR	7610717	IdentifierDeclStatement	OPJ_UINT32 len ;	704:12:29270:29284	7610236	6	True				
ANR	7610718	IdentifierDecl	len		7610236	0					
ANR	7610719	IdentifierDeclType	OPJ_UINT32		7610236	0					
ANR	7610720	Identifier	len		7610236	1					
ANR	7610721	IdentifierDeclStatement	OPJ_BOOL raw_signed = OPJ_FALSE ;	705:12:29298:29329	7610236	7	True				
ANR	7610722	IdentifierDecl	raw_signed = OPJ_FALSE		7610236	0					
ANR	7610723	IdentifierDeclType	OPJ_BOOL		7610236	0					
ANR	7610724	Identifier	raw_signed		7610236	1					
ANR	7610725	AssignmentExpression	raw_signed = OPJ_FALSE		7610236	2		=			
ANR	7610726	Identifier	OPJ_FALSE		7610236	0					
ANR	7610727	Identifier	OPJ_FALSE		7610236	1					
ANR	7610728	ExpressionStatement	"substr2 = strchr ( opj_optarg , '@' )"	706:12:29343:29376	7610236	8	True				
ANR	7610729	AssignmentExpression	"substr2 = strchr ( opj_optarg , '@' )"		7610236	0		=			
ANR	7610730	Identifier	substr2		7610236	0					
ANR	7610731	CallExpression	"strchr ( opj_optarg , '@' )"		7610236	1					
ANR	7610732	Callee	strchr		7610236	0					
ANR	7610733	Identifier	strchr		7610236	0					
ANR	7610734	ArgumentList	opj_optarg		7610236	1					
ANR	7610735	Argument	opj_optarg		7610236	0					
ANR	7610736	Identifier	opj_optarg		7610236	0					
ANR	7610737	Argument	'@'		7610236	1					
ANR	7610738	PrimaryExpression	'@'		7610236	0					
ANR	7610739	IfStatement	if ( substr2 == NULL )		7610236	9					
ANR	7610740	Condition	substr2 == NULL	707:16:29394:29408	7610236	0	True				
ANR	7610741	EqualityExpression	substr2 == NULL		7610236	0		==			
ANR	7610742	Identifier	substr2		7610236	0					
ANR	7610743	Identifier	NULL		7610236	1					
ANR	7610744	CompoundStatement		136:33:4381:4381	7610236	1					
ANR	7610745	ExpressionStatement	len = ( OPJ_UINT32 ) strlen ( opj_optarg )	708:16:29429:29466	7610236	0	True				
ANR	7610746	AssignmentExpression	len = ( OPJ_UINT32 ) strlen ( opj_optarg )		7610236	0		=			
ANR	7610747	Identifier	len		7610236	0					
ANR	7610748	CastExpression	( OPJ_UINT32 ) strlen ( opj_optarg )		7610236	1					
ANR	7610749	CastTarget	OPJ_UINT32		7610236	0					
ANR	7610750	CallExpression	strlen ( opj_optarg )		7610236	1					
ANR	7610751	Callee	strlen		7610236	0					
ANR	7610752	Identifier	strlen		7610236	0					
ANR	7610753	ArgumentList	opj_optarg		7610236	1					
ANR	7610754	Argument	opj_optarg		7610236	0					
ANR	7610755	Identifier	opj_optarg		7610236	0					
ANR	7610756	ElseStatement	else		7610236	0					
ANR	7610757	CompoundStatement		138:19:4457:4457	7610236	0					
ANR	7610758	ExpressionStatement	len = ( OPJ_UINT32 ) ( substr2 - opj_optarg )	710:16:29505:29545	7610236	0	True				
ANR	7610759	AssignmentExpression	len = ( OPJ_UINT32 ) ( substr2 - opj_optarg )		7610236	0		=			
ANR	7610760	Identifier	len		7610236	0					
ANR	7610761	CastExpression	( OPJ_UINT32 ) ( substr2 - opj_optarg )		7610236	1					
ANR	7610762	CastTarget	OPJ_UINT32		7610236	0					
ANR	7610763	AdditiveExpression	substr2 - opj_optarg		7610236	1		-			
ANR	7610764	Identifier	substr2		7610236	0					
ANR	7610765	Identifier	opj_optarg		7610236	1					
ANR	7610766	ExpressionStatement	substr2 ++	711:16:29563:29572	7610236	1	True				
ANR	7610767	PostIncDecOperationExpression	substr2 ++		7610236	0					
ANR	7610768	Identifier	substr2		7610236	0					
ANR	7610769	IncDec	++		7610236	1					
ANR	7610770	ExpressionStatement	substr1 = ( char * ) malloc ( ( len + 1 ) * sizeof ( char ) )	713:12:29625:29675	7610236	10	True				
ANR	7610771	AssignmentExpression	substr1 = ( char * ) malloc ( ( len + 1 ) * sizeof ( char ) )		7610236	0		=			
ANR	7610772	Identifier	substr1		7610236	0					
ANR	7610773	CastExpression	( char * ) malloc ( ( len + 1 ) * sizeof ( char ) )		7610236	1					
ANR	7610774	CastTarget	char *		7610236	0					
ANR	7610775	CallExpression	malloc ( ( len + 1 ) * sizeof ( char ) )		7610236	1					
ANR	7610776	Callee	malloc		7610236	0					
ANR	7610777	Identifier	malloc		7610236	0					
ANR	7610778	ArgumentList	( len + 1 ) * sizeof ( char )		7610236	1					
ANR	7610779	Argument	( len + 1 ) * sizeof ( char )		7610236	0					
ANR	7610780	MultiplicativeExpression	( len + 1 ) * sizeof ( char )		7610236	0		*			
ANR	7610781	AdditiveExpression	len + 1		7610236	0		+			
ANR	7610782	Identifier	len		7610236	0					
ANR	7610783	PrimaryExpression	1		7610236	1					
ANR	7610784	SizeofExpression	sizeof ( char )		7610236	1					
ANR	7610785	Sizeof	sizeof		7610236	0					
ANR	7610786	SizeofOperand	char		7610236	1					
ANR	7610787	IfStatement	if ( substr1 == NULL )		7610236	11					
ANR	7610788	Condition	substr1 == NULL	714:16:29693:29707	7610236	0	True				
ANR	7610789	EqualityExpression	substr1 == NULL		7610236	0		==			
ANR	7610790	Identifier	substr1		7610236	0					
ANR	7610791	Identifier	NULL		7610236	1					
ANR	7610792	CompoundStatement		143:33:4680:4680	7610236	1					
ANR	7610793	ReturnStatement	return 1 ;	715:16:29728:29736	7610236	0	True				
ANR	7610794	PrimaryExpression	1		7610236	0					
ANR	7610795	ExpressionStatement	"memcpy ( substr1 , opj_optarg , len )"	717:12:29764:29796	7610236	12	True				
ANR	7610796	CallExpression	"memcpy ( substr1 , opj_optarg , len )"		7610236	0					
ANR	7610797	Callee	memcpy		7610236	0					
ANR	7610798	Identifier	memcpy		7610236	0					
ANR	7610799	ArgumentList	substr1		7610236	1					
ANR	7610800	Argument	substr1		7610236	0					
ANR	7610801	Identifier	substr1		7610236	0					
ANR	7610802	Argument	opj_optarg		7610236	1					
ANR	7610803	Identifier	opj_optarg		7610236	0					
ANR	7610804	Argument	len		7610236	2					
ANR	7610805	Identifier	len		7610236	0					
ANR	7610806	ExpressionStatement	substr1 [ len ] = '\\0'	718:12:29810:29829	7610236	13	True				
ANR	7610807	AssignmentExpression	substr1 [ len ] = '\\0'		7610236	0		=			
ANR	7610808	ArrayIndexing	substr1 [ len ]		7610236	0					
ANR	7610809	Identifier	substr1		7610236	0					
ANR	7610810	Identifier	len		7610236	1					
ANR	7610811	PrimaryExpression	'\\0'		7610236	1					
ANR	7610812	IfStatement	"if ( sscanf ( substr1 , ""%d,%d,%d,%d,%c"" , & width , & height , & ncomp , & bitdepth , & signo ) == 5 )"		7610236	14					
ANR	7610813	Condition	"sscanf ( substr1 , ""%d,%d,%d,%d,%c"" , & width , & height , & ncomp , & bitdepth , & signo ) == 5"	719:16:29847:29951	7610236	0	True				
ANR	7610814	EqualityExpression	"sscanf ( substr1 , ""%d,%d,%d,%d,%c"" , & width , & height , & ncomp , & bitdepth , & signo ) == 5"		7610236	0		==			
ANR	7610815	CallExpression	"sscanf ( substr1 , ""%d,%d,%d,%d,%c"" , & width , & height , & ncomp , & bitdepth , & signo )"		7610236	0					
ANR	7610816	Callee	sscanf		7610236	0					
ANR	7610817	Identifier	sscanf		7610236	0					
ANR	7610818	ArgumentList	substr1		7610236	1					
ANR	7610819	Argument	substr1		7610236	0					
ANR	7610820	Identifier	substr1		7610236	0					
ANR	7610821	Argument	"""%d,%d,%d,%d,%c"""		7610236	1					
ANR	7610822	PrimaryExpression	"""%d,%d,%d,%d,%c"""		7610236	0					
ANR	7610823	Argument	& width		7610236	2					
ANR	7610824	UnaryOperationExpression	& width		7610236	0					
ANR	7610825	UnaryOperator	&		7610236	0					
ANR	7610826	Identifier	width		7610236	1					
ANR	7610827	Argument	& height		7610236	3					
ANR	7610828	UnaryOperationExpression	& height		7610236	0					
ANR	7610829	UnaryOperator	&		7610236	0					
ANR	7610830	Identifier	height		7610236	1					
ANR	7610831	Argument	& ncomp		7610236	4					
ANR	7610832	UnaryOperationExpression	& ncomp		7610236	0					
ANR	7610833	UnaryOperator	&		7610236	0					
ANR	7610834	Identifier	ncomp		7610236	1					
ANR	7610835	Argument	& bitdepth		7610236	5					
ANR	7610836	UnaryOperationExpression	& bitdepth		7610236	0					
ANR	7610837	UnaryOperator	&		7610236	0					
ANR	7610838	Identifier	bitdepth		7610236	1					
ANR	7610839	Argument	& signo		7610236	6					
ANR	7610840	UnaryOperationExpression	& signo		7610236	0					
ANR	7610841	UnaryOperator	&		7610236	0					
ANR	7610842	Identifier	signo		7610236	1					
ANR	7610843	PrimaryExpression	5		7610236	1					
ANR	7610844	CompoundStatement		149:37:4924:4924	7610236	1					
ANR	7610845	IfStatement	if ( signo == 's' )		7610236	0					
ANR	7610846	Condition	signo == 's'	721:20:29976:29987	7610236	0	True				
ANR	7610847	EqualityExpression	signo == 's'		7610236	0		==			
ANR	7610848	Identifier	signo		7610236	0					
ANR	7610849	PrimaryExpression	's'		7610236	1					
ANR	7610850	CompoundStatement		150:34:4960:4960	7610236	1					
ANR	7610851	ExpressionStatement	raw_signed = OPJ_TRUE	722:20:30012:30033	7610236	0	True				
ANR	7610852	AssignmentExpression	raw_signed = OPJ_TRUE		7610236	0		=			
ANR	7610853	Identifier	raw_signed		7610236	0					
ANR	7610854	Identifier	OPJ_TRUE		7610236	1					
ANR	7610855	ElseStatement	else		7610236	0					
ANR	7610856	IfStatement	if ( signo == 'u' )		7610236	0					
ANR	7610857	Condition	signo == 'u'	723:27:30062:30073	7610236	0	True				
ANR	7610858	EqualityExpression	signo == 'u'		7610236	0		==			
ANR	7610859	Identifier	signo		7610236	0					
ANR	7610860	PrimaryExpression	'u'		7610236	1					
ANR	7610861	CompoundStatement		152:41:5046:5046	7610236	1					
ANR	7610862	ExpressionStatement	raw_signed = OPJ_FALSE	724:20:30098:30120	7610236	0	True				
ANR	7610863	AssignmentExpression	raw_signed = OPJ_FALSE		7610236	0		=			
ANR	7610864	Identifier	raw_signed		7610236	0					
ANR	7610865	Identifier	OPJ_FALSE		7610236	1					
ANR	7610866	ElseStatement	else		7610236	0					
ANR	7610867	CompoundStatement		154:23:5115:5115	7610236	0					
ANR	7610868	ExpressionStatement	wrong = OPJ_TRUE	726:20:30167:30183	7610236	0	True				
ANR	7610869	AssignmentExpression	wrong = OPJ_TRUE		7610236	0		=			
ANR	7610870	Identifier	wrong		7610236	0					
ANR	7610871	Identifier	OPJ_TRUE		7610236	1					
ANR	7610872	ElseStatement	else		7610236	0					
ANR	7610873	CompoundStatement		157:19:5192:5192	7610236	0					
ANR	7610874	ExpressionStatement	wrong = OPJ_TRUE	729:16:30240:30256	7610236	0	True				
ANR	7610875	AssignmentExpression	wrong = OPJ_TRUE		7610236	0		=			
ANR	7610876	Identifier	wrong		7610236	0					
ANR	7610877	Identifier	OPJ_TRUE		7610236	1					
ANR	7610878	IfStatement	if ( ! wrong )		7610236	15					
ANR	7610879	Condition	! wrong	731:16:30288:30293	7610236	0	True				
ANR	7610880	UnaryOperationExpression	! wrong		7610236	0					
ANR	7610881	UnaryOperator	!		7610236	0					
ANR	7610882	Identifier	wrong		7610236	1					
ANR	7610883	CompoundStatement		163:16:5344:5358	7610236	1					
ANR	7610884	IdentifierDeclStatement	int compno ;	732:16:30314:30324	7610236	0	True				
ANR	7610885	IdentifierDecl	compno		7610236	0					
ANR	7610886	IdentifierDeclType	int		7610236	0					
ANR	7610887	Identifier	compno		7610236	1					
ANR	7610888	IdentifierDeclStatement	int lastdx = 1 ;	733:16:30342:30356	7610236	1	True				
ANR	7610889	IdentifierDecl	lastdx = 1		7610236	0					
ANR	7610890	IdentifierDeclType	int		7610236	0					
ANR	7610891	Identifier	lastdx		7610236	1					
ANR	7610892	AssignmentExpression	lastdx = 1		7610236	2		=			
ANR	7610893	Identifier	lastdx		7610236	0					
ANR	7610894	PrimaryExpression	1		7610236	1					
ANR	7610895	IdentifierDeclStatement	int lastdy = 1 ;	734:16:30374:30388	7610236	2	True				
ANR	7610896	IdentifierDecl	lastdy = 1		7610236	0					
ANR	7610897	IdentifierDeclType	int		7610236	0					
ANR	7610898	Identifier	lastdy		7610236	1					
ANR	7610899	AssignmentExpression	lastdy = 1		7610236	2		=			
ANR	7610900	Identifier	lastdy		7610236	0					
ANR	7610901	PrimaryExpression	1		7610236	1					
ANR	7610902	ExpressionStatement	raw_cp -> rawWidth = width	735:16:30406:30430	7610236	3	True				
ANR	7610903	AssignmentExpression	raw_cp -> rawWidth = width		7610236	0		=			
ANR	7610904	PtrMemberAccess	raw_cp -> rawWidth		7610236	0					
ANR	7610905	Identifier	raw_cp		7610236	0					
ANR	7610906	Identifier	rawWidth		7610236	1					
ANR	7610907	Identifier	width		7610236	1					
ANR	7610908	ExpressionStatement	raw_cp -> rawHeight = height	736:16:30448:30474	7610236	4	True				
ANR	7610909	AssignmentExpression	raw_cp -> rawHeight = height		7610236	0		=			
ANR	7610910	PtrMemberAccess	raw_cp -> rawHeight		7610236	0					
ANR	7610911	Identifier	raw_cp		7610236	0					
ANR	7610912	Identifier	rawHeight		7610236	1					
ANR	7610913	Identifier	height		7610236	1					
ANR	7610914	ExpressionStatement	raw_cp -> rawComp = ncomp	737:16:30492:30515	7610236	5	True				
ANR	7610915	AssignmentExpression	raw_cp -> rawComp = ncomp		7610236	0		=			
ANR	7610916	PtrMemberAccess	raw_cp -> rawComp		7610236	0					
ANR	7610917	Identifier	raw_cp		7610236	0					
ANR	7610918	Identifier	rawComp		7610236	1					
ANR	7610919	Identifier	ncomp		7610236	1					
ANR	7610920	ExpressionStatement	raw_cp -> rawBitDepth = bitdepth	738:16:30533:30563	7610236	6	True				
ANR	7610921	AssignmentExpression	raw_cp -> rawBitDepth = bitdepth		7610236	0		=			
ANR	7610922	PtrMemberAccess	raw_cp -> rawBitDepth		7610236	0					
ANR	7610923	Identifier	raw_cp		7610236	0					
ANR	7610924	Identifier	rawBitDepth		7610236	1					
ANR	7610925	Identifier	bitdepth		7610236	1					
ANR	7610926	ExpressionStatement	raw_cp -> rawSigned = raw_signed	739:16:30581:30612	7610236	7	True				
ANR	7610927	AssignmentExpression	raw_cp -> rawSigned = raw_signed		7610236	0		=			
ANR	7610928	PtrMemberAccess	raw_cp -> rawSigned		7610236	0					
ANR	7610929	Identifier	raw_cp		7610236	0					
ANR	7610930	Identifier	rawSigned		7610236	1					
ANR	7610931	Identifier	raw_signed		7610236	1					
ANR	7610932	ExpressionStatement	raw_cp -> rawComps = ( raw_comp_cparameters_t * ) malloc ( ( ( OPJ_UINT32 ) ( ncomp ) ) * sizeof ( raw_comp_cparameters_t ) )	740:16:30630:30777	7610236	8	True				
ANR	7610933	AssignmentExpression	raw_cp -> rawComps = ( raw_comp_cparameters_t * ) malloc ( ( ( OPJ_UINT32 ) ( ncomp ) ) * sizeof ( raw_comp_cparameters_t ) )		7610236	0		=			
ANR	7610934	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7610935	Identifier	raw_cp		7610236	0					
ANR	7610936	Identifier	rawComps		7610236	1					
ANR	7610937	CastExpression	( raw_comp_cparameters_t * ) malloc ( ( ( OPJ_UINT32 ) ( ncomp ) ) * sizeof ( raw_comp_cparameters_t ) )		7610236	1					
ANR	7610938	CastTarget	raw_comp_cparameters_t *		7610236	0					
ANR	7610939	CallExpression	malloc ( ( ( OPJ_UINT32 ) ( ncomp ) ) * sizeof ( raw_comp_cparameters_t ) )		7610236	1					
ANR	7610940	Callee	malloc		7610236	0					
ANR	7610941	Identifier	malloc		7610236	0					
ANR	7610942	ArgumentList	( ( OPJ_UINT32 ) ( ncomp ) ) * sizeof ( raw_comp_cparameters_t )		7610236	1					
ANR	7610943	Argument	( ( OPJ_UINT32 ) ( ncomp ) ) * sizeof ( raw_comp_cparameters_t )		7610236	0					
ANR	7610944	MultiplicativeExpression	( ( OPJ_UINT32 ) ( ncomp ) ) * sizeof ( raw_comp_cparameters_t )		7610236	0		*			
ANR	7610945	CastExpression	( OPJ_UINT32 ) ( ncomp )		7610236	0					
ANR	7610946	CastTarget	OPJ_UINT32		7610236	0					
ANR	7610947	Identifier	ncomp		7610236	1					
ANR	7610948	SizeofExpression	sizeof ( raw_comp_cparameters_t )		7610236	1					
ANR	7610949	Sizeof	sizeof		7610236	0					
ANR	7610950	SizeofOperand	raw_comp_cparameters_t		7610236	1					
ANR	7610951	IfStatement	if ( raw_cp -> rawComps == NULL )		7610236	9					
ANR	7610952	Condition	raw_cp -> rawComps == NULL	742:20:30799:30822	7610236	0	True				
ANR	7610953	EqualityExpression	raw_cp -> rawComps == NULL		7610236	0		==			
ANR	7610954	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7610955	Identifier	raw_cp		7610236	0					
ANR	7610956	Identifier	rawComps		7610236	1					
ANR	7610957	Identifier	NULL		7610236	1					
ANR	7610958	CompoundStatement		171:46:5795:5795	7610236	1					
ANR	7610959	ExpressionStatement	free ( substr1 )	743:20:30847:30860	7610236	0	True				
ANR	7610960	CallExpression	free ( substr1 )		7610236	0					
ANR	7610961	Callee	free		7610236	0					
ANR	7610962	Identifier	free		7610236	0					
ANR	7610963	ArgumentList	substr1		7610236	1					
ANR	7610964	Argument	substr1		7610236	0					
ANR	7610965	Identifier	substr1		7610236	0					
ANR	7610966	ReturnStatement	return 1 ;	744:20:30882:30890	7610236	1	True				
ANR	7610967	PrimaryExpression	1		7610236	0					
ANR	7610968	ForStatement	for ( compno = 0 ; compno < ncomp && ! wrong ; compno ++ )		7610236	10					
ANR	7610969	ForInit	compno = 0 ;	746:21:30931:30941	7610236	0	True				
ANR	7610970	AssignmentExpression	compno = 0		7610236	0		=			
ANR	7610971	Identifier	compno		7610236	0					
ANR	7610972	PrimaryExpression	0		7610236	1					
ANR	7610973	Condition	compno < ncomp && ! wrong	746:33:30943:30966	7610236	1	True				
ANR	7610974	AndExpression	compno < ncomp && ! wrong		7610236	0		&&			
ANR	7610975	RelationalExpression	compno < ncomp		7610236	0		<			
ANR	7610976	Identifier	compno		7610236	0					
ANR	7610977	Identifier	ncomp		7610236	1					
ANR	7610978	UnaryOperationExpression	! wrong		7610236	1					
ANR	7610979	UnaryOperator	!		7610236	0					
ANR	7610980	Identifier	wrong		7610236	1					
ANR	7610981	PostIncDecOperationExpression	compno ++	746:59:30969:30976	7610236	2	True				
ANR	7610982	Identifier	compno		7610236	0					
ANR	7610983	IncDec	++		7610236	1					
ANR	7610984	CompoundStatement		175:69:5949:5949	7610236	3					
ANR	7610985	IfStatement	if ( substr2 == NULL )		7610236	0					
ANR	7610986	Condition	substr2 == NULL	747:24:31005:31019	7610236	0	True				
ANR	7610987	EqualityExpression	substr2 == NULL		7610236	0		==			
ANR	7610988	Identifier	substr2		7610236	0					
ANR	7610989	Identifier	NULL		7610236	1					
ANR	7610990	CompoundStatement		176:41:5992:5992	7610236	1					
ANR	7610991	ExpressionStatement	raw_cp -> rawComps [ compno ] . dx = lastdx	748:24:31048:31084	7610236	0	True				
ANR	7610992	AssignmentExpression	raw_cp -> rawComps [ compno ] . dx = lastdx		7610236	0		=			
ANR	7610993	MemberAccess	raw_cp -> rawComps [ compno ] . dx		7610236	0					
ANR	7610994	ArrayIndexing	raw_cp -> rawComps [ compno ]		7610236	0					
ANR	7610995	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7610996	Identifier	raw_cp		7610236	0					
ANR	7610997	Identifier	rawComps		7610236	1					
ANR	7610998	Identifier	compno		7610236	1					
ANR	7610999	Identifier	dx		7610236	1					
ANR	7611000	Identifier	lastdx		7610236	1					
ANR	7611001	ExpressionStatement	raw_cp -> rawComps [ compno ] . dy = lastdy	749:24:31110:31146	7610236	1	True				
ANR	7611002	AssignmentExpression	raw_cp -> rawComps [ compno ] . dy = lastdy		7610236	0		=			
ANR	7611003	MemberAccess	raw_cp -> rawComps [ compno ] . dy		7610236	0					
ANR	7611004	ArrayIndexing	raw_cp -> rawComps [ compno ]		7610236	0					
ANR	7611005	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7611006	Identifier	raw_cp		7610236	0					
ANR	7611007	Identifier	rawComps		7610236	1					
ANR	7611008	Identifier	compno		7610236	1					
ANR	7611009	Identifier	dy		7610236	1					
ANR	7611010	Identifier	lastdy		7610236	1					
ANR	7611011	ElseStatement	else		7610236	0					
ANR	7611012	CompoundStatement		180:24:6171:6181	7610236	0					
ANR	7611013	IdentifierDeclStatement	"int dx , dy ;"	751:24:31201:31211	7610236	0	True				
ANR	7611014	IdentifierDecl	dx		7610236	0					
ANR	7611015	IdentifierDeclType	int		7610236	0					
ANR	7611016	Identifier	dx		7610236	1					
ANR	7611017	IdentifierDecl	dy		7610236	1					
ANR	7611018	IdentifierDeclType	int		7610236	0					
ANR	7611019	Identifier	dy		7610236	1					
ANR	7611020	ExpressionStatement	"sep = strchr ( substr2 , ':' )"	752:24:31237:31263	7610236	1	True				
ANR	7611021	AssignmentExpression	"sep = strchr ( substr2 , ':' )"		7610236	0		=			
ANR	7611022	Identifier	sep		7610236	0					
ANR	7611023	CallExpression	"strchr ( substr2 , ':' )"		7610236	1					
ANR	7611024	Callee	strchr		7610236	0					
ANR	7611025	Identifier	strchr		7610236	0					
ANR	7611026	ArgumentList	substr2		7610236	1					
ANR	7611027	Argument	substr2		7610236	0					
ANR	7611028	Identifier	substr2		7610236	0					
ANR	7611029	Argument	':'		7610236	1					
ANR	7611030	PrimaryExpression	':'		7610236	0					
ANR	7611031	IfStatement	if ( sep == NULL )		7610236	2					
ANR	7611032	Condition	sep == NULL	753:28:31293:31303	7610236	0	True				
ANR	7611033	EqualityExpression	sep == NULL		7610236	0		==			
ANR	7611034	Identifier	sep		7610236	0					
ANR	7611035	Identifier	NULL		7610236	1					
ANR	7611036	CompoundStatement		182:41:6276:6276	7610236	1					
ANR	7611037	IfStatement	"if ( sscanf ( substr2 , ""%dx%d"" , & dx , & dy ) == 2 )"		7610236	0					
ANR	7611038	Condition	"sscanf ( substr2 , ""%dx%d"" , & dx , & dy ) == 2"	754:32:31340:31378	7610236	0	True				
ANR	7611039	EqualityExpression	"sscanf ( substr2 , ""%dx%d"" , & dx , & dy ) == 2"		7610236	0		==			
ANR	7611040	CallExpression	"sscanf ( substr2 , ""%dx%d"" , & dx , & dy )"		7610236	0					
ANR	7611041	Callee	sscanf		7610236	0					
ANR	7611042	Identifier	sscanf		7610236	0					
ANR	7611043	ArgumentList	substr2		7610236	1					
ANR	7611044	Argument	substr2		7610236	0					
ANR	7611045	Identifier	substr2		7610236	0					
ANR	7611046	Argument	"""%dx%d"""		7610236	1					
ANR	7611047	PrimaryExpression	"""%dx%d"""		7610236	0					
ANR	7611048	Argument	& dx		7610236	2					
ANR	7611049	UnaryOperationExpression	& dx		7610236	0					
ANR	7611050	UnaryOperator	&		7610236	0					
ANR	7611051	Identifier	dx		7610236	1					
ANR	7611052	Argument	& dy		7610236	3					
ANR	7611053	UnaryOperationExpression	& dy		7610236	0					
ANR	7611054	UnaryOperator	&		7610236	0					
ANR	7611055	Identifier	dy		7610236	1					
ANR	7611056	PrimaryExpression	2		7610236	1					
ANR	7611057	CompoundStatement		183:73:6351:6351	7610236	1					
ANR	7611058	ExpressionStatement	lastdx = dx	755:32:31415:31426	7610236	0	True				
ANR	7611059	AssignmentExpression	lastdx = dx		7610236	0		=			
ANR	7611060	Identifier	lastdx		7610236	0					
ANR	7611061	Identifier	dx		7610236	1					
ANR	7611062	ExpressionStatement	lastdy = dy	756:32:31460:31471	7610236	1	True				
ANR	7611063	AssignmentExpression	lastdy = dy		7610236	0		=			
ANR	7611064	Identifier	lastdy		7610236	0					
ANR	7611065	Identifier	dy		7610236	1					
ANR	7611066	ExpressionStatement	raw_cp -> rawComps [ compno ] . dx = dx	757:32:31505:31537	7610236	2	True				
ANR	7611067	AssignmentExpression	raw_cp -> rawComps [ compno ] . dx = dx		7610236	0		=			
ANR	7611068	MemberAccess	raw_cp -> rawComps [ compno ] . dx		7610236	0					
ANR	7611069	ArrayIndexing	raw_cp -> rawComps [ compno ]		7610236	0					
ANR	7611070	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7611071	Identifier	raw_cp		7610236	0					
ANR	7611072	Identifier	rawComps		7610236	1					
ANR	7611073	Identifier	compno		7610236	1					
ANR	7611074	Identifier	dx		7610236	1					
ANR	7611075	Identifier	dx		7610236	1					
ANR	7611076	ExpressionStatement	raw_cp -> rawComps [ compno ] . dy = dy	758:32:31571:31603	7610236	3	True				
ANR	7611077	AssignmentExpression	raw_cp -> rawComps [ compno ] . dy = dy		7610236	0		=			
ANR	7611078	MemberAccess	raw_cp -> rawComps [ compno ] . dy		7610236	0					
ANR	7611079	ArrayIndexing	raw_cp -> rawComps [ compno ]		7610236	0					
ANR	7611080	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7611081	Identifier	raw_cp		7610236	0					
ANR	7611082	Identifier	rawComps		7610236	1					
ANR	7611083	Identifier	compno		7610236	1					
ANR	7611084	Identifier	dy		7610236	1					
ANR	7611085	Identifier	dy		7610236	1					
ANR	7611086	ExpressionStatement	substr2 = NULL	759:32:31637:31651	7610236	4	True				
ANR	7611087	AssignmentExpression	substr2 = NULL		7610236	0		=			
ANR	7611088	Identifier	substr2		7610236	0					
ANR	7611089	Identifier	NULL		7610236	1					
ANR	7611090	ElseStatement	else		7610236	0					
ANR	7611091	CompoundStatement		189:35:6658:6658	7610236	0					
ANR	7611092	ExpressionStatement	wrong = OPJ_TRUE	761:32:31722:31738	7610236	0	True				
ANR	7611093	AssignmentExpression	wrong = OPJ_TRUE		7610236	0		=			
ANR	7611094	Identifier	wrong		7610236	0					
ANR	7611095	Identifier	OPJ_TRUE		7610236	1					
ANR	7611096	ElseStatement	else		7610236	0					
ANR	7611097	CompoundStatement		192:31:6771:6771	7610236	0					
ANR	7611098	IfStatement	"if ( sscanf ( substr2 , ""%dx%d:%s"" , & dx , & dy , substr2 ) == 3 )"		7610236	0					
ANR	7611099	Condition	"sscanf ( substr2 , ""%dx%d:%s"" , & dx , & dy , substr2 ) == 3"	764:32:31835:31885	7610236	0	True				
ANR	7611100	EqualityExpression	"sscanf ( substr2 , ""%dx%d:%s"" , & dx , & dy , substr2 ) == 3"		7610236	0		==			
ANR	7611101	CallExpression	"sscanf ( substr2 , ""%dx%d:%s"" , & dx , & dy , substr2 )"		7610236	0					
ANR	7611102	Callee	sscanf		7610236	0					
ANR	7611103	Identifier	sscanf		7610236	0					
ANR	7611104	ArgumentList	substr2		7610236	1					
ANR	7611105	Argument	substr2		7610236	0					
ANR	7611106	Identifier	substr2		7610236	0					
ANR	7611107	Argument	"""%dx%d:%s"""		7610236	1					
ANR	7611108	PrimaryExpression	"""%dx%d:%s"""		7610236	0					
ANR	7611109	Argument	& dx		7610236	2					
ANR	7611110	UnaryOperationExpression	& dx		7610236	0					
ANR	7611111	UnaryOperator	&		7610236	0					
ANR	7611112	Identifier	dx		7610236	1					
ANR	7611113	Argument	& dy		7610236	3					
ANR	7611114	UnaryOperationExpression	& dy		7610236	0					
ANR	7611115	UnaryOperator	&		7610236	0					
ANR	7611116	Identifier	dy		7610236	1					
ANR	7611117	Argument	substr2		7610236	4					
ANR	7611118	Identifier	substr2		7610236	0					
ANR	7611119	PrimaryExpression	3		7610236	1					
ANR	7611120	CompoundStatement		193:85:6858:6858	7610236	1					
ANR	7611121	ExpressionStatement	raw_cp -> rawComps [ compno ] . dx = dx	765:32:31922:31954	7610236	0	True				
ANR	7611122	AssignmentExpression	raw_cp -> rawComps [ compno ] . dx = dx		7610236	0		=			
ANR	7611123	MemberAccess	raw_cp -> rawComps [ compno ] . dx		7610236	0					
ANR	7611124	ArrayIndexing	raw_cp -> rawComps [ compno ]		7610236	0					
ANR	7611125	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7611126	Identifier	raw_cp		7610236	0					
ANR	7611127	Identifier	rawComps		7610236	1					
ANR	7611128	Identifier	compno		7610236	1					
ANR	7611129	Identifier	dx		7610236	1					
ANR	7611130	Identifier	dx		7610236	1					
ANR	7611131	ExpressionStatement	raw_cp -> rawComps [ compno ] . dy = dy	766:32:31988:32020	7610236	1	True				
ANR	7611132	AssignmentExpression	raw_cp -> rawComps [ compno ] . dy = dy		7610236	0		=			
ANR	7611133	MemberAccess	raw_cp -> rawComps [ compno ] . dy		7610236	0					
ANR	7611134	ArrayIndexing	raw_cp -> rawComps [ compno ]		7610236	0					
ANR	7611135	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7611136	Identifier	raw_cp		7610236	0					
ANR	7611137	Identifier	rawComps		7610236	1					
ANR	7611138	Identifier	compno		7610236	1					
ANR	7611139	Identifier	dy		7610236	1					
ANR	7611140	Identifier	dy		7610236	1					
ANR	7611141	ElseStatement	else		7610236	0					
ANR	7611142	CompoundStatement		196:35:7027:7027	7610236	0					
ANR	7611143	ExpressionStatement	wrong = OPJ_TRUE	768:32:32091:32107	7610236	0	True				
ANR	7611144	AssignmentExpression	wrong = OPJ_TRUE		7610236	0		=			
ANR	7611145	Identifier	wrong		7610236	0					
ANR	7611146	Identifier	OPJ_TRUE		7610236	1					
ANR	7611147	ExpressionStatement	free ( substr1 )	774:12:32231:32244	7610236	16	True				
ANR	7611148	CallExpression	free ( substr1 )		7610236	0					
ANR	7611149	Callee	free		7610236	0					
ANR	7611150	Identifier	free		7610236	0					
ANR	7611151	ArgumentList	substr1		7610236	1					
ANR	7611152	Argument	substr1		7610236	0					
ANR	7611153	Identifier	substr1		7610236	0					
ANR	7611154	IfStatement	if ( wrong )		7610236	17					
ANR	7611155	Condition	wrong	775:16:32262:32266	7610236	0	True				
ANR	7611156	Identifier	wrong		7610236	0					
ANR	7611157	CompoundStatement		204:23:7239:7239	7610236	1					
ANR	7611158	ExpressionStatement	"fprintf ( stderr , ""\\nError: invalid raw image parameters\\n"" )"	776:16:32287:32345	7610236	0	True				
ANR	7611159	CallExpression	"fprintf ( stderr , ""\\nError: invalid raw image parameters\\n"" )"		7610236	0					
ANR	7611160	Callee	fprintf		7610236	0					
ANR	7611161	Identifier	fprintf		7610236	0					
ANR	7611162	ArgumentList	stderr		7610236	1					
ANR	7611163	Argument	stderr		7610236	0					
ANR	7611164	Identifier	stderr		7610236	0					
ANR	7611165	Argument	"""\\nError: invalid raw image parameters\\n"""		7610236	1					
ANR	7611166	PrimaryExpression	"""\\nError: invalid raw image parameters\\n"""		7610236	0					
ANR	7611167	ExpressionStatement	"fprintf ( stderr , ""Please use the Format option -F:\\n"" )"	777:16:32363:32416	7610236	1	True				
ANR	7611168	CallExpression	"fprintf ( stderr , ""Please use the Format option -F:\\n"" )"		7610236	0					
ANR	7611169	Callee	fprintf		7610236	0					
ANR	7611170	Identifier	fprintf		7610236	0					
ANR	7611171	ArgumentList	stderr		7610236	1					
ANR	7611172	Argument	stderr		7610236	0					
ANR	7611173	Identifier	stderr		7610236	0					
ANR	7611174	Argument	"""Please use the Format option -F:\\n"""		7610236	1					
ANR	7611175	PrimaryExpression	"""Please use the Format option -F:\\n"""		7610236	0					
ANR	7611176	ExpressionStatement	"fprintf ( stderr , ""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"" )"	778:16:32434:32551	7610236	2	True				
ANR	7611177	CallExpression	"fprintf ( stderr , ""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"" )"		7610236	0					
ANR	7611178	Callee	fprintf		7610236	0					
ANR	7611179	Identifier	fprintf		7610236	0					
ANR	7611180	ArgumentList	stderr		7610236	1					
ANR	7611181	Argument	stderr		7610236	0					
ANR	7611182	Identifier	stderr		7610236	0					
ANR	7611183	Argument	"""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"""		7610236	1					
ANR	7611184	PrimaryExpression	"""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"""		7610236	0					
ANR	7611185	ExpressionStatement	"fprintf ( stderr , ""If subsampling is omitted, 1x1 is assumed for all components\\n"" )"	780:16:32569:32674	7610236	3	True				
ANR	7611186	CallExpression	"fprintf ( stderr , ""If subsampling is omitted, 1x1 is assumed for all components\\n"" )"		7610236	0					
ANR	7611187	Callee	fprintf		7610236	0					
ANR	7611188	Identifier	fprintf		7610236	0					
ANR	7611189	ArgumentList	stderr		7610236	1					
ANR	7611190	Argument	stderr		7610236	0					
ANR	7611191	Identifier	stderr		7610236	0					
ANR	7611192	Argument	"""If subsampling is omitted, 1x1 is assumed for all components\\n"""		7610236	1					
ANR	7611193	PrimaryExpression	"""If subsampling is omitted, 1x1 is assumed for all components\\n"""		7610236	0					
ANR	7611194	ExpressionStatement	"fprintf ( stderr , ""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"" )"	782:16:32692:32800	7610236	4	True				
ANR	7611195	CallExpression	"fprintf ( stderr , ""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"" )"		7610236	0					
ANR	7611196	Callee	fprintf		7610236	0					
ANR	7611197	Identifier	fprintf		7610236	0					
ANR	7611198	ArgumentList	stderr		7610236	1					
ANR	7611199	Argument	stderr		7610236	0					
ANR	7611200	Identifier	stderr		7610236	0					
ANR	7611201	Argument	"""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"""		7610236	1					
ANR	7611202	PrimaryExpression	"""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"""		7610236	0					
ANR	7611203	ExpressionStatement	"fprintf ( stderr , ""         for raw 512x512 image with 4:2:0 subsampling\\n"" )"	784:16:32818:32892	7610236	5	True				
ANR	7611204	CallExpression	"fprintf ( stderr , ""         for raw 512x512 image with 4:2:0 subsampling\\n"" )"		7610236	0					
ANR	7611205	Callee	fprintf		7610236	0					
ANR	7611206	Identifier	fprintf		7610236	0					
ANR	7611207	ArgumentList	stderr		7610236	1					
ANR	7611208	Argument	stderr		7610236	0					
ANR	7611209	Identifier	stderr		7610236	0					
ANR	7611210	Argument	"""         for raw 512x512 image with 4:2:0 subsampling\\n"""		7610236	1					
ANR	7611211	PrimaryExpression	"""         for raw 512x512 image with 4:2:0 subsampling\\n"""		7610236	0					
ANR	7611212	ExpressionStatement	"fprintf ( stderr , ""Aborting.\\n"" )"	785:16:32910:32940	7610236	6	True				
ANR	7611213	CallExpression	"fprintf ( stderr , ""Aborting.\\n"" )"		7610236	0					
ANR	7611214	Callee	fprintf		7610236	0					
ANR	7611215	Identifier	fprintf		7610236	0					
ANR	7611216	ArgumentList	stderr		7610236	1					
ANR	7611217	Argument	stderr		7610236	0					
ANR	7611218	Identifier	stderr		7610236	0					
ANR	7611219	Argument	"""Aborting.\\n"""		7610236	1					
ANR	7611220	PrimaryExpression	"""Aborting.\\n"""		7610236	0					
ANR	7611221	ReturnStatement	return 1 ;	786:16:32958:32966	7610236	7	True				
ANR	7611222	PrimaryExpression	1		7610236	0					
ANR	7611223	BreakStatement	break ;	789:8:33000:33005	7610236	14	True				
ANR	7611224	Label	case 'q' :	793:8:33085:33093	7610236	15	True				
ANR	7611225	CompoundStatement		223:12:8111:8131	7610236	16					
ANR	7611226	IdentifierDeclStatement	char * s = opj_optarg ;	794:12:33141:33161	7610236	0	True				
ANR	7611227	IdentifierDecl	* s = opj_optarg		7610236	0					
ANR	7611228	IdentifierDeclType	char *		7610236	0					
ANR	7611229	Identifier	s		7610236	1					
ANR	7611230	AssignmentExpression	* s = opj_optarg		7610236	2		=			
ANR	7611231	Identifier	opj_optarg		7610236	0					
ANR	7611232	Identifier	opj_optarg		7610236	1					
ANR	7611233	WhileStatement	"while ( sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1 )"		7610236	1					
ANR	7611234	Condition	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1"	795:19:33182:33277	7610236	0	True				
ANR	7611235	EqualityExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1"		7610236	0		==			
ANR	7611236	CallExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] )"		7610236	0					
ANR	7611237	Callee	sscanf		7610236	0					
ANR	7611238	Identifier	sscanf		7610236	0					
ANR	7611239	ArgumentList	s		7610236	1					
ANR	7611240	Argument	s		7610236	0					
ANR	7611241	Identifier	s		7610236	0					
ANR	7611242	Argument	"""%f"""		7610236	1					
ANR	7611243	PrimaryExpression	"""%f"""		7610236	0					
ANR	7611244	Argument	& parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		7610236	2					
ANR	7611245	UnaryOperationExpression	& parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		7610236	0					
ANR	7611246	UnaryOperator	&		7610236	0					
ANR	7611247	ArrayIndexing	parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		7610236	1					
ANR	7611248	PtrMemberAccess	parameters -> tcp_distoratio		7610236	0					
ANR	7611249	Identifier	parameters		7610236	0					
ANR	7611250	Identifier	tcp_distoratio		7610236	1					
ANR	7611251	PtrMemberAccess	parameters -> tcp_numlayers		7610236	1					
ANR	7611252	Identifier	parameters		7610236	0					
ANR	7611253	Identifier	tcp_numlayers		7610236	1					
ANR	7611254	PrimaryExpression	1		7610236	1					
ANR	7611255	CompoundStatement		225:26:8250:8250	7610236	1					
ANR	7611256	ExpressionStatement	parameters -> tcp_numlayers ++	797:16:33298:33325	7610236	0	True				
ANR	7611257	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		7610236	0					
ANR	7611258	PtrMemberAccess	parameters -> tcp_numlayers		7610236	0					
ANR	7611259	Identifier	parameters		7610236	0					
ANR	7611260	Identifier	tcp_numlayers		7610236	1					
ANR	7611261	IncDec	++		7610236	1					
ANR	7611262	WhileStatement	"while ( * s && * s != ',' )"		7610236	1					
ANR	7611263	Condition	"* s && * s != ','"	798:23:33350:33364	7610236	0	True				
ANR	7611264	AndExpression	"* s && * s != ','"		7610236	0		&&			
ANR	7611265	UnaryOperationExpression	* s		7610236	0					
ANR	7611266	UnaryOperator	*		7610236	0					
ANR	7611267	Identifier	s		7610236	1					
ANR	7611268	EqualityExpression	"* s != ','"		7610236	1		!=			
ANR	7611269	UnaryOperationExpression	* s		7610236	0					
ANR	7611270	UnaryOperator	*		7610236	0					
ANR	7611271	Identifier	s		7610236	1					
ANR	7611272	PrimaryExpression	"','"		7610236	1					
ANR	7611273	CompoundStatement		227:40:8337:8337	7610236	1					
ANR	7611274	ExpressionStatement	s ++	799:20:33389:33392	7610236	0	True				
ANR	7611275	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611276	Identifier	s		7610236	0					
ANR	7611277	IncDec	++		7610236	1					
ANR	7611278	IfStatement	if ( ! * s )		7610236	2					
ANR	7611279	Condition	! * s	801:20:33432:33434	7610236	0	True				
ANR	7611280	UnaryOperationExpression	! * s		7610236	0					
ANR	7611281	UnaryOperator	!		7610236	0					
ANR	7611282	UnaryOperationExpression	* s		7610236	1					
ANR	7611283	UnaryOperator	*		7610236	0					
ANR	7611284	Identifier	s		7610236	1					
ANR	7611285	CompoundStatement		230:25:8407:8407	7610236	1					
ANR	7611286	BreakStatement	break ;	802:20:33459:33464	7610236	0	True				
ANR	7611287	ExpressionStatement	s ++	804:16:33500:33503	7610236	3	True				
ANR	7611288	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611289	Identifier	s		7610236	0					
ANR	7611290	IncDec	++		7610236	1					
ANR	7611291	ExpressionStatement	parameters -> cp_fixed_quality = 1	806:12:33531:33563	7610236	2	True				
ANR	7611292	AssignmentExpression	parameters -> cp_fixed_quality = 1		7610236	0		=			
ANR	7611293	PtrMemberAccess	parameters -> cp_fixed_quality		7610236	0					
ANR	7611294	Identifier	parameters		7610236	0					
ANR	7611295	Identifier	cp_fixed_quality		7610236	1					
ANR	7611296	PrimaryExpression	1		7610236	1					
ANR	7611297	BreakStatement	break ;	808:8:33583:33588	7610236	17	True				
ANR	7611298	Label	case 'f' :	813:8:33686:33694	7610236	18	True				
ANR	7611299	CompoundStatement		246:12:8844:8864	7610236	19					
ANR	7611300	IdentifierDeclStatement	"int * row = NULL , * col = NULL ;"	814:12:33756:33784	7610236	0	True				
ANR	7611301	IdentifierDecl	* row = NULL		7610236	0					
ANR	7611302	IdentifierDeclType	int *		7610236	0					
ANR	7611303	Identifier	row		7610236	1					
ANR	7611304	AssignmentExpression	* row = NULL		7610236	2		=			
ANR	7611305	Identifier	NULL		7610236	0					
ANR	7611306	Identifier	NULL		7610236	1					
ANR	7611307	IdentifierDecl	* col = NULL		7610236	1					
ANR	7611308	IdentifierDeclType	int *		7610236	0					
ANR	7611309	Identifier	col		7610236	1					
ANR	7611310	AssignmentExpression	* col = NULL		7610236	2		=			
ANR	7611311	Identifier	NULL		7610236	0					
ANR	7611312	Identifier	NULL		7610236	1					
ANR	7611313	IdentifierDeclStatement	"OPJ_UINT32 numlayers = 0 , numresolution = 0 , matrix_width = 0 ;"	815:12:33798:33859	7610236	1	True				
ANR	7611314	IdentifierDecl	numlayers = 0		7610236	0					
ANR	7611315	IdentifierDeclType	OPJ_UINT32		7610236	0					
ANR	7611316	Identifier	numlayers		7610236	1					
ANR	7611317	AssignmentExpression	numlayers = 0		7610236	2		=			
ANR	7611318	Identifier	numlayers		7610236	0					
ANR	7611319	PrimaryExpression	0		7610236	1					
ANR	7611320	IdentifierDecl	numresolution = 0		7610236	1					
ANR	7611321	IdentifierDeclType	OPJ_UINT32		7610236	0					
ANR	7611322	Identifier	numresolution		7610236	1					
ANR	7611323	AssignmentExpression	numresolution = 0		7610236	2		=			
ANR	7611324	Identifier	numresolution		7610236	0					
ANR	7611325	PrimaryExpression	0		7610236	1					
ANR	7611326	IdentifierDecl	matrix_width = 0		7610236	2					
ANR	7611327	IdentifierDeclType	OPJ_UINT32		7610236	0					
ANR	7611328	Identifier	matrix_width		7610236	1					
ANR	7611329	AssignmentExpression	matrix_width = 0		7610236	2		=			
ANR	7611330	Identifier	matrix_width		7610236	0					
ANR	7611331	PrimaryExpression	0		7610236	1					
ANR	7611332	IdentifierDeclStatement	char * s = opj_optarg ;	817:12:33874:33894	7610236	2	True				
ANR	7611333	IdentifierDecl	* s = opj_optarg		7610236	0					
ANR	7611334	IdentifierDeclType	char *		7610236	0					
ANR	7611335	Identifier	s		7610236	1					
ANR	7611336	AssignmentExpression	* s = opj_optarg		7610236	2		=			
ANR	7611337	Identifier	opj_optarg		7610236	0					
ANR	7611338	Identifier	opj_optarg		7610236	1					
ANR	7611339	ExpressionStatement	"sscanf ( s , ""%u"" , & numlayers )"	818:12:33908:33935	7610236	3	True				
ANR	7611340	CallExpression	"sscanf ( s , ""%u"" , & numlayers )"		7610236	0					
ANR	7611341	Callee	sscanf		7610236	0					
ANR	7611342	Identifier	sscanf		7610236	0					
ANR	7611343	ArgumentList	s		7610236	1					
ANR	7611344	Argument	s		7610236	0					
ANR	7611345	Identifier	s		7610236	0					
ANR	7611346	Argument	"""%u"""		7610236	1					
ANR	7611347	PrimaryExpression	"""%u"""		7610236	0					
ANR	7611348	Argument	& numlayers		7610236	2					
ANR	7611349	UnaryOperationExpression	& numlayers		7610236	0					
ANR	7611350	UnaryOperator	&		7610236	0					
ANR	7611351	Identifier	numlayers		7610236	1					
ANR	7611352	ExpressionStatement	s ++	819:12:33949:33952	7610236	4	True				
ANR	7611353	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611354	Identifier	s		7610236	0					
ANR	7611355	IncDec	++		7610236	1					
ANR	7611356	IfStatement	if ( numlayers > 9 )		7610236	5					
ANR	7611357	Condition	numlayers > 9	820:16:33970:33982	7610236	0	True				
ANR	7611358	RelationalExpression	numlayers > 9		7610236	0		>			
ANR	7611359	Identifier	numlayers		7610236	0					
ANR	7611360	PrimaryExpression	9		7610236	1					
ANR	7611361	CompoundStatement		249:31:8955:8955	7610236	1					
ANR	7611362	ExpressionStatement	s ++	821:16:34003:34006	7610236	0	True				
ANR	7611363	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611364	Identifier	s		7610236	0					
ANR	7611365	IncDec	++		7610236	1					
ANR	7611366	ExpressionStatement	parameters -> tcp_numlayers = ( int ) numlayers	824:12:34035:34077	7610236	6	True				
ANR	7611367	AssignmentExpression	parameters -> tcp_numlayers = ( int ) numlayers		7610236	0		=			
ANR	7611368	PtrMemberAccess	parameters -> tcp_numlayers		7610236	0					
ANR	7611369	Identifier	parameters		7610236	0					
ANR	7611370	Identifier	tcp_numlayers		7610236	1					
ANR	7611371	CastExpression	( int ) numlayers		7610236	1					
ANR	7611372	CastTarget	int		7610236	0					
ANR	7611373	Identifier	numlayers		7610236	1					
ANR	7611374	ExpressionStatement	numresolution = ( OPJ_UINT32 ) parameters -> numresolution	825:12:34091:34144	7610236	7	True				
ANR	7611375	AssignmentExpression	numresolution = ( OPJ_UINT32 ) parameters -> numresolution		7610236	0		=			
ANR	7611376	Identifier	numresolution		7610236	0					
ANR	7611377	CastExpression	( OPJ_UINT32 ) parameters -> numresolution		7610236	1					
ANR	7611378	CastTarget	OPJ_UINT32		7610236	0					
ANR	7611379	PtrMemberAccess	parameters -> numresolution		7610236	1					
ANR	7611380	Identifier	parameters		7610236	0					
ANR	7611381	Identifier	numresolution		7610236	1					
ANR	7611382	ExpressionStatement	matrix_width = numresolution * 3	826:12:34158:34190	7610236	8	True				
ANR	7611383	AssignmentExpression	matrix_width = numresolution * 3		7610236	0		=			
ANR	7611384	Identifier	matrix_width		7610236	0					
ANR	7611385	MultiplicativeExpression	numresolution * 3		7610236	1		*			
ANR	7611386	Identifier	numresolution		7610236	0					
ANR	7611387	PrimaryExpression	3		7610236	1					
ANR	7611388	ExpressionStatement	parameters -> cp_matrice = ( int * ) malloc ( numlayers * matrix_width * sizeof ( int ) )	827:12:34204:34283	7610236	9	True				
ANR	7611389	AssignmentExpression	parameters -> cp_matrice = ( int * ) malloc ( numlayers * matrix_width * sizeof ( int ) )		7610236	0		=			
ANR	7611390	PtrMemberAccess	parameters -> cp_matrice		7610236	0					
ANR	7611391	Identifier	parameters		7610236	0					
ANR	7611392	Identifier	cp_matrice		7610236	1					
ANR	7611393	CastExpression	( int * ) malloc ( numlayers * matrix_width * sizeof ( int ) )		7610236	1					
ANR	7611394	CastTarget	int *		7610236	0					
ANR	7611395	CallExpression	malloc ( numlayers * matrix_width * sizeof ( int ) )		7610236	1					
ANR	7611396	Callee	malloc		7610236	0					
ANR	7611397	Identifier	malloc		7610236	0					
ANR	7611398	ArgumentList	numlayers * matrix_width * sizeof ( int )		7610236	1					
ANR	7611399	Argument	numlayers * matrix_width * sizeof ( int )		7610236	0					
ANR	7611400	MultiplicativeExpression	numlayers * matrix_width * sizeof ( int )		7610236	0		*			
ANR	7611401	Identifier	numlayers		7610236	0					
ANR	7611402	MultiplicativeExpression	matrix_width * sizeof ( int )		7610236	1		*			
ANR	7611403	Identifier	matrix_width		7610236	0					
ANR	7611404	SizeofExpression	sizeof ( int )		7610236	1					
ANR	7611405	Sizeof	sizeof		7610236	0					
ANR	7611406	SizeofOperand	int		7610236	1					
ANR	7611407	IfStatement	if ( parameters -> cp_matrice == NULL )		7610236	10					
ANR	7611408	Condition	parameters -> cp_matrice == NULL	828:16:34301:34330	7610236	0	True				
ANR	7611409	EqualityExpression	parameters -> cp_matrice == NULL		7610236	0		==			
ANR	7611410	PtrMemberAccess	parameters -> cp_matrice		7610236	0					
ANR	7611411	Identifier	parameters		7610236	0					
ANR	7611412	Identifier	cp_matrice		7610236	1					
ANR	7611413	Identifier	NULL		7610236	1					
ANR	7611414	CompoundStatement		257:48:9303:9303	7610236	1					
ANR	7611415	ReturnStatement	return 1 ;	829:16:34351:34359	7610236	0	True				
ANR	7611416	PrimaryExpression	1		7610236	0					
ANR	7611417	ExpressionStatement	s = s + 2	831:12:34387:34396	7610236	11	True				
ANR	7611418	AssignmentExpression	s = s + 2		7610236	0		=			
ANR	7611419	Identifier	s		7610236	0					
ANR	7611420	AdditiveExpression	s + 2		7610236	1		+			
ANR	7611421	Identifier	s		7610236	0					
ANR	7611422	PrimaryExpression	2		7610236	1					
ANR	7611423	ForStatement	for ( i = 0 ; i < numlayers ; i ++ )		7610236	12					
ANR	7611424	ForInit	i = 0 ;	833:17:34416:34421	7610236	0	True				
ANR	7611425	AssignmentExpression	i = 0		7610236	0		=			
ANR	7611426	Identifier	i		7610236	0					
ANR	7611427	PrimaryExpression	0		7610236	1					
ANR	7611428	Condition	i < numlayers	833:24:34423:34435	7610236	1	True				
ANR	7611429	RelationalExpression	i < numlayers		7610236	0		<			
ANR	7611430	Identifier	i		7610236	0					
ANR	7611431	Identifier	numlayers		7610236	1					
ANR	7611432	PostIncDecOperationExpression	i ++	833:39:34438:34440	7610236	2	True				
ANR	7611433	Identifier	i		7610236	0					
ANR	7611434	IncDec	++		7610236	1					
ANR	7611435	CompoundStatement		262:44:9413:9413	7610236	3					
ANR	7611436	ExpressionStatement	row = & parameters -> cp_matrice [ i * matrix_width ]	834:16:34461:34508	7610236	0	True				
ANR	7611437	AssignmentExpression	row = & parameters -> cp_matrice [ i * matrix_width ]		7610236	0		=			
ANR	7611438	Identifier	row		7610236	0					
ANR	7611439	UnaryOperationExpression	& parameters -> cp_matrice [ i * matrix_width ]		7610236	1					
ANR	7611440	UnaryOperator	&		7610236	0					
ANR	7611441	ArrayIndexing	parameters -> cp_matrice [ i * matrix_width ]		7610236	1					
ANR	7611442	PtrMemberAccess	parameters -> cp_matrice		7610236	0					
ANR	7611443	Identifier	parameters		7610236	0					
ANR	7611444	Identifier	cp_matrice		7610236	1					
ANR	7611445	MultiplicativeExpression	i * matrix_width		7610236	1		*			
ANR	7611446	Identifier	i		7610236	0					
ANR	7611447	Identifier	matrix_width		7610236	1					
ANR	7611448	ExpressionStatement	col = row	835:16:34526:34535	7610236	1	True				
ANR	7611449	AssignmentExpression	col = row		7610236	0		=			
ANR	7611450	Identifier	col		7610236	0					
ANR	7611451	Identifier	row		7610236	1					
ANR	7611452	ExpressionStatement	parameters -> tcp_rates [ i ] = 1	836:16:34553:34581	7610236	2	True				
ANR	7611453	AssignmentExpression	parameters -> tcp_rates [ i ] = 1		7610236	0		=			
ANR	7611454	ArrayIndexing	parameters -> tcp_rates [ i ]		7610236	0					
ANR	7611455	PtrMemberAccess	parameters -> tcp_rates		7610236	0					
ANR	7611456	Identifier	parameters		7610236	0					
ANR	7611457	Identifier	tcp_rates		7610236	1					
ANR	7611458	Identifier	i		7610236	1					
ANR	7611459	PrimaryExpression	1		7610236	1					
ANR	7611460	ExpressionStatement	"sscanf ( s , ""%d,"" , & col [ 0 ] )"	837:16:34599:34624	7610236	3	True				
ANR	7611461	CallExpression	"sscanf ( s , ""%d,"" , & col [ 0 ] )"		7610236	0					
ANR	7611462	Callee	sscanf		7610236	0					
ANR	7611463	Identifier	sscanf		7610236	0					
ANR	7611464	ArgumentList	s		7610236	1					
ANR	7611465	Argument	s		7610236	0					
ANR	7611466	Identifier	s		7610236	0					
ANR	7611467	Argument	"""%d,"""		7610236	1					
ANR	7611468	PrimaryExpression	"""%d,"""		7610236	0					
ANR	7611469	Argument	& col [ 0 ]		7610236	2					
ANR	7611470	UnaryOperationExpression	& col [ 0 ]		7610236	0					
ANR	7611471	UnaryOperator	&		7610236	0					
ANR	7611472	ArrayIndexing	col [ 0 ]		7610236	1					
ANR	7611473	Identifier	col		7610236	0					
ANR	7611474	PrimaryExpression	0		7610236	1					
ANR	7611475	ExpressionStatement	s += 2	838:16:34642:34648	7610236	4	True				
ANR	7611476	AssignmentExpression	s += 2		7610236	0		+=			
ANR	7611477	Identifier	s		7610236	0					
ANR	7611478	PrimaryExpression	2		7610236	1					
ANR	7611479	IfStatement	if ( col [ 0 ] > 9 )		7610236	5					
ANR	7611480	Condition	col [ 0 ] > 9	839:20:34670:34679	7610236	0	True				
ANR	7611481	RelationalExpression	col [ 0 ] > 9		7610236	0		>			
ANR	7611482	ArrayIndexing	col [ 0 ]		7610236	0					
ANR	7611483	Identifier	col		7610236	0					
ANR	7611484	PrimaryExpression	0		7610236	1					
ANR	7611485	PrimaryExpression	9		7610236	1					
ANR	7611486	CompoundStatement		268:32:9652:9652	7610236	1					
ANR	7611487	ExpressionStatement	s ++	840:20:34704:34707	7610236	0	True				
ANR	7611488	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611489	Identifier	s		7610236	0					
ANR	7611490	IncDec	++		7610236	1					
ANR	7611491	ExpressionStatement	col [ 1 ] = 0	842:16:34743:34753	7610236	6	True				
ANR	7611492	AssignmentExpression	col [ 1 ] = 0		7610236	0		=			
ANR	7611493	ArrayIndexing	col [ 1 ]		7610236	0					
ANR	7611494	Identifier	col		7610236	0					
ANR	7611495	PrimaryExpression	1		7610236	1					
ANR	7611496	PrimaryExpression	0		7610236	1					
ANR	7611497	ExpressionStatement	col [ 2 ] = 0	843:16:34771:34781	7610236	7	True				
ANR	7611498	AssignmentExpression	col [ 2 ] = 0		7610236	0		=			
ANR	7611499	ArrayIndexing	col [ 2 ]		7610236	0					
ANR	7611500	Identifier	col		7610236	0					
ANR	7611501	PrimaryExpression	2		7610236	1					
ANR	7611502	PrimaryExpression	0		7610236	1					
ANR	7611503	ForStatement	for ( j = 1 ; j < numresolution ; j ++ )		7610236	8					
ANR	7611504	ForInit	j = 1 ;	844:21:34804:34809	7610236	0	True				
ANR	7611505	AssignmentExpression	j = 1		7610236	0		=			
ANR	7611506	Identifier	j		7610236	0					
ANR	7611507	PrimaryExpression	1		7610236	1					
ANR	7611508	Condition	j < numresolution	844:28:34811:34827	7610236	1	True				
ANR	7611509	RelationalExpression	j < numresolution		7610236	0		<			
ANR	7611510	Identifier	j		7610236	0					
ANR	7611511	Identifier	numresolution		7610236	1					
ANR	7611512	PostIncDecOperationExpression	j ++	844:47:34830:34832	7610236	2	True				
ANR	7611513	Identifier	j		7610236	0					
ANR	7611514	IncDec	++		7610236	1					
ANR	7611515	CompoundStatement		273:52:9805:9805	7610236	3					
ANR	7611516	ExpressionStatement	col += 3	845:20:34857:34865	7610236	0	True				
ANR	7611517	AssignmentExpression	col += 3		7610236	0		+=			
ANR	7611518	Identifier	col		7610236	0					
ANR	7611519	PrimaryExpression	3		7610236	1					
ANR	7611520	ExpressionStatement	"sscanf ( s , ""%d,%d,%d"" , & col [ 0 ] , & col [ 1 ] , & col [ 2 ] )"	846:20:34887:34935	7610236	1	True				
ANR	7611521	CallExpression	"sscanf ( s , ""%d,%d,%d"" , & col [ 0 ] , & col [ 1 ] , & col [ 2 ] )"		7610236	0					
ANR	7611522	Callee	sscanf		7610236	0					
ANR	7611523	Identifier	sscanf		7610236	0					
ANR	7611524	ArgumentList	s		7610236	1					
ANR	7611525	Argument	s		7610236	0					
ANR	7611526	Identifier	s		7610236	0					
ANR	7611527	Argument	"""%d,%d,%d"""		7610236	1					
ANR	7611528	PrimaryExpression	"""%d,%d,%d"""		7610236	0					
ANR	7611529	Argument	& col [ 0 ]		7610236	2					
ANR	7611530	UnaryOperationExpression	& col [ 0 ]		7610236	0					
ANR	7611531	UnaryOperator	&		7610236	0					
ANR	7611532	ArrayIndexing	col [ 0 ]		7610236	1					
ANR	7611533	Identifier	col		7610236	0					
ANR	7611534	PrimaryExpression	0		7610236	1					
ANR	7611535	Argument	& col [ 1 ]		7610236	3					
ANR	7611536	UnaryOperationExpression	& col [ 1 ]		7610236	0					
ANR	7611537	UnaryOperator	&		7610236	0					
ANR	7611538	ArrayIndexing	col [ 1 ]		7610236	1					
ANR	7611539	Identifier	col		7610236	0					
ANR	7611540	PrimaryExpression	1		7610236	1					
ANR	7611541	Argument	& col [ 2 ]		7610236	4					
ANR	7611542	UnaryOperationExpression	& col [ 2 ]		7610236	0					
ANR	7611543	UnaryOperator	&		7610236	0					
ANR	7611544	ArrayIndexing	col [ 2 ]		7610236	1					
ANR	7611545	Identifier	col		7610236	0					
ANR	7611546	PrimaryExpression	2		7610236	1					
ANR	7611547	ExpressionStatement	s += 6	847:20:34957:34963	7610236	2	True				
ANR	7611548	AssignmentExpression	s += 6		7610236	0		+=			
ANR	7611549	Identifier	s		7610236	0					
ANR	7611550	PrimaryExpression	6		7610236	1					
ANR	7611551	IfStatement	if ( col [ 0 ] > 9 )		7610236	3					
ANR	7611552	Condition	col [ 0 ] > 9	848:24:34989:34998	7610236	0	True				
ANR	7611553	RelationalExpression	col [ 0 ] > 9		7610236	0		>			
ANR	7611554	ArrayIndexing	col [ 0 ]		7610236	0					
ANR	7611555	Identifier	col		7610236	0					
ANR	7611556	PrimaryExpression	0		7610236	1					
ANR	7611557	PrimaryExpression	9		7610236	1					
ANR	7611558	CompoundStatement		277:36:9971:9971	7610236	1					
ANR	7611559	ExpressionStatement	s ++	849:24:35027:35030	7610236	0	True				
ANR	7611560	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611561	Identifier	s		7610236	0					
ANR	7611562	IncDec	++		7610236	1					
ANR	7611563	IfStatement	if ( col [ 1 ] > 9 )		7610236	4					
ANR	7611564	Condition	col [ 1 ] > 9	851:24:35078:35087	7610236	0	True				
ANR	7611565	RelationalExpression	col [ 1 ] > 9		7610236	0		>			
ANR	7611566	ArrayIndexing	col [ 1 ]		7610236	0					
ANR	7611567	Identifier	col		7610236	0					
ANR	7611568	PrimaryExpression	1		7610236	1					
ANR	7611569	PrimaryExpression	9		7610236	1					
ANR	7611570	CompoundStatement		280:36:10060:10060	7610236	1					
ANR	7611571	ExpressionStatement	s ++	852:24:35116:35119	7610236	0	True				
ANR	7611572	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611573	Identifier	s		7610236	0					
ANR	7611574	IncDec	++		7610236	1					
ANR	7611575	IfStatement	if ( col [ 2 ] > 9 )		7610236	5					
ANR	7611576	Condition	col [ 2 ] > 9	854:24:35167:35176	7610236	0	True				
ANR	7611577	RelationalExpression	col [ 2 ] > 9		7610236	0		>			
ANR	7611578	ArrayIndexing	col [ 2 ]		7610236	0					
ANR	7611579	Identifier	col		7610236	0					
ANR	7611580	PrimaryExpression	2		7610236	1					
ANR	7611581	PrimaryExpression	9		7610236	1					
ANR	7611582	CompoundStatement		283:36:10149:10149	7610236	1					
ANR	7611583	ExpressionStatement	s ++	855:24:35205:35208	7610236	0	True				
ANR	7611584	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611585	Identifier	s		7610236	0					
ANR	7611586	IncDec	++		7610236	1					
ANR	7611587	IfStatement	if ( i < numlayers - 1 )		7610236	9					
ANR	7611588	Condition	i < numlayers - 1	858:20:35270:35286	7610236	0	True				
ANR	7611589	RelationalExpression	i < numlayers - 1		7610236	0		<			
ANR	7611590	Identifier	i		7610236	0					
ANR	7611591	AdditiveExpression	numlayers - 1		7610236	1		-			
ANR	7611592	Identifier	numlayers		7610236	0					
ANR	7611593	PrimaryExpression	1		7610236	1					
ANR	7611594	CompoundStatement		287:39:10259:10259	7610236	1					
ANR	7611595	ExpressionStatement	s ++	859:20:35311:35314	7610236	0	True				
ANR	7611596	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7611597	Identifier	s		7610236	0					
ANR	7611598	IncDec	++		7610236	1					
ANR	7611599	ExpressionStatement	parameters -> cp_fixed_alloc = 1	862:12:35360:35390	7610236	13	True				
ANR	7611600	AssignmentExpression	parameters -> cp_fixed_alloc = 1		7610236	0		=			
ANR	7611601	PtrMemberAccess	parameters -> cp_fixed_alloc		7610236	0					
ANR	7611602	Identifier	parameters		7610236	0					
ANR	7611603	Identifier	cp_fixed_alloc		7610236	1					
ANR	7611604	PrimaryExpression	1		7610236	1					
ANR	7611605	BreakStatement	break ;	864:8:35410:35415	7610236	20	True				
ANR	7611606	Label	case 't' :	868:8:35495:35503	7610236	21	True				
ANR	7611607	CompoundStatement		297:18:10475:10475	7610236	22					
ANR	7611608	ExpressionStatement	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy )"	869:12:35539:35608	7610236	0	True				
ANR	7611609	CallExpression	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy )"		7610236	0					
ANR	7611610	Callee	sscanf		7610236	0					
ANR	7611611	Identifier	sscanf		7610236	0					
ANR	7611612	ArgumentList	opj_optarg		7610236	1					
ANR	7611613	Argument	opj_optarg		7610236	0					
ANR	7611614	Identifier	opj_optarg		7610236	0					
ANR	7611615	Argument	"""%d,%d"""		7610236	1					
ANR	7611616	PrimaryExpression	"""%d,%d"""		7610236	0					
ANR	7611617	Argument	& parameters -> cp_tdx		7610236	2					
ANR	7611618	UnaryOperationExpression	& parameters -> cp_tdx		7610236	0					
ANR	7611619	UnaryOperator	&		7610236	0					
ANR	7611620	PtrMemberAccess	parameters -> cp_tdx		7610236	1					
ANR	7611621	Identifier	parameters		7610236	0					
ANR	7611622	Identifier	cp_tdx		7610236	1					
ANR	7611623	Argument	& parameters -> cp_tdy		7610236	3					
ANR	7611624	UnaryOperationExpression	& parameters -> cp_tdy		7610236	0					
ANR	7611625	UnaryOperator	&		7610236	0					
ANR	7611626	PtrMemberAccess	parameters -> cp_tdy		7610236	1					
ANR	7611627	Identifier	parameters		7610236	0					
ANR	7611628	Identifier	cp_tdy		7610236	1					
ANR	7611629	ExpressionStatement	parameters -> tile_size_on = OPJ_TRUE	870:12:35622:35657	7610236	1	True				
ANR	7611630	AssignmentExpression	parameters -> tile_size_on = OPJ_TRUE		7610236	0		=			
ANR	7611631	PtrMemberAccess	parameters -> tile_size_on		7610236	0					
ANR	7611632	Identifier	parameters		7610236	0					
ANR	7611633	Identifier	tile_size_on		7610236	1					
ANR	7611634	Identifier	OPJ_TRUE		7610236	1					
ANR	7611635	BreakStatement	break ;	872:8:35677:35682	7610236	23	True				
ANR	7611636	Label	case 'n' :	876:8:35762:35770	7610236	24	True				
ANR	7611637	CompoundStatement		305:18:10742:10742	7610236	25					
ANR	7611638	ExpressionStatement	"sscanf ( opj_optarg , ""%d"" , & parameters -> numresolution )"	877:12:35811:35863	7610236	0	True				
ANR	7611639	CallExpression	"sscanf ( opj_optarg , ""%d"" , & parameters -> numresolution )"		7610236	0					
ANR	7611640	Callee	sscanf		7610236	0					
ANR	7611641	Identifier	sscanf		7610236	0					
ANR	7611642	ArgumentList	opj_optarg		7610236	1					
ANR	7611643	Argument	opj_optarg		7610236	0					
ANR	7611644	Identifier	opj_optarg		7610236	0					
ANR	7611645	Argument	"""%d"""		7610236	1					
ANR	7611646	PrimaryExpression	"""%d"""		7610236	0					
ANR	7611647	Argument	& parameters -> numresolution		7610236	2					
ANR	7611648	UnaryOperationExpression	& parameters -> numresolution		7610236	0					
ANR	7611649	UnaryOperator	&		7610236	0					
ANR	7611650	PtrMemberAccess	parameters -> numresolution		7610236	1					
ANR	7611651	Identifier	parameters		7610236	0					
ANR	7611652	Identifier	numresolution		7610236	1					
ANR	7611653	BreakStatement	break ;	879:8:35883:35888	7610236	26	True				
ANR	7611654	Label	case 'c' :	882:8:35967:35975	7610236	27	True				
ANR	7611655	CompoundStatement		316:12:11081:11088	7610236	28					
ANR	7611656	IdentifierDeclStatement	char sep ;	883:12:36024:36032	7610236	0	True				
ANR	7611657	IdentifierDecl	sep		7610236	0					
ANR	7611658	IdentifierDeclType	char		7610236	0					
ANR	7611659	Identifier	sep		7610236	1					
ANR	7611660	IdentifierDeclStatement	int res_spec = 0 ;	884:12:36046:36062	7610236	1	True				
ANR	7611661	IdentifierDecl	res_spec = 0		7610236	0					
ANR	7611662	IdentifierDeclType	int		7610236	0					
ANR	7611663	Identifier	res_spec		7610236	1					
ANR	7611664	AssignmentExpression	res_spec = 0		7610236	2		=			
ANR	7611665	Identifier	res_spec		7610236	0					
ANR	7611666	PrimaryExpression	0		7610236	1					
ANR	7611667	IdentifierDeclStatement	char * s = opj_optarg ;	886:12:36077:36097	7610236	2	True				
ANR	7611668	IdentifierDecl	* s = opj_optarg		7610236	0					
ANR	7611669	IdentifierDeclType	char *		7610236	0					
ANR	7611670	Identifier	s		7610236	1					
ANR	7611671	AssignmentExpression	* s = opj_optarg		7610236	2		=			
ANR	7611672	Identifier	opj_optarg		7610236	0					
ANR	7611673	Identifier	opj_optarg		7610236	1					
ANR	7611674	IdentifierDeclStatement	int ret ;	887:12:36111:36118	7610236	3	True				
ANR	7611675	IdentifierDecl	ret		7610236	0					
ANR	7611676	IdentifierDeclType	int		7610236	0					
ANR	7611677	Identifier	ret		7610236	1					
ANR	7611678	DoStatement	do		7610236	4					
ANR	7611679	CompoundStatement		317:15:11105:11105	7610236	0					
ANR	7611680	ExpressionStatement	sep = 0	889:16:36153:36160	7610236	0	True				
ANR	7611681	AssignmentExpression	sep = 0		7610236	0		=			
ANR	7611682	Identifier	sep		7610236	0					
ANR	7611683	PrimaryExpression	0		7610236	1					
ANR	7611684	ExpressionStatement	"ret = sscanf ( s , ""[%d,%d]%c"" , & parameters -> prcw_init [ res_spec ] , & parameters -> prch_init [ res_spec ] , & sep )"	890:16:36178:36309	7610236	1	True				
ANR	7611685	AssignmentExpression	"ret = sscanf ( s , ""[%d,%d]%c"" , & parameters -> prcw_init [ res_spec ] , & parameters -> prch_init [ res_spec ] , & sep )"		7610236	0		=			
ANR	7611686	Identifier	ret		7610236	0					
ANR	7611687	CallExpression	"sscanf ( s , ""[%d,%d]%c"" , & parameters -> prcw_init [ res_spec ] , & parameters -> prch_init [ res_spec ] , & sep )"		7610236	1					
ANR	7611688	Callee	sscanf		7610236	0					
ANR	7611689	Identifier	sscanf		7610236	0					
ANR	7611690	ArgumentList	s		7610236	1					
ANR	7611691	Argument	s		7610236	0					
ANR	7611692	Identifier	s		7610236	0					
ANR	7611693	Argument	"""[%d,%d]%c"""		7610236	1					
ANR	7611694	PrimaryExpression	"""[%d,%d]%c"""		7610236	0					
ANR	7611695	Argument	& parameters -> prcw_init [ res_spec ]		7610236	2					
ANR	7611696	UnaryOperationExpression	& parameters -> prcw_init [ res_spec ]		7610236	0					
ANR	7611697	UnaryOperator	&		7610236	0					
ANR	7611698	ArrayIndexing	parameters -> prcw_init [ res_spec ]		7610236	1					
ANR	7611699	PtrMemberAccess	parameters -> prcw_init		7610236	0					
ANR	7611700	Identifier	parameters		7610236	0					
ANR	7611701	Identifier	prcw_init		7610236	1					
ANR	7611702	Identifier	res_spec		7610236	1					
ANR	7611703	Argument	& parameters -> prch_init [ res_spec ]		7610236	3					
ANR	7611704	UnaryOperationExpression	& parameters -> prch_init [ res_spec ]		7610236	0					
ANR	7611705	UnaryOperator	&		7610236	0					
ANR	7611706	ArrayIndexing	parameters -> prch_init [ res_spec ]		7610236	1					
ANR	7611707	PtrMemberAccess	parameters -> prch_init		7610236	0					
ANR	7611708	Identifier	parameters		7610236	0					
ANR	7611709	Identifier	prch_init		7610236	1					
ANR	7611710	Identifier	res_spec		7610236	1					
ANR	7611711	Argument	& sep		7610236	4					
ANR	7611712	UnaryOperationExpression	& sep		7610236	0					
ANR	7611713	UnaryOperator	&		7610236	0					
ANR	7611714	Identifier	sep		7610236	1					
ANR	7611715	IfStatement	"if ( ! ( ret == 2 && sep == 0 ) && ! ( ret == 3 && sep == ',' ) )"		7610236	2					
ANR	7611716	Condition	"! ( ret == 2 && sep == 0 ) && ! ( ret == 3 && sep == ',' )"	892:20:36331:36382	7610236	0	True				
ANR	7611717	AndExpression	"! ( ret == 2 && sep == 0 ) && ! ( ret == 3 && sep == ',' )"		7610236	0		&&			
ANR	7611718	UnaryOperationExpression	! ( ret == 2 && sep == 0 )		7610236	0					
ANR	7611719	UnaryOperator	!		7610236	0					
ANR	7611720	AndExpression	ret == 2 && sep == 0		7610236	1		&&			
ANR	7611721	EqualityExpression	ret == 2		7610236	0		==			
ANR	7611722	Identifier	ret		7610236	0					
ANR	7611723	PrimaryExpression	2		7610236	1					
ANR	7611724	EqualityExpression	sep == 0		7610236	1		==			
ANR	7611725	Identifier	sep		7610236	0					
ANR	7611726	PrimaryExpression	0		7610236	1					
ANR	7611727	UnaryOperationExpression	"! ( ret == 3 && sep == ',' )"		7610236	1					
ANR	7611728	UnaryOperator	!		7610236	0					
ANR	7611729	AndExpression	"ret == 3 && sep == ','"		7610236	1		&&			
ANR	7611730	EqualityExpression	ret == 3		7610236	0		==			
ANR	7611731	Identifier	ret		7610236	0					
ANR	7611732	PrimaryExpression	3		7610236	1					
ANR	7611733	EqualityExpression	"sep == ','"		7610236	1		==			
ANR	7611734	Identifier	sep		7610236	0					
ANR	7611735	PrimaryExpression	"','"		7610236	1					
ANR	7611736	CompoundStatement		321:74:11355:11355	7610236	1					
ANR	7611737	ExpressionStatement	"fprintf ( stderr , ""\\nError: could not parse precinct dimension: '%s' %x\\n"" , s , sep )"	893:20:36407:36516	7610236	0	True				
ANR	7611738	CallExpression	"fprintf ( stderr , ""\\nError: could not parse precinct dimension: '%s' %x\\n"" , s , sep )"		7610236	0					
ANR	7611739	Callee	fprintf		7610236	0					
ANR	7611740	Identifier	fprintf		7610236	0					
ANR	7611741	ArgumentList	stderr		7610236	1					
ANR	7611742	Argument	stderr		7610236	0					
ANR	7611743	Identifier	stderr		7610236	0					
ANR	7611744	Argument	"""\\nError: could not parse precinct dimension: '%s' %x\\n"""		7610236	1					
ANR	7611745	PrimaryExpression	"""\\nError: could not parse precinct dimension: '%s' %x\\n"""		7610236	0					
ANR	7611746	Argument	s		7610236	2					
ANR	7611747	Identifier	s		7610236	0					
ANR	7611748	Argument	sep		7610236	3					
ANR	7611749	Identifier	sep		7610236	0					
ANR	7611750	ExpressionStatement	"fprintf ( stderr , ""Example: -i lena.raw -o lena.j2k -c [128,128],[128,128]\\n"" )"	895:20:36538:36614	7610236	1	True				
ANR	7611751	CallExpression	"fprintf ( stderr , ""Example: -i lena.raw -o lena.j2k -c [128,128],[128,128]\\n"" )"		7610236	0					
ANR	7611752	Callee	fprintf		7610236	0					
ANR	7611753	Identifier	fprintf		7610236	0					
ANR	7611754	ArgumentList	stderr		7610236	1					
ANR	7611755	Argument	stderr		7610236	0					
ANR	7611756	Identifier	stderr		7610236	0					
ANR	7611757	Argument	"""Example: -i lena.raw -o lena.j2k -c [128,128],[128,128]\\n"""		7610236	1					
ANR	7611758	PrimaryExpression	"""Example: -i lena.raw -o lena.j2k -c [128,128],[128,128]\\n"""		7610236	0					
ANR	7611759	ReturnStatement	return 1 ;	896:20:36636:36644	7610236	2	True				
ANR	7611760	PrimaryExpression	1		7610236	0					
ANR	7611761	ExpressionStatement	parameters -> csty |= 0x01	898:16:36680:36704	7610236	3	True				
ANR	7611762	AssignmentExpression	parameters -> csty |= 0x01		7610236	0		|=			
ANR	7611763	PtrMemberAccess	parameters -> csty		7610236	0					
ANR	7611764	Identifier	parameters		7610236	0					
ANR	7611765	Identifier	csty		7610236	1					
ANR	7611766	PrimaryExpression	0x01		7610236	1					
ANR	7611767	ExpressionStatement	res_spec ++	899:16:36722:36732	7610236	4	True				
ANR	7611768	PostIncDecOperationExpression	res_spec ++		7610236	0					
ANR	7611769	Identifier	res_spec		7610236	0					
ANR	7611770	IncDec	++		7610236	1					
ANR	7611771	ExpressionStatement	"s = strpbrk ( s , ""]"" ) + 2"	900:16:36750:36773	7610236	5	True				
ANR	7611772	AssignmentExpression	"s = strpbrk ( s , ""]"" ) + 2"		7610236	0		=			
ANR	7611773	Identifier	s		7610236	0					
ANR	7611774	AdditiveExpression	"strpbrk ( s , ""]"" ) + 2"		7610236	1		+			
ANR	7611775	CallExpression	"strpbrk ( s , ""]"" )"		7610236	0					
ANR	7611776	Callee	strpbrk		7610236	0					
ANR	7611777	Identifier	strpbrk		7610236	0					
ANR	7611778	ArgumentList	s		7610236	1					
ANR	7611779	Argument	s		7610236	0					
ANR	7611780	Identifier	s		7610236	0					
ANR	7611781	Argument	"""]"""		7610236	1					
ANR	7611782	PrimaryExpression	"""]"""		7610236	0					
ANR	7611783	PrimaryExpression	2		7610236	1					
ANR	7611784	Condition	"sep == ','"	901:21:36796:36805	7610236	1	True				
ANR	7611785	EqualityExpression	"sep == ','"		7610236	0		==			
ANR	7611786	Identifier	sep		7610236	0					
ANR	7611787	PrimaryExpression	"','"		7610236	1					
ANR	7611788	ExpressionStatement	parameters -> res_spec = res_spec	902:12:36821:36852	7610236	5	True				
ANR	7611789	AssignmentExpression	parameters -> res_spec = res_spec		7610236	0		=			
ANR	7611790	PtrMemberAccess	parameters -> res_spec		7610236	0					
ANR	7611791	Identifier	parameters		7610236	0					
ANR	7611792	Identifier	res_spec		7610236	1					
ANR	7611793	Identifier	res_spec		7610236	1					
ANR	7611794	BreakStatement	break ;	904:8:36872:36877	7610236	29	True				
ANR	7611795	Label	case 'b' :	908:8:36957:36965	7610236	30	True				
ANR	7611796	CompoundStatement		338:12:11986:12024	7610236	31					
ANR	7611797	IdentifierDeclStatement	"int cblockw_init = 0 , cblockh_init = 0 ;"	909:12:37016:37054	7610236	0	True				
ANR	7611798	IdentifierDecl	cblockw_init = 0		7610236	0					
ANR	7611799	IdentifierDeclType	int		7610236	0					
ANR	7611800	Identifier	cblockw_init		7610236	1					
ANR	7611801	AssignmentExpression	cblockw_init = 0		7610236	2		=			
ANR	7611802	Identifier	cblockw_init		7610236	0					
ANR	7611803	PrimaryExpression	0		7610236	1					
ANR	7611804	IdentifierDecl	cblockh_init = 0		7610236	1					
ANR	7611805	IdentifierDeclType	int		7610236	0					
ANR	7611806	Identifier	cblockh_init		7610236	1					
ANR	7611807	AssignmentExpression	cblockh_init = 0		7610236	2		=			
ANR	7611808	Identifier	cblockh_init		7610236	0					
ANR	7611809	PrimaryExpression	0		7610236	1					
ANR	7611810	ExpressionStatement	"sscanf ( opj_optarg , ""%d,%d"" , & cblockw_init , & cblockh_init )"	910:12:37068:37125	7610236	1	True				
ANR	7611811	CallExpression	"sscanf ( opj_optarg , ""%d,%d"" , & cblockw_init , & cblockh_init )"		7610236	0					
ANR	7611812	Callee	sscanf		7610236	0					
ANR	7611813	Identifier	sscanf		7610236	0					
ANR	7611814	ArgumentList	opj_optarg		7610236	1					
ANR	7611815	Argument	opj_optarg		7610236	0					
ANR	7611816	Identifier	opj_optarg		7610236	0					
ANR	7611817	Argument	"""%d,%d"""		7610236	1					
ANR	7611818	PrimaryExpression	"""%d,%d"""		7610236	0					
ANR	7611819	Argument	& cblockw_init		7610236	2					
ANR	7611820	UnaryOperationExpression	& cblockw_init		7610236	0					
ANR	7611821	UnaryOperator	&		7610236	0					
ANR	7611822	Identifier	cblockw_init		7610236	1					
ANR	7611823	Argument	& cblockh_init		7610236	3					
ANR	7611824	UnaryOperationExpression	& cblockh_init		7610236	0					
ANR	7611825	UnaryOperator	&		7610236	0					
ANR	7611826	Identifier	cblockh_init		7610236	1					
ANR	7611827	IfStatement	if ( cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockw_init * cblockh_init > 4096 )		7610236	2					
ANR	7611828	Condition	cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockw_init * cblockh_init > 4096	911:16:37143:37302	7610236	0	True				
ANR	7611829	OrExpression	cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockw_init * cblockh_init > 4096		7610236	0		||			
ANR	7611830	RelationalExpression	cblockw_init > 1024		7610236	0		>			
ANR	7611831	Identifier	cblockw_init		7610236	0					
ANR	7611832	PrimaryExpression	1024		7610236	1					
ANR	7611833	OrExpression	cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockw_init * cblockh_init > 4096		7610236	1		||			
ANR	7611834	RelationalExpression	cblockw_init < 4		7610236	0		<			
ANR	7611835	Identifier	cblockw_init		7610236	0					
ANR	7611836	PrimaryExpression	4		7610236	1					
ANR	7611837	OrExpression	cblockh_init > 1024 || cblockh_init < 4 || cblockw_init * cblockh_init > 4096		7610236	1		||			
ANR	7611838	RelationalExpression	cblockh_init > 1024		7610236	0		>			
ANR	7611839	Identifier	cblockh_init		7610236	0					
ANR	7611840	PrimaryExpression	1024		7610236	1					
ANR	7611841	OrExpression	cblockh_init < 4 || cblockw_init * cblockh_init > 4096		7610236	1		||			
ANR	7611842	RelationalExpression	cblockh_init < 4		7610236	0		<			
ANR	7611843	Identifier	cblockh_init		7610236	0					
ANR	7611844	PrimaryExpression	4		7610236	1					
ANR	7611845	RelationalExpression	cblockw_init * cblockh_init > 4096		7610236	1		>			
ANR	7611846	MultiplicativeExpression	cblockw_init * cblockh_init		7610236	0		*			
ANR	7611847	Identifier	cblockw_init		7610236	0					
ANR	7611848	Identifier	cblockh_init		7610236	1					
ANR	7611849	PrimaryExpression	4096		7610236	1					
ANR	7611850	CompoundStatement		342:56:12275:12275	7610236	1					
ANR	7611851	Statement	fprintf	914:16:37323:37329	7610236	0	True				
ANR	7611852	Statement	(	914:23:37330:37330	7610236	1	True				
ANR	7611853	Statement	stderr	914:24:37331:37336	7610236	2	True				
ANR	7611854	Statement	","	914:30:37337:37337	7610236	3	True				
ANR	7611855	Statement	"""!! Size of code_block error (option -b) !!\\n\\nRestriction :\\n"""	915:24:37363:37425	7610236	4	True				
ANR	7611856	Statement	"""    * width*height<=4096\\n    * 4<=width,height<= 1024\\n\\n"""	916:24:37451:37510	7610236	5	True				
ANR	7611857	Statement	)	916:84:37511:37511	7610236	6	True				
ANR	7611858	ExpressionStatement		916:85:37512:37512	7610236	7	True				
ANR	7611859	ReturnStatement	return 1 ;	917:16:37530:37538	7610236	8	True				
ANR	7611860	PrimaryExpression	1		7610236	0					
ANR	7611861	ExpressionStatement	parameters -> cblockw_init = cblockw_init	919:12:37566:37605	7610236	3	True				
ANR	7611862	AssignmentExpression	parameters -> cblockw_init = cblockw_init		7610236	0		=			
ANR	7611863	PtrMemberAccess	parameters -> cblockw_init		7610236	0					
ANR	7611864	Identifier	parameters		7610236	0					
ANR	7611865	Identifier	cblockw_init		7610236	1					
ANR	7611866	Identifier	cblockw_init		7610236	1					
ANR	7611867	ExpressionStatement	parameters -> cblockh_init = cblockh_init	920:12:37619:37658	7610236	4	True				
ANR	7611868	AssignmentExpression	parameters -> cblockh_init = cblockh_init		7610236	0		=			
ANR	7611869	PtrMemberAccess	parameters -> cblockh_init		7610236	0					
ANR	7611870	Identifier	parameters		7610236	0					
ANR	7611871	Identifier	cblockh_init		7610236	1					
ANR	7611872	Identifier	cblockh_init		7610236	1					
ANR	7611873	BreakStatement	break ;	922:8:37678:37683	7610236	32	True				
ANR	7611874	Label	case 'x' :	926:8:37763:37771	7610236	33	True				
ANR	7611875	CompoundStatement		355:18:12743:12743	7610236	34					
ANR	7611876	IfStatement	"if ( opj_strcpy_s ( indexfilename , indexfilename_size , opj_optarg ) != 0 )"		7610236	0					
ANR	7611877	Condition	"opj_strcpy_s ( indexfilename , indexfilename_size , opj_optarg ) != 0"	927:16:37828:37891	7610236	0	True				
ANR	7611878	EqualityExpression	"opj_strcpy_s ( indexfilename , indexfilename_size , opj_optarg ) != 0"		7610236	0		!=			
ANR	7611879	CallExpression	"opj_strcpy_s ( indexfilename , indexfilename_size , opj_optarg )"		7610236	0					
ANR	7611880	Callee	opj_strcpy_s		7610236	0					
ANR	7611881	Identifier	opj_strcpy_s		7610236	0					
ANR	7611882	ArgumentList	indexfilename		7610236	1					
ANR	7611883	Argument	indexfilename		7610236	0					
ANR	7611884	Identifier	indexfilename		7610236	0					
ANR	7611885	Argument	indexfilename_size		7610236	1					
ANR	7611886	Identifier	indexfilename_size		7610236	0					
ANR	7611887	Argument	opj_optarg		7610236	2					
ANR	7611888	Identifier	opj_optarg		7610236	0					
ANR	7611889	PrimaryExpression	0		7610236	1					
ANR	7611890	CompoundStatement		356:82:12864:12864	7610236	1					
ANR	7611891	ReturnStatement	return 1 ;	928:16:37912:37920	7610236	0	True				
ANR	7611892	PrimaryExpression	1		7610236	0					
ANR	7611893	Statement	fprintf	931:12:37985:37991	7610236	1	True				
ANR	7611894	Statement	(	931:19:37992:37992	7610236	2	True				
ANR	7611895	Statement	stderr	931:20:37993:37998	7610236	3	True				
ANR	7611896	Statement	","	931:26:37999:37999	7610236	4	True				
ANR	7611897	Statement	"""[WARNING] Index file generation is currently broken.\\n"""	932:20:38021:38076	7610236	5	True				
ANR	7611898	Statement	"""          '-x' option ignored.\\n"""	933:20:38098:38131	7610236	6	True				
ANR	7611899	Statement	)	933:54:38132:38132	7610236	7	True				
ANR	7611900	ExpressionStatement		933:55:38133:38133	7610236	8	True				
ANR	7611901	BreakStatement	break ;	936:8:38190:38195	7610236	35	True				
ANR	7611902	Label	case 'p' :	940:8:38275:38283	7610236	36	True				
ANR	7611903	CompoundStatement		370:12:13301:13320	7610236	37					
ANR	7611904	IdentifierDeclStatement	char progression [ 4 ] ;	941:12:38331:38350	7610236	0	True				
ANR	7611905	IdentifierDecl	progression [ 4 ]		7610236	0					
ANR	7611906	IdentifierDeclType	char [ 4 ]		7610236	0					
ANR	7611907	Identifier	progression		7610236	1					
ANR	7611908	PrimaryExpression	4		7610236	2					
ANR	7611909	ExpressionStatement	"strncpy ( progression , opj_optarg , 4 )"	943:12:38365:38400	7610236	1	True				
ANR	7611910	CallExpression	"strncpy ( progression , opj_optarg , 4 )"		7610236	0					
ANR	7611911	Callee	strncpy		7610236	0					
ANR	7611912	Identifier	strncpy		7610236	0					
ANR	7611913	ArgumentList	progression		7610236	1					
ANR	7611914	Argument	progression		7610236	0					
ANR	7611915	Identifier	progression		7610236	0					
ANR	7611916	Argument	opj_optarg		7610236	1					
ANR	7611917	Identifier	opj_optarg		7610236	0					
ANR	7611918	Argument	4		7610236	2					
ANR	7611919	PrimaryExpression	4		7610236	0					
ANR	7611920	ExpressionStatement	parameters -> prog_order = give_progression ( progression )	944:12:38414:38468	7610236	2	True				
ANR	7611921	AssignmentExpression	parameters -> prog_order = give_progression ( progression )		7610236	0		=			
ANR	7611922	PtrMemberAccess	parameters -> prog_order		7610236	0					
ANR	7611923	Identifier	parameters		7610236	0					
ANR	7611924	Identifier	prog_order		7610236	1					
ANR	7611925	CallExpression	give_progression ( progression )		7610236	1					
ANR	7611926	Callee	give_progression		7610236	0					
ANR	7611927	Identifier	give_progression		7610236	0					
ANR	7611928	ArgumentList	progression		7610236	1					
ANR	7611929	Argument	progression		7610236	0					
ANR	7611930	Identifier	progression		7610236	0					
ANR	7611931	IfStatement	if ( parameters -> prog_order == - 1 )		7610236	3					
ANR	7611932	Condition	parameters -> prog_order == - 1	945:16:38486:38513	7610236	0	True				
ANR	7611933	EqualityExpression	parameters -> prog_order == - 1		7610236	0		==			
ANR	7611934	PtrMemberAccess	parameters -> prog_order		7610236	0					
ANR	7611935	Identifier	parameters		7610236	0					
ANR	7611936	Identifier	prog_order		7610236	1					
ANR	7611937	UnaryOperationExpression	- 1		7610236	1					
ANR	7611938	UnaryOperator	-		7610236	0					
ANR	7611939	PrimaryExpression	1		7610236	1					
ANR	7611940	CompoundStatement		374:46:13486:13486	7610236	1					
ANR	7611941	Statement	fprintf	946:16:38534:38540	7610236	0	True				
ANR	7611942	Statement	(	946:23:38541:38541	7610236	1	True				
ANR	7611943	Statement	stderr	946:24:38542:38547	7610236	2	True				
ANR	7611944	Statement	","	946:30:38548:38548	7610236	3	True				
ANR	7611945	Statement	"""Unrecognized progression order """	946:32:38550:38582	7610236	4	True				
ANR	7611946	Statement	"""[LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""	947:24:38608:38644	7610236	5	True				
ANR	7611947	Statement	)	947:61:38645:38645	7610236	6	True				
ANR	7611948	ExpressionStatement		947:62:38646:38646	7610236	7	True				
ANR	7611949	ReturnStatement	return 1 ;	948:16:38664:38672	7610236	8	True				
ANR	7611950	PrimaryExpression	1		7610236	0					
ANR	7611951	BreakStatement	break ;	951:8:38706:38711	7610236	38	True				
ANR	7611952	Label	case 's' :	955:8:38791:38799	7610236	39	True				
ANR	7611953	CompoundStatement		384:18:13771:13771	7610236	40					
ANR	7611954	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy ) != 2 )"		7610236	0					
ANR	7611955	Condition	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy ) != 2"	956:16:38852:38964	7610236	0	True				
ANR	7611956	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy ) != 2"		7610236	0		!=			
ANR	7611957	CallExpression	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy )"		7610236	0					
ANR	7611958	Callee	sscanf		7610236	0					
ANR	7611959	Identifier	sscanf		7610236	0					
ANR	7611960	ArgumentList	opj_optarg		7610236	1					
ANR	7611961	Argument	opj_optarg		7610236	0					
ANR	7611962	Identifier	opj_optarg		7610236	0					
ANR	7611963	Argument	"""%d,%d"""		7610236	1					
ANR	7611964	PrimaryExpression	"""%d,%d"""		7610236	0					
ANR	7611965	Argument	& parameters -> subsampling_dx		7610236	2					
ANR	7611966	UnaryOperationExpression	& parameters -> subsampling_dx		7610236	0					
ANR	7611967	UnaryOperator	&		7610236	0					
ANR	7611968	PtrMemberAccess	parameters -> subsampling_dx		7610236	1					
ANR	7611969	Identifier	parameters		7610236	0					
ANR	7611970	Identifier	subsampling_dx		7610236	1					
ANR	7611971	Argument	& parameters -> subsampling_dy		7610236	3					
ANR	7611972	UnaryOperationExpression	& parameters -> subsampling_dy		7610236	0					
ANR	7611973	UnaryOperator	&		7610236	0					
ANR	7611974	PtrMemberAccess	parameters -> subsampling_dy		7610236	1					
ANR	7611975	Identifier	parameters		7610236	0					
ANR	7611976	Identifier	subsampling_dy		7610236	1					
ANR	7611977	PrimaryExpression	2		7610236	1					
ANR	7611978	CompoundStatement		386:58:13937:13937	7610236	1					
ANR	7611979	ExpressionStatement	"fprintf ( stderr , ""'-s' sub-sampling argument error !  [-s dx,dy]\\n"" )"	958:16:38985:39052	7610236	0	True				
ANR	7611980	CallExpression	"fprintf ( stderr , ""'-s' sub-sampling argument error !  [-s dx,dy]\\n"" )"		7610236	0					
ANR	7611981	Callee	fprintf		7610236	0					
ANR	7611982	Identifier	fprintf		7610236	0					
ANR	7611983	ArgumentList	stderr		7610236	1					
ANR	7611984	Argument	stderr		7610236	0					
ANR	7611985	Identifier	stderr		7610236	0					
ANR	7611986	Argument	"""'-s' sub-sampling argument error !  [-s dx,dy]\\n"""		7610236	1					
ANR	7611987	PrimaryExpression	"""'-s' sub-sampling argument error !  [-s dx,dy]\\n"""		7610236	0					
ANR	7611988	ReturnStatement	return 1 ;	959:16:39070:39078	7610236	1	True				
ANR	7611989	PrimaryExpression	1		7610236	0					
ANR	7611990	BreakStatement	break ;	962:8:39112:39117	7610236	41	True				
ANR	7611991	Label	case 'd' :	966:8:39197:39205	7610236	42	True				
ANR	7611992	CompoundStatement		395:18:14177:14177	7610236	43					
ANR	7611993	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d"" , & parameters -> image_offset_x0 , & parameters -> image_offset_y0 ) != 2 )"		7610236	0					
ANR	7611994	Condition	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> image_offset_x0 , & parameters -> image_offset_y0 ) != 2"	967:16:39273:39387	7610236	0	True				
ANR	7611995	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> image_offset_x0 , & parameters -> image_offset_y0 ) != 2"		7610236	0		!=			
ANR	7611996	CallExpression	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> image_offset_x0 , & parameters -> image_offset_y0 )"		7610236	0					
ANR	7611997	Callee	sscanf		7610236	0					
ANR	7611998	Identifier	sscanf		7610236	0					
ANR	7611999	ArgumentList	opj_optarg		7610236	1					
ANR	7612000	Argument	opj_optarg		7610236	0					
ANR	7612001	Identifier	opj_optarg		7610236	0					
ANR	7612002	Argument	"""%d,%d"""		7610236	1					
ANR	7612003	PrimaryExpression	"""%d,%d"""		7610236	0					
ANR	7612004	Argument	& parameters -> image_offset_x0		7610236	2					
ANR	7612005	UnaryOperationExpression	& parameters -> image_offset_x0		7610236	0					
ANR	7612006	UnaryOperator	&		7610236	0					
ANR	7612007	PtrMemberAccess	parameters -> image_offset_x0		7610236	1					
ANR	7612008	Identifier	parameters		7610236	0					
ANR	7612009	Identifier	image_offset_x0		7610236	1					
ANR	7612010	Argument	& parameters -> image_offset_y0		7610236	3					
ANR	7612011	UnaryOperationExpression	& parameters -> image_offset_y0		7610236	0					
ANR	7612012	UnaryOperator	&		7610236	0					
ANR	7612013	PtrMemberAccess	parameters -> image_offset_y0		7610236	1					
ANR	7612014	Identifier	parameters		7610236	0					
ANR	7612015	Identifier	image_offset_y0		7610236	1					
ANR	7612016	PrimaryExpression	2		7610236	1					
ANR	7612017	CompoundStatement		397:59:14360:14360	7610236	1					
ANR	7612018	Statement	fprintf	969:16:39408:39414	7610236	0	True				
ANR	7612019	Statement	(	969:23:39415:39415	7610236	1	True				
ANR	7612020	Statement	stderr	969:24:39416:39421	7610236	2	True				
ANR	7612021	Statement	","	969:30:39422:39422	7610236	3	True				
ANR	7612022	Statement	"""-d 'coordonnate of the reference grid' argument """	969:32:39424:39473	7610236	4	True				
ANR	7612023	Statement	"""error !! [-d x0,y0]\\n"""	970:24:39499:39521	7610236	5	True				
ANR	7612024	Statement	)	970:47:39522:39522	7610236	6	True				
ANR	7612025	ExpressionStatement		970:48:39523:39523	7610236	7	True				
ANR	7612026	ReturnStatement	return 1 ;	971:16:39541:39549	7610236	8	True				
ANR	7612027	PrimaryExpression	1		7610236	0					
ANR	7612028	BreakStatement	break ;	974:8:39583:39588	7610236	44	True				
ANR	7612029	Label	case 'h' :	978:8:39668:39676	7610236	45	True				
ANR	7612030	ExpressionStatement	encode_help_display ( )	979:12:39734:39755	7610236	46	True				
ANR	7612031	CallExpression	encode_help_display ( )		7610236	0					
ANR	7612032	Callee	encode_help_display		7610236	0					
ANR	7612033	Identifier	encode_help_display		7610236	0					
ANR	7612034	ArgumentList			7610236	1					
ANR	7612035	ReturnStatement	return 1 ;	980:12:39769:39777	7610236	47	True				
ANR	7612036	PrimaryExpression	1		7610236	0					
ANR	7612037	Label	case 'P' :	984:8:39857:39865	7610236	48	True				
ANR	7612038	CompoundStatement		417:12:15052:15072	7610236	49					
ANR	7612039	IdentifierDeclStatement	int numpocs = 0 ;	985:12:39899:39914	7610236	0	True				
ANR	7612040	IdentifierDecl	numpocs = 0		7610236	0					
ANR	7612041	IdentifierDeclType	int		7610236	0					
ANR	7612042	Identifier	numpocs		7610236	1					
ANR	7612043	AssignmentExpression	numpocs = 0		7610236	2		=			
ANR	7612044	Identifier	numpocs		7610236	0					
ANR	7612045	PrimaryExpression	0		7610236	1					
ANR	7612046	IdentifierDeclStatement	opj_poc_t * POC = NULL ;	986:12:39992:40013	7610236	1	True				
ANR	7612047	IdentifierDecl	* POC = NULL		7610236	0					
ANR	7612048	IdentifierDeclType	opj_poc_t *		7610236	0					
ANR	7612049	Identifier	POC		7610236	1					
ANR	7612050	AssignmentExpression	* POC = NULL		7610236	2		=			
ANR	7612051	Identifier	NULL		7610236	0					
ANR	7612052	Identifier	NULL		7610236	1					
ANR	7612053	IdentifierDeclStatement	char * s = opj_optarg ;	988:12:40082:40102	7610236	2	True				
ANR	7612054	IdentifierDecl	* s = opj_optarg		7610236	0					
ANR	7612055	IdentifierDeclType	char *		7610236	0					
ANR	7612056	Identifier	s		7610236	1					
ANR	7612057	AssignmentExpression	* s = opj_optarg		7610236	2		=			
ANR	7612058	Identifier	opj_optarg		7610236	0					
ANR	7612059	Identifier	opj_optarg		7610236	1					
ANR	7612060	ExpressionStatement	POC = parameters -> POC	989:12:40116:40137	7610236	3	True				
ANR	7612061	AssignmentExpression	POC = parameters -> POC		7610236	0		=			
ANR	7612062	Identifier	POC		7610236	0					
ANR	7612063	PtrMemberAccess	parameters -> POC		7610236	1					
ANR	7612064	Identifier	parameters		7610236	0					
ANR	7612065	Identifier	POC		7610236	1					
ANR	7612066	WhileStatement	"while ( sscanf ( s , ""T%u=%u,%u,%u,%u,%u,%4s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7 )"		7610236	4					
ANR	7612067	Condition	"sscanf ( s , ""T%u=%u,%u,%u,%u,%u,%4s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7"	991:19:40159:40432	7610236	0	True				
ANR	7612068	EqualityExpression	"sscanf ( s , ""T%u=%u,%u,%u,%u,%u,%4s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7"		7610236	0		==			
ANR	7612069	CallExpression	"sscanf ( s , ""T%u=%u,%u,%u,%u,%u,%4s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder )"		7610236	0					
ANR	7612070	Callee	sscanf		7610236	0					
ANR	7612071	Identifier	sscanf		7610236	0					
ANR	7612072	ArgumentList	s		7610236	1					
ANR	7612073	Argument	s		7610236	0					
ANR	7612074	Identifier	s		7610236	0					
ANR	7612075	Argument	"""T%u=%u,%u,%u,%u,%u,%4s"""		7610236	1					
ANR	7612076	PrimaryExpression	"""T%u=%u,%u,%u,%u,%u,%4s"""		7610236	0					
ANR	7612077	Argument	& POC [ numpocs ] . tile		7610236	2					
ANR	7612078	UnaryOperationExpression	& POC [ numpocs ] . tile		7610236	0					
ANR	7612079	UnaryOperator	&		7610236	0					
ANR	7612080	MemberAccess	POC [ numpocs ] . tile		7610236	1					
ANR	7612081	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612082	Identifier	POC		7610236	0					
ANR	7612083	Identifier	numpocs		7610236	1					
ANR	7612084	Identifier	tile		7610236	1					
ANR	7612085	Argument	& POC [ numpocs ] . resno0		7610236	3					
ANR	7612086	UnaryOperationExpression	& POC [ numpocs ] . resno0		7610236	0					
ANR	7612087	UnaryOperator	&		7610236	0					
ANR	7612088	MemberAccess	POC [ numpocs ] . resno0		7610236	1					
ANR	7612089	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612090	Identifier	POC		7610236	0					
ANR	7612091	Identifier	numpocs		7610236	1					
ANR	7612092	Identifier	resno0		7610236	1					
ANR	7612093	Argument	& POC [ numpocs ] . compno0		7610236	4					
ANR	7612094	UnaryOperationExpression	& POC [ numpocs ] . compno0		7610236	0					
ANR	7612095	UnaryOperator	&		7610236	0					
ANR	7612096	MemberAccess	POC [ numpocs ] . compno0		7610236	1					
ANR	7612097	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612098	Identifier	POC		7610236	0					
ANR	7612099	Identifier	numpocs		7610236	1					
ANR	7612100	Identifier	compno0		7610236	1					
ANR	7612101	Argument	& POC [ numpocs ] . layno1		7610236	5					
ANR	7612102	UnaryOperationExpression	& POC [ numpocs ] . layno1		7610236	0					
ANR	7612103	UnaryOperator	&		7610236	0					
ANR	7612104	MemberAccess	POC [ numpocs ] . layno1		7610236	1					
ANR	7612105	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612106	Identifier	POC		7610236	0					
ANR	7612107	Identifier	numpocs		7610236	1					
ANR	7612108	Identifier	layno1		7610236	1					
ANR	7612109	Argument	& POC [ numpocs ] . resno1		7610236	6					
ANR	7612110	UnaryOperationExpression	& POC [ numpocs ] . resno1		7610236	0					
ANR	7612111	UnaryOperator	&		7610236	0					
ANR	7612112	MemberAccess	POC [ numpocs ] . resno1		7610236	1					
ANR	7612113	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612114	Identifier	POC		7610236	0					
ANR	7612115	Identifier	numpocs		7610236	1					
ANR	7612116	Identifier	resno1		7610236	1					
ANR	7612117	Argument	& POC [ numpocs ] . compno1		7610236	7					
ANR	7612118	UnaryOperationExpression	& POC [ numpocs ] . compno1		7610236	0					
ANR	7612119	UnaryOperator	&		7610236	0					
ANR	7612120	MemberAccess	POC [ numpocs ] . compno1		7610236	1					
ANR	7612121	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612122	Identifier	POC		7610236	0					
ANR	7612123	Identifier	numpocs		7610236	1					
ANR	7612124	Identifier	compno1		7610236	1					
ANR	7612125	Argument	POC [ numpocs ] . progorder		7610236	8					
ANR	7612126	MemberAccess	POC [ numpocs ] . progorder		7610236	0					
ANR	7612127	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612128	Identifier	POC		7610236	0					
ANR	7612129	Identifier	numpocs		7610236	1					
ANR	7612130	Identifier	progorder		7610236	1					
ANR	7612131	PrimaryExpression	7		7610236	1					
ANR	7612132	CompoundStatement		423:79:15405:15405	7610236	1					
ANR	7612133	ExpressionStatement	POC [ numpocs ] . prg1 = give_progression ( POC [ numpocs ] . progorder )	995:16:40453:40513	7610236	0	True				
ANR	7612134	AssignmentExpression	POC [ numpocs ] . prg1 = give_progression ( POC [ numpocs ] . progorder )		7610236	0		=			
ANR	7612135	MemberAccess	POC [ numpocs ] . prg1		7610236	0					
ANR	7612136	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612137	Identifier	POC		7610236	0					
ANR	7612138	Identifier	numpocs		7610236	1					
ANR	7612139	Identifier	prg1		7610236	1					
ANR	7612140	CallExpression	give_progression ( POC [ numpocs ] . progorder )		7610236	1					
ANR	7612141	Callee	give_progression		7610236	0					
ANR	7612142	Identifier	give_progression		7610236	0					
ANR	7612143	ArgumentList	POC [ numpocs ] . progorder		7610236	1					
ANR	7612144	Argument	POC [ numpocs ] . progorder		7610236	0					
ANR	7612145	MemberAccess	POC [ numpocs ] . progorder		7610236	0					
ANR	7612146	ArrayIndexing	POC [ numpocs ]		7610236	0					
ANR	7612147	Identifier	POC		7610236	0					
ANR	7612148	Identifier	numpocs		7610236	1					
ANR	7612149	Identifier	progorder		7610236	1					
ANR	7612150	ExpressionStatement	numpocs ++	996:16:40531:40540	7610236	1	True				
ANR	7612151	PostIncDecOperationExpression	numpocs ++		7610236	0					
ANR	7612152	Identifier	numpocs		7610236	0					
ANR	7612153	IncDec	++		7610236	1					
ANR	7612154	WhileStatement	while ( * s && * s != '/' )		7610236	2					
ANR	7612155	Condition	* s && * s != '/'	997:23:40565:40579	7610236	0	True				
ANR	7612156	AndExpression	* s && * s != '/'		7610236	0		&&			
ANR	7612157	UnaryOperationExpression	* s		7610236	0					
ANR	7612158	UnaryOperator	*		7610236	0					
ANR	7612159	Identifier	s		7610236	1					
ANR	7612160	EqualityExpression	* s != '/'		7610236	1		!=			
ANR	7612161	UnaryOperationExpression	* s		7610236	0					
ANR	7612162	UnaryOperator	*		7610236	0					
ANR	7612163	Identifier	s		7610236	1					
ANR	7612164	PrimaryExpression	'/'		7610236	1					
ANR	7612165	CompoundStatement		426:40:15552:15552	7610236	1					
ANR	7612166	ExpressionStatement	s ++	998:20:40604:40607	7610236	0	True				
ANR	7612167	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7612168	Identifier	s		7610236	0					
ANR	7612169	IncDec	++		7610236	1					
ANR	7612170	IfStatement	if ( ! * s )		7610236	3					
ANR	7612171	Condition	! * s	1000:20:40647:40649	7610236	0	True				
ANR	7612172	UnaryOperationExpression	! * s		7610236	0					
ANR	7612173	UnaryOperator	!		7610236	0					
ANR	7612174	UnaryOperationExpression	* s		7610236	1					
ANR	7612175	UnaryOperator	*		7610236	0					
ANR	7612176	Identifier	s		7610236	1					
ANR	7612177	CompoundStatement		429:25:15622:15622	7610236	1					
ANR	7612178	BreakStatement	break ;	1001:20:40674:40679	7610236	0	True				
ANR	7612179	ExpressionStatement	s ++	1003:16:40715:40718	7610236	4	True				
ANR	7612180	PostIncDecOperationExpression	s ++		7610236	0					
ANR	7612181	Identifier	s		7610236	0					
ANR	7612182	IncDec	++		7610236	1					
ANR	7612183	ExpressionStatement	parameters -> numpocs = ( OPJ_UINT32 ) numpocs	1005:12:40746:40787	7610236	5	True				
ANR	7612184	AssignmentExpression	parameters -> numpocs = ( OPJ_UINT32 ) numpocs		7610236	0		=			
ANR	7612185	PtrMemberAccess	parameters -> numpocs		7610236	0					
ANR	7612186	Identifier	parameters		7610236	0					
ANR	7612187	Identifier	numpocs		7610236	1					
ANR	7612188	CastExpression	( OPJ_UINT32 ) numpocs		7610236	1					
ANR	7612189	CastTarget	OPJ_UINT32		7610236	0					
ANR	7612190	Identifier	numpocs		7610236	1					
ANR	7612191	BreakStatement	break ;	1007:8:40807:40812	7610236	50	True				
ANR	7612192	Label	case 'S' :	1011:8:40893:40901	7610236	51	True				
ANR	7612193	CompoundStatement		440:18:15873:15873	7610236	52					
ANR	7612194	ExpressionStatement	parameters -> csty |= 0x02	1012:12:40942:40966	7610236	0	True				
ANR	7612195	AssignmentExpression	parameters -> csty |= 0x02		7610236	0		|=			
ANR	7612196	PtrMemberAccess	parameters -> csty		7610236	0					
ANR	7612197	Identifier	parameters		7610236	0					
ANR	7612198	Identifier	csty		7610236	1					
ANR	7612199	PrimaryExpression	0x02		7610236	1					
ANR	7612200	BreakStatement	break ;	1014:8:40986:40991	7610236	53	True				
ANR	7612201	Label	case 'E' :	1018:8:41072:41080	7610236	54	True				
ANR	7612202	CompoundStatement		447:18:16052:16052	7610236	55					
ANR	7612203	ExpressionStatement	parameters -> csty |= 0x04	1019:12:41121:41145	7610236	0	True				
ANR	7612204	AssignmentExpression	parameters -> csty |= 0x04		7610236	0		|=			
ANR	7612205	PtrMemberAccess	parameters -> csty		7610236	0					
ANR	7612206	Identifier	parameters		7610236	0					
ANR	7612207	Identifier	csty		7610236	1					
ANR	7612208	PrimaryExpression	0x04		7610236	1					
ANR	7612209	BreakStatement	break ;	1021:8:41165:41170	7610236	56	True				
ANR	7612210	Label	case 'M' :	1025:8:41251:41259	7610236	57	True				
ANR	7612211	CompoundStatement		455:12:16292:16305	7610236	58					
ANR	7612212	IdentifierDeclStatement	int value = 0 ;	1026:12:41322:41335	7610236	0	True				
ANR	7612213	IdentifierDecl	value = 0		7610236	0					
ANR	7612214	IdentifierDeclType	int		7610236	0					
ANR	7612215	Identifier	value		7610236	1					
ANR	7612216	AssignmentExpression	value = 0		7610236	2		=			
ANR	7612217	Identifier	value		7610236	0					
ANR	7612218	PrimaryExpression	0		7610236	1					
ANR	7612219	IfStatement	"if ( sscanf ( opj_optarg , ""%d"" , & value ) == 1 )"		7610236	1					
ANR	7612220	Condition	"sscanf ( opj_optarg , ""%d"" , & value ) == 1"	1027:16:41353:41389	7610236	0	True				
ANR	7612221	EqualityExpression	"sscanf ( opj_optarg , ""%d"" , & value ) == 1"		7610236	0		==			
ANR	7612222	CallExpression	"sscanf ( opj_optarg , ""%d"" , & value )"		7610236	0					
ANR	7612223	Callee	sscanf		7610236	0					
ANR	7612224	Identifier	sscanf		7610236	0					
ANR	7612225	ArgumentList	opj_optarg		7610236	1					
ANR	7612226	Argument	opj_optarg		7610236	0					
ANR	7612227	Identifier	opj_optarg		7610236	0					
ANR	7612228	Argument	"""%d"""		7610236	1					
ANR	7612229	PrimaryExpression	"""%d"""		7610236	0					
ANR	7612230	Argument	& value		7610236	2					
ANR	7612231	UnaryOperationExpression	& value		7610236	0					
ANR	7612232	UnaryOperator	&		7610236	0					
ANR	7612233	Identifier	value		7610236	1					
ANR	7612234	PrimaryExpression	1		7610236	1					
ANR	7612235	CompoundStatement		456:55:16362:16362	7610236	1					
ANR	7612236	ForStatement	for ( i = 0 ; i <= 5 ; i ++ )		7610236	0					
ANR	7612237	ForInit	i = 0 ;	1028:21:41415:41420	7610236	0	True				
ANR	7612238	AssignmentExpression	i = 0		7610236	0		=			
ANR	7612239	Identifier	i		7610236	0					
ANR	7612240	PrimaryExpression	0		7610236	1					
ANR	7612241	Condition	i <= 5	1028:28:41422:41427	7610236	1	True				
ANR	7612242	RelationalExpression	i <= 5		7610236	0		<=			
ANR	7612243	Identifier	i		7610236	0					
ANR	7612244	PrimaryExpression	5		7610236	1					
ANR	7612245	PostIncDecOperationExpression	i ++	1028:36:41430:41432	7610236	2	True				
ANR	7612246	Identifier	i		7610236	0					
ANR	7612247	IncDec	++		7610236	1					
ANR	7612248	CompoundStatement		458:20:16427:16455	7610236	3					
ANR	7612249	IdentifierDeclStatement	int cache = value & ( 1 << i ) ;	1029:20:41457:41485	7610236	0	True				
ANR	7612250	IdentifierDecl	cache = value & ( 1 << i )		7610236	0					
ANR	7612251	IdentifierDeclType	int		7610236	0					
ANR	7612252	Identifier	cache		7610236	1					
ANR	7612253	AssignmentExpression	cache = value & ( 1 << i )		7610236	2		=			
ANR	7612254	Identifier	cache		7610236	0					
ANR	7612255	BitAndExpression	value & ( 1 << i )		7610236	1		&			
ANR	7612256	Identifier	value		7610236	0					
ANR	7612257	ShiftExpression	1 << i		7610236	1		<<			
ANR	7612258	PrimaryExpression	1		7610236	0					
ANR	7612259	Identifier	i		7610236	1					
ANR	7612260	IfStatement	if ( cache )		7610236	1					
ANR	7612261	Condition	cache	1030:24:41511:41515	7610236	0	True				
ANR	7612262	Identifier	cache		7610236	0					
ANR	7612263	CompoundStatement		459:31:16488:16488	7610236	1					
ANR	7612264	ExpressionStatement	parameters -> mode |= ( 1 << i )	1031:24:41544:41572	7610236	0	True				
ANR	7612265	AssignmentExpression	parameters -> mode |= ( 1 << i )		7610236	0		|=			
ANR	7612266	PtrMemberAccess	parameters -> mode		7610236	0					
ANR	7612267	Identifier	parameters		7610236	0					
ANR	7612268	Identifier	mode		7610236	1					
ANR	7612269	ShiftExpression	1 << i		7610236	1		<<			
ANR	7612270	PrimaryExpression	1		7610236	0					
ANR	7612271	Identifier	i		7610236	1					
ANR	7612272	BreakStatement	break ;	1036:8:41646:41651	7610236	59	True				
ANR	7612273	Label	case 'R' :	1040:8:41732:41740	7610236	60	True				
ANR	7612274	CompoundStatement		469:18:16712:16712	7610236	61					
ANR	7612275	IfStatement	"if ( sscanf ( opj_optarg , ""c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2 )"		7610236	0					
ANR	7612276	Condition	"sscanf ( opj_optarg , ""c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2"	1041:16:41778:41885	7610236	0	True				
ANR	7612277	EqualityExpression	"sscanf ( opj_optarg , ""c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2"		7610236	0		!=			
ANR	7612278	CallExpression	"sscanf ( opj_optarg , ""c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift )"		7610236	0					
ANR	7612279	Callee	sscanf		7610236	0					
ANR	7612280	Identifier	sscanf		7610236	0					
ANR	7612281	ArgumentList	opj_optarg		7610236	1					
ANR	7612282	Argument	opj_optarg		7610236	0					
ANR	7612283	Identifier	opj_optarg		7610236	0					
ANR	7612284	Argument	"""c=%d,U=%d"""		7610236	1					
ANR	7612285	PrimaryExpression	"""c=%d,U=%d"""		7610236	0					
ANR	7612286	Argument	& parameters -> roi_compno		7610236	2					
ANR	7612287	UnaryOperationExpression	& parameters -> roi_compno		7610236	0					
ANR	7612288	UnaryOperator	&		7610236	0					
ANR	7612289	PtrMemberAccess	parameters -> roi_compno		7610236	1					
ANR	7612290	Identifier	parameters		7610236	0					
ANR	7612291	Identifier	roi_compno		7610236	1					
ANR	7612292	Argument	& parameters -> roi_shift		7610236	3					
ANR	7612293	UnaryOperationExpression	& parameters -> roi_shift		7610236	0					
ANR	7612294	UnaryOperator	&		7610236	0					
ANR	7612295	PtrMemberAccess	parameters -> roi_shift		7610236	1					
ANR	7612296	Identifier	parameters		7610236	0					
ANR	7612297	Identifier	roi_shift		7610236	1					
ANR	7612298	PrimaryExpression	2		7610236	1					
ANR	7612299	CompoundStatement		471:53:16858:16858	7610236	1					
ANR	7612300	ExpressionStatement	"fprintf ( stderr , ""ROI error !! [-ROI c='compno',U='shift']\\n"" )"	1043:16:41906:41967	7610236	0	True				
ANR	7612301	CallExpression	"fprintf ( stderr , ""ROI error !! [-ROI c='compno',U='shift']\\n"" )"		7610236	0					
ANR	7612302	Callee	fprintf		7610236	0					
ANR	7612303	Identifier	fprintf		7610236	0					
ANR	7612304	ArgumentList	stderr		7610236	1					
ANR	7612305	Argument	stderr		7610236	0					
ANR	7612306	Identifier	stderr		7610236	0					
ANR	7612307	Argument	"""ROI error !! [-ROI c='compno',U='shift']\\n"""		7610236	1					
ANR	7612308	PrimaryExpression	"""ROI error !! [-ROI c='compno',U='shift']\\n"""		7610236	0					
ANR	7612309	ReturnStatement	return 1 ;	1044:16:41985:41993	7610236	1	True				
ANR	7612310	PrimaryExpression	1		7610236	0					
ANR	7612311	BreakStatement	break ;	1047:8:42027:42032	7610236	62	True				
ANR	7612312	Label	case 'T' :	1051:8:42113:42121	7610236	63	True				
ANR	7612313	CompoundStatement		480:18:17093:17093	7610236	64					
ANR	7612314	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 ) != 2 )"		7610236	0					
ANR	7612315	Condition	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 ) != 2"	1052:16:42167:42263	7610236	0	True				
ANR	7612316	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 ) != 2"		7610236	0		!=			
ANR	7612317	CallExpression	"sscanf ( opj_optarg , ""%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 )"		7610236	0					
ANR	7612318	Callee	sscanf		7610236	0					
ANR	7612319	Identifier	sscanf		7610236	0					
ANR	7612320	ArgumentList	opj_optarg		7610236	1					
ANR	7612321	Argument	opj_optarg		7610236	0					
ANR	7612322	Identifier	opj_optarg		7610236	0					
ANR	7612323	Argument	"""%d,%d"""		7610236	1					
ANR	7612324	PrimaryExpression	"""%d,%d"""		7610236	0					
ANR	7612325	Argument	& parameters -> cp_tx0		7610236	2					
ANR	7612326	UnaryOperationExpression	& parameters -> cp_tx0		7610236	0					
ANR	7612327	UnaryOperator	&		7610236	0					
ANR	7612328	PtrMemberAccess	parameters -> cp_tx0		7610236	1					
ANR	7612329	Identifier	parameters		7610236	0					
ANR	7612330	Identifier	cp_tx0		7610236	1					
ANR	7612331	Argument	& parameters -> cp_ty0		7610236	3					
ANR	7612332	UnaryOperationExpression	& parameters -> cp_ty0		7610236	0					
ANR	7612333	UnaryOperator	&		7610236	0					
ANR	7612334	PtrMemberAccess	parameters -> cp_ty0		7610236	1					
ANR	7612335	Identifier	parameters		7610236	0					
ANR	7612336	Identifier	cp_ty0		7610236	1					
ANR	7612337	PrimaryExpression	2		7610236	1					
ANR	7612338	CompoundStatement		482:50:17236:17236	7610236	1					
ANR	7612339	ExpressionStatement	"fprintf ( stderr , ""-T 'tile offset' argument error !! [-T X0,Y0]"" )"	1054:16:42284:42348	7610236	0	True				
ANR	7612340	CallExpression	"fprintf ( stderr , ""-T 'tile offset' argument error !! [-T X0,Y0]"" )"		7610236	0					
ANR	7612341	Callee	fprintf		7610236	0					
ANR	7612342	Identifier	fprintf		7610236	0					
ANR	7612343	ArgumentList	stderr		7610236	1					
ANR	7612344	Argument	stderr		7610236	0					
ANR	7612345	Identifier	stderr		7610236	0					
ANR	7612346	Argument	"""-T 'tile offset' argument error !! [-T X0,Y0]"""		7610236	1					
ANR	7612347	PrimaryExpression	"""-T 'tile offset' argument error !! [-T X0,Y0]"""		7610236	0					
ANR	7612348	ReturnStatement	return 1 ;	1055:16:42366:42374	7610236	1	True				
ANR	7612349	PrimaryExpression	1		7610236	0					
ANR	7612350	BreakStatement	break ;	1058:8:42408:42413	7610236	65	True				
ANR	7612351	Label	case 'C' :	1062:8:42494:42502	7610236	66	True				
ANR	7612352	CompoundStatement		491:18:17474:17474	7610236	67					
ANR	7612353	ExpressionStatement	parameters -> cp_comment = ( char * ) malloc ( strlen ( opj_optarg ) + 1 )	1063:12:42546:42608	7610236	0	True				
ANR	7612354	AssignmentExpression	parameters -> cp_comment = ( char * ) malloc ( strlen ( opj_optarg ) + 1 )		7610236	0		=			
ANR	7612355	PtrMemberAccess	parameters -> cp_comment		7610236	0					
ANR	7612356	Identifier	parameters		7610236	0					
ANR	7612357	Identifier	cp_comment		7610236	1					
ANR	7612358	CastExpression	( char * ) malloc ( strlen ( opj_optarg ) + 1 )		7610236	1					
ANR	7612359	CastTarget	char *		7610236	0					
ANR	7612360	CallExpression	malloc ( strlen ( opj_optarg ) + 1 )		7610236	1					
ANR	7612361	Callee	malloc		7610236	0					
ANR	7612362	Identifier	malloc		7610236	0					
ANR	7612363	ArgumentList	strlen ( opj_optarg ) + 1		7610236	1					
ANR	7612364	Argument	strlen ( opj_optarg ) + 1		7610236	0					
ANR	7612365	AdditiveExpression	strlen ( opj_optarg ) + 1		7610236	0		+			
ANR	7612366	CallExpression	strlen ( opj_optarg )		7610236	0					
ANR	7612367	Callee	strlen		7610236	0					
ANR	7612368	Identifier	strlen		7610236	0					
ANR	7612369	ArgumentList	opj_optarg		7610236	1					
ANR	7612370	Argument	opj_optarg		7610236	0					
ANR	7612371	Identifier	opj_optarg		7610236	0					
ANR	7612372	PrimaryExpression	1		7610236	1					
ANR	7612373	IfStatement	if ( parameters -> cp_comment )		7610236	1					
ANR	7612374	Condition	parameters -> cp_comment	1064:16:42626:42647	7610236	0	True				
ANR	7612375	PtrMemberAccess	parameters -> cp_comment		7610236	0					
ANR	7612376	Identifier	parameters		7610236	0					
ANR	7612377	Identifier	cp_comment		7610236	1					
ANR	7612378	CompoundStatement		493:40:17620:17620	7610236	1					
ANR	7612379	ExpressionStatement	"strcpy ( parameters -> cp_comment , opj_optarg )"	1065:16:42668:42710	7610236	0	True				
ANR	7612380	CallExpression	"strcpy ( parameters -> cp_comment , opj_optarg )"		7610236	0					
ANR	7612381	Callee	strcpy		7610236	0					
ANR	7612382	Identifier	strcpy		7610236	0					
ANR	7612383	ArgumentList	parameters -> cp_comment		7610236	1					
ANR	7612384	Argument	parameters -> cp_comment		7610236	0					
ANR	7612385	PtrMemberAccess	parameters -> cp_comment		7610236	0					
ANR	7612386	Identifier	parameters		7610236	0					
ANR	7612387	Identifier	cp_comment		7610236	1					
ANR	7612388	Argument	opj_optarg		7610236	1					
ANR	7612389	Identifier	opj_optarg		7610236	0					
ANR	7612390	BreakStatement	break ;	1068:8:42744:42749	7610236	68	True				
ANR	7612391	Label	case 'I' :	1073:8:42831:42839	7610236	69	True				
ANR	7612392	CompoundStatement		502:18:17811:17811	7610236	70					
ANR	7612393	ExpressionStatement	parameters -> irreversible = 1	1074:12:42887:42915	7610236	0	True				
ANR	7612394	AssignmentExpression	parameters -> irreversible = 1		7610236	0		=			
ANR	7612395	PtrMemberAccess	parameters -> irreversible		7610236	0					
ANR	7612396	Identifier	parameters		7610236	0					
ANR	7612397	Identifier	irreversible		7610236	1					
ANR	7612398	PrimaryExpression	1		7610236	1					
ANR	7612399	BreakStatement	break ;	1076:8:42935:42940	7610236	71	True				
ANR	7612400	Label	case 'u' :	1080:8:43021:43029	7610236	72	True				
ANR	7612401	CompoundStatement		509:18:18001:18001	7610236	73					
ANR	7612402	ExpressionStatement	parameters -> tp_flag = opj_optarg [ 0 ]	1081:12:43079:43114	7610236	0	True				
ANR	7612403	AssignmentExpression	parameters -> tp_flag = opj_optarg [ 0 ]		7610236	0		=			
ANR	7612404	PtrMemberAccess	parameters -> tp_flag		7610236	0					
ANR	7612405	Identifier	parameters		7610236	0					
ANR	7612406	Identifier	tp_flag		7610236	1					
ANR	7612407	ArrayIndexing	opj_optarg [ 0 ]		7610236	1					
ANR	7612408	Identifier	opj_optarg		7610236	0					
ANR	7612409	PrimaryExpression	0		7610236	1					
ANR	7612410	ExpressionStatement	parameters -> tp_on = 1	1082:12:43128:43149	7610236	1	True				
ANR	7612411	AssignmentExpression	parameters -> tp_on = 1		7610236	0		=			
ANR	7612412	PtrMemberAccess	parameters -> tp_on		7610236	0					
ANR	7612413	Identifier	parameters		7610236	0					
ANR	7612414	Identifier	tp_on		7610236	1					
ANR	7612415	PrimaryExpression	1		7610236	1					
ANR	7612416	BreakStatement	break ;	1084:8:43169:43174	7610236	74	True				
ANR	7612417	Label	case 'z' :	1088:8:43255:43263	7610236	75	True				
ANR	7612418	CompoundStatement		517:18:18235:18235	7610236	76					
ANR	7612419	ExpressionStatement	img_fol -> imgdirpath = ( char * ) malloc ( strlen ( opj_optarg ) + 1 )	1089:12:43314:43373	7610236	0	True				
ANR	7612420	AssignmentExpression	img_fol -> imgdirpath = ( char * ) malloc ( strlen ( opj_optarg ) + 1 )		7610236	0		=			
ANR	7612421	PtrMemberAccess	img_fol -> imgdirpath		7610236	0					
ANR	7612422	Identifier	img_fol		7610236	0					
ANR	7612423	Identifier	imgdirpath		7610236	1					
ANR	7612424	CastExpression	( char * ) malloc ( strlen ( opj_optarg ) + 1 )		7610236	1					
ANR	7612425	CastTarget	char *		7610236	0					
ANR	7612426	CallExpression	malloc ( strlen ( opj_optarg ) + 1 )		7610236	1					
ANR	7612427	Callee	malloc		7610236	0					
ANR	7612428	Identifier	malloc		7610236	0					
ANR	7612429	ArgumentList	strlen ( opj_optarg ) + 1		7610236	1					
ANR	7612430	Argument	strlen ( opj_optarg ) + 1		7610236	0					
ANR	7612431	AdditiveExpression	strlen ( opj_optarg ) + 1		7610236	0		+			
ANR	7612432	CallExpression	strlen ( opj_optarg )		7610236	0					
ANR	7612433	Callee	strlen		7610236	0					
ANR	7612434	Identifier	strlen		7610236	0					
ANR	7612435	ArgumentList	opj_optarg		7610236	1					
ANR	7612436	Argument	opj_optarg		7610236	0					
ANR	7612437	Identifier	opj_optarg		7610236	0					
ANR	7612438	PrimaryExpression	1		7610236	1					
ANR	7612439	IfStatement	if ( img_fol -> imgdirpath == NULL )		7610236	1					
ANR	7612440	Condition	img_fol -> imgdirpath == NULL	1090:16:43391:43417	7610236	0	True				
ANR	7612441	EqualityExpression	img_fol -> imgdirpath == NULL		7610236	0		==			
ANR	7612442	PtrMemberAccess	img_fol -> imgdirpath		7610236	0					
ANR	7612443	Identifier	img_fol		7610236	0					
ANR	7612444	Identifier	imgdirpath		7610236	1					
ANR	7612445	Identifier	NULL		7610236	1					
ANR	7612446	CompoundStatement		519:45:18390:18390	7610236	1					
ANR	7612447	ReturnStatement	return 1 ;	1091:16:43438:43446	7610236	0	True				
ANR	7612448	PrimaryExpression	1		7610236	0					
ANR	7612449	ExpressionStatement	"strcpy ( img_fol -> imgdirpath , opj_optarg )"	1093:12:43474:43513	7610236	2	True				
ANR	7612450	CallExpression	"strcpy ( img_fol -> imgdirpath , opj_optarg )"		7610236	0					
ANR	7612451	Callee	strcpy		7610236	0					
ANR	7612452	Identifier	strcpy		7610236	0					
ANR	7612453	ArgumentList	img_fol -> imgdirpath		7610236	1					
ANR	7612454	Argument	img_fol -> imgdirpath		7610236	0					
ANR	7612455	PtrMemberAccess	img_fol -> imgdirpath		7610236	0					
ANR	7612456	Identifier	img_fol		7610236	0					
ANR	7612457	Identifier	imgdirpath		7610236	1					
ANR	7612458	Argument	opj_optarg		7610236	1					
ANR	7612459	Identifier	opj_optarg		7610236	0					
ANR	7612460	ExpressionStatement	img_fol -> set_imgdir = 1	1094:12:43527:43550	7610236	3	True				
ANR	7612461	AssignmentExpression	img_fol -> set_imgdir = 1		7610236	0		=			
ANR	7612462	PtrMemberAccess	img_fol -> set_imgdir		7610236	0					
ANR	7612463	Identifier	img_fol		7610236	0					
ANR	7612464	Identifier	set_imgdir		7610236	1					
ANR	7612465	PrimaryExpression	1		7610236	1					
ANR	7612466	BreakStatement	break ;	1096:8:43570:43575	7610236	77	True				
ANR	7612467	Label	case 'w' :	1100:8:43656:43664	7610236	78	True				
ANR	7612468	CompoundStatement		530:12:18700:18711	7610236	79					
ANR	7612469	IdentifierDeclStatement	int fps = 0 ;	1101:12:43730:43741	7610236	0	True				
ANR	7612470	IdentifierDecl	fps = 0		7610236	0					
ANR	7612471	IdentifierDeclType	int		7610236	0					
ANR	7612472	Identifier	fps		7610236	1					
ANR	7612473	AssignmentExpression	fps = 0		7610236	2		=			
ANR	7612474	Identifier	fps		7610236	0					
ANR	7612475	PrimaryExpression	0		7610236	1					
ANR	7612476	ExpressionStatement	"sscanf ( opj_optarg , ""%d"" , & fps )"	1102:12:43755:43785	7610236	1	True				
ANR	7612477	CallExpression	"sscanf ( opj_optarg , ""%d"" , & fps )"		7610236	0					
ANR	7612478	Callee	sscanf		7610236	0					
ANR	7612479	Identifier	sscanf		7610236	0					
ANR	7612480	ArgumentList	opj_optarg		7610236	1					
ANR	7612481	Argument	opj_optarg		7610236	0					
ANR	7612482	Identifier	opj_optarg		7610236	0					
ANR	7612483	Argument	"""%d"""		7610236	1					
ANR	7612484	PrimaryExpression	"""%d"""		7610236	0					
ANR	7612485	Argument	& fps		7610236	2					
ANR	7612486	UnaryOperationExpression	& fps		7610236	0					
ANR	7612487	UnaryOperator	&		7610236	0					
ANR	7612488	Identifier	fps		7610236	1					
ANR	7612489	IfStatement	if ( fps == 24 )		7610236	2					
ANR	7612490	Condition	fps == 24	1103:16:43803:43811	7610236	0	True				
ANR	7612491	EqualityExpression	fps == 24		7610236	0		==			
ANR	7612492	Identifier	fps		7610236	0					
ANR	7612493	PrimaryExpression	24		7610236	1					
ANR	7612494	CompoundStatement		532:27:18784:18784	7610236	1					
ANR	7612495	ExpressionStatement	parameters -> rsiz = OPJ_PROFILE_CINEMA_2K	1104:16:43832:43872	7610236	0	True				
ANR	7612496	AssignmentExpression	parameters -> rsiz = OPJ_PROFILE_CINEMA_2K		7610236	0		=			
ANR	7612497	PtrMemberAccess	parameters -> rsiz		7610236	0					
ANR	7612498	Identifier	parameters		7610236	0					
ANR	7612499	Identifier	rsiz		7610236	1					
ANR	7612500	Identifier	OPJ_PROFILE_CINEMA_2K		7610236	1					
ANR	7612501	ExpressionStatement	parameters -> max_comp_size = OPJ_CINEMA_24_COMP	1105:16:43890:43936	7610236	1	True				
ANR	7612502	AssignmentExpression	parameters -> max_comp_size = OPJ_CINEMA_24_COMP		7610236	0		=			
ANR	7612503	PtrMemberAccess	parameters -> max_comp_size		7610236	0					
ANR	7612504	Identifier	parameters		7610236	0					
ANR	7612505	Identifier	max_comp_size		7610236	1					
ANR	7612506	Identifier	OPJ_CINEMA_24_COMP		7610236	1					
ANR	7612507	ExpressionStatement	parameters -> max_cs_size = OPJ_CINEMA_24_CS	1106:16:43954:43996	7610236	2	True				
ANR	7612508	AssignmentExpression	parameters -> max_cs_size = OPJ_CINEMA_24_CS		7610236	0		=			
ANR	7612509	PtrMemberAccess	parameters -> max_cs_size		7610236	0					
ANR	7612510	Identifier	parameters		7610236	0					
ANR	7612511	Identifier	max_cs_size		7610236	1					
ANR	7612512	Identifier	OPJ_CINEMA_24_CS		7610236	1					
ANR	7612513	ElseStatement	else		7610236	0					
ANR	7612514	IfStatement	if ( fps == 48 )		7610236	0					
ANR	7612515	Condition	fps == 48	1107:23:44021:44029	7610236	0	True				
ANR	7612516	EqualityExpression	fps == 48		7610236	0		==			
ANR	7612517	Identifier	fps		7610236	0					
ANR	7612518	PrimaryExpression	48		7610236	1					
ANR	7612519	CompoundStatement		536:34:19002:19002	7610236	1					
ANR	7612520	ExpressionStatement	parameters -> rsiz = OPJ_PROFILE_CINEMA_2K	1108:16:44050:44090	7610236	0	True				
ANR	7612521	AssignmentExpression	parameters -> rsiz = OPJ_PROFILE_CINEMA_2K		7610236	0		=			
ANR	7612522	PtrMemberAccess	parameters -> rsiz		7610236	0					
ANR	7612523	Identifier	parameters		7610236	0					
ANR	7612524	Identifier	rsiz		7610236	1					
ANR	7612525	Identifier	OPJ_PROFILE_CINEMA_2K		7610236	1					
ANR	7612526	ExpressionStatement	parameters -> max_comp_size = OPJ_CINEMA_48_COMP	1109:16:44108:44154	7610236	1	True				
ANR	7612527	AssignmentExpression	parameters -> max_comp_size = OPJ_CINEMA_48_COMP		7610236	0		=			
ANR	7612528	PtrMemberAccess	parameters -> max_comp_size		7610236	0					
ANR	7612529	Identifier	parameters		7610236	0					
ANR	7612530	Identifier	max_comp_size		7610236	1					
ANR	7612531	Identifier	OPJ_CINEMA_48_COMP		7610236	1					
ANR	7612532	ExpressionStatement	parameters -> max_cs_size = OPJ_CINEMA_48_CS	1110:16:44172:44214	7610236	2	True				
ANR	7612533	AssignmentExpression	parameters -> max_cs_size = OPJ_CINEMA_48_CS		7610236	0		=			
ANR	7612534	PtrMemberAccess	parameters -> max_cs_size		7610236	0					
ANR	7612535	Identifier	parameters		7610236	0					
ANR	7612536	Identifier	max_cs_size		7610236	1					
ANR	7612537	Identifier	OPJ_CINEMA_48_CS		7610236	1					
ANR	7612538	ElseStatement	else		7610236	0					
ANR	7612539	CompoundStatement		540:19:19205:19205	7610236	0					
ANR	7612540	ExpressionStatement	"fprintf ( stderr , ""Incorrect value!! must be 24 or 48\\n"" )"	1112:16:44253:44308	7610236	0	True				
ANR	7612541	CallExpression	"fprintf ( stderr , ""Incorrect value!! must be 24 or 48\\n"" )"		7610236	0					
ANR	7612542	Callee	fprintf		7610236	0					
ANR	7612543	Identifier	fprintf		7610236	0					
ANR	7612544	ArgumentList	stderr		7610236	1					
ANR	7612545	Argument	stderr		7610236	0					
ANR	7612546	Identifier	stderr		7610236	0					
ANR	7612547	Argument	"""Incorrect value!! must be 24 or 48\\n"""		7610236	1					
ANR	7612548	PrimaryExpression	"""Incorrect value!! must be 24 or 48\\n"""		7610236	0					
ANR	7612549	ReturnStatement	return 1 ;	1113:16:44326:44334	7610236	1	True				
ANR	7612550	PrimaryExpression	1		7610236	0					
ANR	7612551	Statement	fprintf	1115:12:44362:44368	7610236	3	True				
ANR	7612552	Statement	(	1115:19:44369:44369	7610236	4	True				
ANR	7612553	Statement	stdout	1115:20:44370:44375	7610236	5	True				
ANR	7612554	Statement	","	1115:26:44376:44376	7610236	6	True				
ANR	7612555	Statement	"""CINEMA 2K profile activated\\n"""	1115:28:44378:44408	7610236	7	True				
ANR	7612556	Statement	"""Other options specified could be overridden\\n"""	1116:20:44430:44476	7610236	8	True				
ANR	7612557	Statement	)	1116:67:44477:44477	7610236	9	True				
ANR	7612558	ExpressionStatement		1116:68:44478:44478	7610236	10	True				
ANR	7612559	BreakStatement	break ;	1119:8:44499:44504	7610236	80	True				
ANR	7612560	Label	case 'y' :	1123:8:44585:44593	7610236	81	True				
ANR	7612561	CompoundStatement		552:18:19565:19565	7610236	82					
ANR	7612562	ExpressionStatement	parameters -> rsiz = OPJ_PROFILE_CINEMA_4K	1124:12:44659:44699	7610236	0	True				
ANR	7612563	AssignmentExpression	parameters -> rsiz = OPJ_PROFILE_CINEMA_4K		7610236	0		=			
ANR	7612564	PtrMemberAccess	parameters -> rsiz		7610236	0					
ANR	7612565	Identifier	parameters		7610236	0					
ANR	7612566	Identifier	rsiz		7610236	1					
ANR	7612567	Identifier	OPJ_PROFILE_CINEMA_4K		7610236	1					
ANR	7612568	Statement	fprintf	1125:12:44713:44719	7610236	1	True				
ANR	7612569	Statement	(	1125:19:44720:44720	7610236	2	True				
ANR	7612570	Statement	stdout	1125:20:44721:44726	7610236	3	True				
ANR	7612571	Statement	","	1125:26:44727:44727	7610236	4	True				
ANR	7612572	Statement	"""CINEMA 4K profile activated\\n"""	1125:28:44729:44759	7610236	5	True				
ANR	7612573	Statement	"""Other options specified could be overridden\\n"""	1126:20:44781:44827	7610236	6	True				
ANR	7612574	Statement	)	1126:67:44828:44828	7610236	7	True				
ANR	7612575	ExpressionStatement		1126:68:44829:44829	7610236	8	True				
ANR	7612576	BreakStatement	break ;	1128:8:44849:44854	7610236	83	True				
ANR	7612577	Label	case 'Y' :	1132:8:44935:44943	7610236	84	True				
ANR	7612578	CompoundStatement		562:12:20017:20033	7610236	85					
ANR	7612579	IdentifierDeclStatement	int mct_mode = 0 ;	1133:12:45047:45063	7610236	0	True				
ANR	7612580	IdentifierDecl	mct_mode = 0		7610236	0					
ANR	7612581	IdentifierDeclType	int		7610236	0					
ANR	7612582	Identifier	mct_mode		7610236	1					
ANR	7612583	AssignmentExpression	mct_mode = 0		7610236	2		=			
ANR	7612584	Identifier	mct_mode		7610236	0					
ANR	7612585	PrimaryExpression	0		7610236	1					
ANR	7612586	ExpressionStatement	"sscanf ( opj_optarg , ""%d"" , & mct_mode )"	1134:12:45077:45112	7610236	1	True				
ANR	7612587	CallExpression	"sscanf ( opj_optarg , ""%d"" , & mct_mode )"		7610236	0					
ANR	7612588	Callee	sscanf		7610236	0					
ANR	7612589	Identifier	sscanf		7610236	0					
ANR	7612590	ArgumentList	opj_optarg		7610236	1					
ANR	7612591	Argument	opj_optarg		7610236	0					
ANR	7612592	Identifier	opj_optarg		7610236	0					
ANR	7612593	Argument	"""%d"""		7610236	1					
ANR	7612594	PrimaryExpression	"""%d"""		7610236	0					
ANR	7612595	Argument	& mct_mode		7610236	2					
ANR	7612596	UnaryOperationExpression	& mct_mode		7610236	0					
ANR	7612597	UnaryOperator	&		7610236	0					
ANR	7612598	Identifier	mct_mode		7610236	1					
ANR	7612599	IfStatement	if ( mct_mode < 0 || mct_mode > 2 )		7610236	2					
ANR	7612600	Condition	mct_mode < 0 || mct_mode > 2	1135:16:45130:45157	7610236	0	True				
ANR	7612601	OrExpression	mct_mode < 0 || mct_mode > 2		7610236	0		||			
ANR	7612602	RelationalExpression	mct_mode < 0		7610236	0		<			
ANR	7612603	Identifier	mct_mode		7610236	0					
ANR	7612604	PrimaryExpression	0		7610236	1					
ANR	7612605	RelationalExpression	mct_mode > 2		7610236	1		>			
ANR	7612606	Identifier	mct_mode		7610236	0					
ANR	7612607	PrimaryExpression	2		7610236	1					
ANR	7612608	CompoundStatement		564:46:20130:20130	7610236	1					
ANR	7612609	ExpressionStatement	"fprintf ( stderr , ""MCT incorrect value!! Current accepted values are 0, 1 or 2.\\n"" )"	1136:16:45178:45283	7610236	0	True				
ANR	7612610	CallExpression	"fprintf ( stderr , ""MCT incorrect value!! Current accepted values are 0, 1 or 2.\\n"" )"		7610236	0					
ANR	7612611	Callee	fprintf		7610236	0					
ANR	7612612	Identifier	fprintf		7610236	0					
ANR	7612613	ArgumentList	stderr		7610236	1					
ANR	7612614	Argument	stderr		7610236	0					
ANR	7612615	Identifier	stderr		7610236	0					
ANR	7612616	Argument	"""MCT incorrect value!! Current accepted values are 0, 1 or 2.\\n"""		7610236	1					
ANR	7612617	PrimaryExpression	"""MCT incorrect value!! Current accepted values are 0, 1 or 2.\\n"""		7610236	0					
ANR	7612618	ReturnStatement	return 1 ;	1138:16:45301:45309	7610236	1	True				
ANR	7612619	PrimaryExpression	1		7610236	0					
ANR	7612620	ExpressionStatement	parameters -> tcp_mct = ( char ) mct_mode	1140:12:45337:45374	7610236	3	True				
ANR	7612621	AssignmentExpression	parameters -> tcp_mct = ( char ) mct_mode		7610236	0		=			
ANR	7612622	PtrMemberAccess	parameters -> tcp_mct		7610236	0					
ANR	7612623	Identifier	parameters		7610236	0					
ANR	7612624	Identifier	tcp_mct		7610236	1					
ANR	7612625	CastExpression	( char ) mct_mode		7610236	1					
ANR	7612626	CastTarget	char		7610236	0					
ANR	7612627	Identifier	mct_mode		7610236	1					
ANR	7612628	BreakStatement	break ;	1142:8:45394:45399	7610236	86	True				
ANR	7612629	Label	case 'm' :	1147:8:45481:45489	7610236	87	True				
ANR	7612630	CompoundStatement		587:12:20821:20857	7610236	88					
ANR	7612631	IdentifierDeclStatement	char * lFilename = opj_optarg ;	1148:12:45534:45562	7610236	0	True				
ANR	7612632	IdentifierDecl	* lFilename = opj_optarg		7610236	0					
ANR	7612633	IdentifierDeclType	char *		7610236	0					
ANR	7612634	Identifier	lFilename		7610236	1					
ANR	7612635	AssignmentExpression	* lFilename = opj_optarg		7610236	2		=			
ANR	7612636	Identifier	opj_optarg		7610236	0					
ANR	7612637	Identifier	opj_optarg		7610236	1					
ANR	7612638	IdentifierDeclStatement	char * lMatrix ;	1149:12:45576:45589	7610236	1	True				
ANR	7612639	IdentifierDecl	* lMatrix		7610236	0					
ANR	7612640	IdentifierDeclType	char *		7610236	0					
ANR	7612641	Identifier	lMatrix		7610236	1					
ANR	7612642	IdentifierDeclStatement	char * lCurrentPtr ;	1150:12:45603:45621	7610236	2	True				
ANR	7612643	IdentifierDecl	* lCurrentPtr		7610236	0					
ANR	7612644	IdentifierDeclType	char *		7610236	0					
ANR	7612645	Identifier	lCurrentPtr		7610236	1					
ANR	7612646	IdentifierDeclStatement	float * lCurrentDoublePtr ;	1151:12:45635:45659	7610236	3	True				
ANR	7612647	IdentifierDecl	* lCurrentDoublePtr		7610236	0					
ANR	7612648	IdentifierDeclType	float *		7610236	0					
ANR	7612649	Identifier	lCurrentDoublePtr		7610236	1					
ANR	7612650	IdentifierDeclStatement	float * lSpace ;	1152:12:45673:45686	7610236	4	True				
ANR	7612651	IdentifierDecl	* lSpace		7610236	0					
ANR	7612652	IdentifierDeclType	float *		7610236	0					
ANR	7612653	Identifier	lSpace		7610236	1					
ANR	7612654	IdentifierDeclStatement	int * l_int_ptr ;	1153:12:45700:45714	7610236	5	True				
ANR	7612655	IdentifierDecl	* l_int_ptr		7610236	0					
ANR	7612656	IdentifierDeclType	int *		7610236	0					
ANR	7612657	Identifier	l_int_ptr		7610236	1					
ANR	7612658	IdentifierDeclStatement	"int lNbComp = 0 , lTotalComp , lMctComp , i2 ;"	1154:12:45728:45769	7610236	6	True				
ANR	7612659	IdentifierDecl	lNbComp = 0		7610236	0					
ANR	7612660	IdentifierDeclType	int		7610236	0					
ANR	7612661	Identifier	lNbComp		7610236	1					
ANR	7612662	AssignmentExpression	lNbComp = 0		7610236	2		=			
ANR	7612663	Identifier	lNbComp		7610236	0					
ANR	7612664	PrimaryExpression	0		7610236	1					
ANR	7612665	IdentifierDecl	lTotalComp		7610236	1					
ANR	7612666	IdentifierDeclType	int		7610236	0					
ANR	7612667	Identifier	lTotalComp		7610236	1					
ANR	7612668	IdentifierDecl	lMctComp		7610236	2					
ANR	7612669	IdentifierDeclType	int		7610236	0					
ANR	7612670	Identifier	lMctComp		7610236	1					
ANR	7612671	IdentifierDecl	i2		7610236	3					
ANR	7612672	IdentifierDeclType	int		7610236	0					
ANR	7612673	Identifier	i2		7610236	1					
ANR	7612674	IdentifierDeclStatement	"size_t lStrLen , lStrFread ;"	1155:12:45783:45808	7610236	7	True				
ANR	7612675	IdentifierDecl	lStrLen		7610236	0					
ANR	7612676	IdentifierDeclType	size_t		7610236	0					
ANR	7612677	Identifier	lStrLen		7610236	1					
ANR	7612678	IdentifierDecl	lStrFread		7610236	1					
ANR	7612679	IdentifierDeclType	size_t		7610236	0					
ANR	7612680	Identifier	lStrFread		7610236	1					
ANR	7612681	IdentifierDeclStatement	"FILE * lFile = fopen ( lFilename , ""r"" ) ;"	1158:12:45851:45887	7610236	8	True				
ANR	7612682	IdentifierDecl	"* lFile = fopen ( lFilename , ""r"" )"		7610236	0					
ANR	7612683	IdentifierDeclType	FILE *		7610236	0					
ANR	7612684	Identifier	lFile		7610236	1					
ANR	7612685	AssignmentExpression	"* lFile = fopen ( lFilename , ""r"" )"		7610236	2		=			
ANR	7612686	Identifier	lFile		7610236	0					
ANR	7612687	CallExpression	"fopen ( lFilename , ""r"" )"		7610236	1					
ANR	7612688	Callee	fopen		7610236	0					
ANR	7612689	Identifier	fopen		7610236	0					
ANR	7612690	ArgumentList	lFilename		7610236	1					
ANR	7612691	Argument	lFilename		7610236	0					
ANR	7612692	Identifier	lFilename		7610236	0					
ANR	7612693	Argument	"""r"""		7610236	1					
ANR	7612694	PrimaryExpression	"""r"""		7610236	0					
ANR	7612695	IfStatement	if ( lFile == NULL )		7610236	9					
ANR	7612696	Condition	lFile == NULL	1159:16:45905:45917	7610236	0	True				
ANR	7612697	EqualityExpression	lFile == NULL		7610236	0		==			
ANR	7612698	Identifier	lFile		7610236	0					
ANR	7612699	Identifier	NULL		7610236	1					
ANR	7612700	CompoundStatement		588:31:20890:20890	7610236	1					
ANR	7612701	ReturnStatement	return 1 ;	1160:16:45938:45946	7610236	0	True				
ANR	7612702	PrimaryExpression	1		7610236	0					
ANR	7612703	ExpressionStatement	"fseek ( lFile , 0 , SEEK_END )"	1164:12:46030:46055	7610236	10	True				
ANR	7612704	CallExpression	"fseek ( lFile , 0 , SEEK_END )"		7610236	0					
ANR	7612705	Callee	fseek		7610236	0					
ANR	7612706	Identifier	fseek		7610236	0					
ANR	7612707	ArgumentList	lFile		7610236	1					
ANR	7612708	Argument	lFile		7610236	0					
ANR	7612709	Identifier	lFile		7610236	0					
ANR	7612710	Argument	0		7610236	1					
ANR	7612711	PrimaryExpression	0		7610236	0					
ANR	7612712	Argument	SEEK_END		7610236	2					
ANR	7612713	Identifier	SEEK_END		7610236	0					
ANR	7612714	ExpressionStatement	lStrLen = ( size_t ) ftell ( lFile )	1165:12:46069:46099	7610236	11	True				
ANR	7612715	AssignmentExpression	lStrLen = ( size_t ) ftell ( lFile )		7610236	0		=			
ANR	7612716	Identifier	lStrLen		7610236	0					
ANR	7612717	CastExpression	( size_t ) ftell ( lFile )		7610236	1					
ANR	7612718	CastTarget	size_t		7610236	0					
ANR	7612719	CallExpression	ftell ( lFile )		7610236	1					
ANR	7612720	Callee	ftell		7610236	0					
ANR	7612721	Identifier	ftell		7610236	0					
ANR	7612722	ArgumentList	lFile		7610236	1					
ANR	7612723	Argument	lFile		7610236	0					
ANR	7612724	Identifier	lFile		7610236	0					
ANR	7612725	ExpressionStatement	"fseek ( lFile , 0 , SEEK_SET )"	1166:12:46113:46138	7610236	12	True				
ANR	7612726	CallExpression	"fseek ( lFile , 0 , SEEK_SET )"		7610236	0					
ANR	7612727	Callee	fseek		7610236	0					
ANR	7612728	Identifier	fseek		7610236	0					
ANR	7612729	ArgumentList	lFile		7610236	1					
ANR	7612730	Argument	lFile		7610236	0					
ANR	7612731	Identifier	lFile		7610236	0					
ANR	7612732	Argument	0		7610236	1					
ANR	7612733	PrimaryExpression	0		7610236	0					
ANR	7612734	Argument	SEEK_SET		7610236	2					
ANR	7612735	Identifier	SEEK_SET		7610236	0					
ANR	7612736	ExpressionStatement	lMatrix = ( char * ) malloc ( lStrLen + 1 )	1167:12:46152:46190	7610236	13	True				
ANR	7612737	AssignmentExpression	lMatrix = ( char * ) malloc ( lStrLen + 1 )		7610236	0		=			
ANR	7612738	Identifier	lMatrix		7610236	0					
ANR	7612739	CastExpression	( char * ) malloc ( lStrLen + 1 )		7610236	1					
ANR	7612740	CastTarget	char *		7610236	0					
ANR	7612741	CallExpression	malloc ( lStrLen + 1 )		7610236	1					
ANR	7612742	Callee	malloc		7610236	0					
ANR	7612743	Identifier	malloc		7610236	0					
ANR	7612744	ArgumentList	lStrLen + 1		7610236	1					
ANR	7612745	Argument	lStrLen + 1		7610236	0					
ANR	7612746	AdditiveExpression	lStrLen + 1		7610236	0		+			
ANR	7612747	Identifier	lStrLen		7610236	0					
ANR	7612748	PrimaryExpression	1		7610236	1					
ANR	7612749	IfStatement	if ( lMatrix == NULL )		7610236	14					
ANR	7612750	Condition	lMatrix == NULL	1168:16:46208:46222	7610236	0	True				
ANR	7612751	EqualityExpression	lMatrix == NULL		7610236	0		==			
ANR	7612752	Identifier	lMatrix		7610236	0					
ANR	7612753	Identifier	NULL		7610236	1					
ANR	7612754	CompoundStatement		597:33:21195:21195	7610236	1					
ANR	7612755	ExpressionStatement	fclose ( lFile )	1169:16:46243:46256	7610236	0	True				
ANR	7612756	CallExpression	fclose ( lFile )		7610236	0					
ANR	7612757	Callee	fclose		7610236	0					
ANR	7612758	Identifier	fclose		7610236	0					
ANR	7612759	ArgumentList	lFile		7610236	1					
ANR	7612760	Argument	lFile		7610236	0					
ANR	7612761	Identifier	lFile		7610236	0					
ANR	7612762	ReturnStatement	return 1 ;	1170:16:46274:46282	7610236	1	True				
ANR	7612763	PrimaryExpression	1		7610236	0					
ANR	7612764	ExpressionStatement	"lStrFread = fread ( lMatrix , 1 , lStrLen , lFile )"	1172:12:46310:46355	7610236	15	True				
ANR	7612765	AssignmentExpression	"lStrFread = fread ( lMatrix , 1 , lStrLen , lFile )"		7610236	0		=			
ANR	7612766	Identifier	lStrFread		7610236	0					
ANR	7612767	CallExpression	"fread ( lMatrix , 1 , lStrLen , lFile )"		7610236	1					
ANR	7612768	Callee	fread		7610236	0					
ANR	7612769	Identifier	fread		7610236	0					
ANR	7612770	ArgumentList	lMatrix		7610236	1					
ANR	7612771	Argument	lMatrix		7610236	0					
ANR	7612772	Identifier	lMatrix		7610236	0					
ANR	7612773	Argument	1		7610236	1					
ANR	7612774	PrimaryExpression	1		7610236	0					
ANR	7612775	Argument	lStrLen		7610236	2					
ANR	7612776	Identifier	lStrLen		7610236	0					
ANR	7612777	Argument	lFile		7610236	3					
ANR	7612778	Identifier	lFile		7610236	0					
ANR	7612779	ExpressionStatement	fclose ( lFile )	1173:12:46369:46382	7610236	16	True				
ANR	7612780	CallExpression	fclose ( lFile )		7610236	0					
ANR	7612781	Callee	fclose		7610236	0					
ANR	7612782	Identifier	fclose		7610236	0					
ANR	7612783	ArgumentList	lFile		7610236	1					
ANR	7612784	Argument	lFile		7610236	0					
ANR	7612785	Identifier	lFile		7610236	0					
ANR	7612786	IfStatement	if ( lStrLen != lStrFread )		7610236	17					
ANR	7612787	Condition	lStrLen != lStrFread	1174:16:46400:46419	7610236	0	True				
ANR	7612788	EqualityExpression	lStrLen != lStrFread		7610236	0		!=			
ANR	7612789	Identifier	lStrLen		7610236	0					
ANR	7612790	Identifier	lStrFread		7610236	1					
ANR	7612791	CompoundStatement		603:38:21392:21392	7610236	1					
ANR	7612792	ExpressionStatement	free ( lMatrix )	1175:16:46440:46453	7610236	0	True				
ANR	7612793	CallExpression	free ( lMatrix )		7610236	0					
ANR	7612794	Callee	free		7610236	0					
ANR	7612795	Identifier	free		7610236	0					
ANR	7612796	ArgumentList	lMatrix		7610236	1					
ANR	7612797	Argument	lMatrix		7610236	0					
ANR	7612798	Identifier	lMatrix		7610236	0					
ANR	7612799	ReturnStatement	return 1 ;	1176:16:46471:46479	7610236	1	True				
ANR	7612800	PrimaryExpression	1		7610236	0					
ANR	7612801	ExpressionStatement	lMatrix [ lStrLen ] = 0	1179:12:46508:46528	7610236	18	True				
ANR	7612802	AssignmentExpression	lMatrix [ lStrLen ] = 0		7610236	0		=			
ANR	7612803	ArrayIndexing	lMatrix [ lStrLen ]		7610236	0					
ANR	7612804	Identifier	lMatrix		7610236	0					
ANR	7612805	Identifier	lStrLen		7610236	1					
ANR	7612806	PrimaryExpression	0		7610236	1					
ANR	7612807	ExpressionStatement	lCurrentPtr = lMatrix	1180:12:46542:46563	7610236	19	True				
ANR	7612808	AssignmentExpression	lCurrentPtr = lMatrix		7610236	0		=			
ANR	7612809	Identifier	lCurrentPtr		7610236	0					
ANR	7612810	Identifier	lMatrix		7610236	1					
ANR	7612811	WhileStatement	while ( * lCurrentPtr != 0 )		7610236	20					
ANR	7612812	Condition	* lCurrentPtr != 0	1183:19:46620:46636	7610236	0	True				
ANR	7612813	EqualityExpression	* lCurrentPtr != 0		7610236	0		!=			
ANR	7612814	UnaryOperationExpression	* lCurrentPtr		7610236	0					
ANR	7612815	UnaryOperator	*		7610236	0					
ANR	7612816	Identifier	lCurrentPtr		7610236	1					
ANR	7612817	PrimaryExpression	0		7610236	1					
ANR	7612818	CompoundStatement		612:38:21609:21609	7610236	1					
ANR	7612819	IfStatement	if ( * lCurrentPtr == ' ' )		7610236	0					
ANR	7612820	Condition	* lCurrentPtr == ' '	1184:20:46661:46679	7610236	0	True				
ANR	7612821	EqualityExpression	* lCurrentPtr == ' '		7610236	0		==			
ANR	7612822	UnaryOperationExpression	* lCurrentPtr		7610236	0					
ANR	7612823	UnaryOperator	*		7610236	0					
ANR	7612824	Identifier	lCurrentPtr		7610236	1					
ANR	7612825	PrimaryExpression	' '		7610236	1					
ANR	7612826	CompoundStatement		613:41:21652:21652	7610236	1					
ANR	7612827	ExpressionStatement	* lCurrentPtr = 0	1185:20:46704:46720	7610236	0	True				
ANR	7612828	AssignmentExpression	* lCurrentPtr = 0		7610236	0		=			
ANR	7612829	UnaryOperationExpression	* lCurrentPtr		7610236	0					
ANR	7612830	UnaryOperator	*		7610236	0					
ANR	7612831	Identifier	lCurrentPtr		7610236	1					
ANR	7612832	PrimaryExpression	0		7610236	1					
ANR	7612833	ExpressionStatement	++ lNbComp	1186:20:46742:46751	7610236	1	True				
ANR	7612834	UnaryExpression	++ lNbComp		7610236	0					
ANR	7612835	IncDec	++		7610236	0					
ANR	7612836	Identifier	lNbComp		7610236	1					
ANR	7612837	ExpressionStatement	++ lCurrentPtr	1188:16:46787:46800	7610236	1	True				
ANR	7612838	UnaryExpression	++ lCurrentPtr		7610236	0					
ANR	7612839	IncDec	++		7610236	0					
ANR	7612840	Identifier	lCurrentPtr		7610236	1					
ANR	7612841	ExpressionStatement	++ lNbComp	1190:12:46828:46837	7610236	21	True				
ANR	7612842	UnaryExpression	++ lNbComp		7610236	0					
ANR	7612843	IncDec	++		7610236	0					
ANR	7612844	Identifier	lNbComp		7610236	1					
ANR	7612845	ExpressionStatement	lCurrentPtr = lMatrix	1191:12:46851:46872	7610236	22	True				
ANR	7612846	AssignmentExpression	lCurrentPtr = lMatrix		7610236	0		=			
ANR	7612847	Identifier	lCurrentPtr		7610236	0					
ANR	7612848	Identifier	lMatrix		7610236	1					
ANR	7612849	ExpressionStatement	lNbComp = ( int ) ( sqrt ( 4 * lNbComp + 1 ) / 2. - 0.5 )	1193:12:46887:46936	7610236	23	True				
ANR	7612850	AssignmentExpression	lNbComp = ( int ) ( sqrt ( 4 * lNbComp + 1 ) / 2. - 0.5 )		7610236	0		=			
ANR	7612851	Identifier	lNbComp		7610236	0					
ANR	7612852	CastExpression	( int ) ( sqrt ( 4 * lNbComp + 1 ) / 2. - 0.5 )		7610236	1					
ANR	7612853	CastTarget	int		7610236	0					
ANR	7612854	AdditiveExpression	sqrt ( 4 * lNbComp + 1 ) / 2. - 0.5		7610236	1		-			
ANR	7612855	MultiplicativeExpression	sqrt ( 4 * lNbComp + 1 ) / 2.		7610236	0		/			
ANR	7612856	CallExpression	sqrt ( 4 * lNbComp + 1 )		7610236	0					
ANR	7612857	Callee	sqrt		7610236	0					
ANR	7612858	Identifier	sqrt		7610236	0					
ANR	7612859	ArgumentList	4 * lNbComp + 1		7610236	1					
ANR	7612860	Argument	4 * lNbComp + 1		7610236	0					
ANR	7612861	AdditiveExpression	4 * lNbComp + 1		7610236	0		+			
ANR	7612862	MultiplicativeExpression	4 * lNbComp		7610236	0		*			
ANR	7612863	PrimaryExpression	4		7610236	0					
ANR	7612864	Identifier	lNbComp		7610236	1					
ANR	7612865	PrimaryExpression	1		7610236	1					
ANR	7612866	PrimaryExpression	2.		7610236	1					
ANR	7612867	PrimaryExpression	0.5		7610236	1					
ANR	7612868	ExpressionStatement	lMctComp = lNbComp * lNbComp	1194:12:46950:46978	7610236	24	True				
ANR	7612869	AssignmentExpression	lMctComp = lNbComp * lNbComp		7610236	0		=			
ANR	7612870	Identifier	lMctComp		7610236	0					
ANR	7612871	MultiplicativeExpression	lNbComp * lNbComp		7610236	1		*			
ANR	7612872	Identifier	lNbComp		7610236	0					
ANR	7612873	Identifier	lNbComp		7610236	1					
ANR	7612874	ExpressionStatement	lTotalComp = lMctComp + lNbComp	1195:12:46992:47023	7610236	25	True				
ANR	7612875	AssignmentExpression	lTotalComp = lMctComp + lNbComp		7610236	0		=			
ANR	7612876	Identifier	lTotalComp		7610236	0					
ANR	7612877	AdditiveExpression	lMctComp + lNbComp		7610236	1		+			
ANR	7612878	Identifier	lMctComp		7610236	0					
ANR	7612879	Identifier	lNbComp		7610236	1					
ANR	7612880	ExpressionStatement	lSpace = ( float * ) malloc ( ( size_t ) lTotalComp * sizeof ( float ) )	1196:12:47037:47098	7610236	26	True				
ANR	7612881	AssignmentExpression	lSpace = ( float * ) malloc ( ( size_t ) lTotalComp * sizeof ( float ) )		7610236	0		=			
ANR	7612882	Identifier	lSpace		7610236	0					
ANR	7612883	CastExpression	( float * ) malloc ( ( size_t ) lTotalComp * sizeof ( float ) )		7610236	1					
ANR	7612884	CastTarget	float *		7610236	0					
ANR	7612885	CallExpression	malloc ( ( size_t ) lTotalComp * sizeof ( float ) )		7610236	1					
ANR	7612886	Callee	malloc		7610236	0					
ANR	7612887	Identifier	malloc		7610236	0					
ANR	7612888	ArgumentList	( size_t ) lTotalComp * sizeof ( float )		7610236	1					
ANR	7612889	Argument	( size_t ) lTotalComp * sizeof ( float )		7610236	0					
ANR	7612890	MultiplicativeExpression	( size_t ) lTotalComp * sizeof ( float )		7610236	0		*			
ANR	7612891	CastExpression	( size_t ) lTotalComp		7610236	0					
ANR	7612892	CastTarget	size_t		7610236	0					
ANR	7612893	Identifier	lTotalComp		7610236	1					
ANR	7612894	SizeofExpression	sizeof ( float )		7610236	1					
ANR	7612895	Sizeof	sizeof		7610236	0					
ANR	7612896	SizeofOperand	float		7610236	1					
ANR	7612897	IfStatement	if ( lSpace == NULL )		7610236	27					
ANR	7612898	Condition	lSpace == NULL	1197:16:47116:47129	7610236	0	True				
ANR	7612899	EqualityExpression	lSpace == NULL		7610236	0		==			
ANR	7612900	Identifier	lSpace		7610236	0					
ANR	7612901	Identifier	NULL		7610236	1					
ANR	7612902	CompoundStatement		626:32:22102:22102	7610236	1					
ANR	7612903	ExpressionStatement	free ( lMatrix )	1198:16:47150:47163	7610236	0	True				
ANR	7612904	CallExpression	free ( lMatrix )		7610236	0					
ANR	7612905	Callee	free		7610236	0					
ANR	7612906	Identifier	free		7610236	0					
ANR	7612907	ArgumentList	lMatrix		7610236	1					
ANR	7612908	Argument	lMatrix		7610236	0					
ANR	7612909	Identifier	lMatrix		7610236	0					
ANR	7612910	ReturnStatement	return 1 ;	1199:16:47181:47189	7610236	1	True				
ANR	7612911	PrimaryExpression	1		7610236	0					
ANR	7612912	ExpressionStatement	lCurrentDoublePtr = lSpace	1201:12:47217:47243	7610236	28	True				
ANR	7612913	AssignmentExpression	lCurrentDoublePtr = lSpace		7610236	0		=			
ANR	7612914	Identifier	lCurrentDoublePtr		7610236	0					
ANR	7612915	Identifier	lSpace		7610236	1					
ANR	7612916	ForStatement	for ( i2 = 0 ; i2 < lMctComp ; ++ i2 )		7610236	29					
ANR	7612917	ForInit	i2 = 0 ;	1202:17:47262:47268	7610236	0	True				
ANR	7612918	AssignmentExpression	i2 = 0		7610236	0		=			
ANR	7612919	Identifier	i2		7610236	0					
ANR	7612920	PrimaryExpression	0		7610236	1					
ANR	7612921	Condition	i2 < lMctComp	1202:25:47270:47282	7610236	1	True				
ANR	7612922	RelationalExpression	i2 < lMctComp		7610236	0		<			
ANR	7612923	Identifier	i2		7610236	0					
ANR	7612924	Identifier	lMctComp		7610236	1					
ANR	7612925	UnaryExpression	++ i2	1202:40:47285:47288	7610236	2	True				
ANR	7612926	IncDec	++		7610236	0					
ANR	7612927	Identifier	i2		7610236	1					
ANR	7612928	CompoundStatement		631:46:22261:22261	7610236	3					
ANR	7612929	ExpressionStatement	lStrLen = strlen ( lCurrentPtr ) + 1	1203:16:47309:47342	7610236	0	True				
ANR	7612930	AssignmentExpression	lStrLen = strlen ( lCurrentPtr ) + 1		7610236	0		=			
ANR	7612931	Identifier	lStrLen		7610236	0					
ANR	7612932	AdditiveExpression	strlen ( lCurrentPtr ) + 1		7610236	1		+			
ANR	7612933	CallExpression	strlen ( lCurrentPtr )		7610236	0					
ANR	7612934	Callee	strlen		7610236	0					
ANR	7612935	Identifier	strlen		7610236	0					
ANR	7612936	ArgumentList	lCurrentPtr		7610236	1					
ANR	7612937	Argument	lCurrentPtr		7610236	0					
ANR	7612938	Identifier	lCurrentPtr		7610236	0					
ANR	7612939	PrimaryExpression	1		7610236	1					
ANR	7612940	ExpressionStatement	* lCurrentDoublePtr ++ = ( float ) atof ( lCurrentPtr )	1204:16:47360:47408	7610236	1	True				
ANR	7612941	AssignmentExpression	* lCurrentDoublePtr ++ = ( float ) atof ( lCurrentPtr )		7610236	0		=			
ANR	7612942	UnaryOperationExpression	* lCurrentDoublePtr ++		7610236	0					
ANR	7612943	UnaryOperator	*		7610236	0					
ANR	7612944	PostIncDecOperationExpression	lCurrentDoublePtr ++		7610236	1					
ANR	7612945	Identifier	lCurrentDoublePtr		7610236	0					
ANR	7612946	IncDec	++		7610236	1					
ANR	7612947	CastExpression	( float ) atof ( lCurrentPtr )		7610236	1					
ANR	7612948	CastTarget	float		7610236	0					
ANR	7612949	CallExpression	atof ( lCurrentPtr )		7610236	1					
ANR	7612950	Callee	atof		7610236	0					
ANR	7612951	Identifier	atof		7610236	0					
ANR	7612952	ArgumentList	lCurrentPtr		7610236	1					
ANR	7612953	Argument	lCurrentPtr		7610236	0					
ANR	7612954	Identifier	lCurrentPtr		7610236	0					
ANR	7612955	ExpressionStatement	lCurrentPtr += lStrLen	1205:16:47426:47448	7610236	2	True				
ANR	7612956	AssignmentExpression	lCurrentPtr += lStrLen		7610236	0		+=			
ANR	7612957	Identifier	lCurrentPtr		7610236	0					
ANR	7612958	Identifier	lStrLen		7610236	1					
ANR	7612959	ExpressionStatement	l_int_ptr = ( int * ) lCurrentDoublePtr	1208:12:47477:47513	7610236	30	True				
ANR	7612960	AssignmentExpression	l_int_ptr = ( int * ) lCurrentDoublePtr		7610236	0		=			
ANR	7612961	Identifier	l_int_ptr		7610236	0					
ANR	7612962	CastExpression	( int * ) lCurrentDoublePtr		7610236	1					
ANR	7612963	CastTarget	int *		7610236	0					
ANR	7612964	Identifier	lCurrentDoublePtr		7610236	1					
ANR	7612965	ForStatement	for ( i2 = 0 ; i2 < lNbComp ; ++ i2 )		7610236	31					
ANR	7612966	ForInit	i2 = 0 ;	1209:17:47532:47538	7610236	0	True				
ANR	7612967	AssignmentExpression	i2 = 0		7610236	0		=			
ANR	7612968	Identifier	i2		7610236	0					
ANR	7612969	PrimaryExpression	0		7610236	1					
ANR	7612970	Condition	i2 < lNbComp	1209:25:47540:47551	7610236	1	True				
ANR	7612971	RelationalExpression	i2 < lNbComp		7610236	0		<			
ANR	7612972	Identifier	i2		7610236	0					
ANR	7612973	Identifier	lNbComp		7610236	1					
ANR	7612974	UnaryExpression	++ i2	1209:39:47554:47557	7610236	2	True				
ANR	7612975	IncDec	++		7610236	0					
ANR	7612976	Identifier	i2		7610236	1					
ANR	7612977	CompoundStatement		638:45:22530:22530	7610236	3					
ANR	7612978	ExpressionStatement	lStrLen = strlen ( lCurrentPtr ) + 1	1210:16:47578:47611	7610236	0	True				
ANR	7612979	AssignmentExpression	lStrLen = strlen ( lCurrentPtr ) + 1		7610236	0		=			
ANR	7612980	Identifier	lStrLen		7610236	0					
ANR	7612981	AdditiveExpression	strlen ( lCurrentPtr ) + 1		7610236	1		+			
ANR	7612982	CallExpression	strlen ( lCurrentPtr )		7610236	0					
ANR	7612983	Callee	strlen		7610236	0					
ANR	7612984	Identifier	strlen		7610236	0					
ANR	7612985	ArgumentList	lCurrentPtr		7610236	1					
ANR	7612986	Argument	lCurrentPtr		7610236	0					
ANR	7612987	Identifier	lCurrentPtr		7610236	0					
ANR	7612988	PrimaryExpression	1		7610236	1					
ANR	7612989	ExpressionStatement	* l_int_ptr ++ = atoi ( lCurrentPtr )	1211:16:47629:47661	7610236	1	True				
ANR	7612990	AssignmentExpression	* l_int_ptr ++ = atoi ( lCurrentPtr )		7610236	0		=			
ANR	7612991	UnaryOperationExpression	* l_int_ptr ++		7610236	0					
ANR	7612992	UnaryOperator	*		7610236	0					
ANR	7612993	PostIncDecOperationExpression	l_int_ptr ++		7610236	1					
ANR	7612994	Identifier	l_int_ptr		7610236	0					
ANR	7612995	IncDec	++		7610236	1					
ANR	7612996	CallExpression	atoi ( lCurrentPtr )		7610236	1					
ANR	7612997	Callee	atoi		7610236	0					
ANR	7612998	Identifier	atoi		7610236	0					
ANR	7612999	ArgumentList	lCurrentPtr		7610236	1					
ANR	7613000	Argument	lCurrentPtr		7610236	0					
ANR	7613001	Identifier	lCurrentPtr		7610236	0					
ANR	7613002	ExpressionStatement	lCurrentPtr += lStrLen	1212:16:47679:47701	7610236	2	True				
ANR	7613003	AssignmentExpression	lCurrentPtr += lStrLen		7610236	0		+=			
ANR	7613004	Identifier	lCurrentPtr		7610236	0					
ANR	7613005	Identifier	lStrLen		7610236	1					
ANR	7613006	ExpressionStatement	"opj_set_MCT ( parameters , lSpace , ( int * ) ( lSpace + lMctComp ) , ( OPJ_UINT32 ) lNbComp )"	1216:12:47774:47878	7610236	32	True				
ANR	7613007	CallExpression	"opj_set_MCT ( parameters , lSpace , ( int * ) ( lSpace + lMctComp ) , ( OPJ_UINT32 ) lNbComp )"		7610236	0					
ANR	7613008	Callee	opj_set_MCT		7610236	0					
ANR	7613009	Identifier	opj_set_MCT		7610236	0					
ANR	7613010	ArgumentList	parameters		7610236	1					
ANR	7613011	Argument	parameters		7610236	0					
ANR	7613012	Identifier	parameters		7610236	0					
ANR	7613013	Argument	lSpace		7610236	1					
ANR	7613014	Identifier	lSpace		7610236	0					
ANR	7613015	Argument	( int * ) ( lSpace + lMctComp )		7610236	2					
ANR	7613016	CastExpression	( int * ) ( lSpace + lMctComp )		7610236	0					
ANR	7613017	CastTarget	int *		7610236	0					
ANR	7613018	AdditiveExpression	lSpace + lMctComp		7610236	1		+			
ANR	7613019	Identifier	lSpace		7610236	0					
ANR	7613020	Identifier	lMctComp		7610236	1					
ANR	7613021	Argument	( OPJ_UINT32 ) lNbComp		7610236	3					
ANR	7613022	CastExpression	( OPJ_UINT32 ) lNbComp		7610236	0					
ANR	7613023	CastTarget	OPJ_UINT32		7610236	0					
ANR	7613024	Identifier	lNbComp		7610236	1					
ANR	7613025	ExpressionStatement	free ( lSpace )	1220:12:47922:47934	7610236	33	True				
ANR	7613026	CallExpression	free ( lSpace )		7610236	0					
ANR	7613027	Callee	free		7610236	0					
ANR	7613028	Identifier	free		7610236	0					
ANR	7613029	ArgumentList	lSpace		7610236	1					
ANR	7613030	Argument	lSpace		7610236	0					
ANR	7613031	Identifier	lSpace		7610236	0					
ANR	7613032	ExpressionStatement	free ( lMatrix )	1221:12:47948:47961	7610236	34	True				
ANR	7613033	CallExpression	free ( lMatrix )		7610236	0					
ANR	7613034	Callee	free		7610236	0					
ANR	7613035	Identifier	free		7610236	0					
ANR	7613036	ArgumentList	lMatrix		7610236	1					
ANR	7613037	Argument	lMatrix		7610236	0					
ANR	7613038	Identifier	lMatrix		7610236	0					
ANR	7613039	BreakStatement	break ;	1223:8:47981:47986	7610236	89	True				
ANR	7613040	Label	case 'W' :	1232:8:48184:48192	7610236	90	True				
ANR	7613041	CompoundStatement		663:12:23254:23295	7610236	91					
ANR	7613042	IdentifierDeclStatement	char * token = NULL ;	1233:12:48252:48270	7610236	0	True				
ANR	7613043	IdentifierDecl	* token = NULL		7610236	0					
ANR	7613044	IdentifierDeclType	char *		7610236	0					
ANR	7613045	Identifier	token		7610236	1					
ANR	7613046	AssignmentExpression	* token = NULL		7610236	2		=			
ANR	7613047	Identifier	NULL		7610236	0					
ANR	7613048	Identifier	NULL		7610236	1					
ANR	7613049	IdentifierDeclStatement	"int hprot , pprot , sens , addr , size , range ;"	1234:12:48284:48325	7610236	1	True				
ANR	7613050	IdentifierDecl	hprot		7610236	0					
ANR	7613051	IdentifierDeclType	int		7610236	0					
ANR	7613052	Identifier	hprot		7610236	1					
ANR	7613053	IdentifierDecl	pprot		7610236	1					
ANR	7613054	IdentifierDeclType	int		7610236	0					
ANR	7613055	Identifier	pprot		7610236	1					
ANR	7613056	IdentifierDecl	sens		7610236	2					
ANR	7613057	IdentifierDeclType	int		7610236	0					
ANR	7613058	Identifier	sens		7610236	1					
ANR	7613059	IdentifierDecl	addr		7610236	3					
ANR	7613060	IdentifierDeclType	int		7610236	0					
ANR	7613061	Identifier	addr		7610236	1					
ANR	7613062	IdentifierDecl	size		7610236	4					
ANR	7613063	IdentifierDeclType	int		7610236	0					
ANR	7613064	Identifier	size		7610236	1					
ANR	7613065	IdentifierDecl	range		7610236	5					
ANR	7613066	IdentifierDeclType	int		7610236	0					
ANR	7613067	Identifier	range		7610236	1					
ANR	7613068	IfStatement	if ( ! indexfilename || ! * indexfilename )		7610236	2					
ANR	7613069	Condition	! indexfilename || ! * indexfilename	1237:16:48389:48421	7610236	0	True				
ANR	7613070	OrExpression	! indexfilename || ! * indexfilename		7610236	0		||			
ANR	7613071	UnaryOperationExpression	! indexfilename		7610236	0					
ANR	7613072	UnaryOperator	!		7610236	0					
ANR	7613073	Identifier	indexfilename		7610236	1					
ANR	7613074	UnaryOperationExpression	! * indexfilename		7610236	1					
ANR	7613075	UnaryOperator	!		7610236	0					
ANR	7613076	UnaryOperationExpression	* indexfilename		7610236	1					
ANR	7613077	UnaryOperator	*		7610236	0					
ANR	7613078	Identifier	indexfilename		7610236	1					
ANR	7613079	CompoundStatement		666:51:23394:23394	7610236	1					
ANR	7613080	IfStatement	"if ( opj_strcpy_s ( indexfilename , indexfilename_size , JPWL_PRIVATEINDEX_NAME ) != 0 )"		7610236	0					
ANR	7613081	Condition	"opj_strcpy_s ( indexfilename , indexfilename_size , JPWL_PRIVATEINDEX_NAME ) != 0"	1238:20:48446:48554	7610236	0	True				
ANR	7613082	EqualityExpression	"opj_strcpy_s ( indexfilename , indexfilename_size , JPWL_PRIVATEINDEX_NAME ) != 0"		7610236	0		!=			
ANR	7613083	CallExpression	"opj_strcpy_s ( indexfilename , indexfilename_size , JPWL_PRIVATEINDEX_NAME )"		7610236	0					
ANR	7613084	Callee	opj_strcpy_s		7610236	0					
ANR	7613085	Identifier	opj_strcpy_s		7610236	0					
ANR	7613086	ArgumentList	indexfilename		7610236	1					
ANR	7613087	Argument	indexfilename		7610236	0					
ANR	7613088	Identifier	indexfilename		7610236	0					
ANR	7613089	Argument	indexfilename_size		7610236	1					
ANR	7613090	Identifier	indexfilename_size		7610236	0					
ANR	7613091	Argument	JPWL_PRIVATEINDEX_NAME		7610236	2					
ANR	7613092	Identifier	JPWL_PRIVATEINDEX_NAME		7610236	0					
ANR	7613093	PrimaryExpression	0		7610236	1					
ANR	7613094	CompoundStatement		668:63:23527:23527	7610236	1					
ANR	7613095	ReturnStatement	return 1 ;	1240:20:48579:48587	7610236	0	True				
ANR	7613096	PrimaryExpression	1		7610236	0					
ANR	7613097	ExpressionStatement	"token = strtok ( opj_optarg , "","" )"	1247:12:48765:48796	7610236	3	True				
ANR	7613098	AssignmentExpression	"token = strtok ( opj_optarg , "","" )"		7610236	0		=			
ANR	7613099	Identifier	token		7610236	0					
ANR	7613100	CallExpression	"strtok ( opj_optarg , "","" )"		7610236	1					
ANR	7613101	Callee	strtok		7610236	0					
ANR	7613102	Identifier	strtok		7610236	0					
ANR	7613103	ArgumentList	opj_optarg		7610236	1					
ANR	7613104	Argument	opj_optarg		7610236	0					
ANR	7613105	Identifier	opj_optarg		7610236	0					
ANR	7613106	Argument	""","""		7610236	1					
ANR	7613107	PrimaryExpression	""","""		7610236	0					
ANR	7613108	WhileStatement	while ( token != NULL )		7610236	4					
ANR	7613109	Condition	token != NULL	1248:19:48817:48829	7610236	0	True				
ANR	7613110	EqualityExpression	token != NULL		7610236	0		!=			
ANR	7613111	Identifier	token		7610236	0					
ANR	7613112	Identifier	NULL		7610236	1					
ANR	7613113	CompoundStatement		677:34:23802:23802	7610236	1					
ANR	7613114	IfStatement	if ( * token == 'h' )		7610236	0					
ANR	7613115	Condition	* token == 'h'	1251:20:48915:48927	7610236	0	True				
ANR	7613116	EqualityExpression	* token == 'h'		7610236	0		==			
ANR	7613117	UnaryOperationExpression	* token		7610236	0					
ANR	7613118	UnaryOperator	*		7610236	0					
ANR	7613119	Identifier	token		7610236	1					
ANR	7613120	PrimaryExpression	'h'		7610236	1					
ANR	7613121	CompoundStatement		682:27:23930:23972	7610236	1					
ANR	7613122	Statement	static	1253:20:48953:48958	7610236	0	True				
ANR	7613123	IdentifierDeclStatement	"int tile = 0 , tilespec = 0 , lasttileno = 0 ;"	1253:27:48960:49002	7610236	1	True				
ANR	7613124	IdentifierDecl	tile = 0		7610236	0					
ANR	7613125	IdentifierDeclType	int		7610236	0					
ANR	7613126	Identifier	tile		7610236	1					
ANR	7613127	AssignmentExpression	tile = 0		7610236	2		=			
ANR	7613128	Identifier	tile		7610236	0					
ANR	7613129	PrimaryExpression	0		7610236	1					
ANR	7613130	IdentifierDecl	tilespec = 0		7610236	1					
ANR	7613131	IdentifierDeclType	int		7610236	0					
ANR	7613132	Identifier	tilespec		7610236	1					
ANR	7613133	AssignmentExpression	tilespec = 0		7610236	2		=			
ANR	7613134	Identifier	tilespec		7610236	0					
ANR	7613135	PrimaryExpression	0		7610236	1					
ANR	7613136	IdentifierDecl	lasttileno = 0		7610236	2					
ANR	7613137	IdentifierDeclType	int		7610236	0					
ANR	7613138	Identifier	lasttileno		7610236	1					
ANR	7613139	AssignmentExpression	lasttileno = 0		7610236	2		=			
ANR	7613140	Identifier	lasttileno		7610236	0					
ANR	7613141	PrimaryExpression	0		7610236	1					
ANR	7613142	ExpressionStatement	hprot = 1	1255:20:49025:49034	7610236	2	True				
ANR	7613143	AssignmentExpression	hprot = 1		7610236	0		=			
ANR	7613144	Identifier	hprot		7610236	0					
ANR	7613145	PrimaryExpression	1		7610236	1					
ANR	7613146	IfStatement	"if ( sscanf ( token , ""h=%d"" , & hprot ) == 1 )"		7610236	3					
ANR	7613147	Condition	"sscanf ( token , ""h=%d"" , & hprot ) == 1"	1257:24:49085:49118	7610236	0	True				
ANR	7613148	EqualityExpression	"sscanf ( token , ""h=%d"" , & hprot ) == 1"		7610236	0		==			
ANR	7613149	CallExpression	"sscanf ( token , ""h=%d"" , & hprot )"		7610236	0					
ANR	7613150	Callee	sscanf		7610236	0					
ANR	7613151	Identifier	sscanf		7610236	0					
ANR	7613152	ArgumentList	token		7610236	1					
ANR	7613153	Argument	token		7610236	0					
ANR	7613154	Identifier	token		7610236	0					
ANR	7613155	Argument	"""h=%d"""		7610236	1					
ANR	7613156	PrimaryExpression	"""h=%d"""		7610236	0					
ANR	7613157	Argument	& hprot		7610236	2					
ANR	7613158	UnaryOperationExpression	& hprot		7610236	0					
ANR	7613159	UnaryOperator	&		7610236	0					
ANR	7613160	Identifier	hprot		7610236	1					
ANR	7613161	PrimaryExpression	1		7610236	1					
ANR	7613162	CompoundStatement		686:60:24091:24091	7610236	1					
ANR	7613163	IfStatement	if ( ! ( ( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) ) ) )		7610236	0					
ANR	7613164	Condition	! ( ( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) ) )	1259:28:49204:49337	7610236	0	True				
ANR	7613165	UnaryOperationExpression	! ( ( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) ) )		7610236	0					
ANR	7613166	UnaryOperator	!		7610236	0					
ANR	7613167	OrExpression	( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613168	EqualityExpression	hprot == 0		7610236	0		==			
ANR	7613169	Identifier	hprot		7610236	0					
ANR	7613170	PrimaryExpression	0		7610236	1					
ANR	7613171	OrExpression	( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613172	EqualityExpression	hprot == 1		7610236	0		==			
ANR	7613173	Identifier	hprot		7610236	0					
ANR	7613174	PrimaryExpression	1		7610236	1					
ANR	7613175	OrExpression	( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613176	EqualityExpression	hprot == 16		7610236	0		==			
ANR	7613177	Identifier	hprot		7610236	0					
ANR	7613178	PrimaryExpression	16		7610236	1					
ANR	7613179	OrExpression	( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613180	EqualityExpression	hprot == 32		7610236	0		==			
ANR	7613181	Identifier	hprot		7610236	0					
ANR	7613182	PrimaryExpression	32		7610236	1					
ANR	7613183	AndExpression	( hprot >= 37 ) && ( hprot <= 128 )		7610236	1		&&			
ANR	7613184	RelationalExpression	hprot >= 37		7610236	0		>=			
ANR	7613185	Identifier	hprot		7610236	0					
ANR	7613186	PrimaryExpression	37		7610236	1					
ANR	7613187	RelationalExpression	hprot <= 128		7610236	1		<=			
ANR	7613188	Identifier	hprot		7610236	0					
ANR	7613189	PrimaryExpression	128		7610236	1					
ANR	7613190	CompoundStatement		689:68:24310:24310	7610236	1					
ANR	7613191	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid main header protection method h = %d\\n"" , hprot )"	1261:28:49370:49487	7610236	0	True				
ANR	7613192	CallExpression	"fprintf ( stderr , ""ERROR -> invalid main header protection method h = %d\\n"" , hprot )"		7610236	0					
ANR	7613193	Callee	fprintf		7610236	0					
ANR	7613194	Identifier	fprintf		7610236	0					
ANR	7613195	ArgumentList	stderr		7610236	1					
ANR	7613196	Argument	stderr		7610236	0					
ANR	7613197	Identifier	stderr		7610236	0					
ANR	7613198	Argument	"""ERROR -> invalid main header protection method h = %d\\n"""		7610236	1					
ANR	7613199	PrimaryExpression	"""ERROR -> invalid main header protection method h = %d\\n"""		7610236	0					
ANR	7613200	Argument	hprot		7610236	2					
ANR	7613201	Identifier	hprot		7610236	0					
ANR	7613202	ReturnStatement	return 1 ;	1263:28:49517:49525	7610236	1	True				
ANR	7613203	PrimaryExpression	1		7610236	0					
ANR	7613204	ExpressionStatement	parameters -> jpwl_hprot_MH = hprot	1265:24:49577:49610	7610236	1	True				
ANR	7613205	AssignmentExpression	parameters -> jpwl_hprot_MH = hprot		7610236	0		=			
ANR	7613206	PtrMemberAccess	parameters -> jpwl_hprot_MH		7610236	0					
ANR	7613207	Identifier	parameters		7610236	0					
ANR	7613208	Identifier	jpwl_hprot_MH		7610236	1					
ANR	7613209	Identifier	hprot		7610236	1					
ANR	7613210	ElseStatement	else		7610236	0					
ANR	7613211	IfStatement	"if ( sscanf ( token , ""h%d=%d"" , & tile , & hprot ) == 2 )"		7610236	0					
ANR	7613212	Condition	"sscanf ( token , ""h%d=%d"" , & tile , & hprot ) == 2"	1267:31:49644:49686	7610236	0	True				
ANR	7613213	EqualityExpression	"sscanf ( token , ""h%d=%d"" , & tile , & hprot ) == 2"		7610236	0		==			
ANR	7613214	CallExpression	"sscanf ( token , ""h%d=%d"" , & tile , & hprot )"		7610236	0					
ANR	7613215	Callee	sscanf		7610236	0					
ANR	7613216	Identifier	sscanf		7610236	0					
ANR	7613217	ArgumentList	token		7610236	1					
ANR	7613218	Argument	token		7610236	0					
ANR	7613219	Identifier	token		7610236	0					
ANR	7613220	Argument	"""h%d=%d"""		7610236	1					
ANR	7613221	PrimaryExpression	"""h%d=%d"""		7610236	0					
ANR	7613222	Argument	& tile		7610236	2					
ANR	7613223	UnaryOperationExpression	& tile		7610236	0					
ANR	7613224	UnaryOperator	&		7610236	0					
ANR	7613225	Identifier	tile		7610236	1					
ANR	7613226	Argument	& hprot		7610236	3					
ANR	7613227	UnaryOperationExpression	& hprot		7610236	0					
ANR	7613228	UnaryOperator	&		7610236	0					
ANR	7613229	Identifier	hprot		7610236	1					
ANR	7613230	PrimaryExpression	2		7610236	1					
ANR	7613231	CompoundStatement		696:76:24659:24659	7610236	1					
ANR	7613232	IfStatement	if ( ! ( ( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) ) ) )		7610236	0					
ANR	7613233	Condition	! ( ( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) ) )	1269:28:49777:49910	7610236	0	True				
ANR	7613234	UnaryOperationExpression	! ( ( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) ) )		7610236	0					
ANR	7613235	UnaryOperator	!		7610236	0					
ANR	7613236	OrExpression	( hprot == 0 ) || ( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613237	EqualityExpression	hprot == 0		7610236	0		==			
ANR	7613238	Identifier	hprot		7610236	0					
ANR	7613239	PrimaryExpression	0		7610236	1					
ANR	7613240	OrExpression	( hprot == 1 ) || ( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613241	EqualityExpression	hprot == 1		7610236	0		==			
ANR	7613242	Identifier	hprot		7610236	0					
ANR	7613243	PrimaryExpression	1		7610236	1					
ANR	7613244	OrExpression	( hprot == 16 ) || ( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613245	EqualityExpression	hprot == 16		7610236	0		==			
ANR	7613246	Identifier	hprot		7610236	0					
ANR	7613247	PrimaryExpression	16		7610236	1					
ANR	7613248	OrExpression	( hprot == 32 ) || ( ( hprot >= 37 ) && ( hprot <= 128 ) )		7610236	1		||			
ANR	7613249	EqualityExpression	hprot == 32		7610236	0		==			
ANR	7613250	Identifier	hprot		7610236	0					
ANR	7613251	PrimaryExpression	32		7610236	1					
ANR	7613252	AndExpression	( hprot >= 37 ) && ( hprot <= 128 )		7610236	1		&&			
ANR	7613253	RelationalExpression	hprot >= 37		7610236	0		>=			
ANR	7613254	Identifier	hprot		7610236	0					
ANR	7613255	PrimaryExpression	37		7610236	1					
ANR	7613256	RelationalExpression	hprot <= 128		7610236	1		<=			
ANR	7613257	Identifier	hprot		7610236	0					
ANR	7613258	PrimaryExpression	128		7610236	1					
ANR	7613259	CompoundStatement		699:68:24883:24883	7610236	1					
ANR	7613260	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part header protection method h = %d\\n"" , hprot )"	1271:28:49943:50065	7610236	0	True				
ANR	7613261	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part header protection method h = %d\\n"" , hprot )"		7610236	0					
ANR	7613262	Callee	fprintf		7610236	0					
ANR	7613263	Identifier	fprintf		7610236	0					
ANR	7613264	ArgumentList	stderr		7610236	1					
ANR	7613265	Argument	stderr		7610236	0					
ANR	7613266	Identifier	stderr		7610236	0					
ANR	7613267	Argument	"""ERROR -> invalid tile part header protection method h = %d\\n"""		7610236	1					
ANR	7613268	PrimaryExpression	"""ERROR -> invalid tile part header protection method h = %d\\n"""		7610236	0					
ANR	7613269	Argument	hprot		7610236	2					
ANR	7613270	Identifier	hprot		7610236	0					
ANR	7613271	ReturnStatement	return 1 ;	1273:28:50095:50103	7610236	1	True				
ANR	7613272	PrimaryExpression	1		7610236	0					
ANR	7613273	IfStatement	if ( tile < 0 )		7610236	1					
ANR	7613274	Condition	tile < 0	1275:28:50159:50166	7610236	0	True				
ANR	7613275	RelationalExpression	tile < 0		7610236	0		<			
ANR	7613276	Identifier	tile		7610236	0					
ANR	7613277	PrimaryExpression	0		7610236	1					
ANR	7613278	CompoundStatement		704:38:25139:25139	7610236	1					
ANR	7613279	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method t = %d\\n"" , tile )"	1276:28:50199:50323	7610236	0	True				
ANR	7613280	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method t = %d\\n"" , tile )"		7610236	0					
ANR	7613281	Callee	fprintf		7610236	0					
ANR	7613282	Identifier	fprintf		7610236	0					
ANR	7613283	ArgumentList	stderr		7610236	1					
ANR	7613284	Argument	stderr		7610236	0					
ANR	7613285	Identifier	stderr		7610236	0					
ANR	7613286	Argument	"""ERROR -> invalid tile part number on protection method t = %d\\n"""		7610236	1					
ANR	7613287	PrimaryExpression	"""ERROR -> invalid tile part number on protection method t = %d\\n"""		7610236	0					
ANR	7613288	Argument	tile		7610236	2					
ANR	7613289	Identifier	tile		7610236	0					
ANR	7613290	ReturnStatement	return 1 ;	1278:28:50353:50361	7610236	1	True				
ANR	7613291	PrimaryExpression	1		7610236	0					
ANR	7613292	IfStatement	if ( tilespec < JPWL_MAX_NO_TILESPECS )		7610236	2					
ANR	7613293	Condition	tilespec < JPWL_MAX_NO_TILESPECS	1280:28:50417:50448	7610236	0	True				
ANR	7613294	RelationalExpression	tilespec < JPWL_MAX_NO_TILESPECS		7610236	0		<			
ANR	7613295	Identifier	tilespec		7610236	0					
ANR	7613296	Identifier	JPWL_MAX_NO_TILESPECS		7610236	1					
ANR	7613297	CompoundStatement		709:62:25421:25421	7610236	1					
ANR	7613298	ExpressionStatement	parameters -> jpwl_hprot_TPH_tileno [ tilespec ] = lasttileno = tile	1281:28:50481:50544	7610236	0	True				
ANR	7613299	AssignmentExpression	parameters -> jpwl_hprot_TPH_tileno [ tilespec ] = lasttileno = tile		7610236	0		=			
ANR	7613300	ArrayIndexing	parameters -> jpwl_hprot_TPH_tileno [ tilespec ]		7610236	0					
ANR	7613301	PtrMemberAccess	parameters -> jpwl_hprot_TPH_tileno		7610236	0					
ANR	7613302	Identifier	parameters		7610236	0					
ANR	7613303	Identifier	jpwl_hprot_TPH_tileno		7610236	1					
ANR	7613304	Identifier	tilespec		7610236	1					
ANR	7613305	AssignmentExpression	lasttileno = tile		7610236	1		=			
ANR	7613306	Identifier	lasttileno		7610236	0					
ANR	7613307	Identifier	tile		7610236	1					
ANR	7613308	ExpressionStatement	parameters -> jpwl_hprot_TPH [ tilespec ++ ] = hprot	1282:28:50574:50620	7610236	1	True				
ANR	7613309	AssignmentExpression	parameters -> jpwl_hprot_TPH [ tilespec ++ ] = hprot		7610236	0		=			
ANR	7613310	ArrayIndexing	parameters -> jpwl_hprot_TPH [ tilespec ++ ]		7610236	0					
ANR	7613311	PtrMemberAccess	parameters -> jpwl_hprot_TPH		7610236	0					
ANR	7613312	Identifier	parameters		7610236	0					
ANR	7613313	Identifier	jpwl_hprot_TPH		7610236	1					
ANR	7613314	PostIncDecOperationExpression	tilespec ++		7610236	1					
ANR	7613315	Identifier	tilespec		7610236	0					
ANR	7613316	IncDec	++		7610236	1					
ANR	7613317	Identifier	hprot		7610236	1					
ANR	7613318	ElseStatement	else		7610236	0					
ANR	7613319	IfStatement	"if ( sscanf ( token , ""h%d"" , & tile ) == 1 )"		7610236	0					
ANR	7613320	Condition	"sscanf ( token , ""h%d"" , & tile ) == 1"	1285:31:50680:50711	7610236	0	True				
ANR	7613321	EqualityExpression	"sscanf ( token , ""h%d"" , & tile ) == 1"		7610236	0		==			
ANR	7613322	CallExpression	"sscanf ( token , ""h%d"" , & tile )"		7610236	0					
ANR	7613323	Callee	sscanf		7610236	0					
ANR	7613324	Identifier	sscanf		7610236	0					
ANR	7613325	ArgumentList	token		7610236	1					
ANR	7613326	Argument	token		7610236	0					
ANR	7613327	Identifier	token		7610236	0					
ANR	7613328	Argument	"""h%d"""		7610236	1					
ANR	7613329	PrimaryExpression	"""h%d"""		7610236	0					
ANR	7613330	Argument	& tile		7610236	2					
ANR	7613331	UnaryOperationExpression	& tile		7610236	0					
ANR	7613332	UnaryOperator	&		7610236	0					
ANR	7613333	Identifier	tile		7610236	1					
ANR	7613334	PrimaryExpression	1		7610236	1					
ANR	7613335	CompoundStatement		714:65:25684:25684	7610236	1					
ANR	7613336	IfStatement	if ( tile < 0 )		7610236	0					
ANR	7613337	Condition	tile < 0	1287:28:50804:50811	7610236	0	True				
ANR	7613338	RelationalExpression	tile < 0		7610236	0		<			
ANR	7613339	Identifier	tile		7610236	0					
ANR	7613340	PrimaryExpression	0		7610236	1					
ANR	7613341	CompoundStatement		716:38:25784:25784	7610236	1					
ANR	7613342	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method t = %d\\n"" , tile )"	1288:28:50844:50968	7610236	0	True				
ANR	7613343	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method t = %d\\n"" , tile )"		7610236	0					
ANR	7613344	Callee	fprintf		7610236	0					
ANR	7613345	Identifier	fprintf		7610236	0					
ANR	7613346	ArgumentList	stderr		7610236	1					
ANR	7613347	Argument	stderr		7610236	0					
ANR	7613348	Identifier	stderr		7610236	0					
ANR	7613349	Argument	"""ERROR -> invalid tile part number on protection method t = %d\\n"""		7610236	1					
ANR	7613350	PrimaryExpression	"""ERROR -> invalid tile part number on protection method t = %d\\n"""		7610236	0					
ANR	7613351	Argument	tile		7610236	2					
ANR	7613352	Identifier	tile		7610236	0					
ANR	7613353	ReturnStatement	return 1 ;	1290:28:50998:51006	7610236	1	True				
ANR	7613354	PrimaryExpression	1		7610236	0					
ANR	7613355	IfStatement	if ( tilespec < JPWL_MAX_NO_TILESPECS )		7610236	1					
ANR	7613356	Condition	tilespec < JPWL_MAX_NO_TILESPECS	1292:28:51062:51093	7610236	0	True				
ANR	7613357	RelationalExpression	tilespec < JPWL_MAX_NO_TILESPECS		7610236	0		<			
ANR	7613358	Identifier	tilespec		7610236	0					
ANR	7613359	Identifier	JPWL_MAX_NO_TILESPECS		7610236	1					
ANR	7613360	CompoundStatement		721:62:26066:26066	7610236	1					
ANR	7613361	ExpressionStatement	parameters -> jpwl_hprot_TPH_tileno [ tilespec ] = lasttileno = tile	1293:28:51126:51189	7610236	0	True				
ANR	7613362	AssignmentExpression	parameters -> jpwl_hprot_TPH_tileno [ tilespec ] = lasttileno = tile		7610236	0		=			
ANR	7613363	ArrayIndexing	parameters -> jpwl_hprot_TPH_tileno [ tilespec ]		7610236	0					
ANR	7613364	PtrMemberAccess	parameters -> jpwl_hprot_TPH_tileno		7610236	0					
ANR	7613365	Identifier	parameters		7610236	0					
ANR	7613366	Identifier	jpwl_hprot_TPH_tileno		7610236	1					
ANR	7613367	Identifier	tilespec		7610236	1					
ANR	7613368	AssignmentExpression	lasttileno = tile		7610236	1		=			
ANR	7613369	Identifier	lasttileno		7610236	0					
ANR	7613370	Identifier	tile		7610236	1					
ANR	7613371	ExpressionStatement	parameters -> jpwl_hprot_TPH [ tilespec ++ ] = hprot	1294:28:51219:51265	7610236	1	True				
ANR	7613372	AssignmentExpression	parameters -> jpwl_hprot_TPH [ tilespec ++ ] = hprot		7610236	0		=			
ANR	7613373	ArrayIndexing	parameters -> jpwl_hprot_TPH [ tilespec ++ ]		7610236	0					
ANR	7613374	PtrMemberAccess	parameters -> jpwl_hprot_TPH		7610236	0					
ANR	7613375	Identifier	parameters		7610236	0					
ANR	7613376	Identifier	jpwl_hprot_TPH		7610236	1					
ANR	7613377	PostIncDecOperationExpression	tilespec ++		7610236	1					
ANR	7613378	Identifier	tilespec		7610236	0					
ANR	7613379	IncDec	++		7610236	1					
ANR	7613380	Identifier	hprot		7610236	1					
ANR	7613381	ElseStatement	else		7610236	0					
ANR	7613382	IfStatement	"if ( ! strcmp ( token , ""h"" ) )"		7610236	0					
ANR	7613383	Condition	"! strcmp ( token , ""h"" )"	1298:31:51326:51344	7610236	0	True				
ANR	7613384	UnaryOperationExpression	"! strcmp ( token , ""h"" )"		7610236	0					
ANR	7613385	UnaryOperator	!		7610236	0					
ANR	7613386	CallExpression	"strcmp ( token , ""h"" )"		7610236	1					
ANR	7613387	Callee	strcmp		7610236	0					
ANR	7613388	Identifier	strcmp		7610236	0					
ANR	7613389	ArgumentList	token		7610236	1					
ANR	7613390	Argument	token		7610236	0					
ANR	7613391	Identifier	token		7610236	0					
ANR	7613392	Argument	"""h"""		7610236	1					
ANR	7613393	PrimaryExpression	"""h"""		7610236	0					
ANR	7613394	CompoundStatement		727:52:26317:26317	7610236	1					
ANR	7613395	ExpressionStatement	parameters -> jpwl_hprot_MH = hprot	1300:24:51428:51461	7610236	0	True				
ANR	7613396	AssignmentExpression	parameters -> jpwl_hprot_MH = hprot		7610236	0		=			
ANR	7613397	PtrMemberAccess	parameters -> jpwl_hprot_MH		7610236	0					
ANR	7613398	Identifier	parameters		7610236	0					
ANR	7613399	Identifier	jpwl_hprot_MH		7610236	1					
ANR	7613400	Identifier	hprot		7610236	1					
ANR	7613401	ElseStatement	else		7610236	0					
ANR	7613402	CompoundStatement		731:27:26461:26461	7610236	0					
ANR	7613403	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid protection method selection = %s\\n"" , token )"	1303:24:51517:51594	7610236	0	True				
ANR	7613404	CallExpression	"fprintf ( stderr , ""ERROR -> invalid protection method selection = %s\\n"" , token )"		7610236	0					
ANR	7613405	Callee	fprintf		7610236	0					
ANR	7613406	Identifier	fprintf		7610236	0					
ANR	7613407	ArgumentList	stderr		7610236	1					
ANR	7613408	Argument	stderr		7610236	0					
ANR	7613409	Identifier	stderr		7610236	0					
ANR	7613410	Argument	"""ERROR -> invalid protection method selection = %s\\n"""		7610236	1					
ANR	7613411	PrimaryExpression	"""ERROR -> invalid protection method selection = %s\\n"""		7610236	0					
ANR	7613412	Argument	token		7610236	2					
ANR	7613413	Identifier	token		7610236	0					
ANR	7613414	ReturnStatement	return 1 ;	1304:24:51620:51628	7610236	1	True				
ANR	7613415	PrimaryExpression	1		7610236	0					
ANR	7613416	ExpressionStatement		1305:21:51651:51651	7610236	4	True				
ANR	7613417	IfStatement	if ( * token == 'p' )		7610236	1					
ANR	7613418	Condition	* token == 'p'	1310:20:51753:51765	7610236	0	True				
ANR	7613419	EqualityExpression	* token == 'p'		7610236	0		==			
ANR	7613420	UnaryOperationExpression	* token		7610236	0					
ANR	7613421	UnaryOperator	*		7610236	0					
ANR	7613422	Identifier	token		7610236	1					
ANR	7613423	PrimaryExpression	'p'		7610236	1					
ANR	7613424	CompoundStatement		741:27:26768:26804	7610236	1					
ANR	7613425	Statement	static	1312:20:51791:51796	7610236	0	True				
ANR	7613426	IdentifierDeclStatement	"int pack = 0 , tile = 0 , packspec = 0 ;"	1312:27:51798:51834	7610236	1	True				
ANR	7613427	IdentifierDecl	pack = 0		7610236	0					
ANR	7613428	IdentifierDeclType	int		7610236	0					
ANR	7613429	Identifier	pack		7610236	1					
ANR	7613430	AssignmentExpression	pack = 0		7610236	2		=			
ANR	7613431	Identifier	pack		7610236	0					
ANR	7613432	PrimaryExpression	0		7610236	1					
ANR	7613433	IdentifierDecl	tile = 0		7610236	1					
ANR	7613434	IdentifierDeclType	int		7610236	0					
ANR	7613435	Identifier	tile		7610236	1					
ANR	7613436	AssignmentExpression	tile = 0		7610236	2		=			
ANR	7613437	Identifier	tile		7610236	0					
ANR	7613438	PrimaryExpression	0		7610236	1					
ANR	7613439	IdentifierDecl	packspec = 0		7610236	2					
ANR	7613440	IdentifierDeclType	int		7610236	0					
ANR	7613441	Identifier	packspec		7610236	1					
ANR	7613442	AssignmentExpression	packspec = 0		7610236	2		=			
ANR	7613443	Identifier	packspec		7610236	0					
ANR	7613444	PrimaryExpression	0		7610236	1					
ANR	7613445	ExpressionStatement	pprot = 1	1314:20:51857:51866	7610236	2	True				
ANR	7613446	AssignmentExpression	pprot = 1		7610236	0		=			
ANR	7613447	Identifier	pprot		7610236	0					
ANR	7613448	PrimaryExpression	1		7610236	1					
ANR	7613449	IfStatement	"if ( sscanf ( token , ""p=%d"" , & pprot ) == 1 )"		7610236	3					
ANR	7613450	Condition	"sscanf ( token , ""p=%d"" , & pprot ) == 1"	1316:24:51917:51950	7610236	0	True				
ANR	7613451	EqualityExpression	"sscanf ( token , ""p=%d"" , & pprot ) == 1"		7610236	0		==			
ANR	7613452	CallExpression	"sscanf ( token , ""p=%d"" , & pprot )"		7610236	0					
ANR	7613453	Callee	sscanf		7610236	0					
ANR	7613454	Identifier	sscanf		7610236	0					
ANR	7613455	ArgumentList	token		7610236	1					
ANR	7613456	Argument	token		7610236	0					
ANR	7613457	Identifier	token		7610236	0					
ANR	7613458	Argument	"""p=%d"""		7610236	1					
ANR	7613459	PrimaryExpression	"""p=%d"""		7610236	0					
ANR	7613460	Argument	& pprot		7610236	2					
ANR	7613461	UnaryOperationExpression	& pprot		7610236	0					
ANR	7613462	UnaryOperator	&		7610236	0					
ANR	7613463	Identifier	pprot		7610236	1					
ANR	7613464	PrimaryExpression	1		7610236	1					
ANR	7613465	CompoundStatement		745:60:26923:26923	7610236	1					
ANR	7613466	IfStatement	if ( ! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) ) )		7610236	0					
ANR	7613467	Condition	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )	1318:28:52050:52183	7610236	0	True				
ANR	7613468	UnaryOperationExpression	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )		7610236	0					
ANR	7613469	UnaryOperator	!		7610236	0					
ANR	7613470	OrExpression	( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613471	EqualityExpression	pprot == 0		7610236	0		==			
ANR	7613472	Identifier	pprot		7610236	0					
ANR	7613473	PrimaryExpression	0		7610236	1					
ANR	7613474	OrExpression	( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613475	EqualityExpression	pprot == 1		7610236	0		==			
ANR	7613476	Identifier	pprot		7610236	0					
ANR	7613477	PrimaryExpression	1		7610236	1					
ANR	7613478	OrExpression	( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613479	EqualityExpression	pprot == 16		7610236	0		==			
ANR	7613480	Identifier	pprot		7610236	0					
ANR	7613481	PrimaryExpression	16		7610236	1					
ANR	7613482	OrExpression	( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613483	EqualityExpression	pprot == 32		7610236	0		==			
ANR	7613484	Identifier	pprot		7610236	0					
ANR	7613485	PrimaryExpression	32		7610236	1					
ANR	7613486	AndExpression	( pprot >= 37 ) && ( pprot <= 128 )		7610236	1		&&			
ANR	7613487	RelationalExpression	pprot >= 37		7610236	0		>=			
ANR	7613488	Identifier	pprot		7610236	0					
ANR	7613489	PrimaryExpression	37		7610236	1					
ANR	7613490	RelationalExpression	pprot <= 128		7610236	1		<=			
ANR	7613491	Identifier	pprot		7610236	0					
ANR	7613492	PrimaryExpression	128		7610236	1					
ANR	7613493	CompoundStatement		748:68:27156:27156	7610236	1					
ANR	7613494	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid default packet protection method p = %d\\n"" , pprot )"	1320:28:52216:52336	7610236	0	True				
ANR	7613495	CallExpression	"fprintf ( stderr , ""ERROR -> invalid default packet protection method p = %d\\n"" , pprot )"		7610236	0					
ANR	7613496	Callee	fprintf		7610236	0					
ANR	7613497	Identifier	fprintf		7610236	0					
ANR	7613498	ArgumentList	stderr		7610236	1					
ANR	7613499	Argument	stderr		7610236	0					
ANR	7613500	Identifier	stderr		7610236	0					
ANR	7613501	Argument	"""ERROR -> invalid default packet protection method p = %d\\n"""		7610236	1					
ANR	7613502	PrimaryExpression	"""ERROR -> invalid default packet protection method p = %d\\n"""		7610236	0					
ANR	7613503	Argument	pprot		7610236	2					
ANR	7613504	Identifier	pprot		7610236	0					
ANR	7613505	ReturnStatement	return 1 ;	1322:28:52366:52374	7610236	1	True				
ANR	7613506	PrimaryExpression	1		7610236	0					
ANR	7613507	ExpressionStatement	parameters -> jpwl_pprot_tileno [ 0 ] = 0	1324:24:52426:52462	7610236	1	True				
ANR	7613508	AssignmentExpression	parameters -> jpwl_pprot_tileno [ 0 ] = 0		7610236	0		=			
ANR	7613509	ArrayIndexing	parameters -> jpwl_pprot_tileno [ 0 ]		7610236	0					
ANR	7613510	PtrMemberAccess	parameters -> jpwl_pprot_tileno		7610236	0					
ANR	7613511	Identifier	parameters		7610236	0					
ANR	7613512	Identifier	jpwl_pprot_tileno		7610236	1					
ANR	7613513	PrimaryExpression	0		7610236	1					
ANR	7613514	PrimaryExpression	0		7610236	1					
ANR	7613515	ExpressionStatement	parameters -> jpwl_pprot_packno [ 0 ] = 0	1325:24:52488:52524	7610236	2	True				
ANR	7613516	AssignmentExpression	parameters -> jpwl_pprot_packno [ 0 ] = 0		7610236	0		=			
ANR	7613517	ArrayIndexing	parameters -> jpwl_pprot_packno [ 0 ]		7610236	0					
ANR	7613518	PtrMemberAccess	parameters -> jpwl_pprot_packno		7610236	0					
ANR	7613519	Identifier	parameters		7610236	0					
ANR	7613520	Identifier	jpwl_pprot_packno		7610236	1					
ANR	7613521	PrimaryExpression	0		7610236	1					
ANR	7613522	PrimaryExpression	0		7610236	1					
ANR	7613523	ExpressionStatement	parameters -> jpwl_pprot [ 0 ] = pprot	1326:24:52550:52583	7610236	3	True				
ANR	7613524	AssignmentExpression	parameters -> jpwl_pprot [ 0 ] = pprot		7610236	0		=			
ANR	7613525	ArrayIndexing	parameters -> jpwl_pprot [ 0 ]		7610236	0					
ANR	7613526	PtrMemberAccess	parameters -> jpwl_pprot		7610236	0					
ANR	7613527	Identifier	parameters		7610236	0					
ANR	7613528	Identifier	jpwl_pprot		7610236	1					
ANR	7613529	PrimaryExpression	0		7610236	1					
ANR	7613530	Identifier	pprot		7610236	1					
ANR	7613531	ElseStatement	else		7610236	0					
ANR	7613532	IfStatement	"if ( sscanf ( token , ""p%d=%d"" , & tile , & pprot ) == 2 )"		7610236	0					
ANR	7613533	Condition	"sscanf ( token , ""p%d=%d"" , & tile , & pprot ) == 2"	1328:31:52617:52659	7610236	0	True				
ANR	7613534	EqualityExpression	"sscanf ( token , ""p%d=%d"" , & tile , & pprot ) == 2"		7610236	0		==			
ANR	7613535	CallExpression	"sscanf ( token , ""p%d=%d"" , & tile , & pprot )"		7610236	0					
ANR	7613536	Callee	sscanf		7610236	0					
ANR	7613537	Identifier	sscanf		7610236	0					
ANR	7613538	ArgumentList	token		7610236	1					
ANR	7613539	Argument	token		7610236	0					
ANR	7613540	Identifier	token		7610236	0					
ANR	7613541	Argument	"""p%d=%d"""		7610236	1					
ANR	7613542	PrimaryExpression	"""p%d=%d"""		7610236	0					
ANR	7613543	Argument	& tile		7610236	2					
ANR	7613544	UnaryOperationExpression	& tile		7610236	0					
ANR	7613545	UnaryOperator	&		7610236	0					
ANR	7613546	Identifier	tile		7610236	1					
ANR	7613547	Argument	& pprot		7610236	3					
ANR	7613548	UnaryOperationExpression	& pprot		7610236	0					
ANR	7613549	UnaryOperator	&		7610236	0					
ANR	7613550	Identifier	pprot		7610236	1					
ANR	7613551	PrimaryExpression	2		7610236	1					
ANR	7613552	CompoundStatement		757:76:27632:27632	7610236	1					
ANR	7613553	IfStatement	if ( ! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) ) )		7610236	0					
ANR	7613554	Condition	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )	1330:28:52757:52890	7610236	0	True				
ANR	7613555	UnaryOperationExpression	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )		7610236	0					
ANR	7613556	UnaryOperator	!		7610236	0					
ANR	7613557	OrExpression	( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613558	EqualityExpression	pprot == 0		7610236	0		==			
ANR	7613559	Identifier	pprot		7610236	0					
ANR	7613560	PrimaryExpression	0		7610236	1					
ANR	7613561	OrExpression	( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613562	EqualityExpression	pprot == 1		7610236	0		==			
ANR	7613563	Identifier	pprot		7610236	0					
ANR	7613564	PrimaryExpression	1		7610236	1					
ANR	7613565	OrExpression	( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613566	EqualityExpression	pprot == 16		7610236	0		==			
ANR	7613567	Identifier	pprot		7610236	0					
ANR	7613568	PrimaryExpression	16		7610236	1					
ANR	7613569	OrExpression	( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613570	EqualityExpression	pprot == 32		7610236	0		==			
ANR	7613571	Identifier	pprot		7610236	0					
ANR	7613572	PrimaryExpression	32		7610236	1					
ANR	7613573	AndExpression	( pprot >= 37 ) && ( pprot <= 128 )		7610236	1		&&			
ANR	7613574	RelationalExpression	pprot >= 37		7610236	0		>=			
ANR	7613575	Identifier	pprot		7610236	0					
ANR	7613576	PrimaryExpression	37		7610236	1					
ANR	7613577	RelationalExpression	pprot <= 128		7610236	1		<=			
ANR	7613578	Identifier	pprot		7610236	0					
ANR	7613579	PrimaryExpression	128		7610236	1					
ANR	7613580	CompoundStatement		760:68:27863:27863	7610236	1					
ANR	7613581	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid packet protection method p = %d\\n"" , pprot )"	1332:28:52923:52999	7610236	0	True				
ANR	7613582	CallExpression	"fprintf ( stderr , ""ERROR -> invalid packet protection method p = %d\\n"" , pprot )"		7610236	0					
ANR	7613583	Callee	fprintf		7610236	0					
ANR	7613584	Identifier	fprintf		7610236	0					
ANR	7613585	ArgumentList	stderr		7610236	1					
ANR	7613586	Argument	stderr		7610236	0					
ANR	7613587	Identifier	stderr		7610236	0					
ANR	7613588	Argument	"""ERROR -> invalid packet protection method p = %d\\n"""		7610236	1					
ANR	7613589	PrimaryExpression	"""ERROR -> invalid packet protection method p = %d\\n"""		7610236	0					
ANR	7613590	Argument	pprot		7610236	2					
ANR	7613591	Identifier	pprot		7610236	0					
ANR	7613592	ReturnStatement	return 1 ;	1333:28:53029:53037	7610236	1	True				
ANR	7613593	PrimaryExpression	1		7610236	0					
ANR	7613594	IfStatement	if ( tile < 0 )		7610236	1					
ANR	7613595	Condition	tile < 0	1335:28:53093:53100	7610236	0	True				
ANR	7613596	RelationalExpression	tile < 0		7610236	0		<			
ANR	7613597	Identifier	tile		7610236	0					
ANR	7613598	PrimaryExpression	0		7610236	1					
ANR	7613599	CompoundStatement		764:38:28073:28073	7610236	1					
ANR	7613600	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"	1336:28:53133:53257	7610236	0	True				
ANR	7613601	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"		7610236	0					
ANR	7613602	Callee	fprintf		7610236	0					
ANR	7613603	Identifier	fprintf		7610236	0					
ANR	7613604	ArgumentList	stderr		7610236	1					
ANR	7613605	Argument	stderr		7610236	0					
ANR	7613606	Identifier	stderr		7610236	0					
ANR	7613607	Argument	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	1					
ANR	7613608	PrimaryExpression	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	0					
ANR	7613609	Argument	tile		7610236	2					
ANR	7613610	Identifier	tile		7610236	0					
ANR	7613611	ReturnStatement	return 1 ;	1338:28:53287:53295	7610236	1	True				
ANR	7613612	PrimaryExpression	1		7610236	0					
ANR	7613613	IfStatement	if ( packspec < JPWL_MAX_NO_PACKSPECS )		7610236	2					
ANR	7613614	Condition	packspec < JPWL_MAX_NO_PACKSPECS	1340:28:53351:53382	7610236	0	True				
ANR	7613615	RelationalExpression	packspec < JPWL_MAX_NO_PACKSPECS		7610236	0		<			
ANR	7613616	Identifier	packspec		7610236	0					
ANR	7613617	Identifier	JPWL_MAX_NO_PACKSPECS		7610236	1					
ANR	7613618	CompoundStatement		769:62:28355:28355	7610236	1					
ANR	7613619	ExpressionStatement	parameters -> jpwl_pprot_tileno [ packspec ] = tile	1341:28:53415:53461	7610236	0	True				
ANR	7613620	AssignmentExpression	parameters -> jpwl_pprot_tileno [ packspec ] = tile		7610236	0		=			
ANR	7613621	ArrayIndexing	parameters -> jpwl_pprot_tileno [ packspec ]		7610236	0					
ANR	7613622	PtrMemberAccess	parameters -> jpwl_pprot_tileno		7610236	0					
ANR	7613623	Identifier	parameters		7610236	0					
ANR	7613624	Identifier	jpwl_pprot_tileno		7610236	1					
ANR	7613625	Identifier	packspec		7610236	1					
ANR	7613626	Identifier	tile		7610236	1					
ANR	7613627	ExpressionStatement	parameters -> jpwl_pprot_packno [ packspec ] = 0	1342:28:53491:53534	7610236	1	True				
ANR	7613628	AssignmentExpression	parameters -> jpwl_pprot_packno [ packspec ] = 0		7610236	0		=			
ANR	7613629	ArrayIndexing	parameters -> jpwl_pprot_packno [ packspec ]		7610236	0					
ANR	7613630	PtrMemberAccess	parameters -> jpwl_pprot_packno		7610236	0					
ANR	7613631	Identifier	parameters		7610236	0					
ANR	7613632	Identifier	jpwl_pprot_packno		7610236	1					
ANR	7613633	Identifier	packspec		7610236	1					
ANR	7613634	PrimaryExpression	0		7610236	1					
ANR	7613635	ExpressionStatement	parameters -> jpwl_pprot [ packspec ++ ] = pprot	1343:28:53564:53606	7610236	2	True				
ANR	7613636	AssignmentExpression	parameters -> jpwl_pprot [ packspec ++ ] = pprot		7610236	0		=			
ANR	7613637	ArrayIndexing	parameters -> jpwl_pprot [ packspec ++ ]		7610236	0					
ANR	7613638	PtrMemberAccess	parameters -> jpwl_pprot		7610236	0					
ANR	7613639	Identifier	parameters		7610236	0					
ANR	7613640	Identifier	jpwl_pprot		7610236	1					
ANR	7613641	PostIncDecOperationExpression	packspec ++		7610236	1					
ANR	7613642	Identifier	packspec		7610236	0					
ANR	7613643	IncDec	++		7610236	1					
ANR	7613644	Identifier	pprot		7610236	1					
ANR	7613645	ElseStatement	else		7610236	0					
ANR	7613646	IfStatement	"if ( sscanf ( token , ""p%d:%d=%d"" , & tile , & pack , & pprot ) == 3 )"		7610236	0					
ANR	7613647	Condition	"sscanf ( token , ""p%d:%d=%d"" , & tile , & pack , & pprot ) == 3"	1346:31:53666:53718	7610236	0	True				
ANR	7613648	EqualityExpression	"sscanf ( token , ""p%d:%d=%d"" , & tile , & pack , & pprot ) == 3"		7610236	0		==			
ANR	7613649	CallExpression	"sscanf ( token , ""p%d:%d=%d"" , & tile , & pack , & pprot )"		7610236	0					
ANR	7613650	Callee	sscanf		7610236	0					
ANR	7613651	Identifier	sscanf		7610236	0					
ANR	7613652	ArgumentList	token		7610236	1					
ANR	7613653	Argument	token		7610236	0					
ANR	7613654	Identifier	token		7610236	0					
ANR	7613655	Argument	"""p%d:%d=%d"""		7610236	1					
ANR	7613656	PrimaryExpression	"""p%d:%d=%d"""		7610236	0					
ANR	7613657	Argument	& tile		7610236	2					
ANR	7613658	UnaryOperationExpression	& tile		7610236	0					
ANR	7613659	UnaryOperator	&		7610236	0					
ANR	7613660	Identifier	tile		7610236	1					
ANR	7613661	Argument	& pack		7610236	3					
ANR	7613662	UnaryOperationExpression	& pack		7610236	0					
ANR	7613663	UnaryOperator	&		7610236	0					
ANR	7613664	Identifier	pack		7610236	1					
ANR	7613665	Argument	& pprot		7610236	4					
ANR	7613666	UnaryOperationExpression	& pprot		7610236	0					
ANR	7613667	UnaryOperator	&		7610236	0					
ANR	7613668	Identifier	pprot		7610236	1					
ANR	7613669	PrimaryExpression	3		7610236	1					
ANR	7613670	CompoundStatement		775:86:28691:28691	7610236	1					
ANR	7613671	IfStatement	if ( ! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) ) )		7610236	0					
ANR	7613672	Condition	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )	1348:28:53838:53971	7610236	0	True				
ANR	7613673	UnaryOperationExpression	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )		7610236	0					
ANR	7613674	UnaryOperator	!		7610236	0					
ANR	7613675	OrExpression	( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613676	EqualityExpression	pprot == 0		7610236	0		==			
ANR	7613677	Identifier	pprot		7610236	0					
ANR	7613678	PrimaryExpression	0		7610236	1					
ANR	7613679	OrExpression	( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613680	EqualityExpression	pprot == 1		7610236	0		==			
ANR	7613681	Identifier	pprot		7610236	0					
ANR	7613682	PrimaryExpression	1		7610236	1					
ANR	7613683	OrExpression	( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613684	EqualityExpression	pprot == 16		7610236	0		==			
ANR	7613685	Identifier	pprot		7610236	0					
ANR	7613686	PrimaryExpression	16		7610236	1					
ANR	7613687	OrExpression	( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613688	EqualityExpression	pprot == 32		7610236	0		==			
ANR	7613689	Identifier	pprot		7610236	0					
ANR	7613690	PrimaryExpression	32		7610236	1					
ANR	7613691	AndExpression	( pprot >= 37 ) && ( pprot <= 128 )		7610236	1		&&			
ANR	7613692	RelationalExpression	pprot >= 37		7610236	0		>=			
ANR	7613693	Identifier	pprot		7610236	0					
ANR	7613694	PrimaryExpression	37		7610236	1					
ANR	7613695	RelationalExpression	pprot <= 128		7610236	1		<=			
ANR	7613696	Identifier	pprot		7610236	0					
ANR	7613697	PrimaryExpression	128		7610236	1					
ANR	7613698	CompoundStatement		778:68:28944:28944	7610236	1					
ANR	7613699	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid packet protection method p = %d\\n"" , pprot )"	1350:28:54004:54080	7610236	0	True				
ANR	7613700	CallExpression	"fprintf ( stderr , ""ERROR -> invalid packet protection method p = %d\\n"" , pprot )"		7610236	0					
ANR	7613701	Callee	fprintf		7610236	0					
ANR	7613702	Identifier	fprintf		7610236	0					
ANR	7613703	ArgumentList	stderr		7610236	1					
ANR	7613704	Argument	stderr		7610236	0					
ANR	7613705	Identifier	stderr		7610236	0					
ANR	7613706	Argument	"""ERROR -> invalid packet protection method p = %d\\n"""		7610236	1					
ANR	7613707	PrimaryExpression	"""ERROR -> invalid packet protection method p = %d\\n"""		7610236	0					
ANR	7613708	Argument	pprot		7610236	2					
ANR	7613709	Identifier	pprot		7610236	0					
ANR	7613710	ReturnStatement	return 1 ;	1351:28:54110:54118	7610236	1	True				
ANR	7613711	PrimaryExpression	1		7610236	0					
ANR	7613712	IfStatement	if ( tile < 0 )		7610236	1					
ANR	7613713	Condition	tile < 0	1353:28:54174:54181	7610236	0	True				
ANR	7613714	RelationalExpression	tile < 0		7610236	0		<			
ANR	7613715	Identifier	tile		7610236	0					
ANR	7613716	PrimaryExpression	0		7610236	1					
ANR	7613717	CompoundStatement		782:38:29154:29154	7610236	1					
ANR	7613718	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"	1354:28:54214:54338	7610236	0	True				
ANR	7613719	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"		7610236	0					
ANR	7613720	Callee	fprintf		7610236	0					
ANR	7613721	Identifier	fprintf		7610236	0					
ANR	7613722	ArgumentList	stderr		7610236	1					
ANR	7613723	Argument	stderr		7610236	0					
ANR	7613724	Identifier	stderr		7610236	0					
ANR	7613725	Argument	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	1					
ANR	7613726	PrimaryExpression	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	0					
ANR	7613727	Argument	tile		7610236	2					
ANR	7613728	Identifier	tile		7610236	0					
ANR	7613729	ReturnStatement	return 1 ;	1356:28:54368:54376	7610236	1	True				
ANR	7613730	PrimaryExpression	1		7610236	0					
ANR	7613731	IfStatement	if ( pack < 0 )		7610236	2					
ANR	7613732	Condition	pack < 0	1358:28:54432:54439	7610236	0	True				
ANR	7613733	RelationalExpression	pack < 0		7610236	0		<			
ANR	7613734	Identifier	pack		7610236	0					
ANR	7613735	PrimaryExpression	0		7610236	1					
ANR	7613736	CompoundStatement		787:38:29412:29412	7610236	1					
ANR	7613737	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid packet number on protection method p = %d\\n"" , pack )"	1359:28:54472:54593	7610236	0	True				
ANR	7613738	CallExpression	"fprintf ( stderr , ""ERROR -> invalid packet number on protection method p = %d\\n"" , pack )"		7610236	0					
ANR	7613739	Callee	fprintf		7610236	0					
ANR	7613740	Identifier	fprintf		7610236	0					
ANR	7613741	ArgumentList	stderr		7610236	1					
ANR	7613742	Argument	stderr		7610236	0					
ANR	7613743	Identifier	stderr		7610236	0					
ANR	7613744	Argument	"""ERROR -> invalid packet number on protection method p = %d\\n"""		7610236	1					
ANR	7613745	PrimaryExpression	"""ERROR -> invalid packet number on protection method p = %d\\n"""		7610236	0					
ANR	7613746	Argument	pack		7610236	2					
ANR	7613747	Identifier	pack		7610236	0					
ANR	7613748	ReturnStatement	return 1 ;	1361:28:54623:54631	7610236	1	True				
ANR	7613749	PrimaryExpression	1		7610236	0					
ANR	7613750	IfStatement	if ( packspec < JPWL_MAX_NO_PACKSPECS )		7610236	3					
ANR	7613751	Condition	packspec < JPWL_MAX_NO_PACKSPECS	1363:28:54687:54718	7610236	0	True				
ANR	7613752	RelationalExpression	packspec < JPWL_MAX_NO_PACKSPECS		7610236	0		<			
ANR	7613753	Identifier	packspec		7610236	0					
ANR	7613754	Identifier	JPWL_MAX_NO_PACKSPECS		7610236	1					
ANR	7613755	CompoundStatement		792:62:29691:29691	7610236	1					
ANR	7613756	ExpressionStatement	parameters -> jpwl_pprot_tileno [ packspec ] = tile	1364:28:54751:54797	7610236	0	True				
ANR	7613757	AssignmentExpression	parameters -> jpwl_pprot_tileno [ packspec ] = tile		7610236	0		=			
ANR	7613758	ArrayIndexing	parameters -> jpwl_pprot_tileno [ packspec ]		7610236	0					
ANR	7613759	PtrMemberAccess	parameters -> jpwl_pprot_tileno		7610236	0					
ANR	7613760	Identifier	parameters		7610236	0					
ANR	7613761	Identifier	jpwl_pprot_tileno		7610236	1					
ANR	7613762	Identifier	packspec		7610236	1					
ANR	7613763	Identifier	tile		7610236	1					
ANR	7613764	ExpressionStatement	parameters -> jpwl_pprot_packno [ packspec ] = pack	1365:28:54827:54873	7610236	1	True				
ANR	7613765	AssignmentExpression	parameters -> jpwl_pprot_packno [ packspec ] = pack		7610236	0		=			
ANR	7613766	ArrayIndexing	parameters -> jpwl_pprot_packno [ packspec ]		7610236	0					
ANR	7613767	PtrMemberAccess	parameters -> jpwl_pprot_packno		7610236	0					
ANR	7613768	Identifier	parameters		7610236	0					
ANR	7613769	Identifier	jpwl_pprot_packno		7610236	1					
ANR	7613770	Identifier	packspec		7610236	1					
ANR	7613771	Identifier	pack		7610236	1					
ANR	7613772	ExpressionStatement	parameters -> jpwl_pprot [ packspec ++ ] = pprot	1366:28:54903:54945	7610236	2	True				
ANR	7613773	AssignmentExpression	parameters -> jpwl_pprot [ packspec ++ ] = pprot		7610236	0		=			
ANR	7613774	ArrayIndexing	parameters -> jpwl_pprot [ packspec ++ ]		7610236	0					
ANR	7613775	PtrMemberAccess	parameters -> jpwl_pprot		7610236	0					
ANR	7613776	Identifier	parameters		7610236	0					
ANR	7613777	Identifier	jpwl_pprot		7610236	1					
ANR	7613778	PostIncDecOperationExpression	packspec ++		7610236	1					
ANR	7613779	Identifier	packspec		7610236	0					
ANR	7613780	IncDec	++		7610236	1					
ANR	7613781	Identifier	pprot		7610236	1					
ANR	7613782	ElseStatement	else		7610236	0					
ANR	7613783	IfStatement	"if ( sscanf ( token , ""p%d:%d"" , & tile , & pack ) == 2 )"		7610236	0					
ANR	7613784	Condition	"sscanf ( token , ""p%d:%d"" , & tile , & pack ) == 2"	1369:31:55005:55046	7610236	0	True				
ANR	7613785	EqualityExpression	"sscanf ( token , ""p%d:%d"" , & tile , & pack ) == 2"		7610236	0		==			
ANR	7613786	CallExpression	"sscanf ( token , ""p%d:%d"" , & tile , & pack )"		7610236	0					
ANR	7613787	Callee	sscanf		7610236	0					
ANR	7613788	Identifier	sscanf		7610236	0					
ANR	7613789	ArgumentList	token		7610236	1					
ANR	7613790	Argument	token		7610236	0					
ANR	7613791	Identifier	token		7610236	0					
ANR	7613792	Argument	"""p%d:%d"""		7610236	1					
ANR	7613793	PrimaryExpression	"""p%d:%d"""		7610236	0					
ANR	7613794	Argument	& tile		7610236	2					
ANR	7613795	UnaryOperationExpression	& tile		7610236	0					
ANR	7613796	UnaryOperator	&		7610236	0					
ANR	7613797	Identifier	tile		7610236	1					
ANR	7613798	Argument	& pack		7610236	3					
ANR	7613799	UnaryOperationExpression	& pack		7610236	0					
ANR	7613800	UnaryOperator	&		7610236	0					
ANR	7613801	Identifier	pack		7610236	1					
ANR	7613802	PrimaryExpression	2		7610236	1					
ANR	7613803	CompoundStatement		798:75:30019:30019	7610236	1					
ANR	7613804	IfStatement	if ( ! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) ) )		7610236	0					
ANR	7613805	Condition	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )	1371:28:55158:55291	7610236	0	True				
ANR	7613806	UnaryOperationExpression	! ( ( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) ) )		7610236	0					
ANR	7613807	UnaryOperator	!		7610236	0					
ANR	7613808	OrExpression	( pprot == 0 ) || ( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613809	EqualityExpression	pprot == 0		7610236	0		==			
ANR	7613810	Identifier	pprot		7610236	0					
ANR	7613811	PrimaryExpression	0		7610236	1					
ANR	7613812	OrExpression	( pprot == 1 ) || ( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613813	EqualityExpression	pprot == 1		7610236	0		==			
ANR	7613814	Identifier	pprot		7610236	0					
ANR	7613815	PrimaryExpression	1		7610236	1					
ANR	7613816	OrExpression	( pprot == 16 ) || ( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613817	EqualityExpression	pprot == 16		7610236	0		==			
ANR	7613818	Identifier	pprot		7610236	0					
ANR	7613819	PrimaryExpression	16		7610236	1					
ANR	7613820	OrExpression	( pprot == 32 ) || ( ( pprot >= 37 ) && ( pprot <= 128 ) )		7610236	1		||			
ANR	7613821	EqualityExpression	pprot == 32		7610236	0		==			
ANR	7613822	Identifier	pprot		7610236	0					
ANR	7613823	PrimaryExpression	32		7610236	1					
ANR	7613824	AndExpression	( pprot >= 37 ) && ( pprot <= 128 )		7610236	1		&&			
ANR	7613825	RelationalExpression	pprot >= 37		7610236	0		>=			
ANR	7613826	Identifier	pprot		7610236	0					
ANR	7613827	PrimaryExpression	37		7610236	1					
ANR	7613828	RelationalExpression	pprot <= 128		7610236	1		<=			
ANR	7613829	Identifier	pprot		7610236	0					
ANR	7613830	PrimaryExpression	128		7610236	1					
ANR	7613831	CompoundStatement		801:68:30264:30264	7610236	1					
ANR	7613832	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid packet protection method p = %d\\n"" , pprot )"	1373:28:55324:55400	7610236	0	True				
ANR	7613833	CallExpression	"fprintf ( stderr , ""ERROR -> invalid packet protection method p = %d\\n"" , pprot )"		7610236	0					
ANR	7613834	Callee	fprintf		7610236	0					
ANR	7613835	Identifier	fprintf		7610236	0					
ANR	7613836	ArgumentList	stderr		7610236	1					
ANR	7613837	Argument	stderr		7610236	0					
ANR	7613838	Identifier	stderr		7610236	0					
ANR	7613839	Argument	"""ERROR -> invalid packet protection method p = %d\\n"""		7610236	1					
ANR	7613840	PrimaryExpression	"""ERROR -> invalid packet protection method p = %d\\n"""		7610236	0					
ANR	7613841	Argument	pprot		7610236	2					
ANR	7613842	Identifier	pprot		7610236	0					
ANR	7613843	ReturnStatement	return 1 ;	1374:28:55430:55438	7610236	1	True				
ANR	7613844	PrimaryExpression	1		7610236	0					
ANR	7613845	IfStatement	if ( tile < 0 )		7610236	1					
ANR	7613846	Condition	tile < 0	1376:28:55494:55501	7610236	0	True				
ANR	7613847	RelationalExpression	tile < 0		7610236	0		<			
ANR	7613848	Identifier	tile		7610236	0					
ANR	7613849	PrimaryExpression	0		7610236	1					
ANR	7613850	CompoundStatement		805:38:30474:30474	7610236	1					
ANR	7613851	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"	1377:28:55534:55658	7610236	0	True				
ANR	7613852	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"		7610236	0					
ANR	7613853	Callee	fprintf		7610236	0					
ANR	7613854	Identifier	fprintf		7610236	0					
ANR	7613855	ArgumentList	stderr		7610236	1					
ANR	7613856	Argument	stderr		7610236	0					
ANR	7613857	Identifier	stderr		7610236	0					
ANR	7613858	Argument	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	1					
ANR	7613859	PrimaryExpression	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	0					
ANR	7613860	Argument	tile		7610236	2					
ANR	7613861	Identifier	tile		7610236	0					
ANR	7613862	ReturnStatement	return 1 ;	1379:28:55688:55696	7610236	1	True				
ANR	7613863	PrimaryExpression	1		7610236	0					
ANR	7613864	IfStatement	if ( pack < 0 )		7610236	2					
ANR	7613865	Condition	pack < 0	1381:28:55752:55759	7610236	0	True				
ANR	7613866	RelationalExpression	pack < 0		7610236	0		<			
ANR	7613867	Identifier	pack		7610236	0					
ANR	7613868	PrimaryExpression	0		7610236	1					
ANR	7613869	CompoundStatement		810:38:30732:30732	7610236	1					
ANR	7613870	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid packet number on protection method p = %d\\n"" , pack )"	1382:28:55792:55913	7610236	0	True				
ANR	7613871	CallExpression	"fprintf ( stderr , ""ERROR -> invalid packet number on protection method p = %d\\n"" , pack )"		7610236	0					
ANR	7613872	Callee	fprintf		7610236	0					
ANR	7613873	Identifier	fprintf		7610236	0					
ANR	7613874	ArgumentList	stderr		7610236	1					
ANR	7613875	Argument	stderr		7610236	0					
ANR	7613876	Identifier	stderr		7610236	0					
ANR	7613877	Argument	"""ERROR -> invalid packet number on protection method p = %d\\n"""		7610236	1					
ANR	7613878	PrimaryExpression	"""ERROR -> invalid packet number on protection method p = %d\\n"""		7610236	0					
ANR	7613879	Argument	pack		7610236	2					
ANR	7613880	Identifier	pack		7610236	0					
ANR	7613881	ReturnStatement	return 1 ;	1384:28:55943:55951	7610236	1	True				
ANR	7613882	PrimaryExpression	1		7610236	0					
ANR	7613883	IfStatement	if ( packspec < JPWL_MAX_NO_PACKSPECS )		7610236	3					
ANR	7613884	Condition	packspec < JPWL_MAX_NO_PACKSPECS	1386:28:56007:56038	7610236	0	True				
ANR	7613885	RelationalExpression	packspec < JPWL_MAX_NO_PACKSPECS		7610236	0		<			
ANR	7613886	Identifier	packspec		7610236	0					
ANR	7613887	Identifier	JPWL_MAX_NO_PACKSPECS		7610236	1					
ANR	7613888	CompoundStatement		815:62:31011:31011	7610236	1					
ANR	7613889	ExpressionStatement	parameters -> jpwl_pprot_tileno [ packspec ] = tile	1387:28:56071:56117	7610236	0	True				
ANR	7613890	AssignmentExpression	parameters -> jpwl_pprot_tileno [ packspec ] = tile		7610236	0		=			
ANR	7613891	ArrayIndexing	parameters -> jpwl_pprot_tileno [ packspec ]		7610236	0					
ANR	7613892	PtrMemberAccess	parameters -> jpwl_pprot_tileno		7610236	0					
ANR	7613893	Identifier	parameters		7610236	0					
ANR	7613894	Identifier	jpwl_pprot_tileno		7610236	1					
ANR	7613895	Identifier	packspec		7610236	1					
ANR	7613896	Identifier	tile		7610236	1					
ANR	7613897	ExpressionStatement	parameters -> jpwl_pprot_packno [ packspec ] = pack	1388:28:56147:56193	7610236	1	True				
ANR	7613898	AssignmentExpression	parameters -> jpwl_pprot_packno [ packspec ] = pack		7610236	0		=			
ANR	7613899	ArrayIndexing	parameters -> jpwl_pprot_packno [ packspec ]		7610236	0					
ANR	7613900	PtrMemberAccess	parameters -> jpwl_pprot_packno		7610236	0					
ANR	7613901	Identifier	parameters		7610236	0					
ANR	7613902	Identifier	jpwl_pprot_packno		7610236	1					
ANR	7613903	Identifier	packspec		7610236	1					
ANR	7613904	Identifier	pack		7610236	1					
ANR	7613905	ExpressionStatement	parameters -> jpwl_pprot [ packspec ++ ] = pprot	1389:28:56223:56265	7610236	2	True				
ANR	7613906	AssignmentExpression	parameters -> jpwl_pprot [ packspec ++ ] = pprot		7610236	0		=			
ANR	7613907	ArrayIndexing	parameters -> jpwl_pprot [ packspec ++ ]		7610236	0					
ANR	7613908	PtrMemberAccess	parameters -> jpwl_pprot		7610236	0					
ANR	7613909	Identifier	parameters		7610236	0					
ANR	7613910	Identifier	jpwl_pprot		7610236	1					
ANR	7613911	PostIncDecOperationExpression	packspec ++		7610236	1					
ANR	7613912	Identifier	packspec		7610236	0					
ANR	7613913	IncDec	++		7610236	1					
ANR	7613914	Identifier	pprot		7610236	1					
ANR	7613915	ElseStatement	else		7610236	0					
ANR	7613916	IfStatement	"if ( sscanf ( token , ""p%d"" , & tile ) == 1 )"		7610236	0					
ANR	7613917	Condition	"sscanf ( token , ""p%d"" , & tile ) == 1"	1392:31:56325:56356	7610236	0	True				
ANR	7613918	EqualityExpression	"sscanf ( token , ""p%d"" , & tile ) == 1"		7610236	0		==			
ANR	7613919	CallExpression	"sscanf ( token , ""p%d"" , & tile )"		7610236	0					
ANR	7613920	Callee	sscanf		7610236	0					
ANR	7613921	Identifier	sscanf		7610236	0					
ANR	7613922	ArgumentList	token		7610236	1					
ANR	7613923	Argument	token		7610236	0					
ANR	7613924	Identifier	token		7610236	0					
ANR	7613925	Argument	"""p%d"""		7610236	1					
ANR	7613926	PrimaryExpression	"""p%d"""		7610236	0					
ANR	7613927	Argument	& tile		7610236	2					
ANR	7613928	UnaryOperationExpression	& tile		7610236	0					
ANR	7613929	UnaryOperator	&		7610236	0					
ANR	7613930	Identifier	tile		7610236	1					
ANR	7613931	PrimaryExpression	1		7610236	1					
ANR	7613932	CompoundStatement		821:65:31329:31329	7610236	1					
ANR	7613933	IfStatement	if ( tile < 0 )		7610236	0					
ANR	7613934	Condition	tile < 0	1394:28:56442:56449	7610236	0	True				
ANR	7613935	RelationalExpression	tile < 0		7610236	0		<			
ANR	7613936	Identifier	tile		7610236	0					
ANR	7613937	PrimaryExpression	0		7610236	1					
ANR	7613938	CompoundStatement		823:38:31422:31422	7610236	1					
ANR	7613939	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"	1395:28:56482:56606	7610236	0	True				
ANR	7613940	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on protection method p = %d\\n"" , tile )"		7610236	0					
ANR	7613941	Callee	fprintf		7610236	0					
ANR	7613942	Identifier	fprintf		7610236	0					
ANR	7613943	ArgumentList	stderr		7610236	1					
ANR	7613944	Argument	stderr		7610236	0					
ANR	7613945	Identifier	stderr		7610236	0					
ANR	7613946	Argument	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	1					
ANR	7613947	PrimaryExpression	"""ERROR -> invalid tile part number on protection method p = %d\\n"""		7610236	0					
ANR	7613948	Argument	tile		7610236	2					
ANR	7613949	Identifier	tile		7610236	0					
ANR	7613950	ReturnStatement	return 1 ;	1397:28:56636:56644	7610236	1	True				
ANR	7613951	PrimaryExpression	1		7610236	0					
ANR	7613952	IfStatement	if ( packspec < JPWL_MAX_NO_PACKSPECS )		7610236	1					
ANR	7613953	Condition	packspec < JPWL_MAX_NO_PACKSPECS	1399:28:56700:56731	7610236	0	True				
ANR	7613954	RelationalExpression	packspec < JPWL_MAX_NO_PACKSPECS		7610236	0		<			
ANR	7613955	Identifier	packspec		7610236	0					
ANR	7613956	Identifier	JPWL_MAX_NO_PACKSPECS		7610236	1					
ANR	7613957	CompoundStatement		828:62:31704:31704	7610236	1					
ANR	7613958	ExpressionStatement	parameters -> jpwl_pprot_tileno [ packspec ] = tile	1400:28:56764:56810	7610236	0	True				
ANR	7613959	AssignmentExpression	parameters -> jpwl_pprot_tileno [ packspec ] = tile		7610236	0		=			
ANR	7613960	ArrayIndexing	parameters -> jpwl_pprot_tileno [ packspec ]		7610236	0					
ANR	7613961	PtrMemberAccess	parameters -> jpwl_pprot_tileno		7610236	0					
ANR	7613962	Identifier	parameters		7610236	0					
ANR	7613963	Identifier	jpwl_pprot_tileno		7610236	1					
ANR	7613964	Identifier	packspec		7610236	1					
ANR	7613965	Identifier	tile		7610236	1					
ANR	7613966	ExpressionStatement	parameters -> jpwl_pprot_packno [ packspec ] = 0	1401:28:56840:56883	7610236	1	True				
ANR	7613967	AssignmentExpression	parameters -> jpwl_pprot_packno [ packspec ] = 0		7610236	0		=			
ANR	7613968	ArrayIndexing	parameters -> jpwl_pprot_packno [ packspec ]		7610236	0					
ANR	7613969	PtrMemberAccess	parameters -> jpwl_pprot_packno		7610236	0					
ANR	7613970	Identifier	parameters		7610236	0					
ANR	7613971	Identifier	jpwl_pprot_packno		7610236	1					
ANR	7613972	Identifier	packspec		7610236	1					
ANR	7613973	PrimaryExpression	0		7610236	1					
ANR	7613974	ExpressionStatement	parameters -> jpwl_pprot [ packspec ++ ] = pprot	1402:28:56913:56955	7610236	2	True				
ANR	7613975	AssignmentExpression	parameters -> jpwl_pprot [ packspec ++ ] = pprot		7610236	0		=			
ANR	7613976	ArrayIndexing	parameters -> jpwl_pprot [ packspec ++ ]		7610236	0					
ANR	7613977	PtrMemberAccess	parameters -> jpwl_pprot		7610236	0					
ANR	7613978	Identifier	parameters		7610236	0					
ANR	7613979	Identifier	jpwl_pprot		7610236	1					
ANR	7613980	PostIncDecOperationExpression	packspec ++		7610236	1					
ANR	7613981	Identifier	packspec		7610236	0					
ANR	7613982	IncDec	++		7610236	1					
ANR	7613983	Identifier	pprot		7610236	1					
ANR	7613984	ElseStatement	else		7610236	0					
ANR	7613985	IfStatement	"if ( ! strcmp ( token , ""p"" ) )"		7610236	0					
ANR	7613986	Condition	"! strcmp ( token , ""p"" )"	1406:31:57016:57034	7610236	0	True				
ANR	7613987	UnaryOperationExpression	"! strcmp ( token , ""p"" )"		7610236	0					
ANR	7613988	UnaryOperator	!		7610236	0					
ANR	7613989	CallExpression	"strcmp ( token , ""p"" )"		7610236	1					
ANR	7613990	Callee	strcmp		7610236	0					
ANR	7613991	Identifier	strcmp		7610236	0					
ANR	7613992	ArgumentList	token		7610236	1					
ANR	7613993	Argument	token		7610236	0					
ANR	7613994	Identifier	token		7610236	0					
ANR	7613995	Argument	"""p"""		7610236	1					
ANR	7613996	PrimaryExpression	"""p"""		7610236	0					
ANR	7613997	CompoundStatement		835:52:32007:32007	7610236	1					
ANR	7613998	ExpressionStatement	parameters -> jpwl_pprot_tileno [ 0 ] = 0	1408:24:57105:57141	7610236	0	True				
ANR	7613999	AssignmentExpression	parameters -> jpwl_pprot_tileno [ 0 ] = 0		7610236	0		=			
ANR	7614000	ArrayIndexing	parameters -> jpwl_pprot_tileno [ 0 ]		7610236	0					
ANR	7614001	PtrMemberAccess	parameters -> jpwl_pprot_tileno		7610236	0					
ANR	7614002	Identifier	parameters		7610236	0					
ANR	7614003	Identifier	jpwl_pprot_tileno		7610236	1					
ANR	7614004	PrimaryExpression	0		7610236	1					
ANR	7614005	PrimaryExpression	0		7610236	1					
ANR	7614006	ExpressionStatement	parameters -> jpwl_pprot_packno [ 0 ] = 0	1409:24:57167:57203	7610236	1	True				
ANR	7614007	AssignmentExpression	parameters -> jpwl_pprot_packno [ 0 ] = 0		7610236	0		=			
ANR	7614008	ArrayIndexing	parameters -> jpwl_pprot_packno [ 0 ]		7610236	0					
ANR	7614009	PtrMemberAccess	parameters -> jpwl_pprot_packno		7610236	0					
ANR	7614010	Identifier	parameters		7610236	0					
ANR	7614011	Identifier	jpwl_pprot_packno		7610236	1					
ANR	7614012	PrimaryExpression	0		7610236	1					
ANR	7614013	PrimaryExpression	0		7610236	1					
ANR	7614014	ExpressionStatement	parameters -> jpwl_pprot [ 0 ] = pprot	1410:24:57229:57262	7610236	2	True				
ANR	7614015	AssignmentExpression	parameters -> jpwl_pprot [ 0 ] = pprot		7610236	0		=			
ANR	7614016	ArrayIndexing	parameters -> jpwl_pprot [ 0 ]		7610236	0					
ANR	7614017	PtrMemberAccess	parameters -> jpwl_pprot		7610236	0					
ANR	7614018	Identifier	parameters		7610236	0					
ANR	7614019	Identifier	jpwl_pprot		7610236	1					
ANR	7614020	PrimaryExpression	0		7610236	1					
ANR	7614021	Identifier	pprot		7610236	1					
ANR	7614022	ElseStatement	else		7610236	0					
ANR	7614023	CompoundStatement		841:27:32262:32262	7610236	0					
ANR	7614024	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid protection method selection = %s\\n"" , token )"	1413:24:57318:57395	7610236	0	True				
ANR	7614025	CallExpression	"fprintf ( stderr , ""ERROR -> invalid protection method selection = %s\\n"" , token )"		7610236	0					
ANR	7614026	Callee	fprintf		7610236	0					
ANR	7614027	Identifier	fprintf		7610236	0					
ANR	7614028	ArgumentList	stderr		7610236	1					
ANR	7614029	Argument	stderr		7610236	0					
ANR	7614030	Identifier	stderr		7610236	0					
ANR	7614031	Argument	"""ERROR -> invalid protection method selection = %s\\n"""		7610236	1					
ANR	7614032	PrimaryExpression	"""ERROR -> invalid protection method selection = %s\\n"""		7610236	0					
ANR	7614033	Argument	token		7610236	2					
ANR	7614034	Identifier	token		7610236	0					
ANR	7614035	ReturnStatement	return 1 ;	1414:24:57421:57429	7610236	1	True				
ANR	7614036	PrimaryExpression	1		7610236	0					
ANR	7614037	ExpressionStatement		1415:21:57452:57452	7610236	4	True				
ANR	7614038	IfStatement	if ( * token == 's' )		7610236	2					
ANR	7614039	Condition	* token == 's'	1420:20:57542:57554	7610236	0	True				
ANR	7614040	EqualityExpression	* token == 's'		7610236	0		==			
ANR	7614041	UnaryOperationExpression	* token		7610236	0					
ANR	7614042	UnaryOperator	*		7610236	0					
ANR	7614043	Identifier	token		7610236	1					
ANR	7614044	PrimaryExpression	's'		7610236	1					
ANR	7614045	CompoundStatement		851:27:32557:32599	7610236	1					
ANR	7614046	Statement	static	1422:20:57580:57585	7610236	0	True				
ANR	7614047	IdentifierDeclStatement	"int tile = 0 , tilespec = 0 , lasttileno = 0 ;"	1422:27:57587:57629	7610236	1	True				
ANR	7614048	IdentifierDecl	tile = 0		7610236	0					
ANR	7614049	IdentifierDeclType	int		7610236	0					
ANR	7614050	Identifier	tile		7610236	1					
ANR	7614051	AssignmentExpression	tile = 0		7610236	2		=			
ANR	7614052	Identifier	tile		7610236	0					
ANR	7614053	PrimaryExpression	0		7610236	1					
ANR	7614054	IdentifierDecl	tilespec = 0		7610236	1					
ANR	7614055	IdentifierDeclType	int		7610236	0					
ANR	7614056	Identifier	tilespec		7610236	1					
ANR	7614057	AssignmentExpression	tilespec = 0		7610236	2		=			
ANR	7614058	Identifier	tilespec		7610236	0					
ANR	7614059	PrimaryExpression	0		7610236	1					
ANR	7614060	IdentifierDecl	lasttileno = 0		7610236	2					
ANR	7614061	IdentifierDeclType	int		7610236	0					
ANR	7614062	Identifier	lasttileno		7610236	1					
ANR	7614063	AssignmentExpression	lasttileno = 0		7610236	2		=			
ANR	7614064	Identifier	lasttileno		7610236	0					
ANR	7614065	PrimaryExpression	0		7610236	1					
ANR	7614066	ExpressionStatement	sens = 0	1424:20:57652:57660	7610236	2	True				
ANR	7614067	AssignmentExpression	sens = 0		7610236	0		=			
ANR	7614068	Identifier	sens		7610236	0					
ANR	7614069	PrimaryExpression	0		7610236	1					
ANR	7614070	IfStatement	"if ( sscanf ( token , ""s=%d"" , & sens ) == 1 )"		7610236	3					
ANR	7614071	Condition	"sscanf ( token , ""s=%d"" , & sens ) == 1"	1426:24:57720:57752	7610236	0	True				
ANR	7614072	EqualityExpression	"sscanf ( token , ""s=%d"" , & sens ) == 1"		7610236	0		==			
ANR	7614073	CallExpression	"sscanf ( token , ""s=%d"" , & sens )"		7610236	0					
ANR	7614074	Callee	sscanf		7610236	0					
ANR	7614075	Identifier	sscanf		7610236	0					
ANR	7614076	ArgumentList	token		7610236	1					
ANR	7614077	Argument	token		7610236	0					
ANR	7614078	Identifier	token		7610236	0					
ANR	7614079	Argument	"""s=%d"""		7610236	1					
ANR	7614080	PrimaryExpression	"""s=%d"""		7610236	0					
ANR	7614081	Argument	& sens		7610236	2					
ANR	7614082	UnaryOperationExpression	& sens		7610236	0					
ANR	7614083	UnaryOperator	&		7610236	0					
ANR	7614084	Identifier	sens		7610236	1					
ANR	7614085	PrimaryExpression	1		7610236	1					
ANR	7614086	CompoundStatement		855:59:32725:32725	7610236	1					
ANR	7614087	IfStatement	if ( ( sens < - 1 ) || ( sens > 7 ) )		7610236	0					
ANR	7614088	Condition	( sens < - 1 ) || ( sens > 7 )	1428:28:57838:57862	7610236	0	True				
ANR	7614089	OrExpression	( sens < - 1 ) || ( sens > 7 )		7610236	0		||			
ANR	7614090	RelationalExpression	sens < - 1		7610236	0		<			
ANR	7614091	Identifier	sens		7610236	0					
ANR	7614092	UnaryOperationExpression	- 1		7610236	1					
ANR	7614093	UnaryOperator	-		7610236	0					
ANR	7614094	PrimaryExpression	1		7610236	1					
ANR	7614095	RelationalExpression	sens > 7		7610236	1		>			
ANR	7614096	Identifier	sens		7610236	0					
ANR	7614097	PrimaryExpression	7		7610236	1					
ANR	7614098	CompoundStatement		857:55:32835:32835	7610236	1					
ANR	7614099	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid main header sensitivity method s = %d\\n"" , sens )"	1429:28:57895:58012	7610236	0	True				
ANR	7614100	CallExpression	"fprintf ( stderr , ""ERROR -> invalid main header sensitivity method s = %d\\n"" , sens )"		7610236	0					
ANR	7614101	Callee	fprintf		7610236	0					
ANR	7614102	Identifier	fprintf		7610236	0					
ANR	7614103	ArgumentList	stderr		7610236	1					
ANR	7614104	Argument	stderr		7610236	0					
ANR	7614105	Identifier	stderr		7610236	0					
ANR	7614106	Argument	"""ERROR -> invalid main header sensitivity method s = %d\\n"""		7610236	1					
ANR	7614107	PrimaryExpression	"""ERROR -> invalid main header sensitivity method s = %d\\n"""		7610236	0					
ANR	7614108	Argument	sens		7610236	2					
ANR	7614109	Identifier	sens		7610236	0					
ANR	7614110	ReturnStatement	return 1 ;	1431:28:58042:58050	7610236	1	True				
ANR	7614111	PrimaryExpression	1		7610236	0					
ANR	7614112	ExpressionStatement	parameters -> jpwl_sens_MH = sens	1433:24:58102:58133	7610236	1	True				
ANR	7614113	AssignmentExpression	parameters -> jpwl_sens_MH = sens		7610236	0		=			
ANR	7614114	PtrMemberAccess	parameters -> jpwl_sens_MH		7610236	0					
ANR	7614115	Identifier	parameters		7610236	0					
ANR	7614116	Identifier	jpwl_sens_MH		7610236	1					
ANR	7614117	Identifier	sens		7610236	1					
ANR	7614118	ElseStatement	else		7610236	0					
ANR	7614119	IfStatement	"if ( sscanf ( token , ""s%d=%d"" , & tile , & sens ) == 2 )"		7610236	0					
ANR	7614120	Condition	"sscanf ( token , ""s%d=%d"" , & tile , & sens ) == 2"	1435:31:58167:58208	7610236	0	True				
ANR	7614121	EqualityExpression	"sscanf ( token , ""s%d=%d"" , & tile , & sens ) == 2"		7610236	0		==			
ANR	7614122	CallExpression	"sscanf ( token , ""s%d=%d"" , & tile , & sens )"		7610236	0					
ANR	7614123	Callee	sscanf		7610236	0					
ANR	7614124	Identifier	sscanf		7610236	0					
ANR	7614125	ArgumentList	token		7610236	1					
ANR	7614126	Argument	token		7610236	0					
ANR	7614127	Identifier	token		7610236	0					
ANR	7614128	Argument	"""s%d=%d"""		7610236	1					
ANR	7614129	PrimaryExpression	"""s%d=%d"""		7610236	0					
ANR	7614130	Argument	& tile		7610236	2					
ANR	7614131	UnaryOperationExpression	& tile		7610236	0					
ANR	7614132	UnaryOperator	&		7610236	0					
ANR	7614133	Identifier	tile		7610236	1					
ANR	7614134	Argument	& sens		7610236	3					
ANR	7614135	UnaryOperationExpression	& sens		7610236	0					
ANR	7614136	UnaryOperator	&		7610236	0					
ANR	7614137	Identifier	sens		7610236	1					
ANR	7614138	PrimaryExpression	2		7610236	1					
ANR	7614139	CompoundStatement		864:75:33181:33181	7610236	1					
ANR	7614140	IfStatement	if ( ( sens < - 1 ) || ( sens > 7 ) )		7610236	0					
ANR	7614141	Condition	( sens < - 1 ) || ( sens > 7 )	1437:28:58299:58323	7610236	0	True				
ANR	7614142	OrExpression	( sens < - 1 ) || ( sens > 7 )		7610236	0		||			
ANR	7614143	RelationalExpression	sens < - 1		7610236	0		<			
ANR	7614144	Identifier	sens		7610236	0					
ANR	7614145	UnaryOperationExpression	- 1		7610236	1					
ANR	7614146	UnaryOperator	-		7610236	0					
ANR	7614147	PrimaryExpression	1		7610236	1					
ANR	7614148	RelationalExpression	sens > 7		7610236	1		>			
ANR	7614149	Identifier	sens		7610236	0					
ANR	7614150	PrimaryExpression	7		7610236	1					
ANR	7614151	CompoundStatement		866:55:33296:33296	7610236	1					
ANR	7614152	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part header sensitivity method s = %d\\n"" , sens )"	1438:28:58356:58478	7610236	0	True				
ANR	7614153	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part header sensitivity method s = %d\\n"" , sens )"		7610236	0					
ANR	7614154	Callee	fprintf		7610236	0					
ANR	7614155	Identifier	fprintf		7610236	0					
ANR	7614156	ArgumentList	stderr		7610236	1					
ANR	7614157	Argument	stderr		7610236	0					
ANR	7614158	Identifier	stderr		7610236	0					
ANR	7614159	Argument	"""ERROR -> invalid tile part header sensitivity method s = %d\\n"""		7610236	1					
ANR	7614160	PrimaryExpression	"""ERROR -> invalid tile part header sensitivity method s = %d\\n"""		7610236	0					
ANR	7614161	Argument	sens		7610236	2					
ANR	7614162	Identifier	sens		7610236	0					
ANR	7614163	ReturnStatement	return 1 ;	1440:28:58508:58516	7610236	1	True				
ANR	7614164	PrimaryExpression	1		7610236	0					
ANR	7614165	IfStatement	if ( tile < 0 )		7610236	1					
ANR	7614166	Condition	tile < 0	1442:28:58572:58579	7610236	0	True				
ANR	7614167	RelationalExpression	tile < 0		7610236	0		<			
ANR	7614168	Identifier	tile		7610236	0					
ANR	7614169	PrimaryExpression	0		7610236	1					
ANR	7614170	CompoundStatement		871:38:33552:33552	7610236	1					
ANR	7614171	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on sensitivity method t = %d\\n"" , tile )"	1443:28:58612:58737	7610236	0	True				
ANR	7614172	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on sensitivity method t = %d\\n"" , tile )"		7610236	0					
ANR	7614173	Callee	fprintf		7610236	0					
ANR	7614174	Identifier	fprintf		7610236	0					
ANR	7614175	ArgumentList	stderr		7610236	1					
ANR	7614176	Argument	stderr		7610236	0					
ANR	7614177	Identifier	stderr		7610236	0					
ANR	7614178	Argument	"""ERROR -> invalid tile part number on sensitivity method t = %d\\n"""		7610236	1					
ANR	7614179	PrimaryExpression	"""ERROR -> invalid tile part number on sensitivity method t = %d\\n"""		7610236	0					
ANR	7614180	Argument	tile		7610236	2					
ANR	7614181	Identifier	tile		7610236	0					
ANR	7614182	ReturnStatement	return 1 ;	1445:28:58767:58775	7610236	1	True				
ANR	7614183	PrimaryExpression	1		7610236	0					
ANR	7614184	IfStatement	if ( tilespec < JPWL_MAX_NO_TILESPECS )		7610236	2					
ANR	7614185	Condition	tilespec < JPWL_MAX_NO_TILESPECS	1447:28:58831:58862	7610236	0	True				
ANR	7614186	RelationalExpression	tilespec < JPWL_MAX_NO_TILESPECS		7610236	0		<			
ANR	7614187	Identifier	tilespec		7610236	0					
ANR	7614188	Identifier	JPWL_MAX_NO_TILESPECS		7610236	1					
ANR	7614189	CompoundStatement		876:62:33835:33835	7610236	1					
ANR	7614190	ExpressionStatement	parameters -> jpwl_sens_TPH_tileno [ tilespec ] = lasttileno = tile	1448:28:58895:58957	7610236	0	True				
ANR	7614191	AssignmentExpression	parameters -> jpwl_sens_TPH_tileno [ tilespec ] = lasttileno = tile		7610236	0		=			
ANR	7614192	ArrayIndexing	parameters -> jpwl_sens_TPH_tileno [ tilespec ]		7610236	0					
ANR	7614193	PtrMemberAccess	parameters -> jpwl_sens_TPH_tileno		7610236	0					
ANR	7614194	Identifier	parameters		7610236	0					
ANR	7614195	Identifier	jpwl_sens_TPH_tileno		7610236	1					
ANR	7614196	Identifier	tilespec		7610236	1					
ANR	7614197	AssignmentExpression	lasttileno = tile		7610236	1		=			
ANR	7614198	Identifier	lasttileno		7610236	0					
ANR	7614199	Identifier	tile		7610236	1					
ANR	7614200	ExpressionStatement	parameters -> jpwl_sens_TPH [ tilespec ++ ] = sens	1449:28:58987:59031	7610236	1	True				
ANR	7614201	AssignmentExpression	parameters -> jpwl_sens_TPH [ tilespec ++ ] = sens		7610236	0		=			
ANR	7614202	ArrayIndexing	parameters -> jpwl_sens_TPH [ tilespec ++ ]		7610236	0					
ANR	7614203	PtrMemberAccess	parameters -> jpwl_sens_TPH		7610236	0					
ANR	7614204	Identifier	parameters		7610236	0					
ANR	7614205	Identifier	jpwl_sens_TPH		7610236	1					
ANR	7614206	PostIncDecOperationExpression	tilespec ++		7610236	1					
ANR	7614207	Identifier	tilespec		7610236	0					
ANR	7614208	IncDec	++		7610236	1					
ANR	7614209	Identifier	sens		7610236	1					
ANR	7614210	ElseStatement	else		7610236	0					
ANR	7614211	IfStatement	"if ( sscanf ( token , ""s%d"" , & tile ) == 1 )"		7610236	0					
ANR	7614212	Condition	"sscanf ( token , ""s%d"" , & tile ) == 1"	1452:31:59091:59122	7610236	0	True				
ANR	7614213	EqualityExpression	"sscanf ( token , ""s%d"" , & tile ) == 1"		7610236	0		==			
ANR	7614214	CallExpression	"sscanf ( token , ""s%d"" , & tile )"		7610236	0					
ANR	7614215	Callee	sscanf		7610236	0					
ANR	7614216	Identifier	sscanf		7610236	0					
ANR	7614217	ArgumentList	token		7610236	1					
ANR	7614218	Argument	token		7610236	0					
ANR	7614219	Identifier	token		7610236	0					
ANR	7614220	Argument	"""s%d"""		7610236	1					
ANR	7614221	PrimaryExpression	"""s%d"""		7610236	0					
ANR	7614222	Argument	& tile		7610236	2					
ANR	7614223	UnaryOperationExpression	& tile		7610236	0					
ANR	7614224	UnaryOperator	&		7610236	0					
ANR	7614225	Identifier	tile		7610236	1					
ANR	7614226	PrimaryExpression	1		7610236	1					
ANR	7614227	CompoundStatement		881:65:34095:34095	7610236	1					
ANR	7614228	IfStatement	if ( tile < 0 )		7610236	0					
ANR	7614229	Condition	tile < 0	1454:28:59215:59222	7610236	0	True				
ANR	7614230	RelationalExpression	tile < 0		7610236	0		<			
ANR	7614231	Identifier	tile		7610236	0					
ANR	7614232	PrimaryExpression	0		7610236	1					
ANR	7614233	CompoundStatement		883:38:34195:34195	7610236	1					
ANR	7614234	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid tile part number on sensitivity method t = %d\\n"" , tile )"	1455:28:59255:59380	7610236	0	True				
ANR	7614235	CallExpression	"fprintf ( stderr , ""ERROR -> invalid tile part number on sensitivity method t = %d\\n"" , tile )"		7610236	0					
ANR	7614236	Callee	fprintf		7610236	0					
ANR	7614237	Identifier	fprintf		7610236	0					
ANR	7614238	ArgumentList	stderr		7610236	1					
ANR	7614239	Argument	stderr		7610236	0					
ANR	7614240	Identifier	stderr		7610236	0					
ANR	7614241	Argument	"""ERROR -> invalid tile part number on sensitivity method t = %d\\n"""		7610236	1					
ANR	7614242	PrimaryExpression	"""ERROR -> invalid tile part number on sensitivity method t = %d\\n"""		7610236	0					
ANR	7614243	Argument	tile		7610236	2					
ANR	7614244	Identifier	tile		7610236	0					
ANR	7614245	ReturnStatement	return 1 ;	1457:28:59410:59418	7610236	1	True				
ANR	7614246	PrimaryExpression	1		7610236	0					
ANR	7614247	IfStatement	if ( tilespec < JPWL_MAX_NO_TILESPECS )		7610236	1					
ANR	7614248	Condition	tilespec < JPWL_MAX_NO_TILESPECS	1459:28:59474:59505	7610236	0	True				
ANR	7614249	RelationalExpression	tilespec < JPWL_MAX_NO_TILESPECS		7610236	0		<			
ANR	7614250	Identifier	tilespec		7610236	0					
ANR	7614251	Identifier	JPWL_MAX_NO_TILESPECS		7610236	1					
ANR	7614252	CompoundStatement		888:62:34478:34478	7610236	1					
ANR	7614253	ExpressionStatement	parameters -> jpwl_sens_TPH_tileno [ tilespec ] = lasttileno = tile	1460:28:59538:59600	7610236	0	True				
ANR	7614254	AssignmentExpression	parameters -> jpwl_sens_TPH_tileno [ tilespec ] = lasttileno = tile		7610236	0		=			
ANR	7614255	ArrayIndexing	parameters -> jpwl_sens_TPH_tileno [ tilespec ]		7610236	0					
ANR	7614256	PtrMemberAccess	parameters -> jpwl_sens_TPH_tileno		7610236	0					
ANR	7614257	Identifier	parameters		7610236	0					
ANR	7614258	Identifier	jpwl_sens_TPH_tileno		7610236	1					
ANR	7614259	Identifier	tilespec		7610236	1					
ANR	7614260	AssignmentExpression	lasttileno = tile		7610236	1		=			
ANR	7614261	Identifier	lasttileno		7610236	0					
ANR	7614262	Identifier	tile		7610236	1					
ANR	7614263	ExpressionStatement	parameters -> jpwl_sens_TPH [ tilespec ++ ] = hprot	1461:28:59630:59675	7610236	1	True				
ANR	7614264	AssignmentExpression	parameters -> jpwl_sens_TPH [ tilespec ++ ] = hprot		7610236	0		=			
ANR	7614265	ArrayIndexing	parameters -> jpwl_sens_TPH [ tilespec ++ ]		7610236	0					
ANR	7614266	PtrMemberAccess	parameters -> jpwl_sens_TPH		7610236	0					
ANR	7614267	Identifier	parameters		7610236	0					
ANR	7614268	Identifier	jpwl_sens_TPH		7610236	1					
ANR	7614269	PostIncDecOperationExpression	tilespec ++		7610236	1					
ANR	7614270	Identifier	tilespec		7610236	0					
ANR	7614271	IncDec	++		7610236	1					
ANR	7614272	Identifier	hprot		7610236	1					
ANR	7614273	ElseStatement	else		7610236	0					
ANR	7614274	IfStatement	"if ( ! strcmp ( token , ""s"" ) )"		7610236	0					
ANR	7614275	Condition	"! strcmp ( token , ""s"" )"	1464:31:59735:59753	7610236	0	True				
ANR	7614276	UnaryOperationExpression	"! strcmp ( token , ""s"" )"		7610236	0					
ANR	7614277	UnaryOperator	!		7610236	0					
ANR	7614278	CallExpression	"strcmp ( token , ""s"" )"		7610236	1					
ANR	7614279	Callee	strcmp		7610236	0					
ANR	7614280	Identifier	strcmp		7610236	0					
ANR	7614281	ArgumentList	token		7610236	1					
ANR	7614282	Argument	token		7610236	0					
ANR	7614283	Identifier	token		7610236	0					
ANR	7614284	Argument	"""s"""		7610236	1					
ANR	7614285	PrimaryExpression	"""s"""		7610236	0					
ANR	7614286	CompoundStatement		893:52:34726:34726	7610236	1					
ANR	7614287	ExpressionStatement	parameters -> jpwl_sens_MH = sens	1466:24:59837:59868	7610236	0	True				
ANR	7614288	AssignmentExpression	parameters -> jpwl_sens_MH = sens		7610236	0		=			
ANR	7614289	PtrMemberAccess	parameters -> jpwl_sens_MH		7610236	0					
ANR	7614290	Identifier	parameters		7610236	0					
ANR	7614291	Identifier	jpwl_sens_MH		7610236	1					
ANR	7614292	Identifier	sens		7610236	1					
ANR	7614293	ElseStatement	else		7610236	0					
ANR	7614294	CompoundStatement		897:27:34868:34868	7610236	0					
ANR	7614295	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid sensitivity method selection = %s\\n"" , token )"	1469:24:59924:60002	7610236	0	True				
ANR	7614296	CallExpression	"fprintf ( stderr , ""ERROR -> invalid sensitivity method selection = %s\\n"" , token )"		7610236	0					
ANR	7614297	Callee	fprintf		7610236	0					
ANR	7614298	Identifier	fprintf		7610236	0					
ANR	7614299	ArgumentList	stderr		7610236	1					
ANR	7614300	Argument	stderr		7610236	0					
ANR	7614301	Identifier	stderr		7610236	0					
ANR	7614302	Argument	"""ERROR -> invalid sensitivity method selection = %s\\n"""		7610236	1					
ANR	7614303	PrimaryExpression	"""ERROR -> invalid sensitivity method selection = %s\\n"""		7610236	0					
ANR	7614304	Argument	token		7610236	2					
ANR	7614305	Identifier	token		7610236	0					
ANR	7614306	ReturnStatement	return 1 ;	1470:24:60028:60036	7610236	1	True				
ANR	7614307	PrimaryExpression	1		7610236	0					
ANR	7614308	ExpressionStatement		1471:21:60059:60059	7610236	4	True				
ANR	7614309	ExpressionStatement	parameters -> jpwl_sens_size = 2	1473:20:60082:60112	7610236	5	True				
ANR	7614310	AssignmentExpression	parameters -> jpwl_sens_size = 2		7610236	0		=			
ANR	7614311	PtrMemberAccess	parameters -> jpwl_sens_size		7610236	0					
ANR	7614312	Identifier	parameters		7610236	0					
ANR	7614313	Identifier	jpwl_sens_size		7610236	1					
ANR	7614314	PrimaryExpression	2		7610236	1					
ANR	7614315	IfStatement	if ( * token == 'a' )		7610236	3					
ANR	7614316	Condition	* token == 'a'	1477:20:60229:60241	7610236	0	True				
ANR	7614317	EqualityExpression	* token == 'a'		7610236	0		==			
ANR	7614318	UnaryOperationExpression	* token		7610236	0					
ANR	7614319	UnaryOperator	*		7610236	0					
ANR	7614320	Identifier	token		7610236	1					
ANR	7614321	PrimaryExpression	'a'		7610236	1					
ANR	7614322	CompoundStatement		906:35:35214:35214	7610236	1					
ANR	7614323	ExpressionStatement	addr = 0	1480:20:60268:60276	7610236	0	True				
ANR	7614324	AssignmentExpression	addr = 0		7610236	0		=			
ANR	7614325	Identifier	addr		7610236	0					
ANR	7614326	PrimaryExpression	0		7610236	1					
ANR	7614327	IfStatement	"if ( sscanf ( token , ""a=%d"" , & addr ) == 1 )"		7610236	1					
ANR	7614328	Condition	"sscanf ( token , ""a=%d"" , & addr ) == 1"	1482:24:60326:60358	7610236	0	True				
ANR	7614329	EqualityExpression	"sscanf ( token , ""a=%d"" , & addr ) == 1"		7610236	0		==			
ANR	7614330	CallExpression	"sscanf ( token , ""a=%d"" , & addr )"		7610236	0					
ANR	7614331	Callee	sscanf		7610236	0					
ANR	7614332	Identifier	sscanf		7610236	0					
ANR	7614333	ArgumentList	token		7610236	1					
ANR	7614334	Argument	token		7610236	0					
ANR	7614335	Identifier	token		7610236	0					
ANR	7614336	Argument	"""a=%d"""		7610236	1					
ANR	7614337	PrimaryExpression	"""a=%d"""		7610236	0					
ANR	7614338	Argument	& addr		7610236	2					
ANR	7614339	UnaryOperationExpression	& addr		7610236	0					
ANR	7614340	UnaryOperator	&		7610236	0					
ANR	7614341	Identifier	addr		7610236	1					
ANR	7614342	PrimaryExpression	1		7610236	1					
ANR	7614343	CompoundStatement		911:59:35331:35331	7610236	1					
ANR	7614344	IfStatement	if ( ( addr != 0 ) && ( addr != 2 ) && ( addr != 4 ) )		7610236	0					
ANR	7614345	Condition	( addr != 0 ) && ( addr != 2 ) && ( addr != 4 )	1484:28:60431:60471	7610236	0	True				
ANR	7614346	AndExpression	( addr != 0 ) && ( addr != 2 ) && ( addr != 4 )		7610236	0		&&			
ANR	7614347	EqualityExpression	addr != 0		7610236	0		!=			
ANR	7614348	Identifier	addr		7610236	0					
ANR	7614349	PrimaryExpression	0		7610236	1					
ANR	7614350	AndExpression	( addr != 2 ) && ( addr != 4 )		7610236	1		&&			
ANR	7614351	EqualityExpression	addr != 2		7610236	0		!=			
ANR	7614352	Identifier	addr		7610236	0					
ANR	7614353	PrimaryExpression	2		7610236	1					
ANR	7614354	EqualityExpression	addr != 4		7610236	1		!=			
ANR	7614355	Identifier	addr		7610236	0					
ANR	7614356	PrimaryExpression	4		7610236	1					
ANR	7614357	CompoundStatement		913:71:35444:35444	7610236	1					
ANR	7614358	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid addressing size a = %d\\n"" , addr )"	1485:28:60504:60570	7610236	0	True				
ANR	7614359	CallExpression	"fprintf ( stderr , ""ERROR -> invalid addressing size a = %d\\n"" , addr )"		7610236	0					
ANR	7614360	Callee	fprintf		7610236	0					
ANR	7614361	Identifier	fprintf		7610236	0					
ANR	7614362	ArgumentList	stderr		7610236	1					
ANR	7614363	Argument	stderr		7610236	0					
ANR	7614364	Identifier	stderr		7610236	0					
ANR	7614365	Argument	"""ERROR -> invalid addressing size a = %d\\n"""		7610236	1					
ANR	7614366	PrimaryExpression	"""ERROR -> invalid addressing size a = %d\\n"""		7610236	0					
ANR	7614367	Argument	addr		7610236	2					
ANR	7614368	Identifier	addr		7610236	0					
ANR	7614369	ReturnStatement	return 1 ;	1486:28:60600:60608	7610236	1	True				
ANR	7614370	PrimaryExpression	1		7610236	0					
ANR	7614371	ExpressionStatement	parameters -> jpwl_sens_addr = addr	1488:24:60660:60693	7610236	1	True				
ANR	7614372	AssignmentExpression	parameters -> jpwl_sens_addr = addr		7610236	0		=			
ANR	7614373	PtrMemberAccess	parameters -> jpwl_sens_addr		7610236	0					
ANR	7614374	Identifier	parameters		7610236	0					
ANR	7614375	Identifier	jpwl_sens_addr		7610236	1					
ANR	7614376	Identifier	addr		7610236	1					
ANR	7614377	ElseStatement	else		7610236	0					
ANR	7614378	IfStatement	"if ( ! strcmp ( token , ""a"" ) )"		7610236	0					
ANR	7614379	Condition	"! strcmp ( token , ""a"" )"	1490:31:60727:60745	7610236	0	True				
ANR	7614380	UnaryOperationExpression	"! strcmp ( token , ""a"" )"		7610236	0					
ANR	7614381	UnaryOperator	!		7610236	0					
ANR	7614382	CallExpression	"strcmp ( token , ""a"" )"		7610236	1					
ANR	7614383	Callee	strcmp		7610236	0					
ANR	7614384	Identifier	strcmp		7610236	0					
ANR	7614385	ArgumentList	token		7610236	1					
ANR	7614386	Argument	token		7610236	0					
ANR	7614387	Identifier	token		7610236	0					
ANR	7614388	Argument	"""a"""		7610236	1					
ANR	7614389	PrimaryExpression	"""a"""		7610236	0					
ANR	7614390	CompoundStatement		919:52:35718:35718	7610236	1					
ANR	7614391	ExpressionStatement	parameters -> jpwl_sens_addr = addr	1492:24:60812:60845	7610236	0	True				
ANR	7614392	AssignmentExpression	parameters -> jpwl_sens_addr = addr		7610236	0		=			
ANR	7614393	PtrMemberAccess	parameters -> jpwl_sens_addr		7610236	0					
ANR	7614394	Identifier	parameters		7610236	0					
ANR	7614395	Identifier	jpwl_sens_addr		7610236	1					
ANR	7614396	Identifier	addr		7610236	1					
ANR	7614397	ElseStatement	else		7610236	0					
ANR	7614398	CompoundStatement		923:27:35873:35873	7610236	0					
ANR	7614399	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid addressing selection = %s\\n"" , token )"	1495:24:60929:60999	7610236	0	True				
ANR	7614400	CallExpression	"fprintf ( stderr , ""ERROR -> invalid addressing selection = %s\\n"" , token )"		7610236	0					
ANR	7614401	Callee	fprintf		7610236	0					
ANR	7614402	Identifier	fprintf		7610236	0					
ANR	7614403	ArgumentList	stderr		7610236	1					
ANR	7614404	Argument	stderr		7610236	0					
ANR	7614405	Identifier	stderr		7610236	0					
ANR	7614406	Argument	"""ERROR -> invalid addressing selection = %s\\n"""		7610236	1					
ANR	7614407	PrimaryExpression	"""ERROR -> invalid addressing selection = %s\\n"""		7610236	0					
ANR	7614408	Argument	token		7610236	2					
ANR	7614409	Identifier	token		7610236	0					
ANR	7614410	ReturnStatement	return 1 ;	1496:24:61025:61033	7610236	1	True				
ANR	7614411	PrimaryExpression	1		7610236	0					
ANR	7614412	ExpressionStatement		1497:21:61056:61056	7610236	2	True				
ANR	7614413	IfStatement	if ( * token == 'z' )		7610236	4					
ANR	7614414	Condition	* token == 'z'	1502:20:61144:61156	7610236	0	True				
ANR	7614415	EqualityExpression	* token == 'z'		7610236	0		==			
ANR	7614416	UnaryOperationExpression	* token		7610236	0					
ANR	7614417	UnaryOperator	*		7610236	0					
ANR	7614418	Identifier	token		7610236	1					
ANR	7614419	PrimaryExpression	'z'		7610236	1					
ANR	7614420	CompoundStatement		931:35:36129:36129	7610236	1					
ANR	7614421	ExpressionStatement	size = 1	1505:20:61183:61191	7610236	0	True				
ANR	7614422	AssignmentExpression	size = 1		7610236	0		=			
ANR	7614423	Identifier	size		7610236	0					
ANR	7614424	PrimaryExpression	1		7610236	1					
ANR	7614425	IfStatement	"if ( sscanf ( token , ""z=%d"" , & size ) == 1 )"		7610236	1					
ANR	7614426	Condition	"sscanf ( token , ""z=%d"" , & size ) == 1"	1507:24:61243:61275	7610236	0	True				
ANR	7614427	EqualityExpression	"sscanf ( token , ""z=%d"" , & size ) == 1"		7610236	0		==			
ANR	7614428	CallExpression	"sscanf ( token , ""z=%d"" , & size )"		7610236	0					
ANR	7614429	Callee	sscanf		7610236	0					
ANR	7614430	Identifier	sscanf		7610236	0					
ANR	7614431	ArgumentList	token		7610236	1					
ANR	7614432	Argument	token		7610236	0					
ANR	7614433	Identifier	token		7610236	0					
ANR	7614434	Argument	"""z=%d"""		7610236	1					
ANR	7614435	PrimaryExpression	"""z=%d"""		7610236	0					
ANR	7614436	Argument	& size		7610236	2					
ANR	7614437	UnaryOperationExpression	& size		7610236	0					
ANR	7614438	UnaryOperator	&		7610236	0					
ANR	7614439	Identifier	size		7610236	1					
ANR	7614440	PrimaryExpression	1		7610236	1					
ANR	7614441	CompoundStatement		936:59:36248:36248	7610236	1					
ANR	7614442	IfStatement	if ( ( size != 0 ) && ( size != 1 ) && ( size != 2 ) )		7610236	0					
ANR	7614443	Condition	( size != 0 ) && ( size != 1 ) && ( size != 2 )	1509:28:61348:61388	7610236	0	True				
ANR	7614444	AndExpression	( size != 0 ) && ( size != 1 ) && ( size != 2 )		7610236	0		&&			
ANR	7614445	EqualityExpression	size != 0		7610236	0		!=			
ANR	7614446	Identifier	size		7610236	0					
ANR	7614447	PrimaryExpression	0		7610236	1					
ANR	7614448	AndExpression	( size != 1 ) && ( size != 2 )		7610236	1		&&			
ANR	7614449	EqualityExpression	size != 1		7610236	0		!=			
ANR	7614450	Identifier	size		7610236	0					
ANR	7614451	PrimaryExpression	1		7610236	1					
ANR	7614452	EqualityExpression	size != 2		7610236	1		!=			
ANR	7614453	Identifier	size		7610236	0					
ANR	7614454	PrimaryExpression	2		7610236	1					
ANR	7614455	CompoundStatement		938:71:36361:36361	7610236	1					
ANR	7614456	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid sensitivity size z = %d\\n"" , size )"	1510:28:61421:61488	7610236	0	True				
ANR	7614457	CallExpression	"fprintf ( stderr , ""ERROR -> invalid sensitivity size z = %d\\n"" , size )"		7610236	0					
ANR	7614458	Callee	fprintf		7610236	0					
ANR	7614459	Identifier	fprintf		7610236	0					
ANR	7614460	ArgumentList	stderr		7610236	1					
ANR	7614461	Argument	stderr		7610236	0					
ANR	7614462	Identifier	stderr		7610236	0					
ANR	7614463	Argument	"""ERROR -> invalid sensitivity size z = %d\\n"""		7610236	1					
ANR	7614464	PrimaryExpression	"""ERROR -> invalid sensitivity size z = %d\\n"""		7610236	0					
ANR	7614465	Argument	size		7610236	2					
ANR	7614466	Identifier	size		7610236	0					
ANR	7614467	ReturnStatement	return 1 ;	1511:28:61518:61526	7610236	1	True				
ANR	7614468	PrimaryExpression	1		7610236	0					
ANR	7614469	ExpressionStatement	parameters -> jpwl_sens_size = size	1513:24:61578:61611	7610236	1	True				
ANR	7614470	AssignmentExpression	parameters -> jpwl_sens_size = size		7610236	0		=			
ANR	7614471	PtrMemberAccess	parameters -> jpwl_sens_size		7610236	0					
ANR	7614472	Identifier	parameters		7610236	0					
ANR	7614473	Identifier	jpwl_sens_size		7610236	1					
ANR	7614474	Identifier	size		7610236	1					
ANR	7614475	ElseStatement	else		7610236	0					
ANR	7614476	IfStatement	"if ( ! strcmp ( token , ""a"" ) )"		7610236	0					
ANR	7614477	Condition	"! strcmp ( token , ""a"" )"	1515:31:61645:61663	7610236	0	True				
ANR	7614478	UnaryOperationExpression	"! strcmp ( token , ""a"" )"		7610236	0					
ANR	7614479	UnaryOperator	!		7610236	0					
ANR	7614480	CallExpression	"strcmp ( token , ""a"" )"		7610236	1					
ANR	7614481	Callee	strcmp		7610236	0					
ANR	7614482	Identifier	strcmp		7610236	0					
ANR	7614483	ArgumentList	token		7610236	1					
ANR	7614484	Argument	token		7610236	0					
ANR	7614485	Identifier	token		7610236	0					
ANR	7614486	Argument	"""a"""		7610236	1					
ANR	7614487	PrimaryExpression	"""a"""		7610236	0					
ANR	7614488	CompoundStatement		944:52:36636:36636	7610236	1					
ANR	7614489	ExpressionStatement	parameters -> jpwl_sens_size = size	1517:24:61730:61763	7610236	0	True				
ANR	7614490	AssignmentExpression	parameters -> jpwl_sens_size = size		7610236	0		=			
ANR	7614491	PtrMemberAccess	parameters -> jpwl_sens_size		7610236	0					
ANR	7614492	Identifier	parameters		7610236	0					
ANR	7614493	Identifier	jpwl_sens_size		7610236	1					
ANR	7614494	Identifier	size		7610236	1					
ANR	7614495	ElseStatement	else		7610236	0					
ANR	7614496	CompoundStatement		948:27:36788:36788	7610236	0					
ANR	7614497	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid size selection = %s\\n"" , token )"	1520:24:61844:61908	7610236	0	True				
ANR	7614498	CallExpression	"fprintf ( stderr , ""ERROR -> invalid size selection = %s\\n"" , token )"		7610236	0					
ANR	7614499	Callee	fprintf		7610236	0					
ANR	7614500	Identifier	fprintf		7610236	0					
ANR	7614501	ArgumentList	stderr		7610236	1					
ANR	7614502	Argument	stderr		7610236	0					
ANR	7614503	Identifier	stderr		7610236	0					
ANR	7614504	Argument	"""ERROR -> invalid size selection = %s\\n"""		7610236	1					
ANR	7614505	PrimaryExpression	"""ERROR -> invalid size selection = %s\\n"""		7610236	0					
ANR	7614506	Argument	token		7610236	2					
ANR	7614507	Identifier	token		7610236	0					
ANR	7614508	ReturnStatement	return 1 ;	1521:24:61934:61942	7610236	1	True				
ANR	7614509	PrimaryExpression	1		7610236	0					
ANR	7614510	ExpressionStatement		1522:21:61965:61965	7610236	2	True				
ANR	7614511	IfStatement	if ( * token == 'g' )		7610236	5					
ANR	7614512	Condition	* token == 'g'	1527:20:62049:62061	7610236	0	True				
ANR	7614513	EqualityExpression	* token == 'g'		7610236	0		==			
ANR	7614514	UnaryOperationExpression	* token		7610236	0					
ANR	7614515	UnaryOperator	*		7610236	0					
ANR	7614516	Identifier	token		7610236	1					
ANR	7614517	PrimaryExpression	'g'		7610236	1					
ANR	7614518	CompoundStatement		956:35:37034:37034	7610236	1					
ANR	7614519	ExpressionStatement	range = 0	1530:20:62088:62097	7610236	0	True				
ANR	7614520	AssignmentExpression	range = 0		7610236	0		=			
ANR	7614521	Identifier	range		7610236	0					
ANR	7614522	PrimaryExpression	0		7610236	1					
ANR	7614523	IfStatement	"if ( sscanf ( token , ""g=%d"" , & range ) == 1 )"		7610236	1					
ANR	7614524	Condition	"sscanf ( token , ""g=%d"" , & range ) == 1"	1532:24:62153:62186	7610236	0	True				
ANR	7614525	EqualityExpression	"sscanf ( token , ""g=%d"" , & range ) == 1"		7610236	0		==			
ANR	7614526	CallExpression	"sscanf ( token , ""g=%d"" , & range )"		7610236	0					
ANR	7614527	Callee	sscanf		7610236	0					
ANR	7614528	Identifier	sscanf		7610236	0					
ANR	7614529	ArgumentList	token		7610236	1					
ANR	7614530	Argument	token		7610236	0					
ANR	7614531	Identifier	token		7610236	0					
ANR	7614532	Argument	"""g=%d"""		7610236	1					
ANR	7614533	PrimaryExpression	"""g=%d"""		7610236	0					
ANR	7614534	Argument	& range		7610236	2					
ANR	7614535	UnaryOperationExpression	& range		7610236	0					
ANR	7614536	UnaryOperator	&		7610236	0					
ANR	7614537	Identifier	range		7610236	1					
ANR	7614538	PrimaryExpression	1		7610236	1					
ANR	7614539	CompoundStatement		961:60:37159:37159	7610236	1					
ANR	7614540	IfStatement	if ( ( range < 0 ) || ( range > 3 ) )		7610236	0					
ANR	7614541	Condition	( range < 0 ) || ( range > 3 )	1534:28:62259:62284	7610236	0	True				
ANR	7614542	OrExpression	( range < 0 ) || ( range > 3 )		7610236	0		||			
ANR	7614543	RelationalExpression	range < 0		7610236	0		<			
ANR	7614544	Identifier	range		7610236	0					
ANR	7614545	PrimaryExpression	0		7610236	1					
ANR	7614546	RelationalExpression	range > 3		7610236	1		>			
ANR	7614547	Identifier	range		7610236	0					
ANR	7614548	PrimaryExpression	3		7610236	1					
ANR	7614549	CompoundStatement		963:56:37257:37257	7610236	1					
ANR	7614550	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid sensitivity range method g = %d\\n"" , range )"	1535:28:62317:62393	7610236	0	True				
ANR	7614551	CallExpression	"fprintf ( stderr , ""ERROR -> invalid sensitivity range method g = %d\\n"" , range )"		7610236	0					
ANR	7614552	Callee	fprintf		7610236	0					
ANR	7614553	Identifier	fprintf		7610236	0					
ANR	7614554	ArgumentList	stderr		7610236	1					
ANR	7614555	Argument	stderr		7610236	0					
ANR	7614556	Identifier	stderr		7610236	0					
ANR	7614557	Argument	"""ERROR -> invalid sensitivity range method g = %d\\n"""		7610236	1					
ANR	7614558	PrimaryExpression	"""ERROR -> invalid sensitivity range method g = %d\\n"""		7610236	0					
ANR	7614559	Argument	range		7610236	2					
ANR	7614560	Identifier	range		7610236	0					
ANR	7614561	ReturnStatement	return 1 ;	1536:28:62423:62431	7610236	1	True				
ANR	7614562	PrimaryExpression	1		7610236	0					
ANR	7614563	ExpressionStatement	parameters -> jpwl_sens_range = range	1538:24:62483:62518	7610236	1	True				
ANR	7614564	AssignmentExpression	parameters -> jpwl_sens_range = range		7610236	0		=			
ANR	7614565	PtrMemberAccess	parameters -> jpwl_sens_range		7610236	0					
ANR	7614566	Identifier	parameters		7610236	0					
ANR	7614567	Identifier	jpwl_sens_range		7610236	1					
ANR	7614568	Identifier	range		7610236	1					
ANR	7614569	ElseStatement	else		7610236	0					
ANR	7614570	IfStatement	"if ( ! strcmp ( token , ""g"" ) )"		7610236	0					
ANR	7614571	Condition	"! strcmp ( token , ""g"" )"	1540:31:62552:62570	7610236	0	True				
ANR	7614572	UnaryOperationExpression	"! strcmp ( token , ""g"" )"		7610236	0					
ANR	7614573	UnaryOperator	!		7610236	0					
ANR	7614574	CallExpression	"strcmp ( token , ""g"" )"		7610236	1					
ANR	7614575	Callee	strcmp		7610236	0					
ANR	7614576	Identifier	strcmp		7610236	0					
ANR	7614577	ArgumentList	token		7610236	1					
ANR	7614578	Argument	token		7610236	0					
ANR	7614579	Identifier	token		7610236	0					
ANR	7614580	Argument	"""g"""		7610236	1					
ANR	7614581	PrimaryExpression	"""g"""		7610236	0					
ANR	7614582	CompoundStatement		969:52:37543:37543	7610236	1					
ANR	7614583	ExpressionStatement	parameters -> jpwl_sens_range = range	1542:24:62637:62672	7610236	0	True				
ANR	7614584	AssignmentExpression	parameters -> jpwl_sens_range = range		7610236	0		=			
ANR	7614585	PtrMemberAccess	parameters -> jpwl_sens_range		7610236	0					
ANR	7614586	Identifier	parameters		7610236	0					
ANR	7614587	Identifier	jpwl_sens_range		7610236	1					
ANR	7614588	Identifier	range		7610236	1					
ANR	7614589	ElseStatement	else		7610236	0					
ANR	7614590	CompoundStatement		973:27:37672:37672	7610236	0					
ANR	7614591	ExpressionStatement	"fprintf ( stderr , ""ERROR -> invalid range selection = %s\\n"" , token )"	1545:24:62728:62793	7610236	0	True				
ANR	7614592	CallExpression	"fprintf ( stderr , ""ERROR -> invalid range selection = %s\\n"" , token )"		7610236	0					
ANR	7614593	Callee	fprintf		7610236	0					
ANR	7614594	Identifier	fprintf		7610236	0					
ANR	7614595	ArgumentList	stderr		7610236	1					
ANR	7614596	Argument	stderr		7610236	0					
ANR	7614597	Identifier	stderr		7610236	0					
ANR	7614598	Argument	"""ERROR -> invalid range selection = %s\\n"""		7610236	1					
ANR	7614599	PrimaryExpression	"""ERROR -> invalid range selection = %s\\n"""		7610236	0					
ANR	7614600	Argument	token		7610236	2					
ANR	7614601	Identifier	token		7610236	0					
ANR	7614602	ReturnStatement	return 1 ;	1546:24:62819:62827	7610236	1	True				
ANR	7614603	PrimaryExpression	1		7610236	0					
ANR	7614604	ExpressionStatement		1547:21:62850:62850	7610236	2	True				
ANR	7614605	ExpressionStatement	"token = strtok ( NULL , "","" )"	1552:16:62929:62954	7610236	6	True				
ANR	7614606	AssignmentExpression	"token = strtok ( NULL , "","" )"		7610236	0		=			
ANR	7614607	Identifier	token		7610236	0					
ANR	7614608	CallExpression	"strtok ( NULL , "","" )"		7610236	1					
ANR	7614609	Callee	strtok		7610236	0					
ANR	7614610	Identifier	strtok		7610236	0					
ANR	7614611	ArgumentList	NULL		7610236	1					
ANR	7614612	Argument	NULL		7610236	0					
ANR	7614613	Identifier	NULL		7610236	0					
ANR	7614614	Argument	""","""		7610236	1					
ANR	7614615	PrimaryExpression	""","""		7610236	0					
ANR	7614616	ExpressionStatement		1553:13:62969:62969	7610236	5	True				
ANR	7614617	ExpressionStatement	"fprintf ( stdout , ""Info: JPWL capabilities enabled\\n"" )"	1557:12:63013:63065	7610236	6	True				
ANR	7614618	CallExpression	"fprintf ( stdout , ""Info: JPWL capabilities enabled\\n"" )"		7610236	0					
ANR	7614619	Callee	fprintf		7610236	0					
ANR	7614620	Identifier	fprintf		7610236	0					
ANR	7614621	ArgumentList	stdout		7610236	1					
ANR	7614622	Argument	stdout		7610236	0					
ANR	7614623	Identifier	stdout		7610236	0					
ANR	7614624	Argument	"""Info: JPWL capabilities enabled\\n"""		7610236	1					
ANR	7614625	PrimaryExpression	"""Info: JPWL capabilities enabled\\n"""		7610236	0					
ANR	7614626	ExpressionStatement	parameters -> jpwl_epc_on = OPJ_TRUE	1558:12:63079:63113	7610236	7	True				
ANR	7614627	AssignmentExpression	parameters -> jpwl_epc_on = OPJ_TRUE		7610236	0		=			
ANR	7614628	PtrMemberAccess	parameters -> jpwl_epc_on		7610236	0					
ANR	7614629	Identifier	parameters		7610236	0					
ANR	7614630	Identifier	jpwl_epc_on		7610236	1					
ANR	7614631	Identifier	OPJ_TRUE		7610236	1					
ANR	7614632	BreakStatement	break ;	1561:8:63134:63139	7610236	92	True				
ANR	7614633	Label	case 'J' :	1566:8:63263:63271	7610236	93	True				
ANR	7614634	CompoundStatement		995:18:38243:38243	7610236	94					
ANR	7614635	ExpressionStatement	parameters -> jpip_on = OPJ_TRUE	1567:12:63309:63339	7610236	0	True				
ANR	7614636	AssignmentExpression	parameters -> jpip_on = OPJ_TRUE		7610236	0		=			
ANR	7614637	PtrMemberAccess	parameters -> jpip_on		7610236	0					
ANR	7614638	Identifier	parameters		7610236	0					
ANR	7614639	Identifier	jpip_on		7610236	1					
ANR	7614640	Identifier	OPJ_TRUE		7610236	1					
ANR	7614641	BreakStatement	break ;	1569:8:63359:63364	7610236	95	True				
ANR	7614642	Label	default :	1573:8:63445:63452	7610236	96	True				
ANR	7614643	Identifier	default		7610236	0					
ANR	7614644	ExpressionStatement	"fprintf ( stderr , ""[WARNING] An invalid option has been ignored\\n"" )"	1574:12:63466:63531	7610236	97	True				
ANR	7614645	CallExpression	"fprintf ( stderr , ""[WARNING] An invalid option has been ignored\\n"" )"		7610236	0					
ANR	7614646	Callee	fprintf		7610236	0					
ANR	7614647	Identifier	fprintf		7610236	0					
ANR	7614648	ArgumentList	stderr		7610236	1					
ANR	7614649	Argument	stderr		7610236	0					
ANR	7614650	Identifier	stderr		7610236	0					
ANR	7614651	Argument	"""[WARNING] An invalid option has been ignored\\n"""		7610236	1					
ANR	7614652	PrimaryExpression	"""[WARNING] An invalid option has been ignored\\n"""		7610236	0					
ANR	7614653	BreakStatement	break ;	1575:12:63545:63550	7610236	98	True				
ANR	7614654	Condition	c != - 1	1577:13:63575:63581	7610236	1	True				
ANR	7614655	EqualityExpression	c != - 1		7610236	0		!=			
ANR	7614656	Identifier	c		7610236	0					
ANR	7614657	UnaryOperationExpression	- 1		7610236	1					
ANR	7614658	UnaryOperator	-		7610236	0					
ANR	7614659	PrimaryExpression	1		7610236	1					
ANR	7614660	IfStatement	if ( img_fol -> set_imgdir == 1 )		7610236	16					
ANR	7614661	Condition	img_fol -> set_imgdir == 1	1579:8:63594:63617	7610236	0	True				
ANR	7614662	EqualityExpression	img_fol -> set_imgdir == 1		7610236	0		==			
ANR	7614663	PtrMemberAccess	img_fol -> set_imgdir		7610236	0					
ANR	7614664	Identifier	img_fol		7610236	0					
ANR	7614665	Identifier	set_imgdir		7610236	1					
ANR	7614666	PrimaryExpression	1		7610236	1					
ANR	7614667	CompoundStatement		1008:34:38590:38590	7610236	1					
ANR	7614668	IfStatement	if ( ! ( parameters -> infile [ 0 ] == 0 ) )		7610236	0					
ANR	7614669	Condition	! ( parameters -> infile [ 0 ] == 0 )	1580:12:63634:63662	7610236	0	True				
ANR	7614670	UnaryOperationExpression	! ( parameters -> infile [ 0 ] == 0 )		7610236	0					
ANR	7614671	UnaryOperator	!		7610236	0					
ANR	7614672	EqualityExpression	parameters -> infile [ 0 ] == 0		7610236	1		==			
ANR	7614673	ArrayIndexing	parameters -> infile [ 0 ]		7610236	0					
ANR	7614674	PtrMemberAccess	parameters -> infile		7610236	0					
ANR	7614675	Identifier	parameters		7610236	0					
ANR	7614676	Identifier	infile		7610236	1					
ANR	7614677	PrimaryExpression	0		7610236	1					
ANR	7614678	PrimaryExpression	0		7610236	1					
ANR	7614679	CompoundStatement		1009:43:38635:38635	7610236	1					
ANR	7614680	ExpressionStatement	"fprintf ( stderr , ""[ERROR] options -ImgDir and -i cannot be used together !!\\n"" )"	1581:12:63679:63757	7610236	0	True				
ANR	7614681	CallExpression	"fprintf ( stderr , ""[ERROR] options -ImgDir and -i cannot be used together !!\\n"" )"		7610236	0					
ANR	7614682	Callee	fprintf		7610236	0					
ANR	7614683	Identifier	fprintf		7610236	0					
ANR	7614684	ArgumentList	stderr		7610236	1					
ANR	7614685	Argument	stderr		7610236	0					
ANR	7614686	Identifier	stderr		7610236	0					
ANR	7614687	Argument	"""[ERROR] options -ImgDir and -i cannot be used together !!\\n"""		7610236	1					
ANR	7614688	PrimaryExpression	"""[ERROR] options -ImgDir and -i cannot be used together !!\\n"""		7610236	0					
ANR	7614689	ReturnStatement	return 1 ;	1582:12:63771:63779	7610236	1	True				
ANR	7614690	PrimaryExpression	1		7610236	0					
ANR	7614691	IfStatement	if ( img_fol -> set_out_format == 0 )		7610236	1					
ANR	7614692	Condition	img_fol -> set_out_format == 0	1584:12:63803:63830	7610236	0	True				
ANR	7614693	EqualityExpression	img_fol -> set_out_format == 0		7610236	0		==			
ANR	7614694	PtrMemberAccess	img_fol -> set_out_format		7610236	0					
ANR	7614695	Identifier	img_fol		7610236	0					
ANR	7614696	Identifier	set_out_format		7610236	1					
ANR	7614697	PrimaryExpression	0		7610236	1					
ANR	7614698	CompoundStatement		1013:42:38803:38803	7610236	1					
ANR	7614699	ExpressionStatement	"fprintf ( stderr , ""[ERROR] When -ImgDir is used, -OutFor <FORMAT> must be used !!\\n"" )"	1585:12:63847:63950	7610236	0	True				
ANR	7614700	CallExpression	"fprintf ( stderr , ""[ERROR] When -ImgDir is used, -OutFor <FORMAT> must be used !!\\n"" )"		7610236	0					
ANR	7614701	Callee	fprintf		7610236	0					
ANR	7614702	Identifier	fprintf		7610236	0					
ANR	7614703	ArgumentList	stderr		7610236	1					
ANR	7614704	Argument	stderr		7610236	0					
ANR	7614705	Identifier	stderr		7610236	0					
ANR	7614706	Argument	"""[ERROR] When -ImgDir is used, -OutFor <FORMAT> must be used !!\\n"""		7610236	1					
ANR	7614707	PrimaryExpression	"""[ERROR] When -ImgDir is used, -OutFor <FORMAT> must be used !!\\n"""		7610236	0					
ANR	7614708	ExpressionStatement	"fprintf ( stderr , ""Only one format allowed! Valid formats are j2k and jp2!!\\n"" )"	1587:12:63964:64041	7610236	1	True				
ANR	7614709	CallExpression	"fprintf ( stderr , ""Only one format allowed! Valid formats are j2k and jp2!!\\n"" )"		7610236	0					
ANR	7614710	Callee	fprintf		7610236	0					
ANR	7614711	Identifier	fprintf		7610236	0					
ANR	7614712	ArgumentList	stderr		7610236	1					
ANR	7614713	Argument	stderr		7610236	0					
ANR	7614714	Identifier	stderr		7610236	0					
ANR	7614715	Argument	"""Only one format allowed! Valid formats are j2k and jp2!!\\n"""		7610236	1					
ANR	7614716	PrimaryExpression	"""Only one format allowed! Valid formats are j2k and jp2!!\\n"""		7610236	0					
ANR	7614717	ReturnStatement	return 1 ;	1588:12:64055:64063	7610236	2	True				
ANR	7614718	PrimaryExpression	1		7610236	0					
ANR	7614719	IfStatement	if ( ! ( ( parameters -> outfile [ 0 ] == 0 ) ) )		7610236	2					
ANR	7614720	Condition	! ( ( parameters -> outfile [ 0 ] == 0 ) )	1590:12:64087:64118	7610236	0	True				
ANR	7614721	UnaryOperationExpression	! ( ( parameters -> outfile [ 0 ] == 0 ) )		7610236	0					
ANR	7614722	UnaryOperator	!		7610236	0					
ANR	7614723	EqualityExpression	parameters -> outfile [ 0 ] == 0		7610236	1		==			
ANR	7614724	ArrayIndexing	parameters -> outfile [ 0 ]		7610236	0					
ANR	7614725	PtrMemberAccess	parameters -> outfile		7610236	0					
ANR	7614726	Identifier	parameters		7610236	0					
ANR	7614727	Identifier	outfile		7610236	1					
ANR	7614728	PrimaryExpression	0		7610236	1					
ANR	7614729	PrimaryExpression	0		7610236	1					
ANR	7614730	CompoundStatement		1019:46:39091:39091	7610236	1					
ANR	7614731	ExpressionStatement	"fprintf ( stderr , ""[ERROR] options -ImgDir and -o cannot be used together !!\\n"" )"	1591:12:64135:64213	7610236	0	True				
ANR	7614732	CallExpression	"fprintf ( stderr , ""[ERROR] options -ImgDir and -o cannot be used together !!\\n"" )"		7610236	0					
ANR	7614733	Callee	fprintf		7610236	0					
ANR	7614734	Identifier	fprintf		7610236	0					
ANR	7614735	ArgumentList	stderr		7610236	1					
ANR	7614736	Argument	stderr		7610236	0					
ANR	7614737	Identifier	stderr		7610236	0					
ANR	7614738	Argument	"""[ERROR] options -ImgDir and -o cannot be used together !!\\n"""		7610236	1					
ANR	7614739	PrimaryExpression	"""[ERROR] options -ImgDir and -o cannot be used together !!\\n"""		7610236	0					
ANR	7614740	ExpressionStatement	"fprintf ( stderr , ""Specify OutputFormat using -OutFor<FORMAT> !!\\n"" )"	1592:12:64227:64293	7610236	1	True				
ANR	7614741	CallExpression	"fprintf ( stderr , ""Specify OutputFormat using -OutFor<FORMAT> !!\\n"" )"		7610236	0					
ANR	7614742	Callee	fprintf		7610236	0					
ANR	7614743	Identifier	fprintf		7610236	0					
ANR	7614744	ArgumentList	stderr		7610236	1					
ANR	7614745	Argument	stderr		7610236	0					
ANR	7614746	Identifier	stderr		7610236	0					
ANR	7614747	Argument	"""Specify OutputFormat using -OutFor<FORMAT> !!\\n"""		7610236	1					
ANR	7614748	PrimaryExpression	"""Specify OutputFormat using -OutFor<FORMAT> !!\\n"""		7610236	0					
ANR	7614749	ReturnStatement	return 1 ;	1593:12:64307:64315	7610236	2	True				
ANR	7614750	PrimaryExpression	1		7610236	0					
ANR	7614751	ElseStatement	else		7610236	0					
ANR	7614752	CompoundStatement		1024:11:39308:39308	7610236	0					
ANR	7614753	IfStatement	if ( ( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 ) )		7610236	0					
ANR	7614754	Condition	( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 )	1596:12:64352:64412	7610236	0	True				
ANR	7614755	OrExpression	( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 )		7610236	0		||			
ANR	7614756	EqualityExpression	parameters -> infile [ 0 ] == 0		7610236	0		==			
ANR	7614757	ArrayIndexing	parameters -> infile [ 0 ]		7610236	0					
ANR	7614758	PtrMemberAccess	parameters -> infile		7610236	0					
ANR	7614759	Identifier	parameters		7610236	0					
ANR	7614760	Identifier	infile		7610236	1					
ANR	7614761	PrimaryExpression	0		7610236	1					
ANR	7614762	PrimaryExpression	0		7610236	1					
ANR	7614763	EqualityExpression	parameters -> outfile [ 0 ] == 0		7610236	1		==			
ANR	7614764	ArrayIndexing	parameters -> outfile [ 0 ]		7610236	0					
ANR	7614765	PtrMemberAccess	parameters -> outfile		7610236	0					
ANR	7614766	Identifier	parameters		7610236	0					
ANR	7614767	Identifier	outfile		7610236	1					
ANR	7614768	PrimaryExpression	0		7610236	1					
ANR	7614769	PrimaryExpression	0		7610236	1					
ANR	7614770	CompoundStatement		1025:75:39385:39385	7610236	1					
ANR	7614771	Statement	fprintf	1597:12:64429:64435	7610236	0	True				
ANR	7614772	Statement	(	1597:19:64436:64436	7610236	1	True				
ANR	7614773	Statement	stderr	1597:20:64437:64442	7610236	2	True				
ANR	7614774	Statement	","	1597:26:64443:64443	7610236	3	True				
ANR	7614775	Statement	"""[ERROR] Required parameters are missing\\n"""	1597:28:64445:64487	7610236	4	True				
ANR	7614776	Statement	"""Example: %s -i image.pgm -o image.j2k\\n"""	1598:20:64509:64549	7610236	5	True				
ANR	7614777	Statement	","	1598:61:64550:64550	7610236	6	True				
ANR	7614778	Statement	argv	1598:63:64552:64555	7610236	7	True				
ANR	7614779	Statement	[	1598:67:64556:64556	7610236	8	True				
ANR	7614780	Statement	0	1598:68:64557:64557	7610236	9	True				
ANR	7614781	Statement	]	1598:69:64558:64558	7610236	10	True				
ANR	7614782	Statement	)	1598:70:64559:64559	7610236	11	True				
ANR	7614783	ExpressionStatement		1598:71:64560:64560	7610236	12	True				
ANR	7614784	ExpressionStatement	"fprintf ( stderr , ""   Help: %s -h\\n"" , argv [ 0 ] )"	1599:12:64574:64618	7610236	13	True				
ANR	7614785	CallExpression	"fprintf ( stderr , ""   Help: %s -h\\n"" , argv [ 0 ] )"		7610236	0					
ANR	7614786	Callee	fprintf		7610236	0					
ANR	7614787	Identifier	fprintf		7610236	0					
ANR	7614788	ArgumentList	stderr		7610236	1					
ANR	7614789	Argument	stderr		7610236	0					
ANR	7614790	Identifier	stderr		7610236	0					
ANR	7614791	Argument	"""   Help: %s -h\\n"""		7610236	1					
ANR	7614792	PrimaryExpression	"""   Help: %s -h\\n"""		7610236	0					
ANR	7614793	Argument	argv [ 0 ]		7610236	2					
ANR	7614794	ArrayIndexing	argv [ 0 ]		7610236	0					
ANR	7614795	Identifier	argv		7610236	0					
ANR	7614796	PrimaryExpression	0		7610236	1					
ANR	7614797	ReturnStatement	return 1 ;	1600:12:64632:64640	7610236	14	True				
ANR	7614798	PrimaryExpression	1		7610236	0					
ANR	7614799	IfStatement	if ( ( parameters -> decod_format == RAW_DFMT && raw_cp -> rawWidth == 0 ) || ( parameters -> decod_format == RAWL_DFMT && raw_cp -> rawWidth == 0 ) )		7610236	17					
ANR	7614800	Condition	( parameters -> decod_format == RAW_DFMT && raw_cp -> rawWidth == 0 ) || ( parameters -> decod_format == RAWL_DFMT && raw_cp -> rawWidth == 0 )	1604:8:64667:64809	7610236	0	True				
ANR	7614801	OrExpression	( parameters -> decod_format == RAW_DFMT && raw_cp -> rawWidth == 0 ) || ( parameters -> decod_format == RAWL_DFMT && raw_cp -> rawWidth == 0 )		7610236	0		||			
ANR	7614802	AndExpression	parameters -> decod_format == RAW_DFMT && raw_cp -> rawWidth == 0		7610236	0		&&			
ANR	7614803	EqualityExpression	parameters -> decod_format == RAW_DFMT		7610236	0		==			
ANR	7614804	PtrMemberAccess	parameters -> decod_format		7610236	0					
ANR	7614805	Identifier	parameters		7610236	0					
ANR	7614806	Identifier	decod_format		7610236	1					
ANR	7614807	Identifier	RAW_DFMT		7610236	1					
ANR	7614808	EqualityExpression	raw_cp -> rawWidth == 0		7610236	1		==			
ANR	7614809	PtrMemberAccess	raw_cp -> rawWidth		7610236	0					
ANR	7614810	Identifier	raw_cp		7610236	0					
ANR	7614811	Identifier	rawWidth		7610236	1					
ANR	7614812	PrimaryExpression	0		7610236	1					
ANR	7614813	AndExpression	parameters -> decod_format == RAWL_DFMT && raw_cp -> rawWidth == 0		7610236	1		&&			
ANR	7614814	EqualityExpression	parameters -> decod_format == RAWL_DFMT		7610236	0		==			
ANR	7614815	PtrMemberAccess	parameters -> decod_format		7610236	0					
ANR	7614816	Identifier	parameters		7610236	0					
ANR	7614817	Identifier	decod_format		7610236	1					
ANR	7614818	Identifier	RAWL_DFMT		7610236	1					
ANR	7614819	EqualityExpression	raw_cp -> rawWidth == 0		7610236	1		==			
ANR	7614820	PtrMemberAccess	raw_cp -> rawWidth		7610236	0					
ANR	7614821	Identifier	raw_cp		7610236	0					
ANR	7614822	Identifier	rawWidth		7610236	1					
ANR	7614823	PrimaryExpression	0		7610236	1					
ANR	7614824	CompoundStatement		1034:81:39782:39782	7610236	1					
ANR	7614825	ExpressionStatement	"fprintf ( stderr , ""[ERROR] invalid raw image parameters\\n"" )"	1606:8:64822:64879	7610236	0	True				
ANR	7614826	CallExpression	"fprintf ( stderr , ""[ERROR] invalid raw image parameters\\n"" )"		7610236	0					
ANR	7614827	Callee	fprintf		7610236	0					
ANR	7614828	Identifier	fprintf		7610236	0					
ANR	7614829	ArgumentList	stderr		7610236	1					
ANR	7614830	Argument	stderr		7610236	0					
ANR	7614831	Identifier	stderr		7610236	0					
ANR	7614832	Argument	"""[ERROR] invalid raw image parameters\\n"""		7610236	1					
ANR	7614833	PrimaryExpression	"""[ERROR] invalid raw image parameters\\n"""		7610236	0					
ANR	7614834	ExpressionStatement	"fprintf ( stderr , ""Please use the Format option -F:\\n"" )"	1607:8:64889:64942	7610236	1	True				
ANR	7614835	CallExpression	"fprintf ( stderr , ""Please use the Format option -F:\\n"" )"		7610236	0					
ANR	7614836	Callee	fprintf		7610236	0					
ANR	7614837	Identifier	fprintf		7610236	0					
ANR	7614838	ArgumentList	stderr		7610236	1					
ANR	7614839	Argument	stderr		7610236	0					
ANR	7614840	Identifier	stderr		7610236	0					
ANR	7614841	Argument	"""Please use the Format option -F:\\n"""		7610236	1					
ANR	7614842	PrimaryExpression	"""Please use the Format option -F:\\n"""		7610236	0					
ANR	7614843	ExpressionStatement	"fprintf ( stderr , ""-F rawWidth,rawHeight,rawComp,rawBitDepth,s/u (Signed/Unsigned)\\n"" )"	1608:8:64952:65052	7610236	2	True				
ANR	7614844	CallExpression	"fprintf ( stderr , ""-F rawWidth,rawHeight,rawComp,rawBitDepth,s/u (Signed/Unsigned)\\n"" )"		7610236	0					
ANR	7614845	Callee	fprintf		7610236	0					
ANR	7614846	Identifier	fprintf		7610236	0					
ANR	7614847	ArgumentList	stderr		7610236	1					
ANR	7614848	Argument	stderr		7610236	0					
ANR	7614849	Identifier	stderr		7610236	0					
ANR	7614850	Argument	"""-F rawWidth,rawHeight,rawComp,rawBitDepth,s/u (Signed/Unsigned)\\n"""		7610236	1					
ANR	7614851	PrimaryExpression	"""-F rawWidth,rawHeight,rawComp,rawBitDepth,s/u (Signed/Unsigned)\\n"""		7610236	0					
ANR	7614852	ExpressionStatement	"fprintf ( stderr , ""Example: -i lena.raw -o lena.j2k -F 512,512,3,8,u\\n"" )"	1610:8:65062:65132	7610236	3	True				
ANR	7614853	CallExpression	"fprintf ( stderr , ""Example: -i lena.raw -o lena.j2k -F 512,512,3,8,u\\n"" )"		7610236	0					
ANR	7614854	Callee	fprintf		7610236	0					
ANR	7614855	Identifier	fprintf		7610236	0					
ANR	7614856	ArgumentList	stderr		7610236	1					
ANR	7614857	Argument	stderr		7610236	0					
ANR	7614858	Identifier	stderr		7610236	0					
ANR	7614859	Argument	"""Example: -i lena.raw -o lena.j2k -F 512,512,3,8,u\\n"""		7610236	1					
ANR	7614860	PrimaryExpression	"""Example: -i lena.raw -o lena.j2k -F 512,512,3,8,u\\n"""		7610236	0					
ANR	7614861	ExpressionStatement	"fprintf ( stderr , ""Aborting\\n"" )"	1611:8:65142:65171	7610236	4	True				
ANR	7614862	CallExpression	"fprintf ( stderr , ""Aborting\\n"" )"		7610236	0					
ANR	7614863	Callee	fprintf		7610236	0					
ANR	7614864	Identifier	fprintf		7610236	0					
ANR	7614865	ArgumentList	stderr		7610236	1					
ANR	7614866	Argument	stderr		7610236	0					
ANR	7614867	Identifier	stderr		7610236	0					
ANR	7614868	Argument	"""Aborting\\n"""		7610236	1					
ANR	7614869	PrimaryExpression	"""Aborting\\n"""		7610236	0					
ANR	7614870	ReturnStatement	return 1 ;	1612:8:65181:65189	7610236	5	True				
ANR	7614871	PrimaryExpression	1		7610236	0					
ANR	7614872	IfStatement	if ( ( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_alloc ^ parameters -> cp_fixed_quality ) ) )		7610236	18					
ANR	7614873	Condition	( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_alloc ^ parameters -> cp_fixed_quality ) )	1615:8:65206:65432	7610236	0	True				
ANR	7614874	AndExpression	( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_alloc ^ parameters -> cp_fixed_quality ) )		7610236	0		&&			
ANR	7614875	OrExpression	parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality		7610236	0		||			
ANR	7614876	PtrMemberAccess	parameters -> cp_disto_alloc		7610236	0					
ANR	7614877	Identifier	parameters		7610236	0					
ANR	7614878	Identifier	cp_disto_alloc		7610236	1					
ANR	7614879	OrExpression	parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality		7610236	1		||			
ANR	7614880	PtrMemberAccess	parameters -> cp_fixed_alloc		7610236	0					
ANR	7614881	Identifier	parameters		7610236	0					
ANR	7614882	Identifier	cp_fixed_alloc		7610236	1					
ANR	7614883	PtrMemberAccess	parameters -> cp_fixed_quality		7610236	1					
ANR	7614884	Identifier	parameters		7610236	0					
ANR	7614885	Identifier	cp_fixed_quality		7610236	1					
ANR	7614886	UnaryOperationExpression	! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_alloc ^ parameters -> cp_fixed_quality )		7610236	1					
ANR	7614887	UnaryOperator	!		7610236	0					
ANR	7614888	ExclusiveOrExpression	parameters -> cp_disto_alloc ^ parameters -> cp_fixed_alloc ^ parameters -> cp_fixed_quality		7610236	1		^			
ANR	7614889	PtrMemberAccess	parameters -> cp_disto_alloc		7610236	0					
ANR	7614890	Identifier	parameters		7610236	0					
ANR	7614891	Identifier	cp_disto_alloc		7610236	1					
ANR	7614892	ExclusiveOrExpression	parameters -> cp_fixed_alloc ^ parameters -> cp_fixed_quality		7610236	1		^			
ANR	7614893	PtrMemberAccess	parameters -> cp_fixed_alloc		7610236	0					
ANR	7614894	Identifier	parameters		7610236	0					
ANR	7614895	Identifier	cp_fixed_alloc		7610236	1					
ANR	7614896	PtrMemberAccess	parameters -> cp_fixed_quality		7610236	1					
ANR	7614897	Identifier	parameters		7610236	0					
ANR	7614898	Identifier	cp_fixed_quality		7610236	1					
ANR	7614899	CompoundStatement		1047:50:40405:40405	7610236	1					
ANR	7614900	ExpressionStatement	"fprintf ( stderr , ""[ERROR] options -r -q and -f cannot be used together !!\\n"" )"	1619:8:65445:65521	7610236	0	True				
ANR	7614901	CallExpression	"fprintf ( stderr , ""[ERROR] options -r -q and -f cannot be used together !!\\n"" )"		7610236	0					
ANR	7614902	Callee	fprintf		7610236	0					
ANR	7614903	Identifier	fprintf		7610236	0					
ANR	7614904	ArgumentList	stderr		7610236	1					
ANR	7614905	Argument	stderr		7610236	0					
ANR	7614906	Identifier	stderr		7610236	0					
ANR	7614907	Argument	"""[ERROR] options -r -q and -f cannot be used together !!\\n"""		7610236	1					
ANR	7614908	PrimaryExpression	"""[ERROR] options -r -q and -f cannot be used together !!\\n"""		7610236	0					
ANR	7614909	ReturnStatement	return 1 ;	1620:8:65531:65539	7610236	1	True				
ANR	7614910	PrimaryExpression	1		7610236	0					
ANR	7614911	IfStatement	if ( parameters -> tcp_numlayers == 0 )		7610236	19					
ANR	7614912	Condition	parameters -> tcp_numlayers == 0	1627:8:65795:65824	7610236	0	True				
ANR	7614913	EqualityExpression	parameters -> tcp_numlayers == 0		7610236	0		==			
ANR	7614914	PtrMemberAccess	parameters -> tcp_numlayers		7610236	0					
ANR	7614915	Identifier	parameters		7610236	0					
ANR	7614916	Identifier	tcp_numlayers		7610236	1					
ANR	7614917	PrimaryExpression	0		7610236	1					
ANR	7614918	CompoundStatement		1056:40:40797:40797	7610236	1					
ANR	7614919	ExpressionStatement	parameters -> tcp_rates [ 0 ] = 0	1628:8:65837:65865	7610236	0	True				
ANR	7614920	AssignmentExpression	parameters -> tcp_rates [ 0 ] = 0		7610236	0		=			
ANR	7614921	ArrayIndexing	parameters -> tcp_rates [ 0 ]		7610236	0					
ANR	7614922	PtrMemberAccess	parameters -> tcp_rates		7610236	0					
ANR	7614923	Identifier	parameters		7610236	0					
ANR	7614924	Identifier	tcp_rates		7610236	1					
ANR	7614925	PrimaryExpression	0		7610236	1					
ANR	7614926	PrimaryExpression	0		7610236	1					
ANR	7614927	ExpressionStatement	parameters -> tcp_numlayers ++	1629:8:65875:65902	7610236	1	True				
ANR	7614928	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		7610236	0					
ANR	7614929	PtrMemberAccess	parameters -> tcp_numlayers		7610236	0					
ANR	7614930	Identifier	parameters		7610236	0					
ANR	7614931	Identifier	tcp_numlayers		7610236	1					
ANR	7614932	IncDec	++		7610236	1					
ANR	7614933	ExpressionStatement	parameters -> cp_disto_alloc = 1	1630:8:65912:65942	7610236	2	True				
ANR	7614934	AssignmentExpression	parameters -> cp_disto_alloc = 1		7610236	0		=			
ANR	7614935	PtrMemberAccess	parameters -> cp_disto_alloc		7610236	0					
ANR	7614936	Identifier	parameters		7610236	0					
ANR	7614937	Identifier	cp_disto_alloc		7610236	1					
ANR	7614938	PrimaryExpression	1		7610236	1					
ANR	7614939	IfStatement	if ( ( parameters -> cp_tx0 > parameters -> image_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> image_offset_y0 ) )		7610236	20					
ANR	7614940	Condition	( parameters -> cp_tx0 > parameters -> image_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> image_offset_y0 )	1633:8:65959:66074	7610236	0	True				
ANR	7614941	OrExpression	( parameters -> cp_tx0 > parameters -> image_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> image_offset_y0 )		7610236	0		||			
ANR	7614942	RelationalExpression	parameters -> cp_tx0 > parameters -> image_offset_x0		7610236	0		>			
ANR	7614943	PtrMemberAccess	parameters -> cp_tx0		7610236	0					
ANR	7614944	Identifier	parameters		7610236	0					
ANR	7614945	Identifier	cp_tx0		7610236	1					
ANR	7614946	PtrMemberAccess	parameters -> image_offset_x0		7610236	1					
ANR	7614947	Identifier	parameters		7610236	0					
ANR	7614948	Identifier	image_offset_x0		7610236	1					
ANR	7614949	RelationalExpression	parameters -> cp_ty0 > parameters -> image_offset_y0		7610236	1		>			
ANR	7614950	PtrMemberAccess	parameters -> cp_ty0		7610236	0					
ANR	7614951	Identifier	parameters		7610236	0					
ANR	7614952	Identifier	cp_ty0		7610236	1					
ANR	7614953	PtrMemberAccess	parameters -> image_offset_y0		7610236	1					
ANR	7614954	Identifier	parameters		7610236	0					
ANR	7614955	Identifier	image_offset_y0		7610236	1					
ANR	7614956	CompoundStatement		1063:64:41047:41047	7610236	1					
ANR	7614957	ExpressionStatement	"fprintf ( stderr , ""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) \\n"" , parameters -> cp_tx0 , parameters -> image_offset_x0 , parameters -> cp_ty0 , parameters -> image_offset_y0 )"	1635:8:66087:66346	7610236	0	True				
ANR	7614958	CallExpression	"fprintf ( stderr , ""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) \\n"" , parameters -> cp_tx0 , parameters -> image_offset_x0 , parameters -> cp_ty0 , parameters -> image_offset_y0 )"		7610236	0					
ANR	7614959	Callee	fprintf		7610236	0					
ANR	7614960	Identifier	fprintf		7610236	0					
ANR	7614961	ArgumentList	stderr		7610236	1					
ANR	7614962	Argument	stderr		7610236	0					
ANR	7614963	Identifier	stderr		7610236	0					
ANR	7614964	Argument	"""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) \\n"""		7610236	1					
ANR	7614965	PrimaryExpression	"""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) \\n"""		7610236	0					
ANR	7614966	Argument	parameters -> cp_tx0		7610236	2					
ANR	7614967	PtrMemberAccess	parameters -> cp_tx0		7610236	0					
ANR	7614968	Identifier	parameters		7610236	0					
ANR	7614969	Identifier	cp_tx0		7610236	1					
ANR	7614970	Argument	parameters -> image_offset_x0		7610236	3					
ANR	7614971	PtrMemberAccess	parameters -> image_offset_x0		7610236	0					
ANR	7614972	Identifier	parameters		7610236	0					
ANR	7614973	Identifier	image_offset_x0		7610236	1					
ANR	7614974	Argument	parameters -> cp_ty0		7610236	4					
ANR	7614975	PtrMemberAccess	parameters -> cp_ty0		7610236	0					
ANR	7614976	Identifier	parameters		7610236	0					
ANR	7614977	Identifier	cp_ty0		7610236	1					
ANR	7614978	Argument	parameters -> image_offset_y0		7610236	5					
ANR	7614979	PtrMemberAccess	parameters -> image_offset_y0		7610236	0					
ANR	7614980	Identifier	parameters		7610236	0					
ANR	7614981	Identifier	image_offset_y0		7610236	1					
ANR	7614982	ReturnStatement	return 1 ;	1639:8:66356:66364	7610236	1	True				
ANR	7614983	PrimaryExpression	1		7610236	0					
ANR	7614984	ForStatement	for ( i = 0 ; i < parameters -> numpocs ; i ++ )		7610236	21					
ANR	7614985	ForInit	i = 0 ;	1642:9:66382:66387	7610236	0	True				
ANR	7614986	AssignmentExpression	i = 0		7610236	0		=			
ANR	7614987	Identifier	i		7610236	0					
ANR	7614988	PrimaryExpression	0		7610236	1					
ANR	7614989	Condition	i < parameters -> numpocs	1642:16:66389:66411	7610236	1	True				
ANR	7614990	RelationalExpression	i < parameters -> numpocs		7610236	0		<			
ANR	7614991	Identifier	i		7610236	0					
ANR	7614992	PtrMemberAccess	parameters -> numpocs		7610236	1					
ANR	7614993	Identifier	parameters		7610236	0					
ANR	7614994	Identifier	numpocs		7610236	1					
ANR	7614995	PostIncDecOperationExpression	i ++	1642:41:66414:66416	7610236	2	True				
ANR	7614996	Identifier	i		7610236	0					
ANR	7614997	IncDec	++		7610236	1					
ANR	7614998	CompoundStatement		1071:46:41389:41389	7610236	3					
ANR	7614999	IfStatement	if ( parameters -> POC [ i ] . prg == - 1 )		7610236	0					
ANR	7615000	Condition	parameters -> POC [ i ] . prg == - 1	1643:12:66433:66460	7610236	0	True				
ANR	7615001	EqualityExpression	parameters -> POC [ i ] . prg == - 1		7610236	0		==			
ANR	7615002	MemberAccess	parameters -> POC [ i ] . prg		7610236	0					
ANR	7615003	ArrayIndexing	parameters -> POC [ i ]		7610236	0					
ANR	7615004	PtrMemberAccess	parameters -> POC		7610236	0					
ANR	7615005	Identifier	parameters		7610236	0					
ANR	7615006	Identifier	POC		7610236	1					
ANR	7615007	Identifier	i		7610236	1					
ANR	7615008	Identifier	prg		7610236	1					
ANR	7615009	UnaryOperationExpression	- 1		7610236	1					
ANR	7615010	UnaryOperator	-		7610236	0					
ANR	7615011	PrimaryExpression	1		7610236	1					
ANR	7615012	CompoundStatement		1072:42:41433:41433	7610236	1					
ANR	7615013	ExpressionStatement	"fprintf ( stderr , ""Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" , i + 1 )"	1644:12:66477:66633	7610236	0	True				
ANR	7615014	CallExpression	"fprintf ( stderr , ""Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" , i + 1 )"		7610236	0					
ANR	7615015	Callee	fprintf		7610236	0					
ANR	7615016	Identifier	fprintf		7610236	0					
ANR	7615017	ArgumentList	stderr		7610236	1					
ANR	7615018	Argument	stderr		7610236	0					
ANR	7615019	Identifier	stderr		7610236	0					
ANR	7615020	Argument	"""Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		7610236	1					
ANR	7615021	PrimaryExpression	"""Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		7610236	0					
ANR	7615022	Argument	i + 1		7610236	2					
ANR	7615023	AdditiveExpression	i + 1		7610236	0		+			
ANR	7615024	Identifier	i		7610236	0					
ANR	7615025	PrimaryExpression	1		7610236	1					
ANR	7615026	IfStatement	if ( ( ( parameters -> decod_format == RAW_DFMT ) || ( parameters -> decod_format == RAWL_DFMT ) ) && ( ( ( raw_cp -> rawComp > 1 ) && ( ( raw_cp -> rawComps [ 1 ] . dx > 1 ) || ( raw_cp -> rawComps [ 1 ] . dy > 1 ) ) ) || ( ( raw_cp -> rawComp > 2 ) && ( ( raw_cp -> rawComps [ 2 ] . dx > 1 ) || ( raw_cp -> rawComps [ 2 ] . dy > 1 ) ) ) ) )		7610236	22					
ANR	7615027	Condition	( ( parameters -> decod_format == RAW_DFMT ) || ( parameters -> decod_format == RAWL_DFMT ) ) && ( ( ( raw_cp -> rawComp > 1 ) && ( ( raw_cp -> rawComps [ 1 ] . dx > 1 ) || ( raw_cp -> rawComps [ 1 ] . dy > 1 ) ) ) || ( ( raw_cp -> rawComp > 2 ) && ( ( raw_cp -> rawComps [ 2 ] . dx > 1 ) || ( raw_cp -> rawComps [ 2 ] . dy > 1 ) ) ) )	1651:8:66729:67122	7610236	0	True				
ANR	7615028	AndExpression	( ( parameters -> decod_format == RAW_DFMT ) || ( parameters -> decod_format == RAWL_DFMT ) ) && ( ( ( raw_cp -> rawComp > 1 ) && ( ( raw_cp -> rawComps [ 1 ] . dx > 1 ) || ( raw_cp -> rawComps [ 1 ] . dy > 1 ) ) ) || ( ( raw_cp -> rawComp > 2 ) && ( ( raw_cp -> rawComps [ 2 ] . dx > 1 ) || ( raw_cp -> rawComps [ 2 ] . dy > 1 ) ) ) )		7610236	0		&&			
ANR	7615029	OrExpression	( parameters -> decod_format == RAW_DFMT ) || ( parameters -> decod_format == RAWL_DFMT )		7610236	0		||			
ANR	7615030	EqualityExpression	parameters -> decod_format == RAW_DFMT		7610236	0		==			
ANR	7615031	PtrMemberAccess	parameters -> decod_format		7610236	0					
ANR	7615032	Identifier	parameters		7610236	0					
ANR	7615033	Identifier	decod_format		7610236	1					
ANR	7615034	Identifier	RAW_DFMT		7610236	1					
ANR	7615035	EqualityExpression	parameters -> decod_format == RAWL_DFMT		7610236	1		==			
ANR	7615036	PtrMemberAccess	parameters -> decod_format		7610236	0					
ANR	7615037	Identifier	parameters		7610236	0					
ANR	7615038	Identifier	decod_format		7610236	1					
ANR	7615039	Identifier	RAWL_DFMT		7610236	1					
ANR	7615040	OrExpression	( ( raw_cp -> rawComp > 1 ) && ( ( raw_cp -> rawComps [ 1 ] . dx > 1 ) || ( raw_cp -> rawComps [ 1 ] . dy > 1 ) ) ) || ( ( raw_cp -> rawComp > 2 ) && ( ( raw_cp -> rawComps [ 2 ] . dx > 1 ) || ( raw_cp -> rawComps [ 2 ] . dy > 1 ) ) )		7610236	1		||			
ANR	7615041	AndExpression	( raw_cp -> rawComp > 1 ) && ( ( raw_cp -> rawComps [ 1 ] . dx > 1 ) || ( raw_cp -> rawComps [ 1 ] . dy > 1 ) )		7610236	0		&&			
ANR	7615042	RelationalExpression	raw_cp -> rawComp > 1		7610236	0		>			
ANR	7615043	PtrMemberAccess	raw_cp -> rawComp		7610236	0					
ANR	7615044	Identifier	raw_cp		7610236	0					
ANR	7615045	Identifier	rawComp		7610236	1					
ANR	7615046	PrimaryExpression	1		7610236	1					
ANR	7615047	OrExpression	( raw_cp -> rawComps [ 1 ] . dx > 1 ) || ( raw_cp -> rawComps [ 1 ] . dy > 1 )		7610236	1		||			
ANR	7615048	RelationalExpression	raw_cp -> rawComps [ 1 ] . dx > 1		7610236	0		>			
ANR	7615049	MemberAccess	raw_cp -> rawComps [ 1 ] . dx		7610236	0					
ANR	7615050	ArrayIndexing	raw_cp -> rawComps [ 1 ]		7610236	0					
ANR	7615051	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7615052	Identifier	raw_cp		7610236	0					
ANR	7615053	Identifier	rawComps		7610236	1					
ANR	7615054	PrimaryExpression	1		7610236	1					
ANR	7615055	Identifier	dx		7610236	1					
ANR	7615056	PrimaryExpression	1		7610236	1					
ANR	7615057	RelationalExpression	raw_cp -> rawComps [ 1 ] . dy > 1		7610236	1		>			
ANR	7615058	MemberAccess	raw_cp -> rawComps [ 1 ] . dy		7610236	0					
ANR	7615059	ArrayIndexing	raw_cp -> rawComps [ 1 ]		7610236	0					
ANR	7615060	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7615061	Identifier	raw_cp		7610236	0					
ANR	7615062	Identifier	rawComps		7610236	1					
ANR	7615063	PrimaryExpression	1		7610236	1					
ANR	7615064	Identifier	dy		7610236	1					
ANR	7615065	PrimaryExpression	1		7610236	1					
ANR	7615066	AndExpression	( raw_cp -> rawComp > 2 ) && ( ( raw_cp -> rawComps [ 2 ] . dx > 1 ) || ( raw_cp -> rawComps [ 2 ] . dy > 1 ) )		7610236	1		&&			
ANR	7615067	RelationalExpression	raw_cp -> rawComp > 2		7610236	0		>			
ANR	7615068	PtrMemberAccess	raw_cp -> rawComp		7610236	0					
ANR	7615069	Identifier	raw_cp		7610236	0					
ANR	7615070	Identifier	rawComp		7610236	1					
ANR	7615071	PrimaryExpression	2		7610236	1					
ANR	7615072	OrExpression	( raw_cp -> rawComps [ 2 ] . dx > 1 ) || ( raw_cp -> rawComps [ 2 ] . dy > 1 )		7610236	1		||			
ANR	7615073	RelationalExpression	raw_cp -> rawComps [ 2 ] . dx > 1		7610236	0		>			
ANR	7615074	MemberAccess	raw_cp -> rawComps [ 2 ] . dx		7610236	0					
ANR	7615075	ArrayIndexing	raw_cp -> rawComps [ 2 ]		7610236	0					
ANR	7615076	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7615077	Identifier	raw_cp		7610236	0					
ANR	7615078	Identifier	rawComps		7610236	1					
ANR	7615079	PrimaryExpression	2		7610236	1					
ANR	7615080	Identifier	dx		7610236	1					
ANR	7615081	PrimaryExpression	1		7610236	1					
ANR	7615082	RelationalExpression	raw_cp -> rawComps [ 2 ] . dy > 1		7610236	1		>			
ANR	7615083	MemberAccess	raw_cp -> rawComps [ 2 ] . dy		7610236	0					
ANR	7615084	ArrayIndexing	raw_cp -> rawComps [ 2 ]		7610236	0					
ANR	7615085	PtrMemberAccess	raw_cp -> rawComps		7610236	0					
ANR	7615086	Identifier	raw_cp		7610236	0					
ANR	7615087	Identifier	rawComps		7610236	1					
ANR	7615088	PrimaryExpression	2		7610236	1					
ANR	7615089	Identifier	dy		7610236	1					
ANR	7615090	PrimaryExpression	1		7610236	1					
ANR	7615091	CompoundStatement		1086:18:42095:42095	7610236	1					
ANR	7615092	ExpressionStatement	parameters -> tcp_mct = 0	1658:8:67135:67158	7610236	0	True				
ANR	7615093	AssignmentExpression	parameters -> tcp_mct = 0		7610236	0		=			
ANR	7615094	PtrMemberAccess	parameters -> tcp_mct		7610236	0					
ANR	7615095	Identifier	parameters		7610236	0					
ANR	7615096	Identifier	tcp_mct		7610236	1					
ANR	7615097	PrimaryExpression	0		7610236	1					
ANR	7615098	ReturnStatement	return 0 ;	1661:4:67171:67179	7610236	23	True				
ANR	7615099	PrimaryExpression	0		7610236	0					
ANR	7615100	ReturnType	static int		7610236	1					
ANR	7615101	Identifier	parse_cmdline_encoder		7610236	2					
ANR	7615102	ParameterList	"int argc , char * * argv , opj_cparameters_t * parameters , img_fol_t * img_fol , raw_cparameters_t * raw_cp , char * indexfilename , size_t indexfilename_size"		7610236	3					
ANR	7615103	Parameter	int argc	568:33:24781:24788	7610236	0	True				
ANR	7615104	ParameterType	int		7610236	0					
ANR	7615105	Identifier	argc		7610236	1					
ANR	7615106	Parameter	char * * argv	568:43:24791:24801	7610236	1	True				
ANR	7615107	ParameterType	char * *		7610236	0					
ANR	7615108	Identifier	argv		7610236	1					
ANR	7615109	Parameter	opj_cparameters_t * parameters	569:33:24837:24865	7610236	2	True				
ANR	7615110	ParameterType	opj_cparameters_t *		7610236	0					
ANR	7615111	Identifier	parameters		7610236	1					
ANR	7615112	Parameter	img_fol_t * img_fol	570:33:24901:24918	7610236	3	True				
ANR	7615113	ParameterType	img_fol_t *		7610236	0					
ANR	7615114	Identifier	img_fol		7610236	1					
ANR	7615115	Parameter	raw_cparameters_t * raw_cp	570:53:24921:24945	7610236	4	True				
ANR	7615116	ParameterType	raw_cparameters_t *		7610236	0					
ANR	7615117	Identifier	raw_cp		7610236	1					
ANR	7615118	Parameter	char * indexfilename	570:80:24948:24966	7610236	5	True				
ANR	7615119	ParameterType	char *		7610236	0					
ANR	7615120	Identifier	indexfilename		7610236	1					
ANR	7615121	Parameter	size_t indexfilename_size	571:33:25002:25026	7610236	6	True				
ANR	7615122	ParameterType	size_t		7610236	0					
ANR	7615123	Identifier	indexfilename_size		7610236	1					
ANR	7615124	CFGEntryNode	ENTRY		7610236		True				
ANR	7615125	CFGExitNode	EXIT		7610236		True				
ANR	7615126	Symbol	img_fol		7610236						
ANR	7615127	Symbol	* * parameters		7610236						
ANR	7615128	Symbol	parameters -> jpip_on		7610236						
ANR	7615129	Symbol	parameters -> max_comp_size		7610236						
ANR	7615130	Symbol	strchr		7610236						
ANR	7615131	Symbol	cblockh_init		7610236						
ANR	7615132	Symbol	parameters -> cp_comment		7610236						
ANR	7615133	Symbol	len		7610236						
ANR	7615134	Symbol	raw_cp -> rawComps [ 2 ] . dy		7610236						
ANR	7615135	Symbol	raw_cp -> rawComps [ 2 ] . dx		7610236						
ANR	7615136	Symbol	img_fol -> set_imgdir		7610236						
ANR	7615137	Symbol	lFile		7610236						
ANR	7615138	Symbol	* parameters -> jpwl_pprot_tileno		7610236						
ANR	7615139	Symbol	lStrFread		7610236						
ANR	7615140	Symbol	parameters -> tcp_numlayers		7610236						
ANR	7615141	Symbol	& POC [ numpocs ] . resno1		7610236						
ANR	7615142	Symbol	height		7610236						
ANR	7615143	Symbol	& POC [ numpocs ] . resno0		7610236						
ANR	7615144	Symbol	parameters -> cp_ty0		7610236						
ANR	7615145	Symbol	hprot		7610236						
ANR	7615146	Symbol	cache		7610236						
ANR	7615147	Symbol	* lMatrix		7610236						
ANR	7615148	Symbol	POC		7610236						
ANR	7615149	Symbol	lCurrentPtr		7610236						
ANR	7615150	Symbol	OPJ_CINEMA_48_CS		7610236						
ANR	7615151	Symbol	parameters -> prcw_init		7610236						
ANR	7615152	Symbol	pack		7610236						
ANR	7615153	Symbol	compno		7610236						
ANR	7615154	Symbol	raw_cp -> rawComp		7610236						
ANR	7615155	Symbol	parameters -> jpwl_hprot_TPH_tileno		7610236						
ANR	7615156	Symbol	JPWL_MAX_NO_PACKSPECS		7610236						
ANR	7615157	Symbol	size		7610236						
ANR	7615158	Symbol	sscanf		7610236						
ANR	7615159	Symbol	* parameters -> jpwl_sens_TPH		7610236						
ANR	7615160	Symbol	& parameters -> subsampling_dx		7610236						
ANR	7615161	Symbol	parameters -> prch_init		7610236						
ANR	7615162	Symbol	* lCurrentDoublePtr ++		7610236						
ANR	7615163	Symbol	parameters -> cod_format		7610236						
ANR	7615164	Symbol	ncomp		7610236						
ANR	7615165	Symbol	OPJ_CINEMA_24_CS		7610236						
ANR	7615166	Symbol	OPJ_PROFILE_CINEMA_2K		7610236						
ANR	7615167	Symbol	parameters -> POC		7610236						
ANR	7615168	Symbol	lasttileno		7610236						
ANR	7615169	Symbol	optlist		7610236						
ANR	7615170	Symbol	totlen		7610236						
ANR	7615171	Symbol	parameters -> res_spec		7610236						
ANR	7615172	Symbol	opj_getopt_long		7610236						
ANR	7615173	Symbol	& parameters -> image_offset_y0		7610236						
ANR	7615174	Symbol	sep		7610236						
ANR	7615175	Symbol	fopen		7610236						
ANR	7615176	Symbol	raw_cp -> rawComps [ compno ] . dy		7610236						
ANR	7615177	Symbol	parameters -> tcp_distoratio		7610236						
ANR	7615178	Symbol	c		7610236						
ANR	7615179	Symbol	& parameters -> roi_compno		7610236						
ANR	7615180	Symbol	* substr1		7610236						
ANR	7615181	Symbol	raw_cp -> rawComps [ compno ] . dx		7610236						
ANR	7615182	Symbol	i		7610236						
ANR	7615183	Symbol	j		7610236						
ANR	7615184	Symbol	parameters -> numresolution		7610236						
ANR	7615185	Symbol	SEEK_END		7610236						
ANR	7615186	Symbol	lMctComp		7610236						
ANR	7615187	Symbol	lastdx		7610236						
ANR	7615188	Symbol	indexfilename		7610236						
ANR	7615189	Symbol	s		7610236						
ANR	7615190	Symbol	lastdy		7610236						
ANR	7615191	Symbol	give_progression		7610236						
ANR	7615192	Symbol	* token		7610236						
ANR	7615193	Symbol	& pprot		7610236						
ANR	7615194	Symbol	lFilename		7610236						
ANR	7615195	Symbol	& parameters -> image_offset_x0		7610236						
ANR	7615196	Symbol	stdout		7610236						
ANR	7615197	Symbol	strpbrk		7610236						
ANR	7615198	Symbol	& parameters -> cp_tx0		7610236						
ANR	7615199	Symbol	parameters -> mode		7610236						
ANR	7615200	Symbol	* argv		7610236						
ANR	7615201	Symbol	outformat		7610236						
ANR	7615202	Symbol	strlen		7610236						
ANR	7615203	Symbol	raw_cp -> rawComps		7610236						
ANR	7615204	Symbol	dx		7610236						
ANR	7615205	Symbol	& signo		7610236						
ANR	7615206	Symbol	dy		7610236						
ANR	7615207	Symbol	tile		7610236						
ANR	7615208	Symbol	lTotalComp		7610236						
ANR	7615209	Symbol	& numlayers		7610236						
ANR	7615210	Symbol	ret		7610236						
ANR	7615211	Symbol	& parameters -> cp_tdy		7610236						
ANR	7615212	Symbol	& parameters -> cp_tdx		7610236						
ANR	7615213	Symbol	RAWL_DFMT		7610236						
ANR	7615214	Symbol	parameters -> jpwl_pprot_tileno		7610236						
ANR	7615215	Symbol	parameters -> cp_matrice		7610236						
ANR	7615216	Symbol	stderr		7610236						
ANR	7615217	Symbol	& cblockh_init		7610236						
ANR	7615218	Symbol	POC [ numpocs ] . prg1		7610236						
ANR	7615219	Symbol	* parameters		7610236						
ANR	7615220	Symbol	raw_cp -> rawBitDepth		7610236						
ANR	7615221	Symbol	* raw_cp -> rawComps		7610236						
ANR	7615222	Symbol	parameters -> jpwl_hprot_MH		7610236						
ANR	7615223	Symbol	& tile		7610236						
ANR	7615224	Symbol	* parameters -> jpwl_hprot_TPH_tileno		7610236						
ANR	7615225	Symbol	parameters -> tp_flag		7610236						
ANR	7615226	Symbol	parameters		7610236						
ANR	7615227	Symbol	parameters -> tp_on		7610236						
ANR	7615228	Symbol	ftell		7610236						
ANR	7615229	Symbol	raw_cp -> rawSigned		7610236						
ANR	7615230	Symbol	parameters -> image_offset_x0		7610236						
ANR	7615231	Symbol	parameters -> outfile		7610236						
ANR	7615232	Symbol	& width		7610236						
ANR	7615233	Symbol	numresolution		7610236						
ANR	7615234	Symbol	argv		7610236						
ANR	7615235	Symbol	substr1		7610236						
ANR	7615236	Symbol	substr2		7610236						
ANR	7615237	Symbol	cblockw_init		7610236						
ANR	7615238	Symbol	parameters -> cp_fixed_alloc		7610236						
ANR	7615239	Symbol	* col		7610236						
ANR	7615240	Symbol	signo		7610236						
ANR	7615241	Symbol	parameters -> max_cs_size		7610236						
ANR	7615242	Symbol	& dy		7610236						
ANR	7615243	Symbol	& dx		7610236						
ANR	7615244	Symbol	argc		7610236						
ANR	7615245	Symbol	raw_signed		7610236						
ANR	7615246	Symbol	POC [ numpocs ] . progorder		7610236						
ANR	7615247	Symbol	& mct_mode		7610236						
ANR	7615248	Symbol	matrix_width		7610236						
ANR	7615249	Symbol	& POC [ numpocs ] . layno1		7610236						
ANR	7615250	Symbol	& parameters -> cp_ty0		7610236						
ANR	7615251	Symbol	fps		7610236						
ANR	7615252	Symbol	i2		7610236						
ANR	7615253	Symbol	parameters -> image_offset_y0		7610236						
ANR	7615254	Symbol	lStrLen		7610236						
ANR	7615255	Symbol	REQ_ARG		7610236						
ANR	7615256	Symbol	parameters -> numpocs		7610236						
ANR	7615257	Symbol	lSpace		7610236						
ANR	7615258	Symbol	parameters -> infile		7610236						
ANR	7615259	Symbol	mct_mode		7610236						
ANR	7615260	Symbol	parameters -> tcp_mct		7610236						
ANR	7615261	Symbol	* parameters -> jpwl_pprot		7610236						
ANR	7615262	Symbol	parameters -> jpwl_hprot_TPH		7610236						
ANR	7615263	Symbol	parameters -> rsiz		7610236						
ANR	7615264	Symbol	* lStrLen		7610236						
ANR	7615265	Symbol	* indexfilename		7610236						
ANR	7615266	Symbol	& ncomp		7610236						
ANR	7615267	Symbol	& height		7610236						
ANR	7615268	Symbol	parameters -> jpwl_sens_addr		7610236						
ANR	7615269	Symbol	parameters -> cblockh_init		7610236						
ANR	7615270	Symbol	parameters -> jpwl_epc_on		7610236						
ANR	7615271	Symbol	parameters -> tile_size_on		7610236						
ANR	7615272	Symbol	raw_cp -> rawComps [ 1 ] . dx		7610236						
ANR	7615273	Symbol	sqrt		7610236						
ANR	7615274	Symbol	raw_cp -> rawComps [ 1 ] . dy		7610236						
ANR	7615275	Symbol	long_option		7610236						
ANR	7615276	Symbol	parameters -> jpwl_sens_size		7610236						
ANR	7615277	Symbol	* numpocs		7610236						
ANR	7615278	Symbol	& POC [ numpocs ] . tile		7610236						
ANR	7615279	Symbol	* parameters -> jpwl_sens_TPH_tileno		7610236						
ANR	7615280	Symbol	& pack		7610236						
ANR	7615281	Symbol	* parameters -> POC		7610236						
ANR	7615282	Symbol	raw_cp -> rawWidth		7610236						
ANR	7615283	Symbol	opj_optarg		7610236						
ANR	7615284	Symbol	NO_ARG		7610236						
ANR	7615285	Symbol	& bitdepth		7610236						
ANR	7615286	Symbol	parameters -> tcp_rates		7610236						
ANR	7615287	Symbol	parameters -> prog_order		7610236						
ANR	7615288	Symbol	fread		7610236						
ANR	7615289	Symbol	* compno		7610236						
ANR	7615290	Symbol	lCurrentDoublePtr		7610236						
ANR	7615291	Symbol	res_spec		7610236						
ANR	7615292	Symbol	* opj_optarg		7610236						
ANR	7615293	Symbol	img_fol -> set_out_format		7610236						
ANR	7615294	Symbol	parameters -> jpwl_sens_range		7610236						
ANR	7615295	Symbol	parameters -> csty		7610236						
ANR	7615296	Symbol	* l_int_ptr ++		7610236						
ANR	7615297	Symbol	& sep		7610236						
ANR	7615298	Symbol	range		7610236						
ANR	7615299	Symbol	parameters -> jpwl_sens_TPH_tileno		7610236						
ANR	7615300	Symbol	infile		7610236						
ANR	7615301	Symbol	parameters -> jpwl_pprot_packno		7610236						
ANR	7615302	Symbol	parameters -> POC [ i ] . prg		7610236						
ANR	7615303	Symbol	* lCurrentPtr		7610236						
ANR	7615304	Symbol	* raw_cp		7610236						
ANR	7615305	Symbol	lMatrix		7610236						
ANR	7615306	Symbol	parameters -> cp_disto_alloc		7610236						
ANR	7615307	Symbol	atoi		7610236						
ANR	7615308	Symbol	parameters -> jpwl_sens_MH		7610236						
ANR	7615309	Symbol	malloc		7610236						
ANR	7615310	Symbol	img_fol -> imgdirpath		7610236						
ANR	7615311	Symbol	& addr		7610236						
ANR	7615312	Symbol	& parameters -> roi_shift		7610236						
ANR	7615313	Symbol	get_file_format		7610236						
ANR	7615314	Symbol	atof		7610236						
ANR	7615315	Symbol	opj_strcpy_s		7610236						
ANR	7615316	Symbol	& POC [ numpocs ] . compno1		7610236						
ANR	7615317	Symbol	& POC [ numpocs ] . compno0		7610236						
ANR	7615318	Symbol	& size		7610236						
ANR	7615319	Symbol	& parameters -> numresolution		7610236						
ANR	7615320	Symbol	wrong		7610236						
ANR	7615321	Symbol	token		7610236						
ANR	7615322	Symbol	* POC		7610236						
ANR	7615323	Symbol	width		7610236						
ANR	7615324	Symbol	numlayers		7610236						
ANR	7615325	Symbol	* parameters -> jpwl_hprot_TPH		7610236						
ANR	7615326	Symbol	* len		7610236						
ANR	7615327	Symbol	OPJ_CINEMA_48_COMP		7610236						
ANR	7615328	Symbol	col		7610236						
ANR	7615329	Symbol	parameters -> irreversible		7610236						
ANR	7615330	Symbol	& sens		7610236						
ANR	7615331	Symbol	& value		7610236						
ANR	7615332	Symbol	JPWL_PRIVATEINDEX_NAME		7610236						
ANR	7615333	Symbol	OPJ_PROFILE_CINEMA_4K		7610236						
ANR	7615334	Symbol	pprot		7610236						
ANR	7615335	Symbol	parameters -> jpwl_pprot		7610236						
ANR	7615336	Symbol	bitdepth		7610236						
ANR	7615337	Symbol	img_fol -> out_format		7610236						
ANR	7615338	Symbol	* parameters -> infile		7610236						
ANR	7615339	Symbol	OPJ_TRUE		7610236						
ANR	7615340	Symbol	packspec		7610236						
ANR	7615341	Symbol	strcmp		7610236						
ANR	7615342	Symbol	sens		7610236						
ANR	7615343	Symbol	JPWL_MAX_NO_TILESPECS		7610236						
ANR	7615344	Symbol	NULL		7610236						
ANR	7615345	Symbol	parameters -> cblockw_init		7610236						
ANR	7615346	Symbol	strtok		7610236						
ANR	7615347	Symbol	* parameters -> outfile		7610236						
ANR	7615348	Symbol	lNbComp		7610236						
ANR	7615349	Symbol	parameters -> cp_fixed_quality		7610236						
ANR	7615350	Symbol	* * raw_cp		7610236						
ANR	7615351	Symbol	* tilespec		7610236						
ANR	7615352	Symbol	indexfilename_size		7610236						
ANR	7615353	Symbol	parameters -> cp_tx0		7610236						
ANR	7615354	Symbol	raw_cp -> rawHeight		7610236						
ANR	7615355	Symbol	& parameters -> subsampling_dy		7610236						
ANR	7615356	Symbol	outfile		7610236						
ANR	7615357	Symbol	& fps		7610236						
ANR	7615358	Symbol	progression		7610236						
ANR	7615359	Symbol	OPJ_FALSE		7610236						
ANR	7615360	Symbol	of		7610236						
ANR	7615361	Symbol	row		7610236						
ANR	7615362	Symbol	addr		7610236						
ANR	7615363	Symbol	value		7610236						
ANR	7615364	Symbol	SEEK_SET		7610236						
ANR	7615365	Symbol	& cblockw_init		7610236						
ANR	7615366	Symbol	& hprot		7610236						
ANR	7615367	Symbol	RAW_DFMT		7610236						
ANR	7615368	Symbol	OPJ_CINEMA_24_COMP		7610236						
ANR	7615369	Symbol	l_int_ptr		7610236						
ANR	7615370	Symbol	tilespec		7610236						
ANR	7615371	Symbol	* packspec		7610236						
ANR	7615372	Symbol	parameters -> decod_format		7610236						
ANR	7615373	Symbol	raw_cp		7610236						
ANR	7615374	Symbol	* i		7610236						
ANR	7615375	Symbol	* parameters -> tcp_rates		7610236						
ANR	7615376	Symbol	* img_fol		7610236						
ANR	7615377	Symbol	* parameters -> jpwl_pprot_packno		7610236						
ANR	7615378	Symbol	numpocs		7610236						
ANR	7615379	Symbol	parameters -> jpwl_sens_TPH		7610236						
ANR	7615380	Symbol	* s		7610236						
ANR	7615381	Symbol	& range		7610236						
ANR	7615382	Function	error_callback	1670:0:67329:67457							
ANR	7615383	FunctionDef	"error_callback (const char * msg , void * client_data)"		7615382	0					
ANR	7615384	CompoundStatement		1671:0:67392:67457	7615382	0					
ANR	7615385	ExpressionStatement	( void ) client_data	1672:4:67398:67415	7615382	0	True				
ANR	7615386	CastExpression	( void ) client_data		7615382	0					
ANR	7615387	CastTarget	void		7615382	0					
ANR	7615388	Identifier	client_data		7615382	1					
ANR	7615389	ExpressionStatement	"fprintf ( stdout , ""[ERROR] %s"" , msg )"	1673:4:67421:67455	7615382	1	True				
ANR	7615390	CallExpression	"fprintf ( stdout , ""[ERROR] %s"" , msg )"		7615382	0					
ANR	7615391	Callee	fprintf		7615382	0					
ANR	7615392	Identifier	fprintf		7615382	0					
ANR	7615393	ArgumentList	stdout		7615382	1					
ANR	7615394	Argument	stdout		7615382	0					
ANR	7615395	Identifier	stdout		7615382	0					
ANR	7615396	Argument	"""[ERROR] %s"""		7615382	1					
ANR	7615397	PrimaryExpression	"""[ERROR] %s"""		7615382	0					
ANR	7615398	Argument	msg		7615382	2					
ANR	7615399	Identifier	msg		7615382	0					
ANR	7615400	ReturnType	static void		7615382	1					
ANR	7615401	Identifier	error_callback		7615382	2					
ANR	7615402	ParameterList	"const char * msg , void * client_data"		7615382	3					
ANR	7615403	Parameter	const char * msg	1670:27:67356:67370	7615382	0	True				
ANR	7615404	ParameterType	const char *		7615382	0					
ANR	7615405	Identifier	msg		7615382	1					
ANR	7615406	Parameter	void * client_data	1670:44:67373:67389	7615382	1	True				
ANR	7615407	ParameterType	void *		7615382	0					
ANR	7615408	Identifier	client_data		7615382	1					
ANR	7615409	CFGEntryNode	ENTRY		7615382		True				
ANR	7615410	CFGExitNode	EXIT		7615382		True				
ANR	7615411	Symbol	msg		7615382						
ANR	7615412	Symbol	client_data		7615382						
ANR	7615413	Symbol	stdout		7615382						
ANR	7615414	Function	warning_callback	1678:0:67523:67655							
ANR	7615415	FunctionDef	"warning_callback (const char * msg , void * client_data)"		7615414	0					
ANR	7615416	CompoundStatement		1679:0:67588:67655	7615414	0					
ANR	7615417	ExpressionStatement	( void ) client_data	1680:4:67594:67611	7615414	0	True				
ANR	7615418	CastExpression	( void ) client_data		7615414	0					
ANR	7615419	CastTarget	void		7615414	0					
ANR	7615420	Identifier	client_data		7615414	1					
ANR	7615421	ExpressionStatement	"fprintf ( stdout , ""[WARNING] %s"" , msg )"	1681:4:67617:67653	7615414	1	True				
ANR	7615422	CallExpression	"fprintf ( stdout , ""[WARNING] %s"" , msg )"		7615414	0					
ANR	7615423	Callee	fprintf		7615414	0					
ANR	7615424	Identifier	fprintf		7615414	0					
ANR	7615425	ArgumentList	stdout		7615414	1					
ANR	7615426	Argument	stdout		7615414	0					
ANR	7615427	Identifier	stdout		7615414	0					
ANR	7615428	Argument	"""[WARNING] %s"""		7615414	1					
ANR	7615429	PrimaryExpression	"""[WARNING] %s"""		7615414	0					
ANR	7615430	Argument	msg		7615414	2					
ANR	7615431	Identifier	msg		7615414	0					
ANR	7615432	ReturnType	static void		7615414	1					
ANR	7615433	Identifier	warning_callback		7615414	2					
ANR	7615434	ParameterList	"const char * msg , void * client_data"		7615414	3					
ANR	7615435	Parameter	const char * msg	1678:29:67552:67566	7615414	0	True				
ANR	7615436	ParameterType	const char *		7615414	0					
ANR	7615437	Identifier	msg		7615414	1					
ANR	7615438	Parameter	void * client_data	1678:46:67569:67585	7615414	1	True				
ANR	7615439	ParameterType	void *		7615414	0					
ANR	7615440	Identifier	client_data		7615414	1					
ANR	7615441	CFGEntryNode	ENTRY		7615414		True				
ANR	7615442	CFGExitNode	EXIT		7615414		True				
ANR	7615443	Symbol	msg		7615414						
ANR	7615444	Symbol	client_data		7615414						
ANR	7615445	Symbol	stdout		7615414						
ANR	7615446	Function	info_callback	1686:0:67713:67839							
ANR	7615447	FunctionDef	"info_callback (const char * msg , void * client_data)"		7615446	0					
ANR	7615448	CompoundStatement		1687:0:67775:67839	7615446	0					
ANR	7615449	ExpressionStatement	( void ) client_data	1688:4:67781:67798	7615446	0	True				
ANR	7615450	CastExpression	( void ) client_data		7615446	0					
ANR	7615451	CastTarget	void		7615446	0					
ANR	7615452	Identifier	client_data		7615446	1					
ANR	7615453	ExpressionStatement	"fprintf ( stdout , ""[INFO] %s"" , msg )"	1689:4:67804:67837	7615446	1	True				
ANR	7615454	CallExpression	"fprintf ( stdout , ""[INFO] %s"" , msg )"		7615446	0					
ANR	7615455	Callee	fprintf		7615446	0					
ANR	7615456	Identifier	fprintf		7615446	0					
ANR	7615457	ArgumentList	stdout		7615446	1					
ANR	7615458	Argument	stdout		7615446	0					
ANR	7615459	Identifier	stdout		7615446	0					
ANR	7615460	Argument	"""[INFO] %s"""		7615446	1					
ANR	7615461	PrimaryExpression	"""[INFO] %s"""		7615446	0					
ANR	7615462	Argument	msg		7615446	2					
ANR	7615463	Identifier	msg		7615446	0					
ANR	7615464	ReturnType	static void		7615446	1					
ANR	7615465	Identifier	info_callback		7615446	2					
ANR	7615466	ParameterList	"const char * msg , void * client_data"		7615446	3					
ANR	7615467	Parameter	const char * msg	1686:26:67739:67753	7615446	0	True				
ANR	7615468	ParameterType	const char *		7615446	0					
ANR	7615469	Identifier	msg		7615446	1					
ANR	7615470	Parameter	void * client_data	1686:43:67756:67772	7615446	1	True				
ANR	7615471	ParameterType	void *		7615446	0					
ANR	7615472	Identifier	client_data		7615446	1					
ANR	7615473	CFGEntryNode	ENTRY		7615446		True				
ANR	7615474	CFGExitNode	EXIT		7615446		True				
ANR	7615475	Symbol	msg		7615446						
ANR	7615476	Symbol	client_data		7615446						
ANR	7615477	Symbol	stdout		7615446						
ANR	7615478	Function	opj_clock	1692:0:67842:68858							
ANR	7615479	FunctionDef	opj_clock ()		7615478	0					
ANR	7615480	CompoundStatement		1693:0:67870:68858	7615478	0					
ANR	7615481	IdentifierDeclStatement	"LARGE_INTEGER freq , t ;"	1696:4:67945:67967	7615478	0	True				
ANR	7615482	IdentifierDecl	freq		7615478	0					
ANR	7615483	IdentifierDeclType	LARGE_INTEGER		7615478	0					
ANR	7615484	Identifier	freq		7615478	1					
ANR	7615485	IdentifierDecl	t		7615478	1					
ANR	7615486	IdentifierDeclType	LARGE_INTEGER		7615478	0					
ANR	7615487	Identifier	t		7615478	1					
ANR	7615488	ExpressionStatement	QueryPerformanceFrequency ( & freq )	1698:4:68018:68051	7615478	1	True				
ANR	7615489	CallExpression	QueryPerformanceFrequency ( & freq )		7615478	0					
ANR	7615490	Callee	QueryPerformanceFrequency		7615478	0					
ANR	7615491	Identifier	QueryPerformanceFrequency		7615478	0					
ANR	7615492	ArgumentList	& freq		7615478	1					
ANR	7615493	Argument	& freq		7615478	0					
ANR	7615494	UnaryOperationExpression	& freq		7615478	0					
ANR	7615495	UnaryOperator	&		7615478	0					
ANR	7615496	Identifier	freq		7615478	1					
ANR	7615497	ExpressionStatement	QueryPerformanceCounter ( & t )	1701:4:68188:68217	7615478	2	True				
ANR	7615498	CallExpression	QueryPerformanceCounter ( & t )		7615478	0					
ANR	7615499	Callee	QueryPerformanceCounter		7615478	0					
ANR	7615500	Identifier	QueryPerformanceCounter		7615478	0					
ANR	7615501	ArgumentList	& t		7615478	1					
ANR	7615502	Argument	& t		7615478	0					
ANR	7615503	UnaryOperationExpression	& t		7615478	0					
ANR	7615504	UnaryOperator	&		7615478	0					
ANR	7615505	Identifier	t		7615478	1					
ANR	7615506	ReturnStatement	return freq . QuadPart ? ( ( OPJ_FLOAT64 ) t . QuadPart / ( OPJ_FLOAT64 ) freq . QuadPart ) : 0 ;	1702:4:68223:68318	7615478	3	True				
ANR	7615507	ConditionalExpression	freq . QuadPart ? ( ( OPJ_FLOAT64 ) t . QuadPart / ( OPJ_FLOAT64 ) freq . QuadPart ) : 0		7615478	0					
ANR	7615508	Condition	freq . QuadPart		7615478	0					
ANR	7615509	MemberAccess	freq . QuadPart		7615478	0					
ANR	7615510	Identifier	freq		7615478	0					
ANR	7615511	Identifier	QuadPart		7615478	1					
ANR	7615512	MultiplicativeExpression	( OPJ_FLOAT64 ) t . QuadPart / ( OPJ_FLOAT64 ) freq . QuadPart		7615478	1		/			
ANR	7615513	CastExpression	( OPJ_FLOAT64 ) t . QuadPart		7615478	0					
ANR	7615514	CastTarget	OPJ_FLOAT64		7615478	0					
ANR	7615515	MemberAccess	t . QuadPart		7615478	1					
ANR	7615516	Identifier	t		7615478	0					
ANR	7615517	Identifier	QuadPart		7615478	1					
ANR	7615518	CastExpression	( OPJ_FLOAT64 ) freq . QuadPart		7615478	1					
ANR	7615519	CastTarget	OPJ_FLOAT64		7615478	0					
ANR	7615520	MemberAccess	freq . QuadPart		7615478	1					
ANR	7615521	Identifier	freq		7615478	0					
ANR	7615522	Identifier	QuadPart		7615478	1					
ANR	7615523	PrimaryExpression	0		7615478	2					
ANR	7615524	ReturnType	OPJ_FLOAT64		7615478	1					
ANR	7615525	Identifier	opj_clock		7615478	2					
ANR	7615526	ParameterList			7615478	3					
ANR	7615527	CFGEntryNode	ENTRY		7615478		True				
ANR	7615528	CFGExitNode	EXIT		7615478		True				
ANR	7615529	Symbol	t . QuadPart		7615478						
ANR	7615530	Symbol	freq . QuadPart		7615478						
ANR	7615531	Symbol	t		7615478						
ANR	7615532	Symbol	freq		7615478						
ANR	7615533	Symbol	& freq		7615478						
ANR	7615534	Symbol	& t		7615478						
ANR	7615535	Function	main	1725:0:69053:79901							
ANR	7615536	FunctionDef	"main (int argc , char * * argv)"		7615535	0					
ANR	7615537	CompoundStatement		1726:0:69085:79901	7615535	0					
ANR	7615538	IdentifierDeclStatement	opj_cparameters_t parameters ;	1728:4:69092:69120	7615535	0	True				
ANR	7615539	IdentifierDecl	parameters		7615535	0					
ANR	7615540	IdentifierDeclType	opj_cparameters_t		7615535	0					
ANR	7615541	Identifier	parameters		7615535	1					
ANR	7615542	IdentifierDeclStatement	opj_stream_t * l_stream = 00 ;	1730:4:69158:69185	7615535	1	True				
ANR	7615543	IdentifierDecl	* l_stream = 00		7615535	0					
ANR	7615544	IdentifierDeclType	opj_stream_t *		7615535	0					
ANR	7615545	Identifier	l_stream		7615535	1					
ANR	7615546	AssignmentExpression	* l_stream = 00		7615535	2		=			
ANR	7615547	Identifier	l_stream		7615535	0					
ANR	7615548	PrimaryExpression	00		7615535	1					
ANR	7615549	IdentifierDeclStatement	opj_codec_t * l_codec = 00 ;	1731:4:69191:69216	7615535	2	True				
ANR	7615550	IdentifierDecl	* l_codec = 00		7615535	0					
ANR	7615551	IdentifierDeclType	opj_codec_t *		7615535	0					
ANR	7615552	Identifier	l_codec		7615535	1					
ANR	7615553	AssignmentExpression	* l_codec = 00		7615535	2		=			
ANR	7615554	Identifier	l_codec		7615535	0					
ANR	7615555	PrimaryExpression	00		7615535	1					
ANR	7615556	IdentifierDeclStatement	opj_image_t * image = NULL ;	1732:4:69222:69247	7615535	3	True				
ANR	7615557	IdentifierDecl	* image = NULL		7615535	0					
ANR	7615558	IdentifierDeclType	opj_image_t *		7615535	0					
ANR	7615559	Identifier	image		7615535	1					
ANR	7615560	AssignmentExpression	* image = NULL		7615535	2		=			
ANR	7615561	Identifier	NULL		7615535	0					
ANR	7615562	Identifier	NULL		7615535	1					
ANR	7615563	IdentifierDeclStatement	raw_cparameters_t raw_cp ;	1733:4:69253:69277	7615535	4	True				
ANR	7615564	IdentifierDecl	raw_cp		7615535	0					
ANR	7615565	IdentifierDeclType	raw_cparameters_t		7615535	0					
ANR	7615566	Identifier	raw_cp		7615535	1					
ANR	7615567	IdentifierDeclStatement	OPJ_SIZE_T num_compressed_files = 0 ;	1734:4:69283:69318	7615535	5	True				
ANR	7615568	IdentifierDecl	num_compressed_files = 0		7615535	0					
ANR	7615569	IdentifierDeclType	OPJ_SIZE_T		7615535	0					
ANR	7615570	Identifier	num_compressed_files		7615535	1					
ANR	7615571	AssignmentExpression	num_compressed_files = 0		7615535	2		=			
ANR	7615572	Identifier	num_compressed_files		7615535	0					
ANR	7615573	PrimaryExpression	0		7615535	1					
ANR	7615574	IdentifierDeclStatement	char indexfilename [ OPJ_PATH_LEN ] ;	1736:4:69325:69357	7615535	6	True				
ANR	7615575	IdentifierDecl	indexfilename [ OPJ_PATH_LEN ]		7615535	0					
ANR	7615576	IdentifierDeclType	char [ OPJ_PATH_LEN ]		7615535	0					
ANR	7615577	Identifier	indexfilename		7615535	1					
ANR	7615578	Identifier	OPJ_PATH_LEN		7615535	2					
ANR	7615579	IdentifierDeclStatement	"unsigned int i , num_images , imageno ;"	1738:4:69388:69423	7615535	7	True				
ANR	7615580	IdentifierDecl	i		7615535	0					
ANR	7615581	IdentifierDeclType	unsigned int		7615535	0					
ANR	7615582	Identifier	i		7615535	1					
ANR	7615583	IdentifierDecl	num_images		7615535	1					
ANR	7615584	IdentifierDeclType	unsigned int		7615535	0					
ANR	7615585	Identifier	num_images		7615535	1					
ANR	7615586	IdentifierDecl	imageno		7615535	2					
ANR	7615587	IdentifierDeclType	unsigned int		7615535	0					
ANR	7615588	Identifier	imageno		7615535	1					
ANR	7615589	IdentifierDeclStatement	img_fol_t img_fol ;	1739:4:69429:69446	7615535	8	True				
ANR	7615590	IdentifierDecl	img_fol		7615535	0					
ANR	7615591	IdentifierDeclType	img_fol_t		7615535	0					
ANR	7615592	Identifier	img_fol		7615535	1					
ANR	7615593	IdentifierDeclStatement	dircnt_t * dirptr = NULL ;	1740:4:69452:69475	7615535	9	True				
ANR	7615594	IdentifierDecl	* dirptr = NULL		7615535	0					
ANR	7615595	IdentifierDeclType	dircnt_t *		7615535	0					
ANR	7615596	Identifier	dirptr		7615535	1					
ANR	7615597	AssignmentExpression	* dirptr = NULL		7615535	2		=			
ANR	7615598	Identifier	NULL		7615535	0					
ANR	7615599	Identifier	NULL		7615535	1					
ANR	7615600	IdentifierDeclStatement	OPJ_BOOL bSuccess ;	1742:4:69482:69499	7615535	10	True				
ANR	7615601	IdentifierDecl	bSuccess		7615535	0					
ANR	7615602	IdentifierDeclType	OPJ_BOOL		7615535	0					
ANR	7615603	Identifier	bSuccess		7615535	1					
ANR	7615604	IdentifierDeclStatement	OPJ_BOOL bUseTiles = OPJ_FALSE ;	1743:4:69505:69535	7615535	11	True				
ANR	7615605	IdentifierDecl	bUseTiles = OPJ_FALSE		7615535	0					
ANR	7615606	IdentifierDeclType	OPJ_BOOL		7615535	0					
ANR	7615607	Identifier	bUseTiles		7615535	1					
ANR	7615608	AssignmentExpression	bUseTiles = OPJ_FALSE		7615535	2		=			
ANR	7615609	Identifier	OPJ_FALSE		7615535	0					
ANR	7615610	Identifier	OPJ_FALSE		7615535	1					
ANR	7615611	IdentifierDeclStatement	OPJ_UINT32 l_nb_tiles = 4 ;	1744:4:69556:69581	7615535	12	True				
ANR	7615612	IdentifierDecl	l_nb_tiles = 4		7615535	0					
ANR	7615613	IdentifierDeclType	OPJ_UINT32		7615535	0					
ANR	7615614	Identifier	l_nb_tiles		7615535	1					
ANR	7615615	AssignmentExpression	l_nb_tiles = 4		7615535	2		=			
ANR	7615616	Identifier	l_nb_tiles		7615535	0					
ANR	7615617	PrimaryExpression	4		7615535	1					
ANR	7615618	IdentifierDeclStatement	OPJ_FLOAT64 t = opj_clock ( ) ;	1745:4:69587:69614	7615535	13	True				
ANR	7615619	IdentifierDecl	t = opj_clock ( )		7615535	0					
ANR	7615620	IdentifierDeclType	OPJ_FLOAT64		7615535	0					
ANR	7615621	Identifier	t		7615535	1					
ANR	7615622	AssignmentExpression	t = opj_clock ( )		7615535	2		=			
ANR	7615623	Identifier	t		7615535	0					
ANR	7615624	CallExpression	opj_clock ( )		7615535	1					
ANR	7615625	Callee	opj_clock		7615535	0					
ANR	7615626	Identifier	opj_clock		7615535	0					
ANR	7615627	ArgumentList			7615535	1					
ANR	7615628	ExpressionStatement	opj_set_default_encoder_parameters ( & parameters )	1748:4:69673:69720	7615535	14	True				
ANR	7615629	CallExpression	opj_set_default_encoder_parameters ( & parameters )		7615535	0					
ANR	7615630	Callee	opj_set_default_encoder_parameters		7615535	0					
ANR	7615631	Identifier	opj_set_default_encoder_parameters		7615535	0					
ANR	7615632	ArgumentList	& parameters		7615535	1					
ANR	7615633	Argument	& parameters		7615535	0					
ANR	7615634	UnaryOperationExpression	& parameters		7615535	0					
ANR	7615635	UnaryOperator	&		7615535	0					
ANR	7615636	Identifier	parameters		7615535	1					
ANR	7615637	ExpressionStatement	* indexfilename = 0	1751:4:69774:69792	7615535	15	True				
ANR	7615638	AssignmentExpression	* indexfilename = 0		7615535	0		=			
ANR	7615639	UnaryOperationExpression	* indexfilename		7615535	0					
ANR	7615640	UnaryOperator	*		7615535	0					
ANR	7615641	Identifier	indexfilename		7615535	1					
ANR	7615642	PrimaryExpression	0		7615535	1					
ANR	7615643	ExpressionStatement	"memset ( & img_fol , 0 , sizeof ( img_fol_t ) )"	1752:4:69798:69836	7615535	16	True				
ANR	7615644	CallExpression	"memset ( & img_fol , 0 , sizeof ( img_fol_t ) )"		7615535	0					
ANR	7615645	Callee	memset		7615535	0					
ANR	7615646	Identifier	memset		7615535	0					
ANR	7615647	ArgumentList	& img_fol		7615535	1					
ANR	7615648	Argument	& img_fol		7615535	0					
ANR	7615649	UnaryOperationExpression	& img_fol		7615535	0					
ANR	7615650	UnaryOperator	&		7615535	0					
ANR	7615651	Identifier	img_fol		7615535	1					
ANR	7615652	Argument	0		7615535	1					
ANR	7615653	PrimaryExpression	0		7615535	0					
ANR	7615654	Argument	sizeof ( img_fol_t )		7615535	2					
ANR	7615655	SizeofExpression	sizeof ( img_fol_t )		7615535	0					
ANR	7615656	Sizeof	sizeof		7615535	0					
ANR	7615657	SizeofOperand	img_fol_t		7615535	1					
ANR	7615658	ExpressionStatement	raw_cp . rawBitDepth = 0	1755:4:69875:69897	7615535	17	True				
ANR	7615659	AssignmentExpression	raw_cp . rawBitDepth = 0		7615535	0		=			
ANR	7615660	MemberAccess	raw_cp . rawBitDepth		7615535	0					
ANR	7615661	Identifier	raw_cp		7615535	0					
ANR	7615662	Identifier	rawBitDepth		7615535	1					
ANR	7615663	PrimaryExpression	0		7615535	1					
ANR	7615664	ExpressionStatement	raw_cp . rawComp = 0	1756:4:69903:69921	7615535	18	True				
ANR	7615665	AssignmentExpression	raw_cp . rawComp = 0		7615535	0		=			
ANR	7615666	MemberAccess	raw_cp . rawComp		7615535	0					
ANR	7615667	Identifier	raw_cp		7615535	0					
ANR	7615668	Identifier	rawComp		7615535	1					
ANR	7615669	PrimaryExpression	0		7615535	1					
ANR	7615670	ExpressionStatement	raw_cp . rawComps = 0	1757:4:69927:69946	7615535	19	True				
ANR	7615671	AssignmentExpression	raw_cp . rawComps = 0		7615535	0		=			
ANR	7615672	MemberAccess	raw_cp . rawComps		7615535	0					
ANR	7615673	Identifier	raw_cp		7615535	0					
ANR	7615674	Identifier	rawComps		7615535	1					
ANR	7615675	PrimaryExpression	0		7615535	1					
ANR	7615676	ExpressionStatement	raw_cp . rawHeight = 0	1758:4:69952:69972	7615535	20	True				
ANR	7615677	AssignmentExpression	raw_cp . rawHeight = 0		7615535	0		=			
ANR	7615678	MemberAccess	raw_cp . rawHeight		7615535	0					
ANR	7615679	Identifier	raw_cp		7615535	0					
ANR	7615680	Identifier	rawHeight		7615535	1					
ANR	7615681	PrimaryExpression	0		7615535	1					
ANR	7615682	ExpressionStatement	raw_cp . rawSigned = 0	1759:4:69978:69998	7615535	21	True				
ANR	7615683	AssignmentExpression	raw_cp . rawSigned = 0		7615535	0		=			
ANR	7615684	MemberAccess	raw_cp . rawSigned		7615535	0					
ANR	7615685	Identifier	raw_cp		7615535	0					
ANR	7615686	Identifier	rawSigned		7615535	1					
ANR	7615687	PrimaryExpression	0		7615535	1					
ANR	7615688	ExpressionStatement	raw_cp . rawWidth = 0	1760:4:70004:70023	7615535	22	True				
ANR	7615689	AssignmentExpression	raw_cp . rawWidth = 0		7615535	0		=			
ANR	7615690	MemberAccess	raw_cp . rawWidth		7615535	0					
ANR	7615691	Identifier	raw_cp		7615535	0					
ANR	7615692	Identifier	rawWidth		7615535	1					
ANR	7615693	PrimaryExpression	0		7615535	1					
ANR	7615694	ExpressionStatement	parameters . tcp_mct = ( char ) 255	1763:4:70085:70141	7615535	23	True				
ANR	7615695	AssignmentExpression	parameters . tcp_mct = ( char ) 255		7615535	0		=			
ANR	7615696	MemberAccess	parameters . tcp_mct		7615535	0					
ANR	7615697	Identifier	parameters		7615535	0					
ANR	7615698	Identifier	tcp_mct		7615535	1					
ANR	7615699	CastExpression	( char ) 255		7615535	1					
ANR	7615700	CastTarget	char		7615535	0					
ANR	7615701	PrimaryExpression	255		7615535	1					
ANR	7615702	IfStatement	"if ( parse_cmdline_encoder ( argc , argv , & parameters , & img_fol , & raw_cp , indexfilename , sizeof ( indexfilename ) ) == 1 )"		7615535	24					
ANR	7615703	Condition	"parse_cmdline_encoder ( argc , argv , & parameters , & img_fol , & raw_cp , indexfilename , sizeof ( indexfilename ) ) == 1"	1765:8:70232:70369	7615535	0	True				
ANR	7615704	EqualityExpression	"parse_cmdline_encoder ( argc , argv , & parameters , & img_fol , & raw_cp , indexfilename , sizeof ( indexfilename ) ) == 1"		7615535	0		==			
ANR	7615705	CallExpression	"parse_cmdline_encoder ( argc , argv , & parameters , & img_fol , & raw_cp , indexfilename , sizeof ( indexfilename ) )"		7615535	0					
ANR	7615706	Callee	parse_cmdline_encoder		7615535	0					
ANR	7615707	Identifier	parse_cmdline_encoder		7615535	0					
ANR	7615708	ArgumentList	argc		7615535	1					
ANR	7615709	Argument	argc		7615535	0					
ANR	7615710	Identifier	argc		7615535	0					
ANR	7615711	Argument	argv		7615535	1					
ANR	7615712	Identifier	argv		7615535	0					
ANR	7615713	Argument	& parameters		7615535	2					
ANR	7615714	UnaryOperationExpression	& parameters		7615535	0					
ANR	7615715	UnaryOperator	&		7615535	0					
ANR	7615716	Identifier	parameters		7615535	1					
ANR	7615717	Argument	& img_fol		7615535	3					
ANR	7615718	UnaryOperationExpression	& img_fol		7615535	0					
ANR	7615719	UnaryOperator	&		7615535	0					
ANR	7615720	Identifier	img_fol		7615535	1					
ANR	7615721	Argument	& raw_cp		7615535	4					
ANR	7615722	UnaryOperationExpression	& raw_cp		7615535	0					
ANR	7615723	UnaryOperator	&		7615535	0					
ANR	7615724	Identifier	raw_cp		7615535	1					
ANR	7615725	Argument	indexfilename		7615535	5					
ANR	7615726	Identifier	indexfilename		7615535	0					
ANR	7615727	Argument	sizeof ( indexfilename )		7615535	6					
ANR	7615728	SizeofExpression	sizeof ( indexfilename )		7615535	0					
ANR	7615729	Sizeof	sizeof		7615535	0					
ANR	7615730	SizeofOperand	indexfilename		7615535	1					
ANR	7615731	PrimaryExpression	1		7615535	1					
ANR	7615732	CompoundStatement		41:74:1286:1286	7615535	1					
ANR	7615733	GotoStatement	goto fails ;	1767:8:70382:70392	7615535	0	True				
ANR	7615734	Identifier	fails		7615535	0					
ANR	7615735	IfStatement	if ( img_fol . set_imgdir == 1 )		7615535	25					
ANR	7615736	Condition	img_fol . set_imgdir == 1	1771:8:70447:70469	7615535	0	True				
ANR	7615737	EqualityExpression	img_fol . set_imgdir == 1		7615535	0		==			
ANR	7615738	MemberAccess	img_fol . set_imgdir		7615535	0					
ANR	7615739	Identifier	img_fol		7615535	0					
ANR	7615740	Identifier	set_imgdir		7615535	1					
ANR	7615741	PrimaryExpression	1		7615535	1					
ANR	7615742	CompoundStatement		46:33:1386:1386	7615535	1					
ANR	7615743	ExpressionStatement	num_images = get_num_images ( img_fol . imgdirpath )	1772:8:70482:70529	7615535	0	True				
ANR	7615744	AssignmentExpression	num_images = get_num_images ( img_fol . imgdirpath )		7615535	0		=			
ANR	7615745	Identifier	num_images		7615535	0					
ANR	7615746	CallExpression	get_num_images ( img_fol . imgdirpath )		7615535	1					
ANR	7615747	Callee	get_num_images		7615535	0					
ANR	7615748	Identifier	get_num_images		7615535	0					
ANR	7615749	ArgumentList	img_fol . imgdirpath		7615535	1					
ANR	7615750	Argument	img_fol . imgdirpath		7615535	0					
ANR	7615751	MemberAccess	img_fol . imgdirpath		7615535	0					
ANR	7615752	Identifier	img_fol		7615535	0					
ANR	7615753	Identifier	imgdirpath		7615535	1					
ANR	7615754	ExpressionStatement	dirptr = ( dircnt_t * ) malloc ( sizeof ( dircnt_t ) )	1773:8:70539:70583	7615535	1	True				
ANR	7615755	AssignmentExpression	dirptr = ( dircnt_t * ) malloc ( sizeof ( dircnt_t ) )		7615535	0		=			
ANR	7615756	Identifier	dirptr		7615535	0					
ANR	7615757	CastExpression	( dircnt_t * ) malloc ( sizeof ( dircnt_t ) )		7615535	1					
ANR	7615758	CastTarget	dircnt_t *		7615535	0					
ANR	7615759	CallExpression	malloc ( sizeof ( dircnt_t ) )		7615535	1					
ANR	7615760	Callee	malloc		7615535	0					
ANR	7615761	Identifier	malloc		7615535	0					
ANR	7615762	ArgumentList	sizeof ( dircnt_t )		7615535	1					
ANR	7615763	Argument	sizeof ( dircnt_t )		7615535	0					
ANR	7615764	SizeofExpression	sizeof ( dircnt_t )		7615535	0					
ANR	7615765	Sizeof	sizeof		7615535	0					
ANR	7615766	SizeofOperand	dircnt_t		7615535	1					
ANR	7615767	IfStatement	if ( dirptr )		7615535	2					
ANR	7615768	Condition	dirptr	1774:12:70597:70602	7615535	0	True				
ANR	7615769	Identifier	dirptr		7615535	0					
ANR	7615770	CompoundStatement		49:20:1519:1519	7615535	1					
ANR	7615771	ExpressionStatement	dirptr -> filename_buf = ( char * ) malloc ( num_images * OPJ_PATH_LEN * sizeof ( char ) )	1775:12:70619:70718	7615535	0	True				
ANR	7615772	AssignmentExpression	dirptr -> filename_buf = ( char * ) malloc ( num_images * OPJ_PATH_LEN * sizeof ( char ) )		7615535	0		=			
ANR	7615773	PtrMemberAccess	dirptr -> filename_buf		7615535	0					
ANR	7615774	Identifier	dirptr		7615535	0					
ANR	7615775	Identifier	filename_buf		7615535	1					
ANR	7615776	CastExpression	( char * ) malloc ( num_images * OPJ_PATH_LEN * sizeof ( char ) )		7615535	1					
ANR	7615777	CastTarget	char *		7615535	0					
ANR	7615778	CallExpression	malloc ( num_images * OPJ_PATH_LEN * sizeof ( char ) )		7615535	1					
ANR	7615779	Callee	malloc		7615535	0					
ANR	7615780	Identifier	malloc		7615535	0					
ANR	7615781	ArgumentList	num_images * OPJ_PATH_LEN * sizeof ( char )		7615535	1					
ANR	7615782	Argument	num_images * OPJ_PATH_LEN * sizeof ( char )		7615535	0					
ANR	7615783	MultiplicativeExpression	num_images * OPJ_PATH_LEN * sizeof ( char )		7615535	0		*			
ANR	7615784	Identifier	num_images		7615535	0					
ANR	7615785	MultiplicativeExpression	OPJ_PATH_LEN * sizeof ( char )		7615535	1		*			
ANR	7615786	Identifier	OPJ_PATH_LEN		7615535	0					
ANR	7615787	SizeofExpression	sizeof ( char )		7615535	1					
ANR	7615788	Sizeof	sizeof		7615535	0					
ANR	7615789	SizeofOperand	char		7615535	1					
ANR	7615790	ExpressionStatement	dirptr -> filename = ( char * * ) malloc ( num_images * sizeof ( char * ) )	1777:12:70771:70833	7615535	1	True				
ANR	7615791	AssignmentExpression	dirptr -> filename = ( char * * ) malloc ( num_images * sizeof ( char * ) )		7615535	0		=			
ANR	7615792	PtrMemberAccess	dirptr -> filename		7615535	0					
ANR	7615793	Identifier	dirptr		7615535	0					
ANR	7615794	Identifier	filename		7615535	1					
ANR	7615795	CastExpression	( char * * ) malloc ( num_images * sizeof ( char * ) )		7615535	1					
ANR	7615796	CastTarget	char * *		7615535	0					
ANR	7615797	CallExpression	malloc ( num_images * sizeof ( char * ) )		7615535	1					
ANR	7615798	Callee	malloc		7615535	0					
ANR	7615799	Identifier	malloc		7615535	0					
ANR	7615800	ArgumentList	num_images * sizeof ( char * )		7615535	1					
ANR	7615801	Argument	num_images * sizeof ( char * )		7615535	0					
ANR	7615802	MultiplicativeExpression	num_images * sizeof ( char * )		7615535	0		*			
ANR	7615803	Identifier	num_images		7615535	0					
ANR	7615804	SizeofExpression	sizeof ( char * )		7615535	1					
ANR	7615805	Sizeof	sizeof		7615535	0					
ANR	7615806	SizeofOperand	char *		7615535	1					
ANR	7615807	IfStatement	if ( ! dirptr -> filename_buf )		7615535	2					
ANR	7615808	Condition	! dirptr -> filename_buf	1778:16:70851:70871	7615535	0	True				
ANR	7615809	UnaryOperationExpression	! dirptr -> filename_buf		7615535	0					
ANR	7615810	UnaryOperator	!		7615535	0					
ANR	7615811	PtrMemberAccess	dirptr -> filename_buf		7615535	1					
ANR	7615812	Identifier	dirptr		7615535	0					
ANR	7615813	Identifier	filename_buf		7615535	1					
ANR	7615814	CompoundStatement		53:39:1788:1788	7615535	1					
ANR	7615815	ReturnStatement	return 0 ;	1779:16:70892:70900	7615535	0	True				
ANR	7615816	PrimaryExpression	0		7615535	0					
ANR	7615817	ForStatement	for ( i = 0 ; i < num_images ; i ++ )		7615535	3					
ANR	7615818	ForInit	i = 0 ;	1781:17:70933:70938	7615535	0	True				
ANR	7615819	AssignmentExpression	i = 0		7615535	0		=			
ANR	7615820	Identifier	i		7615535	0					
ANR	7615821	PrimaryExpression	0		7615535	1					
ANR	7615822	Condition	i < num_images	1781:24:70940:70953	7615535	1	True				
ANR	7615823	RelationalExpression	i < num_images		7615535	0		<			
ANR	7615824	Identifier	i		7615535	0					
ANR	7615825	Identifier	num_images		7615535	1					
ANR	7615826	PostIncDecOperationExpression	i ++	1781:40:70956:70958	7615535	2	True				
ANR	7615827	Identifier	i		7615535	0					
ANR	7615828	IncDec	++		7615535	1					
ANR	7615829	CompoundStatement		56:45:1875:1875	7615535	3					
ANR	7615830	ExpressionStatement	dirptr -> filename [ i ] = dirptr -> filename_buf + i * OPJ_PATH_LEN	1782:16:70979:71040	7615535	0	True				
ANR	7615831	AssignmentExpression	dirptr -> filename [ i ] = dirptr -> filename_buf + i * OPJ_PATH_LEN		7615535	0		=			
ANR	7615832	ArrayIndexing	dirptr -> filename [ i ]		7615535	0					
ANR	7615833	PtrMemberAccess	dirptr -> filename		7615535	0					
ANR	7615834	Identifier	dirptr		7615535	0					
ANR	7615835	Identifier	filename		7615535	1					
ANR	7615836	Identifier	i		7615535	1					
ANR	7615837	AdditiveExpression	dirptr -> filename_buf + i * OPJ_PATH_LEN		7615535	1		+			
ANR	7615838	PtrMemberAccess	dirptr -> filename_buf		7615535	0					
ANR	7615839	Identifier	dirptr		7615535	0					
ANR	7615840	Identifier	filename_buf		7615535	1					
ANR	7615841	MultiplicativeExpression	i * OPJ_PATH_LEN		7615535	1		*			
ANR	7615842	Identifier	i		7615535	0					
ANR	7615843	Identifier	OPJ_PATH_LEN		7615535	1					
ANR	7615844	IfStatement	"if ( load_images ( dirptr , img_fol . imgdirpath ) == 1 )"		7615535	3					
ANR	7615845	Condition	"load_images ( dirptr , img_fol . imgdirpath ) == 1"	1785:12:71078:71121	7615535	0	True				
ANR	7615846	EqualityExpression	"load_images ( dirptr , img_fol . imgdirpath ) == 1"		7615535	0		==			
ANR	7615847	CallExpression	"load_images ( dirptr , img_fol . imgdirpath )"		7615535	0					
ANR	7615848	Callee	load_images		7615535	0					
ANR	7615849	Identifier	load_images		7615535	0					
ANR	7615850	ArgumentList	dirptr		7615535	1					
ANR	7615851	Argument	dirptr		7615535	0					
ANR	7615852	Identifier	dirptr		7615535	0					
ANR	7615853	Argument	img_fol . imgdirpath		7615535	1					
ANR	7615854	MemberAccess	img_fol . imgdirpath		7615535	0					
ANR	7615855	Identifier	img_fol		7615535	0					
ANR	7615856	Identifier	imgdirpath		7615535	1					
ANR	7615857	PrimaryExpression	1		7615535	1					
ANR	7615858	CompoundStatement		60:58:2038:2038	7615535	1					
ANR	7615859	ReturnStatement	return 0 ;	1786:12:71138:71146	7615535	0	True				
ANR	7615860	PrimaryExpression	0		7615535	0					
ANR	7615861	IfStatement	if ( num_images == 0 )		7615535	4					
ANR	7615862	Condition	num_images == 0	1788:12:71170:71184	7615535	0	True				
ANR	7615863	EqualityExpression	num_images == 0		7615535	0		==			
ANR	7615864	Identifier	num_images		7615535	0					
ANR	7615865	PrimaryExpression	0		7615535	1					
ANR	7615866	CompoundStatement		63:29:2101:2101	7615535	1					
ANR	7615867	ExpressionStatement	"fprintf ( stdout , ""Folder is empty\\n"" )"	1789:12:71201:71237	7615535	0	True				
ANR	7615868	CallExpression	"fprintf ( stdout , ""Folder is empty\\n"" )"		7615535	0					
ANR	7615869	Callee	fprintf		7615535	0					
ANR	7615870	Identifier	fprintf		7615535	0					
ANR	7615871	ArgumentList	stdout		7615535	1					
ANR	7615872	Argument	stdout		7615535	0					
ANR	7615873	Identifier	stdout		7615535	0					
ANR	7615874	Argument	"""Folder is empty\\n"""		7615535	1					
ANR	7615875	PrimaryExpression	"""Folder is empty\\n"""		7615535	0					
ANR	7615876	ReturnStatement	return 0 ;	1790:12:71251:71259	7615535	1	True				
ANR	7615877	PrimaryExpression	0		7615535	0					
ANR	7615878	ElseStatement	else		7615535	0					
ANR	7615879	CompoundStatement		67:11:2196:2196	7615535	0					
ANR	7615880	ExpressionStatement	num_images = 1	1793:8:71292:71306	7615535	0	True				
ANR	7615881	AssignmentExpression	num_images = 1		7615535	0		=			
ANR	7615882	Identifier	num_images		7615535	0					
ANR	7615883	PrimaryExpression	1		7615535	1					
ANR	7615884	ForStatement	for ( imageno = 0 ; imageno < num_images ; imageno ++ )		7615535	26					
ANR	7615885	ForInit	imageno = 0 ;	1796:9:71357:71368	7615535	0	True				
ANR	7615886	AssignmentExpression	imageno = 0		7615535	0		=			
ANR	7615887	Identifier	imageno		7615535	0					
ANR	7615888	PrimaryExpression	0		7615535	1					
ANR	7615889	Condition	imageno < num_images	1796:22:71370:71389	7615535	1	True				
ANR	7615890	RelationalExpression	imageno < num_images		7615535	0		<			
ANR	7615891	Identifier	imageno		7615535	0					
ANR	7615892	Identifier	num_images		7615535	1					
ANR	7615893	PostIncDecOperationExpression	imageno ++	1796:44:71392:71400	7615535	2	True				
ANR	7615894	Identifier	imageno		7615535	0					
ANR	7615895	IncDec	++		7615535	1					
ANR	7615896	CompoundStatement		71:55:2317:2317	7615535	3					
ANR	7615897	ExpressionStatement	image = NULL	1797:8:71413:71425	7615535	0	True				
ANR	7615898	AssignmentExpression	image = NULL		7615535	0		=			
ANR	7615899	Identifier	image		7615535	0					
ANR	7615900	Identifier	NULL		7615535	1					
ANR	7615901	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1798:8:71435:71456	7615535	1	True				
ANR	7615902	CallExpression	"fprintf ( stderr , ""\\n"" )"		7615535	0					
ANR	7615903	Callee	fprintf		7615535	0					
ANR	7615904	Identifier	fprintf		7615535	0					
ANR	7615905	ArgumentList	stderr		7615535	1					
ANR	7615906	Argument	stderr		7615535	0					
ANR	7615907	Identifier	stderr		7615535	0					
ANR	7615908	Argument	"""\\n"""		7615535	1					
ANR	7615909	PrimaryExpression	"""\\n"""		7615535	0					
ANR	7615910	IfStatement	if ( img_fol . set_imgdir == 1 )		7615535	2					
ANR	7615911	Condition	img_fol . set_imgdir == 1	1800:12:71471:71493	7615535	0	True				
ANR	7615912	EqualityExpression	img_fol . set_imgdir == 1		7615535	0		==			
ANR	7615913	MemberAccess	img_fol . set_imgdir		7615535	0					
ANR	7615914	Identifier	img_fol		7615535	0					
ANR	7615915	Identifier	set_imgdir		7615535	1					
ANR	7615916	PrimaryExpression	1		7615535	1					
ANR	7615917	CompoundStatement		75:37:2410:2410	7615535	1					
ANR	7615918	IfStatement	"if ( get_next_file ( ( int ) imageno , dirptr , & img_fol , & parameters ) )"		7615535	0					
ANR	7615919	Condition	"get_next_file ( ( int ) imageno , dirptr , & img_fol , & parameters )"	1801:16:71514:71571	7615535	0	True				
ANR	7615920	CallExpression	"get_next_file ( ( int ) imageno , dirptr , & img_fol , & parameters )"		7615535	0					
ANR	7615921	Callee	get_next_file		7615535	0					
ANR	7615922	Identifier	get_next_file		7615535	0					
ANR	7615923	ArgumentList	( int ) imageno		7615535	1					
ANR	7615924	Argument	( int ) imageno		7615535	0					
ANR	7615925	CastExpression	( int ) imageno		7615535	0					
ANR	7615926	CastTarget	int		7615535	0					
ANR	7615927	Identifier	imageno		7615535	1					
ANR	7615928	Argument	dirptr		7615535	1					
ANR	7615929	Identifier	dirptr		7615535	0					
ANR	7615930	Argument	& img_fol		7615535	2					
ANR	7615931	UnaryOperationExpression	& img_fol		7615535	0					
ANR	7615932	UnaryOperator	&		7615535	0					
ANR	7615933	Identifier	img_fol		7615535	1					
ANR	7615934	Argument	& parameters		7615535	3					
ANR	7615935	UnaryOperationExpression	& parameters		7615535	0					
ANR	7615936	UnaryOperator	&		7615535	0					
ANR	7615937	Identifier	parameters		7615535	1					
ANR	7615938	CompoundStatement		76:76:2488:2488	7615535	1					
ANR	7615939	ExpressionStatement	"fprintf ( stderr , ""skipping file...\\n"" )"	1802:16:71592:71629	7615535	0	True				
ANR	7615940	CallExpression	"fprintf ( stderr , ""skipping file...\\n"" )"		7615535	0					
ANR	7615941	Callee	fprintf		7615535	0					
ANR	7615942	Identifier	fprintf		7615535	0					
ANR	7615943	ArgumentList	stderr		7615535	1					
ANR	7615944	Argument	stderr		7615535	0					
ANR	7615945	Identifier	stderr		7615535	0					
ANR	7615946	Argument	"""skipping file...\\n"""		7615535	1					
ANR	7615947	PrimaryExpression	"""skipping file...\\n"""		7615535	0					
ANR	7615948	ContinueStatement	continue ;	1803:16:71647:71655	7615535	1	True				
ANR	7615949	SwitchStatement	switch ( parameters . decod_format )		7615535	3					
ANR	7615950	Condition	parameters . decod_format	1807:16:71698:71720	7615535	0	True				
ANR	7615951	MemberAccess	parameters . decod_format		7615535	0					
ANR	7615952	Identifier	parameters		7615535	0					
ANR	7615953	Identifier	decod_format		7615535	1					
ANR	7615954	CompoundStatement		82:41:2637:2637	7615535	1					
ANR	7615955	Label	case PGX_DFMT :	1808:8:71733:71746	7615535	0	True				
ANR	7615956	Identifier	PGX_DFMT		7615535	0					
ANR	7615957	BreakStatement	break ;	1809:12:71760:71765	7615535	1	True				
ANR	7615958	Label	case PXM_DFMT :	1810:8:71775:71788	7615535	2	True				
ANR	7615959	Identifier	PXM_DFMT		7615535	0					
ANR	7615960	BreakStatement	break ;	1811:12:71802:71807	7615535	3	True				
ANR	7615961	Label	case BMP_DFMT :	1812:8:71817:71830	7615535	4	True				
ANR	7615962	Identifier	BMP_DFMT		7615535	0					
ANR	7615963	BreakStatement	break ;	1813:12:71844:71849	7615535	5	True				
ANR	7615964	Label	case TIF_DFMT :	1814:8:71859:71872	7615535	6	True				
ANR	7615965	Identifier	TIF_DFMT		7615535	0					
ANR	7615966	BreakStatement	break ;	1815:12:71886:71891	7615535	7	True				
ANR	7615967	Label	case RAW_DFMT :	1816:8:71901:71914	7615535	8	True				
ANR	7615968	Identifier	RAW_DFMT		7615535	0					
ANR	7615969	Label	case RAWL_DFMT :	1817:8:71924:71938	7615535	9	True				
ANR	7615970	Identifier	RAWL_DFMT		7615535	0					
ANR	7615971	BreakStatement	break ;	1818:12:71952:71957	7615535	10	True				
ANR	7615972	Label	case TGA_DFMT :	1819:8:71967:71980	7615535	11	True				
ANR	7615973	Identifier	TGA_DFMT		7615535	0					
ANR	7615974	BreakStatement	break ;	1820:12:71994:71999	7615535	12	True				
ANR	7615975	Label	case PNG_DFMT :	1821:8:72009:72022	7615535	13	True				
ANR	7615976	Identifier	PNG_DFMT		7615535	0					
ANR	7615977	BreakStatement	break ;	1822:12:72036:72041	7615535	14	True				
ANR	7615978	Label	default :	1823:8:72051:72058	7615535	15	True				
ANR	7615979	Identifier	default		7615535	0					
ANR	7615980	ExpressionStatement	"fprintf ( stderr , ""skipping file...\\n"" )"	1824:12:72072:72109	7615535	16	True				
ANR	7615981	CallExpression	"fprintf ( stderr , ""skipping file...\\n"" )"		7615535	0					
ANR	7615982	Callee	fprintf		7615535	0					
ANR	7615983	Identifier	fprintf		7615535	0					
ANR	7615984	ArgumentList	stderr		7615535	1					
ANR	7615985	Argument	stderr		7615535	0					
ANR	7615986	Identifier	stderr		7615535	0					
ANR	7615987	Argument	"""skipping file...\\n"""		7615535	1					
ANR	7615988	PrimaryExpression	"""skipping file...\\n"""		7615535	0					
ANR	7615989	ContinueStatement	continue ;	1825:12:72123:72131	7615535	17	True				
ANR	7615990	SwitchStatement	switch ( parameters . decod_format )		7615535	4					
ANR	7615991	Condition	parameters . decod_format	1831:16:72237:72259	7615535	0	True				
ANR	7615992	MemberAccess	parameters . decod_format		7615535	0					
ANR	7615993	Identifier	parameters		7615535	0					
ANR	7615994	Identifier	decod_format		7615535	1					
ANR	7615995	CompoundStatement		106:41:3176:3176	7615535	1					
ANR	7615996	Label	case PGX_DFMT :	1832:8:72272:72285	7615535	0	True				
ANR	7615997	Identifier	PGX_DFMT		7615535	0					
ANR	7615998	ExpressionStatement	"image = pgxtoimage ( parameters . infile , & parameters )"	1833:12:72299:72349	7615535	1	True				
ANR	7615999	AssignmentExpression	"image = pgxtoimage ( parameters . infile , & parameters )"		7615535	0		=			
ANR	7616000	Identifier	image		7615535	0					
ANR	7616001	CallExpression	"pgxtoimage ( parameters . infile , & parameters )"		7615535	1					
ANR	7616002	Callee	pgxtoimage		7615535	0					
ANR	7616003	Identifier	pgxtoimage		7615535	0					
ANR	7616004	ArgumentList	parameters . infile		7615535	1					
ANR	7616005	Argument	parameters . infile		7615535	0					
ANR	7616006	MemberAccess	parameters . infile		7615535	0					
ANR	7616007	Identifier	parameters		7615535	0					
ANR	7616008	Identifier	infile		7615535	1					
ANR	7616009	Argument	& parameters		7615535	1					
ANR	7616010	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616011	UnaryOperator	&		7615535	0					
ANR	7616012	Identifier	parameters		7615535	1					
ANR	7616013	IfStatement	if ( ! image )		7615535	2					
ANR	7616014	Condition	! image	1834:16:72367:72372	7615535	0	True				
ANR	7616015	UnaryOperationExpression	! image		7615535	0					
ANR	7616016	UnaryOperator	!		7615535	0					
ANR	7616017	Identifier	image		7615535	1					
ANR	7616018	CompoundStatement		109:24:3289:3289	7615535	1					
ANR	7616019	ExpressionStatement	"fprintf ( stderr , ""Unable to load pgx file\\n"" )"	1835:16:72393:72437	7615535	0	True				
ANR	7616020	CallExpression	"fprintf ( stderr , ""Unable to load pgx file\\n"" )"		7615535	0					
ANR	7616021	Callee	fprintf		7615535	0					
ANR	7616022	Identifier	fprintf		7615535	0					
ANR	7616023	ArgumentList	stderr		7615535	1					
ANR	7616024	Argument	stderr		7615535	0					
ANR	7616025	Identifier	stderr		7615535	0					
ANR	7616026	Argument	"""Unable to load pgx file\\n"""		7615535	1					
ANR	7616027	PrimaryExpression	"""Unable to load pgx file\\n"""		7615535	0					
ANR	7616028	ReturnStatement	return 1 ;	1836:16:72455:72463	7615535	1	True				
ANR	7616029	PrimaryExpression	1		7615535	0					
ANR	7616030	BreakStatement	break ;	1838:12:72491:72496	7615535	3	True				
ANR	7616031	Label	case PXM_DFMT :	1840:8:72507:72520	7615535	4	True				
ANR	7616032	Identifier	PXM_DFMT		7615535	0					
ANR	7616033	ExpressionStatement	"image = pnmtoimage ( parameters . infile , & parameters )"	1841:12:72534:72584	7615535	5	True				
ANR	7616034	AssignmentExpression	"image = pnmtoimage ( parameters . infile , & parameters )"		7615535	0		=			
ANR	7616035	Identifier	image		7615535	0					
ANR	7616036	CallExpression	"pnmtoimage ( parameters . infile , & parameters )"		7615535	1					
ANR	7616037	Callee	pnmtoimage		7615535	0					
ANR	7616038	Identifier	pnmtoimage		7615535	0					
ANR	7616039	ArgumentList	parameters . infile		7615535	1					
ANR	7616040	Argument	parameters . infile		7615535	0					
ANR	7616041	MemberAccess	parameters . infile		7615535	0					
ANR	7616042	Identifier	parameters		7615535	0					
ANR	7616043	Identifier	infile		7615535	1					
ANR	7616044	Argument	& parameters		7615535	1					
ANR	7616045	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616046	UnaryOperator	&		7615535	0					
ANR	7616047	Identifier	parameters		7615535	1					
ANR	7616048	IfStatement	if ( ! image )		7615535	6					
ANR	7616049	Condition	! image	1842:16:72602:72607	7615535	0	True				
ANR	7616050	UnaryOperationExpression	! image		7615535	0					
ANR	7616051	UnaryOperator	!		7615535	0					
ANR	7616052	Identifier	image		7615535	1					
ANR	7616053	CompoundStatement		117:24:3524:3524	7615535	1					
ANR	7616054	ExpressionStatement	"fprintf ( stderr , ""Unable to load pnm file\\n"" )"	1843:16:72628:72672	7615535	0	True				
ANR	7616055	CallExpression	"fprintf ( stderr , ""Unable to load pnm file\\n"" )"		7615535	0					
ANR	7616056	Callee	fprintf		7615535	0					
ANR	7616057	Identifier	fprintf		7615535	0					
ANR	7616058	ArgumentList	stderr		7615535	1					
ANR	7616059	Argument	stderr		7615535	0					
ANR	7616060	Identifier	stderr		7615535	0					
ANR	7616061	Argument	"""Unable to load pnm file\\n"""		7615535	1					
ANR	7616062	PrimaryExpression	"""Unable to load pnm file\\n"""		7615535	0					
ANR	7616063	ReturnStatement	return 1 ;	1844:16:72690:72698	7615535	1	True				
ANR	7616064	PrimaryExpression	1		7615535	0					
ANR	7616065	BreakStatement	break ;	1846:12:72726:72731	7615535	7	True				
ANR	7616066	Label	case BMP_DFMT :	1848:8:72742:72755	7615535	8	True				
ANR	7616067	Identifier	BMP_DFMT		7615535	0					
ANR	7616068	ExpressionStatement	"image = bmptoimage ( parameters . infile , & parameters )"	1849:12:72769:72819	7615535	9	True				
ANR	7616069	AssignmentExpression	"image = bmptoimage ( parameters . infile , & parameters )"		7615535	0		=			
ANR	7616070	Identifier	image		7615535	0					
ANR	7616071	CallExpression	"bmptoimage ( parameters . infile , & parameters )"		7615535	1					
ANR	7616072	Callee	bmptoimage		7615535	0					
ANR	7616073	Identifier	bmptoimage		7615535	0					
ANR	7616074	ArgumentList	parameters . infile		7615535	1					
ANR	7616075	Argument	parameters . infile		7615535	0					
ANR	7616076	MemberAccess	parameters . infile		7615535	0					
ANR	7616077	Identifier	parameters		7615535	0					
ANR	7616078	Identifier	infile		7615535	1					
ANR	7616079	Argument	& parameters		7615535	1					
ANR	7616080	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616081	UnaryOperator	&		7615535	0					
ANR	7616082	Identifier	parameters		7615535	1					
ANR	7616083	IfStatement	if ( ! image )		7615535	10					
ANR	7616084	Condition	! image	1850:16:72837:72842	7615535	0	True				
ANR	7616085	UnaryOperationExpression	! image		7615535	0					
ANR	7616086	UnaryOperator	!		7615535	0					
ANR	7616087	Identifier	image		7615535	1					
ANR	7616088	CompoundStatement		125:24:3759:3759	7615535	1					
ANR	7616089	ExpressionStatement	"fprintf ( stderr , ""Unable to load bmp file\\n"" )"	1851:16:72863:72907	7615535	0	True				
ANR	7616090	CallExpression	"fprintf ( stderr , ""Unable to load bmp file\\n"" )"		7615535	0					
ANR	7616091	Callee	fprintf		7615535	0					
ANR	7616092	Identifier	fprintf		7615535	0					
ANR	7616093	ArgumentList	stderr		7615535	1					
ANR	7616094	Argument	stderr		7615535	0					
ANR	7616095	Identifier	stderr		7615535	0					
ANR	7616096	Argument	"""Unable to load bmp file\\n"""		7615535	1					
ANR	7616097	PrimaryExpression	"""Unable to load bmp file\\n"""		7615535	0					
ANR	7616098	ReturnStatement	return 1 ;	1852:16:72925:72933	7615535	1	True				
ANR	7616099	PrimaryExpression	1		7615535	0					
ANR	7616100	BreakStatement	break ;	1854:12:72961:72966	7615535	11	True				
ANR	7616101	Label	case TIF_DFMT :	1857:8:73001:73014	7615535	12	True				
ANR	7616102	Identifier	TIF_DFMT		7615535	0					
ANR	7616103	ExpressionStatement	"image = tiftoimage ( parameters . infile , & parameters )"	1858:12:73028:73078	7615535	13	True				
ANR	7616104	AssignmentExpression	"image = tiftoimage ( parameters . infile , & parameters )"		7615535	0		=			
ANR	7616105	Identifier	image		7615535	0					
ANR	7616106	CallExpression	"tiftoimage ( parameters . infile , & parameters )"		7615535	1					
ANR	7616107	Callee	tiftoimage		7615535	0					
ANR	7616108	Identifier	tiftoimage		7615535	0					
ANR	7616109	ArgumentList	parameters . infile		7615535	1					
ANR	7616110	Argument	parameters . infile		7615535	0					
ANR	7616111	MemberAccess	parameters . infile		7615535	0					
ANR	7616112	Identifier	parameters		7615535	0					
ANR	7616113	Identifier	infile		7615535	1					
ANR	7616114	Argument	& parameters		7615535	1					
ANR	7616115	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616116	UnaryOperator	&		7615535	0					
ANR	7616117	Identifier	parameters		7615535	1					
ANR	7616118	IfStatement	if ( ! image )		7615535	14					
ANR	7616119	Condition	! image	1859:16:73096:73101	7615535	0	True				
ANR	7616120	UnaryOperationExpression	! image		7615535	0					
ANR	7616121	UnaryOperator	!		7615535	0					
ANR	7616122	Identifier	image		7615535	1					
ANR	7616123	CompoundStatement		134:24:4018:4018	7615535	1					
ANR	7616124	ExpressionStatement	"fprintf ( stderr , ""Unable to load tiff file\\n"" )"	1860:16:73122:73167	7615535	0	True				
ANR	7616125	CallExpression	"fprintf ( stderr , ""Unable to load tiff file\\n"" )"		7615535	0					
ANR	7616126	Callee	fprintf		7615535	0					
ANR	7616127	Identifier	fprintf		7615535	0					
ANR	7616128	ArgumentList	stderr		7615535	1					
ANR	7616129	Argument	stderr		7615535	0					
ANR	7616130	Identifier	stderr		7615535	0					
ANR	7616131	Argument	"""Unable to load tiff file\\n"""		7615535	1					
ANR	7616132	PrimaryExpression	"""Unable to load tiff file\\n"""		7615535	0					
ANR	7616133	ReturnStatement	return 1 ;	1861:16:73185:73193	7615535	1	True				
ANR	7616134	PrimaryExpression	1		7615535	0					
ANR	7616135	BreakStatement	break ;	1863:12:73221:73226	7615535	15	True				
ANR	7616136	Label	case RAW_DFMT :	1866:8:73267:73280	7615535	16	True				
ANR	7616137	Identifier	RAW_DFMT		7615535	0					
ANR	7616138	ExpressionStatement	"image = rawtoimage ( parameters . infile , & parameters , & raw_cp )"	1867:12:73294:73353	7615535	17	True				
ANR	7616139	AssignmentExpression	"image = rawtoimage ( parameters . infile , & parameters , & raw_cp )"		7615535	0		=			
ANR	7616140	Identifier	image		7615535	0					
ANR	7616141	CallExpression	"rawtoimage ( parameters . infile , & parameters , & raw_cp )"		7615535	1					
ANR	7616142	Callee	rawtoimage		7615535	0					
ANR	7616143	Identifier	rawtoimage		7615535	0					
ANR	7616144	ArgumentList	parameters . infile		7615535	1					
ANR	7616145	Argument	parameters . infile		7615535	0					
ANR	7616146	MemberAccess	parameters . infile		7615535	0					
ANR	7616147	Identifier	parameters		7615535	0					
ANR	7616148	Identifier	infile		7615535	1					
ANR	7616149	Argument	& parameters		7615535	1					
ANR	7616150	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616151	UnaryOperator	&		7615535	0					
ANR	7616152	Identifier	parameters		7615535	1					
ANR	7616153	Argument	& raw_cp		7615535	2					
ANR	7616154	UnaryOperationExpression	& raw_cp		7615535	0					
ANR	7616155	UnaryOperator	&		7615535	0					
ANR	7616156	Identifier	raw_cp		7615535	1					
ANR	7616157	IfStatement	if ( ! image )		7615535	18					
ANR	7616158	Condition	! image	1868:16:73371:73376	7615535	0	True				
ANR	7616159	UnaryOperationExpression	! image		7615535	0					
ANR	7616160	UnaryOperator	!		7615535	0					
ANR	7616161	Identifier	image		7615535	1					
ANR	7616162	CompoundStatement		143:24:4293:4293	7615535	1					
ANR	7616163	ExpressionStatement	"fprintf ( stderr , ""Unable to load raw file\\n"" )"	1869:16:73397:73441	7615535	0	True				
ANR	7616164	CallExpression	"fprintf ( stderr , ""Unable to load raw file\\n"" )"		7615535	0					
ANR	7616165	Callee	fprintf		7615535	0					
ANR	7616166	Identifier	fprintf		7615535	0					
ANR	7616167	ArgumentList	stderr		7615535	1					
ANR	7616168	Argument	stderr		7615535	0					
ANR	7616169	Identifier	stderr		7615535	0					
ANR	7616170	Argument	"""Unable to load raw file\\n"""		7615535	1					
ANR	7616171	PrimaryExpression	"""Unable to load raw file\\n"""		7615535	0					
ANR	7616172	ReturnStatement	return 1 ;	1870:16:73459:73467	7615535	1	True				
ANR	7616173	PrimaryExpression	1		7615535	0					
ANR	7616174	BreakStatement	break ;	1872:12:73495:73500	7615535	19	True				
ANR	7616175	Label	case RAWL_DFMT :	1874:8:73511:73525	7615535	20	True				
ANR	7616176	Identifier	RAWL_DFMT		7615535	0					
ANR	7616177	ExpressionStatement	"image = rawltoimage ( parameters . infile , & parameters , & raw_cp )"	1875:12:73539:73599	7615535	21	True				
ANR	7616178	AssignmentExpression	"image = rawltoimage ( parameters . infile , & parameters , & raw_cp )"		7615535	0		=			
ANR	7616179	Identifier	image		7615535	0					
ANR	7616180	CallExpression	"rawltoimage ( parameters . infile , & parameters , & raw_cp )"		7615535	1					
ANR	7616181	Callee	rawltoimage		7615535	0					
ANR	7616182	Identifier	rawltoimage		7615535	0					
ANR	7616183	ArgumentList	parameters . infile		7615535	1					
ANR	7616184	Argument	parameters . infile		7615535	0					
ANR	7616185	MemberAccess	parameters . infile		7615535	0					
ANR	7616186	Identifier	parameters		7615535	0					
ANR	7616187	Identifier	infile		7615535	1					
ANR	7616188	Argument	& parameters		7615535	1					
ANR	7616189	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616190	UnaryOperator	&		7615535	0					
ANR	7616191	Identifier	parameters		7615535	1					
ANR	7616192	Argument	& raw_cp		7615535	2					
ANR	7616193	UnaryOperationExpression	& raw_cp		7615535	0					
ANR	7616194	UnaryOperator	&		7615535	0					
ANR	7616195	Identifier	raw_cp		7615535	1					
ANR	7616196	IfStatement	if ( ! image )		7615535	22					
ANR	7616197	Condition	! image	1876:16:73617:73622	7615535	0	True				
ANR	7616198	UnaryOperationExpression	! image		7615535	0					
ANR	7616199	UnaryOperator	!		7615535	0					
ANR	7616200	Identifier	image		7615535	1					
ANR	7616201	CompoundStatement		151:24:4539:4539	7615535	1					
ANR	7616202	ExpressionStatement	"fprintf ( stderr , ""Unable to load raw file\\n"" )"	1877:16:73643:73687	7615535	0	True				
ANR	7616203	CallExpression	"fprintf ( stderr , ""Unable to load raw file\\n"" )"		7615535	0					
ANR	7616204	Callee	fprintf		7615535	0					
ANR	7616205	Identifier	fprintf		7615535	0					
ANR	7616206	ArgumentList	stderr		7615535	1					
ANR	7616207	Argument	stderr		7615535	0					
ANR	7616208	Identifier	stderr		7615535	0					
ANR	7616209	Argument	"""Unable to load raw file\\n"""		7615535	1					
ANR	7616210	PrimaryExpression	"""Unable to load raw file\\n"""		7615535	0					
ANR	7616211	ReturnStatement	return 1 ;	1878:16:73705:73713	7615535	1	True				
ANR	7616212	PrimaryExpression	1		7615535	0					
ANR	7616213	BreakStatement	break ;	1880:12:73741:73746	7615535	23	True				
ANR	7616214	Label	case TGA_DFMT :	1882:8:73757:73770	7615535	24	True				
ANR	7616215	Identifier	TGA_DFMT		7615535	0					
ANR	7616216	ExpressionStatement	"image = tgatoimage ( parameters . infile , & parameters )"	1883:12:73784:73834	7615535	25	True				
ANR	7616217	AssignmentExpression	"image = tgatoimage ( parameters . infile , & parameters )"		7615535	0		=			
ANR	7616218	Identifier	image		7615535	0					
ANR	7616219	CallExpression	"tgatoimage ( parameters . infile , & parameters )"		7615535	1					
ANR	7616220	Callee	tgatoimage		7615535	0					
ANR	7616221	Identifier	tgatoimage		7615535	0					
ANR	7616222	ArgumentList	parameters . infile		7615535	1					
ANR	7616223	Argument	parameters . infile		7615535	0					
ANR	7616224	MemberAccess	parameters . infile		7615535	0					
ANR	7616225	Identifier	parameters		7615535	0					
ANR	7616226	Identifier	infile		7615535	1					
ANR	7616227	Argument	& parameters		7615535	1					
ANR	7616228	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616229	UnaryOperator	&		7615535	0					
ANR	7616230	Identifier	parameters		7615535	1					
ANR	7616231	IfStatement	if ( ! image )		7615535	26					
ANR	7616232	Condition	! image	1884:16:73852:73857	7615535	0	True				
ANR	7616233	UnaryOperationExpression	! image		7615535	0					
ANR	7616234	UnaryOperator	!		7615535	0					
ANR	7616235	Identifier	image		7615535	1					
ANR	7616236	CompoundStatement		159:24:4774:4774	7615535	1					
ANR	7616237	ExpressionStatement	"fprintf ( stderr , ""Unable to load tga file\\n"" )"	1885:16:73878:73922	7615535	0	True				
ANR	7616238	CallExpression	"fprintf ( stderr , ""Unable to load tga file\\n"" )"		7615535	0					
ANR	7616239	Callee	fprintf		7615535	0					
ANR	7616240	Identifier	fprintf		7615535	0					
ANR	7616241	ArgumentList	stderr		7615535	1					
ANR	7616242	Argument	stderr		7615535	0					
ANR	7616243	Identifier	stderr		7615535	0					
ANR	7616244	Argument	"""Unable to load tga file\\n"""		7615535	1					
ANR	7616245	PrimaryExpression	"""Unable to load tga file\\n"""		7615535	0					
ANR	7616246	ReturnStatement	return 1 ;	1886:16:73940:73948	7615535	1	True				
ANR	7616247	PrimaryExpression	1		7615535	0					
ANR	7616248	BreakStatement	break ;	1888:12:73976:73981	7615535	27	True				
ANR	7616249	Label	case PNG_DFMT :	1891:8:74015:74028	7615535	28	True				
ANR	7616250	Identifier	PNG_DFMT		7615535	0					
ANR	7616251	ExpressionStatement	"image = pngtoimage ( parameters . infile , & parameters )"	1892:12:74042:74092	7615535	29	True				
ANR	7616252	AssignmentExpression	"image = pngtoimage ( parameters . infile , & parameters )"		7615535	0		=			
ANR	7616253	Identifier	image		7615535	0					
ANR	7616254	CallExpression	"pngtoimage ( parameters . infile , & parameters )"		7615535	1					
ANR	7616255	Callee	pngtoimage		7615535	0					
ANR	7616256	Identifier	pngtoimage		7615535	0					
ANR	7616257	ArgumentList	parameters . infile		7615535	1					
ANR	7616258	Argument	parameters . infile		7615535	0					
ANR	7616259	MemberAccess	parameters . infile		7615535	0					
ANR	7616260	Identifier	parameters		7615535	0					
ANR	7616261	Identifier	infile		7615535	1					
ANR	7616262	Argument	& parameters		7615535	1					
ANR	7616263	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616264	UnaryOperator	&		7615535	0					
ANR	7616265	Identifier	parameters		7615535	1					
ANR	7616266	IfStatement	if ( ! image )		7615535	30					
ANR	7616267	Condition	! image	1893:16:74110:74115	7615535	0	True				
ANR	7616268	UnaryOperationExpression	! image		7615535	0					
ANR	7616269	UnaryOperator	!		7615535	0					
ANR	7616270	Identifier	image		7615535	1					
ANR	7616271	CompoundStatement		168:24:5032:5032	7615535	1					
ANR	7616272	ExpressionStatement	"fprintf ( stderr , ""Unable to load png file\\n"" )"	1894:16:74136:74180	7615535	0	True				
ANR	7616273	CallExpression	"fprintf ( stderr , ""Unable to load png file\\n"" )"		7615535	0					
ANR	7616274	Callee	fprintf		7615535	0					
ANR	7616275	Identifier	fprintf		7615535	0					
ANR	7616276	ArgumentList	stderr		7615535	1					
ANR	7616277	Argument	stderr		7615535	0					
ANR	7616278	Identifier	stderr		7615535	0					
ANR	7616279	Argument	"""Unable to load png file\\n"""		7615535	1					
ANR	7616280	PrimaryExpression	"""Unable to load png file\\n"""		7615535	0					
ANR	7616281	ReturnStatement	return 1 ;	1895:16:74198:74206	7615535	1	True				
ANR	7616282	PrimaryExpression	1		7615535	0					
ANR	7616283	BreakStatement	break ;	1897:12:74234:74239	7615535	31	True				
ANR	7616284	IfStatement	if ( ! image )		7615535	5					
ANR	7616285	Condition	! image	1904:12:74417:74422	7615535	0	True				
ANR	7616286	UnaryOperationExpression	! image		7615535	0					
ANR	7616287	UnaryOperator	!		7615535	0					
ANR	7616288	Identifier	image		7615535	1					
ANR	7616289	CompoundStatement		179:20:5339:5339	7615535	1					
ANR	7616290	ExpressionStatement	"fprintf ( stderr , ""Unable to load file: got no image\\n"" )"	1905:12:74439:74493	7615535	0	True				
ANR	7616291	CallExpression	"fprintf ( stderr , ""Unable to load file: got no image\\n"" )"		7615535	0					
ANR	7616292	Callee	fprintf		7615535	0					
ANR	7616293	Identifier	fprintf		7615535	0					
ANR	7616294	ArgumentList	stderr		7615535	1					
ANR	7616295	Argument	stderr		7615535	0					
ANR	7616296	Identifier	stderr		7615535	0					
ANR	7616297	Argument	"""Unable to load file: got no image\\n"""		7615535	1					
ANR	7616298	PrimaryExpression	"""Unable to load file: got no image\\n"""		7615535	0					
ANR	7616299	ReturnStatement	return 1 ;	1906:12:74507:74515	7615535	1	True				
ANR	7616300	PrimaryExpression	1		7615535	0					
ANR	7616301	IfStatement	if ( parameters . tcp_mct == ( char ) 255 )		7615535	6					
ANR	7616302	Condition	parameters . tcp_mct == ( char ) 255	1910:12:74583:74630	7615535	0	True				
ANR	7616303	EqualityExpression	parameters . tcp_mct == ( char ) 255		7615535	0		==			
ANR	7616304	MemberAccess	parameters . tcp_mct		7615535	0					
ANR	7616305	Identifier	parameters		7615535	0					
ANR	7616306	Identifier	tcp_mct		7615535	1					
ANR	7616307	CastExpression	( char ) 255		7615535	1					
ANR	7616308	CastTarget	char		7615535	0					
ANR	7616309	PrimaryExpression	255		7615535	1					
ANR	7616310	CompoundStatement		186:21:5547:5547	7615535	1					
ANR	7616311	ExpressionStatement	parameters . tcp_mct = ( image -> numcomps >= 3 ) ? 1 : 0	1912:12:74694:74745	7615535	0	True				
ANR	7616312	AssignmentExpression	parameters . tcp_mct = ( image -> numcomps >= 3 ) ? 1 : 0		7615535	0		=			
ANR	7616313	MemberAccess	parameters . tcp_mct		7615535	0					
ANR	7616314	Identifier	parameters		7615535	0					
ANR	7616315	Identifier	tcp_mct		7615535	1					
ANR	7616316	ConditionalExpression	( image -> numcomps >= 3 ) ? 1 : 0		7615535	1					
ANR	7616317	Condition	image -> numcomps >= 3		7615535	0					
ANR	7616318	RelationalExpression	image -> numcomps >= 3		7615535	0		>=			
ANR	7616319	PtrMemberAccess	image -> numcomps		7615535	0					
ANR	7616320	Identifier	image		7615535	0					
ANR	7616321	Identifier	numcomps		7615535	1					
ANR	7616322	PrimaryExpression	3		7615535	1					
ANR	7616323	PrimaryExpression	1		7615535	1					
ANR	7616324	PrimaryExpression	0		7615535	2					
ANR	7616325	ElseStatement	else		7615535	0					
ANR	7616326	CompoundStatement		188:15:5676:5676	7615535	0					
ANR	7616327	IfStatement	if ( ( parameters . tcp_mct == 1 ) && ( image -> numcomps < 3 ) )		7615535	0					
ANR	7616328	Condition	( parameters . tcp_mct == 1 ) && ( image -> numcomps < 3 )	1914:16:74834:74883	7615535	0	True				
ANR	7616329	AndExpression	( parameters . tcp_mct == 1 ) && ( image -> numcomps < 3 )		7615535	0		&&			
ANR	7616330	EqualityExpression	parameters . tcp_mct == 1		7615535	0		==			
ANR	7616331	MemberAccess	parameters . tcp_mct		7615535	0					
ANR	7616332	Identifier	parameters		7615535	0					
ANR	7616333	Identifier	tcp_mct		7615535	1					
ANR	7616334	PrimaryExpression	1		7615535	1					
ANR	7616335	RelationalExpression	image -> numcomps < 3		7615535	1		<			
ANR	7616336	PtrMemberAccess	image -> numcomps		7615535	0					
ANR	7616337	Identifier	image		7615535	0					
ANR	7616338	Identifier	numcomps		7615535	1					
ANR	7616339	PrimaryExpression	3		7615535	1					
ANR	7616340	CompoundStatement		189:68:5800:5800	7615535	1					
ANR	7616341	ExpressionStatement	"fprintf ( stderr , ""RGB->YCC conversion cannot be used:\\n"" )"	1915:16:74904:74960	7615535	0	True				
ANR	7616342	CallExpression	"fprintf ( stderr , ""RGB->YCC conversion cannot be used:\\n"" )"		7615535	0					
ANR	7616343	Callee	fprintf		7615535	0					
ANR	7616344	Identifier	fprintf		7615535	0					
ANR	7616345	ArgumentList	stderr		7615535	1					
ANR	7616346	Argument	stderr		7615535	0					
ANR	7616347	Identifier	stderr		7615535	0					
ANR	7616348	Argument	"""RGB->YCC conversion cannot be used:\\n"""		7615535	1					
ANR	7616349	PrimaryExpression	"""RGB->YCC conversion cannot be used:\\n"""		7615535	0					
ANR	7616350	ExpressionStatement	"fprintf ( stderr , ""Input image has less than 3 components\\n"" )"	1916:16:74978:75037	7615535	1	True				
ANR	7616351	CallExpression	"fprintf ( stderr , ""Input image has less than 3 components\\n"" )"		7615535	0					
ANR	7616352	Callee	fprintf		7615535	0					
ANR	7616353	Identifier	fprintf		7615535	0					
ANR	7616354	ArgumentList	stderr		7615535	1					
ANR	7616355	Argument	stderr		7615535	0					
ANR	7616356	Identifier	stderr		7615535	0					
ANR	7616357	Argument	"""Input image has less than 3 components\\n"""		7615535	1					
ANR	7616358	PrimaryExpression	"""Input image has less than 3 components\\n"""		7615535	0					
ANR	7616359	ReturnStatement	return 1 ;	1917:16:75055:75063	7615535	2	True				
ANR	7616360	PrimaryExpression	1		7615535	0					
ANR	7616361	IfStatement	if ( ( parameters . tcp_mct == 2 ) && ( ! parameters . mct_data ) )		7615535	1					
ANR	7616362	Condition	( parameters . tcp_mct == 2 ) && ( ! parameters . mct_data )	1919:16:75095:75145	7615535	0	True				
ANR	7616363	AndExpression	( parameters . tcp_mct == 2 ) && ( ! parameters . mct_data )		7615535	0		&&			
ANR	7616364	EqualityExpression	parameters . tcp_mct == 2		7615535	0		==			
ANR	7616365	MemberAccess	parameters . tcp_mct		7615535	0					
ANR	7616366	Identifier	parameters		7615535	0					
ANR	7616367	Identifier	tcp_mct		7615535	1					
ANR	7616368	PrimaryExpression	2		7615535	1					
ANR	7616369	UnaryOperationExpression	! parameters . mct_data		7615535	1					
ANR	7616370	UnaryOperator	!		7615535	0					
ANR	7616371	MemberAccess	parameters . mct_data		7615535	1					
ANR	7616372	Identifier	parameters		7615535	0					
ANR	7616373	Identifier	mct_data		7615535	1					
ANR	7616374	CompoundStatement		194:69:6062:6062	7615535	1					
ANR	7616375	ExpressionStatement	"fprintf ( stderr , ""Custom MCT has been set but no array-based MCT\\n"" )"	1920:16:75166:75233	7615535	0	True				
ANR	7616376	CallExpression	"fprintf ( stderr , ""Custom MCT has been set but no array-based MCT\\n"" )"		7615535	0					
ANR	7616377	Callee	fprintf		7615535	0					
ANR	7616378	Identifier	fprintf		7615535	0					
ANR	7616379	ArgumentList	stderr		7615535	1					
ANR	7616380	Argument	stderr		7615535	0					
ANR	7616381	Identifier	stderr		7615535	0					
ANR	7616382	Argument	"""Custom MCT has been set but no array-based MCT\\n"""		7615535	1					
ANR	7616383	PrimaryExpression	"""Custom MCT has been set but no array-based MCT\\n"""		7615535	0					
ANR	7616384	ExpressionStatement	"fprintf ( stderr , ""has been provided. Aborting.\\n"" )"	1921:16:75251:75300	7615535	1	True				
ANR	7616385	CallExpression	"fprintf ( stderr , ""has been provided. Aborting.\\n"" )"		7615535	0					
ANR	7616386	Callee	fprintf		7615535	0					
ANR	7616387	Identifier	fprintf		7615535	0					
ANR	7616388	ArgumentList	stderr		7615535	1					
ANR	7616389	Argument	stderr		7615535	0					
ANR	7616390	Identifier	stderr		7615535	0					
ANR	7616391	Argument	"""has been provided. Aborting.\\n"""		7615535	1					
ANR	7616392	PrimaryExpression	"""has been provided. Aborting.\\n"""		7615535	0					
ANR	7616393	ReturnStatement	return 1 ;	1922:16:75318:75326	7615535	2	True				
ANR	7616394	PrimaryExpression	1		7615535	0					
ANR	7616395	SwitchStatement	switch ( parameters . cod_format )		7615535	7					
ANR	7616396	Condition	parameters . cod_format	1929:16:75456:75476	7615535	0	True				
ANR	7616397	MemberAccess	parameters . cod_format		7615535	0					
ANR	7616398	Identifier	parameters		7615535	0					
ANR	7616399	Identifier	cod_format		7615535	1					
ANR	7616400	CompoundStatement		204:39:6393:6393	7615535	1					
ANR	7616401	Label	case J2K_CFMT :	1930:8:75489:75502	7615535	0	True				
ANR	7616402	Identifier	J2K_CFMT		7615535	0					
ANR	7616403	CompoundStatement		205:23:6418:6418	7615535	1					
ANR	7616404	ExpressionStatement	l_codec = opj_create_compress ( OPJ_CODEC_J2K )	1932:12:75584:75628	7615535	0	True				
ANR	7616405	AssignmentExpression	l_codec = opj_create_compress ( OPJ_CODEC_J2K )		7615535	0		=			
ANR	7616406	Identifier	l_codec		7615535	0					
ANR	7616407	CallExpression	opj_create_compress ( OPJ_CODEC_J2K )		7615535	1					
ANR	7616408	Callee	opj_create_compress		7615535	0					
ANR	7616409	Identifier	opj_create_compress		7615535	0					
ANR	7616410	ArgumentList	OPJ_CODEC_J2K		7615535	1					
ANR	7616411	Argument	OPJ_CODEC_J2K		7615535	0					
ANR	7616412	Identifier	OPJ_CODEC_J2K		7615535	0					
ANR	7616413	BreakStatement	break ;	1933:12:75642:75647	7615535	1	True				
ANR	7616414	Label	case JP2_CFMT :	1935:8:75667:75680	7615535	2	True				
ANR	7616415	Identifier	JP2_CFMT		7615535	0					
ANR	7616416	CompoundStatement		210:23:6596:6596	7615535	3					
ANR	7616417	ExpressionStatement	l_codec = opj_create_compress ( OPJ_CODEC_JP2 )	1937:12:75773:75817	7615535	0	True				
ANR	7616418	AssignmentExpression	l_codec = opj_create_compress ( OPJ_CODEC_JP2 )		7615535	0		=			
ANR	7616419	Identifier	l_codec		7615535	0					
ANR	7616420	CallExpression	opj_create_compress ( OPJ_CODEC_JP2 )		7615535	1					
ANR	7616421	Callee	opj_create_compress		7615535	0					
ANR	7616422	Identifier	opj_create_compress		7615535	0					
ANR	7616423	ArgumentList	OPJ_CODEC_JP2		7615535	1					
ANR	7616424	Argument	OPJ_CODEC_JP2		7615535	0					
ANR	7616425	Identifier	OPJ_CODEC_JP2		7615535	0					
ANR	7616426	BreakStatement	break ;	1938:12:75831:75836	7615535	1	True				
ANR	7616427	Label	default :	1940:8:75856:75863	7615535	4	True				
ANR	7616428	Identifier	default		7615535	0					
ANR	7616429	ExpressionStatement	"fprintf ( stderr , ""skipping file..\\n"" )"	1941:12:75877:75913	7615535	5	True				
ANR	7616430	CallExpression	"fprintf ( stderr , ""skipping file..\\n"" )"		7615535	0					
ANR	7616431	Callee	fprintf		7615535	0					
ANR	7616432	Identifier	fprintf		7615535	0					
ANR	7616433	ArgumentList	stderr		7615535	1					
ANR	7616434	Argument	stderr		7615535	0					
ANR	7616435	Identifier	stderr		7615535	0					
ANR	7616436	Argument	"""skipping file..\\n"""		7615535	1					
ANR	7616437	PrimaryExpression	"""skipping file..\\n"""		7615535	0					
ANR	7616438	ExpressionStatement	opj_stream_destroy ( l_stream )	1942:12:75927:75955	7615535	6	True				
ANR	7616439	CallExpression	opj_stream_destroy ( l_stream )		7615535	0					
ANR	7616440	Callee	opj_stream_destroy		7615535	0					
ANR	7616441	Identifier	opj_stream_destroy		7615535	0					
ANR	7616442	ArgumentList	l_stream		7615535	1					
ANR	7616443	Argument	l_stream		7615535	0					
ANR	7616444	Identifier	l_stream		7615535	0					
ANR	7616445	ContinueStatement	continue ;	1943:12:75969:75977	7615535	7	True				
ANR	7616446	ExpressionStatement	"opj_set_info_handler ( l_codec , info_callback , 00 )"	1947:8:76070:76118	7615535	8	True				
ANR	7616447	CallExpression	"opj_set_info_handler ( l_codec , info_callback , 00 )"		7615535	0					
ANR	7616448	Callee	opj_set_info_handler		7615535	0					
ANR	7616449	Identifier	opj_set_info_handler		7615535	0					
ANR	7616450	ArgumentList	l_codec		7615535	1					
ANR	7616451	Argument	l_codec		7615535	0					
ANR	7616452	Identifier	l_codec		7615535	0					
ANR	7616453	Argument	info_callback		7615535	1					
ANR	7616454	Identifier	info_callback		7615535	0					
ANR	7616455	Argument	00		7615535	2					
ANR	7616456	PrimaryExpression	00		7615535	0					
ANR	7616457	ExpressionStatement	"opj_set_warning_handler ( l_codec , warning_callback , 00 )"	1948:8:76128:76182	7615535	9	True				
ANR	7616458	CallExpression	"opj_set_warning_handler ( l_codec , warning_callback , 00 )"		7615535	0					
ANR	7616459	Callee	opj_set_warning_handler		7615535	0					
ANR	7616460	Identifier	opj_set_warning_handler		7615535	0					
ANR	7616461	ArgumentList	l_codec		7615535	1					
ANR	7616462	Argument	l_codec		7615535	0					
ANR	7616463	Identifier	l_codec		7615535	0					
ANR	7616464	Argument	warning_callback		7615535	1					
ANR	7616465	Identifier	warning_callback		7615535	0					
ANR	7616466	Argument	00		7615535	2					
ANR	7616467	PrimaryExpression	00		7615535	0					
ANR	7616468	ExpressionStatement	"opj_set_error_handler ( l_codec , error_callback , 00 )"	1949:8:76192:76242	7615535	10	True				
ANR	7616469	CallExpression	"opj_set_error_handler ( l_codec , error_callback , 00 )"		7615535	0					
ANR	7616470	Callee	opj_set_error_handler		7615535	0					
ANR	7616471	Identifier	opj_set_error_handler		7615535	0					
ANR	7616472	ArgumentList	l_codec		7615535	1					
ANR	7616473	Argument	l_codec		7615535	0					
ANR	7616474	Identifier	l_codec		7615535	0					
ANR	7616475	Argument	error_callback		7615535	1					
ANR	7616476	Identifier	error_callback		7615535	0					
ANR	7616477	Argument	00		7615535	2					
ANR	7616478	PrimaryExpression	00		7615535	0					
ANR	7616479	IfStatement	if ( bUseTiles )		7615535	11					
ANR	7616480	Condition	bUseTiles	1951:12:76257:76265	7615535	0	True				
ANR	7616481	Identifier	bUseTiles		7615535	0					
ANR	7616482	CompoundStatement		226:23:7182:7182	7615535	1					
ANR	7616483	ExpressionStatement	parameters . cp_tx0 = 0	1952:12:76282:76303	7615535	0	True				
ANR	7616484	AssignmentExpression	parameters . cp_tx0 = 0		7615535	0		=			
ANR	7616485	MemberAccess	parameters . cp_tx0		7615535	0					
ANR	7616486	Identifier	parameters		7615535	0					
ANR	7616487	Identifier	cp_tx0		7615535	1					
ANR	7616488	PrimaryExpression	0		7615535	1					
ANR	7616489	ExpressionStatement	parameters . cp_ty0 = 0	1953:12:76317:76338	7615535	1	True				
ANR	7616490	AssignmentExpression	parameters . cp_ty0 = 0		7615535	0		=			
ANR	7616491	MemberAccess	parameters . cp_ty0		7615535	0					
ANR	7616492	Identifier	parameters		7615535	0					
ANR	7616493	Identifier	cp_ty0		7615535	1					
ANR	7616494	PrimaryExpression	0		7615535	1					
ANR	7616495	ExpressionStatement	parameters . tile_size_on = OPJ_TRUE	1954:12:76352:76386	7615535	2	True				
ANR	7616496	AssignmentExpression	parameters . tile_size_on = OPJ_TRUE		7615535	0		=			
ANR	7616497	MemberAccess	parameters . tile_size_on		7615535	0					
ANR	7616498	Identifier	parameters		7615535	0					
ANR	7616499	Identifier	tile_size_on		7615535	1					
ANR	7616500	Identifier	OPJ_TRUE		7615535	1					
ANR	7616501	ExpressionStatement	parameters . cp_tdx = 512	1955:12:76400:76423	7615535	3	True				
ANR	7616502	AssignmentExpression	parameters . cp_tdx = 512		7615535	0		=			
ANR	7616503	MemberAccess	parameters . cp_tdx		7615535	0					
ANR	7616504	Identifier	parameters		7615535	0					
ANR	7616505	Identifier	cp_tdx		7615535	1					
ANR	7616506	PrimaryExpression	512		7615535	1					
ANR	7616507	ExpressionStatement	parameters . cp_tdy = 512	1956:12:76437:76460	7615535	4	True				
ANR	7616508	AssignmentExpression	parameters . cp_tdy = 512		7615535	0		=			
ANR	7616509	MemberAccess	parameters . cp_tdy		7615535	0					
ANR	7616510	Identifier	parameters		7615535	0					
ANR	7616511	Identifier	cp_tdy		7615535	1					
ANR	7616512	PrimaryExpression	512		7615535	1					
ANR	7616513	IfStatement	"if ( ! opj_setup_encoder ( l_codec , & parameters , image ) )"		7615535	12					
ANR	7616514	Condition	"! opj_setup_encoder ( l_codec , & parameters , image )"	1958:12:76484:76531	7615535	0	True				
ANR	7616515	UnaryOperationExpression	"! opj_setup_encoder ( l_codec , & parameters , image )"		7615535	0					
ANR	7616516	UnaryOperator	!		7615535	0					
ANR	7616517	CallExpression	"opj_setup_encoder ( l_codec , & parameters , image )"		7615535	1					
ANR	7616518	Callee	opj_setup_encoder		7615535	0					
ANR	7616519	Identifier	opj_setup_encoder		7615535	0					
ANR	7616520	ArgumentList	l_codec		7615535	1					
ANR	7616521	Argument	l_codec		7615535	0					
ANR	7616522	Identifier	l_codec		7615535	0					
ANR	7616523	Argument	& parameters		7615535	1					
ANR	7616524	UnaryOperationExpression	& parameters		7615535	0					
ANR	7616525	UnaryOperator	&		7615535	0					
ANR	7616526	Identifier	parameters		7615535	1					
ANR	7616527	Argument	image		7615535	2					
ANR	7616528	Identifier	image		7615535	0					
ANR	7616529	CompoundStatement		233:62:7448:7448	7615535	1					
ANR	7616530	ExpressionStatement	"fprintf ( stderr , ""failed to encode image: opj_setup_encoder\\n"" )"	1959:12:76548:76610	7615535	0	True				
ANR	7616531	CallExpression	"fprintf ( stderr , ""failed to encode image: opj_setup_encoder\\n"" )"		7615535	0					
ANR	7616532	Callee	fprintf		7615535	0					
ANR	7616533	Identifier	fprintf		7615535	0					
ANR	7616534	ArgumentList	stderr		7615535	1					
ANR	7616535	Argument	stderr		7615535	0					
ANR	7616536	Identifier	stderr		7615535	0					
ANR	7616537	Argument	"""failed to encode image: opj_setup_encoder\\n"""		7615535	1					
ANR	7616538	PrimaryExpression	"""failed to encode image: opj_setup_encoder\\n"""		7615535	0					
ANR	7616539	ExpressionStatement	opj_destroy_codec ( l_codec )	1960:12:76624:76650	7615535	1	True				
ANR	7616540	CallExpression	opj_destroy_codec ( l_codec )		7615535	0					
ANR	7616541	Callee	opj_destroy_codec		7615535	0					
ANR	7616542	Identifier	opj_destroy_codec		7615535	0					
ANR	7616543	ArgumentList	l_codec		7615535	1					
ANR	7616544	Argument	l_codec		7615535	0					
ANR	7616545	Identifier	l_codec		7615535	0					
ANR	7616546	ExpressionStatement	opj_image_destroy ( image )	1961:12:76664:76688	7615535	2	True				
ANR	7616547	CallExpression	opj_image_destroy ( image )		7615535	0					
ANR	7616548	Callee	opj_image_destroy		7615535	0					
ANR	7616549	Identifier	opj_image_destroy		7615535	0					
ANR	7616550	ArgumentList	image		7615535	1					
ANR	7616551	Argument	image		7615535	0					
ANR	7616552	Identifier	image		7615535	0					
ANR	7616553	ReturnStatement	return 1 ;	1962:12:76702:76710	7615535	3	True				
ANR	7616554	PrimaryExpression	1		7615535	0					
ANR	7616555	ExpressionStatement	"l_stream = opj_stream_create_default_file_stream ( parameters . outfile , OPJ_FALSE )"	1966:8:76810:76889	7615535	13	True				
ANR	7616556	AssignmentExpression	"l_stream = opj_stream_create_default_file_stream ( parameters . outfile , OPJ_FALSE )"		7615535	0		=			
ANR	7616557	Identifier	l_stream		7615535	0					
ANR	7616558	CallExpression	"opj_stream_create_default_file_stream ( parameters . outfile , OPJ_FALSE )"		7615535	1					
ANR	7616559	Callee	opj_stream_create_default_file_stream		7615535	0					
ANR	7616560	Identifier	opj_stream_create_default_file_stream		7615535	0					
ANR	7616561	ArgumentList	parameters . outfile		7615535	1					
ANR	7616562	Argument	parameters . outfile		7615535	0					
ANR	7616563	MemberAccess	parameters . outfile		7615535	0					
ANR	7616564	Identifier	parameters		7615535	0					
ANR	7616565	Identifier	outfile		7615535	1					
ANR	7616566	Argument	OPJ_FALSE		7615535	1					
ANR	7616567	Identifier	OPJ_FALSE		7615535	0					
ANR	7616568	IfStatement	if ( ! l_stream )		7615535	14					
ANR	7616569	Condition	! l_stream	1967:12:76903:76912	7615535	0	True				
ANR	7616570	UnaryOperationExpression	! l_stream		7615535	0					
ANR	7616571	UnaryOperator	!		7615535	0					
ANR	7616572	Identifier	l_stream		7615535	1					
ANR	7616573	CompoundStatement		242:24:7829:7829	7615535	1					
ANR	7616574	ReturnStatement	return 1 ;	1968:12:76929:76937	7615535	0	True				
ANR	7616575	PrimaryExpression	1		7615535	0					
ANR	7616576	ExpressionStatement	"bSuccess = opj_start_compress ( l_codec , image , l_stream )"	1972:8:76989:77044	7615535	15	True				
ANR	7616577	AssignmentExpression	"bSuccess = opj_start_compress ( l_codec , image , l_stream )"		7615535	0		=			
ANR	7616578	Identifier	bSuccess		7615535	0					
ANR	7616579	CallExpression	"opj_start_compress ( l_codec , image , l_stream )"		7615535	1					
ANR	7616580	Callee	opj_start_compress		7615535	0					
ANR	7616581	Identifier	opj_start_compress		7615535	0					
ANR	7616582	ArgumentList	l_codec		7615535	1					
ANR	7616583	Argument	l_codec		7615535	0					
ANR	7616584	Identifier	l_codec		7615535	0					
ANR	7616585	Argument	image		7615535	1					
ANR	7616586	Identifier	image		7615535	0					
ANR	7616587	Argument	l_stream		7615535	2					
ANR	7616588	Identifier	l_stream		7615535	0					
ANR	7616589	IfStatement	if ( ! bSuccess )		7615535	16					
ANR	7616590	Condition	! bSuccess	1973:12:77058:77066	7615535	0	True				
ANR	7616591	UnaryOperationExpression	! bSuccess		7615535	0					
ANR	7616592	UnaryOperator	!		7615535	0					
ANR	7616593	Identifier	bSuccess		7615535	1					
ANR	7616594	CompoundStatement		248:24:7984:7984	7615535	1					
ANR	7616595	ExpressionStatement	"fprintf ( stderr , ""failed to encode image: opj_start_compress\\n"" )"	1974:12:77084:77147	7615535	0	True				
ANR	7616596	CallExpression	"fprintf ( stderr , ""failed to encode image: opj_start_compress\\n"" )"		7615535	0					
ANR	7616597	Callee	fprintf		7615535	0					
ANR	7616598	Identifier	fprintf		7615535	0					
ANR	7616599	ArgumentList	stderr		7615535	1					
ANR	7616600	Argument	stderr		7615535	0					
ANR	7616601	Identifier	stderr		7615535	0					
ANR	7616602	Argument	"""failed to encode image: opj_start_compress\\n"""		7615535	1					
ANR	7616603	PrimaryExpression	"""failed to encode image: opj_start_compress\\n"""		7615535	0					
ANR	7616604	IfStatement	if ( bSuccess && bUseTiles )		7615535	17					
ANR	7616605	Condition	bSuccess && bUseTiles	1976:12:77171:77191	7615535	0	True				
ANR	7616606	AndExpression	bSuccess && bUseTiles		7615535	0		&&			
ANR	7616607	Identifier	bSuccess		7615535	0					
ANR	7616608	Identifier	bUseTiles		7615535	1					
ANR	7616609	CompoundStatement		253:12:8152:8190	7615535	1					
ANR	7616610	IdentifierDeclStatement	OPJ_BYTE * l_data ;	1977:12:77208:77224	7615535	0	True				
ANR	7616611	IdentifierDecl	* l_data		7615535	0					
ANR	7616612	IdentifierDeclType	OPJ_BYTE *		7615535	0					
ANR	7616613	Identifier	l_data		7615535	1					
ANR	7616614	IdentifierDeclStatement	OPJ_UINT32 l_data_size = 512 * 512 * 3 ;	1978:12:77238:77276	7615535	1	True				
ANR	7616615	IdentifierDecl	l_data_size = 512 * 512 * 3		7615535	0					
ANR	7616616	IdentifierDeclType	OPJ_UINT32		7615535	0					
ANR	7616617	Identifier	l_data_size		7615535	1					
ANR	7616618	AssignmentExpression	l_data_size = 512 * 512 * 3		7615535	2		=			
ANR	7616619	Identifier	l_data_size		7615535	0					
ANR	7616620	MultiplicativeExpression	512 * 512 * 3		7615535	1		*			
ANR	7616621	PrimaryExpression	512		7615535	0					
ANR	7616622	MultiplicativeExpression	512 * 3		7615535	1		*			
ANR	7616623	PrimaryExpression	512		7615535	0					
ANR	7616624	PrimaryExpression	3		7615535	1					
ANR	7616625	ExpressionStatement	"l_data = ( OPJ_BYTE * ) calloc ( 1 , l_data_size )"	1979:12:77290:77333	7615535	2	True				
ANR	7616626	AssignmentExpression	"l_data = ( OPJ_BYTE * ) calloc ( 1 , l_data_size )"		7615535	0		=			
ANR	7616627	Identifier	l_data		7615535	0					
ANR	7616628	CastExpression	"( OPJ_BYTE * ) calloc ( 1 , l_data_size )"		7615535	1					
ANR	7616629	CastTarget	OPJ_BYTE *		7615535	0					
ANR	7616630	CallExpression	"calloc ( 1 , l_data_size )"		7615535	1					
ANR	7616631	Callee	calloc		7615535	0					
ANR	7616632	Identifier	calloc		7615535	0					
ANR	7616633	ArgumentList	1		7615535	1					
ANR	7616634	Argument	1		7615535	0					
ANR	7616635	PrimaryExpression	1		7615535	0					
ANR	7616636	Argument	l_data_size		7615535	1					
ANR	7616637	Identifier	l_data_size		7615535	0					
ANR	7616638	IfStatement	if ( l_data == NULL )		7615535	3					
ANR	7616639	Condition	l_data == NULL	1980:16:77351:77364	7615535	0	True				
ANR	7616640	EqualityExpression	l_data == NULL		7615535	0		==			
ANR	7616641	Identifier	l_data		7615535	0					
ANR	7616642	Identifier	NULL		7615535	1					
ANR	7616643	CompoundStatement		255:32:8281:8281	7615535	1					
ANR	7616644	GotoStatement	goto fails ;	1981:16:77385:77395	7615535	0	True				
ANR	7616645	Identifier	fails		7615535	0					
ANR	7616646	ForStatement	for ( i = 0 ; i < l_nb_tiles ; ++ i )		7615535	4					
ANR	7616647	ForInit	i = 0 ;	1983:17:77428:77433	7615535	0	True				
ANR	7616648	AssignmentExpression	i = 0		7615535	0		=			
ANR	7616649	Identifier	i		7615535	0					
ANR	7616650	PrimaryExpression	0		7615535	1					
ANR	7616651	Condition	i < l_nb_tiles	1983:24:77435:77448	7615535	1	True				
ANR	7616652	RelationalExpression	i < l_nb_tiles		7615535	0		<			
ANR	7616653	Identifier	i		7615535	0					
ANR	7616654	Identifier	l_nb_tiles		7615535	1					
ANR	7616655	UnaryExpression	++ i	1983:40:77451:77453	7615535	2	True				
ANR	7616656	IncDec	++		7615535	0					
ANR	7616657	Identifier	i		7615535	1					
ANR	7616658	CompoundStatement		258:45:8370:8370	7615535	3					
ANR	7616659	IfStatement	"if ( ! opj_write_tile ( l_codec , i , l_data , l_data_size , l_stream ) )"		7615535	0					
ANR	7616660	Condition	"! opj_write_tile ( l_codec , i , l_data , l_data_size , l_stream )"	1984:20:77478:77536	7615535	0	True				
ANR	7616661	UnaryOperationExpression	"! opj_write_tile ( l_codec , i , l_data , l_data_size , l_stream )"		7615535	0					
ANR	7616662	UnaryOperator	!		7615535	0					
ANR	7616663	CallExpression	"opj_write_tile ( l_codec , i , l_data , l_data_size , l_stream )"		7615535	1					
ANR	7616664	Callee	opj_write_tile		7615535	0					
ANR	7616665	Identifier	opj_write_tile		7615535	0					
ANR	7616666	ArgumentList	l_codec		7615535	1					
ANR	7616667	Argument	l_codec		7615535	0					
ANR	7616668	Identifier	l_codec		7615535	0					
ANR	7616669	Argument	i		7615535	1					
ANR	7616670	Identifier	i		7615535	0					
ANR	7616671	Argument	l_data		7615535	2					
ANR	7616672	Identifier	l_data		7615535	0					
ANR	7616673	Argument	l_data_size		7615535	3					
ANR	7616674	Identifier	l_data_size		7615535	0					
ANR	7616675	Argument	l_stream		7615535	4					
ANR	7616676	Identifier	l_stream		7615535	0					
ANR	7616677	CompoundStatement		259:81:8453:8453	7615535	1					
ANR	7616678	ExpressionStatement	"fprintf ( stderr , ""ERROR -> test_tile_encoder: failed to write the tile %d!\\n"" , i )"	1985:20:77561:77669	7615535	0	True				
ANR	7616679	CallExpression	"fprintf ( stderr , ""ERROR -> test_tile_encoder: failed to write the tile %d!\\n"" , i )"		7615535	0					
ANR	7616680	Callee	fprintf		7615535	0					
ANR	7616681	Identifier	fprintf		7615535	0					
ANR	7616682	ArgumentList	stderr		7615535	1					
ANR	7616683	Argument	stderr		7615535	0					
ANR	7616684	Identifier	stderr		7615535	0					
ANR	7616685	Argument	"""ERROR -> test_tile_encoder: failed to write the tile %d!\\n"""		7615535	1					
ANR	7616686	PrimaryExpression	"""ERROR -> test_tile_encoder: failed to write the tile %d!\\n"""		7615535	0					
ANR	7616687	Argument	i		7615535	2					
ANR	7616688	Identifier	i		7615535	0					
ANR	7616689	ExpressionStatement	opj_stream_destroy ( l_stream )	1987:20:77691:77719	7615535	1	True				
ANR	7616690	CallExpression	opj_stream_destroy ( l_stream )		7615535	0					
ANR	7616691	Callee	opj_stream_destroy		7615535	0					
ANR	7616692	Identifier	opj_stream_destroy		7615535	0					
ANR	7616693	ArgumentList	l_stream		7615535	1					
ANR	7616694	Argument	l_stream		7615535	0					
ANR	7616695	Identifier	l_stream		7615535	0					
ANR	7616696	ExpressionStatement	opj_destroy_codec ( l_codec )	1988:20:77741:77767	7615535	2	True				
ANR	7616697	CallExpression	opj_destroy_codec ( l_codec )		7615535	0					
ANR	7616698	Callee	opj_destroy_codec		7615535	0					
ANR	7616699	Identifier	opj_destroy_codec		7615535	0					
ANR	7616700	ArgumentList	l_codec		7615535	1					
ANR	7616701	Argument	l_codec		7615535	0					
ANR	7616702	Identifier	l_codec		7615535	0					
ANR	7616703	ExpressionStatement	opj_image_destroy ( image )	1989:20:77789:77813	7615535	3	True				
ANR	7616704	CallExpression	opj_image_destroy ( image )		7615535	0					
ANR	7616705	Callee	opj_image_destroy		7615535	0					
ANR	7616706	Identifier	opj_image_destroy		7615535	0					
ANR	7616707	ArgumentList	image		7615535	1					
ANR	7616708	Argument	image		7615535	0					
ANR	7616709	Identifier	image		7615535	0					
ANR	7616710	ReturnStatement	return 1 ;	1990:20:77835:77843	7615535	4	True				
ANR	7616711	PrimaryExpression	1		7615535	0					
ANR	7616712	ExpressionStatement	free ( l_data )	1993:12:77889:77901	7615535	5	True				
ANR	7616713	CallExpression	free ( l_data )		7615535	0					
ANR	7616714	Callee	free		7615535	0					
ANR	7616715	Identifier	free		7615535	0					
ANR	7616716	ArgumentList	l_data		7615535	1					
ANR	7616717	Argument	l_data		7615535	0					
ANR	7616718	Identifier	l_data		7615535	0					
ANR	7616719	ElseStatement	else		7615535	0					
ANR	7616720	CompoundStatement		269:15:8832:8832	7615535	0					
ANR	7616721	ExpressionStatement	"bSuccess = bSuccess && opj_encode ( l_codec , l_stream )"	1995:12:77932:77984	7615535	0	True				
ANR	7616722	AssignmentExpression	"bSuccess = bSuccess && opj_encode ( l_codec , l_stream )"		7615535	0		=			
ANR	7616723	Identifier	bSuccess		7615535	0					
ANR	7616724	AndExpression	"bSuccess && opj_encode ( l_codec , l_stream )"		7615535	1		&&			
ANR	7616725	Identifier	bSuccess		7615535	0					
ANR	7616726	CallExpression	"opj_encode ( l_codec , l_stream )"		7615535	1					
ANR	7616727	Callee	opj_encode		7615535	0					
ANR	7616728	Identifier	opj_encode		7615535	0					
ANR	7616729	ArgumentList	l_codec		7615535	1					
ANR	7616730	Argument	l_codec		7615535	0					
ANR	7616731	Identifier	l_codec		7615535	0					
ANR	7616732	Argument	l_stream		7615535	1					
ANR	7616733	Identifier	l_stream		7615535	0					
ANR	7616734	IfStatement	if ( ! bSuccess )		7615535	1					
ANR	7616735	Condition	! bSuccess	1996:16:78002:78010	7615535	0	True				
ANR	7616736	UnaryOperationExpression	! bSuccess		7615535	0					
ANR	7616737	UnaryOperator	!		7615535	0					
ANR	7616738	Identifier	bSuccess		7615535	1					
ANR	7616739	CompoundStatement		271:28:8928:8928	7615535	1					
ANR	7616740	ExpressionStatement	"fprintf ( stderr , ""failed to encode image: opj_encode\\n"" )"	1997:16:78032:78087	7615535	0	True				
ANR	7616741	CallExpression	"fprintf ( stderr , ""failed to encode image: opj_encode\\n"" )"		7615535	0					
ANR	7616742	Callee	fprintf		7615535	0					
ANR	7616743	Identifier	fprintf		7615535	0					
ANR	7616744	ArgumentList	stderr		7615535	1					
ANR	7616745	Argument	stderr		7615535	0					
ANR	7616746	Identifier	stderr		7615535	0					
ANR	7616747	Argument	"""failed to encode image: opj_encode\\n"""		7615535	1					
ANR	7616748	PrimaryExpression	"""failed to encode image: opj_encode\\n"""		7615535	0					
ANR	7616749	ExpressionStatement	"bSuccess = bSuccess && opj_end_compress ( l_codec , l_stream )"	2000:8:78121:78179	7615535	18	True				
ANR	7616750	AssignmentExpression	"bSuccess = bSuccess && opj_end_compress ( l_codec , l_stream )"		7615535	0		=			
ANR	7616751	Identifier	bSuccess		7615535	0					
ANR	7616752	AndExpression	"bSuccess && opj_end_compress ( l_codec , l_stream )"		7615535	1		&&			
ANR	7616753	Identifier	bSuccess		7615535	0					
ANR	7616754	CallExpression	"opj_end_compress ( l_codec , l_stream )"		7615535	1					
ANR	7616755	Callee	opj_end_compress		7615535	0					
ANR	7616756	Identifier	opj_end_compress		7615535	0					
ANR	7616757	ArgumentList	l_codec		7615535	1					
ANR	7616758	Argument	l_codec		7615535	0					
ANR	7616759	Identifier	l_codec		7615535	0					
ANR	7616760	Argument	l_stream		7615535	1					
ANR	7616761	Identifier	l_stream		7615535	0					
ANR	7616762	IfStatement	if ( ! bSuccess )		7615535	19					
ANR	7616763	Condition	! bSuccess	2001:12:78193:78201	7615535	0	True				
ANR	7616764	UnaryOperationExpression	! bSuccess		7615535	0					
ANR	7616765	UnaryOperator	!		7615535	0					
ANR	7616766	Identifier	bSuccess		7615535	1					
ANR	7616767	CompoundStatement		276:24:9119:9119	7615535	1					
ANR	7616768	ExpressionStatement	"fprintf ( stderr , ""failed to encode image: opj_end_compress\\n"" )"	2002:12:78219:78280	7615535	0	True				
ANR	7616769	CallExpression	"fprintf ( stderr , ""failed to encode image: opj_end_compress\\n"" )"		7615535	0					
ANR	7616770	Callee	fprintf		7615535	0					
ANR	7616771	Identifier	fprintf		7615535	0					
ANR	7616772	ArgumentList	stderr		7615535	1					
ANR	7616773	Argument	stderr		7615535	0					
ANR	7616774	Identifier	stderr		7615535	0					
ANR	7616775	Argument	"""failed to encode image: opj_end_compress\\n"""		7615535	1					
ANR	7616776	PrimaryExpression	"""failed to encode image: opj_end_compress\\n"""		7615535	0					
ANR	7616777	IfStatement	if ( ! bSuccess )		7615535	20					
ANR	7616778	Condition	! bSuccess	2005:12:78305:78313	7615535	0	True				
ANR	7616779	UnaryOperationExpression	! bSuccess		7615535	0					
ANR	7616780	UnaryOperator	!		7615535	0					
ANR	7616781	Identifier	bSuccess		7615535	1					
ANR	7616782	CompoundStatement		280:24:9231:9231	7615535	1					
ANR	7616783	ExpressionStatement	opj_stream_destroy ( l_stream )	2006:12:78331:78359	7615535	0	True				
ANR	7616784	CallExpression	opj_stream_destroy ( l_stream )		7615535	0					
ANR	7616785	Callee	opj_stream_destroy		7615535	0					
ANR	7616786	Identifier	opj_stream_destroy		7615535	0					
ANR	7616787	ArgumentList	l_stream		7615535	1					
ANR	7616788	Argument	l_stream		7615535	0					
ANR	7616789	Identifier	l_stream		7615535	0					
ANR	7616790	ExpressionStatement	opj_destroy_codec ( l_codec )	2007:12:78373:78399	7615535	1	True				
ANR	7616791	CallExpression	opj_destroy_codec ( l_codec )		7615535	0					
ANR	7616792	Callee	opj_destroy_codec		7615535	0					
ANR	7616793	Identifier	opj_destroy_codec		7615535	0					
ANR	7616794	ArgumentList	l_codec		7615535	1					
ANR	7616795	Argument	l_codec		7615535	0					
ANR	7616796	Identifier	l_codec		7615535	0					
ANR	7616797	ExpressionStatement	opj_image_destroy ( image )	2008:12:78413:78437	7615535	2	True				
ANR	7616798	CallExpression	opj_image_destroy ( image )		7615535	0					
ANR	7616799	Callee	opj_image_destroy		7615535	0					
ANR	7616800	Identifier	opj_image_destroy		7615535	0					
ANR	7616801	ArgumentList	image		7615535	1					
ANR	7616802	Argument	image		7615535	0					
ANR	7616803	Identifier	image		7615535	0					
ANR	7616804	ExpressionStatement	"fprintf ( stderr , ""failed to encode image\\n"" )"	2009:12:78451:78494	7615535	3	True				
ANR	7616805	CallExpression	"fprintf ( stderr , ""failed to encode image\\n"" )"		7615535	0					
ANR	7616806	Callee	fprintf		7615535	0					
ANR	7616807	Identifier	fprintf		7615535	0					
ANR	7616808	ArgumentList	stderr		7615535	1					
ANR	7616809	Argument	stderr		7615535	0					
ANR	7616810	Identifier	stderr		7615535	0					
ANR	7616811	Argument	"""failed to encode image\\n"""		7615535	1					
ANR	7616812	PrimaryExpression	"""failed to encode image\\n"""		7615535	0					
ANR	7616813	ExpressionStatement	remove ( parameters . outfile )	2010:12:78508:78534	7615535	4	True				
ANR	7616814	CallExpression	remove ( parameters . outfile )		7615535	0					
ANR	7616815	Callee	remove		7615535	0					
ANR	7616816	Identifier	remove		7615535	0					
ANR	7616817	ArgumentList	parameters . outfile		7615535	1					
ANR	7616818	Argument	parameters . outfile		7615535	0					
ANR	7616819	MemberAccess	parameters . outfile		7615535	0					
ANR	7616820	Identifier	parameters		7615535	0					
ANR	7616821	Identifier	outfile		7615535	1					
ANR	7616822	ReturnStatement	return 1 ;	2011:12:78548:78556	7615535	5	True				
ANR	7616823	PrimaryExpression	1		7615535	0					
ANR	7616824	ExpressionStatement	num_compressed_files ++	2014:8:78577:78599	7615535	21	True				
ANR	7616825	PostIncDecOperationExpression	num_compressed_files ++		7615535	0					
ANR	7616826	Identifier	num_compressed_files		7615535	0					
ANR	7616827	IncDec	++		7615535	1					
ANR	7616828	ExpressionStatement	"fprintf ( stdout , ""[INFO] Generated outfile %s\\n"" , parameters . outfile )"	2015:8:78609:78677	7615535	22	True				
ANR	7616829	CallExpression	"fprintf ( stdout , ""[INFO] Generated outfile %s\\n"" , parameters . outfile )"		7615535	0					
ANR	7616830	Callee	fprintf		7615535	0					
ANR	7616831	Identifier	fprintf		7615535	0					
ANR	7616832	ArgumentList	stdout		7615535	1					
ANR	7616833	Argument	stdout		7615535	0					
ANR	7616834	Identifier	stdout		7615535	0					
ANR	7616835	Argument	"""[INFO] Generated outfile %s\\n"""		7615535	1					
ANR	7616836	PrimaryExpression	"""[INFO] Generated outfile %s\\n"""		7615535	0					
ANR	7616837	Argument	parameters . outfile		7615535	2					
ANR	7616838	MemberAccess	parameters . outfile		7615535	0					
ANR	7616839	Identifier	parameters		7615535	0					
ANR	7616840	Identifier	outfile		7615535	1					
ANR	7616841	ExpressionStatement	opj_stream_destroy ( l_stream )	2017:8:78732:78760	7615535	23	True				
ANR	7616842	CallExpression	opj_stream_destroy ( l_stream )		7615535	0					
ANR	7616843	Callee	opj_stream_destroy		7615535	0					
ANR	7616844	Identifier	opj_stream_destroy		7615535	0					
ANR	7616845	ArgumentList	l_stream		7615535	1					
ANR	7616846	Argument	l_stream		7615535	0					
ANR	7616847	Identifier	l_stream		7615535	0					
ANR	7616848	ExpressionStatement	opj_destroy_codec ( l_codec )	2020:8:78823:78849	7615535	24	True				
ANR	7616849	CallExpression	opj_destroy_codec ( l_codec )		7615535	0					
ANR	7616850	Callee	opj_destroy_codec		7615535	0					
ANR	7616851	Identifier	opj_destroy_codec		7615535	0					
ANR	7616852	ArgumentList	l_codec		7615535	1					
ANR	7616853	Argument	l_codec		7615535	0					
ANR	7616854	Identifier	l_codec		7615535	0					
ANR	7616855	ExpressionStatement	opj_image_destroy ( image )	2023:8:78890:78914	7615535	25	True				
ANR	7616856	CallExpression	opj_image_destroy ( image )		7615535	0					
ANR	7616857	Callee	opj_image_destroy		7615535	0					
ANR	7616858	Identifier	opj_image_destroy		7615535	0					
ANR	7616859	ArgumentList	image		7615535	1					
ANR	7616860	Argument	image		7615535	0					
ANR	7616861	Identifier	image		7615535	0					
ANR	7616862	IfStatement	if ( parameters . cp_comment )		7615535	27					
ANR	7616863	Condition	parameters . cp_comment	2028:8:78973:78993	7615535	0	True				
ANR	7616864	MemberAccess	parameters . cp_comment		7615535	0					
ANR	7616865	Identifier	parameters		7615535	0					
ANR	7616866	Identifier	cp_comment		7615535	1					
ANR	7616867	CompoundStatement		303:31:9910:9910	7615535	1					
ANR	7616868	ExpressionStatement	free ( parameters . cp_comment )	2029:8:79006:79033	7615535	0	True				
ANR	7616869	CallExpression	free ( parameters . cp_comment )		7615535	0					
ANR	7616870	Callee	free		7615535	0					
ANR	7616871	Identifier	free		7615535	0					
ANR	7616872	ArgumentList	parameters . cp_comment		7615535	1					
ANR	7616873	Argument	parameters . cp_comment		7615535	0					
ANR	7616874	MemberAccess	parameters . cp_comment		7615535	0					
ANR	7616875	Identifier	parameters		7615535	0					
ANR	7616876	Identifier	cp_comment		7615535	1					
ANR	7616877	IfStatement	if ( parameters . cp_matrice )		7615535	28					
ANR	7616878	Condition	parameters . cp_matrice	2031:8:79049:79069	7615535	0	True				
ANR	7616879	MemberAccess	parameters . cp_matrice		7615535	0					
ANR	7616880	Identifier	parameters		7615535	0					
ANR	7616881	Identifier	cp_matrice		7615535	1					
ANR	7616882	CompoundStatement		306:31:9986:9986	7615535	1					
ANR	7616883	ExpressionStatement	free ( parameters . cp_matrice )	2032:8:79082:79109	7615535	0	True				
ANR	7616884	CallExpression	free ( parameters . cp_matrice )		7615535	0					
ANR	7616885	Callee	free		7615535	0					
ANR	7616886	Identifier	free		7615535	0					
ANR	7616887	ArgumentList	parameters . cp_matrice		7615535	1					
ANR	7616888	Argument	parameters . cp_matrice		7615535	0					
ANR	7616889	MemberAccess	parameters . cp_matrice		7615535	0					
ANR	7616890	Identifier	parameters		7615535	0					
ANR	7616891	Identifier	cp_matrice		7615535	1					
ANR	7616892	IfStatement	if ( raw_cp . rawComps )		7615535	29					
ANR	7616893	Condition	raw_cp . rawComps	2034:8:79125:79139	7615535	0	True				
ANR	7616894	MemberAccess	raw_cp . rawComps		7615535	0					
ANR	7616895	Identifier	raw_cp		7615535	0					
ANR	7616896	Identifier	rawComps		7615535	1					
ANR	7616897	CompoundStatement		309:25:10056:10056	7615535	1					
ANR	7616898	ExpressionStatement	free ( raw_cp . rawComps )	2035:8:79152:79173	7615535	0	True				
ANR	7616899	CallExpression	free ( raw_cp . rawComps )		7615535	0					
ANR	7616900	Callee	free		7615535	0					
ANR	7616901	Identifier	free		7615535	0					
ANR	7616902	ArgumentList	raw_cp . rawComps		7615535	1					
ANR	7616903	Argument	raw_cp . rawComps		7615535	0					
ANR	7616904	MemberAccess	raw_cp . rawComps		7615535	0					
ANR	7616905	Identifier	raw_cp		7615535	0					
ANR	7616906	Identifier	rawComps		7615535	1					
ANR	7616907	ExpressionStatement	t = opj_clock ( ) - t	2038:4:79186:79205	7615535	30	True				
ANR	7616908	AssignmentExpression	t = opj_clock ( ) - t		7615535	0		=			
ANR	7616909	Identifier	t		7615535	0					
ANR	7616910	AdditiveExpression	opj_clock ( ) - t		7615535	1		-			
ANR	7616911	CallExpression	opj_clock ( )		7615535	0					
ANR	7616912	Callee	opj_clock		7615535	0					
ANR	7616913	Identifier	opj_clock		7615535	0					
ANR	7616914	ArgumentList			7615535	1					
ANR	7616915	Identifier	t		7615535	1					
ANR	7616916	IfStatement	if ( num_compressed_files )		7615535	31					
ANR	7616917	Condition	num_compressed_files	2039:8:79215:79234	7615535	0	True				
ANR	7616918	Identifier	num_compressed_files		7615535	0					
ANR	7616919	CompoundStatement		314:30:10151:10151	7615535	1					
ANR	7616920	ExpressionStatement	"fprintf ( stdout , ""encode time: %d ms \\n"" , ( int ) ( ( t * 1000.0 ) / ( OPJ_FLOAT64 ) num_compressed_files ) )"	2040:8:79247:79360	7615535	0	True				
ANR	7616921	CallExpression	"fprintf ( stdout , ""encode time: %d ms \\n"" , ( int ) ( ( t * 1000.0 ) / ( OPJ_FLOAT64 ) num_compressed_files ) )"		7615535	0					
ANR	7616922	Callee	fprintf		7615535	0					
ANR	7616923	Identifier	fprintf		7615535	0					
ANR	7616924	ArgumentList	stdout		7615535	1					
ANR	7616925	Argument	stdout		7615535	0					
ANR	7616926	Identifier	stdout		7615535	0					
ANR	7616927	Argument	"""encode time: %d ms \\n"""		7615535	1					
ANR	7616928	PrimaryExpression	"""encode time: %d ms \\n"""		7615535	0					
ANR	7616929	Argument	( int ) ( ( t * 1000.0 ) / ( OPJ_FLOAT64 ) num_compressed_files )		7615535	2					
ANR	7616930	CastExpression	( int ) ( ( t * 1000.0 ) / ( OPJ_FLOAT64 ) num_compressed_files )		7615535	0					
ANR	7616931	CastTarget	int		7615535	0					
ANR	7616932	MultiplicativeExpression	( t * 1000.0 ) / ( OPJ_FLOAT64 ) num_compressed_files		7615535	1		/			
ANR	7616933	MultiplicativeExpression	t * 1000.0		7615535	0		*			
ANR	7616934	Identifier	t		7615535	0					
ANR	7616935	PrimaryExpression	1000.0		7615535	1					
ANR	7616936	CastExpression	( OPJ_FLOAT64 ) num_compressed_files		7615535	1					
ANR	7616937	CastTarget	OPJ_FLOAT64		7615535	0					
ANR	7616938	Identifier	num_compressed_files		7615535	1					
ANR	7616939	ReturnStatement	return 0 ;	2044:4:79373:79381	7615535	32	True				
ANR	7616940	PrimaryExpression	0		7615535	0					
ANR	7616941	Label	fails :	2046:0:79384:79389	7615535	33	True				
ANR	7616942	Identifier	fails		7615535	0					
ANR	7616943	IfStatement	if ( parameters . cp_comment )		7615535	34					
ANR	7616944	Condition	parameters . cp_comment	2047:8:79399:79419	7615535	0	True				
ANR	7616945	MemberAccess	parameters . cp_comment		7615535	0					
ANR	7616946	Identifier	parameters		7615535	0					
ANR	7616947	Identifier	cp_comment		7615535	1					
ANR	7616948	CompoundStatement		322:31:10336:10336	7615535	1					
ANR	7616949	ExpressionStatement	free ( parameters . cp_comment )	2048:8:79432:79459	7615535	0	True				
ANR	7616950	CallExpression	free ( parameters . cp_comment )		7615535	0					
ANR	7616951	Callee	free		7615535	0					
ANR	7616952	Identifier	free		7615535	0					
ANR	7616953	ArgumentList	parameters . cp_comment		7615535	1					
ANR	7616954	Argument	parameters . cp_comment		7615535	0					
ANR	7616955	MemberAccess	parameters . cp_comment		7615535	0					
ANR	7616956	Identifier	parameters		7615535	0					
ANR	7616957	Identifier	cp_comment		7615535	1					
ANR	7616958	IfStatement	if ( parameters . cp_matrice )		7615535	35					
ANR	7616959	Condition	parameters . cp_matrice	2050:8:79475:79495	7615535	0	True				
ANR	7616960	MemberAccess	parameters . cp_matrice		7615535	0					
ANR	7616961	Identifier	parameters		7615535	0					
ANR	7616962	Identifier	cp_matrice		7615535	1					
ANR	7616963	CompoundStatement		325:31:10412:10412	7615535	1					
ANR	7616964	ExpressionStatement	free ( parameters . cp_matrice )	2051:8:79508:79535	7615535	0	True				
ANR	7616965	CallExpression	free ( parameters . cp_matrice )		7615535	0					
ANR	7616966	Callee	free		7615535	0					
ANR	7616967	Identifier	free		7615535	0					
ANR	7616968	ArgumentList	parameters . cp_matrice		7615535	1					
ANR	7616969	Argument	parameters . cp_matrice		7615535	0					
ANR	7616970	MemberAccess	parameters . cp_matrice		7615535	0					
ANR	7616971	Identifier	parameters		7615535	0					
ANR	7616972	Identifier	cp_matrice		7615535	1					
ANR	7616973	IfStatement	if ( raw_cp . rawComps )		7615535	36					
ANR	7616974	Condition	raw_cp . rawComps	2053:8:79551:79565	7615535	0	True				
ANR	7616975	MemberAccess	raw_cp . rawComps		7615535	0					
ANR	7616976	Identifier	raw_cp		7615535	0					
ANR	7616977	Identifier	rawComps		7615535	1					
ANR	7616978	CompoundStatement		328:25:10482:10482	7615535	1					
ANR	7616979	ExpressionStatement	free ( raw_cp . rawComps )	2054:8:79578:79599	7615535	0	True				
ANR	7616980	CallExpression	free ( raw_cp . rawComps )		7615535	0					
ANR	7616981	Callee	free		7615535	0					
ANR	7616982	Identifier	free		7615535	0					
ANR	7616983	ArgumentList	raw_cp . rawComps		7615535	1					
ANR	7616984	Argument	raw_cp . rawComps		7615535	0					
ANR	7616985	MemberAccess	raw_cp . rawComps		7615535	0					
ANR	7616986	Identifier	raw_cp		7615535	0					
ANR	7616987	Identifier	rawComps		7615535	1					
ANR	7616988	IfStatement	if ( img_fol . imgdirpath )		7615535	37					
ANR	7616989	Condition	img_fol . imgdirpath	2056:8:79615:79632	7615535	0	True				
ANR	7616990	MemberAccess	img_fol . imgdirpath		7615535	0					
ANR	7616991	Identifier	img_fol		7615535	0					
ANR	7616992	Identifier	imgdirpath		7615535	1					
ANR	7616993	CompoundStatement		331:28:10549:10549	7615535	1					
ANR	7616994	ExpressionStatement	free ( img_fol . imgdirpath )	2057:8:79645:79669	7615535	0	True				
ANR	7616995	CallExpression	free ( img_fol . imgdirpath )		7615535	0					
ANR	7616996	Callee	free		7615535	0					
ANR	7616997	Identifier	free		7615535	0					
ANR	7616998	ArgumentList	img_fol . imgdirpath		7615535	1					
ANR	7616999	Argument	img_fol . imgdirpath		7615535	0					
ANR	7617000	MemberAccess	img_fol . imgdirpath		7615535	0					
ANR	7617001	Identifier	img_fol		7615535	0					
ANR	7617002	Identifier	imgdirpath		7615535	1					
ANR	7617003	IfStatement	if ( dirptr )		7615535	38					
ANR	7617004	Condition	dirptr	2059:8:79685:79690	7615535	0	True				
ANR	7617005	Identifier	dirptr		7615535	0					
ANR	7617006	CompoundStatement		334:16:10607:10607	7615535	1					
ANR	7617007	IfStatement	if ( dirptr -> filename_buf )		7615535	0					
ANR	7617008	Condition	dirptr -> filename_buf	2060:12:79707:79726	7615535	0	True				
ANR	7617009	PtrMemberAccess	dirptr -> filename_buf		7615535	0					
ANR	7617010	Identifier	dirptr		7615535	0					
ANR	7617011	Identifier	filename_buf		7615535	1					
ANR	7617012	CompoundStatement		335:34:10643:10643	7615535	1					
ANR	7617013	ExpressionStatement	free ( dirptr -> filename_buf )	2061:12:79743:79769	7615535	0	True				
ANR	7617014	CallExpression	free ( dirptr -> filename_buf )		7615535	0					
ANR	7617015	Callee	free		7615535	0					
ANR	7617016	Identifier	free		7615535	0					
ANR	7617017	ArgumentList	dirptr -> filename_buf		7615535	1					
ANR	7617018	Argument	dirptr -> filename_buf		7615535	0					
ANR	7617019	PtrMemberAccess	dirptr -> filename_buf		7615535	0					
ANR	7617020	Identifier	dirptr		7615535	0					
ANR	7617021	Identifier	filename_buf		7615535	1					
ANR	7617022	IfStatement	if ( dirptr -> filename )		7615535	1					
ANR	7617023	Condition	dirptr -> filename	2063:12:79793:79808	7615535	0	True				
ANR	7617024	PtrMemberAccess	dirptr -> filename		7615535	0					
ANR	7617025	Identifier	dirptr		7615535	0					
ANR	7617026	Identifier	filename		7615535	1					
ANR	7617027	CompoundStatement		338:30:10725:10725	7615535	1					
ANR	7617028	ExpressionStatement	free ( dirptr -> filename )	2064:12:79825:79847	7615535	0	True				
ANR	7617029	CallExpression	free ( dirptr -> filename )		7615535	0					
ANR	7617030	Callee	free		7615535	0					
ANR	7617031	Identifier	free		7615535	0					
ANR	7617032	ArgumentList	dirptr -> filename		7615535	1					
ANR	7617033	Argument	dirptr -> filename		7615535	0					
ANR	7617034	PtrMemberAccess	dirptr -> filename		7615535	0					
ANR	7617035	Identifier	dirptr		7615535	0					
ANR	7617036	Identifier	filename		7615535	1					
ANR	7617037	ExpressionStatement	free ( dirptr )	2066:8:79867:79879	7615535	2	True				
ANR	7617038	CallExpression	free ( dirptr )		7615535	0					
ANR	7617039	Callee	free		7615535	0					
ANR	7617040	Identifier	free		7615535	0					
ANR	7617041	ArgumentList	dirptr		7615535	1					
ANR	7617042	Argument	dirptr		7615535	0					
ANR	7617043	Identifier	dirptr		7615535	0					
ANR	7617044	ReturnStatement	return 1 ;	2068:4:79891:79899	7615535	39	True				
ANR	7617045	PrimaryExpression	1		7615535	0					
ANR	7617046	ReturnType	int		7615535	1					
ANR	7617047	Identifier	main		7615535	2					
ANR	7617048	ParameterList	"int argc , char * * argv"		7615535	3					
ANR	7617049	Parameter	int argc	1725:9:69062:69069	7615535	0	True				
ANR	7617050	ParameterType	int		7615535	0					
ANR	7617051	Identifier	argc		7615535	1					
ANR	7617052	Parameter	char * * argv	1725:19:69072:69082	7615535	1	True				
ANR	7617053	ParameterType	char * *		7615535	0					
ANR	7617054	Identifier	argv		7615535	1					
ANR	7617055	CFGEntryNode	ENTRY		7615535		True				
ANR	7617056	CFGExitNode	EXIT		7615535		True				
ANR	7617057	Symbol	* indexfilename		7615535						
ANR	7617058	Symbol	img_fol		7615535						
ANR	7617059	Symbol	stdout		7615535						
ANR	7617060	Symbol	parameters . decod_format		7615535						
ANR	7617061	Symbol	parameters . cp_comment		7615535						
ANR	7617062	Symbol	parameters . tcp_mct		7615535						
ANR	7617063	Symbol	parameters . cp_tx0		7615535						
ANR	7617064	Symbol	raw_cp . rawComps		7615535						
ANR	7617065	Symbol	get_num_images		7615535						
ANR	7617066	Symbol	pnmtoimage		7615535						
ANR	7617067	Symbol	raw_cp . rawWidth		7615535						
ANR	7617068	Symbol	parameters . tile_size_on		7615535						
ANR	7617069	Symbol	opj_write_tile		7615535						
ANR	7617070	Symbol	OPJ_TRUE		7615535						
ANR	7617071	Symbol	rawtoimage		7615535						
ANR	7617072	Symbol	info_callback		7615535						
ANR	7617073	Symbol	image		7615535						
ANR	7617074	Symbol	parameters . mct_data		7615535						
ANR	7617075	Symbol	NULL		7615535						
ANR	7617076	Symbol	parameters . cp_ty0		7615535						
ANR	7617077	Symbol	opj_stream_create_default_file_stream		7615535						
ANR	7617078	Symbol	l_data		7615535						
ANR	7617079	Symbol	imageno		7615535						
ANR	7617080	Symbol	get_next_file		7615535						
ANR	7617081	Symbol	* dirptr -> filename		7615535						
ANR	7617082	Symbol	stderr		7615535						
ANR	7617083	Symbol	* dirptr		7615535						
ANR	7617084	Symbol	num_images		7615535						
ANR	7617085	Symbol	parse_cmdline_encoder		7615535						
ANR	7617086	Symbol	pngtoimage		7615535						
ANR	7617087	Symbol	parameters . outfile		7615535						
ANR	7617088	Symbol	opj_setup_encoder		7615535						
ANR	7617089	Symbol	img_fol . imgdirpath		7615535						
ANR	7617090	Symbol	parameters . cod_format		7615535						
ANR	7617091	Symbol	raw_cp . rawSigned		7615535						
ANR	7617092	Symbol	parameters . cp_matrice		7615535						
ANR	7617093	Symbol	parameters		7615535						
ANR	7617094	Symbol	opj_clock		7615535						
ANR	7617095	Symbol	* image		7615535						
ANR	7617096	Symbol	opj_create_compress		7615535						
ANR	7617097	Symbol	raw_cp . rawComp		7615535						
ANR	7617098	Symbol	tiftoimage		7615535						
ANR	7617099	Symbol	calloc		7615535						
ANR	7617100	Symbol	argv		7615535						
ANR	7617101	Symbol	num_compressed_files		7615535						
ANR	7617102	Symbol	bUseTiles		7615535						
ANR	7617103	Symbol	rawltoimage		7615535						
ANR	7617104	Symbol	raw_cp . rawHeight		7615535						
ANR	7617105	Symbol	dirptr -> filename		7615535						
ANR	7617106	Symbol	pgxtoimage		7615535						
ANR	7617107	Symbol	OPJ_FALSE		7615535						
ANR	7617108	Symbol	OPJ_CODEC_J2K		7615535						
ANR	7617109	Symbol	& raw_cp		7615535						
ANR	7617110	Symbol	l_nb_tiles		7615535						
ANR	7617111	Symbol	& img_fol		7615535						
ANR	7617112	Symbol	* * dirptr		7615535						
ANR	7617113	Symbol	warning_callback		7615535						
ANR	7617114	Symbol	OPJ_CODEC_JP2		7615535						
ANR	7617115	Symbol	parameters . cp_tdy		7615535						
ANR	7617116	Symbol	parameters . cp_tdx		7615535						
ANR	7617117	Symbol	argc		7615535						
ANR	7617118	Symbol	dirptr		7615535						
ANR	7617119	Symbol	bSuccess		7615535						
ANR	7617120	Symbol	parameters . infile		7615535						
ANR	7617121	Symbol	bmptoimage		7615535						
ANR	7617122	Symbol	raw_cp . rawBitDepth		7615535						
ANR	7617123	Symbol	malloc		7615535						
ANR	7617124	Symbol	img_fol . set_imgdir		7615535						
ANR	7617125	Symbol	l_codec		7615535						
ANR	7617126	Symbol	OPJ_PATH_LEN		7615535						
ANR	7617127	Symbol	opj_encode		7615535						
ANR	7617128	Symbol	& parameters		7615535						
ANR	7617129	Symbol	error_callback		7615535						
ANR	7617130	Symbol	i		7615535						
ANR	7617131	Symbol	tgatoimage		7615535						
ANR	7617132	Symbol	dirptr -> filename_buf		7615535						
ANR	7617133	Symbol	load_images		7615535						
ANR	7617134	Symbol	l_data_size		7615535						
ANR	7617135	Symbol	image -> numcomps		7615535						
ANR	7617136	Symbol	raw_cp		7615535						
ANR	7617137	Symbol	indexfilename		7615535						
ANR	7617138	Symbol	* i		7615535						
ANR	7617139	Symbol	t		7615535						
ANR	7617140	Symbol	opj_start_compress		7615535						
ANR	7617141	Symbol	opj_end_compress		7615535						
ANR	7617142	Symbol	l_stream		7615535						
