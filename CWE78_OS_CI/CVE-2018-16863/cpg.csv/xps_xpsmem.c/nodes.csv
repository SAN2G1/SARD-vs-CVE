command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10843578	File	data/converged/CVE-2018-16863_ghostpdl/xps_xpsmem.c								
ANR	10843579	Function	xps_realloc_imp	21:0:657:870							
ANR	10843580	FunctionDef	"xps_realloc_imp (xps_context_t * ctx , void * ptr , int size , const char * func)"		10843579	0					
ANR	10843581	CompoundStatement		23:0:739:870	10843579	0					
ANR	10843582	IfStatement	if ( ! ptr )		10843579	0					
ANR	10843583	Condition	! ptr	24:8:749:752	10843579	0	True				
ANR	10843584	UnaryOperationExpression	! ptr		10843579	0					
ANR	10843585	UnaryOperator	!		10843579	0					
ANR	10843586	Identifier	ptr		10843579	1					
ANR	10843587	ReturnStatement	"return gs_alloc_bytes ( ctx -> memory , size , func ) ;"	25:8:763:809	10843579	1	True				
ANR	10843588	CallExpression	"gs_alloc_bytes ( ctx -> memory , size , func )"		10843579	0					
ANR	10843589	Callee	gs_alloc_bytes		10843579	0					
ANR	10843590	Identifier	gs_alloc_bytes		10843579	0					
ANR	10843591	ArgumentList	ctx -> memory		10843579	1					
ANR	10843592	Argument	ctx -> memory		10843579	0					
ANR	10843593	PtrMemberAccess	ctx -> memory		10843579	0					
ANR	10843594	Identifier	ctx		10843579	0					
ANR	10843595	Identifier	memory		10843579	1					
ANR	10843596	Argument	size		10843579	1					
ANR	10843597	Identifier	size		10843579	0					
ANR	10843598	Argument	func		10843579	2					
ANR	10843599	Identifier	func		10843579	0					
ANR	10843600	ReturnStatement	"return gs_resize_object ( ctx -> memory , ptr , size , func ) ;"	26:4:815:868	10843579	1	True				
ANR	10843601	CallExpression	"gs_resize_object ( ctx -> memory , ptr , size , func )"		10843579	0					
ANR	10843602	Callee	gs_resize_object		10843579	0					
ANR	10843603	Identifier	gs_resize_object		10843579	0					
ANR	10843604	ArgumentList	ctx -> memory		10843579	1					
ANR	10843605	Argument	ctx -> memory		10843579	0					
ANR	10843606	PtrMemberAccess	ctx -> memory		10843579	0					
ANR	10843607	Identifier	ctx		10843579	0					
ANR	10843608	Identifier	memory		10843579	1					
ANR	10843609	Argument	ptr		10843579	1					
ANR	10843610	Identifier	ptr		10843579	0					
ANR	10843611	Argument	size		10843579	2					
ANR	10843612	Identifier	size		10843579	0					
ANR	10843613	Argument	func		10843579	3					
ANR	10843614	Identifier	func		10843579	0					
ANR	10843615	ReturnType	void *		10843579	1					
ANR	10843616	Identifier	xps_realloc_imp		10843579	2					
ANR	10843617	ParameterList	"xps_context_t * ctx , void * ptr , int size , const char * func"		10843579	3					
ANR	10843618	Parameter	xps_context_t * ctx	22:16:680:697	10843579	0	True				
ANR	10843619	ParameterType	xps_context_t *		10843579	0					
ANR	10843620	Identifier	ctx		10843579	1					
ANR	10843621	Parameter	void * ptr	22:36:700:708	10843579	1	True				
ANR	10843622	ParameterType	void *		10843579	0					
ANR	10843623	Identifier	ptr		10843579	1					
ANR	10843624	Parameter	int size	22:47:711:718	10843579	2	True				
ANR	10843625	ParameterType	int		10843579	0					
ANR	10843626	Identifier	size		10843579	1					
ANR	10843627	Parameter	const char * func	22:57:721:736	10843579	3	True				
ANR	10843628	ParameterType	const char *		10843579	0					
ANR	10843629	Identifier	func		10843579	1					
ANR	10843630	CFGEntryNode	ENTRY		10843579		True				
ANR	10843631	CFGExitNode	EXIT		10843579		True				
ANR	10843632	Symbol	ctx -> memory		10843579						
ANR	10843633	Symbol	gs_alloc_bytes		10843579						
ANR	10843634	Symbol	size		10843579						
ANR	10843635	Symbol	func		10843579						
ANR	10843636	Symbol	ctx		10843579						
ANR	10843637	Symbol	gs_resize_object		10843579						
ANR	10843638	Symbol	* ctx		10843579						
ANR	10843639	Symbol	ptr		10843579						
ANR	10843640	Function	xps_tolower	29:0:873:979							
ANR	10843641	FunctionDef	xps_tolower (int c)		10843640	0					
ANR	10843642	CompoundStatement		31:0:910:979	10843640	0					
ANR	10843643	IfStatement	if ( c >= 'A' && c <= 'Z' )		10843640	0					
ANR	10843644	Condition	c >= 'A' && c <= 'Z'	32:8:920:939	10843640	0	True				
ANR	10843645	AndExpression	c >= 'A' && c <= 'Z'		10843640	0		&&			
ANR	10843646	RelationalExpression	c >= 'A'		10843640	0		>=			
ANR	10843647	Identifier	c		10843640	0					
ANR	10843648	PrimaryExpression	'A'		10843640	1					
ANR	10843649	RelationalExpression	c <= 'Z'		10843640	1		<=			
ANR	10843650	Identifier	c		10843640	0					
ANR	10843651	PrimaryExpression	'Z'		10843640	1					
ANR	10843652	ReturnStatement	return c + 32 ;	33:8:950:963	10843640	1	True				
ANR	10843653	AdditiveExpression	c + 32		10843640	0		+			
ANR	10843654	Identifier	c		10843640	0					
ANR	10843655	PrimaryExpression	32		10843640	1					
ANR	10843656	ReturnStatement	return c ;	34:4:969:977	10843640	1	True				
ANR	10843657	Identifier	c		10843640	0					
ANR	10843658	ReturnType	static inline int		10843640	1					
ANR	10843659	Identifier	xps_tolower		10843640	2					
ANR	10843660	ParameterList	int c		10843640	3					
ANR	10843661	Parameter	int c	30:12:903:907	10843640	0	True				
ANR	10843662	ParameterType	int		10843640	0					
ANR	10843663	Identifier	c		10843640	1					
ANR	10843664	CFGEntryNode	ENTRY		10843640		True				
ANR	10843665	CFGExitNode	EXIT		10843640		True				
ANR	10843666	Symbol	c		10843640						
ANR	10843667	Function	xps_strcasecmp	37:0:982:1240							
ANR	10843668	FunctionDef	"xps_strcasecmp (const char * a , const char * b)"		10843667	0					
ANR	10843669	CompoundStatement		39:0:1031:1240	10843667	0					
ANR	10843670	WhileStatement	while ( xps_tolower ( * a ) == xps_tolower ( * b ) )		10843667	0					
ANR	10843671	Condition	xps_tolower ( * a ) == xps_tolower ( * b )	40:15:1048:1081	10843667	0	True				
ANR	10843672	EqualityExpression	xps_tolower ( * a ) == xps_tolower ( * b )		10843667	0		==			
ANR	10843673	CallExpression	xps_tolower ( * a )		10843667	0					
ANR	10843674	Callee	xps_tolower		10843667	0					
ANR	10843675	Identifier	xps_tolower		10843667	0					
ANR	10843676	ArgumentList	* a		10843667	1					
ANR	10843677	Argument	* a		10843667	0					
ANR	10843678	UnaryOperationExpression	* a		10843667	0					
ANR	10843679	UnaryOperator	*		10843667	0					
ANR	10843680	Identifier	a		10843667	1					
ANR	10843681	CallExpression	xps_tolower ( * b )		10843667	1					
ANR	10843682	Callee	xps_tolower		10843667	0					
ANR	10843683	Identifier	xps_tolower		10843667	0					
ANR	10843684	ArgumentList	* b		10843667	1					
ANR	10843685	Argument	* b		10843667	0					
ANR	10843686	UnaryOperationExpression	* b		10843667	0					
ANR	10843687	UnaryOperator	*		10843667	0					
ANR	10843688	Identifier	b		10843667	1					
ANR	10843689	CompoundStatement		3:8:60:60	10843667	1					
ANR	10843690	IfStatement	if ( * a ++ == 0 )		10843667	0					
ANR	10843691	Condition	* a ++ == 0	42:20:1114:1122	10843667	0	True				
ANR	10843692	EqualityExpression	* a ++ == 0		10843667	0		==			
ANR	10843693	UnaryOperationExpression	* a ++		10843667	0					
ANR	10843694	UnaryOperator	*		10843667	0					
ANR	10843695	PostIncDecOperationExpression	a ++		10843667	1					
ANR	10843696	Identifier	a		10843667	0					
ANR	10843697	IncDec	++		10843667	1					
ANR	10843698	PrimaryExpression	0		10843667	1					
ANR	10843699	ReturnStatement	return 0 ;	43:24:1149:1157	10843667	1	True				
ANR	10843700	PrimaryExpression	0		10843667	0					
ANR	10843701	ExpressionStatement	b ++	44:16:1175:1178	10843667	1	True				
ANR	10843702	PostIncDecOperationExpression	b ++		10843667	0					
ANR	10843703	Identifier	b		10843667	0					
ANR	10843704	IncDec	++		10843667	1					
ANR	10843705	ReturnStatement	return xps_tolower ( * a ) - xps_tolower ( * b ) ;	46:8:1198:1238	10843667	1	True				
ANR	10843706	AdditiveExpression	xps_tolower ( * a ) - xps_tolower ( * b )		10843667	0		-			
ANR	10843707	CallExpression	xps_tolower ( * a )		10843667	0					
ANR	10843708	Callee	xps_tolower		10843667	0					
ANR	10843709	Identifier	xps_tolower		10843667	0					
ANR	10843710	ArgumentList	* a		10843667	1					
ANR	10843711	Argument	* a		10843667	0					
ANR	10843712	UnaryOperationExpression	* a		10843667	0					
ANR	10843713	UnaryOperator	*		10843667	0					
ANR	10843714	Identifier	a		10843667	1					
ANR	10843715	CallExpression	xps_tolower ( * b )		10843667	1					
ANR	10843716	Callee	xps_tolower		10843667	0					
ANR	10843717	Identifier	xps_tolower		10843667	0					
ANR	10843718	ArgumentList	* b		10843667	1					
ANR	10843719	Argument	* b		10843667	0					
ANR	10843720	UnaryOperationExpression	* b		10843667	0					
ANR	10843721	UnaryOperator	*		10843667	0					
ANR	10843722	Identifier	b		10843667	1					
ANR	10843723	ReturnType	int		10843667	1					
ANR	10843724	Identifier	xps_strcasecmp		10843667	2					
ANR	10843725	ParameterList	"const char * a , const char * b"		10843667	3					
ANR	10843726	Parameter	const char * a	38:15:1001:1013	10843667	0	True				
ANR	10843727	ParameterType	const char *		10843667	0					
ANR	10843728	Identifier	a		10843667	1					
ANR	10843729	Parameter	const char * b	38:30:1016:1028	10843667	1	True				
ANR	10843730	ParameterType	const char *		10843667	0					
ANR	10843731	Identifier	b		10843667	1					
ANR	10843732	CFGEntryNode	ENTRY		10843667		True				
ANR	10843733	CFGExitNode	EXIT		10843667		True				
ANR	10843734	Symbol	a		10843667						
ANR	10843735	Symbol	b		10843667						
ANR	10843736	Symbol	xps_tolower		10843667						
ANR	10843737	Symbol	* a		10843667						
ANR	10843738	Symbol	* b		10843667						
ANR	10843739	Symbol	* a ++		10843667						
ANR	10843740	Function	xps_strdup_imp	49:0:1243:1488							
ANR	10843741	FunctionDef	"xps_strdup_imp (xps_context_t * ctx , const char * str , const char * cname)"		10843740	0					
ANR	10843742	CompoundStatement		51:0:1321:1488	10843740	0					
ANR	10843743	IdentifierDeclStatement	char * cpy = NULL ;	52:4:1327:1343	10843740	0	True				
ANR	10843744	IdentifierDecl	* cpy = NULL		10843740	0					
ANR	10843745	IdentifierDeclType	char *		10843740	0					
ANR	10843746	Identifier	cpy		10843740	1					
ANR	10843747	AssignmentExpression	* cpy = NULL		10843740	2		=			
ANR	10843748	Identifier	NULL		10843740	0					
ANR	10843749	Identifier	NULL		10843740	1					
ANR	10843750	IfStatement	if ( str )		10843740	1					
ANR	10843751	Condition	str	53:8:1353:1355	10843740	0	True				
ANR	10843752	Identifier	str		10843740	0					
ANR	10843753	ExpressionStatement	"cpy = ( char * ) gs_alloc_bytes ( ctx -> memory , strlen ( str ) + 1 , cname )"	54:8:1366:1431	10843740	1	True				
ANR	10843754	AssignmentExpression	"cpy = ( char * ) gs_alloc_bytes ( ctx -> memory , strlen ( str ) + 1 , cname )"		10843740	0		=			
ANR	10843755	Identifier	cpy		10843740	0					
ANR	10843756	CastExpression	"( char * ) gs_alloc_bytes ( ctx -> memory , strlen ( str ) + 1 , cname )"		10843740	1					
ANR	10843757	CastTarget	char *		10843740	0					
ANR	10843758	CallExpression	"gs_alloc_bytes ( ctx -> memory , strlen ( str ) + 1 , cname )"		10843740	1					
ANR	10843759	Callee	gs_alloc_bytes		10843740	0					
ANR	10843760	Identifier	gs_alloc_bytes		10843740	0					
ANR	10843761	ArgumentList	ctx -> memory		10843740	1					
ANR	10843762	Argument	ctx -> memory		10843740	0					
ANR	10843763	PtrMemberAccess	ctx -> memory		10843740	0					
ANR	10843764	Identifier	ctx		10843740	0					
ANR	10843765	Identifier	memory		10843740	1					
ANR	10843766	Argument	strlen ( str ) + 1		10843740	1					
ANR	10843767	AdditiveExpression	strlen ( str ) + 1		10843740	0		+			
ANR	10843768	CallExpression	strlen ( str )		10843740	0					
ANR	10843769	Callee	strlen		10843740	0					
ANR	10843770	Identifier	strlen		10843740	0					
ANR	10843771	ArgumentList	str		10843740	1					
ANR	10843772	Argument	str		10843740	0					
ANR	10843773	Identifier	str		10843740	0					
ANR	10843774	PrimaryExpression	1		10843740	1					
ANR	10843775	Argument	cname		10843740	2					
ANR	10843776	Identifier	cname		10843740	0					
ANR	10843777	IfStatement	if ( cpy )		10843740	2					
ANR	10843778	Condition	cpy	55:8:1441:1443	10843740	0	True				
ANR	10843779	Identifier	cpy		10843740	0					
ANR	10843780	ExpressionStatement	"strcpy ( cpy , str )"	56:8:1454:1470	10843740	1	True				
ANR	10843781	CallExpression	"strcpy ( cpy , str )"		10843740	0					
ANR	10843782	Callee	strcpy		10843740	0					
ANR	10843783	Identifier	strcpy		10843740	0					
ANR	10843784	ArgumentList	cpy		10843740	1					
ANR	10843785	Argument	cpy		10843740	0					
ANR	10843786	Identifier	cpy		10843740	0					
ANR	10843787	Argument	str		10843740	1					
ANR	10843788	Identifier	str		10843740	0					
ANR	10843789	ReturnStatement	return cpy ;	57:4:1476:1486	10843740	3	True				
ANR	10843790	Identifier	cpy		10843740	0					
ANR	10843791	ReturnType	char *		10843740	1					
ANR	10843792	Identifier	xps_strdup_imp		10843740	2					
ANR	10843793	ParameterList	"xps_context_t * ctx , const char * str , const char * cname"		10843740	3					
ANR	10843794	Parameter	xps_context_t * ctx	50:15:1265:1282	10843740	0	True				
ANR	10843795	ParameterType	xps_context_t *		10843740	0					
ANR	10843796	Identifier	ctx		10843740	1					
ANR	10843797	Parameter	const char * str	50:35:1285:1299	10843740	1	True				
ANR	10843798	ParameterType	const char *		10843740	0					
ANR	10843799	Identifier	str		10843740	1					
ANR	10843800	Parameter	const char * cname	50:52:1302:1318	10843740	2	True				
ANR	10843801	ParameterType	const char *		10843740	0					
ANR	10843802	Identifier	cname		10843740	1					
ANR	10843803	CFGEntryNode	ENTRY		10843740		True				
ANR	10843804	CFGExitNode	EXIT		10843740		True				
ANR	10843805	Symbol	str		10843740						
ANR	10843806	Symbol	ctx -> memory		10843740						
ANR	10843807	Symbol	strlen		10843740						
ANR	10843808	Symbol	gs_alloc_bytes		10843740						
ANR	10843809	Symbol	NULL		10843740						
ANR	10843810	Symbol	ctx		10843740						
ANR	10843811	Symbol	cname		10843740						
ANR	10843812	Symbol	cpy		10843740						
ANR	10843813	Symbol	* ctx		10843740						
ANR	10843814	Function	xps_clean_path	62:0:1531:2956							
ANR	10843815	FunctionDef	xps_clean_path (char * name)		10843814	0					
ANR	10843816	CompoundStatement		64:0:1572:2956	10843814	0					
ANR	10843817	IdentifierDeclStatement	"char * p , * q , * dotdot ;"	65:4:1578:1598	10843814	0	True				
ANR	10843818	IdentifierDecl	* p		10843814	0					
ANR	10843819	IdentifierDeclType	char *		10843814	0					
ANR	10843820	Identifier	p		10843814	1					
ANR	10843821	IdentifierDecl	* q		10843814	1					
ANR	10843822	IdentifierDeclType	char *		10843814	0					
ANR	10843823	Identifier	q		10843814	1					
ANR	10843824	IdentifierDecl	* dotdot		10843814	2					
ANR	10843825	IdentifierDeclType	char *		10843814	0					
ANR	10843826	Identifier	dotdot		10843814	1					
ANR	10843827	IdentifierDeclStatement	int rooted ;	66:4:1604:1614	10843814	1	True				
ANR	10843828	IdentifierDecl	rooted		10843814	0					
ANR	10843829	IdentifierDeclType	int		10843814	0					
ANR	10843830	Identifier	rooted		10843814	1					
ANR	10843831	ExpressionStatement	rooted = name [ 0 ] == '/'	68:4:1621:1644	10843814	2	True				
ANR	10843832	AssignmentExpression	rooted = name [ 0 ] == '/'		10843814	0		=			
ANR	10843833	Identifier	rooted		10843814	0					
ANR	10843834	EqualityExpression	name [ 0 ] == '/'		10843814	1		==			
ANR	10843835	ArrayIndexing	name [ 0 ]		10843814	0					
ANR	10843836	Identifier	name		10843814	0					
ANR	10843837	PrimaryExpression	0		10843814	1					
ANR	10843838	PrimaryExpression	'/'		10843814	1					
ANR	10843839	ExpressionStatement	p = q = dotdot = name + rooted	77:4:1944:1974	10843814	3	True				
ANR	10843840	AssignmentExpression	p = q = dotdot = name + rooted		10843814	0		=			
ANR	10843841	Identifier	p		10843814	0					
ANR	10843842	AssignmentExpression	q = dotdot = name + rooted		10843814	1		=			
ANR	10843843	Identifier	q		10843814	0					
ANR	10843844	AssignmentExpression	dotdot = name + rooted		10843814	1		=			
ANR	10843845	Identifier	dotdot		10843814	0					
ANR	10843846	AdditiveExpression	name + rooted		10843814	1		+			
ANR	10843847	Identifier	name		10843814	0					
ANR	10843848	Identifier	rooted		10843814	1					
ANR	10843849	WhileStatement	while ( * p )		10843814	4					
ANR	10843850	Condition	* p	78:11:1987:1988	10843814	0	True				
ANR	10843851	UnaryOperationExpression	* p		10843814	0					
ANR	10843852	UnaryOperator	*		10843814	0					
ANR	10843853	Identifier	p		10843814	1					
ANR	10843854	CompoundStatement		16:4:422:422	10843814	1					
ANR	10843855	IfStatement	if ( p [ 0 ] == '/' )		10843814	0					
ANR	10843856	Condition	p [ 0 ] == '/'	80:11:2008:2018	10843814	0	True				
ANR	10843857	EqualityExpression	p [ 0 ] == '/'		10843814	0		==			
ANR	10843858	ArrayIndexing	p [ 0 ]		10843814	0					
ANR	10843859	Identifier	p		10843814	0					
ANR	10843860	PrimaryExpression	0		10843814	1					
ANR	10843861	PrimaryExpression	'/'		10843814	1					
ANR	10843862	ExpressionStatement	p ++	81:12:2052:2055	10843814	1	True				
ANR	10843863	PostIncDecOperationExpression	p ++		10843814	0					
ANR	10843864	Identifier	p		10843814	0					
ANR	10843865	IncDec	++		10843814	1					
ANR	10843866	ElseStatement	else		10843814	0					
ANR	10843867	IfStatement	if ( p [ 0 ] == '.' && SEP ( p [ 1 ] ) )		10843814	0					
ANR	10843868	Condition	p [ 0 ] == '.' && SEP ( p [ 1 ] )	82:17:2074:2097	10843814	0	True				
ANR	10843869	AndExpression	p [ 0 ] == '.' && SEP ( p [ 1 ] )		10843814	0		&&			
ANR	10843870	EqualityExpression	p [ 0 ] == '.'		10843814	0		==			
ANR	10843871	ArrayIndexing	p [ 0 ]		10843814	0					
ANR	10843872	Identifier	p		10843814	0					
ANR	10843873	PrimaryExpression	0		10843814	1					
ANR	10843874	PrimaryExpression	'.'		10843814	1					
ANR	10843875	CallExpression	SEP ( p [ 1 ] )		10843814	1					
ANR	10843876	Callee	SEP		10843814	0					
ANR	10843877	Identifier	SEP		10843814	0					
ANR	10843878	ArgumentList	p [ 1 ]		10843814	1					
ANR	10843879	Argument	p [ 1 ]		10843814	0					
ANR	10843880	ArrayIndexing	p [ 1 ]		10843814	0					
ANR	10843881	Identifier	p		10843814	0					
ANR	10843882	PrimaryExpression	1		10843814	1					
ANR	10843883	ExpressionStatement	p += 1	83:12:2112:2118	10843814	1	True				
ANR	10843884	AssignmentExpression	p += 1		10843814	0		+=			
ANR	10843885	Identifier	p		10843814	0					
ANR	10843886	PrimaryExpression	1		10843814	1					
ANR	10843887	ElseStatement	else		10843814	0					
ANR	10843888	IfStatement	if ( p [ 0 ] == '.' && p [ 1 ] == '.' && SEP ( p [ 2 ] ) )		10843814	0					
ANR	10843889	Condition	p [ 0 ] == '.' && p [ 1 ] == '.' && SEP ( p [ 2 ] )	84:17:2187:2225	10843814	0	True				
ANR	10843890	AndExpression	p [ 0 ] == '.' && p [ 1 ] == '.' && SEP ( p [ 2 ] )		10843814	0		&&			
ANR	10843891	EqualityExpression	p [ 0 ] == '.'		10843814	0		==			
ANR	10843892	ArrayIndexing	p [ 0 ]		10843814	0					
ANR	10843893	Identifier	p		10843814	0					
ANR	10843894	PrimaryExpression	0		10843814	1					
ANR	10843895	PrimaryExpression	'.'		10843814	1					
ANR	10843896	AndExpression	p [ 1 ] == '.' && SEP ( p [ 2 ] )		10843814	1		&&			
ANR	10843897	EqualityExpression	p [ 1 ] == '.'		10843814	0		==			
ANR	10843898	ArrayIndexing	p [ 1 ]		10843814	0					
ANR	10843899	Identifier	p		10843814	0					
ANR	10843900	PrimaryExpression	1		10843814	1					
ANR	10843901	PrimaryExpression	'.'		10843814	1					
ANR	10843902	CallExpression	SEP ( p [ 2 ] )		10843814	1					
ANR	10843903	Callee	SEP		10843814	0					
ANR	10843904	Identifier	SEP		10843814	0					
ANR	10843905	ArgumentList	p [ 2 ]		10843814	1					
ANR	10843906	Argument	p [ 2 ]		10843814	0					
ANR	10843907	ArrayIndexing	p [ 2 ]		10843814	0					
ANR	10843908	Identifier	p		10843814	0					
ANR	10843909	PrimaryExpression	2		10843814	1					
ANR	10843910	CompoundStatement		22:8:663:663	10843814	1					
ANR	10843911	ExpressionStatement	p += 2	86:12:2250:2256	10843814	0	True				
ANR	10843912	AssignmentExpression	p += 2		10843814	0		+=			
ANR	10843913	Identifier	p		10843814	0					
ANR	10843914	PrimaryExpression	2		10843814	1					
ANR	10843915	IfStatement	if ( q > dotdot )		10843814	1					
ANR	10843916	Condition	q > dotdot	87:16:2274:2283	10843814	0	True				
ANR	10843917	RelationalExpression	q > dotdot		10843814	0		>			
ANR	10843918	Identifier	q		10843814	0					
ANR	10843919	Identifier	dotdot		10843814	1					
ANR	10843920	CompoundStatement		25:12:745:745	10843814	1					
ANR	10843921	WhileStatement	while ( -- q > dotdot && * q != '/' )		10843814	0					
ANR	10843922	Condition	-- q > dotdot && * q != '/'	89:22:2342:2366	10843814	0	True				
ANR	10843923	AndExpression	-- q > dotdot && * q != '/'		10843814	0		&&			
ANR	10843924	RelationalExpression	-- q > dotdot		10843814	0		>			
ANR	10843925	UnaryExpression	-- q		10843814	0					
ANR	10843926	IncDec	--		10843814	0					
ANR	10843927	Identifier	q		10843814	1					
ANR	10843928	Identifier	dotdot		10843814	1					
ANR	10843929	EqualityExpression	* q != '/'		10843814	1		!=			
ANR	10843930	UnaryOperationExpression	* q		10843814	0					
ANR	10843931	UnaryOperator	*		10843814	0					
ANR	10843932	Identifier	q		10843814	1					
ANR	10843933	PrimaryExpression	'/'		10843814	1					
ANR	10843934	ExpressionStatement		90:20:2389:2389	10843814	1	True				
ANR	10843935	ElseStatement	else		10843814	0					
ANR	10843936	IfStatement	if ( ! rooted )		10843814	0					
ANR	10843937	Condition	! rooted	92:21:2426:2432	10843814	0	True				
ANR	10843938	UnaryOperationExpression	! rooted		10843814	0					
ANR	10843939	UnaryOperator	!		10843814	0					
ANR	10843940	Identifier	rooted		10843814	1					
ANR	10843941	CompoundStatement		30:12:905:905	10843814	1					
ANR	10843942	IfStatement	if ( q != name )		10843814	0					
ANR	10843943	Condition	q != name	94:20:2500:2508	10843814	0	True				
ANR	10843944	EqualityExpression	q != name		10843814	0		!=			
ANR	10843945	Identifier	q		10843814	0					
ANR	10843946	Identifier	name		10843814	1					
ANR	10843947	ExpressionStatement	* q ++ = '/'	95:20:2531:2541	10843814	1	True				
ANR	10843948	AssignmentExpression	* q ++ = '/'		10843814	0		=			
ANR	10843949	UnaryOperationExpression	* q ++		10843814	0					
ANR	10843950	UnaryOperator	*		10843814	0					
ANR	10843951	PostIncDecOperationExpression	q ++		10843814	1					
ANR	10843952	Identifier	q		10843814	0					
ANR	10843953	IncDec	++		10843814	1					
ANR	10843954	PrimaryExpression	'/'		10843814	1					
ANR	10843955	ExpressionStatement	* q ++ = '.'	96:16:2559:2569	10843814	1	True				
ANR	10843956	AssignmentExpression	* q ++ = '.'		10843814	0		=			
ANR	10843957	UnaryOperationExpression	* q ++		10843814	0					
ANR	10843958	UnaryOperator	*		10843814	0					
ANR	10843959	PostIncDecOperationExpression	q ++		10843814	1					
ANR	10843960	Identifier	q		10843814	0					
ANR	10843961	IncDec	++		10843814	1					
ANR	10843962	PrimaryExpression	'.'		10843814	1					
ANR	10843963	ExpressionStatement	* q ++ = '.'	97:16:2587:2597	10843814	2	True				
ANR	10843964	AssignmentExpression	* q ++ = '.'		10843814	0		=			
ANR	10843965	UnaryOperationExpression	* q ++		10843814	0					
ANR	10843966	UnaryOperator	*		10843814	0					
ANR	10843967	PostIncDecOperationExpression	q ++		10843814	1					
ANR	10843968	Identifier	q		10843814	0					
ANR	10843969	IncDec	++		10843814	1					
ANR	10843970	PrimaryExpression	'.'		10843814	1					
ANR	10843971	ExpressionStatement	dotdot = q	98:16:2615:2625	10843814	3	True				
ANR	10843972	AssignmentExpression	dotdot = q		10843814	0		=			
ANR	10843973	Identifier	dotdot		10843814	0					
ANR	10843974	Identifier	q		10843814	1					
ANR	10843975	ElseStatement	else		10843814	0					
ANR	10843976	CompoundStatement		39:8:1123:1123	10843814	0					
ANR	10843977	IfStatement	if ( q != name + rooted )		10843814	0					
ANR	10843978	Condition	q != name + rooted	103:16:2714:2729	10843814	0	True				
ANR	10843979	EqualityExpression	q != name + rooted		10843814	0		!=			
ANR	10843980	Identifier	q		10843814	0					
ANR	10843981	AdditiveExpression	name + rooted		10843814	1		+			
ANR	10843982	Identifier	name		10843814	0					
ANR	10843983	Identifier	rooted		10843814	1					
ANR	10843984	ExpressionStatement	* q ++ = '/'	104:16:2748:2758	10843814	1	True				
ANR	10843985	AssignmentExpression	* q ++ = '/'		10843814	0		=			
ANR	10843986	UnaryOperationExpression	* q ++		10843814	0					
ANR	10843987	UnaryOperator	*		10843814	0					
ANR	10843988	PostIncDecOperationExpression	q ++		10843814	1					
ANR	10843989	Identifier	q		10843814	0					
ANR	10843990	IncDec	++		10843814	1					
ANR	10843991	PrimaryExpression	'/'		10843814	1					
ANR	10843992	WhileStatement	while ( ( * q = * p ) != '/' && * q != 0 )		10843814	1					
ANR	10843993	Condition	( * q = * p ) != '/' && * q != 0	105:19:2779:2805	10843814	0	True				
ANR	10843994	AndExpression	( * q = * p ) != '/' && * q != 0		10843814	0		&&			
ANR	10843995	EqualityExpression	( * q = * p ) != '/'		10843814	0		!=			
ANR	10843996	AssignmentExpression	* q = * p		10843814	0		=			
ANR	10843997	UnaryOperationExpression	* q		10843814	0					
ANR	10843998	UnaryOperator	*		10843814	0					
ANR	10843999	Identifier	q		10843814	1					
ANR	10844000	UnaryOperationExpression	* p		10843814	1					
ANR	10844001	UnaryOperator	*		10843814	0					
ANR	10844002	Identifier	p		10843814	1					
ANR	10844003	PrimaryExpression	'/'		10843814	1					
ANR	10844004	EqualityExpression	* q != 0		10843814	1		!=			
ANR	10844005	UnaryOperationExpression	* q		10843814	0					
ANR	10844006	UnaryOperator	*		10843814	0					
ANR	10844007	Identifier	q		10843814	1					
ANR	10844008	PrimaryExpression	0		10843814	1					
ANR	10844009	ExpressionStatement	"p ++ , q ++"	106:16:2824:2832	10843814	1	True				
ANR	10844010	Expression	"p ++ , q ++"		10843814	0					
ANR	10844011	PostIncDecOperationExpression	p ++		10843814	0					
ANR	10844012	Identifier	p		10843814	0					
ANR	10844013	IncDec	++		10843814	1					
ANR	10844014	PostIncDecOperationExpression	q ++		10843814	1					
ANR	10844015	Identifier	q		10843814	0					
ANR	10844016	IncDec	++		10843814	1					
ANR	10844017	IfStatement	if ( q == name )		10843814	5					
ANR	10844018	Condition	q == name	110:8:2859:2867	10843814	0	True				
ANR	10844019	EqualityExpression	q == name		10843814	0		==			
ANR	10844020	Identifier	q		10843814	0					
ANR	10844021	Identifier	name		10843814	1					
ANR	10844022	ExpressionStatement	* q ++ = '.'	111:8:2911:2921	10843814	1	True				
ANR	10844023	AssignmentExpression	* q ++ = '.'		10843814	0		=			
ANR	10844024	UnaryOperationExpression	* q ++		10843814	0					
ANR	10844025	UnaryOperator	*		10843814	0					
ANR	10844026	PostIncDecOperationExpression	q ++		10843814	1					
ANR	10844027	Identifier	q		10843814	0					
ANR	10844028	IncDec	++		10843814	1					
ANR	10844029	PrimaryExpression	'.'		10843814	1					
ANR	10844030	ExpressionStatement	* q = '\\0'	112:4:2927:2936	10843814	6	True				
ANR	10844031	AssignmentExpression	* q = '\\0'		10843814	0		=			
ANR	10844032	UnaryOperationExpression	* q		10843814	0					
ANR	10844033	UnaryOperator	*		10843814	0					
ANR	10844034	Identifier	q		10843814	1					
ANR	10844035	PrimaryExpression	'\\0'		10843814	1					
ANR	10844036	ReturnStatement	return name ;	114:4:2943:2954	10843814	7	True				
ANR	10844037	Identifier	name		10843814	0					
ANR	10844038	ReturnType	static char *		10843814	1					
ANR	10844039	Identifier	xps_clean_path		10843814	2					
ANR	10844040	ParameterList	char * name		10843814	3					
ANR	10844041	Parameter	char * name	63:15:1560:1569	10843814	0	True				
ANR	10844042	ParameterType	char *		10843814	0					
ANR	10844043	Identifier	name		10843814	1					
ANR	10844044	CFGEntryNode	ENTRY		10843814		True				
ANR	10844045	CFGExitNode	EXIT		10843814		True				
ANR	10844046	Symbol	p		10843814						
ANR	10844047	Symbol	* name		10843814						
ANR	10844048	Symbol	q		10843814						
ANR	10844049	Symbol	dotdot		10843814						
ANR	10844050	Symbol	* q ++		10843814						
ANR	10844051	Symbol	name		10843814						
ANR	10844052	Symbol	rooted		10843814						
ANR	10844053	Symbol	* p		10843814						
ANR	10844054	Symbol	* q		10843814						
ANR	10844055	Symbol	SEP		10843814						
ANR	10844056	Function	xps_absolute_path	117:0:2959:3319							
ANR	10844057	FunctionDef	"xps_absolute_path (char * output , char * base_uri , char * path , int output_size)"		10844056	0					
ANR	10844058	CompoundStatement		119:0:3041:3319	10844056	0					
ANR	10844059	IfStatement	if ( path [ 0 ] == '/' )		10844056	0					
ANR	10844060	Condition	path [ 0 ] == '/'	120:8:3051:3064	10844056	0	True				
ANR	10844061	EqualityExpression	path [ 0 ] == '/'		10844056	0		==			
ANR	10844062	ArrayIndexing	path [ 0 ]		10844056	0					
ANR	10844063	Identifier	path		10844056	0					
ANR	10844064	PrimaryExpression	0		10844056	1					
ANR	10844065	PrimaryExpression	'/'		10844056	1					
ANR	10844066	CompoundStatement		3:4:29:29	10844056	1					
ANR	10844067	ExpressionStatement	"gs_strlcpy ( output , path , output_size )"	122:8:3081:3118	10844056	0	True				
ANR	10844068	CallExpression	"gs_strlcpy ( output , path , output_size )"		10844056	0					
ANR	10844069	Callee	gs_strlcpy		10844056	0					
ANR	10844070	Identifier	gs_strlcpy		10844056	0					
ANR	10844071	ArgumentList	output		10844056	1					
ANR	10844072	Argument	output		10844056	0					
ANR	10844073	Identifier	output		10844056	0					
ANR	10844074	Argument	path		10844056	1					
ANR	10844075	Identifier	path		10844056	0					
ANR	10844076	Argument	output_size		10844056	2					
ANR	10844077	Identifier	output_size		10844056	0					
ANR	10844078	ElseStatement	else		10844056	0					
ANR	10844079	CompoundStatement		7:4:97:97	10844056	0					
ANR	10844080	ExpressionStatement	"gs_strlcpy ( output , base_uri , output_size )"	126:8:3149:3190	10844056	0	True				
ANR	10844081	CallExpression	"gs_strlcpy ( output , base_uri , output_size )"		10844056	0					
ANR	10844082	Callee	gs_strlcpy		10844056	0					
ANR	10844083	Identifier	gs_strlcpy		10844056	0					
ANR	10844084	ArgumentList	output		10844056	1					
ANR	10844085	Argument	output		10844056	0					
ANR	10844086	Identifier	output		10844056	0					
ANR	10844087	Argument	base_uri		10844056	1					
ANR	10844088	Identifier	base_uri		10844056	0					
ANR	10844089	Argument	output_size		10844056	2					
ANR	10844090	Identifier	output_size		10844056	0					
ANR	10844091	ExpressionStatement	"gs_strlcat ( output , ""/"" , output_size )"	127:8:3200:3236	10844056	1	True				
ANR	10844092	CallExpression	"gs_strlcat ( output , ""/"" , output_size )"		10844056	0					
ANR	10844093	Callee	gs_strlcat		10844056	0					
ANR	10844094	Identifier	gs_strlcat		10844056	0					
ANR	10844095	ArgumentList	output		10844056	1					
ANR	10844096	Argument	output		10844056	0					
ANR	10844097	Identifier	output		10844056	0					
ANR	10844098	Argument	"""/"""		10844056	1					
ANR	10844099	PrimaryExpression	"""/"""		10844056	0					
ANR	10844100	Argument	output_size		10844056	2					
ANR	10844101	Identifier	output_size		10844056	0					
ANR	10844102	ExpressionStatement	"gs_strlcat ( output , path , output_size )"	128:8:3246:3283	10844056	2	True				
ANR	10844103	CallExpression	"gs_strlcat ( output , path , output_size )"		10844056	0					
ANR	10844104	Callee	gs_strlcat		10844056	0					
ANR	10844105	Identifier	gs_strlcat		10844056	0					
ANR	10844106	ArgumentList	output		10844056	1					
ANR	10844107	Argument	output		10844056	0					
ANR	10844108	Identifier	output		10844056	0					
ANR	10844109	Argument	path		10844056	1					
ANR	10844110	Identifier	path		10844056	0					
ANR	10844111	Argument	output_size		10844056	2					
ANR	10844112	Identifier	output_size		10844056	0					
ANR	10844113	ExpressionStatement	xps_clean_path ( output )	130:4:3295:3317	10844056	1	True				
ANR	10844114	CallExpression	xps_clean_path ( output )		10844056	0					
ANR	10844115	Callee	xps_clean_path		10844056	0					
ANR	10844116	Identifier	xps_clean_path		10844056	0					
ANR	10844117	ArgumentList	output		10844056	1					
ANR	10844118	Argument	output		10844056	0					
ANR	10844119	Identifier	output		10844056	0					
ANR	10844120	ReturnType	void		10844056	1					
ANR	10844121	Identifier	xps_absolute_path		10844056	2					
ANR	10844122	ParameterList	"char * output , char * base_uri , char * path , int output_size"		10844056	3					
ANR	10844123	Parameter	char * output	118:18:2982:2993	10844056	0	True				
ANR	10844124	ParameterType	char *		10844056	0					
ANR	10844125	Identifier	output		10844056	1					
ANR	10844126	Parameter	char * base_uri	118:32:2996:3009	10844056	1	True				
ANR	10844127	ParameterType	char *		10844056	0					
ANR	10844128	Identifier	base_uri		10844056	1					
ANR	10844129	Parameter	char * path	118:48:3012:3021	10844056	2	True				
ANR	10844130	ParameterType	char *		10844056	0					
ANR	10844131	Identifier	path		10844056	1					
ANR	10844132	Parameter	int output_size	118:60:3024:3038	10844056	3	True				
ANR	10844133	ParameterType	int		10844056	0					
ANR	10844134	Identifier	output_size		10844056	1					
ANR	10844135	CFGEntryNode	ENTRY		10844056		True				
ANR	10844136	CFGExitNode	EXIT		10844056		True				
ANR	10844137	Symbol	output		10844056						
ANR	10844138	Symbol	path		10844056						
ANR	10844139	Symbol	output_size		10844056						
ANR	10844140	Symbol	base_uri		10844056						
ANR	10844141	Symbol	* path		10844056						
