command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4979622	File	data/converged/CVE-2018-16863_ghostpdl/gsbitops.h								
ANR	4979623	Function	sample_load_next8	46:18:1621:2093							
ANR	4979624	FunctionDef	"sample_load_next8 (uint * value , const byte * * sptr , int * sbit , int sbpv)"		4979623	0					
ANR	4979625	CompoundStatement		47:0:1692:2093	4979623	0					
ANR	4979626	SwitchStatement	switch ( sbpv >> 2 )		4979623	0					
ANR	4979627	Condition	sbpv >> 2	48:13:1707:1715	4979623	0	True				
ANR	4979628	ShiftExpression	sbpv >> 2		4979623	0		>>			
ANR	4979629	Identifier	sbpv		4979623	0					
ANR	4979630	PrimaryExpression	2		4979623	1					
ANR	4979631	CompoundStatement		2:25:26:26	4979623	1					
ANR	4979632	Label	case 0 :	49:8:1729:1735	4979623	0	True				
ANR	4979633	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	50:12:1749:1801	4979623	1	True				
ANR	4979634	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4979623	0		=			
ANR	4979635	UnaryOperationExpression	* value		4979623	0					
ANR	4979636	UnaryOperator	*		4979623	0					
ANR	4979637	Identifier	value		4979623	1					
ANR	4979638	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4979623	1		&			
ANR	4979639	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		4979623	0		>>			
ANR	4979640	UnaryOperationExpression	* * sptr		4979623	0					
ANR	4979641	UnaryOperator	*		4979623	0					
ANR	4979642	UnaryOperationExpression	* sptr		4979623	1					
ANR	4979643	UnaryOperator	*		4979623	0					
ANR	4979644	Identifier	sptr		4979623	1					
ANR	4979645	AdditiveExpression	8 - * sbit - sbpv		4979623	1		-			
ANR	4979646	PrimaryExpression	8		4979623	0					
ANR	4979647	AdditiveExpression	* sbit - sbpv		4979623	1		-			
ANR	4979648	UnaryOperationExpression	* sbit		4979623	0					
ANR	4979649	UnaryOperator	*		4979623	0					
ANR	4979650	Identifier	sbit		4979623	1					
ANR	4979651	Identifier	sbpv		4979623	1					
ANR	4979652	InclusiveOrExpression	sbpv | 1		4979623	1		|			
ANR	4979653	Identifier	sbpv		4979623	0					
ANR	4979654	PrimaryExpression	1		4979623	1					
ANR	4979655	BreakStatement	break ;	51:12:1815:1820	4979623	2	True				
ANR	4979656	Label	case 1 :	52:8:1830:1836	4979623	3	True				
ANR	4979657	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	53:12:1850:1888	4979623	4	True				
ANR	4979658	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		4979623	0		=			
ANR	4979659	UnaryOperationExpression	* value		4979623	0					
ANR	4979660	UnaryOperator	*		4979623	0					
ANR	4979661	Identifier	value		4979623	1					
ANR	4979662	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		4979623	1		&			
ANR	4979663	ShiftExpression	* * sptr >> ( 4 - * sbit )		4979623	0		>>			
ANR	4979664	UnaryOperationExpression	* * sptr		4979623	0					
ANR	4979665	UnaryOperator	*		4979623	0					
ANR	4979666	UnaryOperationExpression	* sptr		4979623	1					
ANR	4979667	UnaryOperator	*		4979623	0					
ANR	4979668	Identifier	sptr		4979623	1					
ANR	4979669	AdditiveExpression	4 - * sbit		4979623	1		-			
ANR	4979670	PrimaryExpression	4		4979623	0					
ANR	4979671	UnaryOperationExpression	* sbit		4979623	1					
ANR	4979672	UnaryOperator	*		4979623	0					
ANR	4979673	Identifier	sbit		4979623	1					
ANR	4979674	PrimaryExpression	0xf		4979623	1					
ANR	4979675	BreakStatement	break ;	54:12:1902:1907	4979623	5	True				
ANR	4979676	Label	case 2 :	55:8:1917:1923	4979623	6	True				
ANR	4979677	ExpressionStatement	* value = * * sptr	56:12:1937:1952	4979623	7	True				
ANR	4979678	AssignmentExpression	* value = * * sptr		4979623	0		=			
ANR	4979679	UnaryOperationExpression	* value		4979623	0					
ANR	4979680	UnaryOperator	*		4979623	0					
ANR	4979681	Identifier	value		4979623	1					
ANR	4979682	UnaryOperationExpression	* * sptr		4979623	1					
ANR	4979683	UnaryOperator	*		4979623	0					
ANR	4979684	UnaryOperationExpression	* sptr		4979623	1					
ANR	4979685	UnaryOperator	*		4979623	0					
ANR	4979686	Identifier	sptr		4979623	1					
ANR	4979687	BreakStatement	break ;	57:12:1966:1971	4979623	8	True				
ANR	4979688	Label	default :	58:8:1981:1988	4979623	9	True				
ANR	4979689	Identifier	default		4979623	0					
ANR	4979690	ReturnStatement	return - 1 ;	59:12:2002:2011	4979623	10	True				
ANR	4979691	UnaryOperationExpression	- 1		4979623	0					
ANR	4979692	UnaryOperator	-		4979623	0					
ANR	4979693	PrimaryExpression	1		4979623	1					
ANR	4979694	ExpressionStatement	* sbit += sbpv	61:4:2023:2036	4979623	1	True				
ANR	4979695	AssignmentExpression	* sbit += sbpv		4979623	0		+=			
ANR	4979696	UnaryOperationExpression	* sbit		4979623	0					
ANR	4979697	UnaryOperator	*		4979623	0					
ANR	4979698	Identifier	sbit		4979623	1					
ANR	4979699	Identifier	sbpv		4979623	1					
ANR	4979700	ExpressionStatement	* sptr += * sbit >> 3	62:4:2042:2061	4979623	2	True				
ANR	4979701	AssignmentExpression	* sptr += * sbit >> 3		4979623	0		+=			
ANR	4979702	UnaryOperationExpression	* sptr		4979623	0					
ANR	4979703	UnaryOperator	*		4979623	0					
ANR	4979704	Identifier	sptr		4979623	1					
ANR	4979705	ShiftExpression	* sbit >> 3		4979623	1		>>			
ANR	4979706	UnaryOperationExpression	* sbit		4979623	0					
ANR	4979707	UnaryOperator	*		4979623	0					
ANR	4979708	Identifier	sbit		4979623	1					
ANR	4979709	PrimaryExpression	3		4979623	1					
ANR	4979710	ExpressionStatement	* sbit &= 7	63:4:2067:2077	4979623	3	True				
ANR	4979711	AssignmentExpression	* sbit &= 7		4979623	0		&=			
ANR	4979712	UnaryOperationExpression	* sbit		4979623	0					
ANR	4979713	UnaryOperator	*		4979623	0					
ANR	4979714	Identifier	sbit		4979623	1					
ANR	4979715	PrimaryExpression	7		4979623	1					
ANR	4979716	ReturnStatement	return 0 ;	64:4:2083:2091	4979623	4	True				
ANR	4979717	PrimaryExpression	0		4979623	0					
ANR	4979718	Identifier	sample_load_next8		4979623	1					
ANR	4979719	ParameterList	"uint * value , const byte * * sptr , int * sbit , int sbpv"		4979623	2					
ANR	4979720	Parameter	uint * value	46:36:1639:1649	4979623	0	True				
ANR	4979721	ParameterType	uint *		4979623	0					
ANR	4979722	Identifier	value		4979623	1					
ANR	4979723	Parameter	const byte * * sptr	46:49:1652:1668	4979623	1	True				
ANR	4979724	ParameterType	const byte * *		4979623	0					
ANR	4979725	Identifier	sptr		4979623	1					
ANR	4979726	Parameter	int * sbit	46:68:1671:1679	4979623	2	True				
ANR	4979727	ParameterType	int *		4979623	0					
ANR	4979728	Identifier	sbit		4979623	1					
ANR	4979729	Parameter	int sbpv	46:79:1682:1689	4979623	3	True				
ANR	4979730	ParameterType	int		4979623	0					
ANR	4979731	Identifier	sbpv		4979623	1					
ANR	4979732	CFGEntryNode	ENTRY		4979623		True				
ANR	4979733	CFGExitNode	EXIT		4979623		True				
ANR	4979734	Symbol	sbpv		4979623						
ANR	4979735	Symbol	* sbit		4979623						
ANR	4979736	Symbol	* sptr		4979623						
ANR	4979737	Symbol	* value		4979623						
ANR	4979738	Symbol	* * sptr		4979623						
ANR	4979739	Symbol	value		4979623						
ANR	4979740	Symbol	sptr		4979623						
ANR	4979741	Symbol	sbit		4979623						
ANR	4979742	Function	sample_load_next12	66:18:2113:2742							
ANR	4979743	FunctionDef	"sample_load_next12 (uint * value , const byte * * sptr , int * sbit , int sbpv)"		4979742	0					
ANR	4979744	CompoundStatement		67:0:2185:2742	4979742	0					
ANR	4979745	SwitchStatement	switch ( sbpv >> 2 )		4979742	0					
ANR	4979746	Condition	sbpv >> 2	68:13:2200:2208	4979742	0	True				
ANR	4979747	ShiftExpression	sbpv >> 2		4979742	0		>>			
ANR	4979748	Identifier	sbpv		4979742	0					
ANR	4979749	PrimaryExpression	2		4979742	1					
ANR	4979750	CompoundStatement		2:25:26:26	4979742	1					
ANR	4979751	Label	case 0 :	69:8:2222:2228	4979742	0	True				
ANR	4979752	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	70:12:2242:2294	4979742	1	True				
ANR	4979753	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4979742	0		=			
ANR	4979754	UnaryOperationExpression	* value		4979742	0					
ANR	4979755	UnaryOperator	*		4979742	0					
ANR	4979756	Identifier	value		4979742	1					
ANR	4979757	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4979742	1		&			
ANR	4979758	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		4979742	0		>>			
ANR	4979759	UnaryOperationExpression	* * sptr		4979742	0					
ANR	4979760	UnaryOperator	*		4979742	0					
ANR	4979761	UnaryOperationExpression	* sptr		4979742	1					
ANR	4979762	UnaryOperator	*		4979742	0					
ANR	4979763	Identifier	sptr		4979742	1					
ANR	4979764	AdditiveExpression	8 - * sbit - sbpv		4979742	1		-			
ANR	4979765	PrimaryExpression	8		4979742	0					
ANR	4979766	AdditiveExpression	* sbit - sbpv		4979742	1		-			
ANR	4979767	UnaryOperationExpression	* sbit		4979742	0					
ANR	4979768	UnaryOperator	*		4979742	0					
ANR	4979769	Identifier	sbit		4979742	1					
ANR	4979770	Identifier	sbpv		4979742	1					
ANR	4979771	InclusiveOrExpression	sbpv | 1		4979742	1		|			
ANR	4979772	Identifier	sbpv		4979742	0					
ANR	4979773	PrimaryExpression	1		4979742	1					
ANR	4979774	BreakStatement	break ;	71:12:2308:2313	4979742	2	True				
ANR	4979775	Label	case 1 :	72:8:2323:2329	4979742	3	True				
ANR	4979776	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	73:12:2343:2381	4979742	4	True				
ANR	4979777	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		4979742	0		=			
ANR	4979778	UnaryOperationExpression	* value		4979742	0					
ANR	4979779	UnaryOperator	*		4979742	0					
ANR	4979780	Identifier	value		4979742	1					
ANR	4979781	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		4979742	1		&			
ANR	4979782	ShiftExpression	* * sptr >> ( 4 - * sbit )		4979742	0		>>			
ANR	4979783	UnaryOperationExpression	* * sptr		4979742	0					
ANR	4979784	UnaryOperator	*		4979742	0					
ANR	4979785	UnaryOperationExpression	* sptr		4979742	1					
ANR	4979786	UnaryOperator	*		4979742	0					
ANR	4979787	Identifier	sptr		4979742	1					
ANR	4979788	AdditiveExpression	4 - * sbit		4979742	1		-			
ANR	4979789	PrimaryExpression	4		4979742	0					
ANR	4979790	UnaryOperationExpression	* sbit		4979742	1					
ANR	4979791	UnaryOperator	*		4979742	0					
ANR	4979792	Identifier	sbit		4979742	1					
ANR	4979793	PrimaryExpression	0xf		4979742	1					
ANR	4979794	BreakStatement	break ;	74:12:2395:2400	4979742	5	True				
ANR	4979795	Label	case 2 :	75:8:2410:2416	4979742	6	True				
ANR	4979796	ExpressionStatement	* value = * * sptr	76:12:2430:2445	4979742	7	True				
ANR	4979797	AssignmentExpression	* value = * * sptr		4979742	0		=			
ANR	4979798	UnaryOperationExpression	* value		4979742	0					
ANR	4979799	UnaryOperator	*		4979742	0					
ANR	4979800	Identifier	value		4979742	1					
ANR	4979801	UnaryOperationExpression	* * sptr		4979742	1					
ANR	4979802	UnaryOperator	*		4979742	0					
ANR	4979803	UnaryOperationExpression	* sptr		4979742	1					
ANR	4979804	UnaryOperator	*		4979742	0					
ANR	4979805	Identifier	sptr		4979742	1					
ANR	4979806	BreakStatement	break ;	77:12:2459:2464	4979742	8	True				
ANR	4979807	Label	case 3 :	78:8:2474:2480	4979742	9	True				
ANR	4979808	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	79:12:2494:2603	4979742	10	True				
ANR	4979809	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		4979742	0		=			
ANR	4979810	UnaryOperationExpression	* value		4979742	0					
ANR	4979811	UnaryOperator	*		4979742	0					
ANR	4979812	Identifier	value		4979742	1					
ANR	4979813	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4979742	1					
ANR	4979814	Condition	* sbit		4979742	0					
ANR	4979815	UnaryOperationExpression	* sbit		4979742	0					
ANR	4979816	UnaryOperator	*		4979742	0					
ANR	4979817	Identifier	sbit		4979742	1					
ANR	4979818	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		4979742	1		|			
ANR	4979819	ShiftExpression	( * * sptr & 0xf ) << 8		4979742	0		<<			
ANR	4979820	BitAndExpression	* * sptr & 0xf		4979742	0		&			
ANR	4979821	UnaryOperationExpression	* * sptr		4979742	0					
ANR	4979822	UnaryOperator	*		4979742	0					
ANR	4979823	UnaryOperationExpression	* sptr		4979742	1					
ANR	4979824	UnaryOperator	*		4979742	0					
ANR	4979825	Identifier	sptr		4979742	1					
ANR	4979826	PrimaryExpression	0xf		4979742	1					
ANR	4979827	PrimaryExpression	8		4979742	1					
ANR	4979828	ArrayIndexing	( * sptr ) [ 1 ]		4979742	1					
ANR	4979829	UnaryOperationExpression	* sptr		4979742	0					
ANR	4979830	UnaryOperator	*		4979742	0					
ANR	4979831	Identifier	sptr		4979742	1					
ANR	4979832	PrimaryExpression	1		4979742	1					
ANR	4979833	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4979742	2		|			
ANR	4979834	ShiftExpression	* * sptr << 4		4979742	0		<<			
ANR	4979835	UnaryOperationExpression	* * sptr		4979742	0					
ANR	4979836	UnaryOperator	*		4979742	0					
ANR	4979837	UnaryOperationExpression	* sptr		4979742	1					
ANR	4979838	UnaryOperator	*		4979742	0					
ANR	4979839	Identifier	sptr		4979742	1					
ANR	4979840	PrimaryExpression	4		4979742	1					
ANR	4979841	ShiftExpression	( * sptr ) [ 1 ] >> 4		4979742	1		>>			
ANR	4979842	ArrayIndexing	( * sptr ) [ 1 ]		4979742	0					
ANR	4979843	UnaryOperationExpression	* sptr		4979742	0					
ANR	4979844	UnaryOperator	*		4979742	0					
ANR	4979845	Identifier	sptr		4979742	1					
ANR	4979846	PrimaryExpression	1		4979742	1					
ANR	4979847	PrimaryExpression	4		4979742	1					
ANR	4979848	BreakStatement	break ;	81:10:2615:2620	4979742	11	True				
ANR	4979849	Label	default :	82:8:2630:2637	4979742	12	True				
ANR	4979850	Identifier	default		4979742	0					
ANR	4979851	ReturnStatement	return - 1 ;	83:12:2651:2660	4979742	13	True				
ANR	4979852	UnaryOperationExpression	- 1		4979742	0					
ANR	4979853	UnaryOperator	-		4979742	0					
ANR	4979854	PrimaryExpression	1		4979742	1					
ANR	4979855	ExpressionStatement	* sbit += sbpv	85:4:2672:2685	4979742	1	True				
ANR	4979856	AssignmentExpression	* sbit += sbpv		4979742	0		+=			
ANR	4979857	UnaryOperationExpression	* sbit		4979742	0					
ANR	4979858	UnaryOperator	*		4979742	0					
ANR	4979859	Identifier	sbit		4979742	1					
ANR	4979860	Identifier	sbpv		4979742	1					
ANR	4979861	ExpressionStatement	* sptr += * sbit >> 3	86:4:2691:2710	4979742	2	True				
ANR	4979862	AssignmentExpression	* sptr += * sbit >> 3		4979742	0		+=			
ANR	4979863	UnaryOperationExpression	* sptr		4979742	0					
ANR	4979864	UnaryOperator	*		4979742	0					
ANR	4979865	Identifier	sptr		4979742	1					
ANR	4979866	ShiftExpression	* sbit >> 3		4979742	1		>>			
ANR	4979867	UnaryOperationExpression	* sbit		4979742	0					
ANR	4979868	UnaryOperator	*		4979742	0					
ANR	4979869	Identifier	sbit		4979742	1					
ANR	4979870	PrimaryExpression	3		4979742	1					
ANR	4979871	ExpressionStatement	* sbit &= 7	87:4:2716:2726	4979742	3	True				
ANR	4979872	AssignmentExpression	* sbit &= 7		4979742	0		&=			
ANR	4979873	UnaryOperationExpression	* sbit		4979742	0					
ANR	4979874	UnaryOperator	*		4979742	0					
ANR	4979875	Identifier	sbit		4979742	1					
ANR	4979876	PrimaryExpression	7		4979742	1					
ANR	4979877	ReturnStatement	return 0 ;	88:4:2732:2740	4979742	4	True				
ANR	4979878	PrimaryExpression	0		4979742	0					
ANR	4979879	Identifier	sample_load_next12		4979742	1					
ANR	4979880	ParameterList	"uint * value , const byte * * sptr , int * sbit , int sbpv"		4979742	2					
ANR	4979881	Parameter	uint * value	66:37:2132:2142	4979742	0	True				
ANR	4979882	ParameterType	uint *		4979742	0					
ANR	4979883	Identifier	value		4979742	1					
ANR	4979884	Parameter	const byte * * sptr	66:50:2145:2161	4979742	1	True				
ANR	4979885	ParameterType	const byte * *		4979742	0					
ANR	4979886	Identifier	sptr		4979742	1					
ANR	4979887	Parameter	int * sbit	66:69:2164:2172	4979742	2	True				
ANR	4979888	ParameterType	int *		4979742	0					
ANR	4979889	Identifier	sbit		4979742	1					
ANR	4979890	Parameter	int sbpv	66:80:2175:2182	4979742	3	True				
ANR	4979891	ParameterType	int		4979742	0					
ANR	4979892	Identifier	sbpv		4979742	1					
ANR	4979893	CFGEntryNode	ENTRY		4979742		True				
ANR	4979894	CFGExitNode	EXIT		4979742		True				
ANR	4979895	Symbol	sbpv		4979742						
ANR	4979896	Symbol	* sbit		4979742						
ANR	4979897	Symbol	* sptr		4979742						
ANR	4979898	Symbol	* value		4979742						
ANR	4979899	Symbol	* * sptr		4979742						
ANR	4979900	Symbol	value		4979742						
ANR	4979901	Symbol	sptr		4979742						
ANR	4979902	Symbol	sbit		4979742						
ANR	4979903	Function	sample_load16	90:18:2762:3391							
ANR	4979904	FunctionDef	"sample_load16 (uint * value , const byte * sptr , int sbit , int sbpv)"		4979903	0					
ANR	4979905	CompoundStatement		91:0:2827:3391	4979903	0					
ANR	4979906	SwitchStatement	switch ( sbpv >> 2 )		4979903	0					
ANR	4979907	Condition	sbpv >> 2	92:12:2841:2849	4979903	0	True				
ANR	4979908	ShiftExpression	sbpv >> 2		4979903	0		>>			
ANR	4979909	Identifier	sbpv		4979903	0					
ANR	4979910	PrimaryExpression	2		4979903	1					
ANR	4979911	CompoundStatement		2:24:25:25	4979903	1					
ANR	4979912	Label	case 0 :	93:8:2863:2869	4979903	0	True				
ANR	4979913	ExpressionStatement	* value = ( * sptr >> ( 8 - sbit - sbpv ) ) & ( sbpv | 1 )	94:12:2883:2933	4979903	1	True				
ANR	4979914	AssignmentExpression	* value = ( * sptr >> ( 8 - sbit - sbpv ) ) & ( sbpv | 1 )		4979903	0		=			
ANR	4979915	UnaryOperationExpression	* value		4979903	0					
ANR	4979916	UnaryOperator	*		4979903	0					
ANR	4979917	Identifier	value		4979903	1					
ANR	4979918	BitAndExpression	( * sptr >> ( 8 - sbit - sbpv ) ) & ( sbpv | 1 )		4979903	1		&			
ANR	4979919	ShiftExpression	* sptr >> ( 8 - sbit - sbpv )		4979903	0		>>			
ANR	4979920	UnaryOperationExpression	* sptr		4979903	0					
ANR	4979921	UnaryOperator	*		4979903	0					
ANR	4979922	Identifier	sptr		4979903	1					
ANR	4979923	AdditiveExpression	8 - sbit - sbpv		4979903	1		-			
ANR	4979924	PrimaryExpression	8		4979903	0					
ANR	4979925	AdditiveExpression	sbit - sbpv		4979903	1		-			
ANR	4979926	Identifier	sbit		4979903	0					
ANR	4979927	Identifier	sbpv		4979903	1					
ANR	4979928	InclusiveOrExpression	sbpv | 1		4979903	1		|			
ANR	4979929	Identifier	sbpv		4979903	0					
ANR	4979930	PrimaryExpression	1		4979903	1					
ANR	4979931	BreakStatement	break ;	95:12:2947:2952	4979903	2	True				
ANR	4979932	Label	case 1 :	96:8:2962:2968	4979903	3	True				
ANR	4979933	ExpressionStatement	* value = ( * sptr >> ( 4 - sbit ) ) & 0xf	97:12:2982:3018	4979903	4	True				
ANR	4979934	AssignmentExpression	* value = ( * sptr >> ( 4 - sbit ) ) & 0xf		4979903	0		=			
ANR	4979935	UnaryOperationExpression	* value		4979903	0					
ANR	4979936	UnaryOperator	*		4979903	0					
ANR	4979937	Identifier	value		4979903	1					
ANR	4979938	BitAndExpression	( * sptr >> ( 4 - sbit ) ) & 0xf		4979903	1		&			
ANR	4979939	ShiftExpression	* sptr >> ( 4 - sbit )		4979903	0		>>			
ANR	4979940	UnaryOperationExpression	* sptr		4979903	0					
ANR	4979941	UnaryOperator	*		4979903	0					
ANR	4979942	Identifier	sptr		4979903	1					
ANR	4979943	AdditiveExpression	4 - sbit		4979903	1		-			
ANR	4979944	PrimaryExpression	4		4979903	0					
ANR	4979945	Identifier	sbit		4979903	1					
ANR	4979946	PrimaryExpression	0xf		4979903	1					
ANR	4979947	BreakStatement	break ;	98:12:3032:3037	4979903	5	True				
ANR	4979948	Label	case 2 :	99:8:3047:3053	4979903	6	True				
ANR	4979949	ExpressionStatement	* value = * sptr	100:12:3067:3081	4979903	7	True				
ANR	4979950	AssignmentExpression	* value = * sptr		4979903	0		=			
ANR	4979951	UnaryOperationExpression	* value		4979903	0					
ANR	4979952	UnaryOperator	*		4979903	0					
ANR	4979953	Identifier	value		4979903	1					
ANR	4979954	UnaryOperationExpression	* sptr		4979903	1					
ANR	4979955	UnaryOperator	*		4979903	0					
ANR	4979956	Identifier	sptr		4979903	1					
ANR	4979957	BreakStatement	break ;	101:12:3095:3100	4979903	8	True				
ANR	4979958	Label	case 3 :	102:8:3110:3116	4979903	9	True				
ANR	4979959	ExpressionStatement	* value = ( sbit ? ( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ] : ( * sptr << 4 ) | ( sptr [ 1 ] >> 4 ) )	103:12:3130:3230	4979903	10	True				
ANR	4979960	AssignmentExpression	* value = ( sbit ? ( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ] : ( * sptr << 4 ) | ( sptr [ 1 ] >> 4 ) )		4979903	0		=			
ANR	4979961	UnaryOperationExpression	* value		4979903	0					
ANR	4979962	UnaryOperator	*		4979903	0					
ANR	4979963	Identifier	value		4979903	1					
ANR	4979964	ConditionalExpression	sbit ? ( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ] : ( * sptr << 4 ) | ( sptr [ 1 ] >> 4 )		4979903	1					
ANR	4979965	Condition	sbit		4979903	0					
ANR	4979966	Identifier	sbit		4979903	0					
ANR	4979967	InclusiveOrExpression	( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ]		4979903	1		|			
ANR	4979968	ShiftExpression	( * sptr & 0xf ) << 8		4979903	0		<<			
ANR	4979969	BitAndExpression	* sptr & 0xf		4979903	0		&			
ANR	4979970	UnaryOperationExpression	* sptr		4979903	0					
ANR	4979971	UnaryOperator	*		4979903	0					
ANR	4979972	Identifier	sptr		4979903	1					
ANR	4979973	PrimaryExpression	0xf		4979903	1					
ANR	4979974	PrimaryExpression	8		4979903	1					
ANR	4979975	ArrayIndexing	sptr [ 1 ]		4979903	1					
ANR	4979976	Identifier	sptr		4979903	0					
ANR	4979977	PrimaryExpression	1		4979903	1					
ANR	4979978	InclusiveOrExpression	( * sptr << 4 ) | ( sptr [ 1 ] >> 4 )		4979903	2		|			
ANR	4979979	ShiftExpression	* sptr << 4		4979903	0		<<			
ANR	4979980	UnaryOperationExpression	* sptr		4979903	0					
ANR	4979981	UnaryOperator	*		4979903	0					
ANR	4979982	Identifier	sptr		4979903	1					
ANR	4979983	PrimaryExpression	4		4979903	1					
ANR	4979984	ShiftExpression	sptr [ 1 ] >> 4		4979903	1		>>			
ANR	4979985	ArrayIndexing	sptr [ 1 ]		4979903	0					
ANR	4979986	Identifier	sptr		4979903	0					
ANR	4979987	PrimaryExpression	1		4979903	1					
ANR	4979988	PrimaryExpression	4		4979903	1					
ANR	4979989	BreakStatement	break ;	105:12:3244:3249	4979903	11	True				
ANR	4979990	Label	case 4 :	106:8:3259:3265	4979903	12	True				
ANR	4979991	ExpressionStatement	* value = ( * sptr << 8 ) | sptr [ 1 ]	107:12:3279:3310	4979903	13	True				
ANR	4979992	AssignmentExpression	* value = ( * sptr << 8 ) | sptr [ 1 ]		4979903	0		=			
ANR	4979993	UnaryOperationExpression	* value		4979903	0					
ANR	4979994	UnaryOperator	*		4979903	0					
ANR	4979995	Identifier	value		4979903	1					
ANR	4979996	InclusiveOrExpression	( * sptr << 8 ) | sptr [ 1 ]		4979903	1		|			
ANR	4979997	ShiftExpression	* sptr << 8		4979903	0		<<			
ANR	4979998	UnaryOperationExpression	* sptr		4979903	0					
ANR	4979999	UnaryOperator	*		4979903	0					
ANR	4980000	Identifier	sptr		4979903	1					
ANR	4980001	PrimaryExpression	8		4979903	1					
ANR	4980002	ArrayIndexing	sptr [ 1 ]		4979903	1					
ANR	4980003	Identifier	sptr		4979903	0					
ANR	4980004	PrimaryExpression	1		4979903	1					
ANR	4980005	BreakStatement	break ;	108:12:3324:3329	4979903	14	True				
ANR	4980006	Label	default :	109:8:3339:3346	4979903	15	True				
ANR	4980007	Identifier	default		4979903	0					
ANR	4980008	ReturnStatement	return - 1 ;	110:12:3360:3369	4979903	16	True				
ANR	4980009	UnaryOperationExpression	- 1		4979903	0					
ANR	4980010	UnaryOperator	-		4979903	0					
ANR	4980011	PrimaryExpression	1		4979903	1					
ANR	4980012	ReturnStatement	return 0 ;	112:4:3381:3389	4979903	1	True				
ANR	4980013	PrimaryExpression	0		4979903	0					
ANR	4980014	Identifier	sample_load16		4979903	1					
ANR	4980015	ParameterList	"uint * value , const byte * sptr , int sbit , int sbpv"		4979903	2					
ANR	4980016	Parameter	uint * value	90:32:2776:2786	4979903	0	True				
ANR	4980017	ParameterType	uint *		4979903	0					
ANR	4980018	Identifier	value		4979903	1					
ANR	4980019	Parameter	const byte * sptr	90:45:2789:2804	4979903	1	True				
ANR	4980020	ParameterType	const byte *		4979903	0					
ANR	4980021	Identifier	sptr		4979903	1					
ANR	4980022	Parameter	int sbit	90:63:2807:2814	4979903	2	True				
ANR	4980023	ParameterType	int		4979903	0					
ANR	4980024	Identifier	sbit		4979903	1					
ANR	4980025	Parameter	int sbpv	90:73:2817:2824	4979903	3	True				
ANR	4980026	ParameterType	int		4979903	0					
ANR	4980027	Identifier	sbpv		4979903	1					
ANR	4980028	CFGEntryNode	ENTRY		4979903		True				
ANR	4980029	CFGExitNode	EXIT		4979903		True				
ANR	4980030	Symbol	sbpv		4979903						
ANR	4980031	Symbol	* sptr		4979903						
ANR	4980032	Symbol	* value		4979903						
ANR	4980033	Symbol	value		4979903						
ANR	4980034	Symbol	sptr		4979903						
ANR	4980035	Symbol	sbit		4979903						
ANR	4980036	Function	sample_load_next16	114:18:3411:4129							
ANR	4980037	FunctionDef	"sample_load_next16 (ushort * value , const byte * * sptr , int * sbit , int sbpv)"		4980036	0					
ANR	4980038	CompoundStatement		115:0:3486:4129	4980036	0					
ANR	4980039	SwitchStatement	switch ( sbpv >> 2 )		4980036	0					
ANR	4980040	Condition	sbpv >> 2	116:13:3501:3509	4980036	0	True				
ANR	4980041	ShiftExpression	sbpv >> 2		4980036	0		>>			
ANR	4980042	Identifier	sbpv		4980036	0					
ANR	4980043	PrimaryExpression	2		4980036	1					
ANR	4980044	CompoundStatement		2:25:26:26	4980036	1					
ANR	4980045	Label	case 0 :	117:8:3523:3529	4980036	0	True				
ANR	4980046	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	118:12:3543:3595	4980036	1	True				
ANR	4980047	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4980036	0		=			
ANR	4980048	UnaryOperationExpression	* value		4980036	0					
ANR	4980049	UnaryOperator	*		4980036	0					
ANR	4980050	Identifier	value		4980036	1					
ANR	4980051	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4980036	1		&			
ANR	4980052	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		4980036	0		>>			
ANR	4980053	UnaryOperationExpression	* * sptr		4980036	0					
ANR	4980054	UnaryOperator	*		4980036	0					
ANR	4980055	UnaryOperationExpression	* sptr		4980036	1					
ANR	4980056	UnaryOperator	*		4980036	0					
ANR	4980057	Identifier	sptr		4980036	1					
ANR	4980058	AdditiveExpression	8 - * sbit - sbpv		4980036	1		-			
ANR	4980059	PrimaryExpression	8		4980036	0					
ANR	4980060	AdditiveExpression	* sbit - sbpv		4980036	1		-			
ANR	4980061	UnaryOperationExpression	* sbit		4980036	0					
ANR	4980062	UnaryOperator	*		4980036	0					
ANR	4980063	Identifier	sbit		4980036	1					
ANR	4980064	Identifier	sbpv		4980036	1					
ANR	4980065	InclusiveOrExpression	sbpv | 1		4980036	1		|			
ANR	4980066	Identifier	sbpv		4980036	0					
ANR	4980067	PrimaryExpression	1		4980036	1					
ANR	4980068	BreakStatement	break ;	119:12:3609:3614	4980036	2	True				
ANR	4980069	Label	case 1 :	120:8:3624:3630	4980036	3	True				
ANR	4980070	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	121:12:3644:3682	4980036	4	True				
ANR	4980071	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		4980036	0		=			
ANR	4980072	UnaryOperationExpression	* value		4980036	0					
ANR	4980073	UnaryOperator	*		4980036	0					
ANR	4980074	Identifier	value		4980036	1					
ANR	4980075	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		4980036	1		&			
ANR	4980076	ShiftExpression	* * sptr >> ( 4 - * sbit )		4980036	0		>>			
ANR	4980077	UnaryOperationExpression	* * sptr		4980036	0					
ANR	4980078	UnaryOperator	*		4980036	0					
ANR	4980079	UnaryOperationExpression	* sptr		4980036	1					
ANR	4980080	UnaryOperator	*		4980036	0					
ANR	4980081	Identifier	sptr		4980036	1					
ANR	4980082	AdditiveExpression	4 - * sbit		4980036	1		-			
ANR	4980083	PrimaryExpression	4		4980036	0					
ANR	4980084	UnaryOperationExpression	* sbit		4980036	1					
ANR	4980085	UnaryOperator	*		4980036	0					
ANR	4980086	Identifier	sbit		4980036	1					
ANR	4980087	PrimaryExpression	0xf		4980036	1					
ANR	4980088	BreakStatement	break ;	122:12:3696:3701	4980036	5	True				
ANR	4980089	Label	case 2 :	123:8:3711:3717	4980036	6	True				
ANR	4980090	ExpressionStatement	* value = * * sptr	124:12:3731:3746	4980036	7	True				
ANR	4980091	AssignmentExpression	* value = * * sptr		4980036	0		=			
ANR	4980092	UnaryOperationExpression	* value		4980036	0					
ANR	4980093	UnaryOperator	*		4980036	0					
ANR	4980094	Identifier	value		4980036	1					
ANR	4980095	UnaryOperationExpression	* * sptr		4980036	1					
ANR	4980096	UnaryOperator	*		4980036	0					
ANR	4980097	UnaryOperationExpression	* sptr		4980036	1					
ANR	4980098	UnaryOperator	*		4980036	0					
ANR	4980099	Identifier	sptr		4980036	1					
ANR	4980100	BreakStatement	break ;	125:12:3760:3765	4980036	8	True				
ANR	4980101	Label	case 3 :	126:8:3775:3781	4980036	9	True				
ANR	4980102	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	127:12:3795:3904	4980036	10	True				
ANR	4980103	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		4980036	0		=			
ANR	4980104	UnaryOperationExpression	* value		4980036	0					
ANR	4980105	UnaryOperator	*		4980036	0					
ANR	4980106	Identifier	value		4980036	1					
ANR	4980107	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4980036	1					
ANR	4980108	Condition	* sbit		4980036	0					
ANR	4980109	UnaryOperationExpression	* sbit		4980036	0					
ANR	4980110	UnaryOperator	*		4980036	0					
ANR	4980111	Identifier	sbit		4980036	1					
ANR	4980112	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		4980036	1		|			
ANR	4980113	ShiftExpression	( * * sptr & 0xf ) << 8		4980036	0		<<			
ANR	4980114	BitAndExpression	* * sptr & 0xf		4980036	0		&			
ANR	4980115	UnaryOperationExpression	* * sptr		4980036	0					
ANR	4980116	UnaryOperator	*		4980036	0					
ANR	4980117	UnaryOperationExpression	* sptr		4980036	1					
ANR	4980118	UnaryOperator	*		4980036	0					
ANR	4980119	Identifier	sptr		4980036	1					
ANR	4980120	PrimaryExpression	0xf		4980036	1					
ANR	4980121	PrimaryExpression	8		4980036	1					
ANR	4980122	ArrayIndexing	( * sptr ) [ 1 ]		4980036	1					
ANR	4980123	UnaryOperationExpression	* sptr		4980036	0					
ANR	4980124	UnaryOperator	*		4980036	0					
ANR	4980125	Identifier	sptr		4980036	1					
ANR	4980126	PrimaryExpression	1		4980036	1					
ANR	4980127	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4980036	2		|			
ANR	4980128	ShiftExpression	* * sptr << 4		4980036	0		<<			
ANR	4980129	UnaryOperationExpression	* * sptr		4980036	0					
ANR	4980130	UnaryOperator	*		4980036	0					
ANR	4980131	UnaryOperationExpression	* sptr		4980036	1					
ANR	4980132	UnaryOperator	*		4980036	0					
ANR	4980133	Identifier	sptr		4980036	1					
ANR	4980134	PrimaryExpression	4		4980036	1					
ANR	4980135	ShiftExpression	( * sptr ) [ 1 ] >> 4		4980036	1		>>			
ANR	4980136	ArrayIndexing	( * sptr ) [ 1 ]		4980036	0					
ANR	4980137	UnaryOperationExpression	* sptr		4980036	0					
ANR	4980138	UnaryOperator	*		4980036	0					
ANR	4980139	Identifier	sptr		4980036	1					
ANR	4980140	PrimaryExpression	1		4980036	1					
ANR	4980141	PrimaryExpression	4		4980036	1					
ANR	4980142	BreakStatement	break ;	129:12:3918:3923	4980036	11	True				
ANR	4980143	Label	case 4 :	130:8:3933:3939	4980036	12	True				
ANR	4980144	ExpressionStatement	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]	131:12:3953:3988	4980036	13	True				
ANR	4980145	AssignmentExpression	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]		4980036	0		=			
ANR	4980146	UnaryOperationExpression	* value		4980036	0					
ANR	4980147	UnaryOperator	*		4980036	0					
ANR	4980148	Identifier	value		4980036	1					
ANR	4980149	InclusiveOrExpression	( * * sptr << 8 ) | ( * sptr ) [ 1 ]		4980036	1		|			
ANR	4980150	ShiftExpression	* * sptr << 8		4980036	0		<<			
ANR	4980151	UnaryOperationExpression	* * sptr		4980036	0					
ANR	4980152	UnaryOperator	*		4980036	0					
ANR	4980153	UnaryOperationExpression	* sptr		4980036	1					
ANR	4980154	UnaryOperator	*		4980036	0					
ANR	4980155	Identifier	sptr		4980036	1					
ANR	4980156	PrimaryExpression	8		4980036	1					
ANR	4980157	ArrayIndexing	( * sptr ) [ 1 ]		4980036	1					
ANR	4980158	UnaryOperationExpression	* sptr		4980036	0					
ANR	4980159	UnaryOperator	*		4980036	0					
ANR	4980160	Identifier	sptr		4980036	1					
ANR	4980161	PrimaryExpression	1		4980036	1					
ANR	4980162	BreakStatement	break ;	132:12:4002:4007	4980036	14	True				
ANR	4980163	Label	default :	133:8:4017:4024	4980036	15	True				
ANR	4980164	Identifier	default		4980036	0					
ANR	4980165	ReturnStatement	return - 1 ;	134:12:4038:4047	4980036	16	True				
ANR	4980166	UnaryOperationExpression	- 1		4980036	0					
ANR	4980167	UnaryOperator	-		4980036	0					
ANR	4980168	PrimaryExpression	1		4980036	1					
ANR	4980169	ExpressionStatement	* sbit += sbpv	136:4:4059:4072	4980036	1	True				
ANR	4980170	AssignmentExpression	* sbit += sbpv		4980036	0		+=			
ANR	4980171	UnaryOperationExpression	* sbit		4980036	0					
ANR	4980172	UnaryOperator	*		4980036	0					
ANR	4980173	Identifier	sbit		4980036	1					
ANR	4980174	Identifier	sbpv		4980036	1					
ANR	4980175	ExpressionStatement	* sptr += * sbit >> 3	137:4:4078:4097	4980036	2	True				
ANR	4980176	AssignmentExpression	* sptr += * sbit >> 3		4980036	0		+=			
ANR	4980177	UnaryOperationExpression	* sptr		4980036	0					
ANR	4980178	UnaryOperator	*		4980036	0					
ANR	4980179	Identifier	sptr		4980036	1					
ANR	4980180	ShiftExpression	* sbit >> 3		4980036	1		>>			
ANR	4980181	UnaryOperationExpression	* sbit		4980036	0					
ANR	4980182	UnaryOperator	*		4980036	0					
ANR	4980183	Identifier	sbit		4980036	1					
ANR	4980184	PrimaryExpression	3		4980036	1					
ANR	4980185	ExpressionStatement	* sbit &= 7	138:4:4103:4113	4980036	3	True				
ANR	4980186	AssignmentExpression	* sbit &= 7		4980036	0		&=			
ANR	4980187	UnaryOperationExpression	* sbit		4980036	0					
ANR	4980188	UnaryOperator	*		4980036	0					
ANR	4980189	Identifier	sbit		4980036	1					
ANR	4980190	PrimaryExpression	7		4980036	1					
ANR	4980191	ReturnStatement	return 0 ;	139:4:4119:4127	4980036	4	True				
ANR	4980192	PrimaryExpression	0		4980036	0					
ANR	4980193	Identifier	sample_load_next16		4980036	1					
ANR	4980194	ParameterList	"ushort * value , const byte * * sptr , int * sbit , int sbpv"		4980036	2					
ANR	4980195	Parameter	ushort * value	114:38:3431:3443	4980036	0	True				
ANR	4980196	ParameterType	ushort *		4980036	0					
ANR	4980197	Identifier	value		4980036	1					
ANR	4980198	Parameter	const byte * * sptr	114:53:3446:3462	4980036	1	True				
ANR	4980199	ParameterType	const byte * *		4980036	0					
ANR	4980200	Identifier	sptr		4980036	1					
ANR	4980201	Parameter	int * sbit	114:72:3465:3473	4980036	2	True				
ANR	4980202	ParameterType	int *		4980036	0					
ANR	4980203	Identifier	sbit		4980036	1					
ANR	4980204	Parameter	int sbpv	114:83:3476:3483	4980036	3	True				
ANR	4980205	ParameterType	int		4980036	0					
ANR	4980206	Identifier	sbpv		4980036	1					
ANR	4980207	CFGEntryNode	ENTRY		4980036		True				
ANR	4980208	CFGExitNode	EXIT		4980036		True				
ANR	4980209	Symbol	sbpv		4980036						
ANR	4980210	Symbol	* sbit		4980036						
ANR	4980211	Symbol	* sptr		4980036						
ANR	4980212	Symbol	* value		4980036						
ANR	4980213	Symbol	* * sptr		4980036						
ANR	4980214	Symbol	value		4980036						
ANR	4980215	Symbol	sptr		4980036						
ANR	4980216	Symbol	sbit		4980036						
ANR	4980217	Function	sample_load_next32	141:18:4149:5102							
ANR	4980218	FunctionDef	"sample_load_next32 (uint32_t * value , const byte * * sptr , int * sbit , int sbpv)"		4980217	0					
ANR	4980219	CompoundStatement		142:0:4225:5102	4980217	0					
ANR	4980220	SwitchStatement	switch ( sbpv >> 2 )		4980217	0					
ANR	4980221	Condition	sbpv >> 2	143:13:4240:4248	4980217	0	True				
ANR	4980222	ShiftExpression	sbpv >> 2		4980217	0		>>			
ANR	4980223	Identifier	sbpv		4980217	0					
ANR	4980224	PrimaryExpression	2		4980217	1					
ANR	4980225	CompoundStatement		2:25:26:26	4980217	1					
ANR	4980226	Label	case 0 :	144:8:4262:4268	4980217	0	True				
ANR	4980227	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	145:12:4282:4334	4980217	1	True				
ANR	4980228	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4980217	0		=			
ANR	4980229	UnaryOperationExpression	* value		4980217	0					
ANR	4980230	UnaryOperator	*		4980217	0					
ANR	4980231	Identifier	value		4980217	1					
ANR	4980232	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4980217	1		&			
ANR	4980233	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		4980217	0		>>			
ANR	4980234	UnaryOperationExpression	* * sptr		4980217	0					
ANR	4980235	UnaryOperator	*		4980217	0					
ANR	4980236	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980237	UnaryOperator	*		4980217	0					
ANR	4980238	Identifier	sptr		4980217	1					
ANR	4980239	AdditiveExpression	8 - * sbit - sbpv		4980217	1		-			
ANR	4980240	PrimaryExpression	8		4980217	0					
ANR	4980241	AdditiveExpression	* sbit - sbpv		4980217	1		-			
ANR	4980242	UnaryOperationExpression	* sbit		4980217	0					
ANR	4980243	UnaryOperator	*		4980217	0					
ANR	4980244	Identifier	sbit		4980217	1					
ANR	4980245	Identifier	sbpv		4980217	1					
ANR	4980246	InclusiveOrExpression	sbpv | 1		4980217	1		|			
ANR	4980247	Identifier	sbpv		4980217	0					
ANR	4980248	PrimaryExpression	1		4980217	1					
ANR	4980249	BreakStatement	break ;	146:12:4348:4353	4980217	2	True				
ANR	4980250	Label	case 1 :	147:8:4363:4369	4980217	3	True				
ANR	4980251	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	148:12:4383:4421	4980217	4	True				
ANR	4980252	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		4980217	0		=			
ANR	4980253	UnaryOperationExpression	* value		4980217	0					
ANR	4980254	UnaryOperator	*		4980217	0					
ANR	4980255	Identifier	value		4980217	1					
ANR	4980256	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		4980217	1		&			
ANR	4980257	ShiftExpression	* * sptr >> ( 4 - * sbit )		4980217	0		>>			
ANR	4980258	UnaryOperationExpression	* * sptr		4980217	0					
ANR	4980259	UnaryOperator	*		4980217	0					
ANR	4980260	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980261	UnaryOperator	*		4980217	0					
ANR	4980262	Identifier	sptr		4980217	1					
ANR	4980263	AdditiveExpression	4 - * sbit		4980217	1		-			
ANR	4980264	PrimaryExpression	4		4980217	0					
ANR	4980265	UnaryOperationExpression	* sbit		4980217	1					
ANR	4980266	UnaryOperator	*		4980217	0					
ANR	4980267	Identifier	sbit		4980217	1					
ANR	4980268	PrimaryExpression	0xf		4980217	1					
ANR	4980269	BreakStatement	break ;	149:12:4435:4440	4980217	5	True				
ANR	4980270	Label	case 2 :	150:8:4450:4456	4980217	6	True				
ANR	4980271	ExpressionStatement	* value = * * sptr	151:12:4470:4485	4980217	7	True				
ANR	4980272	AssignmentExpression	* value = * * sptr		4980217	0		=			
ANR	4980273	UnaryOperationExpression	* value		4980217	0					
ANR	4980274	UnaryOperator	*		4980217	0					
ANR	4980275	Identifier	value		4980217	1					
ANR	4980276	UnaryOperationExpression	* * sptr		4980217	1					
ANR	4980277	UnaryOperator	*		4980217	0					
ANR	4980278	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980279	UnaryOperator	*		4980217	0					
ANR	4980280	Identifier	sptr		4980217	1					
ANR	4980281	BreakStatement	break ;	152:12:4499:4504	4980217	8	True				
ANR	4980282	Label	case 3 :	153:8:4514:4520	4980217	9	True				
ANR	4980283	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	154:12:4534:4645	4980217	10	True				
ANR	4980284	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		4980217	0		=			
ANR	4980285	UnaryOperationExpression	* value		4980217	0					
ANR	4980286	UnaryOperator	*		4980217	0					
ANR	4980287	Identifier	value		4980217	1					
ANR	4980288	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4980217	1					
ANR	4980289	Condition	* sbit		4980217	0					
ANR	4980290	UnaryOperationExpression	* sbit		4980217	0					
ANR	4980291	UnaryOperator	*		4980217	0					
ANR	4980292	Identifier	sbit		4980217	1					
ANR	4980293	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		4980217	1		|			
ANR	4980294	ShiftExpression	( * * sptr & 0xf ) << 8		4980217	0		<<			
ANR	4980295	BitAndExpression	* * sptr & 0xf		4980217	0		&			
ANR	4980296	UnaryOperationExpression	* * sptr		4980217	0					
ANR	4980297	UnaryOperator	*		4980217	0					
ANR	4980298	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980299	UnaryOperator	*		4980217	0					
ANR	4980300	Identifier	sptr		4980217	1					
ANR	4980301	PrimaryExpression	0xf		4980217	1					
ANR	4980302	PrimaryExpression	8		4980217	1					
ANR	4980303	ArrayIndexing	( * sptr ) [ 1 ]		4980217	1					
ANR	4980304	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980305	UnaryOperator	*		4980217	0					
ANR	4980306	Identifier	sptr		4980217	1					
ANR	4980307	PrimaryExpression	1		4980217	1					
ANR	4980308	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4980217	2		|			
ANR	4980309	ShiftExpression	* * sptr << 4		4980217	0		<<			
ANR	4980310	UnaryOperationExpression	* * sptr		4980217	0					
ANR	4980311	UnaryOperator	*		4980217	0					
ANR	4980312	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980313	UnaryOperator	*		4980217	0					
ANR	4980314	Identifier	sptr		4980217	1					
ANR	4980315	PrimaryExpression	4		4980217	1					
ANR	4980316	ShiftExpression	( * sptr ) [ 1 ] >> 4		4980217	1		>>			
ANR	4980317	ArrayIndexing	( * sptr ) [ 1 ]		4980217	0					
ANR	4980318	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980319	UnaryOperator	*		4980217	0					
ANR	4980320	Identifier	sptr		4980217	1					
ANR	4980321	PrimaryExpression	1		4980217	1					
ANR	4980322	PrimaryExpression	4		4980217	1					
ANR	4980323	BreakStatement	break ;	156:12:4659:4664	4980217	11	True				
ANR	4980324	Label	case 4 :	157:8:4674:4680	4980217	12	True				
ANR	4980325	ExpressionStatement	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]	158:12:4694:4729	4980217	13	True				
ANR	4980326	AssignmentExpression	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]		4980217	0		=			
ANR	4980327	UnaryOperationExpression	* value		4980217	0					
ANR	4980328	UnaryOperator	*		4980217	0					
ANR	4980329	Identifier	value		4980217	1					
ANR	4980330	InclusiveOrExpression	( * * sptr << 8 ) | ( * sptr ) [ 1 ]		4980217	1		|			
ANR	4980331	ShiftExpression	* * sptr << 8		4980217	0		<<			
ANR	4980332	UnaryOperationExpression	* * sptr		4980217	0					
ANR	4980333	UnaryOperator	*		4980217	0					
ANR	4980334	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980335	UnaryOperator	*		4980217	0					
ANR	4980336	Identifier	sptr		4980217	1					
ANR	4980337	PrimaryExpression	8		4980217	1					
ANR	4980338	ArrayIndexing	( * sptr ) [ 1 ]		4980217	1					
ANR	4980339	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980340	UnaryOperator	*		4980217	0					
ANR	4980341	Identifier	sptr		4980217	1					
ANR	4980342	PrimaryExpression	1		4980217	1					
ANR	4980343	BreakStatement	break ;	159:12:4743:4748	4980217	14	True				
ANR	4980344	Label	case 6 :	160:8:4758:4764	4980217	15	True				
ANR	4980345	ExpressionStatement	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]	161:12:4778:4834	4980217	16	True				
ANR	4980346	AssignmentExpression	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		4980217	0		=			
ANR	4980347	UnaryOperationExpression	* value		4980217	0					
ANR	4980348	UnaryOperator	*		4980217	0					
ANR	4980349	Identifier	value		4980217	1					
ANR	4980350	InclusiveOrExpression	( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		4980217	1		|			
ANR	4980351	ShiftExpression	* * sptr << 16		4980217	0		<<			
ANR	4980352	UnaryOperationExpression	* * sptr		4980217	0					
ANR	4980353	UnaryOperator	*		4980217	0					
ANR	4980354	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980355	UnaryOperator	*		4980217	0					
ANR	4980356	Identifier	sptr		4980217	1					
ANR	4980357	PrimaryExpression	16		4980217	1					
ANR	4980358	InclusiveOrExpression	( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		4980217	1		|			
ANR	4980359	ShiftExpression	( * sptr ) [ 1 ] << 8		4980217	0		<<			
ANR	4980360	ArrayIndexing	( * sptr ) [ 1 ]		4980217	0					
ANR	4980361	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980362	UnaryOperator	*		4980217	0					
ANR	4980363	Identifier	sptr		4980217	1					
ANR	4980364	PrimaryExpression	1		4980217	1					
ANR	4980365	PrimaryExpression	8		4980217	1					
ANR	4980366	ArrayIndexing	( * sptr ) [ 2 ]		4980217	1					
ANR	4980367	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980368	UnaryOperator	*		4980217	0					
ANR	4980369	Identifier	sptr		4980217	1					
ANR	4980370	PrimaryExpression	2		4980217	1					
ANR	4980371	BreakStatement	break ;	162:12:4848:4853	4980217	17	True				
ANR	4980372	Label	case 8 :	163:8:4863:4869	4980217	18	True				
ANR	4980373	ExpressionStatement	* value = ( * * sptr << 24 ) | ( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]	164:12:4883:4960	4980217	19	True				
ANR	4980374	AssignmentExpression	* value = ( * * sptr << 24 ) | ( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		4980217	0		=			
ANR	4980375	UnaryOperationExpression	* value		4980217	0					
ANR	4980376	UnaryOperator	*		4980217	0					
ANR	4980377	Identifier	value		4980217	1					
ANR	4980378	InclusiveOrExpression	( * * sptr << 24 ) | ( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		4980217	1		|			
ANR	4980379	ShiftExpression	* * sptr << 24		4980217	0		<<			
ANR	4980380	UnaryOperationExpression	* * sptr		4980217	0					
ANR	4980381	UnaryOperator	*		4980217	0					
ANR	4980382	UnaryOperationExpression	* sptr		4980217	1					
ANR	4980383	UnaryOperator	*		4980217	0					
ANR	4980384	Identifier	sptr		4980217	1					
ANR	4980385	PrimaryExpression	24		4980217	1					
ANR	4980386	InclusiveOrExpression	( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		4980217	1		|			
ANR	4980387	ShiftExpression	( * sptr ) [ 1 ] << 16		4980217	0		<<			
ANR	4980388	ArrayIndexing	( * sptr ) [ 1 ]		4980217	0					
ANR	4980389	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980390	UnaryOperator	*		4980217	0					
ANR	4980391	Identifier	sptr		4980217	1					
ANR	4980392	PrimaryExpression	1		4980217	1					
ANR	4980393	PrimaryExpression	16		4980217	1					
ANR	4980394	InclusiveOrExpression	( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		4980217	1		|			
ANR	4980395	ShiftExpression	( * sptr ) [ 2 ] << 8		4980217	0		<<			
ANR	4980396	ArrayIndexing	( * sptr ) [ 2 ]		4980217	0					
ANR	4980397	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980398	UnaryOperator	*		4980217	0					
ANR	4980399	Identifier	sptr		4980217	1					
ANR	4980400	PrimaryExpression	2		4980217	1					
ANR	4980401	PrimaryExpression	8		4980217	1					
ANR	4980402	ArrayIndexing	( * sptr ) [ 3 ]		4980217	1					
ANR	4980403	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980404	UnaryOperator	*		4980217	0					
ANR	4980405	Identifier	sptr		4980217	1					
ANR	4980406	PrimaryExpression	3		4980217	1					
ANR	4980407	BreakStatement	break ;	165:12:4974:4979	4980217	20	True				
ANR	4980408	Label	default :	166:8:4989:4996	4980217	21	True				
ANR	4980409	Identifier	default		4980217	0					
ANR	4980410	ReturnStatement	return - 1 ;	167:12:5010:5019	4980217	22	True				
ANR	4980411	UnaryOperationExpression	- 1		4980217	0					
ANR	4980412	UnaryOperator	-		4980217	0					
ANR	4980413	PrimaryExpression	1		4980217	1					
ANR	4980414	ExpressionStatement	* sbit += sbpv	169:4:5031:5044	4980217	1	True				
ANR	4980415	AssignmentExpression	* sbit += sbpv		4980217	0		+=			
ANR	4980416	UnaryOperationExpression	* sbit		4980217	0					
ANR	4980417	UnaryOperator	*		4980217	0					
ANR	4980418	Identifier	sbit		4980217	1					
ANR	4980419	Identifier	sbpv		4980217	1					
ANR	4980420	ExpressionStatement	* sptr += * sbit >> 3	170:4:5050:5069	4980217	2	True				
ANR	4980421	AssignmentExpression	* sptr += * sbit >> 3		4980217	0		+=			
ANR	4980422	UnaryOperationExpression	* sptr		4980217	0					
ANR	4980423	UnaryOperator	*		4980217	0					
ANR	4980424	Identifier	sptr		4980217	1					
ANR	4980425	ShiftExpression	* sbit >> 3		4980217	1		>>			
ANR	4980426	UnaryOperationExpression	* sbit		4980217	0					
ANR	4980427	UnaryOperator	*		4980217	0					
ANR	4980428	Identifier	sbit		4980217	1					
ANR	4980429	PrimaryExpression	3		4980217	1					
ANR	4980430	ExpressionStatement	* sbit &= 7	171:4:5075:5085	4980217	3	True				
ANR	4980431	AssignmentExpression	* sbit &= 7		4980217	0		&=			
ANR	4980432	UnaryOperationExpression	* sbit		4980217	0					
ANR	4980433	UnaryOperator	*		4980217	0					
ANR	4980434	Identifier	sbit		4980217	1					
ANR	4980435	PrimaryExpression	7		4980217	1					
ANR	4980436	ReturnStatement	return - 1 ;	172:4:5091:5100	4980217	4	True				
ANR	4980437	UnaryOperationExpression	- 1		4980217	0					
ANR	4980438	UnaryOperator	-		4980217	0					
ANR	4980439	PrimaryExpression	1		4980217	1					
ANR	4980440	Identifier	sample_load_next32		4980217	1					
ANR	4980441	ParameterList	"uint32_t * value , const byte * * sptr , int * sbit , int sbpv"		4980217	2					
ANR	4980442	Parameter	uint32_t * value	141:37:4168:4182	4980217	0	True				
ANR	4980443	ParameterType	uint32_t *		4980217	0					
ANR	4980444	Identifier	value		4980217	1					
ANR	4980445	Parameter	const byte * * sptr	141:54:4185:4201	4980217	1	True				
ANR	4980446	ParameterType	const byte * *		4980217	0					
ANR	4980447	Identifier	sptr		4980217	1					
ANR	4980448	Parameter	int * sbit	141:73:4204:4212	4980217	2	True				
ANR	4980449	ParameterType	int *		4980217	0					
ANR	4980450	Identifier	sbit		4980217	1					
ANR	4980451	Parameter	int sbpv	141:84:4215:4222	4980217	3	True				
ANR	4980452	ParameterType	int		4980217	0					
ANR	4980453	Identifier	sbpv		4980217	1					
ANR	4980454	CFGEntryNode	ENTRY		4980217		True				
ANR	4980455	CFGExitNode	EXIT		4980217		True				
ANR	4980456	Symbol	sbpv		4980217						
ANR	4980457	Symbol	* sbit		4980217						
ANR	4980458	Symbol	* sptr		4980217						
ANR	4980459	Symbol	* value		4980217						
ANR	4980460	Symbol	* * sptr		4980217						
ANR	4980461	Symbol	value		4980217						
ANR	4980462	Symbol	sptr		4980217						
ANR	4980463	Symbol	sbit		4980217						
ANR	4980464	Function	sample_load_next64	174:18:5122:7908							
ANR	4980465	FunctionDef	"sample_load_next64 (uint64_t * value , const byte * * sptr , int * sbit , int sbpv)"		4980464	0					
ANR	4980466	CompoundStatement		175:0:5198:7908	4980464	0					
ANR	4980467	SwitchStatement	switch ( sbpv >> 2 )		4980464	0					
ANR	4980468	Condition	sbpv >> 2	176:13:5213:5221	4980464	0	True				
ANR	4980469	ShiftExpression	sbpv >> 2		4980464	0		>>			
ANR	4980470	Identifier	sbpv		4980464	0					
ANR	4980471	PrimaryExpression	2		4980464	1					
ANR	4980472	CompoundStatement		2:25:26:26	4980464	1					
ANR	4980473	Label	case 0 :	177:8:5235:5241	4980464	0	True				
ANR	4980474	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	178:12:5255:5307	4980464	1	True				
ANR	4980475	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4980464	0		=			
ANR	4980476	UnaryOperationExpression	* value		4980464	0					
ANR	4980477	UnaryOperator	*		4980464	0					
ANR	4980478	Identifier	value		4980464	1					
ANR	4980479	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		4980464	1		&			
ANR	4980480	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		4980464	0		>>			
ANR	4980481	UnaryOperationExpression	* * sptr		4980464	0					
ANR	4980482	UnaryOperator	*		4980464	0					
ANR	4980483	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980484	UnaryOperator	*		4980464	0					
ANR	4980485	Identifier	sptr		4980464	1					
ANR	4980486	AdditiveExpression	8 - * sbit - sbpv		4980464	1		-			
ANR	4980487	PrimaryExpression	8		4980464	0					
ANR	4980488	AdditiveExpression	* sbit - sbpv		4980464	1		-			
ANR	4980489	UnaryOperationExpression	* sbit		4980464	0					
ANR	4980490	UnaryOperator	*		4980464	0					
ANR	4980491	Identifier	sbit		4980464	1					
ANR	4980492	Identifier	sbpv		4980464	1					
ANR	4980493	InclusiveOrExpression	sbpv | 1		4980464	1		|			
ANR	4980494	Identifier	sbpv		4980464	0					
ANR	4980495	PrimaryExpression	1		4980464	1					
ANR	4980496	BreakStatement	break ;	179:12:5321:5326	4980464	2	True				
ANR	4980497	Label	case 1 :	180:8:5336:5342	4980464	3	True				
ANR	4980498	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	181:12:5356:5394	4980464	4	True				
ANR	4980499	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		4980464	0		=			
ANR	4980500	UnaryOperationExpression	* value		4980464	0					
ANR	4980501	UnaryOperator	*		4980464	0					
ANR	4980502	Identifier	value		4980464	1					
ANR	4980503	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		4980464	1		&			
ANR	4980504	ShiftExpression	* * sptr >> ( 4 - * sbit )		4980464	0		>>			
ANR	4980505	UnaryOperationExpression	* * sptr		4980464	0					
ANR	4980506	UnaryOperator	*		4980464	0					
ANR	4980507	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980508	UnaryOperator	*		4980464	0					
ANR	4980509	Identifier	sptr		4980464	1					
ANR	4980510	AdditiveExpression	4 - * sbit		4980464	1		-			
ANR	4980511	PrimaryExpression	4		4980464	0					
ANR	4980512	UnaryOperationExpression	* sbit		4980464	1					
ANR	4980513	UnaryOperator	*		4980464	0					
ANR	4980514	Identifier	sbit		4980464	1					
ANR	4980515	PrimaryExpression	0xf		4980464	1					
ANR	4980516	BreakStatement	break ;	182:12:5408:5413	4980464	5	True				
ANR	4980517	Label	case 2 :	183:8:5423:5429	4980464	6	True				
ANR	4980518	ExpressionStatement	* value = * * sptr	184:12:5443:5458	4980464	7	True				
ANR	4980519	AssignmentExpression	* value = * * sptr		4980464	0		=			
ANR	4980520	UnaryOperationExpression	* value		4980464	0					
ANR	4980521	UnaryOperator	*		4980464	0					
ANR	4980522	Identifier	value		4980464	1					
ANR	4980523	UnaryOperationExpression	* * sptr		4980464	1					
ANR	4980524	UnaryOperator	*		4980464	0					
ANR	4980525	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980526	UnaryOperator	*		4980464	0					
ANR	4980527	Identifier	sptr		4980464	1					
ANR	4980528	BreakStatement	break ;	185:12:5472:5477	4980464	8	True				
ANR	4980529	Label	case 3 :	186:8:5487:5493	4980464	9	True				
ANR	4980530	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	187:12:5507:5618	4980464	10	True				
ANR	4980531	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		4980464	0		=			
ANR	4980532	UnaryOperationExpression	* value		4980464	0					
ANR	4980533	UnaryOperator	*		4980464	0					
ANR	4980534	Identifier	value		4980464	1					
ANR	4980535	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4980464	1					
ANR	4980536	Condition	* sbit		4980464	0					
ANR	4980537	UnaryOperationExpression	* sbit		4980464	0					
ANR	4980538	UnaryOperator	*		4980464	0					
ANR	4980539	Identifier	sbit		4980464	1					
ANR	4980540	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		4980464	1		|			
ANR	4980541	ShiftExpression	( * * sptr & 0xf ) << 8		4980464	0		<<			
ANR	4980542	BitAndExpression	* * sptr & 0xf		4980464	0		&			
ANR	4980543	UnaryOperationExpression	* * sptr		4980464	0					
ANR	4980544	UnaryOperator	*		4980464	0					
ANR	4980545	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980546	UnaryOperator	*		4980464	0					
ANR	4980547	Identifier	sptr		4980464	1					
ANR	4980548	PrimaryExpression	0xf		4980464	1					
ANR	4980549	PrimaryExpression	8		4980464	1					
ANR	4980550	ArrayIndexing	( * sptr ) [ 1 ]		4980464	1					
ANR	4980551	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980552	UnaryOperator	*		4980464	0					
ANR	4980553	Identifier	sptr		4980464	1					
ANR	4980554	PrimaryExpression	1		4980464	1					
ANR	4980555	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		4980464	2		|			
ANR	4980556	ShiftExpression	* * sptr << 4		4980464	0		<<			
ANR	4980557	UnaryOperationExpression	* * sptr		4980464	0					
ANR	4980558	UnaryOperator	*		4980464	0					
ANR	4980559	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980560	UnaryOperator	*		4980464	0					
ANR	4980561	Identifier	sptr		4980464	1					
ANR	4980562	PrimaryExpression	4		4980464	1					
ANR	4980563	ShiftExpression	( * sptr ) [ 1 ] >> 4		4980464	1		>>			
ANR	4980564	ArrayIndexing	( * sptr ) [ 1 ]		4980464	0					
ANR	4980565	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980566	UnaryOperator	*		4980464	0					
ANR	4980567	Identifier	sptr		4980464	1					
ANR	4980568	PrimaryExpression	1		4980464	1					
ANR	4980569	PrimaryExpression	4		4980464	1					
ANR	4980570	BreakStatement	break ;	189:12:5632:5637	4980464	11	True				
ANR	4980571	Label	case 4 :	190:8:5647:5653	4980464	12	True				
ANR	4980572	ExpressionStatement	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]	191:12:5667:5702	4980464	13	True				
ANR	4980573	AssignmentExpression	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]		4980464	0		=			
ANR	4980574	UnaryOperationExpression	* value		4980464	0					
ANR	4980575	UnaryOperator	*		4980464	0					
ANR	4980576	Identifier	value		4980464	1					
ANR	4980577	InclusiveOrExpression	( * * sptr << 8 ) | ( * sptr ) [ 1 ]		4980464	1		|			
ANR	4980578	ShiftExpression	* * sptr << 8		4980464	0		<<			
ANR	4980579	UnaryOperationExpression	* * sptr		4980464	0					
ANR	4980580	UnaryOperator	*		4980464	0					
ANR	4980581	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980582	UnaryOperator	*		4980464	0					
ANR	4980583	Identifier	sptr		4980464	1					
ANR	4980584	PrimaryExpression	8		4980464	1					
ANR	4980585	ArrayIndexing	( * sptr ) [ 1 ]		4980464	1					
ANR	4980586	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980587	UnaryOperator	*		4980464	0					
ANR	4980588	Identifier	sptr		4980464	1					
ANR	4980589	PrimaryExpression	1		4980464	1					
ANR	4980590	BreakStatement	break ;	192:12:5716:5721	4980464	14	True				
ANR	4980591	Label	case 6 :	193:8:5731:5737	4980464	15	True				
ANR	4980592	ExpressionStatement	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]	194:12:5751:5807	4980464	16	True				
ANR	4980593	AssignmentExpression	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		4980464	0		=			
ANR	4980594	UnaryOperationExpression	* value		4980464	0					
ANR	4980595	UnaryOperator	*		4980464	0					
ANR	4980596	Identifier	value		4980464	1					
ANR	4980597	InclusiveOrExpression	( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		4980464	1		|			
ANR	4980598	ShiftExpression	* * sptr << 16		4980464	0		<<			
ANR	4980599	UnaryOperationExpression	* * sptr		4980464	0					
ANR	4980600	UnaryOperator	*		4980464	0					
ANR	4980601	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980602	UnaryOperator	*		4980464	0					
ANR	4980603	Identifier	sptr		4980464	1					
ANR	4980604	PrimaryExpression	16		4980464	1					
ANR	4980605	InclusiveOrExpression	( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		4980464	1		|			
ANR	4980606	ShiftExpression	( * sptr ) [ 1 ] << 8		4980464	0		<<			
ANR	4980607	ArrayIndexing	( * sptr ) [ 1 ]		4980464	0					
ANR	4980608	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980609	UnaryOperator	*		4980464	0					
ANR	4980610	Identifier	sptr		4980464	1					
ANR	4980611	PrimaryExpression	1		4980464	1					
ANR	4980612	PrimaryExpression	8		4980464	1					
ANR	4980613	ArrayIndexing	( * sptr ) [ 2 ]		4980464	1					
ANR	4980614	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980615	UnaryOperator	*		4980464	0					
ANR	4980616	Identifier	sptr		4980464	1					
ANR	4980617	PrimaryExpression	2		4980464	1					
ANR	4980618	BreakStatement	break ;	195:12:5821:5826	4980464	17	True				
ANR	4980619	Label	case 8 :	196:8:5836:5842	4980464	18	True				
ANR	4980620	ExpressionStatement	* value = ( ( uint64_t ) ( * * sptr ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )	197:12:5856:5981	4980464	19	True				
ANR	4980621	AssignmentExpression	* value = ( ( uint64_t ) ( * * sptr ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	0		=			
ANR	4980622	UnaryOperationExpression	* value		4980464	0					
ANR	4980623	UnaryOperator	*		4980464	0					
ANR	4980624	Identifier	value		4980464	1					
ANR	4980625	InclusiveOrExpression	( ( uint64_t ) ( * * sptr ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	1		|			
ANR	4980626	ShiftExpression	( uint64_t ) ( * * sptr ) << 24		4980464	0		<<			
ANR	4980627	CastExpression	( uint64_t ) ( * * sptr )		4980464	0					
ANR	4980628	CastTarget	uint64_t		4980464	0					
ANR	4980629	UnaryOperationExpression	* * sptr		4980464	1					
ANR	4980630	UnaryOperator	*		4980464	0					
ANR	4980631	UnaryOperationExpression	* sptr		4980464	1					
ANR	4980632	UnaryOperator	*		4980464	0					
ANR	4980633	Identifier	sptr		4980464	1					
ANR	4980634	PrimaryExpression	24		4980464	1					
ANR	4980635	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	1		|			
ANR	4980636	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16		4980464	0		<<			
ANR	4980637	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		4980464	0					
ANR	4980638	CastTarget	uint64_t		4980464	0					
ANR	4980639	ArrayIndexing	( * sptr ) [ 1 ]		4980464	1					
ANR	4980640	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980641	UnaryOperator	*		4980464	0					
ANR	4980642	Identifier	sptr		4980464	1					
ANR	4980643	PrimaryExpression	1		4980464	1					
ANR	4980644	PrimaryExpression	16		4980464	1					
ANR	4980645	InclusiveOrExpression	( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	1		|			
ANR	4980646	ShiftExpression	( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8		4980464	0		<<			
ANR	4980647	CastExpression	( uint64_t ) ( * sptr ) [ 2 ]		4980464	0					
ANR	4980648	CastTarget	uint64_t		4980464	0					
ANR	4980649	ArrayIndexing	( * sptr ) [ 2 ]		4980464	1					
ANR	4980650	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980651	UnaryOperator	*		4980464	0					
ANR	4980652	Identifier	sptr		4980464	1					
ANR	4980653	PrimaryExpression	2		4980464	1					
ANR	4980654	PrimaryExpression	8		4980464	1					
ANR	4980655	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	1					
ANR	4980656	CastTarget	uint64_t		4980464	0					
ANR	4980657	ArrayIndexing	( * sptr ) [ 3 ]		4980464	1					
ANR	4980658	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980659	UnaryOperator	*		4980464	0					
ANR	4980660	Identifier	sptr		4980464	1					
ANR	4980661	PrimaryExpression	3		4980464	1					
ANR	4980662	BreakStatement	break ;	198:12:5995:6000	4980464	20	True				
ANR	4980663	Label	case 10 :	199:8:6010:6017	4980464	21	True				
ANR	4980664	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )"	200:12:6031:6303	4980464	22	True				
ANR	4980665	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )"		4980464	0		=			
ANR	4980666	UnaryOperationExpression	* value		4980464	0					
ANR	4980667	UnaryOperator	*		4980464	0					
ANR	4980668	Identifier	value		4980464	1					
ANR	4980669	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )"		4980464	1		|			
ANR	4980670	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	0		<<			
ANR	4980671	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		4980464	0					
ANR	4980672	CastTarget	uint64_t		4980464	0					
ANR	4980673	ArrayIndexing	( * sptr ) [ 0 ]		4980464	1					
ANR	4980674	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980675	UnaryOperator	*		4980464	0					
ANR	4980676	Identifier	sptr		4980464	1					
ANR	4980677	PrimaryExpression	0		4980464	1					
ANR	4980678	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	1					
ANR	4980679	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980680	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980681	ArgumentList	* value		4980464	1					
ANR	4980682	Argument	* value		4980464	0					
ANR	4980683	UnaryOperationExpression	* value		4980464	0					
ANR	4980684	UnaryOperator	*		4980464	0					
ANR	4980685	Identifier	value		4980464	1					
ANR	4980686	Argument	32		4980464	1					
ANR	4980687	PrimaryExpression	32		4980464	0					
ANR	4980688	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )		4980464	1		|			
ANR	4980689	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24		4980464	0		<<			
ANR	4980690	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		4980464	0					
ANR	4980691	CastTarget	uint64_t		4980464	0					
ANR	4980692	ArrayIndexing	( * sptr ) [ 1 ]		4980464	1					
ANR	4980693	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980694	UnaryOperator	*		4980464	0					
ANR	4980695	Identifier	sptr		4980464	1					
ANR	4980696	PrimaryExpression	1		4980464	1					
ANR	4980697	PrimaryExpression	24		4980464	1					
ANR	4980698	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )		4980464	1		|			
ANR	4980699	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16		4980464	0		<<			
ANR	4980700	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		4980464	0					
ANR	4980701	CastTarget	uint64_t		4980464	0					
ANR	4980702	ArrayIndexing	( * sptr ) [ 2 ]		4980464	1					
ANR	4980703	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980704	UnaryOperator	*		4980464	0					
ANR	4980705	Identifier	sptr		4980464	1					
ANR	4980706	PrimaryExpression	2		4980464	1					
ANR	4980707	PrimaryExpression	16		4980464	1					
ANR	4980708	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )		4980464	1		|			
ANR	4980709	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8		4980464	0		<<			
ANR	4980710	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	0					
ANR	4980711	CastTarget	uint64_t		4980464	0					
ANR	4980712	ArrayIndexing	( * sptr ) [ 3 ]		4980464	1					
ANR	4980713	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980714	UnaryOperator	*		4980464	0					
ANR	4980715	Identifier	sptr		4980464	1					
ANR	4980716	PrimaryExpression	3		4980464	1					
ANR	4980717	PrimaryExpression	8		4980464	1					
ANR	4980718	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		4980464	1					
ANR	4980719	CastTarget	uint64_t		4980464	0					
ANR	4980720	ArrayIndexing	( * sptr ) [ 4 ]		4980464	1					
ANR	4980721	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980722	UnaryOperator	*		4980464	0					
ANR	4980723	Identifier	sptr		4980464	1					
ANR	4980724	PrimaryExpression	4		4980464	1					
ANR	4980725	BreakStatement	break ;	205:12:6317:6322	4980464	23	True				
ANR	4980726	Label	case 12 :	206:8:6332:6339	4980464	24	True				
ANR	4980727	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"	207:12:6353:6708	4980464	25	True				
ANR	4980728	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"		4980464	0		=			
ANR	4980729	UnaryOperationExpression	* value		4980464	0					
ANR	4980730	UnaryOperator	*		4980464	0					
ANR	4980731	Identifier	value		4980464	1					
ANR	4980732	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"		4980464	1		|			
ANR	4980733	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		4980464	0		<<			
ANR	4980734	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		4980464	0					
ANR	4980735	CastTarget	uint64_t		4980464	0					
ANR	4980736	ArrayIndexing	( * sptr ) [ 0 ]		4980464	1					
ANR	4980737	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980738	UnaryOperator	*		4980464	0					
ANR	4980739	Identifier	sptr		4980464	1					
ANR	4980740	PrimaryExpression	0		4980464	1					
ANR	4980741	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		4980464	1					
ANR	4980742	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980743	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980744	ArgumentList	* value		4980464	1					
ANR	4980745	Argument	* value		4980464	0					
ANR	4980746	UnaryOperationExpression	* value		4980464	0					
ANR	4980747	UnaryOperator	*		4980464	0					
ANR	4980748	Identifier	value		4980464	1					
ANR	4980749	Argument	40		4980464	1					
ANR	4980750	PrimaryExpression	40		4980464	0					
ANR	4980751	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"		4980464	1		|			
ANR	4980752	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	0		<<			
ANR	4980753	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		4980464	0					
ANR	4980754	CastTarget	uint64_t		4980464	0					
ANR	4980755	ArrayIndexing	( * sptr ) [ 1 ]		4980464	1					
ANR	4980756	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980757	UnaryOperator	*		4980464	0					
ANR	4980758	Identifier	sptr		4980464	1					
ANR	4980759	PrimaryExpression	1		4980464	1					
ANR	4980760	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	1					
ANR	4980761	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980762	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980763	ArgumentList	* value		4980464	1					
ANR	4980764	Argument	* value		4980464	0					
ANR	4980765	UnaryOperationExpression	* value		4980464	0					
ANR	4980766	UnaryOperator	*		4980464	0					
ANR	4980767	Identifier	value		4980464	1					
ANR	4980768	Argument	32		4980464	1					
ANR	4980769	PrimaryExpression	32		4980464	0					
ANR	4980770	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )		4980464	1		|			
ANR	4980771	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24		4980464	0		<<			
ANR	4980772	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		4980464	0					
ANR	4980773	CastTarget	uint64_t		4980464	0					
ANR	4980774	ArrayIndexing	( * sptr ) [ 2 ]		4980464	1					
ANR	4980775	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980776	UnaryOperator	*		4980464	0					
ANR	4980777	Identifier	sptr		4980464	1					
ANR	4980778	PrimaryExpression	2		4980464	1					
ANR	4980779	PrimaryExpression	24		4980464	1					
ANR	4980780	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )		4980464	1		|			
ANR	4980781	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16		4980464	0		<<			
ANR	4980782	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	0					
ANR	4980783	CastTarget	uint64_t		4980464	0					
ANR	4980784	ArrayIndexing	( * sptr ) [ 3 ]		4980464	1					
ANR	4980785	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980786	UnaryOperator	*		4980464	0					
ANR	4980787	Identifier	sptr		4980464	1					
ANR	4980788	PrimaryExpression	3		4980464	1					
ANR	4980789	PrimaryExpression	16		4980464	1					
ANR	4980790	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )		4980464	1		|			
ANR	4980791	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8		4980464	0		<<			
ANR	4980792	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		4980464	0					
ANR	4980793	CastTarget	uint64_t		4980464	0					
ANR	4980794	ArrayIndexing	( * sptr ) [ 4 ]		4980464	1					
ANR	4980795	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980796	UnaryOperator	*		4980464	0					
ANR	4980797	Identifier	sptr		4980464	1					
ANR	4980798	PrimaryExpression	4		4980464	1					
ANR	4980799	PrimaryExpression	8		4980464	1					
ANR	4980800	CastExpression	( uint64_t ) ( ( * sptr ) [ 5 ] )		4980464	1					
ANR	4980801	CastTarget	uint64_t		4980464	0					
ANR	4980802	ArrayIndexing	( * sptr ) [ 5 ]		4980464	1					
ANR	4980803	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980804	UnaryOperator	*		4980464	0					
ANR	4980805	Identifier	sptr		4980464	1					
ANR	4980806	PrimaryExpression	5		4980464	1					
ANR	4980807	BreakStatement	break ;	213:12:6722:6727	4980464	26	True				
ANR	4980808	Label	case 14 :	214:8:6737:6744	4980464	27	True				
ANR	4980809	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"	215:12:6758:7196	4980464	28	True				
ANR	4980810	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		4980464	0		=			
ANR	4980811	UnaryOperationExpression	* value		4980464	0					
ANR	4980812	UnaryOperator	*		4980464	0					
ANR	4980813	Identifier	value		4980464	1					
ANR	4980814	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		4980464	1		|			
ANR	4980815	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		4980464	0		<<			
ANR	4980816	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		4980464	0					
ANR	4980817	CastTarget	uint64_t		4980464	0					
ANR	4980818	ArrayIndexing	( * sptr ) [ 0 ]		4980464	1					
ANR	4980819	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980820	UnaryOperator	*		4980464	0					
ANR	4980821	Identifier	sptr		4980464	1					
ANR	4980822	PrimaryExpression	0		4980464	1					
ANR	4980823	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		4980464	1					
ANR	4980824	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980825	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980826	ArgumentList	* value		4980464	1					
ANR	4980827	Argument	* value		4980464	0					
ANR	4980828	UnaryOperationExpression	* value		4980464	0					
ANR	4980829	UnaryOperator	*		4980464	0					
ANR	4980830	Identifier	value		4980464	1					
ANR	4980831	Argument	48		4980464	1					
ANR	4980832	PrimaryExpression	48		4980464	0					
ANR	4980833	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		4980464	1		|			
ANR	4980834	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		4980464	0		<<			
ANR	4980835	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		4980464	0					
ANR	4980836	CastTarget	uint64_t		4980464	0					
ANR	4980837	ArrayIndexing	( * sptr ) [ 1 ]		4980464	1					
ANR	4980838	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980839	UnaryOperator	*		4980464	0					
ANR	4980840	Identifier	sptr		4980464	1					
ANR	4980841	PrimaryExpression	1		4980464	1					
ANR	4980842	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		4980464	1					
ANR	4980843	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980844	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980845	ArgumentList	* value		4980464	1					
ANR	4980846	Argument	* value		4980464	0					
ANR	4980847	UnaryOperationExpression	* value		4980464	0					
ANR	4980848	UnaryOperator	*		4980464	0					
ANR	4980849	Identifier	value		4980464	1					
ANR	4980850	Argument	40		4980464	1					
ANR	4980851	PrimaryExpression	40		4980464	0					
ANR	4980852	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		4980464	1		|			
ANR	4980853	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	0		<<			
ANR	4980854	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		4980464	0					
ANR	4980855	CastTarget	uint64_t		4980464	0					
ANR	4980856	ArrayIndexing	( * sptr ) [ 2 ]		4980464	1					
ANR	4980857	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980858	UnaryOperator	*		4980464	0					
ANR	4980859	Identifier	sptr		4980464	1					
ANR	4980860	PrimaryExpression	2		4980464	1					
ANR	4980861	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	1					
ANR	4980862	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980863	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980864	ArgumentList	* value		4980464	1					
ANR	4980865	Argument	* value		4980464	0					
ANR	4980866	UnaryOperationExpression	* value		4980464	0					
ANR	4980867	UnaryOperator	*		4980464	0					
ANR	4980868	Identifier	value		4980464	1					
ANR	4980869	Argument	32		4980464	1					
ANR	4980870	PrimaryExpression	32		4980464	0					
ANR	4980871	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )		4980464	1		|			
ANR	4980872	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24		4980464	0		<<			
ANR	4980873	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	0					
ANR	4980874	CastTarget	uint64_t		4980464	0					
ANR	4980875	ArrayIndexing	( * sptr ) [ 3 ]		4980464	1					
ANR	4980876	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980877	UnaryOperator	*		4980464	0					
ANR	4980878	Identifier	sptr		4980464	1					
ANR	4980879	PrimaryExpression	3		4980464	1					
ANR	4980880	PrimaryExpression	24		4980464	1					
ANR	4980881	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )		4980464	1		|			
ANR	4980882	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16		4980464	0		<<			
ANR	4980883	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		4980464	0					
ANR	4980884	CastTarget	uint64_t		4980464	0					
ANR	4980885	ArrayIndexing	( * sptr ) [ 4 ]		4980464	1					
ANR	4980886	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980887	UnaryOperator	*		4980464	0					
ANR	4980888	Identifier	sptr		4980464	1					
ANR	4980889	PrimaryExpression	4		4980464	1					
ANR	4980890	PrimaryExpression	16		4980464	1					
ANR	4980891	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )		4980464	1		|			
ANR	4980892	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8		4980464	0		<<			
ANR	4980893	CastExpression	( uint64_t ) ( ( * sptr ) [ 5 ] )		4980464	0					
ANR	4980894	CastTarget	uint64_t		4980464	0					
ANR	4980895	ArrayIndexing	( * sptr ) [ 5 ]		4980464	1					
ANR	4980896	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980897	UnaryOperator	*		4980464	0					
ANR	4980898	Identifier	sptr		4980464	1					
ANR	4980899	PrimaryExpression	5		4980464	1					
ANR	4980900	PrimaryExpression	8		4980464	1					
ANR	4980901	CastExpression	( uint64_t ) ( ( * sptr ) [ 6 ] )		4980464	1					
ANR	4980902	CastTarget	uint64_t		4980464	0					
ANR	4980903	ArrayIndexing	( * sptr ) [ 6 ]		4980464	1					
ANR	4980904	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980905	UnaryOperator	*		4980464	0					
ANR	4980906	Identifier	sptr		4980464	1					
ANR	4980907	PrimaryExpression	6		4980464	1					
ANR	4980908	BreakStatement	break ;	222:12:7210:7215	4980464	29	True				
ANR	4980909	Label	case 16 :	223:8:7225:7232	4980464	30	True				
ANR	4980910	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"	224:12:7246:7767	4980464	31	True				
ANR	4980911	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		4980464	0		=			
ANR	4980912	UnaryOperationExpression	* value		4980464	0					
ANR	4980913	UnaryOperator	*		4980464	0					
ANR	4980914	Identifier	value		4980464	1					
ANR	4980915	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		4980464	1		|			
ANR	4980916	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 )"		4980464	0		<<			
ANR	4980917	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		4980464	0					
ANR	4980918	CastTarget	uint64_t		4980464	0					
ANR	4980919	ArrayIndexing	( * sptr ) [ 0 ]		4980464	1					
ANR	4980920	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980921	UnaryOperator	*		4980464	0					
ANR	4980922	Identifier	sptr		4980464	1					
ANR	4980923	PrimaryExpression	0		4980464	1					
ANR	4980924	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 56 )"		4980464	1					
ANR	4980925	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980926	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980927	ArgumentList	* value		4980464	1					
ANR	4980928	Argument	* value		4980464	0					
ANR	4980929	UnaryOperationExpression	* value		4980464	0					
ANR	4980930	UnaryOperator	*		4980464	0					
ANR	4980931	Identifier	value		4980464	1					
ANR	4980932	Argument	56		4980464	1					
ANR	4980933	PrimaryExpression	56		4980464	0					
ANR	4980934	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		4980464	1		|			
ANR	4980935	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		4980464	0		<<			
ANR	4980936	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		4980464	0					
ANR	4980937	CastTarget	uint64_t		4980464	0					
ANR	4980938	ArrayIndexing	( * sptr ) [ 1 ]		4980464	1					
ANR	4980939	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980940	UnaryOperator	*		4980464	0					
ANR	4980941	Identifier	sptr		4980464	1					
ANR	4980942	PrimaryExpression	1		4980464	1					
ANR	4980943	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		4980464	1					
ANR	4980944	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980945	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980946	ArgumentList	* value		4980464	1					
ANR	4980947	Argument	* value		4980464	0					
ANR	4980948	UnaryOperationExpression	* value		4980464	0					
ANR	4980949	UnaryOperator	*		4980464	0					
ANR	4980950	Identifier	value		4980464	1					
ANR	4980951	Argument	48		4980464	1					
ANR	4980952	PrimaryExpression	48		4980464	0					
ANR	4980953	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		4980464	1		|			
ANR	4980954	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		4980464	0		<<			
ANR	4980955	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		4980464	0					
ANR	4980956	CastTarget	uint64_t		4980464	0					
ANR	4980957	ArrayIndexing	( * sptr ) [ 2 ]		4980464	1					
ANR	4980958	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980959	UnaryOperator	*		4980464	0					
ANR	4980960	Identifier	sptr		4980464	1					
ANR	4980961	PrimaryExpression	2		4980464	1					
ANR	4980962	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		4980464	1					
ANR	4980963	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980964	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980965	ArgumentList	* value		4980464	1					
ANR	4980966	Argument	* value		4980464	0					
ANR	4980967	UnaryOperationExpression	* value		4980464	0					
ANR	4980968	UnaryOperator	*		4980464	0					
ANR	4980969	Identifier	value		4980464	1					
ANR	4980970	Argument	40		4980464	1					
ANR	4980971	PrimaryExpression	40		4980464	0					
ANR	4980972	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		4980464	1		|			
ANR	4980973	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	0		<<			
ANR	4980974	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		4980464	0					
ANR	4980975	CastTarget	uint64_t		4980464	0					
ANR	4980976	ArrayIndexing	( * sptr ) [ 3 ]		4980464	1					
ANR	4980977	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980978	UnaryOperator	*		4980464	0					
ANR	4980979	Identifier	sptr		4980464	1					
ANR	4980980	PrimaryExpression	3		4980464	1					
ANR	4980981	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		4980464	1					
ANR	4980982	Callee	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980983	Identifier	SAMPLE_BOUND_SHIFT		4980464	0					
ANR	4980984	ArgumentList	* value		4980464	1					
ANR	4980985	Argument	* value		4980464	0					
ANR	4980986	UnaryOperationExpression	* value		4980464	0					
ANR	4980987	UnaryOperator	*		4980464	0					
ANR	4980988	Identifier	value		4980464	1					
ANR	4980989	Argument	32		4980464	1					
ANR	4980990	PrimaryExpression	32		4980464	0					
ANR	4980991	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )		4980464	1		|			
ANR	4980992	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24		4980464	0		<<			
ANR	4980993	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		4980464	0					
ANR	4980994	CastTarget	uint64_t		4980464	0					
ANR	4980995	ArrayIndexing	( * sptr ) [ 4 ]		4980464	1					
ANR	4980996	UnaryOperationExpression	* sptr		4980464	0					
ANR	4980997	UnaryOperator	*		4980464	0					
ANR	4980998	Identifier	sptr		4980464	1					
ANR	4980999	PrimaryExpression	4		4980464	1					
ANR	4981000	PrimaryExpression	24		4980464	1					
ANR	4981001	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )		4980464	1		|			
ANR	4981002	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16		4980464	0		<<			
ANR	4981003	CastExpression	( uint64_t ) ( ( * sptr ) [ 5 ] )		4980464	0					
ANR	4981004	CastTarget	uint64_t		4980464	0					
ANR	4981005	ArrayIndexing	( * sptr ) [ 5 ]		4980464	1					
ANR	4981006	UnaryOperationExpression	* sptr		4980464	0					
ANR	4981007	UnaryOperator	*		4980464	0					
ANR	4981008	Identifier	sptr		4980464	1					
ANR	4981009	PrimaryExpression	5		4980464	1					
ANR	4981010	PrimaryExpression	16		4980464	1					
ANR	4981011	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )		4980464	1		|			
ANR	4981012	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8		4980464	0		<<			
ANR	4981013	CastExpression	( uint64_t ) ( ( * sptr ) [ 6 ] )		4980464	0					
ANR	4981014	CastTarget	uint64_t		4980464	0					
ANR	4981015	ArrayIndexing	( * sptr ) [ 6 ]		4980464	1					
ANR	4981016	UnaryOperationExpression	* sptr		4980464	0					
ANR	4981017	UnaryOperator	*		4980464	0					
ANR	4981018	Identifier	sptr		4980464	1					
ANR	4981019	PrimaryExpression	6		4980464	1					
ANR	4981020	PrimaryExpression	8		4980464	1					
ANR	4981021	CastExpression	( uint64_t ) ( ( * sptr ) [ 7 ] )		4980464	1					
ANR	4981022	CastTarget	uint64_t		4980464	0					
ANR	4981023	ArrayIndexing	( * sptr ) [ 7 ]		4980464	1					
ANR	4981024	UnaryOperationExpression	* sptr		4980464	0					
ANR	4981025	UnaryOperator	*		4980464	0					
ANR	4981026	Identifier	sptr		4980464	1					
ANR	4981027	PrimaryExpression	7		4980464	1					
ANR	4981028	BreakStatement	break ;	232:12:7781:7786	4980464	32	True				
ANR	4981029	Label	default :	233:8:7796:7803	4980464	33	True				
ANR	4981030	Identifier	default		4980464	0					
ANR	4981031	ReturnStatement	return - 1 ;	234:12:7817:7826	4980464	34	True				
ANR	4981032	UnaryOperationExpression	- 1		4980464	0					
ANR	4981033	UnaryOperator	-		4980464	0					
ANR	4981034	PrimaryExpression	1		4980464	1					
ANR	4981035	ExpressionStatement	* sbit += sbpv	236:4:7838:7851	4980464	1	True				
ANR	4981036	AssignmentExpression	* sbit += sbpv		4980464	0		+=			
ANR	4981037	UnaryOperationExpression	* sbit		4980464	0					
ANR	4981038	UnaryOperator	*		4980464	0					
ANR	4981039	Identifier	sbit		4980464	1					
ANR	4981040	Identifier	sbpv		4980464	1					
ANR	4981041	ExpressionStatement	* sptr += * sbit >> 3	237:4:7857:7876	4980464	2	True				
ANR	4981042	AssignmentExpression	* sptr += * sbit >> 3		4980464	0		+=			
ANR	4981043	UnaryOperationExpression	* sptr		4980464	0					
ANR	4981044	UnaryOperator	*		4980464	0					
ANR	4981045	Identifier	sptr		4980464	1					
ANR	4981046	ShiftExpression	* sbit >> 3		4980464	1		>>			
ANR	4981047	UnaryOperationExpression	* sbit		4980464	0					
ANR	4981048	UnaryOperator	*		4980464	0					
ANR	4981049	Identifier	sbit		4980464	1					
ANR	4981050	PrimaryExpression	3		4980464	1					
ANR	4981051	ExpressionStatement	* sbit &= 7	238:4:7882:7892	4980464	3	True				
ANR	4981052	AssignmentExpression	* sbit &= 7		4980464	0		&=			
ANR	4981053	UnaryOperationExpression	* sbit		4980464	0					
ANR	4981054	UnaryOperator	*		4980464	0					
ANR	4981055	Identifier	sbit		4980464	1					
ANR	4981056	PrimaryExpression	7		4980464	1					
ANR	4981057	ReturnStatement	return 0 ;	239:4:7898:7906	4980464	4	True				
ANR	4981058	PrimaryExpression	0		4980464	0					
ANR	4981059	Identifier	sample_load_next64		4980464	1					
ANR	4981060	ParameterList	"uint64_t * value , const byte * * sptr , int * sbit , int sbpv"		4980464	2					
ANR	4981061	Parameter	uint64_t * value	174:37:5141:5155	4980464	0	True				
ANR	4981062	ParameterType	uint64_t *		4980464	0					
ANR	4981063	Identifier	value		4980464	1					
ANR	4981064	Parameter	const byte * * sptr	174:54:5158:5174	4980464	1	True				
ANR	4981065	ParameterType	const byte * *		4980464	0					
ANR	4981066	Identifier	sptr		4980464	1					
ANR	4981067	Parameter	int * sbit	174:73:5177:5185	4980464	2	True				
ANR	4981068	ParameterType	int *		4980464	0					
ANR	4981069	Identifier	sbit		4980464	1					
ANR	4981070	Parameter	int sbpv	174:84:5188:5195	4980464	3	True				
ANR	4981071	ParameterType	int		4980464	0					
ANR	4981072	Identifier	sbpv		4980464	1					
ANR	4981073	CFGEntryNode	ENTRY		4980464		True				
ANR	4981074	CFGExitNode	EXIT		4980464		True				
ANR	4981075	Symbol	sbpv		4980464						
ANR	4981076	Symbol	SAMPLE_BOUND_SHIFT		4980464						
ANR	4981077	Symbol	* sbit		4980464						
ANR	4981078	Symbol	* sptr		4980464						
ANR	4981079	Symbol	* value		4980464						
ANR	4981080	Symbol	* * sptr		4980464						
ANR	4981081	Symbol	value		4980464						
ANR	4981082	Symbol	sptr		4980464						
ANR	4981083	Symbol	sbit		4980464						
ANR	4981084	Function	sample_store_next8	243:18:7976:8669							
ANR	4981085	FunctionDef	"sample_store_next8 (uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		4981084	0					
ANR	4981086	CompoundStatement		244:0:8055:8669	4981084	0					
ANR	4981087	SwitchStatement	switch ( dbpv >> 2 )		4981084	0					
ANR	4981088	Condition	dbpv >> 2	245:12:8069:8077	4981084	0	True				
ANR	4981089	ShiftExpression	dbpv >> 2		4981084	0		>>			
ANR	4981090	Identifier	dbpv		4981084	0					
ANR	4981091	PrimaryExpression	2		4981084	1					
ANR	4981092	CompoundStatement		2:24:25:25	4981084	1					
ANR	4981093	Label	case 0 :	246:8:8091:8097	4981084	0	True				
ANR	4981094	IfStatement	if ( ( * dbit += dbpv ) == 8 )		4981084	1					
ANR	4981095	Condition	( * dbit += dbpv ) == 8	247:17:8116:8135	4981084	0	True				
ANR	4981096	EqualityExpression	( * dbit += dbpv ) == 8		4981084	0		==			
ANR	4981097	AssignmentExpression	* dbit += dbpv		4981084	0		+=			
ANR	4981098	UnaryOperationExpression	* dbit		4981084	0					
ANR	4981099	UnaryOperator	*		4981084	0					
ANR	4981100	Identifier	dbit		4981084	1					
ANR	4981101	Identifier	dbpv		4981084	1					
ANR	4981102	PrimaryExpression	8		4981084	1					
ANR	4981103	CompoundStatement		4:40:83:83	4981084	1					
ANR	4981104	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( byte ) value	248:15:8156:8190	4981084	0	True				
ANR	4981105	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		4981084	0		=			
ANR	4981106	UnaryOperationExpression	* ( * dptr ) ++		4981084	0					
ANR	4981107	UnaryOperator	*		4981084	0					
ANR	4981108	PostIncDecOperationExpression	( * dptr ) ++		4981084	1					
ANR	4981109	UnaryOperationExpression	* dptr		4981084	0					
ANR	4981110	UnaryOperator	*		4981084	0					
ANR	4981111	Identifier	dptr		4981084	1					
ANR	4981112	IncDec	++		4981084	1					
ANR	4981113	InclusiveOrExpression	* dbbyte | ( byte ) value		4981084	1		|			
ANR	4981114	UnaryOperationExpression	* dbbyte		4981084	0					
ANR	4981115	UnaryOperator	*		4981084	0					
ANR	4981116	Identifier	dbbyte		4981084	1					
ANR	4981117	CastExpression	( byte ) value		4981084	1					
ANR	4981118	CastTarget	byte		4981084	0					
ANR	4981119	Identifier	value		4981084	1					
ANR	4981120	ExpressionStatement	* dbbyte = 0	249:15:8207:8218	4981084	1	True				
ANR	4981121	AssignmentExpression	* dbbyte = 0		4981084	0		=			
ANR	4981122	UnaryOperationExpression	* dbbyte		4981084	0					
ANR	4981123	UnaryOperator	*		4981084	0					
ANR	4981124	Identifier	dbbyte		4981084	1					
ANR	4981125	PrimaryExpression	0		4981084	1					
ANR	4981126	ExpressionStatement	* dbit = 0	250:15:8235:8244	4981084	2	True				
ANR	4981127	AssignmentExpression	* dbit = 0		4981084	0		=			
ANR	4981128	UnaryOperationExpression	* dbit		4981084	0					
ANR	4981129	UnaryOperator	*		4981084	0					
ANR	4981130	Identifier	dbit		4981084	1					
ANR	4981131	PrimaryExpression	0		4981084	1					
ANR	4981132	ElseStatement	else		4981084	0					
ANR	4981133	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	253:16:8293:8332	4981084	0	True				
ANR	4981134	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		4981084	0		|=			
ANR	4981135	UnaryOperationExpression	* dbbyte		4981084	0					
ANR	4981136	UnaryOperator	*		4981084	0					
ANR	4981137	Identifier	dbbyte		4981084	1					
ANR	4981138	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		4981084	1					
ANR	4981139	CastTarget	byte		4981084	0					
ANR	4981140	ShiftExpression	value << ( 8 - * dbit )		4981084	1		<<			
ANR	4981141	Identifier	value		4981084	0					
ANR	4981142	AdditiveExpression	8 - * dbit		4981084	1		-			
ANR	4981143	PrimaryExpression	8		4981084	0					
ANR	4981144	UnaryOperationExpression	* dbit		4981084	1					
ANR	4981145	UnaryOperator	*		4981084	0					
ANR	4981146	Identifier	dbit		4981084	1					
ANR	4981147	BreakStatement	break ;	254:12:8346:8351	4981084	2	True				
ANR	4981148	Label	case 1 :	255:8:8361:8367	4981084	3	True				
ANR	4981149	IfStatement	if ( * dbit ^= 4 )		4981084	4					
ANR	4981150	Condition	* dbit ^= 4	256:17:8386:8395	4981084	0	True				
ANR	4981151	AssignmentExpression	* dbit ^= 4		4981084	0		^=			
ANR	4981152	UnaryOperationExpression	* dbit		4981084	0					
ANR	4981153	UnaryOperator	*		4981084	0					
ANR	4981154	Identifier	dbit		4981084	1					
ANR	4981155	PrimaryExpression	4		4981084	1					
ANR	4981156	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	257:16:8415:8443	4981084	1	True				
ANR	4981157	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981084	0		=			
ANR	4981158	UnaryOperationExpression	* dbbyte		4981084	0					
ANR	4981159	UnaryOperator	*		4981084	0					
ANR	4981160	Identifier	dbbyte		4981084	1					
ANR	4981161	CastExpression	( byte ) ( value << 4 )		4981084	1					
ANR	4981162	CastTarget	byte		4981084	0					
ANR	4981163	ShiftExpression	value << 4		4981084	1		<<			
ANR	4981164	Identifier	value		4981084	0					
ANR	4981165	PrimaryExpression	4		4981084	1					
ANR	4981166	ElseStatement	else		4981084	0					
ANR	4981167	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	259:16:8478:8514	4981084	0	True				
ANR	4981168	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		4981084	0		=			
ANR	4981169	UnaryOperationExpression	* ( * dptr ) ++		4981084	0					
ANR	4981170	UnaryOperator	*		4981084	0					
ANR	4981171	PostIncDecOperationExpression	( * dptr ) ++		4981084	1					
ANR	4981172	UnaryOperationExpression	* dptr		4981084	0					
ANR	4981173	UnaryOperator	*		4981084	0					
ANR	4981174	Identifier	dptr		4981084	1					
ANR	4981175	IncDec	++		4981084	1					
ANR	4981176	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		4981084	1		|			
ANR	4981177	UnaryOperationExpression	* dbbyte		4981084	0					
ANR	4981178	UnaryOperator	*		4981084	0					
ANR	4981179	Identifier	dbbyte		4981084	1					
ANR	4981180	CastExpression	( byte ) value		4981084	1					
ANR	4981181	CastTarget	byte		4981084	0					
ANR	4981182	Identifier	value		4981084	1					
ANR	4981183	BreakStatement	break ;	260:12:8529:8534	4981084	5	True				
ANR	4981184	Label	case 2 :	261:8:8544:8550	4981084	6	True				
ANR	4981185	ExpressionStatement	* ( * dptr ) ++ = ( byte ) value	262:12:8564:8588	4981084	7	True				
ANR	4981186	AssignmentExpression	* ( * dptr ) ++ = ( byte ) value		4981084	0		=			
ANR	4981187	UnaryOperationExpression	* ( * dptr ) ++		4981084	0					
ANR	4981188	UnaryOperator	*		4981084	0					
ANR	4981189	PostIncDecOperationExpression	( * dptr ) ++		4981084	1					
ANR	4981190	UnaryOperationExpression	* dptr		4981084	0					
ANR	4981191	UnaryOperator	*		4981084	0					
ANR	4981192	Identifier	dptr		4981084	1					
ANR	4981193	IncDec	++		4981084	1					
ANR	4981194	CastExpression	( byte ) value		4981084	1					
ANR	4981195	CastTarget	byte		4981084	0					
ANR	4981196	Identifier	value		4981084	1					
ANR	4981197	BreakStatement	break ;	263:12:8602:8607	4981084	8	True				
ANR	4981198	Label	default :	264:8:8617:8624	4981084	9	True				
ANR	4981199	Identifier	default		4981084	0					
ANR	4981200	ReturnStatement	return - 1 ;	265:12:8638:8647	4981084	10	True				
ANR	4981201	UnaryOperationExpression	- 1		4981084	0					
ANR	4981202	UnaryOperator	-		4981084	0					
ANR	4981203	PrimaryExpression	1		4981084	1					
ANR	4981204	ReturnStatement	return 0 ;	267:4:8659:8667	4981084	1	True				
ANR	4981205	PrimaryExpression	0		4981084	0					
ANR	4981206	Identifier	sample_store_next8		4981084	1					
ANR	4981207	ParameterList	"uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		4981084	2					
ANR	4981208	Parameter	uint value	243:37:7995:8004	4981084	0	True				
ANR	4981209	ParameterType	uint		4981084	0					
ANR	4981210	Identifier	value		4981084	1					
ANR	4981211	Parameter	byte * * dptr	243:49:8007:8017	4981084	1	True				
ANR	4981212	ParameterType	byte * *		4981084	0					
ANR	4981213	Identifier	dptr		4981084	1					
ANR	4981214	Parameter	int * dbit	243:62:8020:8028	4981084	2	True				
ANR	4981215	ParameterType	int *		4981084	0					
ANR	4981216	Identifier	dbit		4981084	1					
ANR	4981217	Parameter	int dbpv	243:73:8031:8038	4981084	3	True				
ANR	4981218	ParameterType	int		4981084	0					
ANR	4981219	Identifier	dbpv		4981084	1					
ANR	4981220	Parameter	byte * dbbyte	243:83:8041:8052	4981084	4	True				
ANR	4981221	ParameterType	byte *		4981084	0					
ANR	4981222	Identifier	dbbyte		4981084	1					
ANR	4981223	CFGEntryNode	ENTRY		4981084		True				
ANR	4981224	CFGExitNode	EXIT		4981084		True				
ANR	4981225	Symbol	dbbyte		4981084						
ANR	4981226	Symbol	* dbit		4981084						
ANR	4981227	Symbol	* ( * dptr ) ++		4981084						
ANR	4981228	Symbol	dptr		4981084						
ANR	4981229	Symbol	dbit		4981084						
ANR	4981230	Symbol	dbpv		4981084						
ANR	4981231	Symbol	* dbbyte		4981084						
ANR	4981232	Symbol	value		4981084						
ANR	4981233	Symbol	* dptr		4981084						
ANR	4981234	Function	sample_store_next_12	270:19:8691:8954							
ANR	4981235	FunctionDef	"sample_store_next_12 (uint value , byte * * dptr , int * dbit , byte * dbbyte)"		4981234	0					
ANR	4981236	CompoundStatement		271:0:8763:8954	4981234	0					
ANR	4981237	IfStatement	if ( * dbit ^= 4 )		4981234	0					
ANR	4981238	Condition	* dbit ^= 4	272:9:8774:8783	4981234	0	True				
ANR	4981239	AssignmentExpression	* dbit ^= 4		4981234	0		^=			
ANR	4981240	UnaryOperationExpression	* dbit		4981234	0					
ANR	4981241	UnaryOperator	*		4981234	0					
ANR	4981242	Identifier	dbit		4981234	1					
ANR	4981243	PrimaryExpression	4		4981234	1					
ANR	4981244	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	273:8:8795:8856	4981234	1	True				
ANR	4981245	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		4981234	0					
ANR	4981246	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		4981234	0		=			
ANR	4981247	UnaryOperationExpression	* ( * dptr ) ++		4981234	0					
ANR	4981248	UnaryOperator	*		4981234	0					
ANR	4981249	PostIncDecOperationExpression	( * dptr ) ++		4981234	1					
ANR	4981250	UnaryOperationExpression	* dptr		4981234	0					
ANR	4981251	UnaryOperator	*		4981234	0					
ANR	4981252	Identifier	dptr		4981234	1					
ANR	4981253	IncDec	++		4981234	1					
ANR	4981254	CastExpression	( byte ) ( value >> 4 )		4981234	1					
ANR	4981255	CastTarget	byte		4981234	0					
ANR	4981256	ShiftExpression	value >> 4		4981234	1		>>			
ANR	4981257	Identifier	value		4981234	0					
ANR	4981258	PrimaryExpression	4		4981234	1					
ANR	4981259	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981234	1		=			
ANR	4981260	UnaryOperationExpression	* dbbyte		4981234	0					
ANR	4981261	UnaryOperator	*		4981234	0					
ANR	4981262	Identifier	dbbyte		4981234	1					
ANR	4981263	CastExpression	( byte ) ( value << 4 )		4981234	1					
ANR	4981264	CastTarget	byte		4981234	0					
ANR	4981265	ShiftExpression	value << 4		4981234	1		<<			
ANR	4981266	Identifier	value		4981234	0					
ANR	4981267	PrimaryExpression	4		4981234	1					
ANR	4981268	ElseStatement	else		4981234	0					
ANR	4981269	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) ( value ) , * dptr += 2"	275:6:8873:8952	4981234	0	True				
ANR	4981270	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) ( value ) , * dptr += 2"		4981234	0					
ANR	4981271	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		4981234	0		=			
ANR	4981272	UnaryOperationExpression	* ( * dptr )		4981234	0					
ANR	4981273	UnaryOperator	*		4981234	0					
ANR	4981274	UnaryOperationExpression	* dptr		4981234	1					
ANR	4981275	UnaryOperator	*		4981234	0					
ANR	4981276	Identifier	dptr		4981234	1					
ANR	4981277	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		4981234	1		|			
ANR	4981278	UnaryOperationExpression	* dbbyte		4981234	0					
ANR	4981279	UnaryOperator	*		4981234	0					
ANR	4981280	Identifier	dbbyte		4981234	1					
ANR	4981281	CastExpression	( byte ) ( value >> 8 )		4981234	1					
ANR	4981282	CastTarget	byte		4981234	0					
ANR	4981283	ShiftExpression	value >> 8		4981234	1		>>			
ANR	4981284	Identifier	value		4981234	0					
ANR	4981285	PrimaryExpression	8		4981234	1					
ANR	4981286	Expression	"( * dptr ) [ 1 ] = ( byte ) ( value ) , * dptr += 2"		4981234	1					
ANR	4981287	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) ( value )		4981234	0		=			
ANR	4981288	ArrayIndexing	( * dptr ) [ 1 ]		4981234	0					
ANR	4981289	UnaryOperationExpression	* dptr		4981234	0					
ANR	4981290	UnaryOperator	*		4981234	0					
ANR	4981291	Identifier	dptr		4981234	1					
ANR	4981292	PrimaryExpression	1		4981234	1					
ANR	4981293	CastExpression	( byte ) ( value )		4981234	1					
ANR	4981294	CastTarget	byte		4981234	0					
ANR	4981295	Identifier	value		4981234	1					
ANR	4981296	AssignmentExpression	* dptr += 2		4981234	1		+=			
ANR	4981297	UnaryOperationExpression	* dptr		4981234	0					
ANR	4981298	UnaryOperator	*		4981234	0					
ANR	4981299	Identifier	dptr		4981234	1					
ANR	4981300	PrimaryExpression	2		4981234	1					
ANR	4981301	Identifier	sample_store_next_12		4981234	1					
ANR	4981302	ParameterList	"uint value , byte * * dptr , int * dbit , byte * dbbyte"		4981234	2					
ANR	4981303	Parameter	uint value	270:41:8713:8722	4981234	0	True				
ANR	4981304	ParameterType	uint		4981234	0					
ANR	4981305	Identifier	value		4981234	1					
ANR	4981306	Parameter	byte * * dptr	270:53:8725:8735	4981234	1	True				
ANR	4981307	ParameterType	byte * *		4981234	0					
ANR	4981308	Identifier	dptr		4981234	1					
ANR	4981309	Parameter	int * dbit	270:66:8738:8746	4981234	2	True				
ANR	4981310	ParameterType	int *		4981234	0					
ANR	4981311	Identifier	dbit		4981234	1					
ANR	4981312	Parameter	byte * dbbyte	270:77:8749:8760	4981234	3	True				
ANR	4981313	ParameterType	byte *		4981234	0					
ANR	4981314	Identifier	dbbyte		4981234	1					
ANR	4981315	CFGEntryNode	ENTRY		4981234		True				
ANR	4981316	CFGExitNode	EXIT		4981234		True				
ANR	4981317	Symbol	* * dptr		4981234						
ANR	4981318	Symbol	dbbyte		4981234						
ANR	4981319	Symbol	* dbit		4981234						
ANR	4981320	Symbol	* ( * dptr ) ++		4981234						
ANR	4981321	Symbol	dptr		4981234						
ANR	4981322	Symbol	* ( * dptr )		4981234						
ANR	4981323	Symbol	dbit		4981234						
ANR	4981324	Symbol	* dbbyte		4981234						
ANR	4981325	Symbol	value		4981234						
ANR	4981326	Symbol	* dptr		4981234						
ANR	4981327	Function	sample_store_next12	277:18:8974:9785							
ANR	4981328	FunctionDef	"sample_store_next12 (uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		4981327	0					
ANR	4981329	CompoundStatement		278:0:9054:9785	4981327	0					
ANR	4981330	SwitchStatement	switch ( dbpv >> 2 )		4981327	0					
ANR	4981331	Condition	dbpv >> 2	279:12:9068:9076	4981327	0	True				
ANR	4981332	ShiftExpression	dbpv >> 2		4981327	0		>>			
ANR	4981333	Identifier	dbpv		4981327	0					
ANR	4981334	PrimaryExpression	2		4981327	1					
ANR	4981335	CompoundStatement		2:24:25:25	4981327	1					
ANR	4981336	Label	case 0 :	280:4:9086:9092	4981327	0	True				
ANR	4981337	IfStatement	if ( ( * dbit += dbpv ) == 8 )		4981327	1					
ANR	4981338	Condition	( * dbit += dbpv ) == 8	281:12:9106:9125	4981327	0	True				
ANR	4981339	EqualityExpression	( * dbit += dbpv ) == 8		4981327	0		==			
ANR	4981340	AssignmentExpression	* dbit += dbpv		4981327	0		+=			
ANR	4981341	UnaryOperationExpression	* dbit		4981327	0					
ANR	4981342	UnaryOperator	*		4981327	0					
ANR	4981343	Identifier	dbit		4981327	1					
ANR	4981344	Identifier	dbpv		4981327	1					
ANR	4981345	PrimaryExpression	8		4981327	1					
ANR	4981346	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	282:12:9141:9199	4981327	1	True				
ANR	4981347	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		4981327	0					
ANR	4981348	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		4981327	0		=			
ANR	4981349	UnaryOperationExpression	* ( * dptr ) ++		4981327	0					
ANR	4981350	UnaryOperator	*		4981327	0					
ANR	4981351	PostIncDecOperationExpression	( * dptr ) ++		4981327	1					
ANR	4981352	UnaryOperationExpression	* dptr		4981327	0					
ANR	4981353	UnaryOperator	*		4981327	0					
ANR	4981354	Identifier	dptr		4981327	1					
ANR	4981355	IncDec	++		4981327	1					
ANR	4981356	InclusiveOrExpression	* dbbyte | ( byte ) value		4981327	1		|			
ANR	4981357	UnaryOperationExpression	* dbbyte		4981327	0					
ANR	4981358	UnaryOperator	*		4981327	0					
ANR	4981359	Identifier	dbbyte		4981327	1					
ANR	4981360	CastExpression	( byte ) value		4981327	1					
ANR	4981361	CastTarget	byte		4981327	0					
ANR	4981362	Identifier	value		4981327	1					
ANR	4981363	Expression	"* dbbyte = 0 , * dbit = 0"		4981327	1					
ANR	4981364	AssignmentExpression	* dbbyte = 0		4981327	0		=			
ANR	4981365	UnaryOperationExpression	* dbbyte		4981327	0					
ANR	4981366	UnaryOperator	*		4981327	0					
ANR	4981367	Identifier	dbbyte		4981327	1					
ANR	4981368	PrimaryExpression	0		4981327	1					
ANR	4981369	AssignmentExpression	* dbit = 0		4981327	1		=			
ANR	4981370	UnaryOperationExpression	* dbit		4981327	0					
ANR	4981371	UnaryOperator	*		4981327	0					
ANR	4981372	Identifier	dbit		4981327	1					
ANR	4981373	PrimaryExpression	0		4981327	1					
ANR	4981374	ElseStatement	else		4981327	0					
ANR	4981375	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	284:12:9226:9265	4981327	0	True				
ANR	4981376	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		4981327	0		|=			
ANR	4981377	UnaryOperationExpression	* dbbyte		4981327	0					
ANR	4981378	UnaryOperator	*		4981327	0					
ANR	4981379	Identifier	dbbyte		4981327	1					
ANR	4981380	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		4981327	1					
ANR	4981381	CastTarget	byte		4981327	0					
ANR	4981382	ShiftExpression	value << ( 8 - * dbit )		4981327	1		<<			
ANR	4981383	Identifier	value		4981327	0					
ANR	4981384	AdditiveExpression	8 - * dbit		4981327	1		-			
ANR	4981385	PrimaryExpression	8		4981327	0					
ANR	4981386	UnaryOperationExpression	* dbit		4981327	1					
ANR	4981387	UnaryOperator	*		4981327	0					
ANR	4981388	Identifier	dbit		4981327	1					
ANR	4981389	BreakStatement	break ;	285:8:9275:9280	4981327	2	True				
ANR	4981390	Label	case 1 :	286:4:9286:9292	4981327	3	True				
ANR	4981391	IfStatement	if ( * dbit ^= 4 )		4981327	4					
ANR	4981392	Condition	* dbit ^= 4	287:13:9307:9316	4981327	0	True				
ANR	4981393	AssignmentExpression	* dbit ^= 4		4981327	0		^=			
ANR	4981394	UnaryOperationExpression	* dbit		4981327	0					
ANR	4981395	UnaryOperator	*		4981327	0					
ANR	4981396	Identifier	dbit		4981327	1					
ANR	4981397	PrimaryExpression	4		4981327	1					
ANR	4981398	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	288:12:9332:9360	4981327	1	True				
ANR	4981399	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981327	0		=			
ANR	4981400	UnaryOperationExpression	* dbbyte		4981327	0					
ANR	4981401	UnaryOperator	*		4981327	0					
ANR	4981402	Identifier	dbbyte		4981327	1					
ANR	4981403	CastExpression	( byte ) ( value << 4 )		4981327	1					
ANR	4981404	CastTarget	byte		4981327	0					
ANR	4981405	ShiftExpression	value << 4		4981327	1		<<			
ANR	4981406	Identifier	value		4981327	0					
ANR	4981407	PrimaryExpression	4		4981327	1					
ANR	4981408	ElseStatement	else		4981327	0					
ANR	4981409	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	290:12:9387:9423	4981327	0	True				
ANR	4981410	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		4981327	0		=			
ANR	4981411	UnaryOperationExpression	* ( * dptr ) ++		4981327	0					
ANR	4981412	UnaryOperator	*		4981327	0					
ANR	4981413	PostIncDecOperationExpression	( * dptr ) ++		4981327	1					
ANR	4981414	UnaryOperationExpression	* dptr		4981327	0					
ANR	4981415	UnaryOperator	*		4981327	0					
ANR	4981416	Identifier	dptr		4981327	1					
ANR	4981417	IncDec	++		4981327	1					
ANR	4981418	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		4981327	1		|			
ANR	4981419	UnaryOperationExpression	* dbbyte		4981327	0					
ANR	4981420	UnaryOperator	*		4981327	0					
ANR	4981421	Identifier	dbbyte		4981327	1					
ANR	4981422	CastExpression	( byte ) value		4981327	1					
ANR	4981423	CastTarget	byte		4981327	0					
ANR	4981424	Identifier	value		4981327	1					
ANR	4981425	BreakStatement	break ;	291:8:9433:9438	4981327	5	True				
ANR	4981426	Label	case 3 :	292:4:9444:9450	4981327	6	True				
ANR	4981427	IfStatement	if ( * dbit ^= 4 )		4981327	7					
ANR	4981428	Condition	* dbit ^= 4	293:13:9465:9474	4981327	0	True				
ANR	4981429	AssignmentExpression	* dbit ^= 4		4981327	0		^=			
ANR	4981430	UnaryOperationExpression	* dbit		4981327	0					
ANR	4981431	UnaryOperator	*		4981327	0					
ANR	4981432	Identifier	dbit		4981327	1					
ANR	4981433	PrimaryExpression	4		4981327	1					
ANR	4981434	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	294:12:9490:9551	4981327	1	True				
ANR	4981435	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		4981327	0					
ANR	4981436	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		4981327	0		=			
ANR	4981437	UnaryOperationExpression	* ( * dptr ) ++		4981327	0					
ANR	4981438	UnaryOperator	*		4981327	0					
ANR	4981439	PostIncDecOperationExpression	( * dptr ) ++		4981327	1					
ANR	4981440	UnaryOperationExpression	* dptr		4981327	0					
ANR	4981441	UnaryOperator	*		4981327	0					
ANR	4981442	Identifier	dptr		4981327	1					
ANR	4981443	IncDec	++		4981327	1					
ANR	4981444	CastExpression	( byte ) ( value >> 4 )		4981327	1					
ANR	4981445	CastTarget	byte		4981327	0					
ANR	4981446	ShiftExpression	value >> 4		4981327	1		>>			
ANR	4981447	Identifier	value		4981327	0					
ANR	4981448	PrimaryExpression	4		4981327	1					
ANR	4981449	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981327	1		=			
ANR	4981450	UnaryOperationExpression	* dbbyte		4981327	0					
ANR	4981451	UnaryOperator	*		4981327	0					
ANR	4981452	Identifier	dbbyte		4981327	1					
ANR	4981453	CastExpression	( byte ) ( value << 4 )		4981327	1					
ANR	4981454	CastTarget	byte		4981327	0					
ANR	4981455	ShiftExpression	value << 4		4981327	1		<<			
ANR	4981456	Identifier	value		4981327	0					
ANR	4981457	PrimaryExpression	4		4981327	1					
ANR	4981458	ElseStatement	else		4981327	0					
ANR	4981459	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	296:10:9576:9653	4981327	0	True				
ANR	4981460	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4981327	0					
ANR	4981461	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		4981327	0		=			
ANR	4981462	UnaryOperationExpression	* ( * dptr )		4981327	0					
ANR	4981463	UnaryOperator	*		4981327	0					
ANR	4981464	UnaryOperationExpression	* dptr		4981327	1					
ANR	4981465	UnaryOperator	*		4981327	0					
ANR	4981466	Identifier	dptr		4981327	1					
ANR	4981467	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		4981327	1		|			
ANR	4981468	UnaryOperationExpression	* dbbyte		4981327	0					
ANR	4981469	UnaryOperator	*		4981327	0					
ANR	4981470	Identifier	dbbyte		4981327	1					
ANR	4981471	CastExpression	( byte ) ( value >> 8 )		4981327	1					
ANR	4981472	CastTarget	byte		4981327	0					
ANR	4981473	ShiftExpression	value >> 8		4981327	1		>>			
ANR	4981474	Identifier	value		4981327	0					
ANR	4981475	PrimaryExpression	8		4981327	1					
ANR	4981476	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4981327	1					
ANR	4981477	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		4981327	0		=			
ANR	4981478	ArrayIndexing	( * dptr ) [ 1 ]		4981327	0					
ANR	4981479	UnaryOperationExpression	* dptr		4981327	0					
ANR	4981480	UnaryOperator	*		4981327	0					
ANR	4981481	Identifier	dptr		4981327	1					
ANR	4981482	PrimaryExpression	1		4981327	1					
ANR	4981483	CastExpression	( byte ) value		4981327	1					
ANR	4981484	CastTarget	byte		4981327	0					
ANR	4981485	Identifier	value		4981327	1					
ANR	4981486	AssignmentExpression	* dptr += 2		4981327	1		+=			
ANR	4981487	UnaryOperationExpression	* dptr		4981327	0					
ANR	4981488	UnaryOperator	*		4981327	0					
ANR	4981489	Identifier	dptr		4981327	1					
ANR	4981490	PrimaryExpression	2		4981327	1					
ANR	4981491	BreakStatement	break ;	297:8:9663:9668	4981327	8	True				
ANR	4981492	Label	case 2 :	298:4:9674:9680	4981327	9	True				
ANR	4981493	ExpressionStatement	* ( * dptr ) ++ = ( byte ) value	299:8:9690:9714	4981327	10	True				
ANR	4981494	AssignmentExpression	* ( * dptr ) ++ = ( byte ) value		4981327	0		=			
ANR	4981495	UnaryOperationExpression	* ( * dptr ) ++		4981327	0					
ANR	4981496	UnaryOperator	*		4981327	0					
ANR	4981497	PostIncDecOperationExpression	( * dptr ) ++		4981327	1					
ANR	4981498	UnaryOperationExpression	* dptr		4981327	0					
ANR	4981499	UnaryOperator	*		4981327	0					
ANR	4981500	Identifier	dptr		4981327	1					
ANR	4981501	IncDec	++		4981327	1					
ANR	4981502	CastExpression	( byte ) value		4981327	1					
ANR	4981503	CastTarget	byte		4981327	0					
ANR	4981504	Identifier	value		4981327	1					
ANR	4981505	BreakStatement	break ;	300:8:9724:9729	4981327	11	True				
ANR	4981506	Label	default :	301:4:9735:9742	4981327	12	True				
ANR	4981507	Identifier	default		4981327	0					
ANR	4981508	ReturnStatement	return - 1 ;	302:10:9754:9763	4981327	13	True				
ANR	4981509	UnaryOperationExpression	- 1		4981327	0					
ANR	4981510	UnaryOperator	-		4981327	0					
ANR	4981511	PrimaryExpression	1		4981327	1					
ANR	4981512	ReturnStatement	return 0 ;	304:4:9775:9783	4981327	1	True				
ANR	4981513	PrimaryExpression	0		4981327	0					
ANR	4981514	Identifier	sample_store_next12		4981327	1					
ANR	4981515	ParameterList	"uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		4981327	2					
ANR	4981516	Parameter	uint value	277:38:8994:9003	4981327	0	True				
ANR	4981517	ParameterType	uint		4981327	0					
ANR	4981518	Identifier	value		4981327	1					
ANR	4981519	Parameter	byte * * dptr	277:50:9006:9016	4981327	1	True				
ANR	4981520	ParameterType	byte * *		4981327	0					
ANR	4981521	Identifier	dptr		4981327	1					
ANR	4981522	Parameter	int * dbit	277:63:9019:9027	4981327	2	True				
ANR	4981523	ParameterType	int *		4981327	0					
ANR	4981524	Identifier	dbit		4981327	1					
ANR	4981525	Parameter	int dbpv	277:74:9030:9037	4981327	3	True				
ANR	4981526	ParameterType	int		4981327	0					
ANR	4981527	Identifier	dbpv		4981327	1					
ANR	4981528	Parameter	byte * dbbyte	277:84:9040:9051	4981327	4	True				
ANR	4981529	ParameterType	byte *		4981327	0					
ANR	4981530	Identifier	dbbyte		4981327	1					
ANR	4981531	CFGEntryNode	ENTRY		4981327		True				
ANR	4981532	CFGExitNode	EXIT		4981327		True				
ANR	4981533	Symbol	* * dptr		4981327						
ANR	4981534	Symbol	dbbyte		4981327						
ANR	4981535	Symbol	* dbit		4981327						
ANR	4981536	Symbol	* ( * dptr ) ++		4981327						
ANR	4981537	Symbol	dptr		4981327						
ANR	4981538	Symbol	* ( * dptr )		4981327						
ANR	4981539	Symbol	dbit		4981327						
ANR	4981540	Symbol	dbpv		4981327						
ANR	4981541	Symbol	* dbbyte		4981327						
ANR	4981542	Symbol	value		4981327						
ANR	4981543	Symbol	* dptr		4981327						
ANR	4981544	Function	sample_store_next16	307:18:9806:10799							
ANR	4981545	FunctionDef	"sample_store_next16 (uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		4981544	0					
ANR	4981546	CompoundStatement		308:0:9886:10799	4981544	0					
ANR	4981547	SwitchStatement	switch ( dbpv >> 2 )		4981544	0					
ANR	4981548	Condition	dbpv >> 2	309:12:9900:9908	4981544	0	True				
ANR	4981549	ShiftExpression	dbpv >> 2		4981544	0		>>			
ANR	4981550	Identifier	dbpv		4981544	0					
ANR	4981551	PrimaryExpression	2		4981544	1					
ANR	4981552	CompoundStatement		2:24:25:25	4981544	1					
ANR	4981553	Label	case 0 :	310:8:9922:9928	4981544	0	True				
ANR	4981554	IfStatement	if ( ( * dbit += dbpv ) == 8 )		4981544	1					
ANR	4981555	Condition	( * dbit += dbpv ) == 8	311:17:9947:9966	4981544	0	True				
ANR	4981556	EqualityExpression	( * dbit += dbpv ) == 8		4981544	0		==			
ANR	4981557	AssignmentExpression	* dbit += dbpv		4981544	0		+=			
ANR	4981558	UnaryOperationExpression	* dbit		4981544	0					
ANR	4981559	UnaryOperator	*		4981544	0					
ANR	4981560	Identifier	dbit		4981544	1					
ANR	4981561	Identifier	dbpv		4981544	1					
ANR	4981562	PrimaryExpression	8		4981544	1					
ANR	4981563	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	312:15:9985:10043	4981544	1	True				
ANR	4981564	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		4981544	0					
ANR	4981565	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		4981544	0		=			
ANR	4981566	UnaryOperationExpression	* ( * dptr ) ++		4981544	0					
ANR	4981567	UnaryOperator	*		4981544	0					
ANR	4981568	PostIncDecOperationExpression	( * dptr ) ++		4981544	1					
ANR	4981569	UnaryOperationExpression	* dptr		4981544	0					
ANR	4981570	UnaryOperator	*		4981544	0					
ANR	4981571	Identifier	dptr		4981544	1					
ANR	4981572	IncDec	++		4981544	1					
ANR	4981573	InclusiveOrExpression	* dbbyte | ( byte ) value		4981544	1		|			
ANR	4981574	UnaryOperationExpression	* dbbyte		4981544	0					
ANR	4981575	UnaryOperator	*		4981544	0					
ANR	4981576	Identifier	dbbyte		4981544	1					
ANR	4981577	CastExpression	( byte ) value		4981544	1					
ANR	4981578	CastTarget	byte		4981544	0					
ANR	4981579	Identifier	value		4981544	1					
ANR	4981580	Expression	"* dbbyte = 0 , * dbit = 0"		4981544	1					
ANR	4981581	AssignmentExpression	* dbbyte = 0		4981544	0		=			
ANR	4981582	UnaryOperationExpression	* dbbyte		4981544	0					
ANR	4981583	UnaryOperator	*		4981544	0					
ANR	4981584	Identifier	dbbyte		4981544	1					
ANR	4981585	PrimaryExpression	0		4981544	1					
ANR	4981586	AssignmentExpression	* dbit = 0		4981544	1		=			
ANR	4981587	UnaryOperationExpression	* dbit		4981544	0					
ANR	4981588	UnaryOperator	*		4981544	0					
ANR	4981589	Identifier	dbit		4981544	1					
ANR	4981590	PrimaryExpression	0		4981544	1					
ANR	4981591	ElseStatement	else		4981544	0					
ANR	4981592	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	314:16:10078:10117	4981544	0	True				
ANR	4981593	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		4981544	0		|=			
ANR	4981594	UnaryOperationExpression	* dbbyte		4981544	0					
ANR	4981595	UnaryOperator	*		4981544	0					
ANR	4981596	Identifier	dbbyte		4981544	1					
ANR	4981597	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		4981544	1					
ANR	4981598	CastTarget	byte		4981544	0					
ANR	4981599	ShiftExpression	value << ( 8 - * dbit )		4981544	1		<<			
ANR	4981600	Identifier	value		4981544	0					
ANR	4981601	AdditiveExpression	8 - * dbit		4981544	1		-			
ANR	4981602	PrimaryExpression	8		4981544	0					
ANR	4981603	UnaryOperationExpression	* dbit		4981544	1					
ANR	4981604	UnaryOperator	*		4981544	0					
ANR	4981605	Identifier	dbit		4981544	1					
ANR	4981606	BreakStatement	break ;	315:12:10131:10136	4981544	2	True				
ANR	4981607	Label	case 1 :	316:8:10146:10152	4981544	3	True				
ANR	4981608	IfStatement	if ( * dbit ^= 4 )		4981544	4					
ANR	4981609	Condition	* dbit ^= 4	317:17:10171:10180	4981544	0	True				
ANR	4981610	AssignmentExpression	* dbit ^= 4		4981544	0		^=			
ANR	4981611	UnaryOperationExpression	* dbit		4981544	0					
ANR	4981612	UnaryOperator	*		4981544	0					
ANR	4981613	Identifier	dbit		4981544	1					
ANR	4981614	PrimaryExpression	4		4981544	1					
ANR	4981615	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	318:16:10200:10228	4981544	1	True				
ANR	4981616	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981544	0		=			
ANR	4981617	UnaryOperationExpression	* dbbyte		4981544	0					
ANR	4981618	UnaryOperator	*		4981544	0					
ANR	4981619	Identifier	dbbyte		4981544	1					
ANR	4981620	CastExpression	( byte ) ( value << 4 )		4981544	1					
ANR	4981621	CastTarget	byte		4981544	0					
ANR	4981622	ShiftExpression	value << 4		4981544	1		<<			
ANR	4981623	Identifier	value		4981544	0					
ANR	4981624	PrimaryExpression	4		4981544	1					
ANR	4981625	ElseStatement	else		4981544	0					
ANR	4981626	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	320:16:10263:10299	4981544	0	True				
ANR	4981627	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		4981544	0		=			
ANR	4981628	UnaryOperationExpression	* ( * dptr ) ++		4981544	0					
ANR	4981629	UnaryOperator	*		4981544	0					
ANR	4981630	PostIncDecOperationExpression	( * dptr ) ++		4981544	1					
ANR	4981631	UnaryOperationExpression	* dptr		4981544	0					
ANR	4981632	UnaryOperator	*		4981544	0					
ANR	4981633	Identifier	dptr		4981544	1					
ANR	4981634	IncDec	++		4981544	1					
ANR	4981635	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		4981544	1		|			
ANR	4981636	UnaryOperationExpression	* dbbyte		4981544	0					
ANR	4981637	UnaryOperator	*		4981544	0					
ANR	4981638	Identifier	dbbyte		4981544	1					
ANR	4981639	CastExpression	( byte ) value		4981544	1					
ANR	4981640	CastTarget	byte		4981544	0					
ANR	4981641	Identifier	value		4981544	1					
ANR	4981642	BreakStatement	break ;	321:12:10313:10318	4981544	5	True				
ANR	4981643	Label	case 3 :	322:8:10328:10334	4981544	6	True				
ANR	4981644	IfStatement	if ( * dbit ^= 4 )		4981544	7					
ANR	4981645	Condition	* dbit ^= 4	323:17:10353:10362	4981544	0	True				
ANR	4981646	AssignmentExpression	* dbit ^= 4		4981544	0		^=			
ANR	4981647	UnaryOperationExpression	* dbit		4981544	0					
ANR	4981648	UnaryOperator	*		4981544	0					
ANR	4981649	Identifier	dbit		4981544	1					
ANR	4981650	PrimaryExpression	4		4981544	1					
ANR	4981651	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	324:16:10382:10443	4981544	1	True				
ANR	4981652	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		4981544	0					
ANR	4981653	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		4981544	0		=			
ANR	4981654	UnaryOperationExpression	* ( * dptr ) ++		4981544	0					
ANR	4981655	UnaryOperator	*		4981544	0					
ANR	4981656	PostIncDecOperationExpression	( * dptr ) ++		4981544	1					
ANR	4981657	UnaryOperationExpression	* dptr		4981544	0					
ANR	4981658	UnaryOperator	*		4981544	0					
ANR	4981659	Identifier	dptr		4981544	1					
ANR	4981660	IncDec	++		4981544	1					
ANR	4981661	CastExpression	( byte ) ( value >> 4 )		4981544	1					
ANR	4981662	CastTarget	byte		4981544	0					
ANR	4981663	ShiftExpression	value >> 4		4981544	1		>>			
ANR	4981664	Identifier	value		4981544	0					
ANR	4981665	PrimaryExpression	4		4981544	1					
ANR	4981666	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981544	1		=			
ANR	4981667	UnaryOperationExpression	* dbbyte		4981544	0					
ANR	4981668	UnaryOperator	*		4981544	0					
ANR	4981669	Identifier	dbbyte		4981544	1					
ANR	4981670	CastExpression	( byte ) ( value << 4 )		4981544	1					
ANR	4981671	CastTarget	byte		4981544	0					
ANR	4981672	ShiftExpression	value << 4		4981544	1		<<			
ANR	4981673	Identifier	value		4981544	0					
ANR	4981674	PrimaryExpression	4		4981544	1					
ANR	4981675	ElseStatement	else		4981544	0					
ANR	4981676	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	326:14:10476:10553	4981544	0	True				
ANR	4981677	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4981544	0					
ANR	4981678	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		4981544	0		=			
ANR	4981679	UnaryOperationExpression	* ( * dptr )		4981544	0					
ANR	4981680	UnaryOperator	*		4981544	0					
ANR	4981681	UnaryOperationExpression	* dptr		4981544	1					
ANR	4981682	UnaryOperator	*		4981544	0					
ANR	4981683	Identifier	dptr		4981544	1					
ANR	4981684	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		4981544	1		|			
ANR	4981685	UnaryOperationExpression	* dbbyte		4981544	0					
ANR	4981686	UnaryOperator	*		4981544	0					
ANR	4981687	Identifier	dbbyte		4981544	1					
ANR	4981688	CastExpression	( byte ) ( value >> 8 )		4981544	1					
ANR	4981689	CastTarget	byte		4981544	0					
ANR	4981690	ShiftExpression	value >> 8		4981544	1		>>			
ANR	4981691	Identifier	value		4981544	0					
ANR	4981692	PrimaryExpression	8		4981544	1					
ANR	4981693	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4981544	1					
ANR	4981694	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		4981544	0		=			
ANR	4981695	ArrayIndexing	( * dptr ) [ 1 ]		4981544	0					
ANR	4981696	UnaryOperationExpression	* dptr		4981544	0					
ANR	4981697	UnaryOperator	*		4981544	0					
ANR	4981698	Identifier	dptr		4981544	1					
ANR	4981699	PrimaryExpression	1		4981544	1					
ANR	4981700	CastExpression	( byte ) value		4981544	1					
ANR	4981701	CastTarget	byte		4981544	0					
ANR	4981702	Identifier	value		4981544	1					
ANR	4981703	AssignmentExpression	* dptr += 2		4981544	1		+=			
ANR	4981704	UnaryOperationExpression	* dptr		4981544	0					
ANR	4981705	UnaryOperator	*		4981544	0					
ANR	4981706	Identifier	dptr		4981544	1					
ANR	4981707	PrimaryExpression	2		4981544	1					
ANR	4981708	BreakStatement	break ;	327:12:10567:10572	4981544	8	True				
ANR	4981709	Label	case 4 :	328:8:10582:10588	4981544	9	True				
ANR	4981710	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 8 )	329:12:10602:10633	4981544	10	True				
ANR	4981711	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 8 )		4981544	0		=			
ANR	4981712	UnaryOperationExpression	* ( * dptr ) ++		4981544	0					
ANR	4981713	UnaryOperator	*		4981544	0					
ANR	4981714	PostIncDecOperationExpression	( * dptr ) ++		4981544	1					
ANR	4981715	UnaryOperationExpression	* dptr		4981544	0					
ANR	4981716	UnaryOperator	*		4981544	0					
ANR	4981717	Identifier	dptr		4981544	1					
ANR	4981718	IncDec	++		4981544	1					
ANR	4981719	CastExpression	( byte ) ( value >> 8 )		4981544	1					
ANR	4981720	CastTarget	byte		4981544	0					
ANR	4981721	ShiftExpression	value >> 8		4981544	1		>>			
ANR	4981722	Identifier	value		4981544	0					
ANR	4981723	PrimaryExpression	8		4981544	1					
ANR	4981724	Label	case 2 :	331:8:10674:10680	4981544	11	True				
ANR	4981725	ExpressionStatement	* ( * dptr ) ++ = ( byte ) value	332:12:10694:10718	4981544	12	True				
ANR	4981726	AssignmentExpression	* ( * dptr ) ++ = ( byte ) value		4981544	0		=			
ANR	4981727	UnaryOperationExpression	* ( * dptr ) ++		4981544	0					
ANR	4981728	UnaryOperator	*		4981544	0					
ANR	4981729	PostIncDecOperationExpression	( * dptr ) ++		4981544	1					
ANR	4981730	UnaryOperationExpression	* dptr		4981544	0					
ANR	4981731	UnaryOperator	*		4981544	0					
ANR	4981732	Identifier	dptr		4981544	1					
ANR	4981733	IncDec	++		4981544	1					
ANR	4981734	CastExpression	( byte ) value		4981544	1					
ANR	4981735	CastTarget	byte		4981544	0					
ANR	4981736	Identifier	value		4981544	1					
ANR	4981737	BreakStatement	break ;	333:12:10732:10737	4981544	13	True				
ANR	4981738	Label	default :	334:8:10747:10754	4981544	14	True				
ANR	4981739	Identifier	default		4981544	0					
ANR	4981740	ReturnStatement	return - 1 ;	335:12:10768:10777	4981544	15	True				
ANR	4981741	UnaryOperationExpression	- 1		4981544	0					
ANR	4981742	UnaryOperator	-		4981544	0					
ANR	4981743	PrimaryExpression	1		4981544	1					
ANR	4981744	ReturnStatement	return 0 ;	337:4:10789:10797	4981544	1	True				
ANR	4981745	PrimaryExpression	0		4981544	0					
ANR	4981746	Identifier	sample_store_next16		4981544	1					
ANR	4981747	ParameterList	"uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		4981544	2					
ANR	4981748	Parameter	uint value	307:38:9826:9835	4981544	0	True				
ANR	4981749	ParameterType	uint		4981544	0					
ANR	4981750	Identifier	value		4981544	1					
ANR	4981751	Parameter	byte * * dptr	307:50:9838:9848	4981544	1	True				
ANR	4981752	ParameterType	byte * *		4981544	0					
ANR	4981753	Identifier	dptr		4981544	1					
ANR	4981754	Parameter	int * dbit	307:63:9851:9859	4981544	2	True				
ANR	4981755	ParameterType	int *		4981544	0					
ANR	4981756	Identifier	dbit		4981544	1					
ANR	4981757	Parameter	int dbpv	307:74:9862:9869	4981544	3	True				
ANR	4981758	ParameterType	int		4981544	0					
ANR	4981759	Identifier	dbpv		4981544	1					
ANR	4981760	Parameter	byte * dbbyte	307:84:9872:9883	4981544	4	True				
ANR	4981761	ParameterType	byte *		4981544	0					
ANR	4981762	Identifier	dbbyte		4981544	1					
ANR	4981763	CFGEntryNode	ENTRY		4981544		True				
ANR	4981764	CFGExitNode	EXIT		4981544		True				
ANR	4981765	Symbol	* * dptr		4981544						
ANR	4981766	Symbol	dbbyte		4981544						
ANR	4981767	Symbol	* dbit		4981544						
ANR	4981768	Symbol	* ( * dptr ) ++		4981544						
ANR	4981769	Symbol	dptr		4981544						
ANR	4981770	Symbol	* ( * dptr )		4981544						
ANR	4981771	Symbol	dbit		4981544						
ANR	4981772	Symbol	dbpv		4981544						
ANR	4981773	Symbol	* dbbyte		4981544						
ANR	4981774	Symbol	value		4981544						
ANR	4981775	Symbol	* dptr		4981544						
ANR	4981776	Function	sample_store_next32	340:18:10820:11959							
ANR	4981777	FunctionDef	"sample_store_next32 (uint32_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		4981776	0					
ANR	4981778	CompoundStatement		341:0:10904:11959	4981776	0					
ANR	4981779	SwitchStatement	switch ( dbpv >> 2 )		4981776	0					
ANR	4981780	Condition	dbpv >> 2	342:12:10918:10926	4981776	0	True				
ANR	4981781	ShiftExpression	dbpv >> 2		4981776	0		>>			
ANR	4981782	Identifier	dbpv		4981776	0					
ANR	4981783	PrimaryExpression	2		4981776	1					
ANR	4981784	CompoundStatement		2:24:25:25	4981776	1					
ANR	4981785	Label	case 0 :	343:8:10940:10946	4981776	0	True				
ANR	4981786	IfStatement	if ( ( * dbit += dbpv ) == 8 )		4981776	1					
ANR	4981787	Condition	( * dbit += dbpv ) == 8	344:17:10966:10985	4981776	0	True				
ANR	4981788	EqualityExpression	( * dbit += dbpv ) == 8		4981776	0		==			
ANR	4981789	AssignmentExpression	* dbit += dbpv		4981776	0		+=			
ANR	4981790	UnaryOperationExpression	* dbit		4981776	0					
ANR	4981791	UnaryOperator	*		4981776	0					
ANR	4981792	Identifier	dbit		4981776	1					
ANR	4981793	Identifier	dbpv		4981776	1					
ANR	4981794	PrimaryExpression	8		4981776	1					
ANR	4981795	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	345:15:11004:11062	4981776	1	True				
ANR	4981796	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		4981776	0					
ANR	4981797	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		4981776	0		=			
ANR	4981798	UnaryOperationExpression	* ( * dptr ) ++		4981776	0					
ANR	4981799	UnaryOperator	*		4981776	0					
ANR	4981800	PostIncDecOperationExpression	( * dptr ) ++		4981776	1					
ANR	4981801	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981802	UnaryOperator	*		4981776	0					
ANR	4981803	Identifier	dptr		4981776	1					
ANR	4981804	IncDec	++		4981776	1					
ANR	4981805	InclusiveOrExpression	* dbbyte | ( byte ) value		4981776	1		|			
ANR	4981806	UnaryOperationExpression	* dbbyte		4981776	0					
ANR	4981807	UnaryOperator	*		4981776	0					
ANR	4981808	Identifier	dbbyte		4981776	1					
ANR	4981809	CastExpression	( byte ) value		4981776	1					
ANR	4981810	CastTarget	byte		4981776	0					
ANR	4981811	Identifier	value		4981776	1					
ANR	4981812	Expression	"* dbbyte = 0 , * dbit = 0"		4981776	1					
ANR	4981813	AssignmentExpression	* dbbyte = 0		4981776	0		=			
ANR	4981814	UnaryOperationExpression	* dbbyte		4981776	0					
ANR	4981815	UnaryOperator	*		4981776	0					
ANR	4981816	Identifier	dbbyte		4981776	1					
ANR	4981817	PrimaryExpression	0		4981776	1					
ANR	4981818	AssignmentExpression	* dbit = 0		4981776	1		=			
ANR	4981819	UnaryOperationExpression	* dbit		4981776	0					
ANR	4981820	UnaryOperator	*		4981776	0					
ANR	4981821	Identifier	dbit		4981776	1					
ANR	4981822	PrimaryExpression	0		4981776	1					
ANR	4981823	ElseStatement	else		4981776	0					
ANR	4981824	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	347:16:11098:11137	4981776	0	True				
ANR	4981825	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		4981776	0		|=			
ANR	4981826	UnaryOperationExpression	* dbbyte		4981776	0					
ANR	4981827	UnaryOperator	*		4981776	0					
ANR	4981828	Identifier	dbbyte		4981776	1					
ANR	4981829	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		4981776	1					
ANR	4981830	CastTarget	byte		4981776	0					
ANR	4981831	ShiftExpression	value << ( 8 - * dbit )		4981776	1		<<			
ANR	4981832	Identifier	value		4981776	0					
ANR	4981833	AdditiveExpression	8 - * dbit		4981776	1		-			
ANR	4981834	PrimaryExpression	8		4981776	0					
ANR	4981835	UnaryOperationExpression	* dbit		4981776	1					
ANR	4981836	UnaryOperator	*		4981776	0					
ANR	4981837	Identifier	dbit		4981776	1					
ANR	4981838	BreakStatement	break ;	348:12:11151:11156	4981776	2	True				
ANR	4981839	Label	case 1 :	349:8:11166:11172	4981776	3	True				
ANR	4981840	IfStatement	if ( * dbit ^= 4 )		4981776	4					
ANR	4981841	Condition	* dbit ^= 4	350:17:11191:11200	4981776	0	True				
ANR	4981842	AssignmentExpression	* dbit ^= 4		4981776	0		^=			
ANR	4981843	UnaryOperationExpression	* dbit		4981776	0					
ANR	4981844	UnaryOperator	*		4981776	0					
ANR	4981845	Identifier	dbit		4981776	1					
ANR	4981846	PrimaryExpression	4		4981776	1					
ANR	4981847	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	351:16:11220:11248	4981776	1	True				
ANR	4981848	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981776	0		=			
ANR	4981849	UnaryOperationExpression	* dbbyte		4981776	0					
ANR	4981850	UnaryOperator	*		4981776	0					
ANR	4981851	Identifier	dbbyte		4981776	1					
ANR	4981852	CastExpression	( byte ) ( value << 4 )		4981776	1					
ANR	4981853	CastTarget	byte		4981776	0					
ANR	4981854	ShiftExpression	value << 4		4981776	1		<<			
ANR	4981855	Identifier	value		4981776	0					
ANR	4981856	PrimaryExpression	4		4981776	1					
ANR	4981857	ElseStatement	else		4981776	0					
ANR	4981858	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	353:16:11283:11319	4981776	0	True				
ANR	4981859	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		4981776	0		=			
ANR	4981860	UnaryOperationExpression	* ( * dptr ) ++		4981776	0					
ANR	4981861	UnaryOperator	*		4981776	0					
ANR	4981862	PostIncDecOperationExpression	( * dptr ) ++		4981776	1					
ANR	4981863	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981864	UnaryOperator	*		4981776	0					
ANR	4981865	Identifier	dptr		4981776	1					
ANR	4981866	IncDec	++		4981776	1					
ANR	4981867	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		4981776	1		|			
ANR	4981868	UnaryOperationExpression	* dbbyte		4981776	0					
ANR	4981869	UnaryOperator	*		4981776	0					
ANR	4981870	Identifier	dbbyte		4981776	1					
ANR	4981871	CastExpression	( byte ) value		4981776	1					
ANR	4981872	CastTarget	byte		4981776	0					
ANR	4981873	Identifier	value		4981776	1					
ANR	4981874	BreakStatement	break ;	354:12:11333:11338	4981776	5	True				
ANR	4981875	Label	case 3 :	355:8:11348:11354	4981776	6	True				
ANR	4981876	IfStatement	if ( * dbit ^= 4 )		4981776	7					
ANR	4981877	Condition	* dbit ^= 4	356:17:11373:11382	4981776	0	True				
ANR	4981878	AssignmentExpression	* dbit ^= 4		4981776	0		^=			
ANR	4981879	UnaryOperationExpression	* dbit		4981776	0					
ANR	4981880	UnaryOperator	*		4981776	0					
ANR	4981881	Identifier	dbit		4981776	1					
ANR	4981882	PrimaryExpression	4		4981776	1					
ANR	4981883	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	357:16:11402:11463	4981776	1	True				
ANR	4981884	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		4981776	0					
ANR	4981885	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		4981776	0		=			
ANR	4981886	UnaryOperationExpression	* ( * dptr ) ++		4981776	0					
ANR	4981887	UnaryOperator	*		4981776	0					
ANR	4981888	PostIncDecOperationExpression	( * dptr ) ++		4981776	1					
ANR	4981889	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981890	UnaryOperator	*		4981776	0					
ANR	4981891	Identifier	dptr		4981776	1					
ANR	4981892	IncDec	++		4981776	1					
ANR	4981893	CastExpression	( byte ) ( value >> 4 )		4981776	1					
ANR	4981894	CastTarget	byte		4981776	0					
ANR	4981895	ShiftExpression	value >> 4		4981776	1		>>			
ANR	4981896	Identifier	value		4981776	0					
ANR	4981897	PrimaryExpression	4		4981776	1					
ANR	4981898	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4981776	1		=			
ANR	4981899	UnaryOperationExpression	* dbbyte		4981776	0					
ANR	4981900	UnaryOperator	*		4981776	0					
ANR	4981901	Identifier	dbbyte		4981776	1					
ANR	4981902	CastExpression	( byte ) ( value << 4 )		4981776	1					
ANR	4981903	CastTarget	byte		4981776	0					
ANR	4981904	ShiftExpression	value << 4		4981776	1		<<			
ANR	4981905	Identifier	value		4981776	0					
ANR	4981906	PrimaryExpression	4		4981776	1					
ANR	4981907	ElseStatement	else		4981776	0					
ANR	4981908	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	359:14:11496:11573	4981776	0	True				
ANR	4981909	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4981776	0					
ANR	4981910	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		4981776	0		=			
ANR	4981911	UnaryOperationExpression	* ( * dptr )		4981776	0					
ANR	4981912	UnaryOperator	*		4981776	0					
ANR	4981913	UnaryOperationExpression	* dptr		4981776	1					
ANR	4981914	UnaryOperator	*		4981776	0					
ANR	4981915	Identifier	dptr		4981776	1					
ANR	4981916	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		4981776	1		|			
ANR	4981917	UnaryOperationExpression	* dbbyte		4981776	0					
ANR	4981918	UnaryOperator	*		4981776	0					
ANR	4981919	Identifier	dbbyte		4981776	1					
ANR	4981920	CastExpression	( byte ) ( value >> 8 )		4981776	1					
ANR	4981921	CastTarget	byte		4981776	0					
ANR	4981922	ShiftExpression	value >> 8		4981776	1		>>			
ANR	4981923	Identifier	value		4981776	0					
ANR	4981924	PrimaryExpression	8		4981776	1					
ANR	4981925	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4981776	1					
ANR	4981926	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		4981776	0		=			
ANR	4981927	ArrayIndexing	( * dptr ) [ 1 ]		4981776	0					
ANR	4981928	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981929	UnaryOperator	*		4981776	0					
ANR	4981930	Identifier	dptr		4981776	1					
ANR	4981931	PrimaryExpression	1		4981776	1					
ANR	4981932	CastExpression	( byte ) value		4981776	1					
ANR	4981933	CastTarget	byte		4981776	0					
ANR	4981934	Identifier	value		4981776	1					
ANR	4981935	AssignmentExpression	* dptr += 2		4981776	1		+=			
ANR	4981936	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981937	UnaryOperator	*		4981776	0					
ANR	4981938	Identifier	dptr		4981776	1					
ANR	4981939	PrimaryExpression	2		4981776	1					
ANR	4981940	BreakStatement	break ;	360:12:11587:11592	4981776	8	True				
ANR	4981941	Label	case 8 :	361:8:11602:11608	4981776	9	True				
ANR	4981942	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 24 )	361:16:11610:11642	4981776	10	True				
ANR	4981943	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 24 )		4981776	0		=			
ANR	4981944	UnaryOperationExpression	* ( * dptr ) ++		4981776	0					
ANR	4981945	UnaryOperator	*		4981776	0					
ANR	4981946	PostIncDecOperationExpression	( * dptr ) ++		4981776	1					
ANR	4981947	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981948	UnaryOperator	*		4981776	0					
ANR	4981949	Identifier	dptr		4981776	1					
ANR	4981950	IncDec	++		4981776	1					
ANR	4981951	CastExpression	( byte ) ( value >> 24 )		4981776	1					
ANR	4981952	CastTarget	byte		4981776	0					
ANR	4981953	ShiftExpression	value >> 24		4981776	1		>>			
ANR	4981954	Identifier	value		4981776	0					
ANR	4981955	PrimaryExpression	24		4981776	1					
ANR	4981956	Label	case 6 :	363:8:11683:11689	4981776	11	True				
ANR	4981957	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 16 )	363:16:11691:11723	4981776	12	True				
ANR	4981958	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 16 )		4981776	0		=			
ANR	4981959	UnaryOperationExpression	* ( * dptr ) ++		4981776	0					
ANR	4981960	UnaryOperator	*		4981776	0					
ANR	4981961	PostIncDecOperationExpression	( * dptr ) ++		4981776	1					
ANR	4981962	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981963	UnaryOperator	*		4981776	0					
ANR	4981964	Identifier	dptr		4981776	1					
ANR	4981965	IncDec	++		4981776	1					
ANR	4981966	CastExpression	( byte ) ( value >> 16 )		4981776	1					
ANR	4981967	CastTarget	byte		4981776	0					
ANR	4981968	ShiftExpression	value >> 16		4981776	1		>>			
ANR	4981969	Identifier	value		4981776	0					
ANR	4981970	PrimaryExpression	16		4981776	1					
ANR	4981971	Label	case 4 :	365:8:11764:11770	4981776	13	True				
ANR	4981972	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 8 )	365:16:11772:11803	4981776	14	True				
ANR	4981973	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 8 )		4981776	0		=			
ANR	4981974	UnaryOperationExpression	* ( * dptr ) ++		4981776	0					
ANR	4981975	UnaryOperator	*		4981776	0					
ANR	4981976	PostIncDecOperationExpression	( * dptr ) ++		4981776	1					
ANR	4981977	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981978	UnaryOperator	*		4981776	0					
ANR	4981979	Identifier	dptr		4981776	1					
ANR	4981980	IncDec	++		4981776	1					
ANR	4981981	CastExpression	( byte ) ( value >> 8 )		4981776	1					
ANR	4981982	CastTarget	byte		4981776	0					
ANR	4981983	ShiftExpression	value >> 8		4981776	1		>>			
ANR	4981984	Identifier	value		4981776	0					
ANR	4981985	PrimaryExpression	8		4981776	1					
ANR	4981986	Label	case 2 :	367:8:11844:11850	4981776	15	True				
ANR	4981987	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value )	367:16:11852:11878	4981776	16	True				
ANR	4981988	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value )		4981776	0		=			
ANR	4981989	UnaryOperationExpression	* ( * dptr ) ++		4981776	0					
ANR	4981990	UnaryOperator	*		4981776	0					
ANR	4981991	PostIncDecOperationExpression	( * dptr ) ++		4981776	1					
ANR	4981992	UnaryOperationExpression	* dptr		4981776	0					
ANR	4981993	UnaryOperator	*		4981776	0					
ANR	4981994	Identifier	dptr		4981776	1					
ANR	4981995	IncDec	++		4981776	1					
ANR	4981996	CastExpression	( byte ) ( value )		4981776	1					
ANR	4981997	CastTarget	byte		4981776	0					
ANR	4981998	Identifier	value		4981776	1					
ANR	4981999	BreakStatement	break ;	368:12:11892:11897	4981776	17	True				
ANR	4982000	Label	default :	369:8:11907:11914	4981776	18	True				
ANR	4982001	Identifier	default		4981776	0					
ANR	4982002	ReturnStatement	return - 1 ;	370:12:11928:11937	4981776	19	True				
ANR	4982003	UnaryOperationExpression	- 1		4981776	0					
ANR	4982004	UnaryOperator	-		4981776	0					
ANR	4982005	PrimaryExpression	1		4981776	1					
ANR	4982006	ReturnStatement	return 0 ;	372:4:11949:11957	4981776	1	True				
ANR	4982007	PrimaryExpression	0		4981776	0					
ANR	4982008	Identifier	sample_store_next32		4981776	1					
ANR	4982009	ParameterList	"uint32_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		4981776	2					
ANR	4982010	Parameter	uint32_t value	340:38:10840:10853	4981776	0	True				
ANR	4982011	ParameterType	uint32_t		4981776	0					
ANR	4982012	Identifier	value		4981776	1					
ANR	4982013	Parameter	byte * * dptr	340:54:10856:10866	4981776	1	True				
ANR	4982014	ParameterType	byte * *		4981776	0					
ANR	4982015	Identifier	dptr		4981776	1					
ANR	4982016	Parameter	int * dbit	340:67:10869:10877	4981776	2	True				
ANR	4982017	ParameterType	int *		4981776	0					
ANR	4982018	Identifier	dbit		4981776	1					
ANR	4982019	Parameter	int dbpv	340:78:10880:10887	4981776	3	True				
ANR	4982020	ParameterType	int		4981776	0					
ANR	4982021	Identifier	dbpv		4981776	1					
ANR	4982022	Parameter	byte * dbbyte	340:88:10890:10901	4981776	4	True				
ANR	4982023	ParameterType	byte *		4981776	0					
ANR	4982024	Identifier	dbbyte		4981776	1					
ANR	4982025	CFGEntryNode	ENTRY		4981776		True				
ANR	4982026	CFGExitNode	EXIT		4981776		True				
ANR	4982027	Symbol	* * dptr		4981776						
ANR	4982028	Symbol	dbbyte		4981776						
ANR	4982029	Symbol	* dbit		4981776						
ANR	4982030	Symbol	* ( * dptr ) ++		4981776						
ANR	4982031	Symbol	dptr		4981776						
ANR	4982032	Symbol	* ( * dptr )		4981776						
ANR	4982033	Symbol	dbit		4981776						
ANR	4982034	Symbol	dbpv		4981776						
ANR	4982035	Symbol	* dbbyte		4981776						
ANR	4982036	Symbol	value		4981776						
ANR	4982037	Symbol	* dptr		4981776						
ANR	4982038	Function	sample_store_next64	375:18:11980:13272							
ANR	4982039	FunctionDef	"sample_store_next64 (uint64_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		4982038	0					
ANR	4982040	CompoundStatement		376:0:12064:13272	4982038	0					
ANR	4982041	SwitchStatement	switch ( dbpv >> 2 )		4982038	0					
ANR	4982042	Condition	dbpv >> 2	377:12:12078:12086	4982038	0	True				
ANR	4982043	ShiftExpression	dbpv >> 2		4982038	0		>>			
ANR	4982044	Identifier	dbpv		4982038	0					
ANR	4982045	PrimaryExpression	2		4982038	1					
ANR	4982046	CompoundStatement		2:24:25:25	4982038	1					
ANR	4982047	Label	case 0 :	378:8:12100:12106	4982038	0	True				
ANR	4982048	IfStatement	if ( ( * dbit += dbpv ) == 8 )		4982038	1					
ANR	4982049	Condition	( * dbit += dbpv ) == 8	379:17:12125:12144	4982038	0	True				
ANR	4982050	EqualityExpression	( * dbit += dbpv ) == 8		4982038	0		==			
ANR	4982051	AssignmentExpression	* dbit += dbpv		4982038	0		+=			
ANR	4982052	UnaryOperationExpression	* dbit		4982038	0					
ANR	4982053	UnaryOperator	*		4982038	0					
ANR	4982054	Identifier	dbit		4982038	1					
ANR	4982055	Identifier	dbpv		4982038	1					
ANR	4982056	PrimaryExpression	8		4982038	1					
ANR	4982057	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	380:15:12163:12221	4982038	1	True				
ANR	4982058	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		4982038	0					
ANR	4982059	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		4982038	0		=			
ANR	4982060	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982061	UnaryOperator	*		4982038	0					
ANR	4982062	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982063	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982064	UnaryOperator	*		4982038	0					
ANR	4982065	Identifier	dptr		4982038	1					
ANR	4982066	IncDec	++		4982038	1					
ANR	4982067	InclusiveOrExpression	* dbbyte | ( byte ) value		4982038	1		|			
ANR	4982068	UnaryOperationExpression	* dbbyte		4982038	0					
ANR	4982069	UnaryOperator	*		4982038	0					
ANR	4982070	Identifier	dbbyte		4982038	1					
ANR	4982071	CastExpression	( byte ) value		4982038	1					
ANR	4982072	CastTarget	byte		4982038	0					
ANR	4982073	Identifier	value		4982038	1					
ANR	4982074	Expression	"* dbbyte = 0 , * dbit = 0"		4982038	1					
ANR	4982075	AssignmentExpression	* dbbyte = 0		4982038	0		=			
ANR	4982076	UnaryOperationExpression	* dbbyte		4982038	0					
ANR	4982077	UnaryOperator	*		4982038	0					
ANR	4982078	Identifier	dbbyte		4982038	1					
ANR	4982079	PrimaryExpression	0		4982038	1					
ANR	4982080	AssignmentExpression	* dbit = 0		4982038	1		=			
ANR	4982081	UnaryOperationExpression	* dbit		4982038	0					
ANR	4982082	UnaryOperator	*		4982038	0					
ANR	4982083	Identifier	dbit		4982038	1					
ANR	4982084	PrimaryExpression	0		4982038	1					
ANR	4982085	ElseStatement	else		4982038	0					
ANR	4982086	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	381:17:12240:12279	4982038	0	True				
ANR	4982087	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		4982038	0		|=			
ANR	4982088	UnaryOperationExpression	* dbbyte		4982038	0					
ANR	4982089	UnaryOperator	*		4982038	0					
ANR	4982090	Identifier	dbbyte		4982038	1					
ANR	4982091	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		4982038	1					
ANR	4982092	CastTarget	byte		4982038	0					
ANR	4982093	ShiftExpression	value << ( 8 - * dbit )		4982038	1		<<			
ANR	4982094	Identifier	value		4982038	0					
ANR	4982095	AdditiveExpression	8 - * dbit		4982038	1		-			
ANR	4982096	PrimaryExpression	8		4982038	0					
ANR	4982097	UnaryOperationExpression	* dbit		4982038	1					
ANR	4982098	UnaryOperator	*		4982038	0					
ANR	4982099	Identifier	dbit		4982038	1					
ANR	4982100	BreakStatement	break ;	382:12:12293:12298	4982038	2	True				
ANR	4982101	Label	case 1 :	383:8:12308:12314	4982038	3	True				
ANR	4982102	IfStatement	if ( * dbit ^= 4 )		4982038	4					
ANR	4982103	Condition	* dbit ^= 4	384:17:12333:12342	4982038	0	True				
ANR	4982104	AssignmentExpression	* dbit ^= 4		4982038	0		^=			
ANR	4982105	UnaryOperationExpression	* dbit		4982038	0					
ANR	4982106	UnaryOperator	*		4982038	0					
ANR	4982107	Identifier	dbit		4982038	1					
ANR	4982108	PrimaryExpression	4		4982038	1					
ANR	4982109	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	384:30:12346:12374	4982038	1	True				
ANR	4982110	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4982038	0		=			
ANR	4982111	UnaryOperationExpression	* dbbyte		4982038	0					
ANR	4982112	UnaryOperator	*		4982038	0					
ANR	4982113	Identifier	dbbyte		4982038	1					
ANR	4982114	CastExpression	( byte ) ( value << 4 )		4982038	1					
ANR	4982115	CastTarget	byte		4982038	0					
ANR	4982116	ShiftExpression	value << 4		4982038	1		<<			
ANR	4982117	Identifier	value		4982038	0					
ANR	4982118	PrimaryExpression	4		4982038	1					
ANR	4982119	ElseStatement	else		4982038	0					
ANR	4982120	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	385:17:12393:12429	4982038	0	True				
ANR	4982121	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		4982038	0		=			
ANR	4982122	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982123	UnaryOperator	*		4982038	0					
ANR	4982124	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982125	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982126	UnaryOperator	*		4982038	0					
ANR	4982127	Identifier	dptr		4982038	1					
ANR	4982128	IncDec	++		4982038	1					
ANR	4982129	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		4982038	1		|			
ANR	4982130	UnaryOperationExpression	* dbbyte		4982038	0					
ANR	4982131	UnaryOperator	*		4982038	0					
ANR	4982132	Identifier	dbbyte		4982038	1					
ANR	4982133	CastExpression	( byte ) value		4982038	1					
ANR	4982134	CastTarget	byte		4982038	0					
ANR	4982135	Identifier	value		4982038	1					
ANR	4982136	BreakStatement	break ;	386:12:12443:12448	4982038	5	True				
ANR	4982137	Label	case 3 :	387:8:12458:12464	4982038	6	True				
ANR	4982138	IfStatement	if ( * dbit ^= 4 )		4982038	7					
ANR	4982139	Condition	* dbit ^= 4	388:17:12483:12492	4982038	0	True				
ANR	4982140	AssignmentExpression	* dbit ^= 4		4982038	0		^=			
ANR	4982141	UnaryOperationExpression	* dbit		4982038	0					
ANR	4982142	UnaryOperator	*		4982038	0					
ANR	4982143	Identifier	dbit		4982038	1					
ANR	4982144	PrimaryExpression	4		4982038	1					
ANR	4982145	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	388:30:12496:12557	4982038	1	True				
ANR	4982146	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		4982038	0					
ANR	4982147	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		4982038	0		=			
ANR	4982148	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982149	UnaryOperator	*		4982038	0					
ANR	4982150	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982151	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982152	UnaryOperator	*		4982038	0					
ANR	4982153	Identifier	dptr		4982038	1					
ANR	4982154	IncDec	++		4982038	1					
ANR	4982155	CastExpression	( byte ) ( value >> 4 )		4982038	1					
ANR	4982156	CastTarget	byte		4982038	0					
ANR	4982157	ShiftExpression	value >> 4		4982038	1		>>			
ANR	4982158	Identifier	value		4982038	0					
ANR	4982159	PrimaryExpression	4		4982038	1					
ANR	4982160	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		4982038	1		=			
ANR	4982161	UnaryOperationExpression	* dbbyte		4982038	0					
ANR	4982162	UnaryOperator	*		4982038	0					
ANR	4982163	Identifier	dbbyte		4982038	1					
ANR	4982164	CastExpression	( byte ) ( value << 4 )		4982038	1					
ANR	4982165	CastTarget	byte		4982038	0					
ANR	4982166	ShiftExpression	value << 4		4982038	1		<<			
ANR	4982167	Identifier	value		4982038	0					
ANR	4982168	PrimaryExpression	4		4982038	1					
ANR	4982169	ElseStatement	else		4982038	0					
ANR	4982170	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	390:14:12590:12667	4982038	0	True				
ANR	4982171	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4982038	0					
ANR	4982172	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		4982038	0		=			
ANR	4982173	UnaryOperationExpression	* ( * dptr )		4982038	0					
ANR	4982174	UnaryOperator	*		4982038	0					
ANR	4982175	UnaryOperationExpression	* dptr		4982038	1					
ANR	4982176	UnaryOperator	*		4982038	0					
ANR	4982177	Identifier	dptr		4982038	1					
ANR	4982178	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		4982038	1		|			
ANR	4982179	UnaryOperationExpression	* dbbyte		4982038	0					
ANR	4982180	UnaryOperator	*		4982038	0					
ANR	4982181	Identifier	dbbyte		4982038	1					
ANR	4982182	CastExpression	( byte ) ( value >> 8 )		4982038	1					
ANR	4982183	CastTarget	byte		4982038	0					
ANR	4982184	ShiftExpression	value >> 8		4982038	1		>>			
ANR	4982185	Identifier	value		4982038	0					
ANR	4982186	PrimaryExpression	8		4982038	1					
ANR	4982187	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		4982038	1					
ANR	4982188	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		4982038	0		=			
ANR	4982189	ArrayIndexing	( * dptr ) [ 1 ]		4982038	0					
ANR	4982190	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982191	UnaryOperator	*		4982038	0					
ANR	4982192	Identifier	dptr		4982038	1					
ANR	4982193	PrimaryExpression	1		4982038	1					
ANR	4982194	CastExpression	( byte ) value		4982038	1					
ANR	4982195	CastTarget	byte		4982038	0					
ANR	4982196	Identifier	value		4982038	1					
ANR	4982197	AssignmentExpression	* dptr += 2		4982038	1		+=			
ANR	4982198	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982199	UnaryOperator	*		4982038	0					
ANR	4982200	Identifier	dptr		4982038	1					
ANR	4982201	PrimaryExpression	2		4982038	1					
ANR	4982202	BreakStatement	break ;	391:12:12681:12686	4982038	8	True				
ANR	4982203	Label	case 16 :	392:8:12696:12703	4982038	9	True				
ANR	4982204	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 56 ) )"	392:17:12705:12764	4982038	10	True				
ANR	4982205	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 56 ) )"		4982038	0		=			
ANR	4982206	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982207	UnaryOperator	*		4982038	0					
ANR	4982208	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982209	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982210	UnaryOperator	*		4982038	0					
ANR	4982211	Identifier	dptr		4982038	1					
ANR	4982212	IncDec	++		4982038	1					
ANR	4982213	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 56 ) )"		4982038	1					
ANR	4982214	CastTarget	byte		4982038	0					
ANR	4982215	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 56 )"		4982038	1		>>			
ANR	4982216	Identifier	value		4982038	0					
ANR	4982217	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 56 )"		4982038	1					
ANR	4982218	Callee	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982219	Identifier	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982220	ArgumentList	value		4982038	1					
ANR	4982221	Argument	value		4982038	0					
ANR	4982222	Identifier	value		4982038	0					
ANR	4982223	Argument	56		4982038	1					
ANR	4982224	PrimaryExpression	56		4982038	0					
ANR	4982225	Label	case 14 :	393:8:12774:12781	4982038	11	True				
ANR	4982226	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 48 ) )"	393:17:12783:12842	4982038	12	True				
ANR	4982227	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 48 ) )"		4982038	0		=			
ANR	4982228	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982229	UnaryOperator	*		4982038	0					
ANR	4982230	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982231	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982232	UnaryOperator	*		4982038	0					
ANR	4982233	Identifier	dptr		4982038	1					
ANR	4982234	IncDec	++		4982038	1					
ANR	4982235	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 48 ) )"		4982038	1					
ANR	4982236	CastTarget	byte		4982038	0					
ANR	4982237	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 48 )"		4982038	1		>>			
ANR	4982238	Identifier	value		4982038	0					
ANR	4982239	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 48 )"		4982038	1					
ANR	4982240	Callee	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982241	Identifier	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982242	ArgumentList	value		4982038	1					
ANR	4982243	Argument	value		4982038	0					
ANR	4982244	Identifier	value		4982038	0					
ANR	4982245	Argument	48		4982038	1					
ANR	4982246	PrimaryExpression	48		4982038	0					
ANR	4982247	Label	case 12 :	394:8:12852:12859	4982038	13	True				
ANR	4982248	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 40 ) )"	394:17:12861:12920	4982038	14	True				
ANR	4982249	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 40 ) )"		4982038	0		=			
ANR	4982250	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982251	UnaryOperator	*		4982038	0					
ANR	4982252	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982253	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982254	UnaryOperator	*		4982038	0					
ANR	4982255	Identifier	dptr		4982038	1					
ANR	4982256	IncDec	++		4982038	1					
ANR	4982257	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 40 ) )"		4982038	1					
ANR	4982258	CastTarget	byte		4982038	0					
ANR	4982259	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 40 )"		4982038	1		>>			
ANR	4982260	Identifier	value		4982038	0					
ANR	4982261	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 40 )"		4982038	1					
ANR	4982262	Callee	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982263	Identifier	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982264	ArgumentList	value		4982038	1					
ANR	4982265	Argument	value		4982038	0					
ANR	4982266	Identifier	value		4982038	0					
ANR	4982267	Argument	40		4982038	1					
ANR	4982268	PrimaryExpression	40		4982038	0					
ANR	4982269	Label	case 10 :	395:8:12930:12937	4982038	15	True				
ANR	4982270	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 32 ) )"	395:17:12939:12998	4982038	16	True				
ANR	4982271	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 32 ) )"		4982038	0		=			
ANR	4982272	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982273	UnaryOperator	*		4982038	0					
ANR	4982274	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982275	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982276	UnaryOperator	*		4982038	0					
ANR	4982277	Identifier	dptr		4982038	1					
ANR	4982278	IncDec	++		4982038	1					
ANR	4982279	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 32 ) )"		4982038	1					
ANR	4982280	CastTarget	byte		4982038	0					
ANR	4982281	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 32 )"		4982038	1		>>			
ANR	4982282	Identifier	value		4982038	0					
ANR	4982283	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 32 )"		4982038	1					
ANR	4982284	Callee	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982285	Identifier	SAMPLE_BOUND_SHIFT		4982038	0					
ANR	4982286	ArgumentList	value		4982038	1					
ANR	4982287	Argument	value		4982038	0					
ANR	4982288	Identifier	value		4982038	0					
ANR	4982289	Argument	32		4982038	1					
ANR	4982290	PrimaryExpression	32		4982038	0					
ANR	4982291	Label	case 8 :	396:8:13008:13014	4982038	17	True				
ANR	4982292	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 24 )	396:16:13016:13048	4982038	18	True				
ANR	4982293	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 24 )		4982038	0		=			
ANR	4982294	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982295	UnaryOperator	*		4982038	0					
ANR	4982296	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982297	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982298	UnaryOperator	*		4982038	0					
ANR	4982299	Identifier	dptr		4982038	1					
ANR	4982300	IncDec	++		4982038	1					
ANR	4982301	CastExpression	( byte ) ( value >> 24 )		4982038	1					
ANR	4982302	CastTarget	byte		4982038	0					
ANR	4982303	ShiftExpression	value >> 24		4982038	1		>>			
ANR	4982304	Identifier	value		4982038	0					
ANR	4982305	PrimaryExpression	24		4982038	1					
ANR	4982306	Label	case 6 :	397:8:13058:13064	4982038	19	True				
ANR	4982307	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 16 )	397:16:13066:13098	4982038	20	True				
ANR	4982308	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 16 )		4982038	0		=			
ANR	4982309	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982310	UnaryOperator	*		4982038	0					
ANR	4982311	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982312	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982313	UnaryOperator	*		4982038	0					
ANR	4982314	Identifier	dptr		4982038	1					
ANR	4982315	IncDec	++		4982038	1					
ANR	4982316	CastExpression	( byte ) ( value >> 16 )		4982038	1					
ANR	4982317	CastTarget	byte		4982038	0					
ANR	4982318	ShiftExpression	value >> 16		4982038	1		>>			
ANR	4982319	Identifier	value		4982038	0					
ANR	4982320	PrimaryExpression	16		4982038	1					
ANR	4982321	Label	case 4 :	398:8:13108:13114	4982038	21	True				
ANR	4982322	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 8 )	398:16:13116:13147	4982038	22	True				
ANR	4982323	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 8 )		4982038	0		=			
ANR	4982324	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982325	UnaryOperator	*		4982038	0					
ANR	4982326	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982327	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982328	UnaryOperator	*		4982038	0					
ANR	4982329	Identifier	dptr		4982038	1					
ANR	4982330	IncDec	++		4982038	1					
ANR	4982331	CastExpression	( byte ) ( value >> 8 )		4982038	1					
ANR	4982332	CastTarget	byte		4982038	0					
ANR	4982333	ShiftExpression	value >> 8		4982038	1		>>			
ANR	4982334	Identifier	value		4982038	0					
ANR	4982335	PrimaryExpression	8		4982038	1					
ANR	4982336	Label	case 2 :	399:8:13157:13163	4982038	23	True				
ANR	4982337	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value )	399:16:13165:13191	4982038	24	True				
ANR	4982338	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value )		4982038	0		=			
ANR	4982339	UnaryOperationExpression	* ( * dptr ) ++		4982038	0					
ANR	4982340	UnaryOperator	*		4982038	0					
ANR	4982341	PostIncDecOperationExpression	( * dptr ) ++		4982038	1					
ANR	4982342	UnaryOperationExpression	* dptr		4982038	0					
ANR	4982343	UnaryOperator	*		4982038	0					
ANR	4982344	Identifier	dptr		4982038	1					
ANR	4982345	IncDec	++		4982038	1					
ANR	4982346	CastExpression	( byte ) ( value )		4982038	1					
ANR	4982347	CastTarget	byte		4982038	0					
ANR	4982348	Identifier	value		4982038	1					
ANR	4982349	BreakStatement	break ;	400:12:13205:13210	4982038	25	True				
ANR	4982350	Label	default :	401:8:13220:13227	4982038	26	True				
ANR	4982351	Identifier	default		4982038	0					
ANR	4982352	ReturnStatement	return - 1 ;	402:12:13241:13250	4982038	27	True				
ANR	4982353	UnaryOperationExpression	- 1		4982038	0					
ANR	4982354	UnaryOperator	-		4982038	0					
ANR	4982355	PrimaryExpression	1		4982038	1					
ANR	4982356	ReturnStatement	return 0 ;	404:4:13262:13270	4982038	1	True				
ANR	4982357	PrimaryExpression	0		4982038	0					
ANR	4982358	Identifier	sample_store_next64		4982038	1					
ANR	4982359	ParameterList	"uint64_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		4982038	2					
ANR	4982360	Parameter	uint64_t value	375:38:12000:12013	4982038	0	True				
ANR	4982361	ParameterType	uint64_t		4982038	0					
ANR	4982362	Identifier	value		4982038	1					
ANR	4982363	Parameter	byte * * dptr	375:54:12016:12026	4982038	1	True				
ANR	4982364	ParameterType	byte * *		4982038	0					
ANR	4982365	Identifier	dptr		4982038	1					
ANR	4982366	Parameter	int * dbit	375:67:12029:12037	4982038	2	True				
ANR	4982367	ParameterType	int *		4982038	0					
ANR	4982368	Identifier	dbit		4982038	1					
ANR	4982369	Parameter	int dbpv	375:78:12040:12047	4982038	3	True				
ANR	4982370	ParameterType	int		4982038	0					
ANR	4982371	Identifier	dbpv		4982038	1					
ANR	4982372	Parameter	byte * dbbyte	375:88:12050:12061	4982038	4	True				
ANR	4982373	ParameterType	byte *		4982038	0					
ANR	4982374	Identifier	dbbyte		4982038	1					
ANR	4982375	CFGEntryNode	ENTRY		4982038		True				
ANR	4982376	CFGExitNode	EXIT		4982038		True				
ANR	4982377	Symbol	* * dptr		4982038						
ANR	4982378	Symbol	dbbyte		4982038						
ANR	4982379	Symbol	* dbit		4982038						
ANR	4982380	Symbol	* ( * dptr ) ++		4982038						
ANR	4982381	Symbol	SAMPLE_BOUND_SHIFT		4982038						
ANR	4982382	Symbol	dptr		4982038						
ANR	4982383	Symbol	* ( * dptr )		4982038						
ANR	4982384	Symbol	dbit		4982038						
ANR	4982385	Symbol	dbpv		4982038						
ANR	4982386	Symbol	* dbbyte		4982038						
ANR	4982387	Symbol	value		4982038						
ANR	4982388	Symbol	* dptr		4982038						
ANR	4982389	Function	sample_store_flush	407:19:13294:13416							
ANR	4982390	FunctionDef	"sample_store_flush (byte * dptr , int dbit , byte dbbyte)"		4982389	0					
ANR	4982391	CompoundStatement		408:0:13348:13416	4982389	0					
ANR	4982392	IfStatement	if ( dbit != 0 )		4982389	0					
ANR	4982393	Condition	dbit != 0	409:6:13356:13364	4982389	0	True				
ANR	4982394	EqualityExpression	dbit != 0		4982389	0		!=			
ANR	4982395	Identifier	dbit		4982389	0					
ANR	4982396	PrimaryExpression	0		4982389	1					
ANR	4982397	ExpressionStatement	* dptr = dbbyte | ( * dptr & ( 0xff >> dbit ) )	410:4:13373:13414	4982389	1	True				
ANR	4982398	AssignmentExpression	* dptr = dbbyte | ( * dptr & ( 0xff >> dbit ) )		4982389	0		=			
ANR	4982399	UnaryOperationExpression	* dptr		4982389	0					
ANR	4982400	UnaryOperator	*		4982389	0					
ANR	4982401	Identifier	dptr		4982389	1					
ANR	4982402	InclusiveOrExpression	dbbyte | ( * dptr & ( 0xff >> dbit ) )		4982389	1		|			
ANR	4982403	Identifier	dbbyte		4982389	0					
ANR	4982404	BitAndExpression	* dptr & ( 0xff >> dbit )		4982389	1		&			
ANR	4982405	UnaryOperationExpression	* dptr		4982389	0					
ANR	4982406	UnaryOperator	*		4982389	0					
ANR	4982407	Identifier	dptr		4982389	1					
ANR	4982408	ShiftExpression	0xff >> dbit		4982389	1		>>			
ANR	4982409	PrimaryExpression	0xff		4982389	0					
ANR	4982410	Identifier	dbit		4982389	1					
ANR	4982411	Identifier	sample_store_flush		4982389	1					
ANR	4982412	ParameterList	"byte * dptr , int dbit , byte dbbyte"		4982389	2					
ANR	4982413	Parameter	byte * dptr	407:38:13313:13322	4982389	0	True				
ANR	4982414	ParameterType	byte *		4982389	0					
ANR	4982415	Identifier	dptr		4982389	1					
ANR	4982416	Parameter	int dbit	407:50:13325:13332	4982389	1	True				
ANR	4982417	ParameterType	int		4982389	0					
ANR	4982418	Identifier	dbit		4982389	1					
ANR	4982419	Parameter	byte dbbyte	407:60:13335:13345	4982389	2	True				
ANR	4982420	ParameterType	byte		4982389	0					
ANR	4982421	Identifier	dbbyte		4982389	1					
ANR	4982422	CFGEntryNode	ENTRY		4982389		True				
ANR	4982423	CFGExitNode	EXIT		4982389		True				
ANR	4982424	Symbol	dbbyte		4982389						
ANR	4982425	Symbol	dptr		4982389						
ANR	4982426	Symbol	dbit		4982389						
ANR	4982427	Symbol	* dptr		4982389						
ANR	4982428	Function	sample_store_skip_next	413:19:13438:13734							
ANR	4982429	FunctionDef	"sample_store_skip_next (byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		4982428	0					
ANR	4982430	CompoundStatement		414:0:13509:13734	4982428	0					
ANR	4982431	IfStatement	if ( dbpv < 8 )		4982428	0					
ANR	4982432	Condition	dbpv < 8	415:9:13520:13527	4982428	0	True				
ANR	4982433	RelationalExpression	dbpv < 8		4982428	0		<			
ANR	4982434	Identifier	dbpv		4982428	0					
ANR	4982435	PrimaryExpression	8		4982428	1					
ANR	4982436	CompoundStatement		2:20:21:21	4982428	1					
ANR	4982437	ExpressionStatement	"sample_store_flush ( * dptr , * dbit , * dbbyte )"	416:8:13541:13582	4982428	0	True				
ANR	4982438	CallExpression	"sample_store_flush ( * dptr , * dbit , * dbbyte )"		4982428	0					
ANR	4982439	Callee	sample_store_flush		4982428	0					
ANR	4982440	Identifier	sample_store_flush		4982428	0					
ANR	4982441	ArgumentList	* dptr		4982428	1					
ANR	4982442	Argument	* dptr		4982428	0					
ANR	4982443	UnaryOperationExpression	* dptr		4982428	0					
ANR	4982444	UnaryOperator	*		4982428	0					
ANR	4982445	Identifier	dptr		4982428	1					
ANR	4982446	Argument	* dbit		4982428	1					
ANR	4982447	UnaryOperationExpression	* dbit		4982428	0					
ANR	4982448	UnaryOperator	*		4982428	0					
ANR	4982449	Identifier	dbit		4982428	1					
ANR	4982450	Argument	* dbbyte		4982428	2					
ANR	4982451	UnaryOperationExpression	* dbbyte		4982428	0					
ANR	4982452	UnaryOperator	*		4982428	0					
ANR	4982453	Identifier	dbbyte		4982428	1					
ANR	4982454	ExpressionStatement	* dbit += dbpv	417:8:13592:13605	4982428	1	True				
ANR	4982455	AssignmentExpression	* dbit += dbpv		4982428	0		+=			
ANR	4982456	UnaryOperationExpression	* dbit		4982428	0					
ANR	4982457	UnaryOperator	*		4982428	0					
ANR	4982458	Identifier	dbit		4982428	1					
ANR	4982459	Identifier	dbpv		4982428	1					
ANR	4982460	ExpressionStatement	* dptr += ( * dbit ) >> 3	418:8:13615:13636	4982428	2	True				
ANR	4982461	AssignmentExpression	* dptr += ( * dbit ) >> 3		4982428	0		+=			
ANR	4982462	UnaryOperationExpression	* dptr		4982428	0					
ANR	4982463	UnaryOperator	*		4982428	0					
ANR	4982464	Identifier	dptr		4982428	1					
ANR	4982465	ShiftExpression	( * dbit ) >> 3		4982428	1		>>			
ANR	4982466	UnaryOperationExpression	* dbit		4982428	0					
ANR	4982467	UnaryOperator	*		4982428	0					
ANR	4982468	Identifier	dbit		4982428	1					
ANR	4982469	PrimaryExpression	3		4982428	1					
ANR	4982470	ExpressionStatement	* dbit &= 7	419:8:13646:13656	4982428	3	True				
ANR	4982471	AssignmentExpression	* dbit &= 7		4982428	0		&=			
ANR	4982472	UnaryOperationExpression	* dbit		4982428	0					
ANR	4982473	UnaryOperator	*		4982428	0					
ANR	4982474	Identifier	dbit		4982428	1					
ANR	4982475	PrimaryExpression	7		4982428	1					
ANR	4982476	ExpressionStatement	* dbbyte &= ~ ( 0xff << ( * dbit ) )	420:8:13666:13695	4982428	4	True				
ANR	4982477	AssignmentExpression	* dbbyte &= ~ ( 0xff << ( * dbit ) )		4982428	0		&=			
ANR	4982478	UnaryOperationExpression	* dbbyte		4982428	0					
ANR	4982479	UnaryOperator	*		4982428	0					
ANR	4982480	Identifier	dbbyte		4982428	1					
ANR	4982481	UnaryOperationExpression	~ ( 0xff << ( * dbit ) )		4982428	1					
ANR	4982482	UnaryOperator	~		4982428	0					
ANR	4982483	ShiftExpression	0xff << ( * dbit )		4982428	1		<<			
ANR	4982484	PrimaryExpression	0xff		4982428	0					
ANR	4982485	UnaryOperationExpression	* dbit		4982428	1					
ANR	4982486	UnaryOperator	*		4982428	0					
ANR	4982487	Identifier	dbit		4982428	1					
ANR	4982488	ElseStatement	else		4982428	0					
ANR	4982489	ExpressionStatement	* dptr += ( dbpv >> 3 )	422:6:13712:13732	4982428	0	True				
ANR	4982490	AssignmentExpression	* dptr += ( dbpv >> 3 )		4982428	0		+=			
ANR	4982491	UnaryOperationExpression	* dptr		4982428	0					
ANR	4982492	UnaryOperator	*		4982428	0					
ANR	4982493	Identifier	dptr		4982428	1					
ANR	4982494	ShiftExpression	dbpv >> 3		4982428	1		>>			
ANR	4982495	Identifier	dbpv		4982428	0					
ANR	4982496	PrimaryExpression	3		4982428	1					
ANR	4982497	Identifier	sample_store_skip_next		4982428	1					
ANR	4982498	ParameterList	"byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		4982428	2					
ANR	4982499	Parameter	byte * * dptr	413:42:13461:13471	4982428	0	True				
ANR	4982500	ParameterType	byte * *		4982428	0					
ANR	4982501	Identifier	dptr		4982428	1					
ANR	4982502	Parameter	int * dbit	413:55:13474:13482	4982428	1	True				
ANR	4982503	ParameterType	int *		4982428	0					
ANR	4982504	Identifier	dbit		4982428	1					
ANR	4982505	Parameter	int dbpv	413:66:13485:13492	4982428	2	True				
ANR	4982506	ParameterType	int		4982428	0					
ANR	4982507	Identifier	dbpv		4982428	1					
ANR	4982508	Parameter	byte * dbbyte	413:76:13495:13506	4982428	3	True				
ANR	4982509	ParameterType	byte *		4982428	0					
ANR	4982510	Identifier	dbbyte		4982428	1					
ANR	4982511	CFGEntryNode	ENTRY		4982428		True				
ANR	4982512	CFGExitNode	EXIT		4982428		True				
ANR	4982513	Symbol	dbbyte		4982428						
ANR	4982514	Symbol	* dbit		4982428						
ANR	4982515	Symbol	dptr		4982428						
ANR	4982516	Symbol	dbit		4982428						
ANR	4982517	Symbol	dbpv		4982428						
ANR	4982518	Symbol	* dbbyte		4982428						
ANR	4982519	Symbol	* dptr		4982428						
ANR	4982520	DeclStmt									
ANR	4982521	Decl							void	"void ( byte * dest , int dest_bit , uint raster , mono_fill_chunk pattern , int width_bits , int height )"	bits_fill_rectangle
ANR	4982522	DeclStmt									
ANR	4982523	Decl							void	"void ( byte * dest , int dest_bit , uint raster , mono_fill_chunk pattern , mono_fill_chunk src_mask , int width_bits , int height )"	bits_fill_rectangle_masked
ANR	4982524	DeclStmt									
ANR	4982525	Decl							void	"void ( byte * data , uint width , uint height , uint raster , uint replicated_width , uint replicated_raster )"	bits_replicate_horizontally
ANR	4982526	DeclStmt									
ANR	4982527	Decl							void	"void ( byte * data , uint height , uint raster , uint replicated_height )"	bits_replicate_vertically
ANR	4982528	DeclStmt									
ANR	4982529	Decl							void	"void ( const byte * data , uint height , uint raster , gs_int_rect * pbox )"	bits_bounding_box
ANR	4982530	DeclStmt									
ANR	4982531	Decl							void	"void ( const byte * src , int srcx , uint width , uint height , uint sraster , byte * dest , uint draster , const gs_log2_scale_point * plog2_scale , int log2_out_bits )"	bits_compress_scaled
ANR	4982532	ClassDef	bits_plane_s	471:8:15707:15940							
ANR	4982533	ClassDef	bpd_	472:4:15733:15844							
ANR	4982534	DeclStmt									
ANR	4982535	Decl							byte	byte *	write
ANR	4982536	DeclStmt									
ANR	4982537	Decl							const byte	const byte *	read
ANR	4982538	DeclStmt									
ANR	4982539	Decl							bpd_	bpd_	data
ANR	4982540	DeclStmt									
ANR	4982541	Decl							int	int	raster
ANR	4982542	DeclStmt									
ANR	4982543	Decl							int	int	depth
ANR	4982544	DeclStmt									
ANR	4982545	Decl							int	int	x
ANR	4982546	DeclStmt									
ANR	4982547	Decl							bits_plane_s	bits_plane_s	bits_plane_t
ANR	4982548	DeclStmt									
ANR	4982549	Decl							int	"int ( const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height )"	bits_extract_plane
ANR	4982550	DeclStmt									
ANR	4982551	Decl							int	"int ( const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height )"	bits_expand_plane
ANR	4982552	DeclStmt									
ANR	4982553	Decl							void	"void ( byte * dest , uint raster , byte value , int width_bytes , int height )"	bytes_fill_rectangle
ANR	4982554	DeclStmt									
ANR	4982555	Decl							void	"void ( byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height )"	bytes_copy_rectangle
ANR	4982556	DeclStmt									
ANR	4982557	Decl							int	"int ( const byte * src , uint src_raster , int width_bytes , int height )"	bytes_rectangle_is_const
ANR	4982558	DeclStmt									
ANR	4982559	Decl							void	"void ( byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height )"	bytes_copy_rectangle_zero_padding
