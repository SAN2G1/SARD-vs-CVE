command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	249980	File	data/converged/CVE-2018-16863_ghostpdl/base_gdevmem.c								
ANR	249981	DeclStmt									
ANR	249982	Decl							byte	byte *	base_old
ANR	249983	DeclStmt									
ANR	249984	Decl							long	long	reloc
ANR	249985	DeclStmt									
ANR	249986	Decl							int	int	y
ANR	249987	DeclStmt									
ANR	249988	Decl							int	int	h
ANR	249989	DeclStmt									
ANR	249990	Decl							const byte	const byte [ 6 ]	b_w_palette_string
ANR	249991	DeclStmt									
ANR	249992	Decl							const gs_const_string	const gs_const_string	mem_mono_b_w_palette
ANR	249993	DeclStmt									
ANR	249994	Decl							const byte	const byte [ 6 ]	w_b_palette_string
ANR	249995	DeclStmt									
ANR	249996	Decl							const gs_const_string	const gs_const_string	mem_mono_w_b_palette
ANR	249997	Function	gdev_mem_device_for_bits	100:0:3285:3455							
ANR	249998	FunctionDef	gdev_mem_device_for_bits (int bits_per_pixel)		249997	0					
ANR	249999	CompoundStatement		102:0:3355:3455	249997	0					
ANR	250000	ReturnStatement	return ( ( uint ) bits_per_pixel > 64 ? & mem_x_device : mem_devices [ bits_per_pixel ] ) ;	103:4:3361:3453	249997	0	True				
ANR	250001	ConditionalExpression	( uint ) bits_per_pixel > 64 ? & mem_x_device : mem_devices [ bits_per_pixel ]		249997	0					
ANR	250002	Condition	( uint ) bits_per_pixel > 64		249997	0					
ANR	250003	RelationalExpression	( uint ) bits_per_pixel > 64		249997	0		>			
ANR	250004	CastExpression	( uint ) bits_per_pixel		249997	0					
ANR	250005	CastTarget	uint		249997	0					
ANR	250006	Identifier	bits_per_pixel		249997	1					
ANR	250007	PrimaryExpression	64		249997	1					
ANR	250008	UnaryOperationExpression	& mem_x_device		249997	1					
ANR	250009	UnaryOperator	&		249997	0					
ANR	250010	Identifier	mem_x_device		249997	1					
ANR	250011	ArrayIndexing	mem_devices [ bits_per_pixel ]		249997	2					
ANR	250012	Identifier	mem_devices		249997	0					
ANR	250013	Identifier	bits_per_pixel		249997	1					
ANR	250014	ReturnType	const gx_device_memory *		249997	1					
ANR	250015	Identifier	gdev_mem_device_for_bits		249997	2					
ANR	250016	ParameterList	int bits_per_pixel		249997	3					
ANR	250017	Parameter	int bits_per_pixel	101:25:3335:3352	249997	0	True				
ANR	250018	ParameterType	int		249997	0					
ANR	250019	Identifier	bits_per_pixel		249997	1					
ANR	250020	CFGEntryNode	ENTRY		249997		True				
ANR	250021	CFGExitNode	EXIT		249997		True				
ANR	250022	Symbol	* bits_per_pixel		249997						
ANR	250023	Symbol	* mem_devices		249997						
ANR	250024	Symbol	mem_devices		249997						
ANR	250025	Symbol	& mem_x_device		249997						
ANR	250026	Symbol	bits_per_pixel		249997						
ANR	250027	Function	gdev_mem_word_device_for_bits	118:0:4040:4234							
ANR	250028	FunctionDef	gdev_mem_word_device_for_bits (int bits_per_pixel)		250027	0					
ANR	250029	CompoundStatement		120:0:4115:4234	250027	0					
ANR	250030	ReturnStatement	return ( ( uint ) bits_per_pixel > 64 ? ( const gx_device_memory * ) 0 : mem_word_devices [ bits_per_pixel ] ) ;	121:4:4121:4232	250027	0	True				
ANR	250031	ConditionalExpression	( uint ) bits_per_pixel > 64 ? ( const gx_device_memory * ) 0 : mem_word_devices [ bits_per_pixel ]		250027	0					
ANR	250032	Condition	( uint ) bits_per_pixel > 64		250027	0					
ANR	250033	RelationalExpression	( uint ) bits_per_pixel > 64		250027	0		>			
ANR	250034	CastExpression	( uint ) bits_per_pixel		250027	0					
ANR	250035	CastTarget	uint		250027	0					
ANR	250036	Identifier	bits_per_pixel		250027	1					
ANR	250037	PrimaryExpression	64		250027	1					
ANR	250038	CastExpression	( const gx_device_memory * ) 0		250027	1					
ANR	250039	CastTarget	const gx_device_memory *		250027	0					
ANR	250040	PrimaryExpression	0		250027	1					
ANR	250041	ArrayIndexing	mem_word_devices [ bits_per_pixel ]		250027	2					
ANR	250042	Identifier	mem_word_devices		250027	0					
ANR	250043	Identifier	bits_per_pixel		250027	1					
ANR	250044	ReturnType	const gx_device_memory *		250027	1					
ANR	250045	Identifier	gdev_mem_word_device_for_bits		250027	2					
ANR	250046	ParameterList	int bits_per_pixel		250027	3					
ANR	250047	Parameter	int bits_per_pixel	119:30:4095:4112	250027	0	True				
ANR	250048	ParameterType	int		250027	0					
ANR	250049	Identifier	bits_per_pixel		250027	1					
ANR	250050	CFGEntryNode	ENTRY		250027		True				
ANR	250051	CFGExitNode	EXIT		250027		True				
ANR	250052	Symbol	* mem_word_devices		250027						
ANR	250053	Symbol	mem_word_devices		250027						
ANR	250054	Symbol	* bits_per_pixel		250027						
ANR	250055	Symbol	bits_per_pixel		250027						
ANR	250056	Function	gs_device_is_memory	126:0:4284:4934							
ANR	250057	FunctionDef	gs_device_is_memory (const gx_device * dev)		250056	0					
ANR	250058	CompoundStatement		128:0:4332:4934	250056	0					
ANR	250059	IdentifierDeclStatement	int bits_per_pixel = dev -> color_info . depth ;	133:4:4442:4484	250056	0	True				
ANR	250060	IdentifierDecl	bits_per_pixel = dev -> color_info . depth		250056	0					
ANR	250061	IdentifierDeclType	int		250056	0					
ANR	250062	Identifier	bits_per_pixel		250056	1					
ANR	250063	AssignmentExpression	bits_per_pixel = dev -> color_info . depth		250056	2		=			
ANR	250064	Identifier	bits_per_pixel		250056	0					
ANR	250065	MemberAccess	dev -> color_info . depth		250056	1					
ANR	250066	PtrMemberAccess	dev -> color_info		250056	0					
ANR	250067	Identifier	dev		250056	0					
ANR	250068	Identifier	color_info		250056	1					
ANR	250069	Identifier	depth		250056	1					
ANR	250070	IdentifierDeclStatement	const gx_device_memory * mdproto ;	134:4:4490:4521	250056	1	True				
ANR	250071	IdentifierDecl	* mdproto		250056	0					
ANR	250072	IdentifierDeclType	const gx_device_memory *		250056	0					
ANR	250073	Identifier	mdproto		250056	1					
ANR	250074	IfStatement	if ( dev -> is_planar )		250056	2					
ANR	250075	Condition	dev -> is_planar	136:8:4532:4545	250056	0	True				
ANR	250076	PtrMemberAccess	dev -> is_planar		250056	0					
ANR	250077	Identifier	dev		250056	0					
ANR	250078	Identifier	is_planar		250056	1					
ANR	250079	ExpressionStatement	bits_per_pixel /= dev -> color_info . num_components	137:8:4556:4604	250056	1	True				
ANR	250080	AssignmentExpression	bits_per_pixel /= dev -> color_info . num_components		250056	0		/=			
ANR	250081	Identifier	bits_per_pixel		250056	0					
ANR	250082	MemberAccess	dev -> color_info . num_components		250056	1					
ANR	250083	PtrMemberAccess	dev -> color_info		250056	0					
ANR	250084	Identifier	dev		250056	0					
ANR	250085	Identifier	color_info		250056	1					
ANR	250086	Identifier	num_components		250056	1					
ANR	250087	ExpressionStatement	mdproto = gdev_mem_device_for_bits ( bits_per_pixel )	139:4:4611:4661	250056	3	True				
ANR	250088	AssignmentExpression	mdproto = gdev_mem_device_for_bits ( bits_per_pixel )		250056	0		=			
ANR	250089	Identifier	mdproto		250056	0					
ANR	250090	CallExpression	gdev_mem_device_for_bits ( bits_per_pixel )		250056	1					
ANR	250091	Callee	gdev_mem_device_for_bits		250056	0					
ANR	250092	Identifier	gdev_mem_device_for_bits		250056	0					
ANR	250093	ArgumentList	bits_per_pixel		250056	1					
ANR	250094	Argument	bits_per_pixel		250056	0					
ANR	250095	Identifier	bits_per_pixel		250056	0					
ANR	250096	IfStatement	"if ( mdproto != 0 && dev_proc ( dev , draw_thin_line ) == dev_proc ( mdproto , draw_thin_line ) )"		250056	4					
ANR	250097	Condition	"mdproto != 0 && dev_proc ( dev , draw_thin_line ) == dev_proc ( mdproto , draw_thin_line )"	140:8:4671:4752	250056	0	True				
ANR	250098	AndExpression	"mdproto != 0 && dev_proc ( dev , draw_thin_line ) == dev_proc ( mdproto , draw_thin_line )"		250056	0		&&			
ANR	250099	EqualityExpression	mdproto != 0		250056	0		!=			
ANR	250100	Identifier	mdproto		250056	0					
ANR	250101	PrimaryExpression	0		250056	1					
ANR	250102	EqualityExpression	"dev_proc ( dev , draw_thin_line ) == dev_proc ( mdproto , draw_thin_line )"		250056	1		==			
ANR	250103	CallExpression	"dev_proc ( dev , draw_thin_line )"		250056	0					
ANR	250104	Callee	dev_proc		250056	0					
ANR	250105	Identifier	dev_proc		250056	0					
ANR	250106	ArgumentList	dev		250056	1					
ANR	250107	Argument	dev		250056	0					
ANR	250108	Identifier	dev		250056	0					
ANR	250109	Argument	draw_thin_line		250056	1					
ANR	250110	Identifier	draw_thin_line		250056	0					
ANR	250111	CallExpression	"dev_proc ( mdproto , draw_thin_line )"		250056	1					
ANR	250112	Callee	dev_proc		250056	0					
ANR	250113	Identifier	dev_proc		250056	0					
ANR	250114	ArgumentList	mdproto		250056	1					
ANR	250115	Argument	mdproto		250056	0					
ANR	250116	Identifier	mdproto		250056	0					
ANR	250117	Argument	draw_thin_line		250056	1					
ANR	250118	Identifier	draw_thin_line		250056	0					
ANR	250119	ReturnStatement	return true ;	141:8:4763:4774	250056	1	True				
ANR	250120	Identifier	true		250056	0					
ANR	250121	ExpressionStatement	mdproto = gdev_mem_word_device_for_bits ( bits_per_pixel )	142:4:4780:4835	250056	5	True				
ANR	250122	AssignmentExpression	mdproto = gdev_mem_word_device_for_bits ( bits_per_pixel )		250056	0		=			
ANR	250123	Identifier	mdproto		250056	0					
ANR	250124	CallExpression	gdev_mem_word_device_for_bits ( bits_per_pixel )		250056	1					
ANR	250125	Callee	gdev_mem_word_device_for_bits		250056	0					
ANR	250126	Identifier	gdev_mem_word_device_for_bits		250056	0					
ANR	250127	ArgumentList	bits_per_pixel		250056	1					
ANR	250128	Argument	bits_per_pixel		250056	0					
ANR	250129	Identifier	bits_per_pixel		250056	0					
ANR	250130	ReturnStatement	"return ( mdproto != 0 && dev_proc ( dev , draw_thin_line ) == dev_proc ( mdproto , draw_thin_line ) ) ;"	143:4:4841:4932	250056	6	True				
ANR	250131	AndExpression	"mdproto != 0 && dev_proc ( dev , draw_thin_line ) == dev_proc ( mdproto , draw_thin_line )"		250056	0		&&			
ANR	250132	EqualityExpression	mdproto != 0		250056	0		!=			
ANR	250133	Identifier	mdproto		250056	0					
ANR	250134	PrimaryExpression	0		250056	1					
ANR	250135	EqualityExpression	"dev_proc ( dev , draw_thin_line ) == dev_proc ( mdproto , draw_thin_line )"		250056	1		==			
ANR	250136	CallExpression	"dev_proc ( dev , draw_thin_line )"		250056	0					
ANR	250137	Callee	dev_proc		250056	0					
ANR	250138	Identifier	dev_proc		250056	0					
ANR	250139	ArgumentList	dev		250056	1					
ANR	250140	Argument	dev		250056	0					
ANR	250141	Identifier	dev		250056	0					
ANR	250142	Argument	draw_thin_line		250056	1					
ANR	250143	Identifier	draw_thin_line		250056	0					
ANR	250144	CallExpression	"dev_proc ( mdproto , draw_thin_line )"		250056	1					
ANR	250145	Callee	dev_proc		250056	0					
ANR	250146	Identifier	dev_proc		250056	0					
ANR	250147	ArgumentList	mdproto		250056	1					
ANR	250148	Argument	mdproto		250056	0					
ANR	250149	Identifier	mdproto		250056	0					
ANR	250150	Argument	draw_thin_line		250056	1					
ANR	250151	Identifier	draw_thin_line		250056	0					
ANR	250152	ReturnType	bool		250056	1					
ANR	250153	Identifier	gs_device_is_memory		250056	2					
ANR	250154	ParameterList	const gx_device * dev		250056	3					
ANR	250155	Parameter	const gx_device * dev	127:20:4309:4329	250056	0	True				
ANR	250156	ParameterType	const gx_device *		250056	0					
ANR	250157	Identifier	dev		250056	1					
ANR	250158	CFGEntryNode	ENTRY		250056		True				
ANR	250159	CFGExitNode	EXIT		250056		True				
ANR	250160	Symbol	* dev		250056						
ANR	250161	Symbol	dev -> color_info . num_components		250056						
ANR	250162	Symbol	gdev_mem_word_device_for_bits		250056						
ANR	250163	Symbol	dev -> color_info . depth		250056						
ANR	250164	Symbol	dev -> color_info		250056						
ANR	250165	Symbol	gdev_mem_device_for_bits		250056						
ANR	250166	Symbol	bits_per_pixel		250056						
ANR	250167	Symbol	dev -> is_planar		250056						
ANR	250168	Symbol	dev		250056						
ANR	250169	Symbol	dev_proc		250056						
ANR	250170	Symbol	draw_thin_line		250056						
ANR	250171	Symbol	true		250056						
ANR	250172	Symbol	mdproto		250056						
ANR	250173	Function	gs_make_mem_device	148:0:5038:7290							
ANR	250174	FunctionDef	"gs_make_mem_device (gx_device_memory * dev , const gx_device_memory * mdproto , gs_memory_t * mem , int page_device , gx_device * target)"		250173	0					
ANR	250175	CompoundStatement		151:0:5195:7290	250173	0					
ANR	250176	ExpressionStatement	"gx_device_init ( ( gx_device * ) dev , ( const gx_device * ) mdproto , mem , true )"	152:4:5201:5292	250173	0	True				
ANR	250177	CallExpression	"gx_device_init ( ( gx_device * ) dev , ( const gx_device * ) mdproto , mem , true )"		250173	0					
ANR	250178	Callee	gx_device_init		250173	0					
ANR	250179	Identifier	gx_device_init		250173	0					
ANR	250180	ArgumentList	( gx_device * ) dev		250173	1					
ANR	250181	Argument	( gx_device * ) dev		250173	0					
ANR	250182	CastExpression	( gx_device * ) dev		250173	0					
ANR	250183	CastTarget	gx_device *		250173	0					
ANR	250184	Identifier	dev		250173	1					
ANR	250185	Argument	( const gx_device * ) mdproto		250173	1					
ANR	250186	CastExpression	( const gx_device * ) mdproto		250173	0					
ANR	250187	CastTarget	const gx_device *		250173	0					
ANR	250188	Identifier	mdproto		250173	1					
ANR	250189	Argument	mem		250173	2					
ANR	250190	Identifier	mem		250173	0					
ANR	250191	Argument	true		250173	3					
ANR	250192	Identifier	true		250173	0					
ANR	250193	ExpressionStatement	dev -> stype = & st_device_memory	154:4:5298:5328	250173	1	True				
ANR	250194	AssignmentExpression	dev -> stype = & st_device_memory		250173	0		=			
ANR	250195	PtrMemberAccess	dev -> stype		250173	0					
ANR	250196	Identifier	dev		250173	0					
ANR	250197	Identifier	stype		250173	1					
ANR	250198	UnaryOperationExpression	& st_device_memory		250173	1					
ANR	250199	UnaryOperator	&		250173	0					
ANR	250200	Identifier	st_device_memory		250173	1					
ANR	250201	SwitchStatement	switch ( page_device )		250173	2					
ANR	250202	Condition	page_device	155:12:5342:5352	250173	0	True				
ANR	250203	Identifier	page_device		250173	0					
ANR	250204	CompoundStatement		5:25:159:159	250173	1					
ANR	250205	Statement	case	156:8:5365:5368	250173	0	True				
ANR	250206	Statement	-	156:13:5370:5370	250173	1	True				
ANR	250207	Label	1 :	156:14:5371:5372	250173	2	True				
ANR	250208	ExpressionStatement	"set_dev_proc ( dev , get_page_device , gx_default_get_page_device )"	157:12:5386:5448	250173	3	True				
ANR	250209	CallExpression	"set_dev_proc ( dev , get_page_device , gx_default_get_page_device )"		250173	0					
ANR	250210	Callee	set_dev_proc		250173	0					
ANR	250211	Identifier	set_dev_proc		250173	0					
ANR	250212	ArgumentList	dev		250173	1					
ANR	250213	Argument	dev		250173	0					
ANR	250214	Identifier	dev		250173	0					
ANR	250215	Argument	get_page_device		250173	1					
ANR	250216	Identifier	get_page_device		250173	0					
ANR	250217	Argument	gx_default_get_page_device		250173	2					
ANR	250218	Identifier	gx_default_get_page_device		250173	0					
ANR	250219	BreakStatement	break ;	158:12:5462:5467	250173	4	True				
ANR	250220	Label	case 1 :	159:8:5477:5483	250173	5	True				
ANR	250221	ExpressionStatement	"set_dev_proc ( dev , get_page_device , gx_page_device_get_page_device )"	160:12:5497:5563	250173	6	True				
ANR	250222	CallExpression	"set_dev_proc ( dev , get_page_device , gx_page_device_get_page_device )"		250173	0					
ANR	250223	Callee	set_dev_proc		250173	0					
ANR	250224	Identifier	set_dev_proc		250173	0					
ANR	250225	ArgumentList	dev		250173	1					
ANR	250226	Argument	dev		250173	0					
ANR	250227	Identifier	dev		250173	0					
ANR	250228	Argument	get_page_device		250173	1					
ANR	250229	Identifier	get_page_device		250173	0					
ANR	250230	Argument	gx_page_device_get_page_device		250173	2					
ANR	250231	Identifier	gx_page_device_get_page_device		250173	0					
ANR	250232	BreakStatement	break ;	161:12:5577:5582	250173	7	True				
ANR	250233	IfStatement	if ( target == 0 )		250173	3					
ANR	250234	Condition	target == 0	164:8:5643:5653	250173	0	True				
ANR	250235	EqualityExpression	target == 0		250173	0		==			
ANR	250236	Identifier	target		250173	0					
ANR	250237	PrimaryExpression	0		250173	1					
ANR	250238	CompoundStatement		14:21:460:460	250173	1					
ANR	250239	IfStatement	if ( dev -> color_info . depth == 1 )		250173	0					
ANR	250240	Condition	dev -> color_info . depth == 1	165:12:5670:5695	250173	0	True				
ANR	250241	EqualityExpression	dev -> color_info . depth == 1		250173	0		==			
ANR	250242	MemberAccess	dev -> color_info . depth		250173	0					
ANR	250243	PtrMemberAccess	dev -> color_info		250173	0					
ANR	250244	Identifier	dev		250173	0					
ANR	250245	Identifier	color_info		250173	1					
ANR	250246	Identifier	depth		250173	1					
ANR	250247	PrimaryExpression	1		250173	1					
ANR	250248	CompoundStatement		15:40:502:502	250173	1					
ANR	250249	ExpressionStatement	dev -> cached_colors . black = 1	167:12:5783:5811	250173	0	True				
ANR	250250	AssignmentExpression	dev -> cached_colors . black = 1		250173	0		=			
ANR	250251	MemberAccess	dev -> cached_colors . black		250173	0					
ANR	250252	PtrMemberAccess	dev -> cached_colors		250173	0					
ANR	250253	Identifier	dev		250173	0					
ANR	250254	Identifier	cached_colors		250173	1					
ANR	250255	Identifier	black		250173	1					
ANR	250256	PrimaryExpression	1		250173	1					
ANR	250257	ExpressionStatement	dev -> cached_colors . white = 0	168:12:5825:5853	250173	1	True				
ANR	250258	AssignmentExpression	dev -> cached_colors . white = 0		250173	0		=			
ANR	250259	MemberAccess	dev -> cached_colors . white		250173	0					
ANR	250260	PtrMemberAccess	dev -> cached_colors		250173	0					
ANR	250261	Identifier	dev		250173	0					
ANR	250262	Identifier	cached_colors		250173	1					
ANR	250263	Identifier	white		250173	1					
ANR	250264	PrimaryExpression	0		250173	1					
ANR	250265	ElseStatement	else		250173	0					
ANR	250266	CompoundStatement		19:15:674:674	250173	0					
ANR	250267	ExpressionStatement	dev -> cached_colors . black = 0	170:12:5884:5912	250173	0	True				
ANR	250268	AssignmentExpression	dev -> cached_colors . black = 0		250173	0		=			
ANR	250269	MemberAccess	dev -> cached_colors . black		250173	0					
ANR	250270	PtrMemberAccess	dev -> cached_colors		250173	0					
ANR	250271	Identifier	dev		250173	0					
ANR	250272	Identifier	cached_colors		250173	1					
ANR	250273	Identifier	black		250173	1					
ANR	250274	PrimaryExpression	0		250173	1					
ANR	250275	ExpressionStatement	dev -> cached_colors . white = ( 1 << dev -> color_info . depth ) - 1	171:12:5926:5985	250173	1	True				
ANR	250276	AssignmentExpression	dev -> cached_colors . white = ( 1 << dev -> color_info . depth ) - 1		250173	0		=			
ANR	250277	MemberAccess	dev -> cached_colors . white		250173	0					
ANR	250278	PtrMemberAccess	dev -> cached_colors		250173	0					
ANR	250279	Identifier	dev		250173	0					
ANR	250280	Identifier	cached_colors		250173	1					
ANR	250281	Identifier	white		250173	1					
ANR	250282	AdditiveExpression	( 1 << dev -> color_info . depth ) - 1		250173	1		-			
ANR	250283	ShiftExpression	1 << dev -> color_info . depth		250173	0		<<			
ANR	250284	PrimaryExpression	1		250173	0					
ANR	250285	MemberAccess	dev -> color_info . depth		250173	1					
ANR	250286	PtrMemberAccess	dev -> color_info		250173	0					
ANR	250287	Identifier	dev		250173	0					
ANR	250288	Identifier	color_info		250173	1					
ANR	250289	Identifier	depth		250173	1					
ANR	250290	PrimaryExpression	1		250173	1					
ANR	250291	ExpressionStatement	dev -> graphics_type_tag = GS_UNKNOWN_TAG	173:8:6005:6044	250173	1	True				
ANR	250292	AssignmentExpression	dev -> graphics_type_tag = GS_UNKNOWN_TAG		250173	0		=			
ANR	250293	PtrMemberAccess	dev -> graphics_type_tag		250173	0					
ANR	250294	Identifier	dev		250173	0					
ANR	250295	Identifier	graphics_type_tag		250173	1					
ANR	250296	Identifier	GS_UNKNOWN_TAG		250173	1					
ANR	250297	ElseStatement	else		250173	0					
ANR	250298	CompoundStatement		24:11:861:861	250173	0					
ANR	250299	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) dev , target )"	175:8:6067:6121	250173	0	True				
ANR	250300	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) dev , target )"		250173	0					
ANR	250301	Callee	gx_device_set_target		250173	0					
ANR	250302	Identifier	gx_device_set_target		250173	0					
ANR	250303	ArgumentList	( gx_device_forward * ) dev		250173	1					
ANR	250304	Argument	( gx_device_forward * ) dev		250173	0					
ANR	250305	CastExpression	( gx_device_forward * ) dev		250173	0					
ANR	250306	CastTarget	gx_device_forward *		250173	0					
ANR	250307	Identifier	dev		250173	1					
ANR	250308	Argument	target		250173	1					
ANR	250309	Identifier	target		250173	0					
ANR	250310	ExpressionStatement	gx_device_forward_color_procs ( ( gx_device_forward * ) dev )	177:8:6197:6253	250173	1	True				
ANR	250311	CallExpression	gx_device_forward_color_procs ( ( gx_device_forward * ) dev )		250173	0					
ANR	250312	Callee	gx_device_forward_color_procs		250173	0					
ANR	250313	Identifier	gx_device_forward_color_procs		250173	0					
ANR	250314	ArgumentList	( gx_device_forward * ) dev		250173	1					
ANR	250315	Argument	( gx_device_forward * ) dev		250173	0					
ANR	250316	CastExpression	( gx_device_forward * ) dev		250173	0					
ANR	250317	CastTarget	gx_device_forward *		250173	0					
ANR	250318	Identifier	dev		250173	1					
ANR	250319	ExpressionStatement	"gx_device_copy_color_procs ( ( gx_device * ) dev , target )"	178:8:6263:6315	250173	2	True				
ANR	250320	CallExpression	"gx_device_copy_color_procs ( ( gx_device * ) dev , target )"		250173	0					
ANR	250321	Callee	gx_device_copy_color_procs		250173	0					
ANR	250322	Identifier	gx_device_copy_color_procs		250173	0					
ANR	250323	ArgumentList	( gx_device * ) dev		250173	1					
ANR	250324	Argument	( gx_device * ) dev		250173	0					
ANR	250325	CastExpression	( gx_device * ) dev		250173	0					
ANR	250326	CastTarget	gx_device *		250173	0					
ANR	250327	Identifier	dev		250173	1					
ANR	250328	Argument	target		250173	1					
ANR	250329	Identifier	target		250173	0					
ANR	250330	ExpressionStatement	dev -> color_info . separable_and_linear = target -> color_info . separable_and_linear	179:8:6325:6403	250173	3	True				
ANR	250331	AssignmentExpression	dev -> color_info . separable_and_linear = target -> color_info . separable_and_linear		250173	0		=			
ANR	250332	MemberAccess	dev -> color_info . separable_and_linear		250173	0					
ANR	250333	PtrMemberAccess	dev -> color_info		250173	0					
ANR	250334	Identifier	dev		250173	0					
ANR	250335	Identifier	color_info		250173	1					
ANR	250336	Identifier	separable_and_linear		250173	1					
ANR	250337	MemberAccess	target -> color_info . separable_and_linear		250173	1					
ANR	250338	PtrMemberAccess	target -> color_info		250173	0					
ANR	250339	Identifier	target		250173	0					
ANR	250340	Identifier	color_info		250173	1					
ANR	250341	Identifier	separable_and_linear		250173	1					
ANR	250342	ExpressionStatement	dev -> cached_colors = target -> cached_colors	180:8:6413:6455	250173	4	True				
ANR	250343	AssignmentExpression	dev -> cached_colors = target -> cached_colors		250173	0		=			
ANR	250344	PtrMemberAccess	dev -> cached_colors		250173	0					
ANR	250345	Identifier	dev		250173	0					
ANR	250346	Identifier	cached_colors		250173	1					
ANR	250347	PtrMemberAccess	target -> cached_colors		250173	1					
ANR	250348	Identifier	target		250173	0					
ANR	250349	Identifier	cached_colors		250173	1					
ANR	250350	ExpressionStatement	dev -> graphics_type_tag = target -> graphics_type_tag	181:8:6465:6515	250173	5	True				
ANR	250351	AssignmentExpression	dev -> graphics_type_tag = target -> graphics_type_tag		250173	0		=			
ANR	250352	PtrMemberAccess	dev -> graphics_type_tag		250173	0					
ANR	250353	Identifier	dev		250173	0					
ANR	250354	Identifier	graphics_type_tag		250173	1					
ANR	250355	PtrMemberAccess	target -> graphics_type_tag		250173	1					
ANR	250356	Identifier	target		250173	0					
ANR	250357	Identifier	graphics_type_tag		250173	1					
ANR	250358	ExpressionStatement	"set_dev_proc ( dev , put_image , target -> procs . put_image )"	183:8:6630:6683	250173	6	True				
ANR	250359	CallExpression	"set_dev_proc ( dev , put_image , target -> procs . put_image )"		250173	0					
ANR	250360	Callee	set_dev_proc		250173	0					
ANR	250361	Identifier	set_dev_proc		250173	0					
ANR	250362	ArgumentList	dev		250173	1					
ANR	250363	Argument	dev		250173	0					
ANR	250364	Identifier	dev		250173	0					
ANR	250365	Argument	put_image		250173	1					
ANR	250366	Identifier	put_image		250173	0					
ANR	250367	Argument	target -> procs . put_image		250173	2					
ANR	250368	MemberAccess	target -> procs . put_image		250173	0					
ANR	250369	PtrMemberAccess	target -> procs		250173	0					
ANR	250370	Identifier	target		250173	0					
ANR	250371	Identifier	procs		250173	1					
ANR	250372	Identifier	put_image		250173	1					
ANR	250373	ExpressionStatement	"set_dev_proc ( dev , dev_spec_op , gx_default_dev_spec_op )"	184:8:6693:6747	250173	7	True				
ANR	250374	CallExpression	"set_dev_proc ( dev , dev_spec_op , gx_default_dev_spec_op )"		250173	0					
ANR	250375	Callee	set_dev_proc		250173	0					
ANR	250376	Identifier	set_dev_proc		250173	0					
ANR	250377	ArgumentList	dev		250173	1					
ANR	250378	Argument	dev		250173	0					
ANR	250379	Identifier	dev		250173	0					
ANR	250380	Argument	dev_spec_op		250173	1					
ANR	250381	Identifier	dev_spec_op		250173	0					
ANR	250382	Argument	gx_default_dev_spec_op		250173	2					
ANR	250383	Identifier	gx_default_dev_spec_op		250173	0					
ANR	250384	IfStatement	if ( dev -> color_info . depth == 1 )		250173	4					
ANR	250385	Condition	dev -> color_info . depth == 1	186:8:6763:6788	250173	0	True				
ANR	250386	EqualityExpression	dev -> color_info . depth == 1		250173	0		==			
ANR	250387	MemberAccess	dev -> color_info . depth		250173	0					
ANR	250388	PtrMemberAccess	dev -> color_info		250173	0					
ANR	250389	Identifier	dev		250173	0					
ANR	250390	Identifier	color_info		250173	1					
ANR	250391	Identifier	depth		250173	1					
ANR	250392	PrimaryExpression	1		250173	1					
ANR	250393	CompoundStatement		38:8:1664:1671	250173	1					
ANR	250394	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	187:8:6801:6850	250173	0	True				
ANR	250395	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		250173	0					
ANR	250396	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		250173	0					
ANR	250397	Identifier	cv		250173	1					
ANR	250398	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		250173	2					
ANR	250399	IdentifierDeclStatement	uchar k ;	188:8:6860:6867	250173	1	True				
ANR	250400	IdentifierDecl	k		250173	0					
ANR	250401	IdentifierDeclType	uchar		250173	0					
ANR	250402	Identifier	k		250173	1					
ANR	250403	IfStatement	if ( target != 0 )		250173	2					
ANR	250404	Condition	target != 0	190:12:6882:6892	250173	0	True				
ANR	250405	EqualityExpression	target != 0		250173	0		!=			
ANR	250406	Identifier	target		250173	0					
ANR	250407	PrimaryExpression	0		250173	1					
ANR	250408	CompoundStatement		40:25:1699:1699	250173	1					
ANR	250409	ForStatement	for ( k = 0 ; k < target -> color_info . num_components ; k ++ )		250173	0					
ANR	250410	ForInit	k = 0 ;	191:17:6914:6919	250173	0	True				
ANR	250411	AssignmentExpression	k = 0		250173	0		=			
ANR	250412	Identifier	k		250173	0					
ANR	250413	PrimaryExpression	0		250173	1					
ANR	250414	Condition	k < target -> color_info . num_components	191:24:6921:6957	250173	1	True				
ANR	250415	RelationalExpression	k < target -> color_info . num_components		250173	0		<			
ANR	250416	Identifier	k		250173	0					
ANR	250417	MemberAccess	target -> color_info . num_components		250173	1					
ANR	250418	PtrMemberAccess	target -> color_info		250173	0					
ANR	250419	Identifier	target		250173	0					
ANR	250420	Identifier	color_info		250173	1					
ANR	250421	Identifier	num_components		250173	1					
ANR	250422	PostIncDecOperationExpression	k ++	191:63:6960:6962	250173	2	True				
ANR	250423	Identifier	k		250173	0					
ANR	250424	IncDec	++		250173	1					
ANR	250425	CompoundStatement		41:68:1769:1769	250173	3					
ANR	250426	ExpressionStatement	cv [ k ] = 0	192:16:6983:6992	250173	0	True				
ANR	250427	AssignmentExpression	cv [ k ] = 0		250173	0		=			
ANR	250428	ArrayIndexing	cv [ k ]		250173	0					
ANR	250429	Identifier	cv		250173	0					
ANR	250430	Identifier	k		250173	1					
ANR	250431	PrimaryExpression	0		250173	1					
ANR	250432	ExpressionStatement	"gdev_mem_mono_set_inverted ( dev , ( target == 0 || ( * dev_proc ( dev , encode_color ) ) ( ( gx_device * ) dev , cv ) != 0 ) )"	195:7:7025:7168	250173	3	True				
ANR	250433	CallExpression	"gdev_mem_mono_set_inverted ( dev , ( target == 0 || ( * dev_proc ( dev , encode_color ) ) ( ( gx_device * ) dev , cv ) != 0 ) )"		250173	0					
ANR	250434	Callee	gdev_mem_mono_set_inverted		250173	0					
ANR	250435	Identifier	gdev_mem_mono_set_inverted		250173	0					
ANR	250436	ArgumentList	dev		250173	1					
ANR	250437	Argument	dev		250173	0					
ANR	250438	Identifier	dev		250173	0					
ANR	250439	Argument	"target == 0 || ( * dev_proc ( dev , encode_color ) ) ( ( gx_device * ) dev , cv ) != 0"		250173	1					
ANR	250440	OrExpression	"target == 0 || ( * dev_proc ( dev , encode_color ) ) ( ( gx_device * ) dev , cv ) != 0"		250173	0		||			
ANR	250441	EqualityExpression	target == 0		250173	0		==			
ANR	250442	Identifier	target		250173	0					
ANR	250443	PrimaryExpression	0		250173	1					
ANR	250444	EqualityExpression	"( * dev_proc ( dev , encode_color ) ) ( ( gx_device * ) dev , cv ) != 0"		250173	1		!=			
ANR	250445	CallExpression	"( * dev_proc ( dev , encode_color ) ) ( ( gx_device * ) dev , cv )"		250173	0					
ANR	250446	Callee	"* dev_proc ( dev , encode_color )"		250173	0					
ANR	250447	UnaryOperationExpression	"* dev_proc ( dev , encode_color )"		250173	0					
ANR	250448	UnaryOperator	*		250173	0					
ANR	250449	CallExpression	"dev_proc ( dev , encode_color )"		250173	1					
ANR	250450	Callee	dev_proc		250173	0					
ANR	250451	Identifier	dev_proc		250173	0					
ANR	250452	ArgumentList	dev		250173	1					
ANR	250453	Argument	dev		250173	0					
ANR	250454	Identifier	dev		250173	0					
ANR	250455	Argument	encode_color		250173	1					
ANR	250456	Identifier	encode_color		250173	0					
ANR	250457	ArgumentList	( gx_device * ) dev		250173	1					
ANR	250458	Argument	( gx_device * ) dev		250173	0					
ANR	250459	CastExpression	( gx_device * ) dev		250173	0					
ANR	250460	CastTarget	gx_device *		250173	0					
ANR	250461	Identifier	dev		250173	1					
ANR	250462	Argument	cv		250173	1					
ANR	250463	Identifier	cv		250173	0					
ANR	250464	PrimaryExpression	0		250173	1					
ANR	250465	ExpressionStatement	check_device_separable ( ( gx_device * ) dev )	198:4:7180:7220	250173	5	True				
ANR	250466	CallExpression	check_device_separable ( ( gx_device * ) dev )		250173	0					
ANR	250467	Callee	check_device_separable		250173	0					
ANR	250468	Identifier	check_device_separable		250173	0					
ANR	250469	ArgumentList	( gx_device * ) dev		250173	1					
ANR	250470	Argument	( gx_device * ) dev		250173	0					
ANR	250471	CastExpression	( gx_device * ) dev		250173	0					
ANR	250472	CastTarget	gx_device *		250173	0					
ANR	250473	Identifier	dev		250173	1					
ANR	250474	ExpressionStatement	gx_device_fill_in_procs ( ( gx_device * ) dev )	199:4:7226:7267	250173	6	True				
ANR	250475	CallExpression	gx_device_fill_in_procs ( ( gx_device * ) dev )		250173	0					
ANR	250476	Callee	gx_device_fill_in_procs		250173	0					
ANR	250477	Identifier	gx_device_fill_in_procs		250173	0					
ANR	250478	ArgumentList	( gx_device * ) dev		250173	1					
ANR	250479	Argument	( gx_device * ) dev		250173	0					
ANR	250480	CastExpression	( gx_device * ) dev		250173	0					
ANR	250481	CastTarget	gx_device *		250173	0					
ANR	250482	Identifier	dev		250173	1					
ANR	250483	ExpressionStatement	dev -> band_y = 0	200:4:7273:7288	250173	7	True				
ANR	250484	AssignmentExpression	dev -> band_y = 0		250173	0		=			
ANR	250485	PtrMemberAccess	dev -> band_y		250173	0					
ANR	250486	Identifier	dev		250173	0					
ANR	250487	Identifier	band_y		250173	1					
ANR	250488	PrimaryExpression	0		250173	1					
ANR	250489	ReturnType	void		250173	1					
ANR	250490	Identifier	gs_make_mem_device		250173	2					
ANR	250491	ParameterList	"gx_device_memory * dev , const gx_device_memory * mdproto , gs_memory_t * mem , int page_device , gx_device * target"		250173	3					
ANR	250492	Parameter	gx_device_memory * dev	149:19:5062:5083	250173	0	True				
ANR	250493	ParameterType	gx_device_memory *		250173	0					
ANR	250494	Identifier	dev		250173	1					
ANR	250495	Parameter	const gx_device_memory * mdproto	149:43:5086:5117	250173	1	True				
ANR	250496	ParameterType	const gx_device_memory *		250173	0					
ANR	250497	Identifier	mdproto		250173	1					
ANR	250498	Parameter	gs_memory_t * mem	150:19:5139:5155	250173	2	True				
ANR	250499	ParameterType	gs_memory_t *		250173	0					
ANR	250500	Identifier	mem		250173	1					
ANR	250501	Parameter	int page_device	150:38:5158:5172	250173	3	True				
ANR	250502	ParameterType	int		250173	0					
ANR	250503	Identifier	page_device		250173	1					
ANR	250504	Parameter	gx_device * target	150:55:5175:5192	250173	4	True				
ANR	250505	ParameterType	gx_device *		250173	0					
ANR	250506	Identifier	target		250173	1					
ANR	250507	CFGEntryNode	ENTRY		250173		True				
ANR	250508	CFGExitNode	EXIT		250173		True				
ANR	250509	Symbol	* dev		250173						
ANR	250510	Symbol	target -> graphics_type_tag		250173						
ANR	250511	Symbol	gx_page_device_get_page_device		250173						
ANR	250512	Symbol	encode_color		250173						
ANR	250513	Symbol	* dev_proc		250173						
ANR	250514	Symbol	dev_spec_op		250173						
ANR	250515	Symbol	"* dev_proc ( dev , encode_color )"		250173						
ANR	250516	Symbol	GS_UNKNOWN_TAG		250173						
ANR	250517	Symbol	dev -> band_y		250173						
ANR	250518	Symbol	dev -> color_info . separable_and_linear		250173						
ANR	250519	Symbol	dev -> color_info . depth		250173						
ANR	250520	Symbol	dev -> color_info		250173						
ANR	250521	Symbol	target -> procs . put_image		250173						
ANR	250522	Symbol	gx_default_get_page_device		250173						
ANR	250523	Symbol	dev		250173						
ANR	250524	Symbol	mem		250173						
ANR	250525	Symbol	& st_device_memory		250173						
ANR	250526	Symbol	dev_proc		250173						
ANR	250527	Symbol	target -> color_info . separable_and_linear		250173						
ANR	250528	Symbol	gx_default_dev_spec_op		250173						
ANR	250529	Symbol	page_device		250173						
ANR	250530	Symbol	dev -> cached_colors . white		250173						
ANR	250531	Symbol	dev -> cached_colors . black		250173						
ANR	250532	Symbol	put_image		250173						
ANR	250533	Symbol	target -> color_info		250173						
ANR	250534	Symbol	k		250173						
ANR	250535	Symbol	target -> color_info . num_components		250173						
ANR	250536	Symbol	dev -> stype		250173						
ANR	250537	Symbol	get_page_device		250173						
ANR	250538	Symbol	target		250173						
ANR	250539	Symbol	* target		250173						
ANR	250540	Symbol	cv		250173						
ANR	250541	Symbol	target -> procs		250173						
ANR	250542	Symbol	* k		250173						
ANR	250543	Symbol	true		250173						
ANR	250544	Symbol	dev -> cached_colors		250173						
ANR	250545	Symbol	target -> cached_colors		250173						
ANR	250546	Symbol	dev -> graphics_type_tag		250173						
ANR	250547	Symbol	mdproto		250173						
ANR	250548	Symbol	* cv		250173						
ANR	250549	Function	gs_make_mem_device_with_copydevice	205:0:7451:9569							
ANR	250550	FunctionDef	"gs_make_mem_device_with_copydevice (gx_device_memory * * ppdev , const gx_device_memory * mdproto , gs_memory_t * mem , int page_device , gx_device * target)"		250549	0					
ANR	250551	CompoundStatement		211:0:7747:9569	250549	0					
ANR	250552	IdentifierDeclStatement	int code ;	212:4:7753:7761	250549	0	True				
ANR	250553	IdentifierDecl	code		250549	0					
ANR	250554	IdentifierDeclType	int		250549	0					
ANR	250555	Identifier	code		250549	1					
ANR	250556	IdentifierDeclStatement	gx_device_memory * pdev ;	213:4:7767:7789	250549	1	True				
ANR	250557	IdentifierDecl	* pdev		250549	0					
ANR	250558	IdentifierDeclType	gx_device_memory *		250549	0					
ANR	250559	Identifier	pdev		250549	1					
ANR	250560	IfStatement	if ( mem == 0 )		250549	2					
ANR	250561	Condition	mem == 0	215:8:7800:7807	250549	0	True				
ANR	250562	EqualityExpression	mem == 0		250549	0		==			
ANR	250563	Identifier	mem		250549	0					
ANR	250564	PrimaryExpression	0		250549	1					
ANR	250565	ReturnStatement	return - 1 ;	216:8:7818:7827	250549	1	True				
ANR	250566	UnaryOperationExpression	- 1		250549	0					
ANR	250567	UnaryOperator	-		250549	0					
ANR	250568	PrimaryExpression	1		250549	1					
ANR	250569	ExpressionStatement	"code = gs_copydevice ( ( gx_device * * ) & pdev , ( const gx_device * ) mdproto , mem )"	218:4:7834:7958	250549	3	True				
ANR	250570	AssignmentExpression	"code = gs_copydevice ( ( gx_device * * ) & pdev , ( const gx_device * ) mdproto , mem )"		250549	0		=			
ANR	250571	Identifier	code		250549	0					
ANR	250572	CallExpression	"gs_copydevice ( ( gx_device * * ) & pdev , ( const gx_device * ) mdproto , mem )"		250549	1					
ANR	250573	Callee	gs_copydevice		250549	0					
ANR	250574	Identifier	gs_copydevice		250549	0					
ANR	250575	ArgumentList	( gx_device * * ) & pdev		250549	1					
ANR	250576	Argument	( gx_device * * ) & pdev		250549	0					
ANR	250577	CastExpression	( gx_device * * ) & pdev		250549	0					
ANR	250578	CastTarget	gx_device * *		250549	0					
ANR	250579	UnaryOperationExpression	& pdev		250549	1					
ANR	250580	UnaryOperator	&		250549	0					
ANR	250581	Identifier	pdev		250549	1					
ANR	250582	Argument	( const gx_device * ) mdproto		250549	1					
ANR	250583	CastExpression	( const gx_device * ) mdproto		250549	0					
ANR	250584	CastTarget	const gx_device *		250549	0					
ANR	250585	Identifier	mdproto		250549	1					
ANR	250586	Argument	mem		250549	2					
ANR	250587	Identifier	mem		250549	0					
ANR	250588	IfStatement	if ( code < 0 )		250549	4					
ANR	250589	Condition	code < 0	221:8:7968:7975	250549	0	True				
ANR	250590	RelationalExpression	code < 0		250549	0		<			
ANR	250591	Identifier	code		250549	0					
ANR	250592	PrimaryExpression	0		250549	1					
ANR	250593	ReturnStatement	return code ;	222:8:7986:7997	250549	1	True				
ANR	250594	Identifier	code		250549	0					
ANR	250595	SwitchStatement	switch ( page_device )		250549	5					
ANR	250596	Condition	page_device	224:12:8012:8022	250549	0	True				
ANR	250597	Identifier	page_device		250549	0					
ANR	250598	CompoundStatement		14:25:277:277	250549	1					
ANR	250599	Statement	case	225:8:8035:8038	250549	0	True				
ANR	250600	Statement	-	225:13:8040:8040	250549	1	True				
ANR	250601	Label	1 :	225:14:8041:8042	250549	2	True				
ANR	250602	ExpressionStatement	"set_dev_proc ( pdev , get_page_device , gx_default_get_page_device )"	226:12:8056:8119	250549	3	True				
ANR	250603	CallExpression	"set_dev_proc ( pdev , get_page_device , gx_default_get_page_device )"		250549	0					
ANR	250604	Callee	set_dev_proc		250549	0					
ANR	250605	Identifier	set_dev_proc		250549	0					
ANR	250606	ArgumentList	pdev		250549	1					
ANR	250607	Argument	pdev		250549	0					
ANR	250608	Identifier	pdev		250549	0					
ANR	250609	Argument	get_page_device		250549	1					
ANR	250610	Identifier	get_page_device		250549	0					
ANR	250611	Argument	gx_default_get_page_device		250549	2					
ANR	250612	Identifier	gx_default_get_page_device		250549	0					
ANR	250613	BreakStatement	break ;	227:12:8133:8138	250549	4	True				
ANR	250614	Label	case 1 :	228:8:8148:8154	250549	5	True				
ANR	250615	ExpressionStatement	"set_dev_proc ( pdev , get_page_device , gx_page_device_get_page_device )"	229:12:8168:8235	250549	6	True				
ANR	250616	CallExpression	"set_dev_proc ( pdev , get_page_device , gx_page_device_get_page_device )"		250549	0					
ANR	250617	Callee	set_dev_proc		250549	0					
ANR	250618	Identifier	set_dev_proc		250549	0					
ANR	250619	ArgumentList	pdev		250549	1					
ANR	250620	Argument	pdev		250549	0					
ANR	250621	Identifier	pdev		250549	0					
ANR	250622	Argument	get_page_device		250549	1					
ANR	250623	Identifier	get_page_device		250549	0					
ANR	250624	Argument	gx_page_device_get_page_device		250549	2					
ANR	250625	Identifier	gx_page_device_get_page_device		250549	0					
ANR	250626	BreakStatement	break ;	230:12:8249:8254	250549	7	True				
ANR	250627	IfStatement	if ( target == 0 )		250549	6					
ANR	250628	Condition	target == 0	233:8:8315:8325	250549	0	True				
ANR	250629	EqualityExpression	target == 0		250549	0		==			
ANR	250630	Identifier	target		250549	0					
ANR	250631	PrimaryExpression	0		250549	1					
ANR	250632	CompoundStatement		23:21:580:580	250549	1					
ANR	250633	IfStatement	if ( pdev -> color_info . depth == 1 )		250549	0					
ANR	250634	Condition	pdev -> color_info . depth == 1	234:12:8342:8368	250549	0	True				
ANR	250635	EqualityExpression	pdev -> color_info . depth == 1		250549	0		==			
ANR	250636	MemberAccess	pdev -> color_info . depth		250549	0					
ANR	250637	PtrMemberAccess	pdev -> color_info		250549	0					
ANR	250638	Identifier	pdev		250549	0					
ANR	250639	Identifier	color_info		250549	1					
ANR	250640	Identifier	depth		250549	1					
ANR	250641	PrimaryExpression	1		250549	1					
ANR	250642	CompoundStatement		24:41:623:623	250549	1					
ANR	250643	ExpressionStatement	pdev -> cached_colors . black = 1	236:12:8456:8485	250549	0	True				
ANR	250644	AssignmentExpression	pdev -> cached_colors . black = 1		250549	0		=			
ANR	250645	MemberAccess	pdev -> cached_colors . black		250549	0					
ANR	250646	PtrMemberAccess	pdev -> cached_colors		250549	0					
ANR	250647	Identifier	pdev		250549	0					
ANR	250648	Identifier	cached_colors		250549	1					
ANR	250649	Identifier	black		250549	1					
ANR	250650	PrimaryExpression	1		250549	1					
ANR	250651	ExpressionStatement	pdev -> cached_colors . white = 0	237:12:8499:8528	250549	1	True				
ANR	250652	AssignmentExpression	pdev -> cached_colors . white = 0		250549	0		=			
ANR	250653	MemberAccess	pdev -> cached_colors . white		250549	0					
ANR	250654	PtrMemberAccess	pdev -> cached_colors		250549	0					
ANR	250655	Identifier	pdev		250549	0					
ANR	250656	Identifier	cached_colors		250549	1					
ANR	250657	Identifier	white		250549	1					
ANR	250658	PrimaryExpression	0		250549	1					
ANR	250659	ElseStatement	else		250549	0					
ANR	250660	CompoundStatement		28:15:797:797	250549	0					
ANR	250661	ExpressionStatement	pdev -> cached_colors . black = 0	239:12:8559:8588	250549	0	True				
ANR	250662	AssignmentExpression	pdev -> cached_colors . black = 0		250549	0		=			
ANR	250663	MemberAccess	pdev -> cached_colors . black		250549	0					
ANR	250664	PtrMemberAccess	pdev -> cached_colors		250549	0					
ANR	250665	Identifier	pdev		250549	0					
ANR	250666	Identifier	cached_colors		250549	1					
ANR	250667	Identifier	black		250549	1					
ANR	250668	PrimaryExpression	0		250549	1					
ANR	250669	ExpressionStatement	pdev -> cached_colors . white = ( 1 << pdev -> color_info . depth ) - 1	240:12:8602:8663	250549	1	True				
ANR	250670	AssignmentExpression	pdev -> cached_colors . white = ( 1 << pdev -> color_info . depth ) - 1		250549	0		=			
ANR	250671	MemberAccess	pdev -> cached_colors . white		250549	0					
ANR	250672	PtrMemberAccess	pdev -> cached_colors		250549	0					
ANR	250673	Identifier	pdev		250549	0					
ANR	250674	Identifier	cached_colors		250549	1					
ANR	250675	Identifier	white		250549	1					
ANR	250676	AdditiveExpression	( 1 << pdev -> color_info . depth ) - 1		250549	1		-			
ANR	250677	ShiftExpression	1 << pdev -> color_info . depth		250549	0		<<			
ANR	250678	PrimaryExpression	1		250549	0					
ANR	250679	MemberAccess	pdev -> color_info . depth		250549	1					
ANR	250680	PtrMemberAccess	pdev -> color_info		250549	0					
ANR	250681	Identifier	pdev		250549	0					
ANR	250682	Identifier	color_info		250549	1					
ANR	250683	Identifier	depth		250549	1					
ANR	250684	PrimaryExpression	1		250549	1					
ANR	250685	ExpressionStatement	pdev -> graphics_type_tag = GS_UNKNOWN_TAG	242:8:8683:8723	250549	1	True				
ANR	250686	AssignmentExpression	pdev -> graphics_type_tag = GS_UNKNOWN_TAG		250549	0		=			
ANR	250687	PtrMemberAccess	pdev -> graphics_type_tag		250549	0					
ANR	250688	Identifier	pdev		250549	0					
ANR	250689	Identifier	graphics_type_tag		250549	1					
ANR	250690	Identifier	GS_UNKNOWN_TAG		250549	1					
ANR	250691	ElseStatement	else		250549	0					
ANR	250692	CompoundStatement		33:11:988:988	250549	0					
ANR	250693	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) pdev , target )"	244:8:8746:8801	250549	0	True				
ANR	250694	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) pdev , target )"		250549	0					
ANR	250695	Callee	gx_device_set_target		250549	0					
ANR	250696	Identifier	gx_device_set_target		250549	0					
ANR	250697	ArgumentList	( gx_device_forward * ) pdev		250549	1					
ANR	250698	Argument	( gx_device_forward * ) pdev		250549	0					
ANR	250699	CastExpression	( gx_device_forward * ) pdev		250549	0					
ANR	250700	CastTarget	gx_device_forward *		250549	0					
ANR	250701	Identifier	pdev		250549	1					
ANR	250702	Argument	target		250549	1					
ANR	250703	Identifier	target		250549	0					
ANR	250704	ExpressionStatement	gx_device_forward_color_procs ( ( gx_device_forward * ) pdev )	246:8:8877:8934	250549	1	True				
ANR	250705	CallExpression	gx_device_forward_color_procs ( ( gx_device_forward * ) pdev )		250549	0					
ANR	250706	Callee	gx_device_forward_color_procs		250549	0					
ANR	250707	Identifier	gx_device_forward_color_procs		250549	0					
ANR	250708	ArgumentList	( gx_device_forward * ) pdev		250549	1					
ANR	250709	Argument	( gx_device_forward * ) pdev		250549	0					
ANR	250710	CastExpression	( gx_device_forward * ) pdev		250549	0					
ANR	250711	CastTarget	gx_device_forward *		250549	0					
ANR	250712	Identifier	pdev		250549	1					
ANR	250713	ExpressionStatement	"gx_device_copy_color_procs ( ( gx_device * ) pdev , target )"	247:8:8944:8997	250549	2	True				
ANR	250714	CallExpression	"gx_device_copy_color_procs ( ( gx_device * ) pdev , target )"		250549	0					
ANR	250715	Callee	gx_device_copy_color_procs		250549	0					
ANR	250716	Identifier	gx_device_copy_color_procs		250549	0					
ANR	250717	ArgumentList	( gx_device * ) pdev		250549	1					
ANR	250718	Argument	( gx_device * ) pdev		250549	0					
ANR	250719	CastExpression	( gx_device * ) pdev		250549	0					
ANR	250720	CastTarget	gx_device *		250549	0					
ANR	250721	Identifier	pdev		250549	1					
ANR	250722	Argument	target		250549	1					
ANR	250723	Identifier	target		250549	0					
ANR	250724	ExpressionStatement	pdev -> cached_colors = target -> cached_colors	248:8:9007:9050	250549	3	True				
ANR	250725	AssignmentExpression	pdev -> cached_colors = target -> cached_colors		250549	0		=			
ANR	250726	PtrMemberAccess	pdev -> cached_colors		250549	0					
ANR	250727	Identifier	pdev		250549	0					
ANR	250728	Identifier	cached_colors		250549	1					
ANR	250729	PtrMemberAccess	target -> cached_colors		250549	1					
ANR	250730	Identifier	target		250549	0					
ANR	250731	Identifier	cached_colors		250549	1					
ANR	250732	ExpressionStatement	pdev -> graphics_type_tag = target -> graphics_type_tag	249:8:9060:9111	250549	4	True				
ANR	250733	AssignmentExpression	pdev -> graphics_type_tag = target -> graphics_type_tag		250549	0		=			
ANR	250734	PtrMemberAccess	pdev -> graphics_type_tag		250549	0					
ANR	250735	Identifier	pdev		250549	0					
ANR	250736	Identifier	graphics_type_tag		250549	1					
ANR	250737	PtrMemberAccess	target -> graphics_type_tag		250549	1					
ANR	250738	Identifier	target		250549	0					
ANR	250739	Identifier	graphics_type_tag		250549	1					
ANR	250740	IfStatement	if ( pdev -> color_info . depth == 1 )		250549	7					
ANR	250741	Condition	pdev -> color_info . depth == 1	251:8:9162:9188	250549	0	True				
ANR	250742	EqualityExpression	pdev -> color_info . depth == 1		250549	0		==			
ANR	250743	MemberAccess	pdev -> color_info . depth		250549	0					
ANR	250744	PtrMemberAccess	pdev -> color_info		250549	0					
ANR	250745	Identifier	pdev		250549	0					
ANR	250746	Identifier	color_info		250549	1					
ANR	250747	Identifier	depth		250549	1					
ANR	250748	PrimaryExpression	1		250549	1					
ANR	250749	CompoundStatement		42:8:1453:1473	250549	1					
ANR	250750	IdentifierDeclStatement	gx_color_value cv [ 3 ] ;	252:8:9201:9221	250549	0	True				
ANR	250751	IdentifierDecl	cv [ 3 ]		250549	0					
ANR	250752	IdentifierDeclType	gx_color_value [ 3 ]		250549	0					
ANR	250753	Identifier	cv		250549	1					
ANR	250754	PrimaryExpression	3		250549	2					
ANR	250755	ExpressionStatement	cv [ 0 ] = cv [ 1 ] = cv [ 2 ] = 0	254:7:9231:9256	250549	1	True				
ANR	250756	AssignmentExpression	cv [ 0 ] = cv [ 1 ] = cv [ 2 ] = 0		250549	0		=			
ANR	250757	ArrayIndexing	cv [ 0 ]		250549	0					
ANR	250758	Identifier	cv		250549	0					
ANR	250759	PrimaryExpression	0		250549	1					
ANR	250760	AssignmentExpression	cv [ 1 ] = cv [ 2 ] = 0		250549	1		=			
ANR	250761	ArrayIndexing	cv [ 1 ]		250549	0					
ANR	250762	Identifier	cv		250549	0					
ANR	250763	PrimaryExpression	1		250549	1					
ANR	250764	AssignmentExpression	cv [ 2 ] = 0		250549	1		=			
ANR	250765	ArrayIndexing	cv [ 2 ]		250549	0					
ANR	250766	Identifier	cv		250549	0					
ANR	250767	PrimaryExpression	2		250549	1					
ANR	250768	PrimaryExpression	0		250549	1					
ANR	250769	ExpressionStatement	"gdev_mem_mono_set_inverted ( pdev , ( target == 0 || ( * dev_proc ( pdev , encode_color ) ) ( ( gx_device * ) pdev , cv ) != 0 ) )"	255:8:9266:9411	250549	2	True				
ANR	250770	CallExpression	"gdev_mem_mono_set_inverted ( pdev , ( target == 0 || ( * dev_proc ( pdev , encode_color ) ) ( ( gx_device * ) pdev , cv ) != 0 ) )"		250549	0					
ANR	250771	Callee	gdev_mem_mono_set_inverted		250549	0					
ANR	250772	Identifier	gdev_mem_mono_set_inverted		250549	0					
ANR	250773	ArgumentList	pdev		250549	1					
ANR	250774	Argument	pdev		250549	0					
ANR	250775	Identifier	pdev		250549	0					
ANR	250776	Argument	"target == 0 || ( * dev_proc ( pdev , encode_color ) ) ( ( gx_device * ) pdev , cv ) != 0"		250549	1					
ANR	250777	OrExpression	"target == 0 || ( * dev_proc ( pdev , encode_color ) ) ( ( gx_device * ) pdev , cv ) != 0"		250549	0		||			
ANR	250778	EqualityExpression	target == 0		250549	0		==			
ANR	250779	Identifier	target		250549	0					
ANR	250780	PrimaryExpression	0		250549	1					
ANR	250781	EqualityExpression	"( * dev_proc ( pdev , encode_color ) ) ( ( gx_device * ) pdev , cv ) != 0"		250549	1		!=			
ANR	250782	CallExpression	"( * dev_proc ( pdev , encode_color ) ) ( ( gx_device * ) pdev , cv )"		250549	0					
ANR	250783	Callee	"* dev_proc ( pdev , encode_color )"		250549	0					
ANR	250784	UnaryOperationExpression	"* dev_proc ( pdev , encode_color )"		250549	0					
ANR	250785	UnaryOperator	*		250549	0					
ANR	250786	CallExpression	"dev_proc ( pdev , encode_color )"		250549	1					
ANR	250787	Callee	dev_proc		250549	0					
ANR	250788	Identifier	dev_proc		250549	0					
ANR	250789	ArgumentList	pdev		250549	1					
ANR	250790	Argument	pdev		250549	0					
ANR	250791	Identifier	pdev		250549	0					
ANR	250792	Argument	encode_color		250549	1					
ANR	250793	Identifier	encode_color		250549	0					
ANR	250794	ArgumentList	( gx_device * ) pdev		250549	1					
ANR	250795	Argument	( gx_device * ) pdev		250549	0					
ANR	250796	CastExpression	( gx_device * ) pdev		250549	0					
ANR	250797	CastTarget	gx_device *		250549	0					
ANR	250798	Identifier	pdev		250549	1					
ANR	250799	Argument	cv		250549	1					
ANR	250800	Identifier	cv		250549	0					
ANR	250801	PrimaryExpression	0		250549	1					
ANR	250802	ExpressionStatement	check_device_separable ( ( gx_device * ) pdev )	258:4:9423:9464	250549	8	True				
ANR	250803	CallExpression	check_device_separable ( ( gx_device * ) pdev )		250549	0					
ANR	250804	Callee	check_device_separable		250549	0					
ANR	250805	Identifier	check_device_separable		250549	0					
ANR	250806	ArgumentList	( gx_device * ) pdev		250549	1					
ANR	250807	Argument	( gx_device * ) pdev		250549	0					
ANR	250808	CastExpression	( gx_device * ) pdev		250549	0					
ANR	250809	CastTarget	gx_device *		250549	0					
ANR	250810	Identifier	pdev		250549	1					
ANR	250811	ExpressionStatement	gx_device_fill_in_procs ( ( gx_device * ) pdev )	259:4:9470:9512	250549	9	True				
ANR	250812	CallExpression	gx_device_fill_in_procs ( ( gx_device * ) pdev )		250549	0					
ANR	250813	Callee	gx_device_fill_in_procs		250549	0					
ANR	250814	Identifier	gx_device_fill_in_procs		250549	0					
ANR	250815	ArgumentList	( gx_device * ) pdev		250549	1					
ANR	250816	Argument	( gx_device * ) pdev		250549	0					
ANR	250817	CastExpression	( gx_device * ) pdev		250549	0					
ANR	250818	CastTarget	gx_device *		250549	0					
ANR	250819	Identifier	pdev		250549	1					
ANR	250820	ExpressionStatement	pdev -> band_y = 0	260:4:9518:9534	250549	10	True				
ANR	250821	AssignmentExpression	pdev -> band_y = 0		250549	0		=			
ANR	250822	PtrMemberAccess	pdev -> band_y		250549	0					
ANR	250823	Identifier	pdev		250549	0					
ANR	250824	Identifier	band_y		250549	1					
ANR	250825	PrimaryExpression	0		250549	1					
ANR	250826	ExpressionStatement	* ppdev = pdev	261:4:9540:9553	250549	11	True				
ANR	250827	AssignmentExpression	* ppdev = pdev		250549	0		=			
ANR	250828	UnaryOperationExpression	* ppdev		250549	0					
ANR	250829	UnaryOperator	*		250549	0					
ANR	250830	Identifier	ppdev		250549	1					
ANR	250831	Identifier	pdev		250549	1					
ANR	250832	ReturnStatement	return 0 ;	262:4:9559:9567	250549	12	True				
ANR	250833	PrimaryExpression	0		250549	0					
ANR	250834	ReturnType	int		250549	1					
ANR	250835	Identifier	gs_make_mem_device_with_copydevice		250549	2					
ANR	250836	ParameterList	"gx_device_memory * * ppdev , const gx_device_memory * mdproto , gs_memory_t * mem , int page_device , gx_device * target"		250549	3					
ANR	250837	Parameter	gx_device_memory * * ppdev	206:35:7490:7514	250549	0	True				
ANR	250838	ParameterType	gx_device_memory * *		250549	0					
ANR	250839	Identifier	ppdev		250549	1					
ANR	250840	Parameter	const gx_device_memory * mdproto	207:35:7552:7583	250549	1	True				
ANR	250841	ParameterType	const gx_device_memory *		250549	0					
ANR	250842	Identifier	mdproto		250549	1					
ANR	250843	Parameter	gs_memory_t * mem	208:35:7621:7637	250549	2	True				
ANR	250844	ParameterType	gs_memory_t *		250549	0					
ANR	250845	Identifier	mem		250549	1					
ANR	250846	Parameter	int page_device	209:35:7675:7689	250549	3	True				
ANR	250847	ParameterType	int		250549	0					
ANR	250848	Identifier	page_device		250549	1					
ANR	250849	Parameter	gx_device * target	210:35:7727:7744	250549	4	True				
ANR	250850	ParameterType	gx_device *		250549	0					
ANR	250851	Identifier	target		250549	1					
ANR	250852	CFGEntryNode	ENTRY		250549		True				
ANR	250853	CFGExitNode	EXIT		250549		True				
ANR	250854	Symbol	pdev -> band_y		250549						
ANR	250855	Symbol	target -> graphics_type_tag		250549						
ANR	250856	Symbol	code		250549						
ANR	250857	Symbol	gx_page_device_get_page_device		250549						
ANR	250858	Symbol	encode_color		250549						
ANR	250859	Symbol	* dev_proc		250549						
ANR	250860	Symbol	gs_copydevice		250549						
ANR	250861	Symbol	pdev -> color_info . depth		250549						
ANR	250862	Symbol	GS_UNKNOWN_TAG		250549						
ANR	250863	Symbol	pdev -> color_info		250549						
ANR	250864	Symbol	ppdev		250549						
ANR	250865	Symbol	& pdev		250549						
ANR	250866	Symbol	pdev		250549						
ANR	250867	Symbol	gx_default_get_page_device		250549						
ANR	250868	Symbol	mem		250549						
ANR	250869	Symbol	dev_proc		250549						
ANR	250870	Symbol	page_device		250549						
ANR	250871	Symbol	"* dev_proc ( pdev , encode_color )"		250549						
ANR	250872	Symbol	* ppdev		250549						
ANR	250873	Symbol	pdev -> cached_colors		250549						
ANR	250874	Symbol	pdev -> cached_colors . white		250549						
ANR	250875	Symbol	pdev -> graphics_type_tag		250549						
ANR	250876	Symbol	get_page_device		250549						
ANR	250877	Symbol	target		250549						
ANR	250878	Symbol	* target		250549						
ANR	250879	Symbol	cv		250549						
ANR	250880	Symbol	pdev -> cached_colors . black		250549						
ANR	250881	Symbol	target -> cached_colors		250549						
ANR	250882	Symbol	* pdev		250549						
ANR	250883	Symbol	mdproto		250549						
ANR	250884	Symbol	* cv		250549						
ANR	250885	Function	gs_make_mem_mono_device_with_copydevice	266:0:9624:10474							
ANR	250886	FunctionDef	"gs_make_mem_mono_device_with_copydevice (gx_device_memory * * ppdev , gs_memory_t * mem , gx_device * target)"		250885	0					
ANR	250887	CompoundStatement		269:0:9774:10474	250885	0					
ANR	250888	IdentifierDeclStatement	int code ;	270:4:9780:9788	250885	0	True				
ANR	250889	IdentifierDecl	code		250885	0					
ANR	250890	IdentifierDeclType	int		250885	0					
ANR	250891	Identifier	code		250885	1					
ANR	250892	IdentifierDeclStatement	gx_device_memory * pdev ;	271:4:9794:9816	250885	1	True				
ANR	250893	IdentifierDecl	* pdev		250885	0					
ANR	250894	IdentifierDeclType	gx_device_memory *		250885	0					
ANR	250895	Identifier	pdev		250885	1					
ANR	250896	IfStatement	if ( mem == 0 )		250885	2					
ANR	250897	Condition	mem == 0	273:8:9827:9834	250885	0	True				
ANR	250898	EqualityExpression	mem == 0		250885	0		==			
ANR	250899	Identifier	mem		250885	0					
ANR	250900	PrimaryExpression	0		250885	1					
ANR	250901	ReturnStatement	return - 1 ;	274:8:9845:9854	250885	1	True				
ANR	250902	UnaryOperationExpression	- 1		250885	0					
ANR	250903	UnaryOperator	-		250885	0					
ANR	250904	PrimaryExpression	1		250885	1					
ANR	250905	ExpressionStatement	"code = gs_copydevice ( ( gx_device * * ) & pdev , ( const gx_device * ) & mem_mono_device , mem )"	276:4:9861:9994	250885	3	True				
ANR	250906	AssignmentExpression	"code = gs_copydevice ( ( gx_device * * ) & pdev , ( const gx_device * ) & mem_mono_device , mem )"		250885	0		=			
ANR	250907	Identifier	code		250885	0					
ANR	250908	CallExpression	"gs_copydevice ( ( gx_device * * ) & pdev , ( const gx_device * ) & mem_mono_device , mem )"		250885	1					
ANR	250909	Callee	gs_copydevice		250885	0					
ANR	250910	Identifier	gs_copydevice		250885	0					
ANR	250911	ArgumentList	( gx_device * * ) & pdev		250885	1					
ANR	250912	Argument	( gx_device * * ) & pdev		250885	0					
ANR	250913	CastExpression	( gx_device * * ) & pdev		250885	0					
ANR	250914	CastTarget	gx_device * *		250885	0					
ANR	250915	UnaryOperationExpression	& pdev		250885	1					
ANR	250916	UnaryOperator	&		250885	0					
ANR	250917	Identifier	pdev		250885	1					
ANR	250918	Argument	( const gx_device * ) & mem_mono_device		250885	1					
ANR	250919	CastExpression	( const gx_device * ) & mem_mono_device		250885	0					
ANR	250920	CastTarget	const gx_device *		250885	0					
ANR	250921	UnaryOperationExpression	& mem_mono_device		250885	1					
ANR	250922	UnaryOperator	&		250885	0					
ANR	250923	Identifier	mem_mono_device		250885	1					
ANR	250924	Argument	mem		250885	2					
ANR	250925	Identifier	mem		250885	0					
ANR	250926	IfStatement	if ( code < 0 )		250885	4					
ANR	250927	Condition	code < 0	279:8:10004:10011	250885	0	True				
ANR	250928	RelationalExpression	code < 0		250885	0		<			
ANR	250929	Identifier	code		250885	0					
ANR	250930	PrimaryExpression	0		250885	1					
ANR	250931	ReturnStatement	return code ;	280:8:10022:10033	250885	1	True				
ANR	250932	Identifier	code		250885	0					
ANR	250933	ExpressionStatement	"set_dev_proc ( pdev , get_page_device , gx_default_get_page_device )"	282:4:10040:10103	250885	5	True				
ANR	250934	CallExpression	"set_dev_proc ( pdev , get_page_device , gx_default_get_page_device )"		250885	0					
ANR	250935	Callee	set_dev_proc		250885	0					
ANR	250936	Identifier	set_dev_proc		250885	0					
ANR	250937	ArgumentList	pdev		250885	1					
ANR	250938	Argument	pdev		250885	0					
ANR	250939	Identifier	pdev		250885	0					
ANR	250940	Argument	get_page_device		250885	1					
ANR	250941	Identifier	get_page_device		250885	0					
ANR	250942	Argument	gx_default_get_page_device		250885	2					
ANR	250943	Identifier	gx_default_get_page_device		250885	0					
ANR	250944	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) pdev , target )"	283:4:10109:10164	250885	6	True				
ANR	250945	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) pdev , target )"		250885	0					
ANR	250946	Callee	gx_device_set_target		250885	0					
ANR	250947	Identifier	gx_device_set_target		250885	0					
ANR	250948	ArgumentList	( gx_device_forward * ) pdev		250885	1					
ANR	250949	Argument	( gx_device_forward * ) pdev		250885	0					
ANR	250950	CastExpression	( gx_device_forward * ) pdev		250885	0					
ANR	250951	CastTarget	gx_device_forward *		250885	0					
ANR	250952	Identifier	pdev		250885	1					
ANR	250953	Argument	target		250885	1					
ANR	250954	Identifier	target		250885	0					
ANR	250955	ExpressionStatement	"set_dev_proc ( pdev , get_profile , gx_forward_get_profile )"	285:4:10244:10299	250885	7	True				
ANR	250956	CallExpression	"set_dev_proc ( pdev , get_profile , gx_forward_get_profile )"		250885	0					
ANR	250957	Callee	set_dev_proc		250885	0					
ANR	250958	Identifier	set_dev_proc		250885	0					
ANR	250959	ArgumentList	pdev		250885	1					
ANR	250960	Argument	pdev		250885	0					
ANR	250961	Identifier	pdev		250885	0					
ANR	250962	Argument	get_profile		250885	1					
ANR	250963	Identifier	get_profile		250885	0					
ANR	250964	Argument	gx_forward_get_profile		250885	2					
ANR	250965	Identifier	gx_forward_get_profile		250885	0					
ANR	250966	ExpressionStatement	"gdev_mem_mono_set_inverted ( pdev , true )"	287:4:10306:10344	250885	8	True				
ANR	250967	CallExpression	"gdev_mem_mono_set_inverted ( pdev , true )"		250885	0					
ANR	250968	Callee	gdev_mem_mono_set_inverted		250885	0					
ANR	250969	Identifier	gdev_mem_mono_set_inverted		250885	0					
ANR	250970	ArgumentList	pdev		250885	1					
ANR	250971	Argument	pdev		250885	0					
ANR	250972	Identifier	pdev		250885	0					
ANR	250973	Argument	true		250885	1					
ANR	250974	Identifier	true		250885	0					
ANR	250975	ExpressionStatement	check_device_separable ( ( gx_device * ) pdev )	288:4:10350:10391	250885	9	True				
ANR	250976	CallExpression	check_device_separable ( ( gx_device * ) pdev )		250885	0					
ANR	250977	Callee	check_device_separable		250885	0					
ANR	250978	Identifier	check_device_separable		250885	0					
ANR	250979	ArgumentList	( gx_device * ) pdev		250885	1					
ANR	250980	Argument	( gx_device * ) pdev		250885	0					
ANR	250981	CastExpression	( gx_device * ) pdev		250885	0					
ANR	250982	CastTarget	gx_device *		250885	0					
ANR	250983	Identifier	pdev		250885	1					
ANR	250984	ExpressionStatement	gx_device_fill_in_procs ( ( gx_device * ) pdev )	289:4:10397:10439	250885	10	True				
ANR	250985	CallExpression	gx_device_fill_in_procs ( ( gx_device * ) pdev )		250885	0					
ANR	250986	Callee	gx_device_fill_in_procs		250885	0					
ANR	250987	Identifier	gx_device_fill_in_procs		250885	0					
ANR	250988	ArgumentList	( gx_device * ) pdev		250885	1					
ANR	250989	Argument	( gx_device * ) pdev		250885	0					
ANR	250990	CastExpression	( gx_device * ) pdev		250885	0					
ANR	250991	CastTarget	gx_device *		250885	0					
ANR	250992	Identifier	pdev		250885	1					
ANR	250993	ExpressionStatement	* ppdev = pdev	290:4:10445:10458	250885	11	True				
ANR	250994	AssignmentExpression	* ppdev = pdev		250885	0		=			
ANR	250995	UnaryOperationExpression	* ppdev		250885	0					
ANR	250996	UnaryOperator	*		250885	0					
ANR	250997	Identifier	ppdev		250885	1					
ANR	250998	Identifier	pdev		250885	1					
ANR	250999	ReturnStatement	return 0 ;	291:4:10464:10472	250885	12	True				
ANR	251000	PrimaryExpression	0		250885	0					
ANR	251001	ReturnType	int		250885	1					
ANR	251002	Identifier	gs_make_mem_mono_device_with_copydevice		250885	2					
ANR	251003	ParameterList	"gx_device_memory * * ppdev , gs_memory_t * mem , gx_device * target"		250885	3					
ANR	251004	Parameter	gx_device_memory * * ppdev	267:40:9668:9692	250885	0	True				
ANR	251005	ParameterType	gx_device_memory * *		250885	0					
ANR	251006	Identifier	ppdev		250885	1					
ANR	251007	Parameter	gs_memory_t * mem	267:67:9695:9711	250885	1	True				
ANR	251008	ParameterType	gs_memory_t *		250885	0					
ANR	251009	Identifier	mem		250885	1					
ANR	251010	Parameter	gx_device * target	268:40:9754:9771	250885	2	True				
ANR	251011	ParameterType	gx_device *		250885	0					
ANR	251012	Identifier	target		250885	1					
ANR	251013	CFGEntryNode	ENTRY		250885		True				
ANR	251014	CFGExitNode	EXIT		250885		True				
ANR	251015	Symbol	* ppdev		250885						
ANR	251016	Symbol	code		250885						
ANR	251017	Symbol	gs_copydevice		250885						
ANR	251018	Symbol	ppdev		250885						
ANR	251019	Symbol	get_page_device		250885						
ANR	251020	Symbol	target		250885						
ANR	251021	Symbol	& pdev		250885						
ANR	251022	Symbol	pdev		250885						
ANR	251023	Symbol	gx_default_get_page_device		250885						
ANR	251024	Symbol	mem		250885						
ANR	251025	Symbol	true		250885						
ANR	251026	Symbol	& mem_mono_device		250885						
ANR	251027	Symbol	gx_forward_get_profile		250885						
ANR	251028	Symbol	get_profile		250885						
ANR	251029	Function	gs_make_mem_mono_device	296:0:10577:11519							
ANR	251030	FunctionDef	"gs_make_mem_mono_device (gx_device_memory * dev , gs_memory_t * mem , gx_device * target)"		251029	0					
ANR	251031	CompoundStatement		299:0:10693:11519	251029	0					
ANR	251032	ExpressionStatement	"gx_device_init ( ( gx_device * ) dev , ( const gx_device * ) & mem_mono_device , mem , true )"	300:4:10699:10798	251029	0	True				
ANR	251033	CallExpression	"gx_device_init ( ( gx_device * ) dev , ( const gx_device * ) & mem_mono_device , mem , true )"		251029	0					
ANR	251034	Callee	gx_device_init		251029	0					
ANR	251035	Identifier	gx_device_init		251029	0					
ANR	251036	ArgumentList	( gx_device * ) dev		251029	1					
ANR	251037	Argument	( gx_device * ) dev		251029	0					
ANR	251038	CastExpression	( gx_device * ) dev		251029	0					
ANR	251039	CastTarget	gx_device *		251029	0					
ANR	251040	Identifier	dev		251029	1					
ANR	251041	Argument	( const gx_device * ) & mem_mono_device		251029	1					
ANR	251042	CastExpression	( const gx_device * ) & mem_mono_device		251029	0					
ANR	251043	CastTarget	const gx_device *		251029	0					
ANR	251044	UnaryOperationExpression	& mem_mono_device		251029	1					
ANR	251045	UnaryOperator	&		251029	0					
ANR	251046	Identifier	mem_mono_device		251029	1					
ANR	251047	Argument	mem		251029	2					
ANR	251048	Identifier	mem		251029	0					
ANR	251049	Argument	true		251029	3					
ANR	251050	Identifier	true		251029	0					
ANR	251051	ExpressionStatement	"set_dev_proc ( dev , get_page_device , gx_default_get_page_device )"	302:4:10804:10866	251029	1	True				
ANR	251052	CallExpression	"set_dev_proc ( dev , get_page_device , gx_default_get_page_device )"		251029	0					
ANR	251053	Callee	set_dev_proc		251029	0					
ANR	251054	Identifier	set_dev_proc		251029	0					
ANR	251055	ArgumentList	dev		251029	1					
ANR	251056	Argument	dev		251029	0					
ANR	251057	Identifier	dev		251029	0					
ANR	251058	Argument	get_page_device		251029	1					
ANR	251059	Identifier	get_page_device		251029	0					
ANR	251060	Argument	gx_default_get_page_device		251029	2					
ANR	251061	Identifier	gx_default_get_page_device		251029	0					
ANR	251062	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) dev , target )"	303:4:10872:10926	251029	2	True				
ANR	251063	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) dev , target )"		251029	0					
ANR	251064	Callee	gx_device_set_target		251029	0					
ANR	251065	Identifier	gx_device_set_target		251029	0					
ANR	251066	ArgumentList	( gx_device_forward * ) dev		251029	1					
ANR	251067	Argument	( gx_device_forward * ) dev		251029	0					
ANR	251068	CastExpression	( gx_device_forward * ) dev		251029	0					
ANR	251069	CastTarget	gx_device_forward *		251029	0					
ANR	251070	Identifier	dev		251029	1					
ANR	251071	Argument	target		251029	1					
ANR	251072	Identifier	target		251029	0					
ANR	251073	ExpressionStatement	"dev -> raster = gx_device_raster ( ( gx_device * ) dev , 1 )"	304:4:10932:10983	251029	3	True				
ANR	251074	AssignmentExpression	"dev -> raster = gx_device_raster ( ( gx_device * ) dev , 1 )"		251029	0		=			
ANR	251075	PtrMemberAccess	dev -> raster		251029	0					
ANR	251076	Identifier	dev		251029	0					
ANR	251077	Identifier	raster		251029	1					
ANR	251078	CallExpression	"gx_device_raster ( ( gx_device * ) dev , 1 )"		251029	1					
ANR	251079	Callee	gx_device_raster		251029	0					
ANR	251080	Identifier	gx_device_raster		251029	0					
ANR	251081	ArgumentList	( gx_device * ) dev		251029	1					
ANR	251082	Argument	( gx_device * ) dev		251029	0					
ANR	251083	CastExpression	( gx_device * ) dev		251029	0					
ANR	251084	CastTarget	gx_device *		251029	0					
ANR	251085	Identifier	dev		251029	1					
ANR	251086	Argument	1		251029	1					
ANR	251087	PrimaryExpression	1		251029	0					
ANR	251088	ExpressionStatement	"gdev_mem_mono_set_inverted ( dev , true )"	305:4:10989:11026	251029	4	True				
ANR	251089	CallExpression	"gdev_mem_mono_set_inverted ( dev , true )"		251029	0					
ANR	251090	Callee	gdev_mem_mono_set_inverted		251029	0					
ANR	251091	Identifier	gdev_mem_mono_set_inverted		251029	0					
ANR	251092	ArgumentList	dev		251029	1					
ANR	251093	Argument	dev		251029	0					
ANR	251094	Identifier	dev		251029	0					
ANR	251095	Argument	true		251029	1					
ANR	251096	Identifier	true		251029	0					
ANR	251097	ExpressionStatement	check_device_separable ( ( gx_device * ) dev )	306:4:11032:11072	251029	5	True				
ANR	251098	CallExpression	check_device_separable ( ( gx_device * ) dev )		251029	0					
ANR	251099	Callee	check_device_separable		251029	0					
ANR	251100	Identifier	check_device_separable		251029	0					
ANR	251101	ArgumentList	( gx_device * ) dev		251029	1					
ANR	251102	Argument	( gx_device * ) dev		251029	0					
ANR	251103	CastExpression	( gx_device * ) dev		251029	0					
ANR	251104	CastTarget	gx_device *		251029	0					
ANR	251105	Identifier	dev		251029	1					
ANR	251106	ExpressionStatement	gx_device_fill_in_procs ( ( gx_device * ) dev )	307:4:11078:11119	251029	6	True				
ANR	251107	CallExpression	gx_device_fill_in_procs ( ( gx_device * ) dev )		251029	0					
ANR	251108	Callee	gx_device_fill_in_procs		251029	0					
ANR	251109	Identifier	gx_device_fill_in_procs		251029	0					
ANR	251110	ArgumentList	( gx_device * ) dev		251029	1					
ANR	251111	Argument	( gx_device * ) dev		251029	0					
ANR	251112	CastExpression	( gx_device * ) dev		251029	0					
ANR	251113	CastTarget	gx_device *		251029	0					
ANR	251114	Identifier	dev		251029	1					
ANR	251115	ExpressionStatement	"set_dev_proc ( dev , get_profile , gx_forward_get_profile )"	309:4:11198:11252	251029	7	True				
ANR	251116	CallExpression	"set_dev_proc ( dev , get_profile , gx_forward_get_profile )"		251029	0					
ANR	251117	Callee	set_dev_proc		251029	0					
ANR	251118	Identifier	set_dev_proc		251029	0					
ANR	251119	ArgumentList	dev		251029	1					
ANR	251120	Argument	dev		251029	0					
ANR	251121	Identifier	dev		251029	0					
ANR	251122	Argument	get_profile		251029	1					
ANR	251123	Identifier	get_profile		251029	0					
ANR	251124	Argument	gx_forward_get_profile		251029	2					
ANR	251125	Identifier	gx_forward_get_profile		251029	0					
ANR	251126	ExpressionStatement	"set_dev_proc ( dev , set_graphics_type_tag , gx_forward_set_graphics_type_tag )"	310:4:11258:11332	251029	8	True				
ANR	251127	CallExpression	"set_dev_proc ( dev , set_graphics_type_tag , gx_forward_set_graphics_type_tag )"		251029	0					
ANR	251128	Callee	set_dev_proc		251029	0					
ANR	251129	Identifier	set_dev_proc		251029	0					
ANR	251130	ArgumentList	dev		251029	1					
ANR	251131	Argument	dev		251029	0					
ANR	251132	Identifier	dev		251029	0					
ANR	251133	Argument	set_graphics_type_tag		251029	1					
ANR	251134	Identifier	set_graphics_type_tag		251029	0					
ANR	251135	Argument	gx_forward_set_graphics_type_tag		251029	2					
ANR	251136	Identifier	gx_forward_set_graphics_type_tag		251029	0					
ANR	251137	ExpressionStatement	"set_dev_proc ( dev , dev_spec_op , gx_default_dev_spec_op )"	311:4:11338:11392	251029	9	True				
ANR	251138	CallExpression	"set_dev_proc ( dev , dev_spec_op , gx_default_dev_spec_op )"		251029	0					
ANR	251139	Callee	set_dev_proc		251029	0					
ANR	251140	Identifier	set_dev_proc		251029	0					
ANR	251141	ArgumentList	dev		251029	1					
ANR	251142	Argument	dev		251029	0					
ANR	251143	Identifier	dev		251029	0					
ANR	251144	Argument	dev_spec_op		251029	1					
ANR	251145	Identifier	dev_spec_op		251029	0					
ANR	251146	Argument	gx_default_dev_spec_op		251029	2					
ANR	251147	Identifier	gx_default_dev_spec_op		251029	0					
ANR	251148	ExpressionStatement	dev -> graphics_type_tag = target ? target -> graphics_type_tag : GS_UNKNOWN_TAG	313:4:11441:11517	251029	10	True				
ANR	251149	AssignmentExpression	dev -> graphics_type_tag = target ? target -> graphics_type_tag : GS_UNKNOWN_TAG		251029	0		=			
ANR	251150	PtrMemberAccess	dev -> graphics_type_tag		251029	0					
ANR	251151	Identifier	dev		251029	0					
ANR	251152	Identifier	graphics_type_tag		251029	1					
ANR	251153	ConditionalExpression	target ? target -> graphics_type_tag : GS_UNKNOWN_TAG		251029	1					
ANR	251154	Condition	target		251029	0					
ANR	251155	Identifier	target		251029	0					
ANR	251156	PtrMemberAccess	target -> graphics_type_tag		251029	1					
ANR	251157	Identifier	target		251029	0					
ANR	251158	Identifier	graphics_type_tag		251029	1					
ANR	251159	Identifier	GS_UNKNOWN_TAG		251029	2					
ANR	251160	ReturnType	void		251029	1					
ANR	251161	Identifier	gs_make_mem_mono_device		251029	2					
ANR	251162	ParameterList	"gx_device_memory * dev , gs_memory_t * mem , gx_device * target"		251029	3					
ANR	251163	Parameter	gx_device_memory * dev	297:24:10606:10627	251029	0	True				
ANR	251164	ParameterType	gx_device_memory *		251029	0					
ANR	251165	Identifier	dev		251029	1					
ANR	251166	Parameter	gs_memory_t * mem	297:48:10630:10646	251029	1	True				
ANR	251167	ParameterType	gs_memory_t *		251029	0					
ANR	251168	Identifier	mem		251029	1					
ANR	251169	Parameter	gx_device * target	298:24:10673:10690	251029	2	True				
ANR	251170	ParameterType	gx_device *		251029	0					
ANR	251171	Identifier	target		251029	1					
ANR	251172	CFGEntryNode	ENTRY		251029		True				
ANR	251173	CFGExitNode	EXIT		251029		True				
ANR	251174	Symbol	* dev		251029						
ANR	251175	Symbol	gx_device_raster		251029						
ANR	251176	Symbol	target -> graphics_type_tag		251029						
ANR	251177	Symbol	dev_spec_op		251029						
ANR	251178	Symbol	GS_UNKNOWN_TAG		251029						
ANR	251179	Symbol	dev -> raster		251029						
ANR	251180	Symbol	set_graphics_type_tag		251029						
ANR	251181	Symbol	get_page_device		251029						
ANR	251182	Symbol	target		251029						
ANR	251183	Symbol	* target		251029						
ANR	251184	Symbol	gx_default_get_page_device		251029						
ANR	251185	Symbol	dev		251029						
ANR	251186	Symbol	mem		251029						
ANR	251187	Symbol	gx_forward_set_graphics_type_tag		251029						
ANR	251188	Symbol	true		251029						
ANR	251189	Symbol	gx_default_dev_spec_op		251029						
ANR	251190	Symbol	dev -> graphics_type_tag		251029						
ANR	251191	Symbol	& mem_mono_device		251029						
ANR	251192	Symbol	get_profile		251029						
ANR	251193	Symbol	gx_forward_get_profile		251029						
ANR	251194	Function	gdev_mem_mono_set_inverted	317:0:11590:11784							
ANR	251195	FunctionDef	"gdev_mem_mono_set_inverted (gx_device_memory * dev , bool black_is_1)"		251194	0					
ANR	251196	CompoundStatement		319:0:11663:11784	251194	0					
ANR	251197	IfStatement	if ( black_is_1 )		251194	0					
ANR	251198	Condition	black_is_1	320:8:11673:11682	251194	0	True				
ANR	251199	Identifier	black_is_1		251194	0					
ANR	251200	ExpressionStatement	dev -> palette = mem_mono_b_w_palette	321:8:11693:11728	251194	1	True				
ANR	251201	AssignmentExpression	dev -> palette = mem_mono_b_w_palette		251194	0		=			
ANR	251202	PtrMemberAccess	dev -> palette		251194	0					
ANR	251203	Identifier	dev		251194	0					
ANR	251204	Identifier	palette		251194	1					
ANR	251205	Identifier	mem_mono_b_w_palette		251194	1					
ANR	251206	ElseStatement	else		251194	0					
ANR	251207	ExpressionStatement	dev -> palette = mem_mono_w_b_palette	323:8:11747:11782	251194	0	True				
ANR	251208	AssignmentExpression	dev -> palette = mem_mono_w_b_palette		251194	0		=			
ANR	251209	PtrMemberAccess	dev -> palette		251194	0					
ANR	251210	Identifier	dev		251194	0					
ANR	251211	Identifier	palette		251194	1					
ANR	251212	Identifier	mem_mono_w_b_palette		251194	1					
ANR	251213	ReturnType	void		251194	1					
ANR	251214	Identifier	gdev_mem_mono_set_inverted		251194	2					
ANR	251215	ParameterList	"gx_device_memory * dev , bool black_is_1"		251194	3					
ANR	251216	Parameter	gx_device_memory * dev	318:27:11622:11643	251194	0	True				
ANR	251217	ParameterType	gx_device_memory *		251194	0					
ANR	251218	Identifier	dev		251194	1					
ANR	251219	Parameter	bool black_is_1	318:51:11646:11660	251194	1	True				
ANR	251220	ParameterType	bool		251194	0					
ANR	251221	Identifier	black_is_1		251194	1					
ANR	251222	CFGEntryNode	ENTRY		251194		True				
ANR	251223	CFGExitNode	EXIT		251194		True				
ANR	251224	Symbol	* dev		251194						
ANR	251225	Symbol	dev		251194						
ANR	251226	Symbol	black_is_1		251194						
ANR	251227	Symbol	mem_mono_w_b_palette		251194						
ANR	251228	Symbol	dev -> palette		251194						
ANR	251229	Symbol	mem_mono_b_w_palette		251194						
ANR	251230	Function	gdev_mem_bits_size	338:0:12303:13168							
ANR	251231	FunctionDef	"gdev_mem_bits_size (const gx_device_memory * dev , int width , int height , ulong * psize)"		251230	0					
ANR	251232	CompoundStatement		340:0:12393:13168	251230	0					
ANR	251233	IdentifierDeclStatement	int num_planes = dev -> is_planar ? dev -> color_info . num_components : 0 ;	341:4:12399:12467	251230	0	True				
ANR	251234	IdentifierDecl	num_planes = dev -> is_planar ? dev -> color_info . num_components : 0		251230	0					
ANR	251235	IdentifierDeclType	int		251230	0					
ANR	251236	Identifier	num_planes		251230	1					
ANR	251237	AssignmentExpression	num_planes = dev -> is_planar ? dev -> color_info . num_components : 0		251230	2		=			
ANR	251238	Identifier	num_planes		251230	0					
ANR	251239	ConditionalExpression	dev -> is_planar ? dev -> color_info . num_components : 0		251230	1					
ANR	251240	Condition	dev -> is_planar		251230	0					
ANR	251241	PtrMemberAccess	dev -> is_planar		251230	0					
ANR	251242	Identifier	dev		251230	0					
ANR	251243	Identifier	is_planar		251230	1					
ANR	251244	MemberAccess	dev -> color_info . num_components		251230	1					
ANR	251245	PtrMemberAccess	dev -> color_info		251230	0					
ANR	251246	Identifier	dev		251230	0					
ANR	251247	Identifier	color_info		251230	1					
ANR	251248	Identifier	num_components		251230	1					
ANR	251249	PrimaryExpression	0		251230	2					
ANR	251250	IdentifierDeclStatement	gx_render_plane_t plane1 ;	342:4:12473:12497	251230	1	True				
ANR	251251	IdentifierDecl	plane1		251230	0					
ANR	251252	IdentifierDeclType	gx_render_plane_t		251230	0					
ANR	251253	Identifier	plane1		251230	1					
ANR	251254	IdentifierDeclStatement	const gx_render_plane_t * planes ;	343:4:12503:12534	251230	2	True				
ANR	251255	IdentifierDecl	* planes		251230	0					
ANR	251256	IdentifierDeclType	const gx_render_plane_t *		251230	0					
ANR	251257	Identifier	planes		251230	1					
ANR	251258	IdentifierDeclStatement	ulong size ;	344:4:12540:12550	251230	3	True				
ANR	251259	IdentifierDecl	size		251230	0					
ANR	251260	IdentifierDeclType	ulong		251230	0					
ANR	251261	Identifier	size		251230	1					
ANR	251262	IdentifierDeclStatement	int pi ;	345:4:12556:12562	251230	4	True				
ANR	251263	IdentifierDecl	pi		251230	0					
ANR	251264	IdentifierDeclType	int		251230	0					
ANR	251265	Identifier	pi		251230	1					
ANR	251266	IfStatement	if ( num_planes )		251230	5					
ANR	251267	Condition	num_planes	347:8:12573:12582	251230	0	True				
ANR	251268	Identifier	num_planes		251230	0					
ANR	251269	ExpressionStatement	planes = dev -> planes	348:8:12593:12613	251230	1	True				
ANR	251270	AssignmentExpression	planes = dev -> planes		251230	0		=			
ANR	251271	Identifier	planes		251230	0					
ANR	251272	PtrMemberAccess	dev -> planes		251230	1					
ANR	251273	Identifier	dev		251230	0					
ANR	251274	Identifier	planes		251230	1					
ANR	251275	ElseStatement	else		251230	0					
ANR	251276	ExpressionStatement	"planes = & plane1 , plane1 . depth = dev -> color_info . depth , num_planes = 1"	350:8:12632:12702	251230	0	True				
ANR	251277	Expression	"planes = & plane1 , plane1 . depth = dev -> color_info . depth , num_planes = 1"		251230	0					
ANR	251278	AssignmentExpression	planes = & plane1		251230	0		=			
ANR	251279	Identifier	planes		251230	0					
ANR	251280	UnaryOperationExpression	& plane1		251230	1					
ANR	251281	UnaryOperator	&		251230	0					
ANR	251282	Identifier	plane1		251230	1					
ANR	251283	Expression	"plane1 . depth = dev -> color_info . depth , num_planes = 1"		251230	1					
ANR	251284	AssignmentExpression	plane1 . depth = dev -> color_info . depth		251230	0		=			
ANR	251285	MemberAccess	plane1 . depth		251230	0					
ANR	251286	Identifier	plane1		251230	0					
ANR	251287	Identifier	depth		251230	1					
ANR	251288	MemberAccess	dev -> color_info . depth		251230	1					
ANR	251289	PtrMemberAccess	dev -> color_info		251230	0					
ANR	251290	Identifier	dev		251230	0					
ANR	251291	Identifier	color_info		251230	1					
ANR	251292	Identifier	depth		251230	1					
ANR	251293	AssignmentExpression	num_planes = 1		251230	1		=			
ANR	251294	Identifier	num_planes		251230	0					
ANR	251295	PrimaryExpression	1		251230	1					
ANR	251296	ForStatement	"for ( size = 0 , pi = 0 ; pi < num_planes ; ++ pi )"		251230	6					
ANR	251297	ForInit	"size = 0 , pi = 0 ;"	351:9:12713:12729	251230	0	True				
ANR	251298	Expression	"size = 0 , pi = 0"		251230	0					
ANR	251299	AssignmentExpression	size = 0		251230	0		=			
ANR	251300	Identifier	size		251230	0					
ANR	251301	PrimaryExpression	0		251230	1					
ANR	251302	AssignmentExpression	pi = 0		251230	1		=			
ANR	251303	Identifier	pi		251230	0					
ANR	251304	PrimaryExpression	0		251230	1					
ANR	251305	Condition	pi < num_planes	351:27:12731:12745	251230	1	True				
ANR	251306	RelationalExpression	pi < num_planes		251230	0		<			
ANR	251307	Identifier	pi		251230	0					
ANR	251308	Identifier	num_planes		251230	1					
ANR	251309	UnaryExpression	++ pi	351:44:12748:12751	251230	2	True				
ANR	251310	IncDec	++		251230	0					
ANR	251311	Identifier	pi		251230	1					
ANR	251312	ExpressionStatement	"size += bitmap_raster_pad_align ( width * planes [ pi ] . depth , dev -> pad , dev -> log2_align_mod )"	352:8:12762:12850	251230	3	True				
ANR	251313	AssignmentExpression	"size += bitmap_raster_pad_align ( width * planes [ pi ] . depth , dev -> pad , dev -> log2_align_mod )"		251230	0		+=			
ANR	251314	Identifier	size		251230	0					
ANR	251315	CallExpression	"bitmap_raster_pad_align ( width * planes [ pi ] . depth , dev -> pad , dev -> log2_align_mod )"		251230	1					
ANR	251316	Callee	bitmap_raster_pad_align		251230	0					
ANR	251317	Identifier	bitmap_raster_pad_align		251230	0					
ANR	251318	ArgumentList	width * planes [ pi ] . depth		251230	1					
ANR	251319	Argument	width * planes [ pi ] . depth		251230	0					
ANR	251320	MultiplicativeExpression	width * planes [ pi ] . depth		251230	0		*			
ANR	251321	Identifier	width		251230	0					
ANR	251322	MemberAccess	planes [ pi ] . depth		251230	1					
ANR	251323	ArrayIndexing	planes [ pi ]		251230	0					
ANR	251324	Identifier	planes		251230	0					
ANR	251325	Identifier	pi		251230	1					
ANR	251326	Identifier	depth		251230	1					
ANR	251327	Argument	dev -> pad		251230	1					
ANR	251328	PtrMemberAccess	dev -> pad		251230	0					
ANR	251329	Identifier	dev		251230	0					
ANR	251330	Identifier	pad		251230	1					
ANR	251331	Argument	dev -> log2_align_mod		251230	2					
ANR	251332	PtrMemberAccess	dev -> log2_align_mod		251230	0					
ANR	251333	Identifier	dev		251230	0					
ANR	251334	Identifier	log2_align_mod		251230	1					
ANR	251335	IfStatement	if ( height != 0 )		251230	7					
ANR	251336	Condition	height != 0	353:8:12860:12870	251230	0	True				
ANR	251337	EqualityExpression	height != 0		251230	0		!=			
ANR	251338	Identifier	height		251230	0					
ANR	251339	PrimaryExpression	0		251230	1					
ANR	251340	IfStatement	if ( size > ( max_ulong - ARCH_ALIGN_PTR_MOD ) / ( ulong ) height )		251230	1					
ANR	251341	Condition	size > ( max_ulong - ARCH_ALIGN_PTR_MOD ) / ( ulong ) height	354:12:12885:12939	251230	0	True				
ANR	251342	RelationalExpression	size > ( max_ulong - ARCH_ALIGN_PTR_MOD ) / ( ulong ) height		251230	0		>			
ANR	251343	Identifier	size		251230	0					
ANR	251344	MultiplicativeExpression	( max_ulong - ARCH_ALIGN_PTR_MOD ) / ( ulong ) height		251230	1		/			
ANR	251345	AdditiveExpression	max_ulong - ARCH_ALIGN_PTR_MOD		251230	0		-			
ANR	251346	Identifier	max_ulong		251230	0					
ANR	251347	Identifier	ARCH_ALIGN_PTR_MOD		251230	1					
ANR	251348	CastExpression	( ulong ) height		251230	1					
ANR	251349	CastTarget	ulong		251230	0					
ANR	251350	Identifier	height		251230	1					
ANR	251351	ExpressionStatement	return_error ( gs_error_VMerror )	355:12:12954:12984	251230	1	True				
ANR	251352	CallExpression	return_error ( gs_error_VMerror )		251230	0					
ANR	251353	Callee	return_error		251230	0					
ANR	251354	Identifier	return_error		251230	0					
ANR	251355	ArgumentList	gs_error_VMerror		251230	1					
ANR	251356	Argument	gs_error_VMerror		251230	0					
ANR	251357	Identifier	gs_error_VMerror		251230	0					
ANR	251358	ExpressionStatement	"size = ROUND_UP ( size * height , ARCH_ALIGN_PTR_MOD )"	356:4:12990:13040	251230	8	True				
ANR	251359	AssignmentExpression	"size = ROUND_UP ( size * height , ARCH_ALIGN_PTR_MOD )"		251230	0		=			
ANR	251360	Identifier	size		251230	0					
ANR	251361	CallExpression	"ROUND_UP ( size * height , ARCH_ALIGN_PTR_MOD )"		251230	1					
ANR	251362	Callee	ROUND_UP		251230	0					
ANR	251363	Identifier	ROUND_UP		251230	0					
ANR	251364	ArgumentList	size * height		251230	1					
ANR	251365	Argument	size * height		251230	0					
ANR	251366	MultiplicativeExpression	size * height		251230	0		*			
ANR	251367	Identifier	size		251230	0					
ANR	251368	Identifier	height		251230	1					
ANR	251369	Argument	ARCH_ALIGN_PTR_MOD		251230	1					
ANR	251370	Identifier	ARCH_ALIGN_PTR_MOD		251230	0					
ANR	251371	IfStatement	if ( dev -> log2_align_mod > log2_align_bitmap_mod )		251230	9					
ANR	251372	Condition	dev -> log2_align_mod > log2_align_bitmap_mod	357:8:13050:13092	251230	0	True				
ANR	251373	RelationalExpression	dev -> log2_align_mod > log2_align_bitmap_mod		251230	0		>			
ANR	251374	PtrMemberAccess	dev -> log2_align_mod		251230	0					
ANR	251375	Identifier	dev		251230	0					
ANR	251376	Identifier	log2_align_mod		251230	1					
ANR	251377	Identifier	log2_align_bitmap_mod		251230	1					
ANR	251378	ExpressionStatement	size += 1 << dev -> log2_align_mod	358:8:13103:13133	251230	1	True				
ANR	251379	AssignmentExpression	size += 1 << dev -> log2_align_mod		251230	0		+=			
ANR	251380	Identifier	size		251230	0					
ANR	251381	ShiftExpression	1 << dev -> log2_align_mod		251230	1		<<			
ANR	251382	PrimaryExpression	1		251230	0					
ANR	251383	PtrMemberAccess	dev -> log2_align_mod		251230	1					
ANR	251384	Identifier	dev		251230	0					
ANR	251385	Identifier	log2_align_mod		251230	1					
ANR	251386	ExpressionStatement	* psize = size	359:4:13139:13152	251230	10	True				
ANR	251387	AssignmentExpression	* psize = size		251230	0		=			
ANR	251388	UnaryOperationExpression	* psize		251230	0					
ANR	251389	UnaryOperator	*		251230	0					
ANR	251390	Identifier	psize		251230	1					
ANR	251391	Identifier	size		251230	1					
ANR	251392	ReturnStatement	return 0 ;	360:4:13158:13166	251230	11	True				
ANR	251393	PrimaryExpression	0		251230	0					
ANR	251394	ReturnType	int		251230	1					
ANR	251395	Identifier	gdev_mem_bits_size		251230	2					
ANR	251396	ParameterList	"const gx_device_memory * dev , int width , int height , ulong * psize"		251230	3					
ANR	251397	Parameter	const gx_device_memory * dev	339:19:12326:12353	251230	0	True				
ANR	251398	ParameterType	const gx_device_memory *		251230	0					
ANR	251399	Identifier	dev		251230	1					
ANR	251400	Parameter	int width	339:49:12356:12364	251230	1	True				
ANR	251401	ParameterType	int		251230	0					
ANR	251402	Identifier	width		251230	1					
ANR	251403	Parameter	int height	339:60:12367:12376	251230	2	True				
ANR	251404	ParameterType	int		251230	0					
ANR	251405	Identifier	height		251230	1					
ANR	251406	Parameter	ulong * psize	339:72:12379:12390	251230	3	True				
ANR	251407	ParameterType	ulong *		251230	0					
ANR	251408	Identifier	psize		251230	1					
ANR	251409	CFGEntryNode	ENTRY		251230		True				
ANR	251410	CFGExitNode	EXIT		251230		True				
ANR	251411	Symbol	* dev		251230						
ANR	251412	Symbol	plane1 . depth		251230						
ANR	251413	Symbol	log2_align_bitmap_mod		251230						
ANR	251414	Symbol	dev -> pad		251230						
ANR	251415	Symbol	dev -> color_info		251230						
ANR	251416	Symbol	dev -> color_info . depth		251230						
ANR	251417	Symbol	psize		251230						
ANR	251418	Symbol	dev -> is_planar		251230						
ANR	251419	Symbol	num_planes		251230						
ANR	251420	Symbol	dev		251230						
ANR	251421	Symbol	height		251230						
ANR	251422	Symbol	dev -> log2_align_mod		251230						
ANR	251423	Symbol	dev -> color_info . num_components		251230						
ANR	251424	Symbol	dev -> planes		251230						
ANR	251425	Symbol	ROUND_UP		251230						
ANR	251426	Symbol	planes		251230						
ANR	251427	Symbol	plane1		251230						
ANR	251428	Symbol	ARCH_ALIGN_PTR_MOD		251230						
ANR	251429	Symbol	gs_error_VMerror		251230						
ANR	251430	Symbol	size		251230						
ANR	251431	Symbol	planes [ pi ] . depth		251230						
ANR	251432	Symbol	max_ulong		251230						
ANR	251433	Symbol	width		251230						
ANR	251434	Symbol	pi		251230						
ANR	251435	Symbol	* planes		251230						
ANR	251436	Symbol	* psize		251230						
ANR	251437	Symbol	* pi		251230						
ANR	251438	Symbol	& plane1		251230						
ANR	251439	Symbol	bitmap_raster_pad_align		251230						
ANR	251440	Function	gdev_mem_line_ptrs_size	362:0:13170:13354							
ANR	251441	FunctionDef	"gdev_mem_line_ptrs_size (const gx_device_memory * dev , int width , int height)"		251440	0					
ANR	251442	CompoundStatement		364:0:13253:13354	251440	0					
ANR	251443	ReturnStatement	return ( ulong ) height * sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 ) ;	365:4:13259:13352	251440	0	True				
ANR	251444	MultiplicativeExpression	( ulong ) height * sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 )		251440	0		*			
ANR	251445	CastExpression	( ulong ) height		251440	0					
ANR	251446	CastTarget	ulong		251440	0					
ANR	251447	Identifier	height		251440	1					
ANR	251448	MultiplicativeExpression	sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 )		251440	1		*			
ANR	251449	SizeofExpression	sizeof ( byte * )		251440	0					
ANR	251450	Sizeof	sizeof		251440	0					
ANR	251451	SizeofOperand	byte *		251440	1					
ANR	251452	ConditionalExpression	dev -> is_planar ? dev -> color_info . num_components : 1		251440	1					
ANR	251453	Condition	dev -> is_planar		251440	0					
ANR	251454	PtrMemberAccess	dev -> is_planar		251440	0					
ANR	251455	Identifier	dev		251440	0					
ANR	251456	Identifier	is_planar		251440	1					
ANR	251457	MemberAccess	dev -> color_info . num_components		251440	1					
ANR	251458	PtrMemberAccess	dev -> color_info		251440	0					
ANR	251459	Identifier	dev		251440	0					
ANR	251460	Identifier	color_info		251440	1					
ANR	251461	Identifier	num_components		251440	1					
ANR	251462	PrimaryExpression	1		251440	2					
ANR	251463	ReturnType	ulong		251440	1					
ANR	251464	Identifier	gdev_mem_line_ptrs_size		251440	2					
ANR	251465	ParameterList	"const gx_device_memory * dev , int width , int height"		251440	3					
ANR	251466	Parameter	const gx_device_memory * dev	363:24:13200:13227	251440	0	True				
ANR	251467	ParameterType	const gx_device_memory *		251440	0					
ANR	251468	Identifier	dev		251440	1					
ANR	251469	Parameter	int width	363:54:13230:13238	251440	1	True				
ANR	251470	ParameterType	int		251440	0					
ANR	251471	Identifier	width		251440	1					
ANR	251472	Parameter	int height	363:65:13241:13250	251440	2	True				
ANR	251473	ParameterType	int		251440	0					
ANR	251474	Identifier	height		251440	1					
ANR	251475	CFGEntryNode	ENTRY		251440		True				
ANR	251476	CFGExitNode	EXIT		251440		True				
ANR	251477	Symbol	* dev		251440						
ANR	251478	Symbol	dev -> is_planar		251440						
ANR	251479	Symbol	dev		251440						
ANR	251480	Symbol	dev -> color_info . num_components		251440						
ANR	251481	Symbol	width		251440						
ANR	251482	Symbol	dev -> color_info		251440						
ANR	251483	Symbol	height		251440						
ANR	251484	Function	gdev_mem_data_size	367:0:13356:13751							
ANR	251485	FunctionDef	"gdev_mem_data_size (const gx_device_memory * dev , int width , int height , ulong * psize)"		251484	0					
ANR	251486	CompoundStatement		369:0:13446:13751	251484	0					
ANR	251487	IdentifierDeclStatement	ulong bits_size ;	370:4:13452:13467	251484	0	True				
ANR	251488	IdentifierDecl	bits_size		251484	0					
ANR	251489	IdentifierDeclType	ulong		251484	0					
ANR	251490	Identifier	bits_size		251484	1					
ANR	251491	IdentifierDeclStatement	"ulong line_ptrs_size = gdev_mem_line_ptrs_size ( dev , width , height ) ;"	371:4:13473:13539	251484	1	True				
ANR	251492	IdentifierDecl	"line_ptrs_size = gdev_mem_line_ptrs_size ( dev , width , height )"		251484	0					
ANR	251493	IdentifierDeclType	ulong		251484	0					
ANR	251494	Identifier	line_ptrs_size		251484	1					
ANR	251495	AssignmentExpression	"line_ptrs_size = gdev_mem_line_ptrs_size ( dev , width , height )"		251484	2		=			
ANR	251496	Identifier	line_ptrs_size		251484	0					
ANR	251497	CallExpression	"gdev_mem_line_ptrs_size ( dev , width , height )"		251484	1					
ANR	251498	Callee	gdev_mem_line_ptrs_size		251484	0					
ANR	251499	Identifier	gdev_mem_line_ptrs_size		251484	0					
ANR	251500	ArgumentList	dev		251484	1					
ANR	251501	Argument	dev		251484	0					
ANR	251502	Identifier	dev		251484	0					
ANR	251503	Argument	width		251484	1					
ANR	251504	Identifier	width		251484	0					
ANR	251505	Argument	height		251484	2					
ANR	251506	Identifier	height		251484	0					
ANR	251507	IfStatement	"if ( gdev_mem_bits_size ( dev , width , height , & bits_size ) < 0 || bits_size > max_ulong - line_ptrs_size )"		251484	2					
ANR	251508	Condition	"gdev_mem_bits_size ( dev , width , height , & bits_size ) < 0 || bits_size > max_ulong - line_ptrs_size"	373:8:13550:13653	251484	0	True				
ANR	251509	OrExpression	"gdev_mem_bits_size ( dev , width , height , & bits_size ) < 0 || bits_size > max_ulong - line_ptrs_size"		251484	0		||			
ANR	251510	RelationalExpression	"gdev_mem_bits_size ( dev , width , height , & bits_size ) < 0"		251484	0		<			
ANR	251511	CallExpression	"gdev_mem_bits_size ( dev , width , height , & bits_size )"		251484	0					
ANR	251512	Callee	gdev_mem_bits_size		251484	0					
ANR	251513	Identifier	gdev_mem_bits_size		251484	0					
ANR	251514	ArgumentList	dev		251484	1					
ANR	251515	Argument	dev		251484	0					
ANR	251516	Identifier	dev		251484	0					
ANR	251517	Argument	width		251484	1					
ANR	251518	Identifier	width		251484	0					
ANR	251519	Argument	height		251484	2					
ANR	251520	Identifier	height		251484	0					
ANR	251521	Argument	& bits_size		251484	3					
ANR	251522	UnaryOperationExpression	& bits_size		251484	0					
ANR	251523	UnaryOperator	&		251484	0					
ANR	251524	Identifier	bits_size		251484	1					
ANR	251525	PrimaryExpression	0		251484	1					
ANR	251526	RelationalExpression	bits_size > max_ulong - line_ptrs_size		251484	1		>			
ANR	251527	Identifier	bits_size		251484	0					
ANR	251528	AdditiveExpression	max_ulong - line_ptrs_size		251484	1		-			
ANR	251529	Identifier	max_ulong		251484	0					
ANR	251530	Identifier	line_ptrs_size		251484	1					
ANR	251531	ExpressionStatement	return_error ( gs_error_VMerror )	375:8:13664:13694	251484	1	True				
ANR	251532	CallExpression	return_error ( gs_error_VMerror )		251484	0					
ANR	251533	Callee	return_error		251484	0					
ANR	251534	Identifier	return_error		251484	0					
ANR	251535	ArgumentList	gs_error_VMerror		251484	1					
ANR	251536	Argument	gs_error_VMerror		251484	0					
ANR	251537	Identifier	gs_error_VMerror		251484	0					
ANR	251538	ExpressionStatement	* psize = bits_size + line_ptrs_size	376:4:13700:13735	251484	3	True				
ANR	251539	AssignmentExpression	* psize = bits_size + line_ptrs_size		251484	0		=			
ANR	251540	UnaryOperationExpression	* psize		251484	0					
ANR	251541	UnaryOperator	*		251484	0					
ANR	251542	Identifier	psize		251484	1					
ANR	251543	AdditiveExpression	bits_size + line_ptrs_size		251484	1		+			
ANR	251544	Identifier	bits_size		251484	0					
ANR	251545	Identifier	line_ptrs_size		251484	1					
ANR	251546	ReturnStatement	return 0 ;	377:4:13741:13749	251484	4	True				
ANR	251547	PrimaryExpression	0		251484	0					
ANR	251548	ReturnType	int		251484	1					
ANR	251549	Identifier	gdev_mem_data_size		251484	2					
ANR	251550	ParameterList	"const gx_device_memory * dev , int width , int height , ulong * psize"		251484	3					
ANR	251551	Parameter	const gx_device_memory * dev	368:19:13379:13406	251484	0	True				
ANR	251552	ParameterType	const gx_device_memory *		251484	0					
ANR	251553	Identifier	dev		251484	1					
ANR	251554	Parameter	int width	368:49:13409:13417	251484	1	True				
ANR	251555	ParameterType	int		251484	0					
ANR	251556	Identifier	width		251484	1					
ANR	251557	Parameter	int height	368:60:13420:13429	251484	2	True				
ANR	251558	ParameterType	int		251484	0					
ANR	251559	Identifier	height		251484	1					
ANR	251560	Parameter	ulong * psize	368:72:13432:13443	251484	3	True				
ANR	251561	ParameterType	ulong *		251484	0					
ANR	251562	Identifier	psize		251484	1					
ANR	251563	CFGEntryNode	ENTRY		251484		True				
ANR	251564	CFGExitNode	EXIT		251484		True				
ANR	251565	Symbol	psize		251484						
ANR	251566	Symbol	gs_error_VMerror		251484						
ANR	251567	Symbol	dev		251484						
ANR	251568	Symbol	bits_size		251484						
ANR	251569	Symbol	gdev_mem_bits_size		251484						
ANR	251570	Symbol	max_ulong		251484						
ANR	251571	Symbol	width		251484						
ANR	251572	Symbol	gdev_mem_line_ptrs_size		251484						
ANR	251573	Symbol	* psize		251484						
ANR	251574	Symbol	line_ptrs_size		251484						
ANR	251575	Symbol	height		251484						
ANR	251576	Symbol	& bits_size		251484						
ANR	251577	Function	gdev_mem_max_height	383:0:13867:15511							
ANR	251578	FunctionDef	"gdev_mem_max_height (const gx_device_memory * dev , int width , ulong size , bool page_uses_transparency)"		251577	0					
ANR	251579	CompoundStatement		386:0:13989:15511	251577	0					
ANR	251580	IdentifierDeclStatement	int height ;	387:4:13995:14005	251577	0	True				
ANR	251581	IdentifierDecl	height		251577	0					
ANR	251582	IdentifierDeclType	int		251577	0					
ANR	251583	Identifier	height		251577	1					
ANR	251584	IdentifierDeclStatement	ulong max_height ;	388:4:14011:14027	251577	1	True				
ANR	251585	IdentifierDecl	max_height		251577	0					
ANR	251586	IdentifierDeclType	ulong		251577	0					
ANR	251587	Identifier	max_height		251577	1					
ANR	251588	IdentifierDeclStatement	ulong data_size ;	389:4:14033:14048	251577	2	True				
ANR	251589	IdentifierDecl	data_size		251577	0					
ANR	251590	IdentifierDeclType	ulong		251577	0					
ANR	251591	Identifier	data_size		251577	1					
ANR	251592	IfStatement	if ( page_uses_transparency )		251577	3					
ANR	251593	Condition	page_uses_transparency	391:8:14059:14080	251577	0	True				
ANR	251594	Identifier	page_uses_transparency		251577	0					
ANR	251595	CompoundStatement		6:32:93:93	251577	1					
ANR	251596	ExpressionStatement	"max_height = size / ( bitmap_raster_pad_align ( width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components ) , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 ) )"	399:8:14449:14728	251577	0	True				
ANR	251597	AssignmentExpression	"max_height = size / ( bitmap_raster_pad_align ( width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components ) , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 ) )"		251577	0		=			
ANR	251598	Identifier	max_height		251577	0					
ANR	251599	MultiplicativeExpression	"size / ( bitmap_raster_pad_align ( width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components ) , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 ) )"		251577	1		/			
ANR	251600	Identifier	size		251577	0					
ANR	251601	AdditiveExpression	"bitmap_raster_pad_align ( width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components ) , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 )"		251577	1		+			
ANR	251602	CallExpression	"bitmap_raster_pad_align ( width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components ) , dev -> pad , dev -> log2_align_mod )"		251577	0					
ANR	251603	Callee	bitmap_raster_pad_align		251577	0					
ANR	251604	Identifier	bitmap_raster_pad_align		251577	0					
ANR	251605	ArgumentList	"width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components )"		251577	1					
ANR	251606	Argument	"width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components )"		251577	0					
ANR	251607	AdditiveExpression	"width * dev -> color_info . depth + ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components )"		251577	0		+			
ANR	251608	MultiplicativeExpression	width * dev -> color_info . depth		251577	0		*			
ANR	251609	Identifier	width		251577	0					
ANR	251610	MemberAccess	dev -> color_info . depth		251577	1					
ANR	251611	PtrMemberAccess	dev -> color_info		251577	0					
ANR	251612	Identifier	dev		251577	0					
ANR	251613	Identifier	color_info		251577	1					
ANR	251614	Identifier	depth		251577	1					
ANR	251615	CallExpression	"ESTIMATED_PDF14_ROW_SPACE ( width , dev -> color_info . num_components )"		251577	1					
ANR	251616	Callee	ESTIMATED_PDF14_ROW_SPACE		251577	0					
ANR	251617	Identifier	ESTIMATED_PDF14_ROW_SPACE		251577	0					
ANR	251618	ArgumentList	width		251577	1					
ANR	251619	Argument	width		251577	0					
ANR	251620	Identifier	width		251577	0					
ANR	251621	Argument	dev -> color_info . num_components		251577	1					
ANR	251622	MemberAccess	dev -> color_info . num_components		251577	0					
ANR	251623	PtrMemberAccess	dev -> color_info		251577	0					
ANR	251624	Identifier	dev		251577	0					
ANR	251625	Identifier	color_info		251577	1					
ANR	251626	Identifier	num_components		251577	1					
ANR	251627	Argument	dev -> pad		251577	1					
ANR	251628	PtrMemberAccess	dev -> pad		251577	0					
ANR	251629	Identifier	dev		251577	0					
ANR	251630	Identifier	pad		251577	1					
ANR	251631	Argument	dev -> log2_align_mod		251577	2					
ANR	251632	PtrMemberAccess	dev -> log2_align_mod		251577	0					
ANR	251633	Identifier	dev		251577	0					
ANR	251634	Identifier	log2_align_mod		251577	1					
ANR	251635	MultiplicativeExpression	sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 )		251577	1		*			
ANR	251636	SizeofExpression	sizeof ( byte * )		251577	0					
ANR	251637	Sizeof	sizeof		251577	0					
ANR	251638	SizeofOperand	byte *		251577	1					
ANR	251639	ConditionalExpression	dev -> is_planar ? dev -> color_info . num_components : 1		251577	1					
ANR	251640	Condition	dev -> is_planar		251577	0					
ANR	251641	PtrMemberAccess	dev -> is_planar		251577	0					
ANR	251642	Identifier	dev		251577	0					
ANR	251643	Identifier	is_planar		251577	1					
ANR	251644	MemberAccess	dev -> color_info . num_components		251577	1					
ANR	251645	PtrMemberAccess	dev -> color_info		251577	0					
ANR	251646	Identifier	dev		251577	0					
ANR	251647	Identifier	color_info		251577	1					
ANR	251648	Identifier	num_components		251577	1					
ANR	251649	PrimaryExpression	1		251577	2					
ANR	251650	ExpressionStatement	"height = ( int ) min ( max_height , max_int )"	402:8:14738:14776	251577	1	True				
ANR	251651	AssignmentExpression	"height = ( int ) min ( max_height , max_int )"		251577	0		=			
ANR	251652	Identifier	height		251577	0					
ANR	251653	CastExpression	"( int ) min ( max_height , max_int )"		251577	1					
ANR	251654	CastTarget	int		251577	0					
ANR	251655	CallExpression	"min ( max_height , max_int )"		251577	1					
ANR	251656	Callee	min		251577	0					
ANR	251657	Identifier	min		251577	0					
ANR	251658	ArgumentList	max_height		251577	1					
ANR	251659	Argument	max_height		251577	0					
ANR	251660	Identifier	max_height		251577	0					
ANR	251661	Argument	max_int		251577	1					
ANR	251662	Identifier	max_int		251577	0					
ANR	251663	ElseStatement	else		251577	0					
ANR	251664	CompoundStatement		18:11:799:799	251577	0					
ANR	251665	ExpressionStatement	"max_height = size / ( bitmap_raster_pad_align ( width * dev -> color_info . depth , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 ) )"	405:8:14874:15079	251577	0	True				
ANR	251666	AssignmentExpression	"max_height = size / ( bitmap_raster_pad_align ( width * dev -> color_info . depth , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 ) )"		251577	0		=			
ANR	251667	Identifier	max_height		251577	0					
ANR	251668	MultiplicativeExpression	"size / ( bitmap_raster_pad_align ( width * dev -> color_info . depth , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 ) )"		251577	1		/			
ANR	251669	Identifier	size		251577	0					
ANR	251670	AdditiveExpression	"bitmap_raster_pad_align ( width * dev -> color_info . depth , dev -> pad , dev -> log2_align_mod ) + sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 )"		251577	1		+			
ANR	251671	CallExpression	"bitmap_raster_pad_align ( width * dev -> color_info . depth , dev -> pad , dev -> log2_align_mod )"		251577	0					
ANR	251672	Callee	bitmap_raster_pad_align		251577	0					
ANR	251673	Identifier	bitmap_raster_pad_align		251577	0					
ANR	251674	ArgumentList	width * dev -> color_info . depth		251577	1					
ANR	251675	Argument	width * dev -> color_info . depth		251577	0					
ANR	251676	MultiplicativeExpression	width * dev -> color_info . depth		251577	0		*			
ANR	251677	Identifier	width		251577	0					
ANR	251678	MemberAccess	dev -> color_info . depth		251577	1					
ANR	251679	PtrMemberAccess	dev -> color_info		251577	0					
ANR	251680	Identifier	dev		251577	0					
ANR	251681	Identifier	color_info		251577	1					
ANR	251682	Identifier	depth		251577	1					
ANR	251683	Argument	dev -> pad		251577	1					
ANR	251684	PtrMemberAccess	dev -> pad		251577	0					
ANR	251685	Identifier	dev		251577	0					
ANR	251686	Identifier	pad		251577	1					
ANR	251687	Argument	dev -> log2_align_mod		251577	2					
ANR	251688	PtrMemberAccess	dev -> log2_align_mod		251577	0					
ANR	251689	Identifier	dev		251577	0					
ANR	251690	Identifier	log2_align_mod		251577	1					
ANR	251691	MultiplicativeExpression	sizeof ( byte * ) * ( dev -> is_planar ? dev -> color_info . num_components : 1 )		251577	1		*			
ANR	251692	SizeofExpression	sizeof ( byte * )		251577	0					
ANR	251693	Sizeof	sizeof		251577	0					
ANR	251694	SizeofOperand	byte *		251577	1					
ANR	251695	ConditionalExpression	dev -> is_planar ? dev -> color_info . num_components : 1		251577	1					
ANR	251696	Condition	dev -> is_planar		251577	0					
ANR	251697	PtrMemberAccess	dev -> is_planar		251577	0					
ANR	251698	Identifier	dev		251577	0					
ANR	251699	Identifier	is_planar		251577	1					
ANR	251700	MemberAccess	dev -> color_info . num_components		251577	1					
ANR	251701	PtrMemberAccess	dev -> color_info		251577	0					
ANR	251702	Identifier	dev		251577	0					
ANR	251703	Identifier	color_info		251577	1					
ANR	251704	Identifier	num_components		251577	1					
ANR	251705	PrimaryExpression	1		251577	2					
ANR	251706	ExpressionStatement	"height = ( int ) min ( max_height , max_int )"	408:8:15089:15127	251577	1	True				
ANR	251707	AssignmentExpression	"height = ( int ) min ( max_height , max_int )"		251577	0		=			
ANR	251708	Identifier	height		251577	0					
ANR	251709	CastExpression	"( int ) min ( max_height , max_int )"		251577	1					
ANR	251710	CastTarget	int		251577	0					
ANR	251711	CallExpression	"min ( max_height , max_int )"		251577	1					
ANR	251712	Callee	min		251577	0					
ANR	251713	Identifier	min		251577	0					
ANR	251714	ArgumentList	max_height		251577	1					
ANR	251715	Argument	max_height		251577	0					
ANR	251716	Identifier	max_height		251577	0					
ANR	251717	Argument	max_int		251577	1					
ANR	251718	Identifier	max_int		251577	0					
ANR	251719	DoStatement	do		251577	2					
ANR	251720	CompoundStatement		28:11:1314:1314	251577	0					
ANR	251721	ExpressionStatement	"gdev_mem_data_size ( dev , width , height , & data_size )"	414:12:15318:15368	251577	0	True				
ANR	251722	CallExpression	"gdev_mem_data_size ( dev , width , height , & data_size )"		251577	0					
ANR	251723	Callee	gdev_mem_data_size		251577	0					
ANR	251724	Identifier	gdev_mem_data_size		251577	0					
ANR	251725	ArgumentList	dev		251577	1					
ANR	251726	Argument	dev		251577	0					
ANR	251727	Identifier	dev		251577	0					
ANR	251728	Argument	width		251577	1					
ANR	251729	Identifier	width		251577	0					
ANR	251730	Argument	height		251577	2					
ANR	251731	Identifier	height		251577	0					
ANR	251732	Argument	& data_size		251577	3					
ANR	251733	UnaryOperationExpression	& data_size		251577	0					
ANR	251734	UnaryOperator	&		251577	0					
ANR	251735	Identifier	data_size		251577	1					
ANR	251736	IfStatement	if ( data_size <= size )		251577	1					
ANR	251737	Condition	data_size <= size	415:16:15386:15402	251577	0	True				
ANR	251738	RelationalExpression	data_size <= size		251577	0		<=			
ANR	251739	Identifier	data_size		251577	0					
ANR	251740	Identifier	size		251577	1					
ANR	251741	BreakStatement	break ;	416:16:15421:15426	251577	1	True				
ANR	251742	ExpressionStatement	-- height	417:12:15440:15448	251577	2	True				
ANR	251743	UnaryExpression	-- height		251577	0					
ANR	251744	IncDec	--		251577	0					
ANR	251745	Identifier	height		251577	1					
ANR	251746	Condition	data_size > size	418:17:15467:15482	251577	1	True				
ANR	251747	RelationalExpression	data_size > size		251577	0		>			
ANR	251748	Identifier	data_size		251577	0					
ANR	251749	Identifier	size		251577	1					
ANR	251750	ReturnStatement	return height ;	420:4:15496:15509	251577	4	True				
ANR	251751	Identifier	height		251577	0					
ANR	251752	ReturnType	int		251577	1					
ANR	251753	Identifier	gdev_mem_max_height		251577	2					
ANR	251754	ParameterList	"const gx_device_memory * dev , int width , ulong size , bool page_uses_transparency"		251577	3					
ANR	251755	Parameter	const gx_device_memory * dev	384:20:13891:13918	251577	0	True				
ANR	251756	ParameterType	const gx_device_memory *		251577	0					
ANR	251757	Identifier	dev		251577	1					
ANR	251758	Parameter	int width	384:50:13921:13929	251577	1	True				
ANR	251759	ParameterType	int		251577	0					
ANR	251760	Identifier	width		251577	1					
ANR	251761	Parameter	ulong size	384:61:13932:13941	251577	2	True				
ANR	251762	ParameterType	ulong		251577	0					
ANR	251763	Identifier	size		251577	1					
ANR	251764	Parameter	bool page_uses_transparency	385:16:13960:13986	251577	3	True				
ANR	251765	ParameterType	bool		251577	0					
ANR	251766	Identifier	page_uses_transparency		251577	1					
ANR	251767	CFGEntryNode	ENTRY		251577		True				
ANR	251768	CFGExitNode	EXIT		251577		True				
ANR	251769	Symbol	data_size		251577						
ANR	251770	Symbol	* dev		251577						
ANR	251771	Symbol	dev -> log2_align_mod		251577						
ANR	251772	Symbol	max_int		251577						
ANR	251773	Symbol	page_uses_transparency		251577						
ANR	251774	Symbol	dev -> color_info . num_components		251577						
ANR	251775	Symbol	dev -> pad		251577						
ANR	251776	Symbol	max_height		251577						
ANR	251777	Symbol	& data_size		251577						
ANR	251778	Symbol	dev -> color_info		251577						
ANR	251779	Symbol	dev -> color_info . depth		251577						
ANR	251780	Symbol	dev -> is_planar		251577						
ANR	251781	Symbol	min		251577						
ANR	251782	Symbol	dev		251577						
ANR	251783	Symbol	size		251577						
ANR	251784	Symbol	ESTIMATED_PDF14_ROW_SPACE		251577						
ANR	251785	Symbol	width		251577						
ANR	251786	Symbol	height		251577						
ANR	251787	Symbol	bitmap_raster_pad_align		251577						
ANR	251788	Function	mem_open	425:0:15621:15911							
ANR	251789	FunctionDef	mem_open (gx_device * dev)		251788	0					
ANR	251790	CompoundStatement		427:0:15651:15911	251788	0					
ANR	251791	Statement	gx_device_memory	428:4:15657:15672	251788	0	True				
ANR	251792	Statement	*	428:21:15674:15674	251788	1	True				
ANR	251793	Statement	const	428:22:15675:15679	251788	2	True				
ANR	251794	ExpressionStatement	mdev = ( gx_device_memory * ) dev	428:28:15681:15711	251788	3	True				
ANR	251795	AssignmentExpression	mdev = ( gx_device_memory * ) dev		251788	0		=			
ANR	251796	Identifier	mdev		251788	0					
ANR	251797	CastExpression	( gx_device_memory * ) dev		251788	1					
ANR	251798	CastTarget	gx_device_memory *		251788	0					
ANR	251799	Identifier	dev		251788	1					
ANR	251800	IfStatement	if ( mdev -> is_planar )		251788	4					
ANR	251801	Condition	mdev -> is_planar	431:8:15795:15809	251788	0	True				
ANR	251802	PtrMemberAccess	mdev -> is_planar		251788	0					
ANR	251803	Identifier	mdev		251788	0					
ANR	251804	Identifier	is_planar		251788	1					
ANR	251805	ExpressionStatement	return_error ( gs_error_rangecheck )	432:8:15820:15853	251788	1	True				
ANR	251806	CallExpression	return_error ( gs_error_rangecheck )		251788	0					
ANR	251807	Callee	return_error		251788	0					
ANR	251808	Identifier	return_error		251788	0					
ANR	251809	ArgumentList	gs_error_rangecheck		251788	1					
ANR	251810	Argument	gs_error_rangecheck		251788	0					
ANR	251811	Identifier	gs_error_rangecheck		251788	0					
ANR	251812	ReturnStatement	"return gdev_mem_open_scan_lines ( mdev , dev -> height ) ;"	433:4:15859:15909	251788	5	True				
ANR	251813	CallExpression	"gdev_mem_open_scan_lines ( mdev , dev -> height )"		251788	0					
ANR	251814	Callee	gdev_mem_open_scan_lines		251788	0					
ANR	251815	Identifier	gdev_mem_open_scan_lines		251788	0					
ANR	251816	ArgumentList	mdev		251788	1					
ANR	251817	Argument	mdev		251788	0					
ANR	251818	Identifier	mdev		251788	0					
ANR	251819	Argument	dev -> height		251788	1					
ANR	251820	PtrMemberAccess	dev -> height		251788	0					
ANR	251821	Identifier	dev		251788	0					
ANR	251822	Identifier	height		251788	1					
ANR	251823	ReturnType	int		251788	1					
ANR	251824	Identifier	mem_open		251788	2					
ANR	251825	ParameterList	gx_device * dev		251788	3					
ANR	251826	Parameter	gx_device * dev	426:9:15634:15648	251788	0	True				
ANR	251827	ParameterType	gx_device *		251788	0					
ANR	251828	Identifier	dev		251788	1					
ANR	251829	CFGEntryNode	ENTRY		251788		True				
ANR	251830	CFGExitNode	EXIT		251788		True				
ANR	251831	Symbol	* dev		251788						
ANR	251832	Symbol	gdev_mem_open_scan_lines		251788						
ANR	251833	Symbol	dev		251788						
ANR	251834	Symbol	gs_error_rangecheck		251788						
ANR	251835	Symbol	mdev -> is_planar		251788						
ANR	251836	Symbol	dev -> height		251788						
ANR	251837	Symbol	mdev		251788						
ANR	251838	Symbol	* mdev		251788						
ANR	251839	Function	gdev_mem_open_scan_lines	435:0:15913:18055							
ANR	251840	FunctionDef	"gdev_mem_open_scan_lines (gx_device_memory * mdev , int setup_height)"		251839	0					
ANR	251841	CompoundStatement		437:0:15984:18055	251839	0					
ANR	251842	IdentifierDeclStatement	bool line_pointers_adjacent = true ;	438:4:15990:16024	251839	0	True				
ANR	251843	IdentifierDecl	line_pointers_adjacent = true		251839	0					
ANR	251844	IdentifierDeclType	bool		251839	0					
ANR	251845	Identifier	line_pointers_adjacent		251839	1					
ANR	251846	AssignmentExpression	line_pointers_adjacent = true		251839	2		=			
ANR	251847	Identifier	true		251839	0					
ANR	251848	Identifier	true		251839	1					
ANR	251849	IdentifierDeclStatement	ulong size ;	439:4:16030:16040	251839	1	True				
ANR	251850	IdentifierDecl	size		251839	0					
ANR	251851	IdentifierDeclType	ulong		251839	0					
ANR	251852	Identifier	size		251839	1					
ANR	251853	IfStatement	if ( setup_height < 0 || setup_height > mdev -> height )		251839	2					
ANR	251854	Condition	setup_height < 0 || setup_height > mdev -> height	441:8:16051:16097	251839	0	True				
ANR	251855	OrExpression	setup_height < 0 || setup_height > mdev -> height		251839	0		||			
ANR	251856	RelationalExpression	setup_height < 0		251839	0		<			
ANR	251857	Identifier	setup_height		251839	0					
ANR	251858	PrimaryExpression	0		251839	1					
ANR	251859	RelationalExpression	setup_height > mdev -> height		251839	1		>			
ANR	251860	Identifier	setup_height		251839	0					
ANR	251861	PtrMemberAccess	mdev -> height		251839	1					
ANR	251862	Identifier	mdev		251839	0					
ANR	251863	Identifier	height		251839	1					
ANR	251864	ExpressionStatement	return_error ( gs_error_rangecheck )	442:8:16108:16141	251839	1	True				
ANR	251865	CallExpression	return_error ( gs_error_rangecheck )		251839	0					
ANR	251866	Callee	return_error		251839	0					
ANR	251867	Identifier	return_error		251839	0					
ANR	251868	ArgumentList	gs_error_rangecheck		251839	1					
ANR	251869	Argument	gs_error_rangecheck		251839	0					
ANR	251870	Identifier	gs_error_rangecheck		251839	0					
ANR	251871	IfStatement	if ( mdev -> bitmap_memory != 0 )		251839	3					
ANR	251872	Condition	mdev -> bitmap_memory != 0	443:8:16151:16174	251839	0	True				
ANR	251873	EqualityExpression	mdev -> bitmap_memory != 0		251839	0		!=			
ANR	251874	PtrMemberAccess	mdev -> bitmap_memory		251839	0					
ANR	251875	Identifier	mdev		251839	0					
ANR	251876	Identifier	bitmap_memory		251839	1					
ANR	251877	PrimaryExpression	0		251839	1					
ANR	251878	CompoundStatement		8:8:202:211	251839	1					
ANR	251879	IdentifierDeclStatement	int align ;	444:8:16187:16196	251839	0	True				
ANR	251880	IdentifierDecl	align		251839	0					
ANR	251881	IdentifierDeclType	int		251839	0					
ANR	251882	Identifier	align		251839	1					
ANR	251883	IfStatement	"if ( gdev_mem_bitmap_size ( mdev , & size ) < 0 )"		251839	1					
ANR	251884	Condition	"gdev_mem_bitmap_size ( mdev , & size ) < 0"	446:12:16247:16283	251839	0	True				
ANR	251885	RelationalExpression	"gdev_mem_bitmap_size ( mdev , & size ) < 0"		251839	0		<			
ANR	251886	CallExpression	"gdev_mem_bitmap_size ( mdev , & size )"		251839	0					
ANR	251887	Callee	gdev_mem_bitmap_size		251839	0					
ANR	251888	Identifier	gdev_mem_bitmap_size		251839	0					
ANR	251889	ArgumentList	mdev		251839	1					
ANR	251890	Argument	mdev		251839	0					
ANR	251891	Identifier	mdev		251839	0					
ANR	251892	Argument	& size		251839	1					
ANR	251893	UnaryOperationExpression	& size		251839	0					
ANR	251894	UnaryOperator	&		251839	0					
ANR	251895	Identifier	size		251839	1					
ANR	251896	PrimaryExpression	0		251839	1					
ANR	251897	ExpressionStatement	return_error ( gs_error_VMerror )	447:12:16298:16328	251839	1	True				
ANR	251898	CallExpression	return_error ( gs_error_VMerror )		251839	0					
ANR	251899	Callee	return_error		251839	0					
ANR	251900	Identifier	return_error		251839	0					
ANR	251901	ArgumentList	gs_error_VMerror		251839	1					
ANR	251902	Argument	gs_error_VMerror		251839	0					
ANR	251903	Identifier	gs_error_VMerror		251839	0					
ANR	251904	IfStatement	if ( ( uint ) size != size )		251839	2					
ANR	251905	Condition	( uint ) size != size	449:12:16343:16361	251839	0	True				
ANR	251906	EqualityExpression	( uint ) size != size		251839	0		!=			
ANR	251907	CastExpression	( uint ) size		251839	0					
ANR	251908	CastTarget	uint		251839	0					
ANR	251909	Identifier	size		251839	1					
ANR	251910	Identifier	size		251839	1					
ANR	251911	ExpressionStatement	return_error ( gs_error_limitcheck )	450:12:16412:16445	251839	1	True				
ANR	251912	CallExpression	return_error ( gs_error_limitcheck )		251839	0					
ANR	251913	Callee	return_error		251839	0					
ANR	251914	Identifier	return_error		251839	0					
ANR	251915	ArgumentList	gs_error_limitcheck		251839	1					
ANR	251916	Argument	gs_error_limitcheck		251839	0					
ANR	251917	Identifier	gs_error_limitcheck		251839	0					
ANR	251918	ExpressionStatement	"mdev -> base = gs_alloc_bytes ( mdev -> bitmap_memory , ( uint ) size , ""mem_open"" )"	451:8:16455:16563	251839	3	True				
ANR	251919	AssignmentExpression	"mdev -> base = gs_alloc_bytes ( mdev -> bitmap_memory , ( uint ) size , ""mem_open"" )"		251839	0		=			
ANR	251920	PtrMemberAccess	mdev -> base		251839	0					
ANR	251921	Identifier	mdev		251839	0					
ANR	251922	Identifier	base		251839	1					
ANR	251923	CallExpression	"gs_alloc_bytes ( mdev -> bitmap_memory , ( uint ) size , ""mem_open"" )"		251839	1					
ANR	251924	Callee	gs_alloc_bytes		251839	0					
ANR	251925	Identifier	gs_alloc_bytes		251839	0					
ANR	251926	ArgumentList	mdev -> bitmap_memory		251839	1					
ANR	251927	Argument	mdev -> bitmap_memory		251839	0					
ANR	251928	PtrMemberAccess	mdev -> bitmap_memory		251839	0					
ANR	251929	Identifier	mdev		251839	0					
ANR	251930	Identifier	bitmap_memory		251839	1					
ANR	251931	Argument	( uint ) size		251839	1					
ANR	251932	CastExpression	( uint ) size		251839	0					
ANR	251933	CastTarget	uint		251839	0					
ANR	251934	Identifier	size		251839	1					
ANR	251935	Argument	"""mem_open"""		251839	2					
ANR	251936	PrimaryExpression	"""mem_open"""		251839	0					
ANR	251937	IfStatement	if ( mdev -> base == 0 )		251839	4					
ANR	251938	Condition	mdev -> base == 0	453:12:16577:16591	251839	0	True				
ANR	251939	EqualityExpression	mdev -> base == 0		251839	0		==			
ANR	251940	PtrMemberAccess	mdev -> base		251839	0					
ANR	251941	Identifier	mdev		251839	0					
ANR	251942	Identifier	base		251839	1					
ANR	251943	PrimaryExpression	0		251839	1					
ANR	251944	ExpressionStatement	return_error ( gs_error_VMerror )	454:12:16606:16636	251839	1	True				
ANR	251945	CallExpression	return_error ( gs_error_VMerror )		251839	0					
ANR	251946	Callee	return_error		251839	0					
ANR	251947	Identifier	return_error		251839	0					
ANR	251948	ArgumentList	gs_error_VMerror		251839	1					
ANR	251949	Argument	gs_error_VMerror		251839	0					
ANR	251950	Identifier	gs_error_VMerror		251839	0					
ANR	251951	ExpressionStatement	"memset ( mdev -> base , 0x00 , size )"	460:8:16890:16920	251839	5	True				
ANR	251952	CallExpression	"memset ( mdev -> base , 0x00 , size )"		251839	0					
ANR	251953	Callee	memset		251839	0					
ANR	251954	Identifier	memset		251839	0					
ANR	251955	ArgumentList	mdev -> base		251839	1					
ANR	251956	Argument	mdev -> base		251839	0					
ANR	251957	PtrMemberAccess	mdev -> base		251839	0					
ANR	251958	Identifier	mdev		251839	0					
ANR	251959	Identifier	base		251839	1					
ANR	251960	Argument	0x00		251839	1					
ANR	251961	PrimaryExpression	0x00		251839	0					
ANR	251962	Argument	size		251839	2					
ANR	251963	Identifier	size		251839	0					
ANR	251964	ExpressionStatement	align = 1 << mdev -> log2_align_mod	462:8:16937:16968	251839	6	True				
ANR	251965	AssignmentExpression	align = 1 << mdev -> log2_align_mod		251839	0		=			
ANR	251966	Identifier	align		251839	0					
ANR	251967	ShiftExpression	1 << mdev -> log2_align_mod		251839	1		<<			
ANR	251968	PrimaryExpression	1		251839	0					
ANR	251969	PtrMemberAccess	mdev -> log2_align_mod		251839	1					
ANR	251970	Identifier	mdev		251839	0					
ANR	251971	Identifier	log2_align_mod		251839	1					
ANR	251972	ExpressionStatement	mdev -> base += ( - ( int ) ( intptr_t ) mdev -> base ) & ( align - 1 )	463:8:16978:17032	251839	7	True				
ANR	251973	AssignmentExpression	mdev -> base += ( - ( int ) ( intptr_t ) mdev -> base ) & ( align - 1 )		251839	0		+=			
ANR	251974	PtrMemberAccess	mdev -> base		251839	0					
ANR	251975	Identifier	mdev		251839	0					
ANR	251976	Identifier	base		251839	1					
ANR	251977	BitAndExpression	( - ( int ) ( intptr_t ) mdev -> base ) & ( align - 1 )		251839	1		&			
ANR	251978	UnaryOperationExpression	- ( int ) ( intptr_t ) mdev -> base		251839	0					
ANR	251979	UnaryOperator	-		251839	0					
ANR	251980	CastExpression	( int ) ( intptr_t ) mdev -> base		251839	1					
ANR	251981	CastTarget	int		251839	0					
ANR	251982	CastExpression	( intptr_t ) mdev -> base		251839	1					
ANR	251983	CastTarget	intptr_t		251839	0					
ANR	251984	PtrMemberAccess	mdev -> base		251839	1					
ANR	251985	Identifier	mdev		251839	0					
ANR	251986	Identifier	base		251839	1					
ANR	251987	AdditiveExpression	align - 1		251839	1		-			
ANR	251988	Identifier	align		251839	0					
ANR	251989	PrimaryExpression	1		251839	1					
ANR	251990	ExpressionStatement	mdev -> foreign_bits = false	464:8:17042:17068	251839	8	True				
ANR	251991	AssignmentExpression	mdev -> foreign_bits = false		251839	0		=			
ANR	251992	PtrMemberAccess	mdev -> foreign_bits		251839	0					
ANR	251993	Identifier	mdev		251839	0					
ANR	251994	Identifier	foreign_bits		251839	1					
ANR	251995	Identifier	false		251839	1					
ANR	251996	ElseStatement	else		251839	0					
ANR	251997	IfStatement	if ( mdev -> line_pointer_memory != 0 )		251839	0					
ANR	251998	Condition	mdev -> line_pointer_memory != 0	465:15:17085:17114	251839	0	True				
ANR	251999	EqualityExpression	mdev -> line_pointer_memory != 0		251839	0		!=			
ANR	252000	PtrMemberAccess	mdev -> line_pointer_memory		251839	0					
ANR	252001	Identifier	mdev		251839	0					
ANR	252002	Identifier	line_pointer_memory		251839	1					
ANR	252003	PrimaryExpression	0		251839	1					
ANR	252004	CompoundStatement		29:47:1132:1132	251839	1					
ANR	252005	ExpressionStatement	"mdev -> line_ptrs = ( byte * * ) gs_alloc_byte_array ( mdev -> line_pointer_memory , mdev -> height , sizeof ( byte * ) * ( mdev -> is_planar ? mdev -> color_info . num_components : 1 ) , ""gdev_mem_open_scan_lines"" )"	468:8:17174:17440	251839	0	True				
ANR	252006	AssignmentExpression	"mdev -> line_ptrs = ( byte * * ) gs_alloc_byte_array ( mdev -> line_pointer_memory , mdev -> height , sizeof ( byte * ) * ( mdev -> is_planar ? mdev -> color_info . num_components : 1 ) , ""gdev_mem_open_scan_lines"" )"		251839	0		=			
ANR	252007	PtrMemberAccess	mdev -> line_ptrs		251839	0					
ANR	252008	Identifier	mdev		251839	0					
ANR	252009	Identifier	line_ptrs		251839	1					
ANR	252010	CastExpression	"( byte * * ) gs_alloc_byte_array ( mdev -> line_pointer_memory , mdev -> height , sizeof ( byte * ) * ( mdev -> is_planar ? mdev -> color_info . num_components : 1 ) , ""gdev_mem_open_scan_lines"" )"		251839	1					
ANR	252011	CastTarget	byte * *		251839	0					
ANR	252012	CallExpression	"gs_alloc_byte_array ( mdev -> line_pointer_memory , mdev -> height , sizeof ( byte * ) * ( mdev -> is_planar ? mdev -> color_info . num_components : 1 ) , ""gdev_mem_open_scan_lines"" )"		251839	1					
ANR	252013	Callee	gs_alloc_byte_array		251839	0					
ANR	252014	Identifier	gs_alloc_byte_array		251839	0					
ANR	252015	ArgumentList	mdev -> line_pointer_memory		251839	1					
ANR	252016	Argument	mdev -> line_pointer_memory		251839	0					
ANR	252017	PtrMemberAccess	mdev -> line_pointer_memory		251839	0					
ANR	252018	Identifier	mdev		251839	0					
ANR	252019	Identifier	line_pointer_memory		251839	1					
ANR	252020	Argument	mdev -> height		251839	1					
ANR	252021	PtrMemberAccess	mdev -> height		251839	0					
ANR	252022	Identifier	mdev		251839	0					
ANR	252023	Identifier	height		251839	1					
ANR	252024	Argument	sizeof ( byte * ) * ( mdev -> is_planar ? mdev -> color_info . num_components : 1 )		251839	2					
ANR	252025	MultiplicativeExpression	sizeof ( byte * ) * ( mdev -> is_planar ? mdev -> color_info . num_components : 1 )		251839	0		*			
ANR	252026	SizeofExpression	sizeof ( byte * )		251839	0					
ANR	252027	Sizeof	sizeof		251839	0					
ANR	252028	SizeofOperand	byte *		251839	1					
ANR	252029	ConditionalExpression	mdev -> is_planar ? mdev -> color_info . num_components : 1		251839	1					
ANR	252030	Condition	mdev -> is_planar		251839	0					
ANR	252031	PtrMemberAccess	mdev -> is_planar		251839	0					
ANR	252032	Identifier	mdev		251839	0					
ANR	252033	Identifier	is_planar		251839	1					
ANR	252034	MemberAccess	mdev -> color_info . num_components		251839	1					
ANR	252035	PtrMemberAccess	mdev -> color_info		251839	0					
ANR	252036	Identifier	mdev		251839	0					
ANR	252037	Identifier	color_info		251839	1					
ANR	252038	Identifier	num_components		251839	1					
ANR	252039	PrimaryExpression	1		251839	2					
ANR	252040	Argument	"""gdev_mem_open_scan_lines"""		251839	3					
ANR	252041	PrimaryExpression	"""gdev_mem_open_scan_lines"""		251839	0					
ANR	252042	IfStatement	if ( mdev -> line_ptrs == 0 )		251839	1					
ANR	252043	Condition	mdev -> line_ptrs == 0	472:12:17454:17473	251839	0	True				
ANR	252044	EqualityExpression	mdev -> line_ptrs == 0		251839	0		==			
ANR	252045	PtrMemberAccess	mdev -> line_ptrs		251839	0					
ANR	252046	Identifier	mdev		251839	0					
ANR	252047	Identifier	line_ptrs		251839	1					
ANR	252048	PrimaryExpression	0		251839	1					
ANR	252049	ExpressionStatement	return_error ( gs_error_VMerror )	473:12:17488:17518	251839	1	True				
ANR	252050	CallExpression	return_error ( gs_error_VMerror )		251839	0					
ANR	252051	Callee	return_error		251839	0					
ANR	252052	Identifier	return_error		251839	0					
ANR	252053	ArgumentList	gs_error_VMerror		251839	1					
ANR	252054	Argument	gs_error_VMerror		251839	0					
ANR	252055	Identifier	gs_error_VMerror		251839	0					
ANR	252056	ExpressionStatement	mdev -> foreign_line_pointers = false	474:8:17528:17563	251839	2	True				
ANR	252057	AssignmentExpression	mdev -> foreign_line_pointers = false		251839	0		=			
ANR	252058	PtrMemberAccess	mdev -> foreign_line_pointers		251839	0					
ANR	252059	Identifier	mdev		251839	0					
ANR	252060	Identifier	foreign_line_pointers		251839	1					
ANR	252061	Identifier	false		251839	1					
ANR	252062	ExpressionStatement	line_pointers_adjacent = false	475:8:17573:17603	251839	3	True				
ANR	252063	AssignmentExpression	line_pointers_adjacent = false		251839	0		=			
ANR	252064	Identifier	line_pointers_adjacent		251839	0					
ANR	252065	Identifier	false		251839	1					
ANR	252066	IfStatement	if ( line_pointers_adjacent )		251839	4					
ANR	252067	Condition	line_pointers_adjacent	477:8:17619:17640	251839	0	True				
ANR	252068	Identifier	line_pointers_adjacent		251839	0					
ANR	252069	CompoundStatement		42:8:1668:1676	251839	1					
ANR	252070	IdentifierDeclStatement	int code ;	478:8:17653:17661	251839	0	True				
ANR	252071	IdentifierDecl	code		251839	0					
ANR	252072	IdentifierDeclType	int		251839	0					
ANR	252073	Identifier	code		251839	1					
ANR	252074	IfStatement	if ( mdev -> base == 0 )		251839	1					
ANR	252075	Condition	mdev -> base == 0	480:12:17676:17690	251839	0	True				
ANR	252076	EqualityExpression	mdev -> base == 0		251839	0		==			
ANR	252077	PtrMemberAccess	mdev -> base		251839	0					
ANR	252078	Identifier	mdev		251839	0					
ANR	252079	Identifier	base		251839	1					
ANR	252080	PrimaryExpression	0		251839	1					
ANR	252081	ExpressionStatement	return_error ( gs_error_rangecheck )	481:12:17705:17738	251839	1	True				
ANR	252082	CallExpression	return_error ( gs_error_rangecheck )		251839	0					
ANR	252083	Callee	return_error		251839	0					
ANR	252084	Identifier	return_error		251839	0					
ANR	252085	ArgumentList	gs_error_rangecheck		251839	1					
ANR	252086	Argument	gs_error_rangecheck		251839	0					
ANR	252087	Identifier	gs_error_rangecheck		251839	0					
ANR	252088	ExpressionStatement	"code = gdev_mem_bits_size ( mdev , mdev -> width , mdev -> height , & size )"	483:8:17749:17814	251839	2	True				
ANR	252089	AssignmentExpression	"code = gdev_mem_bits_size ( mdev , mdev -> width , mdev -> height , & size )"		251839	0		=			
ANR	252090	Identifier	code		251839	0					
ANR	252091	CallExpression	"gdev_mem_bits_size ( mdev , mdev -> width , mdev -> height , & size )"		251839	1					
ANR	252092	Callee	gdev_mem_bits_size		251839	0					
ANR	252093	Identifier	gdev_mem_bits_size		251839	0					
ANR	252094	ArgumentList	mdev		251839	1					
ANR	252095	Argument	mdev		251839	0					
ANR	252096	Identifier	mdev		251839	0					
ANR	252097	Argument	mdev -> width		251839	1					
ANR	252098	PtrMemberAccess	mdev -> width		251839	0					
ANR	252099	Identifier	mdev		251839	0					
ANR	252100	Identifier	width		251839	1					
ANR	252101	Argument	mdev -> height		251839	2					
ANR	252102	PtrMemberAccess	mdev -> height		251839	0					
ANR	252103	Identifier	mdev		251839	0					
ANR	252104	Identifier	height		251839	1					
ANR	252105	Argument	& size		251839	3					
ANR	252106	UnaryOperationExpression	& size		251839	0					
ANR	252107	UnaryOperator	&		251839	0					
ANR	252108	Identifier	size		251839	1					
ANR	252109	IfStatement	if ( code < 0 )		251839	3					
ANR	252110	Condition	code < 0	484:12:17828:17835	251839	0	True				
ANR	252111	RelationalExpression	code < 0		251839	0		<			
ANR	252112	Identifier	code		251839	0					
ANR	252113	PrimaryExpression	0		251839	1					
ANR	252114	ReturnStatement	return code ;	485:12:17850:17861	251839	1	True				
ANR	252115	Identifier	code		251839	0					
ANR	252116	ExpressionStatement	mdev -> line_ptrs = ( byte * * ) ( mdev -> base + size )	487:8:17872:17918	251839	4	True				
ANR	252117	AssignmentExpression	mdev -> line_ptrs = ( byte * * ) ( mdev -> base + size )		251839	0		=			
ANR	252118	PtrMemberAccess	mdev -> line_ptrs		251839	0					
ANR	252119	Identifier	mdev		251839	0					
ANR	252120	Identifier	line_ptrs		251839	1					
ANR	252121	CastExpression	( byte * * ) ( mdev -> base + size )		251839	1					
ANR	252122	CastTarget	byte * *		251839	0					
ANR	252123	AdditiveExpression	mdev -> base + size		251839	1		+			
ANR	252124	PtrMemberAccess	mdev -> base		251839	0					
ANR	252125	Identifier	mdev		251839	0					
ANR	252126	Identifier	base		251839	1					
ANR	252127	Identifier	size		251839	1					
ANR	252128	ExpressionStatement	"mdev -> raster = gx_device_raster ( ( gx_device * ) mdev , 1 )"	489:4:17930:17983	251839	5	True				
ANR	252129	AssignmentExpression	"mdev -> raster = gx_device_raster ( ( gx_device * ) mdev , 1 )"		251839	0		=			
ANR	252130	PtrMemberAccess	mdev -> raster		251839	0					
ANR	252131	Identifier	mdev		251839	0					
ANR	252132	Identifier	raster		251839	1					
ANR	252133	CallExpression	"gx_device_raster ( ( gx_device * ) mdev , 1 )"		251839	1					
ANR	252134	Callee	gx_device_raster		251839	0					
ANR	252135	Identifier	gx_device_raster		251839	0					
ANR	252136	ArgumentList	( gx_device * ) mdev		251839	1					
ANR	252137	Argument	( gx_device * ) mdev		251839	0					
ANR	252138	CastExpression	( gx_device * ) mdev		251839	0					
ANR	252139	CastTarget	gx_device *		251839	0					
ANR	252140	Identifier	mdev		251839	1					
ANR	252141	Argument	1		251839	1					
ANR	252142	PrimaryExpression	1		251839	0					
ANR	252143	ReturnStatement	"return gdev_mem_set_line_ptrs ( mdev , NULL , 0 , NULL , setup_height ) ;"	490:4:17989:18053	251839	6	True				
ANR	252144	CallExpression	"gdev_mem_set_line_ptrs ( mdev , NULL , 0 , NULL , setup_height )"		251839	0					
ANR	252145	Callee	gdev_mem_set_line_ptrs		251839	0					
ANR	252146	Identifier	gdev_mem_set_line_ptrs		251839	0					
ANR	252147	ArgumentList	mdev		251839	1					
ANR	252148	Argument	mdev		251839	0					
ANR	252149	Identifier	mdev		251839	0					
ANR	252150	Argument	NULL		251839	1					
ANR	252151	Identifier	NULL		251839	0					
ANR	252152	Argument	0		251839	2					
ANR	252153	PrimaryExpression	0		251839	0					
ANR	252154	Argument	NULL		251839	3					
ANR	252155	Identifier	NULL		251839	0					
ANR	252156	Argument	setup_height		251839	4					
ANR	252157	Identifier	setup_height		251839	0					
ANR	252158	ReturnType	int		251839	1					
ANR	252159	Identifier	gdev_mem_open_scan_lines		251839	2					
ANR	252160	ParameterList	"gx_device_memory * mdev , int setup_height"		251839	3					
ANR	252161	Parameter	gx_device_memory * mdev	436:25:15942:15963	251839	0	True				
ANR	252162	ParameterType	gx_device_memory *		251839	0					
ANR	252163	Identifier	mdev		251839	1					
ANR	252164	Parameter	int setup_height	436:49:15966:15981	251839	1	True				
ANR	252165	ParameterType	int		251839	0					
ANR	252166	Identifier	setup_height		251839	1					
ANR	252167	CFGEntryNode	ENTRY		251839		True				
ANR	252168	CFGExitNode	EXIT		251839		True				
ANR	252169	Symbol	line_pointers_adjacent		251839						
ANR	252170	Symbol	mdev -> color_info . num_components		251839						
ANR	252171	Symbol	gx_device_raster		251839						
ANR	252172	Symbol	mdev -> height		251839						
ANR	252173	Symbol	code		251839						
ANR	252174	Symbol	gs_error_rangecheck		251839						
ANR	252175	Symbol	mdev -> line_pointer_memory		251839						
ANR	252176	Symbol	gdev_mem_set_line_ptrs		251839						
ANR	252177	Symbol	align		251839						
ANR	252178	Symbol	mdev -> raster		251839						
ANR	252179	Symbol	mdev -> base		251839						
ANR	252180	Symbol	gdev_mem_bitmap_size		251839						
ANR	252181	Symbol	mdev -> is_planar		251839						
ANR	252182	Symbol	mdev -> foreign_line_pointers		251839						
ANR	252183	Symbol	gs_error_limitcheck		251839						
ANR	252184	Symbol	mdev -> color_info		251839						
ANR	252185	Symbol	* mdev		251839						
ANR	252186	Symbol	mdev -> bitmap_memory		251839						
ANR	252187	Symbol	gs_alloc_bytes		251839						
ANR	252188	Symbol	NULL		251839						
ANR	252189	Symbol	mdev -> log2_align_mod		251839						
ANR	252190	Symbol	gdev_mem_bits_size		251839						
ANR	252191	Symbol	setup_height		251839						
ANR	252192	Symbol	false		251839						
ANR	252193	Symbol	& size		251839						
ANR	252194	Symbol	mdev -> width		251839						
ANR	252195	Symbol	mdev -> line_ptrs		251839						
ANR	252196	Symbol	gs_error_VMerror		251839						
ANR	252197	Symbol	size		251839						
ANR	252198	Symbol	true		251839						
ANR	252199	Symbol	mdev		251839						
ANR	252200	Symbol	gs_alloc_byte_array		251839						
ANR	252201	Symbol	mdev -> foreign_bits		251839						
ANR	252202	Function	gdev_mem_set_line_ptrs	498:0:18280:19965							
ANR	252203	FunctionDef	"gdev_mem_set_line_ptrs (gx_device_memory * mdev , byte * base , int raster , byte * * line_ptrs , int setup_height)"		252202	0					
ANR	252204	CompoundStatement		501:0:18416:19965	252202	0					
ANR	252205	IdentifierDeclStatement	int num_planes = ( mdev -> is_planar ? mdev -> color_info . num_components : 0 ) ;	502:4:18422:18494	252202	0	True				
ANR	252206	IdentifierDecl	num_planes = ( mdev -> is_planar ? mdev -> color_info . num_components : 0 )		252202	0					
ANR	252207	IdentifierDeclType	int		252202	0					
ANR	252208	Identifier	num_planes		252202	1					
ANR	252209	AssignmentExpression	num_planes = ( mdev -> is_planar ? mdev -> color_info . num_components : 0 )		252202	2		=			
ANR	252210	Identifier	num_planes		252202	0					
ANR	252211	ConditionalExpression	mdev -> is_planar ? mdev -> color_info . num_components : 0		252202	1					
ANR	252212	Condition	mdev -> is_planar		252202	0					
ANR	252213	PtrMemberAccess	mdev -> is_planar		252202	0					
ANR	252214	Identifier	mdev		252202	0					
ANR	252215	Identifier	is_planar		252202	1					
ANR	252216	MemberAccess	mdev -> color_info . num_components		252202	1					
ANR	252217	PtrMemberAccess	mdev -> color_info		252202	0					
ANR	252218	Identifier	mdev		252202	0					
ANR	252219	Identifier	color_info		252202	1					
ANR	252220	Identifier	num_components		252202	1					
ANR	252221	PrimaryExpression	0		252202	2					
ANR	252222	IdentifierDeclStatement	byte * * pline ;	503:4:18500:18512	252202	1	True				
ANR	252223	IdentifierDecl	* * pline		252202	0					
ANR	252224	IdentifierDeclType	byte * *		252202	0					
ANR	252225	Identifier	pline		252202	1					
ANR	252226	IdentifierDeclStatement	byte * data ;	504:4:18518:18528	252202	2	True				
ANR	252227	IdentifierDecl	* data		252202	0					
ANR	252228	IdentifierDeclType	byte *		252202	0					
ANR	252229	Identifier	data		252202	1					
ANR	252230	IdentifierDeclStatement	int pi ;	505:4:18534:18540	252202	3	True				
ANR	252231	IdentifierDecl	pi		252202	0					
ANR	252232	IdentifierDeclType	int		252202	0					
ANR	252233	Identifier	pi		252202	1					
ANR	252234	IfStatement	if ( line_ptrs )		252202	4					
ANR	252235	Condition	line_ptrs	509:8:18665:18673	252202	0	True				
ANR	252236	Identifier	line_ptrs		252202	0					
ANR	252237	ExpressionStatement	mdev -> line_ptrs = line_ptrs	510:8:18684:18711	252202	1	True				
ANR	252238	AssignmentExpression	mdev -> line_ptrs = line_ptrs		252202	0		=			
ANR	252239	PtrMemberAccess	mdev -> line_ptrs		252202	0					
ANR	252240	Identifier	mdev		252202	0					
ANR	252241	Identifier	line_ptrs		252202	1					
ANR	252242	Identifier	line_ptrs		252202	1					
ANR	252243	ExpressionStatement	pline = mdev -> line_ptrs	511:4:18717:18740	252202	5	True				
ANR	252244	AssignmentExpression	pline = mdev -> line_ptrs		252202	0		=			
ANR	252245	Identifier	pline		252202	0					
ANR	252246	PtrMemberAccess	mdev -> line_ptrs		252202	1					
ANR	252247	Identifier	mdev		252202	0					
ANR	252248	Identifier	line_ptrs		252202	1					
ANR	252249	IfStatement	if ( base == NULL )		252202	6					
ANR	252250	Condition	base == NULL	517:8:19006:19017	252202	0	True				
ANR	252251	EqualityExpression	base == NULL		252202	0		==			
ANR	252252	Identifier	base		252202	0					
ANR	252253	Identifier	NULL		252202	1					
ANR	252254	CompoundStatement		17:22:603:603	252202	1					
ANR	252255	ExpressionStatement	base = mdev -> base	518:8:19030:19047	252202	0	True				
ANR	252256	AssignmentExpression	base = mdev -> base		252202	0		=			
ANR	252257	Identifier	base		252202	0					
ANR	252258	PtrMemberAccess	mdev -> base		252202	1					
ANR	252259	Identifier	mdev		252202	0					
ANR	252260	Identifier	base		252202	1					
ANR	252261	ExpressionStatement	raster = mdev -> raster	519:8:19057:19078	252202	1	True				
ANR	252262	AssignmentExpression	raster = mdev -> raster		252202	0		=			
ANR	252263	Identifier	raster		252202	0					
ANR	252264	PtrMemberAccess	mdev -> raster		252202	1					
ANR	252265	Identifier	mdev		252202	0					
ANR	252266	Identifier	raster		252202	1					
ANR	252267	ElseStatement	else		252202	0					
ANR	252268	CompoundStatement		20:11:674:674	252202	0					
ANR	252269	ExpressionStatement	mdev -> base = base	521:8:19101:19118	252202	0	True				
ANR	252270	AssignmentExpression	mdev -> base = base		252202	0		=			
ANR	252271	PtrMemberAccess	mdev -> base		252202	0					
ANR	252272	Identifier	mdev		252202	0					
ANR	252273	Identifier	base		252202	1					
ANR	252274	Identifier	base		252202	1					
ANR	252275	ExpressionStatement	mdev -> raster = raster	522:8:19128:19149	252202	1	True				
ANR	252276	AssignmentExpression	mdev -> raster = raster		252202	0		=			
ANR	252277	PtrMemberAccess	mdev -> raster		252202	0					
ANR	252278	Identifier	mdev		252202	0					
ANR	252279	Identifier	raster		252202	1					
ANR	252280	Identifier	raster		252202	1					
ANR	252281	IfStatement	if ( mdev -> log2_align_mod > log2_align_bitmap_mod )		252202	7					
ANR	252282	Condition	mdev -> log2_align_mod > log2_align_bitmap_mod	526:8:19208:19251	252202	0	True				
ANR	252283	RelationalExpression	mdev -> log2_align_mod > log2_align_bitmap_mod		252202	0		>			
ANR	252284	PtrMemberAccess	mdev -> log2_align_mod		252202	0					
ANR	252285	Identifier	mdev		252202	0					
ANR	252286	Identifier	log2_align_mod		252202	1					
ANR	252287	Identifier	log2_align_bitmap_mod		252202	1					
ANR	252288	CompoundStatement		27:8:847:882	252202	1					
ANR	252289	IdentifierDeclStatement	int align = 1 << mdev -> log2_align_mod ;	527:8:19264:19299	252202	0	True				
ANR	252290	IdentifierDecl	align = 1 << mdev -> log2_align_mod		252202	0					
ANR	252291	IdentifierDeclType	int		252202	0					
ANR	252292	Identifier	align		252202	1					
ANR	252293	AssignmentExpression	align = 1 << mdev -> log2_align_mod		252202	2		=			
ANR	252294	Identifier	align		252202	0					
ANR	252295	ShiftExpression	1 << mdev -> log2_align_mod		252202	1		<<			
ANR	252296	PrimaryExpression	1		252202	0					
ANR	252297	PtrMemberAccess	mdev -> log2_align_mod		252202	1					
ANR	252298	Identifier	mdev		252202	0					
ANR	252299	Identifier	log2_align_mod		252202	1					
ANR	252300	ExpressionStatement	align = ( - ( int ) ( intptr_t ) base ) & ( align - 1 )	528:8:19309:19351	252202	1	True				
ANR	252301	AssignmentExpression	align = ( - ( int ) ( intptr_t ) base ) & ( align - 1 )		252202	0		=			
ANR	252302	Identifier	align		252202	0					
ANR	252303	BitAndExpression	( - ( int ) ( intptr_t ) base ) & ( align - 1 )		252202	1		&			
ANR	252304	UnaryOperationExpression	- ( int ) ( intptr_t ) base		252202	0					
ANR	252305	UnaryOperator	-		252202	0					
ANR	252306	CastExpression	( int ) ( intptr_t ) base		252202	1					
ANR	252307	CastTarget	int		252202	0					
ANR	252308	CastExpression	( intptr_t ) base		252202	1					
ANR	252309	CastTarget	intptr_t		252202	0					
ANR	252310	Identifier	base		252202	1					
ANR	252311	AdditiveExpression	align - 1		252202	1		-			
ANR	252312	Identifier	align		252202	0					
ANR	252313	PrimaryExpression	1		252202	1					
ANR	252314	ExpressionStatement	data = base + align	529:8:19361:19380	252202	2	True				
ANR	252315	AssignmentExpression	data = base + align		252202	0		=			
ANR	252316	Identifier	data		252202	0					
ANR	252317	AdditiveExpression	base + align		252202	1		+			
ANR	252318	Identifier	base		252202	0					
ANR	252319	Identifier	align		252202	1					
ANR	252320	ElseStatement	else		252202	0					
ANR	252321	CompoundStatement		30:11:976:976	252202	0					
ANR	252322	ExpressionStatement	data = mdev -> base	531:8:19403:19420	252202	0	True				
ANR	252323	AssignmentExpression	data = mdev -> base		252202	0		=			
ANR	252324	Identifier	data		252202	0					
ANR	252325	PtrMemberAccess	mdev -> base		252202	1					
ANR	252326	Identifier	mdev		252202	0					
ANR	252327	Identifier	base		252202	1					
ANR	252328	IfStatement	if ( num_planes )		252202	8					
ANR	252329	Condition	num_planes	534:8:19437:19446	252202	0	True				
ANR	252330	Identifier	num_planes		252202	0					
ANR	252331	CompoundStatement		34:20:1032:1032	252202	1					
ANR	252332	IfStatement	if ( base && ! mdev -> plane_depth )		252202	0					
ANR	252333	Condition	base && ! mdev -> plane_depth	535:12:19463:19488	252202	0	True				
ANR	252334	AndExpression	base && ! mdev -> plane_depth		252202	0		&&			
ANR	252335	Identifier	base		252202	0					
ANR	252336	UnaryOperationExpression	! mdev -> plane_depth		252202	1					
ANR	252337	UnaryOperator	!		252202	0					
ANR	252338	PtrMemberAccess	mdev -> plane_depth		252202	1					
ANR	252339	Identifier	mdev		252202	0					
ANR	252340	Identifier	plane_depth		252202	1					
ANR	252341	ExpressionStatement	return_error ( gs_error_rangecheck )	536:12:19503:19536	252202	1	True				
ANR	252342	CallExpression	return_error ( gs_error_rangecheck )		252202	0					
ANR	252343	Callee	return_error		252202	0					
ANR	252344	Identifier	return_error		252202	0					
ANR	252345	ArgumentList	gs_error_rangecheck		252202	1					
ANR	252346	Argument	gs_error_rangecheck		252202	0					
ANR	252347	Identifier	gs_error_rangecheck		252202	0					
ANR	252348	ElseStatement	else		252202	0					
ANR	252349	CompoundStatement		37:11:1132:1132	252202	0					
ANR	252350	ExpressionStatement	num_planes = 1	538:8:19559:19573	252202	0	True				
ANR	252351	AssignmentExpression	num_planes = 1		252202	0		=			
ANR	252352	Identifier	num_planes		252202	0					
ANR	252353	PrimaryExpression	1		252202	1					
ANR	252354	ForStatement	for ( pi = 0 ; pi < num_planes ; ++ pi )		252202	9					
ANR	252355	ForInit	pi = 0 ;	541:9:19591:19597	252202	0	True				
ANR	252356	AssignmentExpression	pi = 0		252202	0		=			
ANR	252357	Identifier	pi		252202	0					
ANR	252358	PrimaryExpression	0		252202	1					
ANR	252359	Condition	pi < num_planes	541:17:19599:19613	252202	1	True				
ANR	252360	RelationalExpression	pi < num_planes		252202	0		<			
ANR	252361	Identifier	pi		252202	0					
ANR	252362	Identifier	num_planes		252202	1					
ANR	252363	UnaryExpression	++ pi	541:34:19616:19619	252202	2	True				
ANR	252364	IncDec	++		252202	0					
ANR	252365	Identifier	pi		252202	1					
ANR	252366	CompoundStatement		44:8:1287:1309	252202	3					
ANR	252367	IdentifierDeclStatement	byte * * pptr = pline ;	542:8:19632:19651	252202	0	True				
ANR	252368	IdentifierDecl	* * pptr = pline		252202	0					
ANR	252369	IdentifierDeclType	byte * *		252202	0					
ANR	252370	Identifier	pptr		252202	1					
ANR	252371	AssignmentExpression	* * pptr = pline		252202	2		=			
ANR	252372	Identifier	pline		252202	0					
ANR	252373	Identifier	pline		252202	1					
ANR	252374	IdentifierDeclStatement	byte * * pend = pptr + setup_height ;	543:8:19661:19694	252202	1	True				
ANR	252375	IdentifierDecl	* * pend = pptr + setup_height		252202	0					
ANR	252376	IdentifierDeclType	byte * *		252202	0					
ANR	252377	Identifier	pend		252202	1					
ANR	252378	AssignmentExpression	* * pend = pptr + setup_height		252202	2		=			
ANR	252379	Identifier	pend		252202	0					
ANR	252380	AdditiveExpression	pptr + setup_height		252202	1		+			
ANR	252381	Identifier	pptr		252202	0					
ANR	252382	Identifier	setup_height		252202	1					
ANR	252383	IdentifierDeclStatement	byte * scan_line = data ;	544:8:19704:19726	252202	2	True				
ANR	252384	IdentifierDecl	* scan_line = data		252202	0					
ANR	252385	IdentifierDeclType	byte *		252202	0					
ANR	252386	Identifier	scan_line		252202	1					
ANR	252387	AssignmentExpression	* scan_line = data		252202	2		=			
ANR	252388	Identifier	data		252202	0					
ANR	252389	Identifier	data		252202	1					
ANR	252390	WhileStatement	while ( pptr < pend )		252202	3					
ANR	252391	Condition	pptr < pend	546:15:19744:19754	252202	0	True				
ANR	252392	RelationalExpression	pptr < pend		252202	0		<			
ANR	252393	Identifier	pptr		252202	0					
ANR	252394	Identifier	pend		252202	1					
ANR	252395	CompoundStatement		46:28:1340:1340	252202	1					
ANR	252396	ExpressionStatement	* pptr ++ = scan_line	547:12:19771:19790	252202	0	True				
ANR	252397	AssignmentExpression	* pptr ++ = scan_line		252202	0		=			
ANR	252398	UnaryOperationExpression	* pptr ++		252202	0					
ANR	252399	UnaryOperator	*		252202	0					
ANR	252400	PostIncDecOperationExpression	pptr ++		252202	1					
ANR	252401	Identifier	pptr		252202	0					
ANR	252402	IncDec	++		252202	1					
ANR	252403	Identifier	scan_line		252202	1					
ANR	252404	ExpressionStatement	scan_line += raster	548:12:19804:19823	252202	1	True				
ANR	252405	AssignmentExpression	scan_line += raster		252202	0		+=			
ANR	252406	Identifier	scan_line		252202	0					
ANR	252407	Identifier	raster		252202	1					
ANR	252408	ExpressionStatement	data += raster * mdev -> height	550:8:19843:19872	252202	4	True				
ANR	252409	AssignmentExpression	data += raster * mdev -> height		252202	0		+=			
ANR	252410	Identifier	data		252202	0					
ANR	252411	MultiplicativeExpression	raster * mdev -> height		252202	1		*			
ANR	252412	Identifier	raster		252202	0					
ANR	252413	PtrMemberAccess	mdev -> height		252202	1					
ANR	252414	Identifier	mdev		252202	0					
ANR	252415	Identifier	height		252202	1					
ANR	252416	ExpressionStatement	pline += setup_height	551:8:19882:19903	252202	5	True				
ANR	252417	AssignmentExpression	pline += setup_height		252202	0		+=			
ANR	252418	Identifier	pline		252202	0					
ANR	252419	Identifier	setup_height		252202	1					
ANR	252420	ReturnStatement	return 0 ;	554:4:19955:19963	252202	10	True				
ANR	252421	PrimaryExpression	0		252202	0					
ANR	252422	ReturnType	int		252202	1					
ANR	252423	Identifier	gdev_mem_set_line_ptrs		252202	2					
ANR	252424	ParameterList	"gx_device_memory * mdev , byte * base , int raster , byte * * line_ptrs , int setup_height"		252202	3					
ANR	252425	Parameter	gx_device_memory * mdev	499:23:18307:18329	252202	0	True				
ANR	252426	ParameterType	gx_device_memory *		252202	0					
ANR	252427	Identifier	mdev		252202	1					
ANR	252428	Parameter	byte * base	499:48:18332:18342	252202	1	True				
ANR	252429	ParameterType	byte *		252202	0					
ANR	252430	Identifier	base		252202	1					
ANR	252431	Parameter	int raster	499:61:18345:18354	252202	2	True				
ANR	252432	ParameterType	int		252202	0					
ANR	252433	Identifier	raster		252202	1					
ANR	252434	Parameter	byte * * line_ptrs	500:23:18380:18395	252202	3	True				
ANR	252435	ParameterType	byte * *		252202	0					
ANR	252436	Identifier	line_ptrs		252202	1					
ANR	252437	Parameter	int setup_height	500:41:18398:18413	252202	4	True				
ANR	252438	ParameterType	int		252202	0					
ANR	252439	Identifier	setup_height		252202	1					
ANR	252440	CFGEntryNode	ENTRY		252202		True				
ANR	252441	CFGExitNode	EXIT		252202		True				
ANR	252442	Symbol	line_ptrs		252202						
ANR	252443	Symbol	mdev -> color_info . num_components		252202						
ANR	252444	Symbol	log2_align_bitmap_mod		252202						
ANR	252445	Symbol	mdev -> height		252202						
ANR	252446	Symbol	* pptr ++		252202						
ANR	252447	Symbol	data		252202						
ANR	252448	Symbol	gs_error_rangecheck		252202						
ANR	252449	Symbol	scan_line		252202						
ANR	252450	Symbol	pptr		252202						
ANR	252451	Symbol	align		252202						
ANR	252452	Symbol	mdev -> raster		252202						
ANR	252453	Symbol	mdev -> base		252202						
ANR	252454	Symbol	num_planes		252202						
ANR	252455	Symbol	mdev -> is_planar		252202						
ANR	252456	Symbol	mdev -> color_info		252202						
ANR	252457	Symbol	* mdev		252202						
ANR	252458	Symbol	pend		252202						
ANR	252459	Symbol	NULL		252202						
ANR	252460	Symbol	mdev -> log2_align_mod		252202						
ANR	252461	Symbol	raster		252202						
ANR	252462	Symbol	setup_height		252202						
ANR	252463	Symbol	mdev -> line_ptrs		252202						
ANR	252464	Symbol	mdev -> plane_depth		252202						
ANR	252465	Symbol	pline		252202						
ANR	252466	Symbol	pi		252202						
ANR	252467	Symbol	mdev		252202						
ANR	252468	Symbol	base		252202						
ANR	252469	Function	mem_get_initial_matrix	558:0:20015:20382							
ANR	252470	FunctionDef	"mem_get_initial_matrix (gx_device * dev , gs_matrix * pmat)"		252469	0					
ANR	252471	CompoundStatement		560:0:20078:20382	252469	0					
ANR	252472	Statement	gx_device_memory	561:4:20084:20099	252469	0	True				
ANR	252473	Statement	*	561:21:20101:20101	252469	1	True				
ANR	252474	Statement	const	561:23:20103:20107	252469	2	True				
ANR	252475	ExpressionStatement	mdev = ( gx_device_memory * ) dev	561:29:20109:20139	252469	3	True				
ANR	252476	AssignmentExpression	mdev = ( gx_device_memory * ) dev		252469	0		=			
ANR	252477	Identifier	mdev		252469	0					
ANR	252478	CastExpression	( gx_device_memory * ) dev		252469	1					
ANR	252479	CastTarget	gx_device_memory *		252469	0					
ANR	252480	Identifier	dev		252469	1					
ANR	252481	ExpressionStatement	pmat -> xx = mdev -> initial_matrix . xx	563:4:20146:20180	252469	4	True				
ANR	252482	AssignmentExpression	pmat -> xx = mdev -> initial_matrix . xx		252469	0		=			
ANR	252483	PtrMemberAccess	pmat -> xx		252469	0					
ANR	252484	Identifier	pmat		252469	0					
ANR	252485	Identifier	xx		252469	1					
ANR	252486	MemberAccess	mdev -> initial_matrix . xx		252469	1					
ANR	252487	PtrMemberAccess	mdev -> initial_matrix		252469	0					
ANR	252488	Identifier	mdev		252469	0					
ANR	252489	Identifier	initial_matrix		252469	1					
ANR	252490	Identifier	xx		252469	1					
ANR	252491	ExpressionStatement	pmat -> xy = mdev -> initial_matrix . xy	564:4:20186:20220	252469	5	True				
ANR	252492	AssignmentExpression	pmat -> xy = mdev -> initial_matrix . xy		252469	0		=			
ANR	252493	PtrMemberAccess	pmat -> xy		252469	0					
ANR	252494	Identifier	pmat		252469	0					
ANR	252495	Identifier	xy		252469	1					
ANR	252496	MemberAccess	mdev -> initial_matrix . xy		252469	1					
ANR	252497	PtrMemberAccess	mdev -> initial_matrix		252469	0					
ANR	252498	Identifier	mdev		252469	0					
ANR	252499	Identifier	initial_matrix		252469	1					
ANR	252500	Identifier	xy		252469	1					
ANR	252501	ExpressionStatement	pmat -> yx = mdev -> initial_matrix . yx	565:4:20226:20260	252469	6	True				
ANR	252502	AssignmentExpression	pmat -> yx = mdev -> initial_matrix . yx		252469	0		=			
ANR	252503	PtrMemberAccess	pmat -> yx		252469	0					
ANR	252504	Identifier	pmat		252469	0					
ANR	252505	Identifier	yx		252469	1					
ANR	252506	MemberAccess	mdev -> initial_matrix . yx		252469	1					
ANR	252507	PtrMemberAccess	mdev -> initial_matrix		252469	0					
ANR	252508	Identifier	mdev		252469	0					
ANR	252509	Identifier	initial_matrix		252469	1					
ANR	252510	Identifier	yx		252469	1					
ANR	252511	ExpressionStatement	pmat -> yy = mdev -> initial_matrix . yy	566:4:20266:20300	252469	7	True				
ANR	252512	AssignmentExpression	pmat -> yy = mdev -> initial_matrix . yy		252469	0		=			
ANR	252513	PtrMemberAccess	pmat -> yy		252469	0					
ANR	252514	Identifier	pmat		252469	0					
ANR	252515	Identifier	yy		252469	1					
ANR	252516	MemberAccess	mdev -> initial_matrix . yy		252469	1					
ANR	252517	PtrMemberAccess	mdev -> initial_matrix		252469	0					
ANR	252518	Identifier	mdev		252469	0					
ANR	252519	Identifier	initial_matrix		252469	1					
ANR	252520	Identifier	yy		252469	1					
ANR	252521	ExpressionStatement	pmat -> tx = mdev -> initial_matrix . tx	567:4:20306:20340	252469	8	True				
ANR	252522	AssignmentExpression	pmat -> tx = mdev -> initial_matrix . tx		252469	0		=			
ANR	252523	PtrMemberAccess	pmat -> tx		252469	0					
ANR	252524	Identifier	pmat		252469	0					
ANR	252525	Identifier	tx		252469	1					
ANR	252526	MemberAccess	mdev -> initial_matrix . tx		252469	1					
ANR	252527	PtrMemberAccess	mdev -> initial_matrix		252469	0					
ANR	252528	Identifier	mdev		252469	0					
ANR	252529	Identifier	initial_matrix		252469	1					
ANR	252530	Identifier	tx		252469	1					
ANR	252531	ExpressionStatement	pmat -> ty = mdev -> initial_matrix . ty	568:4:20346:20380	252469	9	True				
ANR	252532	AssignmentExpression	pmat -> ty = mdev -> initial_matrix . ty		252469	0		=			
ANR	252533	PtrMemberAccess	pmat -> ty		252469	0					
ANR	252534	Identifier	pmat		252469	0					
ANR	252535	Identifier	ty		252469	1					
ANR	252536	MemberAccess	mdev -> initial_matrix . ty		252469	1					
ANR	252537	PtrMemberAccess	mdev -> initial_matrix		252469	0					
ANR	252538	Identifier	mdev		252469	0					
ANR	252539	Identifier	initial_matrix		252469	1					
ANR	252540	Identifier	ty		252469	1					
ANR	252541	ReturnType	void		252469	1					
ANR	252542	Identifier	mem_get_initial_matrix		252469	2					
ANR	252543	ParameterList	"gx_device * dev , gs_matrix * pmat"		252469	3					
ANR	252544	Parameter	gx_device * dev	559:23:20043:20057	252469	0	True				
ANR	252545	ParameterType	gx_device *		252469	0					
ANR	252546	Identifier	dev		252469	1					
ANR	252547	Parameter	gs_matrix * pmat	559:40:20060:20075	252469	1	True				
ANR	252548	ParameterType	gs_matrix *		252469	0					
ANR	252549	Identifier	pmat		252469	1					
ANR	252550	CFGEntryNode	ENTRY		252469		True				
ANR	252551	CFGExitNode	EXIT		252469		True				
ANR	252552	Symbol	mdev -> initial_matrix . tx		252469						
ANR	252553	Symbol	mdev -> initial_matrix . xy		252469						
ANR	252554	Symbol	pmat		252469						
ANR	252555	Symbol	pmat -> xx		252469						
ANR	252556	Symbol	pmat -> yy		252469						
ANR	252557	Symbol	* pmat		252469						
ANR	252558	Symbol	pmat -> yx		252469						
ANR	252559	Symbol	mdev -> initial_matrix . ty		252469						
ANR	252560	Symbol	mdev -> initial_matrix		252469						
ANR	252561	Symbol	dev		252469						
ANR	252562	Symbol	pmat -> tx		252469						
ANR	252563	Symbol	mdev		252469						
ANR	252564	Symbol	pmat -> xy		252469						
ANR	252565	Symbol	mdev -> initial_matrix . xx		252469						
ANR	252566	Symbol	mdev -> initial_matrix . yy		252469						
ANR	252567	Symbol	mdev -> initial_matrix . yx		252469						
ANR	252568	Symbol	* mdev		252469						
ANR	252569	Symbol	pmat -> ty		252469						
ANR	252570	Function	mem_close	572:0:20452:21048							
ANR	252571	FunctionDef	mem_close (gx_device * dev)		252570	0					
ANR	252572	CompoundStatement		574:0:20483:21048	252570	0					
ANR	252573	Statement	gx_device_memory	575:4:20489:20504	252570	0	True				
ANR	252574	Statement	*	575:21:20506:20506	252570	1	True				
ANR	252575	Statement	const	575:23:20508:20512	252570	2	True				
ANR	252576	ExpressionStatement	mdev = ( gx_device_memory * ) dev	575:29:20514:20544	252570	3	True				
ANR	252577	AssignmentExpression	mdev = ( gx_device_memory * ) dev		252570	0		=			
ANR	252578	Identifier	mdev		252570	0					
ANR	252579	CastExpression	( gx_device_memory * ) dev		252570	1					
ANR	252580	CastTarget	gx_device_memory *		252570	0					
ANR	252581	Identifier	dev		252570	1					
ANR	252582	IfStatement	if ( mdev -> bitmap_memory != 0 )		252570	4					
ANR	252583	Condition	mdev -> bitmap_memory != 0	577:8:20555:20578	252570	0	True				
ANR	252584	EqualityExpression	mdev -> bitmap_memory != 0		252570	0		!=			
ANR	252585	PtrMemberAccess	mdev -> bitmap_memory		252570	0					
ANR	252586	Identifier	mdev		252570	0					
ANR	252587	Identifier	bitmap_memory		252570	1					
ANR	252588	PrimaryExpression	0		252570	1					
ANR	252589	CompoundStatement		4:34:97:97	252570	1					
ANR	252590	ExpressionStatement	"gs_free_object ( mdev -> bitmap_memory , mdev -> base , ""mem_close"" )"	578:8:20591:20651	252570	0	True				
ANR	252591	CallExpression	"gs_free_object ( mdev -> bitmap_memory , mdev -> base , ""mem_close"" )"		252570	0					
ANR	252592	Callee	gs_free_object		252570	0					
ANR	252593	Identifier	gs_free_object		252570	0					
ANR	252594	ArgumentList	mdev -> bitmap_memory		252570	1					
ANR	252595	Argument	mdev -> bitmap_memory		252570	0					
ANR	252596	PtrMemberAccess	mdev -> bitmap_memory		252570	0					
ANR	252597	Identifier	mdev		252570	0					
ANR	252598	Identifier	bitmap_memory		252570	1					
ANR	252599	Argument	mdev -> base		252570	1					
ANR	252600	PtrMemberAccess	mdev -> base		252570	0					
ANR	252601	Identifier	mdev		252570	0					
ANR	252602	Identifier	base		252570	1					
ANR	252603	Argument	"""mem_close"""		252570	2					
ANR	252604	PrimaryExpression	"""mem_close"""		252570	0					
ANR	252605	ExpressionStatement	mdev -> base = 0	583:8:20818:20832	252570	1	True				
ANR	252606	AssignmentExpression	mdev -> base = 0		252570	0		=			
ANR	252607	PtrMemberAccess	mdev -> base		252570	0					
ANR	252608	Identifier	mdev		252570	0					
ANR	252609	Identifier	base		252570	1					
ANR	252610	PrimaryExpression	0		252570	1					
ANR	252611	ElseStatement	else		252570	0					
ANR	252612	IfStatement	if ( mdev -> line_pointer_memory != 0 )		252570	0					
ANR	252613	Condition	mdev -> line_pointer_memory != 0	584:15:20849:20878	252570	0	True				
ANR	252614	EqualityExpression	mdev -> line_pointer_memory != 0		252570	0		!=			
ANR	252615	PtrMemberAccess	mdev -> line_pointer_memory		252570	0					
ANR	252616	Identifier	mdev		252570	0					
ANR	252617	Identifier	line_pointer_memory		252570	1					
ANR	252618	PrimaryExpression	0		252570	1					
ANR	252619	CompoundStatement		11:47:397:397	252570	1					
ANR	252620	ExpressionStatement	"gs_free_object ( mdev -> line_pointer_memory , mdev -> line_ptrs , ""mem_close"" )"	585:8:20891:20985	252570	0	True				
ANR	252621	CallExpression	"gs_free_object ( mdev -> line_pointer_memory , mdev -> line_ptrs , ""mem_close"" )"		252570	0					
ANR	252622	Callee	gs_free_object		252570	0					
ANR	252623	Identifier	gs_free_object		252570	0					
ANR	252624	ArgumentList	mdev -> line_pointer_memory		252570	1					
ANR	252625	Argument	mdev -> line_pointer_memory		252570	0					
ANR	252626	PtrMemberAccess	mdev -> line_pointer_memory		252570	0					
ANR	252627	Identifier	mdev		252570	0					
ANR	252628	Identifier	line_pointer_memory		252570	1					
ANR	252629	Argument	mdev -> line_ptrs		252570	1					
ANR	252630	PtrMemberAccess	mdev -> line_ptrs		252570	0					
ANR	252631	Identifier	mdev		252570	0					
ANR	252632	Identifier	line_ptrs		252570	1					
ANR	252633	Argument	"""mem_close"""		252570	2					
ANR	252634	PrimaryExpression	"""mem_close"""		252570	0					
ANR	252635	ExpressionStatement	mdev -> line_ptrs = 0	587:8:20995:21014	252570	1	True				
ANR	252636	AssignmentExpression	mdev -> line_ptrs = 0		252570	0		=			
ANR	252637	PtrMemberAccess	mdev -> line_ptrs		252570	0					
ANR	252638	Identifier	mdev		252570	0					
ANR	252639	Identifier	line_ptrs		252570	1					
ANR	252640	PrimaryExpression	0		252570	1					
ANR	252641	ReturnStatement	return 0 ;	589:4:21038:21046	252570	5	True				
ANR	252642	PrimaryExpression	0		252570	0					
ANR	252643	ReturnType	int		252570	1					
ANR	252644	Identifier	mem_close		252570	2					
ANR	252645	ParameterList	gx_device * dev		252570	3					
ANR	252646	Parameter	gx_device * dev	573:10:20466:20480	252570	0	True				
ANR	252647	ParameterType	gx_device *		252570	0					
ANR	252648	Identifier	dev		252570	1					
ANR	252649	CFGEntryNode	ENTRY		252570		True				
ANR	252650	CFGExitNode	EXIT		252570		True				
ANR	252651	Symbol	mdev -> bitmap_memory		252570						
ANR	252652	Symbol	mdev -> base		252570						
ANR	252653	Symbol	dev		252570						
ANR	252654	Symbol	mdev -> line_pointer_memory		252570						
ANR	252655	Symbol	mdev		252570						
ANR	252656	Symbol	* mdev		252570						
ANR	252657	Symbol	mdev -> line_ptrs		252570						
ANR	252658	Function	mem_get_bits_rectangle	593:1:21081:22915							
ANR	252659	FunctionDef	"mem_get_bits_rectangle (gx_device * dev , const gs_int_rect * prect , gs_get_bits_params_t * params , gs_int_rect * * unread)"		252658	0					
ANR	252660	CompoundStatement		598:0:21260:22915	252658	0					
ANR	252661	Statement	gx_device_memory	599:4:21266:21281	252658	0	True				
ANR	252662	Statement	*	599:21:21283:21283	252658	1	True				
ANR	252663	Statement	const	599:23:21285:21289	252658	2	True				
ANR	252664	ExpressionStatement	mdev = ( gx_device_memory * ) dev	599:29:21291:21321	252658	3	True				
ANR	252665	AssignmentExpression	mdev = ( gx_device_memory * ) dev		252658	0		=			
ANR	252666	Identifier	mdev		252658	0					
ANR	252667	CastExpression	( gx_device_memory * ) dev		252658	1					
ANR	252668	CastTarget	gx_device_memory *		252658	0					
ANR	252669	Identifier	dev		252658	1					
ANR	252670	IdentifierDeclStatement	gs_get_bits_options_t options = params -> options ;	600:4:21327:21374	252658	4	True				
ANR	252671	IdentifierDecl	options = params -> options		252658	0					
ANR	252672	IdentifierDeclType	gs_get_bits_options_t		252658	0					
ANR	252673	Identifier	options		252658	1					
ANR	252674	AssignmentExpression	options = params -> options		252658	2		=			
ANR	252675	Identifier	options		252658	0					
ANR	252676	PtrMemberAccess	params -> options		252658	1					
ANR	252677	Identifier	params		252658	0					
ANR	252678	Identifier	options		252658	1					
ANR	252679	IdentifierDeclStatement	"int x = prect -> p . x , w = prect -> q . x - x , y = prect -> p . y , h = prect -> q . y - y ;"	601:4:21380:21454	252658	5	True				
ANR	252680	IdentifierDecl	x = prect -> p . x		252658	0					
ANR	252681	IdentifierDeclType	int		252658	0					
ANR	252682	Identifier	x		252658	1					
ANR	252683	AssignmentExpression	x = prect -> p . x		252658	2		=			
ANR	252684	Identifier	x		252658	0					
ANR	252685	MemberAccess	prect -> p . x		252658	1					
ANR	252686	PtrMemberAccess	prect -> p		252658	0					
ANR	252687	Identifier	prect		252658	0					
ANR	252688	Identifier	p		252658	1					
ANR	252689	Identifier	x		252658	1					
ANR	252690	IdentifierDecl	w = prect -> q . x - x		252658	1					
ANR	252691	IdentifierDeclType	int		252658	0					
ANR	252692	Identifier	w		252658	1					
ANR	252693	AssignmentExpression	w = prect -> q . x - x		252658	2		=			
ANR	252694	Identifier	w		252658	0					
ANR	252695	AdditiveExpression	prect -> q . x - x		252658	1		-			
ANR	252696	MemberAccess	prect -> q . x		252658	0					
ANR	252697	PtrMemberAccess	prect -> q		252658	0					
ANR	252698	Identifier	prect		252658	0					
ANR	252699	Identifier	q		252658	1					
ANR	252700	Identifier	x		252658	1					
ANR	252701	Identifier	x		252658	1					
ANR	252702	IdentifierDecl	y = prect -> p . y		252658	2					
ANR	252703	IdentifierDeclType	int		252658	0					
ANR	252704	Identifier	y		252658	1					
ANR	252705	AssignmentExpression	y = prect -> p . y		252658	2		=			
ANR	252706	Identifier	y		252658	0					
ANR	252707	MemberAccess	prect -> p . y		252658	1					
ANR	252708	PtrMemberAccess	prect -> p		252658	0					
ANR	252709	Identifier	prect		252658	0					
ANR	252710	Identifier	p		252658	1					
ANR	252711	Identifier	y		252658	1					
ANR	252712	IdentifierDecl	h = prect -> q . y - y		252658	3					
ANR	252713	IdentifierDeclType	int		252658	0					
ANR	252714	Identifier	h		252658	1					
ANR	252715	AssignmentExpression	h = prect -> q . y - y		252658	2		=			
ANR	252716	Identifier	h		252658	0					
ANR	252717	AdditiveExpression	prect -> q . y - y		252658	1		-			
ANR	252718	MemberAccess	prect -> q . y		252658	0					
ANR	252719	PtrMemberAccess	prect -> q		252658	0					
ANR	252720	Identifier	prect		252658	0					
ANR	252721	Identifier	q		252658	1					
ANR	252722	Identifier	y		252658	1					
ANR	252723	Identifier	y		252658	1					
ANR	252724	IfStatement	if ( options == 0 )		252658	6					
ANR	252725	Condition	options == 0	603:8:21465:21476	252658	0	True				
ANR	252726	EqualityExpression	options == 0		252658	0		==			
ANR	252727	Identifier	options		252658	0					
ANR	252728	PrimaryExpression	0		252658	1					
ANR	252729	CompoundStatement		6:22:218:218	252658	1					
ANR	252730	ExpressionStatement	params -> options = ( GB_ALIGN_STANDARD | GB_ALIGN_ANY ) | ( GB_RETURN_COPY | GB_RETURN_POINTER ) | ( GB_OFFSET_0 | GB_OFFSET_SPECIFIED | GB_OFFSET_ANY ) | ( GB_RASTER_STANDARD | GB_RASTER_SPECIFIED | GB_RASTER_ANY ) | GB_PACKING_CHUNKY | GB_COLORS_NATIVE | GB_ALPHA_NONE	604:8:21489:21810	252658	0	True				
ANR	252731	AssignmentExpression	params -> options = ( GB_ALIGN_STANDARD | GB_ALIGN_ANY ) | ( GB_RETURN_COPY | GB_RETURN_POINTER ) | ( GB_OFFSET_0 | GB_OFFSET_SPECIFIED | GB_OFFSET_ANY ) | ( GB_RASTER_STANDARD | GB_RASTER_SPECIFIED | GB_RASTER_ANY ) | GB_PACKING_CHUNKY | GB_COLORS_NATIVE | GB_ALPHA_NONE		252658	0		=			
ANR	252732	PtrMemberAccess	params -> options		252658	0					
ANR	252733	Identifier	params		252658	0					
ANR	252734	Identifier	options		252658	1					
ANR	252735	InclusiveOrExpression	( GB_ALIGN_STANDARD | GB_ALIGN_ANY ) | ( GB_RETURN_COPY | GB_RETURN_POINTER ) | ( GB_OFFSET_0 | GB_OFFSET_SPECIFIED | GB_OFFSET_ANY ) | ( GB_RASTER_STANDARD | GB_RASTER_SPECIFIED | GB_RASTER_ANY ) | GB_PACKING_CHUNKY | GB_COLORS_NATIVE | GB_ALPHA_NONE		252658	1		|			
ANR	252736	InclusiveOrExpression	GB_ALIGN_STANDARD | GB_ALIGN_ANY		252658	0		|			
ANR	252737	Identifier	GB_ALIGN_STANDARD		252658	0					
ANR	252738	Identifier	GB_ALIGN_ANY		252658	1					
ANR	252739	InclusiveOrExpression	( GB_RETURN_COPY | GB_RETURN_POINTER ) | ( GB_OFFSET_0 | GB_OFFSET_SPECIFIED | GB_OFFSET_ANY ) | ( GB_RASTER_STANDARD | GB_RASTER_SPECIFIED | GB_RASTER_ANY ) | GB_PACKING_CHUNKY | GB_COLORS_NATIVE | GB_ALPHA_NONE		252658	1		|			
ANR	252740	InclusiveOrExpression	GB_RETURN_COPY | GB_RETURN_POINTER		252658	0		|			
ANR	252741	Identifier	GB_RETURN_COPY		252658	0					
ANR	252742	Identifier	GB_RETURN_POINTER		252658	1					
ANR	252743	InclusiveOrExpression	( GB_OFFSET_0 | GB_OFFSET_SPECIFIED | GB_OFFSET_ANY ) | ( GB_RASTER_STANDARD | GB_RASTER_SPECIFIED | GB_RASTER_ANY ) | GB_PACKING_CHUNKY | GB_COLORS_NATIVE | GB_ALPHA_NONE		252658	1		|			
ANR	252744	InclusiveOrExpression	GB_OFFSET_0 | GB_OFFSET_SPECIFIED | GB_OFFSET_ANY		252658	0		|			
ANR	252745	Identifier	GB_OFFSET_0		252658	0					
ANR	252746	InclusiveOrExpression	GB_OFFSET_SPECIFIED | GB_OFFSET_ANY		252658	1		|			
ANR	252747	Identifier	GB_OFFSET_SPECIFIED		252658	0					
ANR	252748	Identifier	GB_OFFSET_ANY		252658	1					
ANR	252749	InclusiveOrExpression	( GB_RASTER_STANDARD | GB_RASTER_SPECIFIED | GB_RASTER_ANY ) | GB_PACKING_CHUNKY | GB_COLORS_NATIVE | GB_ALPHA_NONE		252658	1		|			
ANR	252750	InclusiveOrExpression	GB_RASTER_STANDARD | GB_RASTER_SPECIFIED | GB_RASTER_ANY		252658	0		|			
ANR	252751	Identifier	GB_RASTER_STANDARD		252658	0					
ANR	252752	InclusiveOrExpression	GB_RASTER_SPECIFIED | GB_RASTER_ANY		252658	1		|			
ANR	252753	Identifier	GB_RASTER_SPECIFIED		252658	0					
ANR	252754	Identifier	GB_RASTER_ANY		252658	1					
ANR	252755	InclusiveOrExpression	GB_PACKING_CHUNKY | GB_COLORS_NATIVE | GB_ALPHA_NONE		252658	1		|			
ANR	252756	Identifier	GB_PACKING_CHUNKY		252658	0					
ANR	252757	InclusiveOrExpression	GB_COLORS_NATIVE | GB_ALPHA_NONE		252658	1		|			
ANR	252758	Identifier	GB_COLORS_NATIVE		252658	0					
ANR	252759	Identifier	GB_ALPHA_NONE		252658	1					
ANR	252760	ExpressionStatement	return_error ( gs_error_rangecheck )	610:8:21820:21853	252658	1	True				
ANR	252761	CallExpression	return_error ( gs_error_rangecheck )		252658	0					
ANR	252762	Callee	return_error		252658	0					
ANR	252763	Identifier	return_error		252658	0					
ANR	252764	ArgumentList	gs_error_rangecheck		252658	1					
ANR	252765	Argument	gs_error_rangecheck		252658	0					
ANR	252766	Identifier	gs_error_rangecheck		252658	0					
ANR	252767	IfStatement	if ( mdev -> line_ptrs == 0x00 )		252658	7					
ANR	252768	Condition	mdev -> line_ptrs == 0x00	612:8:21869:21891	252658	0	True				
ANR	252769	EqualityExpression	mdev -> line_ptrs == 0x00		252658	0		==			
ANR	252770	PtrMemberAccess	mdev -> line_ptrs		252658	0					
ANR	252771	Identifier	mdev		252658	0					
ANR	252772	Identifier	line_ptrs		252658	1					
ANR	252773	PrimaryExpression	0x00		252658	1					
ANR	252774	ExpressionStatement	return_error ( gs_error_rangecheck )	613:8:21902:21935	252658	1	True				
ANR	252775	CallExpression	return_error ( gs_error_rangecheck )		252658	0					
ANR	252776	Callee	return_error		252658	0					
ANR	252777	Identifier	return_error		252658	0					
ANR	252778	ArgumentList	gs_error_rangecheck		252658	1					
ANR	252779	Argument	gs_error_rangecheck		252658	0					
ANR	252780	Identifier	gs_error_rangecheck		252658	0					
ANR	252781	IfStatement	if ( ( w <= 0 ) | ( h <= 0 ) )		252658	8					
ANR	252782	Condition	( w <= 0 ) | ( h <= 0 )	614:8:21945:21963	252658	0	True				
ANR	252783	InclusiveOrExpression	( w <= 0 ) | ( h <= 0 )		252658	0		|			
ANR	252784	RelationalExpression	w <= 0		252658	0		<=			
ANR	252785	Identifier	w		252658	0					
ANR	252786	PrimaryExpression	0		252658	1					
ANR	252787	RelationalExpression	h <= 0		252658	1		<=			
ANR	252788	Identifier	h		252658	0					
ANR	252789	PrimaryExpression	0		252658	1					
ANR	252790	CompoundStatement		17:29:705:705	252658	1					
ANR	252791	IfStatement	if ( ( w | h ) < 0 )		252658	0					
ANR	252792	Condition	( w | h ) < 0	615:12:21980:21990	252658	0	True				
ANR	252793	RelationalExpression	( w | h ) < 0		252658	0		<			
ANR	252794	InclusiveOrExpression	w | h		252658	0		|			
ANR	252795	Identifier	w		252658	0					
ANR	252796	Identifier	h		252658	1					
ANR	252797	PrimaryExpression	0		252658	1					
ANR	252798	ExpressionStatement	return_error ( gs_error_rangecheck )	616:12:22005:22038	252658	1	True				
ANR	252799	CallExpression	return_error ( gs_error_rangecheck )		252658	0					
ANR	252800	Callee	return_error		252658	0					
ANR	252801	Identifier	return_error		252658	0					
ANR	252802	ArgumentList	gs_error_rangecheck		252658	1					
ANR	252803	Argument	gs_error_rangecheck		252658	0					
ANR	252804	Identifier	gs_error_rangecheck		252658	0					
ANR	252805	ReturnStatement	return 0 ;	617:8:22048:22056	252658	1	True				
ANR	252806	PrimaryExpression	0		252658	0					
ANR	252807	IfStatement	if ( x < 0 || w > dev -> width - x || y < 0 || h > dev -> height - y )		252658	9					
ANR	252808	Condition	x < 0 || w > dev -> width - x || y < 0 || h > dev -> height - y	619:8:22072:22138	252658	0	True				
ANR	252809	OrExpression	x < 0 || w > dev -> width - x || y < 0 || h > dev -> height - y		252658	0		||			
ANR	252810	RelationalExpression	x < 0		252658	0		<			
ANR	252811	Identifier	x		252658	0					
ANR	252812	PrimaryExpression	0		252658	1					
ANR	252813	OrExpression	w > dev -> width - x || y < 0 || h > dev -> height - y		252658	1		||			
ANR	252814	RelationalExpression	w > dev -> width - x		252658	0		>			
ANR	252815	Identifier	w		252658	0					
ANR	252816	AdditiveExpression	dev -> width - x		252658	1		-			
ANR	252817	PtrMemberAccess	dev -> width		252658	0					
ANR	252818	Identifier	dev		252658	0					
ANR	252819	Identifier	width		252658	1					
ANR	252820	Identifier	x		252658	1					
ANR	252821	OrExpression	y < 0 || h > dev -> height - y		252658	1		||			
ANR	252822	RelationalExpression	y < 0		252658	0		<			
ANR	252823	Identifier	y		252658	0					
ANR	252824	PrimaryExpression	0		252658	1					
ANR	252825	RelationalExpression	h > dev -> height - y		252658	1		>			
ANR	252826	Identifier	h		252658	0					
ANR	252827	AdditiveExpression	dev -> height - y		252658	1		-			
ANR	252828	PtrMemberAccess	dev -> height		252658	0					
ANR	252829	Identifier	dev		252658	0					
ANR	252830	Identifier	height		252658	1					
ANR	252831	Identifier	y		252658	1					
ANR	252832	ExpressionStatement	return_error ( gs_error_rangecheck )	622:8:22158:22191	252658	1	True				
ANR	252833	CallExpression	return_error ( gs_error_rangecheck )		252658	0					
ANR	252834	Callee	return_error		252658	0					
ANR	252835	Identifier	return_error		252658	0					
ANR	252836	ArgumentList	gs_error_rangecheck		252658	1					
ANR	252837	Argument	gs_error_rangecheck		252658	0					
ANR	252838	Identifier	gs_error_rangecheck		252658	0					
ANR	252839	CompoundStatement		29:8:1036:1044	252658	10					
ANR	252840	IdentifierDeclStatement	gs_get_bits_params_t copy_params ;	624:8:22207:22239	252658	0	True				
ANR	252841	IdentifierDecl	copy_params		252658	0					
ANR	252842	IdentifierDeclType	gs_get_bits_params_t		252658	0					
ANR	252843	Identifier	copy_params		252658	1					
ANR	252844	IdentifierDeclStatement	"byte * * base = & scan_line_base ( mdev , y ) ;"	625:8:22249:22287	252658	1	True				
ANR	252845	IdentifierDecl	"* * base = & scan_line_base ( mdev , y )"		252658	0					
ANR	252846	IdentifierDeclType	byte * *		252658	0					
ANR	252847	Identifier	base		252658	1					
ANR	252848	AssignmentExpression	"* * base = & scan_line_base ( mdev , y )"		252658	2		=			
ANR	252849	Identifier	base		252658	0					
ANR	252850	UnaryOperationExpression	"& scan_line_base ( mdev , y )"		252658	1					
ANR	252851	UnaryOperator	&		252658	0					
ANR	252852	CallExpression	"scan_line_base ( mdev , y )"		252658	1					
ANR	252853	Callee	scan_line_base		252658	0					
ANR	252854	Identifier	scan_line_base		252658	0					
ANR	252855	ArgumentList	mdev		252658	1					
ANR	252856	Argument	mdev		252658	0					
ANR	252857	Identifier	mdev		252658	0					
ANR	252858	Argument	y		252658	1					
ANR	252859	Identifier	y		252658	0					
ANR	252860	IdentifierDeclStatement	int code ;	626:8:22297:22305	252658	2	True				
ANR	252861	IdentifierDecl	code		252658	0					
ANR	252862	IdentifierDeclType	int		252658	0					
ANR	252863	Identifier	code		252658	1					
ANR	252864	ExpressionStatement	copy_params . options = GB_COLORS_NATIVE | GB_PACKING_CHUNKY | GB_ALPHA_NONE | ( mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth ) ? GB_RASTER_STANDARD : GB_RASTER_SPECIFIED )	628:8:22316:22555	252658	3	True				
ANR	252865	AssignmentExpression	copy_params . options = GB_COLORS_NATIVE | GB_PACKING_CHUNKY | GB_ALPHA_NONE | ( mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth ) ? GB_RASTER_STANDARD : GB_RASTER_SPECIFIED )		252658	0		=			
ANR	252866	MemberAccess	copy_params . options		252658	0					
ANR	252867	Identifier	copy_params		252658	0					
ANR	252868	Identifier	options		252658	1					
ANR	252869	InclusiveOrExpression	GB_COLORS_NATIVE | GB_PACKING_CHUNKY | GB_ALPHA_NONE | ( mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth ) ? GB_RASTER_STANDARD : GB_RASTER_SPECIFIED )		252658	1		|			
ANR	252870	Identifier	GB_COLORS_NATIVE		252658	0					
ANR	252871	InclusiveOrExpression	GB_PACKING_CHUNKY | GB_ALPHA_NONE | ( mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth ) ? GB_RASTER_STANDARD : GB_RASTER_SPECIFIED )		252658	1		|			
ANR	252872	Identifier	GB_PACKING_CHUNKY		252658	0					
ANR	252873	InclusiveOrExpression	GB_ALPHA_NONE | ( mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth ) ? GB_RASTER_STANDARD : GB_RASTER_SPECIFIED )		252658	1		|			
ANR	252874	Identifier	GB_ALPHA_NONE		252658	0					
ANR	252875	ConditionalExpression	mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth ) ? GB_RASTER_STANDARD : GB_RASTER_SPECIFIED		252658	1					
ANR	252876	Condition	mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth )		252658	0					
ANR	252877	EqualityExpression	mdev -> raster == bitmap_raster ( mdev -> width * mdev -> color_info . depth )		252658	0		==			
ANR	252878	PtrMemberAccess	mdev -> raster		252658	0					
ANR	252879	Identifier	mdev		252658	0					
ANR	252880	Identifier	raster		252658	1					
ANR	252881	CallExpression	bitmap_raster ( mdev -> width * mdev -> color_info . depth )		252658	1					
ANR	252882	Callee	bitmap_raster		252658	0					
ANR	252883	Identifier	bitmap_raster		252658	0					
ANR	252884	ArgumentList	mdev -> width * mdev -> color_info . depth		252658	1					
ANR	252885	Argument	mdev -> width * mdev -> color_info . depth		252658	0					
ANR	252886	MultiplicativeExpression	mdev -> width * mdev -> color_info . depth		252658	0		*			
ANR	252887	PtrMemberAccess	mdev -> width		252658	0					
ANR	252888	Identifier	mdev		252658	0					
ANR	252889	Identifier	width		252658	1					
ANR	252890	MemberAccess	mdev -> color_info . depth		252658	1					
ANR	252891	PtrMemberAccess	mdev -> color_info		252658	0					
ANR	252892	Identifier	mdev		252658	0					
ANR	252893	Identifier	color_info		252658	1					
ANR	252894	Identifier	depth		252658	1					
ANR	252895	Identifier	GB_RASTER_STANDARD		252658	1					
ANR	252896	Identifier	GB_RASTER_SPECIFIED		252658	2					
ANR	252897	ExpressionStatement	copy_params . raster = mdev -> raster	633:8:22565:22598	252658	4	True				
ANR	252898	AssignmentExpression	copy_params . raster = mdev -> raster		252658	0		=			
ANR	252899	MemberAccess	copy_params . raster		252658	0					
ANR	252900	Identifier	copy_params		252658	0					
ANR	252901	Identifier	raster		252658	1					
ANR	252902	PtrMemberAccess	mdev -> raster		252658	1					
ANR	252903	Identifier	mdev		252658	0					
ANR	252904	Identifier	raster		252658	1					
ANR	252905	ExpressionStatement	"code = gx_get_bits_return_pointer ( dev , x , h , params , & copy_params , base )"	634:8:22608:22722	252658	5	True				
ANR	252906	AssignmentExpression	"code = gx_get_bits_return_pointer ( dev , x , h , params , & copy_params , base )"		252658	0		=			
ANR	252907	Identifier	code		252658	0					
ANR	252908	CallExpression	"gx_get_bits_return_pointer ( dev , x , h , params , & copy_params , base )"		252658	1					
ANR	252909	Callee	gx_get_bits_return_pointer		252658	0					
ANR	252910	Identifier	gx_get_bits_return_pointer		252658	0					
ANR	252911	ArgumentList	dev		252658	1					
ANR	252912	Argument	dev		252658	0					
ANR	252913	Identifier	dev		252658	0					
ANR	252914	Argument	x		252658	1					
ANR	252915	Identifier	x		252658	0					
ANR	252916	Argument	h		252658	2					
ANR	252917	Identifier	h		252658	0					
ANR	252918	Argument	params		252658	3					
ANR	252919	Identifier	params		252658	0					
ANR	252920	Argument	& copy_params		252658	4					
ANR	252921	UnaryOperationExpression	& copy_params		252658	0					
ANR	252922	UnaryOperator	&		252658	0					
ANR	252923	Identifier	copy_params		252658	1					
ANR	252924	Argument	base		252658	5					
ANR	252925	Identifier	base		252658	0					
ANR	252926	IfStatement	if ( code >= 0 )		252658	6					
ANR	252927	Condition	code >= 0	636:12:22736:22744	252658	0	True				
ANR	252928	RelationalExpression	code >= 0		252658	0		>=			
ANR	252929	Identifier	code		252658	0					
ANR	252930	PrimaryExpression	0		252658	1					
ANR	252931	ReturnStatement	return code ;	637:12:22759:22770	252658	1	True				
ANR	252932	Identifier	code		252658	0					
ANR	252933	ReturnStatement	"return gx_get_bits_copy ( dev , x , w , h , params , & copy_params , * base , gx_device_raster ( dev , true ) ) ;"	638:8:22780:22907	252658	7	True				
ANR	252934	CallExpression	"gx_get_bits_copy ( dev , x , w , h , params , & copy_params , * base , gx_device_raster ( dev , true ) )"		252658	0					
ANR	252935	Callee	gx_get_bits_copy		252658	0					
ANR	252936	Identifier	gx_get_bits_copy		252658	0					
ANR	252937	ArgumentList	dev		252658	1					
ANR	252938	Argument	dev		252658	0					
ANR	252939	Identifier	dev		252658	0					
ANR	252940	Argument	x		252658	1					
ANR	252941	Identifier	x		252658	0					
ANR	252942	Argument	w		252658	2					
ANR	252943	Identifier	w		252658	0					
ANR	252944	Argument	h		252658	3					
ANR	252945	Identifier	h		252658	0					
ANR	252946	Argument	params		252658	4					
ANR	252947	Identifier	params		252658	0					
ANR	252948	Argument	& copy_params		252658	5					
ANR	252949	UnaryOperationExpression	& copy_params		252658	0					
ANR	252950	UnaryOperator	&		252658	0					
ANR	252951	Identifier	copy_params		252658	1					
ANR	252952	Argument	* base		252658	6					
ANR	252953	UnaryOperationExpression	* base		252658	0					
ANR	252954	UnaryOperator	*		252658	0					
ANR	252955	Identifier	base		252658	1					
ANR	252956	Argument	"gx_device_raster ( dev , true )"		252658	7					
ANR	252957	CallExpression	"gx_device_raster ( dev , true )"		252658	0					
ANR	252958	Callee	gx_device_raster		252658	0					
ANR	252959	Identifier	gx_device_raster		252658	0					
ANR	252960	ArgumentList	dev		252658	1					
ANR	252961	Argument	dev		252658	0					
ANR	252962	Identifier	dev		252658	0					
ANR	252963	Argument	true		252658	1					
ANR	252964	Identifier	true		252658	0					
ANR	252965	ReturnType	undef chunk define chunk byte int		252658	1					
ANR	252966	Identifier	mem_get_bits_rectangle		252658	2					
ANR	252967	ParameterList	"gx_device * dev , const gs_int_rect * prect , gs_get_bits_params_t * params , gs_int_rect * * unread"		252658	3					
ANR	252968	Parameter	gx_device * dev	596:23:21139:21153	252658	0	True				
ANR	252969	ParameterType	gx_device *		252658	0					
ANR	252970	Identifier	dev		252658	1					
ANR	252971	Parameter	const gs_int_rect * prect	596:40:21156:21180	252658	1	True				
ANR	252972	ParameterType	const gs_int_rect *		252658	0					
ANR	252973	Identifier	prect		252658	1					
ANR	252974	Parameter	gs_get_bits_params_t * params	597:23:21206:21234	252658	2	True				
ANR	252975	ParameterType	gs_get_bits_params_t *		252658	0					
ANR	252976	Identifier	params		252658	1					
ANR	252977	Parameter	gs_int_rect * * unread	597:54:21237:21257	252658	3	True				
ANR	252978	ParameterType	gs_int_rect * *		252658	0					
ANR	252979	Identifier	unread		252658	1					
ANR	252980	CFGEntryNode	ENTRY		252658		True				
ANR	252981	CFGExitNode	EXIT		252658		True				
ANR	252982	Symbol	prect -> q . y		252658						
ANR	252983	Symbol	prect -> q . x		252658						
ANR	252984	Symbol	GB_RASTER_SPECIFIED		252658						
ANR	252985	Symbol	gs_error_rangecheck		252658						
ANR	252986	Symbol	GB_OFFSET_SPECIFIED		252658						
ANR	252987	Symbol	mdev -> color_info . depth		252658						
ANR	252988	Symbol	prect		252658						
ANR	252989	Symbol	GB_RASTER_ANY		252658						
ANR	252990	Symbol	mdev -> raster		252658						
ANR	252991	Symbol	dev		252658						
ANR	252992	Symbol	& scan_line_base		252658						
ANR	252993	Symbol	options		252658						
ANR	252994	Symbol	gx_get_bits_copy		252658						
ANR	252995	Symbol	prect -> p . x		252658						
ANR	252996	Symbol	* base		252658						
ANR	252997	Symbol	GB_ALPHA_NONE		252658						
ANR	252998	Symbol	copy_params . raster		252658						
ANR	252999	Symbol	prect -> p . y		252658						
ANR	253000	Symbol	* prect		252658						
ANR	253001	Symbol	mdev -> color_info		252658						
ANR	253002	Symbol	* mdev		252658						
ANR	253003	Symbol	copy_params . options		252658						
ANR	253004	Symbol	params -> options		252658						
ANR	253005	Symbol	GB_ALIGN_STANDARD		252658						
ANR	253006	Symbol	GB_OFFSET_ANY		252658						
ANR	253007	Symbol	params		252658						
ANR	253008	Symbol	gx_get_bits_return_pointer		252658						
ANR	253009	Symbol	mdev -> width		252658						
ANR	253010	Symbol	mdev -> line_ptrs		252658						
ANR	253011	Symbol	GB_OFFSET_0		252658						
ANR	253012	Symbol	true		252658						
ANR	253013	Symbol	mdev		252658						
ANR	253014	Symbol	* dev		252658						
ANR	253015	Symbol	gx_device_raster		252658						
ANR	253016	Symbol	code		252658						
ANR	253017	Symbol	unread		252658						
ANR	253018	Symbol	dev -> height		252658						
ANR	253019	Symbol	prect -> p		252658						
ANR	253020	Symbol	prect -> q		252658						
ANR	253021	Symbol	copy_params		252658						
ANR	253022	Symbol	GB_COLORS_NATIVE		252658						
ANR	253023	Symbol	GB_PACKING_CHUNKY		252658						
ANR	253024	Symbol	* params		252658						
ANR	253025	Symbol	GB_RETURN_POINTER		252658						
ANR	253026	Symbol	h		252658						
ANR	253027	Symbol	GB_RASTER_STANDARD		252658						
ANR	253028	Symbol	GB_RETURN_COPY		252658						
ANR	253029	Symbol	bitmap_raster		252658						
ANR	253030	Symbol	GB_ALIGN_ANY		252658						
ANR	253031	Symbol	dev -> width		252658						
ANR	253032	Symbol	w		252658						
ANR	253033	Symbol	x		252658						
ANR	253034	Symbol	y		252658						
ANR	253035	Symbol	& copy_params		252658						
ANR	253036	Symbol	base		252658						
ANR	253037	Function	mem_swap_byte_rect	652:0:23270:24263							
ANR	253038	FunctionDef	"mem_swap_byte_rect (byte * base , uint raster , int x , int w , int h , bool store)"		253037	0					
ANR	253039	CompoundStatement		654:0:23353:24263	253037	0					
ANR	253040	IdentifierDeclStatement	int xbit = x & 31 ;	655:4:23359:23376	253037	0	True				
ANR	253041	IdentifierDecl	xbit = x & 31		253037	0					
ANR	253042	IdentifierDeclType	int		253037	0					
ANR	253043	Identifier	xbit		253037	1					
ANR	253044	AssignmentExpression	xbit = x & 31		253037	2		=			
ANR	253045	Identifier	xbit		253037	0					
ANR	253046	BitAndExpression	x & 31		253037	1		&			
ANR	253047	Identifier	x		253037	0					
ANR	253048	PrimaryExpression	31		253037	1					
ANR	253049	IfStatement	if ( store )		253037	1					
ANR	253050	Condition	store	657:8:23387:23391	253037	0	True				
ANR	253051	Identifier	store		253037	0					
ANR	253052	CompoundStatement		4:15:40:40	253037	1					
ANR	253053	IfStatement	if ( xbit + w > 64 )		253037	0					
ANR	253054	Condition	xbit + w > 64	658:12:23408:23420	253037	0	True				
ANR	253055	RelationalExpression	xbit + w > 64		253037	0		>			
ANR	253056	AdditiveExpression	xbit + w		253037	0		+			
ANR	253057	Identifier	xbit		253037	0					
ANR	253058	Identifier	w		253037	1					
ANR	253059	PrimaryExpression	64		253037	1					
ANR	253060	CompoundStatement		5:27:69:69	253037	1					
ANR	253061	IfStatement	if ( xbit != 0 )		253037	0					
ANR	253062	Condition	xbit != 0	660:16:23546:23554	253037	0	True				
ANR	253063	EqualityExpression	xbit != 0		253037	0		!=			
ANR	253064	Identifier	xbit		253037	0					
ANR	253065	PrimaryExpression	0		253037	1					
ANR	253066	ExpressionStatement	"mem_swap_byte_rect ( base , raster , x , 1 , h , false )"	661:16:23573:23621	253037	1	True				
ANR	253067	CallExpression	"mem_swap_byte_rect ( base , raster , x , 1 , h , false )"		253037	0					
ANR	253068	Callee	mem_swap_byte_rect		253037	0					
ANR	253069	Identifier	mem_swap_byte_rect		253037	0					
ANR	253070	ArgumentList	base		253037	1					
ANR	253071	Argument	base		253037	0					
ANR	253072	Identifier	base		253037	0					
ANR	253073	Argument	raster		253037	1					
ANR	253074	Identifier	raster		253037	0					
ANR	253075	Argument	x		253037	2					
ANR	253076	Identifier	x		253037	0					
ANR	253077	Argument	1		253037	3					
ANR	253078	PrimaryExpression	1		253037	0					
ANR	253079	Argument	h		253037	4					
ANR	253080	Identifier	h		253037	0					
ANR	253081	Argument	false		253037	5					
ANR	253082	Identifier	false		253037	0					
ANR	253083	ExpressionStatement	x += w - 1	662:12:23635:23645	253037	1	True				
ANR	253084	AssignmentExpression	x += w - 1		253037	0		+=			
ANR	253085	Identifier	x		253037	0					
ANR	253086	AdditiveExpression	w - 1		253037	1		-			
ANR	253087	Identifier	w		253037	0					
ANR	253088	PrimaryExpression	1		253037	1					
ANR	253089	ExpressionStatement	xbit = x & 31	663:12:23659:23672	253037	2	True				
ANR	253090	AssignmentExpression	xbit = x & 31		253037	0		=			
ANR	253091	Identifier	xbit		253037	0					
ANR	253092	BitAndExpression	x & 31		253037	1		&			
ANR	253093	Identifier	x		253037	0					
ANR	253094	PrimaryExpression	31		253037	1					
ANR	253095	IfStatement	if ( xbit == 31 )		253037	3					
ANR	253096	Condition	xbit == 31	664:16:23690:23699	253037	0	True				
ANR	253097	EqualityExpression	xbit == 31		253037	0		==			
ANR	253098	Identifier	xbit		253037	0					
ANR	253099	PrimaryExpression	31		253037	1					
ANR	253100	ReturnStatement	return ;	665:16:23718:23724	253037	1	True				
ANR	253101	ExpressionStatement	w = 1	666:12:23738:23743	253037	4	True				
ANR	253102	AssignmentExpression	w = 1		253037	0		=			
ANR	253103	Identifier	w		253037	0					
ANR	253104	PrimaryExpression	1		253037	1					
ANR	253105	CompoundStatement		20:8:564:570	253037	2					
ANR	253106	IdentifierDeclStatement	byte * row = base + ( ( x >> 5 ) << 2 ) ;	671:8:23835:23869	253037	0	True				
ANR	253107	IdentifierDecl	* row = base + ( ( x >> 5 ) << 2 )		253037	0					
ANR	253108	IdentifierDeclType	byte *		253037	0					
ANR	253109	Identifier	row		253037	1					
ANR	253110	AssignmentExpression	* row = base + ( ( x >> 5 ) << 2 )		253037	2		=			
ANR	253111	Identifier	row		253037	0					
ANR	253112	AdditiveExpression	base + ( ( x >> 5 ) << 2 )		253037	1		+			
ANR	253113	Identifier	base		253037	0					
ANR	253114	ShiftExpression	( x >> 5 ) << 2		253037	1		<<			
ANR	253115	ShiftExpression	x >> 5		253037	0		>>			
ANR	253116	Identifier	x		253037	0					
ANR	253117	PrimaryExpression	5		253037	1					
ANR	253118	PrimaryExpression	2		253037	1					
ANR	253119	IdentifierDeclStatement	int nw = ( xbit + w + 31 ) >> 5 ;	672:8:23879:23908	253037	1	True				
ANR	253120	IdentifierDecl	nw = ( xbit + w + 31 ) >> 5		253037	0					
ANR	253121	IdentifierDeclType	int		253037	0					
ANR	253122	Identifier	nw		253037	1					
ANR	253123	AssignmentExpression	nw = ( xbit + w + 31 ) >> 5		253037	2		=			
ANR	253124	Identifier	nw		253037	0					
ANR	253125	ShiftExpression	( xbit + w + 31 ) >> 5		253037	1		>>			
ANR	253126	AdditiveExpression	xbit + w + 31		253037	0		+			
ANR	253127	Identifier	xbit		253037	0					
ANR	253128	AdditiveExpression	w + 31		253037	1		+			
ANR	253129	Identifier	w		253037	0					
ANR	253130	PrimaryExpression	31		253037	1					
ANR	253131	PrimaryExpression	5		253037	1					
ANR	253132	IdentifierDeclStatement	int ny ;	673:8:23918:23924	253037	2	True				
ANR	253133	IdentifierDecl	ny		253037	0					
ANR	253134	IdentifierDeclType	int		253037	0					
ANR	253135	Identifier	ny		253037	1					
ANR	253136	ForStatement	"for ( ny = h ; ny > 0 ; row += raster , -- ny )"		253037	3					
ANR	253137	ForInit	ny = h ;	675:13:23940:23946	253037	0	True				
ANR	253138	AssignmentExpression	ny = h		253037	0		=			
ANR	253139	Identifier	ny		253037	0					
ANR	253140	Identifier	h		253037	1					
ANR	253141	Condition	ny > 0	675:21:23948:23953	253037	1	True				
ANR	253142	RelationalExpression	ny > 0		253037	0		>			
ANR	253143	Identifier	ny		253037	0					
ANR	253144	PrimaryExpression	0		253037	1					
ANR	253145	Expression	"row += raster , -- ny"	675:29:23956:23974	253037	2	True				
ANR	253146	AssignmentExpression	row += raster		253037	0		+=			
ANR	253147	Identifier	row		253037	0					
ANR	253148	Identifier	raster		253037	1					
ANR	253149	UnaryExpression	-- ny		253037	1					
ANR	253150	IncDec	--		253037	0					
ANR	253151	Identifier	ny		253037	1					
ANR	253152	CompoundStatement		24:12:662:689	253037	3					
ANR	253153	IdentifierDeclStatement	int nx = nw ;	676:12:23991:24002	253037	0	True				
ANR	253154	IdentifierDecl	nx = nw		253037	0					
ANR	253155	IdentifierDeclType	int		253037	0					
ANR	253156	Identifier	nx		253037	1					
ANR	253157	AssignmentExpression	nx = nw		253037	2		=			
ANR	253158	Identifier	nw		253037	0					
ANR	253159	Identifier	nw		253037	1					
ANR	253160	IdentifierDeclStatement	bits32 * pw = ( bits32 * ) row ;	677:12:24016:24043	253037	1	True				
ANR	253161	IdentifierDecl	* pw = ( bits32 * ) row		253037	0					
ANR	253162	IdentifierDeclType	bits32 *		253037	0					
ANR	253163	Identifier	pw		253037	1					
ANR	253164	AssignmentExpression	* pw = ( bits32 * ) row		253037	2		=			
ANR	253165	Identifier	pw		253037	0					
ANR	253166	CastExpression	( bits32 * ) row		253037	1					
ANR	253167	CastTarget	bits32 *		253037	0					
ANR	253168	Identifier	row		253037	1					
ANR	253169	DoStatement	do		253037	2					
ANR	253170	CompoundStatement		27:16:725:739	253037	0					
ANR	253171	IdentifierDeclStatement	bits32 w = * pw ;	680:16:24079:24093	253037	0	True				
ANR	253172	IdentifierDecl	w = * pw		253037	0					
ANR	253173	IdentifierDeclType	bits32		253037	0					
ANR	253174	Identifier	w		253037	1					
ANR	253175	AssignmentExpression	w = * pw		253037	2		=			
ANR	253176	Identifier	w		253037	0					
ANR	253177	UnaryOperationExpression	* pw		253037	1					
ANR	253178	UnaryOperator	*		253037	0					
ANR	253179	Identifier	pw		253037	1					
ANR	253180	ExpressionStatement	* pw ++ = ( w >> 24 ) + ( ( w >> 8 ) & 0xff00 ) + ( ( w & 0xff00 ) << 8 ) + ( w << 24 )	682:16:24112:24205	253037	1	True				
ANR	253181	AssignmentExpression	* pw ++ = ( w >> 24 ) + ( ( w >> 8 ) & 0xff00 ) + ( ( w & 0xff00 ) << 8 ) + ( w << 24 )		253037	0		=			
ANR	253182	UnaryOperationExpression	* pw ++		253037	0					
ANR	253183	UnaryOperator	*		253037	0					
ANR	253184	PostIncDecOperationExpression	pw ++		253037	1					
ANR	253185	Identifier	pw		253037	0					
ANR	253186	IncDec	++		253037	1					
ANR	253187	AdditiveExpression	( w >> 24 ) + ( ( w >> 8 ) & 0xff00 ) + ( ( w & 0xff00 ) << 8 ) + ( w << 24 )		253037	1		+			
ANR	253188	ShiftExpression	w >> 24		253037	0		>>			
ANR	253189	Identifier	w		253037	0					
ANR	253190	PrimaryExpression	24		253037	1					
ANR	253191	AdditiveExpression	( ( w >> 8 ) & 0xff00 ) + ( ( w & 0xff00 ) << 8 ) + ( w << 24 )		253037	1		+			
ANR	253192	BitAndExpression	( w >> 8 ) & 0xff00		253037	0		&			
ANR	253193	ShiftExpression	w >> 8		253037	0		>>			
ANR	253194	Identifier	w		253037	0					
ANR	253195	PrimaryExpression	8		253037	1					
ANR	253196	PrimaryExpression	0xff00		253037	1					
ANR	253197	AdditiveExpression	( ( w & 0xff00 ) << 8 ) + ( w << 24 )		253037	1		+			
ANR	253198	ShiftExpression	( w & 0xff00 ) << 8		253037	0		<<			
ANR	253199	BitAndExpression	w & 0xff00		253037	0		&			
ANR	253200	Identifier	w		253037	0					
ANR	253201	PrimaryExpression	0xff00		253037	1					
ANR	253202	PrimaryExpression	8		253037	1					
ANR	253203	ShiftExpression	w << 24		253037	1		<<			
ANR	253204	Identifier	w		253037	0					
ANR	253205	PrimaryExpression	24		253037	1					
ANR	253206	Condition	-- nx	685:19:24240:24243	253037	1	True				
ANR	253207	UnaryExpression	-- nx		253037	0					
ANR	253208	IncDec	--		253037	0					
ANR	253209	Identifier	nx		253037	1					
ANR	253210	ReturnType	void		253037	1					
ANR	253211	Identifier	mem_swap_byte_rect		253037	2					
ANR	253212	ParameterList	"byte * base , uint raster , int x , int w , int h , bool store"		253037	3					
ANR	253213	Parameter	byte * base	653:19:23294:23304	253037	0	True				
ANR	253214	ParameterType	byte *		253037	0					
ANR	253215	Identifier	base		253037	1					
ANR	253216	Parameter	uint raster	653:32:23307:23317	253037	1	True				
ANR	253217	ParameterType	uint		253037	0					
ANR	253218	Identifier	raster		253037	1					
ANR	253219	Parameter	int x	653:45:23320:23324	253037	2	True				
ANR	253220	ParameterType	int		253037	0					
ANR	253221	Identifier	x		253037	1					
ANR	253222	Parameter	int w	653:52:23327:23331	253037	3	True				
ANR	253223	ParameterType	int		253037	0					
ANR	253224	Identifier	w		253037	1					
ANR	253225	Parameter	int h	653:59:23334:23338	253037	4	True				
ANR	253226	ParameterType	int		253037	0					
ANR	253227	Identifier	h		253037	1					
ANR	253228	Parameter	bool store	653:66:23341:23350	253037	5	True				
ANR	253229	ParameterType	bool		253037	0					
ANR	253230	Identifier	store		253037	1					
ANR	253231	CFGEntryNode	ENTRY		253037		True				
ANR	253232	CFGExitNode	EXIT		253037		True				
ANR	253233	Symbol	* pw ++		253037						
ANR	253234	Symbol	pw		253037						
ANR	253235	Symbol	raster		253037						
ANR	253236	Symbol	h		253037						
ANR	253237	Symbol	false		253037						
ANR	253238	Symbol	nw		253037						
ANR	253239	Symbol	nx		253037						
ANR	253240	Symbol	store		253037						
ANR	253241	Symbol	ny		253037						
ANR	253242	Symbol	xbit		253037						
ANR	253243	Symbol	* pw		253037						
ANR	253244	Symbol	w		253037						
ANR	253245	Symbol	x		253037						
ANR	253246	Symbol	row		253037						
ANR	253247	Symbol	base		253037						
ANR	253248	Function	mem_word_get_bits_rectangle	691:0:24344:25471							
ANR	253249	FunctionDef	"mem_word_get_bits_rectangle (gx_device * dev , const gs_int_rect * prect , gs_get_bits_params_t * params , gs_int_rect * * unread)"		253248	0					
ANR	253250	CompoundStatement		694:0:24497:25471	253248	0					
ANR	253251	Statement	gx_device_memory	695:4:24503:24518	253248	0	True				
ANR	253252	Statement	*	695:21:24520:24520	253248	1	True				
ANR	253253	Statement	const	695:23:24522:24526	253248	2	True				
ANR	253254	ExpressionStatement	mdev = ( gx_device_memory * ) dev	695:29:24528:24558	253248	3	True				
ANR	253255	AssignmentExpression	mdev = ( gx_device_memory * ) dev		253248	0		=			
ANR	253256	Identifier	mdev		253248	0					
ANR	253257	CastExpression	( gx_device_memory * ) dev		253248	1					
ANR	253258	CastTarget	gx_device_memory *		253248	0					
ANR	253259	Identifier	dev		253248	1					
ANR	253260	IdentifierDeclStatement	byte * src ;	696:4:24564:24573	253248	4	True				
ANR	253261	IdentifierDecl	* src		253248	0					
ANR	253262	IdentifierDeclType	byte *		253248	0					
ANR	253263	Identifier	src		253248	1					
ANR	253264	IdentifierDeclStatement	"uint dev_raster = gx_device_raster ( dev , 1 ) ;"	697:4:24579:24621	253248	5	True				
ANR	253265	IdentifierDecl	"dev_raster = gx_device_raster ( dev , 1 )"		253248	0					
ANR	253266	IdentifierDeclType	uint		253248	0					
ANR	253267	Identifier	dev_raster		253248	1					
ANR	253268	AssignmentExpression	"dev_raster = gx_device_raster ( dev , 1 )"		253248	2		=			
ANR	253269	Identifier	dev_raster		253248	0					
ANR	253270	CallExpression	"gx_device_raster ( dev , 1 )"		253248	1					
ANR	253271	Callee	gx_device_raster		253248	0					
ANR	253272	Identifier	gx_device_raster		253248	0					
ANR	253273	ArgumentList	dev		253248	1					
ANR	253274	Argument	dev		253248	0					
ANR	253275	Identifier	dev		253248	0					
ANR	253276	Argument	1		253248	1					
ANR	253277	PrimaryExpression	1		253248	0					
ANR	253278	IdentifierDeclStatement	int x = prect -> p . x ;	698:4:24627:24645	253248	6	True				
ANR	253279	IdentifierDecl	x = prect -> p . x		253248	0					
ANR	253280	IdentifierDeclType	int		253248	0					
ANR	253281	Identifier	x		253248	1					
ANR	253282	AssignmentExpression	x = prect -> p . x		253248	2		=			
ANR	253283	Identifier	x		253248	0					
ANR	253284	MemberAccess	prect -> p . x		253248	1					
ANR	253285	PtrMemberAccess	prect -> p		253248	0					
ANR	253286	Identifier	prect		253248	0					
ANR	253287	Identifier	p		253248	1					
ANR	253288	Identifier	x		253248	1					
ANR	253289	IdentifierDeclStatement	int w = prect -> q . x - x ;	699:4:24651:24673	253248	7	True				
ANR	253290	IdentifierDecl	w = prect -> q . x - x		253248	0					
ANR	253291	IdentifierDeclType	int		253248	0					
ANR	253292	Identifier	w		253248	1					
ANR	253293	AssignmentExpression	w = prect -> q . x - x		253248	2		=			
ANR	253294	Identifier	w		253248	0					
ANR	253295	AdditiveExpression	prect -> q . x - x		253248	1		-			
ANR	253296	MemberAccess	prect -> q . x		253248	0					
ANR	253297	PtrMemberAccess	prect -> q		253248	0					
ANR	253298	Identifier	prect		253248	0					
ANR	253299	Identifier	q		253248	1					
ANR	253300	Identifier	x		253248	1					
ANR	253301	Identifier	x		253248	1					
ANR	253302	IdentifierDeclStatement	int y = prect -> p . y ;	700:4:24679:24697	253248	8	True				
ANR	253303	IdentifierDecl	y = prect -> p . y		253248	0					
ANR	253304	IdentifierDeclType	int		253248	0					
ANR	253305	Identifier	y		253248	1					
ANR	253306	AssignmentExpression	y = prect -> p . y		253248	2		=			
ANR	253307	Identifier	y		253248	0					
ANR	253308	MemberAccess	prect -> p . y		253248	1					
ANR	253309	PtrMemberAccess	prect -> p		253248	0					
ANR	253310	Identifier	prect		253248	0					
ANR	253311	Identifier	p		253248	1					
ANR	253312	Identifier	y		253248	1					
ANR	253313	IdentifierDeclStatement	int h = prect -> q . y - y ;	701:4:24703:24725	253248	9	True				
ANR	253314	IdentifierDecl	h = prect -> q . y - y		253248	0					
ANR	253315	IdentifierDeclType	int		253248	0					
ANR	253316	Identifier	h		253248	1					
ANR	253317	AssignmentExpression	h = prect -> q . y - y		253248	2		=			
ANR	253318	Identifier	h		253248	0					
ANR	253319	AdditiveExpression	prect -> q . y - y		253248	1		-			
ANR	253320	MemberAccess	prect -> q . y		253248	0					
ANR	253321	PtrMemberAccess	prect -> q		253248	0					
ANR	253322	Identifier	prect		253248	0					
ANR	253323	Identifier	q		253248	1					
ANR	253324	Identifier	y		253248	1					
ANR	253325	Identifier	y		253248	1					
ANR	253326	IdentifierDeclStatement	"int bit_x , bit_w ;"	702:4:24731:24747	253248	10	True				
ANR	253327	IdentifierDecl	bit_x		253248	0					
ANR	253328	IdentifierDeclType	int		253248	0					
ANR	253329	Identifier	bit_x		253248	1					
ANR	253330	IdentifierDecl	bit_w		253248	1					
ANR	253331	IdentifierDeclType	int		253248	0					
ANR	253332	Identifier	bit_w		253248	1					
ANR	253333	IdentifierDeclStatement	int code ;	703:4:24753:24761	253248	11	True				
ANR	253334	IdentifierDecl	code		253248	0					
ANR	253335	IdentifierDeclType	int		253248	0					
ANR	253336	Identifier	code		253248	1					
ANR	253337	ExpressionStatement	"fit_fill_xywh ( dev , x , y , w , h )"	705:4:24768:24798	253248	12	True				
ANR	253338	CallExpression	"fit_fill_xywh ( dev , x , y , w , h )"		253248	0					
ANR	253339	Callee	fit_fill_xywh		253248	0					
ANR	253340	Identifier	fit_fill_xywh		253248	0					
ANR	253341	ArgumentList	dev		253248	1					
ANR	253342	Argument	dev		253248	0					
ANR	253343	Identifier	dev		253248	0					
ANR	253344	Argument	x		253248	1					
ANR	253345	Identifier	x		253248	0					
ANR	253346	Argument	y		253248	2					
ANR	253347	Identifier	y		253248	0					
ANR	253348	Argument	w		253248	3					
ANR	253349	Identifier	w		253248	0					
ANR	253350	Argument	h		253248	4					
ANR	253351	Identifier	h		253248	0					
ANR	253352	IfStatement	if ( w <= 0 || h <= 0 )		253248	13					
ANR	253353	Condition	w <= 0 || h <= 0	706:8:24808:24823	253248	0	True				
ANR	253354	OrExpression	w <= 0 || h <= 0		253248	0		||			
ANR	253355	RelationalExpression	w <= 0		253248	0		<=			
ANR	253356	Identifier	w		253248	0					
ANR	253357	PrimaryExpression	0		253248	1					
ANR	253358	RelationalExpression	h <= 0		253248	1		<=			
ANR	253359	Identifier	h		253248	0					
ANR	253360	PrimaryExpression	0		253248	1					
ANR	253361	CompoundStatement		13:26:328:328	253248	1					
ANR	253362	ExpressionStatement	x = y = w = h = 0	712:8:25046:25063	253248	0	True				
ANR	253363	AssignmentExpression	x = y = w = h = 0		253248	0		=			
ANR	253364	Identifier	x		253248	0					
ANR	253365	AssignmentExpression	y = w = h = 0		253248	1		=			
ANR	253366	Identifier	y		253248	0					
ANR	253367	AssignmentExpression	w = h = 0		253248	1		=			
ANR	253368	Identifier	w		253248	0					
ANR	253369	AssignmentExpression	h = 0		253248	1		=			
ANR	253370	Identifier	h		253248	0					
ANR	253371	PrimaryExpression	0		253248	1					
ANR	253372	ExpressionStatement	bit_x = x * dev -> color_info . depth	714:4:25075:25108	253248	14	True				
ANR	253373	AssignmentExpression	bit_x = x * dev -> color_info . depth		253248	0		=			
ANR	253374	Identifier	bit_x		253248	0					
ANR	253375	MultiplicativeExpression	x * dev -> color_info . depth		253248	1		*			
ANR	253376	Identifier	x		253248	0					
ANR	253377	MemberAccess	dev -> color_info . depth		253248	1					
ANR	253378	PtrMemberAccess	dev -> color_info		253248	0					
ANR	253379	Identifier	dev		253248	0					
ANR	253380	Identifier	color_info		253248	1					
ANR	253381	Identifier	depth		253248	1					
ANR	253382	ExpressionStatement	bit_w = w * dev -> color_info . depth	715:4:25114:25147	253248	15	True				
ANR	253383	AssignmentExpression	bit_w = w * dev -> color_info . depth		253248	0		=			
ANR	253384	Identifier	bit_w		253248	0					
ANR	253385	MultiplicativeExpression	w * dev -> color_info . depth		253248	1		*			
ANR	253386	Identifier	w		253248	0					
ANR	253387	MemberAccess	dev -> color_info . depth		253248	1					
ANR	253388	PtrMemberAccess	dev -> color_info		253248	0					
ANR	253389	Identifier	dev		253248	0					
ANR	253390	Identifier	color_info		253248	1					
ANR	253391	Identifier	depth		253248	1					
ANR	253392	IfStatement	if ( mdev -> line_ptrs == 0x00 )		253248	16					
ANR	253393	Condition	mdev -> line_ptrs == 0x00	717:7:25157:25179	253248	0	True				
ANR	253394	EqualityExpression	mdev -> line_ptrs == 0x00		253248	0		==			
ANR	253395	PtrMemberAccess	mdev -> line_ptrs		253248	0					
ANR	253396	Identifier	mdev		253248	0					
ANR	253397	Identifier	line_ptrs		253248	1					
ANR	253398	PrimaryExpression	0x00		253248	1					
ANR	253399	ExpressionStatement	return_error ( gs_error_rangecheck )	718:8:25190:25223	253248	1	True				
ANR	253400	CallExpression	return_error ( gs_error_rangecheck )		253248	0					
ANR	253401	Callee	return_error		253248	0					
ANR	253402	Identifier	return_error		253248	0					
ANR	253403	ArgumentList	gs_error_rangecheck		253248	1					
ANR	253404	Argument	gs_error_rangecheck		253248	0					
ANR	253405	Identifier	gs_error_rangecheck		253248	0					
ANR	253406	ExpressionStatement	"src = scan_line_base ( mdev , y )"	720:4:25230:25259	253248	17	True				
ANR	253407	AssignmentExpression	"src = scan_line_base ( mdev , y )"		253248	0		=			
ANR	253408	Identifier	src		253248	0					
ANR	253409	CallExpression	"scan_line_base ( mdev , y )"		253248	1					
ANR	253410	Callee	scan_line_base		253248	0					
ANR	253411	Identifier	scan_line_base		253248	0					
ANR	253412	ArgumentList	mdev		253248	1					
ANR	253413	Argument	mdev		253248	0					
ANR	253414	Identifier	mdev		253248	0					
ANR	253415	Argument	y		253248	1					
ANR	253416	Identifier	y		253248	0					
ANR	253417	ExpressionStatement	"mem_swap_byte_rect ( src , dev_raster , bit_x , bit_w , h , false )"	721:4:25265:25324	253248	18	True				
ANR	253418	CallExpression	"mem_swap_byte_rect ( src , dev_raster , bit_x , bit_w , h , false )"		253248	0					
ANR	253419	Callee	mem_swap_byte_rect		253248	0					
ANR	253420	Identifier	mem_swap_byte_rect		253248	0					
ANR	253421	ArgumentList	src		253248	1					
ANR	253422	Argument	src		253248	0					
ANR	253423	Identifier	src		253248	0					
ANR	253424	Argument	dev_raster		253248	1					
ANR	253425	Identifier	dev_raster		253248	0					
ANR	253426	Argument	bit_x		253248	2					
ANR	253427	Identifier	bit_x		253248	0					
ANR	253428	Argument	bit_w		253248	3					
ANR	253429	Identifier	bit_w		253248	0					
ANR	253430	Argument	h		253248	4					
ANR	253431	Identifier	h		253248	0					
ANR	253432	Argument	false		253248	5					
ANR	253433	Identifier	false		253248	0					
ANR	253434	ExpressionStatement	"code = mem_get_bits_rectangle ( dev , prect , params , unread )"	722:4:25330:25387	253248	19	True				
ANR	253435	AssignmentExpression	"code = mem_get_bits_rectangle ( dev , prect , params , unread )"		253248	0		=			
ANR	253436	Identifier	code		253248	0					
ANR	253437	CallExpression	"mem_get_bits_rectangle ( dev , prect , params , unread )"		253248	1					
ANR	253438	Callee	mem_get_bits_rectangle		253248	0					
ANR	253439	Identifier	mem_get_bits_rectangle		253248	0					
ANR	253440	ArgumentList	dev		253248	1					
ANR	253441	Argument	dev		253248	0					
ANR	253442	Identifier	dev		253248	0					
ANR	253443	Argument	prect		253248	1					
ANR	253444	Identifier	prect		253248	0					
ANR	253445	Argument	params		253248	2					
ANR	253446	Identifier	params		253248	0					
ANR	253447	Argument	unread		253248	3					
ANR	253448	Identifier	unread		253248	0					
ANR	253449	ExpressionStatement	"mem_swap_byte_rect ( src , dev_raster , bit_x , bit_w , h , false )"	723:4:25393:25452	253248	20	True				
ANR	253450	CallExpression	"mem_swap_byte_rect ( src , dev_raster , bit_x , bit_w , h , false )"		253248	0					
ANR	253451	Callee	mem_swap_byte_rect		253248	0					
ANR	253452	Identifier	mem_swap_byte_rect		253248	0					
ANR	253453	ArgumentList	src		253248	1					
ANR	253454	Argument	src		253248	0					
ANR	253455	Identifier	src		253248	0					
ANR	253456	Argument	dev_raster		253248	1					
ANR	253457	Identifier	dev_raster		253248	0					
ANR	253458	Argument	bit_x		253248	2					
ANR	253459	Identifier	bit_x		253248	0					
ANR	253460	Argument	bit_w		253248	3					
ANR	253461	Identifier	bit_w		253248	0					
ANR	253462	Argument	h		253248	4					
ANR	253463	Identifier	h		253248	0					
ANR	253464	Argument	false		253248	5					
ANR	253465	Identifier	false		253248	0					
ANR	253466	ReturnStatement	return code ;	724:4:25458:25469	253248	21	True				
ANR	253467	Identifier	code		253248	0					
ANR	253468	ReturnType	int		253248	1					
ANR	253469	Identifier	mem_word_get_bits_rectangle		253248	2					
ANR	253470	ParameterList	"gx_device * dev , const gs_int_rect * prect , gs_get_bits_params_t * params , gs_int_rect * * unread"		253248	3					
ANR	253471	Parameter	gx_device * dev	692:28:24376:24390	253248	0	True				
ANR	253472	ParameterType	gx_device *		253248	0					
ANR	253473	Identifier	dev		253248	1					
ANR	253474	Parameter	const gs_int_rect * prect	692:45:24393:24417	253248	1	True				
ANR	253475	ParameterType	const gs_int_rect *		253248	0					
ANR	253476	Identifier	prect		253248	1					
ANR	253477	Parameter	gs_get_bits_params_t * params	693:23:24443:24471	253248	2	True				
ANR	253478	ParameterType	gs_get_bits_params_t *		253248	0					
ANR	253479	Identifier	params		253248	1					
ANR	253480	Parameter	gs_int_rect * * unread	693:54:24474:24494	253248	3	True				
ANR	253481	ParameterType	gs_int_rect * *		253248	0					
ANR	253482	Identifier	unread		253248	1					
ANR	253483	CFGEntryNode	ENTRY		253248		True				
ANR	253484	CFGExitNode	EXIT		253248		True				
ANR	253485	Symbol	* dev		253248						
ANR	253486	Symbol	gx_device_raster		253248						
ANR	253487	Symbol	prect -> q . y		253248						
ANR	253488	Symbol	prect -> q . x		253248						
ANR	253489	Symbol	code		253248						
ANR	253490	Symbol	gs_error_rangecheck		253248						
ANR	253491	Symbol	unread		253248						
ANR	253492	Symbol	prect -> p		253248						
ANR	253493	Symbol	prect		253248						
ANR	253494	Symbol	prect -> q		253248						
ANR	253495	Symbol	dev -> color_info		253248						
ANR	253496	Symbol	dev -> color_info . depth		253248						
ANR	253497	Symbol	bit_x		253248						
ANR	253498	Symbol	bit_w		253248						
ANR	253499	Symbol	dev		253248						
ANR	253500	Symbol	prect -> p . x		253248						
ANR	253501	Symbol	prect -> p . y		253248						
ANR	253502	Symbol	* prect		253248						
ANR	253503	Symbol	* mdev		253248						
ANR	253504	Symbol	src		253248						
ANR	253505	Symbol	dev_raster		253248						
ANR	253506	Symbol	h		253248						
ANR	253507	Symbol	false		253248						
ANR	253508	Symbol	params		253248						
ANR	253509	Symbol	mdev -> line_ptrs		253248						
ANR	253510	Symbol	scan_line_base		253248						
ANR	253511	Symbol	w		253248						
ANR	253512	Symbol	mem_get_bits_rectangle		253248						
ANR	253513	Symbol	x		253248						
ANR	253514	Symbol	y		253248						
ANR	253515	Symbol	mdev		253248						
ANR	253516	Function	mem_mapped_map_rgb_color	732:0:25660:27743							
ANR	253517	FunctionDef	"mem_mapped_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		253516	0					
ANR	253518	CompoundStatement		734:0:25744:27743	253516	0					
ANR	253519	Statement	gx_device_memory	735:4:25750:25765	253516	0	True				
ANR	253520	Statement	*	735:21:25767:25767	253516	1	True				
ANR	253521	Statement	const	735:23:25769:25773	253516	2	True				
ANR	253522	ExpressionStatement	mdev = ( gx_device_memory * ) dev	735:29:25775:25805	253516	3	True				
ANR	253523	AssignmentExpression	mdev = ( gx_device_memory * ) dev		253516	0		=			
ANR	253524	Identifier	mdev		253516	0					
ANR	253525	CastExpression	( gx_device_memory * ) dev		253516	1					
ANR	253526	CastTarget	gx_device_memory *		253516	0					
ANR	253527	Identifier	dev		253516	1					
ANR	253528	IdentifierDeclStatement	byte br = gx_color_value_to_byte ( cv [ 0 ] ) ;	736:4:25811:25850	253516	4	True				
ANR	253529	IdentifierDecl	br = gx_color_value_to_byte ( cv [ 0 ] )		253516	0					
ANR	253530	IdentifierDeclType	byte		253516	0					
ANR	253531	Identifier	br		253516	1					
ANR	253532	AssignmentExpression	br = gx_color_value_to_byte ( cv [ 0 ] )		253516	2		=			
ANR	253533	Identifier	br		253516	0					
ANR	253534	CallExpression	gx_color_value_to_byte ( cv [ 0 ] )		253516	1					
ANR	253535	Callee	gx_color_value_to_byte		253516	0					
ANR	253536	Identifier	gx_color_value_to_byte		253516	0					
ANR	253537	ArgumentList	cv [ 0 ]		253516	1					
ANR	253538	Argument	cv [ 0 ]		253516	0					
ANR	253539	ArrayIndexing	cv [ 0 ]		253516	0					
ANR	253540	Identifier	cv		253516	0					
ANR	253541	PrimaryExpression	0		253516	1					
ANR	253542	Statement	register	738:4:25857:25864	253516	5	True				
ANR	253543	IdentifierDeclStatement	const byte * pptr = mdev -> palette . data ;	738:13:25866:25903	253516	6	True				
ANR	253544	IdentifierDecl	* pptr = mdev -> palette . data		253516	0					
ANR	253545	IdentifierDeclType	const byte *		253516	0					
ANR	253546	Identifier	pptr		253516	1					
ANR	253547	AssignmentExpression	* pptr = mdev -> palette . data		253516	2		=			
ANR	253548	Identifier	pptr		253516	0					
ANR	253549	MemberAccess	mdev -> palette . data		253516	1					
ANR	253550	PtrMemberAccess	mdev -> palette		253516	0					
ANR	253551	Identifier	mdev		253516	0					
ANR	253552	Identifier	palette		253516	1					
ANR	253553	Identifier	data		253516	1					
ANR	253554	IdentifierDeclStatement	int cnt = mdev -> palette . size ;	739:4:25909:25937	253516	7	True				
ANR	253555	IdentifierDecl	cnt = mdev -> palette . size		253516	0					
ANR	253556	IdentifierDeclType	int		253516	0					
ANR	253557	Identifier	cnt		253516	1					
ANR	253558	AssignmentExpression	cnt = mdev -> palette . size		253516	2		=			
ANR	253559	Identifier	cnt		253516	0					
ANR	253560	MemberAccess	mdev -> palette . size		253516	1					
ANR	253561	PtrMemberAccess	mdev -> palette		253516	0					
ANR	253562	Identifier	mdev		253516	0					
ANR	253563	Identifier	palette		253516	1					
ANR	253564	Identifier	size		253516	1					
ANR	253565	IdentifierDeclStatement	const byte * which = 0 ;	740:4:25943:25964	253516	8	True				
ANR	253566	IdentifierDecl	* which = 0		253516	0					
ANR	253567	IdentifierDeclType	const byte *		253516	0					
ANR	253568	Identifier	which		253516	1					
ANR	253569	AssignmentExpression	* which = 0		253516	2		=			
ANR	253570	Identifier	which		253516	0					
ANR	253571	PrimaryExpression	0		253516	1					
ANR	253572	IdentifierDeclStatement	int best = 256 * 3 ;	741:4:26007:26025	253516	9	True				
ANR	253573	IdentifierDecl	best = 256 * 3		253516	0					
ANR	253574	IdentifierDeclType	int		253516	0					
ANR	253575	Identifier	best		253516	1					
ANR	253576	AssignmentExpression	best = 256 * 3		253516	2		=			
ANR	253577	Identifier	best		253516	0					
ANR	253578	MultiplicativeExpression	256 * 3		253516	1		*			
ANR	253579	PrimaryExpression	256		253516	0					
ANR	253580	PrimaryExpression	3		253516	1					
ANR	253581	IfStatement	if ( mdev -> color_info . num_components != 1 )		253516	10					
ANR	253582	Condition	mdev -> color_info . num_components != 1	743:8:26036:26071	253516	0	True				
ANR	253583	EqualityExpression	mdev -> color_info . num_components != 1		253516	0		!=			
ANR	253584	MemberAccess	mdev -> color_info . num_components		253516	0					
ANR	253585	PtrMemberAccess	mdev -> color_info		253516	0					
ANR	253586	Identifier	mdev		253516	0					
ANR	253587	Identifier	color_info		253516	1					
ANR	253588	Identifier	num_components		253516	1					
ANR	253589	PrimaryExpression	1		253516	1					
ANR	253590	CompoundStatement		17:8:704:743	253516	1					
ANR	253591	IdentifierDeclStatement	byte bg = gx_color_value_to_byte ( cv [ 1 ] ) ;	749:8:26400:26439	253516	0	True				
ANR	253592	IdentifierDecl	bg = gx_color_value_to_byte ( cv [ 1 ] )		253516	0					
ANR	253593	IdentifierDeclType	byte		253516	0					
ANR	253594	Identifier	bg		253516	1					
ANR	253595	AssignmentExpression	bg = gx_color_value_to_byte ( cv [ 1 ] )		253516	2		=			
ANR	253596	Identifier	bg		253516	0					
ANR	253597	CallExpression	gx_color_value_to_byte ( cv [ 1 ] )		253516	1					
ANR	253598	Callee	gx_color_value_to_byte		253516	0					
ANR	253599	Identifier	gx_color_value_to_byte		253516	0					
ANR	253600	ArgumentList	cv [ 1 ]		253516	1					
ANR	253601	Argument	cv [ 1 ]		253516	0					
ANR	253602	ArrayIndexing	cv [ 1 ]		253516	0					
ANR	253603	Identifier	cv		253516	0					
ANR	253604	PrimaryExpression	1		253516	1					
ANR	253605	IdentifierDeclStatement	byte bb = gx_color_value_to_byte ( cv [ 2 ] ) ;	750:8:26449:26488	253516	1	True				
ANR	253606	IdentifierDecl	bb = gx_color_value_to_byte ( cv [ 2 ] )		253516	0					
ANR	253607	IdentifierDeclType	byte		253516	0					
ANR	253608	Identifier	bb		253516	1					
ANR	253609	AssignmentExpression	bb = gx_color_value_to_byte ( cv [ 2 ] )		253516	2		=			
ANR	253610	Identifier	bb		253516	0					
ANR	253611	CallExpression	gx_color_value_to_byte ( cv [ 2 ] )		253516	1					
ANR	253612	Callee	gx_color_value_to_byte		253516	0					
ANR	253613	Identifier	gx_color_value_to_byte		253516	0					
ANR	253614	ArgumentList	cv [ 2 ]		253516	1					
ANR	253615	Argument	cv [ 2 ]		253516	0					
ANR	253616	ArrayIndexing	cv [ 2 ]		253516	0					
ANR	253617	Identifier	cv		253516	0					
ANR	253618	PrimaryExpression	2		253516	1					
ANR	253619	WhileStatement	while ( ( cnt -= 3 ) >= 0 )		253516	2					
ANR	253620	Condition	( cnt -= 3 ) >= 0	752:15:26506:26520	253516	0	True				
ANR	253621	RelationalExpression	( cnt -= 3 ) >= 0		253516	0		>=			
ANR	253622	AssignmentExpression	cnt -= 3		253516	0		-=			
ANR	253623	Identifier	cnt		253516	0					
ANR	253624	PrimaryExpression	3		253516	1					
ANR	253625	PrimaryExpression	0		253516	1					
ANR	253626	CompoundStatement		20:21:801:822	253516	1					
ANR	253627	Statement	register	753:12:26537:26544	253516	0	True				
ANR	253628	IdentifierDeclStatement	int diff = * pptr - br ;	753:21:26546:26567	253516	1	True				
ANR	253629	IdentifierDecl	diff = * pptr - br		253516	0					
ANR	253630	IdentifierDeclType	int		253516	0					
ANR	253631	Identifier	diff		253516	1					
ANR	253632	AssignmentExpression	diff = * pptr - br		253516	2		=			
ANR	253633	Identifier	diff		253516	0					
ANR	253634	AdditiveExpression	* pptr - br		253516	1		-			
ANR	253635	UnaryOperationExpression	* pptr		253516	0					
ANR	253636	UnaryOperator	*		253516	0					
ANR	253637	Identifier	pptr		253516	1					
ANR	253638	Identifier	br		253516	1					
ANR	253639	IfStatement	if ( diff < 0 )		253516	2					
ANR	253640	Condition	diff < 0	755:16:26586:26593	253516	0	True				
ANR	253641	RelationalExpression	diff < 0		253516	0		<			
ANR	253642	Identifier	diff		253516	0					
ANR	253643	PrimaryExpression	0		253516	1					
ANR	253644	ExpressionStatement	diff = - diff	756:16:26612:26624	253516	1	True				
ANR	253645	AssignmentExpression	diff = - diff		253516	0		=			
ANR	253646	Identifier	diff		253516	0					
ANR	253647	UnaryOperationExpression	- diff		253516	1					
ANR	253648	UnaryOperator	-		253516	0					
ANR	253649	Identifier	diff		253516	1					
ANR	253650	IfStatement	if ( diff < best )		253516	3					
ANR	253651	Condition	diff < best	757:16:26642:26652	253516	0	True				
ANR	253652	RelationalExpression	diff < best		253516	0		<			
ANR	253653	Identifier	diff		253516	0					
ANR	253654	Identifier	best		253516	1					
ANR	253655	CompoundStatement		25:20:954:975	253516	1					
ANR	253656	IdentifierDeclStatement	int dg = pptr [ 1 ] - bg ;	758:20:26699:26720	253516	0	True				
ANR	253657	IdentifierDecl	dg = pptr [ 1 ] - bg		253516	0					
ANR	253658	IdentifierDeclType	int		253516	0					
ANR	253659	Identifier	dg		253516	1					
ANR	253660	AssignmentExpression	dg = pptr [ 1 ] - bg		253516	2		=			
ANR	253661	Identifier	dg		253516	0					
ANR	253662	AdditiveExpression	pptr [ 1 ] - bg		253516	1		-			
ANR	253663	ArrayIndexing	pptr [ 1 ]		253516	0					
ANR	253664	Identifier	pptr		253516	0					
ANR	253665	PrimaryExpression	1		253516	1					
ANR	253666	Identifier	bg		253516	1					
ANR	253667	IfStatement	if ( dg < 0 )		253516	1					
ANR	253668	Condition	dg < 0	760:20:26743:26748	253516	0	True				
ANR	253669	RelationalExpression	dg < 0		253516	0		<			
ANR	253670	Identifier	dg		253516	0					
ANR	253671	PrimaryExpression	0		253516	1					
ANR	253672	ExpressionStatement	dg = - dg	761:20:26771:26779	253516	1	True				
ANR	253673	AssignmentExpression	dg = - dg		253516	0		=			
ANR	253674	Identifier	dg		253516	0					
ANR	253675	UnaryOperationExpression	- dg		253516	1					
ANR	253676	UnaryOperator	-		253516	0					
ANR	253677	Identifier	dg		253516	1					
ANR	253678	IfStatement	if ( ( diff += dg ) < best )		253516	2					
ANR	253679	Condition	( diff += dg ) < best	762:20:26801:26819	253516	0	True				
ANR	253680	RelationalExpression	( diff += dg ) < best		253516	0		<			
ANR	253681	AssignmentExpression	diff += dg		253516	0		+=			
ANR	253682	Identifier	diff		253516	0					
ANR	253683	Identifier	dg		253516	1					
ANR	253684	Identifier	best		253516	1					
ANR	253685	CompoundStatement		30:20:1121:1142	253516	1					
ANR	253686	IdentifierDeclStatement	int db = pptr [ 2 ] - bb ;	763:20:26866:26887	253516	0	True				
ANR	253687	IdentifierDecl	db = pptr [ 2 ] - bb		253516	0					
ANR	253688	IdentifierDeclType	int		253516	0					
ANR	253689	Identifier	db		253516	1					
ANR	253690	AssignmentExpression	db = pptr [ 2 ] - bb		253516	2		=			
ANR	253691	Identifier	db		253516	0					
ANR	253692	AdditiveExpression	pptr [ 2 ] - bb		253516	1		-			
ANR	253693	ArrayIndexing	pptr [ 2 ]		253516	0					
ANR	253694	Identifier	pptr		253516	0					
ANR	253695	PrimaryExpression	2		253516	1					
ANR	253696	Identifier	bb		253516	1					
ANR	253697	IfStatement	if ( db < 0 )		253516	1					
ANR	253698	Condition	db < 0	765:24:26914:26919	253516	0	True				
ANR	253699	RelationalExpression	db < 0		253516	0		<			
ANR	253700	Identifier	db		253516	0					
ANR	253701	PrimaryExpression	0		253516	1					
ANR	253702	ExpressionStatement	db = - db	766:24:26946:26954	253516	1	True				
ANR	253703	AssignmentExpression	db = - db		253516	0		=			
ANR	253704	Identifier	db		253516	0					
ANR	253705	UnaryOperationExpression	- db		253516	1					
ANR	253706	UnaryOperator	-		253516	0					
ANR	253707	Identifier	db		253516	1					
ANR	253708	IfStatement	if ( ( diff += db ) < best )		253516	2					
ANR	253709	Condition	( diff += db ) < best	767:24:26980:26998	253516	0	True				
ANR	253710	RelationalExpression	( diff += db ) < best		253516	0		<			
ANR	253711	AssignmentExpression	diff += db		253516	0		+=			
ANR	253712	Identifier	diff		253516	0					
ANR	253713	Identifier	db		253516	1					
ANR	253714	Identifier	best		253516	1					
ANR	253715	ExpressionStatement	"which = pptr , best = diff"	768:24:27025:27050	253516	1	True				
ANR	253716	Expression	"which = pptr , best = diff"		253516	0					
ANR	253717	AssignmentExpression	which = pptr		253516	0		=			
ANR	253718	Identifier	which		253516	0					
ANR	253719	Identifier	pptr		253516	1					
ANR	253720	AssignmentExpression	best = diff		253516	1		=			
ANR	253721	Identifier	best		253516	0					
ANR	253722	Identifier	diff		253516	1					
ANR	253723	IfStatement	if ( diff == 0 )		253516	4					
ANR	253724	Condition	diff == 0	771:16:27100:27108	253516	0	True				
ANR	253725	EqualityExpression	diff == 0		253516	0		==			
ANR	253726	Identifier	diff		253516	0					
ANR	253727	PrimaryExpression	0		253516	1					
ANR	253728	BreakStatement	break ;	772:16:27166:27171	253516	1	True				
ANR	253729	ExpressionStatement	pptr += 3	773:12:27185:27194	253516	5	True				
ANR	253730	AssignmentExpression	pptr += 3		253516	0		+=			
ANR	253731	Identifier	pptr		253516	0					
ANR	253732	PrimaryExpression	3		253516	1					
ANR	253733	ElseStatement	else		253516	0					
ANR	253734	CompoundStatement		42:11:1472:1472	253516	0					
ANR	253735	WhileStatement	while ( ( cnt -= 3 ) >= 0 )		253516	0					
ANR	253736	Condition	( cnt -= 3 ) >= 0	778:15:27360:27374	253516	0	True				
ANR	253737	RelationalExpression	( cnt -= 3 ) >= 0		253516	0		>=			
ANR	253738	AssignmentExpression	cnt -= 3		253516	0		-=			
ANR	253739	Identifier	cnt		253516	0					
ANR	253740	PrimaryExpression	3		253516	1					
ANR	253741	PrimaryExpression	0		253516	1					
ANR	253742	CompoundStatement		46:21:1655:1676	253516	1					
ANR	253743	Statement	register	779:12:27391:27398	253516	0	True				
ANR	253744	IdentifierDeclStatement	int diff = * pptr - br ;	779:21:27400:27421	253516	1	True				
ANR	253745	IdentifierDecl	diff = * pptr - br		253516	0					
ANR	253746	IdentifierDeclType	int		253516	0					
ANR	253747	Identifier	diff		253516	1					
ANR	253748	AssignmentExpression	diff = * pptr - br		253516	2		=			
ANR	253749	Identifier	diff		253516	0					
ANR	253750	AdditiveExpression	* pptr - br		253516	1		-			
ANR	253751	UnaryOperationExpression	* pptr		253516	0					
ANR	253752	UnaryOperator	*		253516	0					
ANR	253753	Identifier	pptr		253516	1					
ANR	253754	Identifier	br		253516	1					
ANR	253755	IfStatement	if ( diff < 0 )		253516	2					
ANR	253756	Condition	diff < 0	781:16:27440:27447	253516	0	True				
ANR	253757	RelationalExpression	diff < 0		253516	0		<			
ANR	253758	Identifier	diff		253516	0					
ANR	253759	PrimaryExpression	0		253516	1					
ANR	253760	ExpressionStatement	diff = - diff	782:16:27466:27478	253516	1	True				
ANR	253761	AssignmentExpression	diff = - diff		253516	0		=			
ANR	253762	Identifier	diff		253516	0					
ANR	253763	UnaryOperationExpression	- diff		253516	1					
ANR	253764	UnaryOperator	-		253516	0					
ANR	253765	Identifier	diff		253516	1					
ANR	253766	IfStatement	if ( diff < best )		253516	3					
ANR	253767	Condition	diff < best	783:16:27496:27506	253516	0	True				
ANR	253768	RelationalExpression	diff < best		253516	0		<			
ANR	253769	Identifier	diff		253516	0					
ANR	253770	Identifier	best		253516	1					
ANR	253771	CompoundStatement		50:29:1764:1764	253516	1					
ANR	253772	ExpressionStatement	"which = pptr , best = diff"	784:16:27549:27574	253516	0	True				
ANR	253773	Expression	"which = pptr , best = diff"		253516	0					
ANR	253774	AssignmentExpression	which = pptr		253516	0		=			
ANR	253775	Identifier	which		253516	0					
ANR	253776	Identifier	pptr		253516	1					
ANR	253777	AssignmentExpression	best = diff		253516	1		=			
ANR	253778	Identifier	best		253516	0					
ANR	253779	Identifier	diff		253516	1					
ANR	253780	IfStatement	if ( diff == 0 )		253516	4					
ANR	253781	Condition	diff == 0	786:16:27606:27614	253516	0	True				
ANR	253782	EqualityExpression	diff == 0		253516	0		==			
ANR	253783	Identifier	diff		253516	0					
ANR	253784	PrimaryExpression	0		253516	1					
ANR	253785	BreakStatement	break ;	787:16:27633:27638	253516	1	True				
ANR	253786	ExpressionStatement	pptr += 3	788:12:27652:27661	253516	5	True				
ANR	253787	AssignmentExpression	pptr += 3		253516	0		+=			
ANR	253788	Identifier	pptr		253516	0					
ANR	253789	PrimaryExpression	3		253516	1					
ANR	253790	ReturnStatement	return ( gx_color_index ) ( ( which - mdev -> palette . data ) / 3 ) ;	791:4:27683:27741	253516	11	True				
ANR	253791	CastExpression	( gx_color_index ) ( ( which - mdev -> palette . data ) / 3 )		253516	0					
ANR	253792	CastTarget	gx_color_index		253516	0					
ANR	253793	MultiplicativeExpression	( which - mdev -> palette . data ) / 3		253516	1		/			
ANR	253794	AdditiveExpression	which - mdev -> palette . data		253516	0		-			
ANR	253795	Identifier	which		253516	0					
ANR	253796	MemberAccess	mdev -> palette . data		253516	1					
ANR	253797	PtrMemberAccess	mdev -> palette		253516	0					
ANR	253798	Identifier	mdev		253516	0					
ANR	253799	Identifier	palette		253516	1					
ANR	253800	Identifier	data		253516	1					
ANR	253801	PrimaryExpression	3		253516	1					
ANR	253802	ReturnType	gx_color_index		253516	1					
ANR	253803	Identifier	mem_mapped_map_rgb_color		253516	2					
ANR	253804	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		253516	3					
ANR	253805	Parameter	gx_device * dev	733:25:25700:25714	253516	0	True				
ANR	253806	ParameterType	gx_device *		253516	0					
ANR	253807	Identifier	dev		253516	1					
ANR	253808	Parameter	const gx_color_value cv [ ]	733:42:25717:25741	253516	1	True				
ANR	253809	ParameterType	const gx_color_value [ ]		253516	0					
ANR	253810	Identifier	cv		253516	1					
ANR	253811	CFGEntryNode	ENTRY		253516		True				
ANR	253812	CFGExitNode	EXIT		253516		True				
ANR	253813	Symbol	which		253516						
ANR	253814	Symbol	bb		253516						
ANR	253815	Symbol	mdev -> color_info . num_components		253516						
ANR	253816	Symbol	gx_color_value_to_byte		253516						
ANR	253817	Symbol	dg		253516						
ANR	253818	Symbol	bg		253516						
ANR	253819	Symbol	mdev -> palette . data		253516						
ANR	253820	Symbol	cnt		253516						
ANR	253821	Symbol	pptr		253516						
ANR	253822	Symbol	mdev -> palette . size		253516						
ANR	253823	Symbol	best		253516						
ANR	253824	Symbol	diff		253516						
ANR	253825	Symbol	br		253516						
ANR	253826	Symbol	cv		253516						
ANR	253827	Symbol	dev		253516						
ANR	253828	Symbol	* pptr		253516						
ANR	253829	Symbol	mdev -> palette		253516						
ANR	253830	Symbol	* cv		253516						
ANR	253831	Symbol	mdev		253516						
ANR	253832	Symbol	mdev -> color_info		253516						
ANR	253833	Symbol	db		253516						
ANR	253834	Symbol	* mdev		253516						
ANR	253835	Function	mem_mapped_map_color_rgb	795:0:27821:28223							
ANR	253836	FunctionDef	"mem_mapped_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		253835	0					
ANR	253837	CompoundStatement		798:0:27938:28223	253835	0					
ANR	253838	Statement	gx_device_memory	799:4:27944:27959	253835	0	True				
ANR	253839	Statement	*	799:21:27961:27961	253835	1	True				
ANR	253840	Statement	const	799:23:27963:27967	253835	2	True				
ANR	253841	ExpressionStatement	mdev = ( gx_device_memory * ) dev	799:29:27969:27999	253835	3	True				
ANR	253842	AssignmentExpression	mdev = ( gx_device_memory * ) dev		253835	0		=			
ANR	253843	Identifier	mdev		253835	0					
ANR	253844	CastExpression	( gx_device_memory * ) dev		253835	1					
ANR	253845	CastTarget	gx_device_memory *		253835	0					
ANR	253846	Identifier	dev		253835	1					
ANR	253847	IdentifierDeclStatement	const byte * pptr = mdev -> palette . data + ( int ) color * 3 ;	800:4:28005:28059	253835	4	True				
ANR	253848	IdentifierDecl	* pptr = mdev -> palette . data + ( int ) color * 3		253835	0					
ANR	253849	IdentifierDeclType	const byte *		253835	0					
ANR	253850	Identifier	pptr		253835	1					
ANR	253851	AssignmentExpression	* pptr = mdev -> palette . data + ( int ) color * 3		253835	2		=			
ANR	253852	Identifier	pptr		253835	0					
ANR	253853	AdditiveExpression	mdev -> palette . data + ( int ) color * 3		253835	1		+			
ANR	253854	MemberAccess	mdev -> palette . data		253835	0					
ANR	253855	PtrMemberAccess	mdev -> palette		253835	0					
ANR	253856	Identifier	mdev		253835	0					
ANR	253857	Identifier	palette		253835	1					
ANR	253858	Identifier	data		253835	1					
ANR	253859	MultiplicativeExpression	( int ) color * 3		253835	1		*			
ANR	253860	CastExpression	( int ) color		253835	0					
ANR	253861	CastTarget	int		253835	0					
ANR	253862	Identifier	color		253835	1					
ANR	253863	PrimaryExpression	3		253835	1					
ANR	253864	ExpressionStatement	prgb [ 0 ] = gx_color_value_from_byte ( pptr [ 0 ] )	802:4:28066:28109	253835	5	True				
ANR	253865	AssignmentExpression	prgb [ 0 ] = gx_color_value_from_byte ( pptr [ 0 ] )		253835	0		=			
ANR	253866	ArrayIndexing	prgb [ 0 ]		253835	0					
ANR	253867	Identifier	prgb		253835	0					
ANR	253868	PrimaryExpression	0		253835	1					
ANR	253869	CallExpression	gx_color_value_from_byte ( pptr [ 0 ] )		253835	1					
ANR	253870	Callee	gx_color_value_from_byte		253835	0					
ANR	253871	Identifier	gx_color_value_from_byte		253835	0					
ANR	253872	ArgumentList	pptr [ 0 ]		253835	1					
ANR	253873	Argument	pptr [ 0 ]		253835	0					
ANR	253874	ArrayIndexing	pptr [ 0 ]		253835	0					
ANR	253875	Identifier	pptr		253835	0					
ANR	253876	PrimaryExpression	0		253835	1					
ANR	253877	ExpressionStatement	prgb [ 1 ] = gx_color_value_from_byte ( pptr [ 1 ] )	803:4:28115:28158	253835	6	True				
ANR	253878	AssignmentExpression	prgb [ 1 ] = gx_color_value_from_byte ( pptr [ 1 ] )		253835	0		=			
ANR	253879	ArrayIndexing	prgb [ 1 ]		253835	0					
ANR	253880	Identifier	prgb		253835	0					
ANR	253881	PrimaryExpression	1		253835	1					
ANR	253882	CallExpression	gx_color_value_from_byte ( pptr [ 1 ] )		253835	1					
ANR	253883	Callee	gx_color_value_from_byte		253835	0					
ANR	253884	Identifier	gx_color_value_from_byte		253835	0					
ANR	253885	ArgumentList	pptr [ 1 ]		253835	1					
ANR	253886	Argument	pptr [ 1 ]		253835	0					
ANR	253887	ArrayIndexing	pptr [ 1 ]		253835	0					
ANR	253888	Identifier	pptr		253835	0					
ANR	253889	PrimaryExpression	1		253835	1					
ANR	253890	ExpressionStatement	prgb [ 2 ] = gx_color_value_from_byte ( pptr [ 2 ] )	804:4:28164:28207	253835	7	True				
ANR	253891	AssignmentExpression	prgb [ 2 ] = gx_color_value_from_byte ( pptr [ 2 ] )		253835	0		=			
ANR	253892	ArrayIndexing	prgb [ 2 ]		253835	0					
ANR	253893	Identifier	prgb		253835	0					
ANR	253894	PrimaryExpression	2		253835	1					
ANR	253895	CallExpression	gx_color_value_from_byte ( pptr [ 2 ] )		253835	1					
ANR	253896	Callee	gx_color_value_from_byte		253835	0					
ANR	253897	Identifier	gx_color_value_from_byte		253835	0					
ANR	253898	ArgumentList	pptr [ 2 ]		253835	1					
ANR	253899	Argument	pptr [ 2 ]		253835	0					
ANR	253900	ArrayIndexing	pptr [ 2 ]		253835	0					
ANR	253901	Identifier	pptr		253835	0					
ANR	253902	PrimaryExpression	2		253835	1					
ANR	253903	ReturnStatement	return 0 ;	805:4:28213:28221	253835	8	True				
ANR	253904	PrimaryExpression	0		253835	0					
ANR	253905	ReturnType	int		253835	1					
ANR	253906	Identifier	mem_mapped_map_color_rgb		253835	2					
ANR	253907	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		253835	3					
ANR	253908	Parameter	gx_device * dev	796:25:27850:27864	253835	0	True				
ANR	253909	ParameterType	gx_device *		253835	0					
ANR	253910	Identifier	dev		253835	1					
ANR	253911	Parameter	gx_color_index color	796:42:27867:27886	253835	1	True				
ANR	253912	ParameterType	gx_color_index		253835	0					
ANR	253913	Identifier	color		253835	1					
ANR	253914	Parameter	gx_color_value prgb [ 3 ]	797:25:27914:27935	253835	2	True				
ANR	253915	ParameterType	gx_color_value [ 3 ]		253835	0					
ANR	253916	Identifier	prgb		253835	1					
ANR	253917	CFGEntryNode	ENTRY		253835		True				
ANR	253918	CFGExitNode	EXIT		253835		True				
ANR	253919	Symbol	* prgb		253835						
ANR	253920	Symbol	dev		253835						
ANR	253921	Symbol	color		253835						
ANR	253922	Symbol	mdev -> palette . data		253835						
ANR	253923	Symbol	* pptr		253835						
ANR	253924	Symbol	gx_color_value_from_byte		253835						
ANR	253925	Symbol	mdev -> palette		253835						
ANR	253926	Symbol	prgb		253835						
ANR	253927	Symbol	pptr		253835						
ANR	253928	Symbol	mdev		253835						
ANR	253929	Symbol	* mdev		253835						
ANR	253930	Function	mem_draw_thin_line	812:0:28353:28718							
ANR	253931	FunctionDef	"mem_draw_thin_line (gx_device * dev , fixed fx0 , fixed fy0 , fixed fx1 , fixed fy1 , const gx_drawing_color * pdcolor , gs_logical_operation_t lop , fixed adjustx , fixed adjusty)"		253930	0					
ANR	253932	CompoundStatement		817:0:28584:28718	253930	0					
ANR	253933	ReturnStatement	"return gx_default_draw_thin_line ( dev , fx0 , fy0 , fx1 , fy1 , pdcolor , lop , adjustx , adjusty ) ;"	818:4:28590:28716	253930	0	True				
ANR	253934	CallExpression	"gx_default_draw_thin_line ( dev , fx0 , fy0 , fx1 , fy1 , pdcolor , lop , adjustx , adjusty )"		253930	0					
ANR	253935	Callee	gx_default_draw_thin_line		253930	0					
ANR	253936	Identifier	gx_default_draw_thin_line		253930	0					
ANR	253937	ArgumentList	dev		253930	1					
ANR	253938	Argument	dev		253930	0					
ANR	253939	Identifier	dev		253930	0					
ANR	253940	Argument	fx0		253930	1					
ANR	253941	Identifier	fx0		253930	0					
ANR	253942	Argument	fy0		253930	2					
ANR	253943	Identifier	fy0		253930	0					
ANR	253944	Argument	fx1		253930	3					
ANR	253945	Identifier	fx1		253930	0					
ANR	253946	Argument	fy1		253930	4					
ANR	253947	Identifier	fy1		253930	0					
ANR	253948	Argument	pdcolor		253930	5					
ANR	253949	Identifier	pdcolor		253930	0					
ANR	253950	Argument	lop		253930	6					
ANR	253951	Identifier	lop		253930	0					
ANR	253952	Argument	adjustx		253930	7					
ANR	253953	Identifier	adjustx		253930	0					
ANR	253954	Argument	adjusty		253930	8					
ANR	253955	Identifier	adjusty		253930	0					
ANR	253956	ReturnType	int		253930	1					
ANR	253957	Identifier	mem_draw_thin_line		253930	2					
ANR	253958	ParameterList	"gx_device * dev , fixed fx0 , fixed fy0 , fixed fx1 , fixed fy1 , const gx_drawing_color * pdcolor , gs_logical_operation_t lop , fixed adjustx , fixed adjusty"		253930	3					
ANR	253959	Parameter	gx_device * dev	813:19:28376:28389	253930	0	True				
ANR	253960	ParameterType	gx_device *		253930	0					
ANR	253961	Identifier	dev		253930	1					
ANR	253962	Parameter	fixed fx0	813:35:28392:28400	253930	1	True				
ANR	253963	ParameterType	fixed		253930	0					
ANR	253964	Identifier	fx0		253930	1					
ANR	253965	Parameter	fixed fy0	813:46:28403:28411	253930	2	True				
ANR	253966	ParameterType	fixed		253930	0					
ANR	253967	Identifier	fy0		253930	1					
ANR	253968	Parameter	fixed fx1	813:57:28414:28422	253930	3	True				
ANR	253969	ParameterType	fixed		253930	0					
ANR	253970	Identifier	fx1		253930	1					
ANR	253971	Parameter	fixed fy1	813:68:28425:28433	253930	4	True				
ANR	253972	ParameterType	fixed		253930	0					
ANR	253973	Identifier	fy1		253930	1					
ANR	253974	Parameter	const gx_drawing_color * pdcolor	814:19:28455:28485	253930	5	True				
ANR	253975	ParameterType	const gx_drawing_color *		253930	0					
ANR	253976	Identifier	pdcolor		253930	1					
ANR	253977	Parameter	gs_logical_operation_t lop	815:19:28507:28532	253930	6	True				
ANR	253978	ParameterType	gs_logical_operation_t		253930	0					
ANR	253979	Identifier	lop		253930	1					
ANR	253980	Parameter	fixed adjustx	816:19:28554:28566	253930	7	True				
ANR	253981	ParameterType	fixed		253930	0					
ANR	253982	Identifier	adjustx		253930	1					
ANR	253983	Parameter	fixed adjusty	816:34:28569:28581	253930	8	True				
ANR	253984	ParameterType	fixed		253930	0					
ANR	253985	Identifier	adjusty		253930	1					
ANR	253986	CFGEntryNode	ENTRY		253930		True				
ANR	253987	CFGExitNode	EXIT		253930		True				
ANR	253988	Symbol	dev		253930						
ANR	253989	Symbol	adjustx		253930						
ANR	253990	Symbol	adjusty		253930						
ANR	253991	Symbol	pdcolor		253930						
ANR	253992	Symbol	fy0		253930						
ANR	253993	Symbol	lop		253930						
ANR	253994	Symbol	fx1		253930						
ANR	253995	Symbol	gx_default_draw_thin_line		253930						
ANR	253996	Symbol	fx0		253930						
ANR	253997	Symbol	fy1		253930						
