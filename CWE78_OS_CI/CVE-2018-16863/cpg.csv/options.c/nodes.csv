command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7969583	File	data/converged/CVE-2018-16863_ghostpdl/options.c								
ANR	7969584	DeclStmt									
ANR	7969585	Decl							int	"int ( cups_option_t * a , cups_option_t * b )"	cups_compare_options
ANR	7969586	DeclStmt									
ANR	7969587	Decl							int	"int ( const char * name , int num_options , cups_option_t * option , int prev , int * rdiff )"	cups_find_option
ANR	7969588	Function	cupsAddOption	52:0:1627:3915							
ANR	7969589	FunctionDef	"cupsAddOption (const char * name , const char * value , int num_options , cups_option_t * * options)"		7969588	0					
ANR	7969590	CompoundStatement		57:0:1919:3915	7969588	0					
ANR	7969591	IdentifierDeclStatement	cups_option_t * temp ;	58:2:1923:1942	7969588	0	True				
ANR	7969592	IdentifierDecl	* temp		7969588	0					
ANR	7969593	IdentifierDeclType	cups_option_t *		7969588	0					
ANR	7969594	Identifier	temp		7969588	1					
ANR	7969595	IdentifierDeclStatement	"int insert , diff ;"	59:2:1976:2019	7969588	1	True				
ANR	7969596	IdentifierDecl	insert		7969588	0					
ANR	7969597	IdentifierDeclType	int		7969588	0					
ANR	7969598	Identifier	insert		7969588	1					
ANR	7969599	IdentifierDecl	diff		7969588	1					
ANR	7969600	IdentifierDeclType	int		7969588	0					
ANR	7969601	Identifier	diff		7969588	1					
ANR	7969602	Statement	DEBUG_printf	63:2:2050:2061	7969588	2	True				
ANR	7969603	Statement	(	63:14:2062:2062	7969588	3	True				
ANR	7969604	Statement	(	63:15:2063:2063	7969588	4	True				
ANR	7969605	Statement	"""2cupsAddOption(name=\\""%s\\"", value=\\""%s\\"", num_options=%d, """	63:16:2064:2123	7969588	5	True				
ANR	7969606	Statement	"""options=%p)"""	64:16:2141:2153	7969588	6	True				
ANR	7969607	Statement	","	64:29:2154:2154	7969588	7	True				
ANR	7969608	Statement	name	64:31:2156:2159	7969588	8	True				
ANR	7969609	Statement	","	64:35:2160:2160	7969588	9	True				
ANR	7969610	Statement	value	64:37:2162:2166	7969588	10	True				
ANR	7969611	Statement	","	64:42:2167:2167	7969588	11	True				
ANR	7969612	Statement	num_options	64:44:2169:2179	7969588	12	True				
ANR	7969613	Statement	","	64:55:2180:2180	7969588	13	True				
ANR	7969614	Statement	options	64:57:2182:2188	7969588	14	True				
ANR	7969615	Statement	)	64:64:2189:2189	7969588	15	True				
ANR	7969616	Statement	)	64:65:2190:2190	7969588	16	True				
ANR	7969617	ExpressionStatement		64:66:2191:2191	7969588	17	True				
ANR	7969618	IfStatement	if ( ! name || ! name [ 0 ] || ! value || ! options || num_options < 0 )		7969588	18					
ANR	7969619	Condition	! name || ! name [ 0 ] || ! value || ! options || num_options < 0	66:6:2200:2257	7969588	0	True				
ANR	7969620	OrExpression	! name || ! name [ 0 ] || ! value || ! options || num_options < 0		7969588	0		||			
ANR	7969621	UnaryOperationExpression	! name		7969588	0					
ANR	7969622	UnaryOperator	!		7969588	0					
ANR	7969623	Identifier	name		7969588	1					
ANR	7969624	OrExpression	! name [ 0 ] || ! value || ! options || num_options < 0		7969588	1		||			
ANR	7969625	UnaryOperationExpression	! name [ 0 ]		7969588	0					
ANR	7969626	UnaryOperator	!		7969588	0					
ANR	7969627	ArrayIndexing	name [ 0 ]		7969588	1					
ANR	7969628	Identifier	name		7969588	0					
ANR	7969629	PrimaryExpression	0		7969588	1					
ANR	7969630	OrExpression	! value || ! options || num_options < 0		7969588	1		||			
ANR	7969631	UnaryOperationExpression	! value		7969588	0					
ANR	7969632	UnaryOperator	!		7969588	0					
ANR	7969633	Identifier	value		7969588	1					
ANR	7969634	OrExpression	! options || num_options < 0		7969588	1		||			
ANR	7969635	UnaryOperationExpression	! options		7969588	0					
ANR	7969636	UnaryOperator	!		7969588	0					
ANR	7969637	Identifier	options		7969588	1					
ANR	7969638	RelationalExpression	num_options < 0		7969588	1		<			
ANR	7969639	Identifier	num_options		7969588	0					
ANR	7969640	PrimaryExpression	0		7969588	1					
ANR	7969641	CompoundStatement		11:2:342:342	7969588	1					
ANR	7969642	ExpressionStatement	"DEBUG_printf ( ( ""3cupsAddOption: Returning %d"" , num_options ) )"	68:4:2268:2327	7969588	0	True				
ANR	7969643	CallExpression	"DEBUG_printf ( ( ""3cupsAddOption: Returning %d"" , num_options ) )"		7969588	0					
ANR	7969644	Callee	DEBUG_printf		7969588	0					
ANR	7969645	Identifier	DEBUG_printf		7969588	0					
ANR	7969646	ArgumentList	"""3cupsAddOption: Returning %d"" , num_options"		7969588	1					
ANR	7969647	Argument	"""3cupsAddOption: Returning %d"" , num_options"		7969588	0					
ANR	7969648	Expression	"""3cupsAddOption: Returning %d"" , num_options"		7969588	0					
ANR	7969649	PrimaryExpression	"""3cupsAddOption: Returning %d"""		7969588	0					
ANR	7969650	Identifier	num_options		7969588	1					
ANR	7969651	ReturnStatement	return ( num_options ) ;	69:4:2333:2353	7969588	1	True				
ANR	7969652	Identifier	num_options		7969588	0					
ANR	7969653	IfStatement	if ( num_options == 0 )		7969588	19					
ANR	7969654	Condition	num_options == 0	76:6:2430:2445	7969588	0	True				
ANR	7969655	EqualityExpression	num_options == 0		7969588	0		==			
ANR	7969656	Identifier	num_options		7969588	0					
ANR	7969657	PrimaryExpression	0		7969588	1					
ANR	7969658	CompoundStatement		21:2:530:530	7969588	1					
ANR	7969659	ExpressionStatement	insert = 0	78:4:2456:2466	7969588	0	True				
ANR	7969660	AssignmentExpression	insert = 0		7969588	0		=			
ANR	7969661	Identifier	insert		7969588	0					
ANR	7969662	PrimaryExpression	0		7969588	1					
ANR	7969663	ExpressionStatement	diff = 1	79:4:2472:2482	7969588	1	True				
ANR	7969664	AssignmentExpression	diff = 1		7969588	0		=			
ANR	7969665	Identifier	diff		7969588	0					
ANR	7969666	PrimaryExpression	1		7969588	1					
ANR	7969667	ElseStatement	else		7969588	0					
ANR	7969668	CompoundStatement		26:2:577:577	7969588	0					
ANR	7969669	ExpressionStatement	"insert = cups_find_option ( name , num_options , * options , num_options - 1 , & diff )"	83:4:2503:2611	7969588	0	True				
ANR	7969670	AssignmentExpression	"insert = cups_find_option ( name , num_options , * options , num_options - 1 , & diff )"		7969588	0		=			
ANR	7969671	Identifier	insert		7969588	0					
ANR	7969672	CallExpression	"cups_find_option ( name , num_options , * options , num_options - 1 , & diff )"		7969588	1					
ANR	7969673	Callee	cups_find_option		7969588	0					
ANR	7969674	Identifier	cups_find_option		7969588	0					
ANR	7969675	ArgumentList	name		7969588	1					
ANR	7969676	Argument	name		7969588	0					
ANR	7969677	Identifier	name		7969588	0					
ANR	7969678	Argument	num_options		7969588	1					
ANR	7969679	Identifier	num_options		7969588	0					
ANR	7969680	Argument	* options		7969588	2					
ANR	7969681	UnaryOperationExpression	* options		7969588	0					
ANR	7969682	UnaryOperator	*		7969588	0					
ANR	7969683	Identifier	options		7969588	1					
ANR	7969684	Argument	num_options - 1		7969588	3					
ANR	7969685	AdditiveExpression	num_options - 1		7969588	0		-			
ANR	7969686	Identifier	num_options		7969588	0					
ANR	7969687	PrimaryExpression	1		7969588	1					
ANR	7969688	Argument	& diff		7969588	4					
ANR	7969689	UnaryOperationExpression	& diff		7969588	0					
ANR	7969690	UnaryOperator	&		7969588	0					
ANR	7969691	Identifier	diff		7969588	1					
ANR	7969692	IfStatement	if ( diff > 0 )		7969588	1					
ANR	7969693	Condition	diff > 0	86:8:2622:2629	7969588	0	True				
ANR	7969694	RelationalExpression	diff > 0		7969588	0		>			
ANR	7969695	Identifier	diff		7969588	0					
ANR	7969696	PrimaryExpression	0		7969588	1					
ANR	7969697	ExpressionStatement	insert ++	87:6:2638:2647	7969588	1	True				
ANR	7969698	PostIncDecOperationExpression	insert ++		7969588	0					
ANR	7969699	Identifier	insert		7969588	0					
ANR	7969700	IncDec	++		7969588	1					
ANR	7969701	IfStatement	if ( diff )		7969588	20					
ANR	7969702	Condition	diff	90:6:2660:2663	7969588	0	True				
ANR	7969703	Identifier	diff		7969588	0					
ANR	7969704	CompoundStatement		35:2:748:748	7969588	1					
ANR	7969705	ExpressionStatement	"DEBUG_printf ( ( ""4cupsAddOption: New option inserted at index %d..."" , insert ) )"	96:4:2721:2815	7969588	0	True				
ANR	7969706	CallExpression	"DEBUG_printf ( ( ""4cupsAddOption: New option inserted at index %d..."" , insert ) )"		7969588	0					
ANR	7969707	Callee	DEBUG_printf		7969588	0					
ANR	7969708	Identifier	DEBUG_printf		7969588	0					
ANR	7969709	ArgumentList	"""4cupsAddOption: New option inserted at index %d..."" , insert"		7969588	1					
ANR	7969710	Argument	"""4cupsAddOption: New option inserted at index %d..."" , insert"		7969588	0					
ANR	7969711	Expression	"""4cupsAddOption: New option inserted at index %d..."" , insert"		7969588	0					
ANR	7969712	PrimaryExpression	"""4cupsAddOption: New option inserted at index %d..."""		7969588	0					
ANR	7969713	Identifier	insert		7969588	1					
ANR	7969714	IfStatement	if ( num_options == 0 )		7969588	1					
ANR	7969715	Condition	num_options == 0	99:8:2826:2841	7969588	0	True				
ANR	7969716	EqualityExpression	num_options == 0		7969588	0		==			
ANR	7969717	Identifier	num_options		7969588	0					
ANR	7969718	PrimaryExpression	0		7969588	1					
ANR	7969719	ExpressionStatement	temp = ( cups_option_t * ) malloc ( sizeof ( cups_option_t ) )	100:6:2850:2903	7969588	1	True				
ANR	7969720	AssignmentExpression	temp = ( cups_option_t * ) malloc ( sizeof ( cups_option_t ) )		7969588	0		=			
ANR	7969721	Identifier	temp		7969588	0					
ANR	7969722	CastExpression	( cups_option_t * ) malloc ( sizeof ( cups_option_t ) )		7969588	1					
ANR	7969723	CastTarget	cups_option_t *		7969588	0					
ANR	7969724	CallExpression	malloc ( sizeof ( cups_option_t ) )		7969588	1					
ANR	7969725	Callee	malloc		7969588	0					
ANR	7969726	Identifier	malloc		7969588	0					
ANR	7969727	ArgumentList	sizeof ( cups_option_t )		7969588	1					
ANR	7969728	Argument	sizeof ( cups_option_t )		7969588	0					
ANR	7969729	SizeofExpression	sizeof ( cups_option_t )		7969588	0					
ANR	7969730	Sizeof	sizeof		7969588	0					
ANR	7969731	SizeofOperand	cups_option_t		7969588	1					
ANR	7969732	ElseStatement	else		7969588	0					
ANR	7969733	ExpressionStatement	"temp = ( cups_option_t * ) realloc ( * options , sizeof ( cups_option_t ) * ( num_options + 1 ) )"	102:6:2920:3045	7969588	0	True				
ANR	7969734	AssignmentExpression	"temp = ( cups_option_t * ) realloc ( * options , sizeof ( cups_option_t ) * ( num_options + 1 ) )"		7969588	0		=			
ANR	7969735	Identifier	temp		7969588	0					
ANR	7969736	CastExpression	"( cups_option_t * ) realloc ( * options , sizeof ( cups_option_t ) * ( num_options + 1 ) )"		7969588	1					
ANR	7969737	CastTarget	cups_option_t *		7969588	0					
ANR	7969738	CallExpression	"realloc ( * options , sizeof ( cups_option_t ) * ( num_options + 1 ) )"		7969588	1					
ANR	7969739	Callee	realloc		7969588	0					
ANR	7969740	Identifier	realloc		7969588	0					
ANR	7969741	ArgumentList	* options		7969588	1					
ANR	7969742	Argument	* options		7969588	0					
ANR	7969743	UnaryOperationExpression	* options		7969588	0					
ANR	7969744	UnaryOperator	*		7969588	0					
ANR	7969745	Identifier	options		7969588	1					
ANR	7969746	Argument	sizeof ( cups_option_t ) * ( num_options + 1 )		7969588	1					
ANR	7969747	MultiplicativeExpression	sizeof ( cups_option_t ) * ( num_options + 1 )		7969588	0		*			
ANR	7969748	SizeofExpression	sizeof ( cups_option_t )		7969588	0					
ANR	7969749	Sizeof	sizeof		7969588	0					
ANR	7969750	SizeofOperand	cups_option_t		7969588	1					
ANR	7969751	AdditiveExpression	num_options + 1		7969588	1		+			
ANR	7969752	Identifier	num_options		7969588	0					
ANR	7969753	PrimaryExpression	1		7969588	1					
ANR	7969754	IfStatement	if ( temp == NULL )		7969588	2					
ANR	7969755	Condition	temp == NULL	105:8:3056:3067	7969588	0	True				
ANR	7969756	EqualityExpression	temp == NULL		7969588	0		==			
ANR	7969757	Identifier	temp		7969588	0					
ANR	7969758	Identifier	NULL		7969588	1					
ANR	7969759	CompoundStatement		50:4:1154:1154	7969588	1					
ANR	7969760	ExpressionStatement	"DEBUG_puts ( ""3cupsAddOption: Unable to expand option array, returning 0"" )"	107:6:3082:3154	7969588	0	True				
ANR	7969761	CallExpression	"DEBUG_puts ( ""3cupsAddOption: Unable to expand option array, returning 0"" )"		7969588	0					
ANR	7969762	Callee	DEBUG_puts		7969588	0					
ANR	7969763	Identifier	DEBUG_puts		7969588	0					
ANR	7969764	ArgumentList	"""3cupsAddOption: Unable to expand option array, returning 0"""		7969588	1					
ANR	7969765	Argument	"""3cupsAddOption: Unable to expand option array, returning 0"""		7969588	0					
ANR	7969766	PrimaryExpression	"""3cupsAddOption: Unable to expand option array, returning 0"""		7969588	0					
ANR	7969767	ReturnStatement	return ( 0 ) ;	108:6:3162:3172	7969588	1	True				
ANR	7969768	PrimaryExpression	0		7969588	0					
ANR	7969769	ExpressionStatement	* options = temp	111:4:3185:3200	7969588	3	True				
ANR	7969770	AssignmentExpression	* options = temp		7969588	0		=			
ANR	7969771	UnaryOperationExpression	* options		7969588	0					
ANR	7969772	UnaryOperator	*		7969588	0					
ANR	7969773	Identifier	options		7969588	1					
ANR	7969774	Identifier	temp		7969588	1					
ANR	7969775	IfStatement	if ( insert < num_options )		7969588	4					
ANR	7969776	Condition	insert < num_options	113:8:3211:3230	7969588	0	True				
ANR	7969777	RelationalExpression	insert < num_options		7969588	0		<			
ANR	7969778	Identifier	insert		7969588	0					
ANR	7969779	Identifier	num_options		7969588	1					
ANR	7969780	CompoundStatement		58:4:1317:1317	7969588	1					
ANR	7969781	ExpressionStatement	"DEBUG_printf ( ( ""4cupsAddOption: Shifting %d options..."" , ( int ) ( num_options - insert ) ) )"	115:6:3245:3350	7969588	0	True				
ANR	7969782	CallExpression	"DEBUG_printf ( ( ""4cupsAddOption: Shifting %d options..."" , ( int ) ( num_options - insert ) ) )"		7969588	0					
ANR	7969783	Callee	DEBUG_printf		7969588	0					
ANR	7969784	Identifier	DEBUG_printf		7969588	0					
ANR	7969785	ArgumentList	"""4cupsAddOption: Shifting %d options..."" , ( int ) ( num_options - insert )"		7969588	1					
ANR	7969786	Argument	"""4cupsAddOption: Shifting %d options..."" , ( int ) ( num_options - insert )"		7969588	0					
ANR	7969787	Expression	"""4cupsAddOption: Shifting %d options..."" , ( int ) ( num_options - insert )"		7969588	0					
ANR	7969788	PrimaryExpression	"""4cupsAddOption: Shifting %d options..."""		7969588	0					
ANR	7969789	CastExpression	( int ) ( num_options - insert )		7969588	1					
ANR	7969790	CastTarget	int		7969588	0					
ANR	7969791	AdditiveExpression	num_options - insert		7969588	1		-			
ANR	7969792	Identifier	num_options		7969588	0					
ANR	7969793	Identifier	insert		7969588	1					
ANR	7969794	ExpressionStatement	"memmove ( temp + insert + 1 , temp + insert , ( num_options - insert ) * sizeof ( cups_option_t ) )"	117:6:3358:3454	7969588	1	True				
ANR	7969795	CallExpression	"memmove ( temp + insert + 1 , temp + insert , ( num_options - insert ) * sizeof ( cups_option_t ) )"		7969588	0					
ANR	7969796	Callee	memmove		7969588	0					
ANR	7969797	Identifier	memmove		7969588	0					
ANR	7969798	ArgumentList	temp + insert + 1		7969588	1					
ANR	7969799	Argument	temp + insert + 1		7969588	0					
ANR	7969800	AdditiveExpression	temp + insert + 1		7969588	0		+			
ANR	7969801	Identifier	temp		7969588	0					
ANR	7969802	AdditiveExpression	insert + 1		7969588	1		+			
ANR	7969803	Identifier	insert		7969588	0					
ANR	7969804	PrimaryExpression	1		7969588	1					
ANR	7969805	Argument	temp + insert		7969588	1					
ANR	7969806	AdditiveExpression	temp + insert		7969588	0		+			
ANR	7969807	Identifier	temp		7969588	0					
ANR	7969808	Identifier	insert		7969588	1					
ANR	7969809	Argument	( num_options - insert ) * sizeof ( cups_option_t )		7969588	2					
ANR	7969810	MultiplicativeExpression	( num_options - insert ) * sizeof ( cups_option_t )		7969588	0		*			
ANR	7969811	AdditiveExpression	num_options - insert		7969588	0		-			
ANR	7969812	Identifier	num_options		7969588	0					
ANR	7969813	Identifier	insert		7969588	1					
ANR	7969814	SizeofExpression	sizeof ( cups_option_t )		7969588	1					
ANR	7969815	Sizeof	sizeof		7969588	0					
ANR	7969816	SizeofOperand	cups_option_t		7969588	1					
ANR	7969817	ExpressionStatement	temp += insert	121:4:3467:3488	7969588	5	True				
ANR	7969818	AssignmentExpression	temp += insert		7969588	0		+=			
ANR	7969819	Identifier	temp		7969588	0					
ANR	7969820	Identifier	insert		7969588	1					
ANR	7969821	ExpressionStatement	temp -> name = _cupsStrAlloc ( name )	122:4:3494:3527	7969588	6	True				
ANR	7969822	AssignmentExpression	temp -> name = _cupsStrAlloc ( name )		7969588	0		=			
ANR	7969823	PtrMemberAccess	temp -> name		7969588	0					
ANR	7969824	Identifier	temp		7969588	0					
ANR	7969825	Identifier	name		7969588	1					
ANR	7969826	CallExpression	_cupsStrAlloc ( name )		7969588	1					
ANR	7969827	Callee	_cupsStrAlloc		7969588	0					
ANR	7969828	Identifier	_cupsStrAlloc		7969588	0					
ANR	7969829	ArgumentList	name		7969588	1					
ANR	7969830	Argument	name		7969588	0					
ANR	7969831	Identifier	name		7969588	0					
ANR	7969832	ExpressionStatement	num_options ++	123:4:3533:3547	7969588	7	True				
ANR	7969833	PostIncDecOperationExpression	num_options ++		7969588	0					
ANR	7969834	Identifier	num_options		7969588	0					
ANR	7969835	IncDec	++		7969588	1					
ANR	7969836	ElseStatement	else		7969588	0					
ANR	7969837	CompoundStatement		70:2:1642:1642	7969588	0					
ANR	7969838	ExpressionStatement	"DEBUG_printf ( ( ""4cupsAddOption: Option already exists at index %d..."" , insert ) )"	131:4:3623:3719	7969588	0	True				
ANR	7969839	CallExpression	"DEBUG_printf ( ( ""4cupsAddOption: Option already exists at index %d..."" , insert ) )"		7969588	0					
ANR	7969840	Callee	DEBUG_printf		7969588	0					
ANR	7969841	Identifier	DEBUG_printf		7969588	0					
ANR	7969842	ArgumentList	"""4cupsAddOption: Option already exists at index %d..."" , insert"		7969588	1					
ANR	7969843	Argument	"""4cupsAddOption: Option already exists at index %d..."" , insert"		7969588	0					
ANR	7969844	Expression	"""4cupsAddOption: Option already exists at index %d..."" , insert"		7969588	0					
ANR	7969845	PrimaryExpression	"""4cupsAddOption: Option already exists at index %d..."""		7969588	0					
ANR	7969846	Identifier	insert		7969588	1					
ANR	7969847	ExpressionStatement	temp = * options + insert	134:4:3726:3750	7969588	1	True				
ANR	7969848	AssignmentExpression	temp = * options + insert		7969588	0		=			
ANR	7969849	Identifier	temp		7969588	0					
ANR	7969850	AdditiveExpression	* options + insert		7969588	1		+			
ANR	7969851	UnaryOperationExpression	* options		7969588	0					
ANR	7969852	UnaryOperator	*		7969588	0					
ANR	7969853	Identifier	options		7969588	1					
ANR	7969854	Identifier	insert		7969588	1					
ANR	7969855	ExpressionStatement	_cupsStrFree ( temp -> value )	135:4:3756:3781	7969588	2	True				
ANR	7969856	CallExpression	_cupsStrFree ( temp -> value )		7969588	0					
ANR	7969857	Callee	_cupsStrFree		7969588	0					
ANR	7969858	Identifier	_cupsStrFree		7969588	0					
ANR	7969859	ArgumentList	temp -> value		7969588	1					
ANR	7969860	Argument	temp -> value		7969588	0					
ANR	7969861	PtrMemberAccess	temp -> value		7969588	0					
ANR	7969862	Identifier	temp		7969588	0					
ANR	7969863	Identifier	value		7969588	1					
ANR	7969864	ExpressionStatement	temp -> value = _cupsStrAlloc ( value )	138:2:3790:3824	7969588	21	True				
ANR	7969865	AssignmentExpression	temp -> value = _cupsStrAlloc ( value )		7969588	0		=			
ANR	7969866	PtrMemberAccess	temp -> value		7969588	0					
ANR	7969867	Identifier	temp		7969588	0					
ANR	7969868	Identifier	value		7969588	1					
ANR	7969869	CallExpression	_cupsStrAlloc ( value )		7969588	1					
ANR	7969870	Callee	_cupsStrAlloc		7969588	0					
ANR	7969871	Identifier	_cupsStrAlloc		7969588	0					
ANR	7969872	ArgumentList	value		7969588	1					
ANR	7969873	Argument	value		7969588	0					
ANR	7969874	Identifier	value		7969588	0					
ANR	7969875	ExpressionStatement	"DEBUG_printf ( ( ""3cupsAddOption: Returning %d"" , num_options ) )"	140:2:3829:3888	7969588	22	True				
ANR	7969876	CallExpression	"DEBUG_printf ( ( ""3cupsAddOption: Returning %d"" , num_options ) )"		7969588	0					
ANR	7969877	Callee	DEBUG_printf		7969588	0					
ANR	7969878	Identifier	DEBUG_printf		7969588	0					
ANR	7969879	ArgumentList	"""3cupsAddOption: Returning %d"" , num_options"		7969588	1					
ANR	7969880	Argument	"""3cupsAddOption: Returning %d"" , num_options"		7969588	0					
ANR	7969881	Expression	"""3cupsAddOption: Returning %d"" , num_options"		7969588	0					
ANR	7969882	PrimaryExpression	"""3cupsAddOption: Returning %d"""		7969588	0					
ANR	7969883	Identifier	num_options		7969588	1					
ANR	7969884	ReturnStatement	return ( num_options ) ;	142:2:3893:3913	7969588	23	True				
ANR	7969885	Identifier	num_options		7969588	0					
ANR	7969886	ReturnType	int		7969588	1					
ANR	7969887	Identifier	cupsAddOption		7969588	2					
ANR	7969888	ParameterList	"const char * name , const char * value , int num_options , cups_option_t * * options"		7969588	3					
ANR	7969889	Parameter	const char * name	53:14:1678:1696	7969588	0	True				
ANR	7969890	ParameterType	const char *		7969588	0					
ANR	7969891	Identifier	name		7969588	1					
ANR	7969892	Parameter	const char * value	54:14:1739:1758	7969588	1	True				
ANR	7969893	ParameterType	const char *		7969588	0					
ANR	7969894	Identifier	value		7969588	1					
ANR	7969895	Parameter	int num_options	55:7:1795:1819	7969588	2	True				
ANR	7969896	ParameterType	int		7969588	0					
ANR	7969897	Identifier	num_options		7969588	1					
ANR	7969898	Parameter	cups_option_t * * options	56:14:1864:1886	7969588	3	True				
ANR	7969899	ParameterType	cups_option_t * *		7969588	0					
ANR	7969900	Identifier	options		7969588	1					
ANR	7969901	CFGEntryNode	ENTRY		7969588		True				
ANR	7969902	CFGExitNode	EXIT		7969588		True				
ANR	7969903	Symbol	* name		7969588						
ANR	7969904	Symbol	malloc		7969588						
ANR	7969905	Symbol	temp		7969588						
ANR	7969906	Symbol	_cupsStrAlloc		7969588						
ANR	7969907	Symbol	NULL		7969588						
ANR	7969908	Symbol	cups_find_option		7969588						
ANR	7969909	Symbol	insert		7969588						
ANR	7969910	Symbol	diff		7969588						
ANR	7969911	Symbol	num_options		7969588						
ANR	7969912	Symbol	realloc		7969588						
ANR	7969913	Symbol	temp -> value		7969588						
ANR	7969914	Symbol	* options		7969588						
ANR	7969915	Symbol	* temp		7969588						
ANR	7969916	Symbol	& diff		7969588						
ANR	7969917	Symbol	name		7969588						
ANR	7969918	Symbol	options		7969588						
ANR	7969919	Symbol	value		7969588						
ANR	7969920	Symbol	temp -> name		7969588						
ANR	7969921	Function	cupsFreeOptions	150:0:3985:4446							
ANR	7969922	FunctionDef	"cupsFreeOptions (int num_options , cups_option_t * options)"		7969921	0					
ANR	7969923	CompoundStatement		154:0:4125:4446	7969921	0					
ANR	7969924	IdentifierDeclStatement	int i ;	155:2:4129:4134	7969921	0	True				
ANR	7969925	IdentifierDecl	i		7969921	0					
ANR	7969926	IdentifierDeclType	int		7969921	0					
ANR	7969927	Identifier	i		7969921	1					
ANR	7969928	ExpressionStatement	"DEBUG_printf ( ( ""cupsFreeOptions(num_options=%d, options=%p)"" , num_options , options ) )"	158:2:4161:4260	7969921	1	True				
ANR	7969929	CallExpression	"DEBUG_printf ( ( ""cupsFreeOptions(num_options=%d, options=%p)"" , num_options , options ) )"		7969921	0					
ANR	7969930	Callee	DEBUG_printf		7969921	0					
ANR	7969931	Identifier	DEBUG_printf		7969921	0					
ANR	7969932	ArgumentList	"""cupsFreeOptions(num_options=%d, options=%p)"" , num_options , options"		7969921	1					
ANR	7969933	Argument	"""cupsFreeOptions(num_options=%d, options=%p)"" , num_options , options"		7969921	0					
ANR	7969934	Expression	"""cupsFreeOptions(num_options=%d, options=%p)"" , num_options , options"		7969921	0					
ANR	7969935	PrimaryExpression	"""cupsFreeOptions(num_options=%d, options=%p)"""		7969921	0					
ANR	7969936	Expression	"num_options , options"		7969921	1					
ANR	7969937	Identifier	num_options		7969921	0					
ANR	7969938	Identifier	options		7969921	1					
ANR	7969939	IfStatement	if ( num_options <= 0 || ! options )		7969921	2					
ANR	7969940	Condition	num_options <= 0 || ! options	161:6:4269:4296	7969921	0	True				
ANR	7969941	OrExpression	num_options <= 0 || ! options		7969921	0		||			
ANR	7969942	RelationalExpression	num_options <= 0		7969921	0		<=			
ANR	7969943	Identifier	num_options		7969921	0					
ANR	7969944	PrimaryExpression	0		7969921	1					
ANR	7969945	UnaryOperationExpression	! options		7969921	1					
ANR	7969946	UnaryOperator	!		7969921	0					
ANR	7969947	Identifier	options		7969921	1					
ANR	7969948	ReturnStatement	return ;	162:4:4303:4309	7969921	1	True				
ANR	7969949	ForStatement	for ( i = 0 ; i < num_options ; i ++ )		7969921	3					
ANR	7969950	ForInit	i = 0 ;	164:7:4319:4324	7969921	0	True				
ANR	7969951	AssignmentExpression	i = 0		7969921	0		=			
ANR	7969952	Identifier	i		7969921	0					
ANR	7969953	PrimaryExpression	0		7969921	1					
ANR	7969954	Condition	i < num_options	164:14:4326:4340	7969921	1	True				
ANR	7969955	RelationalExpression	i < num_options		7969921	0		<			
ANR	7969956	Identifier	i		7969921	0					
ANR	7969957	Identifier	num_options		7969921	1					
ANR	7969958	PostIncDecOperationExpression	i ++	164:31:4343:4346	7969921	2	True				
ANR	7969959	Identifier	i		7969921	0					
ANR	7969960	IncDec	++		7969921	1					
ANR	7969961	CompoundStatement		12:2:225:225	7969921	3					
ANR	7969962	ExpressionStatement	_cupsStrFree ( options [ i ] . name )	166:4:4357:4386	7969921	0	True				
ANR	7969963	CallExpression	_cupsStrFree ( options [ i ] . name )		7969921	0					
ANR	7969964	Callee	_cupsStrFree		7969921	0					
ANR	7969965	Identifier	_cupsStrFree		7969921	0					
ANR	7969966	ArgumentList	options [ i ] . name		7969921	1					
ANR	7969967	Argument	options [ i ] . name		7969921	0					
ANR	7969968	MemberAccess	options [ i ] . name		7969921	0					
ANR	7969969	ArrayIndexing	options [ i ]		7969921	0					
ANR	7969970	Identifier	options		7969921	0					
ANR	7969971	Identifier	i		7969921	1					
ANR	7969972	Identifier	name		7969921	1					
ANR	7969973	ExpressionStatement	_cupsStrFree ( options [ i ] . value )	167:4:4392:4422	7969921	1	True				
ANR	7969974	CallExpression	_cupsStrFree ( options [ i ] . value )		7969921	0					
ANR	7969975	Callee	_cupsStrFree		7969921	0					
ANR	7969976	Identifier	_cupsStrFree		7969921	0					
ANR	7969977	ArgumentList	options [ i ] . value		7969921	1					
ANR	7969978	Argument	options [ i ] . value		7969921	0					
ANR	7969979	MemberAccess	options [ i ] . value		7969921	0					
ANR	7969980	ArrayIndexing	options [ i ]		7969921	0					
ANR	7969981	Identifier	options		7969921	0					
ANR	7969982	Identifier	i		7969921	1					
ANR	7969983	Identifier	value		7969921	1					
ANR	7969984	ExpressionStatement	free ( options )	170:2:4431:4444	7969921	4	True				
ANR	7969985	CallExpression	free ( options )		7969921	0					
ANR	7969986	Callee	free		7969921	0					
ANR	7969987	Identifier	free		7969921	0					
ANR	7969988	ArgumentList	options		7969921	1					
ANR	7969989	Argument	options		7969921	0					
ANR	7969990	Identifier	options		7969921	0					
ANR	7969991	ReturnType	void		7969921	1					
ANR	7969992	Identifier	cupsFreeOptions		7969921	2					
ANR	7969993	ParameterList	"int num_options , cups_option_t * options"		7969921	3					
ANR	7969994	Parameter	int num_options	152:4:4011:4035	7969921	0	True				
ANR	7969995	ParameterType	int		7969921	0					
ANR	7969996	Identifier	num_options		7969921	1					
ANR	7969997	Parameter	cups_option_t * options	153:4:4071:4092	7969921	1	True				
ANR	7969998	ParameterType	cups_option_t *		7969921	0					
ANR	7969999	Identifier	options		7969921	1					
ANR	7970000	CFGEntryNode	ENTRY		7969921		True				
ANR	7970001	CFGExitNode	EXIT		7969921		True				
ANR	7970002	Symbol	* i		7969921						
ANR	7970003	Symbol	options [ i ] . name		7969921						
ANR	7970004	Symbol	options		7969921						
ANR	7970005	Symbol	i		7969921						
ANR	7970006	Symbol	options [ i ] . value		7969921						
ANR	7970007	Symbol	num_options		7969921						
ANR	7970008	Symbol	* options		7969921						
ANR	7970009	Function	cupsGetOption	178:0:4502:5331							
ANR	7970010	FunctionDef	"cupsGetOption (const char * name , int num_options , cups_option_t * options)"		7970009	0					
ANR	7970011	CompoundStatement		182:0:4740:5331	7970009	0					
ANR	7970012	IdentifierDeclStatement	"int diff , match ;"	183:2:4744:4790	7970009	0	True				
ANR	7970013	IdentifierDecl	diff		7970009	0					
ANR	7970014	IdentifierDeclType	int		7970009	0					
ANR	7970015	Identifier	diff		7970009	1					
ANR	7970016	IdentifierDecl	match		7970009	1					
ANR	7970017	IdentifierDeclType	int		7970009	0					
ANR	7970018	Identifier	match		7970009	1					
ANR	7970019	ExpressionStatement	"DEBUG_printf ( ( ""2cupsGetOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options ) )"	187:2:4820:4937	7970009	1	True				
ANR	7970020	CallExpression	"DEBUG_printf ( ( ""2cupsGetOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options ) )"		7970009	0					
ANR	7970021	Callee	DEBUG_printf		7970009	0					
ANR	7970022	Identifier	DEBUG_printf		7970009	0					
ANR	7970023	ArgumentList	"""2cupsGetOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options"		7970009	1					
ANR	7970024	Argument	"""2cupsGetOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options"		7970009	0					
ANR	7970025	Expression	"""2cupsGetOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options"		7970009	0					
ANR	7970026	PrimaryExpression	"""2cupsGetOption(name=\\""%s\\"", num_options=%d, options=%p)"""		7970009	0					
ANR	7970027	Expression	"name , num_options , options"		7970009	1					
ANR	7970028	Identifier	name		7970009	0					
ANR	7970029	Expression	"num_options , options"		7970009	1					
ANR	7970030	Identifier	num_options		7970009	0					
ANR	7970031	Identifier	options		7970009	1					
ANR	7970032	IfStatement	if ( ! name || num_options <= 0 || ! options )		7970009	2					
ANR	7970033	Condition	! name || num_options <= 0 || ! options	190:6:4946:4982	7970009	0	True				
ANR	7970034	OrExpression	! name || num_options <= 0 || ! options		7970009	0		||			
ANR	7970035	UnaryOperationExpression	! name		7970009	0					
ANR	7970036	UnaryOperator	!		7970009	0					
ANR	7970037	Identifier	name		7970009	1					
ANR	7970038	OrExpression	num_options <= 0 || ! options		7970009	1		||			
ANR	7970039	RelationalExpression	num_options <= 0		7970009	0		<=			
ANR	7970040	Identifier	num_options		7970009	0					
ANR	7970041	PrimaryExpression	0		7970009	1					
ANR	7970042	UnaryOperationExpression	! options		7970009	1					
ANR	7970043	UnaryOperator	!		7970009	0					
ANR	7970044	Identifier	options		7970009	1					
ANR	7970045	CompoundStatement		10:2:246:246	7970009	1					
ANR	7970046	ExpressionStatement	"DEBUG_puts ( ""3cupsGetOption: Returning NULL"" )"	192:4:4993:5037	7970009	0	True				
ANR	7970047	CallExpression	"DEBUG_puts ( ""3cupsGetOption: Returning NULL"" )"		7970009	0					
ANR	7970048	Callee	DEBUG_puts		7970009	0					
ANR	7970049	Identifier	DEBUG_puts		7970009	0					
ANR	7970050	ArgumentList	"""3cupsGetOption: Returning NULL"""		7970009	1					
ANR	7970051	Argument	"""3cupsGetOption: Returning NULL"""		7970009	0					
ANR	7970052	PrimaryExpression	"""3cupsGetOption: Returning NULL"""		7970009	0					
ANR	7970053	ReturnStatement	return ( NULL ) ;	193:4:5043:5056	7970009	1	True				
ANR	7970054	Identifier	NULL		7970009	0					
ANR	7970055	ExpressionStatement	"match = cups_find_option ( name , num_options , options , - 1 , & diff )"	196:2:5065:5128	7970009	3	True				
ANR	7970056	AssignmentExpression	"match = cups_find_option ( name , num_options , options , - 1 , & diff )"		7970009	0		=			
ANR	7970057	Identifier	match		7970009	0					
ANR	7970058	CallExpression	"cups_find_option ( name , num_options , options , - 1 , & diff )"		7970009	1					
ANR	7970059	Callee	cups_find_option		7970009	0					
ANR	7970060	Identifier	cups_find_option		7970009	0					
ANR	7970061	ArgumentList	name		7970009	1					
ANR	7970062	Argument	name		7970009	0					
ANR	7970063	Identifier	name		7970009	0					
ANR	7970064	Argument	num_options		7970009	1					
ANR	7970065	Identifier	num_options		7970009	0					
ANR	7970066	Argument	options		7970009	2					
ANR	7970067	Identifier	options		7970009	0					
ANR	7970068	Argument	- 1		7970009	3					
ANR	7970069	UnaryOperationExpression	- 1		7970009	0					
ANR	7970070	UnaryOperator	-		7970009	0					
ANR	7970071	PrimaryExpression	1		7970009	1					
ANR	7970072	Argument	& diff		7970009	4					
ANR	7970073	UnaryOperationExpression	& diff		7970009	0					
ANR	7970074	UnaryOperator	&		7970009	0					
ANR	7970075	Identifier	diff		7970009	1					
ANR	7970076	IfStatement	if ( ! diff )		7970009	4					
ANR	7970077	Condition	! diff	198:6:5137:5141	7970009	0	True				
ANR	7970078	UnaryOperationExpression	! diff		7970009	0					
ANR	7970079	UnaryOperator	!		7970009	0					
ANR	7970080	Identifier	diff		7970009	1					
ANR	7970081	CompoundStatement		18:2:405:405	7970009	1					
ANR	7970082	ExpressionStatement	"DEBUG_printf ( ( ""3cupsGetOption: Returning \\""%s\\"""" , options [ match ] . value ) )"	200:4:5152:5224	7970009	0	True				
ANR	7970083	CallExpression	"DEBUG_printf ( ( ""3cupsGetOption: Returning \\""%s\\"""" , options [ match ] . value ) )"		7970009	0					
ANR	7970084	Callee	DEBUG_printf		7970009	0					
ANR	7970085	Identifier	DEBUG_printf		7970009	0					
ANR	7970086	ArgumentList	"""3cupsGetOption: Returning \\""%s\\"""" , options [ match ] . value"		7970009	1					
ANR	7970087	Argument	"""3cupsGetOption: Returning \\""%s\\"""" , options [ match ] . value"		7970009	0					
ANR	7970088	Expression	"""3cupsGetOption: Returning \\""%s\\"""" , options [ match ] . value"		7970009	0					
ANR	7970089	PrimaryExpression	"""3cupsGetOption: Returning \\""%s\\"""""		7970009	0					
ANR	7970090	MemberAccess	options [ match ] . value		7970009	1					
ANR	7970091	ArrayIndexing	options [ match ]		7970009	0					
ANR	7970092	Identifier	options		7970009	0					
ANR	7970093	Identifier	match		7970009	1					
ANR	7970094	Identifier	value		7970009	1					
ANR	7970095	ReturnStatement	return ( options [ match ] . value ) ;	201:4:5230:5259	7970009	1	True				
ANR	7970096	MemberAccess	options [ match ] . value		7970009	0					
ANR	7970097	ArrayIndexing	options [ match ]		7970009	0					
ANR	7970098	Identifier	options		7970009	0					
ANR	7970099	Identifier	match		7970009	1					
ANR	7970100	Identifier	value		7970009	1					
ANR	7970101	ExpressionStatement	"DEBUG_puts ( ""3cupsGetOption: Returning NULL"" )"	204:2:5268:5312	7970009	5	True				
ANR	7970102	CallExpression	"DEBUG_puts ( ""3cupsGetOption: Returning NULL"" )"		7970009	0					
ANR	7970103	Callee	DEBUG_puts		7970009	0					
ANR	7970104	Identifier	DEBUG_puts		7970009	0					
ANR	7970105	ArgumentList	"""3cupsGetOption: Returning NULL"""		7970009	1					
ANR	7970106	Argument	"""3cupsGetOption: Returning NULL"""		7970009	0					
ANR	7970107	PrimaryExpression	"""3cupsGetOption: Returning NULL"""		7970009	0					
ANR	7970108	ReturnStatement	return ( NULL ) ;	205:2:5316:5329	7970009	6	True				
ANR	7970109	Identifier	NULL		7970009	0					
ANR	7970110	ReturnType	const char *		7970009	1					
ANR	7970111	Identifier	cupsGetOption		7970009	2					
ANR	7970112	ParameterList	"const char * name , int num_options , cups_option_t * options"		7970009	3					
ANR	7970113	Parameter	const char * name	179:14:4570:4588	7970009	0	True				
ANR	7970114	ParameterType	const char *		7970009	0					
ANR	7970115	Identifier	name		7970009	1					
ANR	7970116	Parameter	int num_options	180:14:4630:4654	7970009	1	True				
ANR	7970117	ParameterType	int		7970009	0					
ANR	7970118	Identifier	num_options		7970009	1					
ANR	7970119	Parameter	cups_option_t * options	181:14:4698:4719	7970009	2	True				
ANR	7970120	ParameterType	cups_option_t *		7970009	0					
ANR	7970121	Identifier	options		7970009	1					
ANR	7970122	CFGEntryNode	ENTRY		7970009		True				
ANR	7970123	CFGExitNode	EXIT		7970009		True				
ANR	7970124	Symbol	* match		7970009						
ANR	7970125	Symbol	NULL		7970009						
ANR	7970126	Symbol	options [ match ] . value		7970009						
ANR	7970127	Symbol	& diff		7970009						
ANR	7970128	Symbol	cups_find_option		7970009						
ANR	7970129	Symbol	name		7970009						
ANR	7970130	Symbol	options		7970009						
ANR	7970131	Symbol	match		7970009						
ANR	7970132	Symbol	diff		7970009						
ANR	7970133	Symbol	num_options		7970009						
ANR	7970134	Symbol	* options		7970009						
ANR	7970135	Function	cupsParseOptions	219:0:5712:9587							
ANR	7970136	FunctionDef	"cupsParseOptions (const char * arg , int num_options , cups_option_t * * options)"		7970135	0					
ANR	7970137	CompoundStatement		224:0:5940:9587	7970135	0					
ANR	7970138	IdentifierDeclStatement	"char * copyarg , * ptr , * name , * value , sep , quote ;"	225:2:5944:6133	7970135	0	True				
ANR	7970139	IdentifierDecl	* copyarg		7970135	0					
ANR	7970140	IdentifierDeclType	char *		7970135	0					
ANR	7970141	Identifier	copyarg		7970135	1					
ANR	7970142	IdentifierDecl	* ptr		7970135	1					
ANR	7970143	IdentifierDeclType	char *		7970135	0					
ANR	7970144	Identifier	ptr		7970135	1					
ANR	7970145	IdentifierDecl	* name		7970135	2					
ANR	7970146	IdentifierDeclType	char *		7970135	0					
ANR	7970147	Identifier	name		7970135	1					
ANR	7970148	IdentifierDecl	* value		7970135	3					
ANR	7970149	IdentifierDeclType	char *		7970135	0					
ANR	7970150	Identifier	value		7970135	1					
ANR	7970151	IdentifierDecl	sep		7970135	4					
ANR	7970152	IdentifierDeclType	char		7970135	0					
ANR	7970153	Identifier	sep		7970135	1					
ANR	7970154	IdentifierDecl	quote		7970135	5					
ANR	7970155	IdentifierDeclType	char		7970135	0					
ANR	7970156	Identifier	quote		7970135	1					
ANR	7970157	ExpressionStatement	"DEBUG_printf ( ( ""cupsParseOptions(arg=\\""%s\\"", num_options=%d, options=%p)"" , arg , num_options , options ) )"	233:2:6164:6281	7970135	1	True				
ANR	7970158	CallExpression	"DEBUG_printf ( ( ""cupsParseOptions(arg=\\""%s\\"", num_options=%d, options=%p)"" , arg , num_options , options ) )"		7970135	0					
ANR	7970159	Callee	DEBUG_printf		7970135	0					
ANR	7970160	Identifier	DEBUG_printf		7970135	0					
ANR	7970161	ArgumentList	"""cupsParseOptions(arg=\\""%s\\"", num_options=%d, options=%p)"" , arg , num_options , options"		7970135	1					
ANR	7970162	Argument	"""cupsParseOptions(arg=\\""%s\\"", num_options=%d, options=%p)"" , arg , num_options , options"		7970135	0					
ANR	7970163	Expression	"""cupsParseOptions(arg=\\""%s\\"", num_options=%d, options=%p)"" , arg , num_options , options"		7970135	0					
ANR	7970164	PrimaryExpression	"""cupsParseOptions(arg=\\""%s\\"", num_options=%d, options=%p)"""		7970135	0					
ANR	7970165	Expression	"arg , num_options , options"		7970135	1					
ANR	7970166	Identifier	arg		7970135	0					
ANR	7970167	Expression	"num_options , options"		7970135	1					
ANR	7970168	Identifier	num_options		7970135	0					
ANR	7970169	Identifier	options		7970135	1					
ANR	7970170	IfStatement	if ( ! arg )		7970135	2					
ANR	7970171	Condition	! arg	240:6:6325:6328	7970135	0	True				
ANR	7970172	UnaryOperationExpression	! arg		7970135	0					
ANR	7970173	UnaryOperator	!		7970135	0					
ANR	7970174	Identifier	arg		7970135	1					
ANR	7970175	CompoundStatement		18:2:392:392	7970135	1					
ANR	7970176	ExpressionStatement	"DEBUG_printf ( ( ""1cupsParseOptions: Returning %d"" , num_options ) )"	242:4:6339:6401	7970135	0	True				
ANR	7970177	CallExpression	"DEBUG_printf ( ( ""1cupsParseOptions: Returning %d"" , num_options ) )"		7970135	0					
ANR	7970178	Callee	DEBUG_printf		7970135	0					
ANR	7970179	Identifier	DEBUG_printf		7970135	0					
ANR	7970180	ArgumentList	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	1					
ANR	7970181	Argument	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	0					
ANR	7970182	Expression	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	0					
ANR	7970183	PrimaryExpression	"""1cupsParseOptions: Returning %d"""		7970135	0					
ANR	7970184	Identifier	num_options		7970135	1					
ANR	7970185	ReturnStatement	return ( num_options ) ;	243:4:6407:6427	7970135	1	True				
ANR	7970186	Identifier	num_options		7970135	0					
ANR	7970187	IfStatement	if ( ! options || num_options < 0 )		7970135	3					
ANR	7970188	Condition	! options || num_options < 0	246:6:6440:6466	7970135	0	True				
ANR	7970189	OrExpression	! options || num_options < 0		7970135	0		||			
ANR	7970190	UnaryOperationExpression	! options		7970135	0					
ANR	7970191	UnaryOperator	!		7970135	0					
ANR	7970192	Identifier	options		7970135	1					
ANR	7970193	RelationalExpression	num_options < 0		7970135	1		<			
ANR	7970194	Identifier	num_options		7970135	0					
ANR	7970195	PrimaryExpression	0		7970135	1					
ANR	7970196	CompoundStatement		24:2:530:530	7970135	1					
ANR	7970197	ExpressionStatement	"DEBUG_puts ( ""1cupsParseOptions: Returning 0"" )"	248:4:6477:6521	7970135	0	True				
ANR	7970198	CallExpression	"DEBUG_puts ( ""1cupsParseOptions: Returning 0"" )"		7970135	0					
ANR	7970199	Callee	DEBUG_puts		7970135	0					
ANR	7970200	Identifier	DEBUG_puts		7970135	0					
ANR	7970201	ArgumentList	"""1cupsParseOptions: Returning 0"""		7970135	1					
ANR	7970202	Argument	"""1cupsParseOptions: Returning 0"""		7970135	0					
ANR	7970203	PrimaryExpression	"""1cupsParseOptions: Returning 0"""		7970135	0					
ANR	7970204	ReturnStatement	return ( 0 ) ;	249:4:6527:6537	7970135	1	True				
ANR	7970205	PrimaryExpression	0		7970135	0					
ANR	7970206	IfStatement	if ( ( copyarg = strdup ( arg ) ) == NULL )		7970135	4					
ANR	7970207	Condition	( copyarg = strdup ( arg ) ) == NULL	256:6:6624:6654	7970135	0	True				
ANR	7970208	EqualityExpression	( copyarg = strdup ( arg ) ) == NULL		7970135	0		==			
ANR	7970209	AssignmentExpression	copyarg = strdup ( arg )		7970135	0		=			
ANR	7970210	Identifier	copyarg		7970135	0					
ANR	7970211	CallExpression	strdup ( arg )		7970135	1					
ANR	7970212	Callee	strdup		7970135	0					
ANR	7970213	Identifier	strdup		7970135	0					
ANR	7970214	ArgumentList	arg		7970135	1					
ANR	7970215	Argument	arg		7970135	0					
ANR	7970216	Identifier	arg		7970135	0					
ANR	7970217	Identifier	NULL		7970135	1					
ANR	7970218	CompoundStatement		34:2:718:718	7970135	1					
ANR	7970219	ExpressionStatement	"DEBUG_puts ( ""1cupsParseOptions: Unable to copy arg string"" )"	258:4:6665:6723	7970135	0	True				
ANR	7970220	CallExpression	"DEBUG_puts ( ""1cupsParseOptions: Unable to copy arg string"" )"		7970135	0					
ANR	7970221	Callee	DEBUG_puts		7970135	0					
ANR	7970222	Identifier	DEBUG_puts		7970135	0					
ANR	7970223	ArgumentList	"""1cupsParseOptions: Unable to copy arg string"""		7970135	1					
ANR	7970224	Argument	"""1cupsParseOptions: Unable to copy arg string"""		7970135	0					
ANR	7970225	PrimaryExpression	"""1cupsParseOptions: Unable to copy arg string"""		7970135	0					
ANR	7970226	ExpressionStatement	"DEBUG_printf ( ( ""1cupsParseOptions: Returning %d"" , num_options ) )"	259:4:6729:6791	7970135	1	True				
ANR	7970227	CallExpression	"DEBUG_printf ( ( ""1cupsParseOptions: Returning %d"" , num_options ) )"		7970135	0					
ANR	7970228	Callee	DEBUG_printf		7970135	0					
ANR	7970229	Identifier	DEBUG_printf		7970135	0					
ANR	7970230	ArgumentList	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	1					
ANR	7970231	Argument	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	0					
ANR	7970232	Expression	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	0					
ANR	7970233	PrimaryExpression	"""1cupsParseOptions: Returning %d"""		7970135	0					
ANR	7970234	Identifier	num_options		7970135	1					
ANR	7970235	ReturnStatement	return ( num_options ) ;	260:4:6797:6817	7970135	2	True				
ANR	7970236	Identifier	num_options		7970135	0					
ANR	7970237	IfStatement	if ( * copyarg == '{' )		7970135	5					
ANR	7970238	Condition	* copyarg == '{'	263:6:6830:6844	7970135	0	True				
ANR	7970239	EqualityExpression	* copyarg == '{'		7970135	0		==			
ANR	7970240	UnaryOperationExpression	* copyarg		7970135	0					
ANR	7970241	UnaryOperator	*		7970135	0					
ANR	7970242	Identifier	copyarg		7970135	1					
ANR	7970243	PrimaryExpression	'{'		7970135	1					
ANR	7970244	CompoundStatement		41:2:908:908	7970135	1					
ANR	7970245	IfStatement	if ( ( ptr = copyarg + strlen ( copyarg ) - 1 ) > copyarg && * ptr == '}' )		7970135	0					
ANR	7970246	Condition	( ptr = copyarg + strlen ( copyarg ) - 1 ) > copyarg && * ptr == '}'	269:8:6950:7011	7970135	0	True				
ANR	7970247	AndExpression	( ptr = copyarg + strlen ( copyarg ) - 1 ) > copyarg && * ptr == '}'		7970135	0		&&			
ANR	7970248	RelationalExpression	( ptr = copyarg + strlen ( copyarg ) - 1 ) > copyarg		7970135	0		>			
ANR	7970249	AssignmentExpression	ptr = copyarg + strlen ( copyarg ) - 1		7970135	0		=			
ANR	7970250	Identifier	ptr		7970135	0					
ANR	7970251	AdditiveExpression	copyarg + strlen ( copyarg ) - 1		7970135	1		+			
ANR	7970252	Identifier	copyarg		7970135	0					
ANR	7970253	AdditiveExpression	strlen ( copyarg ) - 1		7970135	1		-			
ANR	7970254	CallExpression	strlen ( copyarg )		7970135	0					
ANR	7970255	Callee	strlen		7970135	0					
ANR	7970256	Identifier	strlen		7970135	0					
ANR	7970257	ArgumentList	copyarg		7970135	1					
ANR	7970258	Argument	copyarg		7970135	0					
ANR	7970259	Identifier	copyarg		7970135	0					
ANR	7970260	PrimaryExpression	1		7970135	1					
ANR	7970261	Identifier	copyarg		7970135	1					
ANR	7970262	EqualityExpression	* ptr == '}'		7970135	1		==			
ANR	7970263	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970264	UnaryOperator	*		7970135	0					
ANR	7970265	Identifier	ptr		7970135	1					
ANR	7970266	PrimaryExpression	'}'		7970135	1					
ANR	7970267	CompoundStatement		47:4:1077:1077	7970135	1					
ANR	7970268	ExpressionStatement	* ptr = '\\0'	271:6:7026:7037	7970135	0	True				
ANR	7970269	AssignmentExpression	* ptr = '\\0'		7970135	0		=			
ANR	7970270	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970271	UnaryOperator	*		7970135	0					
ANR	7970272	Identifier	ptr		7970135	1					
ANR	7970273	PrimaryExpression	'\\0'		7970135	1					
ANR	7970274	ExpressionStatement	ptr = copyarg + 1	272:6:7045:7063	7970135	1	True				
ANR	7970275	AssignmentExpression	ptr = copyarg + 1		7970135	0		=			
ANR	7970276	Identifier	ptr		7970135	0					
ANR	7970277	AdditiveExpression	copyarg + 1		7970135	1		+			
ANR	7970278	Identifier	copyarg		7970135	0					
ANR	7970279	PrimaryExpression	1		7970135	1					
ANR	7970280	ElseStatement	else		7970135	0					
ANR	7970281	ExpressionStatement	ptr = copyarg	275:6:7086:7099	7970135	0	True				
ANR	7970282	AssignmentExpression	ptr = copyarg		7970135	0		=			
ANR	7970283	Identifier	ptr		7970135	0					
ANR	7970284	Identifier	copyarg		7970135	1					
ANR	7970285	ElseStatement	else		7970135	0					
ANR	7970286	ExpressionStatement	ptr = copyarg	278:4:7116:7129	7970135	0	True				
ANR	7970287	AssignmentExpression	ptr = copyarg		7970135	0		=			
ANR	7970288	Identifier	ptr		7970135	0					
ANR	7970289	Identifier	copyarg		7970135	1					
ANR	7970290	WhileStatement	while ( _cups_isspace ( * ptr ) )		7970135	6					
ANR	7970291	Condition	_cups_isspace ( * ptr )	284:9:7178:7196	7970135	0	True				
ANR	7970292	CallExpression	_cups_isspace ( * ptr )		7970135	0					
ANR	7970293	Callee	_cups_isspace		7970135	0					
ANR	7970294	Identifier	_cups_isspace		7970135	0					
ANR	7970295	ArgumentList	* ptr		7970135	1					
ANR	7970296	Argument	* ptr		7970135	0					
ANR	7970297	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970298	UnaryOperator	*		7970135	0					
ANR	7970299	Identifier	ptr		7970135	1					
ANR	7970300	ExpressionStatement	ptr ++	285:4:7203:7209	7970135	1	True				
ANR	7970301	PostIncDecOperationExpression	ptr ++		7970135	0					
ANR	7970302	Identifier	ptr		7970135	0					
ANR	7970303	IncDec	++		7970135	1					
ANR	7970304	WhileStatement	while ( * ptr != '\\0' )		7970135	7					
ANR	7970305	Condition	* ptr != '\\0'	291:9:7262:7273	7970135	0	True				
ANR	7970306	EqualityExpression	* ptr != '\\0'		7970135	0		!=			
ANR	7970307	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970308	UnaryOperator	*		7970135	0					
ANR	7970309	Identifier	ptr		7970135	1					
ANR	7970310	PrimaryExpression	'\\0'		7970135	1					
ANR	7970311	CompoundStatement		69:2:1337:1337	7970135	1					
ANR	7970312	ExpressionStatement	name = ptr	297:4:7355:7365	7970135	0	True				
ANR	7970313	AssignmentExpression	name = ptr		7970135	0		=			
ANR	7970314	Identifier	name		7970135	0					
ANR	7970315	Identifier	ptr		7970135	1					
ANR	7970316	WhileStatement	"while ( ! strchr ( ""\\f\\n\\r\\t\\v ="" , * ptr ) && * ptr )"		7970135	1					
ANR	7970317	Condition	"! strchr ( ""\\f\\n\\r\\t\\v ="" , * ptr ) && * ptr"	298:11:7378:7414	7970135	0	True				
ANR	7970318	AndExpression	"! strchr ( ""\\f\\n\\r\\t\\v ="" , * ptr ) && * ptr"		7970135	0		&&			
ANR	7970319	UnaryOperationExpression	"! strchr ( ""\\f\\n\\r\\t\\v ="" , * ptr )"		7970135	0					
ANR	7970320	UnaryOperator	!		7970135	0					
ANR	7970321	CallExpression	"strchr ( ""\\f\\n\\r\\t\\v ="" , * ptr )"		7970135	1					
ANR	7970322	Callee	strchr		7970135	0					
ANR	7970323	Identifier	strchr		7970135	0					
ANR	7970324	ArgumentList	"""\\f\\n\\r\\t\\v ="""		7970135	1					
ANR	7970325	Argument	"""\\f\\n\\r\\t\\v ="""		7970135	0					
ANR	7970326	PrimaryExpression	"""\\f\\n\\r\\t\\v ="""		7970135	0					
ANR	7970327	Argument	* ptr		7970135	1					
ANR	7970328	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970329	UnaryOperator	*		7970135	0					
ANR	7970330	Identifier	ptr		7970135	1					
ANR	7970331	UnaryOperationExpression	* ptr		7970135	1					
ANR	7970332	UnaryOperator	*		7970135	0					
ANR	7970333	Identifier	ptr		7970135	1					
ANR	7970334	ExpressionStatement	ptr ++	299:6:7423:7429	7970135	1	True				
ANR	7970335	PostIncDecOperationExpression	ptr ++		7970135	0					
ANR	7970336	Identifier	ptr		7970135	0					
ANR	7970337	IncDec	++		7970135	1					
ANR	7970338	IfStatement	if ( ptr == name )		7970135	2					
ANR	7970339	Condition	ptr == name	305:8:7483:7493	7970135	0	True				
ANR	7970340	EqualityExpression	ptr == name		7970135	0		==			
ANR	7970341	Identifier	ptr		7970135	0					
ANR	7970342	Identifier	name		7970135	1					
ANR	7970343	BreakStatement	break ;	306:6:7502:7507	7970135	1	True				
ANR	7970344	WhileStatement	while ( _cups_isspace ( * ptr ) )		7970135	3					
ANR	7970345	Condition	_cups_isspace ( * ptr )	312:11:7565:7583	7970135	0	True				
ANR	7970346	CallExpression	_cups_isspace ( * ptr )		7970135	0					
ANR	7970347	Callee	_cups_isspace		7970135	0					
ANR	7970348	Identifier	_cups_isspace		7970135	0					
ANR	7970349	ArgumentList	* ptr		7970135	1					
ANR	7970350	Argument	* ptr		7970135	0					
ANR	7970351	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970352	UnaryOperator	*		7970135	0					
ANR	7970353	Identifier	ptr		7970135	1					
ANR	7970354	ExpressionStatement	* ptr ++ = '\\0'	313:6:7592:7605	7970135	1	True				
ANR	7970355	AssignmentExpression	* ptr ++ = '\\0'		7970135	0		=			
ANR	7970356	UnaryOperationExpression	* ptr ++		7970135	0					
ANR	7970357	UnaryOperator	*		7970135	0					
ANR	7970358	PostIncDecOperationExpression	ptr ++		7970135	1					
ANR	7970359	Identifier	ptr		7970135	0					
ANR	7970360	IncDec	++		7970135	1					
ANR	7970361	PrimaryExpression	'\\0'		7970135	1					
ANR	7970362	IfStatement	if ( ( sep = * ptr ) == '=' )		7970135	4					
ANR	7970363	Condition	( sep = * ptr ) == '='	315:8:7616:7634	7970135	0	True				
ANR	7970364	EqualityExpression	( sep = * ptr ) == '='		7970135	0		==			
ANR	7970365	AssignmentExpression	sep = * ptr		7970135	0		=			
ANR	7970366	Identifier	sep		7970135	0					
ANR	7970367	UnaryOperationExpression	* ptr		7970135	1					
ANR	7970368	UnaryOperator	*		7970135	0					
ANR	7970369	Identifier	ptr		7970135	1					
ANR	7970370	PrimaryExpression	'='		7970135	1					
ANR	7970371	ExpressionStatement	* ptr ++ = '\\0'	316:6:7643:7656	7970135	1	True				
ANR	7970372	AssignmentExpression	* ptr ++ = '\\0'		7970135	0		=			
ANR	7970373	UnaryOperationExpression	* ptr ++		7970135	0					
ANR	7970374	UnaryOperator	*		7970135	0					
ANR	7970375	PostIncDecOperationExpression	ptr ++		7970135	1					
ANR	7970376	Identifier	ptr		7970135	0					
ANR	7970377	IncDec	++		7970135	1					
ANR	7970378	PrimaryExpression	'\\0'		7970135	1					
ANR	7970379	ExpressionStatement	"DEBUG_printf ( ( ""2cupsParseOptions: name=\\""%s\\"""" , name ) )"	318:4:7663:7717	7970135	5	True				
ANR	7970380	CallExpression	"DEBUG_printf ( ( ""2cupsParseOptions: name=\\""%s\\"""" , name ) )"		7970135	0					
ANR	7970381	Callee	DEBUG_printf		7970135	0					
ANR	7970382	Identifier	DEBUG_printf		7970135	0					
ANR	7970383	ArgumentList	"""2cupsParseOptions: name=\\""%s\\"""" , name"		7970135	1					
ANR	7970384	Argument	"""2cupsParseOptions: name=\\""%s\\"""" , name"		7970135	0					
ANR	7970385	Expression	"""2cupsParseOptions: name=\\""%s\\"""" , name"		7970135	0					
ANR	7970386	PrimaryExpression	"""2cupsParseOptions: name=\\""%s\\"""""		7970135	0					
ANR	7970387	Identifier	name		7970135	1					
ANR	7970388	IfStatement	if ( sep != '=' )		7970135	6					
ANR	7970389	Condition	sep != '='	320:8:7728:7737	7970135	0	True				
ANR	7970390	EqualityExpression	sep != '='		7970135	0		!=			
ANR	7970391	Identifier	sep		7970135	0					
ANR	7970392	PrimaryExpression	'='		7970135	1					
ANR	7970393	CompoundStatement		98:4:1803:1803	7970135	1					
ANR	7970394	IfStatement	"if ( ! _cups_strncasecmp ( name , ""no"" , 2 ) )"		7970135	0					
ANR	7970395	Condition	"! _cups_strncasecmp ( name , ""no"" , 2 )"	326:10:7800:7832	7970135	0	True				
ANR	7970396	UnaryOperationExpression	"! _cups_strncasecmp ( name , ""no"" , 2 )"		7970135	0					
ANR	7970397	UnaryOperator	!		7970135	0					
ANR	7970398	CallExpression	"_cups_strncasecmp ( name , ""no"" , 2 )"		7970135	1					
ANR	7970399	Callee	_cups_strncasecmp		7970135	0					
ANR	7970400	Identifier	_cups_strncasecmp		7970135	0					
ANR	7970401	ArgumentList	name		7970135	1					
ANR	7970402	Argument	name		7970135	0					
ANR	7970403	Identifier	name		7970135	0					
ANR	7970404	Argument	"""no"""		7970135	1					
ANR	7970405	PrimaryExpression	"""no"""		7970135	0					
ANR	7970406	Argument	2		7970135	2					
ANR	7970407	PrimaryExpression	2		7970135	0					
ANR	7970408	ExpressionStatement	"num_options = cupsAddOption ( name + 2 , ""false"" , num_options , options )"	327:8:7843:7940	7970135	1	True				
ANR	7970409	AssignmentExpression	"num_options = cupsAddOption ( name + 2 , ""false"" , num_options , options )"		7970135	0		=			
ANR	7970410	Identifier	num_options		7970135	0					
ANR	7970411	CallExpression	"cupsAddOption ( name + 2 , ""false"" , num_options , options )"		7970135	1					
ANR	7970412	Callee	cupsAddOption		7970135	0					
ANR	7970413	Identifier	cupsAddOption		7970135	0					
ANR	7970414	ArgumentList	name + 2		7970135	1					
ANR	7970415	Argument	name + 2		7970135	0					
ANR	7970416	AdditiveExpression	name + 2		7970135	0		+			
ANR	7970417	Identifier	name		7970135	0					
ANR	7970418	PrimaryExpression	2		7970135	1					
ANR	7970419	Argument	"""false"""		7970135	1					
ANR	7970420	PrimaryExpression	"""false"""		7970135	0					
ANR	7970421	Argument	num_options		7970135	2					
ANR	7970422	Identifier	num_options		7970135	0					
ANR	7970423	Argument	options		7970135	3					
ANR	7970424	Identifier	options		7970135	0					
ANR	7970425	ElseStatement	else		7970135	0					
ANR	7970426	ExpressionStatement	"num_options = cupsAddOption ( name , ""true"" , num_options , options )"	330:8:7961:8024	7970135	0	True				
ANR	7970427	AssignmentExpression	"num_options = cupsAddOption ( name , ""true"" , num_options , options )"		7970135	0		=			
ANR	7970428	Identifier	num_options		7970135	0					
ANR	7970429	CallExpression	"cupsAddOption ( name , ""true"" , num_options , options )"		7970135	1					
ANR	7970430	Callee	cupsAddOption		7970135	0					
ANR	7970431	Identifier	cupsAddOption		7970135	0					
ANR	7970432	ArgumentList	name		7970135	1					
ANR	7970433	Argument	name		7970135	0					
ANR	7970434	Identifier	name		7970135	0					
ANR	7970435	Argument	"""true"""		7970135	1					
ANR	7970436	PrimaryExpression	"""true"""		7970135	0					
ANR	7970437	Argument	num_options		7970135	2					
ANR	7970438	Identifier	num_options		7970135	0					
ANR	7970439	Argument	options		7970135	3					
ANR	7970440	Identifier	options		7970135	0					
ANR	7970441	ContinueStatement	continue ;	332:6:8033:8041	7970135	1	True				
ANR	7970442	ExpressionStatement	value = ptr	339:4:8106:8117	7970135	7	True				
ANR	7970443	AssignmentExpression	value = ptr		7970135	0		=			
ANR	7970444	Identifier	value		7970135	0					
ANR	7970445	Identifier	ptr		7970135	1					
ANR	7970446	WhileStatement	while ( * ptr && ! _cups_isspace ( * ptr ) )		7970135	8					
ANR	7970447	Condition	* ptr && ! _cups_isspace ( * ptr )	341:11:8131:8158	7970135	0	True				
ANR	7970448	AndExpression	* ptr && ! _cups_isspace ( * ptr )		7970135	0		&&			
ANR	7970449	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970450	UnaryOperator	*		7970135	0					
ANR	7970451	Identifier	ptr		7970135	1					
ANR	7970452	UnaryOperationExpression	! _cups_isspace ( * ptr )		7970135	1					
ANR	7970453	UnaryOperator	!		7970135	0					
ANR	7970454	CallExpression	_cups_isspace ( * ptr )		7970135	1					
ANR	7970455	Callee	_cups_isspace		7970135	0					
ANR	7970456	Identifier	_cups_isspace		7970135	0					
ANR	7970457	ArgumentList	* ptr		7970135	1					
ANR	7970458	Argument	* ptr		7970135	0					
ANR	7970459	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970460	UnaryOperator	*		7970135	0					
ANR	7970461	Identifier	ptr		7970135	1					
ANR	7970462	CompoundStatement		119:4:2224:2224	7970135	1					
ANR	7970463	IfStatement	"if ( * ptr == ',' )"		7970135	0					
ANR	7970464	Condition	"* ptr == ','"	343:10:8177:8187	7970135	0	True				
ANR	7970465	EqualityExpression	"* ptr == ','"		7970135	0		==			
ANR	7970466	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970467	UnaryOperator	*		7970135	0					
ANR	7970468	Identifier	ptr		7970135	1					
ANR	7970469	PrimaryExpression	"','"		7970135	1					
ANR	7970470	ExpressionStatement	ptr ++	344:8:8198:8204	7970135	1	True				
ANR	7970471	PostIncDecOperationExpression	ptr ++		7970135	0					
ANR	7970472	Identifier	ptr		7970135	0					
ANR	7970473	IncDec	++		7970135	1					
ANR	7970474	ElseStatement	else		7970135	0					
ANR	7970475	IfStatement	"if ( * ptr == '\\'' || * ptr == '\\""' )"		7970135	0					
ANR	7970476	Condition	"* ptr == '\\'' || * ptr == '\\""'"	345:15:8221:8248	7970135	0	True				
ANR	7970477	OrExpression	"* ptr == '\\'' || * ptr == '\\""'"		7970135	0		||			
ANR	7970478	EqualityExpression	* ptr == '\\''		7970135	0		==			
ANR	7970479	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970480	UnaryOperator	*		7970135	0					
ANR	7970481	Identifier	ptr		7970135	1					
ANR	7970482	PrimaryExpression	'\\''		7970135	1					
ANR	7970483	EqualityExpression	"* ptr == '\\""'"		7970135	1		==			
ANR	7970484	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970485	UnaryOperator	*		7970135	0					
ANR	7970486	Identifier	ptr		7970135	1					
ANR	7970487	PrimaryExpression	"'\\""'"		7970135	1					
ANR	7970488	CompoundStatement		123:6:2316:2316	7970135	1					
ANR	7970489	ExpressionStatement	quote = * ptr	351:1:8304:8316	7970135	0	True				
ANR	7970490	AssignmentExpression	quote = * ptr		7970135	0		=			
ANR	7970491	Identifier	quote		7970135	0					
ANR	7970492	UnaryOperationExpression	* ptr		7970135	1					
ANR	7970493	UnaryOperator	*		7970135	0					
ANR	7970494	Identifier	ptr		7970135	1					
ANR	7970495	ExpressionStatement	"_cups_strcpy ( ptr , ptr + 1 )"	352:1:8319:8345	7970135	1	True				
ANR	7970496	CallExpression	"_cups_strcpy ( ptr , ptr + 1 )"		7970135	0					
ANR	7970497	Callee	_cups_strcpy		7970135	0					
ANR	7970498	Identifier	_cups_strcpy		7970135	0					
ANR	7970499	ArgumentList	ptr		7970135	1					
ANR	7970500	Argument	ptr		7970135	0					
ANR	7970501	Identifier	ptr		7970135	0					
ANR	7970502	Argument	ptr + 1		7970135	1					
ANR	7970503	AdditiveExpression	ptr + 1		7970135	0		+			
ANR	7970504	Identifier	ptr		7970135	0					
ANR	7970505	PrimaryExpression	1		7970135	1					
ANR	7970506	WhileStatement	while ( * ptr != quote && * ptr )		7970135	2					
ANR	7970507	Condition	* ptr != quote && * ptr	354:8:8356:8376	7970135	0	True				
ANR	7970508	AndExpression	* ptr != quote && * ptr		7970135	0		&&			
ANR	7970509	EqualityExpression	* ptr != quote		7970135	0		!=			
ANR	7970510	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970511	UnaryOperator	*		7970135	0					
ANR	7970512	Identifier	ptr		7970135	1					
ANR	7970513	Identifier	quote		7970135	1					
ANR	7970514	UnaryOperationExpression	* ptr		7970135	1					
ANR	7970515	UnaryOperator	*		7970135	0					
ANR	7970516	Identifier	ptr		7970135	1					
ANR	7970517	CompoundStatement		132:1:2439:2439	7970135	1					
ANR	7970518	IfStatement	if ( * ptr == '\\\\' && ptr [ 1 ] )		7970135	0					
ANR	7970519	Condition	* ptr == '\\\\' && ptr [ 1 ]	356:7:8389:8410	7970135	0	True				
ANR	7970520	AndExpression	* ptr == '\\\\' && ptr [ 1 ]		7970135	0		&&			
ANR	7970521	EqualityExpression	* ptr == '\\\\'		7970135	0		==			
ANR	7970522	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970523	UnaryOperator	*		7970135	0					
ANR	7970524	Identifier	ptr		7970135	1					
ANR	7970525	PrimaryExpression	'\\\\'		7970135	1					
ANR	7970526	ArrayIndexing	ptr [ 1 ]		7970135	1					
ANR	7970527	Identifier	ptr		7970135	0					
ANR	7970528	PrimaryExpression	1		7970135	1					
ANR	7970529	ExpressionStatement	"_cups_strcpy ( ptr , ptr + 1 )"	357:5:8418:8444	7970135	1	True				
ANR	7970530	CallExpression	"_cups_strcpy ( ptr , ptr + 1 )"		7970135	0					
ANR	7970531	Callee	_cups_strcpy		7970135	0					
ANR	7970532	Identifier	_cups_strcpy		7970135	0					
ANR	7970533	ArgumentList	ptr		7970135	1					
ANR	7970534	Argument	ptr		7970135	0					
ANR	7970535	Identifier	ptr		7970135	0					
ANR	7970536	Argument	ptr + 1		7970135	1					
ANR	7970537	AdditiveExpression	ptr + 1		7970135	0		+			
ANR	7970538	Identifier	ptr		7970135	0					
ANR	7970539	PrimaryExpression	1		7970135	1					
ANR	7970540	ExpressionStatement	ptr ++	359:3:8450:8456	7970135	1	True				
ANR	7970541	PostIncDecOperationExpression	ptr ++		7970135	0					
ANR	7970542	Identifier	ptr		7970135	0					
ANR	7970543	IncDec	++		7970135	1					
ANR	7970544	IfStatement	if ( * ptr )		7970135	3					
ANR	7970545	Condition	* ptr	362:5:8467:8470	7970135	0	True				
ANR	7970546	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970547	UnaryOperator	*		7970135	0					
ANR	7970548	Identifier	ptr		7970135	1					
ANR	7970549	ExpressionStatement	"_cups_strcpy ( ptr , ptr + 1 )"	363:3:8476:8502	7970135	1	True				
ANR	7970550	CallExpression	"_cups_strcpy ( ptr , ptr + 1 )"		7970135	0					
ANR	7970551	Callee	_cups_strcpy		7970135	0					
ANR	7970552	Identifier	_cups_strcpy		7970135	0					
ANR	7970553	ArgumentList	ptr		7970135	1					
ANR	7970554	Argument	ptr		7970135	0					
ANR	7970555	Identifier	ptr		7970135	0					
ANR	7970556	Argument	ptr + 1		7970135	1					
ANR	7970557	AdditiveExpression	ptr + 1		7970135	0		+			
ANR	7970558	Identifier	ptr		7970135	0					
ANR	7970559	PrimaryExpression	1		7970135	1					
ANR	7970560	ElseStatement	else		7970135	0					
ANR	7970561	IfStatement	if ( * ptr == '{' )		7970135	0					
ANR	7970562	Condition	* ptr == '{'	365:15:8527:8537	7970135	0	True				
ANR	7970563	EqualityExpression	* ptr == '{'		7970135	0		==			
ANR	7970564	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970565	UnaryOperator	*		7970135	0					
ANR	7970566	Identifier	ptr		7970135	1					
ANR	7970567	PrimaryExpression	'{'		7970135	1					
ANR	7970568	CompoundStatement		148:1:2646:2655	7970135	1					
ANR	7970569	IdentifierDeclStatement	int depth ;	371:1:8587:8596	7970135	0	True				
ANR	7970570	IdentifierDecl	depth		7970135	0					
ANR	7970571	IdentifierDeclType	int		7970135	0					
ANR	7970572	Identifier	depth		7970135	1					
ANR	7970573	ForStatement	for ( depth = 0 ; * ptr ; ptr ++ )		7970135	1					
ANR	7970574	ForInit	depth = 0 ;	373:6:8605:8614	7970135	0	True				
ANR	7970575	AssignmentExpression	depth = 0		7970135	0		=			
ANR	7970576	Identifier	depth		7970135	0					
ANR	7970577	PrimaryExpression	0		7970135	1					
ANR	7970578	Condition	* ptr	373:17:8616:8619	7970135	1	True				
ANR	7970579	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970580	UnaryOperator	*		7970135	0					
ANR	7970581	Identifier	ptr		7970135	1					
ANR	7970582	PostIncDecOperationExpression	ptr ++	373:23:8622:8627	7970135	2	True				
ANR	7970583	Identifier	ptr		7970135	0					
ANR	7970584	IncDec	++		7970135	1					
ANR	7970585	CompoundStatement		151:1:2690:2690	7970135	3					
ANR	7970586	IfStatement	if ( * ptr == '{' )		7970135	0					
ANR	7970587	Condition	* ptr == '{'	375:7:8640:8650	7970135	0	True				
ANR	7970588	EqualityExpression	* ptr == '{'		7970135	0		==			
ANR	7970589	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970590	UnaryOperator	*		7970135	0					
ANR	7970591	Identifier	ptr		7970135	1					
ANR	7970592	PrimaryExpression	'{'		7970135	1					
ANR	7970593	ExpressionStatement	depth ++	376:5:8658:8666	7970135	1	True				
ANR	7970594	PostIncDecOperationExpression	depth ++		7970135	0					
ANR	7970595	Identifier	depth		7970135	0					
ANR	7970596	IncDec	++		7970135	1					
ANR	7970597	ElseStatement	else		7970135	0					
ANR	7970598	IfStatement	if ( * ptr == '}' )		7970135	0					
ANR	7970599	Condition	* ptr == '}'	377:12:8680:8690	7970135	0	True				
ANR	7970600	EqualityExpression	* ptr == '}'		7970135	0		==			
ANR	7970601	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970602	UnaryOperator	*		7970135	0					
ANR	7970603	Identifier	ptr		7970135	1					
ANR	7970604	PrimaryExpression	'}'		7970135	1					
ANR	7970605	CompoundStatement		155:3:2755:2755	7970135	1					
ANR	7970606	ExpressionStatement	depth --	379:5:8703:8711	7970135	0	True				
ANR	7970607	PostIncDecOperationExpression	depth --		7970135	0					
ANR	7970608	Identifier	depth		7970135	0					
ANR	7970609	IncDec	--		7970135	1					
ANR	7970610	IfStatement	if ( ! depth )		7970135	1					
ANR	7970611	Condition	! depth	380:9:8722:8727	7970135	0	True				
ANR	7970612	UnaryOperationExpression	! depth		7970135	0					
ANR	7970613	UnaryOperator	!		7970135	0					
ANR	7970614	Identifier	depth		7970135	1					
ANR	7970615	CompoundStatement		158:5:2794:2794	7970135	1					
ANR	7970616	ExpressionStatement	ptr ++	382:7:8744:8750	7970135	0	True				
ANR	7970617	PostIncDecOperationExpression	ptr ++		7970135	0					
ANR	7970618	Identifier	ptr		7970135	0					
ANR	7970619	IncDec	++		7970135	1					
ANR	7970620	BreakStatement	break ;	383:7:8759:8764	7970135	1	True				
ANR	7970621	ElseStatement	else		7970135	0					
ANR	7970622	IfStatement	if ( * ptr == '\\\\' && ptr [ 1 ] )		7970135	0					
ANR	7970623	Condition	* ptr == '\\\\' && ptr [ 1 ]	386:12:8790:8811	7970135	0	True				
ANR	7970624	AndExpression	* ptr == '\\\\' && ptr [ 1 ]		7970135	0		&&			
ANR	7970625	EqualityExpression	* ptr == '\\\\'		7970135	0		==			
ANR	7970626	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970627	UnaryOperator	*		7970135	0					
ANR	7970628	Identifier	ptr		7970135	1					
ANR	7970629	PrimaryExpression	'\\\\'		7970135	1					
ANR	7970630	ArrayIndexing	ptr [ 1 ]		7970135	1					
ANR	7970631	Identifier	ptr		7970135	0					
ANR	7970632	PrimaryExpression	1		7970135	1					
ANR	7970633	ExpressionStatement	"_cups_strcpy ( ptr , ptr + 1 )"	387:5:8819:8845	7970135	1	True				
ANR	7970634	CallExpression	"_cups_strcpy ( ptr , ptr + 1 )"		7970135	0					
ANR	7970635	Callee	_cups_strcpy		7970135	0					
ANR	7970636	Identifier	_cups_strcpy		7970135	0					
ANR	7970637	ArgumentList	ptr		7970135	1					
ANR	7970638	Argument	ptr		7970135	0					
ANR	7970639	Identifier	ptr		7970135	0					
ANR	7970640	Argument	ptr + 1		7970135	1					
ANR	7970641	AdditiveExpression	ptr + 1		7970135	0		+			
ANR	7970642	Identifier	ptr		7970135	0					
ANR	7970643	PrimaryExpression	1		7970135	1					
ANR	7970644	ElseStatement	else		7970135	0					
ANR	7970645	CompoundStatement		168:6:2934:2934	7970135	0					
ANR	7970646	WhileStatement	while ( * ptr && ! _cups_isspace ( * ptr ) )		7970135	0					
ANR	7970647	Condition	* ptr && ! _cups_isspace ( * ptr )	396:8:8936:8963	7970135	0	True				
ANR	7970648	AndExpression	* ptr && ! _cups_isspace ( * ptr )		7970135	0		&&			
ANR	7970649	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970650	UnaryOperator	*		7970135	0					
ANR	7970651	Identifier	ptr		7970135	1					
ANR	7970652	UnaryOperationExpression	! _cups_isspace ( * ptr )		7970135	1					
ANR	7970653	UnaryOperator	!		7970135	0					
ANR	7970654	CallExpression	_cups_isspace ( * ptr )		7970135	1					
ANR	7970655	Callee	_cups_isspace		7970135	0					
ANR	7970656	Identifier	_cups_isspace		7970135	0					
ANR	7970657	ArgumentList	* ptr		7970135	1					
ANR	7970658	Argument	* ptr		7970135	0					
ANR	7970659	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970660	UnaryOperator	*		7970135	0					
ANR	7970661	Identifier	ptr		7970135	1					
ANR	7970662	CompoundStatement		174:1:3026:3026	7970135	1					
ANR	7970663	IfStatement	if ( * ptr == '\\\\' && ptr [ 1 ] )		7970135	0					
ANR	7970664	Condition	* ptr == '\\\\' && ptr [ 1 ]	398:7:8976:8997	7970135	0	True				
ANR	7970665	AndExpression	* ptr == '\\\\' && ptr [ 1 ]		7970135	0		&&			
ANR	7970666	EqualityExpression	* ptr == '\\\\'		7970135	0		==			
ANR	7970667	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970668	UnaryOperator	*		7970135	0					
ANR	7970669	Identifier	ptr		7970135	1					
ANR	7970670	PrimaryExpression	'\\\\'		7970135	1					
ANR	7970671	ArrayIndexing	ptr [ 1 ]		7970135	1					
ANR	7970672	Identifier	ptr		7970135	0					
ANR	7970673	PrimaryExpression	1		7970135	1					
ANR	7970674	ExpressionStatement	"_cups_strcpy ( ptr , ptr + 1 )"	399:5:9005:9031	7970135	1	True				
ANR	7970675	CallExpression	"_cups_strcpy ( ptr , ptr + 1 )"		7970135	0					
ANR	7970676	Callee	_cups_strcpy		7970135	0					
ANR	7970677	Identifier	_cups_strcpy		7970135	0					
ANR	7970678	ArgumentList	ptr		7970135	1					
ANR	7970679	Argument	ptr		7970135	0					
ANR	7970680	Identifier	ptr		7970135	0					
ANR	7970681	Argument	ptr + 1		7970135	1					
ANR	7970682	AdditiveExpression	ptr + 1		7970135	0		+			
ANR	7970683	Identifier	ptr		7970135	0					
ANR	7970684	PrimaryExpression	1		7970135	1					
ANR	7970685	ExpressionStatement	ptr ++	401:3:9037:9043	7970135	1	True				
ANR	7970686	PostIncDecOperationExpression	ptr ++		7970135	0					
ANR	7970687	Identifier	ptr		7970135	0					
ANR	7970688	IncDec	++		7970135	1					
ANR	7970689	IfStatement	if ( * ptr != '\\0' )		7970135	9					
ANR	7970690	Condition	* ptr != '\\0'	406:8:9071:9082	7970135	0	True				
ANR	7970691	EqualityExpression	* ptr != '\\0'		7970135	0		!=			
ANR	7970692	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970693	UnaryOperator	*		7970135	0					
ANR	7970694	Identifier	ptr		7970135	1					
ANR	7970695	PrimaryExpression	'\\0'		7970135	1					
ANR	7970696	ExpressionStatement	* ptr ++ = '\\0'	407:6:9091:9104	7970135	1	True				
ANR	7970697	AssignmentExpression	* ptr ++ = '\\0'		7970135	0		=			
ANR	7970698	UnaryOperationExpression	* ptr ++		7970135	0					
ANR	7970699	UnaryOperator	*		7970135	0					
ANR	7970700	PostIncDecOperationExpression	ptr ++		7970135	1					
ANR	7970701	Identifier	ptr		7970135	0					
ANR	7970702	IncDec	++		7970135	1					
ANR	7970703	PrimaryExpression	'\\0'		7970135	1					
ANR	7970704	ExpressionStatement	"DEBUG_printf ( ( ""2cupsParseOptions: value=\\""%s\\"""" , value ) )"	409:4:9111:9167	7970135	10	True				
ANR	7970705	CallExpression	"DEBUG_printf ( ( ""2cupsParseOptions: value=\\""%s\\"""" , value ) )"		7970135	0					
ANR	7970706	Callee	DEBUG_printf		7970135	0					
ANR	7970707	Identifier	DEBUG_printf		7970135	0					
ANR	7970708	ArgumentList	"""2cupsParseOptions: value=\\""%s\\"""" , value"		7970135	1					
ANR	7970709	Argument	"""2cupsParseOptions: value=\\""%s\\"""" , value"		7970135	0					
ANR	7970710	Expression	"""2cupsParseOptions: value=\\""%s\\"""" , value"		7970135	0					
ANR	7970711	PrimaryExpression	"""2cupsParseOptions: value=\\""%s\\"""""		7970135	0					
ANR	7970712	Identifier	value		7970135	1					
ANR	7970713	WhileStatement	while ( _cups_isspace ( * ptr ) )		7970135	11					
ANR	7970714	Condition	_cups_isspace ( * ptr )	415:11:9229:9247	7970135	0	True				
ANR	7970715	CallExpression	_cups_isspace ( * ptr )		7970135	0					
ANR	7970716	Callee	_cups_isspace		7970135	0					
ANR	7970717	Identifier	_cups_isspace		7970135	0					
ANR	7970718	ArgumentList	* ptr		7970135	1					
ANR	7970719	Argument	* ptr		7970135	0					
ANR	7970720	UnaryOperationExpression	* ptr		7970135	0					
ANR	7970721	UnaryOperator	*		7970135	0					
ANR	7970722	Identifier	ptr		7970135	1					
ANR	7970723	ExpressionStatement	ptr ++	416:6:9256:9262	7970135	1	True				
ANR	7970724	PostIncDecOperationExpression	ptr ++		7970135	0					
ANR	7970725	Identifier	ptr		7970135	0					
ANR	7970726	IncDec	++		7970135	1					
ANR	7970727	ExpressionStatement	"num_options = cupsAddOption ( name , value , num_options , options )"	422:4:9313:9375	7970135	12	True				
ANR	7970728	AssignmentExpression	"num_options = cupsAddOption ( name , value , num_options , options )"		7970135	0		=			
ANR	7970729	Identifier	num_options		7970135	0					
ANR	7970730	CallExpression	"cupsAddOption ( name , value , num_options , options )"		7970135	1					
ANR	7970731	Callee	cupsAddOption		7970135	0					
ANR	7970732	Identifier	cupsAddOption		7970135	0					
ANR	7970733	ArgumentList	name		7970135	1					
ANR	7970734	Argument	name		7970135	0					
ANR	7970735	Identifier	name		7970135	0					
ANR	7970736	Argument	value		7970135	1					
ANR	7970737	Identifier	value		7970135	0					
ANR	7970738	Argument	num_options		7970135	2					
ANR	7970739	Identifier	num_options		7970135	0					
ANR	7970740	Argument	options		7970135	3					
ANR	7970741	Identifier	options		7970135	0					
ANR	7970742	ExpressionStatement	free ( copyarg )	430:2:9480:9493	7970135	8	True				
ANR	7970743	CallExpression	free ( copyarg )		7970135	0					
ANR	7970744	Callee	free		7970135	0					
ANR	7970745	Identifier	free		7970135	0					
ANR	7970746	ArgumentList	copyarg		7970135	1					
ANR	7970747	Argument	copyarg		7970135	0					
ANR	7970748	Identifier	copyarg		7970135	0					
ANR	7970749	ExpressionStatement	"DEBUG_printf ( ( ""1cupsParseOptions: Returning %d"" , num_options ) )"	432:2:9498:9560	7970135	9	True				
ANR	7970750	CallExpression	"DEBUG_printf ( ( ""1cupsParseOptions: Returning %d"" , num_options ) )"		7970135	0					
ANR	7970751	Callee	DEBUG_printf		7970135	0					
ANR	7970752	Identifier	DEBUG_printf		7970135	0					
ANR	7970753	ArgumentList	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	1					
ANR	7970754	Argument	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	0					
ANR	7970755	Expression	"""1cupsParseOptions: Returning %d"" , num_options"		7970135	0					
ANR	7970756	PrimaryExpression	"""1cupsParseOptions: Returning %d"""		7970135	0					
ANR	7970757	Identifier	num_options		7970135	1					
ANR	7970758	ReturnStatement	return ( num_options ) ;	434:2:9565:9585	7970135	10	True				
ANR	7970759	Identifier	num_options		7970135	0					
ANR	7970760	ReturnType	int		7970135	1					
ANR	7970761	Identifier	cupsParseOptions		7970135	2					
ANR	7970762	ParameterList	"const char * arg , int num_options , cups_option_t * * options"		7970135	3					
ANR	7970763	Parameter	const char * arg	221:4:5776:5793	7970135	0	True				
ANR	7970764	ParameterType	const char *		7970135	0					
ANR	7970765	Identifier	arg		7970135	1					
ANR	7970766	Parameter	int num_options	222:4:5830:5854	7970135	1	True				
ANR	7970767	ParameterType	int		7970135	0					
ANR	7970768	Identifier	num_options		7970135	1					
ANR	7970769	Parameter	cups_option_t * * options	223:4:5890:5912	7970135	2	True				
ANR	7970770	ParameterType	cups_option_t * *		7970135	0					
ANR	7970771	Identifier	options		7970135	1					
ANR	7970772	CFGEntryNode	ENTRY		7970135		True				
ANR	7970773	CFGExitNode	EXIT		7970135		True				
ANR	7970774	Symbol	NULL		7970135						
ANR	7970775	Symbol	* ptr ++		7970135						
ANR	7970776	Symbol	strchr		7970135						
ANR	7970777	Symbol	_cups_isspace		7970135						
ANR	7970778	Symbol	num_options		7970135						
ANR	7970779	Symbol	ptr		7970135						
ANR	7970780	Symbol	strlen		7970135						
ANR	7970781	Symbol	quote		7970135						
ANR	7970782	Symbol	depth		7970135						
ANR	7970783	Symbol	copyarg		7970135						
ANR	7970784	Symbol	_cups_strncasecmp		7970135						
ANR	7970785	Symbol	arg		7970135						
ANR	7970786	Symbol	options		7970135						
ANR	7970787	Symbol	name		7970135						
ANR	7970788	Symbol	* ptr		7970135						
ANR	7970789	Symbol	strdup		7970135						
ANR	7970790	Symbol	value		7970135						
ANR	7970791	Symbol	cupsAddOption		7970135						
ANR	7970792	Symbol	* copyarg		7970135						
ANR	7970793	Symbol	sep		7970135						
ANR	7970794	Function	cupsRemoveOption	444:0:9697:10933							
ANR	7970795	FunctionDef	"cupsRemoveOption (const char * name , int num_options , cups_option_t * * options)"		7970794	0					
ANR	7970796	CompoundStatement		449:0:9923:10933	7970794	0					
ANR	7970797	IdentifierDeclStatement	int i ;	450:2:9927:9933	7970794	0	True				
ANR	7970798	IdentifierDecl	i		7970794	0					
ANR	7970799	IdentifierDeclType	int		7970794	0					
ANR	7970800	Identifier	i		7970794	1					
ANR	7970801	IdentifierDeclStatement	cups_option_t * option ;	451:2:9957:9978	7970794	1	True				
ANR	7970802	IdentifierDecl	* option		7970794	0					
ANR	7970803	IdentifierDeclType	cups_option_t *		7970794	0					
ANR	7970804	Identifier	option		7970794	1					
ANR	7970805	ExpressionStatement	"DEBUG_printf ( ( ""2cupsRemoveOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options ) )"	454:2:10006:10126	7970794	2	True				
ANR	7970806	CallExpression	"DEBUG_printf ( ( ""2cupsRemoveOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options ) )"		7970794	0					
ANR	7970807	Callee	DEBUG_printf		7970794	0					
ANR	7970808	Identifier	DEBUG_printf		7970794	0					
ANR	7970809	ArgumentList	"""2cupsRemoveOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options"		7970794	1					
ANR	7970810	Argument	"""2cupsRemoveOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options"		7970794	0					
ANR	7970811	Expression	"""2cupsRemoveOption(name=\\""%s\\"", num_options=%d, options=%p)"" , name , num_options , options"		7970794	0					
ANR	7970812	PrimaryExpression	"""2cupsRemoveOption(name=\\""%s\\"", num_options=%d, options=%p)"""		7970794	0					
ANR	7970813	Expression	"name , num_options , options"		7970794	1					
ANR	7970814	Identifier	name		7970794	0					
ANR	7970815	Expression	"num_options , options"		7970794	1					
ANR	7970816	Identifier	num_options		7970794	0					
ANR	7970817	Identifier	options		7970794	1					
ANR	7970818	IfStatement	if ( ! name || num_options < 1 || ! options )		7970794	3					
ANR	7970819	Condition	! name || num_options < 1 || ! options	461:6:10170:10205	7970794	0	True				
ANR	7970820	OrExpression	! name || num_options < 1 || ! options		7970794	0		||			
ANR	7970821	UnaryOperationExpression	! name		7970794	0					
ANR	7970822	UnaryOperator	!		7970794	0					
ANR	7970823	Identifier	name		7970794	1					
ANR	7970824	OrExpression	num_options < 1 || ! options		7970794	1		||			
ANR	7970825	RelationalExpression	num_options < 1		7970794	0		<			
ANR	7970826	Identifier	num_options		7970794	0					
ANR	7970827	PrimaryExpression	1		7970794	1					
ANR	7970828	UnaryOperationExpression	! options		7970794	1					
ANR	7970829	UnaryOperator	!		7970794	0					
ANR	7970830	Identifier	options		7970794	1					
ANR	7970831	CompoundStatement		14:2:286:286	7970794	1					
ANR	7970832	ExpressionStatement	"DEBUG_printf ( ( ""3cupsRemoveOption: Returning %d"" , num_options ) )"	463:4:10216:10278	7970794	0	True				
ANR	7970833	CallExpression	"DEBUG_printf ( ( ""3cupsRemoveOption: Returning %d"" , num_options ) )"		7970794	0					
ANR	7970834	Callee	DEBUG_printf		7970794	0					
ANR	7970835	Identifier	DEBUG_printf		7970794	0					
ANR	7970836	ArgumentList	"""3cupsRemoveOption: Returning %d"" , num_options"		7970794	1					
ANR	7970837	Argument	"""3cupsRemoveOption: Returning %d"" , num_options"		7970794	0					
ANR	7970838	Expression	"""3cupsRemoveOption: Returning %d"" , num_options"		7970794	0					
ANR	7970839	PrimaryExpression	"""3cupsRemoveOption: Returning %d"""		7970794	0					
ANR	7970840	Identifier	num_options		7970794	1					
ANR	7970841	ReturnStatement	return ( num_options ) ;	464:4:10284:10304	7970794	1	True				
ANR	7970842	Identifier	num_options		7970794	0					
ANR	7970843	ForStatement	"for ( i = num_options , option = * options ; i > 0 ; i -- , option ++ )"		7970794	4					
ANR	7970844	ForInit	"i = num_options , option = * options ;"	471:7:10355:10389	7970794	0	True				
ANR	7970845	Expression	"i = num_options , option = * options"		7970794	0					
ANR	7970846	AssignmentExpression	i = num_options		7970794	0		=			
ANR	7970847	Identifier	i		7970794	0					
ANR	7970848	Identifier	num_options		7970794	1					
ANR	7970849	AssignmentExpression	option = * options		7970794	1		=			
ANR	7970850	Identifier	option		7970794	0					
ANR	7970851	UnaryOperationExpression	* options		7970794	1					
ANR	7970852	UnaryOperator	*		7970794	0					
ANR	7970853	Identifier	options		7970794	1					
ANR	7970854	Condition	i > 0	471:43:10391:10395	7970794	1	True				
ANR	7970855	RelationalExpression	i > 0		7970794	0		>			
ANR	7970856	Identifier	i		7970794	0					
ANR	7970857	PrimaryExpression	0		7970794	1					
ANR	7970858	Expression	"i -- , option ++"	471:50:10398:10412	7970794	2	True				
ANR	7970859	PostIncDecOperationExpression	i --		7970794	0					
ANR	7970860	Identifier	i		7970794	0					
ANR	7970861	IncDec	--		7970794	1					
ANR	7970862	PostIncDecOperationExpression	option ++		7970794	1					
ANR	7970863	Identifier	option		7970794	0					
ANR	7970864	IncDec	++		7970794	1					
ANR	7970865	IfStatement	"if ( ! _cups_strcasecmp ( name , option -> name ) )"		7970794	3					
ANR	7970866	Condition	"! _cups_strcasecmp ( name , option -> name )"	472:8:10423:10459	7970794	0	True				
ANR	7970867	UnaryOperationExpression	"! _cups_strcasecmp ( name , option -> name )"		7970794	0					
ANR	7970868	UnaryOperator	!		7970794	0					
ANR	7970869	CallExpression	"_cups_strcasecmp ( name , option -> name )"		7970794	1					
ANR	7970870	Callee	_cups_strcasecmp		7970794	0					
ANR	7970871	Identifier	_cups_strcasecmp		7970794	0					
ANR	7970872	ArgumentList	name		7970794	1					
ANR	7970873	Argument	name		7970794	0					
ANR	7970874	Identifier	name		7970794	0					
ANR	7970875	Argument	option -> name		7970794	1					
ANR	7970876	PtrMemberAccess	option -> name		7970794	0					
ANR	7970877	Identifier	option		7970794	0					
ANR	7970878	Identifier	name		7970794	1					
ANR	7970879	BreakStatement	break ;	473:6:10468:10473	7970794	1	True				
ANR	7970880	IfStatement	if ( i )		7970794	5					
ANR	7970881	Condition	i	475:6:10482:10482	7970794	0	True				
ANR	7970882	Identifier	i		7970794	0					
ANR	7970883	CompoundStatement		28:2:563:563	7970794	1					
ANR	7970884	ExpressionStatement	"DEBUG_puts ( ""4cupsRemoveOption: Found option, removing it..."" )"	481:4:10550:10611	7970794	0	True				
ANR	7970885	CallExpression	"DEBUG_puts ( ""4cupsRemoveOption: Found option, removing it..."" )"		7970794	0					
ANR	7970886	Callee	DEBUG_puts		7970794	0					
ANR	7970887	Identifier	DEBUG_puts		7970794	0					
ANR	7970888	ArgumentList	"""4cupsRemoveOption: Found option, removing it..."""		7970794	1					
ANR	7970889	Argument	"""4cupsRemoveOption: Found option, removing it..."""		7970794	0					
ANR	7970890	PrimaryExpression	"""4cupsRemoveOption: Found option, removing it..."""		7970794	0					
ANR	7970891	ExpressionStatement	num_options --	483:4:10618:10632	7970794	1	True				
ANR	7970892	PostIncDecOperationExpression	num_options --		7970794	0					
ANR	7970893	Identifier	num_options		7970794	0					
ANR	7970894	IncDec	--		7970794	1					
ANR	7970895	ExpressionStatement	i --	484:4:10638:10642	7970794	2	True				
ANR	7970896	PostIncDecOperationExpression	i --		7970794	0					
ANR	7970897	Identifier	i		7970794	0					
ANR	7970898	IncDec	--		7970794	1					
ANR	7970899	ExpressionStatement	_cupsStrFree ( option -> name )	486:4:10649:10675	7970794	3	True				
ANR	7970900	CallExpression	_cupsStrFree ( option -> name )		7970794	0					
ANR	7970901	Callee	_cupsStrFree		7970794	0					
ANR	7970902	Identifier	_cupsStrFree		7970794	0					
ANR	7970903	ArgumentList	option -> name		7970794	1					
ANR	7970904	Argument	option -> name		7970794	0					
ANR	7970905	PtrMemberAccess	option -> name		7970794	0					
ANR	7970906	Identifier	option		7970794	0					
ANR	7970907	Identifier	name		7970794	1					
ANR	7970908	ExpressionStatement	_cupsStrFree ( option -> value )	487:4:10681:10708	7970794	4	True				
ANR	7970909	CallExpression	_cupsStrFree ( option -> value )		7970794	0					
ANR	7970910	Callee	_cupsStrFree		7970794	0					
ANR	7970911	Identifier	_cupsStrFree		7970794	0					
ANR	7970912	ArgumentList	option -> value		7970794	1					
ANR	7970913	Argument	option -> value		7970794	0					
ANR	7970914	PtrMemberAccess	option -> value		7970794	0					
ANR	7970915	Identifier	option		7970794	0					
ANR	7970916	Identifier	value		7970794	1					
ANR	7970917	IfStatement	if ( i > 0 )		7970794	5					
ANR	7970918	Condition	i > 0	489:8:10719:10723	7970794	0	True				
ANR	7970919	RelationalExpression	i > 0		7970794	0		>			
ANR	7970920	Identifier	i		7970794	0					
ANR	7970921	PrimaryExpression	0		7970794	1					
ANR	7970922	ExpressionStatement	"memmove ( option , option + 1 , i * sizeof ( cups_option_t ) )"	490:6:10732:10786	7970794	1	True				
ANR	7970923	CallExpression	"memmove ( option , option + 1 , i * sizeof ( cups_option_t ) )"		7970794	0					
ANR	7970924	Callee	memmove		7970794	0					
ANR	7970925	Identifier	memmove		7970794	0					
ANR	7970926	ArgumentList	option		7970794	1					
ANR	7970927	Argument	option		7970794	0					
ANR	7970928	Identifier	option		7970794	0					
ANR	7970929	Argument	option + 1		7970794	1					
ANR	7970930	AdditiveExpression	option + 1		7970794	0		+			
ANR	7970931	Identifier	option		7970794	0					
ANR	7970932	PrimaryExpression	1		7970794	1					
ANR	7970933	Argument	i * sizeof ( cups_option_t )		7970794	2					
ANR	7970934	MultiplicativeExpression	i * sizeof ( cups_option_t )		7970794	0		*			
ANR	7970935	Identifier	i		7970794	0					
ANR	7970936	SizeofExpression	sizeof ( cups_option_t )		7970794	1					
ANR	7970937	Sizeof	sizeof		7970794	0					
ANR	7970938	SizeofOperand	cups_option_t		7970794	1					
ANR	7970939	ExpressionStatement	"DEBUG_printf ( ( ""3cupsRemoveOption: Returning %d"" , num_options ) )"	497:2:10845:10907	7970794	6	True				
ANR	7970940	CallExpression	"DEBUG_printf ( ( ""3cupsRemoveOption: Returning %d"" , num_options ) )"		7970794	0					
ANR	7970941	Callee	DEBUG_printf		7970794	0					
ANR	7970942	Identifier	DEBUG_printf		7970794	0					
ANR	7970943	ArgumentList	"""3cupsRemoveOption: Returning %d"" , num_options"		7970794	1					
ANR	7970944	Argument	"""3cupsRemoveOption: Returning %d"" , num_options"		7970794	0					
ANR	7970945	Expression	"""3cupsRemoveOption: Returning %d"" , num_options"		7970794	0					
ANR	7970946	PrimaryExpression	"""3cupsRemoveOption: Returning %d"""		7970794	0					
ANR	7970947	Identifier	num_options		7970794	1					
ANR	7970948	ReturnStatement	return ( num_options ) ;	498:2:10911:10931	7970794	7	True				
ANR	7970949	Identifier	num_options		7970794	0					
ANR	7970950	ReturnType	int		7970794	1					
ANR	7970951	Identifier	cupsRemoveOption		7970794	2					
ANR	7970952	ParameterList	"const char * name , int num_options , cups_option_t * * options"		7970794	3					
ANR	7970953	Parameter	const char * name	446:4:9760:9778	7970794	0	True				
ANR	7970954	ParameterType	const char *		7970794	0					
ANR	7970955	Identifier	name		7970794	1					
ANR	7970956	Parameter	int num_options	447:4:9809:9833	7970794	1	True				
ANR	7970957	ParameterType	int		7970794	0					
ANR	7970958	Identifier	num_options		7970794	1					
ANR	7970959	Parameter	cups_option_t * * options	448:4:9878:9900	7970794	2	True				
ANR	7970960	ParameterType	cups_option_t * *		7970794	0					
ANR	7970961	Identifier	options		7970794	1					
ANR	7970962	CFGEntryNode	ENTRY		7970794		True				
ANR	7970963	CFGExitNode	EXIT		7970794		True				
ANR	7970964	Symbol	_cups_strcasecmp		7970794						
ANR	7970965	Symbol	option -> name		7970794						
ANR	7970966	Symbol	option -> value		7970794						
ANR	7970967	Symbol	name		7970794						
ANR	7970968	Symbol	options		7970794						
ANR	7970969	Symbol	* option		7970794						
ANR	7970970	Symbol	i		7970794						
ANR	7970971	Symbol	num_options		7970794						
ANR	7970972	Symbol	* options		7970794						
ANR	7970973	Symbol	option		7970794						
ANR	7970974	Function	_cupsGet1284Values	509:0:11136:12631							
ANR	7970975	FunctionDef	"_cupsGet1284Values (const char * device_id , cups_option_t * * values)"		7970974	0					
ANR	7970976	CompoundStatement		513:0:11329:12631	7970974	0					
ANR	7970977	IdentifierDeclStatement	int num_values ;	514:2:11333:11348	7970974	0	True				
ANR	7970978	IdentifierDecl	num_values		7970974	0					
ANR	7970979	IdentifierDeclType	int		7970974	0					
ANR	7970980	Identifier	num_values		7970974	1					
ANR	7970981	IdentifierDeclStatement	"char key [ 256 ] , value [ 256 ] , * ptr ;"	515:2:11376:11450	7970974	1	True				
ANR	7970982	IdentifierDecl	key [ 256 ]		7970974	0					
ANR	7970983	IdentifierDeclType	char [ 256 ]		7970974	0					
ANR	7970984	Identifier	key		7970974	1					
ANR	7970985	PrimaryExpression	256		7970974	2					
ANR	7970986	IdentifierDecl	value [ 256 ]		7970974	1					
ANR	7970987	IdentifierDeclType	char [ 256 ]		7970974	0					
ANR	7970988	Identifier	value		7970974	1					
ANR	7970989	PrimaryExpression	256		7970974	2					
ANR	7970990	IdentifierDecl	* ptr		7970974	2					
ANR	7970991	IdentifierDeclType	char *		7970974	0					
ANR	7970992	Identifier	ptr		7970974	1					
ANR	7970993	IfStatement	if ( values )		7970974	2					
ANR	7970994	Condition	values	524:6:11526:11531	7970974	0	True				
ANR	7970995	Identifier	values		7970974	0					
ANR	7970996	ExpressionStatement	* values = NULL	525:4:11538:11552	7970974	1	True				
ANR	7970997	AssignmentExpression	* values = NULL		7970974	0		=			
ANR	7970998	UnaryOperationExpression	* values		7970974	0					
ANR	7970999	UnaryOperator	*		7970974	0					
ANR	7971000	Identifier	values		7970974	1					
ANR	7971001	Identifier	NULL		7970974	1					
ANR	7971002	IfStatement	if ( ! device_id || ! values )		7970974	3					
ANR	7971003	Condition	! device_id || ! values	527:6:11561:11581	7970974	0	True				
ANR	7971004	OrExpression	! device_id || ! values		7970974	0		||			
ANR	7971005	UnaryOperationExpression	! device_id		7970974	0					
ANR	7971006	UnaryOperator	!		7970974	0					
ANR	7971007	Identifier	device_id		7970974	1					
ANR	7971008	UnaryOperationExpression	! values		7970974	1					
ANR	7971009	UnaryOperator	!		7970974	0					
ANR	7971010	Identifier	values		7970974	1					
ANR	7971011	ReturnStatement	return ( 0 ) ;	528:4:11588:11598	7970974	1	True				
ANR	7971012	PrimaryExpression	0		7970974	0					
ANR	7971013	ExpressionStatement	num_values = 0	537:2:11758:11772	7970974	4	True				
ANR	7971014	AssignmentExpression	num_values = 0		7970974	0		=			
ANR	7971015	Identifier	num_values		7970974	0					
ANR	7971016	PrimaryExpression	0		7970974	1					
ANR	7971017	WhileStatement	while ( * device_id )		7970974	5					
ANR	7971018	Condition	* device_id	538:9:11783:11792	7970974	0	True				
ANR	7971019	UnaryOperationExpression	* device_id		7970974	0					
ANR	7971020	UnaryOperator	*		7970974	0					
ANR	7971021	Identifier	device_id		7970974	1					
ANR	7971022	CompoundStatement		27:2:467:467	7970974	1					
ANR	7971023	WhileStatement	while ( _cups_isspace ( * device_id ) )		7970974	0					
ANR	7971024	Condition	_cups_isspace ( * device_id )	540:11:11810:11834	7970974	0	True				
ANR	7971025	CallExpression	_cups_isspace ( * device_id )		7970974	0					
ANR	7971026	Callee	_cups_isspace		7970974	0					
ANR	7971027	Identifier	_cups_isspace		7970974	0					
ANR	7971028	ArgumentList	* device_id		7970974	1					
ANR	7971029	Argument	* device_id		7970974	0					
ANR	7971030	UnaryOperationExpression	* device_id		7970974	0					
ANR	7971031	UnaryOperator	*		7970974	0					
ANR	7971032	Identifier	device_id		7970974	1					
ANR	7971033	ExpressionStatement	device_id ++	541:6:11843:11855	7970974	1	True				
ANR	7971034	PostIncDecOperationExpression	device_id ++		7970974	0					
ANR	7971035	Identifier	device_id		7970974	0					
ANR	7971036	IncDec	++		7970974	1					
ANR	7971037	IfStatement	if ( ! * device_id )		7970974	1					
ANR	7971038	Condition	! * device_id	543:8:11866:11876	7970974	0	True				
ANR	7971039	UnaryOperationExpression	! * device_id		7970974	0					
ANR	7971040	UnaryOperator	!		7970974	0					
ANR	7971041	UnaryOperationExpression	* device_id		7970974	1					
ANR	7971042	UnaryOperator	*		7970974	0					
ANR	7971043	Identifier	device_id		7970974	1					
ANR	7971044	BreakStatement	break ;	544:6:11885:11890	7970974	1	True				
ANR	7971045	ForStatement	for ( ptr = key ; * device_id && * device_id != ':' ; device_id ++ )		7970974	2					
ANR	7971046	ForInit	ptr = key ;	546:9:11902:11911	7970974	0	True				
ANR	7971047	AssignmentExpression	ptr = key		7970974	0		=			
ANR	7971048	Identifier	ptr		7970974	0					
ANR	7971049	Identifier	key		7970974	1					
ANR	7971050	Condition	* device_id && * device_id != ':'	546:20:11913:11943	7970974	1	True				
ANR	7971051	AndExpression	* device_id && * device_id != ':'		7970974	0		&&			
ANR	7971052	UnaryOperationExpression	* device_id		7970974	0					
ANR	7971053	UnaryOperator	*		7970974	0					
ANR	7971054	Identifier	device_id		7970974	1					
ANR	7971055	EqualityExpression	* device_id != ':'		7970974	1		!=			
ANR	7971056	UnaryOperationExpression	* device_id		7970974	0					
ANR	7971057	UnaryOperator	*		7970974	0					
ANR	7971058	Identifier	device_id		7970974	1					
ANR	7971059	PrimaryExpression	':'		7970974	1					
ANR	7971060	PostIncDecOperationExpression	device_id ++	546:53:11946:11957	7970974	2	True				
ANR	7971061	Identifier	device_id		7970974	0					
ANR	7971062	IncDec	++		7970974	1					
ANR	7971063	IfStatement	if ( ptr < ( key + sizeof ( key ) - 1 ) )		7970974	3					
ANR	7971064	Condition	ptr < ( key + sizeof ( key ) - 1 )	547:10:11970:11998	7970974	0	True				
ANR	7971065	RelationalExpression	ptr < ( key + sizeof ( key ) - 1 )		7970974	0		<			
ANR	7971066	Identifier	ptr		7970974	0					
ANR	7971067	AdditiveExpression	key + sizeof ( key ) - 1		7970974	1		+			
ANR	7971068	Identifier	key		7970974	0					
ANR	7971069	AdditiveExpression	sizeof ( key ) - 1		7970974	1		-			
ANR	7971070	SizeofExpression	sizeof ( key )		7970974	0					
ANR	7971071	Sizeof	sizeof		7970974	0					
ANR	7971072	SizeofOperand	key		7970974	1					
ANR	7971073	PrimaryExpression	1		7970974	1					
ANR	7971074	ExpressionStatement	* ptr ++ = * device_id	548:8:12009:12028	7970974	1	True				
ANR	7971075	AssignmentExpression	* ptr ++ = * device_id		7970974	0		=			
ANR	7971076	UnaryOperationExpression	* ptr ++		7970974	0					
ANR	7971077	UnaryOperator	*		7970974	0					
ANR	7971078	PostIncDecOperationExpression	ptr ++		7970974	1					
ANR	7971079	Identifier	ptr		7970974	0					
ANR	7971080	IncDec	++		7970974	1					
ANR	7971081	UnaryOperationExpression	* device_id		7970974	1					
ANR	7971082	UnaryOperator	*		7970974	0					
ANR	7971083	Identifier	device_id		7970974	1					
ANR	7971084	IfStatement	if ( ! * device_id )		7970974	3					
ANR	7971085	Condition	! * device_id	550:8:12039:12049	7970974	0	True				
ANR	7971086	UnaryOperationExpression	! * device_id		7970974	0					
ANR	7971087	UnaryOperator	!		7970974	0					
ANR	7971088	UnaryOperationExpression	* device_id		7970974	1					
ANR	7971089	UnaryOperator	*		7970974	0					
ANR	7971090	Identifier	device_id		7970974	1					
ANR	7971091	BreakStatement	break ;	551:6:12058:12063	7970974	1	True				
ANR	7971092	WhileStatement	while ( ptr > key && _cups_isspace ( ptr [ - 1 ] ) )		7970974	4					
ANR	7971093	Condition	ptr > key && _cups_isspace ( ptr [ - 1 ] )	553:11:12077:12111	7970974	0	True				
ANR	7971094	AndExpression	ptr > key && _cups_isspace ( ptr [ - 1 ] )		7970974	0		&&			
ANR	7971095	RelationalExpression	ptr > key		7970974	0		>			
ANR	7971096	Identifier	ptr		7970974	0					
ANR	7971097	Identifier	key		7970974	1					
ANR	7971098	CallExpression	_cups_isspace ( ptr [ - 1 ] )		7970974	1					
ANR	7971099	Callee	_cups_isspace		7970974	0					
ANR	7971100	Identifier	_cups_isspace		7970974	0					
ANR	7971101	ArgumentList	ptr [ - 1 ]		7970974	1					
ANR	7971102	Argument	ptr [ - 1 ]		7970974	0					
ANR	7971103	ArrayIndexing	ptr [ - 1 ]		7970974	0					
ANR	7971104	Identifier	ptr		7970974	0					
ANR	7971105	UnaryOperationExpression	- 1		7970974	1					
ANR	7971106	UnaryOperator	-		7970974	0					
ANR	7971107	PrimaryExpression	1		7970974	1					
ANR	7971108	ExpressionStatement	ptr --	554:6:12120:12126	7970974	1	True				
ANR	7971109	PostIncDecOperationExpression	ptr --		7970974	0					
ANR	7971110	Identifier	ptr		7970974	0					
ANR	7971111	IncDec	--		7970974	1					
ANR	7971112	ExpressionStatement	* ptr = '\\0'	556:4:12133:12144	7970974	5	True				
ANR	7971113	AssignmentExpression	* ptr = '\\0'		7970974	0		=			
ANR	7971114	UnaryOperationExpression	* ptr		7970974	0					
ANR	7971115	UnaryOperator	*		7970974	0					
ANR	7971116	Identifier	ptr		7970974	1					
ANR	7971117	PrimaryExpression	'\\0'		7970974	1					
ANR	7971118	ExpressionStatement	device_id ++	557:4:12150:12162	7970974	6	True				
ANR	7971119	PostIncDecOperationExpression	device_id ++		7970974	0					
ANR	7971120	Identifier	device_id		7970974	0					
ANR	7971121	IncDec	++		7970974	1					
ANR	7971122	WhileStatement	while ( _cups_isspace ( * device_id ) )		7970974	7					
ANR	7971123	Condition	_cups_isspace ( * device_id )	559:11:12176:12200	7970974	0	True				
ANR	7971124	CallExpression	_cups_isspace ( * device_id )		7970974	0					
ANR	7971125	Callee	_cups_isspace		7970974	0					
ANR	7971126	Identifier	_cups_isspace		7970974	0					
ANR	7971127	ArgumentList	* device_id		7970974	1					
ANR	7971128	Argument	* device_id		7970974	0					
ANR	7971129	UnaryOperationExpression	* device_id		7970974	0					
ANR	7971130	UnaryOperator	*		7970974	0					
ANR	7971131	Identifier	device_id		7970974	1					
ANR	7971132	ExpressionStatement	device_id ++	560:6:12209:12221	7970974	1	True				
ANR	7971133	PostIncDecOperationExpression	device_id ++		7970974	0					
ANR	7971134	Identifier	device_id		7970974	0					
ANR	7971135	IncDec	++		7970974	1					
ANR	7971136	IfStatement	if ( ! * device_id )		7970974	8					
ANR	7971137	Condition	! * device_id	562:8:12232:12242	7970974	0	True				
ANR	7971138	UnaryOperationExpression	! * device_id		7970974	0					
ANR	7971139	UnaryOperator	!		7970974	0					
ANR	7971140	UnaryOperationExpression	* device_id		7970974	1					
ANR	7971141	UnaryOperator	*		7970974	0					
ANR	7971142	Identifier	device_id		7970974	1					
ANR	7971143	BreakStatement	break ;	563:6:12251:12256	7970974	1	True				
ANR	7971144	ForStatement	for ( ptr = value ; * device_id && * device_id != ';' ; device_id ++ )		7970974	9					
ANR	7971145	ForInit	ptr = value ;	565:9:12268:12279	7970974	0	True				
ANR	7971146	AssignmentExpression	ptr = value		7970974	0		=			
ANR	7971147	Identifier	ptr		7970974	0					
ANR	7971148	Identifier	value		7970974	1					
ANR	7971149	Condition	* device_id && * device_id != ';'	565:22:12281:12311	7970974	1	True				
ANR	7971150	AndExpression	* device_id && * device_id != ';'		7970974	0		&&			
ANR	7971151	UnaryOperationExpression	* device_id		7970974	0					
ANR	7971152	UnaryOperator	*		7970974	0					
ANR	7971153	Identifier	device_id		7970974	1					
ANR	7971154	EqualityExpression	* device_id != ';'		7970974	1		!=			
ANR	7971155	UnaryOperationExpression	* device_id		7970974	0					
ANR	7971156	UnaryOperator	*		7970974	0					
ANR	7971157	Identifier	device_id		7970974	1					
ANR	7971158	PrimaryExpression	';'		7970974	1					
ANR	7971159	PostIncDecOperationExpression	device_id ++	565:55:12314:12325	7970974	2	True				
ANR	7971160	Identifier	device_id		7970974	0					
ANR	7971161	IncDec	++		7970974	1					
ANR	7971162	IfStatement	if ( ptr < ( value + sizeof ( value ) - 1 ) )		7970974	3					
ANR	7971163	Condition	ptr < ( value + sizeof ( value ) - 1 )	566:10:12338:12370	7970974	0	True				
ANR	7971164	RelationalExpression	ptr < ( value + sizeof ( value ) - 1 )		7970974	0		<			
ANR	7971165	Identifier	ptr		7970974	0					
ANR	7971166	AdditiveExpression	value + sizeof ( value ) - 1		7970974	1		+			
ANR	7971167	Identifier	value		7970974	0					
ANR	7971168	AdditiveExpression	sizeof ( value ) - 1		7970974	1		-			
ANR	7971169	SizeofExpression	sizeof ( value )		7970974	0					
ANR	7971170	Sizeof	sizeof		7970974	0					
ANR	7971171	SizeofOperand	value		7970974	1					
ANR	7971172	PrimaryExpression	1		7970974	1					
ANR	7971173	ExpressionStatement	* ptr ++ = * device_id	567:8:12381:12400	7970974	1	True				
ANR	7971174	AssignmentExpression	* ptr ++ = * device_id		7970974	0		=			
ANR	7971175	UnaryOperationExpression	* ptr ++		7970974	0					
ANR	7971176	UnaryOperator	*		7970974	0					
ANR	7971177	PostIncDecOperationExpression	ptr ++		7970974	1					
ANR	7971178	Identifier	ptr		7970974	0					
ANR	7971179	IncDec	++		7970974	1					
ANR	7971180	UnaryOperationExpression	* device_id		7970974	1					
ANR	7971181	UnaryOperator	*		7970974	0					
ANR	7971182	Identifier	device_id		7970974	1					
ANR	7971183	IfStatement	if ( ! * device_id )		7970974	10					
ANR	7971184	Condition	! * device_id	569:8:12411:12421	7970974	0	True				
ANR	7971185	UnaryOperationExpression	! * device_id		7970974	0					
ANR	7971186	UnaryOperator	!		7970974	0					
ANR	7971187	UnaryOperationExpression	* device_id		7970974	1					
ANR	7971188	UnaryOperator	*		7970974	0					
ANR	7971189	Identifier	device_id		7970974	1					
ANR	7971190	BreakStatement	break ;	570:6:12430:12435	7970974	1	True				
ANR	7971191	WhileStatement	while ( ptr > value && _cups_isspace ( ptr [ - 1 ] ) )		7970974	11					
ANR	7971192	Condition	ptr > value && _cups_isspace ( ptr [ - 1 ] )	572:11:12449:12485	7970974	0	True				
ANR	7971193	AndExpression	ptr > value && _cups_isspace ( ptr [ - 1 ] )		7970974	0		&&			
ANR	7971194	RelationalExpression	ptr > value		7970974	0		>			
ANR	7971195	Identifier	ptr		7970974	0					
ANR	7971196	Identifier	value		7970974	1					
ANR	7971197	CallExpression	_cups_isspace ( ptr [ - 1 ] )		7970974	1					
ANR	7971198	Callee	_cups_isspace		7970974	0					
ANR	7971199	Identifier	_cups_isspace		7970974	0					
ANR	7971200	ArgumentList	ptr [ - 1 ]		7970974	1					
ANR	7971201	Argument	ptr [ - 1 ]		7970974	0					
ANR	7971202	ArrayIndexing	ptr [ - 1 ]		7970974	0					
ANR	7971203	Identifier	ptr		7970974	0					
ANR	7971204	UnaryOperationExpression	- 1		7970974	1					
ANR	7971205	UnaryOperator	-		7970974	0					
ANR	7971206	PrimaryExpression	1		7970974	1					
ANR	7971207	ExpressionStatement	ptr --	573:6:12494:12500	7970974	1	True				
ANR	7971208	PostIncDecOperationExpression	ptr --		7970974	0					
ANR	7971209	Identifier	ptr		7970974	0					
ANR	7971210	IncDec	--		7970974	1					
ANR	7971211	ExpressionStatement	* ptr = '\\0'	575:4:12507:12518	7970974	12	True				
ANR	7971212	AssignmentExpression	* ptr = '\\0'		7970974	0		=			
ANR	7971213	UnaryOperationExpression	* ptr		7970974	0					
ANR	7971214	UnaryOperator	*		7970974	0					
ANR	7971215	Identifier	ptr		7970974	1					
ANR	7971216	PrimaryExpression	'\\0'		7970974	1					
ANR	7971217	ExpressionStatement	device_id ++	576:4:12524:12536	7970974	13	True				
ANR	7971218	PostIncDecOperationExpression	device_id ++		7970974	0					
ANR	7971219	Identifier	device_id		7970974	0					
ANR	7971220	IncDec	++		7970974	1					
ANR	7971221	ExpressionStatement	"num_values = cupsAddOption ( key , value , num_values , values )"	578:4:12543:12601	7970974	14	True				
ANR	7971222	AssignmentExpression	"num_values = cupsAddOption ( key , value , num_values , values )"		7970974	0		=			
ANR	7971223	Identifier	num_values		7970974	0					
ANR	7971224	CallExpression	"cupsAddOption ( key , value , num_values , values )"		7970974	1					
ANR	7971225	Callee	cupsAddOption		7970974	0					
ANR	7971226	Identifier	cupsAddOption		7970974	0					
ANR	7971227	ArgumentList	key		7970974	1					
ANR	7971228	Argument	key		7970974	0					
ANR	7971229	Identifier	key		7970974	0					
ANR	7971230	Argument	value		7970974	1					
ANR	7971231	Identifier	value		7970974	0					
ANR	7971232	Argument	num_values		7970974	2					
ANR	7971233	Identifier	num_values		7970974	0					
ANR	7971234	Argument	values		7970974	3					
ANR	7971235	Identifier	values		7970974	0					
ANR	7971236	ReturnStatement	return ( num_values ) ;	581:2:12610:12629	7970974	6	True				
ANR	7971237	Identifier	num_values		7970974	0					
ANR	7971238	ReturnType	int		7970974	1					
ANR	7971239	Identifier	_cupsGet1284Values		7970974	2					
ANR	7971240	ParameterList	"const char * device_id , cups_option_t * * values"		7970974	3					
ANR	7971241	Parameter	const char * device_id	511:4:11204:11224	7970974	0	True				
ANR	7971242	ParameterType	const char *		7970974	0					
ANR	7971243	Identifier	device_id		7970974	1					
ANR	7971244	Parameter	cups_option_t * * values	512:4:11269:11290	7970974	1	True				
ANR	7971245	ParameterType	cups_option_t * *		7970974	0					
ANR	7971246	Identifier	values		7970974	1					
ANR	7971247	CFGEntryNode	ENTRY		7970974		True				
ANR	7971248	CFGExitNode	EXIT		7970974		True				
ANR	7971249	Symbol	NULL		7970974						
ANR	7971250	Symbol	device_id		7970974						
ANR	7971251	Symbol	* values		7970974						
ANR	7971252	Symbol	* ptr ++		7970974						
ANR	7971253	Symbol	values		7970974						
ANR	7971254	Symbol	_cups_isspace		7970974						
ANR	7971255	Symbol	ptr		7970974						
ANR	7971256	Symbol	num_values		7970974						
ANR	7971257	Symbol	* ptr		7970974						
ANR	7971258	Symbol	* device_id		7970974						
ANR	7971259	Symbol	value		7970974						
ANR	7971260	Symbol	cupsAddOption		7970974						
ANR	7971261	Symbol	key		7970974						
ANR	7971262	Function	cups_compare_options	589:0:12694:12899							
ANR	7971263	FunctionDef	"cups_compare_options (cups_option_t * a , cups_option_t * b)"		7971262	0					
ANR	7971264	CompoundStatement		592:0:12850:12899	7971262	0					
ANR	7971265	ReturnStatement	"return ( _cups_strcasecmp ( a -> name , b -> name ) ) ;"	593:2:12854:12897	7971262	0	True				
ANR	7971266	CallExpression	"_cups_strcasecmp ( a -> name , b -> name )"		7971262	0					
ANR	7971267	Callee	_cups_strcasecmp		7971262	0					
ANR	7971268	Identifier	_cups_strcasecmp		7971262	0					
ANR	7971269	ArgumentList	a -> name		7971262	1					
ANR	7971270	Argument	a -> name		7971262	0					
ANR	7971271	PtrMemberAccess	a -> name		7971262	0					
ANR	7971272	Identifier	a		7971262	0					
ANR	7971273	Identifier	name		7971262	1					
ANR	7971274	Argument	b -> name		7971262	1					
ANR	7971275	PtrMemberAccess	b -> name		7971262	0					
ANR	7971276	Identifier	b		7971262	0					
ANR	7971277	Identifier	name		7971262	1					
ANR	7971278	ReturnType	static int		7971262	1					
ANR	7971279	Identifier	cups_compare_options		7971262	2					
ANR	7971280	ParameterList	"cups_option_t * a , cups_option_t * b"		7971262	3					
ANR	7971281	Parameter	cups_option_t * a	590:21:12760:12775	7971262	0	True				
ANR	7971282	ParameterType	cups_option_t *		7971262	0					
ANR	7971283	Identifier	a		7971262	1					
ANR	7971284	Parameter	cups_option_t * b	591:7:12808:12823	7971262	1	True				
ANR	7971285	ParameterType	cups_option_t *		7971262	0					
ANR	7971286	Identifier	b		7971262	1					
ANR	7971287	CFGEntryNode	ENTRY		7971262		True				
ANR	7971288	CFGExitNode	EXIT		7971262		True				
ANR	7971289	Symbol	_cups_strcasecmp		7971262						
ANR	7971290	Symbol	a		7971262						
ANR	7971291	Symbol	b		7971262						
ANR	7971292	Symbol	a -> name		7971262						
ANR	7971293	Symbol	* a		7971262						
ANR	7971294	Symbol	* b		7971262						
ANR	7971295	Symbol	b -> name		7971262						
ANR	7971296	Function	cups_find_option	601:0:12975:15201							
ANR	7971297	FunctionDef	"cups_find_option (const char * name , int num_options , cups_option_t * options , int prev , int * rdiff)"		7971296	0					
ANR	7971298	CompoundStatement		608:0:13295:15201	7971296	0					
ANR	7971299	IdentifierDeclStatement	"int left , right , current , diff ;"	609:2:13299:13428	7971296	0	True				
ANR	7971300	IdentifierDecl	left		7971296	0					
ANR	7971301	IdentifierDeclType	int		7971296	0					
ANR	7971302	Identifier	left		7971296	1					
ANR	7971303	IdentifierDecl	right		7971296	1					
ANR	7971304	IdentifierDeclType	int		7971296	0					
ANR	7971305	Identifier	right		7971296	1					
ANR	7971306	IdentifierDecl	current		7971296	2					
ANR	7971307	IdentifierDeclType	int		7971296	0					
ANR	7971308	Identifier	current		7971296	1					
ANR	7971309	IdentifierDecl	diff		7971296	3					
ANR	7971310	IdentifierDeclType	int		7971296	0					
ANR	7971311	Identifier	diff		7971296	1					
ANR	7971312	IdentifierDeclStatement	cups_option_t key ;	613:2:13461:13478	7971296	1	True				
ANR	7971313	IdentifierDecl	key		7971296	0					
ANR	7971314	IdentifierDeclType	cups_option_t		7971296	0					
ANR	7971315	Identifier	key		7971296	1					
ANR	7971316	Statement	DEBUG_printf	616:2:13503:13514	7971296	2	True				
ANR	7971317	Statement	(	616:14:13515:13515	7971296	3	True				
ANR	7971318	Statement	(	616:15:13516:13516	7971296	4	True				
ANR	7971319	Statement	"""7cups_find_option(name=\\""%s\\"", num_options=%d, options=%p, """	616:16:13517:13577	7971296	5	True				
ANR	7971320	Statement	"""prev=%d, rdiff=%p)"""	617:9:13588:13607	7971296	6	True				
ANR	7971321	Statement	","	617:29:13608:13608	7971296	7	True				
ANR	7971322	Statement	name	617:31:13610:13613	7971296	8	True				
ANR	7971323	Statement	","	617:35:13614:13614	7971296	9	True				
ANR	7971324	Statement	num_options	617:37:13616:13626	7971296	10	True				
ANR	7971325	Statement	","	617:48:13627:13627	7971296	11	True				
ANR	7971326	Statement	options	617:50:13629:13635	7971296	12	True				
ANR	7971327	Statement	","	617:57:13636:13636	7971296	13	True				
ANR	7971328	Statement	prev	617:59:13638:13641	7971296	14	True				
ANR	7971329	Statement	","	617:63:13642:13642	7971296	15	True				
ANR	7971330	Statement	rdiff	618:2:13646:13650	7971296	16	True				
ANR	7971331	Statement	)	618:7:13651:13651	7971296	17	True				
ANR	7971332	Statement	)	618:8:13652:13652	7971296	18	True				
ANR	7971333	ExpressionStatement		618:9:13653:13653	7971296	19	True				
ANR	7971334	ForStatement	for ( left = 0 ; left < num_options ; left ++ )		7971296	20					
ANR	7971335	ForInit	left = 0 ;	621:7:13676:13684	7971296	0	True				
ANR	7971336	AssignmentExpression	left = 0		7971296	0		=			
ANR	7971337	Identifier	left		7971296	0					
ANR	7971338	PrimaryExpression	0		7971296	1					
ANR	7971339	Condition	left < num_options	621:17:13686:13703	7971296	1	True				
ANR	7971340	RelationalExpression	left < num_options		7971296	0		<			
ANR	7971341	Identifier	left		7971296	0					
ANR	7971342	Identifier	num_options		7971296	1					
ANR	7971343	PostIncDecOperationExpression	left ++	621:37:13706:13712	7971296	2	True				
ANR	7971344	Identifier	left		7971296	0					
ANR	7971345	IncDec	++		7971296	1					
ANR	7971346	ExpressionStatement	"DEBUG_printf ( ( ""9cups_find_option: options[%d].name=\\""%s\\"", .value=\\""%s\\"""" , left , options [ left ] . name , options [ left ] . value ) )"	622:4:13719:13859	7971296	3	True				
ANR	7971347	CallExpression	"DEBUG_printf ( ( ""9cups_find_option: options[%d].name=\\""%s\\"", .value=\\""%s\\"""" , left , options [ left ] . name , options [ left ] . value ) )"		7971296	0					
ANR	7971348	Callee	DEBUG_printf		7971296	0					
ANR	7971349	Identifier	DEBUG_printf		7971296	0					
ANR	7971350	ArgumentList	"""9cups_find_option: options[%d].name=\\""%s\\"", .value=\\""%s\\"""" , left , options [ left ] . name , options [ left ] . value"		7971296	1					
ANR	7971351	Argument	"""9cups_find_option: options[%d].name=\\""%s\\"", .value=\\""%s\\"""" , left , options [ left ] . name , options [ left ] . value"		7971296	0					
ANR	7971352	Expression	"""9cups_find_option: options[%d].name=\\""%s\\"", .value=\\""%s\\"""" , left , options [ left ] . name , options [ left ] . value"		7971296	0					
ANR	7971353	PrimaryExpression	"""9cups_find_option: options[%d].name=\\""%s\\"", .value=\\""%s\\"""""		7971296	0					
ANR	7971354	Expression	"left , options [ left ] . name , options [ left ] . value"		7971296	1					
ANR	7971355	Identifier	left		7971296	0					
ANR	7971356	Expression	"options [ left ] . name , options [ left ] . value"		7971296	1					
ANR	7971357	MemberAccess	options [ left ] . name		7971296	0					
ANR	7971358	ArrayIndexing	options [ left ]		7971296	0					
ANR	7971359	Identifier	options		7971296	0					
ANR	7971360	Identifier	left		7971296	1					
ANR	7971361	Identifier	name		7971296	1					
ANR	7971362	MemberAccess	options [ left ] . value		7971296	1					
ANR	7971363	ArrayIndexing	options [ left ]		7971296	0					
ANR	7971364	Identifier	options		7971296	0					
ANR	7971365	Identifier	left		7971296	1					
ANR	7971366	Identifier	value		7971296	1					
ANR	7971367	ExpressionStatement	key . name = ( char * ) name	626:2:13883:13906	7971296	21	True				
ANR	7971368	AssignmentExpression	key . name = ( char * ) name		7971296	0		=			
ANR	7971369	MemberAccess	key . name		7971296	0					
ANR	7971370	Identifier	key		7971296	0					
ANR	7971371	Identifier	name		7971296	1					
ANR	7971372	CastExpression	( char * ) name		7971296	1					
ANR	7971373	CastTarget	char *		7971296	0					
ANR	7971374	Identifier	name		7971296	1					
ANR	7971375	IfStatement	if ( prev >= 0 )		7971296	22					
ANR	7971376	Condition	prev >= 0	628:6:13915:13923	7971296	0	True				
ANR	7971377	RelationalExpression	prev >= 0		7971296	0		>=			
ANR	7971378	Identifier	prev		7971296	0					
ANR	7971379	PrimaryExpression	0		7971296	1					
ANR	7971380	CompoundStatement		22:2:632:632	7971296	1					
ANR	7971381	IfStatement	"if ( ( diff = cups_compare_options ( & key , options + prev ) ) == 0 || ( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( num_options - 1 ) ) )"		7971296	0					
ANR	7971382	Condition	"( diff = cups_compare_options ( & key , options + prev ) ) == 0 || ( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( num_options - 1 ) )"	634:8:14001:14135	7971296	0	True				
ANR	7971383	OrExpression	"( diff = cups_compare_options ( & key , options + prev ) ) == 0 || ( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( num_options - 1 ) )"		7971296	0		||			
ANR	7971384	EqualityExpression	"( diff = cups_compare_options ( & key , options + prev ) ) == 0"		7971296	0		==			
ANR	7971385	AssignmentExpression	"diff = cups_compare_options ( & key , options + prev )"		7971296	0		=			
ANR	7971386	Identifier	diff		7971296	0					
ANR	7971387	CallExpression	"cups_compare_options ( & key , options + prev )"		7971296	1					
ANR	7971388	Callee	cups_compare_options		7971296	0					
ANR	7971389	Identifier	cups_compare_options		7971296	0					
ANR	7971390	ArgumentList	& key		7971296	1					
ANR	7971391	Argument	& key		7971296	0					
ANR	7971392	UnaryOperationExpression	& key		7971296	0					
ANR	7971393	UnaryOperator	&		7971296	0					
ANR	7971394	Identifier	key		7971296	1					
ANR	7971395	Argument	options + prev		7971296	1					
ANR	7971396	AdditiveExpression	options + prev		7971296	0		+			
ANR	7971397	Identifier	options		7971296	0					
ANR	7971398	Identifier	prev		7971296	1					
ANR	7971399	PrimaryExpression	0		7971296	1					
ANR	7971400	OrExpression	( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( num_options - 1 ) )		7971296	1		||			
ANR	7971401	AndExpression	diff < 0 && prev == 0		7971296	0		&&			
ANR	7971402	RelationalExpression	diff < 0		7971296	0		<			
ANR	7971403	Identifier	diff		7971296	0					
ANR	7971404	PrimaryExpression	0		7971296	1					
ANR	7971405	EqualityExpression	prev == 0		7971296	1		==			
ANR	7971406	Identifier	prev		7971296	0					
ANR	7971407	PrimaryExpression	0		7971296	1					
ANR	7971408	AndExpression	diff > 0 && prev == ( num_options - 1 )		7971296	1		&&			
ANR	7971409	RelationalExpression	diff > 0		7971296	0		>			
ANR	7971410	Identifier	diff		7971296	0					
ANR	7971411	PrimaryExpression	0		7971296	1					
ANR	7971412	EqualityExpression	prev == ( num_options - 1 )		7971296	1		==			
ANR	7971413	Identifier	prev		7971296	0					
ANR	7971414	AdditiveExpression	num_options - 1		7971296	1		-			
ANR	7971415	Identifier	num_options		7971296	0					
ANR	7971416	PrimaryExpression	1		7971296	1					
ANR	7971417	CompoundStatement		30:4:846:846	7971296	1					
ANR	7971418	ExpressionStatement	* rdiff = diff	638:6:14150:14163	7971296	0	True				
ANR	7971419	AssignmentExpression	* rdiff = diff		7971296	0		=			
ANR	7971420	UnaryOperationExpression	* rdiff		7971296	0					
ANR	7971421	UnaryOperator	*		7971296	0					
ANR	7971422	Identifier	rdiff		7971296	1					
ANR	7971423	Identifier	diff		7971296	1					
ANR	7971424	ReturnStatement	return ( prev ) ;	639:6:14171:14184	7971296	1	True				
ANR	7971425	Identifier	prev		7971296	0					
ANR	7971426	ElseStatement	else		7971296	0					
ANR	7971427	IfStatement	if ( diff < 0 )		7971296	0					
ANR	7971428	Condition	diff < 0	641:13:14205:14212	7971296	0	True				
ANR	7971429	RelationalExpression	diff < 0		7971296	0		<			
ANR	7971430	Identifier	diff		7971296	0					
ANR	7971431	PrimaryExpression	0		7971296	1					
ANR	7971432	CompoundStatement		35:4:923:923	7971296	1					
ANR	7971433	ExpressionStatement	left = 0	647:6:14290:14299	7971296	0	True				
ANR	7971434	AssignmentExpression	left = 0		7971296	0		=			
ANR	7971435	Identifier	left		7971296	0					
ANR	7971436	PrimaryExpression	0		7971296	1					
ANR	7971437	ExpressionStatement	right = prev	648:6:14307:14319	7971296	1	True				
ANR	7971438	AssignmentExpression	right = prev		7971296	0		=			
ANR	7971439	Identifier	right		7971296	0					
ANR	7971440	Identifier	prev		7971296	1					
ANR	7971441	ElseStatement	else		7971296	0					
ANR	7971442	CompoundStatement		44:4:1044:1044	7971296	0					
ANR	7971443	ExpressionStatement	left = prev	656:6:14409:14421	7971296	0	True				
ANR	7971444	AssignmentExpression	left = prev		7971296	0		=			
ANR	7971445	Identifier	left		7971296	0					
ANR	7971446	Identifier	prev		7971296	1					
ANR	7971447	ExpressionStatement	right = num_options - 1	657:6:14429:14452	7971296	1	True				
ANR	7971448	AssignmentExpression	right = num_options - 1		7971296	0		=			
ANR	7971449	Identifier	right		7971296	0					
ANR	7971450	AdditiveExpression	num_options - 1		7971296	1		-			
ANR	7971451	Identifier	num_options		7971296	0					
ANR	7971452	PrimaryExpression	1		7971296	1					
ANR	7971453	ElseStatement	else		7971296	0					
ANR	7971454	CompoundStatement		54:2:1177:1177	7971296	0					
ANR	7971455	ExpressionStatement	left = 0	666:4:14529:14538	7971296	0	True				
ANR	7971456	AssignmentExpression	left = 0		7971296	0		=			
ANR	7971457	Identifier	left		7971296	0					
ANR	7971458	PrimaryExpression	0		7971296	1					
ANR	7971459	ExpressionStatement	right = num_options - 1	667:4:14544:14567	7971296	1	True				
ANR	7971460	AssignmentExpression	right = num_options - 1		7971296	0		=			
ANR	7971461	Identifier	right		7971296	0					
ANR	7971462	AdditiveExpression	num_options - 1		7971296	1		-			
ANR	7971463	Identifier	num_options		7971296	0					
ANR	7971464	PrimaryExpression	1		7971296	1					
ANR	7971465	DoStatement	do		7971296	23					
ANR	7971466	CompoundStatement		64:2:1285:1285	7971296	0					
ANR	7971467	ExpressionStatement	current = ( left + right ) / 2	672:4:14587:14615	7971296	0	True				
ANR	7971468	AssignmentExpression	current = ( left + right ) / 2		7971296	0		=			
ANR	7971469	Identifier	current		7971296	0					
ANR	7971470	MultiplicativeExpression	( left + right ) / 2		7971296	1		/			
ANR	7971471	AdditiveExpression	left + right		7971296	0		+			
ANR	7971472	Identifier	left		7971296	0					
ANR	7971473	Identifier	right		7971296	1					
ANR	7971474	PrimaryExpression	2		7971296	1					
ANR	7971475	ExpressionStatement	"diff = cups_compare_options ( & key , options + current )"	673:4:14621:14676	7971296	1	True				
ANR	7971476	AssignmentExpression	"diff = cups_compare_options ( & key , options + current )"		7971296	0		=			
ANR	7971477	Identifier	diff		7971296	0					
ANR	7971478	CallExpression	"cups_compare_options ( & key , options + current )"		7971296	1					
ANR	7971479	Callee	cups_compare_options		7971296	0					
ANR	7971480	Identifier	cups_compare_options		7971296	0					
ANR	7971481	ArgumentList	& key		7971296	1					
ANR	7971482	Argument	& key		7971296	0					
ANR	7971483	UnaryOperationExpression	& key		7971296	0					
ANR	7971484	UnaryOperator	&		7971296	0					
ANR	7971485	Identifier	key		7971296	1					
ANR	7971486	Argument	options + current		7971296	1					
ANR	7971487	AdditiveExpression	options + current		7971296	0		+			
ANR	7971488	Identifier	options		7971296	0					
ANR	7971489	Identifier	current		7971296	1					
ANR	7971490	IfStatement	if ( diff == 0 )		7971296	2					
ANR	7971491	Condition	diff == 0	675:8:14687:14695	7971296	0	True				
ANR	7971492	EqualityExpression	diff == 0		7971296	0		==			
ANR	7971493	Identifier	diff		7971296	0					
ANR	7971494	PrimaryExpression	0		7971296	1					
ANR	7971495	BreakStatement	break ;	676:6:14704:14709	7971296	1	True				
ANR	7971496	ElseStatement	else		7971296	0					
ANR	7971497	IfStatement	if ( diff < 0 )		7971296	0					
ANR	7971498	Condition	diff < 0	677:13:14724:14731	7971296	0	True				
ANR	7971499	RelationalExpression	diff < 0		7971296	0		<			
ANR	7971500	Identifier	diff		7971296	0					
ANR	7971501	PrimaryExpression	0		7971296	1					
ANR	7971502	ExpressionStatement	right = current	678:6:14740:14755	7971296	1	True				
ANR	7971503	AssignmentExpression	right = current		7971296	0		=			
ANR	7971504	Identifier	right		7971296	0					
ANR	7971505	Identifier	current		7971296	1					
ANR	7971506	ElseStatement	else		7971296	0					
ANR	7971507	ExpressionStatement	left = current	680:6:14772:14786	7971296	0	True				
ANR	7971508	AssignmentExpression	left = current		7971296	0		=			
ANR	7971509	Identifier	left		7971296	0					
ANR	7971510	Identifier	current		7971296	1					
ANR	7971511	Condition	( right - left ) > 1	682:9:14801:14818	7971296	1	True				
ANR	7971512	RelationalExpression	( right - left ) > 1		7971296	0		>			
ANR	7971513	AdditiveExpression	right - left		7971296	0		-			
ANR	7971514	Identifier	right		7971296	0					
ANR	7971515	Identifier	left		7971296	1					
ANR	7971516	PrimaryExpression	1		7971296	1					
ANR	7971517	IfStatement	if ( diff != 0 )		7971296	24					
ANR	7971518	Condition	diff != 0	684:6:14829:14837	7971296	0	True				
ANR	7971519	EqualityExpression	diff != 0		7971296	0		!=			
ANR	7971520	Identifier	diff		7971296	0					
ANR	7971521	PrimaryExpression	0		7971296	1					
ANR	7971522	CompoundStatement		78:2:1546:1546	7971296	1					
ANR	7971523	IfStatement	"if ( ( diff = cups_compare_options ( & key , options + left ) ) <= 0 )"		7971296	0					
ANR	7971524	Condition	"( diff = cups_compare_options ( & key , options + left ) ) <= 0"	690:8:14906:14961	7971296	0	True				
ANR	7971525	RelationalExpression	"( diff = cups_compare_options ( & key , options + left ) ) <= 0"		7971296	0		<=			
ANR	7971526	AssignmentExpression	"diff = cups_compare_options ( & key , options + left )"		7971296	0		=			
ANR	7971527	Identifier	diff		7971296	0					
ANR	7971528	CallExpression	"cups_compare_options ( & key , options + left )"		7971296	1					
ANR	7971529	Callee	cups_compare_options		7971296	0					
ANR	7971530	Identifier	cups_compare_options		7971296	0					
ANR	7971531	ArgumentList	& key		7971296	1					
ANR	7971532	Argument	& key		7971296	0					
ANR	7971533	UnaryOperationExpression	& key		7971296	0					
ANR	7971534	UnaryOperator	&		7971296	0					
ANR	7971535	Identifier	key		7971296	1					
ANR	7971536	Argument	options + left		7971296	1					
ANR	7971537	AdditiveExpression	options + left		7971296	0		+			
ANR	7971538	Identifier	options		7971296	0					
ANR	7971539	Identifier	left		7971296	1					
ANR	7971540	PrimaryExpression	0		7971296	1					
ANR	7971541	ExpressionStatement	current = left	691:6:14970:14984	7971296	1	True				
ANR	7971542	AssignmentExpression	current = left		7971296	0		=			
ANR	7971543	Identifier	current		7971296	0					
ANR	7971544	Identifier	left		7971296	1					
ANR	7971545	ElseStatement	else		7971296	0					
ANR	7971546	CompoundStatement		86:4:1703:1703	7971296	0					
ANR	7971547	ExpressionStatement	"diff = cups_compare_options ( & key , options + right )"	694:6:15007:15060	7971296	0	True				
ANR	7971548	AssignmentExpression	"diff = cups_compare_options ( & key , options + right )"		7971296	0		=			
ANR	7971549	Identifier	diff		7971296	0					
ANR	7971550	CallExpression	"cups_compare_options ( & key , options + right )"		7971296	1					
ANR	7971551	Callee	cups_compare_options		7971296	0					
ANR	7971552	Identifier	cups_compare_options		7971296	0					
ANR	7971553	ArgumentList	& key		7971296	1					
ANR	7971554	Argument	& key		7971296	0					
ANR	7971555	UnaryOperationExpression	& key		7971296	0					
ANR	7971556	UnaryOperator	&		7971296	0					
ANR	7971557	Identifier	key		7971296	1					
ANR	7971558	Argument	options + right		7971296	1					
ANR	7971559	AdditiveExpression	options + right		7971296	0		+			
ANR	7971560	Identifier	options		7971296	0					
ANR	7971561	Identifier	right		7971296	1					
ANR	7971562	ExpressionStatement	current = right	695:6:15068:15083	7971296	1	True				
ANR	7971563	AssignmentExpression	current = right		7971296	0		=			
ANR	7971564	Identifier	current		7971296	0					
ANR	7971565	Identifier	right		7971296	1					
ANR	7971566	ExpressionStatement	* rdiff = diff	703:2:15165:15178	7971296	25	True				
ANR	7971567	AssignmentExpression	* rdiff = diff		7971296	0		=			
ANR	7971568	UnaryOperationExpression	* rdiff		7971296	0					
ANR	7971569	UnaryOperator	*		7971296	0					
ANR	7971570	Identifier	rdiff		7971296	1					
ANR	7971571	Identifier	diff		7971296	1					
ANR	7971572	ReturnStatement	return ( current ) ;	705:2:15183:15199	7971296	26	True				
ANR	7971573	Identifier	current		7971296	0					
ANR	7971574	ReturnType	static int		7971296	1					
ANR	7971575	Identifier	cups_find_option		7971296	2					
ANR	7971576	ParameterList	"const char * name , int num_options , cups_option_t * options , int prev , int * rdiff"		7971296	3					
ANR	7971577	Parameter	const char * name	603:4:13036:13054	7971296	0	True				
ANR	7971578	ParameterType	const char *		7971296	0					
ANR	7971579	Identifier	name		7971296	1					
ANR	7971580	Parameter	int num_options	604:4:13084:13108	7971296	1	True				
ANR	7971581	ParameterType	int		7971296	0					
ANR	7971582	Identifier	num_options		7971296	1					
ANR	7971583	Parameter	cups_option_t * options	605:4:13144:13165	7971296	2	True				
ANR	7971584	ParameterType	cups_option_t *		7971296	0					
ANR	7971585	Identifier	options		7971296	1					
ANR	7971586	Parameter	int prev	606:4:13191:13208	7971296	3	True				
ANR	7971587	ParameterType	int		7971296	0					
ANR	7971588	Identifier	prev		7971296	1					
ANR	7971589	Parameter	int * rdiff	607:4:13242:13261	7971296	4	True				
ANR	7971590	ParameterType	int *		7971296	0					
ANR	7971591	Identifier	rdiff		7971296	1					
ANR	7971592	CFGEntryNode	ENTRY		7971296		True				
ANR	7971593	CFGExitNode	EXIT		7971296		True				
ANR	7971594	Symbol	rdiff		7971296						
ANR	7971595	Symbol	& key		7971296						
ANR	7971596	Symbol	key . name		7971296						
ANR	7971597	Symbol	prev		7971296						
ANR	7971598	Symbol	diff		7971296						
ANR	7971599	Symbol	cups_compare_options		7971296						
ANR	7971600	Symbol	num_options		7971296						
ANR	7971601	Symbol	right		7971296						
ANR	7971602	Symbol	* options		7971296						
ANR	7971603	Symbol	options [ left ] . value		7971296						
ANR	7971604	Symbol	current		7971296						
ANR	7971605	Symbol	options [ left ] . name		7971296						
ANR	7971606	Symbol	left		7971296						
ANR	7971607	Symbol	* rdiff		7971296						
ANR	7971608	Symbol	name		7971296						
ANR	7971609	Symbol	options		7971296						
ANR	7971610	Symbol	* left		7971296						
ANR	7971611	Symbol	key		7971296						
