command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8267794	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pxl_pxparse.c								
ANR	8267795	ClassDef	px_tag_syntax_s	46:8:1444:1576							
ANR	8267796	DeclStmt									
ANR	8267797	Decl							byte	byte	min_input
ANR	8267798	DeclStmt									
ANR	8267799	Decl							byte	byte	state_value
ANR	8267800	DeclStmt									
ANR	8267801	Decl							byte	byte	state_mask
ANR	8267802	DeclStmt									
ANR	8267803	Decl							byte	byte	state_transition
ANR	8267804	DeclStmt									
ANR	8267805	Decl							px_tag_syntax_s	px_tag_syntax_s	px_tag_syntax_t
ANR	8267806	DeclStmt									
ANR	8267807	Decl							const px_tag_syntax_t	const px_tag_syntax_t [ 256 ]	tag_syntax
ANR	8267808	Function	px_process_alloc	132:1:4427:5007							
ANR	8267809	FunctionDef	px_process_alloc (gs_memory_t * memory)		8267808	0					
ANR	8267810	CompoundStatement		143:0:4581:5007	8267808	0					
ANR	8267811	IdentifierDeclStatement	"px_parser_state_t * st = ( px_parser_state_t * ) gs_alloc_bytes ( memory , sizeof ( px_parser_state_t ) , ""px_process_alloc"" ) ;"	144:4:4587:4898	8267808	0	True				
ANR	8267812	IdentifierDecl	"* st = ( px_parser_state_t * ) gs_alloc_bytes ( memory , sizeof ( px_parser_state_t ) , ""px_process_alloc"" )"		8267808	0					
ANR	8267813	IdentifierDeclType	px_parser_state_t *		8267808	0					
ANR	8267814	Identifier	st		8267808	1					
ANR	8267815	AssignmentExpression	"* st = ( px_parser_state_t * ) gs_alloc_bytes ( memory , sizeof ( px_parser_state_t ) , ""px_process_alloc"" )"		8267808	2		=			
ANR	8267816	Identifier	st		8267808	0					
ANR	8267817	CastExpression	"( px_parser_state_t * ) gs_alloc_bytes ( memory , sizeof ( px_parser_state_t ) , ""px_process_alloc"" )"		8267808	1					
ANR	8267818	CastTarget	px_parser_state_t *		8267808	0					
ANR	8267819	CallExpression	"gs_alloc_bytes ( memory , sizeof ( px_parser_state_t ) , ""px_process_alloc"" )"		8267808	1					
ANR	8267820	Callee	gs_alloc_bytes		8267808	0					
ANR	8267821	Identifier	gs_alloc_bytes		8267808	0					
ANR	8267822	ArgumentList	memory		8267808	1					
ANR	8267823	Argument	memory		8267808	0					
ANR	8267824	Identifier	memory		8267808	0					
ANR	8267825	Argument	sizeof ( px_parser_state_t )		8267808	1					
ANR	8267826	SizeofExpression	sizeof ( px_parser_state_t )		8267808	0					
ANR	8267827	Sizeof	sizeof		8267808	0					
ANR	8267828	SizeofOperand	px_parser_state_t		8267808	1					
ANR	8267829	Argument	"""px_process_alloc"""		8267808	2					
ANR	8267830	PrimaryExpression	"""px_process_alloc"""		8267808	0					
ANR	8267831	IfStatement	if ( st == 0 )		8267808	1					
ANR	8267832	Condition	st == 0	149:8:4909:4915	8267808	0	True				
ANR	8267833	EqualityExpression	st == 0		8267808	0		==			
ANR	8267834	Identifier	st		8267808	0					
ANR	8267835	PrimaryExpression	0		8267808	1					
ANR	8267836	ReturnStatement	return 0 ;	150:8:4926:4934	8267808	1	True				
ANR	8267837	PrimaryExpression	0		8267808	0					
ANR	8267838	ExpressionStatement	st -> memory = memory	151:4:4940:4959	8267808	2	True				
ANR	8267839	AssignmentExpression	st -> memory = memory		8267808	0		=			
ANR	8267840	PtrMemberAccess	st -> memory		8267808	0					
ANR	8267841	Identifier	st		8267808	0					
ANR	8267842	Identifier	memory		8267808	1					
ANR	8267843	Identifier	memory		8267808	1					
ANR	8267844	ExpressionStatement	"px_process_init ( st , true )"	152:4:4965:4990	8267808	3	True				
ANR	8267845	CallExpression	"px_process_init ( st , true )"		8267808	0					
ANR	8267846	Callee	px_process_init		8267808	0					
ANR	8267847	Identifier	px_process_init		8267808	0					
ANR	8267848	ArgumentList	st		8267808	1					
ANR	8267849	Argument	st		8267808	0					
ANR	8267850	Identifier	st		8267808	0					
ANR	8267851	Argument	true		8267808	1					
ANR	8267852	Identifier	true		8267808	0					
ANR	8267853	ReturnStatement	return st ;	153:4:4996:5005	8267808	4	True				
ANR	8267854	Identifier	st		8267808	0					
ANR	8267855	ReturnType	undef I undef P undef C undef R undef D undef DI undef A px_parser_state_t *		8267808	1					
ANR	8267856	Identifier	px_process_alloc		8267808	2					
ANR	8267857	ParameterList	gs_memory_t * memory		8267808	3					
ANR	8267858	Parameter	gs_memory_t * memory	142:17:4559:4578	8267808	0	True				
ANR	8267859	ParameterType	gs_memory_t *		8267808	0					
ANR	8267860	Identifier	memory		8267808	1					
ANR	8267861	CFGEntryNode	ENTRY		8267808		True				
ANR	8267862	CFGExitNode	EXIT		8267808		True				
ANR	8267863	Symbol	st		8267808						
ANR	8267864	Symbol	gs_alloc_bytes		8267808						
ANR	8267865	Symbol	memory		8267808						
ANR	8267866	Symbol	* st		8267808						
ANR	8267867	Symbol	st -> memory		8267808						
ANR	8267868	Symbol	true		8267808						
ANR	8267869	Function	px_process_release	157:0:5040:5146							
ANR	8267870	FunctionDef	px_process_release (px_parser_state_t * st)		8267869	0					
ANR	8267871	CompoundStatement		159:0:5088:5146	8267869	0					
ANR	8267872	ExpressionStatement	"gs_free_object ( st -> memory , st , ""px_process_alloc"" )"	160:4:5094:5144	8267869	0	True				
ANR	8267873	CallExpression	"gs_free_object ( st -> memory , st , ""px_process_alloc"" )"		8267869	0					
ANR	8267874	Callee	gs_free_object		8267869	0					
ANR	8267875	Identifier	gs_free_object		8267869	0					
ANR	8267876	ArgumentList	st -> memory		8267869	1					
ANR	8267877	Argument	st -> memory		8267869	0					
ANR	8267878	PtrMemberAccess	st -> memory		8267869	0					
ANR	8267879	Identifier	st		8267869	0					
ANR	8267880	Identifier	memory		8267869	1					
ANR	8267881	Argument	st		8267869	1					
ANR	8267882	Identifier	st		8267869	0					
ANR	8267883	Argument	"""px_process_alloc"""		8267869	2					
ANR	8267884	PrimaryExpression	"""px_process_alloc"""		8267869	0					
ANR	8267885	ReturnType	void		8267869	1					
ANR	8267886	Identifier	px_process_release		8267869	2					
ANR	8267887	ParameterList	px_parser_state_t * st		8267869	3					
ANR	8267888	Parameter	px_parser_state_t * st	158:19:5064:5085	8267869	0	True				
ANR	8267889	ParameterType	px_parser_state_t *		8267869	0					
ANR	8267890	Identifier	st		8267869	1					
ANR	8267891	CFGEntryNode	ENTRY		8267869		True				
ANR	8267892	CFGExitNode	EXIT		8267869		True				
ANR	8267893	Symbol	st		8267869						
ANR	8267894	Symbol	* st		8267869						
ANR	8267895	Symbol	st -> memory		8267869						
ANR	8267896	Function	px_process_init	164:0:5184:5726							
ANR	8267897	FunctionDef	"px_process_init (px_parser_state_t * st , bool big_endian)"		8267896	0					
ANR	8267898	CompoundStatement		166:0:5246:5726	8267896	0					
ANR	8267899	ExpressionStatement	st -> big_endian = big_endian	167:4:5252:5279	8267896	0	True				
ANR	8267900	AssignmentExpression	st -> big_endian = big_endian		8267896	0		=			
ANR	8267901	PtrMemberAccess	st -> big_endian		8267896	0					
ANR	8267902	Identifier	st		8267896	0					
ANR	8267903	Identifier	big_endian		8267896	1					
ANR	8267904	Identifier	big_endian		8267896	1					
ANR	8267905	ExpressionStatement	st -> operator_count = 0	168:4:5285:5307	8267896	1	True				
ANR	8267906	AssignmentExpression	st -> operator_count = 0		8267896	0		=			
ANR	8267907	PtrMemberAccess	st -> operator_count		8267896	0					
ANR	8267908	Identifier	st		8267896	0					
ANR	8267909	Identifier	operator_count		8267896	1					
ANR	8267910	PrimaryExpression	0		8267896	1					
ANR	8267911	ExpressionStatement	st -> parent_operator_count = 0	169:4:5313:5342	8267896	2	True				
ANR	8267912	AssignmentExpression	st -> parent_operator_count = 0		8267896	0		=			
ANR	8267913	PtrMemberAccess	st -> parent_operator_count		8267896	0					
ANR	8267914	Identifier	st		8267896	0					
ANR	8267915	Identifier	parent_operator_count		8267896	1					
ANR	8267916	PrimaryExpression	0		8267896	1					
ANR	8267917	ExpressionStatement	st -> last_operator = pxtNull	170:4:5348:5375	8267896	3	True				
ANR	8267918	AssignmentExpression	st -> last_operator = pxtNull		8267896	0		=			
ANR	8267919	PtrMemberAccess	st -> last_operator		8267896	0					
ANR	8267920	Identifier	st		8267896	0					
ANR	8267921	Identifier	last_operator		8267896	1					
ANR	8267922	Identifier	pxtNull		8267896	1					
ANR	8267923	ExpressionStatement	st -> saved_count = 0	171:4:5381:5400	8267896	4	True				
ANR	8267924	AssignmentExpression	st -> saved_count = 0		8267896	0		=			
ANR	8267925	PtrMemberAccess	st -> saved_count		8267896	0					
ANR	8267926	Identifier	st		8267896	0					
ANR	8267927	Identifier	saved_count		8267896	1					
ANR	8267928	PrimaryExpression	0		8267896	1					
ANR	8267929	ExpressionStatement	st -> data_left = 0	172:4:5406:5423	8267896	5	True				
ANR	8267930	AssignmentExpression	st -> data_left = 0		8267896	0		=			
ANR	8267931	PtrMemberAccess	st -> data_left		8267896	0					
ANR	8267932	Identifier	st		8267896	0					
ANR	8267933	Identifier	data_left		8267896	1					
ANR	8267934	PrimaryExpression	0		8267896	1					
ANR	8267935	ExpressionStatement	st -> macro_state = ptsInitial	173:4:5429:5457	8267896	6	True				
ANR	8267936	AssignmentExpression	st -> macro_state = ptsInitial		8267896	0		=			
ANR	8267937	PtrMemberAccess	st -> macro_state		8267896	0					
ANR	8267938	Identifier	st		8267896	0					
ANR	8267939	Identifier	macro_state		8267896	1					
ANR	8267940	Identifier	ptsInitial		8267896	1					
ANR	8267941	ExpressionStatement	st -> stack_count = 0	174:4:5463:5482	8267896	7	True				
ANR	8267942	AssignmentExpression	st -> stack_count = 0		8267896	0		=			
ANR	8267943	PtrMemberAccess	st -> stack_count		8267896	0					
ANR	8267944	Identifier	st		8267896	0					
ANR	8267945	Identifier	stack_count		8267896	1					
ANR	8267946	PrimaryExpression	0		8267896	1					
ANR	8267947	ExpressionStatement	st -> data_proc = 0	175:4:5488:5505	8267896	8	True				
ANR	8267948	AssignmentExpression	st -> data_proc = 0		8267896	0		=			
ANR	8267949	PtrMemberAccess	st -> data_proc		8267896	0					
ANR	8267950	Identifier	st		8267896	0					
ANR	8267951	Identifier	data_proc		8267896	1					
ANR	8267952	PrimaryExpression	0		8267896	1					
ANR	8267953	CompoundStatement		12:8:274:279	8267896	9					
ANR	8267954	IdentifierDeclStatement	int i ;	177:8:5521:5526	8267896	0	True				
ANR	8267955	IdentifierDecl	i		8267896	0					
ANR	8267956	IdentifierDeclType	int		8267896	0					
ANR	8267957	Identifier	i		8267896	1					
ANR	8267958	ForStatement	for ( i = 0 ; i < max_px_args ; ++ i )		8267896	1					
ANR	8267959	ForInit	i = 0 ;	179:13:5542:5547	8267896	0	True				
ANR	8267960	AssignmentExpression	i = 0		8267896	0		=			
ANR	8267961	Identifier	i		8267896	0					
ANR	8267962	PrimaryExpression	0		8267896	1					
ANR	8267963	Condition	i < max_px_args	179:20:5549:5563	8267896	1	True				
ANR	8267964	RelationalExpression	i < max_px_args		8267896	0		<			
ANR	8267965	Identifier	i		8267896	0					
ANR	8267966	Identifier	max_px_args		8267896	1					
ANR	8267967	UnaryExpression	++ i	179:37:5566:5568	8267896	2	True				
ANR	8267968	IncDec	++		8267896	0					
ANR	8267969	Identifier	i		8267896	1					
ANR	8267970	ExpressionStatement	st -> args . pv [ i ] = 0	180:12:5583:5601	8267896	3	True				
ANR	8267971	AssignmentExpression	st -> args . pv [ i ] = 0		8267896	0		=			
ANR	8267972	ArrayIndexing	st -> args . pv [ i ]		8267896	0					
ANR	8267973	MemberAccess	st -> args . pv		8267896	0					
ANR	8267974	PtrMemberAccess	st -> args		8267896	0					
ANR	8267975	Identifier	st		8267896	0					
ANR	8267976	Identifier	args		8267896	1					
ANR	8267977	Identifier	pv		8267896	1					
ANR	8267978	Identifier	i		8267896	1					
ANR	8267979	PrimaryExpression	0		8267896	1					
ANR	8267980	ExpressionStatement	st -> args . parser = 0	182:4:5613:5632	8267896	10	True				
ANR	8267981	AssignmentExpression	st -> args . parser = 0		8267896	0		=			
ANR	8267982	MemberAccess	st -> args . parser		8267896	0					
ANR	8267983	PtrMemberAccess	st -> args		8267896	0					
ANR	8267984	Identifier	st		8267896	0					
ANR	8267985	Identifier	args		8267896	1					
ANR	8267986	Identifier	parser		8267896	1					
ANR	8267987	PrimaryExpression	0		8267896	1					
ANR	8267988	ExpressionStatement	"memset ( st -> attribute_indices , 0 , px_attribute_next )"	183:4:5673:5724	8267896	11	True				
ANR	8267989	CallExpression	"memset ( st -> attribute_indices , 0 , px_attribute_next )"		8267896	0					
ANR	8267990	Callee	memset		8267896	0					
ANR	8267991	Identifier	memset		8267896	0					
ANR	8267992	ArgumentList	st -> attribute_indices		8267896	1					
ANR	8267993	Argument	st -> attribute_indices		8267896	0					
ANR	8267994	PtrMemberAccess	st -> attribute_indices		8267896	0					
ANR	8267995	Identifier	st		8267896	0					
ANR	8267996	Identifier	attribute_indices		8267896	1					
ANR	8267997	Argument	0		8267896	1					
ANR	8267998	PrimaryExpression	0		8267896	0					
ANR	8267999	Argument	px_attribute_next		8267896	2					
ANR	8268000	Identifier	px_attribute_next		8267896	0					
ANR	8268001	ReturnType	void		8267896	1					
ANR	8268002	Identifier	px_process_init		8267896	2					
ANR	8268003	ParameterList	"px_parser_state_t * st , bool big_endian"		8267896	3					
ANR	8268004	Parameter	px_parser_state_t * st	165:16:5205:5226	8267896	0	True				
ANR	8268005	ParameterType	px_parser_state_t *		8267896	0					
ANR	8268006	Identifier	st		8267896	1					
ANR	8268007	Parameter	bool big_endian	165:40:5229:5243	8267896	1	True				
ANR	8268008	ParameterType	bool		8267896	0					
ANR	8268009	Identifier	big_endian		8267896	1					
ANR	8268010	CFGEntryNode	ENTRY		8267896		True				
ANR	8268011	CFGExitNode	EXIT		8267896		True				
ANR	8268012	Symbol	* st		8267896						
ANR	8268013	Symbol	st -> stack_count		8267896						
ANR	8268014	Symbol	* * st		8267896						
ANR	8268015	Symbol	st -> parent_operator_count		8267896						
ANR	8268016	Symbol	pxtNull		8267896						
ANR	8268017	Symbol	st -> big_endian		8267896						
ANR	8268018	Symbol	st -> last_operator		8267896						
ANR	8268019	Symbol	* st -> args . pv		8267896						
ANR	8268020	Symbol	st		8267896						
ANR	8268021	Symbol	st -> saved_count		8267896						
ANR	8268022	Symbol	st -> macro_state		8267896						
ANR	8268023	Symbol	max_px_args		8267896						
ANR	8268024	Symbol	st -> data_proc		8267896						
ANR	8268025	Symbol	i		8267896						
ANR	8268026	Symbol	st -> operator_count		8267896						
ANR	8268027	Symbol	st -> args . pv		8267896						
ANR	8268028	Symbol	ptsInitial		8267896						
ANR	8268029	Symbol	* i		8267896						
ANR	8268030	Symbol	big_endian		8267896						
ANR	8268031	Symbol	* st -> args		8267896						
ANR	8268032	Symbol	st -> args		8267896						
ANR	8268033	Symbol	st -> data_left		8267896						
ANR	8268034	Symbol	st -> attribute_indices		8267896						
ANR	8268035	Symbol	st -> args . parser		8267896						
ANR	8268036	Symbol	px_attribute_next		8267896						
ANR	8268037	Function	px_save_array	195:0:6132:6897							
ANR	8268038	FunctionDef	"px_save_array (px_value_t * pv , px_state_t * pxs , client_name_t cname , uint nbytes)"		8268037	0					
ANR	8268039	CompoundStatement		198:0:6240:6897	8268037	0					
ANR	8268040	IfStatement	if ( pv -> type & pxd_on_heap )		8268037	0					
ANR	8268041	Condition	pv -> type & pxd_on_heap	199:8:6250:6271	8268037	0	True				
ANR	8268042	BitAndExpression	pv -> type & pxd_on_heap		8268037	0		&			
ANR	8268043	PtrMemberAccess	pv -> type		8268037	0					
ANR	8268044	Identifier	pv		8268037	0					
ANR	8268045	Identifier	type		8268037	1					
ANR	8268046	Identifier	pxd_on_heap		8268037	1					
ANR	8268047	CompoundStatement		2:32:33:33	8268037	1					
ANR	8268048	ExpressionStatement	pv -> type &= ~pxd_on_heap	200:8:6344:6368	8268037	0	True				
ANR	8268049	AssignmentExpression	pv -> type &= ~pxd_on_heap		8268037	0		&=			
ANR	8268050	PtrMemberAccess	pv -> type		8268037	0					
ANR	8268051	Identifier	pv		8268037	0					
ANR	8268052	Identifier	type		8268037	1					
ANR	8268053	Identifier	~pxd_on_heap		8268037	1					
ANR	8268054	ElseStatement	else		8268037	0					
ANR	8268055	CompoundStatement		8:8:353:470	8268037	0					
ANR	8268056	IdentifierDeclStatement	uint num_elements = pv -> value . array . size ;	203:8:6504:6544	8268037	0	True				
ANR	8268057	IdentifierDecl	num_elements = pv -> value . array . size		8268037	0					
ANR	8268058	IdentifierDeclType	uint		8268037	0					
ANR	8268059	Identifier	num_elements		8268037	1					
ANR	8268060	AssignmentExpression	num_elements = pv -> value . array . size		8268037	2		=			
ANR	8268061	Identifier	num_elements		8268037	0					
ANR	8268062	MemberAccess	pv -> value . array . size		8268037	1					
ANR	8268063	MemberAccess	pv -> value . array		8268037	0					
ANR	8268064	PtrMemberAccess	pv -> value		8268037	0					
ANR	8268065	Identifier	pv		8268037	0					
ANR	8268066	Identifier	value		8268037	1					
ANR	8268067	Identifier	array		8268037	1					
ANR	8268068	Identifier	size		8268037	1					
ANR	8268069	IdentifierDeclStatement	uint elt_size = value_size ( pv ) ;	204:8:6554:6584	8268037	1	True				
ANR	8268070	IdentifierDecl	elt_size = value_size ( pv )		8268037	0					
ANR	8268071	IdentifierDeclType	uint		8268037	0					
ANR	8268072	Identifier	elt_size		8268037	1					
ANR	8268073	AssignmentExpression	elt_size = value_size ( pv )		8268037	2		=			
ANR	8268074	Identifier	elt_size		8268037	0					
ANR	8268075	CallExpression	value_size ( pv )		8268037	1					
ANR	8268076	Callee	value_size		8268037	0					
ANR	8268077	Identifier	value_size		8268037	0					
ANR	8268078	ArgumentList	pv		8268037	1					
ANR	8268079	Argument	pv		8268037	0					
ANR	8268080	Identifier	pv		8268037	0					
ANR	8268081	IdentifierDeclStatement	"byte * copy = gs_alloc_byte_array ( pxs -> memory , num_elements , elt_size , cname ) ;"	205:8:6594:6711	8268037	2	True				
ANR	8268082	IdentifierDecl	"* copy = gs_alloc_byte_array ( pxs -> memory , num_elements , elt_size , cname )"		8268037	0					
ANR	8268083	IdentifierDeclType	byte *		8268037	0					
ANR	8268084	Identifier	copy		8268037	1					
ANR	8268085	AssignmentExpression	"* copy = gs_alloc_byte_array ( pxs -> memory , num_elements , elt_size , cname )"		8268037	2		=			
ANR	8268086	Identifier	copy		8268037	0					
ANR	8268087	CallExpression	"gs_alloc_byte_array ( pxs -> memory , num_elements , elt_size , cname )"		8268037	1					
ANR	8268088	Callee	gs_alloc_byte_array		8268037	0					
ANR	8268089	Identifier	gs_alloc_byte_array		8268037	0					
ANR	8268090	ArgumentList	pxs -> memory		8268037	1					
ANR	8268091	Argument	pxs -> memory		8268037	0					
ANR	8268092	PtrMemberAccess	pxs -> memory		8268037	0					
ANR	8268093	Identifier	pxs		8268037	0					
ANR	8268094	Identifier	memory		8268037	1					
ANR	8268095	Argument	num_elements		8268037	1					
ANR	8268096	Identifier	num_elements		8268037	0					
ANR	8268097	Argument	elt_size		8268037	2					
ANR	8268098	Identifier	elt_size		8268037	0					
ANR	8268099	Argument	cname		8268037	3					
ANR	8268100	Identifier	cname		8268037	0					
ANR	8268101	IfStatement	if ( copy == 0 )		8268037	3					
ANR	8268102	Condition	copy == 0	208:12:6726:6734	8268037	0	True				
ANR	8268103	EqualityExpression	copy == 0		8268037	0		==			
ANR	8268104	Identifier	copy		8268037	0					
ANR	8268105	PrimaryExpression	0		8268037	1					
ANR	8268106	ExpressionStatement	return_error ( errorInsufficientMemory )	209:12:6749:6786	8268037	1	True				
ANR	8268107	CallExpression	return_error ( errorInsufficientMemory )		8268037	0					
ANR	8268108	Callee	return_error		8268037	0					
ANR	8268109	Identifier	return_error		8268037	0					
ANR	8268110	ArgumentList	errorInsufficientMemory		8268037	1					
ANR	8268111	Argument	errorInsufficientMemory		8268037	0					
ANR	8268112	Identifier	errorInsufficientMemory		8268037	0					
ANR	8268113	ExpressionStatement	"memcpy ( copy , pv -> value . array . data , nbytes )"	210:8:6796:6838	8268037	4	True				
ANR	8268114	CallExpression	"memcpy ( copy , pv -> value . array . data , nbytes )"		8268037	0					
ANR	8268115	Callee	memcpy		8268037	0					
ANR	8268116	Identifier	memcpy		8268037	0					
ANR	8268117	ArgumentList	copy		8268037	1					
ANR	8268118	Argument	copy		8268037	0					
ANR	8268119	Identifier	copy		8268037	0					
ANR	8268120	Argument	pv -> value . array . data		8268037	1					
ANR	8268121	MemberAccess	pv -> value . array . data		8268037	0					
ANR	8268122	MemberAccess	pv -> value . array		8268037	0					
ANR	8268123	PtrMemberAccess	pv -> value		8268037	0					
ANR	8268124	Identifier	pv		8268037	0					
ANR	8268125	Identifier	value		8268037	1					
ANR	8268126	Identifier	array		8268037	1					
ANR	8268127	Identifier	data		8268037	1					
ANR	8268128	Argument	nbytes		8268037	2					
ANR	8268129	Identifier	nbytes		8268037	0					
ANR	8268130	ExpressionStatement	pv -> value . array . data = copy	211:8:6848:6875	8268037	5	True				
ANR	8268131	AssignmentExpression	pv -> value . array . data = copy		8268037	0		=			
ANR	8268132	MemberAccess	pv -> value . array . data		8268037	0					
ANR	8268133	MemberAccess	pv -> value . array		8268037	0					
ANR	8268134	PtrMemberAccess	pv -> value		8268037	0					
ANR	8268135	Identifier	pv		8268037	0					
ANR	8268136	Identifier	value		8268037	1					
ANR	8268137	Identifier	array		8268037	1					
ANR	8268138	Identifier	data		8268037	1					
ANR	8268139	Identifier	copy		8268037	1					
ANR	8268140	ReturnStatement	return 0 ;	213:4:6887:6895	8268037	1	True				
ANR	8268141	PrimaryExpression	0		8268037	0					
ANR	8268142	ReturnType	static int		8268037	1					
ANR	8268143	Identifier	px_save_array		8268037	2					
ANR	8268144	ParameterList	"px_value_t * pv , px_state_t * pxs , client_name_t cname , uint nbytes"		8268037	3					
ANR	8268145	Parameter	px_value_t * pv	196:14:6157:6171	8268037	0	True				
ANR	8268146	ParameterType	px_value_t *		8268037	0					
ANR	8268147	Identifier	pv		8268037	1					
ANR	8268148	Parameter	px_state_t * pxs	196:31:6174:6189	8268037	1	True				
ANR	8268149	ParameterType	px_state_t *		8268037	0					
ANR	8268150	Identifier	pxs		8268037	1					
ANR	8268151	Parameter	client_name_t cname	196:49:6192:6210	8268037	2	True				
ANR	8268152	ParameterType	client_name_t		8268037	0					
ANR	8268153	Identifier	cname		8268037	1					
ANR	8268154	Parameter	uint nbytes	197:14:6227:6237	8268037	3	True				
ANR	8268155	ParameterType	uint		8268037	0					
ANR	8268156	Identifier	nbytes		8268037	1					
ANR	8268157	CFGEntryNode	ENTRY		8268037		True				
ANR	8268158	CFGExitNode	EXIT		8268037		True				
ANR	8268159	Symbol	~pxd_on_heap		8268037						
ANR	8268160	Symbol	errorInsufficientMemory		8268037						
ANR	8268161	Symbol	value_size		8268037						
ANR	8268162	Symbol	pv		8268037						
ANR	8268163	Symbol	pxs -> memory		8268037						
ANR	8268164	Symbol	pv -> value . array . data		8268037						
ANR	8268165	Symbol	cname		8268037						
ANR	8268166	Symbol	pv -> value		8268037						
ANR	8268167	Symbol	elt_size		8268037						
ANR	8268168	Symbol	pxs		8268037						
ANR	8268169	Symbol	nbytes		8268037						
ANR	8268170	Symbol	* pv		8268037						
ANR	8268171	Symbol	pv -> value . array		8268037						
ANR	8268172	Symbol	pxd_on_heap		8268037						
ANR	8268173	Symbol	num_elements		8268037						
ANR	8268174	Symbol	pv -> value . array . size		8268037						
ANR	8268175	Symbol	* pxs		8268037						
ANR	8268176	Symbol	copy		8268037						
ANR	8268177	Symbol	gs_alloc_byte_array		8268037						
ANR	8268178	Symbol	pv -> type		8268037						
ANR	8268179	DeclStmt									
ANR	8268180	Decl							uint	uint	i_
ANR	8268181	Function	trace_array_data	236:0:7653:9212							
ANR	8268182	FunctionDef	"trace_array_data (const gs_memory_t * mem , const char * label , const px_value_t * pav)"		8268181	0					
ANR	8268183	CompoundStatement		239:0:7767:9212	8268181	0					
ANR	8268184	IdentifierDeclStatement	px_data_type_t type = pav -> type ;	240:4:7773:7804	8268181	0	True				
ANR	8268185	IdentifierDecl	type = pav -> type		8268181	0					
ANR	8268186	IdentifierDeclType	px_data_type_t		8268181	0					
ANR	8268187	Identifier	type		8268181	1					
ANR	8268188	AssignmentExpression	type = pav -> type		8268181	2		=			
ANR	8268189	Identifier	type		8268181	0					
ANR	8268190	PtrMemberAccess	pav -> type		8268181	1					
ANR	8268191	Identifier	pav		8268181	0					
ANR	8268192	Identifier	type		8268181	1					
ANR	8268193	IdentifierDeclStatement	const byte * ptr = pav -> value . array . data ;	241:4:7810:7849	8268181	1	True				
ANR	8268194	IdentifierDecl	* ptr = pav -> value . array . data		8268181	0					
ANR	8268195	IdentifierDeclType	const byte *		8268181	0					
ANR	8268196	Identifier	ptr		8268181	1					
ANR	8268197	AssignmentExpression	* ptr = pav -> value . array . data		8268181	2		=			
ANR	8268198	Identifier	ptr		8268181	0					
ANR	8268199	MemberAccess	pav -> value . array . data		8268181	1					
ANR	8268200	MemberAccess	pav -> value . array		8268181	0					
ANR	8268201	PtrMemberAccess	pav -> value		8268181	0					
ANR	8268202	Identifier	pav		8268181	0					
ANR	8268203	Identifier	value		8268181	1					
ANR	8268204	Identifier	array		8268181	1					
ANR	8268205	Identifier	data		8268181	1					
ANR	8268206	IdentifierDeclStatement	uint count = pav -> value . array . size ;	242:4:7855:7889	8268181	2	True				
ANR	8268207	IdentifierDecl	count = pav -> value . array . size		8268181	0					
ANR	8268208	IdentifierDeclType	uint		8268181	0					
ANR	8268209	Identifier	count		8268181	1					
ANR	8268210	AssignmentExpression	count = pav -> value . array . size		8268181	2		=			
ANR	8268211	Identifier	count		8268181	0					
ANR	8268212	MemberAccess	pav -> value . array . size		8268181	1					
ANR	8268213	MemberAccess	pav -> value . array		8268181	0					
ANR	8268214	PtrMemberAccess	pav -> value		8268181	0					
ANR	8268215	Identifier	pav		8268181	0					
ANR	8268216	Identifier	value		8268181	1					
ANR	8268217	Identifier	array		8268181	1					
ANR	8268218	Identifier	size		8268181	1					
ANR	8268219	IdentifierDeclStatement	bool big_endian = ( type & pxd_big_endian ) != 0 ;	243:4:7895:7941	8268181	3	True				
ANR	8268220	IdentifierDecl	big_endian = ( type & pxd_big_endian ) != 0		8268181	0					
ANR	8268221	IdentifierDeclType	bool		8268181	0					
ANR	8268222	Identifier	big_endian		8268181	1					
ANR	8268223	AssignmentExpression	big_endian = ( type & pxd_big_endian ) != 0		8268181	2		=			
ANR	8268224	Identifier	big_endian		8268181	0					
ANR	8268225	EqualityExpression	( type & pxd_big_endian ) != 0		8268181	1		!=			
ANR	8268226	BitAndExpression	type & pxd_big_endian		8268181	0		&			
ANR	8268227	Identifier	type		8268181	0					
ANR	8268228	Identifier	pxd_big_endian		8268181	1					
ANR	8268229	PrimaryExpression	0		8268181	1					
ANR	8268230	IdentifierDeclStatement	bool text = ( type & pxd_ubyte ) != 0 ;	244:4:7947:7982	8268181	4	True				
ANR	8268231	IdentifierDecl	text = ( type & pxd_ubyte ) != 0		8268181	0					
ANR	8268232	IdentifierDeclType	bool		8268181	0					
ANR	8268233	Identifier	text		8268181	1					
ANR	8268234	AssignmentExpression	text = ( type & pxd_ubyte ) != 0		8268181	2		=			
ANR	8268235	Identifier	text		8268181	0					
ANR	8268236	EqualityExpression	( type & pxd_ubyte ) != 0		8268181	1		!=			
ANR	8268237	BitAndExpression	type & pxd_ubyte		8268181	0		&			
ANR	8268238	Identifier	type		8268181	0					
ANR	8268239	Identifier	pxd_ubyte		8268181	1					
ANR	8268240	PrimaryExpression	0		8268181	1					
ANR	8268241	IdentifierDeclStatement	uint i ;	245:4:7988:7994	8268181	5	True				
ANR	8268242	IdentifierDecl	i		8268181	0					
ANR	8268243	IdentifierDeclType	uint		8268181	0					
ANR	8268244	Identifier	i		8268181	1					
ANR	8268245	ExpressionStatement	"dmputs ( mem , label )"	247:4:8001:8019	8268181	6	True				
ANR	8268246	CallExpression	"dmputs ( mem , label )"		8268181	0					
ANR	8268247	Callee	dmputs		8268181	0					
ANR	8268248	Identifier	dmputs		8268181	0					
ANR	8268249	ArgumentList	mem		8268181	1					
ANR	8268250	Argument	mem		8268181	0					
ANR	8268251	Identifier	mem		8268181	0					
ANR	8268252	Argument	label		8268181	1					
ANR	8268253	Identifier	label		8268181	0					
ANR	8268254	ExpressionStatement	"dmputs ( mem , ( type & pxd_ubyte ? "" <"" : "" {"" ) )"	248:4:8025:8070	8268181	7	True				
ANR	8268255	CallExpression	"dmputs ( mem , ( type & pxd_ubyte ? "" <"" : "" {"" ) )"		8268181	0					
ANR	8268256	Callee	dmputs		8268181	0					
ANR	8268257	Identifier	dmputs		8268181	0					
ANR	8268258	ArgumentList	mem		8268181	1					
ANR	8268259	Argument	mem		8268181	0					
ANR	8268260	Identifier	mem		8268181	0					
ANR	8268261	Argument	"type & pxd_ubyte ? "" <"" : "" {"""		8268181	1					
ANR	8268262	ConditionalExpression	"type & pxd_ubyte ? "" <"" : "" {"""		8268181	0					
ANR	8268263	Condition	type & pxd_ubyte		8268181	0					
ANR	8268264	BitAndExpression	type & pxd_ubyte		8268181	0		&			
ANR	8268265	Identifier	type		8268181	0					
ANR	8268266	Identifier	pxd_ubyte		8268181	1					
ANR	8268267	PrimaryExpression	""" <"""		8268181	1					
ANR	8268268	PrimaryExpression	""" {"""		8268181	2					
ANR	8268269	ForStatement	for ( i = 0 ; i < count ; ++ i )		8268181	8					
ANR	8268270	ForInit	i = 0 ;	249:9:8081:8086	8268181	0	True				
ANR	8268271	AssignmentExpression	i = 0		8268181	0		=			
ANR	8268272	Identifier	i		8268181	0					
ANR	8268273	PrimaryExpression	0		8268181	1					
ANR	8268274	Condition	i < count	249:16:8088:8096	8268181	1	True				
ANR	8268275	RelationalExpression	i < count		8268181	0		<			
ANR	8268276	Identifier	i		8268181	0					
ANR	8268277	Identifier	count		8268181	1					
ANR	8268278	UnaryExpression	++ i	249:27:8099:8101	8268181	2	True				
ANR	8268279	IncDec	++		8268181	0					
ANR	8268280	Identifier	i		8268181	1					
ANR	8268281	CompoundStatement		11:32:336:336	8268181	3					
ANR	8268282	IfStatement	if ( ! ( i & 15 ) && i )		8268181	0					
ANR	8268283	Condition	! ( i & 15 ) && i	250:12:8118:8131	8268181	0	True				
ANR	8268284	AndExpression	! ( i & 15 ) && i		8268181	0		&&			
ANR	8268285	UnaryOperationExpression	! ( i & 15 )		8268181	0					
ANR	8268286	UnaryOperator	!		8268181	0					
ANR	8268287	BitAndExpression	i & 15		8268181	1		&			
ANR	8268288	Identifier	i		8268181	0					
ANR	8268289	PrimaryExpression	15		8268181	1					
ANR	8268290	Identifier	i		8268181	1					
ANR	8268291	CompoundStatement		13:12:380:393	8268181	1					
ANR	8268292	IdentifierDeclStatement	const char * p ;	251:12:8148:8161	8268181	0	True				
ANR	8268293	IdentifierDecl	* p		8268181	0					
ANR	8268294	IdentifierDeclType	const char *		8268181	0					
ANR	8268295	Identifier	p		8268181	1					
ANR	8268296	ExpressionStatement	"dmputs ( mem , ""\\n  "" )"	253:12:8176:8195	8268181	1	True				
ANR	8268297	CallExpression	"dmputs ( mem , ""\\n  "" )"		8268181	0					
ANR	8268298	Callee	dmputs		8268181	0					
ANR	8268299	Identifier	dmputs		8268181	0					
ANR	8268300	ArgumentList	mem		8268181	1					
ANR	8268301	Argument	mem		8268181	0					
ANR	8268302	Identifier	mem		8268181	0					
ANR	8268303	Argument	"""\\n  """		8268181	1					
ANR	8268304	PrimaryExpression	"""\\n  """		8268181	0					
ANR	8268305	ForStatement	for ( p = label ; * p ; ++ p )		8268181	2					
ANR	8268306	ForInit	p = label ;	254:17:8214:8223	8268181	0	True				
ANR	8268307	AssignmentExpression	p = label		8268181	0		=			
ANR	8268308	Identifier	p		8268181	0					
ANR	8268309	Identifier	label		8268181	1					
ANR	8268310	Condition	* p	254:28:8225:8226	8268181	1	True				
ANR	8268311	UnaryOperationExpression	* p		8268181	0					
ANR	8268312	UnaryOperator	*		8268181	0					
ANR	8268313	Identifier	p		8268181	1					
ANR	8268314	UnaryExpression	++ p	254:32:8229:8231	8268181	2	True				
ANR	8268315	IncDec	++		8268181	0					
ANR	8268316	Identifier	p		8268181	1					
ANR	8268317	ExpressionStatement	"dmputc ( mem , ' ' )"	255:16:8250:8266	8268181	3	True				
ANR	8268318	CallExpression	"dmputc ( mem , ' ' )"		8268181	0					
ANR	8268319	Callee	dmputc		8268181	0					
ANR	8268320	Identifier	dmputc		8268181	0					
ANR	8268321	ArgumentList	mem		8268181	1					
ANR	8268322	Argument	mem		8268181	0					
ANR	8268323	Identifier	mem		8268181	0					
ANR	8268324	Argument	' '		8268181	1					
ANR	8268325	PrimaryExpression	' '		8268181	0					
ANR	8268326	IfStatement	if ( type & pxd_ubyte )		8268181	1					
ANR	8268327	Condition	type & pxd_ubyte	257:12:8290:8305	8268181	0	True				
ANR	8268328	BitAndExpression	type & pxd_ubyte		8268181	0		&			
ANR	8268329	Identifier	type		8268181	0					
ANR	8268330	Identifier	pxd_ubyte		8268181	1					
ANR	8268331	CompoundStatement		19:30:540:540	8268181	1					
ANR	8268332	ExpressionStatement	"dmprintf1 ( mem , ""%02x "" , ptr [ i ] )"	258:12:8322:8353	8268181	0	True				
ANR	8268333	CallExpression	"dmprintf1 ( mem , ""%02x "" , ptr [ i ] )"		8268181	0					
ANR	8268334	Callee	dmprintf1		8268181	0					
ANR	8268335	Identifier	dmprintf1		8268181	0					
ANR	8268336	ArgumentList	mem		8268181	1					
ANR	8268337	Argument	mem		8268181	0					
ANR	8268338	Identifier	mem		8268181	0					
ANR	8268339	Argument	"""%02x """		8268181	1					
ANR	8268340	PrimaryExpression	"""%02x """		8268181	0					
ANR	8268341	Argument	ptr [ i ]		8268181	2					
ANR	8268342	ArrayIndexing	ptr [ i ]		8268181	0					
ANR	8268343	Identifier	ptr		8268181	0					
ANR	8268344	Identifier	i		8268181	1					
ANR	8268345	IfStatement	if ( ptr [ i ] < 32 || ptr [ i ] > 126 )		8268181	1					
ANR	8268346	Condition	ptr [ i ] < 32 || ptr [ i ] > 126	259:16:8371:8397	8268181	0	True				
ANR	8268347	OrExpression	ptr [ i ] < 32 || ptr [ i ] > 126		8268181	0		||			
ANR	8268348	RelationalExpression	ptr [ i ] < 32		8268181	0		<			
ANR	8268349	ArrayIndexing	ptr [ i ]		8268181	0					
ANR	8268350	Identifier	ptr		8268181	0					
ANR	8268351	Identifier	i		8268181	1					
ANR	8268352	PrimaryExpression	32		8268181	1					
ANR	8268353	RelationalExpression	ptr [ i ] > 126		8268181	1		>			
ANR	8268354	ArrayIndexing	ptr [ i ]		8268181	0					
ANR	8268355	Identifier	ptr		8268181	0					
ANR	8268356	Identifier	i		8268181	1					
ANR	8268357	PrimaryExpression	126		8268181	1					
ANR	8268358	ExpressionStatement	text = false	260:16:8416:8428	8268181	1	True				
ANR	8268359	AssignmentExpression	text = false		8268181	0		=			
ANR	8268360	Identifier	text		8268181	0					
ANR	8268361	Identifier	false		8268181	1					
ANR	8268362	ElseStatement	else		8268181	0					
ANR	8268363	IfStatement	if ( type & pxd_uint16 )		8268181	0					
ANR	8268364	Condition	type & pxd_uint16	261:19:8449:8465	8268181	0	True				
ANR	8268365	BitAndExpression	type & pxd_uint16		8268181	0		&			
ANR	8268366	Identifier	type		8268181	0					
ANR	8268367	Identifier	pxd_uint16		8268181	1					
ANR	8268368	ExpressionStatement	"dmprintf1 ( mem , ""%u "" , uint16at ( ptr + i * 2 , big_endian ) )"	262:12:8480:8536	8268181	1	True				
ANR	8268369	CallExpression	"dmprintf1 ( mem , ""%u "" , uint16at ( ptr + i * 2 , big_endian ) )"		8268181	0					
ANR	8268370	Callee	dmprintf1		8268181	0					
ANR	8268371	Identifier	dmprintf1		8268181	0					
ANR	8268372	ArgumentList	mem		8268181	1					
ANR	8268373	Argument	mem		8268181	0					
ANR	8268374	Identifier	mem		8268181	0					
ANR	8268375	Argument	"""%u """		8268181	1					
ANR	8268376	PrimaryExpression	"""%u """		8268181	0					
ANR	8268377	Argument	"uint16at ( ptr + i * 2 , big_endian )"		8268181	2					
ANR	8268378	CallExpression	"uint16at ( ptr + i * 2 , big_endian )"		8268181	0					
ANR	8268379	Callee	uint16at		8268181	0					
ANR	8268380	Identifier	uint16at		8268181	0					
ANR	8268381	ArgumentList	ptr + i * 2		8268181	1					
ANR	8268382	Argument	ptr + i * 2		8268181	0					
ANR	8268383	AdditiveExpression	ptr + i * 2		8268181	0		+			
ANR	8268384	Identifier	ptr		8268181	0					
ANR	8268385	MultiplicativeExpression	i * 2		8268181	1		*			
ANR	8268386	Identifier	i		8268181	0					
ANR	8268387	PrimaryExpression	2		8268181	1					
ANR	8268388	Argument	big_endian		8268181	1					
ANR	8268389	Identifier	big_endian		8268181	0					
ANR	8268390	ElseStatement	else		8268181	0					
ANR	8268391	IfStatement	if ( type & pxd_sint16 )		8268181	0					
ANR	8268392	Condition	type & pxd_sint16	263:17:8555:8571	8268181	0	True				
ANR	8268393	BitAndExpression	type & pxd_sint16		8268181	0		&			
ANR	8268394	Identifier	type		8268181	0					
ANR	8268395	Identifier	pxd_sint16		8268181	1					
ANR	8268396	ExpressionStatement	"dmprintf1 ( mem , ""%d "" , sint16at ( ptr + i * 2 , big_endian ) )"	264:12:8586:8642	8268181	1	True				
ANR	8268397	CallExpression	"dmprintf1 ( mem , ""%d "" , sint16at ( ptr + i * 2 , big_endian ) )"		8268181	0					
ANR	8268398	Callee	dmprintf1		8268181	0					
ANR	8268399	Identifier	dmprintf1		8268181	0					
ANR	8268400	ArgumentList	mem		8268181	1					
ANR	8268401	Argument	mem		8268181	0					
ANR	8268402	Identifier	mem		8268181	0					
ANR	8268403	Argument	"""%d """		8268181	1					
ANR	8268404	PrimaryExpression	"""%d """		8268181	0					
ANR	8268405	Argument	"sint16at ( ptr + i * 2 , big_endian )"		8268181	2					
ANR	8268406	CallExpression	"sint16at ( ptr + i * 2 , big_endian )"		8268181	0					
ANR	8268407	Callee	sint16at		8268181	0					
ANR	8268408	Identifier	sint16at		8268181	0					
ANR	8268409	ArgumentList	ptr + i * 2		8268181	1					
ANR	8268410	Argument	ptr + i * 2		8268181	0					
ANR	8268411	AdditiveExpression	ptr + i * 2		8268181	0		+			
ANR	8268412	Identifier	ptr		8268181	0					
ANR	8268413	MultiplicativeExpression	i * 2		8268181	1		*			
ANR	8268414	Identifier	i		8268181	0					
ANR	8268415	PrimaryExpression	2		8268181	1					
ANR	8268416	Argument	big_endian		8268181	1					
ANR	8268417	Identifier	big_endian		8268181	0					
ANR	8268418	ElseStatement	else		8268181	0					
ANR	8268419	IfStatement	if ( type & pxd_uint32 )		8268181	0					
ANR	8268420	Condition	type & pxd_uint32	265:17:8661:8677	8268181	0	True				
ANR	8268421	BitAndExpression	type & pxd_uint32		8268181	0		&			
ANR	8268422	Identifier	type		8268181	0					
ANR	8268423	Identifier	pxd_uint32		8268181	1					
ANR	8268424	ExpressionStatement	"dmprintf1 ( mem , ""%lu "" , ( ulong ) uint32at ( ptr + i * 4 , big_endian ) )"	266:12:8692:8757	8268181	1	True				
ANR	8268425	CallExpression	"dmprintf1 ( mem , ""%lu "" , ( ulong ) uint32at ( ptr + i * 4 , big_endian ) )"		8268181	0					
ANR	8268426	Callee	dmprintf1		8268181	0					
ANR	8268427	Identifier	dmprintf1		8268181	0					
ANR	8268428	ArgumentList	mem		8268181	1					
ANR	8268429	Argument	mem		8268181	0					
ANR	8268430	Identifier	mem		8268181	0					
ANR	8268431	Argument	"""%lu """		8268181	1					
ANR	8268432	PrimaryExpression	"""%lu """		8268181	0					
ANR	8268433	Argument	"( ulong ) uint32at ( ptr + i * 4 , big_endian )"		8268181	2					
ANR	8268434	CastExpression	"( ulong ) uint32at ( ptr + i * 4 , big_endian )"		8268181	0					
ANR	8268435	CastTarget	ulong		8268181	0					
ANR	8268436	CallExpression	"uint32at ( ptr + i * 4 , big_endian )"		8268181	1					
ANR	8268437	Callee	uint32at		8268181	0					
ANR	8268438	Identifier	uint32at		8268181	0					
ANR	8268439	ArgumentList	ptr + i * 4		8268181	1					
ANR	8268440	Argument	ptr + i * 4		8268181	0					
ANR	8268441	AdditiveExpression	ptr + i * 4		8268181	0		+			
ANR	8268442	Identifier	ptr		8268181	0					
ANR	8268443	MultiplicativeExpression	i * 4		8268181	1		*			
ANR	8268444	Identifier	i		8268181	0					
ANR	8268445	PrimaryExpression	4		8268181	1					
ANR	8268446	Argument	big_endian		8268181	1					
ANR	8268447	Identifier	big_endian		8268181	0					
ANR	8268448	ElseStatement	else		8268181	0					
ANR	8268449	IfStatement	if ( type & pxd_sint32 )		8268181	0					
ANR	8268450	Condition	type & pxd_sint32	267:17:8776:8792	8268181	0	True				
ANR	8268451	BitAndExpression	type & pxd_sint32		8268181	0		&			
ANR	8268452	Identifier	type		8268181	0					
ANR	8268453	Identifier	pxd_sint32		8268181	1					
ANR	8268454	ExpressionStatement	"dmprintf1 ( mem , ""%ld "" , ( long ) sint32at ( ptr + i * 4 , big_endian ) )"	268:12:8807:8870	8268181	1	True				
ANR	8268455	CallExpression	"dmprintf1 ( mem , ""%ld "" , ( long ) sint32at ( ptr + i * 4 , big_endian ) )"		8268181	0					
ANR	8268456	Callee	dmprintf1		8268181	0					
ANR	8268457	Identifier	dmprintf1		8268181	0					
ANR	8268458	ArgumentList	mem		8268181	1					
ANR	8268459	Argument	mem		8268181	0					
ANR	8268460	Identifier	mem		8268181	0					
ANR	8268461	Argument	"""%ld """		8268181	1					
ANR	8268462	PrimaryExpression	"""%ld """		8268181	0					
ANR	8268463	Argument	"( long ) sint32at ( ptr + i * 4 , big_endian )"		8268181	2					
ANR	8268464	CastExpression	"( long ) sint32at ( ptr + i * 4 , big_endian )"		8268181	0					
ANR	8268465	CastTarget	long		8268181	0					
ANR	8268466	CallExpression	"sint32at ( ptr + i * 4 , big_endian )"		8268181	1					
ANR	8268467	Callee	sint32at		8268181	0					
ANR	8268468	Identifier	sint32at		8268181	0					
ANR	8268469	ArgumentList	ptr + i * 4		8268181	1					
ANR	8268470	Argument	ptr + i * 4		8268181	0					
ANR	8268471	AdditiveExpression	ptr + i * 4		8268181	0		+			
ANR	8268472	Identifier	ptr		8268181	0					
ANR	8268473	MultiplicativeExpression	i * 4		8268181	1		*			
ANR	8268474	Identifier	i		8268181	0					
ANR	8268475	PrimaryExpression	4		8268181	1					
ANR	8268476	Argument	big_endian		8268181	1					
ANR	8268477	Identifier	big_endian		8268181	0					
ANR	8268478	ElseStatement	else		8268181	0					
ANR	8268479	IfStatement	if ( type & pxd_real32 )		8268181	0					
ANR	8268480	Condition	type & pxd_real32	269:17:8889:8905	8268181	0	True				
ANR	8268481	BitAndExpression	type & pxd_real32		8268181	0		&			
ANR	8268482	Identifier	type		8268181	0					
ANR	8268483	Identifier	pxd_real32		8268181	1					
ANR	8268484	ExpressionStatement	"dmprintf1 ( mem , ""%g "" , real32at ( ptr + i * 4 , big_endian ) )"	270:12:8920:8976	8268181	1	True				
ANR	8268485	CallExpression	"dmprintf1 ( mem , ""%g "" , real32at ( ptr + i * 4 , big_endian ) )"		8268181	0					
ANR	8268486	Callee	dmprintf1		8268181	0					
ANR	8268487	Identifier	dmprintf1		8268181	0					
ANR	8268488	ArgumentList	mem		8268181	1					
ANR	8268489	Argument	mem		8268181	0					
ANR	8268490	Identifier	mem		8268181	0					
ANR	8268491	Argument	"""%g """		8268181	1					
ANR	8268492	PrimaryExpression	"""%g """		8268181	0					
ANR	8268493	Argument	"real32at ( ptr + i * 4 , big_endian )"		8268181	2					
ANR	8268494	CallExpression	"real32at ( ptr + i * 4 , big_endian )"		8268181	0					
ANR	8268495	Callee	real32at		8268181	0					
ANR	8268496	Identifier	real32at		8268181	0					
ANR	8268497	ArgumentList	ptr + i * 4		8268181	1					
ANR	8268498	Argument	ptr + i * 4		8268181	0					
ANR	8268499	AdditiveExpression	ptr + i * 4		8268181	0		+			
ANR	8268500	Identifier	ptr		8268181	0					
ANR	8268501	MultiplicativeExpression	i * 4		8268181	1		*			
ANR	8268502	Identifier	i		8268181	0					
ANR	8268503	PrimaryExpression	4		8268181	1					
ANR	8268504	Argument	big_endian		8268181	1					
ANR	8268505	Identifier	big_endian		8268181	0					
ANR	8268506	ElseStatement	else		8268181	0					
ANR	8268507	ExpressionStatement	"dmputs ( mem , ""? "" )"	272:12:9003:9020	8268181	0	True				
ANR	8268508	CallExpression	"dmputs ( mem , ""? "" )"		8268181	0					
ANR	8268509	Callee	dmputs		8268181	0					
ANR	8268510	Identifier	dmputs		8268181	0					
ANR	8268511	ArgumentList	mem		8268181	1					
ANR	8268512	Argument	mem		8268181	0					
ANR	8268513	Identifier	mem		8268181	0					
ANR	8268514	Argument	"""? """		8268181	1					
ANR	8268515	PrimaryExpression	"""? """		8268181	0					
ANR	8268516	ExpressionStatement	"dmputs ( mem , ( type & pxd_ubyte ? "">\\n"" : ""}\\n"" ) )"	274:4:9032:9079	8268181	9	True				
ANR	8268517	CallExpression	"dmputs ( mem , ( type & pxd_ubyte ? "">\\n"" : ""}\\n"" ) )"		8268181	0					
ANR	8268518	Callee	dmputs		8268181	0					
ANR	8268519	Identifier	dmputs		8268181	0					
ANR	8268520	ArgumentList	mem		8268181	1					
ANR	8268521	Argument	mem		8268181	0					
ANR	8268522	Identifier	mem		8268181	0					
ANR	8268523	Argument	"type & pxd_ubyte ? "">\\n"" : ""}\\n"""		8268181	1					
ANR	8268524	ConditionalExpression	"type & pxd_ubyte ? "">\\n"" : ""}\\n"""		8268181	0					
ANR	8268525	Condition	type & pxd_ubyte		8268181	0					
ANR	8268526	BitAndExpression	type & pxd_ubyte		8268181	0		&			
ANR	8268527	Identifier	type		8268181	0					
ANR	8268528	Identifier	pxd_ubyte		8268181	1					
ANR	8268529	PrimaryExpression	""">\\n"""		8268181	1					
ANR	8268530	PrimaryExpression	"""}\\n"""		8268181	2					
ANR	8268531	IfStatement	if ( text )		8268181	10					
ANR	8268532	Condition	text	275:8:9089:9092	8268181	0	True				
ANR	8268533	Identifier	text		8268181	0					
ANR	8268534	CompoundStatement		37:14:1327:1327	8268181	1					
ANR	8268535	ExpressionStatement	"dmputs ( mem , ""%chars: \\"""" )"	276:8:9105:9130	8268181	0	True				
ANR	8268536	CallExpression	"dmputs ( mem , ""%chars: \\"""" )"		8268181	0					
ANR	8268537	Callee	dmputs		8268181	0					
ANR	8268538	Identifier	dmputs		8268181	0					
ANR	8268539	ArgumentList	mem		8268181	1					
ANR	8268540	Argument	mem		8268181	0					
ANR	8268541	Identifier	mem		8268181	0					
ANR	8268542	Argument	"""%chars: \\"""""		8268181	1					
ANR	8268543	PrimaryExpression	"""%chars: \\"""""		8268181	0					
ANR	8268544	ExpressionStatement	"debug_print_string ( mem , ptr , count )"	277:8:9140:9175	8268181	1	True				
ANR	8268545	CallExpression	"debug_print_string ( mem , ptr , count )"		8268181	0					
ANR	8268546	Callee	debug_print_string		8268181	0					
ANR	8268547	Identifier	debug_print_string		8268181	0					
ANR	8268548	ArgumentList	mem		8268181	1					
ANR	8268549	Argument	mem		8268181	0					
ANR	8268550	Identifier	mem		8268181	0					
ANR	8268551	Argument	ptr		8268181	1					
ANR	8268552	Identifier	ptr		8268181	0					
ANR	8268553	Argument	count		8268181	2					
ANR	8268554	Identifier	count		8268181	0					
ANR	8268555	ExpressionStatement	"dmputs ( mem , ""\\""\\n"" )"	278:8:9185:9204	8268181	2	True				
ANR	8268556	CallExpression	"dmputs ( mem , ""\\""\\n"" )"		8268181	0					
ANR	8268557	Callee	dmputs		8268181	0					
ANR	8268558	Identifier	dmputs		8268181	0					
ANR	8268559	ArgumentList	mem		8268181	1					
ANR	8268560	Argument	mem		8268181	0					
ANR	8268561	Identifier	mem		8268181	0					
ANR	8268562	Argument	"""\\""\\n"""		8268181	1					
ANR	8268563	PrimaryExpression	"""\\""\\n"""		8268181	0					
ANR	8268564	ReturnType	static void		8268181	1					
ANR	8268565	Identifier	trace_array_data		8268181	2					
ANR	8268566	ParameterList	"const gs_memory_t * mem , const char * label , const px_value_t * pav"		8268181	3					
ANR	8268567	Parameter	const gs_memory_t * mem	237:17:7682:7704	8268181	0	True				
ANR	8268568	ParameterType	const gs_memory_t *		8268181	0					
ANR	8268569	Identifier	mem		8268181	1					
ANR	8268570	Parameter	const char * label	237:42:7707:7723	8268181	1	True				
ANR	8268571	ParameterType	const char *		8268181	0					
ANR	8268572	Identifier	label		8268181	1					
ANR	8268573	Parameter	const px_value_t * pav	238:17:7743:7764	8268181	2	True				
ANR	8268574	ParameterType	const px_value_t *		8268181	0					
ANR	8268575	Identifier	pav		8268181	1					
ANR	8268576	CFGEntryNode	ENTRY		8268181		True				
ANR	8268577	CFGExitNode	EXIT		8268181		True				
ANR	8268578	Symbol	pxd_uint32		8268181						
ANR	8268579	Symbol	type		8268181						
ANR	8268580	Symbol	* pav		8268181						
ANR	8268581	Symbol	mem		8268181						
ANR	8268582	Symbol	pxd_sint16		8268181						
ANR	8268583	Symbol	* ptr		8268181						
ANR	8268584	Symbol	text		8268181						
ANR	8268585	Symbol	real32at		8268181						
ANR	8268586	Symbol	pav -> type		8268181						
ANR	8268587	Symbol	pav -> value . array		8268181						
ANR	8268588	Symbol	pxd_real32		8268181						
ANR	8268589	Symbol	pav -> value . array . data		8268181						
ANR	8268590	Symbol	pav		8268181						
ANR	8268591	Symbol	count		8268181						
ANR	8268592	Symbol	false		8268181						
ANR	8268593	Symbol	i		8268181						
ANR	8268594	Symbol	label		8268181						
ANR	8268595	Symbol	uint32at		8268181						
ANR	8268596	Symbol	sint32at		8268181						
ANR	8268597	Symbol	pxd_sint32		8268181						
ANR	8268598	Symbol	ptr		8268181						
ANR	8268599	Symbol	pav -> value . array . size		8268181						
ANR	8268600	Symbol	p		8268181						
ANR	8268601	Symbol	sint16at		8268181						
ANR	8268602	Symbol	pxd_ubyte		8268181						
ANR	8268603	Symbol	* i		8268181						
ANR	8268604	Symbol	big_endian		8268181						
ANR	8268605	Symbol	uint16at		8268181						
ANR	8268606	Symbol	pxd_big_endian		8268181						
ANR	8268607	Symbol	* p		8268181						
ANR	8268608	Symbol	pav -> value		8268181						
ANR	8268609	Symbol	pxd_uint16		8268181						
ANR	8268610	Function	px_process	290:0:9480:36352							
ANR	8268611	FunctionDef	"px_process (px_parser_state_t * st , px_state_t * pxs , stream_cursor_read * pr)"		8268610	0					
ANR	8268612	CompoundStatement		292:0:9562:36352	8268610	0					
ANR	8268613	IdentifierDeclStatement	const byte * orig_p = pr -> ptr ;	293:4:9568:9596	8268610	0	True				
ANR	8268614	IdentifierDecl	* orig_p = pr -> ptr		8268610	0					
ANR	8268615	IdentifierDeclType	const byte *		8268610	0					
ANR	8268616	Identifier	orig_p		8268610	1					
ANR	8268617	AssignmentExpression	* orig_p = pr -> ptr		8268610	2		=			
ANR	8268618	Identifier	orig_p		8268610	0					
ANR	8268619	PtrMemberAccess	pr -> ptr		8268610	1					
ANR	8268620	Identifier	pr		8268610	0					
ANR	8268621	Identifier	ptr		8268610	1					
ANR	8268622	IdentifierDeclStatement	const byte * next_p = orig_p ;	294:4:9602:9629	8268610	1	True				
ANR	8268623	IdentifierDecl	* next_p = orig_p		8268610	0					
ANR	8268624	IdentifierDeclType	const byte *		8268610	0					
ANR	8268625	Identifier	next_p		8268610	1					
ANR	8268626	AssignmentExpression	* next_p = orig_p		8268610	2		=			
ANR	8268627	Identifier	orig_p		8268610	0					
ANR	8268628	Identifier	orig_p		8268610	1					
ANR	8268629	IdentifierDeclStatement	const byte * p ;	295:4:9682:9695	8268610	2	True				
ANR	8268630	IdentifierDecl	* p		8268610	0					
ANR	8268631	IdentifierDeclType	const byte *		8268610	0					
ANR	8268632	Identifier	p		8268610	1					
ANR	8268633	IdentifierDeclStatement	const byte * rlimit ;	296:4:9701:9719	8268610	3	True				
ANR	8268634	IdentifierDecl	* rlimit		8268610	0					
ANR	8268635	IdentifierDeclType	const byte *		8268610	0					
ANR	8268636	Identifier	rlimit		8268610	1					
ANR	8268637	IdentifierDeclStatement	px_value_t * sp = & st -> stack [ st -> stack_count ] ;	297:4:9725:9769	8268610	4	True				
ANR	8268638	IdentifierDecl	* sp = & st -> stack [ st -> stack_count ]		8268610	0					
ANR	8268639	IdentifierDeclType	px_value_t *		8268610	0					
ANR	8268640	Identifier	sp		8268610	1					
ANR	8268641	AssignmentExpression	* sp = & st -> stack [ st -> stack_count ]		8268610	2		=			
ANR	8268642	Identifier	sp		8268610	0					
ANR	8268643	UnaryOperationExpression	& st -> stack [ st -> stack_count ]		8268610	1					
ANR	8268644	UnaryOperator	&		8268610	0					
ANR	8268645	ArrayIndexing	st -> stack [ st -> stack_count ]		8268610	1					
ANR	8268646	PtrMemberAccess	st -> stack		8268610	0					
ANR	8268647	Identifier	st		8268610	0					
ANR	8268648	Identifier	stack		8268610	1					
ANR	8268649	PtrMemberAccess	st -> stack_count		8268610	1					
ANR	8268650	Identifier	st		8268610	0					
ANR	8268651	Identifier	stack_count		8268610	1					
ANR	8268652	Statement	define	299:1:9773:9778	8268610	5	True				
ANR	8268653	Statement	stack_limit	299:8:9780:9790	8268610	6	True				
ANR	8268654	Statement	&	299:20:9792:9792	8268610	7	True				
ANR	8268655	Statement	st	299:21:9793:9794	8268610	8	True				
ANR	8268656	Statement	->	299:23:9795:9796	8268610	9	True				
ANR	8268657	Statement	stack	299:25:9797:9801	8268610	10	True				
ANR	8268658	Statement	[	299:30:9802:9802	8268610	11	True				
ANR	8268659	Statement	max_stack	299:31:9803:9811	8268610	12	True				
ANR	8268660	Statement	-	299:41:9813:9813	8268610	13	True				
ANR	8268661	Statement	1	299:43:9815:9815	8268610	14	True				
ANR	8268662	Statement	]	299:44:9816:9816	8268610	15	True				
ANR	8268663	IdentifierDeclStatement	gs_memory_t * memory = st -> memory ;	300:4:9822:9854	8268610	16	True				
ANR	8268664	IdentifierDecl	* memory = st -> memory		8268610	0					
ANR	8268665	IdentifierDeclType	gs_memory_t *		8268610	0					
ANR	8268666	Identifier	memory		8268610	1					
ANR	8268667	AssignmentExpression	* memory = st -> memory		8268610	2		=			
ANR	8268668	Identifier	memory		8268610	0					
ANR	8268669	PtrMemberAccess	st -> memory		8268610	1					
ANR	8268670	Identifier	st		8268610	0					
ANR	8268671	Identifier	memory		8268610	1					
ANR	8268672	IdentifierDeclStatement	int code = 0 ;	301:4:9860:9872	8268610	17	True				
ANR	8268673	IdentifierDecl	code = 0		8268610	0					
ANR	8268674	IdentifierDeclType	int		8268610	0					
ANR	8268675	Identifier	code		8268610	1					
ANR	8268676	AssignmentExpression	code = 0		8268610	2		=			
ANR	8268677	Identifier	code		8268610	0					
ANR	8268678	PrimaryExpression	0		8268610	1					
ANR	8268679	IdentifierDeclStatement	uint left ;	302:4:9878:9887	8268610	18	True				
ANR	8268680	IdentifierDecl	left		8268610	0					
ANR	8268681	IdentifierDeclType	uint		8268610	0					
ANR	8268682	Identifier	left		8268610	1					
ANR	8268683	IdentifierDeclStatement	uint min_left ;	303:4:9893:9906	8268610	19	True				
ANR	8268684	IdentifierDecl	min_left		8268610	0					
ANR	8268685	IdentifierDeclType	uint		8268610	0					
ANR	8268686	Identifier	min_left		8268610	1					
ANR	8268687	IdentifierDeclStatement	px_tag_t tag ;	304:4:9912:9924	8268610	20	True				
ANR	8268688	IdentifierDecl	tag		8268610	0					
ANR	8268689	IdentifierDeclType	px_tag_t		8268610	0					
ANR	8268690	Identifier	tag		8268610	1					
ANR	8268691	IdentifierDeclStatement	const px_tag_syntax_t * syntax = 0 ;	305:4:9930:9963	8268610	21	True				
ANR	8268692	IdentifierDecl	* syntax = 0		8268610	0					
ANR	8268693	IdentifierDeclType	const px_tag_syntax_t *		8268610	0					
ANR	8268694	Identifier	syntax		8268610	1					
ANR	8268695	AssignmentExpression	* syntax = 0		8268610	2		=			
ANR	8268696	Identifier	syntax		8268610	0					
ANR	8268697	PrimaryExpression	0		8268610	1					
ANR	8268698	ExpressionStatement	st -> args . parser = st	307:4:9970:9990	8268610	22	True				
ANR	8268699	AssignmentExpression	st -> args . parser = st		8268610	0		=			
ANR	8268700	MemberAccess	st -> args . parser		8268610	0					
ANR	8268701	PtrMemberAccess	st -> args		8268610	0					
ANR	8268702	Identifier	st		8268610	0					
ANR	8268703	Identifier	args		8268610	1					
ANR	8268704	Identifier	parser		8268610	1					
ANR	8268705	Identifier	st		8268610	1					
ANR	8268706	ExpressionStatement	st -> parent_operator_count = 0	308:4:9996:10025	8268610	23	True				
ANR	8268707	AssignmentExpression	st -> parent_operator_count = 0		8268610	0		=			
ANR	8268708	PtrMemberAccess	st -> parent_operator_count		8268610	0					
ANR	8268709	Identifier	st		8268610	0					
ANR	8268710	Identifier	parent_operator_count		8268610	1					
ANR	8268711	PrimaryExpression	0		8268610	1					
ANR	8268712	Label	parse :	310:2:10115:10120	8268610	24	True				
ANR	8268713	Identifier	parse		8268610	0					
ANR	8268714	IfStatement	if ( st -> saved_count )		8268610	25					
ANR	8268715	Condition	st -> saved_count	310:12:10125:10139	8268610	0	True				
ANR	8268716	PtrMemberAccess	st -> saved_count		8268610	0					
ANR	8268717	Identifier	st		8268610	0					
ANR	8268718	Identifier	saved_count		8268610	1					
ANR	8268719	CompoundStatement		20:8:645:739	8268610	1					
ANR	8268720	IdentifierDeclStatement	"int move = min ( sizeof ( st -> saved ) - st -> saved_count , pr -> limit - next_p ) ;"	311:8:10208:10302	8268610	0	True				
ANR	8268721	IdentifierDecl	"move = min ( sizeof ( st -> saved ) - st -> saved_count , pr -> limit - next_p )"		8268610	0					
ANR	8268722	IdentifierDeclType	int		8268610	0					
ANR	8268723	Identifier	move		8268610	1					
ANR	8268724	AssignmentExpression	"move = min ( sizeof ( st -> saved ) - st -> saved_count , pr -> limit - next_p )"		8268610	2		=			
ANR	8268725	Identifier	move		8268610	0					
ANR	8268726	CallExpression	"min ( sizeof ( st -> saved ) - st -> saved_count , pr -> limit - next_p )"		8268610	1					
ANR	8268727	Callee	min		8268610	0					
ANR	8268728	Identifier	min		8268610	0					
ANR	8268729	ArgumentList	sizeof ( st -> saved ) - st -> saved_count		8268610	1					
ANR	8268730	Argument	sizeof ( st -> saved ) - st -> saved_count		8268610	0					
ANR	8268731	AdditiveExpression	sizeof ( st -> saved ) - st -> saved_count		8268610	0		-			
ANR	8268732	SizeofExpression	sizeof ( st -> saved )		8268610	0					
ANR	8268733	Sizeof	sizeof		8268610	0					
ANR	8268734	PtrMemberAccess	st -> saved		8268610	1					
ANR	8268735	Identifier	st		8268610	0					
ANR	8268736	Identifier	saved		8268610	1					
ANR	8268737	PtrMemberAccess	st -> saved_count		8268610	1					
ANR	8268738	Identifier	st		8268610	0					
ANR	8268739	Identifier	saved_count		8268610	1					
ANR	8268740	Argument	pr -> limit - next_p		8268610	1					
ANR	8268741	AdditiveExpression	pr -> limit - next_p		8268610	0		-			
ANR	8268742	PtrMemberAccess	pr -> limit		8268610	0					
ANR	8268743	Identifier	pr		8268610	0					
ANR	8268744	Identifier	limit		8268610	1					
ANR	8268745	Identifier	next_p		8268610	1					
ANR	8268746	ExpressionStatement	"memcpy ( & st -> saved [ st -> saved_count ] , next_p + 1 , move )"	314:8:10313:10366	8268610	1	True				
ANR	8268747	CallExpression	"memcpy ( & st -> saved [ st -> saved_count ] , next_p + 1 , move )"		8268610	0					
ANR	8268748	Callee	memcpy		8268610	0					
ANR	8268749	Identifier	memcpy		8268610	0					
ANR	8268750	ArgumentList	& st -> saved [ st -> saved_count ]		8268610	1					
ANR	8268751	Argument	& st -> saved [ st -> saved_count ]		8268610	0					
ANR	8268752	UnaryOperationExpression	& st -> saved [ st -> saved_count ]		8268610	0					
ANR	8268753	UnaryOperator	&		8268610	0					
ANR	8268754	ArrayIndexing	st -> saved [ st -> saved_count ]		8268610	1					
ANR	8268755	PtrMemberAccess	st -> saved		8268610	0					
ANR	8268756	Identifier	st		8268610	0					
ANR	8268757	Identifier	saved		8268610	1					
ANR	8268758	PtrMemberAccess	st -> saved_count		8268610	1					
ANR	8268759	Identifier	st		8268610	0					
ANR	8268760	Identifier	saved_count		8268610	1					
ANR	8268761	Argument	next_p + 1		8268610	1					
ANR	8268762	AdditiveExpression	next_p + 1		8268610	0		+			
ANR	8268763	Identifier	next_p		8268610	0					
ANR	8268764	PrimaryExpression	1		8268610	1					
ANR	8268765	Argument	move		8268610	2					
ANR	8268766	Identifier	move		8268610	0					
ANR	8268767	ExpressionStatement	next_p += move	315:8:10376:10390	8268610	2	True				
ANR	8268768	AssignmentExpression	next_p += move		8268610	0		+=			
ANR	8268769	Identifier	next_p		8268610	0					
ANR	8268770	Identifier	move		8268610	1					
ANR	8268771	ExpressionStatement	p = st -> saved - 1	316:8:10400:10417	8268610	3	True				
ANR	8268772	AssignmentExpression	p = st -> saved - 1		8268610	0		=			
ANR	8268773	Identifier	p		8268610	0					
ANR	8268774	AdditiveExpression	st -> saved - 1		8268610	1		-			
ANR	8268775	PtrMemberAccess	st -> saved		8268610	0					
ANR	8268776	Identifier	st		8268610	0					
ANR	8268777	Identifier	saved		8268610	1					
ANR	8268778	PrimaryExpression	1		8268610	1					
ANR	8268779	ExpressionStatement	rlimit = p + st -> saved_count + move	317:8:10427:10462	8268610	4	True				
ANR	8268780	AssignmentExpression	rlimit = p + st -> saved_count + move		8268610	0		=			
ANR	8268781	Identifier	rlimit		8268610	0					
ANR	8268782	AdditiveExpression	p + st -> saved_count + move		8268610	1		+			
ANR	8268783	Identifier	p		8268610	0					
ANR	8268784	AdditiveExpression	st -> saved_count + move		8268610	1		+			
ANR	8268785	PtrMemberAccess	st -> saved_count		8268610	0					
ANR	8268786	Identifier	st		8268610	0					
ANR	8268787	Identifier	saved_count		8268610	1					
ANR	8268788	Identifier	move		8268610	1					
ANR	8268789	ElseStatement	else		8268610	0					
ANR	8268790	CompoundStatement		27:11:912:912	8268610	0					
ANR	8268791	ExpressionStatement	p = next_p	319:8:10554:10564	8268610	0	True				
ANR	8268792	AssignmentExpression	p = next_p		8268610	0		=			
ANR	8268793	Identifier	p		8268610	0					
ANR	8268794	Identifier	next_p		8268610	1					
ANR	8268795	ExpressionStatement	rlimit = pr -> limit	320:8:10574:10592	8268610	1	True				
ANR	8268796	AssignmentExpression	rlimit = pr -> limit		8268610	0		=			
ANR	8268797	Identifier	rlimit		8268610	0					
ANR	8268798	PtrMemberAccess	pr -> limit		8268610	1					
ANR	8268799	Identifier	pr		8268610	0					
ANR	8268800	Identifier	limit		8268610	1					
ANR	8268801	Label	top :	322:2:10602:10605	8268610	26	True				
ANR	8268802	Identifier	top		8268610	0					
ANR	8268803	IfStatement	if ( st -> data_left )		8268610	27					
ANR	8268804	Condition	st -> data_left	322:10:10610:10622	8268610	0	True				
ANR	8268805	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8268806	Identifier	st		8268610	0					
ANR	8268807	Identifier	data_left		8268610	1					
ANR	8268808	CompoundStatement		31:25:1062:1062	8268610	1					
ANR	8268809	IfStatement	if ( st -> data_proc )		8268610	0					
ANR	8268810	Condition	st -> data_proc	323:12:10704:10716	8268610	0	True				
ANR	8268811	PtrMemberAccess	st -> data_proc		8268610	0					
ANR	8268812	Identifier	st		8268610	0					
ANR	8268813	Identifier	data_proc		8268610	1					
ANR	8268814	CompoundStatement		34:12:1258:1267	8268610	1					
ANR	8268815	IdentifierDeclStatement	"uint avail = min ( rlimit - p , st -> data_left ) ;"	324:12:10764:10807	8268610	0	True				
ANR	8268816	IdentifierDecl	"avail = min ( rlimit - p , st -> data_left )"		8268610	0					
ANR	8268817	IdentifierDeclType	uint		8268610	0					
ANR	8268818	Identifier	avail		8268610	1					
ANR	8268819	AssignmentExpression	"avail = min ( rlimit - p , st -> data_left )"		8268610	2		=			
ANR	8268820	Identifier	avail		8268610	0					
ANR	8268821	CallExpression	"min ( rlimit - p , st -> data_left )"		8268610	1					
ANR	8268822	Callee	min		8268610	0					
ANR	8268823	Identifier	min		8268610	0					
ANR	8268824	ArgumentList	rlimit - p		8268610	1					
ANR	8268825	Argument	rlimit - p		8268610	0					
ANR	8268826	AdditiveExpression	rlimit - p		8268610	0		-			
ANR	8268827	Identifier	rlimit		8268610	0					
ANR	8268828	Identifier	p		8268610	1					
ANR	8268829	Argument	st -> data_left		8268610	1					
ANR	8268830	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8268831	Identifier	st		8268610	0					
ANR	8268832	Identifier	data_left		8268610	1					
ANR	8268833	IdentifierDeclStatement	uint used ;	325:12:10821:10830	8268610	1	True				
ANR	8268834	IdentifierDecl	used		8268610	0					
ANR	8268835	IdentifierDeclType	uint		8268610	0					
ANR	8268836	Identifier	used		8268610	1					
ANR	8268837	ExpressionStatement	st -> args . source . available = avail	327:12:10845:10878	8268610	2	True				
ANR	8268838	AssignmentExpression	st -> args . source . available = avail		8268610	0		=			
ANR	8268839	MemberAccess	st -> args . source . available		8268610	0					
ANR	8268840	MemberAccess	st -> args . source		8268610	0					
ANR	8268841	PtrMemberAccess	st -> args		8268610	0					
ANR	8268842	Identifier	st		8268610	0					
ANR	8268843	Identifier	args		8268610	1					
ANR	8268844	Identifier	source		8268610	1					
ANR	8268845	Identifier	available		8268610	1					
ANR	8268846	Identifier	avail		8268610	1					
ANR	8268847	ExpressionStatement	st -> args . source . data = p + 1	328:12:10892:10920	8268610	3	True				
ANR	8268848	AssignmentExpression	st -> args . source . data = p + 1		8268610	0		=			
ANR	8268849	MemberAccess	st -> args . source . data		8268610	0					
ANR	8268850	MemberAccess	st -> args . source		8268610	0					
ANR	8268851	PtrMemberAccess	st -> args		8268610	0					
ANR	8268852	Identifier	st		8268610	0					
ANR	8268853	Identifier	args		8268610	1					
ANR	8268854	Identifier	source		8268610	1					
ANR	8268855	Identifier	data		8268610	1					
ANR	8268856	AdditiveExpression	p + 1		8268610	1		+			
ANR	8268857	Identifier	p		8268610	0					
ANR	8268858	PrimaryExpression	1		8268610	1					
ANR	8268859	ExpressionStatement	"code = ( * st -> data_proc ) ( & st -> args , pxs )"	329:12:10934:10974	8268610	4	True				
ANR	8268860	AssignmentExpression	"code = ( * st -> data_proc ) ( & st -> args , pxs )"		8268610	0		=			
ANR	8268861	Identifier	code		8268610	0					
ANR	8268862	CallExpression	"( * st -> data_proc ) ( & st -> args , pxs )"		8268610	1					
ANR	8268863	Callee	* st -> data_proc		8268610	0					
ANR	8268864	UnaryOperationExpression	* st -> data_proc		8268610	0					
ANR	8268865	UnaryOperator	*		8268610	0					
ANR	8268866	PtrMemberAccess	st -> data_proc		8268610	1					
ANR	8268867	Identifier	st		8268610	0					
ANR	8268868	Identifier	data_proc		8268610	1					
ANR	8268869	ArgumentList	& st -> args		8268610	1					
ANR	8268870	Argument	& st -> args		8268610	0					
ANR	8268871	UnaryOperationExpression	& st -> args		8268610	0					
ANR	8268872	UnaryOperator	&		8268610	0					
ANR	8268873	PtrMemberAccess	st -> args		8268610	1					
ANR	8268874	Identifier	st		8268610	0					
ANR	8268875	Identifier	args		8268610	1					
ANR	8268876	Argument	pxs		8268610	1					
ANR	8268877	Identifier	pxs		8268610	0					
ANR	8268878	IfStatement	if ( code == gs_error_Remap_Color )		8268610	5					
ANR	8268879	Condition	code == gs_error_Remap_Color	334:16:11225:11252	8268610	0	True				
ANR	8268880	EqualityExpression	code == gs_error_Remap_Color		8268610	0		==			
ANR	8268881	Identifier	code		8268610	0					
ANR	8268882	Identifier	gs_error_Remap_Color		8268610	1					
ANR	8268883	CompoundStatement		43:46:1692:1692	8268610	1					
ANR	8268884	ExpressionStatement	code = px_high_level_pattern ( pxs -> pgs )	335:16:11273:11311	8268610	0	True				
ANR	8268885	AssignmentExpression	code = px_high_level_pattern ( pxs -> pgs )		8268610	0		=			
ANR	8268886	Identifier	code		8268610	0					
ANR	8268887	CallExpression	px_high_level_pattern ( pxs -> pgs )		8268610	1					
ANR	8268888	Callee	px_high_level_pattern		8268610	0					
ANR	8268889	Identifier	px_high_level_pattern		8268610	0					
ANR	8268890	ArgumentList	pxs -> pgs		8268610	1					
ANR	8268891	Argument	pxs -> pgs		8268610	0					
ANR	8268892	PtrMemberAccess	pxs -> pgs		8268610	0					
ANR	8268893	Identifier	pxs		8268610	0					
ANR	8268894	Identifier	pgs		8268610	1					
ANR	8268895	ExpressionStatement	"code = ( * st -> data_proc ) ( & st -> args , pxs )"	336:16:11329:11369	8268610	1	True				
ANR	8268896	AssignmentExpression	"code = ( * st -> data_proc ) ( & st -> args , pxs )"		8268610	0		=			
ANR	8268897	Identifier	code		8268610	0					
ANR	8268898	CallExpression	"( * st -> data_proc ) ( & st -> args , pxs )"		8268610	1					
ANR	8268899	Callee	* st -> data_proc		8268610	0					
ANR	8268900	UnaryOperationExpression	* st -> data_proc		8268610	0					
ANR	8268901	UnaryOperator	*		8268610	0					
ANR	8268902	PtrMemberAccess	st -> data_proc		8268610	1					
ANR	8268903	Identifier	st		8268610	0					
ANR	8268904	Identifier	data_proc		8268610	1					
ANR	8268905	ArgumentList	& st -> args		8268610	1					
ANR	8268906	Argument	& st -> args		8268610	0					
ANR	8268907	UnaryOperationExpression	& st -> args		8268610	0					
ANR	8268908	UnaryOperator	&		8268610	0					
ANR	8268909	PtrMemberAccess	st -> args		8268610	1					
ANR	8268910	Identifier	st		8268610	0					
ANR	8268911	Identifier	args		8268610	1					
ANR	8268912	Argument	pxs		8268610	1					
ANR	8268913	Identifier	pxs		8268610	0					
ANR	8268914	ExpressionStatement	used = st -> args . source . data - ( p + 1 )	338:12:11397:11434	8268610	6	True				
ANR	8268915	AssignmentExpression	used = st -> args . source . data - ( p + 1 )		8268610	0		=			
ANR	8268916	Identifier	used		8268610	0					
ANR	8268917	AdditiveExpression	st -> args . source . data - ( p + 1 )		8268610	1		-			
ANR	8268918	MemberAccess	st -> args . source . data		8268610	0					
ANR	8268919	MemberAccess	st -> args . source		8268610	0					
ANR	8268920	PtrMemberAccess	st -> args		8268610	0					
ANR	8268921	Identifier	st		8268610	0					
ANR	8268922	Identifier	args		8268610	1					
ANR	8268923	Identifier	source		8268610	1					
ANR	8268924	Identifier	data		8268610	1					
ANR	8268925	AdditiveExpression	p + 1		8268610	1		+			
ANR	8268926	Identifier	p		8268610	0					
ANR	8268927	PrimaryExpression	1		8268610	1					
ANR	8268928	IfStatement	if ( gs_debug_c ( 'I' ) )		8268610	7					
ANR	8268929	Condition	gs_debug_c ( 'I' )	340:16:11465:11479	8268610	0	True				
ANR	8268930	CallExpression	gs_debug_c ( 'I' )		8268610	0					
ANR	8268931	Callee	gs_debug_c		8268610	0					
ANR	8268932	Identifier	gs_debug_c		8268610	0					
ANR	8268933	ArgumentList	'I'		8268610	1					
ANR	8268934	Argument	'I'		8268610	0					
ANR	8268935	PrimaryExpression	'I'		8268610	0					
ANR	8268936	CompoundStatement		50:16:1937:1958	8268610	1					
ANR	8268937	IdentifierDeclStatement	px_value_t data_array ;	341:16:11500:11521	8268610	0	True				
ANR	8268938	IdentifierDecl	data_array		8268610	0					
ANR	8268939	IdentifierDeclType	px_value_t		8268610	0					
ANR	8268940	Identifier	data_array		8268610	1					
ANR	8268941	ExpressionStatement	data_array . type = pxd_ubyte	343:16:11540:11567	8268610	1	True				
ANR	8268942	AssignmentExpression	data_array . type = pxd_ubyte		8268610	0		=			
ANR	8268943	MemberAccess	data_array . type		8268610	0					
ANR	8268944	Identifier	data_array		8268610	0					
ANR	8268945	Identifier	type		8268610	1					
ANR	8268946	Identifier	pxd_ubyte		8268610	1					
ANR	8268947	ExpressionStatement	data_array . value . array . data = p + 1	344:16:11585:11620	8268610	2	True				
ANR	8268948	AssignmentExpression	data_array . value . array . data = p + 1		8268610	0		=			
ANR	8268949	MemberAccess	data_array . value . array . data		8268610	0					
ANR	8268950	MemberAccess	data_array . value . array		8268610	0					
ANR	8268951	MemberAccess	data_array . value		8268610	0					
ANR	8268952	Identifier	data_array		8268610	0					
ANR	8268953	Identifier	value		8268610	1					
ANR	8268954	Identifier	array		8268610	1					
ANR	8268955	Identifier	data		8268610	1					
ANR	8268956	AdditiveExpression	p + 1		8268610	1		+			
ANR	8268957	Identifier	p		8268610	0					
ANR	8268958	PrimaryExpression	1		8268610	1					
ANR	8268959	ExpressionStatement	data_array . value . array . size = used	345:16:11638:11672	8268610	3	True				
ANR	8268960	AssignmentExpression	data_array . value . array . size = used		8268610	0		=			
ANR	8268961	MemberAccess	data_array . value . array . size		8268610	0					
ANR	8268962	MemberAccess	data_array . value . array		8268610	0					
ANR	8268963	MemberAccess	data_array . value		8268610	0					
ANR	8268964	Identifier	data_array		8268610	0					
ANR	8268965	Identifier	value		8268610	1					
ANR	8268966	Identifier	array		8268610	1					
ANR	8268967	Identifier	size		8268610	1					
ANR	8268968	Identifier	used		8268610	1					
ANR	8268969	ExpressionStatement	"trace_array_data ( pxs -> memory , ""data:"" , & data_array )"	346:16:11690:11741	8268610	4	True				
ANR	8268970	CallExpression	"trace_array_data ( pxs -> memory , ""data:"" , & data_array )"		8268610	0					
ANR	8268971	Callee	trace_array_data		8268610	0					
ANR	8268972	Identifier	trace_array_data		8268610	0					
ANR	8268973	ArgumentList	pxs -> memory		8268610	1					
ANR	8268974	Argument	pxs -> memory		8268610	0					
ANR	8268975	PtrMemberAccess	pxs -> memory		8268610	0					
ANR	8268976	Identifier	pxs		8268610	0					
ANR	8268977	Identifier	memory		8268610	1					
ANR	8268978	Argument	"""data:"""		8268610	1					
ANR	8268979	PrimaryExpression	"""data:"""		8268610	0					
ANR	8268980	Argument	& data_array		8268610	2					
ANR	8268981	UnaryOperationExpression	& data_array		8268610	0					
ANR	8268982	UnaryOperator	&		8268610	0					
ANR	8268983	Identifier	data_array		8268610	1					
ANR	8268984	ExpressionStatement	p = st -> args . source . data - 1	349:12:11776:11804	8268610	8	True				
ANR	8268985	AssignmentExpression	p = st -> args . source . data - 1		8268610	0		=			
ANR	8268986	Identifier	p		8268610	0					
ANR	8268987	AdditiveExpression	st -> args . source . data - 1		8268610	1		-			
ANR	8268988	MemberAccess	st -> args . source . data		8268610	0					
ANR	8268989	MemberAccess	st -> args . source		8268610	0					
ANR	8268990	PtrMemberAccess	st -> args		8268610	0					
ANR	8268991	Identifier	st		8268610	0					
ANR	8268992	Identifier	args		8268610	1					
ANR	8268993	Identifier	source		8268610	1					
ANR	8268994	Identifier	data		8268610	1					
ANR	8268995	PrimaryExpression	1		8268610	1					
ANR	8268996	ExpressionStatement	st -> data_left -= used	350:12:11818:11839	8268610	9	True				
ANR	8268997	AssignmentExpression	st -> data_left -= used		8268610	0		-=			
ANR	8268998	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8268999	Identifier	st		8268610	0					
ANR	8269000	Identifier	data_left		8268610	1					
ANR	8269001	Identifier	used		8268610	1					
ANR	8269002	IfStatement	if ( code < 0 )		8268610	10					
ANR	8269003	Condition	code < 0	351:16:11857:11864	8268610	0	True				
ANR	8269004	RelationalExpression	code < 0		8268610	0		<			
ANR	8269005	Identifier	code		8268610	0					
ANR	8269006	PrimaryExpression	0		8268610	1					
ANR	8269007	CompoundStatement		60:26:2304:2304	8268610	1					
ANR	8269008	ExpressionStatement	st -> args . source . position = 0	352:16:11885:11913	8268610	0	True				
ANR	8269009	AssignmentExpression	st -> args . source . position = 0		8268610	0		=			
ANR	8269010	MemberAccess	st -> args . source . position		8268610	0					
ANR	8269011	MemberAccess	st -> args . source		8268610	0					
ANR	8269012	PtrMemberAccess	st -> args		8268610	0					
ANR	8269013	Identifier	st		8268610	0					
ANR	8269014	Identifier	args		8268610	1					
ANR	8269015	Identifier	source		8268610	1					
ANR	8269016	Identifier	position		8268610	1					
ANR	8269017	PrimaryExpression	0		8268610	1					
ANR	8269018	GotoStatement	goto x ;	353:16:11931:11937	8268610	1	True				
ANR	8269019	Identifier	x		8268610	0					
ANR	8269020	ElseStatement	else		8268610	0					
ANR	8269021	IfStatement	if ( ( code == pxNeedData ) || ( code == pxPassThrough && st -> data_left != 0 ) )		8268610	0					
ANR	8269022	Condition	( code == pxNeedData ) || ( code == pxPassThrough && st -> data_left != 0 )	354:23:11962:12053	8268610	0	True				
ANR	8269023	OrExpression	( code == pxNeedData ) || ( code == pxPassThrough && st -> data_left != 0 )		8268610	0		||			
ANR	8269024	EqualityExpression	code == pxNeedData		8268610	0		==			
ANR	8269025	Identifier	code		8268610	0					
ANR	8269026	Identifier	pxNeedData		8268610	1					
ANR	8269027	AndExpression	code == pxPassThrough && st -> data_left != 0		8268610	1		&&			
ANR	8269028	EqualityExpression	code == pxPassThrough		8268610	0		==			
ANR	8269029	Identifier	code		8268610	0					
ANR	8269030	Identifier	pxPassThrough		8268610	1					
ANR	8269031	EqualityExpression	st -> data_left != 0		8268610	1		!=			
ANR	8269032	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269033	Identifier	st		8268610	0					
ANR	8269034	Identifier	data_left		8268610	1					
ANR	8269035	PrimaryExpression	0		8268610	1					
ANR	8269036	CompoundStatement		64:73:2493:2493	8268610	1					
ANR	8269037	ExpressionStatement	code = 0	356:16:12074:12082	8268610	0	True				
ANR	8269038	AssignmentExpression	code = 0		8268610	0		=			
ANR	8269039	Identifier	code		8268610	0					
ANR	8269040	PrimaryExpression	0		8268610	1					
ANR	8269041	GotoStatement	goto x ;	357:16:12131:12137	8268610	1	True				
ANR	8269042	Identifier	x		8268610	0					
ANR	8269043	ElseStatement	else		8268610	0					
ANR	8269044	CompoundStatement		67:19:2595:2595	8268610	0					
ANR	8269045	ExpressionStatement	st -> args . source . position = 0	359:16:12176:12204	8268610	0	True				
ANR	8269046	AssignmentExpression	st -> args . source . position = 0		8268610	0		=			
ANR	8269047	MemberAccess	st -> args . source . position		8268610	0					
ANR	8269048	MemberAccess	st -> args . source		8268610	0					
ANR	8269049	PtrMemberAccess	st -> args		8268610	0					
ANR	8269050	Identifier	st		8268610	0					
ANR	8269051	Identifier	args		8268610	1					
ANR	8269052	Identifier	source		8268610	1					
ANR	8269053	Identifier	position		8268610	1					
ANR	8269054	PrimaryExpression	0		8268610	1					
ANR	8269055	ExpressionStatement	st -> data_proc = 0	360:16:12222:12239	8268610	1	True				
ANR	8269056	AssignmentExpression	st -> data_proc = 0		8268610	0		=			
ANR	8269057	PtrMemberAccess	st -> data_proc		8268610	0					
ANR	8269058	Identifier	st		8268610	0					
ANR	8269059	Identifier	data_proc		8268610	1					
ANR	8269060	PrimaryExpression	0		8268610	1					
ANR	8269061	IfStatement	if ( st -> data_left != 0 )		8268610	2					
ANR	8269062	Condition	st -> data_left != 0	361:20:12261:12278	8268610	0	True				
ANR	8269063	EqualityExpression	st -> data_left != 0		8268610	0		!=			
ANR	8269064	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269065	Identifier	st		8268610	0					
ANR	8269066	Identifier	data_left		8268610	1					
ANR	8269067	PrimaryExpression	0		8268610	1					
ANR	8269068	CompoundStatement		70:40:2718:2718	8268610	1					
ANR	8269069	ExpressionStatement	code = gs_note_error ( errorExtraData )	362:20:12303:12339	8268610	0	True				
ANR	8269070	AssignmentExpression	code = gs_note_error ( errorExtraData )		8268610	0		=			
ANR	8269071	Identifier	code		8268610	0					
ANR	8269072	CallExpression	gs_note_error ( errorExtraData )		8268610	1					
ANR	8269073	Callee	gs_note_error		8268610	0					
ANR	8269074	Identifier	gs_note_error		8268610	0					
ANR	8269075	ArgumentList	errorExtraData		8268610	1					
ANR	8269076	Argument	errorExtraData		8268610	0					
ANR	8269077	Identifier	errorExtraData		8268610	0					
ANR	8269078	GotoStatement	goto x ;	363:20:12361:12367	8268610	1	True				
ANR	8269079	Identifier	x		8268610	0					
ANR	8269080	ExpressionStatement	clear_stack ( )	365:16:12403:12416	8268610	3	True				
ANR	8269081	CallExpression	clear_stack ( )		8268610	0					
ANR	8269082	Callee	clear_stack		8268610	0					
ANR	8269083	Identifier	clear_stack		8268610	0					
ANR	8269084	ArgumentList			8268610	1					
ANR	8269085	ElseStatement	else		8268610	0					
ANR	8269086	CompoundStatement		80:12:3064:3147	8268610	0					
ANR	8269087	IdentifierDeclStatement	uint size = sp -> value . array . size ;	368:12:12500:12532	8268610	0	True				
ANR	8269088	IdentifierDecl	size = sp -> value . array . size		8268610	0					
ANR	8269089	IdentifierDeclType	uint		8268610	0					
ANR	8269090	Identifier	size		8268610	1					
ANR	8269091	AssignmentExpression	size = sp -> value . array . size		8268610	2		=			
ANR	8269092	Identifier	size		8268610	0					
ANR	8269093	MemberAccess	sp -> value . array . size		8268610	1					
ANR	8269094	MemberAccess	sp -> value . array		8268610	0					
ANR	8269095	PtrMemberAccess	sp -> value		8268610	0					
ANR	8269096	Identifier	sp		8268610	0					
ANR	8269097	Identifier	value		8268610	1					
ANR	8269098	Identifier	array		8268610	1					
ANR	8269099	Identifier	size		8268610	1					
ANR	8269100	IdentifierDeclStatement	uint scale = value_size ( sp ) ;	369:12:12546:12573	8268610	1	True				
ANR	8269101	IdentifierDecl	scale = value_size ( sp )		8268610	0					
ANR	8269102	IdentifierDeclType	uint		8268610	0					
ANR	8269103	Identifier	scale		8268610	1					
ANR	8269104	AssignmentExpression	scale = value_size ( sp )		8268610	2		=			
ANR	8269105	Identifier	scale		8268610	0					
ANR	8269106	CallExpression	value_size ( sp )		8268610	1					
ANR	8269107	Callee	value_size		8268610	0					
ANR	8269108	Identifier	value_size		8268610	0					
ANR	8269109	ArgumentList	sp		8268610	1					
ANR	8269110	Argument	sp		8268610	0					
ANR	8269111	Identifier	sp		8268610	0					
ANR	8269112	IdentifierDeclStatement	uint nbytes = size * scale ;	370:12:12587:12613	8268610	2	True				
ANR	8269113	IdentifierDecl	nbytes = size * scale		8268610	0					
ANR	8269114	IdentifierDeclType	uint		8268610	0					
ANR	8269115	Identifier	nbytes		8268610	1					
ANR	8269116	AssignmentExpression	nbytes = size * scale		8268610	2		=			
ANR	8269117	Identifier	nbytes		8268610	0					
ANR	8269118	MultiplicativeExpression	size * scale		8268610	1		*			
ANR	8269119	Identifier	size		8268610	0					
ANR	8269120	Identifier	scale		8268610	1					
ANR	8269121	IdentifierDeclStatement	byte * dest = ( byte * ) sp -> value . array . data + nbytes - st -> data_left ;	371:12:12627:12710	8268610	3	True				
ANR	8269122	IdentifierDecl	* dest = ( byte * ) sp -> value . array . data + nbytes - st -> data_left		8268610	0					
ANR	8269123	IdentifierDeclType	byte *		8268610	0					
ANR	8269124	Identifier	dest		8268610	1					
ANR	8269125	AssignmentExpression	* dest = ( byte * ) sp -> value . array . data + nbytes - st -> data_left		8268610	2		=			
ANR	8269126	Identifier	dest		8268610	0					
ANR	8269127	AdditiveExpression	( byte * ) sp -> value . array . data + nbytes - st -> data_left		8268610	1		+			
ANR	8269128	CastExpression	( byte * ) sp -> value . array . data		8268610	0					
ANR	8269129	CastTarget	byte *		8268610	0					
ANR	8269130	MemberAccess	sp -> value . array . data		8268610	1					
ANR	8269131	MemberAccess	sp -> value . array		8268610	0					
ANR	8269132	PtrMemberAccess	sp -> value		8268610	0					
ANR	8269133	Identifier	sp		8268610	0					
ANR	8269134	Identifier	value		8268610	1					
ANR	8269135	Identifier	array		8268610	1					
ANR	8269136	Identifier	data		8268610	1					
ANR	8269137	AdditiveExpression	nbytes - st -> data_left		8268610	1		-			
ANR	8269138	Identifier	nbytes		8268610	0					
ANR	8269139	PtrMemberAccess	st -> data_left		8268610	1					
ANR	8269140	Identifier	st		8268610	0					
ANR	8269141	Identifier	data_left		8268610	1					
ANR	8269142	ExpressionStatement	left = rlimit - p	374:12:12725:12742	8268610	4	True				
ANR	8269143	AssignmentExpression	left = rlimit - p		8268610	0		=			
ANR	8269144	Identifier	left		8268610	0					
ANR	8269145	AdditiveExpression	rlimit - p		8268610	1		-			
ANR	8269146	Identifier	rlimit		8268610	0					
ANR	8269147	Identifier	p		8268610	1					
ANR	8269148	IfStatement	if ( left < st -> data_left )		8268610	5					
ANR	8269149	Condition	left < st -> data_left	375:16:12760:12779	8268610	0	True				
ANR	8269150	RelationalExpression	left < st -> data_left		8268610	0		<			
ANR	8269151	Identifier	left		8268610	0					
ANR	8269152	PtrMemberAccess	st -> data_left		8268610	1					
ANR	8269153	Identifier	st		8268610	0					
ANR	8269154	Identifier	data_left		8268610	1					
ANR	8269155	CompoundStatement		84:38:3219:3219	8268610	1					
ANR	8269156	ExpressionStatement	"memcpy ( dest , p + 1 , left )"	376:16:12857:12882	8268610	0	True				
ANR	8269157	CallExpression	"memcpy ( dest , p + 1 , left )"		8268610	0					
ANR	8269158	Callee	memcpy		8268610	0					
ANR	8269159	Identifier	memcpy		8268610	0					
ANR	8269160	ArgumentList	dest		8268610	1					
ANR	8269161	Argument	dest		8268610	0					
ANR	8269162	Identifier	dest		8268610	0					
ANR	8269163	Argument	p + 1		8268610	1					
ANR	8269164	AdditiveExpression	p + 1		8268610	0		+			
ANR	8269165	Identifier	p		8268610	0					
ANR	8269166	PrimaryExpression	1		8268610	1					
ANR	8269167	Argument	left		8268610	2					
ANR	8269168	Identifier	left		8268610	0					
ANR	8269169	ExpressionStatement	st -> data_left -= left	377:16:12900:12921	8268610	1	True				
ANR	8269170	AssignmentExpression	st -> data_left -= left		8268610	0		-=			
ANR	8269171	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269172	Identifier	st		8268610	0					
ANR	8269173	Identifier	data_left		8268610	1					
ANR	8269174	Identifier	left		8268610	1					
ANR	8269175	ExpressionStatement	p = rlimit	378:16:12939:12949	8268610	2	True				
ANR	8269176	AssignmentExpression	p = rlimit		8268610	0		=			
ANR	8269177	Identifier	p		8268610	0					
ANR	8269178	Identifier	rlimit		8268610	1					
ANR	8269179	ExpressionStatement	code = 0	379:16:12967:12975	8268610	3	True				
ANR	8269180	AssignmentExpression	code = 0		8268610	0		=			
ANR	8269181	Identifier	code		8268610	0					
ANR	8269182	PrimaryExpression	0		8268610	1					
ANR	8269183	GotoStatement	goto x ;	380:16:12993:12999	8268610	4	True				
ANR	8269184	Identifier	x		8268610	0					
ANR	8269185	ExpressionStatement	"memcpy ( dest , p + 1 , st -> data_left )"	383:12:13086:13120	8268610	6	True				
ANR	8269186	CallExpression	"memcpy ( dest , p + 1 , st -> data_left )"		8268610	0					
ANR	8269187	Callee	memcpy		8268610	0					
ANR	8269188	Identifier	memcpy		8268610	0					
ANR	8269189	ArgumentList	dest		8268610	1					
ANR	8269190	Argument	dest		8268610	0					
ANR	8269191	Identifier	dest		8268610	0					
ANR	8269192	Argument	p + 1		8268610	1					
ANR	8269193	AdditiveExpression	p + 1		8268610	0		+			
ANR	8269194	Identifier	p		8268610	0					
ANR	8269195	PrimaryExpression	1		8268610	1					
ANR	8269196	Argument	st -> data_left		8268610	2					
ANR	8269197	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269198	Identifier	st		8268610	0					
ANR	8269199	Identifier	data_left		8268610	1					
ANR	8269200	ExpressionStatement	"trace_array ( memory , sp )"	384:12:13134:13157	8268610	7	True				
ANR	8269201	CallExpression	"trace_array ( memory , sp )"		8268610	0					
ANR	8269202	Callee	trace_array		8268610	0					
ANR	8269203	Identifier	trace_array		8268610	0					
ANR	8269204	ArgumentList	memory		8268610	1					
ANR	8269205	Argument	memory		8268610	0					
ANR	8269206	Identifier	memory		8268610	0					
ANR	8269207	Argument	sp		8268610	1					
ANR	8269208	Identifier	sp		8268610	0					
ANR	8269209	ExpressionStatement	p += st -> data_left	385:12:13171:13189	8268610	8	True				
ANR	8269210	AssignmentExpression	p += st -> data_left		8268610	0		+=			
ANR	8269211	Identifier	p		8268610	0					
ANR	8269212	PtrMemberAccess	st -> data_left		8268610	1					
ANR	8269213	Identifier	st		8268610	0					
ANR	8269214	Identifier	data_left		8268610	1					
ANR	8269215	ExpressionStatement	st -> data_left = 0	387:8:13209:13226	8268610	1	True				
ANR	8269216	AssignmentExpression	st -> data_left = 0		8268610	0		=			
ANR	8269217	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269218	Identifier	st		8268610	0					
ANR	8269219	Identifier	data_left		8268610	1					
ANR	8269220	PrimaryExpression	0		8268610	1					
ANR	8269221	ElseStatement	else		8268610	0					
ANR	8269222	IfStatement	if ( st -> data_proc )		8268610	0					
ANR	8269223	Condition	st -> data_proc	388:15:13243:13255	8268610	0	True				
ANR	8269224	PtrMemberAccess	st -> data_proc		8268610	0					
ANR	8269225	Identifier	st		8268610	0					
ANR	8269226	Identifier	data_proc		8268610	1					
ANR	8269227	CompoundStatement		97:30:3695:3695	8268610	1					
ANR	8269228	ExpressionStatement	code = 0	390:8:13355:13363	8268610	0	True				
ANR	8269229	AssignmentExpression	code = 0		8268610	0		=			
ANR	8269230	Identifier	code		8268610	0					
ANR	8269231	PrimaryExpression	0		8268610	1					
ANR	8269232	IfStatement	if ( st -> data_proc == pxVendorUnique )		8268610	1					
ANR	8269233	Condition	st -> data_proc == pxVendorUnique	393:12:13534:13564	8268610	0	True				
ANR	8269234	EqualityExpression	st -> data_proc == pxVendorUnique		8268610	0		==			
ANR	8269235	PtrMemberAccess	st -> data_proc		8268610	0					
ANR	8269236	Identifier	st		8268610	0					
ANR	8269237	Identifier	data_proc		8268610	1					
ANR	8269238	Identifier	pxVendorUnique		8268610	1					
ANR	8269239	CompoundStatement		102:45:4004:4004	8268610	1					
ANR	8269240	ExpressionStatement	st -> data_left = st -> stack [ st -> attribute_indices [ pxaVUDataLength ] ] . value . i	394:12:13581:13670	8268610	0	True				
ANR	8269241	AssignmentExpression	st -> data_left = st -> stack [ st -> attribute_indices [ pxaVUDataLength ] ] . value . i		8268610	0		=			
ANR	8269242	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269243	Identifier	st		8268610	0					
ANR	8269244	Identifier	data_left		8268610	1					
ANR	8269245	MemberAccess	st -> stack [ st -> attribute_indices [ pxaVUDataLength ] ] . value . i		8268610	1					
ANR	8269246	MemberAccess	st -> stack [ st -> attribute_indices [ pxaVUDataLength ] ] . value		8268610	0					
ANR	8269247	ArrayIndexing	st -> stack [ st -> attribute_indices [ pxaVUDataLength ] ]		8268610	0					
ANR	8269248	PtrMemberAccess	st -> stack		8268610	0					
ANR	8269249	Identifier	st		8268610	0					
ANR	8269250	Identifier	stack		8268610	1					
ANR	8269251	ArrayIndexing	st -> attribute_indices [ pxaVUDataLength ]		8268610	1					
ANR	8269252	PtrMemberAccess	st -> attribute_indices		8268610	0					
ANR	8269253	Identifier	st		8268610	0					
ANR	8269254	Identifier	attribute_indices		8268610	1					
ANR	8269255	Identifier	pxaVUDataLength		8268610	1					
ANR	8269256	Identifier	value		8268610	1					
ANR	8269257	Identifier	i		8268610	1					
ANR	8269258	GotoStatement	goto top ;	396:12:13684:13692	8268610	1	True				
ANR	8269259	Identifier	top		8268610	0					
ANR	8269260	ElseStatement	else		8268610	0					
ANR	8269261	CompoundStatement		106:15:4146:4146	8268610	0					
ANR	8269262	WhileStatement	while ( ( left = rlimit - p ) != 0 )		8268610	0					
ANR	8269263	Condition	( left = rlimit - p ) != 0	398:19:13730:13753	8268610	0	True				
ANR	8269264	EqualityExpression	( left = rlimit - p ) != 0		8268610	0		!=			
ANR	8269265	AssignmentExpression	left = rlimit - p		8268610	0		=			
ANR	8269266	Identifier	left		8268610	0					
ANR	8269267	AdditiveExpression	rlimit - p		8268610	1		-			
ANR	8269268	Identifier	rlimit		8268610	0					
ANR	8269269	Identifier	p		8268610	1					
ANR	8269270	PrimaryExpression	0		8268610	1					
ANR	8269271	CompoundStatement		107:45:4193:4193	8268610	1					
ANR	8269272	SwitchStatement	switch ( ( tag = p [ 1 ] ) )		8268610	0					
ANR	8269273	Condition	tag = p [ 1 ]	399:24:13782:13793	8268610	0	True				
ANR	8269274	AssignmentExpression	tag = p [ 1 ]		8268610	0		=			
ANR	8269275	Identifier	tag		8268610	0					
ANR	8269276	ArrayIndexing	p [ 1 ]		8268610	1					
ANR	8269277	Identifier	p		8268610	0					
ANR	8269278	PrimaryExpression	1		8268610	1					
ANR	8269279	CompoundStatement		108:38:4233:4233	8268610	1					
ANR	8269280	Label	case pxtNull :	400:16:13814:13826	8268610	0	True				
ANR	8269281	Identifier	pxtNull		8268610	0					
ANR	8269282	Label	case pxtHT :	401:16:13844:13854	8268610	1	True				
ANR	8269283	Identifier	pxtHT		8268610	0					
ANR	8269284	Label	case pxtLF :	402:16:13872:13882	8268610	2	True				
ANR	8269285	Identifier	pxtLF		8268610	0					
ANR	8269286	Label	case pxtVT :	403:16:13900:13910	8268610	3	True				
ANR	8269287	Identifier	pxtVT		8268610	0					
ANR	8269288	Label	case pxtFF :	404:16:13928:13938	8268610	4	True				
ANR	8269289	Identifier	pxtFF		8268610	0					
ANR	8269290	Label	case pxtCR :	405:16:13956:13966	8268610	5	True				
ANR	8269291	Identifier	pxtCR		8268610	0					
ANR	8269292	ExpressionStatement	++ p	406:20:13988:13991	8268610	6	True				
ANR	8269293	UnaryExpression	++ p		8268610	0					
ANR	8269294	IncDec	++		8268610	0					
ANR	8269295	Identifier	p		8268610	1					
ANR	8269296	ContinueStatement	continue ;	407:20:14013:14021	8268610	7	True				
ANR	8269297	Label	case pxt_dataLength :	408:16:14039:14058	8268610	8	True				
ANR	8269298	Identifier	pxt_dataLength		8268610	0					
ANR	8269299	IfStatement	if ( left < 5 )		8268610	9					
ANR	8269300	Condition	left < 5	409:24:14084:14091	8268610	0	True				
ANR	8269301	RelationalExpression	left < 5		8268610	0		<			
ANR	8269302	Identifier	left		8268610	0					
ANR	8269303	PrimaryExpression	5		8268610	1					
ANR	8269304	GotoStatement	goto x ;	410:24:14118:14124	8268610	1	True				
ANR	8269305	Identifier	x		8268610	0					
ANR	8269306	ExpressionStatement	"st -> data_left = get_uint32 ( st , p + 2 )"	411:20:14169:14206	8268610	10	True				
ANR	8269307	AssignmentExpression	"st -> data_left = get_uint32 ( st , p + 2 )"		8268610	0		=			
ANR	8269308	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269309	Identifier	st		8268610	0					
ANR	8269310	Identifier	data_left		8268610	1					
ANR	8269311	CallExpression	"get_uint32 ( st , p + 2 )"		8268610	1					
ANR	8269312	Callee	get_uint32		8268610	0					
ANR	8269313	Identifier	get_uint32		8268610	0					
ANR	8269314	ArgumentList	st		8268610	1					
ANR	8269315	Argument	st		8268610	0					
ANR	8269316	Identifier	st		8268610	0					
ANR	8269317	Argument	p + 2		8268610	1					
ANR	8269318	AdditiveExpression	p + 2		8268610	0		+			
ANR	8269319	Identifier	p		8268610	0					
ANR	8269320	PrimaryExpression	2		8268610	1					
ANR	8269321	ExpressionStatement	"if_debug2m ( 'i' , memory , ""tag=  0x%2x  data, length %u\\n"" , p [ 1 ] , st -> data_left )"	412:20:14228:14337	8268610	11	True				
ANR	8269322	CallExpression	"if_debug2m ( 'i' , memory , ""tag=  0x%2x  data, length %u\\n"" , p [ 1 ] , st -> data_left )"		8268610	0					
ANR	8269323	Callee	if_debug2m		8268610	0					
ANR	8269324	Identifier	if_debug2m		8268610	0					
ANR	8269325	ArgumentList	'i'		8268610	1					
ANR	8269326	Argument	'i'		8268610	0					
ANR	8269327	PrimaryExpression	'i'		8268610	0					
ANR	8269328	Argument	memory		8268610	1					
ANR	8269329	Identifier	memory		8268610	0					
ANR	8269330	Argument	"""tag=  0x%2x  data, length %u\\n"""		8268610	2					
ANR	8269331	PrimaryExpression	"""tag=  0x%2x  data, length %u\\n"""		8268610	0					
ANR	8269332	Argument	p [ 1 ]		8268610	3					
ANR	8269333	ArrayIndexing	p [ 1 ]		8268610	0					
ANR	8269334	Identifier	p		8268610	0					
ANR	8269335	PrimaryExpression	1		8268610	1					
ANR	8269336	Argument	st -> data_left		8268610	4					
ANR	8269337	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269338	Identifier	st		8268610	0					
ANR	8269339	Identifier	data_left		8268610	1					
ANR	8269340	ExpressionStatement	p += 5	414:20:14359:14365	8268610	12	True				
ANR	8269341	AssignmentExpression	p += 5		8268610	0		+=			
ANR	8269342	Identifier	p		8268610	0					
ANR	8269343	PrimaryExpression	5		8268610	1					
ANR	8269344	GotoStatement	goto top ;	415:20:14387:14395	8268610	13	True				
ANR	8269345	Identifier	top		8268610	0					
ANR	8269346	Label	case pxt_dataLengthByte :	416:16:14413:14436	8268610	14	True				
ANR	8269347	Identifier	pxt_dataLengthByte		8268610	0					
ANR	8269348	IfStatement	if ( left < 2 )		8268610	15					
ANR	8269349	Condition	left < 2	417:24:14462:14469	8268610	0	True				
ANR	8269350	RelationalExpression	left < 2		8268610	0		<			
ANR	8269351	Identifier	left		8268610	0					
ANR	8269352	PrimaryExpression	2		8268610	1					
ANR	8269353	GotoStatement	goto x ;	418:24:14496:14502	8268610	1	True				
ANR	8269354	Identifier	x		8268610	0					
ANR	8269355	ExpressionStatement	st -> data_left = p [ 2 ]	419:20:14547:14567	8268610	16	True				
ANR	8269356	AssignmentExpression	st -> data_left = p [ 2 ]		8268610	0		=			
ANR	8269357	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269358	Identifier	st		8268610	0					
ANR	8269359	Identifier	data_left		8268610	1					
ANR	8269360	ArrayIndexing	p [ 2 ]		8268610	1					
ANR	8269361	Identifier	p		8268610	0					
ANR	8269362	PrimaryExpression	2		8268610	1					
ANR	8269363	ExpressionStatement	"if_debug2m ( 'i' , memory , ""tag=  0x%2x  data, length %u\\n"" , p [ 1 ] , st -> data_left )"	420:20:14589:14698	8268610	17	True				
ANR	8269364	CallExpression	"if_debug2m ( 'i' , memory , ""tag=  0x%2x  data, length %u\\n"" , p [ 1 ] , st -> data_left )"		8268610	0					
ANR	8269365	Callee	if_debug2m		8268610	0					
ANR	8269366	Identifier	if_debug2m		8268610	0					
ANR	8269367	ArgumentList	'i'		8268610	1					
ANR	8269368	Argument	'i'		8268610	0					
ANR	8269369	PrimaryExpression	'i'		8268610	0					
ANR	8269370	Argument	memory		8268610	1					
ANR	8269371	Identifier	memory		8268610	0					
ANR	8269372	Argument	"""tag=  0x%2x  data, length %u\\n"""		8268610	2					
ANR	8269373	PrimaryExpression	"""tag=  0x%2x  data, length %u\\n"""		8268610	0					
ANR	8269374	Argument	p [ 1 ]		8268610	3					
ANR	8269375	ArrayIndexing	p [ 1 ]		8268610	0					
ANR	8269376	Identifier	p		8268610	0					
ANR	8269377	PrimaryExpression	1		8268610	1					
ANR	8269378	Argument	st -> data_left		8268610	4					
ANR	8269379	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8269380	Identifier	st		8268610	0					
ANR	8269381	Identifier	data_left		8268610	1					
ANR	8269382	ExpressionStatement	p += 2	422:20:14720:14726	8268610	18	True				
ANR	8269383	AssignmentExpression	p += 2		8268610	0		+=			
ANR	8269384	Identifier	p		8268610	0					
ANR	8269385	PrimaryExpression	2		8268610	1					
ANR	8269386	GotoStatement	goto top ;	423:20:14748:14756	8268610	19	True				
ANR	8269387	Identifier	top		8268610	0					
ANR	8269388	Label	default :	424:16:14774:14781	8268610	20	True				
ANR	8269389	Identifier	default		8268610	0					
ANR	8269390	CompoundStatement		134:20:5240:5240	8268610	21					
ANR	8269391	ExpressionStatement	code = gs_note_error ( errorMissingData )	426:24:14829:14867	8268610	0	True				
ANR	8269392	AssignmentExpression	code = gs_note_error ( errorMissingData )		8268610	0		=			
ANR	8269393	Identifier	code		8268610	0					
ANR	8269394	CallExpression	gs_note_error ( errorMissingData )		8268610	1					
ANR	8269395	Callee	gs_note_error		8268610	0					
ANR	8269396	Identifier	gs_note_error		8268610	0					
ANR	8269397	ArgumentList	errorMissingData		8268610	1					
ANR	8269398	Argument	errorMissingData		8268610	0					
ANR	8269399	Identifier	errorMissingData		8268610	0					
ANR	8269400	GotoStatement	goto x ;	427:24:14893:14899	8268610	1	True				
ANR	8269401	Identifier	x		8268610	0					
ANR	8269402	ExpressionStatement	st -> args . source . position = 0	433:4:14975:15003	8268610	28	True				
ANR	8269403	AssignmentExpression	st -> args . source . position = 0		8268610	0		=			
ANR	8269404	MemberAccess	st -> args . source . position		8268610	0					
ANR	8269405	MemberAccess	st -> args . source		8268610	0					
ANR	8269406	PtrMemberAccess	st -> args		8268610	0					
ANR	8269407	Identifier	st		8268610	0					
ANR	8269408	Identifier	args		8268610	1					
ANR	8269409	Identifier	source		8268610	1					
ANR	8269410	Identifier	position		8268610	1					
ANR	8269411	PrimaryExpression	0		8268610	1					
ANR	8269412	ExpressionStatement	st -> args . source . available = 0	434:4:15009:15038	8268610	29	True				
ANR	8269413	AssignmentExpression	st -> args . source . available = 0		8268610	0		=			
ANR	8269414	MemberAccess	st -> args . source . available		8268610	0					
ANR	8269415	MemberAccess	st -> args . source		8268610	0					
ANR	8269416	PtrMemberAccess	st -> args		8268610	0					
ANR	8269417	Identifier	st		8268610	0					
ANR	8269418	Identifier	args		8268610	1					
ANR	8269419	Identifier	source		8268610	1					
ANR	8269420	Identifier	available		8268610	1					
ANR	8269421	PrimaryExpression	0		8268610	1					
ANR	8269422	WhileStatement	while ( ( left = rlimit - p ) != 0 && left >= ( min_left = ( syntax = & tag_syntax [ tag = p [ 1 ] ] ) -> min_input ) )		8268610	30					
ANR	8269423	Condition	( left = rlimit - p ) != 0 && left >= ( min_left = ( syntax = & tag_syntax [ tag = p [ 1 ] ] ) -> min_input )	435:11:15051:15155	8268610	0	True				
ANR	8269424	AndExpression	( left = rlimit - p ) != 0 && left >= ( min_left = ( syntax = & tag_syntax [ tag = p [ 1 ] ] ) -> min_input )		8268610	0		&&			
ANR	8269425	EqualityExpression	( left = rlimit - p ) != 0		8268610	0		!=			
ANR	8269426	AssignmentExpression	left = rlimit - p		8268610	0		=			
ANR	8269427	Identifier	left		8268610	0					
ANR	8269428	AdditiveExpression	rlimit - p		8268610	1		-			
ANR	8269429	Identifier	rlimit		8268610	0					
ANR	8269430	Identifier	p		8268610	1					
ANR	8269431	PrimaryExpression	0		8268610	1					
ANR	8269432	RelationalExpression	left >= ( min_left = ( syntax = & tag_syntax [ tag = p [ 1 ] ] ) -> min_input )		8268610	1		>=			
ANR	8269433	Identifier	left		8268610	0					
ANR	8269434	AssignmentExpression	min_left = ( syntax = & tag_syntax [ tag = p [ 1 ] ] ) -> min_input		8268610	1		=			
ANR	8269435	Identifier	min_left		8268610	0					
ANR	8269436	PtrMemberAccess	( syntax = & tag_syntax [ tag = p [ 1 ] ] ) -> min_input		8268610	1					
ANR	8269437	AssignmentExpression	syntax = & tag_syntax [ tag = p [ 1 ] ]		8268610	0		=			
ANR	8269438	Identifier	syntax		8268610	0					
ANR	8269439	UnaryOperationExpression	& tag_syntax [ tag = p [ 1 ] ]		8268610	1					
ANR	8269440	UnaryOperator	&		8268610	0					
ANR	8269441	ArrayIndexing	tag_syntax [ tag = p [ 1 ] ]		8268610	1					
ANR	8269442	Identifier	tag_syntax		8268610	0					
ANR	8269443	AssignmentExpression	tag = p [ 1 ]		8268610	1		=			
ANR	8269444	Identifier	tag		8268610	0					
ANR	8269445	ArrayIndexing	p [ 1 ]		8268610	1					
ANR	8269446	Identifier	p		8268610	0					
ANR	8269447	PrimaryExpression	1		8268610	1					
ANR	8269448	Identifier	min_input		8268610	1					
ANR	8269449	CompoundStatement		147:8:5614:5623	8268610	1					
ANR	8269450	IdentifierDeclStatement	int count ;	438:8:15177:15186	8268610	0	True				
ANR	8269451	IdentifierDecl	count		8268610	0					
ANR	8269452	IdentifierDeclType	int		8268610	0					
ANR	8269453	Identifier	count		8268610	1					
ANR	8269454	IfStatement	if ( gs_debug_c ( 'i' ) )		8268610	1					
ANR	8269455	Condition	gs_debug_c ( 'i' )	441:12:15214:15228	8268610	0	True				
ANR	8269456	CallExpression	gs_debug_c ( 'i' )		8268610	0					
ANR	8269457	Callee	gs_debug_c		8268610	0					
ANR	8269458	Identifier	gs_debug_c		8268610	0					
ANR	8269459	ArgumentList	'i'		8268610	1					
ANR	8269460	Argument	'i'		8268610	0					
ANR	8269461	PrimaryExpression	'i'		8268610	0					
ANR	8269462	CompoundStatement		150:29:5668:5668	8268610	1					
ANR	8269463	ExpressionStatement	"dmprintf1 ( memory , ""tag=  0x%02x  "" , tag )"	442:12:15245:15285	8268610	0	True				
ANR	8269464	CallExpression	"dmprintf1 ( memory , ""tag=  0x%02x  "" , tag )"		8268610	0					
ANR	8269465	Callee	dmprintf1		8268610	0					
ANR	8269466	Identifier	dmprintf1		8268610	0					
ANR	8269467	ArgumentList	memory		8268610	1					
ANR	8269468	Argument	memory		8268610	0					
ANR	8269469	Identifier	memory		8268610	0					
ANR	8269470	Argument	"""tag=  0x%02x  """		8268610	1					
ANR	8269471	PrimaryExpression	"""tag=  0x%02x  """		8268610	0					
ANR	8269472	Argument	tag		8268610	2					
ANR	8269473	Identifier	tag		8268610	0					
ANR	8269474	IfStatement	if ( tag == pxt_attr_ubyte || tag == pxt_attr_uint16 )		8268610	1					
ANR	8269475	Condition	tag == pxt_attr_ubyte || tag == pxt_attr_uint16	443:16:15303:15349	8268610	0	True				
ANR	8269476	OrExpression	tag == pxt_attr_ubyte || tag == pxt_attr_uint16		8268610	0		||			
ANR	8269477	EqualityExpression	tag == pxt_attr_ubyte		8268610	0		==			
ANR	8269478	Identifier	tag		8268610	0					
ANR	8269479	Identifier	pxt_attr_ubyte		8268610	1					
ANR	8269480	EqualityExpression	tag == pxt_attr_uint16		8268610	1		==			
ANR	8269481	Identifier	tag		8268610	0					
ANR	8269482	Identifier	pxt_attr_uint16		8268610	1					
ANR	8269483	CompoundStatement		155:16:5921:5965	8268610	1					
ANR	8269484	IdentifierDeclStatement	"px_attribute_t attr = ( tag == pxt_attr_ubyte ? p [ 2 ] : get_uint16 ( st , p + 2 ) ) ;"	444:16:15370:15466	8268610	0	True				
ANR	8269485	IdentifierDecl	"attr = ( tag == pxt_attr_ubyte ? p [ 2 ] : get_uint16 ( st , p + 2 ) )"		8268610	0					
ANR	8269486	IdentifierDeclType	px_attribute_t		8268610	0					
ANR	8269487	Identifier	attr		8268610	1					
ANR	8269488	AssignmentExpression	"attr = ( tag == pxt_attr_ubyte ? p [ 2 ] : get_uint16 ( st , p + 2 ) )"		8268610	2		=			
ANR	8269489	Identifier	attr		8268610	0					
ANR	8269490	ConditionalExpression	"tag == pxt_attr_ubyte ? p [ 2 ] : get_uint16 ( st , p + 2 )"		8268610	1					
ANR	8269491	Condition	tag == pxt_attr_ubyte		8268610	0					
ANR	8269492	EqualityExpression	tag == pxt_attr_ubyte		8268610	0		==			
ANR	8269493	Identifier	tag		8268610	0					
ANR	8269494	Identifier	pxt_attr_ubyte		8268610	1					
ANR	8269495	ArrayIndexing	p [ 2 ]		8268610	1					
ANR	8269496	Identifier	p		8268610	0					
ANR	8269497	PrimaryExpression	2		8268610	1					
ANR	8269498	CallExpression	"get_uint16 ( st , p + 2 )"		8268610	2					
ANR	8269499	Callee	get_uint16		8268610	0					
ANR	8269500	Identifier	get_uint16		8268610	0					
ANR	8269501	ArgumentList	st		8268610	1					
ANR	8269502	Argument	st		8268610	0					
ANR	8269503	Identifier	st		8268610	0					
ANR	8269504	Argument	p + 2		8268610	1					
ANR	8269505	AdditiveExpression	p + 2		8268610	0		+			
ANR	8269506	Identifier	p		8268610	0					
ANR	8269507	PrimaryExpression	2		8268610	1					
ANR	8269508	IdentifierDeclStatement	const char * aname = px_attribute_names [ attr ] ;	446:16:15484:15528	8268610	1	True				
ANR	8269509	IdentifierDecl	* aname = px_attribute_names [ attr ]		8268610	0					
ANR	8269510	IdentifierDeclType	const char *		8268610	0					
ANR	8269511	Identifier	aname		8268610	1					
ANR	8269512	AssignmentExpression	* aname = px_attribute_names [ attr ]		8268610	2		=			
ANR	8269513	Identifier	aname		8268610	0					
ANR	8269514	ArrayIndexing	px_attribute_names [ attr ]		8268610	1					
ANR	8269515	Identifier	px_attribute_names		8268610	0					
ANR	8269516	Identifier	attr		8268610	1					
ANR	8269517	IfStatement	if ( aname )		8268610	2					
ANR	8269518	Condition	aname	448:20:15551:15555	8268610	0	True				
ANR	8269519	Identifier	aname		8268610	0					
ANR	8269520	ExpressionStatement	"dmprintf1 ( memory , ""   @%s\\n"" , aname )"	449:20:15578:15614	8268610	1	True				
ANR	8269521	CallExpression	"dmprintf1 ( memory , ""   @%s\\n"" , aname )"		8268610	0					
ANR	8269522	Callee	dmprintf1		8268610	0					
ANR	8269523	Identifier	dmprintf1		8268610	0					
ANR	8269524	ArgumentList	memory		8268610	1					
ANR	8269525	Argument	memory		8268610	0					
ANR	8269526	Identifier	memory		8268610	0					
ANR	8269527	Argument	"""   @%s\\n"""		8268610	1					
ANR	8269528	PrimaryExpression	"""   @%s\\n"""		8268610	0					
ANR	8269529	Argument	aname		8268610	2					
ANR	8269530	Identifier	aname		8268610	0					
ANR	8269531	ElseStatement	else		8268610	0					
ANR	8269532	ExpressionStatement	"dmprintf1 ( memory , ""   attribute %u ???\\n"" , attr )"	451:20:15657:15705	8268610	0	True				
ANR	8269533	CallExpression	"dmprintf1 ( memory , ""   attribute %u ???\\n"" , attr )"		8268610	0					
ANR	8269534	Callee	dmprintf1		8268610	0					
ANR	8269535	Identifier	dmprintf1		8268610	0					
ANR	8269536	ArgumentList	memory		8268610	1					
ANR	8269537	Argument	memory		8268610	0					
ANR	8269538	Identifier	memory		8268610	0					
ANR	8269539	Argument	"""   attribute %u ???\\n"""		8268610	1					
ANR	8269540	PrimaryExpression	"""   attribute %u ???\\n"""		8268610	0					
ANR	8269541	Argument	attr		8268610	2					
ANR	8269542	Identifier	attr		8268610	0					
ANR	8269543	ElseStatement	else		8268610	0					
ANR	8269544	CompoundStatement		163:16:6217:6234	8268610	0					
ANR	8269545	IdentifierDeclStatement	const char * format ;	453:16:15744:15762	8268610	0	True				
ANR	8269546	IdentifierDecl	* format		8268610	0					
ANR	8269547	IdentifierDeclType	const char *		8268610	0					
ANR	8269548	Identifier	format		8268610	1					
ANR	8269549	IdentifierDeclStatement	const char * tname ;	454:16:15780:15797	8268610	1	True				
ANR	8269550	IdentifierDecl	* tname		8268610	0					
ANR	8269551	IdentifierDeclType	const char *		8268610	0					
ANR	8269552	Identifier	tname		8268610	1					
ANR	8269553	Statement	bool	455:16:15815:15818	8268610	2	True				
ANR	8269554	Statement	operator	455:21:15820:15827	8268610	3	True				
ANR	8269555	Statement	=	455:30:15829:15829	8268610	4	True				
ANR	8269556	ExpressionStatement	false	455:32:15831:15836	8268610	5	True				
ANR	8269557	Identifier	false		8268610	0					
ANR	8269558	IfStatement	if ( tag < 0x40 )		8268610	6					
ANR	8269559	Condition	tag < 0x40	457:20:15859:15868	8268610	0	True				
ANR	8269560	RelationalExpression	tag < 0x40		8268610	0		<			
ANR	8269561	Identifier	tag		8268610	0					
ANR	8269562	PrimaryExpression	0x40		8268610	1					
ANR	8269563	ExpressionStatement	"format = ""%s\\n"" , tname = px_tag_0_names [ tag ]"	458:20:15891:15935	8268610	1	True				
ANR	8269564	Expression	"format = ""%s\\n"" , tname = px_tag_0_names [ tag ]"		8268610	0					
ANR	8269565	AssignmentExpression	"format = ""%s\\n"""		8268610	0		=			
ANR	8269566	Identifier	format		8268610	0					
ANR	8269567	PrimaryExpression	"""%s\\n"""		8268610	1					
ANR	8269568	AssignmentExpression	tname = px_tag_0_names [ tag ]		8268610	1		=			
ANR	8269569	Identifier	tname		8268610	0					
ANR	8269570	ArrayIndexing	px_tag_0_names [ tag ]		8268610	1					
ANR	8269571	Identifier	px_tag_0_names		8268610	0					
ANR	8269572	Identifier	tag		8268610	1					
ANR	8269573	ElseStatement	else		8268610	0					
ANR	8269574	IfStatement	if ( tag < 0xc0 )		8268610	0					
ANR	8269575	Condition	tag < 0xc0	459:25:15962:15971	8268610	0	True				
ANR	8269576	RelationalExpression	tag < 0xc0		8268610	0		<			
ANR	8269577	Identifier	tag		8268610	0					
ANR	8269578	PrimaryExpression	0xc0		8268610	1					
ANR	8269579	Statement	format	460:20:15994:15999	8268610	1	True				
ANR	8269580	ElseStatement	else		8268610	0					
ANR	8269581	CompoundStatement		171:21:6547:6547	8268610	0					
ANR	8269582	ExpressionStatement	tname = px_tag_c0_names [ tag - 0xc0 ]	463:20:16132:16167	8268610	0	True				
ANR	8269583	AssignmentExpression	tname = px_tag_c0_names [ tag - 0xc0 ]		8268610	0		=			
ANR	8269584	Identifier	tname		8268610	0					
ANR	8269585	ArrayIndexing	px_tag_c0_names [ tag - 0xc0 ]		8268610	1					
ANR	8269586	Identifier	px_tag_c0_names		8268610	0					
ANR	8269587	AdditiveExpression	tag - 0xc0		8268610	1		-			
ANR	8269588	Identifier	tag		8268610	0					
ANR	8269589	PrimaryExpression	0xc0		8268610	1					
ANR	8269590	IfStatement	if ( tag < 0xf0 )		8268610	1					
ANR	8269591	Condition	tag < 0xf0	464:24:16193:16202	8268610	0	True				
ANR	8269592	RelationalExpression	tag < 0xf0		8268610	0		<			
ANR	8269593	Identifier	tag		8268610	0					
ANR	8269594	PrimaryExpression	0xf0		8268610	1					
ANR	8269595	ExpressionStatement	"format = ""      %s"""	465:24:16229:16248	8268610	1	True				
ANR	8269596	AssignmentExpression	"format = ""      %s"""		8268610	0		=			
ANR	8269597	Identifier	format		8268610	0					
ANR	8269598	PrimaryExpression	"""      %s"""		8268610	1					
ANR	8269599	ElseStatement	else		8268610	0					
ANR	8269600	ExpressionStatement	"format = ""%s\\n"""	467:24:16327:16342	8268610	0	True				
ANR	8269601	AssignmentExpression	"format = ""%s\\n"""		8268610	0		=			
ANR	8269602	Identifier	format		8268610	0					
ANR	8269603	PrimaryExpression	"""%s\\n"""		8268610	1					
ANR	8269604	Statement	=	460:27:16001:16001	8268610	7	True				
ANR	8269605	Statement	"""%s"""	460:29:16003:16006	8268610	8	True				
ANR	8269606	Statement	","	460:33:16007:16007	8268610	9	True				
ANR	8269607	Statement	tname	460:35:16009:16013	8268610	10	True				
ANR	8269608	Statement	=	460:41:16015:16015	8268610	11	True				
ANR	8269609	Statement	px_operator_names	460:43:16017:16033	8268610	12	True				
ANR	8269610	Statement	[	460:60:16034:16034	8268610	13	True				
ANR	8269611	Statement	tag	460:61:16035:16037	8268610	14	True				
ANR	8269612	Statement	-	460:65:16039:16039	8268610	15	True				
ANR	8269613	Statement	0x40	460:67:16041:16044	8268610	16	True				
ANR	8269614	Statement	]	460:71:16045:16045	8268610	17	True				
ANR	8269615	Statement	","	460:72:16046:16046	8268610	18	True				
ANR	8269616	Statement	operator	461:24:16072:16079	8268610	19	True				
ANR	8269617	Statement	=	461:33:16081:16081	8268610	20	True				
ANR	8269618	ExpressionStatement	true	461:35:16083:16087	8268610	21	True				
ANR	8269619	Identifier	true		8268610	0					
ANR	8269620	IfStatement	if ( tname )		8268610	22					
ANR	8269621	Condition	tname	469:20:16382:16386	8268610	0	True				
ANR	8269622	Identifier	tname		8268610	0					
ANR	8269623	CompoundStatement		178:27:6826:6826	8268610	1					
ANR	8269624	ExpressionStatement	"dmprintf1 ( memory , format , tname )"	470:20:16411:16443	8268610	0	True				
ANR	8269625	CallExpression	"dmprintf1 ( memory , format , tname )"		8268610	0					
ANR	8269626	Callee	dmprintf1		8268610	0					
ANR	8269627	Identifier	dmprintf1		8268610	0					
ANR	8269628	ArgumentList	memory		8268610	1					
ANR	8269629	Argument	memory		8268610	0					
ANR	8269630	Identifier	memory		8268610	0					
ANR	8269631	Argument	format		8268610	1					
ANR	8269632	Identifier	format		8268610	0					
ANR	8269633	Argument	tname		8268610	2					
ANR	8269634	Identifier	tname		8268610	0					
ANR	8269635	Statement	if	471:20:16465:16466	8268610	1	True				
ANR	8269636	Statement	(	471:23:16468:16468	8268610	2	True				
ANR	8269637	Statement	operator	471:24:16469:16476	8268610	3	True				
ANR	8269638	Statement	)	471:32:16477:16477	8268610	4	True				
ANR	8269639	ExpressionStatement	"dmprintf1 ( memory , "" (%ld)\\n"" , st -> operator_count + 1 )"	472:24:16503:16556	8268610	5	True				
ANR	8269640	CallExpression	"dmprintf1 ( memory , "" (%ld)\\n"" , st -> operator_count + 1 )"		8268610	0					
ANR	8269641	Callee	dmprintf1		8268610	0					
ANR	8269642	Identifier	dmprintf1		8268610	0					
ANR	8269643	ArgumentList	memory		8268610	1					
ANR	8269644	Argument	memory		8268610	0					
ANR	8269645	Identifier	memory		8268610	0					
ANR	8269646	Argument	""" (%ld)\\n"""		8268610	1					
ANR	8269647	PrimaryExpression	""" (%ld)\\n"""		8268610	0					
ANR	8269648	Argument	st -> operator_count + 1		8268610	2					
ANR	8269649	AdditiveExpression	st -> operator_count + 1		8268610	0		+			
ANR	8269650	PtrMemberAccess	st -> operator_count		8268610	0					
ANR	8269651	Identifier	st		8268610	0					
ANR	8269652	Identifier	operator_count		8268610	1					
ANR	8269653	PrimaryExpression	1		8268610	1					
ANR	8269654	ElseStatement	else		8268610	0					
ANR	8269655	ExpressionStatement	"dmputs ( memory , ""???\\n"" )"	474:20:16601:16624	8268610	0	True				
ANR	8269656	CallExpression	"dmputs ( memory , ""???\\n"" )"		8268610	0					
ANR	8269657	Callee	dmputs		8268610	0					
ANR	8269658	Identifier	dmputs		8268610	0					
ANR	8269659	ArgumentList	memory		8268610	1					
ANR	8269660	Argument	memory		8268610	0					
ANR	8269661	Identifier	memory		8268610	0					
ANR	8269662	Argument	"""???\\n"""		8268610	1					
ANR	8269663	PrimaryExpression	"""???\\n"""		8268610	0					
ANR	8269664	IfStatement	if ( ( st -> macro_state & syntax -> state_mask ) != syntax -> state_value )		8268610	2					
ANR	8269665	Condition	( st -> macro_state & syntax -> state_mask ) != syntax -> state_value	478:12:16669:16729	8268610	0	True				
ANR	8269666	EqualityExpression	( st -> macro_state & syntax -> state_mask ) != syntax -> state_value		8268610	0		!=			
ANR	8269667	BitAndExpression	st -> macro_state & syntax -> state_mask		8268610	0		&			
ANR	8269668	PtrMemberAccess	st -> macro_state		8268610	0					
ANR	8269669	Identifier	st		8268610	0					
ANR	8269670	Identifier	macro_state		8268610	1					
ANR	8269671	PtrMemberAccess	syntax -> state_mask		8268610	1					
ANR	8269672	Identifier	syntax		8268610	0					
ANR	8269673	Identifier	state_mask		8268610	1					
ANR	8269674	PtrMemberAccess	syntax -> state_value		8268610	1					
ANR	8269675	Identifier	syntax		8268610	0					
ANR	8269676	Identifier	state_value		8268610	1					
ANR	8269677	CompoundStatement		187:75:7169:7169	8268610	1					
ANR	8269678	ExpressionStatement	code = gs_note_error ( errorIllegalOperatorSequence )	484:12:16936:16986	8268610	0	True				
ANR	8269679	AssignmentExpression	code = gs_note_error ( errorIllegalOperatorSequence )		8268610	0		=			
ANR	8269680	Identifier	code		8268610	0					
ANR	8269681	CallExpression	gs_note_error ( errorIllegalOperatorSequence )		8268610	1					
ANR	8269682	Callee	gs_note_error		8268610	0					
ANR	8269683	Identifier	gs_note_error		8268610	0					
ANR	8269684	ArgumentList	errorIllegalOperatorSequence		8268610	1					
ANR	8269685	Argument	errorIllegalOperatorSequence		8268610	0					
ANR	8269686	Identifier	errorIllegalOperatorSequence		8268610	0					
ANR	8269687	IfStatement	if ( tag >= 0x40 && tag < 0xc0 )		8268610	1					
ANR	8269688	Condition	tag >= 0x40 && tag < 0xc0	485:16:17004:17028	8268610	0	True				
ANR	8269689	AndExpression	tag >= 0x40 && tag < 0xc0		8268610	0		&&			
ANR	8269690	RelationalExpression	tag >= 0x40		8268610	0		>=			
ANR	8269691	Identifier	tag		8268610	0					
ANR	8269692	PrimaryExpression	0x40		8268610	1					
ANR	8269693	RelationalExpression	tag < 0xc0		8268610	1		<			
ANR	8269694	Identifier	tag		8268610	0					
ANR	8269695	PrimaryExpression	0xc0		8268610	1					
ANR	8269696	ExpressionStatement	st -> last_operator = tag	486:16:17047:17070	8268610	1	True				
ANR	8269697	AssignmentExpression	st -> last_operator = tag		8268610	0		=			
ANR	8269698	PtrMemberAccess	st -> last_operator		8268610	0					
ANR	8269699	Identifier	st		8268610	0					
ANR	8269700	Identifier	last_operator		8268610	1					
ANR	8269701	Identifier	tag		8268610	1					
ANR	8269702	GotoStatement	goto x ;	487:12:17084:17090	8268610	2	True				
ANR	8269703	Identifier	x		8268610	0					
ANR	8269704	ExpressionStatement	st -> macro_state ^= syntax -> state_transition	489:8:17110:17153	8268610	3	True				
ANR	8269705	AssignmentExpression	st -> macro_state ^= syntax -> state_transition		8268610	0		^=			
ANR	8269706	PtrMemberAccess	st -> macro_state		8268610	0					
ANR	8269707	Identifier	st		8268610	0					
ANR	8269708	Identifier	macro_state		8268610	1					
ANR	8269709	PtrMemberAccess	syntax -> state_transition		8268610	1					
ANR	8269710	Identifier	syntax		8268610	0					
ANR	8269711	Identifier	state_transition		8268610	1					
ANR	8269712	SwitchStatement	switch ( tag >> 3 )		8268610	4					
ANR	8269713	Condition	tag >> 3	490:16:17171:17178	8268610	0	True				
ANR	8269714	ShiftExpression	tag >> 3		8268610	0		>>			
ANR	8269715	Identifier	tag		8268610	0					
ANR	8269716	PrimaryExpression	3		8268610	1					
ANR	8269717	CompoundStatement		199:26:7618:7618	8268610	1					
ANR	8269718	Label	case 0 :	491:12:17195:17201	8268610	0	True				
ANR	8269719	SwitchStatement	switch ( tag )		8268610	1					
ANR	8269720	Condition	tag	492:24:17227:17229	8268610	0	True				
ANR	8269721	Identifier	tag		8268610	0					
ANR	8269722	CompoundStatement		201:29:7669:7669	8268610	1					
ANR	8269723	Label	case pxtNull :	493:20:17254:17266	8268610	0	True				
ANR	8269724	Identifier	pxtNull		8268610	0					
ANR	8269725	ExpressionStatement	++ p	494:24:17292:17295	8268610	1	True				
ANR	8269726	UnaryExpression	++ p		8268610	0					
ANR	8269727	IncDec	++		8268610	0					
ANR	8269728	Identifier	p		8268610	1					
ANR	8269729	ContinueStatement	continue ;	495:24:17321:17329	8268610	2	True				
ANR	8269730	Label	default :	496:20:17351:17358	8268610	3	True				
ANR	8269731	Identifier	default		8268610	0					
ANR	8269732	BreakStatement	break ;	497:24:17384:17389	8268610	4	True				
ANR	8269733	BreakStatement	break ;	499:16:17425:17430	8268610	2	True				
ANR	8269734	Label	case 1 :	500:12:17444:17450	8268610	3	True				
ANR	8269735	SwitchStatement	switch ( tag )		8268610	4					
ANR	8269736	Condition	tag	501:24:17476:17478	8268610	0	True				
ANR	8269737	Identifier	tag		8268610	0					
ANR	8269738	CompoundStatement		210:29:7918:7918	8268610	1					
ANR	8269739	Label	case pxtHT :	502:20:17503:17513	8268610	0	True				
ANR	8269740	Identifier	pxtHT		8268610	0					
ANR	8269741	Label	case pxtLF :	503:20:17535:17545	8268610	1	True				
ANR	8269742	Identifier	pxtLF		8268610	0					
ANR	8269743	Label	case pxtVT :	504:20:17567:17577	8268610	2	True				
ANR	8269744	Identifier	pxtVT		8268610	0					
ANR	8269745	Label	case pxtFF :	505:20:17599:17609	8268610	3	True				
ANR	8269746	Identifier	pxtFF		8268610	0					
ANR	8269747	Label	case pxtCR :	506:20:17631:17641	8268610	4	True				
ANR	8269748	Identifier	pxtCR		8268610	0					
ANR	8269749	ExpressionStatement	++ p	507:24:17667:17670	8268610	5	True				
ANR	8269750	UnaryExpression	++ p		8268610	0					
ANR	8269751	IncDec	++		8268610	0					
ANR	8269752	Identifier	p		8268610	1					
ANR	8269753	ContinueStatement	continue ;	508:24:17696:17704	8268610	6	True				
ANR	8269754	Label	default :	509:20:17726:17733	8268610	7	True				
ANR	8269755	Identifier	default		8268610	0					
ANR	8269756	BreakStatement	break ;	510:24:17759:17764	8268610	8	True				
ANR	8269757	BreakStatement	break ;	512:16:17800:17805	8268610	5	True				
ANR	8269758	Label	case 3 :	513:12:17819:17825	8268610	6	True				
ANR	8269759	IfStatement	if ( tag == pxt1b )		8268610	7					
ANR	8269760	Condition	tag == pxt1b	514:20:17847:17858	8268610	0	True				
ANR	8269761	EqualityExpression	tag == pxt1b		8268610	0		==			
ANR	8269762	Identifier	tag		8268610	0					
ANR	8269763	Identifier	pxt1b		8268610	1					
ANR	8269764	CompoundStatement		223:34:8298:8298	8268610	1					
ANR	8269765	IfStatement	"if ( memcmp ( p + 1 , ""\\033%-12345X"" , min ( left , 9 ) ) )"		8268610	0					
ANR	8269766	Condition	"memcmp ( p + 1 , ""\\033%-12345X"" , min ( left , 9 ) )"	515:24:17920:17962	8268610	0	True				
ANR	8269767	CallExpression	"memcmp ( p + 1 , ""\\033%-12345X"" , min ( left , 9 ) )"		8268610	0					
ANR	8269768	Callee	memcmp		8268610	0					
ANR	8269769	Identifier	memcmp		8268610	0					
ANR	8269770	ArgumentList	p + 1		8268610	1					
ANR	8269771	Argument	p + 1		8268610	0					
ANR	8269772	AdditiveExpression	p + 1		8268610	0		+			
ANR	8269773	Identifier	p		8268610	0					
ANR	8269774	PrimaryExpression	1		8268610	1					
ANR	8269775	Argument	"""\\033%-12345X"""		8268610	1					
ANR	8269776	PrimaryExpression	"""\\033%-12345X"""		8268610	0					
ANR	8269777	Argument	"min ( left , 9 )"		8268610	2					
ANR	8269778	CallExpression	"min ( left , 9 )"		8268610	0					
ANR	8269779	Callee	min		8268610	0					
ANR	8269780	Identifier	min		8268610	0					
ANR	8269781	ArgumentList	left		8268610	1					
ANR	8269782	Argument	left		8268610	0					
ANR	8269783	Identifier	left		8268610	0					
ANR	8269784	Argument	9		8268610	1					
ANR	8269785	PrimaryExpression	9		8268610	0					
ANR	8269786	BreakStatement	break ;	516:24:17989:17994	8268610	1	True				
ANR	8269787	IfStatement	if ( left < 9 )		8268610	1					
ANR	8269788	Condition	left < 9	517:24:18042:18049	8268610	0	True				
ANR	8269789	RelationalExpression	left < 9		8268610	0		<			
ANR	8269790	Identifier	left		8268610	0					
ANR	8269791	PrimaryExpression	9		8268610	1					
ANR	8269792	GotoStatement	goto x ;	518:24:18076:18082	8268610	1	True				
ANR	8269793	Identifier	x		8268610	0					
ANR	8269794	ExpressionStatement	p += 9	519:20:18125:18131	8268610	2	True				
ANR	8269795	AssignmentExpression	p += 9		8268610	0		+=			
ANR	8269796	Identifier	p		8268610	0					
ANR	8269797	PrimaryExpression	9		8268610	1					
ANR	8269798	ExpressionStatement	code = e_ExitLanguage	520:20:18153:18174	8268610	3	True				
ANR	8269799	AssignmentExpression	code = e_ExitLanguage		8268610	0		=			
ANR	8269800	Identifier	code		8268610	0					
ANR	8269801	Identifier	e_ExitLanguage		8268610	1					
ANR	8269802	GotoStatement	goto x ;	521:20:18196:18202	8268610	4	True				
ANR	8269803	Identifier	x		8268610	0					
ANR	8269804	BreakStatement	break ;	523:16:18238:18243	8268610	8	True				
ANR	8269805	Label	case 4 :	524:12:18257:18263	8268610	9	True				
ANR	8269806	SwitchStatement	switch ( tag )		8268610	10					
ANR	8269807	Condition	tag	525:24:18289:18291	8268610	0	True				
ANR	8269808	Identifier	tag		8268610	0					
ANR	8269809	CompoundStatement		234:29:8731:8731	8268610	1					
ANR	8269810	Label	case pxtSpace :	526:20:18316:18329	8268610	0	True				
ANR	8269811	Identifier	pxtSpace		8268610	0					
ANR	8269812	ExpressionStatement	++ p	529:24:18494:18497	8268610	1	True				
ANR	8269813	UnaryExpression	++ p		8268610	0					
ANR	8269814	IncDec	++		8268610	0					
ANR	8269815	Identifier	p		8268610	1					
ANR	8269816	ContinueStatement	continue ;	530:24:18523:18531	8268610	2	True				
ANR	8269817	Label	default :	531:20:18553:18560	8268610	3	True				
ANR	8269818	Identifier	default		8268610	0					
ANR	8269819	BreakStatement	break ;	532:24:18586:18591	8268610	4	True				
ANR	8269820	BreakStatement	break ;	534:16:18627:18632	8268610	11	True				
ANR	8269821	Label	case 8 :	535:12:18646:18652	8268610	12	True				
ANR	8269822	Label	case 9 :	536:12:18666:18672	8268610	13	True				
ANR	8269823	Label	case 10 :	537:12:18686:18693	8268610	14	True				
ANR	8269824	Label	case 11 :	538:12:18707:18714	8268610	15	True				
ANR	8269825	Label	case 12 :	539:12:18728:18735	8268610	16	True				
ANR	8269826	Label	case 13 :	540:12:18749:18756	8268610	17	True				
ANR	8269827	Label	case 14 :	541:12:18770:18777	8268610	18	True				
ANR	8269828	Label	case 15 :	542:12:18791:18798	8268610	19	True				
ANR	8269829	Label	case 16 :	543:12:18812:18819	8268610	20	True				
ANR	8269830	Label	case 17 :	544:12:18833:18840	8268610	21	True				
ANR	8269831	Label	case 18 :	545:12:18854:18861	8268610	22	True				
ANR	8269832	Label	case 19 :	546:12:18875:18882	8268610	23	True				
ANR	8269833	Label	case 20 :	547:12:18896:18903	8268610	24	True				
ANR	8269834	Label	case 21 :	548:12:18917:18924	8268610	25	True				
ANR	8269835	Label	case 22 :	549:12:18938:18945	8268610	26	True				
ANR	8269836	Label	case 23 :	550:12:18959:18966	8268610	27	True				
ANR	8269837	ExpressionStatement	st -> operator_count ++	556:16:19283:19303	8268610	28	True				
ANR	8269838	PostIncDecOperationExpression	st -> operator_count ++		8268610	0					
ANR	8269839	PtrMemberAccess	st -> operator_count		8268610	0					
ANR	8269840	Identifier	st		8268610	0					
ANR	8269841	Identifier	operator_count		8268610	1					
ANR	8269842	IncDec	++		8268610	1					
ANR	8269843	IfStatement	if ( tag == pxtPassThrough )		8268610	29					
ANR	8269844	Condition	tag == pxtPassThrough	561:20:19566:19586	8268610	0	True				
ANR	8269845	EqualityExpression	tag == pxtPassThrough		8268610	0		==			
ANR	8269846	Identifier	tag		8268610	0					
ANR	8269847	Identifier	pxtPassThrough		8268610	1					
ANR	8269848	CompoundStatement		270:43:10026:10026	8268610	1					
ANR	8269849	ExpressionStatement	pxpcl_passthroughcontiguous ( st -> last_operator == tag )	562:20:19611:19664	8268610	0	True				
ANR	8269850	CallExpression	pxpcl_passthroughcontiguous ( st -> last_operator == tag )		8268610	0					
ANR	8269851	Callee	pxpcl_passthroughcontiguous		8268610	0					
ANR	8269852	Identifier	pxpcl_passthroughcontiguous		8268610	0					
ANR	8269853	ArgumentList	st -> last_operator == tag		8268610	1					
ANR	8269854	Argument	st -> last_operator == tag		8268610	0					
ANR	8269855	EqualityExpression	st -> last_operator == tag		8268610	0		==			
ANR	8269856	PtrMemberAccess	st -> last_operator		8268610	0					
ANR	8269857	Identifier	st		8268610	0					
ANR	8269858	Identifier	last_operator		8268610	1					
ANR	8269859	Identifier	tag		8268610	1					
ANR	8269860	ElseStatement	else		8268610	0					
ANR	8269861	IfStatement	if ( st -> last_operator == pxtPassThrough )		8268610	0					
ANR	8269862	Condition	st -> last_operator == pxtPassThrough	563:27:19693:19727	8268610	0	True				
ANR	8269863	EqualityExpression	st -> last_operator == pxtPassThrough		8268610	0		==			
ANR	8269864	PtrMemberAccess	st -> last_operator		8268610	0					
ANR	8269865	Identifier	st		8268610	0					
ANR	8269866	Identifier	last_operator		8268610	1					
ANR	8269867	Identifier	pxtPassThrough		8268610	1					
ANR	8269868	CompoundStatement		272:64:10167:10167	8268610	1					
ANR	8269869	ExpressionStatement	pxpcl_endpassthroughcontiguous ( pxs )	564:20:19752:19787	8268610	0	True				
ANR	8269870	CallExpression	pxpcl_endpassthroughcontiguous ( pxs )		8268610	0					
ANR	8269871	Callee	pxpcl_endpassthroughcontiguous		8268610	0					
ANR	8269872	Identifier	pxpcl_endpassthroughcontiguous		8268610	0					
ANR	8269873	ArgumentList	pxs		8268610	1					
ANR	8269874	Argument	pxs		8268610	0					
ANR	8269875	Identifier	pxs		8268610	0					
ANR	8269876	ExpressionStatement	st -> last_operator = tag	567:16:19824:19847	8268610	30	True				
ANR	8269877	AssignmentExpression	st -> last_operator = tag		8268610	0		=			
ANR	8269878	PtrMemberAccess	st -> last_operator		8268610	0					
ANR	8269879	Identifier	st		8268610	0					
ANR	8269880	Identifier	last_operator		8268610	1					
ANR	8269881	Identifier	tag		8268610	1					
ANR	8269882	CompoundStatement		283:20:10615:10635	8268610	31					
ANR	8269883	IdentifierDeclStatement	const px_operator_definition_t * pod = & px_operator_definitions [ tag - 0x40 ] ;	569:20:19887:19985	8268610	0	True				
ANR	8269884	IdentifierDecl	* pod = & px_operator_definitions [ tag - 0x40 ]		8268610	0					
ANR	8269885	IdentifierDeclType	const px_operator_definition_t *		8268610	0					
ANR	8269886	Identifier	pod		8268610	1					
ANR	8269887	AssignmentExpression	* pod = & px_operator_definitions [ tag - 0x40 ]		8268610	2		=			
ANR	8269888	Identifier	pod		8268610	0					
ANR	8269889	UnaryOperationExpression	& px_operator_definitions [ tag - 0x40 ]		8268610	1					
ANR	8269890	UnaryOperator	&		8268610	0					
ANR	8269891	ArrayIndexing	px_operator_definitions [ tag - 0x40 ]		8268610	1					
ANR	8269892	Identifier	px_operator_definitions		8268610	0					
ANR	8269893	AdditiveExpression	tag - 0x40		8268610	1		-			
ANR	8269894	Identifier	tag		8268610	0					
ANR	8269895	PrimaryExpression	0x40		8268610	1					
ANR	8269896	IdentifierDeclStatement	int left = sp - st -> stack ;	571:20:20007:20032	8268610	1	True				
ANR	8269897	IdentifierDecl	left = sp - st -> stack		8268610	0					
ANR	8269898	IdentifierDeclType	int		8268610	0					
ANR	8269899	Identifier	left		8268610	1					
ANR	8269900	AssignmentExpression	left = sp - st -> stack		8268610	2		=			
ANR	8269901	Identifier	left		8268610	0					
ANR	8269902	AdditiveExpression	sp - st -> stack		8268610	1		-			
ANR	8269903	Identifier	sp		8268610	0					
ANR	8269904	PtrMemberAccess	st -> stack		8268610	1					
ANR	8269905	Identifier	st		8268610	0					
ANR	8269906	Identifier	stack		8268610	1					
ANR	8269907	IdentifierDeclStatement	const byte * pal = pod -> attrs ;	572:20:20054:20104	8268610	2	True				
ANR	8269908	IdentifierDecl	* pal = pod -> attrs		8268610	0					
ANR	8269909	IdentifierDeclType	const byte *		8268610	0					
ANR	8269910	Identifier	pal		8268610	1					
ANR	8269911	AssignmentExpression	* pal = pod -> attrs		8268610	2		=			
ANR	8269912	Identifier	pal		8268610	0					
ANR	8269913	PtrMemberAccess	pod -> attrs		8268610	1					
ANR	8269914	Identifier	pod		8268610	0					
ANR	8269915	Identifier	attrs		8268610	1					
ANR	8269916	IdentifierDeclStatement	px_value_t * * ppv = st -> args . pv ;	573:20:20126:20156	8268610	3	True				
ANR	8269917	IdentifierDecl	* * ppv = st -> args . pv		8268610	0					
ANR	8269918	IdentifierDeclType	px_value_t * *		8268610	0					
ANR	8269919	Identifier	ppv		8268610	1					
ANR	8269920	AssignmentExpression	* * ppv = st -> args . pv		8268610	2		=			
ANR	8269921	Identifier	ppv		8268610	0					
ANR	8269922	MemberAccess	st -> args . pv		8268610	1					
ANR	8269923	PtrMemberAccess	st -> args		8268610	0					
ANR	8269924	Identifier	st		8268610	0					
ANR	8269925	Identifier	args		8268610	1					
ANR	8269926	Identifier	pv		8268610	1					
ANR	8269927	IdentifierDeclStatement	bool required = true ;	574:20:20178:20198	8268610	4	True				
ANR	8269928	IdentifierDecl	required = true		8268610	0					
ANR	8269929	IdentifierDeclType	bool		8268610	0					
ANR	8269930	Identifier	required		8268610	1					
ANR	8269931	AssignmentExpression	required = true		8268610	2		=			
ANR	8269932	Identifier	true		8268610	0					
ANR	8269933	Identifier	true		8268610	1					
ANR	8269934	ExpressionStatement	code = 0	575:20:20220:20228	8268610	5	True				
ANR	8269935	AssignmentExpression	code = 0		8268610	0		=			
ANR	8269936	Identifier	code		8268610	0					
ANR	8269937	PrimaryExpression	0		8268610	1					
ANR	8269938	ForStatement	"for ( ; ; ++ pal , ++ ppv )"		8268610	6					
ANR	8269939	Expression	"++ pal , ++ ppv"	581:28:20507:20518	8268610	0	True				
ANR	8269940	UnaryExpression	++ pal		8268610	0					
ANR	8269941	IncDec	++		8268610	0					
ANR	8269942	Identifier	pal		8268610	1					
ANR	8269943	UnaryExpression	++ ppv		8268610	1					
ANR	8269944	IncDec	++		8268610	0					
ANR	8269945	Identifier	ppv		8268610	1					
ANR	8269946	CompoundStatement		292:24:11036:11046	8268610	1					
ANR	8269947	IdentifierDeclStatement	px_attribute_t attr = * pal ;	582:24:20547:20573	8268610	0	True				
ANR	8269948	IdentifierDecl	attr = * pal		8268610	0					
ANR	8269949	IdentifierDeclType	px_attribute_t		8268610	0					
ANR	8269950	Identifier	attr		8268610	1					
ANR	8269951	AssignmentExpression	attr = * pal		8268610	2		=			
ANR	8269952	Identifier	attr		8268610	0					
ANR	8269953	UnaryOperationExpression	* pal		8268610	1					
ANR	8269954	UnaryOperator	*		8268610	0					
ANR	8269955	Identifier	pal		8268610	1					
ANR	8269956	IdentifierDeclStatement	uint index ;	583:24:20599:20609	8268610	1	True				
ANR	8269957	IdentifierDecl	index		8268610	0					
ANR	8269958	IdentifierDeclType	uint		8268610	0					
ANR	8269959	Identifier	index		8268610	1					
ANR	8269960	IfStatement	if ( ! attr )		8268610	2					
ANR	8269961	Condition	! attr	585:28:20640:20644	8268610	0	True				
ANR	8269962	UnaryOperationExpression	! attr		8268610	0					
ANR	8269963	UnaryOperator	!		8268610	0					
ANR	8269964	Identifier	attr		8268610	1					
ANR	8269965	CompoundStatement		294:35:11084:11084	8268610	1					
ANR	8269966	IfStatement	if ( ! required )		8268610	0					
ANR	8269967	Condition	! required	589:32:20894:20902	8268610	0	True				
ANR	8269968	UnaryOperationExpression	! required		8268610	0					
ANR	8269969	UnaryOperator	!		8268610	0					
ANR	8269970	Identifier	required		8268610	1					
ANR	8269971	BreakStatement	break ;	590:32:20937:20942	8268610	1	True				
ANR	8269972	ExpressionStatement	required = false	591:28:20972:20988	8268610	1	True				
ANR	8269973	AssignmentExpression	required = false		8268610	0		=			
ANR	8269974	Identifier	required		8268610	0					
ANR	8269975	Identifier	false		8268610	1					
ANR	8269976	ExpressionStatement	-- ppv	592:28:21018:21023	8268610	2	True				
ANR	8269977	UnaryExpression	-- ppv		8268610	0					
ANR	8269978	IncDec	--		8268610	0					
ANR	8269979	Identifier	ppv		8268610	1					
ANR	8269980	ContinueStatement	continue ;	593:28:21084:21092	8268610	3	True				
ANR	8269981	IfStatement	if ( ( index = st -> attribute_indices [ attr ] ) == 0 )		8268610	3					
ANR	8269982	Condition	( index = st -> attribute_indices [ attr ] ) == 0	595:28:21148:21189	8268610	0	True				
ANR	8269983	EqualityExpression	( index = st -> attribute_indices [ attr ] ) == 0		8268610	0		==			
ANR	8269984	AssignmentExpression	index = st -> attribute_indices [ attr ]		8268610	0		=			
ANR	8269985	Identifier	index		8268610	0					
ANR	8269986	ArrayIndexing	st -> attribute_indices [ attr ]		8268610	1					
ANR	8269987	PtrMemberAccess	st -> attribute_indices		8268610	0					
ANR	8269988	Identifier	st		8268610	0					
ANR	8269989	Identifier	attribute_indices		8268610	1					
ANR	8269990	Identifier	attr		8268610	1					
ANR	8269991	PrimaryExpression	0		8268610	1					
ANR	8269992	CompoundStatement		304:72:11629:11629	8268610	1					
ANR	8269993	IfStatement	if ( required )		8268610	0					
ANR	8269994	Condition	required	596:32:21226:21233	8268610	0	True				
ANR	8269995	Identifier	required		8268610	0					
ANR	8269996	ExpressionStatement	code = gs_note_error ( errorMissingAttribute )	597:32:21268:21311	8268610	1	True				
ANR	8269997	AssignmentExpression	code = gs_note_error ( errorMissingAttribute )		8268610	0		=			
ANR	8269998	Identifier	code		8268610	0					
ANR	8269999	CallExpression	gs_note_error ( errorMissingAttribute )		8268610	1					
ANR	8270000	Callee	gs_note_error		8268610	0					
ANR	8270001	Identifier	gs_note_error		8268610	0					
ANR	8270002	ArgumentList	errorMissingAttribute		8268610	1					
ANR	8270003	Argument	errorMissingAttribute		8268610	0					
ANR	8270004	Identifier	errorMissingAttribute		8268610	0					
ANR	8270005	ElseStatement	else		8268610	0					
ANR	8270006	ExpressionStatement	* ppv = 0	599:32:21378:21386	8268610	0	True				
ANR	8270007	AssignmentExpression	* ppv = 0		8268610	0		=			
ANR	8270008	UnaryOperationExpression	* ppv		8268610	0					
ANR	8270009	UnaryOperator	*		8268610	0					
ANR	8270010	Identifier	ppv		8268610	1					
ANR	8270011	PrimaryExpression	0		8268610	1					
ANR	8270012	ElseStatement	else		8268610	0					
ANR	8270013	CompoundStatement		313:28:12134:12143	8268610	0					
ANR	8270014	IdentifierDeclStatement	px_value_t * pv = * ppv = & st -> stack [ index ] ;	601:28:21503:21544	8268610	0	True				
ANR	8270015	IdentifierDecl	* pv = * ppv = & st -> stack [ index ]		8268610	0					
ANR	8270016	IdentifierDeclType	px_value_t *		8268610	0					
ANR	8270017	Identifier	pv		8268610	1					
ANR	8270018	AssignmentExpression	* pv = * ppv = & st -> stack [ index ]		8268610	2		=			
ANR	8270019	Identifier	pv		8268610	0					
ANR	8270020	AssignmentExpression	* ppv = & st -> stack [ index ]		8268610	1		=			
ANR	8270021	UnaryOperationExpression	* ppv		8268610	0					
ANR	8270022	UnaryOperator	*		8268610	0					
ANR	8270023	Identifier	ppv		8268610	1					
ANR	8270024	UnaryOperationExpression	& st -> stack [ index ]		8268610	1					
ANR	8270025	UnaryOperator	&		8268610	0					
ANR	8270026	ArrayIndexing	st -> stack [ index ]		8268610	1					
ANR	8270027	PtrMemberAccess	st -> stack		8268610	0					
ANR	8270028	Identifier	st		8268610	0					
ANR	8270029	Identifier	stack		8268610	1					
ANR	8270030	Identifier	index		8268610	1					
ANR	8270031	IdentifierDeclStatement	const px_attr_value_type_t * pavt = & px_attr_value_types [ attr ] ;	602:28:21574:21667	8268610	1	True				
ANR	8270032	IdentifierDecl	* pavt = & px_attr_value_types [ attr ]		8268610	0					
ANR	8270033	IdentifierDeclType	const px_attr_value_type_t *		8268610	0					
ANR	8270034	Identifier	pavt		8268610	1					
ANR	8270035	AssignmentExpression	* pavt = & px_attr_value_types [ attr ]		8268610	2		=			
ANR	8270036	Identifier	pavt		8268610	0					
ANR	8270037	UnaryOperationExpression	& px_attr_value_types [ attr ]		8268610	1					
ANR	8270038	UnaryOperator	&		8268610	0					
ANR	8270039	ArrayIndexing	px_attr_value_types [ attr ]		8268610	1					
ANR	8270040	Identifier	px_attr_value_types		8268610	0					
ANR	8270041	Identifier	attr		8268610	1					
ANR	8270042	IdentifierDeclStatement	int acode ;	604:28:21697:21706	8268610	2	True				
ANR	8270043	IdentifierDecl	acode		8268610	0					
ANR	8270044	IdentifierDeclType	int		8268610	0					
ANR	8270045	Identifier	acode		8268610	1					
ANR	8270046	IfStatement	if ( ( ~pavt -> mask & pv -> type & ( pxd_structure | pxd_representation ) ) || ( pavt -> mask == ( pxd_scalar | pxd_ubyte ) && ( pv -> value . i < 0 || pv -> value . i > pavt -> limit ) ) )		8268610	3					
ANR	8270047	Condition	( ~pavt -> mask & pv -> type & ( pxd_structure | pxd_representation ) ) || ( pavt -> mask == ( pxd_scalar | pxd_ubyte ) && ( pv -> value . i < 0 || pv -> value . i > pavt -> limit ) )	606:32:21741:22029	8268610	0	True				
ANR	8270048	OrExpression	( ~pavt -> mask & pv -> type & ( pxd_structure | pxd_representation ) ) || ( pavt -> mask == ( pxd_scalar | pxd_ubyte ) && ( pv -> value . i < 0 || pv -> value . i > pavt -> limit ) )		8268610	0		||			
ANR	8270049	BitAndExpression	~pavt -> mask & pv -> type & ( pxd_structure | pxd_representation )		8268610	0		&			
ANR	8270050	PtrMemberAccess	~pavt -> mask		8268610	0					
ANR	8270051	Identifier	~pavt		8268610	0					
ANR	8270052	Identifier	mask		8268610	1					
ANR	8270053	BitAndExpression	pv -> type & ( pxd_structure | pxd_representation )		8268610	1		&			
ANR	8270054	PtrMemberAccess	pv -> type		8268610	0					
ANR	8270055	Identifier	pv		8268610	0					
ANR	8270056	Identifier	type		8268610	1					
ANR	8270057	InclusiveOrExpression	pxd_structure | pxd_representation		8268610	1		|			
ANR	8270058	Identifier	pxd_structure		8268610	0					
ANR	8270059	Identifier	pxd_representation		8268610	1					
ANR	8270060	AndExpression	pavt -> mask == ( pxd_scalar | pxd_ubyte ) && ( pv -> value . i < 0 || pv -> value . i > pavt -> limit )		8268610	1		&&			
ANR	8270061	EqualityExpression	pavt -> mask == ( pxd_scalar | pxd_ubyte )		8268610	0		==			
ANR	8270062	PtrMemberAccess	pavt -> mask		8268610	0					
ANR	8270063	Identifier	pavt		8268610	0					
ANR	8270064	Identifier	mask		8268610	1					
ANR	8270065	InclusiveOrExpression	pxd_scalar | pxd_ubyte		8268610	1		|			
ANR	8270066	Identifier	pxd_scalar		8268610	0					
ANR	8270067	Identifier	pxd_ubyte		8268610	1					
ANR	8270068	OrExpression	pv -> value . i < 0 || pv -> value . i > pavt -> limit		8268610	1		||			
ANR	8270069	RelationalExpression	pv -> value . i < 0		8268610	0		<			
ANR	8270070	MemberAccess	pv -> value . i		8268610	0					
ANR	8270071	PtrMemberAccess	pv -> value		8268610	0					
ANR	8270072	Identifier	pv		8268610	0					
ANR	8270073	Identifier	value		8268610	1					
ANR	8270074	Identifier	i		8268610	1					
ANR	8270075	PrimaryExpression	0		8268610	1					
ANR	8270076	RelationalExpression	pv -> value . i > pavt -> limit		8268610	1		>			
ANR	8270077	MemberAccess	pv -> value . i		8268610	0					
ANR	8270078	PtrMemberAccess	pv -> value		8268610	0					
ANR	8270079	Identifier	pv		8268610	0					
ANR	8270080	Identifier	value		8268610	1					
ANR	8270081	Identifier	i		8268610	1					
ANR	8270082	PtrMemberAccess	pavt -> limit		8268610	1					
ANR	8270083	Identifier	pavt		8268610	0					
ANR	8270084	Identifier	limit		8268610	1					
ANR	8270085	CompoundStatement		320:34:12502:12502	8268610	1					
ANR	8270086	IfStatement	if ( code >= 0 )		8268610	0					
ANR	8270087	Condition	code >= 0	612:36:22103:22111	8268610	0	True				
ANR	8270088	RelationalExpression	code >= 0		8268610	0		>=			
ANR	8270089	Identifier	code		8268610	0					
ANR	8270090	PrimaryExpression	0		8268610	1					
ANR	8270091	ExpressionStatement	code = gs_note_error ( errorIllegalAttributeDataType )	613:36:22150:22282	8268610	1	True				
ANR	8270092	AssignmentExpression	code = gs_note_error ( errorIllegalAttributeDataType )		8268610	0		=			
ANR	8270093	Identifier	code		8268610	0					
ANR	8270094	CallExpression	gs_note_error ( errorIllegalAttributeDataType )		8268610	1					
ANR	8270095	Callee	gs_note_error		8268610	0					
ANR	8270096	Identifier	gs_note_error		8268610	0					
ANR	8270097	ArgumentList	errorIllegalAttributeDataType		8268610	1					
ANR	8270098	Argument	errorIllegalAttributeDataType		8268610	0					
ANR	8270099	Identifier	errorIllegalAttributeDataType		8268610	0					
ANR	8270100	IfStatement	if ( pavt -> proc != 0 && ( acode = ( * pavt -> proc ) ( pv ) ) < 0 )		8268610	4					
ANR	8270101	Condition	pavt -> proc != 0 && ( acode = ( * pavt -> proc ) ( pv ) ) < 0	617:32:22346:22428	8268610	0	True				
ANR	8270102	AndExpression	pavt -> proc != 0 && ( acode = ( * pavt -> proc ) ( pv ) ) < 0		8268610	0		&&			
ANR	8270103	EqualityExpression	pavt -> proc != 0		8268610	0		!=			
ANR	8270104	PtrMemberAccess	pavt -> proc		8268610	0					
ANR	8270105	Identifier	pavt		8268610	0					
ANR	8270106	Identifier	proc		8268610	1					
ANR	8270107	PrimaryExpression	0		8268610	1					
ANR	8270108	RelationalExpression	( acode = ( * pavt -> proc ) ( pv ) ) < 0		8268610	1		<			
ANR	8270109	AssignmentExpression	acode = ( * pavt -> proc ) ( pv )		8268610	0		=			
ANR	8270110	Identifier	acode		8268610	0					
ANR	8270111	CallExpression	( * pavt -> proc ) ( pv )		8268610	1					
ANR	8270112	Callee	* pavt -> proc		8268610	0					
ANR	8270113	UnaryOperationExpression	* pavt -> proc		8268610	0					
ANR	8270114	UnaryOperator	*		8268610	0					
ANR	8270115	PtrMemberAccess	pavt -> proc		8268610	1					
ANR	8270116	Identifier	pavt		8268610	0					
ANR	8270117	Identifier	proc		8268610	1					
ANR	8270118	ArgumentList	pv		8268610	1					
ANR	8270119	Argument	pv		8268610	0					
ANR	8270120	Identifier	pv		8268610	0					
ANR	8270121	PrimaryExpression	0		8268610	1					
ANR	8270122	CompoundStatement		327:69:12868:12868	8268610	1					
ANR	8270123	IfStatement	if ( code >= 0 )		8268610	0					
ANR	8270124	Condition	code >= 0	619:36:22469:22477	8268610	0	True				
ANR	8270125	RelationalExpression	code >= 0		8268610	0		>=			
ANR	8270126	Identifier	code		8268610	0					
ANR	8270127	PrimaryExpression	0		8268610	1					
ANR	8270128	ExpressionStatement	code = acode	620:36:22516:22528	8268610	1	True				
ANR	8270129	AssignmentExpression	code = acode		8268610	0		=			
ANR	8270130	Identifier	code		8268610	0					
ANR	8270131	Identifier	acode		8268610	1					
ANR	8270132	ExpressionStatement	-- left	622:28:22588:22594	8268610	5	True				
ANR	8270133	UnaryExpression	-- left		8268610	0					
ANR	8270134	IncDec	--		8268610	0					
ANR	8270135	Identifier	left		8268610	1					
ANR	8270136	IfStatement	if ( left )		8268610	7					
ANR	8270137	Condition	left	627:24:22740:22743	8268610	0	True				
ANR	8270138	Identifier	left		8268610	0					
ANR	8270139	ExpressionStatement	code = gs_note_error ( errorIllegalAttribute )	628:24:22770:22813	8268610	1	True				
ANR	8270140	AssignmentExpression	code = gs_note_error ( errorIllegalAttribute )		8268610	0		=			
ANR	8270141	Identifier	code		8268610	0					
ANR	8270142	CallExpression	gs_note_error ( errorIllegalAttribute )		8268610	1					
ANR	8270143	Callee	gs_note_error		8268610	0					
ANR	8270144	Identifier	gs_note_error		8268610	0					
ANR	8270145	ArgumentList	errorIllegalAttribute		8268610	1					
ANR	8270146	Argument	errorIllegalAttribute		8268610	0					
ANR	8270147	Identifier	errorIllegalAttribute		8268610	0					
ANR	8270148	IfStatement	if ( code >= 0 )		8268610	8					
ANR	8270149	Condition	code >= 0	629:24:22839:22847	8268610	0	True				
ANR	8270150	RelationalExpression	code >= 0		8268610	0		>=			
ANR	8270151	Identifier	code		8268610	0					
ANR	8270152	PrimaryExpression	0		8268610	1					
ANR	8270153	CompoundStatement		338:35:13287:13287	8268610	1					
ANR	8270154	ExpressionStatement	st -> args . source . phase = 0	630:24:22876:22901	8268610	0	True				
ANR	8270155	AssignmentExpression	st -> args . source . phase = 0		8268610	0		=			
ANR	8270156	MemberAccess	st -> args . source . phase		8268610	0					
ANR	8270157	MemberAccess	st -> args . source		8268610	0					
ANR	8270158	PtrMemberAccess	st -> args		8268610	0					
ANR	8270159	Identifier	st		8268610	0					
ANR	8270160	Identifier	args		8268610	1					
ANR	8270161	Identifier	source		8268610	1					
ANR	8270162	Identifier	phase		8268610	1					
ANR	8270163	PrimaryExpression	0		8268610	1					
ANR	8270164	ExpressionStatement	"code = ( * pod -> proc ) ( & st -> args , pxs )"	631:24:22927:22963	8268610	1	True				
ANR	8270165	AssignmentExpression	"code = ( * pod -> proc ) ( & st -> args , pxs )"		8268610	0		=			
ANR	8270166	Identifier	code		8268610	0					
ANR	8270167	CallExpression	"( * pod -> proc ) ( & st -> args , pxs )"		8268610	1					
ANR	8270168	Callee	* pod -> proc		8268610	0					
ANR	8270169	UnaryOperationExpression	* pod -> proc		8268610	0					
ANR	8270170	UnaryOperator	*		8268610	0					
ANR	8270171	PtrMemberAccess	pod -> proc		8268610	1					
ANR	8270172	Identifier	pod		8268610	0					
ANR	8270173	Identifier	proc		8268610	1					
ANR	8270174	ArgumentList	& st -> args		8268610	1					
ANR	8270175	Argument	& st -> args		8268610	0					
ANR	8270176	UnaryOperationExpression	& st -> args		8268610	0					
ANR	8270177	UnaryOperator	&		8268610	0					
ANR	8270178	PtrMemberAccess	st -> args		8268610	1					
ANR	8270179	Identifier	st		8268610	0					
ANR	8270180	Identifier	args		8268610	1					
ANR	8270181	Argument	pxs		8268610	1					
ANR	8270182	Identifier	pxs		8268610	0					
ANR	8270183	IfStatement	if ( code == gs_error_Remap_Color )		8268610	2					
ANR	8270184	Condition	code == gs_error_Remap_Color	636:28:23274:23301	8268610	0	True				
ANR	8270185	EqualityExpression	code == gs_error_Remap_Color		8268610	0		==			
ANR	8270186	Identifier	code		8268610	0					
ANR	8270187	Identifier	gs_error_Remap_Color		8268610	1					
ANR	8270188	CompoundStatement		345:58:13741:13741	8268610	1					
ANR	8270189	ExpressionStatement	code = px_high_level_pattern ( pxs -> pgs )	637:28:23334:23372	8268610	0	True				
ANR	8270190	AssignmentExpression	code = px_high_level_pattern ( pxs -> pgs )		8268610	0		=			
ANR	8270191	Identifier	code		8268610	0					
ANR	8270192	CallExpression	px_high_level_pattern ( pxs -> pgs )		8268610	1					
ANR	8270193	Callee	px_high_level_pattern		8268610	0					
ANR	8270194	Identifier	px_high_level_pattern		8268610	0					
ANR	8270195	ArgumentList	pxs -> pgs		8268610	1					
ANR	8270196	Argument	pxs -> pgs		8268610	0					
ANR	8270197	PtrMemberAccess	pxs -> pgs		8268610	0					
ANR	8270198	Identifier	pxs		8268610	0					
ANR	8270199	Identifier	pgs		8268610	1					
ANR	8270200	IfStatement	if ( code < 0 )		8268610	1					
ANR	8270201	Condition	code < 0	638:32:23406:23413	8268610	0	True				
ANR	8270202	RelationalExpression	code < 0		8268610	0		<			
ANR	8270203	Identifier	code		8268610	0					
ANR	8270204	PrimaryExpression	0		8268610	1					
ANR	8270205	GotoStatement	goto x ;	639:32:23448:23454	8268610	1	True				
ANR	8270206	Identifier	x		8268610	0					
ANR	8270207	ExpressionStatement	"code = ( * pod -> proc ) ( & st -> args , pxs )"	640:28:23484:23520	8268610	2	True				
ANR	8270208	AssignmentExpression	"code = ( * pod -> proc ) ( & st -> args , pxs )"		8268610	0		=			
ANR	8270209	Identifier	code		8268610	0					
ANR	8270210	CallExpression	"( * pod -> proc ) ( & st -> args , pxs )"		8268610	1					
ANR	8270211	Callee	* pod -> proc		8268610	0					
ANR	8270212	UnaryOperationExpression	* pod -> proc		8268610	0					
ANR	8270213	UnaryOperator	*		8268610	0					
ANR	8270214	PtrMemberAccess	pod -> proc		8268610	1					
ANR	8270215	Identifier	pod		8268610	0					
ANR	8270216	Identifier	proc		8268610	1					
ANR	8270217	ArgumentList	& st -> args		8268610	1					
ANR	8270218	Argument	& st -> args		8268610	0					
ANR	8270219	UnaryOperationExpression	& st -> args		8268610	0					
ANR	8270220	UnaryOperator	&		8268610	0					
ANR	8270221	PtrMemberAccess	st -> args		8268610	1					
ANR	8270222	Identifier	st		8268610	0					
ANR	8270223	Identifier	args		8268610	1					
ANR	8270224	Argument	pxs		8268610	1					
ANR	8270225	Identifier	pxs		8268610	0					
ANR	8270226	IfStatement	if ( code < 0 )		8268610	9					
ANR	8270227	Condition	code < 0	643:24:23594:23601	8268610	0	True				
ANR	8270228	RelationalExpression	code < 0		8268610	0		<			
ANR	8270229	Identifier	code		8268610	0					
ANR	8270230	PrimaryExpression	0		8268610	1					
ANR	8270231	GotoStatement	goto x ;	644:24:23628:23634	8268610	1	True				
ANR	8270232	Identifier	x		8268610	0					
ANR	8270233	IfStatement	if ( code == pxNeedData )		8268610	10					
ANR	8270234	Condition	code == pxNeedData	646:24:23733:23750	8268610	0	True				
ANR	8270235	EqualityExpression	code == pxNeedData		8268610	0		==			
ANR	8270236	Identifier	code		8268610	0					
ANR	8270237	Identifier	pxNeedData		8268610	1					
ANR	8270238	CompoundStatement		355:44:14190:14190	8268610	1					
ANR	8270239	IfStatement	if ( ! pxs -> data_source_open )		8268610	0					
ANR	8270240	Condition	! pxs -> data_source_open	647:28:23783:23804	8268610	0	True				
ANR	8270241	UnaryOperationExpression	! pxs -> data_source_open		8268610	0					
ANR	8270242	UnaryOperator	!		8268610	0					
ANR	8270243	PtrMemberAccess	pxs -> data_source_open		8268610	1					
ANR	8270244	Identifier	pxs		8268610	0					
ANR	8270245	Identifier	data_source_open		8268610	1					
ANR	8270246	CompoundStatement		356:52:14244:14244	8268610	1					
ANR	8270247	ExpressionStatement	code = gs_note_error ( errorDataSourceNotOpen )	648:28:23837:23881	8268610	0	True				
ANR	8270248	AssignmentExpression	code = gs_note_error ( errorDataSourceNotOpen )		8268610	0		=			
ANR	8270249	Identifier	code		8268610	0					
ANR	8270250	CallExpression	gs_note_error ( errorDataSourceNotOpen )		8268610	1					
ANR	8270251	Callee	gs_note_error		8268610	0					
ANR	8270252	Identifier	gs_note_error		8268610	0					
ANR	8270253	ArgumentList	errorDataSourceNotOpen		8268610	1					
ANR	8270254	Argument	errorDataSourceNotOpen		8268610	0					
ANR	8270255	Identifier	errorDataSourceNotOpen		8268610	0					
ANR	8270256	GotoStatement	goto x ;	649:28:23911:23917	8268610	1	True				
ANR	8270257	Identifier	x		8268610	0					
ANR	8270258	ExpressionStatement	st -> data_proc = pod -> proc	651:24:23969:23994	8268610	1	True				
ANR	8270259	AssignmentExpression	st -> data_proc = pod -> proc		8268610	0		=			
ANR	8270260	PtrMemberAccess	st -> data_proc		8268610	0					
ANR	8270261	Identifier	st		8268610	0					
ANR	8270262	Identifier	data_proc		8268610	1					
ANR	8270263	PtrMemberAccess	pod -> proc		8268610	1					
ANR	8270264	Identifier	pod		8268610	0					
ANR	8270265	Identifier	proc		8268610	1					
ANR	8270266	ExpressionStatement	++ p	652:24:24020:24023	8268610	2	True				
ANR	8270267	UnaryExpression	++ p		8268610	0					
ANR	8270268	IncDec	++		8268610	0					
ANR	8270269	Identifier	p		8268610	1					
ANR	8270270	GotoStatement	goto top ;	653:24:24049:24057	8268610	3	True				
ANR	8270271	Identifier	top		8268610	0					
ANR	8270272	ExpressionStatement	clear_stack ( )	656:16:24115:24128	8268610	32	True				
ANR	8270273	CallExpression	clear_stack ( )		8268610	0					
ANR	8270274	Callee	clear_stack		8268610	0					
ANR	8270275	Identifier	clear_stack		8268610	0					
ANR	8270276	ArgumentList			8268610	1					
ANR	8270277	ExpressionStatement	++ p	657:16:24146:24149	8268610	33	True				
ANR	8270278	UnaryExpression	++ p		8268610	0					
ANR	8270279	IncDec	++		8268610	0					
ANR	8270280	Identifier	p		8268610	1					
ANR	8270281	ContinueStatement	continue ;	658:16:24167:24175	8268610	34	True				
ANR	8270282	Label	case 24 :	659:12:24189:24196	8268610	35	True				
ANR	8270283	ExpressionStatement	sp [ 1 ] . type = pxd_scalar	660:16:24214:24237	8268610	36	True				
ANR	8270284	AssignmentExpression	sp [ 1 ] . type = pxd_scalar		8268610	0		=			
ANR	8270285	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8270286	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270287	Identifier	sp		8268610	0					
ANR	8270288	PrimaryExpression	1		8268610	1					
ANR	8270289	Identifier	type		8268610	1					
ANR	8270290	Identifier	pxd_scalar		8268610	1					
ANR	8270291	ExpressionStatement	count = 1	661:16:24255:24264	8268610	37	True				
ANR	8270292	AssignmentExpression	count = 1		8268610	0		=			
ANR	8270293	Identifier	count		8268610	0					
ANR	8270294	PrimaryExpression	1		8268610	1					
ANR	8270295	GotoStatement	goto data ;	662:16:24282:24291	8268610	38	True				
ANR	8270296	Identifier	data		8268610	0					
ANR	8270297	Label	case 26 :	663:12:24305:24312	8268610	39	True				
ANR	8270298	ExpressionStatement	sp [ 1 ] . type = pxd_xy	664:16:24330:24349	8268610	40	True				
ANR	8270299	AssignmentExpression	sp [ 1 ] . type = pxd_xy		8268610	0		=			
ANR	8270300	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8270301	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270302	Identifier	sp		8268610	0					
ANR	8270303	PrimaryExpression	1		8268610	1					
ANR	8270304	Identifier	type		8268610	1					
ANR	8270305	Identifier	pxd_xy		8268610	1					
ANR	8270306	ExpressionStatement	count = 2	665:16:24367:24376	8268610	41	True				
ANR	8270307	AssignmentExpression	count = 2		8268610	0		=			
ANR	8270308	Identifier	count		8268610	0					
ANR	8270309	PrimaryExpression	2		8268610	1					
ANR	8270310	GotoStatement	goto data ;	666:16:24394:24403	8268610	42	True				
ANR	8270311	Identifier	data		8268610	0					
ANR	8270312	Label	case 28 :	667:12:24417:24424	8268610	43	True				
ANR	8270313	ExpressionStatement	sp [ 1 ] . type = pxd_box	668:16:24442:24462	8268610	44	True				
ANR	8270314	AssignmentExpression	sp [ 1 ] . type = pxd_box		8268610	0		=			
ANR	8270315	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8270316	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270317	Identifier	sp		8268610	0					
ANR	8270318	PrimaryExpression	1		8268610	1					
ANR	8270319	Identifier	type		8268610	1					
ANR	8270320	Identifier	pxd_box		8268610	1					
ANR	8270321	ExpressionStatement	count = 4	669:16:24480:24489	8268610	45	True				
ANR	8270322	AssignmentExpression	count = 4		8268610	0		=			
ANR	8270323	Identifier	count		8268610	0					
ANR	8270324	PrimaryExpression	4		8268610	1					
ANR	8270325	GotoStatement	goto data ;	670:16:24507:24516	8268610	46	True				
ANR	8270326	Identifier	data		8268610	0					
ANR	8270327	Label	data :	672:14:24582:24586	8268610	47	True				
ANR	8270328	Identifier	data		8268610	0					
ANR	8270329	CompoundStatement		382:20:15046:15051	8268610	48					
ANR	8270330	IdentifierDeclStatement	int i ;	673:20:24609:24614	8268610	0	True				
ANR	8270331	IdentifierDecl	i		8268610	0					
ANR	8270332	IdentifierDeclType	int		8268610	0					
ANR	8270333	Identifier	i		8268610	1					
ANR	8270334	IfStatement	if ( sp == stack_limit )		8268610	1					
ANR	8270335	Condition	sp == stack_limit	675:24:24641:24657	8268610	0	True				
ANR	8270336	EqualityExpression	sp == stack_limit		8268610	0		==			
ANR	8270337	Identifier	sp		8268610	0					
ANR	8270338	Identifier	stack_limit		8268610	1					
ANR	8270339	CompoundStatement		384:43:15097:15097	8268610	1					
ANR	8270340	ExpressionStatement	code = gs_note_error ( errorInternalOverflow )	676:24:24686:24729	8268610	0	True				
ANR	8270341	AssignmentExpression	code = gs_note_error ( errorInternalOverflow )		8268610	0		=			
ANR	8270342	Identifier	code		8268610	0					
ANR	8270343	CallExpression	gs_note_error ( errorInternalOverflow )		8268610	1					
ANR	8270344	Callee	gs_note_error		8268610	0					
ANR	8270345	Identifier	gs_note_error		8268610	0					
ANR	8270346	ArgumentList	errorInternalOverflow		8268610	1					
ANR	8270347	Argument	errorInternalOverflow		8268610	0					
ANR	8270348	Identifier	errorInternalOverflow		8268610	0					
ANR	8270349	GotoStatement	goto x ;	677:24:24755:24761	8268610	1	True				
ANR	8270350	Identifier	x		8268610	0					
ANR	8270351	ExpressionStatement	++ sp	679:20:24805:24809	8268610	2	True				
ANR	8270352	UnaryExpression	++ sp		8268610	0					
ANR	8270353	IncDec	++		8268610	0					
ANR	8270354	Identifier	sp		8268610	1					
ANR	8270355	ExpressionStatement	sp -> attribute = 0	680:20:24831:24848	8268610	3	True				
ANR	8270356	AssignmentExpression	sp -> attribute = 0		8268610	0		=			
ANR	8270357	PtrMemberAccess	sp -> attribute		8268610	0					
ANR	8270358	Identifier	sp		8268610	0					
ANR	8270359	Identifier	attribute		8268610	1					
ANR	8270360	PrimaryExpression	0		8268610	1					
ANR	8270361	ExpressionStatement	p += 2	681:20:24870:24876	8268610	4	True				
ANR	8270362	AssignmentExpression	p += 2		8268610	0		+=			
ANR	8270363	Identifier	p		8268610	0					
ANR	8270364	PrimaryExpression	2		8268610	1					
ANR	8270365	Statement	define	683:3:24894:24899	8268610	5	True				
ANR	8270366	Statement	trace_scalar	683:10:24901:24912	8268610	6	True				
ANR	8270367	Statement	(	683:22:24913:24913	8268610	7	True				
ANR	8270368	Statement	mem	683:23:24914:24916	8268610	8	True				
ANR	8270369	Statement	","	683:26:24917:24917	8268610	9	True				
ANR	8270370	Statement	format	683:28:24919:24924	8268610	10	True				
ANR	8270371	Statement	","	683:34:24925:24925	8268610	11	True				
ANR	8270372	Statement	cast	683:36:24927:24930	8268610	12	True				
ANR	8270373	Statement	","	683:40:24931:24931	8268610	13	True				
ANR	8270374	Statement	alt	683:42:24933:24935	8268610	14	True				
ANR	8270375	Statement	)	683:45:24936:24936	8268610	15	True				
ANR	8270376	IfStatement	if ( gs_debug_c ( 'i' ) )		8268610	16					
ANR	8270377	Condition	gs_debug_c ( 'i' )	684:23:24962:24976	8268610	0	True				
ANR	8270378	CallExpression	gs_debug_c ( 'i' )		8268610	0					
ANR	8270379	Callee	gs_debug_c		8268610	0					
ANR	8270380	Identifier	gs_debug_c		8268610	0					
ANR	8270381	ArgumentList	'i'		8268610	1					
ANR	8270382	Argument	'i'		8268610	0					
ANR	8270383	PrimaryExpression	'i'		8268610	0					
ANR	8270384	Statement	trace_data	685:20:25001:25010	8268610	1	True				
ANR	8270385	Statement	(	685:30:25011:25011	8268610	17	True				
ANR	8270386	Statement	mem	685:31:25012:25014	8268610	18	True				
ANR	8270387	Statement	","	685:34:25015:25015	8268610	19	True				
ANR	8270388	Statement	format	685:36:25017:25022	8268610	20	True				
ANR	8270389	Statement	","	685:42:25023:25023	8268610	21	True				
ANR	8270390	Statement	cast	685:44:25025:25028	8268610	22	True				
ANR	8270391	Statement	","	685:48:25029:25029	8268610	23	True				
ANR	8270392	Statement	sp	685:50:25031:25032	8268610	24	True				
ANR	8270393	Statement	->	685:52:25033:25034	8268610	25	True				
ANR	8270394	Statement	value	685:54:25035:25039	8268610	26	True				
ANR	8270395	Statement	.	685:59:25040:25040	8268610	27	True				
ANR	8270396	Statement	alt	685:60:25041:25043	8268610	28	True				
ANR	8270397	Statement	","	685:63:25044:25044	8268610	29	True				
ANR	8270398	Statement	count	685:65:25046:25050	8268610	30	True				
ANR	8270399	Statement	)	685:70:25051:25051	8268610	31	True				
ANR	8270400	SwitchStatement	switch ( tag & 7 )		8268610	32					
ANR	8270401	Condition	tag & 7	689:28:25152:25158	8268610	0	True				
ANR	8270402	BitAndExpression	tag & 7		8268610	0		&			
ANR	8270403	Identifier	tag		8268610	0					
ANR	8270404	PrimaryExpression	7		8268610	1					
ANR	8270405	CompoundStatement		398:37:15598:15598	8268610	1					
ANR	8270406	Statement	case	690:24:25187:25190	8268610	0	True				
ANR	8270407	Statement	pxt_ubyte	690:29:25192:25200	8268610	1	True				
ANR	8270408	Statement	&	690:39:25202:25202	8268610	2	True				
ANR	8270409	Label	7 :	690:41:25204:25205	8268610	3	True				
ANR	8270410	ExpressionStatement	sp -> type |= pxd_ubyte	691:28:25235:25256	8268610	4	True				
ANR	8270411	AssignmentExpression	sp -> type |= pxd_ubyte		8268610	0		|=			
ANR	8270412	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270413	Identifier	sp		8268610	0					
ANR	8270414	Identifier	type		8268610	1					
ANR	8270415	Identifier	pxd_ubyte		8268610	1					
ANR	8270416	ForStatement	"for ( i = 0 ; i < count ; ++ p , ++ i )"		8268610	5					
ANR	8270417	ForInit	i = 0 ;	692:33:25291:25296	8268610	0	True				
ANR	8270418	AssignmentExpression	i = 0		8268610	0		=			
ANR	8270419	Identifier	i		8268610	0					
ANR	8270420	PrimaryExpression	0		8268610	1					
ANR	8270421	Condition	i < count	692:40:25298:25306	8268610	1	True				
ANR	8270422	RelationalExpression	i < count		8268610	0		<			
ANR	8270423	Identifier	i		8268610	0					
ANR	8270424	Identifier	count		8268610	1					
ANR	8270425	Expression	"++ p , ++ i"	692:51:25309:25316	8268610	2	True				
ANR	8270426	UnaryExpression	++ p		8268610	0					
ANR	8270427	IncDec	++		8268610	0					
ANR	8270428	Identifier	p		8268610	1					
ANR	8270429	UnaryExpression	++ i		8268610	1					
ANR	8270430	IncDec	++		8268610	0					
ANR	8270431	Identifier	i		8268610	1					
ANR	8270432	ExpressionStatement	sp -> value . ia [ i ] = * p	693:32:25351:25371	8268610	3	True				
ANR	8270433	AssignmentExpression	sp -> value . ia [ i ] = * p		8268610	0		=			
ANR	8270434	ArrayIndexing	sp -> value . ia [ i ]		8268610	0					
ANR	8270435	MemberAccess	sp -> value . ia		8268610	0					
ANR	8270436	PtrMemberAccess	sp -> value		8268610	0					
ANR	8270437	Identifier	sp		8268610	0					
ANR	8270438	Identifier	value		8268610	1					
ANR	8270439	Identifier	ia		8268610	1					
ANR	8270440	Identifier	i		8268610	1					
ANR	8270441	UnaryOperationExpression	* p		8268610	1					
ANR	8270442	UnaryOperator	*		8268610	0					
ANR	8270443	Identifier	p		8268610	1					
ANR	8270444	Label	dux :	694:26:25399:25402	8268610	6	True				
ANR	8270445	Identifier	dux		8268610	0					
ANR	8270446	ExpressionStatement	"trace_scalar ( pxs -> memory , "" %lu"" , ulong , ia )"	694:30:25403:25488	8268610	7	True				
ANR	8270447	CallExpression	"trace_scalar ( pxs -> memory , "" %lu"" , ulong , ia )"		8268610	0					
ANR	8270448	Callee	trace_scalar		8268610	0					
ANR	8270449	Identifier	trace_scalar		8268610	0					
ANR	8270450	ArgumentList	pxs -> memory		8268610	1					
ANR	8270451	Argument	pxs -> memory		8268610	0					
ANR	8270452	PtrMemberAccess	pxs -> memory		8268610	0					
ANR	8270453	Identifier	pxs		8268610	0					
ANR	8270454	Identifier	memory		8268610	1					
ANR	8270455	Argument	""" %lu"""		8268610	1					
ANR	8270456	PrimaryExpression	""" %lu"""		8268610	0					
ANR	8270457	Argument	ulong		8268610	2					
ANR	8270458	Identifier	ulong		8268610	0					
ANR	8270459	Argument	ia		8268610	3					
ANR	8270460	Identifier	ia		8268610	0					
ANR	8270461	ExpressionStatement	-- p	696:28:25518:25521	8268610	8	True				
ANR	8270462	UnaryExpression	-- p		8268610	0					
ANR	8270463	IncDec	--		8268610	0					
ANR	8270464	Identifier	p		8268610	1					
ANR	8270465	ContinueStatement	continue ;	697:28:25551:25559	8268610	9	True				
ANR	8270466	Statement	case	698:24:25585:25588	8268610	10	True				
ANR	8270467	Statement	pxt_uint16	698:29:25590:25599	8268610	11	True				
ANR	8270468	Statement	&	698:40:25601:25601	8268610	12	True				
ANR	8270469	Label	7 :	698:42:25603:25604	8268610	13	True				
ANR	8270470	ExpressionStatement	sp -> type |= pxd_uint16	699:28:25634:25656	8268610	14	True				
ANR	8270471	AssignmentExpression	sp -> type |= pxd_uint16		8268610	0		|=			
ANR	8270472	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270473	Identifier	sp		8268610	0					
ANR	8270474	Identifier	type		8268610	1					
ANR	8270475	Identifier	pxd_uint16		8268610	1					
ANR	8270476	ForStatement	"for ( i = 0 ; i < count ; p += 2 , ++ i )"		8268610	15					
ANR	8270477	ForInit	i = 0 ;	700:33:25691:25696	8268610	0	True				
ANR	8270478	AssignmentExpression	i = 0		8268610	0		=			
ANR	8270479	Identifier	i		8268610	0					
ANR	8270480	PrimaryExpression	0		8268610	1					
ANR	8270481	Condition	i < count	700:40:25698:25706	8268610	1	True				
ANR	8270482	RelationalExpression	i < count		8268610	0		<			
ANR	8270483	Identifier	i		8268610	0					
ANR	8270484	Identifier	count		8268610	1					
ANR	8270485	Expression	"p += 2 , ++ i"	700:51:25709:25719	8268610	2	True				
ANR	8270486	AssignmentExpression	p += 2		8268610	0		+=			
ANR	8270487	Identifier	p		8268610	0					
ANR	8270488	PrimaryExpression	2		8268610	1					
ANR	8270489	UnaryExpression	++ i		8268610	1					
ANR	8270490	IncDec	++		8268610	0					
ANR	8270491	Identifier	i		8268610	1					
ANR	8270492	ExpressionStatement	"sp -> value . ia [ i ] = get_uint16 ( st , p )"	701:32:25754:25789	8268610	3	True				
ANR	8270493	AssignmentExpression	"sp -> value . ia [ i ] = get_uint16 ( st , p )"		8268610	0		=			
ANR	8270494	ArrayIndexing	sp -> value . ia [ i ]		8268610	0					
ANR	8270495	MemberAccess	sp -> value . ia		8268610	0					
ANR	8270496	PtrMemberAccess	sp -> value		8268610	0					
ANR	8270497	Identifier	sp		8268610	0					
ANR	8270498	Identifier	value		8268610	1					
ANR	8270499	Identifier	ia		8268610	1					
ANR	8270500	Identifier	i		8268610	1					
ANR	8270501	CallExpression	"get_uint16 ( st , p )"		8268610	1					
ANR	8270502	Callee	get_uint16		8268610	0					
ANR	8270503	Identifier	get_uint16		8268610	0					
ANR	8270504	ArgumentList	st		8268610	1					
ANR	8270505	Argument	st		8268610	0					
ANR	8270506	Identifier	st		8268610	0					
ANR	8270507	Argument	p		8268610	1					
ANR	8270508	Identifier	p		8268610	0					
ANR	8270509	GotoStatement	goto dux ;	702:28:25819:25827	8268610	16	True				
ANR	8270510	Identifier	dux		8268610	0					
ANR	8270511	Statement	case	703:24:25853:25856	8268610	17	True				
ANR	8270512	Statement	pxt_uint32	703:29:25858:25867	8268610	18	True				
ANR	8270513	Statement	&	703:40:25869:25869	8268610	19	True				
ANR	8270514	Label	7 :	703:42:25871:25872	8268610	20	True				
ANR	8270515	ExpressionStatement	sp -> type |= pxd_uint32	704:28:25902:25924	8268610	21	True				
ANR	8270516	AssignmentExpression	sp -> type |= pxd_uint32		8268610	0		|=			
ANR	8270517	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270518	Identifier	sp		8268610	0					
ANR	8270519	Identifier	type		8268610	1					
ANR	8270520	Identifier	pxd_uint32		8268610	1					
ANR	8270521	ForStatement	"for ( i = 0 ; i < count ; p += 4 , ++ i )"		8268610	22					
ANR	8270522	ForInit	i = 0 ;	705:33:25959:25964	8268610	0	True				
ANR	8270523	AssignmentExpression	i = 0		8268610	0		=			
ANR	8270524	Identifier	i		8268610	0					
ANR	8270525	PrimaryExpression	0		8268610	1					
ANR	8270526	Condition	i < count	705:40:25966:25974	8268610	1	True				
ANR	8270527	RelationalExpression	i < count		8268610	0		<			
ANR	8270528	Identifier	i		8268610	0					
ANR	8270529	Identifier	count		8268610	1					
ANR	8270530	Expression	"p += 4 , ++ i"	705:51:25977:25987	8268610	2	True				
ANR	8270531	AssignmentExpression	p += 4		8268610	0		+=			
ANR	8270532	Identifier	p		8268610	0					
ANR	8270533	PrimaryExpression	4		8268610	1					
ANR	8270534	UnaryExpression	++ i		8268610	1					
ANR	8270535	IncDec	++		8268610	0					
ANR	8270536	Identifier	i		8268610	1					
ANR	8270537	ExpressionStatement	"sp -> value . ia [ i ] = get_uint32 ( st , p )"	706:32:26022:26057	8268610	3	True				
ANR	8270538	AssignmentExpression	"sp -> value . ia [ i ] = get_uint32 ( st , p )"		8268610	0		=			
ANR	8270539	ArrayIndexing	sp -> value . ia [ i ]		8268610	0					
ANR	8270540	MemberAccess	sp -> value . ia		8268610	0					
ANR	8270541	PtrMemberAccess	sp -> value		8268610	0					
ANR	8270542	Identifier	sp		8268610	0					
ANR	8270543	Identifier	value		8268610	1					
ANR	8270544	Identifier	ia		8268610	1					
ANR	8270545	Identifier	i		8268610	1					
ANR	8270546	CallExpression	"get_uint32 ( st , p )"		8268610	1					
ANR	8270547	Callee	get_uint32		8268610	0					
ANR	8270548	Identifier	get_uint32		8268610	0					
ANR	8270549	ArgumentList	st		8268610	1					
ANR	8270550	Argument	st		8268610	0					
ANR	8270551	Identifier	st		8268610	0					
ANR	8270552	Argument	p		8268610	1					
ANR	8270553	Identifier	p		8268610	0					
ANR	8270554	GotoStatement	goto dux ;	707:28:26087:26095	8268610	23	True				
ANR	8270555	Identifier	dux		8268610	0					
ANR	8270556	Statement	case	708:24:26121:26124	8268610	24	True				
ANR	8270557	Statement	pxt_sint16	708:29:26126:26135	8268610	25	True				
ANR	8270558	Statement	&	708:40:26137:26137	8268610	26	True				
ANR	8270559	Label	7 :	708:42:26139:26140	8268610	27	True				
ANR	8270560	ExpressionStatement	sp -> type |= pxd_sint16	709:28:26170:26192	8268610	28	True				
ANR	8270561	AssignmentExpression	sp -> type |= pxd_sint16		8268610	0		|=			
ANR	8270562	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270563	Identifier	sp		8268610	0					
ANR	8270564	Identifier	type		8268610	1					
ANR	8270565	Identifier	pxd_sint16		8268610	1					
ANR	8270566	ForStatement	"for ( i = 0 ; i < count ; p += 2 , ++ i )"		8268610	29					
ANR	8270567	ForInit	i = 0 ;	710:33:26227:26232	8268610	0	True				
ANR	8270568	AssignmentExpression	i = 0		8268610	0		=			
ANR	8270569	Identifier	i		8268610	0					
ANR	8270570	PrimaryExpression	0		8268610	1					
ANR	8270571	Condition	i < count	710:40:26234:26242	8268610	1	True				
ANR	8270572	RelationalExpression	i < count		8268610	0		<			
ANR	8270573	Identifier	i		8268610	0					
ANR	8270574	Identifier	count		8268610	1					
ANR	8270575	Expression	"p += 2 , ++ i"	710:51:26245:26255	8268610	2	True				
ANR	8270576	AssignmentExpression	p += 2		8268610	0		+=			
ANR	8270577	Identifier	p		8268610	0					
ANR	8270578	PrimaryExpression	2		8268610	1					
ANR	8270579	UnaryExpression	++ i		8268610	1					
ANR	8270580	IncDec	++		8268610	0					
ANR	8270581	Identifier	i		8268610	1					
ANR	8270582	ExpressionStatement	"sp -> value . ia [ i ] = get_sint16 ( st , p )"	711:32:26290:26325	8268610	3	True				
ANR	8270583	AssignmentExpression	"sp -> value . ia [ i ] = get_sint16 ( st , p )"		8268610	0		=			
ANR	8270584	ArrayIndexing	sp -> value . ia [ i ]		8268610	0					
ANR	8270585	MemberAccess	sp -> value . ia		8268610	0					
ANR	8270586	PtrMemberAccess	sp -> value		8268610	0					
ANR	8270587	Identifier	sp		8268610	0					
ANR	8270588	Identifier	value		8268610	1					
ANR	8270589	Identifier	ia		8268610	1					
ANR	8270590	Identifier	i		8268610	1					
ANR	8270591	CallExpression	"get_sint16 ( st , p )"		8268610	1					
ANR	8270592	Callee	get_sint16		8268610	0					
ANR	8270593	Identifier	get_sint16		8268610	0					
ANR	8270594	ArgumentList	st		8268610	1					
ANR	8270595	Argument	st		8268610	0					
ANR	8270596	Identifier	st		8268610	0					
ANR	8270597	Argument	p		8268610	1					
ANR	8270598	Identifier	p		8268610	0					
ANR	8270599	Label	dsx :	712:26:26353:26356	8268610	30	True				
ANR	8270600	Identifier	dsx		8268610	0					
ANR	8270601	Statement	trace_scalar	712:30:26357:26368	8268610	31	True				
ANR	8270602	Statement	(	712:42:26369:26369	8268610	32	True				
ANR	8270603	Statement	pxs	712:43:26370:26372	8268610	33	True				
ANR	8270604	Statement	->	712:46:26373:26374	8268610	34	True				
ANR	8270605	Statement	memory	712:48:26375:26380	8268610	35	True				
ANR	8270606	Statement	","	712:54:26381:26381	8268610	36	True				
ANR	8270607	Statement	""" %ld"""	712:56:26383:26388	8268610	37	True				
ANR	8270608	Statement	","	712:62:26389:26389	8268610	38	True				
ANR	8270609	Statement	long	712:64:26391:26394	8268610	39	True				
ANR	8270610	Statement	","	712:68:26395:26395	8268610	40	True				
ANR	8270611	Statement	ia	713:41:26438:26439	8268610	41	True				
ANR	8270612	Statement	)	713:43:26440:26440	8268610	42	True				
ANR	8270613	ExpressionStatement		713:44:26441:26441	8268610	43	True				
ANR	8270614	ExpressionStatement	-- p	714:28:26471:26474	8268610	44	True				
ANR	8270615	UnaryExpression	-- p		8268610	0					
ANR	8270616	IncDec	--		8268610	0					
ANR	8270617	Identifier	p		8268610	1					
ANR	8270618	ContinueStatement	continue ;	715:28:26504:26512	8268610	45	True				
ANR	8270619	Statement	case	716:24:26538:26541	8268610	46	True				
ANR	8270620	Statement	pxt_sint32	716:29:26543:26552	8268610	47	True				
ANR	8270621	Statement	&	716:40:26554:26554	8268610	48	True				
ANR	8270622	Label	7 :	716:42:26556:26557	8268610	49	True				
ANR	8270623	ExpressionStatement	sp -> type |= pxd_sint32	717:28:26587:26609	8268610	50	True				
ANR	8270624	AssignmentExpression	sp -> type |= pxd_sint32		8268610	0		|=			
ANR	8270625	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270626	Identifier	sp		8268610	0					
ANR	8270627	Identifier	type		8268610	1					
ANR	8270628	Identifier	pxd_sint32		8268610	1					
ANR	8270629	ForStatement	"for ( i = 0 ; i < count ; p += 4 , ++ i )"		8268610	51					
ANR	8270630	ForInit	i = 0 ;	718:33:26644:26649	8268610	0	True				
ANR	8270631	AssignmentExpression	i = 0		8268610	0		=			
ANR	8270632	Identifier	i		8268610	0					
ANR	8270633	PrimaryExpression	0		8268610	1					
ANR	8270634	Condition	i < count	718:40:26651:26659	8268610	1	True				
ANR	8270635	RelationalExpression	i < count		8268610	0		<			
ANR	8270636	Identifier	i		8268610	0					
ANR	8270637	Identifier	count		8268610	1					
ANR	8270638	Expression	"p += 4 , ++ i"	718:51:26662:26672	8268610	2	True				
ANR	8270639	AssignmentExpression	p += 4		8268610	0		+=			
ANR	8270640	Identifier	p		8268610	0					
ANR	8270641	PrimaryExpression	4		8268610	1					
ANR	8270642	UnaryExpression	++ i		8268610	1					
ANR	8270643	IncDec	++		8268610	0					
ANR	8270644	Identifier	i		8268610	1					
ANR	8270645	ExpressionStatement	"sp -> value . ia [ i ] = get_sint32 ( st , p )"	719:32:26707:26742	8268610	3	True				
ANR	8270646	AssignmentExpression	"sp -> value . ia [ i ] = get_sint32 ( st , p )"		8268610	0		=			
ANR	8270647	ArrayIndexing	sp -> value . ia [ i ]		8268610	0					
ANR	8270648	MemberAccess	sp -> value . ia		8268610	0					
ANR	8270649	PtrMemberAccess	sp -> value		8268610	0					
ANR	8270650	Identifier	sp		8268610	0					
ANR	8270651	Identifier	value		8268610	1					
ANR	8270652	Identifier	ia		8268610	1					
ANR	8270653	Identifier	i		8268610	1					
ANR	8270654	CallExpression	"get_sint32 ( st , p )"		8268610	1					
ANR	8270655	Callee	get_sint32		8268610	0					
ANR	8270656	Identifier	get_sint32		8268610	0					
ANR	8270657	ArgumentList	st		8268610	1					
ANR	8270658	Argument	st		8268610	0					
ANR	8270659	Identifier	st		8268610	0					
ANR	8270660	Argument	p		8268610	1					
ANR	8270661	Identifier	p		8268610	0					
ANR	8270662	GotoStatement	goto dsx ;	720:28:26772:26780	8268610	52	True				
ANR	8270663	Identifier	dsx		8268610	0					
ANR	8270664	Statement	case	721:24:26806:26809	8268610	53	True				
ANR	8270665	Statement	pxt_real32	721:29:26811:26820	8268610	54	True				
ANR	8270666	Statement	&	721:40:26822:26822	8268610	55	True				
ANR	8270667	Label	7 :	721:42:26824:26825	8268610	56	True				
ANR	8270668	ExpressionStatement	sp -> type |= pxd_real32	722:28:26855:26877	8268610	57	True				
ANR	8270669	AssignmentExpression	sp -> type |= pxd_real32		8268610	0		|=			
ANR	8270670	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270671	Identifier	sp		8268610	0					
ANR	8270672	Identifier	type		8268610	1					
ANR	8270673	Identifier	pxd_real32		8268610	1					
ANR	8270674	ForStatement	"for ( i = 0 ; i < count ; p += 4 , ++ i )"		8268610	58					
ANR	8270675	ForInit	i = 0 ;	723:33:26912:26917	8268610	0	True				
ANR	8270676	AssignmentExpression	i = 0		8268610	0		=			
ANR	8270677	Identifier	i		8268610	0					
ANR	8270678	PrimaryExpression	0		8268610	1					
ANR	8270679	Condition	i < count	723:40:26919:26927	8268610	1	True				
ANR	8270680	RelationalExpression	i < count		8268610	0		<			
ANR	8270681	Identifier	i		8268610	0					
ANR	8270682	Identifier	count		8268610	1					
ANR	8270683	Expression	"p += 4 , ++ i"	723:51:26930:26940	8268610	2	True				
ANR	8270684	AssignmentExpression	p += 4		8268610	0		+=			
ANR	8270685	Identifier	p		8268610	0					
ANR	8270686	PrimaryExpression	4		8268610	1					
ANR	8270687	UnaryExpression	++ i		8268610	1					
ANR	8270688	IncDec	++		8268610	0					
ANR	8270689	Identifier	i		8268610	1					
ANR	8270690	ExpressionStatement	"sp -> value . ra [ i ] = get_real32 ( st , p )"	724:32:26975:27010	8268610	3	True				
ANR	8270691	AssignmentExpression	"sp -> value . ra [ i ] = get_real32 ( st , p )"		8268610	0		=			
ANR	8270692	ArrayIndexing	sp -> value . ra [ i ]		8268610	0					
ANR	8270693	MemberAccess	sp -> value . ra		8268610	0					
ANR	8270694	PtrMemberAccess	sp -> value		8268610	0					
ANR	8270695	Identifier	sp		8268610	0					
ANR	8270696	Identifier	value		8268610	1					
ANR	8270697	Identifier	ra		8268610	1					
ANR	8270698	Identifier	i		8268610	1					
ANR	8270699	CallExpression	"get_real32 ( st , p )"		8268610	1					
ANR	8270700	Callee	get_real32		8268610	0					
ANR	8270701	Identifier	get_real32		8268610	0					
ANR	8270702	ArgumentList	st		8268610	1					
ANR	8270703	Argument	st		8268610	0					
ANR	8270704	Identifier	st		8268610	0					
ANR	8270705	Argument	p		8268610	1					
ANR	8270706	Identifier	p		8268610	0					
ANR	8270707	ExpressionStatement	"trace_scalar ( pxs -> memory , "" %g"" , double , ra )"	725:28:27040:27084	8268610	59	True				
ANR	8270708	CallExpression	"trace_scalar ( pxs -> memory , "" %g"" , double , ra )"		8268610	0					
ANR	8270709	Callee	trace_scalar		8268610	0					
ANR	8270710	Identifier	trace_scalar		8268610	0					
ANR	8270711	ArgumentList	pxs -> memory		8268610	1					
ANR	8270712	Argument	pxs -> memory		8268610	0					
ANR	8270713	PtrMemberAccess	pxs -> memory		8268610	0					
ANR	8270714	Identifier	pxs		8268610	0					
ANR	8270715	Identifier	memory		8268610	1					
ANR	8270716	Argument	""" %g"""		8268610	1					
ANR	8270717	PrimaryExpression	""" %g"""		8268610	0					
ANR	8270718	Argument	double		8268610	2					
ANR	8270719	Identifier	double		8268610	0					
ANR	8270720	Argument	ra		8268610	3					
ANR	8270721	Identifier	ra		8268610	0					
ANR	8270722	ExpressionStatement	-- p	727:28:27115:27118	8268610	60	True				
ANR	8270723	UnaryExpression	-- p		8268610	0					
ANR	8270724	IncDec	--		8268610	0					
ANR	8270725	Identifier	p		8268610	1					
ANR	8270726	ContinueStatement	continue ;	728:28:27148:27156	8268610	61	True				
ANR	8270727	Label	default :	729:24:27182:27189	8268610	62	True				
ANR	8270728	Identifier	default		8268610	0					
ANR	8270729	BreakStatement	break ;	730:28:27219:27224	8268610	63	True				
ANR	8270730	BreakStatement	break ;	733:16:27282:27287	8268610	49	True				
ANR	8270731	Label	case 25 :	734:12:27301:27308	8268610	50	True				
ANR	8270732	CompoundStatement		447:20:17854:17865	8268610	51					
ANR	8270733	IdentifierDeclStatement	const byte * dp ;	737:20:27381:27395	8268610	0	True				
ANR	8270734	IdentifierDecl	* dp		8268610	0					
ANR	8270735	IdentifierDeclType	const byte *		8268610	0					
ANR	8270736	Identifier	dp		8268610	1					
ANR	8270737	IdentifierDeclStatement	uint nbytes ;	738:20:27417:27428	8268610	1	True				
ANR	8270738	IdentifierDecl	nbytes		8268610	0					
ANR	8270739	IdentifierDeclType	uint		8268610	0					
ANR	8270740	Identifier	nbytes		8268610	1					
ANR	8270741	IfStatement	if ( sp == stack_limit )		8268610	2					
ANR	8270742	Condition	sp == stack_limit	740:24:27455:27471	8268610	0	True				
ANR	8270743	EqualityExpression	sp == stack_limit		8268610	0		==			
ANR	8270744	Identifier	sp		8268610	0					
ANR	8270745	Identifier	stack_limit		8268610	1					
ANR	8270746	CompoundStatement		449:43:17911:17911	8268610	1					
ANR	8270747	ExpressionStatement	code = gs_note_error ( errorInternalOverflow )	741:24:27500:27543	8268610	0	True				
ANR	8270748	AssignmentExpression	code = gs_note_error ( errorInternalOverflow )		8268610	0		=			
ANR	8270749	Identifier	code		8268610	0					
ANR	8270750	CallExpression	gs_note_error ( errorInternalOverflow )		8268610	1					
ANR	8270751	Callee	gs_note_error		8268610	0					
ANR	8270752	Identifier	gs_note_error		8268610	0					
ANR	8270753	ArgumentList	errorInternalOverflow		8268610	1					
ANR	8270754	Argument	errorInternalOverflow		8268610	0					
ANR	8270755	Identifier	errorInternalOverflow		8268610	0					
ANR	8270756	GotoStatement	goto x ;	742:24:27569:27575	8268610	1	True				
ANR	8270757	Identifier	x		8268610	0					
ANR	8270758	SwitchStatement	switch ( p [ 2 ] )		8268610	3					
ANR	8270759	Condition	p [ 2 ]	744:28:27627:27630	8268610	0	True				
ANR	8270760	ArrayIndexing	p [ 2 ]		8268610	0					
ANR	8270761	Identifier	p		8268610	0					
ANR	8270762	PrimaryExpression	2		8268610	1					
ANR	8270763	CompoundStatement		453:34:18070:18070	8268610	1					
ANR	8270764	Label	case pxt_ubyte :	745:24:27659:27673	8268610	0	True				
ANR	8270765	Identifier	pxt_ubyte		8268610	0					
ANR	8270766	ExpressionStatement	sp [ 1 ] . value . array . size = p [ 3 ]	746:28:27703:27732	8268610	1	True				
ANR	8270767	AssignmentExpression	sp [ 1 ] . value . array . size = p [ 3 ]		8268610	0		=			
ANR	8270768	MemberAccess	sp [ 1 ] . value . array . size		8268610	0					
ANR	8270769	MemberAccess	sp [ 1 ] . value . array		8268610	0					
ANR	8270770	MemberAccess	sp [ 1 ] . value		8268610	0					
ANR	8270771	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270772	Identifier	sp		8268610	0					
ANR	8270773	PrimaryExpression	1		8268610	1					
ANR	8270774	Identifier	value		8268610	1					
ANR	8270775	Identifier	array		8268610	1					
ANR	8270776	Identifier	size		8268610	1					
ANR	8270777	ArrayIndexing	p [ 3 ]		8268610	1					
ANR	8270778	Identifier	p		8268610	0					
ANR	8270779	PrimaryExpression	3		8268610	1					
ANR	8270780	ExpressionStatement	dp = p + 4	747:28:27762:27772	8268610	2	True				
ANR	8270781	AssignmentExpression	dp = p + 4		8268610	0		=			
ANR	8270782	Identifier	dp		8268610	0					
ANR	8270783	AdditiveExpression	p + 4		8268610	1		+			
ANR	8270784	Identifier	p		8268610	0					
ANR	8270785	PrimaryExpression	4		8268610	1					
ANR	8270786	BreakStatement	break ;	748:28:27802:27807	8268610	3	True				
ANR	8270787	Label	case pxt_uint16 :	749:24:27833:27848	8268610	4	True				
ANR	8270788	Identifier	pxt_uint16		8268610	0					
ANR	8270789	IfStatement	if ( left < 4 )		8268610	5					
ANR	8270790	Condition	left < 4	750:32:27882:27889	8268610	0	True				
ANR	8270791	RelationalExpression	left < 4		8268610	0		<			
ANR	8270792	Identifier	left		8268610	0					
ANR	8270793	PrimaryExpression	4		8268610	1					
ANR	8270794	CompoundStatement		459:42:18329:18329	8268610	1					
ANR	8270795	ExpressionStatement	"if_debug0m ( 'i' , memory , ""...\\n"" )"	751:32:27926:27958	8268610	0	True				
ANR	8270796	CallExpression	"if_debug0m ( 'i' , memory , ""...\\n"" )"		8268610	0					
ANR	8270797	Callee	if_debug0m		8268610	0					
ANR	8270798	Identifier	if_debug0m		8268610	0					
ANR	8270799	ArgumentList	'i'		8268610	1					
ANR	8270800	Argument	'i'		8268610	0					
ANR	8270801	PrimaryExpression	'i'		8268610	0					
ANR	8270802	Argument	memory		8268610	1					
ANR	8270803	Identifier	memory		8268610	0					
ANR	8270804	Argument	"""...\\n"""		8268610	2					
ANR	8270805	PrimaryExpression	"""...\\n"""		8268610	0					
ANR	8270806	ExpressionStatement	st -> macro_state ^= syntax -> state_transition	753:32:28057:28100	8268610	1	True				
ANR	8270807	AssignmentExpression	st -> macro_state ^= syntax -> state_transition		8268610	0		^=			
ANR	8270808	PtrMemberAccess	st -> macro_state		8268610	0					
ANR	8270809	Identifier	st		8268610	0					
ANR	8270810	Identifier	macro_state		8268610	1					
ANR	8270811	PtrMemberAccess	syntax -> state_transition		8268610	1					
ANR	8270812	Identifier	syntax		8268610	0					
ANR	8270813	Identifier	state_transition		8268610	1					
ANR	8270814	GotoStatement	goto x ;	754:32:28134:28140	8268610	2	True				
ANR	8270815	Identifier	x		8268610	0					
ANR	8270816	ExpressionStatement	"sp [ 1 ] . value . array . size = get_uint16 ( st , p + 3 )"	756:28:28200:28246	8268610	6	True				
ANR	8270817	AssignmentExpression	"sp [ 1 ] . value . array . size = get_uint16 ( st , p + 3 )"		8268610	0		=			
ANR	8270818	MemberAccess	sp [ 1 ] . value . array . size		8268610	0					
ANR	8270819	MemberAccess	sp [ 1 ] . value . array		8268610	0					
ANR	8270820	MemberAccess	sp [ 1 ] . value		8268610	0					
ANR	8270821	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270822	Identifier	sp		8268610	0					
ANR	8270823	PrimaryExpression	1		8268610	1					
ANR	8270824	Identifier	value		8268610	1					
ANR	8270825	Identifier	array		8268610	1					
ANR	8270826	Identifier	size		8268610	1					
ANR	8270827	CallExpression	"get_uint16 ( st , p + 3 )"		8268610	1					
ANR	8270828	Callee	get_uint16		8268610	0					
ANR	8270829	Identifier	get_uint16		8268610	0					
ANR	8270830	ArgumentList	st		8268610	1					
ANR	8270831	Argument	st		8268610	0					
ANR	8270832	Identifier	st		8268610	0					
ANR	8270833	Argument	p + 3		8268610	1					
ANR	8270834	AdditiveExpression	p + 3		8268610	0		+			
ANR	8270835	Identifier	p		8268610	0					
ANR	8270836	PrimaryExpression	3		8268610	1					
ANR	8270837	ExpressionStatement	dp = p + 5	757:28:28276:28286	8268610	7	True				
ANR	8270838	AssignmentExpression	dp = p + 5		8268610	0		=			
ANR	8270839	Identifier	dp		8268610	0					
ANR	8270840	AdditiveExpression	p + 5		8268610	1		+			
ANR	8270841	Identifier	p		8268610	0					
ANR	8270842	PrimaryExpression	5		8268610	1					
ANR	8270843	BreakStatement	break ;	758:28:28316:28321	8268610	8	True				
ANR	8270844	Label	default :	759:24:28347:28354	8268610	9	True				
ANR	8270845	Identifier	default		8268610	0					
ANR	8270846	ExpressionStatement	st -> last_operator = tag	760:28:28384:28407	8268610	10	True				
ANR	8270847	AssignmentExpression	st -> last_operator = tag		8268610	0		=			
ANR	8270848	PtrMemberAccess	st -> last_operator		8268610	0					
ANR	8270849	Identifier	st		8268610	0					
ANR	8270850	Identifier	last_operator		8268610	1					
ANR	8270851	Identifier	tag		8268610	1					
ANR	8270852	ExpressionStatement	code = gs_note_error ( errorIllegalTag )	761:28:28464:28501	8268610	11	True				
ANR	8270853	AssignmentExpression	code = gs_note_error ( errorIllegalTag )		8268610	0		=			
ANR	8270854	Identifier	code		8268610	0					
ANR	8270855	CallExpression	gs_note_error ( errorIllegalTag )		8268610	1					
ANR	8270856	Callee	gs_note_error		8268610	0					
ANR	8270857	Identifier	gs_note_error		8268610	0					
ANR	8270858	ArgumentList	errorIllegalTag		8268610	1					
ANR	8270859	Argument	errorIllegalTag		8268610	0					
ANR	8270860	Identifier	errorIllegalTag		8268610	0					
ANR	8270861	GotoStatement	goto x ;	762:28:28531:28537	8268610	12	True				
ANR	8270862	Identifier	x		8268610	0					
ANR	8270863	ExpressionStatement	nbytes = sp [ 1 ] . value . array . size	764:20:28581:28612	8268610	4	True				
ANR	8270864	AssignmentExpression	nbytes = sp [ 1 ] . value . array . size		8268610	0		=			
ANR	8270865	Identifier	nbytes		8268610	0					
ANR	8270866	MemberAccess	sp [ 1 ] . value . array . size		8268610	1					
ANR	8270867	MemberAccess	sp [ 1 ] . value . array		8268610	0					
ANR	8270868	MemberAccess	sp [ 1 ] . value		8268610	0					
ANR	8270869	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270870	Identifier	sp		8268610	0					
ANR	8270871	PrimaryExpression	1		8268610	1					
ANR	8270872	Identifier	value		8268610	1					
ANR	8270873	Identifier	array		8268610	1					
ANR	8270874	Identifier	size		8268610	1					
ANR	8270875	ExpressionStatement	"if_debug1m ( 'i' , memory , ""[%u]\\n"" , sp [ 1 ] . value . array . size )"	765:20:28634:28691	8268610	5	True				
ANR	8270876	CallExpression	"if_debug1m ( 'i' , memory , ""[%u]\\n"" , sp [ 1 ] . value . array . size )"		8268610	0					
ANR	8270877	Callee	if_debug1m		8268610	0					
ANR	8270878	Identifier	if_debug1m		8268610	0					
ANR	8270879	ArgumentList	'i'		8268610	1					
ANR	8270880	Argument	'i'		8268610	0					
ANR	8270881	PrimaryExpression	'i'		8268610	0					
ANR	8270882	Argument	memory		8268610	1					
ANR	8270883	Identifier	memory		8268610	0					
ANR	8270884	Argument	"""[%u]\\n"""		8268610	2					
ANR	8270885	PrimaryExpression	"""[%u]\\n"""		8268610	0					
ANR	8270886	Argument	sp [ 1 ] . value . array . size		8268610	3					
ANR	8270887	MemberAccess	sp [ 1 ] . value . array . size		8268610	0					
ANR	8270888	MemberAccess	sp [ 1 ] . value . array		8268610	0					
ANR	8270889	MemberAccess	sp [ 1 ] . value		8268610	0					
ANR	8270890	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270891	Identifier	sp		8268610	0					
ANR	8270892	PrimaryExpression	1		8268610	1					
ANR	8270893	Identifier	value		8268610	1					
ANR	8270894	Identifier	array		8268610	1					
ANR	8270895	Identifier	size		8268610	1					
ANR	8270896	SwitchStatement	switch ( tag )		8268610	6					
ANR	8270897	Condition	tag	766:28:28721:28723	8268610	0	True				
ANR	8270898	Identifier	tag		8268610	0					
ANR	8270899	CompoundStatement		475:33:19163:19163	8268610	1					
ANR	8270900	Label	case pxt_ubyte_array :	767:24:28752:28772	8268610	0	True				
ANR	8270901	Identifier	pxt_ubyte_array		8268610	0					
ANR	8270902	ExpressionStatement	sp [ 1 ] . type = pxd_array | pxd_ubyte	768:28:28802:28836	8268610	1	True				
ANR	8270903	AssignmentExpression	sp [ 1 ] . type = pxd_array | pxd_ubyte		8268610	0		=			
ANR	8270904	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8270905	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8270906	Identifier	sp		8268610	0					
ANR	8270907	PrimaryExpression	1		8268610	1					
ANR	8270908	Identifier	type		8268610	1					
ANR	8270909	InclusiveOrExpression	pxd_array | pxd_ubyte		8268610	1		|			
ANR	8270910	Identifier	pxd_array		8268610	0					
ANR	8270911	Identifier	pxd_ubyte		8268610	1					
ANR	8270912	Label	array :	769:26:28864:28869	8268610	2	True				
ANR	8270913	Identifier	array		8268610	0					
ANR	8270914	ExpressionStatement	++ sp	769:32:28870:28874	8268610	3	True				
ANR	8270915	UnaryExpression	++ sp		8268610	0					
ANR	8270916	IncDec	++		8268610	0					
ANR	8270917	Identifier	sp		8268610	1					
ANR	8270918	IfStatement	if ( st -> big_endian )		8268610	4					
ANR	8270919	Condition	st -> big_endian	770:32:28908:28921	8268610	0	True				
ANR	8270920	PtrMemberAccess	st -> big_endian		8268610	0					
ANR	8270921	Identifier	st		8268610	0					
ANR	8270922	Identifier	big_endian		8268610	1					
ANR	8270923	ExpressionStatement	sp -> type |= pxd_big_endian	771:32:28956:28982	8268610	1	True				
ANR	8270924	AssignmentExpression	sp -> type |= pxd_big_endian		8268610	0		|=			
ANR	8270925	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270926	Identifier	sp		8268610	0					
ANR	8270927	Identifier	type		8268610	1					
ANR	8270928	Identifier	pxd_big_endian		8268610	1					
ANR	8270929	ExpressionStatement	sp -> value . array . data = dp	772:28:29012:29037	8268610	5	True				
ANR	8270930	AssignmentExpression	sp -> value . array . data = dp		8268610	0		=			
ANR	8270931	MemberAccess	sp -> value . array . data		8268610	0					
ANR	8270932	MemberAccess	sp -> value . array		8268610	0					
ANR	8270933	PtrMemberAccess	sp -> value		8268610	0					
ANR	8270934	Identifier	sp		8268610	0					
ANR	8270935	Identifier	value		8268610	1					
ANR	8270936	Identifier	array		8268610	1					
ANR	8270937	Identifier	data		8268610	1					
ANR	8270938	Identifier	dp		8268610	1					
ANR	8270939	ExpressionStatement	sp -> attribute = 0	773:28:29067:29084	8268610	6	True				
ANR	8270940	AssignmentExpression	sp -> attribute = 0		8268610	0		=			
ANR	8270941	PtrMemberAccess	sp -> attribute		8268610	0					
ANR	8270942	Identifier	sp		8268610	0					
ANR	8270943	Identifier	attribute		8268610	1					
ANR	8270944	PrimaryExpression	0		8268610	1					
ANR	8270945	IfStatement	if ( rlimit + 1 - dp < nbytes )		8268610	7					
ANR	8270946	Condition	rlimit + 1 - dp < nbytes	776:32:29242:29265	8268610	0	True				
ANR	8270947	RelationalExpression	rlimit + 1 - dp < nbytes		8268610	0		<			
ANR	8270948	AdditiveExpression	rlimit + 1 - dp		8268610	0		+			
ANR	8270949	Identifier	rlimit		8268610	0					
ANR	8270950	AdditiveExpression	1 - dp		8268610	1		-			
ANR	8270951	PrimaryExpression	1		8268610	0					
ANR	8270952	Identifier	dp		8268610	1					
ANR	8270953	Identifier	nbytes		8268610	1					
ANR	8270954	CompoundStatement		486:32:19792:19820	8268610	1					
ANR	8270955	IdentifierDeclStatement	uint avail = rlimit + 1 - dp ;	777:32:29355:29383	8268610	0	True				
ANR	8270956	IdentifierDecl	avail = rlimit + 1 - dp		8268610	0					
ANR	8270957	IdentifierDeclType	uint		8268610	0					
ANR	8270958	Identifier	avail		8268610	1					
ANR	8270959	AssignmentExpression	avail = rlimit + 1 - dp		8268610	2		=			
ANR	8270960	Identifier	avail		8268610	0					
ANR	8270961	AdditiveExpression	rlimit + 1 - dp		8268610	1		+			
ANR	8270962	Identifier	rlimit		8268610	0					
ANR	8270963	AdditiveExpression	1 - dp		8268610	1		-			
ANR	8270964	PrimaryExpression	1		8268610	0					
ANR	8270965	Identifier	dp		8268610	1					
ANR	8270966	ExpressionStatement	"code = px_save_array ( sp , pxs , ""partial array"" , avail )"	779:32:29418:29524	8268610	1	True				
ANR	8270967	AssignmentExpression	"code = px_save_array ( sp , pxs , ""partial array"" , avail )"		8268610	0		=			
ANR	8270968	Identifier	code		8268610	0					
ANR	8270969	CallExpression	"px_save_array ( sp , pxs , ""partial array"" , avail )"		8268610	1					
ANR	8270970	Callee	px_save_array		8268610	0					
ANR	8270971	Identifier	px_save_array		8268610	0					
ANR	8270972	ArgumentList	sp		8268610	1					
ANR	8270973	Argument	sp		8268610	0					
ANR	8270974	Identifier	sp		8268610	0					
ANR	8270975	Argument	pxs		8268610	1					
ANR	8270976	Identifier	pxs		8268610	0					
ANR	8270977	Argument	"""partial array"""		8268610	2					
ANR	8270978	PrimaryExpression	"""partial array"""		8268610	0					
ANR	8270979	Argument	avail		8268610	3					
ANR	8270980	Identifier	avail		8268610	0					
ANR	8270981	IfStatement	if ( code < 0 )		8268610	2					
ANR	8270982	Condition	code < 0	781:36:29562:29569	8268610	0	True				
ANR	8270983	RelationalExpression	code < 0		8268610	0		<			
ANR	8270984	Identifier	code		8268610	0					
ANR	8270985	PrimaryExpression	0		8268610	1					
ANR	8270986	GotoStatement	goto x ;	782:36:29608:29614	8268610	1	True				
ANR	8270987	Identifier	x		8268610	0					
ANR	8270988	ExpressionStatement	sp -> type |= pxd_on_heap	783:32:29648:29671	8268610	3	True				
ANR	8270989	AssignmentExpression	sp -> type |= pxd_on_heap		8268610	0		|=			
ANR	8270990	PtrMemberAccess	sp -> type		8268610	0					
ANR	8270991	Identifier	sp		8268610	0					
ANR	8270992	Identifier	type		8268610	1					
ANR	8270993	Identifier	pxd_on_heap		8268610	1					
ANR	8270994	ExpressionStatement	st -> data_left = nbytes - avail	784:32:29705:29735	8268610	4	True				
ANR	8270995	AssignmentExpression	st -> data_left = nbytes - avail		8268610	0		=			
ANR	8270996	PtrMemberAccess	st -> data_left		8268610	0					
ANR	8270997	Identifier	st		8268610	0					
ANR	8270998	Identifier	data_left		8268610	1					
ANR	8270999	AdditiveExpression	nbytes - avail		8268610	1		-			
ANR	8271000	Identifier	nbytes		8268610	0					
ANR	8271001	Identifier	avail		8268610	1					
ANR	8271002	ExpressionStatement	st -> data_proc = 0	785:32:29769:29786	8268610	5	True				
ANR	8271003	AssignmentExpression	st -> data_proc = 0		8268610	0		=			
ANR	8271004	PtrMemberAccess	st -> data_proc		8268610	0					
ANR	8271005	Identifier	st		8268610	0					
ANR	8271006	Identifier	data_proc		8268610	1					
ANR	8271007	PrimaryExpression	0		8268610	1					
ANR	8271008	ExpressionStatement	p = rlimit	786:32:29820:29830	8268610	6	True				
ANR	8271009	AssignmentExpression	p = rlimit		8268610	0		=			
ANR	8271010	Identifier	p		8268610	0					
ANR	8271011	Identifier	rlimit		8268610	1					
ANR	8271012	GotoStatement	goto x ;	787:32:29864:29870	8268610	7	True				
ANR	8271013	Identifier	x		8268610	0					
ANR	8271014	ExpressionStatement	p = dp + nbytes - 1	789:28:29930:29949	8268610	8	True				
ANR	8271015	AssignmentExpression	p = dp + nbytes - 1		8268610	0		=			
ANR	8271016	Identifier	p		8268610	0					
ANR	8271017	AdditiveExpression	dp + nbytes - 1		8268610	1		+			
ANR	8271018	Identifier	dp		8268610	0					
ANR	8271019	AdditiveExpression	nbytes - 1		8268610	1		-			
ANR	8271020	Identifier	nbytes		8268610	0					
ANR	8271021	PrimaryExpression	1		8268610	1					
ANR	8271022	ExpressionStatement	"trace_array ( memory , sp )"	790:28:29979:30002	8268610	9	True				
ANR	8271023	CallExpression	"trace_array ( memory , sp )"		8268610	0					
ANR	8271024	Callee	trace_array		8268610	0					
ANR	8271025	Identifier	trace_array		8268610	0					
ANR	8271026	ArgumentList	memory		8268610	1					
ANR	8271027	Argument	memory		8268610	0					
ANR	8271028	Identifier	memory		8268610	0					
ANR	8271029	Argument	sp		8268610	1					
ANR	8271030	Identifier	sp		8268610	0					
ANR	8271031	ContinueStatement	continue ;	791:28:30032:30040	8268610	10	True				
ANR	8271032	Label	case pxt_uint16_array :	792:24:30066:30087	8268610	11	True				
ANR	8271033	Identifier	pxt_uint16_array		8268610	0					
ANR	8271034	ExpressionStatement	sp [ 1 ] . type = pxd_array | pxd_uint16	793:28:30117:30152	8268610	12	True				
ANR	8271035	AssignmentExpression	sp [ 1 ] . type = pxd_array | pxd_uint16		8268610	0		=			
ANR	8271036	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8271037	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8271038	Identifier	sp		8268610	0					
ANR	8271039	PrimaryExpression	1		8268610	1					
ANR	8271040	Identifier	type		8268610	1					
ANR	8271041	InclusiveOrExpression	pxd_array | pxd_uint16		8268610	1		|			
ANR	8271042	Identifier	pxd_array		8268610	0					
ANR	8271043	Identifier	pxd_uint16		8268610	1					
ANR	8271044	Label	a16 :	794:26:30180:30183	8268610	13	True				
ANR	8271045	Identifier	a16		8268610	0					
ANR	8271046	ExpressionStatement	nbytes <<= 1	794:30:30184:30196	8268610	14	True				
ANR	8271047	AssignmentExpression	nbytes <<= 1		8268610	0		<<=			
ANR	8271048	Identifier	nbytes		8268610	0					
ANR	8271049	PrimaryExpression	1		8268610	1					
ANR	8271050	GotoStatement	goto array ;	795:28:30226:30236	8268610	15	True				
ANR	8271051	Identifier	array		8268610	0					
ANR	8271052	Label	case pxt_uint32_array :	796:24:30262:30283	8268610	16	True				
ANR	8271053	Identifier	pxt_uint32_array		8268610	0					
ANR	8271054	ExpressionStatement	sp [ 1 ] . type = pxd_array | pxd_uint32	797:28:30313:30348	8268610	17	True				
ANR	8271055	AssignmentExpression	sp [ 1 ] . type = pxd_array | pxd_uint32		8268610	0		=			
ANR	8271056	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8271057	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8271058	Identifier	sp		8268610	0					
ANR	8271059	PrimaryExpression	1		8268610	1					
ANR	8271060	Identifier	type		8268610	1					
ANR	8271061	InclusiveOrExpression	pxd_array | pxd_uint32		8268610	1		|			
ANR	8271062	Identifier	pxd_array		8268610	0					
ANR	8271063	Identifier	pxd_uint32		8268610	1					
ANR	8271064	Label	a32 :	798:26:30376:30379	8268610	18	True				
ANR	8271065	Identifier	a32		8268610	0					
ANR	8271066	ExpressionStatement	nbytes <<= 2	798:30:30380:30392	8268610	19	True				
ANR	8271067	AssignmentExpression	nbytes <<= 2		8268610	0		<<=			
ANR	8271068	Identifier	nbytes		8268610	0					
ANR	8271069	PrimaryExpression	2		8268610	1					
ANR	8271070	GotoStatement	goto array ;	799:28:30422:30432	8268610	20	True				
ANR	8271071	Identifier	array		8268610	0					
ANR	8271072	Label	case pxt_sint16_array :	800:24:30458:30479	8268610	21	True				
ANR	8271073	Identifier	pxt_sint16_array		8268610	0					
ANR	8271074	ExpressionStatement	sp [ 1 ] . type = pxd_array | pxd_sint16	801:28:30509:30544	8268610	22	True				
ANR	8271075	AssignmentExpression	sp [ 1 ] . type = pxd_array | pxd_sint16		8268610	0		=			
ANR	8271076	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8271077	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8271078	Identifier	sp		8268610	0					
ANR	8271079	PrimaryExpression	1		8268610	1					
ANR	8271080	Identifier	type		8268610	1					
ANR	8271081	InclusiveOrExpression	pxd_array | pxd_sint16		8268610	1		|			
ANR	8271082	Identifier	pxd_array		8268610	0					
ANR	8271083	Identifier	pxd_sint16		8268610	1					
ANR	8271084	GotoStatement	goto a16 ;	802:28:30574:30582	8268610	23	True				
ANR	8271085	Identifier	a16		8268610	0					
ANR	8271086	Label	case pxt_sint32_array :	803:24:30608:30629	8268610	24	True				
ANR	8271087	Identifier	pxt_sint32_array		8268610	0					
ANR	8271088	ExpressionStatement	sp [ 1 ] . type = pxd_array | pxd_sint32	804:28:30659:30694	8268610	25	True				
ANR	8271089	AssignmentExpression	sp [ 1 ] . type = pxd_array | pxd_sint32		8268610	0		=			
ANR	8271090	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8271091	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8271092	Identifier	sp		8268610	0					
ANR	8271093	PrimaryExpression	1		8268610	1					
ANR	8271094	Identifier	type		8268610	1					
ANR	8271095	InclusiveOrExpression	pxd_array | pxd_sint32		8268610	1		|			
ANR	8271096	Identifier	pxd_array		8268610	0					
ANR	8271097	Identifier	pxd_sint32		8268610	1					
ANR	8271098	GotoStatement	goto a32 ;	805:28:30724:30732	8268610	26	True				
ANR	8271099	Identifier	a32		8268610	0					
ANR	8271100	Label	case pxt_real32_array :	806:24:30758:30779	8268610	27	True				
ANR	8271101	Identifier	pxt_real32_array		8268610	0					
ANR	8271102	ExpressionStatement	sp [ 1 ] . type = pxd_array | pxd_real32	807:28:30809:30844	8268610	28	True				
ANR	8271103	AssignmentExpression	sp [ 1 ] . type = pxd_array | pxd_real32		8268610	0		=			
ANR	8271104	MemberAccess	sp [ 1 ] . type		8268610	0					
ANR	8271105	ArrayIndexing	sp [ 1 ]		8268610	0					
ANR	8271106	Identifier	sp		8268610	0					
ANR	8271107	PrimaryExpression	1		8268610	1					
ANR	8271108	Identifier	type		8268610	1					
ANR	8271109	InclusiveOrExpression	pxd_array | pxd_real32		8268610	1		|			
ANR	8271110	Identifier	pxd_array		8268610	0					
ANR	8271111	Identifier	pxd_real32		8268610	1					
ANR	8271112	GotoStatement	goto a32 ;	808:28:30874:30882	8268610	29	True				
ANR	8271113	Identifier	a32		8268610	0					
ANR	8271114	Label	default :	809:24:30908:30915	8268610	30	True				
ANR	8271115	Identifier	default		8268610	0					
ANR	8271116	BreakStatement	break ;	810:28:30945:30950	8268610	31	True				
ANR	8271117	BreakStatement	break ;	812:20:30994:30999	8268610	7	True				
ANR	8271118	BreakStatement	break ;	814:16:31035:31040	8268610	52	True				
ANR	8271119	Label	case 31 :	815:12:31054:31061	8268610	53	True				
ANR	8271120	CompoundStatement		527:20:21579:21596	8268610	54					
ANR	8271121	IdentifierDeclStatement	px_attribute_t attr ;	817:20:31101:31120	8268610	0	True				
ANR	8271122	IdentifierDecl	attr		8268610	0					
ANR	8271123	IdentifierDeclType	px_attribute_t		8268610	0					
ANR	8271124	Identifier	attr		8268610	1					
ANR	8271125	IdentifierDeclStatement	const byte * pnext ;	818:20:31142:31159	8268610	1	True				
ANR	8271126	IdentifierDecl	* pnext		8268610	0					
ANR	8271127	IdentifierDeclType	const byte *		8268610	0					
ANR	8271128	Identifier	pnext		8268610	1					
ANR	8271129	SwitchStatement	switch ( tag )		8268610	2					
ANR	8271130	Condition	tag	820:28:31190:31192	8268610	0	True				
ANR	8271131	Identifier	tag		8268610	0					
ANR	8271132	CompoundStatement		529:33:21632:21632	8268610	1					
ANR	8271133	Label	case pxt_attr_ubyte :	821:24:31221:31240	8268610	0	True				
ANR	8271134	Identifier	pxt_attr_ubyte		8268610	0					
ANR	8271135	ExpressionStatement	attr = p [ 2 ]	822:28:31270:31281	8268610	1	True				
ANR	8271136	AssignmentExpression	attr = p [ 2 ]		8268610	0		=			
ANR	8271137	Identifier	attr		8268610	0					
ANR	8271138	ArrayIndexing	p [ 2 ]		8268610	1					
ANR	8271139	Identifier	p		8268610	0					
ANR	8271140	PrimaryExpression	2		8268610	1					
ANR	8271141	ExpressionStatement	pnext = p + 2	823:28:31311:31324	8268610	2	True				
ANR	8271142	AssignmentExpression	pnext = p + 2		8268610	0		=			
ANR	8271143	Identifier	pnext		8268610	0					
ANR	8271144	AdditiveExpression	p + 2		8268610	1		+			
ANR	8271145	Identifier	p		8268610	0					
ANR	8271146	PrimaryExpression	2		8268610	1					
ANR	8271147	GotoStatement	goto a ;	824:28:31354:31360	8268610	3	True				
ANR	8271148	Identifier	a		8268610	0					
ANR	8271149	Label	case pxt_attr_uint16 :	825:24:31386:31406	8268610	4	True				
ANR	8271150	Identifier	pxt_attr_uint16		8268610	0					
ANR	8271151	ExpressionStatement	"attr = get_uint16 ( st , p + 2 )"	826:28:31436:31464	8268610	5	True				
ANR	8271152	AssignmentExpression	"attr = get_uint16 ( st , p + 2 )"		8268610	0		=			
ANR	8271153	Identifier	attr		8268610	0					
ANR	8271154	CallExpression	"get_uint16 ( st , p + 2 )"		8268610	1					
ANR	8271155	Callee	get_uint16		8268610	0					
ANR	8271156	Identifier	get_uint16		8268610	0					
ANR	8271157	ArgumentList	st		8268610	1					
ANR	8271158	Argument	st		8268610	0					
ANR	8271159	Identifier	st		8268610	0					
ANR	8271160	Argument	p + 2		8268610	1					
ANR	8271161	AdditiveExpression	p + 2		8268610	0		+			
ANR	8271162	Identifier	p		8268610	0					
ANR	8271163	PrimaryExpression	2		8268610	1					
ANR	8271164	ExpressionStatement	pnext = p + 3	827:28:31494:31507	8268610	6	True				
ANR	8271165	AssignmentExpression	pnext = p + 3		8268610	0		=			
ANR	8271166	Identifier	pnext		8268610	0					
ANR	8271167	AdditiveExpression	p + 3		8268610	1		+			
ANR	8271168	Identifier	p		8268610	0					
ANR	8271169	PrimaryExpression	3		8268610	1					
ANR	8271170	Label	a :	828:26:31535:31536	8268610	7	True				
ANR	8271171	Identifier	a		8268610	0					
ANR	8271172	IfStatement	if ( attr >= px_attribute_next )		8268610	8					
ANR	8271173	Condition	attr >= px_attribute_next	828:32:31541:31597	8268610	0	True				
ANR	8271174	RelationalExpression	attr >= px_attribute_next		8268610	0		>=			
ANR	8271175	Identifier	attr		8268610	0					
ANR	8271176	Identifier	px_attribute_next		8268610	1					
ANR	8271177	BreakStatement	break ;	830:32:31632:31637	8268610	1	True				
ANR	8271178	ExpressionStatement	sp -> attribute = attr	841:28:32324:32344	8268610	9	True				
ANR	8271179	AssignmentExpression	sp -> attribute = attr		8268610	0		=			
ANR	8271180	PtrMemberAccess	sp -> attribute		8268610	0					
ANR	8271181	Identifier	sp		8268610	0					
ANR	8271182	Identifier	attribute		8268610	1					
ANR	8271183	Identifier	attr		8268610	1					
ANR	8271184	IfStatement	if ( st -> attribute_indices [ attr ] != 0 )		8268610	10					
ANR	8271185	Condition	st -> attribute_indices [ attr ] != 0	842:32:32378:32409	8268610	0	True				
ANR	8271186	EqualityExpression	st -> attribute_indices [ attr ] != 0		8268610	0		!=			
ANR	8271187	ArrayIndexing	st -> attribute_indices [ attr ]		8268610	0					
ANR	8271188	PtrMemberAccess	st -> attribute_indices		8268610	0					
ANR	8271189	Identifier	st		8268610	0					
ANR	8271190	Identifier	attribute_indices		8268610	1					
ANR	8271191	Identifier	attr		8268610	1					
ANR	8271192	PrimaryExpression	0		8268610	1					
ANR	8271193	CompoundStatement		552:32:22883:22979	8268610	1					
ANR	8271194	IdentifierDeclStatement	px_value_t * old_sp = & st -> stack [ st -> attribute_indices [ attr ] ] ;	843:32:32446:32542	8268610	0	True				
ANR	8271195	IdentifierDecl	* old_sp = & st -> stack [ st -> attribute_indices [ attr ] ]		8268610	0					
ANR	8271196	IdentifierDeclType	px_value_t *		8268610	0					
ANR	8271197	Identifier	old_sp		8268610	1					
ANR	8271198	AssignmentExpression	* old_sp = & st -> stack [ st -> attribute_indices [ attr ] ]		8268610	2		=			
ANR	8271199	Identifier	old_sp		8268610	0					
ANR	8271200	UnaryOperationExpression	& st -> stack [ st -> attribute_indices [ attr ] ]		8268610	1					
ANR	8271201	UnaryOperator	&		8268610	0					
ANR	8271202	ArrayIndexing	st -> stack [ st -> attribute_indices [ attr ] ]		8268610	1					
ANR	8271203	PtrMemberAccess	st -> stack		8268610	0					
ANR	8271204	Identifier	st		8268610	0					
ANR	8271205	Identifier	stack		8268610	1					
ANR	8271206	ArrayIndexing	st -> attribute_indices [ attr ]		8268610	1					
ANR	8271207	PtrMemberAccess	st -> attribute_indices		8268610	0					
ANR	8271208	Identifier	st		8268610	0					
ANR	8271209	Identifier	attribute_indices		8268610	1					
ANR	8271210	Identifier	attr		8268610	1					
ANR	8271211	IfStatement	if ( old_sp -> type & pxd_on_heap )		8268610	1					
ANR	8271212	Condition	old_sp -> type & pxd_on_heap	846:36:32660:32685	8268610	0	True				
ANR	8271213	BitAndExpression	old_sp -> type & pxd_on_heap		8268610	0		&			
ANR	8271214	PtrMemberAccess	old_sp -> type		8268610	0					
ANR	8271215	Identifier	old_sp		8268610	0					
ANR	8271216	Identifier	type		8268610	1					
ANR	8271217	Identifier	pxd_on_heap		8268610	1					
ANR	8271218	ExpressionStatement	"gs_free_object ( memory , ( void * ) old_sp -> value . array . data , ""old value for duplicate attribute"" )"	847:36:32724:32971	8268610	1	True				
ANR	8271219	CallExpression	"gs_free_object ( memory , ( void * ) old_sp -> value . array . data , ""old value for duplicate attribute"" )"		8268610	0					
ANR	8271220	Callee	gs_free_object		8268610	0					
ANR	8271221	Identifier	gs_free_object		8268610	0					
ANR	8271222	ArgumentList	memory		8268610	1					
ANR	8271223	Argument	memory		8268610	0					
ANR	8271224	Identifier	memory		8268610	0					
ANR	8271225	Argument	( void * ) old_sp -> value . array . data		8268610	1					
ANR	8271226	CastExpression	( void * ) old_sp -> value . array . data		8268610	0					
ANR	8271227	CastTarget	void *		8268610	0					
ANR	8271228	MemberAccess	old_sp -> value . array . data		8268610	1					
ANR	8271229	MemberAccess	old_sp -> value . array		8268610	0					
ANR	8271230	PtrMemberAccess	old_sp -> value		8268610	0					
ANR	8271231	Identifier	old_sp		8268610	0					
ANR	8271232	Identifier	value		8268610	1					
ANR	8271233	Identifier	array		8268610	1					
ANR	8271234	Identifier	data		8268610	1					
ANR	8271235	Argument	"""old value for duplicate attribute"""		8268610	2					
ANR	8271236	PrimaryExpression	"""old value for duplicate attribute"""		8268610	0					
ANR	8271237	ExpressionStatement	* old_sp = * sp --	851:32:33005:33020	8268610	2	True				
ANR	8271238	AssignmentExpression	* old_sp = * sp --		8268610	0		=			
ANR	8271239	UnaryOperationExpression	* old_sp		8268610	0					
ANR	8271240	UnaryOperator	*		8268610	0					
ANR	8271241	Identifier	old_sp		8268610	1					
ANR	8271242	UnaryOperationExpression	* sp --		8268610	1					
ANR	8271243	UnaryOperator	*		8268610	0					
ANR	8271244	PostIncDecOperationExpression	sp --		8268610	1					
ANR	8271245	Identifier	sp		8268610	0					
ANR	8271246	IncDec	--		8268610	1					
ANR	8271247	ElseStatement	else		8268610	0					
ANR	8271248	ExpressionStatement	st -> attribute_indices [ attr ] = sp - st -> stack	853:32:33089:33133	8268610	0	True				
ANR	8271249	AssignmentExpression	st -> attribute_indices [ attr ] = sp - st -> stack		8268610	0		=			
ANR	8271250	ArrayIndexing	st -> attribute_indices [ attr ]		8268610	0					
ANR	8271251	PtrMemberAccess	st -> attribute_indices		8268610	0					
ANR	8271252	Identifier	st		8268610	0					
ANR	8271253	Identifier	attribute_indices		8268610	1					
ANR	8271254	Identifier	attr		8268610	1					
ANR	8271255	AdditiveExpression	sp - st -> stack		8268610	1		-			
ANR	8271256	Identifier	sp		8268610	0					
ANR	8271257	PtrMemberAccess	st -> stack		8268610	1					
ANR	8271258	Identifier	st		8268610	0					
ANR	8271259	Identifier	stack		8268610	1					
ANR	8271260	ExpressionStatement	p = pnext	854:28:33163:33172	8268610	11	True				
ANR	8271261	AssignmentExpression	p = pnext		8268610	0		=			
ANR	8271262	Identifier	p		8268610	0					
ANR	8271263	Identifier	pnext		8268610	1					
ANR	8271264	ContinueStatement	continue ;	855:28:33202:33210	8268610	12	True				
ANR	8271265	Label	case pxt_dataLength :	856:24:33236:33255	8268610	13	True				
ANR	8271266	Identifier	pxt_dataLength		8268610	0					
ANR	8271267	IfStatement	"if ( uint32at ( p + 2 , true ) == 0 )"		8268610	14					
ANR	8271268	Condition	"uint32at ( p + 2 , true ) == 0"	863:32:33652:33693	8268610	0	True				
ANR	8271269	EqualityExpression	"uint32at ( p + 2 , true ) == 0"		8268610	0		==			
ANR	8271270	CallExpression	"uint32at ( p + 2 , true )"		8268610	0					
ANR	8271271	Callee	uint32at		8268610	0					
ANR	8271272	Identifier	uint32at		8268610	0					
ANR	8271273	ArgumentList	p + 2		8268610	1					
ANR	8271274	Argument	p + 2		8268610	0					
ANR	8271275	AdditiveExpression	p + 2		8268610	0		+			
ANR	8271276	Identifier	p		8268610	0					
ANR	8271277	PrimaryExpression	2		8268610	1					
ANR	8271278	Argument	true		8268610	1					
ANR	8271279	Identifier	true		8268610	0					
ANR	8271280	PrimaryExpression	0		8268610	1					
ANR	8271281	CompoundStatement		572:76:24133:24133	8268610	1					
ANR	8271282	ExpressionStatement	p += 5	864:32:33730:33736	8268610	0	True				
ANR	8271283	AssignmentExpression	p += 5		8268610	0		+=			
ANR	8271284	Identifier	p		8268610	0					
ANR	8271285	PrimaryExpression	5		8268610	1					
ANR	8271286	ContinueStatement	continue ;	865:32:33770:33778	8268610	1	True				
ANR	8271287	BreakStatement	break ;	867:28:33838:33843	8268610	15	True				
ANR	8271288	Label	case pxt_dataLengthByte :	868:24:33869:33892	8268610	16	True				
ANR	8271289	Identifier	pxt_dataLengthByte		8268610	0					
ANR	8271290	IfStatement	if ( p [ 2 ] == 0 )		8268610	17					
ANR	8271291	Condition	p [ 2 ] == 0	870:32:34004:34012	8268610	0	True				
ANR	8271292	EqualityExpression	p [ 2 ] == 0		8268610	0		==			
ANR	8271293	ArrayIndexing	p [ 2 ]		8268610	0					
ANR	8271294	Identifier	p		8268610	0					
ANR	8271295	PrimaryExpression	2		8268610	1					
ANR	8271296	PrimaryExpression	0		8268610	1					
ANR	8271297	CompoundStatement		579:43:24452:24452	8268610	1					
ANR	8271298	ExpressionStatement	p += 2	871:32:34049:34055	8268610	0	True				
ANR	8271299	AssignmentExpression	p += 2		8268610	0		+=			
ANR	8271300	Identifier	p		8268610	0					
ANR	8271301	PrimaryExpression	2		8268610	1					
ANR	8271302	ContinueStatement	continue ;	872:32:34089:34097	8268610	1	True				
ANR	8271303	BreakStatement	break ;	874:28:34157:34162	8268610	18	True				
ANR	8271304	Label	default :	875:24:34188:34195	8268610	19	True				
ANR	8271305	Identifier	default		8268610	0					
ANR	8271306	BreakStatement	break ;	876:28:34225:34230	8268610	20	True				
ANR	8271307	BreakStatement	break ;	879:16:34288:34293	8268610	55	True				
ANR	8271308	Label	default :	880:12:34307:34314	8268610	56	True				
ANR	8271309	Identifier	default		8268610	0					
ANR	8271310	BreakStatement	break ;	881:16:34332:34337	8268610	57	True				
ANR	8271311	ExpressionStatement	st -> last_operator = tag	884:8:34408:34431	8268610	5	True				
ANR	8271312	AssignmentExpression	st -> last_operator = tag		8268610	0		=			
ANR	8271313	PtrMemberAccess	st -> last_operator		8268610	0					
ANR	8271314	Identifier	st		8268610	0					
ANR	8271315	Identifier	last_operator		8268610	1					
ANR	8271316	Identifier	tag		8268610	1					
ANR	8271317	ExpressionStatement	code = gs_note_error ( errorIllegalTag )	885:8:34472:34509	8268610	6	True				
ANR	8271318	AssignmentExpression	code = gs_note_error ( errorIllegalTag )		8268610	0		=			
ANR	8271319	Identifier	code		8268610	0					
ANR	8271320	CallExpression	gs_note_error ( errorIllegalTag )		8268610	1					
ANR	8271321	Callee	gs_note_error		8268610	0					
ANR	8271322	Identifier	gs_note_error		8268610	0					
ANR	8271323	ArgumentList	errorIllegalTag		8268610	1					
ANR	8271324	Argument	errorIllegalTag		8268610	0					
ANR	8271325	Identifier	errorIllegalTag		8268610	0					
ANR	8271326	BreakStatement	break ;	886:8:34519:34524	8268610	7	True				
ANR	8271327	Label	x :	888:2:34534:34535	8268610	31	True				
ANR	8271328	Identifier	x		8268610	0					
ANR	8271329	ExpressionStatement	left = rlimit - p	889:4:34598:34615	8268610	32	True				
ANR	8271330	AssignmentExpression	left = rlimit - p		8268610	0		=			
ANR	8271331	Identifier	left		8268610	0					
ANR	8271332	AdditiveExpression	rlimit - p		8268610	1		-			
ANR	8271333	Identifier	rlimit		8268610	0					
ANR	8271334	Identifier	p		8268610	1					
ANR	8271335	IfStatement	if ( rlimit != pr -> limit )		8268610	33					
ANR	8271336	Condition	rlimit != pr -> limit	890:8:34625:34643	8268610	0	True				
ANR	8271337	EqualityExpression	rlimit != pr -> limit		8268610	0		!=			
ANR	8271338	Identifier	rlimit		8268610	0					
ANR	8271339	PtrMemberAccess	pr -> limit		8268610	1					
ANR	8271340	Identifier	pr		8268610	0					
ANR	8271341	Identifier	limit		8268610	1					
ANR	8271342	CompoundStatement		599:29:25083:25083	8268610	1					
ANR	8271343	IfStatement	if ( left <= next_p - orig_p )		8268610	0					
ANR	8271344	Condition	left <= next_p - orig_p	891:12:34696:34718	8268610	0	True				
ANR	8271345	RelationalExpression	left <= next_p - orig_p		8268610	0		<=			
ANR	8271346	Identifier	left		8268610	0					
ANR	8271347	AdditiveExpression	next_p - orig_p		8268610	1		-			
ANR	8271348	Identifier	next_p		8268610	0					
ANR	8271349	Identifier	orig_p		8268610	1					
ANR	8271350	CompoundStatement		600:37:25158:25158	8268610	1					
ANR	8271351	ExpressionStatement	p = next_p -= left	893:12:34864:34882	8268610	0	True				
ANR	8271352	AssignmentExpression	p = next_p -= left		8268610	0		=			
ANR	8271353	Identifier	p		8268610	0					
ANR	8271354	AssignmentExpression	next_p -= left		8268610	1		-=			
ANR	8271355	Identifier	next_p		8268610	0					
ANR	8271356	Identifier	left		8268610	1					
ANR	8271357	ExpressionStatement	rlimit = pr -> limit	894:12:34896:34914	8268610	1	True				
ANR	8271358	AssignmentExpression	rlimit = pr -> limit		8268610	0		=			
ANR	8271359	Identifier	rlimit		8268610	0					
ANR	8271360	PtrMemberAccess	pr -> limit		8268610	1					
ANR	8271361	Identifier	pr		8268610	0					
ANR	8271362	Identifier	limit		8268610	1					
ANR	8271363	ExpressionStatement	st -> saved_count = 0	895:12:34928:34947	8268610	2	True				
ANR	8271364	AssignmentExpression	st -> saved_count = 0		8268610	0		=			
ANR	8271365	PtrMemberAccess	st -> saved_count		8268610	0					
ANR	8271366	Identifier	st		8268610	0					
ANR	8271367	Identifier	saved_count		8268610	1					
ANR	8271368	PrimaryExpression	0		8268610	1					
ANR	8271369	IfStatement	if ( code >= 0 )		8268610	3					
ANR	8271370	Condition	code >= 0	896:16:34965:34973	8268610	0	True				
ANR	8271371	RelationalExpression	code >= 0		8268610	0		>=			
ANR	8271372	Identifier	code		8268610	0					
ANR	8271373	PrimaryExpression	0		8268610	1					
ANR	8271374	GotoStatement	goto parse ;	897:16:34992:35002	8268610	1	True				
ANR	8271375	Identifier	parse		8268610	0					
ANR	8271376	ElseStatement	else		8268610	0					
ANR	8271377	CompoundStatement		607:15:25456:25456	8268610	0					
ANR	8271378	ExpressionStatement	"memmove ( st -> saved , p + 1 , st -> saved_count = left )"	899:12:35107:35156	8268610	0	True				
ANR	8271379	CallExpression	"memmove ( st -> saved , p + 1 , st -> saved_count = left )"		8268610	0					
ANR	8271380	Callee	memmove		8268610	0					
ANR	8271381	Identifier	memmove		8268610	0					
ANR	8271382	ArgumentList	st -> saved		8268610	1					
ANR	8271383	Argument	st -> saved		8268610	0					
ANR	8271384	PtrMemberAccess	st -> saved		8268610	0					
ANR	8271385	Identifier	st		8268610	0					
ANR	8271386	Identifier	saved		8268610	1					
ANR	8271387	Argument	p + 1		8268610	1					
ANR	8271388	AdditiveExpression	p + 1		8268610	0		+			
ANR	8271389	Identifier	p		8268610	0					
ANR	8271390	PrimaryExpression	1		8268610	1					
ANR	8271391	Argument	st -> saved_count = left		8268610	2					
ANR	8271392	AssignmentExpression	st -> saved_count = left		8268610	0		=			
ANR	8271393	PtrMemberAccess	st -> saved_count		8268610	0					
ANR	8271394	Identifier	st		8268610	0					
ANR	8271395	Identifier	saved_count		8268610	1					
ANR	8271396	Identifier	left		8268610	1					
ANR	8271397	ExpressionStatement	p = next_p	900:12:35170:35180	8268610	1	True				
ANR	8271398	AssignmentExpression	p = next_p		8268610	0		=			
ANR	8271399	Identifier	p		8268610	0					
ANR	8271400	Identifier	next_p		8268610	1					
ANR	8271401	ExpressionStatement	rlimit = pr -> limit	901:12:35194:35212	8268610	2	True				
ANR	8271402	AssignmentExpression	rlimit = pr -> limit		8268610	0		=			
ANR	8271403	Identifier	rlimit		8268610	0					
ANR	8271404	PtrMemberAccess	pr -> limit		8268610	1					
ANR	8271405	Identifier	pr		8268610	0					
ANR	8271406	Identifier	limit		8268610	1					
ANR	8271407	ExpressionStatement	left = rlimit - p	902:12:35226:35243	8268610	3	True				
ANR	8271408	AssignmentExpression	left = rlimit - p		8268610	0		=			
ANR	8271409	Identifier	left		8268610	0					
ANR	8271410	AdditiveExpression	rlimit - p		8268610	1		-			
ANR	8271411	Identifier	rlimit		8268610	0					
ANR	8271412	Identifier	p		8268610	1					
ANR	8271413	IfStatement	if ( code >= 0 )		8268610	34					
ANR	8271414	Condition	code >= 0	906:8:35330:35338	8268610	0	True				
ANR	8271415	RelationalExpression	code >= 0		8268610	0		>=			
ANR	8271416	Identifier	code		8268610	0					
ANR	8271417	PrimaryExpression	0		8268610	1					
ANR	8271418	CompoundStatement		615:19:25778:25778	8268610	1					
ANR	8271419	IfStatement	if ( left + st -> saved_count > sizeof ( st -> saved ) )		8268610	0					
ANR	8271420	Condition	left + st -> saved_count > sizeof ( st -> saved )	907:12:35355:35396	8268610	0	True				
ANR	8271421	RelationalExpression	left + st -> saved_count > sizeof ( st -> saved )		8268610	0		>			
ANR	8271422	AdditiveExpression	left + st -> saved_count		8268610	0		+			
ANR	8271423	Identifier	left		8268610	0					
ANR	8271424	PtrMemberAccess	st -> saved_count		8268610	1					
ANR	8271425	Identifier	st		8268610	0					
ANR	8271426	Identifier	saved_count		8268610	1					
ANR	8271427	SizeofExpression	sizeof ( st -> saved )		8268610	1					
ANR	8271428	Sizeof	sizeof		8268610	0					
ANR	8271429	PtrMemberAccess	st -> saved		8268610	1					
ANR	8271430	Identifier	st		8268610	0					
ANR	8271431	Identifier	saved		8268610	1					
ANR	8271432	CompoundStatement		616:56:25836:25836	8268610	1					
ANR	8271433	ExpressionStatement	code = gs_note_error ( errorInternalOverflow )	908:12:35458:35501	8268610	0	True				
ANR	8271434	AssignmentExpression	code = gs_note_error ( errorInternalOverflow )		8268610	0		=			
ANR	8271435	Identifier	code		8268610	0					
ANR	8271436	CallExpression	gs_note_error ( errorInternalOverflow )		8268610	1					
ANR	8271437	Callee	gs_note_error		8268610	0					
ANR	8271438	Identifier	gs_note_error		8268610	0					
ANR	8271439	ArgumentList	errorInternalOverflow		8268610	1					
ANR	8271440	Argument	errorInternalOverflow		8268610	0					
ANR	8271441	Identifier	errorInternalOverflow		8268610	0					
ANR	8271442	ExpressionStatement	st -> saved_count = 0	909:12:35515:35534	8268610	1	True				
ANR	8271443	AssignmentExpression	st -> saved_count = 0		8268610	0		=			
ANR	8271444	PtrMemberAccess	st -> saved_count		8268610	0					
ANR	8271445	Identifier	st		8268610	0					
ANR	8271446	Identifier	saved_count		8268610	1					
ANR	8271447	PrimaryExpression	0		8268610	1					
ANR	8271448	ElseStatement	else		8268610	0					
ANR	8271449	CompoundStatement		619:15:25988:25988	8268610	0					
ANR	8271450	ExpressionStatement	"memcpy ( & st -> saved [ st -> saved_count ] , p + 1 , left )"	911:12:35565:35613	8268610	0	True				
ANR	8271451	CallExpression	"memcpy ( & st -> saved [ st -> saved_count ] , p + 1 , left )"		8268610	0					
ANR	8271452	Callee	memcpy		8268610	0					
ANR	8271453	Identifier	memcpy		8268610	0					
ANR	8271454	ArgumentList	& st -> saved [ st -> saved_count ]		8268610	1					
ANR	8271455	Argument	& st -> saved [ st -> saved_count ]		8268610	0					
ANR	8271456	UnaryOperationExpression	& st -> saved [ st -> saved_count ]		8268610	0					
ANR	8271457	UnaryOperator	&		8268610	0					
ANR	8271458	ArrayIndexing	st -> saved [ st -> saved_count ]		8268610	1					
ANR	8271459	PtrMemberAccess	st -> saved		8268610	0					
ANR	8271460	Identifier	st		8268610	0					
ANR	8271461	Identifier	saved		8268610	1					
ANR	8271462	PtrMemberAccess	st -> saved_count		8268610	1					
ANR	8271463	Identifier	st		8268610	0					
ANR	8271464	Identifier	saved_count		8268610	1					
ANR	8271465	Argument	p + 1		8268610	1					
ANR	8271466	AdditiveExpression	p + 1		8268610	0		+			
ANR	8271467	Identifier	p		8268610	0					
ANR	8271468	PrimaryExpression	1		8268610	1					
ANR	8271469	Argument	left		8268610	2					
ANR	8271470	Identifier	left		8268610	0					
ANR	8271471	ExpressionStatement	st -> saved_count += left	912:12:35627:35650	8268610	1	True				
ANR	8271472	AssignmentExpression	st -> saved_count += left		8268610	0		+=			
ANR	8271473	PtrMemberAccess	st -> saved_count		8268610	0					
ANR	8271474	Identifier	st		8268610	0					
ANR	8271475	Identifier	saved_count		8268610	1					
ANR	8271476	Identifier	left		8268610	1					
ANR	8271477	ExpressionStatement	p = rlimit	913:12:35664:35674	8268610	2	True				
ANR	8271478	AssignmentExpression	p = rlimit		8268610	0		=			
ANR	8271479	Identifier	p		8268610	0					
ANR	8271480	Identifier	rlimit		8268610	1					
ANR	8271481	ExpressionStatement	pr -> ptr = p	916:4:35696:35707	8268610	35	True				
ANR	8271482	AssignmentExpression	pr -> ptr = p		8268610	0		=			
ANR	8271483	PtrMemberAccess	pr -> ptr		8268610	0					
ANR	8271484	Identifier	pr		8268610	0					
ANR	8271485	Identifier	ptr		8268610	1					
ANR	8271486	Identifier	p		8268610	1					
ANR	8271487	ExpressionStatement	st -> stack_count = sp - st -> stack	917:4:35713:35745	8268610	36	True				
ANR	8271488	AssignmentExpression	st -> stack_count = sp - st -> stack		8268610	0		=			
ANR	8271489	PtrMemberAccess	st -> stack_count		8268610	0					
ANR	8271490	Identifier	st		8268610	0					
ANR	8271491	Identifier	stack_count		8268610	1					
ANR	8271492	AdditiveExpression	sp - st -> stack		8268610	1		-			
ANR	8271493	Identifier	sp		8268610	0					
ANR	8271494	PtrMemberAccess	st -> stack		8268610	1					
ANR	8271495	Identifier	st		8268610	0					
ANR	8271496	Identifier	stack		8268610	1					
ANR	8271497	ForStatement	for ( ; sp > st -> stack ; -- sp )		8268610	37					
ANR	8271498	Condition	sp > st -> stack	920:11:35868:35881	8268610	0	True				
ANR	8271499	RelationalExpression	sp > st -> stack		8268610	0		>			
ANR	8271500	Identifier	sp		8268610	0					
ANR	8271501	PtrMemberAccess	st -> stack		8268610	1					
ANR	8271502	Identifier	st		8268610	0					
ANR	8271503	Identifier	stack		8268610	1					
ANR	8271504	UnaryExpression	-- sp	920:27:35884:35887	8268610	1	True				
ANR	8271505	IncDec	--		8268610	0					
ANR	8271506	Identifier	sp		8268610	1					
ANR	8271507	IfStatement	if ( ( sp -> type & ( pxd_array | pxd_on_heap ) ) == pxd_array )		8268610	2					
ANR	8271508	Condition	( sp -> type & ( pxd_array | pxd_on_heap ) ) == pxd_array	921:12:35902:35952	8268610	0	True				
ANR	8271509	EqualityExpression	( sp -> type & ( pxd_array | pxd_on_heap ) ) == pxd_array		8268610	0		==			
ANR	8271510	BitAndExpression	sp -> type & ( pxd_array | pxd_on_heap )		8268610	0		&			
ANR	8271511	PtrMemberAccess	sp -> type		8268610	0					
ANR	8271512	Identifier	sp		8268610	0					
ANR	8271513	Identifier	type		8268610	1					
ANR	8271514	InclusiveOrExpression	pxd_array | pxd_on_heap		8268610	1		|			
ANR	8271515	Identifier	pxd_array		8268610	0					
ANR	8271516	Identifier	pxd_on_heap		8268610	1					
ANR	8271517	Identifier	pxd_array		8268610	1					
ANR	8271518	CompoundStatement		631:12:26406:26541	8268610	1					
ANR	8271519	IdentifierDeclStatement	"int code = px_save_array ( sp , pxs , ""px stack array to heap"" , sp -> value . array . size * value_size ( sp ) ) ;"	922:12:35969:36104	8268610	0	True				
ANR	8271520	IdentifierDecl	"code = px_save_array ( sp , pxs , ""px stack array to heap"" , sp -> value . array . size * value_size ( sp ) )"		8268610	0					
ANR	8271521	IdentifierDeclType	int		8268610	0					
ANR	8271522	Identifier	code		8268610	1					
ANR	8271523	AssignmentExpression	"code = px_save_array ( sp , pxs , ""px stack array to heap"" , sp -> value . array . size * value_size ( sp ) )"		8268610	2		=			
ANR	8271524	Identifier	code		8268610	0					
ANR	8271525	CallExpression	"px_save_array ( sp , pxs , ""px stack array to heap"" , sp -> value . array . size * value_size ( sp ) )"		8268610	1					
ANR	8271526	Callee	px_save_array		8268610	0					
ANR	8271527	Identifier	px_save_array		8268610	0					
ANR	8271528	ArgumentList	sp		8268610	1					
ANR	8271529	Argument	sp		8268610	0					
ANR	8271530	Identifier	sp		8268610	0					
ANR	8271531	Argument	pxs		8268610	1					
ANR	8271532	Identifier	pxs		8268610	0					
ANR	8271533	Argument	"""px stack array to heap"""		8268610	2					
ANR	8271534	PrimaryExpression	"""px stack array to heap"""		8268610	0					
ANR	8271535	Argument	sp -> value . array . size * value_size ( sp )		8268610	3					
ANR	8271536	MultiplicativeExpression	sp -> value . array . size * value_size ( sp )		8268610	0		*			
ANR	8271537	MemberAccess	sp -> value . array . size		8268610	0					
ANR	8271538	MemberAccess	sp -> value . array		8268610	0					
ANR	8271539	PtrMemberAccess	sp -> value		8268610	0					
ANR	8271540	Identifier	sp		8268610	0					
ANR	8271541	Identifier	value		8268610	1					
ANR	8271542	Identifier	array		8268610	1					
ANR	8271543	Identifier	size		8268610	1					
ANR	8271544	CallExpression	value_size ( sp )		8268610	1					
ANR	8271545	Callee	value_size		8268610	0					
ANR	8271546	Identifier	value_size		8268610	0					
ANR	8271547	ArgumentList	sp		8268610	1					
ANR	8271548	Argument	sp		8268610	0					
ANR	8271549	Identifier	sp		8268610	0					
ANR	8271550	IfStatement	if ( code < 0 )		8268610	1					
ANR	8271551	Condition	code < 0	925:16:36123:36130	8268610	0	True				
ANR	8271552	RelationalExpression	code < 0		8268610	0		<			
ANR	8271553	Identifier	code		8268610	0					
ANR	8271554	PrimaryExpression	0		8268610	1					
ANR	8271555	BreakStatement	break ;	926:16:36149:36154	8268610	1	True				
ANR	8271556	ExpressionStatement	sp -> type |= pxd_on_heap	927:12:36168:36191	8268610	2	True				
ANR	8271557	AssignmentExpression	sp -> type |= pxd_on_heap		8268610	0		|=			
ANR	8271558	PtrMemberAccess	sp -> type		8268610	0					
ANR	8271559	Identifier	sp		8268610	0					
ANR	8271560	Identifier	type		8268610	1					
ANR	8271561	Identifier	pxd_on_heap		8268610	1					
ANR	8271562	IfStatement	if ( code < 0 && syntax != 0 )		8268610	38					
ANR	8271563	Condition	code < 0 && syntax != 0	929:8:36211:36233	8268610	0	True				
ANR	8271564	AndExpression	code < 0 && syntax != 0		8268610	0		&&			
ANR	8271565	RelationalExpression	code < 0		8268610	0		<			
ANR	8271566	Identifier	code		8268610	0					
ANR	8271567	PrimaryExpression	0		8268610	1					
ANR	8271568	EqualityExpression	syntax != 0		8268610	1		!=			
ANR	8271569	Identifier	syntax		8268610	0					
ANR	8271570	PrimaryExpression	0		8268610	1					
ANR	8271571	CompoundStatement		638:33:26673:26673	8268610	1					
ANR	8271572	ExpressionStatement	st -> macro_state ^= syntax -> state_transition	930:8:36284:36327	8268610	0	True				
ANR	8271573	AssignmentExpression	st -> macro_state ^= syntax -> state_transition		8268610	0		^=			
ANR	8271574	PtrMemberAccess	st -> macro_state		8268610	0					
ANR	8271575	Identifier	st		8268610	0					
ANR	8271576	Identifier	macro_state		8268610	1					
ANR	8271577	PtrMemberAccess	syntax -> state_transition		8268610	1					
ANR	8271578	Identifier	syntax		8268610	0					
ANR	8271579	Identifier	state_transition		8268610	1					
ANR	8271580	ReturnStatement	return code ;	932:4:36339:36350	8268610	39	True				
ANR	8271581	Identifier	code		8268610	0					
ANR	8271582	ReturnType	int		8268610	1					
ANR	8271583	Identifier	px_process		8268610	2					
ANR	8271584	ParameterList	"px_parser_state_t * st , px_state_t * pxs , stream_cursor_read * pr"		8268610	3					
ANR	8271585	Parameter	px_parser_state_t * st	291:11:9495:9516	8268610	0	True				
ANR	8271586	ParameterType	px_parser_state_t *		8268610	0					
ANR	8271587	Identifier	st		8268610	1					
ANR	8271588	Parameter	px_state_t * pxs	291:35:9519:9534	8268610	1	True				
ANR	8271589	ParameterType	px_state_t *		8268610	0					
ANR	8271590	Identifier	pxs		8268610	1					
ANR	8271591	Parameter	stream_cursor_read * pr	291:53:9537:9559	8268610	2	True				
ANR	8271592	ParameterType	stream_cursor_read *		8268610	0					
ANR	8271593	Identifier	pr		8268610	1					
ANR	8271594	CFGEntryNode	ENTRY		8268610		True				
ANR	8271595	CFGExitNode	EXIT		8268610		True				
ANR	8271596	InfiniteForNode	true		8268610		True				
ANR	8271597	Symbol	* sp		8268610						
ANR	8271598	Symbol	* * pavt		8268610						
ANR	8271599	Symbol	pr		8268610						
ANR	8271600	Symbol	* st		8268610						
ANR	8271601	Symbol	pv		8268610						
ANR	8271602	Symbol	pxPassThrough		8268610						
ANR	8271603	Symbol	data_array		8268610						
ANR	8271604	Symbol	pxt_attr_ubyte		8268610						
ANR	8271605	Symbol	orig_p		8268610						
ANR	8271606	Symbol	* pxs		8268610						
ANR	8271607	Symbol	st -> big_endian		8268610						
ANR	8271608	Symbol	data_array . value		8268610						
ANR	8271609	Symbol	* st -> attribute_indices		8268610						
ANR	8271610	Symbol	* px_tag_0_names		8268610						
ANR	8271611	Symbol	errorIllegalAttribute		8268610						
ANR	8271612	Symbol	errorIllegalOperatorSequence		8268610						
ANR	8271613	Symbol	rlimit		8268610						
ANR	8271614	Symbol	st -> macro_state		8268610						
ANR	8271615	Symbol	* pod -> proc		8268610						
ANR	8271616	Symbol	* sp -> value . ia		8268610						
ANR	8271617	Symbol	* sp --		8268610						
ANR	8271618	Symbol	pxNeedData		8268610						
ANR	8271619	Symbol	st -> stack [ st -> attribute_indices [ pxaVUDataLength ] ] . value		8268610						
ANR	8271620	Symbol	pavt -> proc		8268610						
ANR	8271621	Symbol	errorIllegalAttributeDataType		8268610						
ANR	8271622	Symbol	ra		8268610						
ANR	8271623	Symbol	st -> saved		8268610						
ANR	8271624	Symbol	pxt_attr_uint16		8268610						
ANR	8271625	Symbol	size		8268610						
ANR	8271626	Symbol	left		8268610						
ANR	8271627	Symbol	st -> stack		8268610						
ANR	8271628	Symbol	& st -> args		8268610						
ANR	8271629	Symbol	* * * st		8268610						
ANR	8271630	Symbol	st -> attribute_indices		8268610						
ANR	8271631	Symbol	pv -> type		8268610						
ANR	8271632	Symbol	st -> args . source . position		8268610						
ANR	8271633	Symbol	pxd_uint32		8268610						
ANR	8271634	Symbol	pod		8268610						
ANR	8271635	Symbol	pxs -> memory		8268610						
ANR	8271636	Symbol	* pxaVUDataLength		8268610						
ANR	8271637	Symbol	* syntax		8268610						
ANR	8271638	Symbol	acode		8268610						
ANR	8271639	Symbol	sp [ 1 ] . value . array . size		8268610						
ANR	8271640	Symbol	min		8268610						
ANR	8271641	Symbol	e_ExitLanguage		8268610						
ANR	8271642	Symbol	old_sp -> value		8268610						
ANR	8271643	Symbol	st -> last_operator		8268610						
ANR	8271644	Symbol	pv -> value . i		8268610						
ANR	8271645	Symbol	pavt		8268610						
ANR	8271646	Symbol	sp		8268610						
ANR	8271647	Symbol	st		8268610						
ANR	8271648	Symbol	st -> saved_count		8268610						
ANR	8271649	Symbol	tname		8268610						
ANR	8271650	Symbol	i		8268610						
ANR	8271651	Symbol	st -> args . pv		8268610						
ANR	8271652	Symbol	p		8268610						
ANR	8271653	Symbol	pod -> attrs		8268610						
ANR	8271654	Symbol	pxd_ubyte		8268610						
ANR	8271655	Symbol	pxaVUDataLength		8268610						
ANR	8271656	Symbol	ppv		8268610						
ANR	8271657	Symbol	pxVendorUnique		8268610						
ANR	8271658	Symbol	pxd_uint16		8268610						
ANR	8271659	Symbol	* st -> stack		8268610						
ANR	8271660	Symbol	pod -> proc		8268610						
ANR	8271661	Symbol	pr -> limit		8268610						
ANR	8271662	Symbol	dest		8268610						
ANR	8271663	Symbol	dp		8268610						
ANR	8271664	Symbol	st -> args . source . phase		8268610						
ANR	8271665	Symbol	memcmp		8268610						
ANR	8271666	Symbol	px_high_level_pattern		8268610						
ANR	8271667	Symbol	errorExtraData		8268610						
ANR	8271668	Symbol	* px_attribute_names		8268610						
ANR	8271669	Symbol	old_sp -> type		8268610						
ANR	8271670	Symbol	pal		8268610						
ANR	8271671	Symbol	pr -> ptr		8268610						
ANR	8271672	Symbol	pxd_array		8268610						
ANR	8271673	Symbol	count		8268610						
ANR	8271674	Symbol	errorDataSourceNotOpen		8268610						
ANR	8271675	Symbol	sp -> value . array . data		8268610						
ANR	8271676	Symbol	st -> data_left		8268610						
ANR	8271677	Symbol	* px_tag_c0_names		8268610						
ANR	8271678	Symbol	memory		8268610						
ANR	8271679	Symbol	* tag		8268610						
ANR	8271680	Symbol	sp -> value . array . size		8268610						
ANR	8271681	Symbol	pxtPassThrough		8268610						
ANR	8271682	Symbol	pxd_representation		8268610						
ANR	8271683	Symbol	px_attr_value_types		8268610						
ANR	8271684	Symbol	pxs -> data_source_open		8268610						
ANR	8271685	Symbol	~pavt		8268610						
ANR	8271686	Symbol	~pavt -> mask		8268610						
ANR	8271687	Symbol	ulong		8268610						
ANR	8271688	Symbol	pxd_on_heap		8268610						
ANR	8271689	Symbol	sp -> type		8268610						
ANR	8271690	Symbol	px_tag_c0_names		8268610						
ANR	8271691	Symbol	pavt -> mask		8268610						
ANR	8271692	Symbol	syntax -> state_transition		8268610						
ANR	8271693	Symbol	pxt1b		8268610						
ANR	8271694	Symbol	old_sp -> value . array . data		8268610						
ANR	8271695	Symbol	syntax -> state_mask		8268610						
ANR	8271696	Symbol	false		8268610						
ANR	8271697	Symbol	sp -> value . ra		8268610						
ANR	8271698	Symbol	sp -> value . array		8268610						
ANR	8271699	Symbol	st -> operator_count		8268610						
ANR	8271700	Symbol	pavt -> limit		8268610						
ANR	8271701	Symbol	gs_note_error		8268610						
ANR	8271702	Symbol	get_sint16		8268610						
ANR	8271703	Symbol	syntax		8268610						
ANR	8271704	Symbol	pxd_big_endian		8268610						
ANR	8271705	Symbol	old_sp		8268610						
ANR	8271706	Symbol	syntax -> state_value		8268610						
ANR	8271707	Symbol	px_save_array		8268610						
ANR	8271708	Symbol	* pavt		8268610						
ANR	8271709	Symbol	pv -> value		8268610						
ANR	8271710	Symbol	* sp -> value . ra		8268610						
ANR	8271711	Symbol	required		8268610						
ANR	8271712	Symbol	errorIllegalTag		8268610						
ANR	8271713	Symbol	* sp -> value		8268610						
ANR	8271714	Symbol	old_sp -> value . array		8268610						
ANR	8271715	Symbol	* * pxaVUDataLength		8268610						
ANR	8271716	Symbol	ia		8268610						
ANR	8271717	Symbol	sp [ 1 ] . value . array		8268610						
ANR	8271718	Symbol	* * pod		8268610						
ANR	8271719	Symbol	pxd_real32		8268610						
ANR	8271720	Symbol	data_array . type		8268610						
ANR	8271721	Symbol	double		8268610						
ANR	8271722	Symbol	* st -> data_proc		8268610						
ANR	8271723	Symbol	index		8268610						
ANR	8271724	Symbol	pxd_xy		8268610						
ANR	8271725	Symbol	* pod		8268610						
ANR	8271726	Symbol	gs_error_Remap_Color		8268610						
ANR	8271727	Symbol	get_sint32		8268610						
ANR	8271728	Symbol	& data_array		8268610						
ANR	8271729	Symbol	pnext		8268610						
ANR	8271730	Symbol	pxd_box		8268610						
ANR	8271731	Symbol	* * st -> attribute_indices		8268610						
ANR	8271732	Symbol	pxd_scalar		8268610						
ANR	8271733	Symbol	next_p		8268610						
ANR	8271734	Symbol	sp -> attribute		8268610						
ANR	8271735	Symbol	avail		8268610						
ANR	8271736	Symbol	* old_sp		8268610						
ANR	8271737	Symbol	pxs		8268610						
ANR	8271738	Symbol	px_tag_0_names		8268610						
ANR	8271739	Symbol	tag_syntax		8268610						
ANR	8271740	Symbol	st -> args		8268610						
ANR	8271741	Symbol	st -> stack [ st -> attribute_indices [ pxaVUDataLength ] ] . value . i		8268610						
ANR	8271742	Symbol	st -> args . parser		8268610						
ANR	8271743	Symbol	st -> args . source . available		8268610						
ANR	8271744	Symbol	* pavt -> proc		8268610						
ANR	8271745	Symbol	used		8268610						
ANR	8271746	Symbol	st -> stack_count		8268610						
ANR	8271747	Symbol	errorMissingAttribute		8268610						
ANR	8271748	Symbol	gs_debug_c		8268610						
ANR	8271749	Symbol	tag		8268610						
ANR	8271750	Symbol	pxd_structure		8268610						
ANR	8271751	Symbol	st -> args . source		8268610						
ANR	8271752	Symbol	data_array . value . array . data		8268610						
ANR	8271753	Symbol	min_left		8268610						
ANR	8271754	Symbol	errorMissingData		8268610						
ANR	8271755	Symbol	format		8268610						
ANR	8271756	Symbol	pxs -> pgs		8268610						
ANR	8271757	Symbol	* pr		8268610						
ANR	8271758	Symbol	uint32at		8268610						
ANR	8271759	Symbol	sp -> value		8268610						
ANR	8271760	Symbol	get_uint16		8268610						
ANR	8271761	Symbol	* pv		8268610						
ANR	8271762	Symbol	px_attribute_names		8268610						
ANR	8271763	Symbol	true		8268610						
ANR	8271764	Symbol	errorInternalOverflow		8268610						
ANR	8271765	Symbol	st -> args . source . data		8268610						
ANR	8271766	Symbol	sp [ 1 ] . type		8268610						
ANR	8271767	Symbol	* attr		8268610						
ANR	8271768	Symbol	data_array . value . array		8268610						
ANR	8271769	Symbol	code		8268610						
ANR	8271770	Symbol	stack_limit		8268610						
ANR	8271771	Symbol	value_size		8268610						
ANR	8271772	Symbol	* pal		8268610						
ANR	8271773	Symbol	scale		8268610						
ANR	8271774	Symbol	* * sp		8268610						
ANR	8271775	Symbol	get_real32		8268610						
ANR	8271776	Symbol	* * st		8268610						
ANR	8271777	Symbol	st -> parent_operator_count		8268610						
ANR	8271778	Symbol	pxd_sint16		8268610						
ANR	8271779	Symbol	attr		8268610						
ANR	8271780	Symbol	* ppv		8268610						
ANR	8271781	Symbol	move		8268610						
ANR	8271782	Symbol	( syntax = & tag_syntax [ tag = p [ 1 ] ] ) -> min_input		8268610						
ANR	8271783	Symbol	get_uint32		8268610						
ANR	8271784	Symbol	aname		8268610						
ANR	8271785	Symbol	st -> memory		8268610						
ANR	8271786	Symbol	sp [ 1 ] . value		8268610						
ANR	8271787	Symbol	st -> data_proc		8268610						
ANR	8271788	Symbol	pxd_sint32		8268610						
ANR	8271789	Symbol	nbytes		8268610						
ANR	8271790	Symbol	px_operator_definitions		8268610						
ANR	8271791	Symbol	sp -> value . ia		8268610						
ANR	8271792	Symbol	* ~pavt		8268610						
ANR	8271793	Symbol	* i		8268610						
ANR	8271794	Symbol	* p		8268610						
ANR	8271795	Symbol	data_array . value . array . size		8268610						
ANR	8271796	Symbol	px_attribute_next		8268610						
ANR	8271797	Function	px_parser_data_left	935:0:36355:36434							
ANR	8271798	FunctionDef	px_parser_data_left (px_parser_state_t * pxp)		8271797	0					
ANR	8271799	CompoundStatement		937:0:36405:36434	8271797	0					
ANR	8271800	ReturnStatement	return pxp -> data_left ;	938:4:36411:36432	8271797	0	True				
ANR	8271801	PtrMemberAccess	pxp -> data_left		8271797	0					
ANR	8271802	Identifier	pxp		8271797	0					
ANR	8271803	Identifier	data_left		8271797	1					
ANR	8271804	ReturnType	uint		8271797	1					
ANR	8271805	Identifier	px_parser_data_left		8271797	2					
ANR	8271806	ParameterList	px_parser_state_t * pxp		8271797	3					
ANR	8271807	Parameter	px_parser_state_t * pxp	936:20:36380:36402	8271797	0	True				
ANR	8271808	ParameterType	px_parser_state_t *		8271797	0					
ANR	8271809	Identifier	pxp		8271797	1					
ANR	8271810	CFGEntryNode	ENTRY		8271797		True				
ANR	8271811	CFGExitNode	EXIT		8271797		True				
ANR	8271812	Symbol	* pxp		8271797						
ANR	8271813	Symbol	pxp -> data_left		8271797						
ANR	8271814	Symbol	pxp		8271797						
