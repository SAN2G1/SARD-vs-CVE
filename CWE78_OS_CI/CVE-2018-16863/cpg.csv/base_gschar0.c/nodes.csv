command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	451638	File	data/converged/CVE-2018-16863_ghostpdl/base_gschar0.c								
ANR	451639	Function	gs_stack_modal_fonts	32:0:953:1720							
ANR	451640	FunctionDef	gs_stack_modal_fonts (gs_text_enum_t * pte)		451639	0					
ANR	451641	CompoundStatement		34:0:1006:1720	451639	0					
ANR	451642	IdentifierDeclStatement	int fdepth = pte -> fstack . depth ;	35:4:1012:1042	451639	0	True				
ANR	451643	IdentifierDecl	fdepth = pte -> fstack . depth		451639	0					
ANR	451644	IdentifierDeclType	int		451639	0					
ANR	451645	Identifier	fdepth		451639	1					
ANR	451646	AssignmentExpression	fdepth = pte -> fstack . depth		451639	2		=			
ANR	451647	Identifier	fdepth		451639	0					
ANR	451648	MemberAccess	pte -> fstack . depth		451639	1					
ANR	451649	PtrMemberAccess	pte -> fstack		451639	0					
ANR	451650	Identifier	pte		451639	0					
ANR	451651	Identifier	fstack		451639	1					
ANR	451652	Identifier	depth		451639	1					
ANR	451653	IdentifierDeclStatement	gs_font * cfont = pte -> fstack . items [ fdepth ] . font ;	36:4:1048:1095	451639	1	True				
ANR	451654	IdentifierDecl	* cfont = pte -> fstack . items [ fdepth ] . font		451639	0					
ANR	451655	IdentifierDeclType	gs_font *		451639	0					
ANR	451656	Identifier	cfont		451639	1					
ANR	451657	AssignmentExpression	* cfont = pte -> fstack . items [ fdepth ] . font		451639	2		=			
ANR	451658	Identifier	cfont		451639	0					
ANR	451659	MemberAccess	pte -> fstack . items [ fdepth ] . font		451639	1					
ANR	451660	ArrayIndexing	pte -> fstack . items [ fdepth ]		451639	0					
ANR	451661	MemberAccess	pte -> fstack . items		451639	0					
ANR	451662	PtrMemberAccess	pte -> fstack		451639	0					
ANR	451663	Identifier	pte		451639	0					
ANR	451664	Identifier	fstack		451639	1					
ANR	451665	Identifier	items		451639	1					
ANR	451666	Identifier	fdepth		451639	1					
ANR	451667	Identifier	font		451639	1					
ANR	451668	WhileStatement	while ( cfont -> FontType == ft_composite )		451639	2					
ANR	451669	Condition	cfont -> FontType == ft_composite	38:11:1109:1139	451639	0	True				
ANR	451670	EqualityExpression	cfont -> FontType == ft_composite		451639	0		==			
ANR	451671	PtrMemberAccess	cfont -> FontType		451639	0					
ANR	451672	Identifier	cfont		451639	0					
ANR	451673	Identifier	FontType		451639	1					
ANR	451674	Identifier	ft_composite		451639	1					
ANR	451675	CompoundStatement		5:44:135:135	451639	1					
ANR	451676	Statement	gs_font_type0	39:8:1152:1164	451639	0	True				
ANR	451677	Statement	*	39:22:1166:1166	451639	1	True				
ANR	451678	Statement	const	39:23:1167:1171	451639	2	True				
ANR	451679	ExpressionStatement	cmfont = ( gs_font_type0 * ) cfont	39:29:1173:1205	451639	3	True				
ANR	451680	AssignmentExpression	cmfont = ( gs_font_type0 * ) cfont		451639	0		=			
ANR	451681	Identifier	cmfont		451639	0					
ANR	451682	CastExpression	( gs_font_type0 * ) cfont		451639	1					
ANR	451683	CastTarget	gs_font_type0 *		451639	0					
ANR	451684	Identifier	cfont		451639	1					
ANR	451685	IfStatement	if ( ! fmap_type_is_modal ( cmfont -> data . FMapType ) )		451639	4					
ANR	451686	Condition	! fmap_type_is_modal ( cmfont -> data . FMapType )	41:12:1220:1261	451639	0	True				
ANR	451687	UnaryOperationExpression	! fmap_type_is_modal ( cmfont -> data . FMapType )		451639	0					
ANR	451688	UnaryOperator	!		451639	0					
ANR	451689	CallExpression	fmap_type_is_modal ( cmfont -> data . FMapType )		451639	1					
ANR	451690	Callee	fmap_type_is_modal		451639	0					
ANR	451691	Identifier	fmap_type_is_modal		451639	0					
ANR	451692	ArgumentList	cmfont -> data . FMapType		451639	1					
ANR	451693	Argument	cmfont -> data . FMapType		451639	0					
ANR	451694	MemberAccess	cmfont -> data . FMapType		451639	0					
ANR	451695	PtrMemberAccess	cmfont -> data		451639	0					
ANR	451696	Identifier	cmfont		451639	0					
ANR	451697	Identifier	data		451639	1					
ANR	451698	Identifier	FMapType		451639	1					
ANR	451699	BreakStatement	break ;	42:12:1276:1281	451639	1	True				
ANR	451700	IfStatement	if ( fdepth == MAX_FONT_STACK )		451639	5					
ANR	451701	Condition	fdepth == MAX_FONT_STACK	43:12:1295:1318	451639	0	True				
ANR	451702	EqualityExpression	fdepth == MAX_FONT_STACK		451639	0		==			
ANR	451703	Identifier	fdepth		451639	0					
ANR	451704	Identifier	MAX_FONT_STACK		451639	1					
ANR	451705	ExpressionStatement	return_error ( gs_error_invalidfont )	44:12:1333:1367	451639	1	True				
ANR	451706	CallExpression	return_error ( gs_error_invalidfont )		451639	0					
ANR	451707	Callee	return_error		451639	0					
ANR	451708	Identifier	return_error		451639	0					
ANR	451709	ArgumentList	gs_error_invalidfont		451639	1					
ANR	451710	Argument	gs_error_invalidfont		451639	0					
ANR	451711	Identifier	gs_error_invalidfont		451639	0					
ANR	451712	ExpressionStatement	fdepth ++	45:8:1377:1385	451639	6	True				
ANR	451713	PostIncDecOperationExpression	fdepth ++		451639	0					
ANR	451714	Identifier	fdepth		451639	0					
ANR	451715	IncDec	++		451639	1					
ANR	451716	ExpressionStatement	cfont = cmfont -> data . FDepVector [ cmfont -> data . Encoding [ 0 ] ]	46:8:1395:1452	451639	7	True				
ANR	451717	AssignmentExpression	cfont = cmfont -> data . FDepVector [ cmfont -> data . Encoding [ 0 ] ]		451639	0		=			
ANR	451718	Identifier	cfont		451639	0					
ANR	451719	ArrayIndexing	cmfont -> data . FDepVector [ cmfont -> data . Encoding [ 0 ] ]		451639	1					
ANR	451720	MemberAccess	cmfont -> data . FDepVector		451639	0					
ANR	451721	PtrMemberAccess	cmfont -> data		451639	0					
ANR	451722	Identifier	cmfont		451639	0					
ANR	451723	Identifier	data		451639	1					
ANR	451724	Identifier	FDepVector		451639	1					
ANR	451725	ArrayIndexing	cmfont -> data . Encoding [ 0 ]		451639	1					
ANR	451726	MemberAccess	cmfont -> data . Encoding		451639	0					
ANR	451727	PtrMemberAccess	cmfont -> data		451639	0					
ANR	451728	Identifier	cmfont		451639	0					
ANR	451729	Identifier	data		451639	1					
ANR	451730	Identifier	Encoding		451639	1					
ANR	451731	PrimaryExpression	0		451639	1					
ANR	451732	ExpressionStatement	pte -> fstack . items [ fdepth ] . font = cfont	47:8:1462:1500	451639	8	True				
ANR	451733	AssignmentExpression	pte -> fstack . items [ fdepth ] . font = cfont		451639	0		=			
ANR	451734	MemberAccess	pte -> fstack . items [ fdepth ] . font		451639	0					
ANR	451735	ArrayIndexing	pte -> fstack . items [ fdepth ]		451639	0					
ANR	451736	MemberAccess	pte -> fstack . items		451639	0					
ANR	451737	PtrMemberAccess	pte -> fstack		451639	0					
ANR	451738	Identifier	pte		451639	0					
ANR	451739	Identifier	fstack		451639	1					
ANR	451740	Identifier	items		451639	1					
ANR	451741	Identifier	fdepth		451639	1					
ANR	451742	Identifier	font		451639	1					
ANR	451743	Identifier	cfont		451639	1					
ANR	451744	ExpressionStatement	pte -> fstack . items [ fdepth - 1 ] . index = 0	48:8:1510:1549	451639	9	True				
ANR	451745	AssignmentExpression	pte -> fstack . items [ fdepth - 1 ] . index = 0		451639	0		=			
ANR	451746	MemberAccess	pte -> fstack . items [ fdepth - 1 ] . index		451639	0					
ANR	451747	ArrayIndexing	pte -> fstack . items [ fdepth - 1 ]		451639	0					
ANR	451748	MemberAccess	pte -> fstack . items		451639	0					
ANR	451749	PtrMemberAccess	pte -> fstack		451639	0					
ANR	451750	Identifier	pte		451639	0					
ANR	451751	Identifier	fstack		451639	1					
ANR	451752	Identifier	items		451639	1					
ANR	451753	AdditiveExpression	fdepth - 1		451639	1		-			
ANR	451754	Identifier	fdepth		451639	0					
ANR	451755	PrimaryExpression	1		451639	1					
ANR	451756	Identifier	index		451639	1					
ANR	451757	PrimaryExpression	0		451639	1					
ANR	451758	ExpressionStatement	"if_debug2m ( 'j' , pte -> memory , ""[j]stacking depth=%d font=0x%lx\\n"" , fdepth , ( ulong ) cfont )"	49:8:1559:1666	451639	10	True				
ANR	451759	CallExpression	"if_debug2m ( 'j' , pte -> memory , ""[j]stacking depth=%d font=0x%lx\\n"" , fdepth , ( ulong ) cfont )"		451639	0					
ANR	451760	Callee	if_debug2m		451639	0					
ANR	451761	Identifier	if_debug2m		451639	0					
ANR	451762	ArgumentList	'j'		451639	1					
ANR	451763	Argument	'j'		451639	0					
ANR	451764	PrimaryExpression	'j'		451639	0					
ANR	451765	Argument	pte -> memory		451639	1					
ANR	451766	PtrMemberAccess	pte -> memory		451639	0					
ANR	451767	Identifier	pte		451639	0					
ANR	451768	Identifier	memory		451639	1					
ANR	451769	Argument	"""[j]stacking depth=%d font=0x%lx\\n"""		451639	2					
ANR	451770	PrimaryExpression	"""[j]stacking depth=%d font=0x%lx\\n"""		451639	0					
ANR	451771	Argument	fdepth		451639	3					
ANR	451772	Identifier	fdepth		451639	0					
ANR	451773	Argument	( ulong ) cfont		451639	4					
ANR	451774	CastExpression	( ulong ) cfont		451639	0					
ANR	451775	CastTarget	ulong		451639	0					
ANR	451776	Identifier	cfont		451639	1					
ANR	451777	ExpressionStatement	pte -> fstack . depth = fdepth	52:4:1678:1704	451639	3	True				
ANR	451778	AssignmentExpression	pte -> fstack . depth = fdepth		451639	0		=			
ANR	451779	MemberAccess	pte -> fstack . depth		451639	0					
ANR	451780	PtrMemberAccess	pte -> fstack		451639	0					
ANR	451781	Identifier	pte		451639	0					
ANR	451782	Identifier	fstack		451639	1					
ANR	451783	Identifier	depth		451639	1					
ANR	451784	Identifier	fdepth		451639	1					
ANR	451785	ReturnStatement	return 0 ;	53:4:1710:1718	451639	4	True				
ANR	451786	PrimaryExpression	0		451639	0					
ANR	451787	ReturnType	static int		451639	1					
ANR	451788	Identifier	gs_stack_modal_fonts		451639	2					
ANR	451789	ParameterList	gs_text_enum_t * pte		451639	3					
ANR	451790	Parameter	gs_text_enum_t * pte	33:21:985:1003	451639	0	True				
ANR	451791	ParameterType	gs_text_enum_t *		451639	0					
ANR	451792	Identifier	pte		451639	1					
ANR	451793	CFGEntryNode	ENTRY		451639		True				
ANR	451794	CFGExitNode	EXIT		451639		True				
ANR	451795	Symbol	* * cmfont -> data . Encoding		451639						
ANR	451796	Symbol	* cmfont -> data		451639						
ANR	451797	Symbol	pte -> memory		451639						
ANR	451798	Symbol	* pte -> fstack . items		451639						
ANR	451799	Symbol	* pte		451639						
ANR	451800	Symbol	MAX_FONT_STACK		451639						
ANR	451801	Symbol	* * cmfont -> data		451639						
ANR	451802	Symbol	cfont		451639						
ANR	451803	Symbol	fmap_type_is_modal		451639						
ANR	451804	Symbol	* * cmfont		451639						
ANR	451805	Symbol	pte -> fstack		451639						
ANR	451806	Symbol	* cmfont -> data . FDepVector		451639						
ANR	451807	Symbol	gs_error_invalidfont		451639						
ANR	451808	Symbol	cmfont -> data . FDepVector		451639						
ANR	451809	Symbol	* pte -> fstack		451639						
ANR	451810	Symbol	pte		451639						
ANR	451811	Symbol	cmfont -> data . Encoding		451639						
ANR	451812	Symbol	fdepth		451639						
ANR	451813	Symbol	* fdepth		451639						
ANR	451814	Symbol	cmfont		451639						
ANR	451815	Symbol	pte -> fstack . depth		451639						
ANR	451816	Symbol	pte -> fstack . items [ fdepth ] . font		451639						
ANR	451817	Symbol	cfont -> FontType		451639						
ANR	451818	Symbol	ft_composite		451639						
ANR	451819	Symbol	pte -> fstack . items		451639						
ANR	451820	Symbol	pte -> fstack . items [ fdepth - 1 ] . index		451639						
ANR	451821	Symbol	cmfont -> data . FMapType		451639						
ANR	451822	Symbol	* * pte		451639						
ANR	451823	Symbol	* * * cmfont		451639						
ANR	451824	Symbol	* cmfont		451639						
ANR	451825	Symbol	* cmfont -> data . Encoding		451639						
ANR	451826	Symbol	* cfont		451639						
ANR	451827	Symbol	cmfont -> data		451639						
ANR	451828	Function	gs_type0_init_fstack	57:0:1843:2263							
ANR	451829	FunctionDef	"gs_type0_init_fstack (gs_text_enum_t * pte , gs_font * pfont)"		451828	0					
ANR	451830	CompoundStatement		59:0:1906:2263	451828	0					
ANR	451831	IfStatement	if ( ! ( pte -> text . operation & ( TEXT_FROM_STRING | TEXT_FROM_BYTES ) ) )		451828	0					
ANR	451832	Condition	! ( pte -> text . operation & ( TEXT_FROM_STRING | TEXT_FROM_BYTES ) )	60:8:1916:1976	451828	0	True				
ANR	451833	UnaryOperationExpression	! ( pte -> text . operation & ( TEXT_FROM_STRING | TEXT_FROM_BYTES ) )		451828	0					
ANR	451834	UnaryOperator	!		451828	0					
ANR	451835	BitAndExpression	pte -> text . operation & ( TEXT_FROM_STRING | TEXT_FROM_BYTES )		451828	1		&			
ANR	451836	MemberAccess	pte -> text . operation		451828	0					
ANR	451837	PtrMemberAccess	pte -> text		451828	0					
ANR	451838	Identifier	pte		451828	0					
ANR	451839	Identifier	text		451828	1					
ANR	451840	Identifier	operation		451828	1					
ANR	451841	InclusiveOrExpression	TEXT_FROM_STRING | TEXT_FROM_BYTES		451828	1		|			
ANR	451842	Identifier	TEXT_FROM_STRING		451828	0					
ANR	451843	Identifier	TEXT_FROM_BYTES		451828	1					
ANR	451844	ExpressionStatement	return_error ( gs_error_invalidfont )	61:8:1987:2021	451828	1	True				
ANR	451845	CallExpression	return_error ( gs_error_invalidfont )		451828	0					
ANR	451846	Callee	return_error		451828	0					
ANR	451847	Identifier	return_error		451828	0					
ANR	451848	ArgumentList	gs_error_invalidfont		451828	1					
ANR	451849	Argument	gs_error_invalidfont		451828	0					
ANR	451850	Identifier	gs_error_invalidfont		451828	0					
ANR	451851	ExpressionStatement	"if_debug1m ( 'j' , pte -> memory , ""[j]stacking depth=0 font=0x%lx\\n"" , ( ulong ) pfont )"	62:4:2027:2121	451828	1	True				
ANR	451852	CallExpression	"if_debug1m ( 'j' , pte -> memory , ""[j]stacking depth=0 font=0x%lx\\n"" , ( ulong ) pfont )"		451828	0					
ANR	451853	Callee	if_debug1m		451828	0					
ANR	451854	Identifier	if_debug1m		451828	0					
ANR	451855	ArgumentList	'j'		451828	1					
ANR	451856	Argument	'j'		451828	0					
ANR	451857	PrimaryExpression	'j'		451828	0					
ANR	451858	Argument	pte -> memory		451828	1					
ANR	451859	PtrMemberAccess	pte -> memory		451828	0					
ANR	451860	Identifier	pte		451828	0					
ANR	451861	Identifier	memory		451828	1					
ANR	451862	Argument	"""[j]stacking depth=0 font=0x%lx\\n"""		451828	2					
ANR	451863	PrimaryExpression	"""[j]stacking depth=0 font=0x%lx\\n"""		451828	0					
ANR	451864	Argument	( ulong ) pfont		451828	3					
ANR	451865	CastExpression	( ulong ) pfont		451828	0					
ANR	451866	CastTarget	ulong		451828	0					
ANR	451867	Identifier	pfont		451828	1					
ANR	451868	ExpressionStatement	pte -> fstack . depth = 0	64:4:2127:2148	451828	2	True				
ANR	451869	AssignmentExpression	pte -> fstack . depth = 0		451828	0		=			
ANR	451870	MemberAccess	pte -> fstack . depth		451828	0					
ANR	451871	PtrMemberAccess	pte -> fstack		451828	0					
ANR	451872	Identifier	pte		451828	0					
ANR	451873	Identifier	fstack		451828	1					
ANR	451874	Identifier	depth		451828	1					
ANR	451875	PrimaryExpression	0		451828	1					
ANR	451876	ExpressionStatement	pte -> fstack . items [ 0 ] . font = pfont	65:4:2154:2187	451828	3	True				
ANR	451877	AssignmentExpression	pte -> fstack . items [ 0 ] . font = pfont		451828	0		=			
ANR	451878	MemberAccess	pte -> fstack . items [ 0 ] . font		451828	0					
ANR	451879	ArrayIndexing	pte -> fstack . items [ 0 ]		451828	0					
ANR	451880	MemberAccess	pte -> fstack . items		451828	0					
ANR	451881	PtrMemberAccess	pte -> fstack		451828	0					
ANR	451882	Identifier	pte		451828	0					
ANR	451883	Identifier	fstack		451828	1					
ANR	451884	Identifier	items		451828	1					
ANR	451885	PrimaryExpression	0		451828	1					
ANR	451886	Identifier	font		451828	1					
ANR	451887	Identifier	pfont		451828	1					
ANR	451888	ExpressionStatement	pte -> fstack . items [ 0 ] . index = 0	66:4:2193:2223	451828	4	True				
ANR	451889	AssignmentExpression	pte -> fstack . items [ 0 ] . index = 0		451828	0		=			
ANR	451890	MemberAccess	pte -> fstack . items [ 0 ] . index		451828	0					
ANR	451891	ArrayIndexing	pte -> fstack . items [ 0 ]		451828	0					
ANR	451892	MemberAccess	pte -> fstack . items		451828	0					
ANR	451893	PtrMemberAccess	pte -> fstack		451828	0					
ANR	451894	Identifier	pte		451828	0					
ANR	451895	Identifier	fstack		451828	1					
ANR	451896	Identifier	items		451828	1					
ANR	451897	PrimaryExpression	0		451828	1					
ANR	451898	Identifier	index		451828	1					
ANR	451899	PrimaryExpression	0		451828	1					
ANR	451900	ReturnStatement	return gs_stack_modal_fonts ( pte ) ;	67:4:2229:2261	451828	5	True				
ANR	451901	CallExpression	gs_stack_modal_fonts ( pte )		451828	0					
ANR	451902	Callee	gs_stack_modal_fonts		451828	0					
ANR	451903	Identifier	gs_stack_modal_fonts		451828	0					
ANR	451904	ArgumentList	pte		451828	1					
ANR	451905	Argument	pte		451828	0					
ANR	451906	Identifier	pte		451828	0					
ANR	451907	ReturnType	int		451828	1					
ANR	451908	Identifier	gs_type0_init_fstack		451828	2					
ANR	451909	ParameterList	"gs_text_enum_t * pte , gs_font * pfont"		451828	3					
ANR	451910	Parameter	gs_text_enum_t * pte	58:21:1868:1886	451828	0	True				
ANR	451911	ParameterType	gs_text_enum_t *		451828	0					
ANR	451912	Identifier	pte		451828	1					
ANR	451913	Parameter	gs_font * pfont	58:42:1889:1903	451828	1	True				
ANR	451914	ParameterType	gs_font *		451828	0					
ANR	451915	Identifier	pfont		451828	1					
ANR	451916	CFGEntryNode	ENTRY		451828		True				
ANR	451917	CFGExitNode	EXIT		451828		True				
ANR	451918	Symbol	pte		451828						
ANR	451919	Symbol	pte -> fstack . items [ 0 ] . index		451828						
ANR	451920	Symbol	pfont		451828						
ANR	451921	Symbol	pte -> text		451828						
ANR	451922	Symbol	pte -> text . operation		451828						
ANR	451923	Symbol	pte -> memory		451828						
ANR	451924	Symbol	* pte -> fstack . items		451828						
ANR	451925	Symbol	pte -> fstack . depth		451828						
ANR	451926	Symbol	* pte		451828						
ANR	451927	Symbol	pte -> fstack . items [ 0 ] . font		451828						
ANR	451928	Symbol	pte -> fstack . items		451828						
ANR	451929	Symbol	* * pte		451828						
ANR	451930	Symbol	TEXT_FROM_BYTES		451828						
ANR	451931	Symbol	gs_stack_modal_fonts		451828						
ANR	451932	Symbol	pte -> fstack		451828						
ANR	451933	Symbol	TEXT_FROM_STRING		451828						
ANR	451934	Symbol	gs_error_invalidfont		451828						
ANR	451935	Symbol	* pte -> fstack		451828						
ANR	451936	Function	root_esc_char	89:0:3004:3133							
ANR	451937	FunctionDef	root_esc_char (const gs_text_enum_t * pte)		451936	0					
ANR	451938	CompoundStatement		91:0:3057:3133	451936	0					
ANR	451939	ReturnStatement	return ( ( gs_font_type0 * ) ( pte -> fstack . items [ 0 ] . font ) ) -> data . EscChar ;	92:4:3063:3131	451936	0	True				
ANR	451940	MemberAccess	( ( gs_font_type0 * ) ( pte -> fstack . items [ 0 ] . font ) ) -> data . EscChar		451936	0					
ANR	451941	PtrMemberAccess	( ( gs_font_type0 * ) ( pte -> fstack . items [ 0 ] . font ) ) -> data		451936	0					
ANR	451942	CastExpression	( gs_font_type0 * ) ( pte -> fstack . items [ 0 ] . font )		451936	0					
ANR	451943	CastTarget	gs_font_type0 *		451936	0					
ANR	451944	MemberAccess	pte -> fstack . items [ 0 ] . font		451936	1					
ANR	451945	ArrayIndexing	pte -> fstack . items [ 0 ]		451936	0					
ANR	451946	MemberAccess	pte -> fstack . items		451936	0					
ANR	451947	PtrMemberAccess	pte -> fstack		451936	0					
ANR	451948	Identifier	pte		451936	0					
ANR	451949	Identifier	fstack		451936	1					
ANR	451950	Identifier	items		451936	1					
ANR	451951	PrimaryExpression	0		451936	1					
ANR	451952	Identifier	font		451936	1					
ANR	451953	Identifier	data		451936	1					
ANR	451954	Identifier	EscChar		451936	1					
ANR	451955	ReturnType	static uint		451936	1					
ANR	451956	Identifier	root_esc_char		451936	2					
ANR	451957	ParameterList	const gs_text_enum_t * pte		451936	3					
ANR	451958	Parameter	const gs_text_enum_t * pte	90:14:3030:3054	451936	0	True				
ANR	451959	ParameterType	const gs_text_enum_t *		451936	0					
ANR	451960	Identifier	pte		451936	1					
ANR	451961	CFGEntryNode	ENTRY		451936		True				
ANR	451962	CFGExitNode	EXIT		451936		True				
ANR	451963	Symbol	pte		451936						
ANR	451964	Symbol	* pte -> fstack . items [ 0 ] . font		451936						
ANR	451965	Symbol	* pte -> fstack . items		451936						
ANR	451966	Symbol	* pte		451936						
ANR	451967	Symbol	( ( gs_font_type0 * ) ( pte -> fstack . items [ 0 ] . font ) ) -> data . EscChar		451936						
ANR	451968	Symbol	pte -> fstack . items [ 0 ] . font		451936						
ANR	451969	Symbol	pte -> fstack . items		451936						
ANR	451970	Symbol	( ( gs_font_type0 * ) ( pte -> fstack . items [ 0 ] . font ) ) -> data		451936						
ANR	451971	Symbol	* * pte		451936						
ANR	451972	Symbol	* * pte -> fstack		451936						
ANR	451973	Symbol	pte -> fstack		451936						
ANR	451974	Symbol	* * pte -> fstack . items		451936						
ANR	451975	Symbol	* pte -> fstack		451936						
ANR	451976	Symbol	* * * pte		451936						
ANR	451977	Function	gs_type0_next_char_glyph	100:0:3429:17828							
ANR	451978	FunctionDef	"gs_type0_next_char_glyph (gs_text_enum_t * pte , gs_char * pchr , gs_glyph * pglyph)"		451977	0					
ANR	451979	CompoundStatement		102:0:3512:17828	451977	0					
ANR	451980	IdentifierDeclStatement	const byte * str = pte -> text . data . bytes ;	103:4:3518:3556	451977	0	True				
ANR	451981	IdentifierDecl	* str = pte -> text . data . bytes		451977	0					
ANR	451982	IdentifierDeclType	const byte *		451977	0					
ANR	451983	Identifier	str		451977	1					
ANR	451984	AssignmentExpression	* str = pte -> text . data . bytes		451977	2		=			
ANR	451985	Identifier	str		451977	0					
ANR	451986	MemberAccess	pte -> text . data . bytes		451977	1					
ANR	451987	MemberAccess	pte -> text . data		451977	0					
ANR	451988	PtrMemberAccess	pte -> text		451977	0					
ANR	451989	Identifier	pte		451977	0					
ANR	451990	Identifier	text		451977	1					
ANR	451991	Identifier	data		451977	1					
ANR	451992	Identifier	bytes		451977	1					
ANR	451993	IdentifierDeclStatement	const byte * p = str + pte -> index ;	104:4:3562:3594	451977	1	True				
ANR	451994	IdentifierDecl	* p = str + pte -> index		451977	0					
ANR	451995	IdentifierDeclType	const byte *		451977	0					
ANR	451996	Identifier	p		451977	1					
ANR	451997	AssignmentExpression	* p = str + pte -> index		451977	2		=			
ANR	451998	Identifier	p		451977	0					
ANR	451999	AdditiveExpression	str + pte -> index		451977	1		+			
ANR	452000	Identifier	str		451977	0					
ANR	452001	PtrMemberAccess	pte -> index		451977	1					
ANR	452002	Identifier	pte		451977	0					
ANR	452003	Identifier	index		451977	1					
ANR	452004	IdentifierDeclStatement	const byte * end = str + pte -> text . size ;	105:4:3600:3638	451977	2	True				
ANR	452005	IdentifierDecl	* end = str + pte -> text . size		451977	0					
ANR	452006	IdentifierDeclType	const byte *		451977	0					
ANR	452007	Identifier	end		451977	1					
ANR	452008	AssignmentExpression	* end = str + pte -> text . size		451977	2		=			
ANR	452009	Identifier	end		451977	0					
ANR	452010	AdditiveExpression	str + pte -> text . size		451977	1		+			
ANR	452011	Identifier	str		451977	0					
ANR	452012	MemberAccess	pte -> text . size		451977	1					
ANR	452013	PtrMemberAccess	pte -> text		451977	0					
ANR	452014	Identifier	pte		451977	0					
ANR	452015	Identifier	text		451977	1					
ANR	452016	Identifier	size		451977	1					
ANR	452017	IdentifierDeclStatement	int fdepth = pte -> fstack . depth ;	106:4:3644:3674	451977	3	True				
ANR	452018	IdentifierDecl	fdepth = pte -> fstack . depth		451977	0					
ANR	452019	IdentifierDeclType	int		451977	0					
ANR	452020	Identifier	fdepth		451977	1					
ANR	452021	AssignmentExpression	fdepth = pte -> fstack . depth		451977	2		=			
ANR	452022	Identifier	fdepth		451977	0					
ANR	452023	MemberAccess	pte -> fstack . depth		451977	1					
ANR	452024	PtrMemberAccess	pte -> fstack		451977	0					
ANR	452025	Identifier	pte		451977	0					
ANR	452026	Identifier	fstack		451977	1					
ANR	452027	Identifier	depth		451977	1					
ANR	452028	IdentifierDeclStatement	int orig_depth = fdepth ;	107:4:3680:3703	451977	4	True				
ANR	452029	IdentifierDecl	orig_depth = fdepth		451977	0					
ANR	452030	IdentifierDeclType	int		451977	0					
ANR	452031	Identifier	orig_depth		451977	1					
ANR	452032	AssignmentExpression	orig_depth = fdepth		451977	2		=			
ANR	452033	Identifier	fdepth		451977	0					
ANR	452034	Identifier	fdepth		451977	1					
ANR	452035	IdentifierDeclStatement	gs_font * pfont ;	108:4:3709:3723	451977	5	True				
ANR	452036	IdentifierDecl	* pfont		451977	0					
ANR	452037	IdentifierDeclType	gs_font *		451977	0					
ANR	452038	Identifier	pfont		451977	1					
ANR	452039	Statement	define	110:1:3727:3732	451977	6	True				
ANR	452040	Statement	pfont0	110:8:3734:3739	451977	7	True				
ANR	452041	Statement	(	110:15:3741:3741	451977	8	True				
ANR	452042	Statement	(	110:16:3742:3742	451977	9	True				
ANR	452043	Statement	gs_font_type0	110:17:3743:3755	451977	10	True				
ANR	452044	Statement	*	110:31:3757:3757	451977	11	True				
ANR	452045	Statement	)	110:32:3758:3758	451977	12	True				
ANR	452046	Statement	pfont	110:33:3759:3763	451977	13	True				
ANR	452047	Statement	)	110:38:3764:3764	451977	14	True				
ANR	452048	IdentifierDeclStatement	gs_type0_data * pdata ;	111:4:3770:3790	451977	15	True				
ANR	452049	IdentifierDecl	* pdata		451977	0					
ANR	452050	IdentifierDeclType	gs_type0_data *		451977	0					
ANR	452051	Identifier	pdata		451977	1					
ANR	452052	IdentifierDeclStatement	uint fidx ;	112:4:3796:3805	451977	16	True				
ANR	452053	IdentifierDecl	fidx		451977	0					
ANR	452054	IdentifierDeclType	uint		451977	0					
ANR	452055	Identifier	fidx		451977	1					
ANR	452056	IdentifierDeclStatement	gs_char chr ;	113:4:3811:3822	451977	17	True				
ANR	452057	IdentifierDecl	chr		451977	0					
ANR	452058	IdentifierDeclType	gs_char		451977	0					
ANR	452059	Identifier	chr		451977	1					
ANR	452060	IdentifierDeclStatement	gs_glyph glyph = GS_NO_GLYPH ;	114:4:3828:3856	451977	18	True				
ANR	452061	IdentifierDecl	glyph = GS_NO_GLYPH		451977	0					
ANR	452062	IdentifierDeclType	gs_glyph		451977	0					
ANR	452063	Identifier	glyph		451977	1					
ANR	452064	AssignmentExpression	glyph = GS_NO_GLYPH		451977	2		=			
ANR	452065	Identifier	GS_NO_GLYPH		451977	0					
ANR	452066	Identifier	GS_NO_GLYPH		451977	1					
ANR	452067	IdentifierDeclStatement	int changed = 0 ;	115:4:3862:3877	451977	19	True				
ANR	452068	IdentifierDecl	changed = 0		451977	0					
ANR	452069	IdentifierDeclType	int		451977	0					
ANR	452070	Identifier	changed		451977	1					
ANR	452071	AssignmentExpression	changed = 0		451977	2		=			
ANR	452072	Identifier	changed		451977	0					
ANR	452073	PrimaryExpression	0		451977	1					
ANR	452074	ExpressionStatement	pte -> FontBBox_as_Metrics2 . x = pte -> FontBBox_as_Metrics2 . y = 0	117:4:3884:3945	451977	20	True				
ANR	452075	AssignmentExpression	pte -> FontBBox_as_Metrics2 . x = pte -> FontBBox_as_Metrics2 . y = 0		451977	0		=			
ANR	452076	MemberAccess	pte -> FontBBox_as_Metrics2 . x		451977	0					
ANR	452077	PtrMemberAccess	pte -> FontBBox_as_Metrics2		451977	0					
ANR	452078	Identifier	pte		451977	0					
ANR	452079	Identifier	FontBBox_as_Metrics2		451977	1					
ANR	452080	Identifier	x		451977	1					
ANR	452081	AssignmentExpression	pte -> FontBBox_as_Metrics2 . y = 0		451977	1		=			
ANR	452082	MemberAccess	pte -> FontBBox_as_Metrics2 . y		451977	0					
ANR	452083	PtrMemberAccess	pte -> FontBBox_as_Metrics2		451977	0					
ANR	452084	Identifier	pte		451977	0					
ANR	452085	Identifier	FontBBox_as_Metrics2		451977	1					
ANR	452086	Identifier	y		451977	1					
ANR	452087	PrimaryExpression	0		451977	1					
ANR	452088	Statement	define	119:1:3949:3954	451977	21	True				
ANR	452089	Statement	need_left	119:8:3956:3964	451977	22	True				
ANR	452090	Statement	(	119:17:3965:3965	451977	23	True				
ANR	452091	Statement	n	119:18:3966:3966	451977	24	True				
ANR	452092	Statement	)	119:19:3967:3967	451977	25	True				
ANR	452093	IfStatement	if ( end - p < n )		451977	26					
ANR	452094	Condition	end - p < n	120:7:3977:3987	451977	0	True				
ANR	452095	RelationalExpression	end - p < n		451977	0		<			
ANR	452096	AdditiveExpression	end - p		451977	0		-			
ANR	452097	Identifier	end		451977	0					
ANR	452098	Identifier	p		451977	1					
ANR	452099	Identifier	n		451977	1					
ANR	452100	Statement	return_error	120:21:3991:4002	451977	1	True				
ANR	452101	Statement	(	120:33:4003:4003	451977	27	True				
ANR	452102	Statement	gs_error_rangecheck	120:34:4004:4022	451977	28	True				
ANR	452103	Statement	)	120:53:4023:4023	451977	29	True				
ANR	452104	IfStatement	if ( pte -> index == 0 )		451977	30					
ANR	452105	Condition	pte -> index == 0	131:8:4469:4483	451977	0	True				
ANR	452106	EqualityExpression	pte -> index == 0		451977	0		==			
ANR	452107	PtrMemberAccess	pte -> index		451977	0					
ANR	452108	Identifier	pte		451977	0					
ANR	452109	Identifier	index		451977	1					
ANR	452110	PrimaryExpression	0		451977	1					
ANR	452111	CompoundStatement		31:8:983:997	451977	1					
ANR	452112	IdentifierDeclStatement	int idepth = 0 ;	132:8:4496:4510	451977	0	True				
ANR	452113	IdentifierDecl	idepth = 0		451977	0					
ANR	452114	IdentifierDeclType	int		451977	0					
ANR	452115	Identifier	idepth		451977	1					
ANR	452116	AssignmentExpression	idepth = 0		451977	2		=			
ANR	452117	Identifier	idepth		451977	0					
ANR	452118	PrimaryExpression	0		451977	1					
ANR	452119	ExpressionStatement	pfont = pte -> fstack . items [ 0 ] . font	134:8:4521:4554	451977	1	True				
ANR	452120	AssignmentExpression	pfont = pte -> fstack . items [ 0 ] . font		451977	0		=			
ANR	452121	Identifier	pfont		451977	0					
ANR	452122	MemberAccess	pte -> fstack . items [ 0 ] . font		451977	1					
ANR	452123	ArrayIndexing	pte -> fstack . items [ 0 ]		451977	0					
ANR	452124	MemberAccess	pte -> fstack . items		451977	0					
ANR	452125	PtrMemberAccess	pte -> fstack		451977	0					
ANR	452126	Identifier	pte		451977	0					
ANR	452127	Identifier	fstack		451977	1					
ANR	452128	Identifier	items		451977	1					
ANR	452129	PrimaryExpression	0		451977	1					
ANR	452130	Identifier	font		451977	1					
ANR	452131	ForStatement	for ( ; pfont -> FontType == ft_composite ; )		451977	2					
ANR	452132	Condition	pfont -> FontType == ft_composite	135:15:4571:4601	451977	0	True				
ANR	452133	EqualityExpression	pfont -> FontType == ft_composite		451977	0		==			
ANR	452134	PtrMemberAccess	pfont -> FontType		451977	0					
ANR	452135	Identifier	pfont		451977	0					
ANR	452136	Identifier	FontType		451977	1					
ANR	452137	Identifier	ft_composite		451977	1					
ANR	452138	CompoundStatement		35:12:1106:1155	451977	1					
ANR	452139	IdentifierDeclStatement	fmap_type fmt = ( pdata = & pfont0 -> data ) -> FMapType ;	136:12:4619:4668	451977	0	True				
ANR	452140	IdentifierDecl	fmt = ( pdata = & pfont0 -> data ) -> FMapType		451977	0					
ANR	452141	IdentifierDeclType	fmap_type		451977	0					
ANR	452142	Identifier	fmt		451977	1					
ANR	452143	AssignmentExpression	fmt = ( pdata = & pfont0 -> data ) -> FMapType		451977	2		=			
ANR	452144	Identifier	fmt		451977	0					
ANR	452145	PtrMemberAccess	( pdata = & pfont0 -> data ) -> FMapType		451977	1					
ANR	452146	AssignmentExpression	pdata = & pfont0 -> data		451977	0		=			
ANR	452147	Identifier	pdata		451977	0					
ANR	452148	UnaryOperationExpression	& pfont0 -> data		451977	1					
ANR	452149	UnaryOperator	&		451977	0					
ANR	452150	PtrMemberAccess	pfont0 -> data		451977	1					
ANR	452151	Identifier	pfont0		451977	0					
ANR	452152	Identifier	data		451977	1					
ANR	452153	Identifier	FMapType		451977	1					
ANR	452154	IfStatement	if ( p == end )		451977	1					
ANR	452155	Condition	p == end	138:16:4687:4694	451977	0	True				
ANR	452156	EqualityExpression	p == end		451977	0		==			
ANR	452157	Identifier	p		451977	0					
ANR	452158	Identifier	end		451977	1					
ANR	452159	ReturnStatement	return 2 ;	139:16:4713:4721	451977	1	True				
ANR	452160	PrimaryExpression	2		451977	0					
ANR	452161	ExpressionStatement	chr = * p	140:12:4735:4743	451977	2	True				
ANR	452162	AssignmentExpression	chr = * p		451977	0		=			
ANR	452163	Identifier	chr		451977	0					
ANR	452164	UnaryOperationExpression	* p		451977	1					
ANR	452165	UnaryOperator	*		451977	0					
ANR	452166	Identifier	p		451977	1					
ANR	452167	SwitchStatement	switch ( fmt )		451977	3					
ANR	452168	Condition	fmt	141:20:4765:4767	451977	0	True				
ANR	452169	Identifier	fmt		451977	0					
ANR	452170	CompoundStatement		40:25:1257:1257	451977	1					
ANR	452171	Label	case fmap_escape :	142:16:4788:4804	451977	0	True				
ANR	452172	Identifier	fmap_escape		451977	0					
ANR	452173	IfStatement	if ( chr != root_esc_char ( pte ) )		451977	1					
ANR	452174	Condition	chr != root_esc_char ( pte )	143:24:4830:4854	451977	0	True				
ANR	452175	EqualityExpression	chr != root_esc_char ( pte )		451977	0		!=			
ANR	452176	Identifier	chr		451977	0					
ANR	452177	CallExpression	root_esc_char ( pte )		451977	1					
ANR	452178	Callee	root_esc_char		451977	0					
ANR	452179	Identifier	root_esc_char		451977	0					
ANR	452180	ArgumentList	pte		451977	1					
ANR	452181	Argument	pte		451977	0					
ANR	452182	Identifier	pte		451977	0					
ANR	452183	BreakStatement	break ;	144:24:4881:4886	451977	1	True				
ANR	452184	ExpressionStatement	need_left ( 2 )	145:20:4908:4920	451977	2	True				
ANR	452185	CallExpression	need_left ( 2 )		451977	0					
ANR	452186	Callee	need_left		451977	0					
ANR	452187	Identifier	need_left		451977	0					
ANR	452188	ArgumentList	2		451977	1					
ANR	452189	Argument	2		451977	0					
ANR	452190	PrimaryExpression	2		451977	0					
ANR	452191	ExpressionStatement	fidx = p [ 1 ]	146:20:4942:4953	451977	3	True				
ANR	452192	AssignmentExpression	fidx = p [ 1 ]		451977	0		=			
ANR	452193	Identifier	fidx		451977	0					
ANR	452194	ArrayIndexing	p [ 1 ]		451977	1					
ANR	452195	Identifier	p		451977	0					
ANR	452196	PrimaryExpression	1		451977	1					
ANR	452197	ExpressionStatement	p += 2	147:20:4975:4981	451977	4	True				
ANR	452198	AssignmentExpression	p += 2		451977	0		+=			
ANR	452199	Identifier	p		451977	0					
ANR	452200	PrimaryExpression	2		451977	1					
ANR	452201	ExpressionStatement	"if_debug1m ( 'j' , pte -> memory , ""[j]from root: escape %d\\n"" , fidx )"	148:20:5003:5066	451977	5	True				
ANR	452202	CallExpression	"if_debug1m ( 'j' , pte -> memory , ""[j]from root: escape %d\\n"" , fidx )"		451977	0					
ANR	452203	Callee	if_debug1m		451977	0					
ANR	452204	Identifier	if_debug1m		451977	0					
ANR	452205	ArgumentList	'j'		451977	1					
ANR	452206	Argument	'j'		451977	0					
ANR	452207	PrimaryExpression	'j'		451977	0					
ANR	452208	Argument	pte -> memory		451977	1					
ANR	452209	PtrMemberAccess	pte -> memory		451977	0					
ANR	452210	Identifier	pte		451977	0					
ANR	452211	Identifier	memory		451977	1					
ANR	452212	Argument	"""[j]from root: escape %d\\n"""		451977	2					
ANR	452213	PrimaryExpression	"""[j]from root: escape %d\\n"""		451977	0					
ANR	452214	Argument	fidx		451977	3					
ANR	452215	Identifier	fidx		451977	0					
ANR	452216	Label	rdown :	149:18:5086:5091	451977	6	True				
ANR	452217	Identifier	rdown		451977	0					
ANR	452218	ExpressionStatement	"select_descendant ( pfont , pdata , fidx , idepth )"	149:24:5092:5137	451977	7	True				
ANR	452219	CallExpression	"select_descendant ( pfont , pdata , fidx , idepth )"		451977	0					
ANR	452220	Callee	select_descendant		451977	0					
ANR	452221	Identifier	select_descendant		451977	0					
ANR	452222	ArgumentList	pfont		451977	1					
ANR	452223	Argument	pfont		451977	0					
ANR	452224	Identifier	pfont		451977	0					
ANR	452225	Argument	pdata		451977	1					
ANR	452226	Identifier	pdata		451977	0					
ANR	452227	Argument	fidx		451977	2					
ANR	452228	Identifier	fidx		451977	0					
ANR	452229	Argument	idepth		451977	3					
ANR	452230	Identifier	idepth		451977	0					
ANR	452231	ExpressionStatement	"if_debug2m ( 'j' , pte -> memory , ""[j]... new depth=%d, new font=0x%lx\\n"" , idepth , ( ulong ) pfont )"	150:20:5159:5282	451977	8	True				
ANR	452232	CallExpression	"if_debug2m ( 'j' , pte -> memory , ""[j]... new depth=%d, new font=0x%lx\\n"" , idepth , ( ulong ) pfont )"		451977	0					
ANR	452233	Callee	if_debug2m		451977	0					
ANR	452234	Identifier	if_debug2m		451977	0					
ANR	452235	ArgumentList	'j'		451977	1					
ANR	452236	Argument	'j'		451977	0					
ANR	452237	PrimaryExpression	'j'		451977	0					
ANR	452238	Argument	pte -> memory		451977	1					
ANR	452239	PtrMemberAccess	pte -> memory		451977	0					
ANR	452240	Identifier	pte		451977	0					
ANR	452241	Identifier	memory		451977	1					
ANR	452242	Argument	"""[j]... new depth=%d, new font=0x%lx\\n"""		451977	2					
ANR	452243	PrimaryExpression	"""[j]... new depth=%d, new font=0x%lx\\n"""		451977	0					
ANR	452244	Argument	idepth		451977	3					
ANR	452245	Identifier	idepth		451977	0					
ANR	452246	Argument	( ulong ) pfont		451977	4					
ANR	452247	CastExpression	( ulong ) pfont		451977	0					
ANR	452248	CastTarget	ulong		451977	0					
ANR	452249	Identifier	pfont		451977	1					
ANR	452250	ContinueStatement	continue ;	152:20:5304:5312	451977	9	True				
ANR	452251	Label	case fmap_double_escape :	153:16:5330:5353	451977	10	True				
ANR	452252	Identifier	fmap_double_escape		451977	0					
ANR	452253	IfStatement	if ( chr != root_esc_char ( pte ) )		451977	11					
ANR	452254	Condition	chr != root_esc_char ( pte )	154:24:5379:5403	451977	0	True				
ANR	452255	EqualityExpression	chr != root_esc_char ( pte )		451977	0		!=			
ANR	452256	Identifier	chr		451977	0					
ANR	452257	CallExpression	root_esc_char ( pte )		451977	1					
ANR	452258	Callee	root_esc_char		451977	0					
ANR	452259	Identifier	root_esc_char		451977	0					
ANR	452260	ArgumentList	pte		451977	1					
ANR	452261	Argument	pte		451977	0					
ANR	452262	Identifier	pte		451977	0					
ANR	452263	BreakStatement	break ;	155:24:5430:5435	451977	1	True				
ANR	452264	ExpressionStatement	need_left ( 2 )	156:20:5457:5469	451977	12	True				
ANR	452265	CallExpression	need_left ( 2 )		451977	0					
ANR	452266	Callee	need_left		451977	0					
ANR	452267	Identifier	need_left		451977	0					
ANR	452268	ArgumentList	2		451977	1					
ANR	452269	Argument	2		451977	0					
ANR	452270	PrimaryExpression	2		451977	0					
ANR	452271	ExpressionStatement	fidx = p [ 1 ]	157:20:5491:5502	451977	13	True				
ANR	452272	AssignmentExpression	fidx = p [ 1 ]		451977	0		=			
ANR	452273	Identifier	fidx		451977	0					
ANR	452274	ArrayIndexing	p [ 1 ]		451977	1					
ANR	452275	Identifier	p		451977	0					
ANR	452276	PrimaryExpression	1		451977	1					
ANR	452277	ExpressionStatement	p += 2	158:20:5524:5530	451977	14	True				
ANR	452278	AssignmentExpression	p += 2		451977	0		+=			
ANR	452279	Identifier	p		451977	0					
ANR	452280	PrimaryExpression	2		451977	1					
ANR	452281	IfStatement	if ( fidx == chr )		451977	15					
ANR	452282	Condition	fidx == chr	159:24:5556:5566	451977	0	True				
ANR	452283	EqualityExpression	fidx == chr		451977	0		==			
ANR	452284	Identifier	fidx		451977	0					
ANR	452285	Identifier	chr		451977	1					
ANR	452286	CompoundStatement		58:37:2056:2056	451977	1					
ANR	452287	ExpressionStatement	need_left ( 1 )	160:24:5595:5607	451977	0	True				
ANR	452288	CallExpression	need_left ( 1 )		451977	0					
ANR	452289	Callee	need_left		451977	0					
ANR	452290	Identifier	need_left		451977	0					
ANR	452291	ArgumentList	1		451977	1					
ANR	452292	Argument	1		451977	0					
ANR	452293	PrimaryExpression	1		451977	0					
ANR	452294	ExpressionStatement	fidx = * p ++ + 256	161:24:5633:5650	451977	1	True				
ANR	452295	AssignmentExpression	fidx = * p ++ + 256		451977	0		=			
ANR	452296	Identifier	fidx		451977	0					
ANR	452297	AdditiveExpression	* p ++ + 256		451977	1		+			
ANR	452298	UnaryOperationExpression	* p ++		451977	0					
ANR	452299	UnaryOperator	*		451977	0					
ANR	452300	PostIncDecOperationExpression	p ++		451977	1					
ANR	452301	Identifier	p		451977	0					
ANR	452302	IncDec	++		451977	1					
ANR	452303	PrimaryExpression	256		451977	1					
ANR	452304	ExpressionStatement	"if_debug1m ( 'j' , pte -> memory , ""[j]from root: double escape %d\\n"" , fidx )"	163:20:5694:5764	451977	16	True				
ANR	452305	CallExpression	"if_debug1m ( 'j' , pte -> memory , ""[j]from root: double escape %d\\n"" , fidx )"		451977	0					
ANR	452306	Callee	if_debug1m		451977	0					
ANR	452307	Identifier	if_debug1m		451977	0					
ANR	452308	ArgumentList	'j'		451977	1					
ANR	452309	Argument	'j'		451977	0					
ANR	452310	PrimaryExpression	'j'		451977	0					
ANR	452311	Argument	pte -> memory		451977	1					
ANR	452312	PtrMemberAccess	pte -> memory		451977	0					
ANR	452313	Identifier	pte		451977	0					
ANR	452314	Identifier	memory		451977	1					
ANR	452315	Argument	"""[j]from root: double escape %d\\n"""		451977	2					
ANR	452316	PrimaryExpression	"""[j]from root: double escape %d\\n"""		451977	0					
ANR	452317	Argument	fidx		451977	3					
ANR	452318	Identifier	fidx		451977	0					
ANR	452319	GotoStatement	goto rdown ;	164:20:5786:5796	451977	17	True				
ANR	452320	Identifier	rdown		451977	0					
ANR	452321	Label	case fmap_shift :	165:16:5814:5829	451977	18	True				
ANR	452322	Identifier	fmap_shift		451977	0					
ANR	452323	IfStatement	if ( chr == pdata -> ShiftIn )		451977	19					
ANR	452324	Condition	chr == pdata -> ShiftIn	166:24:5855:5875	451977	0	True				
ANR	452325	EqualityExpression	chr == pdata -> ShiftIn		451977	0		==			
ANR	452326	Identifier	chr		451977	0					
ANR	452327	PtrMemberAccess	pdata -> ShiftIn		451977	1					
ANR	452328	Identifier	pdata		451977	0					
ANR	452329	Identifier	ShiftIn		451977	1					
ANR	452330	ExpressionStatement	fidx = 0	167:24:5902:5910	451977	1	True				
ANR	452331	AssignmentExpression	fidx = 0		451977	0		=			
ANR	452332	Identifier	fidx		451977	0					
ANR	452333	PrimaryExpression	0		451977	1					
ANR	452334	ElseStatement	else		451977	0					
ANR	452335	IfStatement	if ( chr == pdata -> ShiftOut )		451977	0					
ANR	452336	Condition	chr == pdata -> ShiftOut	168:29:5941:5962	451977	0	True				
ANR	452337	EqualityExpression	chr == pdata -> ShiftOut		451977	0		==			
ANR	452338	Identifier	chr		451977	0					
ANR	452339	PtrMemberAccess	pdata -> ShiftOut		451977	1					
ANR	452340	Identifier	pdata		451977	0					
ANR	452341	Identifier	ShiftOut		451977	1					
ANR	452342	ExpressionStatement	fidx = 1	169:24:5989:5997	451977	1	True				
ANR	452343	AssignmentExpression	fidx = 1		451977	0		=			
ANR	452344	Identifier	fidx		451977	0					
ANR	452345	PrimaryExpression	1		451977	1					
ANR	452346	ElseStatement	else		451977	0					
ANR	452347	BreakStatement	break ;	171:24:6048:6053	451977	0	True				
ANR	452348	ExpressionStatement	p ++	172:20:6075:6078	451977	20	True				
ANR	452349	PostIncDecOperationExpression	p ++		451977	0					
ANR	452350	Identifier	p		451977	0					
ANR	452351	IncDec	++		451977	1					
ANR	452352	ExpressionStatement	"if_debug1m ( 'j' , pte -> memory , ""[j]from root: shift %d\\n"" , fidx )"	173:20:6100:6162	451977	21	True				
ANR	452353	CallExpression	"if_debug1m ( 'j' , pte -> memory , ""[j]from root: shift %d\\n"" , fidx )"		451977	0					
ANR	452354	Callee	if_debug1m		451977	0					
ANR	452355	Identifier	if_debug1m		451977	0					
ANR	452356	ArgumentList	'j'		451977	1					
ANR	452357	Argument	'j'		451977	0					
ANR	452358	PrimaryExpression	'j'		451977	0					
ANR	452359	Argument	pte -> memory		451977	1					
ANR	452360	PtrMemberAccess	pte -> memory		451977	0					
ANR	452361	Identifier	pte		451977	0					
ANR	452362	Identifier	memory		451977	1					
ANR	452363	Argument	"""[j]from root: shift %d\\n"""		451977	2					
ANR	452364	PrimaryExpression	"""[j]from root: shift %d\\n"""		451977	0					
ANR	452365	Argument	fidx		451977	3					
ANR	452366	Identifier	fidx		451977	0					
ANR	452367	GotoStatement	goto rdown ;	174:20:6184:6194	451977	22	True				
ANR	452368	Identifier	rdown		451977	0					
ANR	452369	Label	default :	175:16:6212:6219	451977	23	True				
ANR	452370	Identifier	default		451977	0					
ANR	452371	BreakStatement	break ;	176:20:6241:6246	451977	24	True				
ANR	452372	BreakStatement	break ;	178:12:6274:6279	451977	4	True				
ANR	452373	IfStatement	if ( idepth != 0 )		451977	3					
ANR	452374	Condition	idepth != 0	182:12:6405:6415	451977	0	True				
ANR	452375	EqualityExpression	idepth != 0		451977	0		!=			
ANR	452376	Identifier	idepth		451977	0					
ANR	452377	PrimaryExpression	0		451977	1					
ANR	452378	CompoundStatement		82:12:2919:2927	451977	1					
ANR	452379	IdentifierDeclStatement	int code ;	183:12:6432:6440	451977	0	True				
ANR	452380	IdentifierDecl	code		451977	0					
ANR	452381	IdentifierDeclType	int		451977	0					
ANR	452382	Identifier	code		451977	1					
ANR	452383	ExpressionStatement	pte -> fstack . depth = idepth	185:12:6455:6481	451977	1	True				
ANR	452384	AssignmentExpression	pte -> fstack . depth = idepth		451977	0		=			
ANR	452385	MemberAccess	pte -> fstack . depth		451977	0					
ANR	452386	PtrMemberAccess	pte -> fstack		451977	0					
ANR	452387	Identifier	pte		451977	0					
ANR	452388	Identifier	fstack		451977	1					
ANR	452389	Identifier	depth		451977	1					
ANR	452390	Identifier	idepth		451977	1					
ANR	452391	ExpressionStatement	code = gs_stack_modal_fonts ( pte )	186:12:6495:6527	451977	2	True				
ANR	452392	AssignmentExpression	code = gs_stack_modal_fonts ( pte )		451977	0		=			
ANR	452393	Identifier	code		451977	0					
ANR	452394	CallExpression	gs_stack_modal_fonts ( pte )		451977	1					
ANR	452395	Callee	gs_stack_modal_fonts		451977	0					
ANR	452396	Identifier	gs_stack_modal_fonts		451977	0					
ANR	452397	ArgumentList	pte		451977	1					
ANR	452398	Argument	pte		451977	0					
ANR	452399	Identifier	pte		451977	0					
ANR	452400	IfStatement	if ( code < 0 )		451977	3					
ANR	452401	Condition	code < 0	187:16:6545:6552	451977	0	True				
ANR	452402	RelationalExpression	code < 0		451977	0		<			
ANR	452403	Identifier	code		451977	0					
ANR	452404	PrimaryExpression	0		451977	1					
ANR	452405	ReturnStatement	return code ;	188:16:6571:6582	451977	1	True				
ANR	452406	Identifier	code		451977	0					
ANR	452407	IfStatement	if ( pte -> fstack . depth > idepth )		451977	4					
ANR	452408	Condition	pte -> fstack . depth > idepth	189:16:6600:6625	451977	0	True				
ANR	452409	RelationalExpression	pte -> fstack . depth > idepth		451977	0		>			
ANR	452410	MemberAccess	pte -> fstack . depth		451977	0					
ANR	452411	PtrMemberAccess	pte -> fstack		451977	0					
ANR	452412	Identifier	pte		451977	0					
ANR	452413	Identifier	fstack		451977	1					
ANR	452414	Identifier	depth		451977	1					
ANR	452415	Identifier	idepth		451977	1					
ANR	452416	ExpressionStatement	changed = 1	190:16:6644:6655	451977	1	True				
ANR	452417	AssignmentExpression	changed = 1		451977	0		=			
ANR	452418	Identifier	changed		451977	0					
ANR	452419	PrimaryExpression	1		451977	1					
ANR	452420	ExpressionStatement	orig_depth = fdepth = pte -> fstack . depth	191:12:6669:6708	451977	5	True				
ANR	452421	AssignmentExpression	orig_depth = fdepth = pte -> fstack . depth		451977	0		=			
ANR	452422	Identifier	orig_depth		451977	0					
ANR	452423	AssignmentExpression	fdepth = pte -> fstack . depth		451977	1		=			
ANR	452424	Identifier	fdepth		451977	0					
ANR	452425	MemberAccess	pte -> fstack . depth		451977	1					
ANR	452426	PtrMemberAccess	pte -> fstack		451977	0					
ANR	452427	Identifier	pte		451977	0					
ANR	452428	Identifier	fstack		451977	1					
ANR	452429	Identifier	depth		451977	1					
ANR	452430	Label	up :	196:2:6773:6775	451977	31	True				
ANR	452431	Identifier	up		451977	0					
ANR	452432	IfStatement	if ( p == end )		451977	32					
ANR	452433	Condition	p == end	196:9:6780:6787	451977	0	True				
ANR	452434	EqualityExpression	p == end		451977	0		==			
ANR	452435	Identifier	p		451977	0					
ANR	452436	Identifier	end		451977	1					
ANR	452437	ReturnStatement	return 2 ;	197:8:6798:6806	451977	1	True				
ANR	452438	PrimaryExpression	2		451977	0					
ANR	452439	ExpressionStatement	chr = * p	198:4:6812:6820	451977	33	True				
ANR	452440	AssignmentExpression	chr = * p		451977	0		=			
ANR	452441	Identifier	chr		451977	0					
ANR	452442	UnaryOperationExpression	* p		451977	1					
ANR	452443	UnaryOperator	*		451977	0					
ANR	452444	Identifier	p		451977	1					
ANR	452445	WhileStatement	while ( fdepth > 0 )		451977	34					
ANR	452446	Condition	fdepth > 0	199:11:6833:6842	451977	0	True				
ANR	452447	RelationalExpression	fdepth > 0		451977	0		>			
ANR	452448	Identifier	fdepth		451977	0					
ANR	452449	PrimaryExpression	0		451977	1					
ANR	452450	CompoundStatement		98:23:3332:3332	451977	1					
ANR	452451	ExpressionStatement	pfont = pte -> fstack . items [ fdepth - 1 ] . font	200:8:6855:6897	451977	0	True				
ANR	452452	AssignmentExpression	pfont = pte -> fstack . items [ fdepth - 1 ] . font		451977	0		=			
ANR	452453	Identifier	pfont		451977	0					
ANR	452454	MemberAccess	pte -> fstack . items [ fdepth - 1 ] . font		451977	1					
ANR	452455	ArrayIndexing	pte -> fstack . items [ fdepth - 1 ]		451977	0					
ANR	452456	MemberAccess	pte -> fstack . items		451977	0					
ANR	452457	PtrMemberAccess	pte -> fstack		451977	0					
ANR	452458	Identifier	pte		451977	0					
ANR	452459	Identifier	fstack		451977	1					
ANR	452460	Identifier	items		451977	1					
ANR	452461	AdditiveExpression	fdepth - 1		451977	1		-			
ANR	452462	Identifier	fdepth		451977	0					
ANR	452463	PrimaryExpression	1		451977	1					
ANR	452464	Identifier	font		451977	1					
ANR	452465	ExpressionStatement	pdata = & pfont0 -> data	201:8:6907:6928	451977	1	True				
ANR	452466	AssignmentExpression	pdata = & pfont0 -> data		451977	0		=			
ANR	452467	Identifier	pdata		451977	0					
ANR	452468	UnaryOperationExpression	& pfont0 -> data		451977	1					
ANR	452469	UnaryOperator	&		451977	0					
ANR	452470	PtrMemberAccess	pfont0 -> data		451977	1					
ANR	452471	Identifier	pfont0		451977	0					
ANR	452472	Identifier	data		451977	1					
ANR	452473	SwitchStatement	switch ( pdata -> FMapType )		451977	2					
ANR	452474	Condition	pdata -> FMapType	202:16:6946:6960	451977	0	True				
ANR	452475	PtrMemberAccess	pdata -> FMapType		451977	0					
ANR	452476	Identifier	pdata		451977	0					
ANR	452477	Identifier	FMapType		451977	1					
ANR	452478	CompoundStatement		101:33:3450:3450	451977	1					
ANR	452479	Label	default :	203:12:6977:6984	451977	0	True				
ANR	452480	Identifier	default		451977	0					
ANR	452481	ExpressionStatement	fdepth --	204:16:7019:7027	451977	1	True				
ANR	452482	PostIncDecOperationExpression	fdepth --		451977	0					
ANR	452483	Identifier	fdepth		451977	0					
ANR	452484	IncDec	--		451977	1					
ANR	452485	ContinueStatement	continue ;	205:16:7045:7053	451977	2	True				
ANR	452486	Label	case fmap_escape :	207:12:7068:7084	451977	3	True				
ANR	452487	Identifier	fmap_escape		451977	0					
ANR	452488	IfStatement	if ( chr != root_esc_char ( pte ) )		451977	4					
ANR	452489	Condition	chr != root_esc_char ( pte )	208:20:7106:7130	451977	0	True				
ANR	452490	EqualityExpression	chr != root_esc_char ( pte )		451977	0		!=			
ANR	452491	Identifier	chr		451977	0					
ANR	452492	CallExpression	root_esc_char ( pte )		451977	1					
ANR	452493	Callee	root_esc_char		451977	0					
ANR	452494	Identifier	root_esc_char		451977	0					
ANR	452495	ArgumentList	pte		451977	1					
ANR	452496	Argument	pte		451977	0					
ANR	452497	Identifier	pte		451977	0					
ANR	452498	BreakStatement	break ;	209:20:7153:7158	451977	1	True				
ANR	452499	ExpressionStatement	need_left ( 2 )	210:16:7176:7188	451977	5	True				
ANR	452500	CallExpression	need_left ( 2 )		451977	0					
ANR	452501	Callee	need_left		451977	0					
ANR	452502	Identifier	need_left		451977	0					
ANR	452503	ArgumentList	2		451977	1					
ANR	452504	Argument	2		451977	0					
ANR	452505	PrimaryExpression	2		451977	0					
ANR	452506	ExpressionStatement	fidx = * ++ p	211:16:7206:7217	451977	6	True				
ANR	452507	AssignmentExpression	fidx = * ++ p		451977	0		=			
ANR	452508	Identifier	fidx		451977	0					
ANR	452509	UnaryOperationExpression	* ++ p		451977	1					
ANR	452510	UnaryOperator	*		451977	0					
ANR	452511	UnaryExpression	++ p		451977	1					
ANR	452512	IncDec	++		451977	0					
ANR	452513	Identifier	p		451977	1					
ANR	452514	ExpressionStatement	"if_debug1m ( 'j' , pte -> memory , ""[j]next: escape %d\\n"" , fidx )"	212:16:7235:7293	451977	7	True				
ANR	452515	CallExpression	"if_debug1m ( 'j' , pte -> memory , ""[j]next: escape %d\\n"" , fidx )"		451977	0					
ANR	452516	Callee	if_debug1m		451977	0					
ANR	452517	Identifier	if_debug1m		451977	0					
ANR	452518	ArgumentList	'j'		451977	1					
ANR	452519	Argument	'j'		451977	0					
ANR	452520	PrimaryExpression	'j'		451977	0					
ANR	452521	Argument	pte -> memory		451977	1					
ANR	452522	PtrMemberAccess	pte -> memory		451977	0					
ANR	452523	Identifier	pte		451977	0					
ANR	452524	Identifier	memory		451977	1					
ANR	452525	Argument	"""[j]next: escape %d\\n"""		451977	2					
ANR	452526	PrimaryExpression	"""[j]next: escape %d\\n"""		451977	0					
ANR	452527	Argument	fidx		451977	3					
ANR	452528	Identifier	fidx		451977	0					
ANR	452529	IfStatement	if ( fidx == chr && fdepth > 1 )		451977	8					
ANR	452530	Condition	fidx == chr && fdepth > 1	215:20:7451:7475	451977	0	True				
ANR	452531	AndExpression	fidx == chr && fdepth > 1		451977	0		&&			
ANR	452532	EqualityExpression	fidx == chr		451977	0		==			
ANR	452533	Identifier	fidx		451977	0					
ANR	452534	Identifier	chr		451977	1					
ANR	452535	RelationalExpression	fdepth > 1		451977	1		>			
ANR	452536	Identifier	fdepth		451977	0					
ANR	452537	PrimaryExpression	1		451977	1					
ANR	452538	CompoundStatement		114:47:3965:3965	451977	1					
ANR	452539	ExpressionStatement	fdepth --	216:20:7500:7508	451977	0	True				
ANR	452540	PostIncDecOperationExpression	fdepth --		451977	0					
ANR	452541	Identifier	fdepth		451977	0					
ANR	452542	IncDec	--		451977	1					
ANR	452543	GotoStatement	goto up ;	217:20:7530:7537	451977	1	True				
ANR	452544	Identifier	up		451977	0					
ANR	452545	Label	down :	219:14:7571:7575	451977	9	True				
ANR	452546	Identifier	down		451977	0					
ANR	452547	IfStatement	if ( ++ p == end )		451977	10					
ANR	452548	Condition	++ p == end	219:23:7580:7589	451977	0	True				
ANR	452549	EqualityExpression	++ p == end		451977	0		==			
ANR	452550	UnaryExpression	++ p		451977	0					
ANR	452551	IncDec	++		451977	0					
ANR	452552	Identifier	p		451977	1					
ANR	452553	Identifier	end		451977	1					
ANR	452554	ReturnStatement	return 2 ;	220:20:7612:7620	451977	1	True				
ANR	452555	PrimaryExpression	2		451977	0					
ANR	452556	ExpressionStatement	chr = * p	221:16:7638:7646	451977	11	True				
ANR	452557	AssignmentExpression	chr = * p		451977	0		=			
ANR	452558	Identifier	chr		451977	0					
ANR	452559	UnaryOperationExpression	* p		451977	1					
ANR	452560	UnaryOperator	*		451977	0					
ANR	452561	Identifier	p		451977	1					
ANR	452562	ExpressionStatement	fdepth --	222:16:7664:7672	451977	12	True				
ANR	452563	PostIncDecOperationExpression	fdepth --		451977	0					
ANR	452564	Identifier	fdepth		451977	0					
ANR	452565	IncDec	--		451977	1					
ANR	452566	DoStatement	do		451977	13					
ANR	452567	CompoundStatement		122:19:4180:4180	451977	0					
ANR	452568	ExpressionStatement	"select_descendant ( pfont , pdata , fidx , fdepth )"	224:20:7715:7760	451977	0	True				
ANR	452569	CallExpression	"select_descendant ( pfont , pdata , fidx , fdepth )"		451977	0					
ANR	452570	Callee	select_descendant		451977	0					
ANR	452571	Identifier	select_descendant		451977	0					
ANR	452572	ArgumentList	pfont		451977	1					
ANR	452573	Argument	pfont		451977	0					
ANR	452574	Identifier	pfont		451977	0					
ANR	452575	Argument	pdata		451977	1					
ANR	452576	Identifier	pdata		451977	0					
ANR	452577	Argument	fidx		451977	2					
ANR	452578	Identifier	fidx		451977	0					
ANR	452579	Argument	fdepth		451977	3					
ANR	452580	Identifier	fdepth		451977	0					
ANR	452581	ExpressionStatement	"if_debug3m ( 'j' , pte -> memory , ""[j]down from modal: new depth=%d, index=%d, new font=0x%lx\\n"" , fdepth , fidx , ( ulong ) pfont )"	225:20:7782:7934	451977	1	True				
ANR	452582	CallExpression	"if_debug3m ( 'j' , pte -> memory , ""[j]down from modal: new depth=%d, index=%d, new font=0x%lx\\n"" , fdepth , fidx , ( ulong ) pfont )"		451977	0					
ANR	452583	Callee	if_debug3m		451977	0					
ANR	452584	Identifier	if_debug3m		451977	0					
ANR	452585	ArgumentList	'j'		451977	1					
ANR	452586	Argument	'j'		451977	0					
ANR	452587	PrimaryExpression	'j'		451977	0					
ANR	452588	Argument	pte -> memory		451977	1					
ANR	452589	PtrMemberAccess	pte -> memory		451977	0					
ANR	452590	Identifier	pte		451977	0					
ANR	452591	Identifier	memory		451977	1					
ANR	452592	Argument	"""[j]down from modal: new depth=%d, index=%d, new font=0x%lx\\n"""		451977	2					
ANR	452593	PrimaryExpression	"""[j]down from modal: new depth=%d, index=%d, new font=0x%lx\\n"""		451977	0					
ANR	452594	Argument	fdepth		451977	3					
ANR	452595	Identifier	fdepth		451977	0					
ANR	452596	Argument	fidx		451977	4					
ANR	452597	Identifier	fidx		451977	0					
ANR	452598	Argument	( ulong ) pfont		451977	5					
ANR	452599	CastExpression	( ulong ) pfont		451977	0					
ANR	452600	CastTarget	ulong		451977	0					
ANR	452601	Identifier	pfont		451977	1					
ANR	452602	IfStatement	if ( pfont -> FontType != ft_composite )		451977	2					
ANR	452603	Condition	pfont -> FontType != ft_composite	227:24:7960:7990	451977	0	True				
ANR	452604	EqualityExpression	pfont -> FontType != ft_composite		451977	0		!=			
ANR	452605	PtrMemberAccess	pfont -> FontType		451977	0					
ANR	452606	Identifier	pfont		451977	0					
ANR	452607	Identifier	FontType		451977	1					
ANR	452608	Identifier	ft_composite		451977	1					
ANR	452609	BreakStatement	break ;	228:24:8017:8022	451977	1	True				
ANR	452610	ExpressionStatement	pdata = & pfont0 -> data	229:20:8044:8065	451977	3	True				
ANR	452611	AssignmentExpression	pdata = & pfont0 -> data		451977	0		=			
ANR	452612	Identifier	pdata		451977	0					
ANR	452613	UnaryOperationExpression	& pfont0 -> data		451977	1					
ANR	452614	UnaryOperator	&		451977	0					
ANR	452615	PtrMemberAccess	pfont0 -> data		451977	1					
ANR	452616	Identifier	pfont0		451977	0					
ANR	452617	Identifier	data		451977	1					
ANR	452618	ExpressionStatement	fidx = 0	230:20:8087:8095	451977	4	True				
ANR	452619	AssignmentExpression	fidx = 0		451977	0		=			
ANR	452620	Identifier	fidx		451977	0					
ANR	452621	PrimaryExpression	0		451977	1					
ANR	452622	Condition	pdata -> FMapType == fmap_escape	232:23:8138:8167	451977	1	True				
ANR	452623	EqualityExpression	pdata -> FMapType == fmap_escape		451977	0		==			
ANR	452624	PtrMemberAccess	pdata -> FMapType		451977	0					
ANR	452625	Identifier	pdata		451977	0					
ANR	452626	Identifier	FMapType		451977	1					
ANR	452627	Identifier	fmap_escape		451977	1					
ANR	452628	ContinueStatement	continue ;	233:16:8187:8195	451977	14	True				
ANR	452629	Label	case fmap_double_escape :	235:12:8210:8233	451977	15	True				
ANR	452630	Identifier	fmap_double_escape		451977	0					
ANR	452631	IfStatement	if ( chr != root_esc_char ( pte ) )		451977	16					
ANR	452632	Condition	chr != root_esc_char ( pte )	236:20:8255:8279	451977	0	True				
ANR	452633	EqualityExpression	chr != root_esc_char ( pte )		451977	0		!=			
ANR	452634	Identifier	chr		451977	0					
ANR	452635	CallExpression	root_esc_char ( pte )		451977	1					
ANR	452636	Callee	root_esc_char		451977	0					
ANR	452637	Identifier	root_esc_char		451977	0					
ANR	452638	ArgumentList	pte		451977	1					
ANR	452639	Argument	pte		451977	0					
ANR	452640	Identifier	pte		451977	0					
ANR	452641	BreakStatement	break ;	237:20:8302:8307	451977	1	True				
ANR	452642	ExpressionStatement	need_left ( 2 )	238:16:8325:8337	451977	17	True				
ANR	452643	CallExpression	need_left ( 2 )		451977	0					
ANR	452644	Callee	need_left		451977	0					
ANR	452645	Identifier	need_left		451977	0					
ANR	452646	ArgumentList	2		451977	1					
ANR	452647	Argument	2		451977	0					
ANR	452648	PrimaryExpression	2		451977	0					
ANR	452649	ExpressionStatement	fidx = * ++ p	239:16:8355:8366	451977	18	True				
ANR	452650	AssignmentExpression	fidx = * ++ p		451977	0		=			
ANR	452651	Identifier	fidx		451977	0					
ANR	452652	UnaryOperationExpression	* ++ p		451977	1					
ANR	452653	UnaryOperator	*		451977	0					
ANR	452654	UnaryExpression	++ p		451977	1					
ANR	452655	IncDec	++		451977	0					
ANR	452656	Identifier	p		451977	1					
ANR	452657	IfStatement	if ( fidx == chr )		451977	19					
ANR	452658	Condition	fidx == chr	240:20:8388:8398	451977	0	True				
ANR	452659	EqualityExpression	fidx == chr		451977	0		==			
ANR	452660	Identifier	fidx		451977	0					
ANR	452661	Identifier	chr		451977	1					
ANR	452662	CompoundStatement		139:33:4888:4888	451977	1					
ANR	452663	ExpressionStatement	need_left ( 2 )	241:20:8423:8435	451977	0	True				
ANR	452664	CallExpression	need_left ( 2 )		451977	0					
ANR	452665	Callee	need_left		451977	0					
ANR	452666	Identifier	need_left		451977	0					
ANR	452667	ArgumentList	2		451977	1					
ANR	452668	Argument	2		451977	0					
ANR	452669	PrimaryExpression	2		451977	0					
ANR	452670	ExpressionStatement	fidx = * ++ p + 256	242:20:8457:8474	451977	1	True				
ANR	452671	AssignmentExpression	fidx = * ++ p + 256		451977	0		=			
ANR	452672	Identifier	fidx		451977	0					
ANR	452673	AdditiveExpression	* ++ p + 256		451977	1		+			
ANR	452674	UnaryOperationExpression	* ++ p		451977	0					
ANR	452675	UnaryOperator	*		451977	0					
ANR	452676	UnaryExpression	++ p		451977	1					
ANR	452677	IncDec	++		451977	0					
ANR	452678	Identifier	p		451977	1					
ANR	452679	PrimaryExpression	256		451977	1					
ANR	452680	ExpressionStatement	"if_debug1m ( 'j' , pte -> memory , ""[j]next: double escape %d\\n"" , fidx )"	244:16:8510:8575	451977	20	True				
ANR	452681	CallExpression	"if_debug1m ( 'j' , pte -> memory , ""[j]next: double escape %d\\n"" , fidx )"		451977	0					
ANR	452682	Callee	if_debug1m		451977	0					
ANR	452683	Identifier	if_debug1m		451977	0					
ANR	452684	ArgumentList	'j'		451977	1					
ANR	452685	Argument	'j'		451977	0					
ANR	452686	PrimaryExpression	'j'		451977	0					
ANR	452687	Argument	pte -> memory		451977	1					
ANR	452688	PtrMemberAccess	pte -> memory		451977	0					
ANR	452689	Identifier	pte		451977	0					
ANR	452690	Identifier	memory		451977	1					
ANR	452691	Argument	"""[j]next: double escape %d\\n"""		451977	2					
ANR	452692	PrimaryExpression	"""[j]next: double escape %d\\n"""		451977	0					
ANR	452693	Argument	fidx		451977	3					
ANR	452694	Identifier	fidx		451977	0					
ANR	452695	GotoStatement	goto down ;	245:16:8593:8602	451977	21	True				
ANR	452696	Identifier	down		451977	0					
ANR	452697	Label	case fmap_shift :	247:12:8617:8632	451977	22	True				
ANR	452698	Identifier	fmap_shift		451977	0					
ANR	452699	IfStatement	if ( chr == pdata -> ShiftIn )		451977	23					
ANR	452700	Condition	chr == pdata -> ShiftIn	248:20:8654:8674	451977	0	True				
ANR	452701	EqualityExpression	chr == pdata -> ShiftIn		451977	0		==			
ANR	452702	Identifier	chr		451977	0					
ANR	452703	PtrMemberAccess	pdata -> ShiftIn		451977	1					
ANR	452704	Identifier	pdata		451977	0					
ANR	452705	Identifier	ShiftIn		451977	1					
ANR	452706	ExpressionStatement	fidx = 0	249:20:8697:8705	451977	1	True				
ANR	452707	AssignmentExpression	fidx = 0		451977	0		=			
ANR	452708	Identifier	fidx		451977	0					
ANR	452709	PrimaryExpression	0		451977	1					
ANR	452710	ElseStatement	else		451977	0					
ANR	452711	IfStatement	if ( chr == pdata -> ShiftOut )		451977	0					
ANR	452712	Condition	chr == pdata -> ShiftOut	250:25:8732:8753	451977	0	True				
ANR	452713	EqualityExpression	chr == pdata -> ShiftOut		451977	0		==			
ANR	452714	Identifier	chr		451977	0					
ANR	452715	PtrMemberAccess	pdata -> ShiftOut		451977	1					
ANR	452716	Identifier	pdata		451977	0					
ANR	452717	Identifier	ShiftOut		451977	1					
ANR	452718	ExpressionStatement	fidx = 1	251:20:8776:8784	451977	1	True				
ANR	452719	AssignmentExpression	fidx = 1		451977	0		=			
ANR	452720	Identifier	fidx		451977	0					
ANR	452721	PrimaryExpression	1		451977	1					
ANR	452722	ElseStatement	else		451977	0					
ANR	452723	BreakStatement	break ;	253:20:8827:8832	451977	0	True				
ANR	452724	ExpressionStatement	"if_debug1m ( 'j' , pte -> memory , ""[j]next: shift %d\\n"" , fidx )"	254:16:8850:8907	451977	24	True				
ANR	452725	CallExpression	"if_debug1m ( 'j' , pte -> memory , ""[j]next: shift %d\\n"" , fidx )"		451977	0					
ANR	452726	Callee	if_debug1m		451977	0					
ANR	452727	Identifier	if_debug1m		451977	0					
ANR	452728	ArgumentList	'j'		451977	1					
ANR	452729	Argument	'j'		451977	0					
ANR	452730	PrimaryExpression	'j'		451977	0					
ANR	452731	Argument	pte -> memory		451977	1					
ANR	452732	PtrMemberAccess	pte -> memory		451977	0					
ANR	452733	Identifier	pte		451977	0					
ANR	452734	Identifier	memory		451977	1					
ANR	452735	Argument	"""[j]next: shift %d\\n"""		451977	2					
ANR	452736	PrimaryExpression	"""[j]next: shift %d\\n"""		451977	0					
ANR	452737	Argument	fidx		451977	3					
ANR	452738	Identifier	fidx		451977	0					
ANR	452739	GotoStatement	goto down ;	255:16:8925:8934	451977	25	True				
ANR	452740	Identifier	down		451977	0					
ANR	452741	BreakStatement	break ;	257:8:8954:8959	451977	3	True				
ANR	452742	ExpressionStatement	p ++	261:4:9064:9067	451977	35	True				
ANR	452743	PostIncDecOperationExpression	p ++		451977	0					
ANR	452744	Identifier	p		451977	0					
ANR	452745	IncDec	++		451977	1					
ANR	452746	WhileStatement	while ( ( pfont = pte -> fstack . items [ fdepth ] . font ) -> FontType == ft_composite )		451977	36					
ANR	452747	Condition	( pfont = pte -> fstack . items [ fdepth ] . font ) -> FontType == ft_composite	272:11:9413:9478	451977	0	True				
ANR	452748	EqualityExpression	( pfont = pte -> fstack . items [ fdepth ] . font ) -> FontType == ft_composite		451977	0		==			
ANR	452749	PtrMemberAccess	( pfont = pte -> fstack . items [ fdepth ] . font ) -> FontType		451977	0					
ANR	452750	AssignmentExpression	pfont = pte -> fstack . items [ fdepth ] . font		451977	0		=			
ANR	452751	Identifier	pfont		451977	0					
ANR	452752	MemberAccess	pte -> fstack . items [ fdepth ] . font		451977	1					
ANR	452753	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	452754	MemberAccess	pte -> fstack . items		451977	0					
ANR	452755	PtrMemberAccess	pte -> fstack		451977	0					
ANR	452756	Identifier	pte		451977	0					
ANR	452757	Identifier	fstack		451977	1					
ANR	452758	Identifier	items		451977	1					
ANR	452759	Identifier	fdepth		451977	1					
ANR	452760	Identifier	font		451977	1					
ANR	452761	Identifier	FontType		451977	1					
ANR	452762	Identifier	ft_composite		451977	1					
ANR	452763	CompoundStatement		171:79:5968:5968	451977	1					
ANR	452764	ExpressionStatement	pdata = & pfont0 -> data	273:8:9491:9512	451977	0	True				
ANR	452765	AssignmentExpression	pdata = & pfont0 -> data		451977	0		=			
ANR	452766	Identifier	pdata		451977	0					
ANR	452767	UnaryOperationExpression	& pfont0 -> data		451977	1					
ANR	452768	UnaryOperator	&		451977	0					
ANR	452769	PtrMemberAccess	pfont0 -> data		451977	1					
ANR	452770	Identifier	pfont0		451977	0					
ANR	452771	Identifier	data		451977	1					
ANR	452772	SwitchStatement	switch ( pdata -> FMapType )		451977	1					
ANR	452773	Condition	pdata -> FMapType	274:16:9530:9544	451977	0	True				
ANR	452774	PtrMemberAccess	pdata -> FMapType		451977	0					
ANR	452775	Identifier	pdata		451977	0					
ANR	452776	Identifier	FMapType		451977	1					
ANR	452777	CompoundStatement		173:33:6034:6034	451977	1					
ANR	452778	Label	default :	275:12:9561:9568	451977	0	True				
ANR	452779	Identifier	default		451977	0					
ANR	452780	ExpressionStatement	return_error ( gs_error_invalidfont )	276:16:9606:9640	451977	1	True				
ANR	452781	CallExpression	return_error ( gs_error_invalidfont )		451977	0					
ANR	452782	Callee	return_error		451977	0					
ANR	452783	Identifier	return_error		451977	0					
ANR	452784	ArgumentList	gs_error_invalidfont		451977	1					
ANR	452785	Argument	gs_error_invalidfont		451977	0					
ANR	452786	Identifier	gs_error_invalidfont		451977	0					
ANR	452787	Label	case fmap_8_8 :	278:12:9655:9668	451977	2	True				
ANR	452788	Identifier	fmap_8_8		451977	0					
ANR	452789	ExpressionStatement	need_left ( 1 )	279:16:9686:9698	451977	3	True				
ANR	452790	CallExpression	need_left ( 1 )		451977	0					
ANR	452791	Callee	need_left		451977	0					
ANR	452792	Identifier	need_left		451977	0					
ANR	452793	ArgumentList	1		451977	1					
ANR	452794	Argument	1		451977	0					
ANR	452795	PrimaryExpression	1		451977	0					
ANR	452796	ExpressionStatement	fidx = chr	280:16:9716:9726	451977	4	True				
ANR	452797	AssignmentExpression	fidx = chr		451977	0		=			
ANR	452798	Identifier	fidx		451977	0					
ANR	452799	Identifier	chr		451977	1					
ANR	452800	ExpressionStatement	chr = * p ++	281:16:9744:9754	451977	5	True				
ANR	452801	AssignmentExpression	chr = * p ++		451977	0		=			
ANR	452802	Identifier	chr		451977	0					
ANR	452803	UnaryOperationExpression	* p ++		451977	1					
ANR	452804	UnaryOperator	*		451977	0					
ANR	452805	PostIncDecOperationExpression	p ++		451977	1					
ANR	452806	Identifier	p		451977	0					
ANR	452807	IncDec	++		451977	1					
ANR	452808	ExpressionStatement	"if_debug2m ( 'J' , pte -> memory , ""[J]8/8 index=%d, char=%ld\\n"" , fidx , chr )"	282:16:9772:9869	451977	6	True				
ANR	452809	CallExpression	"if_debug2m ( 'J' , pte -> memory , ""[J]8/8 index=%d, char=%ld\\n"" , fidx , chr )"		451977	0					
ANR	452810	Callee	if_debug2m		451977	0					
ANR	452811	Identifier	if_debug2m		451977	0					
ANR	452812	ArgumentList	'J'		451977	1					
ANR	452813	Argument	'J'		451977	0					
ANR	452814	PrimaryExpression	'J'		451977	0					
ANR	452815	Argument	pte -> memory		451977	1					
ANR	452816	PtrMemberAccess	pte -> memory		451977	0					
ANR	452817	Identifier	pte		451977	0					
ANR	452818	Identifier	memory		451977	1					
ANR	452819	Argument	"""[J]8/8 index=%d, char=%ld\\n"""		451977	2					
ANR	452820	PrimaryExpression	"""[J]8/8 index=%d, char=%ld\\n"""		451977	0					
ANR	452821	Argument	fidx		451977	3					
ANR	452822	Identifier	fidx		451977	0					
ANR	452823	Argument	chr		451977	4					
ANR	452824	Identifier	chr		451977	0					
ANR	452825	BreakStatement	break ;	284:16:9887:9892	451977	7	True				
ANR	452826	Label	case fmap_1_7 :	286:12:9907:9920	451977	8	True				
ANR	452827	Identifier	fmap_1_7		451977	0					
ANR	452828	ExpressionStatement	fidx = chr >> 7	287:16:9938:9953	451977	9	True				
ANR	452829	AssignmentExpression	fidx = chr >> 7		451977	0		=			
ANR	452830	Identifier	fidx		451977	0					
ANR	452831	ShiftExpression	chr >> 7		451977	1		>>			
ANR	452832	Identifier	chr		451977	0					
ANR	452833	PrimaryExpression	7		451977	1					
ANR	452834	ExpressionStatement	chr &= 0x7f	288:16:9971:9982	451977	10	True				
ANR	452835	AssignmentExpression	chr &= 0x7f		451977	0		&=			
ANR	452836	Identifier	chr		451977	0					
ANR	452837	PrimaryExpression	0x7f		451977	1					
ANR	452838	ExpressionStatement	"if_debug2m ( 'J' , pte -> memory , ""[J]1/7 index=%d, char=%ld\\n"" , fidx , chr )"	289:16:10000:10097	451977	11	True				
ANR	452839	CallExpression	"if_debug2m ( 'J' , pte -> memory , ""[J]1/7 index=%d, char=%ld\\n"" , fidx , chr )"		451977	0					
ANR	452840	Callee	if_debug2m		451977	0					
ANR	452841	Identifier	if_debug2m		451977	0					
ANR	452842	ArgumentList	'J'		451977	1					
ANR	452843	Argument	'J'		451977	0					
ANR	452844	PrimaryExpression	'J'		451977	0					
ANR	452845	Argument	pte -> memory		451977	1					
ANR	452846	PtrMemberAccess	pte -> memory		451977	0					
ANR	452847	Identifier	pte		451977	0					
ANR	452848	Identifier	memory		451977	1					
ANR	452849	Argument	"""[J]1/7 index=%d, char=%ld\\n"""		451977	2					
ANR	452850	PrimaryExpression	"""[J]1/7 index=%d, char=%ld\\n"""		451977	0					
ANR	452851	Argument	fidx		451977	3					
ANR	452852	Identifier	fidx		451977	0					
ANR	452853	Argument	chr		451977	4					
ANR	452854	Identifier	chr		451977	0					
ANR	452855	BreakStatement	break ;	291:16:10115:10120	451977	12	True				
ANR	452856	Label	case fmap_9_7 :	293:12:10135:10148	451977	13	True				
ANR	452857	Identifier	fmap_9_7		451977	0					
ANR	452858	ExpressionStatement	need_left ( 1 )	294:16:10166:10178	451977	14	True				
ANR	452859	CallExpression	need_left ( 1 )		451977	0					
ANR	452860	Callee	need_left		451977	0					
ANR	452861	Identifier	need_left		451977	0					
ANR	452862	ArgumentList	1		451977	1					
ANR	452863	Argument	1		451977	0					
ANR	452864	PrimaryExpression	1		451977	0					
ANR	452865	ExpressionStatement	fidx = ( ( uint ) chr << 1 ) + ( * p >> 7 )	295:16:10196:10232	451977	15	True				
ANR	452866	AssignmentExpression	fidx = ( ( uint ) chr << 1 ) + ( * p >> 7 )		451977	0		=			
ANR	452867	Identifier	fidx		451977	0					
ANR	452868	AdditiveExpression	( ( uint ) chr << 1 ) + ( * p >> 7 )		451977	1		+			
ANR	452869	ShiftExpression	( uint ) chr << 1		451977	0		<<			
ANR	452870	CastExpression	( uint ) chr		451977	0					
ANR	452871	CastTarget	uint		451977	0					
ANR	452872	Identifier	chr		451977	1					
ANR	452873	PrimaryExpression	1		451977	1					
ANR	452874	ShiftExpression	* p >> 7		451977	1		>>			
ANR	452875	UnaryOperationExpression	* p		451977	0					
ANR	452876	UnaryOperator	*		451977	0					
ANR	452877	Identifier	p		451977	1					
ANR	452878	PrimaryExpression	7		451977	1					
ANR	452879	ExpressionStatement	chr = * p & 0x7f	296:16:10250:10265	451977	16	True				
ANR	452880	AssignmentExpression	chr = * p & 0x7f		451977	0		=			
ANR	452881	Identifier	chr		451977	0					
ANR	452882	BitAndExpression	* p & 0x7f		451977	1		&			
ANR	452883	UnaryOperationExpression	* p		451977	0					
ANR	452884	UnaryOperator	*		451977	0					
ANR	452885	Identifier	p		451977	1					
ANR	452886	PrimaryExpression	0x7f		451977	1					
ANR	452887	ExpressionStatement	"if_debug2m ( 'J' , pte -> memory , ""[J]9/7 index=%d, char=%ld\\n"" , fidx , chr )"	297:16:10283:10380	451977	17	True				
ANR	452888	CallExpression	"if_debug2m ( 'J' , pte -> memory , ""[J]9/7 index=%d, char=%ld\\n"" , fidx , chr )"		451977	0					
ANR	452889	Callee	if_debug2m		451977	0					
ANR	452890	Identifier	if_debug2m		451977	0					
ANR	452891	ArgumentList	'J'		451977	1					
ANR	452892	Argument	'J'		451977	0					
ANR	452893	PrimaryExpression	'J'		451977	0					
ANR	452894	Argument	pte -> memory		451977	1					
ANR	452895	PtrMemberAccess	pte -> memory		451977	0					
ANR	452896	Identifier	pte		451977	0					
ANR	452897	Identifier	memory		451977	1					
ANR	452898	Argument	"""[J]9/7 index=%d, char=%ld\\n"""		451977	2					
ANR	452899	PrimaryExpression	"""[J]9/7 index=%d, char=%ld\\n"""		451977	0					
ANR	452900	Argument	fidx		451977	3					
ANR	452901	Identifier	fidx		451977	0					
ANR	452902	Argument	chr		451977	4					
ANR	452903	Identifier	chr		451977	0					
ANR	452904	ExpressionStatement	p ++	299:16:10398:10401	451977	18	True				
ANR	452905	PostIncDecOperationExpression	p ++		451977	0					
ANR	452906	Identifier	p		451977	0					
ANR	452907	IncDec	++		451977	1					
ANR	452908	BreakStatement	break ;	300:16:10419:10424	451977	19	True				
ANR	452909	Label	case fmap_SubsVector :	302:12:10439:10459	451977	20	True				
ANR	452910	Identifier	fmap_SubsVector		451977	0					
ANR	452911	CompoundStatement		205:20:7093:7133	451977	21					
ANR	452912	IdentifierDeclStatement	int width = pdata -> subs_width ;	304:20:10499:10528	451977	0	True				
ANR	452913	IdentifierDecl	width = pdata -> subs_width		451977	0					
ANR	452914	IdentifierDeclType	int		451977	0					
ANR	452915	Identifier	width		451977	1					
ANR	452916	AssignmentExpression	width = pdata -> subs_width		451977	2		=			
ANR	452917	Identifier	width		451977	0					
ANR	452918	PtrMemberAccess	pdata -> subs_width		451977	1					
ANR	452919	Identifier	pdata		451977	0					
ANR	452920	Identifier	subs_width		451977	1					
ANR	452921	IdentifierDeclStatement	uint subs_count = pdata -> subs_size ;	305:20:10550:10584	451977	1	True				
ANR	452922	IdentifierDecl	subs_count = pdata -> subs_size		451977	0					
ANR	452923	IdentifierDeclType	uint		451977	0					
ANR	452924	Identifier	subs_count		451977	1					
ANR	452925	AssignmentExpression	subs_count = pdata -> subs_size		451977	2		=			
ANR	452926	Identifier	subs_count		451977	0					
ANR	452927	PtrMemberAccess	pdata -> subs_size		451977	1					
ANR	452928	Identifier	pdata		451977	0					
ANR	452929	Identifier	subs_size		451977	1					
ANR	452930	IdentifierDeclStatement	const byte * psv = pdata -> SubsVector . data ;	306:20:10606:10646	451977	2	True				
ANR	452931	IdentifierDecl	* psv = pdata -> SubsVector . data		451977	0					
ANR	452932	IdentifierDeclType	const byte *		451977	0					
ANR	452933	Identifier	psv		451977	1					
ANR	452934	AssignmentExpression	* psv = pdata -> SubsVector . data		451977	2		=			
ANR	452935	Identifier	psv		451977	0					
ANR	452936	MemberAccess	pdata -> SubsVector . data		451977	1					
ANR	452937	PtrMemberAccess	pdata -> SubsVector		451977	0					
ANR	452938	Identifier	pdata		451977	0					
ANR	452939	Identifier	SubsVector		451977	1					
ANR	452940	Identifier	data		451977	1					
ANR	452941	Statement	define	308:1:10650:10655	451977	3	True				
ANR	452942	Statement	subs_loop	308:8:10657:10665	451977	4	True				
ANR	452943	Statement	(	308:17:10666:10666	451977	5	True				
ANR	452944	Statement	subs_elt	308:18:10667:10674	451977	6	True				
ANR	452945	Statement	","	308:26:10675:10675	451977	7	True				
ANR	452946	Statement	width	308:28:10677:10681	451977	8	True				
ANR	452947	Statement	)	308:33:10682:10682	451977	9	True				
ANR	452948	WhileStatement	while ( subs_count != 0 && tchr >= ( schr = subs_elt ) )		451977	10					
ANR	452949	Condition	subs_count != 0 && tchr >= ( schr = subs_elt )	309:10:10695:10738	451977	0	True				
ANR	452950	AndExpression	subs_count != 0 && tchr >= ( schr = subs_elt )		451977	0		&&			
ANR	452951	EqualityExpression	subs_count != 0		451977	0		!=			
ANR	452952	Identifier	subs_count		451977	0					
ANR	452953	PrimaryExpression	0		451977	1					
ANR	452954	RelationalExpression	tchr >= ( schr = subs_elt )		451977	1		>=			
ANR	452955	Identifier	tchr		451977	0					
ANR	452956	AssignmentExpression	schr = subs_elt		451977	1		=			
ANR	452957	Identifier	schr		451977	0					
ANR	452958	Identifier	subs_elt		451977	1					
ANR	452959	ExpressionStatement	"subs_count -- , tchr -= schr , psv += width"	310:4:10747:10787	451977	1	True				
ANR	452960	Expression	"subs_count -- , tchr -= schr , psv += width"		451977	0					
ANR	452961	PostIncDecOperationExpression	subs_count --		451977	0					
ANR	452962	Identifier	subs_count		451977	0					
ANR	452963	IncDec	--		451977	1					
ANR	452964	Expression	"tchr -= schr , psv += width"		451977	1					
ANR	452965	AssignmentExpression	tchr -= schr		451977	0		-=			
ANR	452966	Identifier	tchr		451977	0					
ANR	452967	Identifier	schr		451977	1					
ANR	452968	AssignmentExpression	psv += width		451977	1		+=			
ANR	452969	Identifier	psv		451977	0					
ANR	452970	Identifier	width		451977	1					
ANR	452971	ExpressionStatement	chr = tchr	311:2:10792:10802	451977	11	True				
ANR	452972	AssignmentExpression	chr = tchr		451977	0		=			
ANR	452973	Identifier	chr		451977	0					
ANR	452974	Identifier	tchr		451977	1					
ANR	452975	ExpressionStatement	p += width - 1	311:14:10804:10818	451977	12	True				
ANR	452976	AssignmentExpression	p += width - 1		451977	0		+=			
ANR	452977	Identifier	p		451977	0					
ANR	452978	AdditiveExpression	width - 1		451977	1		-			
ANR	452979	Identifier	width		451977	0					
ANR	452980	PrimaryExpression	1		451977	1					
ANR	452981	Statement	break	311:30:10820:10824	451977	13	True				
ANR	452982	SwitchStatement	switch ( width )		451977	14					
ANR	452983	Condition	width	313:28:10855:10859	451977	0	True				
ANR	452984	Identifier	width		451977	0					
ANR	452985	CompoundStatement		212:35:7349:7349	451977	1					
ANR	452986	Label	default :	314:24:10888:10895	451977	0	True				
ANR	452987	Identifier	default		451977	0					
ANR	452988	ExpressionStatement	return_error ( gs_error_invalidfont )	315:28:10944:10978	451977	1	True				
ANR	452989	CallExpression	return_error ( gs_error_invalidfont )		451977	0					
ANR	452990	Callee	return_error		451977	0					
ANR	452991	Identifier	return_error		451977	0					
ANR	452992	ArgumentList	gs_error_invalidfont		451977	1					
ANR	452993	Argument	gs_error_invalidfont		451977	0					
ANR	452994	Identifier	gs_error_invalidfont		451977	0					
ANR	452995	Label	case 1 :	316:24:11004:11010	451977	2	True				
ANR	452996	CompoundStatement		217:32:7561:7589	451977	3					
ANR	452997	IdentifierDeclStatement	"byte tchr = ( byte ) chr , schr ;"	318:32:11074:11102	451977	0	True				
ANR	452998	IdentifierDecl	tchr = ( byte ) chr		451977	0					
ANR	452999	IdentifierDeclType	byte		451977	0					
ANR	453000	Identifier	tchr		451977	1					
ANR	453001	AssignmentExpression	tchr = ( byte ) chr		451977	2		=			
ANR	453002	Identifier	tchr		451977	0					
ANR	453003	CastExpression	( byte ) chr		451977	1					
ANR	453004	CastTarget	byte		451977	0					
ANR	453005	Identifier	chr		451977	1					
ANR	453006	IdentifierDecl	schr		451977	1					
ANR	453007	IdentifierDeclType	byte		451977	0					
ANR	453008	Identifier	schr		451977	1					
ANR	453009	ExpressionStatement	"subs_loop ( * psv , 1 )"	320:32:11137:11155	451977	1	True				
ANR	453010	CallExpression	"subs_loop ( * psv , 1 )"		451977	0					
ANR	453011	Callee	subs_loop		451977	0					
ANR	453012	Identifier	subs_loop		451977	0					
ANR	453013	ArgumentList	* psv		451977	1					
ANR	453014	Argument	* psv		451977	0					
ANR	453015	UnaryOperationExpression	* psv		451977	0					
ANR	453016	UnaryOperator	*		451977	0					
ANR	453017	Identifier	psv		451977	1					
ANR	453018	Argument	1		451977	1					
ANR	453019	PrimaryExpression	1		451977	0					
ANR	453020	Label	case 2 :	322:24:11211:11217	451977	4	True				
ANR	453021	ExpressionStatement	need_left ( 1 )	323:28:11247:11259	451977	5	True				
ANR	453022	CallExpression	need_left ( 1 )		451977	0					
ANR	453023	Callee	need_left		451977	0					
ANR	453024	Identifier	need_left		451977	0					
ANR	453025	ArgumentList	1		451977	1					
ANR	453026	Argument	1		451977	0					
ANR	453027	PrimaryExpression	1		451977	0					
ANR	453028	Statement	define	324:1:11262:11267	451977	6	True				
ANR	453029	Statement	w2	324:8:11269:11270	451977	7	True				
ANR	453030	Statement	(	324:10:11271:11271	451977	8	True				
ANR	453031	Statement	p	324:11:11272:11272	451977	9	True				
ANR	453032	Statement	)	324:12:11273:11273	451977	10	True				
ANR	453033	Statement	(	324:14:11275:11275	451977	11	True				
ANR	453034	Statement	(	324:15:11276:11276	451977	12	True				
ANR	453035	Statement	(	324:16:11277:11277	451977	13	True				
ANR	453036	Statement	ushort	324:17:11278:11283	451977	14	True				
ANR	453037	Statement	)	324:23:11284:11284	451977	15	True				
ANR	453038	Statement	*	324:24:11285:11285	451977	16	True				
ANR	453039	Statement	p	324:25:11286:11286	451977	17	True				
ANR	453040	Statement	<<	324:27:11288:11289	451977	18	True				
ANR	453041	Statement	8	324:30:11291:11291	451977	19	True				
ANR	453042	Statement	)	324:31:11292:11292	451977	20	True				
ANR	453043	Statement	+	324:33:11294:11294	451977	21	True				
ANR	453044	Statement	p	324:35:11296:11296	451977	22	True				
ANR	453045	Statement	[	324:36:11297:11297	451977	23	True				
ANR	453046	Statement	1	324:37:11298:11298	451977	24	True				
ANR	453047	Statement	]	324:38:11299:11299	451977	25	True				
ANR	453048	Statement	)	324:39:11300:11300	451977	26	True				
ANR	453049	CompoundStatement		225:32:7851:7934	451977	27					
ANR	453050	IdentifierDeclStatement	"ushort tchr = ( ( ushort ) chr << 8 ) + * p , schr ;"	326:32:11364:11447	451977	0	True				
ANR	453051	IdentifierDecl	tchr = ( ( ushort ) chr << 8 ) + * p		451977	0					
ANR	453052	IdentifierDeclType	ushort		451977	0					
ANR	453053	Identifier	tchr		451977	1					
ANR	453054	AssignmentExpression	tchr = ( ( ushort ) chr << 8 ) + * p		451977	2		=			
ANR	453055	Identifier	tchr		451977	0					
ANR	453056	AdditiveExpression	( ( ushort ) chr << 8 ) + * p		451977	1		+			
ANR	453057	ShiftExpression	( ushort ) chr << 8		451977	0		<<			
ANR	453058	CastExpression	( ushort ) chr		451977	0					
ANR	453059	CastTarget	ushort		451977	0					
ANR	453060	Identifier	chr		451977	1					
ANR	453061	PrimaryExpression	8		451977	1					
ANR	453062	UnaryOperationExpression	* p		451977	1					
ANR	453063	UnaryOperator	*		451977	0					
ANR	453064	Identifier	p		451977	1					
ANR	453065	IdentifierDecl	schr		451977	1					
ANR	453066	IdentifierDeclType	ushort		451977	0					
ANR	453067	Identifier	schr		451977	1					
ANR	453068	ExpressionStatement	"subs_loop ( w2 ( psv ) , 2 )"	329:32:11482:11503	451977	1	True				
ANR	453069	CallExpression	"subs_loop ( w2 ( psv ) , 2 )"		451977	0					
ANR	453070	Callee	subs_loop		451977	0					
ANR	453071	Identifier	subs_loop		451977	0					
ANR	453072	ArgumentList	w2 ( psv )		451977	1					
ANR	453073	Argument	w2 ( psv )		451977	0					
ANR	453074	CallExpression	w2 ( psv )		451977	0					
ANR	453075	Callee	w2		451977	0					
ANR	453076	Identifier	w2		451977	0					
ANR	453077	ArgumentList	psv		451977	1					
ANR	453078	Argument	psv		451977	0					
ANR	453079	Identifier	psv		451977	0					
ANR	453080	Argument	2		451977	1					
ANR	453081	PrimaryExpression	2		451977	0					
ANR	453082	Label	case 3 :	331:24:11559:11565	451977	28	True				
ANR	453083	ExpressionStatement	need_left ( 2 )	332:28:11595:11607	451977	29	True				
ANR	453084	CallExpression	need_left ( 2 )		451977	0					
ANR	453085	Callee	need_left		451977	0					
ANR	453086	Identifier	need_left		451977	0					
ANR	453087	ArgumentList	2		451977	1					
ANR	453088	Argument	2		451977	0					
ANR	453089	PrimaryExpression	2		451977	0					
ANR	453090	Statement	define	333:1:11610:11615	451977	30	True				
ANR	453091	Statement	w3	333:8:11617:11618	451977	31	True				
ANR	453092	Statement	(	333:10:11619:11619	451977	32	True				
ANR	453093	Statement	p	333:11:11620:11620	451977	33	True				
ANR	453094	Statement	)	333:12:11621:11621	451977	34	True				
ANR	453095	Statement	(	333:14:11623:11623	451977	35	True				
ANR	453096	Statement	(	333:15:11624:11624	451977	36	True				
ANR	453097	Statement	(	333:16:11625:11625	451977	37	True				
ANR	453098	Statement	ulong	333:17:11626:11630	451977	38	True				
ANR	453099	Statement	)	333:22:11631:11631	451977	39	True				
ANR	453100	Statement	*	333:23:11632:11632	451977	40	True				
ANR	453101	Statement	p	333:24:11633:11633	451977	41	True				
ANR	453102	Statement	<<	333:26:11635:11636	451977	42	True				
ANR	453103	Statement	16	333:29:11638:11639	451977	43	True				
ANR	453104	Statement	)	333:31:11640:11640	451977	44	True				
ANR	453105	Statement	+	333:33:11642:11642	451977	45	True				
ANR	453106	Statement	(	333:35:11644:11644	451977	46	True				
ANR	453107	Statement	(	333:36:11645:11645	451977	47	True				
ANR	453108	Statement	uint	333:37:11646:11649	451977	48	True				
ANR	453109	Statement	)	333:41:11650:11650	451977	49	True				
ANR	453110	Statement	p	333:42:11651:11651	451977	50	True				
ANR	453111	Statement	[	333:43:11652:11652	451977	51	True				
ANR	453112	Statement	1	333:44:11653:11653	451977	52	True				
ANR	453113	Statement	]	333:45:11654:11654	451977	53	True				
ANR	453114	Statement	<<	333:47:11656:11657	451977	54	True				
ANR	453115	Statement	8	333:50:11659:11659	451977	55	True				
ANR	453116	Statement	)	333:51:11660:11660	451977	56	True				
ANR	453117	Statement	+	333:53:11662:11662	451977	57	True				
ANR	453118	Statement	p	333:55:11664:11664	451977	58	True				
ANR	453119	Statement	[	333:56:11665:11665	451977	59	True				
ANR	453120	Statement	2	333:57:11666:11666	451977	60	True				
ANR	453121	Statement	]	333:58:11667:11667	451977	61	True				
ANR	453122	Statement	)	333:59:11668:11668	451977	62	True				
ANR	453123	CompoundStatement		234:32:8219:8303	451977	63					
ANR	453124	IdentifierDeclStatement	"ulong tchr = ( ( ulong ) chr << 16 ) + w2 ( p ) , schr ;"	335:32:11732:11816	451977	0	True				
ANR	453125	IdentifierDecl	tchr = ( ( ulong ) chr << 16 ) + w2 ( p )		451977	0					
ANR	453126	IdentifierDeclType	ulong		451977	0					
ANR	453127	Identifier	tchr		451977	1					
ANR	453128	AssignmentExpression	tchr = ( ( ulong ) chr << 16 ) + w2 ( p )		451977	2		=			
ANR	453129	Identifier	tchr		451977	0					
ANR	453130	AdditiveExpression	( ( ulong ) chr << 16 ) + w2 ( p )		451977	1		+			
ANR	453131	ShiftExpression	( ulong ) chr << 16		451977	0		<<			
ANR	453132	CastExpression	( ulong ) chr		451977	0					
ANR	453133	CastTarget	ulong		451977	0					
ANR	453134	Identifier	chr		451977	1					
ANR	453135	PrimaryExpression	16		451977	1					
ANR	453136	CallExpression	w2 ( p )		451977	1					
ANR	453137	Callee	w2		451977	0					
ANR	453138	Identifier	w2		451977	0					
ANR	453139	ArgumentList	p		451977	1					
ANR	453140	Argument	p		451977	0					
ANR	453141	Identifier	p		451977	0					
ANR	453142	IdentifierDecl	schr		451977	1					
ANR	453143	IdentifierDeclType	ulong		451977	0					
ANR	453144	Identifier	schr		451977	1					
ANR	453145	ExpressionStatement	"subs_loop ( w3 ( psv ) , 3 )"	338:32:11851:11872	451977	1	True				
ANR	453146	CallExpression	"subs_loop ( w3 ( psv ) , 3 )"		451977	0					
ANR	453147	Callee	subs_loop		451977	0					
ANR	453148	Identifier	subs_loop		451977	0					
ANR	453149	ArgumentList	w3 ( psv )		451977	1					
ANR	453150	Argument	w3 ( psv )		451977	0					
ANR	453151	CallExpression	w3 ( psv )		451977	0					
ANR	453152	Callee	w3		451977	0					
ANR	453153	Identifier	w3		451977	0					
ANR	453154	ArgumentList	psv		451977	1					
ANR	453155	Argument	psv		451977	0					
ANR	453156	Identifier	psv		451977	0					
ANR	453157	Argument	3		451977	1					
ANR	453158	PrimaryExpression	3		451977	0					
ANR	453159	Label	case 4 :	340:24:11928:11934	451977	64	True				
ANR	453160	ExpressionStatement	need_left ( 3 )	341:28:11964:11976	451977	65	True				
ANR	453161	CallExpression	need_left ( 3 )		451977	0					
ANR	453162	Callee	need_left		451977	0					
ANR	453163	Identifier	need_left		451977	0					
ANR	453164	ArgumentList	3		451977	1					
ANR	453165	Argument	3		451977	0					
ANR	453166	PrimaryExpression	3		451977	0					
ANR	453167	Statement	define	342:1:11979:11984	451977	66	True				
ANR	453168	Statement	w4	342:8:11986:11987	451977	67	True				
ANR	453169	Statement	(	342:10:11988:11988	451977	68	True				
ANR	453170	Statement	p	342:11:11989:11989	451977	69	True				
ANR	453171	Statement	)	342:12:11990:11990	451977	70	True				
ANR	453172	Statement	(	342:14:11992:11992	451977	71	True				
ANR	453173	Statement	(	342:15:11993:11993	451977	72	True				
ANR	453174	Statement	(	342:16:11994:11994	451977	73	True				
ANR	453175	Statement	ulong	342:17:11995:11999	451977	74	True				
ANR	453176	Statement	)	342:22:12000:12000	451977	75	True				
ANR	453177	Statement	*	342:23:12001:12001	451977	76	True				
ANR	453178	Statement	p	342:24:12002:12002	451977	77	True				
ANR	453179	Statement	<<	342:26:12004:12005	451977	78	True				
ANR	453180	Statement	24	342:29:12007:12008	451977	79	True				
ANR	453181	Statement	)	342:31:12009:12009	451977	80	True				
ANR	453182	Statement	+	342:33:12011:12011	451977	81	True				
ANR	453183	Statement	(	342:35:12013:12013	451977	82	True				
ANR	453184	Statement	(	342:36:12014:12014	451977	83	True				
ANR	453185	Statement	ulong	342:37:12015:12019	451977	84	True				
ANR	453186	Statement	)	342:42:12020:12020	451977	85	True				
ANR	453187	Statement	p	342:43:12021:12021	451977	86	True				
ANR	453188	Statement	[	342:44:12022:12022	451977	87	True				
ANR	453189	Statement	1	342:45:12023:12023	451977	88	True				
ANR	453190	Statement	]	342:46:12024:12024	451977	89	True				
ANR	453191	Statement	<<	342:48:12026:12027	451977	90	True				
ANR	453192	Statement	16	342:51:12029:12030	451977	91	True				
ANR	453193	Statement	)	342:53:12031:12031	451977	92	True				
ANR	453194	Statement	+	342:55:12033:12033	451977	93	True				
ANR	453195	Statement	(	342:57:12035:12035	451977	94	True				
ANR	453196	Statement	(	342:58:12036:12036	451977	95	True				
ANR	453197	Statement	uint	342:59:12037:12040	451977	96	True				
ANR	453198	Statement	)	342:63:12041:12041	451977	97	True				
ANR	453199	Statement	p	342:64:12042:12042	451977	98	True				
ANR	453200	Statement	[	342:65:12043:12043	451977	99	True				
ANR	453201	Statement	2	342:66:12044:12044	451977	100	True				
ANR	453202	Statement	]	342:67:12045:12045	451977	101	True				
ANR	453203	Statement	<<	342:69:12047:12048	451977	102	True				
ANR	453204	Statement	8	342:72:12050:12050	451977	103	True				
ANR	453205	Statement	)	342:73:12051:12051	451977	104	True				
ANR	453206	Statement	+	342:75:12053:12053	451977	105	True				
ANR	453207	Statement	p	342:77:12055:12055	451977	106	True				
ANR	453208	Statement	[	342:78:12056:12056	451977	107	True				
ANR	453209	Statement	3	342:79:12057:12057	451977	108	True				
ANR	453210	Statement	]	342:80:12058:12058	451977	109	True				
ANR	453211	Statement	)	342:81:12059:12059	451977	110	True				
ANR	453212	CompoundStatement		243:32:8610:8694	451977	111					
ANR	453213	IdentifierDeclStatement	"ulong tchr = ( ( ulong ) chr << 24 ) + w3 ( p ) , schr ;"	344:32:12123:12207	451977	0	True				
ANR	453214	IdentifierDecl	tchr = ( ( ulong ) chr << 24 ) + w3 ( p )		451977	0					
ANR	453215	IdentifierDeclType	ulong		451977	0					
ANR	453216	Identifier	tchr		451977	1					
ANR	453217	AssignmentExpression	tchr = ( ( ulong ) chr << 24 ) + w3 ( p )		451977	2		=			
ANR	453218	Identifier	tchr		451977	0					
ANR	453219	AdditiveExpression	( ( ulong ) chr << 24 ) + w3 ( p )		451977	1		+			
ANR	453220	ShiftExpression	( ulong ) chr << 24		451977	0		<<			
ANR	453221	CastExpression	( ulong ) chr		451977	0					
ANR	453222	CastTarget	ulong		451977	0					
ANR	453223	Identifier	chr		451977	1					
ANR	453224	PrimaryExpression	24		451977	1					
ANR	453225	CallExpression	w3 ( p )		451977	1					
ANR	453226	Callee	w3		451977	0					
ANR	453227	Identifier	w3		451977	0					
ANR	453228	ArgumentList	p		451977	1					
ANR	453229	Argument	p		451977	0					
ANR	453230	Identifier	p		451977	0					
ANR	453231	IdentifierDecl	schr		451977	1					
ANR	453232	IdentifierDeclType	ulong		451977	0					
ANR	453233	Identifier	schr		451977	1					
ANR	453234	ExpressionStatement	"subs_loop ( w4 ( psv ) , 4 )"	347:32:12242:12263	451977	1	True				
ANR	453235	CallExpression	"subs_loop ( w4 ( psv ) , 4 )"		451977	0					
ANR	453236	Callee	subs_loop		451977	0					
ANR	453237	Identifier	subs_loop		451977	0					
ANR	453238	ArgumentList	w4 ( psv )		451977	1					
ANR	453239	Argument	w4 ( psv )		451977	0					
ANR	453240	CallExpression	w4 ( psv )		451977	0					
ANR	453241	Callee	w4		451977	0					
ANR	453242	Identifier	w4		451977	0					
ANR	453243	ArgumentList	psv		451977	1					
ANR	453244	Argument	psv		451977	0					
ANR	453245	Identifier	psv		451977	0					
ANR	453246	Argument	4		451977	1					
ANR	453247	PrimaryExpression	4		451977	0					
ANR	453248	Statement	undef	349:1:12296:12300	451977	112	True				
ANR	453249	Statement	w2	349:7:12302:12303	451977	113	True				
ANR	453250	Statement	undef	350:1:12306:12310	451977	114	True				
ANR	453251	Statement	w3	350:7:12312:12313	451977	115	True				
ANR	453252	Statement	undef	351:1:12316:12320	451977	116	True				
ANR	453253	Statement	w4	351:7:12322:12323	451977	117	True				
ANR	453254	Statement	undef	352:1:12326:12330	451977	118	True				
ANR	453255	Statement	subs_loop	352:7:12332:12340	451977	119	True				
ANR	453256	ExpressionStatement	fidx = pdata -> subs_size - subs_count	354:20:12384:12420	451977	15	True				
ANR	453257	AssignmentExpression	fidx = pdata -> subs_size - subs_count		451977	0		=			
ANR	453258	Identifier	fidx		451977	0					
ANR	453259	AdditiveExpression	pdata -> subs_size - subs_count		451977	1		-			
ANR	453260	PtrMemberAccess	pdata -> subs_size		451977	0					
ANR	453261	Identifier	pdata		451977	0					
ANR	453262	Identifier	subs_size		451977	1					
ANR	453263	Identifier	subs_count		451977	1					
ANR	453264	ExpressionStatement	"if_debug2m ( 'J' , pte -> memory , ""[J]SubsVector index=%d, char=%ld\\n"" , fidx , chr )"	355:20:12442:12550	451977	16	True				
ANR	453265	CallExpression	"if_debug2m ( 'J' , pte -> memory , ""[J]SubsVector index=%d, char=%ld\\n"" , fidx , chr )"		451977	0					
ANR	453266	Callee	if_debug2m		451977	0					
ANR	453267	Identifier	if_debug2m		451977	0					
ANR	453268	ArgumentList	'J'		451977	1					
ANR	453269	Argument	'J'		451977	0					
ANR	453270	PrimaryExpression	'J'		451977	0					
ANR	453271	Argument	pte -> memory		451977	1					
ANR	453272	PtrMemberAccess	pte -> memory		451977	0					
ANR	453273	Identifier	pte		451977	0					
ANR	453274	Identifier	memory		451977	1					
ANR	453275	Argument	"""[J]SubsVector index=%d, char=%ld\\n"""		451977	2					
ANR	453276	PrimaryExpression	"""[J]SubsVector index=%d, char=%ld\\n"""		451977	0					
ANR	453277	Argument	fidx		451977	3					
ANR	453278	Identifier	fidx		451977	0					
ANR	453279	Argument	chr		451977	4					
ANR	453280	Identifier	chr		451977	0					
ANR	453281	BreakStatement	break ;	357:20:12572:12577	451977	17	True				
ANR	453282	Label	case fmap_CMap :	360:12:12610:12624	451977	22	True				
ANR	453283	Identifier	fmap_CMap		451977	0					
ANR	453284	CompoundStatement		263:20:9264:9272	451977	23					
ANR	453285	IdentifierDeclStatement	gs_const_string cstr ;	362:20:12664:12684	451977	0	True				
ANR	453286	IdentifierDecl	cstr		451977	0					
ANR	453287	IdentifierDeclType	gs_const_string		451977	0					
ANR	453288	Identifier	cstr		451977	1					
ANR	453289	IdentifierDeclStatement	uint mindex = p - str - 1 ;	363:20:12706:12731	451977	1	True				
ANR	453290	IdentifierDecl	mindex = p - str - 1		451977	0					
ANR	453291	IdentifierDeclType	uint		451977	0					
ANR	453292	Identifier	mindex		451977	1					
ANR	453293	AssignmentExpression	mindex = p - str - 1		451977	2		=			
ANR	453294	Identifier	mindex		451977	0					
ANR	453295	AdditiveExpression	p - str - 1		451977	1		-			
ANR	453296	Identifier	p		451977	0					
ANR	453297	AdditiveExpression	str - 1		451977	1		-			
ANR	453298	Identifier	str		451977	0					
ANR	453299	PrimaryExpression	1		451977	1					
ANR	453300	IdentifierDeclStatement	int code ;	364:20:12777:12785	451977	2	True				
ANR	453301	IdentifierDecl	code		451977	0					
ANR	453302	IdentifierDeclType	int		451977	0					
ANR	453303	Identifier	code		451977	1					
ANR	453304	IfStatement	if ( * ( p - 1 ) != chr )		451977	3					
ANR	453305	Condition	* ( p - 1 ) != chr	374:24:13266:13280	451977	0	True				
ANR	453306	EqualityExpression	* ( p - 1 ) != chr		451977	0		!=			
ANR	453307	UnaryOperationExpression	* ( p - 1 )		451977	0					
ANR	453308	UnaryOperator	*		451977	0					
ANR	453309	AdditiveExpression	p - 1		451977	1		-			
ANR	453310	Identifier	p		451977	0					
ANR	453311	PrimaryExpression	1		451977	1					
ANR	453312	Identifier	chr		451977	1					
ANR	453313	CompoundStatement		275:24:9853:9870	451977	1					
ANR	453314	IdentifierDeclStatement	byte substr [ MAX_CMAP_CODE_SIZE ] ;	375:24:13309:13340	451977	0	True				
ANR	453315	IdentifierDecl	substr [ MAX_CMAP_CODE_SIZE ]		451977	0					
ANR	453316	IdentifierDeclType	byte [ MAX_CMAP_CODE_SIZE ]		451977	0					
ANR	453317	Identifier	substr		451977	1					
ANR	453318	Identifier	MAX_CMAP_CODE_SIZE		451977	2					
ANR	453319	IdentifierDeclStatement	int submindex = 0 ;	376:24:13366:13383	451977	1	True				
ANR	453320	IdentifierDecl	submindex = 0		451977	0					
ANR	453321	IdentifierDeclType	int		451977	0					
ANR	453322	Identifier	submindex		451977	1					
ANR	453323	AssignmentExpression	submindex = 0		451977	2		=			
ANR	453324	Identifier	submindex		451977	0					
ANR	453325	PrimaryExpression	0		451977	1					
ANR	453326	ExpressionStatement	"if_debug2m ( 'j' , pte -> memory , ""[j] *(p-1) 0x%02x != chr 0x%02x, modified str should be passed\\n"" , * ( p - 1 ) , ( byte ) chr )"	377:24:13409:13594	451977	2	True				
ANR	453327	CallExpression	"if_debug2m ( 'j' , pte -> memory , ""[j] *(p-1) 0x%02x != chr 0x%02x, modified str should be passed\\n"" , * ( p - 1 ) , ( byte ) chr )"		451977	0					
ANR	453328	Callee	if_debug2m		451977	0					
ANR	453329	Identifier	if_debug2m		451977	0					
ANR	453330	ArgumentList	'j'		451977	1					
ANR	453331	Argument	'j'		451977	0					
ANR	453332	PrimaryExpression	'j'		451977	0					
ANR	453333	Argument	pte -> memory		451977	1					
ANR	453334	PtrMemberAccess	pte -> memory		451977	0					
ANR	453335	Identifier	pte		451977	0					
ANR	453336	Identifier	memory		451977	1					
ANR	453337	Argument	"""[j] *(p-1) 0x%02x != chr 0x%02x, modified str should be passed\\n"""		451977	2					
ANR	453338	PrimaryExpression	"""[j] *(p-1) 0x%02x != chr 0x%02x, modified str should be passed\\n"""		451977	0					
ANR	453339	Argument	* ( p - 1 )		451977	3					
ANR	453340	UnaryOperationExpression	* ( p - 1 )		451977	0					
ANR	453341	UnaryOperator	*		451977	0					
ANR	453342	AdditiveExpression	p - 1		451977	1		-			
ANR	453343	Identifier	p		451977	0					
ANR	453344	PrimaryExpression	1		451977	1					
ANR	453345	Argument	( byte ) chr		451977	4					
ANR	453346	CastExpression	( byte ) chr		451977	0					
ANR	453347	CastTarget	byte		451977	0					
ANR	453348	Identifier	chr		451977	1					
ANR	453349	ExpressionStatement	"memcpy ( substr , p - 1 , min ( MAX_CMAP_CODE_SIZE , end - p + 1 ) )"	380:24:13620:13711	451977	3	True				
ANR	453350	CallExpression	"memcpy ( substr , p - 1 , min ( MAX_CMAP_CODE_SIZE , end - p + 1 ) )"		451977	0					
ANR	453351	Callee	memcpy		451977	0					
ANR	453352	Identifier	memcpy		451977	0					
ANR	453353	ArgumentList	substr		451977	1					
ANR	453354	Argument	substr		451977	0					
ANR	453355	Identifier	substr		451977	0					
ANR	453356	Argument	p - 1		451977	1					
ANR	453357	AdditiveExpression	p - 1		451977	0		-			
ANR	453358	Identifier	p		451977	0					
ANR	453359	PrimaryExpression	1		451977	1					
ANR	453360	Argument	"min ( MAX_CMAP_CODE_SIZE , end - p + 1 )"		451977	2					
ANR	453361	CallExpression	"min ( MAX_CMAP_CODE_SIZE , end - p + 1 )"		451977	0					
ANR	453362	Callee	min		451977	0					
ANR	453363	Identifier	min		451977	0					
ANR	453364	ArgumentList	MAX_CMAP_CODE_SIZE		451977	1					
ANR	453365	Argument	MAX_CMAP_CODE_SIZE		451977	0					
ANR	453366	Identifier	MAX_CMAP_CODE_SIZE		451977	0					
ANR	453367	Argument	end - p + 1		451977	1					
ANR	453368	AdditiveExpression	end - p + 1		451977	0		-			
ANR	453369	Identifier	end		451977	0					
ANR	453370	AdditiveExpression	p + 1		451977	1		+			
ANR	453371	Identifier	p		451977	0					
ANR	453372	PrimaryExpression	1		451977	1					
ANR	453373	ExpressionStatement	substr [ 0 ] = chr	382:24:13737:13752	451977	4	True				
ANR	453374	AssignmentExpression	substr [ 0 ] = chr		451977	0		=			
ANR	453375	ArrayIndexing	substr [ 0 ]		451977	0					
ANR	453376	Identifier	substr		451977	0					
ANR	453377	PrimaryExpression	0		451977	1					
ANR	453378	Identifier	chr		451977	1					
ANR	453379	ExpressionStatement	cstr . data = substr	383:24:13778:13796	451977	5	True				
ANR	453380	AssignmentExpression	cstr . data = substr		451977	0		=			
ANR	453381	MemberAccess	cstr . data		451977	0					
ANR	453382	Identifier	cstr		451977	0					
ANR	453383	Identifier	data		451977	1					
ANR	453384	Identifier	substr		451977	1					
ANR	453385	ExpressionStatement	"cstr . size = min ( MAX_CMAP_CODE_SIZE , end - p + 1 )"	384:24:13822:13870	451977	6	True				
ANR	453386	AssignmentExpression	"cstr . size = min ( MAX_CMAP_CODE_SIZE , end - p + 1 )"		451977	0		=			
ANR	453387	MemberAccess	cstr . size		451977	0					
ANR	453388	Identifier	cstr		451977	0					
ANR	453389	Identifier	size		451977	1					
ANR	453390	CallExpression	"min ( MAX_CMAP_CODE_SIZE , end - p + 1 )"		451977	1					
ANR	453391	Callee	min		451977	0					
ANR	453392	Identifier	min		451977	0					
ANR	453393	ArgumentList	MAX_CMAP_CODE_SIZE		451977	1					
ANR	453394	Argument	MAX_CMAP_CODE_SIZE		451977	0					
ANR	453395	Identifier	MAX_CMAP_CODE_SIZE		451977	0					
ANR	453396	Argument	end - p + 1		451977	1					
ANR	453397	AdditiveExpression	end - p + 1		451977	0		-			
ANR	453398	Identifier	end		451977	0					
ANR	453399	AdditiveExpression	p + 1		451977	1		+			
ANR	453400	Identifier	p		451977	0					
ANR	453401	PrimaryExpression	1		451977	1					
ANR	453402	IfStatement	if ( gs_debug_c ( 'j' ) )		451977	7					
ANR	453403	Condition	gs_debug_c ( 'j' )	385:28:13900:13914	451977	0	True				
ANR	453404	CallExpression	gs_debug_c ( 'j' )		451977	0					
ANR	453405	Callee	gs_debug_c		451977	0					
ANR	453406	Identifier	gs_debug_c		451977	0					
ANR	453407	ArgumentList	'j'		451977	1					
ANR	453408	Argument	'j'		451977	0					
ANR	453409	PrimaryExpression	'j'		451977	0					
ANR	453410	CompoundStatement		284:45:10404:10404	451977	1					
ANR	453411	ExpressionStatement	"dmlprintf ( pfont -> memory , ""[j] original str("" )"	386:28:13947:13992	451977	0	True				
ANR	453412	CallExpression	"dmlprintf ( pfont -> memory , ""[j] original str("" )"		451977	0					
ANR	453413	Callee	dmlprintf		451977	0					
ANR	453414	Identifier	dmlprintf		451977	0					
ANR	453415	ArgumentList	pfont -> memory		451977	1					
ANR	453416	Argument	pfont -> memory		451977	0					
ANR	453417	PtrMemberAccess	pfont -> memory		451977	0					
ANR	453418	Identifier	pfont		451977	0					
ANR	453419	Identifier	memory		451977	1					
ANR	453420	Argument	"""[j] original str("""		451977	1					
ANR	453421	PrimaryExpression	"""[j] original str("""		451977	0					
ANR	453422	ExpressionStatement	"debug_print_string_hex ( pfont -> memory , str , end - str )"	387:28:14022:14075	451977	1	True				
ANR	453423	CallExpression	"debug_print_string_hex ( pfont -> memory , str , end - str )"		451977	0					
ANR	453424	Callee	debug_print_string_hex		451977	0					
ANR	453425	Identifier	debug_print_string_hex		451977	0					
ANR	453426	ArgumentList	pfont -> memory		451977	1					
ANR	453427	Argument	pfont -> memory		451977	0					
ANR	453428	PtrMemberAccess	pfont -> memory		451977	0					
ANR	453429	Identifier	pfont		451977	0					
ANR	453430	Identifier	memory		451977	1					
ANR	453431	Argument	str		451977	1					
ANR	453432	Identifier	str		451977	0					
ANR	453433	Argument	end - str		451977	2					
ANR	453434	AdditiveExpression	end - str		451977	0		-			
ANR	453435	Identifier	end		451977	0					
ANR	453436	Identifier	str		451977	1					
ANR	453437	ExpressionStatement	"dmlprintf ( pfont -> memory , "") -> modified substr("" )"	388:28:14105:14154	451977	2	True				
ANR	453438	CallExpression	"dmlprintf ( pfont -> memory , "") -> modified substr("" )"		451977	0					
ANR	453439	Callee	dmlprintf		451977	0					
ANR	453440	Identifier	dmlprintf		451977	0					
ANR	453441	ArgumentList	pfont -> memory		451977	1					
ANR	453442	Argument	pfont -> memory		451977	0					
ANR	453443	PtrMemberAccess	pfont -> memory		451977	0					
ANR	453444	Identifier	pfont		451977	0					
ANR	453445	Identifier	memory		451977	1					
ANR	453446	Argument	""") -> modified substr("""		451977	1					
ANR	453447	PrimaryExpression	""") -> modified substr("""		451977	0					
ANR	453448	ExpressionStatement	"debug_print_string_hex ( pfont -> memory , cstr . data , cstr . size )"	389:28:14184:14243	451977	3	True				
ANR	453449	CallExpression	"debug_print_string_hex ( pfont -> memory , cstr . data , cstr . size )"		451977	0					
ANR	453450	Callee	debug_print_string_hex		451977	0					
ANR	453451	Identifier	debug_print_string_hex		451977	0					
ANR	453452	ArgumentList	pfont -> memory		451977	1					
ANR	453453	Argument	pfont -> memory		451977	0					
ANR	453454	PtrMemberAccess	pfont -> memory		451977	0					
ANR	453455	Identifier	pfont		451977	0					
ANR	453456	Identifier	memory		451977	1					
ANR	453457	Argument	cstr . data		451977	1					
ANR	453458	MemberAccess	cstr . data		451977	0					
ANR	453459	Identifier	cstr		451977	0					
ANR	453460	Identifier	data		451977	1					
ANR	453461	Argument	cstr . size		451977	2					
ANR	453462	MemberAccess	cstr . size		451977	0					
ANR	453463	Identifier	cstr		451977	0					
ANR	453464	Identifier	size		451977	1					
ANR	453465	ExpressionStatement	"dmlprintf ( pfont -> memory , "")\\n"" )"	390:28:14273:14304	451977	4	True				
ANR	453466	CallExpression	"dmlprintf ( pfont -> memory , "")\\n"" )"		451977	0					
ANR	453467	Callee	dmlprintf		451977	0					
ANR	453468	Identifier	dmlprintf		451977	0					
ANR	453469	ArgumentList	pfont -> memory		451977	1					
ANR	453470	Argument	pfont -> memory		451977	0					
ANR	453471	PtrMemberAccess	pfont -> memory		451977	0					
ANR	453472	Identifier	pfont		451977	0					
ANR	453473	Identifier	memory		451977	1					
ANR	453474	Argument	""")\\n"""		451977	1					
ANR	453475	PrimaryExpression	""")\\n"""		451977	0					
ANR	453476	ExpressionStatement	"code = gs_cmap_decode_next ( pdata -> CMap , & cstr , ( uint * ) & submindex , & fidx , & chr , & glyph )"	392:24:14356:14483	451977	8	True				
ANR	453477	AssignmentExpression	"code = gs_cmap_decode_next ( pdata -> CMap , & cstr , ( uint * ) & submindex , & fidx , & chr , & glyph )"		451977	0		=			
ANR	453478	Identifier	code		451977	0					
ANR	453479	CallExpression	"gs_cmap_decode_next ( pdata -> CMap , & cstr , ( uint * ) & submindex , & fidx , & chr , & glyph )"		451977	1					
ANR	453480	Callee	gs_cmap_decode_next		451977	0					
ANR	453481	Identifier	gs_cmap_decode_next		451977	0					
ANR	453482	ArgumentList	pdata -> CMap		451977	1					
ANR	453483	Argument	pdata -> CMap		451977	0					
ANR	453484	PtrMemberAccess	pdata -> CMap		451977	0					
ANR	453485	Identifier	pdata		451977	0					
ANR	453486	Identifier	CMap		451977	1					
ANR	453487	Argument	& cstr		451977	1					
ANR	453488	UnaryOperationExpression	& cstr		451977	0					
ANR	453489	UnaryOperator	&		451977	0					
ANR	453490	Identifier	cstr		451977	1					
ANR	453491	Argument	( uint * ) & submindex		451977	2					
ANR	453492	CastExpression	( uint * ) & submindex		451977	0					
ANR	453493	CastTarget	uint *		451977	0					
ANR	453494	UnaryOperationExpression	& submindex		451977	1					
ANR	453495	UnaryOperator	&		451977	0					
ANR	453496	Identifier	submindex		451977	1					
ANR	453497	Argument	& fidx		451977	3					
ANR	453498	UnaryOperationExpression	& fidx		451977	0					
ANR	453499	UnaryOperator	&		451977	0					
ANR	453500	Identifier	fidx		451977	1					
ANR	453501	Argument	& chr		451977	4					
ANR	453502	UnaryOperationExpression	& chr		451977	0					
ANR	453503	UnaryOperator	&		451977	0					
ANR	453504	Identifier	chr		451977	1					
ANR	453505	Argument	& glyph		451977	5					
ANR	453506	UnaryOperationExpression	& glyph		451977	0					
ANR	453507	UnaryOperator	&		451977	0					
ANR	453508	Identifier	glyph		451977	1					
ANR	453509	ExpressionStatement	mindex += submindex	394:24:14509:14528	451977	9	True				
ANR	453510	AssignmentExpression	mindex += submindex		451977	0		+=			
ANR	453511	Identifier	mindex		451977	0					
ANR	453512	Identifier	submindex		451977	1					
ANR	453513	ElseStatement	else		451977	0					
ANR	453514	CompoundStatement		294:27:11044:11044	451977	0					
ANR	453515	ExpressionStatement	cstr . data = str	396:24:14583:14598	451977	0	True				
ANR	453516	AssignmentExpression	cstr . data = str		451977	0		=			
ANR	453517	MemberAccess	cstr . data		451977	0					
ANR	453518	Identifier	cstr		451977	0					
ANR	453519	Identifier	data		451977	1					
ANR	453520	Identifier	str		451977	1					
ANR	453521	ExpressionStatement	cstr . size = end - str	397:24:14624:14645	451977	1	True				
ANR	453522	AssignmentExpression	cstr . size = end - str		451977	0		=			
ANR	453523	MemberAccess	cstr . size		451977	0					
ANR	453524	Identifier	cstr		451977	0					
ANR	453525	Identifier	size		451977	1					
ANR	453526	AdditiveExpression	end - str		451977	1		-			
ANR	453527	Identifier	end		451977	0					
ANR	453528	Identifier	str		451977	1					
ANR	453529	ExpressionStatement	"code = gs_cmap_decode_next ( pdata -> CMap , & cstr , & mindex , & fidx , & chr , & glyph )"	398:24:14671:14794	451977	2	True				
ANR	453530	AssignmentExpression	"code = gs_cmap_decode_next ( pdata -> CMap , & cstr , & mindex , & fidx , & chr , & glyph )"		451977	0		=			
ANR	453531	Identifier	code		451977	0					
ANR	453532	CallExpression	"gs_cmap_decode_next ( pdata -> CMap , & cstr , & mindex , & fidx , & chr , & glyph )"		451977	1					
ANR	453533	Callee	gs_cmap_decode_next		451977	0					
ANR	453534	Identifier	gs_cmap_decode_next		451977	0					
ANR	453535	ArgumentList	pdata -> CMap		451977	1					
ANR	453536	Argument	pdata -> CMap		451977	0					
ANR	453537	PtrMemberAccess	pdata -> CMap		451977	0					
ANR	453538	Identifier	pdata		451977	0					
ANR	453539	Identifier	CMap		451977	1					
ANR	453540	Argument	& cstr		451977	1					
ANR	453541	UnaryOperationExpression	& cstr		451977	0					
ANR	453542	UnaryOperator	&		451977	0					
ANR	453543	Identifier	cstr		451977	1					
ANR	453544	Argument	& mindex		451977	2					
ANR	453545	UnaryOperationExpression	& mindex		451977	0					
ANR	453546	UnaryOperator	&		451977	0					
ANR	453547	Identifier	mindex		451977	1					
ANR	453548	Argument	& fidx		451977	3					
ANR	453549	UnaryOperationExpression	& fidx		451977	0					
ANR	453550	UnaryOperator	&		451977	0					
ANR	453551	Identifier	fidx		451977	1					
ANR	453552	Argument	& chr		451977	4					
ANR	453553	UnaryOperationExpression	& chr		451977	0					
ANR	453554	UnaryOperator	&		451977	0					
ANR	453555	Identifier	chr		451977	1					
ANR	453556	Argument	& glyph		451977	5					
ANR	453557	UnaryOperationExpression	& glyph		451977	0					
ANR	453558	UnaryOperator	&		451977	0					
ANR	453559	Identifier	glyph		451977	1					
ANR	453560	IfStatement	if ( code < 0 )		451977	4					
ANR	453561	Condition	code < 0	401:24:14842:14849	451977	0	True				
ANR	453562	RelationalExpression	code < 0		451977	0		<			
ANR	453563	Identifier	code		451977	0					
ANR	453564	PrimaryExpression	0		451977	1					
ANR	453565	ReturnStatement	return code ;	402:24:14876:14887	451977	1	True				
ANR	453566	Identifier	code		451977	0					
ANR	453567	ExpressionStatement	pte -> cmap_code = code	403:20:14909:14930	451977	5	True				
ANR	453568	AssignmentExpression	pte -> cmap_code = code		451977	0		=			
ANR	453569	PtrMemberAccess	pte -> cmap_code		451977	0					
ANR	453570	Identifier	pte		451977	0					
ANR	453571	Identifier	cmap_code		451977	1					
ANR	453572	Identifier	code		451977	1					
ANR	453573	ExpressionStatement	p = str + mindex	404:20:14977:14993	451977	6	True				
ANR	453574	AssignmentExpression	p = str + mindex		451977	0		=			
ANR	453575	Identifier	p		451977	0					
ANR	453576	AdditiveExpression	str + mindex		451977	1		+			
ANR	453577	Identifier	str		451977	0					
ANR	453578	Identifier	mindex		451977	1					
ANR	453579	ExpressionStatement	"if_debug3m ( 'J' , pte -> memory , ""[J]CMap returns %d, chr=0x%lx, glyph=0x%lx\\n"" , code , ( ulong ) chr , ( ulong ) glyph )"	405:20:15015:15155	451977	7	True				
ANR	453580	CallExpression	"if_debug3m ( 'J' , pte -> memory , ""[J]CMap returns %d, chr=0x%lx, glyph=0x%lx\\n"" , code , ( ulong ) chr , ( ulong ) glyph )"		451977	0					
ANR	453581	Callee	if_debug3m		451977	0					
ANR	453582	Identifier	if_debug3m		451977	0					
ANR	453583	ArgumentList	'J'		451977	1					
ANR	453584	Argument	'J'		451977	0					
ANR	453585	PrimaryExpression	'J'		451977	0					
ANR	453586	Argument	pte -> memory		451977	1					
ANR	453587	PtrMemberAccess	pte -> memory		451977	0					
ANR	453588	Identifier	pte		451977	0					
ANR	453589	Identifier	memory		451977	1					
ANR	453590	Argument	"""[J]CMap returns %d, chr=0x%lx, glyph=0x%lx\\n"""		451977	2					
ANR	453591	PrimaryExpression	"""[J]CMap returns %d, chr=0x%lx, glyph=0x%lx\\n"""		451977	0					
ANR	453592	Argument	code		451977	3					
ANR	453593	Identifier	code		451977	0					
ANR	453594	Argument	( ulong ) chr		451977	4					
ANR	453595	CastExpression	( ulong ) chr		451977	0					
ANR	453596	CastTarget	ulong		451977	0					
ANR	453597	Identifier	chr		451977	1					
ANR	453598	Argument	( ulong ) glyph		451977	5					
ANR	453599	CastExpression	( ulong ) glyph		451977	0					
ANR	453600	CastTarget	ulong		451977	0					
ANR	453601	Identifier	glyph		451977	1					
ANR	453602	IfStatement	if ( code == 0 )		451977	8					
ANR	453603	Condition	code == 0	407:24:15181:15189	451977	0	True				
ANR	453604	EqualityExpression	code == 0		451977	0		==			
ANR	453605	Identifier	code		451977	0					
ANR	453606	PrimaryExpression	0		451977	1					
ANR	453607	CompoundStatement		306:35:11679:11679	451977	1					
ANR	453608	IfStatement	if ( glyph == GS_NO_GLYPH )		451977	0					
ANR	453609	Condition	glyph == GS_NO_GLYPH	408:28:15222:15241	451977	0	True				
ANR	453610	EqualityExpression	glyph == GS_NO_GLYPH		451977	0		==			
ANR	453611	Identifier	glyph		451977	0					
ANR	453612	Identifier	GS_NO_GLYPH		451977	1					
ANR	453613	CompoundStatement		307:50:11731:11731	451977	1					
ANR	453614	ExpressionStatement	glyph = GS_MIN_CID_GLYPH	409:28:15274:15298	451977	0	True				
ANR	453615	AssignmentExpression	glyph = GS_MIN_CID_GLYPH		451977	0		=			
ANR	453616	Identifier	glyph		451977	0					
ANR	453617	Identifier	GS_MIN_CID_GLYPH		451977	1					
ANR	453618	ExpressionStatement	"if_debug0m ( 'J' , pte -> memory , ""... undefined\\n"" )"	410:28:15328:15375	451977	1	True				
ANR	453619	CallExpression	"if_debug0m ( 'J' , pte -> memory , ""... undefined\\n"" )"		451977	0					
ANR	453620	Callee	if_debug0m		451977	0					
ANR	453621	Identifier	if_debug0m		451977	0					
ANR	453622	ArgumentList	'J'		451977	1					
ANR	453623	Argument	'J'		451977	0					
ANR	453624	PrimaryExpression	'J'		451977	0					
ANR	453625	Argument	pte -> memory		451977	1					
ANR	453626	PtrMemberAccess	pte -> memory		451977	0					
ANR	453627	Identifier	pte		451977	0					
ANR	453628	Identifier	memory		451977	1					
ANR	453629	Argument	"""... undefined\\n"""		451977	2					
ANR	453630	PrimaryExpression	"""... undefined\\n"""		451977	0					
ANR	453631	ExpressionStatement	"select_descendant ( pfont , pdata , fidx , fdepth )"	414:28:15586:15631	451977	2	True				
ANR	453632	CallExpression	"select_descendant ( pfont , pdata , fidx , fdepth )"		451977	0					
ANR	453633	Callee	select_descendant		451977	0					
ANR	453634	Identifier	select_descendant		451977	0					
ANR	453635	ArgumentList	pfont		451977	1					
ANR	453636	Argument	pfont		451977	0					
ANR	453637	Identifier	pfont		451977	0					
ANR	453638	Argument	pdata		451977	1					
ANR	453639	Identifier	pdata		451977	0					
ANR	453640	Argument	fidx		451977	2					
ANR	453641	Identifier	fidx		451977	0					
ANR	453642	Argument	fdepth		451977	3					
ANR	453643	Identifier	fdepth		451977	0					
ANR	453644	GotoStatement	goto done ;	415:28:15661:15670	451977	3	True				
ANR	453645	Identifier	done		451977	0					
ANR	453646	ElseStatement	else		451977	0					
ANR	453647	ExpressionStatement	"chr = ( gs_char ) glyph , glyph = GS_NO_GLYPH"	418:24:15749:15791	451977	0	True				
ANR	453648	Expression	"chr = ( gs_char ) glyph , glyph = GS_NO_GLYPH"		451977	0					
ANR	453649	AssignmentExpression	chr = ( gs_char ) glyph		451977	0		=			
ANR	453650	Identifier	chr		451977	0					
ANR	453651	CastExpression	( gs_char ) glyph		451977	1					
ANR	453652	CastTarget	gs_char		451977	0					
ANR	453653	Identifier	glyph		451977	1					
ANR	453654	AssignmentExpression	glyph = GS_NO_GLYPH		451977	1		=			
ANR	453655	Identifier	glyph		451977	0					
ANR	453656	Identifier	GS_NO_GLYPH		451977	1					
ANR	453657	BreakStatement	break ;	420:20:15885:15890	451977	9	True				
ANR	453658	ExpressionStatement	"select_descendant ( pfont , pdata , fidx , fdepth )"	424:8:15929:15974	451977	2	True				
ANR	453659	CallExpression	"select_descendant ( pfont , pdata , fidx , fdepth )"		451977	0					
ANR	453660	Callee	select_descendant		451977	0					
ANR	453661	Identifier	select_descendant		451977	0					
ANR	453662	ArgumentList	pfont		451977	1					
ANR	453663	Argument	pfont		451977	0					
ANR	453664	Identifier	pfont		451977	0					
ANR	453665	Argument	pdata		451977	1					
ANR	453666	Identifier	pdata		451977	0					
ANR	453667	Argument	fidx		451977	2					
ANR	453668	Identifier	fidx		451977	0					
ANR	453669	Argument	fdepth		451977	3					
ANR	453670	Identifier	fdepth		451977	0					
ANR	453671	ExpressionStatement	"if_debug2m ( 'J' , pte -> memory , ""... new depth=%d, new font=0x%lx\\n"" , fdepth , ( ulong ) pfont )"	425:8:15984:16091	451977	3	True				
ANR	453672	CallExpression	"if_debug2m ( 'J' , pte -> memory , ""... new depth=%d, new font=0x%lx\\n"" , fdepth , ( ulong ) pfont )"		451977	0					
ANR	453673	Callee	if_debug2m		451977	0					
ANR	453674	Identifier	if_debug2m		451977	0					
ANR	453675	ArgumentList	'J'		451977	1					
ANR	453676	Argument	'J'		451977	0					
ANR	453677	PrimaryExpression	'J'		451977	0					
ANR	453678	Argument	pte -> memory		451977	1					
ANR	453679	PtrMemberAccess	pte -> memory		451977	0					
ANR	453680	Identifier	pte		451977	0					
ANR	453681	Identifier	memory		451977	1					
ANR	453682	Argument	"""... new depth=%d, new font=0x%lx\\n"""		451977	2					
ANR	453683	PrimaryExpression	"""... new depth=%d, new font=0x%lx\\n"""		451977	0					
ANR	453684	Argument	fdepth		451977	3					
ANR	453685	Identifier	fdepth		451977	0					
ANR	453686	Argument	( ulong ) pfont		451977	4					
ANR	453687	CastExpression	( ulong ) pfont		451977	0					
ANR	453688	CastTarget	ulong		451977	0					
ANR	453689	Identifier	pfont		451977	1					
ANR	453690	Label	done :	428:0:16099:16103	451977	37	True				
ANR	453691	Identifier	done		451977	0					
ANR	453692	IfStatement	if ( pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_encrypted || pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_TrueType )		451977	38					
ANR	453693	Condition	pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_encrypted || pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_TrueType	431:8:16175:16305	451977	0	True				
ANR	453694	OrExpression	pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_encrypted || pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_TrueType		451977	0		||			
ANR	453695	EqualityExpression	pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_encrypted		451977	0		==			
ANR	453696	PtrMemberAccess	pte -> fstack . items [ fdepth ] . font -> FontType		451977	0					
ANR	453697	MemberAccess	pte -> fstack . items [ fdepth ] . font		451977	0					
ANR	453698	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453699	MemberAccess	pte -> fstack . items		451977	0					
ANR	453700	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453701	Identifier	pte		451977	0					
ANR	453702	Identifier	fstack		451977	1					
ANR	453703	Identifier	items		451977	1					
ANR	453704	Identifier	fdepth		451977	1					
ANR	453705	Identifier	font		451977	1					
ANR	453706	Identifier	FontType		451977	1					
ANR	453707	Identifier	ft_CID_encrypted		451977	1					
ANR	453708	EqualityExpression	pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_TrueType		451977	1		==			
ANR	453709	PtrMemberAccess	pte -> fstack . items [ fdepth ] . font -> FontType		451977	0					
ANR	453710	MemberAccess	pte -> fstack . items [ fdepth ] . font		451977	0					
ANR	453711	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453712	MemberAccess	pte -> fstack . items		451977	0					
ANR	453713	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453714	Identifier	pte		451977	0					
ANR	453715	Identifier	fstack		451977	1					
ANR	453716	Identifier	items		451977	1					
ANR	453717	Identifier	fdepth		451977	1					
ANR	453718	Identifier	font		451977	1					
ANR	453719	Identifier	FontType		451977	1					
ANR	453720	Identifier	ft_CID_TrueType		451977	1					
ANR	453721	CompoundStatement		333:8:12814:12880	451977	1					
ANR	453722	IdentifierDeclStatement	gs_font_base * pfb = ( gs_font_base * ) pte -> fstack . items [ fdepth ] . font ;	434:8:16327:16393	451977	0	True				
ANR	453723	IdentifierDecl	* pfb = ( gs_font_base * ) pte -> fstack . items [ fdepth ] . font		451977	0					
ANR	453724	IdentifierDeclType	gs_font_base *		451977	0					
ANR	453725	Identifier	pfb		451977	1					
ANR	453726	AssignmentExpression	* pfb = ( gs_font_base * ) pte -> fstack . items [ fdepth ] . font		451977	2		=			
ANR	453727	Identifier	pfb		451977	0					
ANR	453728	CastExpression	( gs_font_base * ) pte -> fstack . items [ fdepth ] . font		451977	1					
ANR	453729	CastTarget	gs_font_base *		451977	0					
ANR	453730	MemberAccess	pte -> fstack . items [ fdepth ] . font		451977	1					
ANR	453731	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453732	MemberAccess	pte -> fstack . items		451977	0					
ANR	453733	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453734	Identifier	pte		451977	0					
ANR	453735	Identifier	fstack		451977	1					
ANR	453736	Identifier	items		451977	1					
ANR	453737	Identifier	fdepth		451977	1					
ANR	453738	Identifier	font		451977	1					
ANR	453739	ExpressionStatement	pte -> FontBBox_as_Metrics2 = pfb -> FontBBox . q	436:8:16404:16447	451977	1	True				
ANR	453740	AssignmentExpression	pte -> FontBBox_as_Metrics2 = pfb -> FontBBox . q		451977	0		=			
ANR	453741	PtrMemberAccess	pte -> FontBBox_as_Metrics2		451977	0					
ANR	453742	Identifier	pte		451977	0					
ANR	453743	Identifier	FontBBox_as_Metrics2		451977	1					
ANR	453744	MemberAccess	pfb -> FontBBox . q		451977	1					
ANR	453745	PtrMemberAccess	pfb -> FontBBox		451977	0					
ANR	453746	Identifier	pfb		451977	0					
ANR	453747	Identifier	FontBBox		451977	1					
ANR	453748	Identifier	q		451977	1					
ANR	453749	ExpressionStatement	fidx = 0	440:4:16541:16549	451977	39	True				
ANR	453750	AssignmentExpression	fidx = 0		451977	0		=			
ANR	453751	Identifier	fidx		451977	0					
ANR	453752	PrimaryExpression	0		451977	1					
ANR	453753	IfStatement	if ( pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_encrypted )		451977	40					
ANR	453754	Condition	pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_encrypted	441:8:16559:16618	451977	0	True				
ANR	453755	EqualityExpression	pte -> fstack . items [ fdepth ] . font -> FontType == ft_CID_encrypted		451977	0		==			
ANR	453756	PtrMemberAccess	pte -> fstack . items [ fdepth ] . font -> FontType		451977	0					
ANR	453757	MemberAccess	pte -> fstack . items [ fdepth ] . font		451977	0					
ANR	453758	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453759	MemberAccess	pte -> fstack . items		451977	0					
ANR	453760	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453761	Identifier	pte		451977	0					
ANR	453762	Identifier	fstack		451977	1					
ANR	453763	Identifier	items		451977	1					
ANR	453764	Identifier	fdepth		451977	1					
ANR	453765	Identifier	font		451977	1					
ANR	453766	Identifier	FontType		451977	1					
ANR	453767	Identifier	ft_CID_encrypted		451977	1					
ANR	453768	CompoundStatement		341:8:13118:13138	451977	1					
ANR	453769	IdentifierDeclStatement	"int code , font_index ;"	442:8:16631:16651	451977	0	True				
ANR	453770	IdentifierDecl	code		451977	0					
ANR	453771	IdentifierDeclType	int		451977	0					
ANR	453772	Identifier	code		451977	1					
ANR	453773	IdentifierDecl	font_index		451977	1					
ANR	453774	IdentifierDeclType	int		451977	0					
ANR	453775	Identifier	font_index		451977	1					
ANR	453776	ExpressionStatement	pfont = pte -> fstack . items [ fdepth ] . font	443:8:16661:16699	451977	1	True				
ANR	453777	AssignmentExpression	pfont = pte -> fstack . items [ fdepth ] . font		451977	0		=			
ANR	453778	Identifier	pfont		451977	0					
ANR	453779	MemberAccess	pte -> fstack . items [ fdepth ] . font		451977	1					
ANR	453780	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453781	MemberAccess	pte -> fstack . items		451977	0					
ANR	453782	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453783	Identifier	pte		451977	0					
ANR	453784	Identifier	fstack		451977	1					
ANR	453785	Identifier	items		451977	1					
ANR	453786	Identifier	fdepth		451977	1					
ANR	453787	Identifier	font		451977	1					
ANR	453788	ExpressionStatement	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , NULL , & font_index )"	444:8:16709:16835	451977	2	True				
ANR	453789	AssignmentExpression	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , NULL , & font_index )"		451977	0		=			
ANR	453790	Identifier	code		451977	0					
ANR	453791	CallExpression	"( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , NULL , & font_index )"		451977	1					
ANR	453792	Callee	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		451977	0					
ANR	453793	MemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		451977	0					
ANR	453794	PtrMemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata		451977	0					
ANR	453795	CastExpression	( gs_font_cid0 * ) pfont		451977	0					
ANR	453796	CastTarget	gs_font_cid0 *		451977	0					
ANR	453797	Identifier	pfont		451977	1					
ANR	453798	Identifier	cidata		451977	1					
ANR	453799	Identifier	glyph_data		451977	1					
ANR	453800	ArgumentList	( gs_font_base * ) pfont		451977	1					
ANR	453801	Argument	( gs_font_base * ) pfont		451977	0					
ANR	453802	CastExpression	( gs_font_base * ) pfont		451977	0					
ANR	453803	CastTarget	gs_font_base *		451977	0					
ANR	453804	Identifier	pfont		451977	1					
ANR	453805	Argument	glyph		451977	1					
ANR	453806	Identifier	glyph		451977	0					
ANR	453807	Argument	NULL		451977	2					
ANR	453808	Identifier	NULL		451977	0					
ANR	453809	Argument	& font_index		451977	3					
ANR	453810	UnaryOperationExpression	& font_index		451977	0					
ANR	453811	UnaryOperator	&		451977	0					
ANR	453812	Identifier	font_index		451977	1					
ANR	453813	IfStatement	if ( code < 0 )		451977	3					
ANR	453814	Condition	code < 0	446:12:16849:16856	451977	0	True				
ANR	453815	RelationalExpression	code < 0		451977	0		<			
ANR	453816	Identifier	code		451977	0					
ANR	453817	PrimaryExpression	0		451977	1					
ANR	453818	CompoundStatement		345:22:13346:13346	451977	1					
ANR	453819	ExpressionStatement	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , ( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 ) , NULL , & font_index )"	447:11:16928:17077	451977	0	True				
ANR	453820	AssignmentExpression	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , ( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 ) , NULL , & font_index )"		451977	0		=			
ANR	453821	Identifier	code		451977	0					
ANR	453822	CallExpression	"( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , ( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 ) , NULL , & font_index )"		451977	1					
ANR	453823	Callee	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		451977	0					
ANR	453824	MemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		451977	0					
ANR	453825	PtrMemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata		451977	0					
ANR	453826	CastExpression	( gs_font_cid0 * ) pfont		451977	0					
ANR	453827	CastTarget	gs_font_cid0 *		451977	0					
ANR	453828	Identifier	pfont		451977	1					
ANR	453829	Identifier	cidata		451977	1					
ANR	453830	Identifier	glyph_data		451977	1					
ANR	453831	ArgumentList	( gs_font_base * ) pfont		451977	1					
ANR	453832	Argument	( gs_font_base * ) pfont		451977	0					
ANR	453833	CastExpression	( gs_font_base * ) pfont		451977	0					
ANR	453834	CastTarget	gs_font_base *		451977	0					
ANR	453835	Identifier	pfont		451977	1					
ANR	453836	Argument	( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 )		451977	1					
ANR	453837	CastExpression	( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 )		451977	0					
ANR	453838	CastTarget	gs_glyph		451977	0					
ANR	453839	AdditiveExpression	GS_MIN_CID_GLYPH + 0		451977	1		+			
ANR	453840	Identifier	GS_MIN_CID_GLYPH		451977	0					
ANR	453841	PrimaryExpression	0		451977	1					
ANR	453842	Argument	NULL		451977	2					
ANR	453843	Identifier	NULL		451977	0					
ANR	453844	Argument	& font_index		451977	3					
ANR	453845	UnaryOperationExpression	& font_index		451977	0					
ANR	453846	UnaryOperator	&		451977	0					
ANR	453847	Identifier	font_index		451977	1					
ANR	453848	IfStatement	if ( code < 0 )		451977	1					
ANR	453849	Condition	code < 0	449:15:17094:17101	451977	0	True				
ANR	453850	RelationalExpression	code < 0		451977	0		<			
ANR	453851	Identifier	code		451977	0					
ANR	453852	PrimaryExpression	0		451977	1					
ANR	453853	ExpressionStatement	return_error ( gs_error_invalidfont )	450:15:17119:17153	451977	1	True				
ANR	453854	CallExpression	return_error ( gs_error_invalidfont )		451977	0					
ANR	453855	Callee	return_error		451977	0					
ANR	453856	Identifier	return_error		451977	0					
ANR	453857	ArgumentList	gs_error_invalidfont		451977	1					
ANR	453858	Argument	gs_error_invalidfont		451977	0					
ANR	453859	Identifier	gs_error_invalidfont		451977	0					
ANR	453860	ExpressionStatement	fidx = ( uint ) font_index	452:8:17173:17196	451977	4	True				
ANR	453861	AssignmentExpression	fidx = ( uint ) font_index		451977	0		=			
ANR	453862	Identifier	fidx		451977	0					
ANR	453863	CastExpression	( uint ) font_index		451977	1					
ANR	453864	CastTarget	uint		451977	0					
ANR	453865	Identifier	font_index		451977	1					
ANR	453866	IfStatement	if ( ! changed && pte -> fstack . items [ fdepth ] . index != fidx )		451977	5					
ANR	453867	Condition	! changed && pte -> fstack . items [ fdepth ] . index != fidx	453:12:17210:17260	451977	0	True				
ANR	453868	AndExpression	! changed && pte -> fstack . items [ fdepth ] . index != fidx		451977	0		&&			
ANR	453869	UnaryOperationExpression	! changed		451977	0					
ANR	453870	UnaryOperator	!		451977	0					
ANR	453871	Identifier	changed		451977	1					
ANR	453872	EqualityExpression	pte -> fstack . items [ fdepth ] . index != fidx		451977	1		!=			
ANR	453873	MemberAccess	pte -> fstack . items [ fdepth ] . index		451977	0					
ANR	453874	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453875	MemberAccess	pte -> fstack . items		451977	0					
ANR	453876	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453877	Identifier	pte		451977	0					
ANR	453878	Identifier	fstack		451977	1					
ANR	453879	Identifier	items		451977	1					
ANR	453880	Identifier	fdepth		451977	1					
ANR	453881	Identifier	index		451977	1					
ANR	453882	Identifier	fidx		451977	1					
ANR	453883	ExpressionStatement	changed = 1	454:12:17275:17286	451977	1	True				
ANR	453884	AssignmentExpression	changed = 1		451977	0		=			
ANR	453885	Identifier	changed		451977	0					
ANR	453886	PrimaryExpression	1		451977	1					
ANR	453887	ExpressionStatement	pte -> fstack . items [ fdepth ] . index = fidx	456:4:17298:17336	451977	41	True				
ANR	453888	AssignmentExpression	pte -> fstack . items [ fdepth ] . index = fidx		451977	0		=			
ANR	453889	MemberAccess	pte -> fstack . items [ fdepth ] . index		451977	0					
ANR	453890	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453891	MemberAccess	pte -> fstack . items		451977	0					
ANR	453892	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453893	Identifier	pte		451977	0					
ANR	453894	Identifier	fstack		451977	1					
ANR	453895	Identifier	items		451977	1					
ANR	453896	Identifier	fdepth		451977	1					
ANR	453897	Identifier	index		451977	1					
ANR	453898	Identifier	fidx		451977	1					
ANR	453899	ExpressionStatement	* pchr = chr	458:4:17343:17354	451977	42	True				
ANR	453900	AssignmentExpression	* pchr = chr		451977	0		=			
ANR	453901	UnaryOperationExpression	* pchr		451977	0					
ANR	453902	UnaryOperator	*		451977	0					
ANR	453903	Identifier	pchr		451977	1					
ANR	453904	Identifier	chr		451977	1					
ANR	453905	ExpressionStatement	* pglyph = glyph	459:4:17360:17375	451977	43	True				
ANR	453906	AssignmentExpression	* pglyph = glyph		451977	0		=			
ANR	453907	UnaryOperationExpression	* pglyph		451977	0					
ANR	453908	UnaryOperator	*		451977	0					
ANR	453909	Identifier	pglyph		451977	1					
ANR	453910	Identifier	glyph		451977	1					
ANR	453911	IfStatement	if ( str == pte -> text . data . bytes )		451977	44					
ANR	453912	Condition	str == pte -> text . data . bytes	462:8:17515:17541	451977	0	True				
ANR	453913	EqualityExpression	str == pte -> text . data . bytes		451977	0		==			
ANR	453914	Identifier	str		451977	0					
ANR	453915	MemberAccess	pte -> text . data . bytes		451977	1					
ANR	453916	MemberAccess	pte -> text . data		451977	0					
ANR	453917	PtrMemberAccess	pte -> text		451977	0					
ANR	453918	Identifier	pte		451977	0					
ANR	453919	Identifier	text		451977	1					
ANR	453920	Identifier	data		451977	1					
ANR	453921	Identifier	bytes		451977	1					
ANR	453922	ExpressionStatement	pte -> index = p - str	463:8:17552:17572	451977	1	True				
ANR	453923	AssignmentExpression	pte -> index = p - str		451977	0		=			
ANR	453924	PtrMemberAccess	pte -> index		451977	0					
ANR	453925	Identifier	pte		451977	0					
ANR	453926	Identifier	index		451977	1					
ANR	453927	AdditiveExpression	p - str		451977	1		-			
ANR	453928	Identifier	p		451977	0					
ANR	453929	Identifier	str		451977	1					
ANR	453930	ExpressionStatement	pte -> fstack . depth = fdepth	464:4:17578:17604	451977	45	True				
ANR	453931	AssignmentExpression	pte -> fstack . depth = fdepth		451977	0		=			
ANR	453932	MemberAccess	pte -> fstack . depth		451977	0					
ANR	453933	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453934	Identifier	pte		451977	0					
ANR	453935	Identifier	fstack		451977	1					
ANR	453936	Identifier	depth		451977	1					
ANR	453937	Identifier	fdepth		451977	1					
ANR	453938	ExpressionStatement	"if_debug4m ( 'J' , pte -> memory , ""[J]depth=%d font=0x%lx index=%d changed=%d\\n"" , fdepth , ( ulong ) pte -> fstack . items [ fdepth ] . font , pte -> fstack . items [ fdepth ] . index , changed )"	465:4:17610:17806	451977	46	True				
ANR	453939	CallExpression	"if_debug4m ( 'J' , pte -> memory , ""[J]depth=%d font=0x%lx index=%d changed=%d\\n"" , fdepth , ( ulong ) pte -> fstack . items [ fdepth ] . font , pte -> fstack . items [ fdepth ] . index , changed )"		451977	0					
ANR	453940	Callee	if_debug4m		451977	0					
ANR	453941	Identifier	if_debug4m		451977	0					
ANR	453942	ArgumentList	'J'		451977	1					
ANR	453943	Argument	'J'		451977	0					
ANR	453944	PrimaryExpression	'J'		451977	0					
ANR	453945	Argument	pte -> memory		451977	1					
ANR	453946	PtrMemberAccess	pte -> memory		451977	0					
ANR	453947	Identifier	pte		451977	0					
ANR	453948	Identifier	memory		451977	1					
ANR	453949	Argument	"""[J]depth=%d font=0x%lx index=%d changed=%d\\n"""		451977	2					
ANR	453950	PrimaryExpression	"""[J]depth=%d font=0x%lx index=%d changed=%d\\n"""		451977	0					
ANR	453951	Argument	fdepth		451977	3					
ANR	453952	Identifier	fdepth		451977	0					
ANR	453953	Argument	( ulong ) pte -> fstack . items [ fdepth ] . font		451977	4					
ANR	453954	CastExpression	( ulong ) pte -> fstack . items [ fdepth ] . font		451977	0					
ANR	453955	CastTarget	ulong		451977	0					
ANR	453956	MemberAccess	pte -> fstack . items [ fdepth ] . font		451977	1					
ANR	453957	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453958	MemberAccess	pte -> fstack . items		451977	0					
ANR	453959	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453960	Identifier	pte		451977	0					
ANR	453961	Identifier	fstack		451977	1					
ANR	453962	Identifier	items		451977	1					
ANR	453963	Identifier	fdepth		451977	1					
ANR	453964	Identifier	font		451977	1					
ANR	453965	Argument	pte -> fstack . items [ fdepth ] . index		451977	5					
ANR	453966	MemberAccess	pte -> fstack . items [ fdepth ] . index		451977	0					
ANR	453967	ArrayIndexing	pte -> fstack . items [ fdepth ]		451977	0					
ANR	453968	MemberAccess	pte -> fstack . items		451977	0					
ANR	453969	PtrMemberAccess	pte -> fstack		451977	0					
ANR	453970	Identifier	pte		451977	0					
ANR	453971	Identifier	fstack		451977	1					
ANR	453972	Identifier	items		451977	1					
ANR	453973	Identifier	fdepth		451977	1					
ANR	453974	Identifier	index		451977	1					
ANR	453975	Argument	changed		451977	6					
ANR	453976	Identifier	changed		451977	0					
ANR	453977	ReturnStatement	return changed ;	468:4:17812:17826	451977	47	True				
ANR	453978	Identifier	changed		451977	0					
ANR	453979	ReturnType	int		451977	1					
ANR	453980	Identifier	gs_type0_next_char_glyph		451977	2					
ANR	453981	ParameterList	"gs_text_enum_t * pte , gs_char * pchr , gs_glyph * pglyph"		451977	3					
ANR	453982	Parameter	gs_text_enum_t * pte	101:25:3458:3476	451977	0	True				
ANR	453983	ParameterType	gs_text_enum_t *		451977	0					
ANR	453984	Identifier	pte		451977	1					
ANR	453985	Parameter	gs_char * pchr	101:46:3479:3491	451977	1	True				
ANR	453986	ParameterType	gs_char *		451977	0					
ANR	453987	Identifier	pchr		451977	1					
ANR	453988	Parameter	gs_glyph * pglyph	101:61:3494:3509	451977	2	True				
ANR	453989	ParameterType	gs_glyph *		451977	0					
ANR	453990	Identifier	pglyph		451977	1					
ANR	453991	CFGEntryNode	ENTRY		451977		True				
ANR	453992	CFGExitNode	EXIT		451977		True				
ANR	453993	Symbol	submindex		451977						
ANR	453994	Symbol	* ( p - 1 )		451977						
ANR	453995	Symbol	pchr		451977						
ANR	453996	Symbol	pte -> text . data . bytes		451977						
ANR	453997	Symbol	pdata -> SubsVector		451977						
ANR	453998	Symbol	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		451977						
ANR	453999	Symbol	& font_index		451977						
ANR	454000	Symbol	& glyph		451977						
ANR	454001	Symbol	* * fdepth		451977						
ANR	454002	Symbol	* pdata		451977						
ANR	454003	Symbol	GS_MIN_CID_GLYPH		451977						
ANR	454004	Symbol	cstr . data		451977						
ANR	454005	Symbol	idepth		451977						
ANR	454006	Symbol	pte -> fstack . items [ fdepth ] . font		451977						
ANR	454007	Symbol	* pte -> fstack . items [ fdepth ] . font		451977						
ANR	454008	Symbol	substr		451977						
ANR	454009	Symbol	gs_cmap_decode_next		451977						
ANR	454010	Symbol	pfb		451977						
ANR	454011	Symbol	str		451977						
ANR	454012	Symbol	& pfont0 -> data		451977						
ANR	454013	Symbol	pte -> fstack . items		451977						
ANR	454014	Symbol	* substr		451977						
ANR	454015	Symbol	gs_stack_modal_fonts		451977						
ANR	454016	Symbol	( ( gs_font_cid0 * ) pfont ) -> cidata		451977						
ANR	454017	Symbol	pdata -> subs_width		451977						
ANR	454018	Symbol	pte -> fstack . items [ fdepth ] . index		451977						
ANR	454019	Symbol	pglyph		451977						
ANR	454020	Symbol	( pdata = & pfont0 -> data ) -> FMapType		451977						
ANR	454021	Symbol	MAX_CMAP_CODE_SIZE		451977						
ANR	454022	Symbol	pdata		451977						
ANR	454023	Symbol	pfont -> memory		451977						
ANR	454024	Symbol	pte -> text		451977						
ANR	454025	Symbol	ft_CID_encrypted		451977						
ANR	454026	Symbol	root_esc_char		451977						
ANR	454027	Symbol	pte -> fstack . items [ 0 ] . font		451977						
ANR	454028	Symbol	pfb -> FontBBox		451977						
ANR	454029	Symbol	min		451977						
ANR	454030	Symbol	pfont -> FontType		451977						
ANR	454031	Symbol	* pfb		451977						
ANR	454032	Symbol	gs_error_invalidfont		451977						
ANR	454033	Symbol	orig_depth		451977						
ANR	454034	Symbol	* * * pte		451977						
ANR	454035	Symbol	& cstr		451977						
ANR	454036	Symbol	pte -> FontBBox_as_Metrics2		451977						
ANR	454037	Symbol	* ++ p		451977						
ANR	454038	Symbol	pte -> fstack . depth		451977						
ANR	454039	Symbol	ft_composite		451977						
ANR	454040	Symbol	n		451977						
ANR	454041	Symbol	schr		451977						
ANR	454042	Symbol	p		451977						
ANR	454043	Symbol	GS_NO_GLYPH		451977						
ANR	454044	Symbol	pfb -> FontBBox . q		451977						
ANR	454045	Symbol	width		451977						
ANR	454046	Symbol	pte -> text . data		451977						
ANR	454047	Symbol	mindex		451977						
ANR	454048	Symbol	( pfont = pte -> fstack . items [ fdepth ] . font ) -> FontType		451977						
ANR	454049	Symbol	pte -> memory		451977						
ANR	454050	Symbol	pte -> cmap_code		451977						
ANR	454051	Symbol	fmap_escape		451977						
ANR	454052	Symbol	* pte		451977						
ANR	454053	Symbol	fmt		451977						
ANR	454054	Symbol	tchr		451977						
ANR	454055	Symbol	& mindex		451977						
ANR	454056	Symbol	& chr		451977						
ANR	454057	Symbol	pte -> fstack		451977						
ANR	454058	Symbol	gs_debug_c		451977						
ANR	454059	Symbol	& fidx		451977						
ANR	454060	Symbol	w2		451977						
ANR	454061	Symbol	w3		451977						
ANR	454062	Symbol	w4		451977						
ANR	454063	Symbol	pte -> text . size		451977						
ANR	454064	Symbol	pfont0		451977						
ANR	454065	Symbol	fdepth		451977						
ANR	454066	Symbol	NULL		451977						
ANR	454067	Symbol	* fdepth		451977						
ANR	454068	Symbol	pte -> FontBBox_as_Metrics2 . x		451977						
ANR	454069	Symbol	pdata -> subs_size		451977						
ANR	454070	Symbol	subs_count		451977						
ANR	454071	Symbol	chr		451977						
ANR	454072	Symbol	& submindex		451977						
ANR	454073	Symbol	pte -> FontBBox_as_Metrics2 . y		451977						
ANR	454074	Symbol	* * pte		451977						
ANR	454075	Symbol	ft_CID_TrueType		451977						
ANR	454076	Symbol	fidx		451977						
ANR	454077	Symbol	* * pte -> fstack		451977						
ANR	454078	Symbol	subs_elt		451977						
ANR	454079	Symbol	* psv		451977						
ANR	454080	Symbol	* * pte -> fstack . items		451977						
ANR	454081	Symbol	changed		451977						
ANR	454082	Symbol	cstr		451977						
ANR	454083	Symbol	pte -> fstack . items [ fdepth - 1 ] . font		451977						
ANR	454084	Symbol	pte -> fstack . items [ fdepth ] . font -> FontType		451977						
ANR	454085	Symbol	code		451977						
ANR	454086	Symbol	pdata -> CMap		451977						
ANR	454087	Symbol	* pte -> fstack . items		451977						
ANR	454088	Symbol	pdata -> SubsVector . data		451977						
ANR	454089	Symbol	* pglyph		451977						
ANR	454090	Symbol	pdata -> ShiftOut		451977						
ANR	454091	Symbol	pte -> index		451977						
ANR	454092	Symbol	* pchr		451977						
ANR	454093	Symbol	psv		451977						
ANR	454094	Symbol	cstr . size		451977						
ANR	454095	Symbol	end		451977						
ANR	454096	Symbol	* pte -> fstack		451977						
ANR	454097	Symbol	pte		451977						
ANR	454098	Symbol	pdata -> FMapType		451977						
ANR	454099	Symbol	pfont		451977						
ANR	454100	Symbol	* p ++		451977						
ANR	454101	Symbol	glyph		451977						
ANR	454102	Symbol	* pfont		451977						
ANR	454103	Symbol	pdata -> ShiftIn		451977						
ANR	454104	Symbol	font_index		451977						
ANR	454105	Symbol	* p		451977						
