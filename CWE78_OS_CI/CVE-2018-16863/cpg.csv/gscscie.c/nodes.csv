command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5031464	File	data/converged/CVE-2018-16863_ghostpdl/gscscie.c								
ANR	5031465	DeclStmt									
ANR	5031466	Decl							const gs_color_space_type	const gs_color_space_type	gs_color_space_type_CIEDEFG
ANR	5031467	DeclStmt									
ANR	5031468	Decl							const gs_color_space_type	const gs_color_space_type	gs_color_space_type_CIEDEF
ANR	5031469	DeclStmt									
ANR	5031470	Decl							const gs_color_space_type	const gs_color_space_type	gs_color_space_type_CIEABC
ANR	5031471	DeclStmt									
ANR	5031472	Decl							const gs_color_space_type	const gs_color_space_type	gs_color_space_type_CIEA
ANR	5031473	Function	gx_concrete_space_CIE	125:0:4247:4635							
ANR	5031474	FunctionDef	"gx_concrete_space_CIE (const gs_color_space * pcs , const gs_gstate * pgs)"		5031473	0					
ANR	5031475	CompoundStatement		127:0:4343:4635	5031473	0					
ANR	5031476	IdentifierDeclStatement	const gs_cie_render * pcie = pgs -> cie_render ;	128:4:4349:4392	5031473	0	True				
ANR	5031477	IdentifierDecl	* pcie = pgs -> cie_render		5031473	0					
ANR	5031478	IdentifierDeclType	const gs_cie_render *		5031473	0					
ANR	5031479	Identifier	pcie		5031473	1					
ANR	5031480	AssignmentExpression	* pcie = pgs -> cie_render		5031473	2		=			
ANR	5031481	Identifier	pcie		5031473	0					
ANR	5031482	PtrMemberAccess	pgs -> cie_render		5031473	1					
ANR	5031483	Identifier	pgs		5031473	0					
ANR	5031484	Identifier	cie_render		5031473	1					
ANR	5031485	IfStatement	if ( pcie == 0 || pcie -> RenderTable . lookup . table == 0 || pcie -> RenderTable . lookup . m == 3 )		5031473	1					
ANR	5031486	Condition	pcie == 0 || pcie -> RenderTable . lookup . table == 0 || pcie -> RenderTable . lookup . m == 3	130:8:4403:4493	5031473	0	True				
ANR	5031487	OrExpression	pcie == 0 || pcie -> RenderTable . lookup . table == 0 || pcie -> RenderTable . lookup . m == 3		5031473	0		||			
ANR	5031488	EqualityExpression	pcie == 0		5031473	0		==			
ANR	5031489	Identifier	pcie		5031473	0					
ANR	5031490	PrimaryExpression	0		5031473	1					
ANR	5031491	OrExpression	pcie -> RenderTable . lookup . table == 0 || pcie -> RenderTable . lookup . m == 3		5031473	1		||			
ANR	5031492	EqualityExpression	pcie -> RenderTable . lookup . table == 0		5031473	0		==			
ANR	5031493	MemberAccess	pcie -> RenderTable . lookup . table		5031473	0					
ANR	5031494	MemberAccess	pcie -> RenderTable . lookup		5031473	0					
ANR	5031495	PtrMemberAccess	pcie -> RenderTable		5031473	0					
ANR	5031496	Identifier	pcie		5031473	0					
ANR	5031497	Identifier	RenderTable		5031473	1					
ANR	5031498	Identifier	lookup		5031473	1					
ANR	5031499	Identifier	table		5031473	1					
ANR	5031500	PrimaryExpression	0		5031473	1					
ANR	5031501	EqualityExpression	pcie -> RenderTable . lookup . m == 3		5031473	1		==			
ANR	5031502	MemberAccess	pcie -> RenderTable . lookup . m		5031473	0					
ANR	5031503	MemberAccess	pcie -> RenderTable . lookup		5031473	0					
ANR	5031504	PtrMemberAccess	pcie -> RenderTable		5031473	0					
ANR	5031505	Identifier	pcie		5031473	0					
ANR	5031506	Identifier	RenderTable		5031473	1					
ANR	5031507	Identifier	lookup		5031473	1					
ANR	5031508	Identifier	m		5031473	1					
ANR	5031509	PrimaryExpression	3		5031473	1					
ANR	5031510	CompoundStatement		6:10:161:161	5031473	1					
ANR	5031511	ReturnStatement	return pgs -> devicergb_cs ;	133:8:4515:4539	5031473	0	True				
ANR	5031512	PtrMemberAccess	pgs -> devicergb_cs		5031473	0					
ANR	5031513	Identifier	pgs		5031473	0					
ANR	5031514	Identifier	devicergb_cs		5031473	1					
ANR	5031515	ElseStatement	else		5031473	0					
ANR	5031516	CompoundStatement		8:11:208:208	5031473	0					
ANR	5031517	ReturnStatement	return pgs -> devicecmyk_cs ;	135:8:4602:4627	5031473	0	True				
ANR	5031518	PtrMemberAccess	pgs -> devicecmyk_cs		5031473	0					
ANR	5031519	Identifier	pgs		5031473	0					
ANR	5031520	Identifier	devicecmyk_cs		5031473	1					
ANR	5031521	ReturnType	const gs_color_space *		5031473	1					
ANR	5031522	Identifier	gx_concrete_space_CIE		5031473	2					
ANR	5031523	ParameterList	"const gs_color_space * pcs , const gs_gstate * pgs"		5031473	3					
ANR	5031524	Parameter	const gs_color_space * pcs	126:22:4292:4317	5031473	0	True				
ANR	5031525	ParameterType	const gs_color_space *		5031473	0					
ANR	5031526	Identifier	pcs		5031473	1					
ANR	5031527	Parameter	const gs_gstate * pgs	126:50:4320:4340	5031473	1	True				
ANR	5031528	ParameterType	const gs_gstate *		5031473	0					
ANR	5031529	Identifier	pgs		5031473	1					
ANR	5031530	CFGEntryNode	ENTRY		5031473		True				
ANR	5031531	CFGExitNode	EXIT		5031473		True				
ANR	5031532	Symbol	pcs		5031473						
ANR	5031533	Symbol	pcie -> RenderTable		5031473						
ANR	5031534	Symbol	pgs -> devicecmyk_cs		5031473						
ANR	5031535	Symbol	pcie -> RenderTable . lookup . table		5031473						
ANR	5031536	Symbol	pgs -> devicergb_cs		5031473						
ANR	5031537	Symbol	* pgs		5031473						
ANR	5031538	Symbol	* pcie		5031473						
ANR	5031539	Symbol	pgs -> cie_render		5031473						
ANR	5031540	Symbol	pcie		5031473						
ANR	5031541	Symbol	pgs		5031473						
ANR	5031542	Symbol	pcie -> RenderTable . lookup		5031473						
ANR	5031543	Symbol	pcie -> RenderTable . lookup . m		5031473						
ANR	5031544	Function	gx_install_CIE	143:0:4858:4981							
ANR	5031545	FunctionDef	"gx_install_CIE (gs_color_space * pcs , gs_gstate * pgs)"		5031544	0					
ANR	5031546	CompoundStatement		145:0:4916:4981	5031544	0					
ANR	5031547	ReturnStatement	"return ( * pcs -> params . a -> common . install_cspace ) ( pcs , pgs ) ;"	146:4:4922:4979	5031544	0	True				
ANR	5031548	CallExpression	"( * pcs -> params . a -> common . install_cspace ) ( pcs , pgs )"		5031544	0					
ANR	5031549	Callee	* pcs -> params . a -> common . install_cspace		5031544	0					
ANR	5031550	UnaryOperationExpression	* pcs -> params . a -> common . install_cspace		5031544	0					
ANR	5031551	UnaryOperator	*		5031544	0					
ANR	5031552	MemberAccess	pcs -> params . a -> common . install_cspace		5031544	1					
ANR	5031553	PtrMemberAccess	pcs -> params . a -> common		5031544	0					
ANR	5031554	MemberAccess	pcs -> params . a		5031544	0					
ANR	5031555	PtrMemberAccess	pcs -> params		5031544	0					
ANR	5031556	Identifier	pcs		5031544	0					
ANR	5031557	Identifier	params		5031544	1					
ANR	5031558	Identifier	a		5031544	1					
ANR	5031559	Identifier	common		5031544	1					
ANR	5031560	Identifier	install_cspace		5031544	1					
ANR	5031561	ArgumentList	pcs		5031544	1					
ANR	5031562	Argument	pcs		5031544	0					
ANR	5031563	Identifier	pcs		5031544	0					
ANR	5031564	Argument	pgs		5031544	1					
ANR	5031565	Identifier	pgs		5031544	0					
ANR	5031566	ReturnType	int		5031544	1					
ANR	5031567	Identifier	gx_install_CIE		5031544	2					
ANR	5031568	ParameterList	"gs_color_space * pcs , gs_gstate * pgs"		5031544	3					
ANR	5031569	Parameter	gs_color_space * pcs	144:15:4877:4896	5031544	0	True				
ANR	5031570	ParameterType	gs_color_space *		5031544	0					
ANR	5031571	Identifier	pcs		5031544	1					
ANR	5031572	Parameter	gs_gstate * pgs	144:37:4899:4913	5031544	1	True				
ANR	5031573	ParameterType	gs_gstate *		5031544	0					
ANR	5031574	Identifier	pgs		5031544	1					
ANR	5031575	CFGEntryNode	ENTRY		5031544		True				
ANR	5031576	CFGExitNode	EXIT		5031544		True				
ANR	5031577	Symbol	pcs -> params . a -> common . install_cspace		5031544						
ANR	5031578	Symbol	* pcs -> params . a		5031544						
ANR	5031579	Symbol	pcs		5031544						
ANR	5031580	Symbol	* pcs -> params . a -> common . install_cspace		5031544						
ANR	5031581	Symbol	pcs -> params		5031544						
ANR	5031582	Symbol	* pcs		5031544						
ANR	5031583	Symbol	* * pcs -> params		5031544						
ANR	5031584	Symbol	* pcs -> params		5031544						
ANR	5031585	Symbol	* * pcs		5031544						
ANR	5031586	Symbol	* pcs -> params . a -> common		5031544						
ANR	5031587	Symbol	* * pcs -> params . a		5031544						
ANR	5031588	Symbol	pcs -> params . a		5031544						
ANR	5031589	Symbol	pgs		5031544						
ANR	5031590	Symbol	pcs -> params . a -> common		5031544						
ANR	5031591	Symbol	* * * pcs		5031544						
ANR	5031592	Function	gx_final_CIEDEFG	150:0:5024:5464							
ANR	5031593	FunctionDef	gx_final_CIEDEFG (const gs_color_space * pcs)		5031592	0					
ANR	5031594	CompoundStatement		152:0:5081:5464	5031592	0					
ANR	5031595	IdentifierDeclStatement	gs_color_space * pcs_noconst = ( gs_color_space * ) pcs ;	153:4:5087:5138	5031592	0	True				
ANR	5031596	IdentifierDecl	* pcs_noconst = ( gs_color_space * ) pcs		5031592	0					
ANR	5031597	IdentifierDeclType	gs_color_space *		5031592	0					
ANR	5031598	Identifier	pcs_noconst		5031592	1					
ANR	5031599	AssignmentExpression	* pcs_noconst = ( gs_color_space * ) pcs		5031592	2		=			
ANR	5031600	Identifier	pcs_noconst		5031592	0					
ANR	5031601	CastExpression	( gs_color_space * ) pcs		5031592	1					
ANR	5031602	CastTarget	gs_color_space *		5031592	0					
ANR	5031603	Identifier	pcs		5031592	1					
ANR	5031604	IfStatement	if ( pcs -> icc_equivalent != NULL )		5031592	1					
ANR	5031605	Condition	pcs -> icc_equivalent != NULL	155:8:5149:5175	5031592	0	True				
ANR	5031606	EqualityExpression	pcs -> icc_equivalent != NULL		5031592	0		!=			
ANR	5031607	PtrMemberAccess	pcs -> icc_equivalent		5031592	0					
ANR	5031608	Identifier	pcs		5031592	0					
ANR	5031609	Identifier	icc_equivalent		5031592	1					
ANR	5031610	Identifier	NULL		5031592	1					
ANR	5031611	CompoundStatement		4:37:96:96	5031592	1					
ANR	5031612	ExpressionStatement	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEDEFG"" )"	156:8:5188:5249	5031592	0	True				
ANR	5031613	CallExpression	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEDEFG"" )"		5031592	0					
ANR	5031614	Callee	rc_decrement		5031592	0					
ANR	5031615	Identifier	rc_decrement		5031592	0					
ANR	5031616	ArgumentList	pcs_noconst -> icc_equivalent		5031592	1					
ANR	5031617	Argument	pcs_noconst -> icc_equivalent		5031592	0					
ANR	5031618	PtrMemberAccess	pcs_noconst -> icc_equivalent		5031592	0					
ANR	5031619	Identifier	pcs_noconst		5031592	0					
ANR	5031620	Identifier	icc_equivalent		5031592	1					
ANR	5031621	Argument	"""gx_final_CIEDEFG"""		5031592	1					
ANR	5031622	PrimaryExpression	"""gx_final_CIEDEFG"""		5031592	0					
ANR	5031623	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		5031592	2					
ANR	5031624	Condition	pcs -> cmm_icc_profile_data != NULL	158:8:5265:5297	5031592	0	True				
ANR	5031625	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		5031592	0		!=			
ANR	5031626	PtrMemberAccess	pcs -> cmm_icc_profile_data		5031592	0					
ANR	5031627	Identifier	pcs		5031592	0					
ANR	5031628	Identifier	cmm_icc_profile_data		5031592	1					
ANR	5031629	Identifier	NULL		5031592	1					
ANR	5031630	CompoundStatement		7:43:218:218	5031592	1					
ANR	5031631	ExpressionStatement	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEDEFG"" )"	159:8:5310:5392	5031592	0	True				
ANR	5031632	CallExpression	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEDEFG"" )"		5031592	0					
ANR	5031633	Callee	gsicc_adjust_profile_rc		5031592	0					
ANR	5031634	Identifier	gsicc_adjust_profile_rc		5031592	0					
ANR	5031635	ArgumentList	pcs_noconst -> cmm_icc_profile_data		5031592	1					
ANR	5031636	Argument	pcs_noconst -> cmm_icc_profile_data		5031592	0					
ANR	5031637	PtrMemberAccess	pcs_noconst -> cmm_icc_profile_data		5031592	0					
ANR	5031638	Identifier	pcs_noconst		5031592	0					
ANR	5031639	Identifier	cmm_icc_profile_data		5031592	1					
ANR	5031640	Argument	- 1		5031592	1					
ANR	5031641	UnaryOperationExpression	- 1		5031592	0					
ANR	5031642	UnaryOperator	-		5031592	0					
ANR	5031643	PrimaryExpression	1		5031592	1					
ANR	5031644	Argument	"""gx_final_CIEDEFG"""		5031592	2					
ANR	5031645	PrimaryExpression	"""gx_final_CIEDEFG"""		5031592	0					
ANR	5031646	ExpressionStatement	"rc_decrement ( pcs_noconst -> params . defg , ""gx_final_CIEDEFG"" )"	161:4:5404:5462	5031592	3	True				
ANR	5031647	CallExpression	"rc_decrement ( pcs_noconst -> params . defg , ""gx_final_CIEDEFG"" )"		5031592	0					
ANR	5031648	Callee	rc_decrement		5031592	0					
ANR	5031649	Identifier	rc_decrement		5031592	0					
ANR	5031650	ArgumentList	pcs_noconst -> params . defg		5031592	1					
ANR	5031651	Argument	pcs_noconst -> params . defg		5031592	0					
ANR	5031652	MemberAccess	pcs_noconst -> params . defg		5031592	0					
ANR	5031653	PtrMemberAccess	pcs_noconst -> params		5031592	0					
ANR	5031654	Identifier	pcs_noconst		5031592	0					
ANR	5031655	Identifier	params		5031592	1					
ANR	5031656	Identifier	defg		5031592	1					
ANR	5031657	Argument	"""gx_final_CIEDEFG"""		5031592	1					
ANR	5031658	PrimaryExpression	"""gx_final_CIEDEFG"""		5031592	0					
ANR	5031659	ReturnType	static void		5031592	1					
ANR	5031660	Identifier	gx_final_CIEDEFG		5031592	2					
ANR	5031661	ParameterList	const gs_color_space * pcs		5031592	3					
ANR	5031662	Parameter	const gs_color_space * pcs	151:17:5053:5078	5031592	0	True				
ANR	5031663	ParameterType	const gs_color_space *		5031592	0					
ANR	5031664	Identifier	pcs		5031592	1					
ANR	5031665	CFGEntryNode	ENTRY		5031592		True				
ANR	5031666	CFGExitNode	EXIT		5031592		True				
ANR	5031667	Symbol	pcs_noconst -> cmm_icc_profile_data		5031592						
ANR	5031668	Symbol	pcs		5031592						
ANR	5031669	Symbol	pcs_noconst		5031592						
ANR	5031670	Symbol	NULL		5031592						
ANR	5031671	Symbol	pcs_noconst -> params		5031592						
ANR	5031672	Symbol	pcs -> cmm_icc_profile_data		5031592						
ANR	5031673	Symbol	pcs_noconst -> params . defg		5031592						
ANR	5031674	Symbol	* pcs_noconst		5031592						
ANR	5031675	Symbol	* pcs		5031592						
ANR	5031676	Symbol	pcs -> icc_equivalent		5031592						
ANR	5031677	Symbol	pcs_noconst -> icc_equivalent		5031592						
ANR	5031678	Function	gx_final_CIEDEF	164:0:5467:5901							
ANR	5031679	FunctionDef	gx_final_CIEDEF (const gs_color_space * pcs)		5031678	0					
ANR	5031680	CompoundStatement		166:0:5523:5901	5031678	0					
ANR	5031681	IdentifierDeclStatement	gs_color_space * pcs_noconst = ( gs_color_space * ) pcs ;	167:4:5529:5580	5031678	0	True				
ANR	5031682	IdentifierDecl	* pcs_noconst = ( gs_color_space * ) pcs		5031678	0					
ANR	5031683	IdentifierDeclType	gs_color_space *		5031678	0					
ANR	5031684	Identifier	pcs_noconst		5031678	1					
ANR	5031685	AssignmentExpression	* pcs_noconst = ( gs_color_space * ) pcs		5031678	2		=			
ANR	5031686	Identifier	pcs_noconst		5031678	0					
ANR	5031687	CastExpression	( gs_color_space * ) pcs		5031678	1					
ANR	5031688	CastTarget	gs_color_space *		5031678	0					
ANR	5031689	Identifier	pcs		5031678	1					
ANR	5031690	IfStatement	if ( pcs -> icc_equivalent != NULL )		5031678	1					
ANR	5031691	Condition	pcs -> icc_equivalent != NULL	169:8:5591:5617	5031678	0	True				
ANR	5031692	EqualityExpression	pcs -> icc_equivalent != NULL		5031678	0		!=			
ANR	5031693	PtrMemberAccess	pcs -> icc_equivalent		5031678	0					
ANR	5031694	Identifier	pcs		5031678	0					
ANR	5031695	Identifier	icc_equivalent		5031678	1					
ANR	5031696	Identifier	NULL		5031678	1					
ANR	5031697	CompoundStatement		4:37:96:96	5031678	1					
ANR	5031698	ExpressionStatement	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEDEF"" )"	170:8:5630:5689	5031678	0	True				
ANR	5031699	CallExpression	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEDEF"" )"		5031678	0					
ANR	5031700	Callee	rc_decrement		5031678	0					
ANR	5031701	Identifier	rc_decrement		5031678	0					
ANR	5031702	ArgumentList	pcs_noconst -> icc_equivalent		5031678	1					
ANR	5031703	Argument	pcs_noconst -> icc_equivalent		5031678	0					
ANR	5031704	PtrMemberAccess	pcs_noconst -> icc_equivalent		5031678	0					
ANR	5031705	Identifier	pcs_noconst		5031678	0					
ANR	5031706	Identifier	icc_equivalent		5031678	1					
ANR	5031707	Argument	"""gx_final_CIEDEF"""		5031678	1					
ANR	5031708	PrimaryExpression	"""gx_final_CIEDEF"""		5031678	0					
ANR	5031709	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		5031678	2					
ANR	5031710	Condition	pcs -> cmm_icc_profile_data != NULL	172:8:5705:5737	5031678	0	True				
ANR	5031711	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		5031678	0		!=			
ANR	5031712	PtrMemberAccess	pcs -> cmm_icc_profile_data		5031678	0					
ANR	5031713	Identifier	pcs		5031678	0					
ANR	5031714	Identifier	cmm_icc_profile_data		5031678	1					
ANR	5031715	Identifier	NULL		5031678	1					
ANR	5031716	CompoundStatement		7:43:216:216	5031678	1					
ANR	5031717	ExpressionStatement	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEDEF"" )"	173:8:5750:5831	5031678	0	True				
ANR	5031718	CallExpression	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEDEF"" )"		5031678	0					
ANR	5031719	Callee	gsicc_adjust_profile_rc		5031678	0					
ANR	5031720	Identifier	gsicc_adjust_profile_rc		5031678	0					
ANR	5031721	ArgumentList	pcs_noconst -> cmm_icc_profile_data		5031678	1					
ANR	5031722	Argument	pcs_noconst -> cmm_icc_profile_data		5031678	0					
ANR	5031723	PtrMemberAccess	pcs_noconst -> cmm_icc_profile_data		5031678	0					
ANR	5031724	Identifier	pcs_noconst		5031678	0					
ANR	5031725	Identifier	cmm_icc_profile_data		5031678	1					
ANR	5031726	Argument	- 1		5031678	1					
ANR	5031727	UnaryOperationExpression	- 1		5031678	0					
ANR	5031728	UnaryOperator	-		5031678	0					
ANR	5031729	PrimaryExpression	1		5031678	1					
ANR	5031730	Argument	"""gx_final_CIEDEF"""		5031678	2					
ANR	5031731	PrimaryExpression	"""gx_final_CIEDEF"""		5031678	0					
ANR	5031732	ExpressionStatement	"rc_decrement ( pcs_noconst -> params . def , ""gx_final_CIEDEF"" )"	175:4:5843:5899	5031678	3	True				
ANR	5031733	CallExpression	"rc_decrement ( pcs_noconst -> params . def , ""gx_final_CIEDEF"" )"		5031678	0					
ANR	5031734	Callee	rc_decrement		5031678	0					
ANR	5031735	Identifier	rc_decrement		5031678	0					
ANR	5031736	ArgumentList	pcs_noconst -> params . def		5031678	1					
ANR	5031737	Argument	pcs_noconst -> params . def		5031678	0					
ANR	5031738	MemberAccess	pcs_noconst -> params . def		5031678	0					
ANR	5031739	PtrMemberAccess	pcs_noconst -> params		5031678	0					
ANR	5031740	Identifier	pcs_noconst		5031678	0					
ANR	5031741	Identifier	params		5031678	1					
ANR	5031742	Identifier	def		5031678	1					
ANR	5031743	Argument	"""gx_final_CIEDEF"""		5031678	1					
ANR	5031744	PrimaryExpression	"""gx_final_CIEDEF"""		5031678	0					
ANR	5031745	ReturnType	static void		5031678	1					
ANR	5031746	Identifier	gx_final_CIEDEF		5031678	2					
ANR	5031747	ParameterList	const gs_color_space * pcs		5031678	3					
ANR	5031748	Parameter	const gs_color_space * pcs	165:16:5495:5520	5031678	0	True				
ANR	5031749	ParameterType	const gs_color_space *		5031678	0					
ANR	5031750	Identifier	pcs		5031678	1					
ANR	5031751	CFGEntryNode	ENTRY		5031678		True				
ANR	5031752	CFGExitNode	EXIT		5031678		True				
ANR	5031753	Symbol	pcs_noconst -> cmm_icc_profile_data		5031678						
ANR	5031754	Symbol	pcs		5031678						
ANR	5031755	Symbol	pcs_noconst		5031678						
ANR	5031756	Symbol	NULL		5031678						
ANR	5031757	Symbol	pcs_noconst -> params		5031678						
ANR	5031758	Symbol	pcs -> cmm_icc_profile_data		5031678						
ANR	5031759	Symbol	* pcs_noconst		5031678						
ANR	5031760	Symbol	* pcs		5031678						
ANR	5031761	Symbol	pcs -> icc_equivalent		5031678						
ANR	5031762	Symbol	pcs_noconst -> params . def		5031678						
ANR	5031763	Symbol	pcs_noconst -> icc_equivalent		5031678						
ANR	5031764	Function	gx_final_CIEABC	178:0:5904:6338							
ANR	5031765	FunctionDef	gx_final_CIEABC (const gs_color_space * pcs)		5031764	0					
ANR	5031766	CompoundStatement		180:0:5960:6338	5031764	0					
ANR	5031767	IdentifierDeclStatement	gs_color_space * pcs_noconst = ( gs_color_space * ) pcs ;	181:4:5966:6017	5031764	0	True				
ANR	5031768	IdentifierDecl	* pcs_noconst = ( gs_color_space * ) pcs		5031764	0					
ANR	5031769	IdentifierDeclType	gs_color_space *		5031764	0					
ANR	5031770	Identifier	pcs_noconst		5031764	1					
ANR	5031771	AssignmentExpression	* pcs_noconst = ( gs_color_space * ) pcs		5031764	2		=			
ANR	5031772	Identifier	pcs_noconst		5031764	0					
ANR	5031773	CastExpression	( gs_color_space * ) pcs		5031764	1					
ANR	5031774	CastTarget	gs_color_space *		5031764	0					
ANR	5031775	Identifier	pcs		5031764	1					
ANR	5031776	IfStatement	if ( pcs -> icc_equivalent != NULL )		5031764	1					
ANR	5031777	Condition	pcs -> icc_equivalent != NULL	183:8:6028:6054	5031764	0	True				
ANR	5031778	EqualityExpression	pcs -> icc_equivalent != NULL		5031764	0		!=			
ANR	5031779	PtrMemberAccess	pcs -> icc_equivalent		5031764	0					
ANR	5031780	Identifier	pcs		5031764	0					
ANR	5031781	Identifier	icc_equivalent		5031764	1					
ANR	5031782	Identifier	NULL		5031764	1					
ANR	5031783	CompoundStatement		4:37:96:96	5031764	1					
ANR	5031784	ExpressionStatement	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEABC"" )"	184:8:6067:6126	5031764	0	True				
ANR	5031785	CallExpression	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEABC"" )"		5031764	0					
ANR	5031786	Callee	rc_decrement		5031764	0					
ANR	5031787	Identifier	rc_decrement		5031764	0					
ANR	5031788	ArgumentList	pcs_noconst -> icc_equivalent		5031764	1					
ANR	5031789	Argument	pcs_noconst -> icc_equivalent		5031764	0					
ANR	5031790	PtrMemberAccess	pcs_noconst -> icc_equivalent		5031764	0					
ANR	5031791	Identifier	pcs_noconst		5031764	0					
ANR	5031792	Identifier	icc_equivalent		5031764	1					
ANR	5031793	Argument	"""gx_final_CIEABC"""		5031764	1					
ANR	5031794	PrimaryExpression	"""gx_final_CIEABC"""		5031764	0					
ANR	5031795	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		5031764	2					
ANR	5031796	Condition	pcs -> cmm_icc_profile_data != NULL	186:8:6142:6174	5031764	0	True				
ANR	5031797	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		5031764	0		!=			
ANR	5031798	PtrMemberAccess	pcs -> cmm_icc_profile_data		5031764	0					
ANR	5031799	Identifier	pcs		5031764	0					
ANR	5031800	Identifier	cmm_icc_profile_data		5031764	1					
ANR	5031801	Identifier	NULL		5031764	1					
ANR	5031802	CompoundStatement		7:43:216:216	5031764	1					
ANR	5031803	ExpressionStatement	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEABC"" )"	187:8:6187:6268	5031764	0	True				
ANR	5031804	CallExpression	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEABC"" )"		5031764	0					
ANR	5031805	Callee	gsicc_adjust_profile_rc		5031764	0					
ANR	5031806	Identifier	gsicc_adjust_profile_rc		5031764	0					
ANR	5031807	ArgumentList	pcs_noconst -> cmm_icc_profile_data		5031764	1					
ANR	5031808	Argument	pcs_noconst -> cmm_icc_profile_data		5031764	0					
ANR	5031809	PtrMemberAccess	pcs_noconst -> cmm_icc_profile_data		5031764	0					
ANR	5031810	Identifier	pcs_noconst		5031764	0					
ANR	5031811	Identifier	cmm_icc_profile_data		5031764	1					
ANR	5031812	Argument	- 1		5031764	1					
ANR	5031813	UnaryOperationExpression	- 1		5031764	0					
ANR	5031814	UnaryOperator	-		5031764	0					
ANR	5031815	PrimaryExpression	1		5031764	1					
ANR	5031816	Argument	"""gx_final_CIEABC"""		5031764	2					
ANR	5031817	PrimaryExpression	"""gx_final_CIEABC"""		5031764	0					
ANR	5031818	ExpressionStatement	"rc_decrement ( pcs_noconst -> params . abc , ""gx_final_CIEABC"" )"	189:4:6280:6336	5031764	3	True				
ANR	5031819	CallExpression	"rc_decrement ( pcs_noconst -> params . abc , ""gx_final_CIEABC"" )"		5031764	0					
ANR	5031820	Callee	rc_decrement		5031764	0					
ANR	5031821	Identifier	rc_decrement		5031764	0					
ANR	5031822	ArgumentList	pcs_noconst -> params . abc		5031764	1					
ANR	5031823	Argument	pcs_noconst -> params . abc		5031764	0					
ANR	5031824	MemberAccess	pcs_noconst -> params . abc		5031764	0					
ANR	5031825	PtrMemberAccess	pcs_noconst -> params		5031764	0					
ANR	5031826	Identifier	pcs_noconst		5031764	0					
ANR	5031827	Identifier	params		5031764	1					
ANR	5031828	Identifier	abc		5031764	1					
ANR	5031829	Argument	"""gx_final_CIEABC"""		5031764	1					
ANR	5031830	PrimaryExpression	"""gx_final_CIEABC"""		5031764	0					
ANR	5031831	ReturnType	static void		5031764	1					
ANR	5031832	Identifier	gx_final_CIEABC		5031764	2					
ANR	5031833	ParameterList	const gs_color_space * pcs		5031764	3					
ANR	5031834	Parameter	const gs_color_space * pcs	179:16:5932:5957	5031764	0	True				
ANR	5031835	ParameterType	const gs_color_space *		5031764	0					
ANR	5031836	Identifier	pcs		5031764	1					
ANR	5031837	CFGEntryNode	ENTRY		5031764		True				
ANR	5031838	CFGExitNode	EXIT		5031764		True				
ANR	5031839	Symbol	pcs_noconst -> cmm_icc_profile_data		5031764						
ANR	5031840	Symbol	pcs		5031764						
ANR	5031841	Symbol	pcs_noconst		5031764						
ANR	5031842	Symbol	NULL		5031764						
ANR	5031843	Symbol	pcs_noconst -> params		5031764						
ANR	5031844	Symbol	pcs -> cmm_icc_profile_data		5031764						
ANR	5031845	Symbol	* pcs_noconst		5031764						
ANR	5031846	Symbol	* pcs		5031764						
ANR	5031847	Symbol	pcs -> icc_equivalent		5031764						
ANR	5031848	Symbol	pcs_noconst -> params . abc		5031764						
ANR	5031849	Symbol	pcs_noconst -> icc_equivalent		5031764						
ANR	5031850	Function	gx_final_CIEA	192:0:6341:6773							
ANR	5031851	FunctionDef	gx_final_CIEA (const gs_color_space * pcs)		5031850	0					
ANR	5031852	CompoundStatement		194:0:6395:6773	5031850	0					
ANR	5031853	IdentifierDeclStatement	gs_color_space * pcs_noconst = ( gs_color_space * ) pcs ;	195:4:6401:6452	5031850	0	True				
ANR	5031854	IdentifierDecl	* pcs_noconst = ( gs_color_space * ) pcs		5031850	0					
ANR	5031855	IdentifierDeclType	gs_color_space *		5031850	0					
ANR	5031856	Identifier	pcs_noconst		5031850	1					
ANR	5031857	AssignmentExpression	* pcs_noconst = ( gs_color_space * ) pcs		5031850	2		=			
ANR	5031858	Identifier	pcs_noconst		5031850	0					
ANR	5031859	CastExpression	( gs_color_space * ) pcs		5031850	1					
ANR	5031860	CastTarget	gs_color_space *		5031850	0					
ANR	5031861	Identifier	pcs		5031850	1					
ANR	5031862	IfStatement	if ( pcs -> icc_equivalent != NULL )		5031850	1					
ANR	5031863	Condition	pcs -> icc_equivalent != NULL	197:8:6463:6489	5031850	0	True				
ANR	5031864	EqualityExpression	pcs -> icc_equivalent != NULL		5031850	0		!=			
ANR	5031865	PtrMemberAccess	pcs -> icc_equivalent		5031850	0					
ANR	5031866	Identifier	pcs		5031850	0					
ANR	5031867	Identifier	icc_equivalent		5031850	1					
ANR	5031868	Identifier	NULL		5031850	1					
ANR	5031869	CompoundStatement		4:37:96:96	5031850	1					
ANR	5031870	ExpressionStatement	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEA"" )"	198:8:6502:6559	5031850	0	True				
ANR	5031871	CallExpression	"rc_decrement ( pcs_noconst -> icc_equivalent , ""gx_final_CIEA"" )"		5031850	0					
ANR	5031872	Callee	rc_decrement		5031850	0					
ANR	5031873	Identifier	rc_decrement		5031850	0					
ANR	5031874	ArgumentList	pcs_noconst -> icc_equivalent		5031850	1					
ANR	5031875	Argument	pcs_noconst -> icc_equivalent		5031850	0					
ANR	5031876	PtrMemberAccess	pcs_noconst -> icc_equivalent		5031850	0					
ANR	5031877	Identifier	pcs_noconst		5031850	0					
ANR	5031878	Identifier	icc_equivalent		5031850	1					
ANR	5031879	Argument	"""gx_final_CIEA"""		5031850	1					
ANR	5031880	PrimaryExpression	"""gx_final_CIEA"""		5031850	0					
ANR	5031881	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		5031850	2					
ANR	5031882	Condition	pcs -> cmm_icc_profile_data != NULL	200:8:6575:6607	5031850	0	True				
ANR	5031883	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		5031850	0		!=			
ANR	5031884	PtrMemberAccess	pcs -> cmm_icc_profile_data		5031850	0					
ANR	5031885	Identifier	pcs		5031850	0					
ANR	5031886	Identifier	cmm_icc_profile_data		5031850	1					
ANR	5031887	Identifier	NULL		5031850	1					
ANR	5031888	CompoundStatement		7:43:214:214	5031850	1					
ANR	5031889	ExpressionStatement	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEA"" )"	201:8:6620:6699	5031850	0	True				
ANR	5031890	CallExpression	"gsicc_adjust_profile_rc ( pcs_noconst -> cmm_icc_profile_data , - 1 , ""gx_final_CIEA"" )"		5031850	0					
ANR	5031891	Callee	gsicc_adjust_profile_rc		5031850	0					
ANR	5031892	Identifier	gsicc_adjust_profile_rc		5031850	0					
ANR	5031893	ArgumentList	pcs_noconst -> cmm_icc_profile_data		5031850	1					
ANR	5031894	Argument	pcs_noconst -> cmm_icc_profile_data		5031850	0					
ANR	5031895	PtrMemberAccess	pcs_noconst -> cmm_icc_profile_data		5031850	0					
ANR	5031896	Identifier	pcs_noconst		5031850	0					
ANR	5031897	Identifier	cmm_icc_profile_data		5031850	1					
ANR	5031898	Argument	- 1		5031850	1					
ANR	5031899	UnaryOperationExpression	- 1		5031850	0					
ANR	5031900	UnaryOperator	-		5031850	0					
ANR	5031901	PrimaryExpression	1		5031850	1					
ANR	5031902	Argument	"""gx_final_CIEA"""		5031850	2					
ANR	5031903	PrimaryExpression	"""gx_final_CIEA"""		5031850	0					
ANR	5031904	ExpressionStatement	"rc_decrement ( pcs_noconst -> params . a , ""gx_adjust_cspace_CIEA"" )"	203:4:6711:6771	5031850	3	True				
ANR	5031905	CallExpression	"rc_decrement ( pcs_noconst -> params . a , ""gx_adjust_cspace_CIEA"" )"		5031850	0					
ANR	5031906	Callee	rc_decrement		5031850	0					
ANR	5031907	Identifier	rc_decrement		5031850	0					
ANR	5031908	ArgumentList	pcs_noconst -> params . a		5031850	1					
ANR	5031909	Argument	pcs_noconst -> params . a		5031850	0					
ANR	5031910	MemberAccess	pcs_noconst -> params . a		5031850	0					
ANR	5031911	PtrMemberAccess	pcs_noconst -> params		5031850	0					
ANR	5031912	Identifier	pcs_noconst		5031850	0					
ANR	5031913	Identifier	params		5031850	1					
ANR	5031914	Identifier	a		5031850	1					
ANR	5031915	Argument	"""gx_adjust_cspace_CIEA"""		5031850	1					
ANR	5031916	PrimaryExpression	"""gx_adjust_cspace_CIEA"""		5031850	0					
ANR	5031917	ReturnType	static void		5031850	1					
ANR	5031918	Identifier	gx_final_CIEA		5031850	2					
ANR	5031919	ParameterList	const gs_color_space * pcs		5031850	3					
ANR	5031920	Parameter	const gs_color_space * pcs	193:14:6367:6392	5031850	0	True				
ANR	5031921	ParameterType	const gs_color_space *		5031850	0					
ANR	5031922	Identifier	pcs		5031850	1					
ANR	5031923	CFGEntryNode	ENTRY		5031850		True				
ANR	5031924	CFGExitNode	EXIT		5031850		True				
ANR	5031925	Symbol	pcs_noconst -> cmm_icc_profile_data		5031850						
ANR	5031926	Symbol	pcs		5031850						
ANR	5031927	Symbol	pcs_noconst		5031850						
ANR	5031928	Symbol	NULL		5031850						
ANR	5031929	Symbol	pcs_noconst -> params		5031850						
ANR	5031930	Symbol	pcs_noconst -> params . a		5031850						
ANR	5031931	Symbol	pcs -> cmm_icc_profile_data		5031850						
ANR	5031932	Symbol	* pcs_noconst		5031850						
ANR	5031933	Symbol	* pcs		5031850						
ANR	5031934	Symbol	pcs -> icc_equivalent		5031850						
ANR	5031935	Symbol	pcs_noconst -> icc_equivalent		5031850						
ANR	5031936	Function	gx_set_common_cie_defaults	220:0:7226:7576							
ANR	5031937	FunctionDef	"gx_set_common_cie_defaults (gs_cie_common * pcommon , void * client_data)"		5031936	0					
ANR	5031938	CompoundStatement		222:0:7302:7576	5031936	0					
ANR	5031939	ExpressionStatement	pcommon -> RangeLMN = Range3_default	223:4:7308:7342	5031936	0	True				
ANR	5031940	AssignmentExpression	pcommon -> RangeLMN = Range3_default		5031936	0		=			
ANR	5031941	PtrMemberAccess	pcommon -> RangeLMN		5031936	0					
ANR	5031942	Identifier	pcommon		5031936	0					
ANR	5031943	Identifier	RangeLMN		5031936	1					
ANR	5031944	Identifier	Range3_default		5031936	1					
ANR	5031945	ExpressionStatement	pcommon -> DecodeLMN = DecodeLMN_default	224:4:7348:7386	5031936	1	True				
ANR	5031946	AssignmentExpression	pcommon -> DecodeLMN = DecodeLMN_default		5031936	0		=			
ANR	5031947	PtrMemberAccess	pcommon -> DecodeLMN		5031936	0					
ANR	5031948	Identifier	pcommon		5031936	0					
ANR	5031949	Identifier	DecodeLMN		5031936	1					
ANR	5031950	Identifier	DecodeLMN_default		5031936	1					
ANR	5031951	ExpressionStatement	pcommon -> MatrixLMN = Matrix3_default	225:4:7392:7428	5031936	2	True				
ANR	5031952	AssignmentExpression	pcommon -> MatrixLMN = Matrix3_default		5031936	0		=			
ANR	5031953	PtrMemberAccess	pcommon -> MatrixLMN		5031936	0					
ANR	5031954	Identifier	pcommon		5031936	0					
ANR	5031955	Identifier	MatrixLMN		5031936	1					
ANR	5031956	Identifier	Matrix3_default		5031936	1					
ANR	5031957	ExpressionStatement	pcommon -> points . WhitePoint = BlackPoint_default	226:4:7434:7481	5031936	3	True				
ANR	5031958	AssignmentExpression	pcommon -> points . WhitePoint = BlackPoint_default		5031936	0		=			
ANR	5031959	MemberAccess	pcommon -> points . WhitePoint		5031936	0					
ANR	5031960	PtrMemberAccess	pcommon -> points		5031936	0					
ANR	5031961	Identifier	pcommon		5031936	0					
ANR	5031962	Identifier	points		5031936	1					
ANR	5031963	Identifier	WhitePoint		5031936	1					
ANR	5031964	Identifier	BlackPoint_default		5031936	1					
ANR	5031965	ExpressionStatement	pcommon -> points . BlackPoint = BlackPoint_default	227:4:7487:7534	5031936	4	True				
ANR	5031966	AssignmentExpression	pcommon -> points . BlackPoint = BlackPoint_default		5031936	0		=			
ANR	5031967	MemberAccess	pcommon -> points . BlackPoint		5031936	0					
ANR	5031968	PtrMemberAccess	pcommon -> points		5031936	0					
ANR	5031969	Identifier	pcommon		5031936	0					
ANR	5031970	Identifier	points		5031936	1					
ANR	5031971	Identifier	BlackPoint		5031936	1					
ANR	5031972	Identifier	BlackPoint_default		5031936	1					
ANR	5031973	ExpressionStatement	pcommon -> client_data = client_data	228:4:7540:7574	5031936	5	True				
ANR	5031974	AssignmentExpression	pcommon -> client_data = client_data		5031936	0		=			
ANR	5031975	PtrMemberAccess	pcommon -> client_data		5031936	0					
ANR	5031976	Identifier	pcommon		5031936	0					
ANR	5031977	Identifier	client_data		5031936	1					
ANR	5031978	Identifier	client_data		5031936	1					
ANR	5031979	ReturnType	void		5031936	1					
ANR	5031980	Identifier	gx_set_common_cie_defaults		5031936	2					
ANR	5031981	ParameterList	"gs_cie_common * pcommon , void * client_data"		5031936	3					
ANR	5031982	Parameter	gs_cie_common * pcommon	221:27:7258:7280	5031936	0	True				
ANR	5031983	ParameterType	gs_cie_common *		5031936	0					
ANR	5031984	Identifier	pcommon		5031936	1					
ANR	5031985	Parameter	void * client_data	221:52:7283:7299	5031936	1	True				
ANR	5031986	ParameterType	void *		5031936	0					
ANR	5031987	Identifier	client_data		5031936	1					
ANR	5031988	CFGEntryNode	ENTRY		5031936		True				
ANR	5031989	CFGExitNode	EXIT		5031936		True				
ANR	5031990	Symbol	client_data		5031936						
ANR	5031991	Symbol	BlackPoint_default		5031936						
ANR	5031992	Symbol	pcommon		5031936						
ANR	5031993	Symbol	DecodeLMN_default		5031936						
ANR	5031994	Symbol	Range3_default		5031936						
ANR	5031995	Symbol	pcommon -> DecodeLMN		5031936						
ANR	5031996	Symbol	pcommon -> points . BlackPoint		5031936						
ANR	5031997	Symbol	Matrix3_default		5031936						
ANR	5031998	Symbol	pcommon -> RangeLMN		5031936						
ANR	5031999	Symbol	* pcommon		5031936						
ANR	5032000	Symbol	pcommon -> MatrixLMN		5031936						
ANR	5032001	Symbol	pcommon -> points . WhitePoint		5031936						
ANR	5032002	Symbol	pcommon -> points		5031936						
ANR	5032003	Symbol	pcommon -> client_data		5031936						
ANR	5032004	Function	set_cie_abc_defaults	235:0:7702:7952							
ANR	5032005	FunctionDef	"set_cie_abc_defaults (gs_cie_abc * pabc , void * client_data)"		5032004	0					
ANR	5032006	CompoundStatement		237:0:7773:7952	5032004	0					
ANR	5032007	ExpressionStatement	"gx_set_common_cie_defaults ( & pabc -> common , client_data )"	238:4:7779:7833	5032004	0	True				
ANR	5032008	CallExpression	"gx_set_common_cie_defaults ( & pabc -> common , client_data )"		5032004	0					
ANR	5032009	Callee	gx_set_common_cie_defaults		5032004	0					
ANR	5032010	Identifier	gx_set_common_cie_defaults		5032004	0					
ANR	5032011	ArgumentList	& pabc -> common		5032004	1					
ANR	5032012	Argument	& pabc -> common		5032004	0					
ANR	5032013	UnaryOperationExpression	& pabc -> common		5032004	0					
ANR	5032014	UnaryOperator	&		5032004	0					
ANR	5032015	PtrMemberAccess	pabc -> common		5032004	1					
ANR	5032016	Identifier	pabc		5032004	0					
ANR	5032017	Identifier	common		5032004	1					
ANR	5032018	Argument	client_data		5032004	1					
ANR	5032019	Identifier	client_data		5032004	0					
ANR	5032020	ExpressionStatement	pabc -> RangeABC = Range3_default	239:4:7839:7870	5032004	1	True				
ANR	5032021	AssignmentExpression	pabc -> RangeABC = Range3_default		5032004	0		=			
ANR	5032022	PtrMemberAccess	pabc -> RangeABC		5032004	0					
ANR	5032023	Identifier	pabc		5032004	0					
ANR	5032024	Identifier	RangeABC		5032004	1					
ANR	5032025	Identifier	Range3_default		5032004	1					
ANR	5032026	ExpressionStatement	pabc -> DecodeABC = DecodeABC_default	240:4:7876:7911	5032004	2	True				
ANR	5032027	AssignmentExpression	pabc -> DecodeABC = DecodeABC_default		5032004	0		=			
ANR	5032028	PtrMemberAccess	pabc -> DecodeABC		5032004	0					
ANR	5032029	Identifier	pabc		5032004	0					
ANR	5032030	Identifier	DecodeABC		5032004	1					
ANR	5032031	Identifier	DecodeABC_default		5032004	1					
ANR	5032032	ExpressionStatement	pabc -> MatrixABC = Matrix3_default	241:4:7917:7950	5032004	3	True				
ANR	5032033	AssignmentExpression	pabc -> MatrixABC = Matrix3_default		5032004	0		=			
ANR	5032034	PtrMemberAccess	pabc -> MatrixABC		5032004	0					
ANR	5032035	Identifier	pabc		5032004	0					
ANR	5032036	Identifier	MatrixABC		5032004	1					
ANR	5032037	Identifier	Matrix3_default		5032004	1					
ANR	5032038	ReturnType	static void		5032004	1					
ANR	5032039	Identifier	set_cie_abc_defaults		5032004	2					
ANR	5032040	ParameterList	"gs_cie_abc * pabc , void * client_data"		5032004	3					
ANR	5032041	Parameter	gs_cie_abc * pabc	236:21:7735:7751	5032004	0	True				
ANR	5032042	ParameterType	gs_cie_abc *		5032004	0					
ANR	5032043	Identifier	pabc		5032004	1					
ANR	5032044	Parameter	void * client_data	236:40:7754:7770	5032004	1	True				
ANR	5032045	ParameterType	void *		5032004	0					
ANR	5032046	Identifier	client_data		5032004	1					
ANR	5032047	CFGEntryNode	ENTRY		5032004		True				
ANR	5032048	CFGExitNode	EXIT		5032004		True				
ANR	5032049	Symbol	client_data		5032004						
ANR	5032050	Symbol	Range3_default		5032004						
ANR	5032051	Symbol	pabc -> RangeABC		5032004						
ANR	5032052	Symbol	pabc		5032004						
ANR	5032053	Symbol	Matrix3_default		5032004						
ANR	5032054	Symbol	DecodeABC_default		5032004						
ANR	5032055	Symbol	pabc -> MatrixABC		5032004						
ANR	5032056	Symbol	* pabc		5032004						
ANR	5032057	Symbol	pabc -> DecodeABC		5032004						
ANR	5032058	Symbol	& pabc -> common		5032004						
ANR	5032059	Function	set_ctbl_defaults	250:0:8231:8503							
ANR	5032060	FunctionDef	"set_ctbl_defaults (gx_color_lookup_table * plktblp , int num_comps)"		5032059	0					
ANR	5032061	CompoundStatement		252:0:8309:8503	5032059	0					
ANR	5032062	IdentifierDeclStatement	int i ;	253:4:8315:8320	5032059	0	True				
ANR	5032063	IdentifierDecl	i		5032059	0					
ANR	5032064	IdentifierDeclType	int		5032059	0					
ANR	5032065	Identifier	i		5032059	1					
ANR	5032066	ExpressionStatement	plktblp -> n = num_comps	255:4:8327:8349	5032059	1	True				
ANR	5032067	AssignmentExpression	plktblp -> n = num_comps		5032059	0		=			
ANR	5032068	PtrMemberAccess	plktblp -> n		5032059	0					
ANR	5032069	Identifier	plktblp		5032059	0					
ANR	5032070	Identifier	n		5032059	1					
ANR	5032071	Identifier	num_comps		5032059	1					
ANR	5032072	ExpressionStatement	plktblp -> m = 3	256:4:8355:8369	5032059	2	True				
ANR	5032073	AssignmentExpression	plktblp -> m = 3		5032059	0		=			
ANR	5032074	PtrMemberAccess	plktblp -> m		5032059	0					
ANR	5032075	Identifier	plktblp		5032059	0					
ANR	5032076	Identifier	m		5032059	1					
ANR	5032077	PrimaryExpression	3		5032059	1					
ANR	5032078	ForStatement	for ( i = 0 ; i < countof ( plktblp -> dims ) ; i ++ )		5032059	3					
ANR	5032079	ForInit	i = 0 ;	257:9:8409:8414	5032059	0	True				
ANR	5032080	AssignmentExpression	i = 0		5032059	0		=			
ANR	5032081	Identifier	i		5032059	0					
ANR	5032082	PrimaryExpression	0		5032059	1					
ANR	5032083	Condition	i < countof ( plktblp -> dims )	257:16:8416:8441	5032059	1	True				
ANR	5032084	RelationalExpression	i < countof ( plktblp -> dims )		5032059	0		<			
ANR	5032085	Identifier	i		5032059	0					
ANR	5032086	CallExpression	countof ( plktblp -> dims )		5032059	1					
ANR	5032087	Callee	countof		5032059	0					
ANR	5032088	Identifier	countof		5032059	0					
ANR	5032089	ArgumentList	plktblp -> dims		5032059	1					
ANR	5032090	Argument	plktblp -> dims		5032059	0					
ANR	5032091	PtrMemberAccess	plktblp -> dims		5032059	0					
ANR	5032092	Identifier	plktblp		5032059	0					
ANR	5032093	Identifier	dims		5032059	1					
ANR	5032094	PostIncDecOperationExpression	i ++	257:44:8444:8446	5032059	2	True				
ANR	5032095	Identifier	i		5032059	0					
ANR	5032096	IncDec	++		5032059	1					
ANR	5032097	ExpressionStatement	plktblp -> dims [ i ] = 0	258:8:8457:8477	5032059	3	True				
ANR	5032098	AssignmentExpression	plktblp -> dims [ i ] = 0		5032059	0		=			
ANR	5032099	ArrayIndexing	plktblp -> dims [ i ]		5032059	0					
ANR	5032100	PtrMemberAccess	plktblp -> dims		5032059	0					
ANR	5032101	Identifier	plktblp		5032059	0					
ANR	5032102	Identifier	dims		5032059	1					
ANR	5032103	Identifier	i		5032059	1					
ANR	5032104	PrimaryExpression	0		5032059	1					
ANR	5032105	ExpressionStatement	plktblp -> table = 0	259:4:8483:8501	5032059	4	True				
ANR	5032106	AssignmentExpression	plktblp -> table = 0		5032059	0		=			
ANR	5032107	PtrMemberAccess	plktblp -> table		5032059	0					
ANR	5032108	Identifier	plktblp		5032059	0					
ANR	5032109	Identifier	table		5032059	1					
ANR	5032110	PrimaryExpression	0		5032059	1					
ANR	5032111	ReturnType	static void		5032059	1					
ANR	5032112	Identifier	set_ctbl_defaults		5032059	2					
ANR	5032113	ParameterList	"gx_color_lookup_table * plktblp , int num_comps"		5032059	3					
ANR	5032114	Parameter	gx_color_lookup_table * plktblp	251:18:8261:8291	5032059	0	True				
ANR	5032115	ParameterType	gx_color_lookup_table *		5032059	0					
ANR	5032116	Identifier	plktblp		5032059	1					
ANR	5032117	Parameter	int num_comps	251:51:8294:8306	5032059	1	True				
ANR	5032118	ParameterType	int		5032059	0					
ANR	5032119	Identifier	num_comps		5032059	1					
ANR	5032120	CFGEntryNode	ENTRY		5032059		True				
ANR	5032121	CFGExitNode	EXIT		5032059		True				
ANR	5032122	Symbol	countof		5032059						
ANR	5032123	Symbol	* i		5032059						
ANR	5032124	Symbol	* plktblp		5032059						
ANR	5032125	Symbol	* plktblp -> dims		5032059						
ANR	5032126	Symbol	num_comps		5032059						
ANR	5032127	Symbol	* * plktblp		5032059						
ANR	5032128	Symbol	i		5032059						
ANR	5032129	Symbol	plktblp -> dims		5032059						
ANR	5032130	Symbol	plktblp -> table		5032059						
ANR	5032131	Symbol	plktblp -> n		5032059						
ANR	5032132	Symbol	plktblp		5032059						
ANR	5032133	Symbol	plktblp -> m		5032059						
ANR	5032134	Function	gx_build_cie_space	268:0:8677:9345							
ANR	5032135	FunctionDef	"gx_build_cie_space (gs_color_space * * ppcspace , const gs_color_space_type * pcstype , gs_memory_type_ptr_t stype , gs_memory_t * pmem)"		5032134	0					
ANR	5032136	CompoundStatement		272:0:8848:9345	5032134	0					
ANR	5032137	IdentifierDeclStatement	"gs_color_space * pcspace = gs_cspace_alloc ( pmem , pcstype ) ;"	273:4:8854:8910	5032134	0	True				
ANR	5032138	IdentifierDecl	"* pcspace = gs_cspace_alloc ( pmem , pcstype )"		5032134	0					
ANR	5032139	IdentifierDeclType	gs_color_space *		5032134	0					
ANR	5032140	Identifier	pcspace		5032134	1					
ANR	5032141	AssignmentExpression	"* pcspace = gs_cspace_alloc ( pmem , pcstype )"		5032134	2		=			
ANR	5032142	Identifier	pcspace		5032134	0					
ANR	5032143	CallExpression	"gs_cspace_alloc ( pmem , pcstype )"		5032134	1					
ANR	5032144	Callee	gs_cspace_alloc		5032134	0					
ANR	5032145	Identifier	gs_cspace_alloc		5032134	0					
ANR	5032146	ArgumentList	pmem		5032134	1					
ANR	5032147	Argument	pmem		5032134	0					
ANR	5032148	Identifier	pmem		5032134	0					
ANR	5032149	Argument	pcstype		5032134	1					
ANR	5032150	Identifier	pcstype		5032134	0					
ANR	5032151	IdentifierDeclStatement	gs_cie_common_elements_t * pdata ;	274:4:8916:8947	5032134	1	True				
ANR	5032152	IdentifierDecl	* pdata		5032134	0					
ANR	5032153	IdentifierDeclType	gs_cie_common_elements_t *		5032134	0					
ANR	5032154	Identifier	pdata		5032134	1					
ANR	5032155	IfStatement	if ( pcspace == NULL )		5032134	2					
ANR	5032156	Condition	pcspace == NULL	276:8:8958:8972	5032134	0	True				
ANR	5032157	EqualityExpression	pcspace == NULL		5032134	0		==			
ANR	5032158	Identifier	pcspace		5032134	0					
ANR	5032159	Identifier	NULL		5032134	1					
ANR	5032160	ReturnStatement	return NULL ;	277:8:8983:8994	5032134	1	True				
ANR	5032161	Identifier	NULL		5032134	0					
ANR	5032162	Statement	rc_alloc_struct_1	278:4:9000:9016	5032134	3	True				
ANR	5032163	Statement	(	278:21:9017:9017	5032134	4	True				
ANR	5032164	Statement	pdata	278:22:9018:9022	5032134	5	True				
ANR	5032165	Statement	","	278:27:9023:9023	5032134	6	True				
ANR	5032166	Statement	gs_cie_common_elements_t	278:29:9025:9048	5032134	7	True				
ANR	5032167	Statement	","	278:53:9049:9049	5032134	8	True				
ANR	5032168	Statement	stype	278:55:9051:9055	5032134	9	True				
ANR	5032169	Statement	","	278:60:9056:9056	5032134	10	True				
ANR	5032170	Statement	pmem	278:62:9058:9061	5032134	11	True				
ANR	5032171	Statement	","	278:66:9062:9062	5032134	12	True				
ANR	5032172	CompoundStatement		8:22:237:237	5032134	13					
ANR	5032173	ExpressionStatement	"gs_free_object ( pmem , pcspace , ""gx_build_cie_space"" )"	280:22:9110:9161	5032134	0	True				
ANR	5032174	CallExpression	"gs_free_object ( pmem , pcspace , ""gx_build_cie_space"" )"		5032134	0					
ANR	5032175	Callee	gs_free_object		5032134	0					
ANR	5032176	Identifier	gs_free_object		5032134	0					
ANR	5032177	ArgumentList	pmem		5032134	1					
ANR	5032178	Argument	pmem		5032134	0					
ANR	5032179	Identifier	pmem		5032134	0					
ANR	5032180	Argument	pcspace		5032134	1					
ANR	5032181	Identifier	pcspace		5032134	0					
ANR	5032182	Argument	"""gx_build_cie_space"""		5032134	2					
ANR	5032183	PrimaryExpression	"""gx_build_cie_space"""		5032134	0					
ANR	5032184	ReturnStatement	return 0 ;	281:22:9185:9193	5032134	1	True				
ANR	5032185	PrimaryExpression	0		5032134	0					
ANR	5032186	Statement	","	283:22:9241:9241	5032134	14	True				
ANR	5032187	Statement	"""gx_build_cie_space(data)"""	284:22:9265:9290	5032134	15	True				
ANR	5032188	Statement	)	284:48:9291:9291	5032134	16	True				
ANR	5032189	ExpressionStatement		284:49:9292:9292	5032134	17	True				
ANR	5032190	ExpressionStatement	* ppcspace = pcspace	285:4:9298:9317	5032134	18	True				
ANR	5032191	AssignmentExpression	* ppcspace = pcspace		5032134	0		=			
ANR	5032192	UnaryOperationExpression	* ppcspace		5032134	0					
ANR	5032193	UnaryOperator	*		5032134	0					
ANR	5032194	Identifier	ppcspace		5032134	1					
ANR	5032195	Identifier	pcspace		5032134	1					
ANR	5032196	ReturnStatement	return ( void * ) pdata ;	286:4:9323:9343	5032134	19	True				
ANR	5032197	CastExpression	( void * ) pdata		5032134	0					
ANR	5032198	CastTarget	void *		5032134	0					
ANR	5032199	Identifier	pdata		5032134	1					
ANR	5032200	ReturnType	void *		5032134	1					
ANR	5032201	Identifier	gx_build_cie_space		5032134	2					
ANR	5032202	ParameterList	"gs_color_space * * ppcspace , const gs_color_space_type * pcstype , gs_memory_type_ptr_t stype , gs_memory_t * pmem"		5032134	3					
ANR	5032203	Parameter	gs_color_space * * ppcspace	269:19:8703:8728	5032134	0	True				
ANR	5032204	ParameterType	gs_color_space * *		5032134	0					
ANR	5032205	Identifier	ppcspace		5032134	1					
ANR	5032206	Parameter	const gs_color_space_type * pcstype	270:16:8747:8781	5032134	1	True				
ANR	5032207	ParameterType	const gs_color_space_type *		5032134	0					
ANR	5032208	Identifier	pcstype		5032134	1					
ANR	5032209	Parameter	gs_memory_type_ptr_t stype	271:16:8800:8825	5032134	2	True				
ANR	5032210	ParameterType	gs_memory_type_ptr_t		5032134	0					
ANR	5032211	Identifier	stype		5032134	1					
ANR	5032212	Parameter	gs_memory_t * pmem	271:44:8828:8845	5032134	3	True				
ANR	5032213	ParameterType	gs_memory_t *		5032134	0					
ANR	5032214	Identifier	pmem		5032134	1					
ANR	5032215	CFGEntryNode	ENTRY		5032134		True				
ANR	5032216	CFGExitNode	EXIT		5032134		True				
ANR	5032217	Symbol	pmem		5032134						
ANR	5032218	Symbol	pcspace		5032134						
ANR	5032219	Symbol	pdata		5032134						
ANR	5032220	Symbol	NULL		5032134						
ANR	5032221	Symbol	ppcspace		5032134						
ANR	5032222	Symbol	stype		5032134						
ANR	5032223	Symbol	* ppcspace		5032134						
ANR	5032224	Symbol	gs_cspace_alloc		5032134						
ANR	5032225	Symbol	pcstype		5032134						
ANR	5032226	Function	gs_cspace_build_CIEA	291:0:9382:9934							
ANR	5032227	FunctionDef	"gs_cspace_build_CIEA (gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem)"		5032226	0					
ANR	5032228	CompoundStatement		294:0:9495:9934	5032226	0					
ANR	5032229	IdentifierDeclStatement	"gs_cie_a * pciea = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEA , & st_cie_a , pmem ) ;"	295:4:9501:9595	5032226	0	True				
ANR	5032230	IdentifierDecl	"* pciea = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEA , & st_cie_a , pmem )"		5032226	0					
ANR	5032231	IdentifierDeclType	gs_cie_a *		5032226	0					
ANR	5032232	Identifier	pciea		5032226	1					
ANR	5032233	AssignmentExpression	"* pciea = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEA , & st_cie_a , pmem )"		5032226	2		=			
ANR	5032234	Identifier	pciea		5032226	0					
ANR	5032235	CallExpression	"gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEA , & st_cie_a , pmem )"		5032226	1					
ANR	5032236	Callee	gx_build_cie_space		5032226	0					
ANR	5032237	Identifier	gx_build_cie_space		5032226	0					
ANR	5032238	ArgumentList	ppcspace		5032226	1					
ANR	5032239	Argument	ppcspace		5032226	0					
ANR	5032240	Identifier	ppcspace		5032226	0					
ANR	5032241	Argument	& gs_color_space_type_CIEA		5032226	1					
ANR	5032242	UnaryOperationExpression	& gs_color_space_type_CIEA		5032226	0					
ANR	5032243	UnaryOperator	&		5032226	0					
ANR	5032244	Identifier	gs_color_space_type_CIEA		5032226	1					
ANR	5032245	Argument	& st_cie_a		5032226	2					
ANR	5032246	UnaryOperationExpression	& st_cie_a		5032226	0					
ANR	5032247	UnaryOperator	&		5032226	0					
ANR	5032248	Identifier	st_cie_a		5032226	1					
ANR	5032249	Argument	pmem		5032226	3					
ANR	5032250	Identifier	pmem		5032226	0					
ANR	5032251	IfStatement	if ( pciea == 0 )		5032226	1					
ANR	5032252	Condition	pciea == 0	298:8:9606:9615	5032226	0	True				
ANR	5032253	EqualityExpression	pciea == 0		5032226	0		==			
ANR	5032254	Identifier	pciea		5032226	0					
ANR	5032255	PrimaryExpression	0		5032226	1					
ANR	5032256	ExpressionStatement	return_error ( gs_error_VMerror )	299:8:9626:9656	5032226	1	True				
ANR	5032257	CallExpression	return_error ( gs_error_VMerror )		5032226	0					
ANR	5032258	Callee	return_error		5032226	0					
ANR	5032259	Identifier	return_error		5032226	0					
ANR	5032260	ArgumentList	gs_error_VMerror		5032226	1					
ANR	5032261	Argument	gs_error_VMerror		5032226	0					
ANR	5032262	Identifier	gs_error_VMerror		5032226	0					
ANR	5032263	ExpressionStatement	"gx_set_common_cie_defaults ( & pciea -> common , client_data )"	301:4:9663:9718	5032226	2	True				
ANR	5032264	CallExpression	"gx_set_common_cie_defaults ( & pciea -> common , client_data )"		5032226	0					
ANR	5032265	Callee	gx_set_common_cie_defaults		5032226	0					
ANR	5032266	Identifier	gx_set_common_cie_defaults		5032226	0					
ANR	5032267	ArgumentList	& pciea -> common		5032226	1					
ANR	5032268	Argument	& pciea -> common		5032226	0					
ANR	5032269	UnaryOperationExpression	& pciea -> common		5032226	0					
ANR	5032270	UnaryOperator	&		5032226	0					
ANR	5032271	PtrMemberAccess	pciea -> common		5032226	1					
ANR	5032272	Identifier	pciea		5032226	0					
ANR	5032273	Identifier	common		5032226	1					
ANR	5032274	Argument	client_data		5032226	1					
ANR	5032275	Identifier	client_data		5032226	0					
ANR	5032276	ExpressionStatement	pciea -> common . install_cspace = gx_install_CIEA	302:4:9724:9770	5032226	3	True				
ANR	5032277	AssignmentExpression	pciea -> common . install_cspace = gx_install_CIEA		5032226	0		=			
ANR	5032278	MemberAccess	pciea -> common . install_cspace		5032226	0					
ANR	5032279	PtrMemberAccess	pciea -> common		5032226	0					
ANR	5032280	Identifier	pciea		5032226	0					
ANR	5032281	Identifier	common		5032226	1					
ANR	5032282	Identifier	install_cspace		5032226	1					
ANR	5032283	Identifier	gx_install_CIEA		5032226	1					
ANR	5032284	ExpressionStatement	pciea -> RangeA = RangeA_default	303:4:9776:9806	5032226	4	True				
ANR	5032285	AssignmentExpression	pciea -> RangeA = RangeA_default		5032226	0		=			
ANR	5032286	PtrMemberAccess	pciea -> RangeA		5032226	0					
ANR	5032287	Identifier	pciea		5032226	0					
ANR	5032288	Identifier	RangeA		5032226	1					
ANR	5032289	Identifier	RangeA_default		5032226	1					
ANR	5032290	ExpressionStatement	pciea -> DecodeA = DecodeA_default	304:4:9812:9844	5032226	5	True				
ANR	5032291	AssignmentExpression	pciea -> DecodeA = DecodeA_default		5032226	0		=			
ANR	5032292	PtrMemberAccess	pciea -> DecodeA		5032226	0					
ANR	5032293	Identifier	pciea		5032226	0					
ANR	5032294	Identifier	DecodeA		5032226	1					
ANR	5032295	Identifier	DecodeA_default		5032226	1					
ANR	5032296	ExpressionStatement	pciea -> MatrixA = MatrixA_default	305:4:9850:9882	5032226	6	True				
ANR	5032297	AssignmentExpression	pciea -> MatrixA = MatrixA_default		5032226	0		=			
ANR	5032298	PtrMemberAccess	pciea -> MatrixA		5032226	0					
ANR	5032299	Identifier	pciea		5032226	0					
ANR	5032300	Identifier	MatrixA		5032226	1					
ANR	5032301	Identifier	MatrixA_default		5032226	1					
ANR	5032302	ExpressionStatement	( * ppcspace ) -> params . a = pciea	307:4:9889:9918	5032226	7	True				
ANR	5032303	AssignmentExpression	( * ppcspace ) -> params . a = pciea		5032226	0		=			
ANR	5032304	MemberAccess	( * ppcspace ) -> params . a		5032226	0					
ANR	5032305	PtrMemberAccess	( * ppcspace ) -> params		5032226	0					
ANR	5032306	UnaryOperationExpression	* ppcspace		5032226	0					
ANR	5032307	UnaryOperator	*		5032226	0					
ANR	5032308	Identifier	ppcspace		5032226	1					
ANR	5032309	Identifier	params		5032226	1					
ANR	5032310	Identifier	a		5032226	1					
ANR	5032311	Identifier	pciea		5032226	1					
ANR	5032312	ReturnStatement	return 0 ;	308:4:9924:9932	5032226	8	True				
ANR	5032313	PrimaryExpression	0		5032226	0					
ANR	5032314	ReturnType	int		5032226	1					
ANR	5032315	Identifier	gs_cspace_build_CIEA		5032226	2					
ANR	5032316	ParameterList	"gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem"		5032226	3					
ANR	5032317	Parameter	gs_color_space * * ppcspace	292:21:9407:9432	5032226	0	True				
ANR	5032318	ParameterType	gs_color_space * *		5032226	0					
ANR	5032319	Identifier	ppcspace		5032226	1					
ANR	5032320	Parameter	void * client_data	292:49:9435:9451	5032226	1	True				
ANR	5032321	ParameterType	void *		5032226	0					
ANR	5032322	Identifier	client_data		5032226	1					
ANR	5032323	Parameter	gs_memory_t * pmem	293:21:9475:9492	5032226	2	True				
ANR	5032324	ParameterType	gs_memory_t *		5032226	0					
ANR	5032325	Identifier	pmem		5032226	1					
ANR	5032326	CFGEntryNode	ENTRY		5032226		True				
ANR	5032327	CFGExitNode	EXIT		5032226		True				
ANR	5032328	Symbol	client_data		5032226						
ANR	5032329	Symbol	RangeA_default		5032226						
ANR	5032330	Symbol	MatrixA_default		5032226						
ANR	5032331	Symbol	& gs_color_space_type_CIEA		5032226						
ANR	5032332	Symbol	* * ppcspace		5032226						
ANR	5032333	Symbol	& pciea -> common		5032226						
ANR	5032334	Symbol	gx_build_cie_space		5032226						
ANR	5032335	Symbol	* pciea		5032226						
ANR	5032336	Symbol	pciea -> MatrixA		5032226						
ANR	5032337	Symbol	pciea -> common		5032226						
ANR	5032338	Symbol	* ppcspace		5032226						
ANR	5032339	Symbol	pciea		5032226						
ANR	5032340	Symbol	gx_install_CIEA		5032226						
ANR	5032341	Symbol	( * ppcspace ) -> params		5032226						
ANR	5032342	Symbol	pmem		5032226						
ANR	5032343	Symbol	gs_error_VMerror		5032226						
ANR	5032344	Symbol	& st_cie_a		5032226						
ANR	5032345	Symbol	( * ppcspace ) -> params . a		5032226						
ANR	5032346	Symbol	ppcspace		5032226						
ANR	5032347	Symbol	pciea -> DecodeA		5032226						
ANR	5032348	Symbol	pciea -> common . install_cspace		5032226						
ANR	5032349	Symbol	pciea -> RangeA		5032226						
ANR	5032350	Symbol	DecodeA_default		5032226						
ANR	5032351	Function	gs_cspace_build_CIEABC	311:0:9937:10394							
ANR	5032352	FunctionDef	"gs_cspace_build_CIEABC (gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem)"		5032351	0					
ANR	5032353	CompoundStatement		314:0:10054:10394	5032351	0					
ANR	5032354	IdentifierDeclStatement	"gs_cie_abc * pabc = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEABC , & st_cie_abc , pmem ) ;"	315:4:10060:10182	5032351	0	True				
ANR	5032355	IdentifierDecl	"* pabc = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEABC , & st_cie_abc , pmem )"		5032351	0					
ANR	5032356	IdentifierDeclType	gs_cie_abc *		5032351	0					
ANR	5032357	Identifier	pabc		5032351	1					
ANR	5032358	AssignmentExpression	"* pabc = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEABC , & st_cie_abc , pmem )"		5032351	2		=			
ANR	5032359	Identifier	pabc		5032351	0					
ANR	5032360	CallExpression	"gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEABC , & st_cie_abc , pmem )"		5032351	1					
ANR	5032361	Callee	gx_build_cie_space		5032351	0					
ANR	5032362	Identifier	gx_build_cie_space		5032351	0					
ANR	5032363	ArgumentList	ppcspace		5032351	1					
ANR	5032364	Argument	ppcspace		5032351	0					
ANR	5032365	Identifier	ppcspace		5032351	0					
ANR	5032366	Argument	& gs_color_space_type_CIEABC		5032351	1					
ANR	5032367	UnaryOperationExpression	& gs_color_space_type_CIEABC		5032351	0					
ANR	5032368	UnaryOperator	&		5032351	0					
ANR	5032369	Identifier	gs_color_space_type_CIEABC		5032351	1					
ANR	5032370	Argument	& st_cie_abc		5032351	2					
ANR	5032371	UnaryOperationExpression	& st_cie_abc		5032351	0					
ANR	5032372	UnaryOperator	&		5032351	0					
ANR	5032373	Identifier	st_cie_abc		5032351	1					
ANR	5032374	Argument	pmem		5032351	3					
ANR	5032375	Identifier	pmem		5032351	0					
ANR	5032376	IfStatement	if ( pabc == 0 )		5032351	1					
ANR	5032377	Condition	pabc == 0	319:8:10193:10201	5032351	0	True				
ANR	5032378	EqualityExpression	pabc == 0		5032351	0		==			
ANR	5032379	Identifier	pabc		5032351	0					
ANR	5032380	PrimaryExpression	0		5032351	1					
ANR	5032381	ExpressionStatement	return_error ( gs_error_VMerror )	320:8:10212:10242	5032351	1	True				
ANR	5032382	CallExpression	return_error ( gs_error_VMerror )		5032351	0					
ANR	5032383	Callee	return_error		5032351	0					
ANR	5032384	Identifier	return_error		5032351	0					
ANR	5032385	ArgumentList	gs_error_VMerror		5032351	1					
ANR	5032386	Argument	gs_error_VMerror		5032351	0					
ANR	5032387	Identifier	gs_error_VMerror		5032351	0					
ANR	5032388	ExpressionStatement	"set_cie_abc_defaults ( pabc , client_data )"	322:4:10249:10288	5032351	2	True				
ANR	5032389	CallExpression	"set_cie_abc_defaults ( pabc , client_data )"		5032351	0					
ANR	5032390	Callee	set_cie_abc_defaults		5032351	0					
ANR	5032391	Identifier	set_cie_abc_defaults		5032351	0					
ANR	5032392	ArgumentList	pabc		5032351	1					
ANR	5032393	Argument	pabc		5032351	0					
ANR	5032394	Identifier	pabc		5032351	0					
ANR	5032395	Argument	client_data		5032351	1					
ANR	5032396	Identifier	client_data		5032351	0					
ANR	5032397	ExpressionStatement	pabc -> common . install_cspace = gx_install_CIEABC	323:4:10294:10341	5032351	3	True				
ANR	5032398	AssignmentExpression	pabc -> common . install_cspace = gx_install_CIEABC		5032351	0		=			
ANR	5032399	MemberAccess	pabc -> common . install_cspace		5032351	0					
ANR	5032400	PtrMemberAccess	pabc -> common		5032351	0					
ANR	5032401	Identifier	pabc		5032351	0					
ANR	5032402	Identifier	common		5032351	1					
ANR	5032403	Identifier	install_cspace		5032351	1					
ANR	5032404	Identifier	gx_install_CIEABC		5032351	1					
ANR	5032405	ExpressionStatement	( * ppcspace ) -> params . abc = pabc	325:4:10348:10378	5032351	4	True				
ANR	5032406	AssignmentExpression	( * ppcspace ) -> params . abc = pabc		5032351	0		=			
ANR	5032407	MemberAccess	( * ppcspace ) -> params . abc		5032351	0					
ANR	5032408	PtrMemberAccess	( * ppcspace ) -> params		5032351	0					
ANR	5032409	UnaryOperationExpression	* ppcspace		5032351	0					
ANR	5032410	UnaryOperator	*		5032351	0					
ANR	5032411	Identifier	ppcspace		5032351	1					
ANR	5032412	Identifier	params		5032351	1					
ANR	5032413	Identifier	abc		5032351	1					
ANR	5032414	Identifier	pabc		5032351	1					
ANR	5032415	ReturnStatement	return 0 ;	326:4:10384:10392	5032351	5	True				
ANR	5032416	PrimaryExpression	0		5032351	0					
ANR	5032417	ReturnType	int		5032351	1					
ANR	5032418	Identifier	gs_cspace_build_CIEABC		5032351	2					
ANR	5032419	ParameterList	"gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem"		5032351	3					
ANR	5032420	Parameter	gs_color_space * * ppcspace	312:23:9964:9989	5032351	0	True				
ANR	5032421	ParameterType	gs_color_space * *		5032351	0					
ANR	5032422	Identifier	ppcspace		5032351	1					
ANR	5032423	Parameter	void * client_data	312:51:9992:10008	5032351	1	True				
ANR	5032424	ParameterType	void *		5032351	0					
ANR	5032425	Identifier	client_data		5032351	1					
ANR	5032426	Parameter	gs_memory_t * pmem	313:23:10034:10051	5032351	2	True				
ANR	5032427	ParameterType	gs_memory_t *		5032351	0					
ANR	5032428	Identifier	pmem		5032351	1					
ANR	5032429	CFGEntryNode	ENTRY		5032351		True				
ANR	5032430	CFGExitNode	EXIT		5032351		True				
ANR	5032431	Symbol	client_data		5032351						
ANR	5032432	Symbol	* * ppcspace		5032351						
ANR	5032433	Symbol	gx_build_cie_space		5032351						
ANR	5032434	Symbol	( * ppcspace ) -> params . abc		5032351						
ANR	5032435	Symbol	pabc		5032351						
ANR	5032436	Symbol	gx_install_CIEABC		5032351						
ANR	5032437	Symbol	& st_cie_abc		5032351						
ANR	5032438	Symbol	pabc -> common		5032351						
ANR	5032439	Symbol	* ppcspace		5032351						
ANR	5032440	Symbol	* pabc		5032351						
ANR	5032441	Symbol	( * ppcspace ) -> params		5032351						
ANR	5032442	Symbol	pmem		5032351						
ANR	5032443	Symbol	gs_error_VMerror		5032351						
ANR	5032444	Symbol	& gs_color_space_type_CIEABC		5032351						
ANR	5032445	Symbol	ppcspace		5032351						
ANR	5032446	Symbol	pabc -> common . install_cspace		5032351						
ANR	5032447	Function	gs_cspace_build_CIEDEF	329:0:10397:11024							
ANR	5032448	FunctionDef	"gs_cspace_build_CIEDEF (gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem)"		5032447	0					
ANR	5032449	CompoundStatement		332:0:10514:11024	5032447	0					
ANR	5032450	IdentifierDeclStatement	"gs_cie_def * pdef = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEF , & st_cie_def , pmem ) ;"	333:4:10520:10642	5032447	0	True				
ANR	5032451	IdentifierDecl	"* pdef = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEF , & st_cie_def , pmem )"		5032447	0					
ANR	5032452	IdentifierDeclType	gs_cie_def *		5032447	0					
ANR	5032453	Identifier	pdef		5032447	1					
ANR	5032454	AssignmentExpression	"* pdef = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEF , & st_cie_def , pmem )"		5032447	2		=			
ANR	5032455	Identifier	pdef		5032447	0					
ANR	5032456	CallExpression	"gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEF , & st_cie_def , pmem )"		5032447	1					
ANR	5032457	Callee	gx_build_cie_space		5032447	0					
ANR	5032458	Identifier	gx_build_cie_space		5032447	0					
ANR	5032459	ArgumentList	ppcspace		5032447	1					
ANR	5032460	Argument	ppcspace		5032447	0					
ANR	5032461	Identifier	ppcspace		5032447	0					
ANR	5032462	Argument	& gs_color_space_type_CIEDEF		5032447	1					
ANR	5032463	UnaryOperationExpression	& gs_color_space_type_CIEDEF		5032447	0					
ANR	5032464	UnaryOperator	&		5032447	0					
ANR	5032465	Identifier	gs_color_space_type_CIEDEF		5032447	1					
ANR	5032466	Argument	& st_cie_def		5032447	2					
ANR	5032467	UnaryOperationExpression	& st_cie_def		5032447	0					
ANR	5032468	UnaryOperator	&		5032447	0					
ANR	5032469	Identifier	st_cie_def		5032447	1					
ANR	5032470	Argument	pmem		5032447	3					
ANR	5032471	Identifier	pmem		5032447	0					
ANR	5032472	IfStatement	if ( pdef == 0 )		5032447	1					
ANR	5032473	Condition	pdef == 0	337:8:10653:10661	5032447	0	True				
ANR	5032474	EqualityExpression	pdef == 0		5032447	0		==			
ANR	5032475	Identifier	pdef		5032447	0					
ANR	5032476	PrimaryExpression	0		5032447	1					
ANR	5032477	ExpressionStatement	return_error ( gs_error_VMerror )	338:8:10672:10702	5032447	1	True				
ANR	5032478	CallExpression	return_error ( gs_error_VMerror )		5032447	0					
ANR	5032479	Callee	return_error		5032447	0					
ANR	5032480	Identifier	return_error		5032447	0					
ANR	5032481	ArgumentList	gs_error_VMerror		5032447	1					
ANR	5032482	Argument	gs_error_VMerror		5032447	0					
ANR	5032483	Identifier	gs_error_VMerror		5032447	0					
ANR	5032484	ExpressionStatement	"set_cie_abc_defaults ( ( gs_cie_abc * ) pdef , client_data )"	340:4:10709:10763	5032447	2	True				
ANR	5032485	CallExpression	"set_cie_abc_defaults ( ( gs_cie_abc * ) pdef , client_data )"		5032447	0					
ANR	5032486	Callee	set_cie_abc_defaults		5032447	0					
ANR	5032487	Identifier	set_cie_abc_defaults		5032447	0					
ANR	5032488	ArgumentList	( gs_cie_abc * ) pdef		5032447	1					
ANR	5032489	Argument	( gs_cie_abc * ) pdef		5032447	0					
ANR	5032490	CastExpression	( gs_cie_abc * ) pdef		5032447	0					
ANR	5032491	CastTarget	gs_cie_abc *		5032447	0					
ANR	5032492	Identifier	pdef		5032447	1					
ANR	5032493	Argument	client_data		5032447	1					
ANR	5032494	Identifier	client_data		5032447	0					
ANR	5032495	ExpressionStatement	pdef -> common . install_cspace = gx_install_CIEDEF	341:4:10769:10816	5032447	3	True				
ANR	5032496	AssignmentExpression	pdef -> common . install_cspace = gx_install_CIEDEF		5032447	0		=			
ANR	5032497	MemberAccess	pdef -> common . install_cspace		5032447	0					
ANR	5032498	PtrMemberAccess	pdef -> common		5032447	0					
ANR	5032499	Identifier	pdef		5032447	0					
ANR	5032500	Identifier	common		5032447	1					
ANR	5032501	Identifier	install_cspace		5032447	1					
ANR	5032502	Identifier	gx_install_CIEDEF		5032447	1					
ANR	5032503	ExpressionStatement	pdef -> RangeDEF = Range3_default	342:4:10822:10853	5032447	4	True				
ANR	5032504	AssignmentExpression	pdef -> RangeDEF = Range3_default		5032447	0		=			
ANR	5032505	PtrMemberAccess	pdef -> RangeDEF		5032447	0					
ANR	5032506	Identifier	pdef		5032447	0					
ANR	5032507	Identifier	RangeDEF		5032447	1					
ANR	5032508	Identifier	Range3_default		5032447	1					
ANR	5032509	ExpressionStatement	pdef -> DecodeDEF = DecodeDEF_default	343:4:10859:10894	5032447	5	True				
ANR	5032510	AssignmentExpression	pdef -> DecodeDEF = DecodeDEF_default		5032447	0		=			
ANR	5032511	PtrMemberAccess	pdef -> DecodeDEF		5032447	0					
ANR	5032512	Identifier	pdef		5032447	0					
ANR	5032513	Identifier	DecodeDEF		5032447	1					
ANR	5032514	Identifier	DecodeDEF_default		5032447	1					
ANR	5032515	ExpressionStatement	pdef -> RangeHIJ = Range3_default	344:4:10900:10931	5032447	6	True				
ANR	5032516	AssignmentExpression	pdef -> RangeHIJ = Range3_default		5032447	0		=			
ANR	5032517	PtrMemberAccess	pdef -> RangeHIJ		5032447	0					
ANR	5032518	Identifier	pdef		5032447	0					
ANR	5032519	Identifier	RangeHIJ		5032447	1					
ANR	5032520	Identifier	Range3_default		5032447	1					
ANR	5032521	ExpressionStatement	"set_ctbl_defaults ( & pdef -> Table , 3 )"	345:4:10937:10971	5032447	7	True				
ANR	5032522	CallExpression	"set_ctbl_defaults ( & pdef -> Table , 3 )"		5032447	0					
ANR	5032523	Callee	set_ctbl_defaults		5032447	0					
ANR	5032524	Identifier	set_ctbl_defaults		5032447	0					
ANR	5032525	ArgumentList	& pdef -> Table		5032447	1					
ANR	5032526	Argument	& pdef -> Table		5032447	0					
ANR	5032527	UnaryOperationExpression	& pdef -> Table		5032447	0					
ANR	5032528	UnaryOperator	&		5032447	0					
ANR	5032529	PtrMemberAccess	pdef -> Table		5032447	1					
ANR	5032530	Identifier	pdef		5032447	0					
ANR	5032531	Identifier	Table		5032447	1					
ANR	5032532	Argument	3		5032447	1					
ANR	5032533	PrimaryExpression	3		5032447	0					
ANR	5032534	ExpressionStatement	( * ppcspace ) -> params . def = pdef	347:4:10978:11008	5032447	8	True				
ANR	5032535	AssignmentExpression	( * ppcspace ) -> params . def = pdef		5032447	0		=			
ANR	5032536	MemberAccess	( * ppcspace ) -> params . def		5032447	0					
ANR	5032537	PtrMemberAccess	( * ppcspace ) -> params		5032447	0					
ANR	5032538	UnaryOperationExpression	* ppcspace		5032447	0					
ANR	5032539	UnaryOperator	*		5032447	0					
ANR	5032540	Identifier	ppcspace		5032447	1					
ANR	5032541	Identifier	params		5032447	1					
ANR	5032542	Identifier	def		5032447	1					
ANR	5032543	Identifier	pdef		5032447	1					
ANR	5032544	ReturnStatement	return 0 ;	348:4:11014:11022	5032447	9	True				
ANR	5032545	PrimaryExpression	0		5032447	0					
ANR	5032546	ReturnType	int		5032447	1					
ANR	5032547	Identifier	gs_cspace_build_CIEDEF		5032447	2					
ANR	5032548	ParameterList	"gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem"		5032447	3					
ANR	5032549	Parameter	gs_color_space * * ppcspace	330:23:10424:10449	5032447	0	True				
ANR	5032550	ParameterType	gs_color_space * *		5032447	0					
ANR	5032551	Identifier	ppcspace		5032447	1					
ANR	5032552	Parameter	void * client_data	330:51:10452:10468	5032447	1	True				
ANR	5032553	ParameterType	void *		5032447	0					
ANR	5032554	Identifier	client_data		5032447	1					
ANR	5032555	Parameter	gs_memory_t * pmem	331:23:10494:10511	5032447	2	True				
ANR	5032556	ParameterType	gs_memory_t *		5032447	0					
ANR	5032557	Identifier	pmem		5032447	1					
ANR	5032558	CFGEntryNode	ENTRY		5032447		True				
ANR	5032559	CFGExitNode	EXIT		5032447		True				
ANR	5032560	Symbol	client_data		5032447						
ANR	5032561	Symbol	DecodeDEF_default		5032447						
ANR	5032562	Symbol	pdef		5032447						
ANR	5032563	Symbol	* * ppcspace		5032447						
ANR	5032564	Symbol	gx_build_cie_space		5032447						
ANR	5032565	Symbol	* pdef		5032447						
ANR	5032566	Symbol	* ppcspace		5032447						
ANR	5032567	Symbol	gx_install_CIEDEF		5032447						
ANR	5032568	Symbol	pdef -> common . install_cspace		5032447						
ANR	5032569	Symbol	pdef -> RangeDEF		5032447						
ANR	5032570	Symbol	( * ppcspace ) -> params		5032447						
ANR	5032571	Symbol	Range3_default		5032447						
ANR	5032572	Symbol	pmem		5032447						
ANR	5032573	Symbol	gs_error_VMerror		5032447						
ANR	5032574	Symbol	& gs_color_space_type_CIEDEF		5032447						
ANR	5032575	Symbol	ppcspace		5032447						
ANR	5032576	Symbol	& st_cie_def		5032447						
ANR	5032577	Symbol	pdef -> RangeHIJ		5032447						
ANR	5032578	Symbol	( * ppcspace ) -> params . def		5032447						
ANR	5032579	Symbol	pdef -> DecodeDEF		5032447						
ANR	5032580	Symbol	& pdef -> Table		5032447						
ANR	5032581	Symbol	pdef -> common		5032447						
ANR	5032582	Function	gs_cspace_build_CIEDEFG	351:0:11027:11674							
ANR	5032583	FunctionDef	"gs_cspace_build_CIEDEFG (gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem)"		5032582	0					
ANR	5032584	CompoundStatement		354:0:11146:11674	5032582	0					
ANR	5032585	IdentifierDeclStatement	"gs_cie_defg * pdefg = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEFG , & st_cie_defg , pmem ) ;"	355:4:11152:11278	5032582	0	True				
ANR	5032586	IdentifierDecl	"* pdefg = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEFG , & st_cie_defg , pmem )"		5032582	0					
ANR	5032587	IdentifierDeclType	gs_cie_defg *		5032582	0					
ANR	5032588	Identifier	pdefg		5032582	1					
ANR	5032589	AssignmentExpression	"* pdefg = gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEFG , & st_cie_defg , pmem )"		5032582	2		=			
ANR	5032590	Identifier	pdefg		5032582	0					
ANR	5032591	CallExpression	"gx_build_cie_space ( ppcspace , & gs_color_space_type_CIEDEFG , & st_cie_defg , pmem )"		5032582	1					
ANR	5032592	Callee	gx_build_cie_space		5032582	0					
ANR	5032593	Identifier	gx_build_cie_space		5032582	0					
ANR	5032594	ArgumentList	ppcspace		5032582	1					
ANR	5032595	Argument	ppcspace		5032582	0					
ANR	5032596	Identifier	ppcspace		5032582	0					
ANR	5032597	Argument	& gs_color_space_type_CIEDEFG		5032582	1					
ANR	5032598	UnaryOperationExpression	& gs_color_space_type_CIEDEFG		5032582	0					
ANR	5032599	UnaryOperator	&		5032582	0					
ANR	5032600	Identifier	gs_color_space_type_CIEDEFG		5032582	1					
ANR	5032601	Argument	& st_cie_defg		5032582	2					
ANR	5032602	UnaryOperationExpression	& st_cie_defg		5032582	0					
ANR	5032603	UnaryOperator	&		5032582	0					
ANR	5032604	Identifier	st_cie_defg		5032582	1					
ANR	5032605	Argument	pmem		5032582	3					
ANR	5032606	Identifier	pmem		5032582	0					
ANR	5032607	IfStatement	if ( pdefg == 0 )		5032582	1					
ANR	5032608	Condition	pdefg == 0	359:8:11289:11298	5032582	0	True				
ANR	5032609	EqualityExpression	pdefg == 0		5032582	0		==			
ANR	5032610	Identifier	pdefg		5032582	0					
ANR	5032611	PrimaryExpression	0		5032582	1					
ANR	5032612	ExpressionStatement	return_error ( gs_error_VMerror )	360:8:11309:11339	5032582	1	True				
ANR	5032613	CallExpression	return_error ( gs_error_VMerror )		5032582	0					
ANR	5032614	Callee	return_error		5032582	0					
ANR	5032615	Identifier	return_error		5032582	0					
ANR	5032616	ArgumentList	gs_error_VMerror		5032582	1					
ANR	5032617	Argument	gs_error_VMerror		5032582	0					
ANR	5032618	Identifier	gs_error_VMerror		5032582	0					
ANR	5032619	ExpressionStatement	"set_cie_abc_defaults ( ( gs_cie_abc * ) pdefg , client_data )"	362:4:11346:11401	5032582	2	True				
ANR	5032620	CallExpression	"set_cie_abc_defaults ( ( gs_cie_abc * ) pdefg , client_data )"		5032582	0					
ANR	5032621	Callee	set_cie_abc_defaults		5032582	0					
ANR	5032622	Identifier	set_cie_abc_defaults		5032582	0					
ANR	5032623	ArgumentList	( gs_cie_abc * ) pdefg		5032582	1					
ANR	5032624	Argument	( gs_cie_abc * ) pdefg		5032582	0					
ANR	5032625	CastExpression	( gs_cie_abc * ) pdefg		5032582	0					
ANR	5032626	CastTarget	gs_cie_abc *		5032582	0					
ANR	5032627	Identifier	pdefg		5032582	1					
ANR	5032628	Argument	client_data		5032582	1					
ANR	5032629	Identifier	client_data		5032582	0					
ANR	5032630	ExpressionStatement	pdefg -> common . install_cspace = gx_install_CIEDEFG	363:4:11407:11456	5032582	3	True				
ANR	5032631	AssignmentExpression	pdefg -> common . install_cspace = gx_install_CIEDEFG		5032582	0		=			
ANR	5032632	MemberAccess	pdefg -> common . install_cspace		5032582	0					
ANR	5032633	PtrMemberAccess	pdefg -> common		5032582	0					
ANR	5032634	Identifier	pdefg		5032582	0					
ANR	5032635	Identifier	common		5032582	1					
ANR	5032636	Identifier	install_cspace		5032582	1					
ANR	5032637	Identifier	gx_install_CIEDEFG		5032582	1					
ANR	5032638	ExpressionStatement	pdefg -> RangeDEFG = Range4_default	364:4:11462:11495	5032582	4	True				
ANR	5032639	AssignmentExpression	pdefg -> RangeDEFG = Range4_default		5032582	0		=			
ANR	5032640	PtrMemberAccess	pdefg -> RangeDEFG		5032582	0					
ANR	5032641	Identifier	pdefg		5032582	0					
ANR	5032642	Identifier	RangeDEFG		5032582	1					
ANR	5032643	Identifier	Range4_default		5032582	1					
ANR	5032644	ExpressionStatement	pdefg -> DecodeDEFG = DecodeDEFG_default	365:4:11501:11539	5032582	5	True				
ANR	5032645	AssignmentExpression	pdefg -> DecodeDEFG = DecodeDEFG_default		5032582	0		=			
ANR	5032646	PtrMemberAccess	pdefg -> DecodeDEFG		5032582	0					
ANR	5032647	Identifier	pdefg		5032582	0					
ANR	5032648	Identifier	DecodeDEFG		5032582	1					
ANR	5032649	Identifier	DecodeDEFG_default		5032582	1					
ANR	5032650	ExpressionStatement	pdefg -> RangeHIJK = Range4_default	366:4:11545:11578	5032582	6	True				
ANR	5032651	AssignmentExpression	pdefg -> RangeHIJK = Range4_default		5032582	0		=			
ANR	5032652	PtrMemberAccess	pdefg -> RangeHIJK		5032582	0					
ANR	5032653	Identifier	pdefg		5032582	0					
ANR	5032654	Identifier	RangeHIJK		5032582	1					
ANR	5032655	Identifier	Range4_default		5032582	1					
ANR	5032656	ExpressionStatement	"set_ctbl_defaults ( & pdefg -> Table , 4 )"	367:4:11584:11619	5032582	7	True				
ANR	5032657	CallExpression	"set_ctbl_defaults ( & pdefg -> Table , 4 )"		5032582	0					
ANR	5032658	Callee	set_ctbl_defaults		5032582	0					
ANR	5032659	Identifier	set_ctbl_defaults		5032582	0					
ANR	5032660	ArgumentList	& pdefg -> Table		5032582	1					
ANR	5032661	Argument	& pdefg -> Table		5032582	0					
ANR	5032662	UnaryOperationExpression	& pdefg -> Table		5032582	0					
ANR	5032663	UnaryOperator	&		5032582	0					
ANR	5032664	PtrMemberAccess	pdefg -> Table		5032582	1					
ANR	5032665	Identifier	pdefg		5032582	0					
ANR	5032666	Identifier	Table		5032582	1					
ANR	5032667	Argument	4		5032582	1					
ANR	5032668	PrimaryExpression	4		5032582	0					
ANR	5032669	ExpressionStatement	( * ppcspace ) -> params . defg = pdefg	369:4:11626:11658	5032582	8	True				
ANR	5032670	AssignmentExpression	( * ppcspace ) -> params . defg = pdefg		5032582	0		=			
ANR	5032671	MemberAccess	( * ppcspace ) -> params . defg		5032582	0					
ANR	5032672	PtrMemberAccess	( * ppcspace ) -> params		5032582	0					
ANR	5032673	UnaryOperationExpression	* ppcspace		5032582	0					
ANR	5032674	UnaryOperator	*		5032582	0					
ANR	5032675	Identifier	ppcspace		5032582	1					
ANR	5032676	Identifier	params		5032582	1					
ANR	5032677	Identifier	defg		5032582	1					
ANR	5032678	Identifier	pdefg		5032582	1					
ANR	5032679	ReturnStatement	return 0 ;	370:4:11664:11672	5032582	9	True				
ANR	5032680	PrimaryExpression	0		5032582	0					
ANR	5032681	ReturnType	int		5032582	1					
ANR	5032682	Identifier	gs_cspace_build_CIEDEFG		5032582	2					
ANR	5032683	ParameterList	"gs_color_space * * ppcspace , void * client_data , gs_memory_t * pmem"		5032582	3					
ANR	5032684	Parameter	gs_color_space * * ppcspace	352:24:11055:11080	5032582	0	True				
ANR	5032685	ParameterType	gs_color_space * *		5032582	0					
ANR	5032686	Identifier	ppcspace		5032582	1					
ANR	5032687	Parameter	void * client_data	352:52:11083:11099	5032582	1	True				
ANR	5032688	ParameterType	void *		5032582	0					
ANR	5032689	Identifier	client_data		5032582	1					
ANR	5032690	Parameter	gs_memory_t * pmem	353:24:11126:11143	5032582	2	True				
ANR	5032691	ParameterType	gs_memory_t *		5032582	0					
ANR	5032692	Identifier	pmem		5032582	1					
ANR	5032693	CFGEntryNode	ENTRY		5032582		True				
ANR	5032694	CFGExitNode	EXIT		5032582		True				
ANR	5032695	Symbol	client_data		5032582						
ANR	5032696	Symbol	* * ppcspace		5032582						
ANR	5032697	Symbol	gx_build_cie_space		5032582						
ANR	5032698	Symbol	gx_install_CIEDEFG		5032582						
ANR	5032699	Symbol	& gs_color_space_type_CIEDEFG		5032582						
ANR	5032700	Symbol	* pdefg		5032582						
ANR	5032701	Symbol	* ppcspace		5032582						
ANR	5032702	Symbol	pdefg		5032582						
ANR	5032703	Symbol	pdefg -> common . install_cspace		5032582						
ANR	5032704	Symbol	( * ppcspace ) -> params		5032582						
ANR	5032705	Symbol	pdefg -> common		5032582						
ANR	5032706	Symbol	& st_cie_defg		5032582						
ANR	5032707	Symbol	pdefg -> RangeHIJK		5032582						
ANR	5032708	Symbol	pmem		5032582						
ANR	5032709	Symbol	gs_error_VMerror		5032582						
ANR	5032710	Symbol	pdefg -> RangeDEFG		5032582						
ANR	5032711	Symbol	ppcspace		5032582						
ANR	5032712	Symbol	Range4_default		5032582						
ANR	5032713	Symbol	( * ppcspace ) -> params . defg		5032582						
ANR	5032714	Symbol	pdefg -> DecodeDEFG		5032582						
ANR	5032715	Symbol	& pdefg -> Table		5032582						
ANR	5032716	Symbol	DecodeDEFG_default		5032582						
ANR	5032717	Function	gs_cie_defx_set_lookup_table	375:0:11708:12408							
ANR	5032718	FunctionDef	"gs_cie_defx_set_lookup_table (gs_color_space * pcspace , int * pdims , const gs_const_string * ptable)"		5032717	0					
ANR	5032719	CompoundStatement		378:0:11840:12408	5032717	0					
ANR	5032720	IdentifierDeclStatement	gx_color_lookup_table * plktblp ;	379:4:11846:11876	5032717	0	True				
ANR	5032721	IdentifierDecl	* plktblp		5032717	0					
ANR	5032722	IdentifierDeclType	gx_color_lookup_table *		5032717	0					
ANR	5032723	Identifier	plktblp		5032717	1					
ANR	5032724	SwitchStatement	switch ( gs_color_space_get_index ( pcspace ) )		5032717	1					
ANR	5032725	Condition	gs_color_space_get_index ( pcspace )	381:12:11891:11923	5032717	0	True				
ANR	5032726	CallExpression	gs_color_space_get_index ( pcspace )		5032717	0					
ANR	5032727	Callee	gs_color_space_get_index		5032717	0					
ANR	5032728	Identifier	gs_color_space_get_index		5032717	0					
ANR	5032729	ArgumentList	pcspace		5032717	1					
ANR	5032730	Argument	pcspace		5032717	0					
ANR	5032731	Identifier	pcspace		5032717	0					
ANR	5032732	CompoundStatement		4:47:85:85	5032717	1					
ANR	5032733	Label	case gs_color_space_index_CIEDEF :	382:8:11936:11968	5032717	0	True				
ANR	5032734	Identifier	gs_color_space_index_CIEDEF		5032717	0					
ANR	5032735	ExpressionStatement	plktblp = & pcspace -> params . def -> Table	383:12:11982:12019	5032717	1	True				
ANR	5032736	AssignmentExpression	plktblp = & pcspace -> params . def -> Table		5032717	0		=			
ANR	5032737	Identifier	plktblp		5032717	0					
ANR	5032738	UnaryOperationExpression	& pcspace -> params . def -> Table		5032717	1					
ANR	5032739	UnaryOperator	&		5032717	0					
ANR	5032740	PtrMemberAccess	pcspace -> params . def -> Table		5032717	1					
ANR	5032741	MemberAccess	pcspace -> params . def		5032717	0					
ANR	5032742	PtrMemberAccess	pcspace -> params		5032717	0					
ANR	5032743	Identifier	pcspace		5032717	0					
ANR	5032744	Identifier	params		5032717	1					
ANR	5032745	Identifier	def		5032717	1					
ANR	5032746	Identifier	Table		5032717	1					
ANR	5032747	BreakStatement	break ;	384:12:12033:12038	5032717	2	True				
ANR	5032748	Label	case gs_color_space_index_CIEDEFG :	385:8:12048:12081	5032717	3	True				
ANR	5032749	Identifier	gs_color_space_index_CIEDEFG		5032717	0					
ANR	5032750	ExpressionStatement	plktblp = & pcspace -> params . defg -> Table	386:12:12095:12133	5032717	4	True				
ANR	5032751	AssignmentExpression	plktblp = & pcspace -> params . defg -> Table		5032717	0		=			
ANR	5032752	Identifier	plktblp		5032717	0					
ANR	5032753	UnaryOperationExpression	& pcspace -> params . defg -> Table		5032717	1					
ANR	5032754	UnaryOperator	&		5032717	0					
ANR	5032755	PtrMemberAccess	pcspace -> params . defg -> Table		5032717	1					
ANR	5032756	MemberAccess	pcspace -> params . defg		5032717	0					
ANR	5032757	PtrMemberAccess	pcspace -> params		5032717	0					
ANR	5032758	Identifier	pcspace		5032717	0					
ANR	5032759	Identifier	params		5032717	1					
ANR	5032760	Identifier	defg		5032717	1					
ANR	5032761	Identifier	Table		5032717	1					
ANR	5032762	ExpressionStatement	plktblp -> dims [ 3 ] = pdims [ 3 ]	387:12:12147:12174	5032717	5	True				
ANR	5032763	AssignmentExpression	plktblp -> dims [ 3 ] = pdims [ 3 ]		5032717	0		=			
ANR	5032764	ArrayIndexing	plktblp -> dims [ 3 ]		5032717	0					
ANR	5032765	PtrMemberAccess	plktblp -> dims		5032717	0					
ANR	5032766	Identifier	plktblp		5032717	0					
ANR	5032767	Identifier	dims		5032717	1					
ANR	5032768	PrimaryExpression	3		5032717	1					
ANR	5032769	ArrayIndexing	pdims [ 3 ]		5032717	1					
ANR	5032770	Identifier	pdims		5032717	0					
ANR	5032771	PrimaryExpression	3		5032717	1					
ANR	5032772	BreakStatement	break ;	388:12:12188:12193	5032717	6	True				
ANR	5032773	Label	default :	389:8:12203:12210	5032717	7	True				
ANR	5032774	Identifier	default		5032717	0					
ANR	5032775	ExpressionStatement	return_error ( gs_error_rangecheck )	390:12:12224:12257	5032717	8	True				
ANR	5032776	CallExpression	return_error ( gs_error_rangecheck )		5032717	0					
ANR	5032777	Callee	return_error		5032717	0					
ANR	5032778	Identifier	return_error		5032717	0					
ANR	5032779	ArgumentList	gs_error_rangecheck		5032717	1					
ANR	5032780	Argument	gs_error_rangecheck		5032717	0					
ANR	5032781	Identifier	gs_error_rangecheck		5032717	0					
ANR	5032782	ExpressionStatement	plktblp -> dims [ 0 ] = pdims [ 0 ]	393:4:12270:12297	5032717	2	True				
ANR	5032783	AssignmentExpression	plktblp -> dims [ 0 ] = pdims [ 0 ]		5032717	0		=			
ANR	5032784	ArrayIndexing	plktblp -> dims [ 0 ]		5032717	0					
ANR	5032785	PtrMemberAccess	plktblp -> dims		5032717	0					
ANR	5032786	Identifier	plktblp		5032717	0					
ANR	5032787	Identifier	dims		5032717	1					
ANR	5032788	PrimaryExpression	0		5032717	1					
ANR	5032789	ArrayIndexing	pdims [ 0 ]		5032717	1					
ANR	5032790	Identifier	pdims		5032717	0					
ANR	5032791	PrimaryExpression	0		5032717	1					
ANR	5032792	ExpressionStatement	plktblp -> dims [ 1 ] = pdims [ 1 ]	394:4:12303:12330	5032717	3	True				
ANR	5032793	AssignmentExpression	plktblp -> dims [ 1 ] = pdims [ 1 ]		5032717	0		=			
ANR	5032794	ArrayIndexing	plktblp -> dims [ 1 ]		5032717	0					
ANR	5032795	PtrMemberAccess	plktblp -> dims		5032717	0					
ANR	5032796	Identifier	plktblp		5032717	0					
ANR	5032797	Identifier	dims		5032717	1					
ANR	5032798	PrimaryExpression	1		5032717	1					
ANR	5032799	ArrayIndexing	pdims [ 1 ]		5032717	1					
ANR	5032800	Identifier	pdims		5032717	0					
ANR	5032801	PrimaryExpression	1		5032717	1					
ANR	5032802	ExpressionStatement	plktblp -> dims [ 2 ] = pdims [ 2 ]	395:4:12336:12363	5032717	4	True				
ANR	5032803	AssignmentExpression	plktblp -> dims [ 2 ] = pdims [ 2 ]		5032717	0		=			
ANR	5032804	ArrayIndexing	plktblp -> dims [ 2 ]		5032717	0					
ANR	5032805	PtrMemberAccess	plktblp -> dims		5032717	0					
ANR	5032806	Identifier	plktblp		5032717	0					
ANR	5032807	Identifier	dims		5032717	1					
ANR	5032808	PrimaryExpression	2		5032717	1					
ANR	5032809	ArrayIndexing	pdims [ 2 ]		5032717	1					
ANR	5032810	Identifier	pdims		5032717	0					
ANR	5032811	PrimaryExpression	2		5032717	1					
ANR	5032812	ExpressionStatement	plktblp -> table = ptable	396:4:12369:12392	5032717	5	True				
ANR	5032813	AssignmentExpression	plktblp -> table = ptable		5032717	0		=			
ANR	5032814	PtrMemberAccess	plktblp -> table		5032717	0					
ANR	5032815	Identifier	plktblp		5032717	0					
ANR	5032816	Identifier	table		5032717	1					
ANR	5032817	Identifier	ptable		5032717	1					
ANR	5032818	ReturnStatement	return 0 ;	397:4:12398:12406	5032717	6	True				
ANR	5032819	PrimaryExpression	0		5032717	0					
ANR	5032820	ReturnType	int		5032717	1					
ANR	5032821	Identifier	gs_cie_defx_set_lookup_table		5032717	2					
ANR	5032822	ParameterList	"gs_color_space * pcspace , int * pdims , const gs_const_string * ptable"		5032717	3					
ANR	5032823	Parameter	gs_color_space * pcspace	376:29:11741:11764	5032717	0	True				
ANR	5032824	ParameterType	gs_color_space *		5032717	0					
ANR	5032825	Identifier	pcspace		5032717	1					
ANR	5032826	Parameter	int * pdims	376:55:11767:11776	5032717	1	True				
ANR	5032827	ParameterType	int *		5032717	0					
ANR	5032828	Identifier	pdims		5032717	1					
ANR	5032829	Parameter	const gs_const_string * ptable	377:29:11808:11837	5032717	2	True				
ANR	5032830	ParameterType	const gs_const_string *		5032717	0					
ANR	5032831	Identifier	ptable		5032717	1					
ANR	5032832	CFGEntryNode	ENTRY		5032717		True				
ANR	5032833	CFGExitNode	EXIT		5032717		True				
ANR	5032834	Symbol	pcspace -> params . defg		5032717						
ANR	5032835	Symbol	pcspace		5032717						
ANR	5032836	Symbol	pdims		5032717						
ANR	5032837	Symbol	* plktblp -> dims		5032717						
ANR	5032838	Symbol	gs_error_rangecheck		5032717						
ANR	5032839	Symbol	* * plktblp		5032717						
ANR	5032840	Symbol	pcspace -> params . def		5032717						
ANR	5032841	Symbol	* pcspace		5032717						
ANR	5032842	Symbol	ptable		5032717						
ANR	5032843	Symbol	* plktblp		5032717						
ANR	5032844	Symbol	gs_color_space_get_index		5032717						
ANR	5032845	Symbol	& pcspace -> params . defg -> Table		5032717						
ANR	5032846	Symbol	plktblp -> dims		5032717						
ANR	5032847	Symbol	plktblp -> table		5032717						
ANR	5032848	Symbol	plktblp		5032717						
ANR	5032849	Symbol	pcspace -> params		5032717						
ANR	5032850	Symbol	& pcspace -> params . def -> Table		5032717						
ANR	5032851	Symbol	* pdims		5032717						
ANR	5032852	Function	gx_serialize_cie_cache	402:0:12483:13034							
ANR	5032853	FunctionDef	"gx_serialize_cie_cache (const cie_cache_floats * c , stream * s)"		5032852	0					
ANR	5032854	CompoundStatement		404:0:12556:13034	5032852	0					
ANR	5032855	IdentifierDeclStatement	const uint cache_size = count_of ( c -> values ) ;	405:4:12581:12624	5032852	0	True				
ANR	5032856	IdentifierDecl	cache_size = count_of ( c -> values )		5032852	0					
ANR	5032857	IdentifierDeclType	const uint		5032852	0					
ANR	5032858	Identifier	cache_size		5032852	1					
ANR	5032859	AssignmentExpression	cache_size = count_of ( c -> values )		5032852	2		=			
ANR	5032860	Identifier	cache_size		5032852	0					
ANR	5032861	CallExpression	count_of ( c -> values )		5032852	1					
ANR	5032862	Callee	count_of		5032852	0					
ANR	5032863	Identifier	count_of		5032852	0					
ANR	5032864	ArgumentList	c -> values		5032852	1					
ANR	5032865	Argument	c -> values		5032852	0					
ANR	5032866	PtrMemberAccess	c -> values		5032852	0					
ANR	5032867	Identifier	c		5032852	0					
ANR	5032868	Identifier	values		5032852	1					
ANR	5032869	IdentifierDeclStatement	uint n ;	406:4:12630:12636	5032852	1	True				
ANR	5032870	IdentifierDecl	n		5032852	0					
ANR	5032871	IdentifierDeclType	uint		5032852	0					
ANR	5032872	Identifier	n		5032852	1					
ANR	5032873	IdentifierDeclStatement	int code ;	407:4:12642:12650	5032852	2	True				
ANR	5032874	IdentifierDecl	code		5032852	0					
ANR	5032875	IdentifierDeclType	int		5032852	0					
ANR	5032876	Identifier	code		5032852	1					
ANR	5032877	ExpressionStatement	"code = sputs ( s , ( const byte * ) & c -> params . is_identity , sizeof ( c -> params . is_identity ) , & n )"	409:4:12657:12745	5032852	3	True				
ANR	5032878	AssignmentExpression	"code = sputs ( s , ( const byte * ) & c -> params . is_identity , sizeof ( c -> params . is_identity ) , & n )"		5032852	0		=			
ANR	5032879	Identifier	code		5032852	0					
ANR	5032880	CallExpression	"sputs ( s , ( const byte * ) & c -> params . is_identity , sizeof ( c -> params . is_identity ) , & n )"		5032852	1					
ANR	5032881	Callee	sputs		5032852	0					
ANR	5032882	Identifier	sputs		5032852	0					
ANR	5032883	ArgumentList	s		5032852	1					
ANR	5032884	Argument	s		5032852	0					
ANR	5032885	Identifier	s		5032852	0					
ANR	5032886	Argument	( const byte * ) & c -> params . is_identity		5032852	1					
ANR	5032887	CastExpression	( const byte * ) & c -> params . is_identity		5032852	0					
ANR	5032888	CastTarget	const byte *		5032852	0					
ANR	5032889	UnaryOperationExpression	& c -> params . is_identity		5032852	1					
ANR	5032890	UnaryOperator	&		5032852	0					
ANR	5032891	MemberAccess	c -> params . is_identity		5032852	1					
ANR	5032892	PtrMemberAccess	c -> params		5032852	0					
ANR	5032893	Identifier	c		5032852	0					
ANR	5032894	Identifier	params		5032852	1					
ANR	5032895	Identifier	is_identity		5032852	1					
ANR	5032896	Argument	sizeof ( c -> params . is_identity )		5032852	2					
ANR	5032897	SizeofExpression	sizeof ( c -> params . is_identity )		5032852	0					
ANR	5032898	Sizeof	sizeof		5032852	0					
ANR	5032899	MemberAccess	c -> params . is_identity		5032852	1					
ANR	5032900	PtrMemberAccess	c -> params		5032852	0					
ANR	5032901	Identifier	c		5032852	0					
ANR	5032902	Identifier	params		5032852	1					
ANR	5032903	Identifier	is_identity		5032852	1					
ANR	5032904	Argument	& n		5032852	3					
ANR	5032905	UnaryOperationExpression	& n		5032852	0					
ANR	5032906	UnaryOperator	&		5032852	0					
ANR	5032907	Identifier	n		5032852	1					
ANR	5032908	IfStatement	if ( code < 0 )		5032852	4					
ANR	5032909	Condition	code < 0	410:8:12755:12762	5032852	0	True				
ANR	5032910	RelationalExpression	code < 0		5032852	0		<			
ANR	5032911	Identifier	code		5032852	0					
ANR	5032912	PrimaryExpression	0		5032852	1					
ANR	5032913	ExpressionStatement	return_error ( gs_error_ioerror )	411:8:12773:12803	5032852	1	True				
ANR	5032914	CallExpression	return_error ( gs_error_ioerror )		5032852	0					
ANR	5032915	Callee	return_error		5032852	0					
ANR	5032916	Identifier	return_error		5032852	0					
ANR	5032917	ArgumentList	gs_error_ioerror		5032852	1					
ANR	5032918	Argument	gs_error_ioerror		5032852	0					
ANR	5032919	Identifier	gs_error_ioerror		5032852	0					
ANR	5032920	IfStatement	if ( c -> params . is_identity )		5032852	5					
ANR	5032921	Condition	c -> params . is_identity	412:8:12813:12833	5032852	0	True				
ANR	5032922	MemberAccess	c -> params . is_identity		5032852	0					
ANR	5032923	PtrMemberAccess	c -> params		5032852	0					
ANR	5032924	Identifier	c		5032852	0					
ANR	5032925	Identifier	params		5032852	1					
ANR	5032926	Identifier	is_identity		5032852	1					
ANR	5032927	ReturnStatement	return 0 ;	413:8:12844:12852	5032852	1	True				
ANR	5032928	PrimaryExpression	0		5032852	0					
ANR	5032929	ExpressionStatement	"code = sputs ( s , ( const byte * ) & cache_size , sizeof ( cache_size ) , & n )"	414:4:12858:12924	5032852	6	True				
ANR	5032930	AssignmentExpression	"code = sputs ( s , ( const byte * ) & cache_size , sizeof ( cache_size ) , & n )"		5032852	0		=			
ANR	5032931	Identifier	code		5032852	0					
ANR	5032932	CallExpression	"sputs ( s , ( const byte * ) & cache_size , sizeof ( cache_size ) , & n )"		5032852	1					
ANR	5032933	Callee	sputs		5032852	0					
ANR	5032934	Identifier	sputs		5032852	0					
ANR	5032935	ArgumentList	s		5032852	1					
ANR	5032936	Argument	s		5032852	0					
ANR	5032937	Identifier	s		5032852	0					
ANR	5032938	Argument	( const byte * ) & cache_size		5032852	1					
ANR	5032939	CastExpression	( const byte * ) & cache_size		5032852	0					
ANR	5032940	CastTarget	const byte *		5032852	0					
ANR	5032941	UnaryOperationExpression	& cache_size		5032852	1					
ANR	5032942	UnaryOperator	&		5032852	0					
ANR	5032943	Identifier	cache_size		5032852	1					
ANR	5032944	Argument	sizeof ( cache_size )		5032852	2					
ANR	5032945	SizeofExpression	sizeof ( cache_size )		5032852	0					
ANR	5032946	Sizeof	sizeof		5032852	0					
ANR	5032947	SizeofOperand	cache_size		5032852	1					
ANR	5032948	Argument	& n		5032852	3					
ANR	5032949	UnaryOperationExpression	& n		5032852	0					
ANR	5032950	UnaryOperator	&		5032852	0					
ANR	5032951	Identifier	n		5032852	1					
ANR	5032952	IfStatement	if ( code < 0 )		5032852	7					
ANR	5032953	Condition	code < 0	415:8:12934:12941	5032852	0	True				
ANR	5032954	RelationalExpression	code < 0		5032852	0		<			
ANR	5032955	Identifier	code		5032852	0					
ANR	5032956	PrimaryExpression	0		5032852	1					
ANR	5032957	ReturnStatement	return code ;	416:8:12952:12963	5032852	1	True				
ANR	5032958	Identifier	code		5032852	0					
ANR	5032959	ReturnStatement	"return sputs ( s , ( const byte * ) c -> values , sizeof ( c -> values ) , & n ) ;"	417:4:12969:13032	5032852	8	True				
ANR	5032960	CallExpression	"sputs ( s , ( const byte * ) c -> values , sizeof ( c -> values ) , & n )"		5032852	0					
ANR	5032961	Callee	sputs		5032852	0					
ANR	5032962	Identifier	sputs		5032852	0					
ANR	5032963	ArgumentList	s		5032852	1					
ANR	5032964	Argument	s		5032852	0					
ANR	5032965	Identifier	s		5032852	0					
ANR	5032966	Argument	( const byte * ) c -> values		5032852	1					
ANR	5032967	CastExpression	( const byte * ) c -> values		5032852	0					
ANR	5032968	CastTarget	const byte *		5032852	0					
ANR	5032969	PtrMemberAccess	c -> values		5032852	1					
ANR	5032970	Identifier	c		5032852	0					
ANR	5032971	Identifier	values		5032852	1					
ANR	5032972	Argument	sizeof ( c -> values )		5032852	2					
ANR	5032973	SizeofExpression	sizeof ( c -> values )		5032852	0					
ANR	5032974	Sizeof	sizeof		5032852	0					
ANR	5032975	PtrMemberAccess	c -> values		5032852	1					
ANR	5032976	Identifier	c		5032852	0					
ANR	5032977	Identifier	values		5032852	1					
ANR	5032978	Argument	& n		5032852	3					
ANR	5032979	UnaryOperationExpression	& n		5032852	0					
ANR	5032980	UnaryOperator	&		5032852	0					
ANR	5032981	Identifier	n		5032852	1					
ANR	5032982	ReturnType	static int		5032852	1					
ANR	5032983	Identifier	gx_serialize_cie_cache		5032852	2					
ANR	5032984	ParameterList	"const cie_cache_floats * c , stream * s"		5032852	3					
ANR	5032985	Parameter	const cie_cache_floats * c	403:23:12517:12541	5032852	0	True				
ANR	5032986	ParameterType	const cie_cache_floats *		5032852	0					
ANR	5032987	Identifier	c		5032852	1					
ANR	5032988	Parameter	stream * s	403:50:12544:12553	5032852	1	True				
ANR	5032989	ParameterType	stream *		5032852	0					
ANR	5032990	Identifier	s		5032852	1					
ANR	5032991	CFGEntryNode	ENTRY		5032852		True				
ANR	5032992	CFGExitNode	EXIT		5032852		True				
ANR	5032993	Symbol	c		5032852						
ANR	5032994	Symbol	code		5032852						
ANR	5032995	Symbol	cache_size		5032852						
ANR	5032996	Symbol	& c -> params . is_identity		5032852						
ANR	5032997	Symbol	c -> values		5032852						
ANR	5032998	Symbol	& cache_size		5032852						
ANR	5032999	Symbol	gs_error_ioerror		5032852						
ANR	5033000	Symbol	* c		5032852						
ANR	5033001	Symbol	n		5032852						
ANR	5033002	Symbol	c -> params . is_identity		5032852						
ANR	5033003	Symbol	s		5032852						
ANR	5033004	Symbol	count_of		5032852						
ANR	5033005	Symbol	& n		5032852						
ANR	5033006	Symbol	& c -> params		5032852						
ANR	5033007	Symbol	c -> params		5032852						
ANR	5033008	Symbol	sputs		5032852						
ANR	5033009	Function	gx_serialize_cie_common_elements	420:0:13037:13833							
ANR	5033010	FunctionDef	"gx_serialize_cie_common_elements (const gs_color_space * pcs , stream * s)"		5033009	0					
ANR	5033011	CompoundStatement		422:0:13114:13833	5033009	0					
ANR	5033012	IdentifierDeclStatement	const gs_cie_a * p = pcs -> params . a ;	423:4:13120:13154	5033009	0	True				
ANR	5033013	IdentifierDecl	* p = pcs -> params . a		5033009	0					
ANR	5033014	IdentifierDeclType	const gs_cie_a *		5033009	0					
ANR	5033015	Identifier	p		5033009	1					
ANR	5033016	AssignmentExpression	* p = pcs -> params . a		5033009	2		=			
ANR	5033017	Identifier	p		5033009	0					
ANR	5033018	MemberAccess	pcs -> params . a		5033009	1					
ANR	5033019	PtrMemberAccess	pcs -> params		5033009	0					
ANR	5033020	Identifier	pcs		5033009	0					
ANR	5033021	Identifier	params		5033009	1					
ANR	5033022	Identifier	a		5033009	1					
ANR	5033023	IdentifierDeclStatement	"uint n , k ;"	424:4:13160:13169	5033009	1	True				
ANR	5033024	IdentifierDecl	n		5033009	0					
ANR	5033025	IdentifierDeclType	uint		5033009	0					
ANR	5033026	Identifier	n		5033009	1					
ANR	5033027	IdentifierDecl	k		5033009	1					
ANR	5033028	IdentifierDeclType	uint		5033009	0					
ANR	5033029	Identifier	k		5033009	1					
ANR	5033030	IdentifierDeclStatement	"int code = gx_serialize_cspace_type ( pcs , s ) ;"	425:4:13175:13218	5033009	2	True				
ANR	5033031	IdentifierDecl	"code = gx_serialize_cspace_type ( pcs , s )"		5033009	0					
ANR	5033032	IdentifierDeclType	int		5033009	0					
ANR	5033033	Identifier	code		5033009	1					
ANR	5033034	AssignmentExpression	"code = gx_serialize_cspace_type ( pcs , s )"		5033009	2		=			
ANR	5033035	Identifier	code		5033009	0					
ANR	5033036	CallExpression	"gx_serialize_cspace_type ( pcs , s )"		5033009	1					
ANR	5033037	Callee	gx_serialize_cspace_type		5033009	0					
ANR	5033038	Identifier	gx_serialize_cspace_type		5033009	0					
ANR	5033039	ArgumentList	pcs		5033009	1					
ANR	5033040	Argument	pcs		5033009	0					
ANR	5033041	Identifier	pcs		5033009	0					
ANR	5033042	Argument	s		5033009	1					
ANR	5033043	Identifier	s		5033009	0					
ANR	5033044	IfStatement	if ( code < 0 )		5033009	3					
ANR	5033045	Condition	code < 0	427:8:13229:13236	5033009	0	True				
ANR	5033046	RelationalExpression	code < 0		5033009	0		<			
ANR	5033047	Identifier	code		5033009	0					
ANR	5033048	PrimaryExpression	0		5033009	1					
ANR	5033049	ReturnStatement	return code ;	428:8:13247:13258	5033009	1	True				
ANR	5033050	Identifier	code		5033009	0					
ANR	5033051	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> common . RangeLMN , sizeof ( p -> common . RangeLMN ) , & n )"	429:4:13264:13370	5033009	4	True				
ANR	5033052	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> common . RangeLMN , sizeof ( p -> common . RangeLMN ) , & n )"		5033009	0		=			
ANR	5033053	Identifier	code		5033009	0					
ANR	5033054	CallExpression	"sputs ( s , ( const byte * ) & p -> common . RangeLMN , sizeof ( p -> common . RangeLMN ) , & n )"		5033009	1					
ANR	5033055	Callee	sputs		5033009	0					
ANR	5033056	Identifier	sputs		5033009	0					
ANR	5033057	ArgumentList	s		5033009	1					
ANR	5033058	Argument	s		5033009	0					
ANR	5033059	Identifier	s		5033009	0					
ANR	5033060	Argument	( const byte * ) & p -> common . RangeLMN		5033009	1					
ANR	5033061	CastExpression	( const byte * ) & p -> common . RangeLMN		5033009	0					
ANR	5033062	CastTarget	const byte *		5033009	0					
ANR	5033063	UnaryOperationExpression	& p -> common . RangeLMN		5033009	1					
ANR	5033064	UnaryOperator	&		5033009	0					
ANR	5033065	MemberAccess	p -> common . RangeLMN		5033009	1					
ANR	5033066	PtrMemberAccess	p -> common		5033009	0					
ANR	5033067	Identifier	p		5033009	0					
ANR	5033068	Identifier	common		5033009	1					
ANR	5033069	Identifier	RangeLMN		5033009	1					
ANR	5033070	Argument	sizeof ( p -> common . RangeLMN )		5033009	2					
ANR	5033071	SizeofExpression	sizeof ( p -> common . RangeLMN )		5033009	0					
ANR	5033072	Sizeof	sizeof		5033009	0					
ANR	5033073	MemberAccess	p -> common . RangeLMN		5033009	1					
ANR	5033074	PtrMemberAccess	p -> common		5033009	0					
ANR	5033075	Identifier	p		5033009	0					
ANR	5033076	Identifier	common		5033009	1					
ANR	5033077	Identifier	RangeLMN		5033009	1					
ANR	5033078	Argument	& n		5033009	3					
ANR	5033079	UnaryOperationExpression	& n		5033009	0					
ANR	5033080	UnaryOperator	&		5033009	0					
ANR	5033081	Identifier	n		5033009	1					
ANR	5033082	IfStatement	if ( code < 0 )		5033009	5					
ANR	5033083	Condition	code < 0	431:8:13380:13387	5033009	0	True				
ANR	5033084	RelationalExpression	code < 0		5033009	0		<			
ANR	5033085	Identifier	code		5033009	0					
ANR	5033086	PrimaryExpression	0		5033009	1					
ANR	5033087	ReturnStatement	return code ;	432:8:13398:13409	5033009	1	True				
ANR	5033088	Identifier	code		5033009	0					
ANR	5033089	ForStatement	for ( k = 0 ; k < 3 && code >= 0 ; k ++ )		5033009	6					
ANR	5033090	ForInit	k = 0 ;	433:9:13420:13425	5033009	0	True				
ANR	5033091	AssignmentExpression	k = 0		5033009	0		=			
ANR	5033092	Identifier	k		5033009	0					
ANR	5033093	PrimaryExpression	0		5033009	1					
ANR	5033094	Condition	k < 3 && code >= 0	433:16:13427:13444	5033009	1	True				
ANR	5033095	AndExpression	k < 3 && code >= 0		5033009	0		&&			
ANR	5033096	RelationalExpression	k < 3		5033009	0		<			
ANR	5033097	Identifier	k		5033009	0					
ANR	5033098	PrimaryExpression	3		5033009	1					
ANR	5033099	RelationalExpression	code >= 0		5033009	1		>=			
ANR	5033100	Identifier	code		5033009	0					
ANR	5033101	PrimaryExpression	0		5033009	1					
ANR	5033102	PostIncDecOperationExpression	k ++	433:36:13447:13449	5033009	2	True				
ANR	5033103	Identifier	k		5033009	0					
ANR	5033104	IncDec	++		5033009	1					
ANR	5033105	ExpressionStatement	"code = gx_serialize_cie_cache ( & p -> common . caches . DecodeLMN [ k ] . floats , s )"	434:8:13460:13531	5033009	3	True				
ANR	5033106	AssignmentExpression	"code = gx_serialize_cie_cache ( & p -> common . caches . DecodeLMN [ k ] . floats , s )"		5033009	0		=			
ANR	5033107	Identifier	code		5033009	0					
ANR	5033108	CallExpression	"gx_serialize_cie_cache ( & p -> common . caches . DecodeLMN [ k ] . floats , s )"		5033009	1					
ANR	5033109	Callee	gx_serialize_cie_cache		5033009	0					
ANR	5033110	Identifier	gx_serialize_cie_cache		5033009	0					
ANR	5033111	ArgumentList	& p -> common . caches . DecodeLMN [ k ] . floats		5033009	1					
ANR	5033112	Argument	& p -> common . caches . DecodeLMN [ k ] . floats		5033009	0					
ANR	5033113	UnaryOperationExpression	& p -> common . caches . DecodeLMN [ k ] . floats		5033009	0					
ANR	5033114	UnaryOperator	&		5033009	0					
ANR	5033115	MemberAccess	p -> common . caches . DecodeLMN [ k ] . floats		5033009	1					
ANR	5033116	ArrayIndexing	p -> common . caches . DecodeLMN [ k ]		5033009	0					
ANR	5033117	MemberAccess	p -> common . caches . DecodeLMN		5033009	0					
ANR	5033118	MemberAccess	p -> common . caches		5033009	0					
ANR	5033119	PtrMemberAccess	p -> common		5033009	0					
ANR	5033120	Identifier	p		5033009	0					
ANR	5033121	Identifier	common		5033009	1					
ANR	5033122	Identifier	caches		5033009	1					
ANR	5033123	Identifier	DecodeLMN		5033009	1					
ANR	5033124	Identifier	k		5033009	1					
ANR	5033125	Identifier	floats		5033009	1					
ANR	5033126	Argument	s		5033009	1					
ANR	5033127	Identifier	s		5033009	0					
ANR	5033128	IfStatement	if ( code < 0 )		5033009	7					
ANR	5033129	Condition	code < 0	435:8:13541:13548	5033009	0	True				
ANR	5033130	RelationalExpression	code < 0		5033009	0		<			
ANR	5033131	Identifier	code		5033009	0					
ANR	5033132	PrimaryExpression	0		5033009	1					
ANR	5033133	ReturnStatement	return code ;	436:8:13559:13570	5033009	1	True				
ANR	5033134	Identifier	code		5033009	0					
ANR	5033135	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> common . MatrixLMN , sizeof ( p -> common . MatrixLMN ) , & n )"	437:4:13576:13684	5033009	8	True				
ANR	5033136	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> common . MatrixLMN , sizeof ( p -> common . MatrixLMN ) , & n )"		5033009	0		=			
ANR	5033137	Identifier	code		5033009	0					
ANR	5033138	CallExpression	"sputs ( s , ( const byte * ) & p -> common . MatrixLMN , sizeof ( p -> common . MatrixLMN ) , & n )"		5033009	1					
ANR	5033139	Callee	sputs		5033009	0					
ANR	5033140	Identifier	sputs		5033009	0					
ANR	5033141	ArgumentList	s		5033009	1					
ANR	5033142	Argument	s		5033009	0					
ANR	5033143	Identifier	s		5033009	0					
ANR	5033144	Argument	( const byte * ) & p -> common . MatrixLMN		5033009	1					
ANR	5033145	CastExpression	( const byte * ) & p -> common . MatrixLMN		5033009	0					
ANR	5033146	CastTarget	const byte *		5033009	0					
ANR	5033147	UnaryOperationExpression	& p -> common . MatrixLMN		5033009	1					
ANR	5033148	UnaryOperator	&		5033009	0					
ANR	5033149	MemberAccess	p -> common . MatrixLMN		5033009	1					
ANR	5033150	PtrMemberAccess	p -> common		5033009	0					
ANR	5033151	Identifier	p		5033009	0					
ANR	5033152	Identifier	common		5033009	1					
ANR	5033153	Identifier	MatrixLMN		5033009	1					
ANR	5033154	Argument	sizeof ( p -> common . MatrixLMN )		5033009	2					
ANR	5033155	SizeofExpression	sizeof ( p -> common . MatrixLMN )		5033009	0					
ANR	5033156	Sizeof	sizeof		5033009	0					
ANR	5033157	MemberAccess	p -> common . MatrixLMN		5033009	1					
ANR	5033158	PtrMemberAccess	p -> common		5033009	0					
ANR	5033159	Identifier	p		5033009	0					
ANR	5033160	Identifier	common		5033009	1					
ANR	5033161	Identifier	MatrixLMN		5033009	1					
ANR	5033162	Argument	& n		5033009	3					
ANR	5033163	UnaryOperationExpression	& n		5033009	0					
ANR	5033164	UnaryOperator	&		5033009	0					
ANR	5033165	Identifier	n		5033009	1					
ANR	5033166	IfStatement	if ( code < 0 )		5033009	9					
ANR	5033167	Condition	code < 0	439:8:13694:13701	5033009	0	True				
ANR	5033168	RelationalExpression	code < 0		5033009	0		<			
ANR	5033169	Identifier	code		5033009	0					
ANR	5033170	PrimaryExpression	0		5033009	1					
ANR	5033171	ReturnStatement	return code ;	440:8:13712:13723	5033009	1	True				
ANR	5033172	Identifier	code		5033009	0					
ANR	5033173	ReturnStatement	"return sputs ( s , ( const byte * ) & p -> common . points , sizeof ( p -> common . points ) , & n ) ;"	441:4:13729:13831	5033009	10	True				
ANR	5033174	CallExpression	"sputs ( s , ( const byte * ) & p -> common . points , sizeof ( p -> common . points ) , & n )"		5033009	0					
ANR	5033175	Callee	sputs		5033009	0					
ANR	5033176	Identifier	sputs		5033009	0					
ANR	5033177	ArgumentList	s		5033009	1					
ANR	5033178	Argument	s		5033009	0					
ANR	5033179	Identifier	s		5033009	0					
ANR	5033180	Argument	( const byte * ) & p -> common . points		5033009	1					
ANR	5033181	CastExpression	( const byte * ) & p -> common . points		5033009	0					
ANR	5033182	CastTarget	const byte *		5033009	0					
ANR	5033183	UnaryOperationExpression	& p -> common . points		5033009	1					
ANR	5033184	UnaryOperator	&		5033009	0					
ANR	5033185	MemberAccess	p -> common . points		5033009	1					
ANR	5033186	PtrMemberAccess	p -> common		5033009	0					
ANR	5033187	Identifier	p		5033009	0					
ANR	5033188	Identifier	common		5033009	1					
ANR	5033189	Identifier	points		5033009	1					
ANR	5033190	Argument	sizeof ( p -> common . points )		5033009	2					
ANR	5033191	SizeofExpression	sizeof ( p -> common . points )		5033009	0					
ANR	5033192	Sizeof	sizeof		5033009	0					
ANR	5033193	MemberAccess	p -> common . points		5033009	1					
ANR	5033194	PtrMemberAccess	p -> common		5033009	0					
ANR	5033195	Identifier	p		5033009	0					
ANR	5033196	Identifier	common		5033009	1					
ANR	5033197	Identifier	points		5033009	1					
ANR	5033198	Argument	& n		5033009	3					
ANR	5033199	UnaryOperationExpression	& n		5033009	0					
ANR	5033200	UnaryOperator	&		5033009	0					
ANR	5033201	Identifier	n		5033009	1					
ANR	5033202	ReturnType	int		5033009	1					
ANR	5033203	Identifier	gx_serialize_cie_common_elements		5033009	2					
ANR	5033204	ParameterList	"const gs_color_space * pcs , stream * s"		5033009	3					
ANR	5033205	Parameter	const gs_color_space * pcs	421:33:13074:13099	5033009	0	True				
ANR	5033206	ParameterType	const gs_color_space *		5033009	0					
ANR	5033207	Identifier	pcs		5033009	1					
ANR	5033208	Parameter	stream * s	421:61:13102:13111	5033009	1	True				
ANR	5033209	ParameterType	stream *		5033009	0					
ANR	5033210	Identifier	s		5033009	1					
ANR	5033211	CFGEntryNode	ENTRY		5033009		True				
ANR	5033212	CFGExitNode	EXIT		5033009		True				
ANR	5033213	Symbol	code		5033009						
ANR	5033214	Symbol	& p -> common . RangeLMN		5033009						
ANR	5033215	Symbol	gx_serialize_cspace_type		5033009						
ANR	5033216	Symbol	* pcs		5033009						
ANR	5033217	Symbol	gx_serialize_cie_cache		5033009						
ANR	5033218	Symbol	* p -> common		5033009						
ANR	5033219	Symbol	p -> common . points		5033009						
ANR	5033220	Symbol	& p -> common . caches . DecodeLMN [ k ] . floats		5033009						
ANR	5033221	Symbol	p -> common		5033009						
ANR	5033222	Symbol	* * p		5033009						
ANR	5033223	Symbol	& p -> common . MatrixLMN		5033009						
ANR	5033224	Symbol	& p -> common . points		5033009						
ANR	5033225	Symbol	pcs		5033009						
ANR	5033226	Symbol	pcs -> params		5033009						
ANR	5033227	Symbol	p -> common . caches . DecodeLMN		5033009						
ANR	5033228	Symbol	& p -> common		5033009						
ANR	5033229	Symbol	k		5033009						
ANR	5033230	Symbol	n		5033009						
ANR	5033231	Symbol	p		5033009						
ANR	5033232	Symbol	p -> common . caches		5033009						
ANR	5033233	Symbol	s		5033009						
ANR	5033234	Symbol	* p -> common . caches . DecodeLMN		5033009						
ANR	5033235	Symbol	& n		5033009						
ANR	5033236	Symbol	* k		5033009						
ANR	5033237	Symbol	* p -> common . caches		5033009						
ANR	5033238	Symbol	pcs -> params . a		5033009						
ANR	5033239	Symbol	* p		5033009						
ANR	5033240	Symbol	p -> common . RangeLMN		5033009						
ANR	5033241	Symbol	p -> common . MatrixLMN		5033009						
ANR	5033242	Symbol	sputs		5033009						
ANR	5033243	Function	gx_serialize_CIEA	445:0:13836:14341							
ANR	5033244	FunctionDef	"gx_serialize_CIEA (const gs_color_space * pcs , stream * s)"		5033243	0					
ANR	5033245	CompoundStatement		447:0:13905:14341	5033243	0					
ANR	5033246	IdentifierDeclStatement	const gs_cie_a * p = pcs -> params . a ;	448:4:13911:13945	5033243	0	True				
ANR	5033247	IdentifierDecl	* p = pcs -> params . a		5033243	0					
ANR	5033248	IdentifierDeclType	const gs_cie_a *		5033243	0					
ANR	5033249	Identifier	p		5033243	1					
ANR	5033250	AssignmentExpression	* p = pcs -> params . a		5033243	2		=			
ANR	5033251	Identifier	p		5033243	0					
ANR	5033252	MemberAccess	pcs -> params . a		5033243	1					
ANR	5033253	PtrMemberAccess	pcs -> params		5033243	0					
ANR	5033254	Identifier	pcs		5033243	0					
ANR	5033255	Identifier	params		5033243	1					
ANR	5033256	Identifier	a		5033243	1					
ANR	5033257	IdentifierDeclStatement	uint n ;	449:4:13951:13957	5033243	1	True				
ANR	5033258	IdentifierDecl	n		5033243	0					
ANR	5033259	IdentifierDeclType	uint		5033243	0					
ANR	5033260	Identifier	n		5033243	1					
ANR	5033261	IdentifierDeclStatement	"int code = gx_serialize_cie_common_elements ( pcs , s ) ;"	450:4:13963:14014	5033243	2	True				
ANR	5033262	IdentifierDecl	"code = gx_serialize_cie_common_elements ( pcs , s )"		5033243	0					
ANR	5033263	IdentifierDeclType	int		5033243	0					
ANR	5033264	Identifier	code		5033243	1					
ANR	5033265	AssignmentExpression	"code = gx_serialize_cie_common_elements ( pcs , s )"		5033243	2		=			
ANR	5033266	Identifier	code		5033243	0					
ANR	5033267	CallExpression	"gx_serialize_cie_common_elements ( pcs , s )"		5033243	1					
ANR	5033268	Callee	gx_serialize_cie_common_elements		5033243	0					
ANR	5033269	Identifier	gx_serialize_cie_common_elements		5033243	0					
ANR	5033270	ArgumentList	pcs		5033243	1					
ANR	5033271	Argument	pcs		5033243	0					
ANR	5033272	Identifier	pcs		5033243	0					
ANR	5033273	Argument	s		5033243	1					
ANR	5033274	Identifier	s		5033243	0					
ANR	5033275	IfStatement	if ( code < 0 )		5033243	3					
ANR	5033276	Condition	code < 0	452:8:14025:14032	5033243	0	True				
ANR	5033277	RelationalExpression	code < 0		5033243	0		<			
ANR	5033278	Identifier	code		5033243	0					
ANR	5033279	PrimaryExpression	0		5033243	1					
ANR	5033280	ReturnStatement	return code ;	453:8:14043:14054	5033243	1	True				
ANR	5033281	Identifier	code		5033243	0					
ANR	5033282	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> RangeA , sizeof ( p -> RangeA ) , & n )"	454:4:14060:14124	5033243	4	True				
ANR	5033283	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> RangeA , sizeof ( p -> RangeA ) , & n )"		5033243	0		=			
ANR	5033284	Identifier	code		5033243	0					
ANR	5033285	CallExpression	"sputs ( s , ( const byte * ) & p -> RangeA , sizeof ( p -> RangeA ) , & n )"		5033243	1					
ANR	5033286	Callee	sputs		5033243	0					
ANR	5033287	Identifier	sputs		5033243	0					
ANR	5033288	ArgumentList	s		5033243	1					
ANR	5033289	Argument	s		5033243	0					
ANR	5033290	Identifier	s		5033243	0					
ANR	5033291	Argument	( const byte * ) & p -> RangeA		5033243	1					
ANR	5033292	CastExpression	( const byte * ) & p -> RangeA		5033243	0					
ANR	5033293	CastTarget	const byte *		5033243	0					
ANR	5033294	UnaryOperationExpression	& p -> RangeA		5033243	1					
ANR	5033295	UnaryOperator	&		5033243	0					
ANR	5033296	PtrMemberAccess	p -> RangeA		5033243	1					
ANR	5033297	Identifier	p		5033243	0					
ANR	5033298	Identifier	RangeA		5033243	1					
ANR	5033299	Argument	sizeof ( p -> RangeA )		5033243	2					
ANR	5033300	SizeofExpression	sizeof ( p -> RangeA )		5033243	0					
ANR	5033301	Sizeof	sizeof		5033243	0					
ANR	5033302	PtrMemberAccess	p -> RangeA		5033243	1					
ANR	5033303	Identifier	p		5033243	0					
ANR	5033304	Identifier	RangeA		5033243	1					
ANR	5033305	Argument	& n		5033243	3					
ANR	5033306	UnaryOperationExpression	& n		5033243	0					
ANR	5033307	UnaryOperator	&		5033243	0					
ANR	5033308	Identifier	n		5033243	1					
ANR	5033309	IfStatement	if ( code < 0 )		5033243	5					
ANR	5033310	Condition	code < 0	455:8:14134:14141	5033243	0	True				
ANR	5033311	RelationalExpression	code < 0		5033243	0		<			
ANR	5033312	Identifier	code		5033243	0					
ANR	5033313	PrimaryExpression	0		5033243	1					
ANR	5033314	ReturnStatement	return code ;	456:8:14152:14163	5033243	1	True				
ANR	5033315	Identifier	code		5033243	0					
ANR	5033316	ExpressionStatement	"code = gx_serialize_cie_cache ( & p -> caches . DecodeA . floats , s )"	457:4:14169:14228	5033243	6	True				
ANR	5033317	AssignmentExpression	"code = gx_serialize_cie_cache ( & p -> caches . DecodeA . floats , s )"		5033243	0		=			
ANR	5033318	Identifier	code		5033243	0					
ANR	5033319	CallExpression	"gx_serialize_cie_cache ( & p -> caches . DecodeA . floats , s )"		5033243	1					
ANR	5033320	Callee	gx_serialize_cie_cache		5033243	0					
ANR	5033321	Identifier	gx_serialize_cie_cache		5033243	0					
ANR	5033322	ArgumentList	& p -> caches . DecodeA . floats		5033243	1					
ANR	5033323	Argument	& p -> caches . DecodeA . floats		5033243	0					
ANR	5033324	UnaryOperationExpression	& p -> caches . DecodeA . floats		5033243	0					
ANR	5033325	UnaryOperator	&		5033243	0					
ANR	5033326	MemberAccess	p -> caches . DecodeA . floats		5033243	1					
ANR	5033327	MemberAccess	p -> caches . DecodeA		5033243	0					
ANR	5033328	PtrMemberAccess	p -> caches		5033243	0					
ANR	5033329	Identifier	p		5033243	0					
ANR	5033330	Identifier	caches		5033243	1					
ANR	5033331	Identifier	DecodeA		5033243	1					
ANR	5033332	Identifier	floats		5033243	1					
ANR	5033333	Argument	s		5033243	1					
ANR	5033334	Identifier	s		5033243	0					
ANR	5033335	IfStatement	if ( code < 0 )		5033243	7					
ANR	5033336	Condition	code < 0	458:8:14238:14245	5033243	0	True				
ANR	5033337	RelationalExpression	code < 0		5033243	0		<			
ANR	5033338	Identifier	code		5033243	0					
ANR	5033339	PrimaryExpression	0		5033243	1					
ANR	5033340	ReturnStatement	return code ;	459:8:14256:14267	5033243	1	True				
ANR	5033341	Identifier	code		5033243	0					
ANR	5033342	ReturnStatement	"return sputs ( s , ( const byte * ) & p -> MatrixA , sizeof ( p -> MatrixA ) , & n ) ;"	460:4:14273:14339	5033243	8	True				
ANR	5033343	CallExpression	"sputs ( s , ( const byte * ) & p -> MatrixA , sizeof ( p -> MatrixA ) , & n )"		5033243	0					
ANR	5033344	Callee	sputs		5033243	0					
ANR	5033345	Identifier	sputs		5033243	0					
ANR	5033346	ArgumentList	s		5033243	1					
ANR	5033347	Argument	s		5033243	0					
ANR	5033348	Identifier	s		5033243	0					
ANR	5033349	Argument	( const byte * ) & p -> MatrixA		5033243	1					
ANR	5033350	CastExpression	( const byte * ) & p -> MatrixA		5033243	0					
ANR	5033351	CastTarget	const byte *		5033243	0					
ANR	5033352	UnaryOperationExpression	& p -> MatrixA		5033243	1					
ANR	5033353	UnaryOperator	&		5033243	0					
ANR	5033354	PtrMemberAccess	p -> MatrixA		5033243	1					
ANR	5033355	Identifier	p		5033243	0					
ANR	5033356	Identifier	MatrixA		5033243	1					
ANR	5033357	Argument	sizeof ( p -> MatrixA )		5033243	2					
ANR	5033358	SizeofExpression	sizeof ( p -> MatrixA )		5033243	0					
ANR	5033359	Sizeof	sizeof		5033243	0					
ANR	5033360	PtrMemberAccess	p -> MatrixA		5033243	1					
ANR	5033361	Identifier	p		5033243	0					
ANR	5033362	Identifier	MatrixA		5033243	1					
ANR	5033363	Argument	& n		5033243	3					
ANR	5033364	UnaryOperationExpression	& n		5033243	0					
ANR	5033365	UnaryOperator	&		5033243	0					
ANR	5033366	Identifier	n		5033243	1					
ANR	5033367	ReturnType	static int		5033243	1					
ANR	5033368	Identifier	gx_serialize_CIEA		5033243	2					
ANR	5033369	ParameterList	"const gs_color_space * pcs , stream * s"		5033243	3					
ANR	5033370	Parameter	const gs_color_space * pcs	446:18:13865:13890	5033243	0	True				
ANR	5033371	ParameterType	const gs_color_space *		5033243	0					
ANR	5033372	Identifier	pcs		5033243	1					
ANR	5033373	Parameter	stream * s	446:46:13893:13902	5033243	1	True				
ANR	5033374	ParameterType	stream *		5033243	0					
ANR	5033375	Identifier	s		5033243	1					
ANR	5033376	CFGEntryNode	ENTRY		5033243		True				
ANR	5033377	CFGExitNode	EXIT		5033243		True				
ANR	5033378	Symbol	pcs		5033243						
ANR	5033379	Symbol	p -> caches . DecodeA		5033243						
ANR	5033380	Symbol	& p -> MatrixA		5033243						
ANR	5033381	Symbol	code		5033243						
ANR	5033382	Symbol	pcs -> params		5033243						
ANR	5033383	Symbol	& p -> caches		5033243						
ANR	5033384	Symbol	p -> RangeA		5033243						
ANR	5033385	Symbol	* pcs		5033243						
ANR	5033386	Symbol	gx_serialize_cie_common_elements		5033243						
ANR	5033387	Symbol	n		5033243						
ANR	5033388	Symbol	gx_serialize_cie_cache		5033243						
ANR	5033389	Symbol	p -> MatrixA		5033243						
ANR	5033390	Symbol	p		5033243						
ANR	5033391	Symbol	s		5033243						
ANR	5033392	Symbol	& p -> caches . DecodeA		5033243						
ANR	5033393	Symbol	& n		5033243						
ANR	5033394	Symbol	p -> caches		5033243						
ANR	5033395	Symbol	pcs -> params . a		5033243						
ANR	5033396	Symbol	& p -> RangeA		5033243						
ANR	5033397	Symbol	* p		5033243						
ANR	5033398	Symbol	& p -> caches . DecodeA . floats		5033243						
ANR	5033399	Symbol	sputs		5033243						
ANR	5033400	Function	gx_serialize_CIEABC	463:0:14344:15093							
ANR	5033401	FunctionDef	"gx_serialize_CIEABC (const gs_color_space * pcs , stream * s)"		5033400	0					
ANR	5033402	CompoundStatement		465:0:14415:15093	5033400	0					
ANR	5033403	IdentifierDeclStatement	const gs_cie_abc * p = pcs -> params . abc ;	466:4:14421:14459	5033400	0	True				
ANR	5033404	IdentifierDecl	* p = pcs -> params . abc		5033400	0					
ANR	5033405	IdentifierDeclType	const gs_cie_abc *		5033400	0					
ANR	5033406	Identifier	p		5033400	1					
ANR	5033407	AssignmentExpression	* p = pcs -> params . abc		5033400	2		=			
ANR	5033408	Identifier	p		5033400	0					
ANR	5033409	MemberAccess	pcs -> params . abc		5033400	1					
ANR	5033410	PtrMemberAccess	pcs -> params		5033400	0					
ANR	5033411	Identifier	pcs		5033400	0					
ANR	5033412	Identifier	params		5033400	1					
ANR	5033413	Identifier	abc		5033400	1					
ANR	5033414	IdentifierDeclStatement	"uint n , k ;"	467:4:14465:14474	5033400	1	True				
ANR	5033415	IdentifierDecl	n		5033400	0					
ANR	5033416	IdentifierDeclType	uint		5033400	0					
ANR	5033417	Identifier	n		5033400	1					
ANR	5033418	IdentifierDecl	k		5033400	1					
ANR	5033419	IdentifierDeclType	uint		5033400	0					
ANR	5033420	Identifier	k		5033400	1					
ANR	5033421	IdentifierDeclStatement	"int code = gx_serialize_cie_common_elements ( pcs , s ) ;"	468:4:14480:14531	5033400	2	True				
ANR	5033422	IdentifierDecl	"code = gx_serialize_cie_common_elements ( pcs , s )"		5033400	0					
ANR	5033423	IdentifierDeclType	int		5033400	0					
ANR	5033424	Identifier	code		5033400	1					
ANR	5033425	AssignmentExpression	"code = gx_serialize_cie_common_elements ( pcs , s )"		5033400	2		=			
ANR	5033426	Identifier	code		5033400	0					
ANR	5033427	CallExpression	"gx_serialize_cie_common_elements ( pcs , s )"		5033400	1					
ANR	5033428	Callee	gx_serialize_cie_common_elements		5033400	0					
ANR	5033429	Identifier	gx_serialize_cie_common_elements		5033400	0					
ANR	5033430	ArgumentList	pcs		5033400	1					
ANR	5033431	Argument	pcs		5033400	0					
ANR	5033432	Identifier	pcs		5033400	0					
ANR	5033433	Argument	s		5033400	1					
ANR	5033434	Identifier	s		5033400	0					
ANR	5033435	IfStatement	if ( code < 0 )		5033400	3					
ANR	5033436	Condition	code < 0	470:8:14542:14549	5033400	0	True				
ANR	5033437	RelationalExpression	code < 0		5033400	0		<			
ANR	5033438	Identifier	code		5033400	0					
ANR	5033439	PrimaryExpression	0		5033400	1					
ANR	5033440	ReturnStatement	return code ;	471:8:14560:14571	5033400	1	True				
ANR	5033441	Identifier	code		5033400	0					
ANR	5033442	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> RangeABC , sizeof ( p -> RangeABC ) , & n )"	472:4:14577:14645	5033400	4	True				
ANR	5033443	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> RangeABC , sizeof ( p -> RangeABC ) , & n )"		5033400	0		=			
ANR	5033444	Identifier	code		5033400	0					
ANR	5033445	CallExpression	"sputs ( s , ( const byte * ) & p -> RangeABC , sizeof ( p -> RangeABC ) , & n )"		5033400	1					
ANR	5033446	Callee	sputs		5033400	0					
ANR	5033447	Identifier	sputs		5033400	0					
ANR	5033448	ArgumentList	s		5033400	1					
ANR	5033449	Argument	s		5033400	0					
ANR	5033450	Identifier	s		5033400	0					
ANR	5033451	Argument	( const byte * ) & p -> RangeABC		5033400	1					
ANR	5033452	CastExpression	( const byte * ) & p -> RangeABC		5033400	0					
ANR	5033453	CastTarget	const byte *		5033400	0					
ANR	5033454	UnaryOperationExpression	& p -> RangeABC		5033400	1					
ANR	5033455	UnaryOperator	&		5033400	0					
ANR	5033456	PtrMemberAccess	p -> RangeABC		5033400	1					
ANR	5033457	Identifier	p		5033400	0					
ANR	5033458	Identifier	RangeABC		5033400	1					
ANR	5033459	Argument	sizeof ( p -> RangeABC )		5033400	2					
ANR	5033460	SizeofExpression	sizeof ( p -> RangeABC )		5033400	0					
ANR	5033461	Sizeof	sizeof		5033400	0					
ANR	5033462	PtrMemberAccess	p -> RangeABC		5033400	1					
ANR	5033463	Identifier	p		5033400	0					
ANR	5033464	Identifier	RangeABC		5033400	1					
ANR	5033465	Argument	& n		5033400	3					
ANR	5033466	UnaryOperationExpression	& n		5033400	0					
ANR	5033467	UnaryOperator	&		5033400	0					
ANR	5033468	Identifier	n		5033400	1					
ANR	5033469	IfStatement	if ( code < 0 )		5033400	5					
ANR	5033470	Condition	code < 0	473:8:14655:14662	5033400	0	True				
ANR	5033471	RelationalExpression	code < 0		5033400	0		<			
ANR	5033472	Identifier	code		5033400	0					
ANR	5033473	PrimaryExpression	0		5033400	1					
ANR	5033474	ReturnStatement	return code ;	474:8:14673:14684	5033400	1	True				
ANR	5033475	Identifier	code		5033400	0					
ANR	5033476	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> caches . skipABC , sizeof ( p -> caches . skipABC ) , & n )"	475:4:14690:14770	5033400	6	True				
ANR	5033477	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> caches . skipABC , sizeof ( p -> caches . skipABC ) , & n )"		5033400	0		=			
ANR	5033478	Identifier	code		5033400	0					
ANR	5033479	CallExpression	"sputs ( s , ( const byte * ) & p -> caches . skipABC , sizeof ( p -> caches . skipABC ) , & n )"		5033400	1					
ANR	5033480	Callee	sputs		5033400	0					
ANR	5033481	Identifier	sputs		5033400	0					
ANR	5033482	ArgumentList	s		5033400	1					
ANR	5033483	Argument	s		5033400	0					
ANR	5033484	Identifier	s		5033400	0					
ANR	5033485	Argument	( const byte * ) & p -> caches . skipABC		5033400	1					
ANR	5033486	CastExpression	( const byte * ) & p -> caches . skipABC		5033400	0					
ANR	5033487	CastTarget	const byte *		5033400	0					
ANR	5033488	UnaryOperationExpression	& p -> caches . skipABC		5033400	1					
ANR	5033489	UnaryOperator	&		5033400	0					
ANR	5033490	MemberAccess	p -> caches . skipABC		5033400	1					
ANR	5033491	PtrMemberAccess	p -> caches		5033400	0					
ANR	5033492	Identifier	p		5033400	0					
ANR	5033493	Identifier	caches		5033400	1					
ANR	5033494	Identifier	skipABC		5033400	1					
ANR	5033495	Argument	sizeof ( p -> caches . skipABC )		5033400	2					
ANR	5033496	SizeofExpression	sizeof ( p -> caches . skipABC )		5033400	0					
ANR	5033497	Sizeof	sizeof		5033400	0					
ANR	5033498	MemberAccess	p -> caches . skipABC		5033400	1					
ANR	5033499	PtrMemberAccess	p -> caches		5033400	0					
ANR	5033500	Identifier	p		5033400	0					
ANR	5033501	Identifier	caches		5033400	1					
ANR	5033502	Identifier	skipABC		5033400	1					
ANR	5033503	Argument	& n		5033400	3					
ANR	5033504	UnaryOperationExpression	& n		5033400	0					
ANR	5033505	UnaryOperator	&		5033400	0					
ANR	5033506	Identifier	n		5033400	1					
ANR	5033507	IfStatement	if ( code < 0 )		5033400	7					
ANR	5033508	Condition	code < 0	476:8:14780:14787	5033400	0	True				
ANR	5033509	RelationalExpression	code < 0		5033400	0		<			
ANR	5033510	Identifier	code		5033400	0					
ANR	5033511	PrimaryExpression	0		5033400	1					
ANR	5033512	ReturnStatement	return code ;	477:8:14798:14809	5033400	1	True				
ANR	5033513	Identifier	code		5033400	0					
ANR	5033514	IfStatement	if ( p -> caches . skipABC )		5033400	8					
ANR	5033515	Condition	p -> caches . skipABC	478:8:14819:14835	5033400	0	True				
ANR	5033516	MemberAccess	p -> caches . skipABC		5033400	0					
ANR	5033517	PtrMemberAccess	p -> caches		5033400	0					
ANR	5033518	Identifier	p		5033400	0					
ANR	5033519	Identifier	caches		5033400	1					
ANR	5033520	Identifier	skipABC		5033400	1					
ANR	5033521	ReturnStatement	return 0 ;	479:8:14846:14854	5033400	1	True				
ANR	5033522	PrimaryExpression	0		5033400	0					
ANR	5033523	ForStatement	for ( k = 0 ; k < 3 && code >= 0 ; k ++ )		5033400	9					
ANR	5033524	ForInit	k = 0 ;	480:9:14865:14870	5033400	0	True				
ANR	5033525	AssignmentExpression	k = 0		5033400	0		=			
ANR	5033526	Identifier	k		5033400	0					
ANR	5033527	PrimaryExpression	0		5033400	1					
ANR	5033528	Condition	k < 3 && code >= 0	480:16:14872:14889	5033400	1	True				
ANR	5033529	AndExpression	k < 3 && code >= 0		5033400	0		&&			
ANR	5033530	RelationalExpression	k < 3		5033400	0		<			
ANR	5033531	Identifier	k		5033400	0					
ANR	5033532	PrimaryExpression	3		5033400	1					
ANR	5033533	RelationalExpression	code >= 0		5033400	1		>=			
ANR	5033534	Identifier	code		5033400	0					
ANR	5033535	PrimaryExpression	0		5033400	1					
ANR	5033536	PostIncDecOperationExpression	k ++	480:36:14892:14894	5033400	2	True				
ANR	5033537	Identifier	k		5033400	0					
ANR	5033538	IncDec	++		5033400	1					
ANR	5033539	ExpressionStatement	"code = gx_serialize_cie_cache ( & p -> caches . DecodeABC . caches [ k ] . floats , s )"	481:8:14905:14976	5033400	3	True				
ANR	5033540	AssignmentExpression	"code = gx_serialize_cie_cache ( & p -> caches . DecodeABC . caches [ k ] . floats , s )"		5033400	0		=			
ANR	5033541	Identifier	code		5033400	0					
ANR	5033542	CallExpression	"gx_serialize_cie_cache ( & p -> caches . DecodeABC . caches [ k ] . floats , s )"		5033400	1					
ANR	5033543	Callee	gx_serialize_cie_cache		5033400	0					
ANR	5033544	Identifier	gx_serialize_cie_cache		5033400	0					
ANR	5033545	ArgumentList	& p -> caches . DecodeABC . caches [ k ] . floats		5033400	1					
ANR	5033546	Argument	& p -> caches . DecodeABC . caches [ k ] . floats		5033400	0					
ANR	5033547	UnaryOperationExpression	& p -> caches . DecodeABC . caches [ k ] . floats		5033400	0					
ANR	5033548	UnaryOperator	&		5033400	0					
ANR	5033549	MemberAccess	p -> caches . DecodeABC . caches [ k ] . floats		5033400	1					
ANR	5033550	ArrayIndexing	p -> caches . DecodeABC . caches [ k ]		5033400	0					
ANR	5033551	MemberAccess	p -> caches . DecodeABC . caches		5033400	0					
ANR	5033552	MemberAccess	p -> caches . DecodeABC		5033400	0					
ANR	5033553	PtrMemberAccess	p -> caches		5033400	0					
ANR	5033554	Identifier	p		5033400	0					
ANR	5033555	Identifier	caches		5033400	1					
ANR	5033556	Identifier	DecodeABC		5033400	1					
ANR	5033557	Identifier	caches		5033400	1					
ANR	5033558	Identifier	k		5033400	1					
ANR	5033559	Identifier	floats		5033400	1					
ANR	5033560	Argument	s		5033400	1					
ANR	5033561	Identifier	s		5033400	0					
ANR	5033562	IfStatement	if ( code < 0 )		5033400	10					
ANR	5033563	Condition	code < 0	482:8:14986:14993	5033400	0	True				
ANR	5033564	RelationalExpression	code < 0		5033400	0		<			
ANR	5033565	Identifier	code		5033400	0					
ANR	5033566	PrimaryExpression	0		5033400	1					
ANR	5033567	ReturnStatement	return code ;	483:8:15004:15015	5033400	1	True				
ANR	5033568	Identifier	code		5033400	0					
ANR	5033569	ReturnStatement	"return sputs ( s , ( const byte * ) & p -> MatrixABC , sizeof ( p -> MatrixABC ) , & n ) ;"	484:4:15021:15091	5033400	11	True				
ANR	5033570	CallExpression	"sputs ( s , ( const byte * ) & p -> MatrixABC , sizeof ( p -> MatrixABC ) , & n )"		5033400	0					
ANR	5033571	Callee	sputs		5033400	0					
ANR	5033572	Identifier	sputs		5033400	0					
ANR	5033573	ArgumentList	s		5033400	1					
ANR	5033574	Argument	s		5033400	0					
ANR	5033575	Identifier	s		5033400	0					
ANR	5033576	Argument	( const byte * ) & p -> MatrixABC		5033400	1					
ANR	5033577	CastExpression	( const byte * ) & p -> MatrixABC		5033400	0					
ANR	5033578	CastTarget	const byte *		5033400	0					
ANR	5033579	UnaryOperationExpression	& p -> MatrixABC		5033400	1					
ANR	5033580	UnaryOperator	&		5033400	0					
ANR	5033581	PtrMemberAccess	p -> MatrixABC		5033400	1					
ANR	5033582	Identifier	p		5033400	0					
ANR	5033583	Identifier	MatrixABC		5033400	1					
ANR	5033584	Argument	sizeof ( p -> MatrixABC )		5033400	2					
ANR	5033585	SizeofExpression	sizeof ( p -> MatrixABC )		5033400	0					
ANR	5033586	Sizeof	sizeof		5033400	0					
ANR	5033587	PtrMemberAccess	p -> MatrixABC		5033400	1					
ANR	5033588	Identifier	p		5033400	0					
ANR	5033589	Identifier	MatrixABC		5033400	1					
ANR	5033590	Argument	& n		5033400	3					
ANR	5033591	UnaryOperationExpression	& n		5033400	0					
ANR	5033592	UnaryOperator	&		5033400	0					
ANR	5033593	Identifier	n		5033400	1					
ANR	5033594	ReturnType	static int		5033400	1					
ANR	5033595	Identifier	gx_serialize_CIEABC		5033400	2					
ANR	5033596	ParameterList	"const gs_color_space * pcs , stream * s"		5033400	3					
ANR	5033597	Parameter	const gs_color_space * pcs	464:20:14375:14400	5033400	0	True				
ANR	5033598	ParameterType	const gs_color_space *		5033400	0					
ANR	5033599	Identifier	pcs		5033400	1					
ANR	5033600	Parameter	stream * s	464:48:14403:14412	5033400	1	True				
ANR	5033601	ParameterType	stream *		5033400	0					
ANR	5033602	Identifier	s		5033400	1					
ANR	5033603	CFGEntryNode	ENTRY		5033400		True				
ANR	5033604	CFGExitNode	EXIT		5033400		True				
ANR	5033605	Symbol	* p -> caches . DecodeABC		5033400						
ANR	5033606	Symbol	code		5033400						
ANR	5033607	Symbol	p -> caches . skipABC		5033400						
ANR	5033608	Symbol	* pcs		5033400						
ANR	5033609	Symbol	gx_serialize_cie_common_elements		5033400						
ANR	5033610	Symbol	* p -> caches . DecodeABC . caches		5033400						
ANR	5033611	Symbol	pcs -> params . abc		5033400						
ANR	5033612	Symbol	gx_serialize_cie_cache		5033400						
ANR	5033613	Symbol	p -> caches . DecodeABC . caches		5033400						
ANR	5033614	Symbol	p -> caches		5033400						
ANR	5033615	Symbol	p -> RangeABC		5033400						
ANR	5033616	Symbol	* * p		5033400						
ANR	5033617	Symbol	& p -> caches . skipABC		5033400						
ANR	5033618	Symbol	pcs		5033400						
ANR	5033619	Symbol	& p -> RangeABC		5033400						
ANR	5033620	Symbol	& p -> caches . DecodeABC . caches [ k ] . floats		5033400						
ANR	5033621	Symbol	pcs -> params		5033400						
ANR	5033622	Symbol	& p -> caches		5033400						
ANR	5033623	Symbol	* p -> caches		5033400						
ANR	5033624	Symbol	k		5033400						
ANR	5033625	Symbol	n		5033400						
ANR	5033626	Symbol	p -> caches . DecodeABC		5033400						
ANR	5033627	Symbol	p		5033400						
ANR	5033628	Symbol	s		5033400						
ANR	5033629	Symbol	& n		5033400						
ANR	5033630	Symbol	p -> MatrixABC		5033400						
ANR	5033631	Symbol	* k		5033400						
ANR	5033632	Symbol	& p -> MatrixABC		5033400						
ANR	5033633	Symbol	* p		5033400						
ANR	5033634	Symbol	sputs		5033400						
ANR	5033635	Function	gx_serialize_lookup_table	487:0:15096:15703							
ANR	5033636	FunctionDef	"gx_serialize_lookup_table (const gx_color_lookup_table * t , stream * s)"		5033635	0					
ANR	5033637	CompoundStatement		489:0:15178:15703	5033635	0					
ANR	5033638	IdentifierDeclStatement	uint n ;	490:4:15184:15190	5033635	0	True				
ANR	5033639	IdentifierDecl	n		5033635	0					
ANR	5033640	IdentifierDeclType	uint		5033635	0					
ANR	5033641	Identifier	n		5033635	1					
ANR	5033642	IdentifierDeclStatement	"int code = sputs ( s , ( const byte * ) & t -> n , sizeof ( t -> n ) , & n ) ;"	491:4:15196:15254	5033635	1	True				
ANR	5033643	IdentifierDecl	"code = sputs ( s , ( const byte * ) & t -> n , sizeof ( t -> n ) , & n )"		5033635	0					
ANR	5033644	IdentifierDeclType	int		5033635	0					
ANR	5033645	Identifier	code		5033635	1					
ANR	5033646	AssignmentExpression	"code = sputs ( s , ( const byte * ) & t -> n , sizeof ( t -> n ) , & n )"		5033635	2		=			
ANR	5033647	Identifier	code		5033635	0					
ANR	5033648	CallExpression	"sputs ( s , ( const byte * ) & t -> n , sizeof ( t -> n ) , & n )"		5033635	1					
ANR	5033649	Callee	sputs		5033635	0					
ANR	5033650	Identifier	sputs		5033635	0					
ANR	5033651	ArgumentList	s		5033635	1					
ANR	5033652	Argument	s		5033635	0					
ANR	5033653	Identifier	s		5033635	0					
ANR	5033654	Argument	( const byte * ) & t -> n		5033635	1					
ANR	5033655	CastExpression	( const byte * ) & t -> n		5033635	0					
ANR	5033656	CastTarget	const byte *		5033635	0					
ANR	5033657	UnaryOperationExpression	& t -> n		5033635	1					
ANR	5033658	UnaryOperator	&		5033635	0					
ANR	5033659	PtrMemberAccess	t -> n		5033635	1					
ANR	5033660	Identifier	t		5033635	0					
ANR	5033661	Identifier	n		5033635	1					
ANR	5033662	Argument	sizeof ( t -> n )		5033635	2					
ANR	5033663	SizeofExpression	sizeof ( t -> n )		5033635	0					
ANR	5033664	Sizeof	sizeof		5033635	0					
ANR	5033665	PtrMemberAccess	t -> n		5033635	1					
ANR	5033666	Identifier	t		5033635	0					
ANR	5033667	Identifier	n		5033635	1					
ANR	5033668	Argument	& n		5033635	3					
ANR	5033669	UnaryOperationExpression	& n		5033635	0					
ANR	5033670	UnaryOperator	&		5033635	0					
ANR	5033671	Identifier	n		5033635	1					
ANR	5033672	IfStatement	if ( code < 0 )		5033635	2					
ANR	5033673	Condition	code < 0	493:8:15265:15272	5033635	0	True				
ANR	5033674	RelationalExpression	code < 0		5033635	0		<			
ANR	5033675	Identifier	code		5033635	0					
ANR	5033676	PrimaryExpression	0		5033635	1					
ANR	5033677	ReturnStatement	return code ;	494:8:15283:15294	5033635	1	True				
ANR	5033678	Identifier	code		5033635	0					
ANR	5033679	ExpressionStatement	"code = sputs ( s , ( const byte * ) & t -> dims [ 0 ] , sizeof ( t -> dims [ 0 ] ) * t -> n , & n )"	495:4:15300:15373	5033635	3	True				
ANR	5033680	AssignmentExpression	"code = sputs ( s , ( const byte * ) & t -> dims [ 0 ] , sizeof ( t -> dims [ 0 ] ) * t -> n , & n )"		5033635	0		=			
ANR	5033681	Identifier	code		5033635	0					
ANR	5033682	CallExpression	"sputs ( s , ( const byte * ) & t -> dims [ 0 ] , sizeof ( t -> dims [ 0 ] ) * t -> n , & n )"		5033635	1					
ANR	5033683	Callee	sputs		5033635	0					
ANR	5033684	Identifier	sputs		5033635	0					
ANR	5033685	ArgumentList	s		5033635	1					
ANR	5033686	Argument	s		5033635	0					
ANR	5033687	Identifier	s		5033635	0					
ANR	5033688	Argument	( const byte * ) & t -> dims [ 0 ]		5033635	1					
ANR	5033689	CastExpression	( const byte * ) & t -> dims [ 0 ]		5033635	0					
ANR	5033690	CastTarget	const byte *		5033635	0					
ANR	5033691	UnaryOperationExpression	& t -> dims [ 0 ]		5033635	1					
ANR	5033692	UnaryOperator	&		5033635	0					
ANR	5033693	ArrayIndexing	t -> dims [ 0 ]		5033635	1					
ANR	5033694	PtrMemberAccess	t -> dims		5033635	0					
ANR	5033695	Identifier	t		5033635	0					
ANR	5033696	Identifier	dims		5033635	1					
ANR	5033697	PrimaryExpression	0		5033635	1					
ANR	5033698	Argument	sizeof ( t -> dims [ 0 ] ) * t -> n		5033635	2					
ANR	5033699	MultiplicativeExpression	sizeof ( t -> dims [ 0 ] ) * t -> n		5033635	0		*			
ANR	5033700	SizeofExpression	sizeof ( t -> dims [ 0 ] )		5033635	0					
ANR	5033701	Sizeof	sizeof		5033635	0					
ANR	5033702	ArrayIndexing	t -> dims [ 0 ]		5033635	1					
ANR	5033703	PtrMemberAccess	t -> dims		5033635	0					
ANR	5033704	Identifier	t		5033635	0					
ANR	5033705	Identifier	dims		5033635	1					
ANR	5033706	PrimaryExpression	0		5033635	1					
ANR	5033707	PtrMemberAccess	t -> n		5033635	1					
ANR	5033708	Identifier	t		5033635	0					
ANR	5033709	Identifier	n		5033635	1					
ANR	5033710	Argument	& n		5033635	3					
ANR	5033711	UnaryOperationExpression	& n		5033635	0					
ANR	5033712	UnaryOperator	&		5033635	0					
ANR	5033713	Identifier	n		5033635	1					
ANR	5033714	IfStatement	if ( code < 0 )		5033635	4					
ANR	5033715	Condition	code < 0	496:8:15383:15390	5033635	0	True				
ANR	5033716	RelationalExpression	code < 0		5033635	0		<			
ANR	5033717	Identifier	code		5033635	0					
ANR	5033718	PrimaryExpression	0		5033635	1					
ANR	5033719	ReturnStatement	return code ;	497:8:15401:15412	5033635	1	True				
ANR	5033720	Identifier	code		5033635	0					
ANR	5033721	ExpressionStatement	"code = sputs ( s , ( const byte * ) & t -> m , sizeof ( t -> m ) , & n )"	498:4:15418:15472	5033635	5	True				
ANR	5033722	AssignmentExpression	"code = sputs ( s , ( const byte * ) & t -> m , sizeof ( t -> m ) , & n )"		5033635	0		=			
ANR	5033723	Identifier	code		5033635	0					
ANR	5033724	CallExpression	"sputs ( s , ( const byte * ) & t -> m , sizeof ( t -> m ) , & n )"		5033635	1					
ANR	5033725	Callee	sputs		5033635	0					
ANR	5033726	Identifier	sputs		5033635	0					
ANR	5033727	ArgumentList	s		5033635	1					
ANR	5033728	Argument	s		5033635	0					
ANR	5033729	Identifier	s		5033635	0					
ANR	5033730	Argument	( const byte * ) & t -> m		5033635	1					
ANR	5033731	CastExpression	( const byte * ) & t -> m		5033635	0					
ANR	5033732	CastTarget	const byte *		5033635	0					
ANR	5033733	UnaryOperationExpression	& t -> m		5033635	1					
ANR	5033734	UnaryOperator	&		5033635	0					
ANR	5033735	PtrMemberAccess	t -> m		5033635	1					
ANR	5033736	Identifier	t		5033635	0					
ANR	5033737	Identifier	m		5033635	1					
ANR	5033738	Argument	sizeof ( t -> m )		5033635	2					
ANR	5033739	SizeofExpression	sizeof ( t -> m )		5033635	0					
ANR	5033740	Sizeof	sizeof		5033635	0					
ANR	5033741	PtrMemberAccess	t -> m		5033635	1					
ANR	5033742	Identifier	t		5033635	0					
ANR	5033743	Identifier	m		5033635	1					
ANR	5033744	Argument	& n		5033635	3					
ANR	5033745	UnaryOperationExpression	& n		5033635	0					
ANR	5033746	UnaryOperator	&		5033635	0					
ANR	5033747	Identifier	n		5033635	1					
ANR	5033748	IfStatement	if ( code < 0 )		5033635	6					
ANR	5033749	Condition	code < 0	499:8:15482:15489	5033635	0	True				
ANR	5033750	RelationalExpression	code < 0		5033635	0		<			
ANR	5033751	Identifier	code		5033635	0					
ANR	5033752	PrimaryExpression	0		5033635	1					
ANR	5033753	ReturnStatement	return code ;	500:8:15500:15511	5033635	1	True				
ANR	5033754	Identifier	code		5033635	0					
ANR	5033755	ExpressionStatement	"code = sputs ( s , ( const byte * ) & t -> table -> size , sizeof ( t -> table -> size ) , & n )"	501:4:15517:15591	5033635	7	True				
ANR	5033756	AssignmentExpression	"code = sputs ( s , ( const byte * ) & t -> table -> size , sizeof ( t -> table -> size ) , & n )"		5033635	0		=			
ANR	5033757	Identifier	code		5033635	0					
ANR	5033758	CallExpression	"sputs ( s , ( const byte * ) & t -> table -> size , sizeof ( t -> table -> size ) , & n )"		5033635	1					
ANR	5033759	Callee	sputs		5033635	0					
ANR	5033760	Identifier	sputs		5033635	0					
ANR	5033761	ArgumentList	s		5033635	1					
ANR	5033762	Argument	s		5033635	0					
ANR	5033763	Identifier	s		5033635	0					
ANR	5033764	Argument	( const byte * ) & t -> table -> size		5033635	1					
ANR	5033765	CastExpression	( const byte * ) & t -> table -> size		5033635	0					
ANR	5033766	CastTarget	const byte *		5033635	0					
ANR	5033767	UnaryOperationExpression	& t -> table -> size		5033635	1					
ANR	5033768	UnaryOperator	&		5033635	0					
ANR	5033769	PtrMemberAccess	t -> table -> size		5033635	1					
ANR	5033770	PtrMemberAccess	t -> table		5033635	0					
ANR	5033771	Identifier	t		5033635	0					
ANR	5033772	Identifier	table		5033635	1					
ANR	5033773	Identifier	size		5033635	1					
ANR	5033774	Argument	sizeof ( t -> table -> size )		5033635	2					
ANR	5033775	SizeofExpression	sizeof ( t -> table -> size )		5033635	0					
ANR	5033776	Sizeof	sizeof		5033635	0					
ANR	5033777	PtrMemberAccess	t -> table -> size		5033635	1					
ANR	5033778	PtrMemberAccess	t -> table		5033635	0					
ANR	5033779	Identifier	t		5033635	0					
ANR	5033780	Identifier	table		5033635	1					
ANR	5033781	Identifier	size		5033635	1					
ANR	5033782	Argument	& n		5033635	3					
ANR	5033783	UnaryOperationExpression	& n		5033635	0					
ANR	5033784	UnaryOperator	&		5033635	0					
ANR	5033785	Identifier	n		5033635	1					
ANR	5033786	IfStatement	if ( code < 0 )		5033635	8					
ANR	5033787	Condition	code < 0	502:8:15601:15608	5033635	0	True				
ANR	5033788	RelationalExpression	code < 0		5033635	0		<			
ANR	5033789	Identifier	code		5033635	0					
ANR	5033790	PrimaryExpression	0		5033635	1					
ANR	5033791	ReturnStatement	return code ;	503:8:15619:15630	5033635	1	True				
ANR	5033792	Identifier	code		5033635	0					
ANR	5033793	ReturnStatement	"return sputs ( s , ( const byte * ) t -> table -> data , t -> table -> size , & n ) ;"	504:4:15636:15701	5033635	9	True				
ANR	5033794	CallExpression	"sputs ( s , ( const byte * ) t -> table -> data , t -> table -> size , & n )"		5033635	0					
ANR	5033795	Callee	sputs		5033635	0					
ANR	5033796	Identifier	sputs		5033635	0					
ANR	5033797	ArgumentList	s		5033635	1					
ANR	5033798	Argument	s		5033635	0					
ANR	5033799	Identifier	s		5033635	0					
ANR	5033800	Argument	( const byte * ) t -> table -> data		5033635	1					
ANR	5033801	CastExpression	( const byte * ) t -> table -> data		5033635	0					
ANR	5033802	CastTarget	const byte *		5033635	0					
ANR	5033803	PtrMemberAccess	t -> table -> data		5033635	1					
ANR	5033804	PtrMemberAccess	t -> table		5033635	0					
ANR	5033805	Identifier	t		5033635	0					
ANR	5033806	Identifier	table		5033635	1					
ANR	5033807	Identifier	data		5033635	1					
ANR	5033808	Argument	t -> table -> size		5033635	2					
ANR	5033809	PtrMemberAccess	t -> table -> size		5033635	0					
ANR	5033810	PtrMemberAccess	t -> table		5033635	0					
ANR	5033811	Identifier	t		5033635	0					
ANR	5033812	Identifier	table		5033635	1					
ANR	5033813	Identifier	size		5033635	1					
ANR	5033814	Argument	& n		5033635	3					
ANR	5033815	UnaryOperationExpression	& n		5033635	0					
ANR	5033816	UnaryOperator	&		5033635	0					
ANR	5033817	Identifier	n		5033635	1					
ANR	5033818	ReturnType	static int		5033635	1					
ANR	5033819	Identifier	gx_serialize_lookup_table		5033635	2					
ANR	5033820	ParameterList	"const gx_color_lookup_table * t , stream * s"		5033635	3					
ANR	5033821	Parameter	const gx_color_lookup_table * t	488:26:15133:15163	5033635	0	True				
ANR	5033822	ParameterType	const gx_color_lookup_table *		5033635	0					
ANR	5033823	Identifier	t		5033635	1					
ANR	5033824	Parameter	stream * s	488:59:15166:15175	5033635	1	True				
ANR	5033825	ParameterType	stream *		5033635	0					
ANR	5033826	Identifier	s		5033635	1					
ANR	5033827	CFGEntryNode	ENTRY		5033635		True				
ANR	5033828	CFGExitNode	EXIT		5033635		True				
ANR	5033829	Symbol	t -> m		5033635						
ANR	5033830	Symbol	t -> n		5033635						
ANR	5033831	Symbol	code		5033635						
ANR	5033832	Symbol	* t -> dims		5033635						
ANR	5033833	Symbol	t -> table -> size		5033635						
ANR	5033834	Symbol	n		5033635						
ANR	5033835	Symbol	t -> table -> data		5033635						
ANR	5033836	Symbol	t -> dims		5033635						
ANR	5033837	Symbol	* t -> table		5033635						
ANR	5033838	Symbol	s		5033635						
ANR	5033839	Symbol	t		5033635						
ANR	5033840	Symbol	& n		5033635						
ANR	5033841	Symbol	& t -> table -> size		5033635						
ANR	5033842	Symbol	* * t		5033635						
ANR	5033843	Symbol	& t -> m		5033635						
ANR	5033844	Symbol	& t -> n		5033635						
ANR	5033845	Symbol	t -> table		5033635						
ANR	5033846	Symbol	* t		5033635						
ANR	5033847	Symbol	sputs		5033635						
ANR	5033848	Function	gx_serialize_CIEDEF	507:0:15706:16371							
ANR	5033849	FunctionDef	"gx_serialize_CIEDEF (const gs_color_space * pcs , stream * s)"		5033848	0					
ANR	5033850	CompoundStatement		509:0:15777:16371	5033848	0					
ANR	5033851	IdentifierDeclStatement	const gs_cie_def * p = pcs -> params . def ;	510:4:15783:15821	5033848	0	True				
ANR	5033852	IdentifierDecl	* p = pcs -> params . def		5033848	0					
ANR	5033853	IdentifierDeclType	const gs_cie_def *		5033848	0					
ANR	5033854	Identifier	p		5033848	1					
ANR	5033855	AssignmentExpression	* p = pcs -> params . def		5033848	2		=			
ANR	5033856	Identifier	p		5033848	0					
ANR	5033857	MemberAccess	pcs -> params . def		5033848	1					
ANR	5033858	PtrMemberAccess	pcs -> params		5033848	0					
ANR	5033859	Identifier	pcs		5033848	0					
ANR	5033860	Identifier	params		5033848	1					
ANR	5033861	Identifier	def		5033848	1					
ANR	5033862	IdentifierDeclStatement	"uint n , k ;"	511:4:15827:15836	5033848	1	True				
ANR	5033863	IdentifierDecl	n		5033848	0					
ANR	5033864	IdentifierDeclType	uint		5033848	0					
ANR	5033865	Identifier	n		5033848	1					
ANR	5033866	IdentifierDecl	k		5033848	1					
ANR	5033867	IdentifierDeclType	uint		5033848	0					
ANR	5033868	Identifier	k		5033848	1					
ANR	5033869	IdentifierDeclStatement	"int code = gx_serialize_cie_common_elements ( pcs , s ) ;"	512:4:15842:15893	5033848	2	True				
ANR	5033870	IdentifierDecl	"code = gx_serialize_cie_common_elements ( pcs , s )"		5033848	0					
ANR	5033871	IdentifierDeclType	int		5033848	0					
ANR	5033872	Identifier	code		5033848	1					
ANR	5033873	AssignmentExpression	"code = gx_serialize_cie_common_elements ( pcs , s )"		5033848	2		=			
ANR	5033874	Identifier	code		5033848	0					
ANR	5033875	CallExpression	"gx_serialize_cie_common_elements ( pcs , s )"		5033848	1					
ANR	5033876	Callee	gx_serialize_cie_common_elements		5033848	0					
ANR	5033877	Identifier	gx_serialize_cie_common_elements		5033848	0					
ANR	5033878	ArgumentList	pcs		5033848	1					
ANR	5033879	Argument	pcs		5033848	0					
ANR	5033880	Identifier	pcs		5033848	0					
ANR	5033881	Argument	s		5033848	1					
ANR	5033882	Identifier	s		5033848	0					
ANR	5033883	IfStatement	if ( code < 0 )		5033848	3					
ANR	5033884	Condition	code < 0	514:8:15904:15911	5033848	0	True				
ANR	5033885	RelationalExpression	code < 0		5033848	0		<			
ANR	5033886	Identifier	code		5033848	0					
ANR	5033887	PrimaryExpression	0		5033848	1					
ANR	5033888	ReturnStatement	return code ;	515:8:15922:15933	5033848	1	True				
ANR	5033889	Identifier	code		5033848	0					
ANR	5033890	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> RangeDEF , sizeof ( p -> RangeDEF ) , & n )"	516:4:15939:16007	5033848	4	True				
ANR	5033891	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> RangeDEF , sizeof ( p -> RangeDEF ) , & n )"		5033848	0		=			
ANR	5033892	Identifier	code		5033848	0					
ANR	5033893	CallExpression	"sputs ( s , ( const byte * ) & p -> RangeDEF , sizeof ( p -> RangeDEF ) , & n )"		5033848	1					
ANR	5033894	Callee	sputs		5033848	0					
ANR	5033895	Identifier	sputs		5033848	0					
ANR	5033896	ArgumentList	s		5033848	1					
ANR	5033897	Argument	s		5033848	0					
ANR	5033898	Identifier	s		5033848	0					
ANR	5033899	Argument	( const byte * ) & p -> RangeDEF		5033848	1					
ANR	5033900	CastExpression	( const byte * ) & p -> RangeDEF		5033848	0					
ANR	5033901	CastTarget	const byte *		5033848	0					
ANR	5033902	UnaryOperationExpression	& p -> RangeDEF		5033848	1					
ANR	5033903	UnaryOperator	&		5033848	0					
ANR	5033904	PtrMemberAccess	p -> RangeDEF		5033848	1					
ANR	5033905	Identifier	p		5033848	0					
ANR	5033906	Identifier	RangeDEF		5033848	1					
ANR	5033907	Argument	sizeof ( p -> RangeDEF )		5033848	2					
ANR	5033908	SizeofExpression	sizeof ( p -> RangeDEF )		5033848	0					
ANR	5033909	Sizeof	sizeof		5033848	0					
ANR	5033910	PtrMemberAccess	p -> RangeDEF		5033848	1					
ANR	5033911	Identifier	p		5033848	0					
ANR	5033912	Identifier	RangeDEF		5033848	1					
ANR	5033913	Argument	& n		5033848	3					
ANR	5033914	UnaryOperationExpression	& n		5033848	0					
ANR	5033915	UnaryOperator	&		5033848	0					
ANR	5033916	Identifier	n		5033848	1					
ANR	5033917	IfStatement	if ( code < 0 )		5033848	5					
ANR	5033918	Condition	code < 0	517:8:16017:16024	5033848	0	True				
ANR	5033919	RelationalExpression	code < 0		5033848	0		<			
ANR	5033920	Identifier	code		5033848	0					
ANR	5033921	PrimaryExpression	0		5033848	1					
ANR	5033922	ReturnStatement	return code ;	518:8:16035:16046	5033848	1	True				
ANR	5033923	Identifier	code		5033848	0					
ANR	5033924	ForStatement	for ( k = 0 ; k < 3 && code >= 0 ; k ++ )		5033848	6					
ANR	5033925	ForInit	k = 0 ;	519:9:16057:16062	5033848	0	True				
ANR	5033926	AssignmentExpression	k = 0		5033848	0		=			
ANR	5033927	Identifier	k		5033848	0					
ANR	5033928	PrimaryExpression	0		5033848	1					
ANR	5033929	Condition	k < 3 && code >= 0	519:16:16064:16081	5033848	1	True				
ANR	5033930	AndExpression	k < 3 && code >= 0		5033848	0		&&			
ANR	5033931	RelationalExpression	k < 3		5033848	0		<			
ANR	5033932	Identifier	k		5033848	0					
ANR	5033933	PrimaryExpression	3		5033848	1					
ANR	5033934	RelationalExpression	code >= 0		5033848	1		>=			
ANR	5033935	Identifier	code		5033848	0					
ANR	5033936	PrimaryExpression	0		5033848	1					
ANR	5033937	PostIncDecOperationExpression	k ++	519:36:16084:16086	5033848	2	True				
ANR	5033938	Identifier	k		5033848	0					
ANR	5033939	IncDec	++		5033848	1					
ANR	5033940	ExpressionStatement	"code = gx_serialize_cie_cache ( & p -> caches_def . DecodeDEF [ k ] . floats , s )"	520:8:16097:16165	5033848	3	True				
ANR	5033941	AssignmentExpression	"code = gx_serialize_cie_cache ( & p -> caches_def . DecodeDEF [ k ] . floats , s )"		5033848	0		=			
ANR	5033942	Identifier	code		5033848	0					
ANR	5033943	CallExpression	"gx_serialize_cie_cache ( & p -> caches_def . DecodeDEF [ k ] . floats , s )"		5033848	1					
ANR	5033944	Callee	gx_serialize_cie_cache		5033848	0					
ANR	5033945	Identifier	gx_serialize_cie_cache		5033848	0					
ANR	5033946	ArgumentList	& p -> caches_def . DecodeDEF [ k ] . floats		5033848	1					
ANR	5033947	Argument	& p -> caches_def . DecodeDEF [ k ] . floats		5033848	0					
ANR	5033948	UnaryOperationExpression	& p -> caches_def . DecodeDEF [ k ] . floats		5033848	0					
ANR	5033949	UnaryOperator	&		5033848	0					
ANR	5033950	MemberAccess	p -> caches_def . DecodeDEF [ k ] . floats		5033848	1					
ANR	5033951	ArrayIndexing	p -> caches_def . DecodeDEF [ k ]		5033848	0					
ANR	5033952	MemberAccess	p -> caches_def . DecodeDEF		5033848	0					
ANR	5033953	PtrMemberAccess	p -> caches_def		5033848	0					
ANR	5033954	Identifier	p		5033848	0					
ANR	5033955	Identifier	caches_def		5033848	1					
ANR	5033956	Identifier	DecodeDEF		5033848	1					
ANR	5033957	Identifier	k		5033848	1					
ANR	5033958	Identifier	floats		5033848	1					
ANR	5033959	Argument	s		5033848	1					
ANR	5033960	Identifier	s		5033848	0					
ANR	5033961	IfStatement	if ( code < 0 )		5033848	7					
ANR	5033962	Condition	code < 0	521:8:16175:16182	5033848	0	True				
ANR	5033963	RelationalExpression	code < 0		5033848	0		<			
ANR	5033964	Identifier	code		5033848	0					
ANR	5033965	PrimaryExpression	0		5033848	1					
ANR	5033966	ReturnStatement	return code ;	522:8:16193:16204	5033848	1	True				
ANR	5033967	Identifier	code		5033848	0					
ANR	5033968	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> RangeHIJ , sizeof ( p -> RangeHIJ ) , & n )"	523:4:16210:16278	5033848	8	True				
ANR	5033969	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> RangeHIJ , sizeof ( p -> RangeHIJ ) , & n )"		5033848	0		=			
ANR	5033970	Identifier	code		5033848	0					
ANR	5033971	CallExpression	"sputs ( s , ( const byte * ) & p -> RangeHIJ , sizeof ( p -> RangeHIJ ) , & n )"		5033848	1					
ANR	5033972	Callee	sputs		5033848	0					
ANR	5033973	Identifier	sputs		5033848	0					
ANR	5033974	ArgumentList	s		5033848	1					
ANR	5033975	Argument	s		5033848	0					
ANR	5033976	Identifier	s		5033848	0					
ANR	5033977	Argument	( const byte * ) & p -> RangeHIJ		5033848	1					
ANR	5033978	CastExpression	( const byte * ) & p -> RangeHIJ		5033848	0					
ANR	5033979	CastTarget	const byte *		5033848	0					
ANR	5033980	UnaryOperationExpression	& p -> RangeHIJ		5033848	1					
ANR	5033981	UnaryOperator	&		5033848	0					
ANR	5033982	PtrMemberAccess	p -> RangeHIJ		5033848	1					
ANR	5033983	Identifier	p		5033848	0					
ANR	5033984	Identifier	RangeHIJ		5033848	1					
ANR	5033985	Argument	sizeof ( p -> RangeHIJ )		5033848	2					
ANR	5033986	SizeofExpression	sizeof ( p -> RangeHIJ )		5033848	0					
ANR	5033987	Sizeof	sizeof		5033848	0					
ANR	5033988	PtrMemberAccess	p -> RangeHIJ		5033848	1					
ANR	5033989	Identifier	p		5033848	0					
ANR	5033990	Identifier	RangeHIJ		5033848	1					
ANR	5033991	Argument	& n		5033848	3					
ANR	5033992	UnaryOperationExpression	& n		5033848	0					
ANR	5033993	UnaryOperator	&		5033848	0					
ANR	5033994	Identifier	n		5033848	1					
ANR	5033995	IfStatement	if ( code < 0 )		5033848	9					
ANR	5033996	Condition	code < 0	524:8:16288:16295	5033848	0	True				
ANR	5033997	RelationalExpression	code < 0		5033848	0		<			
ANR	5033998	Identifier	code		5033848	0					
ANR	5033999	PrimaryExpression	0		5033848	1					
ANR	5034000	ReturnStatement	return code ;	525:8:16306:16317	5033848	1	True				
ANR	5034001	Identifier	code		5033848	0					
ANR	5034002	ReturnStatement	"return gx_serialize_lookup_table ( & p -> Table , s ) ;"	526:4:16323:16369	5033848	10	True				
ANR	5034003	CallExpression	"gx_serialize_lookup_table ( & p -> Table , s )"		5033848	0					
ANR	5034004	Callee	gx_serialize_lookup_table		5033848	0					
ANR	5034005	Identifier	gx_serialize_lookup_table		5033848	0					
ANR	5034006	ArgumentList	& p -> Table		5033848	1					
ANR	5034007	Argument	& p -> Table		5033848	0					
ANR	5034008	UnaryOperationExpression	& p -> Table		5033848	0					
ANR	5034009	UnaryOperator	&		5033848	0					
ANR	5034010	PtrMemberAccess	p -> Table		5033848	1					
ANR	5034011	Identifier	p		5033848	0					
ANR	5034012	Identifier	Table		5033848	1					
ANR	5034013	Argument	s		5033848	1					
ANR	5034014	Identifier	s		5033848	0					
ANR	5034015	ReturnType	static int		5033848	1					
ANR	5034016	Identifier	gx_serialize_CIEDEF		5033848	2					
ANR	5034017	ParameterList	"const gs_color_space * pcs , stream * s"		5033848	3					
ANR	5034018	Parameter	const gs_color_space * pcs	508:20:15737:15762	5033848	0	True				
ANR	5034019	ParameterType	const gs_color_space *		5033848	0					
ANR	5034020	Identifier	pcs		5033848	1					
ANR	5034021	Parameter	stream * s	508:48:15765:15774	5033848	1	True				
ANR	5034022	ParameterType	stream *		5033848	0					
ANR	5034023	Identifier	s		5033848	1					
ANR	5034024	CFGEntryNode	ENTRY		5033848		True				
ANR	5034025	CFGExitNode	EXIT		5033848		True				
ANR	5034026	Symbol	code		5033848						
ANR	5034027	Symbol	& p -> RangeDEF		5033848						
ANR	5034028	Symbol	* pcs		5033848						
ANR	5034029	Symbol	& p -> Table		5033848						
ANR	5034030	Symbol	gx_serialize_cie_common_elements		5033848						
ANR	5034031	Symbol	gx_serialize_cie_cache		5033848						
ANR	5034032	Symbol	* p -> caches_def . DecodeDEF		5033848						
ANR	5034033	Symbol	gx_serialize_lookup_table		5033848						
ANR	5034034	Symbol	& p -> RangeHIJ		5033848						
ANR	5034035	Symbol	* * p		5033848						
ANR	5034036	Symbol	pcs		5033848						
ANR	5034037	Symbol	* p -> caches_def		5033848						
ANR	5034038	Symbol	pcs -> params . def		5033848						
ANR	5034039	Symbol	pcs -> params		5033848						
ANR	5034040	Symbol	k		5033848						
ANR	5034041	Symbol	p -> caches_def . DecodeDEF		5033848						
ANR	5034042	Symbol	& p -> caches_def . DecodeDEF [ k ] . floats		5033848						
ANR	5034043	Symbol	n		5033848						
ANR	5034044	Symbol	p		5033848						
ANR	5034045	Symbol	s		5033848						
ANR	5034046	Symbol	& n		5033848						
ANR	5034047	Symbol	* k		5033848						
ANR	5034048	Symbol	p -> RangeHIJ		5033848						
ANR	5034049	Symbol	p -> RangeDEF		5033848						
ANR	5034050	Symbol	* p		5033848						
ANR	5034051	Symbol	sputs		5033848						
ANR	5034052	Symbol	p -> caches_def		5033848						
ANR	5034053	Function	gx_serialize_CIEDEFG	529:0:16374:17048							
ANR	5034054	FunctionDef	"gx_serialize_CIEDEFG (const gs_color_space * pcs , stream * s)"		5034053	0					
ANR	5034055	CompoundStatement		531:0:16446:17048	5034053	0					
ANR	5034056	IdentifierDeclStatement	const gs_cie_defg * p = pcs -> params . defg ;	532:4:16452:16492	5034053	0	True				
ANR	5034057	IdentifierDecl	* p = pcs -> params . defg		5034053	0					
ANR	5034058	IdentifierDeclType	const gs_cie_defg *		5034053	0					
ANR	5034059	Identifier	p		5034053	1					
ANR	5034060	AssignmentExpression	* p = pcs -> params . defg		5034053	2		=			
ANR	5034061	Identifier	p		5034053	0					
ANR	5034062	MemberAccess	pcs -> params . defg		5034053	1					
ANR	5034063	PtrMemberAccess	pcs -> params		5034053	0					
ANR	5034064	Identifier	pcs		5034053	0					
ANR	5034065	Identifier	params		5034053	1					
ANR	5034066	Identifier	defg		5034053	1					
ANR	5034067	IdentifierDeclStatement	"uint n , k ;"	533:4:16498:16507	5034053	1	True				
ANR	5034068	IdentifierDecl	n		5034053	0					
ANR	5034069	IdentifierDeclType	uint		5034053	0					
ANR	5034070	Identifier	n		5034053	1					
ANR	5034071	IdentifierDecl	k		5034053	1					
ANR	5034072	IdentifierDeclType	uint		5034053	0					
ANR	5034073	Identifier	k		5034053	1					
ANR	5034074	IdentifierDeclStatement	"int code = gx_serialize_cie_common_elements ( pcs , s ) ;"	534:4:16513:16564	5034053	2	True				
ANR	5034075	IdentifierDecl	"code = gx_serialize_cie_common_elements ( pcs , s )"		5034053	0					
ANR	5034076	IdentifierDeclType	int		5034053	0					
ANR	5034077	Identifier	code		5034053	1					
ANR	5034078	AssignmentExpression	"code = gx_serialize_cie_common_elements ( pcs , s )"		5034053	2		=			
ANR	5034079	Identifier	code		5034053	0					
ANR	5034080	CallExpression	"gx_serialize_cie_common_elements ( pcs , s )"		5034053	1					
ANR	5034081	Callee	gx_serialize_cie_common_elements		5034053	0					
ANR	5034082	Identifier	gx_serialize_cie_common_elements		5034053	0					
ANR	5034083	ArgumentList	pcs		5034053	1					
ANR	5034084	Argument	pcs		5034053	0					
ANR	5034085	Identifier	pcs		5034053	0					
ANR	5034086	Argument	s		5034053	1					
ANR	5034087	Identifier	s		5034053	0					
ANR	5034088	IfStatement	if ( code < 0 )		5034053	3					
ANR	5034089	Condition	code < 0	536:8:16575:16582	5034053	0	True				
ANR	5034090	RelationalExpression	code < 0		5034053	0		<			
ANR	5034091	Identifier	code		5034053	0					
ANR	5034092	PrimaryExpression	0		5034053	1					
ANR	5034093	ReturnStatement	return code ;	537:8:16593:16604	5034053	1	True				
ANR	5034094	Identifier	code		5034053	0					
ANR	5034095	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> RangeDEFG , sizeof ( p -> RangeDEFG ) , & n )"	538:4:16610:16680	5034053	4	True				
ANR	5034096	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> RangeDEFG , sizeof ( p -> RangeDEFG ) , & n )"		5034053	0		=			
ANR	5034097	Identifier	code		5034053	0					
ANR	5034098	CallExpression	"sputs ( s , ( const byte * ) & p -> RangeDEFG , sizeof ( p -> RangeDEFG ) , & n )"		5034053	1					
ANR	5034099	Callee	sputs		5034053	0					
ANR	5034100	Identifier	sputs		5034053	0					
ANR	5034101	ArgumentList	s		5034053	1					
ANR	5034102	Argument	s		5034053	0					
ANR	5034103	Identifier	s		5034053	0					
ANR	5034104	Argument	( const byte * ) & p -> RangeDEFG		5034053	1					
ANR	5034105	CastExpression	( const byte * ) & p -> RangeDEFG		5034053	0					
ANR	5034106	CastTarget	const byte *		5034053	0					
ANR	5034107	UnaryOperationExpression	& p -> RangeDEFG		5034053	1					
ANR	5034108	UnaryOperator	&		5034053	0					
ANR	5034109	PtrMemberAccess	p -> RangeDEFG		5034053	1					
ANR	5034110	Identifier	p		5034053	0					
ANR	5034111	Identifier	RangeDEFG		5034053	1					
ANR	5034112	Argument	sizeof ( p -> RangeDEFG )		5034053	2					
ANR	5034113	SizeofExpression	sizeof ( p -> RangeDEFG )		5034053	0					
ANR	5034114	Sizeof	sizeof		5034053	0					
ANR	5034115	PtrMemberAccess	p -> RangeDEFG		5034053	1					
ANR	5034116	Identifier	p		5034053	0					
ANR	5034117	Identifier	RangeDEFG		5034053	1					
ANR	5034118	Argument	& n		5034053	3					
ANR	5034119	UnaryOperationExpression	& n		5034053	0					
ANR	5034120	UnaryOperator	&		5034053	0					
ANR	5034121	Identifier	n		5034053	1					
ANR	5034122	IfStatement	if ( code < 0 )		5034053	5					
ANR	5034123	Condition	code < 0	539:8:16690:16697	5034053	0	True				
ANR	5034124	RelationalExpression	code < 0		5034053	0		<			
ANR	5034125	Identifier	code		5034053	0					
ANR	5034126	PrimaryExpression	0		5034053	1					
ANR	5034127	ReturnStatement	return code ;	540:8:16708:16719	5034053	1	True				
ANR	5034128	Identifier	code		5034053	0					
ANR	5034129	ForStatement	for ( k = 0 ; k < 3 && code >= 0 ; k ++ )		5034053	6					
ANR	5034130	ForInit	k = 0 ;	541:9:16730:16735	5034053	0	True				
ANR	5034131	AssignmentExpression	k = 0		5034053	0		=			
ANR	5034132	Identifier	k		5034053	0					
ANR	5034133	PrimaryExpression	0		5034053	1					
ANR	5034134	Condition	k < 3 && code >= 0	541:16:16737:16754	5034053	1	True				
ANR	5034135	AndExpression	k < 3 && code >= 0		5034053	0		&&			
ANR	5034136	RelationalExpression	k < 3		5034053	0		<			
ANR	5034137	Identifier	k		5034053	0					
ANR	5034138	PrimaryExpression	3		5034053	1					
ANR	5034139	RelationalExpression	code >= 0		5034053	1		>=			
ANR	5034140	Identifier	code		5034053	0					
ANR	5034141	PrimaryExpression	0		5034053	1					
ANR	5034142	PostIncDecOperationExpression	k ++	541:36:16757:16759	5034053	2	True				
ANR	5034143	Identifier	k		5034053	0					
ANR	5034144	IncDec	++		5034053	1					
ANR	5034145	ExpressionStatement	"code = gx_serialize_cie_cache ( & p -> caches_defg . DecodeDEFG [ k ] . floats , s )"	542:8:16770:16840	5034053	3	True				
ANR	5034146	AssignmentExpression	"code = gx_serialize_cie_cache ( & p -> caches_defg . DecodeDEFG [ k ] . floats , s )"		5034053	0		=			
ANR	5034147	Identifier	code		5034053	0					
ANR	5034148	CallExpression	"gx_serialize_cie_cache ( & p -> caches_defg . DecodeDEFG [ k ] . floats , s )"		5034053	1					
ANR	5034149	Callee	gx_serialize_cie_cache		5034053	0					
ANR	5034150	Identifier	gx_serialize_cie_cache		5034053	0					
ANR	5034151	ArgumentList	& p -> caches_defg . DecodeDEFG [ k ] . floats		5034053	1					
ANR	5034152	Argument	& p -> caches_defg . DecodeDEFG [ k ] . floats		5034053	0					
ANR	5034153	UnaryOperationExpression	& p -> caches_defg . DecodeDEFG [ k ] . floats		5034053	0					
ANR	5034154	UnaryOperator	&		5034053	0					
ANR	5034155	MemberAccess	p -> caches_defg . DecodeDEFG [ k ] . floats		5034053	1					
ANR	5034156	ArrayIndexing	p -> caches_defg . DecodeDEFG [ k ]		5034053	0					
ANR	5034157	MemberAccess	p -> caches_defg . DecodeDEFG		5034053	0					
ANR	5034158	PtrMemberAccess	p -> caches_defg		5034053	0					
ANR	5034159	Identifier	p		5034053	0					
ANR	5034160	Identifier	caches_defg		5034053	1					
ANR	5034161	Identifier	DecodeDEFG		5034053	1					
ANR	5034162	Identifier	k		5034053	1					
ANR	5034163	Identifier	floats		5034053	1					
ANR	5034164	Argument	s		5034053	1					
ANR	5034165	Identifier	s		5034053	0					
ANR	5034166	IfStatement	if ( code < 0 )		5034053	7					
ANR	5034167	Condition	code < 0	543:8:16850:16857	5034053	0	True				
ANR	5034168	RelationalExpression	code < 0		5034053	0		<			
ANR	5034169	Identifier	code		5034053	0					
ANR	5034170	PrimaryExpression	0		5034053	1					
ANR	5034171	ReturnStatement	return code ;	544:8:16868:16879	5034053	1	True				
ANR	5034172	Identifier	code		5034053	0					
ANR	5034173	ExpressionStatement	"code = sputs ( s , ( const byte * ) & p -> RangeHIJK , sizeof ( p -> RangeHIJK ) , & n )"	545:4:16885:16955	5034053	8	True				
ANR	5034174	AssignmentExpression	"code = sputs ( s , ( const byte * ) & p -> RangeHIJK , sizeof ( p -> RangeHIJK ) , & n )"		5034053	0		=			
ANR	5034175	Identifier	code		5034053	0					
ANR	5034176	CallExpression	"sputs ( s , ( const byte * ) & p -> RangeHIJK , sizeof ( p -> RangeHIJK ) , & n )"		5034053	1					
ANR	5034177	Callee	sputs		5034053	0					
ANR	5034178	Identifier	sputs		5034053	0					
ANR	5034179	ArgumentList	s		5034053	1					
ANR	5034180	Argument	s		5034053	0					
ANR	5034181	Identifier	s		5034053	0					
ANR	5034182	Argument	( const byte * ) & p -> RangeHIJK		5034053	1					
ANR	5034183	CastExpression	( const byte * ) & p -> RangeHIJK		5034053	0					
ANR	5034184	CastTarget	const byte *		5034053	0					
ANR	5034185	UnaryOperationExpression	& p -> RangeHIJK		5034053	1					
ANR	5034186	UnaryOperator	&		5034053	0					
ANR	5034187	PtrMemberAccess	p -> RangeHIJK		5034053	1					
ANR	5034188	Identifier	p		5034053	0					
ANR	5034189	Identifier	RangeHIJK		5034053	1					
ANR	5034190	Argument	sizeof ( p -> RangeHIJK )		5034053	2					
ANR	5034191	SizeofExpression	sizeof ( p -> RangeHIJK )		5034053	0					
ANR	5034192	Sizeof	sizeof		5034053	0					
ANR	5034193	PtrMemberAccess	p -> RangeHIJK		5034053	1					
ANR	5034194	Identifier	p		5034053	0					
ANR	5034195	Identifier	RangeHIJK		5034053	1					
ANR	5034196	Argument	& n		5034053	3					
ANR	5034197	UnaryOperationExpression	& n		5034053	0					
ANR	5034198	UnaryOperator	&		5034053	0					
ANR	5034199	Identifier	n		5034053	1					
ANR	5034200	IfStatement	if ( code < 0 )		5034053	9					
ANR	5034201	Condition	code < 0	546:8:16965:16972	5034053	0	True				
ANR	5034202	RelationalExpression	code < 0		5034053	0		<			
ANR	5034203	Identifier	code		5034053	0					
ANR	5034204	PrimaryExpression	0		5034053	1					
ANR	5034205	ReturnStatement	return code ;	547:8:16983:16994	5034053	1	True				
ANR	5034206	Identifier	code		5034053	0					
ANR	5034207	ReturnStatement	"return gx_serialize_lookup_table ( & p -> Table , s ) ;"	548:4:17000:17046	5034053	10	True				
ANR	5034208	CallExpression	"gx_serialize_lookup_table ( & p -> Table , s )"		5034053	0					
ANR	5034209	Callee	gx_serialize_lookup_table		5034053	0					
ANR	5034210	Identifier	gx_serialize_lookup_table		5034053	0					
ANR	5034211	ArgumentList	& p -> Table		5034053	1					
ANR	5034212	Argument	& p -> Table		5034053	0					
ANR	5034213	UnaryOperationExpression	& p -> Table		5034053	0					
ANR	5034214	UnaryOperator	&		5034053	0					
ANR	5034215	PtrMemberAccess	p -> Table		5034053	1					
ANR	5034216	Identifier	p		5034053	0					
ANR	5034217	Identifier	Table		5034053	1					
ANR	5034218	Argument	s		5034053	1					
ANR	5034219	Identifier	s		5034053	0					
ANR	5034220	ReturnType	static int		5034053	1					
ANR	5034221	Identifier	gx_serialize_CIEDEFG		5034053	2					
ANR	5034222	ParameterList	"const gs_color_space * pcs , stream * s"		5034053	3					
ANR	5034223	Parameter	const gs_color_space * pcs	530:21:16406:16431	5034053	0	True				
ANR	5034224	ParameterType	const gs_color_space *		5034053	0					
ANR	5034225	Identifier	pcs		5034053	1					
ANR	5034226	Parameter	stream * s	530:49:16434:16443	5034053	1	True				
ANR	5034227	ParameterType	stream *		5034053	0					
ANR	5034228	Identifier	s		5034053	1					
ANR	5034229	CFGEntryNode	ENTRY		5034053		True				
ANR	5034230	CFGExitNode	EXIT		5034053		True				
ANR	5034231	Symbol	code		5034053						
ANR	5034232	Symbol	* p -> caches_defg . DecodeDEFG		5034053						
ANR	5034233	Symbol	p -> caches_defg . DecodeDEFG		5034053						
ANR	5034234	Symbol	* pcs		5034053						
ANR	5034235	Symbol	& p -> Table		5034053						
ANR	5034236	Symbol	gx_serialize_cie_common_elements		5034053						
ANR	5034237	Symbol	p -> caches_defg		5034053						
ANR	5034238	Symbol	gx_serialize_cie_cache		5034053						
ANR	5034239	Symbol	* p -> caches_defg		5034053						
ANR	5034240	Symbol	gx_serialize_lookup_table		5034053						
ANR	5034241	Symbol	pcs -> params . defg		5034053						
ANR	5034242	Symbol	& p -> caches_defg . DecodeDEFG [ k ] . floats		5034053						
ANR	5034243	Symbol	* * p		5034053						
ANR	5034244	Symbol	pcs		5034053						
ANR	5034245	Symbol	pcs -> params		5034053						
ANR	5034246	Symbol	k		5034053						
ANR	5034247	Symbol	n		5034053						
ANR	5034248	Symbol	p		5034053						
ANR	5034249	Symbol	p -> RangeDEFG		5034053						
ANR	5034250	Symbol	& p -> RangeHIJK		5034053						
ANR	5034251	Symbol	s		5034053						
ANR	5034252	Symbol	p -> RangeHIJK		5034053						
ANR	5034253	Symbol	& n		5034053						
ANR	5034254	Symbol	* k		5034053						
ANR	5034255	Symbol	* p		5034053						
ANR	5034256	Symbol	& p -> RangeDEFG		5034053						
ANR	5034257	Symbol	sputs		5034053						
