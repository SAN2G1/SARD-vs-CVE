command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	439648	File	data/converged/CVE-2018-16863_ghostpdl/base_gsbitops.c								
ANR	439649	DeclStmt									
ANR	439650	Decl							const bits16	const bits16 [ 17 ]	mono_copy_masks
ANR	439651	DeclStmt									
ANR	439652	Decl							const bits32	const bits32 [ 33 ]	mono_fill_masks
ANR	439653	Function	bits_fill_rectangle	55:1:1897:5366							
ANR	439654	FunctionDef	"bits_fill_rectangle (byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , int width_bits , int height)"		439653	0					
ANR	439655	CompoundStatement		62:0:2131:5366	439653	0					
ANR	439656	IdentifierDeclStatement	uint bit ;	63:4:2137:2145	439653	0	True				
ANR	439657	IdentifierDecl	bit		439653	0					
ANR	439658	IdentifierDeclType	uint		439653	0					
ANR	439659	Identifier	bit		439653	1					
ANR	439660	IdentifierDeclStatement	chunk right_mask ;	64:4:2151:2167	439653	1	True				
ANR	439661	IdentifierDecl	right_mask		439653	0					
ANR	439662	IdentifierDeclType	chunk		439653	0					
ANR	439663	Identifier	right_mask		439653	1					
ANR	439664	IdentifierDeclStatement	int line_count = height ;	65:4:2173:2196	439653	2	True				
ANR	439665	IdentifierDecl	line_count = height		439653	0					
ANR	439666	IdentifierDeclType	int		439653	0					
ANR	439667	Identifier	line_count		439653	1					
ANR	439668	AssignmentExpression	line_count = height		439653	2		=			
ANR	439669	Identifier	height		439653	0					
ANR	439670	Identifier	height		439653	1					
ANR	439671	IdentifierDeclStatement	chunk * ptr ;	66:4:2202:2212	439653	3	True				
ANR	439672	IdentifierDecl	* ptr		439653	0					
ANR	439673	IdentifierDeclType	chunk *		439653	0					
ANR	439674	Identifier	ptr		439653	1					
ANR	439675	IdentifierDeclStatement	int last_bit ;	67:4:2218:2230	439653	4	True				
ANR	439676	IdentifierDecl	last_bit		439653	0					
ANR	439677	IdentifierDeclType	int		439653	0					
ANR	439678	Identifier	last_bit		439653	1					
ANR	439679	Statement	define	69:1:2234:2239	439653	5	True				
ANR	439680	Statement	FOR_EACH_LINE	69:8:2241:2253	439653	6	True				
ANR	439681	Statement	(	69:21:2254:2254	439653	7	True				
ANR	439682	Statement	stat	69:22:2255:2258	439653	8	True				
ANR	439683	Statement	)	69:26:2259:2259	439653	9	True				
ANR	439684	DoStatement	do		439653	10					
ANR	439685	CompoundStatement		9:11:141:141	439653	0					
ANR	439686	Statement	stat	70:13:2275:2278	439653	0	True				
ANR	439687	Condition	"inc_ptr ( ptr , draster ) , -- line_count"	70:28:2290:2324	439653	1	True				
ANR	439688	Expression	"inc_ptr ( ptr , draster ) , -- line_count"		439653	0					
ANR	439689	CallExpression	"inc_ptr ( ptr , draster )"		439653	0					
ANR	439690	Callee	inc_ptr		439653	0					
ANR	439691	Identifier	inc_ptr		439653	0					
ANR	439692	ArgumentList	ptr		439653	1					
ANR	439693	Argument	ptr		439653	0					
ANR	439694	Identifier	ptr		439653	0					
ANR	439695	Argument	draster		439653	1					
ANR	439696	Identifier	draster		439653	0					
ANR	439697	UnaryExpression	-- line_count		439653	1					
ANR	439698	IncDec	--		439653	0					
ANR	439699	Identifier	line_count		439653	1					
ANR	439700	ExpressionStatement	ptr = ( chunk * ) dest	73:4:2383:2403	439653	11	True				
ANR	439701	AssignmentExpression	ptr = ( chunk * ) dest		439653	0		=			
ANR	439702	Identifier	ptr		439653	0					
ANR	439703	CastExpression	( chunk * ) dest		439653	1					
ANR	439704	CastTarget	chunk *		439653	0					
ANR	439705	Identifier	dest		439653	1					
ANR	439706	ExpressionStatement	bit = dest_bit & chunk_align_bit_mask	74:4:2409:2446	439653	12	True				
ANR	439707	AssignmentExpression	bit = dest_bit & chunk_align_bit_mask		439653	0		=			
ANR	439708	Identifier	bit		439653	0					
ANR	439709	BitAndExpression	dest_bit & chunk_align_bit_mask		439653	1		&			
ANR	439710	Identifier	dest_bit		439653	0					
ANR	439711	Identifier	chunk_align_bit_mask		439653	1					
ANR	439712	ExpressionStatement	last_bit = width_bits + bit - ( chunk_bits + 1 )	75:4:2452:2498	439653	13	True				
ANR	439713	AssignmentExpression	last_bit = width_bits + bit - ( chunk_bits + 1 )		439653	0		=			
ANR	439714	Identifier	last_bit		439653	0					
ANR	439715	AdditiveExpression	width_bits + bit - ( chunk_bits + 1 )		439653	1		+			
ANR	439716	Identifier	width_bits		439653	0					
ANR	439717	AdditiveExpression	bit - ( chunk_bits + 1 )		439653	1		-			
ANR	439718	Identifier	bit		439653	0					
ANR	439719	AdditiveExpression	chunk_bits + 1		439653	1		+			
ANR	439720	Identifier	chunk_bits		439653	0					
ANR	439721	PrimaryExpression	1		439653	1					
ANR	439722	IfStatement	if ( last_bit < 0 )		439653	14					
ANR	439723	Condition	last_bit < 0	77:8:2509:2520	439653	0	True				
ANR	439724	RelationalExpression	last_bit < 0		439653	0		<			
ANR	439725	Identifier	last_bit		439653	0					
ANR	439726	PrimaryExpression	0		439653	1					
ANR	439727	CompoundStatement		16:22:391:391	439653	1					
ANR	439728	ExpressionStatement	"set_mono_thin_mask ( right_mask , width_bits , bit )"	78:8:2550:2597	439653	0	True				
ANR	439729	CallExpression	"set_mono_thin_mask ( right_mask , width_bits , bit )"		439653	0					
ANR	439730	Callee	set_mono_thin_mask		439653	0					
ANR	439731	Identifier	set_mono_thin_mask		439653	0					
ANR	439732	ArgumentList	right_mask		439653	1					
ANR	439733	Argument	right_mask		439653	0					
ANR	439734	Identifier	right_mask		439653	0					
ANR	439735	Argument	width_bits		439653	1					
ANR	439736	Identifier	width_bits		439653	0					
ANR	439737	Argument	bit		439653	2					
ANR	439738	Identifier	bit		439653	0					
ANR	439739	IfStatement	if ( pattern == 0 )		439653	1					
ANR	439740	Condition	pattern == 0	79:12:2611:2622	439653	0	True				
ANR	439741	EqualityExpression	pattern == 0		439653	0		==			
ANR	439742	Identifier	pattern		439653	0					
ANR	439743	PrimaryExpression	0		439653	1					
ANR	439744	Statement	FOR_EACH_LINE	80:12:2637:2649	439653	1	True				
ANR	439745	ElseStatement	else		439653	0					
ANR	439746	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		439653	0					
ANR	439747	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	81:17:2691:2722	439653	0	True				
ANR	439748	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		439653	0		==			
ANR	439749	Identifier	pattern		439653	0					
ANR	439750	CastExpression	( mono_fill_chunk ) ( - 1 )		439653	1					
ANR	439751	CastTarget	mono_fill_chunk		439653	0					
ANR	439752	UnaryOperationExpression	- 1		439653	1					
ANR	439753	UnaryOperator	-		439653	0					
ANR	439754	PrimaryExpression	1		439653	1					
ANR	439755	Statement	FOR_EACH_LINE	82:12:2737:2749	439653	1	True				
ANR	439756	ElseStatement	else		439653	0					
ANR	439757	Statement	FOR_EACH_LINE	84:12:2798:2810	439653	0	True				
ANR	439758	Statement	(	80:25:2650:2650	439653	2	True				
ANR	439759	ExpressionStatement	* ptr &= ~right_mask	80:26:2651:2670	439653	3	True				
ANR	439760	AssignmentExpression	* ptr &= ~right_mask		439653	0		&=			
ANR	439761	UnaryOperationExpression	* ptr		439653	0					
ANR	439762	UnaryOperator	*		439653	0					
ANR	439763	Identifier	ptr		439653	1					
ANR	439764	Identifier	~right_mask		439653	1					
ANR	439765	Statement	)	80:46:2671:2671	439653	4	True				
ANR	439766	ExpressionStatement		80:47:2672:2672	439653	5	True				
ANR	439767	Statement	(	82:25:2750:2750	439653	6	True				
ANR	439768	ExpressionStatement	* ptr |= right_mask	82:26:2751:2769	439653	7	True				
ANR	439769	AssignmentExpression	* ptr |= right_mask		439653	0		|=			
ANR	439770	UnaryOperationExpression	* ptr		439653	0					
ANR	439771	UnaryOperator	*		439653	0					
ANR	439772	Identifier	ptr		439653	1					
ANR	439773	Identifier	right_mask		439653	1					
ANR	439774	Statement	)	82:45:2770:2770	439653	8	True				
ANR	439775	ExpressionStatement		82:46:2771:2771	439653	9	True				
ANR	439776	Statement	(	84:25:2811:2811	439653	10	True				
ANR	439777	ExpressionStatement	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )	85:16:2829:2881	439653	11	True				
ANR	439778	AssignmentExpression	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )		439653	0		=			
ANR	439779	UnaryOperationExpression	* ptr		439653	0					
ANR	439780	UnaryOperator	*		439653	0					
ANR	439781	Identifier	ptr		439653	1					
ANR	439782	InclusiveOrExpression	( * ptr & ~right_mask ) | ( pattern & right_mask )		439653	1		|			
ANR	439783	BitAndExpression	* ptr & ~right_mask		439653	0		&			
ANR	439784	UnaryOperationExpression	* ptr		439653	0					
ANR	439785	UnaryOperator	*		439653	0					
ANR	439786	Identifier	ptr		439653	1					
ANR	439787	Identifier	~right_mask		439653	1					
ANR	439788	BitAndExpression	pattern & right_mask		439653	1		&			
ANR	439789	Identifier	pattern		439653	0					
ANR	439790	Identifier	right_mask		439653	1					
ANR	439791	Statement	)	85:70:2883:2883	439653	12	True				
ANR	439792	ExpressionStatement		85:71:2884:2884	439653	13	True				
ANR	439793	ElseStatement	else		439653	0					
ANR	439794	CompoundStatement		27:8:795:833	439653	0					
ANR	439795	IdentifierDeclStatement	chunk mask ;	87:8:2907:2917	439653	0	True				
ANR	439796	IdentifierDecl	mask		439653	0					
ANR	439797	IdentifierDeclType	chunk		439653	0					
ANR	439798	Identifier	mask		439653	1					
ANR	439799	IdentifierDeclStatement	int last = last_bit >> chunk_log2_bits ;	88:8:2927:2965	439653	1	True				
ANR	439800	IdentifierDecl	last = last_bit >> chunk_log2_bits		439653	0					
ANR	439801	IdentifierDeclType	int		439653	0					
ANR	439802	Identifier	last		439653	1					
ANR	439803	AssignmentExpression	last = last_bit >> chunk_log2_bits		439653	2		=			
ANR	439804	Identifier	last		439653	0					
ANR	439805	ShiftExpression	last_bit >> chunk_log2_bits		439653	1		>>			
ANR	439806	Identifier	last_bit		439653	0					
ANR	439807	Identifier	chunk_log2_bits		439653	1					
ANR	439808	ExpressionStatement	"set_mono_left_mask ( mask , bit )"	90:8:2976:3005	439653	2	True				
ANR	439809	CallExpression	"set_mono_left_mask ( mask , bit )"		439653	0					
ANR	439810	Callee	set_mono_left_mask		439653	0					
ANR	439811	Identifier	set_mono_left_mask		439653	0					
ANR	439812	ArgumentList	mask		439653	1					
ANR	439813	Argument	mask		439653	0					
ANR	439814	Identifier	mask		439653	0					
ANR	439815	Argument	bit		439653	1					
ANR	439816	Identifier	bit		439653	0					
ANR	439817	ExpressionStatement	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"	91:8:3015:3079	439653	3	True				
ANR	439818	CallExpression	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"		439653	0					
ANR	439819	Callee	set_mono_right_mask		439653	0					
ANR	439820	Identifier	set_mono_right_mask		439653	0					
ANR	439821	ArgumentList	right_mask		439653	1					
ANR	439822	Argument	right_mask		439653	0					
ANR	439823	Identifier	right_mask		439653	0					
ANR	439824	Argument	( last_bit & chunk_bit_mask ) + 1		439653	1					
ANR	439825	AdditiveExpression	( last_bit & chunk_bit_mask ) + 1		439653	0		+			
ANR	439826	BitAndExpression	last_bit & chunk_bit_mask		439653	0		&			
ANR	439827	Identifier	last_bit		439653	0					
ANR	439828	Identifier	chunk_bit_mask		439653	1					
ANR	439829	PrimaryExpression	1		439653	1					
ANR	439830	SwitchStatement	switch ( last )		439653	4					
ANR	439831	Condition	last	92:16:3097:3100	439653	0	True				
ANR	439832	Identifier	last		439653	0					
ANR	439833	CompoundStatement		31:22:971:971	439653	1					
ANR	439834	Label	case 0 :	93:12:3117:3123	439653	0	True				
ANR	439835	IfStatement	if ( pattern == 0 )		439653	1					
ANR	439836	Condition	pattern == 0	94:20:3161:3172	439653	0	True				
ANR	439837	EqualityExpression	pattern == 0		439653	0		==			
ANR	439838	Identifier	pattern		439653	0					
ANR	439839	PrimaryExpression	0		439653	1					
ANR	439840	Statement	FOR_EACH_LINE	95:20:3195:3207	439653	1	True				
ANR	439841	ElseStatement	else		439653	0					
ANR	439842	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		439653	0					
ANR	439843	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	96:25:3274:3305	439653	0	True				
ANR	439844	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		439653	0		==			
ANR	439845	Identifier	pattern		439653	0					
ANR	439846	CastExpression	( mono_fill_chunk ) ( - 1 )		439653	1					
ANR	439847	CastTarget	mono_fill_chunk		439653	0					
ANR	439848	UnaryOperationExpression	- 1		439653	1					
ANR	439849	UnaryOperator	-		439653	0					
ANR	439850	PrimaryExpression	1		439653	1					
ANR	439851	Statement	FOR_EACH_LINE	97:20:3328:3340	439653	1	True				
ANR	439852	ElseStatement	else		439653	0					
ANR	439853	Statement	FOR_EACH_LINE	99:20:3421:3433	439653	0	True				
ANR	439854	Statement	(	95:33:3208:3208	439653	2	True				
ANR	439855	ExpressionStatement	* ptr &= ~mask	95:34:3209:3222	439653	3	True				
ANR	439856	AssignmentExpression	* ptr &= ~mask		439653	0		&=			
ANR	439857	UnaryOperationExpression	* ptr		439653	0					
ANR	439858	UnaryOperator	*		439653	0					
ANR	439859	Identifier	ptr		439653	1					
ANR	439860	Identifier	~mask		439653	1					
ANR	439861	ExpressionStatement	ptr [ 1 ] &= ~right_mask	95:49:3224:3245	439653	4	True				
ANR	439862	AssignmentExpression	ptr [ 1 ] &= ~right_mask		439653	0		&=			
ANR	439863	ArrayIndexing	ptr [ 1 ]		439653	0					
ANR	439864	Identifier	ptr		439653	0					
ANR	439865	PrimaryExpression	1		439653	1					
ANR	439866	Identifier	~right_mask		439653	1					
ANR	439867	Statement	)	95:71:3246:3246	439653	5	True				
ANR	439868	ExpressionStatement		95:72:3247:3247	439653	6	True				
ANR	439869	Statement	(	97:33:3341:3341	439653	7	True				
ANR	439870	ExpressionStatement	* ptr |= mask	97:34:3342:3354	439653	8	True				
ANR	439871	AssignmentExpression	* ptr |= mask		439653	0		|=			
ANR	439872	UnaryOperationExpression	* ptr		439653	0					
ANR	439873	UnaryOperator	*		439653	0					
ANR	439874	Identifier	ptr		439653	1					
ANR	439875	Identifier	mask		439653	1					
ANR	439876	ExpressionStatement	ptr [ 1 ] |= right_mask	97:48:3356:3376	439653	9	True				
ANR	439877	AssignmentExpression	ptr [ 1 ] |= right_mask		439653	0		|=			
ANR	439878	ArrayIndexing	ptr [ 1 ]		439653	0					
ANR	439879	Identifier	ptr		439653	0					
ANR	439880	PrimaryExpression	1		439653	1					
ANR	439881	Identifier	right_mask		439653	1					
ANR	439882	Statement	)	97:69:3377:3377	439653	10	True				
ANR	439883	ExpressionStatement		97:70:3378:3378	439653	11	True				
ANR	439884	Statement	(	99:33:3434:3434	439653	12	True				
ANR	439885	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	100:24:3460:3500	439653	13	True				
ANR	439886	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		439653	0		=			
ANR	439887	UnaryOperationExpression	* ptr		439653	0					
ANR	439888	UnaryOperator	*		439653	0					
ANR	439889	Identifier	ptr		439653	1					
ANR	439890	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		439653	1		|			
ANR	439891	BitAndExpression	* ptr & ~mask		439653	0		&			
ANR	439892	UnaryOperationExpression	* ptr		439653	0					
ANR	439893	UnaryOperator	*		439653	0					
ANR	439894	Identifier	ptr		439653	1					
ANR	439895	Identifier	~mask		439653	1					
ANR	439896	BitAndExpression	pattern & mask		439653	1		&			
ANR	439897	Identifier	pattern		439653	0					
ANR	439898	Identifier	mask		439653	1					
ANR	439899	ExpressionStatement	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )	101:24:3526:3582	439653	14	True				
ANR	439900	AssignmentExpression	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		439653	0		=			
ANR	439901	ArrayIndexing	ptr [ 1 ]		439653	0					
ANR	439902	Identifier	ptr		439653	0					
ANR	439903	PrimaryExpression	1		439653	1					
ANR	439904	InclusiveOrExpression	( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		439653	1		|			
ANR	439905	BitAndExpression	ptr [ 1 ] & ~right_mask		439653	0		&			
ANR	439906	ArrayIndexing	ptr [ 1 ]		439653	0					
ANR	439907	Identifier	ptr		439653	0					
ANR	439908	PrimaryExpression	1		439653	1					
ANR	439909	Identifier	~right_mask		439653	1					
ANR	439910	BitAndExpression	pattern & right_mask		439653	1		&			
ANR	439911	Identifier	pattern		439653	0					
ANR	439912	Identifier	right_mask		439653	1					
ANR	439913	Statement	)	101:82:3584:3584	439653	15	True				
ANR	439914	ExpressionStatement		101:83:3585:3585	439653	16	True				
ANR	439915	BreakStatement	break ;	102:16:3603:3608	439653	17	True				
ANR	439916	Label	case 1 :	103:12:3622:3628	439653	18	True				
ANR	439917	IfStatement	if ( pattern == 0 )		439653	19					
ANR	439918	Condition	pattern == 0	104:20:3666:3677	439653	0	True				
ANR	439919	EqualityExpression	pattern == 0		439653	0		==			
ANR	439920	Identifier	pattern		439653	0					
ANR	439921	PrimaryExpression	0		439653	1					
ANR	439922	Statement	FOR_EACH_LINE	105:20:3700:3712	439653	1	True				
ANR	439923	ElseStatement	else		439653	0					
ANR	439924	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		439653	0					
ANR	439925	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	108:25:3863:3894	439653	0	True				
ANR	439926	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		439653	0		==			
ANR	439927	Identifier	pattern		439653	0					
ANR	439928	CastExpression	( mono_fill_chunk ) ( - 1 )		439653	1					
ANR	439929	CastTarget	mono_fill_chunk		439653	0					
ANR	439930	UnaryOperationExpression	- 1		439653	1					
ANR	439931	UnaryOperator	-		439653	0					
ANR	439932	PrimaryExpression	1		439653	1					
ANR	439933	Statement	FOR_EACH_LINE	109:20:3917:3929	439653	1	True				
ANR	439934	ElseStatement	else		439653	0					
ANR	439935	Statement	FOR_EACH_LINE	113:20:4103:4115	439653	0	True				
ANR	439936	Statement	(	105:33:3713:3713	439653	20	True				
ANR	439937	ExpressionStatement	* ptr &= ~mask	105:35:3715:3728	439653	21	True				
ANR	439938	AssignmentExpression	* ptr &= ~mask		439653	0		&=			
ANR	439939	UnaryOperationExpression	* ptr		439653	0					
ANR	439940	UnaryOperator	*		439653	0					
ANR	439941	Identifier	ptr		439653	1					
ANR	439942	Identifier	~mask		439653	1					
ANR	439943	ExpressionStatement	ptr [ 1 ] = 0	106:35:3765:3775	439653	22	True				
ANR	439944	AssignmentExpression	ptr [ 1 ] = 0		439653	0		=			
ANR	439945	ArrayIndexing	ptr [ 1 ]		439653	0					
ANR	439946	Identifier	ptr		439653	0					
ANR	439947	PrimaryExpression	1		439653	1					
ANR	439948	PrimaryExpression	0		439653	1					
ANR	439949	ExpressionStatement	ptr [ 2 ] &= ~right_mask	107:35:3812:3833	439653	23	True				
ANR	439950	AssignmentExpression	ptr [ 2 ] &= ~right_mask		439653	0		&=			
ANR	439951	ArrayIndexing	ptr [ 2 ]		439653	0					
ANR	439952	Identifier	ptr		439653	0					
ANR	439953	PrimaryExpression	2		439653	1					
ANR	439954	Identifier	~right_mask		439653	1					
ANR	439955	Statement	)	107:58:3835:3835	439653	24	True				
ANR	439956	ExpressionStatement		107:59:3836:3836	439653	25	True				
ANR	439957	Statement	(	109:33:3930:3930	439653	26	True				
ANR	439958	ExpressionStatement	* ptr |= mask	109:35:3932:3944	439653	27	True				
ANR	439959	AssignmentExpression	* ptr |= mask		439653	0		|=			
ANR	439960	UnaryOperationExpression	* ptr		439653	0					
ANR	439961	UnaryOperator	*		439653	0					
ANR	439962	Identifier	ptr		439653	1					
ANR	439963	Identifier	mask		439653	1					
ANR	439964	ExpressionStatement	ptr [ 1 ] = ~ ( chunk ) 0	110:35:3981:4000	439653	28	True				
ANR	439965	AssignmentExpression	ptr [ 1 ] = ~ ( chunk ) 0		439653	0		=			
ANR	439966	ArrayIndexing	ptr [ 1 ]		439653	0					
ANR	439967	Identifier	ptr		439653	0					
ANR	439968	PrimaryExpression	1		439653	1					
ANR	439969	UnaryOperationExpression	~ ( chunk ) 0		439653	1					
ANR	439970	UnaryOperator	~		439653	0					
ANR	439971	CastExpression	( chunk ) 0		439653	1					
ANR	439972	CastTarget	chunk		439653	0					
ANR	439973	PrimaryExpression	0		439653	1					
ANR	439974	ExpressionStatement	ptr [ 2 ] |= right_mask	111:35:4037:4057	439653	29	True				
ANR	439975	AssignmentExpression	ptr [ 2 ] |= right_mask		439653	0		|=			
ANR	439976	ArrayIndexing	ptr [ 2 ]		439653	0					
ANR	439977	Identifier	ptr		439653	0					
ANR	439978	PrimaryExpression	2		439653	1					
ANR	439979	Identifier	right_mask		439653	1					
ANR	439980	Statement	)	111:57:4059:4059	439653	30	True				
ANR	439981	ExpressionStatement		111:58:4060:4060	439653	31	True				
ANR	439982	Statement	(	113:33:4116:4116	439653	32	True				
ANR	439983	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	113:35:4118:4158	439653	33	True				
ANR	439984	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		439653	0		=			
ANR	439985	UnaryOperationExpression	* ptr		439653	0					
ANR	439986	UnaryOperator	*		439653	0					
ANR	439987	Identifier	ptr		439653	1					
ANR	439988	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		439653	1		|			
ANR	439989	BitAndExpression	* ptr & ~mask		439653	0		&			
ANR	439990	UnaryOperationExpression	* ptr		439653	0					
ANR	439991	UnaryOperator	*		439653	0					
ANR	439992	Identifier	ptr		439653	1					
ANR	439993	Identifier	~mask		439653	1					
ANR	439994	BitAndExpression	pattern & mask		439653	1		&			
ANR	439995	Identifier	pattern		439653	0					
ANR	439996	Identifier	mask		439653	1					
ANR	439997	ExpressionStatement	ptr [ 1 ] = pattern	114:36:4196:4212	439653	34	True				
ANR	439998	AssignmentExpression	ptr [ 1 ] = pattern		439653	0		=			
ANR	439999	ArrayIndexing	ptr [ 1 ]		439653	0					
ANR	440000	Identifier	ptr		439653	0					
ANR	440001	PrimaryExpression	1		439653	1					
ANR	440002	Identifier	pattern		439653	1					
ANR	440003	ExpressionStatement	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )	115:36:4250:4306	439653	35	True				
ANR	440004	AssignmentExpression	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		439653	0		=			
ANR	440005	ArrayIndexing	ptr [ 2 ]		439653	0					
ANR	440006	Identifier	ptr		439653	0					
ANR	440007	PrimaryExpression	2		439653	1					
ANR	440008	InclusiveOrExpression	( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		439653	1		|			
ANR	440009	BitAndExpression	ptr [ 2 ] & ~right_mask		439653	0		&			
ANR	440010	ArrayIndexing	ptr [ 2 ]		439653	0					
ANR	440011	Identifier	ptr		439653	0					
ANR	440012	PrimaryExpression	2		439653	1					
ANR	440013	Identifier	~right_mask		439653	1					
ANR	440014	BitAndExpression	pattern & right_mask		439653	1		&			
ANR	440015	Identifier	pattern		439653	0					
ANR	440016	Identifier	right_mask		439653	1					
ANR	440017	Statement	)	115:94:4308:4308	439653	36	True				
ANR	440018	ExpressionStatement		115:95:4309:4309	439653	37	True				
ANR	440019	BreakStatement	break ;	116:16:4327:4332	439653	38	True				
ANR	440020	Label	default :	117:12:4346:4353	439653	39	True				
ANR	440021	Identifier	default		439653	0					
ANR	440022	CompoundStatement		57:20:2261:2309	439653	40					
ANR	440023	IdentifierDeclStatement	uint byte_count = ( last_bit >> 3 ) & - chunk_bytes ;	118:20:4393:4441	439653	0	True				
ANR	440024	IdentifierDecl	byte_count = ( last_bit >> 3 ) & - chunk_bytes		439653	0					
ANR	440025	IdentifierDeclType	uint		439653	0					
ANR	440026	Identifier	byte_count		439653	1					
ANR	440027	AssignmentExpression	byte_count = ( last_bit >> 3 ) & - chunk_bytes		439653	2		=			
ANR	440028	Identifier	byte_count		439653	0					
ANR	440029	BitAndExpression	( last_bit >> 3 ) & - chunk_bytes		439653	1		&			
ANR	440030	ShiftExpression	last_bit >> 3		439653	0		>>			
ANR	440031	Identifier	last_bit		439653	0					
ANR	440032	PrimaryExpression	3		439653	1					
ANR	440033	UnaryOperationExpression	- chunk_bytes		439653	1					
ANR	440034	UnaryOperator	-		439653	0					
ANR	440035	Identifier	chunk_bytes		439653	1					
ANR	440036	IfStatement	if ( pattern == 0 )		439653	1					
ANR	440037	Condition	pattern == 0	120:24:4468:4479	439653	0	True				
ANR	440038	EqualityExpression	pattern == 0		439653	0		==			
ANR	440039	Identifier	pattern		439653	0					
ANR	440040	PrimaryExpression	0		439653	1					
ANR	440041	Statement	FOR_EACH_LINE	121:24:4506:4518	439653	1	True				
ANR	440042	ElseStatement	else		439653	0					
ANR	440043	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		439653	0					
ANR	440044	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	124:29:4708:4739	439653	0	True				
ANR	440045	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		439653	0		==			
ANR	440046	Identifier	pattern		439653	0					
ANR	440047	CastExpression	( mono_fill_chunk ) ( - 1 )		439653	1					
ANR	440048	CastTarget	mono_fill_chunk		439653	0					
ANR	440049	UnaryOperationExpression	- 1		439653	1					
ANR	440050	UnaryOperator	-		439653	0					
ANR	440051	PrimaryExpression	1		439653	1					
ANR	440052	Statement	FOR_EACH_LINE	125:24:4766:4778	439653	1	True				
ANR	440053	ElseStatement	else		439653	0					
ANR	440054	Statement	FOR_EACH_LINE	129:24:4989:5001	439653	0	True				
ANR	440055	Statement	(	121:37:4519:4519	439653	2	True				
ANR	440056	ExpressionStatement	* ptr &= ~mask	121:39:4521:4534	439653	3	True				
ANR	440057	AssignmentExpression	* ptr &= ~mask		439653	0		&=			
ANR	440058	UnaryOperationExpression	* ptr		439653	0					
ANR	440059	UnaryOperator	*		439653	0					
ANR	440060	Identifier	ptr		439653	1					
ANR	440061	Identifier	~mask		439653	1					
ANR	440062	ExpressionStatement	"memset ( ptr + 1 , 0 , byte_count )"	122:39:4575:4605	439653	4	True				
ANR	440063	CallExpression	"memset ( ptr + 1 , 0 , byte_count )"		439653	0					
ANR	440064	Callee	memset		439653	0					
ANR	440065	Identifier	memset		439653	0					
ANR	440066	ArgumentList	ptr + 1		439653	1					
ANR	440067	Argument	ptr + 1		439653	0					
ANR	440068	AdditiveExpression	ptr + 1		439653	0		+			
ANR	440069	Identifier	ptr		439653	0					
ANR	440070	PrimaryExpression	1		439653	1					
ANR	440071	Argument	0		439653	1					
ANR	440072	PrimaryExpression	0		439653	0					
ANR	440073	Argument	byte_count		439653	2					
ANR	440074	Identifier	byte_count		439653	0					
ANR	440075	ExpressionStatement	ptr [ last + 1 ] &= ~right_mask	123:39:4646:4674	439653	5	True				
ANR	440076	AssignmentExpression	ptr [ last + 1 ] &= ~right_mask		439653	0		&=			
ANR	440077	ArrayIndexing	ptr [ last + 1 ]		439653	0					
ANR	440078	Identifier	ptr		439653	0					
ANR	440079	AdditiveExpression	last + 1		439653	1		+			
ANR	440080	Identifier	last		439653	0					
ANR	440081	PrimaryExpression	1		439653	1					
ANR	440082	Identifier	~right_mask		439653	1					
ANR	440083	Statement	)	123:69:4676:4676	439653	6	True				
ANR	440084	ExpressionStatement		123:70:4677:4677	439653	7	True				
ANR	440085	Statement	(	125:37:4779:4779	439653	8	True				
ANR	440086	ExpressionStatement	* ptr |= mask	125:39:4781:4793	439653	9	True				
ANR	440087	AssignmentExpression	* ptr |= mask		439653	0		|=			
ANR	440088	UnaryOperationExpression	* ptr		439653	0					
ANR	440089	UnaryOperator	*		439653	0					
ANR	440090	Identifier	ptr		439653	1					
ANR	440091	Identifier	mask		439653	1					
ANR	440092	ExpressionStatement	"memset ( ptr + 1 , 0xff , byte_count )"	126:39:4834:4867	439653	10	True				
ANR	440093	CallExpression	"memset ( ptr + 1 , 0xff , byte_count )"		439653	0					
ANR	440094	Callee	memset		439653	0					
ANR	440095	Identifier	memset		439653	0					
ANR	440096	ArgumentList	ptr + 1		439653	1					
ANR	440097	Argument	ptr + 1		439653	0					
ANR	440098	AdditiveExpression	ptr + 1		439653	0		+			
ANR	440099	Identifier	ptr		439653	0					
ANR	440100	PrimaryExpression	1		439653	1					
ANR	440101	Argument	0xff		439653	1					
ANR	440102	PrimaryExpression	0xff		439653	0					
ANR	440103	Argument	byte_count		439653	2					
ANR	440104	Identifier	byte_count		439653	0					
ANR	440105	ExpressionStatement	ptr [ last + 1 ] |= right_mask	127:39:4908:4935	439653	11	True				
ANR	440106	AssignmentExpression	ptr [ last + 1 ] |= right_mask		439653	0		|=			
ANR	440107	ArrayIndexing	ptr [ last + 1 ]		439653	0					
ANR	440108	Identifier	ptr		439653	0					
ANR	440109	AdditiveExpression	last + 1		439653	1		+			
ANR	440110	Identifier	last		439653	0					
ANR	440111	PrimaryExpression	1		439653	1					
ANR	440112	Identifier	right_mask		439653	1					
ANR	440113	Statement	)	127:68:4937:4937	439653	12	True				
ANR	440114	ExpressionStatement		127:69:4938:4938	439653	13	True				
ANR	440115	Statement	(	129:37:5002:5002	439653	14	True				
ANR	440116	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	130:32:5036:5076	439653	15	True				
ANR	440117	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		439653	0		=			
ANR	440118	UnaryOperationExpression	* ptr		439653	0					
ANR	440119	UnaryOperator	*		439653	0					
ANR	440120	Identifier	ptr		439653	1					
ANR	440121	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		439653	1		|			
ANR	440122	BitAndExpression	* ptr & ~mask		439653	0		&			
ANR	440123	UnaryOperationExpression	* ptr		439653	0					
ANR	440124	UnaryOperator	*		439653	0					
ANR	440125	Identifier	ptr		439653	1					
ANR	440126	Identifier	~mask		439653	1					
ANR	440127	BitAndExpression	pattern & mask		439653	1		&			
ANR	440128	Identifier	pattern		439653	0					
ANR	440129	Identifier	mask		439653	1					
ANR	440130	ExpressionStatement	"memset ( ptr + 1 , ( byte ) pattern , byte_count )"	131:32:5110:5153	439653	16	True				
ANR	440131	CallExpression	"memset ( ptr + 1 , ( byte ) pattern , byte_count )"		439653	0					
ANR	440132	Callee	memset		439653	0					
ANR	440133	Identifier	memset		439653	0					
ANR	440134	ArgumentList	ptr + 1		439653	1					
ANR	440135	Argument	ptr + 1		439653	0					
ANR	440136	AdditiveExpression	ptr + 1		439653	0		+			
ANR	440137	Identifier	ptr		439653	0					
ANR	440138	PrimaryExpression	1		439653	1					
ANR	440139	Argument	( byte ) pattern		439653	1					
ANR	440140	CastExpression	( byte ) pattern		439653	0					
ANR	440141	CastTarget	byte		439653	0					
ANR	440142	Identifier	pattern		439653	1					
ANR	440143	Argument	byte_count		439653	2					
ANR	440144	Identifier	byte_count		439653	0					
ANR	440145	ExpressionStatement	ptr [ last + 1 ] = ( ptr [ last + 1 ] & ~right_mask ) | ( pattern & right_mask )	132:32:5187:5305	439653	17	True				
ANR	440146	AssignmentExpression	ptr [ last + 1 ] = ( ptr [ last + 1 ] & ~right_mask ) | ( pattern & right_mask )		439653	0		=			
ANR	440147	ArrayIndexing	ptr [ last + 1 ]		439653	0					
ANR	440148	Identifier	ptr		439653	0					
ANR	440149	AdditiveExpression	last + 1		439653	1		+			
ANR	440150	Identifier	last		439653	0					
ANR	440151	PrimaryExpression	1		439653	1					
ANR	440152	InclusiveOrExpression	( ptr [ last + 1 ] & ~right_mask ) | ( pattern & right_mask )		439653	1		|			
ANR	440153	BitAndExpression	ptr [ last + 1 ] & ~right_mask		439653	0		&			
ANR	440154	ArrayIndexing	ptr [ last + 1 ]		439653	0					
ANR	440155	Identifier	ptr		439653	0					
ANR	440156	AdditiveExpression	last + 1		439653	1		+			
ANR	440157	Identifier	last		439653	0					
ANR	440158	PrimaryExpression	1		439653	1					
ANR	440159	Identifier	~right_mask		439653	1					
ANR	440160	BitAndExpression	pattern & right_mask		439653	1		&			
ANR	440161	Identifier	pattern		439653	0					
ANR	440162	Identifier	right_mask		439653	1					
ANR	440163	Statement	)	133:73:5308:5308	439653	18	True				
ANR	440164	ExpressionStatement		133:74:5309:5309	439653	19	True				
ANR	440165	Statement	undef	137:1:5346:5350	439653	15	True				
ANR	440166	Statement	FOR_EACH_LINE	137:7:5352:5364	439653	16	True				
ANR	440167	ReturnType	undef chunk define chunk mono_fill_chunk undef mono_masks define mono_masks mono_fill_masks void		439653	1					
ANR	440168	Identifier	bits_fill_rectangle		439653	2					
ANR	440169	ParameterList	"byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , int width_bits , int height"		439653	3					
ANR	440170	Parameter	byte * dest	60:20:2017:2027	439653	0	True				
ANR	440171	ParameterType	byte *		439653	0					
ANR	440172	Identifier	dest		439653	1					
ANR	440173	Parameter	int dest_bit	60:33:2030:2041	439653	1	True				
ANR	440174	ParameterType	int		439653	0					
ANR	440175	Identifier	dest_bit		439653	1					
ANR	440176	Parameter	uint draster	60:47:2044:2055	439653	2	True				
ANR	440177	ParameterType	uint		439653	0					
ANR	440178	Identifier	draster		439653	1					
ANR	440179	Parameter	mono_fill_chunk pattern	61:20:2078:2100	439653	3	True				
ANR	440180	ParameterType	mono_fill_chunk		439653	0					
ANR	440181	Identifier	pattern		439653	1					
ANR	440182	Parameter	int width_bits	61:45:2103:2116	439653	4	True				
ANR	440183	ParameterType	int		439653	0					
ANR	440184	Identifier	width_bits		439653	1					
ANR	440185	Parameter	int height	61:61:2119:2128	439653	5	True				
ANR	440186	ParameterType	int		439653	0					
ANR	440187	Identifier	height		439653	1					
ANR	440188	CFGEntryNode	ENTRY		439653		True				
ANR	440189	CFGExitNode	EXIT		439653		True				
ANR	440190	Symbol	width_bits		439653						
ANR	440191	Symbol	line_count		439653						
ANR	440192	Symbol	last		439653						
ANR	440193	Symbol	chunk_log2_bits		439653						
ANR	440194	Symbol	draster		439653						
ANR	440195	Symbol	dest_bit		439653						
ANR	440196	Symbol	pattern		439653						
ANR	440197	Symbol	~mask		439653						
ANR	440198	Symbol	right_mask		439653						
ANR	440199	Symbol	chunk_align_bit_mask		439653						
ANR	440200	Symbol	dest		439653						
ANR	440201	Symbol	bit		439653						
ANR	440202	Symbol	last_bit		439653						
ANR	440203	Symbol	* last		439653						
ANR	440204	Symbol	inc_ptr		439653						
ANR	440205	Symbol	ptr		439653						
ANR	440206	Symbol	byte_count		439653						
ANR	440207	Symbol	chunk_bits		439653						
ANR	440208	Symbol	* ptr		439653						
ANR	440209	Symbol	~right_mask		439653						
ANR	440210	Symbol	chunk_bit_mask		439653						
ANR	440211	Symbol	chunk_bytes		439653						
ANR	440212	Symbol	height		439653						
ANR	440213	Symbol	mask		439653						
ANR	440214	Function	bits_fill_rectangle_masked	146:0:5643:9348							
ANR	440215	FunctionDef	"bits_fill_rectangle_masked (byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , mono_fill_chunk src_mask , int width_bits , int height)"		440214	0					
ANR	440216	CompoundStatement		150:0:5835:9348	440214	0					
ANR	440217	IdentifierDeclStatement	uint bit ;	151:4:5841:5849	440214	0	True				
ANR	440218	IdentifierDecl	bit		440214	0					
ANR	440219	IdentifierDeclType	uint		440214	0					
ANR	440220	Identifier	bit		440214	1					
ANR	440221	IdentifierDeclStatement	chunk right_mask ;	152:4:5855:5871	440214	1	True				
ANR	440222	IdentifierDecl	right_mask		440214	0					
ANR	440223	IdentifierDeclType	chunk		440214	0					
ANR	440224	Identifier	right_mask		440214	1					
ANR	440225	IdentifierDeclStatement	int line_count = height ;	153:4:5877:5900	440214	2	True				
ANR	440226	IdentifierDecl	line_count = height		440214	0					
ANR	440227	IdentifierDeclType	int		440214	0					
ANR	440228	Identifier	line_count		440214	1					
ANR	440229	AssignmentExpression	line_count = height		440214	2		=			
ANR	440230	Identifier	height		440214	0					
ANR	440231	Identifier	height		440214	1					
ANR	440232	IdentifierDeclStatement	chunk * ptr ;	154:4:5906:5916	440214	3	True				
ANR	440233	IdentifierDecl	* ptr		440214	0					
ANR	440234	IdentifierDeclType	chunk *		440214	0					
ANR	440235	Identifier	ptr		440214	1					
ANR	440236	IdentifierDeclStatement	int last_bit ;	155:4:5922:5934	440214	4	True				
ANR	440237	IdentifierDecl	last_bit		440214	0					
ANR	440238	IdentifierDeclType	int		440214	0					
ANR	440239	Identifier	last_bit		440214	1					
ANR	440240	Statement	define	157:1:5938:5943	440214	5	True				
ANR	440241	Statement	FOR_EACH_LINE	157:8:5945:5957	440214	6	True				
ANR	440242	Statement	(	157:21:5958:5958	440214	7	True				
ANR	440243	Statement	stat	157:22:5959:5962	440214	8	True				
ANR	440244	Statement	)	157:26:5963:5963	440214	9	True				
ANR	440245	DoStatement	do		440214	10					
ANR	440246	CompoundStatement		9:11:141:141	440214	0					
ANR	440247	Statement	stat	158:13:5979:5982	440214	0	True				
ANR	440248	Condition	"inc_ptr ( ptr , draster ) , -- line_count"	158:28:5994:6028	440214	1	True				
ANR	440249	Expression	"inc_ptr ( ptr , draster ) , -- line_count"		440214	0					
ANR	440250	CallExpression	"inc_ptr ( ptr , draster )"		440214	0					
ANR	440251	Callee	inc_ptr		440214	0					
ANR	440252	Identifier	inc_ptr		440214	0					
ANR	440253	ArgumentList	ptr		440214	1					
ANR	440254	Argument	ptr		440214	0					
ANR	440255	Identifier	ptr		440214	0					
ANR	440256	Argument	draster		440214	1					
ANR	440257	Identifier	draster		440214	0					
ANR	440258	UnaryExpression	-- line_count		440214	1					
ANR	440259	IncDec	--		440214	0					
ANR	440260	Identifier	line_count		440214	1					
ANR	440261	ExpressionStatement	ptr = ( chunk * ) dest	161:4:6087:6107	440214	11	True				
ANR	440262	AssignmentExpression	ptr = ( chunk * ) dest		440214	0		=			
ANR	440263	Identifier	ptr		440214	0					
ANR	440264	CastExpression	( chunk * ) dest		440214	1					
ANR	440265	CastTarget	chunk *		440214	0					
ANR	440266	Identifier	dest		440214	1					
ANR	440267	ExpressionStatement	bit = dest_bit & chunk_align_bit_mask	162:4:6113:6150	440214	12	True				
ANR	440268	AssignmentExpression	bit = dest_bit & chunk_align_bit_mask		440214	0		=			
ANR	440269	Identifier	bit		440214	0					
ANR	440270	BitAndExpression	dest_bit & chunk_align_bit_mask		440214	1		&			
ANR	440271	Identifier	dest_bit		440214	0					
ANR	440272	Identifier	chunk_align_bit_mask		440214	1					
ANR	440273	ExpressionStatement	last_bit = width_bits + bit - ( chunk_bits + 1 )	163:4:6156:6202	440214	13	True				
ANR	440274	AssignmentExpression	last_bit = width_bits + bit - ( chunk_bits + 1 )		440214	0		=			
ANR	440275	Identifier	last_bit		440214	0					
ANR	440276	AdditiveExpression	width_bits + bit - ( chunk_bits + 1 )		440214	1		+			
ANR	440277	Identifier	width_bits		440214	0					
ANR	440278	AdditiveExpression	bit - ( chunk_bits + 1 )		440214	1		-			
ANR	440279	Identifier	bit		440214	0					
ANR	440280	AdditiveExpression	chunk_bits + 1		440214	1		+			
ANR	440281	Identifier	chunk_bits		440214	0					
ANR	440282	PrimaryExpression	1		440214	1					
ANR	440283	IfStatement	if ( last_bit < 0 )		440214	14					
ANR	440284	Condition	last_bit < 0	165:8:6213:6224	440214	0	True				
ANR	440285	RelationalExpression	last_bit < 0		440214	0		<			
ANR	440286	Identifier	last_bit		440214	0					
ANR	440287	PrimaryExpression	0		440214	1					
ANR	440288	CompoundStatement		16:22:391:391	440214	1					
ANR	440289	ExpressionStatement	"set_mono_thin_mask ( right_mask , width_bits , bit )"	166:8:6254:6301	440214	0	True				
ANR	440290	CallExpression	"set_mono_thin_mask ( right_mask , width_bits , bit )"		440214	0					
ANR	440291	Callee	set_mono_thin_mask		440214	0					
ANR	440292	Identifier	set_mono_thin_mask		440214	0					
ANR	440293	ArgumentList	right_mask		440214	1					
ANR	440294	Argument	right_mask		440214	0					
ANR	440295	Identifier	right_mask		440214	0					
ANR	440296	Argument	width_bits		440214	1					
ANR	440297	Identifier	width_bits		440214	0					
ANR	440298	Argument	bit		440214	2					
ANR	440299	Identifier	bit		440214	0					
ANR	440300	ExpressionStatement	right_mask &= ~src_mask	167:8:6311:6334	440214	1	True				
ANR	440301	AssignmentExpression	right_mask &= ~src_mask		440214	0		&=			
ANR	440302	Identifier	right_mask		440214	0					
ANR	440303	Identifier	~src_mask		440214	1					
ANR	440304	IfStatement	if ( pattern == 0 )		440214	2					
ANR	440305	Condition	pattern == 0	168:12:6348:6359	440214	0	True				
ANR	440306	EqualityExpression	pattern == 0		440214	0		==			
ANR	440307	Identifier	pattern		440214	0					
ANR	440308	PrimaryExpression	0		440214	1					
ANR	440309	Statement	FOR_EACH_LINE	169:12:6374:6386	440214	1	True				
ANR	440310	ElseStatement	else		440214	0					
ANR	440311	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		440214	0					
ANR	440312	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	170:17:6428:6459	440214	0	True				
ANR	440313	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		440214	0		==			
ANR	440314	Identifier	pattern		440214	0					
ANR	440315	CastExpression	( mono_fill_chunk ) ( - 1 )		440214	1					
ANR	440316	CastTarget	mono_fill_chunk		440214	0					
ANR	440317	UnaryOperationExpression	- 1		440214	1					
ANR	440318	UnaryOperator	-		440214	0					
ANR	440319	PrimaryExpression	1		440214	1					
ANR	440320	Statement	FOR_EACH_LINE	171:12:6474:6486	440214	1	True				
ANR	440321	ElseStatement	else		440214	0					
ANR	440322	Statement	FOR_EACH_LINE	173:12:6535:6547	440214	0	True				
ANR	440323	Statement	(	169:25:6387:6387	440214	3	True				
ANR	440324	ExpressionStatement	* ptr &= ~right_mask	169:26:6388:6407	440214	4	True				
ANR	440325	AssignmentExpression	* ptr &= ~right_mask		440214	0		&=			
ANR	440326	UnaryOperationExpression	* ptr		440214	0					
ANR	440327	UnaryOperator	*		440214	0					
ANR	440328	Identifier	ptr		440214	1					
ANR	440329	Identifier	~right_mask		440214	1					
ANR	440330	Statement	)	169:46:6408:6408	440214	5	True				
ANR	440331	ExpressionStatement		169:47:6409:6409	440214	6	True				
ANR	440332	Statement	(	171:25:6487:6487	440214	7	True				
ANR	440333	ExpressionStatement	* ptr |= right_mask	171:26:6488:6506	440214	8	True				
ANR	440334	AssignmentExpression	* ptr |= right_mask		440214	0		|=			
ANR	440335	UnaryOperationExpression	* ptr		440214	0					
ANR	440336	UnaryOperator	*		440214	0					
ANR	440337	Identifier	ptr		440214	1					
ANR	440338	Identifier	right_mask		440214	1					
ANR	440339	Statement	)	171:45:6507:6507	440214	9	True				
ANR	440340	ExpressionStatement		171:46:6508:6508	440214	10	True				
ANR	440341	Statement	(	173:25:6548:6548	440214	11	True				
ANR	440342	ExpressionStatement	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )	174:16:6566:6618	440214	12	True				
ANR	440343	AssignmentExpression	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )		440214	0		=			
ANR	440344	UnaryOperationExpression	* ptr		440214	0					
ANR	440345	UnaryOperator	*		440214	0					
ANR	440346	Identifier	ptr		440214	1					
ANR	440347	InclusiveOrExpression	( * ptr & ~right_mask ) | ( pattern & right_mask )		440214	1		|			
ANR	440348	BitAndExpression	* ptr & ~right_mask		440214	0		&			
ANR	440349	UnaryOperationExpression	* ptr		440214	0					
ANR	440350	UnaryOperator	*		440214	0					
ANR	440351	Identifier	ptr		440214	1					
ANR	440352	Identifier	~right_mask		440214	1					
ANR	440353	BitAndExpression	pattern & right_mask		440214	1		&			
ANR	440354	Identifier	pattern		440214	0					
ANR	440355	Identifier	right_mask		440214	1					
ANR	440356	Statement	)	174:70:6620:6620	440214	13	True				
ANR	440357	ExpressionStatement		174:71:6621:6621	440214	14	True				
ANR	440358	ElseStatement	else		440214	0					
ANR	440359	CompoundStatement		28:8:828:866	440214	0					
ANR	440360	IdentifierDeclStatement	chunk mask ;	176:8:6644:6654	440214	0	True				
ANR	440361	IdentifierDecl	mask		440214	0					
ANR	440362	IdentifierDeclType	chunk		440214	0					
ANR	440363	Identifier	mask		440214	1					
ANR	440364	IdentifierDeclStatement	int last = last_bit >> chunk_log2_bits ;	177:8:6664:6702	440214	1	True				
ANR	440365	IdentifierDecl	last = last_bit >> chunk_log2_bits		440214	0					
ANR	440366	IdentifierDeclType	int		440214	0					
ANR	440367	Identifier	last		440214	1					
ANR	440368	AssignmentExpression	last = last_bit >> chunk_log2_bits		440214	2		=			
ANR	440369	Identifier	last		440214	0					
ANR	440370	ShiftExpression	last_bit >> chunk_log2_bits		440214	1		>>			
ANR	440371	Identifier	last_bit		440214	0					
ANR	440372	Identifier	chunk_log2_bits		440214	1					
ANR	440373	ExpressionStatement	"set_mono_left_mask ( mask , bit )"	179:8:6713:6742	440214	2	True				
ANR	440374	CallExpression	"set_mono_left_mask ( mask , bit )"		440214	0					
ANR	440375	Callee	set_mono_left_mask		440214	0					
ANR	440376	Identifier	set_mono_left_mask		440214	0					
ANR	440377	ArgumentList	mask		440214	1					
ANR	440378	Argument	mask		440214	0					
ANR	440379	Identifier	mask		440214	0					
ANR	440380	Argument	bit		440214	1					
ANR	440381	Identifier	bit		440214	0					
ANR	440382	ExpressionStatement	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"	180:8:6752:6816	440214	3	True				
ANR	440383	CallExpression	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"		440214	0					
ANR	440384	Callee	set_mono_right_mask		440214	0					
ANR	440385	Identifier	set_mono_right_mask		440214	0					
ANR	440386	ArgumentList	right_mask		440214	1					
ANR	440387	Argument	right_mask		440214	0					
ANR	440388	Identifier	right_mask		440214	0					
ANR	440389	Argument	( last_bit & chunk_bit_mask ) + 1		440214	1					
ANR	440390	AdditiveExpression	( last_bit & chunk_bit_mask ) + 1		440214	0		+			
ANR	440391	BitAndExpression	last_bit & chunk_bit_mask		440214	0		&			
ANR	440392	Identifier	last_bit		440214	0					
ANR	440393	Identifier	chunk_bit_mask		440214	1					
ANR	440394	PrimaryExpression	1		440214	1					
ANR	440395	ExpressionStatement	mask &= ~src_mask	181:8:6826:6843	440214	4	True				
ANR	440396	AssignmentExpression	mask &= ~src_mask		440214	0		&=			
ANR	440397	Identifier	mask		440214	0					
ANR	440398	Identifier	~src_mask		440214	1					
ANR	440399	ExpressionStatement	right_mask &= ~src_mask	182:8:6853:6876	440214	5	True				
ANR	440400	AssignmentExpression	right_mask &= ~src_mask		440214	0		&=			
ANR	440401	Identifier	right_mask		440214	0					
ANR	440402	Identifier	~src_mask		440214	1					
ANR	440403	SwitchStatement	switch ( last )		440214	6					
ANR	440404	Condition	last	183:16:6894:6897	440214	0	True				
ANR	440405	Identifier	last		440214	0					
ANR	440406	CompoundStatement		34:22:1064:1064	440214	1					
ANR	440407	Label	case 0 :	184:12:6914:6920	440214	0	True				
ANR	440408	IfStatement	if ( pattern == 0 )		440214	1					
ANR	440409	Condition	pattern == 0	185:20:6958:6969	440214	0	True				
ANR	440410	EqualityExpression	pattern == 0		440214	0		==			
ANR	440411	Identifier	pattern		440214	0					
ANR	440412	PrimaryExpression	0		440214	1					
ANR	440413	Statement	FOR_EACH_LINE	186:20:6992:7004	440214	1	True				
ANR	440414	ElseStatement	else		440214	0					
ANR	440415	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		440214	0					
ANR	440416	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	187:25:7071:7102	440214	0	True				
ANR	440417	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		440214	0		==			
ANR	440418	Identifier	pattern		440214	0					
ANR	440419	CastExpression	( mono_fill_chunk ) ( - 1 )		440214	1					
ANR	440420	CastTarget	mono_fill_chunk		440214	0					
ANR	440421	UnaryOperationExpression	- 1		440214	1					
ANR	440422	UnaryOperator	-		440214	0					
ANR	440423	PrimaryExpression	1		440214	1					
ANR	440424	Statement	FOR_EACH_LINE	188:20:7125:7137	440214	1	True				
ANR	440425	ElseStatement	else		440214	0					
ANR	440426	Statement	FOR_EACH_LINE	190:20:7218:7230	440214	0	True				
ANR	440427	Statement	(	186:33:7005:7005	440214	2	True				
ANR	440428	ExpressionStatement	* ptr &= ~mask	186:34:7006:7019	440214	3	True				
ANR	440429	AssignmentExpression	* ptr &= ~mask		440214	0		&=			
ANR	440430	UnaryOperationExpression	* ptr		440214	0					
ANR	440431	UnaryOperator	*		440214	0					
ANR	440432	Identifier	ptr		440214	1					
ANR	440433	Identifier	~mask		440214	1					
ANR	440434	ExpressionStatement	ptr [ 1 ] &= ~right_mask	186:49:7021:7042	440214	4	True				
ANR	440435	AssignmentExpression	ptr [ 1 ] &= ~right_mask		440214	0		&=			
ANR	440436	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440437	Identifier	ptr		440214	0					
ANR	440438	PrimaryExpression	1		440214	1					
ANR	440439	Identifier	~right_mask		440214	1					
ANR	440440	Statement	)	186:71:7043:7043	440214	5	True				
ANR	440441	ExpressionStatement		186:72:7044:7044	440214	6	True				
ANR	440442	Statement	(	188:33:7138:7138	440214	7	True				
ANR	440443	ExpressionStatement	* ptr |= mask	188:34:7139:7151	440214	8	True				
ANR	440444	AssignmentExpression	* ptr |= mask		440214	0		|=			
ANR	440445	UnaryOperationExpression	* ptr		440214	0					
ANR	440446	UnaryOperator	*		440214	0					
ANR	440447	Identifier	ptr		440214	1					
ANR	440448	Identifier	mask		440214	1					
ANR	440449	ExpressionStatement	ptr [ 1 ] |= right_mask	188:48:7153:7173	440214	9	True				
ANR	440450	AssignmentExpression	ptr [ 1 ] |= right_mask		440214	0		|=			
ANR	440451	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440452	Identifier	ptr		440214	0					
ANR	440453	PrimaryExpression	1		440214	1					
ANR	440454	Identifier	right_mask		440214	1					
ANR	440455	Statement	)	188:69:7174:7174	440214	10	True				
ANR	440456	ExpressionStatement		188:70:7175:7175	440214	11	True				
ANR	440457	Statement	(	190:33:7231:7231	440214	12	True				
ANR	440458	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	191:24:7257:7297	440214	13	True				
ANR	440459	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		440214	0		=			
ANR	440460	UnaryOperationExpression	* ptr		440214	0					
ANR	440461	UnaryOperator	*		440214	0					
ANR	440462	Identifier	ptr		440214	1					
ANR	440463	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		440214	1		|			
ANR	440464	BitAndExpression	* ptr & ~mask		440214	0		&			
ANR	440465	UnaryOperationExpression	* ptr		440214	0					
ANR	440466	UnaryOperator	*		440214	0					
ANR	440467	Identifier	ptr		440214	1					
ANR	440468	Identifier	~mask		440214	1					
ANR	440469	BitAndExpression	pattern & mask		440214	1		&			
ANR	440470	Identifier	pattern		440214	0					
ANR	440471	Identifier	mask		440214	1					
ANR	440472	ExpressionStatement	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )	192:24:7323:7379	440214	14	True				
ANR	440473	AssignmentExpression	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		440214	0		=			
ANR	440474	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440475	Identifier	ptr		440214	0					
ANR	440476	PrimaryExpression	1		440214	1					
ANR	440477	InclusiveOrExpression	( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		440214	1		|			
ANR	440478	BitAndExpression	ptr [ 1 ] & ~right_mask		440214	0		&			
ANR	440479	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440480	Identifier	ptr		440214	0					
ANR	440481	PrimaryExpression	1		440214	1					
ANR	440482	Identifier	~right_mask		440214	1					
ANR	440483	BitAndExpression	pattern & right_mask		440214	1		&			
ANR	440484	Identifier	pattern		440214	0					
ANR	440485	Identifier	right_mask		440214	1					
ANR	440486	Statement	)	192:82:7381:7381	440214	15	True				
ANR	440487	ExpressionStatement		192:83:7382:7382	440214	16	True				
ANR	440488	BreakStatement	break ;	193:16:7400:7405	440214	17	True				
ANR	440489	Label	case 1 :	194:12:7419:7425	440214	18	True				
ANR	440490	IfStatement	if ( pattern == 0 )		440214	19					
ANR	440491	Condition	pattern == 0	195:20:7463:7474	440214	0	True				
ANR	440492	EqualityExpression	pattern == 0		440214	0		==			
ANR	440493	Identifier	pattern		440214	0					
ANR	440494	PrimaryExpression	0		440214	1					
ANR	440495	Statement	FOR_EACH_LINE	196:20:7497:7509	440214	1	True				
ANR	440496	ElseStatement	else		440214	0					
ANR	440497	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		440214	0					
ANR	440498	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	199:25:7668:7699	440214	0	True				
ANR	440499	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		440214	0		==			
ANR	440500	Identifier	pattern		440214	0					
ANR	440501	CastExpression	( mono_fill_chunk ) ( - 1 )		440214	1					
ANR	440502	CastTarget	mono_fill_chunk		440214	0					
ANR	440503	UnaryOperationExpression	- 1		440214	1					
ANR	440504	UnaryOperator	-		440214	0					
ANR	440505	PrimaryExpression	1		440214	1					
ANR	440506	Statement	FOR_EACH_LINE	200:20:7722:7734	440214	1	True				
ANR	440507	ElseStatement	else		440214	0					
ANR	440508	Statement	FOR_EACH_LINE	204:20:7908:7920	440214	0	True				
ANR	440509	Statement	(	196:33:7510:7510	440214	20	True				
ANR	440510	ExpressionStatement	* ptr &= ~mask	196:35:7512:7525	440214	21	True				
ANR	440511	AssignmentExpression	* ptr &= ~mask		440214	0		&=			
ANR	440512	UnaryOperationExpression	* ptr		440214	0					
ANR	440513	UnaryOperator	*		440214	0					
ANR	440514	Identifier	ptr		440214	1					
ANR	440515	Identifier	~mask		440214	1					
ANR	440516	ExpressionStatement	ptr [ 1 ] &= src_mask	197:35:7562:7580	440214	22	True				
ANR	440517	AssignmentExpression	ptr [ 1 ] &= src_mask		440214	0		&=			
ANR	440518	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440519	Identifier	ptr		440214	0					
ANR	440520	PrimaryExpression	1		440214	1					
ANR	440521	Identifier	src_mask		440214	1					
ANR	440522	ExpressionStatement	ptr [ 2 ] &= ~right_mask	198:35:7617:7638	440214	23	True				
ANR	440523	AssignmentExpression	ptr [ 2 ] &= ~right_mask		440214	0		&=			
ANR	440524	ArrayIndexing	ptr [ 2 ]		440214	0					
ANR	440525	Identifier	ptr		440214	0					
ANR	440526	PrimaryExpression	2		440214	1					
ANR	440527	Identifier	~right_mask		440214	1					
ANR	440528	Statement	)	198:58:7640:7640	440214	24	True				
ANR	440529	ExpressionStatement		198:59:7641:7641	440214	25	True				
ANR	440530	Statement	(	200:33:7735:7735	440214	26	True				
ANR	440531	ExpressionStatement	* ptr |= mask	200:35:7737:7749	440214	27	True				
ANR	440532	AssignmentExpression	* ptr |= mask		440214	0		|=			
ANR	440533	UnaryOperationExpression	* ptr		440214	0					
ANR	440534	UnaryOperator	*		440214	0					
ANR	440535	Identifier	ptr		440214	1					
ANR	440536	Identifier	mask		440214	1					
ANR	440537	ExpressionStatement	ptr [ 1 ] |= ~src_mask	201:35:7786:7805	440214	28	True				
ANR	440538	AssignmentExpression	ptr [ 1 ] |= ~src_mask		440214	0		|=			
ANR	440539	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440540	Identifier	ptr		440214	0					
ANR	440541	PrimaryExpression	1		440214	1					
ANR	440542	Identifier	~src_mask		440214	1					
ANR	440543	ExpressionStatement	ptr [ 2 ] |= right_mask	202:35:7842:7862	440214	29	True				
ANR	440544	AssignmentExpression	ptr [ 2 ] |= right_mask		440214	0		|=			
ANR	440545	ArrayIndexing	ptr [ 2 ]		440214	0					
ANR	440546	Identifier	ptr		440214	0					
ANR	440547	PrimaryExpression	2		440214	1					
ANR	440548	Identifier	right_mask		440214	1					
ANR	440549	Statement	)	202:57:7864:7864	440214	30	True				
ANR	440550	ExpressionStatement		202:58:7865:7865	440214	31	True				
ANR	440551	Statement	(	204:33:7921:7921	440214	32	True				
ANR	440552	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	204:35:7923:7963	440214	33	True				
ANR	440553	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		440214	0		=			
ANR	440554	UnaryOperationExpression	* ptr		440214	0					
ANR	440555	UnaryOperator	*		440214	0					
ANR	440556	Identifier	ptr		440214	1					
ANR	440557	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		440214	1		|			
ANR	440558	BitAndExpression	* ptr & ~mask		440214	0		&			
ANR	440559	UnaryOperationExpression	* ptr		440214	0					
ANR	440560	UnaryOperator	*		440214	0					
ANR	440561	Identifier	ptr		440214	1					
ANR	440562	Identifier	~mask		440214	1					
ANR	440563	BitAndExpression	pattern & mask		440214	1		&			
ANR	440564	Identifier	pattern		440214	0					
ANR	440565	Identifier	mask		440214	1					
ANR	440566	ExpressionStatement	ptr [ 1 ] = ( ptr [ 1 ] & src_mask ) | pattern	205:36:8001:8038	440214	34	True				
ANR	440567	AssignmentExpression	ptr [ 1 ] = ( ptr [ 1 ] & src_mask ) | pattern		440214	0		=			
ANR	440568	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440569	Identifier	ptr		440214	0					
ANR	440570	PrimaryExpression	1		440214	1					
ANR	440571	InclusiveOrExpression	( ptr [ 1 ] & src_mask ) | pattern		440214	1		|			
ANR	440572	BitAndExpression	ptr [ 1 ] & src_mask		440214	0		&			
ANR	440573	ArrayIndexing	ptr [ 1 ]		440214	0					
ANR	440574	Identifier	ptr		440214	0					
ANR	440575	PrimaryExpression	1		440214	1					
ANR	440576	Identifier	src_mask		440214	1					
ANR	440577	Identifier	pattern		440214	1					
ANR	440578	ExpressionStatement	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )	206:36:8076:8132	440214	35	True				
ANR	440579	AssignmentExpression	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		440214	0		=			
ANR	440580	ArrayIndexing	ptr [ 2 ]		440214	0					
ANR	440581	Identifier	ptr		440214	0					
ANR	440582	PrimaryExpression	2		440214	1					
ANR	440583	InclusiveOrExpression	( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		440214	1		|			
ANR	440584	BitAndExpression	ptr [ 2 ] & ~right_mask		440214	0		&			
ANR	440585	ArrayIndexing	ptr [ 2 ]		440214	0					
ANR	440586	Identifier	ptr		440214	0					
ANR	440587	PrimaryExpression	2		440214	1					
ANR	440588	Identifier	~right_mask		440214	1					
ANR	440589	BitAndExpression	pattern & right_mask		440214	1		&			
ANR	440590	Identifier	pattern		440214	0					
ANR	440591	Identifier	right_mask		440214	1					
ANR	440592	Statement	)	206:94:8134:8134	440214	36	True				
ANR	440593	ExpressionStatement		206:95:8135:8135	440214	37	True				
ANR	440594	BreakStatement	break ;	207:16:8153:8158	440214	38	True				
ANR	440595	Label	default :	208:12:8172:8179	440214	39	True				
ANR	440596	Identifier	default		440214	0					
ANR	440597	CompoundStatement		60:20:2383:2392	440214	40					
ANR	440598	IdentifierDeclStatement	int i ;	209:20:8219:8228	440214	0	True				
ANR	440599	IdentifierDecl	i		440214	0					
ANR	440600	IdentifierDeclType	int		440214	0					
ANR	440601	Identifier	i		440214	1					
ANR	440602	IfStatement	if ( pattern == 0 )		440214	1					
ANR	440603	Condition	pattern == 0	211:24:8255:8266	440214	0	True				
ANR	440604	EqualityExpression	pattern == 0		440214	0		==			
ANR	440605	Identifier	pattern		440214	0					
ANR	440606	PrimaryExpression	0		440214	1					
ANR	440607	Statement	FOR_EACH_LINE	212:24:8293:8305	440214	1	True				
ANR	440608	ElseStatement	else		440214	0					
ANR	440609	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		440214	0					
ANR	440610	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	216:29:8546:8577	440214	0	True				
ANR	440611	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		440214	0		==			
ANR	440612	Identifier	pattern		440214	0					
ANR	440613	CastExpression	( mono_fill_chunk ) ( - 1 )		440214	1					
ANR	440614	CastTarget	mono_fill_chunk		440214	0					
ANR	440615	UnaryOperationExpression	- 1		440214	1					
ANR	440616	UnaryOperator	-		440214	0					
ANR	440617	PrimaryExpression	1		440214	1					
ANR	440618	Statement	FOR_EACH_LINE	217:24:8604:8616	440214	1	True				
ANR	440619	ElseStatement	else		440214	0					
ANR	440620	Statement	FOR_EACH_LINE	222:24:8877:8889	440214	0	True				
ANR	440621	Statement	(	212:37:8306:8306	440214	2	True				
ANR	440622	ExpressionStatement	* ptr ++ &= ~mask	212:39:8308:8323	440214	3	True				
ANR	440623	AssignmentExpression	* ptr ++ &= ~mask		440214	0		&=			
ANR	440624	UnaryOperationExpression	* ptr ++		440214	0					
ANR	440625	UnaryOperator	*		440214	0					
ANR	440626	PostIncDecOperationExpression	ptr ++		440214	1					
ANR	440627	Identifier	ptr		440214	0					
ANR	440628	IncDec	++		440214	1					
ANR	440629	Identifier	~mask		440214	1					
ANR	440630	ForStatement	for ( i = 0 ; i < last ; i ++ )		440214	4					
ANR	440631	ForInit	i = 0 ;	213:44:8369:8374	440214	0	True				
ANR	440632	AssignmentExpression	i = 0		440214	0		=			
ANR	440633	Identifier	i		440214	0					
ANR	440634	PrimaryExpression	0		440214	1					
ANR	440635	Condition	i < last	213:51:8376:8383	440214	1	True				
ANR	440636	RelationalExpression	i < last		440214	0		<			
ANR	440637	Identifier	i		440214	0					
ANR	440638	Identifier	last		440214	1					
ANR	440639	PostIncDecOperationExpression	i ++	213:61:8386:8388	440214	2	True				
ANR	440640	Identifier	i		440214	0					
ANR	440641	IncDec	++		440214	1					
ANR	440642	ExpressionStatement	* ptr ++ &= src_mask	214:43:8434:8452	440214	3	True				
ANR	440643	AssignmentExpression	* ptr ++ &= src_mask		440214	0		&=			
ANR	440644	UnaryOperationExpression	* ptr ++		440214	0					
ANR	440645	UnaryOperator	*		440214	0					
ANR	440646	PostIncDecOperationExpression	ptr ++		440214	1					
ANR	440647	Identifier	ptr		440214	0					
ANR	440648	IncDec	++		440214	1					
ANR	440649	Identifier	src_mask		440214	1					
ANR	440650	ExpressionStatement	* ptr &= ~right_mask	215:39:8493:8512	440214	5	True				
ANR	440651	AssignmentExpression	* ptr &= ~right_mask		440214	0		&=			
ANR	440652	UnaryOperationExpression	* ptr		440214	0					
ANR	440653	UnaryOperator	*		440214	0					
ANR	440654	Identifier	ptr		440214	1					
ANR	440655	Identifier	~right_mask		440214	1					
ANR	440656	Statement	)	215:60:8514:8514	440214	6	True				
ANR	440657	ExpressionStatement		215:61:8515:8515	440214	7	True				
ANR	440658	Statement	(	217:37:8617:8617	440214	8	True				
ANR	440659	ExpressionStatement	* ptr ++ |= mask	217:39:8619:8633	440214	9	True				
ANR	440660	AssignmentExpression	* ptr ++ |= mask		440214	0		|=			
ANR	440661	UnaryOperationExpression	* ptr ++		440214	0					
ANR	440662	UnaryOperator	*		440214	0					
ANR	440663	PostIncDecOperationExpression	ptr ++		440214	1					
ANR	440664	Identifier	ptr		440214	0					
ANR	440665	IncDec	++		440214	1					
ANR	440666	Identifier	mask		440214	1					
ANR	440667	ForStatement	for ( i = 0 ; i < last ; i ++ )		440214	10					
ANR	440668	ForInit	i = 0 ;	218:44:8679:8684	440214	0	True				
ANR	440669	AssignmentExpression	i = 0		440214	0		=			
ANR	440670	Identifier	i		440214	0					
ANR	440671	PrimaryExpression	0		440214	1					
ANR	440672	Condition	i < last	218:51:8686:8693	440214	1	True				
ANR	440673	RelationalExpression	i < last		440214	0		<			
ANR	440674	Identifier	i		440214	0					
ANR	440675	Identifier	last		440214	1					
ANR	440676	PostIncDecOperationExpression	i ++	218:61:8696:8698	440214	2	True				
ANR	440677	Identifier	i		440214	0					
ANR	440678	IncDec	++		440214	1					
ANR	440679	ExpressionStatement	* ptr ++ |= ~src_mask	219:43:8744:8763	440214	3	True				
ANR	440680	AssignmentExpression	* ptr ++ |= ~src_mask		440214	0		|=			
ANR	440681	UnaryOperationExpression	* ptr ++		440214	0					
ANR	440682	UnaryOperator	*		440214	0					
ANR	440683	PostIncDecOperationExpression	ptr ++		440214	1					
ANR	440684	Identifier	ptr		440214	0					
ANR	440685	IncDec	++		440214	1					
ANR	440686	Identifier	~src_mask		440214	1					
ANR	440687	ExpressionStatement	* ptr |= right_mask	220:40:8805:8823	440214	11	True				
ANR	440688	AssignmentExpression	* ptr |= right_mask		440214	0		|=			
ANR	440689	UnaryOperationExpression	* ptr		440214	0					
ANR	440690	UnaryOperator	*		440214	0					
ANR	440691	Identifier	ptr		440214	1					
ANR	440692	Identifier	right_mask		440214	1					
ANR	440693	Statement	)	220:60:8825:8825	440214	12	True				
ANR	440694	ExpressionStatement		220:61:8826:8826	440214	13	True				
ANR	440695	Statement	(	222:37:8890:8890	440214	14	True				
ANR	440696	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	224:28:9001:9041	440214	15	True				
ANR	440697	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		440214	0		=			
ANR	440698	UnaryOperationExpression	* ptr		440214	0					
ANR	440699	UnaryOperator	*		440214	0					
ANR	440700	Identifier	ptr		440214	1					
ANR	440701	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		440214	1		|			
ANR	440702	BitAndExpression	* ptr & ~mask		440214	0		&			
ANR	440703	UnaryOperationExpression	* ptr		440214	0					
ANR	440704	UnaryOperator	*		440214	0					
ANR	440705	Identifier	ptr		440214	1					
ANR	440706	Identifier	~mask		440214	1					
ANR	440707	BitAndExpression	pattern & mask		440214	1		&			
ANR	440708	Identifier	pattern		440214	0					
ANR	440709	Identifier	mask		440214	1					
ANR	440710	ExpressionStatement	++ ptr	225:28:9071:9076	440214	16	True				
ANR	440711	UnaryExpression	++ ptr		440214	0					
ANR	440712	IncDec	++		440214	0					
ANR	440713	Identifier	ptr		440214	1					
ANR	440714	ForStatement	"for ( i = 0 ; i < last ; i ++ , ptr ++ )"		440214	17					
ANR	440715	ForInit	i = 0 ;	226:33:9111:9116	440214	0	True				
ANR	440716	AssignmentExpression	i = 0		440214	0		=			
ANR	440717	Identifier	i		440214	0					
ANR	440718	PrimaryExpression	0		440214	1					
ANR	440719	Condition	i < last	226:40:9118:9125	440214	1	True				
ANR	440720	RelationalExpression	i < last		440214	0		<			
ANR	440721	Identifier	i		440214	0					
ANR	440722	Identifier	last		440214	1					
ANR	440723	Expression	"i ++ , ptr ++"	226:50:9128:9137	440214	2	True				
ANR	440724	PostIncDecOperationExpression	i ++		440214	0					
ANR	440725	Identifier	i		440214	0					
ANR	440726	IncDec	++		440214	1					
ANR	440727	PostIncDecOperationExpression	ptr ++		440214	1					
ANR	440728	Identifier	ptr		440214	0					
ANR	440729	IncDec	++		440214	1					
ANR	440730	ExpressionStatement	* ptr = ( * ptr & src_mask ) | pattern	227:32:9172:9206	440214	3	True				
ANR	440731	AssignmentExpression	* ptr = ( * ptr & src_mask ) | pattern		440214	0		=			
ANR	440732	UnaryOperationExpression	* ptr		440214	0					
ANR	440733	UnaryOperator	*		440214	0					
ANR	440734	Identifier	ptr		440214	1					
ANR	440735	InclusiveOrExpression	( * ptr & src_mask ) | pattern		440214	1		|			
ANR	440736	BitAndExpression	* ptr & src_mask		440214	0		&			
ANR	440737	UnaryOperationExpression	* ptr		440214	0					
ANR	440738	UnaryOperator	*		440214	0					
ANR	440739	Identifier	ptr		440214	1					
ANR	440740	Identifier	src_mask		440214	1					
ANR	440741	Identifier	pattern		440214	1					
ANR	440742	ExpressionStatement	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )	228:28:9236:9288	440214	18	True				
ANR	440743	AssignmentExpression	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )		440214	0		=			
ANR	440744	UnaryOperationExpression	* ptr		440214	0					
ANR	440745	UnaryOperator	*		440214	0					
ANR	440746	Identifier	ptr		440214	1					
ANR	440747	InclusiveOrExpression	( * ptr & ~right_mask ) | ( pattern & right_mask )		440214	1		|			
ANR	440748	BitAndExpression	* ptr & ~right_mask		440214	0		&			
ANR	440749	UnaryOperationExpression	* ptr		440214	0					
ANR	440750	UnaryOperator	*		440214	0					
ANR	440751	Identifier	ptr		440214	1					
ANR	440752	Identifier	~right_mask		440214	1					
ANR	440753	BitAndExpression	pattern & right_mask		440214	1		&			
ANR	440754	Identifier	pattern		440214	0					
ANR	440755	Identifier	right_mask		440214	1					
ANR	440756	Statement	)	228:82:9290:9290	440214	19	True				
ANR	440757	ExpressionStatement		228:83:9291:9291	440214	20	True				
ANR	440758	Statement	undef	232:1:9328:9332	440214	15	True				
ANR	440759	Statement	FOR_EACH_LINE	232:7:9334:9346	440214	16	True				
ANR	440760	ReturnType	void		440214	1					
ANR	440761	Identifier	bits_fill_rectangle_masked		440214	2					
ANR	440762	ParameterList	"byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , mono_fill_chunk src_mask , int width_bits , int height"		440214	3					
ANR	440763	Parameter	byte * dest	147:27:5675:5685	440214	0	True				
ANR	440764	ParameterType	byte *		440214	0					
ANR	440765	Identifier	dest		440214	1					
ANR	440766	Parameter	int dest_bit	147:40:5688:5699	440214	1	True				
ANR	440767	ParameterType	int		440214	0					
ANR	440768	Identifier	dest_bit		440214	1					
ANR	440769	Parameter	uint draster	147:54:5702:5713	440214	2	True				
ANR	440770	ParameterType	uint		440214	0					
ANR	440771	Identifier	draster		440214	1					
ANR	440772	Parameter	mono_fill_chunk pattern	148:20:5736:5758	440214	3	True				
ANR	440773	ParameterType	mono_fill_chunk		440214	0					
ANR	440774	Identifier	pattern		440214	1					
ANR	440775	Parameter	mono_fill_chunk src_mask	148:45:5761:5784	440214	4	True				
ANR	440776	ParameterType	mono_fill_chunk		440214	0					
ANR	440777	Identifier	src_mask		440214	1					
ANR	440778	Parameter	int width_bits	149:20:5807:5820	440214	5	True				
ANR	440779	ParameterType	int		440214	0					
ANR	440780	Identifier	width_bits		440214	1					
ANR	440781	Parameter	int height	149:36:5823:5832	440214	6	True				
ANR	440782	ParameterType	int		440214	0					
ANR	440783	Identifier	height		440214	1					
ANR	440784	CFGEntryNode	ENTRY		440214		True				
ANR	440785	CFGExitNode	EXIT		440214		True				
ANR	440786	Symbol	width_bits		440214						
ANR	440787	Symbol	chunk_log2_bits		440214						
ANR	440788	Symbol	pattern		440214						
ANR	440789	Symbol	~mask		440214						
ANR	440790	Symbol	dest		440214						
ANR	440791	Symbol	bit		440214						
ANR	440792	Symbol	inc_ptr		440214						
ANR	440793	Symbol	chunk_bits		440214						
ANR	440794	Symbol	* ptr		440214						
ANR	440795	Symbol	~src_mask		440214						
ANR	440796	Symbol	height		440214						
ANR	440797	Symbol	mask		440214						
ANR	440798	Symbol	line_count		440214						
ANR	440799	Symbol	last		440214						
ANR	440800	Symbol	draster		440214						
ANR	440801	Symbol	* ptr ++		440214						
ANR	440802	Symbol	dest_bit		440214						
ANR	440803	Symbol	right_mask		440214						
ANR	440804	Symbol	i		440214						
ANR	440805	Symbol	chunk_align_bit_mask		440214						
ANR	440806	Symbol	src_mask		440214						
ANR	440807	Symbol	last_bit		440214						
ANR	440808	Symbol	ptr		440214						
ANR	440809	Symbol	~right_mask		440214						
ANR	440810	Symbol	chunk_bit_mask		440214						
ANR	440811	Function	bits_replicate_horizontally	236:0:9399:11337							
ANR	440812	FunctionDef	"bits_replicate_horizontally (byte * data , uint width , uint height , uint raster , uint replicated_width , uint replicated_raster)"		440811	0					
ANR	440813	CompoundStatement		239:0:9547:11337	440811	0					
ANR	440814	IdentifierDeclStatement	const byte * orig_row = data + ( height - 1 ) * raster ;	241:4:9611:9662	440811	0	True				
ANR	440815	IdentifierDecl	* orig_row = data + ( height - 1 ) * raster		440811	0					
ANR	440816	IdentifierDeclType	const byte *		440811	0					
ANR	440817	Identifier	orig_row		440811	1					
ANR	440818	AssignmentExpression	* orig_row = data + ( height - 1 ) * raster		440811	2		=			
ANR	440819	Identifier	orig_row		440811	0					
ANR	440820	AdditiveExpression	data + ( height - 1 ) * raster		440811	1		+			
ANR	440821	Identifier	data		440811	0					
ANR	440822	MultiplicativeExpression	( height - 1 ) * raster		440811	1		*			
ANR	440823	AdditiveExpression	height - 1		440811	0		-			
ANR	440824	Identifier	height		440811	0					
ANR	440825	PrimaryExpression	1		440811	1					
ANR	440826	Identifier	raster		440811	1					
ANR	440827	IdentifierDeclStatement	byte * tile_row = data + ( height - 1 ) * replicated_raster ;	242:4:9668:9724	440811	1	True				
ANR	440828	IdentifierDecl	* tile_row = data + ( height - 1 ) * replicated_raster		440811	0					
ANR	440829	IdentifierDeclType	byte *		440811	0					
ANR	440830	Identifier	tile_row		440811	1					
ANR	440831	AssignmentExpression	* tile_row = data + ( height - 1 ) * replicated_raster		440811	2		=			
ANR	440832	Identifier	tile_row		440811	0					
ANR	440833	AdditiveExpression	data + ( height - 1 ) * replicated_raster		440811	1		+			
ANR	440834	Identifier	data		440811	0					
ANR	440835	MultiplicativeExpression	( height - 1 ) * replicated_raster		440811	1		*			
ANR	440836	AdditiveExpression	height - 1		440811	0		-			
ANR	440837	Identifier	height		440811	0					
ANR	440838	PrimaryExpression	1		440811	1					
ANR	440839	Identifier	replicated_raster		440811	1					
ANR	440840	IdentifierDeclStatement	uint y ;	243:4:9730:9736	440811	2	True				
ANR	440841	IdentifierDecl	y		440811	0					
ANR	440842	IdentifierDeclType	uint		440811	0					
ANR	440843	Identifier	y		440811	1					
ANR	440844	IfStatement	if ( ! ( width & 7 ) )		440811	3					
ANR	440845	Condition	! ( width & 7 )	245:8:9747:9758	440811	0	True				
ANR	440846	UnaryOperationExpression	! ( width & 7 )		440811	0					
ANR	440847	UnaryOperator	!		440811	0					
ANR	440848	BitAndExpression	width & 7		440811	1		&			
ANR	440849	Identifier	width		440811	0					
ANR	440850	PrimaryExpression	7		440811	1					
ANR	440851	CompoundStatement		9:8:260:299	440811	1					
ANR	440852	IdentifierDeclStatement	uint src_bytes = width >> 3 ;	246:8:9771:9798	440811	0	True				
ANR	440853	IdentifierDecl	src_bytes = width >> 3		440811	0					
ANR	440854	IdentifierDeclType	uint		440811	0					
ANR	440855	Identifier	src_bytes		440811	1					
ANR	440856	AssignmentExpression	src_bytes = width >> 3		440811	2		=			
ANR	440857	Identifier	src_bytes		440811	0					
ANR	440858	ShiftExpression	width >> 3		440811	1		>>			
ANR	440859	Identifier	width		440811	0					
ANR	440860	PrimaryExpression	3		440811	1					
ANR	440861	IdentifierDeclStatement	uint dest_bytes = replicated_width >> 3 ;	247:8:9808:9847	440811	1	True				
ANR	440862	IdentifierDecl	dest_bytes = replicated_width >> 3		440811	0					
ANR	440863	IdentifierDeclType	uint		440811	0					
ANR	440864	Identifier	dest_bytes		440811	1					
ANR	440865	AssignmentExpression	dest_bytes = replicated_width >> 3		440811	2		=			
ANR	440866	Identifier	dest_bytes		440811	0					
ANR	440867	ShiftExpression	replicated_width >> 3		440811	1		>>			
ANR	440868	Identifier	replicated_width		440811	0					
ANR	440869	PrimaryExpression	3		440811	1					
ANR	440870	ForStatement	"for ( y = height ; y -- > 0 ; orig_row -= raster , tile_row -= replicated_raster )"		440811	2					
ANR	440871	ForInit	y = height ;	249:13:9863:9873	440811	0	True				
ANR	440872	AssignmentExpression	y = height		440811	0		=			
ANR	440873	Identifier	y		440811	0					
ANR	440874	Identifier	height		440811	1					
ANR	440875	Condition	y -- > 0	249:25:9875:9881	440811	1	True				
ANR	440876	RelationalExpression	y -- > 0		440811	0		>			
ANR	440877	PostIncDecOperationExpression	y --		440811	0					
ANR	440878	Identifier	y		440811	0					
ANR	440879	IncDec	--		440811	1					
ANR	440880	PrimaryExpression	0		440811	1					
ANR	440881	Expression	"orig_row -= raster , tile_row -= replicated_raster"	250:13:9897:9945	440811	2	True				
ANR	440882	AssignmentExpression	orig_row -= raster		440811	0		-=			
ANR	440883	Identifier	orig_row		440811	0					
ANR	440884	Identifier	raster		440811	1					
ANR	440885	AssignmentExpression	tile_row -= replicated_raster		440811	1		-=			
ANR	440886	Identifier	tile_row		440811	0					
ANR	440887	Identifier	replicated_raster		440811	1					
ANR	440888	CompoundStatement		16:12:504:548	440811	3					
ANR	440889	IdentifierDeclStatement	uint move = src_bytes ;	252:12:9976:9997	440811	0	True				
ANR	440890	IdentifierDecl	move = src_bytes		440811	0					
ANR	440891	IdentifierDeclType	uint		440811	0					
ANR	440892	Identifier	move		440811	1					
ANR	440893	AssignmentExpression	move = src_bytes		440811	2		=			
ANR	440894	Identifier	src_bytes		440811	0					
ANR	440895	Identifier	src_bytes		440811	1					
ANR	440896	IdentifierDeclStatement	const byte * from = orig_row ;	253:12:10011:10038	440811	1	True				
ANR	440897	IdentifierDecl	* from = orig_row		440811	0					
ANR	440898	IdentifierDeclType	const byte *		440811	0					
ANR	440899	Identifier	from		440811	1					
ANR	440900	AssignmentExpression	* from = orig_row		440811	2		=			
ANR	440901	Identifier	orig_row		440811	0					
ANR	440902	Identifier	orig_row		440811	1					
ANR	440903	IdentifierDeclStatement	byte * to = tile_row + dest_bytes - src_bytes ;	254:12:10052:10096	440811	2	True				
ANR	440904	IdentifierDecl	* to = tile_row + dest_bytes - src_bytes		440811	0					
ANR	440905	IdentifierDeclType	byte *		440811	0					
ANR	440906	Identifier	to		440811	1					
ANR	440907	AssignmentExpression	* to = tile_row + dest_bytes - src_bytes		440811	2		=			
ANR	440908	Identifier	to		440811	0					
ANR	440909	AdditiveExpression	tile_row + dest_bytes - src_bytes		440811	1		+			
ANR	440910	Identifier	tile_row		440811	0					
ANR	440911	AdditiveExpression	dest_bytes - src_bytes		440811	1		-			
ANR	440912	Identifier	dest_bytes		440811	0					
ANR	440913	Identifier	src_bytes		440811	1					
ANR	440914	ExpressionStatement	"memmove ( to , from , move )"	256:12:10111:10134	440811	3	True				
ANR	440915	CallExpression	"memmove ( to , from , move )"		440811	0					
ANR	440916	Callee	memmove		440811	0					
ANR	440917	Identifier	memmove		440811	0					
ANR	440918	ArgumentList	to		440811	1					
ANR	440919	Argument	to		440811	0					
ANR	440920	Identifier	to		440811	0					
ANR	440921	Argument	from		440811	1					
ANR	440922	Identifier	from		440811	0					
ANR	440923	Argument	move		440811	2					
ANR	440924	Identifier	move		440811	0					
ANR	440925	WhileStatement	while ( to - tile_row >= move )		440811	4					
ANR	440926	Condition	to - tile_row >= move	257:19:10155:10175	440811	0	True				
ANR	440927	RelationalExpression	to - tile_row >= move		440811	0		>=			
ANR	440928	AdditiveExpression	to - tile_row		440811	0		-			
ANR	440929	Identifier	to		440811	0					
ANR	440930	Identifier	tile_row		440811	1					
ANR	440931	Identifier	move		440811	1					
ANR	440932	CompoundStatement		19:42:630:630	440811	1					
ANR	440933	ExpressionStatement	from = to	258:16:10196:10205	440811	0	True				
ANR	440934	AssignmentExpression	from = to		440811	0		=			
ANR	440935	Identifier	from		440811	0					
ANR	440936	Identifier	to		440811	1					
ANR	440937	ExpressionStatement	to -= move	259:16:10223:10233	440811	1	True				
ANR	440938	AssignmentExpression	to -= move		440811	0		-=			
ANR	440939	Identifier	to		440811	0					
ANR	440940	Identifier	move		440811	1					
ANR	440941	ExpressionStatement	"memmove ( to , from , move )"	260:16:10251:10274	440811	2	True				
ANR	440942	CallExpression	"memmove ( to , from , move )"		440811	0					
ANR	440943	Callee	memmove		440811	0					
ANR	440944	Identifier	memmove		440811	0					
ANR	440945	ArgumentList	to		440811	1					
ANR	440946	Argument	to		440811	0					
ANR	440947	Identifier	to		440811	0					
ANR	440948	Argument	from		440811	1					
ANR	440949	Identifier	from		440811	0					
ANR	440950	Argument	move		440811	2					
ANR	440951	Identifier	move		440811	0					
ANR	440952	ExpressionStatement	move <<= 1	261:16:10292:10302	440811	3	True				
ANR	440953	AssignmentExpression	move <<= 1		440811	0		<<=			
ANR	440954	Identifier	move		440811	0					
ANR	440955	PrimaryExpression	1		440811	1					
ANR	440956	IfStatement	if ( to != tile_row )		440811	5					
ANR	440957	Condition	to != tile_row	263:16:10334:10347	440811	0	True				
ANR	440958	EqualityExpression	to != tile_row		440811	0		!=			
ANR	440959	Identifier	to		440811	0					
ANR	440960	Identifier	tile_row		440811	1					
ANR	440961	ExpressionStatement	"memmove ( tile_row , to , to - tile_row )"	264:16:10366:10402	440811	1	True				
ANR	440962	CallExpression	"memmove ( tile_row , to , to - tile_row )"		440811	0					
ANR	440963	Callee	memmove		440811	0					
ANR	440964	Identifier	memmove		440811	0					
ANR	440965	ArgumentList	tile_row		440811	1					
ANR	440966	Argument	tile_row		440811	0					
ANR	440967	Identifier	tile_row		440811	0					
ANR	440968	Argument	to		440811	1					
ANR	440969	Identifier	to		440811	0					
ANR	440970	Argument	to - tile_row		440811	2					
ANR	440971	AdditiveExpression	to - tile_row		440811	0		-			
ANR	440972	Identifier	to		440811	0					
ANR	440973	Identifier	tile_row		440811	1					
ANR	440974	ElseStatement	else		440811	0					
ANR	440975	CompoundStatement		33:8:1070:1115	440811	0					
ANR	440976	IdentifierDeclStatement	uint bit_count = width & ( uint ) ( - ( int ) width ) ;	270:8:10534:10578	440811	0	True				
ANR	440977	IdentifierDecl	bit_count = width & ( uint ) ( - ( int ) width )		440811	0					
ANR	440978	IdentifierDeclType	uint		440811	0					
ANR	440979	Identifier	bit_count		440811	1					
ANR	440980	AssignmentExpression	bit_count = width & ( uint ) ( - ( int ) width )		440811	2		=			
ANR	440981	Identifier	bit_count		440811	0					
ANR	440982	BitAndExpression	width & ( uint ) ( - ( int ) width )		440811	1		&			
ANR	440983	Identifier	width		440811	0					
ANR	440984	CastExpression	( uint ) ( - ( int ) width )		440811	1					
ANR	440985	CastTarget	uint		440811	0					
ANR	440986	UnaryOperationExpression	- ( int ) width		440811	1					
ANR	440987	UnaryOperator	-		440811	0					
ANR	440988	CastExpression	( int ) width		440811	1					
ANR	440989	CastTarget	int		440811	0					
ANR	440990	Identifier	width		440811	1					
ANR	440991	IdentifierDeclStatement	uint left_mask = ( 0xff00 >> bit_count ) & 0xff ;	271:8:10618:10663	440811	1	True				
ANR	440992	IdentifierDecl	left_mask = ( 0xff00 >> bit_count ) & 0xff		440811	0					
ANR	440993	IdentifierDeclType	uint		440811	0					
ANR	440994	Identifier	left_mask		440811	1					
ANR	440995	AssignmentExpression	left_mask = ( 0xff00 >> bit_count ) & 0xff		440811	2		=			
ANR	440996	Identifier	left_mask		440811	0					
ANR	440997	BitAndExpression	( 0xff00 >> bit_count ) & 0xff		440811	1		&			
ANR	440998	ShiftExpression	0xff00 >> bit_count		440811	0		>>			
ANR	440999	PrimaryExpression	0xff00		440811	0					
ANR	441000	Identifier	bit_count		440811	1					
ANR	441001	PrimaryExpression	0xff		440811	1					
ANR	441002	ForStatement	"for ( y = height ; y -- > 0 ; orig_row -= raster , tile_row -= replicated_raster )"		440811	2					
ANR	441003	ForInit	y = height ;	273:13:10679:10689	440811	0	True				
ANR	441004	AssignmentExpression	y = height		440811	0		=			
ANR	441005	Identifier	y		440811	0					
ANR	441006	Identifier	height		440811	1					
ANR	441007	Condition	y -- > 0	273:25:10691:10697	440811	1	True				
ANR	441008	RelationalExpression	y -- > 0		440811	0		>			
ANR	441009	PostIncDecOperationExpression	y --		440811	0					
ANR	441010	Identifier	y		440811	0					
ANR	441011	IncDec	--		440811	1					
ANR	441012	PrimaryExpression	0		440811	1					
ANR	441013	Expression	"orig_row -= raster , tile_row -= replicated_raster"	274:13:10713:10761	440811	2	True				
ANR	441014	AssignmentExpression	orig_row -= raster		440811	0		-=			
ANR	441015	Identifier	orig_row		440811	0					
ANR	441016	Identifier	raster		440811	1					
ANR	441017	AssignmentExpression	tile_row -= replicated_raster		440811	1		-=			
ANR	441018	Identifier	tile_row		440811	0					
ANR	441019	Identifier	replicated_raster		440811	1					
ANR	441020	CompoundStatement		38:12:1244:1251	440811	3					
ANR	441021	IdentifierDeclStatement	uint sx ;	276:12:10792:10799	440811	0	True				
ANR	441022	IdentifierDecl	sx		440811	0					
ANR	441023	IdentifierDeclType	uint		440811	0					
ANR	441024	Identifier	sx		440811	1					
ANR	441025	ForStatement	for ( sx = width ; sx > 0 ; )		440811	1					
ANR	441026	ForInit	sx = width ;	278:17:10819:10829	440811	0	True				
ANR	441027	AssignmentExpression	sx = width		440811	0		=			
ANR	441028	Identifier	sx		440811	0					
ANR	441029	Identifier	width		440811	1					
ANR	441030	Condition	sx > 0	278:29:10831:10836	440811	1	True				
ANR	441031	RelationalExpression	sx > 0		440811	0		>			
ANR	441032	Identifier	sx		440811	0					
ANR	441033	PrimaryExpression	0		440811	1					
ANR	441034	CompoundStatement		41:16:1310:1323	440811	2					
ANR	441035	IdentifierDeclStatement	"uint bits , dx ;"	279:16:10858:10871	440811	0	True				
ANR	441036	IdentifierDecl	bits		440811	0					
ANR	441037	IdentifierDeclType	uint		440811	0					
ANR	441038	Identifier	bits		440811	1					
ANR	441039	IdentifierDecl	dx		440811	1					
ANR	441040	IdentifierDeclType	uint		440811	0					
ANR	441041	Identifier	dx		440811	1					
ANR	441042	ExpressionStatement	sx -= bit_count	281:16:10890:10905	440811	1	True				
ANR	441043	AssignmentExpression	sx -= bit_count		440811	0		-=			
ANR	441044	Identifier	sx		440811	0					
ANR	441045	Identifier	bit_count		440811	1					
ANR	441046	ExpressionStatement	bits = ( orig_row [ sx >> 3 ] << ( sx & 7 ) ) & left_mask	282:16:10923:10973	440811	2	True				
ANR	441047	AssignmentExpression	bits = ( orig_row [ sx >> 3 ] << ( sx & 7 ) ) & left_mask		440811	0		=			
ANR	441048	Identifier	bits		440811	0					
ANR	441049	BitAndExpression	( orig_row [ sx >> 3 ] << ( sx & 7 ) ) & left_mask		440811	1		&			
ANR	441050	ShiftExpression	orig_row [ sx >> 3 ] << ( sx & 7 )		440811	0		<<			
ANR	441051	ArrayIndexing	orig_row [ sx >> 3 ]		440811	0					
ANR	441052	Identifier	orig_row		440811	0					
ANR	441053	ShiftExpression	sx >> 3		440811	1		>>			
ANR	441054	Identifier	sx		440811	0					
ANR	441055	PrimaryExpression	3		440811	1					
ANR	441056	BitAndExpression	sx & 7		440811	1		&			
ANR	441057	Identifier	sx		440811	0					
ANR	441058	PrimaryExpression	7		440811	1					
ANR	441059	Identifier	left_mask		440811	1					
ANR	441060	ForStatement	for ( dx = sx + replicated_width ; dx >= width ; )		440811	3					
ANR	441061	ForInit	dx = sx + replicated_width ;	283:21:10996:11022	440811	0	True				
ANR	441062	AssignmentExpression	dx = sx + replicated_width		440811	0		=			
ANR	441063	Identifier	dx		440811	0					
ANR	441064	AdditiveExpression	sx + replicated_width		440811	1		+			
ANR	441065	Identifier	sx		440811	0					
ANR	441066	Identifier	replicated_width		440811	1					
ANR	441067	Condition	dx >= width	283:49:11024:11034	440811	1	True				
ANR	441068	RelationalExpression	dx >= width		440811	0		>=			
ANR	441069	Identifier	dx		440811	0					
ANR	441070	Identifier	width		440811	1					
ANR	441071	CompoundStatement		47:20:1542:1550	440811	2					
ANR	441072	IdentifierDeclStatement	byte * dp ;	284:20:11060:11068	440811	0	True				
ANR	441073	IdentifierDecl	* dp		440811	0					
ANR	441074	IdentifierDeclType	byte *		440811	0					
ANR	441075	Identifier	dp		440811	1					
ANR	441076	IdentifierDeclStatement	int dbit ;	285:20:11090:11098	440811	1	True				
ANR	441077	IdentifierDecl	dbit		440811	0					
ANR	441078	IdentifierDeclType	int		440811	0					
ANR	441079	Identifier	dbit		440811	1					
ANR	441080	ExpressionStatement	dx -= width	287:20:11121:11132	440811	2	True				
ANR	441081	AssignmentExpression	dx -= width		440811	0		-=			
ANR	441082	Identifier	dx		440811	0					
ANR	441083	Identifier	width		440811	1					
ANR	441084	ExpressionStatement	dbit = dx & 7	288:20:11154:11167	440811	3	True				
ANR	441085	AssignmentExpression	dbit = dx & 7		440811	0		=			
ANR	441086	Identifier	dbit		440811	0					
ANR	441087	BitAndExpression	dx & 7		440811	1		&			
ANR	441088	Identifier	dx		440811	0					
ANR	441089	PrimaryExpression	7		440811	1					
ANR	441090	ExpressionStatement	dp = tile_row + ( dx >> 3 )	289:20:11189:11214	440811	4	True				
ANR	441091	AssignmentExpression	dp = tile_row + ( dx >> 3 )		440811	0		=			
ANR	441092	Identifier	dp		440811	0					
ANR	441093	AdditiveExpression	tile_row + ( dx >> 3 )		440811	1		+			
ANR	441094	Identifier	tile_row		440811	0					
ANR	441095	ShiftExpression	dx >> 3		440811	1		>>			
ANR	441096	Identifier	dx		440811	0					
ANR	441097	PrimaryExpression	3		440811	1					
ANR	441098	ExpressionStatement	* dp = ( * dp & ~ ( left_mask >> dbit ) ) | ( bits >> dbit )	290:20:11236:11287	440811	5	True				
ANR	441099	AssignmentExpression	* dp = ( * dp & ~ ( left_mask >> dbit ) ) | ( bits >> dbit )		440811	0		=			
ANR	441100	UnaryOperationExpression	* dp		440811	0					
ANR	441101	UnaryOperator	*		440811	0					
ANR	441102	Identifier	dp		440811	1					
ANR	441103	InclusiveOrExpression	( * dp & ~ ( left_mask >> dbit ) ) | ( bits >> dbit )		440811	1		|			
ANR	441104	BitAndExpression	* dp & ~ ( left_mask >> dbit )		440811	0		&			
ANR	441105	UnaryOperationExpression	* dp		440811	0					
ANR	441106	UnaryOperator	*		440811	0					
ANR	441107	Identifier	dp		440811	1					
ANR	441108	UnaryOperationExpression	~ ( left_mask >> dbit )		440811	1					
ANR	441109	UnaryOperator	~		440811	0					
ANR	441110	ShiftExpression	left_mask >> dbit		440811	1		>>			
ANR	441111	Identifier	left_mask		440811	0					
ANR	441112	Identifier	dbit		440811	1					
ANR	441113	ShiftExpression	bits >> dbit		440811	1		>>			
ANR	441114	Identifier	bits		440811	0					
ANR	441115	Identifier	dbit		440811	1					
ANR	441116	ReturnType	void		440811	1					
ANR	441117	Identifier	bits_replicate_horizontally		440811	2					
ANR	441118	ParameterList	"byte * data , uint width , uint height , uint raster , uint replicated_width , uint replicated_raster"		440811	3					
ANR	441119	Parameter	byte * data	237:28:9432:9442	440811	0	True				
ANR	441120	ParameterType	byte *		440811	0					
ANR	441121	Identifier	data		440811	1					
ANR	441122	Parameter	uint width	237:41:9445:9454	440811	1	True				
ANR	441123	ParameterType	uint		440811	0					
ANR	441124	Identifier	width		440811	1					
ANR	441125	Parameter	uint height	237:53:9457:9467	440811	2	True				
ANR	441126	ParameterType	uint		440811	0					
ANR	441127	Identifier	height		440811	1					
ANR	441128	Parameter	uint raster	238:17:9487:9497	440811	3	True				
ANR	441129	ParameterType	uint		440811	0					
ANR	441130	Identifier	raster		440811	1					
ANR	441131	Parameter	uint replicated_width	238:30:9500:9520	440811	4	True				
ANR	441132	ParameterType	uint		440811	0					
ANR	441133	Identifier	replicated_width		440811	1					
ANR	441134	Parameter	uint replicated_raster	238:53:9523:9544	440811	5	True				
ANR	441135	ParameterType	uint		440811	0					
ANR	441136	Identifier	replicated_raster		440811	1					
ANR	441137	CFGEntryNode	ENTRY		440811		True				
ANR	441138	CFGExitNode	EXIT		440811		True				
ANR	441139	Symbol	move		440811						
ANR	441140	Symbol	data		440811						
ANR	441141	Symbol	sx		440811						
ANR	441142	Symbol	dbit		440811						
ANR	441143	Symbol	raster		440811						
ANR	441144	Symbol	bits		440811						
ANR	441145	Symbol	* sx		440811						
ANR	441146	Symbol	dest_bytes		440811						
ANR	441147	Symbol	dp		440811						
ANR	441148	Symbol	* dp		440811						
ANR	441149	Symbol	orig_row		440811						
ANR	441150	Symbol	dx		440811						
ANR	441151	Symbol	left_mask		440811						
ANR	441152	Symbol	src_bytes		440811						
ANR	441153	Symbol	tile_row		440811						
ANR	441154	Symbol	width		440811						
ANR	441155	Symbol	y		440811						
ANR	441156	Symbol	bit_count		440811						
ANR	441157	Symbol	replicated_raster		440811						
ANR	441158	Symbol	from		440811						
ANR	441159	Symbol	* orig_row		440811						
ANR	441160	Symbol	replicated_width		440811						
ANR	441161	Symbol	to		440811						
ANR	441162	Symbol	height		440811						
ANR	441163	Function	bits_replicate_vertically	298:0:11386:11712							
ANR	441164	FunctionDef	"bits_replicate_vertically (byte * data , uint height , uint raster , uint replicated_height)"		441163	0					
ANR	441165	CompoundStatement		301:0:11506:11712	441163	0					
ANR	441166	IdentifierDeclStatement	byte * dest = data ;	302:4:11512:11529	441163	0	True				
ANR	441167	IdentifierDecl	* dest = data		441163	0					
ANR	441168	IdentifierDeclType	byte *		441163	0					
ANR	441169	Identifier	dest		441163	1					
ANR	441170	AssignmentExpression	* dest = data		441163	2		=			
ANR	441171	Identifier	data		441163	0					
ANR	441172	Identifier	data		441163	1					
ANR	441173	IdentifierDeclStatement	uint h = replicated_height ;	303:4:11535:11561	441163	1	True				
ANR	441174	IdentifierDecl	h = replicated_height		441163	0					
ANR	441175	IdentifierDeclType	uint		441163	0					
ANR	441176	Identifier	h		441163	1					
ANR	441177	AssignmentExpression	h = replicated_height		441163	2		=			
ANR	441178	Identifier	replicated_height		441163	0					
ANR	441179	Identifier	replicated_height		441163	1					
ANR	441180	IdentifierDeclStatement	uint size = raster * height ;	304:4:11567:11594	441163	2	True				
ANR	441181	IdentifierDecl	size = raster * height		441163	0					
ANR	441182	IdentifierDeclType	uint		441163	0					
ANR	441183	Identifier	size		441163	1					
ANR	441184	AssignmentExpression	size = raster * height		441163	2		=			
ANR	441185	Identifier	size		441163	0					
ANR	441186	MultiplicativeExpression	raster * height		441163	1		*			
ANR	441187	Identifier	raster		441163	0					
ANR	441188	Identifier	height		441163	1					
ANR	441189	WhileStatement	while ( h > height )		441163	3					
ANR	441190	Condition	h > height	306:11:11608:11617	441163	0	True				
ANR	441191	RelationalExpression	h > height		441163	0		>			
ANR	441192	Identifier	h		441163	0					
ANR	441193	Identifier	height		441163	1					
ANR	441194	CompoundStatement		6:23:113:113	441163	1					
ANR	441195	ExpressionStatement	"memcpy ( dest + size , dest , size )"	307:8:11630:11661	441163	0	True				
ANR	441196	CallExpression	"memcpy ( dest + size , dest , size )"		441163	0					
ANR	441197	Callee	memcpy		441163	0					
ANR	441198	Identifier	memcpy		441163	0					
ANR	441199	ArgumentList	dest + size		441163	1					
ANR	441200	Argument	dest + size		441163	0					
ANR	441201	AdditiveExpression	dest + size		441163	0		+			
ANR	441202	Identifier	dest		441163	0					
ANR	441203	Identifier	size		441163	1					
ANR	441204	Argument	dest		441163	1					
ANR	441205	Identifier	dest		441163	0					
ANR	441206	Argument	size		441163	2					
ANR	441207	Identifier	size		441163	0					
ANR	441208	ExpressionStatement	dest += size	308:8:11671:11683	441163	1	True				
ANR	441209	AssignmentExpression	dest += size		441163	0		+=			
ANR	441210	Identifier	dest		441163	0					
ANR	441211	Identifier	size		441163	1					
ANR	441212	ExpressionStatement	h -= height	309:8:11693:11704	441163	2	True				
ANR	441213	AssignmentExpression	h -= height		441163	0		-=			
ANR	441214	Identifier	h		441163	0					
ANR	441215	Identifier	height		441163	1					
ANR	441216	ReturnType	void		441163	1					
ANR	441217	Identifier	bits_replicate_vertically		441163	2					
ANR	441218	ParameterList	"byte * data , uint height , uint raster , uint replicated_height"		441163	3					
ANR	441219	Parameter	byte * data	299:26:11417:11427	441163	0	True				
ANR	441220	ParameterType	byte *		441163	0					
ANR	441221	Identifier	data		441163	1					
ANR	441222	Parameter	uint height	299:39:11430:11440	441163	1	True				
ANR	441223	ParameterType	uint		441163	0					
ANR	441224	Identifier	height		441163	1					
ANR	441225	Parameter	uint raster	299:52:11443:11453	441163	2	True				
ANR	441226	ParameterType	uint		441163	0					
ANR	441227	Identifier	raster		441163	1					
ANR	441228	Parameter	uint replicated_height	300:26:11482:11503	441163	3	True				
ANR	441229	ParameterType	uint		441163	0					
ANR	441230	Identifier	replicated_height		441163	1					
ANR	441231	CFGEntryNode	ENTRY		441163		True				
ANR	441232	CFGExitNode	EXIT		441163		True				
ANR	441233	Symbol	data		441163						
ANR	441234	Symbol	size		441163						
ANR	441235	Symbol	replicated_height		441163						
ANR	441236	Symbol	raster		441163						
ANR	441237	Symbol	h		441163						
ANR	441238	Symbol	dest		441163						
ANR	441239	Symbol	height		441163						
ANR	441240	Function	bits_bounding_box	315:0:11801:15577							
ANR	441241	FunctionDef	"bits_bounding_box (const byte * data , uint height , uint raster , gs_int_rect * pbox)"		441240	0					
ANR	441242	CompoundStatement		318:0:11907:15577	441240	0					
ANR	441243	Statement	register	319:4:11913:11920	441240	0	True				
ANR	441244	IdentifierDeclStatement	const ulong * lp ;	319:13:11922:11937	441240	1	True				
ANR	441245	IdentifierDecl	* lp		441240	0					
ANR	441246	IdentifierDeclType	const ulong *		441240	0					
ANR	441247	Identifier	lp		441240	1					
ANR	441248	Statement	static	320:4:11943:11948	441240	2	True				
ANR	441249	IdentifierDeclStatement	"const byte first_1 [ 16 ] = { 4 , 3 , 2 , 2 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ;"	320:11:11950:12037	441240	3	True				
ANR	441250	IdentifierDecl	"first_1 [ 16 ] = { 4 , 3 , 2 , 2 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		441240	0					
ANR	441251	IdentifierDeclType	const byte [ 16 ]		441240	0					
ANR	441252	Identifier	first_1		441240	1					
ANR	441253	PrimaryExpression	16		441240	2					
ANR	441254	AssignmentExpression	"first_1 [ 16 ] = { 4 , 3 , 2 , 2 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		441240	3		=			
ANR	441255	Identifier	first_1		441240	0					
ANR	441256	InitializerList	4		441240	1					
ANR	441257	PrimaryExpression	4		441240	0					
ANR	441258	PrimaryExpression	3		441240	1					
ANR	441259	PrimaryExpression	2		441240	2					
ANR	441260	PrimaryExpression	2		441240	3					
ANR	441261	PrimaryExpression	1		441240	4					
ANR	441262	PrimaryExpression	1		441240	5					
ANR	441263	PrimaryExpression	1		441240	6					
ANR	441264	PrimaryExpression	1		441240	7					
ANR	441265	PrimaryExpression	0		441240	8					
ANR	441266	PrimaryExpression	0		441240	9					
ANR	441267	PrimaryExpression	0		441240	10					
ANR	441268	PrimaryExpression	0		441240	11					
ANR	441269	PrimaryExpression	0		441240	12					
ANR	441270	PrimaryExpression	0		441240	13					
ANR	441271	PrimaryExpression	0		441240	14					
ANR	441272	PrimaryExpression	0		441240	15					
ANR	441273	Statement	static	323:4:12043:12048	441240	4	True				
ANR	441274	IdentifierDeclStatement	"const byte last_1 [ 16 ] = { 0 , 4 , 3 , 4 , 2 , 4 , 3 , 4 , 1 , 4 , 3 , 4 , 2 , 4 , 3 , 4 } ;"	323:11:12050:12136	441240	5	True				
ANR	441275	IdentifierDecl	"last_1 [ 16 ] = { 0 , 4 , 3 , 4 , 2 , 4 , 3 , 4 , 1 , 4 , 3 , 4 , 2 , 4 , 3 , 4 }"		441240	0					
ANR	441276	IdentifierDeclType	const byte [ 16 ]		441240	0					
ANR	441277	Identifier	last_1		441240	1					
ANR	441278	PrimaryExpression	16		441240	2					
ANR	441279	AssignmentExpression	"last_1 [ 16 ] = { 0 , 4 , 3 , 4 , 2 , 4 , 3 , 4 , 1 , 4 , 3 , 4 , 2 , 4 , 3 , 4 }"		441240	3		=			
ANR	441280	Identifier	last_1		441240	0					
ANR	441281	InitializerList	0		441240	1					
ANR	441282	PrimaryExpression	0		441240	0					
ANR	441283	PrimaryExpression	4		441240	1					
ANR	441284	PrimaryExpression	3		441240	2					
ANR	441285	PrimaryExpression	4		441240	3					
ANR	441286	PrimaryExpression	2		441240	4					
ANR	441287	PrimaryExpression	4		441240	5					
ANR	441288	PrimaryExpression	3		441240	6					
ANR	441289	PrimaryExpression	4		441240	7					
ANR	441290	PrimaryExpression	1		441240	8					
ANR	441291	PrimaryExpression	4		441240	9					
ANR	441292	PrimaryExpression	3		441240	10					
ANR	441293	PrimaryExpression	4		441240	11					
ANR	441294	PrimaryExpression	2		441240	12					
ANR	441295	PrimaryExpression	4		441240	13					
ANR	441296	PrimaryExpression	3		441240	14					
ANR	441297	PrimaryExpression	4		441240	15					
ANR	441298	ExpressionStatement	lp = ( const ulong * ) ( data + raster * height )	331:4:12296:12340	441240	6	True				
ANR	441299	AssignmentExpression	lp = ( const ulong * ) ( data + raster * height )		441240	0		=			
ANR	441300	Identifier	lp		441240	0					
ANR	441301	CastExpression	( const ulong * ) ( data + raster * height )		441240	1					
ANR	441302	CastTarget	const ulong *		441240	0					
ANR	441303	AdditiveExpression	data + raster * height		441240	1		+			
ANR	441304	Identifier	data		441240	0					
ANR	441305	MultiplicativeExpression	raster * height		441240	1		*			
ANR	441306	Identifier	raster		441240	0					
ANR	441307	Identifier	height		441240	1					
ANR	441308	WhileStatement	while ( ( const byte * ) lp > data && ! lp [ - 1 ] )		441240	7					
ANR	441309	Condition	( const byte * ) lp > data && ! lp [ - 1 ]	332:11:12353:12386	441240	0	True				
ANR	441310	AndExpression	( const byte * ) lp > data && ! lp [ - 1 ]		441240	0		&&			
ANR	441311	RelationalExpression	( const byte * ) lp > data		441240	0		>			
ANR	441312	CastExpression	( const byte * ) lp		441240	0					
ANR	441313	CastTarget	const byte *		441240	0					
ANR	441314	Identifier	lp		441240	1					
ANR	441315	Identifier	data		441240	1					
ANR	441316	UnaryOperationExpression	! lp [ - 1 ]		441240	1					
ANR	441317	UnaryOperator	!		441240	0					
ANR	441318	ArrayIndexing	lp [ - 1 ]		441240	1					
ANR	441319	Identifier	lp		441240	0					
ANR	441320	UnaryOperationExpression	- 1		441240	1					
ANR	441321	UnaryOperator	-		441240	0					
ANR	441322	PrimaryExpression	1		441240	1					
ANR	441323	ExpressionStatement	-- lp	333:8:12397:12401	441240	1	True				
ANR	441324	UnaryExpression	-- lp		441240	0					
ANR	441325	IncDec	--		441240	0					
ANR	441326	Identifier	lp		441240	1					
ANR	441327	IfStatement	if ( ( const byte * ) lp == data )		441240	8					
ANR	441328	Condition	( const byte * ) lp == data	334:8:12411:12434	441240	0	True				
ANR	441329	EqualityExpression	( const byte * ) lp == data		441240	0		==			
ANR	441330	CastExpression	( const byte * ) lp		441240	0					
ANR	441331	CastTarget	const byte *		441240	0					
ANR	441332	Identifier	lp		441240	1					
ANR	441333	Identifier	data		441240	1					
ANR	441334	CompoundStatement		17:34:529:529	441240	1					
ANR	441335	ExpressionStatement	pbox -> p . x = pbox -> q . x = pbox -> p . y = pbox -> q . y = 0	335:8:12447:12496	441240	0	True				
ANR	441336	AssignmentExpression	pbox -> p . x = pbox -> q . x = pbox -> p . y = pbox -> q . y = 0		441240	0		=			
ANR	441337	MemberAccess	pbox -> p . x		441240	0					
ANR	441338	PtrMemberAccess	pbox -> p		441240	0					
ANR	441339	Identifier	pbox		441240	0					
ANR	441340	Identifier	p		441240	1					
ANR	441341	Identifier	x		441240	1					
ANR	441342	AssignmentExpression	pbox -> q . x = pbox -> p . y = pbox -> q . y = 0		441240	1		=			
ANR	441343	MemberAccess	pbox -> q . x		441240	0					
ANR	441344	PtrMemberAccess	pbox -> q		441240	0					
ANR	441345	Identifier	pbox		441240	0					
ANR	441346	Identifier	q		441240	1					
ANR	441347	Identifier	x		441240	1					
ANR	441348	AssignmentExpression	pbox -> p . y = pbox -> q . y = 0		441240	1		=			
ANR	441349	MemberAccess	pbox -> p . y		441240	0					
ANR	441350	PtrMemberAccess	pbox -> p		441240	0					
ANR	441351	Identifier	pbox		441240	0					
ANR	441352	Identifier	p		441240	1					
ANR	441353	Identifier	y		441240	1					
ANR	441354	AssignmentExpression	pbox -> q . y = 0		441240	1		=			
ANR	441355	MemberAccess	pbox -> q . y		441240	0					
ANR	441356	PtrMemberAccess	pbox -> q		441240	0					
ANR	441357	Identifier	pbox		441240	0					
ANR	441358	Identifier	q		441240	1					
ANR	441359	Identifier	y		441240	1					
ANR	441360	PrimaryExpression	0		441240	1					
ANR	441361	ReturnStatement	return ;	336:8:12506:12512	441240	1	True				
ANR	441362	ExpressionStatement	pbox -> q . y = height = ( ( const byte * ) lp - data + raster - 1 ) / raster	338:4:12524:12592	441240	9	True				
ANR	441363	AssignmentExpression	pbox -> q . y = height = ( ( const byte * ) lp - data + raster - 1 ) / raster		441240	0		=			
ANR	441364	MemberAccess	pbox -> q . y		441240	0					
ANR	441365	PtrMemberAccess	pbox -> q		441240	0					
ANR	441366	Identifier	pbox		441240	0					
ANR	441367	Identifier	q		441240	1					
ANR	441368	Identifier	y		441240	1					
ANR	441369	AssignmentExpression	height = ( ( const byte * ) lp - data + raster - 1 ) / raster		441240	1		=			
ANR	441370	Identifier	height		441240	0					
ANR	441371	MultiplicativeExpression	( ( const byte * ) lp - data + raster - 1 ) / raster		441240	1		/			
ANR	441372	AdditiveExpression	( const byte * ) lp - data + raster - 1		441240	0		-			
ANR	441373	CastExpression	( const byte * ) lp		441240	0					
ANR	441374	CastTarget	const byte *		441240	0					
ANR	441375	Identifier	lp		441240	1					
ANR	441376	AdditiveExpression	data + raster - 1		441240	1		+			
ANR	441377	Identifier	data		441240	0					
ANR	441378	AdditiveExpression	raster - 1		441240	1		-			
ANR	441379	Identifier	raster		441240	0					
ANR	441380	PrimaryExpression	1		441240	1					
ANR	441381	Identifier	raster		441240	1					
ANR	441382	ExpressionStatement	lp = ( const ulong * ) data	342:4:12636:12660	441240	10	True				
ANR	441383	AssignmentExpression	lp = ( const ulong * ) data		441240	0		=			
ANR	441384	Identifier	lp		441240	0					
ANR	441385	CastExpression	( const ulong * ) data		441240	1					
ANR	441386	CastTarget	const ulong *		441240	0					
ANR	441387	Identifier	data		441240	1					
ANR	441388	WhileStatement	while ( ! * lp )		441240	11					
ANR	441389	Condition	! * lp	343:11:12673:12676	441240	0	True				
ANR	441390	UnaryOperationExpression	! * lp		441240	0					
ANR	441391	UnaryOperator	!		441240	0					
ANR	441392	UnaryOperationExpression	* lp		441240	1					
ANR	441393	UnaryOperator	*		441240	0					
ANR	441394	Identifier	lp		441240	1					
ANR	441395	ExpressionStatement	++ lp	344:8:12687:12691	441240	1	True				
ANR	441396	UnaryExpression	++ lp		441240	0					
ANR	441397	IncDec	++		441240	0					
ANR	441398	Identifier	lp		441240	1					
ANR	441399	CompoundStatement		29:8:799:842	441240	12					
ANR	441400	IdentifierDeclStatement	uint n = ( ( const byte * ) lp - data ) / raster ;	346:8:12707:12750	441240	0	True				
ANR	441401	IdentifierDecl	n = ( ( const byte * ) lp - data ) / raster		441240	0					
ANR	441402	IdentifierDeclType	uint		441240	0					
ANR	441403	Identifier	n		441240	1					
ANR	441404	AssignmentExpression	n = ( ( const byte * ) lp - data ) / raster		441240	2		=			
ANR	441405	Identifier	n		441240	0					
ANR	441406	MultiplicativeExpression	( ( const byte * ) lp - data ) / raster		441240	1		/			
ANR	441407	AdditiveExpression	( const byte * ) lp - data		441240	0		-			
ANR	441408	CastExpression	( const byte * ) lp		441240	0					
ANR	441409	CastTarget	const byte *		441240	0					
ANR	441410	Identifier	lp		441240	1					
ANR	441411	Identifier	data		441240	1					
ANR	441412	Identifier	raster		441240	1					
ANR	441413	ExpressionStatement	pbox -> p . y = n	348:8:12761:12774	441240	1	True				
ANR	441414	AssignmentExpression	pbox -> p . y = n		441240	0		=			
ANR	441415	MemberAccess	pbox -> p . y		441240	0					
ANR	441416	PtrMemberAccess	pbox -> p		441240	0					
ANR	441417	Identifier	pbox		441240	0					
ANR	441418	Identifier	p		441240	1					
ANR	441419	Identifier	y		441240	1					
ANR	441420	Identifier	n		441240	1					
ANR	441421	IfStatement	if ( n )		441240	2					
ANR	441422	Condition	n	349:12:12788:12788	441240	0	True				
ANR	441423	Identifier	n		441240	0					
ANR	441424	ExpressionStatement	"height -= n , data += n * raster"	350:12:12803:12834	441240	1	True				
ANR	441425	Expression	"height -= n , data += n * raster"		441240	0					
ANR	441426	AssignmentExpression	height -= n		441240	0		-=			
ANR	441427	Identifier	height		441240	0					
ANR	441428	Identifier	n		441240	1					
ANR	441429	AssignmentExpression	data += n * raster		441240	1		+=			
ANR	441430	Identifier	data		441240	0					
ANR	441431	MultiplicativeExpression	n * raster		441240	1		*			
ANR	441432	Identifier	n		441240	0					
ANR	441433	Identifier	raster		441240	1					
ANR	441434	CompoundStatement		44:8:1222:1231	441240	13					
ANR	441435	IdentifierDeclStatement	uint raster_longs = raster >> ARCH_LOG2_SIZEOF_LONG ;	357:8:12961:13012	441240	0	True				
ANR	441436	IdentifierDecl	raster_longs = raster >> ARCH_LOG2_SIZEOF_LONG		441240	0					
ANR	441437	IdentifierDeclType	uint		441240	0					
ANR	441438	Identifier	raster_longs		441240	1					
ANR	441439	AssignmentExpression	raster_longs = raster >> ARCH_LOG2_SIZEOF_LONG		441240	2		=			
ANR	441440	Identifier	raster_longs		441240	0					
ANR	441441	ShiftExpression	raster >> ARCH_LOG2_SIZEOF_LONG		441240	1		>>			
ANR	441442	Identifier	raster		441240	0					
ANR	441443	Identifier	ARCH_LOG2_SIZEOF_LONG		441240	1					
ANR	441444	IdentifierDeclStatement	"uint left = raster_longs - 1 , right = 0 ;"	358:8:13022:13061	441240	1	True				
ANR	441445	IdentifierDecl	left = raster_longs - 1		441240	0					
ANR	441446	IdentifierDeclType	uint		441240	0					
ANR	441447	Identifier	left		441240	1					
ANR	441448	AssignmentExpression	left = raster_longs - 1		441240	2		=			
ANR	441449	Identifier	left		441240	0					
ANR	441450	AdditiveExpression	raster_longs - 1		441240	1		-			
ANR	441451	Identifier	raster_longs		441240	0					
ANR	441452	PrimaryExpression	1		441240	1					
ANR	441453	IdentifierDecl	right = 0		441240	1					
ANR	441454	IdentifierDeclType	uint		441240	0					
ANR	441455	Identifier	right		441240	1					
ANR	441456	AssignmentExpression	right = 0		441240	2		=			
ANR	441457	Identifier	right		441240	0					
ANR	441458	PrimaryExpression	0		441240	1					
ANR	441459	IdentifierDeclStatement	"ulong llong = 0 , rlong = 0 ;"	359:8:13071:13097	441240	2	True				
ANR	441460	IdentifierDecl	llong = 0		441240	0					
ANR	441461	IdentifierDeclType	ulong		441240	0					
ANR	441462	Identifier	llong		441240	1					
ANR	441463	AssignmentExpression	llong = 0		441240	2		=			
ANR	441464	Identifier	llong		441240	0					
ANR	441465	PrimaryExpression	0		441240	1					
ANR	441466	IdentifierDecl	rlong = 0		441240	1					
ANR	441467	IdentifierDeclType	ulong		441240	0					
ANR	441468	Identifier	rlong		441240	1					
ANR	441469	AssignmentExpression	rlong = 0		441240	2		=			
ANR	441470	Identifier	rlong		441240	0					
ANR	441471	PrimaryExpression	0		441240	1					
ANR	441472	IdentifierDeclStatement	const byte * q ;	360:8:13107:13120	441240	3	True				
ANR	441473	IdentifierDecl	* q		441240	0					
ANR	441474	IdentifierDeclType	const byte *		441240	0					
ANR	441475	Identifier	q		441240	1					
ANR	441476	IdentifierDeclStatement	"uint h , n ;"	361:8:13130:13139	441240	4	True				
ANR	441477	IdentifierDecl	h		441240	0					
ANR	441478	IdentifierDeclType	uint		441240	0					
ANR	441479	Identifier	h		441240	1					
ANR	441480	IdentifierDecl	n		441240	1					
ANR	441481	IdentifierDeclType	uint		441240	0					
ANR	441482	Identifier	n		441240	1					
ANR	441483	ForStatement	"for ( q = data , h = height ; h -- > 0 ; q += raster )"		441240	5					
ANR	441484	ForInit	"q = data , h = height ;"	363:13:13155:13175	441240	0	True				
ANR	441485	Expression	"q = data , h = height"		441240	0					
ANR	441486	AssignmentExpression	q = data		441240	0		=			
ANR	441487	Identifier	q		441240	0					
ANR	441488	Identifier	data		441240	1					
ANR	441489	AssignmentExpression	h = height		441240	1		=			
ANR	441490	Identifier	h		441240	0					
ANR	441491	Identifier	height		441240	1					
ANR	441492	Condition	h -- > 0	363:35:13177:13183	441240	1	True				
ANR	441493	RelationalExpression	h -- > 0		441240	0		>			
ANR	441494	PostIncDecOperationExpression	h --		441240	0					
ANR	441495	Identifier	h		441240	0					
ANR	441496	IncDec	--		441240	1					
ANR	441497	PrimaryExpression	0		441240	1					
ANR	441498	AssignmentExpression	q += raster	363:44:13186:13196	441240	2	True	+=			
ANR	441499	Identifier	q		441240	0					
ANR	441500	Identifier	raster		441240	1					
ANR	441501	CompoundStatement		46:57:1291:1291	441240	3					
ANR	441502	ForStatement	"for ( lp = ( const ulong * ) q , n = 0 ; n < left && ! * lp ; lp ++ , n ++ )"		441240	0					
ANR	441503	ForInit	"lp = ( const ulong * ) q , n = 0 ;"	364:17:13258:13286	441240	0	True				
ANR	441504	Expression	"lp = ( const ulong * ) q , n = 0"		441240	0					
ANR	441505	AssignmentExpression	lp = ( const ulong * ) q		441240	0		=			
ANR	441506	Identifier	lp		441240	0					
ANR	441507	CastExpression	( const ulong * ) q		441240	1					
ANR	441508	CastTarget	const ulong *		441240	0					
ANR	441509	Identifier	q		441240	1					
ANR	441510	AssignmentExpression	n = 0		441240	1		=			
ANR	441511	Identifier	n		441240	0					
ANR	441512	PrimaryExpression	0		441240	1					
ANR	441513	Condition	n < left && ! * lp	365:17:13305:13320	441240	1	True				
ANR	441514	AndExpression	n < left && ! * lp		441240	0		&&			
ANR	441515	RelationalExpression	n < left		441240	0		<			
ANR	441516	Identifier	n		441240	0					
ANR	441517	Identifier	left		441240	1					
ANR	441518	UnaryOperationExpression	! * lp		441240	1					
ANR	441519	UnaryOperator	!		441240	0					
ANR	441520	UnaryOperationExpression	* lp		441240	1					
ANR	441521	UnaryOperator	*		441240	0					
ANR	441522	Identifier	lp		441240	1					
ANR	441523	Expression	"lp ++ , n ++"	365:35:13323:13331	441240	2	True				
ANR	441524	PostIncDecOperationExpression	lp ++		441240	0					
ANR	441525	Identifier	lp		441240	0					
ANR	441526	IncDec	++		441240	1					
ANR	441527	PostIncDecOperationExpression	n ++		441240	1					
ANR	441528	Identifier	n		441240	0					
ANR	441529	IncDec	++		441240	1					
ANR	441530	ExpressionStatement		366:17:13350:13350	441240	3	True				
ANR	441531	IfStatement	if ( n < left )		441240	1					
ANR	441532	Condition	n < left	367:16:13368:13375	441240	0	True				
ANR	441533	RelationalExpression	n < left		441240	0		<			
ANR	441534	Identifier	n		441240	0					
ANR	441535	Identifier	left		441240	1					
ANR	441536	ExpressionStatement	"left = n , llong = * lp"	368:16:13394:13415	441240	1	True				
ANR	441537	Expression	"left = n , llong = * lp"		441240	0					
ANR	441538	AssignmentExpression	left = n		441240	0		=			
ANR	441539	Identifier	left		441240	0					
ANR	441540	Identifier	n		441240	1					
ANR	441541	AssignmentExpression	llong = * lp		441240	1		=			
ANR	441542	Identifier	llong		441240	0					
ANR	441543	UnaryOperationExpression	* lp		441240	1					
ANR	441544	UnaryOperator	*		441240	0					
ANR	441545	Identifier	lp		441240	1					
ANR	441546	ElseStatement	else		441240	0					
ANR	441547	ExpressionStatement	llong |= * lp	370:16:13450:13462	441240	0	True				
ANR	441548	AssignmentExpression	llong |= * lp		441240	0		|=			
ANR	441549	Identifier	llong		441240	0					
ANR	441550	UnaryOperationExpression	* lp		441240	1					
ANR	441551	UnaryOperator	*		441240	0					
ANR	441552	Identifier	lp		441240	1					
ANR	441553	ForStatement	"for ( lp = ( const ulong * ) ( q + raster - sizeof ( long ) ) , n = raster_longs - 1 ; n > right && ! * lp ; lp -- , n -- )"		441240	2					
ANR	441554	ForInit	"lp = ( const ulong * ) ( q + raster - sizeof ( long ) ) , n = raster_longs - 1 ;"	372:17:13534:13620	441240	0	True				
ANR	441555	Expression	"lp = ( const ulong * ) ( q + raster - sizeof ( long ) ) , n = raster_longs - 1"		441240	0					
ANR	441556	AssignmentExpression	lp = ( const ulong * ) ( q + raster - sizeof ( long ) )		441240	0		=			
ANR	441557	Identifier	lp		441240	0					
ANR	441558	CastExpression	( const ulong * ) ( q + raster - sizeof ( long ) )		441240	1					
ANR	441559	CastTarget	const ulong *		441240	0					
ANR	441560	AdditiveExpression	q + raster - sizeof ( long )		441240	1		+			
ANR	441561	Identifier	q		441240	0					
ANR	441562	AdditiveExpression	raster - sizeof ( long )		441240	1		-			
ANR	441563	Identifier	raster		441240	0					
ANR	441564	SizeofExpression	sizeof ( long )		441240	1					
ANR	441565	Sizeof	sizeof		441240	0					
ANR	441566	SizeofOperand	long		441240	1					
ANR	441567	AssignmentExpression	n = raster_longs - 1		441240	1		=			
ANR	441568	Identifier	n		441240	0					
ANR	441569	AdditiveExpression	raster_longs - 1		441240	1		-			
ANR	441570	Identifier	raster_longs		441240	0					
ANR	441571	PrimaryExpression	1		441240	1					
ANR	441572	Condition	n > right && ! * lp	375:17:13640:13656	441240	1	True				
ANR	441573	AndExpression	n > right && ! * lp		441240	0		&&			
ANR	441574	RelationalExpression	n > right		441240	0		>			
ANR	441575	Identifier	n		441240	0					
ANR	441576	Identifier	right		441240	1					
ANR	441577	UnaryOperationExpression	! * lp		441240	1					
ANR	441578	UnaryOperator	!		441240	0					
ANR	441579	UnaryOperationExpression	* lp		441240	1					
ANR	441580	UnaryOperator	*		441240	0					
ANR	441581	Identifier	lp		441240	1					
ANR	441582	Expression	"lp -- , n --"	375:36:13659:13667	441240	2	True				
ANR	441583	PostIncDecOperationExpression	lp --		441240	0					
ANR	441584	Identifier	lp		441240	0					
ANR	441585	IncDec	--		441240	1					
ANR	441586	PostIncDecOperationExpression	n --		441240	1					
ANR	441587	Identifier	n		441240	0					
ANR	441588	IncDec	--		441240	1					
ANR	441589	ExpressionStatement		376:17:13686:13686	441240	3	True				
ANR	441590	IfStatement	if ( n > right )		441240	3					
ANR	441591	Condition	n > right	377:16:13704:13712	441240	0	True				
ANR	441592	RelationalExpression	n > right		441240	0		>			
ANR	441593	Identifier	n		441240	0					
ANR	441594	Identifier	right		441240	1					
ANR	441595	ExpressionStatement	"right = n , rlong = * lp"	378:16:13731:13753	441240	1	True				
ANR	441596	Expression	"right = n , rlong = * lp"		441240	0					
ANR	441597	AssignmentExpression	right = n		441240	0		=			
ANR	441598	Identifier	right		441240	0					
ANR	441599	Identifier	n		441240	1					
ANR	441600	AssignmentExpression	rlong = * lp		441240	1		=			
ANR	441601	Identifier	rlong		441240	0					
ANR	441602	UnaryOperationExpression	* lp		441240	1					
ANR	441603	UnaryOperator	*		441240	0					
ANR	441604	Identifier	lp		441240	1					
ANR	441605	ElseStatement	else		441240	0					
ANR	441606	ExpressionStatement	rlong |= * lp	380:16:13788:13800	441240	0	True				
ANR	441607	AssignmentExpression	rlong |= * lp		441240	0		|=			
ANR	441608	Identifier	rlong		441240	0					
ANR	441609	UnaryOperationExpression	* lp		441240	1					
ANR	441610	UnaryOperator	*		441240	0					
ANR	441611	Identifier	lp		441240	1					
ANR	441612	ExpressionStatement	Error_longs_are_too_large ( )	386:8:13950:13977	441240	6	True				
ANR	441613	CallExpression	Error_longs_are_too_large ( )		441240	0					
ANR	441614	Callee	Error_longs_are_too_large		441240	0					
ANR	441615	Identifier	Error_longs_are_too_large		441240	0					
ANR	441616	ArgumentList			441240	1					
ANR	441617	Statement	define	390:3:14013:14018	441240	7	True				
ANR	441618	Statement	last_bits	390:10:14020:14028	441240	8	True				
ANR	441619	Statement	(	390:19:14029:14029	441240	9	True				
ANR	441620	Statement	n	390:20:14030:14030	441240	10	True				
ANR	441621	Statement	)	390:21:14031:14031	441240	11	True				
ANR	441622	Statement	(	390:23:14033:14033	441240	12	True				
ANR	441623	Statement	(	390:24:14034:14034	441240	13	True				
ANR	441624	Statement	1L	390:25:14035:14036	441240	14	True				
ANR	441625	Statement	<<	390:28:14038:14039	441240	15	True				
ANR	441626	Statement	(	390:31:14041:14041	441240	16	True				
ANR	441627	Statement	n	390:32:14042:14042	441240	17	True				
ANR	441628	Statement	)	390:33:14043:14043	441240	18	True				
ANR	441629	Statement	)	390:34:14044:14044	441240	19	True				
ANR	441630	Statement	-	390:36:14046:14046	441240	20	True				
ANR	441631	Statement	1	390:38:14048:14048	441240	21	True				
ANR	441632	Statement	)	390:39:14049:14049	441240	22	True				
ANR	441633	Statement	define	391:3:14054:14059	441240	23	True				
ANR	441634	Statement	shift_out_last	391:10:14061:14074	441240	24	True				
ANR	441635	Statement	(	391:24:14075:14075	441240	25	True				
ANR	441636	Statement	x	391:25:14076:14076	441240	26	True				
ANR	441637	Statement	","	391:26:14077:14077	441240	27	True				
ANR	441638	Statement	n	391:27:14078:14078	441240	28	True				
ANR	441639	Statement	)	391:28:14079:14079	441240	29	True				
ANR	441640	Statement	(	391:30:14081:14081	441240	30	True				
ANR	441641	Statement	(	391:31:14082:14082	441240	31	True				
ANR	441642	Statement	x	391:32:14083:14083	441240	32	True				
ANR	441643	Statement	)	391:33:14084:14084	441240	33	True				
ANR	441644	Statement	>>=	391:35:14086:14088	441240	34	True				
ANR	441645	Statement	(	391:39:14090:14090	441240	35	True				
ANR	441646	Statement	n	391:40:14091:14091	441240	36	True				
ANR	441647	Statement	)	391:41:14092:14092	441240	37	True				
ANR	441648	Statement	)	391:42:14093:14093	441240	38	True				
ANR	441649	Statement	define	392:3:14098:14103	441240	39	True				
ANR	441650	Statement	right_justify_last	392:10:14105:14122	441240	40	True				
ANR	441651	Statement	(	392:28:14123:14123	441240	41	True				
ANR	441652	Statement	x	392:29:14124:14124	441240	42	True				
ANR	441653	Statement	","	392:30:14125:14125	441240	43	True				
ANR	441654	Statement	n	392:31:14126:14126	441240	44	True				
ANR	441655	Statement	)	392:32:14127:14127	441240	45	True				
ANR	441656	Statement	DO_NOTHING	392:34:14129:14138	441240	46	True				
ANR	441657	ExpressionStatement	left <<= ARCH_LOG2_SIZEOF_LONG + 3	399:8:14342:14376	441240	47	True				
ANR	441658	AssignmentExpression	left <<= ARCH_LOG2_SIZEOF_LONG + 3		441240	0		<<=			
ANR	441659	Identifier	left		441240	0					
ANR	441660	AdditiveExpression	ARCH_LOG2_SIZEOF_LONG + 3		441240	1		+			
ANR	441661	Identifier	ARCH_LOG2_SIZEOF_LONG		441240	0					
ANR	441662	PrimaryExpression	3		441240	1					
ANR	441663	IfStatement	if ( llong & ~last_bits ( 32 ) )		441240	48					
ANR	441664	Condition	llong & ~last_bits ( 32 )	401:12:14416:14437	441240	0	True				
ANR	441665	BitAndExpression	llong & ~last_bits ( 32 )		441240	0		&			
ANR	441666	Identifier	llong		441240	0					
ANR	441667	CallExpression	~last_bits ( 32 )		441240	1					
ANR	441668	Callee	~last_bits		441240	0					
ANR	441669	Identifier	~last_bits		441240	0					
ANR	441670	ArgumentList	32		441240	1					
ANR	441671	Argument	32		441240	0					
ANR	441672	PrimaryExpression	32		441240	0					
ANR	441673	ExpressionStatement	"shift_out_last ( llong , 32 )"	402:12:14452:14477	441240	1	True				
ANR	441674	CallExpression	"shift_out_last ( llong , 32 )"		441240	0					
ANR	441675	Callee	shift_out_last		441240	0					
ANR	441676	Identifier	shift_out_last		441240	0					
ANR	441677	ArgumentList	llong		441240	1					
ANR	441678	Argument	llong		441240	0					
ANR	441679	Identifier	llong		441240	0					
ANR	441680	Argument	32		441240	1					
ANR	441681	PrimaryExpression	32		441240	0					
ANR	441682	ElseStatement	else		441240	0					
ANR	441683	ExpressionStatement	left += 32	404:12:14504:14514	441240	0	True				
ANR	441684	AssignmentExpression	left += 32		441240	0		+=			
ANR	441685	Identifier	left		441240	0					
ANR	441686	PrimaryExpression	32		441240	1					
ANR	441687	IfStatement	if ( llong & ~last_bits ( 16 ) )		441240	49					
ANR	441688	Condition	llong & ~last_bits ( 16 )	406:12:14535:14556	441240	0	True				
ANR	441689	BitAndExpression	llong & ~last_bits ( 16 )		441240	0		&			
ANR	441690	Identifier	llong		441240	0					
ANR	441691	CallExpression	~last_bits ( 16 )		441240	1					
ANR	441692	Callee	~last_bits		441240	0					
ANR	441693	Identifier	~last_bits		441240	0					
ANR	441694	ArgumentList	16		441240	1					
ANR	441695	Argument	16		441240	0					
ANR	441696	PrimaryExpression	16		441240	0					
ANR	441697	ExpressionStatement	"shift_out_last ( llong , 16 )"	407:12:14571:14596	441240	1	True				
ANR	441698	CallExpression	"shift_out_last ( llong , 16 )"		441240	0					
ANR	441699	Callee	shift_out_last		441240	0					
ANR	441700	Identifier	shift_out_last		441240	0					
ANR	441701	ArgumentList	llong		441240	1					
ANR	441702	Argument	llong		441240	0					
ANR	441703	Identifier	llong		441240	0					
ANR	441704	Argument	16		441240	1					
ANR	441705	PrimaryExpression	16		441240	0					
ANR	441706	ElseStatement	else		441240	0					
ANR	441707	ExpressionStatement	left += 16	409:12:14623:14633	441240	0	True				
ANR	441708	AssignmentExpression	left += 16		441240	0		+=			
ANR	441709	Identifier	left		441240	0					
ANR	441710	PrimaryExpression	16		441240	1					
ANR	441711	IfStatement	if ( llong & ~last_bits ( 8 ) )		441240	50					
ANR	441712	Condition	llong & ~last_bits ( 8 )	410:12:14647:14667	441240	0	True				
ANR	441713	BitAndExpression	llong & ~last_bits ( 8 )		441240	0		&			
ANR	441714	Identifier	llong		441240	0					
ANR	441715	CallExpression	~last_bits ( 8 )		441240	1					
ANR	441716	Callee	~last_bits		441240	0					
ANR	441717	Identifier	~last_bits		441240	0					
ANR	441718	ArgumentList	8		441240	1					
ANR	441719	Argument	8		441240	0					
ANR	441720	PrimaryExpression	8		441240	0					
ANR	441721	ExpressionStatement	"shift_out_last ( llong , 8 )"	411:12:14682:14706	441240	1	True				
ANR	441722	CallExpression	"shift_out_last ( llong , 8 )"		441240	0					
ANR	441723	Callee	shift_out_last		441240	0					
ANR	441724	Identifier	shift_out_last		441240	0					
ANR	441725	ArgumentList	llong		441240	1					
ANR	441726	Argument	llong		441240	0					
ANR	441727	Identifier	llong		441240	0					
ANR	441728	Argument	8		441240	1					
ANR	441729	PrimaryExpression	8		441240	0					
ANR	441730	ElseStatement	else		441240	0					
ANR	441731	ExpressionStatement	left += 8	413:12:14733:14742	441240	0	True				
ANR	441732	AssignmentExpression	left += 8		441240	0		+=			
ANR	441733	Identifier	left		441240	0					
ANR	441734	PrimaryExpression	8		441240	1					
ANR	441735	ExpressionStatement	"right_justify_last ( llong , 8 )"	414:8:14752:14780	441240	51	True				
ANR	441736	CallExpression	"right_justify_last ( llong , 8 )"		441240	0					
ANR	441737	Callee	right_justify_last		441240	0					
ANR	441738	Identifier	right_justify_last		441240	0					
ANR	441739	ArgumentList	llong		441240	1					
ANR	441740	Argument	llong		441240	0					
ANR	441741	Identifier	llong		441240	0					
ANR	441742	Argument	8		441240	1					
ANR	441743	PrimaryExpression	8		441240	0					
ANR	441744	IfStatement	if ( llong & 0xf0 )		441240	52					
ANR	441745	Condition	llong & 0xf0	415:12:14794:14805	441240	0	True				
ANR	441746	BitAndExpression	llong & 0xf0		441240	0		&			
ANR	441747	Identifier	llong		441240	0					
ANR	441748	PrimaryExpression	0xf0		441240	1					
ANR	441749	ExpressionStatement	left += first_1 [ ( byte ) llong >> 4 ]	416:12:14820:14854	441240	1	True				
ANR	441750	AssignmentExpression	left += first_1 [ ( byte ) llong >> 4 ]		441240	0		+=			
ANR	441751	Identifier	left		441240	0					
ANR	441752	ArrayIndexing	first_1 [ ( byte ) llong >> 4 ]		441240	1					
ANR	441753	Identifier	first_1		441240	0					
ANR	441754	ShiftExpression	( byte ) llong >> 4		441240	1		>>			
ANR	441755	CastExpression	( byte ) llong		441240	0					
ANR	441756	CastTarget	byte		441240	0					
ANR	441757	Identifier	llong		441240	1					
ANR	441758	PrimaryExpression	4		441240	1					
ANR	441759	ElseStatement	else		441240	0					
ANR	441760	ExpressionStatement	left += first_1 [ ( byte ) llong ] + 4	418:12:14881:14914	441240	0	True				
ANR	441761	AssignmentExpression	left += first_1 [ ( byte ) llong ] + 4		441240	0		+=			
ANR	441762	Identifier	left		441240	0					
ANR	441763	AdditiveExpression	first_1 [ ( byte ) llong ] + 4		441240	1		+			
ANR	441764	ArrayIndexing	first_1 [ ( byte ) llong ]		441240	0					
ANR	441765	Identifier	first_1		441240	0					
ANR	441766	CastExpression	( byte ) llong		441240	1					
ANR	441767	CastTarget	byte		441240	0					
ANR	441768	Identifier	llong		441240	1					
ANR	441769	PrimaryExpression	4		441240	1					
ANR	441770	ExpressionStatement	right <<= ARCH_LOG2_SIZEOF_LONG + 3	420:8:14925:14960	441240	53	True				
ANR	441771	AssignmentExpression	right <<= ARCH_LOG2_SIZEOF_LONG + 3		441240	0		<<=			
ANR	441772	Identifier	right		441240	0					
ANR	441773	AdditiveExpression	ARCH_LOG2_SIZEOF_LONG + 3		441240	1		+			
ANR	441774	Identifier	ARCH_LOG2_SIZEOF_LONG		441240	0					
ANR	441775	PrimaryExpression	3		441240	1					
ANR	441776	IfStatement	if ( ! ( rlong & last_bits ( 32 ) ) )		441240	54					
ANR	441777	Condition	! ( rlong & last_bits ( 32 ) )	422:12:15000:15023	441240	0	True				
ANR	441778	UnaryOperationExpression	! ( rlong & last_bits ( 32 ) )		441240	0					
ANR	441779	UnaryOperator	!		441240	0					
ANR	441780	BitAndExpression	rlong & last_bits ( 32 )		441240	1		&			
ANR	441781	Identifier	rlong		441240	0					
ANR	441782	CallExpression	last_bits ( 32 )		441240	1					
ANR	441783	Callee	last_bits		441240	0					
ANR	441784	Identifier	last_bits		441240	0					
ANR	441785	ArgumentList	32		441240	1					
ANR	441786	Argument	32		441240	0					
ANR	441787	PrimaryExpression	32		441240	0					
ANR	441788	ExpressionStatement	"shift_out_last ( rlong , 32 )"	423:12:15038:15063	441240	1	True				
ANR	441789	CallExpression	"shift_out_last ( rlong , 32 )"		441240	0					
ANR	441790	Callee	shift_out_last		441240	0					
ANR	441791	Identifier	shift_out_last		441240	0					
ANR	441792	ArgumentList	rlong		441240	1					
ANR	441793	Argument	rlong		441240	0					
ANR	441794	Identifier	rlong		441240	0					
ANR	441795	Argument	32		441240	1					
ANR	441796	PrimaryExpression	32		441240	0					
ANR	441797	ElseStatement	else		441240	0					
ANR	441798	ExpressionStatement	right += 32	425:12:15090:15101	441240	0	True				
ANR	441799	AssignmentExpression	right += 32		441240	0		+=			
ANR	441800	Identifier	right		441240	0					
ANR	441801	PrimaryExpression	32		441240	1					
ANR	441802	IfStatement	if ( ! ( rlong & last_bits ( 16 ) ) )		441240	55					
ANR	441803	Condition	! ( rlong & last_bits ( 16 ) )	427:12:15122:15145	441240	0	True				
ANR	441804	UnaryOperationExpression	! ( rlong & last_bits ( 16 ) )		441240	0					
ANR	441805	UnaryOperator	!		441240	0					
ANR	441806	BitAndExpression	rlong & last_bits ( 16 )		441240	1		&			
ANR	441807	Identifier	rlong		441240	0					
ANR	441808	CallExpression	last_bits ( 16 )		441240	1					
ANR	441809	Callee	last_bits		441240	0					
ANR	441810	Identifier	last_bits		441240	0					
ANR	441811	ArgumentList	16		441240	1					
ANR	441812	Argument	16		441240	0					
ANR	441813	PrimaryExpression	16		441240	0					
ANR	441814	ExpressionStatement	"shift_out_last ( rlong , 16 )"	428:12:15160:15185	441240	1	True				
ANR	441815	CallExpression	"shift_out_last ( rlong , 16 )"		441240	0					
ANR	441816	Callee	shift_out_last		441240	0					
ANR	441817	Identifier	shift_out_last		441240	0					
ANR	441818	ArgumentList	rlong		441240	1					
ANR	441819	Argument	rlong		441240	0					
ANR	441820	Identifier	rlong		441240	0					
ANR	441821	Argument	16		441240	1					
ANR	441822	PrimaryExpression	16		441240	0					
ANR	441823	ElseStatement	else		441240	0					
ANR	441824	ExpressionStatement	right += 16	430:12:15212:15223	441240	0	True				
ANR	441825	AssignmentExpression	right += 16		441240	0		+=			
ANR	441826	Identifier	right		441240	0					
ANR	441827	PrimaryExpression	16		441240	1					
ANR	441828	IfStatement	if ( ! ( rlong & last_bits ( 8 ) ) )		441240	56					
ANR	441829	Condition	! ( rlong & last_bits ( 8 ) )	431:12:15237:15259	441240	0	True				
ANR	441830	UnaryOperationExpression	! ( rlong & last_bits ( 8 ) )		441240	0					
ANR	441831	UnaryOperator	!		441240	0					
ANR	441832	BitAndExpression	rlong & last_bits ( 8 )		441240	1		&			
ANR	441833	Identifier	rlong		441240	0					
ANR	441834	CallExpression	last_bits ( 8 )		441240	1					
ANR	441835	Callee	last_bits		441240	0					
ANR	441836	Identifier	last_bits		441240	0					
ANR	441837	ArgumentList	8		441240	1					
ANR	441838	Argument	8		441240	0					
ANR	441839	PrimaryExpression	8		441240	0					
ANR	441840	ExpressionStatement	"shift_out_last ( rlong , 8 )"	432:12:15274:15298	441240	1	True				
ANR	441841	CallExpression	"shift_out_last ( rlong , 8 )"		441240	0					
ANR	441842	Callee	shift_out_last		441240	0					
ANR	441843	Identifier	shift_out_last		441240	0					
ANR	441844	ArgumentList	rlong		441240	1					
ANR	441845	Argument	rlong		441240	0					
ANR	441846	Identifier	rlong		441240	0					
ANR	441847	Argument	8		441240	1					
ANR	441848	PrimaryExpression	8		441240	0					
ANR	441849	ElseStatement	else		441240	0					
ANR	441850	ExpressionStatement	right += 8	434:12:15325:15335	441240	0	True				
ANR	441851	AssignmentExpression	right += 8		441240	0		+=			
ANR	441852	Identifier	right		441240	0					
ANR	441853	PrimaryExpression	8		441240	1					
ANR	441854	ExpressionStatement	"right_justify_last ( rlong , 8 )"	435:8:15345:15373	441240	57	True				
ANR	441855	CallExpression	"right_justify_last ( rlong , 8 )"		441240	0					
ANR	441856	Callee	right_justify_last		441240	0					
ANR	441857	Identifier	right_justify_last		441240	0					
ANR	441858	ArgumentList	rlong		441240	1					
ANR	441859	Argument	rlong		441240	0					
ANR	441860	Identifier	rlong		441240	0					
ANR	441861	Argument	8		441240	1					
ANR	441862	PrimaryExpression	8		441240	0					
ANR	441863	IfStatement	if ( ! ( rlong & 0xf ) )		441240	58					
ANR	441864	Condition	! ( rlong & 0xf )	436:12:15387:15400	441240	0	True				
ANR	441865	UnaryOperationExpression	! ( rlong & 0xf )		441240	0					
ANR	441866	UnaryOperator	!		441240	0					
ANR	441867	BitAndExpression	rlong & 0xf		441240	1		&			
ANR	441868	Identifier	rlong		441240	0					
ANR	441869	PrimaryExpression	0xf		441240	1					
ANR	441870	ExpressionStatement	right += last_1 [ ( byte ) rlong >> 4 ]	437:12:15415:15449	441240	1	True				
ANR	441871	AssignmentExpression	right += last_1 [ ( byte ) rlong >> 4 ]		441240	0		+=			
ANR	441872	Identifier	right		441240	0					
ANR	441873	ArrayIndexing	last_1 [ ( byte ) rlong >> 4 ]		441240	1					
ANR	441874	Identifier	last_1		441240	0					
ANR	441875	ShiftExpression	( byte ) rlong >> 4		441240	1		>>			
ANR	441876	CastExpression	( byte ) rlong		441240	0					
ANR	441877	CastTarget	byte		441240	0					
ANR	441878	Identifier	rlong		441240	1					
ANR	441879	PrimaryExpression	4		441240	1					
ANR	441880	ElseStatement	else		441240	0					
ANR	441881	ExpressionStatement	right += last_1 [ ( uint ) rlong & 0xf ] + 4	439:12:15476:15515	441240	0	True				
ANR	441882	AssignmentExpression	right += last_1 [ ( uint ) rlong & 0xf ] + 4		441240	0		+=			
ANR	441883	Identifier	right		441240	0					
ANR	441884	AdditiveExpression	last_1 [ ( uint ) rlong & 0xf ] + 4		441240	1		+			
ANR	441885	ArrayIndexing	last_1 [ ( uint ) rlong & 0xf ]		441240	0					
ANR	441886	Identifier	last_1		441240	0					
ANR	441887	BitAndExpression	( uint ) rlong & 0xf		441240	1		&			
ANR	441888	CastExpression	( uint ) rlong		441240	0					
ANR	441889	CastTarget	uint		441240	0					
ANR	441890	Identifier	rlong		441240	1					
ANR	441891	PrimaryExpression	0xf		441240	1					
ANR	441892	PrimaryExpression	4		441240	1					
ANR	441893	ExpressionStatement	pbox -> p . x = left	441:8:15526:15542	441240	59	True				
ANR	441894	AssignmentExpression	pbox -> p . x = left		441240	0		=			
ANR	441895	MemberAccess	pbox -> p . x		441240	0					
ANR	441896	PtrMemberAccess	pbox -> p		441240	0					
ANR	441897	Identifier	pbox		441240	0					
ANR	441898	Identifier	p		441240	1					
ANR	441899	Identifier	x		441240	1					
ANR	441900	Identifier	left		441240	1					
ANR	441901	ExpressionStatement	pbox -> q . x = right	442:8:15552:15569	441240	60	True				
ANR	441902	AssignmentExpression	pbox -> q . x = right		441240	0		=			
ANR	441903	MemberAccess	pbox -> q . x		441240	0					
ANR	441904	PtrMemberAccess	pbox -> q		441240	0					
ANR	441905	Identifier	pbox		441240	0					
ANR	441906	Identifier	q		441240	1					
ANR	441907	Identifier	x		441240	1					
ANR	441908	Identifier	right		441240	1					
ANR	441909	ReturnType	void		441240	1					
ANR	441910	Identifier	bits_bounding_box		441240	2					
ANR	441911	ParameterList	"const byte * data , uint height , uint raster , gs_int_rect * pbox"		441240	3					
ANR	441912	Parameter	const byte * data	316:18:11824:11840	441240	0	True				
ANR	441913	ParameterType	const byte *		441240	0					
ANR	441914	Identifier	data		441240	1					
ANR	441915	Parameter	uint height	316:37:11843:11853	441240	1	True				
ANR	441916	ParameterType	uint		441240	0					
ANR	441917	Identifier	height		441240	1					
ANR	441918	Parameter	uint raster	316:50:11856:11866	441240	2	True				
ANR	441919	ParameterType	uint		441240	0					
ANR	441920	Identifier	raster		441240	1					
ANR	441921	Parameter	gs_int_rect * pbox	317:18:11887:11904	441240	3	True				
ANR	441922	ParameterType	gs_int_rect *		441240	0					
ANR	441923	Identifier	pbox		441240	1					
ANR	441924	CFGEntryNode	ENTRY		441240		True				
ANR	441925	CFGExitNode	EXIT		441240		True				
ANR	441926	Symbol	data		441240						
ANR	441927	Symbol	lp		441240						
ANR	441928	Symbol	first_1		441240						
ANR	441929	Symbol	llong		441240						
ANR	441930	Symbol	ARCH_LOG2_SIZEOF_LONG		441240						
ANR	441931	Symbol	~last_bits		441240						
ANR	441932	Symbol	last_1		441240						
ANR	441933	Symbol	raster_longs		441240						
ANR	441934	Symbol	rlong		441240						
ANR	441935	Symbol	height		441240						
ANR	441936	Symbol	* rlong		441240						
ANR	441937	Symbol	raster		441240						
ANR	441938	Symbol	pbox -> p . x		441240						
ANR	441939	Symbol	h		441240						
ANR	441940	Symbol	* first_1		441240						
ANR	441941	Symbol	* lp		441240						
ANR	441942	Symbol	pbox -> p . y		441240						
ANR	441943	Symbol	right		441240						
ANR	441944	Symbol	n		441240						
ANR	441945	Symbol	pbox		441240						
ANR	441946	Symbol	* last_1		441240						
ANR	441947	Symbol	q		441240						
ANR	441948	Symbol	pbox -> q		441240						
ANR	441949	Symbol	pbox -> p		441240						
ANR	441950	Symbol	* pbox		441240						
ANR	441951	Symbol	left		441240						
ANR	441952	Symbol	* llong		441240						
ANR	441953	Symbol	last_bits		441240						
ANR	441954	Symbol	pbox -> q . y		441240						
ANR	441955	Symbol	pbox -> q . x		441240						
ANR	441956	Function	bits_extract_plane	447:0:15617:19380							
ANR	441957	FunctionDef	"bits_extract_plane (const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height)"		441956	0					
ANR	441958	CompoundStatement		450:0:15751:19380	441956	0					
ANR	441959	IdentifierDeclStatement	int source_depth = source -> depth ;	451:4:15757:15789	441956	0	True				
ANR	441960	IdentifierDecl	source_depth = source -> depth		441956	0					
ANR	441961	IdentifierDeclType	int		441956	0					
ANR	441962	Identifier	source_depth		441956	1					
ANR	441963	AssignmentExpression	source_depth = source -> depth		441956	2		=			
ANR	441964	Identifier	source_depth		441956	0					
ANR	441965	PtrMemberAccess	source -> depth		441956	1					
ANR	441966	Identifier	source		441956	0					
ANR	441967	Identifier	depth		441956	1					
ANR	441968	IdentifierDeclStatement	int source_bit = source -> x * source_depth ;	452:4:15795:15836	441956	1	True				
ANR	441969	IdentifierDecl	source_bit = source -> x * source_depth		441956	0					
ANR	441970	IdentifierDeclType	int		441956	0					
ANR	441971	Identifier	source_bit		441956	1					
ANR	441972	AssignmentExpression	source_bit = source -> x * source_depth		441956	2		=			
ANR	441973	Identifier	source_bit		441956	0					
ANR	441974	MultiplicativeExpression	source -> x * source_depth		441956	1		*			
ANR	441975	PtrMemberAccess	source -> x		441956	0					
ANR	441976	Identifier	source		441956	0					
ANR	441977	Identifier	x		441956	1					
ANR	441978	Identifier	source_depth		441956	1					
ANR	441979	IdentifierDeclStatement	const byte * source_row = source -> data . read + ( source_bit >> 3 ) ;	453:4:15842:15904	441956	2	True				
ANR	441980	IdentifierDecl	* source_row = source -> data . read + ( source_bit >> 3 )		441956	0					
ANR	441981	IdentifierDeclType	const byte *		441956	0					
ANR	441982	Identifier	source_row		441956	1					
ANR	441983	AssignmentExpression	* source_row = source -> data . read + ( source_bit >> 3 )		441956	2		=			
ANR	441984	Identifier	source_row		441956	0					
ANR	441985	AdditiveExpression	source -> data . read + ( source_bit >> 3 )		441956	1		+			
ANR	441986	MemberAccess	source -> data . read		441956	0					
ANR	441987	PtrMemberAccess	source -> data		441956	0					
ANR	441988	Identifier	source		441956	0					
ANR	441989	Identifier	data		441956	1					
ANR	441990	Identifier	read		441956	1					
ANR	441991	ShiftExpression	source_bit >> 3		441956	1		>>			
ANR	441992	Identifier	source_bit		441956	0					
ANR	441993	PrimaryExpression	3		441956	1					
ANR	441994	IdentifierDeclStatement	int dest_depth = dest -> depth ;	454:4:15910:15938	441956	3	True				
ANR	441995	IdentifierDecl	dest_depth = dest -> depth		441956	0					
ANR	441996	IdentifierDeclType	int		441956	0					
ANR	441997	Identifier	dest_depth		441956	1					
ANR	441998	AssignmentExpression	dest_depth = dest -> depth		441956	2		=			
ANR	441999	Identifier	dest_depth		441956	0					
ANR	442000	PtrMemberAccess	dest -> depth		441956	1					
ANR	442001	Identifier	dest		441956	0					
ANR	442002	Identifier	depth		441956	1					
ANR	442003	IdentifierDeclStatement	uint plane_mask = ( 1 << dest_depth ) - 1 ;	455:4:15944:15983	441956	4	True				
ANR	442004	IdentifierDecl	plane_mask = ( 1 << dest_depth ) - 1		441956	0					
ANR	442005	IdentifierDeclType	uint		441956	0					
ANR	442006	Identifier	plane_mask		441956	1					
ANR	442007	AssignmentExpression	plane_mask = ( 1 << dest_depth ) - 1		441956	2		=			
ANR	442008	Identifier	plane_mask		441956	0					
ANR	442009	AdditiveExpression	( 1 << dest_depth ) - 1		441956	1		-			
ANR	442010	ShiftExpression	1 << dest_depth		441956	0		<<			
ANR	442011	PrimaryExpression	1		441956	0					
ANR	442012	Identifier	dest_depth		441956	1					
ANR	442013	PrimaryExpression	1		441956	1					
ANR	442014	IdentifierDeclStatement	int dest_bit = dest -> x * dest_depth ;	456:4:15989:16024	441956	5	True				
ANR	442015	IdentifierDecl	dest_bit = dest -> x * dest_depth		441956	0					
ANR	442016	IdentifierDeclType	int		441956	0					
ANR	442017	Identifier	dest_bit		441956	1					
ANR	442018	AssignmentExpression	dest_bit = dest -> x * dest_depth		441956	2		=			
ANR	442019	Identifier	dest_bit		441956	0					
ANR	442020	MultiplicativeExpression	dest -> x * dest_depth		441956	1		*			
ANR	442021	PtrMemberAccess	dest -> x		441956	0					
ANR	442022	Identifier	dest		441956	0					
ANR	442023	Identifier	x		441956	1					
ANR	442024	Identifier	dest_depth		441956	1					
ANR	442025	IdentifierDeclStatement	byte * dest_row = dest -> data . write + ( dest_bit >> 3 ) ;	457:4:16030:16081	441956	6	True				
ANR	442026	IdentifierDecl	* dest_row = dest -> data . write + ( dest_bit >> 3 )		441956	0					
ANR	442027	IdentifierDeclType	byte *		441956	0					
ANR	442028	Identifier	dest_row		441956	1					
ANR	442029	AssignmentExpression	* dest_row = dest -> data . write + ( dest_bit >> 3 )		441956	2		=			
ANR	442030	Identifier	dest_row		441956	0					
ANR	442031	AdditiveExpression	dest -> data . write + ( dest_bit >> 3 )		441956	1		+			
ANR	442032	MemberAccess	dest -> data . write		441956	0					
ANR	442033	PtrMemberAccess	dest -> data		441956	0					
ANR	442034	Identifier	dest		441956	0					
ANR	442035	Identifier	data		441956	1					
ANR	442036	Identifier	write		441956	1					
ANR	442037	ShiftExpression	dest_bit >> 3		441956	1		>>			
ANR	442038	Identifier	dest_bit		441956	0					
ANR	442039	PrimaryExpression	3		441956	1					
ANR	442040	ClassDefStatement	"enum { EXTRACT_SLOW = 0 , EXTRACT_4_TO_1 , EXTRACT_32_TO_8 } loop_case = EXTRACT_SLOW ;"	458:4:16087:16198	441956	7	True				
ANR	442041	IdentifierDecl	loop_case = EXTRACT_SLOW		441956	0					
ANR	442042	IdentifierDeclType			441956	0					
ANR	442043	Identifier	loop_case		441956	1					
ANR	442044	AssignmentExpression	loop_case = EXTRACT_SLOW		441956	2		=			
ANR	442045	Identifier	EXTRACT_SLOW		441956	0					
ANR	442046	Identifier	EXTRACT_SLOW		441956	1					
ANR	442047	IdentifierDeclStatement	int y ;	463:4:16204:16209	441956	8	True				
ANR	442048	IdentifierDecl	y		441956	0					
ANR	442049	IdentifierDeclType	int		441956	0					
ANR	442050	Identifier	y		441956	1					
ANR	442051	ExpressionStatement	source_bit &= 7	465:4:16216:16231	441956	9	True				
ANR	442052	AssignmentExpression	source_bit &= 7		441956	0		&=			
ANR	442053	Identifier	source_bit		441956	0					
ANR	442054	PrimaryExpression	7		441956	1					
ANR	442055	ExpressionStatement	dest_bit &= 7	466:4:16237:16250	441956	10	True				
ANR	442056	AssignmentExpression	dest_bit &= 7		441956	0		&=			
ANR	442057	Identifier	dest_bit		441956	0					
ANR	442058	PrimaryExpression	7		441956	1					
ANR	442059	IfStatement	if ( ! ( source_bit | dest_bit ) )		441956	11					
ANR	442060	Condition	! ( source_bit | dest_bit )	468:8:16301:16324	441956	0	True				
ANR	442061	UnaryOperationExpression	! ( source_bit | dest_bit )		441956	0					
ANR	442062	UnaryOperator	!		441956	0					
ANR	442063	InclusiveOrExpression	source_bit | dest_bit		441956	1		|			
ANR	442064	Identifier	source_bit		441956	0					
ANR	442065	Identifier	dest_bit		441956	1					
ANR	442066	CompoundStatement		19:34:575:575	441956	1					
ANR	442067	SwitchStatement	switch ( source_depth )		441956	0					
ANR	442068	Condition	source_depth	469:16:16345:16356	441956	0	True				
ANR	442069	Identifier	source_depth		441956	0					
ANR	442070	CompoundStatement		20:30:607:607	441956	1					
ANR	442071	Label	case 4 :	470:8:16369:16375	441956	0	True				
ANR	442072	ExpressionStatement	loop_case = ( dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 ) ? EXTRACT_4_TO_1 : EXTRACT_SLOW )	471:12:16389:16545	441956	1	True				
ANR	442073	AssignmentExpression	loop_case = ( dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 ) ? EXTRACT_4_TO_1 : EXTRACT_SLOW )		441956	0		=			
ANR	442074	Identifier	loop_case		441956	0					
ANR	442075	ConditionalExpression	dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 ) ? EXTRACT_4_TO_1 : EXTRACT_SLOW		441956	1					
ANR	442076	Condition	dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 )		441956	0					
ANR	442077	AndExpression	dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 )		441956	0		&&			
ANR	442078	EqualityExpression	dest_depth == 1		441956	0		==			
ANR	442079	Identifier	dest_depth		441956	0					
ANR	442080	PrimaryExpression	1		441956	1					
ANR	442081	AndExpression	! ( source -> raster & 3 ) && ! ( source -> x & 1 )		441956	1		&&			
ANR	442082	UnaryOperationExpression	! ( source -> raster & 3 )		441956	0					
ANR	442083	UnaryOperator	!		441956	0					
ANR	442084	BitAndExpression	source -> raster & 3		441956	1		&			
ANR	442085	PtrMemberAccess	source -> raster		441956	0					
ANR	442086	Identifier	source		441956	0					
ANR	442087	Identifier	raster		441956	1					
ANR	442088	PrimaryExpression	3		441956	1					
ANR	442089	UnaryOperationExpression	! ( source -> x & 1 )		441956	1					
ANR	442090	UnaryOperator	!		441956	0					
ANR	442091	BitAndExpression	source -> x & 1		441956	1		&			
ANR	442092	PtrMemberAccess	source -> x		441956	0					
ANR	442093	Identifier	source		441956	0					
ANR	442094	Identifier	x		441956	1					
ANR	442095	PrimaryExpression	1		441956	1					
ANR	442096	Identifier	EXTRACT_4_TO_1		441956	1					
ANR	442097	Identifier	EXTRACT_SLOW		441956	2					
ANR	442098	BreakStatement	break ;	475:12:16559:16564	441956	2	True				
ANR	442099	Label	case 32 :	476:8:16574:16581	441956	3	True				
ANR	442100	IfStatement	if ( dest_depth == 8 && ! ( shift & 7 ) )		441956	4					
ANR	442101	Condition	dest_depth == 8 && ! ( shift & 7 )	477:16:16599:16629	441956	0	True				
ANR	442102	AndExpression	dest_depth == 8 && ! ( shift & 7 )		441956	0		&&			
ANR	442103	EqualityExpression	dest_depth == 8		441956	0		==			
ANR	442104	Identifier	dest_depth		441956	0					
ANR	442105	PrimaryExpression	8		441956	1					
ANR	442106	UnaryOperationExpression	! ( shift & 7 )		441956	1					
ANR	442107	UnaryOperator	!		441956	0					
ANR	442108	BitAndExpression	shift & 7		441956	1		&			
ANR	442109	Identifier	shift		441956	0					
ANR	442110	PrimaryExpression	7		441956	1					
ANR	442111	CompoundStatement		28:49:880:880	441956	1					
ANR	442112	ExpressionStatement	loop_case = EXTRACT_32_TO_8	478:16:16650:16677	441956	0	True				
ANR	442113	AssignmentExpression	loop_case = EXTRACT_32_TO_8		441956	0		=			
ANR	442114	Identifier	loop_case		441956	0					
ANR	442115	Identifier	EXTRACT_32_TO_8		441956	1					
ANR	442116	ExpressionStatement	source_row += 3 - ( shift >> 3 )	479:16:16695:16725	441956	1	True				
ANR	442117	AssignmentExpression	source_row += 3 - ( shift >> 3 )		441956	0		+=			
ANR	442118	Identifier	source_row		441956	0					
ANR	442119	AdditiveExpression	3 - ( shift >> 3 )		441956	1		-			
ANR	442120	PrimaryExpression	3		441956	0					
ANR	442121	ShiftExpression	shift >> 3		441956	1		>>			
ANR	442122	Identifier	shift		441956	0					
ANR	442123	PrimaryExpression	3		441956	1					
ANR	442124	BreakStatement	break ;	481:12:16753:16758	441956	5	True				
ANR	442125	ForStatement	"for ( y = 0 ; y < height ; ++ y , source_row += source -> raster , dest_row += dest -> raster )"		441956	12					
ANR	442126	ForInit	y = 0 ;	484:9:16785:16790	441956	0	True				
ANR	442127	AssignmentExpression	y = 0		441956	0		=			
ANR	442128	Identifier	y		441956	0					
ANR	442129	PrimaryExpression	0		441956	1					
ANR	442130	Condition	y < height	484:16:16792:16801	441956	1	True				
ANR	442131	RelationalExpression	y < height		441956	0		<			
ANR	442132	Identifier	y		441956	0					
ANR	442133	Identifier	height		441956	1					
ANR	442134	Expression	"++ y , source_row += source -> raster , dest_row += dest -> raster"	485:9:16813:16871	441956	2	True				
ANR	442135	UnaryExpression	++ y		441956	0					
ANR	442136	IncDec	++		441956	0					
ANR	442137	Identifier	y		441956	1					
ANR	442138	Expression	"source_row += source -> raster , dest_row += dest -> raster"		441956	1					
ANR	442139	AssignmentExpression	source_row += source -> raster		441956	0		+=			
ANR	442140	Identifier	source_row		441956	0					
ANR	442141	PtrMemberAccess	source -> raster		441956	1					
ANR	442142	Identifier	source		441956	0					
ANR	442143	Identifier	raster		441956	1					
ANR	442144	AssignmentExpression	dest_row += dest -> raster		441956	1		+=			
ANR	442145	Identifier	dest_row		441956	0					
ANR	442146	PtrMemberAccess	dest -> raster		441956	1					
ANR	442147	Identifier	dest		441956	0					
ANR	442148	Identifier	raster		441956	1					
ANR	442149	CompoundStatement		38:8:1141:1146	441956	3					
ANR	442150	IdentifierDeclStatement	int x ;	487:8:16893:16898	441956	0	True				
ANR	442151	IdentifierDecl	x		441956	0					
ANR	442152	IdentifierDeclType	int		441956	0					
ANR	442153	Identifier	x		441956	1					
ANR	442154	SwitchStatement	switch ( loop_case )		441956	1					
ANR	442155	Condition	loop_case	489:16:16917:16925	441956	0	True				
ANR	442156	Identifier	loop_case		441956	0					
ANR	442157	CompoundStatement		40:27:1176:1176	441956	1					
ANR	442158	Label	case EXTRACT_4_TO_1 :	490:8:16938:16957	441956	0	True				
ANR	442159	Identifier	EXTRACT_4_TO_1		441956	0					
ANR	442160	CompoundStatement		43:12:1263:1283	441956	1					
ANR	442161	IdentifierDeclStatement	const byte * src = source_row ;	491:12:16973:17001	441956	0	True				
ANR	442162	IdentifierDecl	* src = source_row		441956	0					
ANR	442163	IdentifierDeclType	const byte *		441956	0					
ANR	442164	Identifier	src		441956	1					
ANR	442165	AssignmentExpression	* src = source_row		441956	2		=			
ANR	442166	Identifier	source_row		441956	0					
ANR	442167	Identifier	source_row		441956	1					
ANR	442168	IdentifierDeclStatement	byte * dst = dest_row ;	492:12:17015:17035	441956	1	True				
ANR	442169	IdentifierDecl	* dst = dest_row		441956	0					
ANR	442170	IdentifierDeclType	byte *		441956	0					
ANR	442171	Identifier	dst		441956	1					
ANR	442172	AssignmentExpression	* dst = dest_row		441956	2		=			
ANR	442173	Identifier	dest_row		441956	0					
ANR	442174	Identifier	dest_row		441956	1					
ANR	442175	ForStatement	"for ( x = width ; x >= 8 ; src += 4 , x -= 8 )"		441956	2					
ANR	442176	ForInit	x = width ;	495:17:17096:17105	441956	0	True				
ANR	442177	AssignmentExpression	x = width		441956	0		=			
ANR	442178	Identifier	x		441956	0					
ANR	442179	Identifier	width		441956	1					
ANR	442180	Condition	x >= 8	495:28:17107:17112	441956	1	True				
ANR	442181	RelationalExpression	x >= 8		441956	0		>=			
ANR	442182	Identifier	x		441956	0					
ANR	442183	PrimaryExpression	8		441956	1					
ANR	442184	Expression	"src += 4 , x -= 8"	495:36:17115:17130	441956	2	True				
ANR	442185	AssignmentExpression	src += 4		441956	0		+=			
ANR	442186	Identifier	src		441956	0					
ANR	442187	PrimaryExpression	4		441956	1					
ANR	442188	AssignmentExpression	x -= 8		441956	1		-=			
ANR	442189	Identifier	x		441956	0					
ANR	442190	PrimaryExpression	8		441956	1					
ANR	442191	CompoundStatement		47:16:1399:1478	441956	3					
ANR	442192	IdentifierDeclStatement	bits32 sword = ( * ( const bits32 * ) src >> shift ) & 0x11111111 ;	496:16:17151:17230	441956	0	True				
ANR	442193	IdentifierDecl	sword = ( * ( const bits32 * ) src >> shift ) & 0x11111111		441956	0					
ANR	442194	IdentifierDeclType	bits32		441956	0					
ANR	442195	Identifier	sword		441956	1					
ANR	442196	AssignmentExpression	sword = ( * ( const bits32 * ) src >> shift ) & 0x11111111		441956	2		=			
ANR	442197	Identifier	sword		441956	0					
ANR	442198	BitAndExpression	( * ( const bits32 * ) src >> shift ) & 0x11111111		441956	1		&			
ANR	442199	ShiftExpression	* ( const bits32 * ) src >> shift		441956	0		>>			
ANR	442200	UnaryOperationExpression	* ( const bits32 * ) src		441956	0					
ANR	442201	UnaryOperator	*		441956	0					
ANR	442202	CastExpression	( const bits32 * ) src		441956	1					
ANR	442203	CastTarget	const bits32 *		441956	0					
ANR	442204	Identifier	src		441956	1					
ANR	442205	Identifier	shift		441956	1					
ANR	442206	PrimaryExpression	0x11111111		441956	1					
ANR	442207	Statement	*	499:16:17249:17249	441956	1	True				
ANR	442208	Statement	dst	499:17:17250:17252	441956	2	True				
ANR	442209	Statement	++	499:20:17253:17254	441956	3	True				
ANR	442210	Statement	=	499:23:17256:17256	441956	4	True				
ANR	442211	Statement	byte_acegbdfh_to_abcdefgh	500:20:17278:17302	441956	5	True				
ANR	442212	Statement	[	500:45:17303:17303	441956	6	True				
ANR	442213	Statement	(	500:46:17304:17304	441956	7	True				
ANR	442214	Statement	(	502:20:17349:17349	441956	8	True				
ANR	442215	Statement	sword	502:21:17350:17354	441956	9	True				
ANR	442216	Statement	>>	502:27:17356:17357	441956	10	True				
ANR	442217	Statement	21	502:30:17359:17360	441956	11	True				
ANR	442218	Statement	)	502:32:17361:17361	441956	12	True				
ANR	442219	Statement	|	502:34:17363:17363	441956	13	True				
ANR	442220	Statement	(	502:36:17365:17365	441956	14	True				
ANR	442221	Statement	sword	502:37:17366:17370	441956	15	True				
ANR	442222	Statement	>>	502:43:17372:17373	441956	16	True				
ANR	442223	Statement	14	502:46:17375:17376	441956	17	True				
ANR	442224	Statement	)	502:48:17377:17377	441956	18	True				
ANR	442225	Statement	|	502:50:17379:17379	441956	19	True				
ANR	442226	Statement	(	502:52:17381:17381	441956	20	True				
ANR	442227	Statement	sword	502:53:17382:17386	441956	21	True				
ANR	442228	Statement	>>	502:59:17388:17389	441956	22	True				
ANR	442229	Statement	7	502:62:17391:17391	441956	23	True				
ANR	442230	Statement	)	502:63:17392:17392	441956	24	True				
ANR	442231	Statement	|	502:65:17394:17394	441956	25	True				
ANR	442232	Statement	sword	502:67:17396:17400	441956	26	True				
ANR	442233	Statement	)	506:40:17535:17535	441956	27	True				
ANR	442234	Statement	&	506:42:17537:17537	441956	28	True				
ANR	442235	Statement	0xff	506:44:17539:17542	441956	29	True				
ANR	442236	Statement	]	506:48:17543:17543	441956	30	True				
ANR	442237	ExpressionStatement		506:49:17544:17544	441956	31	True				
ANR	442238	IfStatement	if ( x )		441956	3					
ANR	442239	Condition	x	508:16:17576:17576	441956	0	True				
ANR	442240	Identifier	x		441956	0					
ANR	442241	CompoundStatement		61:16:1892:1931	441956	1					
ANR	442242	IdentifierDeclStatement	"uint test = 0x10 << shift , store = 0x80 ;"	510:16:17644:17683	441956	0	True				
ANR	442243	IdentifierDecl	test = 0x10 << shift		441956	0					
ANR	442244	IdentifierDeclType	uint		441956	0					
ANR	442245	Identifier	test		441956	1					
ANR	442246	AssignmentExpression	test = 0x10 << shift		441956	2		=			
ANR	442247	Identifier	test		441956	0					
ANR	442248	ShiftExpression	0x10 << shift		441956	1		<<			
ANR	442249	PrimaryExpression	0x10		441956	0					
ANR	442250	Identifier	shift		441956	1					
ANR	442251	IdentifierDecl	store = 0x80		441956	1					
ANR	442252	IdentifierDeclType	uint		441956	0					
ANR	442253	Identifier	store		441956	1					
ANR	442254	AssignmentExpression	store = 0x80		441956	2		=			
ANR	442255	Identifier	store		441956	0					
ANR	442256	PrimaryExpression	0x80		441956	1					
ANR	442257	DoStatement	do		441956	1					
ANR	442258	CompoundStatement		63:19:1953:1953	441956	0					
ANR	442259	ExpressionStatement	* dst = ( * src & test ? * dst | store : * dst & ~store )	513:20:17727:17778	441956	0	True				
ANR	442260	AssignmentExpression	* dst = ( * src & test ? * dst | store : * dst & ~store )		441956	0		=			
ANR	442261	UnaryOperationExpression	* dst		441956	0					
ANR	442262	UnaryOperator	*		441956	0					
ANR	442263	Identifier	dst		441956	1					
ANR	442264	ConditionalExpression	* src & test ? * dst | store : * dst & ~store		441956	1					
ANR	442265	Condition	* src & test		441956	0					
ANR	442266	BitAndExpression	* src & test		441956	0		&			
ANR	442267	UnaryOperationExpression	* src		441956	0					
ANR	442268	UnaryOperator	*		441956	0					
ANR	442269	Identifier	src		441956	1					
ANR	442270	Identifier	test		441956	1					
ANR	442271	InclusiveOrExpression	* dst | store		441956	1		|			
ANR	442272	UnaryOperationExpression	* dst		441956	0					
ANR	442273	UnaryOperator	*		441956	0					
ANR	442274	Identifier	dst		441956	1					
ANR	442275	Identifier	store		441956	1					
ANR	442276	BitAndExpression	* dst & ~store		441956	2		&			
ANR	442277	UnaryOperationExpression	* dst		441956	0					
ANR	442278	UnaryOperator	*		441956	0					
ANR	442279	Identifier	dst		441956	1					
ANR	442280	Identifier	~store		441956	1					
ANR	442281	IfStatement	if ( test >= 0x10 )		441956	1					
ANR	442282	Condition	test >= 0x10	514:24:17804:17815	441956	0	True				
ANR	442283	RelationalExpression	test >= 0x10		441956	0		>=			
ANR	442284	Identifier	test		441956	0					
ANR	442285	PrimaryExpression	0x10		441956	1					
ANR	442286	ExpressionStatement	test >>= 4	515:24:17842:17852	441956	1	True				
ANR	442287	AssignmentExpression	test >>= 4		441956	0		>>=			
ANR	442288	Identifier	test		441956	0					
ANR	442289	PrimaryExpression	4		441956	1					
ANR	442290	ElseStatement	else		441956	0					
ANR	442291	ExpressionStatement	"test <<= 4 , ++ src"	517:24:17903:17920	441956	0	True				
ANR	442292	Expression	"test <<= 4 , ++ src"		441956	0					
ANR	442293	AssignmentExpression	test <<= 4		441956	0		<<=			
ANR	442294	Identifier	test		441956	0					
ANR	442295	PrimaryExpression	4		441956	1					
ANR	442296	UnaryExpression	++ src		441956	1					
ANR	442297	IncDec	++		441956	0					
ANR	442298	Identifier	src		441956	1					
ANR	442299	ExpressionStatement	store >>= 1	518:20:17942:17953	441956	2	True				
ANR	442300	AssignmentExpression	store >>= 1		441956	0		>>=			
ANR	442301	Identifier	store		441956	0					
ANR	442302	PrimaryExpression	1		441956	1					
ANR	442303	Condition	-- x > 0	519:25:17980:17986	441956	1	True				
ANR	442304	RelationalExpression	-- x > 0		441956	0		>			
ANR	442305	UnaryExpression	-- x		441956	0					
ANR	442306	IncDec	--		441956	0					
ANR	442307	Identifier	x		441956	1					
ANR	442308	PrimaryExpression	0		441956	1					
ANR	442309	BreakStatement	break ;	521:12:18016:18021	441956	4	True				
ANR	442310	Label	case EXTRACT_32_TO_8 :	523:8:18041:18061	441956	2	True				
ANR	442311	Identifier	EXTRACT_32_TO_8		441956	0					
ANR	442312	CompoundStatement		76:12:2367:2387	441956	3					
ANR	442313	IdentifierDeclStatement	const byte * src = source_row ;	524:12:18077:18105	441956	0	True				
ANR	442314	IdentifierDecl	* src = source_row		441956	0					
ANR	442315	IdentifierDeclType	const byte *		441956	0					
ANR	442316	Identifier	src		441956	1					
ANR	442317	AssignmentExpression	* src = source_row		441956	2		=			
ANR	442318	Identifier	source_row		441956	0					
ANR	442319	Identifier	source_row		441956	1					
ANR	442320	IdentifierDeclStatement	byte * dst = dest_row ;	525:12:18119:18139	441956	1	True				
ANR	442321	IdentifierDecl	* dst = dest_row		441956	0					
ANR	442322	IdentifierDeclType	byte *		441956	0					
ANR	442323	Identifier	dst		441956	1					
ANR	442324	AssignmentExpression	* dst = dest_row		441956	2		=			
ANR	442325	Identifier	dest_row		441956	0					
ANR	442326	Identifier	dest_row		441956	1					
ANR	442327	ForStatement	"for ( x = width ; x > 0 ; src += 4 , -- x )"		441956	2					
ANR	442328	ForInit	x = width ;	527:17:18159:18168	441956	0	True				
ANR	442329	AssignmentExpression	x = width		441956	0		=			
ANR	442330	Identifier	x		441956	0					
ANR	442331	Identifier	width		441956	1					
ANR	442332	Condition	x > 0	527:28:18170:18174	441956	1	True				
ANR	442333	RelationalExpression	x > 0		441956	0		>			
ANR	442334	Identifier	x		441956	0					
ANR	442335	PrimaryExpression	0		441956	1					
ANR	442336	Expression	"src += 4 , -- x"	527:35:18177:18189	441956	2	True				
ANR	442337	AssignmentExpression	src += 4		441956	0		+=			
ANR	442338	Identifier	src		441956	0					
ANR	442339	PrimaryExpression	4		441956	1					
ANR	442340	UnaryExpression	-- x		441956	1					
ANR	442341	IncDec	--		441956	0					
ANR	442342	Identifier	x		441956	1					
ANR	442343	ExpressionStatement	* dst ++ = * src	528:16:18208:18221	441956	3	True				
ANR	442344	AssignmentExpression	* dst ++ = * src		441956	0		=			
ANR	442345	UnaryOperationExpression	* dst ++		441956	0					
ANR	442346	UnaryOperator	*		441956	0					
ANR	442347	PostIncDecOperationExpression	dst ++		441956	1					
ANR	442348	Identifier	dst		441956	0					
ANR	442349	IncDec	++		441956	1					
ANR	442350	UnaryOperationExpression	* src		441956	1					
ANR	442351	UnaryOperator	*		441956	0					
ANR	442352	Identifier	src		441956	1					
ANR	442353	BreakStatement	break ;	529:12:18235:18240	441956	3	True				
ANR	442354	Label	default :	531:8:18260:18267	441956	4	True				
ANR	442355	Identifier	default		441956	0					
ANR	442356	CompoundStatement		87:12:2677:2736	441956	5					
ANR	442357	IdentifierDeclStatement	const byte * sptr = source_row ;	532:12:18283:18312	441956	0	True				
ANR	442358	IdentifierDecl	* sptr = source_row		441956	0					
ANR	442359	IdentifierDeclType	const byte *		441956	0					
ANR	442360	Identifier	sptr		441956	1					
ANR	442361	AssignmentExpression	* sptr = source_row		441956	2		=			
ANR	442362	Identifier	source_row		441956	0					
ANR	442363	Identifier	source_row		441956	1					
ANR	442364	IdentifierDeclStatement	int sbit = source_bit ;	533:12:18326:18347	441956	1	True				
ANR	442365	IdentifierDecl	sbit = source_bit		441956	0					
ANR	442366	IdentifierDeclType	int		441956	0					
ANR	442367	Identifier	sbit		441956	1					
ANR	442368	AssignmentExpression	sbit = source_bit		441956	2		=			
ANR	442369	Identifier	source_bit		441956	0					
ANR	442370	Identifier	source_bit		441956	1					
ANR	442371	IdentifierDeclStatement	byte * dptr = dest_row ;	534:12:18361:18382	441956	2	True				
ANR	442372	IdentifierDecl	* dptr = dest_row		441956	0					
ANR	442373	IdentifierDeclType	byte *		441956	0					
ANR	442374	Identifier	dptr		441956	1					
ANR	442375	AssignmentExpression	* dptr = dest_row		441956	2		=			
ANR	442376	Identifier	dest_row		441956	0					
ANR	442377	Identifier	dest_row		441956	1					
ANR	442378	IdentifierDeclStatement	int dbit = dest_bit ;	535:12:18396:18415	441956	3	True				
ANR	442379	IdentifierDecl	dbit = dest_bit		441956	0					
ANR	442380	IdentifierDeclType	int		441956	0					
ANR	442381	Identifier	dbit		441956	1					
ANR	442382	AssignmentExpression	dbit = dest_bit		441956	2		=			
ANR	442383	Identifier	dest_bit		441956	0					
ANR	442384	Identifier	dest_bit		441956	1					
ANR	442385	IdentifierDeclStatement	byte dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 ) ;	536:12:18429:18488	441956	4	True				
ANR	442386	IdentifierDecl	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		441956	0					
ANR	442387	IdentifierDeclType	byte		441956	0					
ANR	442388	Identifier	dbbyte		441956	1					
ANR	442389	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		441956	2		=			
ANR	442390	Identifier	dbbyte		441956	0					
ANR	442391	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		441956	1					
ANR	442392	Condition	dbit		441956	0					
ANR	442393	Identifier	dbit		441956	0					
ANR	442394	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		441956	1					
ANR	442395	CastTarget	byte		441956	0					
ANR	442396	BitAndExpression	* dptr & ( 0xff00 >> dbit )		441956	1		&			
ANR	442397	UnaryOperationExpression	* dptr		441956	0					
ANR	442398	UnaryOperator	*		441956	0					
ANR	442399	Identifier	dptr		441956	1					
ANR	442400	ShiftExpression	0xff00 >> dbit		441956	1		>>			
ANR	442401	PrimaryExpression	0xff00		441956	0					
ANR	442402	Identifier	dbit		441956	1					
ANR	442403	PrimaryExpression	0		441956	2					
ANR	442404	ExpressionStatement	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )	538:12:18503:18557	441956	5	True				
ANR	442405	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		441956	0		=			
ANR	442406	Identifier	dbbyte		441956	0					
ANR	442407	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		441956	1					
ANR	442408	Condition	dbit		441956	0					
ANR	442409	Identifier	dbit		441956	0					
ANR	442410	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		441956	1					
ANR	442411	CastTarget	byte		441956	0					
ANR	442412	BitAndExpression	* dptr & ( 0xff00 >> dbit )		441956	1		&			
ANR	442413	UnaryOperationExpression	* dptr		441956	0					
ANR	442414	UnaryOperator	*		441956	0					
ANR	442415	Identifier	dptr		441956	1					
ANR	442416	ShiftExpression	0xff00 >> dbit		441956	1		>>			
ANR	442417	PrimaryExpression	0xff00		441956	0					
ANR	442418	Identifier	dbit		441956	1					
ANR	442419	PrimaryExpression	0		441956	2					
ANR	442420	ForStatement	for ( x = width ; x > 0 ; -- x )		441956	6					
ANR	442421	ForInit	x = width ;	539:17:18576:18585	441956	0	True				
ANR	442422	AssignmentExpression	x = width		441956	0		=			
ANR	442423	Identifier	x		441956	0					
ANR	442424	Identifier	width		441956	1					
ANR	442425	Condition	x > 0	539:28:18587:18591	441956	1	True				
ANR	442426	RelationalExpression	x > 0		441956	0		>			
ANR	442427	Identifier	x		441956	0					
ANR	442428	PrimaryExpression	0		441956	1					
ANR	442429	UnaryExpression	-- x	539:35:18594:18596	441956	2	True				
ANR	442430	IncDec	--		441956	0					
ANR	442431	Identifier	x		441956	1					
ANR	442432	CompoundStatement		92:16:2903:2913	441956	3					
ANR	442433	IdentifierDeclStatement	gx_color_index color ;	540:16:18617:18637	441956	0	True				
ANR	442434	IdentifierDecl	color		441956	0					
ANR	442435	IdentifierDeclType	gx_color_index		441956	0					
ANR	442436	Identifier	color		441956	1					
ANR	442437	IdentifierDeclStatement	uint pixel ;	541:16:18655:18665	441956	1	True				
ANR	442438	IdentifierDecl	pixel		441956	0					
ANR	442439	IdentifierDeclType	uint		441956	0					
ANR	442440	Identifier	pixel		441956	1					
ANR	442441	IfStatement	if ( sizeof ( color ) > 4 )		441956	2					
ANR	442442	Condition	sizeof ( color ) > 4	543:20:18688:18704	441956	0	True				
ANR	442443	RelationalExpression	sizeof ( color ) > 4		441956	0		>			
ANR	442444	SizeofExpression	sizeof ( color )		441956	0					
ANR	442445	Sizeof	sizeof		441956	0					
ANR	442446	SizeofOperand	color		441956	1					
ANR	442447	PrimaryExpression	4		441956	1					
ANR	442448	CompoundStatement		94:39:2955:2955	441956	1					
ANR	442449	IfStatement	"if ( sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth ) < 0 )"		441956	0					
ANR	442450	Condition	"sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth ) < 0"	544:24:18733:18802	441956	0	True				
ANR	442451	RelationalExpression	"sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth ) < 0"		441956	0		<			
ANR	442452	CallExpression	"sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth )"		441956	0					
ANR	442453	Callee	sample_load_next64		441956	0					
ANR	442454	Identifier	sample_load_next64		441956	0					
ANR	442455	ArgumentList	( uint64_t * ) & color		441956	1					
ANR	442456	Argument	( uint64_t * ) & color		441956	0					
ANR	442457	CastExpression	( uint64_t * ) & color		441956	0					
ANR	442458	CastTarget	uint64_t *		441956	0					
ANR	442459	UnaryOperationExpression	& color		441956	1					
ANR	442460	UnaryOperator	&		441956	0					
ANR	442461	Identifier	color		441956	1					
ANR	442462	Argument	& sptr		441956	1					
ANR	442463	UnaryOperationExpression	& sptr		441956	0					
ANR	442464	UnaryOperator	&		441956	0					
ANR	442465	Identifier	sptr		441956	1					
ANR	442466	Argument	& sbit		441956	2					
ANR	442467	UnaryOperationExpression	& sbit		441956	0					
ANR	442468	UnaryOperator	&		441956	0					
ANR	442469	Identifier	sbit		441956	1					
ANR	442470	Argument	source_depth		441956	3					
ANR	442471	Identifier	source_depth		441956	0					
ANR	442472	PrimaryExpression	0		441956	1					
ANR	442473	ExpressionStatement	return_error ( gs_error_rangecheck )	545:24:18829:18862	441956	1	True				
ANR	442474	CallExpression	return_error ( gs_error_rangecheck )		441956	0					
ANR	442475	Callee	return_error		441956	0					
ANR	442476	Identifier	return_error		441956	0					
ANR	442477	ArgumentList	gs_error_rangecheck		441956	1					
ANR	442478	Argument	gs_error_rangecheck		441956	0					
ANR	442479	Identifier	gs_error_rangecheck		441956	0					
ANR	442480	ElseStatement	else		441956	0					
ANR	442481	CompoundStatement		98:21:3151:3151	441956	0					
ANR	442482	IfStatement	"if ( sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth ) < 0 )"		441956	0					
ANR	442483	Condition	"sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth ) < 0"	548:24:18929:18998	441956	0	True				
ANR	442484	RelationalExpression	"sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth ) < 0"		441956	0		<			
ANR	442485	CallExpression	"sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth )"		441956	0					
ANR	442486	Callee	sample_load_next32		441956	0					
ANR	442487	Identifier	sample_load_next32		441956	0					
ANR	442488	ArgumentList	( uint32_t * ) & color		441956	1					
ANR	442489	Argument	( uint32_t * ) & color		441956	0					
ANR	442490	CastExpression	( uint32_t * ) & color		441956	0					
ANR	442491	CastTarget	uint32_t *		441956	0					
ANR	442492	UnaryOperationExpression	& color		441956	1					
ANR	442493	UnaryOperator	&		441956	0					
ANR	442494	Identifier	color		441956	1					
ANR	442495	Argument	& sptr		441956	1					
ANR	442496	UnaryOperationExpression	& sptr		441956	0					
ANR	442497	UnaryOperator	&		441956	0					
ANR	442498	Identifier	sptr		441956	1					
ANR	442499	Argument	& sbit		441956	2					
ANR	442500	UnaryOperationExpression	& sbit		441956	0					
ANR	442501	UnaryOperator	&		441956	0					
ANR	442502	Identifier	sbit		441956	1					
ANR	442503	Argument	source_depth		441956	3					
ANR	442504	Identifier	source_depth		441956	0					
ANR	442505	PrimaryExpression	0		441956	1					
ANR	442506	ExpressionStatement	return_error ( gs_error_rangecheck )	549:24:19025:19058	441956	1	True				
ANR	442507	CallExpression	return_error ( gs_error_rangecheck )		441956	0					
ANR	442508	Callee	return_error		441956	0					
ANR	442509	Identifier	return_error		441956	0					
ANR	442510	ArgumentList	gs_error_rangecheck		441956	1					
ANR	442511	Argument	gs_error_rangecheck		441956	0					
ANR	442512	Identifier	gs_error_rangecheck		441956	0					
ANR	442513	ExpressionStatement	pixel = ( color >> shift ) & plane_mask	551:16:19094:19131	441956	3	True				
ANR	442514	AssignmentExpression	pixel = ( color >> shift ) & plane_mask		441956	0		=			
ANR	442515	Identifier	pixel		441956	0					
ANR	442516	BitAndExpression	( color >> shift ) & plane_mask		441956	1		&			
ANR	442517	ShiftExpression	color >> shift		441956	0		>>			
ANR	442518	Identifier	color		441956	0					
ANR	442519	Identifier	shift		441956	1					
ANR	442520	Identifier	plane_mask		441956	1					
ANR	442521	IfStatement	"if ( sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0 )"		441956	4					
ANR	442522	Condition	"sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"	552:20:19153:19216	441956	0	True				
ANR	442523	RelationalExpression	"sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"		441956	0		<			
ANR	442524	CallExpression	"sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte )"		441956	0					
ANR	442525	Callee	sample_store_next8		441956	0					
ANR	442526	Identifier	sample_store_next8		441956	0					
ANR	442527	ArgumentList	pixel		441956	1					
ANR	442528	Argument	pixel		441956	0					
ANR	442529	Identifier	pixel		441956	0					
ANR	442530	Argument	& dptr		441956	1					
ANR	442531	UnaryOperationExpression	& dptr		441956	0					
ANR	442532	UnaryOperator	&		441956	0					
ANR	442533	Identifier	dptr		441956	1					
ANR	442534	Argument	& dbit		441956	2					
ANR	442535	UnaryOperationExpression	& dbit		441956	0					
ANR	442536	UnaryOperator	&		441956	0					
ANR	442537	Identifier	dbit		441956	1					
ANR	442538	Argument	dest_depth		441956	3					
ANR	442539	Identifier	dest_depth		441956	0					
ANR	442540	Argument	& dbbyte		441956	4					
ANR	442541	UnaryOperationExpression	& dbbyte		441956	0					
ANR	442542	UnaryOperator	&		441956	0					
ANR	442543	Identifier	dbbyte		441956	1					
ANR	442544	PrimaryExpression	0		441956	1					
ANR	442545	ExpressionStatement	return_error ( gs_error_rangecheck )	553:20:19239:19272	441956	1	True				
ANR	442546	CallExpression	return_error ( gs_error_rangecheck )		441956	0					
ANR	442547	Callee	return_error		441956	0					
ANR	442548	Identifier	return_error		441956	0					
ANR	442549	ArgumentList	gs_error_rangecheck		441956	1					
ANR	442550	Argument	gs_error_rangecheck		441956	0					
ANR	442551	Identifier	gs_error_rangecheck		441956	0					
ANR	442552	ExpressionStatement	"sample_store_flush ( dptr , dbit , dbbyte )"	555:12:19300:19338	441956	7	True				
ANR	442553	CallExpression	"sample_store_flush ( dptr , dbit , dbbyte )"		441956	0					
ANR	442554	Callee	sample_store_flush		441956	0					
ANR	442555	Identifier	sample_store_flush		441956	0					
ANR	442556	ArgumentList	dptr		441956	1					
ANR	442557	Argument	dptr		441956	0					
ANR	442558	Identifier	dptr		441956	0					
ANR	442559	Argument	dbit		441956	1					
ANR	442560	Identifier	dbit		441956	0					
ANR	442561	Argument	dbbyte		441956	2					
ANR	442562	Identifier	dbbyte		441956	0					
ANR	442563	ReturnStatement	return 0 ;	559:4:19370:19378	441956	13	True				
ANR	442564	PrimaryExpression	0		441956	0					
ANR	442565	ReturnType	int		441956	1					
ANR	442566	Identifier	bits_extract_plane		441956	2					
ANR	442567	ParameterList	"const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height"		441956	3					
ANR	442568	Parameter	const bits_plane_t * dest	448:19:15640:15663	441956	0	True				
ANR	442569	ParameterType	const bits_plane_t *		441956	0					
ANR	442570	Identifier	dest		441956	1					
ANR	442571	Parameter	const bits_plane_t * source	449:4:15680:15705	441956	1	True				
ANR	442572	ParameterType	const bits_plane_t *		441956	0					
ANR	442573	Identifier	source		441956	1					
ANR	442574	Parameter	int shift	449:41:15717:15725	441956	2	True				
ANR	442575	ParameterType	int		441956	0					
ANR	442576	Identifier	shift		441956	1					
ANR	442577	Parameter	int width	449:52:15728:15736	441956	3	True				
ANR	442578	ParameterType	int		441956	0					
ANR	442579	Identifier	width		441956	1					
ANR	442580	Parameter	int height	449:63:15739:15748	441956	4	True				
ANR	442581	ParameterType	int		441956	0					
ANR	442582	Identifier	height		441956	1					
ANR	442583	CFGEntryNode	ENTRY		441956		True				
ANR	442584	CFGExitNode	EXIT		441956		True				
ANR	442585	Symbol	& sptr		441956						
ANR	442586	Symbol	gs_error_rangecheck		441956						
ANR	442587	Symbol	& color		441956						
ANR	442588	Symbol	shift		441956						
ANR	442589	Symbol	dbit		441956						
ANR	442590	Symbol	sample_load_next64		441956						
ANR	442591	Symbol	source -> data		441956						
ANR	442592	Symbol	source		441956						
ANR	442593	Symbol	dest		441956						
ANR	442594	Symbol	* src		441956						
ANR	442595	Symbol	& dptr		441956						
ANR	442596	Symbol	sbit		441956						
ANR	442597	Symbol	* dst		441956						
ANR	442598	Symbol	dest_depth		441956						
ANR	442599	Symbol	dest -> raster		441956						
ANR	442600	Symbol	* source		441956						
ANR	442601	Symbol	height		441956						
ANR	442602	Symbol	test		441956						
ANR	442603	Symbol	& sbit		441956						
ANR	442604	Symbol	sample_load_next32		441956						
ANR	442605	Symbol	dptr		441956						
ANR	442606	Symbol	source_depth		441956						
ANR	442607	Symbol	& dbit		441956						
ANR	442608	Symbol	dest_row		441956						
ANR	442609	Symbol	dest -> depth		441956						
ANR	442610	Symbol	source_bit		441956						
ANR	442611	Symbol	& dbbyte		441956						
ANR	442612	Symbol	source -> depth		441956						
ANR	442613	Symbol	~store		441956						
ANR	442614	Symbol	sptr		441956						
ANR	442615	Symbol	dbbyte		441956						
ANR	442616	Symbol	EXTRACT_SLOW		441956						
ANR	442617	Symbol	* dst ++		441956						
ANR	442618	Symbol	loop_case		441956						
ANR	442619	Symbol	source -> data . read		441956						
ANR	442620	Symbol	dest -> data		441956						
ANR	442621	Symbol	dst		441956						
ANR	442622	Symbol	color		441956						
ANR	442623	Symbol	* dest		441956						
ANR	442624	Symbol	dest -> x		441956						
ANR	442625	Symbol	EXTRACT_32_TO_8		441956						
ANR	442626	Symbol	* dptr		441956						
ANR	442627	Symbol	pixel		441956						
ANR	442628	Symbol	sample_store_next8		441956						
ANR	442629	Symbol	src		441956						
ANR	442630	Symbol	dest_bit		441956						
ANR	442631	Symbol	plane_mask		441956						
ANR	442632	Symbol	EXTRACT_4_TO_1		441956						
ANR	442633	Symbol	store		441956						
ANR	442634	Symbol	* ( const bits32 * ) src		441956						
ANR	442635	Symbol	source -> raster		441956						
ANR	442636	Symbol	dest -> data . write		441956						
ANR	442637	Symbol	sword		441956						
ANR	442638	Symbol	source_row		441956						
ANR	442639	Symbol	source -> x		441956						
ANR	442640	Symbol	width		441956						
ANR	442641	Symbol	x		441956						
ANR	442642	Symbol	y		441956						
ANR	442643	Function	bits_expand_plane	563:0:19419:22296							
ANR	442644	FunctionDef	"bits_expand_plane (const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height)"		442643	0					
ANR	442645	CompoundStatement		566:0:19552:22296	442643	0					
ANR	442646	IdentifierDeclStatement	int source_depth = source -> depth ;	570:4:19643:19675	442643	0	True				
ANR	442647	IdentifierDecl	source_depth = source -> depth		442643	0					
ANR	442648	IdentifierDeclType	int		442643	0					
ANR	442649	Identifier	source_depth		442643	1					
ANR	442650	AssignmentExpression	source_depth = source -> depth		442643	2		=			
ANR	442651	Identifier	source_depth		442643	0					
ANR	442652	PtrMemberAccess	source -> depth		442643	1					
ANR	442653	Identifier	source		442643	0					
ANR	442654	Identifier	depth		442643	1					
ANR	442655	IdentifierDeclStatement	int source_bit = source -> x * source_depth ;	571:4:19681:19722	442643	1	True				
ANR	442656	IdentifierDecl	source_bit = source -> x * source_depth		442643	0					
ANR	442657	IdentifierDeclType	int		442643	0					
ANR	442658	Identifier	source_bit		442643	1					
ANR	442659	AssignmentExpression	source_bit = source -> x * source_depth		442643	2		=			
ANR	442660	Identifier	source_bit		442643	0					
ANR	442661	MultiplicativeExpression	source -> x * source_depth		442643	1		*			
ANR	442662	PtrMemberAccess	source -> x		442643	0					
ANR	442663	Identifier	source		442643	0					
ANR	442664	Identifier	x		442643	1					
ANR	442665	Identifier	source_depth		442643	1					
ANR	442666	IdentifierDeclStatement	const byte * source_row = source -> data . read + ( source_bit >> 3 ) ;	572:4:19728:19790	442643	2	True				
ANR	442667	IdentifierDecl	* source_row = source -> data . read + ( source_bit >> 3 )		442643	0					
ANR	442668	IdentifierDeclType	const byte *		442643	0					
ANR	442669	Identifier	source_row		442643	1					
ANR	442670	AssignmentExpression	* source_row = source -> data . read + ( source_bit >> 3 )		442643	2		=			
ANR	442671	Identifier	source_row		442643	0					
ANR	442672	AdditiveExpression	source -> data . read + ( source_bit >> 3 )		442643	1		+			
ANR	442673	MemberAccess	source -> data . read		442643	0					
ANR	442674	PtrMemberAccess	source -> data		442643	0					
ANR	442675	Identifier	source		442643	0					
ANR	442676	Identifier	data		442643	1					
ANR	442677	Identifier	read		442643	1					
ANR	442678	ShiftExpression	source_bit >> 3		442643	1		>>			
ANR	442679	Identifier	source_bit		442643	0					
ANR	442680	PrimaryExpression	3		442643	1					
ANR	442681	IdentifierDeclStatement	int dest_depth = dest -> depth ;	573:4:19796:19824	442643	3	True				
ANR	442682	IdentifierDecl	dest_depth = dest -> depth		442643	0					
ANR	442683	IdentifierDeclType	int		442643	0					
ANR	442684	Identifier	dest_depth		442643	1					
ANR	442685	AssignmentExpression	dest_depth = dest -> depth		442643	2		=			
ANR	442686	Identifier	dest_depth		442643	0					
ANR	442687	PtrMemberAccess	dest -> depth		442643	1					
ANR	442688	Identifier	dest		442643	0					
ANR	442689	Identifier	depth		442643	1					
ANR	442690	IdentifierDeclStatement	int dest_bit = dest -> x * dest_depth ;	574:4:19830:19865	442643	4	True				
ANR	442691	IdentifierDecl	dest_bit = dest -> x * dest_depth		442643	0					
ANR	442692	IdentifierDeclType	int		442643	0					
ANR	442693	Identifier	dest_bit		442643	1					
ANR	442694	AssignmentExpression	dest_bit = dest -> x * dest_depth		442643	2		=			
ANR	442695	Identifier	dest_bit		442643	0					
ANR	442696	MultiplicativeExpression	dest -> x * dest_depth		442643	1		*			
ANR	442697	PtrMemberAccess	dest -> x		442643	0					
ANR	442698	Identifier	dest		442643	0					
ANR	442699	Identifier	x		442643	1					
ANR	442700	Identifier	dest_depth		442643	1					
ANR	442701	IdentifierDeclStatement	byte * dest_row = dest -> data . write + ( dest_bit >> 3 ) ;	575:4:19871:19922	442643	5	True				
ANR	442702	IdentifierDecl	* dest_row = dest -> data . write + ( dest_bit >> 3 )		442643	0					
ANR	442703	IdentifierDeclType	byte *		442643	0					
ANR	442704	Identifier	dest_row		442643	1					
ANR	442705	AssignmentExpression	* dest_row = dest -> data . write + ( dest_bit >> 3 )		442643	2		=			
ANR	442706	Identifier	dest_row		442643	0					
ANR	442707	AdditiveExpression	dest -> data . write + ( dest_bit >> 3 )		442643	1		+			
ANR	442708	MemberAccess	dest -> data . write		442643	0					
ANR	442709	PtrMemberAccess	dest -> data		442643	0					
ANR	442710	Identifier	dest		442643	0					
ANR	442711	Identifier	data		442643	1					
ANR	442712	Identifier	write		442643	1					
ANR	442713	ShiftExpression	dest_bit >> 3		442643	1		>>			
ANR	442714	Identifier	dest_bit		442643	0					
ANR	442715	PrimaryExpression	3		442643	1					
ANR	442716	ClassDefStatement	"enum { EXPAND_SLOW = 0 , EXPAND_1_TO_4 , EXPAND_8_TO_32 } loop_case = EXPAND_SLOW ;"	576:4:19928:20035	442643	6	True				
ANR	442717	IdentifierDecl	loop_case = EXPAND_SLOW		442643	0					
ANR	442718	IdentifierDeclType			442643	0					
ANR	442719	Identifier	loop_case		442643	1					
ANR	442720	AssignmentExpression	loop_case = EXPAND_SLOW		442643	2		=			
ANR	442721	Identifier	EXPAND_SLOW		442643	0					
ANR	442722	Identifier	EXPAND_SLOW		442643	1					
ANR	442723	IdentifierDeclStatement	int y ;	581:4:20041:20046	442643	7	True				
ANR	442724	IdentifierDecl	y		442643	0					
ANR	442725	IdentifierDeclType	int		442643	0					
ANR	442726	Identifier	y		442643	1					
ANR	442727	ExpressionStatement	source_bit &= 7	583:4:20053:20068	442643	8	True				
ANR	442728	AssignmentExpression	source_bit &= 7		442643	0		&=			
ANR	442729	Identifier	source_bit		442643	0					
ANR	442730	PrimaryExpression	7		442643	1					
ANR	442731	IfStatement	if ( ! ( source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 ) ) )		442643	9					
ANR	442732	Condition	! ( source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 ) )	585:8:20119:20172	442643	0	True				
ANR	442733	UnaryOperationExpression	! ( source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 ) )		442643	0					
ANR	442734	UnaryOperator	!		442643	0					
ANR	442735	OrExpression	source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 )		442643	1		||			
ANR	442736	Identifier	source_bit		442643	0					
ANR	442737	OrExpression	( dest_bit & 31 ) || ( dest -> raster & 3 )		442643	1		||			
ANR	442738	BitAndExpression	dest_bit & 31		442643	0		&			
ANR	442739	Identifier	dest_bit		442643	0					
ANR	442740	PrimaryExpression	31		442643	1					
ANR	442741	BitAndExpression	dest -> raster & 3		442643	1		&			
ANR	442742	PtrMemberAccess	dest -> raster		442643	0					
ANR	442743	Identifier	dest		442643	0					
ANR	442744	Identifier	raster		442643	1					
ANR	442745	PrimaryExpression	3		442643	1					
ANR	442746	CompoundStatement		20:64:622:622	442643	1					
ANR	442747	SwitchStatement	switch ( dest_depth )		442643	0					
ANR	442748	Condition	dest_depth	586:16:20193:20202	442643	0	True				
ANR	442749	Identifier	dest_depth		442643	0					
ANR	442750	CompoundStatement		21:28:652:652	442643	1					
ANR	442751	Label	case 4 :	587:8:20215:20221	442643	0	True				
ANR	442752	IfStatement	if ( source_depth == 1 )		442643	1					
ANR	442753	Condition	source_depth == 1	588:16:20239:20255	442643	0	True				
ANR	442754	EqualityExpression	source_depth == 1		442643	0		==			
ANR	442755	Identifier	source_depth		442643	0					
ANR	442756	PrimaryExpression	1		442643	1					
ANR	442757	ExpressionStatement	loop_case = EXPAND_1_TO_4	589:16:20274:20299	442643	1	True				
ANR	442758	AssignmentExpression	loop_case = EXPAND_1_TO_4		442643	0		=			
ANR	442759	Identifier	loop_case		442643	0					
ANR	442760	Identifier	EXPAND_1_TO_4		442643	1					
ANR	442761	BreakStatement	break ;	590:12:20313:20318	442643	2	True				
ANR	442762	Label	case 32 :	591:8:20328:20335	442643	3	True				
ANR	442763	IfStatement	if ( source_depth == 8 && ! ( shift & 7 ) )		442643	4					
ANR	442764	Condition	source_depth == 8 && ! ( shift & 7 )	592:16:20353:20385	442643	0	True				
ANR	442765	AndExpression	source_depth == 8 && ! ( shift & 7 )		442643	0		&&			
ANR	442766	EqualityExpression	source_depth == 8		442643	0		==			
ANR	442767	Identifier	source_depth		442643	0					
ANR	442768	PrimaryExpression	8		442643	1					
ANR	442769	UnaryOperationExpression	! ( shift & 7 )		442643	1					
ANR	442770	UnaryOperator	!		442643	0					
ANR	442771	BitAndExpression	shift & 7		442643	1		&			
ANR	442772	Identifier	shift		442643	0					
ANR	442773	PrimaryExpression	7		442643	1					
ANR	442774	ExpressionStatement	loop_case = EXPAND_8_TO_32	593:16:20404:20430	442643	1	True				
ANR	442775	AssignmentExpression	loop_case = EXPAND_8_TO_32		442643	0		=			
ANR	442776	Identifier	loop_case		442643	0					
ANR	442777	Identifier	EXPAND_8_TO_32		442643	1					
ANR	442778	BreakStatement	break ;	594:12:20444:20449	442643	5	True				
ANR	442779	ExpressionStatement	dest_bit &= 7	597:4:20471:20484	442643	10	True				
ANR	442780	AssignmentExpression	dest_bit &= 7		442643	0		&=			
ANR	442781	Identifier	dest_bit		442643	0					
ANR	442782	PrimaryExpression	7		442643	1					
ANR	442783	SwitchStatement	switch ( loop_case )		442643	11					
ANR	442784	Condition	loop_case	598:12:20498:20506	442643	0	True				
ANR	442785	Identifier	loop_case		442643	0					
ANR	442786	CompoundStatement		33:23:956:956	442643	1					
ANR	442787	Label	case EXPAND_8_TO_32 :	600:4:20516:20535	442643	0	True				
ANR	442788	Identifier	EXPAND_8_TO_32		442643	0					
ANR	442789	CompoundStatement		35:25:984:984	442643	1					
ANR	442790	Statement	define	602:3:20565:20570	442643	0	True				
ANR	442791	Statement	word_shift	602:10:20572:20581	442643	1	True				
ANR	442792	Statement	(	602:21:20583:20583	442643	2	True				
ANR	442793	Statement	shift	602:22:20584:20588	442643	3	True				
ANR	442794	Statement	)	602:27:20589:20589	442643	4	True				
ANR	442795	ForStatement	"for ( y = 0 ; y < height ; ++ y , source_row += source -> raster , dest_row += dest -> raster )"		442643	5					
ANR	442796	ForInit	y = 0 ;	606:13:20654:20659	442643	0	True				
ANR	442797	AssignmentExpression	y = 0		442643	0		=			
ANR	442798	Identifier	y		442643	0					
ANR	442799	PrimaryExpression	0		442643	1					
ANR	442800	Condition	y < height	606:20:20661:20670	442643	1	True				
ANR	442801	RelationalExpression	y < height		442643	0		<			
ANR	442802	Identifier	y		442643	0					
ANR	442803	Identifier	height		442643	1					
ANR	442804	Expression	"++ y , source_row += source -> raster , dest_row += dest -> raster"	607:13:20686:20744	442643	2	True				
ANR	442805	UnaryExpression	++ y		442643	0					
ANR	442806	IncDec	++		442643	0					
ANR	442807	Identifier	y		442643	1					
ANR	442808	Expression	"source_row += source -> raster , dest_row += dest -> raster"		442643	1					
ANR	442809	AssignmentExpression	source_row += source -> raster		442643	0		+=			
ANR	442810	Identifier	source_row		442643	0					
ANR	442811	PtrMemberAccess	source -> raster		442643	1					
ANR	442812	Identifier	source		442643	0					
ANR	442813	Identifier	raster		442643	1					
ANR	442814	AssignmentExpression	dest_row += dest -> raster		442643	1		+=			
ANR	442815	Identifier	dest_row		442643	0					
ANR	442816	PtrMemberAccess	dest -> raster		442643	1					
ANR	442817	Identifier	dest		442643	0					
ANR	442818	Identifier	raster		442643	1					
ANR	442819	CompoundStatement		46:12:1283:1315	442643	3					
ANR	442820	IdentifierDeclStatement	int x ;	609:12:20775:20780	442643	0	True				
ANR	442821	IdentifierDecl	x		442643	0					
ANR	442822	IdentifierDeclType	int		442643	0					
ANR	442823	Identifier	x		442643	1					
ANR	442824	IdentifierDeclStatement	const byte * src = source_row ;	610:12:20794:20822	442643	1	True				
ANR	442825	IdentifierDecl	* src = source_row		442643	0					
ANR	442826	IdentifierDeclType	const byte *		442643	0					
ANR	442827	Identifier	src		442643	1					
ANR	442828	AssignmentExpression	* src = source_row		442643	2		=			
ANR	442829	Identifier	source_row		442643	0					
ANR	442830	Identifier	source_row		442643	1					
ANR	442831	IdentifierDeclStatement	bits32 * dst = ( bits32 * ) dest_row ;	611:12:20836:20868	442643	2	True				
ANR	442832	IdentifierDecl	* dst = ( bits32 * ) dest_row		442643	0					
ANR	442833	IdentifierDeclType	bits32 *		442643	0					
ANR	442834	Identifier	dst		442643	1					
ANR	442835	AssignmentExpression	* dst = ( bits32 * ) dest_row		442643	2		=			
ANR	442836	Identifier	dst		442643	0					
ANR	442837	CastExpression	( bits32 * ) dest_row		442643	1					
ANR	442838	CastTarget	bits32 *		442643	0					
ANR	442839	Identifier	dest_row		442643	1					
ANR	442840	ForStatement	for ( x = width ; x > 0 ; -- x )		442643	3					
ANR	442841	ForInit	x = width ;	613:17:20888:20897	442643	0	True				
ANR	442842	AssignmentExpression	x = width		442643	0		=			
ANR	442843	Identifier	x		442643	0					
ANR	442844	Identifier	width		442643	1					
ANR	442845	Condition	x > 0	613:28:20899:20903	442643	1	True				
ANR	442846	RelationalExpression	x > 0		442643	0		>			
ANR	442847	Identifier	x		442643	0					
ANR	442848	PrimaryExpression	0		442643	1					
ANR	442849	UnaryExpression	-- x	613:35:20906:20908	442643	2	True				
ANR	442850	IncDec	--		442643	0					
ANR	442851	Identifier	x		442643	1					
ANR	442852	ExpressionStatement	* dst ++ = ( bits32 ) ( * src ++ ) << word_shift	614:16:20927:20966	442643	3	True				
ANR	442853	AssignmentExpression	* dst ++ = ( bits32 ) ( * src ++ ) << word_shift		442643	0		=			
ANR	442854	UnaryOperationExpression	* dst ++		442643	0					
ANR	442855	UnaryOperator	*		442643	0					
ANR	442856	PostIncDecOperationExpression	dst ++		442643	1					
ANR	442857	Identifier	dst		442643	0					
ANR	442858	IncDec	++		442643	1					
ANR	442859	ShiftExpression	( bits32 ) ( * src ++ ) << word_shift		442643	1		<<			
ANR	442860	CastExpression	( bits32 ) ( * src ++ )		442643	0					
ANR	442861	CastTarget	bits32		442643	0					
ANR	442862	UnaryOperationExpression	* src ++		442643	1					
ANR	442863	UnaryOperator	*		442643	0					
ANR	442864	PostIncDecOperationExpression	src ++		442643	1					
ANR	442865	Identifier	src		442643	0					
ANR	442866	IncDec	++		442643	1					
ANR	442867	Identifier	word_shift		442643	1					
ANR	442868	Statement	undef	616:1:20979:20983	442643	6	True				
ANR	442869	Statement	word_shift	616:7:20985:20994	442643	7	True				
ANR	442870	BreakStatement	break ;	618:8:21010:21015	442643	2	True				
ANR	442871	Label	case EXPAND_1_TO_4 :	620:4:21022:21040	442643	3	True				
ANR	442872	Identifier	EXPAND_1_TO_4		442643	0					
ANR	442873	Label	default :	621:4:21046:21053	442643	4	True				
ANR	442874	Identifier	default		442643	0					
ANR	442875	ForStatement	"for ( y = 0 ; y < height ; ++ y , source_row += source -> raster , dest_row += dest -> raster )"		442643	5					
ANR	442876	ForInit	y = 0 ;	622:13:21068:21073	442643	0	True				
ANR	442877	AssignmentExpression	y = 0		442643	0		=			
ANR	442878	Identifier	y		442643	0					
ANR	442879	PrimaryExpression	0		442643	1					
ANR	442880	Condition	y < height	622:20:21075:21084	442643	1	True				
ANR	442881	RelationalExpression	y < height		442643	0		<			
ANR	442882	Identifier	y		442643	0					
ANR	442883	Identifier	height		442643	1					
ANR	442884	Expression	"++ y , source_row += source -> raster , dest_row += dest -> raster"	623:13:21100:21158	442643	2	True				
ANR	442885	UnaryExpression	++ y		442643	0					
ANR	442886	IncDec	++		442643	0					
ANR	442887	Identifier	y		442643	1					
ANR	442888	Expression	"source_row += source -> raster , dest_row += dest -> raster"		442643	1					
ANR	442889	AssignmentExpression	source_row += source -> raster		442643	0		+=			
ANR	442890	Identifier	source_row		442643	0					
ANR	442891	PtrMemberAccess	source -> raster		442643	1					
ANR	442892	Identifier	source		442643	0					
ANR	442893	Identifier	raster		442643	1					
ANR	442894	AssignmentExpression	dest_row += dest -> raster		442643	1		+=			
ANR	442895	Identifier	dest_row		442643	0					
ANR	442896	PtrMemberAccess	dest -> raster		442643	1					
ANR	442897	Identifier	dest		442643	0					
ANR	442898	Identifier	raster		442643	1					
ANR	442899	CompoundStatement		65:12:1801:1860	442643	3					
ANR	442900	IdentifierDeclStatement	int x ;	625:12:21189:21194	442643	0	True				
ANR	442901	IdentifierDecl	x		442643	0					
ANR	442902	IdentifierDeclType	int		442643	0					
ANR	442903	Identifier	x		442643	1					
ANR	442904	IdentifierDeclStatement	const byte * sptr = source_row ;	626:12:21208:21237	442643	1	True				
ANR	442905	IdentifierDecl	* sptr = source_row		442643	0					
ANR	442906	IdentifierDeclType	const byte *		442643	0					
ANR	442907	Identifier	sptr		442643	1					
ANR	442908	AssignmentExpression	* sptr = source_row		442643	2		=			
ANR	442909	Identifier	source_row		442643	0					
ANR	442910	Identifier	source_row		442643	1					
ANR	442911	IdentifierDeclStatement	int sbit = source_bit ;	627:12:21251:21272	442643	2	True				
ANR	442912	IdentifierDecl	sbit = source_bit		442643	0					
ANR	442913	IdentifierDeclType	int		442643	0					
ANR	442914	Identifier	sbit		442643	1					
ANR	442915	AssignmentExpression	sbit = source_bit		442643	2		=			
ANR	442916	Identifier	source_bit		442643	0					
ANR	442917	Identifier	source_bit		442643	1					
ANR	442918	IdentifierDeclStatement	byte * dptr = dest_row ;	628:12:21286:21307	442643	3	True				
ANR	442919	IdentifierDecl	* dptr = dest_row		442643	0					
ANR	442920	IdentifierDeclType	byte *		442643	0					
ANR	442921	Identifier	dptr		442643	1					
ANR	442922	AssignmentExpression	* dptr = dest_row		442643	2		=			
ANR	442923	Identifier	dest_row		442643	0					
ANR	442924	Identifier	dest_row		442643	1					
ANR	442925	IdentifierDeclStatement	int dbit = dest_bit ;	629:12:21321:21340	442643	4	True				
ANR	442926	IdentifierDecl	dbit = dest_bit		442643	0					
ANR	442927	IdentifierDeclType	int		442643	0					
ANR	442928	Identifier	dbit		442643	1					
ANR	442929	AssignmentExpression	dbit = dest_bit		442643	2		=			
ANR	442930	Identifier	dest_bit		442643	0					
ANR	442931	Identifier	dest_bit		442643	1					
ANR	442932	IdentifierDeclStatement	byte dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 ) ;	630:12:21354:21413	442643	5	True				
ANR	442933	IdentifierDecl	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		442643	0					
ANR	442934	IdentifierDeclType	byte		442643	0					
ANR	442935	Identifier	dbbyte		442643	1					
ANR	442936	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		442643	2		=			
ANR	442937	Identifier	dbbyte		442643	0					
ANR	442938	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		442643	1					
ANR	442939	Condition	dbit		442643	0					
ANR	442940	Identifier	dbit		442643	0					
ANR	442941	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		442643	1					
ANR	442942	CastTarget	byte		442643	0					
ANR	442943	BitAndExpression	* dptr & ( 0xff00 >> dbit )		442643	1		&			
ANR	442944	UnaryOperationExpression	* dptr		442643	0					
ANR	442945	UnaryOperator	*		442643	0					
ANR	442946	Identifier	dptr		442643	1					
ANR	442947	ShiftExpression	0xff00 >> dbit		442643	1		>>			
ANR	442948	PrimaryExpression	0xff00		442643	0					
ANR	442949	Identifier	dbit		442643	1					
ANR	442950	PrimaryExpression	0		442643	2					
ANR	442951	ExpressionStatement	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )	632:12:21428:21482	442643	6	True				
ANR	442952	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		442643	0		=			
ANR	442953	Identifier	dbbyte		442643	0					
ANR	442954	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		442643	1					
ANR	442955	Condition	dbit		442643	0					
ANR	442956	Identifier	dbit		442643	0					
ANR	442957	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		442643	1					
ANR	442958	CastTarget	byte		442643	0					
ANR	442959	BitAndExpression	* dptr & ( 0xff00 >> dbit )		442643	1		&			
ANR	442960	UnaryOperationExpression	* dptr		442643	0					
ANR	442961	UnaryOperator	*		442643	0					
ANR	442962	Identifier	dptr		442643	1					
ANR	442963	ShiftExpression	0xff00 >> dbit		442643	1		>>			
ANR	442964	PrimaryExpression	0xff00		442643	0					
ANR	442965	Identifier	dbit		442643	1					
ANR	442966	PrimaryExpression	0		442643	2					
ANR	442967	ForStatement	for ( x = width ; x > 0 ; -- x )		442643	7					
ANR	442968	ForInit	x = width ;	633:17:21501:21510	442643	0	True				
ANR	442969	AssignmentExpression	x = width		442643	0		=			
ANR	442970	Identifier	x		442643	0					
ANR	442971	Identifier	width		442643	1					
ANR	442972	Condition	x > 0	633:28:21512:21516	442643	1	True				
ANR	442973	RelationalExpression	x > 0		442643	0		>			
ANR	442974	Identifier	x		442643	0					
ANR	442975	PrimaryExpression	0		442643	1					
ANR	442976	UnaryExpression	-- x	633:35:21519:21521	442643	2	True				
ANR	442977	IncDec	--		442643	0					
ANR	442978	Identifier	x		442643	1					
ANR	442979	CompoundStatement		70:16:2017:2037	442643	3					
ANR	442980	IdentifierDeclStatement	uint color ;	634:16:21542:21552	442643	0	True				
ANR	442981	IdentifierDecl	color		442643	0					
ANR	442982	IdentifierDeclType	uint		442643	0					
ANR	442983	Identifier	color		442643	1					
ANR	442984	IdentifierDeclStatement	gx_color_index pixel ;	635:16:21570:21590	442643	1	True				
ANR	442985	IdentifierDecl	pixel		442643	0					
ANR	442986	IdentifierDeclType	gx_color_index		442643	0					
ANR	442987	Identifier	pixel		442643	1					
ANR	442988	IfStatement	"if ( sample_load_next8 ( & color , & sptr , & sbit , source_depth ) < 0 )"		442643	2					
ANR	442989	Condition	"sample_load_next8 ( & color , & sptr , & sbit , source_depth ) < 0"	637:20:21613:21669	442643	0	True				
ANR	442990	RelationalExpression	"sample_load_next8 ( & color , & sptr , & sbit , source_depth ) < 0"		442643	0		<			
ANR	442991	CallExpression	"sample_load_next8 ( & color , & sptr , & sbit , source_depth )"		442643	0					
ANR	442992	Callee	sample_load_next8		442643	0					
ANR	442993	Identifier	sample_load_next8		442643	0					
ANR	442994	ArgumentList	& color		442643	1					
ANR	442995	Argument	& color		442643	0					
ANR	442996	UnaryOperationExpression	& color		442643	0					
ANR	442997	UnaryOperator	&		442643	0					
ANR	442998	Identifier	color		442643	1					
ANR	442999	Argument	& sptr		442643	1					
ANR	443000	UnaryOperationExpression	& sptr		442643	0					
ANR	443001	UnaryOperator	&		442643	0					
ANR	443002	Identifier	sptr		442643	1					
ANR	443003	Argument	& sbit		442643	2					
ANR	443004	UnaryOperationExpression	& sbit		442643	0					
ANR	443005	UnaryOperator	&		442643	0					
ANR	443006	Identifier	sbit		442643	1					
ANR	443007	Argument	source_depth		442643	3					
ANR	443008	Identifier	source_depth		442643	0					
ANR	443009	PrimaryExpression	0		442643	1					
ANR	443010	ExpressionStatement	return_error ( gs_error_rangecheck )	638:20:21692:21725	442643	1	True				
ANR	443011	CallExpression	return_error ( gs_error_rangecheck )		442643	0					
ANR	443012	Callee	return_error		442643	0					
ANR	443013	Identifier	return_error		442643	0					
ANR	443014	ArgumentList	gs_error_rangecheck		442643	1					
ANR	443015	Argument	gs_error_rangecheck		442643	0					
ANR	443016	Identifier	gs_error_rangecheck		442643	0					
ANR	443017	ExpressionStatement	pixel = ( gx_color_index ) color << shift	640:16:21744:21782	442643	3	True				
ANR	443018	AssignmentExpression	pixel = ( gx_color_index ) color << shift		442643	0		=			
ANR	443019	Identifier	pixel		442643	0					
ANR	443020	ShiftExpression	( gx_color_index ) color << shift		442643	1		<<			
ANR	443021	CastExpression	( gx_color_index ) color		442643	0					
ANR	443022	CastTarget	gx_color_index		442643	0					
ANR	443023	Identifier	color		442643	1					
ANR	443024	Identifier	shift		442643	1					
ANR	443025	IfStatement	if ( sizeof ( pixel ) > 4 )		442643	4					
ANR	443026	Condition	sizeof ( pixel ) > 4	641:20:21804:21820	442643	0	True				
ANR	443027	RelationalExpression	sizeof ( pixel ) > 4		442643	0		>			
ANR	443028	SizeofExpression	sizeof ( pixel )		442643	0					
ANR	443029	Sizeof	sizeof		442643	0					
ANR	443030	SizeofOperand	pixel		442643	1					
ANR	443031	PrimaryExpression	4		442643	1					
ANR	443032	CompoundStatement		76:39:2270:2270	442643	1					
ANR	443033	IfStatement	"if ( sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0 )"		442643	0					
ANR	443034	Condition	"sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"	642:24:21849:21913	442643	0	True				
ANR	443035	RelationalExpression	"sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"		442643	0		<			
ANR	443036	CallExpression	"sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte )"		442643	0					
ANR	443037	Callee	sample_store_next64		442643	0					
ANR	443038	Identifier	sample_store_next64		442643	0					
ANR	443039	ArgumentList	pixel		442643	1					
ANR	443040	Argument	pixel		442643	0					
ANR	443041	Identifier	pixel		442643	0					
ANR	443042	Argument	& dptr		442643	1					
ANR	443043	UnaryOperationExpression	& dptr		442643	0					
ANR	443044	UnaryOperator	&		442643	0					
ANR	443045	Identifier	dptr		442643	1					
ANR	443046	Argument	& dbit		442643	2					
ANR	443047	UnaryOperationExpression	& dbit		442643	0					
ANR	443048	UnaryOperator	&		442643	0					
ANR	443049	Identifier	dbit		442643	1					
ANR	443050	Argument	dest_depth		442643	3					
ANR	443051	Identifier	dest_depth		442643	0					
ANR	443052	Argument	& dbbyte		442643	4					
ANR	443053	UnaryOperationExpression	& dbbyte		442643	0					
ANR	443054	UnaryOperator	&		442643	0					
ANR	443055	Identifier	dbbyte		442643	1					
ANR	443056	PrimaryExpression	0		442643	1					
ANR	443057	ExpressionStatement	return_error ( gs_error_rangecheck )	643:24:21940:21973	442643	1	True				
ANR	443058	CallExpression	return_error ( gs_error_rangecheck )		442643	0					
ANR	443059	Callee	return_error		442643	0					
ANR	443060	Identifier	return_error		442643	0					
ANR	443061	ArgumentList	gs_error_rangecheck		442643	1					
ANR	443062	Argument	gs_error_rangecheck		442643	0					
ANR	443063	Identifier	gs_error_rangecheck		442643	0					
ANR	443064	ElseStatement	else		442643	0					
ANR	443065	CompoundStatement		80:21:2461:2461	442643	0					
ANR	443066	IfStatement	"if ( sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0 )"		442643	0					
ANR	443067	Condition	"sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"	646:24:22040:22104	442643	0	True				
ANR	443068	RelationalExpression	"sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"		442643	0		<			
ANR	443069	CallExpression	"sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte )"		442643	0					
ANR	443070	Callee	sample_store_next32		442643	0					
ANR	443071	Identifier	sample_store_next32		442643	0					
ANR	443072	ArgumentList	pixel		442643	1					
ANR	443073	Argument	pixel		442643	0					
ANR	443074	Identifier	pixel		442643	0					
ANR	443075	Argument	& dptr		442643	1					
ANR	443076	UnaryOperationExpression	& dptr		442643	0					
ANR	443077	UnaryOperator	&		442643	0					
ANR	443078	Identifier	dptr		442643	1					
ANR	443079	Argument	& dbit		442643	2					
ANR	443080	UnaryOperationExpression	& dbit		442643	0					
ANR	443081	UnaryOperator	&		442643	0					
ANR	443082	Identifier	dbit		442643	1					
ANR	443083	Argument	dest_depth		442643	3					
ANR	443084	Identifier	dest_depth		442643	0					
ANR	443085	Argument	& dbbyte		442643	4					
ANR	443086	UnaryOperationExpression	& dbbyte		442643	0					
ANR	443087	UnaryOperator	&		442643	0					
ANR	443088	Identifier	dbbyte		442643	1					
ANR	443089	PrimaryExpression	0		442643	1					
ANR	443090	ExpressionStatement	return_error ( gs_error_rangecheck )	647:24:22131:22164	442643	1	True				
ANR	443091	CallExpression	return_error ( gs_error_rangecheck )		442643	0					
ANR	443092	Callee	return_error		442643	0					
ANR	443093	Identifier	return_error		442643	0					
ANR	443094	ArgumentList	gs_error_rangecheck		442643	1					
ANR	443095	Argument	gs_error_rangecheck		442643	0					
ANR	443096	Identifier	gs_error_rangecheck		442643	0					
ANR	443097	ExpressionStatement	"sample_store_flush ( dptr , dbit , dbbyte )"	650:12:22210:22248	442643	8	True				
ANR	443098	CallExpression	"sample_store_flush ( dptr , dbit , dbbyte )"		442643	0					
ANR	443099	Callee	sample_store_flush		442643	0					
ANR	443100	Identifier	sample_store_flush		442643	0					
ANR	443101	ArgumentList	dptr		442643	1					
ANR	443102	Argument	dptr		442643	0					
ANR	443103	Identifier	dptr		442643	0					
ANR	443104	Argument	dbit		442643	1					
ANR	443105	Identifier	dbit		442643	0					
ANR	443106	Argument	dbbyte		442643	2					
ANR	443107	Identifier	dbbyte		442643	0					
ANR	443108	BreakStatement	break ;	652:8:22268:22273	442643	6	True				
ANR	443109	ReturnStatement	return 0 ;	655:4:22286:22294	442643	12	True				
ANR	443110	PrimaryExpression	0		442643	0					
ANR	443111	ReturnType	int		442643	1					
ANR	443112	Identifier	bits_expand_plane		442643	2					
ANR	443113	ParameterList	"const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height"		442643	3					
ANR	443114	Parameter	const bits_plane_t * dest	564:18:19441:19464	442643	0	True				
ANR	443115	ParameterType	const bits_plane_t *		442643	0					
ANR	443116	Identifier	dest		442643	1					
ANR	443117	Parameter	const bits_plane_t * source	565:4:19481:19506	442643	1	True				
ANR	443118	ParameterType	const bits_plane_t *		442643	0					
ANR	443119	Identifier	source		442643	1					
ANR	443120	Parameter	int shift	565:41:19518:19526	442643	2	True				
ANR	443121	ParameterType	int		442643	0					
ANR	443122	Identifier	shift		442643	1					
ANR	443123	Parameter	int width	565:52:19529:19537	442643	3	True				
ANR	443124	ParameterType	int		442643	0					
ANR	443125	Identifier	width		442643	1					
ANR	443126	Parameter	int height	565:63:19540:19549	442643	4	True				
ANR	443127	ParameterType	int		442643	0					
ANR	443128	Identifier	height		442643	1					
ANR	443129	CFGEntryNode	ENTRY		442643		True				
ANR	443130	CFGExitNode	EXIT		442643		True				
ANR	443131	Symbol	& sptr		442643						
ANR	443132	Symbol	gs_error_rangecheck		442643						
ANR	443133	Symbol	EXPAND_SLOW		442643						
ANR	443134	Symbol	& color		442643						
ANR	443135	Symbol	shift		442643						
ANR	443136	Symbol	dbit		442643						
ANR	443137	Symbol	source -> data		442643						
ANR	443138	Symbol	source		442643						
ANR	443139	Symbol	dest		442643						
ANR	443140	Symbol	sample_store_next32		442643						
ANR	443141	Symbol	& dptr		442643						
ANR	443142	Symbol	sbit		442643						
ANR	443143	Symbol	dest_depth		442643						
ANR	443144	Symbol	dest -> raster		442643						
ANR	443145	Symbol	* source		442643						
ANR	443146	Symbol	EXPAND_1_TO_4		442643						
ANR	443147	Symbol	height		442643						
ANR	443148	Symbol	& sbit		442643						
ANR	443149	Symbol	dptr		442643						
ANR	443150	Symbol	source_depth		442643						
ANR	443151	Symbol	& dbit		442643						
ANR	443152	Symbol	dest_row		442643						
ANR	443153	Symbol	dest -> depth		442643						
ANR	443154	Symbol	word_shift		442643						
ANR	443155	Symbol	source_bit		442643						
ANR	443156	Symbol	& dbbyte		442643						
ANR	443157	Symbol	source -> depth		442643						
ANR	443158	Symbol	sample_store_next64		442643						
ANR	443159	Symbol	sptr		442643						
ANR	443160	Symbol	dbbyte		442643						
ANR	443161	Symbol	* dst ++		442643						
ANR	443162	Symbol	loop_case		442643						
ANR	443163	Symbol	* src ++		442643						
ANR	443164	Symbol	source -> data . read		442643						
ANR	443165	Symbol	dest -> data		442643						
ANR	443166	Symbol	dst		442643						
ANR	443167	Symbol	color		442643						
ANR	443168	Symbol	* dest		442643						
ANR	443169	Symbol	sample_load_next8		442643						
ANR	443170	Symbol	dest -> x		442643						
ANR	443171	Symbol	* dptr		442643						
ANR	443172	Symbol	pixel		442643						
ANR	443173	Symbol	src		442643						
ANR	443174	Symbol	dest_bit		442643						
ANR	443175	Symbol	source -> raster		442643						
ANR	443176	Symbol	dest -> data . write		442643						
ANR	443177	Symbol	source_row		442643						
ANR	443178	Symbol	source -> x		442643						
ANR	443179	Symbol	EXPAND_8_TO_32		442643						
ANR	443180	Symbol	width		442643						
ANR	443181	Symbol	x		442643						
ANR	443182	Symbol	y		442643						
ANR	443183	Function	bytes_fill_rectangle	661:0:22398:22613							
ANR	443184	FunctionDef	"bytes_fill_rectangle (byte * dest , uint raster , byte value , int width_bytes , int height)"		443183	0					
ANR	443185	CompoundStatement		664:0:22512:22613	443183	0					
ANR	443186	WhileStatement	while ( height -- > 0 )		443183	0					
ANR	443187	Condition	height -- > 0	665:11:22525:22536	443183	0	True				
ANR	443188	RelationalExpression	height -- > 0		443183	0		>			
ANR	443189	PostIncDecOperationExpression	height --		443183	0					
ANR	443190	Identifier	height		443183	0					
ANR	443191	IncDec	--		443183	1					
ANR	443192	PrimaryExpression	0		443183	1					
ANR	443193	CompoundStatement		2:25:26:26	443183	1					
ANR	443194	ExpressionStatement	"memset ( dest , value , width_bytes )"	666:8:22549:22581	443183	0	True				
ANR	443195	CallExpression	"memset ( dest , value , width_bytes )"		443183	0					
ANR	443196	Callee	memset		443183	0					
ANR	443197	Identifier	memset		443183	0					
ANR	443198	ArgumentList	dest		443183	1					
ANR	443199	Argument	dest		443183	0					
ANR	443200	Identifier	dest		443183	0					
ANR	443201	Argument	value		443183	1					
ANR	443202	Identifier	value		443183	0					
ANR	443203	Argument	width_bytes		443183	2					
ANR	443204	Identifier	width_bytes		443183	0					
ANR	443205	ExpressionStatement	dest += raster	667:8:22591:22605	443183	1	True				
ANR	443206	AssignmentExpression	dest += raster		443183	0		+=			
ANR	443207	Identifier	dest		443183	0					
ANR	443208	Identifier	raster		443183	1					
ANR	443209	ReturnType	void		443183	1					
ANR	443210	Identifier	bytes_fill_rectangle		443183	2					
ANR	443211	ParameterList	"byte * dest , uint raster , byte value , int width_bytes , int height"		443183	3					
ANR	443212	Parameter	byte * dest	662:21:22424:22434	443183	0	True				
ANR	443213	ParameterType	byte *		443183	0					
ANR	443214	Identifier	dest		443183	1					
ANR	443215	Parameter	uint raster	662:34:22437:22447	443183	1	True				
ANR	443216	ParameterType	uint		443183	0					
ANR	443217	Identifier	raster		443183	1					
ANR	443218	Parameter	byte value	663:21:22471:22480	443183	2	True				
ANR	443219	ParameterType	byte		443183	0					
ANR	443220	Identifier	value		443183	1					
ANR	443221	Parameter	int width_bytes	663:33:22483:22497	443183	3	True				
ANR	443222	ParameterType	int		443183	0					
ANR	443223	Identifier	width_bytes		443183	1					
ANR	443224	Parameter	int height	663:50:22500:22509	443183	4	True				
ANR	443225	ParameterType	int		443183	0					
ANR	443226	Identifier	height		443183	1					
ANR	443227	CFGEntryNode	ENTRY		443183		True				
ANR	443228	CFGExitNode	EXIT		443183		True				
ANR	443229	Symbol	width_bytes		443183						
ANR	443230	Symbol	raster		443183						
ANR	443231	Symbol	dest		443183						
ANR	443232	Symbol	value		443183						
ANR	443233	Symbol	height		443183						
ANR	443234	Function	bytes_copy_rectangle	672:0:22649:22914							
ANR	443235	FunctionDef	"bytes_copy_rectangle (byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height)"		443234	0					
ANR	443236	CompoundStatement		675:0:22783:22914	443234	0					
ANR	443237	WhileStatement	while ( height -- > 0 )		443234	0					
ANR	443238	Condition	height -- > 0	676:11:22796:22807	443234	0	True				
ANR	443239	RelationalExpression	height -- > 0		443234	0		>			
ANR	443240	PostIncDecOperationExpression	height --		443234	0					
ANR	443241	Identifier	height		443234	0					
ANR	443242	IncDec	--		443234	1					
ANR	443243	PrimaryExpression	0		443234	1					
ANR	443244	CompoundStatement		2:25:26:26	443234	1					
ANR	443245	ExpressionStatement	"memcpy ( dest , src , width_bytes )"	677:8:22820:22850	443234	0	True				
ANR	443246	CallExpression	"memcpy ( dest , src , width_bytes )"		443234	0					
ANR	443247	Callee	memcpy		443234	0					
ANR	443248	Identifier	memcpy		443234	0					
ANR	443249	ArgumentList	dest		443234	1					
ANR	443250	Argument	dest		443234	0					
ANR	443251	Identifier	dest		443234	0					
ANR	443252	Argument	src		443234	1					
ANR	443253	Identifier	src		443234	0					
ANR	443254	Argument	width_bytes		443234	2					
ANR	443255	Identifier	width_bytes		443234	0					
ANR	443256	ExpressionStatement	src += src_raster	678:8:22860:22877	443234	1	True				
ANR	443257	AssignmentExpression	src += src_raster		443234	0		+=			
ANR	443258	Identifier	src		443234	0					
ANR	443259	Identifier	src_raster		443234	1					
ANR	443260	ExpressionStatement	dest += dest_raster	679:8:22887:22906	443234	2	True				
ANR	443261	AssignmentExpression	dest += dest_raster		443234	0		+=			
ANR	443262	Identifier	dest		443234	0					
ANR	443263	Identifier	dest_raster		443234	1					
ANR	443264	ReturnType	void		443234	1					
ANR	443265	Identifier	bytes_copy_rectangle		443234	2					
ANR	443266	ParameterList	"byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height"		443234	3					
ANR	443267	Parameter	byte * dest	673:21:22675:22685	443234	0	True				
ANR	443268	ParameterType	byte *		443234	0					
ANR	443269	Identifier	dest		443234	1					
ANR	443270	Parameter	uint dest_raster	673:34:22688:22703	443234	1	True				
ANR	443271	ParameterType	uint		443234	0					
ANR	443272	Identifier	dest_raster		443234	1					
ANR	443273	Parameter	const byte * src	674:13:22719:22734	443234	2	True				
ANR	443274	ParameterType	const byte *		443234	0					
ANR	443275	Identifier	src		443234	1					
ANR	443276	Parameter	uint src_raster	674:31:22737:22751	443234	3	True				
ANR	443277	ParameterType	uint		443234	0					
ANR	443278	Identifier	src_raster		443234	1					
ANR	443279	Parameter	int width_bytes	674:48:22754:22768	443234	4	True				
ANR	443280	ParameterType	int		443234	0					
ANR	443281	Identifier	width_bytes		443234	1					
ANR	443282	Parameter	int height	674:65:22771:22780	443234	5	True				
ANR	443283	ParameterType	int		443234	0					
ANR	443284	Identifier	height		443234	1					
ANR	443285	CFGEntryNode	ENTRY		443234		True				
ANR	443286	CFGExitNode	EXIT		443234		True				
ANR	443287	Symbol	dest_raster		443234						
ANR	443288	Symbol	src		443234						
ANR	443289	Symbol	width_bytes		443234						
ANR	443290	Symbol	src_raster		443234						
ANR	443291	Symbol	dest		443234						
ANR	443292	Symbol	height		443234						
ANR	443293	Function	bytes_rectangle_is_const	683:0:22917:23334							
ANR	443294	FunctionDef	"bytes_rectangle_is_const (const byte * src , uint src_raster , int width_bytes , int height)"		443293	0					
ANR	443295	CompoundStatement		686:0:23035:23334	443293	0					
ANR	443296	IdentifierDeclStatement	int i ;	687:4:23041:23046	443293	0	True				
ANR	443297	IdentifierDecl	i		443293	0					
ANR	443298	IdentifierDeclType	int		443293	0					
ANR	443299	Identifier	i		443293	1					
ANR	443300	IdentifierDeclStatement	char c ;	688:4:23052:23058	443293	1	True				
ANR	443301	IdentifierDecl	c		443293	0					
ANR	443302	IdentifierDeclType	char		443293	0					
ANR	443303	Identifier	c		443293	1					
ANR	443304	IfStatement	if ( width_bytes == 0 || height == 0 )		443293	2					
ANR	443305	Condition	width_bytes == 0 || height == 0	690:8:23069:23099	443293	0	True				
ANR	443306	OrExpression	width_bytes == 0 || height == 0		443293	0		||			
ANR	443307	EqualityExpression	width_bytes == 0		443293	0		==			
ANR	443308	Identifier	width_bytes		443293	0					
ANR	443309	PrimaryExpression	0		443293	1					
ANR	443310	EqualityExpression	height == 0		443293	1		==			
ANR	443311	Identifier	height		443293	0					
ANR	443312	PrimaryExpression	0		443293	1					
ANR	443313	ReturnStatement	return - 1 ;	691:8:23110:23119	443293	1	True				
ANR	443314	UnaryOperationExpression	- 1		443293	0					
ANR	443315	UnaryOperator	-		443293	0					
ANR	443316	PrimaryExpression	1		443293	1					
ANR	443317	ExpressionStatement	c = * src	692:4:23125:23133	443293	3	True				
ANR	443318	AssignmentExpression	c = * src		443293	0		=			
ANR	443319	Identifier	c		443293	0					
ANR	443320	UnaryOperationExpression	* src		443293	1					
ANR	443321	UnaryOperator	*		443293	0					
ANR	443322	Identifier	src		443293	1					
ANR	443323	WhileStatement	while ( height -- > 0 )		443293	4					
ANR	443324	Condition	height -- > 0	693:11:23146:23157	443293	0	True				
ANR	443325	RelationalExpression	height -- > 0		443293	0		>			
ANR	443326	PostIncDecOperationExpression	height --		443293	0					
ANR	443327	Identifier	height		443293	0					
ANR	443328	IncDec	--		443293	1					
ANR	443329	PrimaryExpression	0		443293	1					
ANR	443330	CompoundStatement		9:8:134:153	443293	1					
ANR	443331	IdentifierDeclStatement	const byte * s = src ;	694:8:23170:23189	443293	0	True				
ANR	443332	IdentifierDecl	* s = src		443293	0					
ANR	443333	IdentifierDeclType	const byte *		443293	0					
ANR	443334	Identifier	s		443293	1					
ANR	443335	AssignmentExpression	* s = src		443293	2		=			
ANR	443336	Identifier	src		443293	0					
ANR	443337	Identifier	src		443293	1					
ANR	443338	ExpressionStatement	src += src_raster	695:8:23199:23216	443293	1	True				
ANR	443339	AssignmentExpression	src += src_raster		443293	0		+=			
ANR	443340	Identifier	src		443293	0					
ANR	443341	Identifier	src_raster		443293	1					
ANR	443342	ForStatement	for ( i = width_bytes ; i > 0 ; i -- )		443293	2					
ANR	443343	ForInit	i = width_bytes ;	696:13:23231:23246	443293	0	True				
ANR	443344	AssignmentExpression	i = width_bytes		443293	0		=			
ANR	443345	Identifier	i		443293	0					
ANR	443346	Identifier	width_bytes		443293	1					
ANR	443347	Condition	i > 0	696:30:23248:23252	443293	1	True				
ANR	443348	RelationalExpression	i > 0		443293	0		>			
ANR	443349	Identifier	i		443293	0					
ANR	443350	PrimaryExpression	0		443293	1					
ANR	443351	PostIncDecOperationExpression	i --	696:37:23255:23257	443293	2	True				
ANR	443352	Identifier	i		443293	0					
ANR	443353	IncDec	--		443293	1					
ANR	443354	IfStatement	if ( * s ++ != c )		443293	3					
ANR	443355	Condition	* s ++ != c	697:16:23276:23284	443293	0	True				
ANR	443356	EqualityExpression	* s ++ != c		443293	0		!=			
ANR	443357	UnaryOperationExpression	* s ++		443293	0					
ANR	443358	UnaryOperator	*		443293	0					
ANR	443359	PostIncDecOperationExpression	s ++		443293	1					
ANR	443360	Identifier	s		443293	0					
ANR	443361	IncDec	++		443293	1					
ANR	443362	Identifier	c		443293	1					
ANR	443363	ReturnStatement	return - 1 ;	698:16:23303:23312	443293	1	True				
ANR	443364	UnaryOperationExpression	- 1		443293	0					
ANR	443365	UnaryOperator	-		443293	0					
ANR	443366	PrimaryExpression	1		443293	1					
ANR	443367	ReturnStatement	return c ;	700:4:23324:23332	443293	5	True				
ANR	443368	Identifier	c		443293	0					
ANR	443369	ReturnType	int		443293	1					
ANR	443370	Identifier	bytes_rectangle_is_const		443293	2					
ANR	443371	ParameterList	"const byte * src , uint src_raster , int width_bytes , int height"		443293	3					
ANR	443372	Parameter	const byte * src	684:25:22946:22961	443293	0	True				
ANR	443373	ParameterType	const byte *		443293	0					
ANR	443374	Identifier	src		443293	1					
ANR	443375	Parameter	uint src_raster	684:43:22964:22978	443293	1	True				
ANR	443376	ParameterType	uint		443293	0					
ANR	443377	Identifier	src_raster		443293	1					
ANR	443378	Parameter	int width_bytes	685:25:23006:23020	443293	2	True				
ANR	443379	ParameterType	int		443293	0					
ANR	443380	Identifier	width_bytes		443293	1					
ANR	443381	Parameter	int height	685:42:23023:23032	443293	3	True				
ANR	443382	ParameterType	int		443293	0					
ANR	443383	Identifier	height		443293	1					
ANR	443384	CFGEntryNode	ENTRY		443293		True				
ANR	443385	CFGExitNode	EXIT		443293		True				
ANR	443386	Symbol	* s ++		443293						
ANR	443387	Symbol	c		443293						
ANR	443388	Symbol	s		443293						
ANR	443389	Symbol	src		443293						
ANR	443390	Symbol	width_bytes		443293						
ANR	443391	Symbol	src_raster		443293						
ANR	443392	Symbol	i		443293						
ANR	443393	Symbol	* src		443293						
ANR	443394	Symbol	height		443293						
ANR	443395	Function	bytes_copy_rectangle_zero_padding	704:0:23396:24041							
ANR	443396	FunctionDef	"bytes_copy_rectangle_zero_padding (byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height)"		443395	0					
ANR	443397	CompoundStatement		707:0:23543:24041	443395	0					
ANR	443398	IdentifierDeclStatement	int padlen = dest_raster ;	708:4:23549:23573	443395	0	True				
ANR	443399	IdentifierDecl	padlen = dest_raster		443395	0					
ANR	443400	IdentifierDeclType	int		443395	0					
ANR	443401	Identifier	padlen		443395	1					
ANR	443402	AssignmentExpression	padlen = dest_raster		443395	2		=			
ANR	443403	Identifier	dest_raster		443395	0					
ANR	443404	Identifier	dest_raster		443395	1					
ANR	443405	IfStatement	if ( padlen < 0 )		443395	1					
ANR	443406	Condition	padlen < 0	709:8:23583:23592	443395	0	True				
ANR	443407	RelationalExpression	padlen < 0		443395	0		<			
ANR	443408	Identifier	padlen		443395	0					
ANR	443409	PrimaryExpression	0		443395	1					
ANR	443410	ExpressionStatement	padlen = - padlen	710:8:23603:23619	443395	1	True				
ANR	443411	AssignmentExpression	padlen = - padlen		443395	0		=			
ANR	443412	Identifier	padlen		443395	0					
ANR	443413	UnaryOperationExpression	- padlen		443395	1					
ANR	443414	UnaryOperator	-		443395	0					
ANR	443415	Identifier	padlen		443395	1					
ANR	443416	ExpressionStatement	padlen -= width_bytes	711:4:23625:23646	443395	2	True				
ANR	443417	AssignmentExpression	padlen -= width_bytes		443395	0		-=			
ANR	443418	Identifier	padlen		443395	0					
ANR	443419	Identifier	width_bytes		443395	1					
ANR	443420	IfStatement	if ( padlen == 0 )		443395	3					
ANR	443421	Condition	padlen == 0	712:8:23656:23666	443395	0	True				
ANR	443422	EqualityExpression	padlen == 0		443395	0		==			
ANR	443423	Identifier	padlen		443395	0					
ANR	443424	PrimaryExpression	0		443395	1					
ANR	443425	CompoundStatement		7:4:129:129	443395	1					
ANR	443426	WhileStatement	while ( height -- > 0 )		443395	0					
ANR	443427	Condition	height -- > 0	714:15:23690:23701	443395	0	True				
ANR	443428	RelationalExpression	height -- > 0		443395	0		>			
ANR	443429	PostIncDecOperationExpression	height --		443395	0					
ANR	443430	Identifier	height		443395	0					
ANR	443431	IncDec	--		443395	1					
ANR	443432	PrimaryExpression	0		443395	1					
ANR	443433	CompoundStatement		8:29:160:160	443395	1					
ANR	443434	ExpressionStatement	"memcpy ( dest , src , width_bytes )"	715:12:23718:23748	443395	0	True				
ANR	443435	CallExpression	"memcpy ( dest , src , width_bytes )"		443395	0					
ANR	443436	Callee	memcpy		443395	0					
ANR	443437	Identifier	memcpy		443395	0					
ANR	443438	ArgumentList	dest		443395	1					
ANR	443439	Argument	dest		443395	0					
ANR	443440	Identifier	dest		443395	0					
ANR	443441	Argument	src		443395	1					
ANR	443442	Identifier	src		443395	0					
ANR	443443	Argument	width_bytes		443395	2					
ANR	443444	Identifier	width_bytes		443395	0					
ANR	443445	ExpressionStatement	src += src_raster	716:12:23762:23779	443395	1	True				
ANR	443446	AssignmentExpression	src += src_raster		443395	0		+=			
ANR	443447	Identifier	src		443395	0					
ANR	443448	Identifier	src_raster		443395	1					
ANR	443449	ExpressionStatement	dest += dest_raster	717:12:23793:23812	443395	2	True				
ANR	443450	AssignmentExpression	dest += dest_raster		443395	0		+=			
ANR	443451	Identifier	dest		443395	0					
ANR	443452	Identifier	dest_raster		443395	1					
ANR	443453	ElseStatement	else		443395	0					
ANR	443454	CompoundStatement		13:11:291:291	443395	0					
ANR	443455	WhileStatement	while ( height -- > 0 )		443395	0					
ANR	443456	Condition	height -- > 0	720:15:23852:23863	443395	0	True				
ANR	443457	RelationalExpression	height -- > 0		443395	0		>			
ANR	443458	PostIncDecOperationExpression	height --		443395	0					
ANR	443459	Identifier	height		443395	0					
ANR	443460	IncDec	--		443395	1					
ANR	443461	PrimaryExpression	0		443395	1					
ANR	443462	CompoundStatement		14:29:322:322	443395	1					
ANR	443463	ExpressionStatement	"memcpy ( dest , src , width_bytes )"	721:12:23880:23910	443395	0	True				
ANR	443464	CallExpression	"memcpy ( dest , src , width_bytes )"		443395	0					
ANR	443465	Callee	memcpy		443395	0					
ANR	443466	Identifier	memcpy		443395	0					
ANR	443467	ArgumentList	dest		443395	1					
ANR	443468	Argument	dest		443395	0					
ANR	443469	Identifier	dest		443395	0					
ANR	443470	Argument	src		443395	1					
ANR	443471	Identifier	src		443395	0					
ANR	443472	Argument	width_bytes		443395	2					
ANR	443473	Identifier	width_bytes		443395	0					
ANR	443474	ExpressionStatement	"memset ( dest + width_bytes , 0 , padlen )"	722:12:23924:23959	443395	1	True				
ANR	443475	CallExpression	"memset ( dest + width_bytes , 0 , padlen )"		443395	0					
ANR	443476	Callee	memset		443395	0					
ANR	443477	Identifier	memset		443395	0					
ANR	443478	ArgumentList	dest + width_bytes		443395	1					
ANR	443479	Argument	dest + width_bytes		443395	0					
ANR	443480	AdditiveExpression	dest + width_bytes		443395	0		+			
ANR	443481	Identifier	dest		443395	0					
ANR	443482	Identifier	width_bytes		443395	1					
ANR	443483	Argument	0		443395	1					
ANR	443484	PrimaryExpression	0		443395	0					
ANR	443485	Argument	padlen		443395	2					
ANR	443486	Identifier	padlen		443395	0					
ANR	443487	ExpressionStatement	src += src_raster	723:12:23973:23990	443395	2	True				
ANR	443488	AssignmentExpression	src += src_raster		443395	0		+=			
ANR	443489	Identifier	src		443395	0					
ANR	443490	Identifier	src_raster		443395	1					
ANR	443491	ExpressionStatement	dest += dest_raster	724:12:24004:24023	443395	3	True				
ANR	443492	AssignmentExpression	dest += dest_raster		443395	0		+=			
ANR	443493	Identifier	dest		443395	0					
ANR	443494	Identifier	dest_raster		443395	1					
ANR	443495	ReturnType	void		443395	1					
ANR	443496	Identifier	bytes_copy_rectangle_zero_padding		443395	2					
ANR	443497	ParameterList	"byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height"		443395	3					
ANR	443498	Parameter	byte * dest	705:34:23435:23445	443395	0	True				
ANR	443499	ParameterType	byte *		443395	0					
ANR	443500	Identifier	dest		443395	1					
ANR	443501	Parameter	uint dest_raster	705:47:23448:23463	443395	1	True				
ANR	443502	ParameterType	uint		443395	0					
ANR	443503	Identifier	dest_raster		443395	1					
ANR	443504	Parameter	const byte * src	706:13:23479:23494	443395	2	True				
ANR	443505	ParameterType	const byte *		443395	0					
ANR	443506	Identifier	src		443395	1					
ANR	443507	Parameter	uint src_raster	706:31:23497:23511	443395	3	True				
ANR	443508	ParameterType	uint		443395	0					
ANR	443509	Identifier	src_raster		443395	1					
ANR	443510	Parameter	int width_bytes	706:48:23514:23528	443395	4	True				
ANR	443511	ParameterType	int		443395	0					
ANR	443512	Identifier	width_bytes		443395	1					
ANR	443513	Parameter	int height	706:65:23531:23540	443395	5	True				
ANR	443514	ParameterType	int		443395	0					
ANR	443515	Identifier	height		443395	1					
ANR	443516	CFGEntryNode	ENTRY		443395		True				
ANR	443517	CFGExitNode	EXIT		443395		True				
ANR	443518	Symbol	dest_raster		443395						
ANR	443519	Symbol	src		443395						
ANR	443520	Symbol	width_bytes		443395						
ANR	443521	Symbol	padlen		443395						
ANR	443522	Symbol	src_raster		443395						
ANR	443523	Symbol	dest		443395						
ANR	443524	Symbol	height		443395						
