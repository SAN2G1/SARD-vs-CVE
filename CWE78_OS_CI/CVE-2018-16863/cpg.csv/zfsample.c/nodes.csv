command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11132031	File	data/converged/CVE-2018-16863_ghostpdl/zfsample.c								
ANR	11132032	ClassDef	gs_sampled_data_enum_s	55:0:1446:1602							
ANR	11132033	DeclStmt									
ANR	11132034	Decl							int	int [ MAX_NUM_INPUTS ]	indexes
ANR	11132035	DeclStmt									
ANR	11132036	Decl							int	int	o_stack_depth
ANR	11132037	DeclStmt									
ANR	11132038	Decl							gs_function_t	gs_function_t *	pfn
ANR	11132039	DeclStmt									
ANR	11132040	Decl							struct gs_sampled_data_enum_s	struct gs_sampled_data_enum_s	gs_sampled_data_enum
ANR	11132041	DeclStmt									
ANR	11132042	Decl							int	"int ( const ref * pdict , gs_function_Sd_params_t * params , gs_memory_t * mem )"	cube_build_func0
ANR	11132043	DeclStmt									
ANR	11132044	Decl							int	"int ( i_ctx_t * i_ctx_p , gs_function_t * pfn , const ref * pproc , int ( * finish_proc ) ( i_ctx_t * ) , gs_memory_t * mem )"	sampled_data_setup
ANR	11132045	DeclStmt									
ANR	11132046	Decl							int	int ( i_ctx_t * i_ctx_p )	sampled_data_sample
ANR	11132047	DeclStmt									
ANR	11132048	Decl							int	int ( i_ctx_t * i_ctx_p )	sampled_data_continue
ANR	11132049	DeclStmt									
ANR	11132050	Decl							int	int ( i_ctx_t * i_ctx_p )	sampled_data_finish
ANR	11132051	DeclStmt									
ANR	11132052	Decl							gs_sampled_data_enum	"gs_sampled_data_enum * ( gs_memory_t * mem , client_name_t cname )"	gs_sampled_data_enum_alloc
ANR	11132053	Function	zbuildsampledfunction	94:0:2886:4115							
ANR	11132054	FunctionDef	zbuildsampledfunction (i_ctx_t * i_ctx_p)		11132053	0					
ANR	11132055	CompoundStatement		96:0:2937:4115	11132053	0					
ANR	11132056	IdentifierDeclStatement	os_ptr op = osp ;	97:4:2943:2958	11132053	0	True				
ANR	11132057	IdentifierDecl	op = osp		11132053	0					
ANR	11132058	IdentifierDeclType	os_ptr		11132053	0					
ANR	11132059	Identifier	op		11132053	1					
ANR	11132060	AssignmentExpression	op = osp		11132053	2		=			
ANR	11132061	Identifier	osp		11132053	0					
ANR	11132062	Identifier	osp		11132053	1					
ANR	11132063	IdentifierDeclStatement	const ref * pdict = op ;	98:4:2964:2986	11132053	1	True				
ANR	11132064	IdentifierDecl	* pdict = op		11132053	0					
ANR	11132065	IdentifierDeclType	const ref *		11132053	0					
ANR	11132066	Identifier	pdict		11132053	1					
ANR	11132067	AssignmentExpression	* pdict = op		11132053	2		=			
ANR	11132068	Identifier	op		11132053	0					
ANR	11132069	Identifier	op		11132053	1					
ANR	11132070	IdentifierDeclStatement	ref * pfunc ;	99:4:2992:3003	11132053	2	True				
ANR	11132071	IdentifierDecl	* pfunc		11132053	0					
ANR	11132072	IdentifierDeclType	ref *		11132053	0					
ANR	11132073	Identifier	pfunc		11132053	1					
ANR	11132074	IdentifierDeclStatement	int code = 0 ;	100:4:3009:3021	11132053	3	True				
ANR	11132075	IdentifierDecl	code = 0		11132053	0					
ANR	11132076	IdentifierDeclType	int		11132053	0					
ANR	11132077	Identifier	code		11132053	1					
ANR	11132078	AssignmentExpression	code = 0		11132053	2		=			
ANR	11132079	Identifier	code		11132053	0					
ANR	11132080	PrimaryExpression	0		11132053	1					
ANR	11132081	IdentifierDeclStatement	gs_function_t * pfn ;	101:4:3027:3045	11132053	4	True				
ANR	11132082	IdentifierDecl	* pfn		11132053	0					
ANR	11132083	IdentifierDeclType	gs_function_t *		11132053	0					
ANR	11132084	Identifier	pfn		11132053	1					
ANR	11132085	IdentifierDeclStatement	gs_function_Sd_params_t params = { 0 } ;	102:4:3051:3087	11132053	5	True				
ANR	11132086	IdentifierDecl	params = { 0 }		11132053	0					
ANR	11132087	IdentifierDeclType	gs_function_Sd_params_t		11132053	0					
ANR	11132088	Identifier	params		11132053	1					
ANR	11132089	AssignmentExpression	params = { 0 }		11132053	2		=			
ANR	11132090	Identifier	params		11132053	0					
ANR	11132091	InitializerList	0		11132053	1					
ANR	11132092	PrimaryExpression	0		11132053	0					
ANR	11132093	ExpressionStatement	"check_type ( * pdict , t_dictionary )"	104:4:3094:3126	11132053	6	True				
ANR	11132094	CallExpression	"check_type ( * pdict , t_dictionary )"		11132053	0					
ANR	11132095	Callee	check_type		11132053	0					
ANR	11132096	Identifier	check_type		11132053	0					
ANR	11132097	ArgumentList	* pdict		11132053	1					
ANR	11132098	Argument	* pdict		11132053	0					
ANR	11132099	UnaryOperationExpression	* pdict		11132053	0					
ANR	11132100	UnaryOperator	*		11132053	0					
ANR	11132101	Identifier	pdict		11132053	1					
ANR	11132102	Argument	t_dictionary		11132053	1					
ANR	11132103	Identifier	t_dictionary		11132053	0					
ANR	11132104	IfStatement	"if ( dict_find_string ( pdict , ""Function"" , & pfunc ) <= 0 )"		11132053	7					
ANR	11132105	Condition	"dict_find_string ( pdict , ""Function"" , & pfunc ) <= 0"	108:8:3189:3236	11132053	0	True				
ANR	11132106	RelationalExpression	"dict_find_string ( pdict , ""Function"" , & pfunc ) <= 0"		11132053	0		<=			
ANR	11132107	CallExpression	"dict_find_string ( pdict , ""Function"" , & pfunc )"		11132053	0					
ANR	11132108	Callee	dict_find_string		11132053	0					
ANR	11132109	Identifier	dict_find_string		11132053	0					
ANR	11132110	ArgumentList	pdict		11132053	1					
ANR	11132111	Argument	pdict		11132053	0					
ANR	11132112	Identifier	pdict		11132053	0					
ANR	11132113	Argument	"""Function"""		11132053	1					
ANR	11132114	PrimaryExpression	"""Function"""		11132053	0					
ANR	11132115	Argument	& pfunc		11132053	2					
ANR	11132116	UnaryOperationExpression	& pfunc		11132053	0					
ANR	11132117	UnaryOperator	&		11132053	0					
ANR	11132118	Identifier	pfunc		11132053	1					
ANR	11132119	PrimaryExpression	0		11132053	1					
ANR	11132120	ExpressionStatement	return_error ( gs_error_rangecheck )	109:8:3247:3280	11132053	1	True				
ANR	11132121	CallExpression	return_error ( gs_error_rangecheck )		11132053	0					
ANR	11132122	Callee	return_error		11132053	0					
ANR	11132123	Identifier	return_error		11132053	0					
ANR	11132124	ArgumentList	gs_error_rangecheck		11132053	1					
ANR	11132125	Argument	gs_error_rangecheck		11132053	0					
ANR	11132126	Identifier	gs_error_rangecheck		11132053	0					
ANR	11132127	ExpressionStatement	check_proc ( * pfunc )	110:4:3286:3304	11132053	8	True				
ANR	11132128	CallExpression	check_proc ( * pfunc )		11132053	0					
ANR	11132129	Callee	check_proc		11132053	0					
ANR	11132130	Identifier	check_proc		11132053	0					
ANR	11132131	ArgumentList	* pfunc		11132053	1					
ANR	11132132	Argument	* pfunc		11132053	0					
ANR	11132133	UnaryOperationExpression	* pfunc		11132053	0					
ANR	11132134	UnaryOperator	*		11132053	0					
ANR	11132135	Identifier	pfunc		11132053	1					
ANR	11132136	ExpressionStatement	"code = cube_build_func0 ( pdict , & params , imemory )"	114:4:3379:3427	11132053	9	True				
ANR	11132137	AssignmentExpression	"code = cube_build_func0 ( pdict , & params , imemory )"		11132053	0		=			
ANR	11132138	Identifier	code		11132053	0					
ANR	11132139	CallExpression	"cube_build_func0 ( pdict , & params , imemory )"		11132053	1					
ANR	11132140	Callee	cube_build_func0		11132053	0					
ANR	11132141	Identifier	cube_build_func0		11132053	0					
ANR	11132142	ArgumentList	pdict		11132053	1					
ANR	11132143	Argument	pdict		11132053	0					
ANR	11132144	Identifier	pdict		11132053	0					
ANR	11132145	Argument	& params		11132053	1					
ANR	11132146	UnaryOperationExpression	& params		11132053	0					
ANR	11132147	UnaryOperator	&		11132053	0					
ANR	11132148	Identifier	params		11132053	1					
ANR	11132149	Argument	imemory		11132053	2					
ANR	11132150	Identifier	imemory		11132053	0					
ANR	11132151	IfStatement	if ( code < 0 )		11132053	10					
ANR	11132152	Condition	code < 0	115:8:3437:3444	11132053	0	True				
ANR	11132153	RelationalExpression	code < 0		11132053	0		<			
ANR	11132154	Identifier	code		11132053	0					
ANR	11132155	PrimaryExpression	0		11132053	1					
ANR	11132156	ReturnStatement	return code ;	116:8:3455:3466	11132053	1	True				
ANR	11132157	Identifier	code		11132053	0					
ANR	11132158	ExpressionStatement	"code = gs_function_Sd_init ( & pfn , & params , imemory )"	125:4:3882:3932	11132053	11	True				
ANR	11132159	AssignmentExpression	"code = gs_function_Sd_init ( & pfn , & params , imemory )"		11132053	0		=			
ANR	11132160	Identifier	code		11132053	0					
ANR	11132161	CallExpression	"gs_function_Sd_init ( & pfn , & params , imemory )"		11132053	1					
ANR	11132162	Callee	gs_function_Sd_init		11132053	0					
ANR	11132163	Identifier	gs_function_Sd_init		11132053	0					
ANR	11132164	ArgumentList	& pfn		11132053	1					
ANR	11132165	Argument	& pfn		11132053	0					
ANR	11132166	UnaryOperationExpression	& pfn		11132053	0					
ANR	11132167	UnaryOperator	&		11132053	0					
ANR	11132168	Identifier	pfn		11132053	1					
ANR	11132169	Argument	& params		11132053	1					
ANR	11132170	UnaryOperationExpression	& params		11132053	0					
ANR	11132171	UnaryOperator	&		11132053	0					
ANR	11132172	Identifier	params		11132053	1					
ANR	11132173	Argument	imemory		11132053	2					
ANR	11132174	Identifier	imemory		11132053	0					
ANR	11132175	IfStatement	if ( code < 0 )		11132053	12					
ANR	11132176	Condition	code < 0	126:8:3942:3949	11132053	0	True				
ANR	11132177	RelationalExpression	code < 0		11132053	0		<			
ANR	11132178	Identifier	code		11132053	0					
ANR	11132179	PrimaryExpression	0		11132053	1					
ANR	11132180	ReturnStatement	return code ;	127:8:3960:3971	11132053	1	True				
ANR	11132181	Identifier	code		11132053	0					
ANR	11132182	ReturnStatement	"return sampled_data_setup ( i_ctx_p , pfn , pfunc , sampled_data_finish , imemory ) ;"	131:4:4037:4113	11132053	13	True				
ANR	11132183	CallExpression	"sampled_data_setup ( i_ctx_p , pfn , pfunc , sampled_data_finish , imemory )"		11132053	0					
ANR	11132184	Callee	sampled_data_setup		11132053	0					
ANR	11132185	Identifier	sampled_data_setup		11132053	0					
ANR	11132186	ArgumentList	i_ctx_p		11132053	1					
ANR	11132187	Argument	i_ctx_p		11132053	0					
ANR	11132188	Identifier	i_ctx_p		11132053	0					
ANR	11132189	Argument	pfn		11132053	1					
ANR	11132190	Identifier	pfn		11132053	0					
ANR	11132191	Argument	pfunc		11132053	2					
ANR	11132192	Identifier	pfunc		11132053	0					
ANR	11132193	Argument	sampled_data_finish		11132053	3					
ANR	11132194	Identifier	sampled_data_finish		11132053	0					
ANR	11132195	Argument	imemory		11132053	4					
ANR	11132196	Identifier	imemory		11132053	0					
ANR	11132197	ReturnType	static int		11132053	1					
ANR	11132198	Identifier	zbuildsampledfunction		11132053	2					
ANR	11132199	ParameterList	i_ctx_t * i_ctx_p		11132053	3					
ANR	11132200	Parameter	i_ctx_t * i_ctx_p	95:22:2919:2934	11132053	0	True				
ANR	11132201	ParameterType	i_ctx_t *		11132053	0					
ANR	11132202	Identifier	i_ctx_p		11132053	1					
ANR	11132203	CFGEntryNode	ENTRY		11132053		True				
ANR	11132204	CFGExitNode	EXIT		11132053		True				
ANR	11132205	Symbol	op		11132053						
ANR	11132206	Symbol	code		11132053						
ANR	11132207	Symbol	t_dictionary		11132053						
ANR	11132208	Symbol	dict_find_string		11132053						
ANR	11132209	Symbol	gs_error_rangecheck		11132053						
ANR	11132210	Symbol	gs_function_Sd_init		11132053						
ANR	11132211	Symbol	* pfunc		11132053						
ANR	11132212	Symbol	sampled_data_setup		11132053						
ANR	11132213	Symbol	* pdict		11132053						
ANR	11132214	Symbol	params		11132053						
ANR	11132215	Symbol	osp		11132053						
ANR	11132216	Symbol	pfunc		11132053						
ANR	11132217	Symbol	cube_build_func0		11132053						
ANR	11132218	Symbol	i_ctx_p		11132053						
ANR	11132219	Symbol	& pfunc		11132053						
ANR	11132220	Symbol	pfn		11132053						
ANR	11132221	Symbol	& pfn		11132053						
ANR	11132222	Symbol	imemory		11132053						
ANR	11132223	Symbol	sampled_data_finish		11132053						
ANR	11132224	Symbol	pdict		11132053						
ANR	11132225	Symbol	& params		11132053						
ANR	11132226	Function	valid_cube_size	142:0:4390:4725							
ANR	11132227	FunctionDef	"valid_cube_size (int num_inputs , int num_outputs , int sample_size , const int Size [ ])"		11132226	0					
ANR	11132228	CompoundStatement		144:0:4486:4725	11132226	0					
ANR	11132229	IdentifierDeclStatement	"int i , total_size = num_outputs * sample_size ;"	145:4:4492:4537	11132226	0	True				
ANR	11132230	IdentifierDecl	i		11132226	0					
ANR	11132231	IdentifierDeclType	int		11132226	0					
ANR	11132232	Identifier	i		11132226	1					
ANR	11132233	IdentifierDecl	total_size = num_outputs * sample_size		11132226	1					
ANR	11132234	IdentifierDeclType	int		11132226	0					
ANR	11132235	Identifier	total_size		11132226	1					
ANR	11132236	AssignmentExpression	total_size = num_outputs * sample_size		11132226	2		=			
ANR	11132237	Identifier	total_size		11132226	0					
ANR	11132238	MultiplicativeExpression	num_outputs * sample_size		11132226	1		*			
ANR	11132239	Identifier	num_outputs		11132226	0					
ANR	11132240	Identifier	sample_size		11132226	1					
ANR	11132241	ForStatement	for ( i = 0 ; i < num_inputs ; i ++ )		11132226	1					
ANR	11132242	ForInit	i = 0 ;	147:9:4549:4554	11132226	0	True				
ANR	11132243	AssignmentExpression	i = 0		11132226	0		=			
ANR	11132244	Identifier	i		11132226	0					
ANR	11132245	PrimaryExpression	0		11132226	1					
ANR	11132246	Condition	i < num_inputs	147:16:4556:4569	11132226	1	True				
ANR	11132247	RelationalExpression	i < num_inputs		11132226	0		<			
ANR	11132248	Identifier	i		11132226	0					
ANR	11132249	Identifier	num_inputs		11132226	1					
ANR	11132250	PostIncDecOperationExpression	i ++	147:32:4572:4574	11132226	2	True				
ANR	11132251	Identifier	i		11132226	0					
ANR	11132252	IncDec	++		11132226	1					
ANR	11132253	CompoundStatement		4:37:90:90	11132226	3					
ANR	11132254	IfStatement	if ( Size [ i ] <= 0 || Size [ i ] > MAX_DATA_SIZE / total_size )		11132226	0					
ANR	11132255	Condition	Size [ i ] <= 0 || Size [ i ] > MAX_DATA_SIZE / total_size	148:12:4591:4642	11132226	0	True				
ANR	11132256	OrExpression	Size [ i ] <= 0 || Size [ i ] > MAX_DATA_SIZE / total_size		11132226	0		||			
ANR	11132257	RelationalExpression	Size [ i ] <= 0		11132226	0		<=			
ANR	11132258	ArrayIndexing	Size [ i ]		11132226	0					
ANR	11132259	Identifier	Size		11132226	0					
ANR	11132260	Identifier	i		11132226	1					
ANR	11132261	PrimaryExpression	0		11132226	1					
ANR	11132262	RelationalExpression	Size [ i ] > MAX_DATA_SIZE / total_size		11132226	1		>			
ANR	11132263	ArrayIndexing	Size [ i ]		11132226	0					
ANR	11132264	Identifier	Size		11132226	0					
ANR	11132265	Identifier	i		11132226	1					
ANR	11132266	MultiplicativeExpression	MAX_DATA_SIZE / total_size		11132226	1		/			
ANR	11132267	Identifier	MAX_DATA_SIZE		11132226	0					
ANR	11132268	Identifier	total_size		11132226	1					
ANR	11132269	ReturnStatement	return false ;	149:12:4657:4669	11132226	1	True				
ANR	11132270	Identifier	false		11132226	0					
ANR	11132271	ExpressionStatement	total_size *= Size [ i ]	150:8:4679:4700	11132226	1	True				
ANR	11132272	AssignmentExpression	total_size *= Size [ i ]		11132226	0		*=			
ANR	11132273	Identifier	total_size		11132226	0					
ANR	11132274	ArrayIndexing	Size [ i ]		11132226	1					
ANR	11132275	Identifier	Size		11132226	0					
ANR	11132276	Identifier	i		11132226	1					
ANR	11132277	ReturnStatement	return true ;	152:4:4712:4723	11132226	2	True				
ANR	11132278	Identifier	true		11132226	0					
ANR	11132279	ReturnType	static bool		11132226	1					
ANR	11132280	Identifier	valid_cube_size		11132226	2					
ANR	11132281	ParameterList	"int num_inputs , int num_outputs , int sample_size , const int Size [ ]"		11132226	3					
ANR	11132282	Parameter	int num_inputs	143:16:4418:4431	11132226	0	True				
ANR	11132283	ParameterType	int		11132226	0					
ANR	11132284	Identifier	num_inputs		11132226	1					
ANR	11132285	Parameter	int num_outputs	143:32:4434:4448	11132226	1	True				
ANR	11132286	ParameterType	int		11132226	0					
ANR	11132287	Identifier	num_outputs		11132226	1					
ANR	11132288	Parameter	int sample_size	143:49:4451:4465	11132226	2	True				
ANR	11132289	ParameterType	int		11132226	0					
ANR	11132290	Identifier	sample_size		11132226	1					
ANR	11132291	Parameter	const int Size [ ]	143:66:4468:4483	11132226	3	True				
ANR	11132292	ParameterType	const int [ ]		11132226	0					
ANR	11132293	Identifier	Size		11132226	1					
ANR	11132294	CFGEntryNode	ENTRY		11132226		True				
ANR	11132295	CFGExitNode	EXIT		11132226		True				
ANR	11132296	Symbol	* Size		11132226						
ANR	11132297	Symbol	num_outputs		11132226						
ANR	11132298	Symbol	* i		11132226						
ANR	11132299	Symbol	sample_size		11132226						
ANR	11132300	Symbol	Size		11132226						
ANR	11132301	Symbol	num_inputs		11132226						
ANR	11132302	Symbol	total_size		11132226						
ANR	11132303	Symbol	false		11132226						
ANR	11132304	Symbol	true		11132226						
ANR	11132305	Symbol	i		11132226						
ANR	11132306	Symbol	MAX_DATA_SIZE		11132226						
ANR	11132307	Function	determine_sampled_data_size	169:0:5561:6595							
ANR	11132308	FunctionDef	"determine_sampled_data_size (int num_inputs , int num_outputs , int sample_size , int Size [ ])"		11132307	0					
ANR	11132309	CompoundStatement		172:0:5694:6595	11132307	0					
ANR	11132310	Statement	static	173:4:5700:5705	11132307	0	True				
ANR	11132311	IdentifierDeclStatement	"const int size_list [ ] = { 512 , 50 , 20 , 10 , 7 , 5 , 4 , 3 } ;"	173:11:5707:5760	11132307	1	True				
ANR	11132312	IdentifierDecl	"size_list [ ] = { 512 , 50 , 20 , 10 , 7 , 5 , 4 , 3 }"		11132307	0					
ANR	11132313	IdentifierDeclType	const int [ ]		11132307	0					
ANR	11132314	Identifier	size_list		11132307	1					
ANR	11132315	AssignmentExpression	"size_list [ ] = { 512 , 50 , 20 , 10 , 7 , 5 , 4 , 3 }"		11132307	2		=			
ANR	11132316	Identifier	size_list		11132307	0					
ANR	11132317	InitializerList	512		11132307	1					
ANR	11132318	PrimaryExpression	512		11132307	0					
ANR	11132319	PrimaryExpression	50		11132307	1					
ANR	11132320	PrimaryExpression	20		11132307	2					
ANR	11132321	PrimaryExpression	10		11132307	3					
ANR	11132322	PrimaryExpression	7		11132307	4					
ANR	11132323	PrimaryExpression	5		11132307	5					
ANR	11132324	PrimaryExpression	4		11132307	6					
ANR	11132325	PrimaryExpression	3		11132307	7					
ANR	11132326	IdentifierDeclStatement	"int i , size ;"	174:4:5766:5777	11132307	2	True				
ANR	11132327	IdentifierDecl	i		11132307	0					
ANR	11132328	IdentifierDeclType	int		11132307	0					
ANR	11132329	Identifier	i		11132307	1					
ANR	11132330	IdentifierDecl	size		11132307	1					
ANR	11132331	IdentifierDeclType	int		11132307	0					
ANR	11132332	Identifier	size		11132307	1					
ANR	11132333	IfStatement	if ( num_inputs > 0 && num_inputs <= 8 )		11132307	3					
ANR	11132334	Condition	num_inputs > 0 && num_inputs <= 8	177:8:5836:5868	11132307	0	True				
ANR	11132335	AndExpression	num_inputs > 0 && num_inputs <= 8		11132307	0		&&			
ANR	11132336	RelationalExpression	num_inputs > 0		11132307	0		>			
ANR	11132337	Identifier	num_inputs		11132307	0					
ANR	11132338	PrimaryExpression	0		11132307	1					
ANR	11132339	RelationalExpression	num_inputs <= 8		11132307	1		<=			
ANR	11132340	Identifier	num_inputs		11132307	0					
ANR	11132341	PrimaryExpression	8		11132307	1					
ANR	11132342	ExpressionStatement	size = size_list [ num_inputs - 1 ]	178:8:5879:5911	11132307	1	True				
ANR	11132343	AssignmentExpression	size = size_list [ num_inputs - 1 ]		11132307	0		=			
ANR	11132344	Identifier	size		11132307	0					
ANR	11132345	ArrayIndexing	size_list [ num_inputs - 1 ]		11132307	1					
ANR	11132346	Identifier	size_list		11132307	0					
ANR	11132347	AdditiveExpression	num_inputs - 1		11132307	1		-			
ANR	11132348	Identifier	num_inputs		11132307	0					
ANR	11132349	PrimaryExpression	1		11132307	1					
ANR	11132350	ElseStatement	else		11132307	0					
ANR	11132351	ExpressionStatement	size = 2	180:8:5930:5938	11132307	0	True				
ANR	11132352	AssignmentExpression	size = 2		11132307	0		=			
ANR	11132353	Identifier	size		11132307	0					
ANR	11132354	PrimaryExpression	2		11132307	1					
ANR	11132355	WhileStatement	while ( true )		11132307	4					
ANR	11132356	Condition	true	185:11:6086:6089	11132307	0	True				
ANR	11132357	Identifier	true		11132307	0					
ANR	11132358	CompoundStatement		14:17:397:397	11132307	1					
ANR	11132359	ForStatement	for ( i = 0 ; i < num_inputs ; i ++ )		11132307	0					
ANR	11132360	ForInit	i = 0 ;	187:13:6149:6154	11132307	0	True				
ANR	11132361	AssignmentExpression	i = 0		11132307	0		=			
ANR	11132362	Identifier	i		11132307	0					
ANR	11132363	PrimaryExpression	0		11132307	1					
ANR	11132364	Condition	i < num_inputs	187:20:6156:6169	11132307	1	True				
ANR	11132365	RelationalExpression	i < num_inputs		11132307	0		<			
ANR	11132366	Identifier	i		11132307	0					
ANR	11132367	Identifier	num_inputs		11132307	1					
ANR	11132368	PostIncDecOperationExpression	i ++	187:36:6172:6174	11132307	2	True				
ANR	11132369	Identifier	i		11132307	0					
ANR	11132370	IncDec	++		11132307	1					
ANR	11132371	ExpressionStatement	Size [ i ] = size	188:12:6189:6203	11132307	3	True				
ANR	11132372	AssignmentExpression	Size [ i ] = size		11132307	0		=			
ANR	11132373	ArrayIndexing	Size [ i ]		11132307	0					
ANR	11132374	Identifier	Size		11132307	0					
ANR	11132375	Identifier	i		11132307	1					
ANR	11132376	Identifier	size		11132307	1					
ANR	11132377	IfStatement	if ( size > 2 )		11132307	1					
ANR	11132378	Condition	size > 2	193:12:6377:6384	11132307	0	True				
ANR	11132379	RelationalExpression	size > 2		11132307	0		>			
ANR	11132380	Identifier	size		11132307	0					
ANR	11132381	PrimaryExpression	2		11132307	1					
ANR	11132382	CompoundStatement		22:22:692:692	11132307	1					
ANR	11132383	IfStatement	"if ( valid_cube_size ( num_inputs , num_outputs , sample_size , Size ) )"		11132307	0					
ANR	11132384	Condition	"valid_cube_size ( num_inputs , num_outputs , sample_size , Size )"	194:16:6405:6463	11132307	0	True				
ANR	11132385	CallExpression	"valid_cube_size ( num_inputs , num_outputs , sample_size , Size )"		11132307	0					
ANR	11132386	Callee	valid_cube_size		11132307	0					
ANR	11132387	Identifier	valid_cube_size		11132307	0					
ANR	11132388	ArgumentList	num_inputs		11132307	1					
ANR	11132389	Argument	num_inputs		11132307	0					
ANR	11132390	Identifier	num_inputs		11132307	0					
ANR	11132391	Argument	num_outputs		11132307	1					
ANR	11132392	Identifier	num_outputs		11132307	0					
ANR	11132393	Argument	sample_size		11132307	2					
ANR	11132394	Identifier	sample_size		11132307	0					
ANR	11132395	Argument	Size		11132307	3					
ANR	11132396	Identifier	Size		11132307	0					
ANR	11132397	ReturnStatement	return 0 ;	195:16:6482:6490	11132307	1	True				
ANR	11132398	PrimaryExpression	0		11132307	0					
ANR	11132399	ExpressionStatement	size --	196:12:6532:6538	11132307	1	True				
ANR	11132400	PostIncDecOperationExpression	size --		11132307	0					
ANR	11132401	Identifier	size		11132307	0					
ANR	11132402	IncDec	--		11132307	1					
ANR	11132403	ElseStatement	else		11132307	0					
ANR	11132404	CompoundStatement		26:15:860:860	11132307	0					
ANR	11132405	ReturnStatement	return 0 ;	198:12:6569:6577	11132307	0	True				
ANR	11132406	PrimaryExpression	0		11132307	0					
ANR	11132407	ReturnType	static int		11132307	1					
ANR	11132408	Identifier	determine_sampled_data_size		11132307	2					
ANR	11132409	ParameterList	"int num_inputs , int num_outputs , int sample_size , int Size [ ]"		11132307	3					
ANR	11132410	Parameter	int num_inputs	170:28:5600:5613	11132307	0	True				
ANR	11132411	ParameterType	int		11132307	0					
ANR	11132412	Identifier	num_inputs		11132307	1					
ANR	11132413	Parameter	int num_outputs	170:44:5616:5630	11132307	1	True				
ANR	11132414	ParameterType	int		11132307	0					
ANR	11132415	Identifier	num_outputs		11132307	1					
ANR	11132416	Parameter	int sample_size	171:32:5665:5679	11132307	2	True				
ANR	11132417	ParameterType	int		11132307	0					
ANR	11132418	Identifier	sample_size		11132307	1					
ANR	11132419	Parameter	int Size [ ]	171:49:5682:5691	11132307	3	True				
ANR	11132420	ParameterType	int [ ]		11132307	0					
ANR	11132421	Identifier	Size		11132307	1					
ANR	11132422	CFGEntryNode	ENTRY		11132307		True				
ANR	11132423	CFGExitNode	EXIT		11132307		True				
ANR	11132424	Symbol	* Size		11132307						
ANR	11132425	Symbol	num_outputs		11132307						
ANR	11132426	Symbol	size_list		11132307						
ANR	11132427	Symbol	Size		11132307						
ANR	11132428	Symbol	* num_inputs		11132307						
ANR	11132429	Symbol	i		11132307						
ANR	11132430	Symbol	* size_list		11132307						
ANR	11132431	Symbol	* i		11132307						
ANR	11132432	Symbol	sample_size		11132307						
ANR	11132433	Symbol	size		11132307						
ANR	11132434	Symbol	num_inputs		11132307						
ANR	11132435	Symbol	true		11132307						
ANR	11132436	Symbol	valid_cube_size		11132307						
ANR	11132437	Function	gs_sampled_data_enum_alloc	207:0:6752:6971							
ANR	11132438	FunctionDef	"gs_sampled_data_enum_alloc (gs_memory_t * mem , client_name_t cname)"		11132437	0					
ANR	11132439	CompoundStatement		209:0:6849:6971	11132437	0					
ANR	11132440	ReturnStatement	"return gs_alloc_struct ( mem , gs_sampled_data_enum , & st_gs_sampled_data_enum , cname ) ;"	210:4:6855:6969	11132437	0	True				
ANR	11132441	CallExpression	"gs_alloc_struct ( mem , gs_sampled_data_enum , & st_gs_sampled_data_enum , cname )"		11132437	0					
ANR	11132442	Callee	gs_alloc_struct		11132437	0					
ANR	11132443	Identifier	gs_alloc_struct		11132437	0					
ANR	11132444	ArgumentList	mem		11132437	1					
ANR	11132445	Argument	mem		11132437	0					
ANR	11132446	Identifier	mem		11132437	0					
ANR	11132447	Argument	gs_sampled_data_enum		11132437	1					
ANR	11132448	Identifier	gs_sampled_data_enum		11132437	0					
ANR	11132449	Argument	& st_gs_sampled_data_enum		11132437	2					
ANR	11132450	UnaryOperationExpression	& st_gs_sampled_data_enum		11132437	0					
ANR	11132451	UnaryOperator	&		11132437	0					
ANR	11132452	Identifier	st_gs_sampled_data_enum		11132437	1					
ANR	11132453	Argument	cname		11132437	3					
ANR	11132454	Identifier	cname		11132437	0					
ANR	11132455	ReturnType	static gs_sampled_data_enum *		11132437	1					
ANR	11132456	Identifier	gs_sampled_data_enum_alloc		11132437	2					
ANR	11132457	ParameterList	"gs_memory_t * mem , client_name_t cname"		11132437	3					
ANR	11132458	Parameter	gs_memory_t * mem	208:27:6809:6825	11132437	0	True				
ANR	11132459	ParameterType	gs_memory_t *		11132437	0					
ANR	11132460	Identifier	mem		11132437	1					
ANR	11132461	Parameter	client_name_t cname	208:46:6828:6846	11132437	1	True				
ANR	11132462	ParameterType	client_name_t		11132437	0					
ANR	11132463	Identifier	cname		11132437	1					
ANR	11132464	CFGEntryNode	ENTRY		11132437		True				
ANR	11132465	CFGExitNode	EXIT		11132437		True				
ANR	11132466	Symbol	mem		11132437						
ANR	11132467	Symbol	& st_gs_sampled_data_enum		11132437						
ANR	11132468	Symbol	gs_alloc_struct		11132437						
ANR	11132469	Symbol	cname		11132437						
ANR	11132470	Symbol	gs_sampled_data_enum		11132437						
ANR	11132471	Function	cube_ptr_from_index	219:0:7138:7490							
ANR	11132472	FunctionDef	"cube_ptr_from_index (gs_function_Sd_params_t * params , int indexes [ ])"		11132471	0					
ANR	11132473	CompoundStatement		221:0:7221:7490	11132471	0					
ANR	11132474	IdentifierDeclStatement	"int i , sum = indexes [ params -> m - 1 ] ;"	222:4:7227:7262	11132471	0	True				
ANR	11132475	IdentifierDecl	i		11132471	0					
ANR	11132476	IdentifierDeclType	int		11132471	0					
ANR	11132477	Identifier	i		11132471	1					
ANR	11132478	IdentifierDecl	sum = indexes [ params -> m - 1 ]		11132471	1					
ANR	11132479	IdentifierDeclType	int		11132471	0					
ANR	11132480	Identifier	sum		11132471	1					
ANR	11132481	AssignmentExpression	sum = indexes [ params -> m - 1 ]		11132471	2		=			
ANR	11132482	Identifier	sum		11132471	0					
ANR	11132483	ArrayIndexing	indexes [ params -> m - 1 ]		11132471	1					
ANR	11132484	Identifier	indexes		11132471	0					
ANR	11132485	AdditiveExpression	params -> m - 1		11132471	1		-			
ANR	11132486	PtrMemberAccess	params -> m		11132471	0					
ANR	11132487	Identifier	params		11132471	0					
ANR	11132488	Identifier	m		11132471	1					
ANR	11132489	PrimaryExpression	1		11132471	1					
ANR	11132490	ForStatement	for ( i = params -> m - 2 ; i >= 0 ; i -- )		11132471	1					
ANR	11132491	ForInit	i = params -> m - 2 ;	224:9:7274:7291	11132471	0	True				
ANR	11132492	AssignmentExpression	i = params -> m - 2		11132471	0		=			
ANR	11132493	Identifier	i		11132471	0					
ANR	11132494	AdditiveExpression	params -> m - 2		11132471	1		-			
ANR	11132495	PtrMemberAccess	params -> m		11132471	0					
ANR	11132496	Identifier	params		11132471	0					
ANR	11132497	Identifier	m		11132471	1					
ANR	11132498	PrimaryExpression	2		11132471	1					
ANR	11132499	Condition	i >= 0	224:28:7293:7298	11132471	1	True				
ANR	11132500	RelationalExpression	i >= 0		11132471	0		>=			
ANR	11132501	Identifier	i		11132471	0					
ANR	11132502	PrimaryExpression	0		11132471	1					
ANR	11132503	PostIncDecOperationExpression	i --	224:36:7301:7303	11132471	2	True				
ANR	11132504	Identifier	i		11132471	0					
ANR	11132505	IncDec	--		11132471	1					
ANR	11132506	CompoundStatement		4:41:84:84	11132471	3					
ANR	11132507	ExpressionStatement	sum *= params -> Size [ i ]	225:8:7316:7338	11132471	0	True				
ANR	11132508	AssignmentExpression	sum *= params -> Size [ i ]		11132471	0		*=			
ANR	11132509	Identifier	sum		11132471	0					
ANR	11132510	ArrayIndexing	params -> Size [ i ]		11132471	1					
ANR	11132511	PtrMemberAccess	params -> Size		11132471	0					
ANR	11132512	Identifier	params		11132471	0					
ANR	11132513	Identifier	Size		11132471	1					
ANR	11132514	Identifier	i		11132471	1					
ANR	11132515	ExpressionStatement	sum += indexes [ i ]	226:8:7348:7365	11132471	1	True				
ANR	11132516	AssignmentExpression	sum += indexes [ i ]		11132471	0		+=			
ANR	11132517	Identifier	sum		11132471	0					
ANR	11132518	ArrayIndexing	indexes [ i ]		11132471	1					
ANR	11132519	Identifier	indexes		11132471	0					
ANR	11132520	Identifier	i		11132471	1					
ANR	11132521	ReturnStatement	return ( byte * ) ( params -> DataSource . data . str . data ) + sum * params -> n * bits2bytes ( params -> BitsPerSample ) ;	228:4:7377:7488	11132471	2	True				
ANR	11132522	AdditiveExpression	( byte * ) ( params -> DataSource . data . str . data ) + sum * params -> n * bits2bytes ( params -> BitsPerSample )		11132471	0		+			
ANR	11132523	CastExpression	( byte * ) ( params -> DataSource . data . str . data )		11132471	0					
ANR	11132524	CastTarget	byte *		11132471	0					
ANR	11132525	MemberAccess	params -> DataSource . data . str . data		11132471	1					
ANR	11132526	MemberAccess	params -> DataSource . data . str		11132471	0					
ANR	11132527	MemberAccess	params -> DataSource . data		11132471	0					
ANR	11132528	PtrMemberAccess	params -> DataSource		11132471	0					
ANR	11132529	Identifier	params		11132471	0					
ANR	11132530	Identifier	DataSource		11132471	1					
ANR	11132531	Identifier	data		11132471	1					
ANR	11132532	Identifier	str		11132471	1					
ANR	11132533	Identifier	data		11132471	1					
ANR	11132534	MultiplicativeExpression	sum * params -> n * bits2bytes ( params -> BitsPerSample )		11132471	1		*			
ANR	11132535	Identifier	sum		11132471	0					
ANR	11132536	MultiplicativeExpression	params -> n * bits2bytes ( params -> BitsPerSample )		11132471	1		*			
ANR	11132537	PtrMemberAccess	params -> n		11132471	0					
ANR	11132538	Identifier	params		11132471	0					
ANR	11132539	Identifier	n		11132471	1					
ANR	11132540	CallExpression	bits2bytes ( params -> BitsPerSample )		11132471	1					
ANR	11132541	Callee	bits2bytes		11132471	0					
ANR	11132542	Identifier	bits2bytes		11132471	0					
ANR	11132543	ArgumentList	params -> BitsPerSample		11132471	1					
ANR	11132544	Argument	params -> BitsPerSample		11132471	0					
ANR	11132545	PtrMemberAccess	params -> BitsPerSample		11132471	0					
ANR	11132546	Identifier	params		11132471	0					
ANR	11132547	Identifier	BitsPerSample		11132471	1					
ANR	11132548	ReturnType	static byte *		11132471	1					
ANR	11132549	Identifier	cube_ptr_from_index		11132471	2					
ANR	11132550	ParameterList	"gs_function_Sd_params_t * params , int indexes [ ]"		11132471	3					
ANR	11132551	Parameter	gs_function_Sd_params_t * params	220:20:7172:7203	11132471	0	True				
ANR	11132552	ParameterType	gs_function_Sd_params_t *		11132471	0					
ANR	11132553	Identifier	params		11132471	1					
ANR	11132554	Parameter	int indexes [ ]	220:54:7206:7218	11132471	1	True				
ANR	11132555	ParameterType	int [ ]		11132471	0					
ANR	11132556	Identifier	indexes		11132471	1					
ANR	11132557	CFGEntryNode	ENTRY		11132471		True				
ANR	11132558	CFGExitNode	EXIT		11132471		True				
ANR	11132559	Symbol	params -> BitsPerSample		11132471						
ANR	11132560	Symbol	params -> DataSource . data		11132471						
ANR	11132561	Symbol	* params -> Size		11132471						
ANR	11132562	Symbol	params -> DataSource . data . str		11132471						
ANR	11132563	Symbol	i		11132471						
ANR	11132564	Symbol	sum		11132471						
ANR	11132565	Symbol	params		11132471						
ANR	11132566	Symbol	* * params		11132471						
ANR	11132567	Symbol	bits2bytes		11132471						
ANR	11132568	Symbol	params -> m		11132471						
ANR	11132569	Symbol	* i		11132471						
ANR	11132570	Symbol	params -> n		11132471						
ANR	11132571	Symbol	indexes		11132471						
ANR	11132572	Symbol	params -> DataSource . data . str . data		11132471						
ANR	11132573	Symbol	* params -> m		11132471						
ANR	11132574	Symbol	* indexes		11132471						
ANR	11132575	Symbol	params -> Size		11132471						
ANR	11132576	Symbol	params -> DataSource		11132471						
ANR	11132577	Symbol	* params		11132471						
ANR	11132578	Function	increment_cube_indexes	237:0:7708:8582							
ANR	11132579	FunctionDef	"increment_cube_indexes (gs_function_Sd_params_t * params , int indexes [ ])"		11132578	0					
ANR	11132580	CompoundStatement		239:0:7792:8582	11132578	0					
ANR	11132581	IdentifierDeclStatement	int i = 0 ;	240:4:7798:7807	11132578	0	True				
ANR	11132582	IdentifierDecl	i = 0		11132578	0					
ANR	11132583	IdentifierDeclType	int		11132578	0					
ANR	11132584	Identifier	i		11132578	1					
ANR	11132585	AssignmentExpression	i = 0		11132578	2		=			
ANR	11132586	Identifier	i		11132578	0					
ANR	11132587	PrimaryExpression	0		11132578	1					
ANR	11132588	WhileStatement	while ( true )		11132578	1					
ANR	11132589	Condition	true	242:11:7821:7824	11132578	0	True				
ANR	11132590	Identifier	true		11132578	0					
ANR	11132591	CompoundStatement		4:17:34:34	11132578	1					
ANR	11132592	ExpressionStatement	indexes [ i ] ++	247:8:7979:7991	11132578	0	True				
ANR	11132593	PostIncDecOperationExpression	indexes [ i ] ++		11132578	0					
ANR	11132594	ArrayIndexing	indexes [ i ]		11132578	0					
ANR	11132595	Identifier	indexes		11132578	0					
ANR	11132596	Identifier	i		11132578	1					
ANR	11132597	IncDec	++		11132578	1					
ANR	11132598	IfStatement	if ( indexes [ i ] < params -> Size [ i ] )		11132578	1					
ANR	11132599	Condition	indexes [ i ] < params -> Size [ i ]	248:12:8005:8032	11132578	0	True				
ANR	11132600	RelationalExpression	indexes [ i ] < params -> Size [ i ]		11132578	0		<			
ANR	11132601	ArrayIndexing	indexes [ i ]		11132578	0					
ANR	11132602	Identifier	indexes		11132578	0					
ANR	11132603	Identifier	i		11132578	1					
ANR	11132604	ArrayIndexing	params -> Size [ i ]		11132578	1					
ANR	11132605	PtrMemberAccess	params -> Size		11132578	0					
ANR	11132606	Identifier	params		11132578	0					
ANR	11132607	Identifier	Size		11132578	1					
ANR	11132608	Identifier	i		11132578	1					
ANR	11132609	ReturnStatement	return false ;	253:12:8209:8221	11132578	1	True				
ANR	11132610	Identifier	false		11132578	0					
ANR	11132611	ExpressionStatement	indexes [ i ] = 0	258:8:8370:8384	11132578	2	True				
ANR	11132612	AssignmentExpression	indexes [ i ] = 0		11132578	0		=			
ANR	11132613	ArrayIndexing	indexes [ i ]		11132578	0					
ANR	11132614	Identifier	indexes		11132578	0					
ANR	11132615	Identifier	i		11132578	1					
ANR	11132616	PrimaryExpression	0		11132578	1					
ANR	11132617	ExpressionStatement	i ++	259:8:8394:8397	11132578	3	True				
ANR	11132618	PostIncDecOperationExpression	i ++		11132578	0					
ANR	11132619	Identifier	i		11132578	0					
ANR	11132620	IncDec	++		11132578	1					
ANR	11132621	IfStatement	if ( i == params -> m )		11132578	4					
ANR	11132622	Condition	i == params -> m	260:12:8411:8424	11132578	0	True				
ANR	11132623	EqualityExpression	i == params -> m		11132578	0		==			
ANR	11132624	Identifier	i		11132578	0					
ANR	11132625	PtrMemberAccess	params -> m		11132578	1					
ANR	11132626	Identifier	params		11132578	0					
ANR	11132627	Identifier	m		11132578	1					
ANR	11132628	ReturnStatement	return true ;	265:12:8563:8574	11132578	1	True				
ANR	11132629	Identifier	true		11132578	0					
ANR	11132630	ReturnType	static bool		11132578	1					
ANR	11132631	Identifier	increment_cube_indexes		11132578	2					
ANR	11132632	ParameterList	"gs_function_Sd_params_t * params , int indexes [ ]"		11132578	3					
ANR	11132633	Parameter	gs_function_Sd_params_t * params	238:23:7743:7774	11132578	0	True				
ANR	11132634	ParameterType	gs_function_Sd_params_t *		11132578	0					
ANR	11132635	Identifier	params		11132578	1					
ANR	11132636	Parameter	int indexes [ ]	238:57:7777:7789	11132578	1	True				
ANR	11132637	ParameterType	int [ ]		11132578	0					
ANR	11132638	Identifier	indexes		11132578	1					
ANR	11132639	CFGEntryNode	ENTRY		11132578		True				
ANR	11132640	CFGExitNode	EXIT		11132578		True				
ANR	11132641	Symbol	params -> m		11132578						
ANR	11132642	Symbol	* i		11132578						
ANR	11132643	Symbol	indexes		11132578						
ANR	11132644	Symbol	true		11132578						
ANR	11132645	Symbol	* params -> Size		11132578						
ANR	11132646	Symbol	false		11132578						
ANR	11132647	Symbol	i		11132578						
ANR	11132648	Symbol	params		11132578						
ANR	11132649	Symbol	* * params		11132578						
ANR	11132650	Symbol	* indexes		11132578						
ANR	11132651	Symbol	params -> Size		11132578						
ANR	11132652	Symbol	* params		11132578						
ANR	11132653	Function	cube_build_func0	275:0:8859:11982							
ANR	11132654	FunctionDef	"cube_build_func0 (const ref * pdict , gs_function_Sd_params_t * params , gs_memory_t * mem)"		11132653	0					
ANR	11132655	CompoundStatement		278:0:9014:11982	11132653	0					
ANR	11132656	IdentifierDeclStatement	byte * bytes = 0 ;	279:4:9020:9036	11132653	0	True				
ANR	11132657	IdentifierDecl	* bytes = 0		11132653	0					
ANR	11132658	IdentifierDeclType	byte *		11132653	0					
ANR	11132659	Identifier	bytes		11132653	1					
ANR	11132660	AssignmentExpression	* bytes = 0		11132653	2		=			
ANR	11132661	Identifier	bytes		11132653	0					
ANR	11132662	PrimaryExpression	0		11132653	1					
ANR	11132663	IdentifierDeclStatement	"int code , i ;"	280:4:9042:9053	11132653	1	True				
ANR	11132664	IdentifierDecl	code		11132653	0					
ANR	11132665	IdentifierDeclType	int		11132653	0					
ANR	11132666	Identifier	code		11132653	1					
ANR	11132667	IdentifierDecl	i		11132653	1					
ANR	11132668	IdentifierDeclType	int		11132653	0					
ANR	11132669	Identifier	i		11132653	1					
ANR	11132670	IdentifierDeclStatement	int total_size ;	281:4:9059:9073	11132653	2	True				
ANR	11132671	IdentifierDecl	total_size		11132653	0					
ANR	11132672	IdentifierDeclType	int		11132653	0					
ANR	11132673	Identifier	total_size		11132653	1					
ANR	11132674	IfStatement	"if ( ( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0 || ( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 ) )"		11132653	3					
ANR	11132675	Condition	"( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0 || ( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"	283:8:9084:9604	11132653	0	True				
ANR	11132676	OrExpression	"( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0 || ( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"		11132653	0		||			
ANR	11132677	RelationalExpression	"( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0"		11132653	0		<			
ANR	11132678	AssignmentExpression	"code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order )"		11132653	0		=			
ANR	11132679	Identifier	code		11132653	0					
ANR	11132680	CallExpression	"dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order )"		11132653	1					
ANR	11132681	Callee	dict_int_param		11132653	0					
ANR	11132682	Identifier	dict_int_param		11132653	0					
ANR	11132683	ArgumentList	pdict		11132653	1					
ANR	11132684	Argument	pdict		11132653	0					
ANR	11132685	Identifier	pdict		11132653	0					
ANR	11132686	Argument	"""Order"""		11132653	1					
ANR	11132687	PrimaryExpression	"""Order"""		11132653	0					
ANR	11132688	Argument	1		11132653	2					
ANR	11132689	PrimaryExpression	1		11132653	0					
ANR	11132690	Argument	3		11132653	3					
ANR	11132691	PrimaryExpression	3		11132653	0					
ANR	11132692	Argument	1		11132653	4					
ANR	11132693	PrimaryExpression	1		11132653	0					
ANR	11132694	Argument	& params -> Order		11132653	5					
ANR	11132695	UnaryOperationExpression	& params -> Order		11132653	0					
ANR	11132696	UnaryOperator	&		11132653	0					
ANR	11132697	PtrMemberAccess	params -> Order		11132653	1					
ANR	11132698	Identifier	params		11132653	0					
ANR	11132699	Identifier	Order		11132653	1					
ANR	11132700	PrimaryExpression	0		11132653	1					
ANR	11132701	OrExpression	"( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"		11132653	1		||			
ANR	11132702	RelationalExpression	"( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0"		11132653	0		<			
ANR	11132703	AssignmentExpression	"code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample )"		11132653	0		=			
ANR	11132704	Identifier	code		11132653	0					
ANR	11132705	CallExpression	"dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample )"		11132653	1					
ANR	11132706	Callee	dict_int_param		11132653	0					
ANR	11132707	Identifier	dict_int_param		11132653	0					
ANR	11132708	ArgumentList	pdict		11132653	1					
ANR	11132709	Argument	pdict		11132653	0					
ANR	11132710	Identifier	pdict		11132653	0					
ANR	11132711	Argument	"""BitsPerSample"""		11132653	1					
ANR	11132712	PrimaryExpression	"""BitsPerSample"""		11132653	0					
ANR	11132713	Argument	1		11132653	2					
ANR	11132714	PrimaryExpression	1		11132653	0					
ANR	11132715	Argument	32		11132653	3					
ANR	11132716	PrimaryExpression	32		11132653	0					
ANR	11132717	Argument	0		11132653	4					
ANR	11132718	PrimaryExpression	0		11132653	0					
ANR	11132719	Argument	& params -> BitsPerSample		11132653	5					
ANR	11132720	UnaryOperationExpression	& params -> BitsPerSample		11132653	0					
ANR	11132721	UnaryOperator	&		11132653	0					
ANR	11132722	PtrMemberAccess	params -> BitsPerSample		11132653	1					
ANR	11132723	Identifier	params		11132653	0					
ANR	11132724	Identifier	BitsPerSample		11132653	1					
ANR	11132725	PrimaryExpression	0		11132653	1					
ANR	11132726	OrExpression	"( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"		11132653	1		||			
ANR	11132727	RelationalExpression	"( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0"		11132653	0		<			
ANR	11132728	AssignmentExpression	"code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem )"		11132653	0		=			
ANR	11132729	Identifier	code		11132653	0					
ANR	11132730	AssignmentExpression	"params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem )"		11132653	1		=			
ANR	11132731	PtrMemberAccess	params -> m		11132653	0					
ANR	11132732	Identifier	params		11132653	0					
ANR	11132733	Identifier	m		11132653	1					
ANR	11132734	CallExpression	"fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem )"		11132653	1					
ANR	11132735	Callee	fn_build_float_array		11132653	0					
ANR	11132736	Identifier	fn_build_float_array		11132653	0					
ANR	11132737	ArgumentList	pdict		11132653	1					
ANR	11132738	Argument	pdict		11132653	0					
ANR	11132739	Identifier	pdict		11132653	0					
ANR	11132740	Argument	"""Domain"""		11132653	1					
ANR	11132741	PrimaryExpression	"""Domain"""		11132653	0					
ANR	11132742	Argument	false		11132653	2					
ANR	11132743	Identifier	false		11132653	0					
ANR	11132744	Argument	true		11132653	3					
ANR	11132745	Identifier	true		11132653	0					
ANR	11132746	Argument	& params -> Domain		11132653	4					
ANR	11132747	UnaryOperationExpression	& params -> Domain		11132653	0					
ANR	11132748	UnaryOperator	&		11132653	0					
ANR	11132749	PtrMemberAccess	params -> Domain		11132653	1					
ANR	11132750	Identifier	params		11132653	0					
ANR	11132751	Identifier	Domain		11132653	1					
ANR	11132752	Argument	mem		11132653	5					
ANR	11132753	Identifier	mem		11132653	0					
ANR	11132754	PrimaryExpression	0		11132653	1					
ANR	11132755	RelationalExpression	"( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0"		11132653	1		<			
ANR	11132756	AssignmentExpression	"code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem )"		11132653	0		=			
ANR	11132757	Identifier	code		11132653	0					
ANR	11132758	AssignmentExpression	"params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem )"		11132653	1		=			
ANR	11132759	PtrMemberAccess	params -> n		11132653	0					
ANR	11132760	Identifier	params		11132653	0					
ANR	11132761	Identifier	n		11132653	1					
ANR	11132762	CallExpression	"fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem )"		11132653	1					
ANR	11132763	Callee	fn_build_float_array		11132653	0					
ANR	11132764	Identifier	fn_build_float_array		11132653	0					
ANR	11132765	ArgumentList	pdict		11132653	1					
ANR	11132766	Argument	pdict		11132653	0					
ANR	11132767	Identifier	pdict		11132653	0					
ANR	11132768	Argument	"""Range"""		11132653	1					
ANR	11132769	PrimaryExpression	"""Range"""		11132653	0					
ANR	11132770	Argument	false		11132653	2					
ANR	11132771	Identifier	false		11132653	0					
ANR	11132772	Argument	true		11132653	3					
ANR	11132773	Identifier	true		11132653	0					
ANR	11132774	Argument	& params -> Range		11132653	4					
ANR	11132775	UnaryOperationExpression	& params -> Range		11132653	0					
ANR	11132776	UnaryOperator	&		11132653	0					
ANR	11132777	PtrMemberAccess	params -> Range		11132653	1					
ANR	11132778	Identifier	params		11132653	0					
ANR	11132779	Identifier	Range		11132653	1					
ANR	11132780	Argument	mem		11132653	5					
ANR	11132781	Identifier	mem		11132653	0					
ANR	11132782	PrimaryExpression	0		11132653	1					
ANR	11132783	CompoundStatement		15:10:601:601	11132653	1					
ANR	11132784	GotoStatement	goto fail ;	293:8:9626:9635	11132653	0	True				
ANR	11132785	Identifier	fail		11132653	0					
ANR	11132786	ExpressionStatement	params -> m >>= 1	300:4:9844:9859	11132653	4	True				
ANR	11132787	AssignmentExpression	params -> m >>= 1		11132653	0		>>=			
ANR	11132788	PtrMemberAccess	params -> m		11132653	0					
ANR	11132789	Identifier	params		11132653	0					
ANR	11132790	Identifier	m		11132653	1					
ANR	11132791	PrimaryExpression	1		11132653	1					
ANR	11132792	ExpressionStatement	params -> n >>= 1	301:4:9865:9880	11132653	5	True				
ANR	11132793	AssignmentExpression	params -> n >>= 1		11132653	0		>>=			
ANR	11132794	PtrMemberAccess	params -> n		11132653	0					
ANR	11132795	Identifier	params		11132653	0					
ANR	11132796	Identifier	n		11132653	1					
ANR	11132797	PrimaryExpression	1		11132653	1					
ANR	11132798	IfStatement	if ( params -> m == 0 || params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS )		11132653	6					
ANR	11132799	Condition	params -> m == 0 || params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS	302:8:9890:9990	11132653	0	True				
ANR	11132800	OrExpression	params -> m == 0 || params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS		11132653	0		||			
ANR	11132801	EqualityExpression	params -> m == 0		11132653	0		==			
ANR	11132802	PtrMemberAccess	params -> m		11132653	0					
ANR	11132803	Identifier	params		11132653	0					
ANR	11132804	Identifier	m		11132653	1					
ANR	11132805	PrimaryExpression	0		11132653	1					
ANR	11132806	OrExpression	params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS		11132653	1		||			
ANR	11132807	EqualityExpression	params -> n == 0		11132653	0		==			
ANR	11132808	PtrMemberAccess	params -> n		11132653	0					
ANR	11132809	Identifier	params		11132653	0					
ANR	11132810	Identifier	n		11132653	1					
ANR	11132811	PrimaryExpression	0		11132653	1					
ANR	11132812	OrExpression	params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS		11132653	1		||			
ANR	11132813	RelationalExpression	params -> m > MAX_NUM_INPUTS		11132653	0		>			
ANR	11132814	PtrMemberAccess	params -> m		11132653	0					
ANR	11132815	Identifier	params		11132653	0					
ANR	11132816	Identifier	m		11132653	1					
ANR	11132817	Identifier	MAX_NUM_INPUTS		11132653	1					
ANR	11132818	RelationalExpression	params -> n > MAX_NUM_OUTPUTS		11132653	1		>			
ANR	11132819	PtrMemberAccess	params -> n		11132653	0					
ANR	11132820	Identifier	params		11132653	0					
ANR	11132821	Identifier	n		11132653	1					
ANR	11132822	Identifier	MAX_NUM_OUTPUTS		11132653	1					
ANR	11132823	CompoundStatement		26:67:978:978	11132653	1					
ANR	11132824	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	304:8:10003:10044	11132653	0	True				
ANR	11132825	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		11132653	0		=			
ANR	11132826	Identifier	code		11132653	0					
ANR	11132827	CallExpression	gs_note_error ( gs_error_rangecheck )		11132653	1					
ANR	11132828	Callee	gs_note_error		11132653	0					
ANR	11132829	Identifier	gs_note_error		11132653	0					
ANR	11132830	ArgumentList	gs_error_rangecheck		11132653	1					
ANR	11132831	Argument	gs_error_rangecheck		11132653	0					
ANR	11132832	Identifier	gs_error_rangecheck		11132653	0					
ANR	11132833	GotoStatement	goto fail ;	305:8:10054:10063	11132653	1	True				
ANR	11132834	Identifier	fail		11132653	0					
ANR	11132835	CompoundStatement		35:8:1233:1320	11132653	7					
ANR	11132836	IdentifierDeclStatement	"int * ptr = ( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" ) ;"	312:8:10248:10335	11132653	0	True				
ANR	11132837	IdentifierDecl	"* ptr = ( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		11132653	0					
ANR	11132838	IdentifierDeclType	int *		11132653	0					
ANR	11132839	Identifier	ptr		11132653	1					
ANR	11132840	AssignmentExpression	"* ptr = ( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		11132653	2		=			
ANR	11132841	Identifier	ptr		11132653	0					
ANR	11132842	CastExpression	"( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		11132653	1					
ANR	11132843	CastTarget	int *		11132653	0					
ANR	11132844	CallExpression	"gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		11132653	1					
ANR	11132845	Callee	gs_alloc_byte_array		11132653	0					
ANR	11132846	Identifier	gs_alloc_byte_array		11132653	0					
ANR	11132847	ArgumentList	mem		11132653	1					
ANR	11132848	Argument	mem		11132653	0					
ANR	11132849	Identifier	mem		11132653	0					
ANR	11132850	Argument	params -> m		11132653	1					
ANR	11132851	PtrMemberAccess	params -> m		11132653	0					
ANR	11132852	Identifier	params		11132653	0					
ANR	11132853	Identifier	m		11132653	1					
ANR	11132854	Argument	sizeof ( int )		11132653	2					
ANR	11132855	SizeofExpression	sizeof ( int )		11132653	0					
ANR	11132856	Sizeof	sizeof		11132653	0					
ANR	11132857	SizeofOperand	int		11132653	1					
ANR	11132858	Argument	"""Size"""		11132653	3					
ANR	11132859	PrimaryExpression	"""Size"""		11132653	0					
ANR	11132860	IfStatement	if ( ptr == NULL )		11132653	1					
ANR	11132861	Condition	ptr == NULL	315:12:10350:10360	11132653	0	True				
ANR	11132862	EqualityExpression	ptr == NULL		11132653	0		==			
ANR	11132863	Identifier	ptr		11132653	0					
ANR	11132864	Identifier	NULL		11132653	1					
ANR	11132865	CompoundStatement		38:25:1348:1348	11132653	1					
ANR	11132866	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	316:12:10377:10415	11132653	0	True				
ANR	11132867	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		11132653	0		=			
ANR	11132868	Identifier	code		11132653	0					
ANR	11132869	CallExpression	gs_note_error ( gs_error_VMerror )		11132653	1					
ANR	11132870	Callee	gs_note_error		11132653	0					
ANR	11132871	Identifier	gs_note_error		11132653	0					
ANR	11132872	ArgumentList	gs_error_VMerror		11132653	1					
ANR	11132873	Argument	gs_error_VMerror		11132653	0					
ANR	11132874	Identifier	gs_error_VMerror		11132653	0					
ANR	11132875	GotoStatement	goto fail ;	317:12:10429:10438	11132653	1	True				
ANR	11132876	Identifier	fail		11132653	0					
ANR	11132877	ExpressionStatement	params -> Size = ptr	319:8:10458:10476	11132653	2	True				
ANR	11132878	AssignmentExpression	params -> Size = ptr		11132653	0		=			
ANR	11132879	PtrMemberAccess	params -> Size		11132653	0					
ANR	11132880	Identifier	params		11132653	0					
ANR	11132881	Identifier	Size		11132653	1					
ANR	11132882	Identifier	ptr		11132653	1					
ANR	11132883	ExpressionStatement	"code = dict_ints_param ( mem , pdict , ""Size"" , params -> m , ptr )"	320:8:10486:10544	11132653	3	True				
ANR	11132884	AssignmentExpression	"code = dict_ints_param ( mem , pdict , ""Size"" , params -> m , ptr )"		11132653	0		=			
ANR	11132885	Identifier	code		11132653	0					
ANR	11132886	CallExpression	"dict_ints_param ( mem , pdict , ""Size"" , params -> m , ptr )"		11132653	1					
ANR	11132887	Callee	dict_ints_param		11132653	0					
ANR	11132888	Identifier	dict_ints_param		11132653	0					
ANR	11132889	ArgumentList	mem		11132653	1					
ANR	11132890	Argument	mem		11132653	0					
ANR	11132891	Identifier	mem		11132653	0					
ANR	11132892	Argument	pdict		11132653	1					
ANR	11132893	Identifier	pdict		11132653	0					
ANR	11132894	Argument	"""Size"""		11132653	2					
ANR	11132895	PrimaryExpression	"""Size"""		11132653	0					
ANR	11132896	Argument	params -> m		11132653	3					
ANR	11132897	PtrMemberAccess	params -> m		11132653	0					
ANR	11132898	Identifier	params		11132653	0					
ANR	11132899	Identifier	m		11132653	1					
ANR	11132900	Argument	ptr		11132653	4					
ANR	11132901	Identifier	ptr		11132653	0					
ANR	11132902	IfStatement	if ( code < 0 )		11132653	4					
ANR	11132903	Condition	code < 0	321:12:10558:10565	11132653	0	True				
ANR	11132904	RelationalExpression	code < 0		11132653	0		<			
ANR	11132905	Identifier	code		11132653	0					
ANR	11132906	PrimaryExpression	0		11132653	1					
ANR	11132907	GotoStatement	goto fail ;	322:12:10580:10589	11132653	1	True				
ANR	11132908	Identifier	fail		11132653	0					
ANR	11132909	IfStatement	if ( code == 0 )		11132653	5					
ANR	11132910	Condition	code == 0	323:12:10603:10611	11132653	0	True				
ANR	11132911	EqualityExpression	code == 0		11132653	0		==			
ANR	11132912	Identifier	code		11132653	0					
ANR	11132913	PrimaryExpression	0		11132653	1					
ANR	11132914	CompoundStatement		46:23:1599:1599	11132653	1					
ANR	11132915	ExpressionStatement	"code = determine_sampled_data_size ( params -> m , params -> n , params -> BitsPerSample , ( int * ) params -> Size )"	328:12:10764:10896	11132653	0	True				
ANR	11132916	AssignmentExpression	"code = determine_sampled_data_size ( params -> m , params -> n , params -> BitsPerSample , ( int * ) params -> Size )"		11132653	0		=			
ANR	11132917	Identifier	code		11132653	0					
ANR	11132918	CallExpression	"determine_sampled_data_size ( params -> m , params -> n , params -> BitsPerSample , ( int * ) params -> Size )"		11132653	1					
ANR	11132919	Callee	determine_sampled_data_size		11132653	0					
ANR	11132920	Identifier	determine_sampled_data_size		11132653	0					
ANR	11132921	ArgumentList	params -> m		11132653	1					
ANR	11132922	Argument	params -> m		11132653	0					
ANR	11132923	PtrMemberAccess	params -> m		11132653	0					
ANR	11132924	Identifier	params		11132653	0					
ANR	11132925	Identifier	m		11132653	1					
ANR	11132926	Argument	params -> n		11132653	1					
ANR	11132927	PtrMemberAccess	params -> n		11132653	0					
ANR	11132928	Identifier	params		11132653	0					
ANR	11132929	Identifier	n		11132653	1					
ANR	11132930	Argument	params -> BitsPerSample		11132653	2					
ANR	11132931	PtrMemberAccess	params -> BitsPerSample		11132653	0					
ANR	11132932	Identifier	params		11132653	0					
ANR	11132933	Identifier	BitsPerSample		11132653	1					
ANR	11132934	Argument	( int * ) params -> Size		11132653	3					
ANR	11132935	CastExpression	( int * ) params -> Size		11132653	0					
ANR	11132936	CastTarget	int *		11132653	0					
ANR	11132937	PtrMemberAccess	params -> Size		11132653	1					
ANR	11132938	Identifier	params		11132653	0					
ANR	11132939	Identifier	Size		11132653	1					
ANR	11132940	IfStatement	if ( code < 0 )		11132653	1					
ANR	11132941	Condition	code < 0	330:16:10914:10921	11132653	0	True				
ANR	11132942	RelationalExpression	code < 0		11132653	0		<			
ANR	11132943	Identifier	code		11132653	0					
ANR	11132944	PrimaryExpression	0		11132653	1					
ANR	11132945	GotoStatement	goto fail ;	331:16:10940:10949	11132653	1	True				
ANR	11132946	Identifier	fail		11132653	0					
ANR	11132947	ElseStatement	else		11132653	0					
ANR	11132948	CompoundStatement		56:13:1959:1959	11132653	0					
ANR	11132949	IfStatement	"if ( code != params -> m || ! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size ) )"		11132653	0					
ANR	11132950	Condition	"code != params -> m || ! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"	334:16:11036:11147	11132653	0	True				
ANR	11132951	OrExpression	"code != params -> m || ! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"		11132653	0		||			
ANR	11132952	EqualityExpression	code != params -> m		11132653	0		!=			
ANR	11132953	Identifier	code		11132653	0					
ANR	11132954	PtrMemberAccess	params -> m		11132653	1					
ANR	11132955	Identifier	params		11132653	0					
ANR	11132956	Identifier	m		11132653	1					
ANR	11132957	UnaryOperationExpression	"! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"		11132653	1					
ANR	11132958	UnaryOperator	!		11132653	0					
ANR	11132959	CallExpression	"valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"		11132653	1					
ANR	11132960	Callee	valid_cube_size		11132653	0					
ANR	11132961	Identifier	valid_cube_size		11132653	0					
ANR	11132962	ArgumentList	params -> m		11132653	1					
ANR	11132963	Argument	params -> m		11132653	0					
ANR	11132964	PtrMemberAccess	params -> m		11132653	0					
ANR	11132965	Identifier	params		11132653	0					
ANR	11132966	Identifier	m		11132653	1					
ANR	11132967	Argument	params -> n		11132653	1					
ANR	11132968	PtrMemberAccess	params -> n		11132653	0					
ANR	11132969	Identifier	params		11132653	0					
ANR	11132970	Identifier	n		11132653	1					
ANR	11132971	Argument	params -> BitsPerSample		11132653	2					
ANR	11132972	PtrMemberAccess	params -> BitsPerSample		11132653	0					
ANR	11132973	Identifier	params		11132653	0					
ANR	11132974	Identifier	BitsPerSample		11132653	1					
ANR	11132975	Argument	params -> Size		11132653	3					
ANR	11132976	PtrMemberAccess	params -> Size		11132653	0					
ANR	11132977	Identifier	params		11132653	0					
ANR	11132978	Identifier	Size		11132653	1					
ANR	11132979	CompoundStatement		58:54:2135:2135	11132653	1					
ANR	11132980	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	336:20:11172:11213	11132653	0	True				
ANR	11132981	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		11132653	0		=			
ANR	11132982	Identifier	code		11132653	0					
ANR	11132983	CallExpression	gs_note_error ( gs_error_rangecheck )		11132653	1					
ANR	11132984	Callee	gs_note_error		11132653	0					
ANR	11132985	Identifier	gs_note_error		11132653	0					
ANR	11132986	ArgumentList	gs_error_rangecheck		11132653	1					
ANR	11132987	Argument	gs_error_rangecheck		11132653	0					
ANR	11132988	Identifier	gs_error_rangecheck		11132653	0					
ANR	11132989	GotoStatement	goto fail ;	337:20:11235:11244	11132653	1	True				
ANR	11132990	Identifier	fail		11132653	0					
ANR	11132991	ExpressionStatement	total_size = params -> n * bits2bytes ( params -> BitsPerSample )	344:4:11356:11414	11132653	8	True				
ANR	11132992	AssignmentExpression	total_size = params -> n * bits2bytes ( params -> BitsPerSample )		11132653	0		=			
ANR	11132993	Identifier	total_size		11132653	0					
ANR	11132994	MultiplicativeExpression	params -> n * bits2bytes ( params -> BitsPerSample )		11132653	1		*			
ANR	11132995	PtrMemberAccess	params -> n		11132653	0					
ANR	11132996	Identifier	params		11132653	0					
ANR	11132997	Identifier	n		11132653	1					
ANR	11132998	CallExpression	bits2bytes ( params -> BitsPerSample )		11132653	1					
ANR	11132999	Callee	bits2bytes		11132653	0					
ANR	11133000	Identifier	bits2bytes		11132653	0					
ANR	11133001	ArgumentList	params -> BitsPerSample		11132653	1					
ANR	11133002	Argument	params -> BitsPerSample		11132653	0					
ANR	11133003	PtrMemberAccess	params -> BitsPerSample		11132653	0					
ANR	11133004	Identifier	params		11132653	0					
ANR	11133005	Identifier	BitsPerSample		11132653	1					
ANR	11133006	ForStatement	for ( i = 0 ; i < params -> m ; i ++ )		11132653	9					
ANR	11133007	ForInit	i = 0 ;	345:9:11425:11430	11132653	0	True				
ANR	11133008	AssignmentExpression	i = 0		11132653	0		=			
ANR	11133009	Identifier	i		11132653	0					
ANR	11133010	PrimaryExpression	0		11132653	1					
ANR	11133011	Condition	i < params -> m	345:16:11432:11444	11132653	1	True				
ANR	11133012	RelationalExpression	i < params -> m		11132653	0		<			
ANR	11133013	Identifier	i		11132653	0					
ANR	11133014	PtrMemberAccess	params -> m		11132653	1					
ANR	11133015	Identifier	params		11132653	0					
ANR	11133016	Identifier	m		11132653	1					
ANR	11133017	PostIncDecOperationExpression	i ++	345:31:11447:11449	11132653	2	True				
ANR	11133018	Identifier	i		11132653	0					
ANR	11133019	IncDec	++		11132653	1					
ANR	11133020	ExpressionStatement	total_size *= params -> Size [ i ]	346:8:11460:11489	11132653	3	True				
ANR	11133021	AssignmentExpression	total_size *= params -> Size [ i ]		11132653	0		*=			
ANR	11133022	Identifier	total_size		11132653	0					
ANR	11133023	ArrayIndexing	params -> Size [ i ]		11132653	1					
ANR	11133024	PtrMemberAccess	params -> Size		11132653	0					
ANR	11133025	Identifier	params		11132653	0					
ANR	11133026	Identifier	Size		11132653	1					
ANR	11133027	Identifier	i		11132653	1					
ANR	11133028	ExpressionStatement	"bytes = gs_alloc_byte_array ( mem , total_size , 1 , ""cube_build_func0(bytes)"" )"	350:4:11558:11632	11132653	10	True				
ANR	11133029	AssignmentExpression	"bytes = gs_alloc_byte_array ( mem , total_size , 1 , ""cube_build_func0(bytes)"" )"		11132653	0		=			
ANR	11133030	Identifier	bytes		11132653	0					
ANR	11133031	CallExpression	"gs_alloc_byte_array ( mem , total_size , 1 , ""cube_build_func0(bytes)"" )"		11132653	1					
ANR	11133032	Callee	gs_alloc_byte_array		11132653	0					
ANR	11133033	Identifier	gs_alloc_byte_array		11132653	0					
ANR	11133034	ArgumentList	mem		11132653	1					
ANR	11133035	Argument	mem		11132653	0					
ANR	11133036	Identifier	mem		11132653	0					
ANR	11133037	Argument	total_size		11132653	1					
ANR	11133038	Identifier	total_size		11132653	0					
ANR	11133039	Argument	1		11132653	2					
ANR	11133040	PrimaryExpression	1		11132653	0					
ANR	11133041	Argument	"""cube_build_func0(bytes)"""		11132653	3					
ANR	11133042	PrimaryExpression	"""cube_build_func0(bytes)"""		11132653	0					
ANR	11133043	IfStatement	if ( ! bytes )		11132653	11					
ANR	11133044	Condition	! bytes	351:8:11642:11647	11132653	0	True				
ANR	11133045	UnaryOperationExpression	! bytes		11132653	0					
ANR	11133046	UnaryOperator	!		11132653	0					
ANR	11133047	Identifier	bytes		11132653	1					
ANR	11133048	CompoundStatement		74:16:2635:2635	11132653	1					
ANR	11133049	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	352:8:11660:11698	11132653	0	True				
ANR	11133050	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		11132653	0		=			
ANR	11133051	Identifier	code		11132653	0					
ANR	11133052	CallExpression	gs_note_error ( gs_error_VMerror )		11132653	1					
ANR	11133053	Callee	gs_note_error		11132653	0					
ANR	11133054	Identifier	gs_note_error		11132653	0					
ANR	11133055	ArgumentList	gs_error_VMerror		11132653	1					
ANR	11133056	Argument	gs_error_VMerror		11132653	0					
ANR	11133057	Identifier	gs_error_VMerror		11132653	0					
ANR	11133058	GotoStatement	goto fail ;	353:8:11708:11717	11132653	1	True				
ANR	11133059	Identifier	fail		11132653	0					
ANR	11133060	ExpressionStatement	"data_source_init_bytes ( & params -> DataSource , ( const unsigned char * ) bytes , total_size )"	355:4:11729:11846	11132653	12	True				
ANR	11133061	CallExpression	"data_source_init_bytes ( & params -> DataSource , ( const unsigned char * ) bytes , total_size )"		11132653	0					
ANR	11133062	Callee	data_source_init_bytes		11132653	0					
ANR	11133063	Identifier	data_source_init_bytes		11132653	0					
ANR	11133064	ArgumentList	& params -> DataSource		11132653	1					
ANR	11133065	Argument	& params -> DataSource		11132653	0					
ANR	11133066	UnaryOperationExpression	& params -> DataSource		11132653	0					
ANR	11133067	UnaryOperator	&		11132653	0					
ANR	11133068	PtrMemberAccess	params -> DataSource		11132653	1					
ANR	11133069	Identifier	params		11132653	0					
ANR	11133070	Identifier	DataSource		11132653	1					
ANR	11133071	Argument	( const unsigned char * ) bytes		11132653	1					
ANR	11133072	CastExpression	( const unsigned char * ) bytes		11132653	0					
ANR	11133073	CastTarget	const unsigned char *		11132653	0					
ANR	11133074	Identifier	bytes		11132653	1					
ANR	11133075	Argument	total_size		11132653	2					
ANR	11133076	Identifier	total_size		11132653	0					
ANR	11133077	ReturnStatement	return 0 ;	358:4:11853:11861	11132653	13	True				
ANR	11133078	PrimaryExpression	0		11132653	0					
ANR	11133079	Label	fail :	360:0:11864:11868	11132653	14	True				
ANR	11133080	Identifier	fail		11132653	0					
ANR	11133081	ExpressionStatement	"gs_function_Sd_free_params ( params , mem )"	361:4:11874:11913	11132653	15	True				
ANR	11133082	CallExpression	"gs_function_Sd_free_params ( params , mem )"		11132653	0					
ANR	11133083	Callee	gs_function_Sd_free_params		11132653	0					
ANR	11133084	Identifier	gs_function_Sd_free_params		11132653	0					
ANR	11133085	ArgumentList	params		11132653	1					
ANR	11133086	Argument	params		11132653	0					
ANR	11133087	Identifier	params		11132653	0					
ANR	11133088	Argument	mem		11132653	1					
ANR	11133089	Identifier	mem		11132653	0					
ANR	11133090	ReturnStatement	return ( code < 0 ? code : gs_note_error ( gs_error_rangecheck ) ) ;	362:4:11919:11980	11132653	16	True				
ANR	11133091	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_rangecheck )		11132653	0					
ANR	11133092	Condition	code < 0		11132653	0					
ANR	11133093	RelationalExpression	code < 0		11132653	0		<			
ANR	11133094	Identifier	code		11132653	0					
ANR	11133095	PrimaryExpression	0		11132653	1					
ANR	11133096	Identifier	code		11132653	1					
ANR	11133097	CallExpression	gs_note_error ( gs_error_rangecheck )		11132653	2					
ANR	11133098	Callee	gs_note_error		11132653	0					
ANR	11133099	Identifier	gs_note_error		11132653	0					
ANR	11133100	ArgumentList	gs_error_rangecheck		11132653	1					
ANR	11133101	Argument	gs_error_rangecheck		11132653	0					
ANR	11133102	Identifier	gs_error_rangecheck		11132653	0					
ANR	11133103	ReturnType	static int		11132653	1					
ANR	11133104	Identifier	cube_build_func0		11132653	2					
ANR	11133105	ParameterList	"const ref * pdict , gs_function_Sd_params_t * params , gs_memory_t * mem"		11132653	3					
ANR	11133106	Parameter	const ref * pdict	276:17:8887:8903	11132653	0	True				
ANR	11133107	ParameterType	const ref *		11132653	0					
ANR	11133108	Identifier	pdict		11132653	1					
ANR	11133109	Parameter	gs_function_Sd_params_t * params	276:36:8906:8937	11132653	1	True				
ANR	11133110	ParameterType	gs_function_Sd_params_t *		11132653	0					
ANR	11133111	Identifier	params		11132653	1					
ANR	11133112	Parameter	gs_memory_t * mem	277:56:8996:9011	11132653	2	True				
ANR	11133113	ParameterType	gs_memory_t *		11132653	0					
ANR	11133114	Identifier	mem		11132653	1					
ANR	11133115	CFGEntryNode	ENTRY		11132653		True				
ANR	11133116	CFGExitNode	EXIT		11132653		True				
ANR	11133117	Symbol	params -> BitsPerSample		11132653						
ANR	11133118	Symbol	code		11132653						
ANR	11133119	Symbol	gs_error_rangecheck		11132653						
ANR	11133120	Symbol	MAX_NUM_OUTPUTS		11132653						
ANR	11133121	Symbol	* * params		11132653						
ANR	11133122	Symbol	& params -> Order		11132653						
ANR	11133123	Symbol	params -> m		11132653						
ANR	11133124	Symbol	MAX_NUM_INPUTS		11132653						
ANR	11133125	Symbol	params -> n		11132653						
ANR	11133126	Symbol	mem		11132653						
ANR	11133127	Symbol	params -> Size		11132653						
ANR	11133128	Symbol	* params		11132653						
ANR	11133129	Symbol	determine_sampled_data_size		11132653						
ANR	11133130	Symbol	NULL		11132653						
ANR	11133131	Symbol	total_size		11132653						
ANR	11133132	Symbol	false		11132653						
ANR	11133133	Symbol	* params -> Size		11132653						
ANR	11133134	Symbol	i		11132653						
ANR	11133135	Symbol	& params -> DataSource		11132653						
ANR	11133136	Symbol	fn_build_float_array		11132653						
ANR	11133137	Symbol	params		11132653						
ANR	11133138	Symbol	& params -> Domain		11132653						
ANR	11133139	Symbol	bits2bytes		11132653						
ANR	11133140	Symbol	ptr		11132653						
ANR	11133141	Symbol	gs_error_VMerror		11132653						
ANR	11133142	Symbol	gs_note_error		11132653						
ANR	11133143	Symbol	* i		11132653						
ANR	11133144	Symbol	bytes		11132653						
ANR	11133145	Symbol	true		11132653						
ANR	11133146	Symbol	& params -> BitsPerSample		11132653						
ANR	11133147	Symbol	dict_int_param		11132653						
ANR	11133148	Symbol	valid_cube_size		11132653						
ANR	11133149	Symbol	& params -> Range		11132653						
ANR	11133150	Symbol	gs_alloc_byte_array		11132653						
ANR	11133151	Symbol	dict_ints_param		11132653						
ANR	11133152	Symbol	pdict		11132653						
ANR	11133153	Function	sampled_data_setup	393:0:13002:14882							
ANR	11133154	FunctionDef	"sampled_data_setup (i_ctx_t * i_ctx_p , gs_function_t * pfn , const ref * pproc , int ( * finish_proc ) ( i_ctx_t * ) , gs_memory_t * mem)"		11133153	0					
ANR	11133155	CompoundStatement		396:0:13147:14882	11133153	0					
ANR	11133156	IdentifierDeclStatement	os_ptr op = osp ;	397:4:13153:13168	11133153	0	True				
ANR	11133157	IdentifierDecl	op = osp		11133153	0					
ANR	11133158	IdentifierDeclType	os_ptr		11133153	0					
ANR	11133159	Identifier	op		11133153	1					
ANR	11133160	AssignmentExpression	op = osp		11133153	2		=			
ANR	11133161	Identifier	osp		11133153	0					
ANR	11133162	Identifier	osp		11133153	1					
ANR	11133163	IdentifierDeclStatement	gs_sampled_data_enum * penum ;	398:4:13174:13201	11133153	1	True				
ANR	11133164	IdentifierDecl	* penum		11133153	0					
ANR	11133165	IdentifierDeclType	gs_sampled_data_enum *		11133153	0					
ANR	11133166	Identifier	penum		11133153	1					
ANR	11133167	IdentifierDeclStatement	int i ;	399:4:13207:13212	11133153	2	True				
ANR	11133168	IdentifierDecl	i		11133153	0					
ANR	11133169	IdentifierDeclType	int		11133153	0					
ANR	11133170	Identifier	i		11133153	1					
ANR	11133171	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & pfn -> params ;	400:4:13218:13292	11133153	3	True				
ANR	11133172	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & pfn -> params		11133153	0					
ANR	11133173	IdentifierDeclType	gs_function_Sd_params_t *		11133153	0					
ANR	11133174	Identifier	params		11133153	1					
ANR	11133175	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & pfn -> params		11133153	2		=			
ANR	11133176	Identifier	params		11133153	0					
ANR	11133177	CastExpression	( gs_function_Sd_params_t * ) & pfn -> params		11133153	1					
ANR	11133178	CastTarget	gs_function_Sd_params_t *		11133153	0					
ANR	11133179	UnaryOperationExpression	& pfn -> params		11133153	1					
ANR	11133180	UnaryOperator	&		11133153	0					
ANR	11133181	PtrMemberAccess	pfn -> params		11133153	1					
ANR	11133182	Identifier	pfn		11133153	0					
ANR	11133183	Identifier	params		11133153	1					
ANR	11133184	ExpressionStatement	check_estack ( estack_storage + 1 )	402:4:13299:13331	11133153	4	True				
ANR	11133185	CallExpression	check_estack ( estack_storage + 1 )		11133153	0					
ANR	11133186	Callee	check_estack		11133153	0					
ANR	11133187	Identifier	check_estack		11133153	0					
ANR	11133188	ArgumentList	estack_storage + 1		11133153	1					
ANR	11133189	Argument	estack_storage + 1		11133153	0					
ANR	11133190	AdditiveExpression	estack_storage + 1		11133153	0		+			
ANR	11133191	Identifier	estack_storage		11133153	0					
ANR	11133192	PrimaryExpression	1		11133153	1					
ANR	11133193	ExpressionStatement	check_ostack ( params -> m + O_STACK_PAD )	403:4:13367:13404	11133153	5	True				
ANR	11133194	CallExpression	check_ostack ( params -> m + O_STACK_PAD )		11133153	0					
ANR	11133195	Callee	check_ostack		11133153	0					
ANR	11133196	Identifier	check_ostack		11133153	0					
ANR	11133197	ArgumentList	params -> m + O_STACK_PAD		11133153	1					
ANR	11133198	Argument	params -> m + O_STACK_PAD		11133153	0					
ANR	11133199	AdditiveExpression	params -> m + O_STACK_PAD		11133153	0		+			
ANR	11133200	PtrMemberAccess	params -> m		11133153	0					
ANR	11133201	Identifier	params		11133153	0					
ANR	11133202	Identifier	m		11133153	1					
ANR	11133203	Identifier	O_STACK_PAD		11133153	1					
ANR	11133204	ExpressionStatement	check_ostack ( params -> n + O_STACK_PAD )	404:4:13438:13475	11133153	6	True				
ANR	11133205	CallExpression	check_ostack ( params -> n + O_STACK_PAD )		11133153	0					
ANR	11133206	Callee	check_ostack		11133153	0					
ANR	11133207	Identifier	check_ostack		11133153	0					
ANR	11133208	ArgumentList	params -> n + O_STACK_PAD		11133153	1					
ANR	11133209	Argument	params -> n + O_STACK_PAD		11133153	0					
ANR	11133210	AdditiveExpression	params -> n + O_STACK_PAD		11133153	0		+			
ANR	11133211	PtrMemberAccess	params -> n		11133153	0					
ANR	11133212	Identifier	params		11133153	0					
ANR	11133213	Identifier	n		11133153	1					
ANR	11133214	Identifier	O_STACK_PAD		11133153	1					
ANR	11133215	ExpressionStatement	"penum = gs_sampled_data_enum_alloc ( imemory , ""zbuildsampledfuntion(params)"" )"	409:4:13554:13629	11133153	7	True				
ANR	11133216	AssignmentExpression	"penum = gs_sampled_data_enum_alloc ( imemory , ""zbuildsampledfuntion(params)"" )"		11133153	0		=			
ANR	11133217	Identifier	penum		11133153	0					
ANR	11133218	CallExpression	"gs_sampled_data_enum_alloc ( imemory , ""zbuildsampledfuntion(params)"" )"		11133153	1					
ANR	11133219	Callee	gs_sampled_data_enum_alloc		11133153	0					
ANR	11133220	Identifier	gs_sampled_data_enum_alloc		11133153	0					
ANR	11133221	ArgumentList	imemory		11133153	1					
ANR	11133222	Argument	imemory		11133153	0					
ANR	11133223	Identifier	imemory		11133153	0					
ANR	11133224	Argument	"""zbuildsampledfuntion(params)"""		11133153	1					
ANR	11133225	PrimaryExpression	"""zbuildsampledfuntion(params)"""		11133153	0					
ANR	11133226	IfStatement	if ( penum == NULL )		11133153	8					
ANR	11133227	Condition	penum == NULL	410:8:13639:13651	11133153	0	True				
ANR	11133228	EqualityExpression	penum == NULL		11133153	0		==			
ANR	11133229	Identifier	penum		11133153	0					
ANR	11133230	Identifier	NULL		11133153	1					
ANR	11133231	ExpressionStatement	return_error ( gs_error_VMerror )	411:8:13662:13692	11133153	1	True				
ANR	11133232	CallExpression	return_error ( gs_error_VMerror )		11133153	0					
ANR	11133233	Callee	return_error		11133153	0					
ANR	11133234	Identifier	return_error		11133153	0					
ANR	11133235	ArgumentList	gs_error_VMerror		11133153	1					
ANR	11133236	Argument	gs_error_VMerror		11133153	0					
ANR	11133237	Identifier	gs_error_VMerror		11133153	0					
ANR	11133238	ExpressionStatement	penum -> pfn = pfn	415:4:13755:13771	11133153	9	True				
ANR	11133239	AssignmentExpression	penum -> pfn = pfn		11133153	0		=			
ANR	11133240	PtrMemberAccess	penum -> pfn		11133153	0					
ANR	11133241	Identifier	penum		11133153	0					
ANR	11133242	Identifier	pfn		11133153	1					
ANR	11133243	Identifier	pfn		11133153	1					
ANR	11133244	ForStatement	for ( i = 0 ; i < params -> m ; i ++ )		11133153	10					
ANR	11133245	ForInit	i = 0 ;	416:8:13781:13784	11133153	0	True				
ANR	11133246	AssignmentExpression	i = 0		11133153	0		=			
ANR	11133247	Identifier	i		11133153	0					
ANR	11133248	PrimaryExpression	0		11133153	1					
ANR	11133249	Condition	i < params -> m	416:13:13786:13797	11133153	1	True				
ANR	11133250	RelationalExpression	i < params -> m		11133153	0		<			
ANR	11133251	Identifier	i		11133153	0					
ANR	11133252	PtrMemberAccess	params -> m		11133153	1					
ANR	11133253	Identifier	params		11133153	0					
ANR	11133254	Identifier	m		11133153	1					
ANR	11133255	PostIncDecOperationExpression	i ++	416:27:13800:13802	11133153	2	True				
ANR	11133256	Identifier	i		11133153	0					
ANR	11133257	IncDec	++		11133153	1					
ANR	11133258	ExpressionStatement	penum -> indexes [ i ] = 0	417:8:13813:13834	11133153	3	True				
ANR	11133259	AssignmentExpression	penum -> indexes [ i ] = 0		11133153	0		=			
ANR	11133260	ArrayIndexing	penum -> indexes [ i ]		11133153	0					
ANR	11133261	PtrMemberAccess	penum -> indexes		11133153	0					
ANR	11133262	Identifier	penum		11133153	0					
ANR	11133263	Identifier	indexes		11133153	1					
ANR	11133264	Identifier	i		11133153	1					
ANR	11133265	PrimaryExpression	0		11133153	1					
ANR	11133266	ExpressionStatement	penum -> o_stack_depth = ref_stack_count ( & o_stack )	422:4:13992:14040	11133153	11	True				
ANR	11133267	AssignmentExpression	penum -> o_stack_depth = ref_stack_count ( & o_stack )		11133153	0		=			
ANR	11133268	PtrMemberAccess	penum -> o_stack_depth		11133153	0					
ANR	11133269	Identifier	penum		11133153	0					
ANR	11133270	Identifier	o_stack_depth		11133153	1					
ANR	11133271	CallExpression	ref_stack_count ( & o_stack )		11133153	1					
ANR	11133272	Callee	ref_stack_count		11133153	0					
ANR	11133273	Identifier	ref_stack_count		11133153	0					
ANR	11133274	ArgumentList	& o_stack		11133153	1					
ANR	11133275	Argument	& o_stack		11133153	0					
ANR	11133276	UnaryOperationExpression	& o_stack		11133153	0					
ANR	11133277	UnaryOperator	&		11133153	0					
ANR	11133278	Identifier	o_stack		11133153	1					
ANR	11133279	ExpressionStatement	push ( O_STACK_PAD )	430:4:14404:14421	11133153	12	True				
ANR	11133280	CallExpression	push ( O_STACK_PAD )		11133153	0					
ANR	11133281	Callee	push		11133153	0					
ANR	11133282	Identifier	push		11133153	0					
ANR	11133283	ArgumentList	O_STACK_PAD		11133153	1					
ANR	11133284	Argument	O_STACK_PAD		11133153	0					
ANR	11133285	Identifier	O_STACK_PAD		11133153	0					
ANR	11133286	ForStatement	for ( i = 0 ; i < O_STACK_PAD ; i ++ )		11133153	13					
ANR	11133287	ForInit	i = 0 ;	431:9:14432:14437	11133153	0	True				
ANR	11133288	AssignmentExpression	i = 0		11133153	0		=			
ANR	11133289	Identifier	i		11133153	0					
ANR	11133290	PrimaryExpression	0		11133153	1					
ANR	11133291	Condition	i < O_STACK_PAD	431:16:14439:14453	11133153	1	True				
ANR	11133292	RelationalExpression	i < O_STACK_PAD		11133153	0		<			
ANR	11133293	Identifier	i		11133153	0					
ANR	11133294	Identifier	O_STACK_PAD		11133153	1					
ANR	11133295	PostIncDecOperationExpression	i ++	431:33:14456:14458	11133153	2	True				
ANR	11133296	Identifier	i		11133153	0					
ANR	11133297	IncDec	++		11133153	1					
ANR	11133298	ExpressionStatement	make_null ( op - i )	432:8:14494:14511	11133153	3	True				
ANR	11133299	CallExpression	make_null ( op - i )		11133153	0					
ANR	11133300	Callee	make_null		11133153	0					
ANR	11133301	Identifier	make_null		11133153	0					
ANR	11133302	ArgumentList	op - i		11133153	1					
ANR	11133303	Argument	op - i		11133153	0					
ANR	11133304	AdditiveExpression	op - i		11133153	0		-			
ANR	11133305	Identifier	op		11133153	0					
ANR	11133306	Identifier	i		11133153	1					
ANR	11133307	ExpressionStatement	esp += estack_storage	436:4:14559:14580	11133153	14	True				
ANR	11133308	AssignmentExpression	esp += estack_storage		11133153	0		+=			
ANR	11133309	Identifier	esp		11133153	0					
ANR	11133310	Identifier	estack_storage		11133153	1					
ANR	11133311	ExpressionStatement	"make_op_estack ( esp - 2 , finish_proc )"	437:4:14586:14622	11133153	15	True				
ANR	11133312	CallExpression	"make_op_estack ( esp - 2 , finish_proc )"		11133153	0					
ANR	11133313	Callee	make_op_estack		11133153	0					
ANR	11133314	Identifier	make_op_estack		11133153	0					
ANR	11133315	ArgumentList	esp - 2		11133153	1					
ANR	11133316	Argument	esp - 2		11133153	0					
ANR	11133317	AdditiveExpression	esp - 2		11133153	0		-			
ANR	11133318	Identifier	esp		11133153	0					
ANR	11133319	PrimaryExpression	2		11133153	1					
ANR	11133320	Argument	finish_proc		11133153	1					
ANR	11133321	Identifier	finish_proc		11133153	0					
ANR	11133322	ExpressionStatement	sample_proc = * pproc	438:4:14658:14678	11133153	16	True				
ANR	11133323	AssignmentExpression	sample_proc = * pproc		11133153	0		=			
ANR	11133324	Identifier	sample_proc		11133153	0					
ANR	11133325	UnaryOperationExpression	* pproc		11133153	1					
ANR	11133326	UnaryOperator	*		11133153	0					
ANR	11133327	Identifier	pproc		11133153	1					
ANR	11133328	ExpressionStatement	"make_istruct ( esp , 0 , penum )"	439:4:14720:14747	11133153	17	True				
ANR	11133329	CallExpression	"make_istruct ( esp , 0 , penum )"		11133153	0					
ANR	11133330	Callee	make_istruct		11133153	0					
ANR	11133331	Identifier	make_istruct		11133153	0					
ANR	11133332	ArgumentList	esp		11133153	1					
ANR	11133333	Argument	esp		11133153	0					
ANR	11133334	Identifier	esp		11133153	0					
ANR	11133335	Argument	0		11133153	1					
ANR	11133336	PrimaryExpression	0		11133153	0					
ANR	11133337	Argument	penum		11133153	2					
ANR	11133338	Identifier	penum		11133153	0					
ANR	11133339	ExpressionStatement	push_op_estack ( sampled_data_sample )	440:4:14793:14828	11133153	18	True				
ANR	11133340	CallExpression	push_op_estack ( sampled_data_sample )		11133153	0					
ANR	11133341	Callee	push_op_estack		11133153	0					
ANR	11133342	Identifier	push_op_estack		11133153	0					
ANR	11133343	ArgumentList	sampled_data_sample		11133153	1					
ANR	11133344	Argument	sampled_data_sample		11133153	0					
ANR	11133345	Identifier	sampled_data_sample		11133153	0					
ANR	11133346	ReturnStatement	return o_push_estack ;	441:4:14860:14880	11133153	19	True				
ANR	11133347	Identifier	o_push_estack		11133153	0					
ANR	11133348	ReturnType	static int		11133153	1					
ANR	11133349	Identifier	sampled_data_setup		11133153	2					
ANR	11133350	ParameterList	"i_ctx_t * i_ctx_p , gs_function_t * pfn , const ref * pproc , int ( * finish_proc ) ( i_ctx_t * ) , gs_memory_t * mem"		11133153	3					
ANR	11133351	Parameter	i_ctx_t * i_ctx_p	394:19:13032:13047	11133153	0	True				
ANR	11133352	ParameterType	i_ctx_t *		11133153	0					
ANR	11133353	Identifier	i_ctx_p		11133153	1					
ANR	11133354	Parameter	gs_function_t * pfn	394:37:13050:13067	11133153	1	True				
ANR	11133355	ParameterType	gs_function_t *		11133153	0					
ANR	11133356	Identifier	pfn		11133153	1					
ANR	11133357	Parameter	const ref * pproc	395:8:13078:13094	11133153	2	True				
ANR	11133358	ParameterType	const ref *		11133153	0					
ANR	11133359	Identifier	pproc		11133153	1					
ANR	11133360	Parameter	int ( * finish_proc ) ( i_ctx_t * )	395:27:13097:13125	11133153	3	True				
ANR	11133361	ParameterType	(( i_ctx_t * ) int) *		11133153	0					
ANR	11133362	Identifier	finish_proc		11133153	1					
ANR	11133363	Parameter	gs_memory_t * mem	395:58:13128:13144	11133153	4	True				
ANR	11133364	ParameterType	gs_memory_t *		11133153	0					
ANR	11133365	Identifier	mem		11133153	1					
ANR	11133366	CFGEntryNode	ENTRY		11133153		True				
ANR	11133367	CFGExitNode	EXIT		11133153		True				
ANR	11133368	Symbol	* penum		11133153						
ANR	11133369	Symbol	esp		11133153						
ANR	11133370	Symbol	sampled_data_sample		11133153						
ANR	11133371	Symbol	osp		11133153						
ANR	11133372	Symbol	O_STACK_PAD		11133153						
ANR	11133373	Symbol	params -> m		11133153						
ANR	11133374	Symbol	params -> n		11133153						
ANR	11133375	Symbol	mem		11133153						
ANR	11133376	Symbol	finish_proc		11133153						
ANR	11133377	Symbol	pproc		11133153						
ANR	11133378	Symbol	imemory		11133153						
ANR	11133379	Symbol	gs_sampled_data_enum_alloc		11133153						
ANR	11133380	Symbol	* params		11133153						
ANR	11133381	Symbol	* * penum		11133153						
ANR	11133382	Symbol	o_push_estack		11133153						
ANR	11133383	Symbol	penum -> indexes		11133153						
ANR	11133384	Symbol	op		11133153						
ANR	11133385	Symbol	NULL		11133153						
ANR	11133386	Symbol	penum		11133153						
ANR	11133387	Symbol	& pfn -> params		11133153						
ANR	11133388	Symbol	i		11133153						
ANR	11133389	Symbol	penum -> pfn		11133153						
ANR	11133390	Symbol	sample_proc		11133153						
ANR	11133391	Symbol	params		11133153						
ANR	11133392	Symbol	* pproc		11133153						
ANR	11133393	Symbol	gs_error_VMerror		11133153						
ANR	11133394	Symbol	* i		11133153						
ANR	11133395	Symbol	i_ctx_p		11133153						
ANR	11133396	Symbol	& o_stack		11133153						
ANR	11133397	Symbol	ref_stack_count		11133153						
ANR	11133398	Symbol	pfn		11133153						
ANR	11133399	Symbol	estack_storage		11133153						
ANR	11133400	Symbol	penum -> o_stack_depth		11133153						
ANR	11133401	Symbol	* penum -> indexes		11133153						
ANR	11133402	Function	sampled_data_sample	447:0:14942:15815							
ANR	11133403	FunctionDef	sampled_data_sample (i_ctx_t * i_ctx_p)		11133402	0					
ANR	11133404	CompoundStatement		449:0:14991:15815	11133402	0					
ANR	11133405	IdentifierDeclStatement	os_ptr op = osp ;	450:4:14997:15012	11133402	0	True				
ANR	11133406	IdentifierDecl	op = osp		11133402	0					
ANR	11133407	IdentifierDeclType	os_ptr		11133402	0					
ANR	11133408	Identifier	op		11133402	1					
ANR	11133409	AssignmentExpression	op = osp		11133402	2		=			
ANR	11133410	Identifier	osp		11133402	0					
ANR	11133411	Identifier	osp		11133402	1					
ANR	11133412	IdentifierDeclStatement	gs_sampled_data_enum * penum = senum ;	451:4:15018:15053	11133402	1	True				
ANR	11133413	IdentifierDecl	* penum = senum		11133402	0					
ANR	11133414	IdentifierDeclType	gs_sampled_data_enum *		11133402	0					
ANR	11133415	Identifier	penum		11133402	1					
ANR	11133416	AssignmentExpression	* penum = senum		11133402	2		=			
ANR	11133417	Identifier	senum		11133402	0					
ANR	11133418	Identifier	senum		11133402	1					
ANR	11133419	IdentifierDeclStatement	ref proc ;	452:4:15059:15067	11133402	2	True				
ANR	11133420	IdentifierDecl	proc		11133402	0					
ANR	11133421	IdentifierDeclType	ref		11133402	0					
ANR	11133422	Identifier	proc		11133402	1					
ANR	11133423	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params ;	453:4:15073:15178	11133402	3	True				
ANR	11133424	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		11133402	0					
ANR	11133425	IdentifierDeclType	gs_function_Sd_params_t *		11133402	0					
ANR	11133426	Identifier	params		11133402	1					
ANR	11133427	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		11133402	2		=			
ANR	11133428	Identifier	params		11133402	0					
ANR	11133429	CastExpression	( gs_function_Sd_params_t * ) & penum -> pfn -> params		11133402	1					
ANR	11133430	CastTarget	gs_function_Sd_params_t *		11133402	0					
ANR	11133431	UnaryOperationExpression	& penum -> pfn -> params		11133402	1					
ANR	11133432	UnaryOperator	&		11133402	0					
ANR	11133433	PtrMemberAccess	penum -> pfn -> params		11133402	1					
ANR	11133434	PtrMemberAccess	penum -> pfn		11133402	0					
ANR	11133435	Identifier	penum		11133402	0					
ANR	11133436	Identifier	pfn		11133402	1					
ANR	11133437	Identifier	params		11133402	1					
ANR	11133438	IdentifierDeclStatement	int num_inputs = params -> m ;	455:4:15184:15210	11133402	4	True				
ANR	11133439	IdentifierDecl	num_inputs = params -> m		11133402	0					
ANR	11133440	IdentifierDeclType	int		11133402	0					
ANR	11133441	Identifier	num_inputs		11133402	1					
ANR	11133442	AssignmentExpression	num_inputs = params -> m		11133402	2		=			
ANR	11133443	Identifier	num_inputs		11133402	0					
ANR	11133444	PtrMemberAccess	params -> m		11133402	1					
ANR	11133445	Identifier	params		11133402	0					
ANR	11133446	Identifier	m		11133402	1					
ANR	11133447	IdentifierDeclStatement	int i ;	456:4:15216:15221	11133402	5	True				
ANR	11133448	IdentifierDecl	i		11133402	0					
ANR	11133449	IdentifierDeclType	int		11133402	0					
ANR	11133450	Identifier	i		11133402	1					
ANR	11133451	ExpressionStatement	push ( num_inputs )	459:4:15278:15294	11133402	6	True				
ANR	11133452	CallExpression	push ( num_inputs )		11133402	0					
ANR	11133453	Callee	push		11133402	0					
ANR	11133454	Identifier	push		11133402	0					
ANR	11133455	ArgumentList	num_inputs		11133402	1					
ANR	11133456	Argument	num_inputs		11133402	0					
ANR	11133457	Identifier	num_inputs		11133402	0					
ANR	11133458	ForStatement	for ( i = 0 ; i < num_inputs ; i ++ )		11133402	7					
ANR	11133459	ForInit	i = 0 ;	460:9:15305:15310	11133402	0	True				
ANR	11133460	AssignmentExpression	i = 0		11133402	0		=			
ANR	11133461	Identifier	i		11133402	0					
ANR	11133462	PrimaryExpression	0		11133402	1					
ANR	11133463	Condition	i < num_inputs	460:16:15312:15325	11133402	1	True				
ANR	11133464	RelationalExpression	i < num_inputs		11133402	0		<			
ANR	11133465	Identifier	i		11133402	0					
ANR	11133466	Identifier	num_inputs		11133402	1					
ANR	11133467	PostIncDecOperationExpression	i ++	460:32:15328:15330	11133402	2	True				
ANR	11133468	Identifier	i		11133402	0					
ANR	11133469	IncDec	++		11133402	1					
ANR	11133470	CompoundStatement		14:8:396:435	11133402	3					
ANR	11133471	IdentifierDeclStatement	double dmin = params -> Domain [ 2 * i ] ;	461:8:15343:15378	11133402	0	True				
ANR	11133472	IdentifierDecl	dmin = params -> Domain [ 2 * i ]		11133402	0					
ANR	11133473	IdentifierDeclType	double		11133402	0					
ANR	11133474	Identifier	dmin		11133402	1					
ANR	11133475	AssignmentExpression	dmin = params -> Domain [ 2 * i ]		11133402	2		=			
ANR	11133476	Identifier	dmin		11133402	0					
ANR	11133477	ArrayIndexing	params -> Domain [ 2 * i ]		11133402	1					
ANR	11133478	PtrMemberAccess	params -> Domain		11133402	0					
ANR	11133479	Identifier	params		11133402	0					
ANR	11133480	Identifier	Domain		11133402	1					
ANR	11133481	MultiplicativeExpression	2 * i		11133402	1		*			
ANR	11133482	PrimaryExpression	2		11133402	0					
ANR	11133483	Identifier	i		11133402	1					
ANR	11133484	IdentifierDeclStatement	double dmax = params -> Domain [ 2 * i + 1 ] ;	462:8:15388:15427	11133402	1	True				
ANR	11133485	IdentifierDecl	dmax = params -> Domain [ 2 * i + 1 ]		11133402	0					
ANR	11133486	IdentifierDeclType	double		11133402	0					
ANR	11133487	Identifier	dmax		11133402	1					
ANR	11133488	AssignmentExpression	dmax = params -> Domain [ 2 * i + 1 ]		11133402	2		=			
ANR	11133489	Identifier	dmax		11133402	0					
ANR	11133490	ArrayIndexing	params -> Domain [ 2 * i + 1 ]		11133402	1					
ANR	11133491	PtrMemberAccess	params -> Domain		11133402	0					
ANR	11133492	Identifier	params		11133402	0					
ANR	11133493	Identifier	Domain		11133402	1					
ANR	11133494	AdditiveExpression	2 * i + 1		11133402	1		+			
ANR	11133495	MultiplicativeExpression	2 * i		11133402	0		*			
ANR	11133496	PrimaryExpression	2		11133402	0					
ANR	11133497	Identifier	i		11133402	1					
ANR	11133498	PrimaryExpression	1		11133402	1					
ANR	11133499	ExpressionStatement	"make_real ( op - num_inputs + i + 1 , ( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin ) )"	464:8:15438:15559	11133402	2	True				
ANR	11133500	CallExpression	"make_real ( op - num_inputs + i + 1 , ( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin ) )"		11133402	0					
ANR	11133501	Callee	make_real		11133402	0					
ANR	11133502	Identifier	make_real		11133402	0					
ANR	11133503	ArgumentList	op - num_inputs + i + 1		11133402	1					
ANR	11133504	Argument	op - num_inputs + i + 1		11133402	0					
ANR	11133505	AdditiveExpression	op - num_inputs + i + 1		11133402	0		-			
ANR	11133506	Identifier	op		11133402	0					
ANR	11133507	AdditiveExpression	num_inputs + i + 1		11133402	1		+			
ANR	11133508	Identifier	num_inputs		11133402	0					
ANR	11133509	AdditiveExpression	i + 1		11133402	1		+			
ANR	11133510	Identifier	i		11133402	0					
ANR	11133511	PrimaryExpression	1		11133402	1					
ANR	11133512	Argument	( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin )		11133402	1					
ANR	11133513	CastExpression	( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin )		11133402	0					
ANR	11133514	CastTarget	float		11133402	0					
ANR	11133515	AdditiveExpression	penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin		11133402	1		+			
ANR	11133516	MultiplicativeExpression	penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 )		11133402	0		*			
ANR	11133517	ArrayIndexing	penum -> indexes [ i ]		11133402	0					
ANR	11133518	PtrMemberAccess	penum -> indexes		11133402	0					
ANR	11133519	Identifier	penum		11133402	0					
ANR	11133520	Identifier	indexes		11133402	1					
ANR	11133521	Identifier	i		11133402	1					
ANR	11133522	MultiplicativeExpression	( dmax - dmin ) / ( params -> Size [ i ] - 1 )		11133402	1		/			
ANR	11133523	AdditiveExpression	dmax - dmin		11133402	0		-			
ANR	11133524	Identifier	dmax		11133402	0					
ANR	11133525	Identifier	dmin		11133402	1					
ANR	11133526	AdditiveExpression	params -> Size [ i ] - 1		11133402	1		-			
ANR	11133527	ArrayIndexing	params -> Size [ i ]		11133402	0					
ANR	11133528	PtrMemberAccess	params -> Size		11133402	0					
ANR	11133529	Identifier	params		11133402	0					
ANR	11133530	Identifier	Size		11133402	1					
ANR	11133531	Identifier	i		11133402	1					
ANR	11133532	PrimaryExpression	1		11133402	1					
ANR	11133533	Identifier	dmin		11133402	1					
ANR	11133534	ExpressionStatement	proc = sample_proc	468:4:15572:15590	11133402	8	True				
ANR	11133535	AssignmentExpression	proc = sample_proc		11133402	0		=			
ANR	11133536	Identifier	proc		11133402	0					
ANR	11133537	Identifier	sample_proc		11133402	1					
ANR	11133538	ExpressionStatement	push_op_estack ( sampled_data_continue )	469:4:15635:15672	11133402	9	True				
ANR	11133539	CallExpression	push_op_estack ( sampled_data_continue )		11133402	0					
ANR	11133540	Callee	push_op_estack		11133402	0					
ANR	11133541	Identifier	push_op_estack		11133402	0					
ANR	11133542	ArgumentList	sampled_data_continue		11133402	1					
ANR	11133543	Argument	sampled_data_continue		11133402	0					
ANR	11133544	Identifier	sampled_data_continue		11133402	0					
ANR	11133545	ExpressionStatement	* ++ esp = proc	470:4:15733:15746	11133402	10	True				
ANR	11133546	AssignmentExpression	* ++ esp = proc		11133402	0		=			
ANR	11133547	UnaryOperationExpression	* ++ esp		11133402	0					
ANR	11133548	UnaryOperator	*		11133402	0					
ANR	11133549	UnaryExpression	++ esp		11133402	1					
ANR	11133550	IncDec	++		11133402	0					
ANR	11133551	Identifier	esp		11133402	1					
ANR	11133552	Identifier	proc		11133402	1					
ANR	11133553	ReturnStatement	return o_push_estack ;	471:4:15793:15813	11133402	11	True				
ANR	11133554	Identifier	o_push_estack		11133402	0					
ANR	11133555	ReturnType	static int		11133402	1					
ANR	11133556	Identifier	sampled_data_sample		11133402	2					
ANR	11133557	ParameterList	i_ctx_t * i_ctx_p		11133402	3					
ANR	11133558	Parameter	i_ctx_t * i_ctx_p	448:20:14973:14988	11133402	0	True				
ANR	11133559	ParameterType	i_ctx_t *		11133402	0					
ANR	11133560	Identifier	i_ctx_p		11133402	1					
ANR	11133561	CFGEntryNode	ENTRY		11133402		True				
ANR	11133562	CFGExitNode	EXIT		11133402		True				
ANR	11133563	Symbol	* penum		11133402						
ANR	11133564	Symbol	dmin		11133402						
ANR	11133565	Symbol	params -> Domain		11133402						
ANR	11133566	Symbol	esp		11133402						
ANR	11133567	Symbol	* params -> Domain		11133402						
ANR	11133568	Symbol	* * params		11133402						
ANR	11133569	Symbol	osp		11133402						
ANR	11133570	Symbol	params -> m		11133402						
ANR	11133571	Symbol	* esp		11133402						
ANR	11133572	Symbol	num_inputs		11133402						
ANR	11133573	Symbol	& penum -> pfn -> params		11133402						
ANR	11133574	Symbol	params -> Size		11133402						
ANR	11133575	Symbol	* params		11133402						
ANR	11133576	Symbol	* * penum		11133402						
ANR	11133577	Symbol	o_push_estack		11133402						
ANR	11133578	Symbol	penum -> indexes		11133402						
ANR	11133579	Symbol	op		11133402						
ANR	11133580	Symbol	proc		11133402						
ANR	11133581	Symbol	penum		11133402						
ANR	11133582	Symbol	* params -> Size		11133402						
ANR	11133583	Symbol	i		11133402						
ANR	11133584	Symbol	penum -> pfn		11133402						
ANR	11133585	Symbol	sample_proc		11133402						
ANR	11133586	Symbol	params		11133402						
ANR	11133587	Symbol	dmax		11133402						
ANR	11133588	Symbol	senum		11133402						
ANR	11133589	Symbol	* i		11133402						
ANR	11133590	Symbol	i_ctx_p		11133402						
ANR	11133591	Symbol	* penum -> indexes		11133402						
ANR	11133592	Symbol	sampled_data_continue		11133402						
ANR	11133593	Symbol	* ++ esp		11133402						
ANR	11133594	Function	sampled_data_continue	477:0:15882:19049							
ANR	11133595	FunctionDef	sampled_data_continue (i_ctx_t * i_ctx_p)		11133594	0					
ANR	11133596	CompoundStatement		479:0:15933:19049	11133594	0					
ANR	11133597	IdentifierDeclStatement	os_ptr op = osp ;	480:4:15939:15954	11133594	0	True				
ANR	11133598	IdentifierDecl	op = osp		11133594	0					
ANR	11133599	IdentifierDeclType	os_ptr		11133594	0					
ANR	11133600	Identifier	op		11133594	1					
ANR	11133601	AssignmentExpression	op = osp		11133594	2		=			
ANR	11133602	Identifier	osp		11133594	0					
ANR	11133603	Identifier	osp		11133594	1					
ANR	11133604	IdentifierDeclStatement	gs_sampled_data_enum * penum = senum ;	481:4:15960:15995	11133594	1	True				
ANR	11133605	IdentifierDecl	* penum = senum		11133594	0					
ANR	11133606	IdentifierDeclType	gs_sampled_data_enum *		11133594	0					
ANR	11133607	Identifier	penum		11133594	1					
ANR	11133608	AssignmentExpression	* penum = senum		11133594	2		=			
ANR	11133609	Identifier	senum		11133594	0					
ANR	11133610	Identifier	senum		11133594	1					
ANR	11133611	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params ;	482:4:16001:16094	11133594	2	True				
ANR	11133612	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		11133594	0					
ANR	11133613	IdentifierDeclType	gs_function_Sd_params_t *		11133594	0					
ANR	11133614	Identifier	params		11133594	1					
ANR	11133615	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		11133594	2		=			
ANR	11133616	Identifier	params		11133594	0					
ANR	11133617	CastExpression	( gs_function_Sd_params_t * ) & penum -> pfn -> params		11133594	1					
ANR	11133618	CastTarget	gs_function_Sd_params_t *		11133594	0					
ANR	11133619	UnaryOperationExpression	& penum -> pfn -> params		11133594	1					
ANR	11133620	UnaryOperator	&		11133594	0					
ANR	11133621	PtrMemberAccess	penum -> pfn -> params		11133594	1					
ANR	11133622	PtrMemberAccess	penum -> pfn		11133594	0					
ANR	11133623	Identifier	penum		11133594	0					
ANR	11133624	Identifier	pfn		11133594	1					
ANR	11133625	Identifier	params		11133594	1					
ANR	11133626	IdentifierDeclStatement	"int i , j , num_out = params -> n ;"	484:4:16100:16129	11133594	3	True				
ANR	11133627	IdentifierDecl	i		11133594	0					
ANR	11133628	IdentifierDeclType	int		11133594	0					
ANR	11133629	Identifier	i		11133594	1					
ANR	11133630	IdentifierDecl	j		11133594	1					
ANR	11133631	IdentifierDeclType	int		11133594	0					
ANR	11133632	Identifier	j		11133594	1					
ANR	11133633	IdentifierDecl	num_out = params -> n		11133594	2					
ANR	11133634	IdentifierDeclType	int		11133594	0					
ANR	11133635	Identifier	num_out		11133594	1					
ANR	11133636	AssignmentExpression	num_out = params -> n		11133594	2		=			
ANR	11133637	Identifier	num_out		11133594	0					
ANR	11133638	PtrMemberAccess	params -> n		11133594	1					
ANR	11133639	Identifier	params		11133594	0					
ANR	11133640	Identifier	n		11133594	1					
ANR	11133641	IdentifierDeclStatement	int code = 0 ;	485:4:16135:16147	11133594	4	True				
ANR	11133642	IdentifierDecl	code = 0		11133594	0					
ANR	11133643	IdentifierDeclType	int		11133594	0					
ANR	11133644	Identifier	code		11133594	1					
ANR	11133645	AssignmentExpression	code = 0		11133594	2		=			
ANR	11133646	Identifier	code		11133594	0					
ANR	11133647	PrimaryExpression	0		11133594	1					
ANR	11133648	IdentifierDeclStatement	byte * data_ptr ;	486:4:16153:16168	11133594	5	True				
ANR	11133649	IdentifierDecl	* data_ptr		11133594	0					
ANR	11133650	IdentifierDeclType	byte *		11133594	0					
ANR	11133651	Identifier	data_ptr		11133594	1					
ANR	11133652	IdentifierDeclStatement	double sampled_data_value_max = ( double ) ( ( 1 << params -> BitsPerSample ) - 1 ) ;	487:4:16174:16248	11133594	6	True				
ANR	11133653	IdentifierDecl	sampled_data_value_max = ( double ) ( ( 1 << params -> BitsPerSample ) - 1 )		11133594	0					
ANR	11133654	IdentifierDeclType	double		11133594	0					
ANR	11133655	Identifier	sampled_data_value_max		11133594	1					
ANR	11133656	AssignmentExpression	sampled_data_value_max = ( double ) ( ( 1 << params -> BitsPerSample ) - 1 )		11133594	2		=			
ANR	11133657	Identifier	sampled_data_value_max		11133594	0					
ANR	11133658	CastExpression	( double ) ( ( 1 << params -> BitsPerSample ) - 1 )		11133594	1					
ANR	11133659	CastTarget	double		11133594	0					
ANR	11133660	AdditiveExpression	( 1 << params -> BitsPerSample ) - 1		11133594	1		-			
ANR	11133661	ShiftExpression	1 << params -> BitsPerSample		11133594	0		<<			
ANR	11133662	PrimaryExpression	1		11133594	0					
ANR	11133663	PtrMemberAccess	params -> BitsPerSample		11133594	1					
ANR	11133664	Identifier	params		11133594	0					
ANR	11133665	Identifier	BitsPerSample		11133594	1					
ANR	11133666	PrimaryExpression	1		11133594	1					
ANR	11133667	IdentifierDeclStatement	"int bps = bits2bytes ( params -> BitsPerSample ) , stack_depth_adjust = 0 ;"	488:4:16254:16321	11133594	7	True				
ANR	11133668	IdentifierDecl	bps = bits2bytes ( params -> BitsPerSample )		11133594	0					
ANR	11133669	IdentifierDeclType	int		11133594	0					
ANR	11133670	Identifier	bps		11133594	1					
ANR	11133671	AssignmentExpression	bps = bits2bytes ( params -> BitsPerSample )		11133594	2		=			
ANR	11133672	Identifier	bps		11133594	0					
ANR	11133673	CallExpression	bits2bytes ( params -> BitsPerSample )		11133594	1					
ANR	11133674	Callee	bits2bytes		11133594	0					
ANR	11133675	Identifier	bits2bytes		11133594	0					
ANR	11133676	ArgumentList	params -> BitsPerSample		11133594	1					
ANR	11133677	Argument	params -> BitsPerSample		11133594	0					
ANR	11133678	PtrMemberAccess	params -> BitsPerSample		11133594	0					
ANR	11133679	Identifier	params		11133594	0					
ANR	11133680	Identifier	BitsPerSample		11133594	1					
ANR	11133681	IdentifierDecl	stack_depth_adjust = 0		11133594	1					
ANR	11133682	IdentifierDeclType	int		11133594	0					
ANR	11133683	Identifier	stack_depth_adjust		11133594	1					
ANR	11133684	AssignmentExpression	stack_depth_adjust = 0		11133594	2		=			
ANR	11133685	Identifier	stack_depth_adjust		11133594	0					
ANR	11133686	PrimaryExpression	0		11133594	1					
ANR	11133687	IfStatement	if ( num_out + O_STACK_PAD + penum -> o_stack_depth != ref_stack_count ( & o_stack ) )		11133594	8					
ANR	11133688	Condition	num_out + O_STACK_PAD + penum -> o_stack_depth != ref_stack_count ( & o_stack )	494:8:16497:16569	11133594	0	True				
ANR	11133689	EqualityExpression	num_out + O_STACK_PAD + penum -> o_stack_depth != ref_stack_count ( & o_stack )		11133594	0		!=			
ANR	11133690	AdditiveExpression	num_out + O_STACK_PAD + penum -> o_stack_depth		11133594	0		+			
ANR	11133691	Identifier	num_out		11133594	0					
ANR	11133692	AdditiveExpression	O_STACK_PAD + penum -> o_stack_depth		11133594	1		+			
ANR	11133693	Identifier	O_STACK_PAD		11133594	0					
ANR	11133694	PtrMemberAccess	penum -> o_stack_depth		11133594	1					
ANR	11133695	Identifier	penum		11133594	0					
ANR	11133696	Identifier	o_stack_depth		11133594	1					
ANR	11133697	CallExpression	ref_stack_count ( & o_stack )		11133594	1					
ANR	11133698	Callee	ref_stack_count		11133594	0					
ANR	11133699	Identifier	ref_stack_count		11133594	0					
ANR	11133700	ArgumentList	& o_stack		11133594	1					
ANR	11133701	Argument	& o_stack		11133594	0					
ANR	11133702	UnaryOperationExpression	& o_stack		11133594	0					
ANR	11133703	UnaryOperator	&		11133594	0					
ANR	11133704	Identifier	o_stack		11133594	1					
ANR	11133705	CompoundStatement		16:83:638:638	11133594	1					
ANR	11133706	ExpressionStatement	stack_depth_adjust = ref_stack_count ( & o_stack ) - penum -> o_stack_depth	495:8:16582:16651	11133594	0	True				
ANR	11133707	AssignmentExpression	stack_depth_adjust = ref_stack_count ( & o_stack ) - penum -> o_stack_depth		11133594	0		=			
ANR	11133708	Identifier	stack_depth_adjust		11133594	0					
ANR	11133709	AdditiveExpression	ref_stack_count ( & o_stack ) - penum -> o_stack_depth		11133594	1		-			
ANR	11133710	CallExpression	ref_stack_count ( & o_stack )		11133594	0					
ANR	11133711	Callee	ref_stack_count		11133594	0					
ANR	11133712	Identifier	ref_stack_count		11133594	0					
ANR	11133713	ArgumentList	& o_stack		11133594	1					
ANR	11133714	Argument	& o_stack		11133594	0					
ANR	11133715	UnaryOperationExpression	& o_stack		11133594	0					
ANR	11133716	UnaryOperator	&		11133594	0					
ANR	11133717	Identifier	o_stack		11133594	1					
ANR	11133718	PtrMemberAccess	penum -> o_stack_depth		11133594	1					
ANR	11133719	Identifier	penum		11133594	0					
ANR	11133720	Identifier	o_stack_depth		11133594	1					
ANR	11133721	IfStatement	if ( stack_depth_adjust < 0 )		11133594	1					
ANR	11133722	Condition	stack_depth_adjust < 0	497:12:16666:16687	11133594	0	True				
ANR	11133723	RelationalExpression	stack_depth_adjust < 0		11133594	0		<			
ANR	11133724	Identifier	stack_depth_adjust		11133594	0					
ANR	11133725	PrimaryExpression	0		11133594	1					
ANR	11133726	CompoundStatement		19:36:756:756	11133594	1					
ANR	11133727	ExpressionStatement	push ( - stack_depth_adjust )	507:12:17224:17249	11133594	0	True				
ANR	11133728	CallExpression	push ( - stack_depth_adjust )		11133594	0					
ANR	11133729	Callee	push		11133594	0					
ANR	11133730	Identifier	push		11133594	0					
ANR	11133731	ArgumentList	- stack_depth_adjust		11133594	1					
ANR	11133732	Argument	- stack_depth_adjust		11133594	0					
ANR	11133733	UnaryOperationExpression	- stack_depth_adjust		11133594	0					
ANR	11133734	UnaryOperator	-		11133594	0					
ANR	11133735	Identifier	stack_depth_adjust		11133594	1					
ANR	11133736	ExpressionStatement	"ifree_object ( penum -> pfn , ""sampled_data_continue(pfn)"" )"	508:12:17263:17317	11133594	1	True				
ANR	11133737	CallExpression	"ifree_object ( penum -> pfn , ""sampled_data_continue(pfn)"" )"		11133594	0					
ANR	11133738	Callee	ifree_object		11133594	0					
ANR	11133739	Identifier	ifree_object		11133594	0					
ANR	11133740	ArgumentList	penum -> pfn		11133594	1					
ANR	11133741	Argument	penum -> pfn		11133594	0					
ANR	11133742	PtrMemberAccess	penum -> pfn		11133594	0					
ANR	11133743	Identifier	penum		11133594	0					
ANR	11133744	Identifier	pfn		11133594	1					
ANR	11133745	Argument	"""sampled_data_continue(pfn)"""		11133594	1					
ANR	11133746	PrimaryExpression	"""sampled_data_continue(pfn)"""		11133594	0					
ANR	11133747	ExpressionStatement	"ifree_object ( penum , ""sampled_data_continue((enum)"" )"	509:12:17331:17382	11133594	2	True				
ANR	11133748	CallExpression	"ifree_object ( penum , ""sampled_data_continue((enum)"" )"		11133594	0					
ANR	11133749	Callee	ifree_object		11133594	0					
ANR	11133750	Identifier	ifree_object		11133594	0					
ANR	11133751	ArgumentList	penum		11133594	1					
ANR	11133752	Argument	penum		11133594	0					
ANR	11133753	Identifier	penum		11133594	0					
ANR	11133754	Argument	"""sampled_data_continue((enum)"""		11133594	1					
ANR	11133755	PrimaryExpression	"""sampled_data_continue((enum)"""		11133594	0					
ANR	11133756	ExpressionStatement	return_error ( gs_error_undefinedresult )	510:12:17396:17434	11133594	3	True				
ANR	11133757	CallExpression	return_error ( gs_error_undefinedresult )		11133594	0					
ANR	11133758	Callee	return_error		11133594	0					
ANR	11133759	Identifier	return_error		11133594	0					
ANR	11133760	ArgumentList	gs_error_undefinedresult		11133594	1					
ANR	11133761	Argument	gs_error_undefinedresult		11133594	0					
ANR	11133762	Identifier	gs_error_undefinedresult		11133594	0					
ANR	11133763	ExpressionStatement	"data_ptr = cube_ptr_from_index ( params , penum -> indexes )"	515:4:17501:17555	11133594	9	True				
ANR	11133764	AssignmentExpression	"data_ptr = cube_ptr_from_index ( params , penum -> indexes )"		11133594	0		=			
ANR	11133765	Identifier	data_ptr		11133594	0					
ANR	11133766	CallExpression	"cube_ptr_from_index ( params , penum -> indexes )"		11133594	1					
ANR	11133767	Callee	cube_ptr_from_index		11133594	0					
ANR	11133768	Identifier	cube_ptr_from_index		11133594	0					
ANR	11133769	ArgumentList	params		11133594	1					
ANR	11133770	Argument	params		11133594	0					
ANR	11133771	Identifier	params		11133594	0					
ANR	11133772	Argument	penum -> indexes		11133594	1					
ANR	11133773	PtrMemberAccess	penum -> indexes		11133594	0					
ANR	11133774	Identifier	penum		11133594	0					
ANR	11133775	Identifier	indexes		11133594	1					
ANR	11133776	ForStatement	for ( i = 0 ; i < num_out ; i ++ )		11133594	10					
ANR	11133777	ForInit	i = 0 ;	516:9:17566:17569	11133594	0	True				
ANR	11133778	AssignmentExpression	i = 0		11133594	0		=			
ANR	11133779	Identifier	i		11133594	0					
ANR	11133780	PrimaryExpression	0		11133594	1					
ANR	11133781	Condition	i < num_out	516:14:17571:17581	11133594	1	True				
ANR	11133782	RelationalExpression	i < num_out		11133594	0		<			
ANR	11133783	Identifier	i		11133594	0					
ANR	11133784	Identifier	num_out		11133594	1					
ANR	11133785	PostIncDecOperationExpression	i ++	516:27:17584:17586	11133594	2	True				
ANR	11133786	Identifier	i		11133594	0					
ANR	11133787	IncDec	++		11133594	1					
ANR	11133788	CompoundStatement		42:8:1749:1787	11133594	3					
ANR	11133789	IdentifierDeclStatement	ulong cv ;	517:8:17599:17607	11133594	0	True				
ANR	11133790	IdentifierDecl	cv		11133594	0					
ANR	11133791	IdentifierDeclType	ulong		11133594	0					
ANR	11133792	Identifier	cv		11133594	1					
ANR	11133793	IdentifierDeclStatement	double value ;	518:8:17617:17629	11133594	1	True				
ANR	11133794	IdentifierDecl	value		11133594	0					
ANR	11133795	IdentifierDeclType	double		11133594	0					
ANR	11133796	Identifier	value		11133594	1					
ANR	11133797	IdentifierDeclStatement	double rmin = params -> Range [ 2 * i ] ;	519:8:17639:17673	11133594	2	True				
ANR	11133798	IdentifierDecl	rmin = params -> Range [ 2 * i ]		11133594	0					
ANR	11133799	IdentifierDeclType	double		11133594	0					
ANR	11133800	Identifier	rmin		11133594	1					
ANR	11133801	AssignmentExpression	rmin = params -> Range [ 2 * i ]		11133594	2		=			
ANR	11133802	Identifier	rmin		11133594	0					
ANR	11133803	ArrayIndexing	params -> Range [ 2 * i ]		11133594	1					
ANR	11133804	PtrMemberAccess	params -> Range		11133594	0					
ANR	11133805	Identifier	params		11133594	0					
ANR	11133806	Identifier	Range		11133594	1					
ANR	11133807	MultiplicativeExpression	2 * i		11133594	1		*			
ANR	11133808	PrimaryExpression	2		11133594	0					
ANR	11133809	Identifier	i		11133594	1					
ANR	11133810	IdentifierDeclStatement	double rmax = params -> Range [ 2 * i + 1 ] ;	520:8:17683:17721	11133594	3	True				
ANR	11133811	IdentifierDecl	rmax = params -> Range [ 2 * i + 1 ]		11133594	0					
ANR	11133812	IdentifierDeclType	double		11133594	0					
ANR	11133813	Identifier	rmax		11133594	1					
ANR	11133814	AssignmentExpression	rmax = params -> Range [ 2 * i + 1 ]		11133594	2		=			
ANR	11133815	Identifier	rmax		11133594	0					
ANR	11133816	ArrayIndexing	params -> Range [ 2 * i + 1 ]		11133594	1					
ANR	11133817	PtrMemberAccess	params -> Range		11133594	0					
ANR	11133818	Identifier	params		11133594	0					
ANR	11133819	Identifier	Range		11133594	1					
ANR	11133820	AdditiveExpression	2 * i + 1		11133594	1		+			
ANR	11133821	MultiplicativeExpression	2 * i		11133594	0		*			
ANR	11133822	PrimaryExpression	2		11133594	0					
ANR	11133823	Identifier	i		11133594	1					
ANR	11133824	PrimaryExpression	1		11133594	1					
ANR	11133825	ExpressionStatement	"code = real_param ( op + i - num_out + 1 , & value )"	522:8:17732:17779	11133594	4	True				
ANR	11133826	AssignmentExpression	"code = real_param ( op + i - num_out + 1 , & value )"		11133594	0		=			
ANR	11133827	Identifier	code		11133594	0					
ANR	11133828	CallExpression	"real_param ( op + i - num_out + 1 , & value )"		11133594	1					
ANR	11133829	Callee	real_param		11133594	0					
ANR	11133830	Identifier	real_param		11133594	0					
ANR	11133831	ArgumentList	op + i - num_out + 1		11133594	1					
ANR	11133832	Argument	op + i - num_out + 1		11133594	0					
ANR	11133833	AdditiveExpression	op + i - num_out + 1		11133594	0		+			
ANR	11133834	Identifier	op		11133594	0					
ANR	11133835	AdditiveExpression	i - num_out + 1		11133594	1		-			
ANR	11133836	Identifier	i		11133594	0					
ANR	11133837	AdditiveExpression	num_out + 1		11133594	1		+			
ANR	11133838	Identifier	num_out		11133594	0					
ANR	11133839	PrimaryExpression	1		11133594	1					
ANR	11133840	Argument	& value		11133594	1					
ANR	11133841	UnaryOperationExpression	& value		11133594	0					
ANR	11133842	UnaryOperator	&		11133594	0					
ANR	11133843	Identifier	value		11133594	1					
ANR	11133844	IfStatement	if ( code < 0 )		11133594	5					
ANR	11133845	Condition	code < 0	523:12:17793:17800	11133594	0	True				
ANR	11133846	RelationalExpression	code < 0		11133594	0		<			
ANR	11133847	Identifier	code		11133594	0					
ANR	11133848	PrimaryExpression	0		11133594	1					
ANR	11133849	ReturnStatement	return code ;	524:12:17815:17826	11133594	1	True				
ANR	11133850	Identifier	code		11133594	0					
ANR	11133851	IfStatement	if ( value < rmin )		11133594	6					
ANR	11133852	Condition	value < rmin	525:12:17840:17851	11133594	0	True				
ANR	11133853	RelationalExpression	value < rmin		11133594	0		<			
ANR	11133854	Identifier	value		11133594	0					
ANR	11133855	Identifier	rmin		11133594	1					
ANR	11133856	ExpressionStatement	value = rmin	526:12:17866:17878	11133594	1	True				
ANR	11133857	AssignmentExpression	value = rmin		11133594	0		=			
ANR	11133858	Identifier	value		11133594	0					
ANR	11133859	Identifier	rmin		11133594	1					
ANR	11133860	ElseStatement	else		11133594	0					
ANR	11133861	IfStatement	if ( value > rmax )		11133594	0					
ANR	11133862	Condition	value > rmax	527:17:17897:17908	11133594	0	True				
ANR	11133863	RelationalExpression	value > rmax		11133594	0		>			
ANR	11133864	Identifier	value		11133594	0					
ANR	11133865	Identifier	rmax		11133594	1					
ANR	11133866	ExpressionStatement	value = rmax	528:12:17923:17935	11133594	1	True				
ANR	11133867	AssignmentExpression	value = rmax		11133594	0		=			
ANR	11133868	Identifier	value		11133594	0					
ANR	11133869	Identifier	rmax		11133594	1					
ANR	11133870	ExpressionStatement	value = ( value - rmin ) / ( rmax - rmin )	529:8:17945:17983	11133594	7	True				
ANR	11133871	AssignmentExpression	value = ( value - rmin ) / ( rmax - rmin )		11133594	0		=			
ANR	11133872	Identifier	value		11133594	0					
ANR	11133873	MultiplicativeExpression	( value - rmin ) / ( rmax - rmin )		11133594	1		/			
ANR	11133874	AdditiveExpression	value - rmin		11133594	0		-			
ANR	11133875	Identifier	value		11133594	0					
ANR	11133876	Identifier	rmin		11133594	1					
ANR	11133877	AdditiveExpression	rmax - rmin		11133594	1		-			
ANR	11133878	Identifier	rmax		11133594	0					
ANR	11133879	Identifier	rmin		11133594	1					
ANR	11133880	ExpressionStatement	cv = ( int ) ( value * sampled_data_value_max + 0.5 )	530:8:18020:18069	11133594	8	True				
ANR	11133881	AssignmentExpression	cv = ( int ) ( value * sampled_data_value_max + 0.5 )		11133594	0		=			
ANR	11133882	Identifier	cv		11133594	0					
ANR	11133883	CastExpression	( int ) ( value * sampled_data_value_max + 0.5 )		11133594	1					
ANR	11133884	CastTarget	int		11133594	0					
ANR	11133885	AdditiveExpression	value * sampled_data_value_max + 0.5		11133594	1		+			
ANR	11133886	MultiplicativeExpression	value * sampled_data_value_max		11133594	0		*			
ANR	11133887	Identifier	value		11133594	0					
ANR	11133888	Identifier	sampled_data_value_max		11133594	1					
ANR	11133889	PrimaryExpression	0.5		11133594	1					
ANR	11133890	ForStatement	for ( j = 0 ; j < bps ; j ++ )		11133594	9					
ANR	11133891	ForInit	j = 0 ;	531:13:18084:18089	11133594	0	True				
ANR	11133892	AssignmentExpression	j = 0		11133594	0		=			
ANR	11133893	Identifier	j		11133594	0					
ANR	11133894	PrimaryExpression	0		11133594	1					
ANR	11133895	Condition	j < bps	531:20:18091:18097	11133594	1	True				
ANR	11133896	RelationalExpression	j < bps		11133594	0		<			
ANR	11133897	Identifier	j		11133594	0					
ANR	11133898	Identifier	bps		11133594	1					
ANR	11133899	PostIncDecOperationExpression	j ++	531:29:18100:18102	11133594	2	True				
ANR	11133900	Identifier	j		11133594	0					
ANR	11133901	IncDec	++		11133594	1					
ANR	11133902	ExpressionStatement	data_ptr [ bps * i + j ] = ( byte ) ( cv >> ( ( bps - 1 - j ) * 8 ) )	532:12:18117:18174	11133594	3	True				
ANR	11133903	AssignmentExpression	data_ptr [ bps * i + j ] = ( byte ) ( cv >> ( ( bps - 1 - j ) * 8 ) )		11133594	0		=			
ANR	11133904	ArrayIndexing	data_ptr [ bps * i + j ]		11133594	0					
ANR	11133905	Identifier	data_ptr		11133594	0					
ANR	11133906	AdditiveExpression	bps * i + j		11133594	1		+			
ANR	11133907	MultiplicativeExpression	bps * i		11133594	0		*			
ANR	11133908	Identifier	bps		11133594	0					
ANR	11133909	Identifier	i		11133594	1					
ANR	11133910	Identifier	j		11133594	1					
ANR	11133911	CastExpression	( byte ) ( cv >> ( ( bps - 1 - j ) * 8 ) )		11133594	1					
ANR	11133912	CastTarget	byte		11133594	0					
ANR	11133913	ShiftExpression	cv >> ( ( bps - 1 - j ) * 8 )		11133594	1		>>			
ANR	11133914	Identifier	cv		11133594	0					
ANR	11133915	MultiplicativeExpression	( bps - 1 - j ) * 8		11133594	1		*			
ANR	11133916	AdditiveExpression	bps - 1 - j		11133594	0		-			
ANR	11133917	Identifier	bps		11133594	0					
ANR	11133918	AdditiveExpression	1 - j		11133594	1		-			
ANR	11133919	PrimaryExpression	1		11133594	0					
ANR	11133920	Identifier	j		11133594	1					
ANR	11133921	PrimaryExpression	8		11133594	1					
ANR	11133922	ExpressionStatement	pop ( num_out )	534:4:18202:18214	11133594	11	True				
ANR	11133923	CallExpression	pop ( num_out )		11133594	0					
ANR	11133924	Callee	pop		11133594	0					
ANR	11133925	Identifier	pop		11133594	0					
ANR	11133926	ArgumentList	num_out		11133594	1					
ANR	11133927	Argument	num_out		11133594	0					
ANR	11133928	Identifier	num_out		11133594	0					
ANR	11133929	IfStatement	"if ( increment_cube_indexes ( params , penum -> indexes ) )"		11133594	12					
ANR	11133930	Condition	"increment_cube_indexes ( params , penum -> indexes )"	538:8:18318:18363	11133594	0	True				
ANR	11133931	CallExpression	"increment_cube_indexes ( params , penum -> indexes )"		11133594	0					
ANR	11133932	Callee	increment_cube_indexes		11133594	0					
ANR	11133933	Identifier	increment_cube_indexes		11133594	0					
ANR	11133934	ArgumentList	params		11133594	1					
ANR	11133935	Argument	params		11133594	0					
ANR	11133936	Identifier	params		11133594	0					
ANR	11133937	Argument	penum -> indexes		11133594	1					
ANR	11133938	PtrMemberAccess	penum -> indexes		11133594	0					
ANR	11133939	Identifier	penum		11133594	0					
ANR	11133940	Identifier	indexes		11133594	1					
ANR	11133941	CompoundStatement		60:56:2432:2432	11133594	1					
ANR	11133942	IfStatement	if ( stack_depth_adjust == 0 )		11133594	0					
ANR	11133943	Condition	stack_depth_adjust == 0	539:12:18380:18402	11133594	0	True				
ANR	11133944	EqualityExpression	stack_depth_adjust == 0		11133594	0		==			
ANR	11133945	Identifier	stack_depth_adjust		11133594	0					
ANR	11133946	PrimaryExpression	0		11133594	1					
ANR	11133947	ExpressionStatement	pop ( O_STACK_PAD )	540:12:18417:18433	11133594	1	True				
ANR	11133948	CallExpression	pop ( O_STACK_PAD )		11133594	0					
ANR	11133949	Callee	pop		11133594	0					
ANR	11133950	Identifier	pop		11133594	0					
ANR	11133951	ArgumentList	O_STACK_PAD		11133594	1					
ANR	11133952	Argument	O_STACK_PAD		11133594	0					
ANR	11133953	Identifier	O_STACK_PAD		11133594	0					
ANR	11133954	ElseStatement	else		11133594	0					
ANR	11133955	ExpressionStatement	pop ( stack_depth_adjust - num_out )	542:12:18495:18528	11133594	0	True				
ANR	11133956	CallExpression	pop ( stack_depth_adjust - num_out )		11133594	0					
ANR	11133957	Callee	pop		11133594	0					
ANR	11133958	Identifier	pop		11133594	0					
ANR	11133959	ArgumentList	stack_depth_adjust - num_out		11133594	1					
ANR	11133960	Argument	stack_depth_adjust - num_out		11133594	0					
ANR	11133961	AdditiveExpression	stack_depth_adjust - num_out		11133594	0		-			
ANR	11133962	Identifier	stack_depth_adjust		11133594	0					
ANR	11133963	Identifier	num_out		11133594	1					
ANR	11133964	ExpressionStatement	code = 0	544:8:18592:18600	11133594	1	True				
ANR	11133965	AssignmentExpression	code = 0		11133594	0		=			
ANR	11133966	Identifier	code		11133594	0					
ANR	11133967	PrimaryExpression	0		11133594	1					
ANR	11133968	IfStatement	if ( esp_finish_proc != 0 )		11133594	2					
ANR	11133969	Condition	esp_finish_proc != 0	545:12:18614:18633	11133594	0	True				
ANR	11133970	EqualityExpression	esp_finish_proc != 0		11133594	0		!=			
ANR	11133971	Identifier	esp_finish_proc		11133594	0					
ANR	11133972	PrimaryExpression	0		11133594	1					
ANR	11133973	ExpressionStatement	code = esp_finish_proc ( i_ctx_p )	546:12:18648:18679	11133594	1	True				
ANR	11133974	AssignmentExpression	code = esp_finish_proc ( i_ctx_p )		11133594	0		=			
ANR	11133975	Identifier	code		11133594	0					
ANR	11133976	CallExpression	esp_finish_proc ( i_ctx_p )		11133594	1					
ANR	11133977	Callee	esp_finish_proc		11133594	0					
ANR	11133978	Identifier	esp_finish_proc		11133594	0					
ANR	11133979	ArgumentList	i_ctx_p		11133594	1					
ANR	11133980	Argument	i_ctx_p		11133594	0					
ANR	11133981	Identifier	i_ctx_p		11133594	0					
ANR	11133982	ReturnStatement	return code ;	548:8:18690:18701	11133594	3	True				
ANR	11133983	Identifier	code		11133594	0					
ANR	11133984	ElseStatement	else		11133594	0					
ANR	11133985	CompoundStatement		71:11:2780:2780	11133594	0					
ANR	11133986	IfStatement	if ( stack_depth_adjust )		11133594	0					
ANR	11133987	Condition	stack_depth_adjust	550:12:18728:18745	11133594	0	True				
ANR	11133988	Identifier	stack_depth_adjust		11133594	0					
ANR	11133989	CompoundStatement		72:32:2814:2814	11133594	1					
ANR	11133990	ExpressionStatement	stack_depth_adjust -= num_out	551:12:18762:18791	11133594	0	True				
ANR	11133991	AssignmentExpression	stack_depth_adjust -= num_out		11133594	0		-=			
ANR	11133992	Identifier	stack_depth_adjust		11133594	0					
ANR	11133993	Identifier	num_out		11133594	1					
ANR	11133994	ExpressionStatement	push ( O_STACK_PAD - stack_depth_adjust )	552:12:18805:18843	11133594	1	True				
ANR	11133995	CallExpression	push ( O_STACK_PAD - stack_depth_adjust )		11133594	0					
ANR	11133996	Callee	push		11133594	0					
ANR	11133997	Identifier	push		11133594	0					
ANR	11133998	ArgumentList	O_STACK_PAD - stack_depth_adjust		11133594	1					
ANR	11133999	Argument	O_STACK_PAD - stack_depth_adjust		11133594	0					
ANR	11134000	AdditiveExpression	O_STACK_PAD - stack_depth_adjust		11133594	0		-			
ANR	11134001	Identifier	O_STACK_PAD		11133594	0					
ANR	11134002	Identifier	stack_depth_adjust		11133594	1					
ANR	11134003	ForStatement	for ( i = 0 ; i < O_STACK_PAD - stack_depth_adjust ; i ++ )		11133594	2					
ANR	11134004	ForInit	i = 0 ;	553:17:18862:18865	11133594	0	True				
ANR	11134005	AssignmentExpression	i = 0		11133594	0		=			
ANR	11134006	Identifier	i		11133594	0					
ANR	11134007	PrimaryExpression	0		11133594	1					
ANR	11134008	Condition	i < O_STACK_PAD - stack_depth_adjust	553:21:18866:18899	11133594	1	True				
ANR	11134009	RelationalExpression	i < O_STACK_PAD - stack_depth_adjust		11133594	0		<			
ANR	11134010	Identifier	i		11133594	0					
ANR	11134011	AdditiveExpression	O_STACK_PAD - stack_depth_adjust		11133594	1		-			
ANR	11134012	Identifier	O_STACK_PAD		11133594	0					
ANR	11134013	Identifier	stack_depth_adjust		11133594	1					
ANR	11134014	PostIncDecOperationExpression	i ++	553:56:18901:18903	11133594	2	True				
ANR	11134015	Identifier	i		11133594	0					
ANR	11134016	IncDec	++		11133594	1					
ANR	11134017	ExpressionStatement	make_null ( op - i )	554:16:18922:18939	11133594	3	True				
ANR	11134018	CallExpression	make_null ( op - i )		11133594	0					
ANR	11134019	Callee	make_null		11133594	0					
ANR	11134020	Identifier	make_null		11133594	0					
ANR	11134021	ArgumentList	op - i		11133594	1					
ANR	11134022	Argument	op - i		11133594	0					
ANR	11134023	AdditiveExpression	op - i		11133594	0		-			
ANR	11134024	Identifier	op		11133594	0					
ANR	11134025	Identifier	i		11133594	1					
ANR	11134026	ReturnStatement	return sampled_data_sample ( i_ctx_p ) ;	560:4:19012:19047	11133594	13	True				
ANR	11134027	CallExpression	sampled_data_sample ( i_ctx_p )		11133594	0					
ANR	11134028	Callee	sampled_data_sample		11133594	0					
ANR	11134029	Identifier	sampled_data_sample		11133594	0					
ANR	11134030	ArgumentList	i_ctx_p		11133594	1					
ANR	11134031	Argument	i_ctx_p		11133594	0					
ANR	11134032	Identifier	i_ctx_p		11133594	0					
ANR	11134033	ReturnType	static int		11133594	1					
ANR	11134034	Identifier	sampled_data_continue		11133594	2					
ANR	11134035	ParameterList	i_ctx_t * i_ctx_p		11133594	3					
ANR	11134036	Parameter	i_ctx_t * i_ctx_p	478:22:15915:15930	11133594	0	True				
ANR	11134037	ParameterType	i_ctx_t *		11133594	0					
ANR	11134038	Identifier	i_ctx_p		11133594	1					
ANR	11134039	CFGEntryNode	ENTRY		11133594		True				
ANR	11134040	CFGExitNode	EXIT		11133594		True				
ANR	11134041	Symbol	* penum		11133594						
ANR	11134042	Symbol	params -> BitsPerSample		11133594						
ANR	11134043	Symbol	esp_finish_proc		11133594						
ANR	11134044	Symbol	code		11133594						
ANR	11134045	Symbol	& value		11133594						
ANR	11134046	Symbol	rmax		11133594						
ANR	11134047	Symbol	* params -> Range		11133594						
ANR	11134048	Symbol	* * params		11133594						
ANR	11134049	Symbol	sampled_data_sample		11133594						
ANR	11134050	Symbol	osp		11133594						
ANR	11134051	Symbol	* data_ptr		11133594						
ANR	11134052	Symbol	gs_error_undefinedresult		11133594						
ANR	11134053	Symbol	increment_cube_indexes		11133594						
ANR	11134054	Symbol	O_STACK_PAD		11133594						
ANR	11134055	Symbol	params -> n		11133594						
ANR	11134056	Symbol	num_out		11133594						
ANR	11134057	Symbol	rmin		11133594						
ANR	11134058	Symbol	cube_ptr_from_index		11133594						
ANR	11134059	Symbol	& penum -> pfn -> params		11133594						
ANR	11134060	Symbol	value		11133594						
ANR	11134061	Symbol	* params		11133594						
ANR	11134062	Symbol	penum -> indexes		11133594						
ANR	11134063	Symbol	op		11133594						
ANR	11134064	Symbol	bps		11133594						
ANR	11134065	Symbol	sampled_data_value_max		11133594						
ANR	11134066	Symbol	penum		11133594						
ANR	11134067	Symbol	i		11133594						
ANR	11134068	Symbol	j		11133594						
ANR	11134069	Symbol	penum -> pfn		11133594						
ANR	11134070	Symbol	params		11133594						
ANR	11134071	Symbol	bits2bytes		11133594						
ANR	11134072	Symbol	senum		11133594						
ANR	11134073	Symbol	* bps		11133594						
ANR	11134074	Symbol	cv		11133594						
ANR	11134075	Symbol	* i		11133594						
ANR	11134076	Symbol	* j		11133594						
ANR	11134077	Symbol	i_ctx_p		11133594						
ANR	11134078	Symbol	& o_stack		11133594						
ANR	11134079	Symbol	ref_stack_count		11133594						
ANR	11134080	Symbol	params -> Range		11133594						
ANR	11134081	Symbol	real_param		11133594						
ANR	11134082	Symbol	stack_depth_adjust		11133594						
ANR	11134083	Symbol	penum -> o_stack_depth		11133594						
ANR	11134084	Symbol	data_ptr		11133594						
ANR	11134085	Function	sampled_data_finish	566:0:19140:20046							
ANR	11134086	FunctionDef	sampled_data_finish (i_ctx_t * i_ctx_p)		11134085	0					
ANR	11134087	CompoundStatement		568:0:19189:20046	11134085	0					
ANR	11134088	IdentifierDeclStatement	os_ptr op = osp ;	569:4:19195:19210	11134085	0	True				
ANR	11134089	IdentifierDecl	op = osp		11134085	0					
ANR	11134090	IdentifierDeclType	os_ptr		11134085	0					
ANR	11134091	Identifier	op		11134085	1					
ANR	11134092	AssignmentExpression	op = osp		11134085	2		=			
ANR	11134093	Identifier	osp		11134085	0					
ANR	11134094	Identifier	osp		11134085	1					
ANR	11134095	IdentifierDeclStatement	gs_sampled_data_enum * penum = senum ;	570:4:19216:19251	11134085	1	True				
ANR	11134096	IdentifierDecl	* penum = senum		11134085	0					
ANR	11134097	IdentifierDeclType	gs_sampled_data_enum *		11134085	0					
ANR	11134098	Identifier	penum		11134085	1					
ANR	11134099	AssignmentExpression	* penum = senum		11134085	2		=			
ANR	11134100	Identifier	senum		11134085	0					
ANR	11134101	Identifier	senum		11134085	1					
ANR	11134102	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params ;	572:4:19318:19407	11134085	2	True				
ANR	11134103	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		11134085	0					
ANR	11134104	IdentifierDeclType	gs_function_Sd_params_t *		11134085	0					
ANR	11134105	Identifier	params		11134085	1					
ANR	11134106	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		11134085	2		=			
ANR	11134107	Identifier	params		11134085	0					
ANR	11134108	CastExpression	( gs_function_Sd_params_t * ) & penum -> pfn -> params		11134085	1					
ANR	11134109	CastTarget	gs_function_Sd_params_t *		11134085	0					
ANR	11134110	UnaryOperationExpression	& penum -> pfn -> params		11134085	1					
ANR	11134111	UnaryOperator	&		11134085	0					
ANR	11134112	PtrMemberAccess	penum -> pfn -> params		11134085	1					
ANR	11134113	PtrMemberAccess	penum -> pfn		11134085	0					
ANR	11134114	Identifier	penum		11134085	0					
ANR	11134115	Identifier	pfn		11134085	1					
ANR	11134116	Identifier	params		11134085	1					
ANR	11134117	IdentifierDeclStatement	gs_function_t * pfn ;	574:4:19413:19432	11134085	3	True				
ANR	11134118	IdentifierDecl	* pfn		11134085	0					
ANR	11134119	IdentifierDeclType	gs_function_t *		11134085	0					
ANR	11134120	Identifier	pfn		11134085	1					
ANR	11134121	IdentifierDeclStatement	ref cref ;	575:4:19438:19446	11134085	4	True				
ANR	11134122	IdentifierDecl	cref		11134085	0					
ANR	11134123	IdentifierDeclType	ref		11134085	0					
ANR	11134124	Identifier	cref		11134085	1					
ANR	11134125	IdentifierDeclStatement	"int code = gs_function_Sd_init ( & pfn , params , imemory ) ;"	576:4:19468:19521	11134085	5	True				
ANR	11134126	IdentifierDecl	"code = gs_function_Sd_init ( & pfn , params , imemory )"		11134085	0					
ANR	11134127	IdentifierDeclType	int		11134085	0					
ANR	11134128	Identifier	code		11134085	1					
ANR	11134129	AssignmentExpression	"code = gs_function_Sd_init ( & pfn , params , imemory )"		11134085	2		=			
ANR	11134130	Identifier	code		11134085	0					
ANR	11134131	CallExpression	"gs_function_Sd_init ( & pfn , params , imemory )"		11134085	1					
ANR	11134132	Callee	gs_function_Sd_init		11134085	0					
ANR	11134133	Identifier	gs_function_Sd_init		11134085	0					
ANR	11134134	ArgumentList	& pfn		11134085	1					
ANR	11134135	Argument	& pfn		11134085	0					
ANR	11134136	UnaryOperationExpression	& pfn		11134085	0					
ANR	11134137	UnaryOperator	&		11134085	0					
ANR	11134138	Identifier	pfn		11134085	1					
ANR	11134139	Argument	params		11134085	1					
ANR	11134140	Identifier	params		11134085	0					
ANR	11134141	Argument	imemory		11134085	2					
ANR	11134142	Identifier	imemory		11134085	0					
ANR	11134143	IfStatement	if ( code < 0 )		11134085	6					
ANR	11134144	Condition	code < 0	578:8:19532:19539	11134085	0	True				
ANR	11134145	RelationalExpression	code < 0		11134085	0		<			
ANR	11134146	Identifier	code		11134085	0					
ANR	11134147	PrimaryExpression	0		11134085	1					
ANR	11134148	ReturnStatement	return code ;	579:8:19550:19561	11134085	1	True				
ANR	11134149	Identifier	code		11134085	0					
ANR	11134150	ExpressionStatement	"code = ialloc_ref_array ( & cref , a_executable | a_execute , 2 , ""sampled_data_finish(cref)"" )"	581:4:19568:19684	11134085	7	True				
ANR	11134151	AssignmentExpression	"code = ialloc_ref_array ( & cref , a_executable | a_execute , 2 , ""sampled_data_finish(cref)"" )"		11134085	0		=			
ANR	11134152	Identifier	code		11134085	0					
ANR	11134153	CallExpression	"ialloc_ref_array ( & cref , a_executable | a_execute , 2 , ""sampled_data_finish(cref)"" )"		11134085	1					
ANR	11134154	Callee	ialloc_ref_array		11134085	0					
ANR	11134155	Identifier	ialloc_ref_array		11134085	0					
ANR	11134156	ArgumentList	& cref		11134085	1					
ANR	11134157	Argument	& cref		11134085	0					
ANR	11134158	UnaryOperationExpression	& cref		11134085	0					
ANR	11134159	UnaryOperator	&		11134085	0					
ANR	11134160	Identifier	cref		11134085	1					
ANR	11134161	Argument	a_executable | a_execute		11134085	1					
ANR	11134162	InclusiveOrExpression	a_executable | a_execute		11134085	0		|			
ANR	11134163	Identifier	a_executable		11134085	0					
ANR	11134164	Identifier	a_execute		11134085	1					
ANR	11134165	Argument	2		11134085	2					
ANR	11134166	PrimaryExpression	2		11134085	0					
ANR	11134167	Argument	"""sampled_data_finish(cref)"""		11134085	3					
ANR	11134168	PrimaryExpression	"""sampled_data_finish(cref)"""		11134085	0					
ANR	11134169	IfStatement	if ( code < 0 )		11134085	8					
ANR	11134170	Condition	code < 0	583:8:19694:19701	11134085	0	True				
ANR	11134171	RelationalExpression	code < 0		11134085	0		<			
ANR	11134172	Identifier	code		11134085	0					
ANR	11134173	PrimaryExpression	0		11134085	1					
ANR	11134174	ReturnStatement	return code ;	584:8:19712:19723	11134085	1	True				
ANR	11134175	Identifier	code		11134085	0					
ANR	11134176	ExpressionStatement	"make_istruct_new ( cref . value . refs , a_executable | a_execute , pfn )"	586:4:19730:19794	11134085	9	True				
ANR	11134177	CallExpression	"make_istruct_new ( cref . value . refs , a_executable | a_execute , pfn )"		11134085	0					
ANR	11134178	Callee	make_istruct_new		11134085	0					
ANR	11134179	Identifier	make_istruct_new		11134085	0					
ANR	11134180	ArgumentList	cref . value . refs		11134085	1					
ANR	11134181	Argument	cref . value . refs		11134085	0					
ANR	11134182	MemberAccess	cref . value . refs		11134085	0					
ANR	11134183	MemberAccess	cref . value		11134085	0					
ANR	11134184	Identifier	cref		11134085	0					
ANR	11134185	Identifier	value		11134085	1					
ANR	11134186	Identifier	refs		11134085	1					
ANR	11134187	Argument	a_executable | a_execute		11134085	1					
ANR	11134188	InclusiveOrExpression	a_executable | a_execute		11134085	0		|			
ANR	11134189	Identifier	a_executable		11134085	0					
ANR	11134190	Identifier	a_execute		11134085	1					
ANR	11134191	Argument	pfn		11134085	2					
ANR	11134192	Identifier	pfn		11134085	0					
ANR	11134193	ExpressionStatement	"make_oper_new ( cref . value . refs + 1 , 0 , zexecfunction )"	587:4:19800:19852	11134085	10	True				
ANR	11134194	CallExpression	"make_oper_new ( cref . value . refs + 1 , 0 , zexecfunction )"		11134085	0					
ANR	11134195	Callee	make_oper_new		11134085	0					
ANR	11134196	Identifier	make_oper_new		11134085	0					
ANR	11134197	ArgumentList	cref . value . refs + 1		11134085	1					
ANR	11134198	Argument	cref . value . refs + 1		11134085	0					
ANR	11134199	AdditiveExpression	cref . value . refs + 1		11134085	0		+			
ANR	11134200	MemberAccess	cref . value . refs		11134085	0					
ANR	11134201	MemberAccess	cref . value		11134085	0					
ANR	11134202	Identifier	cref		11134085	0					
ANR	11134203	Identifier	value		11134085	1					
ANR	11134204	Identifier	refs		11134085	1					
ANR	11134205	PrimaryExpression	1		11134085	1					
ANR	11134206	Argument	0		11134085	1					
ANR	11134207	PrimaryExpression	0		11134085	0					
ANR	11134208	Argument	zexecfunction		11134085	2					
ANR	11134209	Identifier	zexecfunction		11134085	0					
ANR	11134210	ExpressionStatement	"ref_assign ( op , & cref )"	588:4:19858:19879	11134085	11	True				
ANR	11134211	CallExpression	"ref_assign ( op , & cref )"		11134085	0					
ANR	11134212	Callee	ref_assign		11134085	0					
ANR	11134213	Identifier	ref_assign		11134085	0					
ANR	11134214	ArgumentList	op		11134085	1					
ANR	11134215	Argument	op		11134085	0					
ANR	11134216	Identifier	op		11134085	0					
ANR	11134217	Argument	& cref		11134085	1					
ANR	11134218	UnaryOperationExpression	& cref		11134085	0					
ANR	11134219	UnaryOperator	&		11134085	0					
ANR	11134220	Identifier	cref		11134085	1					
ANR	11134221	ExpressionStatement	esp -= estack_storage	590:4:19886:19907	11134085	12	True				
ANR	11134222	AssignmentExpression	esp -= estack_storage		11134085	0		-=			
ANR	11134223	Identifier	esp		11134085	0					
ANR	11134224	Identifier	estack_storage		11134085	1					
ANR	11134225	ExpressionStatement	"ifree_object ( penum -> pfn , ""sampled_data_finish(pfn)"" )"	591:4:19913:19965	11134085	13	True				
ANR	11134226	CallExpression	"ifree_object ( penum -> pfn , ""sampled_data_finish(pfn)"" )"		11134085	0					
ANR	11134227	Callee	ifree_object		11134085	0					
ANR	11134228	Identifier	ifree_object		11134085	0					
ANR	11134229	ArgumentList	penum -> pfn		11134085	1					
ANR	11134230	Argument	penum -> pfn		11134085	0					
ANR	11134231	PtrMemberAccess	penum -> pfn		11134085	0					
ANR	11134232	Identifier	penum		11134085	0					
ANR	11134233	Identifier	pfn		11134085	1					
ANR	11134234	Argument	"""sampled_data_finish(pfn)"""		11134085	1					
ANR	11134235	PrimaryExpression	"""sampled_data_finish(pfn)"""		11134085	0					
ANR	11134236	ExpressionStatement	"ifree_object ( penum , ""sampled_data_finish(enum)"" )"	592:4:19971:20019	11134085	14	True				
ANR	11134237	CallExpression	"ifree_object ( penum , ""sampled_data_finish(enum)"" )"		11134085	0					
ANR	11134238	Callee	ifree_object		11134085	0					
ANR	11134239	Identifier	ifree_object		11134085	0					
ANR	11134240	ArgumentList	penum		11134085	1					
ANR	11134241	Argument	penum		11134085	0					
ANR	11134242	Identifier	penum		11134085	0					
ANR	11134243	Argument	"""sampled_data_finish(enum)"""		11134085	1					
ANR	11134244	PrimaryExpression	"""sampled_data_finish(enum)"""		11134085	0					
ANR	11134245	ReturnStatement	return o_pop_estack ;	593:4:20025:20044	11134085	15	True				
ANR	11134246	Identifier	o_pop_estack		11134085	0					
ANR	11134247	ReturnType	static int		11134085	1					
ANR	11134248	Identifier	sampled_data_finish		11134085	2					
ANR	11134249	ParameterList	i_ctx_t * i_ctx_p		11134085	3					
ANR	11134250	Parameter	i_ctx_t * i_ctx_p	567:20:19171:19186	11134085	0	True				
ANR	11134251	ParameterType	i_ctx_t *		11134085	0					
ANR	11134252	Identifier	i_ctx_p		11134085	1					
ANR	11134253	CFGEntryNode	ENTRY		11134085		True				
ANR	11134254	CFGExitNode	EXIT		11134085		True				
ANR	11134255	Symbol	* penum		11134085						
ANR	11134256	Symbol	a_execute		11134085						
ANR	11134257	Symbol	code		11134085						
ANR	11134258	Symbol	& cref		11134085						
ANR	11134259	Symbol	esp		11134085						
ANR	11134260	Symbol	cref . value . refs		11134085						
ANR	11134261	Symbol	o_pop_estack		11134085						
ANR	11134262	Symbol	osp		11134085						
ANR	11134263	Symbol	zexecfunction		11134085						
ANR	11134264	Symbol	& pfn		11134085						
ANR	11134265	Symbol	& penum -> pfn -> params		11134085						
ANR	11134266	Symbol	imemory		11134085						
ANR	11134267	Symbol	op		11134085						
ANR	11134268	Symbol	gs_function_Sd_init		11134085						
ANR	11134269	Symbol	ialloc_ref_array		11134085						
ANR	11134270	Symbol	penum		11134085						
ANR	11134271	Symbol	penum -> pfn		11134085						
ANR	11134272	Symbol	params		11134085						
ANR	11134273	Symbol	senum		11134085						
ANR	11134274	Symbol	i_ctx_p		11134085						
ANR	11134275	Symbol	pfn		11134085						
ANR	11134276	Symbol	a_executable		11134085						
ANR	11134277	Symbol	cref . value		11134085						
ANR	11134278	Symbol	estack_storage		11134085						
ANR	11134279	Symbol	cref		11134085						
ANR	11134280	Function	make_sampled_function	596:0:20049:24146							
ANR	11134281	FunctionDef	"make_sampled_function (i_ctx_t * i_ctx_p , ref * arr , ref * pproc , gs_function_t * * func)"		11134280	0					
ANR	11134282	CompoundStatement		597:0:20138:24146	11134280	0					
ANR	11134283	IdentifierDeclStatement	"int code = 0 , * ptr , i , total_size , num_components , CIESubst ;"	598:4:20144:20203	11134280	0	True				
ANR	11134284	IdentifierDecl	code = 0		11134280	0					
ANR	11134285	IdentifierDeclType	int		11134280	0					
ANR	11134286	Identifier	code		11134280	1					
ANR	11134287	AssignmentExpression	code = 0		11134280	2		=			
ANR	11134288	Identifier	code		11134280	0					
ANR	11134289	PrimaryExpression	0		11134280	1					
ANR	11134290	IdentifierDecl	* ptr		11134280	1					
ANR	11134291	IdentifierDeclType	int *		11134280	0					
ANR	11134292	Identifier	ptr		11134280	1					
ANR	11134293	IdentifierDecl	i		11134280	2					
ANR	11134294	IdentifierDeclType	int		11134280	0					
ANR	11134295	Identifier	i		11134280	1					
ANR	11134296	IdentifierDecl	total_size		11134280	3					
ANR	11134297	IdentifierDeclType	int		11134280	0					
ANR	11134298	Identifier	total_size		11134280	1					
ANR	11134299	IdentifierDecl	num_components		11134280	4					
ANR	11134300	IdentifierDeclType	int		11134280	0					
ANR	11134301	Identifier	num_components		11134280	1					
ANR	11134302	IdentifierDecl	CIESubst		11134280	5					
ANR	11134303	IdentifierDeclType	int		11134280	0					
ANR	11134304	Identifier	CIESubst		11134280	1					
ANR	11134305	IdentifierDeclStatement	byte * bytes = 0 ;	599:4:20209:20225	11134280	1	True				
ANR	11134306	IdentifierDecl	* bytes = 0		11134280	0					
ANR	11134307	IdentifierDeclType	byte *		11134280	0					
ANR	11134308	Identifier	bytes		11134280	1					
ANR	11134309	AssignmentExpression	* bytes = 0		11134280	2		=			
ANR	11134310	Identifier	bytes		11134280	0					
ANR	11134311	PrimaryExpression	0		11134280	1					
ANR	11134312	IdentifierDeclStatement	float * fptr ;	600:4:20231:20242	11134280	2	True				
ANR	11134313	IdentifierDecl	* fptr		11134280	0					
ANR	11134314	IdentifierDeclType	float *		11134280	0					
ANR	11134315	Identifier	fptr		11134280	1					
ANR	11134316	IdentifierDeclStatement	gs_function_t * pfn = * func ;	601:4:20248:20274	11134280	3	True				
ANR	11134317	IdentifierDecl	* pfn = * func		11134280	0					
ANR	11134318	IdentifierDeclType	gs_function_t *		11134280	0					
ANR	11134319	Identifier	pfn		11134280	1					
ANR	11134320	AssignmentExpression	* pfn = * func		11134280	2		=			
ANR	11134321	Identifier	pfn		11134280	0					
ANR	11134322	UnaryOperationExpression	* func		11134280	1					
ANR	11134323	UnaryOperator	*		11134280	0					
ANR	11134324	Identifier	func		11134280	1					
ANR	11134325	IdentifierDeclStatement	gs_function_Sd_params_t params = { 0 } ;	602:4:20280:20316	11134280	4	True				
ANR	11134326	IdentifierDecl	params = { 0 }		11134280	0					
ANR	11134327	IdentifierDeclType	gs_function_Sd_params_t		11134280	0					
ANR	11134328	Identifier	params		11134280	1					
ANR	11134329	AssignmentExpression	params = { 0 }		11134280	2		=			
ANR	11134330	Identifier	params		11134280	0					
ANR	11134331	InitializerList	0		11134280	1					
ANR	11134332	PrimaryExpression	0		11134280	0					
ANR	11134333	IdentifierDeclStatement	"ref alternatespace , * palternatespace = & alternatespace ;"	603:4:20322:20376	11134280	5	True				
ANR	11134334	IdentifierDecl	alternatespace		11134280	0					
ANR	11134335	IdentifierDeclType	ref		11134280	0					
ANR	11134336	Identifier	alternatespace		11134280	1					
ANR	11134337	IdentifierDecl	* palternatespace = & alternatespace		11134280	1					
ANR	11134338	IdentifierDeclType	ref *		11134280	0					
ANR	11134339	Identifier	palternatespace		11134280	1					
ANR	11134340	AssignmentExpression	* palternatespace = & alternatespace		11134280	2		=			
ANR	11134341	Identifier	palternatespace		11134280	0					
ANR	11134342	UnaryOperationExpression	& alternatespace		11134280	1					
ANR	11134343	UnaryOperator	&		11134280	0					
ANR	11134344	Identifier	alternatespace		11134280	1					
ANR	11134345	IdentifierDeclStatement	"PS_colour_space_t * space , * altspace ;"	604:4:20382:20417	11134280	6	True				
ANR	11134346	IdentifierDecl	* space		11134280	0					
ANR	11134347	IdentifierDeclType	PS_colour_space_t *		11134280	0					
ANR	11134348	Identifier	space		11134280	1					
ANR	11134349	IdentifierDecl	* altspace		11134280	1					
ANR	11134350	IdentifierDeclType	PS_colour_space_t *		11134280	0					
ANR	11134351	Identifier	altspace		11134280	1					
ANR	11134352	ExpressionStatement	"code = get_space_object ( i_ctx_p , arr , & space )"	606:4:20424:20469	11134280	7	True				
ANR	11134353	AssignmentExpression	"code = get_space_object ( i_ctx_p , arr , & space )"		11134280	0		=			
ANR	11134354	Identifier	code		11134280	0					
ANR	11134355	CallExpression	"get_space_object ( i_ctx_p , arr , & space )"		11134280	1					
ANR	11134356	Callee	get_space_object		11134280	0					
ANR	11134357	Identifier	get_space_object		11134280	0					
ANR	11134358	ArgumentList	i_ctx_p		11134280	1					
ANR	11134359	Argument	i_ctx_p		11134280	0					
ANR	11134360	Identifier	i_ctx_p		11134280	0					
ANR	11134361	Argument	arr		11134280	1					
ANR	11134362	Identifier	arr		11134280	0					
ANR	11134363	Argument	& space		11134280	2					
ANR	11134364	UnaryOperationExpression	& space		11134280	0					
ANR	11134365	UnaryOperator	&		11134280	0					
ANR	11134366	Identifier	space		11134280	1					
ANR	11134367	IfStatement	if ( code < 0 )		11134280	8					
ANR	11134368	Condition	code < 0	607:8:20479:20486	11134280	0	True				
ANR	11134369	RelationalExpression	code < 0		11134280	0		<			
ANR	11134370	Identifier	code		11134280	0					
ANR	11134371	PrimaryExpression	0		11134280	1					
ANR	11134372	ReturnStatement	return code ;	608:8:20497:20508	11134280	1	True				
ANR	11134373	Identifier	code		11134280	0					
ANR	11134374	IfStatement	if ( ! space -> alternateproc )		11134280	9					
ANR	11134375	Condition	! space -> alternateproc	609:8:20518:20538	11134280	0	True				
ANR	11134376	UnaryOperationExpression	! space -> alternateproc		11134280	0					
ANR	11134377	UnaryOperator	!		11134280	0					
ANR	11134378	PtrMemberAccess	space -> alternateproc		11134280	1					
ANR	11134379	Identifier	space		11134280	0					
ANR	11134380	Identifier	alternateproc		11134280	1					
ANR	11134381	ReturnStatement	return gs_error_typecheck ;	610:8:20549:20574	11134280	1	True				
ANR	11134382	Identifier	gs_error_typecheck		11134280	0					
ANR	11134383	ExpressionStatement	"code = space -> alternateproc ( i_ctx_p , arr , & palternatespace , & CIESubst )"	611:4:20580:20650	11134280	10	True				
ANR	11134384	AssignmentExpression	"code = space -> alternateproc ( i_ctx_p , arr , & palternatespace , & CIESubst )"		11134280	0		=			
ANR	11134385	Identifier	code		11134280	0					
ANR	11134386	CallExpression	"space -> alternateproc ( i_ctx_p , arr , & palternatespace , & CIESubst )"		11134280	1					
ANR	11134387	Callee	space -> alternateproc		11134280	0					
ANR	11134388	PtrMemberAccess	space -> alternateproc		11134280	0					
ANR	11134389	Identifier	space		11134280	0					
ANR	11134390	Identifier	alternateproc		11134280	1					
ANR	11134391	ArgumentList	i_ctx_p		11134280	1					
ANR	11134392	Argument	i_ctx_p		11134280	0					
ANR	11134393	Identifier	i_ctx_p		11134280	0					
ANR	11134394	Argument	arr		11134280	1					
ANR	11134395	Identifier	arr		11134280	0					
ANR	11134396	Argument	& palternatespace		11134280	2					
ANR	11134397	UnaryOperationExpression	& palternatespace		11134280	0					
ANR	11134398	UnaryOperator	&		11134280	0					
ANR	11134399	Identifier	palternatespace		11134280	1					
ANR	11134400	Argument	& CIESubst		11134280	3					
ANR	11134401	UnaryOperationExpression	& CIESubst		11134280	0					
ANR	11134402	UnaryOperator	&		11134280	0					
ANR	11134403	Identifier	CIESubst		11134280	1					
ANR	11134404	IfStatement	if ( code < 0 )		11134280	11					
ANR	11134405	Condition	code < 0	612:8:20660:20667	11134280	0	True				
ANR	11134406	RelationalExpression	code < 0		11134280	0		<			
ANR	11134407	Identifier	code		11134280	0					
ANR	11134408	PrimaryExpression	0		11134280	1					
ANR	11134409	ReturnStatement	return code ;	613:8:20678:20689	11134280	1	True				
ANR	11134410	Identifier	code		11134280	0					
ANR	11134411	ExpressionStatement	"code = get_space_object ( i_ctx_p , palternatespace , & altspace )"	614:4:20695:20755	11134280	12	True				
ANR	11134412	AssignmentExpression	"code = get_space_object ( i_ctx_p , palternatespace , & altspace )"		11134280	0		=			
ANR	11134413	Identifier	code		11134280	0					
ANR	11134414	CallExpression	"get_space_object ( i_ctx_p , palternatespace , & altspace )"		11134280	1					
ANR	11134415	Callee	get_space_object		11134280	0					
ANR	11134416	Identifier	get_space_object		11134280	0					
ANR	11134417	ArgumentList	i_ctx_p		11134280	1					
ANR	11134418	Argument	i_ctx_p		11134280	0					
ANR	11134419	Identifier	i_ctx_p		11134280	0					
ANR	11134420	Argument	palternatespace		11134280	1					
ANR	11134421	Identifier	palternatespace		11134280	0					
ANR	11134422	Argument	& altspace		11134280	2					
ANR	11134423	UnaryOperationExpression	& altspace		11134280	0					
ANR	11134424	UnaryOperator	&		11134280	0					
ANR	11134425	Identifier	altspace		11134280	1					
ANR	11134426	IfStatement	if ( code < 0 )		11134280	13					
ANR	11134427	Condition	code < 0	615:8:20765:20772	11134280	0	True				
ANR	11134428	RelationalExpression	code < 0		11134280	0		<			
ANR	11134429	Identifier	code		11134280	0					
ANR	11134430	PrimaryExpression	0		11134280	1					
ANR	11134431	ReturnStatement	return code ;	616:8:20783:20794	11134280	1	True				
ANR	11134432	Identifier	code		11134280	0					
ANR	11134433	ExpressionStatement	params . Order = 3	620:4:20869:20885	11134280	14	True				
ANR	11134434	AssignmentExpression	params . Order = 3		11134280	0		=			
ANR	11134435	MemberAccess	params . Order		11134280	0					
ANR	11134436	Identifier	params		11134280	0					
ANR	11134437	Identifier	Order		11134280	1					
ANR	11134438	PrimaryExpression	3		11134280	1					
ANR	11134439	ExpressionStatement	params . BitsPerSample = 16	621:4:20891:20916	11134280	15	True				
ANR	11134440	AssignmentExpression	params . BitsPerSample = 16		11134280	0		=			
ANR	11134441	MemberAccess	params . BitsPerSample		11134280	0					
ANR	11134442	Identifier	params		11134280	0					
ANR	11134443	Identifier	BitsPerSample		11134280	1					
ANR	11134444	PrimaryExpression	16		11134280	1					
ANR	11134445	ExpressionStatement	"code = space -> numcomponents ( i_ctx_p , arr , & num_components )"	623:4:20923:20981	11134280	16	True				
ANR	11134446	AssignmentExpression	"code = space -> numcomponents ( i_ctx_p , arr , & num_components )"		11134280	0		=			
ANR	11134447	Identifier	code		11134280	0					
ANR	11134448	CallExpression	"space -> numcomponents ( i_ctx_p , arr , & num_components )"		11134280	1					
ANR	11134449	Callee	space -> numcomponents		11134280	0					
ANR	11134450	PtrMemberAccess	space -> numcomponents		11134280	0					
ANR	11134451	Identifier	space		11134280	0					
ANR	11134452	Identifier	numcomponents		11134280	1					
ANR	11134453	ArgumentList	i_ctx_p		11134280	1					
ANR	11134454	Argument	i_ctx_p		11134280	0					
ANR	11134455	Identifier	i_ctx_p		11134280	0					
ANR	11134456	Argument	arr		11134280	1					
ANR	11134457	Identifier	arr		11134280	0					
ANR	11134458	Argument	& num_components		11134280	2					
ANR	11134459	UnaryOperationExpression	& num_components		11134280	0					
ANR	11134460	UnaryOperator	&		11134280	0					
ANR	11134461	Identifier	num_components		11134280	1					
ANR	11134462	IfStatement	if ( code < 0 )		11134280	17					
ANR	11134463	Condition	code < 0	624:8:20991:20998	11134280	0	True				
ANR	11134464	RelationalExpression	code < 0		11134280	0		<			
ANR	11134465	Identifier	code		11134280	0					
ANR	11134466	PrimaryExpression	0		11134280	1					
ANR	11134467	ReturnStatement	return code ;	625:8:21009:21020	11134280	1	True				
ANR	11134468	Identifier	code		11134280	0					
ANR	11134469	ExpressionStatement	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"	626:4:21026:21138	11134280	18	True				
ANR	11134470	AssignmentExpression	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"		11134280	0		=			
ANR	11134471	Identifier	fptr		11134280	0					
ANR	11134472	CastExpression	"( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"		11134280	1					
ANR	11134473	CastTarget	float *		11134280	0					
ANR	11134474	CallExpression	"gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"		11134280	1					
ANR	11134475	Callee	gs_alloc_byte_array		11134280	0					
ANR	11134476	Identifier	gs_alloc_byte_array		11134280	0					
ANR	11134477	ArgumentList	imemory		11134280	1					
ANR	11134478	Argument	imemory		11134280	0					
ANR	11134479	Identifier	imemory		11134280	0					
ANR	11134480	Argument	num_components * 2		11134280	1					
ANR	11134481	MultiplicativeExpression	num_components * 2		11134280	0		*			
ANR	11134482	Identifier	num_components		11134280	0					
ANR	11134483	PrimaryExpression	2		11134280	1					
ANR	11134484	Argument	sizeof ( float )		11134280	2					
ANR	11134485	SizeofExpression	sizeof ( float )		11134280	0					
ANR	11134486	Sizeof	sizeof		11134280	0					
ANR	11134487	SizeofOperand	float		11134280	1					
ANR	11134488	Argument	"""make_sampled_function(Domain)"""		11134280	3					
ANR	11134489	PrimaryExpression	"""make_sampled_function(Domain)"""		11134280	0					
ANR	11134490	IfStatement	if ( ! fptr )		11134280	19					
ANR	11134491	Condition	! fptr	627:8:21148:21152	11134280	0	True				
ANR	11134492	UnaryOperationExpression	! fptr		11134280	0					
ANR	11134493	UnaryOperator	!		11134280	0					
ANR	11134494	Identifier	fptr		11134280	1					
ANR	11134495	ReturnStatement	return gs_error_VMerror ;	628:8:21163:21186	11134280	1	True				
ANR	11134496	Identifier	gs_error_VMerror		11134280	0					
ANR	11134497	ExpressionStatement	"code = space -> domain ( i_ctx_p , arr , fptr )"	629:4:21192:21232	11134280	20	True				
ANR	11134498	AssignmentExpression	"code = space -> domain ( i_ctx_p , arr , fptr )"		11134280	0		=			
ANR	11134499	Identifier	code		11134280	0					
ANR	11134500	CallExpression	"space -> domain ( i_ctx_p , arr , fptr )"		11134280	1					
ANR	11134501	Callee	space -> domain		11134280	0					
ANR	11134502	PtrMemberAccess	space -> domain		11134280	0					
ANR	11134503	Identifier	space		11134280	0					
ANR	11134504	Identifier	domain		11134280	1					
ANR	11134505	ArgumentList	i_ctx_p		11134280	1					
ANR	11134506	Argument	i_ctx_p		11134280	0					
ANR	11134507	Identifier	i_ctx_p		11134280	0					
ANR	11134508	Argument	arr		11134280	1					
ANR	11134509	Identifier	arr		11134280	0					
ANR	11134510	Argument	fptr		11134280	2					
ANR	11134511	Identifier	fptr		11134280	0					
ANR	11134512	IfStatement	if ( code < 0 )		11134280	21					
ANR	11134513	Condition	code < 0	630:8:21242:21249	11134280	0	True				
ANR	11134514	RelationalExpression	code < 0		11134280	0		<			
ANR	11134515	Identifier	code		11134280	0					
ANR	11134516	PrimaryExpression	0		11134280	1					
ANR	11134517	CompoundStatement		34:18:1113:1113	11134280	1					
ANR	11134518	ExpressionStatement	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Domain)"" )"	631:8:21262:21330	11134280	0	True				
ANR	11134519	CallExpression	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Domain)"" )"		11134280	0					
ANR	11134520	Callee	gs_free_const_object		11134280	0					
ANR	11134521	Identifier	gs_free_const_object		11134280	0					
ANR	11134522	ArgumentList	imemory		11134280	1					
ANR	11134523	Argument	imemory		11134280	0					
ANR	11134524	Identifier	imemory		11134280	0					
ANR	11134525	Argument	fptr		11134280	1					
ANR	11134526	Identifier	fptr		11134280	0					
ANR	11134527	Argument	"""make_sampled_function(Domain)"""		11134280	2					
ANR	11134528	PrimaryExpression	"""make_sampled_function(Domain)"""		11134280	0					
ANR	11134529	ReturnStatement	return code ;	632:8:21340:21351	11134280	1	True				
ANR	11134530	Identifier	code		11134280	0					
ANR	11134531	ExpressionStatement	params . Domain = fptr	634:4:21363:21383	11134280	22	True				
ANR	11134532	AssignmentExpression	params . Domain = fptr		11134280	0		=			
ANR	11134533	MemberAccess	params . Domain		11134280	0					
ANR	11134534	Identifier	params		11134280	0					
ANR	11134535	Identifier	Domain		11134280	1					
ANR	11134536	Identifier	fptr		11134280	1					
ANR	11134537	ExpressionStatement	params . m = num_components	635:4:21389:21414	11134280	23	True				
ANR	11134538	AssignmentExpression	params . m = num_components		11134280	0		=			
ANR	11134539	MemberAccess	params . m		11134280	0					
ANR	11134540	Identifier	params		11134280	0					
ANR	11134541	Identifier	m		11134280	1					
ANR	11134542	Identifier	num_components		11134280	1					
ANR	11134543	ExpressionStatement	"code = altspace -> numcomponents ( i_ctx_p , palternatespace , & num_components )"	637:4:21421:21494	11134280	24	True				
ANR	11134544	AssignmentExpression	"code = altspace -> numcomponents ( i_ctx_p , palternatespace , & num_components )"		11134280	0		=			
ANR	11134545	Identifier	code		11134280	0					
ANR	11134546	CallExpression	"altspace -> numcomponents ( i_ctx_p , palternatespace , & num_components )"		11134280	1					
ANR	11134547	Callee	altspace -> numcomponents		11134280	0					
ANR	11134548	PtrMemberAccess	altspace -> numcomponents		11134280	0					
ANR	11134549	Identifier	altspace		11134280	0					
ANR	11134550	Identifier	numcomponents		11134280	1					
ANR	11134551	ArgumentList	i_ctx_p		11134280	1					
ANR	11134552	Argument	i_ctx_p		11134280	0					
ANR	11134553	Identifier	i_ctx_p		11134280	0					
ANR	11134554	Argument	palternatespace		11134280	1					
ANR	11134555	Identifier	palternatespace		11134280	0					
ANR	11134556	Argument	& num_components		11134280	2					
ANR	11134557	UnaryOperationExpression	& num_components		11134280	0					
ANR	11134558	UnaryOperator	&		11134280	0					
ANR	11134559	Identifier	num_components		11134280	1					
ANR	11134560	IfStatement	if ( code < 0 )		11134280	25					
ANR	11134561	Condition	code < 0	638:8:21504:21511	11134280	0	True				
ANR	11134562	RelationalExpression	code < 0		11134280	0		<			
ANR	11134563	Identifier	code		11134280	0					
ANR	11134564	PrimaryExpression	0		11134280	1					
ANR	11134565	CompoundStatement		42:18:1375:1375	11134280	1					
ANR	11134566	ExpressionStatement	"gs_free_const_object ( imemory , params . Domain , ""make_type4_function(Domain)"" )"	639:8:21524:21599	11134280	0	True				
ANR	11134567	CallExpression	"gs_free_const_object ( imemory , params . Domain , ""make_type4_function(Domain)"" )"		11134280	0					
ANR	11134568	Callee	gs_free_const_object		11134280	0					
ANR	11134569	Identifier	gs_free_const_object		11134280	0					
ANR	11134570	ArgumentList	imemory		11134280	1					
ANR	11134571	Argument	imemory		11134280	0					
ANR	11134572	Identifier	imemory		11134280	0					
ANR	11134573	Argument	params . Domain		11134280	1					
ANR	11134574	MemberAccess	params . Domain		11134280	0					
ANR	11134575	Identifier	params		11134280	0					
ANR	11134576	Identifier	Domain		11134280	1					
ANR	11134577	Argument	"""make_type4_function(Domain)"""		11134280	2					
ANR	11134578	PrimaryExpression	"""make_type4_function(Domain)"""		11134280	0					
ANR	11134579	ReturnStatement	return code ;	640:8:21609:21620	11134280	1	True				
ANR	11134580	Identifier	code		11134280	0					
ANR	11134581	ExpressionStatement	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"	642:4:21632:21743	11134280	26	True				
ANR	11134582	AssignmentExpression	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"		11134280	0		=			
ANR	11134583	Identifier	fptr		11134280	0					
ANR	11134584	CastExpression	"( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"		11134280	1					
ANR	11134585	CastTarget	float *		11134280	0					
ANR	11134586	CallExpression	"gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"		11134280	1					
ANR	11134587	Callee	gs_alloc_byte_array		11134280	0					
ANR	11134588	Identifier	gs_alloc_byte_array		11134280	0					
ANR	11134589	ArgumentList	imemory		11134280	1					
ANR	11134590	Argument	imemory		11134280	0					
ANR	11134591	Identifier	imemory		11134280	0					
ANR	11134592	Argument	num_components * 2		11134280	1					
ANR	11134593	MultiplicativeExpression	num_components * 2		11134280	0		*			
ANR	11134594	Identifier	num_components		11134280	0					
ANR	11134595	PrimaryExpression	2		11134280	1					
ANR	11134596	Argument	sizeof ( float )		11134280	2					
ANR	11134597	SizeofExpression	sizeof ( float )		11134280	0					
ANR	11134598	Sizeof	sizeof		11134280	0					
ANR	11134599	SizeofOperand	float		11134280	1					
ANR	11134600	Argument	"""make_sampled_function(Range)"""		11134280	3					
ANR	11134601	PrimaryExpression	"""make_sampled_function(Range)"""		11134280	0					
ANR	11134602	IfStatement	if ( ! fptr )		11134280	27					
ANR	11134603	Condition	! fptr	643:8:21753:21757	11134280	0	True				
ANR	11134604	UnaryOperationExpression	! fptr		11134280	0					
ANR	11134605	UnaryOperator	!		11134280	0					
ANR	11134606	Identifier	fptr		11134280	1					
ANR	11134607	CompoundStatement		47:15:1621:1621	11134280	1					
ANR	11134608	ExpressionStatement	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"	644:8:21770:21847	11134280	0	True				
ANR	11134609	CallExpression	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"		11134280	0					
ANR	11134610	Callee	gs_free_const_object		11134280	0					
ANR	11134611	Identifier	gs_free_const_object		11134280	0					
ANR	11134612	ArgumentList	imemory		11134280	1					
ANR	11134613	Argument	imemory		11134280	0					
ANR	11134614	Identifier	imemory		11134280	0					
ANR	11134615	Argument	params . Domain		11134280	1					
ANR	11134616	MemberAccess	params . Domain		11134280	0					
ANR	11134617	Identifier	params		11134280	0					
ANR	11134618	Identifier	Domain		11134280	1					
ANR	11134619	Argument	"""make_sampled_function(Domain)"""		11134280	2					
ANR	11134620	PrimaryExpression	"""make_sampled_function(Domain)"""		11134280	0					
ANR	11134621	ReturnStatement	return gs_error_VMerror ;	645:8:21857:21880	11134280	1	True				
ANR	11134622	Identifier	gs_error_VMerror		11134280	0					
ANR	11134623	ExpressionStatement	"code = altspace -> range ( i_ctx_p , palternatespace , fptr )"	647:4:21892:21946	11134280	28	True				
ANR	11134624	AssignmentExpression	"code = altspace -> range ( i_ctx_p , palternatespace , fptr )"		11134280	0		=			
ANR	11134625	Identifier	code		11134280	0					
ANR	11134626	CallExpression	"altspace -> range ( i_ctx_p , palternatespace , fptr )"		11134280	1					
ANR	11134627	Callee	altspace -> range		11134280	0					
ANR	11134628	PtrMemberAccess	altspace -> range		11134280	0					
ANR	11134629	Identifier	altspace		11134280	0					
ANR	11134630	Identifier	range		11134280	1					
ANR	11134631	ArgumentList	i_ctx_p		11134280	1					
ANR	11134632	Argument	i_ctx_p		11134280	0					
ANR	11134633	Identifier	i_ctx_p		11134280	0					
ANR	11134634	Argument	palternatespace		11134280	1					
ANR	11134635	Identifier	palternatespace		11134280	0					
ANR	11134636	Argument	fptr		11134280	2					
ANR	11134637	Identifier	fptr		11134280	0					
ANR	11134638	IfStatement	if ( code < 0 )		11134280	29					
ANR	11134639	Condition	code < 0	648:8:21956:21963	11134280	0	True				
ANR	11134640	RelationalExpression	code < 0		11134280	0		<			
ANR	11134641	Identifier	code		11134280	0					
ANR	11134642	PrimaryExpression	0		11134280	1					
ANR	11134643	CompoundStatement		52:18:1827:1827	11134280	1					
ANR	11134644	ExpressionStatement	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"	649:8:21976:22053	11134280	0	True				
ANR	11134645	CallExpression	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"		11134280	0					
ANR	11134646	Callee	gs_free_const_object		11134280	0					
ANR	11134647	Identifier	gs_free_const_object		11134280	0					
ANR	11134648	ArgumentList	imemory		11134280	1					
ANR	11134649	Argument	imemory		11134280	0					
ANR	11134650	Identifier	imemory		11134280	0					
ANR	11134651	Argument	params . Domain		11134280	1					
ANR	11134652	MemberAccess	params . Domain		11134280	0					
ANR	11134653	Identifier	params		11134280	0					
ANR	11134654	Identifier	Domain		11134280	1					
ANR	11134655	Argument	"""make_sampled_function(Domain)"""		11134280	2					
ANR	11134656	PrimaryExpression	"""make_sampled_function(Domain)"""		11134280	0					
ANR	11134657	ExpressionStatement	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Range)"" )"	650:8:22063:22130	11134280	1	True				
ANR	11134658	CallExpression	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Range)"" )"		11134280	0					
ANR	11134659	Callee	gs_free_const_object		11134280	0					
ANR	11134660	Identifier	gs_free_const_object		11134280	0					
ANR	11134661	ArgumentList	imemory		11134280	1					
ANR	11134662	Argument	imemory		11134280	0					
ANR	11134663	Identifier	imemory		11134280	0					
ANR	11134664	Argument	fptr		11134280	1					
ANR	11134665	Identifier	fptr		11134280	0					
ANR	11134666	Argument	"""make_sampled_function(Range)"""		11134280	2					
ANR	11134667	PrimaryExpression	"""make_sampled_function(Range)"""		11134280	0					
ANR	11134668	ReturnStatement	return code ;	651:8:22140:22151	11134280	2	True				
ANR	11134669	Identifier	code		11134280	0					
ANR	11134670	ExpressionStatement	params . Range = fptr	653:4:22163:22182	11134280	30	True				
ANR	11134671	AssignmentExpression	params . Range = fptr		11134280	0		=			
ANR	11134672	MemberAccess	params . Range		11134280	0					
ANR	11134673	Identifier	params		11134280	0					
ANR	11134674	Identifier	Range		11134280	1					
ANR	11134675	Identifier	fptr		11134280	1					
ANR	11134676	ExpressionStatement	params . n = num_components	654:4:22188:22213	11134280	31	True				
ANR	11134677	AssignmentExpression	params . n = num_components		11134280	0		=			
ANR	11134678	MemberAccess	params . n		11134280	0					
ANR	11134679	Identifier	params		11134280	0					
ANR	11134680	Identifier	n		11134280	1					
ANR	11134681	Identifier	num_components		11134280	1					
ANR	11134682	ExpressionStatement	"ptr = ( int * ) gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"	660:4:22383:22455	11134280	32	True				
ANR	11134683	AssignmentExpression	"ptr = ( int * ) gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"		11134280	0		=			
ANR	11134684	Identifier	ptr		11134280	0					
ANR	11134685	CastExpression	"( int * ) gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"		11134280	1					
ANR	11134686	CastTarget	int *		11134280	0					
ANR	11134687	CallExpression	"gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"		11134280	1					
ANR	11134688	Callee	gs_alloc_byte_array		11134280	0					
ANR	11134689	Identifier	gs_alloc_byte_array		11134280	0					
ANR	11134690	ArgumentList	imemory		11134280	1					
ANR	11134691	Argument	imemory		11134280	0					
ANR	11134692	Identifier	imemory		11134280	0					
ANR	11134693	Argument	params . m		11134280	1					
ANR	11134694	MemberAccess	params . m		11134280	0					
ANR	11134695	Identifier	params		11134280	0					
ANR	11134696	Identifier	m		11134280	1					
ANR	11134697	Argument	sizeof ( int )		11134280	2					
ANR	11134698	SizeofExpression	sizeof ( int )		11134280	0					
ANR	11134699	Sizeof	sizeof		11134280	0					
ANR	11134700	SizeofOperand	int		11134280	1					
ANR	11134701	Argument	"""Size"""		11134280	3					
ANR	11134702	PrimaryExpression	"""Size"""		11134280	0					
ANR	11134703	IfStatement	if ( ptr == NULL )		11134280	33					
ANR	11134704	Condition	ptr == NULL	661:8:22465:22475	11134280	0	True				
ANR	11134705	EqualityExpression	ptr == NULL		11134280	0		==			
ANR	11134706	Identifier	ptr		11134280	0					
ANR	11134707	Identifier	NULL		11134280	1					
ANR	11134708	CompoundStatement		65:21:2339:2339	11134280	1					
ANR	11134709	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	662:8:22488:22526	11134280	0	True				
ANR	11134710	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		11134280	0		=			
ANR	11134711	Identifier	code		11134280	0					
ANR	11134712	CallExpression	gs_note_error ( gs_error_VMerror )		11134280	1					
ANR	11134713	Callee	gs_note_error		11134280	0					
ANR	11134714	Identifier	gs_note_error		11134280	0					
ANR	11134715	ArgumentList	gs_error_VMerror		11134280	1					
ANR	11134716	Argument	gs_error_VMerror		11134280	0					
ANR	11134717	Identifier	gs_error_VMerror		11134280	0					
ANR	11134718	GotoStatement	goto fail ;	663:8:22536:22545	11134280	1	True				
ANR	11134719	Identifier	fail		11134280	0					
ANR	11134720	ExpressionStatement	params . Size = ptr	665:4:22557:22574	11134280	34	True				
ANR	11134721	AssignmentExpression	params . Size = ptr		11134280	0		=			
ANR	11134722	MemberAccess	params . Size		11134280	0					
ANR	11134723	Identifier	params		11134280	0					
ANR	11134724	Identifier	Size		11134280	1					
ANR	11134725	Identifier	ptr		11134280	1					
ANR	11134726	ExpressionStatement	"code = determine_sampled_data_size ( params . m , params . n , params . BitsPerSample , ( int * ) params . Size )"	670:4:22644:22764	11134280	35	True				
ANR	11134727	AssignmentExpression	"code = determine_sampled_data_size ( params . m , params . n , params . BitsPerSample , ( int * ) params . Size )"		11134280	0		=			
ANR	11134728	Identifier	code		11134280	0					
ANR	11134729	CallExpression	"determine_sampled_data_size ( params . m , params . n , params . BitsPerSample , ( int * ) params . Size )"		11134280	1					
ANR	11134730	Callee	determine_sampled_data_size		11134280	0					
ANR	11134731	Identifier	determine_sampled_data_size		11134280	0					
ANR	11134732	ArgumentList	params . m		11134280	1					
ANR	11134733	Argument	params . m		11134280	0					
ANR	11134734	MemberAccess	params . m		11134280	0					
ANR	11134735	Identifier	params		11134280	0					
ANR	11134736	Identifier	m		11134280	1					
ANR	11134737	Argument	params . n		11134280	1					
ANR	11134738	MemberAccess	params . n		11134280	0					
ANR	11134739	Identifier	params		11134280	0					
ANR	11134740	Identifier	n		11134280	1					
ANR	11134741	Argument	params . BitsPerSample		11134280	2					
ANR	11134742	MemberAccess	params . BitsPerSample		11134280	0					
ANR	11134743	Identifier	params		11134280	0					
ANR	11134744	Identifier	BitsPerSample		11134280	1					
ANR	11134745	Argument	( int * ) params . Size		11134280	3					
ANR	11134746	CastExpression	( int * ) params . Size		11134280	0					
ANR	11134747	CastTarget	int *		11134280	0					
ANR	11134748	MemberAccess	params . Size		11134280	1					
ANR	11134749	Identifier	params		11134280	0					
ANR	11134750	Identifier	Size		11134280	1					
ANR	11134751	IfStatement	if ( code < 0 )		11134280	36					
ANR	11134752	Condition	code < 0	672:8:22774:22781	11134280	0	True				
ANR	11134753	RelationalExpression	code < 0		11134280	0		<			
ANR	11134754	Identifier	code		11134280	0					
ANR	11134755	PrimaryExpression	0		11134280	1					
ANR	11134756	GotoStatement	goto fail ;	673:8:22792:22801	11134280	1	True				
ANR	11134757	Identifier	fail		11134280	0					
ANR	11134758	ExpressionStatement	total_size = params . n * bits2bytes ( params . BitsPerSample )	677:4:22883:22939	11134280	37	True				
ANR	11134759	AssignmentExpression	total_size = params . n * bits2bytes ( params . BitsPerSample )		11134280	0		=			
ANR	11134760	Identifier	total_size		11134280	0					
ANR	11134761	MultiplicativeExpression	params . n * bits2bytes ( params . BitsPerSample )		11134280	1		*			
ANR	11134762	MemberAccess	params . n		11134280	0					
ANR	11134763	Identifier	params		11134280	0					
ANR	11134764	Identifier	n		11134280	1					
ANR	11134765	CallExpression	bits2bytes ( params . BitsPerSample )		11134280	1					
ANR	11134766	Callee	bits2bytes		11134280	0					
ANR	11134767	Identifier	bits2bytes		11134280	0					
ANR	11134768	ArgumentList	params . BitsPerSample		11134280	1					
ANR	11134769	Argument	params . BitsPerSample		11134280	0					
ANR	11134770	MemberAccess	params . BitsPerSample		11134280	0					
ANR	11134771	Identifier	params		11134280	0					
ANR	11134772	Identifier	BitsPerSample		11134280	1					
ANR	11134773	ForStatement	for ( i = 0 ; i < params . m ; i ++ )		11134280	38					
ANR	11134774	ForInit	i = 0 ;	678:9:22950:22955	11134280	0	True				
ANR	11134775	AssignmentExpression	i = 0		11134280	0		=			
ANR	11134776	Identifier	i		11134280	0					
ANR	11134777	PrimaryExpression	0		11134280	1					
ANR	11134778	Condition	i < params . m	678:16:22957:22968	11134280	1	True				
ANR	11134779	RelationalExpression	i < params . m		11134280	0		<			
ANR	11134780	Identifier	i		11134280	0					
ANR	11134781	MemberAccess	params . m		11134280	1					
ANR	11134782	Identifier	params		11134280	0					
ANR	11134783	Identifier	m		11134280	1					
ANR	11134784	PostIncDecOperationExpression	i ++	678:30:22971:22973	11134280	2	True				
ANR	11134785	Identifier	i		11134280	0					
ANR	11134786	IncDec	++		11134280	1					
ANR	11134787	ExpressionStatement	total_size *= params . Size [ i ]	679:8:22984:23012	11134280	3	True				
ANR	11134788	AssignmentExpression	total_size *= params . Size [ i ]		11134280	0		*=			
ANR	11134789	Identifier	total_size		11134280	0					
ANR	11134790	ArrayIndexing	params . Size [ i ]		11134280	1					
ANR	11134791	MemberAccess	params . Size		11134280	0					
ANR	11134792	Identifier	params		11134280	0					
ANR	11134793	Identifier	Size		11134280	1					
ANR	11134794	Identifier	i		11134280	1					
ANR	11134795	ExpressionStatement	"bytes = gs_alloc_byte_array ( imemory , total_size , 1 , ""cube_build_func0(bytes)"" )"	683:4:23081:23159	11134280	39	True				
ANR	11134796	AssignmentExpression	"bytes = gs_alloc_byte_array ( imemory , total_size , 1 , ""cube_build_func0(bytes)"" )"		11134280	0		=			
ANR	11134797	Identifier	bytes		11134280	0					
ANR	11134798	CallExpression	"gs_alloc_byte_array ( imemory , total_size , 1 , ""cube_build_func0(bytes)"" )"		11134280	1					
ANR	11134799	Callee	gs_alloc_byte_array		11134280	0					
ANR	11134800	Identifier	gs_alloc_byte_array		11134280	0					
ANR	11134801	ArgumentList	imemory		11134280	1					
ANR	11134802	Argument	imemory		11134280	0					
ANR	11134803	Identifier	imemory		11134280	0					
ANR	11134804	Argument	total_size		11134280	1					
ANR	11134805	Identifier	total_size		11134280	0					
ANR	11134806	Argument	1		11134280	2					
ANR	11134807	PrimaryExpression	1		11134280	0					
ANR	11134808	Argument	"""cube_build_func0(bytes)"""		11134280	3					
ANR	11134809	PrimaryExpression	"""cube_build_func0(bytes)"""		11134280	0					
ANR	11134810	IfStatement	if ( ! bytes )		11134280	40					
ANR	11134811	Condition	! bytes	684:8:23169:23174	11134280	0	True				
ANR	11134812	UnaryOperationExpression	! bytes		11134280	0					
ANR	11134813	UnaryOperator	!		11134280	0					
ANR	11134814	Identifier	bytes		11134280	1					
ANR	11134815	CompoundStatement		88:16:3038:3038	11134280	1					
ANR	11134816	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	685:8:23187:23225	11134280	0	True				
ANR	11134817	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		11134280	0		=			
ANR	11134818	Identifier	code		11134280	0					
ANR	11134819	CallExpression	gs_note_error ( gs_error_VMerror )		11134280	1					
ANR	11134820	Callee	gs_note_error		11134280	0					
ANR	11134821	Identifier	gs_note_error		11134280	0					
ANR	11134822	ArgumentList	gs_error_VMerror		11134280	1					
ANR	11134823	Argument	gs_error_VMerror		11134280	0					
ANR	11134824	Identifier	gs_error_VMerror		11134280	0					
ANR	11134825	GotoStatement	goto fail ;	686:8:23235:23244	11134280	1	True				
ANR	11134826	Identifier	fail		11134280	0					
ANR	11134827	ExpressionStatement	"data_source_init_bytes ( & params . DataSource , ( const unsigned char * ) bytes , total_size )"	688:4:23256:23372	11134280	41	True				
ANR	11134828	CallExpression	"data_source_init_bytes ( & params . DataSource , ( const unsigned char * ) bytes , total_size )"		11134280	0					
ANR	11134829	Callee	data_source_init_bytes		11134280	0					
ANR	11134830	Identifier	data_source_init_bytes		11134280	0					
ANR	11134831	ArgumentList	& params . DataSource		11134280	1					
ANR	11134832	Argument	& params . DataSource		11134280	0					
ANR	11134833	UnaryOperationExpression	& params . DataSource		11134280	0					
ANR	11134834	UnaryOperator	&		11134280	0					
ANR	11134835	MemberAccess	params . DataSource		11134280	1					
ANR	11134836	Identifier	params		11134280	0					
ANR	11134837	Identifier	DataSource		11134280	1					
ANR	11134838	Argument	( const unsigned char * ) bytes		11134280	1					
ANR	11134839	CastExpression	( const unsigned char * ) bytes		11134280	0					
ANR	11134840	CastTarget	const unsigned char *		11134280	0					
ANR	11134841	Identifier	bytes		11134280	1					
ANR	11134842	Argument	total_size		11134280	2					
ANR	11134843	Identifier	total_size		11134280	0					
ANR	11134844	ExpressionStatement	"code = gs_function_Sd_init ( & pfn , & params , imemory )"	699:4:23789:23839	11134280	42	True				
ANR	11134845	AssignmentExpression	"code = gs_function_Sd_init ( & pfn , & params , imemory )"		11134280	0		=			
ANR	11134846	Identifier	code		11134280	0					
ANR	11134847	CallExpression	"gs_function_Sd_init ( & pfn , & params , imemory )"		11134280	1					
ANR	11134848	Callee	gs_function_Sd_init		11134280	0					
ANR	11134849	Identifier	gs_function_Sd_init		11134280	0					
ANR	11134850	ArgumentList	& pfn		11134280	1					
ANR	11134851	Argument	& pfn		11134280	0					
ANR	11134852	UnaryOperationExpression	& pfn		11134280	0					
ANR	11134853	UnaryOperator	&		11134280	0					
ANR	11134854	Identifier	pfn		11134280	1					
ANR	11134855	Argument	& params		11134280	1					
ANR	11134856	UnaryOperationExpression	& params		11134280	0					
ANR	11134857	UnaryOperator	&		11134280	0					
ANR	11134858	Identifier	params		11134280	1					
ANR	11134859	Argument	imemory		11134280	2					
ANR	11134860	Identifier	imemory		11134280	0					
ANR	11134861	IfStatement	if ( code < 0 )		11134280	43					
ANR	11134862	Condition	code < 0	700:8:23849:23856	11134280	0	True				
ANR	11134863	RelationalExpression	code < 0		11134280	0		<			
ANR	11134864	Identifier	code		11134280	0					
ANR	11134865	PrimaryExpression	0		11134280	1					
ANR	11134866	ReturnStatement	return code ;	701:8:23867:23878	11134280	1	True				
ANR	11134867	Identifier	code		11134280	0					
ANR	11134868	ReturnStatement	"return sampled_data_setup ( i_ctx_p , pfn , pproc , sampled_data_finish , imemory ) ;"	705:4:23944:24020	11134280	44	True				
ANR	11134869	CallExpression	"sampled_data_setup ( i_ctx_p , pfn , pproc , sampled_data_finish , imemory )"		11134280	0					
ANR	11134870	Callee	sampled_data_setup		11134280	0					
ANR	11134871	Identifier	sampled_data_setup		11134280	0					
ANR	11134872	ArgumentList	i_ctx_p		11134280	1					
ANR	11134873	Argument	i_ctx_p		11134280	0					
ANR	11134874	Identifier	i_ctx_p		11134280	0					
ANR	11134875	Argument	pfn		11134280	1					
ANR	11134876	Identifier	pfn		11134280	0					
ANR	11134877	Argument	pproc		11134280	2					
ANR	11134878	Identifier	pproc		11134280	0					
ANR	11134879	Argument	sampled_data_finish		11134280	3					
ANR	11134880	Identifier	sampled_data_finish		11134280	0					
ANR	11134881	Argument	imemory		11134280	4					
ANR	11134882	Identifier	imemory		11134280	0					
ANR	11134883	Label	fail :	707:0:24023:24027	11134280	45	True				
ANR	11134884	Identifier	fail		11134280	0					
ANR	11134885	ExpressionStatement	"gs_function_Sd_free_params ( & params , imemory )"	708:4:24033:24077	11134280	46	True				
ANR	11134886	CallExpression	"gs_function_Sd_free_params ( & params , imemory )"		11134280	0					
ANR	11134887	Callee	gs_function_Sd_free_params		11134280	0					
ANR	11134888	Identifier	gs_function_Sd_free_params		11134280	0					
ANR	11134889	ArgumentList	& params		11134280	1					
ANR	11134890	Argument	& params		11134280	0					
ANR	11134891	UnaryOperationExpression	& params		11134280	0					
ANR	11134892	UnaryOperator	&		11134280	0					
ANR	11134893	Identifier	params		11134280	1					
ANR	11134894	Argument	imemory		11134280	1					
ANR	11134895	Identifier	imemory		11134280	0					
ANR	11134896	ReturnStatement	return ( code < 0 ? code : gs_note_error ( gs_error_rangecheck ) ) ;	709:4:24083:24144	11134280	47	True				
ANR	11134897	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_rangecheck )		11134280	0					
ANR	11134898	Condition	code < 0		11134280	0					
ANR	11134899	RelationalExpression	code < 0		11134280	0		<			
ANR	11134900	Identifier	code		11134280	0					
ANR	11134901	PrimaryExpression	0		11134280	1					
ANR	11134902	Identifier	code		11134280	1					
ANR	11134903	CallExpression	gs_note_error ( gs_error_rangecheck )		11134280	2					
ANR	11134904	Callee	gs_note_error		11134280	0					
ANR	11134905	Identifier	gs_note_error		11134280	0					
ANR	11134906	ArgumentList	gs_error_rangecheck		11134280	1					
ANR	11134907	Argument	gs_error_rangecheck		11134280	0					
ANR	11134908	Identifier	gs_error_rangecheck		11134280	0					
ANR	11134909	ReturnType	int		11134280	1					
ANR	11134910	Identifier	make_sampled_function		11134280	2					
ANR	11134911	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , ref * pproc , gs_function_t * * func"		11134280	3					
ANR	11134912	Parameter	i_ctx_t * i_ctx_p	596:26:20075:20091	11134280	0	True				
ANR	11134913	ParameterType	i_ctx_t *		11134280	0					
ANR	11134914	Identifier	i_ctx_p		11134280	1					
ANR	11134915	Parameter	ref * arr	596:45:20094:20101	11134280	1	True				
ANR	11134916	ParameterType	ref *		11134280	0					
ANR	11134917	Identifier	arr		11134280	1					
ANR	11134918	Parameter	ref * pproc	596:55:20104:20113	11134280	2	True				
ANR	11134919	ParameterType	ref *		11134280	0					
ANR	11134920	Identifier	pproc		11134280	1					
ANR	11134921	Parameter	gs_function_t * * func	596:67:20116:20135	11134280	3	True				
ANR	11134922	ParameterType	gs_function_t * *		11134280	0					
ANR	11134923	Identifier	func		11134280	1					
ANR	11134924	CFGEntryNode	ENTRY		11134280		True				
ANR	11134925	CFGExitNode	EXIT		11134280		True				
ANR	11134926	Symbol	params . Order		11134280						
ANR	11134927	Symbol	params . BitsPerSample		11134280						
ANR	11134928	Symbol	gs_error_rangecheck		11134280						
ANR	11134929	Symbol	sampled_data_setup		11134280						
ANR	11134930	Symbol	space		11134280						
ANR	11134931	Symbol	altspace -> numcomponents		11134280						
ANR	11134932	Symbol	altspace		11134280						
ANR	11134933	Symbol	params . n		11134280						
ANR	11134934	Symbol	palternatespace		11134280						
ANR	11134935	Symbol	params . m		11134280						
ANR	11134936	Symbol	pproc		11134280						
ANR	11134937	Symbol	& pfn		11134280						
ANR	11134938	Symbol	imemory		11134280						
ANR	11134939	Symbol	sampled_data_finish		11134280						
ANR	11134940	Symbol	& params		11134280						
ANR	11134941	Symbol	NULL		11134280						
ANR	11134942	Symbol	space -> alternateproc		11134280						
ANR	11134943	Symbol	altspace -> range		11134280						
ANR	11134944	Symbol	params		11134280						
ANR	11134945	Symbol	get_space_object		11134280						
ANR	11134946	Symbol	& num_components		11134280						
ANR	11134947	Symbol	i_ctx_p		11134280						
ANR	11134948	Symbol	* params . Size		11134280						
ANR	11134949	Symbol	pfn		11134280						
ANR	11134950	Symbol	* altspace		11134280						
ANR	11134951	Symbol	params . Domain		11134280						
ANR	11134952	Symbol	code		11134280						
ANR	11134953	Symbol	& alternatespace		11134280						
ANR	11134954	Symbol	gs_error_typecheck		11134280						
ANR	11134955	Symbol	& params . DataSource		11134280						
ANR	11134956	Symbol	& altspace		11134280						
ANR	11134957	Symbol	params . Range		11134280						
ANR	11134958	Symbol	& space		11134280						
ANR	11134959	Symbol	& palternatespace		11134280						
ANR	11134960	Symbol	space -> domain		11134280						
ANR	11134961	Symbol	CIESubst		11134280						
ANR	11134962	Symbol	* params		11134280						
ANR	11134963	Symbol	arr		11134280						
ANR	11134964	Symbol	alternatespace		11134280						
ANR	11134965	Symbol	determine_sampled_data_size		11134280						
ANR	11134966	Symbol	* func		11134280						
ANR	11134967	Symbol	gs_function_Sd_init		11134280						
ANR	11134968	Symbol	params . Size		11134280						
ANR	11134969	Symbol	total_size		11134280						
ANR	11134970	Symbol	i		11134280						
ANR	11134971	Symbol	num_components		11134280						
ANR	11134972	Symbol	& CIESubst		11134280						
ANR	11134973	Symbol	bits2bytes		11134280						
ANR	11134974	Symbol	ptr		11134280						
ANR	11134975	Symbol	gs_error_VMerror		11134280						
ANR	11134976	Symbol	gs_note_error		11134280						
ANR	11134977	Symbol	* i		11134280						
ANR	11134978	Symbol	func		11134280						
ANR	11134979	Symbol	bytes		11134280						
ANR	11134980	Symbol	space -> numcomponents		11134280						
ANR	11134981	Symbol	fptr		11134280						
ANR	11134982	Symbol	* space		11134280						
ANR	11134983	Symbol	gs_alloc_byte_array		11134280						
ANR	11134984	DeclStmt									
ANR	11134985	Decl							const op_def	const op_def [ ]	zfsample_op_defs
