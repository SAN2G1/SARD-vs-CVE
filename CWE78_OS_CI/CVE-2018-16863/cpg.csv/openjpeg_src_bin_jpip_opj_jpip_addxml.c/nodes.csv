command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7643087	File	data/converged/CVE-2018-16863_ghostpdl/openjpeg_src_bin_jpip_opj_jpip_addxml.c								
ANR	7643088	DeclStmt									
ANR	7643089	Decl							FILE	FILE * ( const char filename [ ] )	open_jp2file
ANR	7643090	DeclStmt									
ANR	7643091	Decl							char	"char * ( const char filename [ ] , long * fsize )"	read_xmlfile
ANR	7643092	Function	main	75:0:2943:3632							
ANR	7643093	FunctionDef	"main (int argc , char * argv [ ])"		7643092	0					
ANR	7643094	CompoundStatement		76:0:2976:3632	7643092	0					
ANR	7643095	IdentifierDeclStatement	FILE * fp ;	77:4:2982:2990	7643092	0	True				
ANR	7643096	IdentifierDecl	* fp		7643092	0					
ANR	7643097	IdentifierDeclType	FILE *		7643092	0					
ANR	7643098	Identifier	fp		7643092	1					
ANR	7643099	IdentifierDeclStatement	"char * xmldata , type [ ] = ""xml "" ;"	78:4:2996:3026	7643092	1	True				
ANR	7643100	IdentifierDecl	* xmldata		7643092	0					
ANR	7643101	IdentifierDeclType	char *		7643092	0					
ANR	7643102	Identifier	xmldata		7643092	1					
ANR	7643103	IdentifierDecl	"type [ ] = ""xml """		7643092	1					
ANR	7643104	IdentifierDeclType	char [ ]		7643092	0					
ANR	7643105	Identifier	type		7643092	1					
ANR	7643106	AssignmentExpression	"type [ ] = ""xml """		7643092	2		=			
ANR	7643107	Identifier	type		7643092	0					
ANR	7643108	PrimaryExpression	"""xml """		7643092	1					
ANR	7643109	IdentifierDeclStatement	"long fsize , boxsize ;"	79:4:3032:3051	7643092	2	True				
ANR	7643110	IdentifierDecl	fsize		7643092	0					
ANR	7643111	IdentifierDeclType	long		7643092	0					
ANR	7643112	Identifier	fsize		7643092	1					
ANR	7643113	IdentifierDecl	boxsize		7643092	1					
ANR	7643114	IdentifierDeclType	long		7643092	0					
ANR	7643115	Identifier	boxsize		7643092	1					
ANR	7643116	IfStatement	if ( argc < 3 )		7643092	3					
ANR	7643117	Condition	argc < 3	81:8:3062:3069	7643092	0	True				
ANR	7643118	RelationalExpression	argc < 3		7643092	0		<			
ANR	7643119	Identifier	argc		7643092	0					
ANR	7643120	PrimaryExpression	3		7643092	1					
ANR	7643121	CompoundStatement		6:18:95:95	7643092	1					
ANR	7643122	ExpressionStatement	"fprintf ( stderr , ""USAGE: %s modifing.jp2 adding.xml\\n"" , argv [ 0 ] )"	82:8:3082:3145	7643092	0	True				
ANR	7643123	CallExpression	"fprintf ( stderr , ""USAGE: %s modifing.jp2 adding.xml\\n"" , argv [ 0 ] )"		7643092	0					
ANR	7643124	Callee	fprintf		7643092	0					
ANR	7643125	Identifier	fprintf		7643092	0					
ANR	7643126	ArgumentList	stderr		7643092	1					
ANR	7643127	Argument	stderr		7643092	0					
ANR	7643128	Identifier	stderr		7643092	0					
ANR	7643129	Argument	"""USAGE: %s modifing.jp2 adding.xml\\n"""		7643092	1					
ANR	7643130	PrimaryExpression	"""USAGE: %s modifing.jp2 adding.xml\\n"""		7643092	0					
ANR	7643131	Argument	argv [ 0 ]		7643092	2					
ANR	7643132	ArrayIndexing	argv [ 0 ]		7643092	0					
ANR	7643133	Identifier	argv		7643092	0					
ANR	7643134	PrimaryExpression	0		7643092	1					
ANR	7643135	ReturnStatement	return - 1 ;	83:8:3155:3164	7643092	1	True				
ANR	7643136	UnaryOperationExpression	- 1		7643092	0					
ANR	7643137	UnaryOperator	-		7643092	0					
ANR	7643138	PrimaryExpression	1		7643092	1					
ANR	7643139	ExpressionStatement	fp = open_jp2file ( argv [ 1 ] )	86:4:3177:3203	7643092	4	True				
ANR	7643140	AssignmentExpression	fp = open_jp2file ( argv [ 1 ] )		7643092	0		=			
ANR	7643141	Identifier	fp		7643092	0					
ANR	7643142	CallExpression	open_jp2file ( argv [ 1 ] )		7643092	1					
ANR	7643143	Callee	open_jp2file		7643092	0					
ANR	7643144	Identifier	open_jp2file		7643092	0					
ANR	7643145	ArgumentList	argv [ 1 ]		7643092	1					
ANR	7643146	Argument	argv [ 1 ]		7643092	0					
ANR	7643147	ArrayIndexing	argv [ 1 ]		7643092	0					
ANR	7643148	Identifier	argv		7643092	0					
ANR	7643149	PrimaryExpression	1		7643092	1					
ANR	7643150	IfStatement	if ( ! fp )		7643092	5					
ANR	7643151	Condition	! fp	87:8:3213:3215	7643092	0	True				
ANR	7643152	UnaryOperationExpression	! fp		7643092	0					
ANR	7643153	UnaryOperator	!		7643092	0					
ANR	7643154	Identifier	fp		7643092	1					
ANR	7643155	CompoundStatement		12:13:241:241	7643092	1					
ANR	7643156	ReturnStatement	return - 1 ;	88:8:3228:3237	7643092	0	True				
ANR	7643157	UnaryOperationExpression	- 1		7643092	0					
ANR	7643158	UnaryOperator	-		7643092	0					
ANR	7643159	PrimaryExpression	1		7643092	1					
ANR	7643160	ExpressionStatement	"xmldata = read_xmlfile ( argv [ 2 ] , & fsize )"	91:4:3250:3289	7643092	6	True				
ANR	7643161	AssignmentExpression	"xmldata = read_xmlfile ( argv [ 2 ] , & fsize )"		7643092	0		=			
ANR	7643162	Identifier	xmldata		7643092	0					
ANR	7643163	CallExpression	"read_xmlfile ( argv [ 2 ] , & fsize )"		7643092	1					
ANR	7643164	Callee	read_xmlfile		7643092	0					
ANR	7643165	Identifier	read_xmlfile		7643092	0					
ANR	7643166	ArgumentList	argv [ 2 ]		7643092	1					
ANR	7643167	Argument	argv [ 2 ]		7643092	0					
ANR	7643168	ArrayIndexing	argv [ 2 ]		7643092	0					
ANR	7643169	Identifier	argv		7643092	0					
ANR	7643170	PrimaryExpression	2		7643092	1					
ANR	7643171	Argument	& fsize		7643092	1					
ANR	7643172	UnaryOperationExpression	& fsize		7643092	0					
ANR	7643173	UnaryOperator	&		7643092	0					
ANR	7643174	Identifier	fsize		7643092	1					
ANR	7643175	IfStatement	if ( fsize < 0 )		7643092	7					
ANR	7643176	Condition	fsize < 0	92:8:3299:3307	7643092	0	True				
ANR	7643177	RelationalExpression	fsize < 0		7643092	0		<			
ANR	7643178	Identifier	fsize		7643092	0					
ANR	7643179	PrimaryExpression	0		7643092	1					
ANR	7643180	CompoundStatement		17:19:333:333	7643092	1					
ANR	7643181	ReturnStatement	return - 1 ;	93:8:3320:3329	7643092	0	True				
ANR	7643182	UnaryOperationExpression	- 1		7643092	0					
ANR	7643183	UnaryOperator	-		7643092	0					
ANR	7643184	PrimaryExpression	1		7643092	1					
ANR	7643185	ExpressionStatement	boxsize = fsize + 8	95:4:3341:3360	7643092	8	True				
ANR	7643186	AssignmentExpression	boxsize = fsize + 8		7643092	0		=			
ANR	7643187	Identifier	boxsize		7643092	0					
ANR	7643188	AdditiveExpression	fsize + 8		7643092	1		+			
ANR	7643189	Identifier	fsize		7643092	0					
ANR	7643190	PrimaryExpression	8		7643092	1					
ANR	7643191	ExpressionStatement	"fputc ( ( boxsize >> 24 ) & 0xff , fp )"	97:4:3367:3400	7643092	9	True				
ANR	7643192	CallExpression	"fputc ( ( boxsize >> 24 ) & 0xff , fp )"		7643092	0					
ANR	7643193	Callee	fputc		7643092	0					
ANR	7643194	Identifier	fputc		7643092	0					
ANR	7643195	ArgumentList	( boxsize >> 24 ) & 0xff		7643092	1					
ANR	7643196	Argument	( boxsize >> 24 ) & 0xff		7643092	0					
ANR	7643197	BitAndExpression	( boxsize >> 24 ) & 0xff		7643092	0		&			
ANR	7643198	ShiftExpression	boxsize >> 24		7643092	0		>>			
ANR	7643199	Identifier	boxsize		7643092	0					
ANR	7643200	PrimaryExpression	24		7643092	1					
ANR	7643201	PrimaryExpression	0xff		7643092	1					
ANR	7643202	Argument	fp		7643092	1					
ANR	7643203	Identifier	fp		7643092	0					
ANR	7643204	ExpressionStatement	"fputc ( ( boxsize >> 16 ) & 0xff , fp )"	98:4:3406:3439	7643092	10	True				
ANR	7643205	CallExpression	"fputc ( ( boxsize >> 16 ) & 0xff , fp )"		7643092	0					
ANR	7643206	Callee	fputc		7643092	0					
ANR	7643207	Identifier	fputc		7643092	0					
ANR	7643208	ArgumentList	( boxsize >> 16 ) & 0xff		7643092	1					
ANR	7643209	Argument	( boxsize >> 16 ) & 0xff		7643092	0					
ANR	7643210	BitAndExpression	( boxsize >> 16 ) & 0xff		7643092	0		&			
ANR	7643211	ShiftExpression	boxsize >> 16		7643092	0		>>			
ANR	7643212	Identifier	boxsize		7643092	0					
ANR	7643213	PrimaryExpression	16		7643092	1					
ANR	7643214	PrimaryExpression	0xff		7643092	1					
ANR	7643215	Argument	fp		7643092	1					
ANR	7643216	Identifier	fp		7643092	0					
ANR	7643217	ExpressionStatement	"fputc ( ( boxsize >> 8 ) & 0xff , fp )"	99:4:3445:3477	7643092	11	True				
ANR	7643218	CallExpression	"fputc ( ( boxsize >> 8 ) & 0xff , fp )"		7643092	0					
ANR	7643219	Callee	fputc		7643092	0					
ANR	7643220	Identifier	fputc		7643092	0					
ANR	7643221	ArgumentList	( boxsize >> 8 ) & 0xff		7643092	1					
ANR	7643222	Argument	( boxsize >> 8 ) & 0xff		7643092	0					
ANR	7643223	BitAndExpression	( boxsize >> 8 ) & 0xff		7643092	0		&			
ANR	7643224	ShiftExpression	boxsize >> 8		7643092	0		>>			
ANR	7643225	Identifier	boxsize		7643092	0					
ANR	7643226	PrimaryExpression	8		7643092	1					
ANR	7643227	PrimaryExpression	0xff		7643092	1					
ANR	7643228	Argument	fp		7643092	1					
ANR	7643229	Identifier	fp		7643092	0					
ANR	7643230	ExpressionStatement	"fputc ( boxsize & 0xff , fp )"	100:4:3483:3508	7643092	12	True				
ANR	7643231	CallExpression	"fputc ( boxsize & 0xff , fp )"		7643092	0					
ANR	7643232	Callee	fputc		7643092	0					
ANR	7643233	Identifier	fputc		7643092	0					
ANR	7643234	ArgumentList	boxsize & 0xff		7643092	1					
ANR	7643235	Argument	boxsize & 0xff		7643092	0					
ANR	7643236	BitAndExpression	boxsize & 0xff		7643092	0		&			
ANR	7643237	Identifier	boxsize		7643092	0					
ANR	7643238	PrimaryExpression	0xff		7643092	1					
ANR	7643239	Argument	fp		7643092	1					
ANR	7643240	Identifier	fp		7643092	0					
ANR	7643241	ExpressionStatement	"fwrite ( type , 4 , 1 , fp )"	101:4:3514:3536	7643092	13	True				
ANR	7643242	CallExpression	"fwrite ( type , 4 , 1 , fp )"		7643092	0					
ANR	7643243	Callee	fwrite		7643092	0					
ANR	7643244	Identifier	fwrite		7643092	0					
ANR	7643245	ArgumentList	type		7643092	1					
ANR	7643246	Argument	type		7643092	0					
ANR	7643247	Identifier	type		7643092	0					
ANR	7643248	Argument	4		7643092	1					
ANR	7643249	PrimaryExpression	4		7643092	0					
ANR	7643250	Argument	1		7643092	2					
ANR	7643251	PrimaryExpression	1		7643092	0					
ANR	7643252	Argument	fp		7643092	3					
ANR	7643253	Identifier	fp		7643092	0					
ANR	7643254	ExpressionStatement	"fwrite ( xmldata , ( size_t ) fsize , 1 , fp )"	102:4:3542:3579	7643092	14	True				
ANR	7643255	CallExpression	"fwrite ( xmldata , ( size_t ) fsize , 1 , fp )"		7643092	0					
ANR	7643256	Callee	fwrite		7643092	0					
ANR	7643257	Identifier	fwrite		7643092	0					
ANR	7643258	ArgumentList	xmldata		7643092	1					
ANR	7643259	Argument	xmldata		7643092	0					
ANR	7643260	Identifier	xmldata		7643092	0					
ANR	7643261	Argument	( size_t ) fsize		7643092	1					
ANR	7643262	CastExpression	( size_t ) fsize		7643092	0					
ANR	7643263	CastTarget	size_t		7643092	0					
ANR	7643264	Identifier	fsize		7643092	1					
ANR	7643265	Argument	1		7643092	2					
ANR	7643266	PrimaryExpression	1		7643092	0					
ANR	7643267	Argument	fp		7643092	3					
ANR	7643268	Identifier	fp		7643092	0					
ANR	7643269	ExpressionStatement	free ( xmldata )	104:4:3586:3599	7643092	15	True				
ANR	7643270	CallExpression	free ( xmldata )		7643092	0					
ANR	7643271	Callee	free		7643092	0					
ANR	7643272	Identifier	free		7643092	0					
ANR	7643273	ArgumentList	xmldata		7643092	1					
ANR	7643274	Argument	xmldata		7643092	0					
ANR	7643275	Identifier	xmldata		7643092	0					
ANR	7643276	ExpressionStatement	fclose ( fp )	105:4:3605:3615	7643092	16	True				
ANR	7643277	CallExpression	fclose ( fp )		7643092	0					
ANR	7643278	Callee	fclose		7643092	0					
ANR	7643279	Identifier	fclose		7643092	0					
ANR	7643280	ArgumentList	fp		7643092	1					
ANR	7643281	Argument	fp		7643092	0					
ANR	7643282	Identifier	fp		7643092	0					
ANR	7643283	ReturnStatement	return 0 ;	107:4:3622:3630	7643092	17	True				
ANR	7643284	PrimaryExpression	0		7643092	0					
ANR	7643285	ReturnType	int		7643092	1					
ANR	7643286	Identifier	main		7643092	2					
ANR	7643287	ParameterList	"int argc , char * argv [ ]"		7643092	3					
ANR	7643288	Parameter	int argc	75:9:2952:2959	7643092	0	True				
ANR	7643289	ParameterType	int		7643092	0					
ANR	7643290	Identifier	argc		7643092	1					
ANR	7643291	Parameter	char * argv [ ]	75:19:2962:2973	7643092	1	True				
ANR	7643292	ParameterType	char * [ ]		7643092	0					
ANR	7643293	Identifier	argv		7643092	1					
ANR	7643294	CFGEntryNode	ENTRY		7643092		True				
ANR	7643295	CFGExitNode	EXIT		7643092		True				
ANR	7643296	Symbol	argc		7643092						
ANR	7643297	Symbol	boxsize		7643092						
ANR	7643298	Symbol	fsize		7643092						
ANR	7643299	Symbol	& fsize		7643092						
ANR	7643300	Symbol	read_xmlfile		7643092						
ANR	7643301	Symbol	fp		7643092						
ANR	7643302	Symbol	* argv		7643092						
ANR	7643303	Symbol	open_jp2file		7643092						
ANR	7643304	Symbol	type		7643092						
ANR	7643305	Symbol	stderr		7643092						
ANR	7643306	Symbol	argv		7643092						
ANR	7643307	Symbol	xmldata		7643092						
ANR	7643308	Function	open_jp2file	110:0:3635:4593							
ANR	7643309	FunctionDef	open_jp2file (const char filename [ ])		7643308	0					
ANR	7643310	CompoundStatement		111:0:3678:4593	7643308	0					
ANR	7643311	IdentifierDeclStatement	FILE * fp ;	112:4:3684:3692	7643308	0	True				
ANR	7643312	IdentifierDecl	* fp		7643308	0					
ANR	7643313	IdentifierDeclType	FILE *		7643308	0					
ANR	7643314	Identifier	fp		7643308	1					
ANR	7643315	IdentifierDeclStatement	char * data ;	113:4:3698:3708	7643308	1	True				
ANR	7643316	IdentifierDecl	* data		7643308	0					
ANR	7643317	IdentifierDeclType	char *		7643308	0					
ANR	7643318	Identifier	data		7643308	1					
ANR	7643319	IfStatement	"if ( ! ( fp = fopen ( filename , ""a+b"" ) ) )"		7643308	2					
ANR	7643320	Condition	"! ( fp = fopen ( filename , ""a+b"" ) )"	115:8:3719:3748	7643308	0	True				
ANR	7643321	UnaryOperationExpression	"! ( fp = fopen ( filename , ""a+b"" ) )"		7643308	0					
ANR	7643322	UnaryOperator	!		7643308	0					
ANR	7643323	AssignmentExpression	"fp = fopen ( filename , ""a+b"" )"		7643308	1		=			
ANR	7643324	Identifier	fp		7643308	0					
ANR	7643325	CallExpression	"fopen ( filename , ""a+b"" )"		7643308	1					
ANR	7643326	Callee	fopen		7643308	0					
ANR	7643327	Identifier	fopen		7643308	0					
ANR	7643328	ArgumentList	filename		7643308	1					
ANR	7643329	Argument	filename		7643308	0					
ANR	7643330	Identifier	filename		7643308	0					
ANR	7643331	Argument	"""a+b"""		7643308	1					
ANR	7643332	PrimaryExpression	"""a+b"""		7643308	0					
ANR	7643333	CompoundStatement		5:40:72:72	7643308	1					
ANR	7643334	ExpressionStatement	"fprintf ( stderr , ""Original JP2 %s not found\\n"" , filename )"	116:8:3761:3817	7643308	0	True				
ANR	7643335	CallExpression	"fprintf ( stderr , ""Original JP2 %s not found\\n"" , filename )"		7643308	0					
ANR	7643336	Callee	fprintf		7643308	0					
ANR	7643337	Identifier	fprintf		7643308	0					
ANR	7643338	ArgumentList	stderr		7643308	1					
ANR	7643339	Argument	stderr		7643308	0					
ANR	7643340	Identifier	stderr		7643308	0					
ANR	7643341	Argument	"""Original JP2 %s not found\\n"""		7643308	1					
ANR	7643342	PrimaryExpression	"""Original JP2 %s not found\\n"""		7643308	0					
ANR	7643343	Argument	filename		7643308	2					
ANR	7643344	Identifier	filename		7643308	0					
ANR	7643345	ReturnStatement	return NULL ;	117:8:3827:3838	7643308	1	True				
ANR	7643346	Identifier	NULL		7643308	0					
ANR	7643347	IfStatement	"if ( fseek ( fp , 0 , SEEK_SET ) == - 1 )"		7643308	3					
ANR	7643348	Condition	"fseek ( fp , 0 , SEEK_SET ) == - 1"	120:8:3900:3927	7643308	0	True				
ANR	7643349	EqualityExpression	"fseek ( fp , 0 , SEEK_SET ) == - 1"		7643308	0		==			
ANR	7643350	CallExpression	"fseek ( fp , 0 , SEEK_SET )"		7643308	0					
ANR	7643351	Callee	fseek		7643308	0					
ANR	7643352	Identifier	fseek		7643308	0					
ANR	7643353	ArgumentList	fp		7643308	1					
ANR	7643354	Argument	fp		7643308	0					
ANR	7643355	Identifier	fp		7643308	0					
ANR	7643356	Argument	0		7643308	1					
ANR	7643357	PrimaryExpression	0		7643308	0					
ANR	7643358	Argument	SEEK_SET		7643308	2					
ANR	7643359	Identifier	SEEK_SET		7643308	0					
ANR	7643360	UnaryOperationExpression	- 1		7643308	1					
ANR	7643361	UnaryOperator	-		7643308	0					
ANR	7643362	PrimaryExpression	1		7643308	1					
ANR	7643363	CompoundStatement		10:38:251:251	7643308	1					
ANR	7643364	ExpressionStatement	fclose ( fp )	121:8:3940:3950	7643308	0	True				
ANR	7643365	CallExpression	fclose ( fp )		7643308	0					
ANR	7643366	Callee	fclose		7643308	0					
ANR	7643367	Identifier	fclose		7643308	0					
ANR	7643368	ArgumentList	fp		7643308	1					
ANR	7643369	Argument	fp		7643308	0					
ANR	7643370	Identifier	fp		7643308	0					
ANR	7643371	ExpressionStatement	"fprintf ( stderr , ""Original JP2 %s broken (fseek error)\\n"" , filename )"	122:8:3960:4027	7643308	1	True				
ANR	7643372	CallExpression	"fprintf ( stderr , ""Original JP2 %s broken (fseek error)\\n"" , filename )"		7643308	0					
ANR	7643373	Callee	fprintf		7643308	0					
ANR	7643374	Identifier	fprintf		7643308	0					
ANR	7643375	ArgumentList	stderr		7643308	1					
ANR	7643376	Argument	stderr		7643308	0					
ANR	7643377	Identifier	stderr		7643308	0					
ANR	7643378	Argument	"""Original JP2 %s broken (fseek error)\\n"""		7643308	1					
ANR	7643379	PrimaryExpression	"""Original JP2 %s broken (fseek error)\\n"""		7643308	0					
ANR	7643380	Argument	filename		7643308	2					
ANR	7643381	Identifier	filename		7643308	0					
ANR	7643382	ReturnStatement	return NULL ;	123:8:4037:4048	7643308	2	True				
ANR	7643383	Identifier	NULL		7643308	0					
ANR	7643384	ExpressionStatement	data = ( char * ) malloc ( 12 )	126:4:4061:4086	7643308	4	True				
ANR	7643385	AssignmentExpression	data = ( char * ) malloc ( 12 )		7643308	0		=			
ANR	7643386	Identifier	data		7643308	0					
ANR	7643387	CastExpression	( char * ) malloc ( 12 )		7643308	1					
ANR	7643388	CastTarget	char *		7643308	0					
ANR	7643389	CallExpression	malloc ( 12 )		7643308	1					
ANR	7643390	Callee	malloc		7643308	0					
ANR	7643391	Identifier	malloc		7643308	0					
ANR	7643392	ArgumentList	12		7643308	1					
ANR	7643393	Argument	12		7643308	0					
ANR	7643394	PrimaryExpression	12		7643308	0					
ANR	7643395	IfStatement	"if ( fread ( data , 12 , 1 , fp ) != 1 )"		7643308	5					
ANR	7643396	Condition	"fread ( data , 12 , 1 , fp ) != 1"	127:8:4118:4144	7643308	0	True				
ANR	7643397	EqualityExpression	"fread ( data , 12 , 1 , fp ) != 1"		7643308	0		!=			
ANR	7643398	CallExpression	"fread ( data , 12 , 1 , fp )"		7643308	0					
ANR	7643399	Callee	fread		7643308	0					
ANR	7643400	Identifier	fread		7643308	0					
ANR	7643401	ArgumentList	data		7643308	1					
ANR	7643402	Argument	data		7643308	0					
ANR	7643403	Identifier	data		7643308	0					
ANR	7643404	Argument	12		7643308	1					
ANR	7643405	PrimaryExpression	12		7643308	0					
ANR	7643406	Argument	1		7643308	2					
ANR	7643407	PrimaryExpression	1		7643308	0					
ANR	7643408	Argument	fp		7643308	3					
ANR	7643409	Identifier	fp		7643308	0					
ANR	7643410	PrimaryExpression	1		7643308	1					
ANR	7643411	CompoundStatement		17:37:468:468	7643308	1					
ANR	7643412	ExpressionStatement	free ( data )	128:8:4157:4167	7643308	0	True				
ANR	7643413	CallExpression	free ( data )		7643308	0					
ANR	7643414	Callee	free		7643308	0					
ANR	7643415	Identifier	free		7643308	0					
ANR	7643416	ArgumentList	data		7643308	1					
ANR	7643417	Argument	data		7643308	0					
ANR	7643418	Identifier	data		7643308	0					
ANR	7643419	ExpressionStatement	fclose ( fp )	129:8:4177:4187	7643308	1	True				
ANR	7643420	CallExpression	fclose ( fp )		7643308	0					
ANR	7643421	Callee	fclose		7643308	0					
ANR	7643422	Identifier	fclose		7643308	0					
ANR	7643423	ArgumentList	fp		7643308	1					
ANR	7643424	Argument	fp		7643308	0					
ANR	7643425	Identifier	fp		7643308	0					
ANR	7643426	ExpressionStatement	"fprintf ( stderr , ""Original JP2 %s broken (read error)\\n"" , filename )"	130:8:4197:4263	7643308	2	True				
ANR	7643427	CallExpression	"fprintf ( stderr , ""Original JP2 %s broken (read error)\\n"" , filename )"		7643308	0					
ANR	7643428	Callee	fprintf		7643308	0					
ANR	7643429	Identifier	fprintf		7643308	0					
ANR	7643430	ArgumentList	stderr		7643308	1					
ANR	7643431	Argument	stderr		7643308	0					
ANR	7643432	Identifier	stderr		7643308	0					
ANR	7643433	Argument	"""Original JP2 %s broken (read error)\\n"""		7643308	1					
ANR	7643434	PrimaryExpression	"""Original JP2 %s broken (read error)\\n"""		7643308	0					
ANR	7643435	Argument	filename		7643308	2					
ANR	7643436	Identifier	filename		7643308	0					
ANR	7643437	ReturnStatement	return NULL ;	131:8:4273:4284	7643308	3	True				
ANR	7643438	Identifier	NULL		7643308	0					
ANR	7643439	IfStatement	"if ( * data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 ) )"		7643308	6					
ANR	7643440	Condition	"* data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"	134:8:4301:4410	7643308	0	True				
ANR	7643441	OrExpression	"* data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		7643308	0		||			
ANR	7643442	UnaryOperationExpression	* data		7643308	0					
ANR	7643443	UnaryOperator	*		7643308	0					
ANR	7643444	Identifier	data		7643308	1					
ANR	7643445	OrExpression	"* ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		7643308	1		||			
ANR	7643446	UnaryOperationExpression	* ( data + 1 )		7643308	0					
ANR	7643447	UnaryOperator	*		7643308	0					
ANR	7643448	AdditiveExpression	data + 1		7643308	1		+			
ANR	7643449	Identifier	data		7643308	0					
ANR	7643450	PrimaryExpression	1		7643308	1					
ANR	7643451	OrExpression	"* ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		7643308	1		||			
ANR	7643452	UnaryOperationExpression	* ( data + 2 )		7643308	0					
ANR	7643453	UnaryOperator	*		7643308	0					
ANR	7643454	AdditiveExpression	data + 2		7643308	1		+			
ANR	7643455	Identifier	data		7643308	0					
ANR	7643456	PrimaryExpression	2		7643308	1					
ANR	7643457	OrExpression	"* ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		7643308	1		||			
ANR	7643458	EqualityExpression	* ( data + 3 ) != 12		7643308	0		!=			
ANR	7643459	UnaryOperationExpression	* ( data + 3 )		7643308	0					
ANR	7643460	UnaryOperator	*		7643308	0					
ANR	7643461	AdditiveExpression	data + 3		7643308	1		+			
ANR	7643462	Identifier	data		7643308	0					
ANR	7643463	PrimaryExpression	3		7643308	1					
ANR	7643464	PrimaryExpression	12		7643308	1					
ANR	7643465	CallExpression	"strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		7643308	1					
ANR	7643466	Callee	strncmp		7643308	0					
ANR	7643467	Identifier	strncmp		7643308	0					
ANR	7643468	ArgumentList	data + 4		7643308	1					
ANR	7643469	Argument	data + 4		7643308	0					
ANR	7643470	AdditiveExpression	data + 4		7643308	0		+			
ANR	7643471	Identifier	data		7643308	0					
ANR	7643472	PrimaryExpression	4		7643308	1					
ANR	7643473	Argument	"""jP  \\r\\n\\x87\\n"""		7643308	1					
ANR	7643474	PrimaryExpression	"""jP  \\r\\n\\x87\\n"""		7643308	0					
ANR	7643475	Argument	8		7643308	2					
ANR	7643476	PrimaryExpression	8		7643308	0					
ANR	7643477	CompoundStatement		25:73:734:734	7643308	1					
ANR	7643478	ExpressionStatement	free ( data )	136:8:4423:4433	7643308	0	True				
ANR	7643479	CallExpression	free ( data )		7643308	0					
ANR	7643480	Callee	free		7643308	0					
ANR	7643481	Identifier	free		7643308	0					
ANR	7643482	ArgumentList	data		7643308	1					
ANR	7643483	Argument	data		7643308	0					
ANR	7643484	Identifier	data		7643308	0					
ANR	7643485	ExpressionStatement	fclose ( fp )	137:8:4443:4453	7643308	1	True				
ANR	7643486	CallExpression	fclose ( fp )		7643308	0					
ANR	7643487	Callee	fclose		7643308	0					
ANR	7643488	Identifier	fclose		7643308	0					
ANR	7643489	ArgumentList	fp		7643308	1					
ANR	7643490	Argument	fp		7643308	0					
ANR	7643491	Identifier	fp		7643308	0					
ANR	7643492	ExpressionStatement	"fprintf ( stderr , ""No JPEG 2000 Signature box in target %s\\n"" , filename )"	138:8:4463:4533	7643308	2	True				
ANR	7643493	CallExpression	"fprintf ( stderr , ""No JPEG 2000 Signature box in target %s\\n"" , filename )"		7643308	0					
ANR	7643494	Callee	fprintf		7643308	0					
ANR	7643495	Identifier	fprintf		7643308	0					
ANR	7643496	ArgumentList	stderr		7643308	1					
ANR	7643497	Argument	stderr		7643308	0					
ANR	7643498	Identifier	stderr		7643308	0					
ANR	7643499	Argument	"""No JPEG 2000 Signature box in target %s\\n"""		7643308	1					
ANR	7643500	PrimaryExpression	"""No JPEG 2000 Signature box in target %s\\n"""		7643308	0					
ANR	7643501	Argument	filename		7643308	2					
ANR	7643502	Identifier	filename		7643308	0					
ANR	7643503	ReturnStatement	return NULL ;	139:8:4543:4554	7643308	3	True				
ANR	7643504	Identifier	NULL		7643308	0					
ANR	7643505	ExpressionStatement	free ( data )	141:4:4566:4576	7643308	7	True				
ANR	7643506	CallExpression	free ( data )		7643308	0					
ANR	7643507	Callee	free		7643308	0					
ANR	7643508	Identifier	free		7643308	0					
ANR	7643509	ArgumentList	data		7643308	1					
ANR	7643510	Argument	data		7643308	0					
ANR	7643511	Identifier	data		7643308	0					
ANR	7643512	ReturnStatement	return fp ;	142:4:4582:4591	7643308	8	True				
ANR	7643513	Identifier	fp		7643308	0					
ANR	7643514	ReturnType	FILE *		7643308	1					
ANR	7643515	Identifier	open_jp2file		7643308	2					
ANR	7643516	ParameterList	const char filename [ ]		7643308	3					
ANR	7643517	Parameter	const char filename [ ]	110:20:3655:3675	7643308	0	True				
ANR	7643518	ParameterType	const char [ ]		7643308	0					
ANR	7643519	Identifier	filename		7643308	1					
ANR	7643520	CFGEntryNode	ENTRY		7643308		True				
ANR	7643521	CFGExitNode	EXIT		7643308		True				
ANR	7643522	Symbol	SEEK_SET		7643308						
ANR	7643523	Symbol	fopen		7643308						
ANR	7643524	Symbol	malloc		7643308						
ANR	7643525	Symbol	NULL		7643308						
ANR	7643526	Symbol	data		7643308						
ANR	7643527	Symbol	fp		7643308						
ANR	7643528	Symbol	stderr		7643308						
ANR	7643529	Symbol	fseek		7643308						
ANR	7643530	Symbol	fread		7643308						
ANR	7643531	Symbol	strncmp		7643308						
ANR	7643532	Symbol	filename		7643308						
ANR	7643533	Symbol	* ( data + 3 )		7643308						
ANR	7643534	Symbol	* ( data + 2 )		7643308						
ANR	7643535	Symbol	* ( data + 1 )		7643308						
ANR	7643536	Symbol	* data		7643308						
ANR	7643537	Function	read_xmlfile	145:0:4596:5640							
ANR	7643538	FunctionDef	"read_xmlfile (const char filename [ ] , long * fsize)"		7643537	0					
ANR	7643539	CompoundStatement		146:0:4652:5640	7643537	0					
ANR	7643540	IdentifierDeclStatement	FILE * fp ;	147:4:4658:4666	7643537	0	True				
ANR	7643541	IdentifierDecl	* fp		7643537	0					
ANR	7643542	IdentifierDeclType	FILE *		7643537	0					
ANR	7643543	Identifier	fp		7643537	1					
ANR	7643544	IdentifierDeclStatement	char * data ;	148:4:4672:4682	7643537	1	True				
ANR	7643545	IdentifierDecl	* data		7643537	0					
ANR	7643546	IdentifierDeclType	char *		7643537	0					
ANR	7643547	Identifier	data		7643537	1					
ANR	7643548	IfStatement	"if ( ! ( fp = fopen ( filename , ""r"" ) ) )"		7643537	2					
ANR	7643549	Condition	"! ( fp = fopen ( filename , ""r"" ) )"	151:8:4744:4771	7643537	0	True				
ANR	7643550	UnaryOperationExpression	"! ( fp = fopen ( filename , ""r"" ) )"		7643537	0					
ANR	7643551	UnaryOperator	!		7643537	0					
ANR	7643552	AssignmentExpression	"fp = fopen ( filename , ""r"" )"		7643537	1		=			
ANR	7643553	Identifier	fp		7643537	0					
ANR	7643554	CallExpression	"fopen ( filename , ""r"" )"		7643537	1					
ANR	7643555	Callee	fopen		7643537	0					
ANR	7643556	Identifier	fopen		7643537	0					
ANR	7643557	ArgumentList	filename		7643537	1					
ANR	7643558	Argument	filename		7643537	0					
ANR	7643559	Identifier	filename		7643537	0					
ANR	7643560	Argument	"""r"""		7643537	1					
ANR	7643561	PrimaryExpression	"""r"""		7643537	0					
ANR	7643562	CompoundStatement		6:38:121:121	7643537	1					
ANR	7643563	ExpressionStatement	"fprintf ( stderr , ""XML file %s not found\\n"" , filename )"	152:8:4784:4836	7643537	0	True				
ANR	7643564	CallExpression	"fprintf ( stderr , ""XML file %s not found\\n"" , filename )"		7643537	0					
ANR	7643565	Callee	fprintf		7643537	0					
ANR	7643566	Identifier	fprintf		7643537	0					
ANR	7643567	ArgumentList	stderr		7643537	1					
ANR	7643568	Argument	stderr		7643537	0					
ANR	7643569	Identifier	stderr		7643537	0					
ANR	7643570	Argument	"""XML file %s not found\\n"""		7643537	1					
ANR	7643571	PrimaryExpression	"""XML file %s not found\\n"""		7643537	0					
ANR	7643572	Argument	filename		7643537	2					
ANR	7643573	Identifier	filename		7643537	0					
ANR	7643574	ReturnStatement	return NULL ;	153:8:4846:4857	7643537	1	True				
ANR	7643575	Identifier	NULL		7643537	0					
ANR	7643576	IfStatement	"if ( fseek ( fp , 0 , SEEK_END ) == - 1 )"		7643537	3					
ANR	7643577	Condition	"fseek ( fp , 0 , SEEK_END ) == - 1"	156:8:4874:4901	7643537	0	True				
ANR	7643578	EqualityExpression	"fseek ( fp , 0 , SEEK_END ) == - 1"		7643537	0		==			
ANR	7643579	CallExpression	"fseek ( fp , 0 , SEEK_END )"		7643537	0					
ANR	7643580	Callee	fseek		7643537	0					
ANR	7643581	Identifier	fseek		7643537	0					
ANR	7643582	ArgumentList	fp		7643537	1					
ANR	7643583	Argument	fp		7643537	0					
ANR	7643584	Identifier	fp		7643537	0					
ANR	7643585	Argument	0		7643537	1					
ANR	7643586	PrimaryExpression	0		7643537	0					
ANR	7643587	Argument	SEEK_END		7643537	2					
ANR	7643588	Identifier	SEEK_END		7643537	0					
ANR	7643589	UnaryOperationExpression	- 1		7643537	1					
ANR	7643590	UnaryOperator	-		7643537	0					
ANR	7643591	PrimaryExpression	1		7643537	1					
ANR	7643592	CompoundStatement		11:38:251:251	7643537	1					
ANR	7643593	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"	157:8:4914:4976	7643537	0	True				
ANR	7643594	CallExpression	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"		7643537	0					
ANR	7643595	Callee	fprintf		7643537	0					
ANR	7643596	Identifier	fprintf		7643537	0					
ANR	7643597	ArgumentList	stderr		7643537	1					
ANR	7643598	Argument	stderr		7643537	0					
ANR	7643599	Identifier	stderr		7643537	0					
ANR	7643600	Argument	"""XML file %s broken (seek error)\\n"""		7643537	1					
ANR	7643601	PrimaryExpression	"""XML file %s broken (seek error)\\n"""		7643537	0					
ANR	7643602	Argument	filename		7643537	2					
ANR	7643603	Identifier	filename		7643537	0					
ANR	7643604	ExpressionStatement	fclose ( fp )	158:8:4986:4996	7643537	1	True				
ANR	7643605	CallExpression	fclose ( fp )		7643537	0					
ANR	7643606	Callee	fclose		7643537	0					
ANR	7643607	Identifier	fclose		7643537	0					
ANR	7643608	ArgumentList	fp		7643537	1					
ANR	7643609	Argument	fp		7643537	0					
ANR	7643610	Identifier	fp		7643537	0					
ANR	7643611	ReturnStatement	return NULL ;	159:8:5006:5017	7643537	2	True				
ANR	7643612	Identifier	NULL		7643537	0					
ANR	7643613	IfStatement	if ( ( * fsize = ftell ( fp ) ) == - 1 )		7643537	4					
ANR	7643614	Condition	( * fsize = ftell ( fp ) ) == - 1	162:8:5034:5059	7643537	0	True				
ANR	7643615	EqualityExpression	( * fsize = ftell ( fp ) ) == - 1		7643537	0		==			
ANR	7643616	AssignmentExpression	* fsize = ftell ( fp )		7643537	0		=			
ANR	7643617	UnaryOperationExpression	* fsize		7643537	0					
ANR	7643618	UnaryOperator	*		7643537	0					
ANR	7643619	Identifier	fsize		7643537	1					
ANR	7643620	CallExpression	ftell ( fp )		7643537	1					
ANR	7643621	Callee	ftell		7643537	0					
ANR	7643622	Identifier	ftell		7643537	0					
ANR	7643623	ArgumentList	fp		7643537	1					
ANR	7643624	Argument	fp		7643537	0					
ANR	7643625	Identifier	fp		7643537	0					
ANR	7643626	UnaryOperationExpression	- 1		7643537	1					
ANR	7643627	UnaryOperator	-		7643537	0					
ANR	7643628	PrimaryExpression	1		7643537	1					
ANR	7643629	CompoundStatement		17:36:409:409	7643537	1					
ANR	7643630	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"	163:8:5072:5134	7643537	0	True				
ANR	7643631	CallExpression	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"		7643537	0					
ANR	7643632	Callee	fprintf		7643537	0					
ANR	7643633	Identifier	fprintf		7643537	0					
ANR	7643634	ArgumentList	stderr		7643537	1					
ANR	7643635	Argument	stderr		7643537	0					
ANR	7643636	Identifier	stderr		7643537	0					
ANR	7643637	Argument	"""XML file %s broken (seek error)\\n"""		7643537	1					
ANR	7643638	PrimaryExpression	"""XML file %s broken (seek error)\\n"""		7643537	0					
ANR	7643639	Argument	filename		7643537	2					
ANR	7643640	Identifier	filename		7643537	0					
ANR	7643641	ExpressionStatement	fclose ( fp )	164:8:5144:5154	7643537	1	True				
ANR	7643642	CallExpression	fclose ( fp )		7643537	0					
ANR	7643643	Callee	fclose		7643537	0					
ANR	7643644	Identifier	fclose		7643537	0					
ANR	7643645	ArgumentList	fp		7643537	1					
ANR	7643646	Argument	fp		7643537	0					
ANR	7643647	Identifier	fp		7643537	0					
ANR	7643648	ReturnStatement	return NULL ;	165:8:5164:5175	7643537	2	True				
ANR	7643649	Identifier	NULL		7643537	0					
ANR	7643650	ExpressionStatement	assert ( * fsize >= 0 )	167:4:5187:5206	7643537	5	True				
ANR	7643651	CallExpression	assert ( * fsize >= 0 )		7643537	0					
ANR	7643652	Callee	assert		7643537	0					
ANR	7643653	Identifier	assert		7643537	0					
ANR	7643654	ArgumentList	* fsize >= 0		7643537	1					
ANR	7643655	Argument	* fsize >= 0		7643537	0					
ANR	7643656	RelationalExpression	* fsize >= 0		7643537	0		>=			
ANR	7643657	UnaryOperationExpression	* fsize		7643537	0					
ANR	7643658	UnaryOperator	*		7643537	0					
ANR	7643659	Identifier	fsize		7643537	1					
ANR	7643660	PrimaryExpression	0		7643537	1					
ANR	7643661	IfStatement	"if ( fseek ( fp , 0 , SEEK_SET ) == - 1 )"		7643537	6					
ANR	7643662	Condition	"fseek ( fp , 0 , SEEK_SET ) == - 1"	169:8:5217:5244	7643537	0	True				
ANR	7643663	EqualityExpression	"fseek ( fp , 0 , SEEK_SET ) == - 1"		7643537	0		==			
ANR	7643664	CallExpression	"fseek ( fp , 0 , SEEK_SET )"		7643537	0					
ANR	7643665	Callee	fseek		7643537	0					
ANR	7643666	Identifier	fseek		7643537	0					
ANR	7643667	ArgumentList	fp		7643537	1					
ANR	7643668	Argument	fp		7643537	0					
ANR	7643669	Identifier	fp		7643537	0					
ANR	7643670	Argument	0		7643537	1					
ANR	7643671	PrimaryExpression	0		7643537	0					
ANR	7643672	Argument	SEEK_SET		7643537	2					
ANR	7643673	Identifier	SEEK_SET		7643537	0					
ANR	7643674	UnaryOperationExpression	- 1		7643537	1					
ANR	7643675	UnaryOperator	-		7643537	0					
ANR	7643676	PrimaryExpression	1		7643537	1					
ANR	7643677	CompoundStatement		24:38:594:594	7643537	1					
ANR	7643678	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"	170:8:5257:5319	7643537	0	True				
ANR	7643679	CallExpression	"fprintf ( stderr , ""XML file %s broken (seek error)\\n"" , filename )"		7643537	0					
ANR	7643680	Callee	fprintf		7643537	0					
ANR	7643681	Identifier	fprintf		7643537	0					
ANR	7643682	ArgumentList	stderr		7643537	1					
ANR	7643683	Argument	stderr		7643537	0					
ANR	7643684	Identifier	stderr		7643537	0					
ANR	7643685	Argument	"""XML file %s broken (seek error)\\n"""		7643537	1					
ANR	7643686	PrimaryExpression	"""XML file %s broken (seek error)\\n"""		7643537	0					
ANR	7643687	Argument	filename		7643537	2					
ANR	7643688	Identifier	filename		7643537	0					
ANR	7643689	ExpressionStatement	fclose ( fp )	171:8:5329:5339	7643537	1	True				
ANR	7643690	CallExpression	fclose ( fp )		7643537	0					
ANR	7643691	Callee	fclose		7643537	0					
ANR	7643692	Identifier	fclose		7643537	0					
ANR	7643693	ArgumentList	fp		7643537	1					
ANR	7643694	Argument	fp		7643537	0					
ANR	7643695	Identifier	fp		7643537	0					
ANR	7643696	ReturnStatement	return NULL ;	172:8:5349:5360	7643537	2	True				
ANR	7643697	Identifier	NULL		7643537	0					
ANR	7643698	ExpressionStatement	data = ( char * ) malloc ( ( size_t ) * fsize )	175:4:5373:5412	7643537	7	True				
ANR	7643699	AssignmentExpression	data = ( char * ) malloc ( ( size_t ) * fsize )		7643537	0		=			
ANR	7643700	Identifier	data		7643537	0					
ANR	7643701	CastExpression	( char * ) malloc ( ( size_t ) * fsize )		7643537	1					
ANR	7643702	CastTarget	char *		7643537	0					
ANR	7643703	CallExpression	malloc ( ( size_t ) * fsize )		7643537	1					
ANR	7643704	Callee	malloc		7643537	0					
ANR	7643705	Identifier	malloc		7643537	0					
ANR	7643706	ArgumentList	( size_t ) * fsize		7643537	1					
ANR	7643707	Argument	( size_t ) * fsize		7643537	0					
ANR	7643708	CastExpression	( size_t ) * fsize		7643537	0					
ANR	7643709	CastTarget	size_t		7643537	0					
ANR	7643710	UnaryOperationExpression	* fsize		7643537	1					
ANR	7643711	UnaryOperator	*		7643537	0					
ANR	7643712	Identifier	fsize		7643537	1					
ANR	7643713	IfStatement	"if ( fread ( data , ( size_t ) * fsize , 1 , fp ) != 1 )"		7643537	8					
ANR	7643714	Condition	"fread ( data , ( size_t ) * fsize , 1 , fp ) != 1"	177:8:5423:5461	7643537	0	True				
ANR	7643715	EqualityExpression	"fread ( data , ( size_t ) * fsize , 1 , fp ) != 1"		7643537	0		!=			
ANR	7643716	CallExpression	"fread ( data , ( size_t ) * fsize , 1 , fp )"		7643537	0					
ANR	7643717	Callee	fread		7643537	0					
ANR	7643718	Identifier	fread		7643537	0					
ANR	7643719	ArgumentList	data		7643537	1					
ANR	7643720	Argument	data		7643537	0					
ANR	7643721	Identifier	data		7643537	0					
ANR	7643722	Argument	( size_t ) * fsize		7643537	1					
ANR	7643723	CastExpression	( size_t ) * fsize		7643537	0					
ANR	7643724	CastTarget	size_t		7643537	0					
ANR	7643725	UnaryOperationExpression	* fsize		7643537	1					
ANR	7643726	UnaryOperator	*		7643537	0					
ANR	7643727	Identifier	fsize		7643537	1					
ANR	7643728	Argument	1		7643537	2					
ANR	7643729	PrimaryExpression	1		7643537	0					
ANR	7643730	Argument	fp		7643537	3					
ANR	7643731	Identifier	fp		7643537	0					
ANR	7643732	PrimaryExpression	1		7643537	1					
ANR	7643733	CompoundStatement		32:49:811:811	7643537	1					
ANR	7643734	ExpressionStatement	"fprintf ( stderr , ""XML file %s broken (read error)\\n"" , filename )"	178:8:5474:5536	7643537	0	True				
ANR	7643735	CallExpression	"fprintf ( stderr , ""XML file %s broken (read error)\\n"" , filename )"		7643537	0					
ANR	7643736	Callee	fprintf		7643537	0					
ANR	7643737	Identifier	fprintf		7643537	0					
ANR	7643738	ArgumentList	stderr		7643537	1					
ANR	7643739	Argument	stderr		7643537	0					
ANR	7643740	Identifier	stderr		7643537	0					
ANR	7643741	Argument	"""XML file %s broken (read error)\\n"""		7643537	1					
ANR	7643742	PrimaryExpression	"""XML file %s broken (read error)\\n"""		7643537	0					
ANR	7643743	Argument	filename		7643537	2					
ANR	7643744	Identifier	filename		7643537	0					
ANR	7643745	ExpressionStatement	free ( data )	179:8:5546:5556	7643537	1	True				
ANR	7643746	CallExpression	free ( data )		7643537	0					
ANR	7643747	Callee	free		7643537	0					
ANR	7643748	Identifier	free		7643537	0					
ANR	7643749	ArgumentList	data		7643537	1					
ANR	7643750	Argument	data		7643537	0					
ANR	7643751	Identifier	data		7643537	0					
ANR	7643752	ExpressionStatement	fclose ( fp )	180:8:5566:5576	7643537	2	True				
ANR	7643753	CallExpression	fclose ( fp )		7643537	0					
ANR	7643754	Callee	fclose		7643537	0					
ANR	7643755	Identifier	fclose		7643537	0					
ANR	7643756	ArgumentList	fp		7643537	1					
ANR	7643757	Argument	fp		7643537	0					
ANR	7643758	Identifier	fp		7643537	0					
ANR	7643759	ReturnStatement	return NULL ;	181:8:5586:5597	7643537	3	True				
ANR	7643760	Identifier	NULL		7643537	0					
ANR	7643761	ExpressionStatement	fclose ( fp )	184:4:5610:5620	7643537	9	True				
ANR	7643762	CallExpression	fclose ( fp )		7643537	0					
ANR	7643763	Callee	fclose		7643537	0					
ANR	7643764	Identifier	fclose		7643537	0					
ANR	7643765	ArgumentList	fp		7643537	1					
ANR	7643766	Argument	fp		7643537	0					
ANR	7643767	Identifier	fp		7643537	0					
ANR	7643768	ReturnStatement	return data ;	186:4:5627:5638	7643537	10	True				
ANR	7643769	Identifier	data		7643537	0					
ANR	7643770	ReturnType	char *		7643537	1					
ANR	7643771	Identifier	read_xmlfile		7643537	2					
ANR	7643772	ParameterList	"const char filename [ ] , long * fsize"		7643537	3					
ANR	7643773	Parameter	const char filename [ ]	145:20:4616:4636	7643537	0	True				
ANR	7643774	ParameterType	const char [ ]		7643537	0					
ANR	7643775	Identifier	filename		7643537	1					
ANR	7643776	Parameter	long * fsize	145:43:4639:4649	7643537	1	True				
ANR	7643777	ParameterType	long *		7643537	0					
ANR	7643778	Identifier	fsize		7643537	1					
ANR	7643779	CFGEntryNode	ENTRY		7643537		True				
ANR	7643780	CFGExitNode	EXIT		7643537		True				
ANR	7643781	Symbol	SEEK_SET		7643537						
ANR	7643782	Symbol	fopen		7643537						
ANR	7643783	Symbol	malloc		7643537						
ANR	7643784	Symbol	NULL		7643537						
ANR	7643785	Symbol	data		7643537						
ANR	7643786	Symbol	ftell		7643537						
ANR	7643787	Symbol	* fsize		7643537						
ANR	7643788	Symbol	fp		7643537						
ANR	7643789	Symbol	stderr		7643537						
ANR	7643790	Symbol	fseek		7643537						
ANR	7643791	Symbol	fread		7643537						
ANR	7643792	Symbol	SEEK_END		7643537						
ANR	7643793	Symbol	filename		7643537						
ANR	7643794	Symbol	fsize		7643537						
