command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3885598	File	data/converged/CVE-2018-16863_ghostpdl/ftutil.c								
ANR	3885599	Function	ft_mem_alloc	50:2:2799:3100							
ANR	3885600	FunctionDef	"ft_mem_alloc (FT_Memory memory , FT_Long size , FT_Error * p_error)"		3885599	0					
ANR	3885601	CompoundStatement		53:2:2904:3100	3885599	0					
ANR	3885602	IdentifierDeclStatement	FT_Error error ;	54:4:2910:2927	3885599	0	True				
ANR	3885603	IdentifierDecl	error		3885599	0					
ANR	3885604	IdentifierDeclType	FT_Error		3885599	0					
ANR	3885605	Identifier	error		3885599	1					
ANR	3885606	IdentifierDeclStatement	"FT_Pointer block = ft_mem_qalloc ( memory , size , & error ) ;"	55:4:2933:2990	3885599	1	True				
ANR	3885607	IdentifierDecl	"block = ft_mem_qalloc ( memory , size , & error )"		3885599	0					
ANR	3885608	IdentifierDeclType	FT_Pointer		3885599	0					
ANR	3885609	Identifier	block		3885599	1					
ANR	3885610	AssignmentExpression	"block = ft_mem_qalloc ( memory , size , & error )"		3885599	2		=			
ANR	3885611	Identifier	block		3885599	0					
ANR	3885612	CallExpression	"ft_mem_qalloc ( memory , size , & error )"		3885599	1					
ANR	3885613	Callee	ft_mem_qalloc		3885599	0					
ANR	3885614	Identifier	ft_mem_qalloc		3885599	0					
ANR	3885615	ArgumentList	memory		3885599	1					
ANR	3885616	Argument	memory		3885599	0					
ANR	3885617	Identifier	memory		3885599	0					
ANR	3885618	Argument	size		3885599	1					
ANR	3885619	Identifier	size		3885599	0					
ANR	3885620	Argument	& error		3885599	2					
ANR	3885621	UnaryOperationExpression	& error		3885599	0					
ANR	3885622	UnaryOperator	&		3885599	0					
ANR	3885623	Identifier	error		3885599	1					
ANR	3885624	IfStatement	if ( ! error && size > 0 )		3885599	2					
ANR	3885625	Condition	! error && size > 0	57:9:3002:3019	3885599	0	True				
ANR	3885626	AndExpression	! error && size > 0		3885599	0		&&			
ANR	3885627	UnaryOperationExpression	! error		3885599	0					
ANR	3885628	UnaryOperator	!		3885599	0					
ANR	3885629	Identifier	error		3885599	1					
ANR	3885630	RelationalExpression	size > 0		3885599	1		>			
ANR	3885631	Identifier	size		3885599	0					
ANR	3885632	PrimaryExpression	0		3885599	1					
ANR	3885633	ExpressionStatement	"FT_MEM_ZERO ( block , size )"	58:6:3029:3055	3885599	1	True				
ANR	3885634	CallExpression	"FT_MEM_ZERO ( block , size )"		3885599	0					
ANR	3885635	Callee	FT_MEM_ZERO		3885599	0					
ANR	3885636	Identifier	FT_MEM_ZERO		3885599	0					
ANR	3885637	ArgumentList	block		3885599	1					
ANR	3885638	Argument	block		3885599	0					
ANR	3885639	Identifier	block		3885599	0					
ANR	3885640	Argument	size		3885599	1					
ANR	3885641	Identifier	size		3885599	0					
ANR	3885642	ExpressionStatement	* p_error = error	60:4:3062:3078	3885599	3	True				
ANR	3885643	AssignmentExpression	* p_error = error		3885599	0		=			
ANR	3885644	UnaryOperationExpression	* p_error		3885599	0					
ANR	3885645	UnaryOperator	*		3885599	0					
ANR	3885646	Identifier	p_error		3885599	1					
ANR	3885647	Identifier	error		3885599	1					
ANR	3885648	ReturnStatement	return block ;	61:4:3084:3096	3885599	4	True				
ANR	3885649	Identifier	block		3885599	0					
ANR	3885650	Identifier	ft_mem_alloc		3885599	1					
ANR	3885651	ParameterList	"FT_Memory memory , FT_Long size , FT_Error * p_error"		3885599	2					
ANR	3885652	Parameter	FT_Memory memory	50:16:2813:2829	3885599	0	True				
ANR	3885653	ParameterType	FT_Memory		3885599	0					
ANR	3885654	Identifier	memory		3885599	1					
ANR	3885655	Parameter	FT_Long size	51:16:2848:2862	3885599	1	True				
ANR	3885656	ParameterType	FT_Long		3885599	0					
ANR	3885657	Identifier	size		3885599	1					
ANR	3885658	Parameter	FT_Error * p_error	52:16:2881:2898	3885599	2	True				
ANR	3885659	ParameterType	FT_Error *		3885599	0					
ANR	3885660	Identifier	p_error		3885599	1					
ANR	3885661	CFGEntryNode	ENTRY		3885599		True				
ANR	3885662	CFGExitNode	EXIT		3885599		True				
ANR	3885663	Symbol	p_error		3885599						
ANR	3885664	Symbol	& error		3885599						
ANR	3885665	Symbol	memory		3885599						
ANR	3885666	Symbol	size		3885599						
ANR	3885667	Symbol	* p_error		3885599						
ANR	3885668	Symbol	block		3885599						
ANR	3885669	Symbol	ft_mem_qalloc		3885599						
ANR	3885670	Symbol	error		3885599						
ANR	3885671	Function	ft_mem_qalloc	66:2:3134:3626							
ANR	3885672	FunctionDef	"ft_mem_qalloc (FT_Memory memory , FT_Long size , FT_Error * p_error)"		3885671	0					
ANR	3885673	CompoundStatement		69:2:3242:3626	3885671	0					
ANR	3885674	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	70:4:3248:3277	3885671	0	True				
ANR	3885675	IdentifierDecl	error = FT_Err_Ok		3885671	0					
ANR	3885676	IdentifierDeclType	FT_Error		3885671	0					
ANR	3885677	Identifier	error		3885671	1					
ANR	3885678	AssignmentExpression	error = FT_Err_Ok		3885671	2		=			
ANR	3885679	Identifier	FT_Err_Ok		3885671	0					
ANR	3885680	Identifier	FT_Err_Ok		3885671	1					
ANR	3885681	IdentifierDeclStatement	FT_Pointer block = NULL ;	71:4:3283:3307	3885671	1	True				
ANR	3885682	IdentifierDecl	block = NULL		3885671	0					
ANR	3885683	IdentifierDeclType	FT_Pointer		3885671	0					
ANR	3885684	Identifier	block		3885671	1					
ANR	3885685	AssignmentExpression	block = NULL		3885671	2		=			
ANR	3885686	Identifier	NULL		3885671	0					
ANR	3885687	Identifier	NULL		3885671	1					
ANR	3885688	IfStatement	if ( size > 0 )		3885671	2					
ANR	3885689	Condition	size > 0	74:9:3320:3327	3885671	0	True				
ANR	3885690	RelationalExpression	size > 0		3885671	0		>			
ANR	3885691	Identifier	size		3885671	0					
ANR	3885692	PrimaryExpression	0		3885671	1					
ANR	3885693	CompoundStatement		7:4:92:92	3885671	1					
ANR	3885694	ExpressionStatement	"block = memory -> alloc ( memory , size )"	76:6:3343:3380	3885671	0	True				
ANR	3885695	AssignmentExpression	"block = memory -> alloc ( memory , size )"		3885671	0		=			
ANR	3885696	Identifier	block		3885671	0					
ANR	3885697	CallExpression	"memory -> alloc ( memory , size )"		3885671	1					
ANR	3885698	Callee	memory -> alloc		3885671	0					
ANR	3885699	PtrMemberAccess	memory -> alloc		3885671	0					
ANR	3885700	Identifier	memory		3885671	0					
ANR	3885701	Identifier	alloc		3885671	1					
ANR	3885702	ArgumentList	memory		3885671	1					
ANR	3885703	Argument	memory		3885671	0					
ANR	3885704	Identifier	memory		3885671	0					
ANR	3885705	Argument	size		3885671	1					
ANR	3885706	Identifier	size		3885671	0					
ANR	3885707	IfStatement	if ( ! block )		3885671	1					
ANR	3885708	Condition	! block	77:11:3393:3398	3885671	0	True				
ANR	3885709	UnaryOperationExpression	! block		3885671	0					
ANR	3885710	UnaryOperator	!		3885671	0					
ANR	3885711	Identifier	block		3885671	1					
ANR	3885712	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	78:8:3410:3443	3885671	1	True				
ANR	3885713	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		3885671	0		=			
ANR	3885714	Identifier	error		3885671	0					
ANR	3885715	CallExpression	FT_THROW ( Out_Of_Memory )		3885671	1					
ANR	3885716	Callee	FT_THROW		3885671	0					
ANR	3885717	Identifier	FT_THROW		3885671	0					
ANR	3885718	ArgumentList	Out_Of_Memory		3885671	1					
ANR	3885719	Argument	Out_Of_Memory		3885671	0					
ANR	3885720	Identifier	Out_Of_Memory		3885671	0					
ANR	3885721	ElseStatement	else		3885671	0					
ANR	3885722	IfStatement	if ( size < 0 )		3885671	0					
ANR	3885723	Condition	size < 0	80:14:3465:3472	3885671	0	True				
ANR	3885724	RelationalExpression	size < 0		3885671	0		<			
ANR	3885725	Identifier	size		3885671	0					
ANR	3885726	PrimaryExpression	0		3885671	1					
ANR	3885727	CompoundStatement		13:4:237:237	3885671	1					
ANR	3885728	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	83:6:3539:3575	3885671	0	True				
ANR	3885729	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3885671	0		=			
ANR	3885730	Identifier	error		3885671	0					
ANR	3885731	CallExpression	FT_THROW ( Invalid_Argument )		3885671	1					
ANR	3885732	Callee	FT_THROW		3885671	0					
ANR	3885733	Identifier	FT_THROW		3885671	0					
ANR	3885734	ArgumentList	Invalid_Argument		3885671	1					
ANR	3885735	Argument	Invalid_Argument		3885671	0					
ANR	3885736	Identifier	Invalid_Argument		3885671	0					
ANR	3885737	ExpressionStatement	* p_error = error	86:4:3588:3604	3885671	3	True				
ANR	3885738	AssignmentExpression	* p_error = error		3885671	0		=			
ANR	3885739	UnaryOperationExpression	* p_error		3885671	0					
ANR	3885740	UnaryOperator	*		3885671	0					
ANR	3885741	Identifier	p_error		3885671	1					
ANR	3885742	Identifier	error		3885671	1					
ANR	3885743	ReturnStatement	return block ;	87:4:3610:3622	3885671	4	True				
ANR	3885744	Identifier	block		3885671	0					
ANR	3885745	Identifier	ft_mem_qalloc		3885671	1					
ANR	3885746	ParameterList	"FT_Memory memory , FT_Long size , FT_Error * p_error"		3885671	2					
ANR	3885747	Parameter	FT_Memory memory	66:17:3149:3165	3885671	0	True				
ANR	3885748	ParameterType	FT_Memory		3885671	0					
ANR	3885749	Identifier	memory		3885671	1					
ANR	3885750	Parameter	FT_Long size	67:17:3185:3199	3885671	1	True				
ANR	3885751	ParameterType	FT_Long		3885671	0					
ANR	3885752	Identifier	size		3885671	1					
ANR	3885753	Parameter	FT_Error * p_error	68:17:3219:3236	3885671	2	True				
ANR	3885754	ParameterType	FT_Error *		3885671	0					
ANR	3885755	Identifier	p_error		3885671	1					
ANR	3885756	CFGEntryNode	ENTRY		3885671		True				
ANR	3885757	CFGExitNode	EXIT		3885671		True				
ANR	3885758	Symbol	p_error		3885671						
ANR	3885759	Symbol	memory		3885671						
ANR	3885760	Symbol	NULL		3885671						
ANR	3885761	Symbol	FT_Err_Ok		3885671						
ANR	3885762	Symbol	Invalid_Argument		3885671						
ANR	3885763	Symbol	error		3885671						
ANR	3885764	Symbol	* memory		3885671						
ANR	3885765	Symbol	FT_THROW		3885671						
ANR	3885766	Symbol	memory -> alloc		3885671						
ANR	3885767	Symbol	size		3885671						
ANR	3885768	Symbol	Out_Of_Memory		3885671						
ANR	3885769	Symbol	* p_error		3885671						
ANR	3885770	Symbol	block		3885671						
ANR	3885771	Function	ft_mem_realloc	92:2:3660:4248							
ANR	3885772	FunctionDef	"ft_mem_realloc (FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error)"		3885771	0					
ANR	3885773	CompoundStatement		98:2:3892:4248	3885771	0					
ANR	3885774	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	99:4:3898:3925	3885771	0	True				
ANR	3885775	IdentifierDecl	error = FT_Err_Ok		3885771	0					
ANR	3885776	IdentifierDeclType	FT_Error		3885771	0					
ANR	3885777	Identifier	error		3885771	1					
ANR	3885778	AssignmentExpression	error = FT_Err_Ok		3885771	2		=			
ANR	3885779	Identifier	FT_Err_Ok		3885771	0					
ANR	3885780	Identifier	FT_Err_Ok		3885771	1					
ANR	3885781	ExpressionStatement	"block = ft_mem_qrealloc ( memory , item_size , cur_count , new_count , block , & error )"	102:4:3933:4043	3885771	1	True				
ANR	3885782	AssignmentExpression	"block = ft_mem_qrealloc ( memory , item_size , cur_count , new_count , block , & error )"		3885771	0		=			
ANR	3885783	Identifier	block		3885771	0					
ANR	3885784	CallExpression	"ft_mem_qrealloc ( memory , item_size , cur_count , new_count , block , & error )"		3885771	1					
ANR	3885785	Callee	ft_mem_qrealloc		3885771	0					
ANR	3885786	Identifier	ft_mem_qrealloc		3885771	0					
ANR	3885787	ArgumentList	memory		3885771	1					
ANR	3885788	Argument	memory		3885771	0					
ANR	3885789	Identifier	memory		3885771	0					
ANR	3885790	Argument	item_size		3885771	1					
ANR	3885791	Identifier	item_size		3885771	0					
ANR	3885792	Argument	cur_count		3885771	2					
ANR	3885793	Identifier	cur_count		3885771	0					
ANR	3885794	Argument	new_count		3885771	3					
ANR	3885795	Identifier	new_count		3885771	0					
ANR	3885796	Argument	block		3885771	4					
ANR	3885797	Identifier	block		3885771	0					
ANR	3885798	Argument	& error		3885771	5					
ANR	3885799	UnaryOperationExpression	& error		3885771	0					
ANR	3885800	UnaryOperator	&		3885771	0					
ANR	3885801	Identifier	error		3885771	1					
ANR	3885802	IfStatement	if ( ! error && new_count > cur_count )		3885771	2					
ANR	3885803	Condition	! error && new_count > cur_count	104:9:4054:4084	3885771	0	True				
ANR	3885804	AndExpression	! error && new_count > cur_count		3885771	0		&&			
ANR	3885805	UnaryOperationExpression	! error		3885771	0					
ANR	3885806	UnaryOperator	!		3885771	0					
ANR	3885807	Identifier	error		3885771	1					
ANR	3885808	RelationalExpression	new_count > cur_count		3885771	1		>			
ANR	3885809	Identifier	new_count		3885771	0					
ANR	3885810	Identifier	cur_count		3885771	1					
ANR	3885811	ExpressionStatement	"FT_MEM_ZERO ( ( char * ) block + cur_count * item_size , ( new_count - cur_count ) * item_size )"	105:6:4094:4203	3885771	1	True				
ANR	3885812	CallExpression	"FT_MEM_ZERO ( ( char * ) block + cur_count * item_size , ( new_count - cur_count ) * item_size )"		3885771	0					
ANR	3885813	Callee	FT_MEM_ZERO		3885771	0					
ANR	3885814	Identifier	FT_MEM_ZERO		3885771	0					
ANR	3885815	ArgumentList	( char * ) block + cur_count * item_size		3885771	1					
ANR	3885816	Argument	( char * ) block + cur_count * item_size		3885771	0					
ANR	3885817	AdditiveExpression	( char * ) block + cur_count * item_size		3885771	0		+			
ANR	3885818	CastExpression	( char * ) block		3885771	0					
ANR	3885819	CastTarget	char *		3885771	0					
ANR	3885820	Identifier	block		3885771	1					
ANR	3885821	MultiplicativeExpression	cur_count * item_size		3885771	1		*			
ANR	3885822	Identifier	cur_count		3885771	0					
ANR	3885823	Identifier	item_size		3885771	1					
ANR	3885824	Argument	( new_count - cur_count ) * item_size		3885771	1					
ANR	3885825	MultiplicativeExpression	( new_count - cur_count ) * item_size		3885771	0		*			
ANR	3885826	AdditiveExpression	new_count - cur_count		3885771	0		-			
ANR	3885827	Identifier	new_count		3885771	0					
ANR	3885828	Identifier	cur_count		3885771	1					
ANR	3885829	Identifier	item_size		3885771	1					
ANR	3885830	ExpressionStatement	* p_error = error	108:4:4210:4226	3885771	3	True				
ANR	3885831	AssignmentExpression	* p_error = error		3885771	0		=			
ANR	3885832	UnaryOperationExpression	* p_error		3885771	0					
ANR	3885833	UnaryOperator	*		3885771	0					
ANR	3885834	Identifier	p_error		3885771	1					
ANR	3885835	Identifier	error		3885771	1					
ANR	3885836	ReturnStatement	return block ;	109:4:4232:4244	3885771	4	True				
ANR	3885837	Identifier	block		3885771	0					
ANR	3885838	Identifier	ft_mem_realloc		3885771	1					
ANR	3885839	ParameterList	"FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error"		3885771	2					
ANR	3885840	Parameter	FT_Memory memory	92:18:3676:3692	3885771	0	True				
ANR	3885841	ParameterType	FT_Memory		3885771	0					
ANR	3885842	Identifier	memory		3885771	1					
ANR	3885843	Parameter	FT_Long item_size	93:18:3713:3732	3885771	1	True				
ANR	3885844	ParameterType	FT_Long		3885771	0					
ANR	3885845	Identifier	item_size		3885771	1					
ANR	3885846	Parameter	FT_Long cur_count	94:18:3753:3772	3885771	2	True				
ANR	3885847	ParameterType	FT_Long		3885771	0					
ANR	3885848	Identifier	cur_count		3885771	1					
ANR	3885849	Parameter	FT_Long new_count	95:18:3793:3812	3885771	3	True				
ANR	3885850	ParameterType	FT_Long		3885771	0					
ANR	3885851	Identifier	new_count		3885771	1					
ANR	3885852	Parameter	void * block	96:18:3833:3848	3885771	4	True				
ANR	3885853	ParameterType	void *		3885771	0					
ANR	3885854	Identifier	block		3885771	1					
ANR	3885855	Parameter	FT_Error * p_error	97:18:3869:3886	3885771	5	True				
ANR	3885856	ParameterType	FT_Error *		3885771	0					
ANR	3885857	Identifier	p_error		3885771	1					
ANR	3885858	CFGEntryNode	ENTRY		3885771		True				
ANR	3885859	CFGExitNode	EXIT		3885771		True				
ANR	3885860	Symbol	p_error		3885771						
ANR	3885861	Symbol	& error		3885771						
ANR	3885862	Symbol	memory		3885771						
ANR	3885863	Symbol	FT_Err_Ok		3885771						
ANR	3885864	Symbol	new_count		3885771						
ANR	3885865	Symbol	* p_error		3885771						
ANR	3885866	Symbol	cur_count		3885771						
ANR	3885867	Symbol	block		3885771						
ANR	3885868	Symbol	error		3885771						
ANR	3885869	Symbol	item_size		3885771						
ANR	3885870	Symbol	ft_mem_qrealloc		3885771						
ANR	3885871	Function	ft_mem_qrealloc	114:2:4282:5689							
ANR	3885872	FunctionDef	"ft_mem_qrealloc (FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error)"		3885871	0					
ANR	3885873	CompoundStatement		120:2:4520:5689	3885871	0					
ANR	3885874	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	121:4:4526:4553	3885871	0	True				
ANR	3885875	IdentifierDecl	error = FT_Err_Ok		3885871	0					
ANR	3885876	IdentifierDeclType	FT_Error		3885871	0					
ANR	3885877	Identifier	error		3885871	1					
ANR	3885878	AssignmentExpression	error = FT_Err_Ok		3885871	2		=			
ANR	3885879	Identifier	FT_Err_Ok		3885871	0					
ANR	3885880	Identifier	FT_Err_Ok		3885871	1					
ANR	3885881	IfStatement	if ( cur_count < 0 || new_count < 0 || item_size < 0 )		3885871	1					
ANR	3885882	Condition	cur_count < 0 || new_count < 0 || item_size < 0	128:9:4736:4782	3885871	0	True				
ANR	3885883	OrExpression	cur_count < 0 || new_count < 0 || item_size < 0		3885871	0		||			
ANR	3885884	RelationalExpression	cur_count < 0		3885871	0		<			
ANR	3885885	Identifier	cur_count		3885871	0					
ANR	3885886	PrimaryExpression	0		3885871	1					
ANR	3885887	OrExpression	new_count < 0 || item_size < 0		3885871	1		||			
ANR	3885888	RelationalExpression	new_count < 0		3885871	0		<			
ANR	3885889	Identifier	new_count		3885871	0					
ANR	3885890	PrimaryExpression	0		3885871	1					
ANR	3885891	RelationalExpression	item_size < 0		3885871	1		<			
ANR	3885892	Identifier	item_size		3885871	0					
ANR	3885893	PrimaryExpression	0		3885871	1					
ANR	3885894	CompoundStatement		10:4:269:269	3885871	1					
ANR	3885895	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	131:6:4855:4891	3885871	0	True				
ANR	3885896	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3885871	0		=			
ANR	3885897	Identifier	error		3885871	0					
ANR	3885898	CallExpression	FT_THROW ( Invalid_Argument )		3885871	1					
ANR	3885899	Callee	FT_THROW		3885871	0					
ANR	3885900	Identifier	FT_THROW		3885871	0					
ANR	3885901	ArgumentList	Invalid_Argument		3885871	1					
ANR	3885902	Argument	Invalid_Argument		3885871	0					
ANR	3885903	Identifier	Invalid_Argument		3885871	0					
ANR	3885904	ElseStatement	else		3885871	0					
ANR	3885905	IfStatement	if ( new_count == 0 || item_size == 0 )		3885871	0					
ANR	3885906	Condition	new_count == 0 || item_size == 0	133:14:4913:4944	3885871	0	True				
ANR	3885907	OrExpression	new_count == 0 || item_size == 0		3885871	0		||			
ANR	3885908	EqualityExpression	new_count == 0		3885871	0		==			
ANR	3885909	Identifier	new_count		3885871	0					
ANR	3885910	PrimaryExpression	0		3885871	1					
ANR	3885911	EqualityExpression	item_size == 0		3885871	1		==			
ANR	3885912	Identifier	item_size		3885871	0					
ANR	3885913	PrimaryExpression	0		3885871	1					
ANR	3885914	CompoundStatement		15:4:431:431	3885871	1					
ANR	3885915	ExpressionStatement	"ft_mem_free ( memory , block )"	135:6:4960:4988	3885871	0	True				
ANR	3885916	CallExpression	"ft_mem_free ( memory , block )"		3885871	0					
ANR	3885917	Callee	ft_mem_free		3885871	0					
ANR	3885918	Identifier	ft_mem_free		3885871	0					
ANR	3885919	ArgumentList	memory		3885871	1					
ANR	3885920	Argument	memory		3885871	0					
ANR	3885921	Identifier	memory		3885871	0					
ANR	3885922	Argument	block		3885871	1					
ANR	3885923	Identifier	block		3885871	0					
ANR	3885924	ExpressionStatement	block = NULL	136:6:4996:5008	3885871	1	True				
ANR	3885925	AssignmentExpression	block = NULL		3885871	0		=			
ANR	3885926	Identifier	block		3885871	0					
ANR	3885927	Identifier	NULL		3885871	1					
ANR	3885928	ElseStatement	else		3885871	0					
ANR	3885929	IfStatement	if ( new_count > FT_INT_MAX / item_size )		3885871	0					
ANR	3885930	Condition	new_count > FT_INT_MAX / item_size	138:14:5030:5063	3885871	0	True				
ANR	3885931	RelationalExpression	new_count > FT_INT_MAX / item_size		3885871	0		>			
ANR	3885932	Identifier	new_count		3885871	0					
ANR	3885933	MultiplicativeExpression	FT_INT_MAX / item_size		3885871	1		/			
ANR	3885934	Identifier	FT_INT_MAX		3885871	0					
ANR	3885935	Identifier	item_size		3885871	1					
ANR	3885936	CompoundStatement		20:4:550:550	3885871	1					
ANR	3885937	ExpressionStatement	error = FT_THROW ( Array_Too_Large )	140:6:5079:5114	3885871	0	True				
ANR	3885938	AssignmentExpression	error = FT_THROW ( Array_Too_Large )		3885871	0		=			
ANR	3885939	Identifier	error		3885871	0					
ANR	3885940	CallExpression	FT_THROW ( Array_Too_Large )		3885871	1					
ANR	3885941	Callee	FT_THROW		3885871	0					
ANR	3885942	Identifier	FT_THROW		3885871	0					
ANR	3885943	ArgumentList	Array_Too_Large		3885871	1					
ANR	3885944	Argument	Array_Too_Large		3885871	0					
ANR	3885945	Identifier	Array_Too_Large		3885871	0					
ANR	3885946	ElseStatement	else		3885871	0					
ANR	3885947	IfStatement	if ( cur_count == 0 )		3885871	0					
ANR	3885948	Condition	cur_count == 0	142:14:5136:5149	3885871	0	True				
ANR	3885949	EqualityExpression	cur_count == 0		3885871	0		==			
ANR	3885950	Identifier	cur_count		3885871	0					
ANR	3885951	PrimaryExpression	0		3885871	1					
ANR	3885952	CompoundStatement		24:4:636:636	3885871	1					
ANR	3885953	ExpressionStatement	FT_ASSERT ( ! block )	144:6:5165:5184	3885871	0	True				
ANR	3885954	CallExpression	FT_ASSERT ( ! block )		3885871	0					
ANR	3885955	Callee	FT_ASSERT		3885871	0					
ANR	3885956	Identifier	FT_ASSERT		3885871	0					
ANR	3885957	ArgumentList	! block		3885871	1					
ANR	3885958	Argument	! block		3885871	0					
ANR	3885959	UnaryOperationExpression	! block		3885871	0					
ANR	3885960	UnaryOperator	!		3885871	0					
ANR	3885961	Identifier	block		3885871	1					
ANR	3885962	ExpressionStatement	"block = memory -> alloc ( memory , new_count * item_size )"	146:6:5193:5247	3885871	1	True				
ANR	3885963	AssignmentExpression	"block = memory -> alloc ( memory , new_count * item_size )"		3885871	0		=			
ANR	3885964	Identifier	block		3885871	0					
ANR	3885965	CallExpression	"memory -> alloc ( memory , new_count * item_size )"		3885871	1					
ANR	3885966	Callee	memory -> alloc		3885871	0					
ANR	3885967	PtrMemberAccess	memory -> alloc		3885871	0					
ANR	3885968	Identifier	memory		3885871	0					
ANR	3885969	Identifier	alloc		3885871	1					
ANR	3885970	ArgumentList	memory		3885871	1					
ANR	3885971	Argument	memory		3885871	0					
ANR	3885972	Identifier	memory		3885871	0					
ANR	3885973	Argument	new_count * item_size		3885871	1					
ANR	3885974	MultiplicativeExpression	new_count * item_size		3885871	0		*			
ANR	3885975	Identifier	new_count		3885871	0					
ANR	3885976	Identifier	item_size		3885871	1					
ANR	3885977	IfStatement	if ( block == NULL )		3885871	2					
ANR	3885978	Condition	block == NULL	147:11:5260:5272	3885871	0	True				
ANR	3885979	EqualityExpression	block == NULL		3885871	0		==			
ANR	3885980	Identifier	block		3885871	0					
ANR	3885981	Identifier	NULL		3885871	1					
ANR	3885982	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	148:8:5284:5317	3885871	1	True				
ANR	3885983	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		3885871	0		=			
ANR	3885984	Identifier	error		3885871	0					
ANR	3885985	CallExpression	FT_THROW ( Out_Of_Memory )		3885871	1					
ANR	3885986	Callee	FT_THROW		3885871	0					
ANR	3885987	Identifier	FT_THROW		3885871	0					
ANR	3885988	ArgumentList	Out_Of_Memory		3885871	1					
ANR	3885989	Argument	Out_Of_Memory		3885871	0					
ANR	3885990	Identifier	Out_Of_Memory		3885871	0					
ANR	3885991	ElseStatement	else		3885871	0					
ANR	3885992	CompoundStatement		35:6:903:947	3885871	0					
ANR	3885993	IdentifierDeclStatement	FT_Pointer block2 ;	152:6:5346:5364	3885871	0	True				
ANR	3885994	IdentifierDecl	block2		3885871	0					
ANR	3885995	IdentifierDeclType	FT_Pointer		3885871	0					
ANR	3885996	Identifier	block2		3885871	1					
ANR	3885997	IdentifierDeclStatement	FT_Long cur_size = cur_count * item_size ;	153:6:5372:5416	3885871	1	True				
ANR	3885998	IdentifierDecl	cur_size = cur_count * item_size		3885871	0					
ANR	3885999	IdentifierDeclType	FT_Long		3885871	0					
ANR	3886000	Identifier	cur_size		3885871	1					
ANR	3886001	AssignmentExpression	cur_size = cur_count * item_size		3885871	2		=			
ANR	3886002	Identifier	cur_size		3885871	0					
ANR	3886003	MultiplicativeExpression	cur_count * item_size		3885871	1		*			
ANR	3886004	Identifier	cur_count		3885871	0					
ANR	3886005	Identifier	item_size		3885871	1					
ANR	3886006	IdentifierDeclStatement	FT_Long new_size = new_count * item_size ;	154:6:5424:5468	3885871	2	True				
ANR	3886007	IdentifierDecl	new_size = new_count * item_size		3885871	0					
ANR	3886008	IdentifierDeclType	FT_Long		3885871	0					
ANR	3886009	Identifier	new_size		3885871	1					
ANR	3886010	AssignmentExpression	new_size = new_count * item_size		3885871	2		=			
ANR	3886011	Identifier	new_size		3885871	0					
ANR	3886012	MultiplicativeExpression	new_count * item_size		3885871	1		*			
ANR	3886013	Identifier	new_count		3885871	0					
ANR	3886014	Identifier	item_size		3885871	1					
ANR	3886015	ExpressionStatement	"block2 = memory -> realloc ( memory , cur_size , new_size , block )"	157:6:5478:5539	3885871	3	True				
ANR	3886016	AssignmentExpression	"block2 = memory -> realloc ( memory , cur_size , new_size , block )"		3885871	0		=			
ANR	3886017	Identifier	block2		3885871	0					
ANR	3886018	CallExpression	"memory -> realloc ( memory , cur_size , new_size , block )"		3885871	1					
ANR	3886019	Callee	memory -> realloc		3885871	0					
ANR	3886020	PtrMemberAccess	memory -> realloc		3885871	0					
ANR	3886021	Identifier	memory		3885871	0					
ANR	3886022	Identifier	realloc		3885871	1					
ANR	3886023	ArgumentList	memory		3885871	1					
ANR	3886024	Argument	memory		3885871	0					
ANR	3886025	Identifier	memory		3885871	0					
ANR	3886026	Argument	cur_size		3885871	1					
ANR	3886027	Identifier	cur_size		3885871	0					
ANR	3886028	Argument	new_size		3885871	2					
ANR	3886029	Identifier	new_size		3885871	0					
ANR	3886030	Argument	block		3885871	3					
ANR	3886031	Identifier	block		3885871	0					
ANR	3886032	IfStatement	if ( ! block2 )		3885871	4					
ANR	3886033	Condition	! block2	158:11:5552:5558	3885871	0	True				
ANR	3886034	UnaryOperationExpression	! block2		3885871	0					
ANR	3886035	UnaryOperator	!		3885871	0					
ANR	3886036	Identifier	block2		3885871	1					
ANR	3886037	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	159:8:5570:5603	3885871	1	True				
ANR	3886038	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		3885871	0		=			
ANR	3886039	Identifier	error		3885871	0					
ANR	3886040	CallExpression	FT_THROW ( Out_Of_Memory )		3885871	1					
ANR	3886041	Callee	FT_THROW		3885871	0					
ANR	3886042	Identifier	FT_THROW		3885871	0					
ANR	3886043	ArgumentList	Out_Of_Memory		3885871	1					
ANR	3886044	Argument	Out_Of_Memory		3885871	0					
ANR	3886045	Identifier	Out_Of_Memory		3885871	0					
ANR	3886046	ElseStatement	else		3885871	0					
ANR	3886047	ExpressionStatement	block = block2	161:8:5624:5638	3885871	0	True				
ANR	3886048	AssignmentExpression	block = block2		3885871	0		=			
ANR	3886049	Identifier	block		3885871	0					
ANR	3886050	Identifier	block2		3885871	1					
ANR	3886051	ExpressionStatement	* p_error = error	164:4:5651:5667	3885871	2	True				
ANR	3886052	AssignmentExpression	* p_error = error		3885871	0		=			
ANR	3886053	UnaryOperationExpression	* p_error		3885871	0					
ANR	3886054	UnaryOperator	*		3885871	0					
ANR	3886055	Identifier	p_error		3885871	1					
ANR	3886056	Identifier	error		3885871	1					
ANR	3886057	ReturnStatement	return block ;	165:4:5673:5685	3885871	3	True				
ANR	3886058	Identifier	block		3885871	0					
ANR	3886059	Identifier	ft_mem_qrealloc		3885871	1					
ANR	3886060	ParameterList	"FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error"		3885871	2					
ANR	3886061	Parameter	FT_Memory memory	114:19:4299:4315	3885871	0	True				
ANR	3886062	ParameterType	FT_Memory		3885871	0					
ANR	3886063	Identifier	memory		3885871	1					
ANR	3886064	Parameter	FT_Long item_size	115:19:4337:4356	3885871	1	True				
ANR	3886065	ParameterType	FT_Long		3885871	0					
ANR	3886066	Identifier	item_size		3885871	1					
ANR	3886067	Parameter	FT_Long cur_count	116:19:4378:4397	3885871	2	True				
ANR	3886068	ParameterType	FT_Long		3885871	0					
ANR	3886069	Identifier	cur_count		3885871	1					
ANR	3886070	Parameter	FT_Long new_count	117:19:4419:4438	3885871	3	True				
ANR	3886071	ParameterType	FT_Long		3885871	0					
ANR	3886072	Identifier	new_count		3885871	1					
ANR	3886073	Parameter	void * block	118:19:4460:4475	3885871	4	True				
ANR	3886074	ParameterType	void *		3885871	0					
ANR	3886075	Identifier	block		3885871	1					
ANR	3886076	Parameter	FT_Error * p_error	119:19:4497:4514	3885871	5	True				
ANR	3886077	ParameterType	FT_Error *		3885871	0					
ANR	3886078	Identifier	p_error		3885871	1					
ANR	3886079	CFGEntryNode	ENTRY		3885871		True				
ANR	3886080	CFGExitNode	EXIT		3885871		True				
ANR	3886081	Symbol	p_error		3885871						
ANR	3886082	Symbol	memory		3885871						
ANR	3886083	Symbol	NULL		3885871						
ANR	3886084	Symbol	FT_Err_Ok		3885871						
ANR	3886085	Symbol	block2		3885871						
ANR	3886086	Symbol	FT_INT_MAX		3885871						
ANR	3886087	Symbol	cur_size		3885871						
ANR	3886088	Symbol	Invalid_Argument		3885871						
ANR	3886089	Symbol	error		3885871						
ANR	3886090	Symbol	* memory		3885871						
ANR	3886091	Symbol	item_size		3885871						
ANR	3886092	Symbol	FT_THROW		3885871						
ANR	3886093	Symbol	memory -> alloc		3885871						
ANR	3886094	Symbol	Array_Too_Large		3885871						
ANR	3886095	Symbol	memory -> realloc		3885871						
ANR	3886096	Symbol	new_count		3885871						
ANR	3886097	Symbol	Out_Of_Memory		3885871						
ANR	3886098	Symbol	new_size		3885871						
ANR	3886099	Symbol	* p_error		3885871						
ANR	3886100	Symbol	cur_count		3885871						
ANR	3886101	Symbol	block		3885871						
ANR	3886102	Function	ft_mem_free	170:2:5717:5840							
ANR	3886103	FunctionDef	"ft_mem_free (FT_Memory memory , const void * P)"		3886102	0					
ANR	3886104	CompoundStatement		172:2:5783:5840	3886102	0					
ANR	3886105	IfStatement	if ( P )		3886102	0					
ANR	3886106	Condition	P	173:9:5794:5794	3886102	0	True				
ANR	3886107	Identifier	P		3886102	0					
ANR	3886108	ExpressionStatement	"memory -> free ( memory , ( void * ) P )"	174:6:5804:5836	3886102	1	True				
ANR	3886109	CallExpression	"memory -> free ( memory , ( void * ) P )"		3886102	0					
ANR	3886110	Callee	memory -> free		3886102	0					
ANR	3886111	PtrMemberAccess	memory -> free		3886102	0					
ANR	3886112	Identifier	memory		3886102	0					
ANR	3886113	Identifier	free		3886102	1					
ANR	3886114	ArgumentList	memory		3886102	1					
ANR	3886115	Argument	memory		3886102	0					
ANR	3886116	Identifier	memory		3886102	0					
ANR	3886117	Argument	( void * ) P		3886102	1					
ANR	3886118	CastExpression	( void * ) P		3886102	0					
ANR	3886119	CastTarget	void *		3886102	0					
ANR	3886120	Identifier	P		3886102	1					
ANR	3886121	Identifier	ft_mem_free		3886102	1					
ANR	3886122	ParameterList	"FT_Memory memory , const void * P"		3886102	2					
ANR	3886123	Parameter	FT_Memory memory	170:15:5730:5747	3886102	0	True				
ANR	3886124	ParameterType	FT_Memory		3886102	0					
ANR	3886125	Identifier	memory		3886102	1					
ANR	3886126	Parameter	const void * P	171:15:5765:5777	3886102	1	True				
ANR	3886127	ParameterType	const void *		3886102	0					
ANR	3886128	Identifier	P		3886102	1					
ANR	3886129	CFGEntryNode	ENTRY		3886102		True				
ANR	3886130	CFGExitNode	EXIT		3886102		True				
ANR	3886131	Symbol	P		3886102						
ANR	3886132	Symbol	memory		3886102						
ANR	3886133	Function	ft_mem_dup	179:2:5874:6215							
ANR	3886134	FunctionDef	"ft_mem_dup (FT_Memory memory , const void * address , FT_ULong size , FT_Error * p_error)"		3886133	0					
ANR	3886135	CompoundStatement		183:2:6015:6215	3886133	0					
ANR	3886136	IdentifierDeclStatement	FT_Error error ;	184:4:6021:6038	3886133	0	True				
ANR	3886137	IdentifierDecl	error		3886133	0					
ANR	3886138	IdentifierDeclType	FT_Error		3886133	0					
ANR	3886139	Identifier	error		3886133	1					
ANR	3886140	IdentifierDeclStatement	"FT_Pointer p = ft_mem_qalloc ( memory , ( FT_Long ) size , & error ) ;"	185:4:6044:6106	3886133	1	True				
ANR	3886141	IdentifierDecl	"p = ft_mem_qalloc ( memory , ( FT_Long ) size , & error )"		3886133	0					
ANR	3886142	IdentifierDeclType	FT_Pointer		3886133	0					
ANR	3886143	Identifier	p		3886133	1					
ANR	3886144	AssignmentExpression	"p = ft_mem_qalloc ( memory , ( FT_Long ) size , & error )"		3886133	2		=			
ANR	3886145	Identifier	p		3886133	0					
ANR	3886146	CallExpression	"ft_mem_qalloc ( memory , ( FT_Long ) size , & error )"		3886133	1					
ANR	3886147	Callee	ft_mem_qalloc		3886133	0					
ANR	3886148	Identifier	ft_mem_qalloc		3886133	0					
ANR	3886149	ArgumentList	memory		3886133	1					
ANR	3886150	Argument	memory		3886133	0					
ANR	3886151	Identifier	memory		3886133	0					
ANR	3886152	Argument	( FT_Long ) size		3886133	1					
ANR	3886153	CastExpression	( FT_Long ) size		3886133	0					
ANR	3886154	CastTarget	FT_Long		3886133	0					
ANR	3886155	Identifier	size		3886133	1					
ANR	3886156	Argument	& error		3886133	2					
ANR	3886157	UnaryOperationExpression	& error		3886133	0					
ANR	3886158	UnaryOperator	&		3886133	0					
ANR	3886159	Identifier	error		3886133	1					
ANR	3886160	IfStatement	if ( ! error && address )		3886133	2					
ANR	3886161	Condition	! error && address	188:9:6119:6135	3886133	0	True				
ANR	3886162	AndExpression	! error && address		3886133	0		&&			
ANR	3886163	UnaryOperationExpression	! error		3886133	0					
ANR	3886164	UnaryOperator	!		3886133	0					
ANR	3886165	Identifier	error		3886133	1					
ANR	3886166	Identifier	address		3886133	1					
ANR	3886167	ExpressionStatement	"ft_memcpy ( p , address , size )"	189:6:6145:6174	3886133	1	True				
ANR	3886168	CallExpression	"ft_memcpy ( p , address , size )"		3886133	0					
ANR	3886169	Callee	ft_memcpy		3886133	0					
ANR	3886170	Identifier	ft_memcpy		3886133	0					
ANR	3886171	ArgumentList	p		3886133	1					
ANR	3886172	Argument	p		3886133	0					
ANR	3886173	Identifier	p		3886133	0					
ANR	3886174	Argument	address		3886133	1					
ANR	3886175	Identifier	address		3886133	0					
ANR	3886176	Argument	size		3886133	2					
ANR	3886177	Identifier	size		3886133	0					
ANR	3886178	ExpressionStatement	* p_error = error	191:4:6181:6197	3886133	3	True				
ANR	3886179	AssignmentExpression	* p_error = error		3886133	0		=			
ANR	3886180	UnaryOperationExpression	* p_error		3886133	0					
ANR	3886181	UnaryOperator	*		3886133	0					
ANR	3886182	Identifier	p_error		3886133	1					
ANR	3886183	Identifier	error		3886133	1					
ANR	3886184	ReturnStatement	return p ;	192:4:6203:6211	3886133	4	True				
ANR	3886185	Identifier	p		3886133	0					
ANR	3886186	Identifier	ft_mem_dup		3886133	1					
ANR	3886187	ParameterList	"FT_Memory memory , const void * address , FT_ULong size , FT_Error * p_error"		3886133	2					
ANR	3886188	Parameter	FT_Memory memory	179:14:5886:5904	3886133	0	True				
ANR	3886189	ParameterType	FT_Memory		3886133	0					
ANR	3886190	Identifier	memory		3886133	1					
ANR	3886191	Parameter	const void * address	180:14:5921:5940	3886133	1	True				
ANR	3886192	ParameterType	const void *		3886133	0					
ANR	3886193	Identifier	address		3886133	1					
ANR	3886194	Parameter	FT_ULong size	181:14:5957:5973	3886133	2	True				
ANR	3886195	ParameterType	FT_ULong		3886133	0					
ANR	3886196	Identifier	size		3886133	1					
ANR	3886197	Parameter	FT_Error * p_error	182:14:5990:6009	3886133	3	True				
ANR	3886198	ParameterType	FT_Error *		3886133	0					
ANR	3886199	Identifier	p_error		3886133	1					
ANR	3886200	CFGEntryNode	ENTRY		3886133		True				
ANR	3886201	CFGExitNode	EXIT		3886133		True				
ANR	3886202	Symbol	p		3886133						
ANR	3886203	Symbol	p_error		3886133						
ANR	3886204	Symbol	& error		3886133						
ANR	3886205	Symbol	memory		3886133						
ANR	3886206	Symbol	address		3886133						
ANR	3886207	Symbol	size		3886133						
ANR	3886208	Symbol	* p_error		3886133						
ANR	3886209	Symbol	ft_mem_qalloc		3886133						
ANR	3886210	Symbol	error		3886133						
ANR	3886211	Function	ft_mem_strdup	197:2:6249:6506							
ANR	3886212	FunctionDef	"ft_mem_strdup (FT_Memory memory , const char * str , FT_Error * p_error)"		3886211	0					
ANR	3886213	CompoundStatement		200:2:6362:6506	3886211	0					
ANR	3886214	IdentifierDeclStatement	FT_ULong len = str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0 ;	201:4:6368:6448	3886211	0	True				
ANR	3886215	IdentifierDecl	len = str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0		3886211	0					
ANR	3886216	IdentifierDeclType	FT_ULong		3886211	0					
ANR	3886217	Identifier	len		3886211	1					
ANR	3886218	AssignmentExpression	len = str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0		3886211	2		=			
ANR	3886219	Identifier	len		3886211	0					
ANR	3886220	ConditionalExpression	str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0		3886211	1					
ANR	3886221	Condition	str		3886211	0					
ANR	3886222	Identifier	str		3886211	0					
ANR	3886223	AdditiveExpression	( FT_ULong ) ft_strlen ( str ) + 1		3886211	1		+			
ANR	3886224	CastExpression	( FT_ULong ) ft_strlen ( str )		3886211	0					
ANR	3886225	CastTarget	FT_ULong		3886211	0					
ANR	3886226	CallExpression	ft_strlen ( str )		3886211	1					
ANR	3886227	Callee	ft_strlen		3886211	0					
ANR	3886228	Identifier	ft_strlen		3886211	0					
ANR	3886229	ArgumentList	str		3886211	1					
ANR	3886230	Argument	str		3886211	0					
ANR	3886231	Identifier	str		3886211	0					
ANR	3886232	PrimaryExpression	1		3886211	1					
ANR	3886233	PrimaryExpression	0		3886211	2					
ANR	3886234	ReturnStatement	"return ft_mem_dup ( memory , str , len , p_error ) ;"	205:4:6456:6502	3886211	1	True				
ANR	3886235	CallExpression	"ft_mem_dup ( memory , str , len , p_error )"		3886211	0					
ANR	3886236	Callee	ft_mem_dup		3886211	0					
ANR	3886237	Identifier	ft_mem_dup		3886211	0					
ANR	3886238	ArgumentList	memory		3886211	1					
ANR	3886239	Argument	memory		3886211	0					
ANR	3886240	Identifier	memory		3886211	0					
ANR	3886241	Argument	str		3886211	1					
ANR	3886242	Identifier	str		3886211	0					
ANR	3886243	Argument	len		3886211	2					
ANR	3886244	Identifier	len		3886211	0					
ANR	3886245	Argument	p_error		3886211	3					
ANR	3886246	Identifier	p_error		3886211	0					
ANR	3886247	Identifier	ft_mem_strdup		3886211	1					
ANR	3886248	ParameterList	"FT_Memory memory , const char * str , FT_Error * p_error"		3886211	2					
ANR	3886249	Parameter	FT_Memory memory	197:17:6264:6282	3886211	0	True				
ANR	3886250	ParameterType	FT_Memory		3886211	0					
ANR	3886251	Identifier	memory		3886211	1					
ANR	3886252	Parameter	const char * str	198:17:6302:6317	3886211	1	True				
ANR	3886253	ParameterType	const char *		3886211	0					
ANR	3886254	Identifier	str		3886211	1					
ANR	3886255	Parameter	FT_Error * p_error	199:17:6337:6356	3886211	2	True				
ANR	3886256	ParameterType	FT_Error *		3886211	0					
ANR	3886257	Identifier	p_error		3886211	1					
ANR	3886258	CFGEntryNode	ENTRY		3886211		True				
ANR	3886259	CFGExitNode	EXIT		3886211		True				
ANR	3886260	Symbol	str		3886211						
ANR	3886261	Symbol	p_error		3886211						
ANR	3886262	Symbol	memory		3886211						
ANR	3886263	Symbol	len		3886211						
ANR	3886264	Symbol	ft_strlen		3886211						
ANR	3886265	Symbol	ft_mem_dup		3886211						
ANR	3886266	Function	ft_mem_strcpyn	210:2:6536:6802							
ANR	3886267	FunctionDef	"ft_mem_strcpyn (char * dst , const char * src , FT_ULong size)"		3886266	0					
ANR	3886268	CompoundStatement		213:2:6646:6802	3886266	0					
ANR	3886269	WhileStatement	while ( size > 1 && * src != 0 )		3886266	0					
ANR	3886270	Condition	size > 1 && * src != 0	214:12:6660:6680	3886266	0	True				
ANR	3886271	AndExpression	size > 1 && * src != 0		3886266	0		&&			
ANR	3886272	RelationalExpression	size > 1		3886266	0		>			
ANR	3886273	Identifier	size		3886266	0					
ANR	3886274	PrimaryExpression	1		3886266	1					
ANR	3886275	EqualityExpression	* src != 0		3886266	1		!=			
ANR	3886276	UnaryOperationExpression	* src		3886266	0					
ANR	3886277	UnaryOperator	*		3886266	0					
ANR	3886278	Identifier	src		3886266	1					
ANR	3886279	PrimaryExpression	0		3886266	1					
ANR	3886280	CompoundStatement		3:4:41:41	3886266	1					
ANR	3886281	ExpressionStatement	* dst ++ = * src ++	216:6:6696:6711	3886266	0	True				
ANR	3886282	AssignmentExpression	* dst ++ = * src ++		3886266	0		=			
ANR	3886283	UnaryOperationExpression	* dst ++		3886266	0					
ANR	3886284	UnaryOperator	*		3886266	0					
ANR	3886285	PostIncDecOperationExpression	dst ++		3886266	1					
ANR	3886286	Identifier	dst		3886266	0					
ANR	3886287	IncDec	++		3886266	1					
ANR	3886288	UnaryOperationExpression	* src ++		3886266	1					
ANR	3886289	UnaryOperator	*		3886266	0					
ANR	3886290	PostIncDecOperationExpression	src ++		3886266	1					
ANR	3886291	Identifier	src		3886266	0					
ANR	3886292	IncDec	++		3886266	1					
ANR	3886293	ExpressionStatement	size --	217:6:6719:6725	3886266	1	True				
ANR	3886294	PostIncDecOperationExpression	size --		3886266	0					
ANR	3886295	Identifier	size		3886266	0					
ANR	3886296	IncDec	--		3886266	1					
ANR	3886297	ExpressionStatement	* dst = 0	220:4:6738:6746	3886266	1	True				
ANR	3886298	AssignmentExpression	* dst = 0		3886266	0		=			
ANR	3886299	UnaryOperationExpression	* dst		3886266	0					
ANR	3886300	UnaryOperator	*		3886266	0					
ANR	3886301	Identifier	dst		3886266	1					
ANR	3886302	PrimaryExpression	0		3886266	1					
ANR	3886303	ReturnStatement	return * src != 0 ;	222:4:6782:6798	3886266	2	True				
ANR	3886304	EqualityExpression	* src != 0		3886266	0		!=			
ANR	3886305	UnaryOperationExpression	* src		3886266	0					
ANR	3886306	UnaryOperator	*		3886266	0					
ANR	3886307	Identifier	src		3886266	1					
ANR	3886308	PrimaryExpression	0		3886266	1					
ANR	3886309	Identifier	ft_mem_strcpyn		3886266	1					
ANR	3886310	ParameterList	"char * dst , const char * src , FT_ULong size"		3886266	2					
ANR	3886311	Parameter	char * dst	210:18:6552:6567	3886266	0	True				
ANR	3886312	ParameterType	char *		3886266	0					
ANR	3886313	Identifier	dst		3886266	1					
ANR	3886314	Parameter	const char * src	211:18:6588:6603	3886266	1	True				
ANR	3886315	ParameterType	const char *		3886266	0					
ANR	3886316	Identifier	src		3886266	1					
ANR	3886317	Parameter	FT_ULong size	212:18:6624:6640	3886266	2	True				
ANR	3886318	ParameterType	FT_ULong		3886266	0					
ANR	3886319	Identifier	size		3886266	1					
ANR	3886320	CFGEntryNode	ENTRY		3886266		True				
ANR	3886321	CFGExitNode	EXIT		3886266		True				
ANR	3886322	Symbol	* dst		3886266						
ANR	3886323	Symbol	dst		3886266						
ANR	3886324	Symbol	size		3886266						
ANR	3886325	Symbol	src		3886266						
ANR	3886326	Symbol	* dst ++		3886266						
ANR	3886327	Symbol	* src ++		3886266						
ANR	3886328	Symbol	* src		3886266						
ANR	3886329	Function	FT_List_Find	244:2:7791:8064							
ANR	3886330	FunctionDef	"FT_List_Find (FT_List list , void * data)"		3886329	0					
ANR	3886331	CompoundStatement		246:2:7854:8064	3886329	0					
ANR	3886332	IdentifierDeclStatement	FT_ListNode cur ;	247:4:7860:7876	3886329	0	True				
ANR	3886333	IdentifierDecl	cur		3886329	0					
ANR	3886334	IdentifierDeclType	FT_ListNode		3886329	0					
ANR	3886335	Identifier	cur		3886329	1					
ANR	3886336	IfStatement	if ( ! list )		3886329	1					
ANR	3886337	Condition	! list	250:9:7889:7893	3886329	0	True				
ANR	3886338	UnaryOperationExpression	! list		3886329	0					
ANR	3886339	UnaryOperator	!		3886329	0					
ANR	3886340	Identifier	list		3886329	1					
ANR	3886341	ReturnStatement	return NULL ;	251:6:7903:7914	3886329	1	True				
ANR	3886342	Identifier	NULL		3886329	0					
ANR	3886343	ExpressionStatement	cur = list -> head	253:4:7921:7937	3886329	2	True				
ANR	3886344	AssignmentExpression	cur = list -> head		3886329	0		=			
ANR	3886345	Identifier	cur		3886329	0					
ANR	3886346	PtrMemberAccess	list -> head		3886329	1					
ANR	3886347	Identifier	list		3886329	0					
ANR	3886348	Identifier	head		3886329	1					
ANR	3886349	WhileStatement	while ( cur )		3886329	3					
ANR	3886350	Condition	cur	254:12:7951:7953	3886329	0	True				
ANR	3886351	Identifier	cur		3886329	0					
ANR	3886352	CompoundStatement		10:4:106:106	3886329	1					
ANR	3886353	IfStatement	if ( cur -> data == data )		3886329	0					
ANR	3886354	Condition	cur -> data == data	256:11:7974:7990	3886329	0	True				
ANR	3886355	EqualityExpression	cur -> data == data		3886329	0		==			
ANR	3886356	PtrMemberAccess	cur -> data		3886329	0					
ANR	3886357	Identifier	cur		3886329	0					
ANR	3886358	Identifier	data		3886329	1					
ANR	3886359	Identifier	data		3886329	1					
ANR	3886360	ReturnStatement	return cur ;	257:8:8002:8012	3886329	1	True				
ANR	3886361	Identifier	cur		3886329	0					
ANR	3886362	ExpressionStatement	cur = cur -> next	259:6:8021:8036	3886329	1	True				
ANR	3886363	AssignmentExpression	cur = cur -> next		3886329	0		=			
ANR	3886364	Identifier	cur		3886329	0					
ANR	3886365	PtrMemberAccess	cur -> next		3886329	1					
ANR	3886366	Identifier	cur		3886329	0					
ANR	3886367	Identifier	next		3886329	1					
ANR	3886368	ReturnStatement	return NULL ;	262:4:8049:8060	3886329	4	True				
ANR	3886369	Identifier	NULL		3886329	0					
ANR	3886370	Identifier	FT_List_Find		3886329	1					
ANR	3886371	ParameterList	"FT_List list , void * data"		3886329	2					
ANR	3886372	Parameter	FT_List list	244:16:7805:7817	3886329	0	True				
ANR	3886373	ParameterType	FT_List		3886329	0					
ANR	3886374	Identifier	list		3886329	1					
ANR	3886375	Parameter	void * data	245:16:7836:7848	3886329	1	True				
ANR	3886376	ParameterType	void *		3886329	0					
ANR	3886377	Identifier	data		3886329	1					
ANR	3886378	CFGEntryNode	ENTRY		3886329		True				
ANR	3886379	CFGExitNode	EXIT		3886329		True				
ANR	3886380	Symbol	list -> head		3886329						
ANR	3886381	Symbol	cur		3886329						
ANR	3886382	Symbol	NULL		3886329						
ANR	3886383	Symbol	data		3886329						
ANR	3886384	Symbol	* list		3886329						
ANR	3886385	Symbol	* cur		3886329						
ANR	3886386	Symbol	list		3886329						
ANR	3886387	Symbol	cur -> data		3886329						
ANR	3886388	Symbol	cur -> next		3886329						
ANR	3886389	Function	FT_List_Add	269:2:8132:8451							
ANR	3886390	FunctionDef	"FT_List_Add (FT_List list , FT_ListNode node)"		3886389	0					
ANR	3886391	CompoundStatement		271:2:8201:8451	3886389	0					
ANR	3886392	IdentifierDeclStatement	FT_ListNode before ;	272:4:8207:8226	3886389	0	True				
ANR	3886393	IdentifierDecl	before		3886389	0					
ANR	3886394	IdentifierDeclType	FT_ListNode		3886389	0					
ANR	3886395	Identifier	before		3886389	1					
ANR	3886396	IfStatement	if ( ! list || ! node )		3886389	1					
ANR	3886397	Condition	! list || ! node	275:9:8239:8252	3886389	0	True				
ANR	3886398	OrExpression	! list || ! node		3886389	0		||			
ANR	3886399	UnaryOperationExpression	! list		3886389	0					
ANR	3886400	UnaryOperator	!		3886389	0					
ANR	3886401	Identifier	list		3886389	1					
ANR	3886402	UnaryOperationExpression	! node		3886389	1					
ANR	3886403	UnaryOperator	!		3886389	0					
ANR	3886404	Identifier	node		3886389	1					
ANR	3886405	ReturnStatement	return ;	276:6:8262:8268	3886389	1	True				
ANR	3886406	ExpressionStatement	before = list -> tail	278:4:8275:8294	3886389	2	True				
ANR	3886407	AssignmentExpression	before = list -> tail		3886389	0		=			
ANR	3886408	Identifier	before		3886389	0					
ANR	3886409	PtrMemberAccess	list -> tail		3886389	1					
ANR	3886410	Identifier	list		3886389	0					
ANR	3886411	Identifier	tail		3886389	1					
ANR	3886412	ExpressionStatement	node -> next = NULL	280:4:8301:8318	3886389	3	True				
ANR	3886413	AssignmentExpression	node -> next = NULL		3886389	0		=			
ANR	3886414	PtrMemberAccess	node -> next		3886389	0					
ANR	3886415	Identifier	node		3886389	0					
ANR	3886416	Identifier	next		3886389	1					
ANR	3886417	Identifier	NULL		3886389	1					
ANR	3886418	ExpressionStatement	node -> prev = before	281:4:8324:8343	3886389	4	True				
ANR	3886419	AssignmentExpression	node -> prev = before		3886389	0		=			
ANR	3886420	PtrMemberAccess	node -> prev		3886389	0					
ANR	3886421	Identifier	node		3886389	0					
ANR	3886422	Identifier	prev		3886389	1					
ANR	3886423	Identifier	before		3886389	1					
ANR	3886424	IfStatement	if ( before )		3886389	5					
ANR	3886425	Condition	before	283:9:8355:8360	3886389	0	True				
ANR	3886426	Identifier	before		3886389	0					
ANR	3886427	ExpressionStatement	before -> next = node	284:6:8370:8389	3886389	1	True				
ANR	3886428	AssignmentExpression	before -> next = node		3886389	0		=			
ANR	3886429	PtrMemberAccess	before -> next		3886389	0					
ANR	3886430	Identifier	before		3886389	0					
ANR	3886431	Identifier	next		3886389	1					
ANR	3886432	Identifier	node		3886389	1					
ANR	3886433	ElseStatement	else		3886389	0					
ANR	3886434	ExpressionStatement	list -> head = node	286:6:8406:8423	3886389	0	True				
ANR	3886435	AssignmentExpression	list -> head = node		3886389	0		=			
ANR	3886436	PtrMemberAccess	list -> head		3886389	0					
ANR	3886437	Identifier	list		3886389	0					
ANR	3886438	Identifier	head		3886389	1					
ANR	3886439	Identifier	node		3886389	1					
ANR	3886440	ExpressionStatement	list -> tail = node	288:4:8430:8447	3886389	6	True				
ANR	3886441	AssignmentExpression	list -> tail = node		3886389	0		=			
ANR	3886442	PtrMemberAccess	list -> tail		3886389	0					
ANR	3886443	Identifier	list		3886389	0					
ANR	3886444	Identifier	tail		3886389	1					
ANR	3886445	Identifier	node		3886389	1					
ANR	3886446	Identifier	FT_List_Add		3886389	1					
ANR	3886447	ParameterList	"FT_List list , FT_ListNode node"		3886389	2					
ANR	3886448	Parameter	FT_List list	269:15:8145:8161	3886389	0	True				
ANR	3886449	ParameterType	FT_List		3886389	0					
ANR	3886450	Identifier	list		3886389	1					
ANR	3886451	Parameter	FT_ListNode node	270:15:8179:8195	3886389	1	True				
ANR	3886452	ParameterType	FT_ListNode		3886389	0					
ANR	3886453	Identifier	node		3886389	1					
ANR	3886454	CFGEntryNode	ENTRY		3886389		True				
ANR	3886455	CFGExitNode	EXIT		3886389		True				
ANR	3886456	Symbol	list -> head		3886389						
ANR	3886457	Symbol	node		3886389						
ANR	3886458	Symbol	NULL		3886389						
ANR	3886459	Symbol	node -> prev		3886389						
ANR	3886460	Symbol	before		3886389						
ANR	3886461	Symbol	* list		3886389						
ANR	3886462	Symbol	* before		3886389						
ANR	3886463	Symbol	* node		3886389						
ANR	3886464	Symbol	node -> next		3886389						
ANR	3886465	Symbol	list		3886389						
ANR	3886466	Symbol	before -> next		3886389						
ANR	3886467	Symbol	list -> tail		3886389						
ANR	3886468	Function	FT_List_Insert	295:2:8519:8840							
ANR	3886469	FunctionDef	"FT_List_Insert (FT_List list , FT_ListNode node)"		3886468	0					
ANR	3886470	CompoundStatement		297:2:8594:8840	3886468	0					
ANR	3886471	IdentifierDeclStatement	FT_ListNode after ;	298:4:8600:8618	3886468	0	True				
ANR	3886472	IdentifierDecl	after		3886468	0					
ANR	3886473	IdentifierDeclType	FT_ListNode		3886468	0					
ANR	3886474	Identifier	after		3886468	1					
ANR	3886475	IfStatement	if ( ! list || ! node )		3886468	1					
ANR	3886476	Condition	! list || ! node	301:9:8631:8644	3886468	0	True				
ANR	3886477	OrExpression	! list || ! node		3886468	0		||			
ANR	3886478	UnaryOperationExpression	! list		3886468	0					
ANR	3886479	UnaryOperator	!		3886468	0					
ANR	3886480	Identifier	list		3886468	1					
ANR	3886481	UnaryOperationExpression	! node		3886468	1					
ANR	3886482	UnaryOperator	!		3886468	0					
ANR	3886483	Identifier	node		3886468	1					
ANR	3886484	ReturnStatement	return ;	302:6:8654:8660	3886468	1	True				
ANR	3886485	ExpressionStatement	after = list -> head	304:4:8667:8685	3886468	2	True				
ANR	3886486	AssignmentExpression	after = list -> head		3886468	0		=			
ANR	3886487	Identifier	after		3886468	0					
ANR	3886488	PtrMemberAccess	list -> head		3886468	1					
ANR	3886489	Identifier	list		3886468	0					
ANR	3886490	Identifier	head		3886468	1					
ANR	3886491	ExpressionStatement	node -> next = after	306:4:8692:8710	3886468	3	True				
ANR	3886492	AssignmentExpression	node -> next = after		3886468	0		=			
ANR	3886493	PtrMemberAccess	node -> next		3886468	0					
ANR	3886494	Identifier	node		3886468	0					
ANR	3886495	Identifier	next		3886468	1					
ANR	3886496	Identifier	after		3886468	1					
ANR	3886497	ExpressionStatement	node -> prev = NULL	307:4:8716:8733	3886468	4	True				
ANR	3886498	AssignmentExpression	node -> prev = NULL		3886468	0		=			
ANR	3886499	PtrMemberAccess	node -> prev		3886468	0					
ANR	3886500	Identifier	node		3886468	0					
ANR	3886501	Identifier	prev		3886468	1					
ANR	3886502	Identifier	NULL		3886468	1					
ANR	3886503	IfStatement	if ( ! after )		3886468	5					
ANR	3886504	Condition	! after	309:9:8745:8750	3886468	0	True				
ANR	3886505	UnaryOperationExpression	! after		3886468	0					
ANR	3886506	UnaryOperator	!		3886468	0					
ANR	3886507	Identifier	after		3886468	1					
ANR	3886508	ExpressionStatement	list -> tail = node	310:6:8760:8777	3886468	1	True				
ANR	3886509	AssignmentExpression	list -> tail = node		3886468	0		=			
ANR	3886510	PtrMemberAccess	list -> tail		3886468	0					
ANR	3886511	Identifier	list		3886468	0					
ANR	3886512	Identifier	tail		3886468	1					
ANR	3886513	Identifier	node		3886468	1					
ANR	3886514	ElseStatement	else		3886468	0					
ANR	3886515	ExpressionStatement	after -> prev = node	312:6:8794:8812	3886468	0	True				
ANR	3886516	AssignmentExpression	after -> prev = node		3886468	0		=			
ANR	3886517	PtrMemberAccess	after -> prev		3886468	0					
ANR	3886518	Identifier	after		3886468	0					
ANR	3886519	Identifier	prev		3886468	1					
ANR	3886520	Identifier	node		3886468	1					
ANR	3886521	ExpressionStatement	list -> head = node	314:4:8819:8836	3886468	6	True				
ANR	3886522	AssignmentExpression	list -> head = node		3886468	0		=			
ANR	3886523	PtrMemberAccess	list -> head		3886468	0					
ANR	3886524	Identifier	list		3886468	0					
ANR	3886525	Identifier	head		3886468	1					
ANR	3886526	Identifier	node		3886468	1					
ANR	3886527	Identifier	FT_List_Insert		3886468	1					
ANR	3886528	ParameterList	"FT_List list , FT_ListNode node"		3886468	2					
ANR	3886529	Parameter	FT_List list	295:18:8535:8551	3886468	0	True				
ANR	3886530	ParameterType	FT_List		3886468	0					
ANR	3886531	Identifier	list		3886468	1					
ANR	3886532	Parameter	FT_ListNode node	296:18:8572:8588	3886468	1	True				
ANR	3886533	ParameterType	FT_ListNode		3886468	0					
ANR	3886534	Identifier	node		3886468	1					
ANR	3886535	CFGEntryNode	ENTRY		3886468		True				
ANR	3886536	CFGExitNode	EXIT		3886468		True				
ANR	3886537	Symbol	list -> head		3886468						
ANR	3886538	Symbol	node		3886468						
ANR	3886539	Symbol	* after		3886468						
ANR	3886540	Symbol	NULL		3886468						
ANR	3886541	Symbol	node -> prev		3886468						
ANR	3886542	Symbol	* list		3886468						
ANR	3886543	Symbol	* node		3886468						
ANR	3886544	Symbol	after		3886468						
ANR	3886545	Symbol	node -> next		3886468						
ANR	3886546	Symbol	list		3886468						
ANR	3886547	Symbol	after -> prev		3886468						
ANR	3886548	Symbol	list -> tail		3886468						
ANR	3886549	Function	FT_List_Remove	321:2:8908:9276							
ANR	3886550	FunctionDef	"FT_List_Remove (FT_List list , FT_ListNode node)"		3886549	0					
ANR	3886551	CompoundStatement		323:2:8983:9276	3886549	0					
ANR	3886552	IdentifierDeclStatement	"FT_ListNode before , after ;"	324:4:8989:9015	3886549	0	True				
ANR	3886553	IdentifierDecl	before		3886549	0					
ANR	3886554	IdentifierDeclType	FT_ListNode		3886549	0					
ANR	3886555	Identifier	before		3886549	1					
ANR	3886556	IdentifierDecl	after		3886549	1					
ANR	3886557	IdentifierDeclType	FT_ListNode		3886549	0					
ANR	3886558	Identifier	after		3886549	1					
ANR	3886559	IfStatement	if ( ! list || ! node )		3886549	1					
ANR	3886560	Condition	! list || ! node	327:9:9028:9041	3886549	0	True				
ANR	3886561	OrExpression	! list || ! node		3886549	0		||			
ANR	3886562	UnaryOperationExpression	! list		3886549	0					
ANR	3886563	UnaryOperator	!		3886549	0					
ANR	3886564	Identifier	list		3886549	1					
ANR	3886565	UnaryOperationExpression	! node		3886549	1					
ANR	3886566	UnaryOperator	!		3886549	0					
ANR	3886567	Identifier	node		3886549	1					
ANR	3886568	ReturnStatement	return ;	328:6:9051:9057	3886549	1	True				
ANR	3886569	ExpressionStatement	before = node -> prev	330:4:9064:9083	3886549	2	True				
ANR	3886570	AssignmentExpression	before = node -> prev		3886549	0		=			
ANR	3886571	Identifier	before		3886549	0					
ANR	3886572	PtrMemberAccess	node -> prev		3886549	1					
ANR	3886573	Identifier	node		3886549	0					
ANR	3886574	Identifier	prev		3886549	1					
ANR	3886575	ExpressionStatement	after = node -> next	331:4:9089:9108	3886549	3	True				
ANR	3886576	AssignmentExpression	after = node -> next		3886549	0		=			
ANR	3886577	Identifier	after		3886549	0					
ANR	3886578	PtrMemberAccess	node -> next		3886549	1					
ANR	3886579	Identifier	node		3886549	0					
ANR	3886580	Identifier	next		3886549	1					
ANR	3886581	IfStatement	if ( before )		3886549	4					
ANR	3886582	Condition	before	333:9:9120:9125	3886549	0	True				
ANR	3886583	Identifier	before		3886549	0					
ANR	3886584	ExpressionStatement	before -> next = after	334:6:9135:9155	3886549	1	True				
ANR	3886585	AssignmentExpression	before -> next = after		3886549	0		=			
ANR	3886586	PtrMemberAccess	before -> next		3886549	0					
ANR	3886587	Identifier	before		3886549	0					
ANR	3886588	Identifier	next		3886549	1					
ANR	3886589	Identifier	after		3886549	1					
ANR	3886590	ElseStatement	else		3886549	0					
ANR	3886591	ExpressionStatement	list -> head = after	336:6:9172:9190	3886549	0	True				
ANR	3886592	AssignmentExpression	list -> head = after		3886549	0		=			
ANR	3886593	PtrMemberAccess	list -> head		3886549	0					
ANR	3886594	Identifier	list		3886549	0					
ANR	3886595	Identifier	head		3886549	1					
ANR	3886596	Identifier	after		3886549	1					
ANR	3886597	IfStatement	if ( after )		3886549	5					
ANR	3886598	Condition	after	338:9:9202:9206	3886549	0	True				
ANR	3886599	Identifier	after		3886549	0					
ANR	3886600	ExpressionStatement	after -> prev = before	339:6:9216:9236	3886549	1	True				
ANR	3886601	AssignmentExpression	after -> prev = before		3886549	0		=			
ANR	3886602	PtrMemberAccess	after -> prev		3886549	0					
ANR	3886603	Identifier	after		3886549	0					
ANR	3886604	Identifier	prev		3886549	1					
ANR	3886605	Identifier	before		3886549	1					
ANR	3886606	ElseStatement	else		3886549	0					
ANR	3886607	ExpressionStatement	list -> tail = before	341:6:9253:9272	3886549	0	True				
ANR	3886608	AssignmentExpression	list -> tail = before		3886549	0		=			
ANR	3886609	PtrMemberAccess	list -> tail		3886549	0					
ANR	3886610	Identifier	list		3886549	0					
ANR	3886611	Identifier	tail		3886549	1					
ANR	3886612	Identifier	before		3886549	1					
ANR	3886613	Identifier	FT_List_Remove		3886549	1					
ANR	3886614	ParameterList	"FT_List list , FT_ListNode node"		3886549	2					
ANR	3886615	Parameter	FT_List list	321:18:8924:8940	3886549	0	True				
ANR	3886616	ParameterType	FT_List		3886549	0					
ANR	3886617	Identifier	list		3886549	1					
ANR	3886618	Parameter	FT_ListNode node	322:18:8961:8977	3886549	1	True				
ANR	3886619	ParameterType	FT_ListNode		3886549	0					
ANR	3886620	Identifier	node		3886549	1					
ANR	3886621	CFGEntryNode	ENTRY		3886549		True				
ANR	3886622	CFGExitNode	EXIT		3886549		True				
ANR	3886623	Symbol	* after		3886549						
ANR	3886624	Symbol	before		3886549						
ANR	3886625	Symbol	* before		3886549						
ANR	3886626	Symbol	node -> next		3886549						
ANR	3886627	Symbol	list		3886549						
ANR	3886628	Symbol	list -> head		3886549						
ANR	3886629	Symbol	node		3886549						
ANR	3886630	Symbol	node -> prev		3886549						
ANR	3886631	Symbol	* list		3886549						
ANR	3886632	Symbol	* node		3886549						
ANR	3886633	Symbol	after		3886549						
ANR	3886634	Symbol	after -> prev		3886549						
ANR	3886635	Symbol	before -> next		3886549						
ANR	3886636	Symbol	list -> tail		3886549						
ANR	3886637	Function	FT_List_Up	348:2:9344:9864							
ANR	3886638	FunctionDef	"FT_List_Up (FT_List list , FT_ListNode node)"		3886637	0					
ANR	3886639	CompoundStatement		350:2:9411:9864	3886637	0					
ANR	3886640	IdentifierDeclStatement	"FT_ListNode before , after ;"	351:4:9417:9443	3886637	0	True				
ANR	3886641	IdentifierDecl	before		3886637	0					
ANR	3886642	IdentifierDeclType	FT_ListNode		3886637	0					
ANR	3886643	Identifier	before		3886637	1					
ANR	3886644	IdentifierDecl	after		3886637	1					
ANR	3886645	IdentifierDeclType	FT_ListNode		3886637	0					
ANR	3886646	Identifier	after		3886637	1					
ANR	3886647	IfStatement	if ( ! list || ! node )		3886637	1					
ANR	3886648	Condition	! list || ! node	354:9:9456:9469	3886637	0	True				
ANR	3886649	OrExpression	! list || ! node		3886637	0		||			
ANR	3886650	UnaryOperationExpression	! list		3886637	0					
ANR	3886651	UnaryOperator	!		3886637	0					
ANR	3886652	Identifier	list		3886637	1					
ANR	3886653	UnaryOperationExpression	! node		3886637	1					
ANR	3886654	UnaryOperator	!		3886637	0					
ANR	3886655	Identifier	node		3886637	1					
ANR	3886656	ReturnStatement	return ;	355:6:9479:9485	3886637	1	True				
ANR	3886657	ExpressionStatement	before = node -> prev	357:4:9492:9511	3886637	2	True				
ANR	3886658	AssignmentExpression	before = node -> prev		3886637	0		=			
ANR	3886659	Identifier	before		3886637	0					
ANR	3886660	PtrMemberAccess	node -> prev		3886637	1					
ANR	3886661	Identifier	node		3886637	0					
ANR	3886662	Identifier	prev		3886637	1					
ANR	3886663	ExpressionStatement	after = node -> next	358:4:9517:9536	3886637	3	True				
ANR	3886664	AssignmentExpression	after = node -> next		3886637	0		=			
ANR	3886665	Identifier	after		3886637	0					
ANR	3886666	PtrMemberAccess	node -> next		3886637	1					
ANR	3886667	Identifier	node		3886637	0					
ANR	3886668	Identifier	next		3886637	1					
ANR	3886669	IfStatement	if ( ! before )		3886637	4					
ANR	3886670	Condition	! before	361:9:9606:9612	3886637	0	True				
ANR	3886671	UnaryOperationExpression	! before		3886637	0					
ANR	3886672	UnaryOperator	!		3886637	0					
ANR	3886673	Identifier	before		3886637	1					
ANR	3886674	ReturnStatement	return ;	362:6:9622:9628	3886637	1	True				
ANR	3886675	ExpressionStatement	before -> next = after	364:4:9635:9655	3886637	5	True				
ANR	3886676	AssignmentExpression	before -> next = after		3886637	0		=			
ANR	3886677	PtrMemberAccess	before -> next		3886637	0					
ANR	3886678	Identifier	before		3886637	0					
ANR	3886679	Identifier	next		3886637	1					
ANR	3886680	Identifier	after		3886637	1					
ANR	3886681	IfStatement	if ( after )		3886637	6					
ANR	3886682	Condition	after	366:9:9667:9671	3886637	0	True				
ANR	3886683	Identifier	after		3886637	0					
ANR	3886684	ExpressionStatement	after -> prev = before	367:6:9681:9701	3886637	1	True				
ANR	3886685	AssignmentExpression	after -> prev = before		3886637	0		=			
ANR	3886686	PtrMemberAccess	after -> prev		3886637	0					
ANR	3886687	Identifier	after		3886637	0					
ANR	3886688	Identifier	prev		3886637	1					
ANR	3886689	Identifier	before		3886637	1					
ANR	3886690	ElseStatement	else		3886637	0					
ANR	3886691	ExpressionStatement	list -> tail = before	369:6:9718:9737	3886637	0	True				
ANR	3886692	AssignmentExpression	list -> tail = before		3886637	0		=			
ANR	3886693	PtrMemberAccess	list -> tail		3886637	0					
ANR	3886694	Identifier	list		3886637	0					
ANR	3886695	Identifier	tail		3886637	1					
ANR	3886696	Identifier	before		3886637	1					
ANR	3886697	ExpressionStatement	node -> prev = NULL	371:4:9744:9767	3886637	7	True				
ANR	3886698	AssignmentExpression	node -> prev = NULL		3886637	0		=			
ANR	3886699	PtrMemberAccess	node -> prev		3886637	0					
ANR	3886700	Identifier	node		3886637	0					
ANR	3886701	Identifier	prev		3886637	1					
ANR	3886702	Identifier	NULL		3886637	1					
ANR	3886703	ExpressionStatement	node -> next = list -> head	372:4:9773:9802	3886637	8	True				
ANR	3886704	AssignmentExpression	node -> next = list -> head		3886637	0		=			
ANR	3886705	PtrMemberAccess	node -> next		3886637	0					
ANR	3886706	Identifier	node		3886637	0					
ANR	3886707	Identifier	next		3886637	1					
ANR	3886708	PtrMemberAccess	list -> head		3886637	1					
ANR	3886709	Identifier	list		3886637	0					
ANR	3886710	Identifier	head		3886637	1					
ANR	3886711	ExpressionStatement	list -> head -> prev = node	373:4:9808:9831	3886637	9	True				
ANR	3886712	AssignmentExpression	list -> head -> prev = node		3886637	0		=			
ANR	3886713	PtrMemberAccess	list -> head -> prev		3886637	0					
ANR	3886714	PtrMemberAccess	list -> head		3886637	0					
ANR	3886715	Identifier	list		3886637	0					
ANR	3886716	Identifier	head		3886637	1					
ANR	3886717	Identifier	prev		3886637	1					
ANR	3886718	Identifier	node		3886637	1					
ANR	3886719	ExpressionStatement	list -> head = node	374:4:9837:9860	3886637	10	True				
ANR	3886720	AssignmentExpression	list -> head = node		3886637	0		=			
ANR	3886721	PtrMemberAccess	list -> head		3886637	0					
ANR	3886722	Identifier	list		3886637	0					
ANR	3886723	Identifier	head		3886637	1					
ANR	3886724	Identifier	node		3886637	1					
ANR	3886725	Identifier	FT_List_Up		3886637	1					
ANR	3886726	ParameterList	"FT_List list , FT_ListNode node"		3886637	2					
ANR	3886727	Parameter	FT_List list	348:14:9356:9372	3886637	0	True				
ANR	3886728	ParameterType	FT_List		3886637	0					
ANR	3886729	Identifier	list		3886637	1					
ANR	3886730	Parameter	FT_ListNode node	349:14:9389:9405	3886637	1	True				
ANR	3886731	ParameterType	FT_ListNode		3886637	0					
ANR	3886732	Identifier	node		3886637	1					
ANR	3886733	CFGEntryNode	ENTRY		3886637		True				
ANR	3886734	CFGExitNode	EXIT		3886637		True				
ANR	3886735	Symbol	* after		3886637						
ANR	3886736	Symbol	* list -> head		3886637						
ANR	3886737	Symbol	NULL		3886637						
ANR	3886738	Symbol	before		3886637						
ANR	3886739	Symbol	* before		3886637						
ANR	3886740	Symbol	list -> head -> prev		3886637						
ANR	3886741	Symbol	node -> next		3886637						
ANR	3886742	Symbol	list		3886637						
ANR	3886743	Symbol	list -> head		3886637						
ANR	3886744	Symbol	node		3886637						
ANR	3886745	Symbol	* * list		3886637						
ANR	3886746	Symbol	node -> prev		3886637						
ANR	3886747	Symbol	* list		3886637						
ANR	3886748	Symbol	* node		3886637						
ANR	3886749	Symbol	after		3886637						
ANR	3886750	Symbol	after -> prev		3886637						
ANR	3886751	Symbol	before -> next		3886637						
ANR	3886752	Symbol	list -> tail		3886637						
ANR	3886753	Function	FT_List_Iterate	381:2:9936:10409							
ANR	3886754	FunctionDef	"FT_List_Iterate (FT_List list , FT_List_Iterator iterator , void * user)"		3886753	0					
ANR	3886755	CompoundStatement		384:2:10070:10409	3886753	0					
ANR	3886756	IdentifierDeclStatement	FT_ListNode cur ;	385:4:10076:10092	3886753	0	True				
ANR	3886757	IdentifierDecl	cur		3886753	0					
ANR	3886758	IdentifierDeclType	FT_ListNode		3886753	0					
ANR	3886759	Identifier	cur		3886753	1					
ANR	3886760	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	386:4:10098:10128	3886753	1	True				
ANR	3886761	IdentifierDecl	error = FT_Err_Ok		3886753	0					
ANR	3886762	IdentifierDeclType	FT_Error		3886753	0					
ANR	3886763	Identifier	error		3886753	1					
ANR	3886764	AssignmentExpression	error = FT_Err_Ok		3886753	2		=			
ANR	3886765	Identifier	FT_Err_Ok		3886753	0					
ANR	3886766	Identifier	FT_Err_Ok		3886753	1					
ANR	3886767	IfStatement	if ( ! list || ! iterator )		3886753	2					
ANR	3886768	Condition	! list || ! iterator	389:9:10141:10158	3886753	0	True				
ANR	3886769	OrExpression	! list || ! iterator		3886753	0		||			
ANR	3886770	UnaryOperationExpression	! list		3886753	0					
ANR	3886771	UnaryOperator	!		3886753	0					
ANR	3886772	Identifier	list		3886753	1					
ANR	3886773	UnaryOperationExpression	! iterator		3886753	1					
ANR	3886774	UnaryOperator	!		3886753	0					
ANR	3886775	Identifier	iterator		3886753	1					
ANR	3886776	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	390:6:10168:10203	3886753	1	True				
ANR	3886777	CallExpression	FT_THROW ( Invalid_Argument )		3886753	0					
ANR	3886778	Callee	FT_THROW		3886753	0					
ANR	3886779	Identifier	FT_THROW		3886753	0					
ANR	3886780	ArgumentList	Invalid_Argument		3886753	1					
ANR	3886781	Argument	Invalid_Argument		3886753	0					
ANR	3886782	Identifier	Invalid_Argument		3886753	0					
ANR	3886783	ExpressionStatement	cur = list -> head	392:4:10210:10226	3886753	3	True				
ANR	3886784	AssignmentExpression	cur = list -> head		3886753	0		=			
ANR	3886785	Identifier	cur		3886753	0					
ANR	3886786	PtrMemberAccess	list -> head		3886753	1					
ANR	3886787	Identifier	list		3886753	0					
ANR	3886788	Identifier	head		3886753	1					
ANR	3886789	WhileStatement	while ( cur )		3886753	4					
ANR	3886790	Condition	cur	394:12:10241:10243	3886753	0	True				
ANR	3886791	Identifier	cur		3886753	0					
ANR	3886792	CompoundStatement		13:6:188:217	3886753	1					
ANR	3886793	IdentifierDeclStatement	FT_ListNode next = cur -> next ;	396:6:10259:10288	3886753	0	True				
ANR	3886794	IdentifierDecl	next = cur -> next		3886753	0					
ANR	3886795	IdentifierDeclType	FT_ListNode		3886753	0					
ANR	3886796	Identifier	next		3886753	1					
ANR	3886797	AssignmentExpression	next = cur -> next		3886753	2		=			
ANR	3886798	Identifier	next		3886753	0					
ANR	3886799	PtrMemberAccess	cur -> next		3886753	1					
ANR	3886800	Identifier	cur		3886753	0					
ANR	3886801	Identifier	next		3886753	1					
ANR	3886802	ExpressionStatement	"error = iterator ( cur , user )"	399:6:10298:10327	3886753	1	True				
ANR	3886803	AssignmentExpression	"error = iterator ( cur , user )"		3886753	0		=			
ANR	3886804	Identifier	error		3886753	0					
ANR	3886805	CallExpression	"iterator ( cur , user )"		3886753	1					
ANR	3886806	Callee	iterator		3886753	0					
ANR	3886807	Identifier	iterator		3886753	0					
ANR	3886808	ArgumentList	cur		3886753	1					
ANR	3886809	Argument	cur		3886753	0					
ANR	3886810	Identifier	cur		3886753	0					
ANR	3886811	Argument	user		3886753	1					
ANR	3886812	Identifier	user		3886753	0					
ANR	3886813	IfStatement	if ( error )		3886753	2					
ANR	3886814	Condition	error	400:11:10340:10344	3886753	0	True				
ANR	3886815	Identifier	error		3886753	0					
ANR	3886816	BreakStatement	break ;	401:8:10356:10361	3886753	1	True				
ANR	3886817	ExpressionStatement	cur = next	403:6:10370:10380	3886753	3	True				
ANR	3886818	AssignmentExpression	cur = next		3886753	0		=			
ANR	3886819	Identifier	cur		3886753	0					
ANR	3886820	Identifier	next		3886753	1					
ANR	3886821	ReturnStatement	return error ;	406:4:10393:10405	3886753	5	True				
ANR	3886822	Identifier	error		3886753	0					
ANR	3886823	Identifier	FT_List_Iterate		3886753	1					
ANR	3886824	ParameterList	"FT_List list , FT_List_Iterator iterator , void * user"		3886753	2					
ANR	3886825	Parameter	FT_List list	381:19:9953:9974	3886753	0	True				
ANR	3886826	ParameterType	FT_List		3886753	0					
ANR	3886827	Identifier	list		3886753	1					
ANR	3886828	Parameter	FT_List_Iterator iterator	382:19:9996:10021	3886753	1	True				
ANR	3886829	ParameterType	FT_List_Iterator		3886753	0					
ANR	3886830	Identifier	iterator		3886753	1					
ANR	3886831	Parameter	void * user	383:19:10043:10064	3886753	2	True				
ANR	3886832	ParameterType	void *		3886753	0					
ANR	3886833	Identifier	user		3886753	1					
ANR	3886834	CFGEntryNode	ENTRY		3886753		True				
ANR	3886835	CFGExitNode	EXIT		3886753		True				
ANR	3886836	Symbol	next		3886753						
ANR	3886837	Symbol	cur		3886753						
ANR	3886838	Symbol	FT_Err_Ok		3886753						
ANR	3886839	Symbol	Invalid_Argument		3886753						
ANR	3886840	Symbol	list		3886753						
ANR	3886841	Symbol	error		3886753						
ANR	3886842	Symbol	FT_THROW		3886753						
ANR	3886843	Symbol	list -> head		3886753						
ANR	3886844	Symbol	iterator		3886753						
ANR	3886845	Symbol	* list		3886753						
ANR	3886846	Symbol	* cur		3886753						
ANR	3886847	Symbol	user		3886753						
ANR	3886848	Symbol	cur -> next		3886753						
ANR	3886849	Function	FT_List_Finalize	413:2:10477:11014							
ANR	3886850	FunctionDef	"FT_List_Finalize (FT_List list , FT_List_Destructor destroy , FT_Memory memory , void * user)"		3886849	0					
ANR	3886851	CompoundStatement		417:2:10667:11014	3886849	0					
ANR	3886852	IdentifierDeclStatement	FT_ListNode cur ;	418:4:10673:10689	3886849	0	True				
ANR	3886853	IdentifierDecl	cur		3886849	0					
ANR	3886854	IdentifierDeclType	FT_ListNode		3886849	0					
ANR	3886855	Identifier	cur		3886849	1					
ANR	3886856	IfStatement	if ( ! list || ! memory )		3886849	1					
ANR	3886857	Condition	! list || ! memory	421:9:10702:10717	3886849	0	True				
ANR	3886858	OrExpression	! list || ! memory		3886849	0		||			
ANR	3886859	UnaryOperationExpression	! list		3886849	0					
ANR	3886860	UnaryOperator	!		3886849	0					
ANR	3886861	Identifier	list		3886849	1					
ANR	3886862	UnaryOperationExpression	! memory		3886849	1					
ANR	3886863	UnaryOperator	!		3886849	0					
ANR	3886864	Identifier	memory		3886849	1					
ANR	3886865	ReturnStatement	return ;	422:6:10727:10733	3886849	1	True				
ANR	3886866	ExpressionStatement	cur = list -> head	424:4:10740:10756	3886849	2	True				
ANR	3886867	AssignmentExpression	cur = list -> head		3886849	0		=			
ANR	3886868	Identifier	cur		3886849	0					
ANR	3886869	PtrMemberAccess	list -> head		3886849	1					
ANR	3886870	Identifier	list		3886849	0					
ANR	3886871	Identifier	head		3886849	1					
ANR	3886872	WhileStatement	while ( cur )		3886849	3					
ANR	3886873	Condition	cur	425:12:10770:10772	3886849	0	True				
ANR	3886874	Identifier	cur		3886849	0					
ANR	3886875	CompoundStatement		12:6:157:186	3886849	1					
ANR	3886876	IdentifierDeclStatement	FT_ListNode next = cur -> next ;	427:6:10788:10817	3886849	0	True				
ANR	3886877	IdentifierDecl	next = cur -> next		3886849	0					
ANR	3886878	IdentifierDeclType	FT_ListNode		3886849	0					
ANR	3886879	Identifier	next		3886849	1					
ANR	3886880	AssignmentExpression	next = cur -> next		3886849	2		=			
ANR	3886881	Identifier	next		3886849	0					
ANR	3886882	PtrMemberAccess	cur -> next		3886849	1					
ANR	3886883	Identifier	cur		3886849	0					
ANR	3886884	Identifier	next		3886849	1					
ANR	3886885	IdentifierDeclStatement	void * data = cur -> data ;	428:6:10825:10854	3886849	1	True				
ANR	3886886	IdentifierDecl	* data = cur -> data		3886849	0					
ANR	3886887	IdentifierDeclType	void *		3886849	0					
ANR	3886888	Identifier	data		3886849	1					
ANR	3886889	AssignmentExpression	* data = cur -> data		3886849	2		=			
ANR	3886890	Identifier	data		3886849	0					
ANR	3886891	PtrMemberAccess	cur -> data		3886849	1					
ANR	3886892	Identifier	cur		3886849	0					
ANR	3886893	Identifier	data		3886849	1					
ANR	3886894	IfStatement	if ( destroy )		3886849	2					
ANR	3886895	Condition	destroy	431:11:10869:10875	3886849	0	True				
ANR	3886896	Identifier	destroy		3886849	0					
ANR	3886897	ExpressionStatement	"destroy ( memory , data , user )"	432:8:10887:10916	3886849	1	True				
ANR	3886898	CallExpression	"destroy ( memory , data , user )"		3886849	0					
ANR	3886899	Callee	destroy		3886849	0					
ANR	3886900	Identifier	destroy		3886849	0					
ANR	3886901	ArgumentList	memory		3886849	1					
ANR	3886902	Argument	memory		3886849	0					
ANR	3886903	Identifier	memory		3886849	0					
ANR	3886904	Argument	data		3886849	1					
ANR	3886905	Identifier	data		3886849	0					
ANR	3886906	Argument	user		3886849	2					
ANR	3886907	Identifier	user		3886849	0					
ANR	3886908	ExpressionStatement	FT_FREE ( cur )	434:6:10925:10939	3886849	3	True				
ANR	3886909	CallExpression	FT_FREE ( cur )		3886849	0					
ANR	3886910	Callee	FT_FREE		3886849	0					
ANR	3886911	Identifier	FT_FREE		3886849	0					
ANR	3886912	ArgumentList	cur		3886849	1					
ANR	3886913	Argument	cur		3886849	0					
ANR	3886914	Identifier	cur		3886849	0					
ANR	3886915	ExpressionStatement	cur = next	435:6:10947:10957	3886849	4	True				
ANR	3886916	AssignmentExpression	cur = next		3886849	0		=			
ANR	3886917	Identifier	cur		3886849	0					
ANR	3886918	Identifier	next		3886849	1					
ANR	3886919	ExpressionStatement	list -> head = NULL	438:4:10970:10987	3886849	4	True				
ANR	3886920	AssignmentExpression	list -> head = NULL		3886849	0		=			
ANR	3886921	PtrMemberAccess	list -> head		3886849	0					
ANR	3886922	Identifier	list		3886849	0					
ANR	3886923	Identifier	head		3886849	1					
ANR	3886924	Identifier	NULL		3886849	1					
ANR	3886925	ExpressionStatement	list -> tail = NULL	439:4:10993:11010	3886849	5	True				
ANR	3886926	AssignmentExpression	list -> tail = NULL		3886849	0		=			
ANR	3886927	PtrMemberAccess	list -> tail		3886849	0					
ANR	3886928	Identifier	list		3886849	0					
ANR	3886929	Identifier	tail		3886849	1					
ANR	3886930	Identifier	NULL		3886849	1					
ANR	3886931	Identifier	FT_List_Finalize		3886849	1					
ANR	3886932	ParameterList	"FT_List list , FT_List_Destructor destroy , FT_Memory memory , void * user"		3886849	2					
ANR	3886933	Parameter	FT_List list	413:20:10495:10518	3886849	0	True				
ANR	3886934	ParameterType	FT_List		3886849	0					
ANR	3886935	Identifier	list		3886849	1					
ANR	3886936	Parameter	FT_List_Destructor destroy	414:20:10541:10567	3886849	1	True				
ANR	3886937	ParameterType	FT_List_Destructor		3886849	0					
ANR	3886938	Identifier	destroy		3886849	1					
ANR	3886939	Parameter	FT_Memory memory	415:20:10590:10615	3886849	2	True				
ANR	3886940	ParameterType	FT_Memory		3886849	0					
ANR	3886941	Identifier	memory		3886849	1					
ANR	3886942	Parameter	void * user	416:20:10638:10661	3886849	3	True				
ANR	3886943	ParameterType	void *		3886849	0					
ANR	3886944	Identifier	user		3886849	1					
ANR	3886945	CFGEntryNode	ENTRY		3886849		True				
ANR	3886946	CFGExitNode	EXIT		3886849		True				
ANR	3886947	Symbol	next		3886849						
ANR	3886948	Symbol	cur		3886849						
ANR	3886949	Symbol	memory		3886849						
ANR	3886950	Symbol	NULL		3886849						
ANR	3886951	Symbol	data		3886849						
ANR	3886952	Symbol	destroy		3886849						
ANR	3886953	Symbol	list		3886849						
ANR	3886954	Symbol	cur -> data		3886849						
ANR	3886955	Symbol	list -> head		3886849						
ANR	3886956	Symbol	* list		3886849						
ANR	3886957	Symbol	* cur		3886849						
ANR	3886958	Symbol	user		3886849						
ANR	3886959	Symbol	cur -> next		3886849						
ANR	3886960	Symbol	list -> tail		3886849						
