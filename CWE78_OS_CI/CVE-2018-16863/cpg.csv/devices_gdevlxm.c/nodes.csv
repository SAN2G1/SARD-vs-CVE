command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2432301	File	data/converged/CVE-2018-16863_ghostpdl/devices_gdevlxm.c								
ANR	2432302	DeclStmt									
ANR	2432303	Decl							const gx_device_procs	const gx_device_procs	lxm5700m_procs
ANR	2432304	ClassDef	lxm_device_s	50:8:1806:1951							
ANR	2432305	DeclStmt									
ANR	2432306	Decl							int	int	headSeparation
ANR	2432307	DeclStmt									
ANR	2432308	Decl							lxm_device_s	lxm_device_s	lxm_device
ANR	2432309	DeclStmt									
ANR	2432310	Decl							lxm_device far_data	lxm_device far_data	gs_lxm5700m_device
ANR	2432311	Function	lxm5700m_print_page	143:0:5620:14085							
ANR	2432312	FunctionDef	"lxm5700m_print_page (gx_device_printer * pdev , FILE * prn_stream)"		2432311	0					
ANR	2432313	CompoundStatement		145:0:5694:14085	2432311	0					
ANR	2432314	IdentifierDeclStatement	"int lnum , minX , maxX , i , l , highestX , leastX , extent ;"	146:4:5700:5751	2432311	0	True				
ANR	2432315	IdentifierDecl	lnum		2432311	0					
ANR	2432316	IdentifierDeclType	int		2432311	0					
ANR	2432317	Identifier	lnum		2432311	1					
ANR	2432318	IdentifierDecl	minX		2432311	1					
ANR	2432319	IdentifierDeclType	int		2432311	0					
ANR	2432320	Identifier	minX		2432311	1					
ANR	2432321	IdentifierDecl	maxX		2432311	2					
ANR	2432322	IdentifierDeclType	int		2432311	0					
ANR	2432323	Identifier	maxX		2432311	1					
ANR	2432324	IdentifierDecl	i		2432311	3					
ANR	2432325	IdentifierDeclType	int		2432311	0					
ANR	2432326	Identifier	i		2432311	1					
ANR	2432327	IdentifierDecl	l		2432311	4					
ANR	2432328	IdentifierDeclType	int		2432311	0					
ANR	2432329	Identifier	l		2432311	1					
ANR	2432330	IdentifierDecl	highestX		2432311	5					
ANR	2432331	IdentifierDeclType	int		2432311	0					
ANR	2432332	Identifier	highestX		2432311	1					
ANR	2432333	IdentifierDecl	leastX		2432311	6					
ANR	2432334	IdentifierDeclType	int		2432311	0					
ANR	2432335	Identifier	leastX		2432311	1					
ANR	2432336	IdentifierDecl	extent		2432311	7					
ANR	2432337	IdentifierDeclType	int		2432311	0					
ANR	2432338	Identifier	extent		2432311	1					
ANR	2432339	IdentifierDeclStatement	int direction = RIGHTWARD ;	147:4:5757:5782	2432311	1	True				
ANR	2432340	IdentifierDecl	direction = RIGHTWARD		2432311	0					
ANR	2432341	IdentifierDeclType	int		2432311	0					
ANR	2432342	Identifier	direction		2432311	1					
ANR	2432343	AssignmentExpression	direction = RIGHTWARD		2432311	2		=			
ANR	2432344	Identifier	RIGHTWARD		2432311	0					
ANR	2432345	Identifier	RIGHTWARD		2432311	1					
ANR	2432346	IdentifierDeclStatement	int lastY = 0 ;	148:4:5788:5801	2432311	2	True				
ANR	2432347	IdentifierDecl	lastY = 0		2432311	0					
ANR	2432348	IdentifierDeclType	int		2432311	0					
ANR	2432349	Identifier	lastY		2432311	1					
ANR	2432350	AssignmentExpression	lastY = 0		2432311	2		=			
ANR	2432351	Identifier	lastY		2432311	0					
ANR	2432352	PrimaryExpression	0		2432311	1					
ANR	2432353	IdentifierDeclStatement	int line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev ) ;	150:4:5808:5871	2432311	3	True				
ANR	2432354	IdentifierDecl	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		2432311	0					
ANR	2432355	IdentifierDeclType	int		2432311	0					
ANR	2432356	Identifier	line_size		2432311	1					
ANR	2432357	AssignmentExpression	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		2432311	2		=			
ANR	2432358	Identifier	line_size		2432311	0					
ANR	2432359	CallExpression	gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		2432311	1					
ANR	2432360	Callee	gdev_mem_bytes_per_scan_line		2432311	0					
ANR	2432361	Identifier	gdev_mem_bytes_per_scan_line		2432311	0					
ANR	2432362	ArgumentList	( gx_device * ) pdev		2432311	1					
ANR	2432363	Argument	( gx_device * ) pdev		2432311	0					
ANR	2432364	CastExpression	( gx_device * ) pdev		2432311	0					
ANR	2432365	CastTarget	gx_device *		2432311	0					
ANR	2432366	Identifier	pdev		2432311	1					
ANR	2432367	IdentifierDeclStatement	int in_size = line_size * ( swipeHeight ) ;	152:4:5925:5964	2432311	4	True				
ANR	2432368	IdentifierDecl	in_size = line_size * ( swipeHeight )		2432311	0					
ANR	2432369	IdentifierDeclType	int		2432311	0					
ANR	2432370	Identifier	in_size		2432311	1					
ANR	2432371	AssignmentExpression	in_size = line_size * ( swipeHeight )		2432311	2		=			
ANR	2432372	Identifier	in_size		2432311	0					
ANR	2432373	MultiplicativeExpression	line_size * ( swipeHeight )		2432311	1		*			
ANR	2432374	Identifier	line_size		2432311	0					
ANR	2432375	Identifier	swipeHeight		2432311	1					
ANR	2432376	IdentifierDeclStatement	int swipeBuf_size = in_size ;	153:4:5970:5997	2432311	5	True				
ANR	2432377	IdentifierDecl	swipeBuf_size = in_size		2432311	0					
ANR	2432378	IdentifierDeclType	int		2432311	0					
ANR	2432379	Identifier	swipeBuf_size		2432311	1					
ANR	2432380	AssignmentExpression	swipeBuf_size = in_size		2432311	2		=			
ANR	2432381	Identifier	in_size		2432311	0					
ANR	2432382	Identifier	in_size		2432311	1					
ANR	2432383	IdentifierDeclStatement	"byte * buf1 = ( byte * ) gs_malloc ( pdev -> memory , in_size , 1 , ""lxm_print_page(buf1)"" ) ;"	154:4:6003:6083	2432311	6	True				
ANR	2432384	IdentifierDecl	"* buf1 = ( byte * ) gs_malloc ( pdev -> memory , in_size , 1 , ""lxm_print_page(buf1)"" )"		2432311	0					
ANR	2432385	IdentifierDeclType	byte *		2432311	0					
ANR	2432386	Identifier	buf1		2432311	1					
ANR	2432387	AssignmentExpression	"* buf1 = ( byte * ) gs_malloc ( pdev -> memory , in_size , 1 , ""lxm_print_page(buf1)"" )"		2432311	2		=			
ANR	2432388	Identifier	buf1		2432311	0					
ANR	2432389	CastExpression	"( byte * ) gs_malloc ( pdev -> memory , in_size , 1 , ""lxm_print_page(buf1)"" )"		2432311	1					
ANR	2432390	CastTarget	byte *		2432311	0					
ANR	2432391	CallExpression	"gs_malloc ( pdev -> memory , in_size , 1 , ""lxm_print_page(buf1)"" )"		2432311	1					
ANR	2432392	Callee	gs_malloc		2432311	0					
ANR	2432393	Identifier	gs_malloc		2432311	0					
ANR	2432394	ArgumentList	pdev -> memory		2432311	1					
ANR	2432395	Argument	pdev -> memory		2432311	0					
ANR	2432396	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2432397	Identifier	pdev		2432311	0					
ANR	2432398	Identifier	memory		2432311	1					
ANR	2432399	Argument	in_size		2432311	1					
ANR	2432400	Identifier	in_size		2432311	0					
ANR	2432401	Argument	1		2432311	2					
ANR	2432402	PrimaryExpression	1		2432311	0					
ANR	2432403	Argument	"""lxm_print_page(buf1)"""		2432311	3					
ANR	2432404	PrimaryExpression	"""lxm_print_page(buf1)"""		2432311	0					
ANR	2432405	IdentifierDeclStatement	"byte * swipeBuf = ( byte * ) gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" ) ;"	155:4:6089:6191	2432311	7	True				
ANR	2432406	IdentifierDecl	"* swipeBuf = ( byte * ) gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	0					
ANR	2432407	IdentifierDeclType	byte *		2432311	0					
ANR	2432408	Identifier	swipeBuf		2432311	1					
ANR	2432409	AssignmentExpression	"* swipeBuf = ( byte * ) gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	2		=			
ANR	2432410	Identifier	swipeBuf		2432311	0					
ANR	2432411	CastExpression	"( byte * ) gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	1					
ANR	2432412	CastTarget	byte *		2432311	0					
ANR	2432413	CallExpression	"gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	1					
ANR	2432414	Callee	gs_malloc		2432311	0					
ANR	2432415	Identifier	gs_malloc		2432311	0					
ANR	2432416	ArgumentList	pdev -> memory		2432311	1					
ANR	2432417	Argument	pdev -> memory		2432311	0					
ANR	2432418	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2432419	Identifier	pdev		2432311	0					
ANR	2432420	Identifier	memory		2432311	1					
ANR	2432421	Argument	swipeBuf_size		2432311	1					
ANR	2432422	Identifier	swipeBuf_size		2432311	0					
ANR	2432423	Argument	1		2432311	2					
ANR	2432424	PrimaryExpression	1		2432311	0					
ANR	2432425	Argument	"""lxm_print_page(swipeBuf)"""		2432311	3					
ANR	2432426	PrimaryExpression	"""lxm_print_page(swipeBuf)"""		2432311	0					
ANR	2432427	IdentifierDeclStatement	byte * in = buf1 ;	157:4:6197:6212	2432311	8	True				
ANR	2432428	IdentifierDecl	* in = buf1		2432311	0					
ANR	2432429	IdentifierDeclType	byte *		2432311	0					
ANR	2432430	Identifier	in		2432311	1					
ANR	2432431	AssignmentExpression	* in = buf1		2432311	2		=			
ANR	2432432	Identifier	buf1		2432311	0					
ANR	2432433	Identifier	buf1		2432311	1					
ANR	2432434	IfStatement	if ( buf1 == 0 || swipeBuf == 0 )		2432311	9					
ANR	2432435	Condition	buf1 == 0 || swipeBuf == 0	160:9:6252:6277	2432311	0	True				
ANR	2432436	OrExpression	buf1 == 0 || swipeBuf == 0		2432311	0		||			
ANR	2432437	EqualityExpression	buf1 == 0		2432311	0		==			
ANR	2432438	Identifier	buf1		2432311	0					
ANR	2432439	PrimaryExpression	0		2432311	1					
ANR	2432440	EqualityExpression	swipeBuf == 0		2432311	1		==			
ANR	2432441	Identifier	swipeBuf		2432311	0					
ANR	2432442	PrimaryExpression	0		2432311	1					
ANR	2432443	CompoundStatement		16:38:586:586	2432311	1					
ANR	2432444	IfStatement	if ( buf1 )		2432311	0					
ANR	2432445	Condition	buf1	161:13:6296:6299	2432311	0	True				
ANR	2432446	Identifier	buf1		2432311	0					
ANR	2432447	Label	quit_ignomiously :	162:0:6303:6319	2432311	1	True				
ANR	2432448	Identifier	quit_ignomiously		2432311	0					
ANR	2432449	ExpressionStatement	"gs_free ( pdev -> memory , ( char * ) buf1 , in_size , 1 , ""lxm_print_page(buf1)"" )"	163:8:6388:6459	2432311	1	True				
ANR	2432450	CallExpression	"gs_free ( pdev -> memory , ( char * ) buf1 , in_size , 1 , ""lxm_print_page(buf1)"" )"		2432311	0					
ANR	2432451	Callee	gs_free		2432311	0					
ANR	2432452	Identifier	gs_free		2432311	0					
ANR	2432453	ArgumentList	pdev -> memory		2432311	1					
ANR	2432454	Argument	pdev -> memory		2432311	0					
ANR	2432455	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2432456	Identifier	pdev		2432311	0					
ANR	2432457	Identifier	memory		2432311	1					
ANR	2432458	Argument	( char * ) buf1		2432311	1					
ANR	2432459	CastExpression	( char * ) buf1		2432311	0					
ANR	2432460	CastTarget	char *		2432311	0					
ANR	2432461	Identifier	buf1		2432311	1					
ANR	2432462	Argument	in_size		2432311	2					
ANR	2432463	Identifier	in_size		2432311	0					
ANR	2432464	Argument	1		2432311	3					
ANR	2432465	PrimaryExpression	1		2432311	0					
ANR	2432466	Argument	"""lxm_print_page(buf1)"""		2432311	4					
ANR	2432467	PrimaryExpression	"""lxm_print_page(buf1)"""		2432311	0					
ANR	2432468	IfStatement	if ( swipeBuf )		2432311	2					
ANR	2432469	Condition	swipeBuf	164:13:6474:6481	2432311	0	True				
ANR	2432470	Identifier	swipeBuf		2432311	0					
ANR	2432471	ExpressionStatement	"gs_free ( pdev -> memory , ( char * ) swipeBuf , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"	165:12:6497:6582	2432311	1	True				
ANR	2432472	CallExpression	"gs_free ( pdev -> memory , ( char * ) swipeBuf , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	0					
ANR	2432473	Callee	gs_free		2432311	0					
ANR	2432474	Identifier	gs_free		2432311	0					
ANR	2432475	ArgumentList	pdev -> memory		2432311	1					
ANR	2432476	Argument	pdev -> memory		2432311	0					
ANR	2432477	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2432478	Identifier	pdev		2432311	0					
ANR	2432479	Identifier	memory		2432311	1					
ANR	2432480	Argument	( char * ) swipeBuf		2432311	1					
ANR	2432481	CastExpression	( char * ) swipeBuf		2432311	0					
ANR	2432482	CastTarget	char *		2432311	0					
ANR	2432483	Identifier	swipeBuf		2432311	1					
ANR	2432484	Argument	swipeBuf_size		2432311	2					
ANR	2432485	Identifier	swipeBuf_size		2432311	0					
ANR	2432486	Argument	1		2432311	3					
ANR	2432487	PrimaryExpression	1		2432311	0					
ANR	2432488	Argument	"""lxm_print_page(swipeBuf)"""		2432311	4					
ANR	2432489	PrimaryExpression	"""lxm_print_page(swipeBuf)"""		2432311	0					
ANR	2432490	ExpressionStatement	return_error ( gs_error_VMerror )	166:8:6592:6622	2432311	3	True				
ANR	2432491	CallExpression	return_error ( gs_error_VMerror )		2432311	0					
ANR	2432492	Callee	return_error		2432311	0					
ANR	2432493	Identifier	return_error		2432311	0					
ANR	2432494	ArgumentList	gs_error_VMerror		2432311	1					
ANR	2432495	Argument	gs_error_VMerror		2432311	0					
ANR	2432496	Identifier	gs_error_VMerror		2432311	0					
ANR	2432497	CompoundStatement		26:15:1009:1109	2432311	10					
ANR	2432498	Statement	static	170:8:6697:6702	2432311	0	True				
ANR	2432499	IdentifierDeclStatement	"const char init_string [ ] = { init1 ( ) , init2 ( ) , init3 ( ) } ;"	170:15:6704:6804	2432311	1	True				
ANR	2432500	IdentifierDecl	"init_string [ ] = { init1 ( ) , init2 ( ) , init3 ( ) }"		2432311	0					
ANR	2432501	IdentifierDeclType	const char [ ]		2432311	0					
ANR	2432502	Identifier	init_string		2432311	1					
ANR	2432503	AssignmentExpression	"init_string [ ] = { init1 ( ) , init2 ( ) , init3 ( ) }"		2432311	2		=			
ANR	2432504	Identifier	init_string		2432311	0					
ANR	2432505	InitializerList	init1 ( )		2432311	1					
ANR	2432506	CallExpression	init1 ( )		2432311	0					
ANR	2432507	Callee	init1		2432311	0					
ANR	2432508	Identifier	init1		2432311	0					
ANR	2432509	ArgumentList			2432311	1					
ANR	2432510	CallExpression	init2 ( )		2432311	1					
ANR	2432511	Callee	init2		2432311	0					
ANR	2432512	Identifier	init2		2432311	0					
ANR	2432513	ArgumentList			2432311	1					
ANR	2432514	CallExpression	init3 ( )		2432311	2					
ANR	2432515	Callee	init3		2432311	0					
ANR	2432516	Identifier	init3		2432311	0					
ANR	2432517	ArgumentList			2432311	1					
ANR	2432518	ExpressionStatement	"fwrite ( init_string , 1 , sizeof ( init_string ) , prn_stream )"	175:8:6814:6869	2432311	2	True				
ANR	2432519	CallExpression	"fwrite ( init_string , 1 , sizeof ( init_string ) , prn_stream )"		2432311	0					
ANR	2432520	Callee	fwrite		2432311	0					
ANR	2432521	Identifier	fwrite		2432311	0					
ANR	2432522	ArgumentList	init_string		2432311	1					
ANR	2432523	Argument	init_string		2432311	0					
ANR	2432524	Identifier	init_string		2432311	0					
ANR	2432525	Argument	1		2432311	1					
ANR	2432526	PrimaryExpression	1		2432311	0					
ANR	2432527	Argument	sizeof ( init_string )		2432311	2					
ANR	2432528	SizeofExpression	sizeof ( init_string )		2432311	0					
ANR	2432529	Sizeof	sizeof		2432311	0					
ANR	2432530	SizeofOperand	init_string		2432311	1					
ANR	2432531	Argument	prn_stream		2432311	3					
ANR	2432532	Identifier	prn_stream		2432311	0					
ANR	2432533	ForStatement	for ( lnum = 0 ; lnum < pdev -> height - swipeHeight ; )		2432311	11					
ANR	2432534	ForInit	lnum = 0 ;	178:9:6920:6926	2432311	0	True				
ANR	2432535	AssignmentExpression	lnum = 0		2432311	0		=			
ANR	2432536	Identifier	lnum		2432311	0					
ANR	2432537	PrimaryExpression	0		2432311	1					
ANR	2432538	Condition	lnum < pdev -> height - swipeHeight	178:17:6928:6958	2432311	1	True				
ANR	2432539	RelationalExpression	lnum < pdev -> height - swipeHeight		2432311	0		<			
ANR	2432540	Identifier	lnum		2432311	0					
ANR	2432541	AdditiveExpression	pdev -> height - swipeHeight		2432311	1		-			
ANR	2432542	PtrMemberAccess	pdev -> height		2432311	0					
ANR	2432543	Identifier	pdev		2432311	0					
ANR	2432544	Identifier	height		2432311	1					
ANR	2432545	Identifier	swipeHeight		2432311	1					
ANR	2432546	CompoundStatement		37:8:1355:1363	2432311	2					
ANR	2432547	IdentifierDeclStatement	byte * in_data ;	179:8:6998:7011	2432311	0	True				
ANR	2432548	IdentifierDecl	* in_data		2432311	0					
ANR	2432549	IdentifierDeclType	byte *		2432311	0					
ANR	2432550	Identifier	in_data		2432311	1					
ANR	2432551	Statement	register	180:8:7021:7028	2432311	1	True				
ANR	2432552	IdentifierDeclStatement	byte * outp ;	180:17:7030:7040	2432311	2	True				
ANR	2432553	IdentifierDecl	* outp		2432311	0					
ANR	2432554	IdentifierDeclType	byte *		2432311	0					
ANR	2432555	Identifier	outp		2432311	1					
ANR	2432556	IdentifierDeclStatement	int lcnt ;	181:8:7050:7058	2432311	3	True				
ANR	2432557	IdentifierDecl	lcnt		2432311	0					
ANR	2432558	IdentifierDeclType	int		2432311	0					
ANR	2432559	Identifier	lcnt		2432311	1					
ANR	2432560	CompoundStatement		41:12:1508:1513	2432311	4					
ANR	2432561	IdentifierDeclStatement	int l ;	185:12:7203:7208	2432311	0	True				
ANR	2432562	IdentifierDecl	l		2432311	0					
ANR	2432563	IdentifierDeclType	int		2432311	0					
ANR	2432564	Identifier	l		2432311	1					
ANR	2432565	ForStatement	for ( l = lnum ; l < pdev -> height ; l ++ )		2432311	1					
ANR	2432566	ForInit	l = lnum ;	187:17:7228:7234	2432311	0	True				
ANR	2432567	AssignmentExpression	l = lnum		2432311	0		=			
ANR	2432568	Identifier	l		2432311	0					
ANR	2432569	Identifier	lnum		2432311	1					
ANR	2432570	Condition	l < pdev -> height	187:25:7236:7249	2432311	1	True				
ANR	2432571	RelationalExpression	l < pdev -> height		2432311	0		<			
ANR	2432572	Identifier	l		2432311	0					
ANR	2432573	PtrMemberAccess	pdev -> height		2432311	1					
ANR	2432574	Identifier	pdev		2432311	0					
ANR	2432575	Identifier	height		2432311	1					
ANR	2432576	PostIncDecOperationExpression	l ++	187:41:7252:7254	2432311	2	True				
ANR	2432577	Identifier	l		2432311	0					
ANR	2432578	IncDec	++		2432311	1					
ANR	2432579	CompoundStatement		43:46:1562:1562	2432311	3					
ANR	2432580	ExpressionStatement	"gdev_prn_get_bits ( pdev , l , in , & in_data )"	189:16:7337:7377	2432311	0	True				
ANR	2432581	CallExpression	"gdev_prn_get_bits ( pdev , l , in , & in_data )"		2432311	0					
ANR	2432582	Callee	gdev_prn_get_bits		2432311	0					
ANR	2432583	Identifier	gdev_prn_get_bits		2432311	0					
ANR	2432584	ArgumentList	pdev		2432311	1					
ANR	2432585	Argument	pdev		2432311	0					
ANR	2432586	Identifier	pdev		2432311	0					
ANR	2432587	Argument	l		2432311	1					
ANR	2432588	Identifier	l		2432311	0					
ANR	2432589	Argument	in		2432311	2					
ANR	2432590	Identifier	in		2432311	0					
ANR	2432591	Argument	& in_data		2432311	3					
ANR	2432592	UnaryOperationExpression	& in_data		2432311	0					
ANR	2432593	UnaryOperator	&		2432311	0					
ANR	2432594	Identifier	in_data		2432311	1					
ANR	2432595	IfStatement	"if ( in_data [ 0 ] != 0 || memcmp ( ( char * ) in_data , ( char * ) in_data + 1 , line_size - 1 ) )"		2432311	1					
ANR	2432596	Condition	"in_data [ 0 ] != 0 || memcmp ( ( char * ) in_data , ( char * ) in_data + 1 , line_size - 1 )"	190:21:7400:7498	2432311	0	True				
ANR	2432597	OrExpression	"in_data [ 0 ] != 0 || memcmp ( ( char * ) in_data , ( char * ) in_data + 1 , line_size - 1 )"		2432311	0		||			
ANR	2432598	EqualityExpression	in_data [ 0 ] != 0		2432311	0		!=			
ANR	2432599	ArrayIndexing	in_data [ 0 ]		2432311	0					
ANR	2432600	Identifier	in_data		2432311	0					
ANR	2432601	PrimaryExpression	0		2432311	1					
ANR	2432602	PrimaryExpression	0		2432311	1					
ANR	2432603	CallExpression	"memcmp ( ( char * ) in_data , ( char * ) in_data + 1 , line_size - 1 )"		2432311	1					
ANR	2432604	Callee	memcmp		2432311	0					
ANR	2432605	Identifier	memcmp		2432311	0					
ANR	2432606	ArgumentList	( char * ) in_data		2432311	1					
ANR	2432607	Argument	( char * ) in_data		2432311	0					
ANR	2432608	CastExpression	( char * ) in_data		2432311	0					
ANR	2432609	CastTarget	char *		2432311	0					
ANR	2432610	Identifier	in_data		2432311	1					
ANR	2432611	Argument	( char * ) in_data + 1		2432311	1					
ANR	2432612	AdditiveExpression	( char * ) in_data + 1		2432311	0		+			
ANR	2432613	CastExpression	( char * ) in_data		2432311	0					
ANR	2432614	CastTarget	char *		2432311	0					
ANR	2432615	Identifier	in_data		2432311	1					
ANR	2432616	PrimaryExpression	1		2432311	1					
ANR	2432617	Argument	line_size - 1		2432311	2					
ANR	2432618	AdditiveExpression	line_size - 1		2432311	0		-			
ANR	2432619	Identifier	line_size		2432311	0					
ANR	2432620	PrimaryExpression	1		2432311	1					
ANR	2432621	CompoundStatement		48:23:1828:1828	2432311	1					
ANR	2432622	BreakStatement	break ;	193:20:7545:7550	2432311	0	True				
ANR	2432623	IfStatement	if ( l >= pdev -> height )		2432311	2					
ANR	2432624	Condition	l >= pdev -> height	198:16:7672:7688	2432311	0	True				
ANR	2432625	RelationalExpression	l >= pdev -> height		2432311	0		>=			
ANR	2432626	Identifier	l		2432311	0					
ANR	2432627	PtrMemberAccess	pdev -> height		2432311	1					
ANR	2432628	Identifier	pdev		2432311	0					
ANR	2432629	Identifier	height		2432311	1					
ANR	2432630	CompoundStatement		54:35:1996:1996	2432311	1					
ANR	2432631	ExpressionStatement	lnum = l	199:16:7753:7761	2432311	0	True				
ANR	2432632	AssignmentExpression	lnum = l		2432311	0		=			
ANR	2432633	Identifier	lnum		2432311	0					
ANR	2432634	Identifier	l		2432311	1					
ANR	2432635	BreakStatement	break ;	200:16:7779:7784	2432311	1	True				
ANR	2432636	IfStatement	if ( l - lnum > overLap )		2432311	3					
ANR	2432637	Condition	l - lnum > overLap	204:16:7929:7944	2432311	0	True				
ANR	2432638	RelationalExpression	l - lnum > overLap		2432311	0		>			
ANR	2432639	AdditiveExpression	l - lnum		2432311	0		-			
ANR	2432640	Identifier	l		2432311	0					
ANR	2432641	Identifier	lnum		2432311	1					
ANR	2432642	Identifier	overLap		2432311	1					
ANR	2432643	ExpressionStatement	lnum = l - overLap	204:34:7947:7965	2432311	1	True				
ANR	2432644	AssignmentExpression	lnum = l - overLap		2432311	0		=			
ANR	2432645	Identifier	lnum		2432311	0					
ANR	2432646	AdditiveExpression	l - overLap		2432311	1		-			
ANR	2432647	Identifier	l		2432311	0					
ANR	2432648	Identifier	overLap		2432311	1					
ANR	2432649	IfStatement	if ( lnum >= pdev -> height - swipeHeight )		2432311	4					
ANR	2432650	Condition	lnum >= pdev -> height - swipeHeight	207:16:8045:8077	2432311	0	True				
ANR	2432651	RelationalExpression	lnum >= pdev -> height - swipeHeight		2432311	0		>=			
ANR	2432652	Identifier	lnum		2432311	0					
ANR	2432653	AdditiveExpression	pdev -> height - swipeHeight		2432311	1		-			
ANR	2432654	PtrMemberAccess	pdev -> height		2432311	0					
ANR	2432655	Identifier	pdev		2432311	0					
ANR	2432656	Identifier	height		2432311	1					
ANR	2432657	Identifier	swipeHeight		2432311	1					
ANR	2432658	CompoundStatement		63:51:2385:2385	2432311	1					
ANR	2432659	ExpressionStatement	lnum = pdev -> height - swipeHeight	209:16:8159:8192	2432311	0	True				
ANR	2432660	AssignmentExpression	lnum = pdev -> height - swipeHeight		2432311	0		=			
ANR	2432661	Identifier	lnum		2432311	0					
ANR	2432662	AdditiveExpression	pdev -> height - swipeHeight		2432311	1		-			
ANR	2432663	PtrMemberAccess	pdev -> height		2432311	0					
ANR	2432664	Identifier	pdev		2432311	0					
ANR	2432665	Identifier	height		2432311	1					
ANR	2432666	Identifier	swipeHeight		2432311	1					
ANR	2432667	ExpressionStatement	"lcnt = gdev_prn_copy_scan_lines ( pdev , lnum , in , in_size )"	214:8:8266:8322	2432311	5	True				
ANR	2432668	AssignmentExpression	"lcnt = gdev_prn_copy_scan_lines ( pdev , lnum , in , in_size )"		2432311	0		=			
ANR	2432669	Identifier	lcnt		2432311	0					
ANR	2432670	CallExpression	"gdev_prn_copy_scan_lines ( pdev , lnum , in , in_size )"		2432311	1					
ANR	2432671	Callee	gdev_prn_copy_scan_lines		2432311	0					
ANR	2432672	Identifier	gdev_prn_copy_scan_lines		2432311	0					
ANR	2432673	ArgumentList	pdev		2432311	1					
ANR	2432674	Argument	pdev		2432311	0					
ANR	2432675	Identifier	pdev		2432311	0					
ANR	2432676	Argument	lnum		2432311	1					
ANR	2432677	Identifier	lnum		2432311	0					
ANR	2432678	Argument	in		2432311	2					
ANR	2432679	Identifier	in		2432311	0					
ANR	2432680	Argument	in_size		2432311	3					
ANR	2432681	Identifier	in_size		2432311	0					
ANR	2432682	IfStatement	if ( lcnt < swipeHeight )		2432311	6					
ANR	2432683	Condition	lcnt < swipeHeight	215:13:8337:8354	2432311	0	True				
ANR	2432684	RelationalExpression	lcnt < swipeHeight		2432311	0		<			
ANR	2432685	Identifier	lcnt		2432311	0					
ANR	2432686	Identifier	swipeHeight		2432311	1					
ANR	2432687	CompoundStatement		71:34:2663:2663	2432311	1					
ANR	2432688	ExpressionStatement	"memset ( in + lcnt * line_size , 0 , in_size - lcnt * line_size )"	217:12:8415:8494	2432311	0	True				
ANR	2432689	CallExpression	"memset ( in + lcnt * line_size , 0 , in_size - lcnt * line_size )"		2432311	0					
ANR	2432690	Callee	memset		2432311	0					
ANR	2432691	Identifier	memset		2432311	0					
ANR	2432692	ArgumentList	in + lcnt * line_size		2432311	1					
ANR	2432693	Argument	in + lcnt * line_size		2432311	0					
ANR	2432694	AdditiveExpression	in + lcnt * line_size		2432311	0		+			
ANR	2432695	Identifier	in		2432311	0					
ANR	2432696	MultiplicativeExpression	lcnt * line_size		2432311	1		*			
ANR	2432697	Identifier	lcnt		2432311	0					
ANR	2432698	Identifier	line_size		2432311	1					
ANR	2432699	Argument	0		2432311	1					
ANR	2432700	PrimaryExpression	0		2432311	0					
ANR	2432701	Argument	in_size - lcnt * line_size		2432311	2					
ANR	2432702	AdditiveExpression	in_size - lcnt * line_size		2432311	0		-			
ANR	2432703	Identifier	in_size		2432311	0					
ANR	2432704	MultiplicativeExpression	lcnt * line_size		2432311	1		*			
ANR	2432705	Identifier	lcnt		2432311	0					
ANR	2432706	Identifier	line_size		2432311	1					
ANR	2432707	ExpressionStatement	minX = line_size	222:8:8574:8590	2432311	7	True				
ANR	2432708	AssignmentExpression	minX = line_size		2432311	0		=			
ANR	2432709	Identifier	minX		2432311	0					
ANR	2432710	Identifier	line_size		2432311	1					
ANR	2432711	ExpressionStatement	maxX = 0	223:8:8600:8608	2432311	8	True				
ANR	2432712	AssignmentExpression	maxX = 0		2432311	0		=			
ANR	2432713	Identifier	maxX		2432311	0					
ANR	2432714	PrimaryExpression	0		2432311	1					
ANR	2432715	ForStatement	for ( l = 0 ; l < swipeHeight ; l ++ )		2432311	9					
ANR	2432716	ForInit	l = 0 ;	224:13:8623:8626	2432311	0	True				
ANR	2432717	AssignmentExpression	l = 0		2432311	0		=			
ANR	2432718	Identifier	l		2432311	0					
ANR	2432719	PrimaryExpression	0		2432311	1					
ANR	2432720	Condition	l < swipeHeight	224:18:8628:8640	2432311	1	True				
ANR	2432721	RelationalExpression	l < swipeHeight		2432311	0		<			
ANR	2432722	Identifier	l		2432311	0					
ANR	2432723	Identifier	swipeHeight		2432311	1					
ANR	2432724	PostIncDecOperationExpression	l ++	224:33:8643:8645	2432311	2	True				
ANR	2432725	Identifier	l		2432311	0					
ANR	2432726	IncDec	++		2432311	1					
ANR	2432727	CompoundStatement		80:38:2953:2953	2432311	3					
ANR	2432728	ForStatement	for ( i = 0 ; i < minX ; i ++ )		2432311	0					
ANR	2432729	ForInit	i = 0 ;	225:17:8695:8698	2432311	0	True				
ANR	2432730	AssignmentExpression	i = 0		2432311	0		=			
ANR	2432731	Identifier	i		2432311	0					
ANR	2432732	PrimaryExpression	0		2432311	1					
ANR	2432733	Condition	i < minX	225:22:8700:8705	2432311	1	True				
ANR	2432734	RelationalExpression	i < minX		2432311	0		<			
ANR	2432735	Identifier	i		2432311	0					
ANR	2432736	Identifier	minX		2432311	1					
ANR	2432737	PostIncDecOperationExpression	i ++	225:30:8708:8710	2432311	2	True				
ANR	2432738	Identifier	i		2432311	0					
ANR	2432739	IncDec	++		2432311	1					
ANR	2432740	CompoundStatement		81:35:3018:3018	2432311	3					
ANR	2432741	IfStatement	if ( in [ l * line_size + i ] != 0 )		2432311	0					
ANR	2432742	Condition	in [ l * line_size + i ] != 0	226:20:8772:8792	2432311	0	True				
ANR	2432743	EqualityExpression	in [ l * line_size + i ] != 0		2432311	0		!=			
ANR	2432744	ArrayIndexing	in [ l * line_size + i ]		2432311	0					
ANR	2432745	Identifier	in		2432311	0					
ANR	2432746	AdditiveExpression	l * line_size + i		2432311	1		+			
ANR	2432747	MultiplicativeExpression	l * line_size		2432311	0		*			
ANR	2432748	Identifier	l		2432311	0					
ANR	2432749	Identifier	line_size		2432311	1					
ANR	2432750	Identifier	i		2432311	1					
ANR	2432751	PrimaryExpression	0		2432311	1					
ANR	2432752	CompoundStatement		82:43:3100:3100	2432311	1					
ANR	2432753	ExpressionStatement	minX = i	227:20:8817:8825	2432311	0	True				
ANR	2432754	AssignmentExpression	minX = i		2432311	0		=			
ANR	2432755	Identifier	minX		2432311	0					
ANR	2432756	Identifier	i		2432311	1					
ANR	2432757	BreakStatement	break ;	228:20:8847:8852	2432311	1	True				
ANR	2432758	ForStatement	for ( i = line_size - 1 ; i >= maxX ; i -- )		2432311	1					
ANR	2432759	ForInit	i = line_size - 1 ;	231:17:8903:8916	2432311	0	True				
ANR	2432760	AssignmentExpression	i = line_size - 1		2432311	0		=			
ANR	2432761	Identifier	i		2432311	0					
ANR	2432762	AdditiveExpression	line_size - 1		2432311	1		-			
ANR	2432763	Identifier	line_size		2432311	0					
ANR	2432764	PrimaryExpression	1		2432311	1					
ANR	2432765	Condition	i >= maxX	231:32:8918:8924	2432311	1	True				
ANR	2432766	RelationalExpression	i >= maxX		2432311	0		>=			
ANR	2432767	Identifier	i		2432311	0					
ANR	2432768	Identifier	maxX		2432311	1					
ANR	2432769	PostIncDecOperationExpression	i --	231:41:8927:8929	2432311	2	True				
ANR	2432770	Identifier	i		2432311	0					
ANR	2432771	IncDec	--		2432311	1					
ANR	2432772	CompoundStatement		87:46:3237:3237	2432311	3					
ANR	2432773	IfStatement	if ( in [ l * line_size + i ] != 0 )		2432311	0					
ANR	2432774	Condition	in [ l * line_size + i ] != 0	232:20:8979:8999	2432311	0	True				
ANR	2432775	EqualityExpression	in [ l * line_size + i ] != 0		2432311	0		!=			
ANR	2432776	ArrayIndexing	in [ l * line_size + i ]		2432311	0					
ANR	2432777	Identifier	in		2432311	0					
ANR	2432778	AdditiveExpression	l * line_size + i		2432311	1		+			
ANR	2432779	MultiplicativeExpression	l * line_size		2432311	0		*			
ANR	2432780	Identifier	l		2432311	0					
ANR	2432781	Identifier	line_size		2432311	1					
ANR	2432782	Identifier	i		2432311	1					
ANR	2432783	PrimaryExpression	0		2432311	1					
ANR	2432784	CompoundStatement		88:43:3307:3307	2432311	1					
ANR	2432785	ExpressionStatement	maxX = i	233:20:9024:9032	2432311	0	True				
ANR	2432786	AssignmentExpression	maxX = i		2432311	0		=			
ANR	2432787	Identifier	maxX		2432311	0					
ANR	2432788	Identifier	i		2432311	1					
ANR	2432789	BreakStatement	break ;	234:20:9054:9059	2432311	1	True				
ANR	2432790	ExpressionStatement	minX = ( minX & ( - 2 ) )	238:8:9111:9129	2432311	10	True				
ANR	2432791	AssignmentExpression	minX = ( minX & ( - 2 ) )		2432311	0		=			
ANR	2432792	Identifier	minX		2432311	0					
ANR	2432793	BitAndExpression	minX & ( - 2 )		2432311	1		&			
ANR	2432794	Identifier	minX		2432311	0					
ANR	2432795	UnaryOperationExpression	- 2		2432311	1					
ANR	2432796	UnaryOperator	-		2432311	0					
ANR	2432797	PrimaryExpression	2		2432311	1					
ANR	2432798	ExpressionStatement	maxX = ( maxX + 3 ) & - 2	239:8:9162:9180	2432311	11	True				
ANR	2432799	AssignmentExpression	maxX = ( maxX + 3 ) & - 2		2432311	0		=			
ANR	2432800	Identifier	maxX		2432311	0					
ANR	2432801	BitAndExpression	( maxX + 3 ) & - 2		2432311	1		&			
ANR	2432802	AdditiveExpression	maxX + 3		2432311	0		+			
ANR	2432803	Identifier	maxX		2432311	0					
ANR	2432804	PrimaryExpression	3		2432311	1					
ANR	2432805	UnaryOperationExpression	- 2		2432311	1					
ANR	2432806	UnaryOperator	-		2432311	0					
ANR	2432807	PrimaryExpression	2		2432311	1					
ANR	2432808	ExpressionStatement	highestX = maxX * 8 - 1	241:8:9211:9230	2432311	12	True				
ANR	2432809	AssignmentExpression	highestX = maxX * 8 - 1		2432311	0		=			
ANR	2432810	Identifier	highestX		2432311	0					
ANR	2432811	AdditiveExpression	maxX * 8 - 1		2432311	1		-			
ANR	2432812	MultiplicativeExpression	maxX * 8		2432311	0		*			
ANR	2432813	Identifier	maxX		2432311	0					
ANR	2432814	PrimaryExpression	8		2432311	1					
ANR	2432815	PrimaryExpression	1		2432311	1					
ANR	2432816	ExpressionStatement	leastX = minX * 8	242:8:9240:9255	2432311	13	True				
ANR	2432817	AssignmentExpression	leastX = minX * 8		2432311	0		=			
ANR	2432818	Identifier	leastX		2432311	0					
ANR	2432819	MultiplicativeExpression	minX * 8		2432311	1		*			
ANR	2432820	Identifier	minX		2432311	0					
ANR	2432821	PrimaryExpression	8		2432311	1					
ANR	2432822	ExpressionStatement	extent = highestX - leastX + 1	243:8:9265:9293	2432311	14	True				
ANR	2432823	AssignmentExpression	extent = highestX - leastX + 1		2432311	0		=			
ANR	2432824	Identifier	extent		2432311	0					
ANR	2432825	AdditiveExpression	highestX - leastX + 1		2432311	1		-			
ANR	2432826	Identifier	highestX		2432311	0					
ANR	2432827	AdditiveExpression	leastX + 1		2432311	1		+			
ANR	2432828	Identifier	leastX		2432311	0					
ANR	2432829	PrimaryExpression	1		2432311	1					
ANR	2432830	ExpressionStatement	outp = swipeBuf	245:8:9304:9319	2432311	15	True				
ANR	2432831	AssignmentExpression	outp = swipeBuf		2432311	0		=			
ANR	2432832	Identifier	outp		2432311	0					
ANR	2432833	Identifier	swipeBuf		2432311	1					
ANR	2432834	Statement	define	248:1:9396:9401	2432311	16	True				
ANR	2432835	Statement	buffer_store	248:8:9403:9414	2432311	17	True				
ANR	2432836	Statement	(	248:20:9415:9415	2432311	18	True				
ANR	2432837	Statement	x	248:21:9416:9416	2432311	19	True				
ANR	2432838	Statement	)	248:22:9417:9417	2432311	20	True				
ANR	2432839	IfStatement	if ( outp - swipeBuf >= swipeBuf_size )		2432311	21					
ANR	2432840	Condition	outp - swipeBuf >= swipeBuf_size	248:27:9422:9449	2432311	0	True				
ANR	2432841	RelationalExpression	outp - swipeBuf >= swipeBuf_size		2432311	0		>=			
ANR	2432842	AdditiveExpression	outp - swipeBuf		2432311	0		-			
ANR	2432843	Identifier	outp		2432311	0					
ANR	2432844	Identifier	swipeBuf		2432311	1					
ANR	2432845	Identifier	swipeBuf_size		2432311	1					
ANR	2432846	CompoundStatement		104:57:3757:3757	2432311	1					
ANR	2432847	ExpressionStatement	"gs_free ( pdev -> memory , ( char * ) swipeBuf , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"	249:12:9467:9552	2432311	0	True				
ANR	2432848	CallExpression	"gs_free ( pdev -> memory , ( char * ) swipeBuf , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	0					
ANR	2432849	Callee	gs_free		2432311	0					
ANR	2432850	Identifier	gs_free		2432311	0					
ANR	2432851	ArgumentList	pdev -> memory		2432311	1					
ANR	2432852	Argument	pdev -> memory		2432311	0					
ANR	2432853	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2432854	Identifier	pdev		2432311	0					
ANR	2432855	Identifier	memory		2432311	1					
ANR	2432856	Argument	( char * ) swipeBuf		2432311	1					
ANR	2432857	CastExpression	( char * ) swipeBuf		2432311	0					
ANR	2432858	CastTarget	char *		2432311	0					
ANR	2432859	Identifier	swipeBuf		2432311	1					
ANR	2432860	Argument	swipeBuf_size		2432311	2					
ANR	2432861	Identifier	swipeBuf_size		2432311	0					
ANR	2432862	Argument	1		2432311	3					
ANR	2432863	PrimaryExpression	1		2432311	0					
ANR	2432864	Argument	"""lxm_print_page(swipeBuf)"""		2432311	4					
ANR	2432865	PrimaryExpression	"""lxm_print_page(swipeBuf)"""		2432311	0					
ANR	2432866	ExpressionStatement	swipeBuf_size *= 2	250:12:9567:9583	2432311	1	True				
ANR	2432867	AssignmentExpression	swipeBuf_size *= 2		2432311	0		*=			
ANR	2432868	Identifier	swipeBuf_size		2432311	0					
ANR	2432869	PrimaryExpression	2		2432311	1					
ANR	2432870	ExpressionStatement	"swipeBuf = ( byte * ) gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"	251:12:9598:9686	2432311	2	True				
ANR	2432871	AssignmentExpression	"swipeBuf = ( byte * ) gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	0		=			
ANR	2432872	Identifier	swipeBuf		2432311	0					
ANR	2432873	CastExpression	"( byte * ) gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	1					
ANR	2432874	CastTarget	byte *		2432311	0					
ANR	2432875	CallExpression	"gs_malloc ( pdev -> memory , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	1					
ANR	2432876	Callee	gs_malloc		2432311	0					
ANR	2432877	Identifier	gs_malloc		2432311	0					
ANR	2432878	ArgumentList	pdev -> memory		2432311	1					
ANR	2432879	Argument	pdev -> memory		2432311	0					
ANR	2432880	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2432881	Identifier	pdev		2432311	0					
ANR	2432882	Identifier	memory		2432311	1					
ANR	2432883	Argument	swipeBuf_size		2432311	1					
ANR	2432884	Identifier	swipeBuf_size		2432311	0					
ANR	2432885	Argument	1		2432311	2					
ANR	2432886	PrimaryExpression	1		2432311	0					
ANR	2432887	Argument	"""lxm_print_page(swipeBuf)"""		2432311	3					
ANR	2432888	PrimaryExpression	"""lxm_print_page(swipeBuf)"""		2432311	0					
ANR	2432889	IfStatement	if ( swipeBuf == 0 )		2432311	3					
ANR	2432890	Condition	swipeBuf == 0	252:16:9705:9717	2432311	0	True				
ANR	2432891	EqualityExpression	swipeBuf == 0		2432311	0		==			
ANR	2432892	Identifier	swipeBuf		2432311	0					
ANR	2432893	PrimaryExpression	0		2432311	1					
ANR	2432894	GotoStatement	goto quit_ignomiously ;	252:31:9720:9741	2432311	1	True				
ANR	2432895	Identifier	quit_ignomiously		2432311	0					
ANR	2432896	BreakStatement	break ;	253:12:9756:9761	2432311	4	True				
ANR	2432897	ElseStatement	else		2432311	0					
ANR	2432898	Statement	*	254:13:9778:9778	2432311	0	True				
ANR	2432899	Statement	outp	254:14:9779:9782	2432311	22	True				
ANR	2432900	Statement	++	254:18:9783:9784	2432311	23	True				
ANR	2432901	Statement	=	254:21:9786:9786	2432311	24	True				
ANR	2432902	Statement	(	254:23:9788:9788	2432311	25	True				
ANR	2432903	Statement	x	254:24:9789:9789	2432311	26	True				
ANR	2432904	Statement	)	254:25:9790:9790	2432311	27	True				
ANR	2432905	CompoundStatement		120:16:4370:4391	2432311	28					
ANR	2432906	IdentifierDeclStatement	"int sx , sxBy8 , sxMask ;"	258:16:9871:9892	2432311	0	True				
ANR	2432907	IdentifierDecl	sx		2432311	0					
ANR	2432908	IdentifierDeclType	int		2432311	0					
ANR	2432909	Identifier	sx		2432311	1					
ANR	2432910	IdentifierDecl	sxBy8		2432311	1					
ANR	2432911	IdentifierDeclType	int		2432311	0					
ANR	2432912	Identifier	sxBy8		2432311	1					
ANR	2432913	IdentifierDecl	sxMask		2432311	2					
ANR	2432914	IdentifierDeclType	int		2432311	0					
ANR	2432915	Identifier	sxMask		2432311	1					
ANR	2432916	IdentifierDeclStatement	int words [ directorySize ] ;	259:16:9910:9934	2432311	1	True				
ANR	2432917	IdentifierDecl	words [ directorySize ]		2432311	0					
ANR	2432918	IdentifierDeclType	int [ directorySize ]		2432311	0					
ANR	2432919	Identifier	words		2432311	1					
ANR	2432920	Identifier	directorySize		2432311	2					
ANR	2432921	IdentifierDeclStatement	"bool f , sum ;"	260:16:9952:9963	2432311	2	True				
ANR	2432922	IdentifierDecl	f		2432311	0					
ANR	2432923	IdentifierDeclType	bool		2432311	0					
ANR	2432924	Identifier	f		2432311	1					
ANR	2432925	IdentifierDecl	sum		2432311	1					
ANR	2432926	IdentifierDeclType	bool		2432311	0					
ANR	2432927	Identifier	sum		2432311	1					
ANR	2432928	IdentifierDeclStatement	int retval = 0 ;	261:16:9981:9993	2432311	3	True				
ANR	2432929	IdentifierDecl	retval = 0		2432311	0					
ANR	2432930	IdentifierDeclType	int		2432311	0					
ANR	2432931	Identifier	retval		2432311	1					
ANR	2432932	AssignmentExpression	retval = 0		2432311	2		=			
ANR	2432933	Identifier	retval		2432311	0					
ANR	2432934	PrimaryExpression	0		2432311	1					
ANR	2432935	IdentifierDeclStatement	"int j , c , y ;"	262:16:10011:10020	2432311	4	True				
ANR	2432936	IdentifierDecl	j		2432311	0					
ANR	2432937	IdentifierDeclType	int		2432311	0					
ANR	2432938	Identifier	j		2432311	1					
ANR	2432939	IdentifierDecl	c		2432311	1					
ANR	2432940	IdentifierDeclType	int		2432311	0					
ANR	2432941	Identifier	c		2432311	1					
ANR	2432942	IdentifierDecl	y		2432311	2					
ANR	2432943	IdentifierDeclType	int		2432311	0					
ANR	2432944	Identifier	y		2432311	1					
ANR	2432945	IdentifierDeclStatement	"int j1 , c1 ;"	263:16:10038:10047	2432311	5	True				
ANR	2432946	IdentifierDecl	j1		2432311	0					
ANR	2432947	IdentifierDeclType	int		2432311	0					
ANR	2432948	Identifier	j1		2432311	1					
ANR	2432949	IdentifierDecl	c1		2432311	1					
ANR	2432950	IdentifierDeclType	int		2432311	0					
ANR	2432951	Identifier	c1		2432311	1					
ANR	2432952	IdentifierDeclStatement	"int i , b , x , directory ;"	264:16:10065:10086	2432311	6	True				
ANR	2432953	IdentifierDecl	i		2432311	0					
ANR	2432954	IdentifierDeclType	int		2432311	0					
ANR	2432955	Identifier	i		2432311	1					
ANR	2432956	IdentifierDecl	b		2432311	1					
ANR	2432957	IdentifierDeclType	int		2432311	0					
ANR	2432958	Identifier	b		2432311	1					
ANR	2432959	IdentifierDecl	x		2432311	2					
ANR	2432960	IdentifierDeclType	int		2432311	0					
ANR	2432961	Identifier	x		2432311	1					
ANR	2432962	IdentifierDecl	directory		2432311	3					
ANR	2432963	IdentifierDeclType	int		2432311	0					
ANR	2432964	Identifier	directory		2432311	1					
ANR	2432965	ForStatement	for ( x = leastX ; x <= highestX ; x ++ )		2432311	7					
ANR	2432966	ForInit	x = leastX ;	269:21:10262:10270	2432311	0	True				
ANR	2432967	AssignmentExpression	x = leastX		2432311	0		=			
ANR	2432968	Identifier	x		2432311	0					
ANR	2432969	Identifier	leastX		2432311	1					
ANR	2432970	Condition	x <= highestX	269:31:10272:10282	2432311	1	True				
ANR	2432971	RelationalExpression	x <= highestX		2432311	0		<=			
ANR	2432972	Identifier	x		2432311	0					
ANR	2432973	Identifier	highestX		2432311	1					
ANR	2432974	PostIncDecOperationExpression	x ++	269:44:10285:10287	2432311	2	True				
ANR	2432975	Identifier	x		2432311	0					
ANR	2432976	IncDec	++		2432311	1					
ANR	2432977	CompoundStatement		125:49:4595:4595	2432311	3					
ANR	2432978	ForStatement	for ( i = 0 ; i < directorySize ; i ++ )		2432311	0					
ANR	2432979	ForInit	i = 0 ;	270:25:10317:10320	2432311	0	True				
ANR	2432980	AssignmentExpression	i = 0		2432311	0		=			
ANR	2432981	Identifier	i		2432311	0					
ANR	2432982	PrimaryExpression	0		2432311	1					
ANR	2432983	Condition	i < directorySize	270:30:10322:10336	2432311	1	True				
ANR	2432984	RelationalExpression	i < directorySize		2432311	0		<			
ANR	2432985	Identifier	i		2432311	0					
ANR	2432986	Identifier	directorySize		2432311	1					
ANR	2432987	PostIncDecOperationExpression	i ++	270:47:10339:10341	2432311	2	True				
ANR	2432988	Identifier	i		2432311	0					
ANR	2432989	IncDec	++		2432311	1					
ANR	2432990	CompoundStatement		126:52:4649:4649	2432311	3					
ANR	2432991	ExpressionStatement	words [ i ] = 0	271:24:10370:10382	2432311	0	True				
ANR	2432992	AssignmentExpression	words [ i ] = 0		2432311	0		=			
ANR	2432993	ArrayIndexing	words [ i ]		2432311	0					
ANR	2432994	Identifier	words		2432311	0					
ANR	2432995	Identifier	i		2432311	1					
ANR	2432996	PrimaryExpression	0		2432311	1					
ANR	2432997	ExpressionStatement	directory = 0x2000	273:20:10426:10444	2432311	1	True				
ANR	2432998	AssignmentExpression	directory = 0x2000		2432311	0		=			
ANR	2432999	Identifier	directory		2432311	0					
ANR	2433000	PrimaryExpression	0x2000		2432311	1					
ANR	2433001	SwitchStatement	switch ( direction )		2432311	2					
ANR	2433002	Condition	direction	276:28:10563:10571	2432311	0	True				
ANR	2433003	Identifier	direction		2432311	0					
ANR	2433004	CompoundStatement		132:39:4879:4879	2432311	1					
ANR	2433005	Statement	case	277:20:10596:10599	2432311	0	True				
ANR	2433006	Statement	(	277:24:10600:10600	2432311	1	True				
ANR	2433007	Statement	RIGHTWARD	277:25:10601:10609	2432311	2	True				
ANR	2433008	Statement	)	277:34:10610:10610	2432311	3	True				
ANR	2433009	Statement	:	277:35:10611:10611	2432311	4	True				
ANR	2433010	ExpressionStatement	sx = ( x & 1 ) == 1 ? x : x - ( ( ( lxm_device * ) pdev ) -> headSeparation )	278:24:10637:10696	2432311	5	True				
ANR	2433011	AssignmentExpression	sx = ( x & 1 ) == 1 ? x : x - ( ( ( lxm_device * ) pdev ) -> headSeparation )		2432311	0		=			
ANR	2433012	Identifier	sx		2432311	0					
ANR	2433013	ConditionalExpression	( x & 1 ) == 1 ? x : x - ( ( ( lxm_device * ) pdev ) -> headSeparation )		2432311	1					
ANR	2433014	Condition	( x & 1 ) == 1		2432311	0					
ANR	2433015	EqualityExpression	( x & 1 ) == 1		2432311	0		==			
ANR	2433016	BitAndExpression	x & 1		2432311	0		&			
ANR	2433017	Identifier	x		2432311	0					
ANR	2433018	PrimaryExpression	1		2432311	1					
ANR	2433019	PrimaryExpression	1		2432311	1					
ANR	2433020	Identifier	x		2432311	1					
ANR	2433021	AdditiveExpression	x - ( ( ( lxm_device * ) pdev ) -> headSeparation )		2432311	2		-			
ANR	2433022	Identifier	x		2432311	0					
ANR	2433023	PtrMemberAccess	( ( lxm_device * ) pdev ) -> headSeparation		2432311	1					
ANR	2433024	CastExpression	( lxm_device * ) pdev		2432311	0					
ANR	2433025	CastTarget	lxm_device *		2432311	0					
ANR	2433026	Identifier	pdev		2432311	1					
ANR	2433027	Identifier	headSeparation		2432311	1					
ANR	2433028	ExpressionStatement	j1 = ( x & 1 )	279:24:10722:10732	2432311	6	True				
ANR	2433029	AssignmentExpression	j1 = ( x & 1 )		2432311	0		=			
ANR	2433030	Identifier	j1		2432311	0					
ANR	2433031	BitAndExpression	x & 1		2432311	1		&			
ANR	2433032	Identifier	x		2432311	0					
ANR	2433033	PrimaryExpression	1		2432311	1					
ANR	2433034	BreakStatement	break ;	280:24:10793:10798	2432311	7	True				
ANR	2433035	Label	default :	281:20:10820:10827	2432311	8	True				
ANR	2433036	Identifier	default		2432311	0					
ANR	2433037	Statement	case	282:20:10899:10902	2432311	9	True				
ANR	2433038	Statement	(	282:24:10903:10903	2432311	10	True				
ANR	2433039	Statement	LEFTWARD	282:25:10904:10911	2432311	11	True				
ANR	2433040	Statement	)	282:33:10912:10912	2432311	12	True				
ANR	2433041	Statement	:	282:34:10913:10913	2432311	13	True				
ANR	2433042	ExpressionStatement	sx = ( x & 1 ) == 0 ? x : x - ( ( lxm_device * ) pdev ) -> headSeparation	283:24:10939:10996	2432311	14	True				
ANR	2433043	AssignmentExpression	sx = ( x & 1 ) == 0 ? x : x - ( ( lxm_device * ) pdev ) -> headSeparation		2432311	0		=			
ANR	2433044	Identifier	sx		2432311	0					
ANR	2433045	ConditionalExpression	( x & 1 ) == 0 ? x : x - ( ( lxm_device * ) pdev ) -> headSeparation		2432311	1					
ANR	2433046	Condition	( x & 1 ) == 0		2432311	0					
ANR	2433047	EqualityExpression	( x & 1 ) == 0		2432311	0		==			
ANR	2433048	BitAndExpression	x & 1		2432311	0		&			
ANR	2433049	Identifier	x		2432311	0					
ANR	2433050	PrimaryExpression	1		2432311	1					
ANR	2433051	PrimaryExpression	0		2432311	1					
ANR	2433052	Identifier	x		2432311	1					
ANR	2433053	AdditiveExpression	x - ( ( lxm_device * ) pdev ) -> headSeparation		2432311	2		-			
ANR	2433054	Identifier	x		2432311	0					
ANR	2433055	PtrMemberAccess	( ( lxm_device * ) pdev ) -> headSeparation		2432311	1					
ANR	2433056	CastExpression	( lxm_device * ) pdev		2432311	0					
ANR	2433057	CastTarget	lxm_device *		2432311	0					
ANR	2433058	Identifier	pdev		2432311	1					
ANR	2433059	Identifier	headSeparation		2432311	1					
ANR	2433060	ExpressionStatement	j1 = 1 - ( x & 1 )	284:24:11022:11034	2432311	15	True				
ANR	2433061	AssignmentExpression	j1 = 1 - ( x & 1 )		2432311	0		=			
ANR	2433062	Identifier	j1		2432311	0					
ANR	2433063	AdditiveExpression	1 - ( x & 1 )		2432311	1		-			
ANR	2433064	PrimaryExpression	1		2432311	0					
ANR	2433065	BitAndExpression	x & 1		2432311	1		&			
ANR	2433066	Identifier	x		2432311	0					
ANR	2433067	PrimaryExpression	1		2432311	1					
ANR	2433068	ExpressionStatement	c1 = 0x8000 >> j1	286:20:11113:11130	2432311	3	True				
ANR	2433069	AssignmentExpression	c1 = 0x8000 >> j1		2432311	0		=			
ANR	2433070	Identifier	c1		2432311	0					
ANR	2433071	ShiftExpression	0x8000 >> j1		2432311	1		>>			
ANR	2433072	PrimaryExpression	0x8000		2432311	0					
ANR	2433073	Identifier	j1		2432311	1					
ANR	2433074	ExpressionStatement	sxBy8 = sx / 8	288:20:11153:11165	2432311	4	True				
ANR	2433075	AssignmentExpression	sxBy8 = sx / 8		2432311	0		=			
ANR	2433076	Identifier	sxBy8		2432311	0					
ANR	2433077	MultiplicativeExpression	sx / 8		2432311	1		/			
ANR	2433078	Identifier	sx		2432311	0					
ANR	2433079	PrimaryExpression	8		2432311	1					
ANR	2433080	ExpressionStatement	sxMask = 0x80 >> ( sx % 8 )	289:20:11187:11208	2432311	5	True				
ANR	2433081	AssignmentExpression	sxMask = 0x80 >> ( sx % 8 )		2432311	0		=			
ANR	2433082	Identifier	sxMask		2432311	0					
ANR	2433083	ShiftExpression	0x80 >> ( sx % 8 )		2432311	1		>>			
ANR	2433084	PrimaryExpression	0x80		2432311	0					
ANR	2433085	MultiplicativeExpression	sx % 8		2432311	1		%			
ANR	2433086	Identifier	sx		2432311	0					
ANR	2433087	PrimaryExpression	8		2432311	1					
ANR	2433088	ForStatement	"for ( i = 0 , b = 1 , y = sxBy8 + j1 * line_size ; i < directorySize ; i ++ , b <<= 1 )"		2432311	6					
ANR	2433089	ForInit	"i = 0 , b = 1 , y = sxBy8 + j1 * line_size ;"	292:25:11315:11348	2432311	0	True				
ANR	2433090	Expression	"i = 0 , b = 1 , y = sxBy8 + j1 * line_size"		2432311	0					
ANR	2433091	AssignmentExpression	i = 0		2432311	0		=			
ANR	2433092	Identifier	i		2432311	0					
ANR	2433093	PrimaryExpression	0		2432311	1					
ANR	2433094	Expression	"b = 1 , y = sxBy8 + j1 * line_size"		2432311	1					
ANR	2433095	AssignmentExpression	b = 1		2432311	0		=			
ANR	2433096	Identifier	b		2432311	0					
ANR	2433097	PrimaryExpression	1		2432311	1					
ANR	2433098	AssignmentExpression	y = sxBy8 + j1 * line_size		2432311	1		=			
ANR	2433099	Identifier	y		2432311	0					
ANR	2433100	AdditiveExpression	sxBy8 + j1 * line_size		2432311	1		+			
ANR	2433101	Identifier	sxBy8		2432311	0					
ANR	2433102	MultiplicativeExpression	j1 * line_size		2432311	1		*			
ANR	2433103	Identifier	j1		2432311	0					
ANR	2433104	Identifier	line_size		2432311	1					
ANR	2433105	Condition	i < directorySize	292:60:11350:11366	2432311	1	True				
ANR	2433106	RelationalExpression	i < directorySize		2432311	0		<			
ANR	2433107	Identifier	i		2432311	0					
ANR	2433108	Identifier	directorySize		2432311	1					
ANR	2433109	Expression	"i ++ , b <<= 1"	292:79:11369:11377	2432311	2	True				
ANR	2433110	PostIncDecOperationExpression	i ++		2432311	0					
ANR	2433111	Identifier	i		2432311	0					
ANR	2433112	IncDec	++		2432311	1					
ANR	2433113	AssignmentExpression	b <<= 1		2432311	1		<<=			
ANR	2433114	Identifier	b		2432311	0					
ANR	2433115	PrimaryExpression	1		2432311	1					
ANR	2433116	CompoundStatement		148:90:5685:5685	2432311	3					
ANR	2433117	ExpressionStatement	sum = false	293:24:11406:11417	2432311	0	True				
ANR	2433118	AssignmentExpression	sum = false		2432311	0		=			
ANR	2433119	Identifier	sum		2432311	0					
ANR	2433120	Identifier	false		2432311	1					
ANR	2433121	ForStatement	"for ( j = j1 , c = c1 ; j < 16 ; j += 2 , y += 2 * line_size , c >>= 2 )"		2432311	1					
ANR	2433122	ForInit	"j = j1 , c = c1 ;"	294:29:11448:11485	2432311	0	True				
ANR	2433123	Expression	"j = j1 , c = c1"		2432311	0					
ANR	2433124	AssignmentExpression	j = j1		2432311	0		=			
ANR	2433125	Identifier	j		2432311	0					
ANR	2433126	Identifier	j1		2432311	1					
ANR	2433127	AssignmentExpression	c = c1		2432311	1		=			
ANR	2433128	Identifier	c		2432311	0					
ANR	2433129	Identifier	c1		2432311	1					
ANR	2433130	Condition	j < 16	294:68:11487:11490	2432311	1	True				
ANR	2433131	RelationalExpression	j < 16		2432311	0		<			
ANR	2433132	Identifier	j		2432311	0					
ANR	2433133	PrimaryExpression	16		2432311	1					
ANR	2433134	Expression	"j += 2 , y += 2 * line_size , c >>= 2"	294:74:11493:11519	2432311	2	True				
ANR	2433135	AssignmentExpression	j += 2		2432311	0		+=			
ANR	2433136	Identifier	j		2432311	0					
ANR	2433137	PrimaryExpression	2		2432311	1					
ANR	2433138	Expression	"y += 2 * line_size , c >>= 2"		2432311	1					
ANR	2433139	AssignmentExpression	y += 2 * line_size		2432311	0		+=			
ANR	2433140	Identifier	y		2432311	0					
ANR	2433141	MultiplicativeExpression	2 * line_size		2432311	1		*			
ANR	2433142	PrimaryExpression	2		2432311	0					
ANR	2433143	Identifier	line_size		2432311	1					
ANR	2433144	AssignmentExpression	c >>= 2		2432311	1		>>=			
ANR	2433145	Identifier	c		2432311	0					
ANR	2433146	PrimaryExpression	2		2432311	1					
ANR	2433147	CompoundStatement		150:103:5827:5827	2432311	3					
ANR	2433148	ExpressionStatement	f = ( in [ y ] & sxMask )	295:28:11552:11570	2432311	0	True				
ANR	2433149	AssignmentExpression	f = ( in [ y ] & sxMask )		2432311	0		=			
ANR	2433150	Identifier	f		2432311	0					
ANR	2433151	BitAndExpression	in [ y ] & sxMask		2432311	1		&			
ANR	2433152	ArrayIndexing	in [ y ]		2432311	0					
ANR	2433153	Identifier	in		2432311	0					
ANR	2433154	Identifier	y		2432311	1					
ANR	2433155	Identifier	sxMask		2432311	1					
ANR	2433156	IfStatement	if ( f )		2432311	1					
ANR	2433157	Condition	f	296:32:11604:11604	2432311	0	True				
ANR	2433158	Identifier	f		2432311	0					
ANR	2433159	CompoundStatement		152:35:5912:5912	2432311	1					
ANR	2433160	ExpressionStatement	words [ i ] |= c	297:32:11641:11654	2432311	0	True				
ANR	2433161	AssignmentExpression	words [ i ] |= c		2432311	0		|=			
ANR	2433162	ArrayIndexing	words [ i ]		2432311	0					
ANR	2433163	Identifier	words		2432311	0					
ANR	2433164	Identifier	i		2432311	1					
ANR	2433165	Identifier	c		2432311	1					
ANR	2433166	ExpressionStatement	sum |= f	298:32:11688:11696	2432311	1	True				
ANR	2433167	AssignmentExpression	sum |= f		2432311	0		|=			
ANR	2433168	Identifier	sum		2432311	0					
ANR	2433169	Identifier	f		2432311	1					
ANR	2433170	IfStatement	if ( ! sum )		2432311	2					
ANR	2433171	Condition	! sum	301:28:11782:11785	2432311	0	True				
ANR	2433172	UnaryOperationExpression	! sum		2432311	0					
ANR	2433173	UnaryOperator	!		2432311	0					
ANR	2433174	Identifier	sum		2432311	1					
ANR	2433175	ExpressionStatement	directory |= b	301:34:11788:11801	2432311	1	True				
ANR	2433176	AssignmentExpression	directory |= b		2432311	0		|=			
ANR	2433177	Identifier	directory		2432311	0					
ANR	2433178	Identifier	b		2432311	1					
ANR	2433179	ExpressionStatement	retval += 2	303:20:11845:11854	2432311	7	True				
ANR	2433180	AssignmentExpression	retval += 2		2432311	0		+=			
ANR	2433181	Identifier	retval		2432311	0					
ANR	2433182	PrimaryExpression	2		2432311	1					
ANR	2433183	ExpressionStatement	buffer_store ( directory >> 8 )	304:20:11876:11902	2432311	8	True				
ANR	2433184	CallExpression	buffer_store ( directory >> 8 )		2432311	0					
ANR	2433185	Callee	buffer_store		2432311	0					
ANR	2433186	Identifier	buffer_store		2432311	0					
ANR	2433187	ArgumentList	directory >> 8		2432311	1					
ANR	2433188	Argument	directory >> 8		2432311	0					
ANR	2433189	ShiftExpression	directory >> 8		2432311	0		>>			
ANR	2433190	Identifier	directory		2432311	0					
ANR	2433191	PrimaryExpression	8		2432311	1					
ANR	2433192	ExpressionStatement	buffer_store ( directory & 0xff )	304:48:11904:11932	2432311	9	True				
ANR	2433193	CallExpression	buffer_store ( directory & 0xff )		2432311	0					
ANR	2433194	Callee	buffer_store		2432311	0					
ANR	2433195	Identifier	buffer_store		2432311	0					
ANR	2433196	ArgumentList	directory & 0xff		2432311	1					
ANR	2433197	Argument	directory & 0xff		2432311	0					
ANR	2433198	BitAndExpression	directory & 0xff		2432311	0		&			
ANR	2433199	Identifier	directory		2432311	0					
ANR	2433200	PrimaryExpression	0xff		2432311	1					
ANR	2433201	IfStatement	if ( directory != 0x3fff )		2432311	10					
ANR	2433202	Condition	directory != 0x3fff	305:24:11958:11976	2432311	0	True				
ANR	2433203	EqualityExpression	directory != 0x3fff		2432311	0		!=			
ANR	2433204	Identifier	directory		2432311	0					
ANR	2433205	PrimaryExpression	0x3fff		2432311	1					
ANR	2433206	CompoundStatement		161:45:6284:6284	2432311	1					
ANR	2433207	ForStatement	for ( i = 0 ; i < directorySize ; i ++ )		2432311	0					
ANR	2433208	ForInit	i = 0 ;	306:29:12010:12013	2432311	0	True				
ANR	2433209	AssignmentExpression	i = 0		2432311	0		=			
ANR	2433210	Identifier	i		2432311	0					
ANR	2433211	PrimaryExpression	0		2432311	1					
ANR	2433212	Condition	i < directorySize	306:34:12015:12029	2432311	1	True				
ANR	2433213	RelationalExpression	i < directorySize		2432311	0		<			
ANR	2433214	Identifier	i		2432311	0					
ANR	2433215	Identifier	directorySize		2432311	1					
ANR	2433216	PostIncDecOperationExpression	i ++	306:51:12032:12034	2432311	2	True				
ANR	2433217	Identifier	i		2432311	0					
ANR	2433218	IncDec	++		2432311	1					
ANR	2433219	CompoundStatement		162:56:6342:6342	2432311	3					
ANR	2433220	IfStatement	if ( words [ i ] != 0 )		2432311	0					
ANR	2433221	Condition	words [ i ] != 0	307:32:12071:12082	2432311	0	True				
ANR	2433222	EqualityExpression	words [ i ] != 0		2432311	0		!=			
ANR	2433223	ArrayIndexing	words [ i ]		2432311	0					
ANR	2433224	Identifier	words		2432311	0					
ANR	2433225	Identifier	i		2432311	1					
ANR	2433226	PrimaryExpression	0		2432311	1					
ANR	2433227	CompoundStatement		163:46:6390:6390	2432311	1					
ANR	2433228	ExpressionStatement	buffer_store ( words [ i ] >> 8 )	308:32:12119:12145	2432311	0	True				
ANR	2433229	CallExpression	buffer_store ( words [ i ] >> 8 )		2432311	0					
ANR	2433230	Callee	buffer_store		2432311	0					
ANR	2433231	Identifier	buffer_store		2432311	0					
ANR	2433232	ArgumentList	words [ i ] >> 8		2432311	1					
ANR	2433233	Argument	words [ i ] >> 8		2432311	0					
ANR	2433234	ShiftExpression	words [ i ] >> 8		2432311	0		>>			
ANR	2433235	ArrayIndexing	words [ i ]		2432311	0					
ANR	2433236	Identifier	words		2432311	0					
ANR	2433237	Identifier	i		2432311	1					
ANR	2433238	PrimaryExpression	8		2432311	1					
ANR	2433239	ExpressionStatement	buffer_store ( words [ i ] & 0xff )	308:60:12147:12174	2432311	1	True				
ANR	2433240	CallExpression	buffer_store ( words [ i ] & 0xff )		2432311	0					
ANR	2433241	Callee	buffer_store		2432311	0					
ANR	2433242	Identifier	buffer_store		2432311	0					
ANR	2433243	ArgumentList	words [ i ] & 0xff		2432311	1					
ANR	2433244	Argument	words [ i ] & 0xff		2432311	0					
ANR	2433245	BitAndExpression	words [ i ] & 0xff		2432311	0		&			
ANR	2433246	ArrayIndexing	words [ i ]		2432311	0					
ANR	2433247	Identifier	words		2432311	0					
ANR	2433248	Identifier	i		2432311	1					
ANR	2433249	PrimaryExpression	0xff		2432311	1					
ANR	2433250	ExpressionStatement	retval += 2	309:32:12208:12219	2432311	2	True				
ANR	2433251	AssignmentExpression	retval += 2		2432311	0		+=			
ANR	2433252	Identifier	retval		2432311	0					
ANR	2433253	PrimaryExpression	2		2432311	1					
ANR	2433254	Statement	undef	314:1:12318:12322	2432311	8	True				
ANR	2433255	Statement	buffer_store	314:7:12324:12335	2432311	9	True				
ANR	2433256	CompoundStatement		179:12:6893:6924	2432311	29					
ANR	2433257	IdentifierDeclStatement	int leastY = lnum ;	317:12:12419:12436	2432311	0	True				
ANR	2433258	IdentifierDecl	leastY = lnum		2432311	0					
ANR	2433259	IdentifierDeclType	int		2432311	0					
ANR	2433260	Identifier	leastY		2432311	1					
ANR	2433261	AssignmentExpression	leastY = lnum		2432311	2		=			
ANR	2433262	Identifier	lnum		2432311	0					
ANR	2433263	Identifier	lnum		2432311	1					
ANR	2433264	IdentifierDeclStatement	int sz = 0x1a + outp - swipeBuf ;	320:12:12510:12541	2432311	1	True				
ANR	2433265	IdentifierDecl	sz = 0x1a + outp - swipeBuf		2432311	0					
ANR	2433266	IdentifierDeclType	int		2432311	0					
ANR	2433267	Identifier	sz		2432311	1					
ANR	2433268	AssignmentExpression	sz = 0x1a + outp - swipeBuf		2432311	2		=			
ANR	2433269	Identifier	sz		2432311	0					
ANR	2433270	AdditiveExpression	0x1a + outp - swipeBuf		2432311	1		+			
ANR	2433271	PrimaryExpression	0x1a		2432311	0					
ANR	2433272	AdditiveExpression	outp - swipeBuf		2432311	1		-			
ANR	2433273	Identifier	outp		2432311	0					
ANR	2433274	Identifier	swipeBuf		2432311	1					
ANR	2433275	IdentifierDeclStatement	int deltaY = 2 * ( leastY - lastY ) ;	323:12:12588:12619	2432311	2	True				
ANR	2433276	IdentifierDecl	deltaY = 2 * ( leastY - lastY )		2432311	0					
ANR	2433277	IdentifierDeclType	int		2432311	0					
ANR	2433278	Identifier	deltaY		2432311	1					
ANR	2433279	AssignmentExpression	deltaY = 2 * ( leastY - lastY )		2432311	2		=			
ANR	2433280	Identifier	deltaY		2432311	0					
ANR	2433281	MultiplicativeExpression	2 * ( leastY - lastY )		2432311	1		*			
ANR	2433282	PrimaryExpression	2		2432311	0					
ANR	2433283	AdditiveExpression	leastY - lastY		2432311	1		-			
ANR	2433284	Identifier	leastY		2432311	0					
ANR	2433285	Identifier	lastY		2432311	1					
ANR	2433286	ExpressionStatement	lastY = leastY	324:12:12675:12689	2432311	3	True				
ANR	2433287	AssignmentExpression	lastY = leastY		2432311	0		=			
ANR	2433288	Identifier	lastY		2432311	0					
ANR	2433289	Identifier	leastY		2432311	1					
ANR	2433290	ExpressionStatement	outByte ( 0x1b )	325:12:12703:12716	2432311	4	True				
ANR	2433291	CallExpression	outByte ( 0x1b )		2432311	0					
ANR	2433292	Callee	outByte		2432311	0					
ANR	2433293	Identifier	outByte		2432311	0					
ANR	2433294	ArgumentList	0x1b		2432311	1					
ANR	2433295	Argument	0x1b		2432311	0					
ANR	2433296	PrimaryExpression	0x1b		2432311	0					
ANR	2433297	ExpressionStatement	outByte ( '*' )	325:27:12718:12730	2432311	5	True				
ANR	2433298	CallExpression	outByte ( '*' )		2432311	0					
ANR	2433299	Callee	outByte		2432311	0					
ANR	2433300	Identifier	outByte		2432311	0					
ANR	2433301	ArgumentList	'*'		2432311	1					
ANR	2433302	Argument	'*'		2432311	0					
ANR	2433303	PrimaryExpression	'*'		2432311	0					
ANR	2433304	ExpressionStatement	outByte ( 3 )	325:41:12732:12742	2432311	6	True				
ANR	2433305	CallExpression	outByte ( 3 )		2432311	0					
ANR	2433306	Callee	outByte		2432311	0					
ANR	2433307	Identifier	outByte		2432311	0					
ANR	2433308	ArgumentList	3		2432311	1					
ANR	2433309	Argument	3		2432311	0					
ANR	2433310	PrimaryExpression	3		2432311	0					
ANR	2433311	ExpressionStatement	outByte ( deltaY >> 8 )	326:12:12756:12774	2432311	7	True				
ANR	2433312	CallExpression	outByte ( deltaY >> 8 )		2432311	0					
ANR	2433313	Callee	outByte		2432311	0					
ANR	2433314	Identifier	outByte		2432311	0					
ANR	2433315	ArgumentList	deltaY >> 8		2432311	1					
ANR	2433316	Argument	deltaY >> 8		2432311	0					
ANR	2433317	ShiftExpression	deltaY >> 8		2432311	0		>>			
ANR	2433318	Identifier	deltaY		2432311	0					
ANR	2433319	PrimaryExpression	8		2432311	1					
ANR	2433320	ExpressionStatement	outByte ( deltaY & 0xff )	326:32:12776:12796	2432311	8	True				
ANR	2433321	CallExpression	outByte ( deltaY & 0xff )		2432311	0					
ANR	2433322	Callee	outByte		2432311	0					
ANR	2433323	Identifier	outByte		2432311	0					
ANR	2433324	ArgumentList	deltaY & 0xff		2432311	1					
ANR	2433325	Argument	deltaY & 0xff		2432311	0					
ANR	2433326	BitAndExpression	deltaY & 0xff		2432311	0		&			
ANR	2433327	Identifier	deltaY		2432311	0					
ANR	2433328	PrimaryExpression	0xff		2432311	1					
ANR	2433329	ExpressionStatement	outByte ( 0x1b )	327:12:12810:12823	2432311	9	True				
ANR	2433330	CallExpression	outByte ( 0x1b )		2432311	0					
ANR	2433331	Callee	outByte		2432311	0					
ANR	2433332	Identifier	outByte		2432311	0					
ANR	2433333	ArgumentList	0x1b		2432311	1					
ANR	2433334	Argument	0x1b		2432311	0					
ANR	2433335	PrimaryExpression	0x1b		2432311	0					
ANR	2433336	ExpressionStatement	outByte ( '*' )	327:27:12825:12837	2432311	10	True				
ANR	2433337	CallExpression	outByte ( '*' )		2432311	0					
ANR	2433338	Callee	outByte		2432311	0					
ANR	2433339	Identifier	outByte		2432311	0					
ANR	2433340	ArgumentList	'*'		2432311	1					
ANR	2433341	Argument	'*'		2432311	0					
ANR	2433342	PrimaryExpression	'*'		2432311	0					
ANR	2433343	ExpressionStatement	outByte ( 4 )	327:41:12839:12849	2432311	11	True				
ANR	2433344	CallExpression	outByte ( 4 )		2432311	0					
ANR	2433345	Callee	outByte		2432311	0					
ANR	2433346	Identifier	outByte		2432311	0					
ANR	2433347	ArgumentList	4		2432311	1					
ANR	2433348	Argument	4		2432311	0					
ANR	2433349	PrimaryExpression	4		2432311	0					
ANR	2433350	ExpressionStatement	outByte ( 0 )	327:53:12851:12861	2432311	12	True				
ANR	2433351	CallExpression	outByte ( 0 )		2432311	0					
ANR	2433352	Callee	outByte		2432311	0					
ANR	2433353	Identifier	outByte		2432311	0					
ANR	2433354	ArgumentList	0		2432311	1					
ANR	2433355	Argument	0		2432311	0					
ANR	2433356	PrimaryExpression	0		2432311	0					
ANR	2433357	ExpressionStatement	outByte ( 0 )	327:65:12863:12873	2432311	13	True				
ANR	2433358	CallExpression	outByte ( 0 )		2432311	0					
ANR	2433359	Callee	outByte		2432311	0					
ANR	2433360	Identifier	outByte		2432311	0					
ANR	2433361	ArgumentList	0		2432311	1					
ANR	2433362	Argument	0		2432311	0					
ANR	2433363	PrimaryExpression	0		2432311	0					
ANR	2433364	ExpressionStatement	outByte ( sz >> 8 )	328:12:12887:12901	2432311	14	True				
ANR	2433365	CallExpression	outByte ( sz >> 8 )		2432311	0					
ANR	2433366	Callee	outByte		2432311	0					
ANR	2433367	Identifier	outByte		2432311	0					
ANR	2433368	ArgumentList	sz >> 8		2432311	1					
ANR	2433369	Argument	sz >> 8		2432311	0					
ANR	2433370	ShiftExpression	sz >> 8		2432311	0		>>			
ANR	2433371	Identifier	sz		2432311	0					
ANR	2433372	PrimaryExpression	8		2432311	1					
ANR	2433373	ExpressionStatement	outByte ( sz & 0xff )	328:28:12903:12919	2432311	15	True				
ANR	2433374	CallExpression	outByte ( sz & 0xff )		2432311	0					
ANR	2433375	Callee	outByte		2432311	0					
ANR	2433376	Identifier	outByte		2432311	0					
ANR	2433377	ArgumentList	sz & 0xff		2432311	1					
ANR	2433378	Argument	sz & 0xff		2432311	0					
ANR	2433379	BitAndExpression	sz & 0xff		2432311	0		&			
ANR	2433380	Identifier	sz		2432311	0					
ANR	2433381	PrimaryExpression	0xff		2432311	1					
ANR	2433382	ExpressionStatement	outByte ( 0 )	328:46:12921:12931	2432311	16	True				
ANR	2433383	CallExpression	outByte ( 0 )		2432311	0					
ANR	2433384	Callee	outByte		2432311	0					
ANR	2433385	Identifier	outByte		2432311	0					
ANR	2433386	ArgumentList	0		2432311	1					
ANR	2433387	Argument	0		2432311	0					
ANR	2433388	PrimaryExpression	0		2432311	0					
ANR	2433389	ExpressionStatement	outByte ( 3 )	328:58:12933:12943	2432311	17	True				
ANR	2433390	CallExpression	outByte ( 3 )		2432311	0					
ANR	2433391	Callee	outByte		2432311	0					
ANR	2433392	Identifier	outByte		2432311	0					
ANR	2433393	ArgumentList	3		2432311	1					
ANR	2433394	Argument	3		2432311	0					
ANR	2433395	PrimaryExpression	3		2432311	0					
ANR	2433396	ExpressionStatement	outByte ( 1 )	329:12:12957:12967	2432311	18	True				
ANR	2433397	CallExpression	outByte ( 1 )		2432311	0					
ANR	2433398	Callee	outByte		2432311	0					
ANR	2433399	Identifier	outByte		2432311	0					
ANR	2433400	ArgumentList	1		2432311	1					
ANR	2433401	Argument	1		2432311	0					
ANR	2433402	PrimaryExpression	1		2432311	0					
ANR	2433403	ExpressionStatement	outByte ( 1 )	329:24:12969:12979	2432311	19	True				
ANR	2433404	CallExpression	outByte ( 1 )		2432311	0					
ANR	2433405	Callee	outByte		2432311	0					
ANR	2433406	Identifier	outByte		2432311	0					
ANR	2433407	ArgumentList	1		2432311	1					
ANR	2433408	Argument	1		2432311	0					
ANR	2433409	PrimaryExpression	1		2432311	0					
ANR	2433410	ExpressionStatement	outByte ( 0x1a )	329:36:12981:12994	2432311	20	True				
ANR	2433411	CallExpression	outByte ( 0x1a )		2432311	0					
ANR	2433412	Callee	outByte		2432311	0					
ANR	2433413	Identifier	outByte		2432311	0					
ANR	2433414	ArgumentList	0x1a		2432311	1					
ANR	2433415	Argument	0x1a		2432311	0					
ANR	2433416	PrimaryExpression	0x1a		2432311	0					
ANR	2433417	ExpressionStatement	outByte ( 0 )	330:12:13008:13018	2432311	21	True				
ANR	2433418	CallExpression	outByte ( 0 )		2432311	0					
ANR	2433419	Callee	outByte		2432311	0					
ANR	2433420	Identifier	outByte		2432311	0					
ANR	2433421	ArgumentList	0		2432311	1					
ANR	2433422	Argument	0		2432311	0					
ANR	2433423	PrimaryExpression	0		2432311	0					
ANR	2433424	ExpressionStatement	outByte ( extent >> 8 )	331:12:13032:13050	2432311	22	True				
ANR	2433425	CallExpression	outByte ( extent >> 8 )		2432311	0					
ANR	2433426	Callee	outByte		2432311	0					
ANR	2433427	Identifier	outByte		2432311	0					
ANR	2433428	ArgumentList	extent >> 8		2432311	1					
ANR	2433429	Argument	extent >> 8		2432311	0					
ANR	2433430	ShiftExpression	extent >> 8		2432311	0		>>			
ANR	2433431	Identifier	extent		2432311	0					
ANR	2433432	PrimaryExpression	8		2432311	1					
ANR	2433433	ExpressionStatement	outByte ( extent & 0xff )	331:32:13052:13072	2432311	23	True				
ANR	2433434	CallExpression	outByte ( extent & 0xff )		2432311	0					
ANR	2433435	Callee	outByte		2432311	0					
ANR	2433436	Identifier	outByte		2432311	0					
ANR	2433437	ArgumentList	extent & 0xff		2432311	1					
ANR	2433438	Argument	extent & 0xff		2432311	0					
ANR	2433439	BitAndExpression	extent & 0xff		2432311	0		&			
ANR	2433440	Identifier	extent		2432311	0					
ANR	2433441	PrimaryExpression	0xff		2432311	1					
ANR	2433442	ExpressionStatement	outByte ( leastX >> 8 )	332:12:13086:13104	2432311	24	True				
ANR	2433443	CallExpression	outByte ( leastX >> 8 )		2432311	0					
ANR	2433444	Callee	outByte		2432311	0					
ANR	2433445	Identifier	outByte		2432311	0					
ANR	2433446	ArgumentList	leastX >> 8		2432311	1					
ANR	2433447	Argument	leastX >> 8		2432311	0					
ANR	2433448	ShiftExpression	leastX >> 8		2432311	0		>>			
ANR	2433449	Identifier	leastX		2432311	0					
ANR	2433450	PrimaryExpression	8		2432311	1					
ANR	2433451	ExpressionStatement	outByte ( leastX & 0xff )	332:32:13106:13126	2432311	25	True				
ANR	2433452	CallExpression	outByte ( leastX & 0xff )		2432311	0					
ANR	2433453	Callee	outByte		2432311	0					
ANR	2433454	Identifier	outByte		2432311	0					
ANR	2433455	ArgumentList	leastX & 0xff		2432311	1					
ANR	2433456	Argument	leastX & 0xff		2432311	0					
ANR	2433457	BitAndExpression	leastX & 0xff		2432311	0		&			
ANR	2433458	Identifier	leastX		2432311	0					
ANR	2433459	PrimaryExpression	0xff		2432311	1					
ANR	2433460	ExpressionStatement	outByte ( highestX >> 8 )	333:12:13140:13160	2432311	26	True				
ANR	2433461	CallExpression	outByte ( highestX >> 8 )		2432311	0					
ANR	2433462	Callee	outByte		2432311	0					
ANR	2433463	Identifier	outByte		2432311	0					
ANR	2433464	ArgumentList	highestX >> 8		2432311	1					
ANR	2433465	Argument	highestX >> 8		2432311	0					
ANR	2433466	ShiftExpression	highestX >> 8		2432311	0		>>			
ANR	2433467	Identifier	highestX		2432311	0					
ANR	2433468	PrimaryExpression	8		2432311	1					
ANR	2433469	ExpressionStatement	outByte ( highestX & 0xff )	333:34:13162:13184	2432311	27	True				
ANR	2433470	CallExpression	outByte ( highestX & 0xff )		2432311	0					
ANR	2433471	Callee	outByte		2432311	0					
ANR	2433472	Identifier	outByte		2432311	0					
ANR	2433473	ArgumentList	highestX & 0xff		2432311	1					
ANR	2433474	Argument	highestX & 0xff		2432311	0					
ANR	2433475	BitAndExpression	highestX & 0xff		2432311	0		&			
ANR	2433476	Identifier	highestX		2432311	0					
ANR	2433477	PrimaryExpression	0xff		2432311	1					
ANR	2433478	ExpressionStatement	outByte ( 0 )	334:12:13198:13208	2432311	28	True				
ANR	2433479	CallExpression	outByte ( 0 )		2432311	0					
ANR	2433480	Callee	outByte		2432311	0					
ANR	2433481	Identifier	outByte		2432311	0					
ANR	2433482	ArgumentList	0		2432311	1					
ANR	2433483	Argument	0		2432311	0					
ANR	2433484	PrimaryExpression	0		2432311	0					
ANR	2433485	ExpressionStatement	outByte ( 0 )	334:24:13210:13220	2432311	29	True				
ANR	2433486	CallExpression	outByte ( 0 )		2432311	0					
ANR	2433487	Callee	outByte		2432311	0					
ANR	2433488	Identifier	outByte		2432311	0					
ANR	2433489	ArgumentList	0		2432311	1					
ANR	2433490	Argument	0		2432311	0					
ANR	2433491	PrimaryExpression	0		2432311	0					
ANR	2433492	ExpressionStatement	outByte ( 0x22 )	335:12:13234:13247	2432311	30	True				
ANR	2433493	CallExpression	outByte ( 0x22 )		2432311	0					
ANR	2433494	Callee	outByte		2432311	0					
ANR	2433495	Identifier	outByte		2432311	0					
ANR	2433496	ArgumentList	0x22		2432311	1					
ANR	2433497	Argument	0x22		2432311	0					
ANR	2433498	PrimaryExpression	0x22		2432311	0					
ANR	2433499	ExpressionStatement	outByte ( 0x33 )	335:27:13249:13262	2432311	31	True				
ANR	2433500	CallExpression	outByte ( 0x33 )		2432311	0					
ANR	2433501	Callee	outByte		2432311	0					
ANR	2433502	Identifier	outByte		2432311	0					
ANR	2433503	ArgumentList	0x33		2432311	1					
ANR	2433504	Argument	0x33		2432311	0					
ANR	2433505	PrimaryExpression	0x33		2432311	0					
ANR	2433506	ExpressionStatement	outByte ( 0x44 )	335:42:13264:13277	2432311	32	True				
ANR	2433507	CallExpression	outByte ( 0x44 )		2432311	0					
ANR	2433508	Callee	outByte		2432311	0					
ANR	2433509	Identifier	outByte		2432311	0					
ANR	2433510	ArgumentList	0x44		2432311	1					
ANR	2433511	Argument	0x44		2432311	0					
ANR	2433512	PrimaryExpression	0x44		2432311	0					
ANR	2433513	ExpressionStatement	outByte ( 0x55 )	336:12:13291:13304	2432311	33	True				
ANR	2433514	CallExpression	outByte ( 0x55 )		2432311	0					
ANR	2433515	Callee	outByte		2432311	0					
ANR	2433516	Identifier	outByte		2432311	0					
ANR	2433517	ArgumentList	0x55		2432311	1					
ANR	2433518	Argument	0x55		2432311	0					
ANR	2433519	PrimaryExpression	0x55		2432311	0					
ANR	2433520	ExpressionStatement	outByte ( 1 )	336:27:13306:13316	2432311	34	True				
ANR	2433521	CallExpression	outByte ( 1 )		2432311	0					
ANR	2433522	Callee	outByte		2432311	0					
ANR	2433523	Identifier	outByte		2432311	0					
ANR	2433524	ArgumentList	1		2432311	1					
ANR	2433525	Argument	1		2432311	0					
ANR	2433526	PrimaryExpression	1		2432311	0					
ANR	2433527	ExpressionStatement	"fwrite ( swipeBuf , 1 , outp - swipeBuf , prn_stream )"	338:12:13362:13405	2432311	35	True				
ANR	2433528	CallExpression	"fwrite ( swipeBuf , 1 , outp - swipeBuf , prn_stream )"		2432311	0					
ANR	2433529	Callee	fwrite		2432311	0					
ANR	2433530	Identifier	fwrite		2432311	0					
ANR	2433531	ArgumentList	swipeBuf		2432311	1					
ANR	2433532	Argument	swipeBuf		2432311	0					
ANR	2433533	Identifier	swipeBuf		2432311	0					
ANR	2433534	Argument	1		2432311	1					
ANR	2433535	PrimaryExpression	1		2432311	0					
ANR	2433536	Argument	outp - swipeBuf		2432311	2					
ANR	2433537	AdditiveExpression	outp - swipeBuf		2432311	0		-			
ANR	2433538	Identifier	outp		2432311	0					
ANR	2433539	Identifier	swipeBuf		2432311	1					
ANR	2433540	Argument	prn_stream		2432311	3					
ANR	2433541	Identifier	prn_stream		2432311	0					
ANR	2433542	ExpressionStatement	lnum += overLap	340:12:13429:13444	2432311	30	True				
ANR	2433543	AssignmentExpression	lnum += overLap		2432311	0		+=			
ANR	2433544	Identifier	lnum		2432311	0					
ANR	2433545	Identifier	overLap		2432311	1					
ANR	2433546	ExpressionStatement	direction ^= 1	341:12:13458:13472	2432311	31	True				
ANR	2433547	AssignmentExpression	direction ^= 1		2432311	0		^=			
ANR	2433548	Identifier	direction		2432311	0					
ANR	2433549	PrimaryExpression	1		2432311	1					
ANR	2433550	CompoundStatement		202:15:7909:8120	2432311	12					
ANR	2433551	Statement	static	346:8:13597:13602	2432311	0	True				
ANR	2433552	IdentifierDeclStatement	const char bottom [ ] = { fin ( ) } ;	346:15:13604:13815	2432311	1	True				
ANR	2433553	IdentifierDecl	bottom [ ] = { fin ( ) }		2432311	0					
ANR	2433554	IdentifierDeclType	const char [ ]		2432311	0					
ANR	2433555	Identifier	bottom		2432311	1					
ANR	2433556	AssignmentExpression	bottom [ ] = { fin ( ) }		2432311	2		=			
ANR	2433557	Identifier	bottom		2432311	0					
ANR	2433558	InitializerList	fin ( )		2432311	1					
ANR	2433559	CallExpression	fin ( )		2432311	0					
ANR	2433560	Callee	fin		2432311	0					
ANR	2433561	Identifier	fin		2432311	0					
ANR	2433562	ArgumentList			2432311	1					
ANR	2433563	ExpressionStatement	"fwrite ( bottom , 1 , sizeof ( bottom ) , prn_stream )"	354:8:13825:13870	2432311	2	True				
ANR	2433564	CallExpression	"fwrite ( bottom , 1 , sizeof ( bottom ) , prn_stream )"		2432311	0					
ANR	2433565	Callee	fwrite		2432311	0					
ANR	2433566	Identifier	fwrite		2432311	0					
ANR	2433567	ArgumentList	bottom		2432311	1					
ANR	2433568	Argument	bottom		2432311	0					
ANR	2433569	Identifier	bottom		2432311	0					
ANR	2433570	Argument	1		2432311	1					
ANR	2433571	PrimaryExpression	1		2432311	0					
ANR	2433572	Argument	sizeof ( bottom )		2432311	2					
ANR	2433573	SizeofExpression	sizeof ( bottom )		2432311	0					
ANR	2433574	Sizeof	sizeof		2432311	0					
ANR	2433575	SizeofOperand	bottom		2432311	1					
ANR	2433576	Argument	prn_stream		2432311	3					
ANR	2433577	Identifier	prn_stream		2432311	0					
ANR	2433578	ExpressionStatement	fflush ( prn_stream )	356:4:13882:13900	2432311	13	True				
ANR	2433579	CallExpression	fflush ( prn_stream )		2432311	0					
ANR	2433580	Callee	fflush		2432311	0					
ANR	2433581	Identifier	fflush		2432311	0					
ANR	2433582	ArgumentList	prn_stream		2432311	1					
ANR	2433583	Argument	prn_stream		2432311	0					
ANR	2433584	Identifier	prn_stream		2432311	0					
ANR	2433585	ExpressionStatement	"gs_free ( pdev -> memory , ( char * ) swipeBuf , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"	358:4:13907:13992	2432311	14	True				
ANR	2433586	CallExpression	"gs_free ( pdev -> memory , ( char * ) swipeBuf , swipeBuf_size , 1 , ""lxm_print_page(swipeBuf)"" )"		2432311	0					
ANR	2433587	Callee	gs_free		2432311	0					
ANR	2433588	Identifier	gs_free		2432311	0					
ANR	2433589	ArgumentList	pdev -> memory		2432311	1					
ANR	2433590	Argument	pdev -> memory		2432311	0					
ANR	2433591	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2433592	Identifier	pdev		2432311	0					
ANR	2433593	Identifier	memory		2432311	1					
ANR	2433594	Argument	( char * ) swipeBuf		2432311	1					
ANR	2433595	CastExpression	( char * ) swipeBuf		2432311	0					
ANR	2433596	CastTarget	char *		2432311	0					
ANR	2433597	Identifier	swipeBuf		2432311	1					
ANR	2433598	Argument	swipeBuf_size		2432311	2					
ANR	2433599	Identifier	swipeBuf_size		2432311	0					
ANR	2433600	Argument	1		2432311	3					
ANR	2433601	PrimaryExpression	1		2432311	0					
ANR	2433602	Argument	"""lxm_print_page(swipeBuf)"""		2432311	4					
ANR	2433603	PrimaryExpression	"""lxm_print_page(swipeBuf)"""		2432311	0					
ANR	2433604	ExpressionStatement	"gs_free ( pdev -> memory , ( char * ) buf1 , in_size , 1 , ""lxm_print_page(buf1)"" )"	359:4:13998:14069	2432311	15	True				
ANR	2433605	CallExpression	"gs_free ( pdev -> memory , ( char * ) buf1 , in_size , 1 , ""lxm_print_page(buf1)"" )"		2432311	0					
ANR	2433606	Callee	gs_free		2432311	0					
ANR	2433607	Identifier	gs_free		2432311	0					
ANR	2433608	ArgumentList	pdev -> memory		2432311	1					
ANR	2433609	Argument	pdev -> memory		2432311	0					
ANR	2433610	PtrMemberAccess	pdev -> memory		2432311	0					
ANR	2433611	Identifier	pdev		2432311	0					
ANR	2433612	Identifier	memory		2432311	1					
ANR	2433613	Argument	( char * ) buf1		2432311	1					
ANR	2433614	CastExpression	( char * ) buf1		2432311	0					
ANR	2433615	CastTarget	char *		2432311	0					
ANR	2433616	Identifier	buf1		2432311	1					
ANR	2433617	Argument	in_size		2432311	2					
ANR	2433618	Identifier	in_size		2432311	0					
ANR	2433619	Argument	1		2432311	3					
ANR	2433620	PrimaryExpression	1		2432311	0					
ANR	2433621	Argument	"""lxm_print_page(buf1)"""		2432311	4					
ANR	2433622	PrimaryExpression	"""lxm_print_page(buf1)"""		2432311	0					
ANR	2433623	ReturnStatement	return 0 ;	360:4:14075:14083	2432311	16	True				
ANR	2433624	PrimaryExpression	0		2432311	0					
ANR	2433625	ReturnType	static int		2432311	1					
ANR	2433626	Identifier	lxm5700m_print_page		2432311	2					
ANR	2433627	ParameterList	"gx_device_printer * pdev , FILE * prn_stream"		2432311	3					
ANR	2433628	Parameter	gx_device_printer * pdev	144:20:5651:5673	2432311	0	True				
ANR	2433629	ParameterType	gx_device_printer *		2432311	0					
ANR	2433630	Identifier	pdev		2432311	1					
ANR	2433631	Parameter	FILE * prn_stream	144:45:5676:5691	2432311	1	True				
ANR	2433632	ParameterType	FILE *		2432311	0					
ANR	2433633	Identifier	prn_stream		2432311	1					
ANR	2433634	CFGEntryNode	ENTRY		2432311		True				
ANR	2433635	CFGExitNode	EXIT		2432311		True				
ANR	2433636	Symbol	extent		2432311						
ANR	2433637	Symbol	* y		2432311						
ANR	2433638	Symbol	swipeBuf_size		2432311						
ANR	2433639	Symbol	directorySize		2432311						
ANR	2433640	Symbol	leastX		2432311						
ANR	2433641	Symbol	j1		2432311						
ANR	2433642	Symbol	gdev_mem_bytes_per_scan_line		2432311						
ANR	2433643	Symbol	in_data		2432311						
ANR	2433644	Symbol	fin		2432311						
ANR	2433645	Symbol	sxMask		2432311						
ANR	2433646	Symbol	sxBy8		2432311						
ANR	2433647	Symbol	pdev		2432311						
ANR	2433648	Symbol	* words		2432311						
ANR	2433649	Symbol	memcmp		2432311						
ANR	2433650	Symbol	pdev -> memory		2432311						
ANR	2433651	Symbol	leastY		2432311						
ANR	2433652	Symbol	init_string		2432311						
ANR	2433653	Symbol	lastY		2432311						
ANR	2433654	Symbol	line_size		2432311						
ANR	2433655	Symbol	highestX		2432311						
ANR	2433656	Symbol	( ( lxm_device * ) pdev ) -> headSeparation		2432311						
ANR	2433657	Symbol	in		2432311						
ANR	2433658	Symbol	bottom		2432311						
ANR	2433659	Symbol	lnum		2432311						
ANR	2433660	Symbol	retval		2432311						
ANR	2433661	Symbol	c1		2432311						
ANR	2433662	Symbol	buf1		2432311						
ANR	2433663	Symbol	gs_malloc		2432311						
ANR	2433664	Symbol	maxX		2432311						
ANR	2433665	Symbol	deltaY		2432311						
ANR	2433666	Symbol	in_size		2432311						
ANR	2433667	Symbol	* in		2432311						
ANR	2433668	Symbol	sum		2432311						
ANR	2433669	Symbol	directory		2432311						
ANR	2433670	Symbol	pdev -> height		2432311						
ANR	2433671	Symbol	lcnt		2432311						
ANR	2433672	Symbol	gdev_prn_copy_scan_lines		2432311						
ANR	2433673	Symbol	& in_data		2432311						
ANR	2433674	Symbol	prn_stream		2432311						
ANR	2433675	Symbol	* line_size		2432311						
ANR	2433676	Symbol	overLap		2432311						
ANR	2433677	Symbol	outp		2432311						
ANR	2433678	Symbol	RIGHTWARD		2432311						
ANR	2433679	Symbol	init3		2432311						
ANR	2433680	Symbol	init2		2432311						
ANR	2433681	Symbol	init1		2432311						
ANR	2433682	Symbol	direction		2432311						
ANR	2433683	Symbol	* in_data		2432311						
ANR	2433684	Symbol	b		2432311						
ANR	2433685	Symbol	c		2432311						
ANR	2433686	Symbol	sx		2432311						
ANR	2433687	Symbol	swipeHeight		2432311						
ANR	2433688	Symbol	f		2432311						
ANR	2433689	Symbol	sz		2432311						
ANR	2433690	Symbol	words		2432311						
ANR	2433691	Symbol	false		2432311						
ANR	2433692	Symbol	i		2432311						
ANR	2433693	Symbol	j		2432311						
ANR	2433694	Symbol	swipeBuf		2432311						
ANR	2433695	Symbol	l		2432311						
ANR	2433696	Symbol	gs_error_VMerror		2432311						
ANR	2433697	Symbol	* i		2432311						
ANR	2433698	Symbol	minX		2432311						
ANR	2433699	Symbol	* l		2432311						
ANR	2433700	Symbol	x		2432311						
ANR	2433701	Symbol	* pdev		2432311						
ANR	2433702	Symbol	y		2432311						
ANR	2433703	Function	lxm_get_params	383:0:15103:15458							
ANR	2433704	FunctionDef	"lxm_get_params (gx_device * pdev , gs_param_list * plist)"		2433703	0					
ANR	2433705	CompoundStatement		385:0:15168:15458	2433703	0					
ANR	2433706	Statement	lxm_device	386:4:15174:15183	2433703	0	True				
ANR	2433707	Statement	*	386:14:15184:15184	2433703	1	True				
ANR	2433708	Statement	const	386:16:15186:15190	2433703	2	True				
ANR	2433709	ExpressionStatement	ldev = ( lxm_device * ) pdev	386:22:15192:15216	2433703	3	True				
ANR	2433710	AssignmentExpression	ldev = ( lxm_device * ) pdev		2433703	0		=			
ANR	2433711	Identifier	ldev		2433703	0					
ANR	2433712	CastExpression	( lxm_device * ) pdev		2433703	1					
ANR	2433713	CastTarget	lxm_device *		2433703	0					
ANR	2433714	Identifier	pdev		2433703	1					
ANR	2433715	IdentifierDeclStatement	"int code = gdev_prn_get_params ( pdev , plist ) ;"	387:4:15222:15265	2433703	4	True				
ANR	2433716	IdentifierDecl	"code = gdev_prn_get_params ( pdev , plist )"		2433703	0					
ANR	2433717	IdentifierDeclType	int		2433703	0					
ANR	2433718	Identifier	code		2433703	1					
ANR	2433719	AssignmentExpression	"code = gdev_prn_get_params ( pdev , plist )"		2433703	2		=			
ANR	2433720	Identifier	code		2433703	0					
ANR	2433721	CallExpression	"gdev_prn_get_params ( pdev , plist )"		2433703	1					
ANR	2433722	Callee	gdev_prn_get_params		2433703	0					
ANR	2433723	Identifier	gdev_prn_get_params		2433703	0					
ANR	2433724	ArgumentList	pdev		2433703	1					
ANR	2433725	Argument	pdev		2433703	0					
ANR	2433726	Identifier	pdev		2433703	0					
ANR	2433727	Argument	plist		2433703	1					
ANR	2433728	Identifier	plist		2433703	0					
ANR	2433729	IfStatement	if ( code < 0 )		2433703	5					
ANR	2433730	Condition	code < 0	389:9:15277:15284	2433703	0	True				
ANR	2433731	RelationalExpression	code < 0		2433703	0		<			
ANR	2433732	Identifier	code		2433703	0					
ANR	2433733	PrimaryExpression	0		2433703	1					
ANR	2433734	ReturnStatement	return code ;	389:20:15288:15299	2433703	1	True				
ANR	2433735	Identifier	code		2433703	0					
ANR	2433736	ExpressionStatement	"code = param_write_int ( plist , ""HeadSeparation"" , ( int * ) & ( ldev -> headSeparation ) )"	390:4:15305:15438	2433703	6	True				
ANR	2433737	AssignmentExpression	"code = param_write_int ( plist , ""HeadSeparation"" , ( int * ) & ( ldev -> headSeparation ) )"		2433703	0		=			
ANR	2433738	Identifier	code		2433703	0					
ANR	2433739	CallExpression	"param_write_int ( plist , ""HeadSeparation"" , ( int * ) & ( ldev -> headSeparation ) )"		2433703	1					
ANR	2433740	Callee	param_write_int		2433703	0					
ANR	2433741	Identifier	param_write_int		2433703	0					
ANR	2433742	ArgumentList	plist		2433703	1					
ANR	2433743	Argument	plist		2433703	0					
ANR	2433744	Identifier	plist		2433703	0					
ANR	2433745	Argument	"""HeadSeparation"""		2433703	1					
ANR	2433746	PrimaryExpression	"""HeadSeparation"""		2433703	0					
ANR	2433747	Argument	( int * ) & ( ldev -> headSeparation )		2433703	2					
ANR	2433748	CastExpression	( int * ) & ( ldev -> headSeparation )		2433703	0					
ANR	2433749	CastTarget	int *		2433703	0					
ANR	2433750	UnaryOperationExpression	& ( ldev -> headSeparation )		2433703	1					
ANR	2433751	UnaryOperator	&		2433703	0					
ANR	2433752	PtrMemberAccess	ldev -> headSeparation		2433703	1					
ANR	2433753	Identifier	ldev		2433703	0					
ANR	2433754	Identifier	headSeparation		2433703	1					
ANR	2433755	ReturnStatement	return code ;	394:4:15445:15456	2433703	7	True				
ANR	2433756	Identifier	code		2433703	0					
ANR	2433757	ReturnType	static int		2433703	1					
ANR	2433758	Identifier	lxm_get_params		2433703	2					
ANR	2433759	ParameterList	"gx_device * pdev , gs_param_list * plist"		2433703	3					
ANR	2433760	Parameter	gx_device * pdev	384:15:15129:15143	2433703	0	True				
ANR	2433761	ParameterType	gx_device *		2433703	0					
ANR	2433762	Identifier	pdev		2433703	1					
ANR	2433763	Parameter	gs_param_list * plist	384:32:15146:15165	2433703	1	True				
ANR	2433764	ParameterType	gs_param_list *		2433703	0					
ANR	2433765	Identifier	plist		2433703	1					
ANR	2433766	CFGEntryNode	ENTRY		2433703		True				
ANR	2433767	CFGExitNode	EXIT		2433703		True				
ANR	2433768	Symbol	pdev		2433703						
ANR	2433769	Symbol	plist		2433703						
ANR	2433770	Symbol	code		2433703						
ANR	2433771	Symbol	& ldev -> headSeparation		2433703						
ANR	2433772	Symbol	gdev_prn_get_params		2433703						
ANR	2433773	Symbol	ldev		2433703						
ANR	2433774	Symbol	param_write_int		2433703						
ANR	2433775	Function	lxm_put_params	398:0:15538:16377							
ANR	2433776	FunctionDef	"lxm_put_params (gx_device * pdev , gs_param_list * plist)"		2433775	0					
ANR	2433777	CompoundStatement		400:0:15603:16377	2433775	0					
ANR	2433778	IdentifierDeclStatement	int ecode ;	401:4:15609:15618	2433775	0	True				
ANR	2433779	IdentifierDecl	ecode		2433775	0					
ANR	2433780	IdentifierDeclType	int		2433775	0					
ANR	2433781	Identifier	ecode		2433775	1					
ANR	2433782	Statement	lxm_device	402:4:15624:15633	2433775	1	True				
ANR	2433783	Statement	*	402:14:15634:15634	2433775	2	True				
ANR	2433784	Statement	const	402:16:15636:15640	2433775	3	True				
ANR	2433785	ExpressionStatement	ldev = ( lxm_device * ) pdev	402:22:15642:15666	2433775	4	True				
ANR	2433786	AssignmentExpression	ldev = ( lxm_device * ) pdev		2433775	0		=			
ANR	2433787	Identifier	ldev		2433775	0					
ANR	2433788	CastExpression	( lxm_device * ) pdev		2433775	1					
ANR	2433789	CastTarget	lxm_device *		2433775	0					
ANR	2433790	Identifier	pdev		2433775	1					
ANR	2433791	IdentifierDeclStatement	int trialHeadSeparation = ldev -> headSeparation ;	403:4:15672:15716	2433775	5	True				
ANR	2433792	IdentifierDecl	trialHeadSeparation = ldev -> headSeparation		2433775	0					
ANR	2433793	IdentifierDeclType	int		2433775	0					
ANR	2433794	Identifier	trialHeadSeparation		2433775	1					
ANR	2433795	AssignmentExpression	trialHeadSeparation = ldev -> headSeparation		2433775	2		=			
ANR	2433796	Identifier	trialHeadSeparation		2433775	0					
ANR	2433797	PtrMemberAccess	ldev -> headSeparation		2433775	1					
ANR	2433798	Identifier	ldev		2433775	0					
ANR	2433799	Identifier	headSeparation		2433775	1					
ANR	2433800	IdentifierDeclStatement	"int code = param_read_int ( plist , ""HeadSeparation"" , & trialHeadSeparation ) ;"	404:4:15722:15794	2433775	6	True				
ANR	2433801	IdentifierDecl	"code = param_read_int ( plist , ""HeadSeparation"" , & trialHeadSeparation )"		2433775	0					
ANR	2433802	IdentifierDeclType	int		2433775	0					
ANR	2433803	Identifier	code		2433775	1					
ANR	2433804	AssignmentExpression	"code = param_read_int ( plist , ""HeadSeparation"" , & trialHeadSeparation )"		2433775	2		=			
ANR	2433805	Identifier	code		2433775	0					
ANR	2433806	CallExpression	"param_read_int ( plist , ""HeadSeparation"" , & trialHeadSeparation )"		2433775	1					
ANR	2433807	Callee	param_read_int		2433775	0					
ANR	2433808	Identifier	param_read_int		2433775	0					
ANR	2433809	ArgumentList	plist		2433775	1					
ANR	2433810	Argument	plist		2433775	0					
ANR	2433811	Identifier	plist		2433775	0					
ANR	2433812	Argument	"""HeadSeparation"""		2433775	1					
ANR	2433813	PrimaryExpression	"""HeadSeparation"""		2433775	0					
ANR	2433814	Argument	& trialHeadSeparation		2433775	2					
ANR	2433815	UnaryOperationExpression	& trialHeadSeparation		2433775	0					
ANR	2433816	UnaryOperator	&		2433775	0					
ANR	2433817	Identifier	trialHeadSeparation		2433775	1					
ANR	2433818	IfStatement	if ( trialHeadSeparation < 1 || trialHeadSeparation > 32 )		2433775	7					
ANR	2433819	Condition	trialHeadSeparation < 1 || trialHeadSeparation > 32	406:9:15806:15856	2433775	0	True				
ANR	2433820	OrExpression	trialHeadSeparation < 1 || trialHeadSeparation > 32		2433775	0		||			
ANR	2433821	RelationalExpression	trialHeadSeparation < 1		2433775	0		<			
ANR	2433822	Identifier	trialHeadSeparation		2433775	0					
ANR	2433823	PrimaryExpression	1		2433775	1					
ANR	2433824	RelationalExpression	trialHeadSeparation > 32		2433775	1		>			
ANR	2433825	Identifier	trialHeadSeparation		2433775	0					
ANR	2433826	PrimaryExpression	32		2433775	1					
ANR	2433827	ExpressionStatement	"param_signal_error ( plist , ""HeadSeparation"" , gs_error_rangecheck )"	407:8:15868:15932	2433775	1	True				
ANR	2433828	CallExpression	"param_signal_error ( plist , ""HeadSeparation"" , gs_error_rangecheck )"		2433775	0					
ANR	2433829	Callee	param_signal_error		2433775	0					
ANR	2433830	Identifier	param_signal_error		2433775	0					
ANR	2433831	ArgumentList	plist		2433775	1					
ANR	2433832	Argument	plist		2433775	0					
ANR	2433833	Identifier	plist		2433775	0					
ANR	2433834	Argument	"""HeadSeparation"""		2433775	1					
ANR	2433835	PrimaryExpression	"""HeadSeparation"""		2433775	0					
ANR	2433836	Argument	gs_error_rangecheck		2433775	2					
ANR	2433837	Identifier	gs_error_rangecheck		2433775	0					
ANR	2433838	ExpressionStatement	"ecode = gdev_prn_put_params ( pdev , plist )"	409:4:16004:16044	2433775	8	True				
ANR	2433839	AssignmentExpression	"ecode = gdev_prn_put_params ( pdev , plist )"		2433775	0		=			
ANR	2433840	Identifier	ecode		2433775	0					
ANR	2433841	CallExpression	"gdev_prn_put_params ( pdev , plist )"		2433775	1					
ANR	2433842	Callee	gdev_prn_put_params		2433775	0					
ANR	2433843	Identifier	gdev_prn_put_params		2433775	0					
ANR	2433844	ArgumentList	pdev		2433775	1					
ANR	2433845	Argument	pdev		2433775	0					
ANR	2433846	Identifier	pdev		2433775	0					
ANR	2433847	Argument	plist		2433775	1					
ANR	2433848	Identifier	plist		2433775	0					
ANR	2433849	IfStatement	if ( code < 0 )		2433775	9					
ANR	2433850	Condition	code < 0	410:9:16089:16096	2433775	0	True				
ANR	2433851	RelationalExpression	code < 0		2433775	0		<			
ANR	2433852	Identifier	code		2433775	0					
ANR	2433853	PrimaryExpression	0		2433775	1					
ANR	2433854	ReturnStatement	return code ;	410:20:16100:16111	2433775	1	True				
ANR	2433855	Identifier	code		2433775	0					
ANR	2433856	IfStatement	if ( ecode < 0 )		2433775	10					
ANR	2433857	Condition	ecode < 0	411:8:16121:16129	2433775	0	True				
ANR	2433858	RelationalExpression	ecode < 0		2433775	0		<			
ANR	2433859	Identifier	ecode		2433775	0					
ANR	2433860	PrimaryExpression	0		2433775	1					
ANR	2433861	ReturnStatement	return ecode ;	411:19:16132:16144	2433775	1	True				
ANR	2433862	Identifier	ecode		2433775	0					
ANR	2433863	ExpressionStatement	ldev -> headSeparation = trialHeadSeparation	414:4:16221:16263	2433775	11	True				
ANR	2433864	AssignmentExpression	ldev -> headSeparation = trialHeadSeparation		2433775	0		=			
ANR	2433865	PtrMemberAccess	ldev -> headSeparation		2433775	0					
ANR	2433866	Identifier	ldev		2433775	0					
ANR	2433867	Identifier	headSeparation		2433775	1					
ANR	2433868	Identifier	trialHeadSeparation		2433775	1					
ANR	2433869	IfStatement	if ( code == 1 )		2433775	12					
ANR	2433870	Condition	code == 1	415:9:16274:16282	2433775	0	True				
ANR	2433871	EqualityExpression	code == 1		2433775	0		==			
ANR	2433872	Identifier	code		2433775	0					
ANR	2433873	PrimaryExpression	1		2433775	1					
ANR	2433874	ReturnStatement	return ecode ;	415:20:16285:16297	2433775	1	True				
ANR	2433875	Identifier	ecode		2433775	0					
ANR	2433876	ReturnStatement	return 0 ;	416:4:16367:16375	2433775	13	True				
ANR	2433877	PrimaryExpression	0		2433775	0					
ANR	2433878	ReturnType	static int		2433775	1					
ANR	2433879	Identifier	lxm_put_params		2433775	2					
ANR	2433880	ParameterList	"gx_device * pdev , gs_param_list * plist"		2433775	3					
ANR	2433881	Parameter	gx_device * pdev	399:15:15564:15578	2433775	0	True				
ANR	2433882	ParameterType	gx_device *		2433775	0					
ANR	2433883	Identifier	pdev		2433775	1					
ANR	2433884	Parameter	gs_param_list * plist	399:32:15581:15600	2433775	1	True				
ANR	2433885	ParameterType	gs_param_list *		2433775	0					
ANR	2433886	Identifier	plist		2433775	1					
ANR	2433887	CFGEntryNode	ENTRY		2433775		True				
ANR	2433888	CFGExitNode	EXIT		2433775		True				
ANR	2433889	Symbol	pdev		2433775						
ANR	2433890	Symbol	plist		2433775						
ANR	2433891	Symbol	ldev -> headSeparation		2433775						
ANR	2433892	Symbol	param_read_int		2433775						
ANR	2433893	Symbol	code		2433775						
ANR	2433894	Symbol	gs_error_rangecheck		2433775						
ANR	2433895	Symbol	trialHeadSeparation		2433775						
ANR	2433896	Symbol	ldev		2433775						
ANR	2433897	Symbol	& trialHeadSeparation		2433775						
ANR	2433898	Symbol	gdev_prn_put_params		2433775						
ANR	2433899	Symbol	* ldev		2433775						
ANR	2433900	Symbol	ecode		2433775						
