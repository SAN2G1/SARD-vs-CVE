command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5113905	File	data/converged/CVE-2018-16863_ghostpdl/gsht.c								
ANR	5113906	DeclStmt									
ANR	5113907	Decl							void	void ( gs_gstate * )	gx_set_effective_transfer
ANR	5113908	Function	gs_setscreen	131:0:4326:4657							
ANR	5113909	FunctionDef	"gs_setscreen (gs_gstate * pgs , gs_screen_halftone * phsp)"		5113908	0					
ANR	5113910	CompoundStatement		136:0:4419:4657	5113908	0					
ANR	5113911	IdentifierDeclStatement	gs_screen_enum senum ;	137:4:4425:4445	5113908	0	True				
ANR	5113912	IdentifierDecl	senum		5113908	0					
ANR	5113913	IdentifierDeclType	gs_screen_enum		5113908	0					
ANR	5113914	Identifier	senum		5113908	1					
ANR	5113915	IdentifierDeclStatement	"int code = gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) ) ;"	138:4:4451:4577	5113908	1	True				
ANR	5113916	IdentifierDecl	"code = gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) )"		5113908	0					
ANR	5113917	IdentifierDeclType	int		5113908	0					
ANR	5113918	Identifier	code		5113908	1					
ANR	5113919	AssignmentExpression	"code = gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) )"		5113908	2		=			
ANR	5113920	Identifier	code		5113908	0					
ANR	5113921	CallExpression	"gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) )"		5113908	1					
ANR	5113922	Callee	gx_ht_process_screen		5113908	0					
ANR	5113923	Identifier	gx_ht_process_screen		5113908	0					
ANR	5113924	ArgumentList	& senum		5113908	1					
ANR	5113925	Argument	& senum		5113908	0					
ANR	5113926	UnaryOperationExpression	& senum		5113908	0					
ANR	5113927	UnaryOperator	&		5113908	0					
ANR	5113928	Identifier	senum		5113908	1					
ANR	5113929	Argument	pgs		5113908	1					
ANR	5113930	Identifier	pgs		5113908	0					
ANR	5113931	Argument	phsp		5113908	2					
ANR	5113932	Identifier	phsp		5113908	0					
ANR	5113933	Argument	gs_currentaccuratescreens ( pgs -> memory )		5113908	3					
ANR	5113934	CallExpression	gs_currentaccuratescreens ( pgs -> memory )		5113908	0					
ANR	5113935	Callee	gs_currentaccuratescreens		5113908	0					
ANR	5113936	Identifier	gs_currentaccuratescreens		5113908	0					
ANR	5113937	ArgumentList	pgs -> memory		5113908	1					
ANR	5113938	Argument	pgs -> memory		5113908	0					
ANR	5113939	PtrMemberAccess	pgs -> memory		5113908	0					
ANR	5113940	Identifier	pgs		5113908	0					
ANR	5113941	Identifier	memory		5113908	1					
ANR	5113942	IfStatement	if ( code < 0 )		5113908	2					
ANR	5113943	Condition	code < 0	141:8:4588:4595	5113908	0	True				
ANR	5113944	RelationalExpression	code < 0		5113908	0		<			
ANR	5113945	Identifier	code		5113908	0					
ANR	5113946	PrimaryExpression	0		5113908	1					
ANR	5113947	ReturnStatement	return code ;	142:8:4606:4617	5113908	1	True				
ANR	5113948	Identifier	code		5113908	0					
ANR	5113949	ReturnStatement	return gs_screen_install ( & senum ) ;	143:4:4623:4655	5113908	3	True				
ANR	5113950	CallExpression	gs_screen_install ( & senum )		5113908	0					
ANR	5113951	Callee	gs_screen_install		5113908	0					
ANR	5113952	Identifier	gs_screen_install		5113908	0					
ANR	5113953	ArgumentList	& senum		5113908	1					
ANR	5113954	Argument	& senum		5113908	0					
ANR	5113955	UnaryOperationExpression	& senum		5113908	0					
ANR	5113956	UnaryOperator	&		5113908	0					
ANR	5113957	Identifier	senum		5113908	1					
ANR	5113958	ReturnType	RELOC_PTRS_END int		5113908	1					
ANR	5113959	Identifier	gs_setscreen		5113908	2					
ANR	5113960	ParameterList	"gs_gstate * pgs , gs_screen_halftone * phsp"		5113908	3					
ANR	5113961	Parameter	gs_gstate * pgs	135:13:4375:4389	5113908	0	True				
ANR	5113962	ParameterType	gs_gstate *		5113908	0					
ANR	5113963	Identifier	pgs		5113908	1					
ANR	5113964	Parameter	gs_screen_halftone * phsp	135:30:4392:4416	5113908	1	True				
ANR	5113965	ParameterType	gs_screen_halftone *		5113908	0					
ANR	5113966	Identifier	phsp		5113908	1					
ANR	5113967	CFGEntryNode	ENTRY		5113908		True				
ANR	5113968	CFGExitNode	EXIT		5113908		True				
ANR	5113969	Symbol	senum		5113908						
ANR	5113970	Symbol	phsp		5113908						
ANR	5113971	Symbol	code		5113908						
ANR	5113972	Symbol	gx_ht_process_screen		5113908						
ANR	5113973	Symbol	gs_currentaccuratescreens		5113908						
ANR	5113974	Symbol	& senum		5113908						
ANR	5113975	Symbol	* pgs		5113908						
ANR	5113976	Symbol	gs_screen_install		5113908						
ANR	5113977	Symbol	pgs		5113908						
ANR	5113978	Symbol	pgs -> memory		5113908						
ANR	5113979	Function	gs_currentscreen	147:0:4680:5090							
ANR	5113980	FunctionDef	"gs_currentscreen (const gs_gstate * pgs , gs_screen_halftone * phsp)"		5113979	0					
ANR	5113981	CompoundStatement		149:0:4751:5090	5113979	0					
ANR	5113982	SwitchStatement	switch ( pgs -> halftone -> type )		5113979	0					
ANR	5113983	Condition	pgs -> halftone -> type	150:12:4765:4783	5113979	0	True				
ANR	5113984	PtrMemberAccess	pgs -> halftone -> type		5113979	0					
ANR	5113985	PtrMemberAccess	pgs -> halftone		5113979	0					
ANR	5113986	Identifier	pgs		5113979	0					
ANR	5113987	Identifier	halftone		5113979	1					
ANR	5113988	Identifier	type		5113979	1					
ANR	5113989	CompoundStatement		2:33:34:34	5113979	1					
ANR	5113990	Label	case ht_type_screen :	151:8:4796:4815	5113979	0	True				
ANR	5113991	Identifier	ht_type_screen		5113979	0					
ANR	5113992	ExpressionStatement	* phsp = pgs -> halftone -> params . screen	152:12:4829:4865	5113979	1	True				
ANR	5113993	AssignmentExpression	* phsp = pgs -> halftone -> params . screen		5113979	0		=			
ANR	5113994	UnaryOperationExpression	* phsp		5113979	0					
ANR	5113995	UnaryOperator	*		5113979	0					
ANR	5113996	Identifier	phsp		5113979	1					
ANR	5113997	MemberAccess	pgs -> halftone -> params . screen		5113979	1					
ANR	5113998	PtrMemberAccess	pgs -> halftone -> params		5113979	0					
ANR	5113999	PtrMemberAccess	pgs -> halftone		5113979	0					
ANR	5114000	Identifier	pgs		5113979	0					
ANR	5114001	Identifier	halftone		5113979	1					
ANR	5114002	Identifier	params		5113979	1					
ANR	5114003	Identifier	screen		5113979	1					
ANR	5114004	ReturnStatement	return 0 ;	153:12:4879:4887	5113979	2	True				
ANR	5114005	PrimaryExpression	0		5113979	0					
ANR	5114006	Label	case ht_type_colorscreen :	154:8:4897:4921	5113979	3	True				
ANR	5114007	Identifier	ht_type_colorscreen		5113979	0					
ANR	5114008	ExpressionStatement	* phsp = pgs -> halftone -> params . colorscreen . screens . colored . gray	155:12:4935:4997	5113979	4	True				
ANR	5114009	AssignmentExpression	* phsp = pgs -> halftone -> params . colorscreen . screens . colored . gray		5113979	0		=			
ANR	5114010	UnaryOperationExpression	* phsp		5113979	0					
ANR	5114011	UnaryOperator	*		5113979	0					
ANR	5114012	Identifier	phsp		5113979	1					
ANR	5114013	MemberAccess	pgs -> halftone -> params . colorscreen . screens . colored . gray		5113979	1					
ANR	5114014	MemberAccess	pgs -> halftone -> params . colorscreen . screens . colored		5113979	0					
ANR	5114015	MemberAccess	pgs -> halftone -> params . colorscreen . screens		5113979	0					
ANR	5114016	MemberAccess	pgs -> halftone -> params . colorscreen		5113979	0					
ANR	5114017	PtrMemberAccess	pgs -> halftone -> params		5113979	0					
ANR	5114018	PtrMemberAccess	pgs -> halftone		5113979	0					
ANR	5114019	Identifier	pgs		5113979	0					
ANR	5114020	Identifier	halftone		5113979	1					
ANR	5114021	Identifier	params		5113979	1					
ANR	5114022	Identifier	colorscreen		5113979	1					
ANR	5114023	Identifier	screens		5113979	1					
ANR	5114024	Identifier	colored		5113979	1					
ANR	5114025	Identifier	gray		5113979	1					
ANR	5114026	ReturnStatement	return 0 ;	156:12:5011:5019	5113979	5	True				
ANR	5114027	PrimaryExpression	0		5113979	0					
ANR	5114028	Label	default :	157:8:5029:5036	5113979	6	True				
ANR	5114029	Identifier	default		5113979	0					
ANR	5114030	ExpressionStatement	return_error ( gs_error_undefined )	158:12:5050:5082	5113979	7	True				
ANR	5114031	CallExpression	return_error ( gs_error_undefined )		5113979	0					
ANR	5114032	Callee	return_error		5113979	0					
ANR	5114033	Identifier	return_error		5113979	0					
ANR	5114034	ArgumentList	gs_error_undefined		5113979	1					
ANR	5114035	Argument	gs_error_undefined		5113979	0					
ANR	5114036	Identifier	gs_error_undefined		5113979	0					
ANR	5114037	ReturnType	int		5113979	1					
ANR	5114038	Identifier	gs_currentscreen		5113979	2					
ANR	5114039	ParameterList	"const gs_gstate * pgs , gs_screen_halftone * phsp"		5113979	3					
ANR	5114040	Parameter	const gs_gstate * pgs	148:17:4701:4721	5113979	0	True				
ANR	5114041	ParameterType	const gs_gstate *		5113979	0					
ANR	5114042	Identifier	pgs		5113979	1					
ANR	5114043	Parameter	gs_screen_halftone * phsp	148:40:4724:4748	5113979	1	True				
ANR	5114044	ParameterType	gs_screen_halftone *		5113979	0					
ANR	5114045	Identifier	phsp		5113979	1					
ANR	5114046	CFGEntryNode	ENTRY		5113979		True				
ANR	5114047	CFGExitNode	EXIT		5113979		True				
ANR	5114048	Symbol	phsp		5113979						
ANR	5114049	Symbol	pgs -> halftone -> type		5113979						
ANR	5114050	Symbol	* pgs		5113979						
ANR	5114051	Symbol	gs_error_undefined		5113979						
ANR	5114052	Symbol	* phsp		5113979						
ANR	5114053	Symbol	pgs -> halftone -> params		5113979						
ANR	5114054	Symbol	pgs -> halftone -> params . colorscreen . screens . colored . gray		5113979						
ANR	5114055	Symbol	* * pgs		5113979						
ANR	5114056	Symbol	pgs -> halftone -> params . screen		5113979						
ANR	5114057	Symbol	pgs -> halftone -> params . colorscreen . screens		5113979						
ANR	5114058	Symbol	pgs -> halftone -> params . colorscreen . screens . colored		5113979						
ANR	5114059	Symbol	pgs -> halftone -> params . colorscreen		5113979						
ANR	5114060	Symbol	pgs -> halftone		5113979						
ANR	5114061	Symbol	pgs		5113979						
ANR	5114062	Symbol	* pgs -> halftone		5113979						
ANR	5114063	Function	gs_currentscreenlevels	163:0:5120:5434							
ANR	5114064	FunctionDef	gs_currentscreenlevels (const gs_gstate * pgs)		5114063	0					
ANR	5114065	CompoundStatement		165:0:5170:5434	5114063	0					
ANR	5114066	IdentifierDeclStatement	int gi = 0 ;	166:4:5176:5186	5114063	0	True				
ANR	5114067	IdentifierDecl	gi = 0		5114063	0					
ANR	5114068	IdentifierDeclType	int		5114063	0					
ANR	5114069	Identifier	gi		5114063	1					
ANR	5114070	AssignmentExpression	gi = 0		5114063	2		=			
ANR	5114071	Identifier	gi		5114063	0					
ANR	5114072	PrimaryExpression	0		5114063	1					
ANR	5114073	IfStatement	if ( pgs -> device != 0 )		5114063	1					
ANR	5114074	Condition	pgs -> device != 0	168:8:5197:5212	5114063	0	True				
ANR	5114075	EqualityExpression	pgs -> device != 0		5114063	0		!=			
ANR	5114076	PtrMemberAccess	pgs -> device		5114063	0					
ANR	5114077	Identifier	pgs		5114063	0					
ANR	5114078	Identifier	device		5114063	1					
ANR	5114079	PrimaryExpression	0		5114063	1					
ANR	5114080	ExpressionStatement	gi = pgs -> device -> color_info . gray_index	169:8:5223:5262	5114063	1	True				
ANR	5114081	AssignmentExpression	gi = pgs -> device -> color_info . gray_index		5114063	0		=			
ANR	5114082	Identifier	gi		5114063	0					
ANR	5114083	MemberAccess	pgs -> device -> color_info . gray_index		5114063	1					
ANR	5114084	PtrMemberAccess	pgs -> device -> color_info		5114063	0					
ANR	5114085	PtrMemberAccess	pgs -> device		5114063	0					
ANR	5114086	Identifier	pgs		5114063	0					
ANR	5114087	Identifier	device		5114063	1					
ANR	5114088	Identifier	color_info		5114063	1					
ANR	5114089	Identifier	gray_index		5114063	1					
ANR	5114090	IfStatement	if ( gi != GX_CINFO_COMP_NO_INDEX )		5114063	2					
ANR	5114091	Condition	gi != GX_CINFO_COMP_NO_INDEX	170:8:5272:5299	5114063	0	True				
ANR	5114092	EqualityExpression	gi != GX_CINFO_COMP_NO_INDEX		5114063	0		!=			
ANR	5114093	Identifier	gi		5114063	0					
ANR	5114094	Identifier	GX_CINFO_COMP_NO_INDEX		5114063	1					
ANR	5114095	ReturnStatement	return pgs -> dev_ht -> components [ gi ] . corder . num_levels ;	171:8:5310:5362	5114063	1	True				
ANR	5114096	MemberAccess	pgs -> dev_ht -> components [ gi ] . corder . num_levels		5114063	0					
ANR	5114097	MemberAccess	pgs -> dev_ht -> components [ gi ] . corder		5114063	0					
ANR	5114098	ArrayIndexing	pgs -> dev_ht -> components [ gi ]		5114063	0					
ANR	5114099	PtrMemberAccess	pgs -> dev_ht -> components		5114063	0					
ANR	5114100	PtrMemberAccess	pgs -> dev_ht		5114063	0					
ANR	5114101	Identifier	pgs		5114063	0					
ANR	5114102	Identifier	dev_ht		5114063	1					
ANR	5114103	Identifier	components		5114063	1					
ANR	5114104	Identifier	gi		5114063	1					
ANR	5114105	Identifier	corder		5114063	1					
ANR	5114106	Identifier	num_levels		5114063	1					
ANR	5114107	ElseStatement	else		5114063	0					
ANR	5114108	ReturnStatement	return pgs -> dev_ht -> components [ 0 ] . corder . num_levels ;	173:8:5381:5432	5114063	0	True				
ANR	5114109	MemberAccess	pgs -> dev_ht -> components [ 0 ] . corder . num_levels		5114063	0					
ANR	5114110	MemberAccess	pgs -> dev_ht -> components [ 0 ] . corder		5114063	0					
ANR	5114111	ArrayIndexing	pgs -> dev_ht -> components [ 0 ]		5114063	0					
ANR	5114112	PtrMemberAccess	pgs -> dev_ht -> components		5114063	0					
ANR	5114113	PtrMemberAccess	pgs -> dev_ht		5114063	0					
ANR	5114114	Identifier	pgs		5114063	0					
ANR	5114115	Identifier	dev_ht		5114063	1					
ANR	5114116	Identifier	components		5114063	1					
ANR	5114117	PrimaryExpression	0		5114063	1					
ANR	5114118	Identifier	corder		5114063	1					
ANR	5114119	Identifier	num_levels		5114063	1					
ANR	5114120	ReturnType	int		5114063	1					
ANR	5114121	Identifier	gs_currentscreenlevels		5114063	2					
ANR	5114122	ParameterList	const gs_gstate * pgs		5114063	3					
ANR	5114123	Parameter	const gs_gstate * pgs	164:23:5147:5167	5114063	0	True				
ANR	5114124	ParameterType	const gs_gstate *		5114063	0					
ANR	5114125	Identifier	pgs		5114063	1					
ANR	5114126	CFGEntryNode	ENTRY		5114063		True				
ANR	5114127	CFGExitNode	EXIT		5114063		True				
ANR	5114128	Symbol	gi		5114063						
ANR	5114129	Symbol	* pgs		5114063						
ANR	5114130	Symbol	pgs -> device -> color_info		5114063						
ANR	5114131	Symbol	* pgs -> dev_ht -> components		5114063						
ANR	5114132	Symbol	* gi		5114063						
ANR	5114133	Symbol	pgs -> dev_ht -> components [ 0 ] . corder . num_levels		5114063						
ANR	5114134	Symbol	pgs -> dev_ht -> components [ gi ] . corder		5114063						
ANR	5114135	Symbol	pgs -> dev_ht -> components [ 0 ] . corder		5114063						
ANR	5114136	Symbol	pgs -> device -> color_info . gray_index		5114063						
ANR	5114137	Symbol	* * pgs		5114063						
ANR	5114138	Symbol	GX_CINFO_COMP_NO_INDEX		5114063						
ANR	5114139	Symbol	pgs -> device		5114063						
ANR	5114140	Symbol	pgs -> dev_ht		5114063						
ANR	5114141	Symbol	pgs -> dev_ht -> components		5114063						
ANR	5114142	Symbol	* pgs -> device		5114063						
ANR	5114143	Symbol	* * pgs -> dev_ht		5114063						
ANR	5114144	Symbol	* pgs -> dev_ht		5114063						
ANR	5114145	Symbol	* * * pgs		5114063						
ANR	5114146	Symbol	pgs -> dev_ht -> components [ gi ] . corder . num_levels		5114063						
ANR	5114147	Symbol	pgs		5114063						
ANR	5114148	Function	gx_gstate_setscreenphase	177:0:5459:5974							
ANR	5114149	FunctionDef	"gx_gstate_setscreenphase (gs_gstate * pgs , int x , int y , gs_color_select_t select)"		5114148	0					
ANR	5114150	CompoundStatement		180:0:5570:5974	5114148	0					
ANR	5114151	IfStatement	if ( select == gs_color_select_all )		5114148	0					
ANR	5114152	Condition	select == gs_color_select_all	181:8:5580:5608	5114148	0	True				
ANR	5114153	EqualityExpression	select == gs_color_select_all		5114148	0		==			
ANR	5114154	Identifier	select		5114148	0					
ANR	5114155	Identifier	gs_color_select_all		5114148	1					
ANR	5114156	CompoundStatement		3:8:50:55	5114148	1					
ANR	5114157	IdentifierDeclStatement	int i ;	182:8:5621:5626	5114148	0	True				
ANR	5114158	IdentifierDecl	i		5114148	0					
ANR	5114159	IdentifierDeclType	int		5114148	0					
ANR	5114160	Identifier	i		5114148	1					
ANR	5114161	ForStatement	for ( i = 0 ; i < gs_color_select_count ; ++ i )		5114148	1					
ANR	5114162	ForInit	i = 0 ;	184:13:5642:5647	5114148	0	True				
ANR	5114163	AssignmentExpression	i = 0		5114148	0		=			
ANR	5114164	Identifier	i		5114148	0					
ANR	5114165	PrimaryExpression	0		5114148	1					
ANR	5114166	Condition	i < gs_color_select_count	184:20:5649:5673	5114148	1	True				
ANR	5114167	RelationalExpression	i < gs_color_select_count		5114148	0		<			
ANR	5114168	Identifier	i		5114148	0					
ANR	5114169	Identifier	gs_color_select_count		5114148	1					
ANR	5114170	UnaryExpression	++ i	184:47:5676:5678	5114148	2	True				
ANR	5114171	IncDec	++		5114148	0					
ANR	5114172	Identifier	i		5114148	1					
ANR	5114173	ExpressionStatement	"gx_gstate_setscreenphase ( pgs , x , y , ( gs_color_select_t ) i )"	185:12:5693:5751	5114148	3	True				
ANR	5114174	CallExpression	"gx_gstate_setscreenphase ( pgs , x , y , ( gs_color_select_t ) i )"		5114148	0					
ANR	5114175	Callee	gx_gstate_setscreenphase		5114148	0					
ANR	5114176	Identifier	gx_gstate_setscreenphase		5114148	0					
ANR	5114177	ArgumentList	pgs		5114148	1					
ANR	5114178	Argument	pgs		5114148	0					
ANR	5114179	Identifier	pgs		5114148	0					
ANR	5114180	Argument	x		5114148	1					
ANR	5114181	Identifier	x		5114148	0					
ANR	5114182	Argument	y		5114148	2					
ANR	5114183	Identifier	y		5114148	0					
ANR	5114184	Argument	( gs_color_select_t ) i		5114148	3					
ANR	5114185	CastExpression	( gs_color_select_t ) i		5114148	0					
ANR	5114186	CastTarget	gs_color_select_t		5114148	0					
ANR	5114187	Identifier	i		5114148	1					
ANR	5114188	ReturnStatement	return 0 ;	186:8:5761:5769	5114148	2	True				
ANR	5114189	PrimaryExpression	0		5114148	0					
ANR	5114190	ElseStatement	else		5114148	0					
ANR	5114191	IfStatement	if ( ( int ) select < 0 || ( int ) select >= gs_color_select_count )		5114148	0					
ANR	5114192	Condition	( int ) select < 0 || ( int ) select >= gs_color_select_count	187:15:5786:5840	5114148	0	True				
ANR	5114193	OrExpression	( int ) select < 0 || ( int ) select >= gs_color_select_count		5114148	0		||			
ANR	5114194	RelationalExpression	( int ) select < 0		5114148	0		<			
ANR	5114195	CastExpression	( int ) select		5114148	0					
ANR	5114196	CastTarget	int		5114148	0					
ANR	5114197	Identifier	select		5114148	1					
ANR	5114198	PrimaryExpression	0		5114148	1					
ANR	5114199	RelationalExpression	( int ) select >= gs_color_select_count		5114148	1		>=			
ANR	5114200	CastExpression	( int ) select		5114148	0					
ANR	5114201	CastTarget	int		5114148	0					
ANR	5114202	Identifier	select		5114148	1					
ANR	5114203	Identifier	gs_color_select_count		5114148	1					
ANR	5114204	ExpressionStatement	return_error ( gs_error_rangecheck )	188:8:5851:5884	5114148	1	True				
ANR	5114205	CallExpression	return_error ( gs_error_rangecheck )		5114148	0					
ANR	5114206	Callee	return_error		5114148	0					
ANR	5114207	Identifier	return_error		5114148	0					
ANR	5114208	ArgumentList	gs_error_rangecheck		5114148	1					
ANR	5114209	Argument	gs_error_rangecheck		5114148	0					
ANR	5114210	Identifier	gs_error_rangecheck		5114148	0					
ANR	5114211	ExpressionStatement	pgs -> screen_phase [ select ] . x = x	189:4:5890:5921	5114148	1	True				
ANR	5114212	AssignmentExpression	pgs -> screen_phase [ select ] . x = x		5114148	0		=			
ANR	5114213	MemberAccess	pgs -> screen_phase [ select ] . x		5114148	0					
ANR	5114214	ArrayIndexing	pgs -> screen_phase [ select ]		5114148	0					
ANR	5114215	PtrMemberAccess	pgs -> screen_phase		5114148	0					
ANR	5114216	Identifier	pgs		5114148	0					
ANR	5114217	Identifier	screen_phase		5114148	1					
ANR	5114218	Identifier	select		5114148	1					
ANR	5114219	Identifier	x		5114148	1					
ANR	5114220	Identifier	x		5114148	1					
ANR	5114221	ExpressionStatement	pgs -> screen_phase [ select ] . y = y	190:4:5927:5958	5114148	2	True				
ANR	5114222	AssignmentExpression	pgs -> screen_phase [ select ] . y = y		5114148	0		=			
ANR	5114223	MemberAccess	pgs -> screen_phase [ select ] . y		5114148	0					
ANR	5114224	ArrayIndexing	pgs -> screen_phase [ select ]		5114148	0					
ANR	5114225	PtrMemberAccess	pgs -> screen_phase		5114148	0					
ANR	5114226	Identifier	pgs		5114148	0					
ANR	5114227	Identifier	screen_phase		5114148	1					
ANR	5114228	Identifier	select		5114148	1					
ANR	5114229	Identifier	y		5114148	1					
ANR	5114230	Identifier	y		5114148	1					
ANR	5114231	ReturnStatement	return 0 ;	191:4:5964:5972	5114148	3	True				
ANR	5114232	PrimaryExpression	0		5114148	0					
ANR	5114233	ReturnType	int		5114148	1					
ANR	5114234	Identifier	gx_gstate_setscreenphase		5114148	2					
ANR	5114235	ParameterList	"gs_gstate * pgs , int x , int y , gs_color_select_t select"		5114148	3					
ANR	5114236	Parameter	gs_gstate * pgs	178:25:5488:5502	5114148	0	True				
ANR	5114237	ParameterType	gs_gstate *		5114148	0					
ANR	5114238	Identifier	pgs		5114148	1					
ANR	5114239	Parameter	int x	178:42:5505:5509	5114148	1	True				
ANR	5114240	ParameterType	int		5114148	0					
ANR	5114241	Identifier	x		5114148	1					
ANR	5114242	Parameter	int y	178:49:5512:5516	5114148	2	True				
ANR	5114243	ParameterType	int		5114148	0					
ANR	5114244	Identifier	y		5114148	1					
ANR	5114245	Parameter	gs_color_select_t select	179:25:5544:5567	5114148	3	True				
ANR	5114246	ParameterType	gs_color_select_t		5114148	0					
ANR	5114247	Identifier	select		5114148	1					
ANR	5114248	CFGEntryNode	ENTRY		5114148		True				
ANR	5114249	CFGExitNode	EXIT		5114148		True				
ANR	5114250	Symbol	select		5114148						
ANR	5114251	Symbol	gs_error_rangecheck		5114148						
ANR	5114252	Symbol	* select		5114148						
ANR	5114253	Symbol	* pgs		5114148						
ANR	5114254	Symbol	i		5114148						
ANR	5114255	Symbol	* pgs -> screen_phase		5114148						
ANR	5114256	Symbol	pgs -> screen_phase		5114148						
ANR	5114257	Symbol	* * pgs		5114148						
ANR	5114258	Symbol	gs_color_select_count		5114148						
ANR	5114259	Symbol	x		5114148						
ANR	5114260	Symbol	y		5114148						
ANR	5114261	Symbol	gs_color_select_all		5114148						
ANR	5114262	Symbol	pgs		5114148						
ANR	5114263	Symbol	pgs -> screen_phase [ select ] . x		5114148						
ANR	5114264	Symbol	pgs -> screen_phase [ select ] . y		5114148						
ANR	5114265	Function	gs_setscreenphase	193:0:5976:6516							
ANR	5114266	FunctionDef	"gs_setscreenphase (gs_gstate * pgs , int x , int y , gs_color_select_t select)"		5114265	0					
ANR	5114267	CompoundStatement		195:0:6055:6516	5114265	0					
ANR	5114268	IdentifierDeclStatement	"int code = gx_gstate_setscreenphase ( pgs , x , y , select ) ;"	196:4:6061:6155	5114265	0	True				
ANR	5114269	IdentifierDecl	"code = gx_gstate_setscreenphase ( pgs , x , y , select )"		5114265	0					
ANR	5114270	IdentifierDeclType	int		5114265	0					
ANR	5114271	Identifier	code		5114265	1					
ANR	5114272	AssignmentExpression	"code = gx_gstate_setscreenphase ( pgs , x , y , select )"		5114265	2		=			
ANR	5114273	Identifier	code		5114265	0					
ANR	5114274	CallExpression	"gx_gstate_setscreenphase ( pgs , x , y , select )"		5114265	1					
ANR	5114275	Callee	gx_gstate_setscreenphase		5114265	0					
ANR	5114276	Identifier	gx_gstate_setscreenphase		5114265	0					
ANR	5114277	ArgumentList	pgs		5114265	1					
ANR	5114278	Argument	pgs		5114265	0					
ANR	5114279	Identifier	pgs		5114265	0					
ANR	5114280	Argument	x		5114265	1					
ANR	5114281	Identifier	x		5114265	0					
ANR	5114282	Argument	y		5114265	2					
ANR	5114283	Identifier	y		5114265	0					
ANR	5114284	Argument	select		5114265	3					
ANR	5114285	Identifier	select		5114265	0					
ANR	5114286	IfStatement	if ( code >= 0 && ( select == gs_color_select_texture || select == gs_color_select_all ) )		5114265	1					
ANR	5114287	Condition	code >= 0 && ( select == gs_color_select_texture || select == gs_color_select_all )	204:8:6352:6454	5114265	0	True				
ANR	5114288	AndExpression	code >= 0 && ( select == gs_color_select_texture || select == gs_color_select_all )		5114265	0		&&			
ANR	5114289	RelationalExpression	code >= 0		5114265	0		>=			
ANR	5114290	Identifier	code		5114265	0					
ANR	5114291	PrimaryExpression	0		5114265	1					
ANR	5114292	OrExpression	select == gs_color_select_texture || select == gs_color_select_all		5114265	1		||			
ANR	5114293	EqualityExpression	select == gs_color_select_texture		5114265	0		==			
ANR	5114294	Identifier	select		5114265	0					
ANR	5114295	Identifier	gs_color_select_texture		5114265	1					
ANR	5114296	EqualityExpression	select == gs_color_select_all		5114265	1		==			
ANR	5114297	Identifier	select		5114265	0					
ANR	5114298	Identifier	gs_color_select_all		5114265	1					
ANR	5114299	ExpressionStatement	gx_unset_dev_color ( pgs )	207:8:6474:6497	5114265	1	True				
ANR	5114300	CallExpression	gx_unset_dev_color ( pgs )		5114265	0					
ANR	5114301	Callee	gx_unset_dev_color		5114265	0					
ANR	5114302	Identifier	gx_unset_dev_color		5114265	0					
ANR	5114303	ArgumentList	pgs		5114265	1					
ANR	5114304	Argument	pgs		5114265	0					
ANR	5114305	Identifier	pgs		5114265	0					
ANR	5114306	ReturnStatement	return code ;	208:4:6503:6514	5114265	2	True				
ANR	5114307	Identifier	code		5114265	0					
ANR	5114308	ReturnType	int		5114265	1					
ANR	5114309	Identifier	gs_setscreenphase		5114265	2					
ANR	5114310	ParameterList	"gs_gstate * pgs , int x , int y , gs_color_select_t select"		5114265	3					
ANR	5114311	Parameter	gs_gstate * pgs	194:18:5998:6012	5114265	0	True				
ANR	5114312	ParameterType	gs_gstate *		5114265	0					
ANR	5114313	Identifier	pgs		5114265	1					
ANR	5114314	Parameter	int x	194:35:6015:6019	5114265	1	True				
ANR	5114315	ParameterType	int		5114265	0					
ANR	5114316	Identifier	x		5114265	1					
ANR	5114317	Parameter	int y	194:42:6022:6026	5114265	2	True				
ANR	5114318	ParameterType	int		5114265	0					
ANR	5114319	Identifier	y		5114265	1					
ANR	5114320	Parameter	gs_color_select_t select	194:49:6029:6052	5114265	3	True				
ANR	5114321	ParameterType	gs_color_select_t		5114265	0					
ANR	5114322	Identifier	select		5114265	1					
ANR	5114323	CFGEntryNode	ENTRY		5114265		True				
ANR	5114324	CFGExitNode	EXIT		5114265		True				
ANR	5114325	Symbol	gx_gstate_setscreenphase		5114265						
ANR	5114326	Symbol	select		5114265						
ANR	5114327	Symbol	code		5114265						
ANR	5114328	Symbol	x		5114265						
ANR	5114329	Symbol	y		5114265						
ANR	5114330	Symbol	gs_color_select_all		5114265						
ANR	5114331	Symbol	pgs		5114265						
ANR	5114332	Symbol	gs_color_select_texture		5114265						
ANR	5114333	Function	gs_currentscreenphase_pgs	211:0:6519:6808							
ANR	5114334	FunctionDef	"gs_currentscreenphase_pgs (const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select)"		5114333	0					
ANR	5114335	CompoundStatement		214:0:6643:6808	5114333	0					
ANR	5114336	IfStatement	if ( ( int ) select < 0 || ( int ) select >= gs_color_select_count )		5114333	0					
ANR	5114337	Condition	( int ) select < 0 || ( int ) select >= gs_color_select_count	215:8:6653:6707	5114333	0	True				
ANR	5114338	OrExpression	( int ) select < 0 || ( int ) select >= gs_color_select_count		5114333	0		||			
ANR	5114339	RelationalExpression	( int ) select < 0		5114333	0		<			
ANR	5114340	CastExpression	( int ) select		5114333	0					
ANR	5114341	CastTarget	int		5114333	0					
ANR	5114342	Identifier	select		5114333	1					
ANR	5114343	PrimaryExpression	0		5114333	1					
ANR	5114344	RelationalExpression	( int ) select >= gs_color_select_count		5114333	1		>=			
ANR	5114345	CastExpression	( int ) select		5114333	0					
ANR	5114346	CastTarget	int		5114333	0					
ANR	5114347	Identifier	select		5114333	1					
ANR	5114348	Identifier	gs_color_select_count		5114333	1					
ANR	5114349	ExpressionStatement	return_error ( gs_error_rangecheck )	216:8:6718:6751	5114333	1	True				
ANR	5114350	CallExpression	return_error ( gs_error_rangecheck )		5114333	0					
ANR	5114351	Callee	return_error		5114333	0					
ANR	5114352	Identifier	return_error		5114333	0					
ANR	5114353	ArgumentList	gs_error_rangecheck		5114333	1					
ANR	5114354	Argument	gs_error_rangecheck		5114333	0					
ANR	5114355	Identifier	gs_error_rangecheck		5114333	0					
ANR	5114356	ExpressionStatement	* pphase = pgs -> screen_phase [ select ]	217:4:6757:6792	5114333	1	True				
ANR	5114357	AssignmentExpression	* pphase = pgs -> screen_phase [ select ]		5114333	0		=			
ANR	5114358	UnaryOperationExpression	* pphase		5114333	0					
ANR	5114359	UnaryOperator	*		5114333	0					
ANR	5114360	Identifier	pphase		5114333	1					
ANR	5114361	ArrayIndexing	pgs -> screen_phase [ select ]		5114333	1					
ANR	5114362	PtrMemberAccess	pgs -> screen_phase		5114333	0					
ANR	5114363	Identifier	pgs		5114333	0					
ANR	5114364	Identifier	screen_phase		5114333	1					
ANR	5114365	Identifier	select		5114333	1					
ANR	5114366	ReturnStatement	return 0 ;	218:4:6798:6806	5114333	2	True				
ANR	5114367	PrimaryExpression	0		5114333	0					
ANR	5114368	ReturnType	int		5114333	1					
ANR	5114369	Identifier	gs_currentscreenphase_pgs		5114333	2					
ANR	5114370	ParameterList	"const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select"		5114333	3					
ANR	5114371	Parameter	const gs_gstate * pgs	212:26:6549:6569	5114333	0	True				
ANR	5114372	ParameterType	const gs_gstate *		5114333	0					
ANR	5114373	Identifier	pgs		5114333	1					
ANR	5114374	Parameter	gs_int_point * pphase	212:49:6572:6592	5114333	1	True				
ANR	5114375	ParameterType	gs_int_point *		5114333	0					
ANR	5114376	Identifier	pphase		5114333	1					
ANR	5114377	Parameter	gs_color_select_t select	213:22:6617:6640	5114333	2	True				
ANR	5114378	ParameterType	gs_color_select_t		5114333	0					
ANR	5114379	Identifier	select		5114333	1					
ANR	5114380	CFGEntryNode	ENTRY		5114333		True				
ANR	5114381	CFGExitNode	EXIT		5114333		True				
ANR	5114382	Symbol	* * pgs		5114333						
ANR	5114383	Symbol	pphase		5114333						
ANR	5114384	Symbol	select		5114333						
ANR	5114385	Symbol	gs_color_select_count		5114333						
ANR	5114386	Symbol	* pphase		5114333						
ANR	5114387	Symbol	gs_error_rangecheck		5114333						
ANR	5114388	Symbol	* select		5114333						
ANR	5114389	Symbol	* pgs		5114333						
ANR	5114390	Symbol	* pgs -> screen_phase		5114333						
ANR	5114391	Symbol	pgs		5114333						
ANR	5114392	Symbol	pgs -> screen_phase		5114333						
ANR	5114393	Function	gs_currentscreenphase	222:0:6837:7037							
ANR	5114394	FunctionDef	"gs_currentscreenphase (const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select)"		5114393	0					
ANR	5114395	CompoundStatement		225:0:6957:7037	5114393	0					
ANR	5114396	ReturnStatement	"return gs_currentscreenphase_pgs ( ( const gs_gstate * ) pgs , pphase , select ) ;"	226:4:6963:7035	5114393	0	True				
ANR	5114397	CallExpression	"gs_currentscreenphase_pgs ( ( const gs_gstate * ) pgs , pphase , select )"		5114393	0					
ANR	5114398	Callee	gs_currentscreenphase_pgs		5114393	0					
ANR	5114399	Identifier	gs_currentscreenphase_pgs		5114393	0					
ANR	5114400	ArgumentList	( const gs_gstate * ) pgs		5114393	1					
ANR	5114401	Argument	( const gs_gstate * ) pgs		5114393	0					
ANR	5114402	CastExpression	( const gs_gstate * ) pgs		5114393	0					
ANR	5114403	CastTarget	const gs_gstate *		5114393	0					
ANR	5114404	Identifier	pgs		5114393	1					
ANR	5114405	Argument	pphase		5114393	1					
ANR	5114406	Identifier	pphase		5114393	0					
ANR	5114407	Argument	select		5114393	2					
ANR	5114408	Identifier	select		5114393	0					
ANR	5114409	ReturnType	int		5114393	1					
ANR	5114410	Identifier	gs_currentscreenphase		5114393	2					
ANR	5114411	ParameterList	"const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select"		5114393	3					
ANR	5114412	Parameter	const gs_gstate * pgs	223:22:6863:6883	5114393	0	True				
ANR	5114413	ParameterType	const gs_gstate *		5114393	0					
ANR	5114414	Identifier	pgs		5114393	1					
ANR	5114415	Parameter	gs_int_point * pphase	223:45:6886:6906	5114393	1	True				
ANR	5114416	ParameterType	gs_int_point *		5114393	0					
ANR	5114417	Identifier	pphase		5114393	1					
ANR	5114418	Parameter	gs_color_select_t select	224:22:6931:6954	5114393	2	True				
ANR	5114419	ParameterType	gs_color_select_t		5114393	0					
ANR	5114420	Identifier	select		5114393	1					
ANR	5114421	CFGEntryNode	ENTRY		5114393		True				
ANR	5114422	CFGExitNode	EXIT		5114393		True				
ANR	5114423	Symbol	pphase		5114393						
ANR	5114424	Symbol	select		5114393						
ANR	5114425	Symbol	gs_currentscreenphase_pgs		5114393						
ANR	5114426	Symbol	pgs		5114393						
ANR	5114427	Function	gs_currenthalftone	230:0:7062:7164							
ANR	5114428	FunctionDef	"gs_currenthalftone (gs_gstate * pgs , gs_halftone * pht)"		5114427	0					
ANR	5114429	CompoundStatement		232:0:7121:7164	5114427	0					
ANR	5114430	ExpressionStatement	* pht = * pgs -> halftone	233:4:7127:7148	5114427	0	True				
ANR	5114431	AssignmentExpression	* pht = * pgs -> halftone		5114427	0		=			
ANR	5114432	UnaryOperationExpression	* pht		5114427	0					
ANR	5114433	UnaryOperator	*		5114427	0					
ANR	5114434	Identifier	pht		5114427	1					
ANR	5114435	UnaryOperationExpression	* pgs -> halftone		5114427	1					
ANR	5114436	UnaryOperator	*		5114427	0					
ANR	5114437	PtrMemberAccess	pgs -> halftone		5114427	1					
ANR	5114438	Identifier	pgs		5114427	0					
ANR	5114439	Identifier	halftone		5114427	1					
ANR	5114440	ReturnStatement	return 0 ;	234:4:7154:7162	5114427	1	True				
ANR	5114441	PrimaryExpression	0		5114427	0					
ANR	5114442	ReturnType	int		5114427	1					
ANR	5114443	Identifier	gs_currenthalftone		5114427	2					
ANR	5114444	ParameterList	"gs_gstate * pgs , gs_halftone * pht"		5114427	3					
ANR	5114445	Parameter	gs_gstate * pgs	231:19:7085:7099	5114427	0	True				
ANR	5114446	ParameterType	gs_gstate *		5114427	0					
ANR	5114447	Identifier	pgs		5114427	1					
ANR	5114448	Parameter	gs_halftone * pht	231:36:7102:7118	5114427	1	True				
ANR	5114449	ParameterType	gs_halftone *		5114427	0					
ANR	5114450	Identifier	pht		5114427	1					
ANR	5114451	CFGEntryNode	ENTRY		5114427		True				
ANR	5114452	CFGExitNode	EXIT		5114427		True				
ANR	5114453	Symbol	* * pgs		5114427						
ANR	5114454	Symbol	* pgs		5114427						
ANR	5114455	Symbol	* pht		5114427						
ANR	5114456	Symbol	pgs -> halftone		5114427						
ANR	5114457	Symbol	pgs		5114427						
ANR	5114458	Symbol	pht		5114427						
ANR	5114459	Symbol	* pgs -> halftone		5114427						
ANR	5114460	Function	gx_ht_process_screen_memory	240:0:7238:7703							
ANR	5114461	FunctionDef	"gx_ht_process_screen_memory (gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem)"		5114460	0					
ANR	5114462	CompoundStatement		243:0:7388:7703	5114460	0					
ANR	5114463	IdentifierDeclStatement	gs_point pt ;	244:4:7394:7405	5114460	0	True				
ANR	5114464	IdentifierDecl	pt		5114460	0					
ANR	5114465	IdentifierDeclType	gs_point		5114460	0					
ANR	5114466	Identifier	pt		5114460	1					
ANR	5114467	IdentifierDeclStatement	"int code = gs_screen_init_memory ( penum , pgs , phsp , accurate , mem ) ;"	245:4:7411:7476	5114460	1	True				
ANR	5114468	IdentifierDecl	"code = gs_screen_init_memory ( penum , pgs , phsp , accurate , mem )"		5114460	0					
ANR	5114469	IdentifierDeclType	int		5114460	0					
ANR	5114470	Identifier	code		5114460	1					
ANR	5114471	AssignmentExpression	"code = gs_screen_init_memory ( penum , pgs , phsp , accurate , mem )"		5114460	2		=			
ANR	5114472	Identifier	code		5114460	0					
ANR	5114473	CallExpression	"gs_screen_init_memory ( penum , pgs , phsp , accurate , mem )"		5114460	1					
ANR	5114474	Callee	gs_screen_init_memory		5114460	0					
ANR	5114475	Identifier	gs_screen_init_memory		5114460	0					
ANR	5114476	ArgumentList	penum		5114460	1					
ANR	5114477	Argument	penum		5114460	0					
ANR	5114478	Identifier	penum		5114460	0					
ANR	5114479	Argument	pgs		5114460	1					
ANR	5114480	Identifier	pgs		5114460	0					
ANR	5114481	Argument	phsp		5114460	2					
ANR	5114482	Identifier	phsp		5114460	0					
ANR	5114483	Argument	accurate		5114460	3					
ANR	5114484	Identifier	accurate		5114460	0					
ANR	5114485	Argument	mem		5114460	4					
ANR	5114486	Identifier	mem		5114460	0					
ANR	5114487	IfStatement	if ( code < 0 )		5114460	2					
ANR	5114488	Condition	code < 0	247:8:7487:7494	5114460	0	True				
ANR	5114489	RelationalExpression	code < 0		5114460	0		<			
ANR	5114490	Identifier	code		5114460	0					
ANR	5114491	PrimaryExpression	0		5114460	1					
ANR	5114492	ReturnStatement	return code ;	248:8:7505:7516	5114460	1	True				
ANR	5114493	Identifier	code		5114460	0					
ANR	5114494	WhileStatement	"while ( ( code = gs_screen_currentpoint ( penum , & pt ) ) == 0 )"		5114460	3					
ANR	5114495	Condition	"( code = gs_screen_currentpoint ( penum , & pt ) ) == 0"	249:11:7529:7576	5114460	0	True				
ANR	5114496	EqualityExpression	"( code = gs_screen_currentpoint ( penum , & pt ) ) == 0"		5114460	0		==			
ANR	5114497	AssignmentExpression	"code = gs_screen_currentpoint ( penum , & pt )"		5114460	0		=			
ANR	5114498	Identifier	code		5114460	0					
ANR	5114499	CallExpression	"gs_screen_currentpoint ( penum , & pt )"		5114460	1					
ANR	5114500	Callee	gs_screen_currentpoint		5114460	0					
ANR	5114501	Identifier	gs_screen_currentpoint		5114460	0					
ANR	5114502	ArgumentList	penum		5114460	1					
ANR	5114503	Argument	penum		5114460	0					
ANR	5114504	Identifier	penum		5114460	0					
ANR	5114505	Argument	& pt		5114460	1					
ANR	5114506	UnaryOperationExpression	& pt		5114460	0					
ANR	5114507	UnaryOperator	&		5114460	0					
ANR	5114508	Identifier	pt		5114460	1					
ANR	5114509	PrimaryExpression	0		5114460	1					
ANR	5114510	IfStatement	"if ( ( code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) ) ) < 0 )"		5114460	1					
ANR	5114511	Condition	"( code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) ) ) < 0"	250:12:7591:7661	5114460	0	True				
ANR	5114512	RelationalExpression	"( code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) ) ) < 0"		5114460	0		<			
ANR	5114513	AssignmentExpression	"code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) )"		5114460	0		=			
ANR	5114514	Identifier	code		5114460	0					
ANR	5114515	CallExpression	"gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) )"		5114460	1					
ANR	5114516	Callee	gs_screen_next		5114460	0					
ANR	5114517	Identifier	gs_screen_next		5114460	0					
ANR	5114518	ArgumentList	penum		5114460	1					
ANR	5114519	Argument	penum		5114460	0					
ANR	5114520	Identifier	penum		5114460	0					
ANR	5114521	Argument	"( * phsp -> spot_function ) ( pt . x , pt . y )"		5114460	1					
ANR	5114522	CallExpression	"( * phsp -> spot_function ) ( pt . x , pt . y )"		5114460	0					
ANR	5114523	Callee	* phsp -> spot_function		5114460	0					
ANR	5114524	UnaryOperationExpression	* phsp -> spot_function		5114460	0					
ANR	5114525	UnaryOperator	*		5114460	0					
ANR	5114526	PtrMemberAccess	phsp -> spot_function		5114460	1					
ANR	5114527	Identifier	phsp		5114460	0					
ANR	5114528	Identifier	spot_function		5114460	1					
ANR	5114529	ArgumentList	pt . x		5114460	1					
ANR	5114530	Argument	pt . x		5114460	0					
ANR	5114531	MemberAccess	pt . x		5114460	0					
ANR	5114532	Identifier	pt		5114460	0					
ANR	5114533	Identifier	x		5114460	1					
ANR	5114534	Argument	pt . y		5114460	1					
ANR	5114535	MemberAccess	pt . y		5114460	0					
ANR	5114536	Identifier	pt		5114460	0					
ANR	5114537	Identifier	y		5114460	1					
ANR	5114538	PrimaryExpression	0		5114460	1					
ANR	5114539	ReturnStatement	return code ;	251:12:7676:7687	5114460	1	True				
ANR	5114540	Identifier	code		5114460	0					
ANR	5114541	ReturnStatement	return 0 ;	252:4:7693:7701	5114460	4	True				
ANR	5114542	PrimaryExpression	0		5114460	0					
ANR	5114543	ReturnType	int		5114460	1					
ANR	5114544	Identifier	gx_ht_process_screen_memory		5114460	2					
ANR	5114545	ParameterList	"gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem"		5114460	3					
ANR	5114546	Parameter	gs_screen_enum * penum	241:28:7270:7291	5114460	0	True				
ANR	5114547	ParameterType	gs_screen_enum *		5114460	0					
ANR	5114548	Identifier	penum		5114460	1					
ANR	5114549	Parameter	gs_gstate * pgs	241:52:7294:7308	5114460	1	True				
ANR	5114550	ParameterType	gs_gstate *		5114460	0					
ANR	5114551	Identifier	pgs		5114460	1					
ANR	5114552	Parameter	gs_screen_halftone * phsp	242:16:7327:7351	5114460	2	True				
ANR	5114553	ParameterType	gs_screen_halftone *		5114460	0					
ANR	5114554	Identifier	phsp		5114460	1					
ANR	5114555	Parameter	bool accurate	242:43:7354:7366	5114460	3	True				
ANR	5114556	ParameterType	bool		5114460	0					
ANR	5114557	Identifier	accurate		5114460	1					
ANR	5114558	Parameter	gs_memory_t * mem	242:58:7369:7385	5114460	4	True				
ANR	5114559	ParameterType	gs_memory_t *		5114460	0					
ANR	5114560	Identifier	mem		5114460	1					
ANR	5114561	CFGEntryNode	ENTRY		5114460		True				
ANR	5114562	CFGExitNode	EXIT		5114460		True				
ANR	5114563	Symbol	phsp		5114460						
ANR	5114564	Symbol	code		5114460						
ANR	5114565	Symbol	gs_screen_next		5114460						
ANR	5114566	Symbol	* phsp -> spot_function		5114460						
ANR	5114567	Symbol	accurate		5114460						
ANR	5114568	Symbol	pt		5114460						
ANR	5114569	Symbol	gs_screen_currentpoint		5114460						
ANR	5114570	Symbol	penum		5114460						
ANR	5114571	Symbol	gs_screen_init_memory		5114460						
ANR	5114572	Symbol	* phsp		5114460						
ANR	5114573	Symbol	phsp -> spot_function		5114460						
ANR	5114574	Symbol	& pt		5114460						
ANR	5114575	Symbol	mem		5114460						
ANR	5114576	Symbol	* * phsp		5114460						
ANR	5114577	Symbol	pt . x		5114460						
ANR	5114578	Symbol	pt . y		5114460						
ANR	5114579	Symbol	pgs		5114460						
ANR	5114580	Function	gx_ht_alloc_ht_order	260:0:7918:9501							
ANR	5114581	FunctionDef	"gx_ht_alloc_ht_order (gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , uint strip_shift , const gx_ht_order_procs_t * procs , gs_memory_t * mem)"		5114580	0					
ANR	5114582	CompoundStatement		264:0:8135:9501	5114580	0					
ANR	5114583	ExpressionStatement	porder -> threshold = NULL	265:4:8141:8165	5114580	0	True				
ANR	5114584	AssignmentExpression	porder -> threshold = NULL		5114580	0		=			
ANR	5114585	PtrMemberAccess	porder -> threshold		5114580	0					
ANR	5114586	Identifier	porder		5114580	0					
ANR	5114587	Identifier	threshold		5114580	1					
ANR	5114588	Identifier	NULL		5114580	1					
ANR	5114589	ExpressionStatement	porder -> width = width	266:4:8171:8192	5114580	1	True				
ANR	5114590	AssignmentExpression	porder -> width = width		5114580	0		=			
ANR	5114591	PtrMemberAccess	porder -> width		5114580	0					
ANR	5114592	Identifier	porder		5114580	0					
ANR	5114593	Identifier	width		5114580	1					
ANR	5114594	Identifier	width		5114580	1					
ANR	5114595	ExpressionStatement	porder -> height = height	267:4:8198:8221	5114580	2	True				
ANR	5114596	AssignmentExpression	porder -> height = height		5114580	0		=			
ANR	5114597	PtrMemberAccess	porder -> height		5114580	0					
ANR	5114598	Identifier	porder		5114580	0					
ANR	5114599	Identifier	height		5114580	1					
ANR	5114600	Identifier	height		5114580	1					
ANR	5114601	ExpressionStatement	porder -> raster = bitmap_raster ( width )	268:4:8227:8264	5114580	3	True				
ANR	5114602	AssignmentExpression	porder -> raster = bitmap_raster ( width )		5114580	0		=			
ANR	5114603	PtrMemberAccess	porder -> raster		5114580	0					
ANR	5114604	Identifier	porder		5114580	0					
ANR	5114605	Identifier	raster		5114580	1					
ANR	5114606	CallExpression	bitmap_raster ( width )		5114580	1					
ANR	5114607	Callee	bitmap_raster		5114580	0					
ANR	5114608	Identifier	bitmap_raster		5114580	0					
ANR	5114609	ArgumentList	width		5114580	1					
ANR	5114610	Argument	width		5114580	0					
ANR	5114611	Identifier	width		5114580	0					
ANR	5114612	ExpressionStatement	porder -> shift = strip_shift	269:4:8270:8297	5114580	4	True				
ANR	5114613	AssignmentExpression	porder -> shift = strip_shift		5114580	0		=			
ANR	5114614	PtrMemberAccess	porder -> shift		5114580	0					
ANR	5114615	Identifier	porder		5114580	0					
ANR	5114616	Identifier	shift		5114580	1					
ANR	5114617	Identifier	strip_shift		5114580	1					
ANR	5114618	ExpressionStatement	porder -> orig_height = porder -> height	270:4:8303:8339	5114580	5	True				
ANR	5114619	AssignmentExpression	porder -> orig_height = porder -> height		5114580	0		=			
ANR	5114620	PtrMemberAccess	porder -> orig_height		5114580	0					
ANR	5114621	Identifier	porder		5114580	0					
ANR	5114622	Identifier	orig_height		5114580	1					
ANR	5114623	PtrMemberAccess	porder -> height		5114580	1					
ANR	5114624	Identifier	porder		5114580	0					
ANR	5114625	Identifier	height		5114580	1					
ANR	5114626	ExpressionStatement	porder -> orig_shift = porder -> shift	271:4:8345:8379	5114580	6	True				
ANR	5114627	AssignmentExpression	porder -> orig_shift = porder -> shift		5114580	0		=			
ANR	5114628	PtrMemberAccess	porder -> orig_shift		5114580	0					
ANR	5114629	Identifier	porder		5114580	0					
ANR	5114630	Identifier	orig_shift		5114580	1					
ANR	5114631	PtrMemberAccess	porder -> shift		5114580	1					
ANR	5114632	Identifier	porder		5114580	0					
ANR	5114633	Identifier	shift		5114580	1					
ANR	5114634	ExpressionStatement	porder -> full_height = ht_order_full_height ( porder )	272:4:8385:8435	5114580	7	True				
ANR	5114635	AssignmentExpression	porder -> full_height = ht_order_full_height ( porder )		5114580	0		=			
ANR	5114636	PtrMemberAccess	porder -> full_height		5114580	0					
ANR	5114637	Identifier	porder		5114580	0					
ANR	5114638	Identifier	full_height		5114580	1					
ANR	5114639	CallExpression	ht_order_full_height ( porder )		5114580	1					
ANR	5114640	Callee	ht_order_full_height		5114580	0					
ANR	5114641	Identifier	ht_order_full_height		5114580	0					
ANR	5114642	ArgumentList	porder		5114580	1					
ANR	5114643	Argument	porder		5114580	0					
ANR	5114644	Identifier	porder		5114580	0					
ANR	5114645	ExpressionStatement	porder -> num_levels = num_levels	273:4:8441:8472	5114580	8	True				
ANR	5114646	AssignmentExpression	porder -> num_levels = num_levels		5114580	0		=			
ANR	5114647	PtrMemberAccess	porder -> num_levels		5114580	0					
ANR	5114648	Identifier	porder		5114580	0					
ANR	5114649	Identifier	num_levels		5114580	1					
ANR	5114650	Identifier	num_levels		5114580	1					
ANR	5114651	ExpressionStatement	porder -> num_bits = num_bits	274:4:8478:8505	5114580	9	True				
ANR	5114652	AssignmentExpression	porder -> num_bits = num_bits		5114580	0		=			
ANR	5114653	PtrMemberAccess	porder -> num_bits		5114580	0					
ANR	5114654	Identifier	porder		5114580	0					
ANR	5114655	Identifier	num_bits		5114580	1					
ANR	5114656	Identifier	num_bits		5114580	1					
ANR	5114657	ExpressionStatement	porder -> procs = procs	275:4:8511:8532	5114580	10	True				
ANR	5114658	AssignmentExpression	porder -> procs = procs		5114580	0		=			
ANR	5114659	PtrMemberAccess	porder -> procs		5114580	0					
ANR	5114660	Identifier	porder		5114580	0					
ANR	5114661	Identifier	procs		5114580	1					
ANR	5114662	Identifier	procs		5114580	1					
ANR	5114663	ExpressionStatement	porder -> data_memory = mem	276:4:8538:8563	5114580	11	True				
ANR	5114664	AssignmentExpression	porder -> data_memory = mem		5114580	0		=			
ANR	5114665	PtrMemberAccess	porder -> data_memory		5114580	0					
ANR	5114666	Identifier	porder		5114580	0					
ANR	5114667	Identifier	data_memory		5114580	1					
ANR	5114668	Identifier	mem		5114580	1					
ANR	5114669	IfStatement	if ( num_levels > 0 )		5114580	12					
ANR	5114670	Condition	num_levels > 0	278:8:8574:8587	5114580	0	True				
ANR	5114671	RelationalExpression	num_levels > 0		5114580	0		>			
ANR	5114672	Identifier	num_levels		5114580	0					
ANR	5114673	PrimaryExpression	0		5114580	1					
ANR	5114674	CompoundStatement		15:24:454:454	5114580	1					
ANR	5114675	ExpressionStatement	"porder -> levels = ( uint * ) gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"	279:8:8600:8766	5114580	0	True				
ANR	5114676	AssignmentExpression	"porder -> levels = ( uint * ) gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"		5114580	0		=			
ANR	5114677	PtrMemberAccess	porder -> levels		5114580	0					
ANR	5114678	Identifier	porder		5114580	0					
ANR	5114679	Identifier	levels		5114580	1					
ANR	5114680	CastExpression	"( uint * ) gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"		5114580	1					
ANR	5114681	CastTarget	uint *		5114580	0					
ANR	5114682	CallExpression	"gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"		5114580	1					
ANR	5114683	Callee	gs_alloc_byte_array		5114580	0					
ANR	5114684	Identifier	gs_alloc_byte_array		5114580	0					
ANR	5114685	ArgumentList	mem		5114580	1					
ANR	5114686	Argument	mem		5114580	0					
ANR	5114687	Identifier	mem		5114580	0					
ANR	5114688	Argument	porder -> num_levels		5114580	1					
ANR	5114689	PtrMemberAccess	porder -> num_levels		5114580	0					
ANR	5114690	Identifier	porder		5114580	0					
ANR	5114691	Identifier	num_levels		5114580	1					
ANR	5114692	Argument	sizeof ( uint )		5114580	2					
ANR	5114693	SizeofExpression	sizeof ( uint )		5114580	0					
ANR	5114694	Sizeof	sizeof		5114580	0					
ANR	5114695	SizeofOperand	uint		5114580	1					
ANR	5114696	Argument	"""alloc_ht_order_data(levels)"""		5114580	3					
ANR	5114697	PrimaryExpression	"""alloc_ht_order_data(levels)"""		5114580	0					
ANR	5114698	IfStatement	if ( porder -> levels == 0 )		5114580	1					
ANR	5114699	Condition	porder -> levels == 0	282:12:8780:8798	5114580	0	True				
ANR	5114700	EqualityExpression	porder -> levels == 0		5114580	0		==			
ANR	5114701	PtrMemberAccess	porder -> levels		5114580	0					
ANR	5114702	Identifier	porder		5114580	0					
ANR	5114703	Identifier	levels		5114580	1					
ANR	5114704	PrimaryExpression	0		5114580	1					
ANR	5114705	ExpressionStatement	return_error ( gs_error_VMerror )	283:12:8813:8843	5114580	1	True				
ANR	5114706	CallExpression	return_error ( gs_error_VMerror )		5114580	0					
ANR	5114707	Callee	return_error		5114580	0					
ANR	5114708	Identifier	return_error		5114580	0					
ANR	5114709	ArgumentList	gs_error_VMerror		5114580	1					
ANR	5114710	Argument	gs_error_VMerror		5114580	0					
ANR	5114711	Identifier	gs_error_VMerror		5114580	0					
ANR	5114712	ExpressionStatement	"memset ( porder -> levels , 0 , sizeof ( uint ) * porder -> num_levels )"	284:8:8853:8913	5114580	2	True				
ANR	5114713	CallExpression	"memset ( porder -> levels , 0 , sizeof ( uint ) * porder -> num_levels )"		5114580	0					
ANR	5114714	Callee	memset		5114580	0					
ANR	5114715	Identifier	memset		5114580	0					
ANR	5114716	ArgumentList	porder -> levels		5114580	1					
ANR	5114717	Argument	porder -> levels		5114580	0					
ANR	5114718	PtrMemberAccess	porder -> levels		5114580	0					
ANR	5114719	Identifier	porder		5114580	0					
ANR	5114720	Identifier	levels		5114580	1					
ANR	5114721	Argument	0		5114580	1					
ANR	5114722	PrimaryExpression	0		5114580	0					
ANR	5114723	Argument	sizeof ( uint ) * porder -> num_levels		5114580	2					
ANR	5114724	MultiplicativeExpression	sizeof ( uint ) * porder -> num_levels		5114580	0		*			
ANR	5114725	SizeofExpression	sizeof ( uint )		5114580	0					
ANR	5114726	Sizeof	sizeof		5114580	0					
ANR	5114727	SizeofOperand	uint		5114580	1					
ANR	5114728	PtrMemberAccess	porder -> num_levels		5114580	1					
ANR	5114729	Identifier	porder		5114580	0					
ANR	5114730	Identifier	num_levels		5114580	1					
ANR	5114731	ElseStatement	else		5114580	0					
ANR	5114732	ExpressionStatement	porder -> levels = 0	286:8:8934:8952	5114580	0	True				
ANR	5114733	AssignmentExpression	porder -> levels = 0		5114580	0		=			
ANR	5114734	PtrMemberAccess	porder -> levels		5114580	0					
ANR	5114735	Identifier	porder		5114580	0					
ANR	5114736	Identifier	levels		5114580	1					
ANR	5114737	PrimaryExpression	0		5114580	1					
ANR	5114738	IfStatement	if ( num_bits > 0 )		5114580	13					
ANR	5114739	Condition	num_bits > 0	288:8:8963:8974	5114580	0	True				
ANR	5114740	RelationalExpression	num_bits > 0		5114580	0		>			
ANR	5114741	Identifier	num_bits		5114580	0					
ANR	5114742	PrimaryExpression	0		5114580	1					
ANR	5114743	CompoundStatement		25:22:841:841	5114580	1					
ANR	5114744	ExpressionStatement	"porder -> bit_data = gs_alloc_byte_array ( mem , porder -> num_bits , porder -> procs -> bit_data_elt_size , ""alloc_ht_order_data(bit_data)"" )"	289:8:8987:9191	5114580	0	True				
ANR	5114745	AssignmentExpression	"porder -> bit_data = gs_alloc_byte_array ( mem , porder -> num_bits , porder -> procs -> bit_data_elt_size , ""alloc_ht_order_data(bit_data)"" )"		5114580	0		=			
ANR	5114746	PtrMemberAccess	porder -> bit_data		5114580	0					
ANR	5114747	Identifier	porder		5114580	0					
ANR	5114748	Identifier	bit_data		5114580	1					
ANR	5114749	CallExpression	"gs_alloc_byte_array ( mem , porder -> num_bits , porder -> procs -> bit_data_elt_size , ""alloc_ht_order_data(bit_data)"" )"		5114580	1					
ANR	5114750	Callee	gs_alloc_byte_array		5114580	0					
ANR	5114751	Identifier	gs_alloc_byte_array		5114580	0					
ANR	5114752	ArgumentList	mem		5114580	1					
ANR	5114753	Argument	mem		5114580	0					
ANR	5114754	Identifier	mem		5114580	0					
ANR	5114755	Argument	porder -> num_bits		5114580	1					
ANR	5114756	PtrMemberAccess	porder -> num_bits		5114580	0					
ANR	5114757	Identifier	porder		5114580	0					
ANR	5114758	Identifier	num_bits		5114580	1					
ANR	5114759	Argument	porder -> procs -> bit_data_elt_size		5114580	2					
ANR	5114760	PtrMemberAccess	porder -> procs -> bit_data_elt_size		5114580	0					
ANR	5114761	PtrMemberAccess	porder -> procs		5114580	0					
ANR	5114762	Identifier	porder		5114580	0					
ANR	5114763	Identifier	procs		5114580	1					
ANR	5114764	Identifier	bit_data_elt_size		5114580	1					
ANR	5114765	Argument	"""alloc_ht_order_data(bit_data)"""		5114580	3					
ANR	5114766	PrimaryExpression	"""alloc_ht_order_data(bit_data)"""		5114580	0					
ANR	5114767	IfStatement	if ( porder -> bit_data == 0 )		5114580	1					
ANR	5114768	Condition	porder -> bit_data == 0	293:12:9205:9225	5114580	0	True				
ANR	5114769	EqualityExpression	porder -> bit_data == 0		5114580	0		==			
ANR	5114770	PtrMemberAccess	porder -> bit_data		5114580	0					
ANR	5114771	Identifier	porder		5114580	0					
ANR	5114772	Identifier	bit_data		5114580	1					
ANR	5114773	PrimaryExpression	0		5114580	1					
ANR	5114774	CompoundStatement		30:35:1092:1092	5114580	1					
ANR	5114775	ExpressionStatement	"gs_free_object ( mem , porder -> levels , ""alloc_ht_order_data(levels)"" )"	294:12:9242:9308	5114580	0	True				
ANR	5114776	CallExpression	"gs_free_object ( mem , porder -> levels , ""alloc_ht_order_data(levels)"" )"		5114580	0					
ANR	5114777	Callee	gs_free_object		5114580	0					
ANR	5114778	Identifier	gs_free_object		5114580	0					
ANR	5114779	ArgumentList	mem		5114580	1					
ANR	5114780	Argument	mem		5114580	0					
ANR	5114781	Identifier	mem		5114580	0					
ANR	5114782	Argument	porder -> levels		5114580	1					
ANR	5114783	PtrMemberAccess	porder -> levels		5114580	0					
ANR	5114784	Identifier	porder		5114580	0					
ANR	5114785	Identifier	levels		5114580	1					
ANR	5114786	Argument	"""alloc_ht_order_data(levels)"""		5114580	2					
ANR	5114787	PrimaryExpression	"""alloc_ht_order_data(levels)"""		5114580	0					
ANR	5114788	ExpressionStatement	porder -> levels = 0	295:12:9322:9340	5114580	1	True				
ANR	5114789	AssignmentExpression	porder -> levels = 0		5114580	0		=			
ANR	5114790	PtrMemberAccess	porder -> levels		5114580	0					
ANR	5114791	Identifier	porder		5114580	0					
ANR	5114792	Identifier	levels		5114580	1					
ANR	5114793	PrimaryExpression	0		5114580	1					
ANR	5114794	ExpressionStatement	return_error ( gs_error_VMerror )	296:12:9354:9384	5114580	2	True				
ANR	5114795	CallExpression	return_error ( gs_error_VMerror )		5114580	0					
ANR	5114796	Callee	return_error		5114580	0					
ANR	5114797	Identifier	return_error		5114580	0					
ANR	5114798	ArgumentList	gs_error_VMerror		5114580	1					
ANR	5114799	Argument	gs_error_VMerror		5114580	0					
ANR	5114800	Identifier	gs_error_VMerror		5114580	0					
ANR	5114801	ElseStatement	else		5114580	0					
ANR	5114802	ExpressionStatement	porder -> bit_data = 0	299:8:9415:9435	5114580	0	True				
ANR	5114803	AssignmentExpression	porder -> bit_data = 0		5114580	0		=			
ANR	5114804	PtrMemberAccess	porder -> bit_data		5114580	0					
ANR	5114805	Identifier	porder		5114580	0					
ANR	5114806	Identifier	bit_data		5114580	1					
ANR	5114807	PrimaryExpression	0		5114580	1					
ANR	5114808	ExpressionStatement	porder -> cache = 0	301:4:9442:9459	5114580	14	True				
ANR	5114809	AssignmentExpression	porder -> cache = 0		5114580	0		=			
ANR	5114810	PtrMemberAccess	porder -> cache		5114580	0					
ANR	5114811	Identifier	porder		5114580	0					
ANR	5114812	Identifier	cache		5114580	1					
ANR	5114813	PrimaryExpression	0		5114580	1					
ANR	5114814	ExpressionStatement	porder -> transfer = 0	302:4:9465:9485	5114580	15	True				
ANR	5114815	AssignmentExpression	porder -> transfer = 0		5114580	0		=			
ANR	5114816	PtrMemberAccess	porder -> transfer		5114580	0					
ANR	5114817	Identifier	porder		5114580	0					
ANR	5114818	Identifier	transfer		5114580	1					
ANR	5114819	PrimaryExpression	0		5114580	1					
ANR	5114820	ReturnStatement	return 0 ;	303:4:9491:9499	5114580	16	True				
ANR	5114821	PrimaryExpression	0		5114580	0					
ANR	5114822	ReturnType	int		5114580	1					
ANR	5114823	Identifier	gx_ht_alloc_ht_order		5114580	2					
ANR	5114824	ParameterList	"gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , uint strip_shift , const gx_ht_order_procs_t * procs , gs_memory_t * mem"		5114580	3					
ANR	5114825	Parameter	gx_ht_order * porder	261:21:7943:7962	5114580	0	True				
ANR	5114826	ParameterType	gx_ht_order *		5114580	0					
ANR	5114827	Identifier	porder		5114580	1					
ANR	5114828	Parameter	uint width	261:43:7965:7974	5114580	1	True				
ANR	5114829	ParameterType	uint		5114580	0					
ANR	5114830	Identifier	width		5114580	1					
ANR	5114831	Parameter	uint height	261:55:7977:7987	5114580	2	True				
ANR	5114832	ParameterType	uint		5114580	0					
ANR	5114833	Identifier	height		5114580	1					
ANR	5114834	Parameter	uint num_levels	262:21:8011:8025	5114580	3	True				
ANR	5114835	ParameterType	uint		5114580	0					
ANR	5114836	Identifier	num_levels		5114580	1					
ANR	5114837	Parameter	uint num_bits	262:38:8028:8040	5114580	4	True				
ANR	5114838	ParameterType	uint		5114580	0					
ANR	5114839	Identifier	num_bits		5114580	1					
ANR	5114840	Parameter	uint strip_shift	262:53:8043:8058	5114580	5	True				
ANR	5114841	ParameterType	uint		5114580	0					
ANR	5114842	Identifier	strip_shift		5114580	1					
ANR	5114843	Parameter	const gx_ht_order_procs_t * procs	263:21:8082:8113	5114580	6	True				
ANR	5114844	ParameterType	const gx_ht_order_procs_t *		5114580	0					
ANR	5114845	Identifier	procs		5114580	1					
ANR	5114846	Parameter	gs_memory_t * mem	263:55:8116:8132	5114580	7	True				
ANR	5114847	ParameterType	gs_memory_t *		5114580	0					
ANR	5114848	Identifier	mem		5114580	1					
ANR	5114849	CFGEntryNode	ENTRY		5114580		True				
ANR	5114850	CFGExitNode	EXIT		5114580		True				
ANR	5114851	Symbol	procs		5114580						
ANR	5114852	Symbol	porder -> num_levels		5114580						
ANR	5114853	Symbol	porder -> procs		5114580						
ANR	5114854	Symbol	* * porder		5114580						
ANR	5114855	Symbol	porder -> width		5114580						
ANR	5114856	Symbol	porder -> num_bits		5114580						
ANR	5114857	Symbol	porder -> shift		5114580						
ANR	5114858	Symbol	porder -> orig_height		5114580						
ANR	5114859	Symbol	ht_order_full_height		5114580						
ANR	5114860	Symbol	porder -> levels		5114580						
ANR	5114861	Symbol	porder -> bit_data		5114580						
ANR	5114862	Symbol	mem		5114580						
ANR	5114863	Symbol	porder -> full_height		5114580						
ANR	5114864	Symbol	porder -> procs -> bit_data_elt_size		5114580						
ANR	5114865	Symbol	porder -> orig_shift		5114580						
ANR	5114866	Symbol	height		5114580						
ANR	5114867	Symbol	NULL		5114580						
ANR	5114868	Symbol	porder -> cache		5114580						
ANR	5114869	Symbol	porder -> raster		5114580						
ANR	5114870	Symbol	porder -> height		5114580						
ANR	5114871	Symbol	porder		5114580						
ANR	5114872	Symbol	porder -> transfer		5114580						
ANR	5114873	Symbol	strip_shift		5114580						
ANR	5114874	Symbol	bitmap_raster		5114580						
ANR	5114875	Symbol	porder -> threshold		5114580						
ANR	5114876	Symbol	gs_error_VMerror		5114580						
ANR	5114877	Symbol	* porder -> procs		5114580						
ANR	5114878	Symbol	width		5114580						
ANR	5114879	Symbol	num_bits		5114580						
ANR	5114880	Symbol	gs_alloc_byte_array		5114580						
ANR	5114881	Symbol	* porder		5114580						
ANR	5114882	Symbol	porder -> data_memory		5114580						
ANR	5114883	Symbol	num_levels		5114580						
ANR	5114884	Function	gx_ht_copy_ht_order	309:0:9550:10229							
ANR	5114885	FunctionDef	"gx_ht_copy_ht_order (gx_ht_order * pdest , gx_ht_order * psrc , gs_memory_t * mem)"		5114884	0					
ANR	5114886	CompoundStatement		311:0:9641:10229	5114884	0					
ANR	5114887	IdentifierDeclStatement	int code ;	312:4:9647:9655	5114884	0	True				
ANR	5114888	IdentifierDecl	code		5114884	0					
ANR	5114889	IdentifierDeclType	int		5114884	0					
ANR	5114890	Identifier	code		5114884	1					
ANR	5114891	ExpressionStatement	* pdest = * psrc	314:4:9662:9676	5114884	1	True				
ANR	5114892	AssignmentExpression	* pdest = * psrc		5114884	0		=			
ANR	5114893	UnaryOperationExpression	* pdest		5114884	0					
ANR	5114894	UnaryOperator	*		5114884	0					
ANR	5114895	Identifier	pdest		5114884	1					
ANR	5114896	UnaryOperationExpression	* psrc		5114884	1					
ANR	5114897	UnaryOperator	*		5114884	0					
ANR	5114898	Identifier	psrc		5114884	1					
ANR	5114899	ExpressionStatement	"code = gx_ht_alloc_ht_order ( pdest , psrc -> width , psrc -> height , psrc -> num_levels , psrc -> num_bits , psrc -> shift , psrc -> procs , mem )"	316:4:9683:9851	5114884	2	True				
ANR	5114900	AssignmentExpression	"code = gx_ht_alloc_ht_order ( pdest , psrc -> width , psrc -> height , psrc -> num_levels , psrc -> num_bits , psrc -> shift , psrc -> procs , mem )"		5114884	0		=			
ANR	5114901	Identifier	code		5114884	0					
ANR	5114902	CallExpression	"gx_ht_alloc_ht_order ( pdest , psrc -> width , psrc -> height , psrc -> num_levels , psrc -> num_bits , psrc -> shift , psrc -> procs , mem )"		5114884	1					
ANR	5114903	Callee	gx_ht_alloc_ht_order		5114884	0					
ANR	5114904	Identifier	gx_ht_alloc_ht_order		5114884	0					
ANR	5114905	ArgumentList	pdest		5114884	1					
ANR	5114906	Argument	pdest		5114884	0					
ANR	5114907	Identifier	pdest		5114884	0					
ANR	5114908	Argument	psrc -> width		5114884	1					
ANR	5114909	PtrMemberAccess	psrc -> width		5114884	0					
ANR	5114910	Identifier	psrc		5114884	0					
ANR	5114911	Identifier	width		5114884	1					
ANR	5114912	Argument	psrc -> height		5114884	2					
ANR	5114913	PtrMemberAccess	psrc -> height		5114884	0					
ANR	5114914	Identifier	psrc		5114884	0					
ANR	5114915	Identifier	height		5114884	1					
ANR	5114916	Argument	psrc -> num_levels		5114884	3					
ANR	5114917	PtrMemberAccess	psrc -> num_levels		5114884	0					
ANR	5114918	Identifier	psrc		5114884	0					
ANR	5114919	Identifier	num_levels		5114884	1					
ANR	5114920	Argument	psrc -> num_bits		5114884	4					
ANR	5114921	PtrMemberAccess	psrc -> num_bits		5114884	0					
ANR	5114922	Identifier	psrc		5114884	0					
ANR	5114923	Identifier	num_bits		5114884	1					
ANR	5114924	Argument	psrc -> shift		5114884	5					
ANR	5114925	PtrMemberAccess	psrc -> shift		5114884	0					
ANR	5114926	Identifier	psrc		5114884	0					
ANR	5114927	Identifier	shift		5114884	1					
ANR	5114928	Argument	psrc -> procs		5114884	6					
ANR	5114929	PtrMemberAccess	psrc -> procs		5114884	0					
ANR	5114930	Identifier	psrc		5114884	0					
ANR	5114931	Identifier	procs		5114884	1					
ANR	5114932	Argument	mem		5114884	7					
ANR	5114933	Identifier	mem		5114884	0					
ANR	5114934	IfStatement	if ( code < 0 )		5114884	3					
ANR	5114935	Condition	code < 0	319:8:9861:9868	5114884	0	True				
ANR	5114936	RelationalExpression	code < 0		5114884	0		<			
ANR	5114937	Identifier	code		5114884	0					
ANR	5114938	PrimaryExpression	0		5114884	1					
ANR	5114939	ReturnStatement	return code ;	320:8:9879:9890	5114884	1	True				
ANR	5114940	Identifier	code		5114884	0					
ANR	5114941	IfStatement	if ( pdest -> levels != 0 )		5114884	4					
ANR	5114942	Condition	pdest -> levels != 0	321:8:9900:9917	5114884	0	True				
ANR	5114943	EqualityExpression	pdest -> levels != 0		5114884	0		!=			
ANR	5114944	PtrMemberAccess	pdest -> levels		5114884	0					
ANR	5114945	Identifier	pdest		5114884	0					
ANR	5114946	Identifier	levels		5114884	1					
ANR	5114947	PrimaryExpression	0		5114884	1					
ANR	5114948	ExpressionStatement	"memcpy ( pdest -> levels , psrc -> levels , psrc -> num_levels * sizeof ( uint ) )"	322:8:9928:9996	5114884	1	True				
ANR	5114949	CallExpression	"memcpy ( pdest -> levels , psrc -> levels , psrc -> num_levels * sizeof ( uint ) )"		5114884	0					
ANR	5114950	Callee	memcpy		5114884	0					
ANR	5114951	Identifier	memcpy		5114884	0					
ANR	5114952	ArgumentList	pdest -> levels		5114884	1					
ANR	5114953	Argument	pdest -> levels		5114884	0					
ANR	5114954	PtrMemberAccess	pdest -> levels		5114884	0					
ANR	5114955	Identifier	pdest		5114884	0					
ANR	5114956	Identifier	levels		5114884	1					
ANR	5114957	Argument	psrc -> levels		5114884	1					
ANR	5114958	PtrMemberAccess	psrc -> levels		5114884	0					
ANR	5114959	Identifier	psrc		5114884	0					
ANR	5114960	Identifier	levels		5114884	1					
ANR	5114961	Argument	psrc -> num_levels * sizeof ( uint )		5114884	2					
ANR	5114962	MultiplicativeExpression	psrc -> num_levels * sizeof ( uint )		5114884	0		*			
ANR	5114963	PtrMemberAccess	psrc -> num_levels		5114884	0					
ANR	5114964	Identifier	psrc		5114884	0					
ANR	5114965	Identifier	num_levels		5114884	1					
ANR	5114966	SizeofExpression	sizeof ( uint )		5114884	1					
ANR	5114967	Sizeof	sizeof		5114884	0					
ANR	5114968	SizeofOperand	uint		5114884	1					
ANR	5114969	IfStatement	if ( pdest -> bit_data != 0 )		5114884	5					
ANR	5114970	Condition	pdest -> bit_data != 0	323:8:10006:10025	5114884	0	True				
ANR	5114971	EqualityExpression	pdest -> bit_data != 0		5114884	0		!=			
ANR	5114972	PtrMemberAccess	pdest -> bit_data		5114884	0					
ANR	5114973	Identifier	pdest		5114884	0					
ANR	5114974	Identifier	bit_data		5114884	1					
ANR	5114975	PrimaryExpression	0		5114884	1					
ANR	5114976	ExpressionStatement	"memcpy ( pdest -> bit_data , psrc -> bit_data , psrc -> num_bits * psrc -> procs -> bit_data_elt_size )"	324:8:10036:10140	5114884	1	True				
ANR	5114977	CallExpression	"memcpy ( pdest -> bit_data , psrc -> bit_data , psrc -> num_bits * psrc -> procs -> bit_data_elt_size )"		5114884	0					
ANR	5114978	Callee	memcpy		5114884	0					
ANR	5114979	Identifier	memcpy		5114884	0					
ANR	5114980	ArgumentList	pdest -> bit_data		5114884	1					
ANR	5114981	Argument	pdest -> bit_data		5114884	0					
ANR	5114982	PtrMemberAccess	pdest -> bit_data		5114884	0					
ANR	5114983	Identifier	pdest		5114884	0					
ANR	5114984	Identifier	bit_data		5114884	1					
ANR	5114985	Argument	psrc -> bit_data		5114884	1					
ANR	5114986	PtrMemberAccess	psrc -> bit_data		5114884	0					
ANR	5114987	Identifier	psrc		5114884	0					
ANR	5114988	Identifier	bit_data		5114884	1					
ANR	5114989	Argument	psrc -> num_bits * psrc -> procs -> bit_data_elt_size		5114884	2					
ANR	5114990	MultiplicativeExpression	psrc -> num_bits * psrc -> procs -> bit_data_elt_size		5114884	0		*			
ANR	5114991	PtrMemberAccess	psrc -> num_bits		5114884	0					
ANR	5114992	Identifier	psrc		5114884	0					
ANR	5114993	Identifier	num_bits		5114884	1					
ANR	5114994	PtrMemberAccess	psrc -> procs -> bit_data_elt_size		5114884	1					
ANR	5114995	PtrMemberAccess	psrc -> procs		5114884	0					
ANR	5114996	Identifier	psrc		5114884	0					
ANR	5114997	Identifier	procs		5114884	1					
ANR	5114998	Identifier	bit_data_elt_size		5114884	1					
ANR	5114999	ExpressionStatement	pdest -> transfer = psrc -> transfer	326:4:10146:10178	5114884	6	True				
ANR	5115000	AssignmentExpression	pdest -> transfer = psrc -> transfer		5114884	0		=			
ANR	5115001	PtrMemberAccess	pdest -> transfer		5114884	0					
ANR	5115002	Identifier	pdest		5114884	0					
ANR	5115003	Identifier	transfer		5114884	1					
ANR	5115004	PtrMemberAccess	psrc -> transfer		5114884	1					
ANR	5115005	Identifier	psrc		5114884	0					
ANR	5115006	Identifier	transfer		5114884	1					
ANR	5115007	ExpressionStatement	rc_increment ( pdest -> transfer )	327:4:10184:10213	5114884	7	True				
ANR	5115008	CallExpression	rc_increment ( pdest -> transfer )		5114884	0					
ANR	5115009	Callee	rc_increment		5114884	0					
ANR	5115010	Identifier	rc_increment		5114884	0					
ANR	5115011	ArgumentList	pdest -> transfer		5114884	1					
ANR	5115012	Argument	pdest -> transfer		5114884	0					
ANR	5115013	PtrMemberAccess	pdest -> transfer		5114884	0					
ANR	5115014	Identifier	pdest		5114884	0					
ANR	5115015	Identifier	transfer		5114884	1					
ANR	5115016	ReturnStatement	return 0 ;	328:4:10219:10227	5114884	8	True				
ANR	5115017	PrimaryExpression	0		5114884	0					
ANR	5115018	ReturnType	static int		5114884	1					
ANR	5115019	Identifier	gx_ht_copy_ht_order		5114884	2					
ANR	5115020	ParameterList	"gx_ht_order * pdest , gx_ht_order * psrc , gs_memory_t * mem"		5114884	3					
ANR	5115021	Parameter	gx_ht_order * pdest	310:20:9581:9599	5114884	0	True				
ANR	5115022	ParameterType	gx_ht_order *		5114884	0					
ANR	5115023	Identifier	pdest		5114884	1					
ANR	5115024	Parameter	gx_ht_order * psrc	310:41:9602:9619	5114884	1	True				
ANR	5115025	ParameterType	gx_ht_order *		5114884	0					
ANR	5115026	Identifier	psrc		5114884	1					
ANR	5115027	Parameter	gs_memory_t * mem	310:61:9622:9638	5114884	2	True				
ANR	5115028	ParameterType	gs_memory_t *		5114884	0					
ANR	5115029	Identifier	mem		5114884	1					
ANR	5115030	CFGEntryNode	ENTRY		5114884		True				
ANR	5115031	CFGExitNode	EXIT		5114884		True				
ANR	5115032	Symbol	psrc		5114884						
ANR	5115033	Symbol	code		5114884						
ANR	5115034	Symbol	psrc -> procs		5114884						
ANR	5115035	Symbol	pdest -> bit_data		5114884						
ANR	5115036	Symbol	psrc -> height		5114884						
ANR	5115037	Symbol	* pdest		5114884						
ANR	5115038	Symbol	psrc -> transfer		5114884						
ANR	5115039	Symbol	pdest -> levels		5114884						
ANR	5115040	Symbol	* psrc		5114884						
ANR	5115041	Symbol	pdest		5114884						
ANR	5115042	Symbol	psrc -> num_levels		5114884						
ANR	5115043	Symbol	psrc -> num_bits		5114884						
ANR	5115044	Symbol	psrc -> bit_data		5114884						
ANR	5115045	Symbol	* psrc -> procs		5114884						
ANR	5115046	Symbol	mem		5114884						
ANR	5115047	Symbol	pdest -> transfer		5114884						
ANR	5115048	Symbol	psrc -> levels		5114884						
ANR	5115049	Symbol	psrc -> shift		5114884						
ANR	5115050	Symbol	* * psrc		5114884						
ANR	5115051	Symbol	psrc -> procs -> bit_data_elt_size		5114884						
ANR	5115052	Symbol	gx_ht_alloc_ht_order		5114884						
ANR	5115053	Symbol	psrc -> width		5114884						
ANR	5115054	Function	gx_ht_move_ht_order	335:0:10371:11117							
ANR	5115055	FunctionDef	"gx_ht_move_ht_order (gx_ht_order * pdest , gx_ht_order * psrc)"		5115054	0					
ANR	5115056	CompoundStatement		337:0:10444:11117	5115054	0					
ANR	5115057	IdentifierDeclStatement	"uint width = psrc -> width , height = psrc -> height , shift = psrc -> shift ;"	338:4:10450:10521	5115054	0	True				
ANR	5115058	IdentifierDecl	width = psrc -> width		5115054	0					
ANR	5115059	IdentifierDeclType	uint		5115054	0					
ANR	5115060	Identifier	width		5115054	1					
ANR	5115061	AssignmentExpression	width = psrc -> width		5115054	2		=			
ANR	5115062	Identifier	width		5115054	0					
ANR	5115063	PtrMemberAccess	psrc -> width		5115054	1					
ANR	5115064	Identifier	psrc		5115054	0					
ANR	5115065	Identifier	width		5115054	1					
ANR	5115066	IdentifierDecl	height = psrc -> height		5115054	1					
ANR	5115067	IdentifierDeclType	uint		5115054	0					
ANR	5115068	Identifier	height		5115054	1					
ANR	5115069	AssignmentExpression	height = psrc -> height		5115054	2		=			
ANR	5115070	Identifier	height		5115054	0					
ANR	5115071	PtrMemberAccess	psrc -> height		5115054	1					
ANR	5115072	Identifier	psrc		5115054	0					
ANR	5115073	Identifier	height		5115054	1					
ANR	5115074	IdentifierDecl	shift = psrc -> shift		5115054	2					
ANR	5115075	IdentifierDeclType	uint		5115054	0					
ANR	5115076	Identifier	shift		5115054	1					
ANR	5115077	AssignmentExpression	shift = psrc -> shift		5115054	2		=			
ANR	5115078	Identifier	shift		5115054	0					
ANR	5115079	PtrMemberAccess	psrc -> shift		5115054	1					
ANR	5115080	Identifier	psrc		5115054	0					
ANR	5115081	Identifier	shift		5115054	1					
ANR	5115082	ExpressionStatement	pdest -> params = psrc -> params	340:4:10528:10556	5115054	1	True				
ANR	5115083	AssignmentExpression	pdest -> params = psrc -> params		5115054	0		=			
ANR	5115084	PtrMemberAccess	pdest -> params		5115054	0					
ANR	5115085	Identifier	pdest		5115054	0					
ANR	5115086	Identifier	params		5115054	1					
ANR	5115087	PtrMemberAccess	psrc -> params		5115054	1					
ANR	5115088	Identifier	psrc		5115054	0					
ANR	5115089	Identifier	params		5115054	1					
ANR	5115090	ExpressionStatement	pdest -> width = width	341:4:10562:10582	5115054	2	True				
ANR	5115091	AssignmentExpression	pdest -> width = width		5115054	0		=			
ANR	5115092	PtrMemberAccess	pdest -> width		5115054	0					
ANR	5115093	Identifier	pdest		5115054	0					
ANR	5115094	Identifier	width		5115054	1					
ANR	5115095	Identifier	width		5115054	1					
ANR	5115096	ExpressionStatement	pdest -> height = height	342:4:10588:10610	5115054	3	True				
ANR	5115097	AssignmentExpression	pdest -> height = height		5115054	0		=			
ANR	5115098	PtrMemberAccess	pdest -> height		5115054	0					
ANR	5115099	Identifier	pdest		5115054	0					
ANR	5115100	Identifier	height		5115054	1					
ANR	5115101	Identifier	height		5115054	1					
ANR	5115102	ExpressionStatement	pdest -> raster = bitmap_raster ( width )	343:4:10616:10652	5115054	4	True				
ANR	5115103	AssignmentExpression	pdest -> raster = bitmap_raster ( width )		5115054	0		=			
ANR	5115104	PtrMemberAccess	pdest -> raster		5115054	0					
ANR	5115105	Identifier	pdest		5115054	0					
ANR	5115106	Identifier	raster		5115054	1					
ANR	5115107	CallExpression	bitmap_raster ( width )		5115054	1					
ANR	5115108	Callee	bitmap_raster		5115054	0					
ANR	5115109	Identifier	bitmap_raster		5115054	0					
ANR	5115110	ArgumentList	width		5115054	1					
ANR	5115111	Argument	width		5115054	0					
ANR	5115112	Identifier	width		5115054	0					
ANR	5115113	ExpressionStatement	pdest -> shift = shift	344:4:10658:10678	5115054	5	True				
ANR	5115114	AssignmentExpression	pdest -> shift = shift		5115054	0		=			
ANR	5115115	PtrMemberAccess	pdest -> shift		5115054	0					
ANR	5115116	Identifier	pdest		5115054	0					
ANR	5115117	Identifier	shift		5115054	1					
ANR	5115118	Identifier	shift		5115054	1					
ANR	5115119	ExpressionStatement	pdest -> orig_height = height	345:4:10684:10711	5115054	6	True				
ANR	5115120	AssignmentExpression	pdest -> orig_height = height		5115054	0		=			
ANR	5115121	PtrMemberAccess	pdest -> orig_height		5115054	0					
ANR	5115122	Identifier	pdest		5115054	0					
ANR	5115123	Identifier	orig_height		5115054	1					
ANR	5115124	Identifier	height		5115054	1					
ANR	5115125	ExpressionStatement	pdest -> orig_shift = shift	346:4:10717:10742	5115054	7	True				
ANR	5115126	AssignmentExpression	pdest -> orig_shift = shift		5115054	0		=			
ANR	5115127	PtrMemberAccess	pdest -> orig_shift		5115054	0					
ANR	5115128	Identifier	pdest		5115054	0					
ANR	5115129	Identifier	orig_shift		5115054	1					
ANR	5115130	Identifier	shift		5115054	1					
ANR	5115131	ExpressionStatement	pdest -> full_height = ht_order_full_height ( pdest )	347:4:10748:10796	5115054	8	True				
ANR	5115132	AssignmentExpression	pdest -> full_height = ht_order_full_height ( pdest )		5115054	0		=			
ANR	5115133	PtrMemberAccess	pdest -> full_height		5115054	0					
ANR	5115134	Identifier	pdest		5115054	0					
ANR	5115135	Identifier	full_height		5115054	1					
ANR	5115136	CallExpression	ht_order_full_height ( pdest )		5115054	1					
ANR	5115137	Callee	ht_order_full_height		5115054	0					
ANR	5115138	Identifier	ht_order_full_height		5115054	0					
ANR	5115139	ArgumentList	pdest		5115054	1					
ANR	5115140	Argument	pdest		5115054	0					
ANR	5115141	Identifier	pdest		5115054	0					
ANR	5115142	ExpressionStatement	pdest -> num_levels = psrc -> num_levels	348:4:10802:10838	5115054	9	True				
ANR	5115143	AssignmentExpression	pdest -> num_levels = psrc -> num_levels		5115054	0		=			
ANR	5115144	PtrMemberAccess	pdest -> num_levels		5115054	0					
ANR	5115145	Identifier	pdest		5115054	0					
ANR	5115146	Identifier	num_levels		5115054	1					
ANR	5115147	PtrMemberAccess	psrc -> num_levels		5115054	1					
ANR	5115148	Identifier	psrc		5115054	0					
ANR	5115149	Identifier	num_levels		5115054	1					
ANR	5115150	ExpressionStatement	pdest -> num_bits = psrc -> num_bits	349:4:10844:10876	5115054	10	True				
ANR	5115151	AssignmentExpression	pdest -> num_bits = psrc -> num_bits		5115054	0		=			
ANR	5115152	PtrMemberAccess	pdest -> num_bits		5115054	0					
ANR	5115153	Identifier	pdest		5115054	0					
ANR	5115154	Identifier	num_bits		5115054	1					
ANR	5115155	PtrMemberAccess	psrc -> num_bits		5115054	1					
ANR	5115156	Identifier	psrc		5115054	0					
ANR	5115157	Identifier	num_bits		5115054	1					
ANR	5115158	ExpressionStatement	pdest -> procs = psrc -> procs	350:4:10882:10908	5115054	11	True				
ANR	5115159	AssignmentExpression	pdest -> procs = psrc -> procs		5115054	0		=			
ANR	5115160	PtrMemberAccess	pdest -> procs		5115054	0					
ANR	5115161	Identifier	pdest		5115054	0					
ANR	5115162	Identifier	procs		5115054	1					
ANR	5115163	PtrMemberAccess	psrc -> procs		5115054	1					
ANR	5115164	Identifier	psrc		5115054	0					
ANR	5115165	Identifier	procs		5115054	1					
ANR	5115166	ExpressionStatement	pdest -> data_memory = psrc -> data_memory	351:4:10914:10952	5115054	12	True				
ANR	5115167	AssignmentExpression	pdest -> data_memory = psrc -> data_memory		5115054	0		=			
ANR	5115168	PtrMemberAccess	pdest -> data_memory		5115054	0					
ANR	5115169	Identifier	pdest		5115054	0					
ANR	5115170	Identifier	data_memory		5115054	1					
ANR	5115171	PtrMemberAccess	psrc -> data_memory		5115054	1					
ANR	5115172	Identifier	psrc		5115054	0					
ANR	5115173	Identifier	data_memory		5115054	1					
ANR	5115174	ExpressionStatement	pdest -> levels = psrc -> levels	352:4:10958:10986	5115054	13	True				
ANR	5115175	AssignmentExpression	pdest -> levels = psrc -> levels		5115054	0		=			
ANR	5115176	PtrMemberAccess	pdest -> levels		5115054	0					
ANR	5115177	Identifier	pdest		5115054	0					
ANR	5115178	Identifier	levels		5115054	1					
ANR	5115179	PtrMemberAccess	psrc -> levels		5115054	1					
ANR	5115180	Identifier	psrc		5115054	0					
ANR	5115181	Identifier	levels		5115054	1					
ANR	5115182	ExpressionStatement	pdest -> bit_data = psrc -> bit_data	353:4:10992:11024	5115054	14	True				
ANR	5115183	AssignmentExpression	pdest -> bit_data = psrc -> bit_data		5115054	0		=			
ANR	5115184	PtrMemberAccess	pdest -> bit_data		5115054	0					
ANR	5115185	Identifier	pdest		5115054	0					
ANR	5115186	Identifier	bit_data		5115054	1					
ANR	5115187	PtrMemberAccess	psrc -> bit_data		5115054	1					
ANR	5115188	Identifier	psrc		5115054	0					
ANR	5115189	Identifier	bit_data		5115054	1					
ANR	5115190	ExpressionStatement	pdest -> cache = psrc -> cache	354:4:11030:11056	5115054	15	True				
ANR	5115191	AssignmentExpression	pdest -> cache = psrc -> cache		5115054	0		=			
ANR	5115192	PtrMemberAccess	pdest -> cache		5115054	0					
ANR	5115193	Identifier	pdest		5115054	0					
ANR	5115194	Identifier	cache		5115054	1					
ANR	5115195	PtrMemberAccess	psrc -> cache		5115054	1					
ANR	5115196	Identifier	psrc		5115054	0					
ANR	5115197	Identifier	cache		5115054	1					
ANR	5115198	ExpressionStatement	pdest -> transfer = psrc -> transfer	355:4:11083:11115	5115054	16	True				
ANR	5115199	AssignmentExpression	pdest -> transfer = psrc -> transfer		5115054	0		=			
ANR	5115200	PtrMemberAccess	pdest -> transfer		5115054	0					
ANR	5115201	Identifier	pdest		5115054	0					
ANR	5115202	Identifier	transfer		5115054	1					
ANR	5115203	PtrMemberAccess	psrc -> transfer		5115054	1					
ANR	5115204	Identifier	psrc		5115054	0					
ANR	5115205	Identifier	transfer		5115054	1					
ANR	5115206	ReturnType	static void		5115054	1					
ANR	5115207	Identifier	gx_ht_move_ht_order		5115054	2					
ANR	5115208	ParameterList	"gx_ht_order * pdest , gx_ht_order * psrc"		5115054	3					
ANR	5115209	Parameter	gx_ht_order * pdest	336:20:10403:10421	5115054	0	True				
ANR	5115210	ParameterType	gx_ht_order *		5115054	0					
ANR	5115211	Identifier	pdest		5115054	1					
ANR	5115212	Parameter	gx_ht_order * psrc	336:41:10424:10441	5115054	1	True				
ANR	5115213	ParameterType	gx_ht_order *		5115054	0					
ANR	5115214	Identifier	psrc		5115054	1					
ANR	5115215	CFGEntryNode	ENTRY		5115054		True				
ANR	5115216	CFGExitNode	EXIT		5115054		True				
ANR	5115217	Symbol	psrc		5115054						
ANR	5115218	Symbol	psrc -> cache		5115054						
ANR	5115219	Symbol	pdest -> bit_data		5115054						
ANR	5115220	Symbol	shift		5115054						
ANR	5115221	Symbol	psrc -> params		5115054						
ANR	5115222	Symbol	* psrc		5115054						
ANR	5115223	Symbol	pdest -> orig_shift		5115054						
ANR	5115224	Symbol	pdest -> data_memory		5115054						
ANR	5115225	Symbol	pdest		5115054						
ANR	5115226	Symbol	pdest -> procs		5115054						
ANR	5115227	Symbol	ht_order_full_height		5115054						
ANR	5115228	Symbol	pdest -> cache		5115054						
ANR	5115229	Symbol	pdest -> height		5115054						
ANR	5115230	Symbol	pdest -> full_height		5115054						
ANR	5115231	Symbol	pdest -> orig_height		5115054						
ANR	5115232	Symbol	psrc -> data_memory		5115054						
ANR	5115233	Symbol	pdest -> transfer		5115054						
ANR	5115234	Symbol	pdest -> num_levels		5115054						
ANR	5115235	Symbol	psrc -> levels		5115054						
ANR	5115236	Symbol	psrc -> shift		5115054						
ANR	5115237	Symbol	psrc -> width		5115054						
ANR	5115238	Symbol	height		5115054						
ANR	5115239	Symbol	pdest -> num_bits		5115054						
ANR	5115240	Symbol	pdest -> raster		5115054						
ANR	5115241	Symbol	psrc -> procs		5115054						
ANR	5115242	Symbol	psrc -> height		5115054						
ANR	5115243	Symbol	* pdest		5115054						
ANR	5115244	Symbol	psrc -> transfer		5115054						
ANR	5115245	Symbol	pdest -> levels		5115054						
ANR	5115246	Symbol	pdest -> width		5115054						
ANR	5115247	Symbol	psrc -> num_levels		5115054						
ANR	5115248	Symbol	bitmap_raster		5115054						
ANR	5115249	Symbol	psrc -> num_bits		5115054						
ANR	5115250	Symbol	psrc -> bit_data		5115054						
ANR	5115251	Symbol	pdest -> params		5115054						
ANR	5115252	Symbol	pdest -> shift		5115054						
ANR	5115253	Symbol	width		5115054						
ANR	5115254	Function	gx_ht_alloc_order	360:0:11254:11764							
ANR	5115255	FunctionDef	"gx_ht_alloc_order (gx_ht_order * porder , uint width , uint height , uint strip_shift , uint num_levels , gs_memory_t * mem)"		5115254	0					
ANR	5115256	CompoundStatement		363:0:11395:11764	5115254	0					
ANR	5115257	IdentifierDeclStatement	gx_ht_order order ;	364:4:11401:11418	5115254	0	True				
ANR	5115258	IdentifierDecl	order		5115254	0					
ANR	5115259	IdentifierDeclType	gx_ht_order		5115254	0					
ANR	5115260	Identifier	order		5115254	1					
ANR	5115261	IdentifierDeclStatement	int code ;	365:4:11424:11432	5115254	1	True				
ANR	5115262	IdentifierDecl	code		5115254	0					
ANR	5115263	IdentifierDeclType	int		5115254	0					
ANR	5115264	Identifier	code		5115254	1					
ANR	5115265	ExpressionStatement	order = * porder	367:4:11439:11454	5115254	2	True				
ANR	5115266	AssignmentExpression	order = * porder		5115254	0		=			
ANR	5115267	Identifier	order		5115254	0					
ANR	5115268	UnaryOperationExpression	* porder		5115254	1					
ANR	5115269	UnaryOperator	*		5115254	0					
ANR	5115270	Identifier	porder		5115254	1					
ANR	5115271	ExpressionStatement	gx_compute_cell_values ( & order . params )	368:4:11460:11497	5115254	3	True				
ANR	5115272	CallExpression	gx_compute_cell_values ( & order . params )		5115254	0					
ANR	5115273	Callee	gx_compute_cell_values		5115254	0					
ANR	5115274	Identifier	gx_compute_cell_values		5115254	0					
ANR	5115275	ArgumentList	& order . params		5115254	1					
ANR	5115276	Argument	& order . params		5115254	0					
ANR	5115277	UnaryOperationExpression	& order . params		5115254	0					
ANR	5115278	UnaryOperator	&		5115254	0					
ANR	5115279	MemberAccess	order . params		5115254	1					
ANR	5115280	Identifier	order		5115254	0					
ANR	5115281	Identifier	params		5115254	1					
ANR	5115282	ExpressionStatement	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , strip_shift , & ht_order_procs_default , mem )"	369:4:11503:11688	5115254	4	True				
ANR	5115283	AssignmentExpression	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , strip_shift , & ht_order_procs_default , mem )"		5115254	0		=			
ANR	5115284	Identifier	code		5115254	0					
ANR	5115285	CallExpression	"gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , strip_shift , & ht_order_procs_default , mem )"		5115254	1					
ANR	5115286	Callee	gx_ht_alloc_ht_order		5115254	0					
ANR	5115287	Identifier	gx_ht_alloc_ht_order		5115254	0					
ANR	5115288	ArgumentList	& order		5115254	1					
ANR	5115289	Argument	& order		5115254	0					
ANR	5115290	UnaryOperationExpression	& order		5115254	0					
ANR	5115291	UnaryOperator	&		5115254	0					
ANR	5115292	Identifier	order		5115254	1					
ANR	5115293	Argument	width		5115254	1					
ANR	5115294	Identifier	width		5115254	0					
ANR	5115295	Argument	height		5115254	2					
ANR	5115296	Identifier	height		5115254	0					
ANR	5115297	Argument	num_levels		5115254	3					
ANR	5115298	Identifier	num_levels		5115254	0					
ANR	5115299	Argument	width * height		5115254	4					
ANR	5115300	MultiplicativeExpression	width * height		5115254	0		*			
ANR	5115301	Identifier	width		5115254	0					
ANR	5115302	Identifier	height		5115254	1					
ANR	5115303	Argument	strip_shift		5115254	5					
ANR	5115304	Identifier	strip_shift		5115254	0					
ANR	5115305	Argument	& ht_order_procs_default		5115254	6					
ANR	5115306	UnaryOperationExpression	& ht_order_procs_default		5115254	0					
ANR	5115307	UnaryOperator	&		5115254	0					
ANR	5115308	Identifier	ht_order_procs_default		5115254	1					
ANR	5115309	Argument	mem		5115254	7					
ANR	5115310	Identifier	mem		5115254	0					
ANR	5115311	IfStatement	if ( code < 0 )		5115254	5					
ANR	5115312	Condition	code < 0	372:8:11698:11705	5115254	0	True				
ANR	5115313	RelationalExpression	code < 0		5115254	0		<			
ANR	5115314	Identifier	code		5115254	0					
ANR	5115315	PrimaryExpression	0		5115254	1					
ANR	5115316	ReturnStatement	return code ;	373:8:11716:11727	5115254	1	True				
ANR	5115317	Identifier	code		5115254	0					
ANR	5115318	ExpressionStatement	* porder = order	374:4:11733:11748	5115254	6	True				
ANR	5115319	AssignmentExpression	* porder = order		5115254	0		=			
ANR	5115320	UnaryOperationExpression	* porder		5115254	0					
ANR	5115321	UnaryOperator	*		5115254	0					
ANR	5115322	Identifier	porder		5115254	1					
ANR	5115323	Identifier	order		5115254	1					
ANR	5115324	ReturnStatement	return 0 ;	375:4:11754:11762	5115254	7	True				
ANR	5115325	PrimaryExpression	0		5115254	0					
ANR	5115326	ReturnType	int		5115254	1					
ANR	5115327	Identifier	gx_ht_alloc_order		5115254	2					
ANR	5115328	ParameterList	"gx_ht_order * porder , uint width , uint height , uint strip_shift , uint num_levels , gs_memory_t * mem"		5115254	3					
ANR	5115329	Parameter	gx_ht_order * porder	361:18:11276:11295	5115254	0	True				
ANR	5115330	ParameterType	gx_ht_order *		5115254	0					
ANR	5115331	Identifier	porder		5115254	1					
ANR	5115332	Parameter	uint width	361:40:11298:11307	5115254	1	True				
ANR	5115333	ParameterType	uint		5115254	0					
ANR	5115334	Identifier	width		5115254	1					
ANR	5115335	Parameter	uint height	361:52:11310:11320	5115254	2	True				
ANR	5115336	ParameterType	uint		5115254	0					
ANR	5115337	Identifier	height		5115254	1					
ANR	5115338	Parameter	uint strip_shift	362:18:11341:11356	5115254	3	True				
ANR	5115339	ParameterType	uint		5115254	0					
ANR	5115340	Identifier	strip_shift		5115254	1					
ANR	5115341	Parameter	uint num_levels	362:36:11359:11373	5115254	4	True				
ANR	5115342	ParameterType	uint		5115254	0					
ANR	5115343	Identifier	num_levels		5115254	1					
ANR	5115344	Parameter	gs_memory_t * mem	362:53:11376:11392	5115254	5	True				
ANR	5115345	ParameterType	gs_memory_t *		5115254	0					
ANR	5115346	Identifier	mem		5115254	1					
ANR	5115347	CFGEntryNode	ENTRY		5115254		True				
ANR	5115348	CFGExitNode	EXIT		5115254		True				
ANR	5115349	Symbol	code		5115254						
ANR	5115350	Symbol	& order . params		5115254						
ANR	5115351	Symbol	& order		5115254						
ANR	5115352	Symbol	porder		5115254						
ANR	5115353	Symbol	strip_shift		5115254						
ANR	5115354	Symbol	mem		5115254						
ANR	5115355	Symbol	& ht_order_procs_default		5115254						
ANR	5115356	Symbol	width		5115254						
ANR	5115357	Symbol	* porder		5115254						
ANR	5115358	Symbol	gx_ht_alloc_ht_order		5115254						
ANR	5115359	Symbol	height		5115254						
ANR	5115360	Symbol	num_levels		5115254						
ANR	5115361	Symbol	order		5115254						
ANR	5115362	Function	gx_ht_alloc_threshold_order	382:0:11863:12502							
ANR	5115363	FunctionDef	"gx_ht_alloc_threshold_order (gx_ht_order * porder , uint width , uint height , uint num_levels , gs_memory_t * mem)"		5115362	0					
ANR	5115364	CompoundStatement		385:0:12006:12502	5115362	0					
ANR	5115365	IdentifierDeclStatement	gx_ht_order order ;	386:4:12012:12029	5115362	0	True				
ANR	5115366	IdentifierDecl	order		5115362	0					
ANR	5115367	IdentifierDeclType	gx_ht_order		5115362	0					
ANR	5115368	Identifier	order		5115362	1					
ANR	5115369	IdentifierDeclStatement	uint num_bits = width * height ;	387:4:12035:12065	5115362	1	True				
ANR	5115370	IdentifierDecl	num_bits = width * height		5115362	0					
ANR	5115371	IdentifierDeclType	uint		5115362	0					
ANR	5115372	Identifier	num_bits		5115362	1					
ANR	5115373	AssignmentExpression	num_bits = width * height		5115362	2		=			
ANR	5115374	Identifier	num_bits		5115362	0					
ANR	5115375	MultiplicativeExpression	width * height		5115362	1		*			
ANR	5115376	Identifier	width		5115362	0					
ANR	5115377	Identifier	height		5115362	1					
ANR	5115378	IdentifierDeclStatement	const gx_ht_order_procs_t * procs = ( num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default ) ;	388:4:12071:12216	5115362	2	True				
ANR	5115379	IdentifierDecl	* procs = ( num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default )		5115362	0					
ANR	5115380	IdentifierDeclType	const gx_ht_order_procs_t *		5115362	0					
ANR	5115381	Identifier	procs		5115362	1					
ANR	5115382	AssignmentExpression	* procs = ( num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default )		5115362	2		=			
ANR	5115383	Identifier	procs		5115362	0					
ANR	5115384	ConditionalExpression	num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default		5115362	1					
ANR	5115385	Condition	num_bits > 2000 && num_bits <= max_ushort		5115362	0					
ANR	5115386	AndExpression	num_bits > 2000 && num_bits <= max_ushort		5115362	0		&&			
ANR	5115387	RelationalExpression	num_bits > 2000		5115362	0		>			
ANR	5115388	Identifier	num_bits		5115362	0					
ANR	5115389	PrimaryExpression	2000		5115362	1					
ANR	5115390	RelationalExpression	num_bits <= max_ushort		5115362	1		<=			
ANR	5115391	Identifier	num_bits		5115362	0					
ANR	5115392	Identifier	max_ushort		5115362	1					
ANR	5115393	UnaryOperationExpression	& ht_order_procs_short		5115362	1					
ANR	5115394	UnaryOperator	&		5115362	0					
ANR	5115395	Identifier	ht_order_procs_short		5115362	1					
ANR	5115396	UnaryOperationExpression	& ht_order_procs_default		5115362	2					
ANR	5115397	UnaryOperator	&		5115362	0					
ANR	5115398	Identifier	ht_order_procs_default		5115362	1					
ANR	5115399	IdentifierDeclStatement	int code ;	391:4:12222:12230	5115362	3	True				
ANR	5115400	IdentifierDecl	code		5115362	0					
ANR	5115401	IdentifierDeclType	int		5115362	0					
ANR	5115402	Identifier	code		5115362	1					
ANR	5115403	ExpressionStatement	order = * porder	393:4:12237:12252	5115362	4	True				
ANR	5115404	AssignmentExpression	order = * porder		5115362	0		=			
ANR	5115405	Identifier	order		5115362	0					
ANR	5115406	UnaryOperationExpression	* porder		5115362	1					
ANR	5115407	UnaryOperator	*		5115362	0					
ANR	5115408	Identifier	porder		5115362	1					
ANR	5115409	ExpressionStatement	gx_compute_cell_values ( & order . params )	394:4:12258:12295	5115362	5	True				
ANR	5115410	CallExpression	gx_compute_cell_values ( & order . params )		5115362	0					
ANR	5115411	Callee	gx_compute_cell_values		5115362	0					
ANR	5115412	Identifier	gx_compute_cell_values		5115362	0					
ANR	5115413	ArgumentList	& order . params		5115362	1					
ANR	5115414	Argument	& order . params		5115362	0					
ANR	5115415	UnaryOperationExpression	& order . params		5115362	0					
ANR	5115416	UnaryOperator	&		5115362	0					
ANR	5115417	MemberAccess	order . params		5115362	1					
ANR	5115418	Identifier	order		5115362	0					
ANR	5115419	Identifier	params		5115362	1					
ANR	5115420	ExpressionStatement	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , 0 , procs , mem )"	395:4:12301:12426	5115362	6	True				
ANR	5115421	AssignmentExpression	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , 0 , procs , mem )"		5115362	0		=			
ANR	5115422	Identifier	code		5115362	0					
ANR	5115423	CallExpression	"gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , 0 , procs , mem )"		5115362	1					
ANR	5115424	Callee	gx_ht_alloc_ht_order		5115362	0					
ANR	5115425	Identifier	gx_ht_alloc_ht_order		5115362	0					
ANR	5115426	ArgumentList	& order		5115362	1					
ANR	5115427	Argument	& order		5115362	0					
ANR	5115428	UnaryOperationExpression	& order		5115362	0					
ANR	5115429	UnaryOperator	&		5115362	0					
ANR	5115430	Identifier	order		5115362	1					
ANR	5115431	Argument	width		5115362	1					
ANR	5115432	Identifier	width		5115362	0					
ANR	5115433	Argument	height		5115362	2					
ANR	5115434	Identifier	height		5115362	0					
ANR	5115435	Argument	num_levels		5115362	3					
ANR	5115436	Identifier	num_levels		5115362	0					
ANR	5115437	Argument	width * height		5115362	4					
ANR	5115438	MultiplicativeExpression	width * height		5115362	0		*			
ANR	5115439	Identifier	width		5115362	0					
ANR	5115440	Identifier	height		5115362	1					
ANR	5115441	Argument	0		5115362	5					
ANR	5115442	PrimaryExpression	0		5115362	0					
ANR	5115443	Argument	procs		5115362	6					
ANR	5115444	Identifier	procs		5115362	0					
ANR	5115445	Argument	mem		5115362	7					
ANR	5115446	Identifier	mem		5115362	0					
ANR	5115447	IfStatement	if ( code < 0 )		5115362	7					
ANR	5115448	Condition	code < 0	397:8:12436:12443	5115362	0	True				
ANR	5115449	RelationalExpression	code < 0		5115362	0		<			
ANR	5115450	Identifier	code		5115362	0					
ANR	5115451	PrimaryExpression	0		5115362	1					
ANR	5115452	ReturnStatement	return code ;	398:8:12454:12465	5115362	1	True				
ANR	5115453	Identifier	code		5115362	0					
ANR	5115454	ExpressionStatement	* porder = order	399:4:12471:12486	5115362	8	True				
ANR	5115455	AssignmentExpression	* porder = order		5115362	0		=			
ANR	5115456	UnaryOperationExpression	* porder		5115362	0					
ANR	5115457	UnaryOperator	*		5115362	0					
ANR	5115458	Identifier	porder		5115362	1					
ANR	5115459	Identifier	order		5115362	1					
ANR	5115460	ReturnStatement	return 0 ;	400:4:12492:12500	5115362	9	True				
ANR	5115461	PrimaryExpression	0		5115362	0					
ANR	5115462	ReturnType	int		5115362	1					
ANR	5115463	Identifier	gx_ht_alloc_threshold_order		5115362	2					
ANR	5115464	ParameterList	"gx_ht_order * porder , uint width , uint height , uint num_levels , gs_memory_t * mem"		5115362	3					
ANR	5115465	Parameter	gx_ht_order * porder	383:28:11895:11914	5115362	0	True				
ANR	5115466	ParameterType	gx_ht_order *		5115362	0					
ANR	5115467	Identifier	porder		5115362	1					
ANR	5115468	Parameter	uint width	383:50:11917:11926	5115362	1	True				
ANR	5115469	ParameterType	uint		5115362	0					
ANR	5115470	Identifier	width		5115362	1					
ANR	5115471	Parameter	uint height	383:62:11929:11939	5115362	2	True				
ANR	5115472	ParameterType	uint		5115362	0					
ANR	5115473	Identifier	height		5115362	1					
ANR	5115474	Parameter	uint num_levels	384:28:11970:11984	5115362	3	True				
ANR	5115475	ParameterType	uint		5115362	0					
ANR	5115476	Identifier	num_levels		5115362	1					
ANR	5115477	Parameter	gs_memory_t * mem	384:45:11987:12003	5115362	4	True				
ANR	5115478	ParameterType	gs_memory_t *		5115362	0					
ANR	5115479	Identifier	mem		5115362	1					
ANR	5115480	CFGEntryNode	ENTRY		5115362		True				
ANR	5115481	CFGExitNode	EXIT		5115362		True				
ANR	5115482	Symbol	procs		5115362						
ANR	5115483	Symbol	code		5115362						
ANR	5115484	Symbol	& order . params		5115362						
ANR	5115485	Symbol	& ht_order_procs_short		5115362						
ANR	5115486	Symbol	& order		5115362						
ANR	5115487	Symbol	porder		5115362						
ANR	5115488	Symbol	mem		5115362						
ANR	5115489	Symbol	& ht_order_procs_default		5115362						
ANR	5115490	Symbol	width		5115362						
ANR	5115491	Symbol	num_bits		5115362						
ANR	5115492	Symbol	* porder		5115362						
ANR	5115493	Symbol	gx_ht_alloc_ht_order		5115362						
ANR	5115494	Symbol	max_ushort		5115362						
ANR	5115495	Symbol	height		5115362						
ANR	5115496	Symbol	num_levels		5115362						
ANR	5115497	Symbol	order		5115362						
ANR	5115498	Function	gx_ht_alloc_client_order	404:0:12584:13205							
ANR	5115499	FunctionDef	"gx_ht_alloc_client_order (gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , gs_memory_t * mem)"		5115498	0					
ANR	5115500	CompoundStatement		407:0:12736:13205	5115498	0					
ANR	5115501	IdentifierDeclStatement	gx_ht_order order ;	408:4:12742:12759	5115498	0	True				
ANR	5115502	IdentifierDecl	order		5115498	0					
ANR	5115503	IdentifierDeclType	gx_ht_order		5115498	0					
ANR	5115504	Identifier	order		5115498	1					
ANR	5115505	IdentifierDeclStatement	int code ;	409:4:12765:12773	5115498	1	True				
ANR	5115506	IdentifierDecl	code		5115498	0					
ANR	5115507	IdentifierDeclType	int		5115498	0					
ANR	5115508	Identifier	code		5115498	1					
ANR	5115509	ExpressionStatement	order = * porder	411:4:12780:12795	5115498	2	True				
ANR	5115510	AssignmentExpression	order = * porder		5115498	0		=			
ANR	5115511	Identifier	order		5115498	0					
ANR	5115512	UnaryOperationExpression	* porder		5115498	1					
ANR	5115513	UnaryOperator	*		5115498	0					
ANR	5115514	Identifier	porder		5115498	1					
ANR	5115515	ExpressionStatement	"order . params . M = width , order . params . N = 0"	412:4:12801:12843	5115498	3	True				
ANR	5115516	Expression	"order . params . M = width , order . params . N = 0"		5115498	0					
ANR	5115517	AssignmentExpression	order . params . M = width		5115498	0		=			
ANR	5115518	MemberAccess	order . params . M		5115498	0					
ANR	5115519	MemberAccess	order . params		5115498	0					
ANR	5115520	Identifier	order		5115498	0					
ANR	5115521	Identifier	params		5115498	1					
ANR	5115522	Identifier	M		5115498	1					
ANR	5115523	Identifier	width		5115498	1					
ANR	5115524	AssignmentExpression	order . params . N = 0		5115498	1		=			
ANR	5115525	MemberAccess	order . params . N		5115498	0					
ANR	5115526	MemberAccess	order . params		5115498	0					
ANR	5115527	Identifier	order		5115498	0					
ANR	5115528	Identifier	params		5115498	1					
ANR	5115529	Identifier	N		5115498	1					
ANR	5115530	PrimaryExpression	0		5115498	1					
ANR	5115531	ExpressionStatement	order . params . R = 1	413:4:12849:12867	5115498	4	True				
ANR	5115532	AssignmentExpression	order . params . R = 1		5115498	0		=			
ANR	5115533	MemberAccess	order . params . R		5115498	0					
ANR	5115534	MemberAccess	order . params		5115498	0					
ANR	5115535	Identifier	order		5115498	0					
ANR	5115536	Identifier	params		5115498	1					
ANR	5115537	Identifier	R		5115498	1					
ANR	5115538	PrimaryExpression	1		5115498	1					
ANR	5115539	ExpressionStatement	"order . params . M1 = height , order . params . N1 = 0"	414:4:12873:12918	5115498	5	True				
ANR	5115540	Expression	"order . params . M1 = height , order . params . N1 = 0"		5115498	0					
ANR	5115541	AssignmentExpression	order . params . M1 = height		5115498	0		=			
ANR	5115542	MemberAccess	order . params . M1		5115498	0					
ANR	5115543	MemberAccess	order . params		5115498	0					
ANR	5115544	Identifier	order		5115498	0					
ANR	5115545	Identifier	params		5115498	1					
ANR	5115546	Identifier	M1		5115498	1					
ANR	5115547	Identifier	height		5115498	1					
ANR	5115548	AssignmentExpression	order . params . N1 = 0		5115498	1		=			
ANR	5115549	MemberAccess	order . params . N1		5115498	0					
ANR	5115550	MemberAccess	order . params		5115498	0					
ANR	5115551	Identifier	order		5115498	0					
ANR	5115552	Identifier	params		5115498	1					
ANR	5115553	Identifier	N1		5115498	1					
ANR	5115554	PrimaryExpression	0		5115498	1					
ANR	5115555	ExpressionStatement	order . params . R1 = 1	415:4:12924:12943	5115498	6	True				
ANR	5115556	AssignmentExpression	order . params . R1 = 1		5115498	0		=			
ANR	5115557	MemberAccess	order . params . R1		5115498	0					
ANR	5115558	MemberAccess	order . params		5115498	0					
ANR	5115559	Identifier	order		5115498	0					
ANR	5115560	Identifier	params		5115498	1					
ANR	5115561	Identifier	R1		5115498	1					
ANR	5115562	PrimaryExpression	1		5115498	1					
ANR	5115563	ExpressionStatement	gx_compute_cell_values ( & order . params )	416:4:12949:12986	5115498	7	True				
ANR	5115564	CallExpression	gx_compute_cell_values ( & order . params )		5115498	0					
ANR	5115565	Callee	gx_compute_cell_values		5115498	0					
ANR	5115566	Identifier	gx_compute_cell_values		5115498	0					
ANR	5115567	ArgumentList	& order . params		5115498	1					
ANR	5115568	Argument	& order . params		5115498	0					
ANR	5115569	UnaryOperationExpression	& order . params		5115498	0					
ANR	5115570	UnaryOperator	&		5115498	0					
ANR	5115571	MemberAccess	order . params		5115498	1					
ANR	5115572	Identifier	order		5115498	0					
ANR	5115573	Identifier	params		5115498	1					
ANR	5115574	ExpressionStatement	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , num_bits , 0 , & ht_order_procs_default , mem )"	417:4:12992:13129	5115498	8	True				
ANR	5115575	AssignmentExpression	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , num_bits , 0 , & ht_order_procs_default , mem )"		5115498	0		=			
ANR	5115576	Identifier	code		5115498	0					
ANR	5115577	CallExpression	"gx_ht_alloc_ht_order ( & order , width , height , num_levels , num_bits , 0 , & ht_order_procs_default , mem )"		5115498	1					
ANR	5115578	Callee	gx_ht_alloc_ht_order		5115498	0					
ANR	5115579	Identifier	gx_ht_alloc_ht_order		5115498	0					
ANR	5115580	ArgumentList	& order		5115498	1					
ANR	5115581	Argument	& order		5115498	0					
ANR	5115582	UnaryOperationExpression	& order		5115498	0					
ANR	5115583	UnaryOperator	&		5115498	0					
ANR	5115584	Identifier	order		5115498	1					
ANR	5115585	Argument	width		5115498	1					
ANR	5115586	Identifier	width		5115498	0					
ANR	5115587	Argument	height		5115498	2					
ANR	5115588	Identifier	height		5115498	0					
ANR	5115589	Argument	num_levels		5115498	3					
ANR	5115590	Identifier	num_levels		5115498	0					
ANR	5115591	Argument	num_bits		5115498	4					
ANR	5115592	Identifier	num_bits		5115498	0					
ANR	5115593	Argument	0		5115498	5					
ANR	5115594	PrimaryExpression	0		5115498	0					
ANR	5115595	Argument	& ht_order_procs_default		5115498	6					
ANR	5115596	UnaryOperationExpression	& ht_order_procs_default		5115498	0					
ANR	5115597	UnaryOperator	&		5115498	0					
ANR	5115598	Identifier	ht_order_procs_default		5115498	1					
ANR	5115599	Argument	mem		5115498	7					
ANR	5115600	Identifier	mem		5115498	0					
ANR	5115601	IfStatement	if ( code < 0 )		5115498	9					
ANR	5115602	Condition	code < 0	419:8:13139:13146	5115498	0	True				
ANR	5115603	RelationalExpression	code < 0		5115498	0		<			
ANR	5115604	Identifier	code		5115498	0					
ANR	5115605	PrimaryExpression	0		5115498	1					
ANR	5115606	ReturnStatement	return code ;	420:8:13157:13168	5115498	1	True				
ANR	5115607	Identifier	code		5115498	0					
ANR	5115608	ExpressionStatement	* porder = order	421:4:13174:13189	5115498	10	True				
ANR	5115609	AssignmentExpression	* porder = order		5115498	0		=			
ANR	5115610	UnaryOperationExpression	* porder		5115498	0					
ANR	5115611	UnaryOperator	*		5115498	0					
ANR	5115612	Identifier	porder		5115498	1					
ANR	5115613	Identifier	order		5115498	1					
ANR	5115614	ReturnStatement	return 0 ;	422:4:13195:13203	5115498	11	True				
ANR	5115615	PrimaryExpression	0		5115498	0					
ANR	5115616	ReturnType	int		5115498	1					
ANR	5115617	Identifier	gx_ht_alloc_client_order		5115498	2					
ANR	5115618	ParameterList	"gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , gs_memory_t * mem"		5115498	3					
ANR	5115619	Parameter	gx_ht_order * porder	405:25:12613:12632	5115498	0	True				
ANR	5115620	ParameterType	gx_ht_order *		5115498	0					
ANR	5115621	Identifier	porder		5115498	1					
ANR	5115622	Parameter	uint width	405:47:12635:12644	5115498	1	True				
ANR	5115623	ParameterType	uint		5115498	0					
ANR	5115624	Identifier	width		5115498	1					
ANR	5115625	Parameter	uint height	405:59:12647:12657	5115498	2	True				
ANR	5115626	ParameterType	uint		5115498	0					
ANR	5115627	Identifier	height		5115498	1					
ANR	5115628	Parameter	uint num_levels	406:25:12685:12699	5115498	3	True				
ANR	5115629	ParameterType	uint		5115498	0					
ANR	5115630	Identifier	num_levels		5115498	1					
ANR	5115631	Parameter	uint num_bits	406:42:12702:12714	5115498	4	True				
ANR	5115632	ParameterType	uint		5115498	0					
ANR	5115633	Identifier	num_bits		5115498	1					
ANR	5115634	Parameter	gs_memory_t * mem	406:57:12717:12733	5115498	5	True				
ANR	5115635	ParameterType	gs_memory_t *		5115498	0					
ANR	5115636	Identifier	mem		5115498	1					
ANR	5115637	CFGEntryNode	ENTRY		5115498		True				
ANR	5115638	CFGExitNode	EXIT		5115498		True				
ANR	5115639	Symbol	code		5115498						
ANR	5115640	Symbol	order . params . R		5115498						
ANR	5115641	Symbol	& order . params		5115498						
ANR	5115642	Symbol	order . params		5115498						
ANR	5115643	Symbol	order . params . N		5115498						
ANR	5115644	Symbol	order . params . M		5115498						
ANR	5115645	Symbol	& order		5115498						
ANR	5115646	Symbol	porder		5115498						
ANR	5115647	Symbol	order . params . R1		5115498						
ANR	5115648	Symbol	mem		5115498						
ANR	5115649	Symbol	& ht_order_procs_default		5115498						
ANR	5115650	Symbol	width		5115498						
ANR	5115651	Symbol	order . params . M1		5115498						
ANR	5115652	Symbol	num_bits		5115498						
ANR	5115653	Symbol	order . params . N1		5115498						
ANR	5115654	Symbol	* porder		5115498						
ANR	5115655	Symbol	gx_ht_alloc_ht_order		5115498						
ANR	5115656	Symbol	height		5115498						
ANR	5115657	Symbol	num_levels		5115498						
ANR	5115658	Symbol	order		5115498						
ANR	5115659	Function	compare_samples	426:0:13272:13666							
ANR	5115660	FunctionDef	"compare_samples (const void * p1 , const void * p2)"		5115659	0					
ANR	5115661	CompoundStatement		428:0:13331:13666	5115659	0					
ANR	5115662	IdentifierDeclStatement	ht_sample_t m1 = ( ( const gx_ht_bit * ) p1 ) -> mask ;	429:4:13337:13383	5115659	0	True				
ANR	5115663	IdentifierDecl	m1 = ( ( const gx_ht_bit * ) p1 ) -> mask		5115659	0					
ANR	5115664	IdentifierDeclType	ht_sample_t		5115659	0					
ANR	5115665	Identifier	m1		5115659	1					
ANR	5115666	AssignmentExpression	m1 = ( ( const gx_ht_bit * ) p1 ) -> mask		5115659	2		=			
ANR	5115667	Identifier	m1		5115659	0					
ANR	5115668	PtrMemberAccess	( ( const gx_ht_bit * ) p1 ) -> mask		5115659	1					
ANR	5115669	CastExpression	( const gx_ht_bit * ) p1		5115659	0					
ANR	5115670	CastTarget	const gx_ht_bit *		5115659	0					
ANR	5115671	Identifier	p1		5115659	1					
ANR	5115672	Identifier	mask		5115659	1					
ANR	5115673	IdentifierDeclStatement	ht_sample_t m2 = ( ( const gx_ht_bit * ) p2 ) -> mask ;	430:4:13389:13435	5115659	1	True				
ANR	5115674	IdentifierDecl	m2 = ( ( const gx_ht_bit * ) p2 ) -> mask		5115659	0					
ANR	5115675	IdentifierDeclType	ht_sample_t		5115659	0					
ANR	5115676	Identifier	m2		5115659	1					
ANR	5115677	AssignmentExpression	m2 = ( ( const gx_ht_bit * ) p2 ) -> mask		5115659	2		=			
ANR	5115678	Identifier	m2		5115659	0					
ANR	5115679	PtrMemberAccess	( ( const gx_ht_bit * ) p2 ) -> mask		5115659	1					
ANR	5115680	CastExpression	( const gx_ht_bit * ) p2		5115659	0					
ANR	5115681	CastTarget	const gx_ht_bit *		5115659	0					
ANR	5115682	Identifier	p2		5115659	1					
ANR	5115683	Identifier	mask		5115659	1					
ANR	5115684	IfStatement	if ( m1 == m2 )		5115659	2					
ANR	5115685	Condition	m1 == m2	433:8:13520:13525	5115659	0	True				
ANR	5115686	EqualityExpression	m1 == m2		5115659	0		==			
ANR	5115687	Identifier	m1		5115659	0					
ANR	5115688	Identifier	m2		5115659	1					
ANR	5115689	CompoundStatement		6:16:196:196	5115659	1					
ANR	5115690	ExpressionStatement	m1 = ( ( const gx_ht_bit * ) p1 ) -> offset	434:6:13536:13570	5115659	0	True				
ANR	5115691	AssignmentExpression	m1 = ( ( const gx_ht_bit * ) p1 ) -> offset		5115659	0		=			
ANR	5115692	Identifier	m1		5115659	0					
ANR	5115693	PtrMemberAccess	( ( const gx_ht_bit * ) p1 ) -> offset		5115659	1					
ANR	5115694	CastExpression	( const gx_ht_bit * ) p1		5115659	0					
ANR	5115695	CastTarget	const gx_ht_bit *		5115659	0					
ANR	5115696	Identifier	p1		5115659	1					
ANR	5115697	Identifier	offset		5115659	1					
ANR	5115698	ExpressionStatement	m2 = ( ( const gx_ht_bit * ) p2 ) -> offset	435:6:13578:13612	5115659	1	True				
ANR	5115699	AssignmentExpression	m2 = ( ( const gx_ht_bit * ) p2 ) -> offset		5115659	0		=			
ANR	5115700	Identifier	m2		5115659	0					
ANR	5115701	PtrMemberAccess	( ( const gx_ht_bit * ) p2 ) -> offset		5115659	1					
ANR	5115702	CastExpression	( const gx_ht_bit * ) p2		5115659	0					
ANR	5115703	CastTarget	const gx_ht_bit *		5115659	0					
ANR	5115704	Identifier	p2		5115659	1					
ANR	5115705	Identifier	offset		5115659	1					
ANR	5115706	ReturnStatement	return ( m1 < m2 ? - 1 : m1 > m2 ? 1 : 0 ) ;	438:4:13625:13664	5115659	3	True				
ANR	5115707	ConditionalExpression	m1 < m2 ? - 1 : m1 > m2 ? 1 : 0		5115659	0					
ANR	5115708	Condition	m1 < m2		5115659	0					
ANR	5115709	RelationalExpression	m1 < m2		5115659	0		<			
ANR	5115710	Identifier	m1		5115659	0					
ANR	5115711	Identifier	m2		5115659	1					
ANR	5115712	UnaryOperationExpression	- 1		5115659	1					
ANR	5115713	UnaryOperator	-		5115659	0					
ANR	5115714	PrimaryExpression	1		5115659	1					
ANR	5115715	ConditionalExpression	m1 > m2 ? 1 : 0		5115659	2					
ANR	5115716	Condition	m1 > m2		5115659	0					
ANR	5115717	RelationalExpression	m1 > m2		5115659	0		>			
ANR	5115718	Identifier	m1		5115659	0					
ANR	5115719	Identifier	m2		5115659	1					
ANR	5115720	PrimaryExpression	1		5115659	1					
ANR	5115721	PrimaryExpression	0		5115659	2					
ANR	5115722	ReturnType	static int		5115659	1					
ANR	5115723	Identifier	compare_samples		5115659	2					
ANR	5115724	ParameterList	"const void * p1 , const void * p2"		5115659	3					
ANR	5115725	Parameter	const void * p1	427:16:13299:13312	5115659	0	True				
ANR	5115726	ParameterType	const void *		5115659	0					
ANR	5115727	Identifier	p1		5115659	1					
ANR	5115728	Parameter	const void * p2	427:32:13315:13328	5115659	1	True				
ANR	5115729	ParameterType	const void *		5115659	0					
ANR	5115730	Identifier	p2		5115659	1					
ANR	5115731	CFGEntryNode	ENTRY		5115659		True				
ANR	5115732	CFGExitNode	EXIT		5115659		True				
ANR	5115733	Symbol	p1		5115659						
ANR	5115734	Symbol	p2		5115659						
ANR	5115735	Symbol	m1		5115659						
ANR	5115736	Symbol	* p1		5115659						
ANR	5115737	Symbol	m2		5115659						
ANR	5115738	Symbol	( ( const gx_ht_bit * ) p2 ) -> mask		5115659						
ANR	5115739	Symbol	( ( const gx_ht_bit * ) p2 ) -> offset		5115659						
ANR	5115740	Symbol	* p2		5115659						
ANR	5115741	Symbol	( ( const gx_ht_bit * ) p1 ) -> offset		5115659						
ANR	5115742	Symbol	( ( const gx_ht_bit * ) p1 ) -> mask		5115659						
ANR	5115743	Function	gx_sort_ht_order	441:0:13715:14215							
ANR	5115744	FunctionDef	"gx_sort_ht_order (gx_ht_bit * recs , uint N)"		5115743	0					
ANR	5115745	CompoundStatement		443:0:13763:14215	5115743	0					
ANR	5115746	IdentifierDeclStatement	int i ;	444:4:13769:13774	5115743	0	True				
ANR	5115747	IdentifierDecl	i		5115743	0					
ANR	5115748	IdentifierDeclType	int		5115743	0					
ANR	5115749	Identifier	i		5115743	1					
ANR	5115750	ForStatement	for ( i = 0 ; i < N ; i ++ )		5115743	1					
ANR	5115751	ForInit	i = 0 ;	447:9:13841:13846	5115743	0	True				
ANR	5115752	AssignmentExpression	i = 0		5115743	0		=			
ANR	5115753	Identifier	i		5115743	0					
ANR	5115754	PrimaryExpression	0		5115743	1					
ANR	5115755	Condition	i < N	447:16:13848:13852	5115743	1	True				
ANR	5115756	RelationalExpression	i < N		5115743	0		<			
ANR	5115757	Identifier	i		5115743	0					
ANR	5115758	Identifier	N		5115743	1					
ANR	5115759	PostIncDecOperationExpression	i ++	447:23:13855:13857	5115743	2	True				
ANR	5115760	Identifier	i		5115743	0					
ANR	5115761	IncDec	++		5115743	1					
ANR	5115762	ExpressionStatement	recs [ i ] . offset = i	448:8:13868:13886	5115743	3	True				
ANR	5115763	AssignmentExpression	recs [ i ] . offset = i		5115743	0		=			
ANR	5115764	MemberAccess	recs [ i ] . offset		5115743	0					
ANR	5115765	ArrayIndexing	recs [ i ]		5115743	0					
ANR	5115766	Identifier	recs		5115743	0					
ANR	5115767	Identifier	i		5115743	1					
ANR	5115768	Identifier	offset		5115743	1					
ANR	5115769	Identifier	i		5115743	1					
ANR	5115770	ExpressionStatement	"qsort ( ( void * ) recs , N , sizeof ( * recs ) , compare_samples )"	449:4:13892:13946	5115743	2	True				
ANR	5115771	CallExpression	"qsort ( ( void * ) recs , N , sizeof ( * recs ) , compare_samples )"		5115743	0					
ANR	5115772	Callee	qsort		5115743	0					
ANR	5115773	Identifier	qsort		5115743	0					
ANR	5115774	ArgumentList	( void * ) recs		5115743	1					
ANR	5115775	Argument	( void * ) recs		5115743	0					
ANR	5115776	CastExpression	( void * ) recs		5115743	0					
ANR	5115777	CastTarget	void *		5115743	0					
ANR	5115778	Identifier	recs		5115743	1					
ANR	5115779	Argument	N		5115743	1					
ANR	5115780	Identifier	N		5115743	0					
ANR	5115781	Argument	sizeof ( * recs )		5115743	2					
ANR	5115782	SizeofExpression	sizeof ( * recs )		5115743	0					
ANR	5115783	Sizeof	sizeof		5115743	0					
ANR	5115784	UnaryOperationExpression	* recs		5115743	1					
ANR	5115785	UnaryOperator	*		5115743	0					
ANR	5115786	Identifier	recs		5115743	1					
ANR	5115787	Argument	compare_samples		5115743	3					
ANR	5115788	Identifier	compare_samples		5115743	0					
ANR	5115789	IfStatement	if ( gs_debug_c ( 'H' ) )		5115743	3					
ANR	5115790	Condition	gs_debug_c ( 'H' )	452:8:13991:14005	5115743	0	True				
ANR	5115791	CallExpression	gs_debug_c ( 'H' )		5115743	0					
ANR	5115792	Callee	gs_debug_c		5115743	0					
ANR	5115793	Identifier	gs_debug_c		5115743	0					
ANR	5115794	ArgumentList	'H'		5115743	1					
ANR	5115795	Argument	'H'		5115743	0					
ANR	5115796	PrimaryExpression	'H'		5115743	0					
ANR	5115797	CompoundStatement		11:8:254:260	5115743	1					
ANR	5115798	IdentifierDeclStatement	uint i ;	453:8:14018:14024	5115743	0	True				
ANR	5115799	IdentifierDecl	i		5115743	0					
ANR	5115800	IdentifierDeclType	uint		5115743	0					
ANR	5115801	Identifier	i		5115743	1					
ANR	5115802	ExpressionStatement	"dlputs ( ""[H]Sorted samples:\\n"" )"	455:8:14035:14065	5115743	1	True				
ANR	5115803	CallExpression	"dlputs ( ""[H]Sorted samples:\\n"" )"		5115743	0					
ANR	5115804	Callee	dlputs		5115743	0					
ANR	5115805	Identifier	dlputs		5115743	0					
ANR	5115806	ArgumentList	"""[H]Sorted samples:\\n"""		5115743	1					
ANR	5115807	Argument	"""[H]Sorted samples:\\n"""		5115743	0					
ANR	5115808	PrimaryExpression	"""[H]Sorted samples:\\n"""		5115743	0					
ANR	5115809	ForStatement	for ( i = 0 ; i < N ; i ++ )		5115743	2					
ANR	5115810	ForInit	i = 0 ;	456:13:14080:14085	5115743	0	True				
ANR	5115811	AssignmentExpression	i = 0		5115743	0		=			
ANR	5115812	Identifier	i		5115743	0					
ANR	5115813	PrimaryExpression	0		5115743	1					
ANR	5115814	Condition	i < N	456:20:14087:14091	5115743	1	True				
ANR	5115815	RelationalExpression	i < N		5115743	0		<			
ANR	5115816	Identifier	i		5115743	0					
ANR	5115817	Identifier	N		5115743	1					
ANR	5115818	PostIncDecOperationExpression	i ++	456:27:14094:14096	5115743	2	True				
ANR	5115819	Identifier	i		5115743	0					
ANR	5115820	IncDec	++		5115743	1					
ANR	5115821	ExpressionStatement	"dlprintf3 ( ""%5u: %5u: %u\\n"" , i , recs [ i ] . offset , recs [ i ] . mask )"	457:12:14111:14193	5115743	3	True				
ANR	5115822	CallExpression	"dlprintf3 ( ""%5u: %5u: %u\\n"" , i , recs [ i ] . offset , recs [ i ] . mask )"		5115743	0					
ANR	5115823	Callee	dlprintf3		5115743	0					
ANR	5115824	Identifier	dlprintf3		5115743	0					
ANR	5115825	ArgumentList	"""%5u: %5u: %u\\n"""		5115743	1					
ANR	5115826	Argument	"""%5u: %5u: %u\\n"""		5115743	0					
ANR	5115827	PrimaryExpression	"""%5u: %5u: %u\\n"""		5115743	0					
ANR	5115828	Argument	i		5115743	1					
ANR	5115829	Identifier	i		5115743	0					
ANR	5115830	Argument	recs [ i ] . offset		5115743	2					
ANR	5115831	MemberAccess	recs [ i ] . offset		5115743	0					
ANR	5115832	ArrayIndexing	recs [ i ]		5115743	0					
ANR	5115833	Identifier	recs		5115743	0					
ANR	5115834	Identifier	i		5115743	1					
ANR	5115835	Identifier	offset		5115743	1					
ANR	5115836	Argument	recs [ i ] . mask		5115743	3					
ANR	5115837	MemberAccess	recs [ i ] . mask		5115743	0					
ANR	5115838	ArrayIndexing	recs [ i ]		5115743	0					
ANR	5115839	Identifier	recs		5115743	0					
ANR	5115840	Identifier	i		5115743	1					
ANR	5115841	Identifier	mask		5115743	1					
ANR	5115842	ReturnType	void		5115743	1					
ANR	5115843	Identifier	gx_sort_ht_order		5115743	2					
ANR	5115844	ParameterList	"gx_ht_bit * recs , uint N"		5115743	3					
ANR	5115845	Parameter	gx_ht_bit * recs	442:17:13737:13752	5115743	0	True				
ANR	5115846	ParameterType	gx_ht_bit *		5115743	0					
ANR	5115847	Identifier	recs		5115743	1					
ANR	5115848	Parameter	uint N	442:35:13755:13760	5115743	1	True				
ANR	5115849	ParameterType	uint		5115743	0					
ANR	5115850	Identifier	N		5115743	1					
ANR	5115851	CFGEntryNode	ENTRY		5115743		True				
ANR	5115852	CFGExitNode	EXIT		5115743		True				
ANR	5115853	Symbol	* i		5115743						
ANR	5115854	Symbol	recs		5115743						
ANR	5115855	Symbol	compare_samples		5115743						
ANR	5115856	Symbol	i		5115743						
ANR	5115857	Symbol	* recs		5115743						
ANR	5115858	Symbol	gs_debug_c		5115743						
ANR	5115859	Symbol	recs [ i ] . mask		5115743						
ANR	5115860	Symbol	N		5115743						
ANR	5115861	Symbol	recs [ i ] . offset		5115743						
ANR	5115862	Function	gx_ht_construct_spot_order	470:0:14495:15849							
ANR	5115863	FunctionDef	gx_ht_construct_spot_order (gx_ht_order * porder)		5115862	0					
ANR	5115864	CompoundStatement		472:0:14549:15849	5115862	0					
ANR	5115865	IdentifierDeclStatement	uint width = porder -> width ;	473:4:14555:14581	5115862	0	True				
ANR	5115866	IdentifierDecl	width = porder -> width		5115862	0					
ANR	5115867	IdentifierDeclType	uint		5115862	0					
ANR	5115868	Identifier	width		5115862	1					
ANR	5115869	AssignmentExpression	width = porder -> width		5115862	2		=			
ANR	5115870	Identifier	width		5115862	0					
ANR	5115871	PtrMemberAccess	porder -> width		5115862	1					
ANR	5115872	Identifier	porder		5115862	0					
ANR	5115873	Identifier	width		5115862	1					
ANR	5115874	IdentifierDeclStatement	uint num_levels = porder -> num_levels ;	474:4:14587:14623	5115862	1	True				
ANR	5115875	IdentifierDecl	num_levels = porder -> num_levels		5115862	0					
ANR	5115876	IdentifierDeclType	uint		5115862	0					
ANR	5115877	Identifier	num_levels		5115862	1					
ANR	5115878	AssignmentExpression	num_levels = porder -> num_levels		5115862	2		=			
ANR	5115879	Identifier	num_levels		5115862	0					
ANR	5115880	PtrMemberAccess	porder -> num_levels		5115862	1					
ANR	5115881	Identifier	porder		5115862	0					
ANR	5115882	Identifier	num_levels		5115862	1					
ANR	5115883	IdentifierDeclStatement	uint strip = num_levels / width ;	475:4:14657:14688	5115862	2	True				
ANR	5115884	IdentifierDecl	strip = num_levels / width		5115862	0					
ANR	5115885	IdentifierDeclType	uint		5115862	0					
ANR	5115886	Identifier	strip		5115862	1					
ANR	5115887	AssignmentExpression	strip = num_levels / width		5115862	2		=			
ANR	5115888	Identifier	strip		5115862	0					
ANR	5115889	MultiplicativeExpression	num_levels / width		5115862	1		/			
ANR	5115890	Identifier	num_levels		5115862	0					
ANR	5115891	Identifier	width		5115862	1					
ANR	5115892	IdentifierDeclStatement	gx_ht_bit * bits = ( gx_ht_bit * ) porder -> bit_data ;	476:4:14694:14741	5115862	3	True				
ANR	5115893	IdentifierDecl	* bits = ( gx_ht_bit * ) porder -> bit_data		5115862	0					
ANR	5115894	IdentifierDeclType	gx_ht_bit *		5115862	0					
ANR	5115895	Identifier	bits		5115862	1					
ANR	5115896	AssignmentExpression	* bits = ( gx_ht_bit * ) porder -> bit_data		5115862	2		=			
ANR	5115897	Identifier	bits		5115862	0					
ANR	5115898	CastExpression	( gx_ht_bit * ) porder -> bit_data		5115862	1					
ANR	5115899	CastTarget	gx_ht_bit *		5115862	0					
ANR	5115900	PtrMemberAccess	porder -> bit_data		5115862	1					
ANR	5115901	Identifier	porder		5115862	0					
ANR	5115902	Identifier	bit_data		5115862	1					
ANR	5115903	IdentifierDeclStatement	uint * levels = porder -> levels ;	477:4:14747:14776	5115862	4	True				
ANR	5115904	IdentifierDecl	* levels = porder -> levels		5115862	0					
ANR	5115905	IdentifierDeclType	uint *		5115862	0					
ANR	5115906	Identifier	levels		5115862	1					
ANR	5115907	AssignmentExpression	* levels = porder -> levels		5115862	2		=			
ANR	5115908	Identifier	levels		5115862	0					
ANR	5115909	PtrMemberAccess	porder -> levels		5115862	1					
ANR	5115910	Identifier	porder		5115862	0					
ANR	5115911	Identifier	levels		5115862	1					
ANR	5115912	IdentifierDeclStatement	uint shift = porder -> orig_shift ;	478:4:14782:14813	5115862	5	True				
ANR	5115913	IdentifierDecl	shift = porder -> orig_shift		5115862	0					
ANR	5115914	IdentifierDeclType	uint		5115862	0					
ANR	5115915	Identifier	shift		5115862	1					
ANR	5115916	AssignmentExpression	shift = porder -> orig_shift		5115862	2		=			
ANR	5115917	Identifier	shift		5115862	0					
ANR	5115918	PtrMemberAccess	porder -> orig_shift		5115862	1					
ANR	5115919	Identifier	porder		5115862	0					
ANR	5115920	Identifier	orig_shift		5115862	1					
ANR	5115921	IdentifierDeclStatement	uint full_height = porder -> full_height ;	479:4:14819:14857	5115862	6	True				
ANR	5115922	IdentifierDecl	full_height = porder -> full_height		5115862	0					
ANR	5115923	IdentifierDeclType	uint		5115862	0					
ANR	5115924	Identifier	full_height		5115862	1					
ANR	5115925	AssignmentExpression	full_height = porder -> full_height		5115862	2		=			
ANR	5115926	Identifier	full_height		5115862	0					
ANR	5115927	PtrMemberAccess	porder -> full_height		5115862	1					
ANR	5115928	Identifier	porder		5115862	0					
ANR	5115929	Identifier	full_height		5115862	1					
ANR	5115930	IdentifierDeclStatement	uint num_bits = porder -> num_bits ;	480:4:14863:14895	5115862	7	True				
ANR	5115931	IdentifierDecl	num_bits = porder -> num_bits		5115862	0					
ANR	5115932	IdentifierDeclType	uint		5115862	0					
ANR	5115933	Identifier	num_bits		5115862	1					
ANR	5115934	AssignmentExpression	num_bits = porder -> num_bits		5115862	2		=			
ANR	5115935	Identifier	num_bits		5115862	0					
ANR	5115936	PtrMemberAccess	porder -> num_bits		5115862	1					
ANR	5115937	Identifier	porder		5115862	0					
ANR	5115938	Identifier	num_bits		5115862	1					
ANR	5115939	IdentifierDeclStatement	uint copies = num_bits / ( width * strip ) ;	481:4:14901:14941	5115862	8	True				
ANR	5115940	IdentifierDecl	copies = num_bits / ( width * strip )		5115862	0					
ANR	5115941	IdentifierDeclType	uint		5115862	0					
ANR	5115942	Identifier	copies		5115862	1					
ANR	5115943	AssignmentExpression	copies = num_bits / ( width * strip )		5115862	2		=			
ANR	5115944	Identifier	copies		5115862	0					
ANR	5115945	MultiplicativeExpression	num_bits / ( width * strip )		5115862	1		/			
ANR	5115946	Identifier	num_bits		5115862	0					
ANR	5115947	MultiplicativeExpression	width * strip		5115862	1		*			
ANR	5115948	Identifier	width		5115862	0					
ANR	5115949	Identifier	strip		5115862	1					
ANR	5115950	IdentifierDeclStatement	gx_ht_bit * bp = bits + num_bits - 1 ;	482:4:14947:14982	5115862	9	True				
ANR	5115951	IdentifierDecl	* bp = bits + num_bits - 1		5115862	0					
ANR	5115952	IdentifierDeclType	gx_ht_bit *		5115862	0					
ANR	5115953	Identifier	bp		5115862	1					
ANR	5115954	AssignmentExpression	* bp = bits + num_bits - 1		5115862	2		=			
ANR	5115955	Identifier	bp		5115862	0					
ANR	5115956	AdditiveExpression	bits + num_bits - 1		5115862	1		+			
ANR	5115957	Identifier	bits		5115862	0					
ANR	5115958	AdditiveExpression	num_bits - 1		5115862	1		-			
ANR	5115959	Identifier	num_bits		5115862	0					
ANR	5115960	PrimaryExpression	1		5115862	1					
ANR	5115961	IdentifierDeclStatement	uint i ;	483:4:14988:14994	5115862	10	True				
ANR	5115962	IdentifierDecl	i		5115862	0					
ANR	5115963	IdentifierDeclType	uint		5115862	0					
ANR	5115964	Identifier	i		5115862	1					
ANR	5115965	ExpressionStatement	"gx_sort_ht_order ( bits , num_levels )"	485:4:15001:15035	5115862	11	True				
ANR	5115966	CallExpression	"gx_sort_ht_order ( bits , num_levels )"		5115862	0					
ANR	5115967	Callee	gx_sort_ht_order		5115862	0					
ANR	5115968	Identifier	gx_sort_ht_order		5115862	0					
ANR	5115969	ArgumentList	bits		5115862	1					
ANR	5115970	Argument	bits		5115862	0					
ANR	5115971	Identifier	bits		5115862	0					
ANR	5115972	Argument	num_levels		5115862	1					
ANR	5115973	Identifier	num_levels		5115862	0					
ANR	5115974	ExpressionStatement	"if_debug5 ( 'h' , ""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"" , num_levels , width , porder -> orig_height , strip , shift )"	486:4:15041:15199	5115862	12	True				
ANR	5115975	CallExpression	"if_debug5 ( 'h' , ""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"" , num_levels , width , porder -> orig_height , strip , shift )"		5115862	0					
ANR	5115976	Callee	if_debug5		5115862	0					
ANR	5115977	Identifier	if_debug5		5115862	0					
ANR	5115978	ArgumentList	'h'		5115862	1					
ANR	5115979	Argument	'h'		5115862	0					
ANR	5115980	PrimaryExpression	'h'		5115862	0					
ANR	5115981	Argument	"""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"""		5115862	1					
ANR	5115982	PrimaryExpression	"""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"""		5115862	0					
ANR	5115983	Argument	num_levels		5115862	2					
ANR	5115984	Identifier	num_levels		5115862	0					
ANR	5115985	Argument	width		5115862	3					
ANR	5115986	Identifier	width		5115862	0					
ANR	5115987	Argument	porder -> orig_height		5115862	4					
ANR	5115988	PtrMemberAccess	porder -> orig_height		5115862	0					
ANR	5115989	Identifier	porder		5115862	0					
ANR	5115990	Identifier	orig_height		5115862	1					
ANR	5115991	Argument	strip		5115862	5					
ANR	5115992	Identifier	strip		5115862	0					
ANR	5115993	Argument	shift		5115862	6					
ANR	5115994	Identifier	shift		5115862	0					
ANR	5115995	ForStatement	for ( i = num_levels ; i > 0 ; )		5115862	13					
ANR	5115996	ForInit	i = num_levels ;	491:9:15299:15313	5115862	0	True				
ANR	5115997	AssignmentExpression	i = num_levels		5115862	0		=			
ANR	5115998	Identifier	i		5115862	0					
ANR	5115999	Identifier	num_levels		5115862	1					
ANR	5116000	Condition	i > 0	491:25:15315:15319	5115862	1	True				
ANR	5116001	RelationalExpression	i > 0		5115862	0		>			
ANR	5116002	Identifier	i		5115862	0					
ANR	5116003	PrimaryExpression	0		5115862	1					
ANR	5116004	CompoundStatement		24:8:886:892	5115862	2					
ANR	5116005	IdentifierDeclStatement	uint offset = bits [ -- i ] . offset ;	492:8:15333:15363	5115862	0	True				
ANR	5116006	IdentifierDecl	offset = bits [ -- i ] . offset		5115862	0					
ANR	5116007	IdentifierDeclType	uint		5115862	0					
ANR	5116008	Identifier	offset		5115862	1					
ANR	5116009	AssignmentExpression	offset = bits [ -- i ] . offset		5115862	2		=			
ANR	5116010	Identifier	offset		5115862	0					
ANR	5116011	MemberAccess	bits [ -- i ] . offset		5115862	1					
ANR	5116012	ArrayIndexing	bits [ -- i ]		5115862	0					
ANR	5116013	Identifier	bits		5115862	0					
ANR	5116014	UnaryExpression	-- i		5115862	1					
ANR	5116015	IncDec	--		5115862	0					
ANR	5116016	Identifier	i		5115862	1					
ANR	5116017	Identifier	offset		5115862	1					
ANR	5116018	IdentifierDeclStatement	uint x = offset % width ;	493:8:15373:15396	5115862	1	True				
ANR	5116019	IdentifierDecl	x = offset % width		5115862	0					
ANR	5116020	IdentifierDeclType	uint		5115862	0					
ANR	5116021	Identifier	x		5115862	1					
ANR	5116022	AssignmentExpression	x = offset % width		5115862	2		=			
ANR	5116023	Identifier	x		5115862	0					
ANR	5116024	MultiplicativeExpression	offset % width		5115862	1		%			
ANR	5116025	Identifier	offset		5115862	0					
ANR	5116026	Identifier	width		5115862	1					
ANR	5116027	IdentifierDeclStatement	uint hy = offset - x ;	494:8:15406:15426	5115862	2	True				
ANR	5116028	IdentifierDecl	hy = offset - x		5115862	0					
ANR	5116029	IdentifierDeclType	uint		5115862	0					
ANR	5116030	Identifier	hy		5115862	1					
ANR	5116031	AssignmentExpression	hy = offset - x		5115862	2		=			
ANR	5116032	Identifier	hy		5115862	0					
ANR	5116033	AdditiveExpression	offset - x		5115862	1		-			
ANR	5116034	Identifier	offset		5115862	0					
ANR	5116035	Identifier	x		5115862	1					
ANR	5116036	IdentifierDeclStatement	uint k ;	495:8:15436:15442	5115862	3	True				
ANR	5116037	IdentifierDecl	k		5115862	0					
ANR	5116038	IdentifierDeclType	uint		5115862	0					
ANR	5116039	Identifier	k		5115862	1					
ANR	5116040	ExpressionStatement	levels [ i ] = i * copies	497:8:15453:15475	5115862	4	True				
ANR	5116041	AssignmentExpression	levels [ i ] = i * copies		5115862	0		=			
ANR	5116042	ArrayIndexing	levels [ i ]		5115862	0					
ANR	5116043	Identifier	levels		5115862	0					
ANR	5116044	Identifier	i		5115862	1					
ANR	5116045	MultiplicativeExpression	i * copies		5115862	1		*			
ANR	5116046	Identifier	i		5115862	0					
ANR	5116047	Identifier	copies		5115862	1					
ANR	5116048	ForStatement	"for ( k = 0 ; k < copies ; k ++ , bp -- , hy += num_levels , x = ( x + width - shift ) % width )"		5115862	5					
ANR	5116049	ForInit	k = 0 ;	498:13:15490:15495	5115862	0	True				
ANR	5116050	AssignmentExpression	k = 0		5115862	0		=			
ANR	5116051	Identifier	k		5115862	0					
ANR	5116052	PrimaryExpression	0		5115862	1					
ANR	5116053	Condition	k < copies	498:20:15497:15506	5115862	1	True				
ANR	5116054	RelationalExpression	k < copies		5115862	0		<			
ANR	5116055	Identifier	k		5115862	0					
ANR	5116056	Identifier	copies		5115862	1					
ANR	5116057	Expression	"k ++ , bp -- , hy += num_levels , x = ( x + width - shift ) % width"	499:13:15522:15581	5115862	2	True				
ANR	5116058	PostIncDecOperationExpression	k ++		5115862	0					
ANR	5116059	Identifier	k		5115862	0					
ANR	5116060	IncDec	++		5115862	1					
ANR	5116061	Expression	"bp -- , hy += num_levels , x = ( x + width - shift ) % width"		5115862	1					
ANR	5116062	PostIncDecOperationExpression	bp --		5115862	0					
ANR	5116063	Identifier	bp		5115862	0					
ANR	5116064	IncDec	--		5115862	1					
ANR	5116065	Expression	"hy += num_levels , x = ( x + width - shift ) % width"		5115862	1					
ANR	5116066	AssignmentExpression	hy += num_levels		5115862	0		+=			
ANR	5116067	Identifier	hy		5115862	0					
ANR	5116068	Identifier	num_levels		5115862	1					
ANR	5116069	AssignmentExpression	x = ( x + width - shift ) % width		5115862	1		=			
ANR	5116070	Identifier	x		5115862	0					
ANR	5116071	MultiplicativeExpression	( x + width - shift ) % width		5115862	1		%			
ANR	5116072	AdditiveExpression	x + width - shift		5115862	0		+			
ANR	5116073	Identifier	x		5115862	0					
ANR	5116074	AdditiveExpression	width - shift		5115862	1		-			
ANR	5116075	Identifier	width		5115862	0					
ANR	5116076	Identifier	shift		5115862	1					
ANR	5116077	Identifier	width		5115862	1					
ANR	5116078	ExpressionStatement	bp -> offset = hy + x	501:12:15609:15628	5115862	3	True				
ANR	5116079	AssignmentExpression	bp -> offset = hy + x		5115862	0		=			
ANR	5116080	PtrMemberAccess	bp -> offset		5115862	0					
ANR	5116081	Identifier	bp		5115862	0					
ANR	5116082	Identifier	offset		5115862	1					
ANR	5116083	AdditiveExpression	hy + x		5115862	1		+			
ANR	5116084	Identifier	hy		5115862	0					
ANR	5116085	Identifier	x		5115862	1					
ANR	5116086	IfStatement	if ( num_bits == width * full_height )		5115862	14					
ANR	5116087	Condition	num_bits == width * full_height	504:8:15709:15739	5115862	0	True				
ANR	5116088	EqualityExpression	num_bits == width * full_height		5115862	0		==			
ANR	5116089	Identifier	num_bits		5115862	0					
ANR	5116090	MultiplicativeExpression	width * full_height		5115862	1		*			
ANR	5116091	Identifier	width		5115862	0					
ANR	5116092	Identifier	full_height		5115862	1					
ANR	5116093	CompoundStatement		33:41:1192:1192	5115862	1					
ANR	5116094	ExpressionStatement	porder -> height = full_height	505:8:15752:15780	5115862	0	True				
ANR	5116095	AssignmentExpression	porder -> height = full_height		5115862	0		=			
ANR	5116096	PtrMemberAccess	porder -> height		5115862	0					
ANR	5116097	Identifier	porder		5115862	0					
ANR	5116098	Identifier	height		5115862	1					
ANR	5116099	Identifier	full_height		5115862	1					
ANR	5116100	ExpressionStatement	porder -> shift = 0	506:8:15790:15807	5115862	1	True				
ANR	5116101	AssignmentExpression	porder -> shift = 0		5115862	0		=			
ANR	5116102	PtrMemberAccess	porder -> shift		5115862	0					
ANR	5116103	Identifier	porder		5115862	0					
ANR	5116104	Identifier	shift		5115862	1					
ANR	5116105	PrimaryExpression	0		5115862	1					
ANR	5116106	ExpressionStatement	gx_ht_construct_bits ( porder )	508:4:15819:15847	5115862	15	True				
ANR	5116107	CallExpression	gx_ht_construct_bits ( porder )		5115862	0					
ANR	5116108	Callee	gx_ht_construct_bits		5115862	0					
ANR	5116109	Identifier	gx_ht_construct_bits		5115862	0					
ANR	5116110	ArgumentList	porder		5115862	1					
ANR	5116111	Argument	porder		5115862	0					
ANR	5116112	Identifier	porder		5115862	0					
ANR	5116113	ReturnType	void		5115862	1					
ANR	5116114	Identifier	gx_ht_construct_spot_order		5115862	2					
ANR	5116115	ParameterList	gx_ht_order * porder		5115862	3					
ANR	5116116	Parameter	gx_ht_order * porder	471:27:14527:14546	5115862	0	True				
ANR	5116117	ParameterType	gx_ht_order *		5115862	0					
ANR	5116118	Identifier	porder		5115862	1					
ANR	5116119	CFGEntryNode	ENTRY		5115862		True				
ANR	5116120	CFGExitNode	EXIT		5115862		True				
ANR	5116121	Symbol	porder -> num_levels		5115862						
ANR	5116122	Symbol	shift		5115862						
ANR	5116123	Symbol	porder -> width		5115862						
ANR	5116124	Symbol	porder -> num_bits		5115862						
ANR	5116125	Symbol	bp		5115862						
ANR	5116126	Symbol	porder -> orig_height		5115862						
ANR	5116127	Symbol	porder -> shift		5115862						
ANR	5116128	Symbol	porder -> levels		5115862						
ANR	5116129	Symbol	hy		5115862						
ANR	5116130	Symbol	strip		5115862						
ANR	5116131	Symbol	porder -> bit_data		5115862						
ANR	5116132	Symbol	copies		5115862						
ANR	5116133	Symbol	porder -> full_height		5115862						
ANR	5116134	Symbol	* bp		5115862						
ANR	5116135	Symbol	bits [ -- i ] . offset		5115862						
ANR	5116136	Symbol	bp -> offset		5115862						
ANR	5116137	Symbol	porder -> orig_shift		5115862						
ANR	5116138	Symbol	* bits		5115862						
ANR	5116139	Symbol	full_height		5115862						
ANR	5116140	Symbol	offset		5115862						
ANR	5116141	Symbol	porder -> height		5115862						
ANR	5116142	Symbol	bits		5115862						
ANR	5116143	Symbol	i		5115862						
ANR	5116144	Symbol	k		5115862						
ANR	5116145	Symbol	porder		5115862						
ANR	5116146	Symbol	* levels		5115862						
ANR	5116147	Symbol	* i		5115862						
ANR	5116148	Symbol	width		5115862						
ANR	5116149	Symbol	x		5115862						
ANR	5116150	Symbol	num_bits		5115862						
ANR	5116151	Symbol	* porder		5115862						
ANR	5116152	Symbol	levels		5115862						
ANR	5116153	Symbol	num_levels		5115862						
ANR	5116154	Function	gx_ht_construct_bit	512:0:15890:16552							
ANR	5116155	FunctionDef	"gx_ht_construct_bit (gx_ht_bit * bit , int width , int bit_num)"		5116154	0					
ANR	5116156	CompoundStatement		514:0:15956:16552	5116154	0					
ANR	5116157	IdentifierDeclStatement	uint padding = bitmap_raster ( width ) * 8 - width ;	515:4:15962:16009	5116154	0	True				
ANR	5116158	IdentifierDecl	padding = bitmap_raster ( width ) * 8 - width		5116154	0					
ANR	5116159	IdentifierDeclType	uint		5116154	0					
ANR	5116160	Identifier	padding		5116154	1					
ANR	5116161	AssignmentExpression	padding = bitmap_raster ( width ) * 8 - width		5116154	2		=			
ANR	5116162	Identifier	padding		5116154	0					
ANR	5116163	AdditiveExpression	bitmap_raster ( width ) * 8 - width		5116154	1		-			
ANR	5116164	MultiplicativeExpression	bitmap_raster ( width ) * 8		5116154	0		*			
ANR	5116165	CallExpression	bitmap_raster ( width )		5116154	0					
ANR	5116166	Callee	bitmap_raster		5116154	0					
ANR	5116167	Identifier	bitmap_raster		5116154	0					
ANR	5116168	ArgumentList	width		5116154	1					
ANR	5116169	Argument	width		5116154	0					
ANR	5116170	Identifier	width		5116154	0					
ANR	5116171	PrimaryExpression	8		5116154	1					
ANR	5116172	Identifier	width		5116154	1					
ANR	5116173	IdentifierDeclStatement	int pix = bit_num ;	516:4:16015:16032	5116154	1	True				
ANR	5116174	IdentifierDecl	pix = bit_num		5116154	0					
ANR	5116175	IdentifierDeclType	int		5116154	0					
ANR	5116176	Identifier	pix		5116154	1					
ANR	5116177	AssignmentExpression	pix = bit_num		5116154	2		=			
ANR	5116178	Identifier	bit_num		5116154	0					
ANR	5116179	Identifier	bit_num		5116154	1					
ANR	5116180	IdentifierDeclStatement	ht_mask_t mask ;	517:4:16038:16052	5116154	2	True				
ANR	5116181	IdentifierDecl	mask		5116154	0					
ANR	5116182	IdentifierDeclType	ht_mask_t		5116154	0					
ANR	5116183	Identifier	mask		5116154	1					
ANR	5116184	IdentifierDeclStatement	byte * pb ;	518:4:16058:16066	5116154	3	True				
ANR	5116185	IdentifierDecl	* pb		5116154	0					
ANR	5116186	IdentifierDeclType	byte *		5116154	0					
ANR	5116187	Identifier	pb		5116154	1					
ANR	5116188	ExpressionStatement	pix += pix / width * padding	520:4:16073:16101	5116154	4	True				
ANR	5116189	AssignmentExpression	pix += pix / width * padding		5116154	0		+=			
ANR	5116190	Identifier	pix		5116154	0					
ANR	5116191	MultiplicativeExpression	pix / width * padding		5116154	1		/			
ANR	5116192	Identifier	pix		5116154	0					
ANR	5116193	MultiplicativeExpression	width * padding		5116154	1		*			
ANR	5116194	Identifier	width		5116154	0					
ANR	5116195	Identifier	padding		5116154	1					
ANR	5116196	ExpressionStatement	bit -> offset = ( pix >> 3 ) & - size_of ( mask )	521:4:16107:16148	5116154	5	True				
ANR	5116197	AssignmentExpression	bit -> offset = ( pix >> 3 ) & - size_of ( mask )		5116154	0		=			
ANR	5116198	PtrMemberAccess	bit -> offset		5116154	0					
ANR	5116199	Identifier	bit		5116154	0					
ANR	5116200	Identifier	offset		5116154	1					
ANR	5116201	BitAndExpression	( pix >> 3 ) & - size_of ( mask )		5116154	1		&			
ANR	5116202	ShiftExpression	pix >> 3		5116154	0		>>			
ANR	5116203	Identifier	pix		5116154	0					
ANR	5116204	PrimaryExpression	3		5116154	1					
ANR	5116205	UnaryOperationExpression	- size_of ( mask )		5116154	1					
ANR	5116206	UnaryOperator	-		5116154	0					
ANR	5116207	CallExpression	size_of ( mask )		5116154	1					
ANR	5116208	Callee	size_of		5116154	0					
ANR	5116209	Identifier	size_of		5116154	0					
ANR	5116210	ArgumentList	mask		5116154	1					
ANR	5116211	Argument	mask		5116154	0					
ANR	5116212	Identifier	mask		5116154	0					
ANR	5116213	ExpressionStatement	mask = ( ht_mask_t ) 1 << ( ~pix & ( ht_mask_bits - 1 ) )	522:4:16154:16205	5116154	6	True				
ANR	5116214	AssignmentExpression	mask = ( ht_mask_t ) 1 << ( ~pix & ( ht_mask_bits - 1 ) )		5116154	0		=			
ANR	5116215	Identifier	mask		5116154	0					
ANR	5116216	ShiftExpression	( ht_mask_t ) 1 << ( ~pix & ( ht_mask_bits - 1 ) )		5116154	1		<<			
ANR	5116217	CastExpression	( ht_mask_t ) 1		5116154	0					
ANR	5116218	CastTarget	ht_mask_t		5116154	0					
ANR	5116219	PrimaryExpression	1		5116154	1					
ANR	5116220	BitAndExpression	~pix & ( ht_mask_bits - 1 )		5116154	1		&			
ANR	5116221	Identifier	~pix		5116154	0					
ANR	5116222	AdditiveExpression	ht_mask_bits - 1		5116154	1		-			
ANR	5116223	Identifier	ht_mask_bits		5116154	0					
ANR	5116224	PrimaryExpression	1		5116154	1					
ANR	5116225	ExpressionStatement	pix = ht_mask_bits - width	524:4:16246:16272	5116154	7	True				
ANR	5116226	AssignmentExpression	pix = ht_mask_bits - width		5116154	0		=			
ANR	5116227	Identifier	pix		5116154	0					
ANR	5116228	AdditiveExpression	ht_mask_bits - width		5116154	1		-			
ANR	5116229	Identifier	ht_mask_bits		5116154	0					
ANR	5116230	Identifier	width		5116154	1					
ANR	5116231	WhileStatement	while ( ( pix -= width ) >= 0 )		5116154	8					
ANR	5116232	Condition	( pix -= width ) >= 0	525:11:16285:16303	5116154	0	True				
ANR	5116233	RelationalExpression	( pix -= width ) >= 0		5116154	0		>=			
ANR	5116234	AssignmentExpression	pix -= width		5116154	0		-=			
ANR	5116235	Identifier	pix		5116154	0					
ANR	5116236	Identifier	width		5116154	1					
ANR	5116237	PrimaryExpression	0		5116154	1					
ANR	5116238	ExpressionStatement	mask |= mask >> width	526:8:16314:16335	5116154	1	True				
ANR	5116239	AssignmentExpression	mask |= mask >> width		5116154	0		|=			
ANR	5116240	Identifier	mask		5116154	0					
ANR	5116241	ShiftExpression	mask >> width		5116154	1		>>			
ANR	5116242	Identifier	mask		5116154	0					
ANR	5116243	Identifier	width		5116154	1					
ANR	5116244	ExpressionStatement	bit -> mask = 0	528:4:16397:16410	5116154	9	True				
ANR	5116245	AssignmentExpression	bit -> mask = 0		5116154	0		=			
ANR	5116246	PtrMemberAccess	bit -> mask		5116154	0					
ANR	5116247	Identifier	bit		5116154	0					
ANR	5116248	Identifier	mask		5116154	1					
ANR	5116249	PrimaryExpression	0		5116154	1					
ANR	5116250	ForStatement	"for ( pb = ( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 ) ; mask != 0 ; mask >>= 8 , pb -- )"		5116154	10					
ANR	5116251	ForInit	pb = ( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 ) ;	529:9:16421:16467	5116154	0	True				
ANR	5116252	AssignmentExpression	pb = ( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 )		5116154	0		=			
ANR	5116253	Identifier	pb		5116154	0					
ANR	5116254	AdditiveExpression	( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 )		5116154	1		+			
ANR	5116255	CastExpression	( byte * ) & bit -> mask		5116154	0					
ANR	5116256	CastTarget	byte *		5116154	0					
ANR	5116257	UnaryOperationExpression	& bit -> mask		5116154	1					
ANR	5116258	UnaryOperator	&		5116154	0					
ANR	5116259	PtrMemberAccess	bit -> mask		5116154	1					
ANR	5116260	Identifier	bit		5116154	0					
ANR	5116261	Identifier	mask		5116154	1					
ANR	5116262	AdditiveExpression	sizeof ( mask ) - 1		5116154	1		-			
ANR	5116263	SizeofExpression	sizeof ( mask )		5116154	0					
ANR	5116264	Sizeof	sizeof		5116154	0					
ANR	5116265	SizeofOperand	mask		5116154	1					
ANR	5116266	PrimaryExpression	1		5116154	1					
ANR	5116267	Condition	mask != 0	530:9:16478:16486	5116154	1	True				
ANR	5116268	EqualityExpression	mask != 0		5116154	0		!=			
ANR	5116269	Identifier	mask		5116154	0					
ANR	5116270	PrimaryExpression	0		5116154	1					
ANR	5116271	Expression	"mask >>= 8 , pb --"	531:9:16498:16513	5116154	2	True				
ANR	5116272	AssignmentExpression	mask >>= 8		5116154	0		>>=			
ANR	5116273	Identifier	mask		5116154	0					
ANR	5116274	PrimaryExpression	8		5116154	1					
ANR	5116275	PostIncDecOperationExpression	pb --		5116154	1					
ANR	5116276	Identifier	pb		5116154	0					
ANR	5116277	IncDec	--		5116154	1					
ANR	5116278	ExpressionStatement	* pb = ( byte ) mask	533:8:16533:16550	5116154	3	True				
ANR	5116279	AssignmentExpression	* pb = ( byte ) mask		5116154	0		=			
ANR	5116280	UnaryOperationExpression	* pb		5116154	0					
ANR	5116281	UnaryOperator	*		5116154	0					
ANR	5116282	Identifier	pb		5116154	1					
ANR	5116283	CastExpression	( byte ) mask		5116154	1					
ANR	5116284	CastTarget	byte		5116154	0					
ANR	5116285	Identifier	mask		5116154	1					
ANR	5116286	ReturnType	void		5116154	1					
ANR	5116287	Identifier	gx_ht_construct_bit		5116154	2					
ANR	5116288	ParameterList	"gx_ht_bit * bit , int width , int bit_num"		5116154	3					
ANR	5116289	Parameter	gx_ht_bit * bit	513:20:15915:15929	5116154	0	True				
ANR	5116290	ParameterType	gx_ht_bit *		5116154	0					
ANR	5116291	Identifier	bit		5116154	1					
ANR	5116292	Parameter	int width	513:37:15932:15940	5116154	1	True				
ANR	5116293	ParameterType	int		5116154	0					
ANR	5116294	Identifier	width		5116154	1					
ANR	5116295	Parameter	int bit_num	513:48:15943:15953	5116154	2	True				
ANR	5116296	ParameterType	int		5116154	0					
ANR	5116297	Identifier	bit_num		5116154	1					
ANR	5116298	CFGEntryNode	ENTRY		5116154		True				
ANR	5116299	CFGExitNode	EXIT		5116154		True				
ANR	5116300	Symbol	padding		5116154						
ANR	5116301	Symbol	bit -> mask		5116154						
ANR	5116302	Symbol	* bit		5116154						
ANR	5116303	Symbol	ht_mask_bits		5116154						
ANR	5116304	Symbol	bit_num		5116154						
ANR	5116305	Symbol	bit		5116154						
ANR	5116306	Symbol	bit -> offset		5116154						
ANR	5116307	Symbol	bitmap_raster		5116154						
ANR	5116308	Symbol	pb		5116154						
ANR	5116309	Symbol	size_of		5116154						
ANR	5116310	Symbol	width		5116154						
ANR	5116311	Symbol	& bit -> mask		5116154						
ANR	5116312	Symbol	~pix		5116154						
ANR	5116313	Symbol	* pb		5116154						
ANR	5116314	Symbol	pix		5116154						
ANR	5116315	Symbol	mask		5116154						
ANR	5116316	Function	gx_ht_construct_bits	539:0:16721:17363							
ANR	5116317	FunctionDef	gx_ht_construct_bits (gx_ht_order * porder)		5116316	0					
ANR	5116318	CompoundStatement		541:0:16769:17363	5116316	0					
ANR	5116319	IdentifierDeclStatement	uint i ;	542:4:16775:16781	5116316	0	True				
ANR	5116320	IdentifierDecl	i		5116316	0					
ANR	5116321	IdentifierDeclType	uint		5116316	0					
ANR	5116322	Identifier	i		5116316	1					
ANR	5116323	IdentifierDeclStatement	gx_ht_bit * phb ;	543:4:16787:16801	5116316	1	True				
ANR	5116324	IdentifierDecl	* phb		5116316	0					
ANR	5116325	IdentifierDeclType	gx_ht_bit *		5116316	0					
ANR	5116326	Identifier	phb		5116316	1					
ANR	5116327	ForStatement	"for ( i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ; i < porder -> num_bits ; i ++ , phb ++ )"		5116316	2					
ANR	5116328	ForInit	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ;"	545:9:16813:16855	5116316	0	True				
ANR	5116329	Expression	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data"		5116316	0					
ANR	5116330	AssignmentExpression	i = 0		5116316	0		=			
ANR	5116331	Identifier	i		5116316	0					
ANR	5116332	PrimaryExpression	0		5116316	1					
ANR	5116333	AssignmentExpression	phb = ( gx_ht_bit * ) porder -> bit_data		5116316	1		=			
ANR	5116334	Identifier	phb		5116316	0					
ANR	5116335	CastExpression	( gx_ht_bit * ) porder -> bit_data		5116316	1					
ANR	5116336	CastTarget	gx_ht_bit *		5116316	0					
ANR	5116337	PtrMemberAccess	porder -> bit_data		5116316	1					
ANR	5116338	Identifier	porder		5116316	0					
ANR	5116339	Identifier	bit_data		5116316	1					
ANR	5116340	Condition	i < porder -> num_bits	546:9:16866:16885	5116316	1	True				
ANR	5116341	RelationalExpression	i < porder -> num_bits		5116316	0		<			
ANR	5116342	Identifier	i		5116316	0					
ANR	5116343	PtrMemberAccess	porder -> num_bits		5116316	1					
ANR	5116344	Identifier	porder		5116316	0					
ANR	5116345	Identifier	num_bits		5116316	1					
ANR	5116346	Expression	"i ++ , phb ++"	547:9:16897:16906	5116316	2	True				
ANR	5116347	PostIncDecOperationExpression	i ++		5116316	0					
ANR	5116348	Identifier	i		5116316	0					
ANR	5116349	IncDec	++		5116316	1					
ANR	5116350	PostIncDecOperationExpression	phb ++		5116316	1					
ANR	5116351	Identifier	phb		5116316	0					
ANR	5116352	IncDec	++		5116316	1					
ANR	5116353	ExpressionStatement	"gx_ht_construct_bit ( phb , porder -> width , phb -> offset )"	548:8:16917:16969	5116316	3	True				
ANR	5116354	CallExpression	"gx_ht_construct_bit ( phb , porder -> width , phb -> offset )"		5116316	0					
ANR	5116355	Callee	gx_ht_construct_bit		5116316	0					
ANR	5116356	Identifier	gx_ht_construct_bit		5116316	0					
ANR	5116357	ArgumentList	phb		5116316	1					
ANR	5116358	Argument	phb		5116316	0					
ANR	5116359	Identifier	phb		5116316	0					
ANR	5116360	Argument	porder -> width		5116316	1					
ANR	5116361	PtrMemberAccess	porder -> width		5116316	0					
ANR	5116362	Identifier	porder		5116316	0					
ANR	5116363	Identifier	width		5116316	1					
ANR	5116364	Argument	phb -> offset		5116316	2					
ANR	5116365	PtrMemberAccess	phb -> offset		5116316	0					
ANR	5116366	Identifier	phb		5116316	0					
ANR	5116367	Identifier	offset		5116316	1					
ANR	5116368	IfStatement	if ( gs_debug_c ( 'H' ) )		5116316	3					
ANR	5116369	Condition	gs_debug_c ( 'H' )	550:8:16992:17006	5116316	0	True				
ANR	5116370	CallExpression	gs_debug_c ( 'H' )		5116316	0					
ANR	5116371	Callee	gs_debug_c		5116316	0					
ANR	5116372	Identifier	gs_debug_c		5116316	0					
ANR	5116373	ArgumentList	'H'		5116316	1					
ANR	5116374	Argument	'H'		5116316	0					
ANR	5116375	PrimaryExpression	'H'		5116316	0					
ANR	5116376	CompoundStatement		10:25:239:239	5116316	1					
ANR	5116377	ExpressionStatement	"dmlprintf1 ( porder -> data_memory , ""[H]Halftone order bits 0x%lx:\\n"" , ( ulong ) porder -> bit_data )"	551:8:17019:17110	5116316	0	True				
ANR	5116378	CallExpression	"dmlprintf1 ( porder -> data_memory , ""[H]Halftone order bits 0x%lx:\\n"" , ( ulong ) porder -> bit_data )"		5116316	0					
ANR	5116379	Callee	dmlprintf1		5116316	0					
ANR	5116380	Identifier	dmlprintf1		5116316	0					
ANR	5116381	ArgumentList	porder -> data_memory		5116316	1					
ANR	5116382	Argument	porder -> data_memory		5116316	0					
ANR	5116383	PtrMemberAccess	porder -> data_memory		5116316	0					
ANR	5116384	Identifier	porder		5116316	0					
ANR	5116385	Identifier	data_memory		5116316	1					
ANR	5116386	Argument	"""[H]Halftone order bits 0x%lx:\\n"""		5116316	1					
ANR	5116387	PrimaryExpression	"""[H]Halftone order bits 0x%lx:\\n"""		5116316	0					
ANR	5116388	Argument	( ulong ) porder -> bit_data		5116316	2					
ANR	5116389	CastExpression	( ulong ) porder -> bit_data		5116316	0					
ANR	5116390	CastTarget	ulong		5116316	0					
ANR	5116391	PtrMemberAccess	porder -> bit_data		5116316	1					
ANR	5116392	Identifier	porder		5116316	0					
ANR	5116393	Identifier	bit_data		5116316	1					
ANR	5116394	ForStatement	"for ( i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ; i < porder -> num_bits ; i ++ , phb ++ )"		5116316	1					
ANR	5116395	ForInit	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ;"	552:13:17125:17167	5116316	0	True				
ANR	5116396	Expression	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data"		5116316	0					
ANR	5116397	AssignmentExpression	i = 0		5116316	0		=			
ANR	5116398	Identifier	i		5116316	0					
ANR	5116399	PrimaryExpression	0		5116316	1					
ANR	5116400	AssignmentExpression	phb = ( gx_ht_bit * ) porder -> bit_data		5116316	1		=			
ANR	5116401	Identifier	phb		5116316	0					
ANR	5116402	CastExpression	( gx_ht_bit * ) porder -> bit_data		5116316	1					
ANR	5116403	CastTarget	gx_ht_bit *		5116316	0					
ANR	5116404	PtrMemberAccess	porder -> bit_data		5116316	1					
ANR	5116405	Identifier	porder		5116316	0					
ANR	5116406	Identifier	bit_data		5116316	1					
ANR	5116407	Condition	i < porder -> num_bits	553:13:17182:17201	5116316	1	True				
ANR	5116408	RelationalExpression	i < porder -> num_bits		5116316	0		<			
ANR	5116409	Identifier	i		5116316	0					
ANR	5116410	PtrMemberAccess	porder -> num_bits		5116316	1					
ANR	5116411	Identifier	porder		5116316	0					
ANR	5116412	Identifier	num_bits		5116316	1					
ANR	5116413	Expression	"i ++ , phb ++"	554:13:17217:17226	5116316	2	True				
ANR	5116414	PostIncDecOperationExpression	i ++		5116316	0					
ANR	5116415	Identifier	i		5116316	0					
ANR	5116416	IncDec	++		5116316	1					
ANR	5116417	PostIncDecOperationExpression	phb ++		5116316	1					
ANR	5116418	Identifier	phb		5116316	0					
ANR	5116419	IncDec	++		5116316	1					
ANR	5116420	ExpressionStatement	"dmlprintf3 ( porder -> data_memory , ""%4d: %u:0x%lx\\n"" , i , phb -> offset , ( ulong ) phb -> mask )"	555:12:17241:17348	5116316	3	True				
ANR	5116421	CallExpression	"dmlprintf3 ( porder -> data_memory , ""%4d: %u:0x%lx\\n"" , i , phb -> offset , ( ulong ) phb -> mask )"		5116316	0					
ANR	5116422	Callee	dmlprintf3		5116316	0					
ANR	5116423	Identifier	dmlprintf3		5116316	0					
ANR	5116424	ArgumentList	porder -> data_memory		5116316	1					
ANR	5116425	Argument	porder -> data_memory		5116316	0					
ANR	5116426	PtrMemberAccess	porder -> data_memory		5116316	0					
ANR	5116427	Identifier	porder		5116316	0					
ANR	5116428	Identifier	data_memory		5116316	1					
ANR	5116429	Argument	"""%4d: %u:0x%lx\\n"""		5116316	1					
ANR	5116430	PrimaryExpression	"""%4d: %u:0x%lx\\n"""		5116316	0					
ANR	5116431	Argument	i		5116316	2					
ANR	5116432	Identifier	i		5116316	0					
ANR	5116433	Argument	phb -> offset		5116316	3					
ANR	5116434	PtrMemberAccess	phb -> offset		5116316	0					
ANR	5116435	Identifier	phb		5116316	0					
ANR	5116436	Identifier	offset		5116316	1					
ANR	5116437	Argument	( ulong ) phb -> mask		5116316	4					
ANR	5116438	CastExpression	( ulong ) phb -> mask		5116316	0					
ANR	5116439	CastTarget	ulong		5116316	0					
ANR	5116440	PtrMemberAccess	phb -> mask		5116316	1					
ANR	5116441	Identifier	phb		5116316	0					
ANR	5116442	Identifier	mask		5116316	1					
ANR	5116443	ReturnType	void		5116316	1					
ANR	5116444	Identifier	gx_ht_construct_bits		5116316	2					
ANR	5116445	ParameterList	gx_ht_order * porder		5116316	3					
ANR	5116446	Parameter	gx_ht_order * porder	540:21:16747:16766	5116316	0	True				
ANR	5116447	ParameterType	gx_ht_order *		5116316	0					
ANR	5116448	Identifier	porder		5116316	1					
ANR	5116449	CFGEntryNode	ENTRY		5116316		True				
ANR	5116450	CFGExitNode	EXIT		5116316		True				
ANR	5116451	Symbol	phb -> mask		5116316						
ANR	5116452	Symbol	porder -> bit_data		5116316						
ANR	5116453	Symbol	* phb		5116316						
ANR	5116454	Symbol	i		5116316						
ANR	5116455	Symbol	porder -> width		5116316						
ANR	5116456	Symbol	gs_debug_c		5116316						
ANR	5116457	Symbol	phb		5116316						
ANR	5116458	Symbol	phb -> offset		5116316						
ANR	5116459	Symbol	porder -> num_bits		5116316						
ANR	5116460	Symbol	* porder		5116316						
ANR	5116461	Symbol	porder		5116316						
ANR	5116462	Symbol	porder -> data_memory		5116316						
ANR	5116463	Function	gx_ht_order_release	563:0:17478:18396							
ANR	5116464	FunctionDef	"gx_ht_order_release (gx_ht_order * porder , gs_memory_t * mem , bool free_cache)"		5116463	0					
ANR	5116465	CompoundStatement		565:0:17561:18396	5116463	0					
ANR	5116466	IfStatement	if ( free_cache )		5116463	0					
ANR	5116467	Condition	free_cache	567:8:17632:17641	5116463	0	True				
ANR	5116468	Identifier	free_cache		5116463	0					
ANR	5116469	CompoundStatement		3:20:82:82	5116463	1					
ANR	5116470	IfStatement	if ( porder -> cache != 0 )		5116463	0					
ANR	5116471	Condition	porder -> cache != 0	568:12:17658:17675	5116463	0	True				
ANR	5116472	EqualityExpression	porder -> cache != 0		5116463	0		!=			
ANR	5116473	PtrMemberAccess	porder -> cache		5116463	0					
ANR	5116474	Identifier	porder		5116463	0					
ANR	5116475	Identifier	cache		5116463	1					
ANR	5116476	PrimaryExpression	0		5116463	1					
ANR	5116477	ExpressionStatement	"gx_ht_free_cache ( mem , porder -> cache )"	569:12:17690:17726	5116463	1	True				
ANR	5116478	CallExpression	"gx_ht_free_cache ( mem , porder -> cache )"		5116463	0					
ANR	5116479	Callee	gx_ht_free_cache		5116463	0					
ANR	5116480	Identifier	gx_ht_free_cache		5116463	0					
ANR	5116481	ArgumentList	mem		5116463	1					
ANR	5116482	Argument	mem		5116463	0					
ANR	5116483	Identifier	mem		5116463	0					
ANR	5116484	Argument	porder -> cache		5116463	1					
ANR	5116485	PtrMemberAccess	porder -> cache		5116463	0					
ANR	5116486	Identifier	porder		5116463	0					
ANR	5116487	Identifier	cache		5116463	1					
ANR	5116488	ExpressionStatement	porder -> cache = 0	571:4:17738:17755	5116463	1	True				
ANR	5116489	AssignmentExpression	porder -> cache = 0		5116463	0		=			
ANR	5116490	PtrMemberAccess	porder -> cache		5116463	0					
ANR	5116491	Identifier	porder		5116463	0					
ANR	5116492	Identifier	cache		5116463	1					
ANR	5116493	PrimaryExpression	0		5116463	1					
ANR	5116494	ExpressionStatement	"rc_decrement ( porder -> transfer , ""gx_ht_order_release(transfer)"" )"	572:4:17761:17824	5116463	2	True				
ANR	5116495	CallExpression	"rc_decrement ( porder -> transfer , ""gx_ht_order_release(transfer)"" )"		5116463	0					
ANR	5116496	Callee	rc_decrement		5116463	0					
ANR	5116497	Identifier	rc_decrement		5116463	0					
ANR	5116498	ArgumentList	porder -> transfer		5116463	1					
ANR	5116499	Argument	porder -> transfer		5116463	0					
ANR	5116500	PtrMemberAccess	porder -> transfer		5116463	0					
ANR	5116501	Identifier	porder		5116463	0					
ANR	5116502	Identifier	transfer		5116463	1					
ANR	5116503	Argument	"""gx_ht_order_release(transfer)"""		5116463	1					
ANR	5116504	PrimaryExpression	"""gx_ht_order_release(transfer)"""		5116463	0					
ANR	5116505	ExpressionStatement	porder -> transfer = 0	573:4:17830:17850	5116463	3	True				
ANR	5116506	AssignmentExpression	porder -> transfer = 0		5116463	0		=			
ANR	5116507	PtrMemberAccess	porder -> transfer		5116463	0					
ANR	5116508	Identifier	porder		5116463	0					
ANR	5116509	Identifier	transfer		5116463	1					
ANR	5116510	PrimaryExpression	0		5116463	1					
ANR	5116511	IfStatement	if ( porder -> data_memory != 0 )		5116463	4					
ANR	5116512	Condition	porder -> data_memory != 0	574:8:17860:17883	5116463	0	True				
ANR	5116513	EqualityExpression	porder -> data_memory != 0		5116463	0		!=			
ANR	5116514	PtrMemberAccess	porder -> data_memory		5116463	0					
ANR	5116515	Identifier	porder		5116463	0					
ANR	5116516	Identifier	data_memory		5116463	1					
ANR	5116517	PrimaryExpression	0		5116463	1					
ANR	5116518	CompoundStatement		10:34:324:324	5116463	1					
ANR	5116519	ExpressionStatement	"gs_free_object ( porder -> data_memory , porder -> bit_data , ""gx_ht_order_release(bit_data)"" )"	575:8:17896:18005	5116463	0	True				
ANR	5116520	CallExpression	"gs_free_object ( porder -> data_memory , porder -> bit_data , ""gx_ht_order_release(bit_data)"" )"		5116463	0					
ANR	5116521	Callee	gs_free_object		5116463	0					
ANR	5116522	Identifier	gs_free_object		5116463	0					
ANR	5116523	ArgumentList	porder -> data_memory		5116463	1					
ANR	5116524	Argument	porder -> data_memory		5116463	0					
ANR	5116525	PtrMemberAccess	porder -> data_memory		5116463	0					
ANR	5116526	Identifier	porder		5116463	0					
ANR	5116527	Identifier	data_memory		5116463	1					
ANR	5116528	Argument	porder -> bit_data		5116463	1					
ANR	5116529	PtrMemberAccess	porder -> bit_data		5116463	0					
ANR	5116530	Identifier	porder		5116463	0					
ANR	5116531	Identifier	bit_data		5116463	1					
ANR	5116532	Argument	"""gx_ht_order_release(bit_data)"""		5116463	2					
ANR	5116533	PrimaryExpression	"""gx_ht_order_release(bit_data)"""		5116463	0					
ANR	5116534	ExpressionStatement	"gs_free_object ( porder -> data_memory , porder -> levels , ""gx_ht_order_release(levels)"" )"	577:8:18015:18120	5116463	1	True				
ANR	5116535	CallExpression	"gs_free_object ( porder -> data_memory , porder -> levels , ""gx_ht_order_release(levels)"" )"		5116463	0					
ANR	5116536	Callee	gs_free_object		5116463	0					
ANR	5116537	Identifier	gs_free_object		5116463	0					
ANR	5116538	ArgumentList	porder -> data_memory		5116463	1					
ANR	5116539	Argument	porder -> data_memory		5116463	0					
ANR	5116540	PtrMemberAccess	porder -> data_memory		5116463	0					
ANR	5116541	Identifier	porder		5116463	0					
ANR	5116542	Identifier	data_memory		5116463	1					
ANR	5116543	Argument	porder -> levels		5116463	1					
ANR	5116544	PtrMemberAccess	porder -> levels		5116463	0					
ANR	5116545	Identifier	porder		5116463	0					
ANR	5116546	Identifier	levels		5116463	1					
ANR	5116547	Argument	"""gx_ht_order_release(levels)"""		5116463	2					
ANR	5116548	PrimaryExpression	"""gx_ht_order_release(levels)"""		5116463	0					
ANR	5116549	IfStatement	if ( porder -> threshold != NULL )		5116463	2					
ANR	5116550	Condition	porder -> threshold != NULL	579:12:18134:18158	5116463	0	True				
ANR	5116551	EqualityExpression	porder -> threshold != NULL		5116463	0		!=			
ANR	5116552	PtrMemberAccess	porder -> threshold		5116463	0					
ANR	5116553	Identifier	porder		5116463	0					
ANR	5116554	Identifier	threshold		5116463	1					
ANR	5116555	Identifier	NULL		5116463	1					
ANR	5116556	CompoundStatement		15:39:599:599	5116463	1					
ANR	5116557	ExpressionStatement	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""gx_ht_order_release(threshold)"" )"	580:12:18175:18301	5116463	0	True				
ANR	5116558	CallExpression	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""gx_ht_order_release(threshold)"" )"		5116463	0					
ANR	5116559	Callee	gs_free_object		5116463	0					
ANR	5116560	Identifier	gs_free_object		5116463	0					
ANR	5116561	ArgumentList	porder -> data_memory -> non_gc_memory		5116463	1					
ANR	5116562	Argument	porder -> data_memory -> non_gc_memory		5116463	0					
ANR	5116563	PtrMemberAccess	porder -> data_memory -> non_gc_memory		5116463	0					
ANR	5116564	PtrMemberAccess	porder -> data_memory		5116463	0					
ANR	5116565	Identifier	porder		5116463	0					
ANR	5116566	Identifier	data_memory		5116463	1					
ANR	5116567	Identifier	non_gc_memory		5116463	1					
ANR	5116568	Argument	porder -> threshold		5116463	1					
ANR	5116569	PtrMemberAccess	porder -> threshold		5116463	0					
ANR	5116570	Identifier	porder		5116463	0					
ANR	5116571	Identifier	threshold		5116463	1					
ANR	5116572	Argument	"""gx_ht_order_release(threshold)"""		5116463	2					
ANR	5116573	PrimaryExpression	"""gx_ht_order_release(threshold)"""		5116463	0					
ANR	5116574	ExpressionStatement	porder -> threshold = 0	584:4:18323:18344	5116463	5	True				
ANR	5116575	AssignmentExpression	porder -> threshold = 0		5116463	0		=			
ANR	5116576	PtrMemberAccess	porder -> threshold		5116463	0					
ANR	5116577	Identifier	porder		5116463	0					
ANR	5116578	Identifier	threshold		5116463	1					
ANR	5116579	PrimaryExpression	0		5116463	1					
ANR	5116580	ExpressionStatement	porder -> levels = 0	585:4:18350:18368	5116463	6	True				
ANR	5116581	AssignmentExpression	porder -> levels = 0		5116463	0		=			
ANR	5116582	PtrMemberAccess	porder -> levels		5116463	0					
ANR	5116583	Identifier	porder		5116463	0					
ANR	5116584	Identifier	levels		5116463	1					
ANR	5116585	PrimaryExpression	0		5116463	1					
ANR	5116586	ExpressionStatement	porder -> bit_data = 0	586:4:18374:18394	5116463	7	True				
ANR	5116587	AssignmentExpression	porder -> bit_data = 0		5116463	0		=			
ANR	5116588	PtrMemberAccess	porder -> bit_data		5116463	0					
ANR	5116589	Identifier	porder		5116463	0					
ANR	5116590	Identifier	bit_data		5116463	1					
ANR	5116591	PrimaryExpression	0		5116463	1					
ANR	5116592	ReturnType	void		5116463	1					
ANR	5116593	Identifier	gx_ht_order_release		5116463	2					
ANR	5116594	ParameterList	"gx_ht_order * porder , gs_memory_t * mem , bool free_cache"		5116463	3					
ANR	5116595	Parameter	gx_ht_order * porder	564:20:17503:17522	5116463	0	True				
ANR	5116596	ParameterType	gx_ht_order *		5116463	0					
ANR	5116597	Identifier	porder		5116463	1					
ANR	5116598	Parameter	gs_memory_t * mem	564:42:17525:17541	5116463	1	True				
ANR	5116599	ParameterType	gs_memory_t *		5116463	0					
ANR	5116600	Identifier	mem		5116463	1					
ANR	5116601	Parameter	bool free_cache	564:61:17544:17558	5116463	2	True				
ANR	5116602	ParameterType	bool		5116463	0					
ANR	5116603	Identifier	free_cache		5116463	1					
ANR	5116604	CFGEntryNode	ENTRY		5116463		True				
ANR	5116605	CFGExitNode	EXIT		5116463		True				
ANR	5116606	Symbol	* porder -> data_memory		5116463						
ANR	5116607	Symbol	porder -> cache		5116463						
ANR	5116608	Symbol	NULL		5116463						
ANR	5116609	Symbol	* * porder		5116463						
ANR	5116610	Symbol	free_cache		5116463						
ANR	5116611	Symbol	porder -> data_memory -> non_gc_memory		5116463						
ANR	5116612	Symbol	porder		5116463						
ANR	5116613	Symbol	porder -> transfer		5116463						
ANR	5116614	Symbol	porder -> levels		5116463						
ANR	5116615	Symbol	porder -> threshold		5116463						
ANR	5116616	Symbol	porder -> bit_data		5116463						
ANR	5116617	Symbol	mem		5116463						
ANR	5116618	Symbol	* porder		5116463						
ANR	5116619	Symbol	porder -> data_memory		5116463						
ANR	5116620	Function	gx_device_halftone_release	589:0:18399:19220							
ANR	5116621	FunctionDef	"gx_device_halftone_release (gx_device_halftone * pdht , gs_memory_t * mem)"		5116620	0					
ANR	5116622	CompoundStatement		591:0:18477:19220	5116620	0					
ANR	5116623	IfStatement	if ( pdht -> components )		5116620	0					
ANR	5116624	Condition	pdht -> components	592:8:18487:18502	5116620	0	True				
ANR	5116625	PtrMemberAccess	pdht -> components		5116620	0					
ANR	5116626	Identifier	pdht		5116620	0					
ANR	5116627	Identifier	components		5116620	1					
ANR	5116628	CompoundStatement		3:8:37:42	5116620	1					
ANR	5116629	IdentifierDeclStatement	int i ;	593:8:18515:18520	5116620	0	True				
ANR	5116630	IdentifierDecl	i		5116620	0					
ANR	5116631	IdentifierDeclType	int		5116620	0					
ANR	5116632	Identifier	i		5116620	1					
ANR	5116633	ForStatement	for ( i = 0 ; i < pdht -> num_comp ; ++ i )		5116620	1					
ANR	5116634	ForInit	i = 0 ;	597:13:18664:18669	5116620	0	True				
ANR	5116635	AssignmentExpression	i = 0		5116620	0		=			
ANR	5116636	Identifier	i		5116620	0					
ANR	5116637	PrimaryExpression	0		5116620	1					
ANR	5116638	Condition	i < pdht -> num_comp	597:20:18671:18688	5116620	1	True				
ANR	5116639	RelationalExpression	i < pdht -> num_comp		5116620	0		<			
ANR	5116640	Identifier	i		5116620	0					
ANR	5116641	PtrMemberAccess	pdht -> num_comp		5116620	1					
ANR	5116642	Identifier	pdht		5116620	0					
ANR	5116643	Identifier	num_comp		5116620	1					
ANR	5116644	UnaryExpression	++ i	597:40:18691:18693	5116620	2	True				
ANR	5116645	IncDec	++		5116620	0					
ANR	5116646	Identifier	i		5116620	1					
ANR	5116647	IfStatement	if ( pdht -> components [ i ] . corder . bit_data != pdht -> order . bit_data )		5116620	3					
ANR	5116648	Condition	pdht -> components [ i ] . corder . bit_data != pdht -> order . bit_data	598:16:18712:18786	5116620	0	True				
ANR	5116649	EqualityExpression	pdht -> components [ i ] . corder . bit_data != pdht -> order . bit_data		5116620	0		!=			
ANR	5116650	MemberAccess	pdht -> components [ i ] . corder . bit_data		5116620	0					
ANR	5116651	MemberAccess	pdht -> components [ i ] . corder		5116620	0					
ANR	5116652	ArrayIndexing	pdht -> components [ i ]		5116620	0					
ANR	5116653	PtrMemberAccess	pdht -> components		5116620	0					
ANR	5116654	Identifier	pdht		5116620	0					
ANR	5116655	Identifier	components		5116620	1					
ANR	5116656	Identifier	i		5116620	1					
ANR	5116657	Identifier	corder		5116620	1					
ANR	5116658	Identifier	bit_data		5116620	1					
ANR	5116659	MemberAccess	pdht -> order . bit_data		5116620	1					
ANR	5116660	PtrMemberAccess	pdht -> order		5116620	0					
ANR	5116661	Identifier	pdht		5116620	0					
ANR	5116662	Identifier	order		5116620	1					
ANR	5116663	Identifier	bit_data		5116620	1					
ANR	5116664	CompoundStatement		10:18:328:328	5116620	1					
ANR	5116665	ExpressionStatement	"gx_ht_order_release ( & pdht -> components [ i ] . corder , mem , true )"	602:16:18927:18986	5116620	0	True				
ANR	5116666	CallExpression	"gx_ht_order_release ( & pdht -> components [ i ] . corder , mem , true )"		5116620	0					
ANR	5116667	Callee	gx_ht_order_release		5116620	0					
ANR	5116668	Identifier	gx_ht_order_release		5116620	0					
ANR	5116669	ArgumentList	& pdht -> components [ i ] . corder		5116620	1					
ANR	5116670	Argument	& pdht -> components [ i ] . corder		5116620	0					
ANR	5116671	UnaryOperationExpression	& pdht -> components [ i ] . corder		5116620	0					
ANR	5116672	UnaryOperator	&		5116620	0					
ANR	5116673	MemberAccess	pdht -> components [ i ] . corder		5116620	1					
ANR	5116674	ArrayIndexing	pdht -> components [ i ]		5116620	0					
ANR	5116675	PtrMemberAccess	pdht -> components		5116620	0					
ANR	5116676	Identifier	pdht		5116620	0					
ANR	5116677	Identifier	components		5116620	1					
ANR	5116678	Identifier	i		5116620	1					
ANR	5116679	Identifier	corder		5116620	1					
ANR	5116680	Argument	mem		5116620	1					
ANR	5116681	Identifier	mem		5116620	0					
ANR	5116682	Argument	true		5116620	2					
ANR	5116683	Identifier	true		5116620	0					
ANR	5116684	ExpressionStatement	"gs_free_object ( mem , pdht -> components , ""gx_dev_ht_release(components)"" )"	604:8:19010:19103	5116620	2	True				
ANR	5116685	CallExpression	"gs_free_object ( mem , pdht -> components , ""gx_dev_ht_release(components)"" )"		5116620	0					
ANR	5116686	Callee	gs_free_object		5116620	0					
ANR	5116687	Identifier	gs_free_object		5116620	0					
ANR	5116688	ArgumentList	mem		5116620	1					
ANR	5116689	Argument	mem		5116620	0					
ANR	5116690	Identifier	mem		5116620	0					
ANR	5116691	Argument	pdht -> components		5116620	1					
ANR	5116692	PtrMemberAccess	pdht -> components		5116620	0					
ANR	5116693	Identifier	pdht		5116620	0					
ANR	5116694	Identifier	components		5116620	1					
ANR	5116695	Argument	"""gx_dev_ht_release(components)"""		5116620	2					
ANR	5116696	PrimaryExpression	"""gx_dev_ht_release(components)"""		5116620	0					
ANR	5116697	ExpressionStatement	pdht -> components = 0	606:8:19113:19133	5116620	3	True				
ANR	5116698	AssignmentExpression	pdht -> components = 0		5116620	0		=			
ANR	5116699	PtrMemberAccess	pdht -> components		5116620	0					
ANR	5116700	Identifier	pdht		5116620	0					
ANR	5116701	Identifier	components		5116620	1					
ANR	5116702	PrimaryExpression	0		5116620	1					
ANR	5116703	ExpressionStatement	pdht -> num_comp = 0	607:8:19143:19161	5116620	4	True				
ANR	5116704	AssignmentExpression	pdht -> num_comp = 0		5116620	0		=			
ANR	5116705	PtrMemberAccess	pdht -> num_comp		5116620	0					
ANR	5116706	Identifier	pdht		5116620	0					
ANR	5116707	Identifier	num_comp		5116620	1					
ANR	5116708	PrimaryExpression	0		5116620	1					
ANR	5116709	ExpressionStatement	"gx_ht_order_release ( & pdht -> order , mem , false )"	609:4:19173:19218	5116620	1	True				
ANR	5116710	CallExpression	"gx_ht_order_release ( & pdht -> order , mem , false )"		5116620	0					
ANR	5116711	Callee	gx_ht_order_release		5116620	0					
ANR	5116712	Identifier	gx_ht_order_release		5116620	0					
ANR	5116713	ArgumentList	& pdht -> order		5116620	1					
ANR	5116714	Argument	& pdht -> order		5116620	0					
ANR	5116715	UnaryOperationExpression	& pdht -> order		5116620	0					
ANR	5116716	UnaryOperator	&		5116620	0					
ANR	5116717	PtrMemberAccess	pdht -> order		5116620	1					
ANR	5116718	Identifier	pdht		5116620	0					
ANR	5116719	Identifier	order		5116620	1					
ANR	5116720	Argument	mem		5116620	1					
ANR	5116721	Identifier	mem		5116620	0					
ANR	5116722	Argument	false		5116620	2					
ANR	5116723	Identifier	false		5116620	0					
ANR	5116724	ReturnType	void		5116620	1					
ANR	5116725	Identifier	gx_device_halftone_release		5116620	2					
ANR	5116726	ParameterList	"gx_device_halftone * pdht , gs_memory_t * mem"		5116620	3					
ANR	5116727	Parameter	gx_device_halftone * pdht	590:27:18431:18455	5116620	0	True				
ANR	5116728	ParameterType	gx_device_halftone *		5116620	0					
ANR	5116729	Identifier	pdht		5116620	1					
ANR	5116730	Parameter	gs_memory_t * mem	590:54:18458:18474	5116620	1	True				
ANR	5116731	ParameterType	gs_memory_t *		5116620	0					
ANR	5116732	Identifier	mem		5116620	1					
ANR	5116733	CFGEntryNode	ENTRY		5116620		True				
ANR	5116734	CFGExitNode	EXIT		5116620		True				
ANR	5116735	Symbol	& pdht -> order		5116620						
ANR	5116736	Symbol	pdht -> order		5116620						
ANR	5116737	Symbol	pdht -> order . bit_data		5116620						
ANR	5116738	Symbol	false		5116620						
ANR	5116739	Symbol	i		5116620						
ANR	5116740	Symbol	pdht -> components		5116620						
ANR	5116741	Symbol	pdht -> components [ i ] . corder . bit_data		5116620						
ANR	5116742	Symbol	* i		5116620						
ANR	5116743	Symbol	pdht		5116620						
ANR	5116744	Symbol	mem		5116620						
ANR	5116745	Symbol	* pdht		5116620						
ANR	5116746	Symbol	pdht -> num_comp		5116620						
ANR	5116747	Symbol	pdht -> components [ i ] . corder		5116620						
ANR	5116748	Symbol	* * pdht		5116620						
ANR	5116749	Symbol	true		5116620						
ANR	5116750	Symbol	& pdht -> components [ i ] . corder		5116620						
ANR	5116751	Symbol	* pdht -> components		5116620						
ANR	5116752	Function	gs_color_name_component_number	632:0:20207:22893							
ANR	5116753	FunctionDef	"gs_color_name_component_number (gx_device * dev , const char * pname , int name_size , int halftonetype)"		5116752	0					
ANR	5116754	CompoundStatement		635:0:20344:22893	5116752	0					
ANR	5116755	IdentifierDeclStatement	int num_colorant ;	636:4:20350:20366	5116752	0	True				
ANR	5116756	IdentifierDecl	num_colorant		5116752	0					
ANR	5116757	IdentifierDeclType	int		5116752	0					
ANR	5116758	Identifier	num_colorant		5116752	1					
ANR	5116759	Statement	define	638:1:20370:20375	5116752	1	True				
ANR	5116760	Statement	check_colorant_name	638:8:20377:20395	5116752	2	True				
ANR	5116761	Statement	(	638:27:20396:20396	5116752	3	True				
ANR	5116762	Statement	dev	638:28:20397:20399	5116752	4	True				
ANR	5116763	Statement	","	638:31:20400:20400	5116752	5	True				
ANR	5116764	Statement	name	638:33:20402:20405	5116752	6	True				
ANR	5116765	Statement	)	638:37:20406:20406	5116752	7	True				
ANR	5116766	Statement	(	639:4:20414:20414	5116752	8	True				
ANR	5116767	Statement	(	639:5:20415:20415	5116752	9	True				
ANR	5116768	Statement	*	639:6:20416:20416	5116752	10	True				
ANR	5116769	Statement	dev_proc	639:7:20417:20424	5116752	11	True				
ANR	5116770	Statement	(	639:15:20425:20425	5116752	12	True				
ANR	5116771	Statement	dev	639:16:20426:20428	5116752	13	True				
ANR	5116772	Statement	","	639:19:20429:20429	5116752	14	True				
ANR	5116773	Statement	get_color_comp_index	639:21:20431:20450	5116752	15	True				
ANR	5116774	Statement	)	639:41:20451:20451	5116752	16	True				
ANR	5116775	Statement	)	639:42:20452:20452	5116752	17	True				
ANR	5116776	Statement	(	639:44:20454:20454	5116752	18	True				
ANR	5116777	Statement	dev	639:45:20455:20457	5116752	19	True				
ANR	5116778	Statement	","	639:48:20458:20458	5116752	20	True				
ANR	5116779	Statement	name	639:50:20460:20463	5116752	21	True				
ANR	5116780	Statement	","	639:54:20464:20464	5116752	22	True				
ANR	5116781	Statement	strlen	639:56:20466:20471	5116752	23	True				
ANR	5116782	Statement	(	639:62:20472:20472	5116752	24	True				
ANR	5116783	Statement	name	639:63:20473:20476	5116752	25	True				
ANR	5116784	Statement	)	639:67:20477:20477	5116752	26	True				
ANR	5116785	Statement	","	639:68:20478:20478	5116752	27	True				
ANR	5116786	Statement	NO_COMP_NAME_TYPE	639:70:20480:20496	5116752	28	True				
ANR	5116787	Statement	)	639:87:20497:20497	5116752	29	True				
ANR	5116788	Statement	)	639:88:20498:20498	5116752	30	True				
ANR	5116789	Statement	define	641:1:20502:20507	5116752	31	True				
ANR	5116790	Statement	check_colorant_name_length	641:8:20509:20534	5116752	32	True				
ANR	5116791	Statement	(	641:34:20535:20535	5116752	33	True				
ANR	5116792	Statement	dev	641:35:20536:20538	5116752	34	True				
ANR	5116793	Statement	","	641:38:20539:20539	5116752	35	True				
ANR	5116794	Statement	name	641:40:20541:20544	5116752	36	True				
ANR	5116795	Statement	","	641:44:20545:20545	5116752	37	True				
ANR	5116796	Statement	length	641:46:20547:20552	5116752	38	True				
ANR	5116797	Statement	)	641:52:20553:20553	5116752	39	True				
ANR	5116798	Statement	(	642:4:20561:20561	5116752	40	True				
ANR	5116799	Statement	(	642:5:20562:20562	5116752	41	True				
ANR	5116800	Statement	*	642:6:20563:20563	5116752	42	True				
ANR	5116801	Statement	dev_proc	642:7:20564:20571	5116752	43	True				
ANR	5116802	Statement	(	642:15:20572:20572	5116752	44	True				
ANR	5116803	Statement	dev	642:16:20573:20575	5116752	45	True				
ANR	5116804	Statement	","	642:19:20576:20576	5116752	46	True				
ANR	5116805	Statement	get_color_comp_index	642:21:20578:20597	5116752	47	True				
ANR	5116806	Statement	)	642:41:20598:20598	5116752	48	True				
ANR	5116807	Statement	)	642:42:20599:20599	5116752	49	True				
ANR	5116808	Statement	(	642:44:20601:20601	5116752	50	True				
ANR	5116809	Statement	dev	642:45:20602:20604	5116752	51	True				
ANR	5116810	Statement	","	642:48:20605:20605	5116752	52	True				
ANR	5116811	Statement	name	642:50:20607:20610	5116752	53	True				
ANR	5116812	Statement	","	642:54:20611:20611	5116752	54	True				
ANR	5116813	Statement	length	642:56:20613:20618	5116752	55	True				
ANR	5116814	Statement	","	642:62:20619:20619	5116752	56	True				
ANR	5116815	Statement	NO_COMP_NAME_TYPE	642:64:20621:20637	5116752	57	True				
ANR	5116816	Statement	)	642:81:20638:20638	5116752	58	True				
ANR	5116817	Statement	)	642:82:20639:20639	5116752	59	True				
ANR	5116818	Statement	define	644:1:20643:20648	5116752	60	True				
ANR	5116819	Statement	check_name	644:8:20650:20659	5116752	61	True				
ANR	5116820	Statement	(	644:18:20660:20660	5116752	62	True				
ANR	5116821	Statement	str	644:19:20661:20663	5116752	63	True				
ANR	5116822	Statement	","	644:22:20664:20664	5116752	64	True				
ANR	5116823	Statement	pname	644:24:20666:20670	5116752	65	True				
ANR	5116824	Statement	","	644:29:20671:20671	5116752	66	True				
ANR	5116825	Statement	length	644:31:20673:20678	5116752	67	True				
ANR	5116826	Statement	)	644:37:20679:20679	5116752	68	True				
ANR	5116827	Statement	(	645:4:20687:20687	5116752	69	True				
ANR	5116828	Statement	(	645:5:20688:20688	5116752	70	True				
ANR	5116829	Statement	strlen	645:6:20689:20694	5116752	71	True				
ANR	5116830	Statement	(	645:12:20695:20695	5116752	72	True				
ANR	5116831	Statement	str	645:13:20696:20698	5116752	73	True				
ANR	5116832	Statement	)	645:16:20699:20699	5116752	74	True				
ANR	5116833	Statement	==	645:18:20701:20702	5116752	75	True				
ANR	5116834	Statement	length	645:21:20704:20709	5116752	76	True				
ANR	5116835	Statement	)	645:27:20710:20710	5116752	77	True				
ANR	5116836	Statement	&&	645:29:20712:20713	5116752	78	True				
ANR	5116837	Statement	(	645:32:20715:20715	5116752	79	True				
ANR	5116838	Statement	strncmp	645:33:20716:20722	5116752	80	True				
ANR	5116839	Statement	(	645:40:20723:20723	5116752	81	True				
ANR	5116840	Statement	pname	645:41:20724:20728	5116752	82	True				
ANR	5116841	Statement	","	645:46:20729:20729	5116752	83	True				
ANR	5116842	Statement	str	645:48:20731:20733	5116752	84	True				
ANR	5116843	Statement	","	645:51:20734:20734	5116752	85	True				
ANR	5116844	Statement	length	645:53:20736:20741	5116752	86	True				
ANR	5116845	Statement	)	645:59:20742:20742	5116752	87	True				
ANR	5116846	Statement	==	645:61:20744:20745	5116752	88	True				
ANR	5116847	Statement	0	645:64:20747:20747	5116752	89	True				
ANR	5116848	Statement	)	645:65:20748:20748	5116752	90	True				
ANR	5116849	Statement	)	645:66:20749:20749	5116752	91	True				
ANR	5116850	ExpressionStatement	"num_colorant = check_colorant_name_length ( dev , pname , name_size )"	650:4:20814:20878	5116752	92	True				
ANR	5116851	AssignmentExpression	"num_colorant = check_colorant_name_length ( dev , pname , name_size )"		5116752	0		=			
ANR	5116852	Identifier	num_colorant		5116752	0					
ANR	5116853	CallExpression	"check_colorant_name_length ( dev , pname , name_size )"		5116752	1					
ANR	5116854	Callee	check_colorant_name_length		5116752	0					
ANR	5116855	Identifier	check_colorant_name_length		5116752	0					
ANR	5116856	ArgumentList	dev		5116752	1					
ANR	5116857	Argument	dev		5116752	0					
ANR	5116858	Identifier	dev		5116752	0					
ANR	5116859	Argument	pname		5116752	1					
ANR	5116860	Identifier	pname		5116752	0					
ANR	5116861	Argument	name_size		5116752	2					
ANR	5116862	Identifier	name_size		5116752	0					
ANR	5116863	IfStatement	if ( num_colorant >= 0 )		5116752	93					
ANR	5116864	Condition	num_colorant >= 0	651:8:20888:20904	5116752	0	True				
ANR	5116865	RelationalExpression	num_colorant >= 0		5116752	0		>=			
ANR	5116866	Identifier	num_colorant		5116752	0					
ANR	5116867	PrimaryExpression	0		5116752	1					
ANR	5116868	CompoundStatement		17:27:562:562	5116752	1					
ANR	5116869	IfStatement	if ( num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS )		5116752	0					
ANR	5116870	Condition	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS	659:12:21293:21338	5116752	0	True				
ANR	5116871	EqualityExpression	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS		5116752	0		==			
ANR	5116872	Identifier	num_colorant		5116752	0					
ANR	5116873	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5116752	1					
ANR	5116874	ExpressionStatement	num_colorant = - 1	660:12:21353:21370	5116752	1	True				
ANR	5116875	AssignmentExpression	num_colorant = - 1		5116752	0		=			
ANR	5116876	Identifier	num_colorant		5116752	0					
ANR	5116877	UnaryOperationExpression	- 1		5116752	1					
ANR	5116878	UnaryOperator	-		5116752	0					
ANR	5116879	PrimaryExpression	1		5116752	1					
ANR	5116880	ReturnStatement	return num_colorant ;	661:8:21380:21399	5116752	1	True				
ANR	5116881	Identifier	num_colorant		5116752	0					
ANR	5116882	IfStatement	"if ( check_name ( ""Default"" , pname , name_size ) )"		5116752	94					
ANR	5116883	Condition	"check_name ( ""Default"" , pname , name_size )"	667:8:21477:21515	5116752	0	True				
ANR	5116884	CallExpression	"check_name ( ""Default"" , pname , name_size )"		5116752	0					
ANR	5116885	Callee	check_name		5116752	0					
ANR	5116886	Identifier	check_name		5116752	0					
ANR	5116887	ArgumentList	"""Default"""		5116752	1					
ANR	5116888	Argument	"""Default"""		5116752	0					
ANR	5116889	PrimaryExpression	"""Default"""		5116752	0					
ANR	5116890	Argument	pname		5116752	1					
ANR	5116891	Identifier	pname		5116752	0					
ANR	5116892	Argument	name_size		5116752	2					
ANR	5116893	Identifier	name_size		5116752	0					
ANR	5116894	ReturnStatement	return GX_DEVICE_COLOR_MAX_COMPONENTS ;	668:8:21526:21563	5116752	1	True				
ANR	5116895	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5116752	0					
ANR	5116896	IfStatement	if ( halftonetype == ht_type_colorscreen || halftonetype == ht_type_multiple_colorscreen )		5116752	95					
ANR	5116897	Condition	halftonetype == ht_type_colorscreen || halftonetype == ht_type_multiple_colorscreen	673:8:21758:21848	5116752	0	True				
ANR	5116898	OrExpression	halftonetype == ht_type_colorscreen || halftonetype == ht_type_multiple_colorscreen		5116752	0		||			
ANR	5116899	EqualityExpression	halftonetype == ht_type_colorscreen		5116752	0		==			
ANR	5116900	Identifier	halftonetype		5116752	0					
ANR	5116901	Identifier	ht_type_colorscreen		5116752	1					
ANR	5116902	EqualityExpression	halftonetype == ht_type_multiple_colorscreen		5116752	1		==			
ANR	5116903	Identifier	halftonetype		5116752	0					
ANR	5116904	Identifier	ht_type_multiple_colorscreen		5116752	1					
ANR	5116905	CompoundStatement		40:54:1506:1506	5116752	1					
ANR	5116906	IfStatement	"if ( check_name ( ""Red"" , pname , name_size ) )"		5116752	0					
ANR	5116907	Condition	"check_name ( ""Red"" , pname , name_size )"	675:12:21865:21899	5116752	0	True				
ANR	5116908	CallExpression	"check_name ( ""Red"" , pname , name_size )"		5116752	0					
ANR	5116909	Callee	check_name		5116752	0					
ANR	5116910	Identifier	check_name		5116752	0					
ANR	5116911	ArgumentList	"""Red"""		5116752	1					
ANR	5116912	Argument	"""Red"""		5116752	0					
ANR	5116913	PrimaryExpression	"""Red"""		5116752	0					
ANR	5116914	Argument	pname		5116752	1					
ANR	5116915	Identifier	pname		5116752	0					
ANR	5116916	Argument	name_size		5116752	2					
ANR	5116917	Identifier	name_size		5116752	0					
ANR	5116918	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Cyan"" )"	676:12:21914:21961	5116752	1	True				
ANR	5116919	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Cyan"" )"		5116752	0		=			
ANR	5116920	Identifier	num_colorant		5116752	0					
ANR	5116921	CallExpression	"check_colorant_name ( dev , ""Cyan"" )"		5116752	1					
ANR	5116922	Callee	check_colorant_name		5116752	0					
ANR	5116923	Identifier	check_colorant_name		5116752	0					
ANR	5116924	ArgumentList	dev		5116752	1					
ANR	5116925	Argument	dev		5116752	0					
ANR	5116926	Identifier	dev		5116752	0					
ANR	5116927	Argument	"""Cyan"""		5116752	1					
ANR	5116928	PrimaryExpression	"""Cyan"""		5116752	0					
ANR	5116929	ElseStatement	else		5116752	0					
ANR	5116930	IfStatement	"if ( check_name ( ""Green"" , pname , name_size ) )"		5116752	0					
ANR	5116931	Condition	"check_name ( ""Green"" , pname , name_size )"	677:17:21980:22016	5116752	0	True				
ANR	5116932	CallExpression	"check_name ( ""Green"" , pname , name_size )"		5116752	0					
ANR	5116933	Callee	check_name		5116752	0					
ANR	5116934	Identifier	check_name		5116752	0					
ANR	5116935	ArgumentList	"""Green"""		5116752	1					
ANR	5116936	Argument	"""Green"""		5116752	0					
ANR	5116937	PrimaryExpression	"""Green"""		5116752	0					
ANR	5116938	Argument	pname		5116752	1					
ANR	5116939	Identifier	pname		5116752	0					
ANR	5116940	Argument	name_size		5116752	2					
ANR	5116941	Identifier	name_size		5116752	0					
ANR	5116942	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Magenta"" )"	678:12:22031:22081	5116752	1	True				
ANR	5116943	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Magenta"" )"		5116752	0		=			
ANR	5116944	Identifier	num_colorant		5116752	0					
ANR	5116945	CallExpression	"check_colorant_name ( dev , ""Magenta"" )"		5116752	1					
ANR	5116946	Callee	check_colorant_name		5116752	0					
ANR	5116947	Identifier	check_colorant_name		5116752	0					
ANR	5116948	ArgumentList	dev		5116752	1					
ANR	5116949	Argument	dev		5116752	0					
ANR	5116950	Identifier	dev		5116752	0					
ANR	5116951	Argument	"""Magenta"""		5116752	1					
ANR	5116952	PrimaryExpression	"""Magenta"""		5116752	0					
ANR	5116953	ElseStatement	else		5116752	0					
ANR	5116954	IfStatement	"if ( check_name ( ""Blue"" , pname , name_size ) )"		5116752	0					
ANR	5116955	Condition	"check_name ( ""Blue"" , pname , name_size )"	679:17:22100:22135	5116752	0	True				
ANR	5116956	CallExpression	"check_name ( ""Blue"" , pname , name_size )"		5116752	0					
ANR	5116957	Callee	check_name		5116752	0					
ANR	5116958	Identifier	check_name		5116752	0					
ANR	5116959	ArgumentList	"""Blue"""		5116752	1					
ANR	5116960	Argument	"""Blue"""		5116752	0					
ANR	5116961	PrimaryExpression	"""Blue"""		5116752	0					
ANR	5116962	Argument	pname		5116752	1					
ANR	5116963	Identifier	pname		5116752	0					
ANR	5116964	Argument	name_size		5116752	2					
ANR	5116965	Identifier	name_size		5116752	0					
ANR	5116966	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Yellow"" )"	680:12:22150:22199	5116752	1	True				
ANR	5116967	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Yellow"" )"		5116752	0		=			
ANR	5116968	Identifier	num_colorant		5116752	0					
ANR	5116969	CallExpression	"check_colorant_name ( dev , ""Yellow"" )"		5116752	1					
ANR	5116970	Callee	check_colorant_name		5116752	0					
ANR	5116971	Identifier	check_colorant_name		5116752	0					
ANR	5116972	ArgumentList	dev		5116752	1					
ANR	5116973	Argument	dev		5116752	0					
ANR	5116974	Identifier	dev		5116752	0					
ANR	5116975	Argument	"""Yellow"""		5116752	1					
ANR	5116976	PrimaryExpression	"""Yellow"""		5116752	0					
ANR	5116977	ElseStatement	else		5116752	0					
ANR	5116978	IfStatement	"if ( check_name ( ""Gray"" , pname , name_size ) )"		5116752	0					
ANR	5116979	Condition	"check_name ( ""Gray"" , pname , name_size )"	681:17:22218:22253	5116752	0	True				
ANR	5116980	CallExpression	"check_name ( ""Gray"" , pname , name_size )"		5116752	0					
ANR	5116981	Callee	check_name		5116752	0					
ANR	5116982	Identifier	check_name		5116752	0					
ANR	5116983	ArgumentList	"""Gray"""		5116752	1					
ANR	5116984	Argument	"""Gray"""		5116752	0					
ANR	5116985	PrimaryExpression	"""Gray"""		5116752	0					
ANR	5116986	Argument	pname		5116752	1					
ANR	5116987	Identifier	pname		5116752	0					
ANR	5116988	Argument	name_size		5116752	2					
ANR	5116989	Identifier	name_size		5116752	0					
ANR	5116990	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Black"" )"	682:12:22268:22316	5116752	1	True				
ANR	5116991	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Black"" )"		5116752	0		=			
ANR	5116992	Identifier	num_colorant		5116752	0					
ANR	5116993	CallExpression	"check_colorant_name ( dev , ""Black"" )"		5116752	1					
ANR	5116994	Callee	check_colorant_name		5116752	0					
ANR	5116995	Identifier	check_colorant_name		5116752	0					
ANR	5116996	ArgumentList	dev		5116752	1					
ANR	5116997	Argument	dev		5116752	0					
ANR	5116998	Identifier	dev		5116752	0					
ANR	5116999	Argument	"""Black"""		5116752	1					
ANR	5117000	PrimaryExpression	"""Black"""		5116752	0					
ANR	5117001	IfStatement	if ( num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS )		5116752	1					
ANR	5117002	Condition	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS	690:12:22702:22747	5116752	0	True				
ANR	5117003	EqualityExpression	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS		5116752	0		==			
ANR	5117004	Identifier	num_colorant		5116752	0					
ANR	5117005	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5116752	1					
ANR	5117006	ExpressionStatement	num_colorant = - 1	691:12:22762:22779	5116752	1	True				
ANR	5117007	AssignmentExpression	num_colorant = - 1		5116752	0		=			
ANR	5117008	Identifier	num_colorant		5116752	0					
ANR	5117009	UnaryOperationExpression	- 1		5116752	1					
ANR	5117010	UnaryOperator	-		5116752	0					
ANR	5117011	PrimaryExpression	1		5116752	1					
ANR	5117012	Statement	undef	693:1:22783:22787	5116752	2	True				
ANR	5117013	Statement	check_colorant_name	693:7:22789:22807	5116752	3	True				
ANR	5117014	Statement	undef	694:1:22810:22814	5116752	4	True				
ANR	5117015	Statement	check_colorant_name_length	694:7:22816:22841	5116752	5	True				
ANR	5117016	Statement	undef	695:1:22844:22848	5116752	6	True				
ANR	5117017	Statement	check_name	695:7:22850:22859	5116752	7	True				
ANR	5117018	ReturnStatement	return num_colorant ;	698:4:22872:22891	5116752	96	True				
ANR	5117019	Identifier	num_colorant		5116752	0					
ANR	5117020	ReturnType	int		5116752	1					
ANR	5117021	Identifier	gs_color_name_component_number		5116752	2					
ANR	5117022	ParameterList	"gx_device * dev , const char * pname , int name_size , int halftonetype"		5116752	3					
ANR	5117023	Parameter	gx_device * dev	633:31:20242:20256	5116752	0	True				
ANR	5117024	ParameterType	gx_device *		5116752	0					
ANR	5117025	Identifier	dev		5116752	1					
ANR	5117026	Parameter	const char * pname	633:48:20259:20276	5116752	1	True				
ANR	5117027	ParameterType	const char *		5116752	0					
ANR	5117028	Identifier	pname		5116752	1					
ANR	5117029	Parameter	int name_size	634:32:20311:20323	5116752	2	True				
ANR	5117030	ParameterType	int		5116752	0					
ANR	5117031	Identifier	name_size		5116752	1					
ANR	5117032	Parameter	int halftonetype	634:47:20326:20341	5116752	3	True				
ANR	5117033	ParameterType	int		5116752	0					
ANR	5117034	Identifier	halftonetype		5116752	1					
ANR	5117035	CFGEntryNode	ENTRY		5116752		True				
ANR	5117036	CFGExitNode	EXIT		5116752		True				
ANR	5117037	Symbol	check_colorant_name_length		5116752						
ANR	5117038	Symbol	dev		5116752						
ANR	5117039	Symbol	ht_type_multiple_colorscreen		5116752						
ANR	5117040	Symbol	pname		5116752						
ANR	5117041	Symbol	halftonetype		5116752						
ANR	5117042	Symbol	num_colorant		5116752						
ANR	5117043	Symbol	check_colorant_name		5116752						
ANR	5117044	Symbol	check_name		5116752						
ANR	5117045	Symbol	ht_type_colorscreen		5116752						
ANR	5117046	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		5116752						
ANR	5117047	Symbol	name_size		5116752						
ANR	5117048	Function	gs_cname_to_colorant_number	707:0:23082:23341							
ANR	5117049	FunctionDef	"gs_cname_to_colorant_number (gs_gstate * pgs , byte * pname , uint name_size , int halftonetype)"		5117048	0					
ANR	5117050	CompoundStatement		710:0:23195:23341	5117048	0					
ANR	5117051	IdentifierDeclStatement	gx_device * dev = pgs -> device ;	711:4:23201:23230	5117048	0	True				
ANR	5117052	IdentifierDecl	* dev = pgs -> device		5117048	0					
ANR	5117053	IdentifierDeclType	gx_device *		5117048	0					
ANR	5117054	Identifier	dev		5117048	1					
ANR	5117055	AssignmentExpression	* dev = pgs -> device		5117048	2		=			
ANR	5117056	Identifier	dev		5117048	0					
ANR	5117057	PtrMemberAccess	pgs -> device		5117048	1					
ANR	5117058	Identifier	pgs		5117048	0					
ANR	5117059	Identifier	device		5117048	1					
ANR	5117060	ReturnStatement	"return gs_color_name_component_number ( dev , ( char * ) pname , name_size , halftonetype ) ;"	713:4:23237:23339	5117048	1	True				
ANR	5117061	CallExpression	"gs_color_name_component_number ( dev , ( char * ) pname , name_size , halftonetype )"		5117048	0					
ANR	5117062	Callee	gs_color_name_component_number		5117048	0					
ANR	5117063	Identifier	gs_color_name_component_number		5117048	0					
ANR	5117064	ArgumentList	dev		5117048	1					
ANR	5117065	Argument	dev		5117048	0					
ANR	5117066	Identifier	dev		5117048	0					
ANR	5117067	Argument	( char * ) pname		5117048	1					
ANR	5117068	CastExpression	( char * ) pname		5117048	0					
ANR	5117069	CastTarget	char *		5117048	0					
ANR	5117070	Identifier	pname		5117048	1					
ANR	5117071	Argument	name_size		5117048	2					
ANR	5117072	Identifier	name_size		5117048	0					
ANR	5117073	Argument	halftonetype		5117048	3					
ANR	5117074	Identifier	halftonetype		5117048	0					
ANR	5117075	ReturnType	int		5117048	1					
ANR	5117076	Identifier	gs_cname_to_colorant_number		5117048	2					
ANR	5117077	ParameterList	"gs_gstate * pgs , byte * pname , uint name_size , int halftonetype"		5117048	3					
ANR	5117078	Parameter	gs_gstate * pgs	708:28:23114:23128	5117048	0	True				
ANR	5117079	ParameterType	gs_gstate *		5117048	0					
ANR	5117080	Identifier	pgs		5117048	1					
ANR	5117081	Parameter	byte * pname	708:45:23131:23142	5117048	1	True				
ANR	5117082	ParameterType	byte *		5117048	0					
ANR	5117083	Identifier	pname		5117048	1					
ANR	5117084	Parameter	uint name_size	708:59:23145:23158	5117048	2	True				
ANR	5117085	ParameterType	uint		5117048	0					
ANR	5117086	Identifier	name_size		5117048	1					
ANR	5117087	Parameter	int halftonetype	709:16:23177:23192	5117048	3	True				
ANR	5117088	ParameterType	int		5117048	0					
ANR	5117089	Identifier	halftonetype		5117048	1					
ANR	5117090	CFGEntryNode	ENTRY		5117048		True				
ANR	5117091	CFGExitNode	EXIT		5117048		True				
ANR	5117092	Symbol	gs_color_name_component_number		5117048						
ANR	5117093	Symbol	dev		5117048						
ANR	5117094	Symbol	pname		5117048						
ANR	5117095	Symbol	halftonetype		5117048						
ANR	5117096	Symbol	* pgs		5117048						
ANR	5117097	Symbol	pgs -> device		5117048						
ANR	5117098	Symbol	pgs		5117048						
ANR	5117099	Symbol	name_size		5117048						
ANR	5117100	Function	gx_gstate_dev_ht_install	936:0:35507:44969							
ANR	5117101	FunctionDef	"gx_gstate_dev_ht_install (gs_gstate * pgs , gx_device_halftone * pdht , gs_halftone_type type , const gx_device * dev)"		5117100	0					
ANR	5117102	CompoundStatement		942:0:35666:44969	5117100	0					
ANR	5117103	IdentifierDeclStatement	gx_device_halftone dht ;	943:4:35672:35699	5117100	0	True				
ANR	5117104	IdentifierDecl	dht		5117100	0					
ANR	5117105	IdentifierDeclType	gx_device_halftone		5117100	0					
ANR	5117106	Identifier	dht		5117100	1					
ANR	5117107	IdentifierDeclStatement	int num_comps = pdht -> num_dev_comp ;	944:4:35705:35759	5117100	1	True				
ANR	5117108	IdentifierDecl	num_comps = pdht -> num_dev_comp		5117100	0					
ANR	5117109	IdentifierDeclType	int		5117100	0					
ANR	5117110	Identifier	num_comps		5117100	1					
ANR	5117111	AssignmentExpression	num_comps = pdht -> num_dev_comp		5117100	2		=			
ANR	5117112	Identifier	num_comps		5117100	0					
ANR	5117113	PtrMemberAccess	pdht -> num_dev_comp		5117100	1					
ANR	5117114	Identifier	pdht		5117100	0					
ANR	5117115	Identifier	num_dev_comp		5117100	1					
ANR	5117116	IdentifierDeclStatement	"int i , code = 0 ;"	945:4:35765:35800	5117100	2	True				
ANR	5117117	IdentifierDecl	i		5117100	0					
ANR	5117118	IdentifierDeclType	int		5117100	0					
ANR	5117119	Identifier	i		5117100	1					
ANR	5117120	IdentifierDecl	code = 0		5117100	1					
ANR	5117121	IdentifierDeclType	int		5117100	0					
ANR	5117122	Identifier	code		5117100	1					
ANR	5117123	AssignmentExpression	code = 0		5117100	2		=			
ANR	5117124	Identifier	code		5117100	0					
ANR	5117125	PrimaryExpression	0		5117100	1					
ANR	5117126	IdentifierDeclStatement	bool used_default = false ;	946:4:35806:35850	5117100	3	True				
ANR	5117127	IdentifierDecl	used_default = false		5117100	0					
ANR	5117128	IdentifierDeclType	bool		5117100	0					
ANR	5117129	Identifier	used_default		5117100	1					
ANR	5117130	AssignmentExpression	used_default = false		5117100	2		=			
ANR	5117131	Identifier	false		5117100	0					
ANR	5117132	Identifier	false		5117100	1					
ANR	5117133	IdentifierDeclStatement	"int lcm_width = 1 , lcm_height = 1 ;"	947:4:35856:35909	5117100	4	True				
ANR	5117134	IdentifierDecl	lcm_width = 1		5117100	0					
ANR	5117135	IdentifierDeclType	int		5117100	0					
ANR	5117136	Identifier	lcm_width		5117100	1					
ANR	5117137	AssignmentExpression	lcm_width = 1		5117100	2		=			
ANR	5117138	Identifier	lcm_width		5117100	0					
ANR	5117139	PrimaryExpression	1		5117100	1					
ANR	5117140	IdentifierDecl	lcm_height = 1		5117100	1					
ANR	5117141	IdentifierDeclType	int		5117100	0					
ANR	5117142	Identifier	lcm_height		5117100	1					
ANR	5117143	AssignmentExpression	lcm_height = 1		5117100	2		=			
ANR	5117144	Identifier	lcm_height		5117100	0					
ANR	5117145	PrimaryExpression	1		5117100	1					
ANR	5117146	IdentifierDeclStatement	bool mem_diff = pdht -> rc . memory != pgs -> memory ;	948:4:35915:35980	5117100	5	True				
ANR	5117147	IdentifierDecl	mem_diff = pdht -> rc . memory != pgs -> memory		5117100	0					
ANR	5117148	IdentifierDeclType	bool		5117100	0					
ANR	5117149	Identifier	mem_diff		5117100	1					
ANR	5117150	AssignmentExpression	mem_diff = pdht -> rc . memory != pgs -> memory		5117100	2		=			
ANR	5117151	Identifier	mem_diff		5117100	0					
ANR	5117152	EqualityExpression	pdht -> rc . memory != pgs -> memory		5117100	1		!=			
ANR	5117153	MemberAccess	pdht -> rc . memory		5117100	0					
ANR	5117154	PtrMemberAccess	pdht -> rc		5117100	0					
ANR	5117155	Identifier	pdht		5117100	0					
ANR	5117156	Identifier	rc		5117100	1					
ANR	5117157	Identifier	memory		5117100	1					
ANR	5117158	PtrMemberAccess	pgs -> memory		5117100	1					
ANR	5117159	Identifier	pgs		5117100	0					
ANR	5117160	Identifier	memory		5117100	1					
ANR	5117161	IdentifierDeclStatement	"uint w , h ;"	949:4:35986:35995	5117100	6	True				
ANR	5117162	IdentifierDecl	w		5117100	0					
ANR	5117163	IdentifierDeclType	uint		5117100	0					
ANR	5117164	Identifier	w		5117100	1					
ANR	5117165	IdentifierDecl	h		5117100	1					
ANR	5117166	IdentifierDeclType	uint		5117100	0					
ANR	5117167	Identifier	h		5117100	1					
ANR	5117168	IdentifierDeclStatement	"int dw , dh ;"	950:4:36001:36011	5117100	7	True				
ANR	5117169	IdentifierDecl	dw		5117100	0					
ANR	5117170	IdentifierDeclType	int		5117100	0					
ANR	5117171	Identifier	dw		5117100	1					
ANR	5117172	IdentifierDecl	dh		5117100	1					
ANR	5117173	IdentifierDeclType	int		5117100	0					
ANR	5117174	Identifier	dh		5117100	1					
ANR	5117175	ExpressionStatement	"memset ( & dht . order , 0 , sizeof ( dht . order ) )"	953:4:36072:36112	5117100	8	True				
ANR	5117176	CallExpression	"memset ( & dht . order , 0 , sizeof ( dht . order ) )"		5117100	0					
ANR	5117177	Callee	memset		5117100	0					
ANR	5117178	Identifier	memset		5117100	0					
ANR	5117179	ArgumentList	& dht . order		5117100	1					
ANR	5117180	Argument	& dht . order		5117100	0					
ANR	5117181	UnaryOperationExpression	& dht . order		5117100	0					
ANR	5117182	UnaryOperator	&		5117100	0					
ANR	5117183	MemberAccess	dht . order		5117100	1					
ANR	5117184	Identifier	dht		5117100	0					
ANR	5117185	Identifier	order		5117100	1					
ANR	5117186	Argument	0		5117100	1					
ANR	5117187	PrimaryExpression	0		5117100	0					
ANR	5117188	Argument	sizeof ( dht . order )		5117100	2					
ANR	5117189	SizeofExpression	sizeof ( dht . order )		5117100	0					
ANR	5117190	Sizeof	sizeof		5117100	0					
ANR	5117191	MemberAccess	dht . order		5117100	1					
ANR	5117192	Identifier	dht		5117100	0					
ANR	5117193	Identifier	order		5117100	1					
ANR	5117194	ExpressionStatement	"dht . id = gs_next_ids ( pgs -> memory , 1 )"	955:4:36160:36196	5117100	9	True				
ANR	5117195	AssignmentExpression	"dht . id = gs_next_ids ( pgs -> memory , 1 )"		5117100	0		=			
ANR	5117196	MemberAccess	dht . id		5117100	0					
ANR	5117197	Identifier	dht		5117100	0					
ANR	5117198	Identifier	id		5117100	1					
ANR	5117199	CallExpression	"gs_next_ids ( pgs -> memory , 1 )"		5117100	1					
ANR	5117200	Callee	gs_next_ids		5117100	0					
ANR	5117201	Identifier	gs_next_ids		5117100	0					
ANR	5117202	ArgumentList	pgs -> memory		5117100	1					
ANR	5117203	Argument	pgs -> memory		5117100	0					
ANR	5117204	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5117205	Identifier	pgs		5117100	0					
ANR	5117206	Identifier	memory		5117100	1					
ANR	5117207	Argument	1		5117100	1					
ANR	5117208	PrimaryExpression	1		5117100	0					
ANR	5117209	ExpressionStatement	dht . type = type	956:4:36202:36217	5117100	10	True				
ANR	5117210	AssignmentExpression	dht . type = type		5117100	0		=			
ANR	5117211	MemberAccess	dht . type		5117100	0					
ANR	5117212	Identifier	dht		5117100	0					
ANR	5117213	Identifier	type		5117100	1					
ANR	5117214	Identifier	type		5117100	1					
ANR	5117215	ExpressionStatement	"dht . components = gs_alloc_struct_array ( pgs -> memory , num_comps , gx_ht_order_component , & st_ht_order_component_element , ""gx_gstate_dev_ht_install(components)"" )"	957:4:36223:36513	5117100	11	True				
ANR	5117216	AssignmentExpression	"dht . components = gs_alloc_struct_array ( pgs -> memory , num_comps , gx_ht_order_component , & st_ht_order_component_element , ""gx_gstate_dev_ht_install(components)"" )"		5117100	0		=			
ANR	5117217	MemberAccess	dht . components		5117100	0					
ANR	5117218	Identifier	dht		5117100	0					
ANR	5117219	Identifier	components		5117100	1					
ANR	5117220	CallExpression	"gs_alloc_struct_array ( pgs -> memory , num_comps , gx_ht_order_component , & st_ht_order_component_element , ""gx_gstate_dev_ht_install(components)"" )"		5117100	1					
ANR	5117221	Callee	gs_alloc_struct_array		5117100	0					
ANR	5117222	Identifier	gs_alloc_struct_array		5117100	0					
ANR	5117223	ArgumentList	pgs -> memory		5117100	1					
ANR	5117224	Argument	pgs -> memory		5117100	0					
ANR	5117225	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5117226	Identifier	pgs		5117100	0					
ANR	5117227	Identifier	memory		5117100	1					
ANR	5117228	Argument	num_comps		5117100	1					
ANR	5117229	Identifier	num_comps		5117100	0					
ANR	5117230	Argument	gx_ht_order_component		5117100	2					
ANR	5117231	Identifier	gx_ht_order_component		5117100	0					
ANR	5117232	Argument	& st_ht_order_component_element		5117100	3					
ANR	5117233	UnaryOperationExpression	& st_ht_order_component_element		5117100	0					
ANR	5117234	UnaryOperator	&		5117100	0					
ANR	5117235	Identifier	st_ht_order_component_element		5117100	1					
ANR	5117236	Argument	"""gx_gstate_dev_ht_install(components)"""		5117100	4					
ANR	5117237	PrimaryExpression	"""gx_gstate_dev_ht_install(components)"""		5117100	0					
ANR	5117238	IfStatement	if ( dht . components == NULL )		5117100	12					
ANR	5117239	Condition	dht . components == NULL	963:8:36523:36544	5117100	0	True				
ANR	5117240	EqualityExpression	dht . components == NULL		5117100	0		==			
ANR	5117241	MemberAccess	dht . components		5117100	0					
ANR	5117242	Identifier	dht		5117100	0					
ANR	5117243	Identifier	components		5117100	1					
ANR	5117244	Identifier	NULL		5117100	1					
ANR	5117245	ExpressionStatement	return_error ( gs_error_VMerror )	964:8:36555:36585	5117100	1	True				
ANR	5117246	CallExpression	return_error ( gs_error_VMerror )		5117100	0					
ANR	5117247	Callee	return_error		5117100	0					
ANR	5117248	Identifier	return_error		5117100	0					
ANR	5117249	ArgumentList	gs_error_VMerror		5117100	1					
ANR	5117250	Argument	gs_error_VMerror		5117100	0					
ANR	5117251	Identifier	gs_error_VMerror		5117100	0					
ANR	5117252	ExpressionStatement	dht . num_comp = dht . num_dev_comp = num_comps	965:4:36591:36634	5117100	13	True				
ANR	5117253	AssignmentExpression	dht . num_comp = dht . num_dev_comp = num_comps		5117100	0		=			
ANR	5117254	MemberAccess	dht . num_comp		5117100	0					
ANR	5117255	Identifier	dht		5117100	0					
ANR	5117256	Identifier	num_comp		5117100	1					
ANR	5117257	AssignmentExpression	dht . num_dev_comp = num_comps		5117100	1		=			
ANR	5117258	MemberAccess	dht . num_dev_comp		5117100	0					
ANR	5117259	Identifier	dht		5117100	0					
ANR	5117260	Identifier	num_dev_comp		5117100	1					
ANR	5117261	Identifier	num_comps		5117100	1					
ANR	5117262	ExpressionStatement	"memset ( dht . components , 0 , num_comps * sizeof ( dht . components [ 0 ] ) )"	969:4:36735:36799	5117100	14	True				
ANR	5117263	CallExpression	"memset ( dht . components , 0 , num_comps * sizeof ( dht . components [ 0 ] ) )"		5117100	0					
ANR	5117264	Callee	memset		5117100	0					
ANR	5117265	Identifier	memset		5117100	0					
ANR	5117266	ArgumentList	dht . components		5117100	1					
ANR	5117267	Argument	dht . components		5117100	0					
ANR	5117268	MemberAccess	dht . components		5117100	0					
ANR	5117269	Identifier	dht		5117100	0					
ANR	5117270	Identifier	components		5117100	1					
ANR	5117271	Argument	0		5117100	1					
ANR	5117272	PrimaryExpression	0		5117100	0					
ANR	5117273	Argument	num_comps * sizeof ( dht . components [ 0 ] )		5117100	2					
ANR	5117274	MultiplicativeExpression	num_comps * sizeof ( dht . components [ 0 ] )		5117100	0		*			
ANR	5117275	Identifier	num_comps		5117100	0					
ANR	5117276	SizeofExpression	sizeof ( dht . components [ 0 ] )		5117100	1					
ANR	5117277	Sizeof	sizeof		5117100	0					
ANR	5117278	ArrayIndexing	dht . components [ 0 ]		5117100	1					
ANR	5117279	MemberAccess	dht . components		5117100	0					
ANR	5117280	Identifier	dht		5117100	0					
ANR	5117281	Identifier	components		5117100	1					
ANR	5117282	PrimaryExpression	0		5117100	1					
ANR	5117283	ForStatement	for ( i = 0 ; i < num_comps ; i ++ )		5117100	15					
ANR	5117284	ForInit	i = 0 ;	970:9:36810:36815	5117100	0	True				
ANR	5117285	AssignmentExpression	i = 0		5117100	0		=			
ANR	5117286	Identifier	i		5117100	0					
ANR	5117287	PrimaryExpression	0		5117100	1					
ANR	5117288	Condition	i < num_comps	970:16:36817:36829	5117100	1	True				
ANR	5117289	RelationalExpression	i < num_comps		5117100	0		<			
ANR	5117290	Identifier	i		5117100	0					
ANR	5117291	Identifier	num_comps		5117100	1					
ANR	5117292	PostIncDecOperationExpression	i ++	970:31:36832:36834	5117100	2	True				
ANR	5117293	Identifier	i		5117100	0					
ANR	5117294	IncDec	++		5117100	1					
ANR	5117295	ExpressionStatement	dht . components [ i ] . comp_number = - 1	971:8:36845:36879	5117100	3	True				
ANR	5117296	AssignmentExpression	dht . components [ i ] . comp_number = - 1		5117100	0		=			
ANR	5117297	MemberAccess	dht . components [ i ] . comp_number		5117100	0					
ANR	5117298	ArrayIndexing	dht . components [ i ]		5117100	0					
ANR	5117299	MemberAccess	dht . components		5117100	0					
ANR	5117300	Identifier	dht		5117100	0					
ANR	5117301	Identifier	components		5117100	1					
ANR	5117302	Identifier	i		5117100	1					
ANR	5117303	Identifier	comp_number		5117100	1					
ANR	5117304	UnaryOperationExpression	- 1		5117100	1					
ANR	5117305	UnaryOperator	-		5117100	0					
ANR	5117306	PrimaryExpression	1		5117100	1					
ANR	5117307	IfStatement	if ( pdht -> components != 0 )		5117100	16					
ANR	5117308	Condition	pdht -> components != 0	980:8:37218:37238	5117100	0	True				
ANR	5117309	EqualityExpression	pdht -> components != 0		5117100	0		!=			
ANR	5117310	PtrMemberAccess	pdht -> components		5117100	0					
ANR	5117311	Identifier	pdht		5117100	0					
ANR	5117312	Identifier	components		5117100	1					
ANR	5117313	PrimaryExpression	0		5117100	1					
ANR	5117314	CompoundStatement		40:8:1584:1621	5117100	1					
ANR	5117315	IdentifierDeclStatement	int input_ncomps = pdht -> num_comp ;	981:8:37251:37288	5117100	0	True				
ANR	5117316	IdentifierDecl	input_ncomps = pdht -> num_comp		5117100	0					
ANR	5117317	IdentifierDeclType	int		5117100	0					
ANR	5117318	Identifier	input_ncomps		5117100	1					
ANR	5117319	AssignmentExpression	input_ncomps = pdht -> num_comp		5117100	2		=			
ANR	5117320	Identifier	input_ncomps		5117100	0					
ANR	5117321	PtrMemberAccess	pdht -> num_comp		5117100	1					
ANR	5117322	Identifier	pdht		5117100	0					
ANR	5117323	Identifier	num_comp		5117100	1					
ANR	5117324	ForStatement	for ( i = 0 ; i < input_ncomps && code >= 0 ; i ++ )		5117100	1					
ANR	5117325	ForInit	i = 0 ;	983:13:37304:37309	5117100	0	True				
ANR	5117326	AssignmentExpression	i = 0		5117100	0		=			
ANR	5117327	Identifier	i		5117100	0					
ANR	5117328	PrimaryExpression	0		5117100	1					
ANR	5117329	Condition	i < input_ncomps && code >= 0	983:20:37311:37339	5117100	1	True				
ANR	5117330	AndExpression	i < input_ncomps && code >= 0		5117100	0		&&			
ANR	5117331	RelationalExpression	i < input_ncomps		5117100	0		<			
ANR	5117332	Identifier	i		5117100	0					
ANR	5117333	Identifier	input_ncomps		5117100	1					
ANR	5117334	RelationalExpression	code >= 0		5117100	1		>=			
ANR	5117335	Identifier	code		5117100	0					
ANR	5117336	PrimaryExpression	0		5117100	1					
ANR	5117337	PostIncDecOperationExpression	i ++	983:51:37342:37344	5117100	2	True				
ANR	5117338	Identifier	i		5117100	0					
ANR	5117339	IncDec	++		5117100	1					
ANR	5117340	CompoundStatement		45:12:1830:1886	5117100	3					
ANR	5117341	IdentifierDeclStatement	gx_ht_order_component * p_s_comp = & pdht -> components [ i ] ;	984:12:37361:37416	5117100	0	True				
ANR	5117342	IdentifierDecl	* p_s_comp = & pdht -> components [ i ]		5117100	0					
ANR	5117343	IdentifierDeclType	gx_ht_order_component *		5117100	0					
ANR	5117344	Identifier	p_s_comp		5117100	1					
ANR	5117345	AssignmentExpression	* p_s_comp = & pdht -> components [ i ]		5117100	2		=			
ANR	5117346	Identifier	p_s_comp		5117100	0					
ANR	5117347	UnaryOperationExpression	& pdht -> components [ i ]		5117100	1					
ANR	5117348	UnaryOperator	&		5117100	0					
ANR	5117349	ArrayIndexing	pdht -> components [ i ]		5117100	1					
ANR	5117350	PtrMemberAccess	pdht -> components		5117100	0					
ANR	5117351	Identifier	pdht		5117100	0					
ANR	5117352	Identifier	components		5117100	1					
ANR	5117353	Identifier	i		5117100	1					
ANR	5117354	IdentifierDeclStatement	gx_ht_order * p_s_order = & p_s_comp -> corder ;	985:12:37430:37483	5117100	1	True				
ANR	5117355	IdentifierDecl	* p_s_order = & p_s_comp -> corder		5117100	0					
ANR	5117356	IdentifierDeclType	gx_ht_order *		5117100	0					
ANR	5117357	Identifier	p_s_order		5117100	1					
ANR	5117358	AssignmentExpression	* p_s_order = & p_s_comp -> corder		5117100	2		=			
ANR	5117359	Identifier	p_s_order		5117100	0					
ANR	5117360	UnaryOperationExpression	& p_s_comp -> corder		5117100	1					
ANR	5117361	UnaryOperator	&		5117100	0					
ANR	5117362	PtrMemberAccess	p_s_comp -> corder		5117100	1					
ANR	5117363	Identifier	p_s_comp		5117100	0					
ANR	5117364	Identifier	corder		5117100	1					
ANR	5117365	IdentifierDeclStatement	int comp_num = p_s_comp -> comp_number ;	986:12:37497:37553	5117100	2	True				
ANR	5117366	IdentifierDecl	comp_num = p_s_comp -> comp_number		5117100	0					
ANR	5117367	IdentifierDeclType	int		5117100	0					
ANR	5117368	Identifier	comp_num		5117100	1					
ANR	5117369	AssignmentExpression	comp_num = p_s_comp -> comp_number		5117100	2		=			
ANR	5117370	Identifier	comp_num		5117100	0					
ANR	5117371	PtrMemberAccess	p_s_comp -> comp_number		5117100	1					
ANR	5117372	Identifier	p_s_comp		5117100	0					
ANR	5117373	Identifier	comp_number		5117100	1					
ANR	5117374	IfStatement	if ( comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS )		5117100	3					
ANR	5117375	Condition	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS	988:16:37572:37629	5117100	0	True				
ANR	5117376	AndExpression	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	0		&&			
ANR	5117377	RelationalExpression	comp_num >= 0		5117100	0		>=			
ANR	5117378	Identifier	comp_num		5117100	0					
ANR	5117379	PrimaryExpression	0		5117100	1					
ANR	5117380	RelationalExpression	comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	1		<			
ANR	5117381	Identifier	comp_num		5117100	0					
ANR	5117382	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	1					
ANR	5117383	CompoundStatement		48:16:1983:2043	5117100	1					
ANR	5117384	IdentifierDeclStatement	gx_ht_order * p_d_order = & dht . components [ comp_num ] . corder ;	989:16:37650:37710	5117100	0	True				
ANR	5117385	IdentifierDecl	* p_d_order = & dht . components [ comp_num ] . corder		5117100	0					
ANR	5117386	IdentifierDeclType	gx_ht_order *		5117100	0					
ANR	5117387	Identifier	p_d_order		5117100	1					
ANR	5117388	AssignmentExpression	* p_d_order = & dht . components [ comp_num ] . corder		5117100	2		=			
ANR	5117389	Identifier	p_d_order		5117100	0					
ANR	5117390	UnaryOperationExpression	& dht . components [ comp_num ] . corder		5117100	1					
ANR	5117391	UnaryOperator	&		5117100	0					
ANR	5117392	MemberAccess	dht . components [ comp_num ] . corder		5117100	1					
ANR	5117393	ArrayIndexing	dht . components [ comp_num ]		5117100	0					
ANR	5117394	MemberAccess	dht . components		5117100	0					
ANR	5117395	Identifier	dht		5117100	0					
ANR	5117396	Identifier	components		5117100	1					
ANR	5117397	Identifier	comp_num		5117100	1					
ANR	5117398	Identifier	corder		5117100	1					
ANR	5117399	ExpressionStatement	dht . components [ comp_num ] . comp_number = comp_num	992:16:37795:37842	5117100	1	True				
ANR	5117400	AssignmentExpression	dht . components [ comp_num ] . comp_number = comp_num		5117100	0		=			
ANR	5117401	MemberAccess	dht . components [ comp_num ] . comp_number		5117100	0					
ANR	5117402	ArrayIndexing	dht . components [ comp_num ]		5117100	0					
ANR	5117403	MemberAccess	dht . components		5117100	0					
ANR	5117404	Identifier	dht		5117100	0					
ANR	5117405	Identifier	components		5117100	1					
ANR	5117406	Identifier	comp_num		5117100	1					
ANR	5117407	Identifier	comp_number		5117100	1					
ANR	5117408	Identifier	comp_num		5117100	1					
ANR	5117409	IfStatement	if ( mem_diff )		5117100	2					
ANR	5117410	Condition	mem_diff	998:20:38005:38012	5117100	0	True				
ANR	5117411	Identifier	mem_diff		5117100	0					
ANR	5117412	ExpressionStatement	"code = gx_ht_copy_ht_order ( p_d_order , p_s_order , pgs -> memory )"	999:20:38035:38194	5117100	1	True				
ANR	5117413	AssignmentExpression	"code = gx_ht_copy_ht_order ( p_d_order , p_s_order , pgs -> memory )"		5117100	0		=			
ANR	5117414	Identifier	code		5117100	0					
ANR	5117415	CallExpression	"gx_ht_copy_ht_order ( p_d_order , p_s_order , pgs -> memory )"		5117100	1					
ANR	5117416	Callee	gx_ht_copy_ht_order		5117100	0					
ANR	5117417	Identifier	gx_ht_copy_ht_order		5117100	0					
ANR	5117418	ArgumentList	p_d_order		5117100	1					
ANR	5117419	Argument	p_d_order		5117100	0					
ANR	5117420	Identifier	p_d_order		5117100	0					
ANR	5117421	Argument	p_s_order		5117100	1					
ANR	5117422	Identifier	p_s_order		5117100	0					
ANR	5117423	Argument	pgs -> memory		5117100	2					
ANR	5117424	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5117425	Identifier	pgs		5117100	0					
ANR	5117426	Identifier	memory		5117100	1					
ANR	5117427	ElseStatement	else		5117100	0					
ANR	5117428	CompoundStatement		61:21:2550:2550	5117100	0					
ANR	5117429	ExpressionStatement	used_default = used_default || p_s_order -> bit_data == pdht -> order . bit_data	1004:20:38309:38418	5117100	0	True				
ANR	5117430	AssignmentExpression	used_default = used_default || p_s_order -> bit_data == pdht -> order . bit_data		5117100	0		=			
ANR	5117431	Identifier	used_default		5117100	0					
ANR	5117432	OrExpression	used_default || p_s_order -> bit_data == pdht -> order . bit_data		5117100	1		||			
ANR	5117433	Identifier	used_default		5117100	0					
ANR	5117434	EqualityExpression	p_s_order -> bit_data == pdht -> order . bit_data		5117100	1		==			
ANR	5117435	PtrMemberAccess	p_s_order -> bit_data		5117100	0					
ANR	5117436	Identifier	p_s_order		5117100	0					
ANR	5117437	Identifier	bit_data		5117100	1					
ANR	5117438	MemberAccess	pdht -> order . bit_data		5117100	1					
ANR	5117439	PtrMemberAccess	pdht -> order		5117100	0					
ANR	5117440	Identifier	pdht		5117100	0					
ANR	5117441	Identifier	order		5117100	1					
ANR	5117442	Identifier	bit_data		5117100	1					
ANR	5117443	ExpressionStatement	"gx_ht_move_ht_order ( p_d_order , p_s_order )"	1007:20:38441:38482	5117100	1	True				
ANR	5117444	CallExpression	"gx_ht_move_ht_order ( p_d_order , p_s_order )"		5117100	0					
ANR	5117445	Callee	gx_ht_move_ht_order		5117100	0					
ANR	5117446	Identifier	gx_ht_move_ht_order		5117100	0					
ANR	5117447	ArgumentList	p_d_order		5117100	1					
ANR	5117448	Argument	p_d_order		5117100	0					
ANR	5117449	Identifier	p_d_order		5117100	0					
ANR	5117450	Argument	p_s_order		5117100	1					
ANR	5117451	Identifier	p_s_order		5117100	0					
ANR	5117452	ForStatement	for ( i = 0 ; i < num_comps && code >= 0 ; i ++ )		5117100	17					
ANR	5117453	ForInit	i = 0 ;	1017:9:38617:38622	5117100	0	True				
ANR	5117454	AssignmentExpression	i = 0		5117100	0		=			
ANR	5117455	Identifier	i		5117100	0					
ANR	5117456	PrimaryExpression	0		5117100	1					
ANR	5117457	Condition	i < num_comps && code >= 0	1017:16:38624:38649	5117100	1	True				
ANR	5117458	AndExpression	i < num_comps && code >= 0		5117100	0		&&			
ANR	5117459	RelationalExpression	i < num_comps		5117100	0		<			
ANR	5117460	Identifier	i		5117100	0					
ANR	5117461	Identifier	num_comps		5117100	1					
ANR	5117462	RelationalExpression	code >= 0		5117100	1		>=			
ANR	5117463	Identifier	code		5117100	0					
ANR	5117464	PrimaryExpression	0		5117100	1					
ANR	5117465	PostIncDecOperationExpression	i ++	1017:44:38652:38654	5117100	2	True				
ANR	5117466	Identifier	i		5117100	0					
ANR	5117467	IncDec	++		5117100	1					
ANR	5117468	CompoundStatement		77:8:3000:3047	5117100	3					
ANR	5117469	IdentifierDeclStatement	gx_ht_order * porder = & dht . components [ i ] . corder ;	1018:8:38667:38714	5117100	0	True				
ANR	5117470	IdentifierDecl	* porder = & dht . components [ i ] . corder		5117100	0					
ANR	5117471	IdentifierDeclType	gx_ht_order *		5117100	0					
ANR	5117472	Identifier	porder		5117100	1					
ANR	5117473	AssignmentExpression	* porder = & dht . components [ i ] . corder		5117100	2		=			
ANR	5117474	Identifier	porder		5117100	0					
ANR	5117475	UnaryOperationExpression	& dht . components [ i ] . corder		5117100	1					
ANR	5117476	UnaryOperator	&		5117100	0					
ANR	5117477	MemberAccess	dht . components [ i ] . corder		5117100	1					
ANR	5117478	ArrayIndexing	dht . components [ i ]		5117100	0					
ANR	5117479	MemberAccess	dht . components		5117100	0					
ANR	5117480	Identifier	dht		5117100	0					
ANR	5117481	Identifier	components		5117100	1					
ANR	5117482	Identifier	i		5117100	1					
ANR	5117483	Identifier	corder		5117100	1					
ANR	5117484	IfStatement	if ( dht . components [ i ] . comp_number != i )		5117100	1					
ANR	5117485	Condition	dht . components [ i ] . comp_number != i	1020:12:38729:38762	5117100	0	True				
ANR	5117486	EqualityExpression	dht . components [ i ] . comp_number != i		5117100	0		!=			
ANR	5117487	MemberAccess	dht . components [ i ] . comp_number		5117100	0					
ANR	5117488	ArrayIndexing	dht . components [ i ]		5117100	0					
ANR	5117489	MemberAccess	dht . components		5117100	0					
ANR	5117490	Identifier	dht		5117100	0					
ANR	5117491	Identifier	components		5117100	1					
ANR	5117492	Identifier	i		5117100	1					
ANR	5117493	Identifier	comp_number		5117100	1					
ANR	5117494	Identifier	i		5117100	1					
ANR	5117495	CompoundStatement		79:48:3098:3098	5117100	1					
ANR	5117496	IfStatement	if ( used_default || mem_diff )		5117100	0					
ANR	5117497	Condition	used_default || mem_diff	1021:16:38783:38806	5117100	0	True				
ANR	5117498	OrExpression	used_default || mem_diff		5117100	0		||			
ANR	5117499	Identifier	used_default		5117100	0					
ANR	5117500	Identifier	mem_diff		5117100	1					
ANR	5117501	ExpressionStatement	"code = gx_ht_copy_ht_order ( porder , & pdht -> order , pgs -> memory )"	1022:16:38825:38886	5117100	1	True				
ANR	5117502	AssignmentExpression	"code = gx_ht_copy_ht_order ( porder , & pdht -> order , pgs -> memory )"		5117100	0		=			
ANR	5117503	Identifier	code		5117100	0					
ANR	5117504	CallExpression	"gx_ht_copy_ht_order ( porder , & pdht -> order , pgs -> memory )"		5117100	1					
ANR	5117505	Callee	gx_ht_copy_ht_order		5117100	0					
ANR	5117506	Identifier	gx_ht_copy_ht_order		5117100	0					
ANR	5117507	ArgumentList	porder		5117100	1					
ANR	5117508	Argument	porder		5117100	0					
ANR	5117509	Identifier	porder		5117100	0					
ANR	5117510	Argument	& pdht -> order		5117100	1					
ANR	5117511	UnaryOperationExpression	& pdht -> order		5117100	0					
ANR	5117512	UnaryOperator	&		5117100	0					
ANR	5117513	PtrMemberAccess	pdht -> order		5117100	1					
ANR	5117514	Identifier	pdht		5117100	0					
ANR	5117515	Identifier	order		5117100	1					
ANR	5117516	Argument	pgs -> memory		5117100	2					
ANR	5117517	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5117518	Identifier	pgs		5117100	0					
ANR	5117519	Identifier	memory		5117100	1					
ANR	5117520	ElseStatement	else		5117100	0					
ANR	5117521	CompoundStatement		82:17:3238:3238	5117100	0					
ANR	5117522	ExpressionStatement	"gx_ht_move_ht_order ( porder , & pdht -> order )"	1024:16:38923:38964	5117100	0	True				
ANR	5117523	CallExpression	"gx_ht_move_ht_order ( porder , & pdht -> order )"		5117100	0					
ANR	5117524	Callee	gx_ht_move_ht_order		5117100	0					
ANR	5117525	Identifier	gx_ht_move_ht_order		5117100	0					
ANR	5117526	ArgumentList	porder		5117100	1					
ANR	5117527	Argument	porder		5117100	0					
ANR	5117528	Identifier	porder		5117100	0					
ANR	5117529	Argument	& pdht -> order		5117100	1					
ANR	5117530	UnaryOperationExpression	& pdht -> order		5117100	0					
ANR	5117531	UnaryOperator	&		5117100	0					
ANR	5117532	PtrMemberAccess	pdht -> order		5117100	1					
ANR	5117533	Identifier	pdht		5117100	0					
ANR	5117534	Identifier	order		5117100	1					
ANR	5117535	ExpressionStatement	used_default = true	1025:16:38982:39001	5117100	1	True				
ANR	5117536	AssignmentExpression	used_default = true		5117100	0		=			
ANR	5117537	Identifier	used_default		5117100	0					
ANR	5117538	Identifier	true		5117100	1					
ANR	5117539	ExpressionStatement	dht . components [ i ] . comp_number = i	1027:12:39029:39062	5117100	1	True				
ANR	5117540	AssignmentExpression	dht . components [ i ] . comp_number = i		5117100	0		=			
ANR	5117541	MemberAccess	dht . components [ i ] . comp_number		5117100	0					
ANR	5117542	ArrayIndexing	dht . components [ i ]		5117100	0					
ANR	5117543	MemberAccess	dht . components		5117100	0					
ANR	5117544	Identifier	dht		5117100	0					
ANR	5117545	Identifier	components		5117100	1					
ANR	5117546	Identifier	i		5117100	1					
ANR	5117547	Identifier	comp_number		5117100	1					
ANR	5117548	Identifier	i		5117100	1					
ANR	5117549	ExpressionStatement	w = porder -> width	1030:8:39083:39100	5117100	2	True				
ANR	5117550	AssignmentExpression	w = porder -> width		5117100	0		=			
ANR	5117551	Identifier	w		5117100	0					
ANR	5117552	PtrMemberAccess	porder -> width		5117100	1					
ANR	5117553	Identifier	porder		5117100	0					
ANR	5117554	Identifier	width		5117100	1					
ANR	5117555	ExpressionStatement	h = porder -> full_height	1031:8:39110:39133	5117100	3	True				
ANR	5117556	AssignmentExpression	h = porder -> full_height		5117100	0		=			
ANR	5117557	Identifier	h		5117100	0					
ANR	5117558	PtrMemberAccess	porder -> full_height		5117100	1					
ANR	5117559	Identifier	porder		5117100	0					
ANR	5117560	Identifier	full_height		5117100	1					
ANR	5117561	ExpressionStatement	"dw = igcd ( lcm_width , w )"	1032:8:39143:39166	5117100	4	True				
ANR	5117562	AssignmentExpression	"dw = igcd ( lcm_width , w )"		5117100	0		=			
ANR	5117563	Identifier	dw		5117100	0					
ANR	5117564	CallExpression	"igcd ( lcm_width , w )"		5117100	1					
ANR	5117565	Callee	igcd		5117100	0					
ANR	5117566	Identifier	igcd		5117100	0					
ANR	5117567	ArgumentList	lcm_width		5117100	1					
ANR	5117568	Argument	lcm_width		5117100	0					
ANR	5117569	Identifier	lcm_width		5117100	0					
ANR	5117570	Argument	w		5117100	1					
ANR	5117571	Identifier	w		5117100	0					
ANR	5117572	ExpressionStatement	"dh = igcd ( lcm_height , h )"	1033:8:39176:39200	5117100	5	True				
ANR	5117573	AssignmentExpression	"dh = igcd ( lcm_height , h )"		5117100	0		=			
ANR	5117574	Identifier	dh		5117100	0					
ANR	5117575	CallExpression	"igcd ( lcm_height , h )"		5117100	1					
ANR	5117576	Callee	igcd		5117100	0					
ANR	5117577	Identifier	igcd		5117100	0					
ANR	5117578	ArgumentList	lcm_height		5117100	1					
ANR	5117579	Argument	lcm_height		5117100	0					
ANR	5117580	Identifier	lcm_height		5117100	0					
ANR	5117581	Argument	h		5117100	1					
ANR	5117582	Identifier	h		5117100	0					
ANR	5117583	ExpressionStatement	lcm_width /= dw	1035:8:39211:39226	5117100	6	True				
ANR	5117584	AssignmentExpression	lcm_width /= dw		5117100	0		/=			
ANR	5117585	Identifier	lcm_width		5117100	0					
ANR	5117586	Identifier	dw		5117100	1					
ANR	5117587	ExpressionStatement	lcm_height /= dh	1036:8:39236:39252	5117100	7	True				
ANR	5117588	AssignmentExpression	lcm_height /= dh		5117100	0		/=			
ANR	5117589	Identifier	lcm_height		5117100	0					
ANR	5117590	Identifier	dh		5117100	1					
ANR	5117591	ExpressionStatement	lcm_width = ( w > max_int / lcm_width ? max_int : lcm_width * w )	1037:8:39262:39325	5117100	8	True				
ANR	5117592	AssignmentExpression	lcm_width = ( w > max_int / lcm_width ? max_int : lcm_width * w )		5117100	0		=			
ANR	5117593	Identifier	lcm_width		5117100	0					
ANR	5117594	ConditionalExpression	w > max_int / lcm_width ? max_int : lcm_width * w		5117100	1					
ANR	5117595	Condition	w > max_int / lcm_width		5117100	0					
ANR	5117596	RelationalExpression	w > max_int / lcm_width		5117100	0		>			
ANR	5117597	Identifier	w		5117100	0					
ANR	5117598	MultiplicativeExpression	max_int / lcm_width		5117100	1		/			
ANR	5117599	Identifier	max_int		5117100	0					
ANR	5117600	Identifier	lcm_width		5117100	1					
ANR	5117601	Identifier	max_int		5117100	1					
ANR	5117602	MultiplicativeExpression	lcm_width * w		5117100	2		*			
ANR	5117603	Identifier	lcm_width		5117100	0					
ANR	5117604	Identifier	w		5117100	1					
ANR	5117605	ExpressionStatement	lcm_height = ( h > max_int / lcm_height ? max_int : lcm_height * h )	1038:8:39335:39401	5117100	9	True				
ANR	5117606	AssignmentExpression	lcm_height = ( h > max_int / lcm_height ? max_int : lcm_height * h )		5117100	0		=			
ANR	5117607	Identifier	lcm_height		5117100	0					
ANR	5117608	ConditionalExpression	h > max_int / lcm_height ? max_int : lcm_height * h		5117100	1					
ANR	5117609	Condition	h > max_int / lcm_height		5117100	0					
ANR	5117610	RelationalExpression	h > max_int / lcm_height		5117100	0		>			
ANR	5117611	Identifier	h		5117100	0					
ANR	5117612	MultiplicativeExpression	max_int / lcm_height		5117100	1		/			
ANR	5117613	Identifier	max_int		5117100	0					
ANR	5117614	Identifier	lcm_height		5117100	1					
ANR	5117615	Identifier	max_int		5117100	1					
ANR	5117616	MultiplicativeExpression	lcm_height * h		5117100	2		*			
ANR	5117617	Identifier	lcm_height		5117100	0					
ANR	5117618	Identifier	h		5117100	1					
ANR	5117619	IfStatement	if ( porder -> cache == 0 )		5117100	10					
ANR	5117620	Condition	porder -> cache == 0	1040:12:39416:39433	5117100	0	True				
ANR	5117621	EqualityExpression	porder -> cache == 0		5117100	0		==			
ANR	5117622	PtrMemberAccess	porder -> cache		5117100	0					
ANR	5117623	Identifier	porder		5117100	0					
ANR	5117624	Identifier	cache		5117100	1					
ANR	5117625	PrimaryExpression	0		5117100	1					
ANR	5117626	CompoundStatement		101:12:3871:3893	5117100	1					
ANR	5117627	IdentifierDeclStatement	"uint tile_bytes , num_tiles , slots_wanted , rep_raster , rep_count ;"	1041:12:39450:39524	5117100	0	True				
ANR	5117628	IdentifierDecl	tile_bytes		5117100	0					
ANR	5117629	IdentifierDeclType	uint		5117100	0					
ANR	5117630	Identifier	tile_bytes		5117100	1					
ANR	5117631	IdentifierDecl	num_tiles		5117100	1					
ANR	5117632	IdentifierDeclType	uint		5117100	0					
ANR	5117633	Identifier	num_tiles		5117100	1					
ANR	5117634	IdentifierDecl	slots_wanted		5117100	2					
ANR	5117635	IdentifierDeclType	uint		5117100	0					
ANR	5117636	Identifier	slots_wanted		5117100	1					
ANR	5117637	IdentifierDecl	rep_raster		5117100	3					
ANR	5117638	IdentifierDeclType	uint		5117100	0					
ANR	5117639	Identifier	rep_raster		5117100	1					
ANR	5117640	IdentifierDecl	rep_count		5117100	4					
ANR	5117641	IdentifierDeclType	uint		5117100	0					
ANR	5117642	Identifier	rep_count		5117100	1					
ANR	5117643	IdentifierDeclStatement	gx_ht_cache * pcache ;	1042:12:39538:39560	5117100	1	True				
ANR	5117644	IdentifierDecl	* pcache		5117100	0					
ANR	5117645	IdentifierDeclType	gx_ht_cache *		5117100	0					
ANR	5117646	Identifier	pcache		5117100	1					
ANR	5117647	ExpressionStatement	tile_bytes = porder -> raster * ( porder -> num_bits / porder -> width )	1044:12:39575:39665	5117100	2	True				
ANR	5117648	AssignmentExpression	tile_bytes = porder -> raster * ( porder -> num_bits / porder -> width )		5117100	0		=			
ANR	5117649	Identifier	tile_bytes		5117100	0					
ANR	5117650	MultiplicativeExpression	porder -> raster * ( porder -> num_bits / porder -> width )		5117100	1		*			
ANR	5117651	PtrMemberAccess	porder -> raster		5117100	0					
ANR	5117652	Identifier	porder		5117100	0					
ANR	5117653	Identifier	raster		5117100	1					
ANR	5117654	MultiplicativeExpression	porder -> num_bits / porder -> width		5117100	1		/			
ANR	5117655	PtrMemberAccess	porder -> num_bits		5117100	0					
ANR	5117656	Identifier	porder		5117100	0					
ANR	5117657	Identifier	num_bits		5117100	1					
ANR	5117658	PtrMemberAccess	porder -> width		5117100	1					
ANR	5117659	Identifier	porder		5117100	0					
ANR	5117660	Identifier	width		5117100	1					
ANR	5117661	ExpressionStatement	num_tiles = 1 + gx_ht_cache_default_bits_size ( ) / tile_bytes	1046:12:39679:39739	5117100	3	True				
ANR	5117662	AssignmentExpression	num_tiles = 1 + gx_ht_cache_default_bits_size ( ) / tile_bytes		5117100	0		=			
ANR	5117663	Identifier	num_tiles		5117100	0					
ANR	5117664	AdditiveExpression	1 + gx_ht_cache_default_bits_size ( ) / tile_bytes		5117100	1		+			
ANR	5117665	PrimaryExpression	1		5117100	0					
ANR	5117666	MultiplicativeExpression	gx_ht_cache_default_bits_size ( ) / tile_bytes		5117100	1		/			
ANR	5117667	CallExpression	gx_ht_cache_default_bits_size ( )		5117100	0					
ANR	5117668	Callee	gx_ht_cache_default_bits_size		5117100	0					
ANR	5117669	Identifier	gx_ht_cache_default_bits_size		5117100	0					
ANR	5117670	ArgumentList			5117100	1					
ANR	5117671	Identifier	tile_bytes		5117100	1					
ANR	5117672	ExpressionStatement	slots_wanted = 1 + ( porder -> width * porder -> height )	1053:12:40057:40110	5117100	4	True				
ANR	5117673	AssignmentExpression	slots_wanted = 1 + ( porder -> width * porder -> height )		5117100	0		=			
ANR	5117674	Identifier	slots_wanted		5117100	0					
ANR	5117675	AdditiveExpression	1 + ( porder -> width * porder -> height )		5117100	1		+			
ANR	5117676	PrimaryExpression	1		5117100	0					
ANR	5117677	MultiplicativeExpression	porder -> width * porder -> height		5117100	1		*			
ANR	5117678	PtrMemberAccess	porder -> width		5117100	0					
ANR	5117679	Identifier	porder		5117100	0					
ANR	5117680	Identifier	width		5117100	1					
ANR	5117681	PtrMemberAccess	porder -> height		5117100	1					
ANR	5117682	Identifier	porder		5117100	0					
ANR	5117683	Identifier	height		5117100	1					
ANR	5117684	ExpressionStatement	rep_raster = ( ( num_tiles * tile_bytes ) / porder -> height / slots_wanted ) & ~ ( align_bitmap_mod - 1 )	1054:12:40124:40247	5117100	5	True				
ANR	5117685	AssignmentExpression	rep_raster = ( ( num_tiles * tile_bytes ) / porder -> height / slots_wanted ) & ~ ( align_bitmap_mod - 1 )		5117100	0		=			
ANR	5117686	Identifier	rep_raster		5117100	0					
ANR	5117687	BitAndExpression	( ( num_tiles * tile_bytes ) / porder -> height / slots_wanted ) & ~ ( align_bitmap_mod - 1 )		5117100	1		&			
ANR	5117688	MultiplicativeExpression	( num_tiles * tile_bytes ) / porder -> height / slots_wanted		5117100	0		/			
ANR	5117689	MultiplicativeExpression	num_tiles * tile_bytes		5117100	0		*			
ANR	5117690	Identifier	num_tiles		5117100	0					
ANR	5117691	Identifier	tile_bytes		5117100	1					
ANR	5117692	MultiplicativeExpression	porder -> height / slots_wanted		5117100	1		/			
ANR	5117693	PtrMemberAccess	porder -> height		5117100	0					
ANR	5117694	Identifier	porder		5117100	0					
ANR	5117695	Identifier	height		5117100	1					
ANR	5117696	Identifier	slots_wanted		5117100	1					
ANR	5117697	UnaryOperationExpression	~ ( align_bitmap_mod - 1 )		5117100	1					
ANR	5117698	UnaryOperator	~		5117100	0					
ANR	5117699	AdditiveExpression	align_bitmap_mod - 1		5117100	1		-			
ANR	5117700	Identifier	align_bitmap_mod		5117100	0					
ANR	5117701	PrimaryExpression	1		5117100	1					
ANR	5117702	ExpressionStatement	rep_count = rep_raster * 8 / porder -> width	1056:12:40261:40303	5117100	6	True				
ANR	5117703	AssignmentExpression	rep_count = rep_raster * 8 / porder -> width		5117100	0		=			
ANR	5117704	Identifier	rep_count		5117100	0					
ANR	5117705	MultiplicativeExpression	rep_raster * 8 / porder -> width		5117100	1		*			
ANR	5117706	Identifier	rep_raster		5117100	0					
ANR	5117707	MultiplicativeExpression	8 / porder -> width		5117100	1		/			
ANR	5117708	PrimaryExpression	8		5117100	0					
ANR	5117709	PtrMemberAccess	porder -> width		5117100	1					
ANR	5117710	Identifier	porder		5117100	0					
ANR	5117711	Identifier	width		5117100	1					
ANR	5117712	IfStatement	if ( rep_count > sizeof ( ulong ) * 8 && ( num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count ) ) )		5117100	7					
ANR	5117713	Condition	rep_count > sizeof ( ulong ) * 8 && ( num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count ) )	1057:16:40321:40437	5117100	0	True				
ANR	5117714	AndExpression	rep_count > sizeof ( ulong ) * 8 && ( num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count ) )		5117100	0		&&			
ANR	5117715	RelationalExpression	rep_count > sizeof ( ulong ) * 8		5117100	0		>			
ANR	5117716	Identifier	rep_count		5117100	0					
ANR	5117717	MultiplicativeExpression	sizeof ( ulong ) * 8		5117100	1		*			
ANR	5117718	SizeofExpression	sizeof ( ulong )		5117100	0					
ANR	5117719	Sizeof	sizeof		5117100	0					
ANR	5117720	SizeofOperand	ulong		5117100	1					
ANR	5117721	PrimaryExpression	8		5117100	1					
ANR	5117722	RelationalExpression	num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		5117100	1		>			
ANR	5117723	Identifier	num_tiles		5117100	0					
ANR	5117724	AdditiveExpression	1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		5117100	1		+			
ANR	5117725	PrimaryExpression	1		5117100	0					
ANR	5117726	MultiplicativeExpression	( num_tiles * 8 * sizeof ( ulong ) ) / rep_count		5117100	1		/			
ANR	5117727	MultiplicativeExpression	num_tiles * 8 * sizeof ( ulong )		5117100	0		*			
ANR	5117728	Identifier	num_tiles		5117100	0					
ANR	5117729	MultiplicativeExpression	8 * sizeof ( ulong )		5117100	1		*			
ANR	5117730	PrimaryExpression	8		5117100	0					
ANR	5117731	SizeofExpression	sizeof ( ulong )		5117100	1					
ANR	5117732	Sizeof	sizeof		5117100	0					
ANR	5117733	SizeofOperand	ulong		5117100	1					
ANR	5117734	Identifier	rep_count		5117100	1					
ANR	5117735	ExpressionStatement	num_tiles = 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )	1059:16:40456:40517	5117100	1	True				
ANR	5117736	AssignmentExpression	num_tiles = 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		5117100	0		=			
ANR	5117737	Identifier	num_tiles		5117100	0					
ANR	5117738	AdditiveExpression	1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		5117100	1		+			
ANR	5117739	PrimaryExpression	1		5117100	0					
ANR	5117740	MultiplicativeExpression	( num_tiles * 8 * sizeof ( ulong ) ) / rep_count		5117100	1		/			
ANR	5117741	MultiplicativeExpression	num_tiles * 8 * sizeof ( ulong )		5117100	0		*			
ANR	5117742	Identifier	num_tiles		5117100	0					
ANR	5117743	MultiplicativeExpression	8 * sizeof ( ulong )		5117100	1		*			
ANR	5117744	PrimaryExpression	8		5117100	0					
ANR	5117745	SizeofExpression	sizeof ( ulong )		5117100	1					
ANR	5117746	Sizeof	sizeof		5117100	0					
ANR	5117747	SizeofOperand	ulong		5117100	1					
ANR	5117748	Identifier	rep_count		5117100	1					
ANR	5117749	ExpressionStatement	"pcache = gx_ht_alloc_cache ( pgs -> memory , num_tiles , tile_bytes * num_tiles )"	1060:12:40531:40647	5117100	8	True				
ANR	5117750	AssignmentExpression	"pcache = gx_ht_alloc_cache ( pgs -> memory , num_tiles , tile_bytes * num_tiles )"		5117100	0		=			
ANR	5117751	Identifier	pcache		5117100	0					
ANR	5117752	CallExpression	"gx_ht_alloc_cache ( pgs -> memory , num_tiles , tile_bytes * num_tiles )"		5117100	1					
ANR	5117753	Callee	gx_ht_alloc_cache		5117100	0					
ANR	5117754	Identifier	gx_ht_alloc_cache		5117100	0					
ANR	5117755	ArgumentList	pgs -> memory		5117100	1					
ANR	5117756	Argument	pgs -> memory		5117100	0					
ANR	5117757	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5117758	Identifier	pgs		5117100	0					
ANR	5117759	Identifier	memory		5117100	1					
ANR	5117760	Argument	num_tiles		5117100	1					
ANR	5117761	Identifier	num_tiles		5117100	0					
ANR	5117762	Argument	tile_bytes * num_tiles		5117100	2					
ANR	5117763	MultiplicativeExpression	tile_bytes * num_tiles		5117100	0		*			
ANR	5117764	Identifier	tile_bytes		5117100	0					
ANR	5117765	Identifier	num_tiles		5117100	1					
ANR	5117766	IfStatement	if ( pcache == NULL )		5117100	9					
ANR	5117767	Condition	pcache == NULL	1062:16:40665:40678	5117100	0	True				
ANR	5117768	EqualityExpression	pcache == NULL		5117100	0		==			
ANR	5117769	Identifier	pcache		5117100	0					
ANR	5117770	Identifier	NULL		5117100	1					
ANR	5117771	ExpressionStatement	code = gs_error_VMerror	1063:16:40697:40720	5117100	1	True				
ANR	5117772	AssignmentExpression	code = gs_error_VMerror		5117100	0		=			
ANR	5117773	Identifier	code		5117100	0					
ANR	5117774	Identifier	gs_error_VMerror		5117100	1					
ANR	5117775	ElseStatement	else		5117100	0					
ANR	5117776	CompoundStatement		123:17:5072:5072	5117100	0					
ANR	5117777	ExpressionStatement	porder -> cache = pcache	1065:16:40757:40779	5117100	0	True				
ANR	5117778	AssignmentExpression	porder -> cache = pcache		5117100	0		=			
ANR	5117779	PtrMemberAccess	porder -> cache		5117100	0					
ANR	5117780	Identifier	porder		5117100	0					
ANR	5117781	Identifier	cache		5117100	1					
ANR	5117782	Identifier	pcache		5117100	1					
ANR	5117783	ExpressionStatement	"gx_ht_init_cache ( pgs -> memory , pcache , porder )"	1066:16:40797:40842	5117100	1	True				
ANR	5117784	CallExpression	"gx_ht_init_cache ( pgs -> memory , pcache , porder )"		5117100	0					
ANR	5117785	Callee	gx_ht_init_cache		5117100	0					
ANR	5117786	Identifier	gx_ht_init_cache		5117100	0					
ANR	5117787	ArgumentList	pgs -> memory		5117100	1					
ANR	5117788	Argument	pgs -> memory		5117100	0					
ANR	5117789	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5117790	Identifier	pgs		5117100	0					
ANR	5117791	Identifier	memory		5117100	1					
ANR	5117792	Argument	pcache		5117100	1					
ANR	5117793	Identifier	pcache		5117100	0					
ANR	5117794	Argument	porder		5117100	2					
ANR	5117795	Identifier	porder		5117100	0					
ANR	5117796	ExpressionStatement	dht . lcm_width = lcm_width	1070:4:40878:40903	5117100	18	True				
ANR	5117797	AssignmentExpression	dht . lcm_width = lcm_width		5117100	0		=			
ANR	5117798	MemberAccess	dht . lcm_width		5117100	0					
ANR	5117799	Identifier	dht		5117100	0					
ANR	5117800	Identifier	lcm_width		5117100	1					
ANR	5117801	Identifier	lcm_width		5117100	1					
ANR	5117802	ExpressionStatement	dht . lcm_height = lcm_height	1071:4:40909:40936	5117100	19	True				
ANR	5117803	AssignmentExpression	dht . lcm_height = lcm_height		5117100	0		=			
ANR	5117804	MemberAccess	dht . lcm_height		5117100	0					
ANR	5117805	Identifier	dht		5117100	0					
ANR	5117806	Identifier	lcm_height		5117100	1					
ANR	5117807	Identifier	lcm_height		5117100	1					
ANR	5117808	IfStatement	if ( code >= 0 )		5117100	20					
ANR	5117809	Condition	code >= 0	1091:8:41892:41900	5117100	0	True				
ANR	5117810	RelationalExpression	code >= 0		5117100	0		>=			
ANR	5117811	Identifier	code		5117100	0					
ANR	5117812	PrimaryExpression	0		5117100	1					
ANR	5117813	CompoundStatement		152:8:6300:6330	5117100	1					
ANR	5117814	IdentifierDeclStatement	gx_device_halftone * pgsdht = pgs -> dev_ht ;	1092:8:41913:41957	5117100	0	True				
ANR	5117815	IdentifierDecl	* pgsdht = pgs -> dev_ht		5117100	0					
ANR	5117816	IdentifierDeclType	gx_device_halftone *		5117100	0					
ANR	5117817	Identifier	pgsdht		5117100	1					
ANR	5117818	AssignmentExpression	* pgsdht = pgs -> dev_ht		5117100	2		=			
ANR	5117819	Identifier	pgsdht		5117100	0					
ANR	5117820	PtrMemberAccess	pgs -> dev_ht		5117100	1					
ANR	5117821	Identifier	pgs		5117100	0					
ANR	5117822	Identifier	dev_ht		5117100	1					
ANR	5117823	IdentifierDeclStatement	rc_header tmp_rc ;	1093:8:41967:41997	5117100	1	True				
ANR	5117824	IdentifierDecl	tmp_rc		5117100	0					
ANR	5117825	IdentifierDeclType	rc_header		5117100	0					
ANR	5117826	Identifier	tmp_rc		5117100	1					
ANR	5117827	IfStatement	if ( pgsdht != 0 && pgsdht -> rc . ref_count == 1 )		5117100	2					
ANR	5117828	Condition	pgsdht != 0 && pgsdht -> rc . ref_count == 1	1095:12:42012:42051	5117100	0	True				
ANR	5117829	AndExpression	pgsdht != 0 && pgsdht -> rc . ref_count == 1		5117100	0		&&			
ANR	5117830	EqualityExpression	pgsdht != 0		5117100	0		!=			
ANR	5117831	Identifier	pgsdht		5117100	0					
ANR	5117832	PrimaryExpression	0		5117100	1					
ANR	5117833	EqualityExpression	pgsdht -> rc . ref_count == 1		5117100	1		==			
ANR	5117834	MemberAccess	pgsdht -> rc . ref_count		5117100	0					
ANR	5117835	PtrMemberAccess	pgsdht -> rc		5117100	0					
ANR	5117836	Identifier	pgsdht		5117100	0					
ANR	5117837	Identifier	rc		5117100	1					
ANR	5117838	Identifier	ref_count		5117100	1					
ANR	5117839	PrimaryExpression	1		5117100	1					
ANR	5117840	CompoundStatement		154:54:6387:6387	5117100	1					
ANR	5117841	IfStatement	if ( pdht != pgsdht )		5117100	0					
ANR	5117842	Condition	pdht != pgsdht	1096:16:42072:42085	5117100	0	True				
ANR	5117843	EqualityExpression	pdht != pgsdht		5117100	0		!=			
ANR	5117844	Identifier	pdht		5117100	0					
ANR	5117845	Identifier	pgsdht		5117100	1					
ANR	5117846	ExpressionStatement	"gx_device_halftone_release ( pgsdht , pgsdht -> rc . memory )"	1097:16:42104:42157	5117100	1	True				
ANR	5117847	CallExpression	"gx_device_halftone_release ( pgsdht , pgsdht -> rc . memory )"		5117100	0					
ANR	5117848	Callee	gx_device_halftone_release		5117100	0					
ANR	5117849	Identifier	gx_device_halftone_release		5117100	0					
ANR	5117850	ArgumentList	pgsdht		5117100	1					
ANR	5117851	Argument	pgsdht		5117100	0					
ANR	5117852	Identifier	pgsdht		5117100	0					
ANR	5117853	Argument	pgsdht -> rc . memory		5117100	1					
ANR	5117854	MemberAccess	pgsdht -> rc . memory		5117100	0					
ANR	5117855	PtrMemberAccess	pgsdht -> rc		5117100	0					
ANR	5117856	Identifier	pgsdht		5117100	0					
ANR	5117857	Identifier	rc		5117100	1					
ANR	5117858	Identifier	memory		5117100	1					
ANR	5117859	ElseStatement	else		5117100	0					
ANR	5117860	CompoundStatement		162:31:6731:6760	5117100	0					
ANR	5117861	Statement	rc_unshare_struct	1099:12:42188:42204	5117100	0	True				
ANR	5117862	Statement	(	1099:29:42205:42205	5117100	1	True				
ANR	5117863	Statement	pgs	1099:31:42207:42209	5117100	2	True				
ANR	5117864	Statement	->	1099:34:42210:42211	5117100	3	True				
ANR	5117865	Statement	dev_ht	1099:36:42212:42217	5117100	4	True				
ANR	5117866	Statement	","	1099:42:42218:42218	5117100	5	True				
ANR	5117867	Statement	gx_device_halftone	1100:31:42251:42268	5117100	6	True				
ANR	5117868	Statement	","	1100:49:42269:42269	5117100	7	True				
ANR	5117869	Statement	&	1101:31:42302:42302	5117100	8	True				
ANR	5117870	Statement	st_device_halftone	1101:32:42303:42320	5117100	9	True				
ANR	5117871	Statement	","	1101:50:42321:42321	5117100	10	True				
ANR	5117872	Statement	pgs	1102:31:42354:42356	5117100	11	True				
ANR	5117873	Statement	->	1102:34:42357:42358	5117100	12	True				
ANR	5117874	Statement	memory	1102:36:42359:42364	5117100	13	True				
ANR	5117875	Statement	","	1102:42:42365:42365	5117100	14	True				
ANR	5117876	IdentifierDeclStatement	BEGIN code = gs_error_VMerror ;	1103:31:42398:42427	5117100	15	True				
ANR	5117877	IdentifierDecl	code = gs_error_VMerror		5117100	0					
ANR	5117878	IdentifierDeclType	BEGIN		5117100	0					
ANR	5117879	Identifier	code		5117100	1					
ANR	5117880	AssignmentExpression	code = gs_error_VMerror		5117100	2		=			
ANR	5117881	Identifier	gs_error_VMerror		5117100	0					
ANR	5117882	Identifier	gs_error_VMerror		5117100	1					
ANR	5117883	GotoStatement	goto err ;	1103:62:42429:42437	5117100	16	True				
ANR	5117884	Identifier	err		5117100	0					
ANR	5117885	Statement	END	1103:72:42439:42441	5117100	17	True				
ANR	5117886	Statement	","	1103:75:42442:42442	5117100	18	True				
ANR	5117887	Statement	"""gx_gstate_dev_ht_install"""	1104:31:42475:42500	5117100	19	True				
ANR	5117888	Statement	)	1104:58:42502:42502	5117100	20	True				
ANR	5117889	ExpressionStatement		1104:59:42503:42503	5117100	21	True				
ANR	5117890	ExpressionStatement	pgsdht = pgs -> dev_ht	1105:12:42517:42537	5117100	22	True				
ANR	5117891	AssignmentExpression	pgsdht = pgs -> dev_ht		5117100	0		=			
ANR	5117892	Identifier	pgsdht		5117100	0					
ANR	5117893	PtrMemberAccess	pgs -> dev_ht		5117100	1					
ANR	5117894	Identifier	pgs		5117100	0					
ANR	5117895	Identifier	dev_ht		5117100	1					
ANR	5117896	IfStatement	if ( pdht -> components != 0 )		5117100	3					
ANR	5117897	Condition	pdht -> components != 0	1121:12:43307:43327	5117100	0	True				
ANR	5117898	EqualityExpression	pdht -> components != 0		5117100	0		!=			
ANR	5117899	PtrMemberAccess	pdht -> components		5117100	0					
ANR	5117900	Identifier	pdht		5117100	0					
ANR	5117901	Identifier	components		5117100	1					
ANR	5117902	PrimaryExpression	0		5117100	1					
ANR	5117903	CompoundStatement		181:12:7677:7714	5117100	1					
ANR	5117904	IdentifierDeclStatement	int input_ncomps = pdht -> num_comp ;	1122:12:43344:43381	5117100	0	True				
ANR	5117905	IdentifierDecl	input_ncomps = pdht -> num_comp		5117100	0					
ANR	5117906	IdentifierDeclType	int		5117100	0					
ANR	5117907	Identifier	input_ncomps		5117100	1					
ANR	5117908	AssignmentExpression	input_ncomps = pdht -> num_comp		5117100	2		=			
ANR	5117909	Identifier	input_ncomps		5117100	0					
ANR	5117910	PtrMemberAccess	pdht -> num_comp		5117100	1					
ANR	5117911	Identifier	pdht		5117100	0					
ANR	5117912	Identifier	num_comp		5117100	1					
ANR	5117913	ForStatement	for ( i = 0 ; i < input_ncomps ; i ++ )		5117100	1					
ANR	5117914	ForInit	i = 0 ;	1124:17:43401:43406	5117100	0	True				
ANR	5117915	AssignmentExpression	i = 0		5117100	0		=			
ANR	5117916	Identifier	i		5117100	0					
ANR	5117917	PrimaryExpression	0		5117100	1					
ANR	5117918	Condition	i < input_ncomps	1124:24:43408:43423	5117100	1	True				
ANR	5117919	RelationalExpression	i < input_ncomps		5117100	0		<			
ANR	5117920	Identifier	i		5117100	0					
ANR	5117921	Identifier	input_ncomps		5117100	1					
ANR	5117922	PostIncDecOperationExpression	i ++	1124:42:43426:43428	5117100	2	True				
ANR	5117923	Identifier	i		5117100	0					
ANR	5117924	IncDec	++		5117100	1					
ANR	5117925	CompoundStatement		186:16:7926:7982	5117100	3					
ANR	5117926	IdentifierDeclStatement	gx_ht_order_component * p_s_comp = & pdht -> components [ i ] ;	1125:16:43449:43504	5117100	0	True				
ANR	5117927	IdentifierDecl	* p_s_comp = & pdht -> components [ i ]		5117100	0					
ANR	5117928	IdentifierDeclType	gx_ht_order_component *		5117100	0					
ANR	5117929	Identifier	p_s_comp		5117100	1					
ANR	5117930	AssignmentExpression	* p_s_comp = & pdht -> components [ i ]		5117100	2		=			
ANR	5117931	Identifier	p_s_comp		5117100	0					
ANR	5117932	UnaryOperationExpression	& pdht -> components [ i ]		5117100	1					
ANR	5117933	UnaryOperator	&		5117100	0					
ANR	5117934	ArrayIndexing	pdht -> components [ i ]		5117100	1					
ANR	5117935	PtrMemberAccess	pdht -> components		5117100	0					
ANR	5117936	Identifier	pdht		5117100	0					
ANR	5117937	Identifier	components		5117100	1					
ANR	5117938	Identifier	i		5117100	1					
ANR	5117939	IdentifierDeclStatement	gx_ht_order * p_s_order = & p_s_comp -> corder ;	1126:16:43522:43575	5117100	1	True				
ANR	5117940	IdentifierDecl	* p_s_order = & p_s_comp -> corder		5117100	0					
ANR	5117941	IdentifierDeclType	gx_ht_order *		5117100	0					
ANR	5117942	Identifier	p_s_order		5117100	1					
ANR	5117943	AssignmentExpression	* p_s_order = & p_s_comp -> corder		5117100	2		=			
ANR	5117944	Identifier	p_s_order		5117100	0					
ANR	5117945	UnaryOperationExpression	& p_s_comp -> corder		5117100	1					
ANR	5117946	UnaryOperator	&		5117100	0					
ANR	5117947	PtrMemberAccess	p_s_comp -> corder		5117100	1					
ANR	5117948	Identifier	p_s_comp		5117100	0					
ANR	5117949	Identifier	corder		5117100	1					
ANR	5117950	IdentifierDeclStatement	int comp_num = p_s_comp -> comp_number ;	1127:16:43593:43649	5117100	2	True				
ANR	5117951	IdentifierDecl	comp_num = p_s_comp -> comp_number		5117100	0					
ANR	5117952	IdentifierDeclType	int		5117100	0					
ANR	5117953	Identifier	comp_num		5117100	1					
ANR	5117954	AssignmentExpression	comp_num = p_s_comp -> comp_number		5117100	2		=			
ANR	5117955	Identifier	comp_num		5117100	0					
ANR	5117956	PtrMemberAccess	p_s_comp -> comp_number		5117100	1					
ANR	5117957	Identifier	p_s_comp		5117100	0					
ANR	5117958	Identifier	comp_number		5117100	1					
ANR	5117959	IfStatement	if ( comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS )		5117100	3					
ANR	5117960	Condition	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS	1129:21:43673:43778	5117100	0	True				
ANR	5117961	AndExpression	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	0		&&			
ANR	5117962	RelationalExpression	comp_num >= 0		5117100	0		>=			
ANR	5117963	Identifier	comp_num		5117100	0					
ANR	5117964	PrimaryExpression	0		5117100	1					
ANR	5117965	RelationalExpression	comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	1		<			
ANR	5117966	Identifier	comp_num		5117100	0					
ANR	5117967	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	1					
ANR	5117968	CompoundStatement		189:66:8116:8116	5117100	1					
ANR	5117969	ExpressionStatement	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"	1131:20:43805:43845	5117100	0	True				
ANR	5117970	CallExpression	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"		5117100	0					
ANR	5117971	Callee	memset		5117100	0					
ANR	5117972	Identifier	memset		5117100	0					
ANR	5117973	ArgumentList	p_s_order		5117100	1					
ANR	5117974	Argument	p_s_order		5117100	0					
ANR	5117975	Identifier	p_s_order		5117100	0					
ANR	5117976	Argument	0		5117100	1					
ANR	5117977	PrimaryExpression	0		5117100	0					
ANR	5117978	Argument	sizeof ( * p_s_order )		5117100	2					
ANR	5117979	SizeofExpression	sizeof ( * p_s_order )		5117100	0					
ANR	5117980	Sizeof	sizeof		5117100	0					
ANR	5117981	UnaryOperationExpression	* p_s_order		5117100	1					
ANR	5117982	UnaryOperator	*		5117100	0					
ANR	5117983	Identifier	p_s_order		5117100	1					
ANR	5117984	ElseStatement	else		5117100	0					
ANR	5117985	IfStatement	if ( comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS && used_default )		5117100	0					
ANR	5117986	Condition	comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS && used_default	1132:28:43875:43960	5117100	0	True				
ANR	5117987	AndExpression	comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS && used_default		5117100	0		&&			
ANR	5117988	EqualityExpression	comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	0		==			
ANR	5117989	Identifier	comp_num		5117100	0					
ANR	5117990	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5117100	1					
ANR	5117991	Identifier	used_default		5117100	1					
ANR	5117992	ExpressionStatement	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"	1134:20:44016:44056	5117100	1	True				
ANR	5117993	CallExpression	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"		5117100	0					
ANR	5117994	Callee	memset		5117100	0					
ANR	5117995	Identifier	memset		5117100	0					
ANR	5117996	ArgumentList	p_s_order		5117100	1					
ANR	5117997	Argument	p_s_order		5117100	0					
ANR	5117998	Identifier	p_s_order		5117100	0					
ANR	5117999	Argument	0		5117100	1					
ANR	5118000	PrimaryExpression	0		5117100	0					
ANR	5118001	Argument	sizeof ( * p_s_order )		5117100	2					
ANR	5118002	SizeofExpression	sizeof ( * p_s_order )		5117100	0					
ANR	5118003	Sizeof	sizeof		5117100	0					
ANR	5118004	UnaryOperationExpression	* p_s_order		5117100	1					
ANR	5118005	UnaryOperator	*		5117100	0					
ANR	5118006	Identifier	p_s_order		5117100	1					
ANR	5118007	IfStatement	if ( used_default )		5117100	4					
ANR	5118008	Condition	used_default	1137:12:44094:44105	5117100	0	True				
ANR	5118009	Identifier	used_default		5117100	0					
ANR	5118010	CompoundStatement		196:26:8441:8441	5117100	1					
ANR	5118011	ExpressionStatement	"memset ( & pdht -> order , 0 , sizeof ( pdht -> order ) )"	1138:12:44122:44166	5117100	0	True				
ANR	5118012	CallExpression	"memset ( & pdht -> order , 0 , sizeof ( pdht -> order ) )"		5117100	0					
ANR	5118013	Callee	memset		5117100	0					
ANR	5118014	Identifier	memset		5117100	0					
ANR	5118015	ArgumentList	& pdht -> order		5117100	1					
ANR	5118016	Argument	& pdht -> order		5117100	0					
ANR	5118017	UnaryOperationExpression	& pdht -> order		5117100	0					
ANR	5118018	UnaryOperator	&		5117100	0					
ANR	5118019	PtrMemberAccess	pdht -> order		5117100	1					
ANR	5118020	Identifier	pdht		5117100	0					
ANR	5118021	Identifier	order		5117100	1					
ANR	5118022	Argument	0		5117100	1					
ANR	5118023	PrimaryExpression	0		5117100	0					
ANR	5118024	Argument	sizeof ( pdht -> order )		5117100	2					
ANR	5118025	SizeofExpression	sizeof ( pdht -> order )		5117100	0					
ANR	5118026	Sizeof	sizeof		5117100	0					
ANR	5118027	PtrMemberAccess	pdht -> order		5117100	1					
ANR	5118028	Identifier	pdht		5117100	0					
ANR	5118029	Identifier	order		5117100	1					
ANR	5118030	ExpressionStatement	tmp_rc = pgsdht -> rc	1141:8:44187:44206	5117100	5	True				
ANR	5118031	AssignmentExpression	tmp_rc = pgsdht -> rc		5117100	0		=			
ANR	5118032	Identifier	tmp_rc		5117100	0					
ANR	5118033	PtrMemberAccess	pgsdht -> rc		5117100	1					
ANR	5118034	Identifier	pgsdht		5117100	0					
ANR	5118035	Identifier	rc		5117100	1					
ANR	5118036	ExpressionStatement	* pgsdht = dht	1142:8:44216:44229	5117100	6	True				
ANR	5118037	AssignmentExpression	* pgsdht = dht		5117100	0		=			
ANR	5118038	UnaryOperationExpression	* pgsdht		5117100	0					
ANR	5118039	UnaryOperator	*		5117100	0					
ANR	5118040	Identifier	pgsdht		5117100	1					
ANR	5118041	Identifier	dht		5117100	1					
ANR	5118042	ExpressionStatement	pgsdht -> rc = tmp_rc	1143:8:44239:44258	5117100	7	True				
ANR	5118043	AssignmentExpression	pgsdht -> rc = tmp_rc		5117100	0		=			
ANR	5118044	PtrMemberAccess	pgsdht -> rc		5117100	0					
ANR	5118045	Identifier	pgsdht		5117100	0					
ANR	5118046	Identifier	rc		5117100	1					
ANR	5118047	Identifier	tmp_rc		5117100	1					
ANR	5118048	ExpressionStatement	gx_gstate_set_effective_xfer ( pgs )	1146:8:44328:44361	5117100	8	True				
ANR	5118049	CallExpression	gx_gstate_set_effective_xfer ( pgs )		5117100	0					
ANR	5118050	Callee	gx_gstate_set_effective_xfer		5117100	0					
ANR	5118051	Identifier	gx_gstate_set_effective_xfer		5117100	0					
ANR	5118052	ArgumentList	pgs		5117100	1					
ANR	5118053	Argument	pgs		5117100	0					
ANR	5118054	Identifier	pgs		5117100	0					
ANR	5118055	ReturnStatement	return 0 ;	1148:8:44372:44380	5117100	9	True				
ANR	5118056	PrimaryExpression	0		5117100	0					
ANR	5118057	Label	err :	1152:2:44453:44456	5117100	21	True				
ANR	5118058	Identifier	err		5117100	0					
ANR	5118059	ForStatement	for ( i = 0 ; i < num_comps ; i ++ )		5117100	22					
ANR	5118060	ForInit	i = 0 ;	1153:9:44467:44472	5117100	0	True				
ANR	5118061	AssignmentExpression	i = 0		5117100	0		=			
ANR	5118062	Identifier	i		5117100	0					
ANR	5118063	PrimaryExpression	0		5117100	1					
ANR	5118064	Condition	i < num_comps	1153:16:44474:44486	5117100	1	True				
ANR	5118065	RelationalExpression	i < num_comps		5117100	0		<			
ANR	5118066	Identifier	i		5117100	0					
ANR	5118067	Identifier	num_comps		5117100	1					
ANR	5118068	PostIncDecOperationExpression	i ++	1153:31:44489:44491	5117100	2	True				
ANR	5118069	Identifier	i		5117100	0					
ANR	5118070	IncDec	++		5117100	1					
ANR	5118071	CompoundStatement		214:8:8897:8944	5117100	3					
ANR	5118072	IdentifierDeclStatement	gx_ht_order_component * pcomp = & dht . components [ i ] ;	1154:8:44504:44554	5117100	0	True				
ANR	5118073	IdentifierDecl	* pcomp = & dht . components [ i ]		5117100	0					
ANR	5118074	IdentifierDeclType	gx_ht_order_component *		5117100	0					
ANR	5118075	Identifier	pcomp		5117100	1					
ANR	5118076	AssignmentExpression	* pcomp = & dht . components [ i ]		5117100	2		=			
ANR	5118077	Identifier	pcomp		5117100	0					
ANR	5118078	UnaryOperationExpression	& dht . components [ i ]		5117100	1					
ANR	5118079	UnaryOperator	&		5117100	0					
ANR	5118080	ArrayIndexing	dht . components [ i ]		5117100	1					
ANR	5118081	MemberAccess	dht . components		5117100	0					
ANR	5118082	Identifier	dht		5117100	0					
ANR	5118083	Identifier	components		5117100	1					
ANR	5118084	Identifier	i		5117100	1					
ANR	5118085	IdentifierDeclStatement	gx_ht_order * porder = & pcomp -> corder ;	1155:8:44564:44611	5117100	1	True				
ANR	5118086	IdentifierDecl	* porder = & pcomp -> corder		5117100	0					
ANR	5118087	IdentifierDeclType	gx_ht_order *		5117100	0					
ANR	5118088	Identifier	porder		5117100	1					
ANR	5118089	AssignmentExpression	* porder = & pcomp -> corder		5117100	2		=			
ANR	5118090	Identifier	porder		5117100	0					
ANR	5118091	UnaryOperationExpression	& pcomp -> corder		5117100	1					
ANR	5118092	UnaryOperator	&		5117100	0					
ANR	5118093	PtrMemberAccess	pcomp -> corder		5117100	1					
ANR	5118094	Identifier	pcomp		5117100	0					
ANR	5118095	Identifier	corder		5117100	1					
ANR	5118096	IfStatement	if ( pcomp -> comp_number == - 1 )		5117100	2					
ANR	5118097	Condition	pcomp -> comp_number == - 1	1157:12:44626:44649	5117100	0	True				
ANR	5118098	EqualityExpression	pcomp -> comp_number == - 1		5117100	0		==			
ANR	5118099	PtrMemberAccess	pcomp -> comp_number		5117100	0					
ANR	5118100	Identifier	pcomp		5117100	0					
ANR	5118101	Identifier	comp_number		5117100	1					
ANR	5118102	UnaryOperationExpression	- 1		5117100	1					
ANR	5118103	UnaryOperator	-		5117100	0					
ANR	5118104	PrimaryExpression	1		5117100	1					
ANR	5118105	CompoundStatement		216:38:8985:8985	5117100	1					
ANR	5118106	ExpressionStatement	"gx_ht_order_release ( porder , pgs -> memory , true )"	1158:12:44666:44712	5117100	0	True				
ANR	5118107	CallExpression	"gx_ht_order_release ( porder , pgs -> memory , true )"		5117100	0					
ANR	5118108	Callee	gx_ht_order_release		5117100	0					
ANR	5118109	Identifier	gx_ht_order_release		5117100	0					
ANR	5118110	ArgumentList	porder		5117100	1					
ANR	5118111	Argument	porder		5117100	0					
ANR	5118112	Identifier	porder		5117100	0					
ANR	5118113	Argument	pgs -> memory		5117100	1					
ANR	5118114	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5118115	Identifier	pgs		5117100	0					
ANR	5118116	Identifier	memory		5117100	1					
ANR	5118117	Argument	true		5117100	2					
ANR	5118118	Identifier	true		5117100	0					
ANR	5118119	ElseStatement	else		5117100	0					
ANR	5118120	IfStatement	if ( porder -> cache != NULL )		5117100	0					
ANR	5118121	Condition	porder -> cache != NULL	1160:17:44741:44761	5117100	0	True				
ANR	5118122	EqualityExpression	porder -> cache != NULL		5117100	0		!=			
ANR	5118123	PtrMemberAccess	porder -> cache		5117100	0					
ANR	5118124	Identifier	porder		5117100	0					
ANR	5118125	Identifier	cache		5117100	1					
ANR	5118126	Identifier	NULL		5117100	1					
ANR	5118127	CompoundStatement		219:40:9097:9097	5117100	1					
ANR	5118128	ExpressionStatement	"gx_ht_free_cache ( pgs -> memory , porder -> cache )"	1161:12:44778:44822	5117100	0	True				
ANR	5118129	CallExpression	"gx_ht_free_cache ( pgs -> memory , porder -> cache )"		5117100	0					
ANR	5118130	Callee	gx_ht_free_cache		5117100	0					
ANR	5118131	Identifier	gx_ht_free_cache		5117100	0					
ANR	5118132	ArgumentList	pgs -> memory		5117100	1					
ANR	5118133	Argument	pgs -> memory		5117100	0					
ANR	5118134	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5118135	Identifier	pgs		5117100	0					
ANR	5118136	Identifier	memory		5117100	1					
ANR	5118137	Argument	porder -> cache		5117100	1					
ANR	5118138	PtrMemberAccess	porder -> cache		5117100	0					
ANR	5118139	Identifier	porder		5117100	0					
ANR	5118140	Identifier	cache		5117100	1					
ANR	5118141	ExpressionStatement	porder -> cache = NULL	1162:12:44836:44856	5117100	1	True				
ANR	5118142	AssignmentExpression	porder -> cache = NULL		5117100	0		=			
ANR	5118143	PtrMemberAccess	porder -> cache		5117100	0					
ANR	5118144	Identifier	porder		5117100	0					
ANR	5118145	Identifier	cache		5117100	1					
ANR	5118146	Identifier	NULL		5117100	1					
ANR	5118147	ExpressionStatement	"gs_free_object ( pgs -> memory , dht . components , ""gx_gstate_dev_ht_install"" )"	1165:4:44878:44949	5117100	23	True				
ANR	5118148	CallExpression	"gs_free_object ( pgs -> memory , dht . components , ""gx_gstate_dev_ht_install"" )"		5117100	0					
ANR	5118149	Callee	gs_free_object		5117100	0					
ANR	5118150	Identifier	gs_free_object		5117100	0					
ANR	5118151	ArgumentList	pgs -> memory		5117100	1					
ANR	5118152	Argument	pgs -> memory		5117100	0					
ANR	5118153	PtrMemberAccess	pgs -> memory		5117100	0					
ANR	5118154	Identifier	pgs		5117100	0					
ANR	5118155	Identifier	memory		5117100	1					
ANR	5118156	Argument	dht . components		5117100	1					
ANR	5118157	MemberAccess	dht . components		5117100	0					
ANR	5118158	Identifier	dht		5117100	0					
ANR	5118159	Identifier	components		5117100	1					
ANR	5118160	Argument	"""gx_gstate_dev_ht_install"""		5117100	2					
ANR	5118161	PrimaryExpression	"""gx_gstate_dev_ht_install"""		5117100	0					
ANR	5118162	ReturnStatement	return code ;	1167:4:44956:44967	5117100	24	True				
ANR	5118163	Identifier	code		5117100	0					
ANR	5118164	ReturnType	int		5117100	1					
ANR	5118165	Identifier	gx_gstate_dev_ht_install		5117100	2					
ANR	5118166	ParameterList	"gs_gstate * pgs , gx_device_halftone * pdht , gs_halftone_type type , const gx_device * dev"		5117100	3					
ANR	5118167	Parameter	gs_gstate * pgs	938:4:35541:35561	5117100	0	True				
ANR	5118168	ParameterType	gs_gstate *		5117100	0					
ANR	5118169	Identifier	pgs		5117100	1					
ANR	5118170	Parameter	gx_device_halftone * pdht	939:4:35568:35595	5117100	1	True				
ANR	5118171	ParameterType	gx_device_halftone *		5117100	0					
ANR	5118172	Identifier	pdht		5117100	1					
ANR	5118173	Parameter	gs_halftone_type type	940:4:35602:35629	5117100	2	True				
ANR	5118174	ParameterType	gs_halftone_type		5117100	0					
ANR	5118175	Identifier	type		5117100	1					
ANR	5118176	Parameter	const gx_device * dev	941:4:35636:35662	5117100	3	True				
ANR	5118177	ParameterType	const gx_device *		5117100	0					
ANR	5118178	Identifier	dev		5117100	1					
ANR	5118179	CFGEntryNode	ENTRY		5117100		True				
ANR	5118180	CFGExitNode	EXIT		5117100		True				
ANR	5118181	Symbol	pgsdht -> rc		5117100						
ANR	5118182	Symbol	dh		5117100						
ANR	5118183	Symbol	num_tiles		5117100						
ANR	5118184	Symbol	dht . lcm_width		5117100						
ANR	5118185	Symbol	* pgs		5117100						
ANR	5118186	Symbol	pdht -> order		5117100						
ANR	5118187	Symbol	& dht . components [ i ] . corder		5117100						
ANR	5118188	Symbol	porder -> width		5117100						
ANR	5118189	Symbol	gx_ht_copy_ht_order		5117100						
ANR	5118190	Symbol	type		5117100						
ANR	5118191	Symbol	gs_next_ids		5117100						
ANR	5118192	Symbol	pgsdht -> rc . memory		5117100						
ANR	5118193	Symbol	p_s_comp		5117100						
ANR	5118194	Symbol	& p_s_comp -> corder		5117100						
ANR	5118195	Symbol	pdht -> num_dev_comp		5117100						
ANR	5118196	Symbol	dw		5117100						
ANR	5118197	Symbol	dev		5117100						
ANR	5118198	Symbol	* pdht		5117100						
ANR	5118199	Symbol	p_s_comp -> comp_number		5117100						
ANR	5118200	Symbol	pgsdht		5117100						
ANR	5118201	Symbol	porder -> full_height		5117100						
ANR	5118202	Symbol	dht . num_comp		5117100						
ANR	5118203	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		5117100						
ANR	5118204	Symbol	gs_alloc_struct_array		5117100						
ANR	5118205	Symbol	dht . num_dev_comp		5117100						
ANR	5118206	Symbol	rep_count		5117100						
ANR	5118207	Symbol	NULL		5117100						
ANR	5118208	Symbol	porder -> cache		5117100						
ANR	5118209	Symbol	* dht		5117100						
ANR	5118210	Symbol	porder -> height		5117100						
ANR	5118211	Symbol	gx_ht_alloc_cache		5117100						
ANR	5118212	Symbol	pcomp		5117100						
ANR	5118213	Symbol	dht . components		5117100						
ANR	5118214	Symbol	& dht . components [ comp_num ] . corder		5117100						
ANR	5118215	Symbol	slots_wanted		5117100						
ANR	5118216	Symbol	pcache		5117100						
ANR	5118217	Symbol	porder		5117100						
ANR	5118218	Symbol	mem_diff		5117100						
ANR	5118219	Symbol	p_s_order -> bit_data		5117100						
ANR	5118220	Symbol	* pcomp		5117100						
ANR	5118221	Symbol	dht . order		5117100						
ANR	5118222	Symbol	* p_s_order		5117100						
ANR	5118223	Symbol	pdht		5117100						
ANR	5118224	Symbol	dht . id		5117100						
ANR	5118225	Symbol	pdht -> num_comp		5117100						
ANR	5118226	Symbol	dht . components [ comp_num ] . comp_number		5117100						
ANR	5118227	Symbol	true		5117100						
ANR	5118228	Symbol	align_bitmap_mod		5117100						
ANR	5118229	Symbol	p_d_order		5117100						
ANR	5118230	Symbol	pgsdht -> rc . ref_count		5117100						
ANR	5118231	Symbol	pdht -> rc		5117100						
ANR	5118232	Symbol	pdht -> rc . memory		5117100						
ANR	5118233	Symbol	* porder		5117100						
ANR	5118234	Symbol	& pdht -> order		5117100						
ANR	5118235	Symbol	max_int		5117100						
ANR	5118236	Symbol	& pcomp -> corder		5117100						
ANR	5118237	Symbol	code		5117100						
ANR	5118238	Symbol	lcm_width		5117100						
ANR	5118239	Symbol	gx_ht_cache_default_bits_size		5117100						
ANR	5118240	Symbol	lcm_height		5117100						
ANR	5118241	Symbol	pdht -> components		5117100						
ANR	5118242	Symbol	porder -> num_bits		5117100						
ANR	5118243	Symbol	igcd		5117100						
ANR	5118244	Symbol	& dht		5117100						
ANR	5118245	Symbol	* dht . components		5117100						
ANR	5118246	Symbol	* comp_num		5117100						
ANR	5118247	Symbol	num_comps		5117100						
ANR	5118248	Symbol	dht . type		5117100						
ANR	5118249	Symbol	pgs		5117100						
ANR	5118250	Symbol	pgs -> memory		5117100						
ANR	5118251	Symbol	pcomp -> comp_number		5117100						
ANR	5118252	Symbol	rep_raster		5117100						
ANR	5118253	Symbol	porder -> raster		5117100						
ANR	5118254	Symbol	pdht -> order . bit_data		5117100						
ANR	5118255	Symbol	false		5117100						
ANR	5118256	Symbol	h		5117100						
ANR	5118257	Symbol	i		5117100						
ANR	5118258	Symbol	p_s_order		5117100						
ANR	5118259	Symbol	comp_num		5117100						
ANR	5118260	Symbol	dht . lcm_height		5117100						
ANR	5118261	Symbol	dht		5117100						
ANR	5118262	Symbol	gs_error_VMerror		5117100						
ANR	5118263	Symbol	dht . components [ i ] . comp_number		5117100						
ANR	5118264	Symbol	* pgsdht		5117100						
ANR	5118265	Symbol	* i		5117100						
ANR	5118266	Symbol	& dht . order		5117100						
ANR	5118267	Symbol	* p_s_comp		5117100						
ANR	5118268	Symbol	gx_ht_order_component		5117100						
ANR	5118269	Symbol	input_ncomps		5117100						
ANR	5118270	Symbol	w		5117100						
ANR	5118271	Symbol	pgs -> dev_ht		5117100						
ANR	5118272	Symbol	used_default		5117100						
ANR	5118273	Symbol	& st_ht_order_component_element		5117100						
ANR	5118274	Symbol	tile_bytes		5117100						
ANR	5118275	Symbol	tmp_rc		5117100						
ANR	5118276	Function	gx_ht_install	1175:0:45155:46466							
ANR	5118277	FunctionDef	"gx_ht_install (gs_gstate * pgs , const gs_halftone * pht , gx_device_halftone * pdht)"		5118276	0					
ANR	5118278	CompoundStatement		1178:0:45256:46466	5118276	0					
ANR	5118279	IdentifierDeclStatement	gs_memory_t * mem = pht -> rc . memory ;	1179:4:45262:45295	5118276	0	True				
ANR	5118280	IdentifierDecl	* mem = pht -> rc . memory		5118276	0					
ANR	5118281	IdentifierDeclType	gs_memory_t *		5118276	0					
ANR	5118282	Identifier	mem		5118276	1					
ANR	5118283	AssignmentExpression	* mem = pht -> rc . memory		5118276	2		=			
ANR	5118284	Identifier	mem		5118276	0					
ANR	5118285	MemberAccess	pht -> rc . memory		5118276	1					
ANR	5118286	PtrMemberAccess	pht -> rc		5118276	0					
ANR	5118287	Identifier	pht		5118276	0					
ANR	5118288	Identifier	rc		5118276	1					
ANR	5118289	Identifier	memory		5118276	1					
ANR	5118290	IdentifierDeclStatement	gs_halftone * old_ht = pgs -> halftone ;	1180:4:45301:45336	5118276	1	True				
ANR	5118291	IdentifierDecl	* old_ht = pgs -> halftone		5118276	0					
ANR	5118292	IdentifierDeclType	gs_halftone *		5118276	0					
ANR	5118293	Identifier	old_ht		5118276	1					
ANR	5118294	AssignmentExpression	* old_ht = pgs -> halftone		5118276	2		=			
ANR	5118295	Identifier	old_ht		5118276	0					
ANR	5118296	PtrMemberAccess	pgs -> halftone		5118276	1					
ANR	5118297	Identifier	pgs		5118276	0					
ANR	5118298	Identifier	halftone		5118276	1					
ANR	5118299	IdentifierDeclStatement	gs_halftone * new_ht ;	1181:4:45342:45361	5118276	2	True				
ANR	5118300	IdentifierDecl	* new_ht		5118276	0					
ANR	5118301	IdentifierDeclType	gs_halftone *		5118276	0					
ANR	5118302	Identifier	new_ht		5118276	1					
ANR	5118303	IdentifierDeclStatement	int code ;	1182:4:45367:45375	5118276	3	True				
ANR	5118304	IdentifierDecl	code		5118276	0					
ANR	5118305	IdentifierDeclType	int		5118276	0					
ANR	5118306	Identifier	code		5118276	1					
ANR	5118307	ExpressionStatement	pdht -> num_dev_comp = pgs -> device -> color_info . num_components	1184:4:45382:45441	5118276	4	True				
ANR	5118308	AssignmentExpression	pdht -> num_dev_comp = pgs -> device -> color_info . num_components		5118276	0		=			
ANR	5118309	PtrMemberAccess	pdht -> num_dev_comp		5118276	0					
ANR	5118310	Identifier	pdht		5118276	0					
ANR	5118311	Identifier	num_dev_comp		5118276	1					
ANR	5118312	MemberAccess	pgs -> device -> color_info . num_components		5118276	1					
ANR	5118313	PtrMemberAccess	pgs -> device -> color_info		5118276	0					
ANR	5118314	PtrMemberAccess	pgs -> device		5118276	0					
ANR	5118315	Identifier	pgs		5118276	0					
ANR	5118316	Identifier	device		5118276	1					
ANR	5118317	Identifier	color_info		5118276	1					
ANR	5118318	Identifier	num_components		5118276	1					
ANR	5118319	IfStatement	if ( old_ht != 0 && old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1 )		5118276	5					
ANR	5118320	Condition	old_ht != 0 && old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1	1185:8:45451:45526	5118276	0	True				
ANR	5118321	AndExpression	old_ht != 0 && old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1		5118276	0		&&			
ANR	5118322	EqualityExpression	old_ht != 0		5118276	0		!=			
ANR	5118323	Identifier	old_ht		5118276	0					
ANR	5118324	PrimaryExpression	0		5118276	1					
ANR	5118325	AndExpression	old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1		5118276	1		&&			
ANR	5118326	EqualityExpression	old_ht -> rc . memory == mem		5118276	0		==			
ANR	5118327	MemberAccess	old_ht -> rc . memory		5118276	0					
ANR	5118328	PtrMemberAccess	old_ht -> rc		5118276	0					
ANR	5118329	Identifier	old_ht		5118276	0					
ANR	5118330	Identifier	rc		5118276	1					
ANR	5118331	Identifier	memory		5118276	1					
ANR	5118332	Identifier	mem		5118276	1					
ANR	5118333	EqualityExpression	old_ht -> rc . ref_count == 1		5118276	1		==			
ANR	5118334	MemberAccess	old_ht -> rc . ref_count		5118276	0					
ANR	5118335	PtrMemberAccess	old_ht -> rc		5118276	0					
ANR	5118336	Identifier	old_ht		5118276	0					
ANR	5118337	Identifier	rc		5118276	1					
ANR	5118338	Identifier	ref_count		5118276	1					
ANR	5118339	PrimaryExpression	1		5118276	1					
ANR	5118340	ExpressionStatement	new_ht = old_ht	1188:8:45546:45561	5118276	1	True				
ANR	5118341	AssignmentExpression	new_ht = old_ht		5118276	0		=			
ANR	5118342	Identifier	new_ht		5118276	0					
ANR	5118343	Identifier	old_ht		5118276	1					
ANR	5118344	ElseStatement	else		5118276	0					
ANR	5118345	ExpressionStatement	"rc_alloc_struct_1 ( new_ht , gs_halftone , & st_halftone , mem , return_error ( gs_error_VMerror ) , ""gx_ht_install(new halftone)"" )"	1190:8:45580:45752	5118276	0	True				
ANR	5118346	CallExpression	"rc_alloc_struct_1 ( new_ht , gs_halftone , & st_halftone , mem , return_error ( gs_error_VMerror ) , ""gx_ht_install(new halftone)"" )"		5118276	0					
ANR	5118347	Callee	rc_alloc_struct_1		5118276	0					
ANR	5118348	Identifier	rc_alloc_struct_1		5118276	0					
ANR	5118349	ArgumentList	new_ht		5118276	1					
ANR	5118350	Argument	new_ht		5118276	0					
ANR	5118351	Identifier	new_ht		5118276	0					
ANR	5118352	Argument	gs_halftone		5118276	1					
ANR	5118353	Identifier	gs_halftone		5118276	0					
ANR	5118354	Argument	& st_halftone		5118276	2					
ANR	5118355	UnaryOperationExpression	& st_halftone		5118276	0					
ANR	5118356	UnaryOperator	&		5118276	0					
ANR	5118357	Identifier	st_halftone		5118276	1					
ANR	5118358	Argument	mem		5118276	3					
ANR	5118359	Identifier	mem		5118276	0					
ANR	5118360	Argument	return_error ( gs_error_VMerror )		5118276	4					
ANR	5118361	CallExpression	return_error ( gs_error_VMerror )		5118276	0					
ANR	5118362	Callee	return_error		5118276	0					
ANR	5118363	Identifier	return_error		5118276	0					
ANR	5118364	ArgumentList	gs_error_VMerror		5118276	1					
ANR	5118365	Argument	gs_error_VMerror		5118276	0					
ANR	5118366	Identifier	gs_error_VMerror		5118276	0					
ANR	5118367	Argument	"""gx_ht_install(new halftone)"""		5118276	5					
ANR	5118368	PrimaryExpression	"""gx_ht_install(new halftone)"""		5118276	0					
ANR	5118369	ExpressionStatement	"code = gx_gstate_dev_ht_install ( pgs , pdht , pht -> type , gs_currentdevice_inline ( pgs ) )"	1193:4:45758:45870	5118276	6	True				
ANR	5118370	AssignmentExpression	"code = gx_gstate_dev_ht_install ( pgs , pdht , pht -> type , gs_currentdevice_inline ( pgs ) )"		5118276	0		=			
ANR	5118371	Identifier	code		5118276	0					
ANR	5118372	CallExpression	"gx_gstate_dev_ht_install ( pgs , pdht , pht -> type , gs_currentdevice_inline ( pgs ) )"		5118276	1					
ANR	5118373	Callee	gx_gstate_dev_ht_install		5118276	0					
ANR	5118374	Identifier	gx_gstate_dev_ht_install		5118276	0					
ANR	5118375	ArgumentList	pgs		5118276	1					
ANR	5118376	Argument	pgs		5118276	0					
ANR	5118377	Identifier	pgs		5118276	0					
ANR	5118378	Argument	pdht		5118276	1					
ANR	5118379	Identifier	pdht		5118276	0					
ANR	5118380	Argument	pht -> type		5118276	2					
ANR	5118381	PtrMemberAccess	pht -> type		5118276	0					
ANR	5118382	Identifier	pht		5118276	0					
ANR	5118383	Identifier	type		5118276	1					
ANR	5118384	Argument	gs_currentdevice_inline ( pgs )		5118276	3					
ANR	5118385	CallExpression	gs_currentdevice_inline ( pgs )		5118276	0					
ANR	5118386	Callee	gs_currentdevice_inline		5118276	0					
ANR	5118387	Identifier	gs_currentdevice_inline		5118276	0					
ANR	5118388	ArgumentList	pgs		5118276	1					
ANR	5118389	Argument	pgs		5118276	0					
ANR	5118390	Identifier	pgs		5118276	0					
ANR	5118391	IfStatement	if ( code < 0 )		5118276	7					
ANR	5118392	Condition	code < 0	1195:8:45880:45887	5118276	0	True				
ANR	5118393	RelationalExpression	code < 0		5118276	0		<			
ANR	5118394	Identifier	code		5118276	0					
ANR	5118395	PrimaryExpression	0		5118276	1					
ANR	5118396	CompoundStatement		18:18:633:633	5118276	1					
ANR	5118397	IfStatement	if ( new_ht != old_ht )		5118276	0					
ANR	5118398	Condition	new_ht != old_ht	1196:12:45904:45919	5118276	0	True				
ANR	5118399	EqualityExpression	new_ht != old_ht		5118276	0		!=			
ANR	5118400	Identifier	new_ht		5118276	0					
ANR	5118401	Identifier	old_ht		5118276	1					
ANR	5118402	ExpressionStatement	"gs_free_object ( mem , new_ht , ""gx_ht_install(new halftone)"" )"	1197:12:45934:45992	5118276	1	True				
ANR	5118403	CallExpression	"gs_free_object ( mem , new_ht , ""gx_ht_install(new halftone)"" )"		5118276	0					
ANR	5118404	Callee	gs_free_object		5118276	0					
ANR	5118405	Identifier	gs_free_object		5118276	0					
ANR	5118406	ArgumentList	mem		5118276	1					
ANR	5118407	Argument	mem		5118276	0					
ANR	5118408	Identifier	mem		5118276	0					
ANR	5118409	Argument	new_ht		5118276	1					
ANR	5118410	Identifier	new_ht		5118276	0					
ANR	5118411	Argument	"""gx_ht_install(new halftone)"""		5118276	2					
ANR	5118412	PrimaryExpression	"""gx_ht_install(new halftone)"""		5118276	0					
ANR	5118413	ReturnStatement	return code ;	1198:8:46002:46013	5118276	1	True				
ANR	5118414	Identifier	code		5118276	0					
ANR	5118415	ExpressionStatement	"gx_device_halftone_release ( pdht , pdht -> rc . memory )"	1205:4:46141:46190	5118276	8	True				
ANR	5118416	CallExpression	"gx_device_halftone_release ( pdht , pdht -> rc . memory )"		5118276	0					
ANR	5118417	Callee	gx_device_halftone_release		5118276	0					
ANR	5118418	Identifier	gx_device_halftone_release		5118276	0					
ANR	5118419	ArgumentList	pdht		5118276	1					
ANR	5118420	Argument	pdht		5118276	0					
ANR	5118421	Identifier	pdht		5118276	0					
ANR	5118422	Argument	pdht -> rc . memory		5118276	1					
ANR	5118423	MemberAccess	pdht -> rc . memory		5118276	0					
ANR	5118424	PtrMemberAccess	pdht -> rc		5118276	0					
ANR	5118425	Identifier	pdht		5118276	0					
ANR	5118426	Identifier	rc		5118276	1					
ANR	5118427	Identifier	memory		5118276	1					
ANR	5118428	IfStatement	if ( new_ht != old_ht )		5118276	9					
ANR	5118429	Condition	new_ht != old_ht	1207:8:46201:46216	5118276	0	True				
ANR	5118430	EqualityExpression	new_ht != old_ht		5118276	0		!=			
ANR	5118431	Identifier	new_ht		5118276	0					
ANR	5118432	Identifier	old_ht		5118276	1					
ANR	5118433	ExpressionStatement	"rc_decrement ( old_ht , ""gx_ht_install(old halftone)"" )"	1208:8:46227:46278	5118276	1	True				
ANR	5118434	CallExpression	"rc_decrement ( old_ht , ""gx_ht_install(old halftone)"" )"		5118276	0					
ANR	5118435	Callee	rc_decrement		5118276	0					
ANR	5118436	Identifier	rc_decrement		5118276	0					
ANR	5118437	ArgumentList	old_ht		5118276	1					
ANR	5118438	Argument	old_ht		5118276	0					
ANR	5118439	Identifier	old_ht		5118276	0					
ANR	5118440	Argument	"""gx_ht_install(old halftone)"""		5118276	1					
ANR	5118441	PrimaryExpression	"""gx_ht_install(old halftone)"""		5118276	0					
ANR	5118442	CompoundStatement		33:8:1037:1049	5118276	10					
ANR	5118443	IdentifierDeclStatement	rc_header rc ;	1210:8:46294:46306	5118276	0	True				
ANR	5118444	IdentifierDecl	rc		5118276	0					
ANR	5118445	IdentifierDeclType	rc_header		5118276	0					
ANR	5118446	Identifier	rc		5118276	1					
ANR	5118447	ExpressionStatement	rc = new_ht -> rc	1212:8:46317:46332	5118276	1	True				
ANR	5118448	AssignmentExpression	rc = new_ht -> rc		5118276	0		=			
ANR	5118449	Identifier	rc		5118276	0					
ANR	5118450	PtrMemberAccess	new_ht -> rc		5118276	1					
ANR	5118451	Identifier	new_ht		5118276	0					
ANR	5118452	Identifier	rc		5118276	1					
ANR	5118453	ExpressionStatement	* new_ht = * pht	1213:8:46342:46356	5118276	2	True				
ANR	5118454	AssignmentExpression	* new_ht = * pht		5118276	0		=			
ANR	5118455	UnaryOperationExpression	* new_ht		5118276	0					
ANR	5118456	UnaryOperator	*		5118276	0					
ANR	5118457	Identifier	new_ht		5118276	1					
ANR	5118458	UnaryOperationExpression	* pht		5118276	1					
ANR	5118459	UnaryOperator	*		5118276	0					
ANR	5118460	Identifier	pht		5118276	1					
ANR	5118461	ExpressionStatement	new_ht -> rc = rc	1214:8:46366:46381	5118276	3	True				
ANR	5118462	AssignmentExpression	new_ht -> rc = rc		5118276	0		=			
ANR	5118463	PtrMemberAccess	new_ht -> rc		5118276	0					
ANR	5118464	Identifier	new_ht		5118276	0					
ANR	5118465	Identifier	rc		5118276	1					
ANR	5118466	Identifier	rc		5118276	1					
ANR	5118467	ExpressionStatement	pgs -> halftone = new_ht	1216:4:46393:46415	5118276	11	True				
ANR	5118468	AssignmentExpression	pgs -> halftone = new_ht		5118276	0		=			
ANR	5118469	PtrMemberAccess	pgs -> halftone		5118276	0					
ANR	5118470	Identifier	pgs		5118276	0					
ANR	5118471	Identifier	halftone		5118276	1					
ANR	5118472	Identifier	new_ht		5118276	1					
ANR	5118473	ExpressionStatement	gx_unset_both_dev_colors ( pgs )	1217:4:46421:46450	5118276	12	True				
ANR	5118474	CallExpression	gx_unset_both_dev_colors ( pgs )		5118276	0					
ANR	5118475	Callee	gx_unset_both_dev_colors		5118276	0					
ANR	5118476	Identifier	gx_unset_both_dev_colors		5118276	0					
ANR	5118477	ArgumentList	pgs		5118276	1					
ANR	5118478	Argument	pgs		5118276	0					
ANR	5118479	Identifier	pgs		5118276	0					
ANR	5118480	ReturnStatement	return 0 ;	1218:4:46456:46464	5118276	13	True				
ANR	5118481	PrimaryExpression	0		5118276	0					
ANR	5118482	ReturnType	int		5118276	1					
ANR	5118483	Identifier	gx_ht_install		5118276	2					
ANR	5118484	ParameterList	"gs_gstate * pgs , const gs_halftone * pht , gx_device_halftone * pdht"		5118276	3					
ANR	5118485	Parameter	gs_gstate * pgs	1176:14:45173:45187	5118276	0	True				
ANR	5118486	ParameterType	gs_gstate *		5118276	0					
ANR	5118487	Identifier	pgs		5118276	1					
ANR	5118488	Parameter	const gs_halftone * pht	1176:31:45190:45212	5118276	1	True				
ANR	5118489	ParameterType	const gs_halftone *		5118276	0					
ANR	5118490	Identifier	pht		5118276	1					
ANR	5118491	Parameter	gx_device_halftone * pdht	1177:14:45229:45253	5118276	2	True				
ANR	5118492	ParameterType	gx_device_halftone *		5118276	0					
ANR	5118493	Identifier	pdht		5118276	1					
ANR	5118494	CFGEntryNode	ENTRY		5118276		True				
ANR	5118495	CFGExitNode	EXIT		5118276		True				
ANR	5118496	Symbol	return_error		5118276						
ANR	5118497	Symbol	code		5118276						
ANR	5118498	Symbol	old_ht -> rc . memory		5118276						
ANR	5118499	Symbol	* pgs		5118276						
ANR	5118500	Symbol	pgs -> device -> color_info		5118276						
ANR	5118501	Symbol	old_ht -> rc . ref_count		5118276						
ANR	5118502	Symbol	gx_gstate_dev_ht_install		5118276						
ANR	5118503	Symbol	old_ht -> rc		5118276						
ANR	5118504	Symbol	pdht -> num_dev_comp		5118276						
ANR	5118505	Symbol	mem		5118276						
ANR	5118506	Symbol	* pdht		5118276						
ANR	5118507	Symbol	gs_currentdevice_inline		5118276						
ANR	5118508	Symbol	pgs -> device		5118276						
ANR	5118509	Symbol	* pgs -> device		5118276						
ANR	5118510	Symbol	* old_ht		5118276						
ANR	5118511	Symbol	pgs -> halftone		5118276						
ANR	5118512	Symbol	pgs		5118276						
ANR	5118513	Symbol	pht -> rc . memory		5118276						
ANR	5118514	Symbol	gs_halftone		5118276						
ANR	5118515	Symbol	* pht		5118276						
ANR	5118516	Symbol	pgs -> device -> color_info . num_components		5118276						
ANR	5118517	Symbol	old_ht		5118276						
ANR	5118518	Symbol	& st_halftone		5118276						
ANR	5118519	Symbol	pht -> type		5118276						
ANR	5118520	Symbol	new_ht		5118276						
ANR	5118521	Symbol	* * pgs		5118276						
ANR	5118522	Symbol	gs_error_VMerror		5118276						
ANR	5118523	Symbol	rc		5118276						
ANR	5118524	Symbol	pht -> rc		5118276						
ANR	5118525	Symbol	pdht		5118276						
ANR	5118526	Symbol	* new_ht		5118276						
ANR	5118527	Symbol	pdht -> rc		5118276						
ANR	5118528	Symbol	pdht -> rc . memory		5118276						
ANR	5118529	Symbol	new_ht -> rc		5118276						
ANR	5118530	Symbol	pht		5118276						
ANR	5118531	Function	gx_gstate_set_effective_xfer	1230:0:46849:50041							
ANR	5118532	FunctionDef	gx_gstate_set_effective_xfer (gs_gstate * pgs)		5118531	0					
ANR	5118533	CompoundStatement		1232:0:46900:50041	5118531	0					
ANR	5118534	IdentifierDeclStatement	gx_device_halftone * pdht = pgs -> dev_ht ;	1233:4:46906:46944	5118531	0	True				
ANR	5118535	IdentifierDecl	* pdht = pgs -> dev_ht		5118531	0					
ANR	5118536	IdentifierDeclType	gx_device_halftone *		5118531	0					
ANR	5118537	Identifier	pdht		5118531	1					
ANR	5118538	AssignmentExpression	* pdht = pgs -> dev_ht		5118531	2		=			
ANR	5118539	Identifier	pdht		5118531	0					
ANR	5118540	PtrMemberAccess	pgs -> dev_ht		5118531	1					
ANR	5118541	Identifier	pgs		5118531	0					
ANR	5118542	Identifier	dev_ht		5118531	1					
ANR	5118543	IdentifierDeclStatement	gx_transfer_map * pmap ;	1234:4:46950:46971	5118531	1	True				
ANR	5118544	IdentifierDecl	* pmap		5118531	0					
ANR	5118545	IdentifierDeclType	gx_transfer_map *		5118531	0					
ANR	5118546	Identifier	pmap		5118531	1					
ANR	5118547	IdentifierDeclStatement	gx_ht_order * porder ;	1235:4:46977:46996	5118531	2	True				
ANR	5118548	IdentifierDecl	* porder		5118531	0					
ANR	5118549	IdentifierDeclType	gx_ht_order *		5118531	0					
ANR	5118550	Identifier	porder		5118531	1					
ANR	5118551	IdentifierDeclStatement	"int i , component_num , non_id_count ;"	1236:4:47002:47036	5118531	3	True				
ANR	5118552	IdentifierDecl	i		5118531	0					
ANR	5118553	IdentifierDeclType	int		5118531	0					
ANR	5118554	Identifier	i		5118531	1					
ANR	5118555	IdentifierDecl	component_num		5118531	1					
ANR	5118556	IdentifierDeclType	int		5118531	0					
ANR	5118557	Identifier	component_num		5118531	1					
ANR	5118558	IdentifierDecl	non_id_count		5118531	2					
ANR	5118559	IdentifierDeclType	int		5118531	0					
ANR	5118560	Identifier	non_id_count		5118531	1					
ANR	5118561	ExpressionStatement	non_id_count = ( pgs -> set_transfer . gray -> proc == & gs_identity_transfer ) ? 0 : GX_DEVICE_COLOR_MAX_COMPONENTS	1238:4:47043:47150	5118531	4	True				
ANR	5118562	AssignmentExpression	non_id_count = ( pgs -> set_transfer . gray -> proc == & gs_identity_transfer ) ? 0 : GX_DEVICE_COLOR_MAX_COMPONENTS		5118531	0		=			
ANR	5118563	Identifier	non_id_count		5118531	0					
ANR	5118564	ConditionalExpression	( pgs -> set_transfer . gray -> proc == & gs_identity_transfer ) ? 0 : GX_DEVICE_COLOR_MAX_COMPONENTS		5118531	1					
ANR	5118565	Condition	pgs -> set_transfer . gray -> proc == & gs_identity_transfer		5118531	0					
ANR	5118566	EqualityExpression	pgs -> set_transfer . gray -> proc == & gs_identity_transfer		5118531	0		==			
ANR	5118567	PtrMemberAccess	pgs -> set_transfer . gray -> proc		5118531	0					
ANR	5118568	MemberAccess	pgs -> set_transfer . gray		5118531	0					
ANR	5118569	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118570	Identifier	pgs		5118531	0					
ANR	5118571	Identifier	set_transfer		5118531	1					
ANR	5118572	Identifier	gray		5118531	1					
ANR	5118573	Identifier	proc		5118531	1					
ANR	5118574	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118575	UnaryOperator	&		5118531	0					
ANR	5118576	Identifier	gs_identity_transfer		5118531	1					
ANR	5118577	PrimaryExpression	0		5118531	1					
ANR	5118578	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5118531	2					
ANR	5118579	ForStatement	for ( i = 0 ; i < GX_DEVICE_COLOR_MAX_COMPONENTS ; i ++ )		5118531	5					
ANR	5118580	ForInit	i = 0 ;	1239:9:47161:47166	5118531	0	True				
ANR	5118581	AssignmentExpression	i = 0		5118531	0		=			
ANR	5118582	Identifier	i		5118531	0					
ANR	5118583	PrimaryExpression	0		5118531	1					
ANR	5118584	Condition	i < GX_DEVICE_COLOR_MAX_COMPONENTS	1239:16:47168:47201	5118531	1	True				
ANR	5118585	RelationalExpression	i < GX_DEVICE_COLOR_MAX_COMPONENTS		5118531	0		<			
ANR	5118586	Identifier	i		5118531	0					
ANR	5118587	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5118531	1					
ANR	5118588	PostIncDecOperationExpression	i ++	1239:52:47204:47206	5118531	2	True				
ANR	5118589	Identifier	i		5118531	0					
ANR	5118590	IncDec	++		5118531	1					
ANR	5118591	ExpressionStatement	pgs -> effective_transfer [ i ] = pgs -> set_transfer . gray	1240:8:47217:47268	5118531	3	True				
ANR	5118592	AssignmentExpression	pgs -> effective_transfer [ i ] = pgs -> set_transfer . gray		5118531	0		=			
ANR	5118593	ArrayIndexing	pgs -> effective_transfer [ i ]		5118531	0					
ANR	5118594	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118595	Identifier	pgs		5118531	0					
ANR	5118596	Identifier	effective_transfer		5118531	1					
ANR	5118597	Identifier	i		5118531	1					
ANR	5118598	MemberAccess	pgs -> set_transfer . gray		5118531	1					
ANR	5118599	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118600	Identifier	pgs		5118531	0					
ANR	5118601	Identifier	set_transfer		5118531	1					
ANR	5118602	Identifier	gray		5118531	1					
ANR	5118603	IfStatement	if ( pgs -> set_transfer . red )		5118531	6					
ANR	5118604	Condition	pgs -> set_transfer . red	1243:8:47366:47386	5118531	0	True				
ANR	5118605	MemberAccess	pgs -> set_transfer . red		5118531	0					
ANR	5118606	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118607	Identifier	pgs		5118531	0					
ANR	5118608	Identifier	set_transfer		5118531	1					
ANR	5118609	Identifier	red		5118531	1					
ANR	5118610	CompoundStatement		12:31:488:488	5118531	1					
ANR	5118611	ExpressionStatement	component_num = pgs -> set_transfer . red_component_num	1244:8:47399:47450	5118531	0	True				
ANR	5118612	AssignmentExpression	component_num = pgs -> set_transfer . red_component_num		5118531	0		=			
ANR	5118613	Identifier	component_num		5118531	0					
ANR	5118614	MemberAccess	pgs -> set_transfer . red_component_num		5118531	1					
ANR	5118615	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118616	Identifier	pgs		5118531	0					
ANR	5118617	Identifier	set_transfer		5118531	1					
ANR	5118618	Identifier	red_component_num		5118531	1					
ANR	5118619	IfStatement	if ( component_num >= 0 )		5118531	1					
ANR	5118620	Condition	component_num >= 0	1245:12:47464:47481	5118531	0	True				
ANR	5118621	RelationalExpression	component_num >= 0		5118531	0		>=			
ANR	5118622	Identifier	component_num		5118531	0					
ANR	5118623	PrimaryExpression	0		5118531	1					
ANR	5118624	CompoundStatement		14:32:583:583	5118531	1					
ANR	5118625	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		5118531	0					
ANR	5118626	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1246:16:47502:47570	5118531	0	True				
ANR	5118627	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118628	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		5118531	0					
ANR	5118629	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118630	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118631	Identifier	pgs		5118531	0					
ANR	5118632	Identifier	effective_transfer		5118531	1					
ANR	5118633	Identifier	component_num		5118531	1					
ANR	5118634	Identifier	proc		5118531	1					
ANR	5118635	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118636	UnaryOperator	&		5118531	0					
ANR	5118637	Identifier	gs_identity_transfer		5118531	1					
ANR	5118638	ExpressionStatement	non_id_count --	1247:15:47588:47602	5118531	1	True				
ANR	5118639	PostIncDecOperationExpression	non_id_count --		5118531	0					
ANR	5118640	Identifier	non_id_count		5118531	0					
ANR	5118641	IncDec	--		5118531	1					
ANR	5118642	ExpressionStatement	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . red	1248:12:47616:47678	5118531	1	True				
ANR	5118643	AssignmentExpression	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . red		5118531	0		=			
ANR	5118644	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118645	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118646	Identifier	pgs		5118531	0					
ANR	5118647	Identifier	effective_transfer		5118531	1					
ANR	5118648	Identifier	component_num		5118531	1					
ANR	5118649	MemberAccess	pgs -> set_transfer . red		5118531	1					
ANR	5118650	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118651	Identifier	pgs		5118531	0					
ANR	5118652	Identifier	set_transfer		5118531	1					
ANR	5118653	Identifier	red		5118531	1					
ANR	5118654	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		5118531	2					
ANR	5118655	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1249:16:47696:47764	5118531	0	True				
ANR	5118656	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118657	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		5118531	0					
ANR	5118658	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118659	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118660	Identifier	pgs		5118531	0					
ANR	5118661	Identifier	effective_transfer		5118531	1					
ANR	5118662	Identifier	component_num		5118531	1					
ANR	5118663	Identifier	proc		5118531	1					
ANR	5118664	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118665	UnaryOperator	&		5118531	0					
ANR	5118666	Identifier	gs_identity_transfer		5118531	1					
ANR	5118667	ExpressionStatement	non_id_count ++	1250:15:47782:47796	5118531	1	True				
ANR	5118668	PostIncDecOperationExpression	non_id_count ++		5118531	0					
ANR	5118669	Identifier	non_id_count		5118531	0					
ANR	5118670	IncDec	++		5118531	1					
ANR	5118671	IfStatement	if ( pgs -> set_transfer . green )		5118531	7					
ANR	5118672	Condition	pgs -> set_transfer . green	1253:8:47822:47844	5118531	0	True				
ANR	5118673	MemberAccess	pgs -> set_transfer . green		5118531	0					
ANR	5118674	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118675	Identifier	pgs		5118531	0					
ANR	5118676	Identifier	set_transfer		5118531	1					
ANR	5118677	Identifier	green		5118531	1					
ANR	5118678	CompoundStatement		22:33:946:946	5118531	1					
ANR	5118679	ExpressionStatement	component_num = pgs -> set_transfer . green_component_num	1254:8:47857:47910	5118531	0	True				
ANR	5118680	AssignmentExpression	component_num = pgs -> set_transfer . green_component_num		5118531	0		=			
ANR	5118681	Identifier	component_num		5118531	0					
ANR	5118682	MemberAccess	pgs -> set_transfer . green_component_num		5118531	1					
ANR	5118683	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118684	Identifier	pgs		5118531	0					
ANR	5118685	Identifier	set_transfer		5118531	1					
ANR	5118686	Identifier	green_component_num		5118531	1					
ANR	5118687	IfStatement	if ( component_num >= 0 )		5118531	1					
ANR	5118688	Condition	component_num >= 0	1255:12:47924:47941	5118531	0	True				
ANR	5118689	RelationalExpression	component_num >= 0		5118531	0		>=			
ANR	5118690	Identifier	component_num		5118531	0					
ANR	5118691	PrimaryExpression	0		5118531	1					
ANR	5118692	CompoundStatement		24:32:1043:1043	5118531	1					
ANR	5118693	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		5118531	0					
ANR	5118694	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1256:16:47962:48030	5118531	0	True				
ANR	5118695	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118696	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		5118531	0					
ANR	5118697	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118698	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118699	Identifier	pgs		5118531	0					
ANR	5118700	Identifier	effective_transfer		5118531	1					
ANR	5118701	Identifier	component_num		5118531	1					
ANR	5118702	Identifier	proc		5118531	1					
ANR	5118703	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118704	UnaryOperator	&		5118531	0					
ANR	5118705	Identifier	gs_identity_transfer		5118531	1					
ANR	5118706	ExpressionStatement	non_id_count --	1257:15:48048:48062	5118531	1	True				
ANR	5118707	PostIncDecOperationExpression	non_id_count --		5118531	0					
ANR	5118708	Identifier	non_id_count		5118531	0					
ANR	5118709	IncDec	--		5118531	1					
ANR	5118710	ExpressionStatement	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . green	1258:12:48076:48140	5118531	1	True				
ANR	5118711	AssignmentExpression	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . green		5118531	0		=			
ANR	5118712	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118713	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118714	Identifier	pgs		5118531	0					
ANR	5118715	Identifier	effective_transfer		5118531	1					
ANR	5118716	Identifier	component_num		5118531	1					
ANR	5118717	MemberAccess	pgs -> set_transfer . green		5118531	1					
ANR	5118718	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118719	Identifier	pgs		5118531	0					
ANR	5118720	Identifier	set_transfer		5118531	1					
ANR	5118721	Identifier	green		5118531	1					
ANR	5118722	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		5118531	2					
ANR	5118723	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1259:16:48158:48226	5118531	0	True				
ANR	5118724	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118725	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		5118531	0					
ANR	5118726	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118727	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118728	Identifier	pgs		5118531	0					
ANR	5118729	Identifier	effective_transfer		5118531	1					
ANR	5118730	Identifier	component_num		5118531	1					
ANR	5118731	Identifier	proc		5118531	1					
ANR	5118732	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118733	UnaryOperator	&		5118531	0					
ANR	5118734	Identifier	gs_identity_transfer		5118531	1					
ANR	5118735	ExpressionStatement	non_id_count ++	1260:15:48244:48258	5118531	1	True				
ANR	5118736	PostIncDecOperationExpression	non_id_count ++		5118531	0					
ANR	5118737	Identifier	non_id_count		5118531	0					
ANR	5118738	IncDec	++		5118531	1					
ANR	5118739	IfStatement	if ( pgs -> set_transfer . blue )		5118531	8					
ANR	5118740	Condition	pgs -> set_transfer . blue	1263:8:48284:48305	5118531	0	True				
ANR	5118741	MemberAccess	pgs -> set_transfer . blue		5118531	0					
ANR	5118742	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118743	Identifier	pgs		5118531	0					
ANR	5118744	Identifier	set_transfer		5118531	1					
ANR	5118745	Identifier	blue		5118531	1					
ANR	5118746	CompoundStatement		32:32:1407:1407	5118531	1					
ANR	5118747	ExpressionStatement	component_num = pgs -> set_transfer . blue_component_num	1264:8:48318:48370	5118531	0	True				
ANR	5118748	AssignmentExpression	component_num = pgs -> set_transfer . blue_component_num		5118531	0		=			
ANR	5118749	Identifier	component_num		5118531	0					
ANR	5118750	MemberAccess	pgs -> set_transfer . blue_component_num		5118531	1					
ANR	5118751	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118752	Identifier	pgs		5118531	0					
ANR	5118753	Identifier	set_transfer		5118531	1					
ANR	5118754	Identifier	blue_component_num		5118531	1					
ANR	5118755	IfStatement	if ( component_num >= 0 )		5118531	1					
ANR	5118756	Condition	component_num >= 0	1265:12:48384:48401	5118531	0	True				
ANR	5118757	RelationalExpression	component_num >= 0		5118531	0		>=			
ANR	5118758	Identifier	component_num		5118531	0					
ANR	5118759	PrimaryExpression	0		5118531	1					
ANR	5118760	CompoundStatement		34:32:1503:1503	5118531	1					
ANR	5118761	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		5118531	0					
ANR	5118762	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1266:16:48422:48490	5118531	0	True				
ANR	5118763	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118764	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		5118531	0					
ANR	5118765	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118766	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118767	Identifier	pgs		5118531	0					
ANR	5118768	Identifier	effective_transfer		5118531	1					
ANR	5118769	Identifier	component_num		5118531	1					
ANR	5118770	Identifier	proc		5118531	1					
ANR	5118771	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118772	UnaryOperator	&		5118531	0					
ANR	5118773	Identifier	gs_identity_transfer		5118531	1					
ANR	5118774	ExpressionStatement	non_id_count --	1267:15:48508:48522	5118531	1	True				
ANR	5118775	PostIncDecOperationExpression	non_id_count --		5118531	0					
ANR	5118776	Identifier	non_id_count		5118531	0					
ANR	5118777	IncDec	--		5118531	1					
ANR	5118778	ExpressionStatement	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . blue	1268:12:48536:48599	5118531	1	True				
ANR	5118779	AssignmentExpression	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . blue		5118531	0		=			
ANR	5118780	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118781	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118782	Identifier	pgs		5118531	0					
ANR	5118783	Identifier	effective_transfer		5118531	1					
ANR	5118784	Identifier	component_num		5118531	1					
ANR	5118785	MemberAccess	pgs -> set_transfer . blue		5118531	1					
ANR	5118786	PtrMemberAccess	pgs -> set_transfer		5118531	0					
ANR	5118787	Identifier	pgs		5118531	0					
ANR	5118788	Identifier	set_transfer		5118531	1					
ANR	5118789	Identifier	blue		5118531	1					
ANR	5118790	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		5118531	2					
ANR	5118791	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1269:16:48617:48685	5118531	0	True				
ANR	5118792	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118793	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		5118531	0					
ANR	5118794	ArrayIndexing	pgs -> effective_transfer [ component_num ]		5118531	0					
ANR	5118795	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118796	Identifier	pgs		5118531	0					
ANR	5118797	Identifier	effective_transfer		5118531	1					
ANR	5118798	Identifier	component_num		5118531	1					
ANR	5118799	Identifier	proc		5118531	1					
ANR	5118800	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118801	UnaryOperator	&		5118531	0					
ANR	5118802	Identifier	gs_identity_transfer		5118531	1					
ANR	5118803	ExpressionStatement	non_id_count ++	1270:15:48703:48717	5118531	1	True				
ANR	5118804	PostIncDecOperationExpression	non_id_count ++		5118531	0					
ANR	5118805	Identifier	non_id_count		5118531	0					
ANR	5118806	IncDec	++		5118531	1					
ANR	5118807	IfStatement	if ( pdht )		5118531	9					
ANR	5118808	Condition	pdht	1274:8:48744:48747	5118531	0	True				
ANR	5118809	Identifier	pdht		5118531	0					
ANR	5118810	CompoundStatement		43:14:1849:1849	5118531	1					
ANR	5118811	ExpressionStatement	porder = & ( pdht -> order )	1278:8:48969:48992	5118531	0	True				
ANR	5118812	AssignmentExpression	porder = & ( pdht -> order )		5118531	0		=			
ANR	5118813	Identifier	porder		5118531	0					
ANR	5118814	UnaryOperationExpression	& ( pdht -> order )		5118531	1					
ANR	5118815	UnaryOperator	&		5118531	0					
ANR	5118816	PtrMemberAccess	pdht -> order		5118531	1					
ANR	5118817	Identifier	pdht		5118531	0					
ANR	5118818	Identifier	order		5118531	1					
ANR	5118819	IfStatement	if ( porder -> threshold != NULL )		5118531	1					
ANR	5118820	Condition	porder -> threshold != NULL	1279:12:49006:49030	5118531	0	True				
ANR	5118821	EqualityExpression	porder -> threshold != NULL		5118531	0		!=			
ANR	5118822	PtrMemberAccess	porder -> threshold		5118531	0					
ANR	5118823	Identifier	porder		5118531	0					
ANR	5118824	Identifier	threshold		5118531	1					
ANR	5118825	Identifier	NULL		5118531	1					
ANR	5118826	CompoundStatement		48:39:2132:2132	5118531	1					
ANR	5118827	ExpressionStatement	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"	1280:12:49047:49180	5118531	0	True				
ANR	5118828	CallExpression	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"		5118531	0					
ANR	5118829	Callee	gs_free_object		5118531	0					
ANR	5118830	Identifier	gs_free_object		5118531	0					
ANR	5118831	ArgumentList	porder -> data_memory -> non_gc_memory		5118531	1					
ANR	5118832	Argument	porder -> data_memory -> non_gc_memory		5118531	0					
ANR	5118833	PtrMemberAccess	porder -> data_memory -> non_gc_memory		5118531	0					
ANR	5118834	PtrMemberAccess	porder -> data_memory		5118531	0					
ANR	5118835	Identifier	porder		5118531	0					
ANR	5118836	Identifier	data_memory		5118531	1					
ANR	5118837	Identifier	non_gc_memory		5118531	1					
ANR	5118838	Argument	porder -> threshold		5118531	1					
ANR	5118839	PtrMemberAccess	porder -> threshold		5118531	0					
ANR	5118840	Identifier	porder		5118531	0					
ANR	5118841	Identifier	threshold		5118531	1					
ANR	5118842	Argument	"""set_effective_transfer(threshold)"""		5118531	2					
ANR	5118843	PrimaryExpression	"""set_effective_transfer(threshold)"""		5118531	0					
ANR	5118844	ExpressionStatement	porder -> threshold = 0	1282:12:49194:49215	5118531	1	True				
ANR	5118845	AssignmentExpression	porder -> threshold = 0		5118531	0		=			
ANR	5118846	PtrMemberAccess	porder -> threshold		5118531	0					
ANR	5118847	Identifier	porder		5118531	0					
ANR	5118848	Identifier	threshold		5118531	1					
ANR	5118849	PrimaryExpression	0		5118531	1					
ANR	5118850	ForStatement	for ( i = 0 ; i < pdht -> num_comp ; i ++ )		5118531	2					
ANR	5118851	ForInit	i = 0 ;	1284:13:49240:49245	5118531	0	True				
ANR	5118852	AssignmentExpression	i = 0		5118531	0		=			
ANR	5118853	Identifier	i		5118531	0					
ANR	5118854	PrimaryExpression	0		5118531	1					
ANR	5118855	Condition	i < pdht -> num_comp	1284:20:49247:49264	5118531	1	True				
ANR	5118856	RelationalExpression	i < pdht -> num_comp		5118531	0		<			
ANR	5118857	Identifier	i		5118531	0					
ANR	5118858	PtrMemberAccess	pdht -> num_comp		5118531	1					
ANR	5118859	Identifier	pdht		5118531	0					
ANR	5118860	Identifier	num_comp		5118531	1					
ANR	5118861	PostIncDecOperationExpression	i ++	1284:40:49267:49269	5118531	2	True				
ANR	5118862	Identifier	i		5118531	0					
ANR	5118863	IncDec	++		5118531	1					
ANR	5118864	CompoundStatement		53:45:2371:2371	5118531	3					
ANR	5118865	ExpressionStatement	pmap = pdht -> components [ i ] . corder . transfer	1285:12:49286:49328	5118531	0	True				
ANR	5118866	AssignmentExpression	pmap = pdht -> components [ i ] . corder . transfer		5118531	0		=			
ANR	5118867	Identifier	pmap		5118531	0					
ANR	5118868	MemberAccess	pdht -> components [ i ] . corder . transfer		5118531	1					
ANR	5118869	MemberAccess	pdht -> components [ i ] . corder		5118531	0					
ANR	5118870	ArrayIndexing	pdht -> components [ i ]		5118531	0					
ANR	5118871	PtrMemberAccess	pdht -> components		5118531	0					
ANR	5118872	Identifier	pdht		5118531	0					
ANR	5118873	Identifier	components		5118531	1					
ANR	5118874	Identifier	i		5118531	1					
ANR	5118875	Identifier	corder		5118531	1					
ANR	5118876	Identifier	transfer		5118531	1					
ANR	5118877	IfStatement	if ( pmap != NULL )		5118531	1					
ANR	5118878	Condition	pmap != NULL	1286:16:49346:49357	5118531	0	True				
ANR	5118879	EqualityExpression	pmap != NULL		5118531	0		!=			
ANR	5118880	Identifier	pmap		5118531	0					
ANR	5118881	Identifier	NULL		5118531	1					
ANR	5118882	CompoundStatement		55:30:2459:2459	5118531	1					
ANR	5118883	IfStatement	if ( pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer )		5118531	0					
ANR	5118884	Condition	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer	1287:20:49382:49438	5118531	0	True				
ANR	5118885	EqualityExpression	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118886	PtrMemberAccess	pgs -> effective_transfer [ i ] -> proc		5118531	0					
ANR	5118887	ArrayIndexing	pgs -> effective_transfer [ i ]		5118531	0					
ANR	5118888	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118889	Identifier	pgs		5118531	0					
ANR	5118890	Identifier	effective_transfer		5118531	1					
ANR	5118891	Identifier	i		5118531	1					
ANR	5118892	Identifier	proc		5118531	1					
ANR	5118893	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118894	UnaryOperator	&		5118531	0					
ANR	5118895	Identifier	gs_identity_transfer		5118531	1					
ANR	5118896	ExpressionStatement	non_id_count --	1288:20:49461:49475	5118531	1	True				
ANR	5118897	PostIncDecOperationExpression	non_id_count --		5118531	0					
ANR	5118898	Identifier	non_id_count		5118531	0					
ANR	5118899	IncDec	--		5118531	1					
ANR	5118900	ExpressionStatement	pgs -> effective_transfer [ i ] = pmap	1289:16:49493:49526	5118531	1	True				
ANR	5118901	AssignmentExpression	pgs -> effective_transfer [ i ] = pmap		5118531	0		=			
ANR	5118902	ArrayIndexing	pgs -> effective_transfer [ i ]		5118531	0					
ANR	5118903	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118904	Identifier	pgs		5118531	0					
ANR	5118905	Identifier	effective_transfer		5118531	1					
ANR	5118906	Identifier	i		5118531	1					
ANR	5118907	Identifier	pmap		5118531	1					
ANR	5118908	IfStatement	if ( pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer )		5118531	2					
ANR	5118909	Condition	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer	1290:20:49548:49604	5118531	0	True				
ANR	5118910	EqualityExpression	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer		5118531	0		!=			
ANR	5118911	PtrMemberAccess	pgs -> effective_transfer [ i ] -> proc		5118531	0					
ANR	5118912	ArrayIndexing	pgs -> effective_transfer [ i ]		5118531	0					
ANR	5118913	PtrMemberAccess	pgs -> effective_transfer		5118531	0					
ANR	5118914	Identifier	pgs		5118531	0					
ANR	5118915	Identifier	effective_transfer		5118531	1					
ANR	5118916	Identifier	i		5118531	1					
ANR	5118917	Identifier	proc		5118531	1					
ANR	5118918	UnaryOperationExpression	& gs_identity_transfer		5118531	1					
ANR	5118919	UnaryOperator	&		5118531	0					
ANR	5118920	Identifier	gs_identity_transfer		5118531	1					
ANR	5118921	ExpressionStatement	non_id_count ++	1291:19:49626:49640	5118531	1	True				
ANR	5118922	PostIncDecOperationExpression	non_id_count ++		5118531	0					
ANR	5118923	Identifier	non_id_count		5118531	0					
ANR	5118924	IncDec	++		5118531	1					
ANR	5118925	ExpressionStatement	porder = & ( pdht -> components [ i ] . corder )	1293:12:49668:49706	5118531	2	True				
ANR	5118926	AssignmentExpression	porder = & ( pdht -> components [ i ] . corder )		5118531	0		=			
ANR	5118927	Identifier	porder		5118531	0					
ANR	5118928	UnaryOperationExpression	& ( pdht -> components [ i ] . corder )		5118531	1					
ANR	5118929	UnaryOperator	&		5118531	0					
ANR	5118930	MemberAccess	pdht -> components [ i ] . corder		5118531	1					
ANR	5118931	ArrayIndexing	pdht -> components [ i ]		5118531	0					
ANR	5118932	PtrMemberAccess	pdht -> components		5118531	0					
ANR	5118933	Identifier	pdht		5118531	0					
ANR	5118934	Identifier	components		5118531	1					
ANR	5118935	Identifier	i		5118531	1					
ANR	5118936	Identifier	corder		5118531	1					
ANR	5118937	IfStatement	if ( porder -> threshold != NULL )		5118531	3					
ANR	5118938	Condition	porder -> threshold != NULL	1294:16:49724:49748	5118531	0	True				
ANR	5118939	EqualityExpression	porder -> threshold != NULL		5118531	0		!=			
ANR	5118940	PtrMemberAccess	porder -> threshold		5118531	0					
ANR	5118941	Identifier	porder		5118531	0					
ANR	5118942	Identifier	threshold		5118531	1					
ANR	5118943	Identifier	NULL		5118531	1					
ANR	5118944	CompoundStatement		63:43:2850:2850	5118531	1					
ANR	5118945	ExpressionStatement	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"	1295:16:49769:49906	5118531	0	True				
ANR	5118946	CallExpression	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"		5118531	0					
ANR	5118947	Callee	gs_free_object		5118531	0					
ANR	5118948	Identifier	gs_free_object		5118531	0					
ANR	5118949	ArgumentList	porder -> data_memory -> non_gc_memory		5118531	1					
ANR	5118950	Argument	porder -> data_memory -> non_gc_memory		5118531	0					
ANR	5118951	PtrMemberAccess	porder -> data_memory -> non_gc_memory		5118531	0					
ANR	5118952	PtrMemberAccess	porder -> data_memory		5118531	0					
ANR	5118953	Identifier	porder		5118531	0					
ANR	5118954	Identifier	data_memory		5118531	1					
ANR	5118955	Identifier	non_gc_memory		5118531	1					
ANR	5118956	Argument	porder -> threshold		5118531	1					
ANR	5118957	PtrMemberAccess	porder -> threshold		5118531	0					
ANR	5118958	Identifier	porder		5118531	0					
ANR	5118959	Identifier	threshold		5118531	1					
ANR	5118960	Argument	"""set_effective_transfer(threshold)"""		5118531	2					
ANR	5118961	PrimaryExpression	"""set_effective_transfer(threshold)"""		5118531	0					
ANR	5118962	ExpressionStatement	porder -> threshold = 0	1297:16:49924:49945	5118531	1	True				
ANR	5118963	AssignmentExpression	porder -> threshold = 0		5118531	0		=			
ANR	5118964	PtrMemberAccess	porder -> threshold		5118531	0					
ANR	5118965	Identifier	porder		5118531	0					
ANR	5118966	Identifier	threshold		5118531	1					
ANR	5118967	PrimaryExpression	0		5118531	1					
ANR	5118968	ExpressionStatement	pgs -> effective_transfer_non_identity_count = non_id_count	1302:4:49982:50039	5118531	10	True				
ANR	5118969	AssignmentExpression	pgs -> effective_transfer_non_identity_count = non_id_count		5118531	0		=			
ANR	5118970	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		5118531	0					
ANR	5118971	Identifier	pgs		5118531	0					
ANR	5118972	Identifier	effective_transfer_non_identity_count		5118531	1					
ANR	5118973	Identifier	non_id_count		5118531	1					
ANR	5118974	ReturnType	void		5118531	1					
ANR	5118975	Identifier	gx_gstate_set_effective_xfer		5118531	2					
ANR	5118976	ParameterList	gs_gstate * pgs		5118531	3					
ANR	5118977	Parameter	gs_gstate * pgs	1231:29:46883:46897	5118531	0	True				
ANR	5118978	ParameterType	gs_gstate *		5118531	0					
ANR	5118979	Identifier	pgs		5118531	1					
ANR	5118980	CFGEntryNode	ENTRY		5118531		True				
ANR	5118981	CFGExitNode	EXIT		5118531		True				
ANR	5118982	Symbol	pgs -> set_transfer . green_component_num		5118531						
ANR	5118983	Symbol	* porder -> data_memory		5118531						
ANR	5118984	Symbol	* pgs		5118531						
ANR	5118985	Symbol	pgs -> effective_transfer [ component_num ] -> proc		5118531						
ANR	5118986	Symbol	* * porder		5118531						
ANR	5118987	Symbol	pgs -> set_transfer		5118531						
ANR	5118988	Symbol	pgs -> set_transfer . red_component_num		5118531						
ANR	5118989	Symbol	* pdht		5118531						
ANR	5118990	Symbol	pgs -> effective_transfer [ i ] -> proc		5118531						
ANR	5118991	Symbol	& pdht -> components [ i ] . corder		5118531						
ANR	5118992	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		5118531						
ANR	5118993	Symbol	* pdht -> components		5118531						
ANR	5118994	Symbol	non_id_count		5118531						
ANR	5118995	Symbol	pgs -> set_transfer . blue_component_num		5118531						
ANR	5118996	Symbol	* * i		5118531						
ANR	5118997	Symbol	NULL		5118531						
ANR	5118998	Symbol	porder -> data_memory -> non_gc_memory		5118531						
ANR	5118999	Symbol	* pgs -> set_transfer		5118531						
ANR	5119000	Symbol	porder		5118531						
ANR	5119001	Symbol	* * pgs		5118531						
ANR	5119002	Symbol	* pgs -> effective_transfer		5118531						
ANR	5119003	Symbol	pdht		5118531						
ANR	5119004	Symbol	pdht -> num_comp		5118531						
ANR	5119005	Symbol	pgs -> effective_transfer_non_identity_count		5118531						
ANR	5119006	Symbol	* * pdht		5118531						
ANR	5119007	Symbol	pgs -> set_transfer . gray -> proc		5118531						
ANR	5119008	Symbol	* component_num		5118531						
ANR	5119009	Symbol	* porder		5118531						
ANR	5119010	Symbol	porder -> data_memory		5118531						
ANR	5119011	Symbol	pgs -> effective_transfer		5118531						
ANR	5119012	Symbol	& pdht -> order		5118531						
ANR	5119013	Symbol	pgs -> set_transfer . red		5118531						
ANR	5119014	Symbol	* * pgs -> effective_transfer		5118531						
ANR	5119015	Symbol	pdht -> components		5118531						
ANR	5119016	Symbol	pgs -> set_transfer . blue		5118531						
ANR	5119017	Symbol	* * component_num		5118531						
ANR	5119018	Symbol	pmap		5118531						
ANR	5119019	Symbol	* * * pgs		5118531						
ANR	5119020	Symbol	pgs		5118531						
ANR	5119021	Symbol	* pgs -> set_transfer . gray		5118531						
ANR	5119022	Symbol	& gs_identity_transfer		5118531						
ANR	5119023	Symbol	i		5118531						
ANR	5119024	Symbol	pgs -> set_transfer . gray		5118531						
ANR	5119025	Symbol	porder -> threshold		5118531						
ANR	5119026	Symbol	* i		5118531						
ANR	5119027	Symbol	pdht -> components [ i ] . corder . transfer		5118531						
ANR	5119028	Symbol	pdht -> components [ i ] . corder		5118531						
ANR	5119029	Symbol	pgs -> dev_ht		5118531						
ANR	5119030	Symbol	pgs -> set_transfer . green		5118531						
ANR	5119031	Symbol	component_num		5118531						
ANR	5119032	Function	gx_set_effective_transfer	1305:0:50044:50133							
ANR	5119033	FunctionDef	gx_set_effective_transfer (gs_gstate * pgs)		5119032	0					
ANR	5119034	CompoundStatement		1307:0:50092:50133	5119032	0					
ANR	5119035	ExpressionStatement	gx_gstate_set_effective_xfer ( pgs )	1308:4:50098:50131	5119032	0	True				
ANR	5119036	CallExpression	gx_gstate_set_effective_xfer ( pgs )		5119032	0					
ANR	5119037	Callee	gx_gstate_set_effective_xfer		5119032	0					
ANR	5119038	Identifier	gx_gstate_set_effective_xfer		5119032	0					
ANR	5119039	ArgumentList	pgs		5119032	1					
ANR	5119040	Argument	pgs		5119032	0					
ANR	5119041	Identifier	pgs		5119032	0					
ANR	5119042	ReturnType	void		5119032	1					
ANR	5119043	Identifier	gx_set_effective_transfer		5119032	2					
ANR	5119044	ParameterList	gs_gstate * pgs		5119032	3					
ANR	5119045	Parameter	gs_gstate * pgs	1306:26:50075:50089	5119032	0	True				
ANR	5119046	ParameterType	gs_gstate *		5119032	0					
ANR	5119047	Identifier	pgs		5119032	1					
ANR	5119048	CFGEntryNode	ENTRY		5119032		True				
ANR	5119049	CFGExitNode	EXIT		5119032		True				
ANR	5119050	Symbol	pgs		5119032						
ANR	5119051	Function	gx_transfer_is_monotonic	1313:0:50257:51053							
ANR	5119052	FunctionDef	"gx_transfer_is_monotonic (const gs_gstate * pgs , int plane_index)"		5119051	0					
ANR	5119053	CompoundStatement		1315:0:50326:51053	5119051	0					
ANR	5119054	IfStatement	if ( pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer )		5119051	0					
ANR	5119055	Condition	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer	1316:8:50336:50401	5119051	0	True				
ANR	5119056	EqualityExpression	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer		5119051	0		!=			
ANR	5119057	PtrMemberAccess	pgs -> effective_transfer [ plane_index ] -> proc		5119051	0					
ANR	5119058	ArrayIndexing	pgs -> effective_transfer [ plane_index ]		5119051	0					
ANR	5119059	PtrMemberAccess	pgs -> effective_transfer		5119051	0					
ANR	5119060	Identifier	pgs		5119051	0					
ANR	5119061	Identifier	effective_transfer		5119051	1					
ANR	5119062	Identifier	plane_index		5119051	1					
ANR	5119063	Identifier	proc		5119051	1					
ANR	5119064	Identifier	gs_identity_transfer		5119051	1					
ANR	5119065	CompoundStatement		5:8:141:158	5119051	1					
ANR	5119066	IdentifierDeclStatement	bool threshold_inverted ;	1317:8:50414:50437	5119051	0	True				
ANR	5119067	IdentifierDecl	threshold_inverted		5119051	0					
ANR	5119068	IdentifierDeclType	bool		5119051	0					
ANR	5119069	Identifier	threshold_inverted		5119051	1					
ANR	5119070	IdentifierDeclStatement	int t_level ;	1318:8:50447:50458	5119051	1	True				
ANR	5119071	IdentifierDecl	t_level		5119051	0					
ANR	5119072	IdentifierDeclType	int		5119051	0					
ANR	5119073	Identifier	t_level		5119051	1					
ANR	5119074	IdentifierDeclStatement	"frac mapped , prev ;"	1319:8:50468:50485	5119051	2	True				
ANR	5119075	IdentifierDecl	mapped		5119051	0					
ANR	5119076	IdentifierDeclType	frac		5119051	0					
ANR	5119077	Identifier	mapped		5119051	1					
ANR	5119078	IdentifierDecl	prev		5119051	1					
ANR	5119079	IdentifierDeclType	frac		5119051	0					
ANR	5119080	Identifier	prev		5119051	1					
ANR	5119081	ExpressionStatement	"prev = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"	1321:8:50496:50566	5119051	3	True				
ANR	5119082	AssignmentExpression	"prev = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"		5119051	0		=			
ANR	5119083	Identifier	prev		5119051	0					
ANR	5119084	CallExpression	"gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"		5119051	1					
ANR	5119085	Callee	gx_map_color_frac		5119051	0					
ANR	5119086	Identifier	gx_map_color_frac		5119051	0					
ANR	5119087	ArgumentList	pgs		5119051	1					
ANR	5119088	Argument	pgs		5119051	0					
ANR	5119089	Identifier	pgs		5119051	0					
ANR	5119090	Argument	frac_0		5119051	1					
ANR	5119091	Identifier	frac_0		5119051	0					
ANR	5119092	Argument	effective_transfer [ plane_index ]		5119051	2					
ANR	5119093	ArrayIndexing	effective_transfer [ plane_index ]		5119051	0					
ANR	5119094	Identifier	effective_transfer		5119051	0					
ANR	5119095	Identifier	plane_index		5119051	1					
ANR	5119096	ExpressionStatement	"threshold_inverted = prev > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"	1322:8:50576:50696	5119051	4	True				
ANR	5119097	AssignmentExpression	"threshold_inverted = prev > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		5119051	0		=			
ANR	5119098	Identifier	threshold_inverted		5119051	0					
ANR	5119099	RelationalExpression	"prev > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		5119051	1		>			
ANR	5119100	Identifier	prev		5119051	0					
ANR	5119101	CallExpression	"gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		5119051	1					
ANR	5119102	Callee	gx_map_color_frac		5119051	0					
ANR	5119103	Identifier	gx_map_color_frac		5119051	0					
ANR	5119104	ArgumentList	pgs		5119051	1					
ANR	5119105	Argument	pgs		5119051	0					
ANR	5119106	Identifier	pgs		5119051	0					
ANR	5119107	Argument	frac_1		5119051	1					
ANR	5119108	Identifier	frac_1		5119051	0					
ANR	5119109	Argument	effective_transfer [ plane_index ]		5119051	2					
ANR	5119110	ArrayIndexing	effective_transfer [ plane_index ]		5119051	0					
ANR	5119111	Identifier	effective_transfer		5119051	0					
ANR	5119112	Identifier	plane_index		5119051	1					
ANR	5119113	ForStatement	for ( t_level = 1 ; t_level < 255 ; t_level ++ )		5119051	5					
ANR	5119114	ForInit	t_level = 1 ;	1324:13:50711:50722	5119051	0	True				
ANR	5119115	AssignmentExpression	t_level = 1		5119051	0		=			
ANR	5119116	Identifier	t_level		5119051	0					
ANR	5119117	PrimaryExpression	1		5119051	1					
ANR	5119118	Condition	t_level < 255	1324:26:50724:50736	5119051	1	True				
ANR	5119119	RelationalExpression	t_level < 255		5119051	0		<			
ANR	5119120	Identifier	t_level		5119051	0					
ANR	5119121	PrimaryExpression	255		5119051	1					
ANR	5119122	PostIncDecOperationExpression	t_level ++	1324:41:50739:50747	5119051	2	True				
ANR	5119123	Identifier	t_level		5119051	0					
ANR	5119124	IncDec	++		5119051	1					
ANR	5119125	CompoundStatement		10:52:423:423	5119051	3					
ANR	5119126	ExpressionStatement	"mapped = gx_map_color_frac ( pgs , byte2frac ( t_level ) , effective_transfer [ plane_index ] )"	1325:12:50764:50848	5119051	0	True				
ANR	5119127	AssignmentExpression	"mapped = gx_map_color_frac ( pgs , byte2frac ( t_level ) , effective_transfer [ plane_index ] )"		5119051	0		=			
ANR	5119128	Identifier	mapped		5119051	0					
ANR	5119129	CallExpression	"gx_map_color_frac ( pgs , byte2frac ( t_level ) , effective_transfer [ plane_index ] )"		5119051	1					
ANR	5119130	Callee	gx_map_color_frac		5119051	0					
ANR	5119131	Identifier	gx_map_color_frac		5119051	0					
ANR	5119132	ArgumentList	pgs		5119051	1					
ANR	5119133	Argument	pgs		5119051	0					
ANR	5119134	Identifier	pgs		5119051	0					
ANR	5119135	Argument	byte2frac ( t_level )		5119051	1					
ANR	5119136	CallExpression	byte2frac ( t_level )		5119051	0					
ANR	5119137	Callee	byte2frac		5119051	0					
ANR	5119138	Identifier	byte2frac		5119051	0					
ANR	5119139	ArgumentList	t_level		5119051	1					
ANR	5119140	Argument	t_level		5119051	0					
ANR	5119141	Identifier	t_level		5119051	0					
ANR	5119142	Argument	effective_transfer [ plane_index ]		5119051	2					
ANR	5119143	ArrayIndexing	effective_transfer [ plane_index ]		5119051	0					
ANR	5119144	Identifier	effective_transfer		5119051	0					
ANR	5119145	Identifier	plane_index		5119051	1					
ANR	5119146	IfStatement	if ( ( threshold_inverted && mapped > prev ) || ( ! threshold_inverted && mapped < prev ) )		5119051	1					
ANR	5119147	Condition	( threshold_inverted && mapped > prev ) || ( ! threshold_inverted && mapped < prev )	1326:16:50866:50960	5119051	0	True				
ANR	5119148	OrExpression	( threshold_inverted && mapped > prev ) || ( ! threshold_inverted && mapped < prev )		5119051	0		||			
ANR	5119149	AndExpression	threshold_inverted && mapped > prev		5119051	0		&&			
ANR	5119150	Identifier	threshold_inverted		5119051	0					
ANR	5119151	RelationalExpression	mapped > prev		5119051	1		>			
ANR	5119152	Identifier	mapped		5119051	0					
ANR	5119153	Identifier	prev		5119051	1					
ANR	5119154	AndExpression	! threshold_inverted && mapped < prev		5119051	1		&&			
ANR	5119155	UnaryOperationExpression	! threshold_inverted		5119051	0					
ANR	5119156	UnaryOperator	!		5119051	0					
ANR	5119157	Identifier	threshold_inverted		5119051	1					
ANR	5119158	RelationalExpression	mapped < prev		5119051	1		<			
ANR	5119159	Identifier	mapped		5119051	0					
ANR	5119160	Identifier	prev		5119051	1					
ANR	5119161	ReturnStatement	return false ;	1328:16:50979:50991	5119051	1	True				
ANR	5119162	Identifier	false		5119051	0					
ANR	5119163	ExpressionStatement	prev = mapped	1329:12:51005:51018	5119051	2	True				
ANR	5119164	AssignmentExpression	prev = mapped		5119051	0		=			
ANR	5119165	Identifier	prev		5119051	0					
ANR	5119166	Identifier	mapped		5119051	1					
ANR	5119167	ReturnStatement	return true ;	1332:4:51040:51051	5119051	1	True				
ANR	5119168	Identifier	true		5119051	0					
ANR	5119169	ReturnType	bool		5119051	1					
ANR	5119170	Identifier	gx_transfer_is_monotonic		5119051	2					
ANR	5119171	ParameterList	"const gs_gstate * pgs , int plane_index"		5119051	3					
ANR	5119172	Parameter	const gs_gstate * pgs	1314:25:50287:50306	5119051	0	True				
ANR	5119173	ParameterType	const gs_gstate *		5119051	0					
ANR	5119174	Identifier	pgs		5119051	1					
ANR	5119175	Parameter	int plane_index	1314:47:50309:50323	5119051	1	True				
ANR	5119176	ParameterType	int		5119051	0					
ANR	5119177	Identifier	plane_index		5119051	1					
ANR	5119178	CFGEntryNode	ENTRY		5119051		True				
ANR	5119179	CFGExitNode	EXIT		5119051		True				
ANR	5119180	Symbol	* plane_index		5119051						
ANR	5119181	Symbol	frac_1		5119051						
ANR	5119182	Symbol	byte2frac		5119051						
ANR	5119183	Symbol	* * pgs -> effective_transfer		5119051						
ANR	5119184	Symbol	gs_identity_transfer		5119051						
ANR	5119185	Symbol	* pgs		5119051						
ANR	5119186	Symbol	prev		5119051						
ANR	5119187	Symbol	false		5119051						
ANR	5119188	Symbol	plane_index		5119051						
ANR	5119189	Symbol	t_level		5119051						
ANR	5119190	Symbol	effective_transfer		5119051						
ANR	5119191	Symbol	* * pgs		5119051						
ANR	5119192	Symbol	* pgs -> effective_transfer		5119051						
ANR	5119193	Symbol	* * plane_index		5119051						
ANR	5119194	Symbol	* effective_transfer		5119051						
ANR	5119195	Symbol	gx_map_color_frac		5119051						
ANR	5119196	Symbol	threshold_inverted		5119051						
ANR	5119197	Symbol	pgs -> effective_transfer [ plane_index ] -> proc		5119051						
ANR	5119198	Symbol	mapped		5119051						
ANR	5119199	Symbol	true		5119051						
ANR	5119200	Symbol	* * * pgs		5119051						
ANR	5119201	Symbol	pgs		5119051						
ANR	5119202	Symbol	frac_0		5119051						
ANR	5119203	Symbol	pgs -> effective_transfer		5119051						
ANR	5119204	Function	gx_ht_construct_threshold	1340:0:51359:56453							
ANR	5119205	FunctionDef	"gx_ht_construct_threshold (gx_ht_order * d_order , gx_device * dev , const gs_gstate * pgs , int plane_index)"		5119204	0					
ANR	5119206	CompoundStatement		1343:0:51495:56453	5119204	0					
ANR	5119207	IdentifierDeclStatement	"int i , j ;"	1344:4:51501:51509	5119204	0	True				
ANR	5119208	IdentifierDecl	i		5119204	0					
ANR	5119209	IdentifierDeclType	int		5119204	0					
ANR	5119210	Identifier	i		5119204	1					
ANR	5119211	IdentifierDecl	j		5119204	1					
ANR	5119212	IdentifierDeclType	int		5119204	0					
ANR	5119213	Identifier	j		5119204	1					
ANR	5119214	IdentifierDeclStatement	unsigned char * thresh ;	1345:4:51515:51536	5119204	1	True				
ANR	5119215	IdentifierDecl	* thresh		5119204	0					
ANR	5119216	IdentifierDeclType	unsigned char *		5119204	0					
ANR	5119217	Identifier	thresh		5119204	1					
ANR	5119218	IdentifierDeclStatement	gs_memory_t * memory = d_order ? d_order -> data_memory -> non_gc_memory : NULL ;	1346:4:51542:51616	5119204	2	True				
ANR	5119219	IdentifierDecl	* memory = d_order ? d_order -> data_memory -> non_gc_memory : NULL		5119204	0					
ANR	5119220	IdentifierDeclType	gs_memory_t *		5119204	0					
ANR	5119221	Identifier	memory		5119204	1					
ANR	5119222	AssignmentExpression	* memory = d_order ? d_order -> data_memory -> non_gc_memory : NULL		5119204	2		=			
ANR	5119223	Identifier	memory		5119204	0					
ANR	5119224	ConditionalExpression	d_order ? d_order -> data_memory -> non_gc_memory : NULL		5119204	1					
ANR	5119225	Condition	d_order		5119204	0					
ANR	5119226	Identifier	d_order		5119204	0					
ANR	5119227	PtrMemberAccess	d_order -> data_memory -> non_gc_memory		5119204	1					
ANR	5119228	PtrMemberAccess	d_order -> data_memory		5119204	0					
ANR	5119229	Identifier	d_order		5119204	0					
ANR	5119230	Identifier	data_memory		5119204	1					
ANR	5119231	Identifier	non_gc_memory		5119204	1					
ANR	5119232	Identifier	NULL		5119204	2					
ANR	5119233	IdentifierDeclStatement	uint max_value ;	1347:4:51622:51636	5119204	3	True				
ANR	5119234	IdentifierDecl	max_value		5119204	0					
ANR	5119235	IdentifierDeclType	uint		5119204	0					
ANR	5119236	Identifier	max_value		5119204	1					
ANR	5119237	IdentifierDeclStatement	"unsigned long hsize , nshades ;"	1348:4:51642:51670	5119204	4	True				
ANR	5119238	IdentifierDecl	hsize		5119204	0					
ANR	5119239	IdentifierDeclType	unsigned long		5119204	0					
ANR	5119240	Identifier	hsize		5119204	1					
ANR	5119241	IdentifierDecl	nshades		5119204	1					
ANR	5119242	IdentifierDeclType	unsigned long		5119204	0					
ANR	5119243	Identifier	nshades		5119204	1					
ANR	5119244	IdentifierDeclStatement	int t_level ;	1349:4:51676:51687	5119204	5	True				
ANR	5119245	IdentifierDecl	t_level		5119204	0					
ANR	5119246	IdentifierDeclType	int		5119204	0					
ANR	5119247	Identifier	t_level		5119204	1					
ANR	5119248	IdentifierDeclStatement	"int row , col ;"	1350:4:51693:51705	5119204	6	True				
ANR	5119249	IdentifierDecl	row		5119204	0					
ANR	5119250	IdentifierDeclType	int		5119204	0					
ANR	5119251	Identifier	row		5119204	1					
ANR	5119252	IdentifierDecl	col		5119204	1					
ANR	5119253	IdentifierDeclType	int		5119204	0					
ANR	5119254	Identifier	col		5119204	1					
ANR	5119255	IdentifierDeclStatement	int code ;	1351:4:51711:51719	5119204	7	True				
ANR	5119256	IdentifierDecl	code		5119204	0					
ANR	5119257	IdentifierDeclType	int		5119204	0					
ANR	5119258	Identifier	code		5119204	1					
ANR	5119259	IdentifierDeclStatement	"int num_repeat , shift , num_levels = d_order ? d_order -> num_levels : 0 ;"	1352:4:51725:51794	5119204	8	True				
ANR	5119260	IdentifierDecl	num_repeat		5119204	0					
ANR	5119261	IdentifierDeclType	int		5119204	0					
ANR	5119262	Identifier	num_repeat		5119204	1					
ANR	5119263	IdentifierDecl	shift		5119204	1					
ANR	5119264	IdentifierDeclType	int		5119204	0					
ANR	5119265	Identifier	shift		5119204	1					
ANR	5119266	IdentifierDecl	num_levels = d_order ? d_order -> num_levels : 0		5119204	2					
ANR	5119267	IdentifierDeclType	int		5119204	0					
ANR	5119268	Identifier	num_levels		5119204	1					
ANR	5119269	AssignmentExpression	num_levels = d_order ? d_order -> num_levels : 0		5119204	2		=			
ANR	5119270	Identifier	num_levels		5119204	0					
ANR	5119271	ConditionalExpression	d_order ? d_order -> num_levels : 0		5119204	1					
ANR	5119272	Condition	d_order		5119204	0					
ANR	5119273	Identifier	d_order		5119204	0					
ANR	5119274	PtrMemberAccess	d_order -> num_levels		5119204	1					
ANR	5119275	Identifier	d_order		5119204	0					
ANR	5119276	Identifier	num_levels		5119204	1					
ANR	5119277	PrimaryExpression	0		5119204	2					
ANR	5119278	IdentifierDeclStatement	"int row_kk , col_kk , kk ;"	1353:4:51800:51822	5119204	9	True				
ANR	5119279	IdentifierDecl	row_kk		5119204	0					
ANR	5119280	IdentifierDeclType	int		5119204	0					
ANR	5119281	Identifier	row_kk		5119204	1					
ANR	5119282	IdentifierDecl	col_kk		5119204	1					
ANR	5119283	IdentifierDeclType	int		5119204	0					
ANR	5119284	Identifier	col_kk		5119204	1					
ANR	5119285	IdentifierDecl	kk		5119204	2					
ANR	5119286	IdentifierDeclType	int		5119204	0					
ANR	5119287	Identifier	kk		5119204	1					
ANR	5119288	IdentifierDeclStatement	frac t_level_frac_color ;	1354:4:51828:51851	5119204	10	True				
ANR	5119289	IdentifierDecl	t_level_frac_color		5119204	0					
ANR	5119290	IdentifierDeclType	frac		5119204	0					
ANR	5119291	Identifier	t_level_frac_color		5119204	1					
ANR	5119292	IdentifierDeclStatement	"int shade , base_shade = 0 ;"	1355:4:51857:51882	5119204	11	True				
ANR	5119293	IdentifierDecl	shade		5119204	0					
ANR	5119294	IdentifierDeclType	int		5119204	0					
ANR	5119295	Identifier	shade		5119204	1					
ANR	5119296	IdentifierDecl	base_shade = 0		5119204	1					
ANR	5119297	IdentifierDeclType	int		5119204	0					
ANR	5119298	Identifier	base_shade		5119204	1					
ANR	5119299	AssignmentExpression	base_shade = 0		5119204	2		=			
ANR	5119300	Identifier	base_shade		5119204	0					
ANR	5119301	PrimaryExpression	0		5119204	1					
ANR	5119302	IdentifierDeclStatement	"bool have_transfer = false , threshold_inverted = false ;"	1356:4:51888:51942	5119204	12	True				
ANR	5119303	IdentifierDecl	have_transfer = false		5119204	0					
ANR	5119304	IdentifierDeclType	bool		5119204	0					
ANR	5119305	Identifier	have_transfer		5119204	1					
ANR	5119306	AssignmentExpression	have_transfer = false		5119204	2		=			
ANR	5119307	Identifier	false		5119204	0					
ANR	5119308	Identifier	false		5119204	1					
ANR	5119309	IdentifierDecl	threshold_inverted = false		5119204	1					
ANR	5119310	IdentifierDeclType	bool		5119204	0					
ANR	5119311	Identifier	threshold_inverted		5119204	1					
ANR	5119312	AssignmentExpression	threshold_inverted = false		5119204	2		=			
ANR	5119313	Identifier	false		5119204	0					
ANR	5119314	Identifier	false		5119204	1					
ANR	5119315	IfStatement	if ( d_order == NULL )		5119204	13					
ANR	5119316	Condition	d_order == NULL	1358:8:51953:51967	5119204	0	True				
ANR	5119317	EqualityExpression	d_order == NULL		5119204	0		==			
ANR	5119318	Identifier	d_order		5119204	0					
ANR	5119319	Identifier	NULL		5119204	1					
ANR	5119320	ReturnStatement	return - 1 ;	1358:25:51970:51979	5119204	1	True				
ANR	5119321	UnaryOperationExpression	- 1		5119204	0					
ANR	5119322	UnaryOperator	-		5119204	0					
ANR	5119323	PrimaryExpression	1		5119204	1					
ANR	5119324	ExpressionStatement	num_repeat = d_order -> full_height / d_order -> height	1362:4:52215:52266	5119204	14	True				
ANR	5119325	AssignmentExpression	num_repeat = d_order -> full_height / d_order -> height		5119204	0		=			
ANR	5119326	Identifier	num_repeat		5119204	0					
ANR	5119327	MultiplicativeExpression	d_order -> full_height / d_order -> height		5119204	1		/			
ANR	5119328	PtrMemberAccess	d_order -> full_height		5119204	0					
ANR	5119329	Identifier	d_order		5119204	0					
ANR	5119330	Identifier	full_height		5119204	1					
ANR	5119331	PtrMemberAccess	d_order -> height		5119204	1					
ANR	5119332	Identifier	d_order		5119204	0					
ANR	5119333	Identifier	height		5119204	1					
ANR	5119334	ExpressionStatement	shift = d_order -> shift	1363:4:52272:52294	5119204	15	True				
ANR	5119335	AssignmentExpression	shift = d_order -> shift		5119204	0		=			
ANR	5119336	Identifier	shift		5119204	0					
ANR	5119337	PtrMemberAccess	d_order -> shift		5119204	1					
ANR	5119338	Identifier	d_order		5119204	0					
ANR	5119339	Identifier	shift		5119204	1					
ANR	5119340	IfStatement	if ( d_order -> threshold != NULL )		5119204	16					
ANR	5119341	Condition	d_order -> threshold != NULL	1365:8:52305:52330	5119204	0	True				
ANR	5119342	EqualityExpression	d_order -> threshold != NULL		5119204	0		!=			
ANR	5119343	PtrMemberAccess	d_order -> threshold		5119204	0					
ANR	5119344	Identifier	d_order		5119204	0					
ANR	5119345	Identifier	threshold		5119204	1					
ANR	5119346	Identifier	NULL		5119204	1					
ANR	5119347	ReturnStatement	return 0 ;	1365:36:52333:52341	5119204	1	True				
ANR	5119348	PrimaryExpression	0		5119204	0					
ANR	5119349	ExpressionStatement	"thresh = ( byte * ) gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"	1366:4:52347:52482	5119204	17	True				
ANR	5119350	AssignmentExpression	"thresh = ( byte * ) gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"		5119204	0		=			
ANR	5119351	Identifier	thresh		5119204	0					
ANR	5119352	CastExpression	"( byte * ) gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"		5119204	1					
ANR	5119353	CastTarget	byte *		5119204	0					
ANR	5119354	CallExpression	"gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"		5119204	1					
ANR	5119355	Callee	gs_malloc		5119204	0					
ANR	5119356	Identifier	gs_malloc		5119204	0					
ANR	5119357	ArgumentList	memory		5119204	1					
ANR	5119358	Argument	memory		5119204	0					
ANR	5119359	Identifier	memory		5119204	0					
ANR	5119360	Argument	d_order -> width * d_order -> full_height		5119204	1					
ANR	5119361	MultiplicativeExpression	d_order -> width * d_order -> full_height		5119204	0		*			
ANR	5119362	PtrMemberAccess	d_order -> width		5119204	0					
ANR	5119363	Identifier	d_order		5119204	0					
ANR	5119364	Identifier	width		5119204	1					
ANR	5119365	PtrMemberAccess	d_order -> full_height		5119204	1					
ANR	5119366	Identifier	d_order		5119204	0					
ANR	5119367	Identifier	full_height		5119204	1					
ANR	5119368	Argument	1		5119204	2					
ANR	5119369	PrimaryExpression	1		5119204	0					
ANR	5119370	Argument	"""gx_ht_construct_threshold"""		5119204	3					
ANR	5119371	PrimaryExpression	"""gx_ht_construct_threshold"""		5119204	0					
ANR	5119372	IfStatement	if ( thresh == NULL )		5119204	18					
ANR	5119373	Condition	thresh == NULL	1368:8:52492:52505	5119204	0	True				
ANR	5119374	EqualityExpression	thresh == NULL		5119204	0		==			
ANR	5119375	Identifier	thresh		5119204	0					
ANR	5119376	Identifier	NULL		5119204	1					
ANR	5119377	CompoundStatement		26:24:1012:1012	5119204	1					
ANR	5119378	ReturnStatement	return - 1 ;	1369:8:52518:52528	5119204	0	True				
ANR	5119379	UnaryOperationExpression	- 1		5119204	0					
ANR	5119380	UnaryOperator	-		5119204	0					
ANR	5119381	PrimaryExpression	1		5119204	1					
ANR	5119382	IfStatement	if ( pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer )		5119204	19					
ANR	5119383	Condition	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer	1372:8:52657:52722	5119204	0	True				
ANR	5119384	EqualityExpression	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer		5119204	0		!=			
ANR	5119385	PtrMemberAccess	pgs -> effective_transfer [ plane_index ] -> proc		5119204	0					
ANR	5119386	ArrayIndexing	pgs -> effective_transfer [ plane_index ]		5119204	0					
ANR	5119387	PtrMemberAccess	pgs -> effective_transfer		5119204	0					
ANR	5119388	Identifier	pgs		5119204	0					
ANR	5119389	Identifier	effective_transfer		5119204	1					
ANR	5119390	Identifier	plane_index		5119204	1					
ANR	5119391	Identifier	proc		5119204	1					
ANR	5119392	Identifier	gs_identity_transfer		5119204	1					
ANR	5119393	CompoundStatement		30:76:1229:1229	5119204	1					
ANR	5119394	ExpressionStatement	have_transfer = true	1373:8:52735:52755	5119204	0	True				
ANR	5119395	AssignmentExpression	have_transfer = true		5119204	0		=			
ANR	5119396	Identifier	have_transfer		5119204	0					
ANR	5119397	Identifier	true		5119204	1					
ANR	5119398	ExpressionStatement	"threshold_inverted = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] ) > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"	1374:8:52765:52947	5119204	1	True				
ANR	5119399	AssignmentExpression	"threshold_inverted = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] ) > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		5119204	0		=			
ANR	5119400	Identifier	threshold_inverted		5119204	0					
ANR	5119401	RelationalExpression	"gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] ) > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		5119204	1		>			
ANR	5119402	CallExpression	"gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"		5119204	0					
ANR	5119403	Callee	gx_map_color_frac		5119204	0					
ANR	5119404	Identifier	gx_map_color_frac		5119204	0					
ANR	5119405	ArgumentList	pgs		5119204	1					
ANR	5119406	Argument	pgs		5119204	0					
ANR	5119407	Identifier	pgs		5119204	0					
ANR	5119408	Argument	frac_0		5119204	1					
ANR	5119409	Identifier	frac_0		5119204	0					
ANR	5119410	Argument	effective_transfer [ plane_index ]		5119204	2					
ANR	5119411	ArrayIndexing	effective_transfer [ plane_index ]		5119204	0					
ANR	5119412	Identifier	effective_transfer		5119204	0					
ANR	5119413	Identifier	plane_index		5119204	1					
ANR	5119414	CallExpression	"gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		5119204	1					
ANR	5119415	Callee	gx_map_color_frac		5119204	0					
ANR	5119416	Identifier	gx_map_color_frac		5119204	0					
ANR	5119417	ArgumentList	pgs		5119204	1					
ANR	5119418	Argument	pgs		5119204	0					
ANR	5119419	Identifier	pgs		5119204	0					
ANR	5119420	Argument	frac_1		5119204	1					
ANR	5119421	Identifier	frac_1		5119204	0					
ANR	5119422	Argument	effective_transfer [ plane_index ]		5119204	2					
ANR	5119423	ArrayIndexing	effective_transfer [ plane_index ]		5119204	0					
ANR	5119424	Identifier	effective_transfer		5119204	0					
ANR	5119425	Identifier	plane_index		5119204	1					
ANR	5119426	ExpressionStatement	max_value = ( dev -> color_info . gray_index == plane_index ) ? dev -> color_info . dither_grays - 1 : dev -> color_info . dither_colors - 1	1383:4:53346:53490	5119204	20	True				
ANR	5119427	AssignmentExpression	max_value = ( dev -> color_info . gray_index == plane_index ) ? dev -> color_info . dither_grays - 1 : dev -> color_info . dither_colors - 1		5119204	0		=			
ANR	5119428	Identifier	max_value		5119204	0					
ANR	5119429	ConditionalExpression	( dev -> color_info . gray_index == plane_index ) ? dev -> color_info . dither_grays - 1 : dev -> color_info . dither_colors - 1		5119204	1					
ANR	5119430	Condition	dev -> color_info . gray_index == plane_index		5119204	0					
ANR	5119431	EqualityExpression	dev -> color_info . gray_index == plane_index		5119204	0		==			
ANR	5119432	MemberAccess	dev -> color_info . gray_index		5119204	0					
ANR	5119433	PtrMemberAccess	dev -> color_info		5119204	0					
ANR	5119434	Identifier	dev		5119204	0					
ANR	5119435	Identifier	color_info		5119204	1					
ANR	5119436	Identifier	gray_index		5119204	1					
ANR	5119437	Identifier	plane_index		5119204	1					
ANR	5119438	AdditiveExpression	dev -> color_info . dither_grays - 1		5119204	1		-			
ANR	5119439	MemberAccess	dev -> color_info . dither_grays		5119204	0					
ANR	5119440	PtrMemberAccess	dev -> color_info		5119204	0					
ANR	5119441	Identifier	dev		5119204	0					
ANR	5119442	Identifier	color_info		5119204	1					
ANR	5119443	Identifier	dither_grays		5119204	1					
ANR	5119444	PrimaryExpression	1		5119204	1					
ANR	5119445	AdditiveExpression	dev -> color_info . dither_colors - 1		5119204	2		-			
ANR	5119446	MemberAccess	dev -> color_info . dither_colors		5119204	0					
ANR	5119447	PtrMemberAccess	dev -> color_info		5119204	0					
ANR	5119448	Identifier	dev		5119204	0					
ANR	5119449	Identifier	color_info		5119204	1					
ANR	5119450	Identifier	dither_colors		5119204	1					
ANR	5119451	PrimaryExpression	1		5119204	1					
ANR	5119452	ExpressionStatement	hsize = num_levels	1386:4:53496:53514	5119204	21	True				
ANR	5119453	AssignmentExpression	hsize = num_levels		5119204	0		=			
ANR	5119454	Identifier	hsize		5119204	0					
ANR	5119455	Identifier	num_levels		5119204	1					
ANR	5119456	ExpressionStatement	nshades = hsize * max_value + 1	1387:4:53520:53551	5119204	22	True				
ANR	5119457	AssignmentExpression	nshades = hsize * max_value + 1		5119204	0		=			
ANR	5119458	Identifier	nshades		5119204	0					
ANR	5119459	AdditiveExpression	hsize * max_value + 1		5119204	1		+			
ANR	5119460	MultiplicativeExpression	hsize * max_value		5119204	0		*			
ANR	5119461	Identifier	hsize		5119204	0					
ANR	5119462	Identifier	max_value		5119204	1					
ANR	5119463	PrimaryExpression	1		5119204	1					
ANR	5119464	ExpressionStatement	t_level = 0	1391:4:53717:53728	5119204	23	True				
ANR	5119465	AssignmentExpression	t_level = 0		5119204	0		=			
ANR	5119466	Identifier	t_level		5119204	0					
ANR	5119467	PrimaryExpression	0		5119204	1					
ANR	5119468	DoStatement	do		5119204	24					
ANR	5119469	CompoundStatement		50:7:2241:2241	5119204	0					
ANR	5119470	ExpressionStatement	t_level ++	1393:8:53747:53756	5119204	0	True				
ANR	5119471	PostIncDecOperationExpression	t_level ++		5119204	0					
ANR	5119472	Identifier	t_level		5119204	0					
ANR	5119473	IncDec	++		5119204	1					
ANR	5119474	ExpressionStatement	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )	1394:8:53766:53842	5119204	1	True				
ANR	5119475	AssignmentExpression	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )		5119204	0		=			
ANR	5119476	Identifier	t_level_frac_color		5119204	0					
ANR	5119477	CallExpression	byte2frac ( threshold_inverted ? 255 - t_level : t_level )		5119204	1					
ANR	5119478	Callee	byte2frac		5119204	0					
ANR	5119479	Identifier	byte2frac		5119204	0					
ANR	5119480	ArgumentList	threshold_inverted ? 255 - t_level : t_level		5119204	1					
ANR	5119481	Argument	threshold_inverted ? 255 - t_level : t_level		5119204	0					
ANR	5119482	ConditionalExpression	threshold_inverted ? 255 - t_level : t_level		5119204	0					
ANR	5119483	Condition	threshold_inverted		5119204	0					
ANR	5119484	Identifier	threshold_inverted		5119204	0					
ANR	5119485	AdditiveExpression	255 - t_level		5119204	1		-			
ANR	5119486	PrimaryExpression	255		5119204	0					
ANR	5119487	Identifier	t_level		5119204	1					
ANR	5119488	Identifier	t_level		5119204	2					
ANR	5119489	IfStatement	if ( have_transfer )		5119204	2					
ANR	5119490	Condition	have_transfer	1395:12:53856:53868	5119204	0	True				
ANR	5119491	Identifier	have_transfer		5119204	0					
ANR	5119492	ExpressionStatement	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"	1396:12:53883:53979	5119204	1	True				
ANR	5119493	AssignmentExpression	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		5119204	0		=			
ANR	5119494	Identifier	t_level_frac_color		5119204	0					
ANR	5119495	CallExpression	"gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		5119204	1					
ANR	5119496	Callee	gx_map_color_frac		5119204	0					
ANR	5119497	Identifier	gx_map_color_frac		5119204	0					
ANR	5119498	ArgumentList	pgs		5119204	1					
ANR	5119499	Argument	pgs		5119204	0					
ANR	5119500	Identifier	pgs		5119204	0					
ANR	5119501	Argument	t_level_frac_color		5119204	1					
ANR	5119502	Identifier	t_level_frac_color		5119204	0					
ANR	5119503	Argument	effective_transfer [ plane_index ]		5119204	2					
ANR	5119504	ArrayIndexing	effective_transfer [ plane_index ]		5119204	0					
ANR	5119505	Identifier	effective_transfer		5119204	0					
ANR	5119506	Identifier	plane_index		5119204	1					
ANR	5119507	ExpressionStatement	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )	1397:8:53989:54045	5119204	3	True				
ANR	5119508	AssignmentExpression	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )		5119204	0		=			
ANR	5119509	Identifier	shade		5119204	0					
ANR	5119510	MultiplicativeExpression	t_level_frac_color * nshades / ( frac_1_long + 1 )		5119204	1		*			
ANR	5119511	Identifier	t_level_frac_color		5119204	0					
ANR	5119512	MultiplicativeExpression	nshades / ( frac_1_long + 1 )		5119204	1		/			
ANR	5119513	Identifier	nshades		5119204	0					
ANR	5119514	AdditiveExpression	frac_1_long + 1		5119204	1		+			
ANR	5119515	Identifier	frac_1_long		5119204	0					
ANR	5119516	PrimaryExpression	1		5119204	1					
ANR	5119517	Condition	shade < num_levels && t_level < 255	1398:13:54060:54094	5119204	1	True				
ANR	5119518	AndExpression	shade < num_levels && t_level < 255		5119204	0		&&			
ANR	5119519	RelationalExpression	shade < num_levels		5119204	0		<			
ANR	5119520	Identifier	shade		5119204	0					
ANR	5119521	Identifier	num_levels		5119204	1					
ANR	5119522	RelationalExpression	t_level < 255		5119204	1		<			
ANR	5119523	Identifier	t_level		5119204	0					
ANR	5119524	PrimaryExpression	255		5119204	1					
ANR	5119525	ForStatement	for ( i = 0 ; i < d_order -> width * d_order -> full_height ; i ++ )		5119204	25					
ANR	5119526	ForInit	i = 0 ;	1400:9:54186:54191	5119204	0	True				
ANR	5119527	AssignmentExpression	i = 0		5119204	0		=			
ANR	5119528	Identifier	i		5119204	0					
ANR	5119529	PrimaryExpression	0		5119204	1					
ANR	5119530	Condition	i < d_order -> width * d_order -> full_height	1400:16:54193:54233	5119204	1	True				
ANR	5119531	RelationalExpression	i < d_order -> width * d_order -> full_height		5119204	0		<			
ANR	5119532	Identifier	i		5119204	0					
ANR	5119533	MultiplicativeExpression	d_order -> width * d_order -> full_height		5119204	1		*			
ANR	5119534	PtrMemberAccess	d_order -> width		5119204	0					
ANR	5119535	Identifier	d_order		5119204	0					
ANR	5119536	Identifier	width		5119204	1					
ANR	5119537	PtrMemberAccess	d_order -> full_height		5119204	1					
ANR	5119538	Identifier	d_order		5119204	0					
ANR	5119539	Identifier	full_height		5119204	1					
ANR	5119540	PostIncDecOperationExpression	i ++	1400:59:54236:54238	5119204	2	True				
ANR	5119541	Identifier	i		5119204	0					
ANR	5119542	IncDec	++		5119204	1					
ANR	5119543	CompoundStatement		58:65:2746:2746	5119204	3					
ANR	5119544	ExpressionStatement	thresh [ i ] = t_level	1401:8:54252:54271	5119204	0	True				
ANR	5119545	AssignmentExpression	thresh [ i ] = t_level		5119204	0		=			
ANR	5119546	ArrayIndexing	thresh [ i ]		5119204	0					
ANR	5119547	Identifier	thresh		5119204	0					
ANR	5119548	Identifier	i		5119204	1					
ANR	5119549	Identifier	t_level		5119204	1					
ANR	5119550	ForStatement	for ( t_level = 1 ; t_level < 256 ; t_level ++ )		5119204	26					
ANR	5119551	ForInit	t_level = 1 ;	1403:9:54288:54299	5119204	0	True				
ANR	5119552	AssignmentExpression	t_level = 1		5119204	0		=			
ANR	5119553	Identifier	t_level		5119204	0					
ANR	5119554	PrimaryExpression	1		5119204	1					
ANR	5119555	Condition	t_level < 256	1403:22:54301:54313	5119204	1	True				
ANR	5119556	RelationalExpression	t_level < 256		5119204	0		<			
ANR	5119557	Identifier	t_level		5119204	0					
ANR	5119558	PrimaryExpression	256		5119204	1					
ANR	5119559	PostIncDecOperationExpression	t_level ++	1403:37:54316:54324	5119204	2	True				
ANR	5119560	Identifier	t_level		5119204	0					
ANR	5119561	IncDec	++		5119204	1					
ANR	5119562	CompoundStatement		61:48:2831:2831	5119204	3					
ANR	5119563	ExpressionStatement	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )	1404:8:54337:54413	5119204	0	True				
ANR	5119564	AssignmentExpression	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )		5119204	0		=			
ANR	5119565	Identifier	t_level_frac_color		5119204	0					
ANR	5119566	CallExpression	byte2frac ( threshold_inverted ? 255 - t_level : t_level )		5119204	1					
ANR	5119567	Callee	byte2frac		5119204	0					
ANR	5119568	Identifier	byte2frac		5119204	0					
ANR	5119569	ArgumentList	threshold_inverted ? 255 - t_level : t_level		5119204	1					
ANR	5119570	Argument	threshold_inverted ? 255 - t_level : t_level		5119204	0					
ANR	5119571	ConditionalExpression	threshold_inverted ? 255 - t_level : t_level		5119204	0					
ANR	5119572	Condition	threshold_inverted		5119204	0					
ANR	5119573	Identifier	threshold_inverted		5119204	0					
ANR	5119574	AdditiveExpression	255 - t_level		5119204	1		-			
ANR	5119575	PrimaryExpression	255		5119204	0					
ANR	5119576	Identifier	t_level		5119204	1					
ANR	5119577	Identifier	t_level		5119204	2					
ANR	5119578	IfStatement	if ( have_transfer )		5119204	1					
ANR	5119579	Condition	have_transfer	1405:12:54427:54439	5119204	0	True				
ANR	5119580	Identifier	have_transfer		5119204	0					
ANR	5119581	ExpressionStatement	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"	1406:12:54454:54550	5119204	1	True				
ANR	5119582	AssignmentExpression	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		5119204	0		=			
ANR	5119583	Identifier	t_level_frac_color		5119204	0					
ANR	5119584	CallExpression	"gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		5119204	1					
ANR	5119585	Callee	gx_map_color_frac		5119204	0					
ANR	5119586	Identifier	gx_map_color_frac		5119204	0					
ANR	5119587	ArgumentList	pgs		5119204	1					
ANR	5119588	Argument	pgs		5119204	0					
ANR	5119589	Identifier	pgs		5119204	0					
ANR	5119590	Argument	t_level_frac_color		5119204	1					
ANR	5119591	Identifier	t_level_frac_color		5119204	0					
ANR	5119592	Argument	effective_transfer [ plane_index ]		5119204	2					
ANR	5119593	ArrayIndexing	effective_transfer [ plane_index ]		5119204	0					
ANR	5119594	Identifier	effective_transfer		5119204	0					
ANR	5119595	Identifier	plane_index		5119204	1					
ANR	5119596	ExpressionStatement	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )	1407:8:54560:54616	5119204	2	True				
ANR	5119597	AssignmentExpression	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )		5119204	0		=			
ANR	5119598	Identifier	shade		5119204	0					
ANR	5119599	MultiplicativeExpression	t_level_frac_color * nshades / ( frac_1_long + 1 )		5119204	1		*			
ANR	5119600	Identifier	t_level_frac_color		5119204	0					
ANR	5119601	MultiplicativeExpression	nshades / ( frac_1_long + 1 )		5119204	1		/			
ANR	5119602	Identifier	nshades		5119204	0					
ANR	5119603	AdditiveExpression	frac_1_long + 1		5119204	1		+			
ANR	5119604	Identifier	frac_1_long		5119204	0					
ANR	5119605	PrimaryExpression	1		5119204	1					
ANR	5119606	IfStatement	if ( shade < num_levels && shade > base_shade )		5119204	3					
ANR	5119607	Condition	shade < num_levels && shade > base_shade	1408:12:54630:54669	5119204	0	True				
ANR	5119608	AndExpression	shade < num_levels && shade > base_shade		5119204	0		&&			
ANR	5119609	RelationalExpression	shade < num_levels		5119204	0		<			
ANR	5119610	Identifier	shade		5119204	0					
ANR	5119611	Identifier	num_levels		5119204	1					
ANR	5119612	RelationalExpression	shade > base_shade		5119204	1		>			
ANR	5119613	Identifier	shade		5119204	0					
ANR	5119614	Identifier	base_shade		5119204	1					
ANR	5119615	CompoundStatement		66:54:3176:3176	5119204	1					
ANR	5119616	IfStatement	if ( d_order -> levels [ shade ] > d_order -> levels [ base_shade ] )		5119204	0					
ANR	5119617	Condition	d_order -> levels [ shade ] > d_order -> levels [ base_shade ]	1409:16:54690:54741	5119204	0	True				
ANR	5119618	RelationalExpression	d_order -> levels [ shade ] > d_order -> levels [ base_shade ]		5119204	0		>			
ANR	5119619	ArrayIndexing	d_order -> levels [ shade ]		5119204	0					
ANR	5119620	PtrMemberAccess	d_order -> levels		5119204	0					
ANR	5119621	Identifier	d_order		5119204	0					
ANR	5119622	Identifier	levels		5119204	1					
ANR	5119623	Identifier	shade		5119204	1					
ANR	5119624	ArrayIndexing	d_order -> levels [ base_shade ]		5119204	1					
ANR	5119625	PtrMemberAccess	d_order -> levels		5119204	0					
ANR	5119626	Identifier	d_order		5119204	0					
ANR	5119627	Identifier	levels		5119204	1					
ANR	5119628	Identifier	base_shade		5119204	1					
ANR	5119629	CompoundStatement		67:70:3248:3248	5119204	1					
ANR	5119630	ForStatement	for ( j = d_order -> levels [ base_shade ] ; j < d_order -> levels [ shade ] ; j ++ )		5119204	0					
ANR	5119631	ForInit	j = d_order -> levels [ base_shade ] ;	1412:21:54903:54934	5119204	0	True				
ANR	5119632	AssignmentExpression	j = d_order -> levels [ base_shade ]		5119204	0		=			
ANR	5119633	Identifier	j		5119204	0					
ANR	5119634	ArrayIndexing	d_order -> levels [ base_shade ]		5119204	1					
ANR	5119635	PtrMemberAccess	d_order -> levels		5119204	0					
ANR	5119636	Identifier	d_order		5119204	0					
ANR	5119637	Identifier	levels		5119204	1					
ANR	5119638	Identifier	base_shade		5119204	1					
ANR	5119639	Condition	j < d_order -> levels [ shade ]	1412:54:54936:54961	5119204	1	True				
ANR	5119640	RelationalExpression	j < d_order -> levels [ shade ]		5119204	0		<			
ANR	5119641	Identifier	j		5119204	0					
ANR	5119642	ArrayIndexing	d_order -> levels [ shade ]		5119204	1					
ANR	5119643	PtrMemberAccess	d_order -> levels		5119204	0					
ANR	5119644	Identifier	d_order		5119204	0					
ANR	5119645	Identifier	levels		5119204	1					
ANR	5119646	Identifier	shade		5119204	1					
ANR	5119647	PostIncDecOperationExpression	j ++	1412:82:54964:54966	5119204	2	True				
ANR	5119648	Identifier	j		5119204	0					
ANR	5119649	IncDec	++		5119204	1					
ANR	5119650	CompoundStatement		71:20:3495:3511	5119204	3					
ANR	5119651	IdentifierDeclStatement	gs_int_point ppt ;	1413:20:54991:55007	5119204	0	True				
ANR	5119652	IdentifierDecl	ppt		5119204	0					
ANR	5119653	IdentifierDeclType	gs_int_point		5119204	0					
ANR	5119654	Identifier	ppt		5119204	1					
ANR	5119655	ExpressionStatement	"code = d_order -> procs -> bit_index ( d_order , j , & ppt )"	1414:20:55029:55079	5119204	1	True				
ANR	5119656	AssignmentExpression	"code = d_order -> procs -> bit_index ( d_order , j , & ppt )"		5119204	0		=			
ANR	5119657	Identifier	code		5119204	0					
ANR	5119658	CallExpression	"d_order -> procs -> bit_index ( d_order , j , & ppt )"		5119204	1					
ANR	5119659	Callee	d_order -> procs -> bit_index		5119204	0					
ANR	5119660	PtrMemberAccess	d_order -> procs -> bit_index		5119204	0					
ANR	5119661	PtrMemberAccess	d_order -> procs		5119204	0					
ANR	5119662	Identifier	d_order		5119204	0					
ANR	5119663	Identifier	procs		5119204	1					
ANR	5119664	Identifier	bit_index		5119204	1					
ANR	5119665	ArgumentList	d_order		5119204	1					
ANR	5119666	Argument	d_order		5119204	0					
ANR	5119667	Identifier	d_order		5119204	0					
ANR	5119668	Argument	j		5119204	1					
ANR	5119669	Identifier	j		5119204	0					
ANR	5119670	Argument	& ppt		5119204	2					
ANR	5119671	UnaryOperationExpression	& ppt		5119204	0					
ANR	5119672	UnaryOperator	&		5119204	0					
ANR	5119673	Identifier	ppt		5119204	1					
ANR	5119674	IfStatement	if ( code < 0 )		5119204	2					
ANR	5119675	Condition	code < 0	1415:24:55105:55112	5119204	0	True				
ANR	5119676	RelationalExpression	code < 0		5119204	0		<			
ANR	5119677	Identifier	code		5119204	0					
ANR	5119678	PrimaryExpression	0		5119204	1					
ANR	5119679	ReturnStatement	return code ;	1416:24:55139:55150	5119204	1	True				
ANR	5119680	Identifier	code		5119204	0					
ANR	5119681	ExpressionStatement	row = ppt . y	1417:20:55172:55183	5119204	3	True				
ANR	5119682	AssignmentExpression	row = ppt . y		5119204	0		=			
ANR	5119683	Identifier	row		5119204	0					
ANR	5119684	MemberAccess	ppt . y		5119204	1					
ANR	5119685	Identifier	ppt		5119204	0					
ANR	5119686	Identifier	y		5119204	1					
ANR	5119687	ExpressionStatement	col = ppt . x	1418:20:55205:55216	5119204	4	True				
ANR	5119688	AssignmentExpression	col = ppt . x		5119204	0		=			
ANR	5119689	Identifier	col		5119204	0					
ANR	5119690	MemberAccess	ppt . x		5119204	1					
ANR	5119691	Identifier	ppt		5119204	0					
ANR	5119692	Identifier	x		5119204	1					
ANR	5119693	IfStatement	if ( col < ( int ) d_order -> width )		5119204	5					
ANR	5119694	Condition	col < ( int ) d_order -> width	1419:24:55242:55266	5119204	0	True				
ANR	5119695	RelationalExpression	col < ( int ) d_order -> width		5119204	0		<			
ANR	5119696	Identifier	col		5119204	0					
ANR	5119697	CastExpression	( int ) d_order -> width		5119204	1					
ANR	5119698	CastTarget	int		5119204	0					
ANR	5119699	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119700	Identifier	d_order		5119204	0					
ANR	5119701	Identifier	width		5119204	1					
ANR	5119702	CompoundStatement		77:52:3774:3774	5119204	1					
ANR	5119703	ForStatement	for ( kk = 0 ; kk < num_repeat ; kk ++ )		5119204	0					
ANR	5119704	ForInit	kk = 0 ;	1420:29:55301:55307	5119204	0	True				
ANR	5119705	AssignmentExpression	kk = 0		5119204	0		=			
ANR	5119706	Identifier	kk		5119204	0					
ANR	5119707	PrimaryExpression	0		5119204	1					
ANR	5119708	Condition	kk < num_repeat	1420:37:55309:55323	5119204	1	True				
ANR	5119709	RelationalExpression	kk < num_repeat		5119204	0		<			
ANR	5119710	Identifier	kk		5119204	0					
ANR	5119711	Identifier	num_repeat		5119204	1					
ANR	5119712	PostIncDecOperationExpression	kk ++	1420:54:55326:55329	5119204	2	True				
ANR	5119713	Identifier	kk		5119204	0					
ANR	5119714	IncDec	++		5119204	1					
ANR	5119715	CompoundStatement		78:60:3836:3836	5119204	3					
ANR	5119716	ExpressionStatement	row_kk = row + kk * d_order -> height	1421:28:55362:55397	5119204	0	True				
ANR	5119717	AssignmentExpression	row_kk = row + kk * d_order -> height		5119204	0		=			
ANR	5119718	Identifier	row_kk		5119204	0					
ANR	5119719	AdditiveExpression	row + kk * d_order -> height		5119204	1		+			
ANR	5119720	Identifier	row		5119204	0					
ANR	5119721	MultiplicativeExpression	kk * d_order -> height		5119204	1		*			
ANR	5119722	Identifier	kk		5119204	0					
ANR	5119723	PtrMemberAccess	d_order -> height		5119204	1					
ANR	5119724	Identifier	d_order		5119204	0					
ANR	5119725	Identifier	height		5119204	1					
ANR	5119726	ExpressionStatement	col_kk = col + kk * shift	1422:28:55427:55452	5119204	1	True				
ANR	5119727	AssignmentExpression	col_kk = col + kk * shift		5119204	0		=			
ANR	5119728	Identifier	col_kk		5119204	0					
ANR	5119729	AdditiveExpression	col + kk * shift		5119204	1		+			
ANR	5119730	Identifier	col		5119204	0					
ANR	5119731	MultiplicativeExpression	kk * shift		5119204	1		*			
ANR	5119732	Identifier	kk		5119204	0					
ANR	5119733	Identifier	shift		5119204	1					
ANR	5119734	ExpressionStatement	col_kk = col_kk % d_order -> width	1423:28:55482:55514	5119204	2	True				
ANR	5119735	AssignmentExpression	col_kk = col_kk % d_order -> width		5119204	0		=			
ANR	5119736	Identifier	col_kk		5119204	0					
ANR	5119737	MultiplicativeExpression	col_kk % d_order -> width		5119204	1		%			
ANR	5119738	Identifier	col_kk		5119204	0					
ANR	5119739	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119740	Identifier	d_order		5119204	0					
ANR	5119741	Identifier	width		5119204	1					
ANR	5119742	ExpressionStatement	* ( thresh + col_kk + ( row_kk * d_order -> width ) ) = t_level	1424:28:55544:55600	5119204	3	True				
ANR	5119743	AssignmentExpression	* ( thresh + col_kk + ( row_kk * d_order -> width ) ) = t_level		5119204	0		=			
ANR	5119744	UnaryOperationExpression	* ( thresh + col_kk + ( row_kk * d_order -> width ) )		5119204	0					
ANR	5119745	UnaryOperator	*		5119204	0					
ANR	5119746	AdditiveExpression	thresh + col_kk + ( row_kk * d_order -> width )		5119204	1		+			
ANR	5119747	Identifier	thresh		5119204	0					
ANR	5119748	AdditiveExpression	col_kk + ( row_kk * d_order -> width )		5119204	1		+			
ANR	5119749	Identifier	col_kk		5119204	0					
ANR	5119750	MultiplicativeExpression	row_kk * d_order -> width		5119204	1		*			
ANR	5119751	Identifier	row_kk		5119204	0					
ANR	5119752	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119753	Identifier	d_order		5119204	0					
ANR	5119754	Identifier	width		5119204	1					
ANR	5119755	Identifier	t_level		5119204	1					
ANR	5119756	ExpressionStatement	base_shade = shade	1429:12:55694:55712	5119204	1	True				
ANR	5119757	AssignmentExpression	base_shade = shade		5119204	0		=			
ANR	5119758	Identifier	base_shade		5119204	0					
ANR	5119759	Identifier	shade		5119204	1					
ANR	5119760	ExpressionStatement	d_order -> threshold = thresh	1432:4:55734:55761	5119204	27	True				
ANR	5119761	AssignmentExpression	d_order -> threshold = thresh		5119204	0		=			
ANR	5119762	PtrMemberAccess	d_order -> threshold		5119204	0					
ANR	5119763	Identifier	d_order		5119204	0					
ANR	5119764	Identifier	threshold		5119204	1					
ANR	5119765	Identifier	thresh		5119204	1					
ANR	5119766	ExpressionStatement	d_order -> threshold_inverted = threshold_inverted	1433:4:55767:55815	5119204	28	True				
ANR	5119767	AssignmentExpression	d_order -> threshold_inverted = threshold_inverted		5119204	0		=			
ANR	5119768	PtrMemberAccess	d_order -> threshold_inverted		5119204	0					
ANR	5119769	Identifier	d_order		5119204	0					
ANR	5119770	Identifier	threshold_inverted		5119204	1					
ANR	5119771	Identifier	threshold_inverted		5119204	1					
ANR	5119772	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE )		5119204	29					
ANR	5119773	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE	1434:8:55825:55881	5119204	0	True				
ANR	5119774	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE		5119204	0		==			
ANR	5119775	MemberAccess	dev -> color_info . polarity		5119204	0					
ANR	5119776	PtrMemberAccess	dev -> color_info		5119204	0					
ANR	5119777	Identifier	dev		5119204	0					
ANR	5119778	Identifier	color_info		5119204	1					
ANR	5119779	Identifier	polarity		5119204	1					
ANR	5119780	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		5119204	1					
ANR	5119781	CompoundStatement		92:67:4388:4388	5119204	1					
ANR	5119782	ForStatement	for ( i = 0 ; i < ( int ) d_order -> height ; i ++ )		5119204	0					
ANR	5119783	ForInit	i = 0 ;	1435:12:55898:55903	5119204	0	True				
ANR	5119784	AssignmentExpression	i = 0		5119204	0		=			
ANR	5119785	Identifier	i		5119204	0					
ANR	5119786	PrimaryExpression	0		5119204	1					
ANR	5119787	Condition	i < ( int ) d_order -> height	1435:19:55905:55928	5119204	1	True				
ANR	5119788	RelationalExpression	i < ( int ) d_order -> height		5119204	0		<			
ANR	5119789	Identifier	i		5119204	0					
ANR	5119790	CastExpression	( int ) d_order -> height		5119204	1					
ANR	5119791	CastTarget	int		5119204	0					
ANR	5119792	PtrMemberAccess	d_order -> height		5119204	1					
ANR	5119793	Identifier	d_order		5119204	0					
ANR	5119794	Identifier	height		5119204	1					
ANR	5119795	PostIncDecOperationExpression	i ++	1435:45:55931:55933	5119204	2	True				
ANR	5119796	Identifier	i		5119204	0					
ANR	5119797	IncDec	++		5119204	1					
ANR	5119798	CompoundStatement		93:51:4441:4441	5119204	3					
ANR	5119799	ForStatement	for ( j = ( int ) d_order -> width - 1 ; j >= 0 ; j -- )		5119204	0					
ANR	5119800	ForInit	j = ( int ) d_order -> width - 1 ;	1436:17:55956:55979	5119204	0	True				
ANR	5119801	AssignmentExpression	j = ( int ) d_order -> width - 1		5119204	0		=			
ANR	5119802	Identifier	j		5119204	0					
ANR	5119803	AdditiveExpression	( int ) d_order -> width - 1		5119204	1		-			
ANR	5119804	CastExpression	( int ) d_order -> width		5119204	0					
ANR	5119805	CastTarget	int		5119204	0					
ANR	5119806	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119807	Identifier	d_order		5119204	0					
ANR	5119808	Identifier	width		5119204	1					
ANR	5119809	PrimaryExpression	1		5119204	1					
ANR	5119810	Condition	j >= 0	1436:42:55981:55984	5119204	1	True				
ANR	5119811	RelationalExpression	j >= 0		5119204	0		>=			
ANR	5119812	Identifier	j		5119204	0					
ANR	5119813	PrimaryExpression	0		5119204	1					
ANR	5119814	PostIncDecOperationExpression	j --	1436:48:55987:55989	5119204	2	True				
ANR	5119815	Identifier	j		5119204	0					
ANR	5119816	IncDec	--		5119204	1					
ANR	5119817	ExpressionStatement	* ( thresh + j + ( i * d_order -> width ) ) = 255 - * ( thresh + j + ( i * d_order -> width ) )	1437:16:56009:56078	5119204	3	True				
ANR	5119818	AssignmentExpression	* ( thresh + j + ( i * d_order -> width ) ) = 255 - * ( thresh + j + ( i * d_order -> width ) )		5119204	0		=			
ANR	5119819	UnaryOperationExpression	* ( thresh + j + ( i * d_order -> width ) )		5119204	0					
ANR	5119820	UnaryOperator	*		5119204	0					
ANR	5119821	AdditiveExpression	thresh + j + ( i * d_order -> width )		5119204	1		+			
ANR	5119822	Identifier	thresh		5119204	0					
ANR	5119823	AdditiveExpression	j + ( i * d_order -> width )		5119204	1		+			
ANR	5119824	Identifier	j		5119204	0					
ANR	5119825	MultiplicativeExpression	i * d_order -> width		5119204	1		*			
ANR	5119826	Identifier	i		5119204	0					
ANR	5119827	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119828	Identifier	d_order		5119204	0					
ANR	5119829	Identifier	width		5119204	1					
ANR	5119830	AdditiveExpression	255 - * ( thresh + j + ( i * d_order -> width ) )		5119204	1		-			
ANR	5119831	PrimaryExpression	255		5119204	0					
ANR	5119832	UnaryOperationExpression	* ( thresh + j + ( i * d_order -> width ) )		5119204	1					
ANR	5119833	UnaryOperator	*		5119204	0					
ANR	5119834	AdditiveExpression	thresh + j + ( i * d_order -> width )		5119204	1		+			
ANR	5119835	Identifier	thresh		5119204	0					
ANR	5119836	AdditiveExpression	j + ( i * d_order -> width )		5119204	1		+			
ANR	5119837	Identifier	j		5119204	0					
ANR	5119838	MultiplicativeExpression	i * d_order -> width		5119204	1		*			
ANR	5119839	Identifier	i		5119204	0					
ANR	5119840	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119841	Identifier	d_order		5119204	0					
ANR	5119842	Identifier	width		5119204	1					
ANR	5119843	IfStatement	if ( gs_debug_c ( 'h' ) )		5119204	30					
ANR	5119844	Condition	gs_debug_c ( 'h' )	1441:9:56118:56132	5119204	0	True				
ANR	5119845	CallExpression	gs_debug_c ( 'h' )		5119204	0					
ANR	5119846	Callee	gs_debug_c		5119204	0					
ANR	5119847	Identifier	gs_debug_c		5119204	0					
ANR	5119848	ArgumentList	'h'		5119204	1					
ANR	5119849	Argument	'h'		5119204	0					
ANR	5119850	PrimaryExpression	'h'		5119204	0					
ANR	5119851	CompoundStatement		99:27:4640:4640	5119204	1					
ANR	5119852	ForStatement	for ( i = 0 ; i < ( int ) d_order -> height ; i ++ )		5119204	0					
ANR	5119853	ForInit	i = 0 ;	1442:14:56152:56155	5119204	0	True				
ANR	5119854	AssignmentExpression	i = 0		5119204	0		=			
ANR	5119855	Identifier	i		5119204	0					
ANR	5119856	PrimaryExpression	0		5119204	1					
ANR	5119857	Condition	i < ( int ) d_order -> height	1442:19:56157:56178	5119204	1	True				
ANR	5119858	RelationalExpression	i < ( int ) d_order -> height		5119204	0		<			
ANR	5119859	Identifier	i		5119204	0					
ANR	5119860	CastExpression	( int ) d_order -> height		5119204	1					
ANR	5119861	CastTarget	int		5119204	0					
ANR	5119862	PtrMemberAccess	d_order -> height		5119204	1					
ANR	5119863	Identifier	d_order		5119204	0					
ANR	5119864	Identifier	height		5119204	1					
ANR	5119865	PostIncDecOperationExpression	i ++	1442:43:56181:56183	5119204	2	True				
ANR	5119866	Identifier	i		5119204	0					
ANR	5119867	IncDec	++		5119204	1					
ANR	5119868	CompoundStatement		100:49:4691:4691	5119204	3					
ANR	5119869	ExpressionStatement	"dmprintf1 ( memory , ""threshold array row %3d= "" , i )"	1443:12:56201:56250	5119204	0	True				
ANR	5119870	CallExpression	"dmprintf1 ( memory , ""threshold array row %3d= "" , i )"		5119204	0					
ANR	5119871	Callee	dmprintf1		5119204	0					
ANR	5119872	Identifier	dmprintf1		5119204	0					
ANR	5119873	ArgumentList	memory		5119204	1					
ANR	5119874	Argument	memory		5119204	0					
ANR	5119875	Identifier	memory		5119204	0					
ANR	5119876	Argument	"""threshold array row %3d= """		5119204	1					
ANR	5119877	PrimaryExpression	"""threshold array row %3d= """		5119204	0					
ANR	5119878	Argument	i		5119204	2					
ANR	5119879	Identifier	i		5119204	0					
ANR	5119880	ForStatement	for ( j = 0 ; j < ( int ) ( d_order -> width ) ; j ++ )		5119204	1					
ANR	5119881	ForInit	j = 0 ;	1444:17:56269:56272	5119204	0	True				
ANR	5119882	AssignmentExpression	j = 0		5119204	0		=			
ANR	5119883	Identifier	j		5119204	0					
ANR	5119884	PrimaryExpression	0		5119204	1					
ANR	5119885	Condition	j < ( int ) ( d_order -> width )	1444:22:56274:56296	5119204	1	True				
ANR	5119886	RelationalExpression	j < ( int ) ( d_order -> width )		5119204	0		<			
ANR	5119887	Identifier	j		5119204	0					
ANR	5119888	CastExpression	( int ) ( d_order -> width )		5119204	1					
ANR	5119889	CastTarget	int		5119204	0					
ANR	5119890	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119891	Identifier	d_order		5119204	0					
ANR	5119892	Identifier	width		5119204	1					
ANR	5119893	PostIncDecOperationExpression	j ++	1444:47:56299:56301	5119204	2	True				
ANR	5119894	Identifier	j		5119204	0					
ANR	5119895	IncDec	++		5119204	1					
ANR	5119896	ExpressionStatement	"dmprintf1 ( memory , ""%3d "" , * ( thresh + j + ( i * d_order -> width ) ) )"	1445:16:56321:56379	5119204	3	True				
ANR	5119897	CallExpression	"dmprintf1 ( memory , ""%3d "" , * ( thresh + j + ( i * d_order -> width ) ) )"		5119204	0					
ANR	5119898	Callee	dmprintf1		5119204	0					
ANR	5119899	Identifier	dmprintf1		5119204	0					
ANR	5119900	ArgumentList	memory		5119204	1					
ANR	5119901	Argument	memory		5119204	0					
ANR	5119902	Identifier	memory		5119204	0					
ANR	5119903	Argument	"""%3d """		5119204	1					
ANR	5119904	PrimaryExpression	"""%3d """		5119204	0					
ANR	5119905	Argument	* ( thresh + j + ( i * d_order -> width ) )		5119204	2					
ANR	5119906	UnaryOperationExpression	* ( thresh + j + ( i * d_order -> width ) )		5119204	0					
ANR	5119907	UnaryOperator	*		5119204	0					
ANR	5119908	AdditiveExpression	thresh + j + ( i * d_order -> width )		5119204	1		+			
ANR	5119909	Identifier	thresh		5119204	0					
ANR	5119910	AdditiveExpression	j + ( i * d_order -> width )		5119204	1		+			
ANR	5119911	Identifier	j		5119204	0					
ANR	5119912	MultiplicativeExpression	i * d_order -> width		5119204	1		*			
ANR	5119913	Identifier	i		5119204	0					
ANR	5119914	PtrMemberAccess	d_order -> width		5119204	1					
ANR	5119915	Identifier	d_order		5119204	0					
ANR	5119916	Identifier	width		5119204	1					
ANR	5119917	ExpressionStatement	"dmprintf ( memory , ""\\n"" )"	1446:12:56393:56415	5119204	2	True				
ANR	5119918	CallExpression	"dmprintf ( memory , ""\\n"" )"		5119204	0					
ANR	5119919	Callee	dmprintf		5119204	0					
ANR	5119920	Identifier	dmprintf		5119204	0					
ANR	5119921	ArgumentList	memory		5119204	1					
ANR	5119922	Argument	memory		5119204	0					
ANR	5119923	Identifier	memory		5119204	0					
ANR	5119924	Argument	"""\\n"""		5119204	1					
ANR	5119925	PrimaryExpression	"""\\n"""		5119204	0					
ANR	5119926	ReturnStatement	return 0 ;	1450:4:56443:56451	5119204	31	True				
ANR	5119927	PrimaryExpression	0		5119204	0					
ANR	5119928	ReturnType	int		5119204	1					
ANR	5119929	Identifier	gx_ht_construct_threshold		5119204	2					
ANR	5119930	ParameterList	"gx_ht_order * d_order , gx_device * dev , const gs_gstate * pgs , int plane_index"		5119204	3					
ANR	5119931	Parameter	gx_ht_order * d_order	1341:27:51390:51409	5119204	0	True				
ANR	5119932	ParameterType	gx_ht_order *		5119204	0					
ANR	5119933	Identifier	d_order		5119204	1					
ANR	5119934	Parameter	gx_device * dev	1341:49:51412:51425	5119204	1	True				
ANR	5119935	ParameterType	gx_device *		5119204	0					
ANR	5119936	Identifier	dev		5119204	1					
ANR	5119937	Parameter	const gs_gstate * pgs	1342:27:51455:51475	5119204	2	True				
ANR	5119938	ParameterType	const gs_gstate *		5119204	0					
ANR	5119939	Identifier	pgs		5119204	1					
ANR	5119940	Parameter	int plane_index	1342:50:51478:51492	5119204	3	True				
ANR	5119941	ParameterType	int		5119204	0					
ANR	5119942	Identifier	plane_index		5119204	1					
ANR	5119943	CFGEntryNode	ENTRY		5119204		True				
ANR	5119944	CFGExitNode	EXIT		5119204		True				
ANR	5119945	Symbol	* d_order		5119204						
ANR	5119946	Symbol	col		5119204						
ANR	5119947	Symbol	num_repeat		5119204						
ANR	5119948	Symbol	hsize		5119204						
ANR	5119949	Symbol	* pgs		5119204						
ANR	5119950	Symbol	d_order -> levels		5119204						
ANR	5119951	Symbol	shift		5119204						
ANR	5119952	Symbol	plane_index		5119204						
ANR	5119953	Symbol	* d_order -> data_memory		5119204						
ANR	5119954	Symbol	t_level_frac_color		5119204						
ANR	5119955	Symbol	effective_transfer		5119204						
ANR	5119956	Symbol	dev -> color_info . dither_colors		5119204						
ANR	5119957	Symbol	* row_kk		5119204						
ANR	5119958	Symbol	* base_shade		5119204						
ANR	5119959	Symbol	ppt . x		5119204						
ANR	5119960	Symbol	ppt . y		5119204						
ANR	5119961	Symbol	dev		5119204						
ANR	5119962	Symbol	dev -> color_info . polarity		5119204						
ANR	5119963	Symbol	base_shade		5119204						
ANR	5119964	Symbol	d_order -> width		5119204						
ANR	5119965	Symbol	pgs -> effective_transfer [ plane_index ] -> proc		5119204						
ANR	5119966	Symbol	gs_debug_c		5119204						
ANR	5119967	Symbol	* ( thresh + j + ( i * d_order -> width ) )		5119204						
ANR	5119968	Symbol	frac_0		5119204						
ANR	5119969	Symbol	dev -> color_info . dither_grays		5119204						
ANR	5119970	Symbol	frac_1		5119204						
ANR	5119971	Symbol	NULL		5119204						
ANR	5119972	Symbol	byte2frac		5119204						
ANR	5119973	Symbol	gs_identity_transfer		5119204						
ANR	5119974	Symbol	shade		5119204						
ANR	5119975	Symbol	* * pgs		5119204						
ANR	5119976	Symbol	* pgs -> effective_transfer		5119204						
ANR	5119977	Symbol	gs_malloc		5119204						
ANR	5119978	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		5119204						
ANR	5119979	Symbol	gx_map_color_frac		5119204						
ANR	5119980	Symbol	d_order -> threshold_inverted		5119204						
ANR	5119981	Symbol	threshold_inverted		5119204						
ANR	5119982	Symbol	* * d_order		5119204						
ANR	5119983	Symbol	true		5119204						
ANR	5119984	Symbol	row_kk		5119204						
ANR	5119985	Symbol	d_order -> threshold		5119204						
ANR	5119986	Symbol	d_order -> num_levels		5119204						
ANR	5119987	Symbol	* d_order -> width		5119204						
ANR	5119988	Symbol	pgs -> effective_transfer		5119204						
ANR	5119989	Symbol	* dev		5119204						
ANR	5119990	Symbol	col_kk		5119204						
ANR	5119991	Symbol	* col_kk		5119204						
ANR	5119992	Symbol	memory		5119204						
ANR	5119993	Symbol	code		5119204						
ANR	5119994	Symbol	d_order -> procs -> bit_index		5119204						
ANR	5119995	Symbol	nshades		5119204						
ANR	5119996	Symbol	* * pgs -> effective_transfer		5119204						
ANR	5119997	Symbol	dev -> color_info		5119204						
ANR	5119998	Symbol	have_transfer		5119204						
ANR	5119999	Symbol	* * plane_index		5119204						
ANR	5120000	Symbol	* effective_transfer		5119204						
ANR	5120001	Symbol	* shade		5119204						
ANR	5120002	Symbol	* * * pgs		5119204						
ANR	5120003	Symbol	row		5119204						
ANR	5120004	Symbol	* d_order -> levels		5119204						
ANR	5120005	Symbol	pgs		5119204						
ANR	5120006	Symbol	thresh		5119204						
ANR	5120007	Symbol	& ppt		5119204						
ANR	5120008	Symbol	d_order -> data_memory		5119204						
ANR	5120009	Symbol	kk		5119204						
ANR	5120010	Symbol	* plane_index		5119204						
ANR	5120011	Symbol	d_order -> shift		5119204						
ANR	5120012	Symbol	d_order -> full_height		5119204						
ANR	5120013	Symbol	d_order -> procs		5119204						
ANR	5120014	Symbol	false		5119204						
ANR	5120015	Symbol	i		5119204						
ANR	5120016	Symbol	t_level		5119204						
ANR	5120017	Symbol	j		5119204						
ANR	5120018	Symbol	frac_1_long		5119204						
ANR	5120019	Symbol	* thresh		5119204						
ANR	5120020	Symbol	d_order		5119204						
ANR	5120021	Symbol	* i		5119204						
ANR	5120022	Symbol	d_order -> height		5119204						
ANR	5120023	Symbol	* j		5119204						
ANR	5120024	Symbol	d_order -> data_memory -> non_gc_memory		5119204						
ANR	5120025	Symbol	ppt		5119204						
ANR	5120026	Symbol	* d_order -> procs		5119204						
ANR	5120027	Symbol	dev -> color_info . gray_index		5119204						
ANR	5120028	Symbol	* ( thresh + col_kk + ( row_kk * d_order -> width ) )		5119204						
ANR	5120029	Symbol	max_value		5119204						
ANR	5120030	Symbol	num_levels		5119204						
