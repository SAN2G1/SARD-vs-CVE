command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6901449	File	data/converged/CVE-2018-16863_ghostpdl/jquant2.c								
ANR	6901450	DeclStmt									
ANR	6901451	Decl							UINT16	UINT16	histcell
ANR	6901452	DeclStmt									
ANR	6901453	Decl							histcell FAR	histcell FAR *	histptr
ANR	6901454	DeclStmt									
ANR	6901455	Decl							histcell	histcell [ HIST_C2_ELEMS ]	hist1d
ANR	6901456	DeclStmt									
ANR	6901457	Decl							hist1d FAR	hist1d FAR *	hist2d
ANR	6901458	DeclStmt									
ANR	6901459	Decl							hist2d	hist2d *	hist3d
ANR	6901460	DeclStmt									
ANR	6901461	Decl							INT16	INT16	FSERROR
ANR	6901462	DeclStmt									
ANR	6901463	Decl							int	int	LOCFSERROR
ANR	6901464	DeclStmt									
ANR	6901465	Decl							INT32	INT32	FSERROR
ANR	6901466	DeclStmt									
ANR	6901467	Decl							INT32	INT32	LOCFSERROR
ANR	6901468	DeclStmt									
ANR	6901469	Decl							FSERROR FAR	FSERROR FAR *	FSERRPTR
ANR	6901470	ClassDef	<unnamed>	194:8:8560:9236							
ANR	6901471	DeclStmt									
ANR	6901472	Decl							struct jpeg_color_quantizer	struct jpeg_color_quantizer	pub
ANR	6901473	DeclStmt									
ANR	6901474	Decl							JSAMPARRAY	JSAMPARRAY	sv_colormap
ANR	6901475	DeclStmt									
ANR	6901476	Decl							int	int	desired
ANR	6901477	DeclStmt									
ANR	6901478	Decl							hist3d	hist3d	histogram
ANR	6901479	DeclStmt									
ANR	6901480	Decl							boolean	boolean	needs_zeroed
ANR	6901481	DeclStmt									
ANR	6901482	Decl							FSERRPTR	FSERRPTR	fserrors
ANR	6901483	DeclStmt									
ANR	6901484	Decl							boolean	boolean	on_odd_row
ANR	6901485	DeclStmt									
ANR	6901486	Decl							int	int *	error_limiter
ANR	6901487	DeclStmt									
ANR	6901488	Decl									my_cquantizer
ANR	6901489	DeclStmt									
ANR	6901490	Decl							my_cquantizer	my_cquantizer *	my_cquantize_ptr
ANR	6901491	Function	prescan_quantize	225:0:9623:10404							
ANR	6901492	FunctionDef	"prescan_quantize (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6901491	0					
ANR	6901493	CompoundStatement		227:0:9728:10404	6901491	0					
ANR	6901494	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	228:2:9732:9796	6901491	0	True				
ANR	6901495	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6901491	0					
ANR	6901496	IdentifierDeclType	my_cquantize_ptr		6901491	0					
ANR	6901497	Identifier	cquantize		6901491	1					
ANR	6901498	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6901491	2		=			
ANR	6901499	Identifier	cquantize		6901491	0					
ANR	6901500	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6901491	1					
ANR	6901501	CastTarget	my_cquantize_ptr		6901491	0					
ANR	6901502	PtrMemberAccess	cinfo -> cquantize		6901491	1					
ANR	6901503	Identifier	cinfo		6901491	0					
ANR	6901504	Identifier	cquantize		6901491	1					
ANR	6901505	Statement	register	229:2:9800:9807	6901491	1	True				
ANR	6901506	IdentifierDeclStatement	JSAMPROW ptr ;	229:11:9809:9821	6901491	2	True				
ANR	6901507	IdentifierDecl	ptr		6901491	0					
ANR	6901508	IdentifierDeclType	JSAMPROW		6901491	0					
ANR	6901509	Identifier	ptr		6901491	1					
ANR	6901510	Statement	register	230:2:9825:9832	6901491	3	True				
ANR	6901511	IdentifierDeclStatement	histptr histp ;	230:11:9834:9847	6901491	4	True				
ANR	6901512	IdentifierDecl	histp		6901491	0					
ANR	6901513	IdentifierDeclType	histptr		6901491	0					
ANR	6901514	Identifier	histp		6901491	1					
ANR	6901515	Statement	register	231:2:9851:9858	6901491	5	True				
ANR	6901516	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	231:11:9860:9899	6901491	6	True				
ANR	6901517	IdentifierDecl	histogram = cquantize -> histogram		6901491	0					
ANR	6901518	IdentifierDeclType	hist3d		6901491	0					
ANR	6901519	Identifier	histogram		6901491	1					
ANR	6901520	AssignmentExpression	histogram = cquantize -> histogram		6901491	2		=			
ANR	6901521	Identifier	histogram		6901491	0					
ANR	6901522	PtrMemberAccess	cquantize -> histogram		6901491	1					
ANR	6901523	Identifier	cquantize		6901491	0					
ANR	6901524	Identifier	histogram		6901491	1					
ANR	6901525	IdentifierDeclStatement	int row ;	232:2:9903:9910	6901491	7	True				
ANR	6901526	IdentifierDecl	row		6901491	0					
ANR	6901527	IdentifierDeclType	int		6901491	0					
ANR	6901528	Identifier	row		6901491	1					
ANR	6901529	IdentifierDeclStatement	JDIMENSION col ;	233:2:9914:9928	6901491	8	True				
ANR	6901530	IdentifierDecl	col		6901491	0					
ANR	6901531	IdentifierDeclType	JDIMENSION		6901491	0					
ANR	6901532	Identifier	col		6901491	1					
ANR	6901533	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	234:2:9932:9970	6901491	9	True				
ANR	6901534	IdentifierDecl	width = cinfo -> output_width		6901491	0					
ANR	6901535	IdentifierDeclType	JDIMENSION		6901491	0					
ANR	6901536	Identifier	width		6901491	1					
ANR	6901537	AssignmentExpression	width = cinfo -> output_width		6901491	2		=			
ANR	6901538	Identifier	width		6901491	0					
ANR	6901539	PtrMemberAccess	cinfo -> output_width		6901491	1					
ANR	6901540	Identifier	cinfo		6901491	0					
ANR	6901541	Identifier	output_width		6901491	1					
ANR	6901542	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6901491	10					
ANR	6901543	ForInit	row = 0 ;	236:7:9980:9987	6901491	0	True				
ANR	6901544	AssignmentExpression	row = 0		6901491	0		=			
ANR	6901545	Identifier	row		6901491	0					
ANR	6901546	PrimaryExpression	0		6901491	1					
ANR	6901547	Condition	row < num_rows	236:16:9989:10002	6901491	1	True				
ANR	6901548	RelationalExpression	row < num_rows		6901491	0		<			
ANR	6901549	Identifier	row		6901491	0					
ANR	6901550	Identifier	num_rows		6901491	1					
ANR	6901551	PostIncDecOperationExpression	row ++	236:32:10005:10009	6901491	2	True				
ANR	6901552	Identifier	row		6901491	0					
ANR	6901553	IncDec	++		6901491	1					
ANR	6901554	CompoundStatement		10:39:283:283	6901491	3					
ANR	6901555	ExpressionStatement	ptr = input_buf [ row ]	237:4:10018:10038	6901491	0	True				
ANR	6901556	AssignmentExpression	ptr = input_buf [ row ]		6901491	0		=			
ANR	6901557	Identifier	ptr		6901491	0					
ANR	6901558	ArrayIndexing	input_buf [ row ]		6901491	1					
ANR	6901559	Identifier	input_buf		6901491	0					
ANR	6901560	Identifier	row		6901491	1					
ANR	6901561	ForStatement	for ( col = width ; col > 0 ; col -- )		6901491	1					
ANR	6901562	ForInit	col = width ;	238:9:10049:10060	6901491	0	True				
ANR	6901563	AssignmentExpression	col = width		6901491	0		=			
ANR	6901564	Identifier	col		6901491	0					
ANR	6901565	Identifier	width		6901491	1					
ANR	6901566	Condition	col > 0	238:22:10062:10068	6901491	1	True				
ANR	6901567	RelationalExpression	col > 0		6901491	0		>			
ANR	6901568	Identifier	col		6901491	0					
ANR	6901569	PrimaryExpression	0		6901491	1					
ANR	6901570	PostIncDecOperationExpression	col --	238:31:10071:10075	6901491	2	True				
ANR	6901571	Identifier	col		6901491	0					
ANR	6901572	IncDec	--		6901491	1					
ANR	6901573	CompoundStatement		12:38:349:349	6901491	3					
ANR	6901574	ExpressionStatement	histp = & histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]	240:6:10143:10268	6901491	0	True				
ANR	6901575	AssignmentExpression	histp = & histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]		6901491	0		=			
ANR	6901576	Identifier	histp		6901491	0					
ANR	6901577	UnaryOperationExpression	& histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]		6901491	1					
ANR	6901578	UnaryOperator	&		6901491	0					
ANR	6901579	ArrayIndexing	histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]		6901491	1					
ANR	6901580	ArrayIndexing	histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ]		6901491	0					
ANR	6901581	ArrayIndexing	histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ]		6901491	0					
ANR	6901582	Identifier	histogram		6901491	0					
ANR	6901583	ShiftExpression	GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT		6901491	1		>>			
ANR	6901584	CallExpression	GETJSAMPLE ( ptr [ 0 ] )		6901491	0					
ANR	6901585	Callee	GETJSAMPLE		6901491	0					
ANR	6901586	Identifier	GETJSAMPLE		6901491	0					
ANR	6901587	ArgumentList	ptr [ 0 ]		6901491	1					
ANR	6901588	Argument	ptr [ 0 ]		6901491	0					
ANR	6901589	ArrayIndexing	ptr [ 0 ]		6901491	0					
ANR	6901590	Identifier	ptr		6901491	0					
ANR	6901591	PrimaryExpression	0		6901491	1					
ANR	6901592	Identifier	C0_SHIFT		6901491	1					
ANR	6901593	ShiftExpression	GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT		6901491	1		>>			
ANR	6901594	CallExpression	GETJSAMPLE ( ptr [ 1 ] )		6901491	0					
ANR	6901595	Callee	GETJSAMPLE		6901491	0					
ANR	6901596	Identifier	GETJSAMPLE		6901491	0					
ANR	6901597	ArgumentList	ptr [ 1 ]		6901491	1					
ANR	6901598	Argument	ptr [ 1 ]		6901491	0					
ANR	6901599	ArrayIndexing	ptr [ 1 ]		6901491	0					
ANR	6901600	Identifier	ptr		6901491	0					
ANR	6901601	PrimaryExpression	1		6901491	1					
ANR	6901602	Identifier	C1_SHIFT		6901491	1					
ANR	6901603	ShiftExpression	GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT		6901491	1		>>			
ANR	6901604	CallExpression	GETJSAMPLE ( ptr [ 2 ] )		6901491	0					
ANR	6901605	Callee	GETJSAMPLE		6901491	0					
ANR	6901606	Identifier	GETJSAMPLE		6901491	0					
ANR	6901607	ArgumentList	ptr [ 2 ]		6901491	1					
ANR	6901608	Argument	ptr [ 2 ]		6901491	0					
ANR	6901609	ArrayIndexing	ptr [ 2 ]		6901491	0					
ANR	6901610	Identifier	ptr		6901491	0					
ANR	6901611	PrimaryExpression	2		6901491	1					
ANR	6901612	Identifier	C2_SHIFT		6901491	1					
ANR	6901613	IfStatement	if ( ++ ( * histp ) <= 0 )		6901491	1					
ANR	6901614	Condition	++ ( * histp ) <= 0	244:10:10348:10362	6901491	0	True				
ANR	6901615	RelationalExpression	++ ( * histp ) <= 0		6901491	0		<=			
ANR	6901616	UnaryExpression	++ ( * histp )		6901491	0					
ANR	6901617	IncDec	++		6901491	0					
ANR	6901618	UnaryOperationExpression	* histp		6901491	1					
ANR	6901619	UnaryOperator	*		6901491	0					
ANR	6901620	Identifier	histp		6901491	1					
ANR	6901621	PrimaryExpression	0		6901491	1					
ANR	6901622	ExpressionStatement	( * histp ) --	245:1:10366:10376	6901491	1	True				
ANR	6901623	PostIncDecOperationExpression	( * histp ) --		6901491	0					
ANR	6901624	UnaryOperationExpression	* histp		6901491	0					
ANR	6901625	UnaryOperator	*		6901491	0					
ANR	6901626	Identifier	histp		6901491	1					
ANR	6901627	IncDec	--		6901491	1					
ANR	6901628	ExpressionStatement	ptr += 3	246:6:10384:10392	6901491	2	True				
ANR	6901629	AssignmentExpression	ptr += 3		6901491	0		+=			
ANR	6901630	Identifier	ptr		6901491	0					
ANR	6901631	PrimaryExpression	3		6901491	1					
ANR	6901632	Identifier	prescan_quantize		6901491	1					
ANR	6901633	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6901491	2					
ANR	6901634	Parameter	j_decompress_ptr cinfo	225:18:9641:9662	6901491	0	True				
ANR	6901635	ParameterType	j_decompress_ptr		6901491	0					
ANR	6901636	Identifier	cinfo		6901491	1					
ANR	6901637	Parameter	JSAMPARRAY input_buf	225:42:9665:9684	6901491	1	True				
ANR	6901638	ParameterType	JSAMPARRAY		6901491	0					
ANR	6901639	Identifier	input_buf		6901491	1					
ANR	6901640	Parameter	JSAMPARRAY output_buf	226:4:9691:9711	6901491	2	True				
ANR	6901641	ParameterType	JSAMPARRAY		6901491	0					
ANR	6901642	Identifier	output_buf		6901491	1					
ANR	6901643	Parameter	int num_rows	226:27:9714:9725	6901491	3	True				
ANR	6901644	ParameterType	int		6901491	0					
ANR	6901645	Identifier	num_rows		6901491	1					
ANR	6901646	CFGEntryNode	ENTRY		6901491		True				
ANR	6901647	CFGExitNode	EXIT		6901491		True				
ANR	6901648	Symbol	col		6901491						
ANR	6901649	Symbol	* * histogram		6901491						
ANR	6901650	Symbol	* row		6901491						
ANR	6901651	Symbol	C2_SHIFT		6901491						
ANR	6901652	Symbol	cquantize		6901491						
ANR	6901653	Symbol	* cquantize		6901491						
ANR	6901654	Symbol	cinfo -> output_width		6901491						
ANR	6901655	Symbol	* C1_SHIFT		6901491						
ANR	6901656	Symbol	cquantize -> histogram		6901491						
ANR	6901657	Symbol	* histp		6901491						
ANR	6901658	Symbol	num_rows		6901491						
ANR	6901659	Symbol	* ptr		6901491						
ANR	6901660	Symbol	C0_SHIFT		6901491						
ANR	6901661	Symbol	row		6901491						
ANR	6901662	Symbol	* cinfo		6901491						
ANR	6901663	Symbol	output_buf		6901491						
ANR	6901664	Symbol	* C0_SHIFT		6901491						
ANR	6901665	Symbol	* GETJSAMPLE		6901491						
ANR	6901666	Symbol	* * C0_SHIFT		6901491						
ANR	6901667	Symbol	GETJSAMPLE		6901491						
ANR	6901668	Symbol	histp		6901491						
ANR	6901669	Symbol	* histogram		6901491						
ANR	6901670	Symbol	ptr		6901491						
ANR	6901671	Symbol	histogram		6901491						
ANR	6901672	Symbol	cinfo -> cquantize		6901491						
ANR	6901673	Symbol	* * GETJSAMPLE		6901491						
ANR	6901674	Symbol	cinfo		6901491						
ANR	6901675	Symbol	width		6901491						
ANR	6901676	Symbol	input_buf		6901491						
ANR	6901677	Symbol	* input_buf		6901491						
ANR	6901678	Symbol	C1_SHIFT		6901491						
ANR	6901679	ClassDef	<unnamed>	259:8:10671:10964							
ANR	6901680	DeclStmt									
ANR	6901681	Decl							int	int	c0min
ANR	6901682	Decl							int	int	c0max
ANR	6901683	DeclStmt									
ANR	6901684	Decl							int	int	c1min
ANR	6901685	Decl							int	int	c1max
ANR	6901686	DeclStmt									
ANR	6901687	Decl							int	int	c2min
ANR	6901688	Decl							int	int	c2max
ANR	6901689	DeclStmt									
ANR	6901690	Decl							INT32	INT32	volume
ANR	6901691	DeclStmt									
ANR	6901692	Decl							long	long	colorcount
ANR	6901693	DeclStmt									
ANR	6901694	Decl									box
ANR	6901695	DeclStmt									
ANR	6901696	Decl							box	box *	boxptr
ANR	6901697	Function	find_biggest_color_pop	274:0:11005:11459							
ANR	6901698	FunctionDef	"find_biggest_color_pop (boxptr boxlist , int numboxes)"		6901697	0					
ANR	6901699	CompoundStatement		277:0:11172:11459	6901697	0					
ANR	6901700	Statement	register	278:2:11176:11183	6901697	0	True				
ANR	6901701	IdentifierDeclStatement	boxptr boxp ;	278:11:11185:11196	6901697	1	True				
ANR	6901702	IdentifierDecl	boxp		6901697	0					
ANR	6901703	IdentifierDeclType	boxptr		6901697	0					
ANR	6901704	Identifier	boxp		6901697	1					
ANR	6901705	Statement	register	279:2:11200:11207	6901697	2	True				
ANR	6901706	IdentifierDeclStatement	int i ;	279:11:11209:11214	6901697	3	True				
ANR	6901707	IdentifierDecl	i		6901697	0					
ANR	6901708	IdentifierDeclType	int		6901697	0					
ANR	6901709	Identifier	i		6901697	1					
ANR	6901710	Statement	register	280:2:11218:11225	6901697	4	True				
ANR	6901711	IdentifierDeclStatement	long maxc = 0 ;	280:11:11227:11240	6901697	5	True				
ANR	6901712	IdentifierDecl	maxc = 0		6901697	0					
ANR	6901713	IdentifierDeclType	long		6901697	0					
ANR	6901714	Identifier	maxc		6901697	1					
ANR	6901715	AssignmentExpression	maxc = 0		6901697	2		=			
ANR	6901716	Identifier	maxc		6901697	0					
ANR	6901717	PrimaryExpression	0		6901697	1					
ANR	6901718	IdentifierDeclStatement	boxptr which = NULL ;	281:2:11244:11263	6901697	6	True				
ANR	6901719	IdentifierDecl	which = NULL		6901697	0					
ANR	6901720	IdentifierDeclType	boxptr		6901697	0					
ANR	6901721	Identifier	which		6901697	1					
ANR	6901722	AssignmentExpression	which = NULL		6901697	2		=			
ANR	6901723	Identifier	NULL		6901697	0					
ANR	6901724	Identifier	NULL		6901697	1					
ANR	6901725	ForStatement	"for ( i = 0 , boxp = boxlist ; i < numboxes ; i ++ , boxp ++ )"		6901697	7					
ANR	6901726	ForInit	"i = 0 , boxp = boxlist ;"	283:7:11275:11296	6901697	0	True				
ANR	6901727	Expression	"i = 0 , boxp = boxlist"		6901697	0					
ANR	6901728	AssignmentExpression	i = 0		6901697	0		=			
ANR	6901729	Identifier	i		6901697	0					
ANR	6901730	PrimaryExpression	0		6901697	1					
ANR	6901731	AssignmentExpression	boxp = boxlist		6901697	1		=			
ANR	6901732	Identifier	boxp		6901697	0					
ANR	6901733	Identifier	boxlist		6901697	1					
ANR	6901734	Condition	i < numboxes	283:30:11298:11309	6901697	1	True				
ANR	6901735	RelationalExpression	i < numboxes		6901697	0		<			
ANR	6901736	Identifier	i		6901697	0					
ANR	6901737	Identifier	numboxes		6901697	1					
ANR	6901738	Expression	"i ++ , boxp ++"	283:44:11312:11322	6901697	2	True				
ANR	6901739	PostIncDecOperationExpression	i ++		6901697	0					
ANR	6901740	Identifier	i		6901697	0					
ANR	6901741	IncDec	++		6901697	1					
ANR	6901742	PostIncDecOperationExpression	boxp ++		6901697	1					
ANR	6901743	Identifier	boxp		6901697	0					
ANR	6901744	IncDec	++		6901697	1					
ANR	6901745	CompoundStatement		7:57:152:152	6901697	3					
ANR	6901746	IfStatement	if ( boxp -> colorcount > maxc && boxp -> volume > 0 )		6901697	0					
ANR	6901747	Condition	boxp -> colorcount > maxc && boxp -> volume > 0	284:8:11335:11377	6901697	0	True				
ANR	6901748	AndExpression	boxp -> colorcount > maxc && boxp -> volume > 0		6901697	0		&&			
ANR	6901749	RelationalExpression	boxp -> colorcount > maxc		6901697	0		>			
ANR	6901750	PtrMemberAccess	boxp -> colorcount		6901697	0					
ANR	6901751	Identifier	boxp		6901697	0					
ANR	6901752	Identifier	colorcount		6901697	1					
ANR	6901753	Identifier	maxc		6901697	1					
ANR	6901754	RelationalExpression	boxp -> volume > 0		6901697	1		>			
ANR	6901755	PtrMemberAccess	boxp -> volume		6901697	0					
ANR	6901756	Identifier	boxp		6901697	0					
ANR	6901757	Identifier	volume		6901697	1					
ANR	6901758	PrimaryExpression	0		6901697	1					
ANR	6901759	CompoundStatement		8:53:207:207	6901697	1					
ANR	6901760	ExpressionStatement	which = boxp	285:6:11388:11400	6901697	0	True				
ANR	6901761	AssignmentExpression	which = boxp		6901697	0		=			
ANR	6901762	Identifier	which		6901697	0					
ANR	6901763	Identifier	boxp		6901697	1					
ANR	6901764	ExpressionStatement	maxc = boxp -> colorcount	286:6:11408:11431	6901697	1	True				
ANR	6901765	AssignmentExpression	maxc = boxp -> colorcount		6901697	0		=			
ANR	6901766	Identifier	maxc		6901697	0					
ANR	6901767	PtrMemberAccess	boxp -> colorcount		6901697	1					
ANR	6901768	Identifier	boxp		6901697	0					
ANR	6901769	Identifier	colorcount		6901697	1					
ANR	6901770	ReturnStatement	return which ;	289:2:11445:11457	6901697	8	True				
ANR	6901771	Identifier	which		6901697	0					
ANR	6901772	Identifier	find_biggest_color_pop		6901697	1					
ANR	6901773	ParameterList	"boxptr boxlist , int numboxes"		6901697	2					
ANR	6901774	Parameter	boxptr boxlist	274:24:11029:11042	6901697	0	True				
ANR	6901775	ParameterType	boxptr		6901697	0					
ANR	6901776	Identifier	boxlist		6901697	1					
ANR	6901777	Parameter	int numboxes	274:40:11045:11056	6901697	1	True				
ANR	6901778	ParameterType	int		6901697	0					
ANR	6901779	Identifier	numboxes		6901697	1					
ANR	6901780	CFGEntryNode	ENTRY		6901697		True				
ANR	6901781	CFGExitNode	EXIT		6901697		True				
ANR	6901782	Symbol	numboxes		6901697						
ANR	6901783	Symbol	which		6901697						
ANR	6901784	Symbol	boxp -> colorcount		6901697						
ANR	6901785	Symbol	boxlist		6901697						
ANR	6901786	Symbol	NULL		6901697						
ANR	6901787	Symbol	boxp -> volume		6901697						
ANR	6901788	Symbol	* boxp		6901697						
ANR	6901789	Symbol	i		6901697						
ANR	6901790	Symbol	boxp		6901697						
ANR	6901791	Symbol	maxc		6901697						
ANR	6901792	Function	find_biggest_volume	294:0:11477:11900							
ANR	6901793	FunctionDef	"find_biggest_volume (boxptr boxlist , int numboxes)"		6901792	0					
ANR	6901794	CompoundStatement		297:0:11640:11900	6901792	0					
ANR	6901795	Statement	register	298:2:11644:11651	6901792	0	True				
ANR	6901796	IdentifierDeclStatement	boxptr boxp ;	298:11:11653:11664	6901792	1	True				
ANR	6901797	IdentifierDecl	boxp		6901792	0					
ANR	6901798	IdentifierDeclType	boxptr		6901792	0					
ANR	6901799	Identifier	boxp		6901792	1					
ANR	6901800	Statement	register	299:2:11668:11675	6901792	2	True				
ANR	6901801	IdentifierDeclStatement	int i ;	299:11:11677:11682	6901792	3	True				
ANR	6901802	IdentifierDecl	i		6901792	0					
ANR	6901803	IdentifierDeclType	int		6901792	0					
ANR	6901804	Identifier	i		6901792	1					
ANR	6901805	Statement	register	300:2:11686:11693	6901792	4	True				
ANR	6901806	IdentifierDeclStatement	INT32 maxv = 0 ;	300:11:11695:11709	6901792	5	True				
ANR	6901807	IdentifierDecl	maxv = 0		6901792	0					
ANR	6901808	IdentifierDeclType	INT32		6901792	0					
ANR	6901809	Identifier	maxv		6901792	1					
ANR	6901810	AssignmentExpression	maxv = 0		6901792	2		=			
ANR	6901811	Identifier	maxv		6901792	0					
ANR	6901812	PrimaryExpression	0		6901792	1					
ANR	6901813	IdentifierDeclStatement	boxptr which = NULL ;	301:2:11713:11732	6901792	6	True				
ANR	6901814	IdentifierDecl	which = NULL		6901792	0					
ANR	6901815	IdentifierDeclType	boxptr		6901792	0					
ANR	6901816	Identifier	which		6901792	1					
ANR	6901817	AssignmentExpression	which = NULL		6901792	2		=			
ANR	6901818	Identifier	NULL		6901792	0					
ANR	6901819	Identifier	NULL		6901792	1					
ANR	6901820	ForStatement	"for ( i = 0 , boxp = boxlist ; i < numboxes ; i ++ , boxp ++ )"		6901792	7					
ANR	6901821	ForInit	"i = 0 , boxp = boxlist ;"	303:7:11744:11765	6901792	0	True				
ANR	6901822	Expression	"i = 0 , boxp = boxlist"		6901792	0					
ANR	6901823	AssignmentExpression	i = 0		6901792	0		=			
ANR	6901824	Identifier	i		6901792	0					
ANR	6901825	PrimaryExpression	0		6901792	1					
ANR	6901826	AssignmentExpression	boxp = boxlist		6901792	1		=			
ANR	6901827	Identifier	boxp		6901792	0					
ANR	6901828	Identifier	boxlist		6901792	1					
ANR	6901829	Condition	i < numboxes	303:30:11767:11778	6901792	1	True				
ANR	6901830	RelationalExpression	i < numboxes		6901792	0		<			
ANR	6901831	Identifier	i		6901792	0					
ANR	6901832	Identifier	numboxes		6901792	1					
ANR	6901833	Expression	"i ++ , boxp ++"	303:44:11781:11791	6901792	2	True				
ANR	6901834	PostIncDecOperationExpression	i ++		6901792	0					
ANR	6901835	Identifier	i		6901792	0					
ANR	6901836	IncDec	++		6901792	1					
ANR	6901837	PostIncDecOperationExpression	boxp ++		6901792	1					
ANR	6901838	Identifier	boxp		6901792	0					
ANR	6901839	IncDec	++		6901792	1					
ANR	6901840	CompoundStatement		7:57:153:153	6901792	3					
ANR	6901841	IfStatement	if ( boxp -> volume > maxv )		6901792	0					
ANR	6901842	Condition	boxp -> volume > maxv	304:8:11804:11822	6901792	0	True				
ANR	6901843	RelationalExpression	boxp -> volume > maxv		6901792	0		>			
ANR	6901844	PtrMemberAccess	boxp -> volume		6901792	0					
ANR	6901845	Identifier	boxp		6901792	0					
ANR	6901846	Identifier	volume		6901792	1					
ANR	6901847	Identifier	maxv		6901792	1					
ANR	6901848	CompoundStatement		8:29:184:184	6901792	1					
ANR	6901849	ExpressionStatement	which = boxp	305:6:11833:11845	6901792	0	True				
ANR	6901850	AssignmentExpression	which = boxp		6901792	0		=			
ANR	6901851	Identifier	which		6901792	0					
ANR	6901852	Identifier	boxp		6901792	1					
ANR	6901853	ExpressionStatement	maxv = boxp -> volume	306:6:11853:11872	6901792	1	True				
ANR	6901854	AssignmentExpression	maxv = boxp -> volume		6901792	0		=			
ANR	6901855	Identifier	maxv		6901792	0					
ANR	6901856	PtrMemberAccess	boxp -> volume		6901792	1					
ANR	6901857	Identifier	boxp		6901792	0					
ANR	6901858	Identifier	volume		6901792	1					
ANR	6901859	ReturnStatement	return which ;	309:2:11886:11898	6901792	8	True				
ANR	6901860	Identifier	which		6901792	0					
ANR	6901861	Identifier	find_biggest_volume		6901792	1					
ANR	6901862	ParameterList	"boxptr boxlist , int numboxes"		6901792	2					
ANR	6901863	Parameter	boxptr boxlist	294:21:11498:11511	6901792	0	True				
ANR	6901864	ParameterType	boxptr		6901792	0					
ANR	6901865	Identifier	boxlist		6901792	1					
ANR	6901866	Parameter	int numboxes	294:37:11514:11525	6901792	1	True				
ANR	6901867	ParameterType	int		6901792	0					
ANR	6901868	Identifier	numboxes		6901792	1					
ANR	6901869	CFGEntryNode	ENTRY		6901792		True				
ANR	6901870	CFGExitNode	EXIT		6901792		True				
ANR	6901871	Symbol	numboxes		6901792						
ANR	6901872	Symbol	which		6901792						
ANR	6901873	Symbol	maxv		6901792						
ANR	6901874	Symbol	boxlist		6901792						
ANR	6901875	Symbol	NULL		6901792						
ANR	6901876	Symbol	boxp -> volume		6901792						
ANR	6901877	Symbol	* boxp		6901792						
ANR	6901878	Symbol	i		6901792						
ANR	6901879	Symbol	boxp		6901792						
ANR	6901880	Function	update_box	314:0:11916:15163							
ANR	6901881	FunctionDef	"update_box (j_decompress_ptr cinfo , boxptr boxp)"		6901880	0					
ANR	6901882	CompoundStatement		317:0:12086:15163	6901880	0					
ANR	6901883	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	318:2:12090:12154	6901880	0	True				
ANR	6901884	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6901880	0					
ANR	6901885	IdentifierDeclType	my_cquantize_ptr		6901880	0					
ANR	6901886	Identifier	cquantize		6901880	1					
ANR	6901887	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6901880	2		=			
ANR	6901888	Identifier	cquantize		6901880	0					
ANR	6901889	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6901880	1					
ANR	6901890	CastTarget	my_cquantize_ptr		6901880	0					
ANR	6901891	PtrMemberAccess	cinfo -> cquantize		6901880	1					
ANR	6901892	Identifier	cinfo		6901880	0					
ANR	6901893	Identifier	cquantize		6901880	1					
ANR	6901894	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	319:2:12158:12197	6901880	1	True				
ANR	6901895	IdentifierDecl	histogram = cquantize -> histogram		6901880	0					
ANR	6901896	IdentifierDeclType	hist3d		6901880	0					
ANR	6901897	Identifier	histogram		6901880	1					
ANR	6901898	AssignmentExpression	histogram = cquantize -> histogram		6901880	2		=			
ANR	6901899	Identifier	histogram		6901880	0					
ANR	6901900	PtrMemberAccess	cquantize -> histogram		6901880	1					
ANR	6901901	Identifier	cquantize		6901880	0					
ANR	6901902	Identifier	histogram		6901880	1					
ANR	6901903	IdentifierDeclStatement	histptr histp ;	320:2:12201:12214	6901880	2	True				
ANR	6901904	IdentifierDecl	histp		6901880	0					
ANR	6901905	IdentifierDeclType	histptr		6901880	0					
ANR	6901906	Identifier	histp		6901880	1					
ANR	6901907	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	321:2:12218:12230	6901880	3	True				
ANR	6901908	IdentifierDecl	c0		6901880	0					
ANR	6901909	IdentifierDeclType	int		6901880	0					
ANR	6901910	Identifier	c0		6901880	1					
ANR	6901911	IdentifierDecl	c1		6901880	1					
ANR	6901912	IdentifierDeclType	int		6901880	0					
ANR	6901913	Identifier	c1		6901880	1					
ANR	6901914	IdentifierDecl	c2		6901880	2					
ANR	6901915	IdentifierDeclType	int		6901880	0					
ANR	6901916	Identifier	c2		6901880	1					
ANR	6901917	IdentifierDeclStatement	"int c0min , c0max , c1min , c1max , c2min , c2max ;"	322:2:12234:12273	6901880	4	True				
ANR	6901918	IdentifierDecl	c0min		6901880	0					
ANR	6901919	IdentifierDeclType	int		6901880	0					
ANR	6901920	Identifier	c0min		6901880	1					
ANR	6901921	IdentifierDecl	c0max		6901880	1					
ANR	6901922	IdentifierDeclType	int		6901880	0					
ANR	6901923	Identifier	c0max		6901880	1					
ANR	6901924	IdentifierDecl	c1min		6901880	2					
ANR	6901925	IdentifierDeclType	int		6901880	0					
ANR	6901926	Identifier	c1min		6901880	1					
ANR	6901927	IdentifierDecl	c1max		6901880	3					
ANR	6901928	IdentifierDeclType	int		6901880	0					
ANR	6901929	Identifier	c1max		6901880	1					
ANR	6901930	IdentifierDecl	c2min		6901880	4					
ANR	6901931	IdentifierDeclType	int		6901880	0					
ANR	6901932	Identifier	c2min		6901880	1					
ANR	6901933	IdentifierDecl	c2max		6901880	5					
ANR	6901934	IdentifierDeclType	int		6901880	0					
ANR	6901935	Identifier	c2max		6901880	1					
ANR	6901936	IdentifierDeclStatement	"INT32 dist0 , dist1 , dist2 ;"	323:2:12277:12300	6901880	5	True				
ANR	6901937	IdentifierDecl	dist0		6901880	0					
ANR	6901938	IdentifierDeclType	INT32		6901880	0					
ANR	6901939	Identifier	dist0		6901880	1					
ANR	6901940	IdentifierDecl	dist1		6901880	1					
ANR	6901941	IdentifierDeclType	INT32		6901880	0					
ANR	6901942	Identifier	dist1		6901880	1					
ANR	6901943	IdentifierDecl	dist2		6901880	2					
ANR	6901944	IdentifierDeclType	INT32		6901880	0					
ANR	6901945	Identifier	dist2		6901880	1					
ANR	6901946	IdentifierDeclStatement	long ccount ;	324:2:12304:12315	6901880	6	True				
ANR	6901947	IdentifierDecl	ccount		6901880	0					
ANR	6901948	IdentifierDeclType	long		6901880	0					
ANR	6901949	Identifier	ccount		6901880	1					
ANR	6901950	ExpressionStatement	c0min = boxp -> c0min	326:2:12322:12341	6901880	7	True				
ANR	6901951	AssignmentExpression	c0min = boxp -> c0min		6901880	0		=			
ANR	6901952	Identifier	c0min		6901880	0					
ANR	6901953	PtrMemberAccess	boxp -> c0min		6901880	1					
ANR	6901954	Identifier	boxp		6901880	0					
ANR	6901955	Identifier	c0min		6901880	1					
ANR	6901956	ExpressionStatement	c0max = boxp -> c0max	326:24:12344:12363	6901880	8	True				
ANR	6901957	AssignmentExpression	c0max = boxp -> c0max		6901880	0		=			
ANR	6901958	Identifier	c0max		6901880	0					
ANR	6901959	PtrMemberAccess	boxp -> c0max		6901880	1					
ANR	6901960	Identifier	boxp		6901880	0					
ANR	6901961	Identifier	c0max		6901880	1					
ANR	6901962	ExpressionStatement	c1min = boxp -> c1min	327:2:12367:12386	6901880	9	True				
ANR	6901963	AssignmentExpression	c1min = boxp -> c1min		6901880	0		=			
ANR	6901964	Identifier	c1min		6901880	0					
ANR	6901965	PtrMemberAccess	boxp -> c1min		6901880	1					
ANR	6901966	Identifier	boxp		6901880	0					
ANR	6901967	Identifier	c1min		6901880	1					
ANR	6901968	ExpressionStatement	c1max = boxp -> c1max	327:24:12389:12408	6901880	10	True				
ANR	6901969	AssignmentExpression	c1max = boxp -> c1max		6901880	0		=			
ANR	6901970	Identifier	c1max		6901880	0					
ANR	6901971	PtrMemberAccess	boxp -> c1max		6901880	1					
ANR	6901972	Identifier	boxp		6901880	0					
ANR	6901973	Identifier	c1max		6901880	1					
ANR	6901974	ExpressionStatement	c2min = boxp -> c2min	328:2:12412:12431	6901880	11	True				
ANR	6901975	AssignmentExpression	c2min = boxp -> c2min		6901880	0		=			
ANR	6901976	Identifier	c2min		6901880	0					
ANR	6901977	PtrMemberAccess	boxp -> c2min		6901880	1					
ANR	6901978	Identifier	boxp		6901880	0					
ANR	6901979	Identifier	c2min		6901880	1					
ANR	6901980	ExpressionStatement	c2max = boxp -> c2max	328:24:12434:12453	6901880	12	True				
ANR	6901981	AssignmentExpression	c2max = boxp -> c2max		6901880	0		=			
ANR	6901982	Identifier	c2max		6901880	0					
ANR	6901983	PtrMemberAccess	boxp -> c2max		6901880	1					
ANR	6901984	Identifier	boxp		6901880	0					
ANR	6901985	Identifier	c2max		6901880	1					
ANR	6901986	IfStatement	if ( c0max > c0min )		6901880	13					
ANR	6901987	Condition	c0max > c0min	330:6:12464:12476	6901880	0	True				
ANR	6901988	RelationalExpression	c0max > c0min		6901880	0		>			
ANR	6901989	Identifier	c0max		6901880	0					
ANR	6901990	Identifier	c0min		6901880	1					
ANR	6901991	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6901880	1					
ANR	6901992	ForInit	c0 = c0min ;	331:9:12488:12498	6901880	0	True				
ANR	6901993	AssignmentExpression	c0 = c0min		6901880	0		=			
ANR	6901994	Identifier	c0		6901880	0					
ANR	6901995	Identifier	c0min		6901880	1					
ANR	6901996	Condition	c0 <= c0max	331:21:12500:12510	6901880	1	True				
ANR	6901997	RelationalExpression	c0 <= c0max		6901880	0		<=			
ANR	6901998	Identifier	c0		6901880	0					
ANR	6901999	Identifier	c0max		6901880	1					
ANR	6902000	PostIncDecOperationExpression	c0 ++	331:34:12513:12516	6901880	2	True				
ANR	6902001	Identifier	c0		6901880	0					
ANR	6902002	IncDec	++		6901880	1					
ANR	6902003	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6901880	3					
ANR	6902004	ForInit	c1 = c1min ;	332:11:12530:12540	6901880	0	True				
ANR	6902005	AssignmentExpression	c1 = c1min		6901880	0		=			
ANR	6902006	Identifier	c1		6901880	0					
ANR	6902007	Identifier	c1min		6901880	1					
ANR	6902008	Condition	c1 <= c1max	332:23:12542:12552	6901880	1	True				
ANR	6902009	RelationalExpression	c1 <= c1max		6901880	0		<=			
ANR	6902010	Identifier	c1		6901880	0					
ANR	6902011	Identifier	c1max		6901880	1					
ANR	6902012	PostIncDecOperationExpression	c1 ++	332:36:12555:12558	6901880	2	True				
ANR	6902013	Identifier	c1		6901880	0					
ANR	6902014	IncDec	++		6901880	1					
ANR	6902015	CompoundStatement		16:42:474:474	6901880	3					
ANR	6902016	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	333:1:12564:12598	6901880	0	True				
ANR	6902017	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6901880	0		=			
ANR	6902018	Identifier	histp		6901880	0					
ANR	6902019	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902020	UnaryOperator	&		6901880	0					
ANR	6902021	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902022	ArrayIndexing	histogram [ c0 ] [ c1 ]		6901880	0					
ANR	6902023	ArrayIndexing	histogram [ c0 ]		6901880	0					
ANR	6902024	Identifier	histogram		6901880	0					
ANR	6902025	Identifier	c0		6901880	1					
ANR	6902026	Identifier	c1		6901880	1					
ANR	6902027	Identifier	c2min		6901880	1					
ANR	6902028	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6901880	1					
ANR	6902029	ForInit	c2 = c2min ;	334:6:12606:12616	6901880	0	True				
ANR	6902030	AssignmentExpression	c2 = c2min		6901880	0		=			
ANR	6902031	Identifier	c2		6901880	0					
ANR	6902032	Identifier	c2min		6901880	1					
ANR	6902033	Condition	c2 <= c2max	334:18:12618:12628	6901880	1	True				
ANR	6902034	RelationalExpression	c2 <= c2max		6901880	0		<=			
ANR	6902035	Identifier	c2		6901880	0					
ANR	6902036	Identifier	c2max		6901880	1					
ANR	6902037	PostIncDecOperationExpression	c2 ++	334:31:12631:12634	6901880	2	True				
ANR	6902038	Identifier	c2		6901880	0					
ANR	6902039	IncDec	++		6901880	1					
ANR	6902040	IfStatement	if ( * histp ++ != 0 )		6901880	3					
ANR	6902041	Condition	* histp ++ != 0	335:7:12644:12656	6901880	0	True				
ANR	6902042	EqualityExpression	* histp ++ != 0		6901880	0		!=			
ANR	6902043	UnaryOperationExpression	* histp ++		6901880	0					
ANR	6902044	UnaryOperator	*		6901880	0					
ANR	6902045	PostIncDecOperationExpression	histp ++		6901880	1					
ANR	6902046	Identifier	histp		6901880	0					
ANR	6902047	IncDec	++		6901880	1					
ANR	6902048	PrimaryExpression	0		6901880	1					
ANR	6902049	CompoundStatement		19:22:572:572	6901880	1					
ANR	6902050	ExpressionStatement	boxp -> c0min = c0min = c0	336:5:12666:12690	6901880	0	True				
ANR	6902051	AssignmentExpression	boxp -> c0min = c0min = c0		6901880	0		=			
ANR	6902052	PtrMemberAccess	boxp -> c0min		6901880	0					
ANR	6902053	Identifier	boxp		6901880	0					
ANR	6902054	Identifier	c0min		6901880	1					
ANR	6902055	AssignmentExpression	c0min = c0		6901880	1		=			
ANR	6902056	Identifier	c0min		6901880	0					
ANR	6902057	Identifier	c0		6901880	1					
ANR	6902058	GotoStatement	goto have_c0min ;	337:5:12697:12712	6901880	1	True				
ANR	6902059	Identifier	have_c0min		6901880	0					
ANR	6902060	Label	have_c0min :	340:1:12728:12738	6901880	14	True				
ANR	6902061	Identifier	have_c0min		6901880	0					
ANR	6902062	IfStatement	if ( c0max > c0min )		6901880	15					
ANR	6902063	Condition	c0max > c0min	341:6:12746:12758	6901880	0	True				
ANR	6902064	RelationalExpression	c0max > c0min		6901880	0		>			
ANR	6902065	Identifier	c0max		6901880	0					
ANR	6902066	Identifier	c0min		6901880	1					
ANR	6902067	ForStatement	for ( c0 = c0max ; c0 >= c0min ; c0 -- )		6901880	1					
ANR	6902068	ForInit	c0 = c0max ;	342:9:12770:12780	6901880	0	True				
ANR	6902069	AssignmentExpression	c0 = c0max		6901880	0		=			
ANR	6902070	Identifier	c0		6901880	0					
ANR	6902071	Identifier	c0max		6901880	1					
ANR	6902072	Condition	c0 >= c0min	342:21:12782:12792	6901880	1	True				
ANR	6902073	RelationalExpression	c0 >= c0min		6901880	0		>=			
ANR	6902074	Identifier	c0		6901880	0					
ANR	6902075	Identifier	c0min		6901880	1					
ANR	6902076	PostIncDecOperationExpression	c0 --	342:34:12795:12798	6901880	2	True				
ANR	6902077	Identifier	c0		6901880	0					
ANR	6902078	IncDec	--		6901880	1					
ANR	6902079	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6901880	3					
ANR	6902080	ForInit	c1 = c1min ;	343:11:12812:12822	6901880	0	True				
ANR	6902081	AssignmentExpression	c1 = c1min		6901880	0		=			
ANR	6902082	Identifier	c1		6901880	0					
ANR	6902083	Identifier	c1min		6901880	1					
ANR	6902084	Condition	c1 <= c1max	343:23:12824:12834	6901880	1	True				
ANR	6902085	RelationalExpression	c1 <= c1max		6901880	0		<=			
ANR	6902086	Identifier	c1		6901880	0					
ANR	6902087	Identifier	c1max		6901880	1					
ANR	6902088	PostIncDecOperationExpression	c1 ++	343:36:12837:12840	6901880	2	True				
ANR	6902089	Identifier	c1		6901880	0					
ANR	6902090	IncDec	++		6901880	1					
ANR	6902091	CompoundStatement		27:42:756:756	6901880	3					
ANR	6902092	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	344:1:12846:12880	6901880	0	True				
ANR	6902093	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6901880	0		=			
ANR	6902094	Identifier	histp		6901880	0					
ANR	6902095	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902096	UnaryOperator	&		6901880	0					
ANR	6902097	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902098	ArrayIndexing	histogram [ c0 ] [ c1 ]		6901880	0					
ANR	6902099	ArrayIndexing	histogram [ c0 ]		6901880	0					
ANR	6902100	Identifier	histogram		6901880	0					
ANR	6902101	Identifier	c0		6901880	1					
ANR	6902102	Identifier	c1		6901880	1					
ANR	6902103	Identifier	c2min		6901880	1					
ANR	6902104	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6901880	1					
ANR	6902105	ForInit	c2 = c2min ;	345:6:12888:12898	6901880	0	True				
ANR	6902106	AssignmentExpression	c2 = c2min		6901880	0		=			
ANR	6902107	Identifier	c2		6901880	0					
ANR	6902108	Identifier	c2min		6901880	1					
ANR	6902109	Condition	c2 <= c2max	345:18:12900:12910	6901880	1	True				
ANR	6902110	RelationalExpression	c2 <= c2max		6901880	0		<=			
ANR	6902111	Identifier	c2		6901880	0					
ANR	6902112	Identifier	c2max		6901880	1					
ANR	6902113	PostIncDecOperationExpression	c2 ++	345:31:12913:12916	6901880	2	True				
ANR	6902114	Identifier	c2		6901880	0					
ANR	6902115	IncDec	++		6901880	1					
ANR	6902116	IfStatement	if ( * histp ++ != 0 )		6901880	3					
ANR	6902117	Condition	* histp ++ != 0	346:7:12926:12938	6901880	0	True				
ANR	6902118	EqualityExpression	* histp ++ != 0		6901880	0		!=			
ANR	6902119	UnaryOperationExpression	* histp ++		6901880	0					
ANR	6902120	UnaryOperator	*		6901880	0					
ANR	6902121	PostIncDecOperationExpression	histp ++		6901880	1					
ANR	6902122	Identifier	histp		6901880	0					
ANR	6902123	IncDec	++		6901880	1					
ANR	6902124	PrimaryExpression	0		6901880	1					
ANR	6902125	CompoundStatement		30:22:854:854	6901880	1					
ANR	6902126	ExpressionStatement	boxp -> c0max = c0max = c0	347:5:12948:12972	6901880	0	True				
ANR	6902127	AssignmentExpression	boxp -> c0max = c0max = c0		6901880	0		=			
ANR	6902128	PtrMemberAccess	boxp -> c0max		6901880	0					
ANR	6902129	Identifier	boxp		6901880	0					
ANR	6902130	Identifier	c0max		6901880	1					
ANR	6902131	AssignmentExpression	c0max = c0		6901880	1		=			
ANR	6902132	Identifier	c0max		6901880	0					
ANR	6902133	Identifier	c0		6901880	1					
ANR	6902134	GotoStatement	goto have_c0max ;	348:5:12979:12994	6901880	1	True				
ANR	6902135	Identifier	have_c0max		6901880	0					
ANR	6902136	Label	have_c0max :	351:1:13010:13020	6901880	16	True				
ANR	6902137	Identifier	have_c0max		6901880	0					
ANR	6902138	IfStatement	if ( c1max > c1min )		6901880	17					
ANR	6902139	Condition	c1max > c1min	352:6:13028:13040	6901880	0	True				
ANR	6902140	RelationalExpression	c1max > c1min		6901880	0		>			
ANR	6902141	Identifier	c1max		6901880	0					
ANR	6902142	Identifier	c1min		6901880	1					
ANR	6902143	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6901880	1					
ANR	6902144	ForInit	c1 = c1min ;	353:9:13052:13062	6901880	0	True				
ANR	6902145	AssignmentExpression	c1 = c1min		6901880	0		=			
ANR	6902146	Identifier	c1		6901880	0					
ANR	6902147	Identifier	c1min		6901880	1					
ANR	6902148	Condition	c1 <= c1max	353:21:13064:13074	6901880	1	True				
ANR	6902149	RelationalExpression	c1 <= c1max		6901880	0		<=			
ANR	6902150	Identifier	c1		6901880	0					
ANR	6902151	Identifier	c1max		6901880	1					
ANR	6902152	PostIncDecOperationExpression	c1 ++	353:34:13077:13080	6901880	2	True				
ANR	6902153	Identifier	c1		6901880	0					
ANR	6902154	IncDec	++		6901880	1					
ANR	6902155	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6901880	3					
ANR	6902156	ForInit	c0 = c0min ;	354:11:13094:13104	6901880	0	True				
ANR	6902157	AssignmentExpression	c0 = c0min		6901880	0		=			
ANR	6902158	Identifier	c0		6901880	0					
ANR	6902159	Identifier	c0min		6901880	1					
ANR	6902160	Condition	c0 <= c0max	354:23:13106:13116	6901880	1	True				
ANR	6902161	RelationalExpression	c0 <= c0max		6901880	0		<=			
ANR	6902162	Identifier	c0		6901880	0					
ANR	6902163	Identifier	c0max		6901880	1					
ANR	6902164	PostIncDecOperationExpression	c0 ++	354:36:13119:13122	6901880	2	True				
ANR	6902165	Identifier	c0		6901880	0					
ANR	6902166	IncDec	++		6901880	1					
ANR	6902167	CompoundStatement		38:42:1038:1038	6901880	3					
ANR	6902168	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	355:1:13128:13162	6901880	0	True				
ANR	6902169	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6901880	0		=			
ANR	6902170	Identifier	histp		6901880	0					
ANR	6902171	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902172	UnaryOperator	&		6901880	0					
ANR	6902173	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902174	ArrayIndexing	histogram [ c0 ] [ c1 ]		6901880	0					
ANR	6902175	ArrayIndexing	histogram [ c0 ]		6901880	0					
ANR	6902176	Identifier	histogram		6901880	0					
ANR	6902177	Identifier	c0		6901880	1					
ANR	6902178	Identifier	c1		6901880	1					
ANR	6902179	Identifier	c2min		6901880	1					
ANR	6902180	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6901880	1					
ANR	6902181	ForInit	c2 = c2min ;	356:6:13170:13180	6901880	0	True				
ANR	6902182	AssignmentExpression	c2 = c2min		6901880	0		=			
ANR	6902183	Identifier	c2		6901880	0					
ANR	6902184	Identifier	c2min		6901880	1					
ANR	6902185	Condition	c2 <= c2max	356:18:13182:13192	6901880	1	True				
ANR	6902186	RelationalExpression	c2 <= c2max		6901880	0		<=			
ANR	6902187	Identifier	c2		6901880	0					
ANR	6902188	Identifier	c2max		6901880	1					
ANR	6902189	PostIncDecOperationExpression	c2 ++	356:31:13195:13198	6901880	2	True				
ANR	6902190	Identifier	c2		6901880	0					
ANR	6902191	IncDec	++		6901880	1					
ANR	6902192	IfStatement	if ( * histp ++ != 0 )		6901880	3					
ANR	6902193	Condition	* histp ++ != 0	357:7:13208:13220	6901880	0	True				
ANR	6902194	EqualityExpression	* histp ++ != 0		6901880	0		!=			
ANR	6902195	UnaryOperationExpression	* histp ++		6901880	0					
ANR	6902196	UnaryOperator	*		6901880	0					
ANR	6902197	PostIncDecOperationExpression	histp ++		6901880	1					
ANR	6902198	Identifier	histp		6901880	0					
ANR	6902199	IncDec	++		6901880	1					
ANR	6902200	PrimaryExpression	0		6901880	1					
ANR	6902201	CompoundStatement		41:22:1136:1136	6901880	1					
ANR	6902202	ExpressionStatement	boxp -> c1min = c1min = c1	358:5:13230:13254	6901880	0	True				
ANR	6902203	AssignmentExpression	boxp -> c1min = c1min = c1		6901880	0		=			
ANR	6902204	PtrMemberAccess	boxp -> c1min		6901880	0					
ANR	6902205	Identifier	boxp		6901880	0					
ANR	6902206	Identifier	c1min		6901880	1					
ANR	6902207	AssignmentExpression	c1min = c1		6901880	1		=			
ANR	6902208	Identifier	c1min		6901880	0					
ANR	6902209	Identifier	c1		6901880	1					
ANR	6902210	GotoStatement	goto have_c1min ;	359:5:13261:13276	6901880	1	True				
ANR	6902211	Identifier	have_c1min		6901880	0					
ANR	6902212	Label	have_c1min :	362:1:13292:13302	6901880	18	True				
ANR	6902213	Identifier	have_c1min		6901880	0					
ANR	6902214	IfStatement	if ( c1max > c1min )		6901880	19					
ANR	6902215	Condition	c1max > c1min	363:6:13310:13322	6901880	0	True				
ANR	6902216	RelationalExpression	c1max > c1min		6901880	0		>			
ANR	6902217	Identifier	c1max		6901880	0					
ANR	6902218	Identifier	c1min		6901880	1					
ANR	6902219	ForStatement	for ( c1 = c1max ; c1 >= c1min ; c1 -- )		6901880	1					
ANR	6902220	ForInit	c1 = c1max ;	364:9:13334:13344	6901880	0	True				
ANR	6902221	AssignmentExpression	c1 = c1max		6901880	0		=			
ANR	6902222	Identifier	c1		6901880	0					
ANR	6902223	Identifier	c1max		6901880	1					
ANR	6902224	Condition	c1 >= c1min	364:21:13346:13356	6901880	1	True				
ANR	6902225	RelationalExpression	c1 >= c1min		6901880	0		>=			
ANR	6902226	Identifier	c1		6901880	0					
ANR	6902227	Identifier	c1min		6901880	1					
ANR	6902228	PostIncDecOperationExpression	c1 --	364:34:13359:13362	6901880	2	True				
ANR	6902229	Identifier	c1		6901880	0					
ANR	6902230	IncDec	--		6901880	1					
ANR	6902231	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6901880	3					
ANR	6902232	ForInit	c0 = c0min ;	365:11:13376:13386	6901880	0	True				
ANR	6902233	AssignmentExpression	c0 = c0min		6901880	0		=			
ANR	6902234	Identifier	c0		6901880	0					
ANR	6902235	Identifier	c0min		6901880	1					
ANR	6902236	Condition	c0 <= c0max	365:23:13388:13398	6901880	1	True				
ANR	6902237	RelationalExpression	c0 <= c0max		6901880	0		<=			
ANR	6902238	Identifier	c0		6901880	0					
ANR	6902239	Identifier	c0max		6901880	1					
ANR	6902240	PostIncDecOperationExpression	c0 ++	365:36:13401:13404	6901880	2	True				
ANR	6902241	Identifier	c0		6901880	0					
ANR	6902242	IncDec	++		6901880	1					
ANR	6902243	CompoundStatement		49:42:1320:1320	6901880	3					
ANR	6902244	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	366:1:13410:13444	6901880	0	True				
ANR	6902245	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6901880	0		=			
ANR	6902246	Identifier	histp		6901880	0					
ANR	6902247	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902248	UnaryOperator	&		6901880	0					
ANR	6902249	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902250	ArrayIndexing	histogram [ c0 ] [ c1 ]		6901880	0					
ANR	6902251	ArrayIndexing	histogram [ c0 ]		6901880	0					
ANR	6902252	Identifier	histogram		6901880	0					
ANR	6902253	Identifier	c0		6901880	1					
ANR	6902254	Identifier	c1		6901880	1					
ANR	6902255	Identifier	c2min		6901880	1					
ANR	6902256	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6901880	1					
ANR	6902257	ForInit	c2 = c2min ;	367:6:13452:13462	6901880	0	True				
ANR	6902258	AssignmentExpression	c2 = c2min		6901880	0		=			
ANR	6902259	Identifier	c2		6901880	0					
ANR	6902260	Identifier	c2min		6901880	1					
ANR	6902261	Condition	c2 <= c2max	367:18:13464:13474	6901880	1	True				
ANR	6902262	RelationalExpression	c2 <= c2max		6901880	0		<=			
ANR	6902263	Identifier	c2		6901880	0					
ANR	6902264	Identifier	c2max		6901880	1					
ANR	6902265	PostIncDecOperationExpression	c2 ++	367:31:13477:13480	6901880	2	True				
ANR	6902266	Identifier	c2		6901880	0					
ANR	6902267	IncDec	++		6901880	1					
ANR	6902268	IfStatement	if ( * histp ++ != 0 )		6901880	3					
ANR	6902269	Condition	* histp ++ != 0	368:7:13490:13502	6901880	0	True				
ANR	6902270	EqualityExpression	* histp ++ != 0		6901880	0		!=			
ANR	6902271	UnaryOperationExpression	* histp ++		6901880	0					
ANR	6902272	UnaryOperator	*		6901880	0					
ANR	6902273	PostIncDecOperationExpression	histp ++		6901880	1					
ANR	6902274	Identifier	histp		6901880	0					
ANR	6902275	IncDec	++		6901880	1					
ANR	6902276	PrimaryExpression	0		6901880	1					
ANR	6902277	CompoundStatement		52:22:1418:1418	6901880	1					
ANR	6902278	ExpressionStatement	boxp -> c1max = c1max = c1	369:5:13512:13536	6901880	0	True				
ANR	6902279	AssignmentExpression	boxp -> c1max = c1max = c1		6901880	0		=			
ANR	6902280	PtrMemberAccess	boxp -> c1max		6901880	0					
ANR	6902281	Identifier	boxp		6901880	0					
ANR	6902282	Identifier	c1max		6901880	1					
ANR	6902283	AssignmentExpression	c1max = c1		6901880	1		=			
ANR	6902284	Identifier	c1max		6901880	0					
ANR	6902285	Identifier	c1		6901880	1					
ANR	6902286	GotoStatement	goto have_c1max ;	370:5:13543:13558	6901880	1	True				
ANR	6902287	Identifier	have_c1max		6901880	0					
ANR	6902288	Label	have_c1max :	373:1:13574:13584	6901880	20	True				
ANR	6902289	Identifier	have_c1max		6901880	0					
ANR	6902290	IfStatement	if ( c2max > c2min )		6901880	21					
ANR	6902291	Condition	c2max > c2min	374:6:13592:13604	6901880	0	True				
ANR	6902292	RelationalExpression	c2max > c2min		6901880	0		>			
ANR	6902293	Identifier	c2max		6901880	0					
ANR	6902294	Identifier	c2min		6901880	1					
ANR	6902295	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6901880	1					
ANR	6902296	ForInit	c2 = c2min ;	375:9:13616:13626	6901880	0	True				
ANR	6902297	AssignmentExpression	c2 = c2min		6901880	0		=			
ANR	6902298	Identifier	c2		6901880	0					
ANR	6902299	Identifier	c2min		6901880	1					
ANR	6902300	Condition	c2 <= c2max	375:21:13628:13638	6901880	1	True				
ANR	6902301	RelationalExpression	c2 <= c2max		6901880	0		<=			
ANR	6902302	Identifier	c2		6901880	0					
ANR	6902303	Identifier	c2max		6901880	1					
ANR	6902304	PostIncDecOperationExpression	c2 ++	375:34:13641:13644	6901880	2	True				
ANR	6902305	Identifier	c2		6901880	0					
ANR	6902306	IncDec	++		6901880	1					
ANR	6902307	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6901880	3					
ANR	6902308	ForInit	c0 = c0min ;	376:11:13658:13668	6901880	0	True				
ANR	6902309	AssignmentExpression	c0 = c0min		6901880	0		=			
ANR	6902310	Identifier	c0		6901880	0					
ANR	6902311	Identifier	c0min		6901880	1					
ANR	6902312	Condition	c0 <= c0max	376:23:13670:13680	6901880	1	True				
ANR	6902313	RelationalExpression	c0 <= c0max		6901880	0		<=			
ANR	6902314	Identifier	c0		6901880	0					
ANR	6902315	Identifier	c0max		6901880	1					
ANR	6902316	PostIncDecOperationExpression	c0 ++	376:36:13683:13686	6901880	2	True				
ANR	6902317	Identifier	c0		6901880	0					
ANR	6902318	IncDec	++		6901880	1					
ANR	6902319	CompoundStatement		60:42:1602:1602	6901880	3					
ANR	6902320	ExpressionStatement	histp = & histogram [ c0 ] [ c1min ] [ c2 ]	377:1:13692:13726	6901880	0	True				
ANR	6902321	AssignmentExpression	histp = & histogram [ c0 ] [ c1min ] [ c2 ]		6901880	0		=			
ANR	6902322	Identifier	histp		6901880	0					
ANR	6902323	UnaryOperationExpression	& histogram [ c0 ] [ c1min ] [ c2 ]		6901880	1					
ANR	6902324	UnaryOperator	&		6901880	0					
ANR	6902325	ArrayIndexing	histogram [ c0 ] [ c1min ] [ c2 ]		6901880	1					
ANR	6902326	ArrayIndexing	histogram [ c0 ] [ c1min ]		6901880	0					
ANR	6902327	ArrayIndexing	histogram [ c0 ]		6901880	0					
ANR	6902328	Identifier	histogram		6901880	0					
ANR	6902329	Identifier	c0		6901880	1					
ANR	6902330	Identifier	c1min		6901880	1					
ANR	6902331	Identifier	c2		6901880	1					
ANR	6902332	ForStatement	"for ( c1 = c1min ; c1 <= c1max ; c1 ++ , histp += HIST_C2_ELEMS )"		6901880	1					
ANR	6902333	ForInit	c1 = c1min ;	378:6:13734:13744	6901880	0	True				
ANR	6902334	AssignmentExpression	c1 = c1min		6901880	0		=			
ANR	6902335	Identifier	c1		6901880	0					
ANR	6902336	Identifier	c1min		6901880	1					
ANR	6902337	Condition	c1 <= c1max	378:18:13746:13756	6901880	1	True				
ANR	6902338	RelationalExpression	c1 <= c1max		6901880	0		<=			
ANR	6902339	Identifier	c1		6901880	0					
ANR	6902340	Identifier	c1max		6901880	1					
ANR	6902341	Expression	"c1 ++ , histp += HIST_C2_ELEMS"	378:31:13759:13786	6901880	2	True				
ANR	6902342	PostIncDecOperationExpression	c1 ++		6901880	0					
ANR	6902343	Identifier	c1		6901880	0					
ANR	6902344	IncDec	++		6901880	1					
ANR	6902345	AssignmentExpression	histp += HIST_C2_ELEMS		6901880	1		+=			
ANR	6902346	Identifier	histp		6901880	0					
ANR	6902347	Identifier	HIST_C2_ELEMS		6901880	1					
ANR	6902348	IfStatement	if ( * histp != 0 )		6901880	3					
ANR	6902349	Condition	* histp != 0	379:7:13796:13806	6901880	0	True				
ANR	6902350	EqualityExpression	* histp != 0		6901880	0		!=			
ANR	6902351	UnaryOperationExpression	* histp		6901880	0					
ANR	6902352	UnaryOperator	*		6901880	0					
ANR	6902353	Identifier	histp		6901880	1					
ANR	6902354	PrimaryExpression	0		6901880	1					
ANR	6902355	CompoundStatement		63:20:1722:1722	6901880	1					
ANR	6902356	ExpressionStatement	boxp -> c2min = c2min = c2	380:5:13816:13840	6901880	0	True				
ANR	6902357	AssignmentExpression	boxp -> c2min = c2min = c2		6901880	0		=			
ANR	6902358	PtrMemberAccess	boxp -> c2min		6901880	0					
ANR	6902359	Identifier	boxp		6901880	0					
ANR	6902360	Identifier	c2min		6901880	1					
ANR	6902361	AssignmentExpression	c2min = c2		6901880	1		=			
ANR	6902362	Identifier	c2min		6901880	0					
ANR	6902363	Identifier	c2		6901880	1					
ANR	6902364	GotoStatement	goto have_c2min ;	381:5:13847:13862	6901880	1	True				
ANR	6902365	Identifier	have_c2min		6901880	0					
ANR	6902366	Label	have_c2min :	384:1:13878:13888	6901880	22	True				
ANR	6902367	Identifier	have_c2min		6901880	0					
ANR	6902368	IfStatement	if ( c2max > c2min )		6901880	23					
ANR	6902369	Condition	c2max > c2min	385:6:13896:13908	6901880	0	True				
ANR	6902370	RelationalExpression	c2max > c2min		6901880	0		>			
ANR	6902371	Identifier	c2max		6901880	0					
ANR	6902372	Identifier	c2min		6901880	1					
ANR	6902373	ForStatement	for ( c2 = c2max ; c2 >= c2min ; c2 -- )		6901880	1					
ANR	6902374	ForInit	c2 = c2max ;	386:9:13920:13930	6901880	0	True				
ANR	6902375	AssignmentExpression	c2 = c2max		6901880	0		=			
ANR	6902376	Identifier	c2		6901880	0					
ANR	6902377	Identifier	c2max		6901880	1					
ANR	6902378	Condition	c2 >= c2min	386:21:13932:13942	6901880	1	True				
ANR	6902379	RelationalExpression	c2 >= c2min		6901880	0		>=			
ANR	6902380	Identifier	c2		6901880	0					
ANR	6902381	Identifier	c2min		6901880	1					
ANR	6902382	PostIncDecOperationExpression	c2 --	386:34:13945:13948	6901880	2	True				
ANR	6902383	Identifier	c2		6901880	0					
ANR	6902384	IncDec	--		6901880	1					
ANR	6902385	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6901880	3					
ANR	6902386	ForInit	c0 = c0min ;	387:11:13962:13972	6901880	0	True				
ANR	6902387	AssignmentExpression	c0 = c0min		6901880	0		=			
ANR	6902388	Identifier	c0		6901880	0					
ANR	6902389	Identifier	c0min		6901880	1					
ANR	6902390	Condition	c0 <= c0max	387:23:13974:13984	6901880	1	True				
ANR	6902391	RelationalExpression	c0 <= c0max		6901880	0		<=			
ANR	6902392	Identifier	c0		6901880	0					
ANR	6902393	Identifier	c0max		6901880	1					
ANR	6902394	PostIncDecOperationExpression	c0 ++	387:36:13987:13990	6901880	2	True				
ANR	6902395	Identifier	c0		6901880	0					
ANR	6902396	IncDec	++		6901880	1					
ANR	6902397	CompoundStatement		71:42:1906:1906	6901880	3					
ANR	6902398	ExpressionStatement	histp = & histogram [ c0 ] [ c1min ] [ c2 ]	388:1:13996:14030	6901880	0	True				
ANR	6902399	AssignmentExpression	histp = & histogram [ c0 ] [ c1min ] [ c2 ]		6901880	0		=			
ANR	6902400	Identifier	histp		6901880	0					
ANR	6902401	UnaryOperationExpression	& histogram [ c0 ] [ c1min ] [ c2 ]		6901880	1					
ANR	6902402	UnaryOperator	&		6901880	0					
ANR	6902403	ArrayIndexing	histogram [ c0 ] [ c1min ] [ c2 ]		6901880	1					
ANR	6902404	ArrayIndexing	histogram [ c0 ] [ c1min ]		6901880	0					
ANR	6902405	ArrayIndexing	histogram [ c0 ]		6901880	0					
ANR	6902406	Identifier	histogram		6901880	0					
ANR	6902407	Identifier	c0		6901880	1					
ANR	6902408	Identifier	c1min		6901880	1					
ANR	6902409	Identifier	c2		6901880	1					
ANR	6902410	ForStatement	"for ( c1 = c1min ; c1 <= c1max ; c1 ++ , histp += HIST_C2_ELEMS )"		6901880	1					
ANR	6902411	ForInit	c1 = c1min ;	389:6:14038:14048	6901880	0	True				
ANR	6902412	AssignmentExpression	c1 = c1min		6901880	0		=			
ANR	6902413	Identifier	c1		6901880	0					
ANR	6902414	Identifier	c1min		6901880	1					
ANR	6902415	Condition	c1 <= c1max	389:18:14050:14060	6901880	1	True				
ANR	6902416	RelationalExpression	c1 <= c1max		6901880	0		<=			
ANR	6902417	Identifier	c1		6901880	0					
ANR	6902418	Identifier	c1max		6901880	1					
ANR	6902419	Expression	"c1 ++ , histp += HIST_C2_ELEMS"	389:31:14063:14090	6901880	2	True				
ANR	6902420	PostIncDecOperationExpression	c1 ++		6901880	0					
ANR	6902421	Identifier	c1		6901880	0					
ANR	6902422	IncDec	++		6901880	1					
ANR	6902423	AssignmentExpression	histp += HIST_C2_ELEMS		6901880	1		+=			
ANR	6902424	Identifier	histp		6901880	0					
ANR	6902425	Identifier	HIST_C2_ELEMS		6901880	1					
ANR	6902426	IfStatement	if ( * histp != 0 )		6901880	3					
ANR	6902427	Condition	* histp != 0	390:7:14100:14110	6901880	0	True				
ANR	6902428	EqualityExpression	* histp != 0		6901880	0		!=			
ANR	6902429	UnaryOperationExpression	* histp		6901880	0					
ANR	6902430	UnaryOperator	*		6901880	0					
ANR	6902431	Identifier	histp		6901880	1					
ANR	6902432	PrimaryExpression	0		6901880	1					
ANR	6902433	CompoundStatement		74:20:2026:2026	6901880	1					
ANR	6902434	ExpressionStatement	boxp -> c2max = c2max = c2	391:5:14120:14144	6901880	0	True				
ANR	6902435	AssignmentExpression	boxp -> c2max = c2max = c2		6901880	0		=			
ANR	6902436	PtrMemberAccess	boxp -> c2max		6901880	0					
ANR	6902437	Identifier	boxp		6901880	0					
ANR	6902438	Identifier	c2max		6901880	1					
ANR	6902439	AssignmentExpression	c2max = c2		6901880	1		=			
ANR	6902440	Identifier	c2max		6901880	0					
ANR	6902441	Identifier	c2		6901880	1					
ANR	6902442	GotoStatement	goto have_c2max ;	392:5:14151:14166	6901880	1	True				
ANR	6902443	Identifier	have_c2max		6901880	0					
ANR	6902444	Label	have_c2max :	395:1:14182:14192	6901880	24	True				
ANR	6902445	Identifier	have_c2max		6901880	0					
ANR	6902446	ExpressionStatement	dist0 = ( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE	405:2:14626:14674	6901880	25	True				
ANR	6902447	AssignmentExpression	dist0 = ( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE		6901880	0		=			
ANR	6902448	Identifier	dist0		6901880	0					
ANR	6902449	MultiplicativeExpression	( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE		6901880	1		*			
ANR	6902450	ShiftExpression	( c0max - c0min ) << C0_SHIFT		6901880	0		<<			
ANR	6902451	AdditiveExpression	c0max - c0min		6901880	0		-			
ANR	6902452	Identifier	c0max		6901880	0					
ANR	6902453	Identifier	c0min		6901880	1					
ANR	6902454	Identifier	C0_SHIFT		6901880	1					
ANR	6902455	Identifier	C0_SCALE		6901880	1					
ANR	6902456	ExpressionStatement	dist1 = ( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE	406:2:14678:14726	6901880	26	True				
ANR	6902457	AssignmentExpression	dist1 = ( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE		6901880	0		=			
ANR	6902458	Identifier	dist1		6901880	0					
ANR	6902459	MultiplicativeExpression	( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE		6901880	1		*			
ANR	6902460	ShiftExpression	( c1max - c1min ) << C1_SHIFT		6901880	0		<<			
ANR	6902461	AdditiveExpression	c1max - c1min		6901880	0		-			
ANR	6902462	Identifier	c1max		6901880	0					
ANR	6902463	Identifier	c1min		6901880	1					
ANR	6902464	Identifier	C1_SHIFT		6901880	1					
ANR	6902465	Identifier	C1_SCALE		6901880	1					
ANR	6902466	ExpressionStatement	dist2 = ( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE	407:2:14730:14778	6901880	27	True				
ANR	6902467	AssignmentExpression	dist2 = ( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE		6901880	0		=			
ANR	6902468	Identifier	dist2		6901880	0					
ANR	6902469	MultiplicativeExpression	( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE		6901880	1		*			
ANR	6902470	ShiftExpression	( c2max - c2min ) << C2_SHIFT		6901880	0		<<			
ANR	6902471	AdditiveExpression	c2max - c2min		6901880	0		-			
ANR	6902472	Identifier	c2max		6901880	0					
ANR	6902473	Identifier	c2min		6901880	1					
ANR	6902474	Identifier	C2_SHIFT		6901880	1					
ANR	6902475	Identifier	C2_SCALE		6901880	1					
ANR	6902476	ExpressionStatement	boxp -> volume = dist0 * dist0 + dist1 * dist1 + dist2 * dist2	408:2:14782:14836	6901880	28	True				
ANR	6902477	AssignmentExpression	boxp -> volume = dist0 * dist0 + dist1 * dist1 + dist2 * dist2		6901880	0		=			
ANR	6902478	PtrMemberAccess	boxp -> volume		6901880	0					
ANR	6902479	Identifier	boxp		6901880	0					
ANR	6902480	Identifier	volume		6901880	1					
ANR	6902481	AdditiveExpression	dist0 * dist0 + dist1 * dist1 + dist2 * dist2		6901880	1		+			
ANR	6902482	MultiplicativeExpression	dist0 * dist0		6901880	0		*			
ANR	6902483	Identifier	dist0		6901880	0					
ANR	6902484	Identifier	dist0		6901880	1					
ANR	6902485	AdditiveExpression	dist1 * dist1 + dist2 * dist2		6901880	1		+			
ANR	6902486	MultiplicativeExpression	dist1 * dist1		6901880	0		*			
ANR	6902487	Identifier	dist1		6901880	0					
ANR	6902488	Identifier	dist1		6901880	1					
ANR	6902489	MultiplicativeExpression	dist2 * dist2		6901880	1		*			
ANR	6902490	Identifier	dist2		6901880	0					
ANR	6902491	Identifier	dist2		6901880	1					
ANR	6902492	ExpressionStatement	ccount = 0	411:2:14907:14917	6901880	29	True				
ANR	6902493	AssignmentExpression	ccount = 0		6901880	0		=			
ANR	6902494	Identifier	ccount		6901880	0					
ANR	6902495	PrimaryExpression	0		6901880	1					
ANR	6902496	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6901880	30					
ANR	6902497	ForInit	c0 = c0min ;	412:7:14926:14936	6901880	0	True				
ANR	6902498	AssignmentExpression	c0 = c0min		6901880	0		=			
ANR	6902499	Identifier	c0		6901880	0					
ANR	6902500	Identifier	c0min		6901880	1					
ANR	6902501	Condition	c0 <= c0max	412:19:14938:14948	6901880	1	True				
ANR	6902502	RelationalExpression	c0 <= c0max		6901880	0		<=			
ANR	6902503	Identifier	c0		6901880	0					
ANR	6902504	Identifier	c0max		6901880	1					
ANR	6902505	PostIncDecOperationExpression	c0 ++	412:32:14951:14954	6901880	2	True				
ANR	6902506	Identifier	c0		6901880	0					
ANR	6902507	IncDec	++		6901880	1					
ANR	6902508	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6901880	3					
ANR	6902509	ForInit	c1 = c1min ;	413:9:14966:14976	6901880	0	True				
ANR	6902510	AssignmentExpression	c1 = c1min		6901880	0		=			
ANR	6902511	Identifier	c1		6901880	0					
ANR	6902512	Identifier	c1min		6901880	1					
ANR	6902513	Condition	c1 <= c1max	413:21:14978:14988	6901880	1	True				
ANR	6902514	RelationalExpression	c1 <= c1max		6901880	0		<=			
ANR	6902515	Identifier	c1		6901880	0					
ANR	6902516	Identifier	c1max		6901880	1					
ANR	6902517	PostIncDecOperationExpression	c1 ++	413:34:14991:14994	6901880	2	True				
ANR	6902518	Identifier	c1		6901880	0					
ANR	6902519	IncDec	++		6901880	1					
ANR	6902520	CompoundStatement		97:40:2910:2910	6901880	3					
ANR	6902521	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	414:6:15005:15039	6901880	0	True				
ANR	6902522	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6901880	0		=			
ANR	6902523	Identifier	histp		6901880	0					
ANR	6902524	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902525	UnaryOperator	&		6901880	0					
ANR	6902526	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6901880	1					
ANR	6902527	ArrayIndexing	histogram [ c0 ] [ c1 ]		6901880	0					
ANR	6902528	ArrayIndexing	histogram [ c0 ]		6901880	0					
ANR	6902529	Identifier	histogram		6901880	0					
ANR	6902530	Identifier	c0		6901880	1					
ANR	6902531	Identifier	c1		6901880	1					
ANR	6902532	Identifier	c2min		6901880	1					
ANR	6902533	ForStatement	"for ( c2 = c2min ; c2 <= c2max ; c2 ++ , histp ++ )"		6901880	1					
ANR	6902534	ForInit	c2 = c2min ;	415:11:15052:15062	6901880	0	True				
ANR	6902535	AssignmentExpression	c2 = c2min		6901880	0		=			
ANR	6902536	Identifier	c2		6901880	0					
ANR	6902537	Identifier	c2min		6901880	1					
ANR	6902538	Condition	c2 <= c2max	415:23:15064:15074	6901880	1	True				
ANR	6902539	RelationalExpression	c2 <= c2max		6901880	0		<=			
ANR	6902540	Identifier	c2		6901880	0					
ANR	6902541	Identifier	c2max		6901880	1					
ANR	6902542	Expression	"c2 ++ , histp ++"	415:36:15077:15089	6901880	2	True				
ANR	6902543	PostIncDecOperationExpression	c2 ++		6901880	0					
ANR	6902544	Identifier	c2		6901880	0					
ANR	6902545	IncDec	++		6901880	1					
ANR	6902546	PostIncDecOperationExpression	histp ++		6901880	1					
ANR	6902547	Identifier	histp		6901880	0					
ANR	6902548	IncDec	++		6901880	1					
ANR	6902549	IfStatement	if ( * histp != 0 )		6901880	3					
ANR	6902550	Condition	* histp != 0	416:5:15097:15107	6901880	0	True				
ANR	6902551	EqualityExpression	* histp != 0		6901880	0		!=			
ANR	6902552	UnaryOperationExpression	* histp		6901880	0					
ANR	6902553	UnaryOperator	*		6901880	0					
ANR	6902554	Identifier	histp		6901880	1					
ANR	6902555	PrimaryExpression	0		6901880	1					
ANR	6902556	CompoundStatement		100:18:3023:3023	6901880	1					
ANR	6902557	ExpressionStatement	ccount ++	417:3:15115:15123	6901880	0	True				
ANR	6902558	PostIncDecOperationExpression	ccount ++		6901880	0					
ANR	6902559	Identifier	ccount		6901880	0					
ANR	6902560	IncDec	++		6901880	1					
ANR	6902561	ExpressionStatement	boxp -> colorcount = ccount	420:2:15136:15161	6901880	31	True				
ANR	6902562	AssignmentExpression	boxp -> colorcount = ccount		6901880	0		=			
ANR	6902563	PtrMemberAccess	boxp -> colorcount		6901880	0					
ANR	6902564	Identifier	boxp		6901880	0					
ANR	6902565	Identifier	colorcount		6901880	1					
ANR	6902566	Identifier	ccount		6901880	1					
ANR	6902567	Identifier	update_box		6901880	1					
ANR	6902568	ParameterList	"j_decompress_ptr cinfo , boxptr boxp"		6901880	2					
ANR	6902569	Parameter	j_decompress_ptr cinfo	314:12:11928:11949	6901880	0	True				
ANR	6902570	ParameterType	j_decompress_ptr		6901880	0					
ANR	6902571	Identifier	cinfo		6901880	1					
ANR	6902572	Parameter	boxptr boxp	314:36:11952:11962	6901880	1	True				
ANR	6902573	ParameterType	boxptr		6901880	0					
ANR	6902574	Identifier	boxp		6901880	1					
ANR	6902575	CFGEntryNode	ENTRY		6901880		True				
ANR	6902576	CFGExitNode	EXIT		6901880		True				
ANR	6902577	Symbol	* * histogram		6901880						
ANR	6902578	Symbol	C2_SHIFT		6901880						
ANR	6902579	Symbol	* c1min		6901880						
ANR	6902580	Symbol	c2min		6901880						
ANR	6902581	Symbol	C2_SCALE		6901880						
ANR	6902582	Symbol	cquantize		6901880						
ANR	6902583	Symbol	* cquantize		6901880						
ANR	6902584	Symbol	boxp -> c1max		6901880						
ANR	6902585	Symbol	cquantize -> histogram		6901880						
ANR	6902586	Symbol	c0min		6901880						
ANR	6902587	Symbol	boxp -> colorcount		6901880						
ANR	6902588	Symbol	* histp		6901880						
ANR	6902589	Symbol	C0_SHIFT		6901880						
ANR	6902590	Symbol	ccount		6901880						
ANR	6902591	Symbol	* * c0		6901880						
ANR	6902592	Symbol	c0max		6901880						
ANR	6902593	Symbol	* cinfo		6901880						
ANR	6902594	Symbol	c2max		6901880						
ANR	6902595	Symbol	boxp -> c0min		6901880						
ANR	6902596	Symbol	boxp -> c2min		6901880						
ANR	6902597	Symbol	C0_SCALE		6901880						
ANR	6902598	Symbol	histp		6901880						
ANR	6902599	Symbol	* boxp		6901880						
ANR	6902600	Symbol	* histogram		6901880						
ANR	6902601	Symbol	HIST_C2_ELEMS		6901880						
ANR	6902602	Symbol	boxp		6901880						
ANR	6902603	Symbol	boxp -> c0max		6901880						
ANR	6902604	Symbol	c0		6901880						
ANR	6902605	Symbol	c1		6901880						
ANR	6902606	Symbol	c2		6901880						
ANR	6902607	Symbol	c1min		6901880						
ANR	6902608	Symbol	histogram		6901880						
ANR	6902609	Symbol	* c0		6901880						
ANR	6902610	Symbol	boxp -> c2max		6901880						
ANR	6902611	Symbol	cinfo -> cquantize		6901880						
ANR	6902612	Symbol	C1_SCALE		6901880						
ANR	6902613	Symbol	cinfo		6901880						
ANR	6902614	Symbol	boxp -> volume		6901880						
ANR	6902615	Symbol	* c1		6901880						
ANR	6902616	Symbol	dist0		6901880						
ANR	6902617	Symbol	dist1		6901880						
ANR	6902618	Symbol	c1max		6901880						
ANR	6902619	Symbol	dist2		6901880						
ANR	6902620	Symbol	* histp ++		6901880						
ANR	6902621	Symbol	C1_SHIFT		6901880						
ANR	6902622	Symbol	boxp -> c1min		6901880						
ANR	6902623	Function	median_cut	425:0:15178:17532							
ANR	6902624	FunctionDef	"median_cut (j_decompress_ptr cinfo , boxptr boxlist , int numboxes , int desired_colors)"		6902623	0					
ANR	6902625	CompoundStatement		428:0:15346:17532	6902623	0					
ANR	6902626	IdentifierDeclStatement	"int n , lb ;"	429:2:15350:15358	6902623	0	True				
ANR	6902627	IdentifierDecl	n		6902623	0					
ANR	6902628	IdentifierDeclType	int		6902623	0					
ANR	6902629	Identifier	n		6902623	1					
ANR	6902630	IdentifierDecl	lb		6902623	1					
ANR	6902631	IdentifierDeclType	int		6902623	0					
ANR	6902632	Identifier	lb		6902623	1					
ANR	6902633	IdentifierDeclStatement	"int c0 , c1 , c2 , cmax ;"	430:2:15362:15379	6902623	1	True				
ANR	6902634	IdentifierDecl	c0		6902623	0					
ANR	6902635	IdentifierDeclType	int		6902623	0					
ANR	6902636	Identifier	c0		6902623	1					
ANR	6902637	IdentifierDecl	c1		6902623	1					
ANR	6902638	IdentifierDeclType	int		6902623	0					
ANR	6902639	Identifier	c1		6902623	1					
ANR	6902640	IdentifierDecl	c2		6902623	2					
ANR	6902641	IdentifierDeclType	int		6902623	0					
ANR	6902642	Identifier	c2		6902623	1					
ANR	6902643	IdentifierDecl	cmax		6902623	3					
ANR	6902644	IdentifierDeclType	int		6902623	0					
ANR	6902645	Identifier	cmax		6902623	1					
ANR	6902646	Statement	register	431:2:15383:15390	6902623	2	True				
ANR	6902647	IdentifierDeclStatement	"boxptr b1 , b2 ;"	431:11:15392:15404	6902623	3	True				
ANR	6902648	IdentifierDecl	b1		6902623	0					
ANR	6902649	IdentifierDeclType	boxptr		6902623	0					
ANR	6902650	Identifier	b1		6902623	1					
ANR	6902651	IdentifierDecl	b2		6902623	1					
ANR	6902652	IdentifierDeclType	boxptr		6902623	0					
ANR	6902653	Identifier	b2		6902623	1					
ANR	6902654	WhileStatement	while ( numboxes < desired_colors )		6902623	4					
ANR	6902655	Condition	numboxes < desired_colors	433:9:15416:15440	6902623	0	True				
ANR	6902656	RelationalExpression	numboxes < desired_colors		6902623	0		<			
ANR	6902657	Identifier	numboxes		6902623	0					
ANR	6902658	Identifier	desired_colors		6902623	1					
ANR	6902659	CompoundStatement		6:36:96:96	6902623	1					
ANR	6902660	IfStatement	if ( numboxes * 2 <= desired_colors )		6902623	0					
ANR	6902661	Condition	numboxes * 2 <= desired_colors	437:8:15561:15588	6902623	0	True				
ANR	6902662	RelationalExpression	numboxes * 2 <= desired_colors		6902623	0		<=			
ANR	6902663	MultiplicativeExpression	numboxes * 2		6902623	0		*			
ANR	6902664	Identifier	numboxes		6902623	0					
ANR	6902665	PrimaryExpression	2		6902623	1					
ANR	6902666	Identifier	desired_colors		6902623	1					
ANR	6902667	CompoundStatement		10:38:244:244	6902623	1					
ANR	6902668	ExpressionStatement	"b1 = find_biggest_color_pop ( boxlist , numboxes )"	438:6:15599:15645	6902623	0	True				
ANR	6902669	AssignmentExpression	"b1 = find_biggest_color_pop ( boxlist , numboxes )"		6902623	0		=			
ANR	6902670	Identifier	b1		6902623	0					
ANR	6902671	CallExpression	"find_biggest_color_pop ( boxlist , numboxes )"		6902623	1					
ANR	6902672	Callee	find_biggest_color_pop		6902623	0					
ANR	6902673	Identifier	find_biggest_color_pop		6902623	0					
ANR	6902674	ArgumentList	boxlist		6902623	1					
ANR	6902675	Argument	boxlist		6902623	0					
ANR	6902676	Identifier	boxlist		6902623	0					
ANR	6902677	Argument	numboxes		6902623	1					
ANR	6902678	Identifier	numboxes		6902623	0					
ANR	6902679	ElseStatement	else		6902623	0					
ANR	6902680	CompoundStatement		12:11:311:311	6902623	0					
ANR	6902681	ExpressionStatement	"b1 = find_biggest_volume ( boxlist , numboxes )"	440:6:15666:15709	6902623	0	True				
ANR	6902682	AssignmentExpression	"b1 = find_biggest_volume ( boxlist , numboxes )"		6902623	0		=			
ANR	6902683	Identifier	b1		6902623	0					
ANR	6902684	CallExpression	"find_biggest_volume ( boxlist , numboxes )"		6902623	1					
ANR	6902685	Callee	find_biggest_volume		6902623	0					
ANR	6902686	Identifier	find_biggest_volume		6902623	0					
ANR	6902687	ArgumentList	boxlist		6902623	1					
ANR	6902688	Argument	boxlist		6902623	0					
ANR	6902689	Identifier	boxlist		6902623	0					
ANR	6902690	Argument	numboxes		6902623	1					
ANR	6902691	Identifier	numboxes		6902623	0					
ANR	6902692	IfStatement	if ( b1 == NULL )		6902623	1					
ANR	6902693	Condition	b1 == NULL	442:8:15725:15734	6902623	0	True				
ANR	6902694	EqualityExpression	b1 == NULL		6902623	0		==			
ANR	6902695	Identifier	b1		6902623	0					
ANR	6902696	Identifier	NULL		6902623	1					
ANR	6902697	BreakStatement	break ;	443:6:15776:15781	6902623	1	True				
ANR	6902698	ExpressionStatement	b2 = & boxlist [ numboxes ]	444:4:15787:15810	6902623	2	True				
ANR	6902699	AssignmentExpression	b2 = & boxlist [ numboxes ]		6902623	0		=			
ANR	6902700	Identifier	b2		6902623	0					
ANR	6902701	UnaryOperationExpression	& boxlist [ numboxes ]		6902623	1					
ANR	6902702	UnaryOperator	&		6902623	0					
ANR	6902703	ArrayIndexing	boxlist [ numboxes ]		6902623	1					
ANR	6902704	Identifier	boxlist		6902623	0					
ANR	6902705	Identifier	numboxes		6902623	1					
ANR	6902706	ExpressionStatement	b2 -> c0max = b1 -> c0max	446:4:15892:15913	6902623	3	True				
ANR	6902707	AssignmentExpression	b2 -> c0max = b1 -> c0max		6902623	0		=			
ANR	6902708	PtrMemberAccess	b2 -> c0max		6902623	0					
ANR	6902709	Identifier	b2		6902623	0					
ANR	6902710	Identifier	c0max		6902623	1					
ANR	6902711	PtrMemberAccess	b1 -> c0max		6902623	1					
ANR	6902712	Identifier	b1		6902623	0					
ANR	6902713	Identifier	c0max		6902623	1					
ANR	6902714	ExpressionStatement	b2 -> c1max = b1 -> c1max	446:27:15915:15936	6902623	4	True				
ANR	6902715	AssignmentExpression	b2 -> c1max = b1 -> c1max		6902623	0		=			
ANR	6902716	PtrMemberAccess	b2 -> c1max		6902623	0					
ANR	6902717	Identifier	b2		6902623	0					
ANR	6902718	Identifier	c1max		6902623	1					
ANR	6902719	PtrMemberAccess	b1 -> c1max		6902623	1					
ANR	6902720	Identifier	b1		6902623	0					
ANR	6902721	Identifier	c1max		6902623	1					
ANR	6902722	ExpressionStatement	b2 -> c2max = b1 -> c2max	446:50:15938:15959	6902623	5	True				
ANR	6902723	AssignmentExpression	b2 -> c2max = b1 -> c2max		6902623	0		=			
ANR	6902724	PtrMemberAccess	b2 -> c2max		6902623	0					
ANR	6902725	Identifier	b2		6902623	0					
ANR	6902726	Identifier	c2max		6902623	1					
ANR	6902727	PtrMemberAccess	b1 -> c2max		6902623	1					
ANR	6902728	Identifier	b1		6902623	0					
ANR	6902729	Identifier	c2max		6902623	1					
ANR	6902730	ExpressionStatement	b2 -> c0min = b1 -> c0min	447:4:15965:15986	6902623	6	True				
ANR	6902731	AssignmentExpression	b2 -> c0min = b1 -> c0min		6902623	0		=			
ANR	6902732	PtrMemberAccess	b2 -> c0min		6902623	0					
ANR	6902733	Identifier	b2		6902623	0					
ANR	6902734	Identifier	c0min		6902623	1					
ANR	6902735	PtrMemberAccess	b1 -> c0min		6902623	1					
ANR	6902736	Identifier	b1		6902623	0					
ANR	6902737	Identifier	c0min		6902623	1					
ANR	6902738	ExpressionStatement	b2 -> c1min = b1 -> c1min	447:27:15988:16009	6902623	7	True				
ANR	6902739	AssignmentExpression	b2 -> c1min = b1 -> c1min		6902623	0		=			
ANR	6902740	PtrMemberAccess	b2 -> c1min		6902623	0					
ANR	6902741	Identifier	b2		6902623	0					
ANR	6902742	Identifier	c1min		6902623	1					
ANR	6902743	PtrMemberAccess	b1 -> c1min		6902623	1					
ANR	6902744	Identifier	b1		6902623	0					
ANR	6902745	Identifier	c1min		6902623	1					
ANR	6902746	ExpressionStatement	b2 -> c2min = b1 -> c2min	447:50:16011:16032	6902623	8	True				
ANR	6902747	AssignmentExpression	b2 -> c2min = b1 -> c2min		6902623	0		=			
ANR	6902748	PtrMemberAccess	b2 -> c2min		6902623	0					
ANR	6902749	Identifier	b2		6902623	0					
ANR	6902750	Identifier	c2min		6902623	1					
ANR	6902751	PtrMemberAccess	b1 -> c2min		6902623	1					
ANR	6902752	Identifier	b1		6902623	0					
ANR	6902753	Identifier	c2min		6902623	1					
ANR	6902754	ExpressionStatement	c0 = ( ( b1 -> c0max - b1 -> c0min ) << C0_SHIFT ) * C0_SCALE	452:4:16195:16248	6902623	9	True				
ANR	6902755	AssignmentExpression	c0 = ( ( b1 -> c0max - b1 -> c0min ) << C0_SHIFT ) * C0_SCALE		6902623	0		=			
ANR	6902756	Identifier	c0		6902623	0					
ANR	6902757	MultiplicativeExpression	( ( b1 -> c0max - b1 -> c0min ) << C0_SHIFT ) * C0_SCALE		6902623	1		*			
ANR	6902758	ShiftExpression	( b1 -> c0max - b1 -> c0min ) << C0_SHIFT		6902623	0		<<			
ANR	6902759	AdditiveExpression	b1 -> c0max - b1 -> c0min		6902623	0		-			
ANR	6902760	PtrMemberAccess	b1 -> c0max		6902623	0					
ANR	6902761	Identifier	b1		6902623	0					
ANR	6902762	Identifier	c0max		6902623	1					
ANR	6902763	PtrMemberAccess	b1 -> c0min		6902623	1					
ANR	6902764	Identifier	b1		6902623	0					
ANR	6902765	Identifier	c0min		6902623	1					
ANR	6902766	Identifier	C0_SHIFT		6902623	1					
ANR	6902767	Identifier	C0_SCALE		6902623	1					
ANR	6902768	ExpressionStatement	c1 = ( ( b1 -> c1max - b1 -> c1min ) << C1_SHIFT ) * C1_SCALE	453:4:16254:16307	6902623	10	True				
ANR	6902769	AssignmentExpression	c1 = ( ( b1 -> c1max - b1 -> c1min ) << C1_SHIFT ) * C1_SCALE		6902623	0		=			
ANR	6902770	Identifier	c1		6902623	0					
ANR	6902771	MultiplicativeExpression	( ( b1 -> c1max - b1 -> c1min ) << C1_SHIFT ) * C1_SCALE		6902623	1		*			
ANR	6902772	ShiftExpression	( b1 -> c1max - b1 -> c1min ) << C1_SHIFT		6902623	0		<<			
ANR	6902773	AdditiveExpression	b1 -> c1max - b1 -> c1min		6902623	0		-			
ANR	6902774	PtrMemberAccess	b1 -> c1max		6902623	0					
ANR	6902775	Identifier	b1		6902623	0					
ANR	6902776	Identifier	c1max		6902623	1					
ANR	6902777	PtrMemberAccess	b1 -> c1min		6902623	1					
ANR	6902778	Identifier	b1		6902623	0					
ANR	6902779	Identifier	c1min		6902623	1					
ANR	6902780	Identifier	C1_SHIFT		6902623	1					
ANR	6902781	Identifier	C1_SCALE		6902623	1					
ANR	6902782	ExpressionStatement	c2 = ( ( b1 -> c2max - b1 -> c2min ) << C2_SHIFT ) * C2_SCALE	454:4:16313:16366	6902623	11	True				
ANR	6902783	AssignmentExpression	c2 = ( ( b1 -> c2max - b1 -> c2min ) << C2_SHIFT ) * C2_SCALE		6902623	0		=			
ANR	6902784	Identifier	c2		6902623	0					
ANR	6902785	MultiplicativeExpression	( ( b1 -> c2max - b1 -> c2min ) << C2_SHIFT ) * C2_SCALE		6902623	1		*			
ANR	6902786	ShiftExpression	( b1 -> c2max - b1 -> c2min ) << C2_SHIFT		6902623	0		<<			
ANR	6902787	AdditiveExpression	b1 -> c2max - b1 -> c2min		6902623	0		-			
ANR	6902788	PtrMemberAccess	b1 -> c2max		6902623	0					
ANR	6902789	Identifier	b1		6902623	0					
ANR	6902790	Identifier	c2max		6902623	1					
ANR	6902791	PtrMemberAccess	b1 -> c2min		6902623	1					
ANR	6902792	Identifier	b1		6902623	0					
ANR	6902793	Identifier	c2min		6902623	1					
ANR	6902794	Identifier	C2_SHIFT		6902623	1					
ANR	6902795	Identifier	C2_SCALE		6902623	1					
ANR	6902796	ExpressionStatement	cmax = c1	459:4:16546:16555	6902623	12	True				
ANR	6902797	AssignmentExpression	cmax = c1		6902623	0		=			
ANR	6902798	Identifier	cmax		6902623	0					
ANR	6902799	Identifier	c1		6902623	1					
ANR	6902800	ExpressionStatement	n = 1	459:15:16557:16562	6902623	13	True				
ANR	6902801	AssignmentExpression	n = 1		6902623	0		=			
ANR	6902802	Identifier	n		6902623	0					
ANR	6902803	PrimaryExpression	1		6902623	1					
ANR	6902804	IfStatement	if ( c0 > cmax )		6902623	14					
ANR	6902805	Condition	c0 > cmax	460:8:16572:16580	6902623	0	True				
ANR	6902806	RelationalExpression	c0 > cmax		6902623	0		>			
ANR	6902807	Identifier	c0		6902623	0					
ANR	6902808	Identifier	cmax		6902623	1					
ANR	6902809	CompoundStatement		33:19:1236:1236	6902623	1					
ANR	6902810	ExpressionStatement	cmax = c0	460:21:16585:16594	6902623	0	True				
ANR	6902811	AssignmentExpression	cmax = c0		6902623	0		=			
ANR	6902812	Identifier	cmax		6902623	0					
ANR	6902813	Identifier	c0		6902623	1					
ANR	6902814	ExpressionStatement	n = 0	460:32:16596:16601	6902623	1	True				
ANR	6902815	AssignmentExpression	n = 0		6902623	0		=			
ANR	6902816	Identifier	n		6902623	0					
ANR	6902817	PrimaryExpression	0		6902623	1					
ANR	6902818	IfStatement	if ( c2 > cmax )		6902623	15					
ANR	6902819	Condition	c2 > cmax	461:8:16613:16621	6902623	0	True				
ANR	6902820	RelationalExpression	c2 > cmax		6902623	0		>			
ANR	6902821	Identifier	c2		6902623	0					
ANR	6902822	Identifier	cmax		6902623	1					
ANR	6902823	CompoundStatement		34:19:1277:1277	6902623	1					
ANR	6902824	ExpressionStatement	n = 2	461:21:16626:16631	6902623	0	True				
ANR	6902825	AssignmentExpression	n = 2		6902623	0		=			
ANR	6902826	Identifier	n		6902623	0					
ANR	6902827	PrimaryExpression	2		6902623	1					
ANR	6902828	SwitchStatement	switch ( n )		6902623	16					
ANR	6902829	Condition	n	473:12:17062:17062	6902623	0	True				
ANR	6902830	Identifier	n		6902623	0					
ANR	6902831	CompoundStatement		46:15:1718:1718	6902623	1					
ANR	6902832	Label	case 0 :	474:4:17071:17077	6902623	0	True				
ANR	6902833	ExpressionStatement	lb = ( b1 -> c0max + b1 -> c0min ) / 2	475:6:17085:17117	6902623	1	True				
ANR	6902834	AssignmentExpression	lb = ( b1 -> c0max + b1 -> c0min ) / 2		6902623	0		=			
ANR	6902835	Identifier	lb		6902623	0					
ANR	6902836	MultiplicativeExpression	( b1 -> c0max + b1 -> c0min ) / 2		6902623	1		/			
ANR	6902837	AdditiveExpression	b1 -> c0max + b1 -> c0min		6902623	0		+			
ANR	6902838	PtrMemberAccess	b1 -> c0max		6902623	0					
ANR	6902839	Identifier	b1		6902623	0					
ANR	6902840	Identifier	c0max		6902623	1					
ANR	6902841	PtrMemberAccess	b1 -> c0min		6902623	1					
ANR	6902842	Identifier	b1		6902623	0					
ANR	6902843	Identifier	c0min		6902623	1					
ANR	6902844	PrimaryExpression	2		6902623	1					
ANR	6902845	ExpressionStatement	b1 -> c0max = lb	476:6:17125:17139	6902623	2	True				
ANR	6902846	AssignmentExpression	b1 -> c0max = lb		6902623	0		=			
ANR	6902847	PtrMemberAccess	b1 -> c0max		6902623	0					
ANR	6902848	Identifier	b1		6902623	0					
ANR	6902849	Identifier	c0max		6902623	1					
ANR	6902850	Identifier	lb		6902623	1					
ANR	6902851	ExpressionStatement	b2 -> c0min = lb + 1	477:6:17147:17163	6902623	3	True				
ANR	6902852	AssignmentExpression	b2 -> c0min = lb + 1		6902623	0		=			
ANR	6902853	PtrMemberAccess	b2 -> c0min		6902623	0					
ANR	6902854	Identifier	b2		6902623	0					
ANR	6902855	Identifier	c0min		6902623	1					
ANR	6902856	AdditiveExpression	lb + 1		6902623	1		+			
ANR	6902857	Identifier	lb		6902623	0					
ANR	6902858	PrimaryExpression	1		6902623	1					
ANR	6902859	BreakStatement	break ;	478:6:17171:17176	6902623	4	True				
ANR	6902860	Label	case 1 :	479:4:17182:17188	6902623	5	True				
ANR	6902861	ExpressionStatement	lb = ( b1 -> c1max + b1 -> c1min ) / 2	480:6:17196:17228	6902623	6	True				
ANR	6902862	AssignmentExpression	lb = ( b1 -> c1max + b1 -> c1min ) / 2		6902623	0		=			
ANR	6902863	Identifier	lb		6902623	0					
ANR	6902864	MultiplicativeExpression	( b1 -> c1max + b1 -> c1min ) / 2		6902623	1		/			
ANR	6902865	AdditiveExpression	b1 -> c1max + b1 -> c1min		6902623	0		+			
ANR	6902866	PtrMemberAccess	b1 -> c1max		6902623	0					
ANR	6902867	Identifier	b1		6902623	0					
ANR	6902868	Identifier	c1max		6902623	1					
ANR	6902869	PtrMemberAccess	b1 -> c1min		6902623	1					
ANR	6902870	Identifier	b1		6902623	0					
ANR	6902871	Identifier	c1min		6902623	1					
ANR	6902872	PrimaryExpression	2		6902623	1					
ANR	6902873	ExpressionStatement	b1 -> c1max = lb	481:6:17236:17250	6902623	7	True				
ANR	6902874	AssignmentExpression	b1 -> c1max = lb		6902623	0		=			
ANR	6902875	PtrMemberAccess	b1 -> c1max		6902623	0					
ANR	6902876	Identifier	b1		6902623	0					
ANR	6902877	Identifier	c1max		6902623	1					
ANR	6902878	Identifier	lb		6902623	1					
ANR	6902879	ExpressionStatement	b2 -> c1min = lb + 1	482:6:17258:17274	6902623	8	True				
ANR	6902880	AssignmentExpression	b2 -> c1min = lb + 1		6902623	0		=			
ANR	6902881	PtrMemberAccess	b2 -> c1min		6902623	0					
ANR	6902882	Identifier	b2		6902623	0					
ANR	6902883	Identifier	c1min		6902623	1					
ANR	6902884	AdditiveExpression	lb + 1		6902623	1		+			
ANR	6902885	Identifier	lb		6902623	0					
ANR	6902886	PrimaryExpression	1		6902623	1					
ANR	6902887	BreakStatement	break ;	483:6:17282:17287	6902623	9	True				
ANR	6902888	Label	case 2 :	484:4:17293:17299	6902623	10	True				
ANR	6902889	ExpressionStatement	lb = ( b1 -> c2max + b1 -> c2min ) / 2	485:6:17307:17339	6902623	11	True				
ANR	6902890	AssignmentExpression	lb = ( b1 -> c2max + b1 -> c2min ) / 2		6902623	0		=			
ANR	6902891	Identifier	lb		6902623	0					
ANR	6902892	MultiplicativeExpression	( b1 -> c2max + b1 -> c2min ) / 2		6902623	1		/			
ANR	6902893	AdditiveExpression	b1 -> c2max + b1 -> c2min		6902623	0		+			
ANR	6902894	PtrMemberAccess	b1 -> c2max		6902623	0					
ANR	6902895	Identifier	b1		6902623	0					
ANR	6902896	Identifier	c2max		6902623	1					
ANR	6902897	PtrMemberAccess	b1 -> c2min		6902623	1					
ANR	6902898	Identifier	b1		6902623	0					
ANR	6902899	Identifier	c2min		6902623	1					
ANR	6902900	PrimaryExpression	2		6902623	1					
ANR	6902901	ExpressionStatement	b1 -> c2max = lb	486:6:17347:17361	6902623	12	True				
ANR	6902902	AssignmentExpression	b1 -> c2max = lb		6902623	0		=			
ANR	6902903	PtrMemberAccess	b1 -> c2max		6902623	0					
ANR	6902904	Identifier	b1		6902623	0					
ANR	6902905	Identifier	c2max		6902623	1					
ANR	6902906	Identifier	lb		6902623	1					
ANR	6902907	ExpressionStatement	b2 -> c2min = lb + 1	487:6:17369:17385	6902623	13	True				
ANR	6902908	AssignmentExpression	b2 -> c2min = lb + 1		6902623	0		=			
ANR	6902909	PtrMemberAccess	b2 -> c2min		6902623	0					
ANR	6902910	Identifier	b2		6902623	0					
ANR	6902911	Identifier	c2min		6902623	1					
ANR	6902912	AdditiveExpression	lb + 1		6902623	1		+			
ANR	6902913	Identifier	lb		6902623	0					
ANR	6902914	PrimaryExpression	1		6902623	1					
ANR	6902915	BreakStatement	break ;	488:6:17393:17398	6902623	14	True				
ANR	6902916	ExpressionStatement	"update_box ( cinfo , b1 )"	491:4:17443:17464	6902623	17	True				
ANR	6902917	CallExpression	"update_box ( cinfo , b1 )"		6902623	0					
ANR	6902918	Callee	update_box		6902623	0					
ANR	6902919	Identifier	update_box		6902623	0					
ANR	6902920	ArgumentList	cinfo		6902623	1					
ANR	6902921	Argument	cinfo		6902623	0					
ANR	6902922	Identifier	cinfo		6902623	0					
ANR	6902923	Argument	b1		6902623	1					
ANR	6902924	Identifier	b1		6902623	0					
ANR	6902925	ExpressionStatement	"update_box ( cinfo , b2 )"	492:4:17470:17491	6902623	18	True				
ANR	6902926	CallExpression	"update_box ( cinfo , b2 )"		6902623	0					
ANR	6902927	Callee	update_box		6902623	0					
ANR	6902928	Identifier	update_box		6902623	0					
ANR	6902929	ArgumentList	cinfo		6902623	1					
ANR	6902930	Argument	cinfo		6902623	0					
ANR	6902931	Identifier	cinfo		6902623	0					
ANR	6902932	Argument	b2		6902623	1					
ANR	6902933	Identifier	b2		6902623	0					
ANR	6902934	ExpressionStatement	numboxes ++	493:4:17497:17507	6902623	19	True				
ANR	6902935	PostIncDecOperationExpression	numboxes ++		6902623	0					
ANR	6902936	Identifier	numboxes		6902623	0					
ANR	6902937	IncDec	++		6902623	1					
ANR	6902938	ReturnStatement	return numboxes ;	495:2:17515:17530	6902623	5	True				
ANR	6902939	Identifier	numboxes		6902623	0					
ANR	6902940	Identifier	median_cut		6902623	1					
ANR	6902941	ParameterList	"j_decompress_ptr cinfo , boxptr boxlist , int numboxes , int desired_colors"		6902623	2					
ANR	6902942	Parameter	j_decompress_ptr cinfo	425:12:15190:15211	6902623	0	True				
ANR	6902943	ParameterType	j_decompress_ptr		6902623	0					
ANR	6902944	Identifier	cinfo		6902623	1					
ANR	6902945	Parameter	boxptr boxlist	425:36:15214:15227	6902623	1	True				
ANR	6902946	ParameterType	boxptr		6902623	0					
ANR	6902947	Identifier	boxlist		6902623	1					
ANR	6902948	Parameter	int numboxes	425:52:15230:15241	6902623	2	True				
ANR	6902949	ParameterType	int		6902623	0					
ANR	6902950	Identifier	numboxes		6902623	1					
ANR	6902951	Parameter	int desired_colors	426:5:15249:15266	6902623	3	True				
ANR	6902952	ParameterType	int		6902623	0					
ANR	6902953	Identifier	desired_colors		6902623	1					
ANR	6902954	CFGEntryNode	ENTRY		6902623		True				
ANR	6902955	CFGExitNode	EXIT		6902623		True				
ANR	6902956	Symbol	b1 -> c1min		6902623						
ANR	6902957	Symbol	C2_SHIFT		6902623						
ANR	6902958	Symbol	b2 -> c2max		6902623						
ANR	6902959	Symbol	b2 -> c0min		6902623						
ANR	6902960	Symbol	C2_SCALE		6902623						
ANR	6902961	Symbol	cmax		6902623						
ANR	6902962	Symbol	b1		6902623						
ANR	6902963	Symbol	b2		6902623						
ANR	6902964	Symbol	b2 -> c2min		6902623						
ANR	6902965	Symbol	* b2		6902623						
ANR	6902966	Symbol	* b1		6902623						
ANR	6902967	Symbol	b2 -> c0max		6902623						
ANR	6902968	Symbol	C0_SHIFT		6902623						
ANR	6902969	Symbol	b1 -> c1max		6902623						
ANR	6902970	Symbol	C0_SCALE		6902623						
ANR	6902971	Symbol	numboxes		6902623						
ANR	6902972	Symbol	b1 -> c0min		6902623						
ANR	6902973	Symbol	NULL		6902623						
ANR	6902974	Symbol	b1 -> c2min		6902623						
ANR	6902975	Symbol	b2 -> c1min		6902623						
ANR	6902976	Symbol	c0		6902623						
ANR	6902977	Symbol	n		6902623						
ANR	6902978	Symbol	c1		6902623						
ANR	6902979	Symbol	c2		6902623						
ANR	6902980	Symbol	b1 -> c2max		6902623						
ANR	6902981	Symbol	desired_colors		6902623						
ANR	6902982	Symbol	boxlist		6902623						
ANR	6902983	Symbol	C1_SCALE		6902623						
ANR	6902984	Symbol	cinfo		6902623						
ANR	6902985	Symbol	lb		6902623						
ANR	6902986	Symbol	find_biggest_color_pop		6902623						
ANR	6902987	Symbol	b2 -> c1max		6902623						
ANR	6902988	Symbol	find_biggest_volume		6902623						
ANR	6902989	Symbol	b1 -> c0max		6902623						
ANR	6902990	Symbol	C1_SHIFT		6902623						
ANR	6902991	Function	compute_color	500:0:17548:18880							
ANR	6902992	FunctionDef	"compute_color (j_decompress_ptr cinfo , boxptr boxp , int icolor)"		6902991	0					
ANR	6902993	CompoundStatement		502:0:17685:18880	6902991	0					
ANR	6902994	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	505:2:17811:17875	6902991	0	True				
ANR	6902995	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6902991	0					
ANR	6902996	IdentifierDeclType	my_cquantize_ptr		6902991	0					
ANR	6902997	Identifier	cquantize		6902991	1					
ANR	6902998	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6902991	2		=			
ANR	6902999	Identifier	cquantize		6902991	0					
ANR	6903000	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6902991	1					
ANR	6903001	CastTarget	my_cquantize_ptr		6902991	0					
ANR	6903002	PtrMemberAccess	cinfo -> cquantize		6902991	1					
ANR	6903003	Identifier	cinfo		6902991	0					
ANR	6903004	Identifier	cquantize		6902991	1					
ANR	6903005	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	506:2:17879:17918	6902991	1	True				
ANR	6903006	IdentifierDecl	histogram = cquantize -> histogram		6902991	0					
ANR	6903007	IdentifierDeclType	hist3d		6902991	0					
ANR	6903008	Identifier	histogram		6902991	1					
ANR	6903009	AssignmentExpression	histogram = cquantize -> histogram		6902991	2		=			
ANR	6903010	Identifier	histogram		6902991	0					
ANR	6903011	PtrMemberAccess	cquantize -> histogram		6902991	1					
ANR	6903012	Identifier	cquantize		6902991	0					
ANR	6903013	Identifier	histogram		6902991	1					
ANR	6903014	IdentifierDeclStatement	histptr histp ;	507:2:17922:17935	6902991	2	True				
ANR	6903015	IdentifierDecl	histp		6902991	0					
ANR	6903016	IdentifierDeclType	histptr		6902991	0					
ANR	6903017	Identifier	histp		6902991	1					
ANR	6903018	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	508:2:17939:17951	6902991	3	True				
ANR	6903019	IdentifierDecl	c0		6902991	0					
ANR	6903020	IdentifierDeclType	int		6902991	0					
ANR	6903021	Identifier	c0		6902991	1					
ANR	6903022	IdentifierDecl	c1		6902991	1					
ANR	6903023	IdentifierDeclType	int		6902991	0					
ANR	6903024	Identifier	c1		6902991	1					
ANR	6903025	IdentifierDecl	c2		6902991	2					
ANR	6903026	IdentifierDeclType	int		6902991	0					
ANR	6903027	Identifier	c2		6902991	1					
ANR	6903028	IdentifierDeclStatement	"int c0min , c0max , c1min , c1max , c2min , c2max ;"	509:2:17955:17994	6902991	4	True				
ANR	6903029	IdentifierDecl	c0min		6902991	0					
ANR	6903030	IdentifierDeclType	int		6902991	0					
ANR	6903031	Identifier	c0min		6902991	1					
ANR	6903032	IdentifierDecl	c0max		6902991	1					
ANR	6903033	IdentifierDeclType	int		6902991	0					
ANR	6903034	Identifier	c0max		6902991	1					
ANR	6903035	IdentifierDecl	c1min		6902991	2					
ANR	6903036	IdentifierDeclType	int		6902991	0					
ANR	6903037	Identifier	c1min		6902991	1					
ANR	6903038	IdentifierDecl	c1max		6902991	3					
ANR	6903039	IdentifierDeclType	int		6902991	0					
ANR	6903040	Identifier	c1max		6902991	1					
ANR	6903041	IdentifierDecl	c2min		6902991	4					
ANR	6903042	IdentifierDeclType	int		6902991	0					
ANR	6903043	Identifier	c2min		6902991	1					
ANR	6903044	IdentifierDecl	c2max		6902991	5					
ANR	6903045	IdentifierDeclType	int		6902991	0					
ANR	6903046	Identifier	c2max		6902991	1					
ANR	6903047	IdentifierDeclStatement	long count ;	510:2:17998:18008	6902991	5	True				
ANR	6903048	IdentifierDecl	count		6902991	0					
ANR	6903049	IdentifierDeclType	long		6902991	0					
ANR	6903050	Identifier	count		6902991	1					
ANR	6903051	IdentifierDeclStatement	long total = 0 ;	511:2:18012:18026	6902991	6	True				
ANR	6903052	IdentifierDecl	total = 0		6902991	0					
ANR	6903053	IdentifierDeclType	long		6902991	0					
ANR	6903054	Identifier	total		6902991	1					
ANR	6903055	AssignmentExpression	total = 0		6902991	2		=			
ANR	6903056	Identifier	total		6902991	0					
ANR	6903057	PrimaryExpression	0		6902991	1					
ANR	6903058	IdentifierDeclStatement	long c0total = 0 ;	512:2:18030:18046	6902991	7	True				
ANR	6903059	IdentifierDecl	c0total = 0		6902991	0					
ANR	6903060	IdentifierDeclType	long		6902991	0					
ANR	6903061	Identifier	c0total		6902991	1					
ANR	6903062	AssignmentExpression	c0total = 0		6902991	2		=			
ANR	6903063	Identifier	c0total		6902991	0					
ANR	6903064	PrimaryExpression	0		6902991	1					
ANR	6903065	IdentifierDeclStatement	long c1total = 0 ;	513:2:18050:18066	6902991	8	True				
ANR	6903066	IdentifierDecl	c1total = 0		6902991	0					
ANR	6903067	IdentifierDeclType	long		6902991	0					
ANR	6903068	Identifier	c1total		6902991	1					
ANR	6903069	AssignmentExpression	c1total = 0		6902991	2		=			
ANR	6903070	Identifier	c1total		6902991	0					
ANR	6903071	PrimaryExpression	0		6902991	1					
ANR	6903072	IdentifierDeclStatement	long c2total = 0 ;	514:2:18070:18086	6902991	9	True				
ANR	6903073	IdentifierDecl	c2total = 0		6902991	0					
ANR	6903074	IdentifierDeclType	long		6902991	0					
ANR	6903075	Identifier	c2total		6902991	1					
ANR	6903076	AssignmentExpression	c2total = 0		6902991	2		=			
ANR	6903077	Identifier	c2total		6902991	0					
ANR	6903078	PrimaryExpression	0		6902991	1					
ANR	6903079	ExpressionStatement	c0min = boxp -> c0min	516:2:18093:18112	6902991	10	True				
ANR	6903080	AssignmentExpression	c0min = boxp -> c0min		6902991	0		=			
ANR	6903081	Identifier	c0min		6902991	0					
ANR	6903082	PtrMemberAccess	boxp -> c0min		6902991	1					
ANR	6903083	Identifier	boxp		6902991	0					
ANR	6903084	Identifier	c0min		6902991	1					
ANR	6903085	ExpressionStatement	c0max = boxp -> c0max	516:24:18115:18134	6902991	11	True				
ANR	6903086	AssignmentExpression	c0max = boxp -> c0max		6902991	0		=			
ANR	6903087	Identifier	c0max		6902991	0					
ANR	6903088	PtrMemberAccess	boxp -> c0max		6902991	1					
ANR	6903089	Identifier	boxp		6902991	0					
ANR	6903090	Identifier	c0max		6902991	1					
ANR	6903091	ExpressionStatement	c1min = boxp -> c1min	517:2:18138:18157	6902991	12	True				
ANR	6903092	AssignmentExpression	c1min = boxp -> c1min		6902991	0		=			
ANR	6903093	Identifier	c1min		6902991	0					
ANR	6903094	PtrMemberAccess	boxp -> c1min		6902991	1					
ANR	6903095	Identifier	boxp		6902991	0					
ANR	6903096	Identifier	c1min		6902991	1					
ANR	6903097	ExpressionStatement	c1max = boxp -> c1max	517:24:18160:18179	6902991	13	True				
ANR	6903098	AssignmentExpression	c1max = boxp -> c1max		6902991	0		=			
ANR	6903099	Identifier	c1max		6902991	0					
ANR	6903100	PtrMemberAccess	boxp -> c1max		6902991	1					
ANR	6903101	Identifier	boxp		6902991	0					
ANR	6903102	Identifier	c1max		6902991	1					
ANR	6903103	ExpressionStatement	c2min = boxp -> c2min	518:2:18183:18202	6902991	14	True				
ANR	6903104	AssignmentExpression	c2min = boxp -> c2min		6902991	0		=			
ANR	6903105	Identifier	c2min		6902991	0					
ANR	6903106	PtrMemberAccess	boxp -> c2min		6902991	1					
ANR	6903107	Identifier	boxp		6902991	0					
ANR	6903108	Identifier	c2min		6902991	1					
ANR	6903109	ExpressionStatement	c2max = boxp -> c2max	518:24:18205:18224	6902991	15	True				
ANR	6903110	AssignmentExpression	c2max = boxp -> c2max		6902991	0		=			
ANR	6903111	Identifier	c2max		6902991	0					
ANR	6903112	PtrMemberAccess	boxp -> c2max		6902991	1					
ANR	6903113	Identifier	boxp		6902991	0					
ANR	6903114	Identifier	c2max		6902991	1					
ANR	6903115	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6902991	16					
ANR	6903116	ForInit	c0 = c0min ;	520:7:18236:18246	6902991	0	True				
ANR	6903117	AssignmentExpression	c0 = c0min		6902991	0		=			
ANR	6903118	Identifier	c0		6902991	0					
ANR	6903119	Identifier	c0min		6902991	1					
ANR	6903120	Condition	c0 <= c0max	520:19:18248:18258	6902991	1	True				
ANR	6903121	RelationalExpression	c0 <= c0max		6902991	0		<=			
ANR	6903122	Identifier	c0		6902991	0					
ANR	6903123	Identifier	c0max		6902991	1					
ANR	6903124	PostIncDecOperationExpression	c0 ++	520:32:18261:18264	6902991	2	True				
ANR	6903125	Identifier	c0		6902991	0					
ANR	6903126	IncDec	++		6902991	1					
ANR	6903127	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6902991	3					
ANR	6903128	ForInit	c1 = c1min ;	521:9:18276:18286	6902991	0	True				
ANR	6903129	AssignmentExpression	c1 = c1min		6902991	0		=			
ANR	6903130	Identifier	c1		6902991	0					
ANR	6903131	Identifier	c1min		6902991	1					
ANR	6903132	Condition	c1 <= c1max	521:21:18288:18298	6902991	1	True				
ANR	6903133	RelationalExpression	c1 <= c1max		6902991	0		<=			
ANR	6903134	Identifier	c1		6902991	0					
ANR	6903135	Identifier	c1max		6902991	1					
ANR	6903136	PostIncDecOperationExpression	c1 ++	521:34:18301:18304	6902991	2	True				
ANR	6903137	Identifier	c1		6902991	0					
ANR	6903138	IncDec	++		6902991	1					
ANR	6903139	CompoundStatement		20:40:621:621	6902991	3					
ANR	6903140	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	522:6:18315:18349	6902991	0	True				
ANR	6903141	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6902991	0		=			
ANR	6903142	Identifier	histp		6902991	0					
ANR	6903143	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6902991	1					
ANR	6903144	UnaryOperator	&		6902991	0					
ANR	6903145	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6902991	1					
ANR	6903146	ArrayIndexing	histogram [ c0 ] [ c1 ]		6902991	0					
ANR	6903147	ArrayIndexing	histogram [ c0 ]		6902991	0					
ANR	6903148	Identifier	histogram		6902991	0					
ANR	6903149	Identifier	c0		6902991	1					
ANR	6903150	Identifier	c1		6902991	1					
ANR	6903151	Identifier	c2min		6902991	1					
ANR	6903152	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6902991	1					
ANR	6903153	ForInit	c2 = c2min ;	523:11:18362:18372	6902991	0	True				
ANR	6903154	AssignmentExpression	c2 = c2min		6902991	0		=			
ANR	6903155	Identifier	c2		6902991	0					
ANR	6903156	Identifier	c2min		6902991	1					
ANR	6903157	Condition	c2 <= c2max	523:23:18374:18384	6902991	1	True				
ANR	6903158	RelationalExpression	c2 <= c2max		6902991	0		<=			
ANR	6903159	Identifier	c2		6902991	0					
ANR	6903160	Identifier	c2max		6902991	1					
ANR	6903161	PostIncDecOperationExpression	c2 ++	523:36:18387:18390	6902991	2	True				
ANR	6903162	Identifier	c2		6902991	0					
ANR	6903163	IncDec	++		6902991	1					
ANR	6903164	CompoundStatement		22:42:707:707	6902991	3					
ANR	6903165	IfStatement	if ( ( count = * histp ++ ) != 0 )		6902991	0					
ANR	6903166	Condition	( count = * histp ++ ) != 0	524:5:18400:18422	6902991	0	True				
ANR	6903167	EqualityExpression	( count = * histp ++ ) != 0		6902991	0		!=			
ANR	6903168	AssignmentExpression	count = * histp ++		6902991	0		=			
ANR	6903169	Identifier	count		6902991	0					
ANR	6903170	UnaryOperationExpression	* histp ++		6902991	1					
ANR	6903171	UnaryOperator	*		6902991	0					
ANR	6903172	PostIncDecOperationExpression	histp ++		6902991	1					
ANR	6903173	Identifier	histp		6902991	0					
ANR	6903174	IncDec	++		6902991	1					
ANR	6903175	PrimaryExpression	0		6902991	1					
ANR	6903176	CompoundStatement		23:30:739:739	6902991	1					
ANR	6903177	ExpressionStatement	total += count	525:3:18430:18444	6902991	0	True				
ANR	6903178	AssignmentExpression	total += count		6902991	0		+=			
ANR	6903179	Identifier	total		6902991	0					
ANR	6903180	Identifier	count		6902991	1					
ANR	6903181	ExpressionStatement	c0total += ( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count	526:3:18449:18507	6902991	1	True				
ANR	6903182	AssignmentExpression	c0total += ( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count		6902991	0		+=			
ANR	6903183	Identifier	c0total		6902991	0					
ANR	6903184	MultiplicativeExpression	( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count		6902991	1		*			
ANR	6903185	AdditiveExpression	( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )		6902991	0		+			
ANR	6903186	ShiftExpression	c0 << C0_SHIFT		6902991	0		<<			
ANR	6903187	Identifier	c0		6902991	0					
ANR	6903188	Identifier	C0_SHIFT		6902991	1					
ANR	6903189	ShiftExpression	( 1 << C0_SHIFT ) >> 1		6902991	1		>>			
ANR	6903190	ShiftExpression	1 << C0_SHIFT		6902991	0		<<			
ANR	6903191	PrimaryExpression	1		6902991	0					
ANR	6903192	Identifier	C0_SHIFT		6902991	1					
ANR	6903193	PrimaryExpression	1		6902991	1					
ANR	6903194	Identifier	count		6902991	1					
ANR	6903195	ExpressionStatement	c1total += ( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count	527:3:18512:18570	6902991	2	True				
ANR	6903196	AssignmentExpression	c1total += ( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count		6902991	0		+=			
ANR	6903197	Identifier	c1total		6902991	0					
ANR	6903198	MultiplicativeExpression	( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count		6902991	1		*			
ANR	6903199	AdditiveExpression	( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )		6902991	0		+			
ANR	6903200	ShiftExpression	c1 << C1_SHIFT		6902991	0		<<			
ANR	6903201	Identifier	c1		6902991	0					
ANR	6903202	Identifier	C1_SHIFT		6902991	1					
ANR	6903203	ShiftExpression	( 1 << C1_SHIFT ) >> 1		6902991	1		>>			
ANR	6903204	ShiftExpression	1 << C1_SHIFT		6902991	0		<<			
ANR	6903205	PrimaryExpression	1		6902991	0					
ANR	6903206	Identifier	C1_SHIFT		6902991	1					
ANR	6903207	PrimaryExpression	1		6902991	1					
ANR	6903208	Identifier	count		6902991	1					
ANR	6903209	ExpressionStatement	c2total += ( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count	528:3:18575:18633	6902991	3	True				
ANR	6903210	AssignmentExpression	c2total += ( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count		6902991	0		+=			
ANR	6903211	Identifier	c2total		6902991	0					
ANR	6903212	MultiplicativeExpression	( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count		6902991	1		*			
ANR	6903213	AdditiveExpression	( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )		6902991	0		+			
ANR	6903214	ShiftExpression	c2 << C2_SHIFT		6902991	0		<<			
ANR	6903215	Identifier	c2		6902991	0					
ANR	6903216	Identifier	C2_SHIFT		6902991	1					
ANR	6903217	ShiftExpression	( 1 << C2_SHIFT ) >> 1		6902991	1		>>			
ANR	6903218	ShiftExpression	1 << C2_SHIFT		6902991	0		<<			
ANR	6903219	PrimaryExpression	1		6902991	0					
ANR	6903220	Identifier	C2_SHIFT		6902991	1					
ANR	6903221	PrimaryExpression	1		6902991	1					
ANR	6903222	Identifier	count		6902991	1					
ANR	6903223	ExpressionStatement	cinfo -> colormap [ 0 ] [ icolor ] = ( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )	533:2:18657:18728	6902991	17	True				
ANR	6903224	AssignmentExpression	cinfo -> colormap [ 0 ] [ icolor ] = ( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )		6902991	0		=			
ANR	6903225	ArrayIndexing	cinfo -> colormap [ 0 ] [ icolor ]		6902991	0					
ANR	6903226	ArrayIndexing	cinfo -> colormap [ 0 ]		6902991	0					
ANR	6903227	PtrMemberAccess	cinfo -> colormap		6902991	0					
ANR	6903228	Identifier	cinfo		6902991	0					
ANR	6903229	Identifier	colormap		6902991	1					
ANR	6903230	PrimaryExpression	0		6902991	1					
ANR	6903231	Identifier	icolor		6902991	1					
ANR	6903232	CastExpression	( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )		6902991	1					
ANR	6903233	CastTarget	JSAMPLE		6902991	0					
ANR	6903234	MultiplicativeExpression	( c0total + ( total >> 1 ) ) / total		6902991	1		/			
ANR	6903235	AdditiveExpression	c0total + ( total >> 1 )		6902991	0		+			
ANR	6903236	Identifier	c0total		6902991	0					
ANR	6903237	ShiftExpression	total >> 1		6902991	1		>>			
ANR	6903238	Identifier	total		6902991	0					
ANR	6903239	PrimaryExpression	1		6902991	1					
ANR	6903240	Identifier	total		6902991	1					
ANR	6903241	ExpressionStatement	cinfo -> colormap [ 1 ] [ icolor ] = ( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )	534:2:18732:18803	6902991	18	True				
ANR	6903242	AssignmentExpression	cinfo -> colormap [ 1 ] [ icolor ] = ( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )		6902991	0		=			
ANR	6903243	ArrayIndexing	cinfo -> colormap [ 1 ] [ icolor ]		6902991	0					
ANR	6903244	ArrayIndexing	cinfo -> colormap [ 1 ]		6902991	0					
ANR	6903245	PtrMemberAccess	cinfo -> colormap		6902991	0					
ANR	6903246	Identifier	cinfo		6902991	0					
ANR	6903247	Identifier	colormap		6902991	1					
ANR	6903248	PrimaryExpression	1		6902991	1					
ANR	6903249	Identifier	icolor		6902991	1					
ANR	6903250	CastExpression	( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )		6902991	1					
ANR	6903251	CastTarget	JSAMPLE		6902991	0					
ANR	6903252	MultiplicativeExpression	( c1total + ( total >> 1 ) ) / total		6902991	1		/			
ANR	6903253	AdditiveExpression	c1total + ( total >> 1 )		6902991	0		+			
ANR	6903254	Identifier	c1total		6902991	0					
ANR	6903255	ShiftExpression	total >> 1		6902991	1		>>			
ANR	6903256	Identifier	total		6902991	0					
ANR	6903257	PrimaryExpression	1		6902991	1					
ANR	6903258	Identifier	total		6902991	1					
ANR	6903259	ExpressionStatement	cinfo -> colormap [ 2 ] [ icolor ] = ( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )	535:2:18807:18878	6902991	19	True				
ANR	6903260	AssignmentExpression	cinfo -> colormap [ 2 ] [ icolor ] = ( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )		6902991	0		=			
ANR	6903261	ArrayIndexing	cinfo -> colormap [ 2 ] [ icolor ]		6902991	0					
ANR	6903262	ArrayIndexing	cinfo -> colormap [ 2 ]		6902991	0					
ANR	6903263	PtrMemberAccess	cinfo -> colormap		6902991	0					
ANR	6903264	Identifier	cinfo		6902991	0					
ANR	6903265	Identifier	colormap		6902991	1					
ANR	6903266	PrimaryExpression	2		6902991	1					
ANR	6903267	Identifier	icolor		6902991	1					
ANR	6903268	CastExpression	( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )		6902991	1					
ANR	6903269	CastTarget	JSAMPLE		6902991	0					
ANR	6903270	MultiplicativeExpression	( c2total + ( total >> 1 ) ) / total		6902991	1		/			
ANR	6903271	AdditiveExpression	c2total + ( total >> 1 )		6902991	0		+			
ANR	6903272	Identifier	c2total		6902991	0					
ANR	6903273	ShiftExpression	total >> 1		6902991	1		>>			
ANR	6903274	Identifier	total		6902991	0					
ANR	6903275	PrimaryExpression	1		6902991	1					
ANR	6903276	Identifier	total		6902991	1					
ANR	6903277	Identifier	compute_color		6902991	1					
ANR	6903278	ParameterList	"j_decompress_ptr cinfo , boxptr boxp , int icolor"		6902991	2					
ANR	6903279	Parameter	j_decompress_ptr cinfo	500:15:17563:17584	6902991	0	True				
ANR	6903280	ParameterType	j_decompress_ptr		6902991	0					
ANR	6903281	Identifier	cinfo		6902991	1					
ANR	6903282	Parameter	boxptr boxp	500:39:17587:17597	6902991	1	True				
ANR	6903283	ParameterType	boxptr		6902991	0					
ANR	6903284	Identifier	boxp		6902991	1					
ANR	6903285	Parameter	int icolor	500:52:17600:17609	6902991	2	True				
ANR	6903286	ParameterType	int		6902991	0					
ANR	6903287	Identifier	icolor		6902991	1					
ANR	6903288	CFGEntryNode	ENTRY		6902991		True				
ANR	6903289	CFGExitNode	EXIT		6902991		True				
ANR	6903290	Symbol	* * cinfo		6902991						
ANR	6903291	Symbol	* * histogram		6902991						
ANR	6903292	Symbol	C2_SHIFT		6902991						
ANR	6903293	Symbol	c2total		6902991						
ANR	6903294	Symbol	c2min		6902991						
ANR	6903295	Symbol	cquantize		6902991						
ANR	6903296	Symbol	* cquantize		6902991						
ANR	6903297	Symbol	* cinfo -> colormap		6902991						
ANR	6903298	Symbol	boxp -> c1max		6902991						
ANR	6903299	Symbol	icolor		6902991						
ANR	6903300	Symbol	cquantize -> histogram		6902991						
ANR	6903301	Symbol	c0min		6902991						
ANR	6903302	Symbol	total		6902991						
ANR	6903303	Symbol	C0_SHIFT		6902991						
ANR	6903304	Symbol	* * c0		6902991						
ANR	6903305	Symbol	* icolor		6902991						
ANR	6903306	Symbol	c0max		6902991						
ANR	6903307	Symbol	* cinfo		6902991						
ANR	6903308	Symbol	c2max		6902991						
ANR	6903309	Symbol	boxp -> c0min		6902991						
ANR	6903310	Symbol	boxp -> c2min		6902991						
ANR	6903311	Symbol	histp		6902991						
ANR	6903312	Symbol	cinfo -> colormap		6902991						
ANR	6903313	Symbol	* boxp		6902991						
ANR	6903314	Symbol	count		6902991						
ANR	6903315	Symbol	* histogram		6902991						
ANR	6903316	Symbol	boxp		6902991						
ANR	6903317	Symbol	c1total		6902991						
ANR	6903318	Symbol	boxp -> c0max		6902991						
ANR	6903319	Symbol	c0		6902991						
ANR	6903320	Symbol	c1		6902991						
ANR	6903321	Symbol	c2		6902991						
ANR	6903322	Symbol	c1min		6902991						
ANR	6903323	Symbol	* * cinfo -> colormap		6902991						
ANR	6903324	Symbol	histogram		6902991						
ANR	6903325	Symbol	* c0		6902991						
ANR	6903326	Symbol	boxp -> c2max		6902991						
ANR	6903327	Symbol	cinfo -> cquantize		6902991						
ANR	6903328	Symbol	cinfo		6902991						
ANR	6903329	Symbol	* c1		6902991						
ANR	6903330	Symbol	* * * cinfo		6902991						
ANR	6903331	Symbol	c1max		6902991						
ANR	6903332	Symbol	* histp ++		6902991						
ANR	6903333	Symbol	C1_SHIFT		6902991						
ANR	6903334	Symbol	c0total		6902991						
ANR	6903335	Symbol	boxp -> c1min		6902991						
ANR	6903336	Function	select_colors	540:0:18896:19937							
ANR	6903337	FunctionDef	"select_colors (j_decompress_ptr cinfo , int desired_colors)"		6903336	0					
ANR	6903338	CompoundStatement		542:0:18996:19937	6903336	0					
ANR	6903339	IdentifierDeclStatement	boxptr boxlist ;	543:2:19000:19014	6903336	0	True				
ANR	6903340	IdentifierDecl	boxlist		6903336	0					
ANR	6903341	IdentifierDeclType	boxptr		6903336	0					
ANR	6903342	Identifier	boxlist		6903336	1					
ANR	6903343	IdentifierDeclStatement	int numboxes ;	544:2:19018:19030	6903336	1	True				
ANR	6903344	IdentifierDecl	numboxes		6903336	0					
ANR	6903345	IdentifierDeclType	int		6903336	0					
ANR	6903346	Identifier	numboxes		6903336	1					
ANR	6903347	IdentifierDeclStatement	int i ;	545:2:19034:19039	6903336	2	True				
ANR	6903348	IdentifierDecl	i		6903336	0					
ANR	6903349	IdentifierDeclType	int		6903336	0					
ANR	6903350	Identifier	i		6903336	1					
ANR	6903351	ExpressionStatement	"boxlist = ( boxptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"	548:2:19084:19199	6903336	3	True				
ANR	6903352	AssignmentExpression	"boxlist = ( boxptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"		6903336	0		=			
ANR	6903353	Identifier	boxlist		6903336	0					
ANR	6903354	CastExpression	"( boxptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"		6903336	1					
ANR	6903355	CastTarget	boxptr		6903336	0					
ANR	6903356	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"		6903336	1					
ANR	6903357	Callee	* cinfo -> mem -> alloc_small		6903336	0					
ANR	6903358	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6903336	0					
ANR	6903359	UnaryOperator	*		6903336	0					
ANR	6903360	PtrMemberAccess	cinfo -> mem -> alloc_small		6903336	1					
ANR	6903361	PtrMemberAccess	cinfo -> mem		6903336	0					
ANR	6903362	Identifier	cinfo		6903336	0					
ANR	6903363	Identifier	mem		6903336	1					
ANR	6903364	Identifier	alloc_small		6903336	1					
ANR	6903365	ArgumentList	( j_common_ptr ) cinfo		6903336	1					
ANR	6903366	Argument	( j_common_ptr ) cinfo		6903336	0					
ANR	6903367	CastExpression	( j_common_ptr ) cinfo		6903336	0					
ANR	6903368	CastTarget	j_common_ptr		6903336	0					
ANR	6903369	Identifier	cinfo		6903336	1					
ANR	6903370	Argument	JPOOL_IMAGE		6903336	1					
ANR	6903371	Identifier	JPOOL_IMAGE		6903336	0					
ANR	6903372	Argument	desired_colors * SIZEOF ( box )		6903336	2					
ANR	6903373	MultiplicativeExpression	desired_colors * SIZEOF ( box )		6903336	0		*			
ANR	6903374	Identifier	desired_colors		6903336	0					
ANR	6903375	CallExpression	SIZEOF ( box )		6903336	1					
ANR	6903376	Callee	SIZEOF		6903336	0					
ANR	6903377	Identifier	SIZEOF		6903336	0					
ANR	6903378	ArgumentList	box		6903336	1					
ANR	6903379	Argument	box		6903336	0					
ANR	6903380	Identifier	box		6903336	0					
ANR	6903381	ExpressionStatement	numboxes = 1	551:2:19253:19265	6903336	4	True				
ANR	6903382	AssignmentExpression	numboxes = 1		6903336	0		=			
ANR	6903383	Identifier	numboxes		6903336	0					
ANR	6903384	PrimaryExpression	1		6903336	1					
ANR	6903385	ExpressionStatement	boxlist [ 0 ] . c0min = 0	552:2:19269:19289	6903336	5	True				
ANR	6903386	AssignmentExpression	boxlist [ 0 ] . c0min = 0		6903336	0		=			
ANR	6903387	MemberAccess	boxlist [ 0 ] . c0min		6903336	0					
ANR	6903388	ArrayIndexing	boxlist [ 0 ]		6903336	0					
ANR	6903389	Identifier	boxlist		6903336	0					
ANR	6903390	PrimaryExpression	0		6903336	1					
ANR	6903391	Identifier	c0min		6903336	1					
ANR	6903392	PrimaryExpression	0		6903336	1					
ANR	6903393	ExpressionStatement	boxlist [ 0 ] . c0max = MAXJSAMPLE >> C0_SHIFT	553:2:19293:19334	6903336	6	True				
ANR	6903394	AssignmentExpression	boxlist [ 0 ] . c0max = MAXJSAMPLE >> C0_SHIFT		6903336	0		=			
ANR	6903395	MemberAccess	boxlist [ 0 ] . c0max		6903336	0					
ANR	6903396	ArrayIndexing	boxlist [ 0 ]		6903336	0					
ANR	6903397	Identifier	boxlist		6903336	0					
ANR	6903398	PrimaryExpression	0		6903336	1					
ANR	6903399	Identifier	c0max		6903336	1					
ANR	6903400	ShiftExpression	MAXJSAMPLE >> C0_SHIFT		6903336	1		>>			
ANR	6903401	Identifier	MAXJSAMPLE		6903336	0					
ANR	6903402	Identifier	C0_SHIFT		6903336	1					
ANR	6903403	ExpressionStatement	boxlist [ 0 ] . c1min = 0	554:2:19338:19358	6903336	7	True				
ANR	6903404	AssignmentExpression	boxlist [ 0 ] . c1min = 0		6903336	0		=			
ANR	6903405	MemberAccess	boxlist [ 0 ] . c1min		6903336	0					
ANR	6903406	ArrayIndexing	boxlist [ 0 ]		6903336	0					
ANR	6903407	Identifier	boxlist		6903336	0					
ANR	6903408	PrimaryExpression	0		6903336	1					
ANR	6903409	Identifier	c1min		6903336	1					
ANR	6903410	PrimaryExpression	0		6903336	1					
ANR	6903411	ExpressionStatement	boxlist [ 0 ] . c1max = MAXJSAMPLE >> C1_SHIFT	555:2:19362:19403	6903336	8	True				
ANR	6903412	AssignmentExpression	boxlist [ 0 ] . c1max = MAXJSAMPLE >> C1_SHIFT		6903336	0		=			
ANR	6903413	MemberAccess	boxlist [ 0 ] . c1max		6903336	0					
ANR	6903414	ArrayIndexing	boxlist [ 0 ]		6903336	0					
ANR	6903415	Identifier	boxlist		6903336	0					
ANR	6903416	PrimaryExpression	0		6903336	1					
ANR	6903417	Identifier	c1max		6903336	1					
ANR	6903418	ShiftExpression	MAXJSAMPLE >> C1_SHIFT		6903336	1		>>			
ANR	6903419	Identifier	MAXJSAMPLE		6903336	0					
ANR	6903420	Identifier	C1_SHIFT		6903336	1					
ANR	6903421	ExpressionStatement	boxlist [ 0 ] . c2min = 0	556:2:19407:19427	6903336	9	True				
ANR	6903422	AssignmentExpression	boxlist [ 0 ] . c2min = 0		6903336	0		=			
ANR	6903423	MemberAccess	boxlist [ 0 ] . c2min		6903336	0					
ANR	6903424	ArrayIndexing	boxlist [ 0 ]		6903336	0					
ANR	6903425	Identifier	boxlist		6903336	0					
ANR	6903426	PrimaryExpression	0		6903336	1					
ANR	6903427	Identifier	c2min		6903336	1					
ANR	6903428	PrimaryExpression	0		6903336	1					
ANR	6903429	ExpressionStatement	boxlist [ 0 ] . c2max = MAXJSAMPLE >> C2_SHIFT	557:2:19431:19472	6903336	10	True				
ANR	6903430	AssignmentExpression	boxlist [ 0 ] . c2max = MAXJSAMPLE >> C2_SHIFT		6903336	0		=			
ANR	6903431	MemberAccess	boxlist [ 0 ] . c2max		6903336	0					
ANR	6903432	ArrayIndexing	boxlist [ 0 ]		6903336	0					
ANR	6903433	Identifier	boxlist		6903336	0					
ANR	6903434	PrimaryExpression	0		6903336	1					
ANR	6903435	Identifier	c2max		6903336	1					
ANR	6903436	ShiftExpression	MAXJSAMPLE >> C2_SHIFT		6903336	1		>>			
ANR	6903437	Identifier	MAXJSAMPLE		6903336	0					
ANR	6903438	Identifier	C2_SHIFT		6903336	1					
ANR	6903439	ExpressionStatement	"update_box ( cinfo , & boxlist [ 0 ] )"	559:2:19541:19572	6903336	11	True				
ANR	6903440	CallExpression	"update_box ( cinfo , & boxlist [ 0 ] )"		6903336	0					
ANR	6903441	Callee	update_box		6903336	0					
ANR	6903442	Identifier	update_box		6903336	0					
ANR	6903443	ArgumentList	cinfo		6903336	1					
ANR	6903444	Argument	cinfo		6903336	0					
ANR	6903445	Identifier	cinfo		6903336	0					
ANR	6903446	Argument	& boxlist [ 0 ]		6903336	1					
ANR	6903447	UnaryOperationExpression	& boxlist [ 0 ]		6903336	0					
ANR	6903448	UnaryOperator	&		6903336	0					
ANR	6903449	ArrayIndexing	boxlist [ 0 ]		6903336	1					
ANR	6903450	Identifier	boxlist		6903336	0					
ANR	6903451	PrimaryExpression	0		6903336	1					
ANR	6903452	ExpressionStatement	"numboxes = median_cut ( cinfo , boxlist , numboxes , desired_colors )"	561:2:19629:19692	6903336	12	True				
ANR	6903453	AssignmentExpression	"numboxes = median_cut ( cinfo , boxlist , numboxes , desired_colors )"		6903336	0		=			
ANR	6903454	Identifier	numboxes		6903336	0					
ANR	6903455	CallExpression	"median_cut ( cinfo , boxlist , numboxes , desired_colors )"		6903336	1					
ANR	6903456	Callee	median_cut		6903336	0					
ANR	6903457	Identifier	median_cut		6903336	0					
ANR	6903458	ArgumentList	cinfo		6903336	1					
ANR	6903459	Argument	cinfo		6903336	0					
ANR	6903460	Identifier	cinfo		6903336	0					
ANR	6903461	Argument	boxlist		6903336	1					
ANR	6903462	Identifier	boxlist		6903336	0					
ANR	6903463	Argument	numboxes		6903336	2					
ANR	6903464	Identifier	numboxes		6903336	0					
ANR	6903465	Argument	desired_colors		6903336	3					
ANR	6903466	Identifier	desired_colors		6903336	0					
ANR	6903467	ForStatement	for ( i = 0 ; i < numboxes ; i ++ )		6903336	13					
ANR	6903468	ForInit	i = 0 ;	563:7:19770:19775	6903336	0	True				
ANR	6903469	AssignmentExpression	i = 0		6903336	0		=			
ANR	6903470	Identifier	i		6903336	0					
ANR	6903471	PrimaryExpression	0		6903336	1					
ANR	6903472	Condition	i < numboxes	563:14:19777:19788	6903336	1	True				
ANR	6903473	RelationalExpression	i < numboxes		6903336	0		<			
ANR	6903474	Identifier	i		6903336	0					
ANR	6903475	Identifier	numboxes		6903336	1					
ANR	6903476	PostIncDecOperationExpression	i ++	563:28:19791:19793	6903336	2	True				
ANR	6903477	Identifier	i		6903336	0					
ANR	6903478	IncDec	++		6903336	1					
ANR	6903479	ExpressionStatement	"compute_color ( cinfo , & boxlist [ i ] , i )"	564:4:19800:19837	6903336	3	True				
ANR	6903480	CallExpression	"compute_color ( cinfo , & boxlist [ i ] , i )"		6903336	0					
ANR	6903481	Callee	compute_color		6903336	0					
ANR	6903482	Identifier	compute_color		6903336	0					
ANR	6903483	ArgumentList	cinfo		6903336	1					
ANR	6903484	Argument	cinfo		6903336	0					
ANR	6903485	Identifier	cinfo		6903336	0					
ANR	6903486	Argument	& boxlist [ i ]		6903336	1					
ANR	6903487	UnaryOperationExpression	& boxlist [ i ]		6903336	0					
ANR	6903488	UnaryOperator	&		6903336	0					
ANR	6903489	ArrayIndexing	boxlist [ i ]		6903336	1					
ANR	6903490	Identifier	boxlist		6903336	0					
ANR	6903491	Identifier	i		6903336	1					
ANR	6903492	Argument	i		6903336	2					
ANR	6903493	Identifier	i		6903336	0					
ANR	6903494	ExpressionStatement	cinfo -> actual_number_of_colors = numboxes	565:2:19841:19882	6903336	14	True				
ANR	6903495	AssignmentExpression	cinfo -> actual_number_of_colors = numboxes		6903336	0		=			
ANR	6903496	PtrMemberAccess	cinfo -> actual_number_of_colors		6903336	0					
ANR	6903497	Identifier	cinfo		6903336	0					
ANR	6903498	Identifier	actual_number_of_colors		6903336	1					
ANR	6903499	Identifier	numboxes		6903336	1					
ANR	6903500	ExpressionStatement	"TRACEMS1 ( cinfo , 1 , JTRC_QUANT_SELECTED , numboxes )"	566:2:19886:19935	6903336	15	True				
ANR	6903501	CallExpression	"TRACEMS1 ( cinfo , 1 , JTRC_QUANT_SELECTED , numboxes )"		6903336	0					
ANR	6903502	Callee	TRACEMS1		6903336	0					
ANR	6903503	Identifier	TRACEMS1		6903336	0					
ANR	6903504	ArgumentList	cinfo		6903336	1					
ANR	6903505	Argument	cinfo		6903336	0					
ANR	6903506	Identifier	cinfo		6903336	0					
ANR	6903507	Argument	1		6903336	1					
ANR	6903508	PrimaryExpression	1		6903336	0					
ANR	6903509	Argument	JTRC_QUANT_SELECTED		6903336	2					
ANR	6903510	Identifier	JTRC_QUANT_SELECTED		6903336	0					
ANR	6903511	Argument	numboxes		6903336	3					
ANR	6903512	Identifier	numboxes		6903336	0					
ANR	6903513	Identifier	select_colors		6903336	1					
ANR	6903514	ParameterList	"j_decompress_ptr cinfo , int desired_colors"		6903336	2					
ANR	6903515	Parameter	j_decompress_ptr cinfo	540:15:18911:18932	6903336	0	True				
ANR	6903516	ParameterType	j_decompress_ptr		6903336	0					
ANR	6903517	Identifier	cinfo		6903336	1					
ANR	6903518	Parameter	int desired_colors	540:39:18935:18952	6903336	1	True				
ANR	6903519	ParameterType	int		6903336	0					
ANR	6903520	Identifier	desired_colors		6903336	1					
ANR	6903521	CFGEntryNode	ENTRY		6903336		True				
ANR	6903522	CFGExitNode	EXIT		6903336		True				
ANR	6903523	Symbol	* * cinfo		6903336						
ANR	6903524	Symbol	C2_SHIFT		6903336						
ANR	6903525	Symbol	SIZEOF		6903336						
ANR	6903526	Symbol	* boxlist		6903336						
ANR	6903527	Symbol	box		6903336						
ANR	6903528	Symbol	boxlist [ 0 ] . c1max		6903336						
ANR	6903529	Symbol	* cinfo -> mem		6903336						
ANR	6903530	Symbol	cinfo -> mem		6903336						
ANR	6903531	Symbol	* cinfo -> mem -> alloc_small		6903336						
ANR	6903532	Symbol	C0_SHIFT		6903336						
ANR	6903533	Symbol	boxlist [ 0 ] . c1min		6903336						
ANR	6903534	Symbol	* cinfo		6903336						
ANR	6903535	Symbol	numboxes		6903336						
ANR	6903536	Symbol	* * cinfo -> mem		6903336						
ANR	6903537	Symbol	median_cut		6903336						
ANR	6903538	Symbol	cinfo -> mem -> alloc_small		6903336						
ANR	6903539	Symbol	i		6903336						
ANR	6903540	Symbol	JPOOL_IMAGE		6903336						
ANR	6903541	Symbol	boxlist [ 0 ] . c2max		6903336						
ANR	6903542	Symbol	boxlist [ 0 ] . c0max		6903336						
ANR	6903543	Symbol	desired_colors		6903336						
ANR	6903544	Symbol	boxlist		6903336						
ANR	6903545	Symbol	cinfo -> actual_number_of_colors		6903336						
ANR	6903546	Symbol	cinfo		6903336						
ANR	6903547	Symbol	MAXJSAMPLE		6903336						
ANR	6903548	Symbol	* * * cinfo		6903336						
ANR	6903549	Symbol	JTRC_QUANT_SELECTED		6903336						
ANR	6903550	Symbol	boxlist [ 0 ] . c2min		6903336						
ANR	6903551	Symbol	boxlist [ 0 ] . c0min		6903336						
ANR	6903552	Symbol	C1_SHIFT		6903336						
ANR	6903553	Function	find_nearby_colors	647:0:24236:28627							
ANR	6903554	FunctionDef	"find_nearby_colors (j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , JSAMPLE colorlist [ ])"		6903553	0					
ANR	6903555	CompoundStatement		657:0:24797:28627	6903553	0					
ANR	6903556	IdentifierDeclStatement	int numcolors = cinfo -> actual_number_of_colors ;	658:2:24801:24847	6903553	0	True				
ANR	6903557	IdentifierDecl	numcolors = cinfo -> actual_number_of_colors		6903553	0					
ANR	6903558	IdentifierDeclType	int		6903553	0					
ANR	6903559	Identifier	numcolors		6903553	1					
ANR	6903560	AssignmentExpression	numcolors = cinfo -> actual_number_of_colors		6903553	2		=			
ANR	6903561	Identifier	numcolors		6903553	0					
ANR	6903562	PtrMemberAccess	cinfo -> actual_number_of_colors		6903553	1					
ANR	6903563	Identifier	cinfo		6903553	0					
ANR	6903564	Identifier	actual_number_of_colors		6903553	1					
ANR	6903565	IdentifierDeclStatement	"int maxc0 , maxc1 , maxc2 ;"	659:2:24851:24874	6903553	1	True				
ANR	6903566	IdentifierDecl	maxc0		6903553	0					
ANR	6903567	IdentifierDeclType	int		6903553	0					
ANR	6903568	Identifier	maxc0		6903553	1					
ANR	6903569	IdentifierDecl	maxc1		6903553	1					
ANR	6903570	IdentifierDeclType	int		6903553	0					
ANR	6903571	Identifier	maxc1		6903553	1					
ANR	6903572	IdentifierDecl	maxc2		6903553	2					
ANR	6903573	IdentifierDeclType	int		6903553	0					
ANR	6903574	Identifier	maxc2		6903553	1					
ANR	6903575	IdentifierDeclStatement	"int centerc0 , centerc1 , centerc2 ;"	660:2:24878:24910	6903553	2	True				
ANR	6903576	IdentifierDecl	centerc0		6903553	0					
ANR	6903577	IdentifierDeclType	int		6903553	0					
ANR	6903578	Identifier	centerc0		6903553	1					
ANR	6903579	IdentifierDecl	centerc1		6903553	1					
ANR	6903580	IdentifierDeclType	int		6903553	0					
ANR	6903581	Identifier	centerc1		6903553	1					
ANR	6903582	IdentifierDecl	centerc2		6903553	2					
ANR	6903583	IdentifierDeclType	int		6903553	0					
ANR	6903584	Identifier	centerc2		6903553	1					
ANR	6903585	IdentifierDeclStatement	"int i , x , ncolors ;"	661:2:24914:24931	6903553	3	True				
ANR	6903586	IdentifierDecl	i		6903553	0					
ANR	6903587	IdentifierDeclType	int		6903553	0					
ANR	6903588	Identifier	i		6903553	1					
ANR	6903589	IdentifierDecl	x		6903553	1					
ANR	6903590	IdentifierDeclType	int		6903553	0					
ANR	6903591	Identifier	x		6903553	1					
ANR	6903592	IdentifierDecl	ncolors		6903553	2					
ANR	6903593	IdentifierDeclType	int		6903553	0					
ANR	6903594	Identifier	ncolors		6903553	1					
ANR	6903595	IdentifierDeclStatement	"INT32 minmaxdist , min_dist , max_dist , tdist ;"	662:2:24935:24978	6903553	4	True				
ANR	6903596	IdentifierDecl	minmaxdist		6903553	0					
ANR	6903597	IdentifierDeclType	INT32		6903553	0					
ANR	6903598	Identifier	minmaxdist		6903553	1					
ANR	6903599	IdentifierDecl	min_dist		6903553	1					
ANR	6903600	IdentifierDeclType	INT32		6903553	0					
ANR	6903601	Identifier	min_dist		6903553	1					
ANR	6903602	IdentifierDecl	max_dist		6903553	2					
ANR	6903603	IdentifierDeclType	INT32		6903553	0					
ANR	6903604	Identifier	max_dist		6903553	1					
ANR	6903605	IdentifierDecl	tdist		6903553	3					
ANR	6903606	IdentifierDeclType	INT32		6903553	0					
ANR	6903607	Identifier	tdist		6903553	1					
ANR	6903608	IdentifierDeclStatement	INT32 mindist [ MAXNUMCOLORS ] ;	663:2:24982:25009	6903553	5	True				
ANR	6903609	IdentifierDecl	mindist [ MAXNUMCOLORS ]		6903553	0					
ANR	6903610	IdentifierDeclType	INT32 [ MAXNUMCOLORS ]		6903553	0					
ANR	6903611	Identifier	mindist		6903553	1					
ANR	6903612	Identifier	MAXNUMCOLORS		6903553	2					
ANR	6903613	ExpressionStatement	maxc0 = minc0 + ( ( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT ) )	671:2:25429:25484	6903553	6	True				
ANR	6903614	AssignmentExpression	maxc0 = minc0 + ( ( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT ) )		6903553	0		=			
ANR	6903615	Identifier	maxc0		6903553	0					
ANR	6903616	AdditiveExpression	minc0 + ( ( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT ) )		6903553	1		+			
ANR	6903617	Identifier	minc0		6903553	0					
ANR	6903618	AdditiveExpression	( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT )		6903553	1		-			
ANR	6903619	ShiftExpression	1 << BOX_C0_SHIFT		6903553	0		<<			
ANR	6903620	PrimaryExpression	1		6903553	0					
ANR	6903621	Identifier	BOX_C0_SHIFT		6903553	1					
ANR	6903622	ShiftExpression	1 << C0_SHIFT		6903553	1		<<			
ANR	6903623	PrimaryExpression	1		6903553	0					
ANR	6903624	Identifier	C0_SHIFT		6903553	1					
ANR	6903625	ExpressionStatement	centerc0 = ( minc0 + maxc0 ) >> 1	672:2:25488:25519	6903553	7	True				
ANR	6903626	AssignmentExpression	centerc0 = ( minc0 + maxc0 ) >> 1		6903553	0		=			
ANR	6903627	Identifier	centerc0		6903553	0					
ANR	6903628	ShiftExpression	( minc0 + maxc0 ) >> 1		6903553	1		>>			
ANR	6903629	AdditiveExpression	minc0 + maxc0		6903553	0		+			
ANR	6903630	Identifier	minc0		6903553	0					
ANR	6903631	Identifier	maxc0		6903553	1					
ANR	6903632	PrimaryExpression	1		6903553	1					
ANR	6903633	ExpressionStatement	maxc1 = minc1 + ( ( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT ) )	673:2:25523:25578	6903553	8	True				
ANR	6903634	AssignmentExpression	maxc1 = minc1 + ( ( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT ) )		6903553	0		=			
ANR	6903635	Identifier	maxc1		6903553	0					
ANR	6903636	AdditiveExpression	minc1 + ( ( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT ) )		6903553	1		+			
ANR	6903637	Identifier	minc1		6903553	0					
ANR	6903638	AdditiveExpression	( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT )		6903553	1		-			
ANR	6903639	ShiftExpression	1 << BOX_C1_SHIFT		6903553	0		<<			
ANR	6903640	PrimaryExpression	1		6903553	0					
ANR	6903641	Identifier	BOX_C1_SHIFT		6903553	1					
ANR	6903642	ShiftExpression	1 << C1_SHIFT		6903553	1		<<			
ANR	6903643	PrimaryExpression	1		6903553	0					
ANR	6903644	Identifier	C1_SHIFT		6903553	1					
ANR	6903645	ExpressionStatement	centerc1 = ( minc1 + maxc1 ) >> 1	674:2:25582:25613	6903553	9	True				
ANR	6903646	AssignmentExpression	centerc1 = ( minc1 + maxc1 ) >> 1		6903553	0		=			
ANR	6903647	Identifier	centerc1		6903553	0					
ANR	6903648	ShiftExpression	( minc1 + maxc1 ) >> 1		6903553	1		>>			
ANR	6903649	AdditiveExpression	minc1 + maxc1		6903553	0		+			
ANR	6903650	Identifier	minc1		6903553	0					
ANR	6903651	Identifier	maxc1		6903553	1					
ANR	6903652	PrimaryExpression	1		6903553	1					
ANR	6903653	ExpressionStatement	maxc2 = minc2 + ( ( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT ) )	675:2:25617:25672	6903553	10	True				
ANR	6903654	AssignmentExpression	maxc2 = minc2 + ( ( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT ) )		6903553	0		=			
ANR	6903655	Identifier	maxc2		6903553	0					
ANR	6903656	AdditiveExpression	minc2 + ( ( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT ) )		6903553	1		+			
ANR	6903657	Identifier	minc2		6903553	0					
ANR	6903658	AdditiveExpression	( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT )		6903553	1		-			
ANR	6903659	ShiftExpression	1 << BOX_C2_SHIFT		6903553	0		<<			
ANR	6903660	PrimaryExpression	1		6903553	0					
ANR	6903661	Identifier	BOX_C2_SHIFT		6903553	1					
ANR	6903662	ShiftExpression	1 << C2_SHIFT		6903553	1		<<			
ANR	6903663	PrimaryExpression	1		6903553	0					
ANR	6903664	Identifier	C2_SHIFT		6903553	1					
ANR	6903665	ExpressionStatement	centerc2 = ( minc2 + maxc2 ) >> 1	676:2:25676:25707	6903553	11	True				
ANR	6903666	AssignmentExpression	centerc2 = ( minc2 + maxc2 ) >> 1		6903553	0		=			
ANR	6903667	Identifier	centerc2		6903553	0					
ANR	6903668	ShiftExpression	( minc2 + maxc2 ) >> 1		6903553	1		>>			
ANR	6903669	AdditiveExpression	minc2 + maxc2		6903553	0		+			
ANR	6903670	Identifier	minc2		6903553	0					
ANR	6903671	Identifier	maxc2		6903553	1					
ANR	6903672	PrimaryExpression	1		6903553	1					
ANR	6903673	ExpressionStatement	minmaxdist = 0x7FFFFFFFL	686:2:26138:26162	6903553	12	True				
ANR	6903674	AssignmentExpression	minmaxdist = 0x7FFFFFFFL		6903553	0		=			
ANR	6903675	Identifier	minmaxdist		6903553	0					
ANR	6903676	PrimaryExpression	0x7FFFFFFFL		6903553	1					
ANR	6903677	ForStatement	for ( i = 0 ; i < numcolors ; i ++ )		6903553	13					
ANR	6903678	ForInit	i = 0 ;	688:7:26172:26177	6903553	0	True				
ANR	6903679	AssignmentExpression	i = 0		6903553	0		=			
ANR	6903680	Identifier	i		6903553	0					
ANR	6903681	PrimaryExpression	0		6903553	1					
ANR	6903682	Condition	i < numcolors	688:14:26179:26191	6903553	1	True				
ANR	6903683	RelationalExpression	i < numcolors		6903553	0		<			
ANR	6903684	Identifier	i		6903553	0					
ANR	6903685	Identifier	numcolors		6903553	1					
ANR	6903686	PostIncDecOperationExpression	i ++	688:29:26194:26196	6903553	2	True				
ANR	6903687	Identifier	i		6903553	0					
ANR	6903688	IncDec	++		6903553	1					
ANR	6903689	CompoundStatement		32:34:1401:1401	6903553	3					
ANR	6903690	ExpressionStatement	x = GETJSAMPLE ( cinfo -> colormap [ 0 ] [ i ] )	690:4:26283:26320	6903553	0	True				
ANR	6903691	AssignmentExpression	x = GETJSAMPLE ( cinfo -> colormap [ 0 ] [ i ] )		6903553	0		=			
ANR	6903692	Identifier	x		6903553	0					
ANR	6903693	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 0 ] [ i ] )		6903553	1					
ANR	6903694	Callee	GETJSAMPLE		6903553	0					
ANR	6903695	Identifier	GETJSAMPLE		6903553	0					
ANR	6903696	ArgumentList	cinfo -> colormap [ 0 ] [ i ]		6903553	1					
ANR	6903697	Argument	cinfo -> colormap [ 0 ] [ i ]		6903553	0					
ANR	6903698	ArrayIndexing	cinfo -> colormap [ 0 ] [ i ]		6903553	0					
ANR	6903699	ArrayIndexing	cinfo -> colormap [ 0 ]		6903553	0					
ANR	6903700	PtrMemberAccess	cinfo -> colormap		6903553	0					
ANR	6903701	Identifier	cinfo		6903553	0					
ANR	6903702	Identifier	colormap		6903553	1					
ANR	6903703	PrimaryExpression	0		6903553	1					
ANR	6903704	Identifier	i		6903553	1					
ANR	6903705	IfStatement	if ( x < minc0 )		6903553	1					
ANR	6903706	Condition	x < minc0	691:8:26330:26338	6903553	0	True				
ANR	6903707	RelationalExpression	x < minc0		6903553	0		<			
ANR	6903708	Identifier	x		6903553	0					
ANR	6903709	Identifier	minc0		6903553	1					
ANR	6903710	CompoundStatement		35:19:1543:1543	6903553	1					
ANR	6903711	ExpressionStatement	tdist = ( x - minc0 ) * C0_SCALE	692:6:26349:26379	6903553	0	True				
ANR	6903712	AssignmentExpression	tdist = ( x - minc0 ) * C0_SCALE		6903553	0		=			
ANR	6903713	Identifier	tdist		6903553	0					
ANR	6903714	MultiplicativeExpression	( x - minc0 ) * C0_SCALE		6903553	1		*			
ANR	6903715	AdditiveExpression	x - minc0		6903553	0		-			
ANR	6903716	Identifier	x		6903553	0					
ANR	6903717	Identifier	minc0		6903553	1					
ANR	6903718	Identifier	C0_SCALE		6903553	1					
ANR	6903719	ExpressionStatement	min_dist = tdist * tdist	693:6:26387:26409	6903553	1	True				
ANR	6903720	AssignmentExpression	min_dist = tdist * tdist		6903553	0		=			
ANR	6903721	Identifier	min_dist		6903553	0					
ANR	6903722	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903723	Identifier	tdist		6903553	0					
ANR	6903724	Identifier	tdist		6903553	1					
ANR	6903725	ExpressionStatement	tdist = ( x - maxc0 ) * C0_SCALE	694:6:26417:26447	6903553	2	True				
ANR	6903726	AssignmentExpression	tdist = ( x - maxc0 ) * C0_SCALE		6903553	0		=			
ANR	6903727	Identifier	tdist		6903553	0					
ANR	6903728	MultiplicativeExpression	( x - maxc0 ) * C0_SCALE		6903553	1		*			
ANR	6903729	AdditiveExpression	x - maxc0		6903553	0		-			
ANR	6903730	Identifier	x		6903553	0					
ANR	6903731	Identifier	maxc0		6903553	1					
ANR	6903732	Identifier	C0_SCALE		6903553	1					
ANR	6903733	ExpressionStatement	max_dist = tdist * tdist	695:6:26455:26477	6903553	3	True				
ANR	6903734	AssignmentExpression	max_dist = tdist * tdist		6903553	0		=			
ANR	6903735	Identifier	max_dist		6903553	0					
ANR	6903736	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903737	Identifier	tdist		6903553	0					
ANR	6903738	Identifier	tdist		6903553	1					
ANR	6903739	ElseStatement	else		6903553	0					
ANR	6903740	IfStatement	if ( x > maxc0 )		6903553	0					
ANR	6903741	Condition	x > maxc0	696:15:26494:26502	6903553	0	True				
ANR	6903742	RelationalExpression	x > maxc0		6903553	0		>			
ANR	6903743	Identifier	x		6903553	0					
ANR	6903744	Identifier	maxc0		6903553	1					
ANR	6903745	CompoundStatement		40:26:1707:1707	6903553	1					
ANR	6903746	ExpressionStatement	tdist = ( x - maxc0 ) * C0_SCALE	697:6:26513:26543	6903553	0	True				
ANR	6903747	AssignmentExpression	tdist = ( x - maxc0 ) * C0_SCALE		6903553	0		=			
ANR	6903748	Identifier	tdist		6903553	0					
ANR	6903749	MultiplicativeExpression	( x - maxc0 ) * C0_SCALE		6903553	1		*			
ANR	6903750	AdditiveExpression	x - maxc0		6903553	0		-			
ANR	6903751	Identifier	x		6903553	0					
ANR	6903752	Identifier	maxc0		6903553	1					
ANR	6903753	Identifier	C0_SCALE		6903553	1					
ANR	6903754	ExpressionStatement	min_dist = tdist * tdist	698:6:26551:26573	6903553	1	True				
ANR	6903755	AssignmentExpression	min_dist = tdist * tdist		6903553	0		=			
ANR	6903756	Identifier	min_dist		6903553	0					
ANR	6903757	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903758	Identifier	tdist		6903553	0					
ANR	6903759	Identifier	tdist		6903553	1					
ANR	6903760	ExpressionStatement	tdist = ( x - minc0 ) * C0_SCALE	699:6:26581:26611	6903553	2	True				
ANR	6903761	AssignmentExpression	tdist = ( x - minc0 ) * C0_SCALE		6903553	0		=			
ANR	6903762	Identifier	tdist		6903553	0					
ANR	6903763	MultiplicativeExpression	( x - minc0 ) * C0_SCALE		6903553	1		*			
ANR	6903764	AdditiveExpression	x - minc0		6903553	0		-			
ANR	6903765	Identifier	x		6903553	0					
ANR	6903766	Identifier	minc0		6903553	1					
ANR	6903767	Identifier	C0_SCALE		6903553	1					
ANR	6903768	ExpressionStatement	max_dist = tdist * tdist	700:6:26619:26641	6903553	3	True				
ANR	6903769	AssignmentExpression	max_dist = tdist * tdist		6903553	0		=			
ANR	6903770	Identifier	max_dist		6903553	0					
ANR	6903771	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903772	Identifier	tdist		6903553	0					
ANR	6903773	Identifier	tdist		6903553	1					
ANR	6903774	ElseStatement	else		6903553	0					
ANR	6903775	CompoundStatement		45:11:1856:1856	6903553	0					
ANR	6903776	ExpressionStatement	min_dist = 0	703:6:26723:26735	6903553	0	True				
ANR	6903777	AssignmentExpression	min_dist = 0		6903553	0		=			
ANR	6903778	Identifier	min_dist		6903553	0					
ANR	6903779	PrimaryExpression	0		6903553	1					
ANR	6903780	IfStatement	if ( x <= centerc0 )		6903553	1					
ANR	6903781	Condition	x <= centerc0	704:10:26747:26759	6903553	0	True				
ANR	6903782	RelationalExpression	x <= centerc0		6903553	0		<=			
ANR	6903783	Identifier	x		6903553	0					
ANR	6903784	Identifier	centerc0		6903553	1					
ANR	6903785	CompoundStatement		48:25:1964:1964	6903553	1					
ANR	6903786	ExpressionStatement	tdist = ( x - maxc0 ) * C0_SCALE	705:1:26765:26795	6903553	0	True				
ANR	6903787	AssignmentExpression	tdist = ( x - maxc0 ) * C0_SCALE		6903553	0		=			
ANR	6903788	Identifier	tdist		6903553	0					
ANR	6903789	MultiplicativeExpression	( x - maxc0 ) * C0_SCALE		6903553	1		*			
ANR	6903790	AdditiveExpression	x - maxc0		6903553	0		-			
ANR	6903791	Identifier	x		6903553	0					
ANR	6903792	Identifier	maxc0		6903553	1					
ANR	6903793	Identifier	C0_SCALE		6903553	1					
ANR	6903794	ExpressionStatement	max_dist = tdist * tdist	706:1:26798:26820	6903553	1	True				
ANR	6903795	AssignmentExpression	max_dist = tdist * tdist		6903553	0		=			
ANR	6903796	Identifier	max_dist		6903553	0					
ANR	6903797	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903798	Identifier	tdist		6903553	0					
ANR	6903799	Identifier	tdist		6903553	1					
ANR	6903800	ElseStatement	else		6903553	0					
ANR	6903801	CompoundStatement		51:13:2037:2037	6903553	0					
ANR	6903802	ExpressionStatement	tdist = ( x - minc0 ) * C0_SCALE	708:1:26838:26868	6903553	0	True				
ANR	6903803	AssignmentExpression	tdist = ( x - minc0 ) * C0_SCALE		6903553	0		=			
ANR	6903804	Identifier	tdist		6903553	0					
ANR	6903805	MultiplicativeExpression	( x - minc0 ) * C0_SCALE		6903553	1		*			
ANR	6903806	AdditiveExpression	x - minc0		6903553	0		-			
ANR	6903807	Identifier	x		6903553	0					
ANR	6903808	Identifier	minc0		6903553	1					
ANR	6903809	Identifier	C0_SCALE		6903553	1					
ANR	6903810	ExpressionStatement	max_dist = tdist * tdist	709:1:26871:26893	6903553	1	True				
ANR	6903811	AssignmentExpression	max_dist = tdist * tdist		6903553	0		=			
ANR	6903812	Identifier	max_dist		6903553	0					
ANR	6903813	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903814	Identifier	tdist		6903553	0					
ANR	6903815	Identifier	tdist		6903553	1					
ANR	6903816	ExpressionStatement	x = GETJSAMPLE ( cinfo -> colormap [ 1 ] [ i ] )	713:4:26914:26951	6903553	2	True				
ANR	6903817	AssignmentExpression	x = GETJSAMPLE ( cinfo -> colormap [ 1 ] [ i ] )		6903553	0		=			
ANR	6903818	Identifier	x		6903553	0					
ANR	6903819	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 1 ] [ i ] )		6903553	1					
ANR	6903820	Callee	GETJSAMPLE		6903553	0					
ANR	6903821	Identifier	GETJSAMPLE		6903553	0					
ANR	6903822	ArgumentList	cinfo -> colormap [ 1 ] [ i ]		6903553	1					
ANR	6903823	Argument	cinfo -> colormap [ 1 ] [ i ]		6903553	0					
ANR	6903824	ArrayIndexing	cinfo -> colormap [ 1 ] [ i ]		6903553	0					
ANR	6903825	ArrayIndexing	cinfo -> colormap [ 1 ]		6903553	0					
ANR	6903826	PtrMemberAccess	cinfo -> colormap		6903553	0					
ANR	6903827	Identifier	cinfo		6903553	0					
ANR	6903828	Identifier	colormap		6903553	1					
ANR	6903829	PrimaryExpression	1		6903553	1					
ANR	6903830	Identifier	i		6903553	1					
ANR	6903831	IfStatement	if ( x < minc1 )		6903553	3					
ANR	6903832	Condition	x < minc1	714:8:26961:26969	6903553	0	True				
ANR	6903833	RelationalExpression	x < minc1		6903553	0		<			
ANR	6903834	Identifier	x		6903553	0					
ANR	6903835	Identifier	minc1		6903553	1					
ANR	6903836	CompoundStatement		58:19:2174:2174	6903553	1					
ANR	6903837	ExpressionStatement	tdist = ( x - minc1 ) * C1_SCALE	715:6:26980:27010	6903553	0	True				
ANR	6903838	AssignmentExpression	tdist = ( x - minc1 ) * C1_SCALE		6903553	0		=			
ANR	6903839	Identifier	tdist		6903553	0					
ANR	6903840	MultiplicativeExpression	( x - minc1 ) * C1_SCALE		6903553	1		*			
ANR	6903841	AdditiveExpression	x - minc1		6903553	0		-			
ANR	6903842	Identifier	x		6903553	0					
ANR	6903843	Identifier	minc1		6903553	1					
ANR	6903844	Identifier	C1_SCALE		6903553	1					
ANR	6903845	ExpressionStatement	min_dist += tdist * tdist	716:6:27018:27041	6903553	1	True				
ANR	6903846	AssignmentExpression	min_dist += tdist * tdist		6903553	0		+=			
ANR	6903847	Identifier	min_dist		6903553	0					
ANR	6903848	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903849	Identifier	tdist		6903553	0					
ANR	6903850	Identifier	tdist		6903553	1					
ANR	6903851	ExpressionStatement	tdist = ( x - maxc1 ) * C1_SCALE	717:6:27049:27079	6903553	2	True				
ANR	6903852	AssignmentExpression	tdist = ( x - maxc1 ) * C1_SCALE		6903553	0		=			
ANR	6903853	Identifier	tdist		6903553	0					
ANR	6903854	MultiplicativeExpression	( x - maxc1 ) * C1_SCALE		6903553	1		*			
ANR	6903855	AdditiveExpression	x - maxc1		6903553	0		-			
ANR	6903856	Identifier	x		6903553	0					
ANR	6903857	Identifier	maxc1		6903553	1					
ANR	6903858	Identifier	C1_SCALE		6903553	1					
ANR	6903859	ExpressionStatement	max_dist += tdist * tdist	718:6:27087:27110	6903553	3	True				
ANR	6903860	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6903861	Identifier	max_dist		6903553	0					
ANR	6903862	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903863	Identifier	tdist		6903553	0					
ANR	6903864	Identifier	tdist		6903553	1					
ANR	6903865	ElseStatement	else		6903553	0					
ANR	6903866	IfStatement	if ( x > maxc1 )		6903553	0					
ANR	6903867	Condition	x > maxc1	719:15:27127:27135	6903553	0	True				
ANR	6903868	RelationalExpression	x > maxc1		6903553	0		>			
ANR	6903869	Identifier	x		6903553	0					
ANR	6903870	Identifier	maxc1		6903553	1					
ANR	6903871	CompoundStatement		63:26:2340:2340	6903553	1					
ANR	6903872	ExpressionStatement	tdist = ( x - maxc1 ) * C1_SCALE	720:6:27146:27176	6903553	0	True				
ANR	6903873	AssignmentExpression	tdist = ( x - maxc1 ) * C1_SCALE		6903553	0		=			
ANR	6903874	Identifier	tdist		6903553	0					
ANR	6903875	MultiplicativeExpression	( x - maxc1 ) * C1_SCALE		6903553	1		*			
ANR	6903876	AdditiveExpression	x - maxc1		6903553	0		-			
ANR	6903877	Identifier	x		6903553	0					
ANR	6903878	Identifier	maxc1		6903553	1					
ANR	6903879	Identifier	C1_SCALE		6903553	1					
ANR	6903880	ExpressionStatement	min_dist += tdist * tdist	721:6:27184:27207	6903553	1	True				
ANR	6903881	AssignmentExpression	min_dist += tdist * tdist		6903553	0		+=			
ANR	6903882	Identifier	min_dist		6903553	0					
ANR	6903883	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903884	Identifier	tdist		6903553	0					
ANR	6903885	Identifier	tdist		6903553	1					
ANR	6903886	ExpressionStatement	tdist = ( x - minc1 ) * C1_SCALE	722:6:27215:27245	6903553	2	True				
ANR	6903887	AssignmentExpression	tdist = ( x - minc1 ) * C1_SCALE		6903553	0		=			
ANR	6903888	Identifier	tdist		6903553	0					
ANR	6903889	MultiplicativeExpression	( x - minc1 ) * C1_SCALE		6903553	1		*			
ANR	6903890	AdditiveExpression	x - minc1		6903553	0		-			
ANR	6903891	Identifier	x		6903553	0					
ANR	6903892	Identifier	minc1		6903553	1					
ANR	6903893	Identifier	C1_SCALE		6903553	1					
ANR	6903894	ExpressionStatement	max_dist += tdist * tdist	723:6:27253:27276	6903553	3	True				
ANR	6903895	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6903896	Identifier	max_dist		6903553	0					
ANR	6903897	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903898	Identifier	tdist		6903553	0					
ANR	6903899	Identifier	tdist		6903553	1					
ANR	6903900	ElseStatement	else		6903553	0					
ANR	6903901	CompoundStatement		68:11:2491:2491	6903553	0					
ANR	6903902	IfStatement	if ( x <= centerc1 )		6903553	0					
ANR	6903903	Condition	x <= centerc1	726:10:27362:27374	6903553	0	True				
ANR	6903904	RelationalExpression	x <= centerc1		6903553	0		<=			
ANR	6903905	Identifier	x		6903553	0					
ANR	6903906	Identifier	centerc1		6903553	1					
ANR	6903907	CompoundStatement		70:25:2579:2579	6903553	1					
ANR	6903908	ExpressionStatement	tdist = ( x - maxc1 ) * C1_SCALE	727:1:27380:27410	6903553	0	True				
ANR	6903909	AssignmentExpression	tdist = ( x - maxc1 ) * C1_SCALE		6903553	0		=			
ANR	6903910	Identifier	tdist		6903553	0					
ANR	6903911	MultiplicativeExpression	( x - maxc1 ) * C1_SCALE		6903553	1		*			
ANR	6903912	AdditiveExpression	x - maxc1		6903553	0		-			
ANR	6903913	Identifier	x		6903553	0					
ANR	6903914	Identifier	maxc1		6903553	1					
ANR	6903915	Identifier	C1_SCALE		6903553	1					
ANR	6903916	ExpressionStatement	max_dist += tdist * tdist	728:1:27413:27436	6903553	1	True				
ANR	6903917	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6903918	Identifier	max_dist		6903553	0					
ANR	6903919	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903920	Identifier	tdist		6903553	0					
ANR	6903921	Identifier	tdist		6903553	1					
ANR	6903922	ElseStatement	else		6903553	0					
ANR	6903923	CompoundStatement		73:13:2653:2653	6903553	0					
ANR	6903924	ExpressionStatement	tdist = ( x - minc1 ) * C1_SCALE	730:1:27454:27484	6903553	0	True				
ANR	6903925	AssignmentExpression	tdist = ( x - minc1 ) * C1_SCALE		6903553	0		=			
ANR	6903926	Identifier	tdist		6903553	0					
ANR	6903927	MultiplicativeExpression	( x - minc1 ) * C1_SCALE		6903553	1		*			
ANR	6903928	AdditiveExpression	x - minc1		6903553	0		-			
ANR	6903929	Identifier	x		6903553	0					
ANR	6903930	Identifier	minc1		6903553	1					
ANR	6903931	Identifier	C1_SCALE		6903553	1					
ANR	6903932	ExpressionStatement	max_dist += tdist * tdist	731:1:27487:27510	6903553	1	True				
ANR	6903933	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6903934	Identifier	max_dist		6903553	0					
ANR	6903935	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903936	Identifier	tdist		6903553	0					
ANR	6903937	Identifier	tdist		6903553	1					
ANR	6903938	ExpressionStatement	x = GETJSAMPLE ( cinfo -> colormap [ 2 ] [ i ] )	735:4:27531:27568	6903553	4	True				
ANR	6903939	AssignmentExpression	x = GETJSAMPLE ( cinfo -> colormap [ 2 ] [ i ] )		6903553	0		=			
ANR	6903940	Identifier	x		6903553	0					
ANR	6903941	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 2 ] [ i ] )		6903553	1					
ANR	6903942	Callee	GETJSAMPLE		6903553	0					
ANR	6903943	Identifier	GETJSAMPLE		6903553	0					
ANR	6903944	ArgumentList	cinfo -> colormap [ 2 ] [ i ]		6903553	1					
ANR	6903945	Argument	cinfo -> colormap [ 2 ] [ i ]		6903553	0					
ANR	6903946	ArrayIndexing	cinfo -> colormap [ 2 ] [ i ]		6903553	0					
ANR	6903947	ArrayIndexing	cinfo -> colormap [ 2 ]		6903553	0					
ANR	6903948	PtrMemberAccess	cinfo -> colormap		6903553	0					
ANR	6903949	Identifier	cinfo		6903553	0					
ANR	6903950	Identifier	colormap		6903553	1					
ANR	6903951	PrimaryExpression	2		6903553	1					
ANR	6903952	Identifier	i		6903553	1					
ANR	6903953	IfStatement	if ( x < minc2 )		6903553	5					
ANR	6903954	Condition	x < minc2	736:8:27578:27586	6903553	0	True				
ANR	6903955	RelationalExpression	x < minc2		6903553	0		<			
ANR	6903956	Identifier	x		6903553	0					
ANR	6903957	Identifier	minc2		6903553	1					
ANR	6903958	CompoundStatement		80:19:2791:2791	6903553	1					
ANR	6903959	ExpressionStatement	tdist = ( x - minc2 ) * C2_SCALE	737:6:27597:27627	6903553	0	True				
ANR	6903960	AssignmentExpression	tdist = ( x - minc2 ) * C2_SCALE		6903553	0		=			
ANR	6903961	Identifier	tdist		6903553	0					
ANR	6903962	MultiplicativeExpression	( x - minc2 ) * C2_SCALE		6903553	1		*			
ANR	6903963	AdditiveExpression	x - minc2		6903553	0		-			
ANR	6903964	Identifier	x		6903553	0					
ANR	6903965	Identifier	minc2		6903553	1					
ANR	6903966	Identifier	C2_SCALE		6903553	1					
ANR	6903967	ExpressionStatement	min_dist += tdist * tdist	738:6:27635:27658	6903553	1	True				
ANR	6903968	AssignmentExpression	min_dist += tdist * tdist		6903553	0		+=			
ANR	6903969	Identifier	min_dist		6903553	0					
ANR	6903970	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903971	Identifier	tdist		6903553	0					
ANR	6903972	Identifier	tdist		6903553	1					
ANR	6903973	ExpressionStatement	tdist = ( x - maxc2 ) * C2_SCALE	739:6:27666:27696	6903553	2	True				
ANR	6903974	AssignmentExpression	tdist = ( x - maxc2 ) * C2_SCALE		6903553	0		=			
ANR	6903975	Identifier	tdist		6903553	0					
ANR	6903976	MultiplicativeExpression	( x - maxc2 ) * C2_SCALE		6903553	1		*			
ANR	6903977	AdditiveExpression	x - maxc2		6903553	0		-			
ANR	6903978	Identifier	x		6903553	0					
ANR	6903979	Identifier	maxc2		6903553	1					
ANR	6903980	Identifier	C2_SCALE		6903553	1					
ANR	6903981	ExpressionStatement	max_dist += tdist * tdist	740:6:27704:27727	6903553	3	True				
ANR	6903982	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6903983	Identifier	max_dist		6903553	0					
ANR	6903984	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6903985	Identifier	tdist		6903553	0					
ANR	6903986	Identifier	tdist		6903553	1					
ANR	6903987	ElseStatement	else		6903553	0					
ANR	6903988	IfStatement	if ( x > maxc2 )		6903553	0					
ANR	6903989	Condition	x > maxc2	741:15:27744:27752	6903553	0	True				
ANR	6903990	RelationalExpression	x > maxc2		6903553	0		>			
ANR	6903991	Identifier	x		6903553	0					
ANR	6903992	Identifier	maxc2		6903553	1					
ANR	6903993	CompoundStatement		85:26:2957:2957	6903553	1					
ANR	6903994	ExpressionStatement	tdist = ( x - maxc2 ) * C2_SCALE	742:6:27763:27793	6903553	0	True				
ANR	6903995	AssignmentExpression	tdist = ( x - maxc2 ) * C2_SCALE		6903553	0		=			
ANR	6903996	Identifier	tdist		6903553	0					
ANR	6903997	MultiplicativeExpression	( x - maxc2 ) * C2_SCALE		6903553	1		*			
ANR	6903998	AdditiveExpression	x - maxc2		6903553	0		-			
ANR	6903999	Identifier	x		6903553	0					
ANR	6904000	Identifier	maxc2		6903553	1					
ANR	6904001	Identifier	C2_SCALE		6903553	1					
ANR	6904002	ExpressionStatement	min_dist += tdist * tdist	743:6:27801:27824	6903553	1	True				
ANR	6904003	AssignmentExpression	min_dist += tdist * tdist		6903553	0		+=			
ANR	6904004	Identifier	min_dist		6903553	0					
ANR	6904005	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6904006	Identifier	tdist		6903553	0					
ANR	6904007	Identifier	tdist		6903553	1					
ANR	6904008	ExpressionStatement	tdist = ( x - minc2 ) * C2_SCALE	744:6:27832:27862	6903553	2	True				
ANR	6904009	AssignmentExpression	tdist = ( x - minc2 ) * C2_SCALE		6903553	0		=			
ANR	6904010	Identifier	tdist		6903553	0					
ANR	6904011	MultiplicativeExpression	( x - minc2 ) * C2_SCALE		6903553	1		*			
ANR	6904012	AdditiveExpression	x - minc2		6903553	0		-			
ANR	6904013	Identifier	x		6903553	0					
ANR	6904014	Identifier	minc2		6903553	1					
ANR	6904015	Identifier	C2_SCALE		6903553	1					
ANR	6904016	ExpressionStatement	max_dist += tdist * tdist	745:6:27870:27893	6903553	3	True				
ANR	6904017	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6904018	Identifier	max_dist		6903553	0					
ANR	6904019	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6904020	Identifier	tdist		6903553	0					
ANR	6904021	Identifier	tdist		6903553	1					
ANR	6904022	ElseStatement	else		6903553	0					
ANR	6904023	CompoundStatement		90:11:3108:3108	6903553	0					
ANR	6904024	IfStatement	if ( x <= centerc2 )		6903553	0					
ANR	6904025	Condition	x <= centerc2	748:10:27979:27991	6903553	0	True				
ANR	6904026	RelationalExpression	x <= centerc2		6903553	0		<=			
ANR	6904027	Identifier	x		6903553	0					
ANR	6904028	Identifier	centerc2		6903553	1					
ANR	6904029	CompoundStatement		92:25:3196:3196	6903553	1					
ANR	6904030	ExpressionStatement	tdist = ( x - maxc2 ) * C2_SCALE	749:1:27997:28027	6903553	0	True				
ANR	6904031	AssignmentExpression	tdist = ( x - maxc2 ) * C2_SCALE		6903553	0		=			
ANR	6904032	Identifier	tdist		6903553	0					
ANR	6904033	MultiplicativeExpression	( x - maxc2 ) * C2_SCALE		6903553	1		*			
ANR	6904034	AdditiveExpression	x - maxc2		6903553	0		-			
ANR	6904035	Identifier	x		6903553	0					
ANR	6904036	Identifier	maxc2		6903553	1					
ANR	6904037	Identifier	C2_SCALE		6903553	1					
ANR	6904038	ExpressionStatement	max_dist += tdist * tdist	750:1:28030:28053	6903553	1	True				
ANR	6904039	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6904040	Identifier	max_dist		6903553	0					
ANR	6904041	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6904042	Identifier	tdist		6903553	0					
ANR	6904043	Identifier	tdist		6903553	1					
ANR	6904044	ElseStatement	else		6903553	0					
ANR	6904045	CompoundStatement		95:13:3270:3270	6903553	0					
ANR	6904046	ExpressionStatement	tdist = ( x - minc2 ) * C2_SCALE	752:1:28071:28101	6903553	0	True				
ANR	6904047	AssignmentExpression	tdist = ( x - minc2 ) * C2_SCALE		6903553	0		=			
ANR	6904048	Identifier	tdist		6903553	0					
ANR	6904049	MultiplicativeExpression	( x - minc2 ) * C2_SCALE		6903553	1		*			
ANR	6904050	AdditiveExpression	x - minc2		6903553	0		-			
ANR	6904051	Identifier	x		6903553	0					
ANR	6904052	Identifier	minc2		6903553	1					
ANR	6904053	Identifier	C2_SCALE		6903553	1					
ANR	6904054	ExpressionStatement	max_dist += tdist * tdist	753:1:28104:28127	6903553	1	True				
ANR	6904055	AssignmentExpression	max_dist += tdist * tdist		6903553	0		+=			
ANR	6904056	Identifier	max_dist		6903553	0					
ANR	6904057	MultiplicativeExpression	tdist * tdist		6903553	1		*			
ANR	6904058	Identifier	tdist		6903553	0					
ANR	6904059	Identifier	tdist		6903553	1					
ANR	6904060	ExpressionStatement	mindist [ i ] = min_dist	757:4:28148:28169	6903553	6	True				
ANR	6904061	AssignmentExpression	mindist [ i ] = min_dist		6903553	0		=			
ANR	6904062	ArrayIndexing	mindist [ i ]		6903553	0					
ANR	6904063	Identifier	mindist		6903553	0					
ANR	6904064	Identifier	i		6903553	1					
ANR	6904065	Identifier	min_dist		6903553	1					
ANR	6904066	IfStatement	if ( max_dist < minmaxdist )		6903553	7					
ANR	6904067	Condition	max_dist < minmaxdist	758:8:28207:28227	6903553	0	True				
ANR	6904068	RelationalExpression	max_dist < minmaxdist		6903553	0		<			
ANR	6904069	Identifier	max_dist		6903553	0					
ANR	6904070	Identifier	minmaxdist		6903553	1					
ANR	6904071	ExpressionStatement	minmaxdist = max_dist	759:6:28236:28257	6903553	1	True				
ANR	6904072	AssignmentExpression	minmaxdist = max_dist		6903553	0		=			
ANR	6904073	Identifier	minmaxdist		6903553	0					
ANR	6904074	Identifier	max_dist		6903553	1					
ANR	6904075	ExpressionStatement	ncolors = 0	766:2:28480:28491	6903553	14	True				
ANR	6904076	AssignmentExpression	ncolors = 0		6903553	0		=			
ANR	6904077	Identifier	ncolors		6903553	0					
ANR	6904078	PrimaryExpression	0		6903553	1					
ANR	6904079	ForStatement	for ( i = 0 ; i < numcolors ; i ++ )		6903553	15					
ANR	6904080	ForInit	i = 0 ;	767:7:28500:28505	6903553	0	True				
ANR	6904081	AssignmentExpression	i = 0		6903553	0		=			
ANR	6904082	Identifier	i		6903553	0					
ANR	6904083	PrimaryExpression	0		6903553	1					
ANR	6904084	Condition	i < numcolors	767:14:28507:28519	6903553	1	True				
ANR	6904085	RelationalExpression	i < numcolors		6903553	0		<			
ANR	6904086	Identifier	i		6903553	0					
ANR	6904087	Identifier	numcolors		6903553	1					
ANR	6904088	PostIncDecOperationExpression	i ++	767:29:28522:28524	6903553	2	True				
ANR	6904089	Identifier	i		6903553	0					
ANR	6904090	IncDec	++		6903553	1					
ANR	6904091	CompoundStatement		111:34:3729:3729	6903553	3					
ANR	6904092	IfStatement	if ( mindist [ i ] <= minmaxdist )		6903553	0					
ANR	6904093	Condition	mindist [ i ] <= minmaxdist	768:8:28537:28560	6903553	0	True				
ANR	6904094	RelationalExpression	mindist [ i ] <= minmaxdist		6903553	0		<=			
ANR	6904095	ArrayIndexing	mindist [ i ]		6903553	0					
ANR	6904096	Identifier	mindist		6903553	0					
ANR	6904097	Identifier	i		6903553	1					
ANR	6904098	Identifier	minmaxdist		6903553	1					
ANR	6904099	ExpressionStatement	colorlist [ ncolors ++ ] = ( JSAMPLE ) i	769:6:28569:28603	6903553	1	True				
ANR	6904100	AssignmentExpression	colorlist [ ncolors ++ ] = ( JSAMPLE ) i		6903553	0		=			
ANR	6904101	ArrayIndexing	colorlist [ ncolors ++ ]		6903553	0					
ANR	6904102	Identifier	colorlist		6903553	0					
ANR	6904103	PostIncDecOperationExpression	ncolors ++		6903553	1					
ANR	6904104	Identifier	ncolors		6903553	0					
ANR	6904105	IncDec	++		6903553	1					
ANR	6904106	CastExpression	( JSAMPLE ) i		6903553	1					
ANR	6904107	CastTarget	JSAMPLE		6903553	0					
ANR	6904108	Identifier	i		6903553	1					
ANR	6904109	ReturnStatement	return ncolors ;	771:2:28611:28625	6903553	16	True				
ANR	6904110	Identifier	ncolors		6903553	0					
ANR	6904111	Identifier	find_nearby_colors		6903553	1					
ANR	6904112	ParameterList	"j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , JSAMPLE colorlist [ ]"		6903553	2					
ANR	6904113	Parameter	j_decompress_ptr cinfo	647:20:24256:24277	6903553	0	True				
ANR	6904114	ParameterType	j_decompress_ptr		6903553	0					
ANR	6904115	Identifier	cinfo		6903553	1					
ANR	6904116	Parameter	int minc0	647:44:24280:24288	6903553	1	True				
ANR	6904117	ParameterType	int		6903553	0					
ANR	6904118	Identifier	minc0		6903553	1					
ANR	6904119	Parameter	int minc1	647:55:24291:24299	6903553	2	True				
ANR	6904120	ParameterType	int		6903553	0					
ANR	6904121	Identifier	minc1		6903553	1					
ANR	6904122	Parameter	int minc2	647:66:24302:24310	6903553	3	True				
ANR	6904123	ParameterType	int		6903553	0					
ANR	6904124	Identifier	minc2		6903553	1					
ANR	6904125	Parameter	JSAMPLE colorlist [ ]	648:6:24319:24337	6903553	4	True				
ANR	6904126	ParameterType	JSAMPLE [ ]		6903553	0					
ANR	6904127	Identifier	colorlist		6903553	1					
ANR	6904128	CFGEntryNode	ENTRY		6903553		True				
ANR	6904129	CFGExitNode	EXIT		6903553		True				
ANR	6904130	Symbol	* * cinfo		6903553						
ANR	6904131	Symbol	C2_SHIFT		6903553						
ANR	6904132	Symbol	mindist		6903553						
ANR	6904133	Symbol	C2_SCALE		6903553						
ANR	6904134	Symbol	tdist		6903553						
ANR	6904135	Symbol	* cinfo -> colormap		6903553						
ANR	6904136	Symbol	minc0		6903553						
ANR	6904137	Symbol	* mindist		6903553						
ANR	6904138	Symbol	BOX_C1_SHIFT		6903553						
ANR	6904139	Symbol	minmaxdist		6903553						
ANR	6904140	Symbol	C0_SHIFT		6903553						
ANR	6904141	Symbol	* colorlist		6903553						
ANR	6904142	Symbol	colorlist		6903553						
ANR	6904143	Symbol	* cinfo		6903553						
ANR	6904144	Symbol	min_dist		6903553						
ANR	6904145	Symbol	C0_SCALE		6903553						
ANR	6904146	Symbol	numcolors		6903553						
ANR	6904147	Symbol	GETJSAMPLE		6903553						
ANR	6904148	Symbol	cinfo -> colormap		6903553						
ANR	6904149	Symbol	i		6903553						
ANR	6904150	Symbol	BOX_C0_SHIFT		6903553						
ANR	6904151	Symbol	max_dist		6903553						
ANR	6904152	Symbol	* * cinfo -> colormap		6903553						
ANR	6904153	Symbol	minc2		6903553						
ANR	6904154	Symbol	minc1		6903553						
ANR	6904155	Symbol	centerc1		6903553						
ANR	6904156	Symbol	ncolors		6903553						
ANR	6904157	Symbol	cinfo -> actual_number_of_colors		6903553						
ANR	6904158	Symbol	centerc0		6903553						
ANR	6904159	Symbol	* i		6903553						
ANR	6904160	Symbol	C1_SCALE		6903553						
ANR	6904161	Symbol	cinfo		6903553						
ANR	6904162	Symbol	centerc2		6903553						
ANR	6904163	Symbol	* * * cinfo		6903553						
ANR	6904164	Symbol	x		6903553						
ANR	6904165	Symbol	maxc0		6903553						
ANR	6904166	Symbol	BOX_C2_SHIFT		6903553						
ANR	6904167	Symbol	maxc2		6903553						
ANR	6904168	Symbol	C1_SHIFT		6903553						
ANR	6904169	Symbol	maxc1		6903553						
ANR	6904170	Function	find_best_colors	776:0:28643:31543							
ANR	6904171	FunctionDef	"find_best_colors (j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , int numcolors , JSAMPLE colorlist [ ] , JSAMPLE bestcolor [ ])"		6904170	0					
ANR	6904172	CompoundStatement		784:0:29139:31543	6904170	0					
ANR	6904173	IdentifierDeclStatement	"int ic0 , ic1 , ic2 ;"	785:2:29143:29160	6904170	0	True				
ANR	6904174	IdentifierDecl	ic0		6904170	0					
ANR	6904175	IdentifierDeclType	int		6904170	0					
ANR	6904176	Identifier	ic0		6904170	1					
ANR	6904177	IdentifierDecl	ic1		6904170	1					
ANR	6904178	IdentifierDeclType	int		6904170	0					
ANR	6904179	Identifier	ic1		6904170	1					
ANR	6904180	IdentifierDecl	ic2		6904170	2					
ANR	6904181	IdentifierDeclType	int		6904170	0					
ANR	6904182	Identifier	ic2		6904170	1					
ANR	6904183	IdentifierDeclStatement	"int i , icolor ;"	786:2:29164:29177	6904170	1	True				
ANR	6904184	IdentifierDecl	i		6904170	0					
ANR	6904185	IdentifierDeclType	int		6904170	0					
ANR	6904186	Identifier	i		6904170	1					
ANR	6904187	IdentifierDecl	icolor		6904170	1					
ANR	6904188	IdentifierDeclType	int		6904170	0					
ANR	6904189	Identifier	icolor		6904170	1					
ANR	6904190	Statement	register	787:2:29181:29188	6904170	2	True				
ANR	6904191	IdentifierDeclStatement	INT32 * bptr ;	787:11:29190:29202	6904170	3	True				
ANR	6904192	IdentifierDecl	* bptr		6904170	0					
ANR	6904193	IdentifierDeclType	INT32 *		6904170	0					
ANR	6904194	Identifier	bptr		6904170	1					
ANR	6904195	IdentifierDeclStatement	JSAMPLE * cptr ;	788:2:29242:29256	6904170	4	True				
ANR	6904196	IdentifierDecl	* cptr		6904170	0					
ANR	6904197	IdentifierDeclType	JSAMPLE *		6904170	0					
ANR	6904198	Identifier	cptr		6904170	1					
ANR	6904199	IdentifierDeclStatement	"INT32 dist0 , dist1 ;"	789:2:29298:29316	6904170	5	True				
ANR	6904200	IdentifierDecl	dist0		6904170	0					
ANR	6904201	IdentifierDeclType	INT32		6904170	0					
ANR	6904202	Identifier	dist0		6904170	1					
ANR	6904203	IdentifierDecl	dist1		6904170	1					
ANR	6904204	IdentifierDeclType	INT32		6904170	0					
ANR	6904205	Identifier	dist1		6904170	1					
ANR	6904206	Statement	register	790:2:29351:29358	6904170	6	True				
ANR	6904207	IdentifierDeclStatement	INT32 dist2 ;	790:11:29360:29371	6904170	7	True				
ANR	6904208	IdentifierDecl	dist2		6904170	0					
ANR	6904209	IdentifierDeclType	INT32		6904170	0					
ANR	6904210	Identifier	dist2		6904170	1					
ANR	6904211	IdentifierDeclStatement	"INT32 xx0 , xx1 ;"	791:2:29413:29427	6904170	8	True				
ANR	6904212	IdentifierDecl	xx0		6904170	0					
ANR	6904213	IdentifierDeclType	INT32		6904170	0					
ANR	6904214	Identifier	xx0		6904170	1					
ANR	6904215	IdentifierDecl	xx1		6904170	1					
ANR	6904216	IdentifierDeclType	INT32		6904170	0					
ANR	6904217	Identifier	xx1		6904170	1					
ANR	6904218	Statement	register	792:2:29458:29465	6904170	9	True				
ANR	6904219	IdentifierDeclStatement	INT32 xx2 ;	792:11:29467:29476	6904170	10	True				
ANR	6904220	IdentifierDecl	xx2		6904170	0					
ANR	6904221	IdentifierDeclType	INT32		6904170	0					
ANR	6904222	Identifier	xx2		6904170	1					
ANR	6904223	IdentifierDeclStatement	"INT32 inc0 , inc1 , inc2 ;"	793:2:29480:29502	6904170	11	True				
ANR	6904224	IdentifierDecl	inc0		6904170	0					
ANR	6904225	IdentifierDeclType	INT32		6904170	0					
ANR	6904226	Identifier	inc0		6904170	1					
ANR	6904227	IdentifierDecl	inc1		6904170	1					
ANR	6904228	IdentifierDeclType	INT32		6904170	0					
ANR	6904229	Identifier	inc1		6904170	1					
ANR	6904230	IdentifierDecl	inc2		6904170	2					
ANR	6904231	IdentifierDeclType	INT32		6904170	0					
ANR	6904232	Identifier	inc2		6904170	1					
ANR	6904233	IdentifierDeclStatement	INT32 bestdist [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ] ;	795:2:29622:29680	6904170	12	True				
ANR	6904234	IdentifierDecl	bestdist [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6904170	0					
ANR	6904235	IdentifierDeclType	INT32 [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6904170	0					
ANR	6904236	Identifier	bestdist		6904170	1					
ANR	6904237	MultiplicativeExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS		6904170	2		*			
ANR	6904238	Identifier	BOX_C0_ELEMS		6904170	0					
ANR	6904239	MultiplicativeExpression	BOX_C1_ELEMS * BOX_C2_ELEMS		6904170	1		*			
ANR	6904240	Identifier	BOX_C1_ELEMS		6904170	0					
ANR	6904241	Identifier	BOX_C2_ELEMS		6904170	1					
ANR	6904242	ExpressionStatement	bptr = bestdist	798:2:29750:29765	6904170	13	True				
ANR	6904243	AssignmentExpression	bptr = bestdist		6904170	0		=			
ANR	6904244	Identifier	bptr		6904170	0					
ANR	6904245	Identifier	bestdist		6904170	1					
ANR	6904246	ForStatement	for ( i = BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1 ; i >= 0 ; i -- )		6904170	14					
ANR	6904247	ForInit	i = BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1 ;	799:7:29774:29818	6904170	0	True				
ANR	6904248	AssignmentExpression	i = BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1		6904170	0		=			
ANR	6904249	Identifier	i		6904170	0					
ANR	6904250	AdditiveExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1		6904170	1		-			
ANR	6904251	MultiplicativeExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS		6904170	0		*			
ANR	6904252	Identifier	BOX_C0_ELEMS		6904170	0					
ANR	6904253	MultiplicativeExpression	BOX_C1_ELEMS * BOX_C2_ELEMS		6904170	1		*			
ANR	6904254	Identifier	BOX_C1_ELEMS		6904170	0					
ANR	6904255	Identifier	BOX_C2_ELEMS		6904170	1					
ANR	6904256	PrimaryExpression	1		6904170	1					
ANR	6904257	Condition	i >= 0	799:53:29820:29825	6904170	1	True				
ANR	6904258	RelationalExpression	i >= 0		6904170	0		>=			
ANR	6904259	Identifier	i		6904170	0					
ANR	6904260	PrimaryExpression	0		6904170	1					
ANR	6904261	PostIncDecOperationExpression	i --	799:61:29828:29830	6904170	2	True				
ANR	6904262	Identifier	i		6904170	0					
ANR	6904263	IncDec	--		6904170	1					
ANR	6904264	ExpressionStatement	* bptr ++ = 0x7FFFFFFFL	800:4:29837:29858	6904170	3	True				
ANR	6904265	AssignmentExpression	* bptr ++ = 0x7FFFFFFFL		6904170	0		=			
ANR	6904266	UnaryOperationExpression	* bptr ++		6904170	0					
ANR	6904267	UnaryOperator	*		6904170	0					
ANR	6904268	PostIncDecOperationExpression	bptr ++		6904170	1					
ANR	6904269	Identifier	bptr		6904170	0					
ANR	6904270	IncDec	++		6904170	1					
ANR	6904271	PrimaryExpression	0x7FFFFFFFL		6904170	1					
ANR	6904272	Statement	define	808:1:30134:30139	6904170	15	True				
ANR	6904273	Statement	STEP_C0	808:8:30141:30147	6904170	16	True				
ANR	6904274	Statement	(	808:17:30150:30150	6904170	17	True				
ANR	6904275	Statement	(	808:18:30151:30151	6904170	18	True				
ANR	6904276	Statement	1	808:19:30152:30152	6904170	19	True				
ANR	6904277	Statement	<<	808:21:30154:30155	6904170	20	True				
ANR	6904278	Statement	C0_SHIFT	808:24:30157:30164	6904170	21	True				
ANR	6904279	Statement	)	808:32:30165:30165	6904170	22	True				
ANR	6904280	Statement	*	808:34:30167:30167	6904170	23	True				
ANR	6904281	Statement	C0_SCALE	808:36:30169:30176	6904170	24	True				
ANR	6904282	Statement	)	808:44:30177:30177	6904170	25	True				
ANR	6904283	Statement	define	809:1:30180:30185	6904170	26	True				
ANR	6904284	Statement	STEP_C1	809:8:30187:30193	6904170	27	True				
ANR	6904285	Statement	(	809:17:30196:30196	6904170	28	True				
ANR	6904286	Statement	(	809:18:30197:30197	6904170	29	True				
ANR	6904287	Statement	1	809:19:30198:30198	6904170	30	True				
ANR	6904288	Statement	<<	809:21:30200:30201	6904170	31	True				
ANR	6904289	Statement	C1_SHIFT	809:24:30203:30210	6904170	32	True				
ANR	6904290	Statement	)	809:32:30211:30211	6904170	33	True				
ANR	6904291	Statement	*	809:34:30213:30213	6904170	34	True				
ANR	6904292	Statement	C1_SCALE	809:36:30215:30222	6904170	35	True				
ANR	6904293	Statement	)	809:44:30223:30223	6904170	36	True				
ANR	6904294	Statement	define	810:1:30226:30231	6904170	37	True				
ANR	6904295	Statement	STEP_C2	810:8:30233:30239	6904170	38	True				
ANR	6904296	Statement	(	810:17:30242:30242	6904170	39	True				
ANR	6904297	Statement	(	810:18:30243:30243	6904170	40	True				
ANR	6904298	Statement	1	810:19:30244:30244	6904170	41	True				
ANR	6904299	Statement	<<	810:21:30246:30247	6904170	42	True				
ANR	6904300	Statement	C2_SHIFT	810:24:30249:30256	6904170	43	True				
ANR	6904301	Statement	)	810:32:30257:30257	6904170	44	True				
ANR	6904302	Statement	*	810:34:30259:30259	6904170	45	True				
ANR	6904303	Statement	C2_SCALE	810:36:30261:30268	6904170	46	True				
ANR	6904304	Statement	)	810:44:30269:30269	6904170	47	True				
ANR	6904305	ForStatement	for ( i = 0 ; i < numcolors ; i ++ )		6904170	48					
ANR	6904306	ForInit	i = 0 ;	812:7:30281:30286	6904170	0	True				
ANR	6904307	AssignmentExpression	i = 0		6904170	0		=			
ANR	6904308	Identifier	i		6904170	0					
ANR	6904309	PrimaryExpression	0		6904170	1					
ANR	6904310	Condition	i < numcolors	812:14:30288:30300	6904170	1	True				
ANR	6904311	RelationalExpression	i < numcolors		6904170	0		<			
ANR	6904312	Identifier	i		6904170	0					
ANR	6904313	Identifier	numcolors		6904170	1					
ANR	6904314	PostIncDecOperationExpression	i ++	812:29:30303:30305	6904170	2	True				
ANR	6904315	Identifier	i		6904170	0					
ANR	6904316	IncDec	++		6904170	1					
ANR	6904317	CompoundStatement		29:34:1168:1168	6904170	3					
ANR	6904318	ExpressionStatement	icolor = GETJSAMPLE ( colorlist [ i ] )	813:4:30314:30347	6904170	0	True				
ANR	6904319	AssignmentExpression	icolor = GETJSAMPLE ( colorlist [ i ] )		6904170	0		=			
ANR	6904320	Identifier	icolor		6904170	0					
ANR	6904321	CallExpression	GETJSAMPLE ( colorlist [ i ] )		6904170	1					
ANR	6904322	Callee	GETJSAMPLE		6904170	0					
ANR	6904323	Identifier	GETJSAMPLE		6904170	0					
ANR	6904324	ArgumentList	colorlist [ i ]		6904170	1					
ANR	6904325	Argument	colorlist [ i ]		6904170	0					
ANR	6904326	ArrayIndexing	colorlist [ i ]		6904170	0					
ANR	6904327	Identifier	colorlist		6904170	0					
ANR	6904328	Identifier	i		6904170	1					
ANR	6904329	ExpressionStatement	inc0 = ( minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] ) ) * C0_SCALE	815:4:30423:30489	6904170	1	True				
ANR	6904330	AssignmentExpression	inc0 = ( minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] ) ) * C0_SCALE		6904170	0		=			
ANR	6904331	Identifier	inc0		6904170	0					
ANR	6904332	MultiplicativeExpression	( minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] ) ) * C0_SCALE		6904170	1		*			
ANR	6904333	AdditiveExpression	minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] )		6904170	0		-			
ANR	6904334	Identifier	minc0		6904170	0					
ANR	6904335	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] )		6904170	1					
ANR	6904336	Callee	GETJSAMPLE		6904170	0					
ANR	6904337	Identifier	GETJSAMPLE		6904170	0					
ANR	6904338	ArgumentList	cinfo -> colormap [ 0 ] [ icolor ]		6904170	1					
ANR	6904339	Argument	cinfo -> colormap [ 0 ] [ icolor ]		6904170	0					
ANR	6904340	ArrayIndexing	cinfo -> colormap [ 0 ] [ icolor ]		6904170	0					
ANR	6904341	ArrayIndexing	cinfo -> colormap [ 0 ]		6904170	0					
ANR	6904342	PtrMemberAccess	cinfo -> colormap		6904170	0					
ANR	6904343	Identifier	cinfo		6904170	0					
ANR	6904344	Identifier	colormap		6904170	1					
ANR	6904345	PrimaryExpression	0		6904170	1					
ANR	6904346	Identifier	icolor		6904170	1					
ANR	6904347	Identifier	C0_SCALE		6904170	1					
ANR	6904348	ExpressionStatement	dist0 = inc0 * inc0	816:4:30495:30512	6904170	2	True				
ANR	6904349	AssignmentExpression	dist0 = inc0 * inc0		6904170	0		=			
ANR	6904350	Identifier	dist0		6904170	0					
ANR	6904351	MultiplicativeExpression	inc0 * inc0		6904170	1		*			
ANR	6904352	Identifier	inc0		6904170	0					
ANR	6904353	Identifier	inc0		6904170	1					
ANR	6904354	ExpressionStatement	inc1 = ( minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] ) ) * C1_SCALE	817:4:30518:30584	6904170	3	True				
ANR	6904355	AssignmentExpression	inc1 = ( minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] ) ) * C1_SCALE		6904170	0		=			
ANR	6904356	Identifier	inc1		6904170	0					
ANR	6904357	MultiplicativeExpression	( minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] ) ) * C1_SCALE		6904170	1		*			
ANR	6904358	AdditiveExpression	minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] )		6904170	0		-			
ANR	6904359	Identifier	minc1		6904170	0					
ANR	6904360	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] )		6904170	1					
ANR	6904361	Callee	GETJSAMPLE		6904170	0					
ANR	6904362	Identifier	GETJSAMPLE		6904170	0					
ANR	6904363	ArgumentList	cinfo -> colormap [ 1 ] [ icolor ]		6904170	1					
ANR	6904364	Argument	cinfo -> colormap [ 1 ] [ icolor ]		6904170	0					
ANR	6904365	ArrayIndexing	cinfo -> colormap [ 1 ] [ icolor ]		6904170	0					
ANR	6904366	ArrayIndexing	cinfo -> colormap [ 1 ]		6904170	0					
ANR	6904367	PtrMemberAccess	cinfo -> colormap		6904170	0					
ANR	6904368	Identifier	cinfo		6904170	0					
ANR	6904369	Identifier	colormap		6904170	1					
ANR	6904370	PrimaryExpression	1		6904170	1					
ANR	6904371	Identifier	icolor		6904170	1					
ANR	6904372	Identifier	C1_SCALE		6904170	1					
ANR	6904373	ExpressionStatement	dist0 += inc1 * inc1	818:4:30590:30608	6904170	4	True				
ANR	6904374	AssignmentExpression	dist0 += inc1 * inc1		6904170	0		+=			
ANR	6904375	Identifier	dist0		6904170	0					
ANR	6904376	MultiplicativeExpression	inc1 * inc1		6904170	1		*			
ANR	6904377	Identifier	inc1		6904170	0					
ANR	6904378	Identifier	inc1		6904170	1					
ANR	6904379	ExpressionStatement	inc2 = ( minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] ) ) * C2_SCALE	819:4:30614:30680	6904170	5	True				
ANR	6904380	AssignmentExpression	inc2 = ( minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] ) ) * C2_SCALE		6904170	0		=			
ANR	6904381	Identifier	inc2		6904170	0					
ANR	6904382	MultiplicativeExpression	( minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] ) ) * C2_SCALE		6904170	1		*			
ANR	6904383	AdditiveExpression	minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] )		6904170	0		-			
ANR	6904384	Identifier	minc2		6904170	0					
ANR	6904385	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] )		6904170	1					
ANR	6904386	Callee	GETJSAMPLE		6904170	0					
ANR	6904387	Identifier	GETJSAMPLE		6904170	0					
ANR	6904388	ArgumentList	cinfo -> colormap [ 2 ] [ icolor ]		6904170	1					
ANR	6904389	Argument	cinfo -> colormap [ 2 ] [ icolor ]		6904170	0					
ANR	6904390	ArrayIndexing	cinfo -> colormap [ 2 ] [ icolor ]		6904170	0					
ANR	6904391	ArrayIndexing	cinfo -> colormap [ 2 ]		6904170	0					
ANR	6904392	PtrMemberAccess	cinfo -> colormap		6904170	0					
ANR	6904393	Identifier	cinfo		6904170	0					
ANR	6904394	Identifier	colormap		6904170	1					
ANR	6904395	PrimaryExpression	2		6904170	1					
ANR	6904396	Identifier	icolor		6904170	1					
ANR	6904397	Identifier	C2_SCALE		6904170	1					
ANR	6904398	ExpressionStatement	dist0 += inc2 * inc2	820:4:30686:30704	6904170	6	True				
ANR	6904399	AssignmentExpression	dist0 += inc2 * inc2		6904170	0		+=			
ANR	6904400	Identifier	dist0		6904170	0					
ANR	6904401	MultiplicativeExpression	inc2 * inc2		6904170	1		*			
ANR	6904402	Identifier	inc2		6904170	0					
ANR	6904403	Identifier	inc2		6904170	1					
ANR	6904404	ExpressionStatement	inc0 = inc0 * ( 2 * STEP_C0 ) + STEP_C0 * STEP_C0	822:4:30759:30806	6904170	7	True				
ANR	6904405	AssignmentExpression	inc0 = inc0 * ( 2 * STEP_C0 ) + STEP_C0 * STEP_C0		6904170	0		=			
ANR	6904406	Identifier	inc0		6904170	0					
ANR	6904407	AdditiveExpression	inc0 * ( 2 * STEP_C0 ) + STEP_C0 * STEP_C0		6904170	1		+			
ANR	6904408	MultiplicativeExpression	inc0 * ( 2 * STEP_C0 )		6904170	0		*			
ANR	6904409	Identifier	inc0		6904170	0					
ANR	6904410	MultiplicativeExpression	2 * STEP_C0		6904170	1		*			
ANR	6904411	PrimaryExpression	2		6904170	0					
ANR	6904412	Identifier	STEP_C0		6904170	1					
ANR	6904413	MultiplicativeExpression	STEP_C0 * STEP_C0		6904170	1		*			
ANR	6904414	Identifier	STEP_C0		6904170	0					
ANR	6904415	Identifier	STEP_C0		6904170	1					
ANR	6904416	ExpressionStatement	inc1 = inc1 * ( 2 * STEP_C1 ) + STEP_C1 * STEP_C1	823:4:30812:30859	6904170	8	True				
ANR	6904417	AssignmentExpression	inc1 = inc1 * ( 2 * STEP_C1 ) + STEP_C1 * STEP_C1		6904170	0		=			
ANR	6904418	Identifier	inc1		6904170	0					
ANR	6904419	AdditiveExpression	inc1 * ( 2 * STEP_C1 ) + STEP_C1 * STEP_C1		6904170	1		+			
ANR	6904420	MultiplicativeExpression	inc1 * ( 2 * STEP_C1 )		6904170	0		*			
ANR	6904421	Identifier	inc1		6904170	0					
ANR	6904422	MultiplicativeExpression	2 * STEP_C1		6904170	1		*			
ANR	6904423	PrimaryExpression	2		6904170	0					
ANR	6904424	Identifier	STEP_C1		6904170	1					
ANR	6904425	MultiplicativeExpression	STEP_C1 * STEP_C1		6904170	1		*			
ANR	6904426	Identifier	STEP_C1		6904170	0					
ANR	6904427	Identifier	STEP_C1		6904170	1					
ANR	6904428	ExpressionStatement	inc2 = inc2 * ( 2 * STEP_C2 ) + STEP_C2 * STEP_C2	824:4:30865:30912	6904170	9	True				
ANR	6904429	AssignmentExpression	inc2 = inc2 * ( 2 * STEP_C2 ) + STEP_C2 * STEP_C2		6904170	0		=			
ANR	6904430	Identifier	inc2		6904170	0					
ANR	6904431	AdditiveExpression	inc2 * ( 2 * STEP_C2 ) + STEP_C2 * STEP_C2		6904170	1		+			
ANR	6904432	MultiplicativeExpression	inc2 * ( 2 * STEP_C2 )		6904170	0		*			
ANR	6904433	Identifier	inc2		6904170	0					
ANR	6904434	MultiplicativeExpression	2 * STEP_C2		6904170	1		*			
ANR	6904435	PrimaryExpression	2		6904170	0					
ANR	6904436	Identifier	STEP_C2		6904170	1					
ANR	6904437	MultiplicativeExpression	STEP_C2 * STEP_C2		6904170	1		*			
ANR	6904438	Identifier	STEP_C2		6904170	0					
ANR	6904439	Identifier	STEP_C2		6904170	1					
ANR	6904440	ExpressionStatement	bptr = bestdist	826:4:30996:31011	6904170	10	True				
ANR	6904441	AssignmentExpression	bptr = bestdist		6904170	0		=			
ANR	6904442	Identifier	bptr		6904170	0					
ANR	6904443	Identifier	bestdist		6904170	1					
ANR	6904444	ExpressionStatement	cptr = bestcolor	827:4:31017:31033	6904170	11	True				
ANR	6904445	AssignmentExpression	cptr = bestcolor		6904170	0		=			
ANR	6904446	Identifier	cptr		6904170	0					
ANR	6904447	Identifier	bestcolor		6904170	1					
ANR	6904448	ExpressionStatement	xx0 = inc0	828:4:31039:31049	6904170	12	True				
ANR	6904449	AssignmentExpression	xx0 = inc0		6904170	0		=			
ANR	6904450	Identifier	xx0		6904170	0					
ANR	6904451	Identifier	inc0		6904170	1					
ANR	6904452	ForStatement	for ( ic0 = BOX_C0_ELEMS - 1 ; ic0 >= 0 ; ic0 -- )		6904170	13					
ANR	6904453	ForInit	ic0 = BOX_C0_ELEMS - 1 ;	829:9:31060:31080	6904170	0	True				
ANR	6904454	AssignmentExpression	ic0 = BOX_C0_ELEMS - 1		6904170	0		=			
ANR	6904455	Identifier	ic0		6904170	0					
ANR	6904456	AdditiveExpression	BOX_C0_ELEMS - 1		6904170	1		-			
ANR	6904457	Identifier	BOX_C0_ELEMS		6904170	0					
ANR	6904458	PrimaryExpression	1		6904170	1					
ANR	6904459	Condition	ic0 >= 0	829:31:31082:31089	6904170	1	True				
ANR	6904460	RelationalExpression	ic0 >= 0		6904170	0		>=			
ANR	6904461	Identifier	ic0		6904170	0					
ANR	6904462	PrimaryExpression	0		6904170	1					
ANR	6904463	PostIncDecOperationExpression	ic0 --	829:41:31092:31096	6904170	2	True				
ANR	6904464	Identifier	ic0		6904170	0					
ANR	6904465	IncDec	--		6904170	1					
ANR	6904466	CompoundStatement		46:48:1959:1959	6904170	3					
ANR	6904467	ExpressionStatement	dist1 = dist0	830:6:31107:31120	6904170	0	True				
ANR	6904468	AssignmentExpression	dist1 = dist0		6904170	0		=			
ANR	6904469	Identifier	dist1		6904170	0					
ANR	6904470	Identifier	dist0		6904170	1					
ANR	6904471	ExpressionStatement	xx1 = inc1	831:6:31128:31138	6904170	1	True				
ANR	6904472	AssignmentExpression	xx1 = inc1		6904170	0		=			
ANR	6904473	Identifier	xx1		6904170	0					
ANR	6904474	Identifier	inc1		6904170	1					
ANR	6904475	ForStatement	for ( ic1 = BOX_C1_ELEMS - 1 ; ic1 >= 0 ; ic1 -- )		6904170	2					
ANR	6904476	ForInit	ic1 = BOX_C1_ELEMS - 1 ;	832:11:31151:31171	6904170	0	True				
ANR	6904477	AssignmentExpression	ic1 = BOX_C1_ELEMS - 1		6904170	0		=			
ANR	6904478	Identifier	ic1		6904170	0					
ANR	6904479	AdditiveExpression	BOX_C1_ELEMS - 1		6904170	1		-			
ANR	6904480	Identifier	BOX_C1_ELEMS		6904170	0					
ANR	6904481	PrimaryExpression	1		6904170	1					
ANR	6904482	Condition	ic1 >= 0	832:33:31173:31180	6904170	1	True				
ANR	6904483	RelationalExpression	ic1 >= 0		6904170	0		>=			
ANR	6904484	Identifier	ic1		6904170	0					
ANR	6904485	PrimaryExpression	0		6904170	1					
ANR	6904486	PostIncDecOperationExpression	ic1 --	832:43:31183:31187	6904170	2	True				
ANR	6904487	Identifier	ic1		6904170	0					
ANR	6904488	IncDec	--		6904170	1					
ANR	6904489	CompoundStatement		49:50:2050:2050	6904170	3					
ANR	6904490	ExpressionStatement	dist2 = dist1	833:1:31193:31206	6904170	0	True				
ANR	6904491	AssignmentExpression	dist2 = dist1		6904170	0		=			
ANR	6904492	Identifier	dist2		6904170	0					
ANR	6904493	Identifier	dist1		6904170	1					
ANR	6904494	ExpressionStatement	xx2 = inc2	834:1:31209:31219	6904170	1	True				
ANR	6904495	AssignmentExpression	xx2 = inc2		6904170	0		=			
ANR	6904496	Identifier	xx2		6904170	0					
ANR	6904497	Identifier	inc2		6904170	1					
ANR	6904498	ForStatement	for ( ic2 = BOX_C2_ELEMS - 1 ; ic2 >= 0 ; ic2 -- )		6904170	2					
ANR	6904499	ForInit	ic2 = BOX_C2_ELEMS - 1 ;	835:6:31227:31247	6904170	0	True				
ANR	6904500	AssignmentExpression	ic2 = BOX_C2_ELEMS - 1		6904170	0		=			
ANR	6904501	Identifier	ic2		6904170	0					
ANR	6904502	AdditiveExpression	BOX_C2_ELEMS - 1		6904170	1		-			
ANR	6904503	Identifier	BOX_C2_ELEMS		6904170	0					
ANR	6904504	PrimaryExpression	1		6904170	1					
ANR	6904505	Condition	ic2 >= 0	835:28:31249:31256	6904170	1	True				
ANR	6904506	RelationalExpression	ic2 >= 0		6904170	0		>=			
ANR	6904507	Identifier	ic2		6904170	0					
ANR	6904508	PrimaryExpression	0		6904170	1					
ANR	6904509	PostIncDecOperationExpression	ic2 --	835:38:31259:31263	6904170	2	True				
ANR	6904510	Identifier	ic2		6904170	0					
ANR	6904511	IncDec	--		6904170	1					
ANR	6904512	CompoundStatement		52:45:2126:2126	6904170	3					
ANR	6904513	IfStatement	if ( dist2 < * bptr )		6904170	0					
ANR	6904514	Condition	dist2 < * bptr	836:7:31275:31287	6904170	0	True				
ANR	6904515	RelationalExpression	dist2 < * bptr		6904170	0		<			
ANR	6904516	Identifier	dist2		6904170	0					
ANR	6904517	UnaryOperationExpression	* bptr		6904170	1					
ANR	6904518	UnaryOperator	*		6904170	0					
ANR	6904519	Identifier	bptr		6904170	1					
ANR	6904520	CompoundStatement		53:22:2150:2150	6904170	1					
ANR	6904521	ExpressionStatement	* bptr = dist2	837:5:31297:31310	6904170	0	True				
ANR	6904522	AssignmentExpression	* bptr = dist2		6904170	0		=			
ANR	6904523	UnaryOperationExpression	* bptr		6904170	0					
ANR	6904524	UnaryOperator	*		6904170	0					
ANR	6904525	Identifier	bptr		6904170	1					
ANR	6904526	Identifier	dist2		6904170	1					
ANR	6904527	ExpressionStatement	* cptr = ( JSAMPLE ) icolor	838:5:31317:31341	6904170	1	True				
ANR	6904528	AssignmentExpression	* cptr = ( JSAMPLE ) icolor		6904170	0		=			
ANR	6904529	UnaryOperationExpression	* cptr		6904170	0					
ANR	6904530	UnaryOperator	*		6904170	0					
ANR	6904531	Identifier	cptr		6904170	1					
ANR	6904532	CastExpression	( JSAMPLE ) icolor		6904170	1					
ANR	6904533	CastTarget	JSAMPLE		6904170	0					
ANR	6904534	Identifier	icolor		6904170	1					
ANR	6904535	ExpressionStatement	dist2 += xx2	840:3:31351:31363	6904170	1	True				
ANR	6904536	AssignmentExpression	dist2 += xx2		6904170	0		+=			
ANR	6904537	Identifier	dist2		6904170	0					
ANR	6904538	Identifier	xx2		6904170	1					
ANR	6904539	ExpressionStatement	xx2 += 2 * STEP_C2 * STEP_C2	841:3:31368:31396	6904170	2	True				
ANR	6904540	AssignmentExpression	xx2 += 2 * STEP_C2 * STEP_C2		6904170	0		+=			
ANR	6904541	Identifier	xx2		6904170	0					
ANR	6904542	MultiplicativeExpression	2 * STEP_C2 * STEP_C2		6904170	1		*			
ANR	6904543	PrimaryExpression	2		6904170	0					
ANR	6904544	MultiplicativeExpression	STEP_C2 * STEP_C2		6904170	1		*			
ANR	6904545	Identifier	STEP_C2		6904170	0					
ANR	6904546	Identifier	STEP_C2		6904170	1					
ANR	6904547	ExpressionStatement	bptr ++	842:3:31401:31407	6904170	3	True				
ANR	6904548	PostIncDecOperationExpression	bptr ++		6904170	0					
ANR	6904549	Identifier	bptr		6904170	0					
ANR	6904550	IncDec	++		6904170	1					
ANR	6904551	ExpressionStatement	cptr ++	843:3:31412:31418	6904170	4	True				
ANR	6904552	PostIncDecOperationExpression	cptr ++		6904170	0					
ANR	6904553	Identifier	cptr		6904170	0					
ANR	6904554	IncDec	++		6904170	1					
ANR	6904555	ExpressionStatement	dist1 += xx1	845:1:31424:31436	6904170	3	True				
ANR	6904556	AssignmentExpression	dist1 += xx1		6904170	0		+=			
ANR	6904557	Identifier	dist1		6904170	0					
ANR	6904558	Identifier	xx1		6904170	1					
ANR	6904559	ExpressionStatement	xx1 += 2 * STEP_C1 * STEP_C1	846:1:31439:31467	6904170	4	True				
ANR	6904560	AssignmentExpression	xx1 += 2 * STEP_C1 * STEP_C1		6904170	0		+=			
ANR	6904561	Identifier	xx1		6904170	0					
ANR	6904562	MultiplicativeExpression	2 * STEP_C1 * STEP_C1		6904170	1		*			
ANR	6904563	PrimaryExpression	2		6904170	0					
ANR	6904564	MultiplicativeExpression	STEP_C1 * STEP_C1		6904170	1		*			
ANR	6904565	Identifier	STEP_C1		6904170	0					
ANR	6904566	Identifier	STEP_C1		6904170	1					
ANR	6904567	ExpressionStatement	dist0 += xx0	848:6:31483:31495	6904170	3	True				
ANR	6904568	AssignmentExpression	dist0 += xx0		6904170	0		+=			
ANR	6904569	Identifier	dist0		6904170	0					
ANR	6904570	Identifier	xx0		6904170	1					
ANR	6904571	ExpressionStatement	xx0 += 2 * STEP_C0 * STEP_C0	849:6:31503:31531	6904170	4	True				
ANR	6904572	AssignmentExpression	xx0 += 2 * STEP_C0 * STEP_C0		6904170	0		+=			
ANR	6904573	Identifier	xx0		6904170	0					
ANR	6904574	MultiplicativeExpression	2 * STEP_C0 * STEP_C0		6904170	1		*			
ANR	6904575	PrimaryExpression	2		6904170	0					
ANR	6904576	MultiplicativeExpression	STEP_C0 * STEP_C0		6904170	1		*			
ANR	6904577	Identifier	STEP_C0		6904170	0					
ANR	6904578	Identifier	STEP_C0		6904170	1					
ANR	6904579	Identifier	find_best_colors		6904170	1					
ANR	6904580	ParameterList	"j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , int numcolors , JSAMPLE colorlist [ ] , JSAMPLE bestcolor [ ]"		6904170	2					
ANR	6904581	Parameter	j_decompress_ptr cinfo	776:18:28661:28682	6904170	0	True				
ANR	6904582	ParameterType	j_decompress_ptr		6904170	0					
ANR	6904583	Identifier	cinfo		6904170	1					
ANR	6904584	Parameter	int minc0	776:42:28685:28693	6904170	1	True				
ANR	6904585	ParameterType	int		6904170	0					
ANR	6904586	Identifier	minc0		6904170	1					
ANR	6904587	Parameter	int minc1	776:53:28696:28704	6904170	2	True				
ANR	6904588	ParameterType	int		6904170	0					
ANR	6904589	Identifier	minc1		6904170	1					
ANR	6904590	Parameter	int minc2	776:64:28707:28715	6904170	3	True				
ANR	6904591	ParameterType	int		6904170	0					
ANR	6904592	Identifier	minc2		6904170	1					
ANR	6904593	Parameter	int numcolors	777:4:28722:28734	6904170	4	True				
ANR	6904594	ParameterType	int		6904170	0					
ANR	6904595	Identifier	numcolors		6904170	1					
ANR	6904596	Parameter	JSAMPLE colorlist [ ]	777:19:28737:28755	6904170	5	True				
ANR	6904597	ParameterType	JSAMPLE [ ]		6904170	0					
ANR	6904598	Identifier	colorlist		6904170	1					
ANR	6904599	Parameter	JSAMPLE bestcolor [ ]	777:40:28758:28776	6904170	6	True				
ANR	6904600	ParameterType	JSAMPLE [ ]		6904170	0					
ANR	6904601	Identifier	bestcolor		6904170	1					
ANR	6904602	CFGEntryNode	ENTRY		6904170		True				
ANR	6904603	CFGExitNode	EXIT		6904170		True				
ANR	6904604	Symbol	* * cinfo		6904170						
ANR	6904605	Symbol	cptr		6904170						
ANR	6904606	Symbol	* bptr ++		6904170						
ANR	6904607	Symbol	C2_SCALE		6904170						
ANR	6904608	Symbol	* cinfo -> colormap		6904170						
ANR	6904609	Symbol	STEP_C2		6904170						
ANR	6904610	Symbol	minc0		6904170						
ANR	6904611	Symbol	icolor		6904170						
ANR	6904612	Symbol	STEP_C0		6904170						
ANR	6904613	Symbol	STEP_C1		6904170						
ANR	6904614	Symbol	ic1		6904170						
ANR	6904615	Symbol	ic0		6904170						
ANR	6904616	Symbol	BOX_C1_ELEMS		6904170						
ANR	6904617	Symbol	ic2		6904170						
ANR	6904618	Symbol	* colorlist		6904170						
ANR	6904619	Symbol	colorlist		6904170						
ANR	6904620	Symbol	* icolor		6904170						
ANR	6904621	Symbol	bestdist		6904170						
ANR	6904622	Symbol	* cinfo		6904170						
ANR	6904623	Symbol	* bptr		6904170						
ANR	6904624	Symbol	C0_SCALE		6904170						
ANR	6904625	Symbol	numcolors		6904170						
ANR	6904626	Symbol	bptr		6904170						
ANR	6904627	Symbol	inc1		6904170						
ANR	6904628	Symbol	inc0		6904170						
ANR	6904629	Symbol	GETJSAMPLE		6904170						
ANR	6904630	Symbol	inc2		6904170						
ANR	6904631	Symbol	cinfo -> colormap		6904170						
ANR	6904632	Symbol	i		6904170						
ANR	6904633	Symbol	BOX_C0_ELEMS		6904170						
ANR	6904634	Symbol	* * cinfo -> colormap		6904170						
ANR	6904635	Symbol	minc2		6904170						
ANR	6904636	Symbol	bestcolor		6904170						
ANR	6904637	Symbol	xx1		6904170						
ANR	6904638	Symbol	minc1		6904170						
ANR	6904639	Symbol	xx0		6904170						
ANR	6904640	Symbol	xx2		6904170						
ANR	6904641	Symbol	* i		6904170						
ANR	6904642	Symbol	C1_SCALE		6904170						
ANR	6904643	Symbol	cinfo		6904170						
ANR	6904644	Symbol	* * * cinfo		6904170						
ANR	6904645	Symbol	dist0		6904170						
ANR	6904646	Symbol	dist1		6904170						
ANR	6904647	Symbol	* cptr		6904170						
ANR	6904648	Symbol	dist2		6904170						
ANR	6904649	Symbol	BOX_C2_ELEMS		6904170						
ANR	6904650	Function	fill_inverse_cmap	856:0:31559:33727							
ANR	6904651	FunctionDef	"fill_inverse_cmap (j_decompress_ptr cinfo , int c0 , int c1 , int c2)"		6904650	0					
ANR	6904652	CompoundStatement		860:0:31816:33727	6904650	0					
ANR	6904653	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	861:2:31820:31884	6904650	0	True				
ANR	6904654	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6904650	0					
ANR	6904655	IdentifierDeclType	my_cquantize_ptr		6904650	0					
ANR	6904656	Identifier	cquantize		6904650	1					
ANR	6904657	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6904650	2		=			
ANR	6904658	Identifier	cquantize		6904650	0					
ANR	6904659	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6904650	1					
ANR	6904660	CastTarget	my_cquantize_ptr		6904650	0					
ANR	6904661	PtrMemberAccess	cinfo -> cquantize		6904650	1					
ANR	6904662	Identifier	cinfo		6904650	0					
ANR	6904663	Identifier	cquantize		6904650	1					
ANR	6904664	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	862:2:31888:31927	6904650	1	True				
ANR	6904665	IdentifierDecl	histogram = cquantize -> histogram		6904650	0					
ANR	6904666	IdentifierDeclType	hist3d		6904650	0					
ANR	6904667	Identifier	histogram		6904650	1					
ANR	6904668	AssignmentExpression	histogram = cquantize -> histogram		6904650	2		=			
ANR	6904669	Identifier	histogram		6904650	0					
ANR	6904670	PtrMemberAccess	cquantize -> histogram		6904650	1					
ANR	6904671	Identifier	cquantize		6904650	0					
ANR	6904672	Identifier	histogram		6904650	1					
ANR	6904673	IdentifierDeclStatement	"int minc0 , minc1 , minc2 ;"	863:2:31931:31954	6904650	2	True				
ANR	6904674	IdentifierDecl	minc0		6904650	0					
ANR	6904675	IdentifierDeclType	int		6904650	0					
ANR	6904676	Identifier	minc0		6904650	1					
ANR	6904677	IdentifierDecl	minc1		6904650	1					
ANR	6904678	IdentifierDeclType	int		6904650	0					
ANR	6904679	Identifier	minc1		6904650	1					
ANR	6904680	IdentifierDecl	minc2		6904650	2					
ANR	6904681	IdentifierDeclType	int		6904650	0					
ANR	6904682	Identifier	minc2		6904650	1					
ANR	6904683	IdentifierDeclStatement	"int ic0 , ic1 , ic2 ;"	864:2:31996:32013	6904650	3	True				
ANR	6904684	IdentifierDecl	ic0		6904650	0					
ANR	6904685	IdentifierDeclType	int		6904650	0					
ANR	6904686	Identifier	ic0		6904650	1					
ANR	6904687	IdentifierDecl	ic1		6904650	1					
ANR	6904688	IdentifierDeclType	int		6904650	0					
ANR	6904689	Identifier	ic1		6904650	1					
ANR	6904690	IdentifierDecl	ic2		6904650	2					
ANR	6904691	IdentifierDeclType	int		6904650	0					
ANR	6904692	Identifier	ic2		6904650	1					
ANR	6904693	Statement	register	865:2:32017:32024	6904650	4	True				
ANR	6904694	IdentifierDeclStatement	JSAMPLE * cptr ;	865:11:32026:32040	6904650	5	True				
ANR	6904695	IdentifierDecl	* cptr		6904650	0					
ANR	6904696	IdentifierDeclType	JSAMPLE *		6904650	0					
ANR	6904697	Identifier	cptr		6904650	1					
ANR	6904698	Statement	register	866:2:32081:32088	6904650	6	True				
ANR	6904699	IdentifierDeclStatement	histptr cachep ;	866:11:32090:32104	6904650	7	True				
ANR	6904700	IdentifierDecl	cachep		6904650	0					
ANR	6904701	IdentifierDeclType	histptr		6904650	0					
ANR	6904702	Identifier	cachep		6904650	1					
ANR	6904703	IdentifierDeclStatement	JSAMPLE colorlist [ MAXNUMCOLORS ] ;	868:2:32201:32232	6904650	8	True				
ANR	6904704	IdentifierDecl	colorlist [ MAXNUMCOLORS ]		6904650	0					
ANR	6904705	IdentifierDeclType	JSAMPLE [ MAXNUMCOLORS ]		6904650	0					
ANR	6904706	Identifier	colorlist		6904650	1					
ANR	6904707	Identifier	MAXNUMCOLORS		6904650	2					
ANR	6904708	IdentifierDeclStatement	int numcolors ;	869:2:32236:32249	6904650	9	True				
ANR	6904709	IdentifierDecl	numcolors		6904650	0					
ANR	6904710	IdentifierDeclType	int		6904650	0					
ANR	6904711	Identifier	numcolors		6904650	1					
ANR	6904712	IdentifierDeclStatement	JSAMPLE bestcolor [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ] ;	871:2:32363:32424	6904650	10	True				
ANR	6904713	IdentifierDecl	bestcolor [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6904650	0					
ANR	6904714	IdentifierDeclType	JSAMPLE [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6904650	0					
ANR	6904715	Identifier	bestcolor		6904650	1					
ANR	6904716	MultiplicativeExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS		6904650	2		*			
ANR	6904717	Identifier	BOX_C0_ELEMS		6904650	0					
ANR	6904718	MultiplicativeExpression	BOX_C1_ELEMS * BOX_C2_ELEMS		6904650	1		*			
ANR	6904719	Identifier	BOX_C1_ELEMS		6904650	0					
ANR	6904720	Identifier	BOX_C2_ELEMS		6904650	1					
ANR	6904721	ExpressionStatement	c0 >>= BOX_C0_LOG	874:2:32479:32496	6904650	11	True				
ANR	6904722	AssignmentExpression	c0 >>= BOX_C0_LOG		6904650	0		>>=			
ANR	6904723	Identifier	c0		6904650	0					
ANR	6904724	Identifier	BOX_C0_LOG		6904650	1					
ANR	6904725	ExpressionStatement	c1 >>= BOX_C1_LOG	875:2:32500:32517	6904650	12	True				
ANR	6904726	AssignmentExpression	c1 >>= BOX_C1_LOG		6904650	0		>>=			
ANR	6904727	Identifier	c1		6904650	0					
ANR	6904728	Identifier	BOX_C1_LOG		6904650	1					
ANR	6904729	ExpressionStatement	c2 >>= BOX_C2_LOG	876:2:32521:32538	6904650	13	True				
ANR	6904730	AssignmentExpression	c2 >>= BOX_C2_LOG		6904650	0		>>=			
ANR	6904731	Identifier	c2		6904650	0					
ANR	6904732	Identifier	BOX_C2_LOG		6904650	1					
ANR	6904733	ExpressionStatement	minc0 = ( c0 << BOX_C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )	882:2:32756:32809	6904650	14	True				
ANR	6904734	AssignmentExpression	minc0 = ( c0 << BOX_C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )		6904650	0		=			
ANR	6904735	Identifier	minc0		6904650	0					
ANR	6904736	AdditiveExpression	( c0 << BOX_C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )		6904650	1		+			
ANR	6904737	ShiftExpression	c0 << BOX_C0_SHIFT		6904650	0		<<			
ANR	6904738	Identifier	c0		6904650	0					
ANR	6904739	Identifier	BOX_C0_SHIFT		6904650	1					
ANR	6904740	ShiftExpression	( 1 << C0_SHIFT ) >> 1		6904650	1		>>			
ANR	6904741	ShiftExpression	1 << C0_SHIFT		6904650	0		<<			
ANR	6904742	PrimaryExpression	1		6904650	0					
ANR	6904743	Identifier	C0_SHIFT		6904650	1					
ANR	6904744	PrimaryExpression	1		6904650	1					
ANR	6904745	ExpressionStatement	minc1 = ( c1 << BOX_C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )	883:2:32813:32866	6904650	15	True				
ANR	6904746	AssignmentExpression	minc1 = ( c1 << BOX_C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )		6904650	0		=			
ANR	6904747	Identifier	minc1		6904650	0					
ANR	6904748	AdditiveExpression	( c1 << BOX_C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )		6904650	1		+			
ANR	6904749	ShiftExpression	c1 << BOX_C1_SHIFT		6904650	0		<<			
ANR	6904750	Identifier	c1		6904650	0					
ANR	6904751	Identifier	BOX_C1_SHIFT		6904650	1					
ANR	6904752	ShiftExpression	( 1 << C1_SHIFT ) >> 1		6904650	1		>>			
ANR	6904753	ShiftExpression	1 << C1_SHIFT		6904650	0		<<			
ANR	6904754	PrimaryExpression	1		6904650	0					
ANR	6904755	Identifier	C1_SHIFT		6904650	1					
ANR	6904756	PrimaryExpression	1		6904650	1					
ANR	6904757	ExpressionStatement	minc2 = ( c2 << BOX_C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )	884:2:32870:32923	6904650	16	True				
ANR	6904758	AssignmentExpression	minc2 = ( c2 << BOX_C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )		6904650	0		=			
ANR	6904759	Identifier	minc2		6904650	0					
ANR	6904760	AdditiveExpression	( c2 << BOX_C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )		6904650	1		+			
ANR	6904761	ShiftExpression	c2 << BOX_C2_SHIFT		6904650	0		<<			
ANR	6904762	Identifier	c2		6904650	0					
ANR	6904763	Identifier	BOX_C2_SHIFT		6904650	1					
ANR	6904764	ShiftExpression	( 1 << C2_SHIFT ) >> 1		6904650	1		>>			
ANR	6904765	ShiftExpression	1 << C2_SHIFT		6904650	0		<<			
ANR	6904766	PrimaryExpression	1		6904650	0					
ANR	6904767	Identifier	C2_SHIFT		6904650	1					
ANR	6904768	PrimaryExpression	1		6904650	1					
ANR	6904769	ExpressionStatement	"numcolors = find_nearby_colors ( cinfo , minc0 , minc1 , minc2 , colorlist )"	889:2:33067:33136	6904650	17	True				
ANR	6904770	AssignmentExpression	"numcolors = find_nearby_colors ( cinfo , minc0 , minc1 , minc2 , colorlist )"		6904650	0		=			
ANR	6904771	Identifier	numcolors		6904650	0					
ANR	6904772	CallExpression	"find_nearby_colors ( cinfo , minc0 , minc1 , minc2 , colorlist )"		6904650	1					
ANR	6904773	Callee	find_nearby_colors		6904650	0					
ANR	6904774	Identifier	find_nearby_colors		6904650	0					
ANR	6904775	ArgumentList	cinfo		6904650	1					
ANR	6904776	Argument	cinfo		6904650	0					
ANR	6904777	Identifier	cinfo		6904650	0					
ANR	6904778	Argument	minc0		6904650	1					
ANR	6904779	Identifier	minc0		6904650	0					
ANR	6904780	Argument	minc1		6904650	2					
ANR	6904781	Identifier	minc1		6904650	0					
ANR	6904782	Argument	minc2		6904650	3					
ANR	6904783	Identifier	minc2		6904650	0					
ANR	6904784	Argument	colorlist		6904650	4					
ANR	6904785	Identifier	colorlist		6904650	0					
ANR	6904786	ExpressionStatement	"find_best_colors ( cinfo , minc0 , minc1 , minc2 , numcolors , colorlist , bestcolor )"	892:2:33188:33270	6904650	18	True				
ANR	6904787	CallExpression	"find_best_colors ( cinfo , minc0 , minc1 , minc2 , numcolors , colorlist , bestcolor )"		6904650	0					
ANR	6904788	Callee	find_best_colors		6904650	0					
ANR	6904789	Identifier	find_best_colors		6904650	0					
ANR	6904790	ArgumentList	cinfo		6904650	1					
ANR	6904791	Argument	cinfo		6904650	0					
ANR	6904792	Identifier	cinfo		6904650	0					
ANR	6904793	Argument	minc0		6904650	1					
ANR	6904794	Identifier	minc0		6904650	0					
ANR	6904795	Argument	minc1		6904650	2					
ANR	6904796	Identifier	minc1		6904650	0					
ANR	6904797	Argument	minc2		6904650	3					
ANR	6904798	Identifier	minc2		6904650	0					
ANR	6904799	Argument	numcolors		6904650	4					
ANR	6904800	Identifier	numcolors		6904650	0					
ANR	6904801	Argument	colorlist		6904650	5					
ANR	6904802	Identifier	colorlist		6904650	0					
ANR	6904803	Argument	bestcolor		6904650	6					
ANR	6904804	Identifier	bestcolor		6904650	0					
ANR	6904805	ExpressionStatement	c0 <<= BOX_C0_LOG	896:2:33344:33361	6904650	19	True				
ANR	6904806	AssignmentExpression	c0 <<= BOX_C0_LOG		6904650	0		<<=			
ANR	6904807	Identifier	c0		6904650	0					
ANR	6904808	Identifier	BOX_C0_LOG		6904650	1					
ANR	6904809	ExpressionStatement	c1 <<= BOX_C1_LOG	897:2:33409:33426	6904650	20	True				
ANR	6904810	AssignmentExpression	c1 <<= BOX_C1_LOG		6904650	0		<<=			
ANR	6904811	Identifier	c1		6904650	0					
ANR	6904812	Identifier	BOX_C1_LOG		6904650	1					
ANR	6904813	ExpressionStatement	c2 <<= BOX_C2_LOG	898:2:33430:33447	6904650	21	True				
ANR	6904814	AssignmentExpression	c2 <<= BOX_C2_LOG		6904650	0		<<=			
ANR	6904815	Identifier	c2		6904650	0					
ANR	6904816	Identifier	BOX_C2_LOG		6904650	1					
ANR	6904817	ExpressionStatement	cptr = bestcolor	899:2:33451:33467	6904650	22	True				
ANR	6904818	AssignmentExpression	cptr = bestcolor		6904650	0		=			
ANR	6904819	Identifier	cptr		6904650	0					
ANR	6904820	Identifier	bestcolor		6904650	1					
ANR	6904821	ForStatement	for ( ic0 = 0 ; ic0 < BOX_C0_ELEMS ; ic0 ++ )		6904650	23					
ANR	6904822	ForInit	ic0 = 0 ;	900:7:33476:33483	6904650	0	True				
ANR	6904823	AssignmentExpression	ic0 = 0		6904650	0		=			
ANR	6904824	Identifier	ic0		6904650	0					
ANR	6904825	PrimaryExpression	0		6904650	1					
ANR	6904826	Condition	ic0 < BOX_C0_ELEMS	900:16:33485:33502	6904650	1	True				
ANR	6904827	RelationalExpression	ic0 < BOX_C0_ELEMS		6904650	0		<			
ANR	6904828	Identifier	ic0		6904650	0					
ANR	6904829	Identifier	BOX_C0_ELEMS		6904650	1					
ANR	6904830	PostIncDecOperationExpression	ic0 ++	900:36:33505:33509	6904650	2	True				
ANR	6904831	Identifier	ic0		6904650	0					
ANR	6904832	IncDec	++		6904650	1					
ANR	6904833	CompoundStatement		41:43:1695:1695	6904650	3					
ANR	6904834	ForStatement	for ( ic1 = 0 ; ic1 < BOX_C1_ELEMS ; ic1 ++ )		6904650	0					
ANR	6904835	ForInit	ic1 = 0 ;	901:9:33523:33530	6904650	0	True				
ANR	6904836	AssignmentExpression	ic1 = 0		6904650	0		=			
ANR	6904837	Identifier	ic1		6904650	0					
ANR	6904838	PrimaryExpression	0		6904650	1					
ANR	6904839	Condition	ic1 < BOX_C1_ELEMS	901:18:33532:33549	6904650	1	True				
ANR	6904840	RelationalExpression	ic1 < BOX_C1_ELEMS		6904650	0		<			
ANR	6904841	Identifier	ic1		6904650	0					
ANR	6904842	Identifier	BOX_C1_ELEMS		6904650	1					
ANR	6904843	PostIncDecOperationExpression	ic1 ++	901:38:33552:33556	6904650	2	True				
ANR	6904844	Identifier	ic1		6904650	0					
ANR	6904845	IncDec	++		6904650	1					
ANR	6904846	CompoundStatement		42:45:1742:1742	6904650	3					
ANR	6904847	ExpressionStatement	cachep = & histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]	902:6:33567:33607	6904650	0	True				
ANR	6904848	AssignmentExpression	cachep = & histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]		6904650	0		=			
ANR	6904849	Identifier	cachep		6904650	0					
ANR	6904850	UnaryOperationExpression	& histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]		6904650	1					
ANR	6904851	UnaryOperator	&		6904650	0					
ANR	6904852	ArrayIndexing	histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]		6904650	1					
ANR	6904853	ArrayIndexing	histogram [ c0 + ic0 ] [ c1 + ic1 ]		6904650	0					
ANR	6904854	ArrayIndexing	histogram [ c0 + ic0 ]		6904650	0					
ANR	6904855	Identifier	histogram		6904650	0					
ANR	6904856	AdditiveExpression	c0 + ic0		6904650	1		+			
ANR	6904857	Identifier	c0		6904650	0					
ANR	6904858	Identifier	ic0		6904650	1					
ANR	6904859	AdditiveExpression	c1 + ic1		6904650	1		+			
ANR	6904860	Identifier	c1		6904650	0					
ANR	6904861	Identifier	ic1		6904650	1					
ANR	6904862	Identifier	c2		6904650	1					
ANR	6904863	ForStatement	for ( ic2 = 0 ; ic2 < BOX_C2_ELEMS ; ic2 ++ )		6904650	1					
ANR	6904864	ForInit	ic2 = 0 ;	903:11:33620:33627	6904650	0	True				
ANR	6904865	AssignmentExpression	ic2 = 0		6904650	0		=			
ANR	6904866	Identifier	ic2		6904650	0					
ANR	6904867	PrimaryExpression	0		6904650	1					
ANR	6904868	Condition	ic2 < BOX_C2_ELEMS	903:20:33629:33646	6904650	1	True				
ANR	6904869	RelationalExpression	ic2 < BOX_C2_ELEMS		6904650	0		<			
ANR	6904870	Identifier	ic2		6904650	0					
ANR	6904871	Identifier	BOX_C2_ELEMS		6904650	1					
ANR	6904872	PostIncDecOperationExpression	ic2 ++	903:40:33649:33653	6904650	2	True				
ANR	6904873	Identifier	ic2		6904650	0					
ANR	6904874	IncDec	++		6904650	1					
ANR	6904875	CompoundStatement		44:47:1839:1839	6904650	3					
ANR	6904876	ExpressionStatement	* cachep ++ = ( histcell ) ( GETJSAMPLE ( * cptr ++ ) + 1 )	904:1:33659:33707	6904650	0	True				
ANR	6904877	AssignmentExpression	* cachep ++ = ( histcell ) ( GETJSAMPLE ( * cptr ++ ) + 1 )		6904650	0		=			
ANR	6904878	UnaryOperationExpression	* cachep ++		6904650	0					
ANR	6904879	UnaryOperator	*		6904650	0					
ANR	6904880	PostIncDecOperationExpression	cachep ++		6904650	1					
ANR	6904881	Identifier	cachep		6904650	0					
ANR	6904882	IncDec	++		6904650	1					
ANR	6904883	CastExpression	( histcell ) ( GETJSAMPLE ( * cptr ++ ) + 1 )		6904650	1					
ANR	6904884	CastTarget	histcell		6904650	0					
ANR	6904885	AdditiveExpression	GETJSAMPLE ( * cptr ++ ) + 1		6904650	1		+			
ANR	6904886	CallExpression	GETJSAMPLE ( * cptr ++ )		6904650	0					
ANR	6904887	Callee	GETJSAMPLE		6904650	0					
ANR	6904888	Identifier	GETJSAMPLE		6904650	0					
ANR	6904889	ArgumentList	* cptr ++		6904650	1					
ANR	6904890	Argument	* cptr ++		6904650	0					
ANR	6904891	UnaryOperationExpression	* cptr ++		6904650	0					
ANR	6904892	UnaryOperator	*		6904650	0					
ANR	6904893	PostIncDecOperationExpression	cptr ++		6904650	1					
ANR	6904894	Identifier	cptr		6904650	0					
ANR	6904895	IncDec	++		6904650	1					
ANR	6904896	PrimaryExpression	1		6904650	1					
ANR	6904897	Identifier	fill_inverse_cmap		6904650	1					
ANR	6904898	ParameterList	"j_decompress_ptr cinfo , int c0 , int c1 , int c2"		6904650	2					
ANR	6904899	Parameter	j_decompress_ptr cinfo	856:19:31578:31599	6904650	0	True				
ANR	6904900	ParameterType	j_decompress_ptr		6904650	0					
ANR	6904901	Identifier	cinfo		6904650	1					
ANR	6904902	Parameter	int c0	856:43:31602:31607	6904650	1	True				
ANR	6904903	ParameterType	int		6904650	0					
ANR	6904904	Identifier	c0		6904650	1					
ANR	6904905	Parameter	int c1	856:51:31610:31615	6904650	2	True				
ANR	6904906	ParameterType	int		6904650	0					
ANR	6904907	Identifier	c1		6904650	1					
ANR	6904908	Parameter	int c2	856:59:31618:31623	6904650	3	True				
ANR	6904909	ParameterType	int		6904650	0					
ANR	6904910	Identifier	c2		6904650	1					
ANR	6904911	CFGEntryNode	ENTRY		6904650		True				
ANR	6904912	CFGExitNode	EXIT		6904650		True				
ANR	6904913	Symbol	* * histogram		6904650						
ANR	6904914	Symbol	C2_SHIFT		6904650						
ANR	6904915	Symbol	cptr		6904650						
ANR	6904916	Symbol	cquantize		6904650						
ANR	6904917	Symbol	* cquantize		6904650						
ANR	6904918	Symbol	BOX_C0_LOG		6904650						
ANR	6904919	Symbol	minc0		6904650						
ANR	6904920	Symbol	cquantize -> histogram		6904650						
ANR	6904921	Symbol	ic1		6904650						
ANR	6904922	Symbol	BOX_C1_SHIFT		6904650						
ANR	6904923	Symbol	ic0		6904650						
ANR	6904924	Symbol	BOX_C1_ELEMS		6904650						
ANR	6904925	Symbol	ic2		6904650						
ANR	6904926	Symbol	C0_SHIFT		6904650						
ANR	6904927	Symbol	cachep		6904650						
ANR	6904928	Symbol	* * c0		6904650						
ANR	6904929	Symbol	colorlist		6904650						
ANR	6904930	Symbol	* cinfo		6904650						
ANR	6904931	Symbol	BOX_C1_LOG		6904650						
ANR	6904932	Symbol	numcolors		6904650						
ANR	6904933	Symbol	find_nearby_colors		6904650						
ANR	6904934	Symbol	* cptr ++		6904650						
ANR	6904935	Symbol	* cachep ++		6904650						
ANR	6904936	Symbol	GETJSAMPLE		6904650						
ANR	6904937	Symbol	BOX_C0_SHIFT		6904650						
ANR	6904938	Symbol	* histogram		6904650						
ANR	6904939	Symbol	* * ic0		6904650						
ANR	6904940	Symbol	BOX_C0_ELEMS		6904650						
ANR	6904941	Symbol	c0		6904650						
ANR	6904942	Symbol	c1		6904650						
ANR	6904943	Symbol	BOX_C2_LOG		6904650						
ANR	6904944	Symbol	c2		6904650						
ANR	6904945	Symbol	histogram		6904650						
ANR	6904946	Symbol	minc2		6904650						
ANR	6904947	Symbol	bestcolor		6904650						
ANR	6904948	Symbol	* c0		6904650						
ANR	6904949	Symbol	minc1		6904650						
ANR	6904950	Symbol	cinfo -> cquantize		6904650						
ANR	6904951	Symbol	cinfo		6904650						
ANR	6904952	Symbol	* c1		6904650						
ANR	6904953	Symbol	BOX_C2_SHIFT		6904650						
ANR	6904954	Symbol	C1_SHIFT		6904650						
ANR	6904955	Symbol	* ic1		6904650						
ANR	6904956	Symbol	BOX_C2_ELEMS		6904650						
ANR	6904957	Symbol	* ic0		6904650						
ANR	6904958	Function	pass2_no_dither	916:0:33824:34889							
ANR	6904959	FunctionDef	"pass2_no_dither (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6904958	0					
ANR	6904960	CompoundStatement		919:0:33968:34889	6904958	0					
ANR	6904961	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	920:2:33972:34036	6904958	0	True				
ANR	6904962	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6904958	0					
ANR	6904963	IdentifierDeclType	my_cquantize_ptr		6904958	0					
ANR	6904964	Identifier	cquantize		6904958	1					
ANR	6904965	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6904958	2		=			
ANR	6904966	Identifier	cquantize		6904958	0					
ANR	6904967	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6904958	1					
ANR	6904968	CastTarget	my_cquantize_ptr		6904958	0					
ANR	6904969	PtrMemberAccess	cinfo -> cquantize		6904958	1					
ANR	6904970	Identifier	cinfo		6904958	0					
ANR	6904971	Identifier	cquantize		6904958	1					
ANR	6904972	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	921:2:34040:34079	6904958	1	True				
ANR	6904973	IdentifierDecl	histogram = cquantize -> histogram		6904958	0					
ANR	6904974	IdentifierDeclType	hist3d		6904958	0					
ANR	6904975	Identifier	histogram		6904958	1					
ANR	6904976	AssignmentExpression	histogram = cquantize -> histogram		6904958	2		=			
ANR	6904977	Identifier	histogram		6904958	0					
ANR	6904978	PtrMemberAccess	cquantize -> histogram		6904958	1					
ANR	6904979	Identifier	cquantize		6904958	0					
ANR	6904980	Identifier	histogram		6904958	1					
ANR	6904981	Statement	register	922:2:34083:34090	6904958	2	True				
ANR	6904982	IdentifierDeclStatement	"JSAMPROW inptr , outptr ;"	922:11:34092:34114	6904958	3	True				
ANR	6904983	IdentifierDecl	inptr		6904958	0					
ANR	6904984	IdentifierDeclType	JSAMPROW		6904958	0					
ANR	6904985	Identifier	inptr		6904958	1					
ANR	6904986	IdentifierDecl	outptr		6904958	1					
ANR	6904987	IdentifierDeclType	JSAMPROW		6904958	0					
ANR	6904988	Identifier	outptr		6904958	1					
ANR	6904989	Statement	register	923:2:34118:34125	6904958	4	True				
ANR	6904990	IdentifierDeclStatement	histptr cachep ;	923:11:34127:34141	6904958	5	True				
ANR	6904991	IdentifierDecl	cachep		6904958	0					
ANR	6904992	IdentifierDeclType	histptr		6904958	0					
ANR	6904993	Identifier	cachep		6904958	1					
ANR	6904994	Statement	register	924:2:34145:34152	6904958	6	True				
ANR	6904995	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	924:11:34154:34168	6904958	7	True				
ANR	6904996	IdentifierDecl	c0		6904958	0					
ANR	6904997	IdentifierDeclType	int		6904958	0					
ANR	6904998	Identifier	c0		6904958	1					
ANR	6904999	IdentifierDecl	c1		6904958	1					
ANR	6905000	IdentifierDeclType	int		6904958	0					
ANR	6905001	Identifier	c1		6904958	1					
ANR	6905002	IdentifierDecl	c2		6904958	2					
ANR	6905003	IdentifierDeclType	int		6904958	0					
ANR	6905004	Identifier	c2		6904958	1					
ANR	6905005	IdentifierDeclStatement	int row ;	925:2:34172:34179	6904958	8	True				
ANR	6905006	IdentifierDecl	row		6904958	0					
ANR	6905007	IdentifierDeclType	int		6904958	0					
ANR	6905008	Identifier	row		6904958	1					
ANR	6905009	IdentifierDeclStatement	JDIMENSION col ;	926:2:34183:34197	6904958	9	True				
ANR	6905010	IdentifierDecl	col		6904958	0					
ANR	6905011	IdentifierDeclType	JDIMENSION		6904958	0					
ANR	6905012	Identifier	col		6904958	1					
ANR	6905013	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	927:2:34201:34239	6904958	10	True				
ANR	6905014	IdentifierDecl	width = cinfo -> output_width		6904958	0					
ANR	6905015	IdentifierDeclType	JDIMENSION		6904958	0					
ANR	6905016	Identifier	width		6904958	1					
ANR	6905017	AssignmentExpression	width = cinfo -> output_width		6904958	2		=			
ANR	6905018	Identifier	width		6904958	0					
ANR	6905019	PtrMemberAccess	cinfo -> output_width		6904958	1					
ANR	6905020	Identifier	cinfo		6904958	0					
ANR	6905021	Identifier	output_width		6904958	1					
ANR	6905022	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6904958	11					
ANR	6905023	ForInit	row = 0 ;	929:7:34249:34256	6904958	0	True				
ANR	6905024	AssignmentExpression	row = 0		6904958	0		=			
ANR	6905025	Identifier	row		6904958	0					
ANR	6905026	PrimaryExpression	0		6904958	1					
ANR	6905027	Condition	row < num_rows	929:16:34258:34271	6904958	1	True				
ANR	6905028	RelationalExpression	row < num_rows		6904958	0		<			
ANR	6905029	Identifier	row		6904958	0					
ANR	6905030	Identifier	num_rows		6904958	1					
ANR	6905031	PostIncDecOperationExpression	row ++	929:32:34274:34278	6904958	2	True				
ANR	6905032	Identifier	row		6904958	0					
ANR	6905033	IncDec	++		6904958	1					
ANR	6905034	CompoundStatement		11:39:312:312	6904958	3					
ANR	6905035	ExpressionStatement	inptr = input_buf [ row ]	930:4:34287:34309	6904958	0	True				
ANR	6905036	AssignmentExpression	inptr = input_buf [ row ]		6904958	0		=			
ANR	6905037	Identifier	inptr		6904958	0					
ANR	6905038	ArrayIndexing	input_buf [ row ]		6904958	1					
ANR	6905039	Identifier	input_buf		6904958	0					
ANR	6905040	Identifier	row		6904958	1					
ANR	6905041	ExpressionStatement	outptr = output_buf [ row ]	931:4:34315:34339	6904958	1	True				
ANR	6905042	AssignmentExpression	outptr = output_buf [ row ]		6904958	0		=			
ANR	6905043	Identifier	outptr		6904958	0					
ANR	6905044	ArrayIndexing	output_buf [ row ]		6904958	1					
ANR	6905045	Identifier	output_buf		6904958	0					
ANR	6905046	Identifier	row		6904958	1					
ANR	6905047	ForStatement	for ( col = width ; col > 0 ; col -- )		6904958	2					
ANR	6905048	ForInit	col = width ;	932:9:34350:34361	6904958	0	True				
ANR	6905049	AssignmentExpression	col = width		6904958	0		=			
ANR	6905050	Identifier	col		6904958	0					
ANR	6905051	Identifier	width		6904958	1					
ANR	6905052	Condition	col > 0	932:22:34363:34369	6904958	1	True				
ANR	6905053	RelationalExpression	col > 0		6904958	0		>			
ANR	6905054	Identifier	col		6904958	0					
ANR	6905055	PrimaryExpression	0		6904958	1					
ANR	6905056	PostIncDecOperationExpression	col --	932:31:34372:34376	6904958	2	True				
ANR	6905057	Identifier	col		6904958	0					
ANR	6905058	IncDec	--		6904958	1					
ANR	6905059	CompoundStatement		14:38:410:410	6904958	3					
ANR	6905060	ExpressionStatement	c0 = GETJSAMPLE ( * inptr ++ ) >> C0_SHIFT	934:6:34440:34477	6904958	0	True				
ANR	6905061	AssignmentExpression	c0 = GETJSAMPLE ( * inptr ++ ) >> C0_SHIFT		6904958	0		=			
ANR	6905062	Identifier	c0		6904958	0					
ANR	6905063	ShiftExpression	GETJSAMPLE ( * inptr ++ ) >> C0_SHIFT		6904958	1		>>			
ANR	6905064	CallExpression	GETJSAMPLE ( * inptr ++ )		6904958	0					
ANR	6905065	Callee	GETJSAMPLE		6904958	0					
ANR	6905066	Identifier	GETJSAMPLE		6904958	0					
ANR	6905067	ArgumentList	* inptr ++		6904958	1					
ANR	6905068	Argument	* inptr ++		6904958	0					
ANR	6905069	UnaryOperationExpression	* inptr ++		6904958	0					
ANR	6905070	UnaryOperator	*		6904958	0					
ANR	6905071	PostIncDecOperationExpression	inptr ++		6904958	1					
ANR	6905072	Identifier	inptr		6904958	0					
ANR	6905073	IncDec	++		6904958	1					
ANR	6905074	Identifier	C0_SHIFT		6904958	1					
ANR	6905075	ExpressionStatement	c1 = GETJSAMPLE ( * inptr ++ ) >> C1_SHIFT	935:6:34485:34522	6904958	1	True				
ANR	6905076	AssignmentExpression	c1 = GETJSAMPLE ( * inptr ++ ) >> C1_SHIFT		6904958	0		=			
ANR	6905077	Identifier	c1		6904958	0					
ANR	6905078	ShiftExpression	GETJSAMPLE ( * inptr ++ ) >> C1_SHIFT		6904958	1		>>			
ANR	6905079	CallExpression	GETJSAMPLE ( * inptr ++ )		6904958	0					
ANR	6905080	Callee	GETJSAMPLE		6904958	0					
ANR	6905081	Identifier	GETJSAMPLE		6904958	0					
ANR	6905082	ArgumentList	* inptr ++		6904958	1					
ANR	6905083	Argument	* inptr ++		6904958	0					
ANR	6905084	UnaryOperationExpression	* inptr ++		6904958	0					
ANR	6905085	UnaryOperator	*		6904958	0					
ANR	6905086	PostIncDecOperationExpression	inptr ++		6904958	1					
ANR	6905087	Identifier	inptr		6904958	0					
ANR	6905088	IncDec	++		6904958	1					
ANR	6905089	Identifier	C1_SHIFT		6904958	1					
ANR	6905090	ExpressionStatement	c2 = GETJSAMPLE ( * inptr ++ ) >> C2_SHIFT	936:6:34530:34567	6904958	2	True				
ANR	6905091	AssignmentExpression	c2 = GETJSAMPLE ( * inptr ++ ) >> C2_SHIFT		6904958	0		=			
ANR	6905092	Identifier	c2		6904958	0					
ANR	6905093	ShiftExpression	GETJSAMPLE ( * inptr ++ ) >> C2_SHIFT		6904958	1		>>			
ANR	6905094	CallExpression	GETJSAMPLE ( * inptr ++ )		6904958	0					
ANR	6905095	Callee	GETJSAMPLE		6904958	0					
ANR	6905096	Identifier	GETJSAMPLE		6904958	0					
ANR	6905097	ArgumentList	* inptr ++		6904958	1					
ANR	6905098	Argument	* inptr ++		6904958	0					
ANR	6905099	UnaryOperationExpression	* inptr ++		6904958	0					
ANR	6905100	UnaryOperator	*		6904958	0					
ANR	6905101	PostIncDecOperationExpression	inptr ++		6904958	1					
ANR	6905102	Identifier	inptr		6904958	0					
ANR	6905103	IncDec	++		6904958	1					
ANR	6905104	Identifier	C2_SHIFT		6904958	1					
ANR	6905105	ExpressionStatement	cachep = & histogram [ c0 ] [ c1 ] [ c2 ]	937:6:34575:34607	6904958	3	True				
ANR	6905106	AssignmentExpression	cachep = & histogram [ c0 ] [ c1 ] [ c2 ]		6904958	0		=			
ANR	6905107	Identifier	cachep		6904958	0					
ANR	6905108	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2 ]		6904958	1					
ANR	6905109	UnaryOperator	&		6904958	0					
ANR	6905110	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2 ]		6904958	1					
ANR	6905111	ArrayIndexing	histogram [ c0 ] [ c1 ]		6904958	0					
ANR	6905112	ArrayIndexing	histogram [ c0 ]		6904958	0					
ANR	6905113	Identifier	histogram		6904958	0					
ANR	6905114	Identifier	c0		6904958	1					
ANR	6905115	Identifier	c1		6904958	1					
ANR	6905116	Identifier	c2		6904958	1					
ANR	6905117	IfStatement	if ( * cachep == 0 )		6904958	4					
ANR	6905118	Condition	* cachep == 0	940:10:34731:34742	6904958	0	True				
ANR	6905119	EqualityExpression	* cachep == 0		6904958	0		==			
ANR	6905120	UnaryOperationExpression	* cachep		6904958	0					
ANR	6905121	UnaryOperator	*		6904958	0					
ANR	6905122	Identifier	cachep		6904958	1					
ANR	6905123	PrimaryExpression	0		6904958	1					
ANR	6905124	ExpressionStatement	"fill_inverse_cmap ( cinfo , c0 , c1 , c2 )"	941:1:34746:34780	6904958	1	True				
ANR	6905125	CallExpression	"fill_inverse_cmap ( cinfo , c0 , c1 , c2 )"		6904958	0					
ANR	6905126	Callee	fill_inverse_cmap		6904958	0					
ANR	6905127	Identifier	fill_inverse_cmap		6904958	0					
ANR	6905128	ArgumentList	cinfo		6904958	1					
ANR	6905129	Argument	cinfo		6904958	0					
ANR	6905130	Identifier	cinfo		6904958	0					
ANR	6905131	Argument	c0		6904958	1					
ANR	6905132	Identifier	c0		6904958	0					
ANR	6905133	Argument	c1		6904958	2					
ANR	6905134	Identifier	c1		6904958	0					
ANR	6905135	Argument	c2		6904958	3					
ANR	6905136	Identifier	c2		6904958	0					
ANR	6905137	ExpressionStatement	* outptr ++ = ( JSAMPLE ) ( * cachep - 1 )	943:6:34842:34877	6904958	5	True				
ANR	6905138	AssignmentExpression	* outptr ++ = ( JSAMPLE ) ( * cachep - 1 )		6904958	0		=			
ANR	6905139	UnaryOperationExpression	* outptr ++		6904958	0					
ANR	6905140	UnaryOperator	*		6904958	0					
ANR	6905141	PostIncDecOperationExpression	outptr ++		6904958	1					
ANR	6905142	Identifier	outptr		6904958	0					
ANR	6905143	IncDec	++		6904958	1					
ANR	6905144	CastExpression	( JSAMPLE ) ( * cachep - 1 )		6904958	1					
ANR	6905145	CastTarget	JSAMPLE		6904958	0					
ANR	6905146	AdditiveExpression	* cachep - 1		6904958	1		-			
ANR	6905147	UnaryOperationExpression	* cachep		6904958	0					
ANR	6905148	UnaryOperator	*		6904958	0					
ANR	6905149	Identifier	cachep		6904958	1					
ANR	6905150	PrimaryExpression	1		6904958	1					
ANR	6905151	Identifier	pass2_no_dither		6904958	1					
ANR	6905152	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6904958	2					
ANR	6905153	Parameter	j_decompress_ptr cinfo	916:17:33841:33862	6904958	0	True				
ANR	6905154	ParameterType	j_decompress_ptr		6904958	0					
ANR	6905155	Identifier	cinfo		6904958	1					
ANR	6905156	Parameter	JSAMPARRAY input_buf	917:3:33868:33887	6904958	1	True				
ANR	6905157	ParameterType	JSAMPARRAY		6904958	0					
ANR	6905158	Identifier	input_buf		6904958	1					
ANR	6905159	Parameter	JSAMPARRAY output_buf	917:25:33890:33910	6904958	2	True				
ANR	6905160	ParameterType	JSAMPARRAY		6904958	0					
ANR	6905161	Identifier	output_buf		6904958	1					
ANR	6905162	Parameter	int num_rows	917:48:33913:33924	6904958	3	True				
ANR	6905163	ParameterType	int		6904958	0					
ANR	6905164	Identifier	num_rows		6904958	1					
ANR	6905165	CFGEntryNode	ENTRY		6904958		True				
ANR	6905166	CFGExitNode	EXIT		6904958		True				
ANR	6905167	Symbol	col		6904958						
ANR	6905168	Symbol	* * histogram		6904958						
ANR	6905169	Symbol	* row		6904958						
ANR	6905170	Symbol	C2_SHIFT		6904958						
ANR	6905171	Symbol	* cachep		6904958						
ANR	6905172	Symbol	cquantize		6904958						
ANR	6905173	Symbol	* cquantize		6904958						
ANR	6905174	Symbol	cinfo -> output_width		6904958						
ANR	6905175	Symbol	cquantize -> histogram		6904958						
ANR	6905176	Symbol	inptr		6904958						
ANR	6905177	Symbol	num_rows		6904958						
ANR	6905178	Symbol	C0_SHIFT		6904958						
ANR	6905179	Symbol	cachep		6904958						
ANR	6905180	Symbol	row		6904958						
ANR	6905181	Symbol	* * c0		6904958						
ANR	6905182	Symbol	* cinfo		6904958						
ANR	6905183	Symbol	output_buf		6904958						
ANR	6905184	Symbol	GETJSAMPLE		6904958						
ANR	6905185	Symbol	* histogram		6904958						
ANR	6905186	Symbol	c0		6904958						
ANR	6905187	Symbol	c1		6904958						
ANR	6905188	Symbol	c2		6904958						
ANR	6905189	Symbol	histogram		6904958						
ANR	6905190	Symbol	* c0		6904958						
ANR	6905191	Symbol	outptr		6904958						
ANR	6905192	Symbol	cinfo -> cquantize		6904958						
ANR	6905193	Symbol	* inptr ++		6904958						
ANR	6905194	Symbol	cinfo		6904958						
ANR	6905195	Symbol	* c1		6904958						
ANR	6905196	Symbol	width		6904958						
ANR	6905197	Symbol	* output_buf		6904958						
ANR	6905198	Symbol	* outptr ++		6904958						
ANR	6905199	Symbol	input_buf		6904958						
ANR	6905200	Symbol	* input_buf		6904958						
ANR	6905201	Symbol	C1_SHIFT		6904958						
ANR	6905202	Function	pass2_fs_dither	950:0:34909:40846							
ANR	6905203	FunctionDef	"pass2_fs_dither (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6905202	0					
ANR	6905204	CompoundStatement		953:0:35066:40846	6905202	0					
ANR	6905205	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	954:2:35070:35134	6905202	0	True				
ANR	6905206	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6905202	0					
ANR	6905207	IdentifierDeclType	my_cquantize_ptr		6905202	0					
ANR	6905208	Identifier	cquantize		6905202	1					
ANR	6905209	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6905202	2		=			
ANR	6905210	Identifier	cquantize		6905202	0					
ANR	6905211	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6905202	1					
ANR	6905212	CastTarget	my_cquantize_ptr		6905202	0					
ANR	6905213	PtrMemberAccess	cinfo -> cquantize		6905202	1					
ANR	6905214	Identifier	cinfo		6905202	0					
ANR	6905215	Identifier	cquantize		6905202	1					
ANR	6905216	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	955:2:35138:35177	6905202	1	True				
ANR	6905217	IdentifierDecl	histogram = cquantize -> histogram		6905202	0					
ANR	6905218	IdentifierDeclType	hist3d		6905202	0					
ANR	6905219	Identifier	histogram		6905202	1					
ANR	6905220	AssignmentExpression	histogram = cquantize -> histogram		6905202	2		=			
ANR	6905221	Identifier	histogram		6905202	0					
ANR	6905222	PtrMemberAccess	cquantize -> histogram		6905202	1					
ANR	6905223	Identifier	cquantize		6905202	0					
ANR	6905224	Identifier	histogram		6905202	1					
ANR	6905225	Statement	register	956:2:35181:35188	6905202	2	True				
ANR	6905226	IdentifierDeclStatement	"LOCFSERROR cur0 , cur1 , cur2 ;"	956:11:35190:35217	6905202	3	True				
ANR	6905227	IdentifierDecl	cur0		6905202	0					
ANR	6905228	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905229	Identifier	cur0		6905202	1					
ANR	6905230	IdentifierDecl	cur1		6905202	1					
ANR	6905231	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905232	Identifier	cur1		6905202	1					
ANR	6905233	IdentifierDecl	cur2		6905202	2					
ANR	6905234	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905235	Identifier	cur2		6905202	1					
ANR	6905236	IdentifierDeclStatement	"LOCFSERROR belowerr0 , belowerr1 , belowerr2 ;"	957:2:35256:35298	6905202	4	True				
ANR	6905237	IdentifierDecl	belowerr0		6905202	0					
ANR	6905238	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905239	Identifier	belowerr0		6905202	1					
ANR	6905240	IdentifierDecl	belowerr1		6905202	1					
ANR	6905241	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905242	Identifier	belowerr1		6905202	1					
ANR	6905243	IdentifierDecl	belowerr2		6905202	2					
ANR	6905244	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905245	Identifier	belowerr2		6905202	1					
ANR	6905246	IdentifierDeclStatement	"LOCFSERROR bpreverr0 , bpreverr1 , bpreverr2 ;"	958:2:35334:35376	6905202	5	True				
ANR	6905247	IdentifierDecl	bpreverr0		6905202	0					
ANR	6905248	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905249	Identifier	bpreverr0		6905202	1					
ANR	6905250	IdentifierDecl	bpreverr1		6905202	1					
ANR	6905251	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905252	Identifier	bpreverr1		6905202	1					
ANR	6905253	IdentifierDecl	bpreverr2		6905202	2					
ANR	6905254	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905255	Identifier	bpreverr2		6905202	1					
ANR	6905256	Statement	register	959:2:35411:35418	6905202	6	True				
ANR	6905257	IdentifierDeclStatement	FSERRPTR errorptr ;	959:11:35420:35437	6905202	7	True				
ANR	6905258	IdentifierDecl	errorptr		6905202	0					
ANR	6905259	IdentifierDeclType	FSERRPTR		6905202	0					
ANR	6905260	Identifier	errorptr		6905202	1					
ANR	6905261	IdentifierDeclStatement	JSAMPROW inptr ;	960:2:35486:35500	6905202	8	True				
ANR	6905262	IdentifierDecl	inptr		6905202	0					
ANR	6905263	IdentifierDeclType	JSAMPROW		6905202	0					
ANR	6905264	Identifier	inptr		6905202	1					
ANR	6905265	IdentifierDeclStatement	JSAMPROW outptr ;	961:2:35534:35549	6905202	9	True				
ANR	6905266	IdentifierDecl	outptr		6905202	0					
ANR	6905267	IdentifierDeclType	JSAMPROW		6905202	0					
ANR	6905268	Identifier	outptr		6905202	1					
ANR	6905269	IdentifierDeclStatement	histptr cachep ;	962:2:35584:35598	6905202	10	True				
ANR	6905270	IdentifierDecl	cachep		6905202	0					
ANR	6905271	IdentifierDeclType	histptr		6905202	0					
ANR	6905272	Identifier	cachep		6905202	1					
ANR	6905273	IdentifierDeclStatement	int dir ;	963:2:35602:35609	6905202	11	True				
ANR	6905274	IdentifierDecl	dir		6905202	0					
ANR	6905275	IdentifierDeclType	int		6905202	0					
ANR	6905276	Identifier	dir		6905202	1					
ANR	6905277	IdentifierDeclStatement	int dir3 ;	964:2:35653:35661	6905202	12	True				
ANR	6905278	IdentifierDecl	dir3		6905202	0					
ANR	6905279	IdentifierDeclType	int		6905202	0					
ANR	6905280	Identifier	dir3		6905202	1					
ANR	6905281	IdentifierDeclStatement	int row ;	965:2:35711:35718	6905202	13	True				
ANR	6905282	IdentifierDecl	row		6905202	0					
ANR	6905283	IdentifierDeclType	int		6905202	0					
ANR	6905284	Identifier	row		6905202	1					
ANR	6905285	IdentifierDeclStatement	JDIMENSION col ;	966:2:35722:35736	6905202	14	True				
ANR	6905286	IdentifierDecl	col		6905202	0					
ANR	6905287	IdentifierDeclType	JDIMENSION		6905202	0					
ANR	6905288	Identifier	col		6905202	1					
ANR	6905289	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	967:2:35740:35778	6905202	15	True				
ANR	6905290	IdentifierDecl	width = cinfo -> output_width		6905202	0					
ANR	6905291	IdentifierDeclType	JDIMENSION		6905202	0					
ANR	6905292	Identifier	width		6905202	1					
ANR	6905293	AssignmentExpression	width = cinfo -> output_width		6905202	2		=			
ANR	6905294	Identifier	width		6905202	0					
ANR	6905295	PtrMemberAccess	cinfo -> output_width		6905202	1					
ANR	6905296	Identifier	cinfo		6905202	0					
ANR	6905297	Identifier	output_width		6905202	1					
ANR	6905298	IdentifierDeclStatement	JSAMPLE * range_limit = cinfo -> sample_range_limit ;	968:2:35782:35830	6905202	16	True				
ANR	6905299	IdentifierDecl	* range_limit = cinfo -> sample_range_limit		6905202	0					
ANR	6905300	IdentifierDeclType	JSAMPLE *		6905202	0					
ANR	6905301	Identifier	range_limit		6905202	1					
ANR	6905302	AssignmentExpression	* range_limit = cinfo -> sample_range_limit		6905202	2		=			
ANR	6905303	Identifier	range_limit		6905202	0					
ANR	6905304	PtrMemberAccess	cinfo -> sample_range_limit		6905202	1					
ANR	6905305	Identifier	cinfo		6905202	0					
ANR	6905306	Identifier	sample_range_limit		6905202	1					
ANR	6905307	IdentifierDeclStatement	int * error_limit = cquantize -> error_limiter ;	969:2:35834:35877	6905202	17	True				
ANR	6905308	IdentifierDecl	* error_limit = cquantize -> error_limiter		6905202	0					
ANR	6905309	IdentifierDeclType	int *		6905202	0					
ANR	6905310	Identifier	error_limit		6905202	1					
ANR	6905311	AssignmentExpression	* error_limit = cquantize -> error_limiter		6905202	2		=			
ANR	6905312	Identifier	error_limit		6905202	0					
ANR	6905313	PtrMemberAccess	cquantize -> error_limiter		6905202	1					
ANR	6905314	Identifier	cquantize		6905202	0					
ANR	6905315	Identifier	error_limiter		6905202	1					
ANR	6905316	IdentifierDeclStatement	JSAMPROW colormap0 = cinfo -> colormap [ 0 ] ;	970:2:35881:35920	6905202	18	True				
ANR	6905317	IdentifierDecl	colormap0 = cinfo -> colormap [ 0 ]		6905202	0					
ANR	6905318	IdentifierDeclType	JSAMPROW		6905202	0					
ANR	6905319	Identifier	colormap0		6905202	1					
ANR	6905320	AssignmentExpression	colormap0 = cinfo -> colormap [ 0 ]		6905202	2		=			
ANR	6905321	Identifier	colormap0		6905202	0					
ANR	6905322	ArrayIndexing	cinfo -> colormap [ 0 ]		6905202	1					
ANR	6905323	PtrMemberAccess	cinfo -> colormap		6905202	0					
ANR	6905324	Identifier	cinfo		6905202	0					
ANR	6905325	Identifier	colormap		6905202	1					
ANR	6905326	PrimaryExpression	0		6905202	1					
ANR	6905327	IdentifierDeclStatement	JSAMPROW colormap1 = cinfo -> colormap [ 1 ] ;	971:2:35924:35963	6905202	19	True				
ANR	6905328	IdentifierDecl	colormap1 = cinfo -> colormap [ 1 ]		6905202	0					
ANR	6905329	IdentifierDeclType	JSAMPROW		6905202	0					
ANR	6905330	Identifier	colormap1		6905202	1					
ANR	6905331	AssignmentExpression	colormap1 = cinfo -> colormap [ 1 ]		6905202	2		=			
ANR	6905332	Identifier	colormap1		6905202	0					
ANR	6905333	ArrayIndexing	cinfo -> colormap [ 1 ]		6905202	1					
ANR	6905334	PtrMemberAccess	cinfo -> colormap		6905202	0					
ANR	6905335	Identifier	cinfo		6905202	0					
ANR	6905336	Identifier	colormap		6905202	1					
ANR	6905337	PrimaryExpression	1		6905202	1					
ANR	6905338	IdentifierDeclStatement	JSAMPROW colormap2 = cinfo -> colormap [ 2 ] ;	972:2:35967:36006	6905202	20	True				
ANR	6905339	IdentifierDecl	colormap2 = cinfo -> colormap [ 2 ]		6905202	0					
ANR	6905340	IdentifierDeclType	JSAMPROW		6905202	0					
ANR	6905341	Identifier	colormap2		6905202	1					
ANR	6905342	AssignmentExpression	colormap2 = cinfo -> colormap [ 2 ]		6905202	2		=			
ANR	6905343	Identifier	colormap2		6905202	0					
ANR	6905344	ArrayIndexing	cinfo -> colormap [ 2 ]		6905202	1					
ANR	6905345	PtrMemberAccess	cinfo -> colormap		6905202	0					
ANR	6905346	Identifier	cinfo		6905202	0					
ANR	6905347	Identifier	colormap		6905202	1					
ANR	6905348	PrimaryExpression	2		6905202	1					
ANR	6905349	Statement	SHIFT_TEMPS	973:2:36010:36020	6905202	21	True				
ANR	6905350	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6905202	22					
ANR	6905351	ForInit	row = 0 ;	975:7:36030:36037	6905202	0	True				
ANR	6905352	AssignmentExpression	row = 0		6905202	0		=			
ANR	6905353	Identifier	row		6905202	0					
ANR	6905354	PrimaryExpression	0		6905202	1					
ANR	6905355	Condition	row < num_rows	975:16:36039:36052	6905202	1	True				
ANR	6905356	RelationalExpression	row < num_rows		6905202	0		<			
ANR	6905357	Identifier	row		6905202	0					
ANR	6905358	Identifier	num_rows		6905202	1					
ANR	6905359	PostIncDecOperationExpression	row ++	975:32:36055:36059	6905202	2	True				
ANR	6905360	Identifier	row		6905202	0					
ANR	6905361	IncDec	++		6905202	1					
ANR	6905362	CompoundStatement		23:39:995:995	6905202	3					
ANR	6905363	ExpressionStatement	inptr = input_buf [ row ]	976:4:36068:36090	6905202	0	True				
ANR	6905364	AssignmentExpression	inptr = input_buf [ row ]		6905202	0		=			
ANR	6905365	Identifier	inptr		6905202	0					
ANR	6905366	ArrayIndexing	input_buf [ row ]		6905202	1					
ANR	6905367	Identifier	input_buf		6905202	0					
ANR	6905368	Identifier	row		6905202	1					
ANR	6905369	ExpressionStatement	outptr = output_buf [ row ]	977:4:36096:36120	6905202	1	True				
ANR	6905370	AssignmentExpression	outptr = output_buf [ row ]		6905202	0		=			
ANR	6905371	Identifier	outptr		6905202	0					
ANR	6905372	ArrayIndexing	output_buf [ row ]		6905202	1					
ANR	6905373	Identifier	output_buf		6905202	0					
ANR	6905374	Identifier	row		6905202	1					
ANR	6905375	IfStatement	if ( cquantize -> on_odd_row )		6905202	2					
ANR	6905376	Condition	cquantize -> on_odd_row	978:8:36130:36150	6905202	0	True				
ANR	6905377	PtrMemberAccess	cquantize -> on_odd_row		6905202	0					
ANR	6905378	Identifier	cquantize		6905202	0					
ANR	6905379	Identifier	on_odd_row		6905202	1					
ANR	6905380	CompoundStatement		26:31:1086:1086	6905202	1					
ANR	6905381	ExpressionStatement	inptr += ( width - 1 ) * 3	980:6:36204:36226	6905202	0	True				
ANR	6905382	AssignmentExpression	inptr += ( width - 1 ) * 3		6905202	0		+=			
ANR	6905383	Identifier	inptr		6905202	0					
ANR	6905384	MultiplicativeExpression	( width - 1 ) * 3		6905202	1		*			
ANR	6905385	AdditiveExpression	width - 1		6905202	0		-			
ANR	6905386	Identifier	width		6905202	0					
ANR	6905387	PrimaryExpression	1		6905202	1					
ANR	6905388	PrimaryExpression	3		6905202	1					
ANR	6905389	ExpressionStatement	outptr += width - 1	981:6:36268:36285	6905202	1	True				
ANR	6905390	AssignmentExpression	outptr += width - 1		6905202	0		+=			
ANR	6905391	Identifier	outptr		6905202	0					
ANR	6905392	AdditiveExpression	width - 1		6905202	1		-			
ANR	6905393	Identifier	width		6905202	0					
ANR	6905394	PrimaryExpression	1		6905202	1					
ANR	6905395	ExpressionStatement	dir = - 1	982:6:36293:36301	6905202	2	True				
ANR	6905396	AssignmentExpression	dir = - 1		6905202	0		=			
ANR	6905397	Identifier	dir		6905202	0					
ANR	6905398	UnaryOperationExpression	- 1		6905202	1					
ANR	6905399	UnaryOperator	-		6905202	0					
ANR	6905400	PrimaryExpression	1		6905202	1					
ANR	6905401	ExpressionStatement	dir3 = - 3	983:6:36309:36318	6905202	3	True				
ANR	6905402	AssignmentExpression	dir3 = - 3		6905202	0		=			
ANR	6905403	Identifier	dir3		6905202	0					
ANR	6905404	UnaryOperationExpression	- 3		6905202	1					
ANR	6905405	UnaryOperator	-		6905202	0					
ANR	6905406	PrimaryExpression	3		6905202	1					
ANR	6905407	ExpressionStatement	errorptr = cquantize -> fserrors + ( width + 1 ) * 3	984:6:36326:36370	6905202	4	True				
ANR	6905408	AssignmentExpression	errorptr = cquantize -> fserrors + ( width + 1 ) * 3		6905202	0		=			
ANR	6905409	Identifier	errorptr		6905202	0					
ANR	6905410	AdditiveExpression	cquantize -> fserrors + ( width + 1 ) * 3		6905202	1		+			
ANR	6905411	PtrMemberAccess	cquantize -> fserrors		6905202	0					
ANR	6905412	Identifier	cquantize		6905202	0					
ANR	6905413	Identifier	fserrors		6905202	1					
ANR	6905414	MultiplicativeExpression	( width + 1 ) * 3		6905202	1		*			
ANR	6905415	AdditiveExpression	width + 1		6905202	0		+			
ANR	6905416	Identifier	width		6905202	0					
ANR	6905417	PrimaryExpression	1		6905202	1					
ANR	6905418	PrimaryExpression	3		6905202	1					
ANR	6905419	ExpressionStatement	cquantize -> on_odd_row = FALSE	985:6:36411:36440	6905202	5	True				
ANR	6905420	AssignmentExpression	cquantize -> on_odd_row = FALSE		6905202	0		=			
ANR	6905421	PtrMemberAccess	cquantize -> on_odd_row		6905202	0					
ANR	6905422	Identifier	cquantize		6905202	0					
ANR	6905423	Identifier	on_odd_row		6905202	1					
ANR	6905424	Identifier	FALSE		6905202	1					
ANR	6905425	ElseStatement	else		6905202	0					
ANR	6905426	CompoundStatement		34:11:1411:1411	6905202	0					
ANR	6905427	ExpressionStatement	dir = 1	988:6:36529:36536	6905202	0	True				
ANR	6905428	AssignmentExpression	dir = 1		6905202	0		=			
ANR	6905429	Identifier	dir		6905202	0					
ANR	6905430	PrimaryExpression	1		6905202	1					
ANR	6905431	ExpressionStatement	dir3 = 3	989:6:36544:36552	6905202	1	True				
ANR	6905432	AssignmentExpression	dir3 = 3		6905202	0		=			
ANR	6905433	Identifier	dir3		6905202	0					
ANR	6905434	PrimaryExpression	3		6905202	1					
ANR	6905435	ExpressionStatement	errorptr = cquantize -> fserrors	990:6:36560:36590	6905202	2	True				
ANR	6905436	AssignmentExpression	errorptr = cquantize -> fserrors		6905202	0		=			
ANR	6905437	Identifier	errorptr		6905202	0					
ANR	6905438	PtrMemberAccess	cquantize -> fserrors		6905202	1					
ANR	6905439	Identifier	cquantize		6905202	0					
ANR	6905440	Identifier	fserrors		6905202	1					
ANR	6905441	ExpressionStatement	cquantize -> on_odd_row = TRUE	991:6:36638:36666	6905202	3	True				
ANR	6905442	AssignmentExpression	cquantize -> on_odd_row = TRUE		6905202	0		=			
ANR	6905443	PtrMemberAccess	cquantize -> on_odd_row		6905202	0					
ANR	6905444	Identifier	cquantize		6905202	0					
ANR	6905445	Identifier	on_odd_row		6905202	1					
ANR	6905446	Identifier	TRUE		6905202	1					
ANR	6905447	ExpressionStatement	cur0 = cur1 = cur2 = 0	994:4:36779:36801	6905202	3	True				
ANR	6905448	AssignmentExpression	cur0 = cur1 = cur2 = 0		6905202	0		=			
ANR	6905449	Identifier	cur0		6905202	0					
ANR	6905450	AssignmentExpression	cur1 = cur2 = 0		6905202	1		=			
ANR	6905451	Identifier	cur1		6905202	0					
ANR	6905452	AssignmentExpression	cur2 = 0		6905202	1		=			
ANR	6905453	Identifier	cur2		6905202	0					
ANR	6905454	PrimaryExpression	0		6905202	1					
ANR	6905455	ExpressionStatement	belowerr0 = belowerr1 = belowerr2 = 0	996:4:36858:36895	6905202	4	True				
ANR	6905456	AssignmentExpression	belowerr0 = belowerr1 = belowerr2 = 0		6905202	0		=			
ANR	6905457	Identifier	belowerr0		6905202	0					
ANR	6905458	AssignmentExpression	belowerr1 = belowerr2 = 0		6905202	1		=			
ANR	6905459	Identifier	belowerr1		6905202	0					
ANR	6905460	AssignmentExpression	belowerr2 = 0		6905202	1		=			
ANR	6905461	Identifier	belowerr2		6905202	0					
ANR	6905462	PrimaryExpression	0		6905202	1					
ANR	6905463	ExpressionStatement	bpreverr0 = bpreverr1 = bpreverr2 = 0	997:4:36901:36938	6905202	5	True				
ANR	6905464	AssignmentExpression	bpreverr0 = bpreverr1 = bpreverr2 = 0		6905202	0		=			
ANR	6905465	Identifier	bpreverr0		6905202	0					
ANR	6905466	AssignmentExpression	bpreverr1 = bpreverr2 = 0		6905202	1		=			
ANR	6905467	Identifier	bpreverr1		6905202	0					
ANR	6905468	AssignmentExpression	bpreverr2 = 0		6905202	1		=			
ANR	6905469	Identifier	bpreverr2		6905202	0					
ANR	6905470	PrimaryExpression	0		6905202	1					
ANR	6905471	ForStatement	for ( col = width ; col > 0 ; col -- )		6905202	6					
ANR	6905472	ForInit	col = width ;	999:9:36950:36961	6905202	0	True				
ANR	6905473	AssignmentExpression	col = width		6905202	0		=			
ANR	6905474	Identifier	col		6905202	0					
ANR	6905475	Identifier	width		6905202	1					
ANR	6905476	Condition	col > 0	999:22:36963:36969	6905202	1	True				
ANR	6905477	RelationalExpression	col > 0		6905202	0		>			
ANR	6905478	Identifier	col		6905202	0					
ANR	6905479	PrimaryExpression	0		6905202	1					
ANR	6905480	PostIncDecOperationExpression	col --	999:31:36972:36976	6905202	2	True				
ANR	6905481	Identifier	col		6905202	0					
ANR	6905482	IncDec	--		6905202	1					
ANR	6905483	CompoundStatement		47:38:1912:1912	6905202	3					
ANR	6905484	ExpressionStatement	"cur0 = RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"	1008:6:37471:37521	6905202	0	True				
ANR	6905485	AssignmentExpression	"cur0 = RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"		6905202	0		=			
ANR	6905486	Identifier	cur0		6905202	0					
ANR	6905487	CallExpression	"RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"		6905202	1					
ANR	6905488	Callee	RIGHT_SHIFT		6905202	0					
ANR	6905489	Identifier	RIGHT_SHIFT		6905202	0					
ANR	6905490	ArgumentList	cur0 + errorptr [ dir3 + 0 ] + 8		6905202	1					
ANR	6905491	Argument	cur0 + errorptr [ dir3 + 0 ] + 8		6905202	0					
ANR	6905492	AdditiveExpression	cur0 + errorptr [ dir3 + 0 ] + 8		6905202	0		+			
ANR	6905493	Identifier	cur0		6905202	0					
ANR	6905494	AdditiveExpression	errorptr [ dir3 + 0 ] + 8		6905202	1		+			
ANR	6905495	ArrayIndexing	errorptr [ dir3 + 0 ]		6905202	0					
ANR	6905496	Identifier	errorptr		6905202	0					
ANR	6905497	AdditiveExpression	dir3 + 0		6905202	1		+			
ANR	6905498	Identifier	dir3		6905202	0					
ANR	6905499	PrimaryExpression	0		6905202	1					
ANR	6905500	PrimaryExpression	8		6905202	1					
ANR	6905501	Argument	4		6905202	1					
ANR	6905502	PrimaryExpression	4		6905202	0					
ANR	6905503	ExpressionStatement	"cur1 = RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"	1009:6:37529:37579	6905202	1	True				
ANR	6905504	AssignmentExpression	"cur1 = RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"		6905202	0		=			
ANR	6905505	Identifier	cur1		6905202	0					
ANR	6905506	CallExpression	"RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"		6905202	1					
ANR	6905507	Callee	RIGHT_SHIFT		6905202	0					
ANR	6905508	Identifier	RIGHT_SHIFT		6905202	0					
ANR	6905509	ArgumentList	cur1 + errorptr [ dir3 + 1 ] + 8		6905202	1					
ANR	6905510	Argument	cur1 + errorptr [ dir3 + 1 ] + 8		6905202	0					
ANR	6905511	AdditiveExpression	cur1 + errorptr [ dir3 + 1 ] + 8		6905202	0		+			
ANR	6905512	Identifier	cur1		6905202	0					
ANR	6905513	AdditiveExpression	errorptr [ dir3 + 1 ] + 8		6905202	1		+			
ANR	6905514	ArrayIndexing	errorptr [ dir3 + 1 ]		6905202	0					
ANR	6905515	Identifier	errorptr		6905202	0					
ANR	6905516	AdditiveExpression	dir3 + 1		6905202	1		+			
ANR	6905517	Identifier	dir3		6905202	0					
ANR	6905518	PrimaryExpression	1		6905202	1					
ANR	6905519	PrimaryExpression	8		6905202	1					
ANR	6905520	Argument	4		6905202	1					
ANR	6905521	PrimaryExpression	4		6905202	0					
ANR	6905522	ExpressionStatement	"cur2 = RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"	1010:6:37587:37637	6905202	2	True				
ANR	6905523	AssignmentExpression	"cur2 = RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"		6905202	0		=			
ANR	6905524	Identifier	cur2		6905202	0					
ANR	6905525	CallExpression	"RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"		6905202	1					
ANR	6905526	Callee	RIGHT_SHIFT		6905202	0					
ANR	6905527	Identifier	RIGHT_SHIFT		6905202	0					
ANR	6905528	ArgumentList	cur2 + errorptr [ dir3 + 2 ] + 8		6905202	1					
ANR	6905529	Argument	cur2 + errorptr [ dir3 + 2 ] + 8		6905202	0					
ANR	6905530	AdditiveExpression	cur2 + errorptr [ dir3 + 2 ] + 8		6905202	0		+			
ANR	6905531	Identifier	cur2		6905202	0					
ANR	6905532	AdditiveExpression	errorptr [ dir3 + 2 ] + 8		6905202	1		+			
ANR	6905533	ArrayIndexing	errorptr [ dir3 + 2 ]		6905202	0					
ANR	6905534	Identifier	errorptr		6905202	0					
ANR	6905535	AdditiveExpression	dir3 + 2		6905202	1		+			
ANR	6905536	Identifier	dir3		6905202	0					
ANR	6905537	PrimaryExpression	2		6905202	1					
ANR	6905538	PrimaryExpression	8		6905202	1					
ANR	6905539	Argument	4		6905202	1					
ANR	6905540	PrimaryExpression	4		6905202	0					
ANR	6905541	ExpressionStatement	cur0 = error_limit [ cur0 ]	1014:6:37788:37812	6905202	3	True				
ANR	6905542	AssignmentExpression	cur0 = error_limit [ cur0 ]		6905202	0		=			
ANR	6905543	Identifier	cur0		6905202	0					
ANR	6905544	ArrayIndexing	error_limit [ cur0 ]		6905202	1					
ANR	6905545	Identifier	error_limit		6905202	0					
ANR	6905546	Identifier	cur0		6905202	1					
ANR	6905547	ExpressionStatement	cur1 = error_limit [ cur1 ]	1015:6:37820:37844	6905202	4	True				
ANR	6905548	AssignmentExpression	cur1 = error_limit [ cur1 ]		6905202	0		=			
ANR	6905549	Identifier	cur1		6905202	0					
ANR	6905550	ArrayIndexing	error_limit [ cur1 ]		6905202	1					
ANR	6905551	Identifier	error_limit		6905202	0					
ANR	6905552	Identifier	cur1		6905202	1					
ANR	6905553	ExpressionStatement	cur2 = error_limit [ cur2 ]	1016:6:37852:37876	6905202	5	True				
ANR	6905554	AssignmentExpression	cur2 = error_limit [ cur2 ]		6905202	0		=			
ANR	6905555	Identifier	cur2		6905202	0					
ANR	6905556	ArrayIndexing	error_limit [ cur2 ]		6905202	1					
ANR	6905557	Identifier	error_limit		6905202	0					
ANR	6905558	Identifier	cur2		6905202	1					
ANR	6905559	ExpressionStatement	cur0 += GETJSAMPLE ( inptr [ 0 ] )	1021:6:38101:38129	6905202	6	True				
ANR	6905560	AssignmentExpression	cur0 += GETJSAMPLE ( inptr [ 0 ] )		6905202	0		+=			
ANR	6905561	Identifier	cur0		6905202	0					
ANR	6905562	CallExpression	GETJSAMPLE ( inptr [ 0 ] )		6905202	1					
ANR	6905563	Callee	GETJSAMPLE		6905202	0					
ANR	6905564	Identifier	GETJSAMPLE		6905202	0					
ANR	6905565	ArgumentList	inptr [ 0 ]		6905202	1					
ANR	6905566	Argument	inptr [ 0 ]		6905202	0					
ANR	6905567	ArrayIndexing	inptr [ 0 ]		6905202	0					
ANR	6905568	Identifier	inptr		6905202	0					
ANR	6905569	PrimaryExpression	0		6905202	1					
ANR	6905570	ExpressionStatement	cur1 += GETJSAMPLE ( inptr [ 1 ] )	1022:6:38137:38165	6905202	7	True				
ANR	6905571	AssignmentExpression	cur1 += GETJSAMPLE ( inptr [ 1 ] )		6905202	0		+=			
ANR	6905572	Identifier	cur1		6905202	0					
ANR	6905573	CallExpression	GETJSAMPLE ( inptr [ 1 ] )		6905202	1					
ANR	6905574	Callee	GETJSAMPLE		6905202	0					
ANR	6905575	Identifier	GETJSAMPLE		6905202	0					
ANR	6905576	ArgumentList	inptr [ 1 ]		6905202	1					
ANR	6905577	Argument	inptr [ 1 ]		6905202	0					
ANR	6905578	ArrayIndexing	inptr [ 1 ]		6905202	0					
ANR	6905579	Identifier	inptr		6905202	0					
ANR	6905580	PrimaryExpression	1		6905202	1					
ANR	6905581	ExpressionStatement	cur2 += GETJSAMPLE ( inptr [ 2 ] )	1023:6:38173:38201	6905202	8	True				
ANR	6905582	AssignmentExpression	cur2 += GETJSAMPLE ( inptr [ 2 ] )		6905202	0		+=			
ANR	6905583	Identifier	cur2		6905202	0					
ANR	6905584	CallExpression	GETJSAMPLE ( inptr [ 2 ] )		6905202	1					
ANR	6905585	Callee	GETJSAMPLE		6905202	0					
ANR	6905586	Identifier	GETJSAMPLE		6905202	0					
ANR	6905587	ArgumentList	inptr [ 2 ]		6905202	1					
ANR	6905588	Argument	inptr [ 2 ]		6905202	0					
ANR	6905589	ArrayIndexing	inptr [ 2 ]		6905202	0					
ANR	6905590	Identifier	inptr		6905202	0					
ANR	6905591	PrimaryExpression	2		6905202	1					
ANR	6905592	ExpressionStatement	cur0 = GETJSAMPLE ( range_limit [ cur0 ] )	1024:6:38209:38245	6905202	9	True				
ANR	6905593	AssignmentExpression	cur0 = GETJSAMPLE ( range_limit [ cur0 ] )		6905202	0		=			
ANR	6905594	Identifier	cur0		6905202	0					
ANR	6905595	CallExpression	GETJSAMPLE ( range_limit [ cur0 ] )		6905202	1					
ANR	6905596	Callee	GETJSAMPLE		6905202	0					
ANR	6905597	Identifier	GETJSAMPLE		6905202	0					
ANR	6905598	ArgumentList	range_limit [ cur0 ]		6905202	1					
ANR	6905599	Argument	range_limit [ cur0 ]		6905202	0					
ANR	6905600	ArrayIndexing	range_limit [ cur0 ]		6905202	0					
ANR	6905601	Identifier	range_limit		6905202	0					
ANR	6905602	Identifier	cur0		6905202	1					
ANR	6905603	ExpressionStatement	cur1 = GETJSAMPLE ( range_limit [ cur1 ] )	1025:6:38253:38289	6905202	10	True				
ANR	6905604	AssignmentExpression	cur1 = GETJSAMPLE ( range_limit [ cur1 ] )		6905202	0		=			
ANR	6905605	Identifier	cur1		6905202	0					
ANR	6905606	CallExpression	GETJSAMPLE ( range_limit [ cur1 ] )		6905202	1					
ANR	6905607	Callee	GETJSAMPLE		6905202	0					
ANR	6905608	Identifier	GETJSAMPLE		6905202	0					
ANR	6905609	ArgumentList	range_limit [ cur1 ]		6905202	1					
ANR	6905610	Argument	range_limit [ cur1 ]		6905202	0					
ANR	6905611	ArrayIndexing	range_limit [ cur1 ]		6905202	0					
ANR	6905612	Identifier	range_limit		6905202	0					
ANR	6905613	Identifier	cur1		6905202	1					
ANR	6905614	ExpressionStatement	cur2 = GETJSAMPLE ( range_limit [ cur2 ] )	1026:6:38297:38333	6905202	11	True				
ANR	6905615	AssignmentExpression	cur2 = GETJSAMPLE ( range_limit [ cur2 ] )		6905202	0		=			
ANR	6905616	Identifier	cur2		6905202	0					
ANR	6905617	CallExpression	GETJSAMPLE ( range_limit [ cur2 ] )		6905202	1					
ANR	6905618	Callee	GETJSAMPLE		6905202	0					
ANR	6905619	Identifier	GETJSAMPLE		6905202	0					
ANR	6905620	ArgumentList	range_limit [ cur2 ]		6905202	1					
ANR	6905621	Argument	range_limit [ cur2 ]		6905202	0					
ANR	6905622	ArrayIndexing	range_limit [ cur2 ]		6905202	0					
ANR	6905623	Identifier	range_limit		6905202	0					
ANR	6905624	Identifier	cur2		6905202	1					
ANR	6905625	ExpressionStatement	cachep = & histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]	1028:6:38400:38468	6905202	12	True				
ANR	6905626	AssignmentExpression	cachep = & histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		6905202	0		=			
ANR	6905627	Identifier	cachep		6905202	0					
ANR	6905628	UnaryOperationExpression	& histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		6905202	1					
ANR	6905629	UnaryOperator	&		6905202	0					
ANR	6905630	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		6905202	1					
ANR	6905631	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ]		6905202	0					
ANR	6905632	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ]		6905202	0					
ANR	6905633	Identifier	histogram		6905202	0					
ANR	6905634	ShiftExpression	cur0 >> C0_SHIFT		6905202	1		>>			
ANR	6905635	Identifier	cur0		6905202	0					
ANR	6905636	Identifier	C0_SHIFT		6905202	1					
ANR	6905637	ShiftExpression	cur1 >> C1_SHIFT		6905202	1		>>			
ANR	6905638	Identifier	cur1		6905202	0					
ANR	6905639	Identifier	C1_SHIFT		6905202	1					
ANR	6905640	ShiftExpression	cur2 >> C2_SHIFT		6905202	1		>>			
ANR	6905641	Identifier	cur2		6905202	0					
ANR	6905642	Identifier	C2_SHIFT		6905202	1					
ANR	6905643	IfStatement	if ( * cachep == 0 )		6905202	13					
ANR	6905644	Condition	* cachep == 0	1031:10:38592:38603	6905202	0	True				
ANR	6905645	EqualityExpression	* cachep == 0		6905202	0		==			
ANR	6905646	UnaryOperationExpression	* cachep		6905202	0					
ANR	6905647	UnaryOperator	*		6905202	0					
ANR	6905648	Identifier	cachep		6905202	1					
ANR	6905649	PrimaryExpression	0		6905202	1					
ANR	6905650	ExpressionStatement	"fill_inverse_cmap ( cinfo , cur0 >> C0_SHIFT , cur1 >> C1_SHIFT , cur2 >> C2_SHIFT )"	1032:1:38607:38677	6905202	1	True				
ANR	6905651	CallExpression	"fill_inverse_cmap ( cinfo , cur0 >> C0_SHIFT , cur1 >> C1_SHIFT , cur2 >> C2_SHIFT )"		6905202	0					
ANR	6905652	Callee	fill_inverse_cmap		6905202	0					
ANR	6905653	Identifier	fill_inverse_cmap		6905202	0					
ANR	6905654	ArgumentList	cinfo		6905202	1					
ANR	6905655	Argument	cinfo		6905202	0					
ANR	6905656	Identifier	cinfo		6905202	0					
ANR	6905657	Argument	cur0 >> C0_SHIFT		6905202	1					
ANR	6905658	ShiftExpression	cur0 >> C0_SHIFT		6905202	0		>>			
ANR	6905659	Identifier	cur0		6905202	0					
ANR	6905660	Identifier	C0_SHIFT		6905202	1					
ANR	6905661	Argument	cur1 >> C1_SHIFT		6905202	2					
ANR	6905662	ShiftExpression	cur1 >> C1_SHIFT		6905202	0		>>			
ANR	6905663	Identifier	cur1		6905202	0					
ANR	6905664	Identifier	C1_SHIFT		6905202	1					
ANR	6905665	Argument	cur2 >> C2_SHIFT		6905202	3					
ANR	6905666	ShiftExpression	cur2 >> C2_SHIFT		6905202	0		>>			
ANR	6905667	Identifier	cur2		6905202	0					
ANR	6905668	Identifier	C2_SHIFT		6905202	1					
ANR	6905669	CompoundStatement		82:17:3683:3708	6905202	14					
ANR	6905670	Statement	register	1034:8:38741:38748	6905202	0	True				
ANR	6905671	IdentifierDeclStatement	int pixcode = * cachep - 1 ;	1034:17:38750:38775	6905202	1	True				
ANR	6905672	IdentifierDecl	pixcode = * cachep - 1		6905202	0					
ANR	6905673	IdentifierDeclType	int		6905202	0					
ANR	6905674	Identifier	pixcode		6905202	1					
ANR	6905675	AssignmentExpression	pixcode = * cachep - 1		6905202	2		=			
ANR	6905676	Identifier	pixcode		6905202	0					
ANR	6905677	AdditiveExpression	* cachep - 1		6905202	1		-			
ANR	6905678	UnaryOperationExpression	* cachep		6905202	0					
ANR	6905679	UnaryOperator	*		6905202	0					
ANR	6905680	Identifier	cachep		6905202	1					
ANR	6905681	PrimaryExpression	1		6905202	1					
ANR	6905682	ExpressionStatement	* outptr = ( JSAMPLE ) pixcode	1035:1:38778:38805	6905202	2	True				
ANR	6905683	AssignmentExpression	* outptr = ( JSAMPLE ) pixcode		6905202	0		=			
ANR	6905684	UnaryOperationExpression	* outptr		6905202	0					
ANR	6905685	UnaryOperator	*		6905202	0					
ANR	6905686	Identifier	outptr		6905202	1					
ANR	6905687	CastExpression	( JSAMPLE ) pixcode		6905202	1					
ANR	6905688	CastTarget	JSAMPLE		6905202	0					
ANR	6905689	Identifier	pixcode		6905202	1					
ANR	6905690	ExpressionStatement	cur0 -= GETJSAMPLE ( colormap0 [ pixcode ] )	1037:1:38859:38897	6905202	3	True				
ANR	6905691	AssignmentExpression	cur0 -= GETJSAMPLE ( colormap0 [ pixcode ] )		6905202	0		-=			
ANR	6905692	Identifier	cur0		6905202	0					
ANR	6905693	CallExpression	GETJSAMPLE ( colormap0 [ pixcode ] )		6905202	1					
ANR	6905694	Callee	GETJSAMPLE		6905202	0					
ANR	6905695	Identifier	GETJSAMPLE		6905202	0					
ANR	6905696	ArgumentList	colormap0 [ pixcode ]		6905202	1					
ANR	6905697	Argument	colormap0 [ pixcode ]		6905202	0					
ANR	6905698	ArrayIndexing	colormap0 [ pixcode ]		6905202	0					
ANR	6905699	Identifier	colormap0		6905202	0					
ANR	6905700	Identifier	pixcode		6905202	1					
ANR	6905701	ExpressionStatement	cur1 -= GETJSAMPLE ( colormap1 [ pixcode ] )	1038:1:38900:38938	6905202	4	True				
ANR	6905702	AssignmentExpression	cur1 -= GETJSAMPLE ( colormap1 [ pixcode ] )		6905202	0		-=			
ANR	6905703	Identifier	cur1		6905202	0					
ANR	6905704	CallExpression	GETJSAMPLE ( colormap1 [ pixcode ] )		6905202	1					
ANR	6905705	Callee	GETJSAMPLE		6905202	0					
ANR	6905706	Identifier	GETJSAMPLE		6905202	0					
ANR	6905707	ArgumentList	colormap1 [ pixcode ]		6905202	1					
ANR	6905708	Argument	colormap1 [ pixcode ]		6905202	0					
ANR	6905709	ArrayIndexing	colormap1 [ pixcode ]		6905202	0					
ANR	6905710	Identifier	colormap1		6905202	0					
ANR	6905711	Identifier	pixcode		6905202	1					
ANR	6905712	ExpressionStatement	cur2 -= GETJSAMPLE ( colormap2 [ pixcode ] )	1039:1:38941:38979	6905202	5	True				
ANR	6905713	AssignmentExpression	cur2 -= GETJSAMPLE ( colormap2 [ pixcode ] )		6905202	0		-=			
ANR	6905714	Identifier	cur2		6905202	0					
ANR	6905715	CallExpression	GETJSAMPLE ( colormap2 [ pixcode ] )		6905202	1					
ANR	6905716	Callee	GETJSAMPLE		6905202	0					
ANR	6905717	Identifier	GETJSAMPLE		6905202	0					
ANR	6905718	ArgumentList	colormap2 [ pixcode ]		6905202	1					
ANR	6905719	Argument	colormap2 [ pixcode ]		6905202	0					
ANR	6905720	ArrayIndexing	colormap2 [ pixcode ]		6905202	0					
ANR	6905721	Identifier	colormap2		6905202	0					
ANR	6905722	Identifier	pixcode		6905202	1					
ANR	6905723	CompoundStatement		93:17:4138:4164	6905202	15					
ANR	6905724	Statement	register	1045:8:39196:39203	6905202	0	True				
ANR	6905725	IdentifierDeclStatement	"LOCFSERROR bnexterr , delta ;"	1045:17:39205:39231	6905202	1	True				
ANR	6905726	IdentifierDecl	bnexterr		6905202	0					
ANR	6905727	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905728	Identifier	bnexterr		6905202	1					
ANR	6905729	IdentifierDecl	delta		6905202	1					
ANR	6905730	IdentifierDeclType	LOCFSERROR		6905202	0					
ANR	6905731	Identifier	delta		6905202	1					
ANR	6905732	ExpressionStatement	bnexterr = cur0	1047:1:39235:39250	6905202	2	True				
ANR	6905733	AssignmentExpression	bnexterr = cur0		6905202	0		=			
ANR	6905734	Identifier	bnexterr		6905202	0					
ANR	6905735	Identifier	cur0		6905202	1					
ANR	6905736	ExpressionStatement	delta = cur0 * 2	1048:1:39279:39295	6905202	3	True				
ANR	6905737	AssignmentExpression	delta = cur0 * 2		6905202	0		=			
ANR	6905738	Identifier	delta		6905202	0					
ANR	6905739	MultiplicativeExpression	cur0 * 2		6905202	1		*			
ANR	6905740	Identifier	cur0		6905202	0					
ANR	6905741	PrimaryExpression	2		6905202	1					
ANR	6905742	ExpressionStatement	cur0 += delta	1049:1:39298:39311	6905202	4	True				
ANR	6905743	AssignmentExpression	cur0 += delta		6905202	0		+=			
ANR	6905744	Identifier	cur0		6905202	0					
ANR	6905745	Identifier	delta		6905202	1					
ANR	6905746	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) ( bpreverr0 + cur0 )	1050:1:39336:39378	6905202	5	True				
ANR	6905747	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) ( bpreverr0 + cur0 )		6905202	0		=			
ANR	6905748	ArrayIndexing	errorptr [ 0 ]		6905202	0					
ANR	6905749	Identifier	errorptr		6905202	0					
ANR	6905750	PrimaryExpression	0		6905202	1					
ANR	6905751	CastExpression	( FSERROR ) ( bpreverr0 + cur0 )		6905202	1					
ANR	6905752	CastTarget	FSERROR		6905202	0					
ANR	6905753	AdditiveExpression	bpreverr0 + cur0		6905202	1		+			
ANR	6905754	Identifier	bpreverr0		6905202	0					
ANR	6905755	Identifier	cur0		6905202	1					
ANR	6905756	ExpressionStatement	cur0 += delta	1051:1:39381:39394	6905202	6	True				
ANR	6905757	AssignmentExpression	cur0 += delta		6905202	0		+=			
ANR	6905758	Identifier	cur0		6905202	0					
ANR	6905759	Identifier	delta		6905202	1					
ANR	6905760	ExpressionStatement	bpreverr0 = belowerr0 + cur0	1052:1:39419:39447	6905202	7	True				
ANR	6905761	AssignmentExpression	bpreverr0 = belowerr0 + cur0		6905202	0		=			
ANR	6905762	Identifier	bpreverr0		6905202	0					
ANR	6905763	AdditiveExpression	belowerr0 + cur0		6905202	1		+			
ANR	6905764	Identifier	belowerr0		6905202	0					
ANR	6905765	Identifier	cur0		6905202	1					
ANR	6905766	ExpressionStatement	belowerr0 = bnexterr	1053:1:39450:39470	6905202	8	True				
ANR	6905767	AssignmentExpression	belowerr0 = bnexterr		6905202	0		=			
ANR	6905768	Identifier	belowerr0		6905202	0					
ANR	6905769	Identifier	bnexterr		6905202	1					
ANR	6905770	ExpressionStatement	cur0 += delta	1054:1:39473:39486	6905202	9	True				
ANR	6905771	AssignmentExpression	cur0 += delta		6905202	0		+=			
ANR	6905772	Identifier	cur0		6905202	0					
ANR	6905773	Identifier	delta		6905202	1					
ANR	6905774	ExpressionStatement	bnexterr = cur1	1055:1:39511:39526	6905202	10	True				
ANR	6905775	AssignmentExpression	bnexterr = cur1		6905202	0		=			
ANR	6905776	Identifier	bnexterr		6905202	0					
ANR	6905777	Identifier	cur1		6905202	1					
ANR	6905778	ExpressionStatement	delta = cur1 * 2	1056:1:39555:39571	6905202	11	True				
ANR	6905779	AssignmentExpression	delta = cur1 * 2		6905202	0		=			
ANR	6905780	Identifier	delta		6905202	0					
ANR	6905781	MultiplicativeExpression	cur1 * 2		6905202	1		*			
ANR	6905782	Identifier	cur1		6905202	0					
ANR	6905783	PrimaryExpression	2		6905202	1					
ANR	6905784	ExpressionStatement	cur1 += delta	1057:1:39574:39587	6905202	12	True				
ANR	6905785	AssignmentExpression	cur1 += delta		6905202	0		+=			
ANR	6905786	Identifier	cur1		6905202	0					
ANR	6905787	Identifier	delta		6905202	1					
ANR	6905788	ExpressionStatement	errorptr [ 1 ] = ( FSERROR ) ( bpreverr1 + cur1 )	1058:1:39612:39654	6905202	13	True				
ANR	6905789	AssignmentExpression	errorptr [ 1 ] = ( FSERROR ) ( bpreverr1 + cur1 )		6905202	0		=			
ANR	6905790	ArrayIndexing	errorptr [ 1 ]		6905202	0					
ANR	6905791	Identifier	errorptr		6905202	0					
ANR	6905792	PrimaryExpression	1		6905202	1					
ANR	6905793	CastExpression	( FSERROR ) ( bpreverr1 + cur1 )		6905202	1					
ANR	6905794	CastTarget	FSERROR		6905202	0					
ANR	6905795	AdditiveExpression	bpreverr1 + cur1		6905202	1		+			
ANR	6905796	Identifier	bpreverr1		6905202	0					
ANR	6905797	Identifier	cur1		6905202	1					
ANR	6905798	ExpressionStatement	cur1 += delta	1059:1:39657:39670	6905202	14	True				
ANR	6905799	AssignmentExpression	cur1 += delta		6905202	0		+=			
ANR	6905800	Identifier	cur1		6905202	0					
ANR	6905801	Identifier	delta		6905202	1					
ANR	6905802	ExpressionStatement	bpreverr1 = belowerr1 + cur1	1060:1:39695:39723	6905202	15	True				
ANR	6905803	AssignmentExpression	bpreverr1 = belowerr1 + cur1		6905202	0		=			
ANR	6905804	Identifier	bpreverr1		6905202	0					
ANR	6905805	AdditiveExpression	belowerr1 + cur1		6905202	1		+			
ANR	6905806	Identifier	belowerr1		6905202	0					
ANR	6905807	Identifier	cur1		6905202	1					
ANR	6905808	ExpressionStatement	belowerr1 = bnexterr	1061:1:39726:39746	6905202	16	True				
ANR	6905809	AssignmentExpression	belowerr1 = bnexterr		6905202	0		=			
ANR	6905810	Identifier	belowerr1		6905202	0					
ANR	6905811	Identifier	bnexterr		6905202	1					
ANR	6905812	ExpressionStatement	cur1 += delta	1062:1:39749:39762	6905202	17	True				
ANR	6905813	AssignmentExpression	cur1 += delta		6905202	0		+=			
ANR	6905814	Identifier	cur1		6905202	0					
ANR	6905815	Identifier	delta		6905202	1					
ANR	6905816	ExpressionStatement	bnexterr = cur2	1063:1:39787:39802	6905202	18	True				
ANR	6905817	AssignmentExpression	bnexterr = cur2		6905202	0		=			
ANR	6905818	Identifier	bnexterr		6905202	0					
ANR	6905819	Identifier	cur2		6905202	1					
ANR	6905820	ExpressionStatement	delta = cur2 * 2	1064:1:39831:39847	6905202	19	True				
ANR	6905821	AssignmentExpression	delta = cur2 * 2		6905202	0		=			
ANR	6905822	Identifier	delta		6905202	0					
ANR	6905823	MultiplicativeExpression	cur2 * 2		6905202	1		*			
ANR	6905824	Identifier	cur2		6905202	0					
ANR	6905825	PrimaryExpression	2		6905202	1					
ANR	6905826	ExpressionStatement	cur2 += delta	1065:1:39850:39863	6905202	20	True				
ANR	6905827	AssignmentExpression	cur2 += delta		6905202	0		+=			
ANR	6905828	Identifier	cur2		6905202	0					
ANR	6905829	Identifier	delta		6905202	1					
ANR	6905830	ExpressionStatement	errorptr [ 2 ] = ( FSERROR ) ( bpreverr2 + cur2 )	1066:1:39888:39930	6905202	21	True				
ANR	6905831	AssignmentExpression	errorptr [ 2 ] = ( FSERROR ) ( bpreverr2 + cur2 )		6905202	0		=			
ANR	6905832	ArrayIndexing	errorptr [ 2 ]		6905202	0					
ANR	6905833	Identifier	errorptr		6905202	0					
ANR	6905834	PrimaryExpression	2		6905202	1					
ANR	6905835	CastExpression	( FSERROR ) ( bpreverr2 + cur2 )		6905202	1					
ANR	6905836	CastTarget	FSERROR		6905202	0					
ANR	6905837	AdditiveExpression	bpreverr2 + cur2		6905202	1		+			
ANR	6905838	Identifier	bpreverr2		6905202	0					
ANR	6905839	Identifier	cur2		6905202	1					
ANR	6905840	ExpressionStatement	cur2 += delta	1067:1:39933:39946	6905202	22	True				
ANR	6905841	AssignmentExpression	cur2 += delta		6905202	0		+=			
ANR	6905842	Identifier	cur2		6905202	0					
ANR	6905843	Identifier	delta		6905202	1					
ANR	6905844	ExpressionStatement	bpreverr2 = belowerr2 + cur2	1068:1:39971:39999	6905202	23	True				
ANR	6905845	AssignmentExpression	bpreverr2 = belowerr2 + cur2		6905202	0		=			
ANR	6905846	Identifier	bpreverr2		6905202	0					
ANR	6905847	AdditiveExpression	belowerr2 + cur2		6905202	1		+			
ANR	6905848	Identifier	belowerr2		6905202	0					
ANR	6905849	Identifier	cur2		6905202	1					
ANR	6905850	ExpressionStatement	belowerr2 = bnexterr	1069:1:40002:40022	6905202	24	True				
ANR	6905851	AssignmentExpression	belowerr2 = bnexterr		6905202	0		=			
ANR	6905852	Identifier	belowerr2		6905202	0					
ANR	6905853	Identifier	bnexterr		6905202	1					
ANR	6905854	ExpressionStatement	cur2 += delta	1070:1:40025:40038	6905202	25	True				
ANR	6905855	AssignmentExpression	cur2 += delta		6905202	0		+=			
ANR	6905856	Identifier	cur2		6905202	0					
ANR	6905857	Identifier	delta		6905202	1					
ANR	6905858	ExpressionStatement	inptr += dir3	1076:6:40315:40328	6905202	16	True				
ANR	6905859	AssignmentExpression	inptr += dir3		6905202	0		+=			
ANR	6905860	Identifier	inptr		6905202	0					
ANR	6905861	Identifier	dir3		6905202	1					
ANR	6905862	ExpressionStatement	outptr += dir	1077:6:40381:40394	6905202	17	True				
ANR	6905863	AssignmentExpression	outptr += dir		6905202	0		+=			
ANR	6905864	Identifier	outptr		6905202	0					
ANR	6905865	Identifier	dir		6905202	1					
ANR	6905866	ExpressionStatement	errorptr += dir3	1078:6:40402:40418	6905202	18	True				
ANR	6905867	AssignmentExpression	errorptr += dir3		6905202	0		+=			
ANR	6905868	Identifier	errorptr		6905202	0					
ANR	6905869	Identifier	dir3		6905202	1					
ANR	6905870	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) bpreverr0	1084:4:40695:40728	6905202	7	True				
ANR	6905871	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) bpreverr0		6905202	0		=			
ANR	6905872	ArrayIndexing	errorptr [ 0 ]		6905202	0					
ANR	6905873	Identifier	errorptr		6905202	0					
ANR	6905874	PrimaryExpression	0		6905202	1					
ANR	6905875	CastExpression	( FSERROR ) bpreverr0		6905202	1					
ANR	6905876	CastTarget	FSERROR		6905202	0					
ANR	6905877	Identifier	bpreverr0		6905202	1					
ANR	6905878	ExpressionStatement	errorptr [ 1 ] = ( FSERROR ) bpreverr1	1085:4:40768:40801	6905202	8	True				
ANR	6905879	AssignmentExpression	errorptr [ 1 ] = ( FSERROR ) bpreverr1		6905202	0		=			
ANR	6905880	ArrayIndexing	errorptr [ 1 ]		6905202	0					
ANR	6905881	Identifier	errorptr		6905202	0					
ANR	6905882	PrimaryExpression	1		6905202	1					
ANR	6905883	CastExpression	( FSERROR ) bpreverr1		6905202	1					
ANR	6905884	CastTarget	FSERROR		6905202	0					
ANR	6905885	Identifier	bpreverr1		6905202	1					
ANR	6905886	ExpressionStatement	errorptr [ 2 ] = ( FSERROR ) bpreverr2	1086:4:40807:40840	6905202	9	True				
ANR	6905887	AssignmentExpression	errorptr [ 2 ] = ( FSERROR ) bpreverr2		6905202	0		=			
ANR	6905888	ArrayIndexing	errorptr [ 2 ]		6905202	0					
ANR	6905889	Identifier	errorptr		6905202	0					
ANR	6905890	PrimaryExpression	2		6905202	1					
ANR	6905891	CastExpression	( FSERROR ) bpreverr2		6905202	1					
ANR	6905892	CastTarget	FSERROR		6905202	0					
ANR	6905893	Identifier	bpreverr2		6905202	1					
ANR	6905894	Identifier	pass2_fs_dither		6905202	1					
ANR	6905895	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6905202	2					
ANR	6905896	Parameter	j_decompress_ptr cinfo	950:17:34926:34947	6905202	0	True				
ANR	6905897	ParameterType	j_decompress_ptr		6905202	0					
ANR	6905898	Identifier	cinfo		6905202	1					
ANR	6905899	Parameter	JSAMPARRAY input_buf	951:3:34953:34972	6905202	1	True				
ANR	6905900	ParameterType	JSAMPARRAY		6905202	0					
ANR	6905901	Identifier	input_buf		6905202	1					
ANR	6905902	Parameter	JSAMPARRAY output_buf	951:25:34975:34995	6905202	2	True				
ANR	6905903	ParameterType	JSAMPARRAY		6905202	0					
ANR	6905904	Identifier	output_buf		6905202	1					
ANR	6905905	Parameter	int num_rows	951:48:34998:35009	6905202	3	True				
ANR	6905906	ParameterType	int		6905202	0					
ANR	6905907	Identifier	num_rows		6905202	1					
ANR	6905908	CFGEntryNode	ENTRY		6905202		True				
ANR	6905909	CFGExitNode	EXIT		6905202		True				
ANR	6905910	Symbol	col		6905202						
ANR	6905911	Symbol	RIGHT_SHIFT		6905202						
ANR	6905912	Symbol	* row		6905202						
ANR	6905913	Symbol	* pixcode		6905202						
ANR	6905914	Symbol	delta		6905202						
ANR	6905915	Symbol	* * cur0		6905202						
ANR	6905916	Symbol	* cquantize		6905202						
ANR	6905917	Symbol	dir		6905202						
ANR	6905918	Symbol	* C1_SHIFT		6905202						
ANR	6905919	Symbol	cquantize -> histogram		6905202						
ANR	6905920	Symbol	* colormap0		6905202						
ANR	6905921	Symbol	* colormap2		6905202						
ANR	6905922	Symbol	* colormap1		6905202						
ANR	6905923	Symbol	error_limit		6905202						
ANR	6905924	Symbol	cquantize -> fserrors		6905202						
ANR	6905925	Symbol	num_rows		6905202						
ANR	6905926	Symbol	C0_SHIFT		6905202						
ANR	6905927	Symbol	* cinfo		6905202						
ANR	6905928	Symbol	output_buf		6905202						
ANR	6905929	Symbol	* C0_SHIFT		6905202						
ANR	6905930	Symbol	colormap2		6905202						
ANR	6905931	Symbol	colormap1		6905202						
ANR	6905932	Symbol	cinfo -> colormap		6905202						
ANR	6905933	Symbol	TRUE		6905202						
ANR	6905934	Symbol	colormap0		6905202						
ANR	6905935	Symbol	histogram		6905202						
ANR	6905936	Symbol	cinfo		6905202						
ANR	6905937	Symbol	* cur2		6905202						
ANR	6905938	Symbol	* range_limit		6905202						
ANR	6905939	Symbol	* output_buf		6905202						
ANR	6905940	Symbol	* cur1		6905202						
ANR	6905941	Symbol	* cur0		6905202						
ANR	6905942	Symbol	bnexterr		6905202						
ANR	6905943	Symbol	pixcode		6905202						
ANR	6905944	Symbol	input_buf		6905202						
ANR	6905945	Symbol	* * cinfo		6905202						
ANR	6905946	Symbol	cinfo -> sample_range_limit		6905202						
ANR	6905947	Symbol	* * histogram		6905202						
ANR	6905948	Symbol	bpreverr0		6905202						
ANR	6905949	Symbol	C2_SHIFT		6905202						
ANR	6905950	Symbol	bpreverr1		6905202						
ANR	6905951	Symbol	bpreverr2		6905202						
ANR	6905952	Symbol	cquantize -> error_limiter		6905202						
ANR	6905953	Symbol	* error_limit		6905202						
ANR	6905954	Symbol	* cachep		6905202						
ANR	6905955	Symbol	cquantize		6905202						
ANR	6905956	Symbol	belowerr0		6905202						
ANR	6905957	Symbol	* cinfo -> colormap		6905202						
ANR	6905958	Symbol	belowerr1		6905202						
ANR	6905959	Symbol	cinfo -> output_width		6905202						
ANR	6905960	Symbol	* errorptr		6905202						
ANR	6905961	Symbol	belowerr2		6905202						
ANR	6905962	Symbol	errorptr		6905202						
ANR	6905963	Symbol	inptr		6905202						
ANR	6905964	Symbol	cachep		6905202						
ANR	6905965	Symbol	row		6905202						
ANR	6905966	Symbol	cur2		6905202						
ANR	6905967	Symbol	cur0		6905202						
ANR	6905968	Symbol	cur1		6905202						
ANR	6905969	Symbol	* outptr		6905202						
ANR	6905970	Symbol	* dir3		6905202						
ANR	6905971	Symbol	* * C0_SHIFT		6905202						
ANR	6905972	Symbol	GETJSAMPLE		6905202						
ANR	6905973	Symbol	dir3		6905202						
ANR	6905974	Symbol	* histogram		6905202						
ANR	6905975	Symbol	* inptr		6905202						
ANR	6905976	Symbol	outptr		6905202						
ANR	6905977	Symbol	cinfo -> cquantize		6905202						
ANR	6905978	Symbol	width		6905202						
ANR	6905979	Symbol	range_limit		6905202						
ANR	6905980	Symbol	cquantize -> on_odd_row		6905202						
ANR	6905981	Symbol	FALSE		6905202						
ANR	6905982	Symbol	* input_buf		6905202						
ANR	6905983	Symbol	C1_SHIFT		6905202						
ANR	6905984	Function	init_error_limit	1109:0:41864:42780							
ANR	6905985	FunctionDef	init_error_limit (j_decompress_ptr cinfo)		6905984	0					
ANR	6905986	CompoundStatement		1111:0:41957:42780	6905984	0					
ANR	6905987	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1112:2:41961:42025	6905984	0	True				
ANR	6905988	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6905984	0					
ANR	6905989	IdentifierDeclType	my_cquantize_ptr		6905984	0					
ANR	6905990	Identifier	cquantize		6905984	1					
ANR	6905991	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6905984	2		=			
ANR	6905992	Identifier	cquantize		6905984	0					
ANR	6905993	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6905984	1					
ANR	6905994	CastTarget	my_cquantize_ptr		6905984	0					
ANR	6905995	PtrMemberAccess	cinfo -> cquantize		6905984	1					
ANR	6905996	Identifier	cinfo		6905984	0					
ANR	6905997	Identifier	cquantize		6905984	1					
ANR	6905998	IdentifierDeclStatement	int * table ;	1113:2:42029:42040	6905984	1	True				
ANR	6905999	IdentifierDecl	* table		6905984	0					
ANR	6906000	IdentifierDeclType	int *		6905984	0					
ANR	6906001	Identifier	table		6905984	1					
ANR	6906002	IdentifierDeclStatement	"int in , out ;"	1114:2:42044:42055	6905984	2	True				
ANR	6906003	IdentifierDecl	in		6905984	0					
ANR	6906004	IdentifierDeclType	int		6905984	0					
ANR	6906005	Identifier	in		6905984	1					
ANR	6906006	IdentifierDecl	out		6905984	1					
ANR	6906007	IdentifierDeclType	int		6905984	0					
ANR	6906008	Identifier	out		6905984	1					
ANR	6906009	ExpressionStatement	"table = ( int * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"	1116:2:42060:42174	6905984	3	True				
ANR	6906010	AssignmentExpression	"table = ( int * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"		6905984	0		=			
ANR	6906011	Identifier	table		6905984	0					
ANR	6906012	CastExpression	"( int * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"		6905984	1					
ANR	6906013	CastTarget	int *		6905984	0					
ANR	6906014	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"		6905984	1					
ANR	6906015	Callee	* cinfo -> mem -> alloc_small		6905984	0					
ANR	6906016	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6905984	0					
ANR	6906017	UnaryOperator	*		6905984	0					
ANR	6906018	PtrMemberAccess	cinfo -> mem -> alloc_small		6905984	1					
ANR	6906019	PtrMemberAccess	cinfo -> mem		6905984	0					
ANR	6906020	Identifier	cinfo		6905984	0					
ANR	6906021	Identifier	mem		6905984	1					
ANR	6906022	Identifier	alloc_small		6905984	1					
ANR	6906023	ArgumentList	( j_common_ptr ) cinfo		6905984	1					
ANR	6906024	Argument	( j_common_ptr ) cinfo		6905984	0					
ANR	6906025	CastExpression	( j_common_ptr ) cinfo		6905984	0					
ANR	6906026	CastTarget	j_common_ptr		6905984	0					
ANR	6906027	Identifier	cinfo		6905984	1					
ANR	6906028	Argument	JPOOL_IMAGE		6905984	1					
ANR	6906029	Identifier	JPOOL_IMAGE		6905984	0					
ANR	6906030	Argument	( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int )		6905984	2					
ANR	6906031	MultiplicativeExpression	( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int )		6905984	0		*			
ANR	6906032	AdditiveExpression	MAXJSAMPLE * 2 + 1		6905984	0		+			
ANR	6906033	MultiplicativeExpression	MAXJSAMPLE * 2		6905984	0		*			
ANR	6906034	Identifier	MAXJSAMPLE		6905984	0					
ANR	6906035	PrimaryExpression	2		6905984	1					
ANR	6906036	PrimaryExpression	1		6905984	1					
ANR	6906037	CallExpression	SIZEOF ( int )		6905984	1					
ANR	6906038	Callee	SIZEOF		6905984	0					
ANR	6906039	Identifier	SIZEOF		6905984	0					
ANR	6906040	ArgumentList	int		6905984	1					
ANR	6906041	Argument	int		6905984	0					
ANR	6906042	Identifier	int		6905984	0					
ANR	6906043	ExpressionStatement	table += MAXJSAMPLE	1118:2:42178:42197	6905984	4	True				
ANR	6906044	AssignmentExpression	table += MAXJSAMPLE		6905984	0		+=			
ANR	6906045	Identifier	table		6905984	0					
ANR	6906046	Identifier	MAXJSAMPLE		6905984	1					
ANR	6906047	ExpressionStatement	cquantize -> error_limiter = table	1119:2:42248:42280	6905984	5	True				
ANR	6906048	AssignmentExpression	cquantize -> error_limiter = table		6905984	0		=			
ANR	6906049	PtrMemberAccess	cquantize -> error_limiter		6905984	0					
ANR	6906050	Identifier	cquantize		6905984	0					
ANR	6906051	Identifier	error_limiter		6905984	1					
ANR	6906052	Identifier	table		6905984	1					
ANR	6906053	Statement	define	1121:1:42284:42289	6905984	6	True				
ANR	6906054	Statement	STEPSIZE	1121:8:42291:42298	6905984	7	True				
ANR	6906055	Statement	(	1121:17:42300:42300	6905984	8	True				
ANR	6906056	Statement	(	1121:18:42301:42301	6905984	9	True				
ANR	6906057	Statement	MAXJSAMPLE	1121:19:42302:42311	6905984	10	True				
ANR	6906058	Statement	+	1121:29:42312:42312	6905984	11	True				
ANR	6906059	Statement	1	1121:30:42313:42313	6905984	12	True				
ANR	6906060	Statement	)	1121:31:42314:42314	6905984	13	True				
ANR	6906061	Statement	/	1121:32:42315:42315	6905984	14	True				
ANR	6906062	Statement	16	1121:33:42316:42317	6905984	15	True				
ANR	6906063	Statement	)	1121:35:42318:42318	6905984	16	True				
ANR	6906064	ExpressionStatement	out = 0	1123:2:42368:42375	6905984	17	True				
ANR	6906065	AssignmentExpression	out = 0		6905984	0		=			
ANR	6906066	Identifier	out		6905984	0					
ANR	6906067	PrimaryExpression	0		6905984	1					
ANR	6906068	ForStatement	"for ( in = 0 ; in < STEPSIZE ; in ++ , out ++ )"		6905984	18					
ANR	6906069	ForInit	in = 0 ;	1124:7:42384:42390	6905984	0	True				
ANR	6906070	AssignmentExpression	in = 0		6905984	0		=			
ANR	6906071	Identifier	in		6905984	0					
ANR	6906072	PrimaryExpression	0		6905984	1					
ANR	6906073	Condition	in < STEPSIZE	1124:15:42392:42404	6905984	1	True				
ANR	6906074	RelationalExpression	in < STEPSIZE		6905984	0		<			
ANR	6906075	Identifier	in		6905984	0					
ANR	6906076	Identifier	STEPSIZE		6905984	1					
ANR	6906077	Expression	"in ++ , out ++"	1124:30:42407:42417	6905984	2	True				
ANR	6906078	PostIncDecOperationExpression	in ++		6905984	0					
ANR	6906079	Identifier	in		6905984	0					
ANR	6906080	IncDec	++		6905984	1					
ANR	6906081	PostIncDecOperationExpression	out ++		6905984	1					
ANR	6906082	Identifier	out		6905984	0					
ANR	6906083	IncDec	++		6905984	1					
ANR	6906084	CompoundStatement		14:43:462:462	6905984	3					
ANR	6906085	ExpressionStatement	table [ in ] = out	1125:4:42426:42441	6905984	0	True				
ANR	6906086	AssignmentExpression	table [ in ] = out		6905984	0		=			
ANR	6906087	ArrayIndexing	table [ in ]		6905984	0					
ANR	6906088	Identifier	table		6905984	0					
ANR	6906089	Identifier	in		6905984	1					
ANR	6906090	Identifier	out		6905984	1					
ANR	6906091	ExpressionStatement	table [ - in ] = - out	1125:21:42443:42460	6905984	1	True				
ANR	6906092	AssignmentExpression	table [ - in ] = - out		6905984	0		=			
ANR	6906093	ArrayIndexing	table [ - in ]		6905984	0					
ANR	6906094	Identifier	table		6905984	0					
ANR	6906095	UnaryOperationExpression	- in		6905984	1					
ANR	6906096	UnaryOperator	-		6905984	0					
ANR	6906097	Identifier	in		6905984	1					
ANR	6906098	UnaryOperationExpression	- out		6905984	1					
ANR	6906099	UnaryOperator	-		6905984	0					
ANR	6906100	Identifier	out		6905984	1					
ANR	6906101	ForStatement	"for ( ; in < STEPSIZE * 3 ; in ++ , out += ( in & 1 ) ? 0 : 1 )"		6905984	19					
ANR	6906102	Condition	in < STEPSIZE * 3	1128:9:42523:42537	6905984	0	True				
ANR	6906103	RelationalExpression	in < STEPSIZE * 3		6905984	0		<			
ANR	6906104	Identifier	in		6905984	0					
ANR	6906105	MultiplicativeExpression	STEPSIZE * 3		6905984	1		*			
ANR	6906106	Identifier	STEPSIZE		6905984	0					
ANR	6906107	PrimaryExpression	3		6905984	1					
ANR	6906108	Expression	"in ++ , out += ( in & 1 ) ? 0 : 1"	1128:26:42540:42566	6905984	1	True				
ANR	6906109	PostIncDecOperationExpression	in ++		6905984	0					
ANR	6906110	Identifier	in		6905984	0					
ANR	6906111	IncDec	++		6905984	1					
ANR	6906112	AssignmentExpression	out += ( in & 1 ) ? 0 : 1		6905984	1		+=			
ANR	6906113	Identifier	out		6905984	0					
ANR	6906114	ConditionalExpression	( in & 1 ) ? 0 : 1		6905984	1					
ANR	6906115	Condition	in & 1		6905984	0					
ANR	6906116	BitAndExpression	in & 1		6905984	0		&			
ANR	6906117	Identifier	in		6905984	0					
ANR	6906118	PrimaryExpression	1		6905984	1					
ANR	6906119	PrimaryExpression	0		6905984	1					
ANR	6906120	PrimaryExpression	1		6905984	2					
ANR	6906121	CompoundStatement		18:55:611:611	6905984	2					
ANR	6906122	ExpressionStatement	table [ in ] = out	1129:4:42575:42590	6905984	0	True				
ANR	6906123	AssignmentExpression	table [ in ] = out		6905984	0		=			
ANR	6906124	ArrayIndexing	table [ in ]		6905984	0					
ANR	6906125	Identifier	table		6905984	0					
ANR	6906126	Identifier	in		6905984	1					
ANR	6906127	Identifier	out		6905984	1					
ANR	6906128	ExpressionStatement	table [ - in ] = - out	1129:21:42592:42609	6905984	1	True				
ANR	6906129	AssignmentExpression	table [ - in ] = - out		6905984	0		=			
ANR	6906130	ArrayIndexing	table [ - in ]		6905984	0					
ANR	6906131	Identifier	table		6905984	0					
ANR	6906132	UnaryOperationExpression	- in		6905984	1					
ANR	6906133	UnaryOperator	-		6905984	0					
ANR	6906134	Identifier	in		6905984	1					
ANR	6906135	UnaryOperationExpression	- out		6905984	1					
ANR	6906136	UnaryOperator	-		6905984	0					
ANR	6906137	Identifier	out		6905984	1					
ANR	6906138	ForStatement	for ( ; in <= MAXJSAMPLE ; in ++ )		6905984	20					
ANR	6906139	Condition	in <= MAXJSAMPLE	1132:9:42694:42709	6905984	0	True				
ANR	6906140	RelationalExpression	in <= MAXJSAMPLE		6905984	0		<=			
ANR	6906141	Identifier	in		6905984	0					
ANR	6906142	Identifier	MAXJSAMPLE		6905984	1					
ANR	6906143	PostIncDecOperationExpression	in ++	1132:27:42712:42715	6905984	1	True				
ANR	6906144	Identifier	in		6905984	0					
ANR	6906145	IncDec	++		6905984	1					
ANR	6906146	CompoundStatement		22:33:760:760	6905984	2					
ANR	6906147	ExpressionStatement	table [ in ] = out	1133:4:42724:42739	6905984	0	True				
ANR	6906148	AssignmentExpression	table [ in ] = out		6905984	0		=			
ANR	6906149	ArrayIndexing	table [ in ]		6905984	0					
ANR	6906150	Identifier	table		6905984	0					
ANR	6906151	Identifier	in		6905984	1					
ANR	6906152	Identifier	out		6905984	1					
ANR	6906153	ExpressionStatement	table [ - in ] = - out	1133:21:42741:42758	6905984	1	True				
ANR	6906154	AssignmentExpression	table [ - in ] = - out		6905984	0		=			
ANR	6906155	ArrayIndexing	table [ - in ]		6905984	0					
ANR	6906156	Identifier	table		6905984	0					
ANR	6906157	UnaryOperationExpression	- in		6905984	1					
ANR	6906158	UnaryOperator	-		6905984	0					
ANR	6906159	Identifier	in		6905984	1					
ANR	6906160	UnaryOperationExpression	- out		6905984	1					
ANR	6906161	UnaryOperator	-		6905984	0					
ANR	6906162	Identifier	out		6905984	1					
ANR	6906163	Statement	undef	1135:1:42765:42769	6905984	21	True				
ANR	6906164	Statement	STEPSIZE	1135:7:42771:42778	6905984	22	True				
ANR	6906165	Identifier	init_error_limit		6905984	1					
ANR	6906166	ParameterList	j_decompress_ptr cinfo		6905984	2					
ANR	6906167	Parameter	j_decompress_ptr cinfo	1109:18:41882:41903	6905984	0	True				
ANR	6906168	ParameterType	j_decompress_ptr		6905984	0					
ANR	6906169	Identifier	cinfo		6905984	1					
ANR	6906170	CFGEntryNode	ENTRY		6905984		True				
ANR	6906171	CFGExitNode	EXIT		6905984		True				
ANR	6906172	Symbol	* * cinfo		6905984						
ANR	6906173	Symbol	* * cinfo -> mem		6905984						
ANR	6906174	Symbol	in		6905984						
ANR	6906175	Symbol	cinfo -> mem -> alloc_small		6905984						
ANR	6906176	Symbol	SIZEOF		6905984						
ANR	6906177	Symbol	* in		6905984						
ANR	6906178	Symbol	cquantize -> error_limiter		6905984						
ANR	6906179	Symbol	* table		6905984						
ANR	6906180	Symbol	JPOOL_IMAGE		6905984						
ANR	6906181	Symbol	cquantize		6905984						
ANR	6906182	Symbol	* cquantize		6905984						
ANR	6906183	Symbol	int		6905984						
ANR	6906184	Symbol	out		6905984						
ANR	6906185	Symbol	* cinfo -> mem		6905984						
ANR	6906186	Symbol	cinfo -> cquantize		6905984						
ANR	6906187	Symbol	STEPSIZE		6905984						
ANR	6906188	Symbol	cinfo		6905984						
ANR	6906189	Symbol	cinfo -> mem		6905984						
ANR	6906190	Symbol	MAXJSAMPLE		6905984						
ANR	6906191	Symbol	* * * cinfo		6905984						
ANR	6906192	Symbol	* cinfo -> mem -> alloc_small		6905984						
ANR	6906193	Symbol	* cinfo		6905984						
ANR	6906194	Symbol	table		6905984						
ANR	6906195	Function	finish_pass1	1144:0:42846:43200							
ANR	6906196	FunctionDef	finish_pass1 (j_decompress_ptr cinfo)		6906195	0					
ANR	6906197	CompoundStatement		1145:0:42884:43200	6906195	0					
ANR	6906198	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1146:2:42888:42952	6906195	0	True				
ANR	6906199	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6906195	0					
ANR	6906200	IdentifierDeclType	my_cquantize_ptr		6906195	0					
ANR	6906201	Identifier	cquantize		6906195	1					
ANR	6906202	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6906195	2		=			
ANR	6906203	Identifier	cquantize		6906195	0					
ANR	6906204	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6906195	1					
ANR	6906205	CastTarget	my_cquantize_ptr		6906195	0					
ANR	6906206	PtrMemberAccess	cinfo -> cquantize		6906195	1					
ANR	6906207	Identifier	cinfo		6906195	0					
ANR	6906208	Identifier	cquantize		6906195	1					
ANR	6906209	ExpressionStatement	cinfo -> colormap = cquantize -> sv_colormap	1149:2:43026:43066	6906195	1	True				
ANR	6906210	AssignmentExpression	cinfo -> colormap = cquantize -> sv_colormap		6906195	0		=			
ANR	6906211	PtrMemberAccess	cinfo -> colormap		6906195	0					
ANR	6906212	Identifier	cinfo		6906195	0					
ANR	6906213	Identifier	colormap		6906195	1					
ANR	6906214	PtrMemberAccess	cquantize -> sv_colormap		6906195	1					
ANR	6906215	Identifier	cquantize		6906195	0					
ANR	6906216	Identifier	sv_colormap		6906195	1					
ANR	6906217	ExpressionStatement	"select_colors ( cinfo , cquantize -> desired )"	1150:2:43070:43110	6906195	2	True				
ANR	6906218	CallExpression	"select_colors ( cinfo , cquantize -> desired )"		6906195	0					
ANR	6906219	Callee	select_colors		6906195	0					
ANR	6906220	Identifier	select_colors		6906195	0					
ANR	6906221	ArgumentList	cinfo		6906195	1					
ANR	6906222	Argument	cinfo		6906195	0					
ANR	6906223	Identifier	cinfo		6906195	0					
ANR	6906224	Argument	cquantize -> desired		6906195	1					
ANR	6906225	PtrMemberAccess	cquantize -> desired		6906195	0					
ANR	6906226	Identifier	cquantize		6906195	0					
ANR	6906227	Identifier	desired		6906195	1					
ANR	6906228	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1152:2:43168:43198	6906195	3	True				
ANR	6906229	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6906195	0		=			
ANR	6906230	PtrMemberAccess	cquantize -> needs_zeroed		6906195	0					
ANR	6906231	Identifier	cquantize		6906195	0					
ANR	6906232	Identifier	needs_zeroed		6906195	1					
ANR	6906233	Identifier	TRUE		6906195	1					
ANR	6906234	Identifier	finish_pass1		6906195	1					
ANR	6906235	ParameterList	j_decompress_ptr cinfo		6906195	2					
ANR	6906236	Parameter	j_decompress_ptr cinfo	1144:14:42860:42881	6906195	0	True				
ANR	6906237	ParameterType	j_decompress_ptr		6906195	0					
ANR	6906238	Identifier	cinfo		6906195	1					
ANR	6906239	CFGEntryNode	ENTRY		6906195		True				
ANR	6906240	CFGExitNode	EXIT		6906195		True				
ANR	6906241	Symbol	cinfo -> cquantize		6906195						
ANR	6906242	Symbol	cquantize -> sv_colormap		6906195						
ANR	6906243	Symbol	cquantize -> desired		6906195						
ANR	6906244	Symbol	cinfo		6906195						
ANR	6906245	Symbol	cinfo -> colormap		6906195						
ANR	6906246	Symbol	cquantize -> needs_zeroed		6906195						
ANR	6906247	Symbol	TRUE		6906195						
ANR	6906248	Symbol	cquantize		6906195						
ANR	6906249	Symbol	* cquantize		6906195						
ANR	6906250	Symbol	* cinfo		6906195						
ANR	6906251	Function	finish_pass2	1157:0:43220:43276							
ANR	6906252	FunctionDef	finish_pass2 (j_decompress_ptr cinfo)		6906251	0					
ANR	6906253	CompoundStatement		1158:0:43258:43276	6906251	0					
ANR	6906254	Identifier	finish_pass2		6906251	1					
ANR	6906255	ParameterList	j_decompress_ptr cinfo		6906251	2					
ANR	6906256	Parameter	j_decompress_ptr cinfo	1157:14:43234:43255	6906251	0	True				
ANR	6906257	ParameterType	j_decompress_ptr		6906251	0					
ANR	6906258	Identifier	cinfo		6906251	1					
ANR	6906259	CFGEntryNode	ENTRY		6906251		True				
ANR	6906260	CFGExitNode	EXIT		6906251		True				
ANR	6906261	Symbol	cinfo		6906251						
ANR	6906262	Function	start_pass_2_quant	1168:0:43344:45369							
ANR	6906263	FunctionDef	"start_pass_2_quant (j_decompress_ptr cinfo , boolean is_pre_scan)"		6906262	0					
ANR	6906264	CompoundStatement		1169:0:43409:45369	6906262	0					
ANR	6906265	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1170:2:43413:43477	6906262	0	True				
ANR	6906266	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6906262	0					
ANR	6906267	IdentifierDeclType	my_cquantize_ptr		6906262	0					
ANR	6906268	Identifier	cquantize		6906262	1					
ANR	6906269	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6906262	2		=			
ANR	6906270	Identifier	cquantize		6906262	0					
ANR	6906271	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6906262	1					
ANR	6906272	CastTarget	my_cquantize_ptr		6906262	0					
ANR	6906273	PtrMemberAccess	cinfo -> cquantize		6906262	1					
ANR	6906274	Identifier	cinfo		6906262	0					
ANR	6906275	Identifier	cquantize		6906262	1					
ANR	6906276	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	1171:2:43481:43520	6906262	1	True				
ANR	6906277	IdentifierDecl	histogram = cquantize -> histogram		6906262	0					
ANR	6906278	IdentifierDeclType	hist3d		6906262	0					
ANR	6906279	Identifier	histogram		6906262	1					
ANR	6906280	AssignmentExpression	histogram = cquantize -> histogram		6906262	2		=			
ANR	6906281	Identifier	histogram		6906262	0					
ANR	6906282	PtrMemberAccess	cquantize -> histogram		6906262	1					
ANR	6906283	Identifier	cquantize		6906262	0					
ANR	6906284	Identifier	histogram		6906262	1					
ANR	6906285	IdentifierDeclStatement	int i ;	1172:2:43524:43529	6906262	2	True				
ANR	6906286	IdentifierDecl	i		6906262	0					
ANR	6906287	IdentifierDeclType	int		6906262	0					
ANR	6906288	Identifier	i		6906262	1					
ANR	6906289	IfStatement	if ( cinfo -> dither_mode != JDITHER_NONE )		6906262	3					
ANR	6906290	Condition	cinfo -> dither_mode != JDITHER_NONE	1176:6:43650:43683	6906262	0	True				
ANR	6906291	EqualityExpression	cinfo -> dither_mode != JDITHER_NONE		6906262	0		!=			
ANR	6906292	PtrMemberAccess	cinfo -> dither_mode		6906262	0					
ANR	6906293	Identifier	cinfo		6906262	0					
ANR	6906294	Identifier	dither_mode		6906262	1					
ANR	6906295	Identifier	JDITHER_NONE		6906262	1					
ANR	6906296	ExpressionStatement	cinfo -> dither_mode = JDITHER_FS	1177:4:43690:43721	6906262	1	True				
ANR	6906297	AssignmentExpression	cinfo -> dither_mode = JDITHER_FS		6906262	0		=			
ANR	6906298	PtrMemberAccess	cinfo -> dither_mode		6906262	0					
ANR	6906299	Identifier	cinfo		6906262	0					
ANR	6906300	Identifier	dither_mode		6906262	1					
ANR	6906301	Identifier	JDITHER_FS		6906262	1					
ANR	6906302	IfStatement	if ( is_pre_scan )		6906262	4					
ANR	6906303	Condition	is_pre_scan	1179:6:43730:43740	6906262	0	True				
ANR	6906304	Identifier	is_pre_scan		6906262	0					
ANR	6906305	CompoundStatement		11:19:333:333	6906262	1					
ANR	6906306	ExpressionStatement	cquantize -> pub . color_quantize = prescan_quantize	1181:4:43782:43830	6906262	0	True				
ANR	6906307	AssignmentExpression	cquantize -> pub . color_quantize = prescan_quantize		6906262	0		=			
ANR	6906308	MemberAccess	cquantize -> pub . color_quantize		6906262	0					
ANR	6906309	PtrMemberAccess	cquantize -> pub		6906262	0					
ANR	6906310	Identifier	cquantize		6906262	0					
ANR	6906311	Identifier	pub		6906262	1					
ANR	6906312	Identifier	color_quantize		6906262	1					
ANR	6906313	Identifier	prescan_quantize		6906262	1					
ANR	6906314	ExpressionStatement	cquantize -> pub . finish_pass = finish_pass1	1182:4:43836:43877	6906262	1	True				
ANR	6906315	AssignmentExpression	cquantize -> pub . finish_pass = finish_pass1		6906262	0		=			
ANR	6906316	MemberAccess	cquantize -> pub . finish_pass		6906262	0					
ANR	6906317	PtrMemberAccess	cquantize -> pub		6906262	0					
ANR	6906318	Identifier	cquantize		6906262	0					
ANR	6906319	Identifier	pub		6906262	1					
ANR	6906320	Identifier	finish_pass		6906262	1					
ANR	6906321	Identifier	finish_pass1		6906262	1					
ANR	6906322	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1183:4:43883:43913	6906262	2	True				
ANR	6906323	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6906262	0		=			
ANR	6906324	PtrMemberAccess	cquantize -> needs_zeroed		6906262	0					
ANR	6906325	Identifier	cquantize		6906262	0					
ANR	6906326	Identifier	needs_zeroed		6906262	1					
ANR	6906327	Identifier	TRUE		6906262	1					
ANR	6906328	ElseStatement	else		6906262	0					
ANR	6906329	CompoundStatement		16:9:542:542	6906262	0					
ANR	6906330	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		6906262	0					
ANR	6906331	Condition	cinfo -> dither_mode == JDITHER_FS	1186:8:43995:44026	6906262	0	True				
ANR	6906332	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		6906262	0		==			
ANR	6906333	PtrMemberAccess	cinfo -> dither_mode		6906262	0					
ANR	6906334	Identifier	cinfo		6906262	0					
ANR	6906335	Identifier	dither_mode		6906262	1					
ANR	6906336	Identifier	JDITHER_FS		6906262	1					
ANR	6906337	ExpressionStatement	cquantize -> pub . color_quantize = pass2_fs_dither	1187:6:44035:44082	6906262	1	True				
ANR	6906338	AssignmentExpression	cquantize -> pub . color_quantize = pass2_fs_dither		6906262	0		=			
ANR	6906339	MemberAccess	cquantize -> pub . color_quantize		6906262	0					
ANR	6906340	PtrMemberAccess	cquantize -> pub		6906262	0					
ANR	6906341	Identifier	cquantize		6906262	0					
ANR	6906342	Identifier	pub		6906262	1					
ANR	6906343	Identifier	color_quantize		6906262	1					
ANR	6906344	Identifier	pass2_fs_dither		6906262	1					
ANR	6906345	ElseStatement	else		6906262	0					
ANR	6906346	ExpressionStatement	cquantize -> pub . color_quantize = pass2_no_dither	1189:6:44099:44146	6906262	0	True				
ANR	6906347	AssignmentExpression	cquantize -> pub . color_quantize = pass2_no_dither		6906262	0		=			
ANR	6906348	MemberAccess	cquantize -> pub . color_quantize		6906262	0					
ANR	6906349	PtrMemberAccess	cquantize -> pub		6906262	0					
ANR	6906350	Identifier	cquantize		6906262	0					
ANR	6906351	Identifier	pub		6906262	1					
ANR	6906352	Identifier	color_quantize		6906262	1					
ANR	6906353	Identifier	pass2_no_dither		6906262	1					
ANR	6906354	ExpressionStatement	cquantize -> pub . finish_pass = finish_pass2	1190:4:44152:44193	6906262	1	True				
ANR	6906355	AssignmentExpression	cquantize -> pub . finish_pass = finish_pass2		6906262	0		=			
ANR	6906356	MemberAccess	cquantize -> pub . finish_pass		6906262	0					
ANR	6906357	PtrMemberAccess	cquantize -> pub		6906262	0					
ANR	6906358	Identifier	cquantize		6906262	0					
ANR	6906359	Identifier	pub		6906262	1					
ANR	6906360	Identifier	finish_pass		6906262	1					
ANR	6906361	Identifier	finish_pass2		6906262	1					
ANR	6906362	ExpressionStatement	i = cinfo -> actual_number_of_colors	1193:4:44246:44280	6906262	2	True				
ANR	6906363	AssignmentExpression	i = cinfo -> actual_number_of_colors		6906262	0		=			
ANR	6906364	Identifier	i		6906262	0					
ANR	6906365	PtrMemberAccess	cinfo -> actual_number_of_colors		6906262	1					
ANR	6906366	Identifier	cinfo		6906262	0					
ANR	6906367	Identifier	actual_number_of_colors		6906262	1					
ANR	6906368	IfStatement	if ( i < 1 )		6906262	3					
ANR	6906369	Condition	i < 1	1194:8:44290:44294	6906262	0	True				
ANR	6906370	RelationalExpression	i < 1		6906262	0		<			
ANR	6906371	Identifier	i		6906262	0					
ANR	6906372	PrimaryExpression	1		6906262	1					
ANR	6906373	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 1 )"	1195:6:44303:44344	6906262	1	True				
ANR	6906374	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 1 )"		6906262	0					
ANR	6906375	Callee	ERREXIT1		6906262	0					
ANR	6906376	Identifier	ERREXIT1		6906262	0					
ANR	6906377	ArgumentList	cinfo		6906262	1					
ANR	6906378	Argument	cinfo		6906262	0					
ANR	6906379	Identifier	cinfo		6906262	0					
ANR	6906380	Argument	JERR_QUANT_FEW_COLORS		6906262	1					
ANR	6906381	Identifier	JERR_QUANT_FEW_COLORS		6906262	0					
ANR	6906382	Argument	1		6906262	2					
ANR	6906383	PrimaryExpression	1		6906262	0					
ANR	6906384	IfStatement	if ( i > MAXNUMCOLORS )		6906262	4					
ANR	6906385	Condition	i > MAXNUMCOLORS	1196:8:44354:44369	6906262	0	True				
ANR	6906386	RelationalExpression	i > MAXNUMCOLORS		6906262	0		>			
ANR	6906387	Identifier	i		6906262	0					
ANR	6906388	Identifier	MAXNUMCOLORS		6906262	1					
ANR	6906389	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"	1197:6:44378:44431	6906262	1	True				
ANR	6906390	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"		6906262	0					
ANR	6906391	Callee	ERREXIT1		6906262	0					
ANR	6906392	Identifier	ERREXIT1		6906262	0					
ANR	6906393	ArgumentList	cinfo		6906262	1					
ANR	6906394	Argument	cinfo		6906262	0					
ANR	6906395	Identifier	cinfo		6906262	0					
ANR	6906396	Argument	JERR_QUANT_MANY_COLORS		6906262	1					
ANR	6906397	Identifier	JERR_QUANT_MANY_COLORS		6906262	0					
ANR	6906398	Argument	MAXNUMCOLORS		6906262	2					
ANR	6906399	Identifier	MAXNUMCOLORS		6906262	0					
ANR	6906400	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		6906262	5					
ANR	6906401	Condition	cinfo -> dither_mode == JDITHER_FS	1199:8:44442:44473	6906262	0	True				
ANR	6906402	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		6906262	0		==			
ANR	6906403	PtrMemberAccess	cinfo -> dither_mode		6906262	0					
ANR	6906404	Identifier	cinfo		6906262	0					
ANR	6906405	Identifier	dither_mode		6906262	1					
ANR	6906406	Identifier	JDITHER_FS		6906262	1					
ANR	6906407	CompoundStatement		32:6:1074:1160	6906262	1					
ANR	6906408	IdentifierDeclStatement	size_t arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) ;	1200:6:44484:44570	6906262	0	True				
ANR	6906409	IdentifierDecl	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6906262	0					
ANR	6906410	IdentifierDeclType	size_t		6906262	0					
ANR	6906411	Identifier	arraysize		6906262	1					
ANR	6906412	AssignmentExpression	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6906262	2		=			
ANR	6906413	Identifier	arraysize		6906262	0					
ANR	6906414	CastExpression	( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6906262	1					
ANR	6906415	CastTarget	size_t		6906262	0					
ANR	6906416	MultiplicativeExpression	( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) )		6906262	1		*			
ANR	6906417	AdditiveExpression	cinfo -> output_width + 2		6906262	0		+			
ANR	6906418	PtrMemberAccess	cinfo -> output_width		6906262	0					
ANR	6906419	Identifier	cinfo		6906262	0					
ANR	6906420	Identifier	output_width		6906262	1					
ANR	6906421	PrimaryExpression	2		6906262	1					
ANR	6906422	MultiplicativeExpression	3 * SIZEOF ( FSERROR )		6906262	1		*			
ANR	6906423	PrimaryExpression	3		6906262	0					
ANR	6906424	CallExpression	SIZEOF ( FSERROR )		6906262	1					
ANR	6906425	Callee	SIZEOF		6906262	0					
ANR	6906426	Identifier	SIZEOF		6906262	0					
ANR	6906427	ArgumentList	FSERROR		6906262	1					
ANR	6906428	Argument	FSERROR		6906262	0					
ANR	6906429	Identifier	FSERROR		6906262	0					
ANR	6906430	IfStatement	if ( cquantize -> fserrors == NULL )		6906262	1					
ANR	6906431	Condition	cquantize -> fserrors == NULL	1203:10:44651:44677	6906262	0	True				
ANR	6906432	EqualityExpression	cquantize -> fserrors == NULL		6906262	0		==			
ANR	6906433	PtrMemberAccess	cquantize -> fserrors		6906262	0					
ANR	6906434	Identifier	cquantize		6906262	0					
ANR	6906435	Identifier	fserrors		6906262	1					
ANR	6906436	Identifier	NULL		6906262	1					
ANR	6906437	ExpressionStatement	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"	1204:1:44681:44790	6906262	1	True				
ANR	6906438	AssignmentExpression	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6906262	0		=			
ANR	6906439	PtrMemberAccess	cquantize -> fserrors		6906262	0					
ANR	6906440	Identifier	cquantize		6906262	0					
ANR	6906441	Identifier	fserrors		6906262	1					
ANR	6906442	CastExpression	"( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6906262	1					
ANR	6906443	CastTarget	FSERRPTR		6906262	0					
ANR	6906444	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6906262	1					
ANR	6906445	Callee	* cinfo -> mem -> alloc_large		6906262	0					
ANR	6906446	UnaryOperationExpression	* cinfo -> mem -> alloc_large		6906262	0					
ANR	6906447	UnaryOperator	*		6906262	0					
ANR	6906448	PtrMemberAccess	cinfo -> mem -> alloc_large		6906262	1					
ANR	6906449	PtrMemberAccess	cinfo -> mem		6906262	0					
ANR	6906450	Identifier	cinfo		6906262	0					
ANR	6906451	Identifier	mem		6906262	1					
ANR	6906452	Identifier	alloc_large		6906262	1					
ANR	6906453	ArgumentList	( j_common_ptr ) cinfo		6906262	1					
ANR	6906454	Argument	( j_common_ptr ) cinfo		6906262	0					
ANR	6906455	CastExpression	( j_common_ptr ) cinfo		6906262	0					
ANR	6906456	CastTarget	j_common_ptr		6906262	0					
ANR	6906457	Identifier	cinfo		6906262	1					
ANR	6906458	Argument	JPOOL_IMAGE		6906262	1					
ANR	6906459	Identifier	JPOOL_IMAGE		6906262	0					
ANR	6906460	Argument	arraysize		6906262	2					
ANR	6906461	Identifier	arraysize		6906262	0					
ANR	6906462	ExpressionStatement	"FMEMZERO ( ( void FAR * ) cquantize -> fserrors , arraysize )"	1207:6:44852:44905	6906262	2	True				
ANR	6906463	CallExpression	"FMEMZERO ( ( void FAR * ) cquantize -> fserrors , arraysize )"		6906262	0					
ANR	6906464	Callee	FMEMZERO		6906262	0					
ANR	6906465	Identifier	FMEMZERO		6906262	0					
ANR	6906466	ArgumentList	( void FAR * ) cquantize -> fserrors		6906262	1					
ANR	6906467	Argument	( void FAR * ) cquantize -> fserrors		6906262	0					
ANR	6906468	CastExpression	( void FAR * ) cquantize -> fserrors		6906262	0					
ANR	6906469	CastTarget	void FAR *		6906262	0					
ANR	6906470	PtrMemberAccess	cquantize -> fserrors		6906262	1					
ANR	6906471	Identifier	cquantize		6906262	0					
ANR	6906472	Identifier	fserrors		6906262	1					
ANR	6906473	Argument	arraysize		6906262	1					
ANR	6906474	Identifier	arraysize		6906262	0					
ANR	6906475	IfStatement	if ( cquantize -> error_limiter == NULL )		6906262	3					
ANR	6906476	Condition	cquantize -> error_limiter == NULL	1209:10:44978:45009	6906262	0	True				
ANR	6906477	EqualityExpression	cquantize -> error_limiter == NULL		6906262	0		==			
ANR	6906478	PtrMemberAccess	cquantize -> error_limiter		6906262	0					
ANR	6906479	Identifier	cquantize		6906262	0					
ANR	6906480	Identifier	error_limiter		6906262	1					
ANR	6906481	Identifier	NULL		6906262	1					
ANR	6906482	ExpressionStatement	init_error_limit ( cinfo )	1210:1:45013:45036	6906262	1	True				
ANR	6906483	CallExpression	init_error_limit ( cinfo )		6906262	0					
ANR	6906484	Callee	init_error_limit		6906262	0					
ANR	6906485	Identifier	init_error_limit		6906262	0					
ANR	6906486	ArgumentList	cinfo		6906262	1					
ANR	6906487	Argument	cinfo		6906262	0					
ANR	6906488	Identifier	cinfo		6906262	0					
ANR	6906489	ExpressionStatement	cquantize -> on_odd_row = FALSE	1211:6:45044:45073	6906262	4	True				
ANR	6906490	AssignmentExpression	cquantize -> on_odd_row = FALSE		6906262	0		=			
ANR	6906491	PtrMemberAccess	cquantize -> on_odd_row		6906262	0					
ANR	6906492	Identifier	cquantize		6906262	0					
ANR	6906493	Identifier	on_odd_row		6906262	1					
ANR	6906494	Identifier	FALSE		6906262	1					
ANR	6906495	IfStatement	if ( cquantize -> needs_zeroed )		6906262	5					
ANR	6906496	Condition	cquantize -> needs_zeroed	1216:6:45154:45176	6906262	0	True				
ANR	6906497	PtrMemberAccess	cquantize -> needs_zeroed		6906262	0					
ANR	6906498	Identifier	cquantize		6906262	0					
ANR	6906499	Identifier	needs_zeroed		6906262	1					
ANR	6906500	CompoundStatement		48:31:1769:1769	6906262	1					
ANR	6906501	ForStatement	for ( i = 0 ; i < HIST_C0_ELEMS ; i ++ )		6906262	0					
ANR	6906502	ForInit	i = 0 ;	1217:9:45190:45195	6906262	0	True				
ANR	6906503	AssignmentExpression	i = 0		6906262	0		=			
ANR	6906504	Identifier	i		6906262	0					
ANR	6906505	PrimaryExpression	0		6906262	1					
ANR	6906506	Condition	i < HIST_C0_ELEMS	1217:16:45197:45213	6906262	1	True				
ANR	6906507	RelationalExpression	i < HIST_C0_ELEMS		6906262	0		<			
ANR	6906508	Identifier	i		6906262	0					
ANR	6906509	Identifier	HIST_C0_ELEMS		6906262	1					
ANR	6906510	PostIncDecOperationExpression	i ++	1217:35:45216:45218	6906262	2	True				
ANR	6906511	Identifier	i		6906262	0					
ANR	6906512	IncDec	++		6906262	1					
ANR	6906513	CompoundStatement		49:40:1811:1811	6906262	3					
ANR	6906514	ExpressionStatement	"FMEMZERO ( ( void FAR * ) histogram [ i ] , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"	1218:6:45229:45320	6906262	0	True				
ANR	6906515	CallExpression	"FMEMZERO ( ( void FAR * ) histogram [ i ] , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6906262	0					
ANR	6906516	Callee	FMEMZERO		6906262	0					
ANR	6906517	Identifier	FMEMZERO		6906262	0					
ANR	6906518	ArgumentList	( void FAR * ) histogram [ i ]		6906262	1					
ANR	6906519	Argument	( void FAR * ) histogram [ i ]		6906262	0					
ANR	6906520	CastExpression	( void FAR * ) histogram [ i ]		6906262	0					
ANR	6906521	CastTarget	void FAR *		6906262	0					
ANR	6906522	ArrayIndexing	histogram [ i ]		6906262	1					
ANR	6906523	Identifier	histogram		6906262	0					
ANR	6906524	Identifier	i		6906262	1					
ANR	6906525	Argument	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6906262	1					
ANR	6906526	MultiplicativeExpression	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6906262	0		*			
ANR	6906527	Identifier	HIST_C1_ELEMS		6906262	0					
ANR	6906528	MultiplicativeExpression	HIST_C2_ELEMS * SIZEOF ( histcell )		6906262	1		*			
ANR	6906529	Identifier	HIST_C2_ELEMS		6906262	0					
ANR	6906530	CallExpression	SIZEOF ( histcell )		6906262	1					
ANR	6906531	Callee	SIZEOF		6906262	0					
ANR	6906532	Identifier	SIZEOF		6906262	0					
ANR	6906533	ArgumentList	histcell		6906262	1					
ANR	6906534	Argument	histcell		6906262	0					
ANR	6906535	Identifier	histcell		6906262	0					
ANR	6906536	ExpressionStatement	cquantize -> needs_zeroed = FALSE	1221:4:45332:45363	6906262	1	True				
ANR	6906537	AssignmentExpression	cquantize -> needs_zeroed = FALSE		6906262	0		=			
ANR	6906538	PtrMemberAccess	cquantize -> needs_zeroed		6906262	0					
ANR	6906539	Identifier	cquantize		6906262	0					
ANR	6906540	Identifier	needs_zeroed		6906262	1					
ANR	6906541	Identifier	FALSE		6906262	1					
ANR	6906542	Identifier	start_pass_2_quant		6906262	1					
ANR	6906543	ParameterList	"j_decompress_ptr cinfo , boolean is_pre_scan"		6906262	2					
ANR	6906544	Parameter	j_decompress_ptr cinfo	1168:20:43364:43385	6906262	0	True				
ANR	6906545	ParameterType	j_decompress_ptr		6906262	0					
ANR	6906546	Identifier	cinfo		6906262	1					
ANR	6906547	Parameter	boolean is_pre_scan	1168:44:43388:43406	6906262	1	True				
ANR	6906548	ParameterType	boolean		6906262	0					
ANR	6906549	Identifier	is_pre_scan		6906262	1					
ANR	6906550	CFGEntryNode	ENTRY		6906262		True				
ANR	6906551	CFGExitNode	EXIT		6906262		True				
ANR	6906552	Symbol	JDITHER_FS		6906262						
ANR	6906553	Symbol	JDITHER_NONE		6906262						
ANR	6906554	Symbol	is_pre_scan		6906262						
ANR	6906555	Symbol	* cquantize		6906262						
ANR	6906556	Symbol	cquantize -> histogram		6906262						
ANR	6906557	Symbol	JERR_QUANT_MANY_COLORS		6906262						
ANR	6906558	Symbol	cquantize -> fserrors		6906262						
ANR	6906559	Symbol	cinfo -> mem -> alloc_large		6906262						
ANR	6906560	Symbol	* cinfo		6906262						
ANR	6906561	Symbol	NULL		6906262						
ANR	6906562	Symbol	TRUE		6906262						
ANR	6906563	Symbol	HIST_C2_ELEMS		6906262						
ANR	6906564	Symbol	histogram		6906262						
ANR	6906565	Symbol	cinfo -> dither_mode		6906262						
ANR	6906566	Symbol	FSERROR		6906262						
ANR	6906567	Symbol	cinfo -> actual_number_of_colors		6906262						
ANR	6906568	Symbol	histcell		6906262						
ANR	6906569	Symbol	cquantize -> pub . finish_pass		6906262						
ANR	6906570	Symbol	cinfo		6906262						
ANR	6906571	Symbol	* * * cinfo		6906262						
ANR	6906572	Symbol	pass2_fs_dither		6906262						
ANR	6906573	Symbol	* * cinfo		6906262						
ANR	6906574	Symbol	HIST_C1_ELEMS		6906262						
ANR	6906575	Symbol	cquantize -> pub		6906262						
ANR	6906576	Symbol	* cinfo -> mem -> alloc_large		6906262						
ANR	6906577	Symbol	arraysize		6906262						
ANR	6906578	Symbol	cquantize -> needs_zeroed		6906262						
ANR	6906579	Symbol	SIZEOF		6906262						
ANR	6906580	Symbol	cquantize -> error_limiter		6906262						
ANR	6906581	Symbol	cquantize		6906262						
ANR	6906582	Symbol	finish_pass2		6906262						
ANR	6906583	Symbol	finish_pass1		6906262						
ANR	6906584	Symbol	cinfo -> output_width		6906262						
ANR	6906585	Symbol	* cinfo -> mem		6906262						
ANR	6906586	Symbol	cinfo -> mem		6906262						
ANR	6906587	Symbol	JERR_QUANT_FEW_COLORS		6906262						
ANR	6906588	Symbol	pass2_no_dither		6906262						
ANR	6906589	Symbol	* * cinfo -> mem		6906262						
ANR	6906590	Symbol	HIST_C0_ELEMS		6906262						
ANR	6906591	Symbol	i		6906262						
ANR	6906592	Symbol	prescan_quantize		6906262						
ANR	6906593	Symbol	* histogram		6906262						
ANR	6906594	Symbol	JPOOL_IMAGE		6906262						
ANR	6906595	Symbol	cinfo -> cquantize		6906262						
ANR	6906596	Symbol	cquantize -> pub . color_quantize		6906262						
ANR	6906597	Symbol	* i		6906262						
ANR	6906598	Symbol	cquantize -> on_odd_row		6906262						
ANR	6906599	Symbol	FALSE		6906262						
ANR	6906600	Symbol	MAXNUMCOLORS		6906262						
ANR	6906601	Function	new_color_map_2_quant	1231:0:45457:45645							
ANR	6906602	FunctionDef	new_color_map_2_quant (j_decompress_ptr cinfo)		6906601	0					
ANR	6906603	CompoundStatement		1232:0:45504:45645	6906601	0					
ANR	6906604	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1233:2:45508:45572	6906601	0	True				
ANR	6906605	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6906601	0					
ANR	6906606	IdentifierDeclType	my_cquantize_ptr		6906601	0					
ANR	6906607	Identifier	cquantize		6906601	1					
ANR	6906608	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6906601	2		=			
ANR	6906609	Identifier	cquantize		6906601	0					
ANR	6906610	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6906601	1					
ANR	6906611	CastTarget	my_cquantize_ptr		6906601	0					
ANR	6906612	PtrMemberAccess	cinfo -> cquantize		6906601	1					
ANR	6906613	Identifier	cinfo		6906601	0					
ANR	6906614	Identifier	cquantize		6906601	1					
ANR	6906615	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1236:2:45613:45643	6906601	1	True				
ANR	6906616	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6906601	0		=			
ANR	6906617	PtrMemberAccess	cquantize -> needs_zeroed		6906601	0					
ANR	6906618	Identifier	cquantize		6906601	0					
ANR	6906619	Identifier	needs_zeroed		6906601	1					
ANR	6906620	Identifier	TRUE		6906601	1					
ANR	6906621	Identifier	new_color_map_2_quant		6906601	1					
ANR	6906622	ParameterList	j_decompress_ptr cinfo		6906601	2					
ANR	6906623	Parameter	j_decompress_ptr cinfo	1231:23:45480:45501	6906601	0	True				
ANR	6906624	ParameterType	j_decompress_ptr		6906601	0					
ANR	6906625	Identifier	cinfo		6906601	1					
ANR	6906626	CFGEntryNode	ENTRY		6906601		True				
ANR	6906627	CFGExitNode	EXIT		6906601		True				
ANR	6906628	Symbol	cinfo -> cquantize		6906601						
ANR	6906629	Symbol	cinfo		6906601						
ANR	6906630	Symbol	cquantize -> needs_zeroed		6906601						
ANR	6906631	Symbol	TRUE		6906601						
ANR	6906632	Symbol	cquantize		6906601						
ANR	6906633	Symbol	* cquantize		6906601						
ANR	6906634	Symbol	* cinfo		6906601						
ANR	6906635	Function	jinit_2pass_quantizer	1245:0:45734:48433							
ANR	6906636	FunctionDef	jinit_2pass_quantizer (j_decompress_ptr cinfo)		6906635	0					
ANR	6906637	CompoundStatement		1246:0:45781:48433	6906635	0					
ANR	6906638	IdentifierDeclStatement	my_cquantize_ptr cquantize ;	1247:2:45785:45811	6906635	0	True				
ANR	6906639	IdentifierDecl	cquantize		6906635	0					
ANR	6906640	IdentifierDeclType	my_cquantize_ptr		6906635	0					
ANR	6906641	Identifier	cquantize		6906635	1					
ANR	6906642	IdentifierDeclStatement	int i ;	1248:2:45815:45820	6906635	1	True				
ANR	6906643	IdentifierDecl	i		6906635	0					
ANR	6906644	IdentifierDeclType	int		6906635	0					
ANR	6906645	Identifier	i		6906635	1					
ANR	6906646	ExpressionStatement	"cquantize = ( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"	1250:2:45825:45949	6906635	2	True				
ANR	6906647	AssignmentExpression	"cquantize = ( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6906635	0		=			
ANR	6906648	Identifier	cquantize		6906635	0					
ANR	6906649	CastExpression	"( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6906635	1					
ANR	6906650	CastTarget	my_cquantize_ptr		6906635	0					
ANR	6906651	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6906635	1					
ANR	6906652	Callee	* cinfo -> mem -> alloc_small		6906635	0					
ANR	6906653	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6906635	0					
ANR	6906654	UnaryOperator	*		6906635	0					
ANR	6906655	PtrMemberAccess	cinfo -> mem -> alloc_small		6906635	1					
ANR	6906656	PtrMemberAccess	cinfo -> mem		6906635	0					
ANR	6906657	Identifier	cinfo		6906635	0					
ANR	6906658	Identifier	mem		6906635	1					
ANR	6906659	Identifier	alloc_small		6906635	1					
ANR	6906660	ArgumentList	( j_common_ptr ) cinfo		6906635	1					
ANR	6906661	Argument	( j_common_ptr ) cinfo		6906635	0					
ANR	6906662	CastExpression	( j_common_ptr ) cinfo		6906635	0					
ANR	6906663	CastTarget	j_common_ptr		6906635	0					
ANR	6906664	Identifier	cinfo		6906635	1					
ANR	6906665	Argument	JPOOL_IMAGE		6906635	1					
ANR	6906666	Identifier	JPOOL_IMAGE		6906635	0					
ANR	6906667	Argument	SIZEOF ( my_cquantizer )		6906635	2					
ANR	6906668	CallExpression	SIZEOF ( my_cquantizer )		6906635	0					
ANR	6906669	Callee	SIZEOF		6906635	0					
ANR	6906670	Identifier	SIZEOF		6906635	0					
ANR	6906671	ArgumentList	my_cquantizer		6906635	1					
ANR	6906672	Argument	my_cquantizer		6906635	0					
ANR	6906673	Identifier	my_cquantizer		6906635	0					
ANR	6906674	ExpressionStatement	cinfo -> cquantize = ( struct jpeg_color_quantizer * ) cquantize	1253:2:45953:46013	6906635	3	True				
ANR	6906675	AssignmentExpression	cinfo -> cquantize = ( struct jpeg_color_quantizer * ) cquantize		6906635	0		=			
ANR	6906676	PtrMemberAccess	cinfo -> cquantize		6906635	0					
ANR	6906677	Identifier	cinfo		6906635	0					
ANR	6906678	Identifier	cquantize		6906635	1					
ANR	6906679	CastExpression	( struct jpeg_color_quantizer * ) cquantize		6906635	1					
ANR	6906680	CastTarget	struct jpeg_color_quantizer *		6906635	0					
ANR	6906681	Identifier	cquantize		6906635	1					
ANR	6906682	ExpressionStatement	cquantize -> pub . start_pass = start_pass_2_quant	1254:2:46017:46063	6906635	4	True				
ANR	6906683	AssignmentExpression	cquantize -> pub . start_pass = start_pass_2_quant		6906635	0		=			
ANR	6906684	MemberAccess	cquantize -> pub . start_pass		6906635	0					
ANR	6906685	PtrMemberAccess	cquantize -> pub		6906635	0					
ANR	6906686	Identifier	cquantize		6906635	0					
ANR	6906687	Identifier	pub		6906635	1					
ANR	6906688	Identifier	start_pass		6906635	1					
ANR	6906689	Identifier	start_pass_2_quant		6906635	1					
ANR	6906690	ExpressionStatement	cquantize -> pub . new_color_map = new_color_map_2_quant	1255:2:46067:46119	6906635	5	True				
ANR	6906691	AssignmentExpression	cquantize -> pub . new_color_map = new_color_map_2_quant		6906635	0		=			
ANR	6906692	MemberAccess	cquantize -> pub . new_color_map		6906635	0					
ANR	6906693	PtrMemberAccess	cquantize -> pub		6906635	0					
ANR	6906694	Identifier	cquantize		6906635	0					
ANR	6906695	Identifier	pub		6906635	1					
ANR	6906696	Identifier	new_color_map		6906635	1					
ANR	6906697	Identifier	new_color_map_2_quant		6906635	1					
ANR	6906698	ExpressionStatement	cquantize -> fserrors = NULL	1256:2:46123:46149	6906635	6	True				
ANR	6906699	AssignmentExpression	cquantize -> fserrors = NULL		6906635	0		=			
ANR	6906700	PtrMemberAccess	cquantize -> fserrors		6906635	0					
ANR	6906701	Identifier	cquantize		6906635	0					
ANR	6906702	Identifier	fserrors		6906635	1					
ANR	6906703	Identifier	NULL		6906635	1					
ANR	6906704	ExpressionStatement	cquantize -> error_limiter = NULL	1257:2:46194:46225	6906635	7	True				
ANR	6906705	AssignmentExpression	cquantize -> error_limiter = NULL		6906635	0		=			
ANR	6906706	PtrMemberAccess	cquantize -> error_limiter		6906635	0					
ANR	6906707	Identifier	cquantize		6906635	0					
ANR	6906708	Identifier	error_limiter		6906635	1					
ANR	6906709	Identifier	NULL		6906635	1					
ANR	6906710	IfStatement	if ( cinfo -> out_color_components != 3 )		6906635	8					
ANR	6906711	Condition	cinfo -> out_color_components != 3	1260:6:46298:46329	6906635	0	True				
ANR	6906712	EqualityExpression	cinfo -> out_color_components != 3		6906635	0		!=			
ANR	6906713	PtrMemberAccess	cinfo -> out_color_components		6906635	0					
ANR	6906714	Identifier	cinfo		6906635	0					
ANR	6906715	Identifier	out_color_components		6906635	1					
ANR	6906716	PrimaryExpression	3		6906635	1					
ANR	6906717	ExpressionStatement	"ERREXIT ( cinfo , JERR_NOTIMPL )"	1261:4:46336:46364	6906635	1	True				
ANR	6906718	CallExpression	"ERREXIT ( cinfo , JERR_NOTIMPL )"		6906635	0					
ANR	6906719	Callee	ERREXIT		6906635	0					
ANR	6906720	Identifier	ERREXIT		6906635	0					
ANR	6906721	ArgumentList	cinfo		6906635	1					
ANR	6906722	Argument	cinfo		6906635	0					
ANR	6906723	Identifier	cinfo		6906635	0					
ANR	6906724	Argument	JERR_NOTIMPL		6906635	1					
ANR	6906725	Identifier	JERR_NOTIMPL		6906635	0					
ANR	6906726	ExpressionStatement	"cquantize -> histogram = ( hist3d ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"	1264:2:46425:46555	6906635	9	True				
ANR	6906727	AssignmentExpression	"cquantize -> histogram = ( hist3d ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"		6906635	0		=			
ANR	6906728	PtrMemberAccess	cquantize -> histogram		6906635	0					
ANR	6906729	Identifier	cquantize		6906635	0					
ANR	6906730	Identifier	histogram		6906635	1					
ANR	6906731	CastExpression	"( hist3d ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"		6906635	1					
ANR	6906732	CastTarget	hist3d		6906635	0					
ANR	6906733	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"		6906635	1					
ANR	6906734	Callee	* cinfo -> mem -> alloc_small		6906635	0					
ANR	6906735	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6906635	0					
ANR	6906736	UnaryOperator	*		6906635	0					
ANR	6906737	PtrMemberAccess	cinfo -> mem -> alloc_small		6906635	1					
ANR	6906738	PtrMemberAccess	cinfo -> mem		6906635	0					
ANR	6906739	Identifier	cinfo		6906635	0					
ANR	6906740	Identifier	mem		6906635	1					
ANR	6906741	Identifier	alloc_small		6906635	1					
ANR	6906742	ArgumentList	( j_common_ptr ) cinfo		6906635	1					
ANR	6906743	Argument	( j_common_ptr ) cinfo		6906635	0					
ANR	6906744	CastExpression	( j_common_ptr ) cinfo		6906635	0					
ANR	6906745	CastTarget	j_common_ptr		6906635	0					
ANR	6906746	Identifier	cinfo		6906635	1					
ANR	6906747	Argument	JPOOL_IMAGE		6906635	1					
ANR	6906748	Identifier	JPOOL_IMAGE		6906635	0					
ANR	6906749	Argument	HIST_C0_ELEMS * SIZEOF ( hist2d )		6906635	2					
ANR	6906750	MultiplicativeExpression	HIST_C0_ELEMS * SIZEOF ( hist2d )		6906635	0		*			
ANR	6906751	Identifier	HIST_C0_ELEMS		6906635	0					
ANR	6906752	CallExpression	SIZEOF ( hist2d )		6906635	1					
ANR	6906753	Callee	SIZEOF		6906635	0					
ANR	6906754	Identifier	SIZEOF		6906635	0					
ANR	6906755	ArgumentList	hist2d		6906635	1					
ANR	6906756	Argument	hist2d		6906635	0					
ANR	6906757	Identifier	hist2d		6906635	0					
ANR	6906758	ForStatement	for ( i = 0 ; i < HIST_C0_ELEMS ; i ++ )		6906635	10					
ANR	6906759	ForInit	i = 0 ;	1266:7:46564:46569	6906635	0	True				
ANR	6906760	AssignmentExpression	i = 0		6906635	0		=			
ANR	6906761	Identifier	i		6906635	0					
ANR	6906762	PrimaryExpression	0		6906635	1					
ANR	6906763	Condition	i < HIST_C0_ELEMS	1266:14:46571:46587	6906635	1	True				
ANR	6906764	RelationalExpression	i < HIST_C0_ELEMS		6906635	0		<			
ANR	6906765	Identifier	i		6906635	0					
ANR	6906766	Identifier	HIST_C0_ELEMS		6906635	1					
ANR	6906767	PostIncDecOperationExpression	i ++	1266:33:46590:46592	6906635	2	True				
ANR	6906768	Identifier	i		6906635	0					
ANR	6906769	IncDec	++		6906635	1					
ANR	6906770	CompoundStatement		21:38:813:813	6906635	3					
ANR	6906771	ExpressionStatement	"cquantize -> histogram [ i ] = ( hist2d ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"	1267:4:46601:46759	6906635	0	True				
ANR	6906772	AssignmentExpression	"cquantize -> histogram [ i ] = ( hist2d ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6906635	0		=			
ANR	6906773	ArrayIndexing	cquantize -> histogram [ i ]		6906635	0					
ANR	6906774	PtrMemberAccess	cquantize -> histogram		6906635	0					
ANR	6906775	Identifier	cquantize		6906635	0					
ANR	6906776	Identifier	histogram		6906635	1					
ANR	6906777	Identifier	i		6906635	1					
ANR	6906778	CastExpression	"( hist2d ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6906635	1					
ANR	6906779	CastTarget	hist2d		6906635	0					
ANR	6906780	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6906635	1					
ANR	6906781	Callee	* cinfo -> mem -> alloc_large		6906635	0					
ANR	6906782	UnaryOperationExpression	* cinfo -> mem -> alloc_large		6906635	0					
ANR	6906783	UnaryOperator	*		6906635	0					
ANR	6906784	PtrMemberAccess	cinfo -> mem -> alloc_large		6906635	1					
ANR	6906785	PtrMemberAccess	cinfo -> mem		6906635	0					
ANR	6906786	Identifier	cinfo		6906635	0					
ANR	6906787	Identifier	mem		6906635	1					
ANR	6906788	Identifier	alloc_large		6906635	1					
ANR	6906789	ArgumentList	( j_common_ptr ) cinfo		6906635	1					
ANR	6906790	Argument	( j_common_ptr ) cinfo		6906635	0					
ANR	6906791	CastExpression	( j_common_ptr ) cinfo		6906635	0					
ANR	6906792	CastTarget	j_common_ptr		6906635	0					
ANR	6906793	Identifier	cinfo		6906635	1					
ANR	6906794	Argument	JPOOL_IMAGE		6906635	1					
ANR	6906795	Identifier	JPOOL_IMAGE		6906635	0					
ANR	6906796	Argument	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6906635	2					
ANR	6906797	MultiplicativeExpression	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6906635	0		*			
ANR	6906798	Identifier	HIST_C1_ELEMS		6906635	0					
ANR	6906799	MultiplicativeExpression	HIST_C2_ELEMS * SIZEOF ( histcell )		6906635	1		*			
ANR	6906800	Identifier	HIST_C2_ELEMS		6906635	0					
ANR	6906801	CallExpression	SIZEOF ( histcell )		6906635	1					
ANR	6906802	Callee	SIZEOF		6906635	0					
ANR	6906803	Identifier	SIZEOF		6906635	0					
ANR	6906804	ArgumentList	histcell		6906635	1					
ANR	6906805	Argument	histcell		6906635	0					
ANR	6906806	Identifier	histcell		6906635	0					
ANR	6906807	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1271:2:46767:46797	6906635	11	True				
ANR	6906808	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6906635	0		=			
ANR	6906809	PtrMemberAccess	cquantize -> needs_zeroed		6906635	0					
ANR	6906810	Identifier	cquantize		6906635	0					
ANR	6906811	Identifier	needs_zeroed		6906635	1					
ANR	6906812	Identifier	TRUE		6906635	1					
ANR	6906813	IfStatement	if ( cinfo -> enable_2pass_quant )		6906635	12					
ANR	6906814	Condition	cinfo -> enable_2pass_quant	1277:6:47011:47035	6906635	0	True				
ANR	6906815	PtrMemberAccess	cinfo -> enable_2pass_quant		6906635	0					
ANR	6906816	Identifier	cinfo		6906635	0					
ANR	6906817	Identifier	enable_2pass_quant		6906635	1					
ANR	6906818	CompoundStatement		34:4:1308:1353	6906635	1					
ANR	6906819	IdentifierDeclStatement	int desired = cinfo -> desired_number_of_colors ;	1279:4:47090:47135	6906635	0	True				
ANR	6906820	IdentifierDecl	desired = cinfo -> desired_number_of_colors		6906635	0					
ANR	6906821	IdentifierDeclType	int		6906635	0					
ANR	6906822	Identifier	desired		6906635	1					
ANR	6906823	AssignmentExpression	desired = cinfo -> desired_number_of_colors		6906635	2		=			
ANR	6906824	Identifier	desired		6906635	0					
ANR	6906825	PtrMemberAccess	cinfo -> desired_number_of_colors		6906635	1					
ANR	6906826	Identifier	cinfo		6906635	0					
ANR	6906827	Identifier	desired_number_of_colors		6906635	1					
ANR	6906828	IfStatement	if ( desired < 8 )		6906635	1					
ANR	6906829	Condition	desired < 8	1281:8:47220:47230	6906635	0	True				
ANR	6906830	RelationalExpression	desired < 8		6906635	0		<			
ANR	6906831	Identifier	desired		6906635	0					
ANR	6906832	PrimaryExpression	8		6906635	1					
ANR	6906833	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 8 )"	1282:6:47239:47280	6906635	1	True				
ANR	6906834	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 8 )"		6906635	0					
ANR	6906835	Callee	ERREXIT1		6906635	0					
ANR	6906836	Identifier	ERREXIT1		6906635	0					
ANR	6906837	ArgumentList	cinfo		6906635	1					
ANR	6906838	Argument	cinfo		6906635	0					
ANR	6906839	Identifier	cinfo		6906635	0					
ANR	6906840	Argument	JERR_QUANT_FEW_COLORS		6906635	1					
ANR	6906841	Identifier	JERR_QUANT_FEW_COLORS		6906635	0					
ANR	6906842	Argument	8		6906635	2					
ANR	6906843	PrimaryExpression	8		6906635	0					
ANR	6906844	IfStatement	if ( desired > MAXNUMCOLORS )		6906635	2					
ANR	6906845	Condition	desired > MAXNUMCOLORS	1284:8:47358:47379	6906635	0	True				
ANR	6906846	RelationalExpression	desired > MAXNUMCOLORS		6906635	0		>			
ANR	6906847	Identifier	desired		6906635	0					
ANR	6906848	Identifier	MAXNUMCOLORS		6906635	1					
ANR	6906849	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"	1285:6:47388:47441	6906635	1	True				
ANR	6906850	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"		6906635	0					
ANR	6906851	Callee	ERREXIT1		6906635	0					
ANR	6906852	Identifier	ERREXIT1		6906635	0					
ANR	6906853	ArgumentList	cinfo		6906635	1					
ANR	6906854	Argument	cinfo		6906635	0					
ANR	6906855	Identifier	cinfo		6906635	0					
ANR	6906856	Argument	JERR_QUANT_MANY_COLORS		6906635	1					
ANR	6906857	Identifier	JERR_QUANT_MANY_COLORS		6906635	0					
ANR	6906858	Argument	MAXNUMCOLORS		6906635	2					
ANR	6906859	Identifier	MAXNUMCOLORS		6906635	0					
ANR	6906860	ExpressionStatement	"cquantize -> sv_colormap = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) desired , ( JDIMENSION ) 3 )"	1286:4:47447:47578	6906635	3	True				
ANR	6906861	AssignmentExpression	"cquantize -> sv_colormap = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) desired , ( JDIMENSION ) 3 )"		6906635	0		=			
ANR	6906862	PtrMemberAccess	cquantize -> sv_colormap		6906635	0					
ANR	6906863	Identifier	cquantize		6906635	0					
ANR	6906864	Identifier	sv_colormap		6906635	1					
ANR	6906865	CallExpression	"( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) desired , ( JDIMENSION ) 3 )"		6906635	1					
ANR	6906866	Callee	* cinfo -> mem -> alloc_sarray		6906635	0					
ANR	6906867	UnaryOperationExpression	* cinfo -> mem -> alloc_sarray		6906635	0					
ANR	6906868	UnaryOperator	*		6906635	0					
ANR	6906869	PtrMemberAccess	cinfo -> mem -> alloc_sarray		6906635	1					
ANR	6906870	PtrMemberAccess	cinfo -> mem		6906635	0					
ANR	6906871	Identifier	cinfo		6906635	0					
ANR	6906872	Identifier	mem		6906635	1					
ANR	6906873	Identifier	alloc_sarray		6906635	1					
ANR	6906874	ArgumentList	( j_common_ptr ) cinfo		6906635	1					
ANR	6906875	Argument	( j_common_ptr ) cinfo		6906635	0					
ANR	6906876	CastExpression	( j_common_ptr ) cinfo		6906635	0					
ANR	6906877	CastTarget	j_common_ptr		6906635	0					
ANR	6906878	Identifier	cinfo		6906635	1					
ANR	6906879	Argument	JPOOL_IMAGE		6906635	1					
ANR	6906880	Identifier	JPOOL_IMAGE		6906635	0					
ANR	6906881	Argument	( JDIMENSION ) desired		6906635	2					
ANR	6906882	CastExpression	( JDIMENSION ) desired		6906635	0					
ANR	6906883	CastTarget	JDIMENSION		6906635	0					
ANR	6906884	Identifier	desired		6906635	1					
ANR	6906885	Argument	( JDIMENSION ) 3		6906635	3					
ANR	6906886	CastExpression	( JDIMENSION ) 3		6906635	0					
ANR	6906887	CastTarget	JDIMENSION		6906635	0					
ANR	6906888	PrimaryExpression	3		6906635	1					
ANR	6906889	ExpressionStatement	cquantize -> desired = desired	1288:4:47584:47612	6906635	4	True				
ANR	6906890	AssignmentExpression	cquantize -> desired = desired		6906635	0		=			
ANR	6906891	PtrMemberAccess	cquantize -> desired		6906635	0					
ANR	6906892	Identifier	cquantize		6906635	0					
ANR	6906893	Identifier	desired		6906635	1					
ANR	6906894	Identifier	desired		6906635	1					
ANR	6906895	ElseStatement	else		6906635	0					
ANR	6906896	ExpressionStatement	cquantize -> sv_colormap = NULL	1290:4:47627:47656	6906635	0	True				
ANR	6906897	AssignmentExpression	cquantize -> sv_colormap = NULL		6906635	0		=			
ANR	6906898	PtrMemberAccess	cquantize -> sv_colormap		6906635	0					
ANR	6906899	Identifier	cquantize		6906635	0					
ANR	6906900	Identifier	sv_colormap		6906635	1					
ANR	6906901	Identifier	NULL		6906635	1					
ANR	6906902	IfStatement	if ( cinfo -> dither_mode != JDITHER_NONE )		6906635	13					
ANR	6906903	Condition	cinfo -> dither_mode != JDITHER_NONE	1294:6:47777:47810	6906635	0	True				
ANR	6906904	EqualityExpression	cinfo -> dither_mode != JDITHER_NONE		6906635	0		!=			
ANR	6906905	PtrMemberAccess	cinfo -> dither_mode		6906635	0					
ANR	6906906	Identifier	cinfo		6906635	0					
ANR	6906907	Identifier	dither_mode		6906635	1					
ANR	6906908	Identifier	JDITHER_NONE		6906635	1					
ANR	6906909	ExpressionStatement	cinfo -> dither_mode = JDITHER_FS	1295:4:47817:47848	6906635	1	True				
ANR	6906910	AssignmentExpression	cinfo -> dither_mode = JDITHER_FS		6906635	0		=			
ANR	6906911	PtrMemberAccess	cinfo -> dither_mode		6906635	0					
ANR	6906912	Identifier	cinfo		6906635	0					
ANR	6906913	Identifier	dither_mode		6906635	1					
ANR	6906914	Identifier	JDITHER_FS		6906635	1					
ANR	6906915	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		6906635	14					
ANR	6906916	Condition	cinfo -> dither_mode == JDITHER_FS	1302:6:48127:48158	6906635	0	True				
ANR	6906917	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		6906635	0		==			
ANR	6906918	PtrMemberAccess	cinfo -> dither_mode		6906635	0					
ANR	6906919	Identifier	cinfo		6906635	0					
ANR	6906920	Identifier	dither_mode		6906635	1					
ANR	6906921	Identifier	JDITHER_FS		6906635	1					
ANR	6906922	CompoundStatement		57:40:2379:2379	6906635	1					
ANR	6906923	ExpressionStatement	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"	1303:4:48167:48337	6906635	0	True				
ANR	6906924	AssignmentExpression	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"		6906635	0		=			
ANR	6906925	PtrMemberAccess	cquantize -> fserrors		6906635	0					
ANR	6906926	Identifier	cquantize		6906635	0					
ANR	6906927	Identifier	fserrors		6906635	1					
ANR	6906928	CastExpression	"( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"		6906635	1					
ANR	6906929	CastTarget	FSERRPTR		6906635	0					
ANR	6906930	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"		6906635	1					
ANR	6906931	Callee	* cinfo -> mem -> alloc_large		6906635	0					
ANR	6906932	UnaryOperationExpression	* cinfo -> mem -> alloc_large		6906635	0					
ANR	6906933	UnaryOperator	*		6906635	0					
ANR	6906934	PtrMemberAccess	cinfo -> mem -> alloc_large		6906635	1					
ANR	6906935	PtrMemberAccess	cinfo -> mem		6906635	0					
ANR	6906936	Identifier	cinfo		6906635	0					
ANR	6906937	Identifier	mem		6906635	1					
ANR	6906938	Identifier	alloc_large		6906635	1					
ANR	6906939	ArgumentList	( j_common_ptr ) cinfo		6906635	1					
ANR	6906940	Argument	( j_common_ptr ) cinfo		6906635	0					
ANR	6906941	CastExpression	( j_common_ptr ) cinfo		6906635	0					
ANR	6906942	CastTarget	j_common_ptr		6906635	0					
ANR	6906943	Identifier	cinfo		6906635	1					
ANR	6906944	Argument	JPOOL_IMAGE		6906635	1					
ANR	6906945	Identifier	JPOOL_IMAGE		6906635	0					
ANR	6906946	Argument	( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6906635	2					
ANR	6906947	CastExpression	( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6906635	0					
ANR	6906948	CastTarget	size_t		6906635	0					
ANR	6906949	MultiplicativeExpression	( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) )		6906635	1		*			
ANR	6906950	AdditiveExpression	cinfo -> output_width + 2		6906635	0		+			
ANR	6906951	PtrMemberAccess	cinfo -> output_width		6906635	0					
ANR	6906952	Identifier	cinfo		6906635	0					
ANR	6906953	Identifier	output_width		6906635	1					
ANR	6906954	PrimaryExpression	2		6906635	1					
ANR	6906955	MultiplicativeExpression	3 * SIZEOF ( FSERROR )		6906635	1		*			
ANR	6906956	PrimaryExpression	3		6906635	0					
ANR	6906957	CallExpression	SIZEOF ( FSERROR )		6906635	1					
ANR	6906958	Callee	SIZEOF		6906635	0					
ANR	6906959	Identifier	SIZEOF		6906635	0					
ANR	6906960	ArgumentList	FSERROR		6906635	1					
ANR	6906961	Argument	FSERROR		6906635	0					
ANR	6906962	Identifier	FSERROR		6906635	0					
ANR	6906963	ExpressionStatement	init_error_limit ( cinfo )	1307:4:48404:48427	6906635	1	True				
ANR	6906964	CallExpression	init_error_limit ( cinfo )		6906635	0					
ANR	6906965	Callee	init_error_limit		6906635	0					
ANR	6906966	Identifier	init_error_limit		6906635	0					
ANR	6906967	ArgumentList	cinfo		6906635	1					
ANR	6906968	Argument	cinfo		6906635	0					
ANR	6906969	Identifier	cinfo		6906635	0					
ANR	6906970	Identifier	jinit_2pass_quantizer		6906635	1					
ANR	6906971	ParameterList	j_decompress_ptr cinfo		6906635	2					
ANR	6906972	Parameter	j_decompress_ptr cinfo	1245:23:45757:45778	6906635	0	True				
ANR	6906973	ParameterType	j_decompress_ptr		6906635	0					
ANR	6906974	Identifier	cinfo		6906635	1					
ANR	6906975	CFGEntryNode	ENTRY		6906635		True				
ANR	6906976	CFGExitNode	EXIT		6906635		True				
ANR	6906977	Symbol	JDITHER_FS		6906635						
ANR	6906978	Symbol	JDITHER_NONE		6906635						
ANR	6906979	Symbol	* cquantize		6906635						
ANR	6906980	Symbol	cquantize -> pub . start_pass		6906635						
ANR	6906981	Symbol	cquantize -> histogram		6906635						
ANR	6906982	Symbol	cquantize -> sv_colormap		6906635						
ANR	6906983	Symbol	JERR_QUANT_MANY_COLORS		6906635						
ANR	6906984	Symbol	cquantize -> fserrors		6906635						
ANR	6906985	Symbol	cinfo -> out_color_components		6906635						
ANR	6906986	Symbol	cinfo -> mem -> alloc_large		6906635						
ANR	6906987	Symbol	* cinfo		6906635						
ANR	6906988	Symbol	NULL		6906635						
ANR	6906989	Symbol	cinfo -> mem -> alloc_sarray		6906635						
ANR	6906990	Symbol	HIST_C2_ELEMS		6906635						
ANR	6906991	Symbol	TRUE		6906635						
ANR	6906992	Symbol	cinfo -> dither_mode		6906635						
ANR	6906993	Symbol	cinfo -> desired_number_of_colors		6906635						
ANR	6906994	Symbol	FSERROR		6906635						
ANR	6906995	Symbol	histcell		6906635						
ANR	6906996	Symbol	* cquantize -> histogram		6906635						
ANR	6906997	Symbol	cinfo		6906635						
ANR	6906998	Symbol	* * * cinfo		6906635						
ANR	6906999	Symbol	cquantize -> pub . new_color_map		6906635						
ANR	6907000	Symbol	* * cinfo		6906635						
ANR	6907001	Symbol	HIST_C1_ELEMS		6906635						
ANR	6907002	Symbol	cquantize -> pub		6906635						
ANR	6907003	Symbol	* cinfo -> mem -> alloc_large		6906635						
ANR	6907004	Symbol	cquantize -> desired		6906635						
ANR	6907005	Symbol	cinfo -> enable_2pass_quant		6906635						
ANR	6907006	Symbol	SIZEOF		6906635						
ANR	6907007	Symbol	cquantize -> needs_zeroed		6906635						
ANR	6907008	Symbol	* cinfo -> mem -> alloc_sarray		6906635						
ANR	6907009	Symbol	new_color_map_2_quant		6906635						
ANR	6907010	Symbol	cquantize -> error_limiter		6906635						
ANR	6907011	Symbol	cquantize		6906635						
ANR	6907012	Symbol	start_pass_2_quant		6906635						
ANR	6907013	Symbol	cinfo -> output_width		6906635						
ANR	6907014	Symbol	* cinfo -> mem		6906635						
ANR	6907015	Symbol	desired		6906635						
ANR	6907016	Symbol	cinfo -> mem		6906635						
ANR	6907017	Symbol	JERR_QUANT_FEW_COLORS		6906635						
ANR	6907018	Symbol	* cinfo -> mem -> alloc_small		6906635						
ANR	6907019	Symbol	* * cinfo -> mem		6906635						
ANR	6907020	Symbol	hist2d		6906635						
ANR	6907021	Symbol	HIST_C0_ELEMS		6906635						
ANR	6907022	Symbol	cinfo -> mem -> alloc_small		6906635						
ANR	6907023	Symbol	i		6906635						
ANR	6907024	Symbol	JPOOL_IMAGE		6906635						
ANR	6907025	Symbol	* * cquantize		6906635						
ANR	6907026	Symbol	cinfo -> cquantize		6906635						
ANR	6907027	Symbol	* i		6906635						
ANR	6907028	Symbol	JERR_NOTIMPL		6906635						
ANR	6907029	Symbol	my_cquantizer		6906635						
ANR	6907030	Symbol	MAXNUMCOLORS		6906635						
