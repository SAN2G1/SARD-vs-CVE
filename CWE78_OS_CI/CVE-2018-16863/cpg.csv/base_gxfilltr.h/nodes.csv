command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1055152	File	data/converged/CVE-2018-16863_ghostpdl/base_gxfilltr.h								
ANR	1055153	Function	TEMPLATE_spot_into_trapezoids	38:0:1570:11891							
ANR	1055154	FunctionDef	"TEMPLATE_spot_into_trapezoids (line_list * ll , fixed band_mask)"		1055153	0					
ANR	1055155	CompoundStatement		40:0:1644:11891	1055153	0					
ANR	1055156	IdentifierDeclStatement	const fill_options fo = * ll -> fo ;	41:4:1650:1681	1055153	0	True				
ANR	1055157	IdentifierDecl	fo = * ll -> fo		1055153	0					
ANR	1055158	IdentifierDeclType	const fill_options		1055153	0					
ANR	1055159	Identifier	fo		1055153	1					
ANR	1055160	AssignmentExpression	fo = * ll -> fo		1055153	2		=			
ANR	1055161	Identifier	fo		1055153	0					
ANR	1055162	UnaryOperationExpression	* ll -> fo		1055153	1					
ANR	1055163	UnaryOperator	*		1055153	0					
ANR	1055164	PtrMemberAccess	ll -> fo		1055153	1					
ANR	1055165	Identifier	ll		1055153	0					
ANR	1055166	Identifier	fo		1055153	1					
ANR	1055167	IdentifierDeclStatement	int rule = fo . rule ;	42:4:1687:1705	1055153	1	True				
ANR	1055168	IdentifierDecl	rule = fo . rule		1055153	0					
ANR	1055169	IdentifierDeclType	int		1055153	0					
ANR	1055170	Identifier	rule		1055153	1					
ANR	1055171	AssignmentExpression	rule = fo . rule		1055153	2		=			
ANR	1055172	Identifier	rule		1055153	0					
ANR	1055173	MemberAccess	fo . rule		1055153	1					
ANR	1055174	Identifier	fo		1055153	0					
ANR	1055175	Identifier	rule		1055153	1					
ANR	1055176	IdentifierDeclStatement	const fixed y_limit = fo . ymax ;	43:4:1711:1740	1055153	2	True				
ANR	1055177	IdentifierDecl	y_limit = fo . ymax		1055153	0					
ANR	1055178	IdentifierDeclType	const fixed		1055153	0					
ANR	1055179	Identifier	y_limit		1055153	1					
ANR	1055180	AssignmentExpression	y_limit = fo . ymax		1055153	2		=			
ANR	1055181	Identifier	y_limit		1055153	0					
ANR	1055182	MemberAccess	fo . ymax		1055153	1					
ANR	1055183	Identifier	fo		1055153	0					
ANR	1055184	Identifier	ymax		1055153	1					
ANR	1055185	IdentifierDeclStatement	active_line * yll = ll -> y_list ;	44:4:1746:1775	1055153	3	True				
ANR	1055186	IdentifierDecl	* yll = ll -> y_list		1055153	0					
ANR	1055187	IdentifierDeclType	active_line *		1055153	0					
ANR	1055188	Identifier	yll		1055153	1					
ANR	1055189	AssignmentExpression	* yll = ll -> y_list		1055153	2		=			
ANR	1055190	Identifier	yll		1055153	0					
ANR	1055191	PtrMemberAccess	ll -> y_list		1055153	1					
ANR	1055192	Identifier	ll		1055153	0					
ANR	1055193	Identifier	y_list		1055153	1					
ANR	1055194	IdentifierDeclStatement	fixed y ;	45:4:1781:1788	1055153	4	True				
ANR	1055195	IdentifierDecl	y		1055153	0					
ANR	1055196	IdentifierDeclType	fixed		1055153	0					
ANR	1055197	Identifier	y		1055153	1					
ANR	1055198	IdentifierDeclStatement	int code ;	46:4:1794:1802	1055153	5	True				
ANR	1055199	IdentifierDecl	code		1055153	0					
ANR	1055200	IdentifierDeclType	int		1055153	0					
ANR	1055201	Identifier	code		1055153	1					
ANR	1055202	IdentifierDeclStatement	const bool all_bands = fo . is_spotan ;	47:4:1808:1843	1055153	6	True				
ANR	1055203	IdentifierDecl	all_bands = fo . is_spotan		1055153	0					
ANR	1055204	IdentifierDeclType	const bool		1055153	0					
ANR	1055205	Identifier	all_bands		1055153	1					
ANR	1055206	AssignmentExpression	all_bands = fo . is_spotan		1055153	2		=			
ANR	1055207	Identifier	all_bands		1055153	0					
ANR	1055208	MemberAccess	fo . is_spotan		1055153	1					
ANR	1055209	Identifier	fo		1055153	0					
ANR	1055210	Identifier	is_spotan		1055153	1					
ANR	1055211	IfStatement	if ( yll == 0 )		1055153	7					
ANR	1055212	Condition	yll == 0	49:8:1854:1861	1055153	0	True				
ANR	1055213	EqualityExpression	yll == 0		1055153	0		==			
ANR	1055214	Identifier	yll		1055153	0					
ANR	1055215	PrimaryExpression	0		1055153	1					
ANR	1055216	ReturnStatement	return 0 ;	50:8:1872:1880	1055153	1	True				
ANR	1055217	PrimaryExpression	0		1055153	0					
ANR	1055218	ExpressionStatement	y = yll -> start . y	51:4:1904:1920	1055153	8	True				
ANR	1055219	AssignmentExpression	y = yll -> start . y		1055153	0		=			
ANR	1055220	Identifier	y		1055153	0					
ANR	1055221	MemberAccess	yll -> start . y		1055153	1					
ANR	1055222	PtrMemberAccess	yll -> start		1055153	0					
ANR	1055223	Identifier	yll		1055153	0					
ANR	1055224	Identifier	start		1055153	1					
ANR	1055225	Identifier	y		1055153	1					
ANR	1055226	ExpressionStatement	ll -> x_list = 0	52:4:1947:1961	1055153	9	True				
ANR	1055227	AssignmentExpression	ll -> x_list = 0		1055153	0		=			
ANR	1055228	PtrMemberAccess	ll -> x_list		1055153	0					
ANR	1055229	Identifier	ll		1055153	0					
ANR	1055230	Identifier	x_list		1055153	1					
ANR	1055231	PrimaryExpression	0		1055153	1					
ANR	1055232	ExpressionStatement	ll -> x_head . x_current = min_fixed	53:4:1967:1999	1055153	10	True				
ANR	1055233	AssignmentExpression	ll -> x_head . x_current = min_fixed		1055153	0		=			
ANR	1055234	MemberAccess	ll -> x_head . x_current		1055153	0					
ANR	1055235	PtrMemberAccess	ll -> x_head		1055153	0					
ANR	1055236	Identifier	ll		1055153	0					
ANR	1055237	Identifier	x_head		1055153	1					
ANR	1055238	Identifier	x_current		1055153	1					
ANR	1055239	Identifier	min_fixed		1055153	1					
ANR	1055240	WhileStatement	while ( 1 )		1055153	11					
ANR	1055241	Condition	1	54:11:2037:2037	1055153	0	True				
ANR	1055242	PrimaryExpression	1		1055153	0					
ANR	1055243	CompoundStatement		18:8:449:476	1055153	1					
ANR	1055244	IdentifierDeclStatement	fixed y1 ;	55:8:2050:2058	1055153	0	True				
ANR	1055245	IdentifierDecl	y1		1055153	0					
ANR	1055246	IdentifierDeclType	fixed		1055153	0					
ANR	1055247	Identifier	y1		1055153	1					
ANR	1055248	IdentifierDeclStatement	active_line * alp ;	56:8:2068:2084	1055153	1	True				
ANR	1055249	IdentifierDecl	* alp		1055153	0					
ANR	1055250	IdentifierDeclType	active_line *		1055153	0					
ANR	1055251	Identifier	alp		1055153	1					
ANR	1055252	IdentifierDeclStatement	bool covering_pixel_centers ;	57:8:2094:2121	1055153	2	True				
ANR	1055253	IdentifierDecl	covering_pixel_centers		1055153	0					
ANR	1055254	IdentifierDeclType	bool		1055153	0					
ANR	1055255	Identifier	covering_pixel_centers		1055153	1					
ANR	1055256	ExpressionStatement	INCR ( iter )	59:8:2132:2142	1055153	3	True				
ANR	1055257	CallExpression	INCR ( iter )		1055153	0					
ANR	1055258	Callee	INCR		1055153	0					
ANR	1055259	Identifier	INCR		1055153	0					
ANR	1055260	ArgumentList	iter		1055153	1					
ANR	1055261	Argument	iter		1055153	0					
ANR	1055262	Identifier	iter		1055153	0					
ANR	1055263	WhileStatement	while ( yll != 0 && yll -> start . y == y )		1055153	4					
ANR	1055264	Condition	yll != 0 && yll -> start . y == y	61:15:2215:2243	1055153	0	True				
ANR	1055265	AndExpression	yll != 0 && yll -> start . y == y		1055153	0		&&			
ANR	1055266	EqualityExpression	yll != 0		1055153	0		!=			
ANR	1055267	Identifier	yll		1055153	0					
ANR	1055268	PrimaryExpression	0		1055153	1					
ANR	1055269	EqualityExpression	yll -> start . y == y		1055153	1		==			
ANR	1055270	MemberAccess	yll -> start . y		1055153	0					
ANR	1055271	PtrMemberAccess	yll -> start		1055153	0					
ANR	1055272	Identifier	yll		1055153	0					
ANR	1055273	Identifier	start		1055153	1					
ANR	1055274	Identifier	y		1055153	1					
ANR	1055275	Identifier	y		1055153	1					
ANR	1055276	CompoundStatement		23:12:615:645	1055153	1					
ANR	1055277	IdentifierDeclStatement	active_line * ynext = yll -> next ;	62:12:2260:2290	1055153	0	True				
ANR	1055278	IdentifierDecl	* ynext = yll -> next		1055153	0					
ANR	1055279	IdentifierDeclType	active_line *		1055153	0					
ANR	1055280	Identifier	ynext		1055153	1					
ANR	1055281	AssignmentExpression	* ynext = yll -> next		1055153	2		=			
ANR	1055282	Identifier	ynext		1055153	0					
ANR	1055283	PtrMemberAccess	yll -> next		1055153	1					
ANR	1055284	Identifier	yll		1055153	0					
ANR	1055285	Identifier	next		1055153	1					
ANR	1055286	ExpressionStatement	ll -> y_list = ynext	64:12:2342:2360	1055153	1	True				
ANR	1055287	AssignmentExpression	ll -> y_list = ynext		1055153	0		=			
ANR	1055288	PtrMemberAccess	ll -> y_list		1055153	0					
ANR	1055289	Identifier	ll		1055153	0					
ANR	1055290	Identifier	y_list		1055153	1					
ANR	1055291	Identifier	ynext		1055153	1					
ANR	1055292	IfStatement	if ( ll -> y_line == yll )		1055153	2					
ANR	1055293	Condition	ll -> y_line == yll	65:16:2378:2394	1055153	0	True				
ANR	1055294	EqualityExpression	ll -> y_line == yll		1055153	0		==			
ANR	1055295	PtrMemberAccess	ll -> y_line		1055153	0					
ANR	1055296	Identifier	ll		1055153	0					
ANR	1055297	Identifier	y_line		1055153	1					
ANR	1055298	Identifier	yll		1055153	1					
ANR	1055299	ExpressionStatement	ll -> y_line = ynext	66:16:2413:2431	1055153	1	True				
ANR	1055300	AssignmentExpression	ll -> y_line = ynext		1055153	0		=			
ANR	1055301	PtrMemberAccess	ll -> y_line		1055153	0					
ANR	1055302	Identifier	ll		1055153	0					
ANR	1055303	Identifier	y_line		1055153	1					
ANR	1055304	Identifier	ynext		1055153	1					
ANR	1055305	IfStatement	if ( ynext != NULL )		1055153	3					
ANR	1055306	Condition	ynext != NULL	67:16:2449:2461	1055153	0	True				
ANR	1055307	EqualityExpression	ynext != NULL		1055153	0		!=			
ANR	1055308	Identifier	ynext		1055153	0					
ANR	1055309	Identifier	NULL		1055153	1					
ANR	1055310	ExpressionStatement	ynext -> prev = NULL	68:16:2480:2498	1055153	1	True				
ANR	1055311	AssignmentExpression	ynext -> prev = NULL		1055153	0		=			
ANR	1055312	PtrMemberAccess	ynext -> prev		1055153	0					
ANR	1055313	Identifier	ynext		1055153	0					
ANR	1055314	Identifier	prev		1055153	1					
ANR	1055315	Identifier	NULL		1055153	1					
ANR	1055316	IfStatement	if ( yll -> direction == DIR_HORIZONTAL )		1055153	4					
ANR	1055317	Condition	yll -> direction == DIR_HORIZONTAL	69:16:2516:2547	1055153	0	True				
ANR	1055318	EqualityExpression	yll -> direction == DIR_HORIZONTAL		1055153	0		==			
ANR	1055319	PtrMemberAccess	yll -> direction		1055153	0					
ANR	1055320	Identifier	yll		1055153	0					
ANR	1055321	Identifier	direction		1055153	1					
ANR	1055322	Identifier	DIR_HORIZONTAL		1055153	1					
ANR	1055323	CompoundStatement		36:16:1159:1169	1055153	1					
ANR	1055324	IdentifierDeclStatement	int yi = fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) ) ;	74:16:2717:2786	1055153	0	True				
ANR	1055325	IdentifierDecl	yi = fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) )		1055153	0					
ANR	1055326	IdentifierDeclType	int		1055153	0					
ANR	1055327	Identifier	yi		1055153	1					
ANR	1055328	AssignmentExpression	yi = fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) )		1055153	2		=			
ANR	1055329	Identifier	yi		1055153	0					
ANR	1055330	CallExpression	fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) )		1055153	1					
ANR	1055331	Callee	fixed2int_pixround		1055153	0					
ANR	1055332	Identifier	fixed2int_pixround		1055153	0					
ANR	1055333	ArgumentList	y - ( ! FILL_ADJUST ? 0 : fo . adjust_below )		1055153	1					
ANR	1055334	Argument	y - ( ! FILL_ADJUST ? 0 : fo . adjust_below )		1055153	0					
ANR	1055335	AdditiveExpression	y - ( ! FILL_ADJUST ? 0 : fo . adjust_below )		1055153	0		-			
ANR	1055336	Identifier	y		1055153	0					
ANR	1055337	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_below		1055153	1					
ANR	1055338	Condition	! FILL_ADJUST		1055153	0					
ANR	1055339	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055340	UnaryOperator	!		1055153	0					
ANR	1055341	Identifier	FILL_ADJUST		1055153	1					
ANR	1055342	PrimaryExpression	0		1055153	1					
ANR	1055343	MemberAccess	fo . adjust_below		1055153	2					
ANR	1055344	Identifier	fo		1055153	0					
ANR	1055345	Identifier	adjust_below		1055153	1					
ANR	1055346	IdentifierDeclStatement	"int xi , wi ;"	75:16:2804:2814	1055153	1	True				
ANR	1055347	IdentifierDecl	xi		1055153	0					
ANR	1055348	IdentifierDeclType	int		1055153	0					
ANR	1055349	Identifier	xi		1055153	1					
ANR	1055350	IdentifierDecl	wi		1055153	1					
ANR	1055351	IdentifierDeclType	int		1055153	0					
ANR	1055352	Identifier	wi		1055153	1					
ANR	1055353	IfStatement	if ( yll -> start . x <= yll -> end . x )		1055153	2					
ANR	1055354	Condition	yll -> start . x <= yll -> end . x	77:20:2837:2862	1055153	0	True				
ANR	1055355	RelationalExpression	yll -> start . x <= yll -> end . x		1055153	0		<=			
ANR	1055356	MemberAccess	yll -> start . x		1055153	0					
ANR	1055357	PtrMemberAccess	yll -> start		1055153	0					
ANR	1055358	Identifier	yll		1055153	0					
ANR	1055359	Identifier	start		1055153	1					
ANR	1055360	Identifier	x		1055153	1					
ANR	1055361	MemberAccess	yll -> end . x		1055153	1					
ANR	1055362	PtrMemberAccess	yll -> end		1055153	0					
ANR	1055363	Identifier	yll		1055153	0					
ANR	1055364	Identifier	end		1055153	1					
ANR	1055365	Identifier	x		1055153	1					
ANR	1055366	CompoundStatement		38:48:1220:1220	1055153	1					
ANR	1055367	ExpressionStatement	xi = fixed2int_pixround ( yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )	78:20:2887:2962	1055153	0	True				
ANR	1055368	AssignmentExpression	xi = fixed2int_pixround ( yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		1055153	0		=			
ANR	1055369	Identifier	xi		1055153	0					
ANR	1055370	CallExpression	fixed2int_pixround ( yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		1055153	1					
ANR	1055371	Callee	fixed2int_pixround		1055153	0					
ANR	1055372	Identifier	fixed2int_pixround		1055153	0					
ANR	1055373	ArgumentList	yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	1					
ANR	1055374	Argument	yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	0					
ANR	1055375	AdditiveExpression	yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	0		-			
ANR	1055376	MemberAccess	yll -> start . x		1055153	0					
ANR	1055377	PtrMemberAccess	yll -> start		1055153	0					
ANR	1055378	Identifier	yll		1055153	0					
ANR	1055379	Identifier	start		1055153	1					
ANR	1055380	Identifier	x		1055153	1					
ANR	1055381	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_left		1055153	1					
ANR	1055382	Condition	! FILL_ADJUST		1055153	0					
ANR	1055383	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055384	UnaryOperator	!		1055153	0					
ANR	1055385	Identifier	FILL_ADJUST		1055153	1					
ANR	1055386	PrimaryExpression	0		1055153	1					
ANR	1055387	MemberAccess	fo . adjust_left		1055153	2					
ANR	1055388	Identifier	fo		1055153	0					
ANR	1055389	Identifier	adjust_left		1055153	1					
ANR	1055390	ExpressionStatement	wi = fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi	79:20:2984:3063	1055153	1	True				
ANR	1055391	AssignmentExpression	wi = fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		1055153	0		=			
ANR	1055392	Identifier	wi		1055153	0					
ANR	1055393	AdditiveExpression	fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		1055153	1		-			
ANR	1055394	CallExpression	fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		1055153	0					
ANR	1055395	Callee	fixed2int_pixround		1055153	0					
ANR	1055396	Identifier	fixed2int_pixround		1055153	0					
ANR	1055397	ArgumentList	yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	1					
ANR	1055398	Argument	yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	0					
ANR	1055399	AdditiveExpression	yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	0		+			
ANR	1055400	MemberAccess	yll -> end . x		1055153	0					
ANR	1055401	PtrMemberAccess	yll -> end		1055153	0					
ANR	1055402	Identifier	yll		1055153	0					
ANR	1055403	Identifier	end		1055153	1					
ANR	1055404	Identifier	x		1055153	1					
ANR	1055405	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_right		1055153	1					
ANR	1055406	Condition	! FILL_ADJUST		1055153	0					
ANR	1055407	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055408	UnaryOperator	!		1055153	0					
ANR	1055409	Identifier	FILL_ADJUST		1055153	1					
ANR	1055410	PrimaryExpression	0		1055153	1					
ANR	1055411	MemberAccess	fo . adjust_right		1055153	2					
ANR	1055412	Identifier	fo		1055153	0					
ANR	1055413	Identifier	adjust_right		1055153	1					
ANR	1055414	Identifier	xi		1055153	1					
ANR	1055415	ElseStatement	else		1055153	0					
ANR	1055416	CompoundStatement		41:23:1443:1443	1055153	0					
ANR	1055417	ExpressionStatement	xi = fixed2int_pixround ( yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )	81:20:3110:3183	1055153	0	True				
ANR	1055418	AssignmentExpression	xi = fixed2int_pixround ( yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		1055153	0		=			
ANR	1055419	Identifier	xi		1055153	0					
ANR	1055420	CallExpression	fixed2int_pixround ( yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		1055153	1					
ANR	1055421	Callee	fixed2int_pixround		1055153	0					
ANR	1055422	Identifier	fixed2int_pixround		1055153	0					
ANR	1055423	ArgumentList	yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	1					
ANR	1055424	Argument	yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	0					
ANR	1055425	AdditiveExpression	yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	0		-			
ANR	1055426	MemberAccess	yll -> end . x		1055153	0					
ANR	1055427	PtrMemberAccess	yll -> end		1055153	0					
ANR	1055428	Identifier	yll		1055153	0					
ANR	1055429	Identifier	end		1055153	1					
ANR	1055430	Identifier	x		1055153	1					
ANR	1055431	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_left		1055153	1					
ANR	1055432	Condition	! FILL_ADJUST		1055153	0					
ANR	1055433	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055434	UnaryOperator	!		1055153	0					
ANR	1055435	Identifier	FILL_ADJUST		1055153	1					
ANR	1055436	PrimaryExpression	0		1055153	1					
ANR	1055437	MemberAccess	fo . adjust_left		1055153	2					
ANR	1055438	Identifier	fo		1055153	0					
ANR	1055439	Identifier	adjust_left		1055153	1					
ANR	1055440	ExpressionStatement	wi = fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi	82:20:3205:3286	1055153	1	True				
ANR	1055441	AssignmentExpression	wi = fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		1055153	0		=			
ANR	1055442	Identifier	wi		1055153	0					
ANR	1055443	AdditiveExpression	fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		1055153	1		-			
ANR	1055444	CallExpression	fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		1055153	0					
ANR	1055445	Callee	fixed2int_pixround		1055153	0					
ANR	1055446	Identifier	fixed2int_pixround		1055153	0					
ANR	1055447	ArgumentList	yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	1					
ANR	1055448	Argument	yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	0					
ANR	1055449	AdditiveExpression	yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	0		+			
ANR	1055450	MemberAccess	yll -> start . x		1055153	0					
ANR	1055451	PtrMemberAccess	yll -> start		1055153	0					
ANR	1055452	Identifier	yll		1055153	0					
ANR	1055453	Identifier	start		1055153	1					
ANR	1055454	Identifier	x		1055153	1					
ANR	1055455	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_right		1055153	1					
ANR	1055456	Condition	! FILL_ADJUST		1055153	0					
ANR	1055457	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055458	UnaryOperator	!		1055153	0					
ANR	1055459	Identifier	FILL_ADJUST		1055153	1					
ANR	1055460	PrimaryExpression	0		1055153	1					
ANR	1055461	MemberAccess	fo . adjust_right		1055153	2					
ANR	1055462	Identifier	fo		1055153	0					
ANR	1055463	Identifier	adjust_right		1055153	1					
ANR	1055464	Identifier	xi		1055153	1					
ANR	1055465	ExpressionStatement	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xi , yi , wi , 1 )"	84:16:3322:3375	1055153	3	True				
ANR	1055466	AssignmentExpression	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xi , yi , wi , 1 )"		1055153	0		=			
ANR	1055467	Identifier	code		1055153	0					
ANR	1055468	CallExpression	"LOOP_FILL_RECTANGLE_DIRECT ( & fo , xi , yi , wi , 1 )"		1055153	1					
ANR	1055469	Callee	LOOP_FILL_RECTANGLE_DIRECT		1055153	0					
ANR	1055470	Identifier	LOOP_FILL_RECTANGLE_DIRECT		1055153	0					
ANR	1055471	ArgumentList	& fo		1055153	1					
ANR	1055472	Argument	& fo		1055153	0					
ANR	1055473	UnaryOperationExpression	& fo		1055153	0					
ANR	1055474	UnaryOperator	&		1055153	0					
ANR	1055475	Identifier	fo		1055153	1					
ANR	1055476	Argument	xi		1055153	1					
ANR	1055477	Identifier	xi		1055153	0					
ANR	1055478	Argument	yi		1055153	2					
ANR	1055479	Identifier	yi		1055153	0					
ANR	1055480	Argument	wi		1055153	3					
ANR	1055481	Identifier	wi		1055153	0					
ANR	1055482	Argument	1		1055153	4					
ANR	1055483	PrimaryExpression	1		1055153	0					
ANR	1055484	IfStatement	if ( code < 0 )		1055153	4					
ANR	1055485	Condition	code < 0	85:20:3397:3404	1055153	0	True				
ANR	1055486	RelationalExpression	code < 0		1055153	0		<			
ANR	1055487	Identifier	code		1055153	0					
ANR	1055488	PrimaryExpression	0		1055153	1					
ANR	1055489	ReturnStatement	return code ;	86:20:3427:3438	1055153	1	True				
ANR	1055490	Identifier	code		1055153	0					
ANR	1055491	ElseStatement	else		1055153	0					
ANR	1055492	ExpressionStatement	"insert_x_new ( yll , ll )"	88:16:3475:3496	1055153	0	True				
ANR	1055493	CallExpression	"insert_x_new ( yll , ll )"		1055153	0					
ANR	1055494	Callee	insert_x_new		1055153	0					
ANR	1055495	Identifier	insert_x_new		1055153	0					
ANR	1055496	ArgumentList	yll		1055153	1					
ANR	1055497	Argument	yll		1055153	0					
ANR	1055498	Identifier	yll		1055153	0					
ANR	1055499	Argument	ll		1055153	1					
ANR	1055500	Identifier	ll		1055153	0					
ANR	1055501	ExpressionStatement	yll = ynext	89:12:3510:3521	1055153	5	True				
ANR	1055502	AssignmentExpression	yll = ynext		1055153	0		=			
ANR	1055503	Identifier	yll		1055153	0					
ANR	1055504	Identifier	ynext		1055153	1					
ANR	1055505	IfStatement	if ( ll -> x_list == 0 )		1055153	5					
ANR	1055506	Condition	ll -> x_list == 0	92:12:3605:3619	1055153	0	True				
ANR	1055507	EqualityExpression	ll -> x_list == 0		1055153	0		==			
ANR	1055508	PtrMemberAccess	ll -> x_list		1055153	0					
ANR	1055509	Identifier	ll		1055153	0					
ANR	1055510	Identifier	x_list		1055153	1					
ANR	1055511	PrimaryExpression	0		1055153	1					
ANR	1055512	CompoundStatement		53:29:1977:1977	1055153	1					
ANR	1055513	IfStatement	if ( yll == 0 )		1055153	0					
ANR	1055514	Condition	yll == 0	93:16:3682:3689	1055153	0	True				
ANR	1055515	EqualityExpression	yll == 0		1055153	0		==			
ANR	1055516	Identifier	yll		1055153	0					
ANR	1055517	PrimaryExpression	0		1055153	1					
ANR	1055518	BreakStatement	break ;	94:16:3708:3713	1055153	1	True				
ANR	1055519	ExpressionStatement	y = yll -> start . y	97:12:3860:3876	1055153	1	True				
ANR	1055520	AssignmentExpression	y = yll -> start . y		1055153	0		=			
ANR	1055521	Identifier	y		1055153	0					
ANR	1055522	MemberAccess	yll -> start . y		1055153	1					
ANR	1055523	PtrMemberAccess	yll -> start		1055153	0					
ANR	1055524	Identifier	yll		1055153	0					
ANR	1055525	Identifier	start		1055153	1					
ANR	1055526	Identifier	y		1055153	1					
ANR	1055527	ExpressionStatement	ll -> h_list1 = ll -> h_list0	98:12:3890:3915	1055153	2	True				
ANR	1055528	AssignmentExpression	ll -> h_list1 = ll -> h_list0		1055153	0		=			
ANR	1055529	PtrMemberAccess	ll -> h_list1		1055153	0					
ANR	1055530	Identifier	ll		1055153	0					
ANR	1055531	Identifier	h_list1		1055153	1					
ANR	1055532	PtrMemberAccess	ll -> h_list0		1055153	1					
ANR	1055533	Identifier	ll		1055153	0					
ANR	1055534	Identifier	h_list0		1055153	1					
ANR	1055535	ExpressionStatement	ll -> h_list0 = 0	99:12:3929:3944	1055153	3	True				
ANR	1055536	AssignmentExpression	ll -> h_list0 = 0		1055153	0		=			
ANR	1055537	PtrMemberAccess	ll -> h_list0		1055153	0					
ANR	1055538	Identifier	ll		1055153	0					
ANR	1055539	Identifier	h_list0		1055153	1					
ANR	1055540	PrimaryExpression	0		1055153	1					
ANR	1055541	ContinueStatement	continue ;	100:12:3958:3966	1055153	4	True				
ANR	1055542	ExpressionStatement	y1 = ( yll != 0 ? yll -> start . y : ll -> y_break )	106:8:4192:4236	1055153	6	True				
ANR	1055543	AssignmentExpression	y1 = ( yll != 0 ? yll -> start . y : ll -> y_break )		1055153	0		=			
ANR	1055544	Identifier	y1		1055153	0					
ANR	1055545	ConditionalExpression	yll != 0 ? yll -> start . y : ll -> y_break		1055153	1					
ANR	1055546	Condition	yll != 0		1055153	0					
ANR	1055547	EqualityExpression	yll != 0		1055153	0		!=			
ANR	1055548	Identifier	yll		1055153	0					
ANR	1055549	PrimaryExpression	0		1055153	1					
ANR	1055550	MemberAccess	yll -> start . y		1055153	1					
ANR	1055551	PtrMemberAccess	yll -> start		1055153	0					
ANR	1055552	Identifier	yll		1055153	0					
ANR	1055553	Identifier	start		1055153	1					
ANR	1055554	Identifier	y		1055153	1					
ANR	1055555	PtrMemberAccess	ll -> y_break		1055153	2					
ANR	1055556	Identifier	ll		1055153	0					
ANR	1055557	Identifier	y_break		1055153	1					
ANR	1055558	CompoundStatement		70:12:2680:2709	1055153	7					
ANR	1055559	IdentifierDeclStatement	fixed y_band = y | ~band_mask ;	109:12:4325:4354	1055153	0	True				
ANR	1055560	IdentifierDecl	y_band = y | ~band_mask		1055153	0					
ANR	1055561	IdentifierDeclType	fixed		1055153	0					
ANR	1055562	Identifier	y_band		1055153	1					
ANR	1055563	AssignmentExpression	y_band = y | ~band_mask		1055153	2		=			
ANR	1055564	Identifier	y_band		1055153	0					
ANR	1055565	InclusiveOrExpression	y | ~band_mask		1055153	1		|			
ANR	1055566	Identifier	y		1055153	0					
ANR	1055567	Identifier	~band_mask		1055153	1					
ANR	1055568	IfStatement	if ( y1 > y_band )		1055153	1					
ANR	1055569	Condition	y1 > y_band	111:16:4373:4383	1055153	0	True				
ANR	1055570	RelationalExpression	y1 > y_band		1055153	0		>			
ANR	1055571	Identifier	y1		1055153	0					
ANR	1055572	Identifier	y_band		1055153	1					
ANR	1055573	ExpressionStatement	y1 = y_band + 1	112:16:4402:4417	1055153	1	True				
ANR	1055574	AssignmentExpression	y1 = y_band + 1		1055153	0		=			
ANR	1055575	Identifier	y1		1055153	0					
ANR	1055576	AdditiveExpression	y_band + 1		1055153	1		+			
ANR	1055577	Identifier	y_band		1055153	0					
ANR	1055578	PrimaryExpression	1		1055153	1					
ANR	1055579	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		1055153	8					
ANR	1055580	ForInit	alp = ll -> x_list ;	114:13:4442:4458	1055153	0	True				
ANR	1055581	AssignmentExpression	alp = ll -> x_list		1055153	0		=			
ANR	1055582	Identifier	alp		1055153	0					
ANR	1055583	PtrMemberAccess	ll -> x_list		1055153	1					
ANR	1055584	Identifier	ll		1055153	0					
ANR	1055585	Identifier	x_list		1055153	1					
ANR	1055586	Condition	alp != 0	114:31:4460:4467	1055153	1	True				
ANR	1055587	EqualityExpression	alp != 0		1055153	0		!=			
ANR	1055588	Identifier	alp		1055153	0					
ANR	1055589	PrimaryExpression	0		1055153	1					
ANR	1055590	AssignmentExpression	alp = alp -> next	114:41:4470:4484	1055153	2	True	=			
ANR	1055591	Identifier	alp		1055153	0					
ANR	1055592	PtrMemberAccess	alp -> next		1055153	1					
ANR	1055593	Identifier	alp		1055153	0					
ANR	1055594	Identifier	next		1055153	1					
ANR	1055595	CompoundStatement		75:58:2842:2842	1055153	3					
ANR	1055596	IfStatement	if ( alp -> end . y < y1 )		1055153	0					
ANR	1055597	Condition	alp -> end . y < y1	115:16:4505:4519	1055153	0	True				
ANR	1055598	RelationalExpression	alp -> end . y < y1		1055153	0		<			
ANR	1055599	MemberAccess	alp -> end . y		1055153	0					
ANR	1055600	PtrMemberAccess	alp -> end		1055153	0					
ANR	1055601	Identifier	alp		1055153	0					
ANR	1055602	Identifier	end		1055153	1					
ANR	1055603	Identifier	y		1055153	1					
ANR	1055604	Identifier	y1		1055153	1					
ANR	1055605	ExpressionStatement	y1 = alp -> end . y	116:16:4538:4553	1055153	1	True				
ANR	1055606	AssignmentExpression	y1 = alp -> end . y		1055153	0		=			
ANR	1055607	Identifier	y1		1055153	0					
ANR	1055608	MemberAccess	alp -> end . y		1055153	1					
ANR	1055609	PtrMemberAccess	alp -> end		1055153	0					
ANR	1055610	Identifier	alp		1055153	0					
ANR	1055611	Identifier	end		1055153	1					
ANR	1055612	Identifier	y		1055153	1					
ANR	1055613	Statement	ifdef	118:2:4567:4571	1055153	9	True				
ANR	1055614	Statement	DEBUG	118:8:4573:4577	1055153	10	True				
ANR	1055615	IfStatement	if ( gs_debug_c ( 'F' ) )		1055153	11					
ANR	1055616	Condition	gs_debug_c ( 'F' )	119:16:4595:4609	1055153	0	True				
ANR	1055617	CallExpression	gs_debug_c ( 'F' )		1055153	0					
ANR	1055618	Callee	gs_debug_c		1055153	0					
ANR	1055619	Identifier	gs_debug_c		1055153	0					
ANR	1055620	ArgumentList	'F'		1055153	1					
ANR	1055621	Argument	'F'		1055153	0					
ANR	1055622	PrimaryExpression	'F'		1055153	0					
ANR	1055623	CompoundStatement		80:33:2967:2967	1055153	1					
ANR	1055624	ExpressionStatement	"dmlprintf2 ( ll -> memory , ""[F]before loop: y=%f y1=%f:\\n"" , fixed2float ( y ) , fixed2float ( y1 ) )"	120:16:4630:4744	1055153	0	True				
ANR	1055625	CallExpression	"dmlprintf2 ( ll -> memory , ""[F]before loop: y=%f y1=%f:\\n"" , fixed2float ( y ) , fixed2float ( y1 ) )"		1055153	0					
ANR	1055626	Callee	dmlprintf2		1055153	0					
ANR	1055627	Identifier	dmlprintf2		1055153	0					
ANR	1055628	ArgumentList	ll -> memory		1055153	1					
ANR	1055629	Argument	ll -> memory		1055153	0					
ANR	1055630	PtrMemberAccess	ll -> memory		1055153	0					
ANR	1055631	Identifier	ll		1055153	0					
ANR	1055632	Identifier	memory		1055153	1					
ANR	1055633	Argument	"""[F]before loop: y=%f y1=%f:\\n"""		1055153	1					
ANR	1055634	PrimaryExpression	"""[F]before loop: y=%f y1=%f:\\n"""		1055153	0					
ANR	1055635	Argument	fixed2float ( y )		1055153	2					
ANR	1055636	CallExpression	fixed2float ( y )		1055153	0					
ANR	1055637	Callee	fixed2float		1055153	0					
ANR	1055638	Identifier	fixed2float		1055153	0					
ANR	1055639	ArgumentList	y		1055153	1					
ANR	1055640	Argument	y		1055153	0					
ANR	1055641	Identifier	y		1055153	0					
ANR	1055642	Argument	fixed2float ( y1 )		1055153	3					
ANR	1055643	CallExpression	fixed2float ( y1 )		1055153	0					
ANR	1055644	Callee	fixed2float		1055153	0					
ANR	1055645	Identifier	fixed2float		1055153	0					
ANR	1055646	ArgumentList	y1		1055153	1					
ANR	1055647	Argument	y1		1055153	0					
ANR	1055648	Identifier	y1		1055153	0					
ANR	1055649	ExpressionStatement	"print_line_list ( ll -> memory , ll -> x_list )"	122:16:4762:4801	1055153	1	True				
ANR	1055650	CallExpression	"print_line_list ( ll -> memory , ll -> x_list )"		1055153	0					
ANR	1055651	Callee	print_line_list		1055153	0					
ANR	1055652	Identifier	print_line_list		1055153	0					
ANR	1055653	ArgumentList	ll -> memory		1055153	1					
ANR	1055654	Argument	ll -> memory		1055153	0					
ANR	1055655	PtrMemberAccess	ll -> memory		1055153	0					
ANR	1055656	Identifier	ll		1055153	0					
ANR	1055657	Identifier	memory		1055153	1					
ANR	1055658	Argument	ll -> x_list		1055153	1					
ANR	1055659	PtrMemberAccess	ll -> x_list		1055153	0					
ANR	1055660	Identifier	ll		1055153	0					
ANR	1055661	Identifier	x_list		1055153	1					
ANR	1055662	Statement	endif	124:2:4819:4823	1055153	12	True				
ANR	1055663	IfStatement	if ( y == y1 )		1055153	13					
ANR	1055664	Condition	y == y1	125:12:4837:4843	1055153	0	True				
ANR	1055665	EqualityExpression	y == y1		1055153	0		==			
ANR	1055666	Identifier	y		1055153	0					
ANR	1055667	Identifier	y1		1055153	1					
ANR	1055668	CompoundStatement		86:21:3201:3201	1055153	1					
ANR	1055669	ExpressionStatement	"code = process_h_segments ( ll , y )"	126:12:4860:4892	1055153	0	True				
ANR	1055670	AssignmentExpression	"code = process_h_segments ( ll , y )"		1055153	0		=			
ANR	1055671	Identifier	code		1055153	0					
ANR	1055672	CallExpression	"process_h_segments ( ll , y )"		1055153	1					
ANR	1055673	Callee	process_h_segments		1055153	0					
ANR	1055674	Identifier	process_h_segments		1055153	0					
ANR	1055675	ArgumentList	ll		1055153	1					
ANR	1055676	Argument	ll		1055153	0					
ANR	1055677	Identifier	ll		1055153	0					
ANR	1055678	Argument	y		1055153	1					
ANR	1055679	Identifier	y		1055153	0					
ANR	1055680	IfStatement	if ( code < 0 )		1055153	1					
ANR	1055681	Condition	code < 0	127:16:4910:4917	1055153	0	True				
ANR	1055682	RelationalExpression	code < 0		1055153	0		<			
ANR	1055683	Identifier	code		1055153	0					
ANR	1055684	PrimaryExpression	0		1055153	1					
ANR	1055685	ReturnStatement	return code ;	128:16:4936:4947	1055153	1	True				
ANR	1055686	Identifier	code		1055153	0					
ANR	1055687	CompoundStatement		90:14:3318:3350	1055153	2					
ANR	1055688	IdentifierDeclStatement	"int code1 = move_al_by_y ( ll , y1 ) ;"	129:14:4963:4995	1055153	0	True				
ANR	1055689	IdentifierDecl	"code1 = move_al_by_y ( ll , y1 )"		1055153	0					
ANR	1055690	IdentifierDeclType	int		1055153	0					
ANR	1055691	Identifier	code1		1055153	1					
ANR	1055692	AssignmentExpression	"code1 = move_al_by_y ( ll , y1 )"		1055153	2		=			
ANR	1055693	Identifier	code1		1055153	0					
ANR	1055694	CallExpression	"move_al_by_y ( ll , y1 )"		1055153	1					
ANR	1055695	Callee	move_al_by_y		1055153	0					
ANR	1055696	Identifier	move_al_by_y		1055153	0					
ANR	1055697	ArgumentList	ll		1055153	1					
ANR	1055698	Argument	ll		1055153	0					
ANR	1055699	Identifier	ll		1055153	0					
ANR	1055700	Argument	y1		1055153	1					
ANR	1055701	Identifier	y1		1055153	0					
ANR	1055702	IfStatement	if ( code1 < 0 )		1055153	1					
ANR	1055703	Condition	code1 < 0	130:20:5017:5025	1055153	0	True				
ANR	1055704	RelationalExpression	code1 < 0		1055153	0		<			
ANR	1055705	Identifier	code1		1055153	0					
ANR	1055706	PrimaryExpression	0		1055153	1					
ANR	1055707	ReturnStatement	return code1 ;	131:20:5048:5060	1055153	1	True				
ANR	1055708	Identifier	code1		1055153	0					
ANR	1055709	IfStatement	if ( code > 0 )		1055153	3					
ANR	1055710	Condition	code > 0	133:16:5092:5099	1055153	0	True				
ANR	1055711	RelationalExpression	code > 0		1055153	0		>			
ANR	1055712	Identifier	code		1055153	0					
ANR	1055713	PrimaryExpression	0		1055153	1					
ANR	1055714	CompoundStatement		94:26:3457:3457	1055153	1					
ANR	1055715	ExpressionStatement	yll = ll -> y_list	134:16:5120:5136	1055153	0	True				
ANR	1055716	AssignmentExpression	yll = ll -> y_list		1055153	0		=			
ANR	1055717	Identifier	yll		1055153	0					
ANR	1055718	PtrMemberAccess	ll -> y_list		1055153	1					
ANR	1055719	Identifier	ll		1055153	0					
ANR	1055720	Identifier	y_list		1055153	1					
ANR	1055721	ContinueStatement	continue ;	135:16:5209:5217	1055153	1	True				
ANR	1055722	IfStatement	if ( y >= y_limit )		1055153	14					
ANR	1055723	Condition	y >= y_limit	139:12:5256:5267	1055153	0	True				
ANR	1055724	RelationalExpression	y >= y_limit		1055153	0		>=			
ANR	1055725	Identifier	y		1055153	0					
ANR	1055726	Identifier	y_limit		1055153	1					
ANR	1055727	BreakStatement	break ;	140:12:5282:5287	1055153	1	True				
ANR	1055728	ExpressionStatement	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"	142:8:5354:5540	1055153	15	True				
ANR	1055729	AssignmentExpression	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		1055153	0		=			
ANR	1055730	Identifier	covering_pixel_centers		1055153	0					
ANR	1055731	CallExpression	"COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		1055153	1					
ANR	1055732	Callee	COVERING_PIXEL_CENTERS		1055153	0					
ANR	1055733	Identifier	COVERING_PIXEL_CENTERS		1055153	0					
ANR	1055734	ArgumentList	y		1055153	1					
ANR	1055735	Argument	y		1055153	0					
ANR	1055736	Identifier	y		1055153	0					
ANR	1055737	Argument	y1		1055153	1					
ANR	1055738	Identifier	y1		1055153	0					
ANR	1055739	Argument	! FILL_ADJUST ? 0 : fo . adjust_below		1055153	2					
ANR	1055740	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_below		1055153	0					
ANR	1055741	Condition	! FILL_ADJUST		1055153	0					
ANR	1055742	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055743	UnaryOperator	!		1055153	0					
ANR	1055744	Identifier	FILL_ADJUST		1055153	1					
ANR	1055745	PrimaryExpression	0		1055153	1					
ANR	1055746	MemberAccess	fo . adjust_below		1055153	2					
ANR	1055747	Identifier	fo		1055153	0					
ANR	1055748	Identifier	adjust_below		1055153	1					
ANR	1055749	Argument	! FILL_ADJUST ? 0 : fo . adjust_above		1055153	3					
ANR	1055750	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_above		1055153	0					
ANR	1055751	Condition	! FILL_ADJUST		1055153	0					
ANR	1055752	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055753	UnaryOperator	!		1055153	0					
ANR	1055754	Identifier	FILL_ADJUST		1055153	1					
ANR	1055755	PrimaryExpression	0		1055153	1					
ANR	1055756	MemberAccess	fo . adjust_above		1055153	2					
ANR	1055757	Identifier	fo		1055153	0					
ANR	1055758	Identifier	adjust_above		1055153	1					
ANR	1055759	IfStatement	if ( y != y1 )		1055153	16					
ANR	1055760	Condition	y != y1	145:12:5554:5560	1055153	0	True				
ANR	1055761	EqualityExpression	y != y1		1055153	0		!=			
ANR	1055762	Identifier	y		1055153	0					
ANR	1055763	Identifier	y1		1055153	1					
ANR	1055764	CompoundStatement		106:21:3918:3918	1055153	1					
ANR	1055765	ExpressionStatement	"intersect_al ( ll , y , & y1 , ( covering_pixel_centers ? 1 : - 1 ) , all_bands )"	146:12:5577:5647	1055153	0	True				
ANR	1055766	CallExpression	"intersect_al ( ll , y , & y1 , ( covering_pixel_centers ? 1 : - 1 ) , all_bands )"		1055153	0					
ANR	1055767	Callee	intersect_al		1055153	0					
ANR	1055768	Identifier	intersect_al		1055153	0					
ANR	1055769	ArgumentList	ll		1055153	1					
ANR	1055770	Argument	ll		1055153	0					
ANR	1055771	Identifier	ll		1055153	0					
ANR	1055772	Argument	y		1055153	1					
ANR	1055773	Identifier	y		1055153	0					
ANR	1055774	Argument	& y1		1055153	2					
ANR	1055775	UnaryOperationExpression	& y1		1055153	0					
ANR	1055776	UnaryOperator	&		1055153	0					
ANR	1055777	Identifier	y1		1055153	1					
ANR	1055778	Argument	covering_pixel_centers ? 1 : - 1		1055153	3					
ANR	1055779	ConditionalExpression	covering_pixel_centers ? 1 : - 1		1055153	0					
ANR	1055780	Condition	covering_pixel_centers		1055153	0					
ANR	1055781	Identifier	covering_pixel_centers		1055153	0					
ANR	1055782	PrimaryExpression	1		1055153	1					
ANR	1055783	UnaryOperationExpression	- 1		1055153	2					
ANR	1055784	UnaryOperator	-		1055153	0					
ANR	1055785	PrimaryExpression	1		1055153	1					
ANR	1055786	Argument	all_bands		1055153	4					
ANR	1055787	Identifier	all_bands		1055153	0					
ANR	1055788	ExpressionStatement	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"	147:12:5682:5868	1055153	1	True				
ANR	1055789	AssignmentExpression	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		1055153	0		=			
ANR	1055790	Identifier	covering_pixel_centers		1055153	0					
ANR	1055791	CallExpression	"COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		1055153	1					
ANR	1055792	Callee	COVERING_PIXEL_CENTERS		1055153	0					
ANR	1055793	Identifier	COVERING_PIXEL_CENTERS		1055153	0					
ANR	1055794	ArgumentList	y		1055153	1					
ANR	1055795	Argument	y		1055153	0					
ANR	1055796	Identifier	y		1055153	0					
ANR	1055797	Argument	y1		1055153	1					
ANR	1055798	Identifier	y1		1055153	0					
ANR	1055799	Argument	! FILL_ADJUST ? 0 : fo . adjust_below		1055153	2					
ANR	1055800	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_below		1055153	0					
ANR	1055801	Condition	! FILL_ADJUST		1055153	0					
ANR	1055802	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055803	UnaryOperator	!		1055153	0					
ANR	1055804	Identifier	FILL_ADJUST		1055153	1					
ANR	1055805	PrimaryExpression	0		1055153	1					
ANR	1055806	MemberAccess	fo . adjust_below		1055153	2					
ANR	1055807	Identifier	fo		1055153	0					
ANR	1055808	Identifier	adjust_below		1055153	1					
ANR	1055809	Argument	! FILL_ADJUST ? 0 : fo . adjust_above		1055153	3					
ANR	1055810	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_above		1055153	0					
ANR	1055811	Condition	! FILL_ADJUST		1055153	0					
ANR	1055812	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1055813	UnaryOperator	!		1055153	0					
ANR	1055814	Identifier	FILL_ADJUST		1055153	1					
ANR	1055815	PrimaryExpression	0		1055153	1					
ANR	1055816	MemberAccess	fo . adjust_above		1055153	2					
ANR	1055817	Identifier	fo		1055153	0					
ANR	1055818	Identifier	adjust_above		1055153	1					
ANR	1055819	IfStatement	if ( covering_pixel_centers || all_bands )		1055153	17					
ANR	1055820	Condition	covering_pixel_centers || all_bands	152:12:5956:5990	1055153	0	True				
ANR	1055821	OrExpression	covering_pixel_centers || all_bands		1055153	0		||			
ANR	1055822	Identifier	covering_pixel_centers		1055153	0					
ANR	1055823	Identifier	all_bands		1055153	1					
ANR	1055824	CompoundStatement		115:12:4390:4413	1055153	1					
ANR	1055825	IdentifierDeclStatement	int inside = 0 ;	153:12:6007:6021	1055153	0	True				
ANR	1055826	IdentifierDecl	inside = 0		1055153	0					
ANR	1055827	IdentifierDeclType	int		1055153	0					
ANR	1055828	Identifier	inside		1055153	1					
ANR	1055829	AssignmentExpression	inside = 0		1055153	2		=			
ANR	1055830	Identifier	inside		1055153	0					
ANR	1055831	PrimaryExpression	0		1055153	1					
ANR	1055832	IdentifierDeclStatement	active_line * flp = NULL ;	154:12:6035:6058	1055153	1	True				
ANR	1055833	IdentifierDecl	* flp = NULL		1055153	0					
ANR	1055834	IdentifierDeclType	active_line *		1055153	0					
ANR	1055835	Identifier	flp		1055153	1					
ANR	1055836	AssignmentExpression	* flp = NULL		1055153	2		=			
ANR	1055837	Identifier	NULL		1055153	0					
ANR	1055838	Identifier	NULL		1055153	1					
ANR	1055839	IfStatement	if ( SMART_WINDING )		1055153	2					
ANR	1055840	Condition	SMART_WINDING	156:16:6077:6089	1055153	0	True				
ANR	1055841	Identifier	SMART_WINDING		1055153	0					
ANR	1055842	ExpressionStatement	"memset ( ll -> windings , 0 , sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count )"	157:16:6108:6176	1055153	1	True				
ANR	1055843	CallExpression	"memset ( ll -> windings , 0 , sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count )"		1055153	0					
ANR	1055844	Callee	memset		1055153	0					
ANR	1055845	Identifier	memset		1055153	0					
ANR	1055846	ArgumentList	ll -> windings		1055153	1					
ANR	1055847	Argument	ll -> windings		1055153	0					
ANR	1055848	PtrMemberAccess	ll -> windings		1055153	0					
ANR	1055849	Identifier	ll		1055153	0					
ANR	1055850	Identifier	windings		1055153	1					
ANR	1055851	Argument	0		1055153	1					
ANR	1055852	PrimaryExpression	0		1055153	0					
ANR	1055853	Argument	sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count		1055153	2					
ANR	1055854	MultiplicativeExpression	sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count		1055153	0		*			
ANR	1055855	SizeofExpression	sizeof ( ll -> windings [ 0 ] )		1055153	0					
ANR	1055856	Sizeof	sizeof		1055153	0					
ANR	1055857	ArrayIndexing	ll -> windings [ 0 ]		1055153	1					
ANR	1055858	PtrMemberAccess	ll -> windings		1055153	0					
ANR	1055859	Identifier	ll		1055153	0					
ANR	1055860	Identifier	windings		1055153	1					
ANR	1055861	PrimaryExpression	0		1055153	1					
ANR	1055862	PtrMemberAccess	ll -> contour_count		1055153	1					
ANR	1055863	Identifier	ll		1055153	0					
ANR	1055864	Identifier	contour_count		1055153	1					
ANR	1055865	ExpressionStatement	INCR ( band )	158:12:6190:6200	1055153	3	True				
ANR	1055866	CallExpression	INCR ( band )		1055153	0					
ANR	1055867	Callee	INCR		1055153	0					
ANR	1055868	Identifier	INCR		1055153	0					
ANR	1055869	ArgumentList	band		1055153	1					
ANR	1055870	Argument	band		1055153	0					
ANR	1055871	Identifier	band		1055153	0					
ANR	1055872	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		1055153	4					
ANR	1055873	ForInit	alp = ll -> x_list ;	160:17:6257:6273	1055153	0	True				
ANR	1055874	AssignmentExpression	alp = ll -> x_list		1055153	0		=			
ANR	1055875	Identifier	alp		1055153	0					
ANR	1055876	PtrMemberAccess	ll -> x_list		1055153	1					
ANR	1055877	Identifier	ll		1055153	0					
ANR	1055878	Identifier	x_list		1055153	1					
ANR	1055879	Condition	alp != 0	160:35:6275:6282	1055153	1	True				
ANR	1055880	EqualityExpression	alp != 0		1055153	0		!=			
ANR	1055881	Identifier	alp		1055153	0					
ANR	1055882	PrimaryExpression	0		1055153	1					
ANR	1055883	AssignmentExpression	alp = alp -> next	160:45:6285:6299	1055153	2	True	=			
ANR	1055884	Identifier	alp		1055153	0					
ANR	1055885	PtrMemberAccess	alp -> next		1055153	1					
ANR	1055886	Identifier	alp		1055153	0					
ANR	1055887	Identifier	next		1055153	1					
ANR	1055888	CompoundStatement		122:16:4675:4683	1055153	3					
ANR	1055889	IdentifierDeclStatement	int code ;	161:16:6320:6328	1055153	0	True				
ANR	1055890	IdentifierDecl	code		1055153	0					
ANR	1055891	IdentifierDeclType	int		1055153	0					
ANR	1055892	Identifier	code		1055153	1					
ANR	1055893	ExpressionStatement	"print_al ( ll -> memory , ""step"" , alp )"	163:16:6347:6380	1055153	1	True				
ANR	1055894	CallExpression	"print_al ( ll -> memory , ""step"" , alp )"		1055153	0					
ANR	1055895	Callee	print_al		1055153	0					
ANR	1055896	Identifier	print_al		1055153	0					
ANR	1055897	ArgumentList	ll -> memory		1055153	1					
ANR	1055898	Argument	ll -> memory		1055153	0					
ANR	1055899	PtrMemberAccess	ll -> memory		1055153	0					
ANR	1055900	Identifier	ll		1055153	0					
ANR	1055901	Identifier	memory		1055153	1					
ANR	1055902	Argument	"""step"""		1055153	1					
ANR	1055903	PrimaryExpression	"""step"""		1055153	0					
ANR	1055904	Argument	alp		1055153	2					
ANR	1055905	Identifier	alp		1055153	0					
ANR	1055906	ExpressionStatement	INCR ( band_step )	164:16:6398:6413	1055153	2	True				
ANR	1055907	CallExpression	INCR ( band_step )		1055153	0					
ANR	1055908	Callee	INCR		1055153	0					
ANR	1055909	Identifier	INCR		1055153	0					
ANR	1055910	ArgumentList	band_step		1055153	1					
ANR	1055911	Argument	band_step		1055153	0					
ANR	1055912	Identifier	band_step		1055153	0					
ANR	1055913	IfStatement	"if ( ! INSIDE_PATH_P ( inside , rule ) )"		1055153	3					
ANR	1055914	Condition	"! INSIDE_PATH_P ( inside , rule )"	165:20:6435:6462	1055153	0	True				
ANR	1055915	UnaryOperationExpression	"! INSIDE_PATH_P ( inside , rule )"		1055153	0					
ANR	1055916	UnaryOperator	!		1055153	0					
ANR	1055917	CallExpression	"INSIDE_PATH_P ( inside , rule )"		1055153	1					
ANR	1055918	Callee	INSIDE_PATH_P		1055153	0					
ANR	1055919	Identifier	INSIDE_PATH_P		1055153	0					
ANR	1055920	ArgumentList	inside		1055153	1					
ANR	1055921	Argument	inside		1055153	0					
ANR	1055922	Identifier	inside		1055153	0					
ANR	1055923	Argument	rule		1055153	1					
ANR	1055924	Identifier	rule		1055153	0					
ANR	1055925	CompoundStatement		126:50:4820:4820	1055153	1					
ANR	1055926	ExpressionStatement	"ADVANCE_WINDING ( inside , alp , ll )"	166:20:6508:6540	1055153	0	True				
ANR	1055927	CallExpression	"ADVANCE_WINDING ( inside , alp , ll )"		1055153	0					
ANR	1055928	Callee	ADVANCE_WINDING		1055153	0					
ANR	1055929	Identifier	ADVANCE_WINDING		1055153	0					
ANR	1055930	ArgumentList	inside		1055153	1					
ANR	1055931	Argument	inside		1055153	0					
ANR	1055932	Identifier	inside		1055153	0					
ANR	1055933	Argument	alp		1055153	1					
ANR	1055934	Identifier	alp		1055153	0					
ANR	1055935	Argument	ll		1055153	2					
ANR	1055936	Identifier	ll		1055153	0					
ANR	1055937	IfStatement	"if ( INSIDE_PATH_P ( inside , rule ) )"		1055153	1					
ANR	1055938	Condition	"INSIDE_PATH_P ( inside , rule )"	167:24:6566:6592	1055153	0	True				
ANR	1055939	CallExpression	"INSIDE_PATH_P ( inside , rule )"		1055153	0					
ANR	1055940	Callee	INSIDE_PATH_P		1055153	0					
ANR	1055941	Identifier	INSIDE_PATH_P		1055153	0					
ANR	1055942	ArgumentList	inside		1055153	1					
ANR	1055943	Argument	inside		1055153	0					
ANR	1055944	Identifier	inside		1055153	0					
ANR	1055945	Argument	rule		1055153	1					
ANR	1055946	Identifier	rule		1055153	0					
ANR	1055947	ExpressionStatement	flp = alp	168:24:6640:6649	1055153	1	True				
ANR	1055948	AssignmentExpression	flp = alp		1055153	0		=			
ANR	1055949	Identifier	flp		1055153	0					
ANR	1055950	Identifier	alp		1055153	1					
ANR	1055951	ContinueStatement	continue ;	169:20:6671:6679	1055153	2	True				
ANR	1055952	ExpressionStatement	"ADVANCE_WINDING ( inside , alp , ll )"	172:16:6773:6805	1055153	4	True				
ANR	1055953	CallExpression	"ADVANCE_WINDING ( inside , alp , ll )"		1055153	0					
ANR	1055954	Callee	ADVANCE_WINDING		1055153	0					
ANR	1055955	Identifier	ADVANCE_WINDING		1055153	0					
ANR	1055956	ArgumentList	inside		1055153	1					
ANR	1055957	Argument	inside		1055153	0					
ANR	1055958	Identifier	inside		1055153	0					
ANR	1055959	Argument	alp		1055153	1					
ANR	1055960	Identifier	alp		1055153	0					
ANR	1055961	Argument	ll		1055153	2					
ANR	1055962	Identifier	ll		1055153	0					
ANR	1055963	IfStatement	"if ( INSIDE_PATH_P ( inside , rule ) )"		1055153	5					
ANR	1055964	Condition	"INSIDE_PATH_P ( inside , rule )"	173:20:6827:6853	1055153	0	True				
ANR	1055965	CallExpression	"INSIDE_PATH_P ( inside , rule )"		1055153	0					
ANR	1055966	Callee	INSIDE_PATH_P		1055153	0					
ANR	1055967	Identifier	INSIDE_PATH_P		1055153	0					
ANR	1055968	ArgumentList	inside		1055153	1					
ANR	1055969	Argument	inside		1055153	0					
ANR	1055970	Identifier	inside		1055153	0					
ANR	1055971	Argument	rule		1055153	1					
ANR	1055972	Identifier	rule		1055153	0					
ANR	1055973	ContinueStatement	continue ;	174:20:6902:6910	1055153	1	True				
ANR	1055974	IfStatement	if ( alp -> next != NULL && alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next )		1055153	6					
ANR	1055975	Condition	alp -> next != NULL && alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next	177:20:7053:7187	1055153	0	True				
ANR	1055976	AndExpression	alp -> next != NULL && alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next		1055153	0		&&			
ANR	1055977	EqualityExpression	alp -> next != NULL		1055153	0		!=			
ANR	1055978	PtrMemberAccess	alp -> next		1055153	0					
ANR	1055979	Identifier	alp		1055153	0					
ANR	1055980	Identifier	next		1055153	1					
ANR	1055981	Identifier	NULL		1055153	1					
ANR	1055982	AndExpression	alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next		1055153	1		&&			
ANR	1055983	EqualityExpression	alp -> x_current == alp -> next -> x_current		1055153	0		==			
ANR	1055984	PtrMemberAccess	alp -> x_current		1055153	0					
ANR	1055985	Identifier	alp		1055153	0					
ANR	1055986	Identifier	x_current		1055153	1					
ANR	1055987	PtrMemberAccess	alp -> next -> x_current		1055153	1					
ANR	1055988	PtrMemberAccess	alp -> next		1055153	0					
ANR	1055989	Identifier	alp		1055153	0					
ANR	1055990	Identifier	next		1055153	1					
ANR	1055991	Identifier	x_current		1055153	1					
ANR	1055992	EqualityExpression	alp -> x_next == alp -> next -> x_next		1055153	1		==			
ANR	1055993	PtrMemberAccess	alp -> x_next		1055153	0					
ANR	1055994	Identifier	alp		1055153	0					
ANR	1055995	Identifier	x_next		1055153	1					
ANR	1055996	PtrMemberAccess	alp -> next -> x_next		1055153	1					
ANR	1055997	PtrMemberAccess	alp -> next		1055153	0					
ANR	1055998	Identifier	alp		1055153	0					
ANR	1055999	Identifier	next		1055153	1					
ANR	1056000	Identifier	x_next		1055153	1					
ANR	1056001	CompoundStatement		140:54:5545:5545	1055153	1					
ANR	1056002	ExpressionStatement	alp = alp -> next	193:20:8070:8085	1055153	0	True				
ANR	1056003	AssignmentExpression	alp = alp -> next		1055153	0		=			
ANR	1056004	Identifier	alp		1055153	0					
ANR	1056005	PtrMemberAccess	alp -> next		1055153	1					
ANR	1056006	Identifier	alp		1055153	0					
ANR	1056007	Identifier	next		1055153	1					
ANR	1056008	ExpressionStatement	"ADVANCE_WINDING ( inside , alp , ll )"	194:20:8107:8139	1055153	1	True				
ANR	1056009	CallExpression	"ADVANCE_WINDING ( inside , alp , ll )"		1055153	0					
ANR	1056010	Callee	ADVANCE_WINDING		1055153	0					
ANR	1056011	Identifier	ADVANCE_WINDING		1055153	0					
ANR	1056012	ArgumentList	inside		1055153	1					
ANR	1056013	Argument	inside		1055153	0					
ANR	1056014	Identifier	inside		1055153	0					
ANR	1056015	Argument	alp		1055153	1					
ANR	1056016	Identifier	alp		1055153	0					
ANR	1056017	Argument	ll		1055153	2					
ANR	1056018	Identifier	ll		1055153	0					
ANR	1056019	ContinueStatement	continue ;	195:20:8161:8169	1055153	2	True				
ANR	1056020	ExpressionStatement	INCR ( band_fill )	198:16:8284:8299	1055153	7	True				
ANR	1056021	CallExpression	INCR ( band_fill )		1055153	0					
ANR	1056022	Callee	INCR		1055153	0					
ANR	1056023	Identifier	INCR		1055153	0					
ANR	1056024	ArgumentList	band_fill		1055153	1					
ANR	1056025	Argument	band_fill		1055153	0					
ANR	1056026	Identifier	band_fill		1055153	0					
ANR	1056027	IfStatement	if ( FILL_ADJUST && ! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0 )		1055153	8					
ANR	1056028	Condition	FILL_ADJUST && ! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0	199:20:8321:8458	1055153	0	True				
ANR	1056029	AndExpression	FILL_ADJUST && ! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0		1055153	0		&&			
ANR	1056030	Identifier	FILL_ADJUST		1055153	0					
ANR	1056031	AndExpression	! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0		1055153	1		&&			
ANR	1056032	UnaryOperationExpression	! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x )		1055153	0					
ANR	1056033	UnaryOperator	!		1055153	0					
ANR	1056034	AndExpression	flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x		1055153	1		&&			
ANR	1056035	EqualityExpression	flp -> end . x == flp -> start . x		1055153	0		==			
ANR	1056036	MemberAccess	flp -> end . x		1055153	0					
ANR	1056037	PtrMemberAccess	flp -> end		1055153	0					
ANR	1056038	Identifier	flp		1055153	0					
ANR	1056039	Identifier	end		1055153	1					
ANR	1056040	Identifier	x		1055153	1					
ANR	1056041	MemberAccess	flp -> start . x		1055153	1					
ANR	1056042	PtrMemberAccess	flp -> start		1055153	0					
ANR	1056043	Identifier	flp		1055153	0					
ANR	1056044	Identifier	start		1055153	1					
ANR	1056045	Identifier	x		1055153	1					
ANR	1056046	EqualityExpression	alp -> end . x == alp -> start . x		1055153	1		==			
ANR	1056047	MemberAccess	alp -> end . x		1055153	0					
ANR	1056048	PtrMemberAccess	alp -> end		1055153	0					
ANR	1056049	Identifier	alp		1055153	0					
ANR	1056050	Identifier	end		1055153	1					
ANR	1056051	Identifier	x		1055153	1					
ANR	1056052	MemberAccess	alp -> start . x		1055153	1					
ANR	1056053	PtrMemberAccess	alp -> start		1055153	0					
ANR	1056054	Identifier	alp		1055153	0					
ANR	1056055	Identifier	start		1055153	1					
ANR	1056056	Identifier	x		1055153	1					
ANR	1056057	EqualityExpression	( fo . adjust_below | fo . adjust_above ) != 0		1055153	1		!=			
ANR	1056058	InclusiveOrExpression	fo . adjust_below | fo . adjust_above		1055153	0		|			
ANR	1056059	MemberAccess	fo . adjust_below		1055153	0					
ANR	1056060	Identifier	fo		1055153	0					
ANR	1056061	Identifier	adjust_below		1055153	1					
ANR	1056062	MemberAccess	fo . adjust_above		1055153	1					
ANR	1056063	Identifier	fo		1055153	0					
ANR	1056064	Identifier	adjust_above		1055153	1					
ANR	1056065	PrimaryExpression	0		1055153	1					
ANR	1056066	CompoundStatement		161:62:6816:6816	1055153	1					
ANR	1056067	IfStatement	if ( FILL_DIRECT )		1055153	0					
ANR	1056068	Condition	FILL_DIRECT	201:24:8487:8497	1055153	0	True				
ANR	1056069	Identifier	FILL_DIRECT		1055153	0					
ANR	1056070	ExpressionStatement	"code = slant_into_trapezoids__fd ( ll , flp , alp , y , y1 )"	202:24:8524:8577	1055153	1	True				
ANR	1056071	AssignmentExpression	"code = slant_into_trapezoids__fd ( ll , flp , alp , y , y1 )"		1055153	0		=			
ANR	1056072	Identifier	code		1055153	0					
ANR	1056073	CallExpression	"slant_into_trapezoids__fd ( ll , flp , alp , y , y1 )"		1055153	1					
ANR	1056074	Callee	slant_into_trapezoids__fd		1055153	0					
ANR	1056075	Identifier	slant_into_trapezoids__fd		1055153	0					
ANR	1056076	ArgumentList	ll		1055153	1					
ANR	1056077	Argument	ll		1055153	0					
ANR	1056078	Identifier	ll		1055153	0					
ANR	1056079	Argument	flp		1055153	1					
ANR	1056080	Identifier	flp		1055153	0					
ANR	1056081	Argument	alp		1055153	2					
ANR	1056082	Identifier	alp		1055153	0					
ANR	1056083	Argument	y		1055153	3					
ANR	1056084	Identifier	y		1055153	0					
ANR	1056085	Argument	y1		1055153	4					
ANR	1056086	Identifier	y1		1055153	0					
ANR	1056087	ElseStatement	else		1055153	0					
ANR	1056088	ExpressionStatement	"code = slant_into_trapezoids__nd ( ll , flp , alp , y , y1 )"	204:24:8628:8681	1055153	0	True				
ANR	1056089	AssignmentExpression	"code = slant_into_trapezoids__nd ( ll , flp , alp , y , y1 )"		1055153	0		=			
ANR	1056090	Identifier	code		1055153	0					
ANR	1056091	CallExpression	"slant_into_trapezoids__nd ( ll , flp , alp , y , y1 )"		1055153	1					
ANR	1056092	Callee	slant_into_trapezoids__nd		1055153	0					
ANR	1056093	Identifier	slant_into_trapezoids__nd		1055153	0					
ANR	1056094	ArgumentList	ll		1055153	1					
ANR	1056095	Argument	ll		1055153	0					
ANR	1056096	Identifier	ll		1055153	0					
ANR	1056097	Argument	flp		1055153	1					
ANR	1056098	Identifier	flp		1055153	0					
ANR	1056099	Argument	alp		1055153	2					
ANR	1056100	Identifier	alp		1055153	0					
ANR	1056101	Argument	y		1055153	3					
ANR	1056102	Identifier	y		1055153	0					
ANR	1056103	Argument	y1		1055153	4					
ANR	1056104	Identifier	y1		1055153	0					
ANR	1056105	ElseStatement	else		1055153	0					
ANR	1056106	CompoundStatement		168:20:7138:7172	1055153	0					
ANR	1056107	IdentifierDeclStatement	"fixed ybot = max ( y , fo . pbox -> p . y ) ;"	206:20:8728:8761	1055153	0	True				
ANR	1056108	IdentifierDecl	"ybot = max ( y , fo . pbox -> p . y )"		1055153	0					
ANR	1056109	IdentifierDeclType	fixed		1055153	0					
ANR	1056110	Identifier	ybot		1055153	1					
ANR	1056111	AssignmentExpression	"ybot = max ( y , fo . pbox -> p . y )"		1055153	2		=			
ANR	1056112	Identifier	ybot		1055153	0					
ANR	1056113	CallExpression	"max ( y , fo . pbox -> p . y )"		1055153	1					
ANR	1056114	Callee	max		1055153	0					
ANR	1056115	Identifier	max		1055153	0					
ANR	1056116	ArgumentList	y		1055153	1					
ANR	1056117	Argument	y		1055153	0					
ANR	1056118	Identifier	y		1055153	0					
ANR	1056119	Argument	fo . pbox -> p . y		1055153	1					
ANR	1056120	MemberAccess	fo . pbox -> p . y		1055153	0					
ANR	1056121	PtrMemberAccess	fo . pbox -> p		1055153	0					
ANR	1056122	MemberAccess	fo . pbox		1055153	0					
ANR	1056123	Identifier	fo		1055153	0					
ANR	1056124	Identifier	pbox		1055153	1					
ANR	1056125	Identifier	p		1055153	1					
ANR	1056126	Identifier	y		1055153	1					
ANR	1056127	IdentifierDeclStatement	"fixed ytop = min ( y1 , fo . pbox -> q . y ) ;"	207:20:8783:8817	1055153	1	True				
ANR	1056128	IdentifierDecl	"ytop = min ( y1 , fo . pbox -> q . y )"		1055153	0					
ANR	1056129	IdentifierDeclType	fixed		1055153	0					
ANR	1056130	Identifier	ytop		1055153	1					
ANR	1056131	AssignmentExpression	"ytop = min ( y1 , fo . pbox -> q . y )"		1055153	2		=			
ANR	1056132	Identifier	ytop		1055153	0					
ANR	1056133	CallExpression	"min ( y1 , fo . pbox -> q . y )"		1055153	1					
ANR	1056134	Callee	min		1055153	0					
ANR	1056135	Identifier	min		1055153	0					
ANR	1056136	ArgumentList	y1		1055153	1					
ANR	1056137	Argument	y1		1055153	0					
ANR	1056138	Identifier	y1		1055153	0					
ANR	1056139	Argument	fo . pbox -> q . y		1055153	1					
ANR	1056140	MemberAccess	fo . pbox -> q . y		1055153	0					
ANR	1056141	PtrMemberAccess	fo . pbox -> q		1055153	0					
ANR	1056142	MemberAccess	fo . pbox		1055153	0					
ANR	1056143	Identifier	fo		1055153	0					
ANR	1056144	Identifier	pbox		1055153	1					
ANR	1056145	Identifier	q		1055153	1					
ANR	1056146	Identifier	y		1055153	1					
ANR	1056147	IfStatement	if ( IS_SPOTAN )		1055153	2					
ANR	1056148	Condition	IS_SPOTAN	209:24:8844:8852	1055153	0	True				
ANR	1056149	Identifier	IS_SPOTAN		1055153	0					
ANR	1056150	CompoundStatement		170:35:7210:7210	1055153	1					
ANR	1056151	ExpressionStatement	"code = gx_san_trap_store ( ( gx_device_spot_analyzer * ) fo . dev , y , y1 , flp -> x_current , alp -> x_current , flp -> x_next , alp -> x_next , flp -> pseg , alp -> pseg , flp -> direction , alp -> direction )"	212:24:9051:9285	1055153	0	True				
ANR	1056152	AssignmentExpression	"code = gx_san_trap_store ( ( gx_device_spot_analyzer * ) fo . dev , y , y1 , flp -> x_current , alp -> x_current , flp -> x_next , alp -> x_next , flp -> pseg , alp -> pseg , flp -> direction , alp -> direction )"		1055153	0		=			
ANR	1056153	Identifier	code		1055153	0					
ANR	1056154	CallExpression	"gx_san_trap_store ( ( gx_device_spot_analyzer * ) fo . dev , y , y1 , flp -> x_current , alp -> x_current , flp -> x_next , alp -> x_next , flp -> pseg , alp -> pseg , flp -> direction , alp -> direction )"		1055153	1					
ANR	1056155	Callee	gx_san_trap_store		1055153	0					
ANR	1056156	Identifier	gx_san_trap_store		1055153	0					
ANR	1056157	ArgumentList	( gx_device_spot_analyzer * ) fo . dev		1055153	1					
ANR	1056158	Argument	( gx_device_spot_analyzer * ) fo . dev		1055153	0					
ANR	1056159	CastExpression	( gx_device_spot_analyzer * ) fo . dev		1055153	0					
ANR	1056160	CastTarget	gx_device_spot_analyzer *		1055153	0					
ANR	1056161	MemberAccess	fo . dev		1055153	1					
ANR	1056162	Identifier	fo		1055153	0					
ANR	1056163	Identifier	dev		1055153	1					
ANR	1056164	Argument	y		1055153	1					
ANR	1056165	Identifier	y		1055153	0					
ANR	1056166	Argument	y1		1055153	2					
ANR	1056167	Identifier	y1		1055153	0					
ANR	1056168	Argument	flp -> x_current		1055153	3					
ANR	1056169	PtrMemberAccess	flp -> x_current		1055153	0					
ANR	1056170	Identifier	flp		1055153	0					
ANR	1056171	Identifier	x_current		1055153	1					
ANR	1056172	Argument	alp -> x_current		1055153	4					
ANR	1056173	PtrMemberAccess	alp -> x_current		1055153	0					
ANR	1056174	Identifier	alp		1055153	0					
ANR	1056175	Identifier	x_current		1055153	1					
ANR	1056176	Argument	flp -> x_next		1055153	5					
ANR	1056177	PtrMemberAccess	flp -> x_next		1055153	0					
ANR	1056178	Identifier	flp		1055153	0					
ANR	1056179	Identifier	x_next		1055153	1					
ANR	1056180	Argument	alp -> x_next		1055153	6					
ANR	1056181	PtrMemberAccess	alp -> x_next		1055153	0					
ANR	1056182	Identifier	alp		1055153	0					
ANR	1056183	Identifier	x_next		1055153	1					
ANR	1056184	Argument	flp -> pseg		1055153	7					
ANR	1056185	PtrMemberAccess	flp -> pseg		1055153	0					
ANR	1056186	Identifier	flp		1055153	0					
ANR	1056187	Identifier	pseg		1055153	1					
ANR	1056188	Argument	alp -> pseg		1055153	8					
ANR	1056189	PtrMemberAccess	alp -> pseg		1055153	0					
ANR	1056190	Identifier	alp		1055153	0					
ANR	1056191	Identifier	pseg		1055153	1					
ANR	1056192	Argument	flp -> direction		1055153	9					
ANR	1056193	PtrMemberAccess	flp -> direction		1055153	0					
ANR	1056194	Identifier	flp		1055153	0					
ANR	1056195	Identifier	direction		1055153	1					
ANR	1056196	Argument	alp -> direction		1055153	10					
ANR	1056197	PtrMemberAccess	alp -> direction		1055153	0					
ANR	1056198	Identifier	alp		1055153	0					
ANR	1056199	Identifier	direction		1055153	1					
ANR	1056200	ElseStatement	else		1055153	0					
ANR	1056201	CompoundStatement		176:27:7669:7669	1055153	0					
ANR	1056202	IfStatement	if ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x )		1055153	0					
ANR	1056203	Condition	flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x	216:28:9344:9399	1055153	0	True				
ANR	1056204	AndExpression	flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x		1055153	0		&&			
ANR	1056205	EqualityExpression	flp -> end . x == flp -> start . x		1055153	0		==			
ANR	1056206	MemberAccess	flp -> end . x		1055153	0					
ANR	1056207	PtrMemberAccess	flp -> end		1055153	0					
ANR	1056208	Identifier	flp		1055153	0					
ANR	1056209	Identifier	end		1055153	1					
ANR	1056210	Identifier	x		1055153	1					
ANR	1056211	MemberAccess	flp -> start . x		1055153	1					
ANR	1056212	PtrMemberAccess	flp -> start		1055153	0					
ANR	1056213	Identifier	flp		1055153	0					
ANR	1056214	Identifier	start		1055153	1					
ANR	1056215	Identifier	x		1055153	1					
ANR	1056216	EqualityExpression	alp -> end . x == alp -> start . x		1055153	1		==			
ANR	1056217	MemberAccess	alp -> end . x		1055153	0					
ANR	1056218	PtrMemberAccess	alp -> end		1055153	0					
ANR	1056219	Identifier	alp		1055153	0					
ANR	1056220	Identifier	end		1055153	1					
ANR	1056221	Identifier	x		1055153	1					
ANR	1056222	MemberAccess	alp -> start . x		1055153	1					
ANR	1056223	PtrMemberAccess	alp -> start		1055153	0					
ANR	1056224	Identifier	alp		1055153	0					
ANR	1056225	Identifier	start		1055153	1					
ANR	1056226	Identifier	x		1055153	1					
ANR	1056227	CompoundStatement		177:86:7757:7757	1055153	1					
ANR	1056228	IfStatement	if ( FILL_ADJUST )		1055153	0					
ANR	1056229	Condition	FILL_ADJUST	217:32:9436:9446	1055153	0	True				
ANR	1056230	Identifier	FILL_ADJUST		1055153	0					
ANR	1056231	CompoundStatement		178:45:7804:7804	1055153	1					
ANR	1056232	ExpressionStatement	"ybot = max ( y - fo . adjust_below , fo . pbox -> p . y )"	218:32:9483:9529	1055153	0	True				
ANR	1056233	AssignmentExpression	"ybot = max ( y - fo . adjust_below , fo . pbox -> p . y )"		1055153	0		=			
ANR	1056234	Identifier	ybot		1055153	0					
ANR	1056235	CallExpression	"max ( y - fo . adjust_below , fo . pbox -> p . y )"		1055153	1					
ANR	1056236	Callee	max		1055153	0					
ANR	1056237	Identifier	max		1055153	0					
ANR	1056238	ArgumentList	y - fo . adjust_below		1055153	1					
ANR	1056239	Argument	y - fo . adjust_below		1055153	0					
ANR	1056240	AdditiveExpression	y - fo . adjust_below		1055153	0		-			
ANR	1056241	Identifier	y		1055153	0					
ANR	1056242	MemberAccess	fo . adjust_below		1055153	1					
ANR	1056243	Identifier	fo		1055153	0					
ANR	1056244	Identifier	adjust_below		1055153	1					
ANR	1056245	Argument	fo . pbox -> p . y		1055153	1					
ANR	1056246	MemberAccess	fo . pbox -> p . y		1055153	0					
ANR	1056247	PtrMemberAccess	fo . pbox -> p		1055153	0					
ANR	1056248	MemberAccess	fo . pbox		1055153	0					
ANR	1056249	Identifier	fo		1055153	0					
ANR	1056250	Identifier	pbox		1055153	1					
ANR	1056251	Identifier	p		1055153	1					
ANR	1056252	Identifier	y		1055153	1					
ANR	1056253	ExpressionStatement	"ytop = min ( y1 + fo . adjust_above , fo . pbox -> q . y )"	219:32:9563:9609	1055153	1	True				
ANR	1056254	AssignmentExpression	"ytop = min ( y1 + fo . adjust_above , fo . pbox -> q . y )"		1055153	0		=			
ANR	1056255	Identifier	ytop		1055153	0					
ANR	1056256	CallExpression	"min ( y1 + fo . adjust_above , fo . pbox -> q . y )"		1055153	1					
ANR	1056257	Callee	min		1055153	0					
ANR	1056258	Identifier	min		1055153	0					
ANR	1056259	ArgumentList	y1 + fo . adjust_above		1055153	1					
ANR	1056260	Argument	y1 + fo . adjust_above		1055153	0					
ANR	1056261	AdditiveExpression	y1 + fo . adjust_above		1055153	0		+			
ANR	1056262	Identifier	y1		1055153	0					
ANR	1056263	MemberAccess	fo . adjust_above		1055153	1					
ANR	1056264	Identifier	fo		1055153	0					
ANR	1056265	Identifier	adjust_above		1055153	1					
ANR	1056266	Argument	fo . pbox -> q . y		1055153	1					
ANR	1056267	MemberAccess	fo . pbox -> q . y		1055153	0					
ANR	1056268	PtrMemberAccess	fo . pbox -> q		1055153	0					
ANR	1056269	MemberAccess	fo . pbox		1055153	0					
ANR	1056270	Identifier	fo		1055153	0					
ANR	1056271	Identifier	pbox		1055153	1					
ANR	1056272	Identifier	q		1055153	1					
ANR	1056273	Identifier	y		1055153	1					
ANR	1056274	IfStatement	if ( ytop > ybot )		1055153	1					
ANR	1056275	Condition	ytop > ybot	221:32:9673:9683	1055153	0	True				
ANR	1056276	RelationalExpression	ytop > ybot		1055153	0		>			
ANR	1056277	Identifier	ytop		1055153	0					
ANR	1056278	Identifier	ybot		1055153	1					
ANR	1056279	CompoundStatement		186:32:8330:8413	1055153	1					
ANR	1056280	IdentifierDeclStatement	int yi = fixed2int_pixround ( ybot ) ;	222:32:9720:9753	1055153	0	True				
ANR	1056281	IdentifierDecl	yi = fixed2int_pixround ( ybot )		1055153	0					
ANR	1056282	IdentifierDeclType	int		1055153	0					
ANR	1056283	Identifier	yi		1055153	1					
ANR	1056284	AssignmentExpression	yi = fixed2int_pixround ( ybot )		1055153	2		=			
ANR	1056285	Identifier	yi		1055153	0					
ANR	1056286	CallExpression	fixed2int_pixround ( ybot )		1055153	1					
ANR	1056287	Callee	fixed2int_pixround		1055153	0					
ANR	1056288	Identifier	fixed2int_pixround		1055153	0					
ANR	1056289	ArgumentList	ybot		1055153	1					
ANR	1056290	Argument	ybot		1055153	0					
ANR	1056291	Identifier	ybot		1055153	0					
ANR	1056292	IdentifierDeclStatement	int hi = fixed2int_pixround ( ytop ) - yi ;	223:32:9787:9825	1055153	1	True				
ANR	1056293	IdentifierDecl	hi = fixed2int_pixround ( ytop ) - yi		1055153	0					
ANR	1056294	IdentifierDeclType	int		1055153	0					
ANR	1056295	Identifier	hi		1055153	1					
ANR	1056296	AssignmentExpression	hi = fixed2int_pixround ( ytop ) - yi		1055153	2		=			
ANR	1056297	Identifier	hi		1055153	0					
ANR	1056298	AdditiveExpression	fixed2int_pixround ( ytop ) - yi		1055153	1		-			
ANR	1056299	CallExpression	fixed2int_pixround ( ytop )		1055153	0					
ANR	1056300	Callee	fixed2int_pixround		1055153	0					
ANR	1056301	Identifier	fixed2int_pixround		1055153	0					
ANR	1056302	ArgumentList	ytop		1055153	1					
ANR	1056303	Argument	ytop		1055153	0					
ANR	1056304	Identifier	ytop		1055153	0					
ANR	1056305	Identifier	yi		1055153	1					
ANR	1056306	IdentifierDeclStatement	int xli = fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) ) ;	224:32:9859:9941	1055153	2	True				
ANR	1056307	IdentifierDecl	xli = fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		1055153	0					
ANR	1056308	IdentifierDeclType	int		1055153	0					
ANR	1056309	Identifier	xli		1055153	1					
ANR	1056310	AssignmentExpression	xli = fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		1055153	2		=			
ANR	1056311	Identifier	xli		1055153	0					
ANR	1056312	CallExpression	fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		1055153	1					
ANR	1056313	Callee	fixed2int_var_pixround		1055153	0					
ANR	1056314	Identifier	fixed2int_var_pixround		1055153	0					
ANR	1056315	ArgumentList	flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	1					
ANR	1056316	Argument	flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	0					
ANR	1056317	AdditiveExpression	flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		1055153	0		-			
ANR	1056318	MemberAccess	flp -> end . x		1055153	0					
ANR	1056319	PtrMemberAccess	flp -> end		1055153	0					
ANR	1056320	Identifier	flp		1055153	0					
ANR	1056321	Identifier	end		1055153	1					
ANR	1056322	Identifier	x		1055153	1					
ANR	1056323	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_left		1055153	1					
ANR	1056324	Condition	! FILL_ADJUST		1055153	0					
ANR	1056325	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1056326	UnaryOperator	!		1055153	0					
ANR	1056327	Identifier	FILL_ADJUST		1055153	1					
ANR	1056328	PrimaryExpression	0		1055153	1					
ANR	1056329	MemberAccess	fo . adjust_left		1055153	2					
ANR	1056330	Identifier	fo		1055153	0					
ANR	1056331	Identifier	adjust_left		1055153	1					
ANR	1056332	IdentifierDeclStatement	int xi = fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) ;	225:32:9975:10058	1055153	3	True				
ANR	1056333	IdentifierDecl	xi = fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		1055153	0					
ANR	1056334	IdentifierDeclType	int		1055153	0					
ANR	1056335	Identifier	xi		1055153	1					
ANR	1056336	AssignmentExpression	xi = fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		1055153	2		=			
ANR	1056337	Identifier	xi		1055153	0					
ANR	1056338	CallExpression	fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		1055153	1					
ANR	1056339	Callee	fixed2int_var_pixround		1055153	0					
ANR	1056340	Identifier	fixed2int_var_pixround		1055153	0					
ANR	1056341	ArgumentList	alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	1					
ANR	1056342	Argument	alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	0					
ANR	1056343	AdditiveExpression	alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		1055153	0		+			
ANR	1056344	MemberAccess	alp -> end . x		1055153	0					
ANR	1056345	PtrMemberAccess	alp -> end		1055153	0					
ANR	1056346	Identifier	alp		1055153	0					
ANR	1056347	Identifier	end		1055153	1					
ANR	1056348	Identifier	x		1055153	1					
ANR	1056349	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_right		1055153	1					
ANR	1056350	Condition	! FILL_ADJUST		1055153	0					
ANR	1056351	UnaryOperationExpression	! FILL_ADJUST		1055153	0					
ANR	1056352	UnaryOperator	!		1055153	0					
ANR	1056353	Identifier	FILL_ADJUST		1055153	1					
ANR	1056354	PrimaryExpression	0		1055153	1					
ANR	1056355	MemberAccess	fo . adjust_right		1055153	2					
ANR	1056356	Identifier	fo		1055153	0					
ANR	1056357	Identifier	adjust_right		1055153	1					
ANR	1056358	IfStatement	if ( xli == xi && FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0 )		1055153	4					
ANR	1056359	Condition	xli == xi && FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0	228:37:10121:10224	1055153	0	True				
ANR	1056360	AndExpression	xli == xi && FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0		1055153	0		&&			
ANR	1056361	EqualityExpression	xli == xi		1055153	0		==			
ANR	1056362	Identifier	xli		1055153	0					
ANR	1056363	Identifier	xi		1055153	1					
ANR	1056364	AndExpression	FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0		1055153	1		&&			
ANR	1056365	Identifier	FILL_ADJUST		1055153	0					
ANR	1056366	EqualityExpression	( fo . adjust_right | fo . adjust_left ) != 0		1055153	1		!=			
ANR	1056367	InclusiveOrExpression	fo . adjust_right | fo . adjust_left		1055153	0		|			
ANR	1056368	MemberAccess	fo . adjust_right		1055153	0					
ANR	1056369	Identifier	fo		1055153	0					
ANR	1056370	Identifier	adjust_right		1055153	1					
ANR	1056371	MemberAccess	fo . adjust_left		1055153	1					
ANR	1056372	Identifier	fo		1055153	0					
ANR	1056373	Identifier	adjust_left		1055153	1					
ANR	1056374	PrimaryExpression	0		1055153	1					
ANR	1056375	CompoundStatement		199:36:8990:9015	1055153	1					
ANR	1056376	IdentifierDeclStatement	fixed xx = int2fixed ( xli ) ;	238:36:10635:10660	1055153	0	True				
ANR	1056377	IdentifierDecl	xx = int2fixed ( xli )		1055153	0					
ANR	1056378	IdentifierDeclType	fixed		1055153	0					
ANR	1056379	Identifier	xx		1055153	1					
ANR	1056380	AssignmentExpression	xx = int2fixed ( xli )		1055153	2		=			
ANR	1056381	Identifier	xx		1055153	0					
ANR	1056382	CallExpression	int2fixed ( xli )		1055153	1					
ANR	1056383	Callee	int2fixed		1055153	0					
ANR	1056384	Identifier	int2fixed		1055153	0					
ANR	1056385	ArgumentList	xli		1055153	1					
ANR	1056386	Argument	xli		1055153	0					
ANR	1056387	Identifier	xli		1055153	0					
ANR	1056388	IfStatement	if ( xx - flp -> end . x < alp -> end . x - xx )		1055153	1					
ANR	1056389	Condition	xx - flp -> end . x < alp -> end . x - xx	240:40:10703:10735	1055153	0	True				
ANR	1056390	RelationalExpression	xx - flp -> end . x < alp -> end . x - xx		1055153	0		<			
ANR	1056391	AdditiveExpression	xx - flp -> end . x		1055153	0		-			
ANR	1056392	Identifier	xx		1055153	0					
ANR	1056393	MemberAccess	flp -> end . x		1055153	1					
ANR	1056394	PtrMemberAccess	flp -> end		1055153	0					
ANR	1056395	Identifier	flp		1055153	0					
ANR	1056396	Identifier	end		1055153	1					
ANR	1056397	Identifier	x		1055153	1					
ANR	1056398	AdditiveExpression	alp -> end . x - xx		1055153	1		-			
ANR	1056399	MemberAccess	alp -> end . x		1055153	0					
ANR	1056400	PtrMemberAccess	alp -> end		1055153	0					
ANR	1056401	Identifier	alp		1055153	0					
ANR	1056402	Identifier	end		1055153	1					
ANR	1056403	Identifier	x		1055153	1					
ANR	1056404	Identifier	xx		1055153	1					
ANR	1056405	ExpressionStatement	++ xi	241:40:10778:10782	1055153	1	True				
ANR	1056406	UnaryExpression	++ xi		1055153	0					
ANR	1056407	IncDec	++		1055153	0					
ANR	1056408	Identifier	xi		1055153	1					
ANR	1056409	ElseStatement	else		1055153	0					
ANR	1056410	ExpressionStatement	-- xli	243:40:10865:10870	1055153	0	True				
ANR	1056411	UnaryExpression	-- xli		1055153	0					
ANR	1056412	IncDec	--		1055153	0					
ANR	1056413	Identifier	xli		1055153	1					
ANR	1056414	ExpressionStatement	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xli , yi , xi - xli , hi )"	245:32:10938:10999	1055153	5	True				
ANR	1056415	AssignmentExpression	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xli , yi , xi - xli , hi )"		1055153	0		=			
ANR	1056416	Identifier	code		1055153	0					
ANR	1056417	CallExpression	"LOOP_FILL_RECTANGLE_DIRECT ( & fo , xli , yi , xi - xli , hi )"		1055153	1					
ANR	1056418	Callee	LOOP_FILL_RECTANGLE_DIRECT		1055153	0					
ANR	1056419	Identifier	LOOP_FILL_RECTANGLE_DIRECT		1055153	0					
ANR	1056420	ArgumentList	& fo		1055153	1					
ANR	1056421	Argument	& fo		1055153	0					
ANR	1056422	UnaryOperationExpression	& fo		1055153	0					
ANR	1056423	UnaryOperator	&		1055153	0					
ANR	1056424	Identifier	fo		1055153	1					
ANR	1056425	Argument	xli		1055153	1					
ANR	1056426	Identifier	xli		1055153	0					
ANR	1056427	Argument	yi		1055153	2					
ANR	1056428	Identifier	yi		1055153	0					
ANR	1056429	Argument	xi - xli		1055153	3					
ANR	1056430	AdditiveExpression	xi - xli		1055153	0		-			
ANR	1056431	Identifier	xi		1055153	0					
ANR	1056432	Identifier	xli		1055153	1					
ANR	1056433	Argument	hi		1055153	4					
ANR	1056434	Identifier	hi		1055153	0					
ANR	1056435	ElseStatement	else		1055153	0					
ANR	1056436	ExpressionStatement	code = 0	247:32:11068:11076	1055153	0	True				
ANR	1056437	AssignmentExpression	code = 0		1055153	0		=			
ANR	1056438	Identifier	code		1055153	0					
ANR	1056439	PrimaryExpression	0		1055153	1					
ANR	1056440	ElseStatement	else		1055153	0					
ANR	1056441	IfStatement	if ( ybot < ytop )		1055153	0					
ANR	1056442	Condition	ybot < ytop	248:35:11113:11123	1055153	0	True				
ANR	1056443	RelationalExpression	ybot < ytop		1055153	0		<			
ANR	1056444	Identifier	ybot		1055153	0					
ANR	1056445	Identifier	ytop		1055153	1					
ANR	1056446	CompoundStatement		210:28:9511:9531	1055153	1					
ANR	1056447	IdentifierDeclStatement	"gs_fixed_edge le , re ;"	249:28:11156:11176	1055153	0	True				
ANR	1056448	IdentifierDecl	le		1055153	0					
ANR	1056449	IdentifierDeclType	gs_fixed_edge		1055153	0					
ANR	1056450	Identifier	le		1055153	1					
ANR	1056451	IdentifierDecl	re		1055153	1					
ANR	1056452	IdentifierDeclType	gs_fixed_edge		1055153	0					
ANR	1056453	Identifier	re		1055153	1					
ANR	1056454	ExpressionStatement	le . start = flp -> start	251:28:11207:11228	1055153	1	True				
ANR	1056455	AssignmentExpression	le . start = flp -> start		1055153	0		=			
ANR	1056456	MemberAccess	le . start		1055153	0					
ANR	1056457	Identifier	le		1055153	0					
ANR	1056458	Identifier	start		1055153	1					
ANR	1056459	PtrMemberAccess	flp -> start		1055153	1					
ANR	1056460	Identifier	flp		1055153	0					
ANR	1056461	Identifier	start		1055153	1					
ANR	1056462	ExpressionStatement	le . end = flp -> end	252:28:11258:11275	1055153	2	True				
ANR	1056463	AssignmentExpression	le . end = flp -> end		1055153	0		=			
ANR	1056464	MemberAccess	le . end		1055153	0					
ANR	1056465	Identifier	le		1055153	0					
ANR	1056466	Identifier	end		1055153	1					
ANR	1056467	PtrMemberAccess	flp -> end		1055153	1					
ANR	1056468	Identifier	flp		1055153	0					
ANR	1056469	Identifier	end		1055153	1					
ANR	1056470	ExpressionStatement	re . start = alp -> start	253:28:11305:11326	1055153	3	True				
ANR	1056471	AssignmentExpression	re . start = alp -> start		1055153	0		=			
ANR	1056472	MemberAccess	re . start		1055153	0					
ANR	1056473	Identifier	re		1055153	0					
ANR	1056474	Identifier	start		1055153	1					
ANR	1056475	PtrMemberAccess	alp -> start		1055153	1					
ANR	1056476	Identifier	alp		1055153	0					
ANR	1056477	Identifier	start		1055153	1					
ANR	1056478	ExpressionStatement	re . end = alp -> end	254:28:11356:11373	1055153	4	True				
ANR	1056479	AssignmentExpression	re . end = alp -> end		1055153	0		=			
ANR	1056480	MemberAccess	re . end		1055153	0					
ANR	1056481	Identifier	re		1055153	0					
ANR	1056482	Identifier	end		1055153	1					
ANR	1056483	PtrMemberAccess	alp -> end		1055153	1					
ANR	1056484	Identifier	alp		1055153	0					
ANR	1056485	Identifier	end		1055153	1					
ANR	1056486	ExpressionStatement	"code = fo . fill_trap ( fo . dev , & le , & re , ybot , ytop , false , fo . pdevc , fo . lop )"	255:28:11403:11513	1055153	5	True				
ANR	1056487	AssignmentExpression	"code = fo . fill_trap ( fo . dev , & le , & re , ybot , ytop , false , fo . pdevc , fo . lop )"		1055153	0		=			
ANR	1056488	Identifier	code		1055153	0					
ANR	1056489	CallExpression	"fo . fill_trap ( fo . dev , & le , & re , ybot , ytop , false , fo . pdevc , fo . lop )"		1055153	1					
ANR	1056490	Callee	fo . fill_trap		1055153	0					
ANR	1056491	MemberAccess	fo . fill_trap		1055153	0					
ANR	1056492	Identifier	fo		1055153	0					
ANR	1056493	Identifier	fill_trap		1055153	1					
ANR	1056494	ArgumentList	fo . dev		1055153	1					
ANR	1056495	Argument	fo . dev		1055153	0					
ANR	1056496	MemberAccess	fo . dev		1055153	0					
ANR	1056497	Identifier	fo		1055153	0					
ANR	1056498	Identifier	dev		1055153	1					
ANR	1056499	Argument	& le		1055153	1					
ANR	1056500	UnaryOperationExpression	& le		1055153	0					
ANR	1056501	UnaryOperator	&		1055153	0					
ANR	1056502	Identifier	le		1055153	1					
ANR	1056503	Argument	& re		1055153	2					
ANR	1056504	UnaryOperationExpression	& re		1055153	0					
ANR	1056505	UnaryOperator	&		1055153	0					
ANR	1056506	Identifier	re		1055153	1					
ANR	1056507	Argument	ybot		1055153	3					
ANR	1056508	Identifier	ybot		1055153	0					
ANR	1056509	Argument	ytop		1055153	4					
ANR	1056510	Identifier	ytop		1055153	0					
ANR	1056511	Argument	false		1055153	5					
ANR	1056512	Identifier	false		1055153	0					
ANR	1056513	Argument	fo . pdevc		1055153	6					
ANR	1056514	MemberAccess	fo . pdevc		1055153	0					
ANR	1056515	Identifier	fo		1055153	0					
ANR	1056516	Identifier	pdevc		1055153	1					
ANR	1056517	Argument	fo . lop		1055153	7					
ANR	1056518	MemberAccess	fo . lop		1055153	0					
ANR	1056519	Identifier	fo		1055153	0					
ANR	1056520	Identifier	lop		1055153	1					
ANR	1056521	ElseStatement	else		1055153	0					
ANR	1056522	ExpressionStatement	code = 0	258:28:11574:11582	1055153	0	True				
ANR	1056523	AssignmentExpression	code = 0		1055153	0		=			
ANR	1056524	Identifier	code		1055153	0					
ANR	1056525	PrimaryExpression	0		1055153	1					
ANR	1056526	IfStatement	if ( code < 0 )		1055153	9					
ANR	1056527	Condition	code < 0	261:20:11644:11651	1055153	0	True				
ANR	1056528	RelationalExpression	code < 0		1055153	0		<			
ANR	1056529	Identifier	code		1055153	0					
ANR	1056530	PrimaryExpression	0		1055153	1					
ANR	1056531	ReturnStatement	return code ;	262:20:11674:11685	1055153	1	True				
ANR	1056532	Identifier	code		1055153	0					
ANR	1056533	ExpressionStatement	"code = move_al_by_y ( ll , y1 )"	265:8:11719:11746	1055153	18	True				
ANR	1056534	AssignmentExpression	"code = move_al_by_y ( ll , y1 )"		1055153	0		=			
ANR	1056535	Identifier	code		1055153	0					
ANR	1056536	CallExpression	"move_al_by_y ( ll , y1 )"		1055153	1					
ANR	1056537	Callee	move_al_by_y		1055153	0					
ANR	1056538	Identifier	move_al_by_y		1055153	0					
ANR	1056539	ArgumentList	ll		1055153	1					
ANR	1056540	Argument	ll		1055153	0					
ANR	1056541	Identifier	ll		1055153	0					
ANR	1056542	Argument	y1		1055153	1					
ANR	1056543	Identifier	y1		1055153	0					
ANR	1056544	IfStatement	if ( code < 0 )		1055153	19					
ANR	1056545	Condition	code < 0	266:12:11760:11767	1055153	0	True				
ANR	1056546	RelationalExpression	code < 0		1055153	0		<			
ANR	1056547	Identifier	code		1055153	0					
ANR	1056548	PrimaryExpression	0		1055153	1					
ANR	1056549	ReturnStatement	return code ;	267:12:11782:11793	1055153	1	True				
ANR	1056550	Identifier	code		1055153	0					
ANR	1056551	ExpressionStatement	ll -> h_list1 = ll -> h_list0	268:8:11803:11828	1055153	20	True				
ANR	1056552	AssignmentExpression	ll -> h_list1 = ll -> h_list0		1055153	0		=			
ANR	1056553	PtrMemberAccess	ll -> h_list1		1055153	0					
ANR	1056554	Identifier	ll		1055153	0					
ANR	1056555	Identifier	h_list1		1055153	1					
ANR	1056556	PtrMemberAccess	ll -> h_list0		1055153	1					
ANR	1056557	Identifier	ll		1055153	0					
ANR	1056558	Identifier	h_list0		1055153	1					
ANR	1056559	ExpressionStatement	ll -> h_list0 = 0	269:8:11838:11853	1055153	21	True				
ANR	1056560	AssignmentExpression	ll -> h_list0 = 0		1055153	0		=			
ANR	1056561	PtrMemberAccess	ll -> h_list0		1055153	0					
ANR	1056562	Identifier	ll		1055153	0					
ANR	1056563	Identifier	h_list0		1055153	1					
ANR	1056564	PrimaryExpression	0		1055153	1					
ANR	1056565	ExpressionStatement	y = y1	270:8:11863:11869	1055153	22	True				
ANR	1056566	AssignmentExpression	y = y1		1055153	0		=			
ANR	1056567	Identifier	y		1055153	0					
ANR	1056568	Identifier	y1		1055153	1					
ANR	1056569	ReturnStatement	return 0 ;	272:4:11881:11889	1055153	12	True				
ANR	1056570	PrimaryExpression	0		1055153	0					
ANR	1056571	ReturnType	static int		1055153	1					
ANR	1056572	Identifier	TEMPLATE_spot_into_trapezoids		1055153	2					
ANR	1056573	ParameterList	"line_list * ll , fixed band_mask"		1055153	3					
ANR	1056574	Parameter	line_list * ll	39:31:1612:1624	1055153	0	True				
ANR	1056575	ParameterType	line_list *		1055153	0					
ANR	1056576	Identifier	ll		1055153	1					
ANR	1056577	Parameter	fixed band_mask	39:46:1627:1641	1055153	1	True				
ANR	1056578	ParameterType	fixed		1055153	0					
ANR	1056579	Identifier	band_mask		1055153	1					
ANR	1056580	CFGEntryNode	ENTRY		1055153		True				
ANR	1056581	CFGExitNode	EXIT		1055153		True				
ANR	1056582	Symbol	xx		1055153						
ANR	1056583	Symbol	hi		1055153						
ANR	1056584	Symbol	& y1		1055153						
ANR	1056585	Symbol	ytop		1055153						
ANR	1056586	Symbol	ll -> memory		1055153						
ANR	1056587	Symbol	fo . fill_trap		1055153						
ANR	1056588	Symbol	alp -> next -> x_current		1055153						
ANR	1056589	Symbol	* ll -> windings		1055153						
ANR	1056590	Symbol	gx_san_trap_store		1055153						
ANR	1056591	Symbol	min_fixed		1055153						
ANR	1056592	Symbol	yi		1055153						
ANR	1056593	Symbol	band_step		1055153						
ANR	1056594	Symbol	& fo		1055153						
ANR	1056595	Symbol	ll -> y_break		1055153						
ANR	1056596	Symbol	LOOP_FILL_RECTANGLE_DIRECT		1055153						
ANR	1056597	Symbol	* fo . pbox		1055153						
ANR	1056598	Symbol	band		1055153						
ANR	1056599	Symbol	fo . ymax		1055153						
ANR	1056600	Symbol	fo . pbox -> q		1055153						
ANR	1056601	Symbol	fo . pbox -> p		1055153						
ANR	1056602	Symbol	* ll		1055153						
ANR	1056603	Symbol	iter		1055153						
ANR	1056604	Symbol	fixed2int_pixround		1055153						
ANR	1056605	Symbol	FILL_ADJUST		1055153						
ANR	1056606	Symbol	* flp		1055153						
ANR	1056607	Symbol	ynext		1055153						
ANR	1056608	Symbol	band_mask		1055153						
ANR	1056609	Symbol	alp -> start . x		1055153						
ANR	1056610	Symbol	re		1055153						
ANR	1056611	Symbol	yll -> direction		1055153						
ANR	1056612	Symbol	* alp -> next		1055153						
ANR	1056613	Symbol	ynext -> prev		1055153						
ANR	1056614	Symbol	code1		1055153						
ANR	1056615	Symbol	flp -> direction		1055153						
ANR	1056616	Symbol	flp -> start		1055153						
ANR	1056617	Symbol	alp -> x_current		1055153						
ANR	1056618	Symbol	IS_SPOTAN		1055153						
ANR	1056619	Symbol	fo . pbox -> p . y		1055153						
ANR	1056620	Symbol	flp -> x_current		1055153						
ANR	1056621	Symbol	* ynext		1055153						
ANR	1056622	Symbol	~band_mask		1055153						
ANR	1056623	Symbol	min		1055153						
ANR	1056624	Symbol	flp -> pseg		1055153						
ANR	1056625	Symbol	re . start		1055153						
ANR	1056626	Symbol	fo . pbox		1055153						
ANR	1056627	Symbol	y_limit		1055153						
ANR	1056628	Symbol	max		1055153						
ANR	1056629	Symbol	flp		1055153						
ANR	1056630	Symbol	* fo		1055153						
ANR	1056631	Symbol	alp -> next -> x_next		1055153						
ANR	1056632	Symbol	FILL_DIRECT		1055153						
ANR	1056633	Symbol	flp -> start . x		1055153						
ANR	1056634	Symbol	ll -> y_line		1055153						
ANR	1056635	Symbol	alp -> next		1055153						
ANR	1056636	Symbol	alp -> end . y		1055153						
ANR	1056637	Symbol	alp -> end . x		1055153						
ANR	1056638	Symbol	int2fixed		1055153						
ANR	1056639	Symbol	ll -> x_head . x_current		1055153						
ANR	1056640	Symbol	INSIDE_PATH_P		1055153						
ANR	1056641	Symbol	y		1055153						
ANR	1056642	Symbol	le		1055153						
ANR	1056643	Symbol	& re		1055153						
ANR	1056644	Symbol	all_bands		1055153						
ANR	1056645	Symbol	fo . adjust_below		1055153						
ANR	1056646	Symbol	ll		1055153						
ANR	1056647	Symbol	le . end		1055153						
ANR	1056648	Symbol	alp -> end		1055153						
ANR	1056649	Symbol	ll -> y_list		1055153						
ANR	1056650	Symbol	inside		1055153						
ANR	1056651	Symbol	alp -> pseg		1055153						
ANR	1056652	Symbol	move_al_by_y		1055153						
ANR	1056653	Symbol	ll -> x_list		1055153						
ANR	1056654	Symbol	ybot		1055153						
ANR	1056655	Symbol	gs_debug_c		1055153						
ANR	1056656	Symbol	yll -> start . y		1055153						
ANR	1056657	Symbol	ll -> contour_count		1055153						
ANR	1056658	Symbol	DIR_HORIZONTAL		1055153						
ANR	1056659	Symbol	yll -> start . x		1055153						
ANR	1056660	Symbol	flp -> x_next		1055153						
ANR	1056661	Symbol	& le		1055153						
ANR	1056662	Symbol	* yll		1055153						
ANR	1056663	Symbol	covering_pixel_centers		1055153						
ANR	1056664	Symbol	NULL		1055153						
ANR	1056665	Symbol	alp		1055153						
ANR	1056666	Symbol	process_h_segments		1055153						
ANR	1056667	Symbol	slant_into_trapezoids__fd		1055153						
ANR	1056668	Symbol	fixed2int_var_pixround		1055153						
ANR	1056669	Symbol	ll -> fo		1055153						
ANR	1056670	Symbol	yll -> end		1055153						
ANR	1056671	Symbol	fo . adjust_right		1055153						
ANR	1056672	Symbol	fo . adjust_left		1055153						
ANR	1056673	Symbol	alp -> x_next		1055153						
ANR	1056674	Symbol	fo . dev		1055153						
ANR	1056675	Symbol	yll		1055153						
ANR	1056676	Symbol	alp -> start		1055153						
ANR	1056677	Symbol	slant_into_trapezoids__nd		1055153						
ANR	1056678	Symbol	fo . rule		1055153						
ANR	1056679	Symbol	alp -> direction		1055153						
ANR	1056680	Symbol	* ll -> fo		1055153						
ANR	1056681	Symbol	code		1055153						
ANR	1056682	Symbol	yll -> start		1055153						
ANR	1056683	Symbol	yll -> end . x		1055153						
ANR	1056684	Symbol	fo		1055153						
ANR	1056685	Symbol	rule		1055153						
ANR	1056686	Symbol	COVERING_PIXEL_CENTERS		1055153						
ANR	1056687	Symbol	band_fill		1055153						
ANR	1056688	Symbol	yll -> next		1055153						
ANR	1056689	Symbol	fo . adjust_above		1055153						
ANR	1056690	Symbol	ll -> windings		1055153						
ANR	1056691	Symbol	ll -> x_head		1055153						
ANR	1056692	Symbol	wi		1055153						
ANR	1056693	Symbol	flp -> end		1055153						
ANR	1056694	Symbol	ll -> h_list0		1055153						
ANR	1056695	Symbol	ll -> h_list1		1055153						
ANR	1056696	Symbol	y1		1055153						
ANR	1056697	Symbol	y_band		1055153						
ANR	1056698	Symbol	fo . pbox -> q . y		1055153						
ANR	1056699	Symbol	fixed2float		1055153						
ANR	1056700	Symbol	SMART_WINDING		1055153						
ANR	1056701	Symbol	false		1055153						
ANR	1056702	Symbol	le . start		1055153						
ANR	1056703	Symbol	* * ll		1055153						
ANR	1056704	Symbol	* alp		1055153						
ANR	1056705	Symbol	xi		1055153						
ANR	1056706	Symbol	re . end		1055153						
ANR	1056707	Symbol	fo . pdevc		1055153						
ANR	1056708	Symbol	xli		1055153						
ANR	1056709	Symbol	fo . is_spotan		1055153						
ANR	1056710	Symbol	flp -> end . x		1055153						
ANR	1056711	Symbol	* * alp		1055153						
ANR	1056712	Symbol	fo . lop		1055153						
