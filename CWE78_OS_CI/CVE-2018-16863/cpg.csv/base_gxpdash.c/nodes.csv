command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1210429	File	data/converged/CVE-2018-16863_ghostpdl/base_gxpdash.c								
ANR	1210430	DeclStmt									
ANR	1210431	Decl							int	"int ( const subpath * , gx_path * , const gs_gstate * , const gx_dash_params * )"	subpath_expand_dashes
ANR	1210432	Function	gx_path_add_dash_expansion	34:0:1093:1616							
ANR	1210433	FunctionDef	"gx_path_add_dash_expansion (const gx_path * ppath_old , gx_path * ppath , const gs_gstate * pgs)"		1210432	0					
ANR	1210434	CompoundStatement		37:0:1218:1616	1210432	0					
ANR	1210435	IdentifierDeclStatement	const subpath * psub ;	38:4:1224:1243	1210432	0	True				
ANR	1210436	IdentifierDecl	* psub		1210432	0					
ANR	1210437	IdentifierDeclType	const subpath *		1210432	0					
ANR	1210438	Identifier	psub		1210432	1					
ANR	1210439	IdentifierDeclStatement	const gx_dash_params * dash = & gs_currentlineparams ( pgs ) -> dash ;	39:4:1249:1310	1210432	1	True				
ANR	1210440	IdentifierDecl	* dash = & gs_currentlineparams ( pgs ) -> dash		1210432	0					
ANR	1210441	IdentifierDeclType	const gx_dash_params *		1210432	0					
ANR	1210442	Identifier	dash		1210432	1					
ANR	1210443	AssignmentExpression	* dash = & gs_currentlineparams ( pgs ) -> dash		1210432	2		=			
ANR	1210444	Identifier	dash		1210432	0					
ANR	1210445	UnaryOperationExpression	& gs_currentlineparams ( pgs ) -> dash		1210432	1					
ANR	1210446	UnaryOperator	&		1210432	0					
ANR	1210447	PtrMemberAccess	gs_currentlineparams ( pgs ) -> dash		1210432	1					
ANR	1210448	CallExpression	gs_currentlineparams ( pgs )		1210432	0					
ANR	1210449	Callee	gs_currentlineparams		1210432	0					
ANR	1210450	Identifier	gs_currentlineparams		1210432	0					
ANR	1210451	ArgumentList	pgs		1210432	1					
ANR	1210452	Argument	pgs		1210432	0					
ANR	1210453	Identifier	pgs		1210432	0					
ANR	1210454	Identifier	dash		1210432	1					
ANR	1210455	IdentifierDeclStatement	int code = 0 ;	40:4:1316:1328	1210432	2	True				
ANR	1210456	IdentifierDecl	code = 0		1210432	0					
ANR	1210457	IdentifierDeclType	int		1210432	0					
ANR	1210458	Identifier	code		1210432	1					
ANR	1210459	AssignmentExpression	code = 0		1210432	2		=			
ANR	1210460	Identifier	code		1210432	0					
ANR	1210461	PrimaryExpression	0		1210432	1					
ANR	1210462	IfStatement	if ( dash -> pattern_size == 0 )		1210432	3					
ANR	1210463	Condition	dash -> pattern_size == 0	42:8:1339:1361	1210432	0	True				
ANR	1210464	EqualityExpression	dash -> pattern_size == 0		1210432	0		==			
ANR	1210465	PtrMemberAccess	dash -> pattern_size		1210432	0					
ANR	1210466	Identifier	dash		1210432	0					
ANR	1210467	Identifier	pattern_size		1210432	1					
ANR	1210468	PrimaryExpression	0		1210432	1					
ANR	1210469	ReturnStatement	"return gx_path_copy ( ppath_old , ppath ) ;"	43:8:1372:1409	1210432	1	True				
ANR	1210470	CallExpression	"gx_path_copy ( ppath_old , ppath )"		1210432	0					
ANR	1210471	Callee	gx_path_copy		1210432	0					
ANR	1210472	Identifier	gx_path_copy		1210432	0					
ANR	1210473	ArgumentList	ppath_old		1210432	1					
ANR	1210474	Argument	ppath_old		1210432	0					
ANR	1210475	Identifier	ppath_old		1210432	0					
ANR	1210476	Argument	ppath		1210432	1					
ANR	1210477	Identifier	ppath		1210432	0					
ANR	1210478	ForStatement	for ( psub = ppath_old -> first_subpath ; psub != 0 && code >= 0 ; psub = ( const subpath * ) psub -> last -> next )		1210432	4					
ANR	1210479	ForInit	psub = ppath_old -> first_subpath ;	44:9:1420:1451	1210432	0	True				
ANR	1210480	AssignmentExpression	psub = ppath_old -> first_subpath		1210432	0		=			
ANR	1210481	Identifier	psub		1210432	0					
ANR	1210482	PtrMemberAccess	ppath_old -> first_subpath		1210432	1					
ANR	1210483	Identifier	ppath_old		1210432	0					
ANR	1210484	Identifier	first_subpath		1210432	1					
ANR	1210485	Condition	psub != 0 && code >= 0	44:42:1453:1474	1210432	1	True				
ANR	1210486	AndExpression	psub != 0 && code >= 0		1210432	0		&&			
ANR	1210487	EqualityExpression	psub != 0		1210432	0		!=			
ANR	1210488	Identifier	psub		1210432	0					
ANR	1210489	PrimaryExpression	0		1210432	1					
ANR	1210490	RelationalExpression	code >= 0		1210432	1		>=			
ANR	1210491	Identifier	code		1210432	0					
ANR	1210492	PrimaryExpression	0		1210432	1					
ANR	1210493	AssignmentExpression	psub = ( const subpath * ) psub -> last -> next	45:9:1486:1525	1210432	2	True	=			
ANR	1210494	Identifier	psub		1210432	0					
ANR	1210495	CastExpression	( const subpath * ) psub -> last -> next		1210432	1					
ANR	1210496	CastTarget	const subpath *		1210432	0					
ANR	1210497	PtrMemberAccess	psub -> last -> next		1210432	1					
ANR	1210498	PtrMemberAccess	psub -> last		1210432	0					
ANR	1210499	Identifier	psub		1210432	0					
ANR	1210500	Identifier	last		1210432	1					
ANR	1210501	Identifier	next		1210432	1					
ANR	1210502	ExpressionStatement	"code = subpath_expand_dashes ( psub , ppath , pgs , dash )"	47:8:1545:1597	1210432	3	True				
ANR	1210503	AssignmentExpression	"code = subpath_expand_dashes ( psub , ppath , pgs , dash )"		1210432	0		=			
ANR	1210504	Identifier	code		1210432	0					
ANR	1210505	CallExpression	"subpath_expand_dashes ( psub , ppath , pgs , dash )"		1210432	1					
ANR	1210506	Callee	subpath_expand_dashes		1210432	0					
ANR	1210507	Identifier	subpath_expand_dashes		1210432	0					
ANR	1210508	ArgumentList	psub		1210432	1					
ANR	1210509	Argument	psub		1210432	0					
ANR	1210510	Identifier	psub		1210432	0					
ANR	1210511	Argument	ppath		1210432	1					
ANR	1210512	Identifier	ppath		1210432	0					
ANR	1210513	Argument	pgs		1210432	2					
ANR	1210514	Identifier	pgs		1210432	0					
ANR	1210515	Argument	dash		1210432	3					
ANR	1210516	Identifier	dash		1210432	0					
ANR	1210517	ReturnStatement	return code ;	48:4:1603:1614	1210432	5	True				
ANR	1210518	Identifier	code		1210432	0					
ANR	1210519	ReturnType	int		1210432	1					
ANR	1210520	Identifier	gx_path_add_dash_expansion		1210432	2					
ANR	1210521	ParameterList	"const gx_path * ppath_old , gx_path * ppath , const gs_gstate * pgs"		1210432	3					
ANR	1210522	Parameter	const gx_path * ppath_old	35:27:1124:1148	1210432	0	True				
ANR	1210523	ParameterType	const gx_path *		1210432	0					
ANR	1210524	Identifier	ppath_old		1210432	1					
ANR	1210525	Parameter	gx_path * ppath	35:54:1151:1165	1210432	1	True				
ANR	1210526	ParameterType	gx_path *		1210432	0					
ANR	1210527	Identifier	ppath		1210432	1					
ANR	1210528	Parameter	const gs_gstate * pgs	36:27:1195:1215	1210432	2	True				
ANR	1210529	ParameterType	const gs_gstate *		1210432	0					
ANR	1210530	Identifier	pgs		1210432	1					
ANR	1210531	CFGEntryNode	ENTRY		1210432		True				
ANR	1210532	CFGExitNode	EXIT		1210432		True				
ANR	1210533	Symbol	psub -> last		1210432						
ANR	1210534	Symbol	code		1210432						
ANR	1210535	Symbol	ppath_old -> first_subpath		1210432						
ANR	1210536	Symbol	psub		1210432						
ANR	1210537	Symbol	gx_path_copy		1210432						
ANR	1210538	Symbol	* psub		1210432						
ANR	1210539	Symbol	* * psub		1210432						
ANR	1210540	Symbol	ppath		1210432						
ANR	1210541	Symbol	* psub -> last		1210432						
ANR	1210542	Symbol	dash -> pattern_size		1210432						
ANR	1210543	Symbol	ppath_old		1210432						
ANR	1210544	Symbol	gs_currentlineparams		1210432						
ANR	1210545	Symbol	* dash		1210432						
ANR	1210546	Symbol	* ppath_old		1210432						
ANR	1210547	Symbol	dash		1210432						
ANR	1210548	Symbol	& gs_currentlineparams ( pgs ) -> dash		1210432						
ANR	1210549	Symbol	subpath_expand_dashes		1210432						
ANR	1210550	Symbol	pgs		1210432						
ANR	1210551	Symbol	psub -> last -> next		1210432						
ANR	1210552	Function	subpath_expand_dashes	51:0:1619:11180							
ANR	1210553	FunctionDef	"subpath_expand_dashes (const subpath * psub , gx_path * ppath , const gs_gstate * pgs , const gx_dash_params * dash)"		1210552	0					
ANR	1210554	CompoundStatement		54:0:1762:11180	1210552	0					
ANR	1210555	IdentifierDeclStatement	const float * pattern = dash -> pattern ;	55:4:1768:1804	1210552	0	True				
ANR	1210556	IdentifierDecl	* pattern = dash -> pattern		1210552	0					
ANR	1210557	IdentifierDeclType	const float *		1210552	0					
ANR	1210558	Identifier	pattern		1210552	1					
ANR	1210559	AssignmentExpression	* pattern = dash -> pattern		1210552	2		=			
ANR	1210560	Identifier	pattern		1210552	0					
ANR	1210561	PtrMemberAccess	dash -> pattern		1210552	1					
ANR	1210562	Identifier	dash		1210552	0					
ANR	1210563	Identifier	pattern		1210552	1					
ANR	1210564	IdentifierDeclStatement	"int count , index ;"	56:4:1810:1826	1210552	1	True				
ANR	1210565	IdentifierDecl	count		1210552	0					
ANR	1210566	IdentifierDeclType	int		1210552	0					
ANR	1210567	Identifier	count		1210552	1					
ANR	1210568	IdentifierDecl	index		1210552	1					
ANR	1210569	IdentifierDeclType	int		1210552	0					
ANR	1210570	Identifier	index		1210552	1					
ANR	1210571	IdentifierDeclStatement	bool ink_on ;	57:4:1832:1843	1210552	2	True				
ANR	1210572	IdentifierDecl	ink_on		1210552	0					
ANR	1210573	IdentifierDeclType	bool		1210552	0					
ANR	1210574	Identifier	ink_on		1210552	1					
ANR	1210575	IdentifierDeclStatement	double elt_length ;	58:4:1849:1866	1210552	3	True				
ANR	1210576	IdentifierDecl	elt_length		1210552	0					
ANR	1210577	IdentifierDeclType	double		1210552	0					
ANR	1210578	Identifier	elt_length		1210552	1					
ANR	1210579	IdentifierDeclStatement	"fixed x0 = psub -> pt . x , y0 = psub -> pt . y ;"	59:4:1872:1910	1210552	4	True				
ANR	1210580	IdentifierDecl	x0 = psub -> pt . x		1210552	0					
ANR	1210581	IdentifierDeclType	fixed		1210552	0					
ANR	1210582	Identifier	x0		1210552	1					
ANR	1210583	AssignmentExpression	x0 = psub -> pt . x		1210552	2		=			
ANR	1210584	Identifier	x0		1210552	0					
ANR	1210585	MemberAccess	psub -> pt . x		1210552	1					
ANR	1210586	PtrMemberAccess	psub -> pt		1210552	0					
ANR	1210587	Identifier	psub		1210552	0					
ANR	1210588	Identifier	pt		1210552	1					
ANR	1210589	Identifier	x		1210552	1					
ANR	1210590	IdentifierDecl	y0 = psub -> pt . y		1210552	1					
ANR	1210591	IdentifierDeclType	fixed		1210552	0					
ANR	1210592	Identifier	y0		1210552	1					
ANR	1210593	AssignmentExpression	y0 = psub -> pt . y		1210552	2		=			
ANR	1210594	Identifier	y0		1210552	0					
ANR	1210595	MemberAccess	psub -> pt . y		1210552	1					
ANR	1210596	PtrMemberAccess	psub -> pt		1210552	0					
ANR	1210597	Identifier	psub		1210552	0					
ANR	1210598	Identifier	pt		1210552	1					
ANR	1210599	Identifier	y		1210552	1					
ANR	1210600	IdentifierDeclStatement	"fixed x , y ;"	60:4:1916:1926	1210552	5	True				
ANR	1210601	IdentifierDecl	x		1210552	0					
ANR	1210602	IdentifierDeclType	fixed		1210552	0					
ANR	1210603	Identifier	x		1210552	1					
ANR	1210604	IdentifierDecl	y		1210552	1					
ANR	1210605	IdentifierDeclType	fixed		1210552	0					
ANR	1210606	Identifier	y		1210552	1					
ANR	1210607	IdentifierDeclStatement	const segment * pseg ;	61:4:1932:1951	1210552	6	True				
ANR	1210608	IdentifierDecl	* pseg		1210552	0					
ANR	1210609	IdentifierDeclType	const segment *		1210552	0					
ANR	1210610	Identifier	pseg		1210552	1					
ANR	1210611	IdentifierDeclStatement	int wrap = ( dash -> init_ink_on && psub -> is_closed ? - 1 : 0 ) ;	62:4:1957:2015	1210552	7	True				
ANR	1210612	IdentifierDecl	wrap = ( dash -> init_ink_on && psub -> is_closed ? - 1 : 0 )		1210552	0					
ANR	1210613	IdentifierDeclType	int		1210552	0					
ANR	1210614	Identifier	wrap		1210552	1					
ANR	1210615	AssignmentExpression	wrap = ( dash -> init_ink_on && psub -> is_closed ? - 1 : 0 )		1210552	2		=			
ANR	1210616	Identifier	wrap		1210552	0					
ANR	1210617	ConditionalExpression	dash -> init_ink_on && psub -> is_closed ? - 1 : 0		1210552	1					
ANR	1210618	Condition	dash -> init_ink_on && psub -> is_closed		1210552	0					
ANR	1210619	AndExpression	dash -> init_ink_on && psub -> is_closed		1210552	0		&&			
ANR	1210620	PtrMemberAccess	dash -> init_ink_on		1210552	0					
ANR	1210621	Identifier	dash		1210552	0					
ANR	1210622	Identifier	init_ink_on		1210552	1					
ANR	1210623	PtrMemberAccess	psub -> is_closed		1210552	1					
ANR	1210624	Identifier	psub		1210552	0					
ANR	1210625	Identifier	is_closed		1210552	1					
ANR	1210626	UnaryOperationExpression	- 1		1210552	1					
ANR	1210627	UnaryOperator	-		1210552	0					
ANR	1210628	PrimaryExpression	1		1210552	1					
ANR	1210629	PrimaryExpression	0		1210552	2					
ANR	1210630	IdentifierDeclStatement	int drawing = wrap ;	63:4:2021:2039	1210552	8	True				
ANR	1210631	IdentifierDecl	drawing = wrap		1210552	0					
ANR	1210632	IdentifierDeclType	int		1210552	0					
ANR	1210633	Identifier	drawing		1210552	1					
ANR	1210634	AssignmentExpression	drawing = wrap		1210552	2		=			
ANR	1210635	Identifier	wrap		1210552	0					
ANR	1210636	Identifier	wrap		1210552	1					
ANR	1210637	IdentifierDeclStatement	segment_notes notes = ~sn_not_first ;	64:4:2045:2080	1210552	9	True				
ANR	1210638	IdentifierDecl	notes = ~sn_not_first		1210552	0					
ANR	1210639	IdentifierDeclType	segment_notes		1210552	0					
ANR	1210640	Identifier	notes		1210552	1					
ANR	1210641	AssignmentExpression	notes = ~sn_not_first		1210552	2		=			
ANR	1210642	Identifier	~sn_not_first		1210552	0					
ANR	1210643	Identifier	~sn_not_first		1210552	1					
ANR	1210644	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	65:4:2086:2149	1210552	10	True				
ANR	1210645	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		1210552	0					
ANR	1210646	IdentifierDeclType	const gx_line_params *		1210552	0					
ANR	1210647	Identifier	pgs_lp		1210552	1					
ANR	1210648	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		1210552	2		=			
ANR	1210649	Identifier	pgs_lp		1210552	0					
ANR	1210650	CallExpression	gs_currentlineparams_inline ( pgs )		1210552	1					
ANR	1210651	Callee	gs_currentlineparams_inline		1210552	0					
ANR	1210652	Identifier	gs_currentlineparams_inline		1210552	0					
ANR	1210653	ArgumentList	pgs		1210552	1					
ANR	1210654	Argument	pgs		1210552	0					
ANR	1210655	Identifier	pgs		1210552	0					
ANR	1210656	IdentifierDeclStatement	bool zero_length = true ;	66:4:2155:2178	1210552	11	True				
ANR	1210657	IdentifierDecl	zero_length = true		1210552	0					
ANR	1210658	IdentifierDeclType	bool		1210552	0					
ANR	1210659	Identifier	zero_length		1210552	1					
ANR	1210660	AssignmentExpression	zero_length = true		1210552	2		=			
ANR	1210661	Identifier	true		1210552	0					
ANR	1210662	Identifier	true		1210552	1					
ANR	1210663	IdentifierDeclStatement	int code ;	67:4:2184:2192	1210552	12	True				
ANR	1210664	IdentifierDecl	code		1210552	0					
ANR	1210665	IdentifierDeclType	int		1210552	0					
ANR	1210666	Identifier	code		1210552	1					
ANR	1210667	IdentifierDeclStatement	gs_line_cap cap ;	68:4:2198:2213	1210552	13	True				
ANR	1210668	IdentifierDecl	cap		1210552	0					
ANR	1210669	IdentifierDeclType	gs_line_cap		1210552	0					
ANR	1210670	Identifier	cap		1210552	1					
ANR	1210671	IdentifierDeclStatement	"segment_notes start_notes , end_notes ;"	69:4:2219:2255	1210552	14	True				
ANR	1210672	IdentifierDecl	start_notes		1210552	0					
ANR	1210673	IdentifierDeclType	segment_notes		1210552	0					
ANR	1210674	Identifier	start_notes		1210552	1					
ANR	1210675	IdentifierDecl	end_notes		1210552	1					
ANR	1210676	IdentifierDeclType	segment_notes		1210552	0					
ANR	1210677	Identifier	end_notes		1210552	1					
ANR	1210678	IfStatement	if ( wrap )		1210552	15					
ANR	1210679	Condition	wrap	71:8:2266:2269	1210552	0	True				
ANR	1210680	Identifier	wrap		1210552	0					
ANR	1210681	CompoundStatement		18:14:509:509	1210552	1					
ANR	1210682	ExpressionStatement	cap = pgs_lp -> dash_cap	73:8:2356:2386	1210552	0	True				
ANR	1210683	AssignmentExpression	cap = pgs_lp -> dash_cap		1210552	0		=			
ANR	1210684	Identifier	cap		1210552	0					
ANR	1210685	PtrMemberAccess	pgs_lp -> dash_cap		1210552	1					
ANR	1210686	Identifier	pgs_lp		1210552	0					
ANR	1210687	Identifier	dash_cap		1210552	1					
ANR	1210688	ExpressionStatement	start_notes = sn_dash_head	74:8:2396:2422	1210552	1	True				
ANR	1210689	AssignmentExpression	start_notes = sn_dash_head		1210552	0		=			
ANR	1210690	Identifier	start_notes		1210552	0					
ANR	1210691	Identifier	sn_dash_head		1210552	1					
ANR	1210692	ElseStatement	else		1210552	0					
ANR	1210693	CompoundStatement		22:11:672:672	1210552	0					
ANR	1210694	ExpressionStatement	cap = pgs_lp -> start_cap	77:8:2497:2528	1210552	0	True				
ANR	1210695	AssignmentExpression	cap = pgs_lp -> start_cap		1210552	0		=			
ANR	1210696	Identifier	cap		1210552	0					
ANR	1210697	PtrMemberAccess	pgs_lp -> start_cap		1210552	1					
ANR	1210698	Identifier	pgs_lp		1210552	0					
ANR	1210699	Identifier	start_cap		1210552	1					
ANR	1210700	ExpressionStatement	start_notes = 0	78:8:2538:2553	1210552	1	True				
ANR	1210701	AssignmentExpression	start_notes = 0		1210552	0		=			
ANR	1210702	Identifier	start_notes		1210552	0					
ANR	1210703	PrimaryExpression	0		1210552	1					
ANR	1210704	IfStatement	"if ( ( code = gx_path_add_point ( ppath , x0 , y0 ) ) < 0 )"		1210552	16					
ANR	1210705	Condition	"( code = gx_path_add_point ( ppath , x0 , y0 ) ) < 0"	81:8:2570:2614	1210552	0	True				
ANR	1210706	RelationalExpression	"( code = gx_path_add_point ( ppath , x0 , y0 ) ) < 0"		1210552	0		<			
ANR	1210707	AssignmentExpression	"code = gx_path_add_point ( ppath , x0 , y0 )"		1210552	0		=			
ANR	1210708	Identifier	code		1210552	0					
ANR	1210709	CallExpression	"gx_path_add_point ( ppath , x0 , y0 )"		1210552	1					
ANR	1210710	Callee	gx_path_add_point		1210552	0					
ANR	1210711	Identifier	gx_path_add_point		1210552	0					
ANR	1210712	ArgumentList	ppath		1210552	1					
ANR	1210713	Argument	ppath		1210552	0					
ANR	1210714	Identifier	ppath		1210552	0					
ANR	1210715	Argument	x0		1210552	1					
ANR	1210716	Identifier	x0		1210552	0					
ANR	1210717	Argument	y0		1210552	2					
ANR	1210718	Identifier	y0		1210552	0					
ANR	1210719	PrimaryExpression	0		1210552	1					
ANR	1210720	ReturnStatement	return code ;	82:8:2625:2636	1210552	1	True				
ANR	1210721	Identifier	code		1210552	0					
ANR	1210722	Label	top :	89:2:2938:2941	1210552	17	True				
ANR	1210723	Identifier	top		1210552	0					
ANR	1210724	ExpressionStatement	count = dash -> pattern_size	89:6:2942:2968	1210552	18	True				
ANR	1210725	AssignmentExpression	count = dash -> pattern_size		1210552	0		=			
ANR	1210726	Identifier	count		1210552	0					
ANR	1210727	PtrMemberAccess	dash -> pattern_size		1210552	1					
ANR	1210728	Identifier	dash		1210552	0					
ANR	1210729	Identifier	pattern_size		1210552	1					
ANR	1210730	ExpressionStatement	ink_on = dash -> init_ink_on	90:4:2974:3000	1210552	19	True				
ANR	1210731	AssignmentExpression	ink_on = dash -> init_ink_on		1210552	0		=			
ANR	1210732	Identifier	ink_on		1210552	0					
ANR	1210733	PtrMemberAccess	dash -> init_ink_on		1210552	1					
ANR	1210734	Identifier	dash		1210552	0					
ANR	1210735	Identifier	init_ink_on		1210552	1					
ANR	1210736	ExpressionStatement	index = dash -> init_index	91:4:3006:3030	1210552	20	True				
ANR	1210737	AssignmentExpression	index = dash -> init_index		1210552	0		=			
ANR	1210738	Identifier	index		1210552	0					
ANR	1210739	PtrMemberAccess	dash -> init_index		1210552	1					
ANR	1210740	Identifier	dash		1210552	0					
ANR	1210741	Identifier	init_index		1210552	1					
ANR	1210742	ExpressionStatement	elt_length = dash -> init_dist_left	92:4:3036:3069	1210552	21	True				
ANR	1210743	AssignmentExpression	elt_length = dash -> init_dist_left		1210552	0		=			
ANR	1210744	Identifier	elt_length		1210552	0					
ANR	1210745	PtrMemberAccess	dash -> init_dist_left		1210552	1					
ANR	1210746	Identifier	dash		1210552	0					
ANR	1210747	Identifier	init_dist_left		1210552	1					
ANR	1210748	ExpressionStatement	"x = x0 , y = y0"	93:4:3075:3089	1210552	22	True				
ANR	1210749	Expression	"x = x0 , y = y0"		1210552	0					
ANR	1210750	AssignmentExpression	x = x0		1210552	0		=			
ANR	1210751	Identifier	x		1210552	0					
ANR	1210752	Identifier	x0		1210552	1					
ANR	1210753	AssignmentExpression	y = y0		1210552	1		=			
ANR	1210754	Identifier	y		1210552	0					
ANR	1210755	Identifier	y0		1210552	1					
ANR	1210756	ExpressionStatement	pseg = ( const segment * ) psub	94:4:3095:3123	1210552	23	True				
ANR	1210757	AssignmentExpression	pseg = ( const segment * ) psub		1210552	0		=			
ANR	1210758	Identifier	pseg		1210552	0					
ANR	1210759	CastExpression	( const segment * ) psub		1210552	1					
ANR	1210760	CastTarget	const segment *		1210552	0					
ANR	1210761	Identifier	psub		1210552	1					
ANR	1210762	WhileStatement	while ( ( pseg = pseg -> next ) != 0 && pseg -> type != s_start )		1210552	24					
ANR	1210763	Condition	( pseg = pseg -> next ) != 0 && pseg -> type != s_start	95:11:3136:3184	1210552	0	True				
ANR	1210764	AndExpression	( pseg = pseg -> next ) != 0 && pseg -> type != s_start		1210552	0		&&			
ANR	1210765	EqualityExpression	( pseg = pseg -> next ) != 0		1210552	0		!=			
ANR	1210766	AssignmentExpression	pseg = pseg -> next		1210552	0		=			
ANR	1210767	Identifier	pseg		1210552	0					
ANR	1210768	PtrMemberAccess	pseg -> next		1210552	1					
ANR	1210769	Identifier	pseg		1210552	0					
ANR	1210770	Identifier	next		1210552	1					
ANR	1210771	PrimaryExpression	0		1210552	1					
ANR	1210772	EqualityExpression	pseg -> type != s_start		1210552	1		!=			
ANR	1210773	PtrMemberAccess	pseg -> type		1210552	0					
ANR	1210774	Identifier	pseg		1210552	0					
ANR	1210775	Identifier	type		1210552	1					
ANR	1210776	Identifier	s_start		1210552	1					
ANR	1210777	CompoundStatement		48:8:1602:1631	1210552	1					
ANR	1210778	IdentifierDeclStatement	"fixed sx = pseg -> pt . x , sy = pseg -> pt . y ;"	96:8:3197:3235	1210552	0	True				
ANR	1210779	IdentifierDecl	sx = pseg -> pt . x		1210552	0					
ANR	1210780	IdentifierDeclType	fixed		1210552	0					
ANR	1210781	Identifier	sx		1210552	1					
ANR	1210782	AssignmentExpression	sx = pseg -> pt . x		1210552	2		=			
ANR	1210783	Identifier	sx		1210552	0					
ANR	1210784	MemberAccess	pseg -> pt . x		1210552	1					
ANR	1210785	PtrMemberAccess	pseg -> pt		1210552	0					
ANR	1210786	Identifier	pseg		1210552	0					
ANR	1210787	Identifier	pt		1210552	1					
ANR	1210788	Identifier	x		1210552	1					
ANR	1210789	IdentifierDecl	sy = pseg -> pt . y		1210552	1					
ANR	1210790	IdentifierDeclType	fixed		1210552	0					
ANR	1210791	Identifier	sy		1210552	1					
ANR	1210792	AssignmentExpression	sy = pseg -> pt . y		1210552	2		=			
ANR	1210793	Identifier	sy		1210552	0					
ANR	1210794	MemberAccess	pseg -> pt . y		1210552	1					
ANR	1210795	PtrMemberAccess	pseg -> pt		1210552	0					
ANR	1210796	Identifier	pseg		1210552	0					
ANR	1210797	Identifier	pt		1210552	1					
ANR	1210798	Identifier	y		1210552	1					
ANR	1210799	IdentifierDeclStatement	"fixed udx = sx - x , udy = sy - y ;"	97:8:3245:3277	1210552	1	True				
ANR	1210800	IdentifierDecl	udx = sx - x		1210552	0					
ANR	1210801	IdentifierDeclType	fixed		1210552	0					
ANR	1210802	Identifier	udx		1210552	1					
ANR	1210803	AssignmentExpression	udx = sx - x		1210552	2		=			
ANR	1210804	Identifier	udx		1210552	0					
ANR	1210805	AdditiveExpression	sx - x		1210552	1		-			
ANR	1210806	Identifier	sx		1210552	0					
ANR	1210807	Identifier	x		1210552	1					
ANR	1210808	IdentifierDecl	udy = sy - y		1210552	1					
ANR	1210809	IdentifierDeclType	fixed		1210552	0					
ANR	1210810	Identifier	udy		1210552	1					
ANR	1210811	AssignmentExpression	udy = sy - y		1210552	2		=			
ANR	1210812	Identifier	udy		1210552	0					
ANR	1210813	AdditiveExpression	sy - y		1210552	1		-			
ANR	1210814	Identifier	sy		1210552	0					
ANR	1210815	Identifier	y		1210552	1					
ANR	1210816	IdentifierDeclStatement	"double length , dx , dy ;"	98:8:3287:3308	1210552	2	True				
ANR	1210817	IdentifierDecl	length		1210552	0					
ANR	1210818	IdentifierDeclType	double		1210552	0					
ANR	1210819	Identifier	length		1210552	1					
ANR	1210820	IdentifierDecl	dx		1210552	1					
ANR	1210821	IdentifierDeclType	double		1210552	0					
ANR	1210822	Identifier	dx		1210552	1					
ANR	1210823	IdentifierDecl	dy		1210552	2					
ANR	1210824	IdentifierDeclType	double		1210552	0					
ANR	1210825	Identifier	dy		1210552	1					
ANR	1210826	IdentifierDeclStatement	double scale = 1 ;	99:8:3318:3334	1210552	3	True				
ANR	1210827	IdentifierDecl	scale = 1		1210552	0					
ANR	1210828	IdentifierDeclType	double		1210552	0					
ANR	1210829	Identifier	scale		1210552	1					
ANR	1210830	AssignmentExpression	scale = 1		1210552	2		=			
ANR	1210831	Identifier	scale		1210552	0					
ANR	1210832	PrimaryExpression	1		1210552	1					
ANR	1210833	IdentifierDeclStatement	double left ;	100:8:3344:3355	1210552	4	True				
ANR	1210834	IdentifierDecl	left		1210552	0					
ANR	1210835	IdentifierDeclType	double		1210552	0					
ANR	1210836	Identifier	left		1210552	1					
ANR	1210837	IdentifierDeclStatement	int gap = pseg -> type == s_gap ;	101:8:3365:3394	1210552	5	True				
ANR	1210838	IdentifierDecl	gap = pseg -> type == s_gap		1210552	0					
ANR	1210839	IdentifierDeclType	int		1210552	0					
ANR	1210840	Identifier	gap		1210552	1					
ANR	1210841	AssignmentExpression	gap = pseg -> type == s_gap		1210552	2		=			
ANR	1210842	Identifier	gap		1210552	0					
ANR	1210843	EqualityExpression	pseg -> type == s_gap		1210552	1		==			
ANR	1210844	PtrMemberAccess	pseg -> type		1210552	0					
ANR	1210845	Identifier	pseg		1210552	0					
ANR	1210846	Identifier	type		1210552	1					
ANR	1210847	Identifier	s_gap		1210552	1					
ANR	1210848	IfStatement	if ( ! ( udx | udy ) )		1210552	6					
ANR	1210849	Condition	! ( udx | udy )	103:12:3409:3420	1210552	0	True				
ANR	1210850	UnaryOperationExpression	! ( udx | udy )		1210552	0					
ANR	1210851	UnaryOperator	!		1210552	0					
ANR	1210852	InclusiveOrExpression	udx | udy		1210552	1		|			
ANR	1210853	Identifier	udx		1210552	0					
ANR	1210854	Identifier	udy		1210552	1					
ANR	1210855	CompoundStatement		50:26:1660:1660	1210552	1					
ANR	1210856	IfStatement	if ( pgs_lp -> dot_length == 0 && cap != gs_cap_round )		1210552	0					
ANR	1210857	Condition	pgs_lp -> dot_length == 0 && cap != gs_cap_round	104:16:3458:3519	1210552	0	True				
ANR	1210858	AndExpression	pgs_lp -> dot_length == 0 && cap != gs_cap_round		1210552	0		&&			
ANR	1210859	EqualityExpression	pgs_lp -> dot_length == 0		1210552	0		==			
ANR	1210860	PtrMemberAccess	pgs_lp -> dot_length		1210552	0					
ANR	1210861	Identifier	pgs_lp		1210552	0					
ANR	1210862	Identifier	dot_length		1210552	1					
ANR	1210863	PrimaryExpression	0		1210552	1					
ANR	1210864	EqualityExpression	cap != gs_cap_round		1210552	1		!=			
ANR	1210865	Identifier	cap		1210552	0					
ANR	1210866	Identifier	gs_cap_round		1210552	1					
ANR	1210867	CompoundStatement		52:37:1759:1759	1210552	1					
ANR	1210868	IfStatement	if ( zero_length || pseg -> type != s_line_close )		1210552	0					
ANR	1210869	Condition	zero_length || pseg -> type != s_line_close	110:20:3831:3871	1210552	0	True				
ANR	1210870	OrExpression	zero_length || pseg -> type != s_line_close		1210552	0		||			
ANR	1210871	Identifier	zero_length		1210552	0					
ANR	1210872	EqualityExpression	pseg -> type != s_line_close		1210552	1		!=			
ANR	1210873	PtrMemberAccess	pseg -> type		1210552	0					
ANR	1210874	Identifier	pseg		1210552	0					
ANR	1210875	Identifier	type		1210552	1					
ANR	1210876	Identifier	s_line_close		1210552	1					
ANR	1210877	ContinueStatement	continue ;	111:20:3894:3902	1210552	1	True				
ANR	1210878	ExpressionStatement	"dx = 0 , dy = 0 , length = 0"	113:12:3930:3956	1210552	1	True				
ANR	1210879	Expression	"dx = 0 , dy = 0 , length = 0"		1210552	0					
ANR	1210880	AssignmentExpression	dx = 0		1210552	0		=			
ANR	1210881	Identifier	dx		1210552	0					
ANR	1210882	PrimaryExpression	0		1210552	1					
ANR	1210883	Expression	"dy = 0 , length = 0"		1210552	1					
ANR	1210884	AssignmentExpression	dy = 0		1210552	0		=			
ANR	1210885	Identifier	dy		1210552	0					
ANR	1210886	PrimaryExpression	0		1210552	1					
ANR	1210887	AssignmentExpression	length = 0		1210552	1		=			
ANR	1210888	Identifier	length		1210552	0					
ANR	1210889	PrimaryExpression	0		1210552	1					
ANR	1210890	ElseStatement	else		1210552	0					
ANR	1210891	CompoundStatement		62:12:2224:2234	1210552	0					
ANR	1210892	IdentifierDeclStatement	gs_point d ;	115:12:3987:3997	1210552	0	True				
ANR	1210893	IdentifierDecl	d		1210552	0					
ANR	1210894	IdentifierDeclType	gs_point		1210552	0					
ANR	1210895	Identifier	d		1210552	1					
ANR	1210896	ExpressionStatement	zero_length = false	117:12:4012:4031	1210552	1	True				
ANR	1210897	AssignmentExpression	zero_length = false		1210552	0		=			
ANR	1210898	Identifier	zero_length		1210552	0					
ANR	1210899	Identifier	false		1210552	1					
ANR	1210900	ExpressionStatement	"dx = udx , dy = udy"	118:12:4045:4063	1210552	2	True				
ANR	1210901	Expression	"dx = udx , dy = udy"		1210552	0					
ANR	1210902	AssignmentExpression	dx = udx		1210552	0		=			
ANR	1210903	Identifier	dx		1210552	0					
ANR	1210904	Identifier	udx		1210552	1					
ANR	1210905	AssignmentExpression	dy = udy		1210552	1		=			
ANR	1210906	Identifier	dy		1210552	0					
ANR	1210907	Identifier	udy		1210552	1					
ANR	1210908	ExpressionStatement	"code = gs_gstate_idtransform ( pgs , dx , dy , & d )"	119:12:4099:4144	1210552	3	True				
ANR	1210909	AssignmentExpression	"code = gs_gstate_idtransform ( pgs , dx , dy , & d )"		1210552	0		=			
ANR	1210910	Identifier	code		1210552	0					
ANR	1210911	CallExpression	"gs_gstate_idtransform ( pgs , dx , dy , & d )"		1210552	1					
ANR	1210912	Callee	gs_gstate_idtransform		1210552	0					
ANR	1210913	Identifier	gs_gstate_idtransform		1210552	0					
ANR	1210914	ArgumentList	pgs		1210552	1					
ANR	1210915	Argument	pgs		1210552	0					
ANR	1210916	Identifier	pgs		1210552	0					
ANR	1210917	Argument	dx		1210552	1					
ANR	1210918	Identifier	dx		1210552	0					
ANR	1210919	Argument	dy		1210552	2					
ANR	1210920	Identifier	dy		1210552	0					
ANR	1210921	Argument	& d		1210552	3					
ANR	1210922	UnaryOperationExpression	& d		1210552	0					
ANR	1210923	UnaryOperator	&		1210552	0					
ANR	1210924	Identifier	d		1210552	1					
ANR	1210925	IfStatement	if ( code < 0 )		1210552	4					
ANR	1210926	Condition	code < 0	120:16:4162:4169	1210552	0	True				
ANR	1210927	RelationalExpression	code < 0		1210552	0		<			
ANR	1210928	Identifier	code		1210552	0					
ANR	1210929	PrimaryExpression	0		1210552	1					
ANR	1210930	CompoundStatement		67:26:2409:2409	1210552	1					
ANR	1210931	ExpressionStatement	d . x = 0	121:16:4190:4197	1210552	0	True				
ANR	1210932	AssignmentExpression	d . x = 0		1210552	0		=			
ANR	1210933	MemberAccess	d . x		1210552	0					
ANR	1210934	Identifier	d		1210552	0					
ANR	1210935	Identifier	x		1210552	1					
ANR	1210936	PrimaryExpression	0		1210552	1					
ANR	1210937	ExpressionStatement	d . y = 0	121:25:4199:4206	1210552	1	True				
ANR	1210938	AssignmentExpression	d . y = 0		1210552	0		=			
ANR	1210939	MemberAccess	d . y		1210552	0					
ANR	1210940	Identifier	d		1210552	0					
ANR	1210941	Identifier	y		1210552	1					
ANR	1210942	PrimaryExpression	0		1210552	1					
ANR	1210943	ExpressionStatement	code = 0	123:16:4264:4272	1210552	2	True				
ANR	1210944	AssignmentExpression	code = 0		1210552	0		=			
ANR	1210945	Identifier	code		1210552	0					
ANR	1210946	PrimaryExpression	0		1210552	1					
ANR	1210947	ExpressionStatement	"length = hypot ( d . x , d . y ) * ( 1.0 / fixed_1 )"	125:12:4300:4342	1210552	5	True				
ANR	1210948	AssignmentExpression	"length = hypot ( d . x , d . y ) * ( 1.0 / fixed_1 )"		1210552	0		=			
ANR	1210949	Identifier	length		1210552	0					
ANR	1210950	MultiplicativeExpression	"hypot ( d . x , d . y ) * ( 1.0 / fixed_1 )"		1210552	1		*			
ANR	1210951	CallExpression	"hypot ( d . x , d . y )"		1210552	0					
ANR	1210952	Callee	hypot		1210552	0					
ANR	1210953	Identifier	hypot		1210552	0					
ANR	1210954	ArgumentList	d . x		1210552	1					
ANR	1210955	Argument	d . x		1210552	0					
ANR	1210956	MemberAccess	d . x		1210552	0					
ANR	1210957	Identifier	d		1210552	0					
ANR	1210958	Identifier	x		1210552	1					
ANR	1210959	Argument	d . y		1210552	1					
ANR	1210960	MemberAccess	d . y		1210552	0					
ANR	1210961	Identifier	d		1210552	0					
ANR	1210962	Identifier	y		1210552	1					
ANR	1210963	MultiplicativeExpression	1.0 / fixed_1		1210552	1		/			
ANR	1210964	PrimaryExpression	1.0		1210552	0					
ANR	1210965	Identifier	fixed_1		1210552	1					
ANR	1210966	IfStatement	if ( gs_gstate_currentdashadapt ( pgs ) )		1210552	6					
ANR	1210967	Condition	gs_gstate_currentdashadapt ( pgs )	126:16:4360:4390	1210552	0	True				
ANR	1210968	CallExpression	gs_gstate_currentdashadapt ( pgs )		1210552	0					
ANR	1210969	Callee	gs_gstate_currentdashadapt		1210552	0					
ANR	1210970	Identifier	gs_gstate_currentdashadapt		1210552	0					
ANR	1210971	ArgumentList	pgs		1210552	1					
ANR	1210972	Argument	pgs		1210552	0					
ANR	1210973	Identifier	pgs		1210552	0					
ANR	1210974	CompoundStatement		74:16:2648:2691	1210552	1					
ANR	1210975	IdentifierDeclStatement	double reps = length / dash -> pattern_length ;	127:16:4411:4454	1210552	0	True				
ANR	1210976	IdentifierDecl	reps = length / dash -> pattern_length		1210552	0					
ANR	1210977	IdentifierDeclType	double		1210552	0					
ANR	1210978	Identifier	reps		1210552	1					
ANR	1210979	AssignmentExpression	reps = length / dash -> pattern_length		1210552	2		=			
ANR	1210980	Identifier	reps		1210552	0					
ANR	1210981	MultiplicativeExpression	length / dash -> pattern_length		1210552	1		/			
ANR	1210982	Identifier	length		1210552	0					
ANR	1210983	PtrMemberAccess	dash -> pattern_length		1210552	1					
ANR	1210984	Identifier	dash		1210552	0					
ANR	1210985	Identifier	pattern_length		1210552	1					
ANR	1210986	ExpressionStatement	scale = reps / ceil ( reps )	129:16:4473:4498	1210552	1	True				
ANR	1210987	AssignmentExpression	scale = reps / ceil ( reps )		1210552	0		=			
ANR	1210988	Identifier	scale		1210552	0					
ANR	1210989	MultiplicativeExpression	reps / ceil ( reps )		1210552	1		/			
ANR	1210990	Identifier	reps		1210552	0					
ANR	1210991	CallExpression	ceil ( reps )		1210552	1					
ANR	1210992	Callee	ceil		1210552	0					
ANR	1210993	Identifier	ceil		1210552	0					
ANR	1210994	ArgumentList	reps		1210552	1					
ANR	1210995	Argument	reps		1210552	0					
ANR	1210996	Identifier	reps		1210552	0					
ANR	1210997	ExpressionStatement	count = dash -> pattern_size	133:16:4677:4703	1210552	2	True				
ANR	1210998	AssignmentExpression	count = dash -> pattern_size		1210552	0		=			
ANR	1210999	Identifier	count		1210552	0					
ANR	1211000	PtrMemberAccess	dash -> pattern_size		1210552	1					
ANR	1211001	Identifier	dash		1210552	0					
ANR	1211002	Identifier	pattern_size		1210552	1					
ANR	1211003	ExpressionStatement	ink_on = dash -> init_ink_on	134:16:4721:4747	1210552	3	True				
ANR	1211004	AssignmentExpression	ink_on = dash -> init_ink_on		1210552	0		=			
ANR	1211005	Identifier	ink_on		1210552	0					
ANR	1211006	PtrMemberAccess	dash -> init_ink_on		1210552	1					
ANR	1211007	Identifier	dash		1210552	0					
ANR	1211008	Identifier	init_ink_on		1210552	1					
ANR	1211009	ExpressionStatement	index = dash -> init_index	135:16:4765:4789	1210552	4	True				
ANR	1211010	AssignmentExpression	index = dash -> init_index		1210552	0		=			
ANR	1211011	Identifier	index		1210552	0					
ANR	1211012	PtrMemberAccess	dash -> init_index		1210552	1					
ANR	1211013	Identifier	dash		1210552	0					
ANR	1211014	Identifier	init_index		1210552	1					
ANR	1211015	ExpressionStatement	elt_length = dash -> init_dist_left * scale	136:16:4807:4848	1210552	5	True				
ANR	1211016	AssignmentExpression	elt_length = dash -> init_dist_left * scale		1210552	0		=			
ANR	1211017	Identifier	elt_length		1210552	0					
ANR	1211018	MultiplicativeExpression	dash -> init_dist_left * scale		1210552	1		*			
ANR	1211019	PtrMemberAccess	dash -> init_dist_left		1210552	0					
ANR	1211020	Identifier	dash		1210552	0					
ANR	1211021	Identifier	init_dist_left		1210552	1					
ANR	1211022	Identifier	scale		1210552	1					
ANR	1211023	ExpressionStatement	left = length	139:8:4882:4895	1210552	7	True				
ANR	1211024	AssignmentExpression	left = length		1210552	0		=			
ANR	1211025	Identifier	left		1210552	0					
ANR	1211026	Identifier	length		1210552	1					
ANR	1211027	WhileStatement	while ( left > elt_length )		1210552	8					
ANR	1211028	Condition	left > elt_length	140:15:4912:4928	1210552	0	True				
ANR	1211029	RelationalExpression	left > elt_length		1210552	0		>			
ANR	1211030	Identifier	left		1210552	0					
ANR	1211031	Identifier	elt_length		1210552	1					
ANR	1211032	CompoundStatement		92:12:3400:3417	1210552	1					
ANR	1211033	IdentifierDeclStatement	double fraction = elt_length / length ;	141:12:4985:5022	1210552	0	True				
ANR	1211034	IdentifierDecl	fraction = elt_length / length		1210552	0					
ANR	1211035	IdentifierDeclType	double		1210552	0					
ANR	1211036	Identifier	fraction		1210552	1					
ANR	1211037	AssignmentExpression	fraction = elt_length / length		1210552	2		=			
ANR	1211038	Identifier	fraction		1210552	0					
ANR	1211039	MultiplicativeExpression	elt_length / length		1210552	1		/			
ANR	1211040	Identifier	elt_length		1210552	0					
ANR	1211041	Identifier	length		1210552	1					
ANR	1211042	IdentifierDeclStatement	fixed fx = ( fixed ) ( dx * fraction ) ;	142:12:5036:5070	1210552	1	True				
ANR	1211043	IdentifierDecl	fx = ( fixed ) ( dx * fraction )		1210552	0					
ANR	1211044	IdentifierDeclType	fixed		1210552	0					
ANR	1211045	Identifier	fx		1210552	1					
ANR	1211046	AssignmentExpression	fx = ( fixed ) ( dx * fraction )		1210552	2		=			
ANR	1211047	Identifier	fx		1210552	0					
ANR	1211048	CastExpression	( fixed ) ( dx * fraction )		1210552	1					
ANR	1211049	CastTarget	fixed		1210552	0					
ANR	1211050	MultiplicativeExpression	dx * fraction		1210552	1		*			
ANR	1211051	Identifier	dx		1210552	0					
ANR	1211052	Identifier	fraction		1210552	1					
ANR	1211053	IdentifierDeclStatement	fixed fy = ( fixed ) ( dy * fraction ) ;	143:12:5084:5118	1210552	2	True				
ANR	1211054	IdentifierDecl	fy = ( fixed ) ( dy * fraction )		1210552	0					
ANR	1211055	IdentifierDeclType	fixed		1210552	0					
ANR	1211056	Identifier	fy		1210552	1					
ANR	1211057	AssignmentExpression	fy = ( fixed ) ( dy * fraction )		1210552	2		=			
ANR	1211058	Identifier	fy		1210552	0					
ANR	1211059	CastExpression	( fixed ) ( dy * fraction )		1210552	1					
ANR	1211060	CastTarget	fixed		1210552	0					
ANR	1211061	MultiplicativeExpression	dy * fraction		1210552	1		*			
ANR	1211062	Identifier	dy		1210552	0					
ANR	1211063	Identifier	fraction		1210552	1					
ANR	1211064	IdentifierDeclStatement	fixed nx = x + fx ;	144:12:5132:5149	1210552	3	True				
ANR	1211065	IdentifierDecl	nx = x + fx		1210552	0					
ANR	1211066	IdentifierDeclType	fixed		1210552	0					
ANR	1211067	Identifier	nx		1210552	1					
ANR	1211068	AssignmentExpression	nx = x + fx		1210552	2		=			
ANR	1211069	Identifier	nx		1210552	0					
ANR	1211070	AdditiveExpression	x + fx		1210552	1		+			
ANR	1211071	Identifier	x		1210552	0					
ANR	1211072	Identifier	fx		1210552	1					
ANR	1211073	IdentifierDeclStatement	fixed ny = y + fy ;	145:12:5163:5180	1210552	4	True				
ANR	1211074	IdentifierDecl	ny = y + fy		1210552	0					
ANR	1211075	IdentifierDeclType	fixed		1210552	0					
ANR	1211076	Identifier	ny		1210552	1					
ANR	1211077	AssignmentExpression	ny = y + fy		1210552	2		=			
ANR	1211078	Identifier	ny		1210552	0					
ANR	1211079	AdditiveExpression	y + fy		1210552	1		+			
ANR	1211080	Identifier	y		1210552	0					
ANR	1211081	Identifier	fy		1210552	1					
ANR	1211082	IfStatement	if ( ink_on && ! gap )		1210552	5					
ANR	1211083	Condition	ink_on && ! gap	147:16:5199:5212	1210552	0	True				
ANR	1211084	AndExpression	ink_on && ! gap		1210552	0		&&			
ANR	1211085	Identifier	ink_on		1210552	0					
ANR	1211086	UnaryOperationExpression	! gap		1210552	1					
ANR	1211087	UnaryOperator	!		1210552	0					
ANR	1211088	Identifier	gap		1210552	1					
ANR	1211089	CompoundStatement		94:32:3452:3452	1210552	1					
ANR	1211090	IfStatement	if ( drawing >= 0 )		1210552	0					
ANR	1211091	Condition	drawing >= 0	148:20:5237:5248	1210552	0	True				
ANR	1211092	RelationalExpression	drawing >= 0		1210552	0		>=			
ANR	1211093	Identifier	drawing		1210552	0					
ANR	1211094	PrimaryExpression	0		1210552	1					
ANR	1211095	CompoundStatement		95:34:3488:3488	1210552	1					
ANR	1211096	IfStatement	if ( left >= elt_length && any_abs ( fx ) + any_abs ( fy ) < fixed_half )		1210552	0					
ANR	1211097	Condition	left >= elt_length && any_abs ( fx ) + any_abs ( fy ) < fixed_half	149:24:5277:5336	1210552	0	True				
ANR	1211098	AndExpression	left >= elt_length && any_abs ( fx ) + any_abs ( fy ) < fixed_half		1210552	0		&&			
ANR	1211099	RelationalExpression	left >= elt_length		1210552	0		>=			
ANR	1211100	Identifier	left		1210552	0					
ANR	1211101	Identifier	elt_length		1210552	1					
ANR	1211102	RelationalExpression	any_abs ( fx ) + any_abs ( fy ) < fixed_half		1210552	1		<			
ANR	1211103	AdditiveExpression	any_abs ( fx ) + any_abs ( fy )		1210552	0		+			
ANR	1211104	CallExpression	any_abs ( fx )		1210552	0					
ANR	1211105	Callee	any_abs		1210552	0					
ANR	1211106	Identifier	any_abs		1210552	0					
ANR	1211107	ArgumentList	fx		1210552	1					
ANR	1211108	Argument	fx		1210552	0					
ANR	1211109	Identifier	fx		1210552	0					
ANR	1211110	CallExpression	any_abs ( fy )		1210552	1					
ANR	1211111	Callee	any_abs		1210552	0					
ANR	1211112	Identifier	any_abs		1210552	0					
ANR	1211113	ArgumentList	fy		1210552	1					
ANR	1211114	Argument	fy		1210552	0					
ANR	1211115	Identifier	fy		1210552	0					
ANR	1211116	Identifier	fixed_half		1210552	1					
ANR	1211117	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , nx , ny , udx , udy , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"	150:24:5363:5633	1210552	1	True				
ANR	1211118	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , nx , ny , udx , udy , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		1210552	0		=			
ANR	1211119	Identifier	code		1210552	0					
ANR	1211120	CallExpression	"gx_path_add_dash_notes ( ppath , nx , ny , udx , udy , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		1210552	1					
ANR	1211121	Callee	gx_path_add_dash_notes		1210552	0					
ANR	1211122	Identifier	gx_path_add_dash_notes		1210552	0					
ANR	1211123	ArgumentList	ppath		1210552	1					
ANR	1211124	Argument	ppath		1210552	0					
ANR	1211125	Identifier	ppath		1210552	0					
ANR	1211126	Argument	nx		1210552	1					
ANR	1211127	Identifier	nx		1210552	0					
ANR	1211128	Argument	ny		1210552	2					
ANR	1211129	Identifier	ny		1210552	0					
ANR	1211130	Argument	udx		1210552	3					
ANR	1211131	Identifier	udx		1210552	0					
ANR	1211132	Argument	udy		1210552	4					
ANR	1211133	Identifier	udy		1210552	0					
ANR	1211134	Argument	( notes & pseg -> notes ) | start_notes | sn_dash_tail		1210552	5					
ANR	1211135	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | sn_dash_tail		1210552	0		|			
ANR	1211136	BitAndExpression	notes & pseg -> notes		1210552	0		&			
ANR	1211137	Identifier	notes		1210552	0					
ANR	1211138	PtrMemberAccess	pseg -> notes		1210552	1					
ANR	1211139	Identifier	pseg		1210552	0					
ANR	1211140	Identifier	notes		1210552	1					
ANR	1211141	InclusiveOrExpression	start_notes | sn_dash_tail		1210552	1		|			
ANR	1211142	Identifier	start_notes		1210552	0					
ANR	1211143	Identifier	sn_dash_tail		1210552	1					
ANR	1211144	ElseStatement	else		1210552	0					
ANR	1211145	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , nx , ny , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"	155:24:5684:5944	1210552	0	True				
ANR	1211146	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , nx , ny , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		1210552	0		=			
ANR	1211147	Identifier	code		1210552	0					
ANR	1211148	CallExpression	"gx_path_add_line_notes ( ppath , nx , ny , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		1210552	1					
ANR	1211149	Callee	gx_path_add_line_notes		1210552	0					
ANR	1211150	Identifier	gx_path_add_line_notes		1210552	0					
ANR	1211151	ArgumentList	ppath		1210552	1					
ANR	1211152	Argument	ppath		1210552	0					
ANR	1211153	Identifier	ppath		1210552	0					
ANR	1211154	Argument	nx		1210552	1					
ANR	1211155	Identifier	nx		1210552	0					
ANR	1211156	Argument	ny		1210552	2					
ANR	1211157	Identifier	ny		1210552	0					
ANR	1211158	Argument	( notes & pseg -> notes ) | start_notes | sn_dash_tail		1210552	3					
ANR	1211159	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | sn_dash_tail		1210552	0		|			
ANR	1211160	BitAndExpression	notes & pseg -> notes		1210552	0		&			
ANR	1211161	Identifier	notes		1210552	0					
ANR	1211162	PtrMemberAccess	pseg -> notes		1210552	1					
ANR	1211163	Identifier	pseg		1210552	0					
ANR	1211164	Identifier	notes		1210552	1					
ANR	1211165	InclusiveOrExpression	start_notes | sn_dash_tail		1210552	1		|			
ANR	1211166	Identifier	start_notes		1210552	0					
ANR	1211167	Identifier	sn_dash_tail		1210552	1					
ANR	1211168	ExpressionStatement	notes |= sn_not_first	160:16:5980:6001	1210552	1	True				
ANR	1211169	AssignmentExpression	notes |= sn_not_first		1210552	0		|=			
ANR	1211170	Identifier	notes		1210552	0					
ANR	1211171	Identifier	sn_not_first		1210552	1					
ANR	1211172	ElseStatement	else		1210552	0					
ANR	1211173	CompoundStatement		108:19:4259:4259	1210552	0					
ANR	1211174	IfStatement	if ( drawing > 0 )		1210552	0					
ANR	1211175	Condition	drawing > 0	162:20:6044:6054	1210552	0	True				
ANR	1211176	RelationalExpression	drawing > 0		1210552	0		>			
ANR	1211177	Identifier	drawing		1210552	0					
ANR	1211178	PrimaryExpression	0		1210552	1					
ANR	1211179	ReturnStatement	return 0 ;	163:20:6088:6096	1210552	1	True				
ANR	1211180	PrimaryExpression	0		1210552	0					
ANR	1211181	ExpressionStatement	"code = gx_path_add_point ( ppath , nx , ny )"	164:16:6114:6153	1210552	1	True				
ANR	1211182	AssignmentExpression	"code = gx_path_add_point ( ppath , nx , ny )"		1210552	0		=			
ANR	1211183	Identifier	code		1210552	0					
ANR	1211184	CallExpression	"gx_path_add_point ( ppath , nx , ny )"		1210552	1					
ANR	1211185	Callee	gx_path_add_point		1210552	0					
ANR	1211186	Identifier	gx_path_add_point		1210552	0					
ANR	1211187	ArgumentList	ppath		1210552	1					
ANR	1211188	Argument	ppath		1210552	0					
ANR	1211189	Identifier	ppath		1210552	0					
ANR	1211190	Argument	nx		1210552	1					
ANR	1211191	Identifier	nx		1210552	0					
ANR	1211192	Argument	ny		1210552	2					
ANR	1211193	Identifier	ny		1210552	0					
ANR	1211194	ExpressionStatement	notes &= ~sn_not_first	165:16:6171:6193	1210552	2	True				
ANR	1211195	AssignmentExpression	notes &= ~sn_not_first		1210552	0		&=			
ANR	1211196	Identifier	notes		1210552	0					
ANR	1211197	Identifier	~sn_not_first		1210552	1					
ANR	1211198	ExpressionStatement	drawing = 0	166:16:6211:6222	1210552	3	True				
ANR	1211199	AssignmentExpression	drawing = 0		1210552	0		=			
ANR	1211200	Identifier	drawing		1210552	0					
ANR	1211201	PrimaryExpression	0		1210552	1					
ANR	1211202	IfStatement	if ( code < 0 )		1210552	6					
ANR	1211203	Condition	code < 0	168:16:6254:6261	1210552	0	True				
ANR	1211204	RelationalExpression	code < 0		1210552	0		<			
ANR	1211205	Identifier	code		1210552	0					
ANR	1211206	PrimaryExpression	0		1210552	1					
ANR	1211207	ReturnStatement	return code ;	169:16:6280:6291	1210552	1	True				
ANR	1211208	Identifier	code		1210552	0					
ANR	1211209	ExpressionStatement	left -= elt_length	170:12:6305:6323	1210552	7	True				
ANR	1211210	AssignmentExpression	left -= elt_length		1210552	0		-=			
ANR	1211211	Identifier	left		1210552	0					
ANR	1211212	Identifier	elt_length		1210552	1					
ANR	1211213	ExpressionStatement	ink_on = ! ink_on	171:12:6337:6353	1210552	8	True				
ANR	1211214	AssignmentExpression	ink_on = ! ink_on		1210552	0		=			
ANR	1211215	Identifier	ink_on		1210552	0					
ANR	1211216	UnaryOperationExpression	! ink_on		1210552	1					
ANR	1211217	UnaryOperator	!		1210552	0					
ANR	1211218	Identifier	ink_on		1210552	1					
ANR	1211219	ExpressionStatement	start_notes = sn_dash_head	172:12:6367:6393	1210552	9	True				
ANR	1211220	AssignmentExpression	start_notes = sn_dash_head		1210552	0		=			
ANR	1211221	Identifier	start_notes		1210552	0					
ANR	1211222	Identifier	sn_dash_head		1210552	1					
ANR	1211223	IfStatement	if ( ++ index == count )		1210552	10					
ANR	1211224	Condition	++ index == count	173:16:6411:6426	1210552	0	True				
ANR	1211225	EqualityExpression	++ index == count		1210552	0		==			
ANR	1211226	UnaryExpression	++ index		1210552	0					
ANR	1211227	IncDec	++		1210552	0					
ANR	1211228	Identifier	index		1210552	1					
ANR	1211229	Identifier	count		1210552	1					
ANR	1211230	ExpressionStatement	index = 0	174:16:6445:6454	1210552	1	True				
ANR	1211231	AssignmentExpression	index = 0		1210552	0		=			
ANR	1211232	Identifier	index		1210552	0					
ANR	1211233	PrimaryExpression	0		1210552	1					
ANR	1211234	ExpressionStatement	elt_length = pattern [ index ] * scale	175:12:6468:6503	1210552	11	True				
ANR	1211235	AssignmentExpression	elt_length = pattern [ index ] * scale		1210552	0		=			
ANR	1211236	Identifier	elt_length		1210552	0					
ANR	1211237	MultiplicativeExpression	pattern [ index ] * scale		1210552	1		*			
ANR	1211238	ArrayIndexing	pattern [ index ]		1210552	0					
ANR	1211239	Identifier	pattern		1210552	0					
ANR	1211240	Identifier	index		1210552	1					
ANR	1211241	Identifier	scale		1210552	1					
ANR	1211242	ExpressionStatement	"x = nx , y = ny"	176:12:6517:6531	1210552	12	True				
ANR	1211243	Expression	"x = nx , y = ny"		1210552	0					
ANR	1211244	AssignmentExpression	x = nx		1210552	0		=			
ANR	1211245	Identifier	x		1210552	0					
ANR	1211246	Identifier	nx		1210552	1					
ANR	1211247	AssignmentExpression	y = ny		1210552	1		=			
ANR	1211248	Identifier	y		1210552	0					
ANR	1211249	Identifier	ny		1210552	1					
ANR	1211250	ExpressionStatement	elt_length -= left	178:8:6551:6569	1210552	9	True				
ANR	1211251	AssignmentExpression	elt_length -= left		1210552	0		-=			
ANR	1211252	Identifier	elt_length		1210552	0					
ANR	1211253	Identifier	left		1210552	1					
ANR	1211254	IfStatement	if ( wrap )		1210552	10					
ANR	1211255	Condition	wrap	180:12:6632:6635	1210552	0	True				
ANR	1211256	Identifier	wrap		1210552	0					
ANR	1211257	CompoundStatement		127:18:4875:4875	1210552	1					
ANR	1211258	ExpressionStatement	end_notes = sn_dash_tail	182:12:6724:6748	1210552	0	True				
ANR	1211259	AssignmentExpression	end_notes = sn_dash_tail		1210552	0		=			
ANR	1211260	Identifier	end_notes		1210552	0					
ANR	1211261	Identifier	sn_dash_tail		1210552	1					
ANR	1211262	ElseStatement	else		1210552	0					
ANR	1211263	CompoundStatement		134:12:5213:5246	1210552	0					
ANR	1211264	IdentifierDeclStatement	const segment * pseg2 = pseg -> next ;	187:12:6976:7009	1210552	0	True				
ANR	1211265	IdentifierDecl	* pseg2 = pseg -> next		1210552	0					
ANR	1211266	IdentifierDeclType	const segment *		1210552	0					
ANR	1211267	Identifier	pseg2		1210552	1					
ANR	1211268	AssignmentExpression	* pseg2 = pseg -> next		1210552	2		=			
ANR	1211269	Identifier	pseg2		1210552	0					
ANR	1211270	PtrMemberAccess	pseg -> next		1210552	1					
ANR	1211271	Identifier	pseg		1210552	0					
ANR	1211272	Identifier	next		1210552	1					
ANR	1211273	ExpressionStatement	end_notes = 0	189:12:7024:7037	1210552	1	True				
ANR	1211274	AssignmentExpression	end_notes = 0		1210552	0		=			
ANR	1211275	Identifier	end_notes		1210552	0					
ANR	1211276	PrimaryExpression	0		1210552	1					
ANR	1211277	WhileStatement	while ( pseg2 != 0 && pseg2 -> type != s_start )		1210552	2					
ANR	1211278	Condition	pseg2 != 0 && pseg2 -> type != s_start	190:19:7058:7093	1210552	0	True				
ANR	1211279	AndExpression	pseg2 != 0 && pseg2 -> type != s_start		1210552	0		&&			
ANR	1211280	EqualityExpression	pseg2 != 0		1210552	0		!=			
ANR	1211281	Identifier	pseg2		1210552	0					
ANR	1211282	PrimaryExpression	0		1210552	1					
ANR	1211283	EqualityExpression	pseg2 -> type != s_start		1210552	1		!=			
ANR	1211284	PtrMemberAccess	pseg2 -> type		1210552	0					
ANR	1211285	Identifier	pseg2		1210552	0					
ANR	1211286	Identifier	type		1210552	1					
ANR	1211287	Identifier	s_start		1210552	1					
ANR	1211288	CompoundStatement		138:12:5345:5345	1210552	1					
ANR	1211289	IfStatement	if ( ( pseg2 -> pt . x != sx ) || ( pseg2 -> pt . x != sy ) )		1210552	0					
ANR	1211290	Condition	( pseg2 -> pt . x != sx ) || ( pseg2 -> pt . x != sy )	192:20:7130:7171	1210552	0	True				
ANR	1211291	OrExpression	( pseg2 -> pt . x != sx ) || ( pseg2 -> pt . x != sy )		1210552	0		||			
ANR	1211292	EqualityExpression	pseg2 -> pt . x != sx		1210552	0		!=			
ANR	1211293	MemberAccess	pseg2 -> pt . x		1210552	0					
ANR	1211294	PtrMemberAccess	pseg2 -> pt		1210552	0					
ANR	1211295	Identifier	pseg2		1210552	0					
ANR	1211296	Identifier	pt		1210552	1					
ANR	1211297	Identifier	x		1210552	1					
ANR	1211298	Identifier	sx		1210552	1					
ANR	1211299	EqualityExpression	pseg2 -> pt . x != sy		1210552	1		!=			
ANR	1211300	MemberAccess	pseg2 -> pt . x		1210552	0					
ANR	1211301	PtrMemberAccess	pseg2 -> pt		1210552	0					
ANR	1211302	Identifier	pseg2		1210552	0					
ANR	1211303	Identifier	pt		1210552	1					
ANR	1211304	Identifier	x		1210552	1					
ANR	1211305	Identifier	sy		1210552	1					
ANR	1211306	CompoundStatement		139:64:5411:5411	1210552	1					
ANR	1211307	ExpressionStatement	end_notes = sn_dash_tail	194:20:7261:7285	1210552	0	True				
ANR	1211308	AssignmentExpression	end_notes = sn_dash_tail		1210552	0		=			
ANR	1211309	Identifier	end_notes		1210552	0					
ANR	1211310	Identifier	sn_dash_tail		1210552	1					
ANR	1211311	BreakStatement	break ;	195:20:7307:7312	1210552	1	True				
ANR	1211312	ExpressionStatement	pseg2 = pseg2 -> next	197:16:7348:7367	1210552	1	True				
ANR	1211313	AssignmentExpression	pseg2 = pseg2 -> next		1210552	0		=			
ANR	1211314	Identifier	pseg2		1210552	0					
ANR	1211315	PtrMemberAccess	pseg2 -> next		1210552	1					
ANR	1211316	Identifier	pseg2		1210552	0					
ANR	1211317	Identifier	next		1210552	1					
ANR	1211318	Label	on :	200:6:7399:7401	1210552	11	True				
ANR	1211319	Identifier	on		1210552	0					
ANR	1211320	IfStatement	if ( ink_on && ! gap )		1210552	12					
ANR	1211321	Condition	ink_on && ! gap	200:13:7406:7419	1210552	0	True				
ANR	1211322	AndExpression	ink_on && ! gap		1210552	0		&&			
ANR	1211323	Identifier	ink_on		1210552	0					
ANR	1211324	UnaryOperationExpression	! gap		1210552	1					
ANR	1211325	UnaryOperator	!		1210552	0					
ANR	1211326	Identifier	gap		1210552	1					
ANR	1211327	CompoundStatement		147:29:5659:5659	1210552	1					
ANR	1211328	IfStatement	if ( drawing >= 0 )		1210552	0					
ANR	1211329	Condition	drawing >= 0	201:16:7440:7451	1210552	0	True				
ANR	1211330	RelationalExpression	drawing >= 0		1210552	0		>=			
ANR	1211331	Identifier	drawing		1210552	0					
ANR	1211332	PrimaryExpression	0		1210552	1					
ANR	1211333	CompoundStatement		148:30:5691:5691	1210552	1					
ANR	1211334	IfStatement	if ( pseg -> type == s_line_close && drawing > 0 )		1210552	0					
ANR	1211335	Condition	pseg -> type == s_line_close && drawing > 0	202:20:7476:7516	1210552	0	True				
ANR	1211336	AndExpression	pseg -> type == s_line_close && drawing > 0		1210552	0		&&			
ANR	1211337	EqualityExpression	pseg -> type == s_line_close		1210552	0		==			
ANR	1211338	PtrMemberAccess	pseg -> type		1210552	0					
ANR	1211339	Identifier	pseg		1210552	0					
ANR	1211340	Identifier	type		1210552	1					
ANR	1211341	Identifier	s_line_close		1210552	1					
ANR	1211342	RelationalExpression	drawing > 0		1210552	1		>			
ANR	1211343	Identifier	drawing		1210552	0					
ANR	1211344	PrimaryExpression	0		1210552	1					
ANR	1211345	ExpressionStatement	"code = gx_path_close_subpath_notes ( ppath , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	203:20:7539:7797	1210552	1	True				
ANR	1211346	AssignmentExpression	"code = gx_path_close_subpath_notes ( ppath , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	0		=			
ANR	1211347	Identifier	code		1210552	0					
ANR	1211348	CallExpression	"gx_path_close_subpath_notes ( ppath , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	1					
ANR	1211349	Callee	gx_path_close_subpath_notes		1210552	0					
ANR	1211350	Identifier	gx_path_close_subpath_notes		1210552	0					
ANR	1211351	ArgumentList	ppath		1210552	1					
ANR	1211352	Argument	ppath		1210552	0					
ANR	1211353	Identifier	ppath		1210552	0					
ANR	1211354	Argument	( notes & pseg -> notes ) | start_notes | end_notes		1210552	1					
ANR	1211355	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		1210552	0		|			
ANR	1211356	BitAndExpression	notes & pseg -> notes		1210552	0		&			
ANR	1211357	Identifier	notes		1210552	0					
ANR	1211358	PtrMemberAccess	pseg -> notes		1210552	1					
ANR	1211359	Identifier	pseg		1210552	0					
ANR	1211360	Identifier	notes		1210552	1					
ANR	1211361	InclusiveOrExpression	start_notes | end_notes		1210552	1		|			
ANR	1211362	Identifier	start_notes		1210552	0					
ANR	1211363	Identifier	end_notes		1210552	1					
ANR	1211364	ElseStatement	else		1210552	0					
ANR	1211365	IfStatement	if ( ( any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half ) && ( udx | udy ) )		1210552	0					
ANR	1211366	Condition	( any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half ) && ( udx | udy )	207:25:7824:7911	1210552	0	True				
ANR	1211367	AndExpression	( any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half ) && ( udx | udy )		1210552	0		&&			
ANR	1211368	RelationalExpression	any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half		1210552	0		<			
ANR	1211369	AdditiveExpression	any_abs ( sx - x ) + any_abs ( sy - y )		1210552	0		+			
ANR	1211370	CallExpression	any_abs ( sx - x )		1210552	0					
ANR	1211371	Callee	any_abs		1210552	0					
ANR	1211372	Identifier	any_abs		1210552	0					
ANR	1211373	ArgumentList	sx - x		1210552	1					
ANR	1211374	Argument	sx - x		1210552	0					
ANR	1211375	AdditiveExpression	sx - x		1210552	0		-			
ANR	1211376	Identifier	sx		1210552	0					
ANR	1211377	Identifier	x		1210552	1					
ANR	1211378	CallExpression	any_abs ( sy - y )		1210552	1					
ANR	1211379	Callee	any_abs		1210552	0					
ANR	1211380	Identifier	any_abs		1210552	0					
ANR	1211381	ArgumentList	sy - y		1210552	1					
ANR	1211382	Argument	sy - y		1210552	0					
ANR	1211383	AdditiveExpression	sy - y		1210552	0		-			
ANR	1211384	Identifier	sy		1210552	0					
ANR	1211385	Identifier	y		1210552	1					
ANR	1211386	Identifier	fixed_half		1210552	1					
ANR	1211387	InclusiveOrExpression	udx | udy		1210552	1		|			
ANR	1211388	Identifier	udx		1210552	0					
ANR	1211389	Identifier	udy		1210552	1					
ANR	1211390	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	214:20:8310:8515	1210552	1	True				
ANR	1211391	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	0		=			
ANR	1211392	Identifier	code		1210552	0					
ANR	1211393	CallExpression	"gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	1					
ANR	1211394	Callee	gx_path_add_dash_notes		1210552	0					
ANR	1211395	Identifier	gx_path_add_dash_notes		1210552	0					
ANR	1211396	ArgumentList	ppath		1210552	1					
ANR	1211397	Argument	ppath		1210552	0					
ANR	1211398	Identifier	ppath		1210552	0					
ANR	1211399	Argument	sx		1210552	1					
ANR	1211400	Identifier	sx		1210552	0					
ANR	1211401	Argument	sy		1210552	2					
ANR	1211402	Identifier	sy		1210552	0					
ANR	1211403	Argument	udx		1210552	3					
ANR	1211404	Identifier	udx		1210552	0					
ANR	1211405	Argument	udy		1210552	4					
ANR	1211406	Identifier	udy		1210552	0					
ANR	1211407	Argument	( notes & pseg -> notes ) | start_notes | end_notes		1210552	5					
ANR	1211408	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		1210552	0		|			
ANR	1211409	BitAndExpression	notes & pseg -> notes		1210552	0		&			
ANR	1211410	Identifier	notes		1210552	0					
ANR	1211411	PtrMemberAccess	pseg -> notes		1210552	1					
ANR	1211412	Identifier	pseg		1210552	0					
ANR	1211413	Identifier	notes		1210552	1					
ANR	1211414	InclusiveOrExpression	start_notes | end_notes		1210552	1		|			
ANR	1211415	Identifier	start_notes		1210552	0					
ANR	1211416	Identifier	end_notes		1210552	1					
ANR	1211417	ElseStatement	else		1210552	0					
ANR	1211418	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , sx , sy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	218:20:8558:8753	1210552	0	True				
ANR	1211419	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , sx , sy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	0		=			
ANR	1211420	Identifier	code		1210552	0					
ANR	1211421	CallExpression	"gx_path_add_line_notes ( ppath , sx , sy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	1					
ANR	1211422	Callee	gx_path_add_line_notes		1210552	0					
ANR	1211423	Identifier	gx_path_add_line_notes		1210552	0					
ANR	1211424	ArgumentList	ppath		1210552	1					
ANR	1211425	Argument	ppath		1210552	0					
ANR	1211426	Identifier	ppath		1210552	0					
ANR	1211427	Argument	sx		1210552	1					
ANR	1211428	Identifier	sx		1210552	0					
ANR	1211429	Argument	sy		1210552	2					
ANR	1211430	Identifier	sy		1210552	0					
ANR	1211431	Argument	( notes & pseg -> notes ) | start_notes | end_notes		1210552	3					
ANR	1211432	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		1210552	0		|			
ANR	1211433	BitAndExpression	notes & pseg -> notes		1210552	0		&			
ANR	1211434	Identifier	notes		1210552	0					
ANR	1211435	PtrMemberAccess	pseg -> notes		1210552	1					
ANR	1211436	Identifier	pseg		1210552	0					
ANR	1211437	Identifier	notes		1210552	1					
ANR	1211438	InclusiveOrExpression	start_notes | end_notes		1210552	1		|			
ANR	1211439	Identifier	start_notes		1210552	0					
ANR	1211440	Identifier	end_notes		1210552	1					
ANR	1211441	ExpressionStatement	notes |= sn_not_first	221:16:8771:8792	1210552	1	True				
ANR	1211442	AssignmentExpression	notes |= sn_not_first		1210552	0		|=			
ANR	1211443	Identifier	notes		1210552	0					
ANR	1211444	Identifier	sn_not_first		1210552	1					
ANR	1211445	ElseStatement	else		1210552	0					
ANR	1211446	CompoundStatement		170:15:7060:7060	1210552	0					
ANR	1211447	ExpressionStatement	"code = gx_path_add_point ( ppath , sx , sy )"	224:12:8837:8876	1210552	0	True				
ANR	1211448	AssignmentExpression	"code = gx_path_add_point ( ppath , sx , sy )"		1210552	0		=			
ANR	1211449	Identifier	code		1210552	0					
ANR	1211450	CallExpression	"gx_path_add_point ( ppath , sx , sy )"		1210552	1					
ANR	1211451	Callee	gx_path_add_point		1210552	0					
ANR	1211452	Identifier	gx_path_add_point		1210552	0					
ANR	1211453	ArgumentList	ppath		1210552	1					
ANR	1211454	Argument	ppath		1210552	0					
ANR	1211455	Identifier	ppath		1210552	0					
ANR	1211456	Argument	sx		1210552	1					
ANR	1211457	Identifier	sx		1210552	0					
ANR	1211458	Argument	sy		1210552	2					
ANR	1211459	Identifier	sy		1210552	0					
ANR	1211460	ExpressionStatement	notes &= ~sn_not_first	225:12:8890:8912	1210552	1	True				
ANR	1211461	AssignmentExpression	notes &= ~sn_not_first		1210552	0		&=			
ANR	1211462	Identifier	notes		1210552	0					
ANR	1211463	Identifier	~sn_not_first		1210552	1					
ANR	1211464	IfStatement	if ( elt_length < fixed2float ( fixed_epsilon ) && ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0 ) )		1210552	2					
ANR	1211465	Condition	elt_length < fixed2float ( fixed_epsilon ) && ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0 )	226:16:8930:9135	1210552	0	True				
ANR	1211466	AndExpression	elt_length < fixed2float ( fixed_epsilon ) && ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0 )		1210552	0		&&			
ANR	1211467	RelationalExpression	elt_length < fixed2float ( fixed_epsilon )		1210552	0		<			
ANR	1211468	Identifier	elt_length		1210552	0					
ANR	1211469	CallExpression	fixed2float ( fixed_epsilon )		1210552	1					
ANR	1211470	Callee	fixed2float		1210552	0					
ANR	1211471	Identifier	fixed2float		1210552	0					
ANR	1211472	ArgumentList	fixed_epsilon		1210552	1					
ANR	1211473	Argument	fixed_epsilon		1210552	0					
ANR	1211474	Identifier	fixed_epsilon		1210552	0					
ANR	1211475	OrExpression	pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0		1210552	1		||			
ANR	1211476	EqualityExpression	pseg -> next == 0		1210552	0		==			
ANR	1211477	PtrMemberAccess	pseg -> next		1210552	0					
ANR	1211478	Identifier	pseg		1210552	0					
ANR	1211479	Identifier	next		1210552	1					
ANR	1211480	PrimaryExpression	0		1210552	1					
ANR	1211481	OrExpression	pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0		1210552	1		||			
ANR	1211482	EqualityExpression	pseg -> next -> type == s_start		1210552	0		==			
ANR	1211483	PtrMemberAccess	pseg -> next -> type		1210552	0					
ANR	1211484	PtrMemberAccess	pseg -> next		1210552	0					
ANR	1211485	Identifier	pseg		1210552	0					
ANR	1211486	Identifier	next		1210552	1					
ANR	1211487	Identifier	type		1210552	1					
ANR	1211488	Identifier	s_start		1210552	1					
ANR	1211489	OrExpression	pseg -> next -> type == s_gap || elt_length == 0		1210552	1		||			
ANR	1211490	EqualityExpression	pseg -> next -> type == s_gap		1210552	0		==			
ANR	1211491	PtrMemberAccess	pseg -> next -> type		1210552	0					
ANR	1211492	PtrMemberAccess	pseg -> next		1210552	0					
ANR	1211493	Identifier	pseg		1210552	0					
ANR	1211494	Identifier	next		1210552	1					
ANR	1211495	Identifier	type		1210552	1					
ANR	1211496	Identifier	s_gap		1210552	1					
ANR	1211497	EqualityExpression	elt_length == 0		1210552	1		==			
ANR	1211498	Identifier	elt_length		1210552	0					
ANR	1211499	PrimaryExpression	0		1210552	1					
ANR	1211500	CompoundStatement		185:16:7712:7730	1210552	1					
ANR	1211501	IdentifierDeclStatement	double elt_length1 ;	238:16:9475:9493	1210552	0	True				
ANR	1211502	IdentifierDecl	elt_length1		1210552	0					
ANR	1211503	IdentifierDeclType	double		1210552	0					
ANR	1211504	Identifier	elt_length1		1210552	1					
ANR	1211505	IfStatement	if ( code < 0 )		1210552	1					
ANR	1211506	Condition	code < 0	240:20:9516:9523	1210552	0	True				
ANR	1211507	RelationalExpression	code < 0		1210552	0		<			
ANR	1211508	Identifier	code		1210552	0					
ANR	1211509	PrimaryExpression	0		1210552	1					
ANR	1211510	ReturnStatement	return code ;	241:20:9546:9557	1210552	1	True				
ANR	1211511	Identifier	code		1210552	0					
ANR	1211512	IfStatement	if ( ++ index == count )		1210552	2					
ANR	1211513	Condition	++ index == count	242:20:9579:9594	1210552	0	True				
ANR	1211514	EqualityExpression	++ index == count		1210552	0		==			
ANR	1211515	UnaryExpression	++ index		1210552	0					
ANR	1211516	IncDec	++		1210552	0					
ANR	1211517	Identifier	index		1210552	1					
ANR	1211518	Identifier	count		1210552	1					
ANR	1211519	ExpressionStatement	index = 0	243:20:9617:9626	1210552	1	True				
ANR	1211520	AssignmentExpression	index = 0		1210552	0		=			
ANR	1211521	Identifier	index		1210552	0					
ANR	1211522	PrimaryExpression	0		1210552	1					
ANR	1211523	ExpressionStatement	elt_length1 = pattern [ index ] * scale	244:16:9644:9680	1210552	3	True				
ANR	1211524	AssignmentExpression	elt_length1 = pattern [ index ] * scale		1210552	0		=			
ANR	1211525	Identifier	elt_length1		1210552	0					
ANR	1211526	MultiplicativeExpression	pattern [ index ] * scale		1210552	1		*			
ANR	1211527	ArrayIndexing	pattern [ index ]		1210552	0					
ANR	1211528	Identifier	pattern		1210552	0					
ANR	1211529	Identifier	index		1210552	1					
ANR	1211530	Identifier	scale		1210552	1					
ANR	1211531	IfStatement	if ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap )		1210552	4					
ANR	1211532	Condition	pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap	245:20:9702:9816	1210552	0	True				
ANR	1211533	OrExpression	pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap		1210552	0		||			
ANR	1211534	EqualityExpression	pseg -> next == 0		1210552	0		==			
ANR	1211535	PtrMemberAccess	pseg -> next		1210552	0					
ANR	1211536	Identifier	pseg		1210552	0					
ANR	1211537	Identifier	next		1210552	1					
ANR	1211538	PrimaryExpression	0		1210552	1					
ANR	1211539	OrExpression	pseg -> next -> type == s_start || pseg -> next -> type == s_gap		1210552	1		||			
ANR	1211540	EqualityExpression	pseg -> next -> type == s_start		1210552	0		==			
ANR	1211541	PtrMemberAccess	pseg -> next -> type		1210552	0					
ANR	1211542	PtrMemberAccess	pseg -> next		1210552	0					
ANR	1211543	Identifier	pseg		1210552	0					
ANR	1211544	Identifier	next		1210552	1					
ANR	1211545	Identifier	type		1210552	1					
ANR	1211546	Identifier	s_start		1210552	1					
ANR	1211547	EqualityExpression	pseg -> next -> type == s_gap		1210552	1		==			
ANR	1211548	PtrMemberAccess	pseg -> next -> type		1210552	0					
ANR	1211549	PtrMemberAccess	pseg -> next		1210552	0					
ANR	1211550	Identifier	pseg		1210552	0					
ANR	1211551	Identifier	next		1210552	1					
ANR	1211552	Identifier	type		1210552	1					
ANR	1211553	Identifier	s_gap		1210552	1					
ANR	1211554	CompoundStatement		194:47:8056:8056	1210552	1					
ANR	1211555	ExpressionStatement	elt_length = elt_length1	248:20:9841:9865	1210552	0	True				
ANR	1211556	AssignmentExpression	elt_length = elt_length1		1210552	0		=			
ANR	1211557	Identifier	elt_length		1210552	0					
ANR	1211558	Identifier	elt_length1		1210552	1					
ANR	1211559	ExpressionStatement	left = 0	249:20:9887:9895	1210552	1	True				
ANR	1211560	AssignmentExpression	left = 0		1210552	0		=			
ANR	1211561	Identifier	left		1210552	0					
ANR	1211562	PrimaryExpression	0		1210552	1					
ANR	1211563	ExpressionStatement	ink_on = true	250:20:9917:9930	1210552	2	True				
ANR	1211564	AssignmentExpression	ink_on = true		1210552	0		=			
ANR	1211565	Identifier	ink_on		1210552	0					
ANR	1211566	Identifier	true		1210552	1					
ANR	1211567	GotoStatement	goto on ;	251:20:9952:9959	1210552	3	True				
ANR	1211568	Identifier	on		1210552	0					
ANR	1211569	IfStatement	if ( elt_length1 == 0 )		1210552	5					
ANR	1211570	Condition	elt_length1 == 0	256:20:10164:10179	1210552	0	True				
ANR	1211571	EqualityExpression	elt_length1 == 0		1210552	0		==			
ANR	1211572	Identifier	elt_length1		1210552	0					
ANR	1211573	PrimaryExpression	0		1210552	1					
ANR	1211574	CompoundStatement		203:38:8419:8419	1210552	1					
ANR	1211575	ExpressionStatement	left = 0	257:20:10204:10212	1210552	0	True				
ANR	1211576	AssignmentExpression	left = 0		1210552	0		=			
ANR	1211577	Identifier	left		1210552	0					
ANR	1211578	PrimaryExpression	0		1210552	1					
ANR	1211579	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	258:20:10234:10438	1210552	1	True				
ANR	1211580	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	0		=			
ANR	1211581	Identifier	code		1210552	0					
ANR	1211582	CallExpression	"gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		1210552	1					
ANR	1211583	Callee	gx_path_add_dash_notes		1210552	0					
ANR	1211584	Identifier	gx_path_add_dash_notes		1210552	0					
ANR	1211585	ArgumentList	ppath		1210552	1					
ANR	1211586	Argument	ppath		1210552	0					
ANR	1211587	Identifier	ppath		1210552	0					
ANR	1211588	Argument	sx		1210552	1					
ANR	1211589	Identifier	sx		1210552	0					
ANR	1211590	Argument	sy		1210552	2					
ANR	1211591	Identifier	sy		1210552	0					
ANR	1211592	Argument	udx		1210552	3					
ANR	1211593	Identifier	udx		1210552	0					
ANR	1211594	Argument	udy		1210552	4					
ANR	1211595	Identifier	udy		1210552	0					
ANR	1211596	Argument	( notes & pseg -> notes ) | start_notes | end_notes		1210552	5					
ANR	1211597	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		1210552	0		|			
ANR	1211598	BitAndExpression	notes & pseg -> notes		1210552	0		&			
ANR	1211599	Identifier	notes		1210552	0					
ANR	1211600	PtrMemberAccess	pseg -> notes		1210552	1					
ANR	1211601	Identifier	pseg		1210552	0					
ANR	1211602	Identifier	notes		1210552	1					
ANR	1211603	InclusiveOrExpression	start_notes | end_notes		1210552	1		|			
ANR	1211604	Identifier	start_notes		1210552	0					
ANR	1211605	Identifier	end_notes		1210552	1					
ANR	1211606	IfStatement	if ( ++ index == count )		1210552	2					
ANR	1211607	Condition	++ index == count	261:24:10464:10479	1210552	0	True				
ANR	1211608	EqualityExpression	++ index == count		1210552	0		==			
ANR	1211609	UnaryExpression	++ index		1210552	0					
ANR	1211610	IncDec	++		1210552	0					
ANR	1211611	Identifier	index		1210552	1					
ANR	1211612	Identifier	count		1210552	1					
ANR	1211613	ExpressionStatement	index = 0	262:24:10506:10515	1210552	1	True				
ANR	1211614	AssignmentExpression	index = 0		1210552	0		=			
ANR	1211615	Identifier	index		1210552	0					
ANR	1211616	PrimaryExpression	0		1210552	1					
ANR	1211617	ExpressionStatement	elt_length = pattern [ index ] * scale	263:20:10537:10572	1210552	3	True				
ANR	1211618	AssignmentExpression	elt_length = pattern [ index ] * scale		1210552	0		=			
ANR	1211619	Identifier	elt_length		1210552	0					
ANR	1211620	MultiplicativeExpression	pattern [ index ] * scale		1210552	1		*			
ANR	1211621	ArrayIndexing	pattern [ index ]		1210552	0					
ANR	1211622	Identifier	pattern		1210552	0					
ANR	1211623	Identifier	index		1210552	1					
ANR	1211624	Identifier	scale		1210552	1					
ANR	1211625	ExpressionStatement	ink_on = false	264:20:10594:10608	1210552	4	True				
ANR	1211626	AssignmentExpression	ink_on = false		1210552	0		=			
ANR	1211627	Identifier	ink_on		1210552	0					
ANR	1211628	Identifier	false		1210552	1					
ANR	1211629	ElseStatement	else		1210552	0					
ANR	1211630	IfStatement	if ( -- index == 0 )		1210552	0					
ANR	1211631	Condition	-- index == 0	265:27:10637:10648	1210552	0	True				
ANR	1211632	EqualityExpression	-- index == 0		1210552	0		==			
ANR	1211633	UnaryExpression	-- index		1210552	0					
ANR	1211634	IncDec	--		1210552	0					
ANR	1211635	Identifier	index		1210552	1					
ANR	1211636	PrimaryExpression	0		1210552	1					
ANR	1211637	CompoundStatement		212:41:8888:8888	1210552	1					
ANR	1211638	ExpressionStatement	index = count - 1	267:20:10717:10734	1210552	0	True				
ANR	1211639	AssignmentExpression	index = count - 1		1210552	0		=			
ANR	1211640	Identifier	index		1210552	0					
ANR	1211641	AdditiveExpression	count - 1		1210552	1		-			
ANR	1211642	Identifier	count		1210552	0					
ANR	1211643	PrimaryExpression	1		1210552	1					
ANR	1211644	IfStatement	if ( drawing > 0 )		1210552	3					
ANR	1211645	Condition	drawing > 0	270:16:10784:10794	1210552	0	True				
ANR	1211646	RelationalExpression	drawing > 0		1210552	0		>			
ANR	1211647	Identifier	drawing		1210552	0					
ANR	1211648	PrimaryExpression	0		1210552	1					
ANR	1211649	ReturnStatement	return code ;	271:16:10824:10835	1210552	1	True				
ANR	1211650	Identifier	code		1210552	0					
ANR	1211651	ExpressionStatement	drawing = 0	272:12:10849:10860	1210552	4	True				
ANR	1211652	AssignmentExpression	drawing = 0		1210552	0		=			
ANR	1211653	Identifier	drawing		1210552	0					
ANR	1211654	PrimaryExpression	0		1210552	1					
ANR	1211655	IfStatement	if ( code < 0 )		1210552	13					
ANR	1211656	Condition	code < 0	274:12:10884:10891	1210552	0	True				
ANR	1211657	RelationalExpression	code < 0		1210552	0		<			
ANR	1211658	Identifier	code		1210552	0					
ANR	1211659	PrimaryExpression	0		1210552	1					
ANR	1211660	ReturnStatement	return code ;	275:12:10906:10917	1210552	1	True				
ANR	1211661	Identifier	code		1210552	0					
ANR	1211662	ExpressionStatement	"x = sx , y = sy"	276:8:10927:10941	1210552	14	True				
ANR	1211663	Expression	"x = sx , y = sy"		1210552	0					
ANR	1211664	AssignmentExpression	x = sx		1210552	0		=			
ANR	1211665	Identifier	x		1210552	0					
ANR	1211666	Identifier	sx		1210552	1					
ANR	1211667	AssignmentExpression	y = sy		1210552	1		=			
ANR	1211668	Identifier	y		1210552	0					
ANR	1211669	Identifier	sy		1210552	1					
ANR	1211670	ExpressionStatement	cap = pgs_lp -> dash_cap	277:8:10951:10973	1210552	15	True				
ANR	1211671	AssignmentExpression	cap = pgs_lp -> dash_cap		1210552	0		=			
ANR	1211672	Identifier	cap		1210552	0					
ANR	1211673	PtrMemberAccess	pgs_lp -> dash_cap		1210552	1					
ANR	1211674	Identifier	pgs_lp		1210552	0					
ANR	1211675	Identifier	dash_cap		1210552	1					
ANR	1211676	IfStatement	if ( wrap && drawing <= 0 )		1210552	25					
ANR	1211677	Condition	wrap && drawing <= 0	280:8:11021:11040	1210552	0	True				
ANR	1211678	AndExpression	wrap && drawing <= 0		1210552	0		&&			
ANR	1211679	Identifier	wrap		1210552	0					
ANR	1211680	RelationalExpression	drawing <= 0		1210552	1		<=			
ANR	1211681	Identifier	drawing		1210552	0					
ANR	1211682	PrimaryExpression	0		1210552	1					
ANR	1211683	CompoundStatement		227:30:9280:9280	1210552	1					
ANR	1211684	ExpressionStatement	drawing = 1	282:8:11129:11140	1210552	0	True				
ANR	1211685	AssignmentExpression	drawing = 1		1210552	0		=			
ANR	1211686	Identifier	drawing		1210552	0					
ANR	1211687	PrimaryExpression	1		1210552	1					
ANR	1211688	GotoStatement	goto top ;	283:8:11150:11158	1210552	1	True				
ANR	1211689	Identifier	top		1210552	0					
ANR	1211690	ReturnStatement	return 0 ;	285:4:11170:11178	1210552	26	True				
ANR	1211691	PrimaryExpression	0		1210552	0					
ANR	1211692	ReturnType	static int		1210552	1					
ANR	1211693	Identifier	subpath_expand_dashes		1210552	2					
ANR	1211694	ParameterList	"const subpath * psub , gx_path * ppath , const gs_gstate * pgs , const gx_dash_params * dash"		1210552	3					
ANR	1211695	Parameter	const subpath * psub	52:22:1652:1671	1210552	0	True				
ANR	1211696	ParameterType	const subpath *		1210552	0					
ANR	1211697	Identifier	psub		1210552	1					
ANR	1211698	Parameter	gx_path * ppath	52:44:1674:1688	1210552	1	True				
ANR	1211699	ParameterType	gx_path *		1210552	0					
ANR	1211700	Identifier	ppath		1210552	1					
ANR	1211701	Parameter	const gs_gstate * pgs	53:19:1710:1730	1210552	2	True				
ANR	1211702	ParameterType	const gs_gstate *		1210552	0					
ANR	1211703	Identifier	pgs		1210552	1					
ANR	1211704	Parameter	const gx_dash_params * dash	53:42:1733:1759	1210552	3	True				
ANR	1211705	ParameterType	const gx_dash_params *		1210552	0					
ANR	1211706	Identifier	dash		1210552	1					
ANR	1211707	CFGEntryNode	ENTRY		1210552		True				
ANR	1211708	CFGExitNode	EXIT		1210552		True				
ANR	1211709	Symbol	* index		1210552						
ANR	1211710	Symbol	dash -> init_index		1210552						
ANR	1211711	Symbol	dash -> init_dist_left		1210552						
ANR	1211712	Symbol	gx_path_add_dash_notes		1210552						
ANR	1211713	Symbol	gx_path_close_subpath_notes		1210552						
ANR	1211714	Symbol	drawing		1210552						
ANR	1211715	Symbol	s_line_close		1210552						
ANR	1211716	Symbol	index		1210552						
ANR	1211717	Symbol	gs_gstate_currentdashadapt		1210552						
ANR	1211718	Symbol	ceil		1210552						
ANR	1211719	Symbol	gx_path_add_point		1210552						
ANR	1211720	Symbol	pseg2 -> pt		1210552						
ANR	1211721	Symbol	psub -> is_closed		1210552						
ANR	1211722	Symbol	left		1210552						
ANR	1211723	Symbol	sn_dash_head		1210552						
ANR	1211724	Symbol	reps		1210552						
ANR	1211725	Symbol	* pgs_lp		1210552						
ANR	1211726	Symbol	pattern		1210552						
ANR	1211727	Symbol	pseg2 -> pt . x		1210552						
ANR	1211728	Symbol	sn_dash_tail		1210552						
ANR	1211729	Symbol	start_notes		1210552						
ANR	1211730	Symbol	pseg -> pt		1210552						
ANR	1211731	Symbol	end_notes		1210552						
ANR	1211732	Symbol	dash -> init_ink_on		1210552						
ANR	1211733	Symbol	pseg -> type		1210552						
ANR	1211734	Symbol	* dash		1210552						
ANR	1211735	Symbol	hypot		1210552						
ANR	1211736	Symbol	any_abs		1210552						
ANR	1211737	Symbol	pgs		1210552						
ANR	1211738	Symbol	psub -> pt . y		1210552						
ANR	1211739	Symbol	psub -> pt . x		1210552						
ANR	1211740	Symbol	d		1210552						
ANR	1211741	Symbol	sx		1210552						
ANR	1211742	Symbol	sy		1210552						
ANR	1211743	Symbol	pseg2 -> next		1210552						
ANR	1211744	Symbol	fraction		1210552						
ANR	1211745	Symbol	pgs_lp -> start_cap		1210552						
ANR	1211746	Symbol	pseg -> next -> type		1210552						
ANR	1211747	Symbol	x		1210552						
ANR	1211748	Symbol	y		1210552						
ANR	1211749	Symbol	wrap		1210552						
ANR	1211750	Symbol	notes		1210552						
ANR	1211751	Symbol	s_start		1210552						
ANR	1211752	Symbol	* * pseg		1210552						
ANR	1211753	Symbol	s_gap		1210552						
ANR	1211754	Symbol	pseg2		1210552						
ANR	1211755	Symbol	pseg -> next		1210552						
ANR	1211756	Symbol	dx		1210552						
ANR	1211757	Symbol	fixed_1		1210552						
ANR	1211758	Symbol	dy		1210552						
ANR	1211759	Symbol	gs_currentlineparams_inline		1210552						
ANR	1211760	Symbol	fixed_epsilon		1210552						
ANR	1211761	Symbol	psub -> pt		1210552						
ANR	1211762	Symbol	gs_gstate_idtransform		1210552						
ANR	1211763	Symbol	* pattern		1210552						
ANR	1211764	Symbol	* psub		1210552						
ANR	1211765	Symbol	gx_path_add_line_notes		1210552						
ANR	1211766	Symbol	count		1210552						
ANR	1211767	Symbol	pseg -> pt . x		1210552						
ANR	1211768	Symbol	pseg -> pt . y		1210552						
ANR	1211769	Symbol	dash -> pattern_size		1210552						
ANR	1211770	Symbol	ink_on		1210552						
ANR	1211771	Symbol	* pseg2		1210552						
ANR	1211772	Symbol	x0		1210552						
ANR	1211773	Symbol	pgs_lp		1210552						
ANR	1211774	Symbol	true		1210552						
ANR	1211775	Symbol	* pseg		1210552						
ANR	1211776	Symbol	dash -> pattern		1210552						
ANR	1211777	Symbol	dash		1210552						
ANR	1211778	Symbol	pseg2 -> type		1210552						
ANR	1211779	Symbol	dash -> pattern_length		1210552						
ANR	1211780	Symbol	code		1210552						
ANR	1211781	Symbol	pseg -> notes		1210552						
ANR	1211782	Symbol	~sn_not_first		1210552						
ANR	1211783	Symbol	udx		1210552						
ANR	1211784	Symbol	scale		1210552						
ANR	1211785	Symbol	nx		1210552						
ANR	1211786	Symbol	ppath		1210552						
ANR	1211787	Symbol	udy		1210552						
ANR	1211788	Symbol	ny		1210552						
ANR	1211789	Symbol	pgs_lp -> dash_cap		1210552						
ANR	1211790	Symbol	zero_length		1210552						
ANR	1211791	Symbol	pseg		1210552						
ANR	1211792	Symbol	fx		1210552						
ANR	1211793	Symbol	cap		1210552						
ANR	1211794	Symbol	fy		1210552						
ANR	1211795	Symbol	y0		1210552						
ANR	1211796	Symbol	gap		1210552						
ANR	1211797	Symbol	fixed_half		1210552						
ANR	1211798	Symbol	d . x		1210552						
ANR	1211799	Symbol	d . y		1210552						
ANR	1211800	Symbol	gs_cap_round		1210552						
ANR	1211801	Symbol	psub		1210552						
ANR	1211802	Symbol	fixed2float		1210552						
ANR	1211803	Symbol	* pseg -> next		1210552						
ANR	1211804	Symbol	elt_length		1210552						
ANR	1211805	Symbol	pgs_lp -> dot_length		1210552						
ANR	1211806	Symbol	length		1210552						
ANR	1211807	Symbol	false		1210552						
ANR	1211808	Symbol	& d		1210552						
ANR	1211809	Symbol	elt_length1		1210552						
ANR	1211810	Symbol	sn_not_first		1210552						
