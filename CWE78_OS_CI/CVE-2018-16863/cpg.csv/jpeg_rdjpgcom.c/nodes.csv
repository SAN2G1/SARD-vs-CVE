command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6677472	File	data/converged/CVE-2018-16863_ghostpdl/jpeg_rdjpgcom.c								
ANR	6677473	DeclStmt									
ANR	6677474	Decl							FILE	FILE *	infile
ANR	6677475	Function	read_1_byte	76:0:2130:2261							
ANR	6677476	FunctionDef	read_1_byte ()		6677475	0					
ANR	6677477	CompoundStatement		78:0:2160:2261	6677475	0					
ANR	6677478	IdentifierDeclStatement	int c ;	79:2:2164:2169	6677475	0	True				
ANR	6677479	IdentifierDecl	c		6677475	0					
ANR	6677480	IdentifierDeclType	int		6677475	0					
ANR	6677481	Identifier	c		6677475	1					
ANR	6677482	ExpressionStatement	c = NEXTBYTE ( )	81:2:2174:2188	6677475	1	True				
ANR	6677483	AssignmentExpression	c = NEXTBYTE ( )		6677475	0		=			
ANR	6677484	Identifier	c		6677475	0					
ANR	6677485	CallExpression	NEXTBYTE ( )		6677475	1					
ANR	6677486	Callee	NEXTBYTE		6677475	0					
ANR	6677487	Identifier	NEXTBYTE		6677475	0					
ANR	6677488	ArgumentList			6677475	1					
ANR	6677489	IfStatement	if ( c == EOF )		6677475	2					
ANR	6677490	Condition	c == EOF	82:6:2196:2203	6677475	0	True				
ANR	6677491	EqualityExpression	c == EOF		6677475	0		==			
ANR	6677492	Identifier	c		6677475	0					
ANR	6677493	Identifier	EOF		6677475	1					
ANR	6677494	ExpressionStatement	"ERREXIT ( ""Premature EOF in JPEG file"" )"	83:4:2210:2247	6677475	1	True				
ANR	6677495	CallExpression	"ERREXIT ( ""Premature EOF in JPEG file"" )"		6677475	0					
ANR	6677496	Callee	ERREXIT		6677475	0					
ANR	6677497	Identifier	ERREXIT		6677475	0					
ANR	6677498	ArgumentList	"""Premature EOF in JPEG file"""		6677475	1					
ANR	6677499	Argument	"""Premature EOF in JPEG file"""		6677475	0					
ANR	6677500	PrimaryExpression	"""Premature EOF in JPEG file"""		6677475	0					
ANR	6677501	ReturnStatement	return c ;	84:2:2251:2259	6677475	3	True				
ANR	6677502	Identifier	c		6677475	0					
ANR	6677503	ReturnType	static int		6677475	1					
ANR	6677504	Identifier	read_1_byte		6677475	2					
ANR	6677505	ParameterList			6677475	3					
ANR	6677506	CFGEntryNode	ENTRY		6677475		True				
ANR	6677507	CFGExitNode	EXIT		6677475		True				
ANR	6677508	Symbol	c		6677475						
ANR	6677509	Symbol	NEXTBYTE		6677475						
ANR	6677510	Symbol	EOF		6677475						
ANR	6677511	Function	read_2_bytes	89:0:2366:2640							
ANR	6677512	FunctionDef	read_2_bytes ()		6677511	0					
ANR	6677513	CompoundStatement		91:0:2406:2640	6677511	0					
ANR	6677514	IdentifierDeclStatement	"int c1 , c2 ;"	92:2:2410:2420	6677511	0	True				
ANR	6677515	IdentifierDecl	c1		6677511	0					
ANR	6677516	IdentifierDeclType	int		6677511	0					
ANR	6677517	Identifier	c1		6677511	1					
ANR	6677518	IdentifierDecl	c2		6677511	1					
ANR	6677519	IdentifierDeclType	int		6677511	0					
ANR	6677520	Identifier	c2		6677511	1					
ANR	6677521	ExpressionStatement	c1 = NEXTBYTE ( )	94:2:2425:2440	6677511	1	True				
ANR	6677522	AssignmentExpression	c1 = NEXTBYTE ( )		6677511	0		=			
ANR	6677523	Identifier	c1		6677511	0					
ANR	6677524	CallExpression	NEXTBYTE ( )		6677511	1					
ANR	6677525	Callee	NEXTBYTE		6677511	0					
ANR	6677526	Identifier	NEXTBYTE		6677511	0					
ANR	6677527	ArgumentList			6677511	1					
ANR	6677528	IfStatement	if ( c1 == EOF )		6677511	2					
ANR	6677529	Condition	c1 == EOF	95:6:2448:2456	6677511	0	True				
ANR	6677530	EqualityExpression	c1 == EOF		6677511	0		==			
ANR	6677531	Identifier	c1		6677511	0					
ANR	6677532	Identifier	EOF		6677511	1					
ANR	6677533	ExpressionStatement	"ERREXIT ( ""Premature EOF in JPEG file"" )"	96:4:2463:2500	6677511	1	True				
ANR	6677534	CallExpression	"ERREXIT ( ""Premature EOF in JPEG file"" )"		6677511	0					
ANR	6677535	Callee	ERREXIT		6677511	0					
ANR	6677536	Identifier	ERREXIT		6677511	0					
ANR	6677537	ArgumentList	"""Premature EOF in JPEG file"""		6677511	1					
ANR	6677538	Argument	"""Premature EOF in JPEG file"""		6677511	0					
ANR	6677539	PrimaryExpression	"""Premature EOF in JPEG file"""		6677511	0					
ANR	6677540	ExpressionStatement	c2 = NEXTBYTE ( )	97:2:2504:2519	6677511	3	True				
ANR	6677541	AssignmentExpression	c2 = NEXTBYTE ( )		6677511	0		=			
ANR	6677542	Identifier	c2		6677511	0					
ANR	6677543	CallExpression	NEXTBYTE ( )		6677511	1					
ANR	6677544	Callee	NEXTBYTE		6677511	0					
ANR	6677545	Identifier	NEXTBYTE		6677511	0					
ANR	6677546	ArgumentList			6677511	1					
ANR	6677547	IfStatement	if ( c2 == EOF )		6677511	4					
ANR	6677548	Condition	c2 == EOF	98:6:2527:2535	6677511	0	True				
ANR	6677549	EqualityExpression	c2 == EOF		6677511	0		==			
ANR	6677550	Identifier	c2		6677511	0					
ANR	6677551	Identifier	EOF		6677511	1					
ANR	6677552	ExpressionStatement	"ERREXIT ( ""Premature EOF in JPEG file"" )"	99:4:2542:2579	6677511	1	True				
ANR	6677553	CallExpression	"ERREXIT ( ""Premature EOF in JPEG file"" )"		6677511	0					
ANR	6677554	Callee	ERREXIT		6677511	0					
ANR	6677555	Identifier	ERREXIT		6677511	0					
ANR	6677556	ArgumentList	"""Premature EOF in JPEG file"""		6677511	1					
ANR	6677557	Argument	"""Premature EOF in JPEG file"""		6677511	0					
ANR	6677558	PrimaryExpression	"""Premature EOF in JPEG file"""		6677511	0					
ANR	6677559	ReturnStatement	return ( ( ( unsigned int ) c1 ) << 8 ) + ( ( unsigned int ) c2 ) ;	100:2:2583:2638	6677511	5	True				
ANR	6677560	AdditiveExpression	( ( ( unsigned int ) c1 ) << 8 ) + ( ( unsigned int ) c2 )		6677511	0		+			
ANR	6677561	ShiftExpression	( ( unsigned int ) c1 ) << 8		6677511	0		<<			
ANR	6677562	CastExpression	( unsigned int ) c1		6677511	0					
ANR	6677563	CastTarget	unsigned int		6677511	0					
ANR	6677564	Identifier	c1		6677511	1					
ANR	6677565	PrimaryExpression	8		6677511	1					
ANR	6677566	CastExpression	( unsigned int ) c2		6677511	1					
ANR	6677567	CastTarget	unsigned int		6677511	0					
ANR	6677568	Identifier	c2		6677511	1					
ANR	6677569	ReturnType	static unsigned int		6677511	1					
ANR	6677570	Identifier	read_2_bytes		6677511	2					
ANR	6677571	ParameterList			6677511	3					
ANR	6677572	CFGEntryNode	ENTRY		6677511		True				
ANR	6677573	CFGExitNode	EXIT		6677511		True				
ANR	6677574	Symbol	NEXTBYTE		6677511						
ANR	6677575	Symbol	EOF		6677511						
ANR	6677576	Symbol	c1		6677511						
ANR	6677577	Symbol	c2		6677511						
ANR	6677578	Function	next_marker	141:0:4128:4658							
ANR	6677579	FunctionDef	next_marker ()		6677578	0					
ANR	6677580	CompoundStatement		143:0:4158:4658	6677578	0					
ANR	6677581	IdentifierDeclStatement	int c ;	144:2:4162:4167	6677578	0	True				
ANR	6677582	IdentifierDecl	c		6677578	0					
ANR	6677583	IdentifierDeclType	int		6677578	0					
ANR	6677584	Identifier	c		6677578	1					
ANR	6677585	IdentifierDeclStatement	int discarded_bytes = 0 ;	145:2:4171:4194	6677578	1	True				
ANR	6677586	IdentifierDecl	discarded_bytes = 0		6677578	0					
ANR	6677587	IdentifierDeclType	int		6677578	0					
ANR	6677588	Identifier	discarded_bytes		6677578	1					
ANR	6677589	AssignmentExpression	discarded_bytes = 0		6677578	2		=			
ANR	6677590	Identifier	discarded_bytes		6677578	0					
ANR	6677591	PrimaryExpression	0		6677578	1					
ANR	6677592	ExpressionStatement	c = read_1_byte ( )	148:2:4251:4268	6677578	2	True				
ANR	6677593	AssignmentExpression	c = read_1_byte ( )		6677578	0		=			
ANR	6677594	Identifier	c		6677578	0					
ANR	6677595	CallExpression	read_1_byte ( )		6677578	1					
ANR	6677596	Callee	read_1_byte		6677578	0					
ANR	6677597	Identifier	read_1_byte		6677578	0					
ANR	6677598	ArgumentList			6677578	1					
ANR	6677599	WhileStatement	while ( c != 0xFF )		6677578	3					
ANR	6677600	Condition	c != 0xFF	149:9:4279:4287	6677578	0	True				
ANR	6677601	EqualityExpression	c != 0xFF		6677578	0		!=			
ANR	6677602	Identifier	c		6677578	0					
ANR	6677603	PrimaryExpression	0xFF		6677578	1					
ANR	6677604	CompoundStatement		7:20:131:131	6677578	1					
ANR	6677605	ExpressionStatement	discarded_bytes ++	150:4:4296:4313	6677578	0	True				
ANR	6677606	PostIncDecOperationExpression	discarded_bytes ++		6677578	0					
ANR	6677607	Identifier	discarded_bytes		6677578	0					
ANR	6677608	IncDec	++		6677578	1					
ANR	6677609	ExpressionStatement	c = read_1_byte ( )	151:4:4319:4336	6677578	1	True				
ANR	6677610	AssignmentExpression	c = read_1_byte ( )		6677578	0		=			
ANR	6677611	Identifier	c		6677578	0					
ANR	6677612	CallExpression	read_1_byte ( )		6677578	1					
ANR	6677613	Callee	read_1_byte		6677578	0					
ANR	6677614	Identifier	read_1_byte		6677578	0					
ANR	6677615	ArgumentList			6677578	1					
ANR	6677616	DoStatement	do		6677578	4					
ANR	6677617	CompoundStatement		14:5:336:336	6677578	0					
ANR	6677618	ExpressionStatement	c = read_1_byte ( )	157:4:4501:4518	6677578	0	True				
ANR	6677619	AssignmentExpression	c = read_1_byte ( )		6677578	0		=			
ANR	6677620	Identifier	c		6677578	0					
ANR	6677621	CallExpression	read_1_byte ( )		6677578	1					
ANR	6677622	Callee	read_1_byte		6677578	0					
ANR	6677623	Identifier	read_1_byte		6677578	0					
ANR	6677624	ArgumentList			6677578	1					
ANR	6677625	Condition	c == 0xFF	158:11:4531:4539	6677578	1	True				
ANR	6677626	EqualityExpression	c == 0xFF		6677578	0		==			
ANR	6677627	Identifier	c		6677578	0					
ANR	6677628	PrimaryExpression	0xFF		6677578	1					
ANR	6677629	IfStatement	if ( discarded_bytes != 0 )		6677578	5					
ANR	6677630	Condition	discarded_bytes != 0	160:6:4550:4569	6677578	0	True				
ANR	6677631	EqualityExpression	discarded_bytes != 0		6677578	0		!=			
ANR	6677632	Identifier	discarded_bytes		6677578	0					
ANR	6677633	PrimaryExpression	0		6677578	1					
ANR	6677634	CompoundStatement		18:28:413:413	6677578	1					
ANR	6677635	ExpressionStatement	"fprintf ( stderr , ""Warning: garbage data found in JPEG file\\n"" )"	161:4:4578:4639	6677578	0	True				
ANR	6677636	CallExpression	"fprintf ( stderr , ""Warning: garbage data found in JPEG file\\n"" )"		6677578	0					
ANR	6677637	Callee	fprintf		6677578	0					
ANR	6677638	Identifier	fprintf		6677578	0					
ANR	6677639	ArgumentList	stderr		6677578	1					
ANR	6677640	Argument	stderr		6677578	0					
ANR	6677641	Identifier	stderr		6677578	0					
ANR	6677642	Argument	"""Warning: garbage data found in JPEG file\\n"""		6677578	1					
ANR	6677643	PrimaryExpression	"""Warning: garbage data found in JPEG file\\n"""		6677578	0					
ANR	6677644	ReturnStatement	return c ;	164:2:4648:4656	6677578	6	True				
ANR	6677645	Identifier	c		6677578	0					
ANR	6677646	ReturnType	static int		6677578	1					
ANR	6677647	Identifier	next_marker		6677578	2					
ANR	6677648	ParameterList			6677578	3					
ANR	6677649	CFGEntryNode	ENTRY		6677578		True				
ANR	6677650	CFGExitNode	EXIT		6677578		True				
ANR	6677651	Symbol	c		6677578						
ANR	6677652	Symbol	read_1_byte		6677578						
ANR	6677653	Symbol	discarded_bytes		6677578						
ANR	6677654	Symbol	stderr		6677578						
ANR	6677655	Function	first_marker	176:0:4995:5159							
ANR	6677656	FunctionDef	first_marker ()		6677655	0					
ANR	6677657	CompoundStatement		178:0:5026:5159	6677655	0					
ANR	6677658	IdentifierDeclStatement	"int c1 , c2 ;"	179:2:5030:5040	6677655	0	True				
ANR	6677659	IdentifierDecl	c1		6677655	0					
ANR	6677660	IdentifierDeclType	int		6677655	0					
ANR	6677661	Identifier	c1		6677655	1					
ANR	6677662	IdentifierDecl	c2		6677655	1					
ANR	6677663	IdentifierDeclType	int		6677655	0					
ANR	6677664	Identifier	c2		6677655	1					
ANR	6677665	ExpressionStatement	c1 = NEXTBYTE ( )	181:2:5045:5060	6677655	1	True				
ANR	6677666	AssignmentExpression	c1 = NEXTBYTE ( )		6677655	0		=			
ANR	6677667	Identifier	c1		6677655	0					
ANR	6677668	CallExpression	NEXTBYTE ( )		6677655	1					
ANR	6677669	Callee	NEXTBYTE		6677655	0					
ANR	6677670	Identifier	NEXTBYTE		6677655	0					
ANR	6677671	ArgumentList			6677655	1					
ANR	6677672	ExpressionStatement	c2 = NEXTBYTE ( )	182:2:5064:5079	6677655	2	True				
ANR	6677673	AssignmentExpression	c2 = NEXTBYTE ( )		6677655	0		=			
ANR	6677674	Identifier	c2		6677655	0					
ANR	6677675	CallExpression	NEXTBYTE ( )		6677655	1					
ANR	6677676	Callee	NEXTBYTE		6677655	0					
ANR	6677677	Identifier	NEXTBYTE		6677655	0					
ANR	6677678	ArgumentList			6677655	1					
ANR	6677679	IfStatement	if ( c1 != 0xFF || c2 != M_SOI )		6677655	3					
ANR	6677680	Condition	c1 != 0xFF || c2 != M_SOI	183:6:5087:5111	6677655	0	True				
ANR	6677681	OrExpression	c1 != 0xFF || c2 != M_SOI		6677655	0		||			
ANR	6677682	EqualityExpression	c1 != 0xFF		6677655	0		!=			
ANR	6677683	Identifier	c1		6677655	0					
ANR	6677684	PrimaryExpression	0xFF		6677655	1					
ANR	6677685	EqualityExpression	c2 != M_SOI		6677655	1		!=			
ANR	6677686	Identifier	c2		6677655	0					
ANR	6677687	Identifier	M_SOI		6677655	1					
ANR	6677688	ExpressionStatement	"ERREXIT ( ""Not a JPEG file"" )"	184:4:5118:5144	6677655	1	True				
ANR	6677689	CallExpression	"ERREXIT ( ""Not a JPEG file"" )"		6677655	0					
ANR	6677690	Callee	ERREXIT		6677655	0					
ANR	6677691	Identifier	ERREXIT		6677655	0					
ANR	6677692	ArgumentList	"""Not a JPEG file"""		6677655	1					
ANR	6677693	Argument	"""Not a JPEG file"""		6677655	0					
ANR	6677694	PrimaryExpression	"""Not a JPEG file"""		6677655	0					
ANR	6677695	ReturnStatement	return c2 ;	185:2:5148:5157	6677655	4	True				
ANR	6677696	Identifier	c2		6677655	0					
ANR	6677697	ReturnType	static int		6677655	1					
ANR	6677698	Identifier	first_marker		6677655	2					
ANR	6677699	ParameterList			6677655	3					
ANR	6677700	CFGEntryNode	ENTRY		6677655		True				
ANR	6677701	CFGExitNode	EXIT		6677655		True				
ANR	6677702	Symbol	M_SOI		6677655						
ANR	6677703	Symbol	NEXTBYTE		6677655						
ANR	6677704	Symbol	c1		6677655						
ANR	6677705	Symbol	c2		6677655						
ANR	6677706	Function	skip_variable	198:0:5538:5974							
ANR	6677707	FunctionDef	skip_variable ()		6677706	0					
ANR	6677708	CompoundStatement		201:0:5638:5974	6677706	0					
ANR	6677709	IdentifierDeclStatement	unsigned int length ;	202:2:5642:5661	6677706	0	True				
ANR	6677710	IdentifierDecl	length		6677706	0					
ANR	6677711	IdentifierDeclType	unsigned int		6677706	0					
ANR	6677712	Identifier	length		6677706	1					
ANR	6677713	ExpressionStatement	length = read_2_bytes ( )	205:2:5712:5735	6677706	1	True				
ANR	6677714	AssignmentExpression	length = read_2_bytes ( )		6677706	0		=			
ANR	6677715	Identifier	length		6677706	0					
ANR	6677716	CallExpression	read_2_bytes ( )		6677706	1					
ANR	6677717	Callee	read_2_bytes		6677706	0					
ANR	6677718	Identifier	read_2_bytes		6677706	0					
ANR	6677719	ArgumentList			6677706	1					
ANR	6677720	IfStatement	if ( length < 2 )		6677706	2					
ANR	6677721	Condition	length < 2	207:6:5797:5806	6677706	0	True				
ANR	6677722	RelationalExpression	length < 2		6677706	0		<			
ANR	6677723	Identifier	length		6677706	0					
ANR	6677724	PrimaryExpression	2		6677706	1					
ANR	6677725	ExpressionStatement	"ERREXIT ( ""Erroneous JPEG marker length"" )"	208:4:5813:5852	6677706	1	True				
ANR	6677726	CallExpression	"ERREXIT ( ""Erroneous JPEG marker length"" )"		6677706	0					
ANR	6677727	Callee	ERREXIT		6677706	0					
ANR	6677728	Identifier	ERREXIT		6677706	0					
ANR	6677729	ArgumentList	"""Erroneous JPEG marker length"""		6677706	1					
ANR	6677730	Argument	"""Erroneous JPEG marker length"""		6677706	0					
ANR	6677731	PrimaryExpression	"""Erroneous JPEG marker length"""		6677706	0					
ANR	6677732	ExpressionStatement	length -= 2	209:2:5856:5867	6677706	3	True				
ANR	6677733	AssignmentExpression	length -= 2		6677706	0		-=			
ANR	6677734	Identifier	length		6677706	0					
ANR	6677735	PrimaryExpression	2		6677706	1					
ANR	6677736	WhileStatement	while ( length > 0 )		6677706	4					
ANR	6677737	Condition	length > 0	211:9:5916:5925	6677706	0	True				
ANR	6677738	RelationalExpression	length > 0		6677706	0		>			
ANR	6677739	Identifier	length		6677706	0					
ANR	6677740	PrimaryExpression	0		6677706	1					
ANR	6677741	CompoundStatement		11:21:289:289	6677706	1					
ANR	6677742	ExpressionStatement	( void ) read_1_byte ( )	212:4:5934:5954	6677706	0	True				
ANR	6677743	CastExpression	( void ) read_1_byte ( )		6677706	0					
ANR	6677744	CastTarget	void		6677706	0					
ANR	6677745	CallExpression	read_1_byte ( )		6677706	1					
ANR	6677746	Callee	read_1_byte		6677706	0					
ANR	6677747	Identifier	read_1_byte		6677706	0					
ANR	6677748	ArgumentList			6677706	1					
ANR	6677749	ExpressionStatement	length --	213:4:5960:5968	6677706	1	True				
ANR	6677750	PostIncDecOperationExpression	length --		6677706	0					
ANR	6677751	Identifier	length		6677706	0					
ANR	6677752	IncDec	--		6677706	1					
ANR	6677753	ReturnType	static void		6677706	1					
ANR	6677754	Identifier	skip_variable		6677706	2					
ANR	6677755	ParameterList			6677706	3					
ANR	6677756	CFGEntryNode	ENTRY		6677706		True				
ANR	6677757	CFGExitNode	EXIT		6677706		True				
ANR	6677758	Symbol	read_2_bytes		6677706						
ANR	6677759	Symbol	length		6677706						
ANR	6677760	Function	process_COM	224:0:6148:7273							
ANR	6677761	FunctionDef	process_COM (int raw)		6677760	0					
ANR	6677762	CompoundStatement		226:0:6182:7273	6677760	0					
ANR	6677763	IdentifierDeclStatement	unsigned int length ;	227:2:6186:6205	6677760	0	True				
ANR	6677764	IdentifierDecl	length		6677760	0					
ANR	6677765	IdentifierDeclType	unsigned int		6677760	0					
ANR	6677766	Identifier	length		6677760	1					
ANR	6677767	IdentifierDeclStatement	int ch ;	228:2:6209:6215	6677760	1	True				
ANR	6677768	IdentifierDecl	ch		6677760	0					
ANR	6677769	IdentifierDeclType	int		6677760	0					
ANR	6677770	Identifier	ch		6677760	1					
ANR	6677771	IdentifierDeclStatement	int lastch = 0 ;	229:2:6219:6233	6677760	2	True				
ANR	6677772	IdentifierDecl	lastch = 0		6677760	0					
ANR	6677773	IdentifierDeclType	int		6677760	0					
ANR	6677774	Identifier	lastch		6677760	1					
ANR	6677775	AssignmentExpression	lastch = 0		6677760	2		=			
ANR	6677776	Identifier	lastch		6677760	0					
ANR	6677777	PrimaryExpression	0		6677760	1					
ANR	6677778	ExpressionStatement	"setlocale ( LC_CTYPE , """" )"	233:2:6315:6338	6677760	3	True				
ANR	6677779	CallExpression	"setlocale ( LC_CTYPE , """" )"		6677760	0					
ANR	6677780	Callee	setlocale		6677760	0					
ANR	6677781	Identifier	setlocale		6677760	0					
ANR	6677782	ArgumentList	LC_CTYPE		6677760	1					
ANR	6677783	Argument	LC_CTYPE		6677760	0					
ANR	6677784	Identifier	LC_CTYPE		6677760	0					
ANR	6677785	Argument	""""""		6677760	1					
ANR	6677786	PrimaryExpression	""""""		6677760	0					
ANR	6677787	ExpressionStatement	length = read_2_bytes ( )	237:2:6396:6419	6677760	4	True				
ANR	6677788	AssignmentExpression	length = read_2_bytes ( )		6677760	0		=			
ANR	6677789	Identifier	length		6677760	0					
ANR	6677790	CallExpression	read_2_bytes ( )		6677760	1					
ANR	6677791	Callee	read_2_bytes		6677760	0					
ANR	6677792	Identifier	read_2_bytes		6677760	0					
ANR	6677793	ArgumentList			6677760	1					
ANR	6677794	IfStatement	if ( length < 2 )		6677760	5					
ANR	6677795	Condition	length < 2	239:6:6481:6490	6677760	0	True				
ANR	6677796	RelationalExpression	length < 2		6677760	0		<			
ANR	6677797	Identifier	length		6677760	0					
ANR	6677798	PrimaryExpression	2		6677760	1					
ANR	6677799	ExpressionStatement	"ERREXIT ( ""Erroneous JPEG marker length"" )"	240:4:6497:6536	6677760	1	True				
ANR	6677800	CallExpression	"ERREXIT ( ""Erroneous JPEG marker length"" )"		6677760	0					
ANR	6677801	Callee	ERREXIT		6677760	0					
ANR	6677802	Identifier	ERREXIT		6677760	0					
ANR	6677803	ArgumentList	"""Erroneous JPEG marker length"""		6677760	1					
ANR	6677804	Argument	"""Erroneous JPEG marker length"""		6677760	0					
ANR	6677805	PrimaryExpression	"""Erroneous JPEG marker length"""		6677760	0					
ANR	6677806	ExpressionStatement	length -= 2	241:2:6540:6551	6677760	6	True				
ANR	6677807	AssignmentExpression	length -= 2		6677760	0		-=			
ANR	6677808	Identifier	length		6677760	0					
ANR	6677809	PrimaryExpression	2		6677760	1					
ANR	6677810	WhileStatement	while ( length > 0 )		6677760	7					
ANR	6677811	Condition	length > 0	243:9:6563:6572	6677760	0	True				
ANR	6677812	RelationalExpression	length > 0		6677760	0		>			
ANR	6677813	Identifier	length		6677760	0					
ANR	6677814	PrimaryExpression	0		6677760	1					
ANR	6677815	CompoundStatement		18:21:392:392	6677760	1					
ANR	6677816	ExpressionStatement	ch = read_1_byte ( )	244:4:6581:6599	6677760	0	True				
ANR	6677817	AssignmentExpression	ch = read_1_byte ( )		6677760	0		=			
ANR	6677818	Identifier	ch		6677760	0					
ANR	6677819	CallExpression	read_1_byte ( )		6677760	1					
ANR	6677820	Callee	read_1_byte		6677760	0					
ANR	6677821	Identifier	read_1_byte		6677760	0					
ANR	6677822	ArgumentList			6677760	1					
ANR	6677823	IfStatement	if ( raw )		6677760	1					
ANR	6677824	Condition	raw	245:8:6609:6611	6677760	0	True				
ANR	6677825	Identifier	raw		6677760	0					
ANR	6677826	CompoundStatement		20:13:431:431	6677760	1					
ANR	6677827	ExpressionStatement	"putc ( ch , stdout )"	246:6:6622:6638	6677760	0	True				
ANR	6677828	CallExpression	"putc ( ch , stdout )"		6677760	0					
ANR	6677829	Callee	putc		6677760	0					
ANR	6677830	Identifier	putc		6677760	0					
ANR	6677831	ArgumentList	ch		6677760	1					
ANR	6677832	Argument	ch		6677760	0					
ANR	6677833	Identifier	ch		6677760	0					
ANR	6677834	Argument	stdout		6677760	1					
ANR	6677835	Identifier	stdout		6677760	0					
ANR	6677836	ElseStatement	else		6677760	0					
ANR	6677837	IfStatement	if ( ch == '\\r' )		6677760	0					
ANR	6677838	Condition	ch == '\\r'	252:15:6866:6875	6677760	0	True				
ANR	6677839	EqualityExpression	ch == '\\r'		6677760	0		==			
ANR	6677840	Identifier	ch		6677760	0					
ANR	6677841	PrimaryExpression	'\\r'		6677760	1					
ANR	6677842	CompoundStatement		27:27:695:695	6677760	1					
ANR	6677843	ExpressionStatement	"printf ( ""\\n"" )"	253:6:6886:6898	6677760	0	True				
ANR	6677844	CallExpression	"printf ( ""\\n"" )"		6677760	0					
ANR	6677845	Callee	printf		6677760	0					
ANR	6677846	Identifier	printf		6677760	0					
ANR	6677847	ArgumentList	"""\\n"""		6677760	1					
ANR	6677848	Argument	"""\\n"""		6677760	0					
ANR	6677849	PrimaryExpression	"""\\n"""		6677760	0					
ANR	6677850	ElseStatement	else		6677760	0					
ANR	6677851	IfStatement	if ( ch == '\\n' )		6677760	0					
ANR	6677852	Condition	ch == '\\n'	254:15:6915:6924	6677760	0	True				
ANR	6677853	EqualityExpression	ch == '\\n'		6677760	0		==			
ANR	6677854	Identifier	ch		6677760	0					
ANR	6677855	PrimaryExpression	'\\n'		6677760	1					
ANR	6677856	CompoundStatement		29:27:744:744	6677760	1					
ANR	6677857	IfStatement	if ( lastch != '\\r' )		6677760	0					
ANR	6677858	Condition	lastch != '\\r'	255:10:6939:6952	6677760	0	True				
ANR	6677859	EqualityExpression	lastch != '\\r'		6677760	0		!=			
ANR	6677860	Identifier	lastch		6677760	0					
ANR	6677861	PrimaryExpression	'\\r'		6677760	1					
ANR	6677862	ExpressionStatement	"printf ( ""\\n"" )"	256:1:6956:6968	6677760	1	True				
ANR	6677863	CallExpression	"printf ( ""\\n"" )"		6677760	0					
ANR	6677864	Callee	printf		6677760	0					
ANR	6677865	Identifier	printf		6677760	0					
ANR	6677866	ArgumentList	"""\\n"""		6677760	1					
ANR	6677867	Argument	"""\\n"""		6677760	0					
ANR	6677868	PrimaryExpression	"""\\n"""		6677760	0					
ANR	6677869	ElseStatement	else		6677760	0					
ANR	6677870	IfStatement	if ( ch == '\\\\' )		6677760	0					
ANR	6677871	Condition	ch == '\\\\'	257:15:6985:6994	6677760	0	True				
ANR	6677872	EqualityExpression	ch == '\\\\'		6677760	0		==			
ANR	6677873	Identifier	ch		6677760	0					
ANR	6677874	PrimaryExpression	'\\\\'		6677760	1					
ANR	6677875	CompoundStatement		32:27:814:814	6677760	1					
ANR	6677876	ExpressionStatement	"printf ( ""\\\\\\\\"" )"	258:6:7005:7019	6677760	0	True				
ANR	6677877	CallExpression	"printf ( ""\\\\\\\\"" )"		6677760	0					
ANR	6677878	Callee	printf		6677760	0					
ANR	6677879	Identifier	printf		6677760	0					
ANR	6677880	ArgumentList	"""\\\\\\\\"""		6677760	1					
ANR	6677881	Argument	"""\\\\\\\\"""		6677760	0					
ANR	6677882	PrimaryExpression	"""\\\\\\\\"""		6677760	0					
ANR	6677883	ElseStatement	else		6677760	0					
ANR	6677884	IfStatement	if ( isprint ( ch ) )		6677760	0					
ANR	6677885	Condition	isprint ( ch )	259:15:7036:7046	6677760	0	True				
ANR	6677886	CallExpression	isprint ( ch )		6677760	0					
ANR	6677887	Callee	isprint		6677760	0					
ANR	6677888	Identifier	isprint		6677760	0					
ANR	6677889	ArgumentList	ch		6677760	1					
ANR	6677890	Argument	ch		6677760	0					
ANR	6677891	Identifier	ch		6677760	0					
ANR	6677892	CompoundStatement		34:28:866:866	6677760	1					
ANR	6677893	ExpressionStatement	"putc ( ch , stdout )"	260:6:7057:7073	6677760	0	True				
ANR	6677894	CallExpression	"putc ( ch , stdout )"		6677760	0					
ANR	6677895	Callee	putc		6677760	0					
ANR	6677896	Identifier	putc		6677760	0					
ANR	6677897	ArgumentList	ch		6677760	1					
ANR	6677898	Argument	ch		6677760	0					
ANR	6677899	Identifier	ch		6677760	0					
ANR	6677900	Argument	stdout		6677760	1					
ANR	6677901	Identifier	stdout		6677760	0					
ANR	6677902	ElseStatement	else		6677760	0					
ANR	6677903	CompoundStatement		36:11:903:903	6677760	0					
ANR	6677904	ExpressionStatement	"printf ( ""\\\\%03o"" , ch )"	262:6:7094:7114	6677760	0	True				
ANR	6677905	CallExpression	"printf ( ""\\\\%03o"" , ch )"		6677760	0					
ANR	6677906	Callee	printf		6677760	0					
ANR	6677907	Identifier	printf		6677760	0					
ANR	6677908	ArgumentList	"""\\\\%03o"""		6677760	1					
ANR	6677909	Argument	"""\\\\%03o"""		6677760	0					
ANR	6677910	PrimaryExpression	"""\\\\%03o"""		6677760	0					
ANR	6677911	Argument	ch		6677760	1					
ANR	6677912	Identifier	ch		6677760	0					
ANR	6677913	ExpressionStatement	lastch = ch	264:4:7126:7137	6677760	2	True				
ANR	6677914	AssignmentExpression	lastch = ch		6677760	0		=			
ANR	6677915	Identifier	lastch		6677760	0					
ANR	6677916	Identifier	ch		6677760	1					
ANR	6677917	ExpressionStatement	length --	265:4:7143:7151	6677760	3	True				
ANR	6677918	PostIncDecOperationExpression	length --		6677760	0					
ANR	6677919	Identifier	length		6677760	0					
ANR	6677920	IncDec	--		6677760	1					
ANR	6677921	ExpressionStatement	"printf ( ""\\n"" )"	267:2:7159:7171	6677760	8	True				
ANR	6677922	CallExpression	"printf ( ""\\n"" )"		6677760	0					
ANR	6677923	Callee	printf		6677760	0					
ANR	6677924	Identifier	printf		6677760	0					
ANR	6677925	ArgumentList	"""\\n"""		6677760	1					
ANR	6677926	Argument	"""\\n"""		6677760	0					
ANR	6677927	PrimaryExpression	"""\\n"""		6677760	0					
ANR	6677928	ExpressionStatement	"setlocale ( LC_CTYPE , ""C"" )"	271:2:7240:7264	6677760	9	True				
ANR	6677929	CallExpression	"setlocale ( LC_CTYPE , ""C"" )"		6677760	0					
ANR	6677930	Callee	setlocale		6677760	0					
ANR	6677931	Identifier	setlocale		6677760	0					
ANR	6677932	ArgumentList	LC_CTYPE		6677760	1					
ANR	6677933	Argument	LC_CTYPE		6677760	0					
ANR	6677934	Identifier	LC_CTYPE		6677760	0					
ANR	6677935	Argument	"""C"""		6677760	1					
ANR	6677936	PrimaryExpression	"""C"""		6677760	0					
ANR	6677937	ReturnType	static void		6677760	1					
ANR	6677938	Identifier	process_COM		6677760	2					
ANR	6677939	ParameterList	int raw		6677760	3					
ANR	6677940	Parameter	int raw	225:13:6173:6179	6677760	0	True				
ANR	6677941	ParameterType	int		6677760	0					
ANR	6677942	Identifier	raw		6677760	1					
ANR	6677943	CFGEntryNode	ENTRY		6677760		True				
ANR	6677944	CFGExitNode	EXIT		6677760		True				
ANR	6677945	Symbol	lastch		6677760						
ANR	6677946	Symbol	read_2_bytes		6677760						
ANR	6677947	Symbol	read_1_byte		6677760						
ANR	6677948	Symbol	stdout		6677760						
ANR	6677949	Symbol	ch		6677760						
ANR	6677950	Symbol	length		6677760						
ANR	6677951	Symbol	isprint		6677760						
ANR	6677952	Symbol	raw		6677760						
ANR	6677953	Symbol	LC_CTYPE		6677760						
ANR	6677954	Function	process_SOFn	281:0:7383:9133							
ANR	6677955	FunctionDef	process_SOFn (int marker)		6677954	0					
ANR	6677956	CompoundStatement		283:0:7421:9133	6677954	0					
ANR	6677957	IdentifierDeclStatement	unsigned int length ;	284:2:7425:7444	6677954	0	True				
ANR	6677958	IdentifierDecl	length		6677954	0					
ANR	6677959	IdentifierDeclType	unsigned int		6677954	0					
ANR	6677960	Identifier	length		6677954	1					
ANR	6677961	IdentifierDeclStatement	"unsigned int image_height , image_width ;"	285:2:7448:7486	6677954	1	True				
ANR	6677962	IdentifierDecl	image_height		6677954	0					
ANR	6677963	IdentifierDeclType	unsigned int		6677954	0					
ANR	6677964	Identifier	image_height		6677954	1					
ANR	6677965	IdentifierDecl	image_width		6677954	1					
ANR	6677966	IdentifierDeclType	unsigned int		6677954	0					
ANR	6677967	Identifier	image_width		6677954	1					
ANR	6677968	IdentifierDeclStatement	"int data_precision , num_components ;"	286:2:7490:7524	6677954	2	True				
ANR	6677969	IdentifierDecl	data_precision		6677954	0					
ANR	6677970	IdentifierDeclType	int		6677954	0					
ANR	6677971	Identifier	data_precision		6677954	1					
ANR	6677972	IdentifierDecl	num_components		6677954	1					
ANR	6677973	IdentifierDeclType	int		6677954	0					
ANR	6677974	Identifier	num_components		6677954	1					
ANR	6677975	IdentifierDeclStatement	const char * process ;	287:2:7528:7548	6677954	3	True				
ANR	6677976	IdentifierDecl	* process		6677954	0					
ANR	6677977	IdentifierDeclType	const char *		6677954	0					
ANR	6677978	Identifier	process		6677954	1					
ANR	6677979	IdentifierDeclStatement	int ci ;	288:2:7552:7558	6677954	4	True				
ANR	6677980	IdentifierDecl	ci		6677954	0					
ANR	6677981	IdentifierDeclType	int		6677954	0					
ANR	6677982	Identifier	ci		6677954	1					
ANR	6677983	ExpressionStatement	length = read_2_bytes ( )	290:2:7563:7586	6677954	5	True				
ANR	6677984	AssignmentExpression	length = read_2_bytes ( )		6677954	0		=			
ANR	6677985	Identifier	length		6677954	0					
ANR	6677986	CallExpression	read_2_bytes ( )		6677954	1					
ANR	6677987	Callee	read_2_bytes		6677954	0					
ANR	6677988	Identifier	read_2_bytes		6677954	0					
ANR	6677989	ArgumentList			6677954	1					
ANR	6677990	ExpressionStatement	data_precision = read_1_byte ( )	292:2:7626:7656	6677954	6	True				
ANR	6677991	AssignmentExpression	data_precision = read_1_byte ( )		6677954	0		=			
ANR	6677992	Identifier	data_precision		6677954	0					
ANR	6677993	CallExpression	read_1_byte ( )		6677954	1					
ANR	6677994	Callee	read_1_byte		6677954	0					
ANR	6677995	Identifier	read_1_byte		6677954	0					
ANR	6677996	ArgumentList			6677954	1					
ANR	6677997	ExpressionStatement	image_height = read_2_bytes ( )	293:2:7660:7689	6677954	7	True				
ANR	6677998	AssignmentExpression	image_height = read_2_bytes ( )		6677954	0		=			
ANR	6677999	Identifier	image_height		6677954	0					
ANR	6678000	CallExpression	read_2_bytes ( )		6677954	1					
ANR	6678001	Callee	read_2_bytes		6677954	0					
ANR	6678002	Identifier	read_2_bytes		6677954	0					
ANR	6678003	ArgumentList			6677954	1					
ANR	6678004	ExpressionStatement	image_width = read_2_bytes ( )	294:2:7693:7721	6677954	8	True				
ANR	6678005	AssignmentExpression	image_width = read_2_bytes ( )		6677954	0		=			
ANR	6678006	Identifier	image_width		6677954	0					
ANR	6678007	CallExpression	read_2_bytes ( )		6677954	1					
ANR	6678008	Callee	read_2_bytes		6677954	0					
ANR	6678009	Identifier	read_2_bytes		6677954	0					
ANR	6678010	ArgumentList			6677954	1					
ANR	6678011	ExpressionStatement	num_components = read_1_byte ( )	295:2:7725:7755	6677954	9	True				
ANR	6678012	AssignmentExpression	num_components = read_1_byte ( )		6677954	0		=			
ANR	6678013	Identifier	num_components		6677954	0					
ANR	6678014	CallExpression	read_1_byte ( )		6677954	1					
ANR	6678015	Callee	read_1_byte		6677954	0					
ANR	6678016	Identifier	read_1_byte		6677954	0					
ANR	6678017	ArgumentList			6677954	1					
ANR	6678018	SwitchStatement	switch ( marker )		6677954	10					
ANR	6678019	Condition	marker	297:10:7768:7773	6677954	0	True				
ANR	6678020	Identifier	marker		6677954	0					
ANR	6678021	CompoundStatement		15:18:354:354	6677954	1					
ANR	6678022	Label	case M_SOF0 :	298:2:7780:7791	6677954	0	True				
ANR	6678023	Identifier	M_SOF0		6677954	0					
ANR	6678024	ExpressionStatement	"process = ""Baseline"""	298:15:7793:7813	6677954	1	True				
ANR	6678025	AssignmentExpression	"process = ""Baseline"""		6677954	0		=			
ANR	6678026	Identifier	process		6677954	0					
ANR	6678027	PrimaryExpression	"""Baseline"""		6677954	1					
ANR	6678028	BreakStatement	break ;	298:38:7816:7821	6677954	2	True				
ANR	6678029	Label	case M_SOF1 :	299:2:7825:7836	6677954	3	True				
ANR	6678030	Identifier	M_SOF1		6677954	0					
ANR	6678031	ExpressionStatement	"process = ""Extended sequential"""	299:15:7838:7869	6677954	4	True				
ANR	6678032	AssignmentExpression	"process = ""Extended sequential"""		6677954	0		=			
ANR	6678033	Identifier	process		6677954	0					
ANR	6678034	PrimaryExpression	"""Extended sequential"""		6677954	1					
ANR	6678035	BreakStatement	break ;	299:49:7872:7877	6677954	5	True				
ANR	6678036	Label	case M_SOF2 :	300:2:7881:7892	6677954	6	True				
ANR	6678037	Identifier	M_SOF2		6677954	0					
ANR	6678038	ExpressionStatement	"process = ""Progressive"""	300:15:7894:7917	6677954	7	True				
ANR	6678039	AssignmentExpression	"process = ""Progressive"""		6677954	0		=			
ANR	6678040	Identifier	process		6677954	0					
ANR	6678041	PrimaryExpression	"""Progressive"""		6677954	1					
ANR	6678042	BreakStatement	break ;	300:41:7920:7925	6677954	8	True				
ANR	6678043	Label	case M_SOF3 :	301:2:7929:7940	6677954	9	True				
ANR	6678044	Identifier	M_SOF3		6677954	0					
ANR	6678045	ExpressionStatement	"process = ""Lossless"""	301:15:7942:7962	6677954	10	True				
ANR	6678046	AssignmentExpression	"process = ""Lossless"""		6677954	0		=			
ANR	6678047	Identifier	process		6677954	0					
ANR	6678048	PrimaryExpression	"""Lossless"""		6677954	1					
ANR	6678049	BreakStatement	break ;	301:38:7965:7970	6677954	11	True				
ANR	6678050	Label	case M_SOF5 :	302:2:7974:7985	6677954	12	True				
ANR	6678051	Identifier	M_SOF5		6677954	0					
ANR	6678052	ExpressionStatement	"process = ""Differential sequential"""	302:15:7987:8022	6677954	13	True				
ANR	6678053	AssignmentExpression	"process = ""Differential sequential"""		6677954	0		=			
ANR	6678054	Identifier	process		6677954	0					
ANR	6678055	PrimaryExpression	"""Differential sequential"""		6677954	1					
ANR	6678056	BreakStatement	break ;	302:53:8025:8030	6677954	14	True				
ANR	6678057	Label	case M_SOF6 :	303:2:8034:8045	6677954	15	True				
ANR	6678058	Identifier	M_SOF6		6677954	0					
ANR	6678059	ExpressionStatement	"process = ""Differential progressive"""	303:15:8047:8083	6677954	16	True				
ANR	6678060	AssignmentExpression	"process = ""Differential progressive"""		6677954	0		=			
ANR	6678061	Identifier	process		6677954	0					
ANR	6678062	PrimaryExpression	"""Differential progressive"""		6677954	1					
ANR	6678063	BreakStatement	break ;	303:54:8086:8091	6677954	17	True				
ANR	6678064	Label	case M_SOF7 :	304:2:8095:8106	6677954	18	True				
ANR	6678065	Identifier	M_SOF7		6677954	0					
ANR	6678066	ExpressionStatement	"process = ""Differential lossless"""	304:15:8108:8141	6677954	19	True				
ANR	6678067	AssignmentExpression	"process = ""Differential lossless"""		6677954	0		=			
ANR	6678068	Identifier	process		6677954	0					
ANR	6678069	PrimaryExpression	"""Differential lossless"""		6677954	1					
ANR	6678070	BreakStatement	break ;	304:51:8144:8149	6677954	20	True				
ANR	6678071	Label	case M_SOF9 :	305:2:8153:8164	6677954	21	True				
ANR	6678072	Identifier	M_SOF9		6677954	0					
ANR	6678073	ExpressionStatement	"process = ""Extended sequential, arithmetic coding"""	305:15:8166:8216	6677954	22	True				
ANR	6678074	AssignmentExpression	"process = ""Extended sequential, arithmetic coding"""		6677954	0		=			
ANR	6678075	Identifier	process		6677954	0					
ANR	6678076	PrimaryExpression	"""Extended sequential, arithmetic coding"""		6677954	1					
ANR	6678077	BreakStatement	break ;	305:68:8219:8224	6677954	23	True				
ANR	6678078	Label	case M_SOF10 :	306:2:8228:8240	6677954	24	True				
ANR	6678079	Identifier	M_SOF10		6677954	0					
ANR	6678080	ExpressionStatement	"process = ""Progressive, arithmetic coding"""	306:16:8242:8284	6677954	25	True				
ANR	6678081	AssignmentExpression	"process = ""Progressive, arithmetic coding"""		6677954	0		=			
ANR	6678082	Identifier	process		6677954	0					
ANR	6678083	PrimaryExpression	"""Progressive, arithmetic coding"""		6677954	1					
ANR	6678084	BreakStatement	break ;	306:61:8287:8292	6677954	26	True				
ANR	6678085	Label	case M_SOF11 :	307:2:8296:8308	6677954	27	True				
ANR	6678086	Identifier	M_SOF11		6677954	0					
ANR	6678087	ExpressionStatement	"process = ""Lossless, arithmetic coding"""	307:16:8310:8349	6677954	28	True				
ANR	6678088	AssignmentExpression	"process = ""Lossless, arithmetic coding"""		6677954	0		=			
ANR	6678089	Identifier	process		6677954	0					
ANR	6678090	PrimaryExpression	"""Lossless, arithmetic coding"""		6677954	1					
ANR	6678091	BreakStatement	break ;	307:58:8352:8357	6677954	29	True				
ANR	6678092	Label	case M_SOF13 :	308:2:8361:8373	6677954	30	True				
ANR	6678093	Identifier	M_SOF13		6677954	0					
ANR	6678094	ExpressionStatement	"process = ""Differential sequential, arithmetic coding"""	308:16:8375:8429	6677954	31	True				
ANR	6678095	AssignmentExpression	"process = ""Differential sequential, arithmetic coding"""		6677954	0		=			
ANR	6678096	Identifier	process		6677954	0					
ANR	6678097	PrimaryExpression	"""Differential sequential, arithmetic coding"""		6677954	1					
ANR	6678098	BreakStatement	break ;	308:73:8432:8437	6677954	32	True				
ANR	6678099	Label	case M_SOF14 :	309:2:8441:8453	6677954	33	True				
ANR	6678100	Identifier	M_SOF14		6677954	0					
ANR	6678101	ExpressionStatement	"process = ""Differential progressive, arithmetic coding"""	309:16:8455:8510	6677954	34	True				
ANR	6678102	AssignmentExpression	"process = ""Differential progressive, arithmetic coding"""		6677954	0		=			
ANR	6678103	Identifier	process		6677954	0					
ANR	6678104	PrimaryExpression	"""Differential progressive, arithmetic coding"""		6677954	1					
ANR	6678105	BreakStatement	break ;	309:73:8512:8517	6677954	35	True				
ANR	6678106	Label	case M_SOF15 :	310:2:8521:8533	6677954	36	True				
ANR	6678107	Identifier	M_SOF15		6677954	0					
ANR	6678108	ExpressionStatement	"process = ""Differential lossless, arithmetic coding"""	310:16:8535:8587	6677954	37	True				
ANR	6678109	AssignmentExpression	"process = ""Differential lossless, arithmetic coding"""		6677954	0		=			
ANR	6678110	Identifier	process		6677954	0					
ANR	6678111	PrimaryExpression	"""Differential lossless, arithmetic coding"""		6677954	1					
ANR	6678112	BreakStatement	break ;	310:71:8590:8595	6677954	38	True				
ANR	6678113	Label	default :	311:2:8599:8606	6677954	39	True				
ANR	6678114	Identifier	default		6677954	0					
ANR	6678115	ExpressionStatement	"process = ""Unknown"""	311:11:8608:8627	6677954	40	True				
ANR	6678116	AssignmentExpression	"process = ""Unknown"""		6677954	0		=			
ANR	6678117	Identifier	process		6677954	0					
ANR	6678118	PrimaryExpression	"""Unknown"""		6677954	1					
ANR	6678119	BreakStatement	break ;	311:33:8630:8635	6677954	41	True				
ANR	6678120	ExpressionStatement	"printf ( ""JPEG image is %uw * %uh, %d color components, %d bits per sample\\n"" , image_width , image_height , num_components , data_precision )"	314:2:8644:8781	6677954	11	True				
ANR	6678121	CallExpression	"printf ( ""JPEG image is %uw * %uh, %d color components, %d bits per sample\\n"" , image_width , image_height , num_components , data_precision )"		6677954	0					
ANR	6678122	Callee	printf		6677954	0					
ANR	6678123	Identifier	printf		6677954	0					
ANR	6678124	ArgumentList	"""JPEG image is %uw * %uh, %d color components, %d bits per sample\\n"""		6677954	1					
ANR	6678125	Argument	"""JPEG image is %uw * %uh, %d color components, %d bits per sample\\n"""		6677954	0					
ANR	6678126	PrimaryExpression	"""JPEG image is %uw * %uh, %d color components, %d bits per sample\\n"""		6677954	0					
ANR	6678127	Argument	image_width		6677954	1					
ANR	6678128	Identifier	image_width		6677954	0					
ANR	6678129	Argument	image_height		6677954	2					
ANR	6678130	Identifier	image_height		6677954	0					
ANR	6678131	Argument	num_components		6677954	3					
ANR	6678132	Identifier	num_components		6677954	0					
ANR	6678133	Argument	data_precision		6677954	4					
ANR	6678134	Identifier	data_precision		6677954	0					
ANR	6678135	ExpressionStatement	"printf ( ""JPEG process: %s\\n"" , process )"	316:2:8785:8822	6677954	12	True				
ANR	6678136	CallExpression	"printf ( ""JPEG process: %s\\n"" , process )"		6677954	0					
ANR	6678137	Callee	printf		6677954	0					
ANR	6678138	Identifier	printf		6677954	0					
ANR	6678139	ArgumentList	"""JPEG process: %s\\n"""		6677954	1					
ANR	6678140	Argument	"""JPEG process: %s\\n"""		6677954	0					
ANR	6678141	PrimaryExpression	"""JPEG process: %s\\n"""		6677954	0					
ANR	6678142	Argument	process		6677954	1					
ANR	6678143	Identifier	process		6677954	0					
ANR	6678144	IfStatement	if ( length != ( unsigned int ) ( 8 + num_components * 3 ) )		6677954	13					
ANR	6678145	Condition	length != ( unsigned int ) ( 8 + num_components * 3 )	318:6:8831:8879	6677954	0	True				
ANR	6678146	EqualityExpression	length != ( unsigned int ) ( 8 + num_components * 3 )		6677954	0		!=			
ANR	6678147	Identifier	length		6677954	0					
ANR	6678148	CastExpression	( unsigned int ) ( 8 + num_components * 3 )		6677954	1					
ANR	6678149	CastTarget	unsigned int		6677954	0					
ANR	6678150	AdditiveExpression	8 + num_components * 3		6677954	1		+			
ANR	6678151	PrimaryExpression	8		6677954	0					
ANR	6678152	MultiplicativeExpression	num_components * 3		6677954	1		*			
ANR	6678153	Identifier	num_components		6677954	0					
ANR	6678154	PrimaryExpression	3		6677954	1					
ANR	6678155	ExpressionStatement	"ERREXIT ( ""Bogus SOF marker length"" )"	319:4:8886:8920	6677954	1	True				
ANR	6678156	CallExpression	"ERREXIT ( ""Bogus SOF marker length"" )"		6677954	0					
ANR	6678157	Callee	ERREXIT		6677954	0					
ANR	6678158	Identifier	ERREXIT		6677954	0					
ANR	6678159	ArgumentList	"""Bogus SOF marker length"""		6677954	1					
ANR	6678160	Argument	"""Bogus SOF marker length"""		6677954	0					
ANR	6678161	PrimaryExpression	"""Bogus SOF marker length"""		6677954	0					
ANR	6678162	ForStatement	for ( ci = 0 ; ci < num_components ; ci ++ )		6677954	14					
ANR	6678163	ForInit	ci = 0 ;	321:7:8930:8936	6677954	0	True				
ANR	6678164	AssignmentExpression	ci = 0		6677954	0		=			
ANR	6678165	Identifier	ci		6677954	0					
ANR	6678166	PrimaryExpression	0		6677954	1					
ANR	6678167	Condition	ci < num_components	321:15:8938:8956	6677954	1	True				
ANR	6678168	RelationalExpression	ci < num_components		6677954	0		<			
ANR	6678169	Identifier	ci		6677954	0					
ANR	6678170	Identifier	num_components		6677954	1					
ANR	6678171	PostIncDecOperationExpression	ci ++	321:36:8959:8962	6677954	2	True				
ANR	6678172	Identifier	ci		6677954	0					
ANR	6678173	IncDec	++		6677954	1					
ANR	6678174	CompoundStatement		39:42:1543:1543	6677954	3					
ANR	6678175	ExpressionStatement	( void ) read_1_byte ( )	322:4:8971:8991	6677954	0	True				
ANR	6678176	CastExpression	( void ) read_1_byte ( )		6677954	0					
ANR	6678177	CastTarget	void		6677954	0					
ANR	6678178	CallExpression	read_1_byte ( )		6677954	1					
ANR	6678179	Callee	read_1_byte		6677954	0					
ANR	6678180	Identifier	read_1_byte		6677954	0					
ANR	6678181	ArgumentList			6677954	1					
ANR	6678182	ExpressionStatement	( void ) read_1_byte ( )	323:4:9021:9041	6677954	1	True				
ANR	6678183	CastExpression	( void ) read_1_byte ( )		6677954	0					
ANR	6678184	CastTarget	void		6677954	0					
ANR	6678185	CallExpression	read_1_byte ( )		6677954	1					
ANR	6678186	Callee	read_1_byte		6677954	0					
ANR	6678187	Identifier	read_1_byte		6677954	0					
ANR	6678188	ArgumentList			6677954	1					
ANR	6678189	ExpressionStatement	( void ) read_1_byte ( )	324:4:9075:9095	6677954	2	True				
ANR	6678190	CastExpression	( void ) read_1_byte ( )		6677954	0					
ANR	6678191	CastTarget	void		6677954	0					
ANR	6678192	CallExpression	read_1_byte ( )		6677954	1					
ANR	6678193	Callee	read_1_byte		6677954	0					
ANR	6678194	Identifier	read_1_byte		6677954	0					
ANR	6678195	ArgumentList			6677954	1					
ANR	6678196	ReturnType	static void		6677954	1					
ANR	6678197	Identifier	process_SOFn		6677954	2					
ANR	6678198	ParameterList	int marker		6677954	3					
ANR	6678199	Parameter	int marker	282:14:7409:7418	6677954	0	True				
ANR	6678200	ParameterType	int		6677954	0					
ANR	6678201	Identifier	marker		6677954	1					
ANR	6678202	CFGEntryNode	ENTRY		6677954		True				
ANR	6678203	CFGExitNode	EXIT		6677954		True				
ANR	6678204	Symbol	data_precision		6677954						
ANR	6678205	Symbol	process		6677954						
ANR	6678206	Symbol	image_height		6677954						
ANR	6678207	Symbol	read_2_bytes		6677954						
ANR	6678208	Symbol	read_1_byte		6677954						
ANR	6678209	Symbol	marker		6677954						
ANR	6678210	Symbol	ci		6677954						
ANR	6678211	Symbol	length		6677954						
ANR	6678212	Symbol	image_width		6677954						
ANR	6678213	Symbol	num_components		6677954						
ANR	6678214	Function	scan_JPEG_header	339:0:9609:11480							
ANR	6678215	FunctionDef	"scan_JPEG_header (int verbose , int raw)"		6678214	0					
ANR	6678216	CompoundStatement		341:0:9660:11480	6678214	0					
ANR	6678217	IdentifierDeclStatement	int marker ;	342:2:9664:9674	6678214	0	True				
ANR	6678218	IdentifierDecl	marker		6678214	0					
ANR	6678219	IdentifierDeclType	int		6678214	0					
ANR	6678220	Identifier	marker		6678214	1					
ANR	6678221	IfStatement	if ( first_marker ( ) != M_SOI )		6678214	1					
ANR	6678222	Condition	first_marker ( ) != M_SOI	345:6:9719:9741	6678214	0	True				
ANR	6678223	EqualityExpression	first_marker ( ) != M_SOI		6678214	0		!=			
ANR	6678224	CallExpression	first_marker ( )		6678214	0					
ANR	6678225	Callee	first_marker		6678214	0					
ANR	6678226	Identifier	first_marker		6678214	0					
ANR	6678227	ArgumentList			6678214	1					
ANR	6678228	Identifier	M_SOI		6678214	1					
ANR	6678229	ExpressionStatement	"ERREXIT ( ""Expected SOI marker first"" )"	346:4:9748:9784	6678214	1	True				
ANR	6678230	CallExpression	"ERREXIT ( ""Expected SOI marker first"" )"		6678214	0					
ANR	6678231	Callee	ERREXIT		6678214	0					
ANR	6678232	Identifier	ERREXIT		6678214	0					
ANR	6678233	ArgumentList	"""Expected SOI marker first"""		6678214	1					
ANR	6678234	Argument	"""Expected SOI marker first"""		6678214	0					
ANR	6678235	PrimaryExpression	"""Expected SOI marker first"""		6678214	0					
ANR	6678236	ForStatement	for ( ; ; )		6678214	2					
ANR	6678237	CompoundStatement		9:11:192:192	6678214	0					
ANR	6678238	ExpressionStatement	marker = next_marker ( )	350:4:9859:9881	6678214	0	True				
ANR	6678239	AssignmentExpression	marker = next_marker ( )		6678214	0		=			
ANR	6678240	Identifier	marker		6678214	0					
ANR	6678241	CallExpression	next_marker ( )		6678214	1					
ANR	6678242	Callee	next_marker		6678214	0					
ANR	6678243	Identifier	next_marker		6678214	0					
ANR	6678244	ArgumentList			6678214	1					
ANR	6678245	SwitchStatement	switch ( marker )		6678214	1					
ANR	6678246	Condition	marker	351:12:9895:9900	6678214	0	True				
ANR	6678247	Identifier	marker		6678214	0					
ANR	6678248	CompoundStatement		11:20:242:242	6678214	1					
ANR	6678249	Label	case M_SOF0 :	355:4:10055:10066	6678214	0	True				
ANR	6678250	Identifier	M_SOF0		6678214	0					
ANR	6678251	Label	case M_SOF1 :	356:4:10088:10099	6678214	1	True				
ANR	6678252	Identifier	M_SOF1		6678214	0					
ANR	6678253	Label	case M_SOF2 :	357:4:10141:10152	6678214	2	True				
ANR	6678254	Identifier	M_SOF2		6678214	0					
ANR	6678255	Label	case M_SOF3 :	358:4:10186:10197	6678214	3	True				
ANR	6678256	Identifier	M_SOF3		6678214	0					
ANR	6678257	Label	case M_SOF5 :	359:4:10228:10239	6678214	4	True				
ANR	6678258	Identifier	M_SOF5		6678214	0					
ANR	6678259	Label	case M_SOF6 :	360:4:10285:10296	6678214	5	True				
ANR	6678260	Identifier	M_SOF6		6678214	0					
ANR	6678261	Label	case M_SOF7 :	361:4:10343:10354	6678214	6	True				
ANR	6678262	Identifier	M_SOF7		6678214	0					
ANR	6678263	Label	case M_SOF9 :	362:4:10398:10409	6678214	7	True				
ANR	6678264	Identifier	M_SOF9		6678214	0					
ANR	6678265	Label	case M_SOF10 :	363:4:10454:10466	6678214	8	True				
ANR	6678266	Identifier	M_SOF10		6678214	0					
ANR	6678267	Label	case M_SOF11 :	364:4:10503:10515	6678214	9	True				
ANR	6678268	Identifier	M_SOF11		6678214	0					
ANR	6678269	Label	case M_SOF13 :	365:4:10549:10561	6678214	10	True				
ANR	6678270	Identifier	M_SOF13		6678214	0					
ANR	6678271	Label	case M_SOF14 :	366:4:10610:10622	6678214	11	True				
ANR	6678272	Identifier	M_SOF14		6678214	0					
ANR	6678273	Label	case M_SOF15 :	367:4:10672:10684	6678214	12	True				
ANR	6678274	Identifier	M_SOF15		6678214	0					
ANR	6678275	IfStatement	if ( verbose )		6678214	13					
ANR	6678276	Condition	verbose	368:10:10737:10743	6678214	0	True				
ANR	6678277	Identifier	verbose		6678214	0					
ANR	6678278	ExpressionStatement	process_SOFn ( marker )	369:1:10747:10767	6678214	1	True				
ANR	6678279	CallExpression	process_SOFn ( marker )		6678214	0					
ANR	6678280	Callee	process_SOFn		6678214	0					
ANR	6678281	Identifier	process_SOFn		6678214	0					
ANR	6678282	ArgumentList	marker		6678214	1					
ANR	6678283	Argument	marker		6678214	0					
ANR	6678284	Identifier	marker		6678214	0					
ANR	6678285	ElseStatement	else		6678214	0					
ANR	6678286	ExpressionStatement	skip_variable ( )	371:1:10781:10796	6678214	0	True				
ANR	6678287	CallExpression	skip_variable ( )		6678214	0					
ANR	6678288	Callee	skip_variable		6678214	0					
ANR	6678289	Identifier	skip_variable		6678214	0					
ANR	6678290	ArgumentList			6678214	1					
ANR	6678291	BreakStatement	break ;	372:6:10804:10809	6678214	14	True				
ANR	6678292	Label	case M_SOS :	374:4:10816:10826	6678214	15	True				
ANR	6678293	Identifier	M_SOS		6678214	0					
ANR	6678294	ReturnStatement	return marker ;	375:6:10878:10891	6678214	16	True				
ANR	6678295	Identifier	marker		6678214	0					
ANR	6678296	Label	case M_EOI :	377:4:10898:10908	6678214	17	True				
ANR	6678297	Identifier	M_EOI		6678214	0					
ANR	6678298	ReturnStatement	return marker ;	378:6:10963:10976	6678214	18	True				
ANR	6678299	Identifier	marker		6678214	0					
ANR	6678300	Label	case M_COM :	380:4:10983:10993	6678214	19	True				
ANR	6678301	Identifier	M_COM		6678214	0					
ANR	6678302	ExpressionStatement	process_COM ( raw )	381:6:11001:11017	6678214	20	True				
ANR	6678303	CallExpression	process_COM ( raw )		6678214	0					
ANR	6678304	Callee	process_COM		6678214	0					
ANR	6678305	Identifier	process_COM		6678214	0					
ANR	6678306	ArgumentList	raw		6678214	1					
ANR	6678307	Argument	raw		6678214	0					
ANR	6678308	Identifier	raw		6678214	0					
ANR	6678309	BreakStatement	break ;	382:6:11025:11030	6678214	21	True				
ANR	6678310	Label	case M_APP12 :	384:4:11037:11049	6678214	22	True				
ANR	6678311	Identifier	M_APP12		6678214	0					
ANR	6678312	IfStatement	if ( verbose )		6678214	23					
ANR	6678313	Condition	verbose	388:10:11216:11222	6678214	0	True				
ANR	6678314	Identifier	verbose		6678214	0					
ANR	6678315	CompoundStatement		48:19:1564:1564	6678214	1					
ANR	6678316	ExpressionStatement	"printf ( ""APP12 contains:\\n"" )"	389:1:11228:11255	6678214	0	True				
ANR	6678317	CallExpression	"printf ( ""APP12 contains:\\n"" )"		6678214	0					
ANR	6678318	Callee	printf		6678214	0					
ANR	6678319	Identifier	printf		6678214	0					
ANR	6678320	ArgumentList	"""APP12 contains:\\n"""		6678214	1					
ANR	6678321	Argument	"""APP12 contains:\\n"""		6678214	0					
ANR	6678322	PrimaryExpression	"""APP12 contains:\\n"""		6678214	0					
ANR	6678323	ExpressionStatement	process_COM ( raw )	390:1:11258:11274	6678214	1	True				
ANR	6678324	CallExpression	process_COM ( raw )		6678214	0					
ANR	6678325	Callee	process_COM		6678214	0					
ANR	6678326	Identifier	process_COM		6678214	0					
ANR	6678327	ArgumentList	raw		6678214	1					
ANR	6678328	Argument	raw		6678214	0					
ANR	6678329	Identifier	raw		6678214	0					
ANR	6678330	ElseStatement	else		6678214	0					
ANR	6678331	ExpressionStatement	skip_variable ( )	392:1:11290:11305	6678214	0	True				
ANR	6678332	CallExpression	skip_variable ( )		6678214	0					
ANR	6678333	Callee	skip_variable		6678214	0					
ANR	6678334	Identifier	skip_variable		6678214	0					
ANR	6678335	ArgumentList			6678214	1					
ANR	6678336	BreakStatement	break ;	393:6:11313:11318	6678214	24	True				
ANR	6678337	Label	default :	395:4:11325:11332	6678214	25	True				
ANR	6678338	Identifier	default		6678214	0					
ANR	6678339	ExpressionStatement	skip_variable ( )	396:6:11380:11395	6678214	26	True				
ANR	6678340	CallExpression	skip_variable ( )		6678214	0					
ANR	6678341	Callee	skip_variable		6678214	0					
ANR	6678342	Identifier	skip_variable		6678214	0					
ANR	6678343	ArgumentList			6678214	1					
ANR	6678344	BreakStatement	break ;	397:6:11448:11453	6678214	27	True				
ANR	6678345	ReturnType	static int		6678214	1					
ANR	6678346	Identifier	scan_JPEG_header		6678214	2					
ANR	6678347	ParameterList	"int verbose , int raw"		6678214	3					
ANR	6678348	Parameter	int verbose	340:18:9638:9648	6678214	0	True				
ANR	6678349	ParameterType	int		6678214	0					
ANR	6678350	Identifier	verbose		6678214	1					
ANR	6678351	Parameter	int raw	340:31:9651:9657	6678214	1	True				
ANR	6678352	ParameterType	int		6678214	0					
ANR	6678353	Identifier	raw		6678214	1					
ANR	6678354	CFGEntryNode	ENTRY		6678214		True				
ANR	6678355	CFGExitNode	EXIT		6678214		True				
ANR	6678356	InfiniteForNode	true		6678214		True				
ANR	6678357	Symbol	next_marker		6678214						
ANR	6678358	Symbol	M_SOI		6678214						
ANR	6678359	Symbol	first_marker		6678214						
ANR	6678360	Symbol	marker		6678214						
ANR	6678361	Symbol	raw		6678214						
ANR	6678362	Symbol	verbose		6678214						
ANR	6678363	DeclStmt									
ANR	6678364	Decl							const char	const char *	progname
ANR	6678365	Function	usage	408:0:11587:12052							
ANR	6678366	FunctionDef	usage ()		6678365	0					
ANR	6678367	CompoundStatement		411:0:11650:12052	6678365	0					
ANR	6678368	ExpressionStatement	"fprintf ( stderr , ""rdjpgcom displays any textual comments in a JPEG file.\\n"" )"	412:2:11654:11729	6678365	0	True				
ANR	6678369	CallExpression	"fprintf ( stderr , ""rdjpgcom displays any textual comments in a JPEG file.\\n"" )"		6678365	0					
ANR	6678370	Callee	fprintf		6678365	0					
ANR	6678371	Identifier	fprintf		6678365	0					
ANR	6678372	ArgumentList	stderr		6678365	1					
ANR	6678373	Argument	stderr		6678365	0					
ANR	6678374	Identifier	stderr		6678365	0					
ANR	6678375	Argument	"""rdjpgcom displays any textual comments in a JPEG file.\\n"""		6678365	1					
ANR	6678376	PrimaryExpression	"""rdjpgcom displays any textual comments in a JPEG file.\\n"""		6678365	0					
ANR	6678377	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [switches] [inputfile]\\n"" , progname )"	414:2:11734:11797	6678365	1	True				
ANR	6678378	CallExpression	"fprintf ( stderr , ""Usage: %s [switches] [inputfile]\\n"" , progname )"		6678365	0					
ANR	6678379	Callee	fprintf		6678365	0					
ANR	6678380	Identifier	fprintf		6678365	0					
ANR	6678381	ArgumentList	stderr		6678365	1					
ANR	6678382	Argument	stderr		6678365	0					
ANR	6678383	Identifier	stderr		6678365	0					
ANR	6678384	Argument	"""Usage: %s [switches] [inputfile]\\n"""		6678365	1					
ANR	6678385	PrimaryExpression	"""Usage: %s [switches] [inputfile]\\n"""		6678365	0					
ANR	6678386	Argument	progname		6678365	2					
ANR	6678387	Identifier	progname		6678365	0					
ANR	6678388	ExpressionStatement	"fprintf ( stderr , ""Switches (names may be abbreviated):\\n"" )"	416:2:11802:11859	6678365	2	True				
ANR	6678389	CallExpression	"fprintf ( stderr , ""Switches (names may be abbreviated):\\n"" )"		6678365	0					
ANR	6678390	Callee	fprintf		6678365	0					
ANR	6678391	Identifier	fprintf		6678365	0					
ANR	6678392	ArgumentList	stderr		6678365	1					
ANR	6678393	Argument	stderr		6678365	0					
ANR	6678394	Identifier	stderr		6678365	0					
ANR	6678395	Argument	"""Switches (names may be abbreviated):\\n"""		6678365	1					
ANR	6678396	PrimaryExpression	"""Switches (names may be abbreviated):\\n"""		6678365	0					
ANR	6678397	ExpressionStatement	"fprintf ( stderr , ""  -raw        Display non-printable characters in comments (unsafe)\\n"" )"	417:2:11863:11951	6678365	3	True				
ANR	6678398	CallExpression	"fprintf ( stderr , ""  -raw        Display non-printable characters in comments (unsafe)\\n"" )"		6678365	0					
ANR	6678399	Callee	fprintf		6678365	0					
ANR	6678400	Identifier	fprintf		6678365	0					
ANR	6678401	ArgumentList	stderr		6678365	1					
ANR	6678402	Argument	stderr		6678365	0					
ANR	6678403	Identifier	stderr		6678365	0					
ANR	6678404	Argument	"""  -raw        Display non-printable characters in comments (unsafe)\\n"""		6678365	1					
ANR	6678405	PrimaryExpression	"""  -raw        Display non-printable characters in comments (unsafe)\\n"""		6678365	0					
ANR	6678406	ExpressionStatement	"fprintf ( stderr , ""  -verbose    Also display dimensions of JPEG image\\n"" )"	418:2:11955:12027	6678365	4	True				
ANR	6678407	CallExpression	"fprintf ( stderr , ""  -verbose    Also display dimensions of JPEG image\\n"" )"		6678365	0					
ANR	6678408	Callee	fprintf		6678365	0					
ANR	6678409	Identifier	fprintf		6678365	0					
ANR	6678410	ArgumentList	stderr		6678365	1					
ANR	6678411	Argument	stderr		6678365	0					
ANR	6678412	Identifier	stderr		6678365	0					
ANR	6678413	Argument	"""  -verbose    Also display dimensions of JPEG image\\n"""		6678365	1					
ANR	6678414	PrimaryExpression	"""  -verbose    Also display dimensions of JPEG image\\n"""		6678365	0					
ANR	6678415	ExpressionStatement	exit ( EXIT_FAILURE )	420:2:12032:12050	6678365	5	True				
ANR	6678416	CallExpression	exit ( EXIT_FAILURE )		6678365	0					
ANR	6678417	Callee	exit		6678365	0					
ANR	6678418	Identifier	exit		6678365	0					
ANR	6678419	ArgumentList	EXIT_FAILURE		6678365	1					
ANR	6678420	Argument	EXIT_FAILURE		6678365	0					
ANR	6678421	Identifier	EXIT_FAILURE		6678365	0					
ANR	6678422	ReturnType	static void		6678365	1					
ANR	6678423	Identifier	usage		6678365	2					
ANR	6678424	ParameterList			6678365	3					
ANR	6678425	CFGEntryNode	ENTRY		6678365		True				
ANR	6678426	CFGExitNode	EXIT		6678365		True				
ANR	6678427	Symbol	EXIT_FAILURE		6678365						
ANR	6678428	Symbol	progname		6678365						
ANR	6678429	Symbol	stderr		6678365						
ANR	6678430	Function	keymatch	424:0:12056:12843							
ANR	6678431	FunctionDef	"keymatch (char * arg , const char * keyword , int minchars)"		6678430	0					
ANR	6678432	CompoundStatement		429:0:12325:12843	6678430	0					
ANR	6678433	Statement	register	430:2:12329:12336	6678430	0	True				
ANR	6678434	IdentifierDeclStatement	"int ca , ck ;"	430:11:12338:12348	6678430	1	True				
ANR	6678435	IdentifierDecl	ca		6678430	0					
ANR	6678436	IdentifierDeclType	int		6678430	0					
ANR	6678437	Identifier	ca		6678430	1					
ANR	6678438	IdentifierDecl	ck		6678430	1					
ANR	6678439	IdentifierDeclType	int		6678430	0					
ANR	6678440	Identifier	ck		6678430	1					
ANR	6678441	Statement	register	431:2:12352:12359	6678430	2	True				
ANR	6678442	IdentifierDeclStatement	int nmatched = 0 ;	431:11:12361:12377	6678430	3	True				
ANR	6678443	IdentifierDecl	nmatched = 0		6678430	0					
ANR	6678444	IdentifierDeclType	int		6678430	0					
ANR	6678445	Identifier	nmatched		6678430	1					
ANR	6678446	AssignmentExpression	nmatched = 0		6678430	2		=			
ANR	6678447	Identifier	nmatched		6678430	0					
ANR	6678448	PrimaryExpression	0		6678430	1					
ANR	6678449	WhileStatement	while ( ( ca = * arg ++ ) != '\\0' )		6678430	4					
ANR	6678450	Condition	( ca = * arg ++ ) != '\\0'	433:9:12389:12409	6678430	0	True				
ANR	6678451	EqualityExpression	( ca = * arg ++ ) != '\\0'		6678430	0		!=			
ANR	6678452	AssignmentExpression	ca = * arg ++		6678430	0		=			
ANR	6678453	Identifier	ca		6678430	0					
ANR	6678454	UnaryOperationExpression	* arg ++		6678430	1					
ANR	6678455	UnaryOperator	*		6678430	0					
ANR	6678456	PostIncDecOperationExpression	arg ++		6678430	1					
ANR	6678457	Identifier	arg		6678430	0					
ANR	6678458	IncDec	++		6678430	1					
ANR	6678459	PrimaryExpression	'\\0'		6678430	1					
ANR	6678460	CompoundStatement		5:32:86:86	6678430	1					
ANR	6678461	IfStatement	if ( ( ck = * keyword ++ ) == '\\0' )		6678430	0					
ANR	6678462	Condition	( ck = * keyword ++ ) == '\\0'	434:8:12422:12446	6678430	0	True				
ANR	6678463	EqualityExpression	( ck = * keyword ++ ) == '\\0'		6678430	0		==			
ANR	6678464	AssignmentExpression	ck = * keyword ++		6678430	0		=			
ANR	6678465	Identifier	ck		6678430	0					
ANR	6678466	UnaryOperationExpression	* keyword ++		6678430	1					
ANR	6678467	UnaryOperator	*		6678430	0					
ANR	6678468	PostIncDecOperationExpression	keyword ++		6678430	1					
ANR	6678469	Identifier	keyword		6678430	0					
ANR	6678470	IncDec	++		6678430	1					
ANR	6678471	PrimaryExpression	'\\0'		6678430	1					
ANR	6678472	ReturnStatement	return 0 ;	435:6:12455:12463	6678430	1	True				
ANR	6678473	PrimaryExpression	0		6678430	0					
ANR	6678474	IfStatement	if ( isupper ( ca ) )		6678430	1					
ANR	6678475	Condition	isupper ( ca )	436:8:12514:12524	6678430	0	True				
ANR	6678476	CallExpression	isupper ( ca )		6678430	0					
ANR	6678477	Callee	isupper		6678430	0					
ANR	6678478	Identifier	isupper		6678430	0					
ANR	6678479	ArgumentList	ca		6678430	1					
ANR	6678480	Argument	ca		6678430	0					
ANR	6678481	Identifier	ca		6678430	0					
ANR	6678482	ExpressionStatement	ca = tolower ( ca )	437:6:12582:12598	6678430	1	True				
ANR	6678483	AssignmentExpression	ca = tolower ( ca )		6678430	0		=			
ANR	6678484	Identifier	ca		6678430	0					
ANR	6678485	CallExpression	tolower ( ca )		6678430	1					
ANR	6678486	Callee	tolower		6678430	0					
ANR	6678487	Identifier	tolower		6678430	0					
ANR	6678488	ArgumentList	ca		6678430	1					
ANR	6678489	Argument	ca		6678430	0					
ANR	6678490	Identifier	ca		6678430	0					
ANR	6678491	IfStatement	if ( ca != ck )		6678430	2					
ANR	6678492	Condition	ca != ck	438:8:12608:12615	6678430	0	True				
ANR	6678493	EqualityExpression	ca != ck		6678430	0		!=			
ANR	6678494	Identifier	ca		6678430	0					
ANR	6678495	Identifier	ck		6678430	1					
ANR	6678496	ReturnStatement	return 0 ;	439:6:12624:12632	6678430	1	True				
ANR	6678497	PrimaryExpression	0		6678430	0					
ANR	6678498	ExpressionStatement	nmatched ++	440:4:12654:12664	6678430	3	True				
ANR	6678499	PostIncDecOperationExpression	nmatched ++		6678430	0					
ANR	6678500	Identifier	nmatched		6678430	0					
ANR	6678501	IncDec	++		6678430	1					
ANR	6678502	IfStatement	if ( nmatched < minchars )		6678430	5					
ANR	6678503	Condition	nmatched < minchars	443:6:12783:12801	6678430	0	True				
ANR	6678504	RelationalExpression	nmatched < minchars		6678430	0		<			
ANR	6678505	Identifier	nmatched		6678430	0					
ANR	6678506	Identifier	minchars		6678430	1					
ANR	6678507	ReturnStatement	return 0 ;	444:4:12808:12816	6678430	1	True				
ANR	6678508	PrimaryExpression	0		6678430	0					
ANR	6678509	ReturnStatement	return 1 ;	445:2:12820:12828	6678430	6	True				
ANR	6678510	PrimaryExpression	1		6678430	0					
ANR	6678511	ReturnType	static int		6678430	1					
ANR	6678512	Identifier	keymatch		6678430	2					
ANR	6678513	ParameterList	"char * arg , const char * keyword , int minchars"		6678430	3					
ANR	6678514	Parameter	char * arg	425:10:12077:12086	6678430	0	True				
ANR	6678515	ParameterType	char *		6678430	0					
ANR	6678516	Identifier	arg		6678430	1					
ANR	6678517	Parameter	const char * keyword	425:22:12089:12108	6678430	1	True				
ANR	6678518	ParameterType	const char *		6678430	0					
ANR	6678519	Identifier	keyword		6678430	1					
ANR	6678520	Parameter	int minchars	425:44:12111:12122	6678430	2	True				
ANR	6678521	ParameterType	int		6678430	0					
ANR	6678522	Identifier	minchars		6678430	1					
ANR	6678523	CFGEntryNode	ENTRY		6678430		True				
ANR	6678524	CFGExitNode	EXIT		6678430		True				
ANR	6678525	Symbol	* keyword ++		6678430						
ANR	6678526	Symbol	* arg ++		6678430						
ANR	6678527	Symbol	tolower		6678430						
ANR	6678528	Symbol	arg		6678430						
ANR	6678529	Symbol	ck		6678430						
ANR	6678530	Symbol	isupper		6678430						
ANR	6678531	Symbol	nmatched		6678430						
ANR	6678532	Symbol	keyword		6678430						
ANR	6678533	Symbol	minchars		6678430						
ANR	6678534	Symbol	ca		6678430						
ANR	6678535	Function	main	453:0:12876:14464							
ANR	6678536	FunctionDef	"main (int argc , char * * argv)"		6678535	0					
ANR	6678537	CompoundStatement		455:0:12909:14464	6678535	0					
ANR	6678538	IdentifierDeclStatement	int argn ;	456:2:12913:12921	6678535	0	True				
ANR	6678539	IdentifierDecl	argn		6678535	0					
ANR	6678540	IdentifierDeclType	int		6678535	0					
ANR	6678541	Identifier	argn		6678535	1					
ANR	6678542	IdentifierDeclStatement	char * arg ;	457:2:12925:12935	6678535	1	True				
ANR	6678543	IdentifierDecl	* arg		6678535	0					
ANR	6678544	IdentifierDeclType	char *		6678535	0					
ANR	6678545	Identifier	arg		6678535	1					
ANR	6678546	IdentifierDeclStatement	"int verbose = 0 , raw = 0 ;"	458:2:12939:12963	6678535	2	True				
ANR	6678547	IdentifierDecl	verbose = 0		6678535	0					
ANR	6678548	IdentifierDeclType	int		6678535	0					
ANR	6678549	Identifier	verbose		6678535	1					
ANR	6678550	AssignmentExpression	verbose = 0		6678535	2		=			
ANR	6678551	Identifier	verbose		6678535	0					
ANR	6678552	PrimaryExpression	0		6678535	1					
ANR	6678553	IdentifierDecl	raw = 0		6678535	1					
ANR	6678554	IdentifierDeclType	int		6678535	0					
ANR	6678555	Identifier	raw		6678535	1					
ANR	6678556	AssignmentExpression	raw = 0		6678535	2		=			
ANR	6678557	Identifier	raw		6678535	0					
ANR	6678558	PrimaryExpression	0		6678535	1					
ANR	6678559	ExpressionStatement	argc = ccommand ( & argv )	462:2:13026:13048	6678535	3	True				
ANR	6678560	AssignmentExpression	argc = ccommand ( & argv )		6678535	0		=			
ANR	6678561	Identifier	argc		6678535	0					
ANR	6678562	CallExpression	ccommand ( & argv )		6678535	1					
ANR	6678563	Callee	ccommand		6678535	0					
ANR	6678564	Identifier	ccommand		6678535	0					
ANR	6678565	ArgumentList	& argv		6678535	1					
ANR	6678566	Argument	& argv		6678535	0					
ANR	6678567	UnaryOperationExpression	& argv		6678535	0					
ANR	6678568	UnaryOperator	&		6678535	0					
ANR	6678569	Identifier	argv		6678535	1					
ANR	6678570	ExpressionStatement	progname = argv [ 0 ]	465:2:13060:13078	6678535	4	True				
ANR	6678571	AssignmentExpression	progname = argv [ 0 ]		6678535	0		=			
ANR	6678572	Identifier	progname		6678535	0					
ANR	6678573	ArrayIndexing	argv [ 0 ]		6678535	1					
ANR	6678574	Identifier	argv		6678535	0					
ANR	6678575	PrimaryExpression	0		6678535	1					
ANR	6678576	IfStatement	if ( progname == NULL || progname [ 0 ] == 0 )		6678535	5					
ANR	6678577	Condition	progname == NULL || progname [ 0 ] == 0	466:6:13086:13121	6678535	0	True				
ANR	6678578	OrExpression	progname == NULL || progname [ 0 ] == 0		6678535	0		||			
ANR	6678579	EqualityExpression	progname == NULL		6678535	0		==			
ANR	6678580	Identifier	progname		6678535	0					
ANR	6678581	Identifier	NULL		6678535	1					
ANR	6678582	EqualityExpression	progname [ 0 ] == 0		6678535	1		==			
ANR	6678583	ArrayIndexing	progname [ 0 ]		6678535	0					
ANR	6678584	Identifier	progname		6678535	0					
ANR	6678585	PrimaryExpression	0		6678535	1					
ANR	6678586	PrimaryExpression	0		6678535	1					
ANR	6678587	ExpressionStatement	"progname = ""rdjpgcom"""	467:4:13128:13149	6678535	1	True				
ANR	6678588	AssignmentExpression	"progname = ""rdjpgcom"""		6678535	0		=			
ANR	6678589	Identifier	progname		6678535	0					
ANR	6678590	PrimaryExpression	"""rdjpgcom"""		6678535	1					
ANR	6678591	ForStatement	for ( argn = 1 ; argn < argc ; argn ++ )		6678535	6					
ANR	6678592	ForInit	argn = 1 ;	470:7:13233:13241	6678535	0	True				
ANR	6678593	AssignmentExpression	argn = 1		6678535	0		=			
ANR	6678594	Identifier	argn		6678535	0					
ANR	6678595	PrimaryExpression	1		6678535	1					
ANR	6678596	Condition	argn < argc	470:17:13243:13253	6678535	1	True				
ANR	6678597	RelationalExpression	argn < argc		6678535	0		<			
ANR	6678598	Identifier	argn		6678535	0					
ANR	6678599	Identifier	argc		6678535	1					
ANR	6678600	PostIncDecOperationExpression	argn ++	470:30:13256:13261	6678535	2	True				
ANR	6678601	Identifier	argn		6678535	0					
ANR	6678602	IncDec	++		6678535	1					
ANR	6678603	CompoundStatement		16:38:354:354	6678535	3					
ANR	6678604	ExpressionStatement	arg = argv [ argn ]	471:4:13270:13286	6678535	0	True				
ANR	6678605	AssignmentExpression	arg = argv [ argn ]		6678535	0		=			
ANR	6678606	Identifier	arg		6678535	0					
ANR	6678607	ArrayIndexing	argv [ argn ]		6678535	1					
ANR	6678608	Identifier	argv		6678535	0					
ANR	6678609	Identifier	argn		6678535	1					
ANR	6678610	IfStatement	if ( arg [ 0 ] != '-' )		6678535	1					
ANR	6678611	Condition	arg [ 0 ] != '-'	472:8:13296:13308	6678535	0	True				
ANR	6678612	EqualityExpression	arg [ 0 ] != '-'		6678535	0		!=			
ANR	6678613	ArrayIndexing	arg [ 0 ]		6678535	0					
ANR	6678614	Identifier	arg		6678535	0					
ANR	6678615	PrimaryExpression	0		6678535	1					
ANR	6678616	PrimaryExpression	'-'		6678535	1					
ANR	6678617	BreakStatement	break ;	473:6:13317:13322	6678535	1	True				
ANR	6678618	ExpressionStatement	arg ++	474:4:13366:13371	6678535	2	True				
ANR	6678619	PostIncDecOperationExpression	arg ++		6678535	0					
ANR	6678620	Identifier	arg		6678535	0					
ANR	6678621	IncDec	++		6678535	1					
ANR	6678622	IfStatement	"if ( keymatch ( arg , ""verbose"" , 1 ) )"		6678535	3					
ANR	6678623	Condition	"keymatch ( arg , ""verbose"" , 1 )"	475:8:13406:13432	6678535	0	True				
ANR	6678624	CallExpression	"keymatch ( arg , ""verbose"" , 1 )"		6678535	0					
ANR	6678625	Callee	keymatch		6678535	0					
ANR	6678626	Identifier	keymatch		6678535	0					
ANR	6678627	ArgumentList	arg		6678535	1					
ANR	6678628	Argument	arg		6678535	0					
ANR	6678629	Identifier	arg		6678535	0					
ANR	6678630	Argument	"""verbose"""		6678535	1					
ANR	6678631	PrimaryExpression	"""verbose"""		6678535	0					
ANR	6678632	Argument	1		6678535	2					
ANR	6678633	PrimaryExpression	1		6678535	0					
ANR	6678634	CompoundStatement		21:37:525:525	6678535	1					
ANR	6678635	ExpressionStatement	verbose ++	476:6:13443:13452	6678535	0	True				
ANR	6678636	PostIncDecOperationExpression	verbose ++		6678535	0					
ANR	6678637	Identifier	verbose		6678535	0					
ANR	6678638	IncDec	++		6678535	1					
ANR	6678639	ElseStatement	else		6678535	0					
ANR	6678640	IfStatement	"if ( keymatch ( arg , ""raw"" , 1 ) )"		6678535	0					
ANR	6678641	Condition	"keymatch ( arg , ""raw"" , 1 )"	477:15:13469:13491	6678535	0	True				
ANR	6678642	CallExpression	"keymatch ( arg , ""raw"" , 1 )"		6678535	0					
ANR	6678643	Callee	keymatch		6678535	0					
ANR	6678644	Identifier	keymatch		6678535	0					
ANR	6678645	ArgumentList	arg		6678535	1					
ANR	6678646	Argument	arg		6678535	0					
ANR	6678647	Identifier	arg		6678535	0					
ANR	6678648	Argument	"""raw"""		6678535	1					
ANR	6678649	PrimaryExpression	"""raw"""		6678535	0					
ANR	6678650	Argument	1		6678535	2					
ANR	6678651	PrimaryExpression	1		6678535	0					
ANR	6678652	CompoundStatement		23:40:584:584	6678535	1					
ANR	6678653	ExpressionStatement	raw = 1	478:6:13502:13509	6678535	0	True				
ANR	6678654	AssignmentExpression	raw = 1		6678535	0		=			
ANR	6678655	Identifier	raw		6678535	0					
ANR	6678656	PrimaryExpression	1		6678535	1					
ANR	6678657	ElseStatement	else		6678535	0					
ANR	6678658	ExpressionStatement	usage ( )	480:6:13528:13535	6678535	0	True				
ANR	6678659	CallExpression	usage ( )		6678535	0					
ANR	6678660	Callee	usage		6678535	0					
ANR	6678661	Identifier	usage		6678535	0					
ANR	6678662	ArgumentList			6678535	1					
ANR	6678663	IfStatement	if ( argn < argc - 1 )		6678535	7					
ANR	6678664	Condition	argn < argc - 1	485:6:13626:13638	6678535	0	True				
ANR	6678665	RelationalExpression	argn < argc - 1		6678535	0		<			
ANR	6678666	Identifier	argn		6678535	0					
ANR	6678667	AdditiveExpression	argc - 1		6678535	1		-			
ANR	6678668	Identifier	argc		6678535	0					
ANR	6678669	PrimaryExpression	1		6678535	1					
ANR	6678670	CompoundStatement		31:21:731:731	6678535	1					
ANR	6678671	ExpressionStatement	"fprintf ( stderr , ""%s: only one input file\\n"" , progname )"	486:4:13647:13701	6678535	0	True				
ANR	6678672	CallExpression	"fprintf ( stderr , ""%s: only one input file\\n"" , progname )"		6678535	0					
ANR	6678673	Callee	fprintf		6678535	0					
ANR	6678674	Identifier	fprintf		6678535	0					
ANR	6678675	ArgumentList	stderr		6678535	1					
ANR	6678676	Argument	stderr		6678535	0					
ANR	6678677	Identifier	stderr		6678535	0					
ANR	6678678	Argument	"""%s: only one input file\\n"""		6678535	1					
ANR	6678679	PrimaryExpression	"""%s: only one input file\\n"""		6678535	0					
ANR	6678680	Argument	progname		6678535	2					
ANR	6678681	Identifier	progname		6678535	0					
ANR	6678682	ExpressionStatement	usage ( )	487:4:13707:13714	6678535	1	True				
ANR	6678683	CallExpression	usage ( )		6678535	0					
ANR	6678684	Callee	usage		6678535	0					
ANR	6678685	Identifier	usage		6678535	0					
ANR	6678686	ArgumentList			6678535	1					
ANR	6678687	IfStatement	if ( argn < argc )		6678535	8					
ANR	6678688	Condition	argn < argc	489:6:13726:13736	6678535	0	True				
ANR	6678689	RelationalExpression	argn < argc		6678535	0		<			
ANR	6678690	Identifier	argn		6678535	0					
ANR	6678691	Identifier	argc		6678535	1					
ANR	6678692	CompoundStatement		35:19:829:829	6678535	1					
ANR	6678693	IfStatement	"if ( ( infile = fopen ( argv [ argn ] , READ_BINARY ) ) == NULL )"		6678535	0					
ANR	6678694	Condition	"( infile = fopen ( argv [ argn ] , READ_BINARY ) ) == NULL"	490:8:13749:13797	6678535	0	True				
ANR	6678695	EqualityExpression	"( infile = fopen ( argv [ argn ] , READ_BINARY ) ) == NULL"		6678535	0		==			
ANR	6678696	AssignmentExpression	"infile = fopen ( argv [ argn ] , READ_BINARY )"		6678535	0		=			
ANR	6678697	Identifier	infile		6678535	0					
ANR	6678698	CallExpression	"fopen ( argv [ argn ] , READ_BINARY )"		6678535	1					
ANR	6678699	Callee	fopen		6678535	0					
ANR	6678700	Identifier	fopen		6678535	0					
ANR	6678701	ArgumentList	argv [ argn ]		6678535	1					
ANR	6678702	Argument	argv [ argn ]		6678535	0					
ANR	6678703	ArrayIndexing	argv [ argn ]		6678535	0					
ANR	6678704	Identifier	argv		6678535	0					
ANR	6678705	Identifier	argn		6678535	1					
ANR	6678706	Argument	READ_BINARY		6678535	1					
ANR	6678707	Identifier	READ_BINARY		6678535	0					
ANR	6678708	Identifier	NULL		6678535	1					
ANR	6678709	CompoundStatement		36:59:890:890	6678535	1					
ANR	6678710	ExpressionStatement	"fprintf ( stderr , ""%s: can't open %s\\n"" , progname , argv [ argn ] )"	491:6:13808:13868	6678535	0	True				
ANR	6678711	CallExpression	"fprintf ( stderr , ""%s: can't open %s\\n"" , progname , argv [ argn ] )"		6678535	0					
ANR	6678712	Callee	fprintf		6678535	0					
ANR	6678713	Identifier	fprintf		6678535	0					
ANR	6678714	ArgumentList	stderr		6678535	1					
ANR	6678715	Argument	stderr		6678535	0					
ANR	6678716	Identifier	stderr		6678535	0					
ANR	6678717	Argument	"""%s: can't open %s\\n"""		6678535	1					
ANR	6678718	PrimaryExpression	"""%s: can't open %s\\n"""		6678535	0					
ANR	6678719	Argument	progname		6678535	2					
ANR	6678720	Identifier	progname		6678535	0					
ANR	6678721	Argument	argv [ argn ]		6678535	3					
ANR	6678722	ArrayIndexing	argv [ argn ]		6678535	0					
ANR	6678723	Identifier	argv		6678535	0					
ANR	6678724	Identifier	argn		6678535	1					
ANR	6678725	ExpressionStatement	exit ( EXIT_FAILURE )	492:6:13876:13894	6678535	1	True				
ANR	6678726	CallExpression	exit ( EXIT_FAILURE )		6678535	0					
ANR	6678727	Callee	exit		6678535	0					
ANR	6678728	Identifier	exit		6678535	0					
ANR	6678729	ArgumentList	EXIT_FAILURE		6678535	1					
ANR	6678730	Argument	EXIT_FAILURE		6678535	0					
ANR	6678731	Identifier	EXIT_FAILURE		6678535	0					
ANR	6678732	ElseStatement	else		6678535	0					
ANR	6678733	CompoundStatement		40:9:1001:1001	6678535	0					
ANR	6678734	ExpressionStatement	"setmode ( fileno ( stdin ) , O_BINARY )"	497:4:14005:14037	6678535	0	True				
ANR	6678735	CallExpression	"setmode ( fileno ( stdin ) , O_BINARY )"		6678535	0					
ANR	6678736	Callee	setmode		6678535	0					
ANR	6678737	Identifier	setmode		6678535	0					
ANR	6678738	ArgumentList	fileno ( stdin )		6678535	1					
ANR	6678739	Argument	fileno ( stdin )		6678535	0					
ANR	6678740	CallExpression	fileno ( stdin )		6678535	0					
ANR	6678741	Callee	fileno		6678535	0					
ANR	6678742	Identifier	fileno		6678535	0					
ANR	6678743	ArgumentList	stdin		6678535	1					
ANR	6678744	Argument	stdin		6678535	0					
ANR	6678745	Identifier	stdin		6678535	0					
ANR	6678746	Argument	O_BINARY		6678535	1					
ANR	6678747	Identifier	O_BINARY		6678535	0					
ANR	6678748	IfStatement	"if ( ( infile = fdopen ( fileno ( stdin ) , READ_BINARY ) ) == NULL )"		6678535	1					
ANR	6678749	Condition	"( infile = fdopen ( fileno ( stdin ) , READ_BINARY ) ) == NULL"	500:8:14111:14163	6678535	0	True				
ANR	6678750	EqualityExpression	"( infile = fdopen ( fileno ( stdin ) , READ_BINARY ) ) == NULL"		6678535	0		==			
ANR	6678751	AssignmentExpression	"infile = fdopen ( fileno ( stdin ) , READ_BINARY )"		6678535	0		=			
ANR	6678752	Identifier	infile		6678535	0					
ANR	6678753	CallExpression	"fdopen ( fileno ( stdin ) , READ_BINARY )"		6678535	1					
ANR	6678754	Callee	fdopen		6678535	0					
ANR	6678755	Identifier	fdopen		6678535	0					
ANR	6678756	ArgumentList	fileno ( stdin )		6678535	1					
ANR	6678757	Argument	fileno ( stdin )		6678535	0					
ANR	6678758	CallExpression	fileno ( stdin )		6678535	0					
ANR	6678759	Callee	fileno		6678535	0					
ANR	6678760	Identifier	fileno		6678535	0					
ANR	6678761	ArgumentList	stdin		6678535	1					
ANR	6678762	Argument	stdin		6678535	0					
ANR	6678763	Identifier	stdin		6678535	0					
ANR	6678764	Argument	READ_BINARY		6678535	1					
ANR	6678765	Identifier	READ_BINARY		6678535	0					
ANR	6678766	Identifier	NULL		6678535	1					
ANR	6678767	CompoundStatement		46:63:1256:1256	6678535	1					
ANR	6678768	ExpressionStatement	"fprintf ( stderr , ""%s: can't open stdin\\n"" , progname )"	501:6:14174:14225	6678535	0	True				
ANR	6678769	CallExpression	"fprintf ( stderr , ""%s: can't open stdin\\n"" , progname )"		6678535	0					
ANR	6678770	Callee	fprintf		6678535	0					
ANR	6678771	Identifier	fprintf		6678535	0					
ANR	6678772	ArgumentList	stderr		6678535	1					
ANR	6678773	Argument	stderr		6678535	0					
ANR	6678774	Identifier	stderr		6678535	0					
ANR	6678775	Argument	"""%s: can't open stdin\\n"""		6678535	1					
ANR	6678776	PrimaryExpression	"""%s: can't open stdin\\n"""		6678535	0					
ANR	6678777	Argument	progname		6678535	2					
ANR	6678778	Identifier	progname		6678535	0					
ANR	6678779	ExpressionStatement	exit ( EXIT_FAILURE )	502:6:14233:14251	6678535	1	True				
ANR	6678780	CallExpression	exit ( EXIT_FAILURE )		6678535	0					
ANR	6678781	Callee	exit		6678535	0					
ANR	6678782	Identifier	exit		6678535	0					
ANR	6678783	ArgumentList	EXIT_FAILURE		6678535	1					
ANR	6678784	Argument	EXIT_FAILURE		6678535	0					
ANR	6678785	Identifier	EXIT_FAILURE		6678535	0					
ANR	6678786	ExpressionStatement	"( void ) scan_JPEG_header ( verbose , raw )"	510:2:14330:14367	6678535	9	True				
ANR	6678787	CastExpression	"( void ) scan_JPEG_header ( verbose , raw )"		6678535	0					
ANR	6678788	CastTarget	void		6678535	0					
ANR	6678789	CallExpression	"scan_JPEG_header ( verbose , raw )"		6678535	1					
ANR	6678790	Callee	scan_JPEG_header		6678535	0					
ANR	6678791	Identifier	scan_JPEG_header		6678535	0					
ANR	6678792	ArgumentList	verbose		6678535	1					
ANR	6678793	Argument	verbose		6678535	0					
ANR	6678794	Identifier	verbose		6678535	0					
ANR	6678795	Argument	raw		6678535	1					
ANR	6678796	Identifier	raw		6678535	0					
ANR	6678797	ExpressionStatement	exit ( EXIT_SUCCESS )	513:2:14390:14408	6678535	10	True				
ANR	6678798	CallExpression	exit ( EXIT_SUCCESS )		6678535	0					
ANR	6678799	Callee	exit		6678535	0					
ANR	6678800	Identifier	exit		6678535	0					
ANR	6678801	ArgumentList	EXIT_SUCCESS		6678535	1					
ANR	6678802	Argument	EXIT_SUCCESS		6678535	0					
ANR	6678803	Identifier	EXIT_SUCCESS		6678535	0					
ANR	6678804	ReturnStatement	return 0 ;	514:2:14412:14420	6678535	11	True				
ANR	6678805	PrimaryExpression	0		6678535	0					
ANR	6678806	ReturnType	int		6678535	1					
ANR	6678807	Identifier	main		6678535	2					
ANR	6678808	ParameterList	"int argc , char * * argv"		6678535	3					
ANR	6678809	Parameter	int argc	454:6:12886:12893	6678535	0	True				
ANR	6678810	ParameterType	int		6678535	0					
ANR	6678811	Identifier	argc		6678535	1					
ANR	6678812	Parameter	char * * argv	454:16:12896:12906	6678535	1	True				
ANR	6678813	ParameterType	char * *		6678535	0					
ANR	6678814	Identifier	argv		6678535	1					
ANR	6678815	CFGEntryNode	ENTRY		6678535		True				
ANR	6678816	CFGExitNode	EXIT		6678535		True				
ANR	6678817	Symbol	stdin		6678535						
ANR	6678818	Symbol	O_BINARY		6678535						
ANR	6678819	Symbol	* argv		6678535						
ANR	6678820	Symbol	infile		6678535						
ANR	6678821	Symbol	fdopen		6678535						
ANR	6678822	Symbol	argv		6678535						
ANR	6678823	Symbol	& argv		6678535						
ANR	6678824	Symbol	* argn		6678535						
ANR	6678825	Symbol	arg		6678535						
ANR	6678826	Symbol	keymatch		6678535						
ANR	6678827	Symbol	argc		6678535						
ANR	6678828	Symbol	fopen		6678535						
ANR	6678829	Symbol	NULL		6678535						
ANR	6678830	Symbol	raw		6678535						
ANR	6678831	Symbol	stderr		6678535						
ANR	6678832	Symbol	verbose		6678535						
ANR	6678833	Symbol	ccommand		6678535						
ANR	6678834	Symbol	argn		6678535						
ANR	6678835	Symbol	EXIT_FAILURE		6678535						
ANR	6678836	Symbol	fileno		6678535						
ANR	6678837	Symbol	* progname		6678535						
ANR	6678838	Symbol	progname		6678535						
ANR	6678839	Symbol	EXIT_SUCCESS		6678535						
ANR	6678840	Symbol	* arg		6678535						
ANR	6678841	Symbol	READ_BINARY		6678535						
