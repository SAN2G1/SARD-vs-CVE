command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	576069	File	data/converged/CVE-2018-16863_ghostpdl/base_gsht.c								
ANR	576070	DeclStmt									
ANR	576071	Decl							void	void ( gs_gstate * )	gx_set_effective_transfer
ANR	576072	Function	gs_setscreen	131:0:4326:4657							
ANR	576073	FunctionDef	"gs_setscreen (gs_gstate * pgs , gs_screen_halftone * phsp)"		576072	0					
ANR	576074	CompoundStatement		136:0:4419:4657	576072	0					
ANR	576075	IdentifierDeclStatement	gs_screen_enum senum ;	137:4:4425:4445	576072	0	True				
ANR	576076	IdentifierDecl	senum		576072	0					
ANR	576077	IdentifierDeclType	gs_screen_enum		576072	0					
ANR	576078	Identifier	senum		576072	1					
ANR	576079	IdentifierDeclStatement	"int code = gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) ) ;"	138:4:4451:4577	576072	1	True				
ANR	576080	IdentifierDecl	"code = gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) )"		576072	0					
ANR	576081	IdentifierDeclType	int		576072	0					
ANR	576082	Identifier	code		576072	1					
ANR	576083	AssignmentExpression	"code = gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) )"		576072	2		=			
ANR	576084	Identifier	code		576072	0					
ANR	576085	CallExpression	"gx_ht_process_screen ( & senum , pgs , phsp , gs_currentaccuratescreens ( pgs -> memory ) )"		576072	1					
ANR	576086	Callee	gx_ht_process_screen		576072	0					
ANR	576087	Identifier	gx_ht_process_screen		576072	0					
ANR	576088	ArgumentList	& senum		576072	1					
ANR	576089	Argument	& senum		576072	0					
ANR	576090	UnaryOperationExpression	& senum		576072	0					
ANR	576091	UnaryOperator	&		576072	0					
ANR	576092	Identifier	senum		576072	1					
ANR	576093	Argument	pgs		576072	1					
ANR	576094	Identifier	pgs		576072	0					
ANR	576095	Argument	phsp		576072	2					
ANR	576096	Identifier	phsp		576072	0					
ANR	576097	Argument	gs_currentaccuratescreens ( pgs -> memory )		576072	3					
ANR	576098	CallExpression	gs_currentaccuratescreens ( pgs -> memory )		576072	0					
ANR	576099	Callee	gs_currentaccuratescreens		576072	0					
ANR	576100	Identifier	gs_currentaccuratescreens		576072	0					
ANR	576101	ArgumentList	pgs -> memory		576072	1					
ANR	576102	Argument	pgs -> memory		576072	0					
ANR	576103	PtrMemberAccess	pgs -> memory		576072	0					
ANR	576104	Identifier	pgs		576072	0					
ANR	576105	Identifier	memory		576072	1					
ANR	576106	IfStatement	if ( code < 0 )		576072	2					
ANR	576107	Condition	code < 0	141:8:4588:4595	576072	0	True				
ANR	576108	RelationalExpression	code < 0		576072	0		<			
ANR	576109	Identifier	code		576072	0					
ANR	576110	PrimaryExpression	0		576072	1					
ANR	576111	ReturnStatement	return code ;	142:8:4606:4617	576072	1	True				
ANR	576112	Identifier	code		576072	0					
ANR	576113	ReturnStatement	return gs_screen_install ( & senum ) ;	143:4:4623:4655	576072	3	True				
ANR	576114	CallExpression	gs_screen_install ( & senum )		576072	0					
ANR	576115	Callee	gs_screen_install		576072	0					
ANR	576116	Identifier	gs_screen_install		576072	0					
ANR	576117	ArgumentList	& senum		576072	1					
ANR	576118	Argument	& senum		576072	0					
ANR	576119	UnaryOperationExpression	& senum		576072	0					
ANR	576120	UnaryOperator	&		576072	0					
ANR	576121	Identifier	senum		576072	1					
ANR	576122	ReturnType	RELOC_PTRS_END int		576072	1					
ANR	576123	Identifier	gs_setscreen		576072	2					
ANR	576124	ParameterList	"gs_gstate * pgs , gs_screen_halftone * phsp"		576072	3					
ANR	576125	Parameter	gs_gstate * pgs	135:13:4375:4389	576072	0	True				
ANR	576126	ParameterType	gs_gstate *		576072	0					
ANR	576127	Identifier	pgs		576072	1					
ANR	576128	Parameter	gs_screen_halftone * phsp	135:30:4392:4416	576072	1	True				
ANR	576129	ParameterType	gs_screen_halftone *		576072	0					
ANR	576130	Identifier	phsp		576072	1					
ANR	576131	CFGEntryNode	ENTRY		576072		True				
ANR	576132	CFGExitNode	EXIT		576072		True				
ANR	576133	Symbol	senum		576072						
ANR	576134	Symbol	phsp		576072						
ANR	576135	Symbol	gx_ht_process_screen		576072						
ANR	576136	Symbol	code		576072						
ANR	576137	Symbol	gs_currentaccuratescreens		576072						
ANR	576138	Symbol	* pgs		576072						
ANR	576139	Symbol	& senum		576072						
ANR	576140	Symbol	gs_screen_install		576072						
ANR	576141	Symbol	pgs		576072						
ANR	576142	Symbol	pgs -> memory		576072						
ANR	576143	Function	gs_currentscreen	147:0:4680:5090							
ANR	576144	FunctionDef	"gs_currentscreen (const gs_gstate * pgs , gs_screen_halftone * phsp)"		576143	0					
ANR	576145	CompoundStatement		149:0:4751:5090	576143	0					
ANR	576146	SwitchStatement	switch ( pgs -> halftone -> type )		576143	0					
ANR	576147	Condition	pgs -> halftone -> type	150:12:4765:4783	576143	0	True				
ANR	576148	PtrMemberAccess	pgs -> halftone -> type		576143	0					
ANR	576149	PtrMemberAccess	pgs -> halftone		576143	0					
ANR	576150	Identifier	pgs		576143	0					
ANR	576151	Identifier	halftone		576143	1					
ANR	576152	Identifier	type		576143	1					
ANR	576153	CompoundStatement		2:33:34:34	576143	1					
ANR	576154	Label	case ht_type_screen :	151:8:4796:4815	576143	0	True				
ANR	576155	Identifier	ht_type_screen		576143	0					
ANR	576156	ExpressionStatement	* phsp = pgs -> halftone -> params . screen	152:12:4829:4865	576143	1	True				
ANR	576157	AssignmentExpression	* phsp = pgs -> halftone -> params . screen		576143	0		=			
ANR	576158	UnaryOperationExpression	* phsp		576143	0					
ANR	576159	UnaryOperator	*		576143	0					
ANR	576160	Identifier	phsp		576143	1					
ANR	576161	MemberAccess	pgs -> halftone -> params . screen		576143	1					
ANR	576162	PtrMemberAccess	pgs -> halftone -> params		576143	0					
ANR	576163	PtrMemberAccess	pgs -> halftone		576143	0					
ANR	576164	Identifier	pgs		576143	0					
ANR	576165	Identifier	halftone		576143	1					
ANR	576166	Identifier	params		576143	1					
ANR	576167	Identifier	screen		576143	1					
ANR	576168	ReturnStatement	return 0 ;	153:12:4879:4887	576143	2	True				
ANR	576169	PrimaryExpression	0		576143	0					
ANR	576170	Label	case ht_type_colorscreen :	154:8:4897:4921	576143	3	True				
ANR	576171	Identifier	ht_type_colorscreen		576143	0					
ANR	576172	ExpressionStatement	* phsp = pgs -> halftone -> params . colorscreen . screens . colored . gray	155:12:4935:4997	576143	4	True				
ANR	576173	AssignmentExpression	* phsp = pgs -> halftone -> params . colorscreen . screens . colored . gray		576143	0		=			
ANR	576174	UnaryOperationExpression	* phsp		576143	0					
ANR	576175	UnaryOperator	*		576143	0					
ANR	576176	Identifier	phsp		576143	1					
ANR	576177	MemberAccess	pgs -> halftone -> params . colorscreen . screens . colored . gray		576143	1					
ANR	576178	MemberAccess	pgs -> halftone -> params . colorscreen . screens . colored		576143	0					
ANR	576179	MemberAccess	pgs -> halftone -> params . colorscreen . screens		576143	0					
ANR	576180	MemberAccess	pgs -> halftone -> params . colorscreen		576143	0					
ANR	576181	PtrMemberAccess	pgs -> halftone -> params		576143	0					
ANR	576182	PtrMemberAccess	pgs -> halftone		576143	0					
ANR	576183	Identifier	pgs		576143	0					
ANR	576184	Identifier	halftone		576143	1					
ANR	576185	Identifier	params		576143	1					
ANR	576186	Identifier	colorscreen		576143	1					
ANR	576187	Identifier	screens		576143	1					
ANR	576188	Identifier	colored		576143	1					
ANR	576189	Identifier	gray		576143	1					
ANR	576190	ReturnStatement	return 0 ;	156:12:5011:5019	576143	5	True				
ANR	576191	PrimaryExpression	0		576143	0					
ANR	576192	Label	default :	157:8:5029:5036	576143	6	True				
ANR	576193	Identifier	default		576143	0					
ANR	576194	ExpressionStatement	return_error ( gs_error_undefined )	158:12:5050:5082	576143	7	True				
ANR	576195	CallExpression	return_error ( gs_error_undefined )		576143	0					
ANR	576196	Callee	return_error		576143	0					
ANR	576197	Identifier	return_error		576143	0					
ANR	576198	ArgumentList	gs_error_undefined		576143	1					
ANR	576199	Argument	gs_error_undefined		576143	0					
ANR	576200	Identifier	gs_error_undefined		576143	0					
ANR	576201	ReturnType	int		576143	1					
ANR	576202	Identifier	gs_currentscreen		576143	2					
ANR	576203	ParameterList	"const gs_gstate * pgs , gs_screen_halftone * phsp"		576143	3					
ANR	576204	Parameter	const gs_gstate * pgs	148:17:4701:4721	576143	0	True				
ANR	576205	ParameterType	const gs_gstate *		576143	0					
ANR	576206	Identifier	pgs		576143	1					
ANR	576207	Parameter	gs_screen_halftone * phsp	148:40:4724:4748	576143	1	True				
ANR	576208	ParameterType	gs_screen_halftone *		576143	0					
ANR	576209	Identifier	phsp		576143	1					
ANR	576210	CFGEntryNode	ENTRY		576143		True				
ANR	576211	CFGExitNode	EXIT		576143		True				
ANR	576212	Symbol	phsp		576143						
ANR	576213	Symbol	pgs -> halftone -> type		576143						
ANR	576214	Symbol	* pgs		576143						
ANR	576215	Symbol	gs_error_undefined		576143						
ANR	576216	Symbol	* phsp		576143						
ANR	576217	Symbol	pgs -> halftone -> params		576143						
ANR	576218	Symbol	pgs -> halftone -> params . colorscreen . screens . colored . gray		576143						
ANR	576219	Symbol	* * pgs		576143						
ANR	576220	Symbol	pgs -> halftone -> params . screen		576143						
ANR	576221	Symbol	pgs -> halftone -> params . colorscreen . screens		576143						
ANR	576222	Symbol	pgs -> halftone -> params . colorscreen . screens . colored		576143						
ANR	576223	Symbol	pgs -> halftone -> params . colorscreen		576143						
ANR	576224	Symbol	pgs -> halftone		576143						
ANR	576225	Symbol	pgs		576143						
ANR	576226	Symbol	* pgs -> halftone		576143						
ANR	576227	Function	gs_currentscreenlevels	163:0:5120:5434							
ANR	576228	FunctionDef	gs_currentscreenlevels (const gs_gstate * pgs)		576227	0					
ANR	576229	CompoundStatement		165:0:5170:5434	576227	0					
ANR	576230	IdentifierDeclStatement	int gi = 0 ;	166:4:5176:5186	576227	0	True				
ANR	576231	IdentifierDecl	gi = 0		576227	0					
ANR	576232	IdentifierDeclType	int		576227	0					
ANR	576233	Identifier	gi		576227	1					
ANR	576234	AssignmentExpression	gi = 0		576227	2		=			
ANR	576235	Identifier	gi		576227	0					
ANR	576236	PrimaryExpression	0		576227	1					
ANR	576237	IfStatement	if ( pgs -> device != 0 )		576227	1					
ANR	576238	Condition	pgs -> device != 0	168:8:5197:5212	576227	0	True				
ANR	576239	EqualityExpression	pgs -> device != 0		576227	0		!=			
ANR	576240	PtrMemberAccess	pgs -> device		576227	0					
ANR	576241	Identifier	pgs		576227	0					
ANR	576242	Identifier	device		576227	1					
ANR	576243	PrimaryExpression	0		576227	1					
ANR	576244	ExpressionStatement	gi = pgs -> device -> color_info . gray_index	169:8:5223:5262	576227	1	True				
ANR	576245	AssignmentExpression	gi = pgs -> device -> color_info . gray_index		576227	0		=			
ANR	576246	Identifier	gi		576227	0					
ANR	576247	MemberAccess	pgs -> device -> color_info . gray_index		576227	1					
ANR	576248	PtrMemberAccess	pgs -> device -> color_info		576227	0					
ANR	576249	PtrMemberAccess	pgs -> device		576227	0					
ANR	576250	Identifier	pgs		576227	0					
ANR	576251	Identifier	device		576227	1					
ANR	576252	Identifier	color_info		576227	1					
ANR	576253	Identifier	gray_index		576227	1					
ANR	576254	IfStatement	if ( gi != GX_CINFO_COMP_NO_INDEX )		576227	2					
ANR	576255	Condition	gi != GX_CINFO_COMP_NO_INDEX	170:8:5272:5299	576227	0	True				
ANR	576256	EqualityExpression	gi != GX_CINFO_COMP_NO_INDEX		576227	0		!=			
ANR	576257	Identifier	gi		576227	0					
ANR	576258	Identifier	GX_CINFO_COMP_NO_INDEX		576227	1					
ANR	576259	ReturnStatement	return pgs -> dev_ht -> components [ gi ] . corder . num_levels ;	171:8:5310:5362	576227	1	True				
ANR	576260	MemberAccess	pgs -> dev_ht -> components [ gi ] . corder . num_levels		576227	0					
ANR	576261	MemberAccess	pgs -> dev_ht -> components [ gi ] . corder		576227	0					
ANR	576262	ArrayIndexing	pgs -> dev_ht -> components [ gi ]		576227	0					
ANR	576263	PtrMemberAccess	pgs -> dev_ht -> components		576227	0					
ANR	576264	PtrMemberAccess	pgs -> dev_ht		576227	0					
ANR	576265	Identifier	pgs		576227	0					
ANR	576266	Identifier	dev_ht		576227	1					
ANR	576267	Identifier	components		576227	1					
ANR	576268	Identifier	gi		576227	1					
ANR	576269	Identifier	corder		576227	1					
ANR	576270	Identifier	num_levels		576227	1					
ANR	576271	ElseStatement	else		576227	0					
ANR	576272	ReturnStatement	return pgs -> dev_ht -> components [ 0 ] . corder . num_levels ;	173:8:5381:5432	576227	0	True				
ANR	576273	MemberAccess	pgs -> dev_ht -> components [ 0 ] . corder . num_levels		576227	0					
ANR	576274	MemberAccess	pgs -> dev_ht -> components [ 0 ] . corder		576227	0					
ANR	576275	ArrayIndexing	pgs -> dev_ht -> components [ 0 ]		576227	0					
ANR	576276	PtrMemberAccess	pgs -> dev_ht -> components		576227	0					
ANR	576277	PtrMemberAccess	pgs -> dev_ht		576227	0					
ANR	576278	Identifier	pgs		576227	0					
ANR	576279	Identifier	dev_ht		576227	1					
ANR	576280	Identifier	components		576227	1					
ANR	576281	PrimaryExpression	0		576227	1					
ANR	576282	Identifier	corder		576227	1					
ANR	576283	Identifier	num_levels		576227	1					
ANR	576284	ReturnType	int		576227	1					
ANR	576285	Identifier	gs_currentscreenlevels		576227	2					
ANR	576286	ParameterList	const gs_gstate * pgs		576227	3					
ANR	576287	Parameter	const gs_gstate * pgs	164:23:5147:5167	576227	0	True				
ANR	576288	ParameterType	const gs_gstate *		576227	0					
ANR	576289	Identifier	pgs		576227	1					
ANR	576290	CFGEntryNode	ENTRY		576227		True				
ANR	576291	CFGExitNode	EXIT		576227		True				
ANR	576292	Symbol	gi		576227						
ANR	576293	Symbol	* pgs		576227						
ANR	576294	Symbol	pgs -> device -> color_info		576227						
ANR	576295	Symbol	* pgs -> dev_ht -> components		576227						
ANR	576296	Symbol	* gi		576227						
ANR	576297	Symbol	pgs -> dev_ht -> components [ 0 ] . corder . num_levels		576227						
ANR	576298	Symbol	pgs -> dev_ht -> components [ gi ] . corder		576227						
ANR	576299	Symbol	pgs -> dev_ht -> components [ 0 ] . corder		576227						
ANR	576300	Symbol	pgs -> device -> color_info . gray_index		576227						
ANR	576301	Symbol	* * pgs		576227						
ANR	576302	Symbol	GX_CINFO_COMP_NO_INDEX		576227						
ANR	576303	Symbol	pgs -> device		576227						
ANR	576304	Symbol	pgs -> dev_ht		576227						
ANR	576305	Symbol	pgs -> dev_ht -> components		576227						
ANR	576306	Symbol	* pgs -> device		576227						
ANR	576307	Symbol	* * pgs -> dev_ht		576227						
ANR	576308	Symbol	* pgs -> dev_ht		576227						
ANR	576309	Symbol	* * * pgs		576227						
ANR	576310	Symbol	pgs -> dev_ht -> components [ gi ] . corder . num_levels		576227						
ANR	576311	Symbol	pgs		576227						
ANR	576312	Function	gx_gstate_setscreenphase	177:0:5459:5974							
ANR	576313	FunctionDef	"gx_gstate_setscreenphase (gs_gstate * pgs , int x , int y , gs_color_select_t select)"		576312	0					
ANR	576314	CompoundStatement		180:0:5570:5974	576312	0					
ANR	576315	IfStatement	if ( select == gs_color_select_all )		576312	0					
ANR	576316	Condition	select == gs_color_select_all	181:8:5580:5608	576312	0	True				
ANR	576317	EqualityExpression	select == gs_color_select_all		576312	0		==			
ANR	576318	Identifier	select		576312	0					
ANR	576319	Identifier	gs_color_select_all		576312	1					
ANR	576320	CompoundStatement		3:8:50:55	576312	1					
ANR	576321	IdentifierDeclStatement	int i ;	182:8:5621:5626	576312	0	True				
ANR	576322	IdentifierDecl	i		576312	0					
ANR	576323	IdentifierDeclType	int		576312	0					
ANR	576324	Identifier	i		576312	1					
ANR	576325	ForStatement	for ( i = 0 ; i < gs_color_select_count ; ++ i )		576312	1					
ANR	576326	ForInit	i = 0 ;	184:13:5642:5647	576312	0	True				
ANR	576327	AssignmentExpression	i = 0		576312	0		=			
ANR	576328	Identifier	i		576312	0					
ANR	576329	PrimaryExpression	0		576312	1					
ANR	576330	Condition	i < gs_color_select_count	184:20:5649:5673	576312	1	True				
ANR	576331	RelationalExpression	i < gs_color_select_count		576312	0		<			
ANR	576332	Identifier	i		576312	0					
ANR	576333	Identifier	gs_color_select_count		576312	1					
ANR	576334	UnaryExpression	++ i	184:47:5676:5678	576312	2	True				
ANR	576335	IncDec	++		576312	0					
ANR	576336	Identifier	i		576312	1					
ANR	576337	ExpressionStatement	"gx_gstate_setscreenphase ( pgs , x , y , ( gs_color_select_t ) i )"	185:12:5693:5751	576312	3	True				
ANR	576338	CallExpression	"gx_gstate_setscreenphase ( pgs , x , y , ( gs_color_select_t ) i )"		576312	0					
ANR	576339	Callee	gx_gstate_setscreenphase		576312	0					
ANR	576340	Identifier	gx_gstate_setscreenphase		576312	0					
ANR	576341	ArgumentList	pgs		576312	1					
ANR	576342	Argument	pgs		576312	0					
ANR	576343	Identifier	pgs		576312	0					
ANR	576344	Argument	x		576312	1					
ANR	576345	Identifier	x		576312	0					
ANR	576346	Argument	y		576312	2					
ANR	576347	Identifier	y		576312	0					
ANR	576348	Argument	( gs_color_select_t ) i		576312	3					
ANR	576349	CastExpression	( gs_color_select_t ) i		576312	0					
ANR	576350	CastTarget	gs_color_select_t		576312	0					
ANR	576351	Identifier	i		576312	1					
ANR	576352	ReturnStatement	return 0 ;	186:8:5761:5769	576312	2	True				
ANR	576353	PrimaryExpression	0		576312	0					
ANR	576354	ElseStatement	else		576312	0					
ANR	576355	IfStatement	if ( ( int ) select < 0 || ( int ) select >= gs_color_select_count )		576312	0					
ANR	576356	Condition	( int ) select < 0 || ( int ) select >= gs_color_select_count	187:15:5786:5840	576312	0	True				
ANR	576357	OrExpression	( int ) select < 0 || ( int ) select >= gs_color_select_count		576312	0		||			
ANR	576358	RelationalExpression	( int ) select < 0		576312	0		<			
ANR	576359	CastExpression	( int ) select		576312	0					
ANR	576360	CastTarget	int		576312	0					
ANR	576361	Identifier	select		576312	1					
ANR	576362	PrimaryExpression	0		576312	1					
ANR	576363	RelationalExpression	( int ) select >= gs_color_select_count		576312	1		>=			
ANR	576364	CastExpression	( int ) select		576312	0					
ANR	576365	CastTarget	int		576312	0					
ANR	576366	Identifier	select		576312	1					
ANR	576367	Identifier	gs_color_select_count		576312	1					
ANR	576368	ExpressionStatement	return_error ( gs_error_rangecheck )	188:8:5851:5884	576312	1	True				
ANR	576369	CallExpression	return_error ( gs_error_rangecheck )		576312	0					
ANR	576370	Callee	return_error		576312	0					
ANR	576371	Identifier	return_error		576312	0					
ANR	576372	ArgumentList	gs_error_rangecheck		576312	1					
ANR	576373	Argument	gs_error_rangecheck		576312	0					
ANR	576374	Identifier	gs_error_rangecheck		576312	0					
ANR	576375	ExpressionStatement	pgs -> screen_phase [ select ] . x = x	189:4:5890:5921	576312	1	True				
ANR	576376	AssignmentExpression	pgs -> screen_phase [ select ] . x = x		576312	0		=			
ANR	576377	MemberAccess	pgs -> screen_phase [ select ] . x		576312	0					
ANR	576378	ArrayIndexing	pgs -> screen_phase [ select ]		576312	0					
ANR	576379	PtrMemberAccess	pgs -> screen_phase		576312	0					
ANR	576380	Identifier	pgs		576312	0					
ANR	576381	Identifier	screen_phase		576312	1					
ANR	576382	Identifier	select		576312	1					
ANR	576383	Identifier	x		576312	1					
ANR	576384	Identifier	x		576312	1					
ANR	576385	ExpressionStatement	pgs -> screen_phase [ select ] . y = y	190:4:5927:5958	576312	2	True				
ANR	576386	AssignmentExpression	pgs -> screen_phase [ select ] . y = y		576312	0		=			
ANR	576387	MemberAccess	pgs -> screen_phase [ select ] . y		576312	0					
ANR	576388	ArrayIndexing	pgs -> screen_phase [ select ]		576312	0					
ANR	576389	PtrMemberAccess	pgs -> screen_phase		576312	0					
ANR	576390	Identifier	pgs		576312	0					
ANR	576391	Identifier	screen_phase		576312	1					
ANR	576392	Identifier	select		576312	1					
ANR	576393	Identifier	y		576312	1					
ANR	576394	Identifier	y		576312	1					
ANR	576395	ReturnStatement	return 0 ;	191:4:5964:5972	576312	3	True				
ANR	576396	PrimaryExpression	0		576312	0					
ANR	576397	ReturnType	int		576312	1					
ANR	576398	Identifier	gx_gstate_setscreenphase		576312	2					
ANR	576399	ParameterList	"gs_gstate * pgs , int x , int y , gs_color_select_t select"		576312	3					
ANR	576400	Parameter	gs_gstate * pgs	178:25:5488:5502	576312	0	True				
ANR	576401	ParameterType	gs_gstate *		576312	0					
ANR	576402	Identifier	pgs		576312	1					
ANR	576403	Parameter	int x	178:42:5505:5509	576312	1	True				
ANR	576404	ParameterType	int		576312	0					
ANR	576405	Identifier	x		576312	1					
ANR	576406	Parameter	int y	178:49:5512:5516	576312	2	True				
ANR	576407	ParameterType	int		576312	0					
ANR	576408	Identifier	y		576312	1					
ANR	576409	Parameter	gs_color_select_t select	179:25:5544:5567	576312	3	True				
ANR	576410	ParameterType	gs_color_select_t		576312	0					
ANR	576411	Identifier	select		576312	1					
ANR	576412	CFGEntryNode	ENTRY		576312		True				
ANR	576413	CFGExitNode	EXIT		576312		True				
ANR	576414	Symbol	select		576312						
ANR	576415	Symbol	gs_error_rangecheck		576312						
ANR	576416	Symbol	* select		576312						
ANR	576417	Symbol	* pgs		576312						
ANR	576418	Symbol	i		576312						
ANR	576419	Symbol	* pgs -> screen_phase		576312						
ANR	576420	Symbol	pgs -> screen_phase		576312						
ANR	576421	Symbol	* * pgs		576312						
ANR	576422	Symbol	gs_color_select_count		576312						
ANR	576423	Symbol	x		576312						
ANR	576424	Symbol	y		576312						
ANR	576425	Symbol	gs_color_select_all		576312						
ANR	576426	Symbol	pgs		576312						
ANR	576427	Symbol	pgs -> screen_phase [ select ] . x		576312						
ANR	576428	Symbol	pgs -> screen_phase [ select ] . y		576312						
ANR	576429	Function	gs_setscreenphase	193:0:5976:6516							
ANR	576430	FunctionDef	"gs_setscreenphase (gs_gstate * pgs , int x , int y , gs_color_select_t select)"		576429	0					
ANR	576431	CompoundStatement		195:0:6055:6516	576429	0					
ANR	576432	IdentifierDeclStatement	"int code = gx_gstate_setscreenphase ( pgs , x , y , select ) ;"	196:4:6061:6155	576429	0	True				
ANR	576433	IdentifierDecl	"code = gx_gstate_setscreenphase ( pgs , x , y , select )"		576429	0					
ANR	576434	IdentifierDeclType	int		576429	0					
ANR	576435	Identifier	code		576429	1					
ANR	576436	AssignmentExpression	"code = gx_gstate_setscreenphase ( pgs , x , y , select )"		576429	2		=			
ANR	576437	Identifier	code		576429	0					
ANR	576438	CallExpression	"gx_gstate_setscreenphase ( pgs , x , y , select )"		576429	1					
ANR	576439	Callee	gx_gstate_setscreenphase		576429	0					
ANR	576440	Identifier	gx_gstate_setscreenphase		576429	0					
ANR	576441	ArgumentList	pgs		576429	1					
ANR	576442	Argument	pgs		576429	0					
ANR	576443	Identifier	pgs		576429	0					
ANR	576444	Argument	x		576429	1					
ANR	576445	Identifier	x		576429	0					
ANR	576446	Argument	y		576429	2					
ANR	576447	Identifier	y		576429	0					
ANR	576448	Argument	select		576429	3					
ANR	576449	Identifier	select		576429	0					
ANR	576450	IfStatement	if ( code >= 0 && ( select == gs_color_select_texture || select == gs_color_select_all ) )		576429	1					
ANR	576451	Condition	code >= 0 && ( select == gs_color_select_texture || select == gs_color_select_all )	204:8:6352:6454	576429	0	True				
ANR	576452	AndExpression	code >= 0 && ( select == gs_color_select_texture || select == gs_color_select_all )		576429	0		&&			
ANR	576453	RelationalExpression	code >= 0		576429	0		>=			
ANR	576454	Identifier	code		576429	0					
ANR	576455	PrimaryExpression	0		576429	1					
ANR	576456	OrExpression	select == gs_color_select_texture || select == gs_color_select_all		576429	1		||			
ANR	576457	EqualityExpression	select == gs_color_select_texture		576429	0		==			
ANR	576458	Identifier	select		576429	0					
ANR	576459	Identifier	gs_color_select_texture		576429	1					
ANR	576460	EqualityExpression	select == gs_color_select_all		576429	1		==			
ANR	576461	Identifier	select		576429	0					
ANR	576462	Identifier	gs_color_select_all		576429	1					
ANR	576463	ExpressionStatement	gx_unset_dev_color ( pgs )	207:8:6474:6497	576429	1	True				
ANR	576464	CallExpression	gx_unset_dev_color ( pgs )		576429	0					
ANR	576465	Callee	gx_unset_dev_color		576429	0					
ANR	576466	Identifier	gx_unset_dev_color		576429	0					
ANR	576467	ArgumentList	pgs		576429	1					
ANR	576468	Argument	pgs		576429	0					
ANR	576469	Identifier	pgs		576429	0					
ANR	576470	ReturnStatement	return code ;	208:4:6503:6514	576429	2	True				
ANR	576471	Identifier	code		576429	0					
ANR	576472	ReturnType	int		576429	1					
ANR	576473	Identifier	gs_setscreenphase		576429	2					
ANR	576474	ParameterList	"gs_gstate * pgs , int x , int y , gs_color_select_t select"		576429	3					
ANR	576475	Parameter	gs_gstate * pgs	194:18:5998:6012	576429	0	True				
ANR	576476	ParameterType	gs_gstate *		576429	0					
ANR	576477	Identifier	pgs		576429	1					
ANR	576478	Parameter	int x	194:35:6015:6019	576429	1	True				
ANR	576479	ParameterType	int		576429	0					
ANR	576480	Identifier	x		576429	1					
ANR	576481	Parameter	int y	194:42:6022:6026	576429	2	True				
ANR	576482	ParameterType	int		576429	0					
ANR	576483	Identifier	y		576429	1					
ANR	576484	Parameter	gs_color_select_t select	194:49:6029:6052	576429	3	True				
ANR	576485	ParameterType	gs_color_select_t		576429	0					
ANR	576486	Identifier	select		576429	1					
ANR	576487	CFGEntryNode	ENTRY		576429		True				
ANR	576488	CFGExitNode	EXIT		576429		True				
ANR	576489	Symbol	gx_gstate_setscreenphase		576429						
ANR	576490	Symbol	select		576429						
ANR	576491	Symbol	code		576429						
ANR	576492	Symbol	x		576429						
ANR	576493	Symbol	y		576429						
ANR	576494	Symbol	gs_color_select_all		576429						
ANR	576495	Symbol	pgs		576429						
ANR	576496	Symbol	gs_color_select_texture		576429						
ANR	576497	Function	gs_currentscreenphase_pgs	211:0:6519:6808							
ANR	576498	FunctionDef	"gs_currentscreenphase_pgs (const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select)"		576497	0					
ANR	576499	CompoundStatement		214:0:6643:6808	576497	0					
ANR	576500	IfStatement	if ( ( int ) select < 0 || ( int ) select >= gs_color_select_count )		576497	0					
ANR	576501	Condition	( int ) select < 0 || ( int ) select >= gs_color_select_count	215:8:6653:6707	576497	0	True				
ANR	576502	OrExpression	( int ) select < 0 || ( int ) select >= gs_color_select_count		576497	0		||			
ANR	576503	RelationalExpression	( int ) select < 0		576497	0		<			
ANR	576504	CastExpression	( int ) select		576497	0					
ANR	576505	CastTarget	int		576497	0					
ANR	576506	Identifier	select		576497	1					
ANR	576507	PrimaryExpression	0		576497	1					
ANR	576508	RelationalExpression	( int ) select >= gs_color_select_count		576497	1		>=			
ANR	576509	CastExpression	( int ) select		576497	0					
ANR	576510	CastTarget	int		576497	0					
ANR	576511	Identifier	select		576497	1					
ANR	576512	Identifier	gs_color_select_count		576497	1					
ANR	576513	ExpressionStatement	return_error ( gs_error_rangecheck )	216:8:6718:6751	576497	1	True				
ANR	576514	CallExpression	return_error ( gs_error_rangecheck )		576497	0					
ANR	576515	Callee	return_error		576497	0					
ANR	576516	Identifier	return_error		576497	0					
ANR	576517	ArgumentList	gs_error_rangecheck		576497	1					
ANR	576518	Argument	gs_error_rangecheck		576497	0					
ANR	576519	Identifier	gs_error_rangecheck		576497	0					
ANR	576520	ExpressionStatement	* pphase = pgs -> screen_phase [ select ]	217:4:6757:6792	576497	1	True				
ANR	576521	AssignmentExpression	* pphase = pgs -> screen_phase [ select ]		576497	0		=			
ANR	576522	UnaryOperationExpression	* pphase		576497	0					
ANR	576523	UnaryOperator	*		576497	0					
ANR	576524	Identifier	pphase		576497	1					
ANR	576525	ArrayIndexing	pgs -> screen_phase [ select ]		576497	1					
ANR	576526	PtrMemberAccess	pgs -> screen_phase		576497	0					
ANR	576527	Identifier	pgs		576497	0					
ANR	576528	Identifier	screen_phase		576497	1					
ANR	576529	Identifier	select		576497	1					
ANR	576530	ReturnStatement	return 0 ;	218:4:6798:6806	576497	2	True				
ANR	576531	PrimaryExpression	0		576497	0					
ANR	576532	ReturnType	int		576497	1					
ANR	576533	Identifier	gs_currentscreenphase_pgs		576497	2					
ANR	576534	ParameterList	"const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select"		576497	3					
ANR	576535	Parameter	const gs_gstate * pgs	212:26:6549:6569	576497	0	True				
ANR	576536	ParameterType	const gs_gstate *		576497	0					
ANR	576537	Identifier	pgs		576497	1					
ANR	576538	Parameter	gs_int_point * pphase	212:49:6572:6592	576497	1	True				
ANR	576539	ParameterType	gs_int_point *		576497	0					
ANR	576540	Identifier	pphase		576497	1					
ANR	576541	Parameter	gs_color_select_t select	213:22:6617:6640	576497	2	True				
ANR	576542	ParameterType	gs_color_select_t		576497	0					
ANR	576543	Identifier	select		576497	1					
ANR	576544	CFGEntryNode	ENTRY		576497		True				
ANR	576545	CFGExitNode	EXIT		576497		True				
ANR	576546	Symbol	* * pgs		576497						
ANR	576547	Symbol	pphase		576497						
ANR	576548	Symbol	select		576497						
ANR	576549	Symbol	gs_color_select_count		576497						
ANR	576550	Symbol	* pphase		576497						
ANR	576551	Symbol	gs_error_rangecheck		576497						
ANR	576552	Symbol	* select		576497						
ANR	576553	Symbol	* pgs		576497						
ANR	576554	Symbol	* pgs -> screen_phase		576497						
ANR	576555	Symbol	pgs		576497						
ANR	576556	Symbol	pgs -> screen_phase		576497						
ANR	576557	Function	gs_currentscreenphase	222:0:6837:7037							
ANR	576558	FunctionDef	"gs_currentscreenphase (const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select)"		576557	0					
ANR	576559	CompoundStatement		225:0:6957:7037	576557	0					
ANR	576560	ReturnStatement	"return gs_currentscreenphase_pgs ( ( const gs_gstate * ) pgs , pphase , select ) ;"	226:4:6963:7035	576557	0	True				
ANR	576561	CallExpression	"gs_currentscreenphase_pgs ( ( const gs_gstate * ) pgs , pphase , select )"		576557	0					
ANR	576562	Callee	gs_currentscreenphase_pgs		576557	0					
ANR	576563	Identifier	gs_currentscreenphase_pgs		576557	0					
ANR	576564	ArgumentList	( const gs_gstate * ) pgs		576557	1					
ANR	576565	Argument	( const gs_gstate * ) pgs		576557	0					
ANR	576566	CastExpression	( const gs_gstate * ) pgs		576557	0					
ANR	576567	CastTarget	const gs_gstate *		576557	0					
ANR	576568	Identifier	pgs		576557	1					
ANR	576569	Argument	pphase		576557	1					
ANR	576570	Identifier	pphase		576557	0					
ANR	576571	Argument	select		576557	2					
ANR	576572	Identifier	select		576557	0					
ANR	576573	ReturnType	int		576557	1					
ANR	576574	Identifier	gs_currentscreenphase		576557	2					
ANR	576575	ParameterList	"const gs_gstate * pgs , gs_int_point * pphase , gs_color_select_t select"		576557	3					
ANR	576576	Parameter	const gs_gstate * pgs	223:22:6863:6883	576557	0	True				
ANR	576577	ParameterType	const gs_gstate *		576557	0					
ANR	576578	Identifier	pgs		576557	1					
ANR	576579	Parameter	gs_int_point * pphase	223:45:6886:6906	576557	1	True				
ANR	576580	ParameterType	gs_int_point *		576557	0					
ANR	576581	Identifier	pphase		576557	1					
ANR	576582	Parameter	gs_color_select_t select	224:22:6931:6954	576557	2	True				
ANR	576583	ParameterType	gs_color_select_t		576557	0					
ANR	576584	Identifier	select		576557	1					
ANR	576585	CFGEntryNode	ENTRY		576557		True				
ANR	576586	CFGExitNode	EXIT		576557		True				
ANR	576587	Symbol	pphase		576557						
ANR	576588	Symbol	select		576557						
ANR	576589	Symbol	gs_currentscreenphase_pgs		576557						
ANR	576590	Symbol	pgs		576557						
ANR	576591	Function	gs_currenthalftone	230:0:7062:7164							
ANR	576592	FunctionDef	"gs_currenthalftone (gs_gstate * pgs , gs_halftone * pht)"		576591	0					
ANR	576593	CompoundStatement		232:0:7121:7164	576591	0					
ANR	576594	ExpressionStatement	* pht = * pgs -> halftone	233:4:7127:7148	576591	0	True				
ANR	576595	AssignmentExpression	* pht = * pgs -> halftone		576591	0		=			
ANR	576596	UnaryOperationExpression	* pht		576591	0					
ANR	576597	UnaryOperator	*		576591	0					
ANR	576598	Identifier	pht		576591	1					
ANR	576599	UnaryOperationExpression	* pgs -> halftone		576591	1					
ANR	576600	UnaryOperator	*		576591	0					
ANR	576601	PtrMemberAccess	pgs -> halftone		576591	1					
ANR	576602	Identifier	pgs		576591	0					
ANR	576603	Identifier	halftone		576591	1					
ANR	576604	ReturnStatement	return 0 ;	234:4:7154:7162	576591	1	True				
ANR	576605	PrimaryExpression	0		576591	0					
ANR	576606	ReturnType	int		576591	1					
ANR	576607	Identifier	gs_currenthalftone		576591	2					
ANR	576608	ParameterList	"gs_gstate * pgs , gs_halftone * pht"		576591	3					
ANR	576609	Parameter	gs_gstate * pgs	231:19:7085:7099	576591	0	True				
ANR	576610	ParameterType	gs_gstate *		576591	0					
ANR	576611	Identifier	pgs		576591	1					
ANR	576612	Parameter	gs_halftone * pht	231:36:7102:7118	576591	1	True				
ANR	576613	ParameterType	gs_halftone *		576591	0					
ANR	576614	Identifier	pht		576591	1					
ANR	576615	CFGEntryNode	ENTRY		576591		True				
ANR	576616	CFGExitNode	EXIT		576591		True				
ANR	576617	Symbol	* * pgs		576591						
ANR	576618	Symbol	* pht		576591						
ANR	576619	Symbol	* pgs		576591						
ANR	576620	Symbol	pgs -> halftone		576591						
ANR	576621	Symbol	pgs		576591						
ANR	576622	Symbol	pht		576591						
ANR	576623	Symbol	* pgs -> halftone		576591						
ANR	576624	Function	gx_ht_process_screen_memory	240:0:7238:7703							
ANR	576625	FunctionDef	"gx_ht_process_screen_memory (gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem)"		576624	0					
ANR	576626	CompoundStatement		243:0:7388:7703	576624	0					
ANR	576627	IdentifierDeclStatement	gs_point pt ;	244:4:7394:7405	576624	0	True				
ANR	576628	IdentifierDecl	pt		576624	0					
ANR	576629	IdentifierDeclType	gs_point		576624	0					
ANR	576630	Identifier	pt		576624	1					
ANR	576631	IdentifierDeclStatement	"int code = gs_screen_init_memory ( penum , pgs , phsp , accurate , mem ) ;"	245:4:7411:7476	576624	1	True				
ANR	576632	IdentifierDecl	"code = gs_screen_init_memory ( penum , pgs , phsp , accurate , mem )"		576624	0					
ANR	576633	IdentifierDeclType	int		576624	0					
ANR	576634	Identifier	code		576624	1					
ANR	576635	AssignmentExpression	"code = gs_screen_init_memory ( penum , pgs , phsp , accurate , mem )"		576624	2		=			
ANR	576636	Identifier	code		576624	0					
ANR	576637	CallExpression	"gs_screen_init_memory ( penum , pgs , phsp , accurate , mem )"		576624	1					
ANR	576638	Callee	gs_screen_init_memory		576624	0					
ANR	576639	Identifier	gs_screen_init_memory		576624	0					
ANR	576640	ArgumentList	penum		576624	1					
ANR	576641	Argument	penum		576624	0					
ANR	576642	Identifier	penum		576624	0					
ANR	576643	Argument	pgs		576624	1					
ANR	576644	Identifier	pgs		576624	0					
ANR	576645	Argument	phsp		576624	2					
ANR	576646	Identifier	phsp		576624	0					
ANR	576647	Argument	accurate		576624	3					
ANR	576648	Identifier	accurate		576624	0					
ANR	576649	Argument	mem		576624	4					
ANR	576650	Identifier	mem		576624	0					
ANR	576651	IfStatement	if ( code < 0 )		576624	2					
ANR	576652	Condition	code < 0	247:8:7487:7494	576624	0	True				
ANR	576653	RelationalExpression	code < 0		576624	0		<			
ANR	576654	Identifier	code		576624	0					
ANR	576655	PrimaryExpression	0		576624	1					
ANR	576656	ReturnStatement	return code ;	248:8:7505:7516	576624	1	True				
ANR	576657	Identifier	code		576624	0					
ANR	576658	WhileStatement	"while ( ( code = gs_screen_currentpoint ( penum , & pt ) ) == 0 )"		576624	3					
ANR	576659	Condition	"( code = gs_screen_currentpoint ( penum , & pt ) ) == 0"	249:11:7529:7576	576624	0	True				
ANR	576660	EqualityExpression	"( code = gs_screen_currentpoint ( penum , & pt ) ) == 0"		576624	0		==			
ANR	576661	AssignmentExpression	"code = gs_screen_currentpoint ( penum , & pt )"		576624	0		=			
ANR	576662	Identifier	code		576624	0					
ANR	576663	CallExpression	"gs_screen_currentpoint ( penum , & pt )"		576624	1					
ANR	576664	Callee	gs_screen_currentpoint		576624	0					
ANR	576665	Identifier	gs_screen_currentpoint		576624	0					
ANR	576666	ArgumentList	penum		576624	1					
ANR	576667	Argument	penum		576624	0					
ANR	576668	Identifier	penum		576624	0					
ANR	576669	Argument	& pt		576624	1					
ANR	576670	UnaryOperationExpression	& pt		576624	0					
ANR	576671	UnaryOperator	&		576624	0					
ANR	576672	Identifier	pt		576624	1					
ANR	576673	PrimaryExpression	0		576624	1					
ANR	576674	IfStatement	"if ( ( code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) ) ) < 0 )"		576624	1					
ANR	576675	Condition	"( code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) ) ) < 0"	250:12:7591:7661	576624	0	True				
ANR	576676	RelationalExpression	"( code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) ) ) < 0"		576624	0		<			
ANR	576677	AssignmentExpression	"code = gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) )"		576624	0		=			
ANR	576678	Identifier	code		576624	0					
ANR	576679	CallExpression	"gs_screen_next ( penum , ( * phsp -> spot_function ) ( pt . x , pt . y ) )"		576624	1					
ANR	576680	Callee	gs_screen_next		576624	0					
ANR	576681	Identifier	gs_screen_next		576624	0					
ANR	576682	ArgumentList	penum		576624	1					
ANR	576683	Argument	penum		576624	0					
ANR	576684	Identifier	penum		576624	0					
ANR	576685	Argument	"( * phsp -> spot_function ) ( pt . x , pt . y )"		576624	1					
ANR	576686	CallExpression	"( * phsp -> spot_function ) ( pt . x , pt . y )"		576624	0					
ANR	576687	Callee	* phsp -> spot_function		576624	0					
ANR	576688	UnaryOperationExpression	* phsp -> spot_function		576624	0					
ANR	576689	UnaryOperator	*		576624	0					
ANR	576690	PtrMemberAccess	phsp -> spot_function		576624	1					
ANR	576691	Identifier	phsp		576624	0					
ANR	576692	Identifier	spot_function		576624	1					
ANR	576693	ArgumentList	pt . x		576624	1					
ANR	576694	Argument	pt . x		576624	0					
ANR	576695	MemberAccess	pt . x		576624	0					
ANR	576696	Identifier	pt		576624	0					
ANR	576697	Identifier	x		576624	1					
ANR	576698	Argument	pt . y		576624	1					
ANR	576699	MemberAccess	pt . y		576624	0					
ANR	576700	Identifier	pt		576624	0					
ANR	576701	Identifier	y		576624	1					
ANR	576702	PrimaryExpression	0		576624	1					
ANR	576703	ReturnStatement	return code ;	251:12:7676:7687	576624	1	True				
ANR	576704	Identifier	code		576624	0					
ANR	576705	ReturnStatement	return 0 ;	252:4:7693:7701	576624	4	True				
ANR	576706	PrimaryExpression	0		576624	0					
ANR	576707	ReturnType	int		576624	1					
ANR	576708	Identifier	gx_ht_process_screen_memory		576624	2					
ANR	576709	ParameterList	"gs_screen_enum * penum , gs_gstate * pgs , gs_screen_halftone * phsp , bool accurate , gs_memory_t * mem"		576624	3					
ANR	576710	Parameter	gs_screen_enum * penum	241:28:7270:7291	576624	0	True				
ANR	576711	ParameterType	gs_screen_enum *		576624	0					
ANR	576712	Identifier	penum		576624	1					
ANR	576713	Parameter	gs_gstate * pgs	241:52:7294:7308	576624	1	True				
ANR	576714	ParameterType	gs_gstate *		576624	0					
ANR	576715	Identifier	pgs		576624	1					
ANR	576716	Parameter	gs_screen_halftone * phsp	242:16:7327:7351	576624	2	True				
ANR	576717	ParameterType	gs_screen_halftone *		576624	0					
ANR	576718	Identifier	phsp		576624	1					
ANR	576719	Parameter	bool accurate	242:43:7354:7366	576624	3	True				
ANR	576720	ParameterType	bool		576624	0					
ANR	576721	Identifier	accurate		576624	1					
ANR	576722	Parameter	gs_memory_t * mem	242:58:7369:7385	576624	4	True				
ANR	576723	ParameterType	gs_memory_t *		576624	0					
ANR	576724	Identifier	mem		576624	1					
ANR	576725	CFGEntryNode	ENTRY		576624		True				
ANR	576726	CFGExitNode	EXIT		576624		True				
ANR	576727	Symbol	phsp		576624						
ANR	576728	Symbol	code		576624						
ANR	576729	Symbol	* phsp -> spot_function		576624						
ANR	576730	Symbol	gs_screen_next		576624						
ANR	576731	Symbol	accurate		576624						
ANR	576732	Symbol	pt		576624						
ANR	576733	Symbol	gs_screen_currentpoint		576624						
ANR	576734	Symbol	penum		576624						
ANR	576735	Symbol	gs_screen_init_memory		576624						
ANR	576736	Symbol	* phsp		576624						
ANR	576737	Symbol	phsp -> spot_function		576624						
ANR	576738	Symbol	& pt		576624						
ANR	576739	Symbol	mem		576624						
ANR	576740	Symbol	pt . x		576624						
ANR	576741	Symbol	* * phsp		576624						
ANR	576742	Symbol	pt . y		576624						
ANR	576743	Symbol	pgs		576624						
ANR	576744	Function	gx_ht_alloc_ht_order	260:0:7918:9501							
ANR	576745	FunctionDef	"gx_ht_alloc_ht_order (gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , uint strip_shift , const gx_ht_order_procs_t * procs , gs_memory_t * mem)"		576744	0					
ANR	576746	CompoundStatement		264:0:8135:9501	576744	0					
ANR	576747	ExpressionStatement	porder -> threshold = NULL	265:4:8141:8165	576744	0	True				
ANR	576748	AssignmentExpression	porder -> threshold = NULL		576744	0		=			
ANR	576749	PtrMemberAccess	porder -> threshold		576744	0					
ANR	576750	Identifier	porder		576744	0					
ANR	576751	Identifier	threshold		576744	1					
ANR	576752	Identifier	NULL		576744	1					
ANR	576753	ExpressionStatement	porder -> width = width	266:4:8171:8192	576744	1	True				
ANR	576754	AssignmentExpression	porder -> width = width		576744	0		=			
ANR	576755	PtrMemberAccess	porder -> width		576744	0					
ANR	576756	Identifier	porder		576744	0					
ANR	576757	Identifier	width		576744	1					
ANR	576758	Identifier	width		576744	1					
ANR	576759	ExpressionStatement	porder -> height = height	267:4:8198:8221	576744	2	True				
ANR	576760	AssignmentExpression	porder -> height = height		576744	0		=			
ANR	576761	PtrMemberAccess	porder -> height		576744	0					
ANR	576762	Identifier	porder		576744	0					
ANR	576763	Identifier	height		576744	1					
ANR	576764	Identifier	height		576744	1					
ANR	576765	ExpressionStatement	porder -> raster = bitmap_raster ( width )	268:4:8227:8264	576744	3	True				
ANR	576766	AssignmentExpression	porder -> raster = bitmap_raster ( width )		576744	0		=			
ANR	576767	PtrMemberAccess	porder -> raster		576744	0					
ANR	576768	Identifier	porder		576744	0					
ANR	576769	Identifier	raster		576744	1					
ANR	576770	CallExpression	bitmap_raster ( width )		576744	1					
ANR	576771	Callee	bitmap_raster		576744	0					
ANR	576772	Identifier	bitmap_raster		576744	0					
ANR	576773	ArgumentList	width		576744	1					
ANR	576774	Argument	width		576744	0					
ANR	576775	Identifier	width		576744	0					
ANR	576776	ExpressionStatement	porder -> shift = strip_shift	269:4:8270:8297	576744	4	True				
ANR	576777	AssignmentExpression	porder -> shift = strip_shift		576744	0		=			
ANR	576778	PtrMemberAccess	porder -> shift		576744	0					
ANR	576779	Identifier	porder		576744	0					
ANR	576780	Identifier	shift		576744	1					
ANR	576781	Identifier	strip_shift		576744	1					
ANR	576782	ExpressionStatement	porder -> orig_height = porder -> height	270:4:8303:8339	576744	5	True				
ANR	576783	AssignmentExpression	porder -> orig_height = porder -> height		576744	0		=			
ANR	576784	PtrMemberAccess	porder -> orig_height		576744	0					
ANR	576785	Identifier	porder		576744	0					
ANR	576786	Identifier	orig_height		576744	1					
ANR	576787	PtrMemberAccess	porder -> height		576744	1					
ANR	576788	Identifier	porder		576744	0					
ANR	576789	Identifier	height		576744	1					
ANR	576790	ExpressionStatement	porder -> orig_shift = porder -> shift	271:4:8345:8379	576744	6	True				
ANR	576791	AssignmentExpression	porder -> orig_shift = porder -> shift		576744	0		=			
ANR	576792	PtrMemberAccess	porder -> orig_shift		576744	0					
ANR	576793	Identifier	porder		576744	0					
ANR	576794	Identifier	orig_shift		576744	1					
ANR	576795	PtrMemberAccess	porder -> shift		576744	1					
ANR	576796	Identifier	porder		576744	0					
ANR	576797	Identifier	shift		576744	1					
ANR	576798	ExpressionStatement	porder -> full_height = ht_order_full_height ( porder )	272:4:8385:8435	576744	7	True				
ANR	576799	AssignmentExpression	porder -> full_height = ht_order_full_height ( porder )		576744	0		=			
ANR	576800	PtrMemberAccess	porder -> full_height		576744	0					
ANR	576801	Identifier	porder		576744	0					
ANR	576802	Identifier	full_height		576744	1					
ANR	576803	CallExpression	ht_order_full_height ( porder )		576744	1					
ANR	576804	Callee	ht_order_full_height		576744	0					
ANR	576805	Identifier	ht_order_full_height		576744	0					
ANR	576806	ArgumentList	porder		576744	1					
ANR	576807	Argument	porder		576744	0					
ANR	576808	Identifier	porder		576744	0					
ANR	576809	ExpressionStatement	porder -> num_levels = num_levels	273:4:8441:8472	576744	8	True				
ANR	576810	AssignmentExpression	porder -> num_levels = num_levels		576744	0		=			
ANR	576811	PtrMemberAccess	porder -> num_levels		576744	0					
ANR	576812	Identifier	porder		576744	0					
ANR	576813	Identifier	num_levels		576744	1					
ANR	576814	Identifier	num_levels		576744	1					
ANR	576815	ExpressionStatement	porder -> num_bits = num_bits	274:4:8478:8505	576744	9	True				
ANR	576816	AssignmentExpression	porder -> num_bits = num_bits		576744	0		=			
ANR	576817	PtrMemberAccess	porder -> num_bits		576744	0					
ANR	576818	Identifier	porder		576744	0					
ANR	576819	Identifier	num_bits		576744	1					
ANR	576820	Identifier	num_bits		576744	1					
ANR	576821	ExpressionStatement	porder -> procs = procs	275:4:8511:8532	576744	10	True				
ANR	576822	AssignmentExpression	porder -> procs = procs		576744	0		=			
ANR	576823	PtrMemberAccess	porder -> procs		576744	0					
ANR	576824	Identifier	porder		576744	0					
ANR	576825	Identifier	procs		576744	1					
ANR	576826	Identifier	procs		576744	1					
ANR	576827	ExpressionStatement	porder -> data_memory = mem	276:4:8538:8563	576744	11	True				
ANR	576828	AssignmentExpression	porder -> data_memory = mem		576744	0		=			
ANR	576829	PtrMemberAccess	porder -> data_memory		576744	0					
ANR	576830	Identifier	porder		576744	0					
ANR	576831	Identifier	data_memory		576744	1					
ANR	576832	Identifier	mem		576744	1					
ANR	576833	IfStatement	if ( num_levels > 0 )		576744	12					
ANR	576834	Condition	num_levels > 0	278:8:8574:8587	576744	0	True				
ANR	576835	RelationalExpression	num_levels > 0		576744	0		>			
ANR	576836	Identifier	num_levels		576744	0					
ANR	576837	PrimaryExpression	0		576744	1					
ANR	576838	CompoundStatement		15:24:454:454	576744	1					
ANR	576839	ExpressionStatement	"porder -> levels = ( uint * ) gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"	279:8:8600:8766	576744	0	True				
ANR	576840	AssignmentExpression	"porder -> levels = ( uint * ) gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"		576744	0		=			
ANR	576841	PtrMemberAccess	porder -> levels		576744	0					
ANR	576842	Identifier	porder		576744	0					
ANR	576843	Identifier	levels		576744	1					
ANR	576844	CastExpression	"( uint * ) gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"		576744	1					
ANR	576845	CastTarget	uint *		576744	0					
ANR	576846	CallExpression	"gs_alloc_byte_array ( mem , porder -> num_levels , sizeof ( uint ) , ""alloc_ht_order_data(levels)"" )"		576744	1					
ANR	576847	Callee	gs_alloc_byte_array		576744	0					
ANR	576848	Identifier	gs_alloc_byte_array		576744	0					
ANR	576849	ArgumentList	mem		576744	1					
ANR	576850	Argument	mem		576744	0					
ANR	576851	Identifier	mem		576744	0					
ANR	576852	Argument	porder -> num_levels		576744	1					
ANR	576853	PtrMemberAccess	porder -> num_levels		576744	0					
ANR	576854	Identifier	porder		576744	0					
ANR	576855	Identifier	num_levels		576744	1					
ANR	576856	Argument	sizeof ( uint )		576744	2					
ANR	576857	SizeofExpression	sizeof ( uint )		576744	0					
ANR	576858	Sizeof	sizeof		576744	0					
ANR	576859	SizeofOperand	uint		576744	1					
ANR	576860	Argument	"""alloc_ht_order_data(levels)"""		576744	3					
ANR	576861	PrimaryExpression	"""alloc_ht_order_data(levels)"""		576744	0					
ANR	576862	IfStatement	if ( porder -> levels == 0 )		576744	1					
ANR	576863	Condition	porder -> levels == 0	282:12:8780:8798	576744	0	True				
ANR	576864	EqualityExpression	porder -> levels == 0		576744	0		==			
ANR	576865	PtrMemberAccess	porder -> levels		576744	0					
ANR	576866	Identifier	porder		576744	0					
ANR	576867	Identifier	levels		576744	1					
ANR	576868	PrimaryExpression	0		576744	1					
ANR	576869	ExpressionStatement	return_error ( gs_error_VMerror )	283:12:8813:8843	576744	1	True				
ANR	576870	CallExpression	return_error ( gs_error_VMerror )		576744	0					
ANR	576871	Callee	return_error		576744	0					
ANR	576872	Identifier	return_error		576744	0					
ANR	576873	ArgumentList	gs_error_VMerror		576744	1					
ANR	576874	Argument	gs_error_VMerror		576744	0					
ANR	576875	Identifier	gs_error_VMerror		576744	0					
ANR	576876	ExpressionStatement	"memset ( porder -> levels , 0 , sizeof ( uint ) * porder -> num_levels )"	284:8:8853:8913	576744	2	True				
ANR	576877	CallExpression	"memset ( porder -> levels , 0 , sizeof ( uint ) * porder -> num_levels )"		576744	0					
ANR	576878	Callee	memset		576744	0					
ANR	576879	Identifier	memset		576744	0					
ANR	576880	ArgumentList	porder -> levels		576744	1					
ANR	576881	Argument	porder -> levels		576744	0					
ANR	576882	PtrMemberAccess	porder -> levels		576744	0					
ANR	576883	Identifier	porder		576744	0					
ANR	576884	Identifier	levels		576744	1					
ANR	576885	Argument	0		576744	1					
ANR	576886	PrimaryExpression	0		576744	0					
ANR	576887	Argument	sizeof ( uint ) * porder -> num_levels		576744	2					
ANR	576888	MultiplicativeExpression	sizeof ( uint ) * porder -> num_levels		576744	0		*			
ANR	576889	SizeofExpression	sizeof ( uint )		576744	0					
ANR	576890	Sizeof	sizeof		576744	0					
ANR	576891	SizeofOperand	uint		576744	1					
ANR	576892	PtrMemberAccess	porder -> num_levels		576744	1					
ANR	576893	Identifier	porder		576744	0					
ANR	576894	Identifier	num_levels		576744	1					
ANR	576895	ElseStatement	else		576744	0					
ANR	576896	ExpressionStatement	porder -> levels = 0	286:8:8934:8952	576744	0	True				
ANR	576897	AssignmentExpression	porder -> levels = 0		576744	0		=			
ANR	576898	PtrMemberAccess	porder -> levels		576744	0					
ANR	576899	Identifier	porder		576744	0					
ANR	576900	Identifier	levels		576744	1					
ANR	576901	PrimaryExpression	0		576744	1					
ANR	576902	IfStatement	if ( num_bits > 0 )		576744	13					
ANR	576903	Condition	num_bits > 0	288:8:8963:8974	576744	0	True				
ANR	576904	RelationalExpression	num_bits > 0		576744	0		>			
ANR	576905	Identifier	num_bits		576744	0					
ANR	576906	PrimaryExpression	0		576744	1					
ANR	576907	CompoundStatement		25:22:841:841	576744	1					
ANR	576908	ExpressionStatement	"porder -> bit_data = gs_alloc_byte_array ( mem , porder -> num_bits , porder -> procs -> bit_data_elt_size , ""alloc_ht_order_data(bit_data)"" )"	289:8:8987:9191	576744	0	True				
ANR	576909	AssignmentExpression	"porder -> bit_data = gs_alloc_byte_array ( mem , porder -> num_bits , porder -> procs -> bit_data_elt_size , ""alloc_ht_order_data(bit_data)"" )"		576744	0		=			
ANR	576910	PtrMemberAccess	porder -> bit_data		576744	0					
ANR	576911	Identifier	porder		576744	0					
ANR	576912	Identifier	bit_data		576744	1					
ANR	576913	CallExpression	"gs_alloc_byte_array ( mem , porder -> num_bits , porder -> procs -> bit_data_elt_size , ""alloc_ht_order_data(bit_data)"" )"		576744	1					
ANR	576914	Callee	gs_alloc_byte_array		576744	0					
ANR	576915	Identifier	gs_alloc_byte_array		576744	0					
ANR	576916	ArgumentList	mem		576744	1					
ANR	576917	Argument	mem		576744	0					
ANR	576918	Identifier	mem		576744	0					
ANR	576919	Argument	porder -> num_bits		576744	1					
ANR	576920	PtrMemberAccess	porder -> num_bits		576744	0					
ANR	576921	Identifier	porder		576744	0					
ANR	576922	Identifier	num_bits		576744	1					
ANR	576923	Argument	porder -> procs -> bit_data_elt_size		576744	2					
ANR	576924	PtrMemberAccess	porder -> procs -> bit_data_elt_size		576744	0					
ANR	576925	PtrMemberAccess	porder -> procs		576744	0					
ANR	576926	Identifier	porder		576744	0					
ANR	576927	Identifier	procs		576744	1					
ANR	576928	Identifier	bit_data_elt_size		576744	1					
ANR	576929	Argument	"""alloc_ht_order_data(bit_data)"""		576744	3					
ANR	576930	PrimaryExpression	"""alloc_ht_order_data(bit_data)"""		576744	0					
ANR	576931	IfStatement	if ( porder -> bit_data == 0 )		576744	1					
ANR	576932	Condition	porder -> bit_data == 0	293:12:9205:9225	576744	0	True				
ANR	576933	EqualityExpression	porder -> bit_data == 0		576744	0		==			
ANR	576934	PtrMemberAccess	porder -> bit_data		576744	0					
ANR	576935	Identifier	porder		576744	0					
ANR	576936	Identifier	bit_data		576744	1					
ANR	576937	PrimaryExpression	0		576744	1					
ANR	576938	CompoundStatement		30:35:1092:1092	576744	1					
ANR	576939	ExpressionStatement	"gs_free_object ( mem , porder -> levels , ""alloc_ht_order_data(levels)"" )"	294:12:9242:9308	576744	0	True				
ANR	576940	CallExpression	"gs_free_object ( mem , porder -> levels , ""alloc_ht_order_data(levels)"" )"		576744	0					
ANR	576941	Callee	gs_free_object		576744	0					
ANR	576942	Identifier	gs_free_object		576744	0					
ANR	576943	ArgumentList	mem		576744	1					
ANR	576944	Argument	mem		576744	0					
ANR	576945	Identifier	mem		576744	0					
ANR	576946	Argument	porder -> levels		576744	1					
ANR	576947	PtrMemberAccess	porder -> levels		576744	0					
ANR	576948	Identifier	porder		576744	0					
ANR	576949	Identifier	levels		576744	1					
ANR	576950	Argument	"""alloc_ht_order_data(levels)"""		576744	2					
ANR	576951	PrimaryExpression	"""alloc_ht_order_data(levels)"""		576744	0					
ANR	576952	ExpressionStatement	porder -> levels = 0	295:12:9322:9340	576744	1	True				
ANR	576953	AssignmentExpression	porder -> levels = 0		576744	0		=			
ANR	576954	PtrMemberAccess	porder -> levels		576744	0					
ANR	576955	Identifier	porder		576744	0					
ANR	576956	Identifier	levels		576744	1					
ANR	576957	PrimaryExpression	0		576744	1					
ANR	576958	ExpressionStatement	return_error ( gs_error_VMerror )	296:12:9354:9384	576744	2	True				
ANR	576959	CallExpression	return_error ( gs_error_VMerror )		576744	0					
ANR	576960	Callee	return_error		576744	0					
ANR	576961	Identifier	return_error		576744	0					
ANR	576962	ArgumentList	gs_error_VMerror		576744	1					
ANR	576963	Argument	gs_error_VMerror		576744	0					
ANR	576964	Identifier	gs_error_VMerror		576744	0					
ANR	576965	ElseStatement	else		576744	0					
ANR	576966	ExpressionStatement	porder -> bit_data = 0	299:8:9415:9435	576744	0	True				
ANR	576967	AssignmentExpression	porder -> bit_data = 0		576744	0		=			
ANR	576968	PtrMemberAccess	porder -> bit_data		576744	0					
ANR	576969	Identifier	porder		576744	0					
ANR	576970	Identifier	bit_data		576744	1					
ANR	576971	PrimaryExpression	0		576744	1					
ANR	576972	ExpressionStatement	porder -> cache = 0	301:4:9442:9459	576744	14	True				
ANR	576973	AssignmentExpression	porder -> cache = 0		576744	0		=			
ANR	576974	PtrMemberAccess	porder -> cache		576744	0					
ANR	576975	Identifier	porder		576744	0					
ANR	576976	Identifier	cache		576744	1					
ANR	576977	PrimaryExpression	0		576744	1					
ANR	576978	ExpressionStatement	porder -> transfer = 0	302:4:9465:9485	576744	15	True				
ANR	576979	AssignmentExpression	porder -> transfer = 0		576744	0		=			
ANR	576980	PtrMemberAccess	porder -> transfer		576744	0					
ANR	576981	Identifier	porder		576744	0					
ANR	576982	Identifier	transfer		576744	1					
ANR	576983	PrimaryExpression	0		576744	1					
ANR	576984	ReturnStatement	return 0 ;	303:4:9491:9499	576744	16	True				
ANR	576985	PrimaryExpression	0		576744	0					
ANR	576986	ReturnType	int		576744	1					
ANR	576987	Identifier	gx_ht_alloc_ht_order		576744	2					
ANR	576988	ParameterList	"gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , uint strip_shift , const gx_ht_order_procs_t * procs , gs_memory_t * mem"		576744	3					
ANR	576989	Parameter	gx_ht_order * porder	261:21:7943:7962	576744	0	True				
ANR	576990	ParameterType	gx_ht_order *		576744	0					
ANR	576991	Identifier	porder		576744	1					
ANR	576992	Parameter	uint width	261:43:7965:7974	576744	1	True				
ANR	576993	ParameterType	uint		576744	0					
ANR	576994	Identifier	width		576744	1					
ANR	576995	Parameter	uint height	261:55:7977:7987	576744	2	True				
ANR	576996	ParameterType	uint		576744	0					
ANR	576997	Identifier	height		576744	1					
ANR	576998	Parameter	uint num_levels	262:21:8011:8025	576744	3	True				
ANR	576999	ParameterType	uint		576744	0					
ANR	577000	Identifier	num_levels		576744	1					
ANR	577001	Parameter	uint num_bits	262:38:8028:8040	576744	4	True				
ANR	577002	ParameterType	uint		576744	0					
ANR	577003	Identifier	num_bits		576744	1					
ANR	577004	Parameter	uint strip_shift	262:53:8043:8058	576744	5	True				
ANR	577005	ParameterType	uint		576744	0					
ANR	577006	Identifier	strip_shift		576744	1					
ANR	577007	Parameter	const gx_ht_order_procs_t * procs	263:21:8082:8113	576744	6	True				
ANR	577008	ParameterType	const gx_ht_order_procs_t *		576744	0					
ANR	577009	Identifier	procs		576744	1					
ANR	577010	Parameter	gs_memory_t * mem	263:55:8116:8132	576744	7	True				
ANR	577011	ParameterType	gs_memory_t *		576744	0					
ANR	577012	Identifier	mem		576744	1					
ANR	577013	CFGEntryNode	ENTRY		576744		True				
ANR	577014	CFGExitNode	EXIT		576744		True				
ANR	577015	Symbol	procs		576744						
ANR	577016	Symbol	porder -> num_levels		576744						
ANR	577017	Symbol	porder -> procs		576744						
ANR	577018	Symbol	* * porder		576744						
ANR	577019	Symbol	porder -> width		576744						
ANR	577020	Symbol	porder -> num_bits		576744						
ANR	577021	Symbol	porder -> shift		576744						
ANR	577022	Symbol	porder -> orig_height		576744						
ANR	577023	Symbol	ht_order_full_height		576744						
ANR	577024	Symbol	porder -> levels		576744						
ANR	577025	Symbol	porder -> bit_data		576744						
ANR	577026	Symbol	mem		576744						
ANR	577027	Symbol	porder -> full_height		576744						
ANR	577028	Symbol	porder -> procs -> bit_data_elt_size		576744						
ANR	577029	Symbol	porder -> orig_shift		576744						
ANR	577030	Symbol	height		576744						
ANR	577031	Symbol	NULL		576744						
ANR	577032	Symbol	porder -> cache		576744						
ANR	577033	Symbol	porder -> raster		576744						
ANR	577034	Symbol	porder -> height		576744						
ANR	577035	Symbol	porder		576744						
ANR	577036	Symbol	porder -> transfer		576744						
ANR	577037	Symbol	strip_shift		576744						
ANR	577038	Symbol	bitmap_raster		576744						
ANR	577039	Symbol	porder -> threshold		576744						
ANR	577040	Symbol	gs_error_VMerror		576744						
ANR	577041	Symbol	* porder -> procs		576744						
ANR	577042	Symbol	width		576744						
ANR	577043	Symbol	num_bits		576744						
ANR	577044	Symbol	gs_alloc_byte_array		576744						
ANR	577045	Symbol	* porder		576744						
ANR	577046	Symbol	porder -> data_memory		576744						
ANR	577047	Symbol	num_levels		576744						
ANR	577048	Function	gx_ht_copy_ht_order	309:0:9550:10229							
ANR	577049	FunctionDef	"gx_ht_copy_ht_order (gx_ht_order * pdest , gx_ht_order * psrc , gs_memory_t * mem)"		577048	0					
ANR	577050	CompoundStatement		311:0:9641:10229	577048	0					
ANR	577051	IdentifierDeclStatement	int code ;	312:4:9647:9655	577048	0	True				
ANR	577052	IdentifierDecl	code		577048	0					
ANR	577053	IdentifierDeclType	int		577048	0					
ANR	577054	Identifier	code		577048	1					
ANR	577055	ExpressionStatement	* pdest = * psrc	314:4:9662:9676	577048	1	True				
ANR	577056	AssignmentExpression	* pdest = * psrc		577048	0		=			
ANR	577057	UnaryOperationExpression	* pdest		577048	0					
ANR	577058	UnaryOperator	*		577048	0					
ANR	577059	Identifier	pdest		577048	1					
ANR	577060	UnaryOperationExpression	* psrc		577048	1					
ANR	577061	UnaryOperator	*		577048	0					
ANR	577062	Identifier	psrc		577048	1					
ANR	577063	ExpressionStatement	"code = gx_ht_alloc_ht_order ( pdest , psrc -> width , psrc -> height , psrc -> num_levels , psrc -> num_bits , psrc -> shift , psrc -> procs , mem )"	316:4:9683:9851	577048	2	True				
ANR	577064	AssignmentExpression	"code = gx_ht_alloc_ht_order ( pdest , psrc -> width , psrc -> height , psrc -> num_levels , psrc -> num_bits , psrc -> shift , psrc -> procs , mem )"		577048	0		=			
ANR	577065	Identifier	code		577048	0					
ANR	577066	CallExpression	"gx_ht_alloc_ht_order ( pdest , psrc -> width , psrc -> height , psrc -> num_levels , psrc -> num_bits , psrc -> shift , psrc -> procs , mem )"		577048	1					
ANR	577067	Callee	gx_ht_alloc_ht_order		577048	0					
ANR	577068	Identifier	gx_ht_alloc_ht_order		577048	0					
ANR	577069	ArgumentList	pdest		577048	1					
ANR	577070	Argument	pdest		577048	0					
ANR	577071	Identifier	pdest		577048	0					
ANR	577072	Argument	psrc -> width		577048	1					
ANR	577073	PtrMemberAccess	psrc -> width		577048	0					
ANR	577074	Identifier	psrc		577048	0					
ANR	577075	Identifier	width		577048	1					
ANR	577076	Argument	psrc -> height		577048	2					
ANR	577077	PtrMemberAccess	psrc -> height		577048	0					
ANR	577078	Identifier	psrc		577048	0					
ANR	577079	Identifier	height		577048	1					
ANR	577080	Argument	psrc -> num_levels		577048	3					
ANR	577081	PtrMemberAccess	psrc -> num_levels		577048	0					
ANR	577082	Identifier	psrc		577048	0					
ANR	577083	Identifier	num_levels		577048	1					
ANR	577084	Argument	psrc -> num_bits		577048	4					
ANR	577085	PtrMemberAccess	psrc -> num_bits		577048	0					
ANR	577086	Identifier	psrc		577048	0					
ANR	577087	Identifier	num_bits		577048	1					
ANR	577088	Argument	psrc -> shift		577048	5					
ANR	577089	PtrMemberAccess	psrc -> shift		577048	0					
ANR	577090	Identifier	psrc		577048	0					
ANR	577091	Identifier	shift		577048	1					
ANR	577092	Argument	psrc -> procs		577048	6					
ANR	577093	PtrMemberAccess	psrc -> procs		577048	0					
ANR	577094	Identifier	psrc		577048	0					
ANR	577095	Identifier	procs		577048	1					
ANR	577096	Argument	mem		577048	7					
ANR	577097	Identifier	mem		577048	0					
ANR	577098	IfStatement	if ( code < 0 )		577048	3					
ANR	577099	Condition	code < 0	319:8:9861:9868	577048	0	True				
ANR	577100	RelationalExpression	code < 0		577048	0		<			
ANR	577101	Identifier	code		577048	0					
ANR	577102	PrimaryExpression	0		577048	1					
ANR	577103	ReturnStatement	return code ;	320:8:9879:9890	577048	1	True				
ANR	577104	Identifier	code		577048	0					
ANR	577105	IfStatement	if ( pdest -> levels != 0 )		577048	4					
ANR	577106	Condition	pdest -> levels != 0	321:8:9900:9917	577048	0	True				
ANR	577107	EqualityExpression	pdest -> levels != 0		577048	0		!=			
ANR	577108	PtrMemberAccess	pdest -> levels		577048	0					
ANR	577109	Identifier	pdest		577048	0					
ANR	577110	Identifier	levels		577048	1					
ANR	577111	PrimaryExpression	0		577048	1					
ANR	577112	ExpressionStatement	"memcpy ( pdest -> levels , psrc -> levels , psrc -> num_levels * sizeof ( uint ) )"	322:8:9928:9996	577048	1	True				
ANR	577113	CallExpression	"memcpy ( pdest -> levels , psrc -> levels , psrc -> num_levels * sizeof ( uint ) )"		577048	0					
ANR	577114	Callee	memcpy		577048	0					
ANR	577115	Identifier	memcpy		577048	0					
ANR	577116	ArgumentList	pdest -> levels		577048	1					
ANR	577117	Argument	pdest -> levels		577048	0					
ANR	577118	PtrMemberAccess	pdest -> levels		577048	0					
ANR	577119	Identifier	pdest		577048	0					
ANR	577120	Identifier	levels		577048	1					
ANR	577121	Argument	psrc -> levels		577048	1					
ANR	577122	PtrMemberAccess	psrc -> levels		577048	0					
ANR	577123	Identifier	psrc		577048	0					
ANR	577124	Identifier	levels		577048	1					
ANR	577125	Argument	psrc -> num_levels * sizeof ( uint )		577048	2					
ANR	577126	MultiplicativeExpression	psrc -> num_levels * sizeof ( uint )		577048	0		*			
ANR	577127	PtrMemberAccess	psrc -> num_levels		577048	0					
ANR	577128	Identifier	psrc		577048	0					
ANR	577129	Identifier	num_levels		577048	1					
ANR	577130	SizeofExpression	sizeof ( uint )		577048	1					
ANR	577131	Sizeof	sizeof		577048	0					
ANR	577132	SizeofOperand	uint		577048	1					
ANR	577133	IfStatement	if ( pdest -> bit_data != 0 )		577048	5					
ANR	577134	Condition	pdest -> bit_data != 0	323:8:10006:10025	577048	0	True				
ANR	577135	EqualityExpression	pdest -> bit_data != 0		577048	0		!=			
ANR	577136	PtrMemberAccess	pdest -> bit_data		577048	0					
ANR	577137	Identifier	pdest		577048	0					
ANR	577138	Identifier	bit_data		577048	1					
ANR	577139	PrimaryExpression	0		577048	1					
ANR	577140	ExpressionStatement	"memcpy ( pdest -> bit_data , psrc -> bit_data , psrc -> num_bits * psrc -> procs -> bit_data_elt_size )"	324:8:10036:10140	577048	1	True				
ANR	577141	CallExpression	"memcpy ( pdest -> bit_data , psrc -> bit_data , psrc -> num_bits * psrc -> procs -> bit_data_elt_size )"		577048	0					
ANR	577142	Callee	memcpy		577048	0					
ANR	577143	Identifier	memcpy		577048	0					
ANR	577144	ArgumentList	pdest -> bit_data		577048	1					
ANR	577145	Argument	pdest -> bit_data		577048	0					
ANR	577146	PtrMemberAccess	pdest -> bit_data		577048	0					
ANR	577147	Identifier	pdest		577048	0					
ANR	577148	Identifier	bit_data		577048	1					
ANR	577149	Argument	psrc -> bit_data		577048	1					
ANR	577150	PtrMemberAccess	psrc -> bit_data		577048	0					
ANR	577151	Identifier	psrc		577048	0					
ANR	577152	Identifier	bit_data		577048	1					
ANR	577153	Argument	psrc -> num_bits * psrc -> procs -> bit_data_elt_size		577048	2					
ANR	577154	MultiplicativeExpression	psrc -> num_bits * psrc -> procs -> bit_data_elt_size		577048	0		*			
ANR	577155	PtrMemberAccess	psrc -> num_bits		577048	0					
ANR	577156	Identifier	psrc		577048	0					
ANR	577157	Identifier	num_bits		577048	1					
ANR	577158	PtrMemberAccess	psrc -> procs -> bit_data_elt_size		577048	1					
ANR	577159	PtrMemberAccess	psrc -> procs		577048	0					
ANR	577160	Identifier	psrc		577048	0					
ANR	577161	Identifier	procs		577048	1					
ANR	577162	Identifier	bit_data_elt_size		577048	1					
ANR	577163	ExpressionStatement	pdest -> transfer = psrc -> transfer	326:4:10146:10178	577048	6	True				
ANR	577164	AssignmentExpression	pdest -> transfer = psrc -> transfer		577048	0		=			
ANR	577165	PtrMemberAccess	pdest -> transfer		577048	0					
ANR	577166	Identifier	pdest		577048	0					
ANR	577167	Identifier	transfer		577048	1					
ANR	577168	PtrMemberAccess	psrc -> transfer		577048	1					
ANR	577169	Identifier	psrc		577048	0					
ANR	577170	Identifier	transfer		577048	1					
ANR	577171	ExpressionStatement	rc_increment ( pdest -> transfer )	327:4:10184:10213	577048	7	True				
ANR	577172	CallExpression	rc_increment ( pdest -> transfer )		577048	0					
ANR	577173	Callee	rc_increment		577048	0					
ANR	577174	Identifier	rc_increment		577048	0					
ANR	577175	ArgumentList	pdest -> transfer		577048	1					
ANR	577176	Argument	pdest -> transfer		577048	0					
ANR	577177	PtrMemberAccess	pdest -> transfer		577048	0					
ANR	577178	Identifier	pdest		577048	0					
ANR	577179	Identifier	transfer		577048	1					
ANR	577180	ReturnStatement	return 0 ;	328:4:10219:10227	577048	8	True				
ANR	577181	PrimaryExpression	0		577048	0					
ANR	577182	ReturnType	static int		577048	1					
ANR	577183	Identifier	gx_ht_copy_ht_order		577048	2					
ANR	577184	ParameterList	"gx_ht_order * pdest , gx_ht_order * psrc , gs_memory_t * mem"		577048	3					
ANR	577185	Parameter	gx_ht_order * pdest	310:20:9581:9599	577048	0	True				
ANR	577186	ParameterType	gx_ht_order *		577048	0					
ANR	577187	Identifier	pdest		577048	1					
ANR	577188	Parameter	gx_ht_order * psrc	310:41:9602:9619	577048	1	True				
ANR	577189	ParameterType	gx_ht_order *		577048	0					
ANR	577190	Identifier	psrc		577048	1					
ANR	577191	Parameter	gs_memory_t * mem	310:61:9622:9638	577048	2	True				
ANR	577192	ParameterType	gs_memory_t *		577048	0					
ANR	577193	Identifier	mem		577048	1					
ANR	577194	CFGEntryNode	ENTRY		577048		True				
ANR	577195	CFGExitNode	EXIT		577048		True				
ANR	577196	Symbol	psrc		577048						
ANR	577197	Symbol	code		577048						
ANR	577198	Symbol	psrc -> procs		577048						
ANR	577199	Symbol	pdest -> bit_data		577048						
ANR	577200	Symbol	psrc -> height		577048						
ANR	577201	Symbol	* pdest		577048						
ANR	577202	Symbol	psrc -> transfer		577048						
ANR	577203	Symbol	pdest -> levels		577048						
ANR	577204	Symbol	* psrc		577048						
ANR	577205	Symbol	pdest		577048						
ANR	577206	Symbol	psrc -> num_levels		577048						
ANR	577207	Symbol	psrc -> num_bits		577048						
ANR	577208	Symbol	psrc -> bit_data		577048						
ANR	577209	Symbol	* psrc -> procs		577048						
ANR	577210	Symbol	mem		577048						
ANR	577211	Symbol	pdest -> transfer		577048						
ANR	577212	Symbol	psrc -> levels		577048						
ANR	577213	Symbol	psrc -> shift		577048						
ANR	577214	Symbol	* * psrc		577048						
ANR	577215	Symbol	psrc -> procs -> bit_data_elt_size		577048						
ANR	577216	Symbol	gx_ht_alloc_ht_order		577048						
ANR	577217	Symbol	psrc -> width		577048						
ANR	577218	Function	gx_ht_move_ht_order	335:0:10371:11117							
ANR	577219	FunctionDef	"gx_ht_move_ht_order (gx_ht_order * pdest , gx_ht_order * psrc)"		577218	0					
ANR	577220	CompoundStatement		337:0:10444:11117	577218	0					
ANR	577221	IdentifierDeclStatement	"uint width = psrc -> width , height = psrc -> height , shift = psrc -> shift ;"	338:4:10450:10521	577218	0	True				
ANR	577222	IdentifierDecl	width = psrc -> width		577218	0					
ANR	577223	IdentifierDeclType	uint		577218	0					
ANR	577224	Identifier	width		577218	1					
ANR	577225	AssignmentExpression	width = psrc -> width		577218	2		=			
ANR	577226	Identifier	width		577218	0					
ANR	577227	PtrMemberAccess	psrc -> width		577218	1					
ANR	577228	Identifier	psrc		577218	0					
ANR	577229	Identifier	width		577218	1					
ANR	577230	IdentifierDecl	height = psrc -> height		577218	1					
ANR	577231	IdentifierDeclType	uint		577218	0					
ANR	577232	Identifier	height		577218	1					
ANR	577233	AssignmentExpression	height = psrc -> height		577218	2		=			
ANR	577234	Identifier	height		577218	0					
ANR	577235	PtrMemberAccess	psrc -> height		577218	1					
ANR	577236	Identifier	psrc		577218	0					
ANR	577237	Identifier	height		577218	1					
ANR	577238	IdentifierDecl	shift = psrc -> shift		577218	2					
ANR	577239	IdentifierDeclType	uint		577218	0					
ANR	577240	Identifier	shift		577218	1					
ANR	577241	AssignmentExpression	shift = psrc -> shift		577218	2		=			
ANR	577242	Identifier	shift		577218	0					
ANR	577243	PtrMemberAccess	psrc -> shift		577218	1					
ANR	577244	Identifier	psrc		577218	0					
ANR	577245	Identifier	shift		577218	1					
ANR	577246	ExpressionStatement	pdest -> params = psrc -> params	340:4:10528:10556	577218	1	True				
ANR	577247	AssignmentExpression	pdest -> params = psrc -> params		577218	0		=			
ANR	577248	PtrMemberAccess	pdest -> params		577218	0					
ANR	577249	Identifier	pdest		577218	0					
ANR	577250	Identifier	params		577218	1					
ANR	577251	PtrMemberAccess	psrc -> params		577218	1					
ANR	577252	Identifier	psrc		577218	0					
ANR	577253	Identifier	params		577218	1					
ANR	577254	ExpressionStatement	pdest -> width = width	341:4:10562:10582	577218	2	True				
ANR	577255	AssignmentExpression	pdest -> width = width		577218	0		=			
ANR	577256	PtrMemberAccess	pdest -> width		577218	0					
ANR	577257	Identifier	pdest		577218	0					
ANR	577258	Identifier	width		577218	1					
ANR	577259	Identifier	width		577218	1					
ANR	577260	ExpressionStatement	pdest -> height = height	342:4:10588:10610	577218	3	True				
ANR	577261	AssignmentExpression	pdest -> height = height		577218	0		=			
ANR	577262	PtrMemberAccess	pdest -> height		577218	0					
ANR	577263	Identifier	pdest		577218	0					
ANR	577264	Identifier	height		577218	1					
ANR	577265	Identifier	height		577218	1					
ANR	577266	ExpressionStatement	pdest -> raster = bitmap_raster ( width )	343:4:10616:10652	577218	4	True				
ANR	577267	AssignmentExpression	pdest -> raster = bitmap_raster ( width )		577218	0		=			
ANR	577268	PtrMemberAccess	pdest -> raster		577218	0					
ANR	577269	Identifier	pdest		577218	0					
ANR	577270	Identifier	raster		577218	1					
ANR	577271	CallExpression	bitmap_raster ( width )		577218	1					
ANR	577272	Callee	bitmap_raster		577218	0					
ANR	577273	Identifier	bitmap_raster		577218	0					
ANR	577274	ArgumentList	width		577218	1					
ANR	577275	Argument	width		577218	0					
ANR	577276	Identifier	width		577218	0					
ANR	577277	ExpressionStatement	pdest -> shift = shift	344:4:10658:10678	577218	5	True				
ANR	577278	AssignmentExpression	pdest -> shift = shift		577218	0		=			
ANR	577279	PtrMemberAccess	pdest -> shift		577218	0					
ANR	577280	Identifier	pdest		577218	0					
ANR	577281	Identifier	shift		577218	1					
ANR	577282	Identifier	shift		577218	1					
ANR	577283	ExpressionStatement	pdest -> orig_height = height	345:4:10684:10711	577218	6	True				
ANR	577284	AssignmentExpression	pdest -> orig_height = height		577218	0		=			
ANR	577285	PtrMemberAccess	pdest -> orig_height		577218	0					
ANR	577286	Identifier	pdest		577218	0					
ANR	577287	Identifier	orig_height		577218	1					
ANR	577288	Identifier	height		577218	1					
ANR	577289	ExpressionStatement	pdest -> orig_shift = shift	346:4:10717:10742	577218	7	True				
ANR	577290	AssignmentExpression	pdest -> orig_shift = shift		577218	0		=			
ANR	577291	PtrMemberAccess	pdest -> orig_shift		577218	0					
ANR	577292	Identifier	pdest		577218	0					
ANR	577293	Identifier	orig_shift		577218	1					
ANR	577294	Identifier	shift		577218	1					
ANR	577295	ExpressionStatement	pdest -> full_height = ht_order_full_height ( pdest )	347:4:10748:10796	577218	8	True				
ANR	577296	AssignmentExpression	pdest -> full_height = ht_order_full_height ( pdest )		577218	0		=			
ANR	577297	PtrMemberAccess	pdest -> full_height		577218	0					
ANR	577298	Identifier	pdest		577218	0					
ANR	577299	Identifier	full_height		577218	1					
ANR	577300	CallExpression	ht_order_full_height ( pdest )		577218	1					
ANR	577301	Callee	ht_order_full_height		577218	0					
ANR	577302	Identifier	ht_order_full_height		577218	0					
ANR	577303	ArgumentList	pdest		577218	1					
ANR	577304	Argument	pdest		577218	0					
ANR	577305	Identifier	pdest		577218	0					
ANR	577306	ExpressionStatement	pdest -> num_levels = psrc -> num_levels	348:4:10802:10838	577218	9	True				
ANR	577307	AssignmentExpression	pdest -> num_levels = psrc -> num_levels		577218	0		=			
ANR	577308	PtrMemberAccess	pdest -> num_levels		577218	0					
ANR	577309	Identifier	pdest		577218	0					
ANR	577310	Identifier	num_levels		577218	1					
ANR	577311	PtrMemberAccess	psrc -> num_levels		577218	1					
ANR	577312	Identifier	psrc		577218	0					
ANR	577313	Identifier	num_levels		577218	1					
ANR	577314	ExpressionStatement	pdest -> num_bits = psrc -> num_bits	349:4:10844:10876	577218	10	True				
ANR	577315	AssignmentExpression	pdest -> num_bits = psrc -> num_bits		577218	0		=			
ANR	577316	PtrMemberAccess	pdest -> num_bits		577218	0					
ANR	577317	Identifier	pdest		577218	0					
ANR	577318	Identifier	num_bits		577218	1					
ANR	577319	PtrMemberAccess	psrc -> num_bits		577218	1					
ANR	577320	Identifier	psrc		577218	0					
ANR	577321	Identifier	num_bits		577218	1					
ANR	577322	ExpressionStatement	pdest -> procs = psrc -> procs	350:4:10882:10908	577218	11	True				
ANR	577323	AssignmentExpression	pdest -> procs = psrc -> procs		577218	0		=			
ANR	577324	PtrMemberAccess	pdest -> procs		577218	0					
ANR	577325	Identifier	pdest		577218	0					
ANR	577326	Identifier	procs		577218	1					
ANR	577327	PtrMemberAccess	psrc -> procs		577218	1					
ANR	577328	Identifier	psrc		577218	0					
ANR	577329	Identifier	procs		577218	1					
ANR	577330	ExpressionStatement	pdest -> data_memory = psrc -> data_memory	351:4:10914:10952	577218	12	True				
ANR	577331	AssignmentExpression	pdest -> data_memory = psrc -> data_memory		577218	0		=			
ANR	577332	PtrMemberAccess	pdest -> data_memory		577218	0					
ANR	577333	Identifier	pdest		577218	0					
ANR	577334	Identifier	data_memory		577218	1					
ANR	577335	PtrMemberAccess	psrc -> data_memory		577218	1					
ANR	577336	Identifier	psrc		577218	0					
ANR	577337	Identifier	data_memory		577218	1					
ANR	577338	ExpressionStatement	pdest -> levels = psrc -> levels	352:4:10958:10986	577218	13	True				
ANR	577339	AssignmentExpression	pdest -> levels = psrc -> levels		577218	0		=			
ANR	577340	PtrMemberAccess	pdest -> levels		577218	0					
ANR	577341	Identifier	pdest		577218	0					
ANR	577342	Identifier	levels		577218	1					
ANR	577343	PtrMemberAccess	psrc -> levels		577218	1					
ANR	577344	Identifier	psrc		577218	0					
ANR	577345	Identifier	levels		577218	1					
ANR	577346	ExpressionStatement	pdest -> bit_data = psrc -> bit_data	353:4:10992:11024	577218	14	True				
ANR	577347	AssignmentExpression	pdest -> bit_data = psrc -> bit_data		577218	0		=			
ANR	577348	PtrMemberAccess	pdest -> bit_data		577218	0					
ANR	577349	Identifier	pdest		577218	0					
ANR	577350	Identifier	bit_data		577218	1					
ANR	577351	PtrMemberAccess	psrc -> bit_data		577218	1					
ANR	577352	Identifier	psrc		577218	0					
ANR	577353	Identifier	bit_data		577218	1					
ANR	577354	ExpressionStatement	pdest -> cache = psrc -> cache	354:4:11030:11056	577218	15	True				
ANR	577355	AssignmentExpression	pdest -> cache = psrc -> cache		577218	0		=			
ANR	577356	PtrMemberAccess	pdest -> cache		577218	0					
ANR	577357	Identifier	pdest		577218	0					
ANR	577358	Identifier	cache		577218	1					
ANR	577359	PtrMemberAccess	psrc -> cache		577218	1					
ANR	577360	Identifier	psrc		577218	0					
ANR	577361	Identifier	cache		577218	1					
ANR	577362	ExpressionStatement	pdest -> transfer = psrc -> transfer	355:4:11083:11115	577218	16	True				
ANR	577363	AssignmentExpression	pdest -> transfer = psrc -> transfer		577218	0		=			
ANR	577364	PtrMemberAccess	pdest -> transfer		577218	0					
ANR	577365	Identifier	pdest		577218	0					
ANR	577366	Identifier	transfer		577218	1					
ANR	577367	PtrMemberAccess	psrc -> transfer		577218	1					
ANR	577368	Identifier	psrc		577218	0					
ANR	577369	Identifier	transfer		577218	1					
ANR	577370	ReturnType	static void		577218	1					
ANR	577371	Identifier	gx_ht_move_ht_order		577218	2					
ANR	577372	ParameterList	"gx_ht_order * pdest , gx_ht_order * psrc"		577218	3					
ANR	577373	Parameter	gx_ht_order * pdest	336:20:10403:10421	577218	0	True				
ANR	577374	ParameterType	gx_ht_order *		577218	0					
ANR	577375	Identifier	pdest		577218	1					
ANR	577376	Parameter	gx_ht_order * psrc	336:41:10424:10441	577218	1	True				
ANR	577377	ParameterType	gx_ht_order *		577218	0					
ANR	577378	Identifier	psrc		577218	1					
ANR	577379	CFGEntryNode	ENTRY		577218		True				
ANR	577380	CFGExitNode	EXIT		577218		True				
ANR	577381	Symbol	psrc		577218						
ANR	577382	Symbol	psrc -> cache		577218						
ANR	577383	Symbol	pdest -> bit_data		577218						
ANR	577384	Symbol	shift		577218						
ANR	577385	Symbol	psrc -> params		577218						
ANR	577386	Symbol	* psrc		577218						
ANR	577387	Symbol	pdest -> orig_shift		577218						
ANR	577388	Symbol	pdest -> data_memory		577218						
ANR	577389	Symbol	pdest		577218						
ANR	577390	Symbol	pdest -> procs		577218						
ANR	577391	Symbol	ht_order_full_height		577218						
ANR	577392	Symbol	pdest -> cache		577218						
ANR	577393	Symbol	pdest -> height		577218						
ANR	577394	Symbol	pdest -> full_height		577218						
ANR	577395	Symbol	pdest -> orig_height		577218						
ANR	577396	Symbol	psrc -> data_memory		577218						
ANR	577397	Symbol	pdest -> transfer		577218						
ANR	577398	Symbol	pdest -> num_levels		577218						
ANR	577399	Symbol	psrc -> levels		577218						
ANR	577400	Symbol	psrc -> shift		577218						
ANR	577401	Symbol	height		577218						
ANR	577402	Symbol	psrc -> width		577218						
ANR	577403	Symbol	pdest -> num_bits		577218						
ANR	577404	Symbol	pdest -> raster		577218						
ANR	577405	Symbol	psrc -> procs		577218						
ANR	577406	Symbol	psrc -> height		577218						
ANR	577407	Symbol	* pdest		577218						
ANR	577408	Symbol	psrc -> transfer		577218						
ANR	577409	Symbol	pdest -> levels		577218						
ANR	577410	Symbol	pdest -> width		577218						
ANR	577411	Symbol	psrc -> num_levels		577218						
ANR	577412	Symbol	bitmap_raster		577218						
ANR	577413	Symbol	psrc -> num_bits		577218						
ANR	577414	Symbol	psrc -> bit_data		577218						
ANR	577415	Symbol	pdest -> params		577218						
ANR	577416	Symbol	pdest -> shift		577218						
ANR	577417	Symbol	width		577218						
ANR	577418	Function	gx_ht_alloc_order	360:0:11254:11764							
ANR	577419	FunctionDef	"gx_ht_alloc_order (gx_ht_order * porder , uint width , uint height , uint strip_shift , uint num_levels , gs_memory_t * mem)"		577418	0					
ANR	577420	CompoundStatement		363:0:11395:11764	577418	0					
ANR	577421	IdentifierDeclStatement	gx_ht_order order ;	364:4:11401:11418	577418	0	True				
ANR	577422	IdentifierDecl	order		577418	0					
ANR	577423	IdentifierDeclType	gx_ht_order		577418	0					
ANR	577424	Identifier	order		577418	1					
ANR	577425	IdentifierDeclStatement	int code ;	365:4:11424:11432	577418	1	True				
ANR	577426	IdentifierDecl	code		577418	0					
ANR	577427	IdentifierDeclType	int		577418	0					
ANR	577428	Identifier	code		577418	1					
ANR	577429	ExpressionStatement	order = * porder	367:4:11439:11454	577418	2	True				
ANR	577430	AssignmentExpression	order = * porder		577418	0		=			
ANR	577431	Identifier	order		577418	0					
ANR	577432	UnaryOperationExpression	* porder		577418	1					
ANR	577433	UnaryOperator	*		577418	0					
ANR	577434	Identifier	porder		577418	1					
ANR	577435	ExpressionStatement	gx_compute_cell_values ( & order . params )	368:4:11460:11497	577418	3	True				
ANR	577436	CallExpression	gx_compute_cell_values ( & order . params )		577418	0					
ANR	577437	Callee	gx_compute_cell_values		577418	0					
ANR	577438	Identifier	gx_compute_cell_values		577418	0					
ANR	577439	ArgumentList	& order . params		577418	1					
ANR	577440	Argument	& order . params		577418	0					
ANR	577441	UnaryOperationExpression	& order . params		577418	0					
ANR	577442	UnaryOperator	&		577418	0					
ANR	577443	MemberAccess	order . params		577418	1					
ANR	577444	Identifier	order		577418	0					
ANR	577445	Identifier	params		577418	1					
ANR	577446	ExpressionStatement	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , strip_shift , & ht_order_procs_default , mem )"	369:4:11503:11688	577418	4	True				
ANR	577447	AssignmentExpression	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , strip_shift , & ht_order_procs_default , mem )"		577418	0		=			
ANR	577448	Identifier	code		577418	0					
ANR	577449	CallExpression	"gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , strip_shift , & ht_order_procs_default , mem )"		577418	1					
ANR	577450	Callee	gx_ht_alloc_ht_order		577418	0					
ANR	577451	Identifier	gx_ht_alloc_ht_order		577418	0					
ANR	577452	ArgumentList	& order		577418	1					
ANR	577453	Argument	& order		577418	0					
ANR	577454	UnaryOperationExpression	& order		577418	0					
ANR	577455	UnaryOperator	&		577418	0					
ANR	577456	Identifier	order		577418	1					
ANR	577457	Argument	width		577418	1					
ANR	577458	Identifier	width		577418	0					
ANR	577459	Argument	height		577418	2					
ANR	577460	Identifier	height		577418	0					
ANR	577461	Argument	num_levels		577418	3					
ANR	577462	Identifier	num_levels		577418	0					
ANR	577463	Argument	width * height		577418	4					
ANR	577464	MultiplicativeExpression	width * height		577418	0		*			
ANR	577465	Identifier	width		577418	0					
ANR	577466	Identifier	height		577418	1					
ANR	577467	Argument	strip_shift		577418	5					
ANR	577468	Identifier	strip_shift		577418	0					
ANR	577469	Argument	& ht_order_procs_default		577418	6					
ANR	577470	UnaryOperationExpression	& ht_order_procs_default		577418	0					
ANR	577471	UnaryOperator	&		577418	0					
ANR	577472	Identifier	ht_order_procs_default		577418	1					
ANR	577473	Argument	mem		577418	7					
ANR	577474	Identifier	mem		577418	0					
ANR	577475	IfStatement	if ( code < 0 )		577418	5					
ANR	577476	Condition	code < 0	372:8:11698:11705	577418	0	True				
ANR	577477	RelationalExpression	code < 0		577418	0		<			
ANR	577478	Identifier	code		577418	0					
ANR	577479	PrimaryExpression	0		577418	1					
ANR	577480	ReturnStatement	return code ;	373:8:11716:11727	577418	1	True				
ANR	577481	Identifier	code		577418	0					
ANR	577482	ExpressionStatement	* porder = order	374:4:11733:11748	577418	6	True				
ANR	577483	AssignmentExpression	* porder = order		577418	0		=			
ANR	577484	UnaryOperationExpression	* porder		577418	0					
ANR	577485	UnaryOperator	*		577418	0					
ANR	577486	Identifier	porder		577418	1					
ANR	577487	Identifier	order		577418	1					
ANR	577488	ReturnStatement	return 0 ;	375:4:11754:11762	577418	7	True				
ANR	577489	PrimaryExpression	0		577418	0					
ANR	577490	ReturnType	int		577418	1					
ANR	577491	Identifier	gx_ht_alloc_order		577418	2					
ANR	577492	ParameterList	"gx_ht_order * porder , uint width , uint height , uint strip_shift , uint num_levels , gs_memory_t * mem"		577418	3					
ANR	577493	Parameter	gx_ht_order * porder	361:18:11276:11295	577418	0	True				
ANR	577494	ParameterType	gx_ht_order *		577418	0					
ANR	577495	Identifier	porder		577418	1					
ANR	577496	Parameter	uint width	361:40:11298:11307	577418	1	True				
ANR	577497	ParameterType	uint		577418	0					
ANR	577498	Identifier	width		577418	1					
ANR	577499	Parameter	uint height	361:52:11310:11320	577418	2	True				
ANR	577500	ParameterType	uint		577418	0					
ANR	577501	Identifier	height		577418	1					
ANR	577502	Parameter	uint strip_shift	362:18:11341:11356	577418	3	True				
ANR	577503	ParameterType	uint		577418	0					
ANR	577504	Identifier	strip_shift		577418	1					
ANR	577505	Parameter	uint num_levels	362:36:11359:11373	577418	4	True				
ANR	577506	ParameterType	uint		577418	0					
ANR	577507	Identifier	num_levels		577418	1					
ANR	577508	Parameter	gs_memory_t * mem	362:53:11376:11392	577418	5	True				
ANR	577509	ParameterType	gs_memory_t *		577418	0					
ANR	577510	Identifier	mem		577418	1					
ANR	577511	CFGEntryNode	ENTRY		577418		True				
ANR	577512	CFGExitNode	EXIT		577418		True				
ANR	577513	Symbol	code		577418						
ANR	577514	Symbol	& order . params		577418						
ANR	577515	Symbol	& order		577418						
ANR	577516	Symbol	porder		577418						
ANR	577517	Symbol	strip_shift		577418						
ANR	577518	Symbol	mem		577418						
ANR	577519	Symbol	& ht_order_procs_default		577418						
ANR	577520	Symbol	width		577418						
ANR	577521	Symbol	* porder		577418						
ANR	577522	Symbol	gx_ht_alloc_ht_order		577418						
ANR	577523	Symbol	height		577418						
ANR	577524	Symbol	num_levels		577418						
ANR	577525	Symbol	order		577418						
ANR	577526	Function	gx_ht_alloc_threshold_order	382:0:11863:12502							
ANR	577527	FunctionDef	"gx_ht_alloc_threshold_order (gx_ht_order * porder , uint width , uint height , uint num_levels , gs_memory_t * mem)"		577526	0					
ANR	577528	CompoundStatement		385:0:12006:12502	577526	0					
ANR	577529	IdentifierDeclStatement	gx_ht_order order ;	386:4:12012:12029	577526	0	True				
ANR	577530	IdentifierDecl	order		577526	0					
ANR	577531	IdentifierDeclType	gx_ht_order		577526	0					
ANR	577532	Identifier	order		577526	1					
ANR	577533	IdentifierDeclStatement	uint num_bits = width * height ;	387:4:12035:12065	577526	1	True				
ANR	577534	IdentifierDecl	num_bits = width * height		577526	0					
ANR	577535	IdentifierDeclType	uint		577526	0					
ANR	577536	Identifier	num_bits		577526	1					
ANR	577537	AssignmentExpression	num_bits = width * height		577526	2		=			
ANR	577538	Identifier	num_bits		577526	0					
ANR	577539	MultiplicativeExpression	width * height		577526	1		*			
ANR	577540	Identifier	width		577526	0					
ANR	577541	Identifier	height		577526	1					
ANR	577542	IdentifierDeclStatement	const gx_ht_order_procs_t * procs = ( num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default ) ;	388:4:12071:12216	577526	2	True				
ANR	577543	IdentifierDecl	* procs = ( num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default )		577526	0					
ANR	577544	IdentifierDeclType	const gx_ht_order_procs_t *		577526	0					
ANR	577545	Identifier	procs		577526	1					
ANR	577546	AssignmentExpression	* procs = ( num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default )		577526	2		=			
ANR	577547	Identifier	procs		577526	0					
ANR	577548	ConditionalExpression	num_bits > 2000 && num_bits <= max_ushort ? & ht_order_procs_short : & ht_order_procs_default		577526	1					
ANR	577549	Condition	num_bits > 2000 && num_bits <= max_ushort		577526	0					
ANR	577550	AndExpression	num_bits > 2000 && num_bits <= max_ushort		577526	0		&&			
ANR	577551	RelationalExpression	num_bits > 2000		577526	0		>			
ANR	577552	Identifier	num_bits		577526	0					
ANR	577553	PrimaryExpression	2000		577526	1					
ANR	577554	RelationalExpression	num_bits <= max_ushort		577526	1		<=			
ANR	577555	Identifier	num_bits		577526	0					
ANR	577556	Identifier	max_ushort		577526	1					
ANR	577557	UnaryOperationExpression	& ht_order_procs_short		577526	1					
ANR	577558	UnaryOperator	&		577526	0					
ANR	577559	Identifier	ht_order_procs_short		577526	1					
ANR	577560	UnaryOperationExpression	& ht_order_procs_default		577526	2					
ANR	577561	UnaryOperator	&		577526	0					
ANR	577562	Identifier	ht_order_procs_default		577526	1					
ANR	577563	IdentifierDeclStatement	int code ;	391:4:12222:12230	577526	3	True				
ANR	577564	IdentifierDecl	code		577526	0					
ANR	577565	IdentifierDeclType	int		577526	0					
ANR	577566	Identifier	code		577526	1					
ANR	577567	ExpressionStatement	order = * porder	393:4:12237:12252	577526	4	True				
ANR	577568	AssignmentExpression	order = * porder		577526	0		=			
ANR	577569	Identifier	order		577526	0					
ANR	577570	UnaryOperationExpression	* porder		577526	1					
ANR	577571	UnaryOperator	*		577526	0					
ANR	577572	Identifier	porder		577526	1					
ANR	577573	ExpressionStatement	gx_compute_cell_values ( & order . params )	394:4:12258:12295	577526	5	True				
ANR	577574	CallExpression	gx_compute_cell_values ( & order . params )		577526	0					
ANR	577575	Callee	gx_compute_cell_values		577526	0					
ANR	577576	Identifier	gx_compute_cell_values		577526	0					
ANR	577577	ArgumentList	& order . params		577526	1					
ANR	577578	Argument	& order . params		577526	0					
ANR	577579	UnaryOperationExpression	& order . params		577526	0					
ANR	577580	UnaryOperator	&		577526	0					
ANR	577581	MemberAccess	order . params		577526	1					
ANR	577582	Identifier	order		577526	0					
ANR	577583	Identifier	params		577526	1					
ANR	577584	ExpressionStatement	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , 0 , procs , mem )"	395:4:12301:12426	577526	6	True				
ANR	577585	AssignmentExpression	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , 0 , procs , mem )"		577526	0		=			
ANR	577586	Identifier	code		577526	0					
ANR	577587	CallExpression	"gx_ht_alloc_ht_order ( & order , width , height , num_levels , width * height , 0 , procs , mem )"		577526	1					
ANR	577588	Callee	gx_ht_alloc_ht_order		577526	0					
ANR	577589	Identifier	gx_ht_alloc_ht_order		577526	0					
ANR	577590	ArgumentList	& order		577526	1					
ANR	577591	Argument	& order		577526	0					
ANR	577592	UnaryOperationExpression	& order		577526	0					
ANR	577593	UnaryOperator	&		577526	0					
ANR	577594	Identifier	order		577526	1					
ANR	577595	Argument	width		577526	1					
ANR	577596	Identifier	width		577526	0					
ANR	577597	Argument	height		577526	2					
ANR	577598	Identifier	height		577526	0					
ANR	577599	Argument	num_levels		577526	3					
ANR	577600	Identifier	num_levels		577526	0					
ANR	577601	Argument	width * height		577526	4					
ANR	577602	MultiplicativeExpression	width * height		577526	0		*			
ANR	577603	Identifier	width		577526	0					
ANR	577604	Identifier	height		577526	1					
ANR	577605	Argument	0		577526	5					
ANR	577606	PrimaryExpression	0		577526	0					
ANR	577607	Argument	procs		577526	6					
ANR	577608	Identifier	procs		577526	0					
ANR	577609	Argument	mem		577526	7					
ANR	577610	Identifier	mem		577526	0					
ANR	577611	IfStatement	if ( code < 0 )		577526	7					
ANR	577612	Condition	code < 0	397:8:12436:12443	577526	0	True				
ANR	577613	RelationalExpression	code < 0		577526	0		<			
ANR	577614	Identifier	code		577526	0					
ANR	577615	PrimaryExpression	0		577526	1					
ANR	577616	ReturnStatement	return code ;	398:8:12454:12465	577526	1	True				
ANR	577617	Identifier	code		577526	0					
ANR	577618	ExpressionStatement	* porder = order	399:4:12471:12486	577526	8	True				
ANR	577619	AssignmentExpression	* porder = order		577526	0		=			
ANR	577620	UnaryOperationExpression	* porder		577526	0					
ANR	577621	UnaryOperator	*		577526	0					
ANR	577622	Identifier	porder		577526	1					
ANR	577623	Identifier	order		577526	1					
ANR	577624	ReturnStatement	return 0 ;	400:4:12492:12500	577526	9	True				
ANR	577625	PrimaryExpression	0		577526	0					
ANR	577626	ReturnType	int		577526	1					
ANR	577627	Identifier	gx_ht_alloc_threshold_order		577526	2					
ANR	577628	ParameterList	"gx_ht_order * porder , uint width , uint height , uint num_levels , gs_memory_t * mem"		577526	3					
ANR	577629	Parameter	gx_ht_order * porder	383:28:11895:11914	577526	0	True				
ANR	577630	ParameterType	gx_ht_order *		577526	0					
ANR	577631	Identifier	porder		577526	1					
ANR	577632	Parameter	uint width	383:50:11917:11926	577526	1	True				
ANR	577633	ParameterType	uint		577526	0					
ANR	577634	Identifier	width		577526	1					
ANR	577635	Parameter	uint height	383:62:11929:11939	577526	2	True				
ANR	577636	ParameterType	uint		577526	0					
ANR	577637	Identifier	height		577526	1					
ANR	577638	Parameter	uint num_levels	384:28:11970:11984	577526	3	True				
ANR	577639	ParameterType	uint		577526	0					
ANR	577640	Identifier	num_levels		577526	1					
ANR	577641	Parameter	gs_memory_t * mem	384:45:11987:12003	577526	4	True				
ANR	577642	ParameterType	gs_memory_t *		577526	0					
ANR	577643	Identifier	mem		577526	1					
ANR	577644	CFGEntryNode	ENTRY		577526		True				
ANR	577645	CFGExitNode	EXIT		577526		True				
ANR	577646	Symbol	procs		577526						
ANR	577647	Symbol	code		577526						
ANR	577648	Symbol	& order . params		577526						
ANR	577649	Symbol	& ht_order_procs_short		577526						
ANR	577650	Symbol	& order		577526						
ANR	577651	Symbol	porder		577526						
ANR	577652	Symbol	mem		577526						
ANR	577653	Symbol	& ht_order_procs_default		577526						
ANR	577654	Symbol	width		577526						
ANR	577655	Symbol	num_bits		577526						
ANR	577656	Symbol	* porder		577526						
ANR	577657	Symbol	gx_ht_alloc_ht_order		577526						
ANR	577658	Symbol	max_ushort		577526						
ANR	577659	Symbol	height		577526						
ANR	577660	Symbol	num_levels		577526						
ANR	577661	Symbol	order		577526						
ANR	577662	Function	gx_ht_alloc_client_order	404:0:12584:13205							
ANR	577663	FunctionDef	"gx_ht_alloc_client_order (gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , gs_memory_t * mem)"		577662	0					
ANR	577664	CompoundStatement		407:0:12736:13205	577662	0					
ANR	577665	IdentifierDeclStatement	gx_ht_order order ;	408:4:12742:12759	577662	0	True				
ANR	577666	IdentifierDecl	order		577662	0					
ANR	577667	IdentifierDeclType	gx_ht_order		577662	0					
ANR	577668	Identifier	order		577662	1					
ANR	577669	IdentifierDeclStatement	int code ;	409:4:12765:12773	577662	1	True				
ANR	577670	IdentifierDecl	code		577662	0					
ANR	577671	IdentifierDeclType	int		577662	0					
ANR	577672	Identifier	code		577662	1					
ANR	577673	ExpressionStatement	order = * porder	411:4:12780:12795	577662	2	True				
ANR	577674	AssignmentExpression	order = * porder		577662	0		=			
ANR	577675	Identifier	order		577662	0					
ANR	577676	UnaryOperationExpression	* porder		577662	1					
ANR	577677	UnaryOperator	*		577662	0					
ANR	577678	Identifier	porder		577662	1					
ANR	577679	ExpressionStatement	"order . params . M = width , order . params . N = 0"	412:4:12801:12843	577662	3	True				
ANR	577680	Expression	"order . params . M = width , order . params . N = 0"		577662	0					
ANR	577681	AssignmentExpression	order . params . M = width		577662	0		=			
ANR	577682	MemberAccess	order . params . M		577662	0					
ANR	577683	MemberAccess	order . params		577662	0					
ANR	577684	Identifier	order		577662	0					
ANR	577685	Identifier	params		577662	1					
ANR	577686	Identifier	M		577662	1					
ANR	577687	Identifier	width		577662	1					
ANR	577688	AssignmentExpression	order . params . N = 0		577662	1		=			
ANR	577689	MemberAccess	order . params . N		577662	0					
ANR	577690	MemberAccess	order . params		577662	0					
ANR	577691	Identifier	order		577662	0					
ANR	577692	Identifier	params		577662	1					
ANR	577693	Identifier	N		577662	1					
ANR	577694	PrimaryExpression	0		577662	1					
ANR	577695	ExpressionStatement	order . params . R = 1	413:4:12849:12867	577662	4	True				
ANR	577696	AssignmentExpression	order . params . R = 1		577662	0		=			
ANR	577697	MemberAccess	order . params . R		577662	0					
ANR	577698	MemberAccess	order . params		577662	0					
ANR	577699	Identifier	order		577662	0					
ANR	577700	Identifier	params		577662	1					
ANR	577701	Identifier	R		577662	1					
ANR	577702	PrimaryExpression	1		577662	1					
ANR	577703	ExpressionStatement	"order . params . M1 = height , order . params . N1 = 0"	414:4:12873:12918	577662	5	True				
ANR	577704	Expression	"order . params . M1 = height , order . params . N1 = 0"		577662	0					
ANR	577705	AssignmentExpression	order . params . M1 = height		577662	0		=			
ANR	577706	MemberAccess	order . params . M1		577662	0					
ANR	577707	MemberAccess	order . params		577662	0					
ANR	577708	Identifier	order		577662	0					
ANR	577709	Identifier	params		577662	1					
ANR	577710	Identifier	M1		577662	1					
ANR	577711	Identifier	height		577662	1					
ANR	577712	AssignmentExpression	order . params . N1 = 0		577662	1		=			
ANR	577713	MemberAccess	order . params . N1		577662	0					
ANR	577714	MemberAccess	order . params		577662	0					
ANR	577715	Identifier	order		577662	0					
ANR	577716	Identifier	params		577662	1					
ANR	577717	Identifier	N1		577662	1					
ANR	577718	PrimaryExpression	0		577662	1					
ANR	577719	ExpressionStatement	order . params . R1 = 1	415:4:12924:12943	577662	6	True				
ANR	577720	AssignmentExpression	order . params . R1 = 1		577662	0		=			
ANR	577721	MemberAccess	order . params . R1		577662	0					
ANR	577722	MemberAccess	order . params		577662	0					
ANR	577723	Identifier	order		577662	0					
ANR	577724	Identifier	params		577662	1					
ANR	577725	Identifier	R1		577662	1					
ANR	577726	PrimaryExpression	1		577662	1					
ANR	577727	ExpressionStatement	gx_compute_cell_values ( & order . params )	416:4:12949:12986	577662	7	True				
ANR	577728	CallExpression	gx_compute_cell_values ( & order . params )		577662	0					
ANR	577729	Callee	gx_compute_cell_values		577662	0					
ANR	577730	Identifier	gx_compute_cell_values		577662	0					
ANR	577731	ArgumentList	& order . params		577662	1					
ANR	577732	Argument	& order . params		577662	0					
ANR	577733	UnaryOperationExpression	& order . params		577662	0					
ANR	577734	UnaryOperator	&		577662	0					
ANR	577735	MemberAccess	order . params		577662	1					
ANR	577736	Identifier	order		577662	0					
ANR	577737	Identifier	params		577662	1					
ANR	577738	ExpressionStatement	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , num_bits , 0 , & ht_order_procs_default , mem )"	417:4:12992:13129	577662	8	True				
ANR	577739	AssignmentExpression	"code = gx_ht_alloc_ht_order ( & order , width , height , num_levels , num_bits , 0 , & ht_order_procs_default , mem )"		577662	0		=			
ANR	577740	Identifier	code		577662	0					
ANR	577741	CallExpression	"gx_ht_alloc_ht_order ( & order , width , height , num_levels , num_bits , 0 , & ht_order_procs_default , mem )"		577662	1					
ANR	577742	Callee	gx_ht_alloc_ht_order		577662	0					
ANR	577743	Identifier	gx_ht_alloc_ht_order		577662	0					
ANR	577744	ArgumentList	& order		577662	1					
ANR	577745	Argument	& order		577662	0					
ANR	577746	UnaryOperationExpression	& order		577662	0					
ANR	577747	UnaryOperator	&		577662	0					
ANR	577748	Identifier	order		577662	1					
ANR	577749	Argument	width		577662	1					
ANR	577750	Identifier	width		577662	0					
ANR	577751	Argument	height		577662	2					
ANR	577752	Identifier	height		577662	0					
ANR	577753	Argument	num_levels		577662	3					
ANR	577754	Identifier	num_levels		577662	0					
ANR	577755	Argument	num_bits		577662	4					
ANR	577756	Identifier	num_bits		577662	0					
ANR	577757	Argument	0		577662	5					
ANR	577758	PrimaryExpression	0		577662	0					
ANR	577759	Argument	& ht_order_procs_default		577662	6					
ANR	577760	UnaryOperationExpression	& ht_order_procs_default		577662	0					
ANR	577761	UnaryOperator	&		577662	0					
ANR	577762	Identifier	ht_order_procs_default		577662	1					
ANR	577763	Argument	mem		577662	7					
ANR	577764	Identifier	mem		577662	0					
ANR	577765	IfStatement	if ( code < 0 )		577662	9					
ANR	577766	Condition	code < 0	419:8:13139:13146	577662	0	True				
ANR	577767	RelationalExpression	code < 0		577662	0		<			
ANR	577768	Identifier	code		577662	0					
ANR	577769	PrimaryExpression	0		577662	1					
ANR	577770	ReturnStatement	return code ;	420:8:13157:13168	577662	1	True				
ANR	577771	Identifier	code		577662	0					
ANR	577772	ExpressionStatement	* porder = order	421:4:13174:13189	577662	10	True				
ANR	577773	AssignmentExpression	* porder = order		577662	0		=			
ANR	577774	UnaryOperationExpression	* porder		577662	0					
ANR	577775	UnaryOperator	*		577662	0					
ANR	577776	Identifier	porder		577662	1					
ANR	577777	Identifier	order		577662	1					
ANR	577778	ReturnStatement	return 0 ;	422:4:13195:13203	577662	11	True				
ANR	577779	PrimaryExpression	0		577662	0					
ANR	577780	ReturnType	int		577662	1					
ANR	577781	Identifier	gx_ht_alloc_client_order		577662	2					
ANR	577782	ParameterList	"gx_ht_order * porder , uint width , uint height , uint num_levels , uint num_bits , gs_memory_t * mem"		577662	3					
ANR	577783	Parameter	gx_ht_order * porder	405:25:12613:12632	577662	0	True				
ANR	577784	ParameterType	gx_ht_order *		577662	0					
ANR	577785	Identifier	porder		577662	1					
ANR	577786	Parameter	uint width	405:47:12635:12644	577662	1	True				
ANR	577787	ParameterType	uint		577662	0					
ANR	577788	Identifier	width		577662	1					
ANR	577789	Parameter	uint height	405:59:12647:12657	577662	2	True				
ANR	577790	ParameterType	uint		577662	0					
ANR	577791	Identifier	height		577662	1					
ANR	577792	Parameter	uint num_levels	406:25:12685:12699	577662	3	True				
ANR	577793	ParameterType	uint		577662	0					
ANR	577794	Identifier	num_levels		577662	1					
ANR	577795	Parameter	uint num_bits	406:42:12702:12714	577662	4	True				
ANR	577796	ParameterType	uint		577662	0					
ANR	577797	Identifier	num_bits		577662	1					
ANR	577798	Parameter	gs_memory_t * mem	406:57:12717:12733	577662	5	True				
ANR	577799	ParameterType	gs_memory_t *		577662	0					
ANR	577800	Identifier	mem		577662	1					
ANR	577801	CFGEntryNode	ENTRY		577662		True				
ANR	577802	CFGExitNode	EXIT		577662		True				
ANR	577803	Symbol	code		577662						
ANR	577804	Symbol	order . params . R		577662						
ANR	577805	Symbol	& order . params		577662						
ANR	577806	Symbol	order . params		577662						
ANR	577807	Symbol	order . params . N		577662						
ANR	577808	Symbol	order . params . M		577662						
ANR	577809	Symbol	& order		577662						
ANR	577810	Symbol	porder		577662						
ANR	577811	Symbol	order . params . R1		577662						
ANR	577812	Symbol	mem		577662						
ANR	577813	Symbol	& ht_order_procs_default		577662						
ANR	577814	Symbol	width		577662						
ANR	577815	Symbol	order . params . M1		577662						
ANR	577816	Symbol	num_bits		577662						
ANR	577817	Symbol	order . params . N1		577662						
ANR	577818	Symbol	* porder		577662						
ANR	577819	Symbol	gx_ht_alloc_ht_order		577662						
ANR	577820	Symbol	height		577662						
ANR	577821	Symbol	num_levels		577662						
ANR	577822	Symbol	order		577662						
ANR	577823	Function	compare_samples	426:0:13272:13666							
ANR	577824	FunctionDef	"compare_samples (const void * p1 , const void * p2)"		577823	0					
ANR	577825	CompoundStatement		428:0:13331:13666	577823	0					
ANR	577826	IdentifierDeclStatement	ht_sample_t m1 = ( ( const gx_ht_bit * ) p1 ) -> mask ;	429:4:13337:13383	577823	0	True				
ANR	577827	IdentifierDecl	m1 = ( ( const gx_ht_bit * ) p1 ) -> mask		577823	0					
ANR	577828	IdentifierDeclType	ht_sample_t		577823	0					
ANR	577829	Identifier	m1		577823	1					
ANR	577830	AssignmentExpression	m1 = ( ( const gx_ht_bit * ) p1 ) -> mask		577823	2		=			
ANR	577831	Identifier	m1		577823	0					
ANR	577832	PtrMemberAccess	( ( const gx_ht_bit * ) p1 ) -> mask		577823	1					
ANR	577833	CastExpression	( const gx_ht_bit * ) p1		577823	0					
ANR	577834	CastTarget	const gx_ht_bit *		577823	0					
ANR	577835	Identifier	p1		577823	1					
ANR	577836	Identifier	mask		577823	1					
ANR	577837	IdentifierDeclStatement	ht_sample_t m2 = ( ( const gx_ht_bit * ) p2 ) -> mask ;	430:4:13389:13435	577823	1	True				
ANR	577838	IdentifierDecl	m2 = ( ( const gx_ht_bit * ) p2 ) -> mask		577823	0					
ANR	577839	IdentifierDeclType	ht_sample_t		577823	0					
ANR	577840	Identifier	m2		577823	1					
ANR	577841	AssignmentExpression	m2 = ( ( const gx_ht_bit * ) p2 ) -> mask		577823	2		=			
ANR	577842	Identifier	m2		577823	0					
ANR	577843	PtrMemberAccess	( ( const gx_ht_bit * ) p2 ) -> mask		577823	1					
ANR	577844	CastExpression	( const gx_ht_bit * ) p2		577823	0					
ANR	577845	CastTarget	const gx_ht_bit *		577823	0					
ANR	577846	Identifier	p2		577823	1					
ANR	577847	Identifier	mask		577823	1					
ANR	577848	IfStatement	if ( m1 == m2 )		577823	2					
ANR	577849	Condition	m1 == m2	433:8:13520:13525	577823	0	True				
ANR	577850	EqualityExpression	m1 == m2		577823	0		==			
ANR	577851	Identifier	m1		577823	0					
ANR	577852	Identifier	m2		577823	1					
ANR	577853	CompoundStatement		6:16:196:196	577823	1					
ANR	577854	ExpressionStatement	m1 = ( ( const gx_ht_bit * ) p1 ) -> offset	434:6:13536:13570	577823	0	True				
ANR	577855	AssignmentExpression	m1 = ( ( const gx_ht_bit * ) p1 ) -> offset		577823	0		=			
ANR	577856	Identifier	m1		577823	0					
ANR	577857	PtrMemberAccess	( ( const gx_ht_bit * ) p1 ) -> offset		577823	1					
ANR	577858	CastExpression	( const gx_ht_bit * ) p1		577823	0					
ANR	577859	CastTarget	const gx_ht_bit *		577823	0					
ANR	577860	Identifier	p1		577823	1					
ANR	577861	Identifier	offset		577823	1					
ANR	577862	ExpressionStatement	m2 = ( ( const gx_ht_bit * ) p2 ) -> offset	435:6:13578:13612	577823	1	True				
ANR	577863	AssignmentExpression	m2 = ( ( const gx_ht_bit * ) p2 ) -> offset		577823	0		=			
ANR	577864	Identifier	m2		577823	0					
ANR	577865	PtrMemberAccess	( ( const gx_ht_bit * ) p2 ) -> offset		577823	1					
ANR	577866	CastExpression	( const gx_ht_bit * ) p2		577823	0					
ANR	577867	CastTarget	const gx_ht_bit *		577823	0					
ANR	577868	Identifier	p2		577823	1					
ANR	577869	Identifier	offset		577823	1					
ANR	577870	ReturnStatement	return ( m1 < m2 ? - 1 : m1 > m2 ? 1 : 0 ) ;	438:4:13625:13664	577823	3	True				
ANR	577871	ConditionalExpression	m1 < m2 ? - 1 : m1 > m2 ? 1 : 0		577823	0					
ANR	577872	Condition	m1 < m2		577823	0					
ANR	577873	RelationalExpression	m1 < m2		577823	0		<			
ANR	577874	Identifier	m1		577823	0					
ANR	577875	Identifier	m2		577823	1					
ANR	577876	UnaryOperationExpression	- 1		577823	1					
ANR	577877	UnaryOperator	-		577823	0					
ANR	577878	PrimaryExpression	1		577823	1					
ANR	577879	ConditionalExpression	m1 > m2 ? 1 : 0		577823	2					
ANR	577880	Condition	m1 > m2		577823	0					
ANR	577881	RelationalExpression	m1 > m2		577823	0		>			
ANR	577882	Identifier	m1		577823	0					
ANR	577883	Identifier	m2		577823	1					
ANR	577884	PrimaryExpression	1		577823	1					
ANR	577885	PrimaryExpression	0		577823	2					
ANR	577886	ReturnType	static int		577823	1					
ANR	577887	Identifier	compare_samples		577823	2					
ANR	577888	ParameterList	"const void * p1 , const void * p2"		577823	3					
ANR	577889	Parameter	const void * p1	427:16:13299:13312	577823	0	True				
ANR	577890	ParameterType	const void *		577823	0					
ANR	577891	Identifier	p1		577823	1					
ANR	577892	Parameter	const void * p2	427:32:13315:13328	577823	1	True				
ANR	577893	ParameterType	const void *		577823	0					
ANR	577894	Identifier	p2		577823	1					
ANR	577895	CFGEntryNode	ENTRY		577823		True				
ANR	577896	CFGExitNode	EXIT		577823		True				
ANR	577897	Symbol	p1		577823						
ANR	577898	Symbol	p2		577823						
ANR	577899	Symbol	m1		577823						
ANR	577900	Symbol	* p1		577823						
ANR	577901	Symbol	( ( const gx_ht_bit * ) p2 ) -> mask		577823						
ANR	577902	Symbol	m2		577823						
ANR	577903	Symbol	( ( const gx_ht_bit * ) p2 ) -> offset		577823						
ANR	577904	Symbol	* p2		577823						
ANR	577905	Symbol	( ( const gx_ht_bit * ) p1 ) -> offset		577823						
ANR	577906	Symbol	( ( const gx_ht_bit * ) p1 ) -> mask		577823						
ANR	577907	Function	gx_sort_ht_order	441:0:13715:14215							
ANR	577908	FunctionDef	"gx_sort_ht_order (gx_ht_bit * recs , uint N)"		577907	0					
ANR	577909	CompoundStatement		443:0:13763:14215	577907	0					
ANR	577910	IdentifierDeclStatement	int i ;	444:4:13769:13774	577907	0	True				
ANR	577911	IdentifierDecl	i		577907	0					
ANR	577912	IdentifierDeclType	int		577907	0					
ANR	577913	Identifier	i		577907	1					
ANR	577914	ForStatement	for ( i = 0 ; i < N ; i ++ )		577907	1					
ANR	577915	ForInit	i = 0 ;	447:9:13841:13846	577907	0	True				
ANR	577916	AssignmentExpression	i = 0		577907	0		=			
ANR	577917	Identifier	i		577907	0					
ANR	577918	PrimaryExpression	0		577907	1					
ANR	577919	Condition	i < N	447:16:13848:13852	577907	1	True				
ANR	577920	RelationalExpression	i < N		577907	0		<			
ANR	577921	Identifier	i		577907	0					
ANR	577922	Identifier	N		577907	1					
ANR	577923	PostIncDecOperationExpression	i ++	447:23:13855:13857	577907	2	True				
ANR	577924	Identifier	i		577907	0					
ANR	577925	IncDec	++		577907	1					
ANR	577926	ExpressionStatement	recs [ i ] . offset = i	448:8:13868:13886	577907	3	True				
ANR	577927	AssignmentExpression	recs [ i ] . offset = i		577907	0		=			
ANR	577928	MemberAccess	recs [ i ] . offset		577907	0					
ANR	577929	ArrayIndexing	recs [ i ]		577907	0					
ANR	577930	Identifier	recs		577907	0					
ANR	577931	Identifier	i		577907	1					
ANR	577932	Identifier	offset		577907	1					
ANR	577933	Identifier	i		577907	1					
ANR	577934	ExpressionStatement	"qsort ( ( void * ) recs , N , sizeof ( * recs ) , compare_samples )"	449:4:13892:13946	577907	2	True				
ANR	577935	CallExpression	"qsort ( ( void * ) recs , N , sizeof ( * recs ) , compare_samples )"		577907	0					
ANR	577936	Callee	qsort		577907	0					
ANR	577937	Identifier	qsort		577907	0					
ANR	577938	ArgumentList	( void * ) recs		577907	1					
ANR	577939	Argument	( void * ) recs		577907	0					
ANR	577940	CastExpression	( void * ) recs		577907	0					
ANR	577941	CastTarget	void *		577907	0					
ANR	577942	Identifier	recs		577907	1					
ANR	577943	Argument	N		577907	1					
ANR	577944	Identifier	N		577907	0					
ANR	577945	Argument	sizeof ( * recs )		577907	2					
ANR	577946	SizeofExpression	sizeof ( * recs )		577907	0					
ANR	577947	Sizeof	sizeof		577907	0					
ANR	577948	UnaryOperationExpression	* recs		577907	1					
ANR	577949	UnaryOperator	*		577907	0					
ANR	577950	Identifier	recs		577907	1					
ANR	577951	Argument	compare_samples		577907	3					
ANR	577952	Identifier	compare_samples		577907	0					
ANR	577953	IfStatement	if ( gs_debug_c ( 'H' ) )		577907	3					
ANR	577954	Condition	gs_debug_c ( 'H' )	452:8:13991:14005	577907	0	True				
ANR	577955	CallExpression	gs_debug_c ( 'H' )		577907	0					
ANR	577956	Callee	gs_debug_c		577907	0					
ANR	577957	Identifier	gs_debug_c		577907	0					
ANR	577958	ArgumentList	'H'		577907	1					
ANR	577959	Argument	'H'		577907	0					
ANR	577960	PrimaryExpression	'H'		577907	0					
ANR	577961	CompoundStatement		11:8:254:260	577907	1					
ANR	577962	IdentifierDeclStatement	uint i ;	453:8:14018:14024	577907	0	True				
ANR	577963	IdentifierDecl	i		577907	0					
ANR	577964	IdentifierDeclType	uint		577907	0					
ANR	577965	Identifier	i		577907	1					
ANR	577966	ExpressionStatement	"dlputs ( ""[H]Sorted samples:\\n"" )"	455:8:14035:14065	577907	1	True				
ANR	577967	CallExpression	"dlputs ( ""[H]Sorted samples:\\n"" )"		577907	0					
ANR	577968	Callee	dlputs		577907	0					
ANR	577969	Identifier	dlputs		577907	0					
ANR	577970	ArgumentList	"""[H]Sorted samples:\\n"""		577907	1					
ANR	577971	Argument	"""[H]Sorted samples:\\n"""		577907	0					
ANR	577972	PrimaryExpression	"""[H]Sorted samples:\\n"""		577907	0					
ANR	577973	ForStatement	for ( i = 0 ; i < N ; i ++ )		577907	2					
ANR	577974	ForInit	i = 0 ;	456:13:14080:14085	577907	0	True				
ANR	577975	AssignmentExpression	i = 0		577907	0		=			
ANR	577976	Identifier	i		577907	0					
ANR	577977	PrimaryExpression	0		577907	1					
ANR	577978	Condition	i < N	456:20:14087:14091	577907	1	True				
ANR	577979	RelationalExpression	i < N		577907	0		<			
ANR	577980	Identifier	i		577907	0					
ANR	577981	Identifier	N		577907	1					
ANR	577982	PostIncDecOperationExpression	i ++	456:27:14094:14096	577907	2	True				
ANR	577983	Identifier	i		577907	0					
ANR	577984	IncDec	++		577907	1					
ANR	577985	ExpressionStatement	"dlprintf3 ( ""%5u: %5u: %u\\n"" , i , recs [ i ] . offset , recs [ i ] . mask )"	457:12:14111:14193	577907	3	True				
ANR	577986	CallExpression	"dlprintf3 ( ""%5u: %5u: %u\\n"" , i , recs [ i ] . offset , recs [ i ] . mask )"		577907	0					
ANR	577987	Callee	dlprintf3		577907	0					
ANR	577988	Identifier	dlprintf3		577907	0					
ANR	577989	ArgumentList	"""%5u: %5u: %u\\n"""		577907	1					
ANR	577990	Argument	"""%5u: %5u: %u\\n"""		577907	0					
ANR	577991	PrimaryExpression	"""%5u: %5u: %u\\n"""		577907	0					
ANR	577992	Argument	i		577907	1					
ANR	577993	Identifier	i		577907	0					
ANR	577994	Argument	recs [ i ] . offset		577907	2					
ANR	577995	MemberAccess	recs [ i ] . offset		577907	0					
ANR	577996	ArrayIndexing	recs [ i ]		577907	0					
ANR	577997	Identifier	recs		577907	0					
ANR	577998	Identifier	i		577907	1					
ANR	577999	Identifier	offset		577907	1					
ANR	578000	Argument	recs [ i ] . mask		577907	3					
ANR	578001	MemberAccess	recs [ i ] . mask		577907	0					
ANR	578002	ArrayIndexing	recs [ i ]		577907	0					
ANR	578003	Identifier	recs		577907	0					
ANR	578004	Identifier	i		577907	1					
ANR	578005	Identifier	mask		577907	1					
ANR	578006	ReturnType	void		577907	1					
ANR	578007	Identifier	gx_sort_ht_order		577907	2					
ANR	578008	ParameterList	"gx_ht_bit * recs , uint N"		577907	3					
ANR	578009	Parameter	gx_ht_bit * recs	442:17:13737:13752	577907	0	True				
ANR	578010	ParameterType	gx_ht_bit *		577907	0					
ANR	578011	Identifier	recs		577907	1					
ANR	578012	Parameter	uint N	442:35:13755:13760	577907	1	True				
ANR	578013	ParameterType	uint		577907	0					
ANR	578014	Identifier	N		577907	1					
ANR	578015	CFGEntryNode	ENTRY		577907		True				
ANR	578016	CFGExitNode	EXIT		577907		True				
ANR	578017	Symbol	* i		577907						
ANR	578018	Symbol	recs		577907						
ANR	578019	Symbol	compare_samples		577907						
ANR	578020	Symbol	i		577907						
ANR	578021	Symbol	* recs		577907						
ANR	578022	Symbol	gs_debug_c		577907						
ANR	578023	Symbol	recs [ i ] . mask		577907						
ANR	578024	Symbol	N		577907						
ANR	578025	Symbol	recs [ i ] . offset		577907						
ANR	578026	Function	gx_ht_construct_spot_order	470:0:14495:15849							
ANR	578027	FunctionDef	gx_ht_construct_spot_order (gx_ht_order * porder)		578026	0					
ANR	578028	CompoundStatement		472:0:14549:15849	578026	0					
ANR	578029	IdentifierDeclStatement	uint width = porder -> width ;	473:4:14555:14581	578026	0	True				
ANR	578030	IdentifierDecl	width = porder -> width		578026	0					
ANR	578031	IdentifierDeclType	uint		578026	0					
ANR	578032	Identifier	width		578026	1					
ANR	578033	AssignmentExpression	width = porder -> width		578026	2		=			
ANR	578034	Identifier	width		578026	0					
ANR	578035	PtrMemberAccess	porder -> width		578026	1					
ANR	578036	Identifier	porder		578026	0					
ANR	578037	Identifier	width		578026	1					
ANR	578038	IdentifierDeclStatement	uint num_levels = porder -> num_levels ;	474:4:14587:14623	578026	1	True				
ANR	578039	IdentifierDecl	num_levels = porder -> num_levels		578026	0					
ANR	578040	IdentifierDeclType	uint		578026	0					
ANR	578041	Identifier	num_levels		578026	1					
ANR	578042	AssignmentExpression	num_levels = porder -> num_levels		578026	2		=			
ANR	578043	Identifier	num_levels		578026	0					
ANR	578044	PtrMemberAccess	porder -> num_levels		578026	1					
ANR	578045	Identifier	porder		578026	0					
ANR	578046	Identifier	num_levels		578026	1					
ANR	578047	IdentifierDeclStatement	uint strip = num_levels / width ;	475:4:14657:14688	578026	2	True				
ANR	578048	IdentifierDecl	strip = num_levels / width		578026	0					
ANR	578049	IdentifierDeclType	uint		578026	0					
ANR	578050	Identifier	strip		578026	1					
ANR	578051	AssignmentExpression	strip = num_levels / width		578026	2		=			
ANR	578052	Identifier	strip		578026	0					
ANR	578053	MultiplicativeExpression	num_levels / width		578026	1		/			
ANR	578054	Identifier	num_levels		578026	0					
ANR	578055	Identifier	width		578026	1					
ANR	578056	IdentifierDeclStatement	gx_ht_bit * bits = ( gx_ht_bit * ) porder -> bit_data ;	476:4:14694:14741	578026	3	True				
ANR	578057	IdentifierDecl	* bits = ( gx_ht_bit * ) porder -> bit_data		578026	0					
ANR	578058	IdentifierDeclType	gx_ht_bit *		578026	0					
ANR	578059	Identifier	bits		578026	1					
ANR	578060	AssignmentExpression	* bits = ( gx_ht_bit * ) porder -> bit_data		578026	2		=			
ANR	578061	Identifier	bits		578026	0					
ANR	578062	CastExpression	( gx_ht_bit * ) porder -> bit_data		578026	1					
ANR	578063	CastTarget	gx_ht_bit *		578026	0					
ANR	578064	PtrMemberAccess	porder -> bit_data		578026	1					
ANR	578065	Identifier	porder		578026	0					
ANR	578066	Identifier	bit_data		578026	1					
ANR	578067	IdentifierDeclStatement	uint * levels = porder -> levels ;	477:4:14747:14776	578026	4	True				
ANR	578068	IdentifierDecl	* levels = porder -> levels		578026	0					
ANR	578069	IdentifierDeclType	uint *		578026	0					
ANR	578070	Identifier	levels		578026	1					
ANR	578071	AssignmentExpression	* levels = porder -> levels		578026	2		=			
ANR	578072	Identifier	levels		578026	0					
ANR	578073	PtrMemberAccess	porder -> levels		578026	1					
ANR	578074	Identifier	porder		578026	0					
ANR	578075	Identifier	levels		578026	1					
ANR	578076	IdentifierDeclStatement	uint shift = porder -> orig_shift ;	478:4:14782:14813	578026	5	True				
ANR	578077	IdentifierDecl	shift = porder -> orig_shift		578026	0					
ANR	578078	IdentifierDeclType	uint		578026	0					
ANR	578079	Identifier	shift		578026	1					
ANR	578080	AssignmentExpression	shift = porder -> orig_shift		578026	2		=			
ANR	578081	Identifier	shift		578026	0					
ANR	578082	PtrMemberAccess	porder -> orig_shift		578026	1					
ANR	578083	Identifier	porder		578026	0					
ANR	578084	Identifier	orig_shift		578026	1					
ANR	578085	IdentifierDeclStatement	uint full_height = porder -> full_height ;	479:4:14819:14857	578026	6	True				
ANR	578086	IdentifierDecl	full_height = porder -> full_height		578026	0					
ANR	578087	IdentifierDeclType	uint		578026	0					
ANR	578088	Identifier	full_height		578026	1					
ANR	578089	AssignmentExpression	full_height = porder -> full_height		578026	2		=			
ANR	578090	Identifier	full_height		578026	0					
ANR	578091	PtrMemberAccess	porder -> full_height		578026	1					
ANR	578092	Identifier	porder		578026	0					
ANR	578093	Identifier	full_height		578026	1					
ANR	578094	IdentifierDeclStatement	uint num_bits = porder -> num_bits ;	480:4:14863:14895	578026	7	True				
ANR	578095	IdentifierDecl	num_bits = porder -> num_bits		578026	0					
ANR	578096	IdentifierDeclType	uint		578026	0					
ANR	578097	Identifier	num_bits		578026	1					
ANR	578098	AssignmentExpression	num_bits = porder -> num_bits		578026	2		=			
ANR	578099	Identifier	num_bits		578026	0					
ANR	578100	PtrMemberAccess	porder -> num_bits		578026	1					
ANR	578101	Identifier	porder		578026	0					
ANR	578102	Identifier	num_bits		578026	1					
ANR	578103	IdentifierDeclStatement	uint copies = num_bits / ( width * strip ) ;	481:4:14901:14941	578026	8	True				
ANR	578104	IdentifierDecl	copies = num_bits / ( width * strip )		578026	0					
ANR	578105	IdentifierDeclType	uint		578026	0					
ANR	578106	Identifier	copies		578026	1					
ANR	578107	AssignmentExpression	copies = num_bits / ( width * strip )		578026	2		=			
ANR	578108	Identifier	copies		578026	0					
ANR	578109	MultiplicativeExpression	num_bits / ( width * strip )		578026	1		/			
ANR	578110	Identifier	num_bits		578026	0					
ANR	578111	MultiplicativeExpression	width * strip		578026	1		*			
ANR	578112	Identifier	width		578026	0					
ANR	578113	Identifier	strip		578026	1					
ANR	578114	IdentifierDeclStatement	gx_ht_bit * bp = bits + num_bits - 1 ;	482:4:14947:14982	578026	9	True				
ANR	578115	IdentifierDecl	* bp = bits + num_bits - 1		578026	0					
ANR	578116	IdentifierDeclType	gx_ht_bit *		578026	0					
ANR	578117	Identifier	bp		578026	1					
ANR	578118	AssignmentExpression	* bp = bits + num_bits - 1		578026	2		=			
ANR	578119	Identifier	bp		578026	0					
ANR	578120	AdditiveExpression	bits + num_bits - 1		578026	1		+			
ANR	578121	Identifier	bits		578026	0					
ANR	578122	AdditiveExpression	num_bits - 1		578026	1		-			
ANR	578123	Identifier	num_bits		578026	0					
ANR	578124	PrimaryExpression	1		578026	1					
ANR	578125	IdentifierDeclStatement	uint i ;	483:4:14988:14994	578026	10	True				
ANR	578126	IdentifierDecl	i		578026	0					
ANR	578127	IdentifierDeclType	uint		578026	0					
ANR	578128	Identifier	i		578026	1					
ANR	578129	ExpressionStatement	"gx_sort_ht_order ( bits , num_levels )"	485:4:15001:15035	578026	11	True				
ANR	578130	CallExpression	"gx_sort_ht_order ( bits , num_levels )"		578026	0					
ANR	578131	Callee	gx_sort_ht_order		578026	0					
ANR	578132	Identifier	gx_sort_ht_order		578026	0					
ANR	578133	ArgumentList	bits		578026	1					
ANR	578134	Argument	bits		578026	0					
ANR	578135	Identifier	bits		578026	0					
ANR	578136	Argument	num_levels		578026	1					
ANR	578137	Identifier	num_levels		578026	0					
ANR	578138	ExpressionStatement	"if_debug5 ( 'h' , ""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"" , num_levels , width , porder -> orig_height , strip , shift )"	486:4:15041:15199	578026	12	True				
ANR	578139	CallExpression	"if_debug5 ( 'h' , ""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"" , num_levels , width , porder -> orig_height , strip , shift )"		578026	0					
ANR	578140	Callee	if_debug5		578026	0					
ANR	578141	Identifier	if_debug5		578026	0					
ANR	578142	ArgumentList	'h'		578026	1					
ANR	578143	Argument	'h'		578026	0					
ANR	578144	PrimaryExpression	'h'		578026	0					
ANR	578145	Argument	"""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"""		578026	1					
ANR	578146	PrimaryExpression	"""[h]spot order: num_levels=%u w=%u h=%u strip=%u shift=%u\\n"""		578026	0					
ANR	578147	Argument	num_levels		578026	2					
ANR	578148	Identifier	num_levels		578026	0					
ANR	578149	Argument	width		578026	3					
ANR	578150	Identifier	width		578026	0					
ANR	578151	Argument	porder -> orig_height		578026	4					
ANR	578152	PtrMemberAccess	porder -> orig_height		578026	0					
ANR	578153	Identifier	porder		578026	0					
ANR	578154	Identifier	orig_height		578026	1					
ANR	578155	Argument	strip		578026	5					
ANR	578156	Identifier	strip		578026	0					
ANR	578157	Argument	shift		578026	6					
ANR	578158	Identifier	shift		578026	0					
ANR	578159	ForStatement	for ( i = num_levels ; i > 0 ; )		578026	13					
ANR	578160	ForInit	i = num_levels ;	491:9:15299:15313	578026	0	True				
ANR	578161	AssignmentExpression	i = num_levels		578026	0		=			
ANR	578162	Identifier	i		578026	0					
ANR	578163	Identifier	num_levels		578026	1					
ANR	578164	Condition	i > 0	491:25:15315:15319	578026	1	True				
ANR	578165	RelationalExpression	i > 0		578026	0		>			
ANR	578166	Identifier	i		578026	0					
ANR	578167	PrimaryExpression	0		578026	1					
ANR	578168	CompoundStatement		24:8:886:892	578026	2					
ANR	578169	IdentifierDeclStatement	uint offset = bits [ -- i ] . offset ;	492:8:15333:15363	578026	0	True				
ANR	578170	IdentifierDecl	offset = bits [ -- i ] . offset		578026	0					
ANR	578171	IdentifierDeclType	uint		578026	0					
ANR	578172	Identifier	offset		578026	1					
ANR	578173	AssignmentExpression	offset = bits [ -- i ] . offset		578026	2		=			
ANR	578174	Identifier	offset		578026	0					
ANR	578175	MemberAccess	bits [ -- i ] . offset		578026	1					
ANR	578176	ArrayIndexing	bits [ -- i ]		578026	0					
ANR	578177	Identifier	bits		578026	0					
ANR	578178	UnaryExpression	-- i		578026	1					
ANR	578179	IncDec	--		578026	0					
ANR	578180	Identifier	i		578026	1					
ANR	578181	Identifier	offset		578026	1					
ANR	578182	IdentifierDeclStatement	uint x = offset % width ;	493:8:15373:15396	578026	1	True				
ANR	578183	IdentifierDecl	x = offset % width		578026	0					
ANR	578184	IdentifierDeclType	uint		578026	0					
ANR	578185	Identifier	x		578026	1					
ANR	578186	AssignmentExpression	x = offset % width		578026	2		=			
ANR	578187	Identifier	x		578026	0					
ANR	578188	MultiplicativeExpression	offset % width		578026	1		%			
ANR	578189	Identifier	offset		578026	0					
ANR	578190	Identifier	width		578026	1					
ANR	578191	IdentifierDeclStatement	uint hy = offset - x ;	494:8:15406:15426	578026	2	True				
ANR	578192	IdentifierDecl	hy = offset - x		578026	0					
ANR	578193	IdentifierDeclType	uint		578026	0					
ANR	578194	Identifier	hy		578026	1					
ANR	578195	AssignmentExpression	hy = offset - x		578026	2		=			
ANR	578196	Identifier	hy		578026	0					
ANR	578197	AdditiveExpression	offset - x		578026	1		-			
ANR	578198	Identifier	offset		578026	0					
ANR	578199	Identifier	x		578026	1					
ANR	578200	IdentifierDeclStatement	uint k ;	495:8:15436:15442	578026	3	True				
ANR	578201	IdentifierDecl	k		578026	0					
ANR	578202	IdentifierDeclType	uint		578026	0					
ANR	578203	Identifier	k		578026	1					
ANR	578204	ExpressionStatement	levels [ i ] = i * copies	497:8:15453:15475	578026	4	True				
ANR	578205	AssignmentExpression	levels [ i ] = i * copies		578026	0		=			
ANR	578206	ArrayIndexing	levels [ i ]		578026	0					
ANR	578207	Identifier	levels		578026	0					
ANR	578208	Identifier	i		578026	1					
ANR	578209	MultiplicativeExpression	i * copies		578026	1		*			
ANR	578210	Identifier	i		578026	0					
ANR	578211	Identifier	copies		578026	1					
ANR	578212	ForStatement	"for ( k = 0 ; k < copies ; k ++ , bp -- , hy += num_levels , x = ( x + width - shift ) % width )"		578026	5					
ANR	578213	ForInit	k = 0 ;	498:13:15490:15495	578026	0	True				
ANR	578214	AssignmentExpression	k = 0		578026	0		=			
ANR	578215	Identifier	k		578026	0					
ANR	578216	PrimaryExpression	0		578026	1					
ANR	578217	Condition	k < copies	498:20:15497:15506	578026	1	True				
ANR	578218	RelationalExpression	k < copies		578026	0		<			
ANR	578219	Identifier	k		578026	0					
ANR	578220	Identifier	copies		578026	1					
ANR	578221	Expression	"k ++ , bp -- , hy += num_levels , x = ( x + width - shift ) % width"	499:13:15522:15581	578026	2	True				
ANR	578222	PostIncDecOperationExpression	k ++		578026	0					
ANR	578223	Identifier	k		578026	0					
ANR	578224	IncDec	++		578026	1					
ANR	578225	Expression	"bp -- , hy += num_levels , x = ( x + width - shift ) % width"		578026	1					
ANR	578226	PostIncDecOperationExpression	bp --		578026	0					
ANR	578227	Identifier	bp		578026	0					
ANR	578228	IncDec	--		578026	1					
ANR	578229	Expression	"hy += num_levels , x = ( x + width - shift ) % width"		578026	1					
ANR	578230	AssignmentExpression	hy += num_levels		578026	0		+=			
ANR	578231	Identifier	hy		578026	0					
ANR	578232	Identifier	num_levels		578026	1					
ANR	578233	AssignmentExpression	x = ( x + width - shift ) % width		578026	1		=			
ANR	578234	Identifier	x		578026	0					
ANR	578235	MultiplicativeExpression	( x + width - shift ) % width		578026	1		%			
ANR	578236	AdditiveExpression	x + width - shift		578026	0		+			
ANR	578237	Identifier	x		578026	0					
ANR	578238	AdditiveExpression	width - shift		578026	1		-			
ANR	578239	Identifier	width		578026	0					
ANR	578240	Identifier	shift		578026	1					
ANR	578241	Identifier	width		578026	1					
ANR	578242	ExpressionStatement	bp -> offset = hy + x	501:12:15609:15628	578026	3	True				
ANR	578243	AssignmentExpression	bp -> offset = hy + x		578026	0		=			
ANR	578244	PtrMemberAccess	bp -> offset		578026	0					
ANR	578245	Identifier	bp		578026	0					
ANR	578246	Identifier	offset		578026	1					
ANR	578247	AdditiveExpression	hy + x		578026	1		+			
ANR	578248	Identifier	hy		578026	0					
ANR	578249	Identifier	x		578026	1					
ANR	578250	IfStatement	if ( num_bits == width * full_height )		578026	14					
ANR	578251	Condition	num_bits == width * full_height	504:8:15709:15739	578026	0	True				
ANR	578252	EqualityExpression	num_bits == width * full_height		578026	0		==			
ANR	578253	Identifier	num_bits		578026	0					
ANR	578254	MultiplicativeExpression	width * full_height		578026	1		*			
ANR	578255	Identifier	width		578026	0					
ANR	578256	Identifier	full_height		578026	1					
ANR	578257	CompoundStatement		33:41:1192:1192	578026	1					
ANR	578258	ExpressionStatement	porder -> height = full_height	505:8:15752:15780	578026	0	True				
ANR	578259	AssignmentExpression	porder -> height = full_height		578026	0		=			
ANR	578260	PtrMemberAccess	porder -> height		578026	0					
ANR	578261	Identifier	porder		578026	0					
ANR	578262	Identifier	height		578026	1					
ANR	578263	Identifier	full_height		578026	1					
ANR	578264	ExpressionStatement	porder -> shift = 0	506:8:15790:15807	578026	1	True				
ANR	578265	AssignmentExpression	porder -> shift = 0		578026	0		=			
ANR	578266	PtrMemberAccess	porder -> shift		578026	0					
ANR	578267	Identifier	porder		578026	0					
ANR	578268	Identifier	shift		578026	1					
ANR	578269	PrimaryExpression	0		578026	1					
ANR	578270	ExpressionStatement	gx_ht_construct_bits ( porder )	508:4:15819:15847	578026	15	True				
ANR	578271	CallExpression	gx_ht_construct_bits ( porder )		578026	0					
ANR	578272	Callee	gx_ht_construct_bits		578026	0					
ANR	578273	Identifier	gx_ht_construct_bits		578026	0					
ANR	578274	ArgumentList	porder		578026	1					
ANR	578275	Argument	porder		578026	0					
ANR	578276	Identifier	porder		578026	0					
ANR	578277	ReturnType	void		578026	1					
ANR	578278	Identifier	gx_ht_construct_spot_order		578026	2					
ANR	578279	ParameterList	gx_ht_order * porder		578026	3					
ANR	578280	Parameter	gx_ht_order * porder	471:27:14527:14546	578026	0	True				
ANR	578281	ParameterType	gx_ht_order *		578026	0					
ANR	578282	Identifier	porder		578026	1					
ANR	578283	CFGEntryNode	ENTRY		578026		True				
ANR	578284	CFGExitNode	EXIT		578026		True				
ANR	578285	Symbol	porder -> num_levels		578026						
ANR	578286	Symbol	shift		578026						
ANR	578287	Symbol	porder -> width		578026						
ANR	578288	Symbol	porder -> num_bits		578026						
ANR	578289	Symbol	bp		578026						
ANR	578290	Symbol	porder -> orig_height		578026						
ANR	578291	Symbol	porder -> shift		578026						
ANR	578292	Symbol	porder -> levels		578026						
ANR	578293	Symbol	hy		578026						
ANR	578294	Symbol	strip		578026						
ANR	578295	Symbol	porder -> bit_data		578026						
ANR	578296	Symbol	copies		578026						
ANR	578297	Symbol	porder -> full_height		578026						
ANR	578298	Symbol	* bp		578026						
ANR	578299	Symbol	bits [ -- i ] . offset		578026						
ANR	578300	Symbol	bp -> offset		578026						
ANR	578301	Symbol	porder -> orig_shift		578026						
ANR	578302	Symbol	* bits		578026						
ANR	578303	Symbol	full_height		578026						
ANR	578304	Symbol	offset		578026						
ANR	578305	Symbol	porder -> height		578026						
ANR	578306	Symbol	bits		578026						
ANR	578307	Symbol	i		578026						
ANR	578308	Symbol	k		578026						
ANR	578309	Symbol	porder		578026						
ANR	578310	Symbol	* levels		578026						
ANR	578311	Symbol	* i		578026						
ANR	578312	Symbol	width		578026						
ANR	578313	Symbol	x		578026						
ANR	578314	Symbol	num_bits		578026						
ANR	578315	Symbol	* porder		578026						
ANR	578316	Symbol	levels		578026						
ANR	578317	Symbol	num_levels		578026						
ANR	578318	Function	gx_ht_construct_bit	512:0:15890:16552							
ANR	578319	FunctionDef	"gx_ht_construct_bit (gx_ht_bit * bit , int width , int bit_num)"		578318	0					
ANR	578320	CompoundStatement		514:0:15956:16552	578318	0					
ANR	578321	IdentifierDeclStatement	uint padding = bitmap_raster ( width ) * 8 - width ;	515:4:15962:16009	578318	0	True				
ANR	578322	IdentifierDecl	padding = bitmap_raster ( width ) * 8 - width		578318	0					
ANR	578323	IdentifierDeclType	uint		578318	0					
ANR	578324	Identifier	padding		578318	1					
ANR	578325	AssignmentExpression	padding = bitmap_raster ( width ) * 8 - width		578318	2		=			
ANR	578326	Identifier	padding		578318	0					
ANR	578327	AdditiveExpression	bitmap_raster ( width ) * 8 - width		578318	1		-			
ANR	578328	MultiplicativeExpression	bitmap_raster ( width ) * 8		578318	0		*			
ANR	578329	CallExpression	bitmap_raster ( width )		578318	0					
ANR	578330	Callee	bitmap_raster		578318	0					
ANR	578331	Identifier	bitmap_raster		578318	0					
ANR	578332	ArgumentList	width		578318	1					
ANR	578333	Argument	width		578318	0					
ANR	578334	Identifier	width		578318	0					
ANR	578335	PrimaryExpression	8		578318	1					
ANR	578336	Identifier	width		578318	1					
ANR	578337	IdentifierDeclStatement	int pix = bit_num ;	516:4:16015:16032	578318	1	True				
ANR	578338	IdentifierDecl	pix = bit_num		578318	0					
ANR	578339	IdentifierDeclType	int		578318	0					
ANR	578340	Identifier	pix		578318	1					
ANR	578341	AssignmentExpression	pix = bit_num		578318	2		=			
ANR	578342	Identifier	bit_num		578318	0					
ANR	578343	Identifier	bit_num		578318	1					
ANR	578344	IdentifierDeclStatement	ht_mask_t mask ;	517:4:16038:16052	578318	2	True				
ANR	578345	IdentifierDecl	mask		578318	0					
ANR	578346	IdentifierDeclType	ht_mask_t		578318	0					
ANR	578347	Identifier	mask		578318	1					
ANR	578348	IdentifierDeclStatement	byte * pb ;	518:4:16058:16066	578318	3	True				
ANR	578349	IdentifierDecl	* pb		578318	0					
ANR	578350	IdentifierDeclType	byte *		578318	0					
ANR	578351	Identifier	pb		578318	1					
ANR	578352	ExpressionStatement	pix += pix / width * padding	520:4:16073:16101	578318	4	True				
ANR	578353	AssignmentExpression	pix += pix / width * padding		578318	0		+=			
ANR	578354	Identifier	pix		578318	0					
ANR	578355	MultiplicativeExpression	pix / width * padding		578318	1		/			
ANR	578356	Identifier	pix		578318	0					
ANR	578357	MultiplicativeExpression	width * padding		578318	1		*			
ANR	578358	Identifier	width		578318	0					
ANR	578359	Identifier	padding		578318	1					
ANR	578360	ExpressionStatement	bit -> offset = ( pix >> 3 ) & - size_of ( mask )	521:4:16107:16148	578318	5	True				
ANR	578361	AssignmentExpression	bit -> offset = ( pix >> 3 ) & - size_of ( mask )		578318	0		=			
ANR	578362	PtrMemberAccess	bit -> offset		578318	0					
ANR	578363	Identifier	bit		578318	0					
ANR	578364	Identifier	offset		578318	1					
ANR	578365	BitAndExpression	( pix >> 3 ) & - size_of ( mask )		578318	1		&			
ANR	578366	ShiftExpression	pix >> 3		578318	0		>>			
ANR	578367	Identifier	pix		578318	0					
ANR	578368	PrimaryExpression	3		578318	1					
ANR	578369	UnaryOperationExpression	- size_of ( mask )		578318	1					
ANR	578370	UnaryOperator	-		578318	0					
ANR	578371	CallExpression	size_of ( mask )		578318	1					
ANR	578372	Callee	size_of		578318	0					
ANR	578373	Identifier	size_of		578318	0					
ANR	578374	ArgumentList	mask		578318	1					
ANR	578375	Argument	mask		578318	0					
ANR	578376	Identifier	mask		578318	0					
ANR	578377	ExpressionStatement	mask = ( ht_mask_t ) 1 << ( ~pix & ( ht_mask_bits - 1 ) )	522:4:16154:16205	578318	6	True				
ANR	578378	AssignmentExpression	mask = ( ht_mask_t ) 1 << ( ~pix & ( ht_mask_bits - 1 ) )		578318	0		=			
ANR	578379	Identifier	mask		578318	0					
ANR	578380	ShiftExpression	( ht_mask_t ) 1 << ( ~pix & ( ht_mask_bits - 1 ) )		578318	1		<<			
ANR	578381	CastExpression	( ht_mask_t ) 1		578318	0					
ANR	578382	CastTarget	ht_mask_t		578318	0					
ANR	578383	PrimaryExpression	1		578318	1					
ANR	578384	BitAndExpression	~pix & ( ht_mask_bits - 1 )		578318	1		&			
ANR	578385	Identifier	~pix		578318	0					
ANR	578386	AdditiveExpression	ht_mask_bits - 1		578318	1		-			
ANR	578387	Identifier	ht_mask_bits		578318	0					
ANR	578388	PrimaryExpression	1		578318	1					
ANR	578389	ExpressionStatement	pix = ht_mask_bits - width	524:4:16246:16272	578318	7	True				
ANR	578390	AssignmentExpression	pix = ht_mask_bits - width		578318	0		=			
ANR	578391	Identifier	pix		578318	0					
ANR	578392	AdditiveExpression	ht_mask_bits - width		578318	1		-			
ANR	578393	Identifier	ht_mask_bits		578318	0					
ANR	578394	Identifier	width		578318	1					
ANR	578395	WhileStatement	while ( ( pix -= width ) >= 0 )		578318	8					
ANR	578396	Condition	( pix -= width ) >= 0	525:11:16285:16303	578318	0	True				
ANR	578397	RelationalExpression	( pix -= width ) >= 0		578318	0		>=			
ANR	578398	AssignmentExpression	pix -= width		578318	0		-=			
ANR	578399	Identifier	pix		578318	0					
ANR	578400	Identifier	width		578318	1					
ANR	578401	PrimaryExpression	0		578318	1					
ANR	578402	ExpressionStatement	mask |= mask >> width	526:8:16314:16335	578318	1	True				
ANR	578403	AssignmentExpression	mask |= mask >> width		578318	0		|=			
ANR	578404	Identifier	mask		578318	0					
ANR	578405	ShiftExpression	mask >> width		578318	1		>>			
ANR	578406	Identifier	mask		578318	0					
ANR	578407	Identifier	width		578318	1					
ANR	578408	ExpressionStatement	bit -> mask = 0	528:4:16397:16410	578318	9	True				
ANR	578409	AssignmentExpression	bit -> mask = 0		578318	0		=			
ANR	578410	PtrMemberAccess	bit -> mask		578318	0					
ANR	578411	Identifier	bit		578318	0					
ANR	578412	Identifier	mask		578318	1					
ANR	578413	PrimaryExpression	0		578318	1					
ANR	578414	ForStatement	"for ( pb = ( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 ) ; mask != 0 ; mask >>= 8 , pb -- )"		578318	10					
ANR	578415	ForInit	pb = ( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 ) ;	529:9:16421:16467	578318	0	True				
ANR	578416	AssignmentExpression	pb = ( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 )		578318	0		=			
ANR	578417	Identifier	pb		578318	0					
ANR	578418	AdditiveExpression	( byte * ) & bit -> mask + ( sizeof ( mask ) - 1 )		578318	1		+			
ANR	578419	CastExpression	( byte * ) & bit -> mask		578318	0					
ANR	578420	CastTarget	byte *		578318	0					
ANR	578421	UnaryOperationExpression	& bit -> mask		578318	1					
ANR	578422	UnaryOperator	&		578318	0					
ANR	578423	PtrMemberAccess	bit -> mask		578318	1					
ANR	578424	Identifier	bit		578318	0					
ANR	578425	Identifier	mask		578318	1					
ANR	578426	AdditiveExpression	sizeof ( mask ) - 1		578318	1		-			
ANR	578427	SizeofExpression	sizeof ( mask )		578318	0					
ANR	578428	Sizeof	sizeof		578318	0					
ANR	578429	SizeofOperand	mask		578318	1					
ANR	578430	PrimaryExpression	1		578318	1					
ANR	578431	Condition	mask != 0	530:9:16478:16486	578318	1	True				
ANR	578432	EqualityExpression	mask != 0		578318	0		!=			
ANR	578433	Identifier	mask		578318	0					
ANR	578434	PrimaryExpression	0		578318	1					
ANR	578435	Expression	"mask >>= 8 , pb --"	531:9:16498:16513	578318	2	True				
ANR	578436	AssignmentExpression	mask >>= 8		578318	0		>>=			
ANR	578437	Identifier	mask		578318	0					
ANR	578438	PrimaryExpression	8		578318	1					
ANR	578439	PostIncDecOperationExpression	pb --		578318	1					
ANR	578440	Identifier	pb		578318	0					
ANR	578441	IncDec	--		578318	1					
ANR	578442	ExpressionStatement	* pb = ( byte ) mask	533:8:16533:16550	578318	3	True				
ANR	578443	AssignmentExpression	* pb = ( byte ) mask		578318	0		=			
ANR	578444	UnaryOperationExpression	* pb		578318	0					
ANR	578445	UnaryOperator	*		578318	0					
ANR	578446	Identifier	pb		578318	1					
ANR	578447	CastExpression	( byte ) mask		578318	1					
ANR	578448	CastTarget	byte		578318	0					
ANR	578449	Identifier	mask		578318	1					
ANR	578450	ReturnType	void		578318	1					
ANR	578451	Identifier	gx_ht_construct_bit		578318	2					
ANR	578452	ParameterList	"gx_ht_bit * bit , int width , int bit_num"		578318	3					
ANR	578453	Parameter	gx_ht_bit * bit	513:20:15915:15929	578318	0	True				
ANR	578454	ParameterType	gx_ht_bit *		578318	0					
ANR	578455	Identifier	bit		578318	1					
ANR	578456	Parameter	int width	513:37:15932:15940	578318	1	True				
ANR	578457	ParameterType	int		578318	0					
ANR	578458	Identifier	width		578318	1					
ANR	578459	Parameter	int bit_num	513:48:15943:15953	578318	2	True				
ANR	578460	ParameterType	int		578318	0					
ANR	578461	Identifier	bit_num		578318	1					
ANR	578462	CFGEntryNode	ENTRY		578318		True				
ANR	578463	CFGExitNode	EXIT		578318		True				
ANR	578464	Symbol	padding		578318						
ANR	578465	Symbol	bit -> mask		578318						
ANR	578466	Symbol	* bit		578318						
ANR	578467	Symbol	ht_mask_bits		578318						
ANR	578468	Symbol	bit_num		578318						
ANR	578469	Symbol	bit		578318						
ANR	578470	Symbol	bit -> offset		578318						
ANR	578471	Symbol	bitmap_raster		578318						
ANR	578472	Symbol	pb		578318						
ANR	578473	Symbol	size_of		578318						
ANR	578474	Symbol	width		578318						
ANR	578475	Symbol	& bit -> mask		578318						
ANR	578476	Symbol	~pix		578318						
ANR	578477	Symbol	* pb		578318						
ANR	578478	Symbol	pix		578318						
ANR	578479	Symbol	mask		578318						
ANR	578480	Function	gx_ht_construct_bits	539:0:16721:17363							
ANR	578481	FunctionDef	gx_ht_construct_bits (gx_ht_order * porder)		578480	0					
ANR	578482	CompoundStatement		541:0:16769:17363	578480	0					
ANR	578483	IdentifierDeclStatement	uint i ;	542:4:16775:16781	578480	0	True				
ANR	578484	IdentifierDecl	i		578480	0					
ANR	578485	IdentifierDeclType	uint		578480	0					
ANR	578486	Identifier	i		578480	1					
ANR	578487	IdentifierDeclStatement	gx_ht_bit * phb ;	543:4:16787:16801	578480	1	True				
ANR	578488	IdentifierDecl	* phb		578480	0					
ANR	578489	IdentifierDeclType	gx_ht_bit *		578480	0					
ANR	578490	Identifier	phb		578480	1					
ANR	578491	ForStatement	"for ( i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ; i < porder -> num_bits ; i ++ , phb ++ )"		578480	2					
ANR	578492	ForInit	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ;"	545:9:16813:16855	578480	0	True				
ANR	578493	Expression	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data"		578480	0					
ANR	578494	AssignmentExpression	i = 0		578480	0		=			
ANR	578495	Identifier	i		578480	0					
ANR	578496	PrimaryExpression	0		578480	1					
ANR	578497	AssignmentExpression	phb = ( gx_ht_bit * ) porder -> bit_data		578480	1		=			
ANR	578498	Identifier	phb		578480	0					
ANR	578499	CastExpression	( gx_ht_bit * ) porder -> bit_data		578480	1					
ANR	578500	CastTarget	gx_ht_bit *		578480	0					
ANR	578501	PtrMemberAccess	porder -> bit_data		578480	1					
ANR	578502	Identifier	porder		578480	0					
ANR	578503	Identifier	bit_data		578480	1					
ANR	578504	Condition	i < porder -> num_bits	546:9:16866:16885	578480	1	True				
ANR	578505	RelationalExpression	i < porder -> num_bits		578480	0		<			
ANR	578506	Identifier	i		578480	0					
ANR	578507	PtrMemberAccess	porder -> num_bits		578480	1					
ANR	578508	Identifier	porder		578480	0					
ANR	578509	Identifier	num_bits		578480	1					
ANR	578510	Expression	"i ++ , phb ++"	547:9:16897:16906	578480	2	True				
ANR	578511	PostIncDecOperationExpression	i ++		578480	0					
ANR	578512	Identifier	i		578480	0					
ANR	578513	IncDec	++		578480	1					
ANR	578514	PostIncDecOperationExpression	phb ++		578480	1					
ANR	578515	Identifier	phb		578480	0					
ANR	578516	IncDec	++		578480	1					
ANR	578517	ExpressionStatement	"gx_ht_construct_bit ( phb , porder -> width , phb -> offset )"	548:8:16917:16969	578480	3	True				
ANR	578518	CallExpression	"gx_ht_construct_bit ( phb , porder -> width , phb -> offset )"		578480	0					
ANR	578519	Callee	gx_ht_construct_bit		578480	0					
ANR	578520	Identifier	gx_ht_construct_bit		578480	0					
ANR	578521	ArgumentList	phb		578480	1					
ANR	578522	Argument	phb		578480	0					
ANR	578523	Identifier	phb		578480	0					
ANR	578524	Argument	porder -> width		578480	1					
ANR	578525	PtrMemberAccess	porder -> width		578480	0					
ANR	578526	Identifier	porder		578480	0					
ANR	578527	Identifier	width		578480	1					
ANR	578528	Argument	phb -> offset		578480	2					
ANR	578529	PtrMemberAccess	phb -> offset		578480	0					
ANR	578530	Identifier	phb		578480	0					
ANR	578531	Identifier	offset		578480	1					
ANR	578532	IfStatement	if ( gs_debug_c ( 'H' ) )		578480	3					
ANR	578533	Condition	gs_debug_c ( 'H' )	550:8:16992:17006	578480	0	True				
ANR	578534	CallExpression	gs_debug_c ( 'H' )		578480	0					
ANR	578535	Callee	gs_debug_c		578480	0					
ANR	578536	Identifier	gs_debug_c		578480	0					
ANR	578537	ArgumentList	'H'		578480	1					
ANR	578538	Argument	'H'		578480	0					
ANR	578539	PrimaryExpression	'H'		578480	0					
ANR	578540	CompoundStatement		10:25:239:239	578480	1					
ANR	578541	ExpressionStatement	"dmlprintf1 ( porder -> data_memory , ""[H]Halftone order bits 0x%lx:\\n"" , ( ulong ) porder -> bit_data )"	551:8:17019:17110	578480	0	True				
ANR	578542	CallExpression	"dmlprintf1 ( porder -> data_memory , ""[H]Halftone order bits 0x%lx:\\n"" , ( ulong ) porder -> bit_data )"		578480	0					
ANR	578543	Callee	dmlprintf1		578480	0					
ANR	578544	Identifier	dmlprintf1		578480	0					
ANR	578545	ArgumentList	porder -> data_memory		578480	1					
ANR	578546	Argument	porder -> data_memory		578480	0					
ANR	578547	PtrMemberAccess	porder -> data_memory		578480	0					
ANR	578548	Identifier	porder		578480	0					
ANR	578549	Identifier	data_memory		578480	1					
ANR	578550	Argument	"""[H]Halftone order bits 0x%lx:\\n"""		578480	1					
ANR	578551	PrimaryExpression	"""[H]Halftone order bits 0x%lx:\\n"""		578480	0					
ANR	578552	Argument	( ulong ) porder -> bit_data		578480	2					
ANR	578553	CastExpression	( ulong ) porder -> bit_data		578480	0					
ANR	578554	CastTarget	ulong		578480	0					
ANR	578555	PtrMemberAccess	porder -> bit_data		578480	1					
ANR	578556	Identifier	porder		578480	0					
ANR	578557	Identifier	bit_data		578480	1					
ANR	578558	ForStatement	"for ( i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ; i < porder -> num_bits ; i ++ , phb ++ )"		578480	1					
ANR	578559	ForInit	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data ;"	552:13:17125:17167	578480	0	True				
ANR	578560	Expression	"i = 0 , phb = ( gx_ht_bit * ) porder -> bit_data"		578480	0					
ANR	578561	AssignmentExpression	i = 0		578480	0		=			
ANR	578562	Identifier	i		578480	0					
ANR	578563	PrimaryExpression	0		578480	1					
ANR	578564	AssignmentExpression	phb = ( gx_ht_bit * ) porder -> bit_data		578480	1		=			
ANR	578565	Identifier	phb		578480	0					
ANR	578566	CastExpression	( gx_ht_bit * ) porder -> bit_data		578480	1					
ANR	578567	CastTarget	gx_ht_bit *		578480	0					
ANR	578568	PtrMemberAccess	porder -> bit_data		578480	1					
ANR	578569	Identifier	porder		578480	0					
ANR	578570	Identifier	bit_data		578480	1					
ANR	578571	Condition	i < porder -> num_bits	553:13:17182:17201	578480	1	True				
ANR	578572	RelationalExpression	i < porder -> num_bits		578480	0		<			
ANR	578573	Identifier	i		578480	0					
ANR	578574	PtrMemberAccess	porder -> num_bits		578480	1					
ANR	578575	Identifier	porder		578480	0					
ANR	578576	Identifier	num_bits		578480	1					
ANR	578577	Expression	"i ++ , phb ++"	554:13:17217:17226	578480	2	True				
ANR	578578	PostIncDecOperationExpression	i ++		578480	0					
ANR	578579	Identifier	i		578480	0					
ANR	578580	IncDec	++		578480	1					
ANR	578581	PostIncDecOperationExpression	phb ++		578480	1					
ANR	578582	Identifier	phb		578480	0					
ANR	578583	IncDec	++		578480	1					
ANR	578584	ExpressionStatement	"dmlprintf3 ( porder -> data_memory , ""%4d: %u:0x%lx\\n"" , i , phb -> offset , ( ulong ) phb -> mask )"	555:12:17241:17348	578480	3	True				
ANR	578585	CallExpression	"dmlprintf3 ( porder -> data_memory , ""%4d: %u:0x%lx\\n"" , i , phb -> offset , ( ulong ) phb -> mask )"		578480	0					
ANR	578586	Callee	dmlprintf3		578480	0					
ANR	578587	Identifier	dmlprintf3		578480	0					
ANR	578588	ArgumentList	porder -> data_memory		578480	1					
ANR	578589	Argument	porder -> data_memory		578480	0					
ANR	578590	PtrMemberAccess	porder -> data_memory		578480	0					
ANR	578591	Identifier	porder		578480	0					
ANR	578592	Identifier	data_memory		578480	1					
ANR	578593	Argument	"""%4d: %u:0x%lx\\n"""		578480	1					
ANR	578594	PrimaryExpression	"""%4d: %u:0x%lx\\n"""		578480	0					
ANR	578595	Argument	i		578480	2					
ANR	578596	Identifier	i		578480	0					
ANR	578597	Argument	phb -> offset		578480	3					
ANR	578598	PtrMemberAccess	phb -> offset		578480	0					
ANR	578599	Identifier	phb		578480	0					
ANR	578600	Identifier	offset		578480	1					
ANR	578601	Argument	( ulong ) phb -> mask		578480	4					
ANR	578602	CastExpression	( ulong ) phb -> mask		578480	0					
ANR	578603	CastTarget	ulong		578480	0					
ANR	578604	PtrMemberAccess	phb -> mask		578480	1					
ANR	578605	Identifier	phb		578480	0					
ANR	578606	Identifier	mask		578480	1					
ANR	578607	ReturnType	void		578480	1					
ANR	578608	Identifier	gx_ht_construct_bits		578480	2					
ANR	578609	ParameterList	gx_ht_order * porder		578480	3					
ANR	578610	Parameter	gx_ht_order * porder	540:21:16747:16766	578480	0	True				
ANR	578611	ParameterType	gx_ht_order *		578480	0					
ANR	578612	Identifier	porder		578480	1					
ANR	578613	CFGEntryNode	ENTRY		578480		True				
ANR	578614	CFGExitNode	EXIT		578480		True				
ANR	578615	Symbol	phb -> mask		578480						
ANR	578616	Symbol	porder -> bit_data		578480						
ANR	578617	Symbol	* phb		578480						
ANR	578618	Symbol	i		578480						
ANR	578619	Symbol	porder -> width		578480						
ANR	578620	Symbol	gs_debug_c		578480						
ANR	578621	Symbol	phb		578480						
ANR	578622	Symbol	phb -> offset		578480						
ANR	578623	Symbol	porder -> num_bits		578480						
ANR	578624	Symbol	* porder		578480						
ANR	578625	Symbol	porder		578480						
ANR	578626	Symbol	porder -> data_memory		578480						
ANR	578627	Function	gx_ht_order_release	563:0:17478:18396							
ANR	578628	FunctionDef	"gx_ht_order_release (gx_ht_order * porder , gs_memory_t * mem , bool free_cache)"		578627	0					
ANR	578629	CompoundStatement		565:0:17561:18396	578627	0					
ANR	578630	IfStatement	if ( free_cache )		578627	0					
ANR	578631	Condition	free_cache	567:8:17632:17641	578627	0	True				
ANR	578632	Identifier	free_cache		578627	0					
ANR	578633	CompoundStatement		3:20:82:82	578627	1					
ANR	578634	IfStatement	if ( porder -> cache != 0 )		578627	0					
ANR	578635	Condition	porder -> cache != 0	568:12:17658:17675	578627	0	True				
ANR	578636	EqualityExpression	porder -> cache != 0		578627	0		!=			
ANR	578637	PtrMemberAccess	porder -> cache		578627	0					
ANR	578638	Identifier	porder		578627	0					
ANR	578639	Identifier	cache		578627	1					
ANR	578640	PrimaryExpression	0		578627	1					
ANR	578641	ExpressionStatement	"gx_ht_free_cache ( mem , porder -> cache )"	569:12:17690:17726	578627	1	True				
ANR	578642	CallExpression	"gx_ht_free_cache ( mem , porder -> cache )"		578627	0					
ANR	578643	Callee	gx_ht_free_cache		578627	0					
ANR	578644	Identifier	gx_ht_free_cache		578627	0					
ANR	578645	ArgumentList	mem		578627	1					
ANR	578646	Argument	mem		578627	0					
ANR	578647	Identifier	mem		578627	0					
ANR	578648	Argument	porder -> cache		578627	1					
ANR	578649	PtrMemberAccess	porder -> cache		578627	0					
ANR	578650	Identifier	porder		578627	0					
ANR	578651	Identifier	cache		578627	1					
ANR	578652	ExpressionStatement	porder -> cache = 0	571:4:17738:17755	578627	1	True				
ANR	578653	AssignmentExpression	porder -> cache = 0		578627	0		=			
ANR	578654	PtrMemberAccess	porder -> cache		578627	0					
ANR	578655	Identifier	porder		578627	0					
ANR	578656	Identifier	cache		578627	1					
ANR	578657	PrimaryExpression	0		578627	1					
ANR	578658	ExpressionStatement	"rc_decrement ( porder -> transfer , ""gx_ht_order_release(transfer)"" )"	572:4:17761:17824	578627	2	True				
ANR	578659	CallExpression	"rc_decrement ( porder -> transfer , ""gx_ht_order_release(transfer)"" )"		578627	0					
ANR	578660	Callee	rc_decrement		578627	0					
ANR	578661	Identifier	rc_decrement		578627	0					
ANR	578662	ArgumentList	porder -> transfer		578627	1					
ANR	578663	Argument	porder -> transfer		578627	0					
ANR	578664	PtrMemberAccess	porder -> transfer		578627	0					
ANR	578665	Identifier	porder		578627	0					
ANR	578666	Identifier	transfer		578627	1					
ANR	578667	Argument	"""gx_ht_order_release(transfer)"""		578627	1					
ANR	578668	PrimaryExpression	"""gx_ht_order_release(transfer)"""		578627	0					
ANR	578669	ExpressionStatement	porder -> transfer = 0	573:4:17830:17850	578627	3	True				
ANR	578670	AssignmentExpression	porder -> transfer = 0		578627	0		=			
ANR	578671	PtrMemberAccess	porder -> transfer		578627	0					
ANR	578672	Identifier	porder		578627	0					
ANR	578673	Identifier	transfer		578627	1					
ANR	578674	PrimaryExpression	0		578627	1					
ANR	578675	IfStatement	if ( porder -> data_memory != 0 )		578627	4					
ANR	578676	Condition	porder -> data_memory != 0	574:8:17860:17883	578627	0	True				
ANR	578677	EqualityExpression	porder -> data_memory != 0		578627	0		!=			
ANR	578678	PtrMemberAccess	porder -> data_memory		578627	0					
ANR	578679	Identifier	porder		578627	0					
ANR	578680	Identifier	data_memory		578627	1					
ANR	578681	PrimaryExpression	0		578627	1					
ANR	578682	CompoundStatement		10:34:324:324	578627	1					
ANR	578683	ExpressionStatement	"gs_free_object ( porder -> data_memory , porder -> bit_data , ""gx_ht_order_release(bit_data)"" )"	575:8:17896:18005	578627	0	True				
ANR	578684	CallExpression	"gs_free_object ( porder -> data_memory , porder -> bit_data , ""gx_ht_order_release(bit_data)"" )"		578627	0					
ANR	578685	Callee	gs_free_object		578627	0					
ANR	578686	Identifier	gs_free_object		578627	0					
ANR	578687	ArgumentList	porder -> data_memory		578627	1					
ANR	578688	Argument	porder -> data_memory		578627	0					
ANR	578689	PtrMemberAccess	porder -> data_memory		578627	0					
ANR	578690	Identifier	porder		578627	0					
ANR	578691	Identifier	data_memory		578627	1					
ANR	578692	Argument	porder -> bit_data		578627	1					
ANR	578693	PtrMemberAccess	porder -> bit_data		578627	0					
ANR	578694	Identifier	porder		578627	0					
ANR	578695	Identifier	bit_data		578627	1					
ANR	578696	Argument	"""gx_ht_order_release(bit_data)"""		578627	2					
ANR	578697	PrimaryExpression	"""gx_ht_order_release(bit_data)"""		578627	0					
ANR	578698	ExpressionStatement	"gs_free_object ( porder -> data_memory , porder -> levels , ""gx_ht_order_release(levels)"" )"	577:8:18015:18120	578627	1	True				
ANR	578699	CallExpression	"gs_free_object ( porder -> data_memory , porder -> levels , ""gx_ht_order_release(levels)"" )"		578627	0					
ANR	578700	Callee	gs_free_object		578627	0					
ANR	578701	Identifier	gs_free_object		578627	0					
ANR	578702	ArgumentList	porder -> data_memory		578627	1					
ANR	578703	Argument	porder -> data_memory		578627	0					
ANR	578704	PtrMemberAccess	porder -> data_memory		578627	0					
ANR	578705	Identifier	porder		578627	0					
ANR	578706	Identifier	data_memory		578627	1					
ANR	578707	Argument	porder -> levels		578627	1					
ANR	578708	PtrMemberAccess	porder -> levels		578627	0					
ANR	578709	Identifier	porder		578627	0					
ANR	578710	Identifier	levels		578627	1					
ANR	578711	Argument	"""gx_ht_order_release(levels)"""		578627	2					
ANR	578712	PrimaryExpression	"""gx_ht_order_release(levels)"""		578627	0					
ANR	578713	IfStatement	if ( porder -> threshold != NULL )		578627	2					
ANR	578714	Condition	porder -> threshold != NULL	579:12:18134:18158	578627	0	True				
ANR	578715	EqualityExpression	porder -> threshold != NULL		578627	0		!=			
ANR	578716	PtrMemberAccess	porder -> threshold		578627	0					
ANR	578717	Identifier	porder		578627	0					
ANR	578718	Identifier	threshold		578627	1					
ANR	578719	Identifier	NULL		578627	1					
ANR	578720	CompoundStatement		15:39:599:599	578627	1					
ANR	578721	ExpressionStatement	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""gx_ht_order_release(threshold)"" )"	580:12:18175:18301	578627	0	True				
ANR	578722	CallExpression	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""gx_ht_order_release(threshold)"" )"		578627	0					
ANR	578723	Callee	gs_free_object		578627	0					
ANR	578724	Identifier	gs_free_object		578627	0					
ANR	578725	ArgumentList	porder -> data_memory -> non_gc_memory		578627	1					
ANR	578726	Argument	porder -> data_memory -> non_gc_memory		578627	0					
ANR	578727	PtrMemberAccess	porder -> data_memory -> non_gc_memory		578627	0					
ANR	578728	PtrMemberAccess	porder -> data_memory		578627	0					
ANR	578729	Identifier	porder		578627	0					
ANR	578730	Identifier	data_memory		578627	1					
ANR	578731	Identifier	non_gc_memory		578627	1					
ANR	578732	Argument	porder -> threshold		578627	1					
ANR	578733	PtrMemberAccess	porder -> threshold		578627	0					
ANR	578734	Identifier	porder		578627	0					
ANR	578735	Identifier	threshold		578627	1					
ANR	578736	Argument	"""gx_ht_order_release(threshold)"""		578627	2					
ANR	578737	PrimaryExpression	"""gx_ht_order_release(threshold)"""		578627	0					
ANR	578738	ExpressionStatement	porder -> threshold = 0	584:4:18323:18344	578627	5	True				
ANR	578739	AssignmentExpression	porder -> threshold = 0		578627	0		=			
ANR	578740	PtrMemberAccess	porder -> threshold		578627	0					
ANR	578741	Identifier	porder		578627	0					
ANR	578742	Identifier	threshold		578627	1					
ANR	578743	PrimaryExpression	0		578627	1					
ANR	578744	ExpressionStatement	porder -> levels = 0	585:4:18350:18368	578627	6	True				
ANR	578745	AssignmentExpression	porder -> levels = 0		578627	0		=			
ANR	578746	PtrMemberAccess	porder -> levels		578627	0					
ANR	578747	Identifier	porder		578627	0					
ANR	578748	Identifier	levels		578627	1					
ANR	578749	PrimaryExpression	0		578627	1					
ANR	578750	ExpressionStatement	porder -> bit_data = 0	586:4:18374:18394	578627	7	True				
ANR	578751	AssignmentExpression	porder -> bit_data = 0		578627	0		=			
ANR	578752	PtrMemberAccess	porder -> bit_data		578627	0					
ANR	578753	Identifier	porder		578627	0					
ANR	578754	Identifier	bit_data		578627	1					
ANR	578755	PrimaryExpression	0		578627	1					
ANR	578756	ReturnType	void		578627	1					
ANR	578757	Identifier	gx_ht_order_release		578627	2					
ANR	578758	ParameterList	"gx_ht_order * porder , gs_memory_t * mem , bool free_cache"		578627	3					
ANR	578759	Parameter	gx_ht_order * porder	564:20:17503:17522	578627	0	True				
ANR	578760	ParameterType	gx_ht_order *		578627	0					
ANR	578761	Identifier	porder		578627	1					
ANR	578762	Parameter	gs_memory_t * mem	564:42:17525:17541	578627	1	True				
ANR	578763	ParameterType	gs_memory_t *		578627	0					
ANR	578764	Identifier	mem		578627	1					
ANR	578765	Parameter	bool free_cache	564:61:17544:17558	578627	2	True				
ANR	578766	ParameterType	bool		578627	0					
ANR	578767	Identifier	free_cache		578627	1					
ANR	578768	CFGEntryNode	ENTRY		578627		True				
ANR	578769	CFGExitNode	EXIT		578627		True				
ANR	578770	Symbol	* porder -> data_memory		578627						
ANR	578771	Symbol	porder -> cache		578627						
ANR	578772	Symbol	NULL		578627						
ANR	578773	Symbol	* * porder		578627						
ANR	578774	Symbol	free_cache		578627						
ANR	578775	Symbol	porder -> data_memory -> non_gc_memory		578627						
ANR	578776	Symbol	porder		578627						
ANR	578777	Symbol	porder -> transfer		578627						
ANR	578778	Symbol	porder -> levels		578627						
ANR	578779	Symbol	porder -> threshold		578627						
ANR	578780	Symbol	porder -> bit_data		578627						
ANR	578781	Symbol	mem		578627						
ANR	578782	Symbol	* porder		578627						
ANR	578783	Symbol	porder -> data_memory		578627						
ANR	578784	Function	gx_device_halftone_release	589:0:18399:19220							
ANR	578785	FunctionDef	"gx_device_halftone_release (gx_device_halftone * pdht , gs_memory_t * mem)"		578784	0					
ANR	578786	CompoundStatement		591:0:18477:19220	578784	0					
ANR	578787	IfStatement	if ( pdht -> components )		578784	0					
ANR	578788	Condition	pdht -> components	592:8:18487:18502	578784	0	True				
ANR	578789	PtrMemberAccess	pdht -> components		578784	0					
ANR	578790	Identifier	pdht		578784	0					
ANR	578791	Identifier	components		578784	1					
ANR	578792	CompoundStatement		3:8:37:42	578784	1					
ANR	578793	IdentifierDeclStatement	int i ;	593:8:18515:18520	578784	0	True				
ANR	578794	IdentifierDecl	i		578784	0					
ANR	578795	IdentifierDeclType	int		578784	0					
ANR	578796	Identifier	i		578784	1					
ANR	578797	ForStatement	for ( i = 0 ; i < pdht -> num_comp ; ++ i )		578784	1					
ANR	578798	ForInit	i = 0 ;	597:13:18664:18669	578784	0	True				
ANR	578799	AssignmentExpression	i = 0		578784	0		=			
ANR	578800	Identifier	i		578784	0					
ANR	578801	PrimaryExpression	0		578784	1					
ANR	578802	Condition	i < pdht -> num_comp	597:20:18671:18688	578784	1	True				
ANR	578803	RelationalExpression	i < pdht -> num_comp		578784	0		<			
ANR	578804	Identifier	i		578784	0					
ANR	578805	PtrMemberAccess	pdht -> num_comp		578784	1					
ANR	578806	Identifier	pdht		578784	0					
ANR	578807	Identifier	num_comp		578784	1					
ANR	578808	UnaryExpression	++ i	597:40:18691:18693	578784	2	True				
ANR	578809	IncDec	++		578784	0					
ANR	578810	Identifier	i		578784	1					
ANR	578811	IfStatement	if ( pdht -> components [ i ] . corder . bit_data != pdht -> order . bit_data )		578784	3					
ANR	578812	Condition	pdht -> components [ i ] . corder . bit_data != pdht -> order . bit_data	598:16:18712:18786	578784	0	True				
ANR	578813	EqualityExpression	pdht -> components [ i ] . corder . bit_data != pdht -> order . bit_data		578784	0		!=			
ANR	578814	MemberAccess	pdht -> components [ i ] . corder . bit_data		578784	0					
ANR	578815	MemberAccess	pdht -> components [ i ] . corder		578784	0					
ANR	578816	ArrayIndexing	pdht -> components [ i ]		578784	0					
ANR	578817	PtrMemberAccess	pdht -> components		578784	0					
ANR	578818	Identifier	pdht		578784	0					
ANR	578819	Identifier	components		578784	1					
ANR	578820	Identifier	i		578784	1					
ANR	578821	Identifier	corder		578784	1					
ANR	578822	Identifier	bit_data		578784	1					
ANR	578823	MemberAccess	pdht -> order . bit_data		578784	1					
ANR	578824	PtrMemberAccess	pdht -> order		578784	0					
ANR	578825	Identifier	pdht		578784	0					
ANR	578826	Identifier	order		578784	1					
ANR	578827	Identifier	bit_data		578784	1					
ANR	578828	CompoundStatement		10:18:328:328	578784	1					
ANR	578829	ExpressionStatement	"gx_ht_order_release ( & pdht -> components [ i ] . corder , mem , true )"	602:16:18927:18986	578784	0	True				
ANR	578830	CallExpression	"gx_ht_order_release ( & pdht -> components [ i ] . corder , mem , true )"		578784	0					
ANR	578831	Callee	gx_ht_order_release		578784	0					
ANR	578832	Identifier	gx_ht_order_release		578784	0					
ANR	578833	ArgumentList	& pdht -> components [ i ] . corder		578784	1					
ANR	578834	Argument	& pdht -> components [ i ] . corder		578784	0					
ANR	578835	UnaryOperationExpression	& pdht -> components [ i ] . corder		578784	0					
ANR	578836	UnaryOperator	&		578784	0					
ANR	578837	MemberAccess	pdht -> components [ i ] . corder		578784	1					
ANR	578838	ArrayIndexing	pdht -> components [ i ]		578784	0					
ANR	578839	PtrMemberAccess	pdht -> components		578784	0					
ANR	578840	Identifier	pdht		578784	0					
ANR	578841	Identifier	components		578784	1					
ANR	578842	Identifier	i		578784	1					
ANR	578843	Identifier	corder		578784	1					
ANR	578844	Argument	mem		578784	1					
ANR	578845	Identifier	mem		578784	0					
ANR	578846	Argument	true		578784	2					
ANR	578847	Identifier	true		578784	0					
ANR	578848	ExpressionStatement	"gs_free_object ( mem , pdht -> components , ""gx_dev_ht_release(components)"" )"	604:8:19010:19103	578784	2	True				
ANR	578849	CallExpression	"gs_free_object ( mem , pdht -> components , ""gx_dev_ht_release(components)"" )"		578784	0					
ANR	578850	Callee	gs_free_object		578784	0					
ANR	578851	Identifier	gs_free_object		578784	0					
ANR	578852	ArgumentList	mem		578784	1					
ANR	578853	Argument	mem		578784	0					
ANR	578854	Identifier	mem		578784	0					
ANR	578855	Argument	pdht -> components		578784	1					
ANR	578856	PtrMemberAccess	pdht -> components		578784	0					
ANR	578857	Identifier	pdht		578784	0					
ANR	578858	Identifier	components		578784	1					
ANR	578859	Argument	"""gx_dev_ht_release(components)"""		578784	2					
ANR	578860	PrimaryExpression	"""gx_dev_ht_release(components)"""		578784	0					
ANR	578861	ExpressionStatement	pdht -> components = 0	606:8:19113:19133	578784	3	True				
ANR	578862	AssignmentExpression	pdht -> components = 0		578784	0		=			
ANR	578863	PtrMemberAccess	pdht -> components		578784	0					
ANR	578864	Identifier	pdht		578784	0					
ANR	578865	Identifier	components		578784	1					
ANR	578866	PrimaryExpression	0		578784	1					
ANR	578867	ExpressionStatement	pdht -> num_comp = 0	607:8:19143:19161	578784	4	True				
ANR	578868	AssignmentExpression	pdht -> num_comp = 0		578784	0		=			
ANR	578869	PtrMemberAccess	pdht -> num_comp		578784	0					
ANR	578870	Identifier	pdht		578784	0					
ANR	578871	Identifier	num_comp		578784	1					
ANR	578872	PrimaryExpression	0		578784	1					
ANR	578873	ExpressionStatement	"gx_ht_order_release ( & pdht -> order , mem , false )"	609:4:19173:19218	578784	1	True				
ANR	578874	CallExpression	"gx_ht_order_release ( & pdht -> order , mem , false )"		578784	0					
ANR	578875	Callee	gx_ht_order_release		578784	0					
ANR	578876	Identifier	gx_ht_order_release		578784	0					
ANR	578877	ArgumentList	& pdht -> order		578784	1					
ANR	578878	Argument	& pdht -> order		578784	0					
ANR	578879	UnaryOperationExpression	& pdht -> order		578784	0					
ANR	578880	UnaryOperator	&		578784	0					
ANR	578881	PtrMemberAccess	pdht -> order		578784	1					
ANR	578882	Identifier	pdht		578784	0					
ANR	578883	Identifier	order		578784	1					
ANR	578884	Argument	mem		578784	1					
ANR	578885	Identifier	mem		578784	0					
ANR	578886	Argument	false		578784	2					
ANR	578887	Identifier	false		578784	0					
ANR	578888	ReturnType	void		578784	1					
ANR	578889	Identifier	gx_device_halftone_release		578784	2					
ANR	578890	ParameterList	"gx_device_halftone * pdht , gs_memory_t * mem"		578784	3					
ANR	578891	Parameter	gx_device_halftone * pdht	590:27:18431:18455	578784	0	True				
ANR	578892	ParameterType	gx_device_halftone *		578784	0					
ANR	578893	Identifier	pdht		578784	1					
ANR	578894	Parameter	gs_memory_t * mem	590:54:18458:18474	578784	1	True				
ANR	578895	ParameterType	gs_memory_t *		578784	0					
ANR	578896	Identifier	mem		578784	1					
ANR	578897	CFGEntryNode	ENTRY		578784		True				
ANR	578898	CFGExitNode	EXIT		578784		True				
ANR	578899	Symbol	& pdht -> order		578784						
ANR	578900	Symbol	pdht -> order		578784						
ANR	578901	Symbol	pdht -> order . bit_data		578784						
ANR	578902	Symbol	false		578784						
ANR	578903	Symbol	i		578784						
ANR	578904	Symbol	pdht -> components		578784						
ANR	578905	Symbol	pdht -> components [ i ] . corder . bit_data		578784						
ANR	578906	Symbol	* i		578784						
ANR	578907	Symbol	pdht		578784						
ANR	578908	Symbol	mem		578784						
ANR	578909	Symbol	* pdht		578784						
ANR	578910	Symbol	pdht -> num_comp		578784						
ANR	578911	Symbol	pdht -> components [ i ] . corder		578784						
ANR	578912	Symbol	* * pdht		578784						
ANR	578913	Symbol	true		578784						
ANR	578914	Symbol	& pdht -> components [ i ] . corder		578784						
ANR	578915	Symbol	* pdht -> components		578784						
ANR	578916	Function	gs_color_name_component_number	632:0:20207:22893							
ANR	578917	FunctionDef	"gs_color_name_component_number (gx_device * dev , const char * pname , int name_size , int halftonetype)"		578916	0					
ANR	578918	CompoundStatement		635:0:20344:22893	578916	0					
ANR	578919	IdentifierDeclStatement	int num_colorant ;	636:4:20350:20366	578916	0	True				
ANR	578920	IdentifierDecl	num_colorant		578916	0					
ANR	578921	IdentifierDeclType	int		578916	0					
ANR	578922	Identifier	num_colorant		578916	1					
ANR	578923	Statement	define	638:1:20370:20375	578916	1	True				
ANR	578924	Statement	check_colorant_name	638:8:20377:20395	578916	2	True				
ANR	578925	Statement	(	638:27:20396:20396	578916	3	True				
ANR	578926	Statement	dev	638:28:20397:20399	578916	4	True				
ANR	578927	Statement	","	638:31:20400:20400	578916	5	True				
ANR	578928	Statement	name	638:33:20402:20405	578916	6	True				
ANR	578929	Statement	)	638:37:20406:20406	578916	7	True				
ANR	578930	Statement	(	639:4:20414:20414	578916	8	True				
ANR	578931	Statement	(	639:5:20415:20415	578916	9	True				
ANR	578932	Statement	*	639:6:20416:20416	578916	10	True				
ANR	578933	Statement	dev_proc	639:7:20417:20424	578916	11	True				
ANR	578934	Statement	(	639:15:20425:20425	578916	12	True				
ANR	578935	Statement	dev	639:16:20426:20428	578916	13	True				
ANR	578936	Statement	","	639:19:20429:20429	578916	14	True				
ANR	578937	Statement	get_color_comp_index	639:21:20431:20450	578916	15	True				
ANR	578938	Statement	)	639:41:20451:20451	578916	16	True				
ANR	578939	Statement	)	639:42:20452:20452	578916	17	True				
ANR	578940	Statement	(	639:44:20454:20454	578916	18	True				
ANR	578941	Statement	dev	639:45:20455:20457	578916	19	True				
ANR	578942	Statement	","	639:48:20458:20458	578916	20	True				
ANR	578943	Statement	name	639:50:20460:20463	578916	21	True				
ANR	578944	Statement	","	639:54:20464:20464	578916	22	True				
ANR	578945	Statement	strlen	639:56:20466:20471	578916	23	True				
ANR	578946	Statement	(	639:62:20472:20472	578916	24	True				
ANR	578947	Statement	name	639:63:20473:20476	578916	25	True				
ANR	578948	Statement	)	639:67:20477:20477	578916	26	True				
ANR	578949	Statement	","	639:68:20478:20478	578916	27	True				
ANR	578950	Statement	NO_COMP_NAME_TYPE	639:70:20480:20496	578916	28	True				
ANR	578951	Statement	)	639:87:20497:20497	578916	29	True				
ANR	578952	Statement	)	639:88:20498:20498	578916	30	True				
ANR	578953	Statement	define	641:1:20502:20507	578916	31	True				
ANR	578954	Statement	check_colorant_name_length	641:8:20509:20534	578916	32	True				
ANR	578955	Statement	(	641:34:20535:20535	578916	33	True				
ANR	578956	Statement	dev	641:35:20536:20538	578916	34	True				
ANR	578957	Statement	","	641:38:20539:20539	578916	35	True				
ANR	578958	Statement	name	641:40:20541:20544	578916	36	True				
ANR	578959	Statement	","	641:44:20545:20545	578916	37	True				
ANR	578960	Statement	length	641:46:20547:20552	578916	38	True				
ANR	578961	Statement	)	641:52:20553:20553	578916	39	True				
ANR	578962	Statement	(	642:4:20561:20561	578916	40	True				
ANR	578963	Statement	(	642:5:20562:20562	578916	41	True				
ANR	578964	Statement	*	642:6:20563:20563	578916	42	True				
ANR	578965	Statement	dev_proc	642:7:20564:20571	578916	43	True				
ANR	578966	Statement	(	642:15:20572:20572	578916	44	True				
ANR	578967	Statement	dev	642:16:20573:20575	578916	45	True				
ANR	578968	Statement	","	642:19:20576:20576	578916	46	True				
ANR	578969	Statement	get_color_comp_index	642:21:20578:20597	578916	47	True				
ANR	578970	Statement	)	642:41:20598:20598	578916	48	True				
ANR	578971	Statement	)	642:42:20599:20599	578916	49	True				
ANR	578972	Statement	(	642:44:20601:20601	578916	50	True				
ANR	578973	Statement	dev	642:45:20602:20604	578916	51	True				
ANR	578974	Statement	","	642:48:20605:20605	578916	52	True				
ANR	578975	Statement	name	642:50:20607:20610	578916	53	True				
ANR	578976	Statement	","	642:54:20611:20611	578916	54	True				
ANR	578977	Statement	length	642:56:20613:20618	578916	55	True				
ANR	578978	Statement	","	642:62:20619:20619	578916	56	True				
ANR	578979	Statement	NO_COMP_NAME_TYPE	642:64:20621:20637	578916	57	True				
ANR	578980	Statement	)	642:81:20638:20638	578916	58	True				
ANR	578981	Statement	)	642:82:20639:20639	578916	59	True				
ANR	578982	Statement	define	644:1:20643:20648	578916	60	True				
ANR	578983	Statement	check_name	644:8:20650:20659	578916	61	True				
ANR	578984	Statement	(	644:18:20660:20660	578916	62	True				
ANR	578985	Statement	str	644:19:20661:20663	578916	63	True				
ANR	578986	Statement	","	644:22:20664:20664	578916	64	True				
ANR	578987	Statement	pname	644:24:20666:20670	578916	65	True				
ANR	578988	Statement	","	644:29:20671:20671	578916	66	True				
ANR	578989	Statement	length	644:31:20673:20678	578916	67	True				
ANR	578990	Statement	)	644:37:20679:20679	578916	68	True				
ANR	578991	Statement	(	645:4:20687:20687	578916	69	True				
ANR	578992	Statement	(	645:5:20688:20688	578916	70	True				
ANR	578993	Statement	strlen	645:6:20689:20694	578916	71	True				
ANR	578994	Statement	(	645:12:20695:20695	578916	72	True				
ANR	578995	Statement	str	645:13:20696:20698	578916	73	True				
ANR	578996	Statement	)	645:16:20699:20699	578916	74	True				
ANR	578997	Statement	==	645:18:20701:20702	578916	75	True				
ANR	578998	Statement	length	645:21:20704:20709	578916	76	True				
ANR	578999	Statement	)	645:27:20710:20710	578916	77	True				
ANR	579000	Statement	&&	645:29:20712:20713	578916	78	True				
ANR	579001	Statement	(	645:32:20715:20715	578916	79	True				
ANR	579002	Statement	strncmp	645:33:20716:20722	578916	80	True				
ANR	579003	Statement	(	645:40:20723:20723	578916	81	True				
ANR	579004	Statement	pname	645:41:20724:20728	578916	82	True				
ANR	579005	Statement	","	645:46:20729:20729	578916	83	True				
ANR	579006	Statement	str	645:48:20731:20733	578916	84	True				
ANR	579007	Statement	","	645:51:20734:20734	578916	85	True				
ANR	579008	Statement	length	645:53:20736:20741	578916	86	True				
ANR	579009	Statement	)	645:59:20742:20742	578916	87	True				
ANR	579010	Statement	==	645:61:20744:20745	578916	88	True				
ANR	579011	Statement	0	645:64:20747:20747	578916	89	True				
ANR	579012	Statement	)	645:65:20748:20748	578916	90	True				
ANR	579013	Statement	)	645:66:20749:20749	578916	91	True				
ANR	579014	ExpressionStatement	"num_colorant = check_colorant_name_length ( dev , pname , name_size )"	650:4:20814:20878	578916	92	True				
ANR	579015	AssignmentExpression	"num_colorant = check_colorant_name_length ( dev , pname , name_size )"		578916	0		=			
ANR	579016	Identifier	num_colorant		578916	0					
ANR	579017	CallExpression	"check_colorant_name_length ( dev , pname , name_size )"		578916	1					
ANR	579018	Callee	check_colorant_name_length		578916	0					
ANR	579019	Identifier	check_colorant_name_length		578916	0					
ANR	579020	ArgumentList	dev		578916	1					
ANR	579021	Argument	dev		578916	0					
ANR	579022	Identifier	dev		578916	0					
ANR	579023	Argument	pname		578916	1					
ANR	579024	Identifier	pname		578916	0					
ANR	579025	Argument	name_size		578916	2					
ANR	579026	Identifier	name_size		578916	0					
ANR	579027	IfStatement	if ( num_colorant >= 0 )		578916	93					
ANR	579028	Condition	num_colorant >= 0	651:8:20888:20904	578916	0	True				
ANR	579029	RelationalExpression	num_colorant >= 0		578916	0		>=			
ANR	579030	Identifier	num_colorant		578916	0					
ANR	579031	PrimaryExpression	0		578916	1					
ANR	579032	CompoundStatement		17:27:562:562	578916	1					
ANR	579033	IfStatement	if ( num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS )		578916	0					
ANR	579034	Condition	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS	659:12:21293:21338	578916	0	True				
ANR	579035	EqualityExpression	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS		578916	0		==			
ANR	579036	Identifier	num_colorant		578916	0					
ANR	579037	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		578916	1					
ANR	579038	ExpressionStatement	num_colorant = - 1	660:12:21353:21370	578916	1	True				
ANR	579039	AssignmentExpression	num_colorant = - 1		578916	0		=			
ANR	579040	Identifier	num_colorant		578916	0					
ANR	579041	UnaryOperationExpression	- 1		578916	1					
ANR	579042	UnaryOperator	-		578916	0					
ANR	579043	PrimaryExpression	1		578916	1					
ANR	579044	ReturnStatement	return num_colorant ;	661:8:21380:21399	578916	1	True				
ANR	579045	Identifier	num_colorant		578916	0					
ANR	579046	IfStatement	"if ( check_name ( ""Default"" , pname , name_size ) )"		578916	94					
ANR	579047	Condition	"check_name ( ""Default"" , pname , name_size )"	667:8:21477:21515	578916	0	True				
ANR	579048	CallExpression	"check_name ( ""Default"" , pname , name_size )"		578916	0					
ANR	579049	Callee	check_name		578916	0					
ANR	579050	Identifier	check_name		578916	0					
ANR	579051	ArgumentList	"""Default"""		578916	1					
ANR	579052	Argument	"""Default"""		578916	0					
ANR	579053	PrimaryExpression	"""Default"""		578916	0					
ANR	579054	Argument	pname		578916	1					
ANR	579055	Identifier	pname		578916	0					
ANR	579056	Argument	name_size		578916	2					
ANR	579057	Identifier	name_size		578916	0					
ANR	579058	ReturnStatement	return GX_DEVICE_COLOR_MAX_COMPONENTS ;	668:8:21526:21563	578916	1	True				
ANR	579059	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		578916	0					
ANR	579060	IfStatement	if ( halftonetype == ht_type_colorscreen || halftonetype == ht_type_multiple_colorscreen )		578916	95					
ANR	579061	Condition	halftonetype == ht_type_colorscreen || halftonetype == ht_type_multiple_colorscreen	673:8:21758:21848	578916	0	True				
ANR	579062	OrExpression	halftonetype == ht_type_colorscreen || halftonetype == ht_type_multiple_colorscreen		578916	0		||			
ANR	579063	EqualityExpression	halftonetype == ht_type_colorscreen		578916	0		==			
ANR	579064	Identifier	halftonetype		578916	0					
ANR	579065	Identifier	ht_type_colorscreen		578916	1					
ANR	579066	EqualityExpression	halftonetype == ht_type_multiple_colorscreen		578916	1		==			
ANR	579067	Identifier	halftonetype		578916	0					
ANR	579068	Identifier	ht_type_multiple_colorscreen		578916	1					
ANR	579069	CompoundStatement		40:54:1506:1506	578916	1					
ANR	579070	IfStatement	"if ( check_name ( ""Red"" , pname , name_size ) )"		578916	0					
ANR	579071	Condition	"check_name ( ""Red"" , pname , name_size )"	675:12:21865:21899	578916	0	True				
ANR	579072	CallExpression	"check_name ( ""Red"" , pname , name_size )"		578916	0					
ANR	579073	Callee	check_name		578916	0					
ANR	579074	Identifier	check_name		578916	0					
ANR	579075	ArgumentList	"""Red"""		578916	1					
ANR	579076	Argument	"""Red"""		578916	0					
ANR	579077	PrimaryExpression	"""Red"""		578916	0					
ANR	579078	Argument	pname		578916	1					
ANR	579079	Identifier	pname		578916	0					
ANR	579080	Argument	name_size		578916	2					
ANR	579081	Identifier	name_size		578916	0					
ANR	579082	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Cyan"" )"	676:12:21914:21961	578916	1	True				
ANR	579083	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Cyan"" )"		578916	0		=			
ANR	579084	Identifier	num_colorant		578916	0					
ANR	579085	CallExpression	"check_colorant_name ( dev , ""Cyan"" )"		578916	1					
ANR	579086	Callee	check_colorant_name		578916	0					
ANR	579087	Identifier	check_colorant_name		578916	0					
ANR	579088	ArgumentList	dev		578916	1					
ANR	579089	Argument	dev		578916	0					
ANR	579090	Identifier	dev		578916	0					
ANR	579091	Argument	"""Cyan"""		578916	1					
ANR	579092	PrimaryExpression	"""Cyan"""		578916	0					
ANR	579093	ElseStatement	else		578916	0					
ANR	579094	IfStatement	"if ( check_name ( ""Green"" , pname , name_size ) )"		578916	0					
ANR	579095	Condition	"check_name ( ""Green"" , pname , name_size )"	677:17:21980:22016	578916	0	True				
ANR	579096	CallExpression	"check_name ( ""Green"" , pname , name_size )"		578916	0					
ANR	579097	Callee	check_name		578916	0					
ANR	579098	Identifier	check_name		578916	0					
ANR	579099	ArgumentList	"""Green"""		578916	1					
ANR	579100	Argument	"""Green"""		578916	0					
ANR	579101	PrimaryExpression	"""Green"""		578916	0					
ANR	579102	Argument	pname		578916	1					
ANR	579103	Identifier	pname		578916	0					
ANR	579104	Argument	name_size		578916	2					
ANR	579105	Identifier	name_size		578916	0					
ANR	579106	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Magenta"" )"	678:12:22031:22081	578916	1	True				
ANR	579107	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Magenta"" )"		578916	0		=			
ANR	579108	Identifier	num_colorant		578916	0					
ANR	579109	CallExpression	"check_colorant_name ( dev , ""Magenta"" )"		578916	1					
ANR	579110	Callee	check_colorant_name		578916	0					
ANR	579111	Identifier	check_colorant_name		578916	0					
ANR	579112	ArgumentList	dev		578916	1					
ANR	579113	Argument	dev		578916	0					
ANR	579114	Identifier	dev		578916	0					
ANR	579115	Argument	"""Magenta"""		578916	1					
ANR	579116	PrimaryExpression	"""Magenta"""		578916	0					
ANR	579117	ElseStatement	else		578916	0					
ANR	579118	IfStatement	"if ( check_name ( ""Blue"" , pname , name_size ) )"		578916	0					
ANR	579119	Condition	"check_name ( ""Blue"" , pname , name_size )"	679:17:22100:22135	578916	0	True				
ANR	579120	CallExpression	"check_name ( ""Blue"" , pname , name_size )"		578916	0					
ANR	579121	Callee	check_name		578916	0					
ANR	579122	Identifier	check_name		578916	0					
ANR	579123	ArgumentList	"""Blue"""		578916	1					
ANR	579124	Argument	"""Blue"""		578916	0					
ANR	579125	PrimaryExpression	"""Blue"""		578916	0					
ANR	579126	Argument	pname		578916	1					
ANR	579127	Identifier	pname		578916	0					
ANR	579128	Argument	name_size		578916	2					
ANR	579129	Identifier	name_size		578916	0					
ANR	579130	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Yellow"" )"	680:12:22150:22199	578916	1	True				
ANR	579131	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Yellow"" )"		578916	0		=			
ANR	579132	Identifier	num_colorant		578916	0					
ANR	579133	CallExpression	"check_colorant_name ( dev , ""Yellow"" )"		578916	1					
ANR	579134	Callee	check_colorant_name		578916	0					
ANR	579135	Identifier	check_colorant_name		578916	0					
ANR	579136	ArgumentList	dev		578916	1					
ANR	579137	Argument	dev		578916	0					
ANR	579138	Identifier	dev		578916	0					
ANR	579139	Argument	"""Yellow"""		578916	1					
ANR	579140	PrimaryExpression	"""Yellow"""		578916	0					
ANR	579141	ElseStatement	else		578916	0					
ANR	579142	IfStatement	"if ( check_name ( ""Gray"" , pname , name_size ) )"		578916	0					
ANR	579143	Condition	"check_name ( ""Gray"" , pname , name_size )"	681:17:22218:22253	578916	0	True				
ANR	579144	CallExpression	"check_name ( ""Gray"" , pname , name_size )"		578916	0					
ANR	579145	Callee	check_name		578916	0					
ANR	579146	Identifier	check_name		578916	0					
ANR	579147	ArgumentList	"""Gray"""		578916	1					
ANR	579148	Argument	"""Gray"""		578916	0					
ANR	579149	PrimaryExpression	"""Gray"""		578916	0					
ANR	579150	Argument	pname		578916	1					
ANR	579151	Identifier	pname		578916	0					
ANR	579152	Argument	name_size		578916	2					
ANR	579153	Identifier	name_size		578916	0					
ANR	579154	ExpressionStatement	"num_colorant = check_colorant_name ( dev , ""Black"" )"	682:12:22268:22316	578916	1	True				
ANR	579155	AssignmentExpression	"num_colorant = check_colorant_name ( dev , ""Black"" )"		578916	0		=			
ANR	579156	Identifier	num_colorant		578916	0					
ANR	579157	CallExpression	"check_colorant_name ( dev , ""Black"" )"		578916	1					
ANR	579158	Callee	check_colorant_name		578916	0					
ANR	579159	Identifier	check_colorant_name		578916	0					
ANR	579160	ArgumentList	dev		578916	1					
ANR	579161	Argument	dev		578916	0					
ANR	579162	Identifier	dev		578916	0					
ANR	579163	Argument	"""Black"""		578916	1					
ANR	579164	PrimaryExpression	"""Black"""		578916	0					
ANR	579165	IfStatement	if ( num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS )		578916	1					
ANR	579166	Condition	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS	690:12:22702:22747	578916	0	True				
ANR	579167	EqualityExpression	num_colorant == GX_DEVICE_COLOR_MAX_COMPONENTS		578916	0		==			
ANR	579168	Identifier	num_colorant		578916	0					
ANR	579169	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		578916	1					
ANR	579170	ExpressionStatement	num_colorant = - 1	691:12:22762:22779	578916	1	True				
ANR	579171	AssignmentExpression	num_colorant = - 1		578916	0		=			
ANR	579172	Identifier	num_colorant		578916	0					
ANR	579173	UnaryOperationExpression	- 1		578916	1					
ANR	579174	UnaryOperator	-		578916	0					
ANR	579175	PrimaryExpression	1		578916	1					
ANR	579176	Statement	undef	693:1:22783:22787	578916	2	True				
ANR	579177	Statement	check_colorant_name	693:7:22789:22807	578916	3	True				
ANR	579178	Statement	undef	694:1:22810:22814	578916	4	True				
ANR	579179	Statement	check_colorant_name_length	694:7:22816:22841	578916	5	True				
ANR	579180	Statement	undef	695:1:22844:22848	578916	6	True				
ANR	579181	Statement	check_name	695:7:22850:22859	578916	7	True				
ANR	579182	ReturnStatement	return num_colorant ;	698:4:22872:22891	578916	96	True				
ANR	579183	Identifier	num_colorant		578916	0					
ANR	579184	ReturnType	int		578916	1					
ANR	579185	Identifier	gs_color_name_component_number		578916	2					
ANR	579186	ParameterList	"gx_device * dev , const char * pname , int name_size , int halftonetype"		578916	3					
ANR	579187	Parameter	gx_device * dev	633:31:20242:20256	578916	0	True				
ANR	579188	ParameterType	gx_device *		578916	0					
ANR	579189	Identifier	dev		578916	1					
ANR	579190	Parameter	const char * pname	633:48:20259:20276	578916	1	True				
ANR	579191	ParameterType	const char *		578916	0					
ANR	579192	Identifier	pname		578916	1					
ANR	579193	Parameter	int name_size	634:32:20311:20323	578916	2	True				
ANR	579194	ParameterType	int		578916	0					
ANR	579195	Identifier	name_size		578916	1					
ANR	579196	Parameter	int halftonetype	634:47:20326:20341	578916	3	True				
ANR	579197	ParameterType	int		578916	0					
ANR	579198	Identifier	halftonetype		578916	1					
ANR	579199	CFGEntryNode	ENTRY		578916		True				
ANR	579200	CFGExitNode	EXIT		578916		True				
ANR	579201	Symbol	check_colorant_name_length		578916						
ANR	579202	Symbol	dev		578916						
ANR	579203	Symbol	ht_type_multiple_colorscreen		578916						
ANR	579204	Symbol	pname		578916						
ANR	579205	Symbol	halftonetype		578916						
ANR	579206	Symbol	num_colorant		578916						
ANR	579207	Symbol	check_colorant_name		578916						
ANR	579208	Symbol	check_name		578916						
ANR	579209	Symbol	ht_type_colorscreen		578916						
ANR	579210	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		578916						
ANR	579211	Symbol	name_size		578916						
ANR	579212	Function	gs_cname_to_colorant_number	707:0:23082:23341							
ANR	579213	FunctionDef	"gs_cname_to_colorant_number (gs_gstate * pgs , byte * pname , uint name_size , int halftonetype)"		579212	0					
ANR	579214	CompoundStatement		710:0:23195:23341	579212	0					
ANR	579215	IdentifierDeclStatement	gx_device * dev = pgs -> device ;	711:4:23201:23230	579212	0	True				
ANR	579216	IdentifierDecl	* dev = pgs -> device		579212	0					
ANR	579217	IdentifierDeclType	gx_device *		579212	0					
ANR	579218	Identifier	dev		579212	1					
ANR	579219	AssignmentExpression	* dev = pgs -> device		579212	2		=			
ANR	579220	Identifier	dev		579212	0					
ANR	579221	PtrMemberAccess	pgs -> device		579212	1					
ANR	579222	Identifier	pgs		579212	0					
ANR	579223	Identifier	device		579212	1					
ANR	579224	ReturnStatement	"return gs_color_name_component_number ( dev , ( char * ) pname , name_size , halftonetype ) ;"	713:4:23237:23339	579212	1	True				
ANR	579225	CallExpression	"gs_color_name_component_number ( dev , ( char * ) pname , name_size , halftonetype )"		579212	0					
ANR	579226	Callee	gs_color_name_component_number		579212	0					
ANR	579227	Identifier	gs_color_name_component_number		579212	0					
ANR	579228	ArgumentList	dev		579212	1					
ANR	579229	Argument	dev		579212	0					
ANR	579230	Identifier	dev		579212	0					
ANR	579231	Argument	( char * ) pname		579212	1					
ANR	579232	CastExpression	( char * ) pname		579212	0					
ANR	579233	CastTarget	char *		579212	0					
ANR	579234	Identifier	pname		579212	1					
ANR	579235	Argument	name_size		579212	2					
ANR	579236	Identifier	name_size		579212	0					
ANR	579237	Argument	halftonetype		579212	3					
ANR	579238	Identifier	halftonetype		579212	0					
ANR	579239	ReturnType	int		579212	1					
ANR	579240	Identifier	gs_cname_to_colorant_number		579212	2					
ANR	579241	ParameterList	"gs_gstate * pgs , byte * pname , uint name_size , int halftonetype"		579212	3					
ANR	579242	Parameter	gs_gstate * pgs	708:28:23114:23128	579212	0	True				
ANR	579243	ParameterType	gs_gstate *		579212	0					
ANR	579244	Identifier	pgs		579212	1					
ANR	579245	Parameter	byte * pname	708:45:23131:23142	579212	1	True				
ANR	579246	ParameterType	byte *		579212	0					
ANR	579247	Identifier	pname		579212	1					
ANR	579248	Parameter	uint name_size	708:59:23145:23158	579212	2	True				
ANR	579249	ParameterType	uint		579212	0					
ANR	579250	Identifier	name_size		579212	1					
ANR	579251	Parameter	int halftonetype	709:16:23177:23192	579212	3	True				
ANR	579252	ParameterType	int		579212	0					
ANR	579253	Identifier	halftonetype		579212	1					
ANR	579254	CFGEntryNode	ENTRY		579212		True				
ANR	579255	CFGExitNode	EXIT		579212		True				
ANR	579256	Symbol	gs_color_name_component_number		579212						
ANR	579257	Symbol	dev		579212						
ANR	579258	Symbol	pname		579212						
ANR	579259	Symbol	halftonetype		579212						
ANR	579260	Symbol	* pgs		579212						
ANR	579261	Symbol	pgs -> device		579212						
ANR	579262	Symbol	pgs		579212						
ANR	579263	Symbol	name_size		579212						
ANR	579264	Function	gx_gstate_dev_ht_install	936:0:35507:44969							
ANR	579265	FunctionDef	"gx_gstate_dev_ht_install (gs_gstate * pgs , gx_device_halftone * pdht , gs_halftone_type type , const gx_device * dev)"		579264	0					
ANR	579266	CompoundStatement		942:0:35666:44969	579264	0					
ANR	579267	IdentifierDeclStatement	gx_device_halftone dht ;	943:4:35672:35699	579264	0	True				
ANR	579268	IdentifierDecl	dht		579264	0					
ANR	579269	IdentifierDeclType	gx_device_halftone		579264	0					
ANR	579270	Identifier	dht		579264	1					
ANR	579271	IdentifierDeclStatement	int num_comps = pdht -> num_dev_comp ;	944:4:35705:35759	579264	1	True				
ANR	579272	IdentifierDecl	num_comps = pdht -> num_dev_comp		579264	0					
ANR	579273	IdentifierDeclType	int		579264	0					
ANR	579274	Identifier	num_comps		579264	1					
ANR	579275	AssignmentExpression	num_comps = pdht -> num_dev_comp		579264	2		=			
ANR	579276	Identifier	num_comps		579264	0					
ANR	579277	PtrMemberAccess	pdht -> num_dev_comp		579264	1					
ANR	579278	Identifier	pdht		579264	0					
ANR	579279	Identifier	num_dev_comp		579264	1					
ANR	579280	IdentifierDeclStatement	"int i , code = 0 ;"	945:4:35765:35800	579264	2	True				
ANR	579281	IdentifierDecl	i		579264	0					
ANR	579282	IdentifierDeclType	int		579264	0					
ANR	579283	Identifier	i		579264	1					
ANR	579284	IdentifierDecl	code = 0		579264	1					
ANR	579285	IdentifierDeclType	int		579264	0					
ANR	579286	Identifier	code		579264	1					
ANR	579287	AssignmentExpression	code = 0		579264	2		=			
ANR	579288	Identifier	code		579264	0					
ANR	579289	PrimaryExpression	0		579264	1					
ANR	579290	IdentifierDeclStatement	bool used_default = false ;	946:4:35806:35850	579264	3	True				
ANR	579291	IdentifierDecl	used_default = false		579264	0					
ANR	579292	IdentifierDeclType	bool		579264	0					
ANR	579293	Identifier	used_default		579264	1					
ANR	579294	AssignmentExpression	used_default = false		579264	2		=			
ANR	579295	Identifier	false		579264	0					
ANR	579296	Identifier	false		579264	1					
ANR	579297	IdentifierDeclStatement	"int lcm_width = 1 , lcm_height = 1 ;"	947:4:35856:35909	579264	4	True				
ANR	579298	IdentifierDecl	lcm_width = 1		579264	0					
ANR	579299	IdentifierDeclType	int		579264	0					
ANR	579300	Identifier	lcm_width		579264	1					
ANR	579301	AssignmentExpression	lcm_width = 1		579264	2		=			
ANR	579302	Identifier	lcm_width		579264	0					
ANR	579303	PrimaryExpression	1		579264	1					
ANR	579304	IdentifierDecl	lcm_height = 1		579264	1					
ANR	579305	IdentifierDeclType	int		579264	0					
ANR	579306	Identifier	lcm_height		579264	1					
ANR	579307	AssignmentExpression	lcm_height = 1		579264	2		=			
ANR	579308	Identifier	lcm_height		579264	0					
ANR	579309	PrimaryExpression	1		579264	1					
ANR	579310	IdentifierDeclStatement	bool mem_diff = pdht -> rc . memory != pgs -> memory ;	948:4:35915:35980	579264	5	True				
ANR	579311	IdentifierDecl	mem_diff = pdht -> rc . memory != pgs -> memory		579264	0					
ANR	579312	IdentifierDeclType	bool		579264	0					
ANR	579313	Identifier	mem_diff		579264	1					
ANR	579314	AssignmentExpression	mem_diff = pdht -> rc . memory != pgs -> memory		579264	2		=			
ANR	579315	Identifier	mem_diff		579264	0					
ANR	579316	EqualityExpression	pdht -> rc . memory != pgs -> memory		579264	1		!=			
ANR	579317	MemberAccess	pdht -> rc . memory		579264	0					
ANR	579318	PtrMemberAccess	pdht -> rc		579264	0					
ANR	579319	Identifier	pdht		579264	0					
ANR	579320	Identifier	rc		579264	1					
ANR	579321	Identifier	memory		579264	1					
ANR	579322	PtrMemberAccess	pgs -> memory		579264	1					
ANR	579323	Identifier	pgs		579264	0					
ANR	579324	Identifier	memory		579264	1					
ANR	579325	IdentifierDeclStatement	"uint w , h ;"	949:4:35986:35995	579264	6	True				
ANR	579326	IdentifierDecl	w		579264	0					
ANR	579327	IdentifierDeclType	uint		579264	0					
ANR	579328	Identifier	w		579264	1					
ANR	579329	IdentifierDecl	h		579264	1					
ANR	579330	IdentifierDeclType	uint		579264	0					
ANR	579331	Identifier	h		579264	1					
ANR	579332	IdentifierDeclStatement	"int dw , dh ;"	950:4:36001:36011	579264	7	True				
ANR	579333	IdentifierDecl	dw		579264	0					
ANR	579334	IdentifierDeclType	int		579264	0					
ANR	579335	Identifier	dw		579264	1					
ANR	579336	IdentifierDecl	dh		579264	1					
ANR	579337	IdentifierDeclType	int		579264	0					
ANR	579338	Identifier	dh		579264	1					
ANR	579339	ExpressionStatement	"memset ( & dht . order , 0 , sizeof ( dht . order ) )"	953:4:36072:36112	579264	8	True				
ANR	579340	CallExpression	"memset ( & dht . order , 0 , sizeof ( dht . order ) )"		579264	0					
ANR	579341	Callee	memset		579264	0					
ANR	579342	Identifier	memset		579264	0					
ANR	579343	ArgumentList	& dht . order		579264	1					
ANR	579344	Argument	& dht . order		579264	0					
ANR	579345	UnaryOperationExpression	& dht . order		579264	0					
ANR	579346	UnaryOperator	&		579264	0					
ANR	579347	MemberAccess	dht . order		579264	1					
ANR	579348	Identifier	dht		579264	0					
ANR	579349	Identifier	order		579264	1					
ANR	579350	Argument	0		579264	1					
ANR	579351	PrimaryExpression	0		579264	0					
ANR	579352	Argument	sizeof ( dht . order )		579264	2					
ANR	579353	SizeofExpression	sizeof ( dht . order )		579264	0					
ANR	579354	Sizeof	sizeof		579264	0					
ANR	579355	MemberAccess	dht . order		579264	1					
ANR	579356	Identifier	dht		579264	0					
ANR	579357	Identifier	order		579264	1					
ANR	579358	ExpressionStatement	"dht . id = gs_next_ids ( pgs -> memory , 1 )"	955:4:36160:36196	579264	9	True				
ANR	579359	AssignmentExpression	"dht . id = gs_next_ids ( pgs -> memory , 1 )"		579264	0		=			
ANR	579360	MemberAccess	dht . id		579264	0					
ANR	579361	Identifier	dht		579264	0					
ANR	579362	Identifier	id		579264	1					
ANR	579363	CallExpression	"gs_next_ids ( pgs -> memory , 1 )"		579264	1					
ANR	579364	Callee	gs_next_ids		579264	0					
ANR	579365	Identifier	gs_next_ids		579264	0					
ANR	579366	ArgumentList	pgs -> memory		579264	1					
ANR	579367	Argument	pgs -> memory		579264	0					
ANR	579368	PtrMemberAccess	pgs -> memory		579264	0					
ANR	579369	Identifier	pgs		579264	0					
ANR	579370	Identifier	memory		579264	1					
ANR	579371	Argument	1		579264	1					
ANR	579372	PrimaryExpression	1		579264	0					
ANR	579373	ExpressionStatement	dht . type = type	956:4:36202:36217	579264	10	True				
ANR	579374	AssignmentExpression	dht . type = type		579264	0		=			
ANR	579375	MemberAccess	dht . type		579264	0					
ANR	579376	Identifier	dht		579264	0					
ANR	579377	Identifier	type		579264	1					
ANR	579378	Identifier	type		579264	1					
ANR	579379	ExpressionStatement	"dht . components = gs_alloc_struct_array ( pgs -> memory , num_comps , gx_ht_order_component , & st_ht_order_component_element , ""gx_gstate_dev_ht_install(components)"" )"	957:4:36223:36513	579264	11	True				
ANR	579380	AssignmentExpression	"dht . components = gs_alloc_struct_array ( pgs -> memory , num_comps , gx_ht_order_component , & st_ht_order_component_element , ""gx_gstate_dev_ht_install(components)"" )"		579264	0		=			
ANR	579381	MemberAccess	dht . components		579264	0					
ANR	579382	Identifier	dht		579264	0					
ANR	579383	Identifier	components		579264	1					
ANR	579384	CallExpression	"gs_alloc_struct_array ( pgs -> memory , num_comps , gx_ht_order_component , & st_ht_order_component_element , ""gx_gstate_dev_ht_install(components)"" )"		579264	1					
ANR	579385	Callee	gs_alloc_struct_array		579264	0					
ANR	579386	Identifier	gs_alloc_struct_array		579264	0					
ANR	579387	ArgumentList	pgs -> memory		579264	1					
ANR	579388	Argument	pgs -> memory		579264	0					
ANR	579389	PtrMemberAccess	pgs -> memory		579264	0					
ANR	579390	Identifier	pgs		579264	0					
ANR	579391	Identifier	memory		579264	1					
ANR	579392	Argument	num_comps		579264	1					
ANR	579393	Identifier	num_comps		579264	0					
ANR	579394	Argument	gx_ht_order_component		579264	2					
ANR	579395	Identifier	gx_ht_order_component		579264	0					
ANR	579396	Argument	& st_ht_order_component_element		579264	3					
ANR	579397	UnaryOperationExpression	& st_ht_order_component_element		579264	0					
ANR	579398	UnaryOperator	&		579264	0					
ANR	579399	Identifier	st_ht_order_component_element		579264	1					
ANR	579400	Argument	"""gx_gstate_dev_ht_install(components)"""		579264	4					
ANR	579401	PrimaryExpression	"""gx_gstate_dev_ht_install(components)"""		579264	0					
ANR	579402	IfStatement	if ( dht . components == NULL )		579264	12					
ANR	579403	Condition	dht . components == NULL	963:8:36523:36544	579264	0	True				
ANR	579404	EqualityExpression	dht . components == NULL		579264	0		==			
ANR	579405	MemberAccess	dht . components		579264	0					
ANR	579406	Identifier	dht		579264	0					
ANR	579407	Identifier	components		579264	1					
ANR	579408	Identifier	NULL		579264	1					
ANR	579409	ExpressionStatement	return_error ( gs_error_VMerror )	964:8:36555:36585	579264	1	True				
ANR	579410	CallExpression	return_error ( gs_error_VMerror )		579264	0					
ANR	579411	Callee	return_error		579264	0					
ANR	579412	Identifier	return_error		579264	0					
ANR	579413	ArgumentList	gs_error_VMerror		579264	1					
ANR	579414	Argument	gs_error_VMerror		579264	0					
ANR	579415	Identifier	gs_error_VMerror		579264	0					
ANR	579416	ExpressionStatement	dht . num_comp = dht . num_dev_comp = num_comps	965:4:36591:36634	579264	13	True				
ANR	579417	AssignmentExpression	dht . num_comp = dht . num_dev_comp = num_comps		579264	0		=			
ANR	579418	MemberAccess	dht . num_comp		579264	0					
ANR	579419	Identifier	dht		579264	0					
ANR	579420	Identifier	num_comp		579264	1					
ANR	579421	AssignmentExpression	dht . num_dev_comp = num_comps		579264	1		=			
ANR	579422	MemberAccess	dht . num_dev_comp		579264	0					
ANR	579423	Identifier	dht		579264	0					
ANR	579424	Identifier	num_dev_comp		579264	1					
ANR	579425	Identifier	num_comps		579264	1					
ANR	579426	ExpressionStatement	"memset ( dht . components , 0 , num_comps * sizeof ( dht . components [ 0 ] ) )"	969:4:36735:36799	579264	14	True				
ANR	579427	CallExpression	"memset ( dht . components , 0 , num_comps * sizeof ( dht . components [ 0 ] ) )"		579264	0					
ANR	579428	Callee	memset		579264	0					
ANR	579429	Identifier	memset		579264	0					
ANR	579430	ArgumentList	dht . components		579264	1					
ANR	579431	Argument	dht . components		579264	0					
ANR	579432	MemberAccess	dht . components		579264	0					
ANR	579433	Identifier	dht		579264	0					
ANR	579434	Identifier	components		579264	1					
ANR	579435	Argument	0		579264	1					
ANR	579436	PrimaryExpression	0		579264	0					
ANR	579437	Argument	num_comps * sizeof ( dht . components [ 0 ] )		579264	2					
ANR	579438	MultiplicativeExpression	num_comps * sizeof ( dht . components [ 0 ] )		579264	0		*			
ANR	579439	Identifier	num_comps		579264	0					
ANR	579440	SizeofExpression	sizeof ( dht . components [ 0 ] )		579264	1					
ANR	579441	Sizeof	sizeof		579264	0					
ANR	579442	ArrayIndexing	dht . components [ 0 ]		579264	1					
ANR	579443	MemberAccess	dht . components		579264	0					
ANR	579444	Identifier	dht		579264	0					
ANR	579445	Identifier	components		579264	1					
ANR	579446	PrimaryExpression	0		579264	1					
ANR	579447	ForStatement	for ( i = 0 ; i < num_comps ; i ++ )		579264	15					
ANR	579448	ForInit	i = 0 ;	970:9:36810:36815	579264	0	True				
ANR	579449	AssignmentExpression	i = 0		579264	0		=			
ANR	579450	Identifier	i		579264	0					
ANR	579451	PrimaryExpression	0		579264	1					
ANR	579452	Condition	i < num_comps	970:16:36817:36829	579264	1	True				
ANR	579453	RelationalExpression	i < num_comps		579264	0		<			
ANR	579454	Identifier	i		579264	0					
ANR	579455	Identifier	num_comps		579264	1					
ANR	579456	PostIncDecOperationExpression	i ++	970:31:36832:36834	579264	2	True				
ANR	579457	Identifier	i		579264	0					
ANR	579458	IncDec	++		579264	1					
ANR	579459	ExpressionStatement	dht . components [ i ] . comp_number = - 1	971:8:36845:36879	579264	3	True				
ANR	579460	AssignmentExpression	dht . components [ i ] . comp_number = - 1		579264	0		=			
ANR	579461	MemberAccess	dht . components [ i ] . comp_number		579264	0					
ANR	579462	ArrayIndexing	dht . components [ i ]		579264	0					
ANR	579463	MemberAccess	dht . components		579264	0					
ANR	579464	Identifier	dht		579264	0					
ANR	579465	Identifier	components		579264	1					
ANR	579466	Identifier	i		579264	1					
ANR	579467	Identifier	comp_number		579264	1					
ANR	579468	UnaryOperationExpression	- 1		579264	1					
ANR	579469	UnaryOperator	-		579264	0					
ANR	579470	PrimaryExpression	1		579264	1					
ANR	579471	IfStatement	if ( pdht -> components != 0 )		579264	16					
ANR	579472	Condition	pdht -> components != 0	980:8:37218:37238	579264	0	True				
ANR	579473	EqualityExpression	pdht -> components != 0		579264	0		!=			
ANR	579474	PtrMemberAccess	pdht -> components		579264	0					
ANR	579475	Identifier	pdht		579264	0					
ANR	579476	Identifier	components		579264	1					
ANR	579477	PrimaryExpression	0		579264	1					
ANR	579478	CompoundStatement		40:8:1584:1621	579264	1					
ANR	579479	IdentifierDeclStatement	int input_ncomps = pdht -> num_comp ;	981:8:37251:37288	579264	0	True				
ANR	579480	IdentifierDecl	input_ncomps = pdht -> num_comp		579264	0					
ANR	579481	IdentifierDeclType	int		579264	0					
ANR	579482	Identifier	input_ncomps		579264	1					
ANR	579483	AssignmentExpression	input_ncomps = pdht -> num_comp		579264	2		=			
ANR	579484	Identifier	input_ncomps		579264	0					
ANR	579485	PtrMemberAccess	pdht -> num_comp		579264	1					
ANR	579486	Identifier	pdht		579264	0					
ANR	579487	Identifier	num_comp		579264	1					
ANR	579488	ForStatement	for ( i = 0 ; i < input_ncomps && code >= 0 ; i ++ )		579264	1					
ANR	579489	ForInit	i = 0 ;	983:13:37304:37309	579264	0	True				
ANR	579490	AssignmentExpression	i = 0		579264	0		=			
ANR	579491	Identifier	i		579264	0					
ANR	579492	PrimaryExpression	0		579264	1					
ANR	579493	Condition	i < input_ncomps && code >= 0	983:20:37311:37339	579264	1	True				
ANR	579494	AndExpression	i < input_ncomps && code >= 0		579264	0		&&			
ANR	579495	RelationalExpression	i < input_ncomps		579264	0		<			
ANR	579496	Identifier	i		579264	0					
ANR	579497	Identifier	input_ncomps		579264	1					
ANR	579498	RelationalExpression	code >= 0		579264	1		>=			
ANR	579499	Identifier	code		579264	0					
ANR	579500	PrimaryExpression	0		579264	1					
ANR	579501	PostIncDecOperationExpression	i ++	983:51:37342:37344	579264	2	True				
ANR	579502	Identifier	i		579264	0					
ANR	579503	IncDec	++		579264	1					
ANR	579504	CompoundStatement		45:12:1830:1886	579264	3					
ANR	579505	IdentifierDeclStatement	gx_ht_order_component * p_s_comp = & pdht -> components [ i ] ;	984:12:37361:37416	579264	0	True				
ANR	579506	IdentifierDecl	* p_s_comp = & pdht -> components [ i ]		579264	0					
ANR	579507	IdentifierDeclType	gx_ht_order_component *		579264	0					
ANR	579508	Identifier	p_s_comp		579264	1					
ANR	579509	AssignmentExpression	* p_s_comp = & pdht -> components [ i ]		579264	2		=			
ANR	579510	Identifier	p_s_comp		579264	0					
ANR	579511	UnaryOperationExpression	& pdht -> components [ i ]		579264	1					
ANR	579512	UnaryOperator	&		579264	0					
ANR	579513	ArrayIndexing	pdht -> components [ i ]		579264	1					
ANR	579514	PtrMemberAccess	pdht -> components		579264	0					
ANR	579515	Identifier	pdht		579264	0					
ANR	579516	Identifier	components		579264	1					
ANR	579517	Identifier	i		579264	1					
ANR	579518	IdentifierDeclStatement	gx_ht_order * p_s_order = & p_s_comp -> corder ;	985:12:37430:37483	579264	1	True				
ANR	579519	IdentifierDecl	* p_s_order = & p_s_comp -> corder		579264	0					
ANR	579520	IdentifierDeclType	gx_ht_order *		579264	0					
ANR	579521	Identifier	p_s_order		579264	1					
ANR	579522	AssignmentExpression	* p_s_order = & p_s_comp -> corder		579264	2		=			
ANR	579523	Identifier	p_s_order		579264	0					
ANR	579524	UnaryOperationExpression	& p_s_comp -> corder		579264	1					
ANR	579525	UnaryOperator	&		579264	0					
ANR	579526	PtrMemberAccess	p_s_comp -> corder		579264	1					
ANR	579527	Identifier	p_s_comp		579264	0					
ANR	579528	Identifier	corder		579264	1					
ANR	579529	IdentifierDeclStatement	int comp_num = p_s_comp -> comp_number ;	986:12:37497:37553	579264	2	True				
ANR	579530	IdentifierDecl	comp_num = p_s_comp -> comp_number		579264	0					
ANR	579531	IdentifierDeclType	int		579264	0					
ANR	579532	Identifier	comp_num		579264	1					
ANR	579533	AssignmentExpression	comp_num = p_s_comp -> comp_number		579264	2		=			
ANR	579534	Identifier	comp_num		579264	0					
ANR	579535	PtrMemberAccess	p_s_comp -> comp_number		579264	1					
ANR	579536	Identifier	p_s_comp		579264	0					
ANR	579537	Identifier	comp_number		579264	1					
ANR	579538	IfStatement	if ( comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS )		579264	3					
ANR	579539	Condition	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS	988:16:37572:37629	579264	0	True				
ANR	579540	AndExpression	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		579264	0		&&			
ANR	579541	RelationalExpression	comp_num >= 0		579264	0		>=			
ANR	579542	Identifier	comp_num		579264	0					
ANR	579543	PrimaryExpression	0		579264	1					
ANR	579544	RelationalExpression	comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		579264	1		<			
ANR	579545	Identifier	comp_num		579264	0					
ANR	579546	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		579264	1					
ANR	579547	CompoundStatement		48:16:1983:2043	579264	1					
ANR	579548	IdentifierDeclStatement	gx_ht_order * p_d_order = & dht . components [ comp_num ] . corder ;	989:16:37650:37710	579264	0	True				
ANR	579549	IdentifierDecl	* p_d_order = & dht . components [ comp_num ] . corder		579264	0					
ANR	579550	IdentifierDeclType	gx_ht_order *		579264	0					
ANR	579551	Identifier	p_d_order		579264	1					
ANR	579552	AssignmentExpression	* p_d_order = & dht . components [ comp_num ] . corder		579264	2		=			
ANR	579553	Identifier	p_d_order		579264	0					
ANR	579554	UnaryOperationExpression	& dht . components [ comp_num ] . corder		579264	1					
ANR	579555	UnaryOperator	&		579264	0					
ANR	579556	MemberAccess	dht . components [ comp_num ] . corder		579264	1					
ANR	579557	ArrayIndexing	dht . components [ comp_num ]		579264	0					
ANR	579558	MemberAccess	dht . components		579264	0					
ANR	579559	Identifier	dht		579264	0					
ANR	579560	Identifier	components		579264	1					
ANR	579561	Identifier	comp_num		579264	1					
ANR	579562	Identifier	corder		579264	1					
ANR	579563	ExpressionStatement	dht . components [ comp_num ] . comp_number = comp_num	992:16:37795:37842	579264	1	True				
ANR	579564	AssignmentExpression	dht . components [ comp_num ] . comp_number = comp_num		579264	0		=			
ANR	579565	MemberAccess	dht . components [ comp_num ] . comp_number		579264	0					
ANR	579566	ArrayIndexing	dht . components [ comp_num ]		579264	0					
ANR	579567	MemberAccess	dht . components		579264	0					
ANR	579568	Identifier	dht		579264	0					
ANR	579569	Identifier	components		579264	1					
ANR	579570	Identifier	comp_num		579264	1					
ANR	579571	Identifier	comp_number		579264	1					
ANR	579572	Identifier	comp_num		579264	1					
ANR	579573	IfStatement	if ( mem_diff )		579264	2					
ANR	579574	Condition	mem_diff	998:20:38005:38012	579264	0	True				
ANR	579575	Identifier	mem_diff		579264	0					
ANR	579576	ExpressionStatement	"code = gx_ht_copy_ht_order ( p_d_order , p_s_order , pgs -> memory )"	999:20:38035:38194	579264	1	True				
ANR	579577	AssignmentExpression	"code = gx_ht_copy_ht_order ( p_d_order , p_s_order , pgs -> memory )"		579264	0		=			
ANR	579578	Identifier	code		579264	0					
ANR	579579	CallExpression	"gx_ht_copy_ht_order ( p_d_order , p_s_order , pgs -> memory )"		579264	1					
ANR	579580	Callee	gx_ht_copy_ht_order		579264	0					
ANR	579581	Identifier	gx_ht_copy_ht_order		579264	0					
ANR	579582	ArgumentList	p_d_order		579264	1					
ANR	579583	Argument	p_d_order		579264	0					
ANR	579584	Identifier	p_d_order		579264	0					
ANR	579585	Argument	p_s_order		579264	1					
ANR	579586	Identifier	p_s_order		579264	0					
ANR	579587	Argument	pgs -> memory		579264	2					
ANR	579588	PtrMemberAccess	pgs -> memory		579264	0					
ANR	579589	Identifier	pgs		579264	0					
ANR	579590	Identifier	memory		579264	1					
ANR	579591	ElseStatement	else		579264	0					
ANR	579592	CompoundStatement		61:21:2550:2550	579264	0					
ANR	579593	ExpressionStatement	used_default = used_default || p_s_order -> bit_data == pdht -> order . bit_data	1004:20:38309:38418	579264	0	True				
ANR	579594	AssignmentExpression	used_default = used_default || p_s_order -> bit_data == pdht -> order . bit_data		579264	0		=			
ANR	579595	Identifier	used_default		579264	0					
ANR	579596	OrExpression	used_default || p_s_order -> bit_data == pdht -> order . bit_data		579264	1		||			
ANR	579597	Identifier	used_default		579264	0					
ANR	579598	EqualityExpression	p_s_order -> bit_data == pdht -> order . bit_data		579264	1		==			
ANR	579599	PtrMemberAccess	p_s_order -> bit_data		579264	0					
ANR	579600	Identifier	p_s_order		579264	0					
ANR	579601	Identifier	bit_data		579264	1					
ANR	579602	MemberAccess	pdht -> order . bit_data		579264	1					
ANR	579603	PtrMemberAccess	pdht -> order		579264	0					
ANR	579604	Identifier	pdht		579264	0					
ANR	579605	Identifier	order		579264	1					
ANR	579606	Identifier	bit_data		579264	1					
ANR	579607	ExpressionStatement	"gx_ht_move_ht_order ( p_d_order , p_s_order )"	1007:20:38441:38482	579264	1	True				
ANR	579608	CallExpression	"gx_ht_move_ht_order ( p_d_order , p_s_order )"		579264	0					
ANR	579609	Callee	gx_ht_move_ht_order		579264	0					
ANR	579610	Identifier	gx_ht_move_ht_order		579264	0					
ANR	579611	ArgumentList	p_d_order		579264	1					
ANR	579612	Argument	p_d_order		579264	0					
ANR	579613	Identifier	p_d_order		579264	0					
ANR	579614	Argument	p_s_order		579264	1					
ANR	579615	Identifier	p_s_order		579264	0					
ANR	579616	ForStatement	for ( i = 0 ; i < num_comps && code >= 0 ; i ++ )		579264	17					
ANR	579617	ForInit	i = 0 ;	1017:9:38617:38622	579264	0	True				
ANR	579618	AssignmentExpression	i = 0		579264	0		=			
ANR	579619	Identifier	i		579264	0					
ANR	579620	PrimaryExpression	0		579264	1					
ANR	579621	Condition	i < num_comps && code >= 0	1017:16:38624:38649	579264	1	True				
ANR	579622	AndExpression	i < num_comps && code >= 0		579264	0		&&			
ANR	579623	RelationalExpression	i < num_comps		579264	0		<			
ANR	579624	Identifier	i		579264	0					
ANR	579625	Identifier	num_comps		579264	1					
ANR	579626	RelationalExpression	code >= 0		579264	1		>=			
ANR	579627	Identifier	code		579264	0					
ANR	579628	PrimaryExpression	0		579264	1					
ANR	579629	PostIncDecOperationExpression	i ++	1017:44:38652:38654	579264	2	True				
ANR	579630	Identifier	i		579264	0					
ANR	579631	IncDec	++		579264	1					
ANR	579632	CompoundStatement		77:8:3000:3047	579264	3					
ANR	579633	IdentifierDeclStatement	gx_ht_order * porder = & dht . components [ i ] . corder ;	1018:8:38667:38714	579264	0	True				
ANR	579634	IdentifierDecl	* porder = & dht . components [ i ] . corder		579264	0					
ANR	579635	IdentifierDeclType	gx_ht_order *		579264	0					
ANR	579636	Identifier	porder		579264	1					
ANR	579637	AssignmentExpression	* porder = & dht . components [ i ] . corder		579264	2		=			
ANR	579638	Identifier	porder		579264	0					
ANR	579639	UnaryOperationExpression	& dht . components [ i ] . corder		579264	1					
ANR	579640	UnaryOperator	&		579264	0					
ANR	579641	MemberAccess	dht . components [ i ] . corder		579264	1					
ANR	579642	ArrayIndexing	dht . components [ i ]		579264	0					
ANR	579643	MemberAccess	dht . components		579264	0					
ANR	579644	Identifier	dht		579264	0					
ANR	579645	Identifier	components		579264	1					
ANR	579646	Identifier	i		579264	1					
ANR	579647	Identifier	corder		579264	1					
ANR	579648	IfStatement	if ( dht . components [ i ] . comp_number != i )		579264	1					
ANR	579649	Condition	dht . components [ i ] . comp_number != i	1020:12:38729:38762	579264	0	True				
ANR	579650	EqualityExpression	dht . components [ i ] . comp_number != i		579264	0		!=			
ANR	579651	MemberAccess	dht . components [ i ] . comp_number		579264	0					
ANR	579652	ArrayIndexing	dht . components [ i ]		579264	0					
ANR	579653	MemberAccess	dht . components		579264	0					
ANR	579654	Identifier	dht		579264	0					
ANR	579655	Identifier	components		579264	1					
ANR	579656	Identifier	i		579264	1					
ANR	579657	Identifier	comp_number		579264	1					
ANR	579658	Identifier	i		579264	1					
ANR	579659	CompoundStatement		79:48:3098:3098	579264	1					
ANR	579660	IfStatement	if ( used_default || mem_diff )		579264	0					
ANR	579661	Condition	used_default || mem_diff	1021:16:38783:38806	579264	0	True				
ANR	579662	OrExpression	used_default || mem_diff		579264	0		||			
ANR	579663	Identifier	used_default		579264	0					
ANR	579664	Identifier	mem_diff		579264	1					
ANR	579665	ExpressionStatement	"code = gx_ht_copy_ht_order ( porder , & pdht -> order , pgs -> memory )"	1022:16:38825:38886	579264	1	True				
ANR	579666	AssignmentExpression	"code = gx_ht_copy_ht_order ( porder , & pdht -> order , pgs -> memory )"		579264	0		=			
ANR	579667	Identifier	code		579264	0					
ANR	579668	CallExpression	"gx_ht_copy_ht_order ( porder , & pdht -> order , pgs -> memory )"		579264	1					
ANR	579669	Callee	gx_ht_copy_ht_order		579264	0					
ANR	579670	Identifier	gx_ht_copy_ht_order		579264	0					
ANR	579671	ArgumentList	porder		579264	1					
ANR	579672	Argument	porder		579264	0					
ANR	579673	Identifier	porder		579264	0					
ANR	579674	Argument	& pdht -> order		579264	1					
ANR	579675	UnaryOperationExpression	& pdht -> order		579264	0					
ANR	579676	UnaryOperator	&		579264	0					
ANR	579677	PtrMemberAccess	pdht -> order		579264	1					
ANR	579678	Identifier	pdht		579264	0					
ANR	579679	Identifier	order		579264	1					
ANR	579680	Argument	pgs -> memory		579264	2					
ANR	579681	PtrMemberAccess	pgs -> memory		579264	0					
ANR	579682	Identifier	pgs		579264	0					
ANR	579683	Identifier	memory		579264	1					
ANR	579684	ElseStatement	else		579264	0					
ANR	579685	CompoundStatement		82:17:3238:3238	579264	0					
ANR	579686	ExpressionStatement	"gx_ht_move_ht_order ( porder , & pdht -> order )"	1024:16:38923:38964	579264	0	True				
ANR	579687	CallExpression	"gx_ht_move_ht_order ( porder , & pdht -> order )"		579264	0					
ANR	579688	Callee	gx_ht_move_ht_order		579264	0					
ANR	579689	Identifier	gx_ht_move_ht_order		579264	0					
ANR	579690	ArgumentList	porder		579264	1					
ANR	579691	Argument	porder		579264	0					
ANR	579692	Identifier	porder		579264	0					
ANR	579693	Argument	& pdht -> order		579264	1					
ANR	579694	UnaryOperationExpression	& pdht -> order		579264	0					
ANR	579695	UnaryOperator	&		579264	0					
ANR	579696	PtrMemberAccess	pdht -> order		579264	1					
ANR	579697	Identifier	pdht		579264	0					
ANR	579698	Identifier	order		579264	1					
ANR	579699	ExpressionStatement	used_default = true	1025:16:38982:39001	579264	1	True				
ANR	579700	AssignmentExpression	used_default = true		579264	0		=			
ANR	579701	Identifier	used_default		579264	0					
ANR	579702	Identifier	true		579264	1					
ANR	579703	ExpressionStatement	dht . components [ i ] . comp_number = i	1027:12:39029:39062	579264	1	True				
ANR	579704	AssignmentExpression	dht . components [ i ] . comp_number = i		579264	0		=			
ANR	579705	MemberAccess	dht . components [ i ] . comp_number		579264	0					
ANR	579706	ArrayIndexing	dht . components [ i ]		579264	0					
ANR	579707	MemberAccess	dht . components		579264	0					
ANR	579708	Identifier	dht		579264	0					
ANR	579709	Identifier	components		579264	1					
ANR	579710	Identifier	i		579264	1					
ANR	579711	Identifier	comp_number		579264	1					
ANR	579712	Identifier	i		579264	1					
ANR	579713	ExpressionStatement	w = porder -> width	1030:8:39083:39100	579264	2	True				
ANR	579714	AssignmentExpression	w = porder -> width		579264	0		=			
ANR	579715	Identifier	w		579264	0					
ANR	579716	PtrMemberAccess	porder -> width		579264	1					
ANR	579717	Identifier	porder		579264	0					
ANR	579718	Identifier	width		579264	1					
ANR	579719	ExpressionStatement	h = porder -> full_height	1031:8:39110:39133	579264	3	True				
ANR	579720	AssignmentExpression	h = porder -> full_height		579264	0		=			
ANR	579721	Identifier	h		579264	0					
ANR	579722	PtrMemberAccess	porder -> full_height		579264	1					
ANR	579723	Identifier	porder		579264	0					
ANR	579724	Identifier	full_height		579264	1					
ANR	579725	ExpressionStatement	"dw = igcd ( lcm_width , w )"	1032:8:39143:39166	579264	4	True				
ANR	579726	AssignmentExpression	"dw = igcd ( lcm_width , w )"		579264	0		=			
ANR	579727	Identifier	dw		579264	0					
ANR	579728	CallExpression	"igcd ( lcm_width , w )"		579264	1					
ANR	579729	Callee	igcd		579264	0					
ANR	579730	Identifier	igcd		579264	0					
ANR	579731	ArgumentList	lcm_width		579264	1					
ANR	579732	Argument	lcm_width		579264	0					
ANR	579733	Identifier	lcm_width		579264	0					
ANR	579734	Argument	w		579264	1					
ANR	579735	Identifier	w		579264	0					
ANR	579736	ExpressionStatement	"dh = igcd ( lcm_height , h )"	1033:8:39176:39200	579264	5	True				
ANR	579737	AssignmentExpression	"dh = igcd ( lcm_height , h )"		579264	0		=			
ANR	579738	Identifier	dh		579264	0					
ANR	579739	CallExpression	"igcd ( lcm_height , h )"		579264	1					
ANR	579740	Callee	igcd		579264	0					
ANR	579741	Identifier	igcd		579264	0					
ANR	579742	ArgumentList	lcm_height		579264	1					
ANR	579743	Argument	lcm_height		579264	0					
ANR	579744	Identifier	lcm_height		579264	0					
ANR	579745	Argument	h		579264	1					
ANR	579746	Identifier	h		579264	0					
ANR	579747	ExpressionStatement	lcm_width /= dw	1035:8:39211:39226	579264	6	True				
ANR	579748	AssignmentExpression	lcm_width /= dw		579264	0		/=			
ANR	579749	Identifier	lcm_width		579264	0					
ANR	579750	Identifier	dw		579264	1					
ANR	579751	ExpressionStatement	lcm_height /= dh	1036:8:39236:39252	579264	7	True				
ANR	579752	AssignmentExpression	lcm_height /= dh		579264	0		/=			
ANR	579753	Identifier	lcm_height		579264	0					
ANR	579754	Identifier	dh		579264	1					
ANR	579755	ExpressionStatement	lcm_width = ( w > max_int / lcm_width ? max_int : lcm_width * w )	1037:8:39262:39325	579264	8	True				
ANR	579756	AssignmentExpression	lcm_width = ( w > max_int / lcm_width ? max_int : lcm_width * w )		579264	0		=			
ANR	579757	Identifier	lcm_width		579264	0					
ANR	579758	ConditionalExpression	w > max_int / lcm_width ? max_int : lcm_width * w		579264	1					
ANR	579759	Condition	w > max_int / lcm_width		579264	0					
ANR	579760	RelationalExpression	w > max_int / lcm_width		579264	0		>			
ANR	579761	Identifier	w		579264	0					
ANR	579762	MultiplicativeExpression	max_int / lcm_width		579264	1		/			
ANR	579763	Identifier	max_int		579264	0					
ANR	579764	Identifier	lcm_width		579264	1					
ANR	579765	Identifier	max_int		579264	1					
ANR	579766	MultiplicativeExpression	lcm_width * w		579264	2		*			
ANR	579767	Identifier	lcm_width		579264	0					
ANR	579768	Identifier	w		579264	1					
ANR	579769	ExpressionStatement	lcm_height = ( h > max_int / lcm_height ? max_int : lcm_height * h )	1038:8:39335:39401	579264	9	True				
ANR	579770	AssignmentExpression	lcm_height = ( h > max_int / lcm_height ? max_int : lcm_height * h )		579264	0		=			
ANR	579771	Identifier	lcm_height		579264	0					
ANR	579772	ConditionalExpression	h > max_int / lcm_height ? max_int : lcm_height * h		579264	1					
ANR	579773	Condition	h > max_int / lcm_height		579264	0					
ANR	579774	RelationalExpression	h > max_int / lcm_height		579264	0		>			
ANR	579775	Identifier	h		579264	0					
ANR	579776	MultiplicativeExpression	max_int / lcm_height		579264	1		/			
ANR	579777	Identifier	max_int		579264	0					
ANR	579778	Identifier	lcm_height		579264	1					
ANR	579779	Identifier	max_int		579264	1					
ANR	579780	MultiplicativeExpression	lcm_height * h		579264	2		*			
ANR	579781	Identifier	lcm_height		579264	0					
ANR	579782	Identifier	h		579264	1					
ANR	579783	IfStatement	if ( porder -> cache == 0 )		579264	10					
ANR	579784	Condition	porder -> cache == 0	1040:12:39416:39433	579264	0	True				
ANR	579785	EqualityExpression	porder -> cache == 0		579264	0		==			
ANR	579786	PtrMemberAccess	porder -> cache		579264	0					
ANR	579787	Identifier	porder		579264	0					
ANR	579788	Identifier	cache		579264	1					
ANR	579789	PrimaryExpression	0		579264	1					
ANR	579790	CompoundStatement		101:12:3871:3893	579264	1					
ANR	579791	IdentifierDeclStatement	"uint tile_bytes , num_tiles , slots_wanted , rep_raster , rep_count ;"	1041:12:39450:39524	579264	0	True				
ANR	579792	IdentifierDecl	tile_bytes		579264	0					
ANR	579793	IdentifierDeclType	uint		579264	0					
ANR	579794	Identifier	tile_bytes		579264	1					
ANR	579795	IdentifierDecl	num_tiles		579264	1					
ANR	579796	IdentifierDeclType	uint		579264	0					
ANR	579797	Identifier	num_tiles		579264	1					
ANR	579798	IdentifierDecl	slots_wanted		579264	2					
ANR	579799	IdentifierDeclType	uint		579264	0					
ANR	579800	Identifier	slots_wanted		579264	1					
ANR	579801	IdentifierDecl	rep_raster		579264	3					
ANR	579802	IdentifierDeclType	uint		579264	0					
ANR	579803	Identifier	rep_raster		579264	1					
ANR	579804	IdentifierDecl	rep_count		579264	4					
ANR	579805	IdentifierDeclType	uint		579264	0					
ANR	579806	Identifier	rep_count		579264	1					
ANR	579807	IdentifierDeclStatement	gx_ht_cache * pcache ;	1042:12:39538:39560	579264	1	True				
ANR	579808	IdentifierDecl	* pcache		579264	0					
ANR	579809	IdentifierDeclType	gx_ht_cache *		579264	0					
ANR	579810	Identifier	pcache		579264	1					
ANR	579811	ExpressionStatement	tile_bytes = porder -> raster * ( porder -> num_bits / porder -> width )	1044:12:39575:39665	579264	2	True				
ANR	579812	AssignmentExpression	tile_bytes = porder -> raster * ( porder -> num_bits / porder -> width )		579264	0		=			
ANR	579813	Identifier	tile_bytes		579264	0					
ANR	579814	MultiplicativeExpression	porder -> raster * ( porder -> num_bits / porder -> width )		579264	1		*			
ANR	579815	PtrMemberAccess	porder -> raster		579264	0					
ANR	579816	Identifier	porder		579264	0					
ANR	579817	Identifier	raster		579264	1					
ANR	579818	MultiplicativeExpression	porder -> num_bits / porder -> width		579264	1		/			
ANR	579819	PtrMemberAccess	porder -> num_bits		579264	0					
ANR	579820	Identifier	porder		579264	0					
ANR	579821	Identifier	num_bits		579264	1					
ANR	579822	PtrMemberAccess	porder -> width		579264	1					
ANR	579823	Identifier	porder		579264	0					
ANR	579824	Identifier	width		579264	1					
ANR	579825	ExpressionStatement	num_tiles = 1 + gx_ht_cache_default_bits_size ( ) / tile_bytes	1046:12:39679:39739	579264	3	True				
ANR	579826	AssignmentExpression	num_tiles = 1 + gx_ht_cache_default_bits_size ( ) / tile_bytes		579264	0		=			
ANR	579827	Identifier	num_tiles		579264	0					
ANR	579828	AdditiveExpression	1 + gx_ht_cache_default_bits_size ( ) / tile_bytes		579264	1		+			
ANR	579829	PrimaryExpression	1		579264	0					
ANR	579830	MultiplicativeExpression	gx_ht_cache_default_bits_size ( ) / tile_bytes		579264	1		/			
ANR	579831	CallExpression	gx_ht_cache_default_bits_size ( )		579264	0					
ANR	579832	Callee	gx_ht_cache_default_bits_size		579264	0					
ANR	579833	Identifier	gx_ht_cache_default_bits_size		579264	0					
ANR	579834	ArgumentList			579264	1					
ANR	579835	Identifier	tile_bytes		579264	1					
ANR	579836	ExpressionStatement	slots_wanted = 1 + ( porder -> width * porder -> height )	1053:12:40057:40110	579264	4	True				
ANR	579837	AssignmentExpression	slots_wanted = 1 + ( porder -> width * porder -> height )		579264	0		=			
ANR	579838	Identifier	slots_wanted		579264	0					
ANR	579839	AdditiveExpression	1 + ( porder -> width * porder -> height )		579264	1		+			
ANR	579840	PrimaryExpression	1		579264	0					
ANR	579841	MultiplicativeExpression	porder -> width * porder -> height		579264	1		*			
ANR	579842	PtrMemberAccess	porder -> width		579264	0					
ANR	579843	Identifier	porder		579264	0					
ANR	579844	Identifier	width		579264	1					
ANR	579845	PtrMemberAccess	porder -> height		579264	1					
ANR	579846	Identifier	porder		579264	0					
ANR	579847	Identifier	height		579264	1					
ANR	579848	ExpressionStatement	rep_raster = ( ( num_tiles * tile_bytes ) / porder -> height / slots_wanted ) & ~ ( align_bitmap_mod - 1 )	1054:12:40124:40247	579264	5	True				
ANR	579849	AssignmentExpression	rep_raster = ( ( num_tiles * tile_bytes ) / porder -> height / slots_wanted ) & ~ ( align_bitmap_mod - 1 )		579264	0		=			
ANR	579850	Identifier	rep_raster		579264	0					
ANR	579851	BitAndExpression	( ( num_tiles * tile_bytes ) / porder -> height / slots_wanted ) & ~ ( align_bitmap_mod - 1 )		579264	1		&			
ANR	579852	MultiplicativeExpression	( num_tiles * tile_bytes ) / porder -> height / slots_wanted		579264	0		/			
ANR	579853	MultiplicativeExpression	num_tiles * tile_bytes		579264	0		*			
ANR	579854	Identifier	num_tiles		579264	0					
ANR	579855	Identifier	tile_bytes		579264	1					
ANR	579856	MultiplicativeExpression	porder -> height / slots_wanted		579264	1		/			
ANR	579857	PtrMemberAccess	porder -> height		579264	0					
ANR	579858	Identifier	porder		579264	0					
ANR	579859	Identifier	height		579264	1					
ANR	579860	Identifier	slots_wanted		579264	1					
ANR	579861	UnaryOperationExpression	~ ( align_bitmap_mod - 1 )		579264	1					
ANR	579862	UnaryOperator	~		579264	0					
ANR	579863	AdditiveExpression	align_bitmap_mod - 1		579264	1		-			
ANR	579864	Identifier	align_bitmap_mod		579264	0					
ANR	579865	PrimaryExpression	1		579264	1					
ANR	579866	ExpressionStatement	rep_count = rep_raster * 8 / porder -> width	1056:12:40261:40303	579264	6	True				
ANR	579867	AssignmentExpression	rep_count = rep_raster * 8 / porder -> width		579264	0		=			
ANR	579868	Identifier	rep_count		579264	0					
ANR	579869	MultiplicativeExpression	rep_raster * 8 / porder -> width		579264	1		*			
ANR	579870	Identifier	rep_raster		579264	0					
ANR	579871	MultiplicativeExpression	8 / porder -> width		579264	1		/			
ANR	579872	PrimaryExpression	8		579264	0					
ANR	579873	PtrMemberAccess	porder -> width		579264	1					
ANR	579874	Identifier	porder		579264	0					
ANR	579875	Identifier	width		579264	1					
ANR	579876	IfStatement	if ( rep_count > sizeof ( ulong ) * 8 && ( num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count ) ) )		579264	7					
ANR	579877	Condition	rep_count > sizeof ( ulong ) * 8 && ( num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count ) )	1057:16:40321:40437	579264	0	True				
ANR	579878	AndExpression	rep_count > sizeof ( ulong ) * 8 && ( num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count ) )		579264	0		&&			
ANR	579879	RelationalExpression	rep_count > sizeof ( ulong ) * 8		579264	0		>			
ANR	579880	Identifier	rep_count		579264	0					
ANR	579881	MultiplicativeExpression	sizeof ( ulong ) * 8		579264	1		*			
ANR	579882	SizeofExpression	sizeof ( ulong )		579264	0					
ANR	579883	Sizeof	sizeof		579264	0					
ANR	579884	SizeofOperand	ulong		579264	1					
ANR	579885	PrimaryExpression	8		579264	1					
ANR	579886	RelationalExpression	num_tiles > 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		579264	1		>			
ANR	579887	Identifier	num_tiles		579264	0					
ANR	579888	AdditiveExpression	1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		579264	1		+			
ANR	579889	PrimaryExpression	1		579264	0					
ANR	579890	MultiplicativeExpression	( num_tiles * 8 * sizeof ( ulong ) ) / rep_count		579264	1		/			
ANR	579891	MultiplicativeExpression	num_tiles * 8 * sizeof ( ulong )		579264	0		*			
ANR	579892	Identifier	num_tiles		579264	0					
ANR	579893	MultiplicativeExpression	8 * sizeof ( ulong )		579264	1		*			
ANR	579894	PrimaryExpression	8		579264	0					
ANR	579895	SizeofExpression	sizeof ( ulong )		579264	1					
ANR	579896	Sizeof	sizeof		579264	0					
ANR	579897	SizeofOperand	ulong		579264	1					
ANR	579898	Identifier	rep_count		579264	1					
ANR	579899	ExpressionStatement	num_tiles = 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )	1059:16:40456:40517	579264	1	True				
ANR	579900	AssignmentExpression	num_tiles = 1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		579264	0		=			
ANR	579901	Identifier	num_tiles		579264	0					
ANR	579902	AdditiveExpression	1 + ( ( num_tiles * 8 * sizeof ( ulong ) ) / rep_count )		579264	1		+			
ANR	579903	PrimaryExpression	1		579264	0					
ANR	579904	MultiplicativeExpression	( num_tiles * 8 * sizeof ( ulong ) ) / rep_count		579264	1		/			
ANR	579905	MultiplicativeExpression	num_tiles * 8 * sizeof ( ulong )		579264	0		*			
ANR	579906	Identifier	num_tiles		579264	0					
ANR	579907	MultiplicativeExpression	8 * sizeof ( ulong )		579264	1		*			
ANR	579908	PrimaryExpression	8		579264	0					
ANR	579909	SizeofExpression	sizeof ( ulong )		579264	1					
ANR	579910	Sizeof	sizeof		579264	0					
ANR	579911	SizeofOperand	ulong		579264	1					
ANR	579912	Identifier	rep_count		579264	1					
ANR	579913	ExpressionStatement	"pcache = gx_ht_alloc_cache ( pgs -> memory , num_tiles , tile_bytes * num_tiles )"	1060:12:40531:40647	579264	8	True				
ANR	579914	AssignmentExpression	"pcache = gx_ht_alloc_cache ( pgs -> memory , num_tiles , tile_bytes * num_tiles )"		579264	0		=			
ANR	579915	Identifier	pcache		579264	0					
ANR	579916	CallExpression	"gx_ht_alloc_cache ( pgs -> memory , num_tiles , tile_bytes * num_tiles )"		579264	1					
ANR	579917	Callee	gx_ht_alloc_cache		579264	0					
ANR	579918	Identifier	gx_ht_alloc_cache		579264	0					
ANR	579919	ArgumentList	pgs -> memory		579264	1					
ANR	579920	Argument	pgs -> memory		579264	0					
ANR	579921	PtrMemberAccess	pgs -> memory		579264	0					
ANR	579922	Identifier	pgs		579264	0					
ANR	579923	Identifier	memory		579264	1					
ANR	579924	Argument	num_tiles		579264	1					
ANR	579925	Identifier	num_tiles		579264	0					
ANR	579926	Argument	tile_bytes * num_tiles		579264	2					
ANR	579927	MultiplicativeExpression	tile_bytes * num_tiles		579264	0		*			
ANR	579928	Identifier	tile_bytes		579264	0					
ANR	579929	Identifier	num_tiles		579264	1					
ANR	579930	IfStatement	if ( pcache == NULL )		579264	9					
ANR	579931	Condition	pcache == NULL	1062:16:40665:40678	579264	0	True				
ANR	579932	EqualityExpression	pcache == NULL		579264	0		==			
ANR	579933	Identifier	pcache		579264	0					
ANR	579934	Identifier	NULL		579264	1					
ANR	579935	ExpressionStatement	code = gs_error_VMerror	1063:16:40697:40720	579264	1	True				
ANR	579936	AssignmentExpression	code = gs_error_VMerror		579264	0		=			
ANR	579937	Identifier	code		579264	0					
ANR	579938	Identifier	gs_error_VMerror		579264	1					
ANR	579939	ElseStatement	else		579264	0					
ANR	579940	CompoundStatement		123:17:5072:5072	579264	0					
ANR	579941	ExpressionStatement	porder -> cache = pcache	1065:16:40757:40779	579264	0	True				
ANR	579942	AssignmentExpression	porder -> cache = pcache		579264	0		=			
ANR	579943	PtrMemberAccess	porder -> cache		579264	0					
ANR	579944	Identifier	porder		579264	0					
ANR	579945	Identifier	cache		579264	1					
ANR	579946	Identifier	pcache		579264	1					
ANR	579947	ExpressionStatement	"gx_ht_init_cache ( pgs -> memory , pcache , porder )"	1066:16:40797:40842	579264	1	True				
ANR	579948	CallExpression	"gx_ht_init_cache ( pgs -> memory , pcache , porder )"		579264	0					
ANR	579949	Callee	gx_ht_init_cache		579264	0					
ANR	579950	Identifier	gx_ht_init_cache		579264	0					
ANR	579951	ArgumentList	pgs -> memory		579264	1					
ANR	579952	Argument	pgs -> memory		579264	0					
ANR	579953	PtrMemberAccess	pgs -> memory		579264	0					
ANR	579954	Identifier	pgs		579264	0					
ANR	579955	Identifier	memory		579264	1					
ANR	579956	Argument	pcache		579264	1					
ANR	579957	Identifier	pcache		579264	0					
ANR	579958	Argument	porder		579264	2					
ANR	579959	Identifier	porder		579264	0					
ANR	579960	ExpressionStatement	dht . lcm_width = lcm_width	1070:4:40878:40903	579264	18	True				
ANR	579961	AssignmentExpression	dht . lcm_width = lcm_width		579264	0		=			
ANR	579962	MemberAccess	dht . lcm_width		579264	0					
ANR	579963	Identifier	dht		579264	0					
ANR	579964	Identifier	lcm_width		579264	1					
ANR	579965	Identifier	lcm_width		579264	1					
ANR	579966	ExpressionStatement	dht . lcm_height = lcm_height	1071:4:40909:40936	579264	19	True				
ANR	579967	AssignmentExpression	dht . lcm_height = lcm_height		579264	0		=			
ANR	579968	MemberAccess	dht . lcm_height		579264	0					
ANR	579969	Identifier	dht		579264	0					
ANR	579970	Identifier	lcm_height		579264	1					
ANR	579971	Identifier	lcm_height		579264	1					
ANR	579972	IfStatement	if ( code >= 0 )		579264	20					
ANR	579973	Condition	code >= 0	1091:8:41892:41900	579264	0	True				
ANR	579974	RelationalExpression	code >= 0		579264	0		>=			
ANR	579975	Identifier	code		579264	0					
ANR	579976	PrimaryExpression	0		579264	1					
ANR	579977	CompoundStatement		152:8:6300:6330	579264	1					
ANR	579978	IdentifierDeclStatement	gx_device_halftone * pgsdht = pgs -> dev_ht ;	1092:8:41913:41957	579264	0	True				
ANR	579979	IdentifierDecl	* pgsdht = pgs -> dev_ht		579264	0					
ANR	579980	IdentifierDeclType	gx_device_halftone *		579264	0					
ANR	579981	Identifier	pgsdht		579264	1					
ANR	579982	AssignmentExpression	* pgsdht = pgs -> dev_ht		579264	2		=			
ANR	579983	Identifier	pgsdht		579264	0					
ANR	579984	PtrMemberAccess	pgs -> dev_ht		579264	1					
ANR	579985	Identifier	pgs		579264	0					
ANR	579986	Identifier	dev_ht		579264	1					
ANR	579987	IdentifierDeclStatement	rc_header tmp_rc ;	1093:8:41967:41997	579264	1	True				
ANR	579988	IdentifierDecl	tmp_rc		579264	0					
ANR	579989	IdentifierDeclType	rc_header		579264	0					
ANR	579990	Identifier	tmp_rc		579264	1					
ANR	579991	IfStatement	if ( pgsdht != 0 && pgsdht -> rc . ref_count == 1 )		579264	2					
ANR	579992	Condition	pgsdht != 0 && pgsdht -> rc . ref_count == 1	1095:12:42012:42051	579264	0	True				
ANR	579993	AndExpression	pgsdht != 0 && pgsdht -> rc . ref_count == 1		579264	0		&&			
ANR	579994	EqualityExpression	pgsdht != 0		579264	0		!=			
ANR	579995	Identifier	pgsdht		579264	0					
ANR	579996	PrimaryExpression	0		579264	1					
ANR	579997	EqualityExpression	pgsdht -> rc . ref_count == 1		579264	1		==			
ANR	579998	MemberAccess	pgsdht -> rc . ref_count		579264	0					
ANR	579999	PtrMemberAccess	pgsdht -> rc		579264	0					
ANR	580000	Identifier	pgsdht		579264	0					
ANR	580001	Identifier	rc		579264	1					
ANR	580002	Identifier	ref_count		579264	1					
ANR	580003	PrimaryExpression	1		579264	1					
ANR	580004	CompoundStatement		154:54:6387:6387	579264	1					
ANR	580005	IfStatement	if ( pdht != pgsdht )		579264	0					
ANR	580006	Condition	pdht != pgsdht	1096:16:42072:42085	579264	0	True				
ANR	580007	EqualityExpression	pdht != pgsdht		579264	0		!=			
ANR	580008	Identifier	pdht		579264	0					
ANR	580009	Identifier	pgsdht		579264	1					
ANR	580010	ExpressionStatement	"gx_device_halftone_release ( pgsdht , pgsdht -> rc . memory )"	1097:16:42104:42157	579264	1	True				
ANR	580011	CallExpression	"gx_device_halftone_release ( pgsdht , pgsdht -> rc . memory )"		579264	0					
ANR	580012	Callee	gx_device_halftone_release		579264	0					
ANR	580013	Identifier	gx_device_halftone_release		579264	0					
ANR	580014	ArgumentList	pgsdht		579264	1					
ANR	580015	Argument	pgsdht		579264	0					
ANR	580016	Identifier	pgsdht		579264	0					
ANR	580017	Argument	pgsdht -> rc . memory		579264	1					
ANR	580018	MemberAccess	pgsdht -> rc . memory		579264	0					
ANR	580019	PtrMemberAccess	pgsdht -> rc		579264	0					
ANR	580020	Identifier	pgsdht		579264	0					
ANR	580021	Identifier	rc		579264	1					
ANR	580022	Identifier	memory		579264	1					
ANR	580023	ElseStatement	else		579264	0					
ANR	580024	CompoundStatement		162:31:6731:6760	579264	0					
ANR	580025	Statement	rc_unshare_struct	1099:12:42188:42204	579264	0	True				
ANR	580026	Statement	(	1099:29:42205:42205	579264	1	True				
ANR	580027	Statement	pgs	1099:31:42207:42209	579264	2	True				
ANR	580028	Statement	->	1099:34:42210:42211	579264	3	True				
ANR	580029	Statement	dev_ht	1099:36:42212:42217	579264	4	True				
ANR	580030	Statement	","	1099:42:42218:42218	579264	5	True				
ANR	580031	Statement	gx_device_halftone	1100:31:42251:42268	579264	6	True				
ANR	580032	Statement	","	1100:49:42269:42269	579264	7	True				
ANR	580033	Statement	&	1101:31:42302:42302	579264	8	True				
ANR	580034	Statement	st_device_halftone	1101:32:42303:42320	579264	9	True				
ANR	580035	Statement	","	1101:50:42321:42321	579264	10	True				
ANR	580036	Statement	pgs	1102:31:42354:42356	579264	11	True				
ANR	580037	Statement	->	1102:34:42357:42358	579264	12	True				
ANR	580038	Statement	memory	1102:36:42359:42364	579264	13	True				
ANR	580039	Statement	","	1102:42:42365:42365	579264	14	True				
ANR	580040	IdentifierDeclStatement	BEGIN code = gs_error_VMerror ;	1103:31:42398:42427	579264	15	True				
ANR	580041	IdentifierDecl	code = gs_error_VMerror		579264	0					
ANR	580042	IdentifierDeclType	BEGIN		579264	0					
ANR	580043	Identifier	code		579264	1					
ANR	580044	AssignmentExpression	code = gs_error_VMerror		579264	2		=			
ANR	580045	Identifier	gs_error_VMerror		579264	0					
ANR	580046	Identifier	gs_error_VMerror		579264	1					
ANR	580047	GotoStatement	goto err ;	1103:62:42429:42437	579264	16	True				
ANR	580048	Identifier	err		579264	0					
ANR	580049	Statement	END	1103:72:42439:42441	579264	17	True				
ANR	580050	Statement	","	1103:75:42442:42442	579264	18	True				
ANR	580051	Statement	"""gx_gstate_dev_ht_install"""	1104:31:42475:42500	579264	19	True				
ANR	580052	Statement	)	1104:58:42502:42502	579264	20	True				
ANR	580053	ExpressionStatement		1104:59:42503:42503	579264	21	True				
ANR	580054	ExpressionStatement	pgsdht = pgs -> dev_ht	1105:12:42517:42537	579264	22	True				
ANR	580055	AssignmentExpression	pgsdht = pgs -> dev_ht		579264	0		=			
ANR	580056	Identifier	pgsdht		579264	0					
ANR	580057	PtrMemberAccess	pgs -> dev_ht		579264	1					
ANR	580058	Identifier	pgs		579264	0					
ANR	580059	Identifier	dev_ht		579264	1					
ANR	580060	IfStatement	if ( pdht -> components != 0 )		579264	3					
ANR	580061	Condition	pdht -> components != 0	1121:12:43307:43327	579264	0	True				
ANR	580062	EqualityExpression	pdht -> components != 0		579264	0		!=			
ANR	580063	PtrMemberAccess	pdht -> components		579264	0					
ANR	580064	Identifier	pdht		579264	0					
ANR	580065	Identifier	components		579264	1					
ANR	580066	PrimaryExpression	0		579264	1					
ANR	580067	CompoundStatement		181:12:7677:7714	579264	1					
ANR	580068	IdentifierDeclStatement	int input_ncomps = pdht -> num_comp ;	1122:12:43344:43381	579264	0	True				
ANR	580069	IdentifierDecl	input_ncomps = pdht -> num_comp		579264	0					
ANR	580070	IdentifierDeclType	int		579264	0					
ANR	580071	Identifier	input_ncomps		579264	1					
ANR	580072	AssignmentExpression	input_ncomps = pdht -> num_comp		579264	2		=			
ANR	580073	Identifier	input_ncomps		579264	0					
ANR	580074	PtrMemberAccess	pdht -> num_comp		579264	1					
ANR	580075	Identifier	pdht		579264	0					
ANR	580076	Identifier	num_comp		579264	1					
ANR	580077	ForStatement	for ( i = 0 ; i < input_ncomps ; i ++ )		579264	1					
ANR	580078	ForInit	i = 0 ;	1124:17:43401:43406	579264	0	True				
ANR	580079	AssignmentExpression	i = 0		579264	0		=			
ANR	580080	Identifier	i		579264	0					
ANR	580081	PrimaryExpression	0		579264	1					
ANR	580082	Condition	i < input_ncomps	1124:24:43408:43423	579264	1	True				
ANR	580083	RelationalExpression	i < input_ncomps		579264	0		<			
ANR	580084	Identifier	i		579264	0					
ANR	580085	Identifier	input_ncomps		579264	1					
ANR	580086	PostIncDecOperationExpression	i ++	1124:42:43426:43428	579264	2	True				
ANR	580087	Identifier	i		579264	0					
ANR	580088	IncDec	++		579264	1					
ANR	580089	CompoundStatement		186:16:7926:7982	579264	3					
ANR	580090	IdentifierDeclStatement	gx_ht_order_component * p_s_comp = & pdht -> components [ i ] ;	1125:16:43449:43504	579264	0	True				
ANR	580091	IdentifierDecl	* p_s_comp = & pdht -> components [ i ]		579264	0					
ANR	580092	IdentifierDeclType	gx_ht_order_component *		579264	0					
ANR	580093	Identifier	p_s_comp		579264	1					
ANR	580094	AssignmentExpression	* p_s_comp = & pdht -> components [ i ]		579264	2		=			
ANR	580095	Identifier	p_s_comp		579264	0					
ANR	580096	UnaryOperationExpression	& pdht -> components [ i ]		579264	1					
ANR	580097	UnaryOperator	&		579264	0					
ANR	580098	ArrayIndexing	pdht -> components [ i ]		579264	1					
ANR	580099	PtrMemberAccess	pdht -> components		579264	0					
ANR	580100	Identifier	pdht		579264	0					
ANR	580101	Identifier	components		579264	1					
ANR	580102	Identifier	i		579264	1					
ANR	580103	IdentifierDeclStatement	gx_ht_order * p_s_order = & p_s_comp -> corder ;	1126:16:43522:43575	579264	1	True				
ANR	580104	IdentifierDecl	* p_s_order = & p_s_comp -> corder		579264	0					
ANR	580105	IdentifierDeclType	gx_ht_order *		579264	0					
ANR	580106	Identifier	p_s_order		579264	1					
ANR	580107	AssignmentExpression	* p_s_order = & p_s_comp -> corder		579264	2		=			
ANR	580108	Identifier	p_s_order		579264	0					
ANR	580109	UnaryOperationExpression	& p_s_comp -> corder		579264	1					
ANR	580110	UnaryOperator	&		579264	0					
ANR	580111	PtrMemberAccess	p_s_comp -> corder		579264	1					
ANR	580112	Identifier	p_s_comp		579264	0					
ANR	580113	Identifier	corder		579264	1					
ANR	580114	IdentifierDeclStatement	int comp_num = p_s_comp -> comp_number ;	1127:16:43593:43649	579264	2	True				
ANR	580115	IdentifierDecl	comp_num = p_s_comp -> comp_number		579264	0					
ANR	580116	IdentifierDeclType	int		579264	0					
ANR	580117	Identifier	comp_num		579264	1					
ANR	580118	AssignmentExpression	comp_num = p_s_comp -> comp_number		579264	2		=			
ANR	580119	Identifier	comp_num		579264	0					
ANR	580120	PtrMemberAccess	p_s_comp -> comp_number		579264	1					
ANR	580121	Identifier	p_s_comp		579264	0					
ANR	580122	Identifier	comp_number		579264	1					
ANR	580123	IfStatement	if ( comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS )		579264	3					
ANR	580124	Condition	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS	1129:21:43673:43778	579264	0	True				
ANR	580125	AndExpression	comp_num >= 0 && comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		579264	0		&&			
ANR	580126	RelationalExpression	comp_num >= 0		579264	0		>=			
ANR	580127	Identifier	comp_num		579264	0					
ANR	580128	PrimaryExpression	0		579264	1					
ANR	580129	RelationalExpression	comp_num < GX_DEVICE_COLOR_MAX_COMPONENTS		579264	1		<			
ANR	580130	Identifier	comp_num		579264	0					
ANR	580131	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		579264	1					
ANR	580132	CompoundStatement		189:66:8116:8116	579264	1					
ANR	580133	ExpressionStatement	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"	1131:20:43805:43845	579264	0	True				
ANR	580134	CallExpression	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"		579264	0					
ANR	580135	Callee	memset		579264	0					
ANR	580136	Identifier	memset		579264	0					
ANR	580137	ArgumentList	p_s_order		579264	1					
ANR	580138	Argument	p_s_order		579264	0					
ANR	580139	Identifier	p_s_order		579264	0					
ANR	580140	Argument	0		579264	1					
ANR	580141	PrimaryExpression	0		579264	0					
ANR	580142	Argument	sizeof ( * p_s_order )		579264	2					
ANR	580143	SizeofExpression	sizeof ( * p_s_order )		579264	0					
ANR	580144	Sizeof	sizeof		579264	0					
ANR	580145	UnaryOperationExpression	* p_s_order		579264	1					
ANR	580146	UnaryOperator	*		579264	0					
ANR	580147	Identifier	p_s_order		579264	1					
ANR	580148	ElseStatement	else		579264	0					
ANR	580149	IfStatement	if ( comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS && used_default )		579264	0					
ANR	580150	Condition	comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS && used_default	1132:28:43875:43960	579264	0	True				
ANR	580151	AndExpression	comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS && used_default		579264	0		&&			
ANR	580152	EqualityExpression	comp_num == GX_DEVICE_COLOR_MAX_COMPONENTS		579264	0		==			
ANR	580153	Identifier	comp_num		579264	0					
ANR	580154	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		579264	1					
ANR	580155	Identifier	used_default		579264	1					
ANR	580156	ExpressionStatement	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"	1134:20:44016:44056	579264	1	True				
ANR	580157	CallExpression	"memset ( p_s_order , 0 , sizeof ( * p_s_order ) )"		579264	0					
ANR	580158	Callee	memset		579264	0					
ANR	580159	Identifier	memset		579264	0					
ANR	580160	ArgumentList	p_s_order		579264	1					
ANR	580161	Argument	p_s_order		579264	0					
ANR	580162	Identifier	p_s_order		579264	0					
ANR	580163	Argument	0		579264	1					
ANR	580164	PrimaryExpression	0		579264	0					
ANR	580165	Argument	sizeof ( * p_s_order )		579264	2					
ANR	580166	SizeofExpression	sizeof ( * p_s_order )		579264	0					
ANR	580167	Sizeof	sizeof		579264	0					
ANR	580168	UnaryOperationExpression	* p_s_order		579264	1					
ANR	580169	UnaryOperator	*		579264	0					
ANR	580170	Identifier	p_s_order		579264	1					
ANR	580171	IfStatement	if ( used_default )		579264	4					
ANR	580172	Condition	used_default	1137:12:44094:44105	579264	0	True				
ANR	580173	Identifier	used_default		579264	0					
ANR	580174	CompoundStatement		196:26:8441:8441	579264	1					
ANR	580175	ExpressionStatement	"memset ( & pdht -> order , 0 , sizeof ( pdht -> order ) )"	1138:12:44122:44166	579264	0	True				
ANR	580176	CallExpression	"memset ( & pdht -> order , 0 , sizeof ( pdht -> order ) )"		579264	0					
ANR	580177	Callee	memset		579264	0					
ANR	580178	Identifier	memset		579264	0					
ANR	580179	ArgumentList	& pdht -> order		579264	1					
ANR	580180	Argument	& pdht -> order		579264	0					
ANR	580181	UnaryOperationExpression	& pdht -> order		579264	0					
ANR	580182	UnaryOperator	&		579264	0					
ANR	580183	PtrMemberAccess	pdht -> order		579264	1					
ANR	580184	Identifier	pdht		579264	0					
ANR	580185	Identifier	order		579264	1					
ANR	580186	Argument	0		579264	1					
ANR	580187	PrimaryExpression	0		579264	0					
ANR	580188	Argument	sizeof ( pdht -> order )		579264	2					
ANR	580189	SizeofExpression	sizeof ( pdht -> order )		579264	0					
ANR	580190	Sizeof	sizeof		579264	0					
ANR	580191	PtrMemberAccess	pdht -> order		579264	1					
ANR	580192	Identifier	pdht		579264	0					
ANR	580193	Identifier	order		579264	1					
ANR	580194	ExpressionStatement	tmp_rc = pgsdht -> rc	1141:8:44187:44206	579264	5	True				
ANR	580195	AssignmentExpression	tmp_rc = pgsdht -> rc		579264	0		=			
ANR	580196	Identifier	tmp_rc		579264	0					
ANR	580197	PtrMemberAccess	pgsdht -> rc		579264	1					
ANR	580198	Identifier	pgsdht		579264	0					
ANR	580199	Identifier	rc		579264	1					
ANR	580200	ExpressionStatement	* pgsdht = dht	1142:8:44216:44229	579264	6	True				
ANR	580201	AssignmentExpression	* pgsdht = dht		579264	0		=			
ANR	580202	UnaryOperationExpression	* pgsdht		579264	0					
ANR	580203	UnaryOperator	*		579264	0					
ANR	580204	Identifier	pgsdht		579264	1					
ANR	580205	Identifier	dht		579264	1					
ANR	580206	ExpressionStatement	pgsdht -> rc = tmp_rc	1143:8:44239:44258	579264	7	True				
ANR	580207	AssignmentExpression	pgsdht -> rc = tmp_rc		579264	0		=			
ANR	580208	PtrMemberAccess	pgsdht -> rc		579264	0					
ANR	580209	Identifier	pgsdht		579264	0					
ANR	580210	Identifier	rc		579264	1					
ANR	580211	Identifier	tmp_rc		579264	1					
ANR	580212	ExpressionStatement	gx_gstate_set_effective_xfer ( pgs )	1146:8:44328:44361	579264	8	True				
ANR	580213	CallExpression	gx_gstate_set_effective_xfer ( pgs )		579264	0					
ANR	580214	Callee	gx_gstate_set_effective_xfer		579264	0					
ANR	580215	Identifier	gx_gstate_set_effective_xfer		579264	0					
ANR	580216	ArgumentList	pgs		579264	1					
ANR	580217	Argument	pgs		579264	0					
ANR	580218	Identifier	pgs		579264	0					
ANR	580219	ReturnStatement	return 0 ;	1148:8:44372:44380	579264	9	True				
ANR	580220	PrimaryExpression	0		579264	0					
ANR	580221	Label	err :	1152:2:44453:44456	579264	21	True				
ANR	580222	Identifier	err		579264	0					
ANR	580223	ForStatement	for ( i = 0 ; i < num_comps ; i ++ )		579264	22					
ANR	580224	ForInit	i = 0 ;	1153:9:44467:44472	579264	0	True				
ANR	580225	AssignmentExpression	i = 0		579264	0		=			
ANR	580226	Identifier	i		579264	0					
ANR	580227	PrimaryExpression	0		579264	1					
ANR	580228	Condition	i < num_comps	1153:16:44474:44486	579264	1	True				
ANR	580229	RelationalExpression	i < num_comps		579264	0		<			
ANR	580230	Identifier	i		579264	0					
ANR	580231	Identifier	num_comps		579264	1					
ANR	580232	PostIncDecOperationExpression	i ++	1153:31:44489:44491	579264	2	True				
ANR	580233	Identifier	i		579264	0					
ANR	580234	IncDec	++		579264	1					
ANR	580235	CompoundStatement		214:8:8897:8944	579264	3					
ANR	580236	IdentifierDeclStatement	gx_ht_order_component * pcomp = & dht . components [ i ] ;	1154:8:44504:44554	579264	0	True				
ANR	580237	IdentifierDecl	* pcomp = & dht . components [ i ]		579264	0					
ANR	580238	IdentifierDeclType	gx_ht_order_component *		579264	0					
ANR	580239	Identifier	pcomp		579264	1					
ANR	580240	AssignmentExpression	* pcomp = & dht . components [ i ]		579264	2		=			
ANR	580241	Identifier	pcomp		579264	0					
ANR	580242	UnaryOperationExpression	& dht . components [ i ]		579264	1					
ANR	580243	UnaryOperator	&		579264	0					
ANR	580244	ArrayIndexing	dht . components [ i ]		579264	1					
ANR	580245	MemberAccess	dht . components		579264	0					
ANR	580246	Identifier	dht		579264	0					
ANR	580247	Identifier	components		579264	1					
ANR	580248	Identifier	i		579264	1					
ANR	580249	IdentifierDeclStatement	gx_ht_order * porder = & pcomp -> corder ;	1155:8:44564:44611	579264	1	True				
ANR	580250	IdentifierDecl	* porder = & pcomp -> corder		579264	0					
ANR	580251	IdentifierDeclType	gx_ht_order *		579264	0					
ANR	580252	Identifier	porder		579264	1					
ANR	580253	AssignmentExpression	* porder = & pcomp -> corder		579264	2		=			
ANR	580254	Identifier	porder		579264	0					
ANR	580255	UnaryOperationExpression	& pcomp -> corder		579264	1					
ANR	580256	UnaryOperator	&		579264	0					
ANR	580257	PtrMemberAccess	pcomp -> corder		579264	1					
ANR	580258	Identifier	pcomp		579264	0					
ANR	580259	Identifier	corder		579264	1					
ANR	580260	IfStatement	if ( pcomp -> comp_number == - 1 )		579264	2					
ANR	580261	Condition	pcomp -> comp_number == - 1	1157:12:44626:44649	579264	0	True				
ANR	580262	EqualityExpression	pcomp -> comp_number == - 1		579264	0		==			
ANR	580263	PtrMemberAccess	pcomp -> comp_number		579264	0					
ANR	580264	Identifier	pcomp		579264	0					
ANR	580265	Identifier	comp_number		579264	1					
ANR	580266	UnaryOperationExpression	- 1		579264	1					
ANR	580267	UnaryOperator	-		579264	0					
ANR	580268	PrimaryExpression	1		579264	1					
ANR	580269	CompoundStatement		216:38:8985:8985	579264	1					
ANR	580270	ExpressionStatement	"gx_ht_order_release ( porder , pgs -> memory , true )"	1158:12:44666:44712	579264	0	True				
ANR	580271	CallExpression	"gx_ht_order_release ( porder , pgs -> memory , true )"		579264	0					
ANR	580272	Callee	gx_ht_order_release		579264	0					
ANR	580273	Identifier	gx_ht_order_release		579264	0					
ANR	580274	ArgumentList	porder		579264	1					
ANR	580275	Argument	porder		579264	0					
ANR	580276	Identifier	porder		579264	0					
ANR	580277	Argument	pgs -> memory		579264	1					
ANR	580278	PtrMemberAccess	pgs -> memory		579264	0					
ANR	580279	Identifier	pgs		579264	0					
ANR	580280	Identifier	memory		579264	1					
ANR	580281	Argument	true		579264	2					
ANR	580282	Identifier	true		579264	0					
ANR	580283	ElseStatement	else		579264	0					
ANR	580284	IfStatement	if ( porder -> cache != NULL )		579264	0					
ANR	580285	Condition	porder -> cache != NULL	1160:17:44741:44761	579264	0	True				
ANR	580286	EqualityExpression	porder -> cache != NULL		579264	0		!=			
ANR	580287	PtrMemberAccess	porder -> cache		579264	0					
ANR	580288	Identifier	porder		579264	0					
ANR	580289	Identifier	cache		579264	1					
ANR	580290	Identifier	NULL		579264	1					
ANR	580291	CompoundStatement		219:40:9097:9097	579264	1					
ANR	580292	ExpressionStatement	"gx_ht_free_cache ( pgs -> memory , porder -> cache )"	1161:12:44778:44822	579264	0	True				
ANR	580293	CallExpression	"gx_ht_free_cache ( pgs -> memory , porder -> cache )"		579264	0					
ANR	580294	Callee	gx_ht_free_cache		579264	0					
ANR	580295	Identifier	gx_ht_free_cache		579264	0					
ANR	580296	ArgumentList	pgs -> memory		579264	1					
ANR	580297	Argument	pgs -> memory		579264	0					
ANR	580298	PtrMemberAccess	pgs -> memory		579264	0					
ANR	580299	Identifier	pgs		579264	0					
ANR	580300	Identifier	memory		579264	1					
ANR	580301	Argument	porder -> cache		579264	1					
ANR	580302	PtrMemberAccess	porder -> cache		579264	0					
ANR	580303	Identifier	porder		579264	0					
ANR	580304	Identifier	cache		579264	1					
ANR	580305	ExpressionStatement	porder -> cache = NULL	1162:12:44836:44856	579264	1	True				
ANR	580306	AssignmentExpression	porder -> cache = NULL		579264	0		=			
ANR	580307	PtrMemberAccess	porder -> cache		579264	0					
ANR	580308	Identifier	porder		579264	0					
ANR	580309	Identifier	cache		579264	1					
ANR	580310	Identifier	NULL		579264	1					
ANR	580311	ExpressionStatement	"gs_free_object ( pgs -> memory , dht . components , ""gx_gstate_dev_ht_install"" )"	1165:4:44878:44949	579264	23	True				
ANR	580312	CallExpression	"gs_free_object ( pgs -> memory , dht . components , ""gx_gstate_dev_ht_install"" )"		579264	0					
ANR	580313	Callee	gs_free_object		579264	0					
ANR	580314	Identifier	gs_free_object		579264	0					
ANR	580315	ArgumentList	pgs -> memory		579264	1					
ANR	580316	Argument	pgs -> memory		579264	0					
ANR	580317	PtrMemberAccess	pgs -> memory		579264	0					
ANR	580318	Identifier	pgs		579264	0					
ANR	580319	Identifier	memory		579264	1					
ANR	580320	Argument	dht . components		579264	1					
ANR	580321	MemberAccess	dht . components		579264	0					
ANR	580322	Identifier	dht		579264	0					
ANR	580323	Identifier	components		579264	1					
ANR	580324	Argument	"""gx_gstate_dev_ht_install"""		579264	2					
ANR	580325	PrimaryExpression	"""gx_gstate_dev_ht_install"""		579264	0					
ANR	580326	ReturnStatement	return code ;	1167:4:44956:44967	579264	24	True				
ANR	580327	Identifier	code		579264	0					
ANR	580328	ReturnType	int		579264	1					
ANR	580329	Identifier	gx_gstate_dev_ht_install		579264	2					
ANR	580330	ParameterList	"gs_gstate * pgs , gx_device_halftone * pdht , gs_halftone_type type , const gx_device * dev"		579264	3					
ANR	580331	Parameter	gs_gstate * pgs	938:4:35541:35561	579264	0	True				
ANR	580332	ParameterType	gs_gstate *		579264	0					
ANR	580333	Identifier	pgs		579264	1					
ANR	580334	Parameter	gx_device_halftone * pdht	939:4:35568:35595	579264	1	True				
ANR	580335	ParameterType	gx_device_halftone *		579264	0					
ANR	580336	Identifier	pdht		579264	1					
ANR	580337	Parameter	gs_halftone_type type	940:4:35602:35629	579264	2	True				
ANR	580338	ParameterType	gs_halftone_type		579264	0					
ANR	580339	Identifier	type		579264	1					
ANR	580340	Parameter	const gx_device * dev	941:4:35636:35662	579264	3	True				
ANR	580341	ParameterType	const gx_device *		579264	0					
ANR	580342	Identifier	dev		579264	1					
ANR	580343	CFGEntryNode	ENTRY		579264		True				
ANR	580344	CFGExitNode	EXIT		579264		True				
ANR	580345	Symbol	pgsdht -> rc		579264						
ANR	580346	Symbol	dh		579264						
ANR	580347	Symbol	num_tiles		579264						
ANR	580348	Symbol	dht . lcm_width		579264						
ANR	580349	Symbol	* pgs		579264						
ANR	580350	Symbol	pdht -> order		579264						
ANR	580351	Symbol	& dht . components [ i ] . corder		579264						
ANR	580352	Symbol	porder -> width		579264						
ANR	580353	Symbol	gx_ht_copy_ht_order		579264						
ANR	580354	Symbol	type		579264						
ANR	580355	Symbol	gs_next_ids		579264						
ANR	580356	Symbol	pgsdht -> rc . memory		579264						
ANR	580357	Symbol	p_s_comp		579264						
ANR	580358	Symbol	& p_s_comp -> corder		579264						
ANR	580359	Symbol	pdht -> num_dev_comp		579264						
ANR	580360	Symbol	dw		579264						
ANR	580361	Symbol	dev		579264						
ANR	580362	Symbol	* pdht		579264						
ANR	580363	Symbol	p_s_comp -> comp_number		579264						
ANR	580364	Symbol	pgsdht		579264						
ANR	580365	Symbol	porder -> full_height		579264						
ANR	580366	Symbol	dht . num_comp		579264						
ANR	580367	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		579264						
ANR	580368	Symbol	gs_alloc_struct_array		579264						
ANR	580369	Symbol	dht . num_dev_comp		579264						
ANR	580370	Symbol	rep_count		579264						
ANR	580371	Symbol	NULL		579264						
ANR	580372	Symbol	porder -> cache		579264						
ANR	580373	Symbol	* dht		579264						
ANR	580374	Symbol	porder -> height		579264						
ANR	580375	Symbol	gx_ht_alloc_cache		579264						
ANR	580376	Symbol	pcomp		579264						
ANR	580377	Symbol	dht . components		579264						
ANR	580378	Symbol	& dht . components [ comp_num ] . corder		579264						
ANR	580379	Symbol	slots_wanted		579264						
ANR	580380	Symbol	pcache		579264						
ANR	580381	Symbol	porder		579264						
ANR	580382	Symbol	mem_diff		579264						
ANR	580383	Symbol	p_s_order -> bit_data		579264						
ANR	580384	Symbol	* pcomp		579264						
ANR	580385	Symbol	dht . order		579264						
ANR	580386	Symbol	* p_s_order		579264						
ANR	580387	Symbol	pdht		579264						
ANR	580388	Symbol	dht . id		579264						
ANR	580389	Symbol	pdht -> num_comp		579264						
ANR	580390	Symbol	dht . components [ comp_num ] . comp_number		579264						
ANR	580391	Symbol	true		579264						
ANR	580392	Symbol	align_bitmap_mod		579264						
ANR	580393	Symbol	p_d_order		579264						
ANR	580394	Symbol	pgsdht -> rc . ref_count		579264						
ANR	580395	Symbol	pdht -> rc . memory		579264						
ANR	580396	Symbol	pdht -> rc		579264						
ANR	580397	Symbol	* porder		579264						
ANR	580398	Symbol	& pdht -> order		579264						
ANR	580399	Symbol	max_int		579264						
ANR	580400	Symbol	& pcomp -> corder		579264						
ANR	580401	Symbol	code		579264						
ANR	580402	Symbol	lcm_width		579264						
ANR	580403	Symbol	gx_ht_cache_default_bits_size		579264						
ANR	580404	Symbol	lcm_height		579264						
ANR	580405	Symbol	pdht -> components		579264						
ANR	580406	Symbol	porder -> num_bits		579264						
ANR	580407	Symbol	igcd		579264						
ANR	580408	Symbol	& dht		579264						
ANR	580409	Symbol	* dht . components		579264						
ANR	580410	Symbol	* comp_num		579264						
ANR	580411	Symbol	num_comps		579264						
ANR	580412	Symbol	dht . type		579264						
ANR	580413	Symbol	pgs		579264						
ANR	580414	Symbol	pgs -> memory		579264						
ANR	580415	Symbol	pcomp -> comp_number		579264						
ANR	580416	Symbol	rep_raster		579264						
ANR	580417	Symbol	porder -> raster		579264						
ANR	580418	Symbol	pdht -> order . bit_data		579264						
ANR	580419	Symbol	false		579264						
ANR	580420	Symbol	h		579264						
ANR	580421	Symbol	i		579264						
ANR	580422	Symbol	p_s_order		579264						
ANR	580423	Symbol	comp_num		579264						
ANR	580424	Symbol	dht . lcm_height		579264						
ANR	580425	Symbol	dht		579264						
ANR	580426	Symbol	gs_error_VMerror		579264						
ANR	580427	Symbol	dht . components [ i ] . comp_number		579264						
ANR	580428	Symbol	* pgsdht		579264						
ANR	580429	Symbol	* i		579264						
ANR	580430	Symbol	& dht . order		579264						
ANR	580431	Symbol	* p_s_comp		579264						
ANR	580432	Symbol	gx_ht_order_component		579264						
ANR	580433	Symbol	input_ncomps		579264						
ANR	580434	Symbol	w		579264						
ANR	580435	Symbol	pgs -> dev_ht		579264						
ANR	580436	Symbol	used_default		579264						
ANR	580437	Symbol	& st_ht_order_component_element		579264						
ANR	580438	Symbol	tile_bytes		579264						
ANR	580439	Symbol	tmp_rc		579264						
ANR	580440	Function	gx_ht_install	1175:0:45155:46466							
ANR	580441	FunctionDef	"gx_ht_install (gs_gstate * pgs , const gs_halftone * pht , gx_device_halftone * pdht)"		580440	0					
ANR	580442	CompoundStatement		1178:0:45256:46466	580440	0					
ANR	580443	IdentifierDeclStatement	gs_memory_t * mem = pht -> rc . memory ;	1179:4:45262:45295	580440	0	True				
ANR	580444	IdentifierDecl	* mem = pht -> rc . memory		580440	0					
ANR	580445	IdentifierDeclType	gs_memory_t *		580440	0					
ANR	580446	Identifier	mem		580440	1					
ANR	580447	AssignmentExpression	* mem = pht -> rc . memory		580440	2		=			
ANR	580448	Identifier	mem		580440	0					
ANR	580449	MemberAccess	pht -> rc . memory		580440	1					
ANR	580450	PtrMemberAccess	pht -> rc		580440	0					
ANR	580451	Identifier	pht		580440	0					
ANR	580452	Identifier	rc		580440	1					
ANR	580453	Identifier	memory		580440	1					
ANR	580454	IdentifierDeclStatement	gs_halftone * old_ht = pgs -> halftone ;	1180:4:45301:45336	580440	1	True				
ANR	580455	IdentifierDecl	* old_ht = pgs -> halftone		580440	0					
ANR	580456	IdentifierDeclType	gs_halftone *		580440	0					
ANR	580457	Identifier	old_ht		580440	1					
ANR	580458	AssignmentExpression	* old_ht = pgs -> halftone		580440	2		=			
ANR	580459	Identifier	old_ht		580440	0					
ANR	580460	PtrMemberAccess	pgs -> halftone		580440	1					
ANR	580461	Identifier	pgs		580440	0					
ANR	580462	Identifier	halftone		580440	1					
ANR	580463	IdentifierDeclStatement	gs_halftone * new_ht ;	1181:4:45342:45361	580440	2	True				
ANR	580464	IdentifierDecl	* new_ht		580440	0					
ANR	580465	IdentifierDeclType	gs_halftone *		580440	0					
ANR	580466	Identifier	new_ht		580440	1					
ANR	580467	IdentifierDeclStatement	int code ;	1182:4:45367:45375	580440	3	True				
ANR	580468	IdentifierDecl	code		580440	0					
ANR	580469	IdentifierDeclType	int		580440	0					
ANR	580470	Identifier	code		580440	1					
ANR	580471	ExpressionStatement	pdht -> num_dev_comp = pgs -> device -> color_info . num_components	1184:4:45382:45441	580440	4	True				
ANR	580472	AssignmentExpression	pdht -> num_dev_comp = pgs -> device -> color_info . num_components		580440	0		=			
ANR	580473	PtrMemberAccess	pdht -> num_dev_comp		580440	0					
ANR	580474	Identifier	pdht		580440	0					
ANR	580475	Identifier	num_dev_comp		580440	1					
ANR	580476	MemberAccess	pgs -> device -> color_info . num_components		580440	1					
ANR	580477	PtrMemberAccess	pgs -> device -> color_info		580440	0					
ANR	580478	PtrMemberAccess	pgs -> device		580440	0					
ANR	580479	Identifier	pgs		580440	0					
ANR	580480	Identifier	device		580440	1					
ANR	580481	Identifier	color_info		580440	1					
ANR	580482	Identifier	num_components		580440	1					
ANR	580483	IfStatement	if ( old_ht != 0 && old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1 )		580440	5					
ANR	580484	Condition	old_ht != 0 && old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1	1185:8:45451:45526	580440	0	True				
ANR	580485	AndExpression	old_ht != 0 && old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1		580440	0		&&			
ANR	580486	EqualityExpression	old_ht != 0		580440	0		!=			
ANR	580487	Identifier	old_ht		580440	0					
ANR	580488	PrimaryExpression	0		580440	1					
ANR	580489	AndExpression	old_ht -> rc . memory == mem && old_ht -> rc . ref_count == 1		580440	1		&&			
ANR	580490	EqualityExpression	old_ht -> rc . memory == mem		580440	0		==			
ANR	580491	MemberAccess	old_ht -> rc . memory		580440	0					
ANR	580492	PtrMemberAccess	old_ht -> rc		580440	0					
ANR	580493	Identifier	old_ht		580440	0					
ANR	580494	Identifier	rc		580440	1					
ANR	580495	Identifier	memory		580440	1					
ANR	580496	Identifier	mem		580440	1					
ANR	580497	EqualityExpression	old_ht -> rc . ref_count == 1		580440	1		==			
ANR	580498	MemberAccess	old_ht -> rc . ref_count		580440	0					
ANR	580499	PtrMemberAccess	old_ht -> rc		580440	0					
ANR	580500	Identifier	old_ht		580440	0					
ANR	580501	Identifier	rc		580440	1					
ANR	580502	Identifier	ref_count		580440	1					
ANR	580503	PrimaryExpression	1		580440	1					
ANR	580504	ExpressionStatement	new_ht = old_ht	1188:8:45546:45561	580440	1	True				
ANR	580505	AssignmentExpression	new_ht = old_ht		580440	0		=			
ANR	580506	Identifier	new_ht		580440	0					
ANR	580507	Identifier	old_ht		580440	1					
ANR	580508	ElseStatement	else		580440	0					
ANR	580509	ExpressionStatement	"rc_alloc_struct_1 ( new_ht , gs_halftone , & st_halftone , mem , return_error ( gs_error_VMerror ) , ""gx_ht_install(new halftone)"" )"	1190:8:45580:45752	580440	0	True				
ANR	580510	CallExpression	"rc_alloc_struct_1 ( new_ht , gs_halftone , & st_halftone , mem , return_error ( gs_error_VMerror ) , ""gx_ht_install(new halftone)"" )"		580440	0					
ANR	580511	Callee	rc_alloc_struct_1		580440	0					
ANR	580512	Identifier	rc_alloc_struct_1		580440	0					
ANR	580513	ArgumentList	new_ht		580440	1					
ANR	580514	Argument	new_ht		580440	0					
ANR	580515	Identifier	new_ht		580440	0					
ANR	580516	Argument	gs_halftone		580440	1					
ANR	580517	Identifier	gs_halftone		580440	0					
ANR	580518	Argument	& st_halftone		580440	2					
ANR	580519	UnaryOperationExpression	& st_halftone		580440	0					
ANR	580520	UnaryOperator	&		580440	0					
ANR	580521	Identifier	st_halftone		580440	1					
ANR	580522	Argument	mem		580440	3					
ANR	580523	Identifier	mem		580440	0					
ANR	580524	Argument	return_error ( gs_error_VMerror )		580440	4					
ANR	580525	CallExpression	return_error ( gs_error_VMerror )		580440	0					
ANR	580526	Callee	return_error		580440	0					
ANR	580527	Identifier	return_error		580440	0					
ANR	580528	ArgumentList	gs_error_VMerror		580440	1					
ANR	580529	Argument	gs_error_VMerror		580440	0					
ANR	580530	Identifier	gs_error_VMerror		580440	0					
ANR	580531	Argument	"""gx_ht_install(new halftone)"""		580440	5					
ANR	580532	PrimaryExpression	"""gx_ht_install(new halftone)"""		580440	0					
ANR	580533	ExpressionStatement	"code = gx_gstate_dev_ht_install ( pgs , pdht , pht -> type , gs_currentdevice_inline ( pgs ) )"	1193:4:45758:45870	580440	6	True				
ANR	580534	AssignmentExpression	"code = gx_gstate_dev_ht_install ( pgs , pdht , pht -> type , gs_currentdevice_inline ( pgs ) )"		580440	0		=			
ANR	580535	Identifier	code		580440	0					
ANR	580536	CallExpression	"gx_gstate_dev_ht_install ( pgs , pdht , pht -> type , gs_currentdevice_inline ( pgs ) )"		580440	1					
ANR	580537	Callee	gx_gstate_dev_ht_install		580440	0					
ANR	580538	Identifier	gx_gstate_dev_ht_install		580440	0					
ANR	580539	ArgumentList	pgs		580440	1					
ANR	580540	Argument	pgs		580440	0					
ANR	580541	Identifier	pgs		580440	0					
ANR	580542	Argument	pdht		580440	1					
ANR	580543	Identifier	pdht		580440	0					
ANR	580544	Argument	pht -> type		580440	2					
ANR	580545	PtrMemberAccess	pht -> type		580440	0					
ANR	580546	Identifier	pht		580440	0					
ANR	580547	Identifier	type		580440	1					
ANR	580548	Argument	gs_currentdevice_inline ( pgs )		580440	3					
ANR	580549	CallExpression	gs_currentdevice_inline ( pgs )		580440	0					
ANR	580550	Callee	gs_currentdevice_inline		580440	0					
ANR	580551	Identifier	gs_currentdevice_inline		580440	0					
ANR	580552	ArgumentList	pgs		580440	1					
ANR	580553	Argument	pgs		580440	0					
ANR	580554	Identifier	pgs		580440	0					
ANR	580555	IfStatement	if ( code < 0 )		580440	7					
ANR	580556	Condition	code < 0	1195:8:45880:45887	580440	0	True				
ANR	580557	RelationalExpression	code < 0		580440	0		<			
ANR	580558	Identifier	code		580440	0					
ANR	580559	PrimaryExpression	0		580440	1					
ANR	580560	CompoundStatement		18:18:633:633	580440	1					
ANR	580561	IfStatement	if ( new_ht != old_ht )		580440	0					
ANR	580562	Condition	new_ht != old_ht	1196:12:45904:45919	580440	0	True				
ANR	580563	EqualityExpression	new_ht != old_ht		580440	0		!=			
ANR	580564	Identifier	new_ht		580440	0					
ANR	580565	Identifier	old_ht		580440	1					
ANR	580566	ExpressionStatement	"gs_free_object ( mem , new_ht , ""gx_ht_install(new halftone)"" )"	1197:12:45934:45992	580440	1	True				
ANR	580567	CallExpression	"gs_free_object ( mem , new_ht , ""gx_ht_install(new halftone)"" )"		580440	0					
ANR	580568	Callee	gs_free_object		580440	0					
ANR	580569	Identifier	gs_free_object		580440	0					
ANR	580570	ArgumentList	mem		580440	1					
ANR	580571	Argument	mem		580440	0					
ANR	580572	Identifier	mem		580440	0					
ANR	580573	Argument	new_ht		580440	1					
ANR	580574	Identifier	new_ht		580440	0					
ANR	580575	Argument	"""gx_ht_install(new halftone)"""		580440	2					
ANR	580576	PrimaryExpression	"""gx_ht_install(new halftone)"""		580440	0					
ANR	580577	ReturnStatement	return code ;	1198:8:46002:46013	580440	1	True				
ANR	580578	Identifier	code		580440	0					
ANR	580579	ExpressionStatement	"gx_device_halftone_release ( pdht , pdht -> rc . memory )"	1205:4:46141:46190	580440	8	True				
ANR	580580	CallExpression	"gx_device_halftone_release ( pdht , pdht -> rc . memory )"		580440	0					
ANR	580581	Callee	gx_device_halftone_release		580440	0					
ANR	580582	Identifier	gx_device_halftone_release		580440	0					
ANR	580583	ArgumentList	pdht		580440	1					
ANR	580584	Argument	pdht		580440	0					
ANR	580585	Identifier	pdht		580440	0					
ANR	580586	Argument	pdht -> rc . memory		580440	1					
ANR	580587	MemberAccess	pdht -> rc . memory		580440	0					
ANR	580588	PtrMemberAccess	pdht -> rc		580440	0					
ANR	580589	Identifier	pdht		580440	0					
ANR	580590	Identifier	rc		580440	1					
ANR	580591	Identifier	memory		580440	1					
ANR	580592	IfStatement	if ( new_ht != old_ht )		580440	9					
ANR	580593	Condition	new_ht != old_ht	1207:8:46201:46216	580440	0	True				
ANR	580594	EqualityExpression	new_ht != old_ht		580440	0		!=			
ANR	580595	Identifier	new_ht		580440	0					
ANR	580596	Identifier	old_ht		580440	1					
ANR	580597	ExpressionStatement	"rc_decrement ( old_ht , ""gx_ht_install(old halftone)"" )"	1208:8:46227:46278	580440	1	True				
ANR	580598	CallExpression	"rc_decrement ( old_ht , ""gx_ht_install(old halftone)"" )"		580440	0					
ANR	580599	Callee	rc_decrement		580440	0					
ANR	580600	Identifier	rc_decrement		580440	0					
ANR	580601	ArgumentList	old_ht		580440	1					
ANR	580602	Argument	old_ht		580440	0					
ANR	580603	Identifier	old_ht		580440	0					
ANR	580604	Argument	"""gx_ht_install(old halftone)"""		580440	1					
ANR	580605	PrimaryExpression	"""gx_ht_install(old halftone)"""		580440	0					
ANR	580606	CompoundStatement		33:8:1037:1049	580440	10					
ANR	580607	IdentifierDeclStatement	rc_header rc ;	1210:8:46294:46306	580440	0	True				
ANR	580608	IdentifierDecl	rc		580440	0					
ANR	580609	IdentifierDeclType	rc_header		580440	0					
ANR	580610	Identifier	rc		580440	1					
ANR	580611	ExpressionStatement	rc = new_ht -> rc	1212:8:46317:46332	580440	1	True				
ANR	580612	AssignmentExpression	rc = new_ht -> rc		580440	0		=			
ANR	580613	Identifier	rc		580440	0					
ANR	580614	PtrMemberAccess	new_ht -> rc		580440	1					
ANR	580615	Identifier	new_ht		580440	0					
ANR	580616	Identifier	rc		580440	1					
ANR	580617	ExpressionStatement	* new_ht = * pht	1213:8:46342:46356	580440	2	True				
ANR	580618	AssignmentExpression	* new_ht = * pht		580440	0		=			
ANR	580619	UnaryOperationExpression	* new_ht		580440	0					
ANR	580620	UnaryOperator	*		580440	0					
ANR	580621	Identifier	new_ht		580440	1					
ANR	580622	UnaryOperationExpression	* pht		580440	1					
ANR	580623	UnaryOperator	*		580440	0					
ANR	580624	Identifier	pht		580440	1					
ANR	580625	ExpressionStatement	new_ht -> rc = rc	1214:8:46366:46381	580440	3	True				
ANR	580626	AssignmentExpression	new_ht -> rc = rc		580440	0		=			
ANR	580627	PtrMemberAccess	new_ht -> rc		580440	0					
ANR	580628	Identifier	new_ht		580440	0					
ANR	580629	Identifier	rc		580440	1					
ANR	580630	Identifier	rc		580440	1					
ANR	580631	ExpressionStatement	pgs -> halftone = new_ht	1216:4:46393:46415	580440	11	True				
ANR	580632	AssignmentExpression	pgs -> halftone = new_ht		580440	0		=			
ANR	580633	PtrMemberAccess	pgs -> halftone		580440	0					
ANR	580634	Identifier	pgs		580440	0					
ANR	580635	Identifier	halftone		580440	1					
ANR	580636	Identifier	new_ht		580440	1					
ANR	580637	ExpressionStatement	gx_unset_both_dev_colors ( pgs )	1217:4:46421:46450	580440	12	True				
ANR	580638	CallExpression	gx_unset_both_dev_colors ( pgs )		580440	0					
ANR	580639	Callee	gx_unset_both_dev_colors		580440	0					
ANR	580640	Identifier	gx_unset_both_dev_colors		580440	0					
ANR	580641	ArgumentList	pgs		580440	1					
ANR	580642	Argument	pgs		580440	0					
ANR	580643	Identifier	pgs		580440	0					
ANR	580644	ReturnStatement	return 0 ;	1218:4:46456:46464	580440	13	True				
ANR	580645	PrimaryExpression	0		580440	0					
ANR	580646	ReturnType	int		580440	1					
ANR	580647	Identifier	gx_ht_install		580440	2					
ANR	580648	ParameterList	"gs_gstate * pgs , const gs_halftone * pht , gx_device_halftone * pdht"		580440	3					
ANR	580649	Parameter	gs_gstate * pgs	1176:14:45173:45187	580440	0	True				
ANR	580650	ParameterType	gs_gstate *		580440	0					
ANR	580651	Identifier	pgs		580440	1					
ANR	580652	Parameter	const gs_halftone * pht	1176:31:45190:45212	580440	1	True				
ANR	580653	ParameterType	const gs_halftone *		580440	0					
ANR	580654	Identifier	pht		580440	1					
ANR	580655	Parameter	gx_device_halftone * pdht	1177:14:45229:45253	580440	2	True				
ANR	580656	ParameterType	gx_device_halftone *		580440	0					
ANR	580657	Identifier	pdht		580440	1					
ANR	580658	CFGEntryNode	ENTRY		580440		True				
ANR	580659	CFGExitNode	EXIT		580440		True				
ANR	580660	Symbol	return_error		580440						
ANR	580661	Symbol	code		580440						
ANR	580662	Symbol	old_ht -> rc . memory		580440						
ANR	580663	Symbol	* pgs		580440						
ANR	580664	Symbol	pgs -> device -> color_info		580440						
ANR	580665	Symbol	old_ht -> rc . ref_count		580440						
ANR	580666	Symbol	gx_gstate_dev_ht_install		580440						
ANR	580667	Symbol	old_ht -> rc		580440						
ANR	580668	Symbol	pdht -> num_dev_comp		580440						
ANR	580669	Symbol	mem		580440						
ANR	580670	Symbol	* pdht		580440						
ANR	580671	Symbol	gs_currentdevice_inline		580440						
ANR	580672	Symbol	pgs -> device		580440						
ANR	580673	Symbol	* pgs -> device		580440						
ANR	580674	Symbol	* old_ht		580440						
ANR	580675	Symbol	pgs -> halftone		580440						
ANR	580676	Symbol	pgs		580440						
ANR	580677	Symbol	pht -> rc . memory		580440						
ANR	580678	Symbol	gs_halftone		580440						
ANR	580679	Symbol	* pht		580440						
ANR	580680	Symbol	pgs -> device -> color_info . num_components		580440						
ANR	580681	Symbol	old_ht		580440						
ANR	580682	Symbol	& st_halftone		580440						
ANR	580683	Symbol	pht -> type		580440						
ANR	580684	Symbol	new_ht		580440						
ANR	580685	Symbol	* * pgs		580440						
ANR	580686	Symbol	gs_error_VMerror		580440						
ANR	580687	Symbol	rc		580440						
ANR	580688	Symbol	pht -> rc		580440						
ANR	580689	Symbol	pdht		580440						
ANR	580690	Symbol	* new_ht		580440						
ANR	580691	Symbol	pdht -> rc		580440						
ANR	580692	Symbol	pdht -> rc . memory		580440						
ANR	580693	Symbol	new_ht -> rc		580440						
ANR	580694	Symbol	pht		580440						
ANR	580695	Function	gx_gstate_set_effective_xfer	1230:0:46849:50041							
ANR	580696	FunctionDef	gx_gstate_set_effective_xfer (gs_gstate * pgs)		580695	0					
ANR	580697	CompoundStatement		1232:0:46900:50041	580695	0					
ANR	580698	IdentifierDeclStatement	gx_device_halftone * pdht = pgs -> dev_ht ;	1233:4:46906:46944	580695	0	True				
ANR	580699	IdentifierDecl	* pdht = pgs -> dev_ht		580695	0					
ANR	580700	IdentifierDeclType	gx_device_halftone *		580695	0					
ANR	580701	Identifier	pdht		580695	1					
ANR	580702	AssignmentExpression	* pdht = pgs -> dev_ht		580695	2		=			
ANR	580703	Identifier	pdht		580695	0					
ANR	580704	PtrMemberAccess	pgs -> dev_ht		580695	1					
ANR	580705	Identifier	pgs		580695	0					
ANR	580706	Identifier	dev_ht		580695	1					
ANR	580707	IdentifierDeclStatement	gx_transfer_map * pmap ;	1234:4:46950:46971	580695	1	True				
ANR	580708	IdentifierDecl	* pmap		580695	0					
ANR	580709	IdentifierDeclType	gx_transfer_map *		580695	0					
ANR	580710	Identifier	pmap		580695	1					
ANR	580711	IdentifierDeclStatement	gx_ht_order * porder ;	1235:4:46977:46996	580695	2	True				
ANR	580712	IdentifierDecl	* porder		580695	0					
ANR	580713	IdentifierDeclType	gx_ht_order *		580695	0					
ANR	580714	Identifier	porder		580695	1					
ANR	580715	IdentifierDeclStatement	"int i , component_num , non_id_count ;"	1236:4:47002:47036	580695	3	True				
ANR	580716	IdentifierDecl	i		580695	0					
ANR	580717	IdentifierDeclType	int		580695	0					
ANR	580718	Identifier	i		580695	1					
ANR	580719	IdentifierDecl	component_num		580695	1					
ANR	580720	IdentifierDeclType	int		580695	0					
ANR	580721	Identifier	component_num		580695	1					
ANR	580722	IdentifierDecl	non_id_count		580695	2					
ANR	580723	IdentifierDeclType	int		580695	0					
ANR	580724	Identifier	non_id_count		580695	1					
ANR	580725	ExpressionStatement	non_id_count = ( pgs -> set_transfer . gray -> proc == & gs_identity_transfer ) ? 0 : GX_DEVICE_COLOR_MAX_COMPONENTS	1238:4:47043:47150	580695	4	True				
ANR	580726	AssignmentExpression	non_id_count = ( pgs -> set_transfer . gray -> proc == & gs_identity_transfer ) ? 0 : GX_DEVICE_COLOR_MAX_COMPONENTS		580695	0		=			
ANR	580727	Identifier	non_id_count		580695	0					
ANR	580728	ConditionalExpression	( pgs -> set_transfer . gray -> proc == & gs_identity_transfer ) ? 0 : GX_DEVICE_COLOR_MAX_COMPONENTS		580695	1					
ANR	580729	Condition	pgs -> set_transfer . gray -> proc == & gs_identity_transfer		580695	0					
ANR	580730	EqualityExpression	pgs -> set_transfer . gray -> proc == & gs_identity_transfer		580695	0		==			
ANR	580731	PtrMemberAccess	pgs -> set_transfer . gray -> proc		580695	0					
ANR	580732	MemberAccess	pgs -> set_transfer . gray		580695	0					
ANR	580733	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580734	Identifier	pgs		580695	0					
ANR	580735	Identifier	set_transfer		580695	1					
ANR	580736	Identifier	gray		580695	1					
ANR	580737	Identifier	proc		580695	1					
ANR	580738	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	580739	UnaryOperator	&		580695	0					
ANR	580740	Identifier	gs_identity_transfer		580695	1					
ANR	580741	PrimaryExpression	0		580695	1					
ANR	580742	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		580695	2					
ANR	580743	ForStatement	for ( i = 0 ; i < GX_DEVICE_COLOR_MAX_COMPONENTS ; i ++ )		580695	5					
ANR	580744	ForInit	i = 0 ;	1239:9:47161:47166	580695	0	True				
ANR	580745	AssignmentExpression	i = 0		580695	0		=			
ANR	580746	Identifier	i		580695	0					
ANR	580747	PrimaryExpression	0		580695	1					
ANR	580748	Condition	i < GX_DEVICE_COLOR_MAX_COMPONENTS	1239:16:47168:47201	580695	1	True				
ANR	580749	RelationalExpression	i < GX_DEVICE_COLOR_MAX_COMPONENTS		580695	0		<			
ANR	580750	Identifier	i		580695	0					
ANR	580751	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		580695	1					
ANR	580752	PostIncDecOperationExpression	i ++	1239:52:47204:47206	580695	2	True				
ANR	580753	Identifier	i		580695	0					
ANR	580754	IncDec	++		580695	1					
ANR	580755	ExpressionStatement	pgs -> effective_transfer [ i ] = pgs -> set_transfer . gray	1240:8:47217:47268	580695	3	True				
ANR	580756	AssignmentExpression	pgs -> effective_transfer [ i ] = pgs -> set_transfer . gray		580695	0		=			
ANR	580757	ArrayIndexing	pgs -> effective_transfer [ i ]		580695	0					
ANR	580758	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580759	Identifier	pgs		580695	0					
ANR	580760	Identifier	effective_transfer		580695	1					
ANR	580761	Identifier	i		580695	1					
ANR	580762	MemberAccess	pgs -> set_transfer . gray		580695	1					
ANR	580763	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580764	Identifier	pgs		580695	0					
ANR	580765	Identifier	set_transfer		580695	1					
ANR	580766	Identifier	gray		580695	1					
ANR	580767	IfStatement	if ( pgs -> set_transfer . red )		580695	6					
ANR	580768	Condition	pgs -> set_transfer . red	1243:8:47366:47386	580695	0	True				
ANR	580769	MemberAccess	pgs -> set_transfer . red		580695	0					
ANR	580770	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580771	Identifier	pgs		580695	0					
ANR	580772	Identifier	set_transfer		580695	1					
ANR	580773	Identifier	red		580695	1					
ANR	580774	CompoundStatement		12:31:488:488	580695	1					
ANR	580775	ExpressionStatement	component_num = pgs -> set_transfer . red_component_num	1244:8:47399:47450	580695	0	True				
ANR	580776	AssignmentExpression	component_num = pgs -> set_transfer . red_component_num		580695	0		=			
ANR	580777	Identifier	component_num		580695	0					
ANR	580778	MemberAccess	pgs -> set_transfer . red_component_num		580695	1					
ANR	580779	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580780	Identifier	pgs		580695	0					
ANR	580781	Identifier	set_transfer		580695	1					
ANR	580782	Identifier	red_component_num		580695	1					
ANR	580783	IfStatement	if ( component_num >= 0 )		580695	1					
ANR	580784	Condition	component_num >= 0	1245:12:47464:47481	580695	0	True				
ANR	580785	RelationalExpression	component_num >= 0		580695	0		>=			
ANR	580786	Identifier	component_num		580695	0					
ANR	580787	PrimaryExpression	0		580695	1					
ANR	580788	CompoundStatement		14:32:583:583	580695	1					
ANR	580789	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		580695	0					
ANR	580790	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1246:16:47502:47570	580695	0	True				
ANR	580791	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	580792	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		580695	0					
ANR	580793	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580794	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580795	Identifier	pgs		580695	0					
ANR	580796	Identifier	effective_transfer		580695	1					
ANR	580797	Identifier	component_num		580695	1					
ANR	580798	Identifier	proc		580695	1					
ANR	580799	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	580800	UnaryOperator	&		580695	0					
ANR	580801	Identifier	gs_identity_transfer		580695	1					
ANR	580802	ExpressionStatement	non_id_count --	1247:15:47588:47602	580695	1	True				
ANR	580803	PostIncDecOperationExpression	non_id_count --		580695	0					
ANR	580804	Identifier	non_id_count		580695	0					
ANR	580805	IncDec	--		580695	1					
ANR	580806	ExpressionStatement	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . red	1248:12:47616:47678	580695	1	True				
ANR	580807	AssignmentExpression	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . red		580695	0		=			
ANR	580808	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580809	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580810	Identifier	pgs		580695	0					
ANR	580811	Identifier	effective_transfer		580695	1					
ANR	580812	Identifier	component_num		580695	1					
ANR	580813	MemberAccess	pgs -> set_transfer . red		580695	1					
ANR	580814	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580815	Identifier	pgs		580695	0					
ANR	580816	Identifier	set_transfer		580695	1					
ANR	580817	Identifier	red		580695	1					
ANR	580818	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		580695	2					
ANR	580819	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1249:16:47696:47764	580695	0	True				
ANR	580820	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	580821	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		580695	0					
ANR	580822	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580823	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580824	Identifier	pgs		580695	0					
ANR	580825	Identifier	effective_transfer		580695	1					
ANR	580826	Identifier	component_num		580695	1					
ANR	580827	Identifier	proc		580695	1					
ANR	580828	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	580829	UnaryOperator	&		580695	0					
ANR	580830	Identifier	gs_identity_transfer		580695	1					
ANR	580831	ExpressionStatement	non_id_count ++	1250:15:47782:47796	580695	1	True				
ANR	580832	PostIncDecOperationExpression	non_id_count ++		580695	0					
ANR	580833	Identifier	non_id_count		580695	0					
ANR	580834	IncDec	++		580695	1					
ANR	580835	IfStatement	if ( pgs -> set_transfer . green )		580695	7					
ANR	580836	Condition	pgs -> set_transfer . green	1253:8:47822:47844	580695	0	True				
ANR	580837	MemberAccess	pgs -> set_transfer . green		580695	0					
ANR	580838	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580839	Identifier	pgs		580695	0					
ANR	580840	Identifier	set_transfer		580695	1					
ANR	580841	Identifier	green		580695	1					
ANR	580842	CompoundStatement		22:33:946:946	580695	1					
ANR	580843	ExpressionStatement	component_num = pgs -> set_transfer . green_component_num	1254:8:47857:47910	580695	0	True				
ANR	580844	AssignmentExpression	component_num = pgs -> set_transfer . green_component_num		580695	0		=			
ANR	580845	Identifier	component_num		580695	0					
ANR	580846	MemberAccess	pgs -> set_transfer . green_component_num		580695	1					
ANR	580847	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580848	Identifier	pgs		580695	0					
ANR	580849	Identifier	set_transfer		580695	1					
ANR	580850	Identifier	green_component_num		580695	1					
ANR	580851	IfStatement	if ( component_num >= 0 )		580695	1					
ANR	580852	Condition	component_num >= 0	1255:12:47924:47941	580695	0	True				
ANR	580853	RelationalExpression	component_num >= 0		580695	0		>=			
ANR	580854	Identifier	component_num		580695	0					
ANR	580855	PrimaryExpression	0		580695	1					
ANR	580856	CompoundStatement		24:32:1043:1043	580695	1					
ANR	580857	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		580695	0					
ANR	580858	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1256:16:47962:48030	580695	0	True				
ANR	580859	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	580860	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		580695	0					
ANR	580861	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580862	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580863	Identifier	pgs		580695	0					
ANR	580864	Identifier	effective_transfer		580695	1					
ANR	580865	Identifier	component_num		580695	1					
ANR	580866	Identifier	proc		580695	1					
ANR	580867	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	580868	UnaryOperator	&		580695	0					
ANR	580869	Identifier	gs_identity_transfer		580695	1					
ANR	580870	ExpressionStatement	non_id_count --	1257:15:48048:48062	580695	1	True				
ANR	580871	PostIncDecOperationExpression	non_id_count --		580695	0					
ANR	580872	Identifier	non_id_count		580695	0					
ANR	580873	IncDec	--		580695	1					
ANR	580874	ExpressionStatement	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . green	1258:12:48076:48140	580695	1	True				
ANR	580875	AssignmentExpression	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . green		580695	0		=			
ANR	580876	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580877	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580878	Identifier	pgs		580695	0					
ANR	580879	Identifier	effective_transfer		580695	1					
ANR	580880	Identifier	component_num		580695	1					
ANR	580881	MemberAccess	pgs -> set_transfer . green		580695	1					
ANR	580882	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580883	Identifier	pgs		580695	0					
ANR	580884	Identifier	set_transfer		580695	1					
ANR	580885	Identifier	green		580695	1					
ANR	580886	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		580695	2					
ANR	580887	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1259:16:48158:48226	580695	0	True				
ANR	580888	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	580889	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		580695	0					
ANR	580890	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580891	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580892	Identifier	pgs		580695	0					
ANR	580893	Identifier	effective_transfer		580695	1					
ANR	580894	Identifier	component_num		580695	1					
ANR	580895	Identifier	proc		580695	1					
ANR	580896	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	580897	UnaryOperator	&		580695	0					
ANR	580898	Identifier	gs_identity_transfer		580695	1					
ANR	580899	ExpressionStatement	non_id_count ++	1260:15:48244:48258	580695	1	True				
ANR	580900	PostIncDecOperationExpression	non_id_count ++		580695	0					
ANR	580901	Identifier	non_id_count		580695	0					
ANR	580902	IncDec	++		580695	1					
ANR	580903	IfStatement	if ( pgs -> set_transfer . blue )		580695	8					
ANR	580904	Condition	pgs -> set_transfer . blue	1263:8:48284:48305	580695	0	True				
ANR	580905	MemberAccess	pgs -> set_transfer . blue		580695	0					
ANR	580906	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580907	Identifier	pgs		580695	0					
ANR	580908	Identifier	set_transfer		580695	1					
ANR	580909	Identifier	blue		580695	1					
ANR	580910	CompoundStatement		32:32:1407:1407	580695	1					
ANR	580911	ExpressionStatement	component_num = pgs -> set_transfer . blue_component_num	1264:8:48318:48370	580695	0	True				
ANR	580912	AssignmentExpression	component_num = pgs -> set_transfer . blue_component_num		580695	0		=			
ANR	580913	Identifier	component_num		580695	0					
ANR	580914	MemberAccess	pgs -> set_transfer . blue_component_num		580695	1					
ANR	580915	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580916	Identifier	pgs		580695	0					
ANR	580917	Identifier	set_transfer		580695	1					
ANR	580918	Identifier	blue_component_num		580695	1					
ANR	580919	IfStatement	if ( component_num >= 0 )		580695	1					
ANR	580920	Condition	component_num >= 0	1265:12:48384:48401	580695	0	True				
ANR	580921	RelationalExpression	component_num >= 0		580695	0		>=			
ANR	580922	Identifier	component_num		580695	0					
ANR	580923	PrimaryExpression	0		580695	1					
ANR	580924	CompoundStatement		34:32:1503:1503	580695	1					
ANR	580925	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		580695	0					
ANR	580926	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1266:16:48422:48490	580695	0	True				
ANR	580927	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	580928	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		580695	0					
ANR	580929	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580930	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580931	Identifier	pgs		580695	0					
ANR	580932	Identifier	effective_transfer		580695	1					
ANR	580933	Identifier	component_num		580695	1					
ANR	580934	Identifier	proc		580695	1					
ANR	580935	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	580936	UnaryOperator	&		580695	0					
ANR	580937	Identifier	gs_identity_transfer		580695	1					
ANR	580938	ExpressionStatement	non_id_count --	1267:15:48508:48522	580695	1	True				
ANR	580939	PostIncDecOperationExpression	non_id_count --		580695	0					
ANR	580940	Identifier	non_id_count		580695	0					
ANR	580941	IncDec	--		580695	1					
ANR	580942	ExpressionStatement	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . blue	1268:12:48536:48599	580695	1	True				
ANR	580943	AssignmentExpression	pgs -> effective_transfer [ component_num ] = pgs -> set_transfer . blue		580695	0		=			
ANR	580944	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580945	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580946	Identifier	pgs		580695	0					
ANR	580947	Identifier	effective_transfer		580695	1					
ANR	580948	Identifier	component_num		580695	1					
ANR	580949	MemberAccess	pgs -> set_transfer . blue		580695	1					
ANR	580950	PtrMemberAccess	pgs -> set_transfer		580695	0					
ANR	580951	Identifier	pgs		580695	0					
ANR	580952	Identifier	set_transfer		580695	1					
ANR	580953	Identifier	blue		580695	1					
ANR	580954	IfStatement	if ( pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer )		580695	2					
ANR	580955	Condition	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer	1269:16:48617:48685	580695	0	True				
ANR	580956	EqualityExpression	pgs -> effective_transfer [ component_num ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	580957	PtrMemberAccess	pgs -> effective_transfer [ component_num ] -> proc		580695	0					
ANR	580958	ArrayIndexing	pgs -> effective_transfer [ component_num ]		580695	0					
ANR	580959	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	580960	Identifier	pgs		580695	0					
ANR	580961	Identifier	effective_transfer		580695	1					
ANR	580962	Identifier	component_num		580695	1					
ANR	580963	Identifier	proc		580695	1					
ANR	580964	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	580965	UnaryOperator	&		580695	0					
ANR	580966	Identifier	gs_identity_transfer		580695	1					
ANR	580967	ExpressionStatement	non_id_count ++	1270:15:48703:48717	580695	1	True				
ANR	580968	PostIncDecOperationExpression	non_id_count ++		580695	0					
ANR	580969	Identifier	non_id_count		580695	0					
ANR	580970	IncDec	++		580695	1					
ANR	580971	IfStatement	if ( pdht )		580695	9					
ANR	580972	Condition	pdht	1274:8:48744:48747	580695	0	True				
ANR	580973	Identifier	pdht		580695	0					
ANR	580974	CompoundStatement		43:14:1849:1849	580695	1					
ANR	580975	ExpressionStatement	porder = & ( pdht -> order )	1278:8:48969:48992	580695	0	True				
ANR	580976	AssignmentExpression	porder = & ( pdht -> order )		580695	0		=			
ANR	580977	Identifier	porder		580695	0					
ANR	580978	UnaryOperationExpression	& ( pdht -> order )		580695	1					
ANR	580979	UnaryOperator	&		580695	0					
ANR	580980	PtrMemberAccess	pdht -> order		580695	1					
ANR	580981	Identifier	pdht		580695	0					
ANR	580982	Identifier	order		580695	1					
ANR	580983	IfStatement	if ( porder -> threshold != NULL )		580695	1					
ANR	580984	Condition	porder -> threshold != NULL	1279:12:49006:49030	580695	0	True				
ANR	580985	EqualityExpression	porder -> threshold != NULL		580695	0		!=			
ANR	580986	PtrMemberAccess	porder -> threshold		580695	0					
ANR	580987	Identifier	porder		580695	0					
ANR	580988	Identifier	threshold		580695	1					
ANR	580989	Identifier	NULL		580695	1					
ANR	580990	CompoundStatement		48:39:2132:2132	580695	1					
ANR	580991	ExpressionStatement	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"	1280:12:49047:49180	580695	0	True				
ANR	580992	CallExpression	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"		580695	0					
ANR	580993	Callee	gs_free_object		580695	0					
ANR	580994	Identifier	gs_free_object		580695	0					
ANR	580995	ArgumentList	porder -> data_memory -> non_gc_memory		580695	1					
ANR	580996	Argument	porder -> data_memory -> non_gc_memory		580695	0					
ANR	580997	PtrMemberAccess	porder -> data_memory -> non_gc_memory		580695	0					
ANR	580998	PtrMemberAccess	porder -> data_memory		580695	0					
ANR	580999	Identifier	porder		580695	0					
ANR	581000	Identifier	data_memory		580695	1					
ANR	581001	Identifier	non_gc_memory		580695	1					
ANR	581002	Argument	porder -> threshold		580695	1					
ANR	581003	PtrMemberAccess	porder -> threshold		580695	0					
ANR	581004	Identifier	porder		580695	0					
ANR	581005	Identifier	threshold		580695	1					
ANR	581006	Argument	"""set_effective_transfer(threshold)"""		580695	2					
ANR	581007	PrimaryExpression	"""set_effective_transfer(threshold)"""		580695	0					
ANR	581008	ExpressionStatement	porder -> threshold = 0	1282:12:49194:49215	580695	1	True				
ANR	581009	AssignmentExpression	porder -> threshold = 0		580695	0		=			
ANR	581010	PtrMemberAccess	porder -> threshold		580695	0					
ANR	581011	Identifier	porder		580695	0					
ANR	581012	Identifier	threshold		580695	1					
ANR	581013	PrimaryExpression	0		580695	1					
ANR	581014	ForStatement	for ( i = 0 ; i < pdht -> num_comp ; i ++ )		580695	2					
ANR	581015	ForInit	i = 0 ;	1284:13:49240:49245	580695	0	True				
ANR	581016	AssignmentExpression	i = 0		580695	0		=			
ANR	581017	Identifier	i		580695	0					
ANR	581018	PrimaryExpression	0		580695	1					
ANR	581019	Condition	i < pdht -> num_comp	1284:20:49247:49264	580695	1	True				
ANR	581020	RelationalExpression	i < pdht -> num_comp		580695	0		<			
ANR	581021	Identifier	i		580695	0					
ANR	581022	PtrMemberAccess	pdht -> num_comp		580695	1					
ANR	581023	Identifier	pdht		580695	0					
ANR	581024	Identifier	num_comp		580695	1					
ANR	581025	PostIncDecOperationExpression	i ++	1284:40:49267:49269	580695	2	True				
ANR	581026	Identifier	i		580695	0					
ANR	581027	IncDec	++		580695	1					
ANR	581028	CompoundStatement		53:45:2371:2371	580695	3					
ANR	581029	ExpressionStatement	pmap = pdht -> components [ i ] . corder . transfer	1285:12:49286:49328	580695	0	True				
ANR	581030	AssignmentExpression	pmap = pdht -> components [ i ] . corder . transfer		580695	0		=			
ANR	581031	Identifier	pmap		580695	0					
ANR	581032	MemberAccess	pdht -> components [ i ] . corder . transfer		580695	1					
ANR	581033	MemberAccess	pdht -> components [ i ] . corder		580695	0					
ANR	581034	ArrayIndexing	pdht -> components [ i ]		580695	0					
ANR	581035	PtrMemberAccess	pdht -> components		580695	0					
ANR	581036	Identifier	pdht		580695	0					
ANR	581037	Identifier	components		580695	1					
ANR	581038	Identifier	i		580695	1					
ANR	581039	Identifier	corder		580695	1					
ANR	581040	Identifier	transfer		580695	1					
ANR	581041	IfStatement	if ( pmap != NULL )		580695	1					
ANR	581042	Condition	pmap != NULL	1286:16:49346:49357	580695	0	True				
ANR	581043	EqualityExpression	pmap != NULL		580695	0		!=			
ANR	581044	Identifier	pmap		580695	0					
ANR	581045	Identifier	NULL		580695	1					
ANR	581046	CompoundStatement		55:30:2459:2459	580695	1					
ANR	581047	IfStatement	if ( pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer )		580695	0					
ANR	581048	Condition	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer	1287:20:49382:49438	580695	0	True				
ANR	581049	EqualityExpression	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	581050	PtrMemberAccess	pgs -> effective_transfer [ i ] -> proc		580695	0					
ANR	581051	ArrayIndexing	pgs -> effective_transfer [ i ]		580695	0					
ANR	581052	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	581053	Identifier	pgs		580695	0					
ANR	581054	Identifier	effective_transfer		580695	1					
ANR	581055	Identifier	i		580695	1					
ANR	581056	Identifier	proc		580695	1					
ANR	581057	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	581058	UnaryOperator	&		580695	0					
ANR	581059	Identifier	gs_identity_transfer		580695	1					
ANR	581060	ExpressionStatement	non_id_count --	1288:20:49461:49475	580695	1	True				
ANR	581061	PostIncDecOperationExpression	non_id_count --		580695	0					
ANR	581062	Identifier	non_id_count		580695	0					
ANR	581063	IncDec	--		580695	1					
ANR	581064	ExpressionStatement	pgs -> effective_transfer [ i ] = pmap	1289:16:49493:49526	580695	1	True				
ANR	581065	AssignmentExpression	pgs -> effective_transfer [ i ] = pmap		580695	0		=			
ANR	581066	ArrayIndexing	pgs -> effective_transfer [ i ]		580695	0					
ANR	581067	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	581068	Identifier	pgs		580695	0					
ANR	581069	Identifier	effective_transfer		580695	1					
ANR	581070	Identifier	i		580695	1					
ANR	581071	Identifier	pmap		580695	1					
ANR	581072	IfStatement	if ( pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer )		580695	2					
ANR	581073	Condition	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer	1290:20:49548:49604	580695	0	True				
ANR	581074	EqualityExpression	pgs -> effective_transfer [ i ] -> proc != & gs_identity_transfer		580695	0		!=			
ANR	581075	PtrMemberAccess	pgs -> effective_transfer [ i ] -> proc		580695	0					
ANR	581076	ArrayIndexing	pgs -> effective_transfer [ i ]		580695	0					
ANR	581077	PtrMemberAccess	pgs -> effective_transfer		580695	0					
ANR	581078	Identifier	pgs		580695	0					
ANR	581079	Identifier	effective_transfer		580695	1					
ANR	581080	Identifier	i		580695	1					
ANR	581081	Identifier	proc		580695	1					
ANR	581082	UnaryOperationExpression	& gs_identity_transfer		580695	1					
ANR	581083	UnaryOperator	&		580695	0					
ANR	581084	Identifier	gs_identity_transfer		580695	1					
ANR	581085	ExpressionStatement	non_id_count ++	1291:19:49626:49640	580695	1	True				
ANR	581086	PostIncDecOperationExpression	non_id_count ++		580695	0					
ANR	581087	Identifier	non_id_count		580695	0					
ANR	581088	IncDec	++		580695	1					
ANR	581089	ExpressionStatement	porder = & ( pdht -> components [ i ] . corder )	1293:12:49668:49706	580695	2	True				
ANR	581090	AssignmentExpression	porder = & ( pdht -> components [ i ] . corder )		580695	0		=			
ANR	581091	Identifier	porder		580695	0					
ANR	581092	UnaryOperationExpression	& ( pdht -> components [ i ] . corder )		580695	1					
ANR	581093	UnaryOperator	&		580695	0					
ANR	581094	MemberAccess	pdht -> components [ i ] . corder		580695	1					
ANR	581095	ArrayIndexing	pdht -> components [ i ]		580695	0					
ANR	581096	PtrMemberAccess	pdht -> components		580695	0					
ANR	581097	Identifier	pdht		580695	0					
ANR	581098	Identifier	components		580695	1					
ANR	581099	Identifier	i		580695	1					
ANR	581100	Identifier	corder		580695	1					
ANR	581101	IfStatement	if ( porder -> threshold != NULL )		580695	3					
ANR	581102	Condition	porder -> threshold != NULL	1294:16:49724:49748	580695	0	True				
ANR	581103	EqualityExpression	porder -> threshold != NULL		580695	0		!=			
ANR	581104	PtrMemberAccess	porder -> threshold		580695	0					
ANR	581105	Identifier	porder		580695	0					
ANR	581106	Identifier	threshold		580695	1					
ANR	581107	Identifier	NULL		580695	1					
ANR	581108	CompoundStatement		63:43:2850:2850	580695	1					
ANR	581109	ExpressionStatement	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"	1295:16:49769:49906	580695	0	True				
ANR	581110	CallExpression	"gs_free_object ( porder -> data_memory -> non_gc_memory , porder -> threshold , ""set_effective_transfer(threshold)"" )"		580695	0					
ANR	581111	Callee	gs_free_object		580695	0					
ANR	581112	Identifier	gs_free_object		580695	0					
ANR	581113	ArgumentList	porder -> data_memory -> non_gc_memory		580695	1					
ANR	581114	Argument	porder -> data_memory -> non_gc_memory		580695	0					
ANR	581115	PtrMemberAccess	porder -> data_memory -> non_gc_memory		580695	0					
ANR	581116	PtrMemberAccess	porder -> data_memory		580695	0					
ANR	581117	Identifier	porder		580695	0					
ANR	581118	Identifier	data_memory		580695	1					
ANR	581119	Identifier	non_gc_memory		580695	1					
ANR	581120	Argument	porder -> threshold		580695	1					
ANR	581121	PtrMemberAccess	porder -> threshold		580695	0					
ANR	581122	Identifier	porder		580695	0					
ANR	581123	Identifier	threshold		580695	1					
ANR	581124	Argument	"""set_effective_transfer(threshold)"""		580695	2					
ANR	581125	PrimaryExpression	"""set_effective_transfer(threshold)"""		580695	0					
ANR	581126	ExpressionStatement	porder -> threshold = 0	1297:16:49924:49945	580695	1	True				
ANR	581127	AssignmentExpression	porder -> threshold = 0		580695	0		=			
ANR	581128	PtrMemberAccess	porder -> threshold		580695	0					
ANR	581129	Identifier	porder		580695	0					
ANR	581130	Identifier	threshold		580695	1					
ANR	581131	PrimaryExpression	0		580695	1					
ANR	581132	ExpressionStatement	pgs -> effective_transfer_non_identity_count = non_id_count	1302:4:49982:50039	580695	10	True				
ANR	581133	AssignmentExpression	pgs -> effective_transfer_non_identity_count = non_id_count		580695	0		=			
ANR	581134	PtrMemberAccess	pgs -> effective_transfer_non_identity_count		580695	0					
ANR	581135	Identifier	pgs		580695	0					
ANR	581136	Identifier	effective_transfer_non_identity_count		580695	1					
ANR	581137	Identifier	non_id_count		580695	1					
ANR	581138	ReturnType	void		580695	1					
ANR	581139	Identifier	gx_gstate_set_effective_xfer		580695	2					
ANR	581140	ParameterList	gs_gstate * pgs		580695	3					
ANR	581141	Parameter	gs_gstate * pgs	1231:29:46883:46897	580695	0	True				
ANR	581142	ParameterType	gs_gstate *		580695	0					
ANR	581143	Identifier	pgs		580695	1					
ANR	581144	CFGEntryNode	ENTRY		580695		True				
ANR	581145	CFGExitNode	EXIT		580695		True				
ANR	581146	Symbol	pgs -> set_transfer . green_component_num		580695						
ANR	581147	Symbol	* porder -> data_memory		580695						
ANR	581148	Symbol	* pgs		580695						
ANR	581149	Symbol	pgs -> effective_transfer [ component_num ] -> proc		580695						
ANR	581150	Symbol	* * porder		580695						
ANR	581151	Symbol	pgs -> set_transfer		580695						
ANR	581152	Symbol	pgs -> set_transfer . red_component_num		580695						
ANR	581153	Symbol	* pdht		580695						
ANR	581154	Symbol	pgs -> effective_transfer [ i ] -> proc		580695						
ANR	581155	Symbol	& pdht -> components [ i ] . corder		580695						
ANR	581156	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		580695						
ANR	581157	Symbol	* pdht -> components		580695						
ANR	581158	Symbol	non_id_count		580695						
ANR	581159	Symbol	pgs -> set_transfer . blue_component_num		580695						
ANR	581160	Symbol	* * i		580695						
ANR	581161	Symbol	NULL		580695						
ANR	581162	Symbol	porder -> data_memory -> non_gc_memory		580695						
ANR	581163	Symbol	* pgs -> set_transfer		580695						
ANR	581164	Symbol	porder		580695						
ANR	581165	Symbol	* * pgs		580695						
ANR	581166	Symbol	* pgs -> effective_transfer		580695						
ANR	581167	Symbol	pdht		580695						
ANR	581168	Symbol	pdht -> num_comp		580695						
ANR	581169	Symbol	pgs -> effective_transfer_non_identity_count		580695						
ANR	581170	Symbol	* * pdht		580695						
ANR	581171	Symbol	pgs -> set_transfer . gray -> proc		580695						
ANR	581172	Symbol	* component_num		580695						
ANR	581173	Symbol	* porder		580695						
ANR	581174	Symbol	porder -> data_memory		580695						
ANR	581175	Symbol	pgs -> effective_transfer		580695						
ANR	581176	Symbol	& pdht -> order		580695						
ANR	581177	Symbol	pgs -> set_transfer . red		580695						
ANR	581178	Symbol	* * pgs -> effective_transfer		580695						
ANR	581179	Symbol	pdht -> components		580695						
ANR	581180	Symbol	pgs -> set_transfer . blue		580695						
ANR	581181	Symbol	* * component_num		580695						
ANR	581182	Symbol	pmap		580695						
ANR	581183	Symbol	* * * pgs		580695						
ANR	581184	Symbol	pgs		580695						
ANR	581185	Symbol	* pgs -> set_transfer . gray		580695						
ANR	581186	Symbol	& gs_identity_transfer		580695						
ANR	581187	Symbol	i		580695						
ANR	581188	Symbol	pgs -> set_transfer . gray		580695						
ANR	581189	Symbol	porder -> threshold		580695						
ANR	581190	Symbol	* i		580695						
ANR	581191	Symbol	pdht -> components [ i ] . corder		580695						
ANR	581192	Symbol	pdht -> components [ i ] . corder . transfer		580695						
ANR	581193	Symbol	pgs -> dev_ht		580695						
ANR	581194	Symbol	pgs -> set_transfer . green		580695						
ANR	581195	Symbol	component_num		580695						
ANR	581196	Function	gx_set_effective_transfer	1305:0:50044:50133							
ANR	581197	FunctionDef	gx_set_effective_transfer (gs_gstate * pgs)		581196	0					
ANR	581198	CompoundStatement		1307:0:50092:50133	581196	0					
ANR	581199	ExpressionStatement	gx_gstate_set_effective_xfer ( pgs )	1308:4:50098:50131	581196	0	True				
ANR	581200	CallExpression	gx_gstate_set_effective_xfer ( pgs )		581196	0					
ANR	581201	Callee	gx_gstate_set_effective_xfer		581196	0					
ANR	581202	Identifier	gx_gstate_set_effective_xfer		581196	0					
ANR	581203	ArgumentList	pgs		581196	1					
ANR	581204	Argument	pgs		581196	0					
ANR	581205	Identifier	pgs		581196	0					
ANR	581206	ReturnType	void		581196	1					
ANR	581207	Identifier	gx_set_effective_transfer		581196	2					
ANR	581208	ParameterList	gs_gstate * pgs		581196	3					
ANR	581209	Parameter	gs_gstate * pgs	1306:26:50075:50089	581196	0	True				
ANR	581210	ParameterType	gs_gstate *		581196	0					
ANR	581211	Identifier	pgs		581196	1					
ANR	581212	CFGEntryNode	ENTRY		581196		True				
ANR	581213	CFGExitNode	EXIT		581196		True				
ANR	581214	Symbol	pgs		581196						
ANR	581215	Function	gx_transfer_is_monotonic	1313:0:50257:51053							
ANR	581216	FunctionDef	"gx_transfer_is_monotonic (const gs_gstate * pgs , int plane_index)"		581215	0					
ANR	581217	CompoundStatement		1315:0:50326:51053	581215	0					
ANR	581218	IfStatement	if ( pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer )		581215	0					
ANR	581219	Condition	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer	1316:8:50336:50401	581215	0	True				
ANR	581220	EqualityExpression	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer		581215	0		!=			
ANR	581221	PtrMemberAccess	pgs -> effective_transfer [ plane_index ] -> proc		581215	0					
ANR	581222	ArrayIndexing	pgs -> effective_transfer [ plane_index ]		581215	0					
ANR	581223	PtrMemberAccess	pgs -> effective_transfer		581215	0					
ANR	581224	Identifier	pgs		581215	0					
ANR	581225	Identifier	effective_transfer		581215	1					
ANR	581226	Identifier	plane_index		581215	1					
ANR	581227	Identifier	proc		581215	1					
ANR	581228	Identifier	gs_identity_transfer		581215	1					
ANR	581229	CompoundStatement		5:8:141:158	581215	1					
ANR	581230	IdentifierDeclStatement	bool threshold_inverted ;	1317:8:50414:50437	581215	0	True				
ANR	581231	IdentifierDecl	threshold_inverted		581215	0					
ANR	581232	IdentifierDeclType	bool		581215	0					
ANR	581233	Identifier	threshold_inverted		581215	1					
ANR	581234	IdentifierDeclStatement	int t_level ;	1318:8:50447:50458	581215	1	True				
ANR	581235	IdentifierDecl	t_level		581215	0					
ANR	581236	IdentifierDeclType	int		581215	0					
ANR	581237	Identifier	t_level		581215	1					
ANR	581238	IdentifierDeclStatement	"frac mapped , prev ;"	1319:8:50468:50485	581215	2	True				
ANR	581239	IdentifierDecl	mapped		581215	0					
ANR	581240	IdentifierDeclType	frac		581215	0					
ANR	581241	Identifier	mapped		581215	1					
ANR	581242	IdentifierDecl	prev		581215	1					
ANR	581243	IdentifierDeclType	frac		581215	0					
ANR	581244	Identifier	prev		581215	1					
ANR	581245	ExpressionStatement	"prev = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"	1321:8:50496:50566	581215	3	True				
ANR	581246	AssignmentExpression	"prev = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"		581215	0		=			
ANR	581247	Identifier	prev		581215	0					
ANR	581248	CallExpression	"gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"		581215	1					
ANR	581249	Callee	gx_map_color_frac		581215	0					
ANR	581250	Identifier	gx_map_color_frac		581215	0					
ANR	581251	ArgumentList	pgs		581215	1					
ANR	581252	Argument	pgs		581215	0					
ANR	581253	Identifier	pgs		581215	0					
ANR	581254	Argument	frac_0		581215	1					
ANR	581255	Identifier	frac_0		581215	0					
ANR	581256	Argument	effective_transfer [ plane_index ]		581215	2					
ANR	581257	ArrayIndexing	effective_transfer [ plane_index ]		581215	0					
ANR	581258	Identifier	effective_transfer		581215	0					
ANR	581259	Identifier	plane_index		581215	1					
ANR	581260	ExpressionStatement	"threshold_inverted = prev > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"	1322:8:50576:50696	581215	4	True				
ANR	581261	AssignmentExpression	"threshold_inverted = prev > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		581215	0		=			
ANR	581262	Identifier	threshold_inverted		581215	0					
ANR	581263	RelationalExpression	"prev > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		581215	1		>			
ANR	581264	Identifier	prev		581215	0					
ANR	581265	CallExpression	"gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		581215	1					
ANR	581266	Callee	gx_map_color_frac		581215	0					
ANR	581267	Identifier	gx_map_color_frac		581215	0					
ANR	581268	ArgumentList	pgs		581215	1					
ANR	581269	Argument	pgs		581215	0					
ANR	581270	Identifier	pgs		581215	0					
ANR	581271	Argument	frac_1		581215	1					
ANR	581272	Identifier	frac_1		581215	0					
ANR	581273	Argument	effective_transfer [ plane_index ]		581215	2					
ANR	581274	ArrayIndexing	effective_transfer [ plane_index ]		581215	0					
ANR	581275	Identifier	effective_transfer		581215	0					
ANR	581276	Identifier	plane_index		581215	1					
ANR	581277	ForStatement	for ( t_level = 1 ; t_level < 255 ; t_level ++ )		581215	5					
ANR	581278	ForInit	t_level = 1 ;	1324:13:50711:50722	581215	0	True				
ANR	581279	AssignmentExpression	t_level = 1		581215	0		=			
ANR	581280	Identifier	t_level		581215	0					
ANR	581281	PrimaryExpression	1		581215	1					
ANR	581282	Condition	t_level < 255	1324:26:50724:50736	581215	1	True				
ANR	581283	RelationalExpression	t_level < 255		581215	0		<			
ANR	581284	Identifier	t_level		581215	0					
ANR	581285	PrimaryExpression	255		581215	1					
ANR	581286	PostIncDecOperationExpression	t_level ++	1324:41:50739:50747	581215	2	True				
ANR	581287	Identifier	t_level		581215	0					
ANR	581288	IncDec	++		581215	1					
ANR	581289	CompoundStatement		10:52:423:423	581215	3					
ANR	581290	ExpressionStatement	"mapped = gx_map_color_frac ( pgs , byte2frac ( t_level ) , effective_transfer [ plane_index ] )"	1325:12:50764:50848	581215	0	True				
ANR	581291	AssignmentExpression	"mapped = gx_map_color_frac ( pgs , byte2frac ( t_level ) , effective_transfer [ plane_index ] )"		581215	0		=			
ANR	581292	Identifier	mapped		581215	0					
ANR	581293	CallExpression	"gx_map_color_frac ( pgs , byte2frac ( t_level ) , effective_transfer [ plane_index ] )"		581215	1					
ANR	581294	Callee	gx_map_color_frac		581215	0					
ANR	581295	Identifier	gx_map_color_frac		581215	0					
ANR	581296	ArgumentList	pgs		581215	1					
ANR	581297	Argument	pgs		581215	0					
ANR	581298	Identifier	pgs		581215	0					
ANR	581299	Argument	byte2frac ( t_level )		581215	1					
ANR	581300	CallExpression	byte2frac ( t_level )		581215	0					
ANR	581301	Callee	byte2frac		581215	0					
ANR	581302	Identifier	byte2frac		581215	0					
ANR	581303	ArgumentList	t_level		581215	1					
ANR	581304	Argument	t_level		581215	0					
ANR	581305	Identifier	t_level		581215	0					
ANR	581306	Argument	effective_transfer [ plane_index ]		581215	2					
ANR	581307	ArrayIndexing	effective_transfer [ plane_index ]		581215	0					
ANR	581308	Identifier	effective_transfer		581215	0					
ANR	581309	Identifier	plane_index		581215	1					
ANR	581310	IfStatement	if ( ( threshold_inverted && mapped > prev ) || ( ! threshold_inverted && mapped < prev ) )		581215	1					
ANR	581311	Condition	( threshold_inverted && mapped > prev ) || ( ! threshold_inverted && mapped < prev )	1326:16:50866:50960	581215	0	True				
ANR	581312	OrExpression	( threshold_inverted && mapped > prev ) || ( ! threshold_inverted && mapped < prev )		581215	0		||			
ANR	581313	AndExpression	threshold_inverted && mapped > prev		581215	0		&&			
ANR	581314	Identifier	threshold_inverted		581215	0					
ANR	581315	RelationalExpression	mapped > prev		581215	1		>			
ANR	581316	Identifier	mapped		581215	0					
ANR	581317	Identifier	prev		581215	1					
ANR	581318	AndExpression	! threshold_inverted && mapped < prev		581215	1		&&			
ANR	581319	UnaryOperationExpression	! threshold_inverted		581215	0					
ANR	581320	UnaryOperator	!		581215	0					
ANR	581321	Identifier	threshold_inverted		581215	1					
ANR	581322	RelationalExpression	mapped < prev		581215	1		<			
ANR	581323	Identifier	mapped		581215	0					
ANR	581324	Identifier	prev		581215	1					
ANR	581325	ReturnStatement	return false ;	1328:16:50979:50991	581215	1	True				
ANR	581326	Identifier	false		581215	0					
ANR	581327	ExpressionStatement	prev = mapped	1329:12:51005:51018	581215	2	True				
ANR	581328	AssignmentExpression	prev = mapped		581215	0		=			
ANR	581329	Identifier	prev		581215	0					
ANR	581330	Identifier	mapped		581215	1					
ANR	581331	ReturnStatement	return true ;	1332:4:51040:51051	581215	1	True				
ANR	581332	Identifier	true		581215	0					
ANR	581333	ReturnType	bool		581215	1					
ANR	581334	Identifier	gx_transfer_is_monotonic		581215	2					
ANR	581335	ParameterList	"const gs_gstate * pgs , int plane_index"		581215	3					
ANR	581336	Parameter	const gs_gstate * pgs	1314:25:50287:50306	581215	0	True				
ANR	581337	ParameterType	const gs_gstate *		581215	0					
ANR	581338	Identifier	pgs		581215	1					
ANR	581339	Parameter	int plane_index	1314:47:50309:50323	581215	1	True				
ANR	581340	ParameterType	int		581215	0					
ANR	581341	Identifier	plane_index		581215	1					
ANR	581342	CFGEntryNode	ENTRY		581215		True				
ANR	581343	CFGExitNode	EXIT		581215		True				
ANR	581344	Symbol	* plane_index		581215						
ANR	581345	Symbol	frac_1		581215						
ANR	581346	Symbol	byte2frac		581215						
ANR	581347	Symbol	* * pgs -> effective_transfer		581215						
ANR	581348	Symbol	* pgs		581215						
ANR	581349	Symbol	gs_identity_transfer		581215						
ANR	581350	Symbol	prev		581215						
ANR	581351	Symbol	false		581215						
ANR	581352	Symbol	plane_index		581215						
ANR	581353	Symbol	t_level		581215						
ANR	581354	Symbol	effective_transfer		581215						
ANR	581355	Symbol	* pgs -> effective_transfer		581215						
ANR	581356	Symbol	* * pgs		581215						
ANR	581357	Symbol	* * plane_index		581215						
ANR	581358	Symbol	* effective_transfer		581215						
ANR	581359	Symbol	gx_map_color_frac		581215						
ANR	581360	Symbol	threshold_inverted		581215						
ANR	581361	Symbol	pgs -> effective_transfer [ plane_index ] -> proc		581215						
ANR	581362	Symbol	mapped		581215						
ANR	581363	Symbol	true		581215						
ANR	581364	Symbol	* * * pgs		581215						
ANR	581365	Symbol	pgs		581215						
ANR	581366	Symbol	frac_0		581215						
ANR	581367	Symbol	pgs -> effective_transfer		581215						
ANR	581368	Function	gx_ht_construct_threshold	1340:0:51359:56453							
ANR	581369	FunctionDef	"gx_ht_construct_threshold (gx_ht_order * d_order , gx_device * dev , const gs_gstate * pgs , int plane_index)"		581368	0					
ANR	581370	CompoundStatement		1343:0:51495:56453	581368	0					
ANR	581371	IdentifierDeclStatement	"int i , j ;"	1344:4:51501:51509	581368	0	True				
ANR	581372	IdentifierDecl	i		581368	0					
ANR	581373	IdentifierDeclType	int		581368	0					
ANR	581374	Identifier	i		581368	1					
ANR	581375	IdentifierDecl	j		581368	1					
ANR	581376	IdentifierDeclType	int		581368	0					
ANR	581377	Identifier	j		581368	1					
ANR	581378	IdentifierDeclStatement	unsigned char * thresh ;	1345:4:51515:51536	581368	1	True				
ANR	581379	IdentifierDecl	* thresh		581368	0					
ANR	581380	IdentifierDeclType	unsigned char *		581368	0					
ANR	581381	Identifier	thresh		581368	1					
ANR	581382	IdentifierDeclStatement	gs_memory_t * memory = d_order ? d_order -> data_memory -> non_gc_memory : NULL ;	1346:4:51542:51616	581368	2	True				
ANR	581383	IdentifierDecl	* memory = d_order ? d_order -> data_memory -> non_gc_memory : NULL		581368	0					
ANR	581384	IdentifierDeclType	gs_memory_t *		581368	0					
ANR	581385	Identifier	memory		581368	1					
ANR	581386	AssignmentExpression	* memory = d_order ? d_order -> data_memory -> non_gc_memory : NULL		581368	2		=			
ANR	581387	Identifier	memory		581368	0					
ANR	581388	ConditionalExpression	d_order ? d_order -> data_memory -> non_gc_memory : NULL		581368	1					
ANR	581389	Condition	d_order		581368	0					
ANR	581390	Identifier	d_order		581368	0					
ANR	581391	PtrMemberAccess	d_order -> data_memory -> non_gc_memory		581368	1					
ANR	581392	PtrMemberAccess	d_order -> data_memory		581368	0					
ANR	581393	Identifier	d_order		581368	0					
ANR	581394	Identifier	data_memory		581368	1					
ANR	581395	Identifier	non_gc_memory		581368	1					
ANR	581396	Identifier	NULL		581368	2					
ANR	581397	IdentifierDeclStatement	uint max_value ;	1347:4:51622:51636	581368	3	True				
ANR	581398	IdentifierDecl	max_value		581368	0					
ANR	581399	IdentifierDeclType	uint		581368	0					
ANR	581400	Identifier	max_value		581368	1					
ANR	581401	IdentifierDeclStatement	"unsigned long hsize , nshades ;"	1348:4:51642:51670	581368	4	True				
ANR	581402	IdentifierDecl	hsize		581368	0					
ANR	581403	IdentifierDeclType	unsigned long		581368	0					
ANR	581404	Identifier	hsize		581368	1					
ANR	581405	IdentifierDecl	nshades		581368	1					
ANR	581406	IdentifierDeclType	unsigned long		581368	0					
ANR	581407	Identifier	nshades		581368	1					
ANR	581408	IdentifierDeclStatement	int t_level ;	1349:4:51676:51687	581368	5	True				
ANR	581409	IdentifierDecl	t_level		581368	0					
ANR	581410	IdentifierDeclType	int		581368	0					
ANR	581411	Identifier	t_level		581368	1					
ANR	581412	IdentifierDeclStatement	"int row , col ;"	1350:4:51693:51705	581368	6	True				
ANR	581413	IdentifierDecl	row		581368	0					
ANR	581414	IdentifierDeclType	int		581368	0					
ANR	581415	Identifier	row		581368	1					
ANR	581416	IdentifierDecl	col		581368	1					
ANR	581417	IdentifierDeclType	int		581368	0					
ANR	581418	Identifier	col		581368	1					
ANR	581419	IdentifierDeclStatement	int code ;	1351:4:51711:51719	581368	7	True				
ANR	581420	IdentifierDecl	code		581368	0					
ANR	581421	IdentifierDeclType	int		581368	0					
ANR	581422	Identifier	code		581368	1					
ANR	581423	IdentifierDeclStatement	"int num_repeat , shift , num_levels = d_order ? d_order -> num_levels : 0 ;"	1352:4:51725:51794	581368	8	True				
ANR	581424	IdentifierDecl	num_repeat		581368	0					
ANR	581425	IdentifierDeclType	int		581368	0					
ANR	581426	Identifier	num_repeat		581368	1					
ANR	581427	IdentifierDecl	shift		581368	1					
ANR	581428	IdentifierDeclType	int		581368	0					
ANR	581429	Identifier	shift		581368	1					
ANR	581430	IdentifierDecl	num_levels = d_order ? d_order -> num_levels : 0		581368	2					
ANR	581431	IdentifierDeclType	int		581368	0					
ANR	581432	Identifier	num_levels		581368	1					
ANR	581433	AssignmentExpression	num_levels = d_order ? d_order -> num_levels : 0		581368	2		=			
ANR	581434	Identifier	num_levels		581368	0					
ANR	581435	ConditionalExpression	d_order ? d_order -> num_levels : 0		581368	1					
ANR	581436	Condition	d_order		581368	0					
ANR	581437	Identifier	d_order		581368	0					
ANR	581438	PtrMemberAccess	d_order -> num_levels		581368	1					
ANR	581439	Identifier	d_order		581368	0					
ANR	581440	Identifier	num_levels		581368	1					
ANR	581441	PrimaryExpression	0		581368	2					
ANR	581442	IdentifierDeclStatement	"int row_kk , col_kk , kk ;"	1353:4:51800:51822	581368	9	True				
ANR	581443	IdentifierDecl	row_kk		581368	0					
ANR	581444	IdentifierDeclType	int		581368	0					
ANR	581445	Identifier	row_kk		581368	1					
ANR	581446	IdentifierDecl	col_kk		581368	1					
ANR	581447	IdentifierDeclType	int		581368	0					
ANR	581448	Identifier	col_kk		581368	1					
ANR	581449	IdentifierDecl	kk		581368	2					
ANR	581450	IdentifierDeclType	int		581368	0					
ANR	581451	Identifier	kk		581368	1					
ANR	581452	IdentifierDeclStatement	frac t_level_frac_color ;	1354:4:51828:51851	581368	10	True				
ANR	581453	IdentifierDecl	t_level_frac_color		581368	0					
ANR	581454	IdentifierDeclType	frac		581368	0					
ANR	581455	Identifier	t_level_frac_color		581368	1					
ANR	581456	IdentifierDeclStatement	"int shade , base_shade = 0 ;"	1355:4:51857:51882	581368	11	True				
ANR	581457	IdentifierDecl	shade		581368	0					
ANR	581458	IdentifierDeclType	int		581368	0					
ANR	581459	Identifier	shade		581368	1					
ANR	581460	IdentifierDecl	base_shade = 0		581368	1					
ANR	581461	IdentifierDeclType	int		581368	0					
ANR	581462	Identifier	base_shade		581368	1					
ANR	581463	AssignmentExpression	base_shade = 0		581368	2		=			
ANR	581464	Identifier	base_shade		581368	0					
ANR	581465	PrimaryExpression	0		581368	1					
ANR	581466	IdentifierDeclStatement	"bool have_transfer = false , threshold_inverted = false ;"	1356:4:51888:51942	581368	12	True				
ANR	581467	IdentifierDecl	have_transfer = false		581368	0					
ANR	581468	IdentifierDeclType	bool		581368	0					
ANR	581469	Identifier	have_transfer		581368	1					
ANR	581470	AssignmentExpression	have_transfer = false		581368	2		=			
ANR	581471	Identifier	false		581368	0					
ANR	581472	Identifier	false		581368	1					
ANR	581473	IdentifierDecl	threshold_inverted = false		581368	1					
ANR	581474	IdentifierDeclType	bool		581368	0					
ANR	581475	Identifier	threshold_inverted		581368	1					
ANR	581476	AssignmentExpression	threshold_inverted = false		581368	2		=			
ANR	581477	Identifier	false		581368	0					
ANR	581478	Identifier	false		581368	1					
ANR	581479	IfStatement	if ( d_order == NULL )		581368	13					
ANR	581480	Condition	d_order == NULL	1358:8:51953:51967	581368	0	True				
ANR	581481	EqualityExpression	d_order == NULL		581368	0		==			
ANR	581482	Identifier	d_order		581368	0					
ANR	581483	Identifier	NULL		581368	1					
ANR	581484	ReturnStatement	return - 1 ;	1358:25:51970:51979	581368	1	True				
ANR	581485	UnaryOperationExpression	- 1		581368	0					
ANR	581486	UnaryOperator	-		581368	0					
ANR	581487	PrimaryExpression	1		581368	1					
ANR	581488	ExpressionStatement	num_repeat = d_order -> full_height / d_order -> height	1362:4:52215:52266	581368	14	True				
ANR	581489	AssignmentExpression	num_repeat = d_order -> full_height / d_order -> height		581368	0		=			
ANR	581490	Identifier	num_repeat		581368	0					
ANR	581491	MultiplicativeExpression	d_order -> full_height / d_order -> height		581368	1		/			
ANR	581492	PtrMemberAccess	d_order -> full_height		581368	0					
ANR	581493	Identifier	d_order		581368	0					
ANR	581494	Identifier	full_height		581368	1					
ANR	581495	PtrMemberAccess	d_order -> height		581368	1					
ANR	581496	Identifier	d_order		581368	0					
ANR	581497	Identifier	height		581368	1					
ANR	581498	ExpressionStatement	shift = d_order -> shift	1363:4:52272:52294	581368	15	True				
ANR	581499	AssignmentExpression	shift = d_order -> shift		581368	0		=			
ANR	581500	Identifier	shift		581368	0					
ANR	581501	PtrMemberAccess	d_order -> shift		581368	1					
ANR	581502	Identifier	d_order		581368	0					
ANR	581503	Identifier	shift		581368	1					
ANR	581504	IfStatement	if ( d_order -> threshold != NULL )		581368	16					
ANR	581505	Condition	d_order -> threshold != NULL	1365:8:52305:52330	581368	0	True				
ANR	581506	EqualityExpression	d_order -> threshold != NULL		581368	0		!=			
ANR	581507	PtrMemberAccess	d_order -> threshold		581368	0					
ANR	581508	Identifier	d_order		581368	0					
ANR	581509	Identifier	threshold		581368	1					
ANR	581510	Identifier	NULL		581368	1					
ANR	581511	ReturnStatement	return 0 ;	1365:36:52333:52341	581368	1	True				
ANR	581512	PrimaryExpression	0		581368	0					
ANR	581513	ExpressionStatement	"thresh = ( byte * ) gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"	1366:4:52347:52482	581368	17	True				
ANR	581514	AssignmentExpression	"thresh = ( byte * ) gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"		581368	0		=			
ANR	581515	Identifier	thresh		581368	0					
ANR	581516	CastExpression	"( byte * ) gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"		581368	1					
ANR	581517	CastTarget	byte *		581368	0					
ANR	581518	CallExpression	"gs_malloc ( memory , d_order -> width * d_order -> full_height , 1 , ""gx_ht_construct_threshold"" )"		581368	1					
ANR	581519	Callee	gs_malloc		581368	0					
ANR	581520	Identifier	gs_malloc		581368	0					
ANR	581521	ArgumentList	memory		581368	1					
ANR	581522	Argument	memory		581368	0					
ANR	581523	Identifier	memory		581368	0					
ANR	581524	Argument	d_order -> width * d_order -> full_height		581368	1					
ANR	581525	MultiplicativeExpression	d_order -> width * d_order -> full_height		581368	0		*			
ANR	581526	PtrMemberAccess	d_order -> width		581368	0					
ANR	581527	Identifier	d_order		581368	0					
ANR	581528	Identifier	width		581368	1					
ANR	581529	PtrMemberAccess	d_order -> full_height		581368	1					
ANR	581530	Identifier	d_order		581368	0					
ANR	581531	Identifier	full_height		581368	1					
ANR	581532	Argument	1		581368	2					
ANR	581533	PrimaryExpression	1		581368	0					
ANR	581534	Argument	"""gx_ht_construct_threshold"""		581368	3					
ANR	581535	PrimaryExpression	"""gx_ht_construct_threshold"""		581368	0					
ANR	581536	IfStatement	if ( thresh == NULL )		581368	18					
ANR	581537	Condition	thresh == NULL	1368:8:52492:52505	581368	0	True				
ANR	581538	EqualityExpression	thresh == NULL		581368	0		==			
ANR	581539	Identifier	thresh		581368	0					
ANR	581540	Identifier	NULL		581368	1					
ANR	581541	CompoundStatement		26:24:1012:1012	581368	1					
ANR	581542	ReturnStatement	return - 1 ;	1369:8:52518:52528	581368	0	True				
ANR	581543	UnaryOperationExpression	- 1		581368	0					
ANR	581544	UnaryOperator	-		581368	0					
ANR	581545	PrimaryExpression	1		581368	1					
ANR	581546	IfStatement	if ( pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer )		581368	19					
ANR	581547	Condition	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer	1372:8:52657:52722	581368	0	True				
ANR	581548	EqualityExpression	pgs -> effective_transfer [ plane_index ] -> proc != gs_identity_transfer		581368	0		!=			
ANR	581549	PtrMemberAccess	pgs -> effective_transfer [ plane_index ] -> proc		581368	0					
ANR	581550	ArrayIndexing	pgs -> effective_transfer [ plane_index ]		581368	0					
ANR	581551	PtrMemberAccess	pgs -> effective_transfer		581368	0					
ANR	581552	Identifier	pgs		581368	0					
ANR	581553	Identifier	effective_transfer		581368	1					
ANR	581554	Identifier	plane_index		581368	1					
ANR	581555	Identifier	proc		581368	1					
ANR	581556	Identifier	gs_identity_transfer		581368	1					
ANR	581557	CompoundStatement		30:76:1229:1229	581368	1					
ANR	581558	ExpressionStatement	have_transfer = true	1373:8:52735:52755	581368	0	True				
ANR	581559	AssignmentExpression	have_transfer = true		581368	0		=			
ANR	581560	Identifier	have_transfer		581368	0					
ANR	581561	Identifier	true		581368	1					
ANR	581562	ExpressionStatement	"threshold_inverted = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] ) > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"	1374:8:52765:52947	581368	1	True				
ANR	581563	AssignmentExpression	"threshold_inverted = gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] ) > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		581368	0		=			
ANR	581564	Identifier	threshold_inverted		581368	0					
ANR	581565	RelationalExpression	"gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] ) > gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		581368	1		>			
ANR	581566	CallExpression	"gx_map_color_frac ( pgs , frac_0 , effective_transfer [ plane_index ] )"		581368	0					
ANR	581567	Callee	gx_map_color_frac		581368	0					
ANR	581568	Identifier	gx_map_color_frac		581368	0					
ANR	581569	ArgumentList	pgs		581368	1					
ANR	581570	Argument	pgs		581368	0					
ANR	581571	Identifier	pgs		581368	0					
ANR	581572	Argument	frac_0		581368	1					
ANR	581573	Identifier	frac_0		581368	0					
ANR	581574	Argument	effective_transfer [ plane_index ]		581368	2					
ANR	581575	ArrayIndexing	effective_transfer [ plane_index ]		581368	0					
ANR	581576	Identifier	effective_transfer		581368	0					
ANR	581577	Identifier	plane_index		581368	1					
ANR	581578	CallExpression	"gx_map_color_frac ( pgs , frac_1 , effective_transfer [ plane_index ] )"		581368	1					
ANR	581579	Callee	gx_map_color_frac		581368	0					
ANR	581580	Identifier	gx_map_color_frac		581368	0					
ANR	581581	ArgumentList	pgs		581368	1					
ANR	581582	Argument	pgs		581368	0					
ANR	581583	Identifier	pgs		581368	0					
ANR	581584	Argument	frac_1		581368	1					
ANR	581585	Identifier	frac_1		581368	0					
ANR	581586	Argument	effective_transfer [ plane_index ]		581368	2					
ANR	581587	ArrayIndexing	effective_transfer [ plane_index ]		581368	0					
ANR	581588	Identifier	effective_transfer		581368	0					
ANR	581589	Identifier	plane_index		581368	1					
ANR	581590	ExpressionStatement	max_value = ( dev -> color_info . gray_index == plane_index ) ? dev -> color_info . dither_grays - 1 : dev -> color_info . dither_colors - 1	1383:4:53346:53490	581368	20	True				
ANR	581591	AssignmentExpression	max_value = ( dev -> color_info . gray_index == plane_index ) ? dev -> color_info . dither_grays - 1 : dev -> color_info . dither_colors - 1		581368	0		=			
ANR	581592	Identifier	max_value		581368	0					
ANR	581593	ConditionalExpression	( dev -> color_info . gray_index == plane_index ) ? dev -> color_info . dither_grays - 1 : dev -> color_info . dither_colors - 1		581368	1					
ANR	581594	Condition	dev -> color_info . gray_index == plane_index		581368	0					
ANR	581595	EqualityExpression	dev -> color_info . gray_index == plane_index		581368	0		==			
ANR	581596	MemberAccess	dev -> color_info . gray_index		581368	0					
ANR	581597	PtrMemberAccess	dev -> color_info		581368	0					
ANR	581598	Identifier	dev		581368	0					
ANR	581599	Identifier	color_info		581368	1					
ANR	581600	Identifier	gray_index		581368	1					
ANR	581601	Identifier	plane_index		581368	1					
ANR	581602	AdditiveExpression	dev -> color_info . dither_grays - 1		581368	1		-			
ANR	581603	MemberAccess	dev -> color_info . dither_grays		581368	0					
ANR	581604	PtrMemberAccess	dev -> color_info		581368	0					
ANR	581605	Identifier	dev		581368	0					
ANR	581606	Identifier	color_info		581368	1					
ANR	581607	Identifier	dither_grays		581368	1					
ANR	581608	PrimaryExpression	1		581368	1					
ANR	581609	AdditiveExpression	dev -> color_info . dither_colors - 1		581368	2		-			
ANR	581610	MemberAccess	dev -> color_info . dither_colors		581368	0					
ANR	581611	PtrMemberAccess	dev -> color_info		581368	0					
ANR	581612	Identifier	dev		581368	0					
ANR	581613	Identifier	color_info		581368	1					
ANR	581614	Identifier	dither_colors		581368	1					
ANR	581615	PrimaryExpression	1		581368	1					
ANR	581616	ExpressionStatement	hsize = num_levels	1386:4:53496:53514	581368	21	True				
ANR	581617	AssignmentExpression	hsize = num_levels		581368	0		=			
ANR	581618	Identifier	hsize		581368	0					
ANR	581619	Identifier	num_levels		581368	1					
ANR	581620	ExpressionStatement	nshades = hsize * max_value + 1	1387:4:53520:53551	581368	22	True				
ANR	581621	AssignmentExpression	nshades = hsize * max_value + 1		581368	0		=			
ANR	581622	Identifier	nshades		581368	0					
ANR	581623	AdditiveExpression	hsize * max_value + 1		581368	1		+			
ANR	581624	MultiplicativeExpression	hsize * max_value		581368	0		*			
ANR	581625	Identifier	hsize		581368	0					
ANR	581626	Identifier	max_value		581368	1					
ANR	581627	PrimaryExpression	1		581368	1					
ANR	581628	ExpressionStatement	t_level = 0	1391:4:53717:53728	581368	23	True				
ANR	581629	AssignmentExpression	t_level = 0		581368	0		=			
ANR	581630	Identifier	t_level		581368	0					
ANR	581631	PrimaryExpression	0		581368	1					
ANR	581632	DoStatement	do		581368	24					
ANR	581633	CompoundStatement		50:7:2241:2241	581368	0					
ANR	581634	ExpressionStatement	t_level ++	1393:8:53747:53756	581368	0	True				
ANR	581635	PostIncDecOperationExpression	t_level ++		581368	0					
ANR	581636	Identifier	t_level		581368	0					
ANR	581637	IncDec	++		581368	1					
ANR	581638	ExpressionStatement	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )	1394:8:53766:53842	581368	1	True				
ANR	581639	AssignmentExpression	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )		581368	0		=			
ANR	581640	Identifier	t_level_frac_color		581368	0					
ANR	581641	CallExpression	byte2frac ( threshold_inverted ? 255 - t_level : t_level )		581368	1					
ANR	581642	Callee	byte2frac		581368	0					
ANR	581643	Identifier	byte2frac		581368	0					
ANR	581644	ArgumentList	threshold_inverted ? 255 - t_level : t_level		581368	1					
ANR	581645	Argument	threshold_inverted ? 255 - t_level : t_level		581368	0					
ANR	581646	ConditionalExpression	threshold_inverted ? 255 - t_level : t_level		581368	0					
ANR	581647	Condition	threshold_inverted		581368	0					
ANR	581648	Identifier	threshold_inverted		581368	0					
ANR	581649	AdditiveExpression	255 - t_level		581368	1		-			
ANR	581650	PrimaryExpression	255		581368	0					
ANR	581651	Identifier	t_level		581368	1					
ANR	581652	Identifier	t_level		581368	2					
ANR	581653	IfStatement	if ( have_transfer )		581368	2					
ANR	581654	Condition	have_transfer	1395:12:53856:53868	581368	0	True				
ANR	581655	Identifier	have_transfer		581368	0					
ANR	581656	ExpressionStatement	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"	1396:12:53883:53979	581368	1	True				
ANR	581657	AssignmentExpression	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		581368	0		=			
ANR	581658	Identifier	t_level_frac_color		581368	0					
ANR	581659	CallExpression	"gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		581368	1					
ANR	581660	Callee	gx_map_color_frac		581368	0					
ANR	581661	Identifier	gx_map_color_frac		581368	0					
ANR	581662	ArgumentList	pgs		581368	1					
ANR	581663	Argument	pgs		581368	0					
ANR	581664	Identifier	pgs		581368	0					
ANR	581665	Argument	t_level_frac_color		581368	1					
ANR	581666	Identifier	t_level_frac_color		581368	0					
ANR	581667	Argument	effective_transfer [ plane_index ]		581368	2					
ANR	581668	ArrayIndexing	effective_transfer [ plane_index ]		581368	0					
ANR	581669	Identifier	effective_transfer		581368	0					
ANR	581670	Identifier	plane_index		581368	1					
ANR	581671	ExpressionStatement	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )	1397:8:53989:54045	581368	3	True				
ANR	581672	AssignmentExpression	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )		581368	0		=			
ANR	581673	Identifier	shade		581368	0					
ANR	581674	MultiplicativeExpression	t_level_frac_color * nshades / ( frac_1_long + 1 )		581368	1		*			
ANR	581675	Identifier	t_level_frac_color		581368	0					
ANR	581676	MultiplicativeExpression	nshades / ( frac_1_long + 1 )		581368	1		/			
ANR	581677	Identifier	nshades		581368	0					
ANR	581678	AdditiveExpression	frac_1_long + 1		581368	1		+			
ANR	581679	Identifier	frac_1_long		581368	0					
ANR	581680	PrimaryExpression	1		581368	1					
ANR	581681	Condition	shade < num_levels && t_level < 255	1398:13:54060:54094	581368	1	True				
ANR	581682	AndExpression	shade < num_levels && t_level < 255		581368	0		&&			
ANR	581683	RelationalExpression	shade < num_levels		581368	0		<			
ANR	581684	Identifier	shade		581368	0					
ANR	581685	Identifier	num_levels		581368	1					
ANR	581686	RelationalExpression	t_level < 255		581368	1		<			
ANR	581687	Identifier	t_level		581368	0					
ANR	581688	PrimaryExpression	255		581368	1					
ANR	581689	ForStatement	for ( i = 0 ; i < d_order -> width * d_order -> full_height ; i ++ )		581368	25					
ANR	581690	ForInit	i = 0 ;	1400:9:54186:54191	581368	0	True				
ANR	581691	AssignmentExpression	i = 0		581368	0		=			
ANR	581692	Identifier	i		581368	0					
ANR	581693	PrimaryExpression	0		581368	1					
ANR	581694	Condition	i < d_order -> width * d_order -> full_height	1400:16:54193:54233	581368	1	True				
ANR	581695	RelationalExpression	i < d_order -> width * d_order -> full_height		581368	0		<			
ANR	581696	Identifier	i		581368	0					
ANR	581697	MultiplicativeExpression	d_order -> width * d_order -> full_height		581368	1		*			
ANR	581698	PtrMemberAccess	d_order -> width		581368	0					
ANR	581699	Identifier	d_order		581368	0					
ANR	581700	Identifier	width		581368	1					
ANR	581701	PtrMemberAccess	d_order -> full_height		581368	1					
ANR	581702	Identifier	d_order		581368	0					
ANR	581703	Identifier	full_height		581368	1					
ANR	581704	PostIncDecOperationExpression	i ++	1400:59:54236:54238	581368	2	True				
ANR	581705	Identifier	i		581368	0					
ANR	581706	IncDec	++		581368	1					
ANR	581707	CompoundStatement		58:65:2746:2746	581368	3					
ANR	581708	ExpressionStatement	thresh [ i ] = t_level	1401:8:54252:54271	581368	0	True				
ANR	581709	AssignmentExpression	thresh [ i ] = t_level		581368	0		=			
ANR	581710	ArrayIndexing	thresh [ i ]		581368	0					
ANR	581711	Identifier	thresh		581368	0					
ANR	581712	Identifier	i		581368	1					
ANR	581713	Identifier	t_level		581368	1					
ANR	581714	ForStatement	for ( t_level = 1 ; t_level < 256 ; t_level ++ )		581368	26					
ANR	581715	ForInit	t_level = 1 ;	1403:9:54288:54299	581368	0	True				
ANR	581716	AssignmentExpression	t_level = 1		581368	0		=			
ANR	581717	Identifier	t_level		581368	0					
ANR	581718	PrimaryExpression	1		581368	1					
ANR	581719	Condition	t_level < 256	1403:22:54301:54313	581368	1	True				
ANR	581720	RelationalExpression	t_level < 256		581368	0		<			
ANR	581721	Identifier	t_level		581368	0					
ANR	581722	PrimaryExpression	256		581368	1					
ANR	581723	PostIncDecOperationExpression	t_level ++	1403:37:54316:54324	581368	2	True				
ANR	581724	Identifier	t_level		581368	0					
ANR	581725	IncDec	++		581368	1					
ANR	581726	CompoundStatement		61:48:2831:2831	581368	3					
ANR	581727	ExpressionStatement	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )	1404:8:54337:54413	581368	0	True				
ANR	581728	AssignmentExpression	t_level_frac_color = byte2frac ( threshold_inverted ? 255 - t_level : t_level )		581368	0		=			
ANR	581729	Identifier	t_level_frac_color		581368	0					
ANR	581730	CallExpression	byte2frac ( threshold_inverted ? 255 - t_level : t_level )		581368	1					
ANR	581731	Callee	byte2frac		581368	0					
ANR	581732	Identifier	byte2frac		581368	0					
ANR	581733	ArgumentList	threshold_inverted ? 255 - t_level : t_level		581368	1					
ANR	581734	Argument	threshold_inverted ? 255 - t_level : t_level		581368	0					
ANR	581735	ConditionalExpression	threshold_inverted ? 255 - t_level : t_level		581368	0					
ANR	581736	Condition	threshold_inverted		581368	0					
ANR	581737	Identifier	threshold_inverted		581368	0					
ANR	581738	AdditiveExpression	255 - t_level		581368	1		-			
ANR	581739	PrimaryExpression	255		581368	0					
ANR	581740	Identifier	t_level		581368	1					
ANR	581741	Identifier	t_level		581368	2					
ANR	581742	IfStatement	if ( have_transfer )		581368	1					
ANR	581743	Condition	have_transfer	1405:12:54427:54439	581368	0	True				
ANR	581744	Identifier	have_transfer		581368	0					
ANR	581745	ExpressionStatement	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"	1406:12:54454:54550	581368	1	True				
ANR	581746	AssignmentExpression	"t_level_frac_color = gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		581368	0		=			
ANR	581747	Identifier	t_level_frac_color		581368	0					
ANR	581748	CallExpression	"gx_map_color_frac ( pgs , t_level_frac_color , effective_transfer [ plane_index ] )"		581368	1					
ANR	581749	Callee	gx_map_color_frac		581368	0					
ANR	581750	Identifier	gx_map_color_frac		581368	0					
ANR	581751	ArgumentList	pgs		581368	1					
ANR	581752	Argument	pgs		581368	0					
ANR	581753	Identifier	pgs		581368	0					
ANR	581754	Argument	t_level_frac_color		581368	1					
ANR	581755	Identifier	t_level_frac_color		581368	0					
ANR	581756	Argument	effective_transfer [ plane_index ]		581368	2					
ANR	581757	ArrayIndexing	effective_transfer [ plane_index ]		581368	0					
ANR	581758	Identifier	effective_transfer		581368	0					
ANR	581759	Identifier	plane_index		581368	1					
ANR	581760	ExpressionStatement	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )	1407:8:54560:54616	581368	2	True				
ANR	581761	AssignmentExpression	shade = t_level_frac_color * nshades / ( frac_1_long + 1 )		581368	0		=			
ANR	581762	Identifier	shade		581368	0					
ANR	581763	MultiplicativeExpression	t_level_frac_color * nshades / ( frac_1_long + 1 )		581368	1		*			
ANR	581764	Identifier	t_level_frac_color		581368	0					
ANR	581765	MultiplicativeExpression	nshades / ( frac_1_long + 1 )		581368	1		/			
ANR	581766	Identifier	nshades		581368	0					
ANR	581767	AdditiveExpression	frac_1_long + 1		581368	1		+			
ANR	581768	Identifier	frac_1_long		581368	0					
ANR	581769	PrimaryExpression	1		581368	1					
ANR	581770	IfStatement	if ( shade < num_levels && shade > base_shade )		581368	3					
ANR	581771	Condition	shade < num_levels && shade > base_shade	1408:12:54630:54669	581368	0	True				
ANR	581772	AndExpression	shade < num_levels && shade > base_shade		581368	0		&&			
ANR	581773	RelationalExpression	shade < num_levels		581368	0		<			
ANR	581774	Identifier	shade		581368	0					
ANR	581775	Identifier	num_levels		581368	1					
ANR	581776	RelationalExpression	shade > base_shade		581368	1		>			
ANR	581777	Identifier	shade		581368	0					
ANR	581778	Identifier	base_shade		581368	1					
ANR	581779	CompoundStatement		66:54:3176:3176	581368	1					
ANR	581780	IfStatement	if ( d_order -> levels [ shade ] > d_order -> levels [ base_shade ] )		581368	0					
ANR	581781	Condition	d_order -> levels [ shade ] > d_order -> levels [ base_shade ]	1409:16:54690:54741	581368	0	True				
ANR	581782	RelationalExpression	d_order -> levels [ shade ] > d_order -> levels [ base_shade ]		581368	0		>			
ANR	581783	ArrayIndexing	d_order -> levels [ shade ]		581368	0					
ANR	581784	PtrMemberAccess	d_order -> levels		581368	0					
ANR	581785	Identifier	d_order		581368	0					
ANR	581786	Identifier	levels		581368	1					
ANR	581787	Identifier	shade		581368	1					
ANR	581788	ArrayIndexing	d_order -> levels [ base_shade ]		581368	1					
ANR	581789	PtrMemberAccess	d_order -> levels		581368	0					
ANR	581790	Identifier	d_order		581368	0					
ANR	581791	Identifier	levels		581368	1					
ANR	581792	Identifier	base_shade		581368	1					
ANR	581793	CompoundStatement		67:70:3248:3248	581368	1					
ANR	581794	ForStatement	for ( j = d_order -> levels [ base_shade ] ; j < d_order -> levels [ shade ] ; j ++ )		581368	0					
ANR	581795	ForInit	j = d_order -> levels [ base_shade ] ;	1412:21:54903:54934	581368	0	True				
ANR	581796	AssignmentExpression	j = d_order -> levels [ base_shade ]		581368	0		=			
ANR	581797	Identifier	j		581368	0					
ANR	581798	ArrayIndexing	d_order -> levels [ base_shade ]		581368	1					
ANR	581799	PtrMemberAccess	d_order -> levels		581368	0					
ANR	581800	Identifier	d_order		581368	0					
ANR	581801	Identifier	levels		581368	1					
ANR	581802	Identifier	base_shade		581368	1					
ANR	581803	Condition	j < d_order -> levels [ shade ]	1412:54:54936:54961	581368	1	True				
ANR	581804	RelationalExpression	j < d_order -> levels [ shade ]		581368	0		<			
ANR	581805	Identifier	j		581368	0					
ANR	581806	ArrayIndexing	d_order -> levels [ shade ]		581368	1					
ANR	581807	PtrMemberAccess	d_order -> levels		581368	0					
ANR	581808	Identifier	d_order		581368	0					
ANR	581809	Identifier	levels		581368	1					
ANR	581810	Identifier	shade		581368	1					
ANR	581811	PostIncDecOperationExpression	j ++	1412:82:54964:54966	581368	2	True				
ANR	581812	Identifier	j		581368	0					
ANR	581813	IncDec	++		581368	1					
ANR	581814	CompoundStatement		71:20:3495:3511	581368	3					
ANR	581815	IdentifierDeclStatement	gs_int_point ppt ;	1413:20:54991:55007	581368	0	True				
ANR	581816	IdentifierDecl	ppt		581368	0					
ANR	581817	IdentifierDeclType	gs_int_point		581368	0					
ANR	581818	Identifier	ppt		581368	1					
ANR	581819	ExpressionStatement	"code = d_order -> procs -> bit_index ( d_order , j , & ppt )"	1414:20:55029:55079	581368	1	True				
ANR	581820	AssignmentExpression	"code = d_order -> procs -> bit_index ( d_order , j , & ppt )"		581368	0		=			
ANR	581821	Identifier	code		581368	0					
ANR	581822	CallExpression	"d_order -> procs -> bit_index ( d_order , j , & ppt )"		581368	1					
ANR	581823	Callee	d_order -> procs -> bit_index		581368	0					
ANR	581824	PtrMemberAccess	d_order -> procs -> bit_index		581368	0					
ANR	581825	PtrMemberAccess	d_order -> procs		581368	0					
ANR	581826	Identifier	d_order		581368	0					
ANR	581827	Identifier	procs		581368	1					
ANR	581828	Identifier	bit_index		581368	1					
ANR	581829	ArgumentList	d_order		581368	1					
ANR	581830	Argument	d_order		581368	0					
ANR	581831	Identifier	d_order		581368	0					
ANR	581832	Argument	j		581368	1					
ANR	581833	Identifier	j		581368	0					
ANR	581834	Argument	& ppt		581368	2					
ANR	581835	UnaryOperationExpression	& ppt		581368	0					
ANR	581836	UnaryOperator	&		581368	0					
ANR	581837	Identifier	ppt		581368	1					
ANR	581838	IfStatement	if ( code < 0 )		581368	2					
ANR	581839	Condition	code < 0	1415:24:55105:55112	581368	0	True				
ANR	581840	RelationalExpression	code < 0		581368	0		<			
ANR	581841	Identifier	code		581368	0					
ANR	581842	PrimaryExpression	0		581368	1					
ANR	581843	ReturnStatement	return code ;	1416:24:55139:55150	581368	1	True				
ANR	581844	Identifier	code		581368	0					
ANR	581845	ExpressionStatement	row = ppt . y	1417:20:55172:55183	581368	3	True				
ANR	581846	AssignmentExpression	row = ppt . y		581368	0		=			
ANR	581847	Identifier	row		581368	0					
ANR	581848	MemberAccess	ppt . y		581368	1					
ANR	581849	Identifier	ppt		581368	0					
ANR	581850	Identifier	y		581368	1					
ANR	581851	ExpressionStatement	col = ppt . x	1418:20:55205:55216	581368	4	True				
ANR	581852	AssignmentExpression	col = ppt . x		581368	0		=			
ANR	581853	Identifier	col		581368	0					
ANR	581854	MemberAccess	ppt . x		581368	1					
ANR	581855	Identifier	ppt		581368	0					
ANR	581856	Identifier	x		581368	1					
ANR	581857	IfStatement	if ( col < ( int ) d_order -> width )		581368	5					
ANR	581858	Condition	col < ( int ) d_order -> width	1419:24:55242:55266	581368	0	True				
ANR	581859	RelationalExpression	col < ( int ) d_order -> width		581368	0		<			
ANR	581860	Identifier	col		581368	0					
ANR	581861	CastExpression	( int ) d_order -> width		581368	1					
ANR	581862	CastTarget	int		581368	0					
ANR	581863	PtrMemberAccess	d_order -> width		581368	1					
ANR	581864	Identifier	d_order		581368	0					
ANR	581865	Identifier	width		581368	1					
ANR	581866	CompoundStatement		77:52:3774:3774	581368	1					
ANR	581867	ForStatement	for ( kk = 0 ; kk < num_repeat ; kk ++ )		581368	0					
ANR	581868	ForInit	kk = 0 ;	1420:29:55301:55307	581368	0	True				
ANR	581869	AssignmentExpression	kk = 0		581368	0		=			
ANR	581870	Identifier	kk		581368	0					
ANR	581871	PrimaryExpression	0		581368	1					
ANR	581872	Condition	kk < num_repeat	1420:37:55309:55323	581368	1	True				
ANR	581873	RelationalExpression	kk < num_repeat		581368	0		<			
ANR	581874	Identifier	kk		581368	0					
ANR	581875	Identifier	num_repeat		581368	1					
ANR	581876	PostIncDecOperationExpression	kk ++	1420:54:55326:55329	581368	2	True				
ANR	581877	Identifier	kk		581368	0					
ANR	581878	IncDec	++		581368	1					
ANR	581879	CompoundStatement		78:60:3836:3836	581368	3					
ANR	581880	ExpressionStatement	row_kk = row + kk * d_order -> height	1421:28:55362:55397	581368	0	True				
ANR	581881	AssignmentExpression	row_kk = row + kk * d_order -> height		581368	0		=			
ANR	581882	Identifier	row_kk		581368	0					
ANR	581883	AdditiveExpression	row + kk * d_order -> height		581368	1		+			
ANR	581884	Identifier	row		581368	0					
ANR	581885	MultiplicativeExpression	kk * d_order -> height		581368	1		*			
ANR	581886	Identifier	kk		581368	0					
ANR	581887	PtrMemberAccess	d_order -> height		581368	1					
ANR	581888	Identifier	d_order		581368	0					
ANR	581889	Identifier	height		581368	1					
ANR	581890	ExpressionStatement	col_kk = col + kk * shift	1422:28:55427:55452	581368	1	True				
ANR	581891	AssignmentExpression	col_kk = col + kk * shift		581368	0		=			
ANR	581892	Identifier	col_kk		581368	0					
ANR	581893	AdditiveExpression	col + kk * shift		581368	1		+			
ANR	581894	Identifier	col		581368	0					
ANR	581895	MultiplicativeExpression	kk * shift		581368	1		*			
ANR	581896	Identifier	kk		581368	0					
ANR	581897	Identifier	shift		581368	1					
ANR	581898	ExpressionStatement	col_kk = col_kk % d_order -> width	1423:28:55482:55514	581368	2	True				
ANR	581899	AssignmentExpression	col_kk = col_kk % d_order -> width		581368	0		=			
ANR	581900	Identifier	col_kk		581368	0					
ANR	581901	MultiplicativeExpression	col_kk % d_order -> width		581368	1		%			
ANR	581902	Identifier	col_kk		581368	0					
ANR	581903	PtrMemberAccess	d_order -> width		581368	1					
ANR	581904	Identifier	d_order		581368	0					
ANR	581905	Identifier	width		581368	1					
ANR	581906	ExpressionStatement	* ( thresh + col_kk + ( row_kk * d_order -> width ) ) = t_level	1424:28:55544:55600	581368	3	True				
ANR	581907	AssignmentExpression	* ( thresh + col_kk + ( row_kk * d_order -> width ) ) = t_level		581368	0		=			
ANR	581908	UnaryOperationExpression	* ( thresh + col_kk + ( row_kk * d_order -> width ) )		581368	0					
ANR	581909	UnaryOperator	*		581368	0					
ANR	581910	AdditiveExpression	thresh + col_kk + ( row_kk * d_order -> width )		581368	1		+			
ANR	581911	Identifier	thresh		581368	0					
ANR	581912	AdditiveExpression	col_kk + ( row_kk * d_order -> width )		581368	1		+			
ANR	581913	Identifier	col_kk		581368	0					
ANR	581914	MultiplicativeExpression	row_kk * d_order -> width		581368	1		*			
ANR	581915	Identifier	row_kk		581368	0					
ANR	581916	PtrMemberAccess	d_order -> width		581368	1					
ANR	581917	Identifier	d_order		581368	0					
ANR	581918	Identifier	width		581368	1					
ANR	581919	Identifier	t_level		581368	1					
ANR	581920	ExpressionStatement	base_shade = shade	1429:12:55694:55712	581368	1	True				
ANR	581921	AssignmentExpression	base_shade = shade		581368	0		=			
ANR	581922	Identifier	base_shade		581368	0					
ANR	581923	Identifier	shade		581368	1					
ANR	581924	ExpressionStatement	d_order -> threshold = thresh	1432:4:55734:55761	581368	27	True				
ANR	581925	AssignmentExpression	d_order -> threshold = thresh		581368	0		=			
ANR	581926	PtrMemberAccess	d_order -> threshold		581368	0					
ANR	581927	Identifier	d_order		581368	0					
ANR	581928	Identifier	threshold		581368	1					
ANR	581929	Identifier	thresh		581368	1					
ANR	581930	ExpressionStatement	d_order -> threshold_inverted = threshold_inverted	1433:4:55767:55815	581368	28	True				
ANR	581931	AssignmentExpression	d_order -> threshold_inverted = threshold_inverted		581368	0		=			
ANR	581932	PtrMemberAccess	d_order -> threshold_inverted		581368	0					
ANR	581933	Identifier	d_order		581368	0					
ANR	581934	Identifier	threshold_inverted		581368	1					
ANR	581935	Identifier	threshold_inverted		581368	1					
ANR	581936	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE )		581368	29					
ANR	581937	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE	1434:8:55825:55881	581368	0	True				
ANR	581938	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE		581368	0		==			
ANR	581939	MemberAccess	dev -> color_info . polarity		581368	0					
ANR	581940	PtrMemberAccess	dev -> color_info		581368	0					
ANR	581941	Identifier	dev		581368	0					
ANR	581942	Identifier	color_info		581368	1					
ANR	581943	Identifier	polarity		581368	1					
ANR	581944	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		581368	1					
ANR	581945	CompoundStatement		92:67:4388:4388	581368	1					
ANR	581946	ForStatement	for ( i = 0 ; i < ( int ) d_order -> height ; i ++ )		581368	0					
ANR	581947	ForInit	i = 0 ;	1435:12:55898:55903	581368	0	True				
ANR	581948	AssignmentExpression	i = 0		581368	0		=			
ANR	581949	Identifier	i		581368	0					
ANR	581950	PrimaryExpression	0		581368	1					
ANR	581951	Condition	i < ( int ) d_order -> height	1435:19:55905:55928	581368	1	True				
ANR	581952	RelationalExpression	i < ( int ) d_order -> height		581368	0		<			
ANR	581953	Identifier	i		581368	0					
ANR	581954	CastExpression	( int ) d_order -> height		581368	1					
ANR	581955	CastTarget	int		581368	0					
ANR	581956	PtrMemberAccess	d_order -> height		581368	1					
ANR	581957	Identifier	d_order		581368	0					
ANR	581958	Identifier	height		581368	1					
ANR	581959	PostIncDecOperationExpression	i ++	1435:45:55931:55933	581368	2	True				
ANR	581960	Identifier	i		581368	0					
ANR	581961	IncDec	++		581368	1					
ANR	581962	CompoundStatement		93:51:4441:4441	581368	3					
ANR	581963	ForStatement	for ( j = ( int ) d_order -> width - 1 ; j >= 0 ; j -- )		581368	0					
ANR	581964	ForInit	j = ( int ) d_order -> width - 1 ;	1436:17:55956:55979	581368	0	True				
ANR	581965	AssignmentExpression	j = ( int ) d_order -> width - 1		581368	0		=			
ANR	581966	Identifier	j		581368	0					
ANR	581967	AdditiveExpression	( int ) d_order -> width - 1		581368	1		-			
ANR	581968	CastExpression	( int ) d_order -> width		581368	0					
ANR	581969	CastTarget	int		581368	0					
ANR	581970	PtrMemberAccess	d_order -> width		581368	1					
ANR	581971	Identifier	d_order		581368	0					
ANR	581972	Identifier	width		581368	1					
ANR	581973	PrimaryExpression	1		581368	1					
ANR	581974	Condition	j >= 0	1436:42:55981:55984	581368	1	True				
ANR	581975	RelationalExpression	j >= 0		581368	0		>=			
ANR	581976	Identifier	j		581368	0					
ANR	581977	PrimaryExpression	0		581368	1					
ANR	581978	PostIncDecOperationExpression	j --	1436:48:55987:55989	581368	2	True				
ANR	581979	Identifier	j		581368	0					
ANR	581980	IncDec	--		581368	1					
ANR	581981	ExpressionStatement	* ( thresh + j + ( i * d_order -> width ) ) = 255 - * ( thresh + j + ( i * d_order -> width ) )	1437:16:56009:56078	581368	3	True				
ANR	581982	AssignmentExpression	* ( thresh + j + ( i * d_order -> width ) ) = 255 - * ( thresh + j + ( i * d_order -> width ) )		581368	0		=			
ANR	581983	UnaryOperationExpression	* ( thresh + j + ( i * d_order -> width ) )		581368	0					
ANR	581984	UnaryOperator	*		581368	0					
ANR	581985	AdditiveExpression	thresh + j + ( i * d_order -> width )		581368	1		+			
ANR	581986	Identifier	thresh		581368	0					
ANR	581987	AdditiveExpression	j + ( i * d_order -> width )		581368	1		+			
ANR	581988	Identifier	j		581368	0					
ANR	581989	MultiplicativeExpression	i * d_order -> width		581368	1		*			
ANR	581990	Identifier	i		581368	0					
ANR	581991	PtrMemberAccess	d_order -> width		581368	1					
ANR	581992	Identifier	d_order		581368	0					
ANR	581993	Identifier	width		581368	1					
ANR	581994	AdditiveExpression	255 - * ( thresh + j + ( i * d_order -> width ) )		581368	1		-			
ANR	581995	PrimaryExpression	255		581368	0					
ANR	581996	UnaryOperationExpression	* ( thresh + j + ( i * d_order -> width ) )		581368	1					
ANR	581997	UnaryOperator	*		581368	0					
ANR	581998	AdditiveExpression	thresh + j + ( i * d_order -> width )		581368	1		+			
ANR	581999	Identifier	thresh		581368	0					
ANR	582000	AdditiveExpression	j + ( i * d_order -> width )		581368	1		+			
ANR	582001	Identifier	j		581368	0					
ANR	582002	MultiplicativeExpression	i * d_order -> width		581368	1		*			
ANR	582003	Identifier	i		581368	0					
ANR	582004	PtrMemberAccess	d_order -> width		581368	1					
ANR	582005	Identifier	d_order		581368	0					
ANR	582006	Identifier	width		581368	1					
ANR	582007	IfStatement	if ( gs_debug_c ( 'h' ) )		581368	30					
ANR	582008	Condition	gs_debug_c ( 'h' )	1441:9:56118:56132	581368	0	True				
ANR	582009	CallExpression	gs_debug_c ( 'h' )		581368	0					
ANR	582010	Callee	gs_debug_c		581368	0					
ANR	582011	Identifier	gs_debug_c		581368	0					
ANR	582012	ArgumentList	'h'		581368	1					
ANR	582013	Argument	'h'		581368	0					
ANR	582014	PrimaryExpression	'h'		581368	0					
ANR	582015	CompoundStatement		99:27:4640:4640	581368	1					
ANR	582016	ForStatement	for ( i = 0 ; i < ( int ) d_order -> height ; i ++ )		581368	0					
ANR	582017	ForInit	i = 0 ;	1442:14:56152:56155	581368	0	True				
ANR	582018	AssignmentExpression	i = 0		581368	0		=			
ANR	582019	Identifier	i		581368	0					
ANR	582020	PrimaryExpression	0		581368	1					
ANR	582021	Condition	i < ( int ) d_order -> height	1442:19:56157:56178	581368	1	True				
ANR	582022	RelationalExpression	i < ( int ) d_order -> height		581368	0		<			
ANR	582023	Identifier	i		581368	0					
ANR	582024	CastExpression	( int ) d_order -> height		581368	1					
ANR	582025	CastTarget	int		581368	0					
ANR	582026	PtrMemberAccess	d_order -> height		581368	1					
ANR	582027	Identifier	d_order		581368	0					
ANR	582028	Identifier	height		581368	1					
ANR	582029	PostIncDecOperationExpression	i ++	1442:43:56181:56183	581368	2	True				
ANR	582030	Identifier	i		581368	0					
ANR	582031	IncDec	++		581368	1					
ANR	582032	CompoundStatement		100:49:4691:4691	581368	3					
ANR	582033	ExpressionStatement	"dmprintf1 ( memory , ""threshold array row %3d= "" , i )"	1443:12:56201:56250	581368	0	True				
ANR	582034	CallExpression	"dmprintf1 ( memory , ""threshold array row %3d= "" , i )"		581368	0					
ANR	582035	Callee	dmprintf1		581368	0					
ANR	582036	Identifier	dmprintf1		581368	0					
ANR	582037	ArgumentList	memory		581368	1					
ANR	582038	Argument	memory		581368	0					
ANR	582039	Identifier	memory		581368	0					
ANR	582040	Argument	"""threshold array row %3d= """		581368	1					
ANR	582041	PrimaryExpression	"""threshold array row %3d= """		581368	0					
ANR	582042	Argument	i		581368	2					
ANR	582043	Identifier	i		581368	0					
ANR	582044	ForStatement	for ( j = 0 ; j < ( int ) ( d_order -> width ) ; j ++ )		581368	1					
ANR	582045	ForInit	j = 0 ;	1444:17:56269:56272	581368	0	True				
ANR	582046	AssignmentExpression	j = 0		581368	0		=			
ANR	582047	Identifier	j		581368	0					
ANR	582048	PrimaryExpression	0		581368	1					
ANR	582049	Condition	j < ( int ) ( d_order -> width )	1444:22:56274:56296	581368	1	True				
ANR	582050	RelationalExpression	j < ( int ) ( d_order -> width )		581368	0		<			
ANR	582051	Identifier	j		581368	0					
ANR	582052	CastExpression	( int ) ( d_order -> width )		581368	1					
ANR	582053	CastTarget	int		581368	0					
ANR	582054	PtrMemberAccess	d_order -> width		581368	1					
ANR	582055	Identifier	d_order		581368	0					
ANR	582056	Identifier	width		581368	1					
ANR	582057	PostIncDecOperationExpression	j ++	1444:47:56299:56301	581368	2	True				
ANR	582058	Identifier	j		581368	0					
ANR	582059	IncDec	++		581368	1					
ANR	582060	ExpressionStatement	"dmprintf1 ( memory , ""%3d "" , * ( thresh + j + ( i * d_order -> width ) ) )"	1445:16:56321:56379	581368	3	True				
ANR	582061	CallExpression	"dmprintf1 ( memory , ""%3d "" , * ( thresh + j + ( i * d_order -> width ) ) )"		581368	0					
ANR	582062	Callee	dmprintf1		581368	0					
ANR	582063	Identifier	dmprintf1		581368	0					
ANR	582064	ArgumentList	memory		581368	1					
ANR	582065	Argument	memory		581368	0					
ANR	582066	Identifier	memory		581368	0					
ANR	582067	Argument	"""%3d """		581368	1					
ANR	582068	PrimaryExpression	"""%3d """		581368	0					
ANR	582069	Argument	* ( thresh + j + ( i * d_order -> width ) )		581368	2					
ANR	582070	UnaryOperationExpression	* ( thresh + j + ( i * d_order -> width ) )		581368	0					
ANR	582071	UnaryOperator	*		581368	0					
ANR	582072	AdditiveExpression	thresh + j + ( i * d_order -> width )		581368	1		+			
ANR	582073	Identifier	thresh		581368	0					
ANR	582074	AdditiveExpression	j + ( i * d_order -> width )		581368	1		+			
ANR	582075	Identifier	j		581368	0					
ANR	582076	MultiplicativeExpression	i * d_order -> width		581368	1		*			
ANR	582077	Identifier	i		581368	0					
ANR	582078	PtrMemberAccess	d_order -> width		581368	1					
ANR	582079	Identifier	d_order		581368	0					
ANR	582080	Identifier	width		581368	1					
ANR	582081	ExpressionStatement	"dmprintf ( memory , ""\\n"" )"	1446:12:56393:56415	581368	2	True				
ANR	582082	CallExpression	"dmprintf ( memory , ""\\n"" )"		581368	0					
ANR	582083	Callee	dmprintf		581368	0					
ANR	582084	Identifier	dmprintf		581368	0					
ANR	582085	ArgumentList	memory		581368	1					
ANR	582086	Argument	memory		581368	0					
ANR	582087	Identifier	memory		581368	0					
ANR	582088	Argument	"""\\n"""		581368	1					
ANR	582089	PrimaryExpression	"""\\n"""		581368	0					
ANR	582090	ReturnStatement	return 0 ;	1450:4:56443:56451	581368	31	True				
ANR	582091	PrimaryExpression	0		581368	0					
ANR	582092	ReturnType	int		581368	1					
ANR	582093	Identifier	gx_ht_construct_threshold		581368	2					
ANR	582094	ParameterList	"gx_ht_order * d_order , gx_device * dev , const gs_gstate * pgs , int plane_index"		581368	3					
ANR	582095	Parameter	gx_ht_order * d_order	1341:27:51390:51409	581368	0	True				
ANR	582096	ParameterType	gx_ht_order *		581368	0					
ANR	582097	Identifier	d_order		581368	1					
ANR	582098	Parameter	gx_device * dev	1341:49:51412:51425	581368	1	True				
ANR	582099	ParameterType	gx_device *		581368	0					
ANR	582100	Identifier	dev		581368	1					
ANR	582101	Parameter	const gs_gstate * pgs	1342:27:51455:51475	581368	2	True				
ANR	582102	ParameterType	const gs_gstate *		581368	0					
ANR	582103	Identifier	pgs		581368	1					
ANR	582104	Parameter	int plane_index	1342:50:51478:51492	581368	3	True				
ANR	582105	ParameterType	int		581368	0					
ANR	582106	Identifier	plane_index		581368	1					
ANR	582107	CFGEntryNode	ENTRY		581368		True				
ANR	582108	CFGExitNode	EXIT		581368		True				
ANR	582109	Symbol	* d_order		581368						
ANR	582110	Symbol	col		581368						
ANR	582111	Symbol	num_repeat		581368						
ANR	582112	Symbol	hsize		581368						
ANR	582113	Symbol	* pgs		581368						
ANR	582114	Symbol	d_order -> levels		581368						
ANR	582115	Symbol	shift		581368						
ANR	582116	Symbol	plane_index		581368						
ANR	582117	Symbol	* d_order -> data_memory		581368						
ANR	582118	Symbol	t_level_frac_color		581368						
ANR	582119	Symbol	effective_transfer		581368						
ANR	582120	Symbol	dev -> color_info . dither_colors		581368						
ANR	582121	Symbol	* row_kk		581368						
ANR	582122	Symbol	* base_shade		581368						
ANR	582123	Symbol	ppt . x		581368						
ANR	582124	Symbol	ppt . y		581368						
ANR	582125	Symbol	dev		581368						
ANR	582126	Symbol	dev -> color_info . polarity		581368						
ANR	582127	Symbol	base_shade		581368						
ANR	582128	Symbol	d_order -> width		581368						
ANR	582129	Symbol	pgs -> effective_transfer [ plane_index ] -> proc		581368						
ANR	582130	Symbol	gs_debug_c		581368						
ANR	582131	Symbol	* ( thresh + j + ( i * d_order -> width ) )		581368						
ANR	582132	Symbol	frac_0		581368						
ANR	582133	Symbol	dev -> color_info . dither_grays		581368						
ANR	582134	Symbol	frac_1		581368						
ANR	582135	Symbol	NULL		581368						
ANR	582136	Symbol	byte2frac		581368						
ANR	582137	Symbol	gs_identity_transfer		581368						
ANR	582138	Symbol	shade		581368						
ANR	582139	Symbol	* * pgs		581368						
ANR	582140	Symbol	* pgs -> effective_transfer		581368						
ANR	582141	Symbol	gs_malloc		581368						
ANR	582142	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		581368						
ANR	582143	Symbol	gx_map_color_frac		581368						
ANR	582144	Symbol	d_order -> threshold_inverted		581368						
ANR	582145	Symbol	threshold_inverted		581368						
ANR	582146	Symbol	* * d_order		581368						
ANR	582147	Symbol	true		581368						
ANR	582148	Symbol	row_kk		581368						
ANR	582149	Symbol	d_order -> threshold		581368						
ANR	582150	Symbol	d_order -> num_levels		581368						
ANR	582151	Symbol	* d_order -> width		581368						
ANR	582152	Symbol	pgs -> effective_transfer		581368						
ANR	582153	Symbol	* dev		581368						
ANR	582154	Symbol	col_kk		581368						
ANR	582155	Symbol	* col_kk		581368						
ANR	582156	Symbol	memory		581368						
ANR	582157	Symbol	code		581368						
ANR	582158	Symbol	d_order -> procs -> bit_index		581368						
ANR	582159	Symbol	nshades		581368						
ANR	582160	Symbol	* * pgs -> effective_transfer		581368						
ANR	582161	Symbol	dev -> color_info		581368						
ANR	582162	Symbol	have_transfer		581368						
ANR	582163	Symbol	* * plane_index		581368						
ANR	582164	Symbol	* effective_transfer		581368						
ANR	582165	Symbol	* shade		581368						
ANR	582166	Symbol	* * * pgs		581368						
ANR	582167	Symbol	row		581368						
ANR	582168	Symbol	* d_order -> levels		581368						
ANR	582169	Symbol	pgs		581368						
ANR	582170	Symbol	thresh		581368						
ANR	582171	Symbol	& ppt		581368						
ANR	582172	Symbol	d_order -> data_memory		581368						
ANR	582173	Symbol	kk		581368						
ANR	582174	Symbol	* plane_index		581368						
ANR	582175	Symbol	d_order -> shift		581368						
ANR	582176	Symbol	d_order -> full_height		581368						
ANR	582177	Symbol	d_order -> procs		581368						
ANR	582178	Symbol	false		581368						
ANR	582179	Symbol	i		581368						
ANR	582180	Symbol	t_level		581368						
ANR	582181	Symbol	j		581368						
ANR	582182	Symbol	frac_1_long		581368						
ANR	582183	Symbol	* thresh		581368						
ANR	582184	Symbol	d_order		581368						
ANR	582185	Symbol	* i		581368						
ANR	582186	Symbol	d_order -> height		581368						
ANR	582187	Symbol	* j		581368						
ANR	582188	Symbol	d_order -> data_memory -> non_gc_memory		581368						
ANR	582189	Symbol	ppt		581368						
ANR	582190	Symbol	* d_order -> procs		581368						
ANR	582191	Symbol	dev -> color_info . gray_index		581368						
ANR	582192	Symbol	* ( thresh + col_kk + ( row_kk * d_order -> width ) )		581368						
ANR	582193	Symbol	max_value		581368						
ANR	582194	Symbol	num_levels		581368						
