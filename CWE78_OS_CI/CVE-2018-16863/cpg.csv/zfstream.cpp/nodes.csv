command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11135014	File	data/converged/CVE-2018-16863_ghostpdl/zfstream.cpp								
ANR	11135015	Function	gzfilebuf :: gzfilebuf	4:0:24:101							
ANR	11135016	FunctionDef	gzfilebuf :: gzfilebuf ()		11135015	0					
ANR	11135017	CompoundStatement		8:0:99:101	11135015	0					
ANR	11135018	Identifier	gzfilebuf :: gzfilebuf		11135015	1					
ANR	11135019	ParameterList			11135015	2					
ANR	11135020	CFGEntryNode	ENTRY		11135015		True				
ANR	11135021	CFGExitNode	EXIT		11135015		True				
ANR	11135022	Function	gzfilebuf :: ~gzfilebuf	10:0:104:184							
ANR	11135023	FunctionDef	gzfilebuf :: ~gzfilebuf ()		11135022	0					
ANR	11135024	CompoundStatement		10:24:128:184	11135022	0					
ANR	11135025	ExpressionStatement	sync ( )	12:2:133:139	11135022	0	True				
ANR	11135026	CallExpression	sync ( )		11135022	0					
ANR	11135027	Callee	sync		11135022	0					
ANR	11135028	Identifier	sync		11135022	0					
ANR	11135029	ArgumentList			11135022	1					
ANR	11135030	IfStatement	if ( own_file_descriptor )		11135022	1					
ANR	11135031	Condition	own_file_descriptor	13:7:148:166	11135022	0	True				
ANR	11135032	Identifier	own_file_descriptor		11135022	0					
ANR	11135033	ExpressionStatement	close ( )	14:4:174:181	11135022	1	True				
ANR	11135034	CallExpression	close ( )		11135022	0					
ANR	11135035	Callee	close		11135022	0					
ANR	11135036	Identifier	close		11135022	0					
ANR	11135037	ArgumentList			11135022	1					
ANR	11135038	Identifier	gzfilebuf :: ~gzfilebuf		11135022	1					
ANR	11135039	ParameterList			11135022	2					
ANR	11135040	CFGEntryNode	ENTRY		11135022		True				
ANR	11135041	CFGExitNode	EXIT		11135022		True				
ANR	11135042	Symbol	own_file_descriptor		11135022						
ANR	11135043	Function	gzfilebuf :: open	18:0:187:894							
ANR	11135044	FunctionDef	"gzfilebuf :: open (const char * name , int io_mode)"		11135043	0					
ANR	11135045	CompoundStatement		19:42:275:894	11135043	0					
ANR	11135046	IfStatement	if ( is_open ( ) )		11135043	0					
ANR	11135047	Condition	is_open ( )	21:7:285:293	11135043	0	True				
ANR	11135048	CallExpression	is_open ( )		11135043	0					
ANR	11135049	Callee	is_open		11135043	0					
ANR	11135050	Identifier	is_open		11135043	0					
ANR	11135051	ArgumentList			11135043	1					
ANR	11135052	ReturnStatement	return NULL ;	22:4:301:312	11135043	1	True				
ANR	11135053	Identifier	NULL		11135043	0					
ANR	11135054	IdentifierDeclStatement	char char_mode [ 10 ] ;	24:2:317:335	11135043	1	True				
ANR	11135055	IdentifierDecl	char_mode [ 10 ]		11135043	0					
ANR	11135056	IdentifierDeclType	char [ 10 ]		11135043	0					
ANR	11135057	Identifier	char_mode		11135043	1					
ANR	11135058	PrimaryExpression	10		11135043	2					
ANR	11135059	IdentifierDeclStatement	char * p = char_mode ;	25:2:339:358	11135043	2	True				
ANR	11135060	IdentifierDecl	* p = char_mode		11135043	0					
ANR	11135061	IdentifierDeclType	char *		11135043	0					
ANR	11135062	Identifier	p		11135043	1					
ANR	11135063	AssignmentExpression	* p = char_mode		11135043	2		=			
ANR	11135064	Identifier	char_mode		11135043	0					
ANR	11135065	Identifier	char_mode		11135043	1					
ANR	11135066	IfStatement	if ( io_mode & ios :: in )		11135043	3					
ANR	11135067	Condition	io_mode & ios :: in	27:7:368:384	11135043	0	True				
ANR	11135068	BitAndExpression	io_mode & ios :: in		11135043	0		&			
ANR	11135069	Identifier	io_mode		11135043	0					
ANR	11135070	Identifier	ios :: in		11135043	1					
ANR	11135071	CompoundStatement		9:27:112:112	11135043	1					
ANR	11135072	ExpressionStatement	mode = ios :: in	28:4:394:408	11135043	0	True				
ANR	11135073	AssignmentExpression	mode = ios :: in		11135043	0		=			
ANR	11135074	Identifier	mode		11135043	0					
ANR	11135075	Identifier	ios :: in		11135043	1					
ANR	11135076	ExpressionStatement	* p ++ = 'r'	29:4:414:424	11135043	1	True				
ANR	11135077	AssignmentExpression	* p ++ = 'r'		11135043	0		=			
ANR	11135078	UnaryOperationExpression	* p ++		11135043	0					
ANR	11135079	UnaryOperator	*		11135043	0					
ANR	11135080	PostIncDecOperationExpression	p ++		11135043	1					
ANR	11135081	Identifier	p		11135043	0					
ANR	11135082	IncDec	++		11135043	1					
ANR	11135083	PrimaryExpression	'r'		11135043	1					
ANR	11135084	ElseStatement	else		11135043	0					
ANR	11135085	IfStatement	if ( io_mode & ios :: app )		11135043	0					
ANR	11135086	Condition	io_mode & ios :: app	30:14:440:457	11135043	0	True				
ANR	11135087	BitAndExpression	io_mode & ios :: app		11135043	0		&			
ANR	11135088	Identifier	io_mode		11135043	0					
ANR	11135089	Identifier	ios :: app		11135043	1					
ANR	11135090	CompoundStatement		12:35:185:185	11135043	1					
ANR	11135091	ExpressionStatement	mode = ios :: app	31:4:467:482	11135043	0	True				
ANR	11135092	AssignmentExpression	mode = ios :: app		11135043	0		=			
ANR	11135093	Identifier	mode		11135043	0					
ANR	11135094	Identifier	ios :: app		11135043	1					
ANR	11135095	ExpressionStatement	* p ++ = 'a'	32:4:488:498	11135043	1	True				
ANR	11135096	AssignmentExpression	* p ++ = 'a'		11135043	0		=			
ANR	11135097	UnaryOperationExpression	* p ++		11135043	0					
ANR	11135098	UnaryOperator	*		11135043	0					
ANR	11135099	PostIncDecOperationExpression	p ++		11135043	1					
ANR	11135100	Identifier	p		11135043	0					
ANR	11135101	IncDec	++		11135043	1					
ANR	11135102	PrimaryExpression	'a'		11135043	1					
ANR	11135103	ElseStatement	else		11135043	0					
ANR	11135104	CompoundStatement		15:9:233:233	11135043	0					
ANR	11135105	ExpressionStatement	mode = ios :: out	34:4:515:530	11135043	0	True				
ANR	11135106	AssignmentExpression	mode = ios :: out		11135043	0		=			
ANR	11135107	Identifier	mode		11135043	0					
ANR	11135108	Identifier	ios :: out		11135043	1					
ANR	11135109	ExpressionStatement	* p ++ = 'w'	35:4:536:546	11135043	1	True				
ANR	11135110	AssignmentExpression	* p ++ = 'w'		11135043	0		=			
ANR	11135111	UnaryOperationExpression	* p ++		11135043	0					
ANR	11135112	UnaryOperator	*		11135043	0					
ANR	11135113	PostIncDecOperationExpression	p ++		11135043	1					
ANR	11135114	Identifier	p		11135043	0					
ANR	11135115	IncDec	++		11135043	1					
ANR	11135116	PrimaryExpression	'w'		11135043	1					
ANR	11135117	IfStatement	if ( io_mode & ios :: binary )		11135043	4					
ANR	11135118	Condition	io_mode & ios :: binary	38:7:560:580	11135043	0	True				
ANR	11135119	BitAndExpression	io_mode & ios :: binary		11135043	0		&			
ANR	11135120	Identifier	io_mode		11135043	0					
ANR	11135121	Identifier	ios :: binary		11135043	1					
ANR	11135122	CompoundStatement		20:31:308:308	11135043	1					
ANR	11135123	ExpressionStatement	mode |= ios :: binary	39:4:590:609	11135043	0	True				
ANR	11135124	AssignmentExpression	mode |= ios :: binary		11135043	0		|=			
ANR	11135125	Identifier	mode		11135043	0					
ANR	11135126	Identifier	ios :: binary		11135043	1					
ANR	11135127	ExpressionStatement	* p ++ = 'b'	40:4:615:625	11135043	1	True				
ANR	11135128	AssignmentExpression	* p ++ = 'b'		11135043	0		=			
ANR	11135129	UnaryOperationExpression	* p ++		11135043	0					
ANR	11135130	UnaryOperator	*		11135043	0					
ANR	11135131	PostIncDecOperationExpression	p ++		11135043	1					
ANR	11135132	Identifier	p		11135043	0					
ANR	11135133	IncDec	++		11135043	1					
ANR	11135134	PrimaryExpression	'b'		11135043	1					
ANR	11135135	IfStatement	if ( io_mode & ( ios :: out | ios :: app ) )		11135043	5					
ANR	11135136	Condition	io_mode & ( ios :: out | ios :: app )	44:7:676:705	11135043	0	True				
ANR	11135137	BitAndExpression	io_mode & ( ios :: out | ios :: app )		11135043	0		&			
ANR	11135138	Identifier	io_mode		11135043	0					
ANR	11135139	InclusiveOrExpression	ios :: out | ios :: app		11135043	1		|			
ANR	11135140	Identifier	ios :: out		11135043	0					
ANR	11135141	Identifier	ios :: app		11135043	1					
ANR	11135142	CompoundStatement		26:39:432:432	11135043	1					
ANR	11135143	ExpressionStatement	* p ++ = '9'	45:4:714:724	11135043	0	True				
ANR	11135144	AssignmentExpression	* p ++ = '9'		11135043	0		=			
ANR	11135145	UnaryOperationExpression	* p ++		11135043	0					
ANR	11135146	UnaryOperator	*		11135043	0					
ANR	11135147	PostIncDecOperationExpression	p ++		11135043	1					
ANR	11135148	Identifier	p		11135043	0					
ANR	11135149	IncDec	++		11135043	1					
ANR	11135150	PrimaryExpression	'9'		11135043	1					
ANR	11135151	ExpressionStatement	* p = '\\0'	49:2:770:779	11135043	6	True				
ANR	11135152	AssignmentExpression	* p = '\\0'		11135043	0		=			
ANR	11135153	UnaryOperationExpression	* p		11135043	0					
ANR	11135154	UnaryOperator	*		11135043	0					
ANR	11135155	Identifier	p		11135043	1					
ANR	11135156	PrimaryExpression	'\\0'		11135043	1					
ANR	11135157	IfStatement	"if ( ( file = gzopen ( name , char_mode ) ) == NULL )"		11135043	7					
ANR	11135158	Condition	"( file = gzopen ( name , char_mode ) ) == NULL"	51:7:789:828	11135043	0	True				
ANR	11135159	EqualityExpression	"( file = gzopen ( name , char_mode ) ) == NULL"		11135043	0		==			
ANR	11135160	AssignmentExpression	"file = gzopen ( name , char_mode )"		11135043	0		=			
ANR	11135161	Identifier	file		11135043	0					
ANR	11135162	CallExpression	"gzopen ( name , char_mode )"		11135043	1					
ANR	11135163	Callee	gzopen		11135043	0					
ANR	11135164	Identifier	gzopen		11135043	0					
ANR	11135165	ArgumentList	name		11135043	1					
ANR	11135166	Argument	name		11135043	0					
ANR	11135167	Identifier	name		11135043	0					
ANR	11135168	Argument	char_mode		11135043	1					
ANR	11135169	Identifier	char_mode		11135043	0					
ANR	11135170	Identifier	NULL		11135043	1					
ANR	11135171	ReturnStatement	return NULL ;	52:4:836:847	11135043	1	True				
ANR	11135172	Identifier	NULL		11135043	0					
ANR	11135173	ExpressionStatement	own_file_descriptor = 1	54:2:852:875	11135043	8	True				
ANR	11135174	AssignmentExpression	own_file_descriptor = 1		11135043	0		=			
ANR	11135175	Identifier	own_file_descriptor		11135043	0					
ANR	11135176	PrimaryExpression	1		11135043	1					
ANR	11135177	ReturnStatement	return this ;	56:2:880:891	11135043	9	True				
ANR	11135178	Identifier	this		11135043	0					
ANR	11135179	ReturnType	gzfilebuf *		11135043	1					
ANR	11135180	Identifier	gzfilebuf :: open		11135043	2					
ANR	11135181	ParameterList	"const char * name , int io_mode"		11135043	3					
ANR	11135182	Parameter	const char * name	18:28:215:230	11135043	0	True				
ANR	11135183	ParameterType	const char *		11135043	0					
ANR	11135184	Identifier	name		11135043	1					
ANR	11135185	Parameter	int io_mode	19:28:261:271	11135043	1	True				
ANR	11135186	ParameterType	int		11135043	0					
ANR	11135187	Identifier	io_mode		11135043	1					
ANR	11135188	CFGEntryNode	ENTRY		11135043		True				
ANR	11135189	CFGExitNode	EXIT		11135043		True				
ANR	11135190	Symbol	ios :: app		11135043						
ANR	11135191	Symbol	NULL		11135043						
ANR	11135192	Symbol	is_open		11135043						
ANR	11135193	Symbol	* p ++		11135043						
ANR	11135194	Symbol	char_mode		11135043						
ANR	11135195	Symbol	this		11135043						
ANR	11135196	Symbol	own_file_descriptor		11135043						
ANR	11135197	Symbol	p		11135043						
ANR	11135198	Symbol	mode		11135043						
ANR	11135199	Symbol	gzopen		11135043						
ANR	11135200	Symbol	file		11135043						
ANR	11135201	Symbol	ios :: in		11135043						
ANR	11135202	Symbol	ios :: out		11135043						
ANR	11135203	Symbol	name		11135043						
ANR	11135204	Symbol	io_mode		11135043						
ANR	11135205	Symbol	* p		11135043						
ANR	11135206	Symbol	ios :: binary		11135043						
ANR	11135207	Function	gzfilebuf :: attach	60:0:897:1623							
ANR	11135208	FunctionDef	"gzfilebuf :: attach (int file_descriptor , int io_mode)"		11135207	0					
ANR	11135209	CompoundStatement		61:44:992:1623	11135207	0					
ANR	11135210	IfStatement	if ( is_open ( ) )		11135207	0					
ANR	11135211	Condition	is_open ( )	63:7:1002:1010	11135207	0	True				
ANR	11135212	CallExpression	is_open ( )		11135207	0					
ANR	11135213	Callee	is_open		11135207	0					
ANR	11135214	Identifier	is_open		11135207	0					
ANR	11135215	ArgumentList			11135207	1					
ANR	11135216	ReturnStatement	return NULL ;	64:4:1018:1029	11135207	1	True				
ANR	11135217	Identifier	NULL		11135207	0					
ANR	11135218	IdentifierDeclStatement	char char_mode [ 10 ] ;	66:2:1034:1052	11135207	1	True				
ANR	11135219	IdentifierDecl	char_mode [ 10 ]		11135207	0					
ANR	11135220	IdentifierDeclType	char [ 10 ]		11135207	0					
ANR	11135221	Identifier	char_mode		11135207	1					
ANR	11135222	PrimaryExpression	10		11135207	2					
ANR	11135223	IdentifierDeclStatement	char * p = char_mode ;	67:2:1056:1075	11135207	2	True				
ANR	11135224	IdentifierDecl	* p = char_mode		11135207	0					
ANR	11135225	IdentifierDeclType	char *		11135207	0					
ANR	11135226	Identifier	p		11135207	1					
ANR	11135227	AssignmentExpression	* p = char_mode		11135207	2		=			
ANR	11135228	Identifier	char_mode		11135207	0					
ANR	11135229	Identifier	char_mode		11135207	1					
ANR	11135230	IfStatement	if ( io_mode & ios :: in )		11135207	3					
ANR	11135231	Condition	io_mode & ios :: in	69:7:1085:1101	11135207	0	True				
ANR	11135232	BitAndExpression	io_mode & ios :: in		11135207	0		&			
ANR	11135233	Identifier	io_mode		11135207	0					
ANR	11135234	Identifier	ios :: in		11135207	1					
ANR	11135235	CompoundStatement		9:27:112:112	11135207	1					
ANR	11135236	ExpressionStatement	mode = ios :: in	70:4:1111:1125	11135207	0	True				
ANR	11135237	AssignmentExpression	mode = ios :: in		11135207	0		=			
ANR	11135238	Identifier	mode		11135207	0					
ANR	11135239	Identifier	ios :: in		11135207	1					
ANR	11135240	ExpressionStatement	* p ++ = 'r'	71:4:1131:1141	11135207	1	True				
ANR	11135241	AssignmentExpression	* p ++ = 'r'		11135207	0		=			
ANR	11135242	UnaryOperationExpression	* p ++		11135207	0					
ANR	11135243	UnaryOperator	*		11135207	0					
ANR	11135244	PostIncDecOperationExpression	p ++		11135207	1					
ANR	11135245	Identifier	p		11135207	0					
ANR	11135246	IncDec	++		11135207	1					
ANR	11135247	PrimaryExpression	'r'		11135207	1					
ANR	11135248	ElseStatement	else		11135207	0					
ANR	11135249	IfStatement	if ( io_mode & ios :: app )		11135207	0					
ANR	11135250	Condition	io_mode & ios :: app	72:14:1157:1174	11135207	0	True				
ANR	11135251	BitAndExpression	io_mode & ios :: app		11135207	0		&			
ANR	11135252	Identifier	io_mode		11135207	0					
ANR	11135253	Identifier	ios :: app		11135207	1					
ANR	11135254	CompoundStatement		12:35:185:185	11135207	1					
ANR	11135255	ExpressionStatement	mode = ios :: app	73:4:1184:1199	11135207	0	True				
ANR	11135256	AssignmentExpression	mode = ios :: app		11135207	0		=			
ANR	11135257	Identifier	mode		11135207	0					
ANR	11135258	Identifier	ios :: app		11135207	1					
ANR	11135259	ExpressionStatement	* p ++ = 'a'	74:4:1205:1215	11135207	1	True				
ANR	11135260	AssignmentExpression	* p ++ = 'a'		11135207	0		=			
ANR	11135261	UnaryOperationExpression	* p ++		11135207	0					
ANR	11135262	UnaryOperator	*		11135207	0					
ANR	11135263	PostIncDecOperationExpression	p ++		11135207	1					
ANR	11135264	Identifier	p		11135207	0					
ANR	11135265	IncDec	++		11135207	1					
ANR	11135266	PrimaryExpression	'a'		11135207	1					
ANR	11135267	ElseStatement	else		11135207	0					
ANR	11135268	CompoundStatement		15:9:233:233	11135207	0					
ANR	11135269	ExpressionStatement	mode = ios :: out	76:4:1232:1247	11135207	0	True				
ANR	11135270	AssignmentExpression	mode = ios :: out		11135207	0		=			
ANR	11135271	Identifier	mode		11135207	0					
ANR	11135272	Identifier	ios :: out		11135207	1					
ANR	11135273	ExpressionStatement	* p ++ = 'w'	77:4:1253:1263	11135207	1	True				
ANR	11135274	AssignmentExpression	* p ++ = 'w'		11135207	0		=			
ANR	11135275	UnaryOperationExpression	* p ++		11135207	0					
ANR	11135276	UnaryOperator	*		11135207	0					
ANR	11135277	PostIncDecOperationExpression	p ++		11135207	1					
ANR	11135278	Identifier	p		11135207	0					
ANR	11135279	IncDec	++		11135207	1					
ANR	11135280	PrimaryExpression	'w'		11135207	1					
ANR	11135281	IfStatement	if ( io_mode & ios :: binary )		11135207	4					
ANR	11135282	Condition	io_mode & ios :: binary	80:7:1277:1297	11135207	0	True				
ANR	11135283	BitAndExpression	io_mode & ios :: binary		11135207	0		&			
ANR	11135284	Identifier	io_mode		11135207	0					
ANR	11135285	Identifier	ios :: binary		11135207	1					
ANR	11135286	CompoundStatement		20:31:308:308	11135207	1					
ANR	11135287	ExpressionStatement	mode |= ios :: binary	81:4:1307:1326	11135207	0	True				
ANR	11135288	AssignmentExpression	mode |= ios :: binary		11135207	0		|=			
ANR	11135289	Identifier	mode		11135207	0					
ANR	11135290	Identifier	ios :: binary		11135207	1					
ANR	11135291	ExpressionStatement	* p ++ = 'b'	82:4:1332:1342	11135207	1	True				
ANR	11135292	AssignmentExpression	* p ++ = 'b'		11135207	0		=			
ANR	11135293	UnaryOperationExpression	* p ++		11135207	0					
ANR	11135294	UnaryOperator	*		11135207	0					
ANR	11135295	PostIncDecOperationExpression	p ++		11135207	1					
ANR	11135296	Identifier	p		11135207	0					
ANR	11135297	IncDec	++		11135207	1					
ANR	11135298	PrimaryExpression	'b'		11135207	1					
ANR	11135299	IfStatement	if ( io_mode & ( ios :: out | ios :: app ) )		11135207	5					
ANR	11135300	Condition	io_mode & ( ios :: out | ios :: app )	86:7:1393:1422	11135207	0	True				
ANR	11135301	BitAndExpression	io_mode & ( ios :: out | ios :: app )		11135207	0		&			
ANR	11135302	Identifier	io_mode		11135207	0					
ANR	11135303	InclusiveOrExpression	ios :: out | ios :: app		11135207	1		|			
ANR	11135304	Identifier	ios :: out		11135207	0					
ANR	11135305	Identifier	ios :: app		11135207	1					
ANR	11135306	CompoundStatement		26:39:432:432	11135207	1					
ANR	11135307	ExpressionStatement	* p ++ = '9'	87:4:1431:1441	11135207	0	True				
ANR	11135308	AssignmentExpression	* p ++ = '9'		11135207	0		=			
ANR	11135309	UnaryOperationExpression	* p ++		11135207	0					
ANR	11135310	UnaryOperator	*		11135207	0					
ANR	11135311	PostIncDecOperationExpression	p ++		11135207	1					
ANR	11135312	Identifier	p		11135207	0					
ANR	11135313	IncDec	++		11135207	1					
ANR	11135314	PrimaryExpression	'9'		11135207	1					
ANR	11135315	ExpressionStatement	* p = '\\0'	91:2:1487:1496	11135207	6	True				
ANR	11135316	AssignmentExpression	* p = '\\0'		11135207	0		=			
ANR	11135317	UnaryOperationExpression	* p		11135207	0					
ANR	11135318	UnaryOperator	*		11135207	0					
ANR	11135319	Identifier	p		11135207	1					
ANR	11135320	PrimaryExpression	'\\0'		11135207	1					
ANR	11135321	IfStatement	"if ( ( file = gzdopen ( file_descriptor , char_mode ) ) == NULL )"		11135207	7					
ANR	11135322	Condition	"( file = gzdopen ( file_descriptor , char_mode ) ) == NULL"	93:7:1506:1557	11135207	0	True				
ANR	11135323	EqualityExpression	"( file = gzdopen ( file_descriptor , char_mode ) ) == NULL"		11135207	0		==			
ANR	11135324	AssignmentExpression	"file = gzdopen ( file_descriptor , char_mode )"		11135207	0		=			
ANR	11135325	Identifier	file		11135207	0					
ANR	11135326	CallExpression	"gzdopen ( file_descriptor , char_mode )"		11135207	1					
ANR	11135327	Callee	gzdopen		11135207	0					
ANR	11135328	Identifier	gzdopen		11135207	0					
ANR	11135329	ArgumentList	file_descriptor		11135207	1					
ANR	11135330	Argument	file_descriptor		11135207	0					
ANR	11135331	Identifier	file_descriptor		11135207	0					
ANR	11135332	Argument	char_mode		11135207	1					
ANR	11135333	Identifier	char_mode		11135207	0					
ANR	11135334	Identifier	NULL		11135207	1					
ANR	11135335	ReturnStatement	return NULL ;	94:4:1565:1576	11135207	1	True				
ANR	11135336	Identifier	NULL		11135207	0					
ANR	11135337	ExpressionStatement	own_file_descriptor = 0	96:2:1581:1604	11135207	8	True				
ANR	11135338	AssignmentExpression	own_file_descriptor = 0		11135207	0		=			
ANR	11135339	Identifier	own_file_descriptor		11135207	0					
ANR	11135340	PrimaryExpression	0		11135207	1					
ANR	11135341	ReturnStatement	return this ;	98:2:1609:1620	11135207	9	True				
ANR	11135342	Identifier	this		11135207	0					
ANR	11135343	ReturnType	gzfilebuf *		11135207	1					
ANR	11135344	Identifier	gzfilebuf :: attach		11135207	2					
ANR	11135345	ParameterList	"int file_descriptor , int io_mode"		11135207	3					
ANR	11135346	Parameter	int file_descriptor	60:30:927:945	11135207	0	True				
ANR	11135347	ParameterType	int		11135207	0					
ANR	11135348	Identifier	file_descriptor		11135207	1					
ANR	11135349	Parameter	int io_mode	61:30:978:988	11135207	1	True				
ANR	11135350	ParameterType	int		11135207	0					
ANR	11135351	Identifier	io_mode		11135207	1					
ANR	11135352	CFGEntryNode	ENTRY		11135207		True				
ANR	11135353	CFGExitNode	EXIT		11135207		True				
ANR	11135354	Symbol	ios :: app		11135207						
ANR	11135355	Symbol	NULL		11135207						
ANR	11135356	Symbol	is_open		11135207						
ANR	11135357	Symbol	* p ++		11135207						
ANR	11135358	Symbol	char_mode		11135207						
ANR	11135359	Symbol	this		11135207						
ANR	11135360	Symbol	own_file_descriptor		11135207						
ANR	11135361	Symbol	p		11135207						
ANR	11135362	Symbol	mode		11135207						
ANR	11135363	Symbol	file		11135207						
ANR	11135364	Symbol	ios :: in		11135207						
ANR	11135365	Symbol	ios :: out		11135207						
ANR	11135366	Symbol	file_descriptor		11135207						
ANR	11135367	Symbol	io_mode		11135207						
ANR	11135368	Symbol	* p		11135207						
ANR	11135369	Symbol	gzdopen		11135207						
ANR	11135370	Symbol	ios :: binary		11135207						
ANR	11135371	Function	gzfilebuf :: close	102:0:1626:1753							
ANR	11135372	FunctionDef	gzfilebuf :: close ()		11135371	0					
ANR	11135373	CompoundStatement		102:30:1656:1753	11135371	0					
ANR	11135374	IfStatement	if ( is_open ( ) )		11135371	0					
ANR	11135375	Condition	is_open ( )	104:7:1666:1674	11135371	0	True				
ANR	11135376	CallExpression	is_open ( )		11135371	0					
ANR	11135377	Callee	is_open		11135371	0					
ANR	11135378	Identifier	is_open		11135371	0					
ANR	11135379	ArgumentList			11135371	1					
ANR	11135380	CompoundStatement		3:19:21:21	11135371	1					
ANR	11135381	ExpressionStatement	sync ( )	106:4:1685:1691	11135371	0	True				
ANR	11135382	CallExpression	sync ( )		11135371	0					
ANR	11135383	Callee	sync		11135371	0					
ANR	11135384	Identifier	sync		11135371	0					
ANR	11135385	ArgumentList			11135371	1					
ANR	11135386	ExpressionStatement	gzclose ( file )	107:4:1697:1712	11135371	1	True				
ANR	11135387	CallExpression	gzclose ( file )		11135371	0					
ANR	11135388	Callee	gzclose		11135371	0					
ANR	11135389	Identifier	gzclose		11135371	0					
ANR	11135390	ArgumentList	file		11135371	1					
ANR	11135391	Argument	file		11135371	0					
ANR	11135392	Identifier	file		11135371	0					
ANR	11135393	ExpressionStatement	file = NULL	108:4:1718:1729	11135371	2	True				
ANR	11135394	AssignmentExpression	file = NULL		11135371	0		=			
ANR	11135395	Identifier	file		11135371	0					
ANR	11135396	Identifier	NULL		11135371	1					
ANR	11135397	ReturnStatement	return this ;	112:2:1739:1750	11135371	1	True				
ANR	11135398	Identifier	this		11135371	0					
ANR	11135399	ReturnType	gzfilebuf *		11135371	1					
ANR	11135400	Identifier	gzfilebuf :: close		11135371	2					
ANR	11135401	ParameterList			11135371	3					
ANR	11135402	CFGEntryNode	ENTRY		11135371		True				
ANR	11135403	CFGExitNode	EXIT		11135371		True				
ANR	11135404	Symbol	file		11135371						
ANR	11135405	Symbol	NULL		11135371						
ANR	11135406	Symbol	is_open		11135371						
ANR	11135407	Symbol	this		11135371						
ANR	11135408	Function	gzfilebuf :: setcompressionlevel	116:0:1756:1857							
ANR	11135409	FunctionDef	gzfilebuf :: setcompressionlevel (int comp_level)		11135408	0					
ANR	11135410	CompoundStatement		116:53:1809:1857	11135408	0					
ANR	11135411	ReturnStatement	"return gzsetparams ( file , comp_level , - 2 ) ;"	118:2:1814:1854	11135408	0	True				
ANR	11135412	CallExpression	"gzsetparams ( file , comp_level , - 2 )"		11135408	0					
ANR	11135413	Callee	gzsetparams		11135408	0					
ANR	11135414	Identifier	gzsetparams		11135408	0					
ANR	11135415	ArgumentList	file		11135408	1					
ANR	11135416	Argument	file		11135408	0					
ANR	11135417	Identifier	file		11135408	0					
ANR	11135418	Argument	comp_level		11135408	1					
ANR	11135419	Identifier	comp_level		11135408	0					
ANR	11135420	Argument	- 2		11135408	2					
ANR	11135421	UnaryOperationExpression	- 2		11135408	0					
ANR	11135422	UnaryOperator	-		11135408	0					
ANR	11135423	PrimaryExpression	2		11135408	1					
ANR	11135424	ReturnType	int		11135408	1					
ANR	11135425	Identifier	gzfilebuf :: setcompressionlevel		11135408	2					
ANR	11135426	ParameterList	int comp_level		11135408	3					
ANR	11135427	Parameter	int comp_level	116:36:1792:1805	11135408	0	True				
ANR	11135428	ParameterType	int		11135408	0					
ANR	11135429	Identifier	comp_level		11135408	1					
ANR	11135430	CFGEntryNode	ENTRY		11135408		True				
ANR	11135431	CFGExitNode	EXIT		11135408		True				
ANR	11135432	Symbol	gzsetparams		11135408						
ANR	11135433	Symbol	file		11135408						
ANR	11135434	Symbol	comp_level		11135408						
ANR	11135435	Function	gzfilebuf :: setcompressionstrategy	122:0:1860:1970							
ANR	11135436	FunctionDef	gzfilebuf :: setcompressionstrategy (int comp_strategy)		11135435	0					
ANR	11135437	CompoundStatement		122:59:1919:1970	11135435	0					
ANR	11135438	ReturnStatement	"return gzsetparams ( file , - 2 , comp_strategy ) ;"	124:2:1924:1967	11135435	0	True				
ANR	11135439	CallExpression	"gzsetparams ( file , - 2 , comp_strategy )"		11135435	0					
ANR	11135440	Callee	gzsetparams		11135435	0					
ANR	11135441	Identifier	gzsetparams		11135435	0					
ANR	11135442	ArgumentList	file		11135435	1					
ANR	11135443	Argument	file		11135435	0					
ANR	11135444	Identifier	file		11135435	0					
ANR	11135445	Argument	- 2		11135435	1					
ANR	11135446	UnaryOperationExpression	- 2		11135435	0					
ANR	11135447	UnaryOperator	-		11135435	0					
ANR	11135448	PrimaryExpression	2		11135435	1					
ANR	11135449	Argument	comp_strategy		11135435	2					
ANR	11135450	Identifier	comp_strategy		11135435	0					
ANR	11135451	ReturnType	int		11135435	1					
ANR	11135452	Identifier	gzfilebuf :: setcompressionstrategy		11135435	2					
ANR	11135453	ParameterList	int comp_strategy		11135435	3					
ANR	11135454	Parameter	int comp_strategy	122:39:1899:1915	11135435	0	True				
ANR	11135455	ParameterType	int		11135435	0					
ANR	11135456	Identifier	comp_strategy		11135435	1					
ANR	11135457	CFGEntryNode	ENTRY		11135435		True				
ANR	11135458	CFGExitNode	EXIT		11135435		True				
ANR	11135459	Symbol	gzsetparams		11135435						
ANR	11135460	Symbol	file		11135435						
ANR	11135461	Symbol	comp_strategy		11135435						
ANR	11135462	Function	gzfilebuf :: seekoff	129:0:1974:2079							
ANR	11135463	FunctionDef	"gzfilebuf :: seekoff (streamoff off , ios :: seek_dir dir , int which)"		11135462	0					
ANR	11135464	CompoundStatement		129:76:2050:2079	11135462	0					
ANR	11135465	ReturnStatement	return streampos ( EOF ) ;	131:2:2055:2076	11135462	0	True				
ANR	11135466	CallExpression	streampos ( EOF )		11135462	0					
ANR	11135467	Callee	streampos		11135462	0					
ANR	11135468	Identifier	streampos		11135462	0					
ANR	11135469	ArgumentList	EOF		11135462	1					
ANR	11135470	Argument	EOF		11135462	0					
ANR	11135471	Identifier	EOF		11135462	0					
ANR	11135472	ReturnType	streampos		11135462	1					
ANR	11135473	Identifier	gzfilebuf :: seekoff		11135462	2					
ANR	11135474	ParameterList	"streamoff off , ios :: seek_dir dir , int which"		11135462	3					
ANR	11135475	Parameter	streamoff off	129:30:2004:2016	11135462	0	True				
ANR	11135476	ParameterType	streamoff		11135462	0					
ANR	11135477	Identifier	off		11135462	1					
ANR	11135478	Parameter	ios :: seek_dir dir	129:45:2019:2035	11135462	1	True				
ANR	11135479	ParameterType	ios :: seek_dir		11135462	0					
ANR	11135480	Identifier	dir		11135462	1					
ANR	11135481	Parameter	int which	129:64:2038:2046	11135462	2	True				
ANR	11135482	ParameterType	int		11135462	0					
ANR	11135483	Identifier	which		11135462	1					
ANR	11135484	CFGEntryNode	ENTRY		11135462		True				
ANR	11135485	CFGExitNode	EXIT		11135462		True				
ANR	11135486	Symbol	which		11135462						
ANR	11135487	Symbol	streampos		11135462						
ANR	11135488	Symbol	dir		11135462						
ANR	11135489	Symbol	EOF		11135462						
ANR	11135490	Symbol	off		11135462						
ANR	11135491	Function	gzfilebuf :: underflow	135:0:2082:2703							
ANR	11135492	FunctionDef	gzfilebuf :: underflow ()		11135491	0					
ANR	11135493	CompoundStatement		135:27:2109:2703	11135491	0					
ANR	11135494	IfStatement	if ( ! is_open ( ) || ! ( mode & ios :: in ) )		11135491	0					
ANR	11135495	Condition	! is_open ( ) || ! ( mode & ios :: in )	138:7:2175:2205	11135491	0	True				
ANR	11135496	OrExpression	! is_open ( ) || ! ( mode & ios :: in )		11135491	0		||			
ANR	11135497	UnaryOperationExpression	! is_open ( )		11135491	0					
ANR	11135498	UnaryOperator	!		11135491	0					
ANR	11135499	CallExpression	is_open ( )		11135491	1					
ANR	11135500	Callee	is_open		11135491	0					
ANR	11135501	Identifier	is_open		11135491	0					
ANR	11135502	ArgumentList			11135491	1					
ANR	11135503	UnaryOperationExpression	! ( mode & ios :: in )		11135491	1					
ANR	11135504	UnaryOperator	!		11135491	0					
ANR	11135505	BitAndExpression	mode & ios :: in		11135491	1		&			
ANR	11135506	Identifier	mode		11135491	0					
ANR	11135507	Identifier	ios :: in		11135491	1					
ANR	11135508	ReturnStatement	return EOF ;	139:4:2213:2223	11135491	1	True				
ANR	11135509	Identifier	EOF		11135491	0					
ANR	11135510	IfStatement	if ( ! base ( ) )		11135491	1					
ANR	11135511	Condition	! base ( )	142:7:2280:2286	11135491	0	True				
ANR	11135512	UnaryOperationExpression	! base ( )		11135491	0					
ANR	11135513	UnaryOperator	!		11135491	0					
ANR	11135514	CallExpression	base ( )		11135491	1					
ANR	11135515	Callee	base		11135491	0					
ANR	11135516	Identifier	base		11135491	0					
ANR	11135517	ArgumentList			11135491	1					
ANR	11135518	CompoundStatement		8:17:180:180	11135491	1					
ANR	11135519	IfStatement	if ( ( allocate ( ) ) == EOF )		11135491	0					
ANR	11135520	Condition	( allocate ( ) ) == EOF	144:9:2302:2320	11135491	0	True				
ANR	11135521	EqualityExpression	( allocate ( ) ) == EOF		11135491	0		==			
ANR	11135522	CallExpression	allocate ( )		11135491	0					
ANR	11135523	Callee	allocate		11135491	0					
ANR	11135524	Identifier	allocate		11135491	0					
ANR	11135525	ArgumentList			11135491	1					
ANR	11135526	Identifier	EOF		11135491	1					
ANR	11135527	ReturnStatement	return EOF ;	145:6:2330:2340	11135491	1	True				
ANR	11135528	Identifier	EOF		11135491	0					
ANR	11135529	ExpressionStatement	"setp ( 0 , 0 )"	146:4:2346:2355	11135491	1	True				
ANR	11135530	CallExpression	"setp ( 0 , 0 )"		11135491	0					
ANR	11135531	Callee	setp		11135491	0					
ANR	11135532	Identifier	setp		11135491	0					
ANR	11135533	ArgumentList	0		11135491	1					
ANR	11135534	Argument	0		11135491	0					
ANR	11135535	PrimaryExpression	0		11135491	0					
ANR	11135536	Argument	0		11135491	1					
ANR	11135537	PrimaryExpression	0		11135491	0					
ANR	11135538	ElseStatement	else		11135491	0					
ANR	11135539	CompoundStatement		14:9:257:257	11135491	0					
ANR	11135540	IfStatement	if ( in_avail ( ) )		11135491	0					
ANR	11135541	Condition	in_avail ( )	150:9:2379:2388	11135491	0	True				
ANR	11135542	CallExpression	in_avail ( )		11135491	0					
ANR	11135543	Callee	in_avail		11135491	0					
ANR	11135544	Identifier	in_avail		11135491	0					
ANR	11135545	ArgumentList			11135491	1					
ANR	11135546	ReturnStatement	return ( unsigned char ) * gptr ( ) ;	151:6:2398:2428	11135491	1	True				
ANR	11135547	CastExpression	( unsigned char ) * gptr ( )		11135491	0					
ANR	11135548	CastTarget	unsigned char		11135491	0					
ANR	11135549	UnaryOperationExpression	* gptr ( )		11135491	1					
ANR	11135550	UnaryOperator	*		11135491	0					
ANR	11135551	CallExpression	gptr ( )		11135491	1					
ANR	11135552	Callee	gptr		11135491	0					
ANR	11135553	Identifier	gptr		11135491	0					
ANR	11135554	ArgumentList			11135491	1					
ANR	11135555	IfStatement	if ( out_waiting ( ) )		11135491	1					
ANR	11135556	Condition	out_waiting ( )	153:9:2440:2452	11135491	0	True				
ANR	11135557	CallExpression	out_waiting ( )		11135491	0					
ANR	11135558	Callee	out_waiting		11135491	0					
ANR	11135559	Identifier	out_waiting		11135491	0					
ANR	11135560	ArgumentList			11135491	1					
ANR	11135561	CompoundStatement		19:25:346:346	11135491	1					
ANR	11135562	IfStatement	if ( flushbuf ( ) == EOF )		11135491	0					
ANR	11135563	Condition	flushbuf ( ) == EOF	154:11:2469:2485	11135491	0	True				
ANR	11135564	EqualityExpression	flushbuf ( ) == EOF		11135491	0		==			
ANR	11135565	CallExpression	flushbuf ( )		11135491	0					
ANR	11135566	Callee	flushbuf		11135491	0					
ANR	11135567	Identifier	flushbuf		11135491	0					
ANR	11135568	ArgumentList			11135491	1					
ANR	11135569	Identifier	EOF		11135491	1					
ANR	11135570	ReturnStatement	return EOF ;	155:8:2497:2507	11135491	1	True				
ANR	11135571	Identifier	EOF		11135491	0					
ANR	11135572	IdentifierDeclStatement	int result = fillbuf ( ) ;	162:2:2557:2579	11135491	2	True				
ANR	11135573	IdentifierDecl	result = fillbuf ( )		11135491	0					
ANR	11135574	IdentifierDeclType	int		11135491	0					
ANR	11135575	Identifier	result		11135491	1					
ANR	11135576	AssignmentExpression	result = fillbuf ( )		11135491	2		=			
ANR	11135577	Identifier	result		11135491	0					
ANR	11135578	CallExpression	fillbuf ( )		11135491	1					
ANR	11135579	Callee	fillbuf		11135491	0					
ANR	11135580	Identifier	fillbuf		11135491	0					
ANR	11135581	ArgumentList			11135491	1					
ANR	11135582	IfStatement	if ( result == EOF )		11135491	3					
ANR	11135583	Condition	result == EOF	163:7:2588:2600	11135491	0	True				
ANR	11135584	EqualityExpression	result == EOF		11135491	0		==			
ANR	11135585	Identifier	result		11135491	0					
ANR	11135586	Identifier	EOF		11135491	1					
ANR	11135587	CompoundStatement		29:23:494:494	11135491	1					
ANR	11135588	ExpressionStatement	"setg ( 0 , 0 , 0 )"	165:4:2634:2645	11135491	0	True				
ANR	11135589	CallExpression	"setg ( 0 , 0 , 0 )"		11135491	0					
ANR	11135590	Callee	setg		11135491	0					
ANR	11135591	Identifier	setg		11135491	0					
ANR	11135592	ArgumentList	0		11135491	1					
ANR	11135593	Argument	0		11135491	0					
ANR	11135594	PrimaryExpression	0		11135491	0					
ANR	11135595	Argument	0		11135491	1					
ANR	11135596	PrimaryExpression	0		11135491	0					
ANR	11135597	Argument	0		11135491	2					
ANR	11135598	PrimaryExpression	0		11135491	0					
ANR	11135599	ReturnStatement	return EOF ;	166:4:2651:2661	11135491	1	True				
ANR	11135600	Identifier	EOF		11135491	0					
ANR	11135601	ReturnStatement	return ( unsigned char ) * gptr ( ) ;	169:2:2670:2700	11135491	4	True				
ANR	11135602	CastExpression	( unsigned char ) * gptr ( )		11135491	0					
ANR	11135603	CastTarget	unsigned char		11135491	0					
ANR	11135604	UnaryOperationExpression	* gptr ( )		11135491	1					
ANR	11135605	UnaryOperator	*		11135491	0					
ANR	11135606	CallExpression	gptr ( )		11135491	1					
ANR	11135607	Callee	gptr		11135491	0					
ANR	11135608	Identifier	gptr		11135491	0					
ANR	11135609	ArgumentList			11135491	1					
ANR	11135610	ReturnType	int		11135491	1					
ANR	11135611	Identifier	gzfilebuf :: underflow		11135491	2					
ANR	11135612	ParameterList			11135491	3					
ANR	11135613	CFGEntryNode	ENTRY		11135491		True				
ANR	11135614	CFGExitNode	EXIT		11135491		True				
ANR	11135615	Symbol	* gptr		11135491						
ANR	11135616	Symbol	is_open		11135491						
ANR	11135617	Symbol	in_avail		11135491						
ANR	11135618	Symbol	out_waiting		11135491						
ANR	11135619	Symbol	flushbuf		11135491						
ANR	11135620	Symbol	mode		11135491						
ANR	11135621	Symbol	result		11135491						
ANR	11135622	Symbol	allocate		11135491						
ANR	11135623	Symbol	ios :: in		11135491						
ANR	11135624	Symbol	gptr		11135491						
ANR	11135625	Symbol	* gptr ( )		11135491						
ANR	11135626	Symbol	fillbuf		11135491						
ANR	11135627	Symbol	EOF		11135491						
ANR	11135628	Symbol	base		11135491						
ANR	11135629	Function	gzfilebuf :: overflow	173:0:2706:3149							
ANR	11135630	FunctionDef	gzfilebuf :: overflow (int c)		11135629	0					
ANR	11135631	CompoundStatement		173:33:2739:3149	11135629	0					
ANR	11135632	IfStatement	if ( ! is_open ( ) || ! ( mode & ios :: out ) )		11135629	0					
ANR	11135633	Condition	! is_open ( ) || ! ( mode & ios :: out )	175:7:2749:2780	11135629	0	True				
ANR	11135634	OrExpression	! is_open ( ) || ! ( mode & ios :: out )		11135629	0		||			
ANR	11135635	UnaryOperationExpression	! is_open ( )		11135629	0					
ANR	11135636	UnaryOperator	!		11135629	0					
ANR	11135637	CallExpression	is_open ( )		11135629	1					
ANR	11135638	Callee	is_open		11135629	0					
ANR	11135639	Identifier	is_open		11135629	0					
ANR	11135640	ArgumentList			11135629	1					
ANR	11135641	UnaryOperationExpression	! ( mode & ios :: out )		11135629	1					
ANR	11135642	UnaryOperator	!		11135629	0					
ANR	11135643	BitAndExpression	mode & ios :: out		11135629	1		&			
ANR	11135644	Identifier	mode		11135629	0					
ANR	11135645	Identifier	ios :: out		11135629	1					
ANR	11135646	ReturnStatement	return EOF ;	176:4:2788:2798	11135629	1	True				
ANR	11135647	Identifier	EOF		11135629	0					
ANR	11135648	IfStatement	if ( ! base ( ) )		11135629	1					
ANR	11135649	Condition	! base ( )	178:7:2808:2814	11135629	0	True				
ANR	11135650	UnaryOperationExpression	! base ( )		11135629	0					
ANR	11135651	UnaryOperator	!		11135629	0					
ANR	11135652	CallExpression	base ( )		11135629	1					
ANR	11135653	Callee	base		11135629	0					
ANR	11135654	Identifier	base		11135629	0					
ANR	11135655	ArgumentList			11135629	1					
ANR	11135656	CompoundStatement		6:17:78:78	11135629	1					
ANR	11135657	IfStatement	if ( allocate ( ) == EOF )		11135629	0					
ANR	11135658	Condition	allocate ( ) == EOF	179:9:2829:2845	11135629	0	True				
ANR	11135659	EqualityExpression	allocate ( ) == EOF		11135629	0		==			
ANR	11135660	CallExpression	allocate ( )		11135629	0					
ANR	11135661	Callee	allocate		11135629	0					
ANR	11135662	Identifier	allocate		11135629	0					
ANR	11135663	ArgumentList			11135629	1					
ANR	11135664	Identifier	EOF		11135629	1					
ANR	11135665	ReturnStatement	return EOF ;	180:6:2855:2865	11135629	1	True				
ANR	11135666	Identifier	EOF		11135629	0					
ANR	11135667	ExpressionStatement	"setg ( 0 , 0 , 0 )"	181:4:2871:2882	11135629	1	True				
ANR	11135668	CallExpression	"setg ( 0 , 0 , 0 )"		11135629	0					
ANR	11135669	Callee	setg		11135629	0					
ANR	11135670	Identifier	setg		11135629	0					
ANR	11135671	ArgumentList	0		11135629	1					
ANR	11135672	Argument	0		11135629	0					
ANR	11135673	PrimaryExpression	0		11135629	0					
ANR	11135674	Argument	0		11135629	1					
ANR	11135675	PrimaryExpression	0		11135629	0					
ANR	11135676	Argument	0		11135629	2					
ANR	11135677	PrimaryExpression	0		11135629	0					
ANR	11135678	ElseStatement	else		11135629	0					
ANR	11135679	CompoundStatement		10:9:153:153	11135629	0					
ANR	11135680	IfStatement	if ( in_avail ( ) )		11135629	0					
ANR	11135681	Condition	in_avail ( )	183:8:2903:2912	11135629	0	True				
ANR	11135682	CallExpression	in_avail ( )		11135629	0					
ANR	11135683	Callee	in_avail		11135629	0					
ANR	11135684	Identifier	in_avail		11135629	0					
ANR	11135685	ArgumentList			11135629	1					
ANR	11135686	CompoundStatement		11:20:175:175	11135629	1					
ANR	11135687	ReturnStatement	return EOF ;	184:8:2925:2935	11135629	0	True				
ANR	11135688	Identifier	EOF		11135629	0					
ANR	11135689	IfStatement	if ( out_waiting ( ) )		11135629	1					
ANR	11135690	Condition	out_waiting ( )	186:8:2951:2963	11135629	0	True				
ANR	11135691	CallExpression	out_waiting ( )		11135629	0					
ANR	11135692	Callee	out_waiting		11135629	0					
ANR	11135693	Identifier	out_waiting		11135629	0					
ANR	11135694	ArgumentList			11135629	1					
ANR	11135695	CompoundStatement		14:23:226:226	11135629	1					
ANR	11135696	IfStatement	if ( flushbuf ( ) == EOF )		11135629	0					
ANR	11135697	Condition	flushbuf ( ) == EOF	187:10:2978:2994	11135629	0	True				
ANR	11135698	EqualityExpression	flushbuf ( ) == EOF		11135629	0		==			
ANR	11135699	CallExpression	flushbuf ( )		11135629	0					
ANR	11135700	Callee	flushbuf		11135629	0					
ANR	11135701	Identifier	flushbuf		11135629	0					
ANR	11135702	ArgumentList			11135629	1					
ANR	11135703	Identifier	EOF		11135629	1					
ANR	11135704	ReturnStatement	return EOF ;	188:8:3005:3015	11135629	1	True				
ANR	11135705	Identifier	EOF		11135629	0					
ANR	11135706	IdentifierDeclStatement	int bl = blen ( ) ;	192:2:3030:3045	11135629	2	True				
ANR	11135707	IdentifierDecl	bl = blen ( )		11135629	0					
ANR	11135708	IdentifierDeclType	int		11135629	0					
ANR	11135709	Identifier	bl		11135629	1					
ANR	11135710	AssignmentExpression	bl = blen ( )		11135629	2		=			
ANR	11135711	Identifier	bl		11135629	0					
ANR	11135712	CallExpression	blen ( )		11135629	1					
ANR	11135713	Callee	blen		11135629	0					
ANR	11135714	Identifier	blen		11135629	0					
ANR	11135715	ArgumentList			11135629	1					
ANR	11135716	ExpressionStatement	"setp ( base ( ) , base ( ) + bl )"	193:2:3049:3075	11135629	3	True				
ANR	11135717	CallExpression	"setp ( base ( ) , base ( ) + bl )"		11135629	0					
ANR	11135718	Callee	setp		11135629	0					
ANR	11135719	Identifier	setp		11135629	0					
ANR	11135720	ArgumentList	base ( )		11135629	1					
ANR	11135721	Argument	base ( )		11135629	0					
ANR	11135722	CallExpression	base ( )		11135629	0					
ANR	11135723	Callee	base		11135629	0					
ANR	11135724	Identifier	base		11135629	0					
ANR	11135725	ArgumentList			11135629	1					
ANR	11135726	Argument	base ( ) + bl		11135629	1					
ANR	11135727	AdditiveExpression	base ( ) + bl		11135629	0		+			
ANR	11135728	CallExpression	base ( )		11135629	0					
ANR	11135729	Callee	base		11135629	0					
ANR	11135730	Identifier	base		11135629	0					
ANR	11135731	ArgumentList			11135629	1					
ANR	11135732	Identifier	bl		11135629	1					
ANR	11135733	IfStatement	if ( c != EOF )		11135629	4					
ANR	11135734	Condition	c != EOF	195:7:3085:3092	11135629	0	True				
ANR	11135735	EqualityExpression	c != EOF		11135629	0		!=			
ANR	11135736	Identifier	c		11135629	0					
ANR	11135737	Identifier	EOF		11135629	1					
ANR	11135738	CompoundStatement		23:18:356:356	11135629	1					
ANR	11135739	ExpressionStatement	* pptr ( ) = c	197:4:3103:3114	11135629	0	True				
ANR	11135740	AssignmentExpression	* pptr ( ) = c		11135629	0		=			
ANR	11135741	UnaryOperationExpression	* pptr ( )		11135629	0					
ANR	11135742	UnaryOperator	*		11135629	0					
ANR	11135743	CallExpression	pptr ( )		11135629	1					
ANR	11135744	Callee	pptr		11135629	0					
ANR	11135745	Identifier	pptr		11135629	0					
ANR	11135746	ArgumentList			11135629	1					
ANR	11135747	Identifier	c		11135629	1					
ANR	11135748	ExpressionStatement	pbump ( 1 )	198:4:3120:3128	11135629	1	True				
ANR	11135749	CallExpression	pbump ( 1 )		11135629	0					
ANR	11135750	Callee	pbump		11135629	0					
ANR	11135751	Identifier	pbump		11135629	0					
ANR	11135752	ArgumentList	1		11135629	1					
ANR	11135753	Argument	1		11135629	0					
ANR	11135754	PrimaryExpression	1		11135629	0					
ANR	11135755	ReturnStatement	return 0 ;	202:2:3138:3146	11135629	5	True				
ANR	11135756	PrimaryExpression	0		11135629	0					
ANR	11135757	ReturnType	int		11135629	1					
ANR	11135758	Identifier	gzfilebuf :: overflow		11135629	2					
ANR	11135759	ParameterList	int c		11135629	3					
ANR	11135760	Parameter	int c	173:25:2731:2735	11135629	0	True				
ANR	11135761	ParameterType	int		11135629	0					
ANR	11135762	Identifier	c		11135629	1					
ANR	11135763	CFGEntryNode	ENTRY		11135629		True				
ANR	11135764	CFGExitNode	EXIT		11135629		True				
ANR	11135765	Symbol	c		11135629						
ANR	11135766	Symbol	is_open		11135629						
ANR	11135767	Symbol	in_avail		11135629						
ANR	11135768	Symbol	out_waiting		11135629						
ANR	11135769	Symbol	flushbuf		11135629						
ANR	11135770	Symbol	bl		11135629						
ANR	11135771	Symbol	pptr		11135629						
ANR	11135772	Symbol	mode		11135629						
ANR	11135773	Symbol	allocate		11135629						
ANR	11135774	Symbol	ios :: out		11135629						
ANR	11135775	Symbol	* pptr		11135629						
ANR	11135776	Symbol	* pptr ( )		11135629						
ANR	11135777	Symbol	EOF		11135629						
ANR	11135778	Symbol	blen		11135629						
ANR	11135779	Symbol	base		11135629						
ANR	11135780	Function	gzfilebuf :: sync	206:0:3152:3274							
ANR	11135781	FunctionDef	gzfilebuf :: sync ()		11135780	0					
ANR	11135782	CompoundStatement		206:22:3174:3274	11135780	0					
ANR	11135783	IfStatement	if ( ! is_open ( ) )		11135780	0					
ANR	11135784	Condition	! is_open ( )	208:7:3184:3193	11135780	0	True				
ANR	11135785	UnaryOperationExpression	! is_open ( )		11135780	0					
ANR	11135786	UnaryOperator	!		11135780	0					
ANR	11135787	CallExpression	is_open ( )		11135780	1					
ANR	11135788	Callee	is_open		11135780	0					
ANR	11135789	Identifier	is_open		11135780	0					
ANR	11135790	ArgumentList			11135780	1					
ANR	11135791	ReturnStatement	return EOF ;	209:4:3201:3211	11135780	1	True				
ANR	11135792	Identifier	EOF		11135780	0					
ANR	11135793	IfStatement	if ( out_waiting ( ) )		11135780	1					
ANR	11135794	Condition	out_waiting ( )	211:7:3221:3233	11135780	0	True				
ANR	11135795	CallExpression	out_waiting ( )		11135780	0					
ANR	11135796	Callee	out_waiting		11135780	0					
ANR	11135797	Identifier	out_waiting		11135780	0					
ANR	11135798	ArgumentList			11135780	1					
ANR	11135799	ReturnStatement	return flushbuf ( ) ;	212:4:3241:3258	11135780	1	True				
ANR	11135800	CallExpression	flushbuf ( )		11135780	0					
ANR	11135801	Callee	flushbuf		11135780	0					
ANR	11135802	Identifier	flushbuf		11135780	0					
ANR	11135803	ArgumentList			11135780	1					
ANR	11135804	ReturnStatement	return 0 ;	214:2:3263:3271	11135780	2	True				
ANR	11135805	PrimaryExpression	0		11135780	0					
ANR	11135806	ReturnType	int		11135780	1					
ANR	11135807	Identifier	gzfilebuf :: sync		11135780	2					
ANR	11135808	ParameterList			11135780	3					
ANR	11135809	CFGEntryNode	ENTRY		11135780		True				
ANR	11135810	CFGExitNode	EXIT		11135780		True				
ANR	11135811	Symbol	is_open		11135780						
ANR	11135812	Symbol	out_waiting		11135780						
ANR	11135813	Symbol	flushbuf		11135780						
ANR	11135814	Symbol	EOF		11135780						
ANR	11135815	Function	gzfilebuf :: flushbuf	218:0:3277:3439							
ANR	11135816	FunctionDef	gzfilebuf :: flushbuf ()		11135815	0					
ANR	11135817	CompoundStatement		218:26:3303:3439	11135815	0					
ANR	11135818	IdentifierDeclStatement	int n ;	220:2:3308:3313	11135815	0	True				
ANR	11135819	IdentifierDecl	n		11135815	0					
ANR	11135820	IdentifierDeclType	int		11135815	0					
ANR	11135821	Identifier	n		11135815	1					
ANR	11135822	IdentifierDeclStatement	char * q ;	221:2:3317:3324	11135815	1	True				
ANR	11135823	IdentifierDecl	* q		11135815	0					
ANR	11135824	IdentifierDeclType	char *		11135815	0					
ANR	11135825	Identifier	q		11135815	1					
ANR	11135826	ExpressionStatement	q = pbase ( )	223:2:3329:3340	11135815	2	True				
ANR	11135827	AssignmentExpression	q = pbase ( )		11135815	0		=			
ANR	11135828	Identifier	q		11135815	0					
ANR	11135829	CallExpression	pbase ( )		11135815	1					
ANR	11135830	Callee	pbase		11135815	0					
ANR	11135831	Identifier	pbase		11135815	0					
ANR	11135832	ArgumentList			11135815	1					
ANR	11135833	ExpressionStatement	n = pptr ( ) - q	224:2:3344:3358	11135815	3	True				
ANR	11135834	AssignmentExpression	n = pptr ( ) - q		11135815	0		=			
ANR	11135835	Identifier	n		11135815	0					
ANR	11135836	AdditiveExpression	pptr ( ) - q		11135815	1		-			
ANR	11135837	CallExpression	pptr ( )		11135815	0					
ANR	11135838	Callee	pptr		11135815	0					
ANR	11135839	Identifier	pptr		11135815	0					
ANR	11135840	ArgumentList			11135815	1					
ANR	11135841	Identifier	q		11135815	1					
ANR	11135842	IfStatement	"if ( gzwrite ( file , q , n ) < n )"		11135815	4					
ANR	11135843	Condition	"gzwrite ( file , q , n ) < n"	226:7:3368:3391	11135815	0	True				
ANR	11135844	RelationalExpression	"gzwrite ( file , q , n ) < n"		11135815	0		<			
ANR	11135845	CallExpression	"gzwrite ( file , q , n )"		11135815	0					
ANR	11135846	Callee	gzwrite		11135815	0					
ANR	11135847	Identifier	gzwrite		11135815	0					
ANR	11135848	ArgumentList	file		11135815	1					
ANR	11135849	Argument	file		11135815	0					
ANR	11135850	Identifier	file		11135815	0					
ANR	11135851	Argument	q		11135815	1					
ANR	11135852	Identifier	q		11135815	0					
ANR	11135853	Argument	n		11135815	2					
ANR	11135854	Identifier	n		11135815	0					
ANR	11135855	Identifier	n		11135815	1					
ANR	11135856	ReturnStatement	return EOF ;	227:4:3399:3409	11135815	1	True				
ANR	11135857	Identifier	EOF		11135815	0					
ANR	11135858	ExpressionStatement	"setp ( 0 , 0 )"	229:2:3414:3423	11135815	5	True				
ANR	11135859	CallExpression	"setp ( 0 , 0 )"		11135815	0					
ANR	11135860	Callee	setp		11135815	0					
ANR	11135861	Identifier	setp		11135815	0					
ANR	11135862	ArgumentList	0		11135815	1					
ANR	11135863	Argument	0		11135815	0					
ANR	11135864	PrimaryExpression	0		11135815	0					
ANR	11135865	Argument	0		11135815	1					
ANR	11135866	PrimaryExpression	0		11135815	0					
ANR	11135867	ReturnStatement	return 0 ;	231:2:3428:3436	11135815	6	True				
ANR	11135868	PrimaryExpression	0		11135815	0					
ANR	11135869	ReturnType	int		11135815	1					
ANR	11135870	Identifier	gzfilebuf :: flushbuf		11135815	2					
ANR	11135871	ParameterList			11135815	3					
ANR	11135872	CFGEntryNode	ENTRY		11135815		True				
ANR	11135873	CFGExitNode	EXIT		11135815		True				
ANR	11135874	Symbol	q		11135815						
ANR	11135875	Symbol	file		11135815						
ANR	11135876	Symbol	pbase		11135815						
ANR	11135877	Symbol	pptr		11135815						
ANR	11135878	Symbol	EOF		11135815						
ANR	11135879	Symbol	n		11135815						
ANR	11135880	Symbol	gzwrite		11135815						
ANR	11135881	Function	gzfilebuf :: fillbuf	235:0:3442:3652							
ANR	11135882	FunctionDef	gzfilebuf :: fillbuf ()		11135881	0					
ANR	11135883	CompoundStatement		235:25:3467:3652	11135881	0					
ANR	11135884	IdentifierDeclStatement	int required ;	237:2:3472:3484	11135881	0	True				
ANR	11135885	IdentifierDecl	required		11135881	0					
ANR	11135886	IdentifierDeclType	int		11135881	0					
ANR	11135887	Identifier	required		11135881	1					
ANR	11135888	IdentifierDeclStatement	char * p ;	238:2:3488:3495	11135881	1	True				
ANR	11135889	IdentifierDecl	* p		11135881	0					
ANR	11135890	IdentifierDeclType	char *		11135881	0					
ANR	11135891	Identifier	p		11135881	1					
ANR	11135892	ExpressionStatement	p = base ( )	240:2:3500:3510	11135881	2	True				
ANR	11135893	AssignmentExpression	p = base ( )		11135881	0		=			
ANR	11135894	Identifier	p		11135881	0					
ANR	11135895	CallExpression	base ( )		11135881	1					
ANR	11135896	Callee	base		11135881	0					
ANR	11135897	Identifier	base		11135881	0					
ANR	11135898	ArgumentList			11135881	1					
ANR	11135899	ExpressionStatement	required = blen ( )	242:2:3515:3532	11135881	3	True				
ANR	11135900	AssignmentExpression	required = blen ( )		11135881	0		=			
ANR	11135901	Identifier	required		11135881	0					
ANR	11135902	CallExpression	blen ( )		11135881	1					
ANR	11135903	Callee	blen		11135881	0					
ANR	11135904	Identifier	blen		11135881	0					
ANR	11135905	ArgumentList			11135881	1					
ANR	11135906	IdentifierDeclStatement	"int t = gzread ( file , p , required ) ;"	244:2:3537:3572	11135881	4	True				
ANR	11135907	IdentifierDecl	"t = gzread ( file , p , required )"		11135881	0					
ANR	11135908	IdentifierDeclType	int		11135881	0					
ANR	11135909	Identifier	t		11135881	1					
ANR	11135910	AssignmentExpression	"t = gzread ( file , p , required )"		11135881	2		=			
ANR	11135911	Identifier	t		11135881	0					
ANR	11135912	CallExpression	"gzread ( file , p , required )"		11135881	1					
ANR	11135913	Callee	gzread		11135881	0					
ANR	11135914	Identifier	gzread		11135881	0					
ANR	11135915	ArgumentList	file		11135881	1					
ANR	11135916	Argument	file		11135881	0					
ANR	11135917	Identifier	file		11135881	0					
ANR	11135918	Argument	p		11135881	1					
ANR	11135919	Identifier	p		11135881	0					
ANR	11135920	Argument	required		11135881	2					
ANR	11135921	Identifier	required		11135881	0					
ANR	11135922	IfStatement	if ( t <= 0 )		11135881	5					
ANR	11135923	Condition	t <= 0	246:7:3582:3587	11135881	0	True				
ANR	11135924	RelationalExpression	t <= 0		11135881	0		<=			
ANR	11135925	Identifier	t		11135881	0					
ANR	11135926	PrimaryExpression	0		11135881	1					
ANR	11135927	ReturnStatement	return EOF ;	246:15:3590:3600	11135881	1	True				
ANR	11135928	Identifier	EOF		11135881	0					
ANR	11135929	ExpressionStatement	"setg ( base ( ) , base ( ) , base ( ) + t )"	248:2:3605:3636	11135881	6	True				
ANR	11135930	CallExpression	"setg ( base ( ) , base ( ) , base ( ) + t )"		11135881	0					
ANR	11135931	Callee	setg		11135881	0					
ANR	11135932	Identifier	setg		11135881	0					
ANR	11135933	ArgumentList	base ( )		11135881	1					
ANR	11135934	Argument	base ( )		11135881	0					
ANR	11135935	CallExpression	base ( )		11135881	0					
ANR	11135936	Callee	base		11135881	0					
ANR	11135937	Identifier	base		11135881	0					
ANR	11135938	ArgumentList			11135881	1					
ANR	11135939	Argument	base ( )		11135881	1					
ANR	11135940	CallExpression	base ( )		11135881	0					
ANR	11135941	Callee	base		11135881	0					
ANR	11135942	Identifier	base		11135881	0					
ANR	11135943	ArgumentList			11135881	1					
ANR	11135944	Argument	base ( ) + t		11135881	2					
ANR	11135945	AdditiveExpression	base ( ) + t		11135881	0		+			
ANR	11135946	CallExpression	base ( )		11135881	0					
ANR	11135947	Callee	base		11135881	0					
ANR	11135948	Identifier	base		11135881	0					
ANR	11135949	ArgumentList			11135881	1					
ANR	11135950	Identifier	t		11135881	1					
ANR	11135951	ReturnStatement	return t ;	250:2:3641:3649	11135881	7	True				
ANR	11135952	Identifier	t		11135881	0					
ANR	11135953	ReturnType	int		11135881	1					
ANR	11135954	Identifier	gzfilebuf :: fillbuf		11135881	2					
ANR	11135955	ParameterList			11135881	3					
ANR	11135956	CFGEntryNode	ENTRY		11135881		True				
ANR	11135957	CFGExitNode	EXIT		11135881		True				
ANR	11135958	Symbol	p		11135881						
ANR	11135959	Symbol	file		11135881						
ANR	11135960	Symbol	t		11135881						
ANR	11135961	Symbol	gzread		11135881						
ANR	11135962	Symbol	blen		11135881						
ANR	11135963	Symbol	EOF		11135881						
ANR	11135964	Symbol	required		11135881						
ANR	11135965	Symbol	base		11135881						
ANR	11135966	Function	gzfilestream_common :: gzfilestream_common	254:0:3655:3740							
ANR	11135967	FunctionDef	gzfilestream_common :: gzfilestream_common ()		11135966	0					
ANR	11135968	CompoundStatement		256:0:3738:3740	11135966	0					
ANR	11135969	Identifier	gzfilestream_common :: gzfilestream_common		11135966	1					
ANR	11135970	ParameterList			11135966	2					
ANR	11135971	CFGEntryNode	ENTRY		11135966		True				
ANR	11135972	CFGExitNode	EXIT		11135966		True				
ANR	11135973	Function	gzfilestream_common :: ~gzfilestream_common	258:0:3743:3789							
ANR	11135974	FunctionDef	gzfilestream_common :: ~gzfilestream_common ()		11135973	0					
ANR	11135975	CompoundStatement		259:0:3787:3789	11135973	0					
ANR	11135976	Identifier	gzfilestream_common :: ~gzfilestream_common		11135973	1					
ANR	11135977	ParameterList			11135973	2					
ANR	11135978	CFGEntryNode	ENTRY		11135973		True				
ANR	11135979	CFGExitNode	EXIT		11135973		True				
ANR	11135980	Function	gzfilestream_common :: attach	261:0:3792:3951							
ANR	11135981	FunctionDef	"gzfilestream_common :: attach (int fd , int io_mode)"		11135980	0					
ANR	11135982	CompoundStatement		261:56:3848:3951	11135980	0					
ANR	11135983	IfStatement	"if ( ! buffer . attach ( fd , io_mode ) )"		11135980	0					
ANR	11135984	Condition	"! buffer . attach ( fd , io_mode )"	263:7:3858:3885	11135980	0	True				
ANR	11135985	UnaryOperationExpression	"! buffer . attach ( fd , io_mode )"		11135980	0					
ANR	11135986	UnaryOperator	!		11135980	0					
ANR	11135987	CallExpression	"buffer . attach ( fd , io_mode )"		11135980	1					
ANR	11135988	Callee	buffer . attach		11135980	0					
ANR	11135989	MemberAccess	buffer . attach		11135980	0					
ANR	11135990	Identifier	buffer		11135980	0					
ANR	11135991	Identifier	attach		11135980	1					
ANR	11135992	ArgumentList	fd		11135980	1					
ANR	11135993	Argument	fd		11135980	0					
ANR	11135994	Identifier	fd		11135980	0					
ANR	11135995	Argument	io_mode		11135980	1					
ANR	11135996	Identifier	io_mode		11135980	0					
ANR	11135997	ExpressionStatement	clear ( ios :: failbit | ios :: badbit )	264:4:3893:3928	11135980	1	True				
ANR	11135998	CallExpression	clear ( ios :: failbit | ios :: badbit )		11135980	0					
ANR	11135999	Callee	clear		11135980	0					
ANR	11136000	Identifier	clear		11135980	0					
ANR	11136001	ArgumentList	ios :: failbit | ios :: badbit		11135980	1					
ANR	11136002	Argument	ios :: failbit | ios :: badbit		11135980	0					
ANR	11136003	InclusiveOrExpression	ios :: failbit | ios :: badbit		11135980	0		|			
ANR	11136004	Identifier	ios :: failbit		11135980	0					
ANR	11136005	Identifier	ios :: badbit		11135980	1					
ANR	11136006	ElseStatement	else		11135980	0					
ANR	11136007	ExpressionStatement	clear ( )	266:4:3941:3948	11135980	0	True				
ANR	11136008	CallExpression	clear ( )		11135980	0					
ANR	11136009	Callee	clear		11135980	0					
ANR	11136010	Identifier	clear		11135980	0					
ANR	11136011	ArgumentList			11135980	1					
ANR	11136012	ReturnType	void		11135980	1					
ANR	11136013	Identifier	gzfilestream_common :: attach		11135980	2					
ANR	11136014	ParameterList	"int fd , int io_mode"		11135980	3					
ANR	11136015	Parameter	int fd	261:34:3826:3831	11135980	0	True				
ANR	11136016	ParameterType	int		11135980	0					
ANR	11136017	Identifier	fd		11135980	1					
ANR	11136018	Parameter	int io_mode	261:42:3834:3844	11135980	1	True				
ANR	11136019	ParameterType	int		11135980	0					
ANR	11136020	Identifier	io_mode		11135980	1					
ANR	11136021	CFGEntryNode	ENTRY		11135980		True				
ANR	11136022	CFGExitNode	EXIT		11135980		True				
ANR	11136023	Symbol	ios :: failbit		11135980						
ANR	11136024	Symbol	buffer . attach		11135980						
ANR	11136025	Symbol	ios :: badbit		11135980						
ANR	11136026	Symbol	io_mode		11135980						
ANR	11136027	Symbol	buffer		11135980						
ANR	11136028	Symbol	fd		11135980						
ANR	11136029	Function	gzfilestream_common :: open	270:0:3954:4122							
ANR	11136030	FunctionDef	"gzfilestream_common :: open (const char * name , int io_mode)"		11136029	0					
ANR	11136031	CompoundStatement		270:64:4018:4122	11136029	0					
ANR	11136032	IfStatement	"if ( ! buffer . open ( name , io_mode ) )"		11136029	0					
ANR	11136033	Condition	"! buffer . open ( name , io_mode )"	272:7:4028:4056	11136029	0	True				
ANR	11136034	UnaryOperationExpression	"! buffer . open ( name , io_mode )"		11136029	0					
ANR	11136035	UnaryOperator	!		11136029	0					
ANR	11136036	CallExpression	"buffer . open ( name , io_mode )"		11136029	1					
ANR	11136037	Callee	buffer . open		11136029	0					
ANR	11136038	MemberAccess	buffer . open		11136029	0					
ANR	11136039	Identifier	buffer		11136029	0					
ANR	11136040	Identifier	open		11136029	1					
ANR	11136041	ArgumentList	name		11136029	1					
ANR	11136042	Argument	name		11136029	0					
ANR	11136043	Identifier	name		11136029	0					
ANR	11136044	Argument	io_mode		11136029	1					
ANR	11136045	Identifier	io_mode		11136029	0					
ANR	11136046	ExpressionStatement	clear ( ios :: failbit | ios :: badbit )	273:4:4064:4099	11136029	1	True				
ANR	11136047	CallExpression	clear ( ios :: failbit | ios :: badbit )		11136029	0					
ANR	11136048	Callee	clear		11136029	0					
ANR	11136049	Identifier	clear		11136029	0					
ANR	11136050	ArgumentList	ios :: failbit | ios :: badbit		11136029	1					
ANR	11136051	Argument	ios :: failbit | ios :: badbit		11136029	0					
ANR	11136052	InclusiveOrExpression	ios :: failbit | ios :: badbit		11136029	0		|			
ANR	11136053	Identifier	ios :: failbit		11136029	0					
ANR	11136054	Identifier	ios :: badbit		11136029	1					
ANR	11136055	ElseStatement	else		11136029	0					
ANR	11136056	ExpressionStatement	clear ( )	275:4:4112:4119	11136029	0	True				
ANR	11136057	CallExpression	clear ( )		11136029	0					
ANR	11136058	Callee	clear		11136029	0					
ANR	11136059	Identifier	clear		11136029	0					
ANR	11136060	ArgumentList			11136029	1					
ANR	11136061	ReturnType	void		11136029	1					
ANR	11136062	Identifier	gzfilestream_common :: open		11136029	2					
ANR	11136063	ParameterList	"const char * name , int io_mode"		11136029	3					
ANR	11136064	Parameter	const char * name	270:32:3986:4001	11136029	0	True				
ANR	11136065	ParameterType	const char *		11136029	0					
ANR	11136066	Identifier	name		11136029	1					
ANR	11136067	Parameter	int io_mode	270:50:4004:4014	11136029	1	True				
ANR	11136068	ParameterType	int		11136029	0					
ANR	11136069	Identifier	io_mode		11136029	1					
ANR	11136070	CFGEntryNode	ENTRY		11136029		True				
ANR	11136071	CFGExitNode	EXIT		11136029		True				
ANR	11136072	Symbol	buffer . open		11136029						
ANR	11136073	Symbol	ios :: failbit		11136029						
ANR	11136074	Symbol	name		11136029						
ANR	11136075	Symbol	ios :: badbit		11136029						
ANR	11136076	Symbol	io_mode		11136029						
ANR	11136077	Symbol	buffer		11136029						
ANR	11136078	Function	gzfilestream_common :: close	279:0:4125:4229							
ANR	11136079	FunctionDef	gzfilestream_common :: close ()		11136078	0					
ANR	11136080	CompoundStatement		279:34:4159:4229	11136078	0					
ANR	11136081	IfStatement	if ( ! buffer . close ( ) )		11136078	0					
ANR	11136082	Condition	! buffer . close ( )	281:7:4169:4183	11136078	0	True				
ANR	11136083	UnaryOperationExpression	! buffer . close ( )		11136078	0					
ANR	11136084	UnaryOperator	!		11136078	0					
ANR	11136085	CallExpression	buffer . close ( )		11136078	1					
ANR	11136086	Callee	buffer . close		11136078	0					
ANR	11136087	MemberAccess	buffer . close		11136078	0					
ANR	11136088	Identifier	buffer		11136078	0					
ANR	11136089	Identifier	close		11136078	1					
ANR	11136090	ArgumentList			11136078	1					
ANR	11136091	ExpressionStatement	clear ( ios :: failbit | ios :: badbit )	282:4:4191:4226	11136078	1	True				
ANR	11136092	CallExpression	clear ( ios :: failbit | ios :: badbit )		11136078	0					
ANR	11136093	Callee	clear		11136078	0					
ANR	11136094	Identifier	clear		11136078	0					
ANR	11136095	ArgumentList	ios :: failbit | ios :: badbit		11136078	1					
ANR	11136096	Argument	ios :: failbit | ios :: badbit		11136078	0					
ANR	11136097	InclusiveOrExpression	ios :: failbit | ios :: badbit		11136078	0		|			
ANR	11136098	Identifier	ios :: failbit		11136078	0					
ANR	11136099	Identifier	ios :: badbit		11136078	1					
ANR	11136100	ReturnType	void		11136078	1					
ANR	11136101	Identifier	gzfilestream_common :: close		11136078	2					
ANR	11136102	ParameterList			11136078	3					
ANR	11136103	CFGEntryNode	ENTRY		11136078		True				
ANR	11136104	CFGExitNode	EXIT		11136078		True				
ANR	11136105	Symbol	ios :: failbit		11136078						
ANR	11136106	Symbol	ios :: badbit		11136078						
ANR	11136107	Symbol	buffer		11136078						
ANR	11136108	Symbol	buffer . close		11136078						
ANR	11136109	Function	gzfilestream_common :: rdbuf	286:0:4232:4292							
ANR	11136110	FunctionDef	gzfilestream_common :: rdbuf ()		11136109	0					
ANR	11136111	CompoundStatement		287:0:4272:4292	11136109	0					
ANR	11136112	ReturnStatement	return & buffer ;	288:2:4276:4290	11136109	0	True				
ANR	11136113	UnaryOperationExpression	& buffer		11136109	0					
ANR	11136114	UnaryOperator	&		11136109	0					
ANR	11136115	Identifier	buffer		11136109	1					
ANR	11136116	ReturnType	gzfilebuf *		11136109	1					
ANR	11136117	Identifier	gzfilestream_common :: rdbuf		11136109	2					
ANR	11136118	ParameterList			11136109	3					
ANR	11136119	CFGEntryNode	ENTRY		11136109		True				
ANR	11136120	CFGExitNode	EXIT		11136109		True				
ANR	11136121	Symbol	& buffer		11136109						
ANR	11136122	Function	gzifstream :: gzifstream	291:0:4295:4386							
ANR	11136123	FunctionDef	gzifstream :: gzifstream ()		11136122	0					
ANR	11136124	CompoundStatement		293:0:4360:4386	11136122	0					
ANR	11136125	ExpressionStatement	clear ( ios :: badbit )	294:2:4364:4384	11136122	0	True				
ANR	11136126	CallExpression	clear ( ios :: badbit )		11136122	0					
ANR	11136127	Callee	clear		11136122	0					
ANR	11136128	Identifier	clear		11136122	0					
ANR	11136129	ArgumentList	ios :: badbit		11136122	1					
ANR	11136130	Argument	ios :: badbit		11136122	0					
ANR	11136131	Identifier	ios :: badbit		11136122	0					
ANR	11136132	Identifier	gzifstream :: gzifstream		11136122	1					
ANR	11136133	ParameterList			11136122	2					
ANR	11136134	CFGEntryNode	ENTRY		11136122		True				
ANR	11136135	CFGExitNode	EXIT		11136122		True				
ANR	11136136	Symbol	ios :: badbit		11136122						
ANR	11136137	Function	gzifstream :: gzifstream	297:0:4389:4533							
ANR	11136138	FunctionDef	"gzifstream :: gzifstream (const char * name , int io_mode)"		11136137	0					
ANR	11136139	CompoundStatement		299:0:4485:4533	11136137	0					
ANR	11136140	ExpressionStatement	"gzfilestream_common :: open ( name , io_mode )"	300:2:4489:4531	11136137	0	True				
ANR	11136141	CallExpression	"gzfilestream_common :: open ( name , io_mode )"		11136137	0					
ANR	11136142	Callee	gzfilestream_common :: open		11136137	0					
ANR	11136143	Identifier	gzfilestream_common :: open		11136137	0					
ANR	11136144	ArgumentList	name		11136137	1					
ANR	11136145	Argument	name		11136137	0					
ANR	11136146	Identifier	name		11136137	0					
ANR	11136147	Argument	io_mode		11136137	1					
ANR	11136148	Identifier	io_mode		11136137	0					
ANR	11136149	Identifier	gzifstream :: gzifstream		11136137	1					
ANR	11136150	ParameterList	"const char * name , int io_mode"		11136137	2					
ANR	11136151	Parameter	const char * name	297:24:4413:4428	11136137	0	True				
ANR	11136152	ParameterType	const char *		11136137	0					
ANR	11136153	Identifier	name		11136137	1					
ANR	11136154	Parameter	int io_mode	297:42:4431:4441	11136137	1	True				
ANR	11136155	ParameterType	int		11136137	0					
ANR	11136156	Identifier	io_mode		11136137	1					
ANR	11136157	CFGEntryNode	ENTRY		11136137		True				
ANR	11136158	CFGExitNode	EXIT		11136137		True				
ANR	11136159	Symbol	name		11136137						
ANR	11136160	Symbol	io_mode		11136137						
ANR	11136161	Function	gzifstream :: gzifstream	303:0:4536:4670							
ANR	11136162	FunctionDef	"gzifstream :: gzifstream (int fd , int io_mode)"		11136161	0					
ANR	11136163	CompoundStatement		305:0:4622:4670	11136161	0					
ANR	11136164	ExpressionStatement	"gzfilestream_common :: attach ( fd , io_mode )"	306:2:4626:4668	11136161	0	True				
ANR	11136165	CallExpression	"gzfilestream_common :: attach ( fd , io_mode )"		11136161	0					
ANR	11136166	Callee	gzfilestream_common :: attach		11136161	0					
ANR	11136167	Identifier	gzfilestream_common :: attach		11136161	0					
ANR	11136168	ArgumentList	fd		11136161	1					
ANR	11136169	Argument	fd		11136161	0					
ANR	11136170	Identifier	fd		11136161	0					
ANR	11136171	Argument	io_mode		11136161	1					
ANR	11136172	Identifier	io_mode		11136161	0					
ANR	11136173	Identifier	gzifstream :: gzifstream		11136161	1					
ANR	11136174	ParameterList	"int fd , int io_mode"		11136161	2					
ANR	11136175	Parameter	int fd	303:24:4560:4565	11136161	0	True				
ANR	11136176	ParameterType	int		11136161	0					
ANR	11136177	Identifier	fd		11136161	1					
ANR	11136178	Parameter	int io_mode	303:32:4568:4578	11136161	1	True				
ANR	11136179	ParameterType	int		11136161	0					
ANR	11136180	Identifier	io_mode		11136161	1					
ANR	11136181	CFGEntryNode	ENTRY		11136161		True				
ANR	11136182	CFGExitNode	EXIT		11136161		True				
ANR	11136183	Symbol	io_mode		11136161						
ANR	11136184	Symbol	fd		11136161						
ANR	11136185	Function	gzifstream :: ~gzifstream	309:0:4673:4701							
ANR	11136186	FunctionDef	gzifstream :: ~gzifstream ()		11136185	0					
ANR	11136187	CompoundStatement		309:26:4699:4701	11136185	0					
ANR	11136188	Identifier	gzifstream :: ~gzifstream		11136185	1					
ANR	11136189	ParameterList			11136185	2					
ANR	11136190	CFGEntryNode	ENTRY		11136185		True				
ANR	11136191	CFGExitNode	EXIT		11136185		True				
ANR	11136192	Function	gzofstream :: gzofstream	311:0:4704:4795							
ANR	11136193	FunctionDef	gzofstream :: gzofstream ()		11136192	0					
ANR	11136194	CompoundStatement		313:0:4769:4795	11136192	0					
ANR	11136195	ExpressionStatement	clear ( ios :: badbit )	314:2:4773:4793	11136192	0	True				
ANR	11136196	CallExpression	clear ( ios :: badbit )		11136192	0					
ANR	11136197	Callee	clear		11136192	0					
ANR	11136198	Identifier	clear		11136192	0					
ANR	11136199	ArgumentList	ios :: badbit		11136192	1					
ANR	11136200	Argument	ios :: badbit		11136192	0					
ANR	11136201	Identifier	ios :: badbit		11136192	0					
ANR	11136202	Identifier	gzofstream :: gzofstream		11136192	1					
ANR	11136203	ParameterList			11136192	2					
ANR	11136204	CFGEntryNode	ENTRY		11136192		True				
ANR	11136205	CFGExitNode	EXIT		11136192		True				
ANR	11136206	Symbol	ios :: badbit		11136192						
ANR	11136207	Function	gzofstream :: gzofstream	317:0:4798:4942							
ANR	11136208	FunctionDef	"gzofstream :: gzofstream (const char * name , int io_mode)"		11136207	0					
ANR	11136209	CompoundStatement		319:0:4894:4942	11136207	0					
ANR	11136210	ExpressionStatement	"gzfilestream_common :: open ( name , io_mode )"	320:2:4898:4940	11136207	0	True				
ANR	11136211	CallExpression	"gzfilestream_common :: open ( name , io_mode )"		11136207	0					
ANR	11136212	Callee	gzfilestream_common :: open		11136207	0					
ANR	11136213	Identifier	gzfilestream_common :: open		11136207	0					
ANR	11136214	ArgumentList	name		11136207	1					
ANR	11136215	Argument	name		11136207	0					
ANR	11136216	Identifier	name		11136207	0					
ANR	11136217	Argument	io_mode		11136207	1					
ANR	11136218	Identifier	io_mode		11136207	0					
ANR	11136219	Identifier	gzofstream :: gzofstream		11136207	1					
ANR	11136220	ParameterList	"const char * name , int io_mode"		11136207	2					
ANR	11136221	Parameter	const char * name	317:24:4822:4837	11136207	0	True				
ANR	11136222	ParameterType	const char *		11136207	0					
ANR	11136223	Identifier	name		11136207	1					
ANR	11136224	Parameter	int io_mode	317:42:4840:4850	11136207	1	True				
ANR	11136225	ParameterType	int		11136207	0					
ANR	11136226	Identifier	io_mode		11136207	1					
ANR	11136227	CFGEntryNode	ENTRY		11136207		True				
ANR	11136228	CFGExitNode	EXIT		11136207		True				
ANR	11136229	Symbol	name		11136207						
ANR	11136230	Symbol	io_mode		11136207						
ANR	11136231	Function	gzofstream :: gzofstream	323:0:4945:5079							
ANR	11136232	FunctionDef	"gzofstream :: gzofstream (int fd , int io_mode)"		11136231	0					
ANR	11136233	CompoundStatement		325:0:5031:5079	11136231	0					
ANR	11136234	ExpressionStatement	"gzfilestream_common :: attach ( fd , io_mode )"	326:2:5035:5077	11136231	0	True				
ANR	11136235	CallExpression	"gzfilestream_common :: attach ( fd , io_mode )"		11136231	0					
ANR	11136236	Callee	gzfilestream_common :: attach		11136231	0					
ANR	11136237	Identifier	gzfilestream_common :: attach		11136231	0					
ANR	11136238	ArgumentList	fd		11136231	1					
ANR	11136239	Argument	fd		11136231	0					
ANR	11136240	Identifier	fd		11136231	0					
ANR	11136241	Argument	io_mode		11136231	1					
ANR	11136242	Identifier	io_mode		11136231	0					
ANR	11136243	Identifier	gzofstream :: gzofstream		11136231	1					
ANR	11136244	ParameterList	"int fd , int io_mode"		11136231	2					
ANR	11136245	Parameter	int fd	323:24:4969:4974	11136231	0	True				
ANR	11136246	ParameterType	int		11136231	0					
ANR	11136247	Identifier	fd		11136231	1					
ANR	11136248	Parameter	int io_mode	323:32:4977:4987	11136231	1	True				
ANR	11136249	ParameterType	int		11136231	0					
ANR	11136250	Identifier	io_mode		11136231	1					
ANR	11136251	CFGEntryNode	ENTRY		11136231		True				
ANR	11136252	CFGExitNode	EXIT		11136231		True				
ANR	11136253	Symbol	io_mode		11136231						
ANR	11136254	Symbol	fd		11136231						
ANR	11136255	Function	gzofstream :: ~gzofstream	329:0:5082:5110							
ANR	11136256	FunctionDef	gzofstream :: ~gzofstream ()		11136255	0					
ANR	11136257	CompoundStatement		329:26:5108:5110	11136255	0					
ANR	11136258	Identifier	gzofstream :: ~gzofstream		11136255	1					
ANR	11136259	ParameterList			11136255	2					
ANR	11136260	CFGEntryNode	ENTRY		11136255		True				
ANR	11136261	CFGExitNode	EXIT		11136255		True				
