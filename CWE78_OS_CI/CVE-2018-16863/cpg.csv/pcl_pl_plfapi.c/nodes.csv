command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8193540	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pl_plfapi.c								
ANR	8193541	DeclStmt									
ANR	8193542	Decl							const char	const char *	UFSTFONTDIR
ANR	8193543	DeclStmt									
ANR	8193544	Decl							const char	const char *	UFSTFONTDIR
ANR	8193545	DeclStmt									
ANR	8193546	Decl							const char	const char *	UFSTFCOS
ANR	8193547	DeclStmt									
ANR	8193548	Decl							const char	const char *	UFSTFCOS
ANR	8193549	DeclStmt									
ANR	8193550	Decl							const char	const char *	UFSTPLUGINS
ANR	8193551	DeclStmt									
ANR	8193552	Decl							const char	const char *	UFSTDIRPARM
ANR	8193553	DeclStmt									
ANR	8193554	Decl							const char	const char *	UFSTPLUGINPARM
ANR	8193555	DeclStmt									
ANR	8193556	Decl							const char	const char	gp_file_name_list_separator
ANR	8193557	DeclStmt									
ANR	8193558	Decl							ulong	"ulong ( gs_fapi_font * ff , gs_fapi_font_feature var_id , int index )"	pl_fapi_get_long
ANR	8193559	DeclStmt									
ANR	8193560	Decl							int	"int ( gs_text_enum_t * penum , gs_font_base * pbfont , gs_string * charstring , gs_string * name , int ccode , gs_string * enc_char_name , char * font_file_path , gs_fapi_char_ref * cr , bool bCID )"	pl_fapi_get_cid
ANR	8193561	DeclStmt									
ANR	8193562	Decl							int	"int ( gs_fapi_font * ff , int char_code , byte * buf , ushort buf_length )"	pl_fapi_get_glyph
ANR	8193563	DeclStmt									
ANR	8193564	Decl							ushort	"ushort ( gs_fapi_font * ff , void * buf , int buf_size )"	pl_fapi_serialize_tt_font
ANR	8193565	DeclStmt									
ANR	8193566	Decl							int	"int ( gs_fapi_font * ff , int char_code , const byte * * ptr )"	pl_get_glyphdirectory_data
ANR	8193567	DeclStmt									
ANR	8193568	Decl							int	"int ( gs_text_enum_t * penum , const gs_font_base * pbfont , const gs_string * char_name , int cid , const double pwidth [ 2 ] , const gs_rect * pbbox , const double Metrics2_sbw_default [ 4 ] , bool * imagenow )"	pl_fapi_set_cache
ANR	8193569	DeclStmt									
ANR	8193570	Decl							int	"int ( gs_fapi_font * ff , gs_string * char_name , int cid , double * m , bool vertical )"	pl_fapi_get_metrics
ANR	8193571	DeclStmt									
ANR	8193572	Decl							const gs_fapi_font	const gs_fapi_font	pl_ff_stub
ANR	8193573	Function	pl_fapi_get_long	132:0:5042:5501							
ANR	8193574	FunctionDef	"pl_fapi_get_long (gs_fapi_font * ff , gs_fapi_font_feature var_id , int index)"		8193573	0					
ANR	8193575	CompoundStatement		134:0:5131:5501	8193573	0					
ANR	8193576	IdentifierDeclStatement	gs_font * pfont = ( gs_font * ) ff -> client_font_data ;	135:4:5137:5186	8193573	0	True				
ANR	8193577	IdentifierDecl	* pfont = ( gs_font * ) ff -> client_font_data		8193573	0					
ANR	8193578	IdentifierDeclType	gs_font *		8193573	0					
ANR	8193579	Identifier	pfont		8193573	1					
ANR	8193580	AssignmentExpression	* pfont = ( gs_font * ) ff -> client_font_data		8193573	2		=			
ANR	8193581	Identifier	pfont		8193573	0					
ANR	8193582	CastExpression	( gs_font * ) ff -> client_font_data		8193573	1					
ANR	8193583	CastTarget	gs_font *		8193573	0					
ANR	8193584	PtrMemberAccess	ff -> client_font_data		8193573	1					
ANR	8193585	Identifier	ff		8193573	0					
ANR	8193586	Identifier	client_font_data		8193573	1					
ANR	8193587	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) pfont -> client_data ;	136:4:5192:5244	8193573	1	True				
ANR	8193588	IdentifierDecl	* plfont = ( pl_font_t * ) pfont -> client_data		8193573	0					
ANR	8193589	IdentifierDeclType	pl_font_t *		8193573	0					
ANR	8193590	Identifier	plfont		8193573	1					
ANR	8193591	AssignmentExpression	* plfont = ( pl_font_t * ) pfont -> client_data		8193573	2		=			
ANR	8193592	Identifier	plfont		8193573	0					
ANR	8193593	CastExpression	( pl_font_t * ) pfont -> client_data		8193573	1					
ANR	8193594	CastTarget	pl_font_t *		8193573	0					
ANR	8193595	PtrMemberAccess	pfont -> client_data		8193573	1					
ANR	8193596	Identifier	pfont		8193573	0					
ANR	8193597	Identifier	client_data		8193573	1					
ANR	8193598	IdentifierDeclStatement	ulong value = - 1 ;	137:4:5250:5266	8193573	2	True				
ANR	8193599	IdentifierDecl	value = - 1		8193573	0					
ANR	8193600	IdentifierDeclType	ulong		8193573	0					
ANR	8193601	Identifier	value		8193573	1					
ANR	8193602	AssignmentExpression	value = - 1		8193573	2		=			
ANR	8193603	Identifier	value		8193573	0					
ANR	8193604	UnaryOperationExpression	- 1		8193573	1					
ANR	8193605	UnaryOperator	-		8193573	0					
ANR	8193606	PrimaryExpression	1		8193573	1					
ANR	8193607	ExpressionStatement	( void ) index	138:4:5272:5283	8193573	3	True				
ANR	8193608	CastExpression	( void ) index		8193573	0					
ANR	8193609	CastTarget	void		8193573	0					
ANR	8193610	Identifier	index		8193573	1					
ANR	8193611	IfStatement	if ( var_id == gs_fapi_font_feature_TT_size )		8193573	4					
ANR	8193612	Condition	var_id == gs_fapi_font_feature_TT_size	140:8:5294:5331	8193573	0	True				
ANR	8193613	EqualityExpression	var_id == gs_fapi_font_feature_TT_size		8193573	0		==			
ANR	8193614	Identifier	var_id		8193573	0					
ANR	8193615	Identifier	gs_fapi_font_feature_TT_size		8193573	1					
ANR	8193616	CompoundStatement		7:48:202:202	8193573	1					
ANR	8193617	ExpressionStatement	value = plfont -> header_size - ( plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) )	141:8:5344:5473	8193573	0	True				
ANR	8193618	AssignmentExpression	value = plfont -> header_size - ( plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) )		8193573	0		=			
ANR	8193619	Identifier	value		8193573	0					
ANR	8193620	AdditiveExpression	plfont -> header_size - ( plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) )		8193573	1		-			
ANR	8193621	PtrMemberAccess	plfont -> header_size		8193573	0					
ANR	8193622	Identifier	plfont		8193573	0					
ANR	8193623	Identifier	header_size		8193573	1					
ANR	8193624	AdditiveExpression	plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 )		8193573	1		+			
ANR	8193625	MemberAccess	plfont -> offsets . GT		8193573	0					
ANR	8193626	PtrMemberAccess	plfont -> offsets		8193573	0					
ANR	8193627	Identifier	plfont		8193573	0					
ANR	8193628	Identifier	offsets		8193573	1					
ANR	8193629	Identifier	GT		8193573	1					
ANR	8193630	ConditionalExpression	plfont -> large_sizes ? 6 : 4		8193573	1					
ANR	8193631	Condition	plfont -> large_sizes		8193573	0					
ANR	8193632	PtrMemberAccess	plfont -> large_sizes		8193573	0					
ANR	8193633	Identifier	plfont		8193573	0					
ANR	8193634	Identifier	large_sizes		8193573	1					
ANR	8193635	PrimaryExpression	6		8193573	1					
ANR	8193636	PrimaryExpression	4		8193573	2					
ANR	8193637	ReturnStatement	return ( value ) ;	145:4:5485:5499	8193573	5	True				
ANR	8193638	Identifier	value		8193573	0					
ANR	8193639	ReturnType	static ulong		8193573	1					
ANR	8193640	Identifier	pl_fapi_get_long		8193573	2					
ANR	8193641	ParameterList	"gs_fapi_font * ff , gs_fapi_font_feature var_id , int index"		8193573	3					
ANR	8193642	Parameter	gs_fapi_font * ff	133:17:5072:5088	8193573	0	True				
ANR	8193643	ParameterType	gs_fapi_font *		8193573	0					
ANR	8193644	Identifier	ff		8193573	1					
ANR	8193645	Parameter	gs_fapi_font_feature var_id	133:36:5091:5117	8193573	1	True				
ANR	8193646	ParameterType	gs_fapi_font_feature		8193573	0					
ANR	8193647	Identifier	var_id		8193573	1					
ANR	8193648	Parameter	int index	133:65:5120:5128	8193573	2	True				
ANR	8193649	ParameterType	int		8193573	0					
ANR	8193650	Identifier	index		8193573	1					
ANR	8193651	CFGEntryNode	ENTRY		8193573		True				
ANR	8193652	CFGExitNode	EXIT		8193573		True				
ANR	8193653	Symbol	ff		8193573						
ANR	8193654	Symbol	plfont -> header_size		8193573						
ANR	8193655	Symbol	pfont		8193573						
ANR	8193656	Symbol	* ff		8193573						
ANR	8193657	Symbol	index		8193573						
ANR	8193658	Symbol	plfont		8193573						
ANR	8193659	Symbol	plfont -> large_sizes		8193573						
ANR	8193660	Symbol	plfont -> offsets		8193573						
ANR	8193661	Symbol	plfont -> offsets . GT		8193573						
ANR	8193662	Symbol	pfont -> client_data		8193573						
ANR	8193663	Symbol	* pfont		8193573						
ANR	8193664	Symbol	ff -> client_font_data		8193573						
ANR	8193665	Symbol	* plfont		8193573						
ANR	8193666	Symbol	var_id		8193573						
ANR	8193667	Symbol	value		8193573						
ANR	8193668	Symbol	gs_fapi_font_feature_TT_size		8193573						
ANR	8193669	Function	pl_fapi_get_cid	148:0:5504:6178							
ANR	8193670	FunctionDef	"pl_fapi_get_cid (gs_text_enum_t * penum , gs_font_base * pbfont , gs_string * charstring , gs_string * name , int ccode , gs_string * enc_char_name , char * font_file_path , gs_fapi_char_ref * cr , bool bCID)"		8193669	0					
ANR	8193671	CompoundStatement		152:0:5745:6178	8193669	0					
ANR	8193672	IdentifierDeclStatement	pl_font_t * plfont = pbfont -> client_data ;	153:4:5751:5790	8193669	0	True				
ANR	8193673	IdentifierDecl	* plfont = pbfont -> client_data		8193669	0					
ANR	8193674	IdentifierDeclType	pl_font_t *		8193669	0					
ANR	8193675	Identifier	plfont		8193669	1					
ANR	8193676	AssignmentExpression	* plfont = pbfont -> client_data		8193669	2		=			
ANR	8193677	Identifier	plfont		8193669	0					
ANR	8193678	PtrMemberAccess	pbfont -> client_data		8193669	1					
ANR	8193679	Identifier	pbfont		8193669	0					
ANR	8193680	Identifier	client_data		8193669	1					
ANR	8193681	IdentifierDeclStatement	"gs_glyph vertical , index = ccode ;"	154:4:5796:5828	8193669	1	True				
ANR	8193682	IdentifierDecl	vertical		8193669	0					
ANR	8193683	IdentifierDeclType	gs_glyph		8193669	0					
ANR	8193684	Identifier	vertical		8193669	1					
ANR	8193685	IdentifierDecl	index = ccode		8193669	1					
ANR	8193686	IdentifierDeclType	gs_glyph		8193669	0					
ANR	8193687	Identifier	index		8193669	1					
ANR	8193688	AssignmentExpression	index = ccode		8193669	2		=			
ANR	8193689	Identifier	ccode		8193669	0					
ANR	8193690	Identifier	ccode		8193669	1					
ANR	8193691	ExpressionStatement	( void ) charstring	155:4:5834:5850	8193669	2	True				
ANR	8193692	CastExpression	( void ) charstring		8193669	0					
ANR	8193693	CastTarget	void		8193669	0					
ANR	8193694	Identifier	charstring		8193669	1					
ANR	8193695	ExpressionStatement	( void ) name	156:4:5856:5866	8193669	3	True				
ANR	8193696	CastExpression	( void ) name		8193669	0					
ANR	8193697	CastTarget	void		8193669	0					
ANR	8193698	Identifier	name		8193669	1					
ANR	8193699	ExpressionStatement	( void ) enc_char_name	157:4:5872:5891	8193669	4	True				
ANR	8193700	CastExpression	( void ) enc_char_name		8193669	0					
ANR	8193701	CastTarget	void		8193669	0					
ANR	8193702	Identifier	enc_char_name		8193669	1					
ANR	8193703	ExpressionStatement	( void ) font_file_path	158:4:5897:5917	8193669	5	True				
ANR	8193704	CastExpression	( void ) font_file_path		8193669	0					
ANR	8193705	CastTarget	void		8193669	0					
ANR	8193706	Identifier	font_file_path		8193669	1					
ANR	8193707	ExpressionStatement	( void ) bCID	159:4:5923:5933	8193669	6	True				
ANR	8193708	CastExpression	( void ) bCID		8193669	0					
ANR	8193709	CastTarget	void		8193669	0					
ANR	8193710	Identifier	bCID		8193669	1					
ANR	8193711	ExpressionStatement	( void ) penum	160:4:5939:5950	8193669	7	True				
ANR	8193712	CastExpression	( void ) penum		8193669	0					
ANR	8193713	CastTarget	void		8193669	0					
ANR	8193714	Identifier	penum		8193669	1					
ANR	8193715	IfStatement	if ( plfont -> allow_vertical_substitutes )		8193669	8					
ANR	8193716	Condition	plfont -> allow_vertical_substitutes	162:8:5961:5994	8193669	0	True				
ANR	8193717	PtrMemberAccess	plfont -> allow_vertical_substitutes		8193669	0					
ANR	8193718	Identifier	plfont		8193669	0					
ANR	8193719	Identifier	allow_vertical_substitutes		8193669	1					
ANR	8193720	CompoundStatement		11:44:251:251	8193669	1					
ANR	8193721	ExpressionStatement	"vertical = pl_font_vertical_glyph ( ccode , plfont )"	163:8:6007:6055	8193669	0	True				
ANR	8193722	AssignmentExpression	"vertical = pl_font_vertical_glyph ( ccode , plfont )"		8193669	0		=			
ANR	8193723	Identifier	vertical		8193669	0					
ANR	8193724	CallExpression	"pl_font_vertical_glyph ( ccode , plfont )"		8193669	1					
ANR	8193725	Callee	pl_font_vertical_glyph		8193669	0					
ANR	8193726	Identifier	pl_font_vertical_glyph		8193669	0					
ANR	8193727	ArgumentList	ccode		8193669	1					
ANR	8193728	Argument	ccode		8193669	0					
ANR	8193729	Identifier	ccode		8193669	0					
ANR	8193730	Argument	plfont		8193669	1					
ANR	8193731	Identifier	plfont		8193669	0					
ANR	8193732	IfStatement	if ( vertical != GS_NO_GLYPH )		8193669	1					
ANR	8193733	Condition	vertical != GS_NO_GLYPH	165:12:6070:6092	8193669	0	True				
ANR	8193734	EqualityExpression	vertical != GS_NO_GLYPH		8193669	0		!=			
ANR	8193735	Identifier	vertical		8193669	0					
ANR	8193736	Identifier	GS_NO_GLYPH		8193669	1					
ANR	8193737	ExpressionStatement	index = vertical	166:12:6107:6123	8193669	1	True				
ANR	8193738	AssignmentExpression	index = vertical		8193669	0		=			
ANR	8193739	Identifier	index		8193669	0					
ANR	8193740	Identifier	vertical		8193669	1					
ANR	8193741	ExpressionStatement	cr -> char_codes [ 0 ] = index	168:4:6135:6160	8193669	9	True				
ANR	8193742	AssignmentExpression	cr -> char_codes [ 0 ] = index		8193669	0		=			
ANR	8193743	ArrayIndexing	cr -> char_codes [ 0 ]		8193669	0					
ANR	8193744	PtrMemberAccess	cr -> char_codes		8193669	0					
ANR	8193745	Identifier	cr		8193669	0					
ANR	8193746	Identifier	char_codes		8193669	1					
ANR	8193747	PrimaryExpression	0		8193669	1					
ANR	8193748	Identifier	index		8193669	1					
ANR	8193749	ReturnStatement	return ( 0 ) ;	169:4:6166:6176	8193669	10	True				
ANR	8193750	PrimaryExpression	0		8193669	0					
ANR	8193751	ReturnType	static int		8193669	1					
ANR	8193752	Identifier	pl_fapi_get_cid		8193669	2					
ANR	8193753	ParameterList	"gs_text_enum_t * penum , gs_font_base * pbfont , gs_string * charstring , gs_string * name , int ccode , gs_string * enc_char_name , char * font_file_path , gs_fapi_char_ref * cr , bool bCID"		8193669	3					
ANR	8193754	Parameter	gs_text_enum_t * penum	149:16:5531:5551	8193669	0	True				
ANR	8193755	ParameterType	gs_text_enum_t *		8193669	0					
ANR	8193756	Identifier	penum		8193669	1					
ANR	8193757	Parameter	gs_font_base * pbfont	149:39:5554:5574	8193669	1	True				
ANR	8193758	ParameterType	gs_font_base *		8193669	0					
ANR	8193759	Identifier	pbfont		8193669	1					
ANR	8193760	Parameter	gs_string * charstring	149:62:5577:5598	8193669	2	True				
ANR	8193761	ParameterType	gs_string *		8193669	0					
ANR	8193762	Identifier	charstring		8193669	1					
ANR	8193763	Parameter	gs_string * name	150:16:5617:5632	8193669	3	True				
ANR	8193764	ParameterType	gs_string *		8193669	0					
ANR	8193765	Identifier	name		8193669	1					
ANR	8193766	Parameter	int ccode	150:34:5635:5643	8193669	4	True				
ANR	8193767	ParameterType	int		8193669	0					
ANR	8193768	Identifier	ccode		8193669	1					
ANR	8193769	Parameter	gs_string * enc_char_name	150:45:5646:5670	8193669	5	True				
ANR	8193770	ParameterType	gs_string *		8193669	0					
ANR	8193771	Identifier	enc_char_name		8193669	1					
ANR	8193772	Parameter	char * font_file_path	151:16:5689:5708	8193669	6	True				
ANR	8193773	ParameterType	char *		8193669	0					
ANR	8193774	Identifier	font_file_path		8193669	1					
ANR	8193775	Parameter	gs_fapi_char_ref * cr	151:38:5711:5731	8193669	7	True				
ANR	8193776	ParameterType	gs_fapi_char_ref *		8193669	0					
ANR	8193777	Identifier	cr		8193669	1					
ANR	8193778	Parameter	bool bCID	151:61:5734:5742	8193669	8	True				
ANR	8193779	ParameterType	bool		8193669	0					
ANR	8193780	Identifier	bCID		8193669	1					
ANR	8193781	CFGEntryNode	ENTRY		8193669		True				
ANR	8193782	CFGExitNode	EXIT		8193669		True				
ANR	8193783	Symbol	charstring		8193669						
ANR	8193784	Symbol	* cr -> char_codes		8193669						
ANR	8193785	Symbol	penum		8193669						
ANR	8193786	Symbol	index		8193669						
ANR	8193787	Symbol	vertical		8193669						
ANR	8193788	Symbol	plfont		8193669						
ANR	8193789	Symbol	cr		8193669						
ANR	8193790	Symbol	cr -> char_codes		8193669						
ANR	8193791	Symbol	ccode		8193669						
ANR	8193792	Symbol	bCID		8193669						
ANR	8193793	Symbol	pbfont		8193669						
ANR	8193794	Symbol	enc_char_name		8193669						
ANR	8193795	Symbol	GS_NO_GLYPH		8193669						
ANR	8193796	Symbol	font_file_path		8193669						
ANR	8193797	Symbol	* cr		8193669						
ANR	8193798	Symbol	name		8193669						
ANR	8193799	Symbol	* plfont		8193669						
ANR	8193800	Symbol	* * cr		8193669						
ANR	8193801	Symbol	* pbfont		8193669						
ANR	8193802	Symbol	pl_font_vertical_glyph		8193669						
ANR	8193803	Symbol	pbfont -> client_data		8193669						
ANR	8193804	Symbol	plfont -> allow_vertical_substitutes		8193669						
ANR	8193805	Function	pl_fapi_get_glyph	172:0:6181:6703							
ANR	8193806	FunctionDef	"pl_fapi_get_glyph (gs_fapi_font * ff , int char_code , byte * buf , ushort buf_length)"		8193805	0					
ANR	8193807	CompoundStatement		175:0:6293:6703	8193805	0					
ANR	8193808	IdentifierDeclStatement	gs_font * pfont = ( gs_font * ) ff -> client_font_data ;	176:4:6299:6348	8193805	0	True				
ANR	8193809	IdentifierDecl	* pfont = ( gs_font * ) ff -> client_font_data		8193805	0					
ANR	8193810	IdentifierDeclType	gs_font *		8193805	0					
ANR	8193811	Identifier	pfont		8193805	1					
ANR	8193812	AssignmentExpression	* pfont = ( gs_font * ) ff -> client_font_data		8193805	2		=			
ANR	8193813	Identifier	pfont		8193805	0					
ANR	8193814	CastExpression	( gs_font * ) ff -> client_font_data		8193805	1					
ANR	8193815	CastTarget	gs_font *		8193805	0					
ANR	8193816	PtrMemberAccess	ff -> client_font_data		8193805	1					
ANR	8193817	Identifier	ff		8193805	0					
ANR	8193818	Identifier	client_font_data		8193805	1					
ANR	8193819	IdentifierDeclStatement	int size = 0 ;	179:4:6424:6436	8193805	1	True				
ANR	8193820	IdentifierDecl	size = 0		8193805	0					
ANR	8193821	IdentifierDeclType	int		8193805	0					
ANR	8193822	Identifier	size		8193805	1					
ANR	8193823	AssignmentExpression	size = 0		8193805	2		=			
ANR	8193824	Identifier	size		8193805	0					
ANR	8193825	PrimaryExpression	0		8193805	1					
ANR	8193826	IdentifierDeclStatement	gs_glyph_data_t pdata ;	180:4:6442:6463	8193805	2	True				
ANR	8193827	IdentifierDecl	pdata		8193805	0					
ANR	8193828	IdentifierDeclType	gs_glyph_data_t		8193805	0					
ANR	8193829	Identifier	pdata		8193805	1					
ANR	8193830	IfStatement	"if ( pl_tt_get_outline ( ( gs_font_type42 * ) pfont , char_code , & pdata ) == 0 )"		8193805	3					
ANR	8193831	Condition	"pl_tt_get_outline ( ( gs_font_type42 * ) pfont , char_code , & pdata ) == 0"	182:8:6474:6540	8193805	0	True				
ANR	8193832	EqualityExpression	"pl_tt_get_outline ( ( gs_font_type42 * ) pfont , char_code , & pdata ) == 0"		8193805	0		==			
ANR	8193833	CallExpression	"pl_tt_get_outline ( ( gs_font_type42 * ) pfont , char_code , & pdata )"		8193805	0					
ANR	8193834	Callee	pl_tt_get_outline		8193805	0					
ANR	8193835	Identifier	pl_tt_get_outline		8193805	0					
ANR	8193836	ArgumentList	( gs_font_type42 * ) pfont		8193805	1					
ANR	8193837	Argument	( gs_font_type42 * ) pfont		8193805	0					
ANR	8193838	CastExpression	( gs_font_type42 * ) pfont		8193805	0					
ANR	8193839	CastTarget	gs_font_type42 *		8193805	0					
ANR	8193840	Identifier	pfont		8193805	1					
ANR	8193841	Argument	char_code		8193805	1					
ANR	8193842	Identifier	char_code		8193805	0					
ANR	8193843	Argument	& pdata		8193805	2					
ANR	8193844	UnaryOperationExpression	& pdata		8193805	0					
ANR	8193845	UnaryOperator	&		8193805	0					
ANR	8193846	Identifier	pdata		8193805	1					
ANR	8193847	PrimaryExpression	0		8193805	1					
ANR	8193848	CompoundStatement		8:77:249:249	8193805	1					
ANR	8193849	ExpressionStatement	size = pdata . bits . size	183:8:6553:6575	8193805	0	True				
ANR	8193850	AssignmentExpression	size = pdata . bits . size		8193805	0		=			
ANR	8193851	Identifier	size		8193805	0					
ANR	8193852	MemberAccess	pdata . bits . size		8193805	1					
ANR	8193853	MemberAccess	pdata . bits		8193805	0					
ANR	8193854	Identifier	pdata		8193805	0					
ANR	8193855	Identifier	bits		8193805	1					
ANR	8193856	Identifier	size		8193805	1					
ANR	8193857	IfStatement	if ( buf && buf_length >= size )		8193805	1					
ANR	8193858	Condition	buf && buf_length >= size	185:12:6590:6614	8193805	0	True				
ANR	8193859	AndExpression	buf && buf_length >= size		8193805	0		&&			
ANR	8193860	Identifier	buf		8193805	0					
ANR	8193861	RelationalExpression	buf_length >= size		8193805	1		>=			
ANR	8193862	Identifier	buf_length		8193805	0					
ANR	8193863	Identifier	size		8193805	1					
ANR	8193864	CompoundStatement		11:39:323:323	8193805	1					
ANR	8193865	ExpressionStatement	"memcpy ( buf , pdata . bits . data , size )"	186:12:6631:6665	8193805	0	True				
ANR	8193866	CallExpression	"memcpy ( buf , pdata . bits . data , size )"		8193805	0					
ANR	8193867	Callee	memcpy		8193805	0					
ANR	8193868	Identifier	memcpy		8193805	0					
ANR	8193869	ArgumentList	buf		8193805	1					
ANR	8193870	Argument	buf		8193805	0					
ANR	8193871	Identifier	buf		8193805	0					
ANR	8193872	Argument	pdata . bits . data		8193805	1					
ANR	8193873	MemberAccess	pdata . bits . data		8193805	0					
ANR	8193874	MemberAccess	pdata . bits		8193805	0					
ANR	8193875	Identifier	pdata		8193805	0					
ANR	8193876	Identifier	bits		8193805	1					
ANR	8193877	Identifier	data		8193805	1					
ANR	8193878	Argument	size		8193805	2					
ANR	8193879	Identifier	size		8193805	0					
ANR	8193880	ReturnStatement	return ( size ) ;	190:4:6688:6701	8193805	4	True				
ANR	8193881	Identifier	size		8193805	0					
ANR	8193882	ReturnType	static int		8193805	1					
ANR	8193883	Identifier	pl_fapi_get_glyph		8193805	2					
ANR	8193884	ParameterList	"gs_fapi_font * ff , int char_code , byte * buf , ushort buf_length"		8193805	3					
ANR	8193885	Parameter	gs_fapi_font * ff	173:18:6210:6226	8193805	0	True				
ANR	8193886	ParameterType	gs_fapi_font *		8193805	0					
ANR	8193887	Identifier	ff		8193805	1					
ANR	8193888	Parameter	int char_code	173:37:6229:6241	8193805	1	True				
ANR	8193889	ParameterType	int		8193805	0					
ANR	8193890	Identifier	char_code		8193805	1					
ANR	8193891	Parameter	byte * buf	173:52:6244:6253	8193805	2	True				
ANR	8193892	ParameterType	byte *		8193805	0					
ANR	8193893	Identifier	buf		8193805	1					
ANR	8193894	Parameter	ushort buf_length	174:18:6274:6290	8193805	3	True				
ANR	8193895	ParameterType	ushort		8193805	0					
ANR	8193896	Identifier	buf_length		8193805	1					
ANR	8193897	CFGEntryNode	ENTRY		8193805		True				
ANR	8193898	CFGExitNode	EXIT		8193805		True				
ANR	8193899	Symbol	ff		8193805						
ANR	8193900	Symbol	& pdata		8193805						
ANR	8193901	Symbol	pdata		8193805						
ANR	8193902	Symbol	pfont		8193805						
ANR	8193903	Symbol	* ff		8193805						
ANR	8193904	Symbol	buf_length		8193805						
ANR	8193905	Symbol	char_code		8193805						
ANR	8193906	Symbol	pl_tt_get_outline		8193805						
ANR	8193907	Symbol	buf		8193805						
ANR	8193908	Symbol	pdata . bits		8193805						
ANR	8193909	Symbol	size		8193805						
ANR	8193910	Symbol	ff -> client_font_data		8193805						
ANR	8193911	Symbol	pdata . bits . size		8193805						
ANR	8193912	Symbol	pdata . bits . data		8193805						
ANR	8193913	Function	pl_fapi_serialize_tt_font	193:0:6706:7163							
ANR	8193914	FunctionDef	"pl_fapi_serialize_tt_font (gs_fapi_font * ff , void * buf , int buf_size)"		8193913	0					
ANR	8193915	CompoundStatement		195:0:6790:7163	8193913	0					
ANR	8193916	IdentifierDeclStatement	gs_font * pfont = ( gs_font * ) ff -> client_font_data ;	196:4:6796:6845	8193913	0	True				
ANR	8193917	IdentifierDecl	* pfont = ( gs_font * ) ff -> client_font_data		8193913	0					
ANR	8193918	IdentifierDeclType	gs_font *		8193913	0					
ANR	8193919	Identifier	pfont		8193913	1					
ANR	8193920	AssignmentExpression	* pfont = ( gs_font * ) ff -> client_font_data		8193913	2		=			
ANR	8193921	Identifier	pfont		8193913	0					
ANR	8193922	CastExpression	( gs_font * ) ff -> client_font_data		8193913	1					
ANR	8193923	CastTarget	gs_font *		8193913	0					
ANR	8193924	PtrMemberAccess	ff -> client_font_data		8193913	1					
ANR	8193925	Identifier	ff		8193913	0					
ANR	8193926	Identifier	client_font_data		8193913	1					
ANR	8193927	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) pfont -> client_data ;	197:4:6851:6903	8193913	1	True				
ANR	8193928	IdentifierDecl	* plfont = ( pl_font_t * ) pfont -> client_data		8193913	0					
ANR	8193929	IdentifierDeclType	pl_font_t *		8193913	0					
ANR	8193930	Identifier	plfont		8193913	1					
ANR	8193931	AssignmentExpression	* plfont = ( pl_font_t * ) pfont -> client_data		8193913	2		=			
ANR	8193932	Identifier	plfont		8193913	0					
ANR	8193933	CastExpression	( pl_font_t * ) pfont -> client_data		8193913	1					
ANR	8193934	CastTarget	pl_font_t *		8193913	0					
ANR	8193935	PtrMemberAccess	pfont -> client_data		8193913	1					
ANR	8193936	Identifier	pfont		8193913	0					
ANR	8193937	Identifier	client_data		8193913	1					
ANR	8193938	IdentifierDeclStatement	short code = - 1 ;	198:4:6909:6924	8193913	2	True				
ANR	8193939	IdentifierDecl	code = - 1		8193913	0					
ANR	8193940	IdentifierDeclType	short		8193913	0					
ANR	8193941	Identifier	code		8193913	1					
ANR	8193942	AssignmentExpression	code = - 1		8193913	2		=			
ANR	8193943	Identifier	code		8193913	0					
ANR	8193944	UnaryOperationExpression	- 1		8193913	1					
ANR	8193945	UnaryOperator	-		8193913	0					
ANR	8193946	PrimaryExpression	1		8193913	1					
ANR	8193947	IdentifierDeclStatement	int offset = ( plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) ) ;	199:4:6930:6995	8193913	3	True				
ANR	8193948	IdentifierDecl	offset = ( plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) )		8193913	0					
ANR	8193949	IdentifierDeclType	int		8193913	0					
ANR	8193950	Identifier	offset		8193913	1					
ANR	8193951	AssignmentExpression	offset = ( plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 ) )		8193913	2		=			
ANR	8193952	Identifier	offset		8193913	0					
ANR	8193953	AdditiveExpression	plfont -> offsets . GT + ( plfont -> large_sizes ? 6 : 4 )		8193913	1		+			
ANR	8193954	MemberAccess	plfont -> offsets . GT		8193913	0					
ANR	8193955	PtrMemberAccess	plfont -> offsets		8193913	0					
ANR	8193956	Identifier	plfont		8193913	0					
ANR	8193957	Identifier	offsets		8193913	1					
ANR	8193958	Identifier	GT		8193913	1					
ANR	8193959	ConditionalExpression	plfont -> large_sizes ? 6 : 4		8193913	1					
ANR	8193960	Condition	plfont -> large_sizes		8193913	0					
ANR	8193961	PtrMemberAccess	plfont -> large_sizes		8193913	0					
ANR	8193962	Identifier	plfont		8193913	0					
ANR	8193963	Identifier	large_sizes		8193913	1					
ANR	8193964	PrimaryExpression	6		8193913	1					
ANR	8193965	PrimaryExpression	4		8193913	2					
ANR	8193966	IfStatement	if ( buf_size >= ( plfont -> header_size - offset ) )		8193913	4					
ANR	8193967	Condition	buf_size >= ( plfont -> header_size - offset )	201:8:7006:7047	8193913	0	True				
ANR	8193968	RelationalExpression	buf_size >= ( plfont -> header_size - offset )		8193913	0		>=			
ANR	8193969	Identifier	buf_size		8193913	0					
ANR	8193970	AdditiveExpression	plfont -> header_size - offset		8193913	1		-			
ANR	8193971	PtrMemberAccess	plfont -> header_size		8193913	0					
ANR	8193972	Identifier	plfont		8193913	0					
ANR	8193973	Identifier	header_size		8193913	1					
ANR	8193974	Identifier	offset		8193913	1					
ANR	8193975	CompoundStatement		7:52:259:259	8193913	1					
ANR	8193976	ExpressionStatement	code = 0	202:8:7060:7068	8193913	0	True				
ANR	8193977	AssignmentExpression	code = 0		8193913	0		=			
ANR	8193978	Identifier	code		8193913	0					
ANR	8193979	PrimaryExpression	0		8193913	1					
ANR	8193980	ExpressionStatement	"memcpy ( buf , ( plfont -> header + offset ) , buf_size )"	204:8:7079:7127	8193913	1	True				
ANR	8193981	CallExpression	"memcpy ( buf , ( plfont -> header + offset ) , buf_size )"		8193913	0					
ANR	8193982	Callee	memcpy		8193913	0					
ANR	8193983	Identifier	memcpy		8193913	0					
ANR	8193984	ArgumentList	buf		8193913	1					
ANR	8193985	Argument	buf		8193913	0					
ANR	8193986	Identifier	buf		8193913	0					
ANR	8193987	Argument	plfont -> header + offset		8193913	1					
ANR	8193988	AdditiveExpression	plfont -> header + offset		8193913	0		+			
ANR	8193989	PtrMemberAccess	plfont -> header		8193913	0					
ANR	8193990	Identifier	plfont		8193913	0					
ANR	8193991	Identifier	header		8193913	1					
ANR	8193992	Identifier	offset		8193913	1					
ANR	8193993	Argument	buf_size		8193913	2					
ANR	8193994	Identifier	buf_size		8193913	0					
ANR	8193995	ReturnStatement	return ( ( ushort ) code ) ;	206:4:7139:7161	8193913	5	True				
ANR	8193996	CastExpression	( ushort ) code		8193913	0					
ANR	8193997	CastTarget	ushort		8193913	0					
ANR	8193998	Identifier	code		8193913	1					
ANR	8193999	ReturnType	static ushort		8193913	1					
ANR	8194000	Identifier	pl_fapi_serialize_tt_font		8193913	2					
ANR	8194001	ParameterList	"gs_fapi_font * ff , void * buf , int buf_size"		8193913	3					
ANR	8194002	Parameter	gs_fapi_font * ff	194:26:6746:6762	8193913	0	True				
ANR	8194003	ParameterType	gs_fapi_font *		8193913	0					
ANR	8194004	Identifier	ff		8193913	1					
ANR	8194005	Parameter	void * buf	194:45:6765:6773	8193913	1	True				
ANR	8194006	ParameterType	void *		8193913	0					
ANR	8194007	Identifier	buf		8193913	1					
ANR	8194008	Parameter	int buf_size	194:56:6776:6787	8193913	2	True				
ANR	8194009	ParameterType	int		8193913	0					
ANR	8194010	Identifier	buf_size		8193913	1					
ANR	8194011	CFGEntryNode	ENTRY		8193913		True				
ANR	8194012	CFGExitNode	EXIT		8193913		True				
ANR	8194013	Symbol	ff		8193913						
ANR	8194014	Symbol	code		8193913						
ANR	8194015	Symbol	plfont -> header_size		8193913						
ANR	8194016	Symbol	offset		8193913						
ANR	8194017	Symbol	* ff		8193913						
ANR	8194018	Symbol	pfont		8193913						
ANR	8194019	Symbol	buf_size		8193913						
ANR	8194020	Symbol	plfont -> header		8193913						
ANR	8194021	Symbol	plfont		8193913						
ANR	8194022	Symbol	plfont -> large_sizes		8193913						
ANR	8194023	Symbol	plfont -> offsets		8193913						
ANR	8194024	Symbol	plfont -> offsets . GT		8193913						
ANR	8194025	Symbol	pfont -> client_data		8193913						
ANR	8194026	Symbol	buf		8193913						
ANR	8194027	Symbol	* pfont		8193913						
ANR	8194028	Symbol	ff -> client_font_data		8193913						
ANR	8194029	Symbol	* plfont		8193913						
ANR	8194030	Function	pl_get_glyphdirectory_data	209:0:7166:7302							
ANR	8194031	FunctionDef	"pl_get_glyphdirectory_data (gs_fapi_font * ff , int char_code , const byte * * ptr)"		8194030	0					
ANR	8194032	CompoundStatement		212:0:7284:7302	8194030	0					
ANR	8194033	ReturnStatement	return ( 0 ) ;	213:4:7290:7300	8194030	0	True				
ANR	8194034	PrimaryExpression	0		8194030	0					
ANR	8194035	ReturnType	static int		8194030	1					
ANR	8194036	Identifier	pl_get_glyphdirectory_data		8194030	2					
ANR	8194037	ParameterList	"gs_fapi_font * ff , int char_code , const byte * * ptr"		8194030	3					
ANR	8194038	Parameter	gs_fapi_font * ff	210:27:7204:7220	8194030	0	True				
ANR	8194039	ParameterType	gs_fapi_font *		8194030	0					
ANR	8194040	Identifier	ff		8194030	1					
ANR	8194041	Parameter	int char_code	210:46:7223:7235	8194030	1	True				
ANR	8194042	ParameterType	int		8194030	0					
ANR	8194043	Identifier	char_code		8194030	1					
ANR	8194044	Parameter	const byte * * ptr	211:27:7265:7281	8194030	2	True				
ANR	8194045	ParameterType	const byte * *		8194030	0					
ANR	8194046	Identifier	ptr		8194030	1					
ANR	8194047	CFGEntryNode	ENTRY		8194030		True				
ANR	8194048	CFGExitNode	EXIT		8194030		True				
ANR	8194049	Symbol	ff		8194030						
ANR	8194050	Symbol	char_code		8194030						
ANR	8194051	Symbol	ptr		8194030						
ANR	8194052	Function	pl_fapi_get_metrics	216:0:7305:8135							
ANR	8194053	FunctionDef	"pl_fapi_get_metrics (gs_fapi_font * ff , gs_string * char_name , int cid , double * m , bool vertical)"		8194052	0					
ANR	8194054	CompoundStatement		219:0:7433:8135	8194052	0					
ANR	8194055	IdentifierDeclStatement	gs_font_base * pfont = ( gs_font_base * ) ff -> client_font_data ;	220:4:7439:7498	8194052	0	True				
ANR	8194056	IdentifierDecl	* pfont = ( gs_font_base * ) ff -> client_font_data		8194052	0					
ANR	8194057	IdentifierDeclType	gs_font_base *		8194052	0					
ANR	8194058	Identifier	pfont		8194052	1					
ANR	8194059	AssignmentExpression	* pfont = ( gs_font_base * ) ff -> client_font_data		8194052	2		=			
ANR	8194060	Identifier	pfont		8194052	0					
ANR	8194061	CastExpression	( gs_font_base * ) ff -> client_font_data		8194052	1					
ANR	8194062	CastTarget	gs_font_base *		8194052	0					
ANR	8194063	PtrMemberAccess	ff -> client_font_data		8194052	1					
ANR	8194064	Identifier	ff		8194052	0					
ANR	8194065	Identifier	client_font_data		8194052	1					
ANR	8194066	IdentifierDeclStatement	int code = 0 ;	221:4:7504:7516	8194052	1	True				
ANR	8194067	IdentifierDecl	code = 0		8194052	0					
ANR	8194068	IdentifierDeclType	int		8194052	0					
ANR	8194069	Identifier	code		8194052	1					
ANR	8194070	AssignmentExpression	code = 0		8194052	2		=			
ANR	8194071	Identifier	code		8194052	0					
ANR	8194072	PrimaryExpression	0		8194052	1					
ANR	8194073	IfStatement	if ( pfont -> FontType == ft_TrueType )		8194052	2					
ANR	8194074	Condition	pfont -> FontType == ft_TrueType	227:8:7763:7792	8194052	0	True				
ANR	8194075	EqualityExpression	pfont -> FontType == ft_TrueType		8194052	0		==			
ANR	8194076	PtrMemberAccess	pfont -> FontType		8194052	0					
ANR	8194077	Identifier	pfont		8194052	0					
ANR	8194078	Identifier	FontType		8194052	1					
ANR	8194079	Identifier	ft_TrueType		8194052	1					
ANR	8194080	CompoundStatement		10:8:371:383	8194052	1					
ANR	8194081	IdentifierDeclStatement	float sbw [ 4 ] ;	228:8:7805:7817	8194052	0	True				
ANR	8194082	IdentifierDecl	sbw [ 4 ]		8194052	0					
ANR	8194083	IdentifierDeclType	float [ 4 ]		8194052	0					
ANR	8194084	Identifier	sbw		8194052	1					
ANR	8194085	PrimaryExpression	4		8194052	2					
ANR	8194086	ExpressionStatement	"code = pl_tt_f1c2_get_metrics ( ( gs_font_type42 * ) pfont , cid , pfont -> WMode & 1 , sbw )"	230:8:7828:7910	8194052	1	True				
ANR	8194087	AssignmentExpression	"code = pl_tt_f1c2_get_metrics ( ( gs_font_type42 * ) pfont , cid , pfont -> WMode & 1 , sbw )"		8194052	0		=			
ANR	8194088	Identifier	code		8194052	0					
ANR	8194089	CallExpression	"pl_tt_f1c2_get_metrics ( ( gs_font_type42 * ) pfont , cid , pfont -> WMode & 1 , sbw )"		8194052	1					
ANR	8194090	Callee	pl_tt_f1c2_get_metrics		8194052	0					
ANR	8194091	Identifier	pl_tt_f1c2_get_metrics		8194052	0					
ANR	8194092	ArgumentList	( gs_font_type42 * ) pfont		8194052	1					
ANR	8194093	Argument	( gs_font_type42 * ) pfont		8194052	0					
ANR	8194094	CastExpression	( gs_font_type42 * ) pfont		8194052	0					
ANR	8194095	CastTarget	gs_font_type42 *		8194052	0					
ANR	8194096	Identifier	pfont		8194052	1					
ANR	8194097	Argument	cid		8194052	1					
ANR	8194098	Identifier	cid		8194052	0					
ANR	8194099	Argument	pfont -> WMode & 1		8194052	2					
ANR	8194100	BitAndExpression	pfont -> WMode & 1		8194052	0		&			
ANR	8194101	PtrMemberAccess	pfont -> WMode		8194052	0					
ANR	8194102	Identifier	pfont		8194052	0					
ANR	8194103	Identifier	WMode		8194052	1					
ANR	8194104	PrimaryExpression	1		8194052	1					
ANR	8194105	Argument	sbw		8194052	3					
ANR	8194106	Identifier	sbw		8194052	0					
ANR	8194107	IfStatement	if ( code == 0 )		8194052	2					
ANR	8194108	Condition	code == 0	231:12:7924:7932	8194052	0	True				
ANR	8194109	EqualityExpression	code == 0		8194052	0		==			
ANR	8194110	Identifier	code		8194052	0					
ANR	8194111	PrimaryExpression	0		8194052	1					
ANR	8194112	CompoundStatement		13:23:501:501	8194052	1					
ANR	8194113	ExpressionStatement	m [ 0 ] = sbw [ 0 ]	232:12:7949:7962	8194052	0	True				
ANR	8194114	AssignmentExpression	m [ 0 ] = sbw [ 0 ]		8194052	0		=			
ANR	8194115	ArrayIndexing	m [ 0 ]		8194052	0					
ANR	8194116	Identifier	m		8194052	0					
ANR	8194117	PrimaryExpression	0		8194052	1					
ANR	8194118	ArrayIndexing	sbw [ 0 ]		8194052	1					
ANR	8194119	Identifier	sbw		8194052	0					
ANR	8194120	PrimaryExpression	0		8194052	1					
ANR	8194121	ExpressionStatement	m [ 1 ] = sbw [ 1 ]	233:12:7976:7989	8194052	1	True				
ANR	8194122	AssignmentExpression	m [ 1 ] = sbw [ 1 ]		8194052	0		=			
ANR	8194123	ArrayIndexing	m [ 1 ]		8194052	0					
ANR	8194124	Identifier	m		8194052	0					
ANR	8194125	PrimaryExpression	1		8194052	1					
ANR	8194126	ArrayIndexing	sbw [ 1 ]		8194052	1					
ANR	8194127	Identifier	sbw		8194052	0					
ANR	8194128	PrimaryExpression	1		8194052	1					
ANR	8194129	ExpressionStatement	m [ 2 ] = sbw [ 2 ]	234:12:8003:8016	8194052	2	True				
ANR	8194130	AssignmentExpression	m [ 2 ] = sbw [ 2 ]		8194052	0		=			
ANR	8194131	ArrayIndexing	m [ 2 ]		8194052	0					
ANR	8194132	Identifier	m		8194052	0					
ANR	8194133	PrimaryExpression	2		8194052	1					
ANR	8194134	ArrayIndexing	sbw [ 2 ]		8194052	1					
ANR	8194135	Identifier	sbw		8194052	0					
ANR	8194136	PrimaryExpression	2		8194052	1					
ANR	8194137	ExpressionStatement	m [ 3 ] = sbw [ 3 ]	235:12:8030:8043	8194052	3	True				
ANR	8194138	AssignmentExpression	m [ 3 ] = sbw [ 3 ]		8194052	0		=			
ANR	8194139	ArrayIndexing	m [ 3 ]		8194052	0					
ANR	8194140	Identifier	m		8194052	0					
ANR	8194141	PrimaryExpression	3		8194052	1					
ANR	8194142	ArrayIndexing	sbw [ 3 ]		8194052	1					
ANR	8194143	Identifier	sbw		8194052	0					
ANR	8194144	PrimaryExpression	3		8194052	1					
ANR	8194145	ExpressionStatement	code = 2	236:12:8057:8065	8194052	4	True				
ANR	8194146	AssignmentExpression	code = 2		8194052	0		=			
ANR	8194147	Identifier	code		8194052	0					
ANR	8194148	PrimaryExpression	2		8194052	1					
ANR	8194149	ElseStatement	else		8194052	0					
ANR	8194150	ExpressionStatement	code = 0	239:12:8102:8110	8194052	0	True				
ANR	8194151	AssignmentExpression	code = 0		8194052	0		=			
ANR	8194152	Identifier	code		8194052	0					
ANR	8194153	PrimaryExpression	0		8194052	1					
ANR	8194154	ReturnStatement	return code ;	241:4:8122:8133	8194052	3	True				
ANR	8194155	Identifier	code		8194052	0					
ANR	8194156	ReturnType	static int		8194052	1					
ANR	8194157	Identifier	pl_fapi_get_metrics		8194052	2					
ANR	8194158	ParameterList	"gs_fapi_font * ff , gs_string * char_name , int cid , double * m , bool vertical"		8194052	3					
ANR	8194159	Parameter	gs_fapi_font * ff	217:20:7336:7352	8194052	0	True				
ANR	8194160	ParameterType	gs_fapi_font *		8194052	0					
ANR	8194161	Identifier	ff		8194052	1					
ANR	8194162	Parameter	gs_string * char_name	217:39:7355:7375	8194052	1	True				
ANR	8194163	ParameterType	gs_string *		8194052	0					
ANR	8194164	Identifier	char_name		8194052	1					
ANR	8194165	Parameter	int cid	217:62:7378:7384	8194052	2	True				
ANR	8194166	ParameterType	int		8194052	0					
ANR	8194167	Identifier	cid		8194052	1					
ANR	8194168	Parameter	double * m	218:20:7407:7415	8194052	3	True				
ANR	8194169	ParameterType	double *		8194052	0					
ANR	8194170	Identifier	m		8194052	1					
ANR	8194171	Parameter	bool vertical	218:31:7418:7430	8194052	4	True				
ANR	8194172	ParameterType	bool		8194052	0					
ANR	8194173	Identifier	vertical		8194052	1					
ANR	8194174	CFGEntryNode	ENTRY		8194052		True				
ANR	8194175	CFGExitNode	EXIT		8194052		True				
ANR	8194176	Symbol	ff		8194052						
ANR	8194177	Symbol	code		8194052						
ANR	8194178	Symbol	pfont		8194052						
ANR	8194179	Symbol	* ff		8194052						
ANR	8194180	Symbol	sbw		8194052						
ANR	8194181	Symbol	vertical		8194052						
ANR	8194182	Symbol	ft_TrueType		8194052						
ANR	8194183	Symbol	m		8194052						
ANR	8194184	Symbol	pl_tt_f1c2_get_metrics		8194052						
ANR	8194185	Symbol	char_name		8194052						
ANR	8194186	Symbol	* pfont		8194052						
ANR	8194187	Symbol	pfont -> WMode		8194052						
ANR	8194188	Symbol	* sbw		8194052						
ANR	8194189	Symbol	pfont -> FontType		8194052						
ANR	8194190	Symbol	ff -> client_font_data		8194052						
ANR	8194191	Symbol	* m		8194052						
ANR	8194192	Symbol	cid		8194052						
ANR	8194193	Function	pl_fapi_set_cache	244:0:8138:10690							
ANR	8194194	FunctionDef	"pl_fapi_set_cache (gs_text_enum_t * penum , const gs_font_base * pbfont , const gs_string * char_name , int cid , const double pwidth [ 2 ] , const gs_rect * pbbox , const double Metrics2_sbw_default [ 4 ] , bool * imagenow)"		8194193	0					
ANR	8194195	CompoundStatement		249:0:8414:10690	8194193	0					
ANR	8194196	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	250:4:8420:8447	8194193	0	True				
ANR	8194197	IdentifierDecl	* pgs = penum -> pgs		8194193	0					
ANR	8194198	IdentifierDeclType	gs_gstate *		8194193	0					
ANR	8194199	Identifier	pgs		8194193	1					
ANR	8194200	AssignmentExpression	* pgs = penum -> pgs		8194193	2		=			
ANR	8194201	Identifier	pgs		8194193	0					
ANR	8194202	PtrMemberAccess	penum -> pgs		8194193	1					
ANR	8194203	Identifier	penum		8194193	0					
ANR	8194204	Identifier	pgs		8194193	1					
ANR	8194205	IdentifierDeclStatement	float w2 [ 6 ] ;	251:4:8453:8464	8194193	1	True				
ANR	8194206	IdentifierDecl	w2 [ 6 ]		8194193	0					
ANR	8194207	IdentifierDeclType	float [ 6 ]		8194193	0					
ANR	8194208	Identifier	w2		8194193	1					
ANR	8194209	PrimaryExpression	6		8194193	2					
ANR	8194210	IdentifierDeclStatement	int code = 0 ;	252:4:8470:8482	8194193	2	True				
ANR	8194211	IdentifierDecl	code = 0		8194193	0					
ANR	8194212	IdentifierDeclType	int		8194193	0					
ANR	8194213	Identifier	code		8194193	1					
ANR	8194214	AssignmentExpression	code = 0		8194193	2		=			
ANR	8194215	Identifier	code		8194193	0					
ANR	8194216	PrimaryExpression	0		8194193	1					
ANR	8194217	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	253:4:8488:8520	8194193	3	True				
ANR	8194218	IdentifierDecl	* I = pbfont -> FAPI		8194193	0					
ANR	8194219	IdentifierDeclType	gs_fapi_server *		8194193	0					
ANR	8194220	Identifier	I		8194193	1					
ANR	8194221	AssignmentExpression	* I = pbfont -> FAPI		8194193	2		=			
ANR	8194222	Identifier	I		8194193	0					
ANR	8194223	PtrMemberAccess	pbfont -> FAPI		8194193	1					
ANR	8194224	Identifier	pbfont		8194193	0					
ANR	8194225	Identifier	FAPI		8194193	1					
ANR	8194226	IfStatement	if ( ( penum -> text . operation & TEXT_DO_DRAW ) && ( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0 )		8194193	4					
ANR	8194227	Condition	( penum -> text . operation & TEXT_DO_DRAW ) && ( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0	255:8:8531:8619	8194193	0	True				
ANR	8194228	AndExpression	( penum -> text . operation & TEXT_DO_DRAW ) && ( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0		8194193	0		&&			
ANR	8194229	BitAndExpression	penum -> text . operation & TEXT_DO_DRAW		8194193	0		&			
ANR	8194230	MemberAccess	penum -> text . operation		8194193	0					
ANR	8194231	PtrMemberAccess	penum -> text		8194193	0					
ANR	8194232	Identifier	penum		8194193	0					
ANR	8194233	Identifier	text		8194193	1					
ANR	8194234	Identifier	operation		8194193	1					
ANR	8194235	Identifier	TEXT_DO_DRAW		8194193	1					
ANR	8194236	AndExpression	( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0		8194193	1		&&			
ANR	8194237	BitAndExpression	pbfont -> WMode & 1		8194193	0		&			
ANR	8194238	PtrMemberAccess	pbfont -> WMode		8194193	0					
ANR	8194239	Identifier	pbfont		8194193	0					
ANR	8194240	Identifier	WMode		8194193	1					
ANR	8194241	PrimaryExpression	1		8194193	1					
ANR	8194242	EqualityExpression	pwidth [ 0 ] == 1.0		8194193	1		==			
ANR	8194243	ArrayIndexing	pwidth [ 0 ]		8194193	0					
ANR	8194244	Identifier	pwidth		8194193	0					
ANR	8194245	PrimaryExpression	0		8194193	1					
ANR	8194246	PrimaryExpression	1.0		8194193	1					
ANR	8194247	CompoundStatement		11:8:272:329	8194193	1					
ANR	8194248	IdentifierDeclStatement	gs_rect tmp_pbbox ;	257:8:8632:8649	8194193	0	True				
ANR	8194249	IdentifierDecl	tmp_pbbox		8194193	0					
ANR	8194250	IdentifierDeclType	gs_rect		8194193	0					
ANR	8194251	Identifier	tmp_pbbox		8194193	1					
ANR	8194252	IdentifierDeclStatement	gs_matrix save_ctm ;	258:8:8659:8677	8194193	1	True				
ANR	8194253	IdentifierDecl	save_ctm		8194193	0					
ANR	8194254	IdentifierDeclType	gs_matrix		8194193	0					
ANR	8194255	Identifier	save_ctm		8194193	1					
ANR	8194256	IdentifierDeclStatement	"const gs_matrix id_ctm = { 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 } ;"	259:8:8687:8744	8194193	2	True				
ANR	8194257	IdentifierDecl	"id_ctm = { 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 }"		8194193	0					
ANR	8194258	IdentifierDeclType	const gs_matrix		8194193	0					
ANR	8194259	Identifier	id_ctm		8194193	1					
ANR	8194260	AssignmentExpression	"id_ctm = { 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 }"		8194193	2		=			
ANR	8194261	Identifier	id_ctm		8194193	0					
ANR	8194262	InitializerList	1.0		8194193	1					
ANR	8194263	PrimaryExpression	1.0		8194193	0					
ANR	8194264	PrimaryExpression	0.0		8194193	1					
ANR	8194265	PrimaryExpression	0.0		8194193	2					
ANR	8194266	PrimaryExpression	1.0		8194193	3					
ANR	8194267	PrimaryExpression	0.0		8194193	4					
ANR	8194268	PrimaryExpression	0.0		8194193	5					
ANR	8194269	ExpressionStatement	"gs_currentmatrix ( pgs , & save_ctm )"	267:8:9112:9144	8194193	3	True				
ANR	8194270	CallExpression	"gs_currentmatrix ( pgs , & save_ctm )"		8194193	0					
ANR	8194271	Callee	gs_currentmatrix		8194193	0					
ANR	8194272	Identifier	gs_currentmatrix		8194193	0					
ANR	8194273	ArgumentList	pgs		8194193	1					
ANR	8194274	Argument	pgs		8194193	0					
ANR	8194275	Identifier	pgs		8194193	0					
ANR	8194276	Argument	& save_ctm		8194193	1					
ANR	8194277	UnaryOperationExpression	& save_ctm		8194193	0					
ANR	8194278	UnaryOperator	&		8194193	0					
ANR	8194279	Identifier	save_ctm		8194193	1					
ANR	8194280	ExpressionStatement	"gs_setmatrix ( pgs , & id_ctm )"	268:8:9154:9180	8194193	4	True				
ANR	8194281	CallExpression	"gs_setmatrix ( pgs , & id_ctm )"		8194193	0					
ANR	8194282	Callee	gs_setmatrix		8194193	0					
ANR	8194283	Identifier	gs_setmatrix		8194193	0					
ANR	8194284	ArgumentList	pgs		8194193	1					
ANR	8194285	Argument	pgs		8194193	0					
ANR	8194286	Identifier	pgs		8194193	0					
ANR	8194287	Argument	& id_ctm		8194193	1					
ANR	8194288	UnaryOperationExpression	& id_ctm		8194193	0					
ANR	8194289	UnaryOperator	&		8194193	0					
ANR	8194290	Identifier	id_ctm		8194193	1					
ANR	8194291	ExpressionStatement	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"	273:8:9346:9396	8194193	5	True				
ANR	8194292	CallExpression	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"		8194193	0					
ANR	8194293	Callee	gs_translate		8194193	0					
ANR	8194294	Identifier	gs_translate		8194193	0					
ANR	8194295	ArgumentList	pgs		8194193	1					
ANR	8194296	Argument	pgs		8194193	0					
ANR	8194297	Identifier	pgs		8194193	0					
ANR	8194298	Argument	1.0 / 1.15		8194193	1					
ANR	8194299	MultiplicativeExpression	1.0 / 1.15		8194193	0		/			
ANR	8194300	PrimaryExpression	1.0		8194193	0					
ANR	8194301	PrimaryExpression	1.15		8194193	1					
ANR	8194302	Argument	- ( 1.0 - 1.0 / 1.15 )		8194193	2					
ANR	8194303	UnaryOperationExpression	- ( 1.0 - 1.0 / 1.15 )		8194193	0					
ANR	8194304	UnaryOperator	-		8194193	0					
ANR	8194305	AdditiveExpression	1.0 - 1.0 / 1.15		8194193	1		-			
ANR	8194306	PrimaryExpression	1.0		8194193	0					
ANR	8194307	MultiplicativeExpression	1.0 / 1.15		8194193	1		/			
ANR	8194308	PrimaryExpression	1.0		8194193	0					
ANR	8194309	PrimaryExpression	1.15		8194193	1					
ANR	8194310	ExpressionStatement	"gs_rotate ( pgs , 90 )"	274:8:9406:9424	8194193	6	True				
ANR	8194311	CallExpression	"gs_rotate ( pgs , 90 )"		8194193	0					
ANR	8194312	Callee	gs_rotate		8194193	0					
ANR	8194313	Identifier	gs_rotate		8194193	0					
ANR	8194314	ArgumentList	pgs		8194193	1					
ANR	8194315	Argument	pgs		8194193	0					
ANR	8194316	Identifier	pgs		8194193	0					
ANR	8194317	Argument	90		8194193	1					
ANR	8194318	PrimaryExpression	90		8194193	0					
ANR	8194319	ExpressionStatement	"gs_transform ( pgs , pbbox -> p . x , pbbox -> p . y , & tmp_pbbox . p )"	276:8:9435:9490	8194193	7	True				
ANR	8194320	CallExpression	"gs_transform ( pgs , pbbox -> p . x , pbbox -> p . y , & tmp_pbbox . p )"		8194193	0					
ANR	8194321	Callee	gs_transform		8194193	0					
ANR	8194322	Identifier	gs_transform		8194193	0					
ANR	8194323	ArgumentList	pgs		8194193	1					
ANR	8194324	Argument	pgs		8194193	0					
ANR	8194325	Identifier	pgs		8194193	0					
ANR	8194326	Argument	pbbox -> p . x		8194193	1					
ANR	8194327	MemberAccess	pbbox -> p . x		8194193	0					
ANR	8194328	PtrMemberAccess	pbbox -> p		8194193	0					
ANR	8194329	Identifier	pbbox		8194193	0					
ANR	8194330	Identifier	p		8194193	1					
ANR	8194331	Identifier	x		8194193	1					
ANR	8194332	Argument	pbbox -> p . y		8194193	2					
ANR	8194333	MemberAccess	pbbox -> p . y		8194193	0					
ANR	8194334	PtrMemberAccess	pbbox -> p		8194193	0					
ANR	8194335	Identifier	pbbox		8194193	0					
ANR	8194336	Identifier	p		8194193	1					
ANR	8194337	Identifier	y		8194193	1					
ANR	8194338	Argument	& tmp_pbbox . p		8194193	3					
ANR	8194339	UnaryOperationExpression	& tmp_pbbox . p		8194193	0					
ANR	8194340	UnaryOperator	&		8194193	0					
ANR	8194341	MemberAccess	tmp_pbbox . p		8194193	1					
ANR	8194342	Identifier	tmp_pbbox		8194193	0					
ANR	8194343	Identifier	p		8194193	1					
ANR	8194344	ExpressionStatement	"gs_transform ( pgs , pbbox -> q . x , pbbox -> q . y , & tmp_pbbox . q )"	277:8:9500:9555	8194193	8	True				
ANR	8194345	CallExpression	"gs_transform ( pgs , pbbox -> q . x , pbbox -> q . y , & tmp_pbbox . q )"		8194193	0					
ANR	8194346	Callee	gs_transform		8194193	0					
ANR	8194347	Identifier	gs_transform		8194193	0					
ANR	8194348	ArgumentList	pgs		8194193	1					
ANR	8194349	Argument	pgs		8194193	0					
ANR	8194350	Identifier	pgs		8194193	0					
ANR	8194351	Argument	pbbox -> q . x		8194193	1					
ANR	8194352	MemberAccess	pbbox -> q . x		8194193	0					
ANR	8194353	PtrMemberAccess	pbbox -> q		8194193	0					
ANR	8194354	Identifier	pbbox		8194193	0					
ANR	8194355	Identifier	q		8194193	1					
ANR	8194356	Identifier	x		8194193	1					
ANR	8194357	Argument	pbbox -> q . y		8194193	2					
ANR	8194358	MemberAccess	pbbox -> q . y		8194193	0					
ANR	8194359	PtrMemberAccess	pbbox -> q		8194193	0					
ANR	8194360	Identifier	pbbox		8194193	0					
ANR	8194361	Identifier	q		8194193	1					
ANR	8194362	Identifier	y		8194193	1					
ANR	8194363	Argument	& tmp_pbbox . q		8194193	3					
ANR	8194364	UnaryOperationExpression	& tmp_pbbox . q		8194193	0					
ANR	8194365	UnaryOperator	&		8194193	0					
ANR	8194366	MemberAccess	tmp_pbbox . q		8194193	1					
ANR	8194367	Identifier	tmp_pbbox		8194193	0					
ANR	8194368	Identifier	q		8194193	1					
ANR	8194369	ExpressionStatement	w2 [ 0 ] = pwidth [ 0 ]	279:8:9566:9583	8194193	9	True				
ANR	8194370	AssignmentExpression	w2 [ 0 ] = pwidth [ 0 ]		8194193	0		=			
ANR	8194371	ArrayIndexing	w2 [ 0 ]		8194193	0					
ANR	8194372	Identifier	w2		8194193	0					
ANR	8194373	PrimaryExpression	0		8194193	1					
ANR	8194374	ArrayIndexing	pwidth [ 0 ]		8194193	1					
ANR	8194375	Identifier	pwidth		8194193	0					
ANR	8194376	PrimaryExpression	0		8194193	1					
ANR	8194377	ExpressionStatement	w2 [ 1 ] = pwidth [ 1 ]	280:8:9593:9610	8194193	10	True				
ANR	8194378	AssignmentExpression	w2 [ 1 ] = pwidth [ 1 ]		8194193	0		=			
ANR	8194379	ArrayIndexing	w2 [ 1 ]		8194193	0					
ANR	8194380	Identifier	w2		8194193	0					
ANR	8194381	PrimaryExpression	1		8194193	1					
ANR	8194382	ArrayIndexing	pwidth [ 1 ]		8194193	1					
ANR	8194383	Identifier	pwidth		8194193	0					
ANR	8194384	PrimaryExpression	1		8194193	1					
ANR	8194385	ExpressionStatement	w2 [ 2 ] = tmp_pbbox . p . x	281:8:9620:9641	8194193	11	True				
ANR	8194386	AssignmentExpression	w2 [ 2 ] = tmp_pbbox . p . x		8194193	0		=			
ANR	8194387	ArrayIndexing	w2 [ 2 ]		8194193	0					
ANR	8194388	Identifier	w2		8194193	0					
ANR	8194389	PrimaryExpression	2		8194193	1					
ANR	8194390	MemberAccess	tmp_pbbox . p . x		8194193	1					
ANR	8194391	MemberAccess	tmp_pbbox . p		8194193	0					
ANR	8194392	Identifier	tmp_pbbox		8194193	0					
ANR	8194393	Identifier	p		8194193	1					
ANR	8194394	Identifier	x		8194193	1					
ANR	8194395	ExpressionStatement	w2 [ 3 ] = tmp_pbbox . p . y	282:8:9651:9672	8194193	12	True				
ANR	8194396	AssignmentExpression	w2 [ 3 ] = tmp_pbbox . p . y		8194193	0		=			
ANR	8194397	ArrayIndexing	w2 [ 3 ]		8194193	0					
ANR	8194398	Identifier	w2		8194193	0					
ANR	8194399	PrimaryExpression	3		8194193	1					
ANR	8194400	MemberAccess	tmp_pbbox . p . y		8194193	1					
ANR	8194401	MemberAccess	tmp_pbbox . p		8194193	0					
ANR	8194402	Identifier	tmp_pbbox		8194193	0					
ANR	8194403	Identifier	p		8194193	1					
ANR	8194404	Identifier	y		8194193	1					
ANR	8194405	ExpressionStatement	w2 [ 4 ] = tmp_pbbox . q . x	283:8:9682:9703	8194193	13	True				
ANR	8194406	AssignmentExpression	w2 [ 4 ] = tmp_pbbox . q . x		8194193	0		=			
ANR	8194407	ArrayIndexing	w2 [ 4 ]		8194193	0					
ANR	8194408	Identifier	w2		8194193	0					
ANR	8194409	PrimaryExpression	4		8194193	1					
ANR	8194410	MemberAccess	tmp_pbbox . q . x		8194193	1					
ANR	8194411	MemberAccess	tmp_pbbox . q		8194193	0					
ANR	8194412	Identifier	tmp_pbbox		8194193	0					
ANR	8194413	Identifier	q		8194193	1					
ANR	8194414	Identifier	x		8194193	1					
ANR	8194415	ExpressionStatement	w2 [ 5 ] = tmp_pbbox . q . y	284:8:9713:9734	8194193	14	True				
ANR	8194416	AssignmentExpression	w2 [ 5 ] = tmp_pbbox . q . y		8194193	0		=			
ANR	8194417	ArrayIndexing	w2 [ 5 ]		8194193	0					
ANR	8194418	Identifier	w2		8194193	0					
ANR	8194419	PrimaryExpression	5		8194193	1					
ANR	8194420	MemberAccess	tmp_pbbox . q . y		8194193	1					
ANR	8194421	MemberAccess	tmp_pbbox . q		8194193	0					
ANR	8194422	Identifier	tmp_pbbox		8194193	0					
ANR	8194423	Identifier	q		8194193	1					
ANR	8194424	Identifier	y		8194193	1					
ANR	8194425	ExpressionStatement	"gs_setmatrix ( pgs , & save_ctm )"	286:8:9745:9773	8194193	15	True				
ANR	8194426	CallExpression	"gs_setmatrix ( pgs , & save_ctm )"		8194193	0					
ANR	8194427	Callee	gs_setmatrix		8194193	0					
ANR	8194428	Identifier	gs_setmatrix		8194193	0					
ANR	8194429	ArgumentList	pgs		8194193	1					
ANR	8194430	Argument	pgs		8194193	0					
ANR	8194431	Identifier	pgs		8194193	0					
ANR	8194432	Argument	& save_ctm		8194193	1					
ANR	8194433	UnaryOperationExpression	& save_ctm		8194193	0					
ANR	8194434	UnaryOperator	&		8194193	0					
ANR	8194435	Identifier	save_ctm		8194193	1					
ANR	8194436	ElseStatement	else		8194193	0					
ANR	8194437	CompoundStatement		39:11:1371:1371	8194193	0					
ANR	8194438	ExpressionStatement	w2 [ 0 ] = pwidth [ 0 ]	288:8:9796:9813	8194193	0	True				
ANR	8194439	AssignmentExpression	w2 [ 0 ] = pwidth [ 0 ]		8194193	0		=			
ANR	8194440	ArrayIndexing	w2 [ 0 ]		8194193	0					
ANR	8194441	Identifier	w2		8194193	0					
ANR	8194442	PrimaryExpression	0		8194193	1					
ANR	8194443	ArrayIndexing	pwidth [ 0 ]		8194193	1					
ANR	8194444	Identifier	pwidth		8194193	0					
ANR	8194445	PrimaryExpression	0		8194193	1					
ANR	8194446	ExpressionStatement	w2 [ 1 ] = pwidth [ 1 ]	289:8:9823:9840	8194193	1	True				
ANR	8194447	AssignmentExpression	w2 [ 1 ] = pwidth [ 1 ]		8194193	0		=			
ANR	8194448	ArrayIndexing	w2 [ 1 ]		8194193	0					
ANR	8194449	Identifier	w2		8194193	0					
ANR	8194450	PrimaryExpression	1		8194193	1					
ANR	8194451	ArrayIndexing	pwidth [ 1 ]		8194193	1					
ANR	8194452	Identifier	pwidth		8194193	0					
ANR	8194453	PrimaryExpression	1		8194193	1					
ANR	8194454	ExpressionStatement	w2 [ 2 ] = pbbox -> p . x	290:8:9850:9868	8194193	2	True				
ANR	8194455	AssignmentExpression	w2 [ 2 ] = pbbox -> p . x		8194193	0		=			
ANR	8194456	ArrayIndexing	w2 [ 2 ]		8194193	0					
ANR	8194457	Identifier	w2		8194193	0					
ANR	8194458	PrimaryExpression	2		8194193	1					
ANR	8194459	MemberAccess	pbbox -> p . x		8194193	1					
ANR	8194460	PtrMemberAccess	pbbox -> p		8194193	0					
ANR	8194461	Identifier	pbbox		8194193	0					
ANR	8194462	Identifier	p		8194193	1					
ANR	8194463	Identifier	x		8194193	1					
ANR	8194464	ExpressionStatement	w2 [ 3 ] = pbbox -> p . y	291:8:9878:9896	8194193	3	True				
ANR	8194465	AssignmentExpression	w2 [ 3 ] = pbbox -> p . y		8194193	0		=			
ANR	8194466	ArrayIndexing	w2 [ 3 ]		8194193	0					
ANR	8194467	Identifier	w2		8194193	0					
ANR	8194468	PrimaryExpression	3		8194193	1					
ANR	8194469	MemberAccess	pbbox -> p . y		8194193	1					
ANR	8194470	PtrMemberAccess	pbbox -> p		8194193	0					
ANR	8194471	Identifier	pbbox		8194193	0					
ANR	8194472	Identifier	p		8194193	1					
ANR	8194473	Identifier	y		8194193	1					
ANR	8194474	ExpressionStatement	w2 [ 4 ] = pbbox -> q . x	292:8:9906:9924	8194193	4	True				
ANR	8194475	AssignmentExpression	w2 [ 4 ] = pbbox -> q . x		8194193	0		=			
ANR	8194476	ArrayIndexing	w2 [ 4 ]		8194193	0					
ANR	8194477	Identifier	w2		8194193	0					
ANR	8194478	PrimaryExpression	4		8194193	1					
ANR	8194479	MemberAccess	pbbox -> q . x		8194193	1					
ANR	8194480	PtrMemberAccess	pbbox -> q		8194193	0					
ANR	8194481	Identifier	pbbox		8194193	0					
ANR	8194482	Identifier	q		8194193	1					
ANR	8194483	Identifier	x		8194193	1					
ANR	8194484	ExpressionStatement	w2 [ 5 ] = pbbox -> q . y	293:8:9934:9952	8194193	5	True				
ANR	8194485	AssignmentExpression	w2 [ 5 ] = pbbox -> q . y		8194193	0		=			
ANR	8194486	ArrayIndexing	w2 [ 5 ]		8194193	0					
ANR	8194487	Identifier	w2		8194193	0					
ANR	8194488	PrimaryExpression	5		8194193	1					
ANR	8194489	MemberAccess	pbbox -> q . y		8194193	1					
ANR	8194490	PtrMemberAccess	pbbox -> q		8194193	0					
ANR	8194491	Identifier	pbbox		8194193	0					
ANR	8194492	Identifier	q		8194193	1					
ANR	8194493	Identifier	y		8194193	1					
ANR	8194494	IfStatement	if ( pbfont -> PaintType )		8194193	5					
ANR	8194495	Condition	pbfont -> PaintType	296:8:9969:9985	8194193	0	True				
ANR	8194496	PtrMemberAccess	pbfont -> PaintType		8194193	0					
ANR	8194497	Identifier	pbfont		8194193	0					
ANR	8194498	Identifier	PaintType		8194193	1					
ANR	8194499	CompoundStatement		49:8:1583:1707	8194193	1					
ANR	8194500	IdentifierDeclStatement	"double expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2 ;"	297:8:9998:10122	8194193	0	True				
ANR	8194501	IdentifierDecl	"expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8194193	0					
ANR	8194502	IdentifierDeclType	double		8194193	0					
ANR	8194503	Identifier	expand		8194193	1					
ANR	8194504	AssignmentExpression	"expand = max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8194193	2		=			
ANR	8194505	Identifier	expand		8194193	0					
ANR	8194506	MultiplicativeExpression	"max ( 1.415 , gs_currentmiterlimit ( pgs ) ) * gs_currentlinewidth ( pgs ) / 2"		8194193	1		*			
ANR	8194507	CallExpression	"max ( 1.415 , gs_currentmiterlimit ( pgs ) )"		8194193	0					
ANR	8194508	Callee	max		8194193	0					
ANR	8194509	Identifier	max		8194193	0					
ANR	8194510	ArgumentList	1.415		8194193	1					
ANR	8194511	Argument	1.415		8194193	0					
ANR	8194512	PrimaryExpression	1.415		8194193	0					
ANR	8194513	Argument	gs_currentmiterlimit ( pgs )		8194193	1					
ANR	8194514	CallExpression	gs_currentmiterlimit ( pgs )		8194193	0					
ANR	8194515	Callee	gs_currentmiterlimit		8194193	0					
ANR	8194516	Identifier	gs_currentmiterlimit		8194193	0					
ANR	8194517	ArgumentList	pgs		8194193	1					
ANR	8194518	Argument	pgs		8194193	0					
ANR	8194519	Identifier	pgs		8194193	0					
ANR	8194520	MultiplicativeExpression	gs_currentlinewidth ( pgs ) / 2		8194193	1		/			
ANR	8194521	CallExpression	gs_currentlinewidth ( pgs )		8194193	0					
ANR	8194522	Callee	gs_currentlinewidth		8194193	0					
ANR	8194523	Identifier	gs_currentlinewidth		8194193	0					
ANR	8194524	ArgumentList	pgs		8194193	1					
ANR	8194525	Argument	pgs		8194193	0					
ANR	8194526	Identifier	pgs		8194193	0					
ANR	8194527	PrimaryExpression	2		8194193	1					
ANR	8194528	ExpressionStatement	w2 [ 2 ] -= expand	301:8:10133:10148	8194193	1	True				
ANR	8194529	AssignmentExpression	w2 [ 2 ] -= expand		8194193	0		-=			
ANR	8194530	ArrayIndexing	w2 [ 2 ]		8194193	0					
ANR	8194531	Identifier	w2		8194193	0					
ANR	8194532	PrimaryExpression	2		8194193	1					
ANR	8194533	Identifier	expand		8194193	1					
ANR	8194534	ExpressionStatement	w2 [ 3 ] -= expand	302:8:10158:10173	8194193	2	True				
ANR	8194535	AssignmentExpression	w2 [ 3 ] -= expand		8194193	0		-=			
ANR	8194536	ArrayIndexing	w2 [ 3 ]		8194193	0					
ANR	8194537	Identifier	w2		8194193	0					
ANR	8194538	PrimaryExpression	3		8194193	1					
ANR	8194539	Identifier	expand		8194193	1					
ANR	8194540	ExpressionStatement	w2 [ 4 ] += expand	303:8:10183:10198	8194193	3	True				
ANR	8194541	AssignmentExpression	w2 [ 4 ] += expand		8194193	0		+=			
ANR	8194542	ArrayIndexing	w2 [ 4 ]		8194193	0					
ANR	8194543	Identifier	w2		8194193	0					
ANR	8194544	PrimaryExpression	4		8194193	1					
ANR	8194545	Identifier	expand		8194193	1					
ANR	8194546	ExpressionStatement	w2 [ 5 ] += expand	304:8:10208:10223	8194193	4	True				
ANR	8194547	AssignmentExpression	w2 [ 5 ] += expand		8194193	0		+=			
ANR	8194548	ArrayIndexing	w2 [ 5 ]		8194193	0					
ANR	8194549	Identifier	w2		8194193	0					
ANR	8194550	PrimaryExpression	5		8194193	1					
ANR	8194551	Identifier	expand		8194193	1					
ANR	8194552	IfStatement	if ( I -> ff . embolden != 0 )		8194193	6					
ANR	8194553	Condition	I -> ff . embolden != 0	307:8:10240:10258	8194193	0	True				
ANR	8194554	EqualityExpression	I -> ff . embolden != 0		8194193	0		!=			
ANR	8194555	MemberAccess	I -> ff . embolden		8194193	0					
ANR	8194556	PtrMemberAccess	I -> ff		8194193	0					
ANR	8194557	Identifier	I		8194193	0					
ANR	8194558	Identifier	ff		8194193	1					
ANR	8194559	Identifier	embolden		8194193	1					
ANR	8194560	PrimaryExpression	0		8194193	1					
ANR	8194561	CompoundStatement		59:29:1846:1846	8194193	1					
ANR	8194562	ExpressionStatement	"code = gs_setcharwidth ( ( gs_show_enum * ) penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"	308:8:10271:10336	8194193	0	True				
ANR	8194563	AssignmentExpression	"code = gs_setcharwidth ( ( gs_show_enum * ) penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"		8194193	0		=			
ANR	8194564	Identifier	code		8194193	0					
ANR	8194565	CallExpression	"gs_setcharwidth ( ( gs_show_enum * ) penum , pgs , w2 [ 0 ] , w2 [ 1 ] )"		8194193	1					
ANR	8194566	Callee	gs_setcharwidth		8194193	0					
ANR	8194567	Identifier	gs_setcharwidth		8194193	0					
ANR	8194568	ArgumentList	( gs_show_enum * ) penum		8194193	1					
ANR	8194569	Argument	( gs_show_enum * ) penum		8194193	0					
ANR	8194570	CastExpression	( gs_show_enum * ) penum		8194193	0					
ANR	8194571	CastTarget	gs_show_enum *		8194193	0					
ANR	8194572	Identifier	penum		8194193	1					
ANR	8194573	Argument	pgs		8194193	1					
ANR	8194574	Identifier	pgs		8194193	0					
ANR	8194575	Argument	w2 [ 0 ]		8194193	2					
ANR	8194576	ArrayIndexing	w2 [ 0 ]		8194193	0					
ANR	8194577	Identifier	w2		8194193	0					
ANR	8194578	PrimaryExpression	0		8194193	1					
ANR	8194579	Argument	w2 [ 1 ]		8194193	3					
ANR	8194580	ArrayIndexing	w2 [ 1 ]		8194193	0					
ANR	8194581	Identifier	w2		8194193	0					
ANR	8194582	PrimaryExpression	1		8194193	1					
ANR	8194583	ElseStatement	else		8194193	0					
ANR	8194584	CompoundStatement		61:11:1934:1934	8194193	0					
ANR	8194585	IfStatement	"if ( ( code = gs_setcachedevice ( ( gs_show_enum * ) penum , pgs , w2 ) ) < 0 )"		8194193	0					
ANR	8194586	Condition	"( code = gs_setcachedevice ( ( gs_show_enum * ) penum , pgs , w2 ) ) < 0"	310:12:10363:10425	8194193	0	True				
ANR	8194587	RelationalExpression	"( code = gs_setcachedevice ( ( gs_show_enum * ) penum , pgs , w2 ) ) < 0"		8194193	0		<			
ANR	8194588	AssignmentExpression	"code = gs_setcachedevice ( ( gs_show_enum * ) penum , pgs , w2 )"		8194193	0		=			
ANR	8194589	Identifier	code		8194193	0					
ANR	8194590	CallExpression	"gs_setcachedevice ( ( gs_show_enum * ) penum , pgs , w2 )"		8194193	1					
ANR	8194591	Callee	gs_setcachedevice		8194193	0					
ANR	8194592	Identifier	gs_setcachedevice		8194193	0					
ANR	8194593	ArgumentList	( gs_show_enum * ) penum		8194193	1					
ANR	8194594	Argument	( gs_show_enum * ) penum		8194193	0					
ANR	8194595	CastExpression	( gs_show_enum * ) penum		8194193	0					
ANR	8194596	CastTarget	gs_show_enum *		8194193	0					
ANR	8194597	Identifier	penum		8194193	1					
ANR	8194598	Argument	pgs		8194193	1					
ANR	8194599	Identifier	pgs		8194193	0					
ANR	8194600	Argument	w2		8194193	2					
ANR	8194601	Identifier	w2		8194193	0					
ANR	8194602	PrimaryExpression	0		8194193	1					
ANR	8194603	CompoundStatement		62:77:2013:2013	8194193	1					
ANR	8194604	ReturnStatement	return ( code ) ;	311:12:10442:10455	8194193	0	True				
ANR	8194605	Identifier	code		8194193	0					
ANR	8194606	IfStatement	if ( ( penum -> text . operation & TEXT_DO_DRAW ) && ( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0 )		8194193	7					
ANR	8194607	Condition	( penum -> text . operation & TEXT_DO_DRAW ) && ( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0	315:8:10482:10570	8194193	0	True				
ANR	8194608	AndExpression	( penum -> text . operation & TEXT_DO_DRAW ) && ( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0		8194193	0		&&			
ANR	8194609	BitAndExpression	penum -> text . operation & TEXT_DO_DRAW		8194193	0		&			
ANR	8194610	MemberAccess	penum -> text . operation		8194193	0					
ANR	8194611	PtrMemberAccess	penum -> text		8194193	0					
ANR	8194612	Identifier	penum		8194193	0					
ANR	8194613	Identifier	text		8194193	1					
ANR	8194614	Identifier	operation		8194193	1					
ANR	8194615	Identifier	TEXT_DO_DRAW		8194193	1					
ANR	8194616	AndExpression	( pbfont -> WMode & 1 ) && pwidth [ 0 ] == 1.0		8194193	1		&&			
ANR	8194617	BitAndExpression	pbfont -> WMode & 1		8194193	0		&			
ANR	8194618	PtrMemberAccess	pbfont -> WMode		8194193	0					
ANR	8194619	Identifier	pbfont		8194193	0					
ANR	8194620	Identifier	WMode		8194193	1					
ANR	8194621	PrimaryExpression	1		8194193	1					
ANR	8194622	EqualityExpression	pwidth [ 0 ] == 1.0		8194193	1		==			
ANR	8194623	ArrayIndexing	pwidth [ 0 ]		8194193	0					
ANR	8194624	Identifier	pwidth		8194193	0					
ANR	8194625	PrimaryExpression	0		8194193	1					
ANR	8194626	PrimaryExpression	1.0		8194193	1					
ANR	8194627	CompoundStatement		68:29:2158:2158	8194193	1					
ANR	8194628	ExpressionStatement	* imagenow = false	317:8:10583:10600	8194193	0	True				
ANR	8194629	AssignmentExpression	* imagenow = false		8194193	0		=			
ANR	8194630	UnaryOperationExpression	* imagenow		8194193	0					
ANR	8194631	UnaryOperator	*		8194193	0					
ANR	8194632	Identifier	imagenow		8194193	1					
ANR	8194633	Identifier	false		8194193	1					
ANR	8194634	ReturnStatement	return ( gs_error_unknownerror ) ;	318:8:10610:10640	8194193	1	True				
ANR	8194635	Identifier	gs_error_unknownerror		8194193	0					
ANR	8194636	ExpressionStatement	* imagenow = true	321:4:10653:10669	8194193	8	True				
ANR	8194637	AssignmentExpression	* imagenow = true		8194193	0		=			
ANR	8194638	UnaryOperationExpression	* imagenow		8194193	0					
ANR	8194639	UnaryOperator	*		8194193	0					
ANR	8194640	Identifier	imagenow		8194193	1					
ANR	8194641	Identifier	true		8194193	1					
ANR	8194642	ReturnStatement	return ( code ) ;	322:4:10675:10688	8194193	9	True				
ANR	8194643	Identifier	code		8194193	0					
ANR	8194644	ReturnType	static int		8194193	1					
ANR	8194645	Identifier	pl_fapi_set_cache		8194193	2					
ANR	8194646	ParameterList	"gs_text_enum_t * penum , const gs_font_base * pbfont , const gs_string * char_name , int cid , const double pwidth [ 2 ] , const gs_rect * pbbox , const double Metrics2_sbw_default [ 4 ] , bool * imagenow"		8194193	3					
ANR	8194647	Parameter	gs_text_enum_t * penum	245:18:8167:8188	8194193	0	True				
ANR	8194648	ParameterType	gs_text_enum_t *		8194193	0					
ANR	8194649	Identifier	penum		8194193	1					
ANR	8194650	Parameter	const gs_font_base * pbfont	245:42:8191:8217	8194193	1	True				
ANR	8194651	ParameterType	const gs_font_base *		8194193	0					
ANR	8194652	Identifier	pbfont		8194193	1					
ANR	8194653	Parameter	const gs_string * char_name	246:18:8238:8264	8194193	2	True				
ANR	8194654	ParameterType	const gs_string *		8194193	0					
ANR	8194655	Identifier	char_name		8194193	1					
ANR	8194656	Parameter	int cid	246:47:8267:8273	8194193	3	True				
ANR	8194657	ParameterType	int		8194193	0					
ANR	8194658	Identifier	cid		8194193	1					
ANR	8194659	Parameter	const double pwidth [ 2 ]	247:18:8294:8315	8194193	4	True				
ANR	8194660	ParameterType	const double [ 2 ]		8194193	0					
ANR	8194661	Identifier	pwidth		8194193	1					
ANR	8194662	Parameter	const gs_rect * pbbox	247:42:8318:8338	8194193	5	True				
ANR	8194663	ParameterType	const gs_rect *		8194193	0					
ANR	8194664	Identifier	pbbox		8194193	1					
ANR	8194665	Parameter	const double Metrics2_sbw_default [ 4 ]	248:18:8359:8394	8194193	6	True				
ANR	8194666	ParameterType	const double [ 4 ]		8194193	0					
ANR	8194667	Identifier	Metrics2_sbw_default		8194193	1					
ANR	8194668	Parameter	bool * imagenow	248:56:8397:8411	8194193	7	True				
ANR	8194669	ParameterType	bool *		8194193	0					
ANR	8194670	Identifier	imagenow		8194193	1					
ANR	8194671	CFGEntryNode	ENTRY		8194193		True				
ANR	8194672	CFGExitNode	EXIT		8194193		True				
ANR	8194673	Symbol	pwidth		8194193						
ANR	8194674	Symbol	* imagenow		8194193						
ANR	8194675	Symbol	pbbox -> p		8194193						
ANR	8194676	Symbol	pbbox -> q		8194193						
ANR	8194677	Symbol	* pwidth		8194193						
ANR	8194678	Symbol	* pbbox		8194193						
ANR	8194679	Symbol	w2		8194193						
ANR	8194680	Symbol	* pbfont		8194193						
ANR	8194681	Symbol	I -> ff		8194193						
ANR	8194682	Symbol	save_ctm		8194193						
ANR	8194683	Symbol	& tmp_pbbox . q		8194193						
ANR	8194684	Symbol	gs_currentlinewidth		8194193						
ANR	8194685	Symbol	id_ctm		8194193						
ANR	8194686	Symbol	& tmp_pbbox . p		8194193						
ANR	8194687	Symbol	tmp_pbbox . q . y		8194193						
ANR	8194688	Symbol	pbfont -> FAPI		8194193						
ANR	8194689	Symbol	tmp_pbbox . q . x		8194193						
ANR	8194690	Symbol	penum		8194193						
ANR	8194691	Symbol	tmp_pbbox . p . x		8194193						
ANR	8194692	Symbol	expand		8194193						
ANR	8194693	Symbol	tmp_pbbox . p . y		8194193						
ANR	8194694	Symbol	true		8194193						
ANR	8194695	Symbol	& id_ctm		8194193						
ANR	8194696	Symbol	cid		8194193						
ANR	8194697	Symbol	pbbox -> q . y		8194193						
ANR	8194698	Symbol	pbbox		8194193						
ANR	8194699	Symbol	* penum		8194193						
ANR	8194700	Symbol	penum -> text . operation		8194193						
ANR	8194701	Symbol	* w2		8194193						
ANR	8194702	Symbol	code		8194193						
ANR	8194703	Symbol	& tmp_pbbox		8194193						
ANR	8194704	Symbol	penum -> text		8194193						
ANR	8194705	Symbol	I		8194193						
ANR	8194706	Symbol	pbbox -> p . x		8194193						
ANR	8194707	Symbol	pbbox -> p . y		8194193						
ANR	8194708	Symbol	gs_setcharwidth		8194193						
ANR	8194709	Symbol	penum -> pgs		8194193						
ANR	8194710	Symbol	pbfont -> PaintType		8194193						
ANR	8194711	Symbol	* I		8194193						
ANR	8194712	Symbol	imagenow		8194193						
ANR	8194713	Symbol	gs_currentmiterlimit		8194193						
ANR	8194714	Symbol	pgs		8194193						
ANR	8194715	Symbol	pbbox -> q . x		8194193						
ANR	8194716	Symbol	gs_error_unknownerror		8194193						
ANR	8194717	Symbol	tmp_pbbox		8194193						
ANR	8194718	Symbol	I -> ff . embolden		8194193						
ANR	8194719	Symbol	tmp_pbbox . p		8194193						
ANR	8194720	Symbol	TEXT_DO_DRAW		8194193						
ANR	8194721	Symbol	& save_ctm		8194193						
ANR	8194722	Symbol	max		8194193						
ANR	8194723	Symbol	false		8194193						
ANR	8194724	Symbol	char_name		8194193						
ANR	8194725	Symbol	pbfont -> WMode		8194193						
ANR	8194726	Symbol	pbfont		8194193						
ANR	8194727	Symbol	tmp_pbbox . q		8194193						
ANR	8194728	Symbol	gs_setcachedevice		8194193						
ANR	8194729	Symbol	Metrics2_sbw_default		8194193						
ANR	8194730	Function	pl_fapi_set_cache_rotate	325:0:10693:11062							
ANR	8194731	FunctionDef	"pl_fapi_set_cache_rotate (gs_text_enum_t * penum , const gs_font_base * pbfont , const gs_string * char_name , int cid , const double pwidth [ 2 ] , const gs_rect * pbbox , const double Metrics2_sbw_default [ 4 ] , bool * imagenow)"		8194730	0					
ANR	8194732	CompoundStatement		331:0:11022:11062	8194730	0					
ANR	8194733	ExpressionStatement	* imagenow = true	332:4:11028:11044	8194730	0	True				
ANR	8194734	AssignmentExpression	* imagenow = true		8194730	0		=			
ANR	8194735	UnaryOperationExpression	* imagenow		8194730	0					
ANR	8194736	UnaryOperator	*		8194730	0					
ANR	8194737	Identifier	imagenow		8194730	1					
ANR	8194738	Identifier	true		8194730	1					
ANR	8194739	ReturnStatement	return ( 0 ) ;	333:4:11050:11060	8194730	1	True				
ANR	8194740	PrimaryExpression	0		8194730	0					
ANR	8194741	ReturnType	static int		8194730	1					
ANR	8194742	Identifier	pl_fapi_set_cache_rotate		8194730	2					
ANR	8194743	ParameterList	"gs_text_enum_t * penum , const gs_font_base * pbfont , const gs_string * char_name , int cid , const double pwidth [ 2 ] , const gs_rect * pbbox , const double Metrics2_sbw_default [ 4 ] , bool * imagenow"		8194730	3					
ANR	8194744	Parameter	gs_text_enum_t * penum	326:25:10729:10750	8194730	0	True				
ANR	8194745	ParameterType	gs_text_enum_t *		8194730	0					
ANR	8194746	Identifier	penum		8194730	1					
ANR	8194747	Parameter	const gs_font_base * pbfont	326:49:10753:10779	8194730	1	True				
ANR	8194748	ParameterType	const gs_font_base *		8194730	0					
ANR	8194749	Identifier	pbfont		8194730	1					
ANR	8194750	Parameter	const gs_string * char_name	327:25:10807:10833	8194730	2	True				
ANR	8194751	ParameterType	const gs_string *		8194730	0					
ANR	8194752	Identifier	char_name		8194730	1					
ANR	8194753	Parameter	int cid	327:54:10836:10842	8194730	3	True				
ANR	8194754	ParameterType	int		8194730	0					
ANR	8194755	Identifier	cid		8194730	1					
ANR	8194756	Parameter	const double pwidth [ 2 ]	328:25:10870:10891	8194730	4	True				
ANR	8194757	ParameterType	const double [ 2 ]		8194730	0					
ANR	8194758	Identifier	pwidth		8194730	1					
ANR	8194759	Parameter	const gs_rect * pbbox	328:49:10894:10914	8194730	5	True				
ANR	8194760	ParameterType	const gs_rect *		8194730	0					
ANR	8194761	Identifier	pbbox		8194730	1					
ANR	8194762	Parameter	const double Metrics2_sbw_default [ 4 ]	329:25:10942:10977	8194730	6	True				
ANR	8194763	ParameterType	const double [ 4 ]		8194730	0					
ANR	8194764	Identifier	Metrics2_sbw_default		8194730	1					
ANR	8194765	Parameter	bool * imagenow	330:25:11005:11019	8194730	7	True				
ANR	8194766	ParameterType	bool *		8194730	0					
ANR	8194767	Identifier	imagenow		8194730	1					
ANR	8194768	CFGEntryNode	ENTRY		8194730		True				
ANR	8194769	CFGExitNode	EXIT		8194730		True				
ANR	8194770	Symbol	char_name		8194730						
ANR	8194771	Symbol	pbbox		8194730						
ANR	8194772	Symbol	pbfont		8194730						
ANR	8194773	Symbol	penum		8194730						
ANR	8194774	Symbol	imagenow		8194730						
ANR	8194775	Symbol	true		8194730						
ANR	8194776	Symbol	pwidth		8194730						
ANR	8194777	Symbol	cid		8194730						
ANR	8194778	Symbol	Metrics2_sbw_default		8194730						
ANR	8194779	Symbol	* imagenow		8194730						
ANR	8194780	Function	pl_fapi_build_char	337:0:11066:12414							
ANR	8194781	FunctionDef	"pl_fapi_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph)"		8194780	0					
ANR	8194782	CompoundStatement		340:0:11200:12414	8194780	0					
ANR	8194783	IdentifierDeclStatement	int code ;	341:4:11206:11214	8194780	0	True				
ANR	8194784	IdentifierDecl	code		8194780	0					
ANR	8194785	IdentifierDeclType	int		8194780	0					
ANR	8194786	Identifier	code		8194780	1					
ANR	8194787	IdentifierDeclStatement	gs_matrix save_ctm ;	342:4:11220:11238	8194780	1	True				
ANR	8194788	IdentifierDecl	save_ctm		8194780	0					
ANR	8194789	IdentifierDeclType	gs_matrix		8194780	0					
ANR	8194790	Identifier	save_ctm		8194780	1					
ANR	8194791	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	343:4:11244:11289	8194780	2	True				
ANR	8194792	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		8194780	0					
ANR	8194793	IdentifierDeclType	gs_font_base *		8194780	0					
ANR	8194794	Identifier	pbfont		8194780	1					
ANR	8194795	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		8194780	2		=			
ANR	8194796	Identifier	pbfont		8194780	0					
ANR	8194797	CastExpression	( gs_font_base * ) pfont		8194780	1					
ANR	8194798	CastTarget	gs_font_base *		8194780	0					
ANR	8194799	Identifier	pfont		8194780	1					
ANR	8194800	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) pfont -> client_data ;	344:4:11295:11347	8194780	3	True				
ANR	8194801	IdentifierDecl	* plfont = ( pl_font_t * ) pfont -> client_data		8194780	0					
ANR	8194802	IdentifierDeclType	pl_font_t *		8194780	0					
ANR	8194803	Identifier	plfont		8194780	1					
ANR	8194804	AssignmentExpression	* plfont = ( pl_font_t * ) pfont -> client_data		8194780	2		=			
ANR	8194805	Identifier	plfont		8194780	0					
ANR	8194806	CastExpression	( pl_font_t * ) pfont -> client_data		8194780	1					
ANR	8194807	CastTarget	pl_font_t *		8194780	0					
ANR	8194808	PtrMemberAccess	pfont -> client_data		8194780	1					
ANR	8194809	Identifier	pfont		8194780	0					
ANR	8194810	Identifier	client_data		8194780	1					
ANR	8194811	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	345:4:11353:11385	8194780	4	True				
ANR	8194812	IdentifierDecl	* I = pbfont -> FAPI		8194780	0					
ANR	8194813	IdentifierDeclType	gs_fapi_server *		8194780	0					
ANR	8194814	Identifier	I		8194780	1					
ANR	8194815	AssignmentExpression	* I = pbfont -> FAPI		8194780	2		=			
ANR	8194816	Identifier	I		8194780	0					
ANR	8194817	PtrMemberAccess	pbfont -> FAPI		8194780	1					
ANR	8194818	Identifier	pbfont		8194780	0					
ANR	8194819	Identifier	FAPI		8194780	1					
ANR	8194820	ExpressionStatement	I -> ff . embolden = plfont -> bold_fraction	347:4:11392:11430	8194780	5	True				
ANR	8194821	AssignmentExpression	I -> ff . embolden = plfont -> bold_fraction		8194780	0		=			
ANR	8194822	MemberAccess	I -> ff . embolden		8194780	0					
ANR	8194823	PtrMemberAccess	I -> ff		8194780	0					
ANR	8194824	Identifier	I		8194780	0					
ANR	8194825	Identifier	ff		8194780	1					
ANR	8194826	Identifier	embolden		8194780	1					
ANR	8194827	PtrMemberAccess	plfont -> bold_fraction		8194780	1					
ANR	8194828	Identifier	plfont		8194780	0					
ANR	8194829	Identifier	bold_fraction		8194780	1					
ANR	8194830	ExpressionStatement	I -> ff . is_mtx_skipped = plfont -> is_xl_format	348:4:11436:11479	8194780	6	True				
ANR	8194831	AssignmentExpression	I -> ff . is_mtx_skipped = plfont -> is_xl_format		8194780	0		=			
ANR	8194832	MemberAccess	I -> ff . is_mtx_skipped		8194780	0					
ANR	8194833	PtrMemberAccess	I -> ff		8194780	0					
ANR	8194834	Identifier	I		8194780	0					
ANR	8194835	Identifier	ff		8194780	1					
ANR	8194836	Identifier	is_mtx_skipped		8194780	1					
ANR	8194837	PtrMemberAccess	plfont -> is_xl_format		8194780	1					
ANR	8194838	Identifier	plfont		8194780	0					
ANR	8194839	Identifier	is_xl_format		8194780	1					
ANR	8194840	ExpressionStatement	"code = gs_fapi_do_char ( pfont , pgs , ( gs_text_enum_t * ) penum , NULL , false , NULL , NULL , chr , glyph , 0 )"	350:4:11486:11618	8194780	7	True				
ANR	8194841	AssignmentExpression	"code = gs_fapi_do_char ( pfont , pgs , ( gs_text_enum_t * ) penum , NULL , false , NULL , NULL , chr , glyph , 0 )"		8194780	0		=			
ANR	8194842	Identifier	code		8194780	0					
ANR	8194843	CallExpression	"gs_fapi_do_char ( pfont , pgs , ( gs_text_enum_t * ) penum , NULL , false , NULL , NULL , chr , glyph , 0 )"		8194780	1					
ANR	8194844	Callee	gs_fapi_do_char		8194780	0					
ANR	8194845	Identifier	gs_fapi_do_char		8194780	0					
ANR	8194846	ArgumentList	pfont		8194780	1					
ANR	8194847	Argument	pfont		8194780	0					
ANR	8194848	Identifier	pfont		8194780	0					
ANR	8194849	Argument	pgs		8194780	1					
ANR	8194850	Identifier	pgs		8194780	0					
ANR	8194851	Argument	( gs_text_enum_t * ) penum		8194780	2					
ANR	8194852	CastExpression	( gs_text_enum_t * ) penum		8194780	0					
ANR	8194853	CastTarget	gs_text_enum_t *		8194780	0					
ANR	8194854	Identifier	penum		8194780	1					
ANR	8194855	Argument	NULL		8194780	3					
ANR	8194856	Identifier	NULL		8194780	0					
ANR	8194857	Argument	false		8194780	4					
ANR	8194858	Identifier	false		8194780	0					
ANR	8194859	Argument	NULL		8194780	5					
ANR	8194860	Identifier	NULL		8194780	0					
ANR	8194861	Argument	NULL		8194780	6					
ANR	8194862	Identifier	NULL		8194780	0					
ANR	8194863	Argument	chr		8194780	7					
ANR	8194864	Identifier	chr		8194780	0					
ANR	8194865	Argument	glyph		8194780	8					
ANR	8194866	Identifier	glyph		8194780	0					
ANR	8194867	Argument	0		8194780	9					
ANR	8194868	PrimaryExpression	0		8194780	0					
ANR	8194869	IfStatement	if ( code == gs_error_unknownerror )		8194780	8					
ANR	8194870	Condition	code == gs_error_unknownerror	354:8:11629:11657	8194780	0	True				
ANR	8194871	EqualityExpression	code == gs_error_unknownerror		8194780	0		==			
ANR	8194872	Identifier	code		8194780	0					
ANR	8194873	Identifier	gs_error_unknownerror		8194780	1					
ANR	8194874	CompoundStatement		16:8:469:488	8194780	1					
ANR	8194875	IdentifierDeclStatement	gs_fapi_font tmp_ff ;	355:8:11670:11689	8194780	0	True				
ANR	8194876	IdentifierDecl	tmp_ff		8194780	0					
ANR	8194877	IdentifierDeclType	gs_fapi_font		8194780	0					
ANR	8194878	Identifier	tmp_ff		8194780	1					
ANR	8194879	ExpressionStatement	tmp_ff . fapi_set_cache = I -> ff . fapi_set_cache	357:8:11700:11744	8194780	1	True				
ANR	8194880	AssignmentExpression	tmp_ff . fapi_set_cache = I -> ff . fapi_set_cache		8194780	0		=			
ANR	8194881	MemberAccess	tmp_ff . fapi_set_cache		8194780	0					
ANR	8194882	Identifier	tmp_ff		8194780	0					
ANR	8194883	Identifier	fapi_set_cache		8194780	1					
ANR	8194884	MemberAccess	I -> ff . fapi_set_cache		8194780	1					
ANR	8194885	PtrMemberAccess	I -> ff		8194780	0					
ANR	8194886	Identifier	I		8194780	0					
ANR	8194887	Identifier	ff		8194780	1					
ANR	8194888	Identifier	fapi_set_cache		8194780	1					
ANR	8194889	ExpressionStatement	"gs_currentmatrix ( pgs , & save_ctm )"	360:8:11782:11814	8194780	2	True				
ANR	8194890	CallExpression	"gs_currentmatrix ( pgs , & save_ctm )"		8194780	0					
ANR	8194891	Callee	gs_currentmatrix		8194780	0					
ANR	8194892	Identifier	gs_currentmatrix		8194780	0					
ANR	8194893	ArgumentList	pgs		8194780	1					
ANR	8194894	Argument	pgs		8194780	0					
ANR	8194895	Identifier	pgs		8194780	0					
ANR	8194896	Argument	& save_ctm		8194780	1					
ANR	8194897	UnaryOperationExpression	& save_ctm		8194780	0					
ANR	8194898	UnaryOperator	&		8194780	0					
ANR	8194899	Identifier	save_ctm		8194780	1					
ANR	8194900	ExpressionStatement	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"	365:8:11980:12030	8194780	3	True				
ANR	8194901	CallExpression	"gs_translate ( pgs , 1.0 / 1.15 , - ( 1.0 - 1.0 / 1.15 ) )"		8194780	0					
ANR	8194902	Callee	gs_translate		8194780	0					
ANR	8194903	Identifier	gs_translate		8194780	0					
ANR	8194904	ArgumentList	pgs		8194780	1					
ANR	8194905	Argument	pgs		8194780	0					
ANR	8194906	Identifier	pgs		8194780	0					
ANR	8194907	Argument	1.0 / 1.15		8194780	1					
ANR	8194908	MultiplicativeExpression	1.0 / 1.15		8194780	0		/			
ANR	8194909	PrimaryExpression	1.0		8194780	0					
ANR	8194910	PrimaryExpression	1.15		8194780	1					
ANR	8194911	Argument	- ( 1.0 - 1.0 / 1.15 )		8194780	2					
ANR	8194912	UnaryOperationExpression	- ( 1.0 - 1.0 / 1.15 )		8194780	0					
ANR	8194913	UnaryOperator	-		8194780	0					
ANR	8194914	AdditiveExpression	1.0 - 1.0 / 1.15		8194780	1		-			
ANR	8194915	PrimaryExpression	1.0		8194780	0					
ANR	8194916	MultiplicativeExpression	1.0 / 1.15		8194780	1		/			
ANR	8194917	PrimaryExpression	1.0		8194780	0					
ANR	8194918	PrimaryExpression	1.15		8194780	1					
ANR	8194919	ExpressionStatement	"gs_rotate ( pgs , 90 )"	366:8:12040:12058	8194780	4	True				
ANR	8194920	CallExpression	"gs_rotate ( pgs , 90 )"		8194780	0					
ANR	8194921	Callee	gs_rotate		8194780	0					
ANR	8194922	Identifier	gs_rotate		8194780	0					
ANR	8194923	ArgumentList	pgs		8194780	1					
ANR	8194924	Argument	pgs		8194780	0					
ANR	8194925	Identifier	pgs		8194780	0					
ANR	8194926	Argument	90		8194780	1					
ANR	8194927	PrimaryExpression	90		8194780	0					
ANR	8194928	ExpressionStatement	I -> ff . fapi_set_cache = pl_fapi_set_cache_rotate	368:8:12069:12116	8194780	5	True				
ANR	8194929	AssignmentExpression	I -> ff . fapi_set_cache = pl_fapi_set_cache_rotate		8194780	0		=			
ANR	8194930	MemberAccess	I -> ff . fapi_set_cache		8194780	0					
ANR	8194931	PtrMemberAccess	I -> ff		8194780	0					
ANR	8194932	Identifier	I		8194780	0					
ANR	8194933	Identifier	ff		8194780	1					
ANR	8194934	Identifier	fapi_set_cache		8194780	1					
ANR	8194935	Identifier	pl_fapi_set_cache_rotate		8194780	1					
ANR	8194936	ExpressionStatement	"code = gs_fapi_do_char ( pfont , pgs , ( gs_text_enum_t * ) penum , NULL , false , NULL , NULL , chr , glyph , 0 )"	370:8:12127:12267	8194780	6	True				
ANR	8194937	AssignmentExpression	"code = gs_fapi_do_char ( pfont , pgs , ( gs_text_enum_t * ) penum , NULL , false , NULL , NULL , chr , glyph , 0 )"		8194780	0		=			
ANR	8194938	Identifier	code		8194780	0					
ANR	8194939	CallExpression	"gs_fapi_do_char ( pfont , pgs , ( gs_text_enum_t * ) penum , NULL , false , NULL , NULL , chr , glyph , 0 )"		8194780	1					
ANR	8194940	Callee	gs_fapi_do_char		8194780	0					
ANR	8194941	Identifier	gs_fapi_do_char		8194780	0					
ANR	8194942	ArgumentList	pfont		8194780	1					
ANR	8194943	Argument	pfont		8194780	0					
ANR	8194944	Identifier	pfont		8194780	0					
ANR	8194945	Argument	pgs		8194780	1					
ANR	8194946	Identifier	pgs		8194780	0					
ANR	8194947	Argument	( gs_text_enum_t * ) penum		8194780	2					
ANR	8194948	CastExpression	( gs_text_enum_t * ) penum		8194780	0					
ANR	8194949	CastTarget	gs_text_enum_t *		8194780	0					
ANR	8194950	Identifier	penum		8194780	1					
ANR	8194951	Argument	NULL		8194780	3					
ANR	8194952	Identifier	NULL		8194780	0					
ANR	8194953	Argument	false		8194780	4					
ANR	8194954	Identifier	false		8194780	0					
ANR	8194955	Argument	NULL		8194780	5					
ANR	8194956	Identifier	NULL		8194780	0					
ANR	8194957	Argument	NULL		8194780	6					
ANR	8194958	Identifier	NULL		8194780	0					
ANR	8194959	Argument	chr		8194780	7					
ANR	8194960	Identifier	chr		8194780	0					
ANR	8194961	Argument	glyph		8194780	8					
ANR	8194962	Identifier	glyph		8194780	0					
ANR	8194963	Argument	0		8194780	9					
ANR	8194964	PrimaryExpression	0		8194780	0					
ANR	8194965	ExpressionStatement	I -> ff . fapi_set_cache = tmp_ff . fapi_set_cache	374:8:12278:12322	8194780	7	True				
ANR	8194966	AssignmentExpression	I -> ff . fapi_set_cache = tmp_ff . fapi_set_cache		8194780	0		=			
ANR	8194967	MemberAccess	I -> ff . fapi_set_cache		8194780	0					
ANR	8194968	PtrMemberAccess	I -> ff		8194780	0					
ANR	8194969	Identifier	I		8194780	0					
ANR	8194970	Identifier	ff		8194780	1					
ANR	8194971	Identifier	fapi_set_cache		8194780	1					
ANR	8194972	MemberAccess	tmp_ff . fapi_set_cache		8194780	1					
ANR	8194973	Identifier	tmp_ff		8194780	0					
ANR	8194974	Identifier	fapi_set_cache		8194780	1					
ANR	8194975	ExpressionStatement	"gs_setmatrix ( pgs , & save_ctm )"	376:8:12333:12361	8194780	8	True				
ANR	8194976	CallExpression	"gs_setmatrix ( pgs , & save_ctm )"		8194780	0					
ANR	8194977	Callee	gs_setmatrix		8194780	0					
ANR	8194978	Identifier	gs_setmatrix		8194780	0					
ANR	8194979	ArgumentList	pgs		8194780	1					
ANR	8194980	Argument	pgs		8194780	0					
ANR	8194981	Identifier	pgs		8194780	0					
ANR	8194982	Argument	& save_ctm		8194780	1					
ANR	8194983	UnaryOperationExpression	& save_ctm		8194780	0					
ANR	8194984	UnaryOperator	&		8194780	0					
ANR	8194985	Identifier	save_ctm		8194780	1					
ANR	8194986	ExpressionStatement	I -> ff . embolden = 0	379:4:12374:12392	8194780	9	True				
ANR	8194987	AssignmentExpression	I -> ff . embolden = 0		8194780	0		=			
ANR	8194988	MemberAccess	I -> ff . embolden		8194780	0					
ANR	8194989	PtrMemberAccess	I -> ff		8194780	0					
ANR	8194990	Identifier	I		8194780	0					
ANR	8194991	Identifier	ff		8194780	1					
ANR	8194992	Identifier	embolden		8194780	1					
ANR	8194993	PrimaryExpression	0		8194780	1					
ANR	8194994	ReturnStatement	return ( code ) ;	381:4:12399:12412	8194780	10	True				
ANR	8194995	Identifier	code		8194780	0					
ANR	8194996	ReturnType	static int		8194780	1					
ANR	8194997	Identifier	pl_fapi_build_char		8194780	2					
ANR	8194998	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph"		8194780	3					
ANR	8194999	Parameter	gs_show_enum * penum	338:19:11096:11115	8194780	0	True				
ANR	8195000	ParameterType	gs_show_enum *		8194780	0					
ANR	8195001	Identifier	penum		8194780	1					
ANR	8195002	Parameter	gs_gstate * pgs	338:41:11118:11132	8194780	1	True				
ANR	8195003	ParameterType	gs_gstate *		8194780	0					
ANR	8195004	Identifier	pgs		8194780	1					
ANR	8195005	Parameter	gs_font * pfont	338:58:11135:11149	8194780	2	True				
ANR	8195006	ParameterType	gs_font *		8194780	0					
ANR	8195007	Identifier	pfont		8194780	1					
ANR	8195008	Parameter	gs_char chr	339:19:11171:11181	8194780	3	True				
ANR	8195009	ParameterType	gs_char		8194780	0					
ANR	8195010	Identifier	chr		8194780	1					
ANR	8195011	Parameter	gs_glyph glyph	339:32:11184:11197	8194780	4	True				
ANR	8195012	ParameterType	gs_glyph		8194780	0					
ANR	8195013	Identifier	glyph		8194780	1					
ANR	8195014	CFGEntryNode	ENTRY		8194780		True				
ANR	8195015	CFGExitNode	EXIT		8194780		True				
ANR	8195016	Symbol	code		8194780						
ANR	8195017	Symbol	I		8194780						
ANR	8195018	Symbol	I -> ff . fapi_set_cache		8194780						
ANR	8195019	Symbol	plfont		8194780						
ANR	8195020	Symbol	tmp_ff		8194780						
ANR	8195021	Symbol	gs_fapi_do_char		8194780						
ANR	8195022	Symbol	pl_fapi_set_cache_rotate		8194780						
ANR	8195023	Symbol	* I		8194780						
ANR	8195024	Symbol	* pbfont		8194780						
ANR	8195025	Symbol	pgs		8194780						
ANR	8195026	Symbol	gs_error_unknownerror		8194780						
ANR	8195027	Symbol	I -> ff		8194780						
ANR	8195028	Symbol	I -> ff . embolden		8194780						
ANR	8195029	Symbol	save_ctm		8194780						
ANR	8195030	Symbol	NULL		8194780						
ANR	8195031	Symbol	& save_ctm		8194780						
ANR	8195032	Symbol	pfont		8194780						
ANR	8195033	Symbol	pbfont -> FAPI		8194780						
ANR	8195034	Symbol	penum		8194780						
ANR	8195035	Symbol	false		8194780						
ANR	8195036	Symbol	plfont -> is_xl_format		8194780						
ANR	8195037	Symbol	chr		8194780						
ANR	8195038	Symbol	pfont -> client_data		8194780						
ANR	8195039	Symbol	tmp_ff . fapi_set_cache		8194780						
ANR	8195040	Symbol	glyph		8194780						
ANR	8195041	Symbol	pbfont		8194780						
ANR	8195042	Symbol	* pfont		8194780						
ANR	8195043	Symbol	plfont -> bold_fraction		8194780						
ANR	8195044	Symbol	* plfont		8194780						
ANR	8195045	Symbol	I -> ff . is_mtx_skipped		8194780						
ANR	8195046	Function	pl_fapi_ufst_get_fco_list	385:0:12456:12539							
ANR	8195047	FunctionDef	pl_fapi_ufst_get_fco_list (gs_memory_t * mem)		8195046	0					
ANR	8195048	CompoundStatement		387:0:12514:12539	8195046	0					
ANR	8195049	ReturnStatement	return ( UFSTFCOS ) ;	388:4:12520:12537	8195046	0	True				
ANR	8195050	Identifier	UFSTFCOS		8195046	0					
ANR	8195051	ReturnType	const char *		8195046	1					
ANR	8195052	Identifier	pl_fapi_ufst_get_fco_list		8195046	2					
ANR	8195053	ParameterList	gs_memory_t * mem		8195046	3					
ANR	8195054	Parameter	gs_memory_t * mem	386:26:12495:12511	8195046	0	True				
ANR	8195055	ParameterType	gs_memory_t *		8195046	0					
ANR	8195056	Identifier	mem		8195046	1					
ANR	8195057	CFGEntryNode	ENTRY		8195046		True				
ANR	8195058	CFGExitNode	EXIT		8195046		True				
ANR	8195059	Symbol	mem		8195046						
ANR	8195060	Symbol	UFSTFCOS		8195046						
ANR	8195061	Function	pl_fapi_ufst_get_font_dir	391:0:12542:12628							
ANR	8195062	FunctionDef	pl_fapi_ufst_get_font_dir (gs_memory_t * mem)		8195061	0					
ANR	8195063	CompoundStatement		393:0:12600:12628	8195061	0					
ANR	8195064	ReturnStatement	return ( UFSTFONTDIR ) ;	394:4:12606:12626	8195061	0	True				
ANR	8195065	Identifier	UFSTFONTDIR		8195061	0					
ANR	8195066	ReturnType	const char *		8195061	1					
ANR	8195067	Identifier	pl_fapi_ufst_get_font_dir		8195061	2					
ANR	8195068	ParameterList	gs_memory_t * mem		8195061	3					
ANR	8195069	Parameter	gs_memory_t * mem	392:26:12581:12597	8195061	0	True				
ANR	8195070	ParameterType	gs_memory_t *		8195061	0					
ANR	8195071	Identifier	mem		8195061	1					
ANR	8195072	CFGEntryNode	ENTRY		8195061		True				
ANR	8195073	CFGExitNode	EXIT		8195061		True				
ANR	8195074	Symbol	UFSTFONTDIR		8195061						
ANR	8195075	Symbol	mem		8195061						
ANR	8195076	Function	pl_get_server_param	397:0:12631:13577							
ANR	8195077	FunctionDef	"pl_get_server_param (gs_fapi_server * I , const char * subtype , char * * server_param , int * server_param_size)"		8195076	0					
ANR	8195078	CompoundStatement		400:0:12769:13577	8195076	0					
ANR	8195079	IdentifierDeclStatement	int length = 0 ;	401:4:12775:12789	8195076	0	True				
ANR	8195080	IdentifierDecl	length = 0		8195076	0					
ANR	8195081	IdentifierDeclType	int		8195076	0					
ANR	8195082	Identifier	length		8195076	1					
ANR	8195083	AssignmentExpression	length = 0		8195076	2		=			
ANR	8195084	Identifier	length		8195076	0					
ANR	8195085	PrimaryExpression	0		8195076	1					
ANR	8195086	IdentifierDeclStatement	char SEPARATOR_STRING [ 2 ] ;	402:4:12795:12819	8195076	1	True				
ANR	8195087	IdentifierDecl	SEPARATOR_STRING [ 2 ]		8195076	0					
ANR	8195088	IdentifierDeclType	char [ 2 ]		8195076	0					
ANR	8195089	Identifier	SEPARATOR_STRING		8195076	1					
ANR	8195090	PrimaryExpression	2		8195076	2					
ANR	8195091	ExpressionStatement	SEPARATOR_STRING [ 0 ] = ( char ) gp_file_name_list_separator	404:4:12826:12881	8195076	2	True				
ANR	8195092	AssignmentExpression	SEPARATOR_STRING [ 0 ] = ( char ) gp_file_name_list_separator		8195076	0		=			
ANR	8195093	ArrayIndexing	SEPARATOR_STRING [ 0 ]		8195076	0					
ANR	8195094	Identifier	SEPARATOR_STRING		8195076	0					
ANR	8195095	PrimaryExpression	0		8195076	1					
ANR	8195096	CastExpression	( char ) gp_file_name_list_separator		8195076	1					
ANR	8195097	CastTarget	char		8195076	0					
ANR	8195098	Identifier	gp_file_name_list_separator		8195076	1					
ANR	8195099	ExpressionStatement	SEPARATOR_STRING [ 1 ] = '\\0'	405:4:12887:12913	8195076	3	True				
ANR	8195100	AssignmentExpression	SEPARATOR_STRING [ 1 ] = '\\0'		8195076	0		=			
ANR	8195101	ArrayIndexing	SEPARATOR_STRING [ 1 ]		8195076	0					
ANR	8195102	Identifier	SEPARATOR_STRING		8195076	0					
ANR	8195103	PrimaryExpression	1		8195076	1					
ANR	8195104	PrimaryExpression	'\\0'		8195076	1					
ANR	8195105	ExpressionStatement	length += strlen ( UFSTDIRPARM )	407:4:12920:12949	8195076	4	True				
ANR	8195106	AssignmentExpression	length += strlen ( UFSTDIRPARM )		8195076	0		+=			
ANR	8195107	Identifier	length		8195076	0					
ANR	8195108	CallExpression	strlen ( UFSTDIRPARM )		8195076	1					
ANR	8195109	Callee	strlen		8195076	0					
ANR	8195110	Identifier	strlen		8195076	0					
ANR	8195111	ArgumentList	UFSTDIRPARM		8195076	1					
ANR	8195112	Argument	UFSTDIRPARM		8195076	0					
ANR	8195113	Identifier	UFSTDIRPARM		8195076	0					
ANR	8195114	ExpressionStatement	length += strlen ( UFSTFONTDIR )	408:4:12955:12984	8195076	5	True				
ANR	8195115	AssignmentExpression	length += strlen ( UFSTFONTDIR )		8195076	0		+=			
ANR	8195116	Identifier	length		8195076	0					
ANR	8195117	CallExpression	strlen ( UFSTFONTDIR )		8195076	1					
ANR	8195118	Callee	strlen		8195076	0					
ANR	8195119	Identifier	strlen		8195076	0					
ANR	8195120	ArgumentList	UFSTFONTDIR		8195076	1					
ANR	8195121	Argument	UFSTFONTDIR		8195076	0					
ANR	8195122	Identifier	UFSTFONTDIR		8195076	0					
ANR	8195123	ExpressionStatement	length += strlen ( SEPARATOR_STRING )	409:4:12990:13024	8195076	6	True				
ANR	8195124	AssignmentExpression	length += strlen ( SEPARATOR_STRING )		8195076	0		+=			
ANR	8195125	Identifier	length		8195076	0					
ANR	8195126	CallExpression	strlen ( SEPARATOR_STRING )		8195076	1					
ANR	8195127	Callee	strlen		8195076	0					
ANR	8195128	Identifier	strlen		8195076	0					
ANR	8195129	ArgumentList	SEPARATOR_STRING		8195076	1					
ANR	8195130	Argument	SEPARATOR_STRING		8195076	0					
ANR	8195131	Identifier	SEPARATOR_STRING		8195076	0					
ANR	8195132	ExpressionStatement	length += strlen ( UFSTPLUGINPARM )	410:4:13030:13062	8195076	7	True				
ANR	8195133	AssignmentExpression	length += strlen ( UFSTPLUGINPARM )		8195076	0		+=			
ANR	8195134	Identifier	length		8195076	0					
ANR	8195135	CallExpression	strlen ( UFSTPLUGINPARM )		8195076	1					
ANR	8195136	Callee	strlen		8195076	0					
ANR	8195137	Identifier	strlen		8195076	0					
ANR	8195138	ArgumentList	UFSTPLUGINPARM		8195076	1					
ANR	8195139	Argument	UFSTPLUGINPARM		8195076	0					
ANR	8195140	Identifier	UFSTPLUGINPARM		8195076	0					
ANR	8195141	ExpressionStatement	length += strlen ( UFSTPLUGINS )	411:4:13068:13097	8195076	8	True				
ANR	8195142	AssignmentExpression	length += strlen ( UFSTPLUGINS )		8195076	0		+=			
ANR	8195143	Identifier	length		8195076	0					
ANR	8195144	CallExpression	strlen ( UFSTPLUGINS )		8195076	1					
ANR	8195145	Callee	strlen		8195076	0					
ANR	8195146	Identifier	strlen		8195076	0					
ANR	8195147	ArgumentList	UFSTPLUGINS		8195076	1					
ANR	8195148	Argument	UFSTPLUGINS		8195076	0					
ANR	8195149	Identifier	UFSTPLUGINS		8195076	0					
ANR	8195150	ExpressionStatement	length ++	412:4:13103:13111	8195076	9	True				
ANR	8195151	PostIncDecOperationExpression	length ++		8195076	0					
ANR	8195152	Identifier	length		8195076	0					
ANR	8195153	IncDec	++		8195076	1					
ANR	8195154	IfStatement	if ( ( * server_param ) != NULL && ( * server_param_size ) >= length )		8195076	10					
ANR	8195155	Condition	( * server_param ) != NULL && ( * server_param_size ) >= length	414:8:13122:13178	8195076	0	True				
ANR	8195156	AndExpression	( * server_param ) != NULL && ( * server_param_size ) >= length		8195076	0		&&			
ANR	8195157	EqualityExpression	( * server_param ) != NULL		8195076	0		!=			
ANR	8195158	UnaryOperationExpression	* server_param		8195076	0					
ANR	8195159	UnaryOperator	*		8195076	0					
ANR	8195160	Identifier	server_param		8195076	1					
ANR	8195161	Identifier	NULL		8195076	1					
ANR	8195162	RelationalExpression	( * server_param_size ) >= length		8195076	1		>=			
ANR	8195163	UnaryOperationExpression	* server_param_size		8195076	0					
ANR	8195164	UnaryOperator	*		8195076	0					
ANR	8195165	Identifier	server_param_size		8195076	1					
ANR	8195166	Identifier	length		8195076	1					
ANR	8195167	CompoundStatement		15:67:411:411	8195076	1					
ANR	8195168	ExpressionStatement	"strcpy ( ( char * ) * server_param , ( char * ) UFSTDIRPARM )"	415:8:13191:13241	8195076	0	True				
ANR	8195169	CallExpression	"strcpy ( ( char * ) * server_param , ( char * ) UFSTDIRPARM )"		8195076	0					
ANR	8195170	Callee	strcpy		8195076	0					
ANR	8195171	Identifier	strcpy		8195076	0					
ANR	8195172	ArgumentList	( char * ) * server_param		8195076	1					
ANR	8195173	Argument	( char * ) * server_param		8195076	0					
ANR	8195174	CastExpression	( char * ) * server_param		8195076	0					
ANR	8195175	CastTarget	char *		8195076	0					
ANR	8195176	UnaryOperationExpression	* server_param		8195076	1					
ANR	8195177	UnaryOperator	*		8195076	0					
ANR	8195178	Identifier	server_param		8195076	1					
ANR	8195179	Argument	( char * ) UFSTDIRPARM		8195076	1					
ANR	8195180	CastExpression	( char * ) UFSTDIRPARM		8195076	0					
ANR	8195181	CastTarget	char *		8195076	0					
ANR	8195182	Identifier	UFSTDIRPARM		8195076	1					
ANR	8195183	ExpressionStatement	"strcat ( ( char * ) * server_param , ( char * ) UFSTFONTDIR )"	416:8:13251:13301	8195076	1	True				
ANR	8195184	CallExpression	"strcat ( ( char * ) * server_param , ( char * ) UFSTFONTDIR )"		8195076	0					
ANR	8195185	Callee	strcat		8195076	0					
ANR	8195186	Identifier	strcat		8195076	0					
ANR	8195187	ArgumentList	( char * ) * server_param		8195076	1					
ANR	8195188	Argument	( char * ) * server_param		8195076	0					
ANR	8195189	CastExpression	( char * ) * server_param		8195076	0					
ANR	8195190	CastTarget	char *		8195076	0					
ANR	8195191	UnaryOperationExpression	* server_param		8195076	1					
ANR	8195192	UnaryOperator	*		8195076	0					
ANR	8195193	Identifier	server_param		8195076	1					
ANR	8195194	Argument	( char * ) UFSTFONTDIR		8195076	1					
ANR	8195195	CastExpression	( char * ) UFSTFONTDIR		8195076	0					
ANR	8195196	CastTarget	char *		8195076	0					
ANR	8195197	Identifier	UFSTFONTDIR		8195076	1					
ANR	8195198	ExpressionStatement	"strcat ( ( char * ) * server_param , ( char * ) SEPARATOR_STRING )"	417:8:13311:13366	8195076	2	True				
ANR	8195199	CallExpression	"strcat ( ( char * ) * server_param , ( char * ) SEPARATOR_STRING )"		8195076	0					
ANR	8195200	Callee	strcat		8195076	0					
ANR	8195201	Identifier	strcat		8195076	0					
ANR	8195202	ArgumentList	( char * ) * server_param		8195076	1					
ANR	8195203	Argument	( char * ) * server_param		8195076	0					
ANR	8195204	CastExpression	( char * ) * server_param		8195076	0					
ANR	8195205	CastTarget	char *		8195076	0					
ANR	8195206	UnaryOperationExpression	* server_param		8195076	1					
ANR	8195207	UnaryOperator	*		8195076	0					
ANR	8195208	Identifier	server_param		8195076	1					
ANR	8195209	Argument	( char * ) SEPARATOR_STRING		8195076	1					
ANR	8195210	CastExpression	( char * ) SEPARATOR_STRING		8195076	0					
ANR	8195211	CastTarget	char *		8195076	0					
ANR	8195212	Identifier	SEPARATOR_STRING		8195076	1					
ANR	8195213	ExpressionStatement	"strcat ( ( char * ) * server_param , ( char * ) UFSTPLUGINPARM )"	418:8:13376:13429	8195076	3	True				
ANR	8195214	CallExpression	"strcat ( ( char * ) * server_param , ( char * ) UFSTPLUGINPARM )"		8195076	0					
ANR	8195215	Callee	strcat		8195076	0					
ANR	8195216	Identifier	strcat		8195076	0					
ANR	8195217	ArgumentList	( char * ) * server_param		8195076	1					
ANR	8195218	Argument	( char * ) * server_param		8195076	0					
ANR	8195219	CastExpression	( char * ) * server_param		8195076	0					
ANR	8195220	CastTarget	char *		8195076	0					
ANR	8195221	UnaryOperationExpression	* server_param		8195076	1					
ANR	8195222	UnaryOperator	*		8195076	0					
ANR	8195223	Identifier	server_param		8195076	1					
ANR	8195224	Argument	( char * ) UFSTPLUGINPARM		8195076	1					
ANR	8195225	CastExpression	( char * ) UFSTPLUGINPARM		8195076	0					
ANR	8195226	CastTarget	char *		8195076	0					
ANR	8195227	Identifier	UFSTPLUGINPARM		8195076	1					
ANR	8195228	ExpressionStatement	"strcat ( ( char * ) * server_param , ( char * ) UFSTPLUGINS )"	419:8:13439:13489	8195076	4	True				
ANR	8195229	CallExpression	"strcat ( ( char * ) * server_param , ( char * ) UFSTPLUGINS )"		8195076	0					
ANR	8195230	Callee	strcat		8195076	0					
ANR	8195231	Identifier	strcat		8195076	0					
ANR	8195232	ArgumentList	( char * ) * server_param		8195076	1					
ANR	8195233	Argument	( char * ) * server_param		8195076	0					
ANR	8195234	CastExpression	( char * ) * server_param		8195076	0					
ANR	8195235	CastTarget	char *		8195076	0					
ANR	8195236	UnaryOperationExpression	* server_param		8195076	1					
ANR	8195237	UnaryOperator	*		8195076	0					
ANR	8195238	Identifier	server_param		8195076	1					
ANR	8195239	Argument	( char * ) UFSTPLUGINS		8195076	1					
ANR	8195240	CastExpression	( char * ) UFSTPLUGINS		8195076	0					
ANR	8195241	CastTarget	char *		8195076	0					
ANR	8195242	Identifier	UFSTPLUGINS		8195076	1					
ANR	8195243	ElseStatement	else		8195076	0					
ANR	8195244	CompoundStatement		21:11:732:732	8195076	0					
ANR	8195245	ExpressionStatement	* server_param = NULL	421:8:13512:13532	8195076	0	True				
ANR	8195246	AssignmentExpression	* server_param = NULL		8195076	0		=			
ANR	8195247	UnaryOperationExpression	* server_param		8195076	0					
ANR	8195248	UnaryOperator	*		8195076	0					
ANR	8195249	Identifier	server_param		8195076	1					
ANR	8195250	Identifier	NULL		8195076	1					
ANR	8195251	ExpressionStatement	* server_param_size = length	422:8:13542:13569	8195076	1	True				
ANR	8195252	AssignmentExpression	* server_param_size = length		8195076	0		=			
ANR	8195253	UnaryOperationExpression	* server_param_size		8195076	0					
ANR	8195254	UnaryOperator	*		8195076	0					
ANR	8195255	Identifier	server_param_size		8195076	1					
ANR	8195256	Identifier	length		8195076	1					
ANR	8195257	ReturnType	static void		8195076	1					
ANR	8195258	Identifier	pl_get_server_param		8195076	2					
ANR	8195259	ParameterList	"gs_fapi_server * I , const char * subtype , char * * server_param , int * server_param_size"		8195076	3					
ANR	8195260	Parameter	gs_fapi_server * I	398:20:12663:12680	8195076	0	True				
ANR	8195261	ParameterType	gs_fapi_server *		8195076	0					
ANR	8195262	Identifier	I		8195076	1					
ANR	8195263	Parameter	const char * subtype	398:40:12683:12701	8195076	1	True				
ANR	8195264	ParameterType	const char *		8195076	0					
ANR	8195265	Identifier	subtype		8195076	1					
ANR	8195266	Parameter	char * * server_param	399:20:12724:12742	8195076	2	True				
ANR	8195267	ParameterType	char * *		8195076	0					
ANR	8195268	Identifier	server_param		8195076	1					
ANR	8195269	Parameter	int * server_param_size	399:41:12745:12766	8195076	3	True				
ANR	8195270	ParameterType	int *		8195076	0					
ANR	8195271	Identifier	server_param_size		8195076	1					
ANR	8195272	CFGEntryNode	ENTRY		8195076		True				
ANR	8195273	CFGExitNode	EXIT		8195076		True				
ANR	8195274	Symbol	UFSTFONTDIR		8195076						
ANR	8195275	Symbol	SEPARATOR_STRING		8195076						
ANR	8195276	Symbol	NULL		8195076						
ANR	8195277	Symbol	UFSTPLUGINS		8195076						
ANR	8195278	Symbol	length		8195076						
ANR	8195279	Symbol	I		8195076						
ANR	8195280	Symbol	server_param		8195076						
ANR	8195281	Symbol	UFSTPLUGINPARM		8195076						
ANR	8195282	Symbol	strlen		8195076						
ANR	8195283	Symbol	* server_param_size		8195076						
ANR	8195284	Symbol	* SEPARATOR_STRING		8195076						
ANR	8195285	Symbol	subtype		8195076						
ANR	8195286	Symbol	server_param_size		8195076						
ANR	8195287	Symbol	* server_param		8195076						
ANR	8195288	Symbol	gp_file_name_list_separator		8195076						
ANR	8195289	Symbol	UFSTDIRPARM		8195076						
ANR	8195290	Function	pl_fapi_get_mtype_font_info	427:0:13581:13785							
ANR	8195291	FunctionDef	"pl_fapi_get_mtype_font_info (gs_font * pfont , gs_fapi_font_info item , void * data , int * size)"		8195290	0					
ANR	8195292	CompoundStatement		430:0:13719:13785	8195290	0					
ANR	8195293	ReturnStatement	"return ( gs_fapi_get_font_info ( pfont , item , 0 , data , size ) ) ;"	431:4:13725:13783	8195290	0	True				
ANR	8195294	CallExpression	"gs_fapi_get_font_info ( pfont , item , 0 , data , size )"		8195290	0					
ANR	8195295	Callee	gs_fapi_get_font_info		8195290	0					
ANR	8195296	Identifier	gs_fapi_get_font_info		8195290	0					
ANR	8195297	ArgumentList	pfont		8195290	1					
ANR	8195298	Argument	pfont		8195290	0					
ANR	8195299	Identifier	pfont		8195290	0					
ANR	8195300	Argument	item		8195290	1					
ANR	8195301	Identifier	item		8195290	0					
ANR	8195302	Argument	0		8195290	2					
ANR	8195303	PrimaryExpression	0		8195290	0					
ANR	8195304	Argument	data		8195290	3					
ANR	8195305	Identifier	data		8195290	0					
ANR	8195306	Argument	size		8195290	4					
ANR	8195307	Identifier	size		8195290	0					
ANR	8195308	ReturnType	static inline int		8195290	1					
ANR	8195309	Identifier	pl_fapi_get_mtype_font_info		8195290	2					
ANR	8195310	ParameterList	"gs_font * pfont , gs_fapi_font_info item , void * data , int * size"		8195290	3					
ANR	8195311	Parameter	gs_font * pfont	428:28:13627:13641	8195290	0	True				
ANR	8195312	ParameterType	gs_font *		8195290	0					
ANR	8195313	Identifier	pfont		8195290	1					
ANR	8195314	Parameter	gs_fapi_font_info item	428:45:13644:13665	8195290	1	True				
ANR	8195315	ParameterType	gs_fapi_font_info		8195290	0					
ANR	8195316	Identifier	item		8195290	1					
ANR	8195317	Parameter	void * data	429:28:13696:13705	8195290	2	True				
ANR	8195318	ParameterType	void *		8195290	0					
ANR	8195319	Identifier	data		8195290	1					
ANR	8195320	Parameter	int * size	429:40:13708:13716	8195290	3	True				
ANR	8195321	ParameterType	int *		8195290	0					
ANR	8195322	Identifier	size		8195290	1					
ANR	8195323	CFGEntryNode	ENTRY		8195290		True				
ANR	8195324	CFGExitNode	EXIT		8195290		True				
ANR	8195325	Symbol	item		8195290						
ANR	8195326	Symbol	data		8195290						
ANR	8195327	Symbol	size		8195290						
ANR	8195328	Symbol	pfont		8195290						
ANR	8195329	Symbol	gs_fapi_get_font_info		8195290						
ANR	8195330	Function	pl_fapi_get_mtype_font_name	434:0:13788:13961							
ANR	8195331	FunctionDef	"pl_fapi_get_mtype_font_name (gs_font * pfont , byte * data , int * size)"		8195330	0					
ANR	8195332	CompoundStatement		436:0:13861:13961	8195330	0					
ANR	8195333	ReturnStatement	"return ( pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_name , data , size ) ) ;"	437:4:13867:13959	8195330	0	True				
ANR	8195334	CallExpression	"pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_name , data , size )"		8195330	0					
ANR	8195335	Callee	pl_fapi_get_mtype_font_info		8195330	0					
ANR	8195336	Identifier	pl_fapi_get_mtype_font_info		8195330	0					
ANR	8195337	ArgumentList	pfont		8195330	1					
ANR	8195338	Argument	pfont		8195330	0					
ANR	8195339	Identifier	pfont		8195330	0					
ANR	8195340	Argument	gs_fapi_font_info_name		8195330	1					
ANR	8195341	Identifier	gs_fapi_font_info_name		8195330	0					
ANR	8195342	Argument	data		8195330	2					
ANR	8195343	Identifier	data		8195330	0					
ANR	8195344	Argument	size		8195330	3					
ANR	8195345	Identifier	size		8195330	0					
ANR	8195346	ReturnType	int		8195330	1					
ANR	8195347	Identifier	pl_fapi_get_mtype_font_name		8195330	2					
ANR	8195348	ParameterList	"gs_font * pfont , byte * data , int * size"		8195330	3					
ANR	8195349	Parameter	gs_font * pfont	435:28:13820:13834	8195330	0	True				
ANR	8195350	ParameterType	gs_font *		8195330	0					
ANR	8195351	Identifier	pfont		8195330	1					
ANR	8195352	Parameter	byte * data	435:45:13837:13847	8195330	1	True				
ANR	8195353	ParameterType	byte *		8195330	0					
ANR	8195354	Identifier	data		8195330	1					
ANR	8195355	Parameter	int * size	435:58:13850:13858	8195330	2	True				
ANR	8195356	ParameterType	int *		8195330	0					
ANR	8195357	Identifier	size		8195330	1					
ANR	8195358	CFGEntryNode	ENTRY		8195330		True				
ANR	8195359	CFGExitNode	EXIT		8195330		True				
ANR	8195360	Symbol	data		8195330						
ANR	8195361	Symbol	size		8195330						
ANR	8195362	Symbol	pfont		8195330						
ANR	8195363	Symbol	pl_fapi_get_mtype_font_info		8195330						
ANR	8195364	Symbol	gs_fapi_font_info_name		8195330						
ANR	8195365	Function	pl_fapi_get_mtype_font_number	441:0:13964:14183							
ANR	8195366	FunctionDef	"pl_fapi_get_mtype_font_number (gs_font * pfont , int * font_number)"		8195365	0					
ANR	8195367	CompoundStatement		443:0:14033:14183	8195365	0					
ANR	8195368	IdentifierDeclStatement	int size = ( int ) sizeof ( * font_number ) ;	444:4:14039:14075	8195365	0	True				
ANR	8195369	IdentifierDecl	size = ( int ) sizeof ( * font_number )		8195365	0					
ANR	8195370	IdentifierDeclType	int		8195365	0					
ANR	8195371	Identifier	size		8195365	1					
ANR	8195372	AssignmentExpression	size = ( int ) sizeof ( * font_number )		8195365	2		=			
ANR	8195373	Identifier	size		8195365	0					
ANR	8195374	CastExpression	( int ) sizeof ( * font_number )		8195365	1					
ANR	8195375	CastTarget	int		8195365	0					
ANR	8195376	SizeofExpression	sizeof ( * font_number )		8195365	1					
ANR	8195377	Sizeof	sizeof		8195365	0					
ANR	8195378	UnaryOperationExpression	* font_number		8195365	1					
ANR	8195379	UnaryOperator	*		8195365	0					
ANR	8195380	Identifier	font_number		8195365	1					
ANR	8195381	ReturnStatement	"return ( pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_uid , font_number , & size ) ) ;"	446:4:14082:14181	8195365	1	True				
ANR	8195382	CallExpression	"pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_uid , font_number , & size )"		8195365	0					
ANR	8195383	Callee	pl_fapi_get_mtype_font_info		8195365	0					
ANR	8195384	Identifier	pl_fapi_get_mtype_font_info		8195365	0					
ANR	8195385	ArgumentList	pfont		8195365	1					
ANR	8195386	Argument	pfont		8195365	0					
ANR	8195387	Identifier	pfont		8195365	0					
ANR	8195388	Argument	gs_fapi_font_info_uid		8195365	1					
ANR	8195389	Identifier	gs_fapi_font_info_uid		8195365	0					
ANR	8195390	Argument	font_number		8195365	2					
ANR	8195391	Identifier	font_number		8195365	0					
ANR	8195392	Argument	& size		8195365	3					
ANR	8195393	UnaryOperationExpression	& size		8195365	0					
ANR	8195394	UnaryOperator	&		8195365	0					
ANR	8195395	Identifier	size		8195365	1					
ANR	8195396	ReturnType	int		8195365	1					
ANR	8195397	Identifier	pl_fapi_get_mtype_font_number		8195365	2					
ANR	8195398	ParameterList	"gs_font * pfont , int * font_number"		8195365	3					
ANR	8195399	Parameter	gs_font * pfont	442:30:13998:14012	8195365	0	True				
ANR	8195400	ParameterType	gs_font *		8195365	0					
ANR	8195401	Identifier	pfont		8195365	1					
ANR	8195402	Parameter	int * font_number	442:47:14015:14030	8195365	1	True				
ANR	8195403	ParameterType	int *		8195365	0					
ANR	8195404	Identifier	font_number		8195365	1					
ANR	8195405	CFGEntryNode	ENTRY		8195365		True				
ANR	8195406	CFGExitNode	EXIT		8195365		True				
ANR	8195407	Symbol	* font_number		8195365						
ANR	8195408	Symbol	size		8195365						
ANR	8195409	Symbol	pfont		8195365						
ANR	8195410	Symbol	gs_fapi_font_info_uid		8195365						
ANR	8195411	Symbol	font_number		8195365						
ANR	8195412	Symbol	pl_fapi_get_mtype_font_info		8195365						
ANR	8195413	Symbol	& size		8195365						
ANR	8195414	Function	pl_fapi_get_mtype_font_spaceBand	450:0:14186:14406							
ANR	8195415	FunctionDef	"pl_fapi_get_mtype_font_spaceBand (gs_font * pfont , uint * spaceBand)"		8195414	0					
ANR	8195416	CompoundStatement		452:0:14258:14406	8195414	0					
ANR	8195417	IdentifierDeclStatement	int size = ( int ) sizeof ( * spaceBand ) ;	453:4:14264:14298	8195414	0	True				
ANR	8195418	IdentifierDecl	size = ( int ) sizeof ( * spaceBand )		8195414	0					
ANR	8195419	IdentifierDeclType	int		8195414	0					
ANR	8195420	Identifier	size		8195414	1					
ANR	8195421	AssignmentExpression	size = ( int ) sizeof ( * spaceBand )		8195414	2		=			
ANR	8195422	Identifier	size		8195414	0					
ANR	8195423	CastExpression	( int ) sizeof ( * spaceBand )		8195414	1					
ANR	8195424	CastTarget	int		8195414	0					
ANR	8195425	SizeofExpression	sizeof ( * spaceBand )		8195414	1					
ANR	8195426	Sizeof	sizeof		8195414	0					
ANR	8195427	UnaryOperationExpression	* spaceBand		8195414	1					
ANR	8195428	UnaryOperator	*		8195414	0					
ANR	8195429	Identifier	spaceBand		8195414	1					
ANR	8195430	ReturnStatement	"return ( pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_pitch , spaceBand , & size ) ) ;"	455:4:14305:14404	8195414	1	True				
ANR	8195431	CallExpression	"pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_pitch , spaceBand , & size )"		8195414	0					
ANR	8195432	Callee	pl_fapi_get_mtype_font_info		8195414	0					
ANR	8195433	Identifier	pl_fapi_get_mtype_font_info		8195414	0					
ANR	8195434	ArgumentList	pfont		8195414	1					
ANR	8195435	Argument	pfont		8195414	0					
ANR	8195436	Identifier	pfont		8195414	0					
ANR	8195437	Argument	gs_fapi_font_info_pitch		8195414	1					
ANR	8195438	Identifier	gs_fapi_font_info_pitch		8195414	0					
ANR	8195439	Argument	spaceBand		8195414	2					
ANR	8195440	Identifier	spaceBand		8195414	0					
ANR	8195441	Argument	& size		8195414	3					
ANR	8195442	UnaryOperationExpression	& size		8195414	0					
ANR	8195443	UnaryOperator	&		8195414	0					
ANR	8195444	Identifier	size		8195414	1					
ANR	8195445	ReturnType	int		8195414	1					
ANR	8195446	Identifier	pl_fapi_get_mtype_font_spaceBand		8195414	2					
ANR	8195447	ParameterList	"gs_font * pfont , uint * spaceBand"		8195414	3					
ANR	8195448	Parameter	gs_font * pfont	451:33:14223:14237	8195414	0	True				
ANR	8195449	ParameterType	gs_font *		8195414	0					
ANR	8195450	Identifier	pfont		8195414	1					
ANR	8195451	Parameter	uint * spaceBand	451:50:14240:14255	8195414	1	True				
ANR	8195452	ParameterType	uint *		8195414	0					
ANR	8195453	Identifier	spaceBand		8195414	1					
ANR	8195454	CFGEntryNode	ENTRY		8195414		True				
ANR	8195455	CFGExitNode	EXIT		8195414		True				
ANR	8195456	Symbol	size		8195414						
ANR	8195457	Symbol	pfont		8195414						
ANR	8195458	Symbol	gs_fapi_font_info_pitch		8195414						
ANR	8195459	Symbol	spaceBand		8195414						
ANR	8195460	Symbol	* spaceBand		8195414						
ANR	8195461	Symbol	pl_fapi_get_mtype_font_info		8195414						
ANR	8195462	Symbol	& size		8195414						
ANR	8195463	Function	pl_fapi_get_mtype_font_scaleFactor	459:0:14409:14644							
ANR	8195464	FunctionDef	"pl_fapi_get_mtype_font_scaleFactor (gs_font * pfont , uint * scaleFactor)"		8195463	0					
ANR	8195465	CompoundStatement		461:0:14485:14644	8195463	0					
ANR	8195466	IdentifierDeclStatement	int size = ( int ) sizeof ( * scaleFactor ) ;	462:4:14491:14527	8195463	0	True				
ANR	8195467	IdentifierDecl	size = ( int ) sizeof ( * scaleFactor )		8195463	0					
ANR	8195468	IdentifierDeclType	int		8195463	0					
ANR	8195469	Identifier	size		8195463	1					
ANR	8195470	AssignmentExpression	size = ( int ) sizeof ( * scaleFactor )		8195463	2		=			
ANR	8195471	Identifier	size		8195463	0					
ANR	8195472	CastExpression	( int ) sizeof ( * scaleFactor )		8195463	1					
ANR	8195473	CastTarget	int		8195463	0					
ANR	8195474	SizeofExpression	sizeof ( * scaleFactor )		8195463	1					
ANR	8195475	Sizeof	sizeof		8195463	0					
ANR	8195476	UnaryOperationExpression	* scaleFactor		8195463	1					
ANR	8195477	UnaryOperator	*		8195463	0					
ANR	8195478	Identifier	scaleFactor		8195463	1					
ANR	8195479	ReturnStatement	"return ( pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_design_units , scaleFactor , & size ) ) ;"	464:4:14534:14642	8195463	1	True				
ANR	8195480	CallExpression	"pl_fapi_get_mtype_font_info ( pfont , gs_fapi_font_info_design_units , scaleFactor , & size )"		8195463	0					
ANR	8195481	Callee	pl_fapi_get_mtype_font_info		8195463	0					
ANR	8195482	Identifier	pl_fapi_get_mtype_font_info		8195463	0					
ANR	8195483	ArgumentList	pfont		8195463	1					
ANR	8195484	Argument	pfont		8195463	0					
ANR	8195485	Identifier	pfont		8195463	0					
ANR	8195486	Argument	gs_fapi_font_info_design_units		8195463	1					
ANR	8195487	Identifier	gs_fapi_font_info_design_units		8195463	0					
ANR	8195488	Argument	scaleFactor		8195463	2					
ANR	8195489	Identifier	scaleFactor		8195463	0					
ANR	8195490	Argument	& size		8195463	3					
ANR	8195491	UnaryOperationExpression	& size		8195463	0					
ANR	8195492	UnaryOperator	&		8195463	0					
ANR	8195493	Identifier	size		8195463	1					
ANR	8195494	ReturnType	int		8195463	1					
ANR	8195495	Identifier	pl_fapi_get_mtype_font_scaleFactor		8195463	2					
ANR	8195496	ParameterList	"gs_font * pfont , uint * scaleFactor"		8195463	3					
ANR	8195497	Parameter	gs_font * pfont	460:35:14448:14462	8195463	0	True				
ANR	8195498	ParameterType	gs_font *		8195463	0					
ANR	8195499	Identifier	pfont		8195463	1					
ANR	8195500	Parameter	uint * scaleFactor	460:52:14465:14482	8195463	1	True				
ANR	8195501	ParameterType	uint *		8195463	0					
ANR	8195502	Identifier	scaleFactor		8195463	1					
ANR	8195503	CFGEntryNode	ENTRY		8195463		True				
ANR	8195504	CFGExitNode	EXIT		8195463		True				
ANR	8195505	Symbol	* scaleFactor		8195463						
ANR	8195506	Symbol	size		8195463						
ANR	8195507	Symbol	pfont		8195463						
ANR	8195508	Symbol	gs_fapi_font_info_design_units		8195463						
ANR	8195509	Symbol	scaleFactor		8195463						
ANR	8195510	Symbol	pl_fapi_get_mtype_font_info		8195463						
ANR	8195511	Symbol	& size		8195463						
ANR	8195512	DeclStmt									
ANR	8195513	Decl							const gs_text_enum_procs_t	const gs_text_enum_procs_t	null_text_procs
ANR	8195514	Function	pl_show_text_is_width_only	478:0:14909:14995							
ANR	8195515	FunctionDef	pl_show_text_is_width_only (const gs_text_enum_t * pte)		8195514	0					
ANR	8195516	CompoundStatement		480:0:14975:14995	8195514	0					
ANR	8195517	ReturnStatement	return ( true ) ;	481:4:14981:14993	8195514	0	True				
ANR	8195518	Identifier	true		8195514	0					
ANR	8195519	ReturnType	static bool		8195514	1					
ANR	8195520	Identifier	pl_show_text_is_width_only		8195514	2					
ANR	8195521	ParameterList	const gs_text_enum_t * pte		8195514	3					
ANR	8195522	Parameter	const gs_text_enum_t * pte	479:27:14948:14972	8195514	0	True				
ANR	8195523	ParameterType	const gs_text_enum_t *		8195514	0					
ANR	8195524	Identifier	pte		8195514	1					
ANR	8195525	CFGEntryNode	ENTRY		8195514		True				
ANR	8195526	CFGExitNode	EXIT		8195514		True				
ANR	8195527	Symbol	pte		8195514						
ANR	8195528	Symbol	true		8195514						
ANR	8195529	Function	pl_text_release	484:0:14998:15101							
ANR	8195530	FunctionDef	"pl_text_release (gs_text_enum_t * pte , client_name_t cname)"		8195529	0					
ANR	8195531	CompoundStatement		485:0:15061:15101	8195529	0					
ANR	8195532	ExpressionStatement	( void ) pte	486:2:15065:15074	8195529	0	True				
ANR	8195533	CastExpression	( void ) pte		8195529	0					
ANR	8195534	CastTarget	void		8195529	0					
ANR	8195535	Identifier	pte		8195529	1					
ANR	8195536	ExpressionStatement	( void ) cname	487:2:15078:15089	8195529	1	True				
ANR	8195537	CastExpression	( void ) cname		8195529	0					
ANR	8195538	CastTarget	void		8195529	0					
ANR	8195539	Identifier	cname		8195529	1					
ANR	8195540	ReturnStatement	return ;	488:2:15093:15099	8195529	2	True				
ANR	8195541	ReturnType	void		8195529	1					
ANR	8195542	Identifier	pl_text_release		8195529	2					
ANR	8195543	ParameterList	"gs_text_enum_t * pte , client_name_t cname"		8195529	3					
ANR	8195544	Parameter	gs_text_enum_t * pte	484:21:15019:15037	8195529	0	True				
ANR	8195545	ParameterType	gs_text_enum_t *		8195529	0					
ANR	8195546	Identifier	pte		8195529	1					
ANR	8195547	Parameter	client_name_t cname	484:42:15040:15058	8195529	1	True				
ANR	8195548	ParameterType	client_name_t		8195529	0					
ANR	8195549	Identifier	cname		8195529	1					
ANR	8195550	CFGEntryNode	ENTRY		8195529		True				
ANR	8195551	CFGExitNode	EXIT		8195529		True				
ANR	8195552	Symbol	pte		8195529						
ANR	8195553	Symbol	cname		8195529						
ANR	8195554	Function	pl_fapi_set_cache_metrics	491:0:15104:15590							
ANR	8195555	FunctionDef	"pl_fapi_set_cache_metrics (gs_text_enum_t * penum , const gs_font_base * pbfont , const gs_string * char_name , int cid , const double pwidth [ 2 ] , const gs_rect * pbbox , const double Metrics2_sbw_default [ 4 ] , bool * imagenow)"		8195554	0					
ANR	8195556	CompoundStatement		497:0:15434:15590	8195554	0					
ANR	8195557	ExpressionStatement	penum -> returned . total_width . x = pwidth [ 0 ]	498:4:15440:15481	8195554	0	True				
ANR	8195558	AssignmentExpression	penum -> returned . total_width . x = pwidth [ 0 ]		8195554	0		=			
ANR	8195559	MemberAccess	penum -> returned . total_width . x		8195554	0					
ANR	8195560	MemberAccess	penum -> returned . total_width		8195554	0					
ANR	8195561	PtrMemberAccess	penum -> returned		8195554	0					
ANR	8195562	Identifier	penum		8195554	0					
ANR	8195563	Identifier	returned		8195554	1					
ANR	8195564	Identifier	total_width		8195554	1					
ANR	8195565	Identifier	x		8195554	1					
ANR	8195566	ArrayIndexing	pwidth [ 0 ]		8195554	1					
ANR	8195567	Identifier	pwidth		8195554	0					
ANR	8195568	PrimaryExpression	0		8195554	1					
ANR	8195569	ExpressionStatement	penum -> returned . total_width . y = pwidth [ 1 ]	499:4:15487:15528	8195554	1	True				
ANR	8195570	AssignmentExpression	penum -> returned . total_width . y = pwidth [ 1 ]		8195554	0		=			
ANR	8195571	MemberAccess	penum -> returned . total_width . y		8195554	0					
ANR	8195572	MemberAccess	penum -> returned . total_width		8195554	0					
ANR	8195573	PtrMemberAccess	penum -> returned		8195554	0					
ANR	8195574	Identifier	penum		8195554	0					
ANR	8195575	Identifier	returned		8195554	1					
ANR	8195576	Identifier	total_width		8195554	1					
ANR	8195577	Identifier	y		8195554	1					
ANR	8195578	ArrayIndexing	pwidth [ 1 ]		8195554	1					
ANR	8195579	Identifier	pwidth		8195554	0					
ANR	8195580	PrimaryExpression	1		8195554	1					
ANR	8195581	ExpressionStatement	* imagenow = false	501:4:15535:15552	8195554	2	True				
ANR	8195582	AssignmentExpression	* imagenow = false		8195554	0		=			
ANR	8195583	UnaryOperationExpression	* imagenow		8195554	0					
ANR	8195584	UnaryOperator	*		8195554	0					
ANR	8195585	Identifier	imagenow		8195554	1					
ANR	8195586	Identifier	false		8195554	1					
ANR	8195587	ReturnStatement	return ( gs_error_unknownerror ) ;	502:4:15558:15588	8195554	3	True				
ANR	8195588	Identifier	gs_error_unknownerror		8195554	0					
ANR	8195589	ReturnType	static int		8195554	1					
ANR	8195590	Identifier	pl_fapi_set_cache_metrics		8195554	2					
ANR	8195591	ParameterList	"gs_text_enum_t * penum , const gs_font_base * pbfont , const gs_string * char_name , int cid , const double pwidth [ 2 ] , const gs_rect * pbbox , const double Metrics2_sbw_default [ 4 ] , bool * imagenow"		8195554	3					
ANR	8195592	Parameter	gs_text_enum_t * penum	492:26:15141:15162	8195554	0	True				
ANR	8195593	ParameterType	gs_text_enum_t *		8195554	0					
ANR	8195594	Identifier	penum		8195554	1					
ANR	8195595	Parameter	const gs_font_base * pbfont	492:50:15165:15191	8195554	1	True				
ANR	8195596	ParameterType	const gs_font_base *		8195554	0					
ANR	8195597	Identifier	pbfont		8195554	1					
ANR	8195598	Parameter	const gs_string * char_name	493:25:15219:15245	8195554	2	True				
ANR	8195599	ParameterType	const gs_string *		8195554	0					
ANR	8195600	Identifier	char_name		8195554	1					
ANR	8195601	Parameter	int cid	493:54:15248:15254	8195554	3	True				
ANR	8195602	ParameterType	int		8195554	0					
ANR	8195603	Identifier	cid		8195554	1					
ANR	8195604	Parameter	const double pwidth [ 2 ]	494:25:15282:15303	8195554	4	True				
ANR	8195605	ParameterType	const double [ 2 ]		8195554	0					
ANR	8195606	Identifier	pwidth		8195554	1					
ANR	8195607	Parameter	const gs_rect * pbbox	494:49:15306:15326	8195554	5	True				
ANR	8195608	ParameterType	const gs_rect *		8195554	0					
ANR	8195609	Identifier	pbbox		8195554	1					
ANR	8195610	Parameter	const double Metrics2_sbw_default [ 4 ]	495:25:15354:15389	8195554	6	True				
ANR	8195611	ParameterType	const double [ 4 ]		8195554	0					
ANR	8195612	Identifier	Metrics2_sbw_default		8195554	1					
ANR	8195613	Parameter	bool * imagenow	496:25:15417:15431	8195554	7	True				
ANR	8195614	ParameterType	bool *		8195554	0					
ANR	8195615	Identifier	imagenow		8195554	1					
ANR	8195616	CFGEntryNode	ENTRY		8195554		True				
ANR	8195617	CFGExitNode	EXIT		8195554		True				
ANR	8195618	Symbol	pbbox		8195554						
ANR	8195619	Symbol	* penum		8195554						
ANR	8195620	Symbol	penum		8195554						
ANR	8195621	Symbol	false		8195554						
ANR	8195622	Symbol	pwidth		8195554						
ANR	8195623	Symbol	penum -> returned . total_width		8195554						
ANR	8195624	Symbol	* imagenow		8195554						
ANR	8195625	Symbol	char_name		8195554						
ANR	8195626	Symbol	penum -> returned		8195554						
ANR	8195627	Symbol	pbfont		8195554						
ANR	8195628	Symbol	imagenow		8195554						
ANR	8195629	Symbol	* pwidth		8195554						
ANR	8195630	Symbol	penum -> returned . total_width . x		8195554						
ANR	8195631	Symbol	penum -> returned . total_width . y		8195554						
ANR	8195632	Symbol	cid		8195554						
ANR	8195633	Symbol	Metrics2_sbw_default		8195554						
ANR	8195634	Symbol	gs_error_unknownerror		8195554						
ANR	8195635	Function	pl_fapi_char_metrics	505:0:15593:18726							
ANR	8195636	FunctionDef	"pl_fapi_char_metrics (const pl_font_t * plfont , const void * vpgs , gs_char char_code , float metrics [ 4 ])"		8195635	0					
ANR	8195637	CompoundStatement		508:0:15727:18726	8195635	0					
ANR	8195638	IdentifierDeclStatement	int code = 0 ;	509:4:15733:15745	8195635	0	True				
ANR	8195639	IdentifierDecl	code = 0		8195635	0					
ANR	8195640	IdentifierDeclType	int		8195635	0					
ANR	8195641	Identifier	code		8195635	1					
ANR	8195642	AssignmentExpression	code = 0		8195635	2		=			
ANR	8195643	Identifier	code		8195635	0					
ANR	8195644	PrimaryExpression	0		8195635	1					
ANR	8195645	IdentifierDeclStatement	gs_text_enum_t * penum1 ;	510:4:15751:15773	8195635	1	True				
ANR	8195646	IdentifierDecl	* penum1		8195635	0					
ANR	8195647	IdentifierDeclType	gs_text_enum_t *		8195635	0					
ANR	8195648	Identifier	penum1		8195635	1					
ANR	8195649	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	511:4:15779:15809	8195635	2	True				
ANR	8195650	IdentifierDecl	* pfont = plfont -> pfont		8195635	0					
ANR	8195651	IdentifierDeclType	gs_font *		8195635	0					
ANR	8195652	Identifier	pfont		8195635	1					
ANR	8195653	AssignmentExpression	* pfont = plfont -> pfont		8195635	2		=			
ANR	8195654	Identifier	pfont		8195635	0					
ANR	8195655	PtrMemberAccess	plfont -> pfont		8195635	1					
ANR	8195656	Identifier	plfont		8195635	0					
ANR	8195657	Identifier	pfont		8195635	1					
ANR	8195658	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	512:4:15815:15860	8195635	3	True				
ANR	8195659	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		8195635	0					
ANR	8195660	IdentifierDeclType	gs_font_base *		8195635	0					
ANR	8195661	Identifier	pbfont		8195635	1					
ANR	8195662	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		8195635	2		=			
ANR	8195663	Identifier	pbfont		8195635	0					
ANR	8195664	CastExpression	( gs_font_base * ) pfont		8195635	1					
ANR	8195665	CastTarget	gs_font_base *		8195635	0					
ANR	8195666	Identifier	pfont		8195635	1					
ANR	8195667	IdentifierDeclStatement	gs_text_params_t text ;	513:4:15866:15887	8195635	4	True				
ANR	8195668	IdentifierDecl	text		8195635	0					
ANR	8195669	IdentifierDeclType	gs_text_params_t		8195635	0					
ANR	8195670	Identifier	text		8195635	1					
ANR	8195671	IdentifierDeclStatement	gs_char buf [ 2 ] ;	514:4:15893:15907	8195635	5	True				
ANR	8195672	IdentifierDecl	buf [ 2 ]		8195635	0					
ANR	8195673	IdentifierDeclType	gs_char [ 2 ]		8195635	0					
ANR	8195674	Identifier	buf		8195635	1					
ANR	8195675	PrimaryExpression	2		8195635	2					
ANR	8195676	IdentifierDeclStatement	gs_gstate * rpgs = ( gs_gstate * ) vpgs ;	515:4:15913:15949	8195635	6	True				
ANR	8195677	IdentifierDecl	* rpgs = ( gs_gstate * ) vpgs		8195635	0					
ANR	8195678	IdentifierDeclType	gs_gstate *		8195635	0					
ANR	8195679	Identifier	rpgs		8195635	1					
ANR	8195680	AssignmentExpression	* rpgs = ( gs_gstate * ) vpgs		8195635	2		=			
ANR	8195681	Identifier	rpgs		8195635	0					
ANR	8195682	CastExpression	( gs_gstate * ) vpgs		8195635	1					
ANR	8195683	CastTarget	gs_gstate *		8195635	0					
ANR	8195684	Identifier	vpgs		8195635	1					
ANR	8195685	IdentifierDeclStatement	gs_char chr = char_code ;	517:4:16023:16046	8195635	7	True				
ANR	8195686	IdentifierDecl	chr = char_code		8195635	0					
ANR	8195687	IdentifierDeclType	gs_char		8195635	0					
ANR	8195688	Identifier	chr		8195635	1					
ANR	8195689	AssignmentExpression	chr = char_code		8195635	2		=			
ANR	8195690	Identifier	char_code		8195635	0					
ANR	8195691	Identifier	char_code		8195635	1					
ANR	8195692	IdentifierDeclStatement	gs_glyph unused_glyph = GS_NO_GLYPH ;	518:4:16052:16087	8195635	8	True				
ANR	8195693	IdentifierDecl	unused_glyph = GS_NO_GLYPH		8195635	0					
ANR	8195694	IdentifierDeclType	gs_glyph		8195635	0					
ANR	8195695	Identifier	unused_glyph		8195635	1					
ANR	8195696	AssignmentExpression	unused_glyph = GS_NO_GLYPH		8195635	2		=			
ANR	8195697	Identifier	GS_NO_GLYPH		8195635	0					
ANR	8195698	Identifier	GS_NO_GLYPH		8195635	1					
ANR	8195699	IdentifierDeclStatement	gs_glyph glyph ;	519:4:16093:16107	8195635	9	True				
ANR	8195700	IdentifierDecl	glyph		8195635	0					
ANR	8195701	IdentifierDeclType	gs_glyph		8195635	0					
ANR	8195702	Identifier	glyph		8195635	1					
ANR	8195703	IdentifierDeclStatement	"gs_matrix mat = { 72.0 , 0.0 , 0.0 , 72.0 , 0.0 , 0.0 } ;"	520:4:16113:16161	8195635	10	True				
ANR	8195704	IdentifierDecl	"mat = { 72.0 , 0.0 , 0.0 , 72.0 , 0.0 , 0.0 }"		8195635	0					
ANR	8195705	IdentifierDeclType	gs_matrix		8195635	0					
ANR	8195706	Identifier	mat		8195635	1					
ANR	8195707	AssignmentExpression	"mat = { 72.0 , 0.0 , 0.0 , 72.0 , 0.0 , 0.0 }"		8195635	2		=			
ANR	8195708	Identifier	mat		8195635	0					
ANR	8195709	InitializerList	72.0		8195635	1					
ANR	8195710	PrimaryExpression	72.0		8195635	0					
ANR	8195711	PrimaryExpression	0.0		8195635	1					
ANR	8195712	PrimaryExpression	0.0		8195635	2					
ANR	8195713	PrimaryExpression	72.0		8195635	3					
ANR	8195714	PrimaryExpression	0.0		8195635	4					
ANR	8195715	PrimaryExpression	0.0		8195635	5					
ANR	8195716	IdentifierDeclStatement	gs_matrix fmat ;	521:4:16167:16181	8195635	11	True				
ANR	8195717	IdentifierDecl	fmat		8195635	0					
ANR	8195718	IdentifierDeclType	gs_matrix		8195635	0					
ANR	8195719	Identifier	fmat		8195635	1					
ANR	8195720	IdentifierDeclStatement	gs_fapi_font tmp_ff ;	522:4:16187:16206	8195635	12	True				
ANR	8195721	IdentifierDecl	tmp_ff		8195635	0					
ANR	8195722	IdentifierDeclType	gs_fapi_font		8195635	0					
ANR	8195723	Identifier	tmp_ff		8195635	1					
ANR	8195724	IfStatement	if ( pfont -> FontType == ft_MicroType )		8195635	13					
ANR	8195725	Condition	pfont -> FontType == ft_MicroType	524:8:16217:16247	8195635	0	True				
ANR	8195726	EqualityExpression	pfont -> FontType == ft_MicroType		8195635	0		==			
ANR	8195727	PtrMemberAccess	pfont -> FontType		8195635	0					
ANR	8195728	Identifier	pfont		8195635	0					
ANR	8195729	Identifier	FontType		8195635	1					
ANR	8195730	Identifier	ft_MicroType		8195635	1					
ANR	8195731	CompoundStatement		17:41:522:522	8195635	1					
ANR	8195732	ExpressionStatement	glyph = char_code	525:8:16260:16277	8195635	0	True				
ANR	8195733	AssignmentExpression	glyph = char_code		8195635	0		=			
ANR	8195734	Identifier	glyph		8195635	0					
ANR	8195735	Identifier	char_code		8195635	1					
ANR	8195736	ElseStatement	else		8195635	0					
ANR	8195737	CompoundStatement		19:11:562:562	8195635	0					
ANR	8195738	ExpressionStatement	"glyph = pl_tt_encode_char ( pfont , chr , unused_glyph )"	527:8:16300:16351	8195635	0	True				
ANR	8195739	AssignmentExpression	"glyph = pl_tt_encode_char ( pfont , chr , unused_glyph )"		8195635	0		=			
ANR	8195740	Identifier	glyph		8195635	0					
ANR	8195741	CallExpression	"pl_tt_encode_char ( pfont , chr , unused_glyph )"		8195635	1					
ANR	8195742	Callee	pl_tt_encode_char		8195635	0					
ANR	8195743	Identifier	pl_tt_encode_char		8195635	0					
ANR	8195744	ArgumentList	pfont		8195635	1					
ANR	8195745	Argument	pfont		8195635	0					
ANR	8195746	Identifier	pfont		8195635	0					
ANR	8195747	Argument	chr		8195635	1					
ANR	8195748	Identifier	chr		8195635	0					
ANR	8195749	Argument	unused_glyph		8195635	2					
ANR	8195750	Identifier	unused_glyph		8195635	0					
ANR	8195751	IfStatement	if ( pfont -> WMode & 1 )		8195635	14					
ANR	8195752	Condition	pfont -> WMode & 1	530:8:16368:16383	8195635	0	True				
ANR	8195753	BitAndExpression	pfont -> WMode & 1		8195635	0		&			
ANR	8195754	PtrMemberAccess	pfont -> WMode		8195635	0					
ANR	8195755	Identifier	pfont		8195635	0					
ANR	8195756	Identifier	WMode		8195635	1					
ANR	8195757	PrimaryExpression	1		8195635	1					
ANR	8195758	CompoundStatement		24:8:668:725	8195635	1					
ANR	8195759	IdentifierDeclStatement	"gs_glyph vertical = pl_font_vertical_glyph ( glyph , plfont ) ;"	531:8:16396:16453	8195635	0	True				
ANR	8195760	IdentifierDecl	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8195635	0					
ANR	8195761	IdentifierDeclType	gs_glyph		8195635	0					
ANR	8195762	Identifier	vertical		8195635	1					
ANR	8195763	AssignmentExpression	"vertical = pl_font_vertical_glyph ( glyph , plfont )"		8195635	2		=			
ANR	8195764	Identifier	vertical		8195635	0					
ANR	8195765	CallExpression	"pl_font_vertical_glyph ( glyph , plfont )"		8195635	1					
ANR	8195766	Callee	pl_font_vertical_glyph		8195635	0					
ANR	8195767	Identifier	pl_font_vertical_glyph		8195635	0					
ANR	8195768	ArgumentList	glyph		8195635	1					
ANR	8195769	Argument	glyph		8195635	0					
ANR	8195770	Identifier	glyph		8195635	0					
ANR	8195771	Argument	plfont		8195635	1					
ANR	8195772	Identifier	plfont		8195635	0					
ANR	8195773	IfStatement	if ( vertical != GS_NO_GLYPH )		8195635	1					
ANR	8195774	Condition	vertical != GS_NO_GLYPH	533:12:16468:16490	8195635	0	True				
ANR	8195775	EqualityExpression	vertical != GS_NO_GLYPH		8195635	0		!=			
ANR	8195776	Identifier	vertical		8195635	0					
ANR	8195777	Identifier	GS_NO_GLYPH		8195635	1					
ANR	8195778	ExpressionStatement	glyph = vertical	534:12:16505:16521	8195635	1	True				
ANR	8195779	AssignmentExpression	glyph = vertical		8195635	0		=			
ANR	8195780	Identifier	glyph		8195635	0					
ANR	8195781	Identifier	vertical		8195635	1					
ANR	8195782	IfStatement	if ( glyph == 0xffff || glyph == GS_NO_GLYPH )		8195635	15					
ANR	8195783	Condition	glyph == 0xffff || glyph == GS_NO_GLYPH	538:8:16568:16606	8195635	0	True				
ANR	8195784	OrExpression	glyph == 0xffff || glyph == GS_NO_GLYPH		8195635	0		||			
ANR	8195785	EqualityExpression	glyph == 0xffff		8195635	0		==			
ANR	8195786	Identifier	glyph		8195635	0					
ANR	8195787	PrimaryExpression	0xffff		8195635	1					
ANR	8195788	EqualityExpression	glyph == GS_NO_GLYPH		8195635	1		==			
ANR	8195789	Identifier	glyph		8195635	0					
ANR	8195790	Identifier	GS_NO_GLYPH		8195635	1					
ANR	8195791	CompoundStatement		31:49:881:881	8195635	1					
ANR	8195792	ExpressionStatement	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0	539:8:16619:16672	8195635	0	True				
ANR	8195793	AssignmentExpression	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8195635	0		=			
ANR	8195794	ArrayIndexing	metrics [ 0 ]		8195635	0					
ANR	8195795	Identifier	metrics		8195635	0					
ANR	8195796	PrimaryExpression	0		8195635	1					
ANR	8195797	AssignmentExpression	metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8195635	1		=			
ANR	8195798	ArrayIndexing	metrics [ 1 ]		8195635	0					
ANR	8195799	Identifier	metrics		8195635	0					
ANR	8195800	PrimaryExpression	1		8195635	1					
ANR	8195801	AssignmentExpression	metrics [ 2 ] = metrics [ 3 ] = 0		8195635	1		=			
ANR	8195802	ArrayIndexing	metrics [ 2 ]		8195635	0					
ANR	8195803	Identifier	metrics		8195635	0					
ANR	8195804	PrimaryExpression	2		8195635	1					
ANR	8195805	AssignmentExpression	metrics [ 3 ] = 0		8195635	1		=			
ANR	8195806	ArrayIndexing	metrics [ 3 ]		8195635	0					
ANR	8195807	Identifier	metrics		8195635	0					
ANR	8195808	PrimaryExpression	3		8195635	1					
ANR	8195809	PrimaryExpression	0		8195635	1					
ANR	8195810	ExpressionStatement	code = 1	540:8:16682:16690	8195635	1	True				
ANR	8195811	AssignmentExpression	code = 1		8195635	0		=			
ANR	8195812	Identifier	code		8195635	0					
ANR	8195813	PrimaryExpression	1		8195635	1					
ANR	8195814	ElseStatement	else		8195635	0					
ANR	8195815	CompoundStatement		37:8:1051:1073	8195635	0					
ANR	8195816	IdentifierDeclStatement	gs_fapi_server * I = pbfont -> FAPI ;	542:8:16713:16745	8195635	0	True				
ANR	8195817	IdentifierDecl	* I = pbfont -> FAPI		8195635	0					
ANR	8195818	IdentifierDeclType	gs_fapi_server *		8195635	0					
ANR	8195819	Identifier	I		8195635	1					
ANR	8195820	AssignmentExpression	* I = pbfont -> FAPI		8195635	2		=			
ANR	8195821	Identifier	I		8195635	0					
ANR	8195822	PtrMemberAccess	pbfont -> FAPI		8195635	1					
ANR	8195823	Identifier	pbfont		8195635	0					
ANR	8195824	Identifier	FAPI		8195635	1					
ANR	8195825	IdentifierDeclStatement	gs_gstate lpgs ;	543:8:16755:16769	8195635	1	True				
ANR	8195826	IdentifierDecl	lpgs		8195635	0					
ANR	8195827	IdentifierDeclType	gs_gstate		8195635	0					
ANR	8195828	Identifier	lpgs		8195635	1					
ANR	8195829	IdentifierDeclStatement	gs_gstate * pgs = & lpgs ;	544:8:16779:16801	8195635	2	True				
ANR	8195830	IdentifierDecl	* pgs = & lpgs		8195635	0					
ANR	8195831	IdentifierDeclType	gs_gstate *		8195635	0					
ANR	8195832	Identifier	pgs		8195635	1					
ANR	8195833	AssignmentExpression	* pgs = & lpgs		8195635	2		=			
ANR	8195834	Identifier	pgs		8195635	0					
ANR	8195835	UnaryOperationExpression	& lpgs		8195635	1					
ANR	8195836	UnaryOperator	&		8195635	0					
ANR	8195837	Identifier	lpgs		8195635	1					
ANR	8195838	ExpressionStatement	"memset ( pgs , 0x00 , sizeof ( lpgs ) )"	549:8:16953:16984	8195635	3	True				
ANR	8195839	CallExpression	"memset ( pgs , 0x00 , sizeof ( lpgs ) )"		8195635	0					
ANR	8195840	Callee	memset		8195635	0					
ANR	8195841	Identifier	memset		8195635	0					
ANR	8195842	ArgumentList	pgs		8195635	1					
ANR	8195843	Argument	pgs		8195635	0					
ANR	8195844	Identifier	pgs		8195635	0					
ANR	8195845	Argument	0x00		8195635	1					
ANR	8195846	PrimaryExpression	0x00		8195635	0					
ANR	8195847	Argument	sizeof ( lpgs )		8195635	2					
ANR	8195848	SizeofExpression	sizeof ( lpgs )		8195635	0					
ANR	8195849	Sizeof	sizeof		8195635	0					
ANR	8195850	SizeofOperand	lpgs		8195635	1					
ANR	8195851	ExpressionStatement	pgs -> memory = rpgs -> memory	550:8:16994:17020	8195635	4	True				
ANR	8195852	AssignmentExpression	pgs -> memory = rpgs -> memory		8195635	0		=			
ANR	8195853	PtrMemberAccess	pgs -> memory		8195635	0					
ANR	8195854	Identifier	pgs		8195635	0					
ANR	8195855	Identifier	memory		8195635	1					
ANR	8195856	PtrMemberAccess	rpgs -> memory		8195635	1					
ANR	8195857	Identifier	rpgs		8195635	0					
ANR	8195858	Identifier	memory		8195635	1					
ANR	8195859	ExpressionStatement	pgs -> ctm = rpgs -> ctm	551:8:17030:17050	8195635	5	True				
ANR	8195860	AssignmentExpression	pgs -> ctm = rpgs -> ctm		8195635	0		=			
ANR	8195861	PtrMemberAccess	pgs -> ctm		8195635	0					
ANR	8195862	Identifier	pgs		8195635	0					
ANR	8195863	Identifier	ctm		8195635	1					
ANR	8195864	PtrMemberAccess	rpgs -> ctm		8195635	1					
ANR	8195865	Identifier	rpgs		8195635	0					
ANR	8195866	Identifier	ctm		8195635	1					
ANR	8195867	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING	552:8:17060:17106	8195635	6	True				
ANR	8195868	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING		8195635	0		=			
ANR	8195869	PtrMemberAccess	pgs -> in_cachedevice		8195635	0					
ANR	8195870	Identifier	pgs		8195635	0					
ANR	8195871	Identifier	in_cachedevice		8195635	1					
ANR	8195872	Identifier	CACHE_DEVICE_NOT_CACHING		8195635	1					
ANR	8195873	ExpressionStatement	pgs -> device = rpgs -> device	553:8:17116:17142	8195635	7	True				
ANR	8195874	AssignmentExpression	pgs -> device = rpgs -> device		8195635	0		=			
ANR	8195875	PtrMemberAccess	pgs -> device		8195635	0					
ANR	8195876	Identifier	pgs		8195635	0					
ANR	8195877	Identifier	device		8195635	1					
ANR	8195878	PtrMemberAccess	rpgs -> device		8195635	1					
ANR	8195879	Identifier	rpgs		8195635	0					
ANR	8195880	Identifier	device		8195635	1					
ANR	8195881	ExpressionStatement	pgs -> log_op = rpgs -> log_op	554:8:17152:17178	8195635	8	True				
ANR	8195882	AssignmentExpression	pgs -> log_op = rpgs -> log_op		8195635	0		=			
ANR	8195883	PtrMemberAccess	pgs -> log_op		8195635	0					
ANR	8195884	Identifier	pgs		8195635	0					
ANR	8195885	Identifier	log_op		8195635	1					
ANR	8195886	PtrMemberAccess	rpgs -> log_op		8195635	1					
ANR	8195887	Identifier	rpgs		8195635	0					
ANR	8195888	Identifier	log_op		8195635	1					
ANR	8195889	ExpressionStatement	* ( pgs -> color ) = * ( rpgs -> color )	555:8:17188:17218	8195635	9	True				
ANR	8195890	AssignmentExpression	* ( pgs -> color ) = * ( rpgs -> color )		8195635	0		=			
ANR	8195891	UnaryOperationExpression	* ( pgs -> color )		8195635	0					
ANR	8195892	UnaryOperator	*		8195635	0					
ANR	8195893	PtrMemberAccess	pgs -> color		8195635	1					
ANR	8195894	Identifier	pgs		8195635	0					
ANR	8195895	Identifier	color		8195635	1					
ANR	8195896	UnaryOperationExpression	* ( rpgs -> color )		8195635	1					
ANR	8195897	UnaryOperator	*		8195635	0					
ANR	8195898	PtrMemberAccess	rpgs -> color		8195635	1					
ANR	8195899	Identifier	rpgs		8195635	0					
ANR	8195900	Identifier	color		8195635	1					
ANR	8195901	ExpressionStatement	tmp_ff . fapi_set_cache = I -> ff . fapi_set_cache	557:8:17229:17273	8195635	10	True				
ANR	8195902	AssignmentExpression	tmp_ff . fapi_set_cache = I -> ff . fapi_set_cache		8195635	0		=			
ANR	8195903	MemberAccess	tmp_ff . fapi_set_cache		8195635	0					
ANR	8195904	Identifier	tmp_ff		8195635	0					
ANR	8195905	Identifier	fapi_set_cache		8195635	1					
ANR	8195906	MemberAccess	I -> ff . fapi_set_cache		8195635	1					
ANR	8195907	PtrMemberAccess	I -> ff		8195635	0					
ANR	8195908	Identifier	I		8195635	0					
ANR	8195909	Identifier	ff		8195635	1					
ANR	8195910	Identifier	fapi_set_cache		8195635	1					
ANR	8195911	ExpressionStatement	I -> ff . fapi_set_cache = pl_fapi_set_cache_metrics	558:8:17283:17331	8195635	11	True				
ANR	8195912	AssignmentExpression	I -> ff . fapi_set_cache = pl_fapi_set_cache_metrics		8195635	0		=			
ANR	8195913	MemberAccess	I -> ff . fapi_set_cache		8195635	0					
ANR	8195914	PtrMemberAccess	I -> ff		8195635	0					
ANR	8195915	Identifier	I		8195635	0					
ANR	8195916	Identifier	ff		8195635	1					
ANR	8195917	Identifier	fapi_set_cache		8195635	1					
ANR	8195918	Identifier	pl_fapi_set_cache_metrics		8195635	1					
ANR	8195919	ExpressionStatement	"gs_setmatrix ( pgs , & mat )"	560:8:17342:17365	8195635	12	True				
ANR	8195920	CallExpression	"gs_setmatrix ( pgs , & mat )"		8195635	0					
ANR	8195921	Callee	gs_setmatrix		8195635	0					
ANR	8195922	Identifier	gs_setmatrix		8195635	0					
ANR	8195923	ArgumentList	pgs		8195635	1					
ANR	8195924	Argument	pgs		8195635	0					
ANR	8195925	Identifier	pgs		8195635	0					
ANR	8195926	Argument	& mat		8195635	1					
ANR	8195927	UnaryOperationExpression	& mat		8195635	0					
ANR	8195928	UnaryOperator	&		8195635	0					
ANR	8195929	Identifier	mat		8195635	1					
ANR	8195930	ExpressionStatement	fmat = pfont -> FontMatrix	561:8:17375:17399	8195635	13	True				
ANR	8195931	AssignmentExpression	fmat = pfont -> FontMatrix		8195635	0		=			
ANR	8195932	Identifier	fmat		8195635	0					
ANR	8195933	PtrMemberAccess	pfont -> FontMatrix		8195635	1					
ANR	8195934	Identifier	pfont		8195635	0					
ANR	8195935	Identifier	FontMatrix		8195635	1					
ANR	8195936	ExpressionStatement	pfont -> FontMatrix = pfont -> orig_FontMatrix	562:8:17409:17451	8195635	14	True				
ANR	8195937	AssignmentExpression	pfont -> FontMatrix = pfont -> orig_FontMatrix		8195635	0		=			
ANR	8195938	PtrMemberAccess	pfont -> FontMatrix		8195635	0					
ANR	8195939	Identifier	pfont		8195635	0					
ANR	8195940	Identifier	FontMatrix		8195635	1					
ANR	8195941	PtrMemberAccess	pfont -> orig_FontMatrix		8195635	1					
ANR	8195942	Identifier	pfont		8195635	0					
ANR	8195943	Identifier	orig_FontMatrix		8195635	1					
ANR	8195944	ExpressionStatement	"( void ) gs_setfont ( pgs , pfont )"	563:8:17461:17489	8195635	15	True				
ANR	8195945	CastExpression	"( void ) gs_setfont ( pgs , pfont )"		8195635	0					
ANR	8195946	CastTarget	void		8195635	0					
ANR	8195947	CallExpression	"gs_setfont ( pgs , pfont )"		8195635	1					
ANR	8195948	Callee	gs_setfont		8195635	0					
ANR	8195949	Identifier	gs_setfont		8195635	0					
ANR	8195950	ArgumentList	pgs		8195635	1					
ANR	8195951	Argument	pgs		8195635	0					
ANR	8195952	Identifier	pgs		8195635	0					
ANR	8195953	Argument	pfont		8195635	1					
ANR	8195954	Identifier	pfont		8195635	0					
ANR	8195955	ExpressionStatement	I -> ff . is_mtx_skipped = plfont -> is_xl_format	565:8:17500:17543	8195635	16	True				
ANR	8195956	AssignmentExpression	I -> ff . is_mtx_skipped = plfont -> is_xl_format		8195635	0		=			
ANR	8195957	MemberAccess	I -> ff . is_mtx_skipped		8195635	0					
ANR	8195958	PtrMemberAccess	I -> ff		8195635	0					
ANR	8195959	Identifier	I		8195635	0					
ANR	8195960	Identifier	ff		8195635	1					
ANR	8195961	Identifier	is_mtx_skipped		8195635	1					
ANR	8195962	PtrMemberAccess	plfont -> is_xl_format		8195635	1					
ANR	8195963	Identifier	plfont		8195635	0					
ANR	8195964	Identifier	is_xl_format		8195635	1					
ANR	8195965	ExpressionStatement	buf [ 0 ] = char_code	567:8:17554:17572	8195635	17	True				
ANR	8195966	AssignmentExpression	buf [ 0 ] = char_code		8195635	0		=			
ANR	8195967	ArrayIndexing	buf [ 0 ]		8195635	0					
ANR	8195968	Identifier	buf		8195635	0					
ANR	8195969	PrimaryExpression	0		8195635	1					
ANR	8195970	Identifier	char_code		8195635	1					
ANR	8195971	ExpressionStatement	buf [ 1 ] = '\\0'	568:8:17582:17595	8195635	18	True				
ANR	8195972	AssignmentExpression	buf [ 1 ] = '\\0'		8195635	0		=			
ANR	8195973	ArrayIndexing	buf [ 1 ]		8195635	0					
ANR	8195974	Identifier	buf		8195635	0					
ANR	8195975	PrimaryExpression	1		8195635	1					
ANR	8195976	PrimaryExpression	'\\0'		8195635	1					
ANR	8195977	ExpressionStatement	text . operation = TEXT_FROM_CHARS | TEXT_DO_NONE | TEXT_RETURN_WIDTH	570:8:17606:17673	8195635	19	True				
ANR	8195978	AssignmentExpression	text . operation = TEXT_FROM_CHARS | TEXT_DO_NONE | TEXT_RETURN_WIDTH		8195635	0		=			
ANR	8195979	MemberAccess	text . operation		8195635	0					
ANR	8195980	Identifier	text		8195635	0					
ANR	8195981	Identifier	operation		8195635	1					
ANR	8195982	InclusiveOrExpression	TEXT_FROM_CHARS | TEXT_DO_NONE | TEXT_RETURN_WIDTH		8195635	1		|			
ANR	8195983	Identifier	TEXT_FROM_CHARS		8195635	0					
ANR	8195984	InclusiveOrExpression	TEXT_DO_NONE | TEXT_RETURN_WIDTH		8195635	1		|			
ANR	8195985	Identifier	TEXT_DO_NONE		8195635	0					
ANR	8195986	Identifier	TEXT_RETURN_WIDTH		8195635	1					
ANR	8195987	ExpressionStatement	text . data . chars = buf	571:8:17683:17704	8195635	20	True				
ANR	8195988	AssignmentExpression	text . data . chars = buf		8195635	0		=			
ANR	8195989	MemberAccess	text . data . chars		8195635	0					
ANR	8195990	MemberAccess	text . data		8195635	0					
ANR	8195991	Identifier	text		8195635	0					
ANR	8195992	Identifier	data		8195635	1					
ANR	8195993	Identifier	chars		8195635	1					
ANR	8195994	Identifier	buf		8195635	1					
ANR	8195995	ExpressionStatement	text . size = 1	572:8:17714:17727	8195635	21	True				
ANR	8195996	AssignmentExpression	text . size = 1		8195635	0		=			
ANR	8195997	MemberAccess	text . size		8195635	0					
ANR	8195998	Identifier	text		8195635	0					
ANR	8195999	Identifier	size		8195635	1					
ANR	8196000	PrimaryExpression	1		8195635	1					
ANR	8196001	IfStatement	"if ( ( penum1 = gs_text_enum_alloc ( pfont -> memory , pgs , ""pl_fapi_char_metrics"" ) ) != NULL )"		8195635	22					
ANR	8196002	Condition	"( penum1 = gs_text_enum_alloc ( pfont -> memory , pgs , ""pl_fapi_char_metrics"" ) ) != NULL"	574:12:17742:17844	8195635	0	True				
ANR	8196003	EqualityExpression	"( penum1 = gs_text_enum_alloc ( pfont -> memory , pgs , ""pl_fapi_char_metrics"" ) ) != NULL"		8195635	0		!=			
ANR	8196004	AssignmentExpression	"penum1 = gs_text_enum_alloc ( pfont -> memory , pgs , ""pl_fapi_char_metrics"" )"		8195635	0		=			
ANR	8196005	Identifier	penum1		8195635	0					
ANR	8196006	CallExpression	"gs_text_enum_alloc ( pfont -> memory , pgs , ""pl_fapi_char_metrics"" )"		8195635	1					
ANR	8196007	Callee	gs_text_enum_alloc		8195635	0					
ANR	8196008	Identifier	gs_text_enum_alloc		8195635	0					
ANR	8196009	ArgumentList	pfont -> memory		8195635	1					
ANR	8196010	Argument	pfont -> memory		8195635	0					
ANR	8196011	PtrMemberAccess	pfont -> memory		8195635	0					
ANR	8196012	Identifier	pfont		8195635	0					
ANR	8196013	Identifier	memory		8195635	1					
ANR	8196014	Argument	pgs		8195635	1					
ANR	8196015	Identifier	pgs		8195635	0					
ANR	8196016	Argument	"""pl_fapi_char_metrics"""		8195635	2					
ANR	8196017	PrimaryExpression	"""pl_fapi_char_metrics"""		8195635	0					
ANR	8196018	Identifier	NULL		8195635	1					
ANR	8196019	CompoundStatement		68:56:2119:2119	8195635	1					
ANR	8196020	IfStatement	"if ( ( code = gs_text_enum_init ( penum1 , & null_text_procs , NULL , pgs , & text , pfont , NULL , NULL , NULL , pfont -> memory ) ) >= 0 )"		8195635	0					
ANR	8196021	Condition	"( code = gs_text_enum_init ( penum1 , & null_text_procs , NULL , pgs , & text , pfont , NULL , NULL , NULL , pfont -> memory ) ) >= 0"	577:16:17866:18046	8195635	0	True				
ANR	8196022	RelationalExpression	"( code = gs_text_enum_init ( penum1 , & null_text_procs , NULL , pgs , & text , pfont , NULL , NULL , NULL , pfont -> memory ) ) >= 0"		8195635	0		>=			
ANR	8196023	AssignmentExpression	"code = gs_text_enum_init ( penum1 , & null_text_procs , NULL , pgs , & text , pfont , NULL , NULL , NULL , pfont -> memory )"		8195635	0		=			
ANR	8196024	Identifier	code		8195635	0					
ANR	8196025	CallExpression	"gs_text_enum_init ( penum1 , & null_text_procs , NULL , pgs , & text , pfont , NULL , NULL , NULL , pfont -> memory )"		8195635	1					
ANR	8196026	Callee	gs_text_enum_init		8195635	0					
ANR	8196027	Identifier	gs_text_enum_init		8195635	0					
ANR	8196028	ArgumentList	penum1		8195635	1					
ANR	8196029	Argument	penum1		8195635	0					
ANR	8196030	Identifier	penum1		8195635	0					
ANR	8196031	Argument	& null_text_procs		8195635	1					
ANR	8196032	UnaryOperationExpression	& null_text_procs		8195635	0					
ANR	8196033	UnaryOperator	&		8195635	0					
ANR	8196034	Identifier	null_text_procs		8195635	1					
ANR	8196035	Argument	NULL		8195635	2					
ANR	8196036	Identifier	NULL		8195635	0					
ANR	8196037	Argument	pgs		8195635	3					
ANR	8196038	Identifier	pgs		8195635	0					
ANR	8196039	Argument	& text		8195635	4					
ANR	8196040	UnaryOperationExpression	& text		8195635	0					
ANR	8196041	UnaryOperator	&		8195635	0					
ANR	8196042	Identifier	text		8195635	1					
ANR	8196043	Argument	pfont		8195635	5					
ANR	8196044	Identifier	pfont		8195635	0					
ANR	8196045	Argument	NULL		8195635	6					
ANR	8196046	Identifier	NULL		8195635	0					
ANR	8196047	Argument	NULL		8195635	7					
ANR	8196048	Identifier	NULL		8195635	0					
ANR	8196049	Argument	NULL		8195635	8					
ANR	8196050	Identifier	NULL		8195635	0					
ANR	8196051	Argument	pfont -> memory		8195635	9					
ANR	8196052	PtrMemberAccess	pfont -> memory		8195635	0					
ANR	8196053	Identifier	pfont		8195635	0					
ANR	8196054	Identifier	memory		8195635	1					
ANR	8196055	PrimaryExpression	0		8195635	1					
ANR	8196056	CompoundStatement		72:73:2321:2321	8195635	1					
ANR	8196057	ExpressionStatement	"code = gs_fapi_do_char ( pfont , pgs , penum1 , plfont -> font_file , false , NULL , NULL , char_code , glyph , 0 )"	581:16:18068:18197	8195635	0	True				
ANR	8196058	AssignmentExpression	"code = gs_fapi_do_char ( pfont , pgs , penum1 , plfont -> font_file , false , NULL , NULL , char_code , glyph , 0 )"		8195635	0		=			
ANR	8196059	Identifier	code		8195635	0					
ANR	8196060	CallExpression	"gs_fapi_do_char ( pfont , pgs , penum1 , plfont -> font_file , false , NULL , NULL , char_code , glyph , 0 )"		8195635	1					
ANR	8196061	Callee	gs_fapi_do_char		8195635	0					
ANR	8196062	Identifier	gs_fapi_do_char		8195635	0					
ANR	8196063	ArgumentList	pfont		8195635	1					
ANR	8196064	Argument	pfont		8195635	0					
ANR	8196065	Identifier	pfont		8195635	0					
ANR	8196066	Argument	pgs		8195635	1					
ANR	8196067	Identifier	pgs		8195635	0					
ANR	8196068	Argument	penum1		8195635	2					
ANR	8196069	Identifier	penum1		8195635	0					
ANR	8196070	Argument	plfont -> font_file		8195635	3					
ANR	8196071	PtrMemberAccess	plfont -> font_file		8195635	0					
ANR	8196072	Identifier	plfont		8195635	0					
ANR	8196073	Identifier	font_file		8195635	1					
ANR	8196074	Argument	false		8195635	4					
ANR	8196075	Identifier	false		8195635	0					
ANR	8196076	Argument	NULL		8195635	5					
ANR	8196077	Identifier	NULL		8195635	0					
ANR	8196078	Argument	NULL		8195635	6					
ANR	8196079	Identifier	NULL		8195635	0					
ANR	8196080	Argument	char_code		8195635	7					
ANR	8196081	Identifier	char_code		8195635	0					
ANR	8196082	Argument	glyph		8195635	8					
ANR	8196083	Identifier	glyph		8195635	0					
ANR	8196084	Argument	0		8195635	9					
ANR	8196085	PrimaryExpression	0		8195635	0					
ANR	8196086	IfStatement	if ( code >= 0 || code == gs_error_unknownerror )		8195635	1					
ANR	8196087	Condition	code >= 0 || code == gs_error_unknownerror	584:20:18220:18261	8195635	0	True				
ANR	8196088	OrExpression	code >= 0 || code == gs_error_unknownerror		8195635	0		||			
ANR	8196089	RelationalExpression	code >= 0		8195635	0		>=			
ANR	8196090	Identifier	code		8195635	0					
ANR	8196091	PrimaryExpression	0		8195635	1					
ANR	8196092	EqualityExpression	code == gs_error_unknownerror		8195635	1		==			
ANR	8196093	Identifier	code		8195635	0					
ANR	8196094	Identifier	gs_error_unknownerror		8195635	1					
ANR	8196095	CompoundStatement		77:64:2536:2536	8195635	1					
ANR	8196096	ExpressionStatement	metrics [ 0 ] = metrics [ 1 ] = 0	585:20:18286:18313	8195635	0	True				
ANR	8196097	AssignmentExpression	metrics [ 0 ] = metrics [ 1 ] = 0		8195635	0		=			
ANR	8196098	ArrayIndexing	metrics [ 0 ]		8195635	0					
ANR	8196099	Identifier	metrics		8195635	0					
ANR	8196100	PrimaryExpression	0		8195635	1					
ANR	8196101	AssignmentExpression	metrics [ 1 ] = 0		8195635	1		=			
ANR	8196102	ArrayIndexing	metrics [ 1 ]		8195635	0					
ANR	8196103	Identifier	metrics		8195635	0					
ANR	8196104	PrimaryExpression	1		8195635	1					
ANR	8196105	PrimaryExpression	0		8195635	1					
ANR	8196106	ExpressionStatement	metrics [ 2 ] = penum1 -> returned . total_width . x	586:20:18335:18378	8195635	1	True				
ANR	8196107	AssignmentExpression	metrics [ 2 ] = penum1 -> returned . total_width . x		8195635	0		=			
ANR	8196108	ArrayIndexing	metrics [ 2 ]		8195635	0					
ANR	8196109	Identifier	metrics		8195635	0					
ANR	8196110	PrimaryExpression	2		8195635	1					
ANR	8196111	MemberAccess	penum1 -> returned . total_width . x		8195635	1					
ANR	8196112	MemberAccess	penum1 -> returned . total_width		8195635	0					
ANR	8196113	PtrMemberAccess	penum1 -> returned		8195635	0					
ANR	8196114	Identifier	penum1		8195635	0					
ANR	8196115	Identifier	returned		8195635	1					
ANR	8196116	Identifier	total_width		8195635	1					
ANR	8196117	Identifier	x		8195635	1					
ANR	8196118	ExpressionStatement	metrics [ 3 ] = penum1 -> returned . total_width . y	587:20:18400:18443	8195635	2	True				
ANR	8196119	AssignmentExpression	metrics [ 3 ] = penum1 -> returned . total_width . y		8195635	0		=			
ANR	8196120	ArrayIndexing	metrics [ 3 ]		8195635	0					
ANR	8196121	Identifier	metrics		8195635	0					
ANR	8196122	PrimaryExpression	3		8195635	1					
ANR	8196123	MemberAccess	penum1 -> returned . total_width . y		8195635	1					
ANR	8196124	MemberAccess	penum1 -> returned . total_width		8195635	0					
ANR	8196125	PtrMemberAccess	penum1 -> returned		8195635	0					
ANR	8196126	Identifier	penum1		8195635	0					
ANR	8196127	Identifier	returned		8195635	1					
ANR	8196128	Identifier	total_width		8195635	1					
ANR	8196129	Identifier	y		8195635	1					
ANR	8196130	IfStatement	if ( code < 0 )		8195635	3					
ANR	8196131	Condition	code < 0	588:24:18469:18476	8195635	0	True				
ANR	8196132	RelationalExpression	code < 0		8195635	0		<			
ANR	8196133	Identifier	code		8195635	0					
ANR	8196134	PrimaryExpression	0		8195635	1					
ANR	8196135	ExpressionStatement	code = 0	589:24:18503:18511	8195635	1	True				
ANR	8196136	AssignmentExpression	code = 0		8195635	0		=			
ANR	8196137	Identifier	code		8195635	0					
ANR	8196138	PrimaryExpression	0		8195635	1					
ANR	8196139	ExpressionStatement	"rc_decrement ( penum1 , ""pl_fapi_char_metrics"" )"	592:12:18557:18601	8195635	1	True				
ANR	8196140	CallExpression	"rc_decrement ( penum1 , ""pl_fapi_char_metrics"" )"		8195635	0					
ANR	8196141	Callee	rc_decrement		8195635	0					
ANR	8196142	Identifier	rc_decrement		8195635	0					
ANR	8196143	ArgumentList	penum1		8195635	1					
ANR	8196144	Argument	penum1		8195635	0					
ANR	8196145	Identifier	penum1		8195635	0					
ANR	8196146	Argument	"""pl_fapi_char_metrics"""		8195635	1					
ANR	8196147	PrimaryExpression	"""pl_fapi_char_metrics"""		8195635	0					
ANR	8196148	ExpressionStatement	pfont -> FontMatrix = fmat	594:8:18621:18645	8195635	23	True				
ANR	8196149	AssignmentExpression	pfont -> FontMatrix = fmat		8195635	0		=			
ANR	8196150	PtrMemberAccess	pfont -> FontMatrix		8195635	0					
ANR	8196151	Identifier	pfont		8195635	0					
ANR	8196152	Identifier	FontMatrix		8195635	1					
ANR	8196153	Identifier	fmat		8195635	1					
ANR	8196154	ExpressionStatement	I -> ff . fapi_set_cache = tmp_ff . fapi_set_cache	595:8:18655:18699	8195635	24	True				
ANR	8196155	AssignmentExpression	I -> ff . fapi_set_cache = tmp_ff . fapi_set_cache		8195635	0		=			
ANR	8196156	MemberAccess	I -> ff . fapi_set_cache		8195635	0					
ANR	8196157	PtrMemberAccess	I -> ff		8195635	0					
ANR	8196158	Identifier	I		8195635	0					
ANR	8196159	Identifier	ff		8195635	1					
ANR	8196160	Identifier	fapi_set_cache		8195635	1					
ANR	8196161	MemberAccess	tmp_ff . fapi_set_cache		8195635	1					
ANR	8196162	Identifier	tmp_ff		8195635	0					
ANR	8196163	Identifier	fapi_set_cache		8195635	1					
ANR	8196164	ReturnStatement	return ( code ) ;	597:4:18711:18724	8195635	16	True				
ANR	8196165	Identifier	code		8195635	0					
ANR	8196166	ReturnType	static int		8195635	1					
ANR	8196167	Identifier	pl_fapi_char_metrics		8195635	2					
ANR	8196168	ParameterList	"const pl_font_t * plfont , const void * vpgs , gs_char char_code , float metrics [ 4 ]"		8195635	3					
ANR	8196169	Parameter	const pl_font_t * plfont	506:21:15625:15648	8195635	0	True				
ANR	8196170	ParameterType	const pl_font_t *		8195635	0					
ANR	8196171	Identifier	plfont		8195635	1					
ANR	8196172	Parameter	const void * vpgs	506:47:15651:15666	8195635	1	True				
ANR	8196173	ParameterType	const void *		8195635	0					
ANR	8196174	Identifier	vpgs		8195635	1					
ANR	8196175	Parameter	gs_char char_code	507:21:15690:15706	8195635	2	True				
ANR	8196176	ParameterType	gs_char		8195635	0					
ANR	8196177	Identifier	char_code		8195635	1					
ANR	8196178	Parameter	float metrics [ 4 ]	507:40:15709:15724	8195635	3	True				
ANR	8196179	ParameterType	float [ 4 ]		8195635	0					
ANR	8196180	Identifier	metrics		8195635	1					
ANR	8196181	CFGEntryNode	ENTRY		8195635		True				
ANR	8196182	CFGExitNode	EXIT		8195635		True				
ANR	8196183	Symbol	penum1		8195635						
ANR	8196184	Symbol	* pgs		8195635						
ANR	8196185	Symbol	* rpgs -> color		8195635						
ANR	8196186	Symbol	unused_glyph		8195635						
ANR	8196187	Symbol	I -> ff . fapi_set_cache		8195635						
ANR	8196188	Symbol	fmat		8195635						
ANR	8196189	Symbol	plfont		8195635						
ANR	8196190	Symbol	* pgs -> color		8195635						
ANR	8196191	Symbol	* ( rpgs -> color )		8195635						
ANR	8196192	Symbol	* penum1		8195635						
ANR	8196193	Symbol	vpgs		8195635						
ANR	8196194	Symbol	pfont -> WMode		8195635						
ANR	8196195	Symbol	rpgs -> device		8195635						
ANR	8196196	Symbol	* metrics		8195635						
ANR	8196197	Symbol	text . operation		8195635						
ANR	8196198	Symbol	pgs -> device		8195635						
ANR	8196199	Symbol	pgs -> color		8195635						
ANR	8196200	Symbol	text		8195635						
ANR	8196201	Symbol	* pbfont		8195635						
ANR	8196202	Symbol	TEXT_FROM_CHARS		8195635						
ANR	8196203	Symbol	rpgs		8195635						
ANR	8196204	Symbol	I -> ff		8195635						
ANR	8196205	Symbol	pl_fapi_set_cache_metrics		8195635						
ANR	8196206	Symbol	* buf		8195635						
ANR	8196207	Symbol	TEXT_RETURN_WIDTH		8195635						
ANR	8196208	Symbol	NULL		8195635						
ANR	8196209	Symbol	pbfont -> FAPI		8195635						
ANR	8196210	Symbol	gs_text_enum_init		8195635						
ANR	8196211	Symbol	char_code		8195635						
ANR	8196212	Symbol	plfont -> is_xl_format		8195635						
ANR	8196213	Symbol	chr		8195635						
ANR	8196214	Symbol	pgs -> ctm		8195635						
ANR	8196215	Symbol	pfont -> FontMatrix		8195635						
ANR	8196216	Symbol	* * pgs		8195635						
ANR	8196217	Symbol	& text		8195635						
ANR	8196218	Symbol	gs_text_enum_alloc		8195635						
ANR	8196219	Symbol	metrics		8195635						
ANR	8196220	Symbol	pl_font_vertical_glyph		8195635						
ANR	8196221	Symbol	CACHE_DEVICE_NOT_CACHING		8195635						
ANR	8196222	Symbol	ft_MicroType		8195635						
ANR	8196223	Symbol	I -> ff . is_mtx_skipped		8195635						
ANR	8196224	Symbol	text . data		8195635						
ANR	8196225	Symbol	& mat		8195635						
ANR	8196226	Symbol	lpgs		8195635						
ANR	8196227	Symbol	code		8195635						
ANR	8196228	Symbol	* rpgs		8195635						
ANR	8196229	Symbol	pfont -> memory		8195635						
ANR	8196230	Symbol	I		8195635						
ANR	8196231	Symbol	vertical		8195635						
ANR	8196232	Symbol	* * rpgs		8195635						
ANR	8196233	Symbol	tmp_ff		8195635						
ANR	8196234	Symbol	rpgs -> memory		8195635						
ANR	8196235	Symbol	gs_fapi_do_char		8195635						
ANR	8196236	Symbol	rpgs -> color		8195635						
ANR	8196237	Symbol	text . data . chars		8195635						
ANR	8196238	Symbol	* I		8195635						
ANR	8196239	Symbol	pfont -> FontType		8195635						
ANR	8196240	Symbol	rpgs -> ctm		8195635						
ANR	8196241	Symbol	& null_text_procs		8195635						
ANR	8196242	Symbol	pgs -> in_cachedevice		8195635						
ANR	8196243	Symbol	plfont -> font_file		8195635						
ANR	8196244	Symbol	penum1 -> returned		8195635						
ANR	8196245	Symbol	pgs		8195635						
ANR	8196246	Symbol	pgs -> memory		8195635						
ANR	8196247	Symbol	TEXT_DO_NONE		8195635						
ANR	8196248	Symbol	gs_error_unknownerror		8195635						
ANR	8196249	Symbol	mat		8195635						
ANR	8196250	Symbol	pgs -> log_op		8195635						
ANR	8196251	Symbol	penum1 -> returned . total_width . y		8195635						
ANR	8196252	Symbol	penum1 -> returned . total_width . x		8195635						
ANR	8196253	Symbol	pfont		8195635						
ANR	8196254	Symbol	pl_tt_encode_char		8195635						
ANR	8196255	Symbol	& lpgs		8195635						
ANR	8196256	Symbol	false		8195635						
ANR	8196257	Symbol	penum1 -> returned . total_width		8195635						
ANR	8196258	Symbol	* ( pgs -> color )		8195635						
ANR	8196259	Symbol	tmp_ff . fapi_set_cache		8195635						
ANR	8196260	Symbol	pfont -> orig_FontMatrix		8195635						
ANR	8196261	Symbol	text . size		8195635						
ANR	8196262	Symbol	pbfont		8195635						
ANR	8196263	Symbol	buf		8195635						
ANR	8196264	Symbol	GS_NO_GLYPH		8195635						
ANR	8196265	Symbol	glyph		8195635						
ANR	8196266	Symbol	* pfont		8195635						
ANR	8196267	Symbol	plfont -> pfont		8195635						
ANR	8196268	Symbol	* plfont		8195635						
ANR	8196269	Symbol	rpgs -> log_op		8195635						
ANR	8196270	Function	pl_fapi_char_width	600:0:18729:19036							
ANR	8196271	FunctionDef	"pl_fapi_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8196270	0					
ANR	8196272	CompoundStatement		603:0:18859:19036	8196270	0					
ANR	8196273	IdentifierDeclStatement	float metrics [ 4 ] ;	604:4:18865:18881	8196270	0	True				
ANR	8196274	IdentifierDecl	metrics [ 4 ]		8196270	0					
ANR	8196275	IdentifierDeclType	float [ 4 ]		8196270	0					
ANR	8196276	Identifier	metrics		8196270	1					
ANR	8196277	PrimaryExpression	4		8196270	2					
ANR	8196278	IdentifierDeclStatement	int code = 0 ;	605:4:18887:18899	8196270	1	True				
ANR	8196279	IdentifierDecl	code = 0		8196270	0					
ANR	8196280	IdentifierDeclType	int		8196270	0					
ANR	8196281	Identifier	code		8196270	1					
ANR	8196282	AssignmentExpression	code = 0		8196270	2		=			
ANR	8196283	Identifier	code		8196270	0					
ANR	8196284	PrimaryExpression	0		8196270	1					
ANR	8196285	ExpressionStatement	"code = pl_fapi_char_metrics ( plfont , pgs , char_code , metrics )"	607:4:18906:18966	8196270	2	True				
ANR	8196286	AssignmentExpression	"code = pl_fapi_char_metrics ( plfont , pgs , char_code , metrics )"		8196270	0		=			
ANR	8196287	Identifier	code		8196270	0					
ANR	8196288	CallExpression	"pl_fapi_char_metrics ( plfont , pgs , char_code , metrics )"		8196270	1					
ANR	8196289	Callee	pl_fapi_char_metrics		8196270	0					
ANR	8196290	Identifier	pl_fapi_char_metrics		8196270	0					
ANR	8196291	ArgumentList	plfont		8196270	1					
ANR	8196292	Argument	plfont		8196270	0					
ANR	8196293	Identifier	plfont		8196270	0					
ANR	8196294	Argument	pgs		8196270	1					
ANR	8196295	Identifier	pgs		8196270	0					
ANR	8196296	Argument	char_code		8196270	2					
ANR	8196297	Identifier	char_code		8196270	0					
ANR	8196298	Argument	metrics		8196270	3					
ANR	8196299	Identifier	metrics		8196270	0					
ANR	8196300	ExpressionStatement	pwidth -> x = metrics [ 2 ]	609:4:18973:18995	8196270	3	True				
ANR	8196301	AssignmentExpression	pwidth -> x = metrics [ 2 ]		8196270	0		=			
ANR	8196302	PtrMemberAccess	pwidth -> x		8196270	0					
ANR	8196303	Identifier	pwidth		8196270	0					
ANR	8196304	Identifier	x		8196270	1					
ANR	8196305	ArrayIndexing	metrics [ 2 ]		8196270	1					
ANR	8196306	Identifier	metrics		8196270	0					
ANR	8196307	PrimaryExpression	2		8196270	1					
ANR	8196308	ExpressionStatement	pwidth -> y = 0	610:4:19001:19014	8196270	4	True				
ANR	8196309	AssignmentExpression	pwidth -> y = 0		8196270	0		=			
ANR	8196310	PtrMemberAccess	pwidth -> y		8196270	0					
ANR	8196311	Identifier	pwidth		8196270	0					
ANR	8196312	Identifier	y		8196270	1					
ANR	8196313	PrimaryExpression	0		8196270	1					
ANR	8196314	ReturnStatement	return ( code ) ;	612:4:19021:19034	8196270	5	True				
ANR	8196315	Identifier	code		8196270	0					
ANR	8196316	ReturnType	static int		8196270	1					
ANR	8196317	Identifier	pl_fapi_char_width		8196270	2					
ANR	8196318	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8196270	3					
ANR	8196319	Parameter	const pl_font_t * plfont	601:19:18759:18782	8196270	0	True				
ANR	8196320	ParameterType	const pl_font_t *		8196270	0					
ANR	8196321	Identifier	plfont		8196270	1					
ANR	8196322	Parameter	const void * pgs	601:45:18785:18799	8196270	1	True				
ANR	8196323	ParameterType	const void *		8196270	0					
ANR	8196324	Identifier	pgs		8196270	1					
ANR	8196325	Parameter	gs_char char_code	602:19:18821:18837	8196270	2	True				
ANR	8196326	ParameterType	gs_char		8196270	0					
ANR	8196327	Identifier	char_code		8196270	1					
ANR	8196328	Parameter	gs_point * pwidth	602:38:18840:18856	8196270	3	True				
ANR	8196329	ParameterType	gs_point *		8196270	0					
ANR	8196330	Identifier	pwidth		8196270	1					
ANR	8196331	CFGEntryNode	ENTRY		8196270		True				
ANR	8196332	CFGExitNode	EXIT		8196270		True				
ANR	8196333	Symbol	code		8196270						
ANR	8196334	Symbol	* metrics		8196270						
ANR	8196335	Symbol	pwidth -> y		8196270						
ANR	8196336	Symbol	char_code		8196270						
ANR	8196337	Symbol	* pwidth		8196270						
ANR	8196338	Symbol	pwidth		8196270						
ANR	8196339	Symbol	plfont		8196270						
ANR	8196340	Symbol	metrics		8196270						
ANR	8196341	Symbol	pgs		8196270						
ANR	8196342	Symbol	pl_fapi_char_metrics		8196270						
ANR	8196343	Symbol	pwidth -> x		8196270						
ANR	8196344	Function	pl_fapi_encode_char	615:0:19039:19163							
ANR	8196345	FunctionDef	"pl_fapi_encode_char (gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used)"		8196344	0					
ANR	8196346	CompoundStatement		617:0:19133:19163	8196344	0					
ANR	8196347	ReturnStatement	return ( gs_glyph ) pchr ;	618:4:19139:19161	8196344	0	True				
ANR	8196348	CastExpression	( gs_glyph ) pchr		8196344	0					
ANR	8196349	CastTarget	gs_glyph		8196344	0					
ANR	8196350	Identifier	pchr		8196344	1					
ANR	8196351	ReturnType	static gs_glyph		8196344	1					
ANR	8196352	Identifier	pl_fapi_encode_char		8196344	2					
ANR	8196353	ParameterList	"gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used"		8196344	3					
ANR	8196354	Parameter	gs_font * pfont	616:20:19075:19089	8196344	0	True				
ANR	8196355	ParameterType	gs_font *		8196344	0					
ANR	8196356	Identifier	pfont		8196344	1					
ANR	8196357	Parameter	gs_char pchr	616:37:19092:19103	8196344	1	True				
ANR	8196358	ParameterType	gs_char		8196344	0					
ANR	8196359	Identifier	pchr		8196344	1					
ANR	8196360	Parameter	gs_glyph_space_t not_used	616:51:19106:19130	8196344	2	True				
ANR	8196361	ParameterType	gs_glyph_space_t		8196344	0					
ANR	8196362	Identifier	not_used		8196344	1					
ANR	8196363	CFGEntryNode	ENTRY		8196344		True				
ANR	8196364	CFGExitNode	EXIT		8196344		True				
ANR	8196365	Symbol	not_used		8196344						
ANR	8196366	Symbol	pfont		8196344						
ANR	8196367	Symbol	pchr		8196344						
ANR	8196368	Function	pl_fapi_passfont	621:0:19166:20621							
ANR	8196369	FunctionDef	"pl_fapi_passfont (pl_font_t * plfont , int subfont , char * fapi_request , char * file_name , byte * font_data , int font_data_len)"		8196368	0					
ANR	8196370	CompoundStatement		624:0:19311:20621	8196368	0					
ANR	8196371	IdentifierDeclStatement	char * fapi_id = NULL ;	625:4:19317:19337	8196368	0	True				
ANR	8196372	IdentifierDecl	* fapi_id = NULL		8196368	0					
ANR	8196373	IdentifierDeclType	char *		8196368	0					
ANR	8196374	Identifier	fapi_id		8196368	1					
ANR	8196375	AssignmentExpression	* fapi_id = NULL		8196368	2		=			
ANR	8196376	Identifier	NULL		8196368	0					
ANR	8196377	Identifier	NULL		8196368	1					
ANR	8196378	IdentifierDeclStatement	int code = 0 ;	626:4:19343:19355	8196368	1	True				
ANR	8196379	IdentifierDecl	code = 0		8196368	0					
ANR	8196380	IdentifierDeclType	int		8196368	0					
ANR	8196381	Identifier	code		8196368	1					
ANR	8196382	AssignmentExpression	code = 0		8196368	2		=			
ANR	8196383	Identifier	code		8196368	0					
ANR	8196384	PrimaryExpression	0		8196368	1					
ANR	8196385	IdentifierDeclStatement	gs_string fdata ;	627:4:19361:19376	8196368	2	True				
ANR	8196386	IdentifierDecl	fdata		8196368	0					
ANR	8196387	IdentifierDeclType	gs_string		8196368	0					
ANR	8196388	Identifier	fdata		8196368	1					
ANR	8196389	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	628:4:19382:19412	8196368	3	True				
ANR	8196390	IdentifierDecl	* pfont = plfont -> pfont		8196368	0					
ANR	8196391	IdentifierDeclType	gs_font *		8196368	0					
ANR	8196392	Identifier	pfont		8196368	1					
ANR	8196393	AssignmentExpression	* pfont = plfont -> pfont		8196368	2		=			
ANR	8196394	Identifier	pfont		8196368	0					
ANR	8196395	PtrMemberAccess	plfont -> pfont		8196368	1					
ANR	8196396	Identifier	plfont		8196368	0					
ANR	8196397	Identifier	pfont		8196368	1					
ANR	8196398	IdentifierDeclStatement	gs_fapi_font local_pl_ff_stub ;	629:4:19418:19447	8196368	4	True				
ANR	8196399	IdentifierDecl	local_pl_ff_stub		8196368	0					
ANR	8196400	IdentifierDeclType	gs_fapi_font		8196368	0					
ANR	8196401	Identifier	local_pl_ff_stub		8196368	1					
ANR	8196402	IfStatement	"if ( ! gs_fapi_available ( pfont -> memory , NULL ) )"		8196368	5					
ANR	8196403	Condition	"! gs_fapi_available ( pfont -> memory , NULL )"	631:8:19458:19496	8196368	0	True				
ANR	8196404	UnaryOperationExpression	"! gs_fapi_available ( pfont -> memory , NULL )"		8196368	0					
ANR	8196405	UnaryOperator	!		8196368	0					
ANR	8196406	CallExpression	"gs_fapi_available ( pfont -> memory , NULL )"		8196368	1					
ANR	8196407	Callee	gs_fapi_available		8196368	0					
ANR	8196408	Identifier	gs_fapi_available		8196368	0					
ANR	8196409	ArgumentList	pfont -> memory		8196368	1					
ANR	8196410	Argument	pfont -> memory		8196368	0					
ANR	8196411	PtrMemberAccess	pfont -> memory		8196368	0					
ANR	8196412	Identifier	pfont		8196368	0					
ANR	8196413	Identifier	memory		8196368	1					
ANR	8196414	Argument	NULL		8196368	1					
ANR	8196415	Identifier	NULL		8196368	0					
ANR	8196416	CompoundStatement		8:49:187:187	8196368	1					
ANR	8196417	ReturnStatement	return ( code ) ;	632:8:19509:19522	8196368	0	True				
ANR	8196418	Identifier	code		8196368	0					
ANR	8196419	ExpressionStatement	local_pl_ff_stub = pl_ff_stub	635:4:19535:19564	8196368	6	True				
ANR	8196420	AssignmentExpression	local_pl_ff_stub = pl_ff_stub		8196368	0		=			
ANR	8196421	Identifier	local_pl_ff_stub		8196368	0					
ANR	8196422	Identifier	pl_ff_stub		8196368	1					
ANR	8196423	ExpressionStatement	local_pl_ff_stub . is_mtx_skipped = plfont -> is_xl_format	636:4:19570:19624	8196368	7	True				
ANR	8196424	AssignmentExpression	local_pl_ff_stub . is_mtx_skipped = plfont -> is_xl_format		8196368	0		=			
ANR	8196425	MemberAccess	local_pl_ff_stub . is_mtx_skipped		8196368	0					
ANR	8196426	Identifier	local_pl_ff_stub		8196368	0					
ANR	8196427	Identifier	is_mtx_skipped		8196368	1					
ANR	8196428	PtrMemberAccess	plfont -> is_xl_format		8196368	1					
ANR	8196429	Identifier	plfont		8196368	0					
ANR	8196430	Identifier	is_xl_format		8196368	1					
ANR	8196431	ExpressionStatement	fdata . data = font_data	638:4:19631:19653	8196368	8	True				
ANR	8196432	AssignmentExpression	fdata . data = font_data		8196368	0		=			
ANR	8196433	MemberAccess	fdata . data		8196368	0					
ANR	8196434	Identifier	fdata		8196368	0					
ANR	8196435	Identifier	data		8196368	1					
ANR	8196436	Identifier	font_data		8196368	1					
ANR	8196437	ExpressionStatement	fdata . size = font_data_len	639:4:19659:19685	8196368	9	True				
ANR	8196438	AssignmentExpression	fdata . size = font_data_len		8196368	0		=			
ANR	8196439	MemberAccess	fdata . size		8196368	0					
ANR	8196440	Identifier	fdata		8196368	0					
ANR	8196441	Identifier	size		8196368	1					
ANR	8196442	Identifier	font_data_len		8196368	1					
ANR	8196443	ExpressionStatement	"gs_fapi_set_servers_client_data ( pfont -> memory , ( const gs_fapi_font * ) & local_pl_ff_stub , pfont )"	644:4:19856:20022	8196368	10	True				
ANR	8196444	CallExpression	"gs_fapi_set_servers_client_data ( pfont -> memory , ( const gs_fapi_font * ) & local_pl_ff_stub , pfont )"		8196368	0					
ANR	8196445	Callee	gs_fapi_set_servers_client_data		8196368	0					
ANR	8196446	Identifier	gs_fapi_set_servers_client_data		8196368	0					
ANR	8196447	ArgumentList	pfont -> memory		8196368	1					
ANR	8196448	Argument	pfont -> memory		8196368	0					
ANR	8196449	PtrMemberAccess	pfont -> memory		8196368	0					
ANR	8196450	Identifier	pfont		8196368	0					
ANR	8196451	Identifier	memory		8196368	1					
ANR	8196452	Argument	( const gs_fapi_font * ) & local_pl_ff_stub		8196368	1					
ANR	8196453	CastExpression	( const gs_fapi_font * ) & local_pl_ff_stub		8196368	0					
ANR	8196454	CastTarget	const gs_fapi_font *		8196368	0					
ANR	8196455	UnaryOperationExpression	& local_pl_ff_stub		8196368	1					
ANR	8196456	UnaryOperator	&		8196368	0					
ANR	8196457	Identifier	local_pl_ff_stub		8196368	1					
ANR	8196458	Argument	pfont		8196368	2					
ANR	8196459	Identifier	pfont		8196368	0					
ANR	8196460	ExpressionStatement	"code = gs_fapi_passfont ( pfont , subfont , ( char * ) file_name , & fdata , ( char * ) fapi_request , NULL , ( char * * ) & fapi_id , ( gs_fapi_get_server_param_callback ) pl_get_server_param )"	648:4:20029:20282	8196368	11	True				
ANR	8196461	AssignmentExpression	"code = gs_fapi_passfont ( pfont , subfont , ( char * ) file_name , & fdata , ( char * ) fapi_request , NULL , ( char * * ) & fapi_id , ( gs_fapi_get_server_param_callback ) pl_get_server_param )"		8196368	0		=			
ANR	8196462	Identifier	code		8196368	0					
ANR	8196463	CallExpression	"gs_fapi_passfont ( pfont , subfont , ( char * ) file_name , & fdata , ( char * ) fapi_request , NULL , ( char * * ) & fapi_id , ( gs_fapi_get_server_param_callback ) pl_get_server_param )"		8196368	1					
ANR	8196464	Callee	gs_fapi_passfont		8196368	0					
ANR	8196465	Identifier	gs_fapi_passfont		8196368	0					
ANR	8196466	ArgumentList	pfont		8196368	1					
ANR	8196467	Argument	pfont		8196368	0					
ANR	8196468	Identifier	pfont		8196368	0					
ANR	8196469	Argument	subfont		8196368	1					
ANR	8196470	Identifier	subfont		8196368	0					
ANR	8196471	Argument	( char * ) file_name		8196368	2					
ANR	8196472	CastExpression	( char * ) file_name		8196368	0					
ANR	8196473	CastTarget	char *		8196368	0					
ANR	8196474	Identifier	file_name		8196368	1					
ANR	8196475	Argument	& fdata		8196368	3					
ANR	8196476	UnaryOperationExpression	& fdata		8196368	0					
ANR	8196477	UnaryOperator	&		8196368	0					
ANR	8196478	Identifier	fdata		8196368	1					
ANR	8196479	Argument	( char * ) fapi_request		8196368	4					
ANR	8196480	CastExpression	( char * ) fapi_request		8196368	0					
ANR	8196481	CastTarget	char *		8196368	0					
ANR	8196482	Identifier	fapi_request		8196368	1					
ANR	8196483	Argument	NULL		8196368	5					
ANR	8196484	Identifier	NULL		8196368	0					
ANR	8196485	Argument	( char * * ) & fapi_id		8196368	6					
ANR	8196486	CastExpression	( char * * ) & fapi_id		8196368	0					
ANR	8196487	CastTarget	char * *		8196368	0					
ANR	8196488	UnaryOperationExpression	& fapi_id		8196368	1					
ANR	8196489	UnaryOperator	&		8196368	0					
ANR	8196490	Identifier	fapi_id		8196368	1					
ANR	8196491	Argument	( gs_fapi_get_server_param_callback ) pl_get_server_param		8196368	7					
ANR	8196492	CastExpression	( gs_fapi_get_server_param_callback ) pl_get_server_param		8196368	0					
ANR	8196493	CastTarget	gs_fapi_get_server_param_callback		8196368	0					
ANR	8196494	Identifier	pl_get_server_param		8196368	1					
ANR	8196495	IfStatement	if ( code < 0 || fapi_id == NULL )		8196368	12					
ANR	8196496	Condition	code < 0 || fapi_id == NULL	654:8:20293:20319	8196368	0	True				
ANR	8196497	OrExpression	code < 0 || fapi_id == NULL		8196368	0		||			
ANR	8196498	RelationalExpression	code < 0		8196368	0		<			
ANR	8196499	Identifier	code		8196368	0					
ANR	8196500	PrimaryExpression	0		8196368	1					
ANR	8196501	EqualityExpression	fapi_id == NULL		8196368	1		==			
ANR	8196502	Identifier	fapi_id		8196368	0					
ANR	8196503	Identifier	NULL		8196368	1					
ANR	8196504	CompoundStatement		31:37:1010:1010	8196368	1					
ANR	8196505	ReturnStatement	return code ;	655:8:20332:20343	8196368	0	True				
ANR	8196506	Identifier	code		8196368	0					
ANR	8196507	ExpressionStatement	pfont -> procs . build_char = pl_fapi_build_char	658:4:20356:20400	8196368	13	True				
ANR	8196508	AssignmentExpression	pfont -> procs . build_char = pl_fapi_build_char		8196368	0		=			
ANR	8196509	MemberAccess	pfont -> procs . build_char		8196368	0					
ANR	8196510	PtrMemberAccess	pfont -> procs		8196368	0					
ANR	8196511	Identifier	pfont		8196368	0					
ANR	8196512	Identifier	procs		8196368	1					
ANR	8196513	Identifier	build_char		8196368	1					
ANR	8196514	Identifier	pl_fapi_build_char		8196368	1					
ANR	8196515	IfStatement	if ( pfont -> FontType == ft_MicroType )		8196368	14					
ANR	8196516	Condition	pfont -> FontType == ft_MicroType	659:8:20410:20440	8196368	0	True				
ANR	8196517	EqualityExpression	pfont -> FontType == ft_MicroType		8196368	0		==			
ANR	8196518	PtrMemberAccess	pfont -> FontType		8196368	0					
ANR	8196519	Identifier	pfont		8196368	0					
ANR	8196520	Identifier	FontType		8196368	1					
ANR	8196521	Identifier	ft_MicroType		8196368	1					
ANR	8196522	CompoundStatement		36:41:1131:1131	8196368	1					
ANR	8196523	ExpressionStatement	pfont -> procs . encode_char = pl_fapi_encode_char	660:8:20453:20499	8196368	0	True				
ANR	8196524	AssignmentExpression	pfont -> procs . encode_char = pl_fapi_encode_char		8196368	0		=			
ANR	8196525	MemberAccess	pfont -> procs . encode_char		8196368	0					
ANR	8196526	PtrMemberAccess	pfont -> procs		8196368	0					
ANR	8196527	Identifier	pfont		8196368	0					
ANR	8196528	Identifier	procs		8196368	1					
ANR	8196529	Identifier	encode_char		8196368	1					
ANR	8196530	Identifier	pl_fapi_encode_char		8196368	1					
ANR	8196531	ExpressionStatement	plfont -> char_width = pl_fapi_char_width	662:4:20511:20550	8196368	15	True				
ANR	8196532	AssignmentExpression	plfont -> char_width = pl_fapi_char_width		8196368	0		=			
ANR	8196533	PtrMemberAccess	plfont -> char_width		8196368	0					
ANR	8196534	Identifier	plfont		8196368	0					
ANR	8196535	Identifier	char_width		8196368	1					
ANR	8196536	Identifier	pl_fapi_char_width		8196368	1					
ANR	8196537	ExpressionStatement	plfont -> char_metrics = pl_fapi_char_metrics	663:4:20556:20599	8196368	16	True				
ANR	8196538	AssignmentExpression	plfont -> char_metrics = pl_fapi_char_metrics		8196368	0		=			
ANR	8196539	PtrMemberAccess	plfont -> char_metrics		8196368	0					
ANR	8196540	Identifier	plfont		8196368	0					
ANR	8196541	Identifier	char_metrics		8196368	1					
ANR	8196542	Identifier	pl_fapi_char_metrics		8196368	1					
ANR	8196543	ReturnStatement	return ( code ) ;	665:4:20606:20619	8196368	17	True				
ANR	8196544	Identifier	code		8196368	0					
ANR	8196545	ReturnType	int		8196368	1					
ANR	8196546	Identifier	pl_fapi_passfont		8196368	2					
ANR	8196547	ParameterList	"pl_font_t * plfont , int subfont , char * fapi_request , char * file_name , byte * font_data , int font_data_len"		8196368	3					
ANR	8196548	Parameter	pl_font_t * plfont	622:17:19187:19204	8196368	0	True				
ANR	8196549	ParameterType	pl_font_t *		8196368	0					
ANR	8196550	Identifier	plfont		8196368	1					
ANR	8196551	Parameter	int subfont	622:37:19207:19217	8196368	1	True				
ANR	8196552	ParameterType	int		8196368	0					
ANR	8196553	Identifier	subfont		8196368	1					
ANR	8196554	Parameter	char * fapi_request	622:50:19220:19237	8196368	2	True				
ANR	8196555	ParameterType	char *		8196368	0					
ANR	8196556	Identifier	fapi_request		8196368	1					
ANR	8196557	Parameter	char * file_name	623:17:19257:19271	8196368	3	True				
ANR	8196558	ParameterType	char *		8196368	0					
ANR	8196559	Identifier	file_name		8196368	1					
ANR	8196560	Parameter	byte * font_data	623:34:19274:19289	8196368	4	True				
ANR	8196561	ParameterType	byte *		8196368	0					
ANR	8196562	Identifier	font_data		8196368	1					
ANR	8196563	Parameter	int font_data_len	623:52:19292:19308	8196368	5	True				
ANR	8196564	ParameterType	int		8196368	0					
ANR	8196565	Identifier	font_data_len		8196368	1					
ANR	8196566	CFGEntryNode	ENTRY		8196368		True				
ANR	8196567	CFGExitNode	EXIT		8196368		True				
ANR	8196568	Symbol	pl_ff_stub		8196368						
ANR	8196569	Symbol	pfont -> procs		8196368						
ANR	8196570	Symbol	& fdata		8196368						
ANR	8196571	Symbol	code		8196368						
ANR	8196572	Symbol	plfont -> char_width		8196368						
ANR	8196573	Symbol	pfont -> memory		8196368						
ANR	8196574	Symbol	fapi_request		8196368						
ANR	8196575	Symbol	fdata . size		8196368						
ANR	8196576	Symbol	plfont		8196368						
ANR	8196577	Symbol	pfont -> procs . build_char		8196368						
ANR	8196578	Symbol	& local_pl_ff_stub		8196368						
ANR	8196579	Symbol	pl_fapi_char_width		8196368						
ANR	8196580	Symbol	pl_fapi_char_metrics		8196368						
ANR	8196581	Symbol	pl_fapi_encode_char		8196368						
ANR	8196582	Symbol	fdata . data		8196368						
ANR	8196583	Symbol	pfont -> FontType		8196368						
ANR	8196584	Symbol	fapi_id		8196368						
ANR	8196585	Symbol	fdata		8196368						
ANR	8196586	Symbol	gs_fapi_passfont		8196368						
ANR	8196587	Symbol	NULL		8196368						
ANR	8196588	Symbol	font_data_len		8196368						
ANR	8196589	Symbol	pfont		8196368						
ANR	8196590	Symbol	pl_get_server_param		8196368						
ANR	8196591	Symbol	file_name		8196368						
ANR	8196592	Symbol	gs_fapi_available		8196368						
ANR	8196593	Symbol	subfont		8196368						
ANR	8196594	Symbol	& fapi_id		8196368						
ANR	8196595	Symbol	pfont -> procs . encode_char		8196368						
ANR	8196596	Symbol	plfont -> is_xl_format		8196368						
ANR	8196597	Symbol	local_pl_ff_stub . is_mtx_skipped		8196368						
ANR	8196598	Symbol	local_pl_ff_stub		8196368						
ANR	8196599	Symbol	* pfont		8196368						
ANR	8196600	Symbol	plfont -> pfont		8196368						
ANR	8196601	Symbol	font_data		8196368						
ANR	8196602	Symbol	plfont -> char_metrics		8196368						
ANR	8196603	Symbol	* plfont		8196368						
ANR	8196604	Symbol	ft_MicroType		8196368						
ANR	8196605	Symbol	pl_fapi_build_char		8196368						
ANR	8196606	Function	pl_fapi_ufst_available	668:0:20624:21001							
ANR	8196607	FunctionDef	pl_fapi_ufst_available (gs_memory_t * mem)		8196606	0					
ANR	8196608	CompoundStatement		670:0:20671:21001	8196606	0					
ANR	8196609	IdentifierDeclStatement	gs_fapi_server * serv = NULL ;	671:4:20677:20704	8196606	0	True				
ANR	8196610	IdentifierDecl	* serv = NULL		8196606	0					
ANR	8196611	IdentifierDeclType	gs_fapi_server *		8196606	0					
ANR	8196612	Identifier	serv		8196606	1					
ANR	8196613	AssignmentExpression	* serv = NULL		8196606	2		=			
ANR	8196614	Identifier	NULL		8196606	0					
ANR	8196615	Identifier	NULL		8196606	1					
ANR	8196616	IdentifierDeclStatement	"int code = gs_fapi_find_server ( mem , ( char * ) ""UFST"" , & serv , ( gs_fapi_get_server_param_callback ) pl_get_server_param ) ;"	672:4:20710:20895	8196606	1	True				
ANR	8196617	IdentifierDecl	"code = gs_fapi_find_server ( mem , ( char * ) ""UFST"" , & serv , ( gs_fapi_get_server_param_callback ) pl_get_server_param )"		8196606	0					
ANR	8196618	IdentifierDeclType	int		8196606	0					
ANR	8196619	Identifier	code		8196606	1					
ANR	8196620	AssignmentExpression	"code = gs_fapi_find_server ( mem , ( char * ) ""UFST"" , & serv , ( gs_fapi_get_server_param_callback ) pl_get_server_param )"		8196606	2		=			
ANR	8196621	Identifier	code		8196606	0					
ANR	8196622	CallExpression	"gs_fapi_find_server ( mem , ( char * ) ""UFST"" , & serv , ( gs_fapi_get_server_param_callback ) pl_get_server_param )"		8196606	1					
ANR	8196623	Callee	gs_fapi_find_server		8196606	0					
ANR	8196624	Identifier	gs_fapi_find_server		8196606	0					
ANR	8196625	ArgumentList	mem		8196606	1					
ANR	8196626	Argument	mem		8196606	0					
ANR	8196627	Identifier	mem		8196606	0					
ANR	8196628	Argument	"( char * ) ""UFST"""		8196606	1					
ANR	8196629	CastExpression	"( char * ) ""UFST"""		8196606	0					
ANR	8196630	CastTarget	char *		8196606	0					
ANR	8196631	PrimaryExpression	"""UFST"""		8196606	1					
ANR	8196632	Argument	& serv		8196606	2					
ANR	8196633	UnaryOperationExpression	& serv		8196606	0					
ANR	8196634	UnaryOperator	&		8196606	0					
ANR	8196635	Identifier	serv		8196606	1					
ANR	8196636	Argument	( gs_fapi_get_server_param_callback ) pl_get_server_param		8196606	3					
ANR	8196637	CastExpression	( gs_fapi_get_server_param_callback ) pl_get_server_param		8196606	0					
ANR	8196638	CastTarget	gs_fapi_get_server_param_callback		8196606	0					
ANR	8196639	Identifier	pl_get_server_param		8196606	1					
ANR	8196640	IfStatement	if ( code == 0 && serv != NULL )		8196606	2					
ANR	8196641	Condition	code == 0 && serv != NULL	676:8:20906:20930	8196606	0	True				
ANR	8196642	AndExpression	code == 0 && serv != NULL		8196606	0		&&			
ANR	8196643	EqualityExpression	code == 0		8196606	0		==			
ANR	8196644	Identifier	code		8196606	0					
ANR	8196645	PrimaryExpression	0		8196606	1					
ANR	8196646	EqualityExpression	serv != NULL		8196606	1		!=			
ANR	8196647	Identifier	serv		8196606	0					
ANR	8196648	Identifier	NULL		8196606	1					
ANR	8196649	CompoundStatement		7:35:261:261	8196606	1					
ANR	8196650	ReturnStatement	return ( true ) ;	677:8:20943:20956	8196606	0	True				
ANR	8196651	Identifier	true		8196606	0					
ANR	8196652	ElseStatement	else		8196606	0					
ANR	8196653	CompoundStatement		9:11:297:297	8196606	0					
ANR	8196654	ReturnStatement	return ( false ) ;	679:8:20979:20993	8196606	0	True				
ANR	8196655	Identifier	false		8196606	0					
ANR	8196656	ReturnType	bool		8196606	1					
ANR	8196657	Identifier	pl_fapi_ufst_available		8196606	2					
ANR	8196658	ParameterList	gs_memory_t * mem		8196606	3					
ANR	8196659	Parameter	gs_memory_t * mem	669:23:20652:20668	8196606	0	True				
ANR	8196660	ParameterType	gs_memory_t *		8196606	0					
ANR	8196661	Identifier	mem		8196606	1					
ANR	8196662	CFGEntryNode	ENTRY		8196606		True				
ANR	8196663	CFGExitNode	EXIT		8196606		True				
ANR	8196664	Symbol	& serv		8196606						
ANR	8196665	Symbol	gs_fapi_find_server		8196606						
ANR	8196666	Symbol	serv		8196606						
ANR	8196667	Symbol	NULL		8196606						
ANR	8196668	Symbol	code		8196606						
ANR	8196669	Symbol	mem		8196606						
ANR	8196670	Symbol	pl_get_server_param		8196606						
ANR	8196671	Symbol	true		8196606						
ANR	8196672	Symbol	false		8196606						
