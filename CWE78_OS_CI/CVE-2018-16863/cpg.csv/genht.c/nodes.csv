command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4917363	File	data/converged/CVE-2018-16863_ghostpdl/genht.c								
ANR	4917364	Function	read_file	65:0:2279:2683							
ANR	4917365	FunctionDef	"read_file (FILE * in , char * cname)"		4917364	0					
ANR	4917366	CompoundStatement		67:0:2326:2683	4917364	0					
ANR	4917367	IdentifierDeclStatement	"int len , nread ;"	68:4:2332:2346	4917364	0	True				
ANR	4917368	IdentifierDecl	len		4917364	0					
ANR	4917369	IdentifierDeclType	int		4917364	0					
ANR	4917370	Identifier	len		4917364	1					
ANR	4917371	IdentifierDecl	nread		4917364	1					
ANR	4917372	IdentifierDeclType	int		4917364	0					
ANR	4917373	Identifier	nread		4917364	1					
ANR	4917374	IdentifierDeclStatement	char * cont ;	69:4:2352:2362	4917364	1	True				
ANR	4917375	IdentifierDecl	* cont		4917364	0					
ANR	4917376	IdentifierDeclType	char *		4917364	0					
ANR	4917377	Identifier	cont		4917364	1					
ANR	4917378	ExpressionStatement	"fseek ( in , 0L , 2 )"	71:4:2369:2398	4917364	2	True				
ANR	4917379	CallExpression	"fseek ( in , 0L , 2 )"		4917364	0					
ANR	4917380	Callee	fseek		4917364	0					
ANR	4917381	Identifier	fseek		4917364	0					
ANR	4917382	ArgumentList	in		4917364	1					
ANR	4917383	Argument	in		4917364	0					
ANR	4917384	Identifier	in		4917364	0					
ANR	4917385	Argument	0L		4917364	1					
ANR	4917386	PrimaryExpression	0L		4917364	0					
ANR	4917387	Argument	2		4917364	2					
ANR	4917388	PrimaryExpression	2		4917364	0					
ANR	4917389	ExpressionStatement	len = ftell ( in )	72:4:2404:2419	4917364	3	True				
ANR	4917390	AssignmentExpression	len = ftell ( in )		4917364	0		=			
ANR	4917391	Identifier	len		4917364	0					
ANR	4917392	CallExpression	ftell ( in )		4917364	1					
ANR	4917393	Callee	ftell		4917364	0					
ANR	4917394	Identifier	ftell		4917364	0					
ANR	4917395	ArgumentList	in		4917364	1					
ANR	4917396	Argument	in		4917364	0					
ANR	4917397	Identifier	in		4917364	0					
ANR	4917398	ExpressionStatement	cont = malloc ( len + 1 )	73:4:2425:2447	4917364	4	True				
ANR	4917399	AssignmentExpression	cont = malloc ( len + 1 )		4917364	0		=			
ANR	4917400	Identifier	cont		4917364	0					
ANR	4917401	CallExpression	malloc ( len + 1 )		4917364	1					
ANR	4917402	Callee	malloc		4917364	0					
ANR	4917403	Identifier	malloc		4917364	0					
ANR	4917404	ArgumentList	len + 1		4917364	1					
ANR	4917405	Argument	len + 1		4917364	0					
ANR	4917406	AdditiveExpression	len + 1		4917364	0		+			
ANR	4917407	Identifier	len		4917364	0					
ANR	4917408	PrimaryExpression	1		4917364	1					
ANR	4917409	IfStatement	if ( cont == 0 )		4917364	5					
ANR	4917410	Condition	cont == 0	74:8:2457:2465	4917364	0	True				
ANR	4917411	EqualityExpression	cont == 0		4917364	0		==			
ANR	4917412	Identifier	cont		4917364	0					
ANR	4917413	PrimaryExpression	0		4917364	1					
ANR	4917414	CompoundStatement		8:19:141:141	4917364	1					
ANR	4917415	ExpressionStatement	"fprintf ( stderr , ""Can't allocate %d bytes to read %s.\\n"" , len + 1 , cname )"	75:8:2478:2566	4917364	0	True				
ANR	4917416	CallExpression	"fprintf ( stderr , ""Can't allocate %d bytes to read %s.\\n"" , len + 1 , cname )"		4917364	0					
ANR	4917417	Callee	fprintf		4917364	0					
ANR	4917418	Identifier	fprintf		4917364	0					
ANR	4917419	ArgumentList	stderr		4917364	1					
ANR	4917420	Argument	stderr		4917364	0					
ANR	4917421	Identifier	stderr		4917364	0					
ANR	4917422	Argument	"""Can't allocate %d bytes to read %s.\\n"""		4917364	1					
ANR	4917423	PrimaryExpression	"""Can't allocate %d bytes to read %s.\\n"""		4917364	0					
ANR	4917424	Argument	len + 1		4917364	2					
ANR	4917425	AdditiveExpression	len + 1		4917364	0		+			
ANR	4917426	Identifier	len		4917364	0					
ANR	4917427	PrimaryExpression	1		4917364	1					
ANR	4917428	Argument	cname		4917364	3					
ANR	4917429	Identifier	cname		4917364	0					
ANR	4917430	ReturnStatement	return 0 ;	77:8:2576:2584	4917364	1	True				
ANR	4917431	PrimaryExpression	0		4917364	0					
ANR	4917432	ExpressionStatement	rewind ( in )	79:4:2596:2606	4917364	6	True				
ANR	4917433	CallExpression	rewind ( in )		4917364	0					
ANR	4917434	Callee	rewind		4917364	0					
ANR	4917435	Identifier	rewind		4917364	0					
ANR	4917436	ArgumentList	in		4917364	1					
ANR	4917437	Argument	in		4917364	0					
ANR	4917438	Identifier	in		4917364	0					
ANR	4917439	ExpressionStatement	"nread = fread ( cont , 1 , len , in )"	80:4:2612:2643	4917364	7	True				
ANR	4917440	AssignmentExpression	"nread = fread ( cont , 1 , len , in )"		4917364	0		=			
ANR	4917441	Identifier	nread		4917364	0					
ANR	4917442	CallExpression	"fread ( cont , 1 , len , in )"		4917364	1					
ANR	4917443	Callee	fread		4917364	0					
ANR	4917444	Identifier	fread		4917364	0					
ANR	4917445	ArgumentList	cont		4917364	1					
ANR	4917446	Argument	cont		4917364	0					
ANR	4917447	Identifier	cont		4917364	0					
ANR	4917448	Argument	1		4917364	1					
ANR	4917449	PrimaryExpression	1		4917364	0					
ANR	4917450	Argument	len		4917364	2					
ANR	4917451	Identifier	len		4917364	0					
ANR	4917452	Argument	in		4917364	3					
ANR	4917453	Identifier	in		4917364	0					
ANR	4917454	ExpressionStatement	cont [ nread ] = 0	81:4:2649:2664	4917364	8	True				
ANR	4917455	AssignmentExpression	cont [ nread ] = 0		4917364	0		=			
ANR	4917456	ArrayIndexing	cont [ nread ]		4917364	0					
ANR	4917457	Identifier	cont		4917364	0					
ANR	4917458	Identifier	nread		4917364	1					
ANR	4917459	PrimaryExpression	0		4917364	1					
ANR	4917460	ReturnStatement	return cont ;	82:4:2670:2681	4917364	9	True				
ANR	4917461	Identifier	cont		4917364	0					
ANR	4917462	ReturnType	static char *		4917364	1					
ANR	4917463	Identifier	read_file		4917364	2					
ANR	4917464	ParameterList	"FILE * in , char * cname"		4917364	3					
ANR	4917465	Parameter	FILE * in	66:10:2303:2310	4917364	0	True				
ANR	4917466	ParameterType	FILE *		4917364	0					
ANR	4917467	Identifier	in		4917364	1					
ANR	4917468	Parameter	char * cname	66:20:2313:2323	4917364	1	True				
ANR	4917469	ParameterType	char *		4917364	0					
ANR	4917470	Identifier	cname		4917364	1					
ANR	4917471	CFGEntryNode	ENTRY		4917364		True				
ANR	4917472	CFGExitNode	EXIT		4917364		True				
ANR	4917473	Symbol	malloc		4917364						
ANR	4917474	Symbol	len		4917364						
ANR	4917475	Symbol	ftell		4917364						
ANR	4917476	Symbol	in		4917364						
ANR	4917477	Symbol	* cont		4917364						
ANR	4917478	Symbol	nread		4917364						
ANR	4917479	Symbol	cname		4917364						
ANR	4917480	Symbol	* nread		4917364						
ANR	4917481	Symbol	cont		4917364						
ANR	4917482	Symbol	stderr		4917364						
ANR	4917483	Symbol	fread		4917364						
ANR	4917484	Function	parse_line	86:0:2736:3204							
ANR	4917485	FunctionDef	"parse_line (char * * pstr , char * * pline)"		4917484	0					
ANR	4917486	CompoundStatement		88:0:2786:3204	4917484	0					
ANR	4917487	IdentifierDeclStatement	char * str = * pstr ;	89:4:2792:2809	4917484	0	True				
ANR	4917488	IdentifierDecl	* str = * pstr		4917484	0					
ANR	4917489	IdentifierDeclType	char *		4917484	0					
ANR	4917490	Identifier	str		4917484	1					
ANR	4917491	AssignmentExpression	* str = * pstr		4917484	2		=			
ANR	4917492	Identifier	str		4917484	0					
ANR	4917493	UnaryOperationExpression	* pstr		4917484	1					
ANR	4917494	UnaryOperator	*		4917484	0					
ANR	4917495	Identifier	pstr		4917484	1					
ANR	4917496	Label	top :	91:0:2812:2815	4917484	1	True				
ANR	4917497	Identifier	top		4917484	0					
ANR	4917498	WhileStatement	"while ( * str && strchr ( "" \\t\\r\\n"" , * str ) )"		4917484	2					
ANR	4917499	Condition	"* str && strchr ( "" \\t\\r\\n"" , * str )"	92:11:2828:2858	4917484	0	True				
ANR	4917500	AndExpression	"* str && strchr ( "" \\t\\r\\n"" , * str )"		4917484	0		&&			
ANR	4917501	UnaryOperationExpression	* str		4917484	0					
ANR	4917502	UnaryOperator	*		4917484	0					
ANR	4917503	Identifier	str		4917484	1					
ANR	4917504	CallExpression	"strchr ( "" \\t\\r\\n"" , * str )"		4917484	1					
ANR	4917505	Callee	strchr		4917484	0					
ANR	4917506	Identifier	strchr		4917484	0					
ANR	4917507	ArgumentList	""" \\t\\r\\n"""		4917484	1					
ANR	4917508	Argument	""" \\t\\r\\n"""		4917484	0					
ANR	4917509	PrimaryExpression	""" \\t\\r\\n"""		4917484	0					
ANR	4917510	Argument	* str		4917484	1					
ANR	4917511	UnaryOperationExpression	* str		4917484	0					
ANR	4917512	UnaryOperator	*		4917484	0					
ANR	4917513	Identifier	str		4917484	1					
ANR	4917514	ExpressionStatement	++ str	93:8:2894:2899	4917484	1	True				
ANR	4917515	UnaryExpression	++ str		4917484	0					
ANR	4917516	IncDec	++		4917484	0					
ANR	4917517	Identifier	str		4917484	1					
ANR	4917518	IfStatement	if ( * str == 0 )		4917484	3					
ANR	4917519	Condition	* str == 0	94:8:2909:2917	4917484	0	True				
ANR	4917520	EqualityExpression	* str == 0		4917484	0		==			
ANR	4917521	UnaryOperationExpression	* str		4917484	0					
ANR	4917522	UnaryOperator	*		4917484	0					
ANR	4917523	Identifier	str		4917484	1					
ANR	4917524	PrimaryExpression	0		4917484	1					
ANR	4917525	CompoundStatement		7:19:133:133	4917484	1					
ANR	4917526	ExpressionStatement	* pline = 0	95:8:2930:2940	4917484	0	True				
ANR	4917527	AssignmentExpression	* pline = 0		4917484	0		=			
ANR	4917528	UnaryOperationExpression	* pline		4917484	0					
ANR	4917529	UnaryOperator	*		4917484	0					
ANR	4917530	Identifier	pline		4917484	1					
ANR	4917531	PrimaryExpression	0		4917484	1					
ANR	4917532	ReturnStatement	return false ;	96:8:2950:2962	4917484	1	True				
ANR	4917533	Identifier	false		4917484	0					
ANR	4917534	ExpressionStatement	* pline = str	98:4:2974:2986	4917484	4	True				
ANR	4917535	AssignmentExpression	* pline = str		4917484	0		=			
ANR	4917536	UnaryOperationExpression	* pline		4917484	0					
ANR	4917537	UnaryOperator	*		4917484	0					
ANR	4917538	Identifier	pline		4917484	1					
ANR	4917539	Identifier	str		4917484	1					
ANR	4917540	WhileStatement	"while ( * str && ! strchr ( ""\\r\\n"" , * str ) )"		4917484	5					
ANR	4917541	Condition	"* str && ! strchr ( ""\\r\\n"" , * str )"	99:11:2999:3027	4917484	0	True				
ANR	4917542	AndExpression	"* str && ! strchr ( ""\\r\\n"" , * str )"		4917484	0		&&			
ANR	4917543	UnaryOperationExpression	* str		4917484	0					
ANR	4917544	UnaryOperator	*		4917484	0					
ANR	4917545	Identifier	str		4917484	1					
ANR	4917546	UnaryOperationExpression	"! strchr ( ""\\r\\n"" , * str )"		4917484	1					
ANR	4917547	UnaryOperator	!		4917484	0					
ANR	4917548	CallExpression	"strchr ( ""\\r\\n"" , * str )"		4917484	1					
ANR	4917549	Callee	strchr		4917484	0					
ANR	4917550	Identifier	strchr		4917484	0					
ANR	4917551	ArgumentList	"""\\r\\n"""		4917484	1					
ANR	4917552	Argument	"""\\r\\n"""		4917484	0					
ANR	4917553	PrimaryExpression	"""\\r\\n"""		4917484	0					
ANR	4917554	Argument	* str		4917484	1					
ANR	4917555	UnaryOperationExpression	* str		4917484	0					
ANR	4917556	UnaryOperator	*		4917484	0					
ANR	4917557	Identifier	str		4917484	1					
ANR	4917558	ExpressionStatement	++ str	100:8:3053:3058	4917484	1	True				
ANR	4917559	UnaryExpression	++ str		4917484	0					
ANR	4917560	IncDec	++		4917484	0					
ANR	4917561	Identifier	str		4917484	1					
ANR	4917562	WhileStatement	"while ( str > * pline && strchr ( "" \\t"" , str [ - 1 ] ) )"		4917484	6					
ANR	4917563	Condition	"str > * pline && strchr ( "" \\t"" , str [ - 1 ] )"	101:11:3071:3108	4917484	0	True				
ANR	4917564	AndExpression	"str > * pline && strchr ( "" \\t"" , str [ - 1 ] )"		4917484	0		&&			
ANR	4917565	RelationalExpression	str > * pline		4917484	0		>			
ANR	4917566	Identifier	str		4917484	0					
ANR	4917567	UnaryOperationExpression	* pline		4917484	1					
ANR	4917568	UnaryOperator	*		4917484	0					
ANR	4917569	Identifier	pline		4917484	1					
ANR	4917570	CallExpression	"strchr ( "" \\t"" , str [ - 1 ] )"		4917484	1					
ANR	4917571	Callee	strchr		4917484	0					
ANR	4917572	Identifier	strchr		4917484	0					
ANR	4917573	ArgumentList	""" \\t"""		4917484	1					
ANR	4917574	Argument	""" \\t"""		4917484	0					
ANR	4917575	PrimaryExpression	""" \\t"""		4917484	0					
ANR	4917576	Argument	str [ - 1 ]		4917484	1					
ANR	4917577	ArrayIndexing	str [ - 1 ]		4917484	0					
ANR	4917578	Identifier	str		4917484	0					
ANR	4917579	UnaryOperationExpression	- 1		4917484	1					
ANR	4917580	UnaryOperator	-		4917484	0					
ANR	4917581	PrimaryExpression	1		4917484	1					
ANR	4917582	ExpressionStatement	-- str	102:8:3145:3150	4917484	1	True				
ANR	4917583	UnaryExpression	-- str		4917484	0					
ANR	4917584	IncDec	--		4917484	0					
ANR	4917585	Identifier	str		4917484	1					
ANR	4917586	ExpressionStatement	* str = 0	103:4:3156:3164	4917484	7	True				
ANR	4917587	AssignmentExpression	* str = 0		4917484	0		=			
ANR	4917588	UnaryOperationExpression	* str		4917484	0					
ANR	4917589	UnaryOperator	*		4917484	0					
ANR	4917590	Identifier	str		4917484	1					
ANR	4917591	PrimaryExpression	0		4917484	1					
ANR	4917592	ExpressionStatement	* pstr = str + 1	104:4:3170:3185	4917484	8	True				
ANR	4917593	AssignmentExpression	* pstr = str + 1		4917484	0		=			
ANR	4917594	UnaryOperationExpression	* pstr		4917484	0					
ANR	4917595	UnaryOperator	*		4917484	0					
ANR	4917596	Identifier	pstr		4917484	1					
ANR	4917597	AdditiveExpression	str + 1		4917484	1		+			
ANR	4917598	Identifier	str		4917484	0					
ANR	4917599	PrimaryExpression	1		4917484	1					
ANR	4917600	ReturnStatement	return true ;	105:4:3191:3202	4917484	9	True				
ANR	4917601	Identifier	true		4917484	0					
ANR	4917602	ReturnType	static bool		4917484	1					
ANR	4917603	Identifier	parse_line		4917484	2					
ANR	4917604	ParameterList	"char * * pstr , char * * pline"		4917484	3					
ANR	4917605	Parameter	char * * pstr	87:11:2759:2769	4917484	0	True				
ANR	4917606	ParameterType	char * *		4917484	0					
ANR	4917607	Identifier	pstr		4917484	1					
ANR	4917608	Parameter	char * * pline	87:24:2772:2783	4917484	1	True				
ANR	4917609	ParameterType	char * *		4917484	0					
ANR	4917610	Identifier	pline		4917484	1					
ANR	4917611	CFGEntryNode	ENTRY		4917484		True				
ANR	4917612	CFGExitNode	EXIT		4917484		True				
ANR	4917613	Symbol	str		4917484						
ANR	4917614	Symbol	* pline		4917484						
ANR	4917615	Symbol	* pstr		4917484						
ANR	4917616	Symbol	pstr		4917484						
ANR	4917617	Symbol	pline		4917484						
ANR	4917618	Symbol	false		4917484						
ANR	4917619	Symbol	true		4917484						
ANR	4917620	Symbol	strchr		4917484						
ANR	4917621	Symbol	* str		4917484						
ANR	4917622	Function	parse_halftone	107:0:3206:7264							
ANR	4917623	FunctionDef	"parse_halftone (gx_device_halftone_resource_t * phtr , byte * * pThresholds , char * * pprefix , char * * pcont)"		4917622	0					
ANR	4917624	CompoundStatement		110:0:3334:7264	4917622	0					
ANR	4917625	IdentifierDeclStatement	char * str ;	111:4:3340:3349	4917622	0	True				
ANR	4917626	IdentifierDecl	* str		4917622	0					
ANR	4917627	IdentifierDeclType	char *		4917622	0					
ANR	4917628	Identifier	str		4917622	1					
ANR	4917629	IdentifierDeclStatement	char * line ;	112:4:3355:3365	4917622	1	True				
ANR	4917630	IdentifierDecl	* line		4917622	0					
ANR	4917631	IdentifierDeclType	char *		4917622	0					
ANR	4917632	Identifier	line		4917622	1					
ANR	4917633	IdentifierDeclStatement	char * rname = 0 ;	113:4:3371:3386	4917622	2	True				
ANR	4917634	IdentifierDecl	* rname = 0		4917622	0					
ANR	4917635	IdentifierDeclType	char *		4917622	0					
ANR	4917636	Identifier	rname		4917622	1					
ANR	4917637	AssignmentExpression	* rname = 0		4917622	2		=			
ANR	4917638	Identifier	rname		4917622	0					
ANR	4917639	PrimaryExpression	0		4917622	1					
ANR	4917640	IdentifierDeclStatement	int HalftoneType = - 1 ;	114:4:3392:3413	4917622	3	True				
ANR	4917641	IdentifierDecl	HalftoneType = - 1		4917622	0					
ANR	4917642	IdentifierDeclType	int		4917622	0					
ANR	4917643	Identifier	HalftoneType		4917622	1					
ANR	4917644	AssignmentExpression	HalftoneType = - 1		4917622	2		=			
ANR	4917645	Identifier	HalftoneType		4917622	0					
ANR	4917646	UnaryOperationExpression	- 1		4917622	1					
ANR	4917647	UnaryOperator	-		4917622	0					
ANR	4917648	PrimaryExpression	1		4917622	1					
ANR	4917649	IdentifierDeclStatement	"int Width = - 1 , Height = - 1 ;"	115:4:3419:3446	4917622	4	True				
ANR	4917650	IdentifierDecl	Width = - 1		4917622	0					
ANR	4917651	IdentifierDeclType	int		4917622	0					
ANR	4917652	Identifier	Width		4917622	1					
ANR	4917653	AssignmentExpression	Width = - 1		4917622	2		=			
ANR	4917654	Identifier	Width		4917622	0					
ANR	4917655	UnaryOperationExpression	- 1		4917622	1					
ANR	4917656	UnaryOperator	-		4917622	0					
ANR	4917657	PrimaryExpression	1		4917622	1					
ANR	4917658	IdentifierDecl	Height = - 1		4917622	1					
ANR	4917659	IdentifierDeclType	int		4917622	0					
ANR	4917660	Identifier	Height		4917622	1					
ANR	4917661	AssignmentExpression	Height = - 1		4917622	2		=			
ANR	4917662	Identifier	Height		4917622	0					
ANR	4917663	UnaryOperationExpression	- 1		4917622	1					
ANR	4917664	UnaryOperator	-		4917622	0					
ANR	4917665	PrimaryExpression	1		4917622	1					
ANR	4917666	IdentifierDeclStatement	byte * Thresholds = 0 ;	116:4:3452:3472	4917622	5	True				
ANR	4917667	IdentifierDecl	* Thresholds = 0		4917622	0					
ANR	4917668	IdentifierDeclType	byte *		4917622	0					
ANR	4917669	Identifier	Thresholds		4917622	1					
ANR	4917670	AssignmentExpression	* Thresholds = 0		4917622	2		=			
ANR	4917671	Identifier	Thresholds		4917622	0					
ANR	4917672	PrimaryExpression	0		4917622	1					
ANR	4917673	IdentifierDeclStatement	stream_AXD_state ss ;	117:4:3478:3497	4917622	6	True				
ANR	4917674	IdentifierDecl	ss		4917622	0					
ANR	4917675	IdentifierDeclType	stream_AXD_state		4917622	0					
ANR	4917676	Identifier	ss		4917622	1					
ANR	4917677	ForStatement	"for ( str = * pcont ; parse_line ( & str , & line ) ; )"		4917622	7					
ANR	4917678	ForInit	str = * pcont ;	120:9:3535:3547	4917622	0	True				
ANR	4917679	AssignmentExpression	str = * pcont		4917622	0		=			
ANR	4917680	Identifier	str		4917622	0					
ANR	4917681	UnaryOperationExpression	* pcont		4917622	1					
ANR	4917682	UnaryOperator	*		4917622	0					
ANR	4917683	Identifier	pcont		4917622	1					
ANR	4917684	Condition	"parse_line ( & str , & line )"	120:23:3549:3571	4917622	1	True				
ANR	4917685	CallExpression	"parse_line ( & str , & line )"		4917622	0					
ANR	4917686	Callee	parse_line		4917622	0					
ANR	4917687	Identifier	parse_line		4917622	0					
ANR	4917688	ArgumentList	& str		4917622	1					
ANR	4917689	Argument	& str		4917622	0					
ANR	4917690	UnaryOperationExpression	& str		4917622	0					
ANR	4917691	UnaryOperator	&		4917622	0					
ANR	4917692	Identifier	str		4917622	1					
ANR	4917693	Argument	& line		4917622	1					
ANR	4917694	UnaryOperationExpression	& line		4917622	0					
ANR	4917695	UnaryOperator	&		4917622	0					
ANR	4917696	Identifier	line		4917622	1					
ANR	4917697	CompoundStatement		14:8:291:306	4917622	2					
ANR	4917698	IdentifierDeclStatement	char * end ;	121:8:3585:3594	4917622	0	True				
ANR	4917699	IdentifierDecl	* end		4917622	0					
ANR	4917700	IdentifierDeclType	char *		4917622	0					
ANR	4917701	Identifier	end		4917622	1					
ANR	4917702	IdentifierDeclStatement	char * prefix ;	122:8:3604:3616	4917622	1	True				
ANR	4917703	IdentifierDecl	* prefix		4917622	0					
ANR	4917704	IdentifierDeclType	char *		4917622	0					
ANR	4917705	Identifier	prefix		4917622	1					
ANR	4917706	IdentifierDeclStatement	char terminator ;	123:8:3626:3641	4917622	2	True				
ANR	4917707	IdentifierDecl	terminator		4917622	0					
ANR	4917708	IdentifierDeclType	char		4917622	0					
ANR	4917709	Identifier	terminator		4917622	1					
ANR	4917710	IfStatement	if ( line [ 0 ] == '%' )		4917622	3					
ANR	4917711	Condition	line [ 0 ] == '%'	125:12:3656:3669	4917622	0	True				
ANR	4917712	EqualityExpression	line [ 0 ] == '%'		4917622	0		==			
ANR	4917713	ArrayIndexing	line [ 0 ]		4917622	0					
ANR	4917714	Identifier	line		4917622	0					
ANR	4917715	PrimaryExpression	0		4917622	1					
ANR	4917716	PrimaryExpression	'%'		4917622	1					
ANR	4917717	ContinueStatement	continue ;	126:12:3684:3692	4917622	1	True				
ANR	4917718	IfStatement	"if ( strlen ( line ) >= 14 && ! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" ) )"		4917622	4					
ANR	4917719	Condition	"strlen ( line ) >= 14 && ! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"	127:12:3706:3790	4917622	0	True				
ANR	4917720	AndExpression	"strlen ( line ) >= 14 && ! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"		4917622	0		&&			
ANR	4917721	RelationalExpression	strlen ( line ) >= 14		4917622	0		>=			
ANR	4917722	CallExpression	strlen ( line )		4917622	0					
ANR	4917723	Callee	strlen		4917622	0					
ANR	4917724	Identifier	strlen		4917622	0					
ANR	4917725	ArgumentList	line		4917622	1					
ANR	4917726	Argument	line		4917622	0					
ANR	4917727	Identifier	line		4917622	0					
ANR	4917728	PrimaryExpression	14		4917622	1					
ANR	4917729	UnaryOperationExpression	"! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"		4917622	1					
ANR	4917730	UnaryOperator	!		4917622	0					
ANR	4917731	CallExpression	"strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"		4917622	1					
ANR	4917732	Callee	strcmp		4917622	0					
ANR	4917733	Identifier	strcmp		4917622	0					
ANR	4917734	ArgumentList	line + strlen ( line ) - 14		4917622	1					
ANR	4917735	Argument	line + strlen ( line ) - 14		4917622	0					
ANR	4917736	AdditiveExpression	line + strlen ( line ) - 14		4917622	0		+			
ANR	4917737	Identifier	line		4917622	0					
ANR	4917738	AdditiveExpression	strlen ( line ) - 14		4917622	1		-			
ANR	4917739	CallExpression	strlen ( line )		4917622	0					
ANR	4917740	Callee	strlen		4917622	0					
ANR	4917741	Identifier	strlen		4917622	0					
ANR	4917742	ArgumentList	line		4917622	1					
ANR	4917743	Argument	line		4917622	0					
ANR	4917744	Identifier	line		4917622	0					
ANR	4917745	PrimaryExpression	14		4917622	1					
ANR	4917746	Argument	"""defineresource"""		4917622	1					
ANR	4917747	PrimaryExpression	"""defineresource"""		4917622	0					
ANR	4917748	BreakStatement	break ;	130:12:3818:3823	4917622	1	True				
ANR	4917749	IfStatement	if ( line [ 0 ] != '/' )		4917622	5					
ANR	4917750	Condition	line [ 0 ] != '/'	131:12:3837:3850	4917622	0	True				
ANR	4917751	EqualityExpression	line [ 0 ] != '/'		4917622	0		!=			
ANR	4917752	ArrayIndexing	line [ 0 ]		4917622	0					
ANR	4917753	Identifier	line		4917622	0					
ANR	4917754	PrimaryExpression	0		4917622	1					
ANR	4917755	PrimaryExpression	'/'		4917622	1					
ANR	4917756	ContinueStatement	continue ;	132:12:3865:3873	4917622	1	True				
ANR	4917757	IfStatement	"if ( strlen ( line ) >= 8 && ! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" ) )"		4917622	6					
ANR	4917758	Condition	"strlen ( line ) >= 8 && ! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"	133:12:3887:3963	4917622	0	True				
ANR	4917759	AndExpression	"strlen ( line ) >= 8 && ! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"		4917622	0		&&			
ANR	4917760	RelationalExpression	strlen ( line ) >= 8		4917622	0		>=			
ANR	4917761	CallExpression	strlen ( line )		4917622	0					
ANR	4917762	Callee	strlen		4917622	0					
ANR	4917763	Identifier	strlen		4917622	0					
ANR	4917764	ArgumentList	line		4917622	1					
ANR	4917765	Argument	line		4917622	0					
ANR	4917766	Identifier	line		4917622	0					
ANR	4917767	PrimaryExpression	8		4917622	1					
ANR	4917768	UnaryOperationExpression	"! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"		4917622	1					
ANR	4917769	UnaryOperator	!		4917622	0					
ANR	4917770	CallExpression	"strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"		4917622	1					
ANR	4917771	Callee	strcmp		4917622	0					
ANR	4917772	Identifier	strcmp		4917622	0					
ANR	4917773	ArgumentList	line + strlen ( line ) - 8		4917622	1					
ANR	4917774	Argument	line + strlen ( line ) - 8		4917622	0					
ANR	4917775	AdditiveExpression	line + strlen ( line ) - 8		4917622	0		+			
ANR	4917776	Identifier	line		4917622	0					
ANR	4917777	AdditiveExpression	strlen ( line ) - 8		4917622	1		-			
ANR	4917778	CallExpression	strlen ( line )		4917622	0					
ANR	4917779	Callee	strlen		4917622	0					
ANR	4917780	Identifier	strlen		4917622	0					
ANR	4917781	ArgumentList	line		4917622	1					
ANR	4917782	Argument	line		4917622	0					
ANR	4917783	Identifier	line		4917622	0					
ANR	4917784	PrimaryExpression	8		4917622	1					
ANR	4917785	Argument	""" 1 index"""		4917622	1					
ANR	4917786	PrimaryExpression	""" 1 index"""		4917622	0					
ANR	4917787	ContinueStatement	continue ;	136:12:3991:3999	4917622	1	True				
ANR	4917788	ExpressionStatement	end = ++ line	137:8:4009:4021	4917622	7	True				
ANR	4917789	AssignmentExpression	end = ++ line		4917622	0		=			
ANR	4917790	Identifier	end		4917622	0					
ANR	4917791	UnaryExpression	++ line		4917622	1					
ANR	4917792	IncDec	++		4917622	0					
ANR	4917793	Identifier	line		4917622	1					
ANR	4917794	WhileStatement	"while ( * end && ! strchr ( "" \\t<"" , * end ) )"		4917622	8					
ANR	4917795	Condition	"* end && ! strchr ( "" \\t<"" , * end )"	138:15:4038:4066	4917622	0	True				
ANR	4917796	AndExpression	"* end && ! strchr ( "" \\t<"" , * end )"		4917622	0		&&			
ANR	4917797	UnaryOperationExpression	* end		4917622	0					
ANR	4917798	UnaryOperator	*		4917622	0					
ANR	4917799	Identifier	end		4917622	1					
ANR	4917800	UnaryOperationExpression	"! strchr ( "" \\t<"" , * end )"		4917622	1					
ANR	4917801	UnaryOperator	!		4917622	0					
ANR	4917802	CallExpression	"strchr ( "" \\t<"" , * end )"		4917622	1					
ANR	4917803	Callee	strchr		4917622	0					
ANR	4917804	Identifier	strchr		4917622	0					
ANR	4917805	ArgumentList	""" \\t<"""		4917622	1					
ANR	4917806	Argument	""" \\t<"""		4917622	0					
ANR	4917807	PrimaryExpression	""" \\t<"""		4917622	0					
ANR	4917808	Argument	* end		4917622	1					
ANR	4917809	UnaryOperationExpression	* end		4917622	0					
ANR	4917810	UnaryOperator	*		4917622	0					
ANR	4917811	Identifier	end		4917622	1					
ANR	4917812	ExpressionStatement	++ end	139:12:4104:4109	4917622	1	True				
ANR	4917813	UnaryExpression	++ end		4917622	0					
ANR	4917814	IncDec	++		4917622	0					
ANR	4917815	Identifier	end		4917622	1					
ANR	4917816	ExpressionStatement	terminator = * end	140:8:4119:4136	4917622	9	True				
ANR	4917817	AssignmentExpression	terminator = * end		4917622	0		=			
ANR	4917818	Identifier	terminator		4917622	0					
ANR	4917819	UnaryOperationExpression	* end		4917622	1					
ANR	4917820	UnaryOperator	*		4917622	0					
ANR	4917821	Identifier	end		4917622	1					
ANR	4917822	ExpressionStatement	* end = 0	141:8:4146:4154	4917622	10	True				
ANR	4917823	AssignmentExpression	* end = 0		4917622	0		=			
ANR	4917824	UnaryOperationExpression	* end		4917622	0					
ANR	4917825	UnaryOperator	*		4917622	0					
ANR	4917826	Identifier	end		4917622	1					
ANR	4917827	PrimaryExpression	0		4917622	1					
ANR	4917828	IfStatement	if ( rname == 0 )		4917622	11					
ANR	4917829	Condition	rname == 0	142:12:4168:4177	4917622	0	True				
ANR	4917830	EqualityExpression	rname == 0		4917622	0		==			
ANR	4917831	Identifier	rname		4917622	0					
ANR	4917832	PrimaryExpression	0		4917622	1					
ANR	4917833	CompoundStatement		33:24:845:845	4917622	1					
ANR	4917834	ExpressionStatement	rname = malloc ( strlen ( line ) + 1 )	143:12:4228:4260	4917622	0	True				
ANR	4917835	AssignmentExpression	rname = malloc ( strlen ( line ) + 1 )		4917622	0		=			
ANR	4917836	Identifier	rname		4917622	0					
ANR	4917837	CallExpression	malloc ( strlen ( line ) + 1 )		4917622	1					
ANR	4917838	Callee	malloc		4917622	0					
ANR	4917839	Identifier	malloc		4917622	0					
ANR	4917840	ArgumentList	strlen ( line ) + 1		4917622	1					
ANR	4917841	Argument	strlen ( line ) + 1		4917622	0					
ANR	4917842	AdditiveExpression	strlen ( line ) + 1		4917622	0		+			
ANR	4917843	CallExpression	strlen ( line )		4917622	0					
ANR	4917844	Callee	strlen		4917622	0					
ANR	4917845	Identifier	strlen		4917622	0					
ANR	4917846	ArgumentList	line		4917622	1					
ANR	4917847	Argument	line		4917622	0					
ANR	4917848	Identifier	line		4917622	0					
ANR	4917849	PrimaryExpression	1		4917622	1					
ANR	4917850	ExpressionStatement	"strcpy ( rname , line )"	144:12:4274:4293	4917622	1	True				
ANR	4917851	CallExpression	"strcpy ( rname , line )"		4917622	0					
ANR	4917852	Callee	strcpy		4917622	0					
ANR	4917853	Identifier	strcpy		4917622	0					
ANR	4917854	ArgumentList	rname		4917622	1					
ANR	4917855	Argument	rname		4917622	0					
ANR	4917856	Identifier	rname		4917622	0					
ANR	4917857	Argument	line		4917622	1					
ANR	4917858	Identifier	line		4917622	0					
ANR	4917859	ContinueStatement	continue ;	145:12:4307:4315	4917622	2	True				
ANR	4917860	IfStatement	if ( terminator == 0 )		4917622	12					
ANR	4917861	Condition	terminator == 0	147:12:4339:4353	4917622	0	True				
ANR	4917862	EqualityExpression	terminator == 0		4917622	0		==			
ANR	4917863	Identifier	terminator		4917622	0					
ANR	4917864	PrimaryExpression	0		4917622	1					
ANR	4917865	ContinueStatement	continue ;	148:12:4386:4394	4917622	1	True				
ANR	4917866	ExpressionStatement	++ end	149:8:4404:4409	4917622	13	True				
ANR	4917867	UnaryExpression	++ end		4917622	0					
ANR	4917868	IncDec	++		4917622	0					
ANR	4917869	Identifier	end		4917622	1					
ANR	4917870	IfStatement	"if ( ! strcmp ( line , ""HalftoneType"" ) )"		4917622	14					
ANR	4917871	Condition	"! strcmp ( line , ""HalftoneType"" )"	150:12:4423:4451	4917622	0	True				
ANR	4917872	UnaryOperationExpression	"! strcmp ( line , ""HalftoneType"" )"		4917622	0					
ANR	4917873	UnaryOperator	!		4917622	0					
ANR	4917874	CallExpression	"strcmp ( line , ""HalftoneType"" )"		4917622	1					
ANR	4917875	Callee	strcmp		4917622	0					
ANR	4917876	Identifier	strcmp		4917622	0					
ANR	4917877	ArgumentList	line		4917622	1					
ANR	4917878	Argument	line		4917622	0					
ANR	4917879	Identifier	line		4917622	0					
ANR	4917880	Argument	"""HalftoneType"""		4917622	1					
ANR	4917881	PrimaryExpression	"""HalftoneType"""		4917622	0					
ANR	4917882	CompoundStatement		41:43:1119:1119	4917622	1					
ANR	4917883	IfStatement	"if ( sscanf ( end , ""%d"" , & HalftoneType ) != 1 )"		4917622	0					
ANR	4917884	Condition	"sscanf ( end , ""%d"" , & HalftoneType ) != 1"	151:16:4472:4508	4917622	0	True				
ANR	4917885	EqualityExpression	"sscanf ( end , ""%d"" , & HalftoneType ) != 1"		4917622	0		!=			
ANR	4917886	CallExpression	"sscanf ( end , ""%d"" , & HalftoneType )"		4917622	0					
ANR	4917887	Callee	sscanf		4917622	0					
ANR	4917888	Identifier	sscanf		4917622	0					
ANR	4917889	ArgumentList	end		4917622	1					
ANR	4917890	Argument	end		4917622	0					
ANR	4917891	Identifier	end		4917622	0					
ANR	4917892	Argument	"""%d"""		4917622	1					
ANR	4917893	PrimaryExpression	"""%d"""		4917622	0					
ANR	4917894	Argument	& HalftoneType		4917622	2					
ANR	4917895	UnaryOperationExpression	& HalftoneType		4917622	0					
ANR	4917896	UnaryOperator	&		4917622	0					
ANR	4917897	Identifier	HalftoneType		4917622	1					
ANR	4917898	PrimaryExpression	1		4917622	1					
ANR	4917899	CompoundStatement		42:55:1176:1176	4917622	1					
ANR	4917900	ExpressionStatement	"fprintf ( stderr , ""Invalid HalftoneType syntax: %s\\n"" , line - 1 )"	152:16:4529:4591	4917622	0	True				
ANR	4917901	CallExpression	"fprintf ( stderr , ""Invalid HalftoneType syntax: %s\\n"" , line - 1 )"		4917622	0					
ANR	4917902	Callee	fprintf		4917622	0					
ANR	4917903	Identifier	fprintf		4917622	0					
ANR	4917904	ArgumentList	stderr		4917622	1					
ANR	4917905	Argument	stderr		4917622	0					
ANR	4917906	Identifier	stderr		4917622	0					
ANR	4917907	Argument	"""Invalid HalftoneType syntax: %s\\n"""		4917622	1					
ANR	4917908	PrimaryExpression	"""Invalid HalftoneType syntax: %s\\n"""		4917622	0					
ANR	4917909	Argument	line - 1		4917622	2					
ANR	4917910	AdditiveExpression	line - 1		4917622	0		-			
ANR	4917911	Identifier	line		4917622	0					
ANR	4917912	PrimaryExpression	1		4917622	1					
ANR	4917913	ReturnStatement	return - 1 ;	153:16:4609:4618	4917622	1	True				
ANR	4917914	UnaryOperationExpression	- 1		4917622	0					
ANR	4917915	UnaryOperator	-		4917622	0					
ANR	4917916	PrimaryExpression	1		4917622	1					
ANR	4917917	SwitchStatement	switch ( HalftoneType )		4917622	1					
ANR	4917918	Condition	HalftoneType	155:20:4654:4665	4917622	0	True				
ANR	4917919	Identifier	HalftoneType		4917622	0					
ANR	4917920	CompoundStatement		46:34:1333:1333	4917622	1					
ANR	4917921	Label	case 3 :	156:12:4682:4688	4917622	0	True				
ANR	4917922	BreakStatement	break ;	157:16:4706:4711	4917622	1	True				
ANR	4917923	Label	case 5 :	158:12:4725:4731	4917622	2	True				
ANR	4917924	IfStatement	if ( * pprefix )		4917622	3					
ANR	4917925	Condition	* pprefix	159:20:4753:4760	4917622	0	True				
ANR	4917926	UnaryOperationExpression	* pprefix		4917622	0					
ANR	4917927	UnaryOperator	*		4917622	0					
ANR	4917928	Identifier	pprefix		4917622	1					
ANR	4917929	ExpressionStatement	free ( * pprefix )	160:20:4783:4797	4917622	1	True				
ANR	4917930	CallExpression	free ( * pprefix )		4917622	0					
ANR	4917931	Callee	free		4917622	0					
ANR	4917932	Identifier	free		4917622	0					
ANR	4917933	ArgumentList	* pprefix		4917622	1					
ANR	4917934	Argument	* pprefix		4917622	0					
ANR	4917935	UnaryOperationExpression	* pprefix		4917622	0					
ANR	4917936	UnaryOperator	*		4917622	0					
ANR	4917937	Identifier	pprefix		4917622	1					
ANR	4917938	ExpressionStatement	* pprefix = rname	161:16:4815:4831	4917622	4	True				
ANR	4917939	AssignmentExpression	* pprefix = rname		4917622	0		=			
ANR	4917940	UnaryOperationExpression	* pprefix		4917622	0					
ANR	4917941	UnaryOperator	*		4917622	0					
ANR	4917942	Identifier	pprefix		4917622	1					
ANR	4917943	Identifier	rname		4917622	1					
ANR	4917944	ExpressionStatement	rname = 0	162:16:4849:4858	4917622	5	True				
ANR	4917945	AssignmentExpression	rname = 0		4917622	0		=			
ANR	4917946	Identifier	rname		4917622	0					
ANR	4917947	PrimaryExpression	0		4917622	1					
ANR	4917948	BreakStatement	break ;	163:16:4876:4881	4917622	6	True				
ANR	4917949	Label	default :	164:12:4895:4902	4917622	7	True				
ANR	4917950	Identifier	default		4917622	0					
ANR	4917951	ExpressionStatement	"fprintf ( stderr , ""Invalid HalftoneType: %s\\n"" , end )"	165:16:4920:4970	4917622	8	True				
ANR	4917952	CallExpression	"fprintf ( stderr , ""Invalid HalftoneType: %s\\n"" , end )"		4917622	0					
ANR	4917953	Callee	fprintf		4917622	0					
ANR	4917954	Identifier	fprintf		4917622	0					
ANR	4917955	ArgumentList	stderr		4917622	1					
ANR	4917956	Argument	stderr		4917622	0					
ANR	4917957	Identifier	stderr		4917622	0					
ANR	4917958	Argument	"""Invalid HalftoneType: %s\\n"""		4917622	1					
ANR	4917959	PrimaryExpression	"""Invalid HalftoneType: %s\\n"""		4917622	0					
ANR	4917960	Argument	end		4917622	2					
ANR	4917961	Identifier	end		4917622	0					
ANR	4917962	ReturnStatement	return - 1 ;	166:16:4988:4997	4917622	9	True				
ANR	4917963	UnaryOperationExpression	- 1		4917622	0					
ANR	4917964	UnaryOperator	-		4917622	0					
ANR	4917965	PrimaryExpression	1		4917622	1					
ANR	4917966	ContinueStatement	continue ;	168:12:5025:5033	4917622	2	True				
ANR	4917967	ElseStatement	else		4917622	0					
ANR	4917968	IfStatement	"if ( ! strcmp ( line , ""Width"" ) )"		4917622	0					
ANR	4917969	Condition	"! strcmp ( line , ""Width"" )"	169:19:5054:5075	4917622	0	True				
ANR	4917970	UnaryOperationExpression	"! strcmp ( line , ""Width"" )"		4917622	0					
ANR	4917971	UnaryOperator	!		4917622	0					
ANR	4917972	CallExpression	"strcmp ( line , ""Width"" )"		4917622	1					
ANR	4917973	Callee	strcmp		4917622	0					
ANR	4917974	Identifier	strcmp		4917622	0					
ANR	4917975	ArgumentList	line		4917622	1					
ANR	4917976	Argument	line		4917622	0					
ANR	4917977	Identifier	line		4917622	0					
ANR	4917978	Argument	"""Width"""		4917622	1					
ANR	4917979	PrimaryExpression	"""Width"""		4917622	0					
ANR	4917980	CompoundStatement		60:43:1743:1743	4917622	1					
ANR	4917981	IfStatement	"if ( sscanf ( end , ""%d"" , & Width ) != 1 || Width <= 0 || Width > 0x4000 )"		4917622	0					
ANR	4917982	Condition	"sscanf ( end , ""%d"" , & Width ) != 1 || Width <= 0 || Width > 0x4000"	170:16:5096:5173	4917622	0	True				
ANR	4917983	OrExpression	"sscanf ( end , ""%d"" , & Width ) != 1 || Width <= 0 || Width > 0x4000"		4917622	0		||			
ANR	4917984	EqualityExpression	"sscanf ( end , ""%d"" , & Width ) != 1"		4917622	0		!=			
ANR	4917985	CallExpression	"sscanf ( end , ""%d"" , & Width )"		4917622	0					
ANR	4917986	Callee	sscanf		4917622	0					
ANR	4917987	Identifier	sscanf		4917622	0					
ANR	4917988	ArgumentList	end		4917622	1					
ANR	4917989	Argument	end		4917622	0					
ANR	4917990	Identifier	end		4917622	0					
ANR	4917991	Argument	"""%d"""		4917622	1					
ANR	4917992	PrimaryExpression	"""%d"""		4917622	0					
ANR	4917993	Argument	& Width		4917622	2					
ANR	4917994	UnaryOperationExpression	& Width		4917622	0					
ANR	4917995	UnaryOperator	&		4917622	0					
ANR	4917996	Identifier	Width		4917622	1					
ANR	4917997	PrimaryExpression	1		4917622	1					
ANR	4917998	OrExpression	Width <= 0 || Width > 0x4000		4917622	1		||			
ANR	4917999	RelationalExpression	Width <= 0		4917622	0		<=			
ANR	4918000	Identifier	Width		4917622	0					
ANR	4918001	PrimaryExpression	0		4917622	1					
ANR	4918002	RelationalExpression	Width > 0x4000		4917622	1		>			
ANR	4918003	Identifier	Width		4917622	0					
ANR	4918004	PrimaryExpression	0x4000		4917622	1					
ANR	4918005	CompoundStatement		63:18:1858:1858	4917622	1					
ANR	4918006	ExpressionStatement	"fprintf ( stderr , ""Invalid Width: %s\\n"" , end )"	173:16:5211:5254	4917622	0	True				
ANR	4918007	CallExpression	"fprintf ( stderr , ""Invalid Width: %s\\n"" , end )"		4917622	0					
ANR	4918008	Callee	fprintf		4917622	0					
ANR	4918009	Identifier	fprintf		4917622	0					
ANR	4918010	ArgumentList	stderr		4917622	1					
ANR	4918011	Argument	stderr		4917622	0					
ANR	4918012	Identifier	stderr		4917622	0					
ANR	4918013	Argument	"""Invalid Width: %s\\n"""		4917622	1					
ANR	4918014	PrimaryExpression	"""Invalid Width: %s\\n"""		4917622	0					
ANR	4918015	Argument	end		4917622	2					
ANR	4918016	Identifier	end		4917622	0					
ANR	4918017	ReturnStatement	return - 1 ;	174:16:5272:5281	4917622	1	True				
ANR	4918018	UnaryOperationExpression	- 1		4917622	0					
ANR	4918019	UnaryOperator	-		4917622	0					
ANR	4918020	PrimaryExpression	1		4917622	1					
ANR	4918021	ElseStatement	else		4917622	0					
ANR	4918022	IfStatement	"if ( ! strcmp ( line , ""Height"" ) )"		4917622	0					
ANR	4918023	Condition	"! strcmp ( line , ""Height"" )"	176:19:5316:5338	4917622	0	True				
ANR	4918024	UnaryOperationExpression	"! strcmp ( line , ""Height"" )"		4917622	0					
ANR	4918025	UnaryOperator	!		4917622	0					
ANR	4918026	CallExpression	"strcmp ( line , ""Height"" )"		4917622	1					
ANR	4918027	Callee	strcmp		4917622	0					
ANR	4918028	Identifier	strcmp		4917622	0					
ANR	4918029	ArgumentList	line		4917622	1					
ANR	4918030	Argument	line		4917622	0					
ANR	4918031	Identifier	line		4917622	0					
ANR	4918032	Argument	"""Height"""		4917622	1					
ANR	4918033	PrimaryExpression	"""Height"""		4917622	0					
ANR	4918034	CompoundStatement		67:44:2006:2006	4917622	1					
ANR	4918035	IfStatement	"if ( sscanf ( end , ""%d"" , & Height ) != 1 || Height <= 0 || Height > 0x4000 )"		4917622	0					
ANR	4918036	Condition	"sscanf ( end , ""%d"" , & Height ) != 1 || Height <= 0 || Height > 0x4000"	177:16:5359:5439	4917622	0	True				
ANR	4918037	OrExpression	"sscanf ( end , ""%d"" , & Height ) != 1 || Height <= 0 || Height > 0x4000"		4917622	0		||			
ANR	4918038	EqualityExpression	"sscanf ( end , ""%d"" , & Height ) != 1"		4917622	0		!=			
ANR	4918039	CallExpression	"sscanf ( end , ""%d"" , & Height )"		4917622	0					
ANR	4918040	Callee	sscanf		4917622	0					
ANR	4918041	Identifier	sscanf		4917622	0					
ANR	4918042	ArgumentList	end		4917622	1					
ANR	4918043	Argument	end		4917622	0					
ANR	4918044	Identifier	end		4917622	0					
ANR	4918045	Argument	"""%d"""		4917622	1					
ANR	4918046	PrimaryExpression	"""%d"""		4917622	0					
ANR	4918047	Argument	& Height		4917622	2					
ANR	4918048	UnaryOperationExpression	& Height		4917622	0					
ANR	4918049	UnaryOperator	&		4917622	0					
ANR	4918050	Identifier	Height		4917622	1					
ANR	4918051	PrimaryExpression	1		4917622	1					
ANR	4918052	OrExpression	Height <= 0 || Height > 0x4000		4917622	1		||			
ANR	4918053	RelationalExpression	Height <= 0		4917622	0		<=			
ANR	4918054	Identifier	Height		4917622	0					
ANR	4918055	PrimaryExpression	0		4917622	1					
ANR	4918056	RelationalExpression	Height > 0x4000		4917622	1		>			
ANR	4918057	Identifier	Height		4917622	0					
ANR	4918058	PrimaryExpression	0x4000		4917622	1					
ANR	4918059	CompoundStatement		70:18:2124:2124	4917622	1					
ANR	4918060	ExpressionStatement	"fprintf ( stderr , ""Invalid Height: %s\\n"" , end )"	180:16:5477:5521	4917622	0	True				
ANR	4918061	CallExpression	"fprintf ( stderr , ""Invalid Height: %s\\n"" , end )"		4917622	0					
ANR	4918062	Callee	fprintf		4917622	0					
ANR	4918063	Identifier	fprintf		4917622	0					
ANR	4918064	ArgumentList	stderr		4917622	1					
ANR	4918065	Argument	stderr		4917622	0					
ANR	4918066	Identifier	stderr		4917622	0					
ANR	4918067	Argument	"""Invalid Height: %s\\n"""		4917622	1					
ANR	4918068	PrimaryExpression	"""Invalid Height: %s\\n"""		4917622	0					
ANR	4918069	Argument	end		4917622	2					
ANR	4918070	Identifier	end		4917622	0					
ANR	4918071	ReturnStatement	return - 1 ;	181:16:5539:5548	4917622	1	True				
ANR	4918072	UnaryOperationExpression	- 1		4917622	0					
ANR	4918073	UnaryOperator	-		4917622	0					
ANR	4918074	PrimaryExpression	1		4917622	1					
ANR	4918075	ElseStatement	else		4917622	0					
ANR	4918076	IfStatement	"if ( ! strcmp ( line , ""Thresholds"" ) )"		4917622	0					
ANR	4918077	Condition	"! strcmp ( line , ""Thresholds"" )"	183:19:5583:5609	4917622	0	True				
ANR	4918078	UnaryOperationExpression	"! strcmp ( line , ""Thresholds"" )"		4917622	0					
ANR	4918079	UnaryOperator	!		4917622	0					
ANR	4918080	CallExpression	"strcmp ( line , ""Thresholds"" )"		4917622	1					
ANR	4918081	Callee	strcmp		4917622	0					
ANR	4918082	Identifier	strcmp		4917622	0					
ANR	4918083	ArgumentList	line		4917622	1					
ANR	4918084	Argument	line		4917622	0					
ANR	4918085	Identifier	line		4917622	0					
ANR	4918086	Argument	"""Thresholds"""		4917622	1					
ANR	4918087	PrimaryExpression	"""Thresholds"""		4917622	0					
ANR	4918088	CompoundStatement		80:12:2496:2517	4917622	1					
ANR	4918089	IdentifierDeclStatement	uint ignore ;	184:12:5626:5637	4917622	0	True				
ANR	4918090	IdentifierDecl	ignore		4917622	0					
ANR	4918091	IdentifierDeclType	uint		4917622	0					
ANR	4918092	Identifier	ignore		4917622	1					
ANR	4918093	IdentifierDeclStatement	uint num_levels = 256 ;	185:12:5651:5672	4917622	1	True				
ANR	4918094	IdentifierDecl	num_levels = 256		4917622	0					
ANR	4918095	IdentifierDeclType	uint		4917622	0					
ANR	4918096	Identifier	num_levels		4917622	1					
ANR	4918097	AssignmentExpression	num_levels = 256		4917622	2		=			
ANR	4918098	Identifier	num_levels		4917622	0					
ANR	4918099	PrimaryExpression	256		4917622	1					
ANR	4918100	IdentifierDeclStatement	uint num_bits = Width * Height ;	186:12:5686:5716	4917622	2	True				
ANR	4918101	IdentifierDecl	num_bits = Width * Height		4917622	0					
ANR	4918102	IdentifierDeclType	uint		4917622	0					
ANR	4918103	Identifier	num_bits		4917622	1					
ANR	4918104	AssignmentExpression	num_bits = Width * Height		4917622	2		=			
ANR	4918105	Identifier	num_bits		4917622	0					
ANR	4918106	MultiplicativeExpression	Width * Height		4917622	1		*			
ANR	4918107	Identifier	Width		4917622	0					
ANR	4918108	Identifier	Height		4917622	1					
ANR	4918109	IdentifierDeclStatement	char * eol = end + strlen ( end ) ;	187:12:5730:5759	4917622	3	True				
ANR	4918110	IdentifierDecl	* eol = end + strlen ( end )		4917622	0					
ANR	4918111	IdentifierDeclType	char *		4917622	0					
ANR	4918112	Identifier	eol		4917622	1					
ANR	4918113	AssignmentExpression	* eol = end + strlen ( end )		4917622	2		=			
ANR	4918114	Identifier	eol		4917622	0					
ANR	4918115	AdditiveExpression	end + strlen ( end )		4917622	1		+			
ANR	4918116	Identifier	end		4917622	0					
ANR	4918117	CallExpression	strlen ( end )		4917622	1					
ANR	4918118	Callee	strlen		4917622	0					
ANR	4918119	Identifier	strlen		4917622	0					
ANR	4918120	ArgumentList	end		4917622	1					
ANR	4918121	Argument	end		4917622	0					
ANR	4918122	Identifier	end		4917622	0					
ANR	4918123	IdentifierDeclStatement	stream_cursor_read r ;	188:12:5797:5817	4917622	4	True				
ANR	4918124	IdentifierDecl	r		4917622	0					
ANR	4918125	IdentifierDeclType	stream_cursor_read		4917622	0					
ANR	4918126	Identifier	r		4917622	1					
ANR	4918127	IdentifierDeclStatement	stream_cursor_write w ;	189:12:5831:5852	4917622	5	True				
ANR	4918128	IdentifierDecl	w		4917622	0					
ANR	4918129	IdentifierDeclType	stream_cursor_write		4917622	0					
ANR	4918130	Identifier	w		4917622	1					
ANR	4918131	IfStatement	if ( Width < 0 || Height < 0 )		4917622	6					
ANR	4918132	Condition	Width < 0 || Height < 0	191:16:5871:5893	4917622	0	True				
ANR	4918133	OrExpression	Width < 0 || Height < 0		4917622	0		||			
ANR	4918134	RelationalExpression	Width < 0		4917622	0		<			
ANR	4918135	Identifier	Width		4917622	0					
ANR	4918136	PrimaryExpression	0		4917622	1					
ANR	4918137	RelationalExpression	Height < 0		4917622	1		<			
ANR	4918138	Identifier	Height		4917622	0					
ANR	4918139	PrimaryExpression	0		4917622	1					
ANR	4918140	CompoundStatement		82:41:2561:2561	4917622	1					
ANR	4918141	ExpressionStatement	"fprintf ( stderr , ""Width and Height must precede Thresholds.\\n"" )"	192:16:5914:5976	4917622	0	True				
ANR	4918142	CallExpression	"fprintf ( stderr , ""Width and Height must precede Thresholds.\\n"" )"		4917622	0					
ANR	4918143	Callee	fprintf		4917622	0					
ANR	4918144	Identifier	fprintf		4917622	0					
ANR	4918145	ArgumentList	stderr		4917622	1					
ANR	4918146	Argument	stderr		4917622	0					
ANR	4918147	Identifier	stderr		4917622	0					
ANR	4918148	Argument	"""Width and Height must precede Thresholds.\\n"""		4917622	1					
ANR	4918149	PrimaryExpression	"""Width and Height must precede Thresholds.\\n"""		4917622	0					
ANR	4918150	ReturnStatement	return - 1 ;	193:16:5994:6003	4917622	1	True				
ANR	4918151	UnaryOperationExpression	- 1		4917622	0					
ANR	4918152	UnaryOperator	-		4917622	0					
ANR	4918153	PrimaryExpression	1		4917622	1					
ANR	4918154	ExpressionStatement	phtr -> num_levels = num_levels	195:12:6031:6060	4917622	7	True				
ANR	4918155	AssignmentExpression	phtr -> num_levels = num_levels		4917622	0		=			
ANR	4918156	PtrMemberAccess	phtr -> num_levels		4917622	0					
ANR	4918157	Identifier	phtr		4917622	0					
ANR	4918158	Identifier	num_levels		4917622	1					
ANR	4918159	Identifier	num_levels		4917622	1					
ANR	4918160	ExpressionStatement	phtr -> levels = malloc ( num_levels * sizeof ( * phtr -> levels ) )	196:12:6074:6147	4917622	8	True				
ANR	4918161	AssignmentExpression	phtr -> levels = malloc ( num_levels * sizeof ( * phtr -> levels ) )		4917622	0		=			
ANR	4918162	PtrMemberAccess	phtr -> levels		4917622	0					
ANR	4918163	Identifier	phtr		4917622	0					
ANR	4918164	Identifier	levels		4917622	1					
ANR	4918165	CallExpression	malloc ( num_levels * sizeof ( * phtr -> levels ) )		4917622	1					
ANR	4918166	Callee	malloc		4917622	0					
ANR	4918167	Identifier	malloc		4917622	0					
ANR	4918168	ArgumentList	num_levels * sizeof ( * phtr -> levels )		4917622	1					
ANR	4918169	Argument	num_levels * sizeof ( * phtr -> levels )		4917622	0					
ANR	4918170	MultiplicativeExpression	num_levels * sizeof ( * phtr -> levels )		4917622	0		*			
ANR	4918171	Identifier	num_levels		4917622	0					
ANR	4918172	SizeofExpression	sizeof ( * phtr -> levels )		4917622	1					
ANR	4918173	Sizeof	sizeof		4917622	0					
ANR	4918174	UnaryOperationExpression	* phtr -> levels		4917622	1					
ANR	4918175	UnaryOperator	*		4917622	0					
ANR	4918176	PtrMemberAccess	phtr -> levels		4917622	1					
ANR	4918177	Identifier	phtr		4917622	0					
ANR	4918178	Identifier	levels		4917622	1					
ANR	4918179	ExpressionStatement	phtr -> bit_data = malloc ( num_bits * sizeof ( ushort ) )	198:12:6161:6227	4917622	9	True				
ANR	4918180	AssignmentExpression	phtr -> bit_data = malloc ( num_bits * sizeof ( ushort ) )		4917622	0		=			
ANR	4918181	PtrMemberAccess	phtr -> bit_data		4917622	0					
ANR	4918182	Identifier	phtr		4917622	0					
ANR	4918183	Identifier	bit_data		4917622	1					
ANR	4918184	CallExpression	malloc ( num_bits * sizeof ( ushort ) )		4917622	1					
ANR	4918185	Callee	malloc		4917622	0					
ANR	4918186	Identifier	malloc		4917622	0					
ANR	4918187	ArgumentList	num_bits * sizeof ( ushort )		4917622	1					
ANR	4918188	Argument	num_bits * sizeof ( ushort )		4917622	0					
ANR	4918189	MultiplicativeExpression	num_bits * sizeof ( ushort )		4917622	0		*			
ANR	4918190	Identifier	num_bits		4917622	0					
ANR	4918191	SizeofExpression	sizeof ( ushort )		4917622	1					
ANR	4918192	Sizeof	sizeof		4917622	0					
ANR	4918193	SizeofOperand	ushort		4917622	1					
ANR	4918194	ExpressionStatement	Thresholds = malloc ( num_bits )	200:12:6241:6270	4917622	10	True				
ANR	4918195	AssignmentExpression	Thresholds = malloc ( num_bits )		4917622	0		=			
ANR	4918196	Identifier	Thresholds		4917622	0					
ANR	4918197	CallExpression	malloc ( num_bits )		4917622	1					
ANR	4918198	Callee	malloc		4917622	0					
ANR	4918199	Identifier	malloc		4917622	0					
ANR	4918200	ArgumentList	num_bits		4917622	1					
ANR	4918201	Argument	num_bits		4917622	0					
ANR	4918202	Identifier	num_bits		4917622	0					
ANR	4918203	ExpressionStatement	( void ) s_AXD_init_inline ( & ss )	201:12:6284:6312	4917622	11	True				
ANR	4918204	CastExpression	( void ) s_AXD_init_inline ( & ss )		4917622	0					
ANR	4918205	CastTarget	void		4917622	0					
ANR	4918206	CallExpression	s_AXD_init_inline ( & ss )		4917622	1					
ANR	4918207	Callee	s_AXD_init_inline		4917622	0					
ANR	4918208	Identifier	s_AXD_init_inline		4917622	0					
ANR	4918209	ArgumentList	& ss		4917622	1					
ANR	4918210	Argument	& ss		4917622	0					
ANR	4918211	UnaryOperationExpression	& ss		4917622	0					
ANR	4918212	UnaryOperator	&		4917622	0					
ANR	4918213	Identifier	ss		4917622	1					
ANR	4918214	ExpressionStatement	r . ptr = ( const byte * ) eol	202:12:6326:6351	4917622	12	True				
ANR	4918215	AssignmentExpression	r . ptr = ( const byte * ) eol		4917622	0		=			
ANR	4918216	MemberAccess	r . ptr		4917622	0					
ANR	4918217	Identifier	r		4917622	0					
ANR	4918218	Identifier	ptr		4917622	1					
ANR	4918219	CastExpression	( const byte * ) eol		4917622	1					
ANR	4918220	CastTarget	const byte *		4917622	0					
ANR	4918221	Identifier	eol		4917622	1					
ANR	4918222	ExpressionStatement	r . limit = ( const byte * ) eol + strlen ( eol + 1 )	203:12:6365:6410	4917622	13	True				
ANR	4918223	AssignmentExpression	r . limit = ( const byte * ) eol + strlen ( eol + 1 )		4917622	0		=			
ANR	4918224	MemberAccess	r . limit		4917622	0					
ANR	4918225	Identifier	r		4917622	0					
ANR	4918226	Identifier	limit		4917622	1					
ANR	4918227	AdditiveExpression	( const byte * ) eol + strlen ( eol + 1 )		4917622	1		+			
ANR	4918228	CastExpression	( const byte * ) eol		4917622	0					
ANR	4918229	CastTarget	const byte *		4917622	0					
ANR	4918230	Identifier	eol		4917622	1					
ANR	4918231	CallExpression	strlen ( eol + 1 )		4917622	1					
ANR	4918232	Callee	strlen		4917622	0					
ANR	4918233	Identifier	strlen		4917622	0					
ANR	4918234	ArgumentList	eol + 1		4917622	1					
ANR	4918235	Argument	eol + 1		4917622	0					
ANR	4918236	AdditiveExpression	eol + 1		4917622	0		+			
ANR	4918237	Identifier	eol		4917622	0					
ANR	4918238	PrimaryExpression	1		4917622	1					
ANR	4918239	ExpressionStatement	w . ptr = Thresholds - 1	204:12:6424:6446	4917622	14	True				
ANR	4918240	AssignmentExpression	w . ptr = Thresholds - 1		4917622	0		=			
ANR	4918241	MemberAccess	w . ptr		4917622	0					
ANR	4918242	Identifier	w		4917622	0					
ANR	4918243	Identifier	ptr		4917622	1					
ANR	4918244	AdditiveExpression	Thresholds - 1		4917622	1		-			
ANR	4918245	Identifier	Thresholds		4917622	0					
ANR	4918246	PrimaryExpression	1		4917622	1					
ANR	4918247	ExpressionStatement	w . limit = w . ptr + num_bits	205:12:6460:6486	4917622	15	True				
ANR	4918248	AssignmentExpression	w . limit = w . ptr + num_bits		4917622	0		=			
ANR	4918249	MemberAccess	w . limit		4917622	0					
ANR	4918250	Identifier	w		4917622	0					
ANR	4918251	Identifier	limit		4917622	1					
ANR	4918252	AdditiveExpression	w . ptr + num_bits		4917622	1		+			
ANR	4918253	MemberAccess	w . ptr		4917622	0					
ANR	4918254	Identifier	w		4917622	0					
ANR	4918255	Identifier	ptr		4917622	1					
ANR	4918256	Identifier	num_bits		4917622	1					
ANR	4918257	ExpressionStatement	"s_AXD_template . process ( ( stream_state * ) & ss , & r , & w , true )"	206:12:6500:6557	4917622	16	True				
ANR	4918258	CallExpression	"s_AXD_template . process ( ( stream_state * ) & ss , & r , & w , true )"		4917622	0					
ANR	4918259	Callee	s_AXD_template . process		4917622	0					
ANR	4918260	MemberAccess	s_AXD_template . process		4917622	0					
ANR	4918261	Identifier	s_AXD_template		4917622	0					
ANR	4918262	Identifier	process		4917622	1					
ANR	4918263	ArgumentList	( stream_state * ) & ss		4917622	1					
ANR	4918264	Argument	( stream_state * ) & ss		4917622	0					
ANR	4918265	CastExpression	( stream_state * ) & ss		4917622	0					
ANR	4918266	CastTarget	stream_state *		4917622	0					
ANR	4918267	UnaryOperationExpression	& ss		4917622	1					
ANR	4918268	UnaryOperator	&		4917622	0					
ANR	4918269	Identifier	ss		4917622	1					
ANR	4918270	Argument	& r		4917622	1					
ANR	4918271	UnaryOperationExpression	& r		4917622	0					
ANR	4918272	UnaryOperator	&		4917622	0					
ANR	4918273	Identifier	r		4917622	1					
ANR	4918274	Argument	& w		4917622	2					
ANR	4918275	UnaryOperationExpression	& w		4917622	0					
ANR	4918276	UnaryOperator	&		4917622	0					
ANR	4918277	Identifier	w		4917622	1					
ANR	4918278	Argument	true		4917622	3					
ANR	4918279	Identifier	true		4917622	0					
ANR	4918280	ExpressionStatement	str = ( char * ) r . ptr + 1	207:12:6571:6594	4917622	17	True				
ANR	4918281	AssignmentExpression	str = ( char * ) r . ptr + 1		4917622	0		=			
ANR	4918282	Identifier	str		4917622	0					
ANR	4918283	AdditiveExpression	( char * ) r . ptr + 1		4917622	1		+			
ANR	4918284	CastExpression	( char * ) r . ptr		4917622	0					
ANR	4918285	CastTarget	char *		4917622	0					
ANR	4918286	MemberAccess	r . ptr		4917622	1					
ANR	4918287	Identifier	r		4917622	0					
ANR	4918288	Identifier	ptr		4917622	1					
ANR	4918289	PrimaryExpression	1		4917622	1					
ANR	4918290	BreakStatement	break ;	208:12:6608:6613	4917622	18	True				
ANR	4918291	IfStatement	if ( rname == 0 )		4917622	8					
ANR	4918292	Condition	rname == 0	213:8:6680:6689	4917622	0	True				
ANR	4918293	EqualityExpression	rname == 0		4917622	0		==			
ANR	4918294	Identifier	rname		4917622	0					
ANR	4918295	PrimaryExpression	0		4917622	1					
ANR	4918296	ReturnStatement	return 1 ;	214:8:6700:6708	4917622	1	True				
ANR	4918297	PrimaryExpression	1		4917622	0					
ANR	4918298	IfStatement	if ( HalftoneType < 0 )		4917622	9					
ANR	4918299	Condition	HalftoneType < 0	215:8:6744:6759	4917622	0	True				
ANR	4918300	RelationalExpression	HalftoneType < 0		4917622	0		<			
ANR	4918301	Identifier	HalftoneType		4917622	0					
ANR	4918302	PrimaryExpression	0		4917622	1					
ANR	4918303	ExpressionStatement	"fprintf ( stderr , ""HalftoneType not found.\\n"" )"	216:8:6770:6814	4917622	1	True				
ANR	4918304	CallExpression	"fprintf ( stderr , ""HalftoneType not found.\\n"" )"		4917622	0					
ANR	4918305	Callee	fprintf		4917622	0					
ANR	4918306	Identifier	fprintf		4917622	0					
ANR	4918307	ArgumentList	stderr		4917622	1					
ANR	4918308	Argument	stderr		4917622	0					
ANR	4918309	Identifier	stderr		4917622	0					
ANR	4918310	Argument	"""HalftoneType not found.\\n"""		4917622	1					
ANR	4918311	PrimaryExpression	"""HalftoneType not found.\\n"""		4917622	0					
ANR	4918312	IfStatement	if ( Width < 0 )		4917622	10					
ANR	4918313	Condition	Width < 0	217:8:6824:6832	4917622	0	True				
ANR	4918314	RelationalExpression	Width < 0		4917622	0		<			
ANR	4918315	Identifier	Width		4917622	0					
ANR	4918316	PrimaryExpression	0		4917622	1					
ANR	4918317	ExpressionStatement	"fprintf ( stderr , ""Width not found.\\n"" )"	218:8:6843:6880	4917622	1	True				
ANR	4918318	CallExpression	"fprintf ( stderr , ""Width not found.\\n"" )"		4917622	0					
ANR	4918319	Callee	fprintf		4917622	0					
ANR	4918320	Identifier	fprintf		4917622	0					
ANR	4918321	ArgumentList	stderr		4917622	1					
ANR	4918322	Argument	stderr		4917622	0					
ANR	4918323	Identifier	stderr		4917622	0					
ANR	4918324	Argument	"""Width not found.\\n"""		4917622	1					
ANR	4918325	PrimaryExpression	"""Width not found.\\n"""		4917622	0					
ANR	4918326	IfStatement	if ( Height < 0 )		4917622	11					
ANR	4918327	Condition	Height < 0	219:8:6890:6899	4917622	0	True				
ANR	4918328	RelationalExpression	Height < 0		4917622	0		<			
ANR	4918329	Identifier	Height		4917622	0					
ANR	4918330	PrimaryExpression	0		4917622	1					
ANR	4918331	ExpressionStatement	"fprintf ( stderr , ""Height not found.\\n"" )"	220:8:6910:6948	4917622	1	True				
ANR	4918332	CallExpression	"fprintf ( stderr , ""Height not found.\\n"" )"		4917622	0					
ANR	4918333	Callee	fprintf		4917622	0					
ANR	4918334	Identifier	fprintf		4917622	0					
ANR	4918335	ArgumentList	stderr		4917622	1					
ANR	4918336	Argument	stderr		4917622	0					
ANR	4918337	Identifier	stderr		4917622	0					
ANR	4918338	Argument	"""Height not found.\\n"""		4917622	1					
ANR	4918339	PrimaryExpression	"""Height not found.\\n"""		4917622	0					
ANR	4918340	IfStatement	if ( Thresholds == 0 )		4917622	12					
ANR	4918341	Condition	Thresholds == 0	221:8:6958:6972	4917622	0	True				
ANR	4918342	EqualityExpression	Thresholds == 0		4917622	0		==			
ANR	4918343	Identifier	Thresholds		4917622	0					
ANR	4918344	PrimaryExpression	0		4917622	1					
ANR	4918345	ExpressionStatement	"fprintf ( stderr , ""Thresholds not found.\\n"" )"	222:8:6983:7025	4917622	1	True				
ANR	4918346	CallExpression	"fprintf ( stderr , ""Thresholds not found.\\n"" )"		4917622	0					
ANR	4918347	Callee	fprintf		4917622	0					
ANR	4918348	Identifier	fprintf		4917622	0					
ANR	4918349	ArgumentList	stderr		4917622	1					
ANR	4918350	Argument	stderr		4917622	0					
ANR	4918351	Identifier	stderr		4917622	0					
ANR	4918352	Argument	"""Thresholds not found.\\n"""		4917622	1					
ANR	4918353	PrimaryExpression	"""Thresholds not found.\\n"""		4917622	0					
ANR	4918354	IfStatement	if ( rname == 0 || Thresholds == 0 )		4917622	13					
ANR	4918355	Condition	rname == 0 || Thresholds == 0	223:8:7035:7063	4917622	0	True				
ANR	4918356	OrExpression	rname == 0 || Thresholds == 0		4917622	0		||			
ANR	4918357	EqualityExpression	rname == 0		4917622	0		==			
ANR	4918358	Identifier	rname		4917622	0					
ANR	4918359	PrimaryExpression	0		4917622	1					
ANR	4918360	EqualityExpression	Thresholds == 0		4917622	1		==			
ANR	4918361	Identifier	Thresholds		4917622	0					
ANR	4918362	PrimaryExpression	0		4917622	1					
ANR	4918363	ReturnStatement	return - 1 ;	224:8:7074:7083	4917622	1	True				
ANR	4918364	UnaryOperationExpression	- 1		4917622	0					
ANR	4918365	UnaryOperator	-		4917622	0					
ANR	4918366	PrimaryExpression	1		4917622	1					
ANR	4918367	ExpressionStatement	phtr -> rname = rname	225:4:7089:7108	4917622	14	True				
ANR	4918368	AssignmentExpression	phtr -> rname = rname		4917622	0		=			
ANR	4918369	PtrMemberAccess	phtr -> rname		4917622	0					
ANR	4918370	Identifier	phtr		4917622	0					
ANR	4918371	Identifier	rname		4917622	1					
ANR	4918372	Identifier	rname		4917622	1					
ANR	4918373	ExpressionStatement	phtr -> HalftoneType = HalftoneType	226:4:7114:7147	4917622	15	True				
ANR	4918374	AssignmentExpression	phtr -> HalftoneType = HalftoneType		4917622	0		=			
ANR	4918375	PtrMemberAccess	phtr -> HalftoneType		4917622	0					
ANR	4918376	Identifier	phtr		4917622	0					
ANR	4918377	Identifier	HalftoneType		4917622	1					
ANR	4918378	Identifier	HalftoneType		4917622	1					
ANR	4918379	ExpressionStatement	phtr -> Width = Width	227:4:7153:7172	4917622	16	True				
ANR	4918380	AssignmentExpression	phtr -> Width = Width		4917622	0		=			
ANR	4918381	PtrMemberAccess	phtr -> Width		4917622	0					
ANR	4918382	Identifier	phtr		4917622	0					
ANR	4918383	Identifier	Width		4917622	1					
ANR	4918384	Identifier	Width		4917622	1					
ANR	4918385	ExpressionStatement	phtr -> Height = Height	228:4:7178:7199	4917622	17	True				
ANR	4918386	AssignmentExpression	phtr -> Height = Height		4917622	0		=			
ANR	4918387	PtrMemberAccess	phtr -> Height		4917622	0					
ANR	4918388	Identifier	phtr		4917622	0					
ANR	4918389	Identifier	Height		4917622	1					
ANR	4918390	Identifier	Height		4917622	1					
ANR	4918391	ExpressionStatement	* pThresholds = Thresholds	229:4:7205:7230	4917622	18	True				
ANR	4918392	AssignmentExpression	* pThresholds = Thresholds		4917622	0		=			
ANR	4918393	UnaryOperationExpression	* pThresholds		4917622	0					
ANR	4918394	UnaryOperator	*		4917622	0					
ANR	4918395	Identifier	pThresholds		4917622	1					
ANR	4918396	Identifier	Thresholds		4917622	1					
ANR	4918397	ExpressionStatement	* pcont = str	230:4:7236:7248	4917622	19	True				
ANR	4918398	AssignmentExpression	* pcont = str		4917622	0		=			
ANR	4918399	UnaryOperationExpression	* pcont		4917622	0					
ANR	4918400	UnaryOperator	*		4917622	0					
ANR	4918401	Identifier	pcont		4917622	1					
ANR	4918402	Identifier	str		4917622	1					
ANR	4918403	ReturnStatement	return 0 ;	231:4:7254:7262	4917622	20	True				
ANR	4918404	PrimaryExpression	0		4917622	0					
ANR	4918405	ReturnType	static int		4917622	1					
ANR	4918406	Identifier	parse_halftone		4917622	2					
ANR	4918407	ParameterList	"gx_device_halftone_resource_t * phtr , byte * * pThresholds , char * * pprefix , char * * pcont"		4917622	3					
ANR	4918408	Parameter	gx_device_halftone_resource_t * phtr	108:15:3232:3266	4917622	0	True				
ANR	4918409	ParameterType	gx_device_halftone_resource_t *		4917622	0					
ANR	4918410	Identifier	phtr		4917622	1					
ANR	4918411	Parameter	byte * * pThresholds	108:52:3269:3286	4917622	1	True				
ANR	4918412	ParameterType	byte * *		4917622	0					
ANR	4918413	Identifier	pThresholds		4917622	1					
ANR	4918414	Parameter	char * * pprefix	109:15:3304:3317	4917622	2	True				
ANR	4918415	ParameterType	char * *		4917622	0					
ANR	4918416	Identifier	pprefix		4917622	1					
ANR	4918417	Parameter	char * * pcont	109:31:3320:3331	4917622	3	True				
ANR	4918418	ParameterType	char * *		4917622	0					
ANR	4918419	Identifier	pcont		4917622	1					
ANR	4918420	CFGEntryNode	ENTRY		4917622		True				
ANR	4918421	CFGExitNode	EXIT		4917622		True				
ANR	4918422	Symbol	eol		4917622						
ANR	4918423	Symbol	rname		4917622						
ANR	4918424	Symbol	prefix		4917622						
ANR	4918425	Symbol	phtr -> bit_data		4917622						
ANR	4918426	Symbol	parse_line		4917622						
ANR	4918427	Symbol	strchr		4917622						
ANR	4918428	Symbol	* line		4917622						
ANR	4918429	Symbol	& ss		4917622						
ANR	4918430	Symbol	* phtr		4917622						
ANR	4918431	Symbol	& str		4917622						
ANR	4918432	Symbol	strlen		4917622						
ANR	4918433	Symbol	* pcont		4917622						
ANR	4918434	Symbol	terminator		4917622						
ANR	4918435	Symbol	strcmp		4917622						
ANR	4918436	Symbol	* pprefix		4917622						
ANR	4918437	Symbol	Thresholds		4917622						
ANR	4918438	Symbol	phtr -> levels		4917622						
ANR	4918439	Symbol	r . limit		4917622						
ANR	4918440	Symbol	& HalftoneType		4917622						
ANR	4918441	Symbol	w . ptr		4917622						
ANR	4918442	Symbol	stderr		4917622						
ANR	4918443	Symbol	phtr -> Width		4917622						
ANR	4918444	Symbol	str		4917622						
ANR	4918445	Symbol	w . limit		4917622						
ANR	4918446	Symbol	sscanf		4917622						
ANR	4918447	Symbol	true		4917622						
ANR	4918448	Symbol	HalftoneType		4917622						
ANR	4918449	Symbol	* * phtr		4917622						
ANR	4918450	Symbol	* end		4917622						
ANR	4918451	Symbol	phtr		4917622						
ANR	4918452	Symbol	pThresholds		4917622						
ANR	4918453	Symbol	s_AXD_template		4917622						
ANR	4918454	Symbol	line		4917622						
ANR	4918455	Symbol	* phtr -> levels		4917622						
ANR	4918456	Symbol	pprefix		4917622						
ANR	4918457	Symbol	& Height		4917622						
ANR	4918458	Symbol	phtr -> Height		4917622						
ANR	4918459	Symbol	phtr -> HalftoneType		4917622						
ANR	4918460	Symbol	ignore		4917622						
ANR	4918461	Symbol	Height		4917622						
ANR	4918462	Symbol	end		4917622						
ANR	4918463	Symbol	phtr -> num_levels		4917622						
ANR	4918464	Symbol	Width		4917622						
ANR	4918465	Symbol	ss		4917622						
ANR	4918466	Symbol	malloc		4917622						
ANR	4918467	Symbol	& line		4917622						
ANR	4918468	Symbol	* pThresholds		4917622						
ANR	4918469	Symbol	& Width		4917622						
ANR	4918470	Symbol	r		4917622						
ANR	4918471	Symbol	phtr -> rname		4917622						
ANR	4918472	Symbol	w		4917622						
ANR	4918473	Symbol	r . ptr		4917622						
ANR	4918474	Symbol	& r		4917622						
ANR	4918475	Symbol	pcont		4917622						
ANR	4918476	Symbol	num_bits		4917622						
ANR	4918477	Symbol	& w		4917622						
ANR	4918478	Symbol	num_levels		4917622						
ANR	4918479	Function	write_halftone	235:0:7308:8603							
ANR	4918480	FunctionDef	"write_halftone (FILE * out , gx_device_halftone_resource_t * phtr , const char * prefix , int index)"		4918479	0					
ANR	4918481	CompoundStatement		238:0:7428:8603	4918479	0					
ANR	4918482	IdentifierDeclStatement	int num_bits = phtr -> Width * phtr -> Height ;	239:4:7434:7475	4918479	0	True				
ANR	4918483	IdentifierDecl	num_bits = phtr -> Width * phtr -> Height		4918479	0					
ANR	4918484	IdentifierDeclType	int		4918479	0					
ANR	4918485	Identifier	num_bits		4918479	1					
ANR	4918486	AssignmentExpression	num_bits = phtr -> Width * phtr -> Height		4918479	2		=			
ANR	4918487	Identifier	num_bits		4918479	0					
ANR	4918488	MultiplicativeExpression	phtr -> Width * phtr -> Height		4918479	1		*			
ANR	4918489	PtrMemberAccess	phtr -> Width		4918479	0					
ANR	4918490	Identifier	phtr		4918479	0					
ANR	4918491	Identifier	Width		4918479	1					
ANR	4918492	PtrMemberAccess	phtr -> Height		4918479	1					
ANR	4918493	Identifier	phtr		4918479	0					
ANR	4918494	Identifier	Height		4918479	1					
ANR	4918495	IdentifierDeclStatement	int i ;	240:4:7481:7486	4918479	1	True				
ANR	4918496	IdentifierDecl	i		4918479	0					
ANR	4918497	IdentifierDeclType	int		4918479	0					
ANR	4918498	Identifier	i		4918479	1					
ANR	4918499	ExpressionStatement	"fputs ( ""\\n/* "" , out )"	243:4:7530:7549	4918479	2	True				
ANR	4918500	CallExpression	"fputs ( ""\\n/* "" , out )"		4918479	0					
ANR	4918501	Callee	fputs		4918479	0					
ANR	4918502	Identifier	fputs		4918479	0					
ANR	4918503	ArgumentList	"""\\n/* """		4918479	1					
ANR	4918504	Argument	"""\\n/* """		4918479	0					
ANR	4918505	PrimaryExpression	"""\\n/* """		4918479	0					
ANR	4918506	Argument	out		4918479	1					
ANR	4918507	Identifier	out		4918479	0					
ANR	4918508	IfStatement	if ( prefix )		4918479	3					
ANR	4918509	Condition	prefix	244:8:7559:7564	4918479	0	True				
ANR	4918510	Identifier	prefix		4918479	0					
ANR	4918511	ExpressionStatement	"fprintf ( out , ""%s."" , prefix )"	245:8:7575:7602	4918479	1	True				
ANR	4918512	CallExpression	"fprintf ( out , ""%s."" , prefix )"		4918479	0					
ANR	4918513	Callee	fprintf		4918479	0					
ANR	4918514	Identifier	fprintf		4918479	0					
ANR	4918515	ArgumentList	out		4918479	1					
ANR	4918516	Argument	out		4918479	0					
ANR	4918517	Identifier	out		4918479	0					
ANR	4918518	Argument	"""%s."""		4918479	1					
ANR	4918519	PrimaryExpression	"""%s."""		4918479	0					
ANR	4918520	Argument	prefix		4918479	2					
ANR	4918521	Identifier	prefix		4918479	0					
ANR	4918522	ExpressionStatement	"fprintf ( out , ""%s */\\n"" , phtr -> rname )"	246:4:7608:7644	4918479	4	True				
ANR	4918523	CallExpression	"fprintf ( out , ""%s */\\n"" , phtr -> rname )"		4918479	0					
ANR	4918524	Callee	fprintf		4918479	0					
ANR	4918525	Identifier	fprintf		4918479	0					
ANR	4918526	ArgumentList	out		4918479	1					
ANR	4918527	Argument	out		4918479	0					
ANR	4918528	Identifier	out		4918479	0					
ANR	4918529	Argument	"""%s */\\n"""		4918479	1					
ANR	4918530	PrimaryExpression	"""%s */\\n"""		4918479	0					
ANR	4918531	Argument	phtr -> rname		4918479	2					
ANR	4918532	PtrMemberAccess	phtr -> rname		4918479	0					
ANR	4918533	Identifier	phtr		4918479	0					
ANR	4918534	Identifier	rname		4918479	1					
ANR	4918535	ExpressionStatement	"fprintf ( out , ""static const unsigned int levels_%d[] = {"" , index )"	249:4:7685:7749	4918479	5	True				
ANR	4918536	CallExpression	"fprintf ( out , ""static const unsigned int levels_%d[] = {"" , index )"		4918479	0					
ANR	4918537	Callee	fprintf		4918479	0					
ANR	4918538	Identifier	fprintf		4918479	0					
ANR	4918539	ArgumentList	out		4918479	1					
ANR	4918540	Argument	out		4918479	0					
ANR	4918541	Identifier	out		4918479	0					
ANR	4918542	Argument	"""static const unsigned int levels_%d[] = {"""		4918479	1					
ANR	4918543	PrimaryExpression	"""static const unsigned int levels_%d[] = {"""		4918479	0					
ANR	4918544	Argument	index		4918479	2					
ANR	4918545	Identifier	index		4918479	0					
ANR	4918546	ForStatement	for ( i = 0 ; i < phtr -> num_levels ; ++ i )		4918479	6					
ANR	4918547	ForInit	i = 0 ;	250:9:7760:7765	4918479	0	True				
ANR	4918548	AssignmentExpression	i = 0		4918479	0		=			
ANR	4918549	Identifier	i		4918479	0					
ANR	4918550	PrimaryExpression	0		4918479	1					
ANR	4918551	Condition	i < phtr -> num_levels	250:16:7767:7786	4918479	1	True				
ANR	4918552	RelationalExpression	i < phtr -> num_levels		4918479	0		<			
ANR	4918553	Identifier	i		4918479	0					
ANR	4918554	PtrMemberAccess	phtr -> num_levels		4918479	1					
ANR	4918555	Identifier	phtr		4918479	0					
ANR	4918556	Identifier	num_levels		4918479	1					
ANR	4918557	UnaryExpression	++ i	250:38:7789:7791	4918479	2	True				
ANR	4918558	IncDec	++		4918479	0					
ANR	4918559	Identifier	i		4918479	1					
ANR	4918560	CompoundStatement		13:43:365:365	4918479	3					
ANR	4918561	IfStatement	if ( i % 10 == 0 )		4918479	0					
ANR	4918562	Condition	i % 10 == 0	251:12:7808:7818	4918479	0	True				
ANR	4918563	EqualityExpression	i % 10 == 0		4918479	0		==			
ANR	4918564	MultiplicativeExpression	i % 10		4918479	0		%			
ANR	4918565	Identifier	i		4918479	0					
ANR	4918566	PrimaryExpression	10		4918479	1					
ANR	4918567	PrimaryExpression	0		4918479	1					
ANR	4918568	ExpressionStatement	"fputs ( ""\\n"" , out )"	252:12:7833:7849	4918479	1	True				
ANR	4918569	CallExpression	"fputs ( ""\\n"" , out )"		4918479	0					
ANR	4918570	Callee	fputs		4918479	0					
ANR	4918571	Identifier	fputs		4918479	0					
ANR	4918572	ArgumentList	"""\\n"""		4918479	1					
ANR	4918573	Argument	"""\\n"""		4918479	0					
ANR	4918574	PrimaryExpression	"""\\n"""		4918479	0					
ANR	4918575	Argument	out		4918479	1					
ANR	4918576	Identifier	out		4918479	0					
ANR	4918577	ExpressionStatement	"fprintf ( out , ""%5u,"" , phtr -> levels [ i ] )"	253:8:7859:7896	4918479	1	True				
ANR	4918578	CallExpression	"fprintf ( out , ""%5u,"" , phtr -> levels [ i ] )"		4918479	0					
ANR	4918579	Callee	fprintf		4918479	0					
ANR	4918580	Identifier	fprintf		4918479	0					
ANR	4918581	ArgumentList	out		4918479	1					
ANR	4918582	Argument	out		4918479	0					
ANR	4918583	Identifier	out		4918479	0					
ANR	4918584	Argument	"""%5u,"""		4918479	1					
ANR	4918585	PrimaryExpression	"""%5u,"""		4918479	0					
ANR	4918586	Argument	phtr -> levels [ i ]		4918479	2					
ANR	4918587	ArrayIndexing	phtr -> levels [ i ]		4918479	0					
ANR	4918588	PtrMemberAccess	phtr -> levels		4918479	0					
ANR	4918589	Identifier	phtr		4918479	0					
ANR	4918590	Identifier	levels		4918479	1					
ANR	4918591	Identifier	i		4918479	1					
ANR	4918592	ExpressionStatement	"fputs ( ""\\n0};\\n"" , out )"	255:4:7908:7929	4918479	7	True				
ANR	4918593	CallExpression	"fputs ( ""\\n0};\\n"" , out )"		4918479	0					
ANR	4918594	Callee	fputs		4918479	0					
ANR	4918595	Identifier	fputs		4918479	0					
ANR	4918596	ArgumentList	"""\\n0};\\n"""		4918479	1					
ANR	4918597	Argument	"""\\n0};\\n"""		4918479	0					
ANR	4918598	PrimaryExpression	"""\\n0};\\n"""		4918479	0					
ANR	4918599	Argument	out		4918479	1					
ANR	4918600	Identifier	out		4918479	0					
ANR	4918601	ExpressionStatement	"fprintf ( out , ""static const unsigned short bit_data_%d[] = {"" , index )"	258:4:7972:8040	4918479	8	True				
ANR	4918602	CallExpression	"fprintf ( out , ""static const unsigned short bit_data_%d[] = {"" , index )"		4918479	0					
ANR	4918603	Callee	fprintf		4918479	0					
ANR	4918604	Identifier	fprintf		4918479	0					
ANR	4918605	ArgumentList	out		4918479	1					
ANR	4918606	Argument	out		4918479	0					
ANR	4918607	Identifier	out		4918479	0					
ANR	4918608	Argument	"""static const unsigned short bit_data_%d[] = {"""		4918479	1					
ANR	4918609	PrimaryExpression	"""static const unsigned short bit_data_%d[] = {"""		4918479	0					
ANR	4918610	Argument	index		4918479	2					
ANR	4918611	Identifier	index		4918479	0					
ANR	4918612	ForStatement	for ( i = 0 ; i < num_bits ; ++ i )		4918479	9					
ANR	4918613	ForInit	i = 0 ;	259:9:8051:8056	4918479	0	True				
ANR	4918614	AssignmentExpression	i = 0		4918479	0		=			
ANR	4918615	Identifier	i		4918479	0					
ANR	4918616	PrimaryExpression	0		4918479	1					
ANR	4918617	Condition	i < num_bits	259:16:8058:8069	4918479	1	True				
ANR	4918618	RelationalExpression	i < num_bits		4918479	0		<			
ANR	4918619	Identifier	i		4918479	0					
ANR	4918620	Identifier	num_bits		4918479	1					
ANR	4918621	UnaryExpression	++ i	259:30:8072:8074	4918479	2	True				
ANR	4918622	IncDec	++		4918479	0					
ANR	4918623	Identifier	i		4918479	1					
ANR	4918624	CompoundStatement		22:35:648:648	4918479	3					
ANR	4918625	IfStatement	if ( i % 10 == 0 )		4918479	0					
ANR	4918626	Condition	i % 10 == 0	260:12:8091:8101	4918479	0	True				
ANR	4918627	EqualityExpression	i % 10 == 0		4918479	0		==			
ANR	4918628	MultiplicativeExpression	i % 10		4918479	0		%			
ANR	4918629	Identifier	i		4918479	0					
ANR	4918630	PrimaryExpression	10		4918479	1					
ANR	4918631	PrimaryExpression	0		4918479	1					
ANR	4918632	ExpressionStatement	"fputs ( ""\\n"" , out )"	261:12:8116:8132	4918479	1	True				
ANR	4918633	CallExpression	"fputs ( ""\\n"" , out )"		4918479	0					
ANR	4918634	Callee	fputs		4918479	0					
ANR	4918635	Identifier	fputs		4918479	0					
ANR	4918636	ArgumentList	"""\\n"""		4918479	1					
ANR	4918637	Argument	"""\\n"""		4918479	0					
ANR	4918638	PrimaryExpression	"""\\n"""		4918479	0					
ANR	4918639	Argument	out		4918479	1					
ANR	4918640	Identifier	out		4918479	0					
ANR	4918641	ExpressionStatement	"fprintf ( out , ""%5u,"" , ( ( const ushort * ) phtr -> bit_data ) [ i ] )"	262:8:8142:8199	4918479	1	True				
ANR	4918642	CallExpression	"fprintf ( out , ""%5u,"" , ( ( const ushort * ) phtr -> bit_data ) [ i ] )"		4918479	0					
ANR	4918643	Callee	fprintf		4918479	0					
ANR	4918644	Identifier	fprintf		4918479	0					
ANR	4918645	ArgumentList	out		4918479	1					
ANR	4918646	Argument	out		4918479	0					
ANR	4918647	Identifier	out		4918479	0					
ANR	4918648	Argument	"""%5u,"""		4918479	1					
ANR	4918649	PrimaryExpression	"""%5u,"""		4918479	0					
ANR	4918650	Argument	( ( const ushort * ) phtr -> bit_data ) [ i ]		4918479	2					
ANR	4918651	ArrayIndexing	( ( const ushort * ) phtr -> bit_data ) [ i ]		4918479	0					
ANR	4918652	CastExpression	( const ushort * ) phtr -> bit_data		4918479	0					
ANR	4918653	CastTarget	const ushort *		4918479	0					
ANR	4918654	PtrMemberAccess	phtr -> bit_data		4918479	1					
ANR	4918655	Identifier	phtr		4918479	0					
ANR	4918656	Identifier	bit_data		4918479	1					
ANR	4918657	Identifier	i		4918479	1					
ANR	4918658	ExpressionStatement	"fputs ( ""\\n0};\\n"" , out )"	264:4:8211:8232	4918479	10	True				
ANR	4918659	CallExpression	"fputs ( ""\\n0};\\n"" , out )"		4918479	0					
ANR	4918660	Callee	fputs		4918479	0					
ANR	4918661	Identifier	fputs		4918479	0					
ANR	4918662	ArgumentList	"""\\n0};\\n"""		4918479	1					
ANR	4918663	Argument	"""\\n0};\\n"""		4918479	0					
ANR	4918664	PrimaryExpression	"""\\n0};\\n"""		4918479	0					
ANR	4918665	Argument	out		4918479	1					
ANR	4918666	Identifier	out		4918479	0					
ANR	4918667	ExpressionStatement	"fprintf ( out , ""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"" , index , phtr -> rname , phtr -> HalftoneType , phtr -> Width , phtr -> Height , phtr -> num_levels , index , index , ht_order_procs_short . bit_data_elt_size )"	267:4:8280:8586	4918479	11	True				
ANR	4918668	CallExpression	"fprintf ( out , ""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"" , index , phtr -> rname , phtr -> HalftoneType , phtr -> Width , phtr -> Height , phtr -> num_levels , index , index , ht_order_procs_short . bit_data_elt_size )"		4918479	0					
ANR	4918669	Callee	fprintf		4918479	0					
ANR	4918670	Identifier	fprintf		4918479	0					
ANR	4918671	ArgumentList	out		4918479	1					
ANR	4918672	Argument	out		4918479	0					
ANR	4918673	Identifier	out		4918479	0					
ANR	4918674	Argument	"""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"""		4918479	1					
ANR	4918675	PrimaryExpression	"""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"""		4918479	0					
ANR	4918676	Argument	index		4918479	2					
ANR	4918677	Identifier	index		4918479	0					
ANR	4918678	Argument	phtr -> rname		4918479	3					
ANR	4918679	PtrMemberAccess	phtr -> rname		4918479	0					
ANR	4918680	Identifier	phtr		4918479	0					
ANR	4918681	Identifier	rname		4918479	1					
ANR	4918682	Argument	phtr -> HalftoneType		4918479	4					
ANR	4918683	PtrMemberAccess	phtr -> HalftoneType		4918479	0					
ANR	4918684	Identifier	phtr		4918479	0					
ANR	4918685	Identifier	HalftoneType		4918479	1					
ANR	4918686	Argument	phtr -> Width		4918479	5					
ANR	4918687	PtrMemberAccess	phtr -> Width		4918479	0					
ANR	4918688	Identifier	phtr		4918479	0					
ANR	4918689	Identifier	Width		4918479	1					
ANR	4918690	Argument	phtr -> Height		4918479	6					
ANR	4918691	PtrMemberAccess	phtr -> Height		4918479	0					
ANR	4918692	Identifier	phtr		4918479	0					
ANR	4918693	Identifier	Height		4918479	1					
ANR	4918694	Argument	phtr -> num_levels		4918479	7					
ANR	4918695	PtrMemberAccess	phtr -> num_levels		4918479	0					
ANR	4918696	Identifier	phtr		4918479	0					
ANR	4918697	Identifier	num_levels		4918479	1					
ANR	4918698	Argument	index		4918479	8					
ANR	4918699	Identifier	index		4918479	0					
ANR	4918700	Argument	index		4918479	9					
ANR	4918701	Identifier	index		4918479	0					
ANR	4918702	Argument	ht_order_procs_short . bit_data_elt_size		4918479	10					
ANR	4918703	MemberAccess	ht_order_procs_short . bit_data_elt_size		4918479	0					
ANR	4918704	Identifier	ht_order_procs_short		4918479	0					
ANR	4918705	Identifier	bit_data_elt_size		4918479	1					
ANR	4918706	ReturnStatement	return 0 ;	272:4:8593:8601	4918479	12	True				
ANR	4918707	PrimaryExpression	0		4918479	0					
ANR	4918708	ReturnType	static int		4918479	1					
ANR	4918709	Identifier	write_halftone		4918479	2					
ANR	4918710	ParameterList	"FILE * out , gx_device_halftone_resource_t * phtr , const char * prefix , int index"		4918479	3					
ANR	4918711	Parameter	FILE * out	236:15:7334:7342	4918479	0	True				
ANR	4918712	ParameterType	FILE *		4918479	0					
ANR	4918713	Identifier	out		4918479	1					
ANR	4918714	Parameter	gx_device_halftone_resource_t * phtr	236:26:7345:7379	4918479	1	True				
ANR	4918715	ParameterType	gx_device_halftone_resource_t *		4918479	0					
ANR	4918716	Identifier	phtr		4918479	1					
ANR	4918717	Parameter	const char * prefix	237:15:7397:7414	4918479	2	True				
ANR	4918718	ParameterType	const char *		4918479	0					
ANR	4918719	Identifier	prefix		4918479	1					
ANR	4918720	Parameter	int index	237:35:7417:7425	4918479	3	True				
ANR	4918721	ParameterType	int		4918479	0					
ANR	4918722	Identifier	index		4918479	1					
ANR	4918723	CFGEntryNode	ENTRY		4918479		True				
ANR	4918724	CFGExitNode	EXIT		4918479		True				
ANR	4918725	Symbol	phtr		4918479						
ANR	4918726	Symbol	* phtr -> bit_data		4918479						
ANR	4918727	Symbol	phtr -> levels		4918479						
ANR	4918728	Symbol	prefix		4918479						
ANR	4918729	Symbol	* phtr -> levels		4918479						
ANR	4918730	Symbol	phtr -> bit_data		4918479						
ANR	4918731	Symbol	index		4918479						
ANR	4918732	Symbol	i		4918479						
ANR	4918733	Symbol	ht_order_procs_short		4918479						
ANR	4918734	Symbol	* phtr		4918479						
ANR	4918735	Symbol	out		4918479						
ANR	4918736	Symbol	phtr -> Width		4918479						
ANR	4918737	Symbol	phtr -> Height		4918479						
ANR	4918738	Symbol	* i		4918479						
ANR	4918739	Symbol	phtr -> HalftoneType		4918479						
ANR	4918740	Symbol	phtr -> rname		4918479						
ANR	4918741	Symbol	ht_order_procs_short . bit_data_elt_size		4918479						
ANR	4918742	Symbol	* * phtr		4918479						
ANR	4918743	Symbol	phtr -> num_levels		4918479						
ANR	4918744	Symbol	num_bits		4918479						
ANR	4918745	Function	main	276:0:8625:10855							
ANR	4918746	FunctionDef	"main (int argc , char * argv [ ])"		4918745	0					
ANR	4918747	CompoundStatement		278:0:8658:10855	4918745	0					
ANR	4918748	IdentifierDeclStatement	char * iname ;	279:4:8664:8675	4918745	0	True				
ANR	4918749	IdentifierDecl	* iname		4918745	0					
ANR	4918750	IdentifierDeclType	char *		4918745	0					
ANR	4918751	Identifier	iname		4918745	1					
ANR	4918752	IdentifierDeclStatement	FILE * in ;	280:4:8681:8689	4918745	1	True				
ANR	4918753	IdentifierDecl	* in		4918745	0					
ANR	4918754	IdentifierDeclType	FILE *		4918745	0					
ANR	4918755	Identifier	in		4918745	1					
ANR	4918756	IdentifierDeclStatement	char * oname ;	281:4:8695:8706	4918745	2	True				
ANR	4918757	IdentifierDecl	* oname		4918745	0					
ANR	4918758	IdentifierDeclType	char *		4918745	0					
ANR	4918759	Identifier	oname		4918745	1					
ANR	4918760	IdentifierDeclStatement	FILE * out ;	282:4:8712:8721	4918745	3	True				
ANR	4918761	IdentifierDecl	* out		4918745	0					
ANR	4918762	IdentifierDeclType	FILE *		4918745	0					
ANR	4918763	Identifier	out		4918745	1					
ANR	4918764	IdentifierDeclStatement	int code ;	283:4:8727:8735	4918745	4	True				
ANR	4918765	IdentifierDecl	code		4918745	0					
ANR	4918766	IdentifierDeclType	int		4918745	0					
ANR	4918767	Identifier	code		4918745	1					
ANR	4918768	IdentifierDeclStatement	char * cont ;	284:4:8741:8751	4918745	5	True				
ANR	4918769	IdentifierDecl	* cont		4918745	0					
ANR	4918770	IdentifierDeclType	char *		4918745	0					
ANR	4918771	Identifier	cont		4918745	1					
ANR	4918772	IdentifierDeclStatement	char * line ;	285:4:8757:8767	4918745	6	True				
ANR	4918773	IdentifierDecl	* line		4918745	0					
ANR	4918774	IdentifierDeclType	char *		4918745	0					
ANR	4918775	Identifier	line		4918745	1					
ANR	4918776	IdentifierDeclStatement	gx_device_halftone_resource_t res ;	286:4:8773:8806	4918745	7	True				
ANR	4918777	IdentifierDecl	res		4918745	0					
ANR	4918778	IdentifierDeclType	gx_device_halftone_resource_t		4918745	0					
ANR	4918779	Identifier	res		4918745	1					
ANR	4918780	IdentifierDeclStatement	char * prefix = 0 ;	287:4:8812:8828	4918745	8	True				
ANR	4918781	IdentifierDecl	* prefix = 0		4918745	0					
ANR	4918782	IdentifierDeclType	char *		4918745	0					
ANR	4918783	Identifier	prefix		4918745	1					
ANR	4918784	AssignmentExpression	* prefix = 0		4918745	2		=			
ANR	4918785	Identifier	prefix		4918745	0					
ANR	4918786	PrimaryExpression	0		4918745	1					
ANR	4918787	IdentifierDeclStatement	byte * Thresholds ;	288:4:8834:8850	4918745	9	True				
ANR	4918788	IdentifierDecl	* Thresholds		4918745	0					
ANR	4918789	IdentifierDeclType	byte *		4918745	0					
ANR	4918790	Identifier	Thresholds		4918745	1					
ANR	4918791	IdentifierDeclStatement	gx_ht_order order ;	289:4:8856:8873	4918745	10	True				
ANR	4918792	IdentifierDecl	order		4918745	0					
ANR	4918793	IdentifierDeclType	gx_ht_order		4918745	0					
ANR	4918794	Identifier	order		4918745	1					
ANR	4918795	IdentifierDeclStatement	"int index , i ;"	290:4:8879:8891	4918745	11	True				
ANR	4918796	IdentifierDecl	index		4918745	0					
ANR	4918797	IdentifierDeclType	int		4918745	0					
ANR	4918798	Identifier	index		4918745	1					
ANR	4918799	IdentifierDecl	i		4918745	1					
ANR	4918800	IdentifierDeclType	int		4918745	0					
ANR	4918801	Identifier	i		4918745	1					
ANR	4918802	IfStatement	if ( argc != 3 )		4918745	12					
ANR	4918803	Condition	argc != 3	292:8:8902:8910	4918745	0	True				
ANR	4918804	EqualityExpression	argc != 3		4918745	0		!=			
ANR	4918805	Identifier	argc		4918745	0					
ANR	4918806	PrimaryExpression	3		4918745	1					
ANR	4918807	CompoundStatement		15:19:254:254	4918745	1					
ANR	4918808	ExpressionStatement	"fprintf ( stderr , ""Usage: genht ht_res.ps ht_data.c\\n"" )"	293:8:8923:8976	4918745	0	True				
ANR	4918809	CallExpression	"fprintf ( stderr , ""Usage: genht ht_res.ps ht_data.c\\n"" )"		4918745	0					
ANR	4918810	Callee	fprintf		4918745	0					
ANR	4918811	Identifier	fprintf		4918745	0					
ANR	4918812	ArgumentList	stderr		4918745	1					
ANR	4918813	Argument	stderr		4918745	0					
ANR	4918814	Identifier	stderr		4918745	0					
ANR	4918815	Argument	"""Usage: genht ht_res.ps ht_data.c\\n"""		4918745	1					
ANR	4918816	PrimaryExpression	"""Usage: genht ht_res.ps ht_data.c\\n"""		4918745	0					
ANR	4918817	ExpressionStatement	exit ( 1 )	294:8:8986:8993	4918745	1	True				
ANR	4918818	CallExpression	exit ( 1 )		4918745	0					
ANR	4918819	Callee	exit		4918745	0					
ANR	4918820	Identifier	exit		4918745	0					
ANR	4918821	ArgumentList	1		4918745	1					
ANR	4918822	Argument	1		4918745	0					
ANR	4918823	PrimaryExpression	1		4918745	0					
ANR	4918824	ExpressionStatement	iname = argv [ 1 ]	296:4:9005:9020	4918745	13	True				
ANR	4918825	AssignmentExpression	iname = argv [ 1 ]		4918745	0		=			
ANR	4918826	Identifier	iname		4918745	0					
ANR	4918827	ArrayIndexing	argv [ 1 ]		4918745	1					
ANR	4918828	Identifier	argv		4918745	0					
ANR	4918829	PrimaryExpression	1		4918745	1					
ANR	4918830	ExpressionStatement	oname = argv [ 2 ]	297:4:9026:9041	4918745	14	True				
ANR	4918831	AssignmentExpression	oname = argv [ 2 ]		4918745	0		=			
ANR	4918832	Identifier	oname		4918745	0					
ANR	4918833	ArrayIndexing	argv [ 2 ]		4918745	1					
ANR	4918834	Identifier	argv		4918745	0					
ANR	4918835	PrimaryExpression	2		4918745	1					
ANR	4918836	ExpressionStatement	"in = fopen ( iname , ""rb"" )"	298:4:9047:9070	4918745	15	True				
ANR	4918837	AssignmentExpression	"in = fopen ( iname , ""rb"" )"		4918745	0		=			
ANR	4918838	Identifier	in		4918745	0					
ANR	4918839	CallExpression	"fopen ( iname , ""rb"" )"		4918745	1					
ANR	4918840	Callee	fopen		4918745	0					
ANR	4918841	Identifier	fopen		4918745	0					
ANR	4918842	ArgumentList	iname		4918745	1					
ANR	4918843	Argument	iname		4918745	0					
ANR	4918844	Identifier	iname		4918745	0					
ANR	4918845	Argument	"""rb"""		4918745	1					
ANR	4918846	PrimaryExpression	"""rb"""		4918745	0					
ANR	4918847	IfStatement	if ( in == 0 )		4918745	16					
ANR	4918848	Condition	in == 0	299:8:9080:9086	4918745	0	True				
ANR	4918849	EqualityExpression	in == 0		4918745	0		==			
ANR	4918850	Identifier	in		4918745	0					
ANR	4918851	PrimaryExpression	0		4918745	1					
ANR	4918852	CompoundStatement		22:17:430:430	4918745	1					
ANR	4918853	ExpressionStatement	"in = fopen ( iname , ""r"" )"	300:8:9099:9121	4918745	0	True				
ANR	4918854	AssignmentExpression	"in = fopen ( iname , ""r"" )"		4918745	0		=			
ANR	4918855	Identifier	in		4918745	0					
ANR	4918856	CallExpression	"fopen ( iname , ""r"" )"		4918745	1					
ANR	4918857	Callee	fopen		4918745	0					
ANR	4918858	Identifier	fopen		4918745	0					
ANR	4918859	ArgumentList	iname		4918745	1					
ANR	4918860	Argument	iname		4918745	0					
ANR	4918861	Identifier	iname		4918745	0					
ANR	4918862	Argument	"""r"""		4918745	1					
ANR	4918863	PrimaryExpression	"""r"""		4918745	0					
ANR	4918864	IfStatement	if ( in == 0 )		4918745	1					
ANR	4918865	Condition	in == 0	301:12:9135:9141	4918745	0	True				
ANR	4918866	EqualityExpression	in == 0		4918745	0		==			
ANR	4918867	Identifier	in		4918745	0					
ANR	4918868	PrimaryExpression	0		4918745	1					
ANR	4918869	CompoundStatement		24:21:485:485	4918745	1					
ANR	4918870	ExpressionStatement	"fprintf ( stderr , ""Can't read %s.\\n"" , iname )"	302:12:9158:9200	4918745	0	True				
ANR	4918871	CallExpression	"fprintf ( stderr , ""Can't read %s.\\n"" , iname )"		4918745	0					
ANR	4918872	Callee	fprintf		4918745	0					
ANR	4918873	Identifier	fprintf		4918745	0					
ANR	4918874	ArgumentList	stderr		4918745	1					
ANR	4918875	Argument	stderr		4918745	0					
ANR	4918876	Identifier	stderr		4918745	0					
ANR	4918877	Argument	"""Can't read %s.\\n"""		4918745	1					
ANR	4918878	PrimaryExpression	"""Can't read %s.\\n"""		4918745	0					
ANR	4918879	Argument	iname		4918745	2					
ANR	4918880	Identifier	iname		4918745	0					
ANR	4918881	ExpressionStatement	exit ( 1 )	303:12:9214:9221	4918745	1	True				
ANR	4918882	CallExpression	exit ( 1 )		4918745	0					
ANR	4918883	Callee	exit		4918745	0					
ANR	4918884	Identifier	exit		4918745	0					
ANR	4918885	ArgumentList	1		4918745	1					
ANR	4918886	Argument	1		4918745	0					
ANR	4918887	PrimaryExpression	1		4918745	0					
ANR	4918888	ExpressionStatement	"cont = read_file ( in , iname )"	306:4:9243:9270	4918745	17	True				
ANR	4918889	AssignmentExpression	"cont = read_file ( in , iname )"		4918745	0		=			
ANR	4918890	Identifier	cont		4918745	0					
ANR	4918891	CallExpression	"read_file ( in , iname )"		4918745	1					
ANR	4918892	Callee	read_file		4918745	0					
ANR	4918893	Identifier	read_file		4918745	0					
ANR	4918894	ArgumentList	in		4918745	1					
ANR	4918895	Argument	in		4918745	0					
ANR	4918896	Identifier	in		4918745	0					
ANR	4918897	Argument	iname		4918745	1					
ANR	4918898	Identifier	iname		4918745	0					
ANR	4918899	IfStatement	if ( cont == 0 )		4918745	18					
ANR	4918900	Condition	cont == 0	307:8:9280:9288	4918745	0	True				
ANR	4918901	EqualityExpression	cont == 0		4918745	0		==			
ANR	4918902	Identifier	cont		4918745	0					
ANR	4918903	PrimaryExpression	0		4918745	1					
ANR	4918904	ExpressionStatement	exit ( 1 )	308:8:9299:9306	4918745	1	True				
ANR	4918905	CallExpression	exit ( 1 )		4918745	0					
ANR	4918906	Callee	exit		4918745	0					
ANR	4918907	Identifier	exit		4918745	0					
ANR	4918908	ArgumentList	1		4918745	1					
ANR	4918909	Argument	1		4918745	0					
ANR	4918910	PrimaryExpression	1		4918745	0					
ANR	4918911	ExpressionStatement	fclose ( in )	309:4:9312:9322	4918745	19	True				
ANR	4918912	CallExpression	fclose ( in )		4918745	0					
ANR	4918913	Callee	fclose		4918745	0					
ANR	4918914	Identifier	fclose		4918745	0					
ANR	4918915	ArgumentList	in		4918745	1					
ANR	4918916	Argument	in		4918745	0					
ANR	4918917	Identifier	in		4918745	0					
ANR	4918918	ExpressionStatement	"out = fopen ( oname , ""w"" )"	310:4:9328:9351	4918745	20	True				
ANR	4918919	AssignmentExpression	"out = fopen ( oname , ""w"" )"		4918745	0		=			
ANR	4918920	Identifier	out		4918745	0					
ANR	4918921	CallExpression	"fopen ( oname , ""w"" )"		4918745	1					
ANR	4918922	Callee	fopen		4918745	0					
ANR	4918923	Identifier	fopen		4918745	0					
ANR	4918924	ArgumentList	oname		4918745	1					
ANR	4918925	Argument	oname		4918745	0					
ANR	4918926	Identifier	oname		4918745	0					
ANR	4918927	Argument	"""w"""		4918745	1					
ANR	4918928	PrimaryExpression	"""w"""		4918745	0					
ANR	4918929	IfStatement	if ( out == 0 )		4918745	21					
ANR	4918930	Condition	out == 0	311:8:9361:9368	4918745	0	True				
ANR	4918931	EqualityExpression	out == 0		4918745	0		==			
ANR	4918932	Identifier	out		4918745	0					
ANR	4918933	PrimaryExpression	0		4918745	1					
ANR	4918934	CompoundStatement		34:18:712:712	4918745	1					
ANR	4918935	ExpressionStatement	"fprintf ( stderr , ""Can't open %s for output.\\n"" , oname )"	312:8:9381:9434	4918745	0	True				
ANR	4918936	CallExpression	"fprintf ( stderr , ""Can't open %s for output.\\n"" , oname )"		4918745	0					
ANR	4918937	Callee	fprintf		4918745	0					
ANR	4918938	Identifier	fprintf		4918745	0					
ANR	4918939	ArgumentList	stderr		4918745	1					
ANR	4918940	Argument	stderr		4918745	0					
ANR	4918941	Identifier	stderr		4918745	0					
ANR	4918942	Argument	"""Can't open %s for output.\\n"""		4918745	1					
ANR	4918943	PrimaryExpression	"""Can't open %s for output.\\n"""		4918745	0					
ANR	4918944	Argument	oname		4918745	2					
ANR	4918945	Identifier	oname		4918745	0					
ANR	4918946	ExpressionStatement	exit ( 1 )	313:8:9444:9451	4918745	1	True				
ANR	4918947	CallExpression	exit ( 1 )		4918745	0					
ANR	4918948	Callee	exit		4918745	0					
ANR	4918949	Identifier	exit		4918745	0					
ANR	4918950	ArgumentList	1		4918745	1					
ANR	4918951	Argument	1		4918745	0					
ANR	4918952	PrimaryExpression	1		4918745	0					
ANR	4918953	ExpressionStatement	"fprintf ( out , ""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"" , oname , iname )"	315:4:9463:9577	4918745	22	True				
ANR	4918954	CallExpression	"fprintf ( out , ""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"" , oname , iname )"		4918745	0					
ANR	4918955	Callee	fprintf		4918745	0					
ANR	4918956	Identifier	fprintf		4918745	0					
ANR	4918957	ArgumentList	out		4918745	1					
ANR	4918958	Argument	out		4918745	0					
ANR	4918959	Identifier	out		4918745	0					
ANR	4918960	Argument	"""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"""		4918745	1					
ANR	4918961	PrimaryExpression	"""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"""		4918745	0					
ANR	4918962	Argument	oname		4918745	2					
ANR	4918963	Identifier	oname		4918745	0					
ANR	4918964	Argument	iname		4918745	3					
ANR	4918965	Identifier	iname		4918745	0					
ANR	4918966	WhileStatement	"while ( parse_line ( & cont , & line ) && line [ 0 ] == '%' )"		4918745	23					
ANR	4918967	Condition	"parse_line ( & cont , & line ) && line [ 0 ] == '%'"	317:11:9643:9684	4918745	0	True				
ANR	4918968	AndExpression	"parse_line ( & cont , & line ) && line [ 0 ] == '%'"		4918745	0		&&			
ANR	4918969	CallExpression	"parse_line ( & cont , & line )"		4918745	0					
ANR	4918970	Callee	parse_line		4918745	0					
ANR	4918971	Identifier	parse_line		4918745	0					
ANR	4918972	ArgumentList	& cont		4918745	1					
ANR	4918973	Argument	& cont		4918745	0					
ANR	4918974	UnaryOperationExpression	& cont		4918745	0					
ANR	4918975	UnaryOperator	&		4918745	0					
ANR	4918976	Identifier	cont		4918745	1					
ANR	4918977	Argument	& line		4918745	1					
ANR	4918978	UnaryOperationExpression	& line		4918745	0					
ANR	4918979	UnaryOperator	&		4918745	0					
ANR	4918980	Identifier	line		4918745	1					
ANR	4918981	EqualityExpression	line [ 0 ] == '%'		4918745	1		==			
ANR	4918982	ArrayIndexing	line [ 0 ]		4918745	0					
ANR	4918983	Identifier	line		4918745	0					
ANR	4918984	PrimaryExpression	0		4918745	1					
ANR	4918985	PrimaryExpression	'%'		4918745	1					
ANR	4918986	IfStatement	if ( line [ 1 ] != '!' )		4918745	1					
ANR	4918987	Condition	line [ 1 ] != '!'	318:12:9699:9712	4918745	0	True				
ANR	4918988	EqualityExpression	line [ 1 ] != '!'		4918745	0		!=			
ANR	4918989	ArrayIndexing	line [ 1 ]		4918745	0					
ANR	4918990	Identifier	line		4918745	0					
ANR	4918991	PrimaryExpression	1		4918745	1					
ANR	4918992	PrimaryExpression	'!'		4918745	1					
ANR	4918993	ExpressionStatement	"fprintf ( out , "" * %s\\n"" , line + 1 )"	319:12:9727:9760	4918745	1	True				
ANR	4918994	CallExpression	"fprintf ( out , "" * %s\\n"" , line + 1 )"		4918745	0					
ANR	4918995	Callee	fprintf		4918745	0					
ANR	4918996	Identifier	fprintf		4918745	0					
ANR	4918997	ArgumentList	out		4918745	1					
ANR	4918998	Argument	out		4918745	0					
ANR	4918999	Identifier	out		4918745	0					
ANR	4919000	Argument	""" * %s\\n"""		4918745	1					
ANR	4919001	PrimaryExpression	""" * %s\\n"""		4918745	0					
ANR	4919002	Argument	line + 1		4918745	2					
ANR	4919003	AdditiveExpression	line + 1		4918745	0		+			
ANR	4919004	Identifier	line		4918745	0					
ANR	4919005	PrimaryExpression	1		4918745	1					
ANR	4919006	ExpressionStatement	cont [ - 1 ] = '\\n'	320:4:9766:9781	4918745	24	True				
ANR	4919007	AssignmentExpression	cont [ - 1 ] = '\\n'		4918745	0		=			
ANR	4919008	ArrayIndexing	cont [ - 1 ]		4918745	0					
ANR	4919009	Identifier	cont		4918745	0					
ANR	4919010	UnaryOperationExpression	- 1		4918745	1					
ANR	4919011	UnaryOperator	-		4918745	0					
ANR	4919012	PrimaryExpression	1		4918745	1					
ANR	4919013	PrimaryExpression	'\\n'		4918745	1					
ANR	4919014	ExpressionStatement	cont = line	321:4:9787:9798	4918745	25	True				
ANR	4919015	AssignmentExpression	cont = line		4918745	0		=			
ANR	4919016	Identifier	cont		4918745	0					
ANR	4919017	Identifier	line		4918745	1					
ANR	4919018	ExpressionStatement	"fputs ( "" */\\n#include \\""gxdhtres.h\\""\\n"" , out )"	322:4:9804:9848	4918745	26	True				
ANR	4919019	CallExpression	"fputs ( "" */\\n#include \\""gxdhtres.h\\""\\n"" , out )"		4918745	0					
ANR	4919020	Callee	fputs		4918745	0					
ANR	4919021	Identifier	fputs		4918745	0					
ANR	4919022	ArgumentList	""" */\\n#include \\""gxdhtres.h\\""\\n"""		4918745	1					
ANR	4919023	Argument	""" */\\n#include \\""gxdhtres.h\\""\\n"""		4918745	0					
ANR	4919024	PrimaryExpression	""" */\\n#include \\""gxdhtres.h\\""\\n"""		4918745	0					
ANR	4919025	Argument	out		4918745	1					
ANR	4919026	Identifier	out		4918745	0					
ANR	4919027	ForStatement	"for ( index = 0 ; ( code = parse_halftone ( & res , & Thresholds , & prefix , & cont ) ) == 0 ; ++ index )"		4918745	27					
ANR	4919028	ForInit	index = 0 ;	323:9:9859:9868	4918745	0	True				
ANR	4919029	AssignmentExpression	index = 0		4918745	0		=			
ANR	4919030	Identifier	index		4918745	0					
ANR	4919031	PrimaryExpression	0		4918745	1					
ANR	4919032	Condition	"( code = parse_halftone ( & res , & Thresholds , & prefix , & cont ) ) == 0"	324:9:9879:9941	4918745	1	True				
ANR	4919033	EqualityExpression	"( code = parse_halftone ( & res , & Thresholds , & prefix , & cont ) ) == 0"		4918745	0		==			
ANR	4919034	AssignmentExpression	"code = parse_halftone ( & res , & Thresholds , & prefix , & cont )"		4918745	0		=			
ANR	4919035	Identifier	code		4918745	0					
ANR	4919036	CallExpression	"parse_halftone ( & res , & Thresholds , & prefix , & cont )"		4918745	1					
ANR	4919037	Callee	parse_halftone		4918745	0					
ANR	4919038	Identifier	parse_halftone		4918745	0					
ANR	4919039	ArgumentList	& res		4918745	1					
ANR	4919040	Argument	& res		4918745	0					
ANR	4919041	UnaryOperationExpression	& res		4918745	0					
ANR	4919042	UnaryOperator	&		4918745	0					
ANR	4919043	Identifier	res		4918745	1					
ANR	4919044	Argument	& Thresholds		4918745	1					
ANR	4919045	UnaryOperationExpression	& Thresholds		4918745	0					
ANR	4919046	UnaryOperator	&		4918745	0					
ANR	4919047	Identifier	Thresholds		4918745	1					
ANR	4919048	Argument	& prefix		4918745	2					
ANR	4919049	UnaryOperationExpression	& prefix		4918745	0					
ANR	4919050	UnaryOperator	&		4918745	0					
ANR	4919051	Identifier	prefix		4918745	1					
ANR	4919052	Argument	& cont		4918745	3					
ANR	4919053	UnaryOperationExpression	& cont		4918745	0					
ANR	4919054	UnaryOperator	&		4918745	0					
ANR	4919055	Identifier	cont		4918745	1					
ANR	4919056	PrimaryExpression	0		4918745	1					
ANR	4919057	UnaryExpression	++ index	325:9:9953:9959	4918745	2	True				
ANR	4919058	IncDec	++		4918745	0					
ANR	4919059	Identifier	index		4918745	1					
ANR	4919060	CompoundStatement		48:18:1303:1303	4918745	3					
ANR	4919061	ExpressionStatement	order . width = res . Width	326:8:9972:9995	4918745	0	True				
ANR	4919062	AssignmentExpression	order . width = res . Width		4918745	0		=			
ANR	4919063	MemberAccess	order . width		4918745	0					
ANR	4919064	Identifier	order		4918745	0					
ANR	4919065	Identifier	width		4918745	1					
ANR	4919066	MemberAccess	res . Width		4918745	1					
ANR	4919067	Identifier	res		4918745	0					
ANR	4919068	Identifier	Width		4918745	1					
ANR	4919069	ExpressionStatement	order . num_levels = res . num_levels	327:8:10005:10038	4918745	1	True				
ANR	4919070	AssignmentExpression	order . num_levels = res . num_levels		4918745	0		=			
ANR	4919071	MemberAccess	order . num_levels		4918745	0					
ANR	4919072	Identifier	order		4918745	0					
ANR	4919073	Identifier	num_levels		4918745	1					
ANR	4919074	MemberAccess	res . num_levels		4918745	1					
ANR	4919075	Identifier	res		4918745	0					
ANR	4919076	Identifier	num_levels		4918745	1					
ANR	4919077	ExpressionStatement	order . levels = ( uint * ) res . levels	328:8:10048:10081	4918745	2	True				
ANR	4919078	AssignmentExpression	order . levels = ( uint * ) res . levels		4918745	0		=			
ANR	4919079	MemberAccess	order . levels		4918745	0					
ANR	4919080	Identifier	order		4918745	0					
ANR	4919081	Identifier	levels		4918745	1					
ANR	4919082	CastExpression	( uint * ) res . levels		4918745	1					
ANR	4919083	CastTarget	uint *		4918745	0					
ANR	4919084	MemberAccess	res . levels		4918745	1					
ANR	4919085	Identifier	res		4918745	0					
ANR	4919086	Identifier	levels		4918745	1					
ANR	4919087	ExpressionStatement	order . num_bits = res . Width * res . Height	329:8:10091:10130	4918745	3	True				
ANR	4919088	AssignmentExpression	order . num_bits = res . Width * res . Height		4918745	0		=			
ANR	4919089	MemberAccess	order . num_bits		4918745	0					
ANR	4919090	Identifier	order		4918745	0					
ANR	4919091	Identifier	num_bits		4918745	1					
ANR	4919092	MultiplicativeExpression	res . Width * res . Height		4918745	1		*			
ANR	4919093	MemberAccess	res . Width		4918745	0					
ANR	4919094	Identifier	res		4918745	0					
ANR	4919095	Identifier	Width		4918745	1					
ANR	4919096	MemberAccess	res . Height		4918745	1					
ANR	4919097	Identifier	res		4918745	0					
ANR	4919098	Identifier	Height		4918745	1					
ANR	4919099	ExpressionStatement	order . bit_data = ( void * ) res . bit_data	330:8:10140:10177	4918745	4	True				
ANR	4919100	AssignmentExpression	order . bit_data = ( void * ) res . bit_data		4918745	0		=			
ANR	4919101	MemberAccess	order . bit_data		4918745	0					
ANR	4919102	Identifier	order		4918745	0					
ANR	4919103	Identifier	bit_data		4918745	1					
ANR	4919104	CastExpression	( void * ) res . bit_data		4918745	1					
ANR	4919105	CastTarget	void *		4918745	0					
ANR	4919106	MemberAccess	res . bit_data		4918745	1					
ANR	4919107	Identifier	res		4918745	0					
ANR	4919108	Identifier	bit_data		4918745	1					
ANR	4919109	ExpressionStatement	"ht_order_procs_short . construct_order ( & order , Thresholds )"	331:8:10187:10243	4918745	5	True				
ANR	4919110	CallExpression	"ht_order_procs_short . construct_order ( & order , Thresholds )"		4918745	0					
ANR	4919111	Callee	ht_order_procs_short . construct_order		4918745	0					
ANR	4919112	MemberAccess	ht_order_procs_short . construct_order		4918745	0					
ANR	4919113	Identifier	ht_order_procs_short		4918745	0					
ANR	4919114	Identifier	construct_order		4918745	1					
ANR	4919115	ArgumentList	& order		4918745	1					
ANR	4919116	Argument	& order		4918745	0					
ANR	4919117	UnaryOperationExpression	& order		4918745	0					
ANR	4919118	UnaryOperator	&		4918745	0					
ANR	4919119	Identifier	order		4918745	1					
ANR	4919120	Argument	Thresholds		4918745	1					
ANR	4919121	Identifier	Thresholds		4918745	0					
ANR	4919122	ExpressionStatement	"write_halftone ( out , & res , prefix , index )"	332:8:10253:10293	4918745	6	True				
ANR	4919123	CallExpression	"write_halftone ( out , & res , prefix , index )"		4918745	0					
ANR	4919124	Callee	write_halftone		4918745	0					
ANR	4919125	Identifier	write_halftone		4918745	0					
ANR	4919126	ArgumentList	out		4918745	1					
ANR	4919127	Argument	out		4918745	0					
ANR	4919128	Identifier	out		4918745	0					
ANR	4919129	Argument	& res		4918745	1					
ANR	4919130	UnaryOperationExpression	& res		4918745	0					
ANR	4919131	UnaryOperator	&		4918745	0					
ANR	4919132	Identifier	res		4918745	1					
ANR	4919133	Argument	prefix		4918745	2					
ANR	4919134	Identifier	prefix		4918745	0					
ANR	4919135	Argument	index		4918745	3					
ANR	4919136	Identifier	index		4918745	0					
ANR	4919137	IfStatement	if ( prefix == 0 )		4918745	28					
ANR	4919138	Condition	prefix == 0	334:8:10309:10319	4918745	0	True				
ANR	4919139	EqualityExpression	prefix == 0		4918745	0		==			
ANR	4919140	Identifier	prefix		4918745	0					
ANR	4919141	PrimaryExpression	0		4918745	1					
ANR	4919142	ExpressionStatement	prefix = res . rname	335:8:10330:10348	4918745	1	True				
ANR	4919143	AssignmentExpression	prefix = res . rname		4918745	0		=			
ANR	4919144	Identifier	prefix		4918745	0					
ANR	4919145	MemberAccess	res . rname		4918745	1					
ANR	4919146	Identifier	res		4918745	0					
ANR	4919147	Identifier	rname		4918745	1					
ANR	4919148	ExpressionStatement	"fputs ( ""/* Check the prototype. */\\n"" , out )"	336:4:10354:10396	4918745	29	True				
ANR	4919149	CallExpression	"fputs ( ""/* Check the prototype. */\\n"" , out )"		4918745	0					
ANR	4919150	Callee	fputs		4918745	0					
ANR	4919151	Identifier	fputs		4918745	0					
ANR	4919152	ArgumentList	"""/* Check the prototype. */\\n"""		4918745	1					
ANR	4919153	Argument	"""/* Check the prototype. */\\n"""		4918745	0					
ANR	4919154	PrimaryExpression	"""/* Check the prototype. */\\n"""		4918745	0					
ANR	4919155	Argument	out		4918745	1					
ANR	4919156	Identifier	out		4918745	0					
ANR	4919157	ExpressionStatement	"fprintf ( out , ""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"" , prefix )"	337:4:10402:10469	4918745	30	True				
ANR	4919158	CallExpression	"fprintf ( out , ""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"" , prefix )"		4918745	0					
ANR	4919159	Callee	fprintf		4918745	0					
ANR	4919160	Identifier	fprintf		4918745	0					
ANR	4919161	ArgumentList	out		4918745	1					
ANR	4919162	Argument	out		4918745	0					
ANR	4919163	Identifier	out		4918745	0					
ANR	4919164	Argument	"""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"""		4918745	1					
ANR	4919165	PrimaryExpression	"""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"""		4918745	0					
ANR	4919166	Argument	prefix		4918745	2					
ANR	4919167	Identifier	prefix		4918745	0					
ANR	4919168	ExpressionStatement	"fputs ( ""\\nconst gx_device_halftone_resource_t *const *\\n"" , out )"	338:4:10475:10537	4918745	31	True				
ANR	4919169	CallExpression	"fputs ( ""\\nconst gx_device_halftone_resource_t *const *\\n"" , out )"		4918745	0					
ANR	4919170	Callee	fputs		4918745	0					
ANR	4919171	Identifier	fputs		4918745	0					
ANR	4919172	ArgumentList	"""\\nconst gx_device_halftone_resource_t *const *\\n"""		4918745	1					
ANR	4919173	Argument	"""\\nconst gx_device_halftone_resource_t *const *\\n"""		4918745	0					
ANR	4919174	PrimaryExpression	"""\\nconst gx_device_halftone_resource_t *const *\\n"""		4918745	0					
ANR	4919175	Argument	out		4918745	1					
ANR	4919176	Identifier	out		4918745	0					
ANR	4919177	ExpressionStatement	"fprintf ( out , ""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"" , prefix )"	339:4:10543:10666	4918745	32	True				
ANR	4919178	CallExpression	"fprintf ( out , ""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"" , prefix )"		4918745	0					
ANR	4919179	Callee	fprintf		4918745	0					
ANR	4919180	Identifier	fprintf		4918745	0					
ANR	4919181	ArgumentList	out		4918745	1					
ANR	4919182	Argument	out		4918745	0					
ANR	4919183	Identifier	out		4918745	0					
ANR	4919184	Argument	"""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"""		4918745	1					
ANR	4919185	PrimaryExpression	"""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"""		4918745	0					
ANR	4919186	Argument	prefix		4918745	2					
ANR	4919187	Identifier	prefix		4918745	0					
ANR	4919188	ForStatement	for ( i = 0 ; i < index ; ++ i )		4918745	33					
ANR	4919189	ForInit	i = 0 ;	341:9:10677:10682	4918745	0	True				
ANR	4919190	AssignmentExpression	i = 0		4918745	0		=			
ANR	4919191	Identifier	i		4918745	0					
ANR	4919192	PrimaryExpression	0		4918745	1					
ANR	4919193	Condition	i < index	341:16:10684:10692	4918745	1	True				
ANR	4919194	RelationalExpression	i < index		4918745	0		<			
ANR	4919195	Identifier	i		4918745	0					
ANR	4919196	Identifier	index		4918745	1					
ANR	4919197	UnaryExpression	++ i	341:27:10695:10697	4918745	2	True				
ANR	4919198	IncDec	++		4918745	0					
ANR	4919199	Identifier	i		4918745	1					
ANR	4919200	ExpressionStatement	"fprintf ( out , ""&res_%d, "" , i )"	342:8:10708:10736	4918745	3	True				
ANR	4919201	CallExpression	"fprintf ( out , ""&res_%d, "" , i )"		4918745	0					
ANR	4919202	Callee	fprintf		4918745	0					
ANR	4919203	Identifier	fprintf		4918745	0					
ANR	4919204	ArgumentList	out		4918745	1					
ANR	4919205	Argument	out		4918745	0					
ANR	4919206	Identifier	out		4918745	0					
ANR	4919207	Argument	"""&res_%d, """		4918745	1					
ANR	4919208	PrimaryExpression	"""&res_%d, """		4918745	0					
ANR	4919209	Argument	i		4918745	2					
ANR	4919210	Identifier	i		4918745	0					
ANR	4919211	ExpressionStatement	"fputs ( ""0\\n    };\\n    return res;\\n}\\n"" , out )"	343:4:10742:10787	4918745	34	True				
ANR	4919212	CallExpression	"fputs ( ""0\\n    };\\n    return res;\\n}\\n"" , out )"		4918745	0					
ANR	4919213	Callee	fputs		4918745	0					
ANR	4919214	Identifier	fputs		4918745	0					
ANR	4919215	ArgumentList	"""0\\n    };\\n    return res;\\n}\\n"""		4918745	1					
ANR	4919216	Argument	"""0\\n    };\\n    return res;\\n}\\n"""		4918745	0					
ANR	4919217	PrimaryExpression	"""0\\n    };\\n    return res;\\n}\\n"""		4918745	0					
ANR	4919218	Argument	out		4918745	1					
ANR	4919219	Identifier	out		4918745	0					
ANR	4919220	ExpressionStatement	fclose ( out )	344:4:10793:10804	4918745	35	True				
ANR	4919221	CallExpression	fclose ( out )		4918745	0					
ANR	4919222	Callee	fclose		4918745	0					
ANR	4919223	Identifier	fclose		4918745	0					
ANR	4919224	ArgumentList	out		4918745	1					
ANR	4919225	Argument	out		4918745	0					
ANR	4919226	Identifier	out		4918745	0					
ANR	4919227	IfStatement	if ( code < 0 )		4918745	36					
ANR	4919228	Condition	code < 0	345:8:10814:10821	4918745	0	True				
ANR	4919229	RelationalExpression	code < 0		4918745	0		<			
ANR	4919230	Identifier	code		4918745	0					
ANR	4919231	PrimaryExpression	0		4918745	1					
ANR	4919232	ExpressionStatement	exit ( 1 )	346:8:10832:10839	4918745	1	True				
ANR	4919233	CallExpression	exit ( 1 )		4918745	0					
ANR	4919234	Callee	exit		4918745	0					
ANR	4919235	Identifier	exit		4918745	0					
ANR	4919236	ArgumentList	1		4918745	1					
ANR	4919237	Argument	1		4918745	0					
ANR	4919238	PrimaryExpression	1		4918745	0					
ANR	4919239	ReturnStatement	return 0 ;	347:4:10845:10853	4918745	37	True				
ANR	4919240	PrimaryExpression	0		4918745	0					
ANR	4919241	ReturnType	int		4918745	1					
ANR	4919242	Identifier	main		4918745	2					
ANR	4919243	ParameterList	"int argc , char * argv [ ]"		4918745	3					
ANR	4919244	Parameter	int argc	277:5:8634:8641	4918745	0	True				
ANR	4919245	ParameterType	int		4918745	0					
ANR	4919246	Identifier	argc		4918745	1					
ANR	4919247	Parameter	char * argv [ ]	277:15:8644:8655	4918745	1	True				
ANR	4919248	ParameterType	char * [ ]		4918745	0					
ANR	4919249	Identifier	argv		4918745	1					
ANR	4919250	CFGEntryNode	ENTRY		4918745		True				
ANR	4919251	CFGExitNode	EXIT		4918745		True				
ANR	4919252	Symbol	order . levels		4918745						
ANR	4919253	Symbol	& res		4918745						
ANR	4919254	Symbol	code		4918745						
ANR	4919255	Symbol	order . num_levels		4918745						
ANR	4919256	Symbol	& prefix		4918745						
ANR	4919257	Symbol	res . Height		4918745						
ANR	4919258	Symbol	line		4918745						
ANR	4919259	Symbol	prefix		4918745						
ANR	4919260	Symbol	parse_line		4918745						
ANR	4919261	Symbol	ht_order_procs_short		4918745						
ANR	4919262	Symbol	* argv		4918745						
ANR	4919263	Symbol	* line		4918745						
ANR	4919264	Symbol	parse_halftone		4918745						
ANR	4919265	Symbol	argv		4918745						
ANR	4919266	Symbol	& order		4918745						
ANR	4919267	Symbol	iname		4918745						
ANR	4919268	Symbol	out		4918745						
ANR	4919269	Symbol	res . levels		4918745						
ANR	4919270	Symbol	order . width		4918745						
ANR	4919271	Symbol	res . bit_data		4918745						
ANR	4919272	Symbol	order . bit_data		4918745						
ANR	4919273	Symbol	cont		4918745						
ANR	4919274	Symbol	res . Width		4918745						
ANR	4919275	Symbol	read_file		4918745						
ANR	4919276	Symbol	order		4918745						
ANR	4919277	Symbol	argc		4918745						
ANR	4919278	Symbol	res		4918745						
ANR	4919279	Symbol	fopen		4918745						
ANR	4919280	Symbol	& line		4918745						
ANR	4919281	Symbol	& Thresholds		4918745						
ANR	4919282	Symbol	res . rname		4918745						
ANR	4919283	Symbol	Thresholds		4918745						
ANR	4919284	Symbol	in		4918745						
ANR	4919285	Symbol	& cont		4918745						
ANR	4919286	Symbol	i		4918745						
ANR	4919287	Symbol	index		4918745						
ANR	4919288	Symbol	stderr		4918745						
ANR	4919289	Symbol	oname		4918745						
ANR	4919290	Symbol	* cont		4918745						
ANR	4919291	Symbol	res . num_levels		4918745						
ANR	4919292	Symbol	order . num_bits		4918745						
ANR	4919293	DeclStmt									
ANR	4919294	Decl							RELOC_PTRS_END	RELOC_PTRS_END ( )	public_st_stream_state
ANR	4919295	Function	gx_ht_complete_threshold_order	361:0:11043:11102							
ANR	4919296	FunctionDef	gx_ht_complete_threshold_order (gx_ht_order * porder)		4919295	0					
ANR	4919297	CompoundStatement		363:0:11100:11102	4919295	0					
ANR	4919298	ReturnType	void		4919295	1					
ANR	4919299	Identifier	gx_ht_complete_threshold_order		4919295	2					
ANR	4919300	ParameterList	gx_ht_order * porder		4919295	3					
ANR	4919301	Parameter	gx_ht_order * porder	362:31:11079:11097	4919295	0	True				
ANR	4919302	ParameterType	gx_ht_order *		4919295	0					
ANR	4919303	Identifier	porder		4919295	1					
ANR	4919304	CFGEntryNode	ENTRY		4919295		True				
ANR	4919305	CFGExitNode	EXIT		4919295		True				
ANR	4919306	Symbol	porder		4919295						
ANR	4919307	DeclStmt									
ANR	4919308	Decl							const gx_dht_proc	const gx_dht_proc [ ]	gx_device_halftone_list
