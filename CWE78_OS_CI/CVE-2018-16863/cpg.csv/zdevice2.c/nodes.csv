command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11045172	File	data/converged/CVE-2018-16863_ghostpdl/zdevice2.c								
ANR	11045173	DeclStmt									
ANR	11045174	Decl							int	int ( i_ctx_t * )	z2copy
ANR	11045175	DeclStmt									
ANR	11045176	Decl							int	int ( i_ctx_t * )	z2copy_gstate
ANR	11045177	DeclStmt									
ANR	11045178	Decl							int	"int ( i_ctx_t * , const char * )"	push_callout
ANR	11045179	Function	z2copy	45:0:1334:1550							
ANR	11045180	FunctionDef	z2copy (i_ctx_t * i_ctx_p)		11045179	0					
ANR	11045181	CompoundStatement		47:0:1363:1550	11045179	0					
ANR	11045182	IdentifierDeclStatement	os_ptr op = osp ;	48:4:1369:1384	11045179	0	True				
ANR	11045183	IdentifierDecl	op = osp		11045179	0					
ANR	11045184	IdentifierDeclType	os_ptr		11045179	0					
ANR	11045185	Identifier	op		11045179	1					
ANR	11045186	AssignmentExpression	op = osp		11045179	2		=			
ANR	11045187	Identifier	osp		11045179	0					
ANR	11045188	Identifier	osp		11045179	1					
ANR	11045189	IdentifierDeclStatement	int code = zcopy ( i_ctx_p ) ;	49:4:1390:1415	11045179	1	True				
ANR	11045190	IdentifierDecl	code = zcopy ( i_ctx_p )		11045179	0					
ANR	11045191	IdentifierDeclType	int		11045179	0					
ANR	11045192	Identifier	code		11045179	1					
ANR	11045193	AssignmentExpression	code = zcopy ( i_ctx_p )		11045179	2		=			
ANR	11045194	Identifier	code		11045179	0					
ANR	11045195	CallExpression	zcopy ( i_ctx_p )		11045179	1					
ANR	11045196	Callee	zcopy		11045179	0					
ANR	11045197	Identifier	zcopy		11045179	0					
ANR	11045198	ArgumentList	i_ctx_p		11045179	1					
ANR	11045199	Argument	i_ctx_p		11045179	0					
ANR	11045200	Identifier	i_ctx_p		11045179	0					
ANR	11045201	IfStatement	if ( code >= 0 )		11045179	2					
ANR	11045202	Condition	code >= 0	51:8:1426:1434	11045179	0	True				
ANR	11045203	RelationalExpression	code >= 0		11045179	0		>=			
ANR	11045204	Identifier	code		11045179	0					
ANR	11045205	PrimaryExpression	0		11045179	1					
ANR	11045206	ReturnStatement	return code ;	52:8:1445:1456	11045179	1	True				
ANR	11045207	Identifier	code		11045179	0					
ANR	11045208	IfStatement	"if ( ! r_has_type ( op , t_astruct ) )"		11045179	3					
ANR	11045209	Condition	"! r_has_type ( op , t_astruct )"	53:8:1466:1491	11045179	0	True				
ANR	11045210	UnaryOperationExpression	"! r_has_type ( op , t_astruct )"		11045179	0					
ANR	11045211	UnaryOperator	!		11045179	0					
ANR	11045212	CallExpression	"r_has_type ( op , t_astruct )"		11045179	1					
ANR	11045213	Callee	r_has_type		11045179	0					
ANR	11045214	Identifier	r_has_type		11045179	0					
ANR	11045215	ArgumentList	op		11045179	1					
ANR	11045216	Argument	op		11045179	0					
ANR	11045217	Identifier	op		11045179	0					
ANR	11045218	Argument	t_astruct		11045179	1					
ANR	11045219	Identifier	t_astruct		11045179	0					
ANR	11045220	ReturnStatement	return code ;	54:8:1502:1513	11045179	1	True				
ANR	11045221	Identifier	code		11045179	0					
ANR	11045222	ReturnStatement	return z2copy_gstate ( i_ctx_p ) ;	55:4:1519:1548	11045179	4	True				
ANR	11045223	CallExpression	z2copy_gstate ( i_ctx_p )		11045179	0					
ANR	11045224	Callee	z2copy_gstate		11045179	0					
ANR	11045225	Identifier	z2copy_gstate		11045179	0					
ANR	11045226	ArgumentList	i_ctx_p		11045179	1					
ANR	11045227	Argument	i_ctx_p		11045179	0					
ANR	11045228	Identifier	i_ctx_p		11045179	0					
ANR	11045229	ReturnType	int		11045179	1					
ANR	11045230	Identifier	z2copy		11045179	2					
ANR	11045231	ParameterList	i_ctx_t * i_ctx_p		11045179	3					
ANR	11045232	Parameter	i_ctx_t * i_ctx_p	46:7:1345:1360	11045179	0	True				
ANR	11045233	ParameterType	i_ctx_t *		11045179	0					
ANR	11045234	Identifier	i_ctx_p		11045179	1					
ANR	11045235	CFGEntryNode	ENTRY		11045179		True				
ANR	11045236	CFGExitNode	EXIT		11045179		True				
ANR	11045237	Symbol	op		11045179						
ANR	11045238	Symbol	r_has_type		11045179						
ANR	11045239	Symbol	code		11045179						
ANR	11045240	Symbol	z2copy_gstate		11045179						
ANR	11045241	Symbol	i_ctx_p		11045179						
ANR	11045242	Symbol	t_astruct		11045179						
ANR	11045243	Symbol	zcopy		11045179						
ANR	11045244	Symbol	osp		11045179						
ANR	11045245	Function	zcurrentshowpagecount	60:0:1632:2029							
ANR	11045246	FunctionDef	zcurrentshowpagecount (i_ctx_t * i_ctx_p)		11045245	0					
ANR	11045247	CompoundStatement		62:0:1683:2029	11045245	0					
ANR	11045248	IdentifierDeclStatement	os_ptr op = osp ;	63:4:1689:1704	11045245	0	True				
ANR	11045249	IdentifierDecl	op = osp		11045245	0					
ANR	11045250	IdentifierDeclType	os_ptr		11045245	0					
ANR	11045251	Identifier	op		11045245	1					
ANR	11045252	AssignmentExpression	op = osp		11045245	2		=			
ANR	11045253	Identifier	osp		11045245	0					
ANR	11045254	Identifier	osp		11045245	1					
ANR	11045255	IdentifierDeclStatement	"gx_device * dev1 , * dev = gs_currentdevice ( igs ) ;"	64:4:1710:1755	11045245	1	True				
ANR	11045256	IdentifierDecl	* dev1		11045245	0					
ANR	11045257	IdentifierDeclType	gx_device *		11045245	0					
ANR	11045258	Identifier	dev1		11045245	1					
ANR	11045259	IdentifierDecl	* dev = gs_currentdevice ( igs )		11045245	1					
ANR	11045260	IdentifierDeclType	gx_device *		11045245	0					
ANR	11045261	Identifier	dev		11045245	1					
ANR	11045262	AssignmentExpression	* dev = gs_currentdevice ( igs )		11045245	2		=			
ANR	11045263	Identifier	dev		11045245	0					
ANR	11045264	CallExpression	gs_currentdevice ( igs )		11045245	1					
ANR	11045265	Callee	gs_currentdevice		11045245	0					
ANR	11045266	Identifier	gs_currentdevice		11045245	0					
ANR	11045267	ArgumentList	igs		11045245	1					
ANR	11045268	Argument	igs		11045245	0					
ANR	11045269	Identifier	igs		11045245	0					
ANR	11045270	IfStatement	"if ( ( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0 )"		11045245	2					
ANR	11045271	Condition	"( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"	66:8:1766:1808	11045245	0	True				
ANR	11045272	EqualityExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"		11045245	0		==			
ANR	11045273	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045245	0					
ANR	11045274	Callee	"* dev_proc ( dev , get_page_device )"		11045245	0					
ANR	11045275	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		11045245	0					
ANR	11045276	UnaryOperator	*		11045245	0					
ANR	11045277	CallExpression	"dev_proc ( dev , get_page_device )"		11045245	1					
ANR	11045278	Callee	dev_proc		11045245	0					
ANR	11045279	Identifier	dev_proc		11045245	0					
ANR	11045280	ArgumentList	dev		11045245	1					
ANR	11045281	Argument	dev		11045245	0					
ANR	11045282	Identifier	dev		11045245	0					
ANR	11045283	Argument	get_page_device		11045245	1					
ANR	11045284	Identifier	get_page_device		11045245	0					
ANR	11045285	ArgumentList	dev		11045245	1					
ANR	11045286	Argument	dev		11045245	0					
ANR	11045287	Identifier	dev		11045245	0					
ANR	11045288	PrimaryExpression	0		11045245	1					
ANR	11045289	CompoundStatement		5:53:127:127	11045245	1					
ANR	11045290	ExpressionStatement	push ( 1 )	67:8:1821:1828	11045245	0	True				
ANR	11045291	CallExpression	push ( 1 )		11045245	0					
ANR	11045292	Callee	push		11045245	0					
ANR	11045293	Identifier	push		11045245	0					
ANR	11045294	ArgumentList	1		11045245	1					
ANR	11045295	Argument	1		11045245	0					
ANR	11045296	PrimaryExpression	1		11045245	0					
ANR	11045297	ExpressionStatement	make_false ( op )	68:8:1838:1852	11045245	1	True				
ANR	11045298	CallExpression	make_false ( op )		11045245	0					
ANR	11045299	Callee	make_false		11045245	0					
ANR	11045300	Identifier	make_false		11045245	0					
ANR	11045301	ArgumentList	op		11045245	1					
ANR	11045302	Argument	op		11045245	0					
ANR	11045303	Identifier	op		11045245	0					
ANR	11045304	ElseStatement	else		11045245	0					
ANR	11045305	CompoundStatement		8:11:181:181	11045245	0					
ANR	11045306	ExpressionStatement	"dev1 = ( * dev_proc ( dev , get_page_device ) ) ( dev )"	70:8:1875:1920	11045245	0	True				
ANR	11045307	AssignmentExpression	"dev1 = ( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045245	0		=			
ANR	11045308	Identifier	dev1		11045245	0					
ANR	11045309	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045245	1					
ANR	11045310	Callee	"* dev_proc ( dev , get_page_device )"		11045245	0					
ANR	11045311	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		11045245	0					
ANR	11045312	UnaryOperator	*		11045245	0					
ANR	11045313	CallExpression	"dev_proc ( dev , get_page_device )"		11045245	1					
ANR	11045314	Callee	dev_proc		11045245	0					
ANR	11045315	Identifier	dev_proc		11045245	0					
ANR	11045316	ArgumentList	dev		11045245	1					
ANR	11045317	Argument	dev		11045245	0					
ANR	11045318	Identifier	dev		11045245	0					
ANR	11045319	Argument	get_page_device		11045245	1					
ANR	11045320	Identifier	get_page_device		11045245	0					
ANR	11045321	ArgumentList	dev		11045245	1					
ANR	11045322	Argument	dev		11045245	0					
ANR	11045323	Identifier	dev		11045245	0					
ANR	11045324	ExpressionStatement	push ( 2 )	71:8:1930:1937	11045245	1	True				
ANR	11045325	CallExpression	push ( 2 )		11045245	0					
ANR	11045326	Callee	push		11045245	0					
ANR	11045327	Identifier	push		11045245	0					
ANR	11045328	ArgumentList	2		11045245	1					
ANR	11045329	Argument	2		11045245	0					
ANR	11045330	PrimaryExpression	2		11045245	0					
ANR	11045331	ExpressionStatement	"make_int ( op - 1 , dev1 -> ShowpageCount )"	72:8:1947:1984	11045245	2	True				
ANR	11045332	CallExpression	"make_int ( op - 1 , dev1 -> ShowpageCount )"		11045245	0					
ANR	11045333	Callee	make_int		11045245	0					
ANR	11045334	Identifier	make_int		11045245	0					
ANR	11045335	ArgumentList	op - 1		11045245	1					
ANR	11045336	Argument	op - 1		11045245	0					
ANR	11045337	AdditiveExpression	op - 1		11045245	0		-			
ANR	11045338	Identifier	op		11045245	0					
ANR	11045339	PrimaryExpression	1		11045245	1					
ANR	11045340	Argument	dev1 -> ShowpageCount		11045245	1					
ANR	11045341	PtrMemberAccess	dev1 -> ShowpageCount		11045245	0					
ANR	11045342	Identifier	dev1		11045245	0					
ANR	11045343	Identifier	ShowpageCount		11045245	1					
ANR	11045344	ExpressionStatement	make_true ( op )	73:8:1994:2007	11045245	3	True				
ANR	11045345	CallExpression	make_true ( op )		11045245	0					
ANR	11045346	Callee	make_true		11045245	0					
ANR	11045347	Identifier	make_true		11045245	0					
ANR	11045348	ArgumentList	op		11045245	1					
ANR	11045349	Argument	op		11045245	0					
ANR	11045350	Identifier	op		11045245	0					
ANR	11045351	ReturnStatement	return 0 ;	75:4:2019:2027	11045245	3	True				
ANR	11045352	PrimaryExpression	0		11045245	0					
ANR	11045353	ReturnType	static int		11045245	1					
ANR	11045354	Identifier	zcurrentshowpagecount		11045245	2					
ANR	11045355	ParameterList	i_ctx_t * i_ctx_p		11045245	3					
ANR	11045356	Parameter	i_ctx_t * i_ctx_p	61:22:1665:1680	11045245	0	True				
ANR	11045357	ParameterType	i_ctx_t *		11045245	0					
ANR	11045358	Identifier	i_ctx_p		11045245	1					
ANR	11045359	CFGEntryNode	ENTRY		11045245		True				
ANR	11045360	CFGExitNode	EXIT		11045245		True				
ANR	11045361	Symbol	op		11045245						
ANR	11045362	Symbol	"* dev_proc ( dev , get_page_device )"		11045245						
ANR	11045363	Symbol	* dev_proc		11045245						
ANR	11045364	Symbol	gs_currentdevice		11045245						
ANR	11045365	Symbol	osp		11045245						
ANR	11045366	Symbol	get_page_device		11045245						
ANR	11045367	Symbol	* dev1		11045245						
ANR	11045368	Symbol	dev1		11045245						
ANR	11045369	Symbol	dev		11045245						
ANR	11045370	Symbol	igs		11045245						
ANR	11045371	Symbol	i_ctx_p		11045245						
ANR	11045372	Symbol	dev_proc		11045245						
ANR	11045373	Symbol	dev1 -> ShowpageCount		11045245						
ANR	11045374	Function	zcurrentpagedevice	79:0:2073:2401							
ANR	11045375	FunctionDef	zcurrentpagedevice (i_ctx_t * i_ctx_p)		11045374	0					
ANR	11045376	CompoundStatement		81:0:2121:2401	11045374	0					
ANR	11045377	IdentifierDeclStatement	os_ptr op = osp ;	82:4:2127:2142	11045374	0	True				
ANR	11045378	IdentifierDecl	op = osp		11045374	0					
ANR	11045379	IdentifierDeclType	os_ptr		11045374	0					
ANR	11045380	Identifier	op		11045374	1					
ANR	11045381	AssignmentExpression	op = osp		11045374	2		=			
ANR	11045382	Identifier	osp		11045374	0					
ANR	11045383	Identifier	osp		11045374	1					
ANR	11045384	IdentifierDeclStatement	gx_device * dev = gs_currentdevice ( igs ) ;	83:4:2148:2186	11045374	1	True				
ANR	11045385	IdentifierDecl	* dev = gs_currentdevice ( igs )		11045374	0					
ANR	11045386	IdentifierDeclType	gx_device *		11045374	0					
ANR	11045387	Identifier	dev		11045374	1					
ANR	11045388	AssignmentExpression	* dev = gs_currentdevice ( igs )		11045374	2		=			
ANR	11045389	Identifier	dev		11045374	0					
ANR	11045390	CallExpression	gs_currentdevice ( igs )		11045374	1					
ANR	11045391	Callee	gs_currentdevice		11045374	0					
ANR	11045392	Identifier	gs_currentdevice		11045374	0					
ANR	11045393	ArgumentList	igs		11045374	1					
ANR	11045394	Argument	igs		11045374	0					
ANR	11045395	Identifier	igs		11045374	0					
ANR	11045396	ExpressionStatement	push ( 2 )	85:4:2193:2200	11045374	2	True				
ANR	11045397	CallExpression	push ( 2 )		11045374	0					
ANR	11045398	Callee	push		11045374	0					
ANR	11045399	Identifier	push		11045374	0					
ANR	11045400	ArgumentList	2		11045374	1					
ANR	11045401	Argument	2		11045374	0					
ANR	11045402	PrimaryExpression	2		11045374	0					
ANR	11045403	IfStatement	"if ( ( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0 )"		11045374	3					
ANR	11045404	Condition	"( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"	86:8:2210:2252	11045374	0	True				
ANR	11045405	EqualityExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"		11045374	0		!=			
ANR	11045406	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045374	0					
ANR	11045407	Callee	"* dev_proc ( dev , get_page_device )"		11045374	0					
ANR	11045408	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		11045374	0					
ANR	11045409	UnaryOperator	*		11045374	0					
ANR	11045410	CallExpression	"dev_proc ( dev , get_page_device )"		11045374	1					
ANR	11045411	Callee	dev_proc		11045374	0					
ANR	11045412	Identifier	dev_proc		11045374	0					
ANR	11045413	ArgumentList	dev		11045374	1					
ANR	11045414	Argument	dev		11045374	0					
ANR	11045415	Identifier	dev		11045374	0					
ANR	11045416	Argument	get_page_device		11045374	1					
ANR	11045417	Identifier	get_page_device		11045374	0					
ANR	11045418	ArgumentList	dev		11045374	1					
ANR	11045419	Argument	dev		11045374	0					
ANR	11045420	Identifier	dev		11045374	0					
ANR	11045421	PrimaryExpression	0		11045374	1					
ANR	11045422	CompoundStatement		6:53:133:133	11045374	1					
ANR	11045423	ExpressionStatement	op [ - 1 ] = istate -> pagedevice	87:8:2265:2292	11045374	0	True				
ANR	11045424	AssignmentExpression	op [ - 1 ] = istate -> pagedevice		11045374	0		=			
ANR	11045425	ArrayIndexing	op [ - 1 ]		11045374	0					
ANR	11045426	Identifier	op		11045374	0					
ANR	11045427	UnaryOperationExpression	- 1		11045374	1					
ANR	11045428	UnaryOperator	-		11045374	0					
ANR	11045429	PrimaryExpression	1		11045374	1					
ANR	11045430	PtrMemberAccess	istate -> pagedevice		11045374	1					
ANR	11045431	Identifier	istate		11045374	0					
ANR	11045432	Identifier	pagedevice		11045374	1					
ANR	11045433	ExpressionStatement	make_true ( op )	88:8:2302:2315	11045374	1	True				
ANR	11045434	CallExpression	make_true ( op )		11045374	0					
ANR	11045435	Callee	make_true		11045374	0					
ANR	11045436	Identifier	make_true		11045374	0					
ANR	11045437	ArgumentList	op		11045374	1					
ANR	11045438	Argument	op		11045374	0					
ANR	11045439	Identifier	op		11045374	0					
ANR	11045440	ElseStatement	else		11045374	0					
ANR	11045441	CompoundStatement		9:11:206:206	11045374	0					
ANR	11045442	ExpressionStatement	make_null ( op - 1 )	90:8:2338:2355	11045374	0	True				
ANR	11045443	CallExpression	make_null ( op - 1 )		11045374	0					
ANR	11045444	Callee	make_null		11045374	0					
ANR	11045445	Identifier	make_null		11045374	0					
ANR	11045446	ArgumentList	op - 1		11045374	1					
ANR	11045447	Argument	op - 1		11045374	0					
ANR	11045448	AdditiveExpression	op - 1		11045374	0		-			
ANR	11045449	Identifier	op		11045374	0					
ANR	11045450	PrimaryExpression	1		11045374	1					
ANR	11045451	ExpressionStatement	make_false ( op )	91:8:2365:2379	11045374	1	True				
ANR	11045452	CallExpression	make_false ( op )		11045374	0					
ANR	11045453	Callee	make_false		11045374	0					
ANR	11045454	Identifier	make_false		11045374	0					
ANR	11045455	ArgumentList	op		11045374	1					
ANR	11045456	Argument	op		11045374	0					
ANR	11045457	Identifier	op		11045374	0					
ANR	11045458	ReturnStatement	return 0 ;	93:4:2391:2399	11045374	4	True				
ANR	11045459	PrimaryExpression	0		11045374	0					
ANR	11045460	ReturnType	static int		11045374	1					
ANR	11045461	Identifier	zcurrentpagedevice		11045374	2					
ANR	11045462	ParameterList	i_ctx_t * i_ctx_p		11045374	3					
ANR	11045463	Parameter	i_ctx_t * i_ctx_p	80:19:2103:2118	11045374	0	True				
ANR	11045464	ParameterType	i_ctx_t *		11045374	0					
ANR	11045465	Identifier	i_ctx_p		11045374	1					
ANR	11045466	CFGEntryNode	ENTRY		11045374		True				
ANR	11045467	CFGExitNode	EXIT		11045374		True				
ANR	11045468	Symbol	op		11045374						
ANR	11045469	Symbol	"* dev_proc ( dev , get_page_device )"		11045374						
ANR	11045470	Symbol	* op		11045374						
ANR	11045471	Symbol	* dev_proc		11045374						
ANR	11045472	Symbol	gs_currentdevice		11045374						
ANR	11045473	Symbol	osp		11045374						
ANR	11045474	Symbol	get_page_device		11045374						
ANR	11045475	Symbol	* istate		11045374						
ANR	11045476	Symbol	istate -> pagedevice		11045374						
ANR	11045477	Symbol	dev		11045374						
ANR	11045478	Symbol	igs		11045374						
ANR	11045479	Symbol	i_ctx_p		11045374						
ANR	11045480	Symbol	dev_proc		11045374						
ANR	11045481	Symbol	istate		11045374						
ANR	11045482	Function	zsetpagedevice	97:0:2445:3202							
ANR	11045483	FunctionDef	zsetpagedevice (i_ctx_t * i_ctx_p)		11045482	0					
ANR	11045484	CompoundStatement		99:0:2489:3202	11045482	0					
ANR	11045485	IdentifierDeclStatement	os_ptr op = osp ;	100:4:2495:2510	11045482	0	True				
ANR	11045486	IdentifierDecl	op = osp		11045482	0					
ANR	11045487	IdentifierDeclType	os_ptr		11045482	0					
ANR	11045488	Identifier	op		11045482	1					
ANR	11045489	AssignmentExpression	op = osp		11045482	2		=			
ANR	11045490	Identifier	osp		11045482	0					
ANR	11045491	Identifier	osp		11045482	1					
ANR	11045492	IdentifierDeclStatement	int code ;	101:4:2516:2524	11045482	1	True				
ANR	11045493	IdentifierDecl	code		11045482	0					
ANR	11045494	IdentifierDeclType	int		11045482	0					
ANR	11045495	Identifier	code		11045482	1					
ANR	11045496	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		11045482	2					
ANR	11045497	Condition	"r_has_type ( op , t_dictionary )"	107:8:2625:2652	11045482	0	True				
ANR	11045498	CallExpression	"r_has_type ( op , t_dictionary )"		11045482	0					
ANR	11045499	Callee	r_has_type		11045482	0					
ANR	11045500	Identifier	r_has_type		11045482	0					
ANR	11045501	ArgumentList	op		11045482	1					
ANR	11045502	Argument	op		11045482	0					
ANR	11045503	Identifier	op		11045482	0					
ANR	11045504	Argument	t_dictionary		11045482	1					
ANR	11045505	Identifier	t_dictionary		11045482	0					
ANR	11045506	CompoundStatement		9:38:165:165	11045482	1					
ANR	11045507	ExpressionStatement	check_dict_read ( * op )	108:8:2665:2685	11045482	0	True				
ANR	11045508	CallExpression	check_dict_read ( * op )		11045482	0					
ANR	11045509	Callee	check_dict_read		11045482	0					
ANR	11045510	Identifier	check_dict_read		11045482	0					
ANR	11045511	ArgumentList	* op		11045482	1					
ANR	11045512	Argument	* op		11045482	0					
ANR	11045513	UnaryOperationExpression	* op		11045482	0					
ANR	11045514	UnaryOperator	*		11045482	0					
ANR	11045515	Identifier	op		11045482	1					
ANR	11045516	IfStatement	if ( ! ( r_is_local ( op ) ) )		11045482	1					
ANR	11045517	Condition	! ( r_is_local ( op ) )	114:12:2872:2888	11045482	0	True				
ANR	11045518	UnaryOperationExpression	! ( r_is_local ( op ) )		11045482	0					
ANR	11045519	UnaryOperator	!		11045482	0					
ANR	11045520	CallExpression	r_is_local ( op )		11045482	1					
ANR	11045521	Callee	r_is_local		11045482	0					
ANR	11045522	Identifier	r_is_local		11045482	0					
ANR	11045523	ArgumentList	op		11045482	1					
ANR	11045524	Argument	op		11045482	0					
ANR	11045525	Identifier	op		11045482	0					
ANR	11045526	ExpressionStatement	return_error ( gs_error_invalidaccess )	115:12:2903:2939	11045482	1	True				
ANR	11045527	CallExpression	return_error ( gs_error_invalidaccess )		11045482	0					
ANR	11045528	Callee	return_error		11045482	0					
ANR	11045529	Identifier	return_error		11045482	0					
ANR	11045530	ArgumentList	gs_error_invalidaccess		11045482	1					
ANR	11045531	Argument	gs_error_invalidaccess		11045482	0					
ANR	11045532	Identifier	gs_error_invalidaccess		11045482	0					
ANR	11045533	ExpressionStatement	code = zreadonly ( i_ctx_p )	118:8:3020:3045	11045482	2	True				
ANR	11045534	AssignmentExpression	code = zreadonly ( i_ctx_p )		11045482	0		=			
ANR	11045535	Identifier	code		11045482	0					
ANR	11045536	CallExpression	zreadonly ( i_ctx_p )		11045482	1					
ANR	11045537	Callee	zreadonly		11045482	0					
ANR	11045538	Identifier	zreadonly		11045482	0					
ANR	11045539	ArgumentList	i_ctx_p		11045482	1					
ANR	11045540	Argument	i_ctx_p		11045482	0					
ANR	11045541	Identifier	i_ctx_p		11045482	0					
ANR	11045542	IfStatement	if ( code < 0 )		11045482	3					
ANR	11045543	Condition	code < 0	119:12:3059:3066	11045482	0	True				
ANR	11045544	RelationalExpression	code < 0		11045482	0		<			
ANR	11045545	Identifier	code		11045482	0					
ANR	11045546	PrimaryExpression	0		11045482	1					
ANR	11045547	ReturnStatement	return code ;	120:12:3081:3092	11045482	1	True				
ANR	11045548	Identifier	code		11045482	0					
ANR	11045549	ElseStatement	else		11045482	0					
ANR	11045550	CompoundStatement		23:11:615:615	11045482	0					
ANR	11045551	ExpressionStatement	"check_type ( * op , t_null )"	122:8:3115:3138	11045482	0	True				
ANR	11045552	CallExpression	"check_type ( * op , t_null )"		11045482	0					
ANR	11045553	Callee	check_type		11045482	0					
ANR	11045554	Identifier	check_type		11045482	0					
ANR	11045555	ArgumentList	* op		11045482	1					
ANR	11045556	Argument	* op		11045482	0					
ANR	11045557	UnaryOperationExpression	* op		11045482	0					
ANR	11045558	UnaryOperator	*		11045482	0					
ANR	11045559	Identifier	op		11045482	1					
ANR	11045560	Argument	t_null		11045482	1					
ANR	11045561	Identifier	t_null		11045482	0					
ANR	11045562	ExpressionStatement	istate -> pagedevice = * op	124:4:3150:3174	11045482	3	True				
ANR	11045563	AssignmentExpression	istate -> pagedevice = * op		11045482	0		=			
ANR	11045564	PtrMemberAccess	istate -> pagedevice		11045482	0					
ANR	11045565	Identifier	istate		11045482	0					
ANR	11045566	Identifier	pagedevice		11045482	1					
ANR	11045567	UnaryOperationExpression	* op		11045482	1					
ANR	11045568	UnaryOperator	*		11045482	0					
ANR	11045569	Identifier	op		11045482	1					
ANR	11045570	ExpressionStatement	pop ( 1 )	125:4:3180:3186	11045482	4	True				
ANR	11045571	CallExpression	pop ( 1 )		11045482	0					
ANR	11045572	Callee	pop		11045482	0					
ANR	11045573	Identifier	pop		11045482	0					
ANR	11045574	ArgumentList	1		11045482	1					
ANR	11045575	Argument	1		11045482	0					
ANR	11045576	PrimaryExpression	1		11045482	0					
ANR	11045577	ReturnStatement	return 0 ;	126:4:3192:3200	11045482	5	True				
ANR	11045578	PrimaryExpression	0		11045482	0					
ANR	11045579	ReturnType	static int		11045482	1					
ANR	11045580	Identifier	zsetpagedevice		11045482	2					
ANR	11045581	ParameterList	i_ctx_t * i_ctx_p		11045482	3					
ANR	11045582	Parameter	i_ctx_t * i_ctx_p	98:15:2471:2486	11045482	0	True				
ANR	11045583	ParameterType	i_ctx_t *		11045482	0					
ANR	11045584	Identifier	i_ctx_p		11045482	1					
ANR	11045585	CFGEntryNode	ENTRY		11045482		True				
ANR	11045586	CFGExitNode	EXIT		11045482		True				
ANR	11045587	Symbol	r_is_local		11045482						
ANR	11045588	Symbol	op		11045482						
ANR	11045589	Symbol	code		11045482						
ANR	11045590	Symbol	t_dictionary		11045482						
ANR	11045591	Symbol	* op		11045482						
ANR	11045592	Symbol	osp		11045482						
ANR	11045593	Symbol	istate -> pagedevice		11045482						
ANR	11045594	Symbol	* istate		11045482						
ANR	11045595	Symbol	zreadonly		11045482						
ANR	11045596	Symbol	r_has_type		11045482						
ANR	11045597	Symbol	t_null		11045482						
ANR	11045598	Symbol	i_ctx_p		11045482						
ANR	11045599	Symbol	gs_error_invalidaccess		11045482						
ANR	11045600	Symbol	istate		11045482						
ANR	11045601	Function	zcallinstall	133:0:3330:3608							
ANR	11045602	FunctionDef	zcallinstall (i_ctx_t * i_ctx_p)		11045601	0					
ANR	11045603	CompoundStatement		135:0:3372:3608	11045601	0					
ANR	11045604	IdentifierDeclStatement	gx_device * dev = gs_currentdevice ( igs ) ;	136:4:3378:3416	11045601	0	True				
ANR	11045605	IdentifierDecl	* dev = gs_currentdevice ( igs )		11045601	0					
ANR	11045606	IdentifierDeclType	gx_device *		11045601	0					
ANR	11045607	Identifier	dev		11045601	1					
ANR	11045608	AssignmentExpression	* dev = gs_currentdevice ( igs )		11045601	2		=			
ANR	11045609	Identifier	dev		11045601	0					
ANR	11045610	CallExpression	gs_currentdevice ( igs )		11045601	1					
ANR	11045611	Callee	gs_currentdevice		11045601	0					
ANR	11045612	Identifier	gs_currentdevice		11045601	0					
ANR	11045613	ArgumentList	igs		11045601	1					
ANR	11045614	Argument	igs		11045601	0					
ANR	11045615	Identifier	igs		11045601	0					
ANR	11045616	IfStatement	"if ( ( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0 )"		11045601	1					
ANR	11045617	Condition	"( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0"	138:8:3427:3477	11045601	0	True				
ANR	11045618	EqualityExpression	"( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0"		11045601	0		!=			
ANR	11045619	AssignmentExpression	"dev = ( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045601	0		=			
ANR	11045620	Identifier	dev		11045601	0					
ANR	11045621	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045601	1					
ANR	11045622	Callee	"* dev_proc ( dev , get_page_device )"		11045601	0					
ANR	11045623	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		11045601	0					
ANR	11045624	UnaryOperator	*		11045601	0					
ANR	11045625	CallExpression	"dev_proc ( dev , get_page_device )"		11045601	1					
ANR	11045626	Callee	dev_proc		11045601	0					
ANR	11045627	Identifier	dev_proc		11045601	0					
ANR	11045628	ArgumentList	dev		11045601	1					
ANR	11045629	Argument	dev		11045601	0					
ANR	11045630	Identifier	dev		11045601	0					
ANR	11045631	Argument	get_page_device		11045601	1					
ANR	11045632	Identifier	get_page_device		11045601	0					
ANR	11045633	ArgumentList	dev		11045601	1					
ANR	11045634	Argument	dev		11045601	0					
ANR	11045635	Identifier	dev		11045601	0					
ANR	11045636	PrimaryExpression	0		11045601	1					
ANR	11045637	CompoundStatement		5:8:117:165	11045601	1					
ANR	11045638	IdentifierDeclStatement	"int code = ( * dev -> page_procs . install ) ( dev , igs ) ;"	139:8:3490:3538	11045601	0	True				
ANR	11045639	IdentifierDecl	"code = ( * dev -> page_procs . install ) ( dev , igs )"		11045601	0					
ANR	11045640	IdentifierDeclType	int		11045601	0					
ANR	11045641	Identifier	code		11045601	1					
ANR	11045642	AssignmentExpression	"code = ( * dev -> page_procs . install ) ( dev , igs )"		11045601	2		=			
ANR	11045643	Identifier	code		11045601	0					
ANR	11045644	CallExpression	"( * dev -> page_procs . install ) ( dev , igs )"		11045601	1					
ANR	11045645	Callee	* dev -> page_procs . install		11045601	0					
ANR	11045646	UnaryOperationExpression	* dev -> page_procs . install		11045601	0					
ANR	11045647	UnaryOperator	*		11045601	0					
ANR	11045648	MemberAccess	dev -> page_procs . install		11045601	1					
ANR	11045649	PtrMemberAccess	dev -> page_procs		11045601	0					
ANR	11045650	Identifier	dev		11045601	0					
ANR	11045651	Identifier	page_procs		11045601	1					
ANR	11045652	Identifier	install		11045601	1					
ANR	11045653	ArgumentList	dev		11045601	1					
ANR	11045654	Argument	dev		11045601	0					
ANR	11045655	Identifier	dev		11045601	0					
ANR	11045656	Argument	igs		11045601	1					
ANR	11045657	Identifier	igs		11045601	0					
ANR	11045658	IfStatement	if ( code < 0 )		11045601	1					
ANR	11045659	Condition	code < 0	141:12:3553:3560	11045601	0	True				
ANR	11045660	RelationalExpression	code < 0		11045601	0		<			
ANR	11045661	Identifier	code		11045601	0					
ANR	11045662	PrimaryExpression	0		11045601	1					
ANR	11045663	ReturnStatement	return code ;	142:12:3575:3586	11045601	1	True				
ANR	11045664	Identifier	code		11045601	0					
ANR	11045665	ReturnStatement	return 0 ;	144:4:3598:3606	11045601	2	True				
ANR	11045666	PrimaryExpression	0		11045601	0					
ANR	11045667	ReturnType	static int		11045601	1					
ANR	11045668	Identifier	zcallinstall		11045601	2					
ANR	11045669	ParameterList	i_ctx_t * i_ctx_p		11045601	3					
ANR	11045670	Parameter	i_ctx_t * i_ctx_p	134:13:3354:3369	11045601	0	True				
ANR	11045671	ParameterType	i_ctx_t *		11045601	0					
ANR	11045672	Identifier	i_ctx_p		11045601	1					
ANR	11045673	CFGEntryNode	ENTRY		11045601		True				
ANR	11045674	CFGExitNode	EXIT		11045601		True				
ANR	11045675	Symbol	* dev		11045601						
ANR	11045676	Symbol	"* dev_proc ( dev , get_page_device )"		11045601						
ANR	11045677	Symbol	dev -> page_procs . install		11045601						
ANR	11045678	Symbol	code		11045601						
ANR	11045679	Symbol	* dev_proc		11045601						
ANR	11045680	Symbol	gs_currentdevice		11045601						
ANR	11045681	Symbol	* dev -> page_procs		11045601						
ANR	11045682	Symbol	* * dev		11045601						
ANR	11045683	Symbol	get_page_device		11045601						
ANR	11045684	Symbol	dev -> page_procs		11045601						
ANR	11045685	Symbol	* dev -> page_procs . install		11045601						
ANR	11045686	Symbol	igs		11045601						
ANR	11045687	Symbol	dev		11045601						
ANR	11045688	Symbol	i_ctx_p		11045601						
ANR	11045689	Symbol	dev_proc		11045601						
ANR	11045690	Function	zcallbeginpage	148:0:3651:3998							
ANR	11045691	FunctionDef	zcallbeginpage (i_ctx_t * i_ctx_p)		11045690	0					
ANR	11045692	CompoundStatement		150:0:3695:3998	11045690	0					
ANR	11045693	IdentifierDeclStatement	os_ptr op = osp ;	151:4:3701:3716	11045690	0	True				
ANR	11045694	IdentifierDecl	op = osp		11045690	0					
ANR	11045695	IdentifierDeclType	os_ptr		11045690	0					
ANR	11045696	Identifier	op		11045690	1					
ANR	11045697	AssignmentExpression	op = osp		11045690	2		=			
ANR	11045698	Identifier	osp		11045690	0					
ANR	11045699	Identifier	osp		11045690	1					
ANR	11045700	IdentifierDeclStatement	gx_device * dev = gs_currentdevice ( igs ) ;	152:4:3722:3760	11045690	1	True				
ANR	11045701	IdentifierDecl	* dev = gs_currentdevice ( igs )		11045690	0					
ANR	11045702	IdentifierDeclType	gx_device *		11045690	0					
ANR	11045703	Identifier	dev		11045690	1					
ANR	11045704	AssignmentExpression	* dev = gs_currentdevice ( igs )		11045690	2		=			
ANR	11045705	Identifier	dev		11045690	0					
ANR	11045706	CallExpression	gs_currentdevice ( igs )		11045690	1					
ANR	11045707	Callee	gs_currentdevice		11045690	0					
ANR	11045708	Identifier	gs_currentdevice		11045690	0					
ANR	11045709	ArgumentList	igs		11045690	1					
ANR	11045710	Argument	igs		11045690	0					
ANR	11045711	Identifier	igs		11045690	0					
ANR	11045712	ExpressionStatement	"check_type ( * op , t_integer )"	154:4:3767:3793	11045690	2	True				
ANR	11045713	CallExpression	"check_type ( * op , t_integer )"		11045690	0					
ANR	11045714	Callee	check_type		11045690	0					
ANR	11045715	Identifier	check_type		11045690	0					
ANR	11045716	ArgumentList	* op		11045690	1					
ANR	11045717	Argument	* op		11045690	0					
ANR	11045718	UnaryOperationExpression	* op		11045690	0					
ANR	11045719	UnaryOperator	*		11045690	0					
ANR	11045720	Identifier	op		11045690	1					
ANR	11045721	Argument	t_integer		11045690	1					
ANR	11045722	Identifier	t_integer		11045690	0					
ANR	11045723	IfStatement	"if ( ( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0 )"		11045690	3					
ANR	11045724	Condition	"( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0"	155:8:3803:3853	11045690	0	True				
ANR	11045725	EqualityExpression	"( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0"		11045690	0		!=			
ANR	11045726	AssignmentExpression	"dev = ( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045690	0		=			
ANR	11045727	Identifier	dev		11045690	0					
ANR	11045728	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045690	1					
ANR	11045729	Callee	"* dev_proc ( dev , get_page_device )"		11045690	0					
ANR	11045730	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		11045690	0					
ANR	11045731	UnaryOperator	*		11045690	0					
ANR	11045732	CallExpression	"dev_proc ( dev , get_page_device )"		11045690	1					
ANR	11045733	Callee	dev_proc		11045690	0					
ANR	11045734	Identifier	dev_proc		11045690	0					
ANR	11045735	ArgumentList	dev		11045690	1					
ANR	11045736	Argument	dev		11045690	0					
ANR	11045737	Identifier	dev		11045690	0					
ANR	11045738	Argument	get_page_device		11045690	1					
ANR	11045739	Identifier	get_page_device		11045690	0					
ANR	11045740	ArgumentList	dev		11045690	1					
ANR	11045741	Argument	dev		11045690	0					
ANR	11045742	Identifier	dev		11045690	0					
ANR	11045743	PrimaryExpression	0		11045690	1					
ANR	11045744	CompoundStatement		7:8:170:220	11045690	1					
ANR	11045745	IdentifierDeclStatement	"int code = ( * dev -> page_procs . begin_page ) ( dev , igs ) ;"	156:8:3866:3916	11045690	0	True				
ANR	11045746	IdentifierDecl	"code = ( * dev -> page_procs . begin_page ) ( dev , igs )"		11045690	0					
ANR	11045747	IdentifierDeclType	int		11045690	0					
ANR	11045748	Identifier	code		11045690	1					
ANR	11045749	AssignmentExpression	"code = ( * dev -> page_procs . begin_page ) ( dev , igs )"		11045690	2		=			
ANR	11045750	Identifier	code		11045690	0					
ANR	11045751	CallExpression	"( * dev -> page_procs . begin_page ) ( dev , igs )"		11045690	1					
ANR	11045752	Callee	* dev -> page_procs . begin_page		11045690	0					
ANR	11045753	UnaryOperationExpression	* dev -> page_procs . begin_page		11045690	0					
ANR	11045754	UnaryOperator	*		11045690	0					
ANR	11045755	MemberAccess	dev -> page_procs . begin_page		11045690	1					
ANR	11045756	PtrMemberAccess	dev -> page_procs		11045690	0					
ANR	11045757	Identifier	dev		11045690	0					
ANR	11045758	Identifier	page_procs		11045690	1					
ANR	11045759	Identifier	begin_page		11045690	1					
ANR	11045760	ArgumentList	dev		11045690	1					
ANR	11045761	Argument	dev		11045690	0					
ANR	11045762	Identifier	dev		11045690	0					
ANR	11045763	Argument	igs		11045690	1					
ANR	11045764	Identifier	igs		11045690	0					
ANR	11045765	IfStatement	if ( code < 0 )		11045690	1					
ANR	11045766	Condition	code < 0	158:12:3931:3938	11045690	0	True				
ANR	11045767	RelationalExpression	code < 0		11045690	0		<			
ANR	11045768	Identifier	code		11045690	0					
ANR	11045769	PrimaryExpression	0		11045690	1					
ANR	11045770	ReturnStatement	return code ;	159:12:3953:3964	11045690	1	True				
ANR	11045771	Identifier	code		11045690	0					
ANR	11045772	ExpressionStatement	pop ( 1 )	161:4:3976:3982	11045690	4	True				
ANR	11045773	CallExpression	pop ( 1 )		11045690	0					
ANR	11045774	Callee	pop		11045690	0					
ANR	11045775	Identifier	pop		11045690	0					
ANR	11045776	ArgumentList	1		11045690	1					
ANR	11045777	Argument	1		11045690	0					
ANR	11045778	PrimaryExpression	1		11045690	0					
ANR	11045779	ReturnStatement	return 0 ;	162:4:3988:3996	11045690	5	True				
ANR	11045780	PrimaryExpression	0		11045690	0					
ANR	11045781	ReturnType	static int		11045690	1					
ANR	11045782	Identifier	zcallbeginpage		11045690	2					
ANR	11045783	ParameterList	i_ctx_t * i_ctx_p		11045690	3					
ANR	11045784	Parameter	i_ctx_t * i_ctx_p	149:15:3677:3692	11045690	0	True				
ANR	11045785	ParameterType	i_ctx_t *		11045690	0					
ANR	11045786	Identifier	i_ctx_p		11045690	1					
ANR	11045787	CFGEntryNode	ENTRY		11045690		True				
ANR	11045788	CFGExitNode	EXIT		11045690		True				
ANR	11045789	Symbol	* dev		11045690						
ANR	11045790	Symbol	op		11045690						
ANR	11045791	Symbol	"* dev_proc ( dev , get_page_device )"		11045690						
ANR	11045792	Symbol	dev -> page_procs . begin_page		11045690						
ANR	11045793	Symbol	code		11045690						
ANR	11045794	Symbol	* op		11045690						
ANR	11045795	Symbol	* dev_proc		11045690						
ANR	11045796	Symbol	gs_currentdevice		11045690						
ANR	11045797	Symbol	* * dev		11045690						
ANR	11045798	Symbol	* dev -> page_procs		11045690						
ANR	11045799	Symbol	osp		11045690						
ANR	11045800	Symbol	get_page_device		11045690						
ANR	11045801	Symbol	dev -> page_procs		11045690						
ANR	11045802	Symbol	dev		11045690						
ANR	11045803	Symbol	igs		11045690						
ANR	11045804	Symbol	t_integer		11045690						
ANR	11045805	Symbol	i_ctx_p		11045690						
ANR	11045806	Symbol	dev_proc		11045690						
ANR	11045807	Symbol	* dev -> page_procs . begin_page		11045690						
ANR	11045808	Function	zcallendpage	166:0:4063:4632							
ANR	11045809	FunctionDef	zcallendpage (i_ctx_t * i_ctx_p)		11045808	0					
ANR	11045810	CompoundStatement		168:0:4105:4632	11045808	0					
ANR	11045811	IdentifierDeclStatement	os_ptr op = osp ;	169:4:4111:4126	11045808	0	True				
ANR	11045812	IdentifierDecl	op = osp		11045808	0					
ANR	11045813	IdentifierDeclType	os_ptr		11045808	0					
ANR	11045814	Identifier	op		11045808	1					
ANR	11045815	AssignmentExpression	op = osp		11045808	2		=			
ANR	11045816	Identifier	osp		11045808	0					
ANR	11045817	Identifier	osp		11045808	1					
ANR	11045818	IdentifierDeclStatement	gx_device * dev = gs_currentdevice ( igs ) ;	170:4:4132:4170	11045808	1	True				
ANR	11045819	IdentifierDecl	* dev = gs_currentdevice ( igs )		11045808	0					
ANR	11045820	IdentifierDeclType	gx_device *		11045808	0					
ANR	11045821	Identifier	dev		11045808	1					
ANR	11045822	AssignmentExpression	* dev = gs_currentdevice ( igs )		11045808	2		=			
ANR	11045823	Identifier	dev		11045808	0					
ANR	11045824	CallExpression	gs_currentdevice ( igs )		11045808	1					
ANR	11045825	Callee	gs_currentdevice		11045808	0					
ANR	11045826	Identifier	gs_currentdevice		11045808	0					
ANR	11045827	ArgumentList	igs		11045808	1					
ANR	11045828	Argument	igs		11045808	0					
ANR	11045829	Identifier	igs		11045808	0					
ANR	11045830	IdentifierDeclStatement	int code ;	171:4:4176:4184	11045808	2	True				
ANR	11045831	IdentifierDecl	code		11045808	0					
ANR	11045832	IdentifierDeclType	int		11045808	0					
ANR	11045833	Identifier	code		11045808	1					
ANR	11045834	ExpressionStatement	"check_type ( op [ - 1 ] , t_integer )"	173:4:4191:4220	11045808	3	True				
ANR	11045835	CallExpression	"check_type ( op [ - 1 ] , t_integer )"		11045808	0					
ANR	11045836	Callee	check_type		11045808	0					
ANR	11045837	Identifier	check_type		11045808	0					
ANR	11045838	ArgumentList	op [ - 1 ]		11045808	1					
ANR	11045839	Argument	op [ - 1 ]		11045808	0					
ANR	11045840	ArrayIndexing	op [ - 1 ]		11045808	0					
ANR	11045841	Identifier	op		11045808	0					
ANR	11045842	UnaryOperationExpression	- 1		11045808	1					
ANR	11045843	UnaryOperator	-		11045808	0					
ANR	11045844	PrimaryExpression	1		11045808	1					
ANR	11045845	Argument	t_integer		11045808	1					
ANR	11045846	Identifier	t_integer		11045808	0					
ANR	11045847	ExpressionStatement	"check_type ( * op , t_integer )"	174:4:4226:4252	11045808	4	True				
ANR	11045848	CallExpression	"check_type ( * op , t_integer )"		11045808	0					
ANR	11045849	Callee	check_type		11045808	0					
ANR	11045850	Identifier	check_type		11045808	0					
ANR	11045851	ArgumentList	* op		11045808	1					
ANR	11045852	Argument	* op		11045808	0					
ANR	11045853	UnaryOperationExpression	* op		11045808	0					
ANR	11045854	UnaryOperator	*		11045808	0					
ANR	11045855	Identifier	op		11045808	1					
ANR	11045856	Argument	t_integer		11045808	1					
ANR	11045857	Identifier	t_integer		11045808	0					
ANR	11045858	IfStatement	"if ( ( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0 )"		11045808	5					
ANR	11045859	Condition	"( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0"	175:8:4262:4312	11045808	0	True				
ANR	11045860	EqualityExpression	"( dev = ( * dev_proc ( dev , get_page_device ) ) ( dev ) ) != 0"		11045808	0		!=			
ANR	11045861	AssignmentExpression	"dev = ( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045808	0		=			
ANR	11045862	Identifier	dev		11045808	0					
ANR	11045863	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		11045808	1					
ANR	11045864	Callee	"* dev_proc ( dev , get_page_device )"		11045808	0					
ANR	11045865	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		11045808	0					
ANR	11045866	UnaryOperator	*		11045808	0					
ANR	11045867	CallExpression	"dev_proc ( dev , get_page_device )"		11045808	1					
ANR	11045868	Callee	dev_proc		11045808	0					
ANR	11045869	Identifier	dev_proc		11045808	0					
ANR	11045870	ArgumentList	dev		11045808	1					
ANR	11045871	Argument	dev		11045808	0					
ANR	11045872	Identifier	dev		11045808	0					
ANR	11045873	Argument	get_page_device		11045808	1					
ANR	11045874	Identifier	get_page_device		11045808	0					
ANR	11045875	ArgumentList	dev		11045808	1					
ANR	11045876	Argument	dev		11045808	0					
ANR	11045877	Identifier	dev		11045808	0					
ANR	11045878	PrimaryExpression	0		11045808	1					
ANR	11045879	CompoundStatement		8:61:209:209	11045808	1					
ANR	11045880	ExpressionStatement	"code = ( * dev -> page_procs . end_page ) ( dev , ( int ) op -> value . intval , igs )"	176:8:4325:4392	11045808	0	True				
ANR	11045881	AssignmentExpression	"code = ( * dev -> page_procs . end_page ) ( dev , ( int ) op -> value . intval , igs )"		11045808	0		=			
ANR	11045882	Identifier	code		11045808	0					
ANR	11045883	CallExpression	"( * dev -> page_procs . end_page ) ( dev , ( int ) op -> value . intval , igs )"		11045808	1					
ANR	11045884	Callee	* dev -> page_procs . end_page		11045808	0					
ANR	11045885	UnaryOperationExpression	* dev -> page_procs . end_page		11045808	0					
ANR	11045886	UnaryOperator	*		11045808	0					
ANR	11045887	MemberAccess	dev -> page_procs . end_page		11045808	1					
ANR	11045888	PtrMemberAccess	dev -> page_procs		11045808	0					
ANR	11045889	Identifier	dev		11045808	0					
ANR	11045890	Identifier	page_procs		11045808	1					
ANR	11045891	Identifier	end_page		11045808	1					
ANR	11045892	ArgumentList	dev		11045808	1					
ANR	11045893	Argument	dev		11045808	0					
ANR	11045894	Identifier	dev		11045808	0					
ANR	11045895	Argument	( int ) op -> value . intval		11045808	1					
ANR	11045896	CastExpression	( int ) op -> value . intval		11045808	0					
ANR	11045897	CastTarget	int		11045808	0					
ANR	11045898	MemberAccess	op -> value . intval		11045808	1					
ANR	11045899	PtrMemberAccess	op -> value		11045808	0					
ANR	11045900	Identifier	op		11045808	0					
ANR	11045901	Identifier	value		11045808	1					
ANR	11045902	Identifier	intval		11045808	1					
ANR	11045903	Argument	igs		11045808	2					
ANR	11045904	Identifier	igs		11045808	0					
ANR	11045905	IfStatement	if ( code < 0 )		11045808	1					
ANR	11045906	Condition	code < 0	177:12:4406:4413	11045808	0	True				
ANR	11045907	RelationalExpression	code < 0		11045808	0		<			
ANR	11045908	Identifier	code		11045808	0					
ANR	11045909	PrimaryExpression	0		11045808	1					
ANR	11045910	ReturnStatement	return code ;	178:12:4428:4439	11045808	1	True				
ANR	11045911	Identifier	code		11045808	0					
ANR	11045912	IfStatement	if ( code > 1 )		11045808	2					
ANR	11045913	Condition	code > 1	179:12:4453:4460	11045808	0	True				
ANR	11045914	RelationalExpression	code > 1		11045808	0		>			
ANR	11045915	Identifier	code		11045808	0					
ANR	11045916	PrimaryExpression	1		11045808	1					
ANR	11045917	ExpressionStatement	return_error ( gs_error_rangecheck )	180:12:4475:4508	11045808	1	True				
ANR	11045918	CallExpression	return_error ( gs_error_rangecheck )		11045808	0					
ANR	11045919	Callee	return_error		11045808	0					
ANR	11045920	Identifier	return_error		11045808	0					
ANR	11045921	ArgumentList	gs_error_rangecheck		11045808	1					
ANR	11045922	Argument	gs_error_rangecheck		11045808	0					
ANR	11045923	Identifier	gs_error_rangecheck		11045808	0					
ANR	11045924	ElseStatement	else		11045808	0					
ANR	11045925	CompoundStatement		14:11:415:415	11045808	0					
ANR	11045926	ExpressionStatement	code = ( op -> value . intval == 2 ? 0 : 1 )	182:8:4531:4569	11045808	0	True				
ANR	11045927	AssignmentExpression	code = ( op -> value . intval == 2 ? 0 : 1 )		11045808	0		=			
ANR	11045928	Identifier	code		11045808	0					
ANR	11045929	ConditionalExpression	op -> value . intval == 2 ? 0 : 1		11045808	1					
ANR	11045930	Condition	op -> value . intval == 2		11045808	0					
ANR	11045931	EqualityExpression	op -> value . intval == 2		11045808	0		==			
ANR	11045932	MemberAccess	op -> value . intval		11045808	0					
ANR	11045933	PtrMemberAccess	op -> value		11045808	0					
ANR	11045934	Identifier	op		11045808	0					
ANR	11045935	Identifier	value		11045808	1					
ANR	11045936	Identifier	intval		11045808	1					
ANR	11045937	PrimaryExpression	2		11045808	1					
ANR	11045938	PrimaryExpression	0		11045808	1					
ANR	11045939	PrimaryExpression	1		11045808	2					
ANR	11045940	ExpressionStatement	"make_bool ( op - 1 , code )"	184:4:4581:4604	11045808	6	True				
ANR	11045941	CallExpression	"make_bool ( op - 1 , code )"		11045808	0					
ANR	11045942	Callee	make_bool		11045808	0					
ANR	11045943	Identifier	make_bool		11045808	0					
ANR	11045944	ArgumentList	op - 1		11045808	1					
ANR	11045945	Argument	op - 1		11045808	0					
ANR	11045946	AdditiveExpression	op - 1		11045808	0		-			
ANR	11045947	Identifier	op		11045808	0					
ANR	11045948	PrimaryExpression	1		11045808	1					
ANR	11045949	Argument	code		11045808	1					
ANR	11045950	Identifier	code		11045808	0					
ANR	11045951	ExpressionStatement	pop ( 1 )	185:4:4610:4616	11045808	7	True				
ANR	11045952	CallExpression	pop ( 1 )		11045808	0					
ANR	11045953	Callee	pop		11045808	0					
ANR	11045954	Identifier	pop		11045808	0					
ANR	11045955	ArgumentList	1		11045808	1					
ANR	11045956	Argument	1		11045808	0					
ANR	11045957	PrimaryExpression	1		11045808	0					
ANR	11045958	ReturnStatement	return 0 ;	186:4:4622:4630	11045808	8	True				
ANR	11045959	PrimaryExpression	0		11045808	0					
ANR	11045960	ReturnType	static int		11045808	1					
ANR	11045961	Identifier	zcallendpage		11045808	2					
ANR	11045962	ParameterList	i_ctx_t * i_ctx_p		11045808	3					
ANR	11045963	Parameter	i_ctx_t * i_ctx_p	167:13:4087:4102	11045808	0	True				
ANR	11045964	ParameterType	i_ctx_t *		11045808	0					
ANR	11045965	Identifier	i_ctx_p		11045808	1					
ANR	11045966	CFGEntryNode	ENTRY		11045808		True				
ANR	11045967	CFGExitNode	EXIT		11045808		True				
ANR	11045968	Symbol	* dev		11045808						
ANR	11045969	Symbol	op		11045808						
ANR	11045970	Symbol	"* dev_proc ( dev , get_page_device )"		11045808						
ANR	11045971	Symbol	code		11045808						
ANR	11045972	Symbol	* op		11045808						
ANR	11045973	Symbol	gs_error_rangecheck		11045808						
ANR	11045974	Symbol	* dev_proc		11045808						
ANR	11045975	Symbol	dev -> page_procs . end_page		11045808						
ANR	11045976	Symbol	gs_currentdevice		11045808						
ANR	11045977	Symbol	* dev -> page_procs		11045808						
ANR	11045978	Symbol	* * dev		11045808						
ANR	11045979	Symbol	osp		11045808						
ANR	11045980	Symbol	get_page_device		11045808						
ANR	11045981	Symbol	* dev -> page_procs . end_page		11045808						
ANR	11045982	Symbol	dev -> page_procs		11045808						
ANR	11045983	Symbol	igs		11045808						
ANR	11045984	Symbol	dev		11045808						
ANR	11045985	Symbol	t_integer		11045808						
ANR	11045986	Symbol	i_ctx_p		11045808						
ANR	11045987	Symbol	dev_proc		11045808						
ANR	11045988	Symbol	op -> value		11045808						
ANR	11045989	Symbol	op -> value . intval		11045808						
ANR	11045990	Function	save_page_device	198:0:5087:5300							
ANR	11045991	FunctionDef	save_page_device (gs_gstate * pgs)		11045990	0					
ANR	11045992	CompoundStatement		200:0:5132:5300	11045990	0					
ANR	11045993	ReturnStatement	"return ( r_has_type ( & gs_int_gstate ( pgs ) -> pagedevice , t_null ) && ( * dev_proc ( gs_currentdevice ( pgs ) , get_page_device ) ) ( gs_currentdevice ( pgs ) ) != 0 ) ;"	201:4:5138:5298	11045990	0	True				
ANR	11045994	AndExpression	"r_has_type ( & gs_int_gstate ( pgs ) -> pagedevice , t_null ) && ( * dev_proc ( gs_currentdevice ( pgs ) , get_page_device ) ) ( gs_currentdevice ( pgs ) ) != 0"		11045990	0		&&			
ANR	11045995	CallExpression	"r_has_type ( & gs_int_gstate ( pgs ) -> pagedevice , t_null )"		11045990	0					
ANR	11045996	Callee	r_has_type		11045990	0					
ANR	11045997	Identifier	r_has_type		11045990	0					
ANR	11045998	ArgumentList	& gs_int_gstate ( pgs ) -> pagedevice		11045990	1					
ANR	11045999	Argument	& gs_int_gstate ( pgs ) -> pagedevice		11045990	0					
ANR	11046000	UnaryOperationExpression	& gs_int_gstate ( pgs ) -> pagedevice		11045990	0					
ANR	11046001	UnaryOperator	&		11045990	0					
ANR	11046002	PtrMemberAccess	gs_int_gstate ( pgs ) -> pagedevice		11045990	1					
ANR	11046003	CallExpression	gs_int_gstate ( pgs )		11045990	0					
ANR	11046004	Callee	gs_int_gstate		11045990	0					
ANR	11046005	Identifier	gs_int_gstate		11045990	0					
ANR	11046006	ArgumentList	pgs		11045990	1					
ANR	11046007	Argument	pgs		11045990	0					
ANR	11046008	Identifier	pgs		11045990	0					
ANR	11046009	Identifier	pagedevice		11045990	1					
ANR	11046010	Argument	t_null		11045990	1					
ANR	11046011	Identifier	t_null		11045990	0					
ANR	11046012	EqualityExpression	"( * dev_proc ( gs_currentdevice ( pgs ) , get_page_device ) ) ( gs_currentdevice ( pgs ) ) != 0"		11045990	1		!=			
ANR	11046013	CallExpression	"( * dev_proc ( gs_currentdevice ( pgs ) , get_page_device ) ) ( gs_currentdevice ( pgs ) )"		11045990	0					
ANR	11046014	Callee	"* dev_proc ( gs_currentdevice ( pgs ) , get_page_device )"		11045990	0					
ANR	11046015	UnaryOperationExpression	"* dev_proc ( gs_currentdevice ( pgs ) , get_page_device )"		11045990	0					
ANR	11046016	UnaryOperator	*		11045990	0					
ANR	11046017	CallExpression	"dev_proc ( gs_currentdevice ( pgs ) , get_page_device )"		11045990	1					
ANR	11046018	Callee	dev_proc		11045990	0					
ANR	11046019	Identifier	dev_proc		11045990	0					
ANR	11046020	ArgumentList	gs_currentdevice ( pgs )		11045990	1					
ANR	11046021	Argument	gs_currentdevice ( pgs )		11045990	0					
ANR	11046022	CallExpression	gs_currentdevice ( pgs )		11045990	0					
ANR	11046023	Callee	gs_currentdevice		11045990	0					
ANR	11046024	Identifier	gs_currentdevice		11045990	0					
ANR	11046025	ArgumentList	pgs		11045990	1					
ANR	11046026	Argument	pgs		11045990	0					
ANR	11046027	Identifier	pgs		11045990	0					
ANR	11046028	Argument	get_page_device		11045990	1					
ANR	11046029	Identifier	get_page_device		11045990	0					
ANR	11046030	ArgumentList	gs_currentdevice ( pgs )		11045990	1					
ANR	11046031	Argument	gs_currentdevice ( pgs )		11045990	0					
ANR	11046032	CallExpression	gs_currentdevice ( pgs )		11045990	0					
ANR	11046033	Callee	gs_currentdevice		11045990	0					
ANR	11046034	Identifier	gs_currentdevice		11045990	0					
ANR	11046035	ArgumentList	pgs		11045990	1					
ANR	11046036	Argument	pgs		11045990	0					
ANR	11046037	Identifier	pgs		11045990	0					
ANR	11046038	PrimaryExpression	0		11045990	1					
ANR	11046039	ReturnType	static bool		11045990	1					
ANR	11046040	Identifier	save_page_device		11045990	2					
ANR	11046041	ParameterList	gs_gstate * pgs		11045990	3					
ANR	11046042	Parameter	gs_gstate * pgs	199:17:5116:5129	11045990	0	True				
ANR	11046043	ParameterType	gs_gstate *		11045990	0					
ANR	11046044	Identifier	pgs		11045990	1					
ANR	11046045	CFGEntryNode	ENTRY		11045990		True				
ANR	11046046	CFGExitNode	EXIT		11045990		True				
ANR	11046047	Symbol	t_null		11045990						
ANR	11046048	Symbol	r_has_type		11045990						
ANR	11046049	Symbol	"* dev_proc ( gs_currentdevice ( pgs ) , get_page_device )"		11045990						
ANR	11046050	Symbol	* dev_proc		11045990						
ANR	11046051	Symbol	dev_proc		11045990						
ANR	11046052	Symbol	gs_currentdevice		11045990						
ANR	11046053	Symbol	pgs		11045990						
ANR	11046054	Symbol	& gs_int_gstate ( pgs ) -> pagedevice		11045990						
ANR	11046055	Symbol	get_page_device		11045990						
ANR	11046056	Symbol	gs_int_gstate		11045990						
ANR	11046057	Function	z2gsave	207:0:5319:5474							
ANR	11046058	FunctionDef	z2gsave (i_ctx_t * i_ctx_p)		11046057	0					
ANR	11046059	CompoundStatement		209:0:5356:5474	11046057	0					
ANR	11046060	IfStatement	if ( ! save_page_device ( igs ) )		11046057	0					
ANR	11046061	Condition	! save_page_device ( igs )	210:8:5366:5387	11046057	0	True				
ANR	11046062	UnaryOperationExpression	! save_page_device ( igs )		11046057	0					
ANR	11046063	UnaryOperator	!		11046057	0					
ANR	11046064	CallExpression	save_page_device ( igs )		11046057	1					
ANR	11046065	Callee	save_page_device		11046057	0					
ANR	11046066	Identifier	save_page_device		11046057	0					
ANR	11046067	ArgumentList	igs		11046057	1					
ANR	11046068	Argument	igs		11046057	0					
ANR	11046069	Identifier	igs		11046057	0					
ANR	11046070	ReturnStatement	return gs_gsave ( igs ) ;	211:8:5398:5418	11046057	1	True				
ANR	11046071	CallExpression	gs_gsave ( igs )		11046057	0					
ANR	11046072	Callee	gs_gsave		11046057	0					
ANR	11046073	Identifier	gs_gsave		11046057	0					
ANR	11046074	ArgumentList	igs		11046057	1					
ANR	11046075	Argument	igs		11046057	0					
ANR	11046076	Identifier	igs		11046057	0					
ANR	11046077	ReturnStatement	"return push_callout ( i_ctx_p , ""%gsavepagedevice"" ) ;"	212:4:5424:5472	11046057	1	True				
ANR	11046078	CallExpression	"push_callout ( i_ctx_p , ""%gsavepagedevice"" )"		11046057	0					
ANR	11046079	Callee	push_callout		11046057	0					
ANR	11046080	Identifier	push_callout		11046057	0					
ANR	11046081	ArgumentList	i_ctx_p		11046057	1					
ANR	11046082	Argument	i_ctx_p		11046057	0					
ANR	11046083	Identifier	i_ctx_p		11046057	0					
ANR	11046084	Argument	"""%gsavepagedevice"""		11046057	1					
ANR	11046085	PrimaryExpression	"""%gsavepagedevice"""		11046057	0					
ANR	11046086	ReturnType	static int		11046057	1					
ANR	11046087	Identifier	z2gsave		11046057	2					
ANR	11046088	ParameterList	i_ctx_t * i_ctx_p		11046057	3					
ANR	11046089	Parameter	i_ctx_t * i_ctx_p	208:8:5338:5353	11046057	0	True				
ANR	11046090	ParameterType	i_ctx_t *		11046057	0					
ANR	11046091	Identifier	i_ctx_p		11046057	1					
ANR	11046092	CFGEntryNode	ENTRY		11046057		True				
ANR	11046093	CFGExitNode	EXIT		11046057		True				
ANR	11046094	Symbol	gs_gsave		11046057						
ANR	11046095	Symbol	igs		11046057						
ANR	11046096	Symbol	i_ctx_p		11046057						
ANR	11046097	Symbol	push_callout		11046057						
ANR	11046098	Symbol	save_page_device		11046057						
ANR	11046099	Function	z2save	216:0:5492:5646							
ANR	11046100	FunctionDef	z2save (i_ctx_t * i_ctx_p)		11046099	0					
ANR	11046101	CompoundStatement		218:0:5528:5646	11046099	0					
ANR	11046102	IfStatement	if ( ! save_page_device ( igs ) )		11046099	0					
ANR	11046103	Condition	! save_page_device ( igs )	219:8:5538:5559	11046099	0	True				
ANR	11046104	UnaryOperationExpression	! save_page_device ( igs )		11046099	0					
ANR	11046105	UnaryOperator	!		11046099	0					
ANR	11046106	CallExpression	save_page_device ( igs )		11046099	1					
ANR	11046107	Callee	save_page_device		11046099	0					
ANR	11046108	Identifier	save_page_device		11046099	0					
ANR	11046109	ArgumentList	igs		11046099	1					
ANR	11046110	Argument	igs		11046099	0					
ANR	11046111	Identifier	igs		11046099	0					
ANR	11046112	ReturnStatement	return zsave ( i_ctx_p ) ;	220:8:5570:5591	11046099	1	True				
ANR	11046113	CallExpression	zsave ( i_ctx_p )		11046099	0					
ANR	11046114	Callee	zsave		11046099	0					
ANR	11046115	Identifier	zsave		11046099	0					
ANR	11046116	ArgumentList	i_ctx_p		11046099	1					
ANR	11046117	Argument	i_ctx_p		11046099	0					
ANR	11046118	Identifier	i_ctx_p		11046099	0					
ANR	11046119	ReturnStatement	"return push_callout ( i_ctx_p , ""%savepagedevice"" ) ;"	221:4:5597:5644	11046099	1	True				
ANR	11046120	CallExpression	"push_callout ( i_ctx_p , ""%savepagedevice"" )"		11046099	0					
ANR	11046121	Callee	push_callout		11046099	0					
ANR	11046122	Identifier	push_callout		11046099	0					
ANR	11046123	ArgumentList	i_ctx_p		11046099	1					
ANR	11046124	Argument	i_ctx_p		11046099	0					
ANR	11046125	Identifier	i_ctx_p		11046099	0					
ANR	11046126	Argument	"""%savepagedevice"""		11046099	1					
ANR	11046127	PrimaryExpression	"""%savepagedevice"""		11046099	0					
ANR	11046128	ReturnType	static int		11046099	1					
ANR	11046129	Identifier	z2save		11046099	2					
ANR	11046130	ParameterList	i_ctx_t * i_ctx_p		11046099	3					
ANR	11046131	Parameter	i_ctx_t * i_ctx_p	217:7:5510:5525	11046099	0	True				
ANR	11046132	ParameterType	i_ctx_t *		11046099	0					
ANR	11046133	Identifier	i_ctx_p		11046099	1					
ANR	11046134	CFGEntryNode	ENTRY		11046099		True				
ANR	11046135	CFGExitNode	EXIT		11046099		True				
ANR	11046136	Symbol	igs		11046099						
ANR	11046137	Symbol	i_ctx_p		11046099						
ANR	11046138	Symbol	push_callout		11046099						
ANR	11046139	Symbol	save_page_device		11046099						
ANR	11046140	Symbol	zsave		11046099						
ANR	11046141	Function	z2gstate	225:0:5673:5833							
ANR	11046142	FunctionDef	z2gstate (i_ctx_t * i_ctx_p)		11046141	0					
ANR	11046143	CompoundStatement		227:0:5711:5833	11046141	0					
ANR	11046144	IfStatement	if ( ! save_page_device ( igs ) )		11046141	0					
ANR	11046145	Condition	! save_page_device ( igs )	228:8:5721:5742	11046141	0	True				
ANR	11046146	UnaryOperationExpression	! save_page_device ( igs )		11046141	0					
ANR	11046147	UnaryOperator	!		11046141	0					
ANR	11046148	CallExpression	save_page_device ( igs )		11046141	1					
ANR	11046149	Callee	save_page_device		11046141	0					
ANR	11046150	Identifier	save_page_device		11046141	0					
ANR	11046151	ArgumentList	igs		11046141	1					
ANR	11046152	Argument	igs		11046141	0					
ANR	11046153	Identifier	igs		11046141	0					
ANR	11046154	ReturnStatement	return zgstate ( i_ctx_p ) ;	229:8:5753:5776	11046141	1	True				
ANR	11046155	CallExpression	zgstate ( i_ctx_p )		11046141	0					
ANR	11046156	Callee	zgstate		11046141	0					
ANR	11046157	Identifier	zgstate		11046141	0					
ANR	11046158	ArgumentList	i_ctx_p		11046141	1					
ANR	11046159	Argument	i_ctx_p		11046141	0					
ANR	11046160	Identifier	i_ctx_p		11046141	0					
ANR	11046161	ReturnStatement	"return push_callout ( i_ctx_p , ""%gstatepagedevice"" ) ;"	230:4:5782:5831	11046141	1	True				
ANR	11046162	CallExpression	"push_callout ( i_ctx_p , ""%gstatepagedevice"" )"		11046141	0					
ANR	11046163	Callee	push_callout		11046141	0					
ANR	11046164	Identifier	push_callout		11046141	0					
ANR	11046165	ArgumentList	i_ctx_p		11046141	1					
ANR	11046166	Argument	i_ctx_p		11046141	0					
ANR	11046167	Identifier	i_ctx_p		11046141	0					
ANR	11046168	Argument	"""%gstatepagedevice"""		11046141	1					
ANR	11046169	PrimaryExpression	"""%gstatepagedevice"""		11046141	0					
ANR	11046170	ReturnType	static int		11046141	1					
ANR	11046171	Identifier	z2gstate		11046141	2					
ANR	11046172	ParameterList	i_ctx_t * i_ctx_p		11046141	3					
ANR	11046173	Parameter	i_ctx_t * i_ctx_p	226:9:5693:5708	11046141	0	True				
ANR	11046174	ParameterType	i_ctx_t *		11046141	0					
ANR	11046175	Identifier	i_ctx_p		11046141	1					
ANR	11046176	CFGEntryNode	ENTRY		11046141		True				
ANR	11046177	CFGExitNode	EXIT		11046141		True				
ANR	11046178	Symbol	zgstate		11046141						
ANR	11046179	Symbol	igs		11046141						
ANR	11046180	Symbol	i_ctx_p		11046141						
ANR	11046181	Symbol	push_callout		11046141						
ANR	11046182	Symbol	save_page_device		11046141						
ANR	11046183	Function	z2copy_gstate	234:0:5877:6051							
ANR	11046184	FunctionDef	z2copy_gstate (i_ctx_t * i_ctx_p)		11046183	0					
ANR	11046185	CompoundStatement		236:0:5920:6051	11046183	0					
ANR	11046186	IfStatement	if ( ! save_page_device ( igs ) )		11046183	0					
ANR	11046187	Condition	! save_page_device ( igs )	237:8:5930:5951	11046183	0	True				
ANR	11046188	UnaryOperationExpression	! save_page_device ( igs )		11046183	0					
ANR	11046189	UnaryOperator	!		11046183	0					
ANR	11046190	CallExpression	save_page_device ( igs )		11046183	1					
ANR	11046191	Callee	save_page_device		11046183	0					
ANR	11046192	Identifier	save_page_device		11046183	0					
ANR	11046193	ArgumentList	igs		11046183	1					
ANR	11046194	Argument	igs		11046183	0					
ANR	11046195	Identifier	igs		11046183	0					
ANR	11046196	ReturnStatement	return zcopy_gstate ( i_ctx_p ) ;	238:8:5962:5990	11046183	1	True				
ANR	11046197	CallExpression	zcopy_gstate ( i_ctx_p )		11046183	0					
ANR	11046198	Callee	zcopy_gstate		11046183	0					
ANR	11046199	Identifier	zcopy_gstate		11046183	0					
ANR	11046200	ArgumentList	i_ctx_p		11046183	1					
ANR	11046201	Argument	i_ctx_p		11046183	0					
ANR	11046202	Identifier	i_ctx_p		11046183	0					
ANR	11046203	ReturnStatement	"return push_callout ( i_ctx_p , ""%copygstatepagedevice"" ) ;"	239:4:5996:6049	11046183	1	True				
ANR	11046204	CallExpression	"push_callout ( i_ctx_p , ""%copygstatepagedevice"" )"		11046183	0					
ANR	11046205	Callee	push_callout		11046183	0					
ANR	11046206	Identifier	push_callout		11046183	0					
ANR	11046207	ArgumentList	i_ctx_p		11046183	1					
ANR	11046208	Argument	i_ctx_p		11046183	0					
ANR	11046209	Identifier	i_ctx_p		11046183	0					
ANR	11046210	Argument	"""%copygstatepagedevice"""		11046183	1					
ANR	11046211	PrimaryExpression	"""%copygstatepagedevice"""		11046183	0					
ANR	11046212	ReturnType	static int		11046183	1					
ANR	11046213	Identifier	z2copy_gstate		11046183	2					
ANR	11046214	ParameterList	i_ctx_t * i_ctx_p		11046183	3					
ANR	11046215	Parameter	i_ctx_t * i_ctx_p	235:14:5902:5917	11046183	0	True				
ANR	11046216	ParameterType	i_ctx_t *		11046183	0					
ANR	11046217	Identifier	i_ctx_p		11046183	1					
ANR	11046218	CFGEntryNode	ENTRY		11046183		True				
ANR	11046219	CFGExitNode	EXIT		11046183		True				
ANR	11046220	Symbol	igs		11046183						
ANR	11046221	Symbol	zcopy_gstate		11046183						
ANR	11046222	Symbol	i_ctx_p		11046183						
ANR	11046223	Symbol	push_callout		11046183						
ANR	11046224	Symbol	save_page_device		11046183						
ANR	11046225	Function	z2currentgstate	243:0:6092:6273							
ANR	11046226	FunctionDef	z2currentgstate (i_ctx_t * i_ctx_p)		11046225	0					
ANR	11046227	CompoundStatement		245:0:6137:6273	11046225	0					
ANR	11046228	IfStatement	if ( ! save_page_device ( igs ) )		11046225	0					
ANR	11046229	Condition	! save_page_device ( igs )	246:8:6147:6168	11046225	0	True				
ANR	11046230	UnaryOperationExpression	! save_page_device ( igs )		11046225	0					
ANR	11046231	UnaryOperator	!		11046225	0					
ANR	11046232	CallExpression	save_page_device ( igs )		11046225	1					
ANR	11046233	Callee	save_page_device		11046225	0					
ANR	11046234	Identifier	save_page_device		11046225	0					
ANR	11046235	ArgumentList	igs		11046225	1					
ANR	11046236	Argument	igs		11046225	0					
ANR	11046237	Identifier	igs		11046225	0					
ANR	11046238	ReturnStatement	return zcurrentgstate ( i_ctx_p ) ;	247:8:6179:6209	11046225	1	True				
ANR	11046239	CallExpression	zcurrentgstate ( i_ctx_p )		11046225	0					
ANR	11046240	Callee	zcurrentgstate		11046225	0					
ANR	11046241	Identifier	zcurrentgstate		11046225	0					
ANR	11046242	ArgumentList	i_ctx_p		11046225	1					
ANR	11046243	Argument	i_ctx_p		11046225	0					
ANR	11046244	Identifier	i_ctx_p		11046225	0					
ANR	11046245	ReturnStatement	"return push_callout ( i_ctx_p , ""%currentgstatepagedevice"" ) ;"	248:4:6215:6271	11046225	1	True				
ANR	11046246	CallExpression	"push_callout ( i_ctx_p , ""%currentgstatepagedevice"" )"		11046225	0					
ANR	11046247	Callee	push_callout		11046225	0					
ANR	11046248	Identifier	push_callout		11046225	0					
ANR	11046249	ArgumentList	i_ctx_p		11046225	1					
ANR	11046250	Argument	i_ctx_p		11046225	0					
ANR	11046251	Identifier	i_ctx_p		11046225	0					
ANR	11046252	Argument	"""%currentgstatepagedevice"""		11046225	1					
ANR	11046253	PrimaryExpression	"""%currentgstatepagedevice"""		11046225	0					
ANR	11046254	ReturnType	static int		11046225	1					
ANR	11046255	Identifier	z2currentgstate		11046225	2					
ANR	11046256	ParameterList	i_ctx_t * i_ctx_p		11046225	3					
ANR	11046257	Parameter	i_ctx_t * i_ctx_p	244:16:6119:6134	11046225	0	True				
ANR	11046258	ParameterType	i_ctx_t *		11046225	0					
ANR	11046259	Identifier	i_ctx_p		11046225	1					
ANR	11046260	CFGEntryNode	ENTRY		11046225		True				
ANR	11046261	CFGExitNode	EXIT		11046225		True				
ANR	11046262	Symbol	igs		11046225						
ANR	11046263	Symbol	zcurrentgstate		11046225						
ANR	11046264	Symbol	i_ctx_p		11046225						
ANR	11046265	Symbol	push_callout		11046225						
ANR	11046266	Symbol	save_page_device		11046225						
ANR	11046267	Function	restore_page_device	254:0:6419:7602							
ANR	11046268	FunctionDef	"restore_page_device (const gs_gstate * pgs_old , const gs_gstate * pgs_new)"		11046267	0					
ANR	11046269	CompoundStatement		256:0:6505:7602	11046267	0					
ANR	11046270	IdentifierDeclStatement	gx_device * dev_old = gs_currentdevice ( pgs_old ) ;	257:4:6511:6557	11046267	0	True				
ANR	11046271	IdentifierDecl	* dev_old = gs_currentdevice ( pgs_old )		11046267	0					
ANR	11046272	IdentifierDeclType	gx_device *		11046267	0					
ANR	11046273	Identifier	dev_old		11046267	1					
ANR	11046274	AssignmentExpression	* dev_old = gs_currentdevice ( pgs_old )		11046267	2		=			
ANR	11046275	Identifier	dev_old		11046267	0					
ANR	11046276	CallExpression	gs_currentdevice ( pgs_old )		11046267	1					
ANR	11046277	Callee	gs_currentdevice		11046267	0					
ANR	11046278	Identifier	gs_currentdevice		11046267	0					
ANR	11046279	ArgumentList	pgs_old		11046267	1					
ANR	11046280	Argument	pgs_old		11046267	0					
ANR	11046281	Identifier	pgs_old		11046267	0					
ANR	11046282	IdentifierDeclStatement	gx_device * dev_new ;	258:4:6563:6581	11046267	1	True				
ANR	11046283	IdentifierDecl	* dev_new		11046267	0					
ANR	11046284	IdentifierDeclType	gx_device *		11046267	0					
ANR	11046285	Identifier	dev_new		11046267	1					
ANR	11046286	IdentifierDeclStatement	gx_device * dev_t1 ;	259:4:6587:6604	11046267	2	True				
ANR	11046287	IdentifierDecl	* dev_t1		11046267	0					
ANR	11046288	IdentifierDeclType	gx_device *		11046267	0					
ANR	11046289	Identifier	dev_t1		11046267	1					
ANR	11046290	IdentifierDeclStatement	gx_device * dev_t2 ;	260:4:6610:6627	11046267	3	True				
ANR	11046291	IdentifierDecl	* dev_t2		11046267	0					
ANR	11046292	IdentifierDeclType	gx_device *		11046267	0					
ANR	11046293	Identifier	dev_t2		11046267	1					
ANR	11046294	IdentifierDeclStatement	"bool samepagedevice = obj_eq ( dev_old -> memory , & gs_int_gstate ( pgs_old ) -> pagedevice , & gs_int_gstate ( pgs_new ) -> pagedevice ) ;"	261:4:6633:6760	11046267	4	True				
ANR	11046295	IdentifierDecl	"samepagedevice = obj_eq ( dev_old -> memory , & gs_int_gstate ( pgs_old ) -> pagedevice , & gs_int_gstate ( pgs_new ) -> pagedevice )"		11046267	0					
ANR	11046296	IdentifierDeclType	bool		11046267	0					
ANR	11046297	Identifier	samepagedevice		11046267	1					
ANR	11046298	AssignmentExpression	"samepagedevice = obj_eq ( dev_old -> memory , & gs_int_gstate ( pgs_old ) -> pagedevice , & gs_int_gstate ( pgs_new ) -> pagedevice )"		11046267	2		=			
ANR	11046299	Identifier	samepagedevice		11046267	0					
ANR	11046300	CallExpression	"obj_eq ( dev_old -> memory , & gs_int_gstate ( pgs_old ) -> pagedevice , & gs_int_gstate ( pgs_new ) -> pagedevice )"		11046267	1					
ANR	11046301	Callee	obj_eq		11046267	0					
ANR	11046302	Identifier	obj_eq		11046267	0					
ANR	11046303	ArgumentList	dev_old -> memory		11046267	1					
ANR	11046304	Argument	dev_old -> memory		11046267	0					
ANR	11046305	PtrMemberAccess	dev_old -> memory		11046267	0					
ANR	11046306	Identifier	dev_old		11046267	0					
ANR	11046307	Identifier	memory		11046267	1					
ANR	11046308	Argument	& gs_int_gstate ( pgs_old ) -> pagedevice		11046267	1					
ANR	11046309	UnaryOperationExpression	& gs_int_gstate ( pgs_old ) -> pagedevice		11046267	0					
ANR	11046310	UnaryOperator	&		11046267	0					
ANR	11046311	PtrMemberAccess	gs_int_gstate ( pgs_old ) -> pagedevice		11046267	1					
ANR	11046312	CallExpression	gs_int_gstate ( pgs_old )		11046267	0					
ANR	11046313	Callee	gs_int_gstate		11046267	0					
ANR	11046314	Identifier	gs_int_gstate		11046267	0					
ANR	11046315	ArgumentList	pgs_old		11046267	1					
ANR	11046316	Argument	pgs_old		11046267	0					
ANR	11046317	Identifier	pgs_old		11046267	0					
ANR	11046318	Identifier	pagedevice		11046267	1					
ANR	11046319	Argument	& gs_int_gstate ( pgs_new ) -> pagedevice		11046267	2					
ANR	11046320	UnaryOperationExpression	& gs_int_gstate ( pgs_new ) -> pagedevice		11046267	0					
ANR	11046321	UnaryOperator	&		11046267	0					
ANR	11046322	PtrMemberAccess	gs_int_gstate ( pgs_new ) -> pagedevice		11046267	1					
ANR	11046323	CallExpression	gs_int_gstate ( pgs_new )		11046267	0					
ANR	11046324	Callee	gs_int_gstate		11046267	0					
ANR	11046325	Identifier	gs_int_gstate		11046267	0					
ANR	11046326	ArgumentList	pgs_new		11046267	1					
ANR	11046327	Argument	pgs_new		11046267	0					
ANR	11046328	Identifier	pgs_new		11046267	0					
ANR	11046329	Identifier	pagedevice		11046267	1					
ANR	11046330	IfStatement	"if ( ( dev_t1 = ( * dev_proc ( dev_old , get_page_device ) ) ( dev_old ) ) == 0 )"		11046267	5					
ANR	11046331	Condition	"( dev_t1 = ( * dev_proc ( dev_old , get_page_device ) ) ( dev_old ) ) == 0"	264:8:6771:6833	11046267	0	True				
ANR	11046332	EqualityExpression	"( dev_t1 = ( * dev_proc ( dev_old , get_page_device ) ) ( dev_old ) ) == 0"		11046267	0		==			
ANR	11046333	AssignmentExpression	"dev_t1 = ( * dev_proc ( dev_old , get_page_device ) ) ( dev_old )"		11046267	0		=			
ANR	11046334	Identifier	dev_t1		11046267	0					
ANR	11046335	CallExpression	"( * dev_proc ( dev_old , get_page_device ) ) ( dev_old )"		11046267	1					
ANR	11046336	Callee	"* dev_proc ( dev_old , get_page_device )"		11046267	0					
ANR	11046337	UnaryOperationExpression	"* dev_proc ( dev_old , get_page_device )"		11046267	0					
ANR	11046338	UnaryOperator	*		11046267	0					
ANR	11046339	CallExpression	"dev_proc ( dev_old , get_page_device )"		11046267	1					
ANR	11046340	Callee	dev_proc		11046267	0					
ANR	11046341	Identifier	dev_proc		11046267	0					
ANR	11046342	ArgumentList	dev_old		11046267	1					
ANR	11046343	Argument	dev_old		11046267	0					
ANR	11046344	Identifier	dev_old		11046267	0					
ANR	11046345	Argument	get_page_device		11046267	1					
ANR	11046346	Identifier	get_page_device		11046267	0					
ANR	11046347	ArgumentList	dev_old		11046267	1					
ANR	11046348	Argument	dev_old		11046267	0					
ANR	11046349	Identifier	dev_old		11046267	0					
ANR	11046350	PrimaryExpression	0		11046267	1					
ANR	11046351	ReturnStatement	return false ;	265:8:6844:6856	11046267	1	True				
ANR	11046352	Identifier	false		11046267	0					
ANR	11046353	IfStatement	if ( ! samepagedevice )		11046267	6					
ANR	11046354	Condition	! samepagedevice	269:8:7076:7090	11046267	0	True				
ANR	11046355	UnaryOperationExpression	! samepagedevice		11046267	0					
ANR	11046356	UnaryOperator	!		11046267	0					
ANR	11046357	Identifier	samepagedevice		11046267	1					
ANR	11046358	ExpressionStatement	dev_old -> LockSafetyParams = false	270:8:7101:7134	11046267	1	True				
ANR	11046359	AssignmentExpression	dev_old -> LockSafetyParams = false		11046267	0		=			
ANR	11046360	PtrMemberAccess	dev_old -> LockSafetyParams		11046267	0					
ANR	11046361	Identifier	dev_old		11046267	0					
ANR	11046362	Identifier	LockSafetyParams		11046267	1					
ANR	11046363	Identifier	false		11046267	1					
ANR	11046364	ExpressionStatement	dev_new = gs_currentdevice ( pgs_new )	271:4:7140:7175	11046267	7	True				
ANR	11046365	AssignmentExpression	dev_new = gs_currentdevice ( pgs_new )		11046267	0		=			
ANR	11046366	Identifier	dev_new		11046267	0					
ANR	11046367	CallExpression	gs_currentdevice ( pgs_new )		11046267	1					
ANR	11046368	Callee	gs_currentdevice		11046267	0					
ANR	11046369	Identifier	gs_currentdevice		11046267	0					
ANR	11046370	ArgumentList	pgs_new		11046267	1					
ANR	11046371	Argument	pgs_new		11046267	0					
ANR	11046372	Identifier	pgs_new		11046267	0					
ANR	11046373	IfStatement	if ( dev_old != dev_new )		11046267	8					
ANR	11046374	Condition	dev_old != dev_new	272:8:7185:7202	11046267	0	True				
ANR	11046375	EqualityExpression	dev_old != dev_new		11046267	0		!=			
ANR	11046376	Identifier	dev_old		11046267	0					
ANR	11046377	Identifier	dev_new		11046267	1					
ANR	11046378	CompoundStatement		17:28:699:699	11046267	1					
ANR	11046379	IfStatement	"if ( ( dev_t2 = ( * dev_proc ( dev_new , get_page_device ) ) ( dev_new ) ) == 0 )"		11046267	0					
ANR	11046380	Condition	"( dev_t2 = ( * dev_proc ( dev_new , get_page_device ) ) ( dev_new ) ) == 0"	273:12:7219:7281	11046267	0	True				
ANR	11046381	EqualityExpression	"( dev_t2 = ( * dev_proc ( dev_new , get_page_device ) ) ( dev_new ) ) == 0"		11046267	0		==			
ANR	11046382	AssignmentExpression	"dev_t2 = ( * dev_proc ( dev_new , get_page_device ) ) ( dev_new )"		11046267	0		=			
ANR	11046383	Identifier	dev_t2		11046267	0					
ANR	11046384	CallExpression	"( * dev_proc ( dev_new , get_page_device ) ) ( dev_new )"		11046267	1					
ANR	11046385	Callee	"* dev_proc ( dev_new , get_page_device )"		11046267	0					
ANR	11046386	UnaryOperationExpression	"* dev_proc ( dev_new , get_page_device )"		11046267	0					
ANR	11046387	UnaryOperator	*		11046267	0					
ANR	11046388	CallExpression	"dev_proc ( dev_new , get_page_device )"		11046267	1					
ANR	11046389	Callee	dev_proc		11046267	0					
ANR	11046390	Identifier	dev_proc		11046267	0					
ANR	11046391	ArgumentList	dev_new		11046267	1					
ANR	11046392	Argument	dev_new		11046267	0					
ANR	11046393	Identifier	dev_new		11046267	0					
ANR	11046394	Argument	get_page_device		11046267	1					
ANR	11046395	Identifier	get_page_device		11046267	0					
ANR	11046396	ArgumentList	dev_new		11046267	1					
ANR	11046397	Argument	dev_new		11046267	0					
ANR	11046398	Identifier	dev_new		11046267	0					
ANR	11046399	PrimaryExpression	0		11046267	1					
ANR	11046400	ReturnStatement	return false ;	274:12:7296:7308	11046267	1	True				
ANR	11046401	Identifier	false		11046267	0					
ANR	11046402	IfStatement	if ( dev_t1 != dev_t2 )		11046267	1					
ANR	11046403	Condition	dev_t1 != dev_t2	275:12:7322:7337	11046267	0	True				
ANR	11046404	EqualityExpression	dev_t1 != dev_t2		11046267	0		!=			
ANR	11046405	Identifier	dev_t1		11046267	0					
ANR	11046406	Identifier	dev_t2		11046267	1					
ANR	11046407	ReturnStatement	return true ;	276:12:7352:7363	11046267	1	True				
ANR	11046408	Identifier	true		11046267	0					
ANR	11046409	ReturnStatement	return ! samepagedevice ;	283:4:7578:7600	11046267	9	True				
ANR	11046410	UnaryOperationExpression	! samepagedevice		11046267	0					
ANR	11046411	UnaryOperator	!		11046267	0					
ANR	11046412	Identifier	samepagedevice		11046267	1					
ANR	11046413	ReturnType	static bool		11046267	1					
ANR	11046414	Identifier	restore_page_device		11046267	2					
ANR	11046415	ParameterList	"const gs_gstate * pgs_old , const gs_gstate * pgs_new"		11046267	3					
ANR	11046416	Parameter	const gs_gstate * pgs_old	255:20:6451:6475	11046267	0	True				
ANR	11046417	ParameterType	const gs_gstate *		11046267	0					
ANR	11046418	Identifier	pgs_old		11046267	1					
ANR	11046419	Parameter	const gs_gstate * pgs_new	255:47:6478:6502	11046267	1	True				
ANR	11046420	ParameterType	const gs_gstate *		11046267	0					
ANR	11046421	Identifier	pgs_new		11046267	1					
ANR	11046422	CFGEntryNode	ENTRY		11046267		True				
ANR	11046423	CFGExitNode	EXIT		11046267		True				
ANR	11046424	Symbol	& gs_int_gstate ( pgs_old ) -> pagedevice		11046267						
ANR	11046425	Symbol	dev_new		11046267						
ANR	11046426	Symbol	dev_t2		11046267						
ANR	11046427	Symbol	pgs_new		11046267						
ANR	11046428	Symbol	& gs_int_gstate ( pgs_new ) -> pagedevice		11046267						
ANR	11046429	Symbol	samepagedevice		11046267						
ANR	11046430	Symbol	* dev_proc		11046267						
ANR	11046431	Symbol	false		11046267						
ANR	11046432	Symbol	dev_old		11046267						
ANR	11046433	Symbol	gs_currentdevice		11046267						
ANR	11046434	Symbol	dev_t1		11046267						
ANR	11046435	Symbol	get_page_device		11046267						
ANR	11046436	Symbol	* dev_old		11046267						
ANR	11046437	Symbol	"* dev_proc ( dev_old , get_page_device )"		11046267						
ANR	11046438	Symbol	obj_eq		11046267						
ANR	11046439	Symbol	dev_old -> memory		11046267						
ANR	11046440	Symbol	dev_proc		11046267						
ANR	11046441	Symbol	true		11046267						
ANR	11046442	Symbol	"* dev_proc ( dev_new , get_page_device )"		11046267						
ANR	11046443	Symbol	pgs_old		11046267						
ANR	11046444	Symbol	gs_int_gstate		11046267						
ANR	11046445	Symbol	dev_old -> LockSafetyParams		11046267						
ANR	11046446	Function	z2grestore	287:0:7624:7813							
ANR	11046447	FunctionDef	z2grestore (i_ctx_t * i_ctx_p)		11046446	0					
ANR	11046448	CompoundStatement		289:0:7664:7813	11046446	0					
ANR	11046449	IfStatement	"if ( ! restore_page_device ( igs , gs_gstate_saved ( igs ) ) )"		11046446	0					
ANR	11046450	Condition	"! restore_page_device ( igs , gs_gstate_saved ( igs ) )"	290:8:7674:7720	11046446	0	True				
ANR	11046451	UnaryOperationExpression	"! restore_page_device ( igs , gs_gstate_saved ( igs ) )"		11046446	0					
ANR	11046452	UnaryOperator	!		11046446	0					
ANR	11046453	CallExpression	"restore_page_device ( igs , gs_gstate_saved ( igs ) )"		11046446	1					
ANR	11046454	Callee	restore_page_device		11046446	0					
ANR	11046455	Identifier	restore_page_device		11046446	0					
ANR	11046456	ArgumentList	igs		11046446	1					
ANR	11046457	Argument	igs		11046446	0					
ANR	11046458	Identifier	igs		11046446	0					
ANR	11046459	Argument	gs_gstate_saved ( igs )		11046446	1					
ANR	11046460	CallExpression	gs_gstate_saved ( igs )		11046446	0					
ANR	11046461	Callee	gs_gstate_saved		11046446	0					
ANR	11046462	Identifier	gs_gstate_saved		11046446	0					
ANR	11046463	ArgumentList	igs		11046446	1					
ANR	11046464	Argument	igs		11046446	0					
ANR	11046465	Identifier	igs		11046446	0					
ANR	11046466	ReturnStatement	return gs_grestore ( igs ) ;	291:8:7731:7754	11046446	1	True				
ANR	11046467	CallExpression	gs_grestore ( igs )		11046446	0					
ANR	11046468	Callee	gs_grestore		11046446	0					
ANR	11046469	Identifier	gs_grestore		11046446	0					
ANR	11046470	ArgumentList	igs		11046446	1					
ANR	11046471	Argument	igs		11046446	0					
ANR	11046472	Identifier	igs		11046446	0					
ANR	11046473	ReturnStatement	"return push_callout ( i_ctx_p , ""%grestorepagedevice"" ) ;"	292:4:7760:7811	11046446	1	True				
ANR	11046474	CallExpression	"push_callout ( i_ctx_p , ""%grestorepagedevice"" )"		11046446	0					
ANR	11046475	Callee	push_callout		11046446	0					
ANR	11046476	Identifier	push_callout		11046446	0					
ANR	11046477	ArgumentList	i_ctx_p		11046446	1					
ANR	11046478	Argument	i_ctx_p		11046446	0					
ANR	11046479	Identifier	i_ctx_p		11046446	0					
ANR	11046480	Argument	"""%grestorepagedevice"""		11046446	1					
ANR	11046481	PrimaryExpression	"""%grestorepagedevice"""		11046446	0					
ANR	11046482	ReturnType	static int		11046446	1					
ANR	11046483	Identifier	z2grestore		11046446	2					
ANR	11046484	ParameterList	i_ctx_t * i_ctx_p		11046446	3					
ANR	11046485	Parameter	i_ctx_t * i_ctx_p	288:11:7646:7661	11046446	0	True				
ANR	11046486	ParameterType	i_ctx_t *		11046446	0					
ANR	11046487	Identifier	i_ctx_p		11046446	1					
ANR	11046488	CFGEntryNode	ENTRY		11046446		True				
ANR	11046489	CFGExitNode	EXIT		11046446		True				
ANR	11046490	Symbol	gs_grestore		11046446						
ANR	11046491	Symbol	restore_page_device		11046446						
ANR	11046492	Symbol	igs		11046446						
ANR	11046493	Symbol	gs_gstate_saved		11046446						
ANR	11046494	Symbol	i_ctx_p		11046446						
ANR	11046495	Symbol	push_callout		11046446						
ANR	11046496	Function	z2grestoreall	296:0:7838:8204							
ANR	11046497	FunctionDef	z2grestoreall (i_ctx_t * i_ctx_p)		11046496	0					
ANR	11046498	CompoundStatement		298:0:7881:8204	11046496	0					
ANR	11046499	ForStatement	for ( ; ; )		11046496	0					
ANR	11046500	CompoundStatement		2:13:14:14	11046496	0					
ANR	11046501	IfStatement	"if ( ! restore_page_device ( igs , gs_gstate_saved ( igs ) ) )"		11046496	0					
ANR	11046502	Condition	"! restore_page_device ( igs , gs_gstate_saved ( igs ) )"	300:12:7910:7956	11046496	0	True				
ANR	11046503	UnaryOperationExpression	"! restore_page_device ( igs , gs_gstate_saved ( igs ) )"		11046496	0					
ANR	11046504	UnaryOperator	!		11046496	0					
ANR	11046505	CallExpression	"restore_page_device ( igs , gs_gstate_saved ( igs ) )"		11046496	1					
ANR	11046506	Callee	restore_page_device		11046496	0					
ANR	11046507	Identifier	restore_page_device		11046496	0					
ANR	11046508	ArgumentList	igs		11046496	1					
ANR	11046509	Argument	igs		11046496	0					
ANR	11046510	Identifier	igs		11046496	0					
ANR	11046511	Argument	gs_gstate_saved ( igs )		11046496	1					
ANR	11046512	CallExpression	gs_gstate_saved ( igs )		11046496	0					
ANR	11046513	Callee	gs_gstate_saved		11046496	0					
ANR	11046514	Identifier	gs_gstate_saved		11046496	0					
ANR	11046515	ArgumentList	igs		11046496	1					
ANR	11046516	Argument	igs		11046496	0					
ANR	11046517	Identifier	igs		11046496	0					
ANR	11046518	CompoundStatement		4:12:91:141	11046496	1					
ANR	11046519	IdentifierDeclStatement	bool done = ! gs_gstate_saved ( gs_gstate_saved ( igs ) ) ;	301:12:7973:8023	11046496	0	True				
ANR	11046520	IdentifierDecl	done = ! gs_gstate_saved ( gs_gstate_saved ( igs ) )		11046496	0					
ANR	11046521	IdentifierDeclType	bool		11046496	0					
ANR	11046522	Identifier	done		11046496	1					
ANR	11046523	AssignmentExpression	done = ! gs_gstate_saved ( gs_gstate_saved ( igs ) )		11046496	2		=			
ANR	11046524	Identifier	done		11046496	0					
ANR	11046525	UnaryOperationExpression	! gs_gstate_saved ( gs_gstate_saved ( igs ) )		11046496	1					
ANR	11046526	UnaryOperator	!		11046496	0					
ANR	11046527	CallExpression	gs_gstate_saved ( gs_gstate_saved ( igs ) )		11046496	1					
ANR	11046528	Callee	gs_gstate_saved		11046496	0					
ANR	11046529	Identifier	gs_gstate_saved		11046496	0					
ANR	11046530	ArgumentList	gs_gstate_saved ( igs )		11046496	1					
ANR	11046531	Argument	gs_gstate_saved ( igs )		11046496	0					
ANR	11046532	CallExpression	gs_gstate_saved ( igs )		11046496	0					
ANR	11046533	Callee	gs_gstate_saved		11046496	0					
ANR	11046534	Identifier	gs_gstate_saved		11046496	0					
ANR	11046535	ArgumentList	igs		11046496	1					
ANR	11046536	Argument	igs		11046496	0					
ANR	11046537	Identifier	igs		11046496	0					
ANR	11046538	ExpressionStatement	gs_grestore ( igs )	303:12:8038:8054	11046496	1	True				
ANR	11046539	CallExpression	gs_grestore ( igs )		11046496	0					
ANR	11046540	Callee	gs_grestore		11046496	0					
ANR	11046541	Identifier	gs_grestore		11046496	0					
ANR	11046542	ArgumentList	igs		11046496	1					
ANR	11046543	Argument	igs		11046496	0					
ANR	11046544	Identifier	igs		11046496	0					
ANR	11046545	IfStatement	if ( done )		11046496	2					
ANR	11046546	Condition	done	304:16:8072:8075	11046496	0	True				
ANR	11046547	Identifier	done		11046496	0					
ANR	11046548	BreakStatement	break ;	305:16:8094:8099	11046496	1	True				
ANR	11046549	ElseStatement	else		11046496	0					
ANR	11046550	ReturnStatement	"return push_callout ( i_ctx_p , ""%grestoreallpagedevice"" ) ;"	307:12:8128:8182	11046496	0	True				
ANR	11046551	CallExpression	"push_callout ( i_ctx_p , ""%grestoreallpagedevice"" )"		11046496	0					
ANR	11046552	Callee	push_callout		11046496	0					
ANR	11046553	Identifier	push_callout		11046496	0					
ANR	11046554	ArgumentList	i_ctx_p		11046496	1					
ANR	11046555	Argument	i_ctx_p		11046496	0					
ANR	11046556	Identifier	i_ctx_p		11046496	0					
ANR	11046557	Argument	"""%grestoreallpagedevice"""		11046496	1					
ANR	11046558	PrimaryExpression	"""%grestoreallpagedevice"""		11046496	0					
ANR	11046559	ReturnStatement	return 0 ;	309:4:8194:8202	11046496	1	True				
ANR	11046560	PrimaryExpression	0		11046496	0					
ANR	11046561	ReturnType	static int		11046496	1					
ANR	11046562	Identifier	z2grestoreall		11046496	2					
ANR	11046563	ParameterList	i_ctx_t * i_ctx_p		11046496	3					
ANR	11046564	Parameter	i_ctx_t * i_ctx_p	297:14:7863:7878	11046496	0	True				
ANR	11046565	ParameterType	i_ctx_t *		11046496	0					
ANR	11046566	Identifier	i_ctx_p		11046496	1					
ANR	11046567	CFGEntryNode	ENTRY		11046496		True				
ANR	11046568	CFGExitNode	EXIT		11046496		True				
ANR	11046569	InfiniteForNode	true		11046496		True				
ANR	11046570	Symbol	restore_page_device		11046496						
ANR	11046571	Symbol	igs		11046496						
ANR	11046572	Symbol	gs_gstate_saved		11046496						
ANR	11046573	Symbol	i_ctx_p		11046496						
ANR	11046574	Symbol	push_callout		11046496						
ANR	11046575	Symbol	done		11046496						
ANR	11046576	Function	z2restore	321:0:8710:9810							
ANR	11046577	FunctionDef	z2restore (i_ctx_t * i_ctx_p)		11046576	0					
ANR	11046578	CompoundStatement		323:0:8749:9810	11046576	0					
ANR	11046579	IdentifierDeclStatement	alloc_save_t * asave ;	324:4:8755:8774	11046576	0	True				
ANR	11046580	IdentifierDecl	* asave		11046576	0					
ANR	11046581	IdentifierDeclType	alloc_save_t *		11046576	0					
ANR	11046582	Identifier	asave		11046576	1					
ANR	11046583	IdentifierDeclStatement	bool saveLockSafety = gs_currentdevice_inline ( igs ) -> LockSafetyParams ;	325:4:8780:8848	11046576	1	True				
ANR	11046584	IdentifierDecl	saveLockSafety = gs_currentdevice_inline ( igs ) -> LockSafetyParams		11046576	0					
ANR	11046585	IdentifierDeclType	bool		11046576	0					
ANR	11046586	Identifier	saveLockSafety		11046576	1					
ANR	11046587	AssignmentExpression	saveLockSafety = gs_currentdevice_inline ( igs ) -> LockSafetyParams		11046576	2		=			
ANR	11046588	Identifier	saveLockSafety		11046576	0					
ANR	11046589	PtrMemberAccess	gs_currentdevice_inline ( igs ) -> LockSafetyParams		11046576	1					
ANR	11046590	CallExpression	gs_currentdevice_inline ( igs )		11046576	0					
ANR	11046591	Callee	gs_currentdevice_inline		11046576	0					
ANR	11046592	Identifier	gs_currentdevice_inline		11046576	0					
ANR	11046593	ArgumentList	igs		11046576	1					
ANR	11046594	Argument	igs		11046576	0					
ANR	11046595	Identifier	igs		11046576	0					
ANR	11046596	Identifier	LockSafetyParams		11046576	1					
ANR	11046597	IdentifierDeclStatement	"int code = restore_check_save ( i_ctx_p , & asave ) ;"	326:4:8854:8900	11046576	2	True				
ANR	11046598	IdentifierDecl	"code = restore_check_save ( i_ctx_p , & asave )"		11046576	0					
ANR	11046599	IdentifierDeclType	int		11046576	0					
ANR	11046600	Identifier	code		11046576	1					
ANR	11046601	AssignmentExpression	"code = restore_check_save ( i_ctx_p , & asave )"		11046576	2		=			
ANR	11046602	Identifier	code		11046576	0					
ANR	11046603	CallExpression	"restore_check_save ( i_ctx_p , & asave )"		11046576	1					
ANR	11046604	Callee	restore_check_save		11046576	0					
ANR	11046605	Identifier	restore_check_save		11046576	0					
ANR	11046606	ArgumentList	i_ctx_p		11046576	1					
ANR	11046607	Argument	i_ctx_p		11046576	0					
ANR	11046608	Identifier	i_ctx_p		11046576	0					
ANR	11046609	Argument	& asave		11046576	1					
ANR	11046610	UnaryOperationExpression	& asave		11046576	0					
ANR	11046611	UnaryOperator	&		11046576	0					
ANR	11046612	Identifier	asave		11046576	1					
ANR	11046613	IfStatement	if ( code < 0 )		11046576	3					
ANR	11046614	Condition	code < 0	328:8:8911:8918	11046576	0	True				
ANR	11046615	RelationalExpression	code < 0		11046576	0		<			
ANR	11046616	Identifier	code		11046576	0					
ANR	11046617	PrimaryExpression	0		11046576	1					
ANR	11046618	ReturnStatement	return code ;	328:18:8921:8932	11046576	1	True				
ANR	11046619	Identifier	code		11046576	0					
ANR	11046620	WhileStatement	while ( gs_gstate_saved ( gs_gstate_saved ( igs ) ) )		11046576	4					
ANR	11046621	Condition	gs_gstate_saved ( gs_gstate_saved ( igs ) )	330:11:8946:8982	11046576	0	True				
ANR	11046622	CallExpression	gs_gstate_saved ( gs_gstate_saved ( igs ) )		11046576	0					
ANR	11046623	Callee	gs_gstate_saved		11046576	0					
ANR	11046624	Identifier	gs_gstate_saved		11046576	0					
ANR	11046625	ArgumentList	gs_gstate_saved ( igs )		11046576	1					
ANR	11046626	Argument	gs_gstate_saved ( igs )		11046576	0					
ANR	11046627	CallExpression	gs_gstate_saved ( igs )		11046576	0					
ANR	11046628	Callee	gs_gstate_saved		11046576	0					
ANR	11046629	Identifier	gs_gstate_saved		11046576	0					
ANR	11046630	ArgumentList	igs		11046576	1					
ANR	11046631	Argument	igs		11046576	0					
ANR	11046632	Identifier	igs		11046576	0					
ANR	11046633	CompoundStatement		8:50:235:235	11046576	1					
ANR	11046634	IfStatement	"if ( restore_page_device ( igs , gs_gstate_saved ( igs ) ) )"		11046576	0					
ANR	11046635	Condition	"restore_page_device ( igs , gs_gstate_saved ( igs ) )"	331:12:8999:9044	11046576	0	True				
ANR	11046636	CallExpression	"restore_page_device ( igs , gs_gstate_saved ( igs ) )"		11046576	0					
ANR	11046637	Callee	restore_page_device		11046576	0					
ANR	11046638	Identifier	restore_page_device		11046576	0					
ANR	11046639	ArgumentList	igs		11046576	1					
ANR	11046640	Argument	igs		11046576	0					
ANR	11046641	Identifier	igs		11046576	0					
ANR	11046642	Argument	gs_gstate_saved ( igs )		11046576	1					
ANR	11046643	CallExpression	gs_gstate_saved ( igs )		11046576	0					
ANR	11046644	Callee	gs_gstate_saved		11046576	0					
ANR	11046645	Identifier	gs_gstate_saved		11046576	0					
ANR	11046646	ArgumentList	igs		11046576	1					
ANR	11046647	Argument	igs		11046576	0					
ANR	11046648	Identifier	igs		11046576	0					
ANR	11046649	ReturnStatement	"return push_callout ( i_ctx_p , ""%restore1pagedevice"" ) ;"	332:12:9059:9110	11046576	1	True				
ANR	11046650	CallExpression	"push_callout ( i_ctx_p , ""%restore1pagedevice"" )"		11046576	0					
ANR	11046651	Callee	push_callout		11046576	0					
ANR	11046652	Identifier	push_callout		11046576	0					
ANR	11046653	ArgumentList	i_ctx_p		11046576	1					
ANR	11046654	Argument	i_ctx_p		11046576	0					
ANR	11046655	Identifier	i_ctx_p		11046576	0					
ANR	11046656	Argument	"""%restore1pagedevice"""		11046576	1					
ANR	11046657	PrimaryExpression	"""%restore1pagedevice"""		11046576	0					
ANR	11046658	ExpressionStatement	gs_grestore ( igs )	333:8:9120:9136	11046576	1	True				
ANR	11046659	CallExpression	gs_grestore ( igs )		11046576	0					
ANR	11046660	Callee	gs_grestore		11046576	0					
ANR	11046661	Identifier	gs_grestore		11046576	0					
ANR	11046662	ArgumentList	igs		11046576	1					
ANR	11046663	Argument	igs		11046576	0					
ANR	11046664	Identifier	igs		11046576	0					
ANR	11046665	IfStatement	"if ( restore_page_device ( igs , gs_gstate_saved ( igs ) ) )"		11046576	5					
ANR	11046666	Condition	"restore_page_device ( igs , gs_gstate_saved ( igs ) )"	335:8:9152:9197	11046576	0	True				
ANR	11046667	CallExpression	"restore_page_device ( igs , gs_gstate_saved ( igs ) )"		11046576	0					
ANR	11046668	Callee	restore_page_device		11046576	0					
ANR	11046669	Identifier	restore_page_device		11046576	0					
ANR	11046670	ArgumentList	igs		11046576	1					
ANR	11046671	Argument	igs		11046576	0					
ANR	11046672	Identifier	igs		11046576	0					
ANR	11046673	Argument	gs_gstate_saved ( igs )		11046576	1					
ANR	11046674	CallExpression	gs_gstate_saved ( igs )		11046576	0					
ANR	11046675	Callee	gs_gstate_saved		11046576	0					
ANR	11046676	Identifier	gs_gstate_saved		11046576	0					
ANR	11046677	ArgumentList	igs		11046576	1					
ANR	11046678	Argument	igs		11046576	0					
ANR	11046679	Identifier	igs		11046576	0					
ANR	11046680	ReturnStatement	"return push_callout ( i_ctx_p , ""%restorepagedevice"" ) ;"	336:8:9208:9258	11046576	1	True				
ANR	11046681	CallExpression	"push_callout ( i_ctx_p , ""%restorepagedevice"" )"		11046576	0					
ANR	11046682	Callee	push_callout		11046576	0					
ANR	11046683	Identifier	push_callout		11046576	0					
ANR	11046684	ArgumentList	i_ctx_p		11046576	1					
ANR	11046685	Argument	i_ctx_p		11046576	0					
ANR	11046686	Identifier	i_ctx_p		11046576	0					
ANR	11046687	Argument	"""%restorepagedevice"""		11046576	1					
ANR	11046688	PrimaryExpression	"""%restorepagedevice"""		11046576	0					
ANR	11046689	ExpressionStatement	"code = dorestore ( i_ctx_p , asave )"	338:4:9265:9297	11046576	6	True				
ANR	11046690	AssignmentExpression	"code = dorestore ( i_ctx_p , asave )"		11046576	0		=			
ANR	11046691	Identifier	code		11046576	0					
ANR	11046692	CallExpression	"dorestore ( i_ctx_p , asave )"		11046576	1					
ANR	11046693	Callee	dorestore		11046576	0					
ANR	11046694	Identifier	dorestore		11046576	0					
ANR	11046695	ArgumentList	i_ctx_p		11046576	1					
ANR	11046696	Argument	i_ctx_p		11046576	0					
ANR	11046697	Identifier	i_ctx_p		11046576	0					
ANR	11046698	Argument	asave		11046576	1					
ANR	11046699	Identifier	asave		11046576	0					
ANR	11046700	IfStatement	if ( code < 0 )		11046576	7					
ANR	11046701	Condition	code < 0	340:8:9308:9315	11046576	0	True				
ANR	11046702	RelationalExpression	code < 0		11046576	0		<			
ANR	11046703	Identifier	code		11046576	0					
ANR	11046704	PrimaryExpression	0		11046576	1					
ANR	11046705	CompoundStatement		18:18:568:568	11046576	1					
ANR	11046706	ExpressionStatement	gs_currentdevice_inline ( igs ) -> LockSafetyParams = saveLockSafety	348:8:9722:9785	11046576	0	True				
ANR	11046707	AssignmentExpression	gs_currentdevice_inline ( igs ) -> LockSafetyParams = saveLockSafety		11046576	0		=			
ANR	11046708	PtrMemberAccess	gs_currentdevice_inline ( igs ) -> LockSafetyParams		11046576	0					
ANR	11046709	CallExpression	gs_currentdevice_inline ( igs )		11046576	0					
ANR	11046710	Callee	gs_currentdevice_inline		11046576	0					
ANR	11046711	Identifier	gs_currentdevice_inline		11046576	0					
ANR	11046712	ArgumentList	igs		11046576	1					
ANR	11046713	Argument	igs		11046576	0					
ANR	11046714	Identifier	igs		11046576	0					
ANR	11046715	Identifier	LockSafetyParams		11046576	1					
ANR	11046716	Identifier	saveLockSafety		11046576	1					
ANR	11046717	ReturnStatement	return code ;	350:4:9797:9808	11046576	8	True				
ANR	11046718	Identifier	code		11046576	0					
ANR	11046719	ReturnType	static int		11046576	1					
ANR	11046720	Identifier	z2restore		11046576	2					
ANR	11046721	ParameterList	i_ctx_t * i_ctx_p		11046576	3					
ANR	11046722	Parameter	i_ctx_t * i_ctx_p	322:10:8731:8746	11046576	0	True				
ANR	11046723	ParameterType	i_ctx_t *		11046576	0					
ANR	11046724	Identifier	i_ctx_p		11046576	1					
ANR	11046725	CFGEntryNode	ENTRY		11046576		True				
ANR	11046726	CFGExitNode	EXIT		11046576		True				
ANR	11046727	Symbol	* gs_currentdevice_inline		11046576						
ANR	11046728	Symbol	code		11046576						
ANR	11046729	Symbol	restore_page_device		11046576						
ANR	11046730	Symbol	restore_check_save		11046576						
ANR	11046731	Symbol	push_callout		11046576						
ANR	11046732	Symbol	dorestore		11046576						
ANR	11046733	Symbol	saveLockSafety		11046576						
ANR	11046734	Symbol	& asave		11046576						
ANR	11046735	Symbol	asave		11046576						
ANR	11046736	Symbol	gs_currentdevice_inline		11046576						
ANR	11046737	Symbol	igs		11046576						
ANR	11046738	Symbol	gs_gstate_saved		11046576						
ANR	11046739	Symbol	i_ctx_p		11046576						
ANR	11046740	Symbol	gs_currentdevice_inline ( igs ) -> LockSafetyParams		11046576						
ANR	11046741	Function	z2setgstate	354:0:9840:10089							
ANR	11046742	FunctionDef	z2setgstate (i_ctx_t * i_ctx_p)		11046741	0					
ANR	11046743	CompoundStatement		356:0:9881:10089	11046741	0					
ANR	11046744	IdentifierDeclStatement	os_ptr op = osp ;	357:4:9887:9902	11046741	0	True				
ANR	11046745	IdentifierDecl	op = osp		11046741	0					
ANR	11046746	IdentifierDeclType	os_ptr		11046741	0					
ANR	11046747	Identifier	op		11046741	1					
ANR	11046748	AssignmentExpression	op = osp		11046741	2		=			
ANR	11046749	Identifier	osp		11046741	0					
ANR	11046750	Identifier	osp		11046741	1					
ANR	11046751	ExpressionStatement	"check_stype ( * op , st_igstate_obj )"	359:4:9909:9941	11046741	1	True				
ANR	11046752	CallExpression	"check_stype ( * op , st_igstate_obj )"		11046741	0					
ANR	11046753	Callee	check_stype		11046741	0					
ANR	11046754	Identifier	check_stype		11046741	0					
ANR	11046755	ArgumentList	* op		11046741	1					
ANR	11046756	Argument	* op		11046741	0					
ANR	11046757	UnaryOperationExpression	* op		11046741	0					
ANR	11046758	UnaryOperator	*		11046741	0					
ANR	11046759	Identifier	op		11046741	1					
ANR	11046760	Argument	st_igstate_obj		11046741	1					
ANR	11046761	Identifier	st_igstate_obj		11046741	0					
ANR	11046762	IfStatement	"if ( ! restore_page_device ( igs , igstate_ptr ( op ) ) )"		11046741	2					
ANR	11046763	Condition	"! restore_page_device ( igs , igstate_ptr ( op ) )"	360:8:9951:9992	11046741	0	True				
ANR	11046764	UnaryOperationExpression	"! restore_page_device ( igs , igstate_ptr ( op ) )"		11046741	0					
ANR	11046765	UnaryOperator	!		11046741	0					
ANR	11046766	CallExpression	"restore_page_device ( igs , igstate_ptr ( op ) )"		11046741	1					
ANR	11046767	Callee	restore_page_device		11046741	0					
ANR	11046768	Identifier	restore_page_device		11046741	0					
ANR	11046769	ArgumentList	igs		11046741	1					
ANR	11046770	Argument	igs		11046741	0					
ANR	11046771	Identifier	igs		11046741	0					
ANR	11046772	Argument	igstate_ptr ( op )		11046741	1					
ANR	11046773	CallExpression	igstate_ptr ( op )		11046741	0					
ANR	11046774	Callee	igstate_ptr		11046741	0					
ANR	11046775	Identifier	igstate_ptr		11046741	0					
ANR	11046776	ArgumentList	op		11046741	1					
ANR	11046777	Argument	op		11046741	0					
ANR	11046778	Identifier	op		11046741	0					
ANR	11046779	ReturnStatement	return zsetgstate ( i_ctx_p ) ;	361:8:10003:10029	11046741	1	True				
ANR	11046780	CallExpression	zsetgstate ( i_ctx_p )		11046741	0					
ANR	11046781	Callee	zsetgstate		11046741	0					
ANR	11046782	Identifier	zsetgstate		11046741	0					
ANR	11046783	ArgumentList	i_ctx_p		11046741	1					
ANR	11046784	Argument	i_ctx_p		11046741	0					
ANR	11046785	Identifier	i_ctx_p		11046741	0					
ANR	11046786	ReturnStatement	"return push_callout ( i_ctx_p , ""%setgstatepagedevice"" ) ;"	362:4:10035:10087	11046741	3	True				
ANR	11046787	CallExpression	"push_callout ( i_ctx_p , ""%setgstatepagedevice"" )"		11046741	0					
ANR	11046788	Callee	push_callout		11046741	0					
ANR	11046789	Identifier	push_callout		11046741	0					
ANR	11046790	ArgumentList	i_ctx_p		11046741	1					
ANR	11046791	Argument	i_ctx_p		11046741	0					
ANR	11046792	Identifier	i_ctx_p		11046741	0					
ANR	11046793	Argument	"""%setgstatepagedevice"""		11046741	1					
ANR	11046794	PrimaryExpression	"""%setgstatepagedevice"""		11046741	0					
ANR	11046795	ReturnType	static int		11046741	1					
ANR	11046796	Identifier	z2setgstate		11046741	2					
ANR	11046797	ParameterList	i_ctx_t * i_ctx_p		11046741	3					
ANR	11046798	Parameter	i_ctx_t * i_ctx_p	355:12:9863:9878	11046741	0	True				
ANR	11046799	ParameterType	i_ctx_t *		11046741	0					
ANR	11046800	Identifier	i_ctx_p		11046741	1					
ANR	11046801	CFGEntryNode	ENTRY		11046741		True				
ANR	11046802	CFGExitNode	EXIT		11046741		True				
ANR	11046803	Symbol	op		11046741						
ANR	11046804	Symbol	restore_page_device		11046741						
ANR	11046805	Symbol	* op		11046741						
ANR	11046806	Symbol	igs		11046741						
ANR	11046807	Symbol	i_ctx_p		11046741						
ANR	11046808	Symbol	zsetgstate		11046741						
ANR	11046809	Symbol	push_callout		11046741						
ANR	11046810	Symbol	igstate_ptr		11046741						
ANR	11046811	Symbol	st_igstate_obj		11046741						
ANR	11046812	Symbol	osp		11046741						
ANR	11046813	DeclStmt									
ANR	11046814	Decl							const op_def	const op_def [ ]	zdevice2_l2_op_defs
ANR	11046815	Function	push_callout	395:0:11221:11501							
ANR	11046816	FunctionDef	"push_callout (i_ctx_t * i_ctx_p , const char * callout_name)"		11046815	0					
ANR	11046817	CompoundStatement		397:0:11289:11501	11046815	0					
ANR	11046818	IdentifierDeclStatement	int code ;	398:4:11295:11303	11046815	0	True				
ANR	11046819	IdentifierDecl	code		11046815	0					
ANR	11046820	IdentifierDeclType	int		11046815	0					
ANR	11046821	Identifier	code		11046815	1					
ANR	11046822	ExpressionStatement	check_estack ( 1 )	400:4:11310:11325	11046815	1	True				
ANR	11046823	CallExpression	check_estack ( 1 )		11046815	0					
ANR	11046824	Callee	check_estack		11046815	0					
ANR	11046825	Identifier	check_estack		11046815	0					
ANR	11046826	ArgumentList	1		11046815	1					
ANR	11046827	Argument	1		11046815	0					
ANR	11046828	PrimaryExpression	1		11046815	0					
ANR	11046829	ExpressionStatement	"code = name_enter_string ( imemory , callout_name , esp + 1 )"	401:4:11331:11387	11046815	2	True				
ANR	11046830	AssignmentExpression	"code = name_enter_string ( imemory , callout_name , esp + 1 )"		11046815	0		=			
ANR	11046831	Identifier	code		11046815	0					
ANR	11046832	CallExpression	"name_enter_string ( imemory , callout_name , esp + 1 )"		11046815	1					
ANR	11046833	Callee	name_enter_string		11046815	0					
ANR	11046834	Identifier	name_enter_string		11046815	0					
ANR	11046835	ArgumentList	imemory		11046815	1					
ANR	11046836	Argument	imemory		11046815	0					
ANR	11046837	Identifier	imemory		11046815	0					
ANR	11046838	Argument	callout_name		11046815	1					
ANR	11046839	Identifier	callout_name		11046815	0					
ANR	11046840	Argument	esp + 1		11046815	2					
ANR	11046841	AdditiveExpression	esp + 1		11046815	0		+			
ANR	11046842	Identifier	esp		11046815	0					
ANR	11046843	PrimaryExpression	1		11046815	1					
ANR	11046844	IfStatement	if ( code < 0 )		11046815	3					
ANR	11046845	Condition	code < 0	402:8:11397:11404	11046815	0	True				
ANR	11046846	RelationalExpression	code < 0		11046815	0		<			
ANR	11046847	Identifier	code		11046815	0					
ANR	11046848	PrimaryExpression	0		11046815	1					
ANR	11046849	ReturnStatement	return code ;	403:8:11415:11426	11046815	1	True				
ANR	11046850	Identifier	code		11046815	0					
ANR	11046851	ExpressionStatement	++ esp	404:4:11432:11437	11046815	4	True				
ANR	11046852	UnaryExpression	++ esp		11046815	0					
ANR	11046853	IncDec	++		11046815	0					
ANR	11046854	Identifier	esp		11046815	1					
ANR	11046855	ExpressionStatement	"r_set_attrs ( esp , a_executable )"	405:4:11443:11473	11046815	5	True				
ANR	11046856	CallExpression	"r_set_attrs ( esp , a_executable )"		11046815	0					
ANR	11046857	Callee	r_set_attrs		11046815	0					
ANR	11046858	Identifier	r_set_attrs		11046815	0					
ANR	11046859	ArgumentList	esp		11046815	1					
ANR	11046860	Argument	esp		11046815	0					
ANR	11046861	Identifier	esp		11046815	0					
ANR	11046862	Argument	a_executable		11046815	1					
ANR	11046863	Identifier	a_executable		11046815	0					
ANR	11046864	ReturnStatement	return o_push_estack ;	406:4:11479:11499	11046815	6	True				
ANR	11046865	Identifier	o_push_estack		11046815	0					
ANR	11046866	ReturnType	static int		11046815	1					
ANR	11046867	Identifier	push_callout		11046815	2					
ANR	11046868	ParameterList	"i_ctx_t * i_ctx_p , const char * callout_name"		11046815	3					
ANR	11046869	Parameter	i_ctx_t * i_ctx_p	396:13:11245:11260	11046815	0	True				
ANR	11046870	ParameterType	i_ctx_t *		11046815	0					
ANR	11046871	Identifier	i_ctx_p		11046815	1					
ANR	11046872	Parameter	const char * callout_name	396:31:11263:11286	11046815	1	True				
ANR	11046873	ParameterType	const char *		11046815	0					
ANR	11046874	Identifier	callout_name		11046815	1					
ANR	11046875	CFGEntryNode	ENTRY		11046815		True				
ANR	11046876	CFGExitNode	EXIT		11046815		True				
ANR	11046877	Symbol	name_enter_string		11046815						
ANR	11046878	Symbol	code		11046815						
ANR	11046879	Symbol	esp		11046815						
ANR	11046880	Symbol	i_ctx_p		11046815						
ANR	11046881	Symbol	a_executable		11046815						
ANR	11046882	Symbol	callout_name		11046815						
ANR	11046883	Symbol	imemory		11046815						
ANR	11046884	Symbol	o_push_estack		11046815						
