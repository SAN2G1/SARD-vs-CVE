command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4954817	File	data/converged/CVE-2018-16863_ghostpdl/gsalloc.c								
ANR	4954818	DeclStmt									
ANR	4954819	Decl							gs_id	gs_id	hdr_id
ANR	4954820	Function	get_mem_hdr_id	34:0:1026:1120							
ANR	4954821	FunctionDef	get_mem_hdr_id (void * ptr)		4954820	0					
ANR	4954822	CompoundStatement		35:0:1059:1120	4954820	0					
ANR	4954823	ReturnStatement	return ( * ( ( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET ) ) ;	36:4:1065:1118	4954820	0	True				
ANR	4954824	UnaryOperationExpression	* ( ( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET )		4954820	0					
ANR	4954825	UnaryOperator	*		4954820	0					
ANR	4954826	AdditiveExpression	( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET		4954820	1		-			
ANR	4954827	CastExpression	( hdr_id_t * ) ( ( byte * ) ptr )		4954820	0					
ANR	4954828	CastTarget	hdr_id_t *		4954820	0					
ANR	4954829	CastExpression	( byte * ) ptr		4954820	1					
ANR	4954830	CastTarget	byte *		4954820	0					
ANR	4954831	Identifier	ptr		4954820	1					
ANR	4954832	Identifier	HDR_ID_OFFSET		4954820	1					
ANR	4954833	ReturnType	gs_id		4954820	1					
ANR	4954834	Identifier	get_mem_hdr_id		4954820	2					
ANR	4954835	ParameterList	void * ptr		4954820	3					
ANR	4954836	Parameter	void * ptr	34:22:1048:1056	4954820	0	True				
ANR	4954837	ParameterType	void *		4954820	0					
ANR	4954838	Identifier	ptr		4954820	1					
ANR	4954839	CFGEntryNode	ENTRY		4954820		True				
ANR	4954840	CFGExitNode	EXIT		4954820		True				
ANR	4954841	Symbol	* ( ( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET )		4954820						
ANR	4954842	Symbol	HDR_ID_OFFSET		4954820						
ANR	4954843	Symbol	* ptr		4954820						
ANR	4954844	Symbol	* HDR_ID_OFFSET		4954820						
ANR	4954845	Symbol	ptr		4954820						
ANR	4954846	Function	alloc_trace_space	62:0:1937:2074							
ANR	4954847	FunctionDef	alloc_trace_space (const gs_ref_memory_t * imem)		4954846	0					
ANR	4954848	CompoundStatement		64:0:1995:2074	4954846	0					
ANR	4954849	ReturnStatement	return imem -> space + ( imem -> stable_memory == ( const gs_memory_t * ) imem ) ;	65:4:2001:2072	4954846	0	True				
ANR	4954850	AdditiveExpression	imem -> space + ( imem -> stable_memory == ( const gs_memory_t * ) imem )		4954846	0		+			
ANR	4954851	PtrMemberAccess	imem -> space		4954846	0					
ANR	4954852	Identifier	imem		4954846	0					
ANR	4954853	Identifier	space		4954846	1					
ANR	4954854	EqualityExpression	imem -> stable_memory == ( const gs_memory_t * ) imem		4954846	1		==			
ANR	4954855	PtrMemberAccess	imem -> stable_memory		4954846	0					
ANR	4954856	Identifier	imem		4954846	0					
ANR	4954857	Identifier	stable_memory		4954846	1					
ANR	4954858	CastExpression	( const gs_memory_t * ) imem		4954846	1					
ANR	4954859	CastTarget	const gs_memory_t *		4954846	0					
ANR	4954860	Identifier	imem		4954846	1					
ANR	4954861	ReturnType	static int		4954846	1					
ANR	4954862	Identifier	alloc_trace_space		4954846	2					
ANR	4954863	ParameterList	const gs_ref_memory_t * imem		4954846	3					
ANR	4954864	Parameter	const gs_ref_memory_t * imem	63:18:1966:1992	4954846	0	True				
ANR	4954865	ParameterType	const gs_ref_memory_t *		4954846	0					
ANR	4954866	Identifier	imem		4954846	1					
ANR	4954867	CFGEntryNode	ENTRY		4954846		True				
ANR	4954868	CFGExitNode	EXIT		4954846		True				
ANR	4954869	Symbol	imem -> space		4954846						
ANR	4954870	Symbol	imem -> stable_memory		4954846						
ANR	4954871	Symbol	imem		4954846						
ANR	4954872	Symbol	* imem		4954846						
ANR	4954873	Function	alloc_trace	67:0:2076:2546							
ANR	4954874	FunctionDef	"alloc_trace (const char * chars , gs_ref_memory_t * imem , client_name_t cname , gs_memory_type_ptr_t stype , uint size , const void * ptr)"		4954873	0					
ANR	4954875	CompoundStatement		70:0:2232:2546	4954873	0					
ANR	4954876	ExpressionStatement	"if_debug7m ( 'A' , ( const gs_memory_t * ) imem , ""[a%d%s]%s %s(%u) %s0x%lx\\n"" , alloc_trace_space ( imem ) , chars , client_name_string ( cname ) , ( ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype ) ) , size , ( chars [ 1 ] == '+' ? ""= "" : """" ) , ( ulong ) ptr )"	71:4:2238:2544	4954873	0	True				
ANR	4954877	CallExpression	"if_debug7m ( 'A' , ( const gs_memory_t * ) imem , ""[a%d%s]%s %s(%u) %s0x%lx\\n"" , alloc_trace_space ( imem ) , chars , client_name_string ( cname ) , ( ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype ) ) , size , ( chars [ 1 ] == '+' ? ""= "" : """" ) , ( ulong ) ptr )"		4954873	0					
ANR	4954878	Callee	if_debug7m		4954873	0					
ANR	4954879	Identifier	if_debug7m		4954873	0					
ANR	4954880	ArgumentList	'A'		4954873	1					
ANR	4954881	Argument	'A'		4954873	0					
ANR	4954882	PrimaryExpression	'A'		4954873	0					
ANR	4954883	Argument	( const gs_memory_t * ) imem		4954873	1					
ANR	4954884	CastExpression	( const gs_memory_t * ) imem		4954873	0					
ANR	4954885	CastTarget	const gs_memory_t *		4954873	0					
ANR	4954886	Identifier	imem		4954873	1					
ANR	4954887	Argument	"""[a%d%s]%s %s(%u) %s0x%lx\\n"""		4954873	2					
ANR	4954888	PrimaryExpression	"""[a%d%s]%s %s(%u) %s0x%lx\\n"""		4954873	0					
ANR	4954889	Argument	alloc_trace_space ( imem )		4954873	3					
ANR	4954890	CallExpression	alloc_trace_space ( imem )		4954873	0					
ANR	4954891	Callee	alloc_trace_space		4954873	0					
ANR	4954892	Identifier	alloc_trace_space		4954873	0					
ANR	4954893	ArgumentList	imem		4954873	1					
ANR	4954894	Argument	imem		4954873	0					
ANR	4954895	Identifier	imem		4954873	0					
ANR	4954896	Argument	chars		4954873	4					
ANR	4954897	Identifier	chars		4954873	0					
ANR	4954898	Argument	client_name_string ( cname )		4954873	5					
ANR	4954899	CallExpression	client_name_string ( cname )		4954873	0					
ANR	4954900	Callee	client_name_string		4954873	0					
ANR	4954901	Identifier	client_name_string		4954873	0					
ANR	4954902	ArgumentList	cname		4954873	1					
ANR	4954903	Argument	cname		4954873	0					
ANR	4954904	Identifier	cname		4954873	0					
ANR	4954905	Argument	"ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype )"		4954873	6					
ANR	4954906	ConditionalExpression	"ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype )"		4954873	0					
ANR	4954907	Condition	ptr == 0 || stype == 0		4954873	0					
ANR	4954908	OrExpression	ptr == 0 || stype == 0		4954873	0		||			
ANR	4954909	EqualityExpression	ptr == 0		4954873	0		==			
ANR	4954910	Identifier	ptr		4954873	0					
ANR	4954911	PrimaryExpression	0		4954873	1					
ANR	4954912	EqualityExpression	stype == 0		4954873	1		==			
ANR	4954913	Identifier	stype		4954873	0					
ANR	4954914	PrimaryExpression	0		4954873	1					
ANR	4954915	PrimaryExpression	""""""		4954873	1					
ANR	4954916	CallExpression	struct_type_name_string ( stype )		4954873	2					
ANR	4954917	Callee	struct_type_name_string		4954873	0					
ANR	4954918	Identifier	struct_type_name_string		4954873	0					
ANR	4954919	ArgumentList	stype		4954873	1					
ANR	4954920	Argument	stype		4954873	0					
ANR	4954921	Identifier	stype		4954873	0					
ANR	4954922	Argument	size		4954873	7					
ANR	4954923	Identifier	size		4954873	0					
ANR	4954924	Argument	"chars [ 1 ] == '+' ? ""= "" : """""		4954873	8					
ANR	4954925	ConditionalExpression	"chars [ 1 ] == '+' ? ""= "" : """""		4954873	0					
ANR	4954926	Condition	chars [ 1 ] == '+'		4954873	0					
ANR	4954927	EqualityExpression	chars [ 1 ] == '+'		4954873	0		==			
ANR	4954928	ArrayIndexing	chars [ 1 ]		4954873	0					
ANR	4954929	Identifier	chars		4954873	0					
ANR	4954930	PrimaryExpression	1		4954873	1					
ANR	4954931	PrimaryExpression	'+'		4954873	1					
ANR	4954932	PrimaryExpression	"""= """		4954873	1					
ANR	4954933	PrimaryExpression	""""""		4954873	2					
ANR	4954934	Argument	( ulong ) ptr		4954873	9					
ANR	4954935	CastExpression	( ulong ) ptr		4954873	0					
ANR	4954936	CastTarget	ulong		4954873	0					
ANR	4954937	Identifier	ptr		4954873	1					
ANR	4954938	ReturnType	static void		4954873	1					
ANR	4954939	Identifier	alloc_trace		4954873	2					
ANR	4954940	ParameterList	"const char * chars , gs_ref_memory_t * imem , client_name_t cname , gs_memory_type_ptr_t stype , uint size , const void * ptr"		4954873	3					
ANR	4954941	Parameter	const char * chars	68:12:2100:2116	4954873	0	True				
ANR	4954942	ParameterType	const char *		4954873	0					
ANR	4954943	Identifier	chars		4954873	1					
ANR	4954944	Parameter	gs_ref_memory_t * imem	68:31:2119:2140	4954873	1	True				
ANR	4954945	ParameterType	gs_ref_memory_t *		4954873	0					
ANR	4954946	Identifier	imem		4954873	1					
ANR	4954947	Parameter	client_name_t cname	68:55:2143:2161	4954873	2	True				
ANR	4954948	ParameterType	client_name_t		4954873	0					
ANR	4954949	Identifier	cname		4954873	1					
ANR	4954950	Parameter	gs_memory_type_ptr_t stype	69:12:2176:2201	4954873	3	True				
ANR	4954951	ParameterType	gs_memory_type_ptr_t		4954873	0					
ANR	4954952	Identifier	stype		4954873	1					
ANR	4954953	Parameter	uint size	69:40:2204:2212	4954873	4	True				
ANR	4954954	ParameterType	uint		4954873	0					
ANR	4954955	Identifier	size		4954873	1					
ANR	4954956	Parameter	const void * ptr	69:51:2215:2229	4954873	5	True				
ANR	4954957	ParameterType	const void *		4954873	0					
ANR	4954958	Identifier	ptr		4954873	1					
ANR	4954959	CFGEntryNode	ENTRY		4954873		True				
ANR	4954960	CFGExitNode	EXIT		4954873		True				
ANR	4954961	Symbol	struct_type_name_string		4954873						
ANR	4954962	Symbol	* chars		4954873						
ANR	4954963	Symbol	size		4954873						
ANR	4954964	Symbol	stype		4954873						
ANR	4954965	Symbol	cname		4954873						
ANR	4954966	Symbol	client_name_string		4954873						
ANR	4954967	Symbol	imem		4954873						
ANR	4954968	Symbol	chars		4954873						
ANR	4954969	Symbol	alloc_trace_space		4954873						
ANR	4954970	Symbol	ptr		4954873						
ANR	4954971	Function	alloc_size_is_ok	77:0:2548:2665							
ANR	4954972	FunctionDef	alloc_size_is_ok (gs_memory_type_ptr_t stype)		4954971	0					
ANR	4954973	CompoundStatement		79:0:2605:2665	4954971	0					
ANR	4954974	ReturnStatement	return ( stype -> ssize > 0 && stype -> ssize < 0x200000 ) ;	80:4:2611:2663	4954971	0	True				
ANR	4954975	AndExpression	stype -> ssize > 0 && stype -> ssize < 0x200000		4954971	0		&&			
ANR	4954976	RelationalExpression	stype -> ssize > 0		4954971	0		>			
ANR	4954977	PtrMemberAccess	stype -> ssize		4954971	0					
ANR	4954978	Identifier	stype		4954971	0					
ANR	4954979	Identifier	ssize		4954971	1					
ANR	4954980	PrimaryExpression	0		4954971	1					
ANR	4954981	RelationalExpression	stype -> ssize < 0x200000		4954971	1		<			
ANR	4954982	PtrMemberAccess	stype -> ssize		4954971	0					
ANR	4954983	Identifier	stype		4954971	0					
ANR	4954984	Identifier	ssize		4954971	1					
ANR	4954985	PrimaryExpression	0x200000		4954971	1					
ANR	4954986	ReturnType	static bool		4954971	1					
ANR	4954987	Identifier	alloc_size_is_ok		4954971	2					
ANR	4954988	ParameterList	gs_memory_type_ptr_t stype		4954971	3					
ANR	4954989	Parameter	gs_memory_type_ptr_t stype	78:17:2577:2602	4954971	0	True				
ANR	4954990	ParameterType	gs_memory_type_ptr_t		4954971	0					
ANR	4954991	Identifier	stype		4954971	1					
ANR	4954992	CFGEntryNode	ENTRY		4954971		True				
ANR	4954993	CFGExitNode	EXIT		4954971		True				
ANR	4954994	Symbol	stype -> ssize		4954971						
ANR	4954995	Symbol	stype		4954971						
ANR	4954996	Symbol	* stype		4954971						
ANR	4954997	ClassDef	<unnamed>	121:8:3919:4036							
ANR	4954998	DeclStmt									
ANR	4954999	Decl									alloc_flags_t
ANR	4955000	DeclStmt									
ANR	4955001	Decl							void	"void ( gs_ref_memory_t * mem , void * bottom , void * top )"	remove_range_from_freelist
ANR	4955002	DeclStmt									
ANR	4955003	Decl							obj_header_t	"obj_header_t * ( gs_ref_memory_t * mem , uint size )"	large_freelist_alloc
ANR	4955004	DeclStmt									
ANR	4955005	Decl							obj_header_t	"obj_header_t * ( gs_ref_memory_t * mem , unsigned request_size )"	scavenge_low_free
ANR	4955006	DeclStmt									
ANR	4955007	Decl							ulong	ulong ( gs_ref_memory_t * )	compute_free_objects
ANR	4955008	DeclStmt									
ANR	4955009	Decl							obj_header_t	"obj_header_t * ( gs_ref_memory_t * , ulong , gs_memory_type_ptr_t , alloc_flags_t , client_name_t )"	alloc_obj
ANR	4955010	DeclStmt									
ANR	4955011	Decl							void	"void ( clump_t * cp , gs_ref_memory_t * mem )"	consolidate_clump_free
ANR	4955012	DeclStmt									
ANR	4955013	Decl							void	"void ( gs_ref_memory_t * mem , obj_header_t * obj , uint size , clump_t * cp )"	trim_obj
ANR	4955014	DeclStmt									
ANR	4955015	Decl							clump_t	"clump_t * ( gs_ref_memory_t * , ulong , bool , client_name_t )"	alloc_acquire_clump
ANR	4955016	DeclStmt									
ANR	4955017	Decl							clump_t	"clump_t * ( gs_ref_memory_t * , ulong , client_name_t )"	alloc_add_clump
ANR	4955018	DeclStmt									
ANR	4955019	Decl							void	void ( gs_ref_memory_t * )	alloc_close_clump
ANR	4955020	DeclStmt									
ANR	4955021	Decl							const gs_memory_procs_t	const gs_memory_procs_t	gs_ref_memory_procs
ANR	4955022	Function	broken_splay	224:0:7948:8015							
ANR	4955023	FunctionDef	broken_splay ()		4955022	0					
ANR	4955024	CompoundStatement		226:0:7975:8015	4955022	0					
ANR	4955025	ExpressionStatement	"dlprintf ( ""Broken splay tree!\\n"" )"	227:4:7981:8013	4955022	0	True				
ANR	4955026	CallExpression	"dlprintf ( ""Broken splay tree!\\n"" )"		4955022	0					
ANR	4955027	Callee	dlprintf		4955022	0					
ANR	4955028	Identifier	dlprintf		4955022	0					
ANR	4955029	ArgumentList	"""Broken splay tree!\\n"""		4955022	1					
ANR	4955030	Argument	"""Broken splay tree!\\n"""		4955022	0					
ANR	4955031	PrimaryExpression	"""Broken splay tree!\\n"""		4955022	0					
ANR	4955032	ReturnType	static void		4955022	1					
ANR	4955033	Identifier	broken_splay		4955022	2					
ANR	4955034	ParameterList			4955022	3					
ANR	4955035	CFGEntryNode	ENTRY		4955022		True				
ANR	4955036	CFGExitNode	EXIT		4955022		True				
ANR	4955037	Function	sanity_check_rec	230:0:8018:9510							
ANR	4955038	FunctionDef	sanity_check_rec (clump_t * cp)		4955037	0					
ANR	4955039	CompoundStatement		231:0:8053:9510	4955037	0					
ANR	4955040	IdentifierDeclStatement	splay_dir_t from = SPLAY_FROM_ABOVE ;	232:4:8059:8094	4955037	0	True				
ANR	4955041	IdentifierDecl	from = SPLAY_FROM_ABOVE		4955037	0					
ANR	4955042	IdentifierDeclType	splay_dir_t		4955037	0					
ANR	4955043	Identifier	from		4955037	1					
ANR	4955044	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955037	2		=			
ANR	4955045	Identifier	SPLAY_FROM_ABOVE		4955037	0					
ANR	4955046	Identifier	SPLAY_FROM_ABOVE		4955037	1					
ANR	4955047	WhileStatement	while ( cp )		4955037	1					
ANR	4955048	Condition	cp	234:11:8108:8109	4955037	0	True				
ANR	4955049	Identifier	cp		4955037	0					
ANR	4955050	CompoundStatement		5:4:62:62	4955037	1					
ANR	4955051	IfStatement	if ( from == SPLAY_FROM_ABOVE )		4955037	0					
ANR	4955052	Condition	from == SPLAY_FROM_ABOVE	236:12:8130:8153	4955037	0	True				
ANR	4955053	EqualityExpression	from == SPLAY_FROM_ABOVE		4955037	0		==			
ANR	4955054	Identifier	from		4955037	0					
ANR	4955055	Identifier	SPLAY_FROM_ABOVE		4955037	1					
ANR	4955056	CompoundStatement		7:8:110:110	4955037	1					
ANR	4955057	IfStatement	if ( cp -> left )		4955037	0					
ANR	4955058	Condition	cp -> left	239:16:8239:8246	4955037	0	True				
ANR	4955059	PtrMemberAccess	cp -> left		4955037	0					
ANR	4955060	Identifier	cp		4955037	0					
ANR	4955061	Identifier	left		4955037	1					
ANR	4955062	CompoundStatement		10:12:207:207	4955037	1					
ANR	4955063	IfStatement	if ( cp -> left -> cbase > cp -> cbase || cp -> left -> parent != cp )		4955037	0					
ANR	4955064	Condition	cp -> left -> cbase > cp -> cbase || cp -> left -> parent != cp	241:20:8283:8335	4955037	0	True				
ANR	4955065	OrExpression	cp -> left -> cbase > cp -> cbase || cp -> left -> parent != cp		4955037	0		||			
ANR	4955066	RelationalExpression	cp -> left -> cbase > cp -> cbase		4955037	0		>			
ANR	4955067	PtrMemberAccess	cp -> left -> cbase		4955037	0					
ANR	4955068	PtrMemberAccess	cp -> left		4955037	0					
ANR	4955069	Identifier	cp		4955037	0					
ANR	4955070	Identifier	left		4955037	1					
ANR	4955071	Identifier	cbase		4955037	1					
ANR	4955072	PtrMemberAccess	cp -> cbase		4955037	1					
ANR	4955073	Identifier	cp		4955037	0					
ANR	4955074	Identifier	cbase		4955037	1					
ANR	4955075	EqualityExpression	cp -> left -> parent != cp		4955037	1		!=			
ANR	4955076	PtrMemberAccess	cp -> left -> parent		4955037	0					
ANR	4955077	PtrMemberAccess	cp -> left		4955037	0					
ANR	4955078	Identifier	cp		4955037	0					
ANR	4955079	Identifier	left		4955037	1					
ANR	4955080	Identifier	parent		4955037	1					
ANR	4955081	Identifier	cp		4955037	1					
ANR	4955082	ExpressionStatement	broken_splay ( )	242:20:8358:8372	4955037	1	True				
ANR	4955083	CallExpression	broken_splay ( )		4955037	0					
ANR	4955084	Callee	broken_splay		4955037	0					
ANR	4955085	Identifier	broken_splay		4955037	0					
ANR	4955086	ArgumentList			4955037	1					
ANR	4955087	ExpressionStatement	cp = cp -> left	243:16:8390:8403	4955037	1	True				
ANR	4955088	AssignmentExpression	cp = cp -> left		4955037	0		=			
ANR	4955089	Identifier	cp		4955037	0					
ANR	4955090	PtrMemberAccess	cp -> left		4955037	1					
ANR	4955091	Identifier	cp		4955037	0					
ANR	4955092	Identifier	left		4955037	1					
ANR	4955093	ExpressionStatement	from = SPLAY_FROM_ABOVE	244:16:8421:8444	4955037	2	True				
ANR	4955094	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955037	0		=			
ANR	4955095	Identifier	from		4955037	0					
ANR	4955096	Identifier	SPLAY_FROM_ABOVE		4955037	1					
ANR	4955097	ContinueStatement	continue ;	245:16:8462:8470	4955037	3	True				
ANR	4955098	ExpressionStatement	from = SPLAY_FROM_LEFT	248:12:8579:8601	4955037	1	True				
ANR	4955099	AssignmentExpression	from = SPLAY_FROM_LEFT		4955037	0		=			
ANR	4955100	Identifier	from		4955037	0					
ANR	4955101	Identifier	SPLAY_FROM_LEFT		4955037	1					
ANR	4955102	IfStatement	if ( from == SPLAY_FROM_LEFT )		4955037	1					
ANR	4955103	Condition	from == SPLAY_FROM_LEFT	250:12:8625:8647	4955037	0	True				
ANR	4955104	EqualityExpression	from == SPLAY_FROM_LEFT		4955037	0		==			
ANR	4955105	Identifier	from		4955037	0					
ANR	4955106	Identifier	SPLAY_FROM_LEFT		4955037	1					
ANR	4955107	CompoundStatement		21:8:604:604	4955037	1					
ANR	4955108	IfStatement	if ( cp -> right )		4955037	0					
ANR	4955109	Condition	cp -> right	253:16:8737:8745	4955037	0	True				
ANR	4955110	PtrMemberAccess	cp -> right		4955037	0					
ANR	4955111	Identifier	cp		4955037	0					
ANR	4955112	Identifier	right		4955037	1					
ANR	4955113	CompoundStatement		24:12:706:706	4955037	1					
ANR	4955114	IfStatement	if ( cp -> right -> cbase < cp -> cbase || cp -> right -> parent != cp )		4955037	0					
ANR	4955115	Condition	cp -> right -> cbase < cp -> cbase || cp -> right -> parent != cp	255:20:8782:8836	4955037	0	True				
ANR	4955116	OrExpression	cp -> right -> cbase < cp -> cbase || cp -> right -> parent != cp		4955037	0		||			
ANR	4955117	RelationalExpression	cp -> right -> cbase < cp -> cbase		4955037	0		<			
ANR	4955118	PtrMemberAccess	cp -> right -> cbase		4955037	0					
ANR	4955119	PtrMemberAccess	cp -> right		4955037	0					
ANR	4955120	Identifier	cp		4955037	0					
ANR	4955121	Identifier	right		4955037	1					
ANR	4955122	Identifier	cbase		4955037	1					
ANR	4955123	PtrMemberAccess	cp -> cbase		4955037	1					
ANR	4955124	Identifier	cp		4955037	0					
ANR	4955125	Identifier	cbase		4955037	1					
ANR	4955126	EqualityExpression	cp -> right -> parent != cp		4955037	1		!=			
ANR	4955127	PtrMemberAccess	cp -> right -> parent		4955037	0					
ANR	4955128	PtrMemberAccess	cp -> right		4955037	0					
ANR	4955129	Identifier	cp		4955037	0					
ANR	4955130	Identifier	right		4955037	1					
ANR	4955131	Identifier	parent		4955037	1					
ANR	4955132	Identifier	cp		4955037	1					
ANR	4955133	ExpressionStatement	broken_splay ( )	256:20:8859:8873	4955037	1	True				
ANR	4955134	CallExpression	broken_splay ( )		4955037	0					
ANR	4955135	Callee	broken_splay		4955037	0					
ANR	4955136	Identifier	broken_splay		4955037	0					
ANR	4955137	ArgumentList			4955037	1					
ANR	4955138	ExpressionStatement	cp = cp -> right	257:16:8891:8905	4955037	1	True				
ANR	4955139	AssignmentExpression	cp = cp -> right		4955037	0		=			
ANR	4955140	Identifier	cp		4955037	0					
ANR	4955141	PtrMemberAccess	cp -> right		4955037	1					
ANR	4955142	Identifier	cp		4955037	0					
ANR	4955143	Identifier	right		4955037	1					
ANR	4955144	ExpressionStatement	from = SPLAY_FROM_ABOVE	258:16:8923:8946	4955037	2	True				
ANR	4955145	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955037	0		=			
ANR	4955146	Identifier	from		4955037	0					
ANR	4955147	Identifier	SPLAY_FROM_ABOVE		4955037	1					
ANR	4955148	ContinueStatement	continue ;	259:16:8964:8972	4955037	3	True				
ANR	4955149	ExpressionStatement	from = SPLAY_FROM_RIGHT	262:12:9083:9106	4955037	1	True				
ANR	4955150	AssignmentExpression	from = SPLAY_FROM_RIGHT		4955037	0		=			
ANR	4955151	Identifier	from		4955037	0					
ANR	4955152	Identifier	SPLAY_FROM_RIGHT		4955037	1					
ANR	4955153	IfStatement	if ( from == SPLAY_FROM_RIGHT )		4955037	2					
ANR	4955154	Condition	from == SPLAY_FROM_RIGHT	264:12:9130:9153	4955037	0	True				
ANR	4955155	EqualityExpression	from == SPLAY_FROM_RIGHT		4955037	0		==			
ANR	4955156	Identifier	from		4955037	0					
ANR	4955157	Identifier	SPLAY_FROM_RIGHT		4955037	1					
ANR	4955158	CompoundStatement		35:8:1110:1110	4955037	1					
ANR	4955159	IfStatement	if ( cp -> parent == NULL )		4955037	0					
ANR	4955160	Condition	cp -> parent == NULL	267:16:9241:9258	4955037	0	True				
ANR	4955161	EqualityExpression	cp -> parent == NULL		4955037	0		==			
ANR	4955162	PtrMemberAccess	cp -> parent		4955037	0					
ANR	4955163	Identifier	cp		4955037	0					
ANR	4955164	Identifier	parent		4955037	1					
ANR	4955165	Identifier	NULL		4955037	1					
ANR	4955166	BreakStatement	break ;	268:16:9277:9282	4955037	1	True				
ANR	4955167	IfStatement	if ( cp -> parent -> left != cp && cp -> parent -> right != cp )		4955037	1					
ANR	4955168	Condition	cp -> parent -> left != cp && cp -> parent -> right != cp	269:16:9300:9348	4955037	0	True				
ANR	4955169	AndExpression	cp -> parent -> left != cp && cp -> parent -> right != cp		4955037	0		&&			
ANR	4955170	EqualityExpression	cp -> parent -> left != cp		4955037	0		!=			
ANR	4955171	PtrMemberAccess	cp -> parent -> left		4955037	0					
ANR	4955172	PtrMemberAccess	cp -> parent		4955037	0					
ANR	4955173	Identifier	cp		4955037	0					
ANR	4955174	Identifier	parent		4955037	1					
ANR	4955175	Identifier	left		4955037	1					
ANR	4955176	Identifier	cp		4955037	1					
ANR	4955177	EqualityExpression	cp -> parent -> right != cp		4955037	1		!=			
ANR	4955178	PtrMemberAccess	cp -> parent -> right		4955037	0					
ANR	4955179	PtrMemberAccess	cp -> parent		4955037	0					
ANR	4955180	Identifier	cp		4955037	0					
ANR	4955181	Identifier	parent		4955037	1					
ANR	4955182	Identifier	right		4955037	1					
ANR	4955183	Identifier	cp		4955037	1					
ANR	4955184	ExpressionStatement	broken_splay ( )	270:16:9367:9381	4955037	1	True				
ANR	4955185	CallExpression	broken_splay ( )		4955037	0					
ANR	4955186	Callee	broken_splay		4955037	0					
ANR	4955187	Identifier	broken_splay		4955037	0					
ANR	4955188	ArgumentList			4955037	1					
ANR	4955189	ExpressionStatement	from = ( cp -> parent -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )	271:12:9395:9463	4955037	2	True				
ANR	4955190	AssignmentExpression	from = ( cp -> parent -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )		4955037	0		=			
ANR	4955191	Identifier	from		4955037	0					
ANR	4955192	ConditionalExpression	cp -> parent -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT		4955037	1					
ANR	4955193	Condition	cp -> parent -> left == cp		4955037	0					
ANR	4955194	EqualityExpression	cp -> parent -> left == cp		4955037	0		==			
ANR	4955195	PtrMemberAccess	cp -> parent -> left		4955037	0					
ANR	4955196	PtrMemberAccess	cp -> parent		4955037	0					
ANR	4955197	Identifier	cp		4955037	0					
ANR	4955198	Identifier	parent		4955037	1					
ANR	4955199	Identifier	left		4955037	1					
ANR	4955200	Identifier	cp		4955037	1					
ANR	4955201	Identifier	SPLAY_FROM_LEFT		4955037	1					
ANR	4955202	Identifier	SPLAY_FROM_RIGHT		4955037	2					
ANR	4955203	ExpressionStatement	cp = cp -> parent	272:12:9477:9492	4955037	3	True				
ANR	4955204	AssignmentExpression	cp = cp -> parent		4955037	0		=			
ANR	4955205	Identifier	cp		4955037	0					
ANR	4955206	PtrMemberAccess	cp -> parent		4955037	1					
ANR	4955207	Identifier	cp		4955037	0					
ANR	4955208	Identifier	parent		4955037	1					
ANR	4955209	ReturnType	void		4955037	1					
ANR	4955210	Identifier	sanity_check_rec		4955037	2					
ANR	4955211	ParameterList	clump_t * cp		4955037	3					
ANR	4955212	Parameter	clump_t * cp	230:22:8040:8050	4955037	0	True				
ANR	4955213	ParameterType	clump_t *		4955037	0					
ANR	4955214	Identifier	cp		4955037	1					
ANR	4955215	CFGEntryNode	ENTRY		4955037		True				
ANR	4955216	CFGExitNode	EXIT		4955037		True				
ANR	4955217	Symbol	cp -> right -> cbase		4955037						
ANR	4955218	Symbol	NULL		4955037						
ANR	4955219	Symbol	SPLAY_FROM_ABOVE		4955037						
ANR	4955220	Symbol	SPLAY_FROM_RIGHT		4955037						
ANR	4955221	Symbol	cp -> parent -> right		4955037						
ANR	4955222	Symbol	cp -> left -> parent		4955037						
ANR	4955223	Symbol	cp -> right		4955037						
ANR	4955224	Symbol	* cp -> parent		4955037						
ANR	4955225	Symbol	cp -> cbase		4955037						
ANR	4955226	Symbol	* cp -> left		4955037						
ANR	4955227	Symbol	cp		4955037						
ANR	4955228	Symbol	* cp		4955037						
ANR	4955229	Symbol	cp -> parent -> left		4955037						
ANR	4955230	Symbol	cp -> left		4955037						
ANR	4955231	Symbol	* cp -> right		4955037						
ANR	4955232	Symbol	cp -> parent		4955037						
ANR	4955233	Symbol	SPLAY_FROM_LEFT		4955037						
ANR	4955234	Symbol	from		4955037						
ANR	4955235	Symbol	cp -> left -> cbase		4955037						
ANR	4955236	Symbol	* * cp		4955037						
ANR	4955237	Symbol	cp -> right -> parent		4955037						
ANR	4955238	Function	sanity_check	277:0:9513:9572							
ANR	4955239	FunctionDef	sanity_check (clump_t * cp)		4955238	0					
ANR	4955240	CompoundStatement		278:0:9544:9572	4955238	0					
ANR	4955241	ExpressionStatement	sanity_check_rec ( cp )	279:4:9550:9570	4955238	0	True				
ANR	4955242	CallExpression	sanity_check_rec ( cp )		4955238	0					
ANR	4955243	Callee	sanity_check_rec		4955238	0					
ANR	4955244	Identifier	sanity_check_rec		4955238	0					
ANR	4955245	ArgumentList	cp		4955238	1					
ANR	4955246	Argument	cp		4955238	0					
ANR	4955247	Identifier	cp		4955238	0					
ANR	4955248	ReturnType	void		4955238	1					
ANR	4955249	Identifier	sanity_check		4955238	2					
ANR	4955250	ParameterList	clump_t * cp		4955238	3					
ANR	4955251	Parameter	clump_t * cp	277:18:9531:9541	4955238	0	True				
ANR	4955252	ParameterType	clump_t *		4955238	0					
ANR	4955253	Identifier	cp		4955238	1					
ANR	4955254	CFGEntryNode	ENTRY		4955238		True				
ANR	4955255	CFGExitNode	EXIT		4955238		True				
ANR	4955256	Symbol	cp		4955238						
ANR	4955257	Function	sanity_check_mid	282:0:9575:9923							
ANR	4955258	FunctionDef	sanity_check_mid (clump_t * cp)		4955257	0					
ANR	4955259	CompoundStatement		283:0:9610:9923	4955257	0					
ANR	4955260	IdentifierDeclStatement	clump_t * parent ;	284:4:9616:9631	4955257	0	True				
ANR	4955261	IdentifierDecl	* parent		4955257	0					
ANR	4955262	IdentifierDeclType	clump_t *		4955257	0					
ANR	4955263	Identifier	parent		4955257	1					
ANR	4955264	WhileStatement	while ( ( parent = cp -> parent ) != NULL )		4955257	1					
ANR	4955265	Condition	( parent = cp -> parent ) != NULL	286:11:9645:9673	4955257	0	True				
ANR	4955266	EqualityExpression	( parent = cp -> parent ) != NULL		4955257	0		!=			
ANR	4955267	AssignmentExpression	parent = cp -> parent		4955257	0		=			
ANR	4955268	Identifier	parent		4955257	0					
ANR	4955269	PtrMemberAccess	cp -> parent		4955257	1					
ANR	4955270	Identifier	cp		4955257	0					
ANR	4955271	Identifier	parent		4955257	1					
ANR	4955272	Identifier	NULL		4955257	1					
ANR	4955273	CompoundStatement		5:4:69:69	4955257	1					
ANR	4955274	IfStatement	if ( parent -> left == cp )		4955257	0					
ANR	4955275	Condition	parent -> left == cp	288:12:9694:9711	4955257	0	True				
ANR	4955276	EqualityExpression	parent -> left == cp		4955257	0		==			
ANR	4955277	PtrMemberAccess	parent -> left		4955257	0					
ANR	4955278	Identifier	parent		4955257	0					
ANR	4955279	Identifier	left		4955257	1					
ANR	4955280	Identifier	cp		4955257	1					
ANR	4955281	CompoundStatement		7:8:111:111	4955257	1					
ANR	4955282	IfStatement	if ( parent -> right == cp )		4955257	0					
ANR	4955283	Condition	parent -> right == cp	290:16:9740:9758	4955257	0	True				
ANR	4955284	EqualityExpression	parent -> right == cp		4955257	0		==			
ANR	4955285	PtrMemberAccess	parent -> right		4955257	0					
ANR	4955286	Identifier	parent		4955257	0					
ANR	4955287	Identifier	right		4955257	1					
ANR	4955288	Identifier	cp		4955257	1					
ANR	4955289	ExpressionStatement	broken_splay ( )	291:16:9777:9791	4955257	1	True				
ANR	4955290	CallExpression	broken_splay ( )		4955257	0					
ANR	4955291	Callee	broken_splay		4955257	0					
ANR	4955292	Identifier	broken_splay		4955257	0					
ANR	4955293	ArgumentList			4955257	1					
ANR	4955294	ElseStatement	else		4955257	0					
ANR	4955295	IfStatement	if ( parent -> right != cp )		4955257	0					
ANR	4955296	Condition	parent -> right != cp	293:17:9820:9838	4955257	0	True				
ANR	4955297	EqualityExpression	parent -> right != cp		4955257	0		!=			
ANR	4955298	PtrMemberAccess	parent -> right		4955257	0					
ANR	4955299	Identifier	parent		4955257	0					
ANR	4955300	Identifier	right		4955257	1					
ANR	4955301	Identifier	cp		4955257	1					
ANR	4955302	ExpressionStatement	broken_splay ( )	294:12:9853:9867	4955257	1	True				
ANR	4955303	CallExpression	broken_splay ( )		4955257	0					
ANR	4955304	Callee	broken_splay		4955257	0					
ANR	4955305	Identifier	broken_splay		4955257	0					
ANR	4955306	ArgumentList			4955257	1					
ANR	4955307	ExpressionStatement	cp = parent	295:8:9877:9888	4955257	1	True				
ANR	4955308	AssignmentExpression	cp = parent		4955257	0		=			
ANR	4955309	Identifier	cp		4955257	0					
ANR	4955310	Identifier	parent		4955257	1					
ANR	4955311	ExpressionStatement	sanity_check_rec ( cp )	298:4:9901:9921	4955257	2	True				
ANR	4955312	CallExpression	sanity_check_rec ( cp )		4955257	0					
ANR	4955313	Callee	sanity_check_rec		4955257	0					
ANR	4955314	Identifier	sanity_check_rec		4955257	0					
ANR	4955315	ArgumentList	cp		4955257	1					
ANR	4955316	Argument	cp		4955257	0					
ANR	4955317	Identifier	cp		4955257	0					
ANR	4955318	ReturnType	void		4955257	1					
ANR	4955319	Identifier	sanity_check_mid		4955257	2					
ANR	4955320	ParameterList	clump_t * cp		4955257	3					
ANR	4955321	Parameter	clump_t * cp	282:22:9597:9607	4955257	0	True				
ANR	4955322	ParameterType	clump_t *		4955257	0					
ANR	4955323	Identifier	cp		4955257	1					
ANR	4955324	CFGEntryNode	ENTRY		4955257		True				
ANR	4955325	CFGExitNode	EXIT		4955257		True				
ANR	4955326	Symbol	* cp		4955257						
ANR	4955327	Symbol	parent		4955257						
ANR	4955328	Symbol	NULL		4955257						
ANR	4955329	Symbol	* parent		4955257						
ANR	4955330	Symbol	cp -> parent		4955257						
ANR	4955331	Symbol	parent -> left		4955257						
ANR	4955332	Symbol	parent -> right		4955257						
ANR	4955333	Symbol	cp		4955257						
ANR	4955334	Function	clump_splay_walk_init	309:0:10173:10500							
ANR	4955335	FunctionDef	"clump_splay_walk_init (clump_splay_walker * sw , const gs_ref_memory_t * mem)"		4955334	0					
ANR	4955336	CompoundStatement		311:0:10257:10500	4955334	0					
ANR	4955337	IdentifierDeclStatement	clump_t * cp = mem -> root ;	312:4:10263:10286	4955334	0	True				
ANR	4955338	IdentifierDecl	* cp = mem -> root		4955334	0					
ANR	4955339	IdentifierDeclType	clump_t *		4955334	0					
ANR	4955340	Identifier	cp		4955334	1					
ANR	4955341	AssignmentExpression	* cp = mem -> root		4955334	2		=			
ANR	4955342	Identifier	cp		4955334	0					
ANR	4955343	PtrMemberAccess	mem -> root		4955334	1					
ANR	4955344	Identifier	mem		4955334	0					
ANR	4955345	Identifier	root		4955334	1					
ANR	4955346	IfStatement	if ( cp )		4955334	1					
ANR	4955347	Condition	cp	314:8:10297:10298	4955334	0	True				
ANR	4955348	Identifier	cp		4955334	0					
ANR	4955349	CompoundStatement		5:4:47:47	4955334	1					
ANR	4955350	ExpressionStatement	SANITY_CHECK ( cp )	316:8:10315:10331	4955334	0	True				
ANR	4955351	CallExpression	SANITY_CHECK ( cp )		4955334	0					
ANR	4955352	Callee	SANITY_CHECK		4955334	0					
ANR	4955353	Identifier	SANITY_CHECK		4955334	0					
ANR	4955354	ArgumentList	cp		4955334	1					
ANR	4955355	Argument	cp		4955334	0					
ANR	4955356	Identifier	cp		4955334	0					
ANR	4955357	ExpressionStatement	sw -> from = SPLAY_FROM_LEFT	318:8:10342:10368	4955334	1	True				
ANR	4955358	AssignmentExpression	sw -> from = SPLAY_FROM_LEFT		4955334	0		=			
ANR	4955359	PtrMemberAccess	sw -> from		4955334	0					
ANR	4955360	Identifier	sw		4955334	0					
ANR	4955361	Identifier	from		4955334	1					
ANR	4955362	Identifier	SPLAY_FROM_LEFT		4955334	1					
ANR	4955363	WhileStatement	while ( cp -> left )		4955334	2					
ANR	4955364	Condition	cp -> left	319:15:10385:10392	4955334	0	True				
ANR	4955365	PtrMemberAccess	cp -> left		4955334	0					
ANR	4955366	Identifier	cp		4955334	0					
ANR	4955367	Identifier	left		4955334	1					
ANR	4955368	CompoundStatement		10:8:145:145	4955334	1					
ANR	4955369	ExpressionStatement	cp = cp -> left	321:12:10417:10430	4955334	0	True				
ANR	4955370	AssignmentExpression	cp = cp -> left		4955334	0		=			
ANR	4955371	Identifier	cp		4955334	0					
ANR	4955372	PtrMemberAccess	cp -> left		4955334	1					
ANR	4955373	Identifier	cp		4955334	0					
ANR	4955374	Identifier	left		4955334	1					
ANR	4955375	ExpressionStatement	sw -> cp = cp	324:4:10452:10463	4955334	2	True				
ANR	4955376	AssignmentExpression	sw -> cp = cp		4955334	0		=			
ANR	4955377	PtrMemberAccess	sw -> cp		4955334	0					
ANR	4955378	Identifier	sw		4955334	0					
ANR	4955379	Identifier	cp		4955334	1					
ANR	4955380	Identifier	cp		4955334	1					
ANR	4955381	ExpressionStatement	sw -> end = NULL	325:4:10469:10483	4955334	3	True				
ANR	4955382	AssignmentExpression	sw -> end = NULL		4955334	0		=			
ANR	4955383	PtrMemberAccess	sw -> end		4955334	0					
ANR	4955384	Identifier	sw		4955334	0					
ANR	4955385	Identifier	end		4955334	1					
ANR	4955386	Identifier	NULL		4955334	1					
ANR	4955387	ReturnStatement	return cp ;	326:4:10489:10498	4955334	4	True				
ANR	4955388	Identifier	cp		4955334	0					
ANR	4955389	ReturnType	clump_t *		4955334	1					
ANR	4955390	Identifier	clump_splay_walk_init		4955334	2					
ANR	4955391	ParameterList	"clump_splay_walker * sw , const gs_ref_memory_t * mem"		4955334	3					
ANR	4955392	Parameter	clump_splay_walker * sw	310:22:10205:10226	4955334	0	True				
ANR	4955393	ParameterType	clump_splay_walker *		4955334	0					
ANR	4955394	Identifier	sw		4955334	1					
ANR	4955395	Parameter	const gs_ref_memory_t * mem	310:46:10229:10254	4955334	1	True				
ANR	4955396	ParameterType	const gs_ref_memory_t *		4955334	0					
ANR	4955397	Identifier	mem		4955334	1					
ANR	4955398	CFGEntryNode	ENTRY		4955334		True				
ANR	4955399	CFGExitNode	EXIT		4955334		True				
ANR	4955400	Symbol	NULL		4955334						
ANR	4955401	Symbol	sw		4955334						
ANR	4955402	Symbol	* sw		4955334						
ANR	4955403	Symbol	cp		4955334						
ANR	4955404	Symbol	* cp		4955334						
ANR	4955405	Symbol	mem		4955334						
ANR	4955406	Symbol	cp -> left		4955334						
ANR	4955407	Symbol	sw -> from		4955334						
ANR	4955408	Symbol	SPLAY_FROM_LEFT		4955334						
ANR	4955409	Symbol	mem -> root		4955334						
ANR	4955410	Symbol	sw -> end		4955334						
ANR	4955411	Symbol	sw -> cp		4955334						
ANR	4955412	Symbol	* mem		4955334						
ANR	4955413	Function	clump_splay_walk_bwd_init	329:0:10503:10837							
ANR	4955414	FunctionDef	"clump_splay_walk_bwd_init (clump_splay_walker * sw , const gs_ref_memory_t * mem)"		4955413	0					
ANR	4955415	CompoundStatement		331:0:10591:10837	4955413	0					
ANR	4955416	IdentifierDeclStatement	clump_t * cp = mem -> root ;	332:4:10597:10620	4955413	0	True				
ANR	4955417	IdentifierDecl	* cp = mem -> root		4955413	0					
ANR	4955418	IdentifierDeclType	clump_t *		4955413	0					
ANR	4955419	Identifier	cp		4955413	1					
ANR	4955420	AssignmentExpression	* cp = mem -> root		4955413	2		=			
ANR	4955421	Identifier	cp		4955413	0					
ANR	4955422	PtrMemberAccess	mem -> root		4955413	1					
ANR	4955423	Identifier	mem		4955413	0					
ANR	4955424	Identifier	root		4955413	1					
ANR	4955425	IfStatement	if ( cp )		4955413	1					
ANR	4955426	Condition	cp	334:8:10631:10632	4955413	0	True				
ANR	4955427	Identifier	cp		4955413	0					
ANR	4955428	CompoundStatement		5:4:47:47	4955413	1					
ANR	4955429	ExpressionStatement	SANITY_CHECK ( cp )	336:8:10649:10665	4955413	0	True				
ANR	4955430	CallExpression	SANITY_CHECK ( cp )		4955413	0					
ANR	4955431	Callee	SANITY_CHECK		4955413	0					
ANR	4955432	Identifier	SANITY_CHECK		4955413	0					
ANR	4955433	ArgumentList	cp		4955413	1					
ANR	4955434	Argument	cp		4955413	0					
ANR	4955435	Identifier	cp		4955413	0					
ANR	4955436	ExpressionStatement	sw -> from = SPLAY_FROM_RIGHT	338:8:10676:10703	4955413	1	True				
ANR	4955437	AssignmentExpression	sw -> from = SPLAY_FROM_RIGHT		4955413	0		=			
ANR	4955438	PtrMemberAccess	sw -> from		4955413	0					
ANR	4955439	Identifier	sw		4955413	0					
ANR	4955440	Identifier	from		4955413	1					
ANR	4955441	Identifier	SPLAY_FROM_RIGHT		4955413	1					
ANR	4955442	WhileStatement	while ( cp -> right )		4955413	2					
ANR	4955443	Condition	cp -> right	339:15:10720:10728	4955413	0	True				
ANR	4955444	PtrMemberAccess	cp -> right		4955413	0					
ANR	4955445	Identifier	cp		4955413	0					
ANR	4955446	Identifier	right		4955413	1					
ANR	4955447	CompoundStatement		10:8:147:147	4955413	1					
ANR	4955448	ExpressionStatement	cp = cp -> right	341:12:10753:10767	4955413	0	True				
ANR	4955449	AssignmentExpression	cp = cp -> right		4955413	0		=			
ANR	4955450	Identifier	cp		4955413	0					
ANR	4955451	PtrMemberAccess	cp -> right		4955413	1					
ANR	4955452	Identifier	cp		4955413	0					
ANR	4955453	Identifier	right		4955413	1					
ANR	4955454	ExpressionStatement	sw -> cp = cp	344:4:10789:10800	4955413	2	True				
ANR	4955455	AssignmentExpression	sw -> cp = cp		4955413	0		=			
ANR	4955456	PtrMemberAccess	sw -> cp		4955413	0					
ANR	4955457	Identifier	sw		4955413	0					
ANR	4955458	Identifier	cp		4955413	1					
ANR	4955459	Identifier	cp		4955413	1					
ANR	4955460	ExpressionStatement	sw -> end = NULL	345:4:10806:10820	4955413	3	True				
ANR	4955461	AssignmentExpression	sw -> end = NULL		4955413	0		=			
ANR	4955462	PtrMemberAccess	sw -> end		4955413	0					
ANR	4955463	Identifier	sw		4955413	0					
ANR	4955464	Identifier	end		4955413	1					
ANR	4955465	Identifier	NULL		4955413	1					
ANR	4955466	ReturnStatement	return cp ;	346:4:10826:10835	4955413	4	True				
ANR	4955467	Identifier	cp		4955413	0					
ANR	4955468	ReturnType	clump_t *		4955413	1					
ANR	4955469	Identifier	clump_splay_walk_bwd_init		4955413	2					
ANR	4955470	ParameterList	"clump_splay_walker * sw , const gs_ref_memory_t * mem"		4955413	3					
ANR	4955471	Parameter	clump_splay_walker * sw	330:26:10539:10560	4955413	0	True				
ANR	4955472	ParameterType	clump_splay_walker *		4955413	0					
ANR	4955473	Identifier	sw		4955413	1					
ANR	4955474	Parameter	const gs_ref_memory_t * mem	330:50:10563:10588	4955413	1	True				
ANR	4955475	ParameterType	const gs_ref_memory_t *		4955413	0					
ANR	4955476	Identifier	mem		4955413	1					
ANR	4955477	CFGEntryNode	ENTRY		4955413		True				
ANR	4955478	CFGExitNode	EXIT		4955413		True				
ANR	4955479	Symbol	NULL		4955413						
ANR	4955480	Symbol	sw		4955413						
ANR	4955481	Symbol	SPLAY_FROM_RIGHT		4955413						
ANR	4955482	Symbol	* sw		4955413						
ANR	4955483	Symbol	cp -> right		4955413						
ANR	4955484	Symbol	cp		4955413						
ANR	4955485	Symbol	* cp		4955413						
ANR	4955486	Symbol	mem		4955413						
ANR	4955487	Symbol	sw -> from		4955413						
ANR	4955488	Symbol	mem -> root		4955413						
ANR	4955489	Symbol	sw -> end		4955413						
ANR	4955490	Symbol	sw -> cp		4955413						
ANR	4955491	Symbol	* mem		4955413						
ANR	4955492	Function	clump_splay_walk_init_mid	353:0:11009:11220							
ANR	4955493	FunctionDef	"clump_splay_walk_init_mid (clump_splay_walker * sw , clump_t * cp)"		4955492	0					
ANR	4955494	CompoundStatement		355:0:11082:11220	4955492	0					
ANR	4955495	ExpressionStatement	sw -> from = SPLAY_FROM_LEFT	356:4:11088:11114	4955492	0	True				
ANR	4955496	AssignmentExpression	sw -> from = SPLAY_FROM_LEFT		4955492	0		=			
ANR	4955497	PtrMemberAccess	sw -> from		4955492	0					
ANR	4955498	Identifier	sw		4955492	0					
ANR	4955499	Identifier	from		4955492	1					
ANR	4955500	Identifier	SPLAY_FROM_LEFT		4955492	1					
ANR	4955501	ExpressionStatement	sw -> cp = cp	357:4:11120:11131	4955492	1	True				
ANR	4955502	AssignmentExpression	sw -> cp = cp		4955492	0		=			
ANR	4955503	PtrMemberAccess	sw -> cp		4955492	0					
ANR	4955504	Identifier	sw		4955492	0					
ANR	4955505	Identifier	cp		4955492	1					
ANR	4955506	Identifier	cp		4955492	1					
ANR	4955507	ExpressionStatement	sw -> end = cp	358:4:11137:11149	4955492	2	True				
ANR	4955508	AssignmentExpression	sw -> end = cp		4955492	0		=			
ANR	4955509	PtrMemberAccess	sw -> end		4955492	0					
ANR	4955510	Identifier	sw		4955492	0					
ANR	4955511	Identifier	end		4955492	1					
ANR	4955512	Identifier	cp		4955492	1					
ANR	4955513	IfStatement	if ( cp )		4955492	3					
ANR	4955514	Condition	cp	359:8:11159:11160	4955492	0	True				
ANR	4955515	Identifier	cp		4955492	0					
ANR	4955516	CompoundStatement		6:4:84:84	4955492	1					
ANR	4955517	ExpressionStatement	SANITY_CHECK_MID ( cp )	361:8:11177:11197	4955492	0	True				
ANR	4955518	CallExpression	SANITY_CHECK_MID ( cp )		4955492	0					
ANR	4955519	Callee	SANITY_CHECK_MID		4955492	0					
ANR	4955520	Identifier	SANITY_CHECK_MID		4955492	0					
ANR	4955521	ArgumentList	cp		4955492	1					
ANR	4955522	Argument	cp		4955492	0					
ANR	4955523	Identifier	cp		4955492	0					
ANR	4955524	ReturnStatement	return cp ;	363:4:11209:11218	4955492	4	True				
ANR	4955525	Identifier	cp		4955492	0					
ANR	4955526	ReturnType	clump_t *		4955492	1					
ANR	4955527	Identifier	clump_splay_walk_init_mid		4955492	2					
ANR	4955528	ParameterList	"clump_splay_walker * sw , clump_t * cp"		4955492	3					
ANR	4955529	Parameter	clump_splay_walker * sw	354:26:11045:11066	4955492	0	True				
ANR	4955530	ParameterType	clump_splay_walker *		4955492	0					
ANR	4955531	Identifier	sw		4955492	1					
ANR	4955532	Parameter	clump_t * cp	354:50:11069:11079	4955492	1	True				
ANR	4955533	ParameterType	clump_t *		4955492	0					
ANR	4955534	Identifier	cp		4955492	1					
ANR	4955535	CFGEntryNode	ENTRY		4955492		True				
ANR	4955536	CFGExitNode	EXIT		4955492		True				
ANR	4955537	Symbol	sw		4955492						
ANR	4955538	Symbol	sw -> from		4955492						
ANR	4955539	Symbol	SPLAY_FROM_LEFT		4955492						
ANR	4955540	Symbol	* sw		4955492						
ANR	4955541	Symbol	sw -> end		4955492						
ANR	4955542	Symbol	cp		4955492						
ANR	4955543	Symbol	sw -> cp		4955492						
ANR	4955544	Function	clump_splay_walk_fwd	366:0:11223:13445							
ANR	4955545	FunctionDef	clump_splay_walk_fwd (clump_splay_walker * sw)		4955544	0					
ANR	4955546	CompoundStatement		368:0:11278:13445	4955544	0					
ANR	4955547	IdentifierDeclStatement	clump_t * cp = sw -> cp ;	369:4:11284:11304	4955544	0	True				
ANR	4955548	IdentifierDecl	* cp = sw -> cp		4955544	0					
ANR	4955549	IdentifierDeclType	clump_t *		4955544	0					
ANR	4955550	Identifier	cp		4955544	1					
ANR	4955551	AssignmentExpression	* cp = sw -> cp		4955544	2		=			
ANR	4955552	Identifier	cp		4955544	0					
ANR	4955553	PtrMemberAccess	sw -> cp		4955544	1					
ANR	4955554	Identifier	sw		4955544	0					
ANR	4955555	Identifier	cp		4955544	1					
ANR	4955556	IdentifierDeclStatement	int from = sw -> from ;	370:4:11310:11329	4955544	1	True				
ANR	4955557	IdentifierDecl	from = sw -> from		4955544	0					
ANR	4955558	IdentifierDeclType	int		4955544	0					
ANR	4955559	Identifier	from		4955544	1					
ANR	4955560	AssignmentExpression	from = sw -> from		4955544	2		=			
ANR	4955561	Identifier	from		4955544	0					
ANR	4955562	PtrMemberAccess	sw -> from		4955544	1					
ANR	4955563	Identifier	sw		4955544	0					
ANR	4955564	Identifier	from		4955544	1					
ANR	4955565	IfStatement	if ( cp == NULL )		4955544	2					
ANR	4955566	Condition	cp == NULL	372:8:11340:11349	4955544	0	True				
ANR	4955567	EqualityExpression	cp == NULL		4955544	0		==			
ANR	4955568	Identifier	cp		4955544	0					
ANR	4955569	Identifier	NULL		4955544	1					
ANR	4955570	ReturnStatement	return NULL ;	373:8:11360:11371	4955544	1	True				
ANR	4955571	Identifier	NULL		4955544	0					
ANR	4955572	WhileStatement	while ( 1 )		4955544	3					
ANR	4955573	Condition	1	378:11:11524:11524	4955544	0	True				
ANR	4955574	PrimaryExpression	1		4955544	0					
ANR	4955575	CompoundStatement		12:4:252:252	4955544	1					
ANR	4955576	IfStatement	if ( from == SPLAY_FROM_ABOVE )		4955544	0					
ANR	4955577	Condition	from == SPLAY_FROM_ABOVE	380:12:11545:11568	4955544	0	True				
ANR	4955578	EqualityExpression	from == SPLAY_FROM_ABOVE		4955544	0		==			
ANR	4955579	Identifier	from		4955544	0					
ANR	4955580	Identifier	SPLAY_FROM_ABOVE		4955544	1					
ANR	4955581	CompoundStatement		14:8:300:300	4955544	1					
ANR	4955582	IfStatement	if ( cp -> left )		4955544	0					
ANR	4955583	Condition	cp -> left	383:16:11654:11661	4955544	0	True				
ANR	4955584	PtrMemberAccess	cp -> left		4955544	0					
ANR	4955585	Identifier	cp		4955544	0					
ANR	4955586	Identifier	left		4955544	1					
ANR	4955587	CompoundStatement		17:12:397:397	4955544	1					
ANR	4955588	ExpressionStatement	cp = cp -> left	385:16:11694:11707	4955544	0	True				
ANR	4955589	AssignmentExpression	cp = cp -> left		4955544	0		=			
ANR	4955590	Identifier	cp		4955544	0					
ANR	4955591	PtrMemberAccess	cp -> left		4955544	1					
ANR	4955592	Identifier	cp		4955544	0					
ANR	4955593	Identifier	left		4955544	1					
ANR	4955594	ExpressionStatement	from = SPLAY_FROM_ABOVE	386:16:11725:11748	4955544	1	True				
ANR	4955595	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955544	0		=			
ANR	4955596	Identifier	from		4955544	0					
ANR	4955597	Identifier	SPLAY_FROM_ABOVE		4955544	1					
ANR	4955598	ContinueStatement	continue ;	387:16:11766:11774	4955544	2	True				
ANR	4955599	ExpressionStatement	from = SPLAY_FROM_LEFT	390:12:11883:11905	4955544	1	True				
ANR	4955600	AssignmentExpression	from = SPLAY_FROM_LEFT		4955544	0		=			
ANR	4955601	Identifier	from		4955544	0					
ANR	4955602	Identifier	SPLAY_FROM_LEFT		4955544	1					
ANR	4955603	IfStatement	if ( cp == sw -> end )		4955544	2					
ANR	4955604	Condition	cp == sw -> end	392:16:11977:11989	4955544	0	True				
ANR	4955605	EqualityExpression	cp == sw -> end		4955544	0		==			
ANR	4955606	Identifier	cp		4955544	0					
ANR	4955607	PtrMemberAccess	sw -> end		4955544	1					
ANR	4955608	Identifier	sw		4955544	0					
ANR	4955609	Identifier	end		4955544	1					
ANR	4955610	ExpressionStatement	cp = NULL	393:16:12008:12017	4955544	1	True				
ANR	4955611	AssignmentExpression	cp = NULL		4955544	0		=			
ANR	4955612	Identifier	cp		4955544	0					
ANR	4955613	Identifier	NULL		4955544	1					
ANR	4955614	BreakStatement	break ;	395:12:12120:12125	4955544	3	True				
ANR	4955615	IfStatement	if ( from == SPLAY_FROM_LEFT )		4955544	1					
ANR	4955616	Condition	from == SPLAY_FROM_LEFT	397:12:12149:12171	4955544	0	True				
ANR	4955617	EqualityExpression	from == SPLAY_FROM_LEFT		4955544	0		==			
ANR	4955618	Identifier	from		4955544	0					
ANR	4955619	Identifier	SPLAY_FROM_LEFT		4955544	1					
ANR	4955620	CompoundStatement		31:8:903:903	4955544	1					
ANR	4955621	IfStatement	if ( cp -> right )		4955544	0					
ANR	4955622	Condition	cp -> right	400:16:12261:12269	4955544	0	True				
ANR	4955623	PtrMemberAccess	cp -> right		4955544	0					
ANR	4955624	Identifier	cp		4955544	0					
ANR	4955625	Identifier	right		4955544	1					
ANR	4955626	CompoundStatement		34:12:1005:1005	4955544	1					
ANR	4955627	ExpressionStatement	cp = cp -> right	402:16:12302:12316	4955544	0	True				
ANR	4955628	AssignmentExpression	cp = cp -> right		4955544	0		=			
ANR	4955629	Identifier	cp		4955544	0					
ANR	4955630	PtrMemberAccess	cp -> right		4955544	1					
ANR	4955631	Identifier	cp		4955544	0					
ANR	4955632	Identifier	right		4955544	1					
ANR	4955633	ExpressionStatement	from = SPLAY_FROM_ABOVE	403:16:12334:12357	4955544	1	True				
ANR	4955634	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955544	0		=			
ANR	4955635	Identifier	from		4955544	0					
ANR	4955636	Identifier	SPLAY_FROM_ABOVE		4955544	1					
ANR	4955637	ContinueStatement	continue ;	404:16:12375:12383	4955544	2	True				
ANR	4955638	ExpressionStatement	from = SPLAY_FROM_RIGHT	407:12:12494:12517	4955544	1	True				
ANR	4955639	AssignmentExpression	from = SPLAY_FROM_RIGHT		4955544	0		=			
ANR	4955640	Identifier	from		4955544	0					
ANR	4955641	Identifier	SPLAY_FROM_RIGHT		4955544	1					
ANR	4955642	IfStatement	if ( from == SPLAY_FROM_RIGHT )		4955544	2					
ANR	4955643	Condition	from == SPLAY_FROM_RIGHT	409:12:12541:12564	4955544	0	True				
ANR	4955644	EqualityExpression	from == SPLAY_FROM_RIGHT		4955544	0		==			
ANR	4955645	Identifier	from		4955544	0					
ANR	4955646	Identifier	SPLAY_FROM_RIGHT		4955544	1					
ANR	4955647	CompoundStatement		45:12:1369:1386	4955544	1					
ANR	4955648	IdentifierDeclStatement	clump_t * old = cp ;	412:12:12648:12665	4955544	0	True				
ANR	4955649	IdentifierDecl	* old = cp		4955544	0					
ANR	4955650	IdentifierDeclType	clump_t *		4955544	0					
ANR	4955651	Identifier	old		4955544	1					
ANR	4955652	AssignmentExpression	* old = cp		4955544	2		=			
ANR	4955653	Identifier	cp		4955544	0					
ANR	4955654	Identifier	cp		4955544	1					
ANR	4955655	ExpressionStatement	cp = cp -> parent	413:12:12679:12694	4955544	1	True				
ANR	4955656	AssignmentExpression	cp = cp -> parent		4955544	0		=			
ANR	4955657	Identifier	cp		4955544	0					
ANR	4955658	PtrMemberAccess	cp -> parent		4955544	1					
ANR	4955659	Identifier	cp		4955544	0					
ANR	4955660	Identifier	parent		4955544	1					
ANR	4955661	IfStatement	if ( cp == NULL )		4955544	2					
ANR	4955662	Condition	cp == NULL	414:16:12712:12721	4955544	0	True				
ANR	4955663	EqualityExpression	cp == NULL		4955544	0		==			
ANR	4955664	Identifier	cp		4955544	0					
ANR	4955665	Identifier	NULL		4955544	1					
ANR	4955666	CompoundStatement		48:12:1457:1457	4955544	1					
ANR	4955667	IfStatement	if ( sw -> end == NULL )		4955544	0					
ANR	4955668	Condition	sw -> end == NULL	417:20:12844:12858	4955544	0	True				
ANR	4955669	EqualityExpression	sw -> end == NULL		4955544	0		==			
ANR	4955670	PtrMemberAccess	sw -> end		4955544	0					
ANR	4955671	Identifier	sw		4955544	0					
ANR	4955672	Identifier	end		4955544	1					
ANR	4955673	Identifier	NULL		4955544	1					
ANR	4955674	BreakStatement	break ;	418:20:12881:12886	4955544	1	True				
ANR	4955675	ExpressionStatement	cp = old	420:16:12943:12951	4955544	1	True				
ANR	4955676	AssignmentExpression	cp = old		4955544	0		=			
ANR	4955677	Identifier	cp		4955544	0					
ANR	4955678	Identifier	old		4955544	1					
ANR	4955679	ExpressionStatement	from = SPLAY_FROM_ABOVE	421:16:12969:12992	4955544	2	True				
ANR	4955680	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955544	0		=			
ANR	4955681	Identifier	from		4955544	0					
ANR	4955682	Identifier	SPLAY_FROM_ABOVE		4955544	1					
ANR	4955683	ElseStatement	else		4955544	0					
ANR	4955684	CompoundStatement		57:12:1758:1758	4955544	0					
ANR	4955685	ExpressionStatement	from = ( cp -> left == old ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )	425:16:13055:13116	4955544	0	True				
ANR	4955686	AssignmentExpression	from = ( cp -> left == old ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )		4955544	0		=			
ANR	4955687	Identifier	from		4955544	0					
ANR	4955688	ConditionalExpression	cp -> left == old ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT		4955544	1					
ANR	4955689	Condition	cp -> left == old		4955544	0					
ANR	4955690	EqualityExpression	cp -> left == old		4955544	0		==			
ANR	4955691	PtrMemberAccess	cp -> left		4955544	0					
ANR	4955692	Identifier	cp		4955544	0					
ANR	4955693	Identifier	left		4955544	1					
ANR	4955694	Identifier	old		4955544	1					
ANR	4955695	Identifier	SPLAY_FROM_LEFT		4955544	1					
ANR	4955696	Identifier	SPLAY_FROM_RIGHT		4955544	2					
ANR	4955697	IfStatement	if ( from == SPLAY_FROM_LEFT )		4955544	1					
ANR	4955698	Condition	from == SPLAY_FROM_LEFT	426:20:13138:13160	4955544	0	True				
ANR	4955699	EqualityExpression	from == SPLAY_FROM_LEFT		4955544	0		==			
ANR	4955700	Identifier	from		4955544	0					
ANR	4955701	Identifier	SPLAY_FROM_LEFT		4955544	1					
ANR	4955702	CompoundStatement		60:16:1900:1900	4955544	1					
ANR	4955703	IfStatement	if ( cp == sw -> end )		4955544	0					
ANR	4955704	Condition	cp == sw -> end	429:24:13267:13279	4955544	0	True				
ANR	4955705	EqualityExpression	cp == sw -> end		4955544	0		==			
ANR	4955706	Identifier	cp		4955544	0					
ANR	4955707	PtrMemberAccess	sw -> end		4955544	1					
ANR	4955708	Identifier	sw		4955544	0					
ANR	4955709	Identifier	end		4955544	1					
ANR	4955710	ExpressionStatement	cp = NULL	430:24:13306:13315	4955544	1	True				
ANR	4955711	AssignmentExpression	cp = NULL		4955544	0		=			
ANR	4955712	Identifier	cp		4955544	0					
ANR	4955713	Identifier	NULL		4955544	1					
ANR	4955714	BreakStatement	break ;	431:20:13337:13342	4955544	1	True				
ANR	4955715	ExpressionStatement	sw -> cp = cp	436:4:13396:13407	4955544	4	True				
ANR	4955716	AssignmentExpression	sw -> cp = cp		4955544	0		=			
ANR	4955717	PtrMemberAccess	sw -> cp		4955544	0					
ANR	4955718	Identifier	sw		4955544	0					
ANR	4955719	Identifier	cp		4955544	1					
ANR	4955720	Identifier	cp		4955544	1					
ANR	4955721	ExpressionStatement	sw -> from = from	437:4:13413:13428	4955544	5	True				
ANR	4955722	AssignmentExpression	sw -> from = from		4955544	0		=			
ANR	4955723	PtrMemberAccess	sw -> from		4955544	0					
ANR	4955724	Identifier	sw		4955544	0					
ANR	4955725	Identifier	from		4955544	1					
ANR	4955726	Identifier	from		4955544	1					
ANR	4955727	ReturnStatement	return cp ;	438:4:13434:13443	4955544	6	True				
ANR	4955728	Identifier	cp		4955544	0					
ANR	4955729	ReturnType	clump_t *		4955544	1					
ANR	4955730	Identifier	clump_splay_walk_fwd		4955544	2					
ANR	4955731	ParameterList	clump_splay_walker * sw		4955544	3					
ANR	4955732	Parameter	clump_splay_walker * sw	367:21:11254:11275	4955544	0	True				
ANR	4955733	ParameterType	clump_splay_walker *		4955544	0					
ANR	4955734	Identifier	sw		4955544	1					
ANR	4955735	CFGEntryNode	ENTRY		4955544		True				
ANR	4955736	CFGExitNode	EXIT		4955544		True				
ANR	4955737	Symbol	NULL		4955544						
ANR	4955738	Symbol	sw		4955544						
ANR	4955739	Symbol	SPLAY_FROM_ABOVE		4955544						
ANR	4955740	Symbol	old		4955544						
ANR	4955741	Symbol	SPLAY_FROM_RIGHT		4955544						
ANR	4955742	Symbol	* sw		4955544						
ANR	4955743	Symbol	cp -> right		4955544						
ANR	4955744	Symbol	cp		4955544						
ANR	4955745	Symbol	* cp		4955544						
ANR	4955746	Symbol	cp -> left		4955544						
ANR	4955747	Symbol	cp -> parent		4955544						
ANR	4955748	Symbol	sw -> from		4955544						
ANR	4955749	Symbol	SPLAY_FROM_LEFT		4955544						
ANR	4955750	Symbol	from		4955544						
ANR	4955751	Symbol	sw -> end		4955544						
ANR	4955752	Symbol	sw -> cp		4955544						
ANR	4955753	Function	clump_splay_walk_bwd	441:0:13448:15205							
ANR	4955754	FunctionDef	clump_splay_walk_bwd (clump_splay_walker * sw)		4955753	0					
ANR	4955755	CompoundStatement		443:0:13503:15205	4955753	0					
ANR	4955756	IdentifierDeclStatement	clump_t * cp = sw -> cp ;	444:4:13509:13529	4955753	0	True				
ANR	4955757	IdentifierDecl	* cp = sw -> cp		4955753	0					
ANR	4955758	IdentifierDeclType	clump_t *		4955753	0					
ANR	4955759	Identifier	cp		4955753	1					
ANR	4955760	AssignmentExpression	* cp = sw -> cp		4955753	2		=			
ANR	4955761	Identifier	cp		4955753	0					
ANR	4955762	PtrMemberAccess	sw -> cp		4955753	1					
ANR	4955763	Identifier	sw		4955753	0					
ANR	4955764	Identifier	cp		4955753	1					
ANR	4955765	IdentifierDeclStatement	int from = sw -> from ;	445:4:13535:13554	4955753	1	True				
ANR	4955766	IdentifierDecl	from = sw -> from		4955753	0					
ANR	4955767	IdentifierDeclType	int		4955753	0					
ANR	4955768	Identifier	from		4955753	1					
ANR	4955769	AssignmentExpression	from = sw -> from		4955753	2		=			
ANR	4955770	Identifier	from		4955753	0					
ANR	4955771	PtrMemberAccess	sw -> from		4955753	1					
ANR	4955772	Identifier	sw		4955753	0					
ANR	4955773	Identifier	from		4955753	1					
ANR	4955774	IfStatement	if ( cp == NULL )		4955753	2					
ANR	4955775	Condition	cp == NULL	447:8:13565:13574	4955753	0	True				
ANR	4955776	EqualityExpression	cp == NULL		4955753	0		==			
ANR	4955777	Identifier	cp		4955753	0					
ANR	4955778	Identifier	NULL		4955753	1					
ANR	4955779	ReturnStatement	return NULL ;	448:8:13585:13596	4955753	1	True				
ANR	4955780	Identifier	NULL		4955753	0					
ANR	4955781	WhileStatement	while ( 1 )		4955753	3					
ANR	4955782	Condition	1	453:11:13767:13767	4955753	0	True				
ANR	4955783	PrimaryExpression	1		4955753	0					
ANR	4955784	CompoundStatement		12:4:270:270	4955753	1					
ANR	4955785	IfStatement	if ( from == SPLAY_FROM_ABOVE )		4955753	0					
ANR	4955786	Condition	from == SPLAY_FROM_ABOVE	455:12:13788:13811	4955753	0	True				
ANR	4955787	EqualityExpression	from == SPLAY_FROM_ABOVE		4955753	0		==			
ANR	4955788	Identifier	from		4955753	0					
ANR	4955789	Identifier	SPLAY_FROM_ABOVE		4955753	1					
ANR	4955790	CompoundStatement		14:8:318:318	4955753	1					
ANR	4955791	IfStatement	if ( cp -> right )		4955753	0					
ANR	4955792	Condition	cp -> right	458:16:13898:13906	4955753	0	True				
ANR	4955793	PtrMemberAccess	cp -> right		4955753	0					
ANR	4955794	Identifier	cp		4955753	0					
ANR	4955795	Identifier	right		4955753	1					
ANR	4955796	CompoundStatement		17:12:417:417	4955753	1					
ANR	4955797	ExpressionStatement	cp = cp -> right	460:16:13939:13953	4955753	0	True				
ANR	4955798	AssignmentExpression	cp = cp -> right		4955753	0		=			
ANR	4955799	Identifier	cp		4955753	0					
ANR	4955800	PtrMemberAccess	cp -> right		4955753	1					
ANR	4955801	Identifier	cp		4955753	0					
ANR	4955802	Identifier	right		4955753	1					
ANR	4955803	ExpressionStatement	from = SPLAY_FROM_ABOVE	461:16:13971:13994	4955753	1	True				
ANR	4955804	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955753	0		=			
ANR	4955805	Identifier	from		4955753	0					
ANR	4955806	Identifier	SPLAY_FROM_ABOVE		4955753	1					
ANR	4955807	ContinueStatement	continue ;	462:16:14012:14020	4955753	2	True				
ANR	4955808	ExpressionStatement	from = SPLAY_FROM_RIGHT	465:12:14131:14154	4955753	1	True				
ANR	4955809	AssignmentExpression	from = SPLAY_FROM_RIGHT		4955753	0		=			
ANR	4955810	Identifier	from		4955753	0					
ANR	4955811	Identifier	SPLAY_FROM_RIGHT		4955753	1					
ANR	4955812	IfStatement	if ( cp == sw -> end )		4955753	2					
ANR	4955813	Condition	cp == sw -> end	467:16:14215:14227	4955753	0	True				
ANR	4955814	EqualityExpression	cp == sw -> end		4955753	0		==			
ANR	4955815	Identifier	cp		4955753	0					
ANR	4955816	PtrMemberAccess	sw -> end		4955753	1					
ANR	4955817	Identifier	sw		4955753	0					
ANR	4955818	Identifier	end		4955753	1					
ANR	4955819	ExpressionStatement	cp = NULL	468:16:14246:14255	4955753	1	True				
ANR	4955820	AssignmentExpression	cp = NULL		4955753	0		=			
ANR	4955821	Identifier	cp		4955753	0					
ANR	4955822	Identifier	NULL		4955753	1					
ANR	4955823	BreakStatement	break ;	470:12:14317:14322	4955753	3	True				
ANR	4955824	IfStatement	if ( from == SPLAY_FROM_RIGHT )		4955753	1					
ANR	4955825	Condition	from == SPLAY_FROM_RIGHT	472:12:14346:14369	4955753	0	True				
ANR	4955826	EqualityExpression	from == SPLAY_FROM_RIGHT		4955753	0		==			
ANR	4955827	Identifier	from		4955753	0					
ANR	4955828	Identifier	SPLAY_FROM_RIGHT		4955753	1					
ANR	4955829	CompoundStatement		31:8:876:876	4955753	1					
ANR	4955830	IfStatement	if ( cp -> left )		4955753	0					
ANR	4955831	Condition	cp -> left	475:16:14459:14466	4955753	0	True				
ANR	4955832	PtrMemberAccess	cp -> left		4955753	0					
ANR	4955833	Identifier	cp		4955753	0					
ANR	4955834	Identifier	left		4955753	1					
ANR	4955835	CompoundStatement		34:12:977:977	4955753	1					
ANR	4955836	ExpressionStatement	cp = cp -> left	477:16:14499:14512	4955753	0	True				
ANR	4955837	AssignmentExpression	cp = cp -> left		4955753	0		=			
ANR	4955838	Identifier	cp		4955753	0					
ANR	4955839	PtrMemberAccess	cp -> left		4955753	1					
ANR	4955840	Identifier	cp		4955753	0					
ANR	4955841	Identifier	left		4955753	1					
ANR	4955842	ExpressionStatement	from = SPLAY_FROM_ABOVE	478:16:14530:14553	4955753	1	True				
ANR	4955843	AssignmentExpression	from = SPLAY_FROM_ABOVE		4955753	0		=			
ANR	4955844	Identifier	from		4955753	0					
ANR	4955845	Identifier	SPLAY_FROM_ABOVE		4955753	1					
ANR	4955846	ContinueStatement	continue ;	479:16:14571:14579	4955753	2	True				
ANR	4955847	ExpressionStatement	from = SPLAY_FROM_LEFT	482:12:14689:14711	4955753	1	True				
ANR	4955848	AssignmentExpression	from = SPLAY_FROM_LEFT		4955753	0		=			
ANR	4955849	Identifier	from		4955753	0					
ANR	4955850	Identifier	SPLAY_FROM_LEFT		4955753	1					
ANR	4955851	IfStatement	if ( from == SPLAY_FROM_LEFT )		4955753	2					
ANR	4955852	Condition	from == SPLAY_FROM_LEFT	484:12:14735:14757	4955753	0	True				
ANR	4955853	EqualityExpression	from == SPLAY_FROM_LEFT		4955753	0		==			
ANR	4955854	Identifier	from		4955753	0					
ANR	4955855	Identifier	SPLAY_FROM_LEFT		4955753	1					
ANR	4955856	CompoundStatement		45:12:1336:1353	4955753	1					
ANR	4955857	IdentifierDeclStatement	clump_t * old = cp ;	487:12:14840:14857	4955753	0	True				
ANR	4955858	IdentifierDecl	* old = cp		4955753	0					
ANR	4955859	IdentifierDeclType	clump_t *		4955753	0					
ANR	4955860	Identifier	old		4955753	1					
ANR	4955861	AssignmentExpression	* old = cp		4955753	2		=			
ANR	4955862	Identifier	cp		4955753	0					
ANR	4955863	Identifier	cp		4955753	1					
ANR	4955864	ExpressionStatement	cp = cp -> parent	488:12:14871:14886	4955753	1	True				
ANR	4955865	AssignmentExpression	cp = cp -> parent		4955753	0		=			
ANR	4955866	Identifier	cp		4955753	0					
ANR	4955867	PtrMemberAccess	cp -> parent		4955753	1					
ANR	4955868	Identifier	cp		4955753	0					
ANR	4955869	Identifier	parent		4955753	1					
ANR	4955870	ExpressionStatement	from = ( cp == NULL || cp -> left != old ? SPLAY_FROM_RIGHT : SPLAY_FROM_LEFT )	489:12:14900:14975	4955753	2	True				
ANR	4955871	AssignmentExpression	from = ( cp == NULL || cp -> left != old ? SPLAY_FROM_RIGHT : SPLAY_FROM_LEFT )		4955753	0		=			
ANR	4955872	Identifier	from		4955753	0					
ANR	4955873	ConditionalExpression	cp == NULL || cp -> left != old ? SPLAY_FROM_RIGHT : SPLAY_FROM_LEFT		4955753	1					
ANR	4955874	Condition	cp == NULL || cp -> left != old		4955753	0					
ANR	4955875	OrExpression	cp == NULL || cp -> left != old		4955753	0		||			
ANR	4955876	EqualityExpression	cp == NULL		4955753	0		==			
ANR	4955877	Identifier	cp		4955753	0					
ANR	4955878	Identifier	NULL		4955753	1					
ANR	4955879	EqualityExpression	cp -> left != old		4955753	1		!=			
ANR	4955880	PtrMemberAccess	cp -> left		4955753	0					
ANR	4955881	Identifier	cp		4955753	0					
ANR	4955882	Identifier	left		4955753	1					
ANR	4955883	Identifier	old		4955753	1					
ANR	4955884	Identifier	SPLAY_FROM_RIGHT		4955753	1					
ANR	4955885	Identifier	SPLAY_FROM_LEFT		4955753	2					
ANR	4955886	IfStatement	if ( from == SPLAY_FROM_RIGHT )		4955753	3					
ANR	4955887	Condition	from == SPLAY_FROM_RIGHT	490:16:14993:15016	4955753	0	True				
ANR	4955888	EqualityExpression	from == SPLAY_FROM_RIGHT		4955753	0		==			
ANR	4955889	Identifier	from		4955753	0					
ANR	4955890	Identifier	SPLAY_FROM_RIGHT		4955753	1					
ANR	4955891	CompoundStatement		49:12:1527:1527	4955753	1					
ANR	4955892	IfStatement	if ( cp == sw -> end )		4955753	0					
ANR	4955893	Condition	cp == sw -> end	492:20:15053:15065	4955753	0	True				
ANR	4955894	EqualityExpression	cp == sw -> end		4955753	0		==			
ANR	4955895	Identifier	cp		4955753	0					
ANR	4955896	PtrMemberAccess	sw -> end		4955753	1					
ANR	4955897	Identifier	sw		4955753	0					
ANR	4955898	Identifier	end		4955753	1					
ANR	4955899	ExpressionStatement	cp = NULL	493:20:15088:15097	4955753	1	True				
ANR	4955900	AssignmentExpression	cp = NULL		4955753	0		=			
ANR	4955901	Identifier	cp		4955753	0					
ANR	4955902	Identifier	NULL		4955753	1					
ANR	4955903	BreakStatement	break ;	494:16:15115:15120	4955753	1	True				
ANR	4955904	ExpressionStatement	sw -> cp = cp	498:4:15156:15167	4955753	4	True				
ANR	4955905	AssignmentExpression	sw -> cp = cp		4955753	0		=			
ANR	4955906	PtrMemberAccess	sw -> cp		4955753	0					
ANR	4955907	Identifier	sw		4955753	0					
ANR	4955908	Identifier	cp		4955753	1					
ANR	4955909	Identifier	cp		4955753	1					
ANR	4955910	ExpressionStatement	sw -> from = from	499:4:15173:15188	4955753	5	True				
ANR	4955911	AssignmentExpression	sw -> from = from		4955753	0		=			
ANR	4955912	PtrMemberAccess	sw -> from		4955753	0					
ANR	4955913	Identifier	sw		4955753	0					
ANR	4955914	Identifier	from		4955753	1					
ANR	4955915	Identifier	from		4955753	1					
ANR	4955916	ReturnStatement	return cp ;	500:4:15194:15203	4955753	6	True				
ANR	4955917	Identifier	cp		4955753	0					
ANR	4955918	ReturnType	clump_t *		4955753	1					
ANR	4955919	Identifier	clump_splay_walk_bwd		4955753	2					
ANR	4955920	ParameterList	clump_splay_walker * sw		4955753	3					
ANR	4955921	Parameter	clump_splay_walker * sw	442:21:13479:13500	4955753	0	True				
ANR	4955922	ParameterType	clump_splay_walker *		4955753	0					
ANR	4955923	Identifier	sw		4955753	1					
ANR	4955924	CFGEntryNode	ENTRY		4955753		True				
ANR	4955925	CFGExitNode	EXIT		4955753		True				
ANR	4955926	Symbol	NULL		4955753						
ANR	4955927	Symbol	sw		4955753						
ANR	4955928	Symbol	SPLAY_FROM_ABOVE		4955753						
ANR	4955929	Symbol	old		4955753						
ANR	4955930	Symbol	SPLAY_FROM_RIGHT		4955753						
ANR	4955931	Symbol	* sw		4955753						
ANR	4955932	Symbol	cp -> right		4955753						
ANR	4955933	Symbol	cp		4955753						
ANR	4955934	Symbol	* cp		4955753						
ANR	4955935	Symbol	cp -> left		4955753						
ANR	4955936	Symbol	cp -> parent		4955753						
ANR	4955937	Symbol	sw -> from		4955753						
ANR	4955938	Symbol	SPLAY_FROM_LEFT		4955753						
ANR	4955939	Symbol	from		4955753						
ANR	4955940	Symbol	sw -> end		4955753						
ANR	4955941	Symbol	sw -> cp		4955753						
ANR	4955942	Function	clump_splay_remove	503:0:15208:16386							
ANR	4955943	FunctionDef	"clump_splay_remove (clump_t * cp , gs_ref_memory_t * imem)"		4955942	0					
ANR	4955944	CompoundStatement		505:0:15280:16386	4955942	0					
ANR	4955945	IdentifierDeclStatement	clump_t * replacement ;	506:4:15286:15306	4955942	0	True				
ANR	4955946	IdentifierDecl	* replacement		4955942	0					
ANR	4955947	IdentifierDeclType	clump_t *		4955942	0					
ANR	4955948	Identifier	replacement		4955942	1					
ANR	4955949	IfStatement	if ( cp -> left == NULL )		4955942	1					
ANR	4955950	Condition	cp -> left == NULL	508:8:15317:15332	4955942	0	True				
ANR	4955951	EqualityExpression	cp -> left == NULL		4955942	0		==			
ANR	4955952	PtrMemberAccess	cp -> left		4955942	0					
ANR	4955953	Identifier	cp		4955942	0					
ANR	4955954	Identifier	left		4955942	1					
ANR	4955955	Identifier	NULL		4955942	1					
ANR	4955956	CompoundStatement		5:4:58:58	4955942	1					
ANR	4955957	ExpressionStatement	replacement = cp -> right	511:8:15388:15411	4955942	0	True				
ANR	4955958	AssignmentExpression	replacement = cp -> right		4955942	0		=			
ANR	4955959	Identifier	replacement		4955942	0					
ANR	4955960	PtrMemberAccess	cp -> right		4955942	1					
ANR	4955961	Identifier	cp		4955942	0					
ANR	4955962	Identifier	right		4955942	1					
ANR	4955963	ElseStatement	else		4955942	0					
ANR	4955964	IfStatement	if ( cp -> right == NULL )		4955942	0					
ANR	4955965	Condition	cp -> right == NULL	513:13:15432:15448	4955942	0	True				
ANR	4955966	EqualityExpression	cp -> right == NULL		4955942	0		==			
ANR	4955967	PtrMemberAccess	cp -> right		4955942	0					
ANR	4955968	Identifier	cp		4955942	0					
ANR	4955969	Identifier	right		4955942	1					
ANR	4955970	Identifier	NULL		4955942	1					
ANR	4955971	CompoundStatement		10:4:174:174	4955942	1					
ANR	4955972	ExpressionStatement	replacement = cp -> left	516:8:15505:15527	4955942	0	True				
ANR	4955973	AssignmentExpression	replacement = cp -> left		4955942	0		=			
ANR	4955974	Identifier	replacement		4955942	0					
ANR	4955975	PtrMemberAccess	cp -> left		4955942	1					
ANR	4955976	Identifier	cp		4955942	0					
ANR	4955977	Identifier	left		4955942	1					
ANR	4955978	ElseStatement	else		4955942	0					
ANR	4955979	CompoundStatement		15:4:267:267	4955942	0					
ANR	4955980	ExpressionStatement	replacement = cp -> left	522:8:15637:15659	4955942	0	True				
ANR	4955981	AssignmentExpression	replacement = cp -> left		4955942	0		=			
ANR	4955982	Identifier	replacement		4955942	0					
ANR	4955983	PtrMemberAccess	cp -> left		4955942	1					
ANR	4955984	Identifier	cp		4955942	0					
ANR	4955985	Identifier	left		4955942	1					
ANR	4955986	WhileStatement	while ( replacement -> right )		4955942	1					
ANR	4955987	Condition	replacement -> right	523:15:15676:15693	4955942	0	True				
ANR	4955988	PtrMemberAccess	replacement -> right		4955942	0					
ANR	4955989	Identifier	replacement		4955942	0					
ANR	4955990	Identifier	right		4955942	1					
ANR	4955991	ExpressionStatement	replacement = replacement -> right	524:12:15708:15740	4955942	1	True				
ANR	4955992	AssignmentExpression	replacement = replacement -> right		4955942	0		=			
ANR	4955993	Identifier	replacement		4955942	0					
ANR	4955994	PtrMemberAccess	replacement -> right		4955942	1					
ANR	4955995	Identifier	replacement		4955942	0					
ANR	4955996	Identifier	right		4955942	1					
ANR	4955997	ExpressionStatement	"( void ) clump_splay_remove ( replacement , imem )"	526:8:15808:15851	4955942	2	True				
ANR	4955998	CastExpression	"( void ) clump_splay_remove ( replacement , imem )"		4955942	0					
ANR	4955999	CastTarget	void		4955942	0					
ANR	4956000	CallExpression	"clump_splay_remove ( replacement , imem )"		4955942	1					
ANR	4956001	Callee	clump_splay_remove		4955942	0					
ANR	4956002	Identifier	clump_splay_remove		4955942	0					
ANR	4956003	ArgumentList	replacement		4955942	1					
ANR	4956004	Argument	replacement		4955942	0					
ANR	4956005	Identifier	replacement		4955942	0					
ANR	4956006	Argument	imem		4955942	1					
ANR	4956007	Identifier	imem		4955942	0					
ANR	4956008	IfStatement	if ( cp -> left )		4955942	3					
ANR	4956009	Condition	cp -> left	528:12:15907:15914	4955942	0	True				
ANR	4956010	PtrMemberAccess	cp -> left		4955942	0					
ANR	4956011	Identifier	cp		4955942	0					
ANR	4956012	Identifier	left		4955942	1					
ANR	4956013	ExpressionStatement	cp -> left -> parent = replacement	529:12:15929:15959	4955942	1	True				
ANR	4956014	AssignmentExpression	cp -> left -> parent = replacement		4955942	0		=			
ANR	4956015	PtrMemberAccess	cp -> left -> parent		4955942	0					
ANR	4956016	PtrMemberAccess	cp -> left		4955942	0					
ANR	4956017	Identifier	cp		4955942	0					
ANR	4956018	Identifier	left		4955942	1					
ANR	4956019	Identifier	parent		4955942	1					
ANR	4956020	Identifier	replacement		4955942	1					
ANR	4956021	ExpressionStatement	cp -> right -> parent = replacement	530:8:15969:16000	4955942	4	True				
ANR	4956022	AssignmentExpression	cp -> right -> parent = replacement		4955942	0		=			
ANR	4956023	PtrMemberAccess	cp -> right -> parent		4955942	0					
ANR	4956024	PtrMemberAccess	cp -> right		4955942	0					
ANR	4956025	Identifier	cp		4955942	0					
ANR	4956026	Identifier	right		4955942	1					
ANR	4956027	Identifier	parent		4955942	1					
ANR	4956028	Identifier	replacement		4955942	1					
ANR	4956029	ExpressionStatement	replacement -> left = cp -> left	531:8:16010:16038	4955942	5	True				
ANR	4956030	AssignmentExpression	replacement -> left = cp -> left		4955942	0		=			
ANR	4956031	PtrMemberAccess	replacement -> left		4955942	0					
ANR	4956032	Identifier	replacement		4955942	0					
ANR	4956033	Identifier	left		4955942	1					
ANR	4956034	PtrMemberAccess	cp -> left		4955942	1					
ANR	4956035	Identifier	cp		4955942	0					
ANR	4956036	Identifier	left		4955942	1					
ANR	4956037	ExpressionStatement	replacement -> right = cp -> right	532:8:16048:16078	4955942	6	True				
ANR	4956038	AssignmentExpression	replacement -> right = cp -> right		4955942	0		=			
ANR	4956039	PtrMemberAccess	replacement -> right		4955942	0					
ANR	4956040	Identifier	replacement		4955942	0					
ANR	4956041	Identifier	right		4955942	1					
ANR	4956042	PtrMemberAccess	cp -> right		4955942	1					
ANR	4956043	Identifier	cp		4955942	0					
ANR	4956044	Identifier	right		4955942	1					
ANR	4956045	IfStatement	if ( cp -> parent )		4955942	2					
ANR	4956046	Condition	cp -> parent	534:8:16094:16103	4955942	0	True				
ANR	4956047	PtrMemberAccess	cp -> parent		4955942	0					
ANR	4956048	Identifier	cp		4955942	0					
ANR	4956049	Identifier	parent		4955942	1					
ANR	4956050	CompoundStatement		31:4:829:829	4955942	1					
ANR	4956051	IfStatement	if ( cp -> parent -> left == cp )		4955942	0					
ANR	4956052	Condition	cp -> parent -> left == cp	536:12:16124:16145	4955942	0	True				
ANR	4956053	EqualityExpression	cp -> parent -> left == cp		4955942	0		==			
ANR	4956054	PtrMemberAccess	cp -> parent -> left		4955942	0					
ANR	4956055	PtrMemberAccess	cp -> parent		4955942	0					
ANR	4956056	Identifier	cp		4955942	0					
ANR	4956057	Identifier	parent		4955942	1					
ANR	4956058	Identifier	left		4955942	1					
ANR	4956059	Identifier	cp		4955942	1					
ANR	4956060	ExpressionStatement	cp -> parent -> left = replacement	537:12:16160:16190	4955942	1	True				
ANR	4956061	AssignmentExpression	cp -> parent -> left = replacement		4955942	0		=			
ANR	4956062	PtrMemberAccess	cp -> parent -> left		4955942	0					
ANR	4956063	PtrMemberAccess	cp -> parent		4955942	0					
ANR	4956064	Identifier	cp		4955942	0					
ANR	4956065	Identifier	parent		4955942	1					
ANR	4956066	Identifier	left		4955942	1					
ANR	4956067	Identifier	replacement		4955942	1					
ANR	4956068	ElseStatement	else		4955942	0					
ANR	4956069	ExpressionStatement	cp -> parent -> right = replacement	539:12:16217:16248	4955942	0	True				
ANR	4956070	AssignmentExpression	cp -> parent -> right = replacement		4955942	0		=			
ANR	4956071	PtrMemberAccess	cp -> parent -> right		4955942	0					
ANR	4956072	PtrMemberAccess	cp -> parent		4955942	0					
ANR	4956073	Identifier	cp		4955942	0					
ANR	4956074	Identifier	parent		4955942	1					
ANR	4956075	Identifier	right		4955942	1					
ANR	4956076	Identifier	replacement		4955942	1					
ANR	4956077	ElseStatement	else		4955942	0					
ANR	4956078	ExpressionStatement	imem -> root = replacement	542:8:16273:16297	4955942	0	True				
ANR	4956079	AssignmentExpression	imem -> root = replacement		4955942	0		=			
ANR	4956080	PtrMemberAccess	imem -> root		4955942	0					
ANR	4956081	Identifier	imem		4955942	0					
ANR	4956082	Identifier	root		4955942	1					
ANR	4956083	Identifier	replacement		4955942	1					
ANR	4956084	IfStatement	if ( replacement )		4955942	3					
ANR	4956085	Condition	replacement	543:8:16307:16317	4955942	0	True				
ANR	4956086	Identifier	replacement		4955942	0					
ANR	4956087	ExpressionStatement	replacement -> parent = cp -> parent	544:8:16328:16360	4955942	1	True				
ANR	4956088	AssignmentExpression	replacement -> parent = cp -> parent		4955942	0		=			
ANR	4956089	PtrMemberAccess	replacement -> parent		4955942	0					
ANR	4956090	Identifier	replacement		4955942	0					
ANR	4956091	Identifier	parent		4955942	1					
ANR	4956092	PtrMemberAccess	cp -> parent		4955942	1					
ANR	4956093	Identifier	cp		4955942	0					
ANR	4956094	Identifier	parent		4955942	1					
ANR	4956095	ReturnStatement	return replacement ;	545:4:16366:16384	4955942	4	True				
ANR	4956096	Identifier	replacement		4955942	0					
ANR	4956097	ReturnType	static clump_t *		4955942	1					
ANR	4956098	Identifier	clump_splay_remove		4955942	2					
ANR	4956099	ParameterList	"clump_t * cp , gs_ref_memory_t * imem"		4955942	3					
ANR	4956100	Parameter	clump_t * cp	504:19:15244:15254	4955942	0	True				
ANR	4956101	ParameterType	clump_t *		4955942	0					
ANR	4956102	Identifier	cp		4955942	1					
ANR	4956103	Parameter	gs_ref_memory_t * imem	504:32:15257:15277	4955942	1	True				
ANR	4956104	ParameterType	gs_ref_memory_t *		4955942	0					
ANR	4956105	Identifier	imem		4955942	1					
ANR	4956106	CFGEntryNode	ENTRY		4955942		True				
ANR	4956107	CFGExitNode	EXIT		4955942		True				
ANR	4956108	Symbol	replacement -> parent		4955942						
ANR	4956109	Symbol	imem -> root		4955942						
ANR	4956110	Symbol	NULL		4955942						
ANR	4956111	Symbol	cp -> parent -> right		4955942						
ANR	4956112	Symbol	cp -> right		4955942						
ANR	4956113	Symbol	cp -> left -> parent		4955942						
ANR	4956114	Symbol	* cp -> parent		4955942						
ANR	4956115	Symbol	* cp -> left		4955942						
ANR	4956116	Symbol	cp		4955942						
ANR	4956117	Symbol	* cp		4955942						
ANR	4956118	Symbol	replacement -> right		4955942						
ANR	4956119	Symbol	cp -> parent -> left		4955942						
ANR	4956120	Symbol	cp -> left		4955942						
ANR	4956121	Symbol	* cp -> right		4955942						
ANR	4956122	Symbol	cp -> parent		4955942						
ANR	4956123	Symbol	replacement -> left		4955942						
ANR	4956124	Symbol	* * cp		4955942						
ANR	4956125	Symbol	imem		4955942						
ANR	4956126	Symbol	replacement		4955942						
ANR	4956127	Symbol	* imem		4955942						
ANR	4956128	Symbol	* replacement		4955942						
ANR	4956129	Symbol	cp -> right -> parent		4955942						
ANR	4956130	Function	clump_splay_app	556:0:16735:18335							
ANR	4956131	FunctionDef	"clump_splay_app (clump_t * root , gs_ref_memory_t * imem , splay_app_result_t ( * fn ) ( clump_t * , void * ) , void * arg)"		4956130	0					
ANR	4956132	CompoundStatement		558:0:16855:18335	4956130	0					
ANR	4956133	IdentifierDeclStatement	clump_t * step_to ;	559:4:16861:16877	4956130	0	True				
ANR	4956134	IdentifierDecl	* step_to		4956130	0					
ANR	4956135	IdentifierDeclType	clump_t *		4956130	0					
ANR	4956136	Identifier	step_to		4956130	1					
ANR	4956137	IdentifierDeclStatement	clump_t * cp = root ;	560:4:16883:16901	4956130	1	True				
ANR	4956138	IdentifierDecl	* cp = root		4956130	0					
ANR	4956139	IdentifierDeclType	clump_t *		4956130	0					
ANR	4956140	Identifier	cp		4956130	1					
ANR	4956141	AssignmentExpression	* cp = root		4956130	2		=			
ANR	4956142	Identifier	root		4956130	0					
ANR	4956143	Identifier	root		4956130	1					
ANR	4956144	IdentifierDeclStatement	int from = SPLAY_FROM_ABOVE ;	561:4:16907:16934	4956130	2	True				
ANR	4956145	IdentifierDecl	from = SPLAY_FROM_ABOVE		4956130	0					
ANR	4956146	IdentifierDeclType	int		4956130	0					
ANR	4956147	Identifier	from		4956130	1					
ANR	4956148	AssignmentExpression	from = SPLAY_FROM_ABOVE		4956130	2		=			
ANR	4956149	Identifier	SPLAY_FROM_ABOVE		4956130	0					
ANR	4956150	Identifier	SPLAY_FROM_ABOVE		4956130	1					
ANR	4956151	IdentifierDeclStatement	splay_app_result_t res ;	562:4:16940:16962	4956130	3	True				
ANR	4956152	IdentifierDecl	res		4956130	0					
ANR	4956153	IdentifierDeclType	splay_app_result_t		4956130	0					
ANR	4956154	Identifier	res		4956130	1					
ANR	4956155	ExpressionStatement	SANITY_CHECK ( cp )	564:4:16969:16985	4956130	4	True				
ANR	4956156	CallExpression	SANITY_CHECK ( cp )		4956130	0					
ANR	4956157	Callee	SANITY_CHECK		4956130	0					
ANR	4956158	Identifier	SANITY_CHECK		4956130	0					
ANR	4956159	ArgumentList	cp		4956130	1					
ANR	4956160	Argument	cp		4956130	0					
ANR	4956161	Identifier	cp		4956130	0					
ANR	4956162	WhileStatement	while ( cp )		4956130	5					
ANR	4956163	Condition	cp	566:11:16999:17000	4956130	0	True				
ANR	4956164	Identifier	cp		4956130	0					
ANR	4956165	CompoundStatement		10:4:151:151	4956130	1					
ANR	4956166	IfStatement	if ( from == SPLAY_FROM_ABOVE )		4956130	0					
ANR	4956167	Condition	from == SPLAY_FROM_ABOVE	568:12:17021:17044	4956130	0	True				
ANR	4956168	EqualityExpression	from == SPLAY_FROM_ABOVE		4956130	0		==			
ANR	4956169	Identifier	from		4956130	0					
ANR	4956170	Identifier	SPLAY_FROM_ABOVE		4956130	1					
ANR	4956171	CompoundStatement		12:8:199:199	4956130	1					
ANR	4956172	ExpressionStatement	step_to = cp -> left	571:12:17126:17144	4956130	0	True				
ANR	4956173	AssignmentExpression	step_to = cp -> left		4956130	0		=			
ANR	4956174	Identifier	step_to		4956130	0					
ANR	4956175	PtrMemberAccess	cp -> left		4956130	1					
ANR	4956176	Identifier	cp		4956130	0					
ANR	4956177	Identifier	left		4956130	1					
ANR	4956178	IfStatement	if ( step_to )		4956130	1					
ANR	4956179	Condition	step_to	572:16:17162:17168	4956130	0	True				
ANR	4956180	Identifier	step_to		4956130	0					
ANR	4956181	CompoundStatement		16:12:327:327	4956130	1					
ANR	4956182	ExpressionStatement	from = SPLAY_FROM_ABOVE	574:16:17201:17224	4956130	0	True				
ANR	4956183	AssignmentExpression	from = SPLAY_FROM_ABOVE		4956130	0		=			
ANR	4956184	Identifier	from		4956130	0					
ANR	4956185	Identifier	SPLAY_FROM_ABOVE		4956130	1					
ANR	4956186	ExpressionStatement	cp = step_to	575:16:17242:17254	4956130	1	True				
ANR	4956187	AssignmentExpression	cp = step_to		4956130	0		=			
ANR	4956188	Identifier	cp		4956130	0					
ANR	4956189	Identifier	step_to		4956130	1					
ANR	4956190	ElseStatement	else		4956130	0					
ANR	4956191	CompoundStatement		21:12:443:443	4956130	0					
ANR	4956192	ExpressionStatement	from = SPLAY_FROM_LEFT	580:16:17405:17427	4956130	0	True				
ANR	4956193	AssignmentExpression	from = SPLAY_FROM_LEFT		4956130	0		=			
ANR	4956194	Identifier	from		4956130	0					
ANR	4956195	Identifier	SPLAY_FROM_LEFT		4956130	1					
ANR	4956196	IfStatement	if ( from == SPLAY_FROM_LEFT )		4956130	1					
ANR	4956197	Condition	from == SPLAY_FROM_LEFT	583:12:17465:17487	4956130	0	True				
ANR	4956198	EqualityExpression	from == SPLAY_FROM_LEFT		4956130	0		==			
ANR	4956199	Identifier	from		4956130	0					
ANR	4956200	Identifier	SPLAY_FROM_LEFT		4956130	1					
ANR	4956201	CompoundStatement		27:8:642:642	4956130	1					
ANR	4956202	ExpressionStatement	step_to = cp -> right	586:12:17573:17592	4956130	0	True				
ANR	4956203	AssignmentExpression	step_to = cp -> right		4956130	0		=			
ANR	4956204	Identifier	step_to		4956130	0					
ANR	4956205	PtrMemberAccess	cp -> right		4956130	1					
ANR	4956206	Identifier	cp		4956130	0					
ANR	4956207	Identifier	right		4956130	1					
ANR	4956208	IfStatement	if ( step_to )		4956130	1					
ANR	4956209	Condition	step_to	587:16:17610:17616	4956130	0	True				
ANR	4956210	Identifier	step_to		4956130	0					
ANR	4956211	CompoundStatement		31:12:775:775	4956130	1					
ANR	4956212	ExpressionStatement	from = SPLAY_FROM_ABOVE	589:16:17649:17672	4956130	0	True				
ANR	4956213	AssignmentExpression	from = SPLAY_FROM_ABOVE		4956130	0		=			
ANR	4956214	Identifier	from		4956130	0					
ANR	4956215	Identifier	SPLAY_FROM_ABOVE		4956130	1					
ANR	4956216	ExpressionStatement	cp = step_to	590:16:17690:17702	4956130	1	True				
ANR	4956217	AssignmentExpression	cp = step_to		4956130	0		=			
ANR	4956218	Identifier	cp		4956130	0					
ANR	4956219	Identifier	step_to		4956130	1					
ANR	4956220	ElseStatement	else		4956130	0					
ANR	4956221	CompoundStatement		36:12:891:891	4956130	0					
ANR	4956222	ExpressionStatement	from = SPLAY_FROM_RIGHT	595:16:17856:17879	4956130	0	True				
ANR	4956223	AssignmentExpression	from = SPLAY_FROM_RIGHT		4956130	0		=			
ANR	4956224	Identifier	from		4956130	0					
ANR	4956225	Identifier	SPLAY_FROM_RIGHT		4956130	1					
ANR	4956226	IfStatement	if ( from == SPLAY_FROM_RIGHT )		4956130	2					
ANR	4956227	Condition	from == SPLAY_FROM_RIGHT	598:12:17917:17940	4956130	0	True				
ANR	4956228	EqualityExpression	from == SPLAY_FROM_RIGHT		4956130	0		==			
ANR	4956229	Identifier	from		4956130	0					
ANR	4956230	Identifier	SPLAY_FROM_RIGHT		4956130	1					
ANR	4956231	CompoundStatement		42:8:1095:1095	4956130	1					
ANR	4956232	ExpressionStatement	step_to = cp -> parent	601:12:18024:18044	4956130	0	True				
ANR	4956233	AssignmentExpression	step_to = cp -> parent		4956130	0		=			
ANR	4956234	Identifier	step_to		4956130	0					
ANR	4956235	PtrMemberAccess	cp -> parent		4956130	1					
ANR	4956236	Identifier	cp		4956130	0					
ANR	4956237	Identifier	parent		4956130	1					
ANR	4956238	IfStatement	if ( step_to )		4956130	1					
ANR	4956239	Condition	step_to	602:16:18062:18068	4956130	0	True				
ANR	4956240	Identifier	step_to		4956130	0					
ANR	4956241	CompoundStatement		46:12:1227:1227	4956130	1					
ANR	4956242	ExpressionStatement	from = ( step_to -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )	604:16:18101:18166	4956130	0	True				
ANR	4956243	AssignmentExpression	from = ( step_to -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )		4956130	0		=			
ANR	4956244	Identifier	from		4956130	0					
ANR	4956245	ConditionalExpression	step_to -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT		4956130	1					
ANR	4956246	Condition	step_to -> left == cp		4956130	0					
ANR	4956247	EqualityExpression	step_to -> left == cp		4956130	0		==			
ANR	4956248	PtrMemberAccess	step_to -> left		4956130	0					
ANR	4956249	Identifier	step_to		4956130	0					
ANR	4956250	Identifier	left		4956130	1					
ANR	4956251	Identifier	cp		4956130	1					
ANR	4956252	Identifier	SPLAY_FROM_LEFT		4956130	1					
ANR	4956253	Identifier	SPLAY_FROM_RIGHT		4956130	2					
ANR	4956254	ExpressionStatement	"res = fn ( cp , arg )"	606:12:18194:18211	4956130	2	True				
ANR	4956255	AssignmentExpression	"res = fn ( cp , arg )"		4956130	0		=			
ANR	4956256	Identifier	res		4956130	0					
ANR	4956257	CallExpression	"fn ( cp , arg )"		4956130	1					
ANR	4956258	Callee	fn		4956130	0					
ANR	4956259	Identifier	fn		4956130	0					
ANR	4956260	ArgumentList	cp		4956130	1					
ANR	4956261	Argument	cp		4956130	0					
ANR	4956262	Identifier	cp		4956130	0					
ANR	4956263	Argument	arg		4956130	1					
ANR	4956264	Identifier	arg		4956130	0					
ANR	4956265	IfStatement	if ( res & SPLAY_APP_STOP )		4956130	3					
ANR	4956266	Condition	res & SPLAY_APP_STOP	607:16:18229:18248	4956130	0	True				
ANR	4956267	BitAndExpression	res & SPLAY_APP_STOP		4956130	0		&			
ANR	4956268	Identifier	res		4956130	0					
ANR	4956269	Identifier	SPLAY_APP_STOP		4956130	1					
ANR	4956270	ReturnStatement	return cp ;	608:16:18267:18276	4956130	1	True				
ANR	4956271	Identifier	cp		4956130	0					
ANR	4956272	ExpressionStatement	cp = step_to	609:12:18290:18302	4956130	4	True				
ANR	4956273	AssignmentExpression	cp = step_to		4956130	0		=			
ANR	4956274	Identifier	cp		4956130	0					
ANR	4956275	Identifier	step_to		4956130	1					
ANR	4956276	ReturnStatement	return cp ;	612:4:18324:18333	4956130	6	True				
ANR	4956277	Identifier	cp		4956130	0					
ANR	4956278	ReturnType	clump_t *		4956130	1					
ANR	4956279	Identifier	clump_splay_app		4956130	2					
ANR	4956280	ParameterList	"clump_t * root , gs_ref_memory_t * imem , splay_app_result_t ( * fn ) ( clump_t * , void * ) , void * arg"		4956130	3					
ANR	4956281	Parameter	clump_t * root	557:16:16761:16773	4956130	0	True				
ANR	4956282	ParameterType	clump_t *		4956130	0					
ANR	4956283	Identifier	root		4956130	1					
ANR	4956284	Parameter	gs_ref_memory_t * imem	557:31:16776:16796	4956130	1	True				
ANR	4956285	ParameterType	gs_ref_memory_t *		4956130	0					
ANR	4956286	Identifier	imem		4956130	1					
ANR	4956287	Parameter	"splay_app_result_t ( * fn ) ( clump_t * , void * )"	557:54:16799:16841	4956130	2	True				
ANR	4956288	ParameterType	"(( clump_t * , void * ) splay_app_result_t) *"		4956130	0					
ANR	4956289	Identifier	fn		4956130	1					
ANR	4956290	Parameter	void * arg	557:99:16844:16852	4956130	3	True				
ANR	4956291	ParameterType	void *		4956130	0					
ANR	4956292	Identifier	arg		4956130	1					
ANR	4956293	CFGEntryNode	ENTRY		4956130		True				
ANR	4956294	CFGExitNode	EXIT		4956130		True				
ANR	4956295	Symbol	res		4956130						
ANR	4956296	Symbol	SPLAY_APP_STOP		4956130						
ANR	4956297	Symbol	SPLAY_FROM_ABOVE		4956130						
ANR	4956298	Symbol	SPLAY_FROM_RIGHT		4956130						
ANR	4956299	Symbol	fn		4956130						
ANR	4956300	Symbol	cp -> right		4956130						
ANR	4956301	Symbol	step_to		4956130						
ANR	4956302	Symbol	cp		4956130						
ANR	4956303	Symbol	step_to -> left		4956130						
ANR	4956304	Symbol	* cp		4956130						
ANR	4956305	Symbol	cp -> left		4956130						
ANR	4956306	Symbol	cp -> parent		4956130						
ANR	4956307	Symbol	root		4956130						
ANR	4956308	Symbol	arg		4956130						
ANR	4956309	Symbol	SPLAY_FROM_LEFT		4956130						
ANR	4956310	Symbol	from		4956130						
ANR	4956311	Symbol	* step_to		4956130						
ANR	4956312	Symbol	imem		4956130						
ANR	4956313	Function	splay_move_to_root	643:0:19856:22605							
ANR	4956314	FunctionDef	"splay_move_to_root (clump_t * x , gs_ref_memory_t * mem)"		4956313	0					
ANR	4956315	CompoundStatement		645:0:19921:22605	4956313	0					
ANR	4956316	IdentifierDeclStatement	"clump_t * y , * z ;"	646:4:19927:19941	4956313	0	True				
ANR	4956317	IdentifierDecl	* y		4956313	0					
ANR	4956318	IdentifierDeclType	clump_t *		4956313	0					
ANR	4956319	Identifier	y		4956313	1					
ANR	4956320	IdentifierDecl	* z		4956313	1					
ANR	4956321	IdentifierDeclType	clump_t *		4956313	0					
ANR	4956322	Identifier	z		4956313	1					
ANR	4956323	IfStatement	if ( x == NULL )		4956313	1					
ANR	4956324	Condition	x == NULL	648:8:19952:19960	4956313	0	True				
ANR	4956325	EqualityExpression	x == NULL		4956313	0		==			
ANR	4956326	Identifier	x		4956313	0					
ANR	4956327	Identifier	NULL		4956313	1					
ANR	4956328	ReturnStatement	return ;	649:8:19971:19977	4956313	1	True				
ANR	4956329	WhileStatement	while ( ( y = x -> parent ) != NULL )		4956313	2					
ANR	4956330	Condition	( y = x -> parent ) != NULL	651:11:19991:20013	4956313	0	True				
ANR	4956331	EqualityExpression	( y = x -> parent ) != NULL		4956313	0		!=			
ANR	4956332	AssignmentExpression	y = x -> parent		4956313	0		=			
ANR	4956333	Identifier	y		4956313	0					
ANR	4956334	PtrMemberAccess	x -> parent		4956313	1					
ANR	4956335	Identifier	x		4956313	0					
ANR	4956336	Identifier	parent		4956313	1					
ANR	4956337	Identifier	NULL		4956313	1					
ANR	4956338	CompoundStatement		7:36:94:94	4956313	1					
ANR	4956339	IfStatement	if ( ( z = y -> parent ) != NULL )		4956313	0					
ANR	4956340	Condition	( z = y -> parent ) != NULL	652:12:20030:20052	4956313	0	True				
ANR	4956341	EqualityExpression	( z = y -> parent ) != NULL		4956313	0		!=			
ANR	4956342	AssignmentExpression	z = y -> parent		4956313	0		=			
ANR	4956343	Identifier	z		4956313	0					
ANR	4956344	PtrMemberAccess	y -> parent		4956313	1					
ANR	4956345	Identifier	y		4956313	0					
ANR	4956346	Identifier	parent		4956313	1					
ANR	4956347	Identifier	NULL		4956313	1					
ANR	4956348	CompoundStatement		8:37:133:133	4956313	1					
ANR	4956349	ExpressionStatement	x -> parent = z -> parent	653:12:20069:20090	4956313	0	True				
ANR	4956350	AssignmentExpression	x -> parent = z -> parent		4956313	0		=			
ANR	4956351	PtrMemberAccess	x -> parent		4956313	0					
ANR	4956352	Identifier	x		4956313	0					
ANR	4956353	Identifier	parent		4956313	1					
ANR	4956354	PtrMemberAccess	z -> parent		4956313	1					
ANR	4956355	Identifier	z		4956313	0					
ANR	4956356	Identifier	parent		4956313	1					
ANR	4956357	IfStatement	if ( x -> parent )		4956313	1					
ANR	4956358	Condition	x -> parent	654:16:20108:20116	4956313	0	True				
ANR	4956359	PtrMemberAccess	x -> parent		4956313	0					
ANR	4956360	Identifier	x		4956313	0					
ANR	4956361	Identifier	parent		4956313	1					
ANR	4956362	CompoundStatement		10:27:197:197	4956313	1					
ANR	4956363	IfStatement	if ( x -> parent -> left == z )		4956313	0					
ANR	4956364	Condition	x -> parent -> left == z	655:20:20141:20160	4956313	0	True				
ANR	4956365	EqualityExpression	x -> parent -> left == z		4956313	0		==			
ANR	4956366	PtrMemberAccess	x -> parent -> left		4956313	0					
ANR	4956367	PtrMemberAccess	x -> parent		4956313	0					
ANR	4956368	Identifier	x		4956313	0					
ANR	4956369	Identifier	parent		4956313	1					
ANR	4956370	Identifier	left		4956313	1					
ANR	4956371	Identifier	z		4956313	1					
ANR	4956372	ExpressionStatement	x -> parent -> left = x	656:20:20183:20202	4956313	1	True				
ANR	4956373	AssignmentExpression	x -> parent -> left = x		4956313	0		=			
ANR	4956374	PtrMemberAccess	x -> parent -> left		4956313	0					
ANR	4956375	PtrMemberAccess	x -> parent		4956313	0					
ANR	4956376	Identifier	x		4956313	0					
ANR	4956377	Identifier	parent		4956313	1					
ANR	4956378	Identifier	left		4956313	1					
ANR	4956379	Identifier	x		4956313	1					
ANR	4956380	ElseStatement	else		4956313	0					
ANR	4956381	ExpressionStatement	x -> parent -> right = x	658:20:20245:20266	4956313	0	True				
ANR	4956382	AssignmentExpression	x -> parent -> right = x		4956313	0		=			
ANR	4956383	PtrMemberAccess	x -> parent -> right		4956313	0					
ANR	4956384	PtrMemberAccess	x -> parent		4956313	0					
ANR	4956385	Identifier	x		4956313	0					
ANR	4956386	Identifier	parent		4956313	1					
ANR	4956387	Identifier	right		4956313	1					
ANR	4956388	Identifier	x		4956313	1					
ANR	4956389	ExpressionStatement	y -> parent = x	660:12:20294:20307	4956313	2	True				
ANR	4956390	AssignmentExpression	y -> parent = x		4956313	0		=			
ANR	4956391	PtrMemberAccess	y -> parent		4956313	0					
ANR	4956392	Identifier	y		4956313	0					
ANR	4956393	Identifier	parent		4956313	1					
ANR	4956394	Identifier	x		4956313	1					
ANR	4956395	IfStatement	if ( y -> left == x )		4956313	3					
ANR	4956396	Condition	y -> left == x	662:16:20363:20374	4956313	0	True				
ANR	4956397	EqualityExpression	y -> left == x		4956313	0		==			
ANR	4956398	PtrMemberAccess	y -> left		4956313	0					
ANR	4956399	Identifier	y		4956313	0					
ANR	4956400	Identifier	left		4956313	1					
ANR	4956401	Identifier	x		4956313	1					
ANR	4956402	CompoundStatement		18:30:455:455	4956313	1					
ANR	4956403	IfStatement	if ( z -> left == y )		4956313	0					
ANR	4956404	Condition	z -> left == y	664:20:20434:20445	4956313	0	True				
ANR	4956405	EqualityExpression	z -> left == y		4956313	0		==			
ANR	4956406	PtrMemberAccess	z -> left		4956313	0					
ANR	4956407	Identifier	z		4956313	0					
ANR	4956408	Identifier	left		4956313	1					
ANR	4956409	Identifier	y		4956313	1					
ANR	4956410	CompoundStatement		20:34:526:526	4956313	1					
ANR	4956411	ExpressionStatement	y -> left = x -> right	666:20:20503:20521	4956313	0	True				
ANR	4956412	AssignmentExpression	y -> left = x -> right		4956313	0		=			
ANR	4956413	PtrMemberAccess	y -> left		4956313	0					
ANR	4956414	Identifier	y		4956313	0					
ANR	4956415	Identifier	left		4956313	1					
ANR	4956416	PtrMemberAccess	x -> right		4956313	1					
ANR	4956417	Identifier	x		4956313	0					
ANR	4956418	Identifier	right		4956313	1					
ANR	4956419	IfStatement	if ( y -> left )		4956313	1					
ANR	4956420	Condition	y -> left	667:24:20547:20553	4956313	0	True				
ANR	4956421	PtrMemberAccess	y -> left		4956313	0					
ANR	4956422	Identifier	y		4956313	0					
ANR	4956423	Identifier	left		4956313	1					
ANR	4956424	ExpressionStatement	y -> left -> parent = y	668:24:20580:20599	4956313	1	True				
ANR	4956425	AssignmentExpression	y -> left -> parent = y		4956313	0		=			
ANR	4956426	PtrMemberAccess	y -> left -> parent		4956313	0					
ANR	4956427	PtrMemberAccess	y -> left		4956313	0					
ANR	4956428	Identifier	y		4956313	0					
ANR	4956429	Identifier	left		4956313	1					
ANR	4956430	Identifier	parent		4956313	1					
ANR	4956431	Identifier	y		4956313	1					
ANR	4956432	ExpressionStatement	z -> left = y -> right	669:20:20621:20639	4956313	2	True				
ANR	4956433	AssignmentExpression	z -> left = y -> right		4956313	0		=			
ANR	4956434	PtrMemberAccess	z -> left		4956313	0					
ANR	4956435	Identifier	z		4956313	0					
ANR	4956436	Identifier	left		4956313	1					
ANR	4956437	PtrMemberAccess	y -> right		4956313	1					
ANR	4956438	Identifier	y		4956313	0					
ANR	4956439	Identifier	right		4956313	1					
ANR	4956440	IfStatement	if ( z -> left )		4956313	3					
ANR	4956441	Condition	z -> left	670:24:20665:20671	4956313	0	True				
ANR	4956442	PtrMemberAccess	z -> left		4956313	0					
ANR	4956443	Identifier	z		4956313	0					
ANR	4956444	Identifier	left		4956313	1					
ANR	4956445	ExpressionStatement	z -> left -> parent = z	671:24:20698:20717	4956313	1	True				
ANR	4956446	AssignmentExpression	z -> left -> parent = z		4956313	0		=			
ANR	4956447	PtrMemberAccess	z -> left -> parent		4956313	0					
ANR	4956448	PtrMemberAccess	z -> left		4956313	0					
ANR	4956449	Identifier	z		4956313	0					
ANR	4956450	Identifier	left		4956313	1					
ANR	4956451	Identifier	parent		4956313	1					
ANR	4956452	Identifier	z		4956313	1					
ANR	4956453	ExpressionStatement	y -> right = z	672:20:20739:20751	4956313	4	True				
ANR	4956454	AssignmentExpression	y -> right = z		4956313	0		=			
ANR	4956455	PtrMemberAccess	y -> right		4956313	0					
ANR	4956456	Identifier	y		4956313	0					
ANR	4956457	Identifier	right		4956313	1					
ANR	4956458	Identifier	z		4956313	1					
ANR	4956459	ExpressionStatement	z -> parent = y	673:20:20773:20786	4956313	5	True				
ANR	4956460	AssignmentExpression	z -> parent = y		4956313	0		=			
ANR	4956461	PtrMemberAccess	z -> parent		4956313	0					
ANR	4956462	Identifier	z		4956313	0					
ANR	4956463	Identifier	parent		4956313	1					
ANR	4956464	Identifier	y		4956313	1					
ANR	4956465	ElseStatement	else		4956313	0					
ANR	4956466	CompoundStatement		30:23:889:889	4956313	0					
ANR	4956467	ExpressionStatement	z -> right = x -> left	676:20:20867:20885	4956313	0	True				
ANR	4956468	AssignmentExpression	z -> right = x -> left		4956313	0		=			
ANR	4956469	PtrMemberAccess	z -> right		4956313	0					
ANR	4956470	Identifier	z		4956313	0					
ANR	4956471	Identifier	right		4956313	1					
ANR	4956472	PtrMemberAccess	x -> left		4956313	1					
ANR	4956473	Identifier	x		4956313	0					
ANR	4956474	Identifier	left		4956313	1					
ANR	4956475	IfStatement	if ( z -> right )		4956313	1					
ANR	4956476	Condition	z -> right	677:24:20911:20918	4956313	0	True				
ANR	4956477	PtrMemberAccess	z -> right		4956313	0					
ANR	4956478	Identifier	z		4956313	0					
ANR	4956479	Identifier	right		4956313	1					
ANR	4956480	ExpressionStatement	z -> right -> parent = z	678:24:20945:20965	4956313	1	True				
ANR	4956481	AssignmentExpression	z -> right -> parent = z		4956313	0		=			
ANR	4956482	PtrMemberAccess	z -> right -> parent		4956313	0					
ANR	4956483	PtrMemberAccess	z -> right		4956313	0					
ANR	4956484	Identifier	z		4956313	0					
ANR	4956485	Identifier	right		4956313	1					
ANR	4956486	Identifier	parent		4956313	1					
ANR	4956487	Identifier	z		4956313	1					
ANR	4956488	ExpressionStatement	y -> left = x -> right	679:20:20987:21005	4956313	2	True				
ANR	4956489	AssignmentExpression	y -> left = x -> right		4956313	0		=			
ANR	4956490	PtrMemberAccess	y -> left		4956313	0					
ANR	4956491	Identifier	y		4956313	0					
ANR	4956492	Identifier	left		4956313	1					
ANR	4956493	PtrMemberAccess	x -> right		4956313	1					
ANR	4956494	Identifier	x		4956313	0					
ANR	4956495	Identifier	right		4956313	1					
ANR	4956496	IfStatement	if ( y -> left )		4956313	3					
ANR	4956497	Condition	y -> left	680:24:21031:21037	4956313	0	True				
ANR	4956498	PtrMemberAccess	y -> left		4956313	0					
ANR	4956499	Identifier	y		4956313	0					
ANR	4956500	Identifier	left		4956313	1					
ANR	4956501	ExpressionStatement	y -> left -> parent = y	681:24:21064:21083	4956313	1	True				
ANR	4956502	AssignmentExpression	y -> left -> parent = y		4956313	0		=			
ANR	4956503	PtrMemberAccess	y -> left -> parent		4956313	0					
ANR	4956504	PtrMemberAccess	y -> left		4956313	0					
ANR	4956505	Identifier	y		4956313	0					
ANR	4956506	Identifier	left		4956313	1					
ANR	4956507	Identifier	parent		4956313	1					
ANR	4956508	Identifier	y		4956313	1					
ANR	4956509	ExpressionStatement	x -> left = z	682:20:21105:21116	4956313	4	True				
ANR	4956510	AssignmentExpression	x -> left = z		4956313	0		=			
ANR	4956511	PtrMemberAccess	x -> left		4956313	0					
ANR	4956512	Identifier	x		4956313	0					
ANR	4956513	Identifier	left		4956313	1					
ANR	4956514	Identifier	z		4956313	1					
ANR	4956515	ExpressionStatement	z -> parent = x	683:20:21138:21151	4956313	5	True				
ANR	4956516	AssignmentExpression	z -> parent = x		4956313	0		=			
ANR	4956517	PtrMemberAccess	z -> parent		4956313	0					
ANR	4956518	Identifier	z		4956313	0					
ANR	4956519	Identifier	parent		4956313	1					
ANR	4956520	Identifier	x		4956313	1					
ANR	4956521	ExpressionStatement	x -> right = y	685:16:21187:21204	4956313	1	True				
ANR	4956522	AssignmentExpression	x -> right = y		4956313	0		=			
ANR	4956523	PtrMemberAccess	x -> right		4956313	0					
ANR	4956524	Identifier	x		4956313	0					
ANR	4956525	Identifier	right		4956313	1					
ANR	4956526	Identifier	y		4956313	1					
ANR	4956527	ElseStatement	else		4956313	0					
ANR	4956528	CompoundStatement		42:19:1303:1303	4956313	0					
ANR	4956529	IfStatement	if ( z -> left == y )		4956313	0					
ANR	4956530	Condition	z -> left == y	688:20:21282:21293	4956313	0	True				
ANR	4956531	EqualityExpression	z -> left == y		4956313	0		==			
ANR	4956532	PtrMemberAccess	z -> left		4956313	0					
ANR	4956533	Identifier	z		4956313	0					
ANR	4956534	Identifier	left		4956313	1					
ANR	4956535	Identifier	y		4956313	1					
ANR	4956536	CompoundStatement		44:34:1374:1374	4956313	1					
ANR	4956537	ExpressionStatement	y -> right = x -> left	690:20:21351:21369	4956313	0	True				
ANR	4956538	AssignmentExpression	y -> right = x -> left		4956313	0		=			
ANR	4956539	PtrMemberAccess	y -> right		4956313	0					
ANR	4956540	Identifier	y		4956313	0					
ANR	4956541	Identifier	right		4956313	1					
ANR	4956542	PtrMemberAccess	x -> left		4956313	1					
ANR	4956543	Identifier	x		4956313	0					
ANR	4956544	Identifier	left		4956313	1					
ANR	4956545	IfStatement	if ( y -> right )		4956313	1					
ANR	4956546	Condition	y -> right	691:24:21395:21402	4956313	0	True				
ANR	4956547	PtrMemberAccess	y -> right		4956313	0					
ANR	4956548	Identifier	y		4956313	0					
ANR	4956549	Identifier	right		4956313	1					
ANR	4956550	ExpressionStatement	y -> right -> parent = y	692:24:21429:21449	4956313	1	True				
ANR	4956551	AssignmentExpression	y -> right -> parent = y		4956313	0		=			
ANR	4956552	PtrMemberAccess	y -> right -> parent		4956313	0					
ANR	4956553	PtrMemberAccess	y -> right		4956313	0					
ANR	4956554	Identifier	y		4956313	0					
ANR	4956555	Identifier	right		4956313	1					
ANR	4956556	Identifier	parent		4956313	1					
ANR	4956557	Identifier	y		4956313	1					
ANR	4956558	ExpressionStatement	z -> left = x -> right	693:20:21471:21489	4956313	2	True				
ANR	4956559	AssignmentExpression	z -> left = x -> right		4956313	0		=			
ANR	4956560	PtrMemberAccess	z -> left		4956313	0					
ANR	4956561	Identifier	z		4956313	0					
ANR	4956562	Identifier	left		4956313	1					
ANR	4956563	PtrMemberAccess	x -> right		4956313	1					
ANR	4956564	Identifier	x		4956313	0					
ANR	4956565	Identifier	right		4956313	1					
ANR	4956566	IfStatement	if ( z -> left )		4956313	3					
ANR	4956567	Condition	z -> left	694:24:21515:21521	4956313	0	True				
ANR	4956568	PtrMemberAccess	z -> left		4956313	0					
ANR	4956569	Identifier	z		4956313	0					
ANR	4956570	Identifier	left		4956313	1					
ANR	4956571	ExpressionStatement	z -> left -> parent = z	695:24:21548:21567	4956313	1	True				
ANR	4956572	AssignmentExpression	z -> left -> parent = z		4956313	0		=			
ANR	4956573	PtrMemberAccess	z -> left -> parent		4956313	0					
ANR	4956574	PtrMemberAccess	z -> left		4956313	0					
ANR	4956575	Identifier	z		4956313	0					
ANR	4956576	Identifier	left		4956313	1					
ANR	4956577	Identifier	parent		4956313	1					
ANR	4956578	Identifier	z		4956313	1					
ANR	4956579	ExpressionStatement	x -> right = z	696:20:21589:21601	4956313	4	True				
ANR	4956580	AssignmentExpression	x -> right = z		4956313	0		=			
ANR	4956581	PtrMemberAccess	x -> right		4956313	0					
ANR	4956582	Identifier	x		4956313	0					
ANR	4956583	Identifier	right		4956313	1					
ANR	4956584	Identifier	z		4956313	1					
ANR	4956585	ExpressionStatement	z -> parent = x	697:20:21623:21636	4956313	5	True				
ANR	4956586	AssignmentExpression	z -> parent = x		4956313	0		=			
ANR	4956587	PtrMemberAccess	z -> parent		4956313	0					
ANR	4956588	Identifier	z		4956313	0					
ANR	4956589	Identifier	parent		4956313	1					
ANR	4956590	Identifier	x		4956313	1					
ANR	4956591	ElseStatement	else		4956313	0					
ANR	4956592	CompoundStatement		54:23:1739:1739	4956313	0					
ANR	4956593	ExpressionStatement	z -> right = y -> left	700:20:21717:21735	4956313	0	True				
ANR	4956594	AssignmentExpression	z -> right = y -> left		4956313	0		=			
ANR	4956595	PtrMemberAccess	z -> right		4956313	0					
ANR	4956596	Identifier	z		4956313	0					
ANR	4956597	Identifier	right		4956313	1					
ANR	4956598	PtrMemberAccess	y -> left		4956313	1					
ANR	4956599	Identifier	y		4956313	0					
ANR	4956600	Identifier	left		4956313	1					
ANR	4956601	IfStatement	if ( z -> right )		4956313	1					
ANR	4956602	Condition	z -> right	701:24:21761:21768	4956313	0	True				
ANR	4956603	PtrMemberAccess	z -> right		4956313	0					
ANR	4956604	Identifier	z		4956313	0					
ANR	4956605	Identifier	right		4956313	1					
ANR	4956606	ExpressionStatement	z -> right -> parent = z	702:24:21795:21815	4956313	1	True				
ANR	4956607	AssignmentExpression	z -> right -> parent = z		4956313	0		=			
ANR	4956608	PtrMemberAccess	z -> right -> parent		4956313	0					
ANR	4956609	PtrMemberAccess	z -> right		4956313	0					
ANR	4956610	Identifier	z		4956313	0					
ANR	4956611	Identifier	right		4956313	1					
ANR	4956612	Identifier	parent		4956313	1					
ANR	4956613	Identifier	z		4956313	1					
ANR	4956614	ExpressionStatement	y -> right = x -> left	703:20:21837:21855	4956313	2	True				
ANR	4956615	AssignmentExpression	y -> right = x -> left		4956313	0		=			
ANR	4956616	PtrMemberAccess	y -> right		4956313	0					
ANR	4956617	Identifier	y		4956313	0					
ANR	4956618	Identifier	right		4956313	1					
ANR	4956619	PtrMemberAccess	x -> left		4956313	1					
ANR	4956620	Identifier	x		4956313	0					
ANR	4956621	Identifier	left		4956313	1					
ANR	4956622	IfStatement	if ( y -> right )		4956313	3					
ANR	4956623	Condition	y -> right	704:24:21881:21888	4956313	0	True				
ANR	4956624	PtrMemberAccess	y -> right		4956313	0					
ANR	4956625	Identifier	y		4956313	0					
ANR	4956626	Identifier	right		4956313	1					
ANR	4956627	ExpressionStatement	y -> right -> parent = y	705:24:21915:21935	4956313	1	True				
ANR	4956628	AssignmentExpression	y -> right -> parent = y		4956313	0		=			
ANR	4956629	PtrMemberAccess	y -> right -> parent		4956313	0					
ANR	4956630	PtrMemberAccess	y -> right		4956313	0					
ANR	4956631	Identifier	y		4956313	0					
ANR	4956632	Identifier	right		4956313	1					
ANR	4956633	Identifier	parent		4956313	1					
ANR	4956634	Identifier	y		4956313	1					
ANR	4956635	ExpressionStatement	y -> left = z	706:20:21957:21968	4956313	4	True				
ANR	4956636	AssignmentExpression	y -> left = z		4956313	0		=			
ANR	4956637	PtrMemberAccess	y -> left		4956313	0					
ANR	4956638	Identifier	y		4956313	0					
ANR	4956639	Identifier	left		4956313	1					
ANR	4956640	Identifier	z		4956313	1					
ANR	4956641	ExpressionStatement	z -> parent = y	707:20:21990:22003	4956313	5	True				
ANR	4956642	AssignmentExpression	z -> parent = y		4956313	0		=			
ANR	4956643	PtrMemberAccess	z -> parent		4956313	0					
ANR	4956644	Identifier	z		4956313	0					
ANR	4956645	Identifier	parent		4956313	1					
ANR	4956646	Identifier	y		4956313	1					
ANR	4956647	ExpressionStatement	x -> left = y	709:16:22039:22050	4956313	1	True				
ANR	4956648	AssignmentExpression	x -> left = y		4956313	0		=			
ANR	4956649	PtrMemberAccess	x -> left		4956313	0					
ANR	4956650	Identifier	x		4956313	0					
ANR	4956651	Identifier	left		4956313	1					
ANR	4956652	Identifier	y		4956313	1					
ANR	4956653	ElseStatement	else		4956313	0					
ANR	4956654	CompoundStatement		67:15:2159:2159	4956313	0					
ANR	4956655	ExpressionStatement	x -> parent = NULL	713:12:22126:22142	4956313	0	True				
ANR	4956656	AssignmentExpression	x -> parent = NULL		4956313	0		=			
ANR	4956657	PtrMemberAccess	x -> parent		4956313	0					
ANR	4956658	Identifier	x		4956313	0					
ANR	4956659	Identifier	parent		4956313	1					
ANR	4956660	Identifier	NULL		4956313	1					
ANR	4956661	ExpressionStatement	y -> parent = x	714:12:22156:22169	4956313	1	True				
ANR	4956662	AssignmentExpression	y -> parent = x		4956313	0		=			
ANR	4956663	PtrMemberAccess	y -> parent		4956313	0					
ANR	4956664	Identifier	y		4956313	0					
ANR	4956665	Identifier	parent		4956313	1					
ANR	4956666	Identifier	x		4956313	1					
ANR	4956667	IfStatement	if ( y -> left == x )		4956313	2					
ANR	4956668	Condition	y -> left == x	715:16:22187:22198	4956313	0	True				
ANR	4956669	EqualityExpression	y -> left == x		4956313	0		==			
ANR	4956670	PtrMemberAccess	y -> left		4956313	0					
ANR	4956671	Identifier	y		4956313	0					
ANR	4956672	Identifier	left		4956313	1					
ANR	4956673	Identifier	x		4956313	1					
ANR	4956674	CompoundStatement		71:30:2279:2279	4956313	1					
ANR	4956675	ExpressionStatement	y -> left = x -> right	717:16:22248:22266	4956313	0	True				
ANR	4956676	AssignmentExpression	y -> left = x -> right		4956313	0		=			
ANR	4956677	PtrMemberAccess	y -> left		4956313	0					
ANR	4956678	Identifier	y		4956313	0					
ANR	4956679	Identifier	left		4956313	1					
ANR	4956680	PtrMemberAccess	x -> right		4956313	1					
ANR	4956681	Identifier	x		4956313	0					
ANR	4956682	Identifier	right		4956313	1					
ANR	4956683	IfStatement	if ( y -> left )		4956313	1					
ANR	4956684	Condition	y -> left	718:20:22288:22294	4956313	0	True				
ANR	4956685	PtrMemberAccess	y -> left		4956313	0					
ANR	4956686	Identifier	y		4956313	0					
ANR	4956687	Identifier	left		4956313	1					
ANR	4956688	ExpressionStatement	y -> left -> parent = y	719:20:22317:22336	4956313	1	True				
ANR	4956689	AssignmentExpression	y -> left -> parent = y		4956313	0		=			
ANR	4956690	PtrMemberAccess	y -> left -> parent		4956313	0					
ANR	4956691	PtrMemberAccess	y -> left		4956313	0					
ANR	4956692	Identifier	y		4956313	0					
ANR	4956693	Identifier	left		4956313	1					
ANR	4956694	Identifier	parent		4956313	1					
ANR	4956695	Identifier	y		4956313	1					
ANR	4956696	ExpressionStatement	x -> right = y	720:16:22354:22366	4956313	2	True				
ANR	4956697	AssignmentExpression	x -> right = y		4956313	0		=			
ANR	4956698	PtrMemberAccess	x -> right		4956313	0					
ANR	4956699	Identifier	x		4956313	0					
ANR	4956700	Identifier	right		4956313	1					
ANR	4956701	Identifier	y		4956313	1					
ANR	4956702	ElseStatement	else		4956313	0					
ANR	4956703	CompoundStatement		77:19:2465:2465	4956313	0					
ANR	4956704	ExpressionStatement	y -> right = x -> left	723:16:22435:22453	4956313	0	True				
ANR	4956705	AssignmentExpression	y -> right = x -> left		4956313	0		=			
ANR	4956706	PtrMemberAccess	y -> right		4956313	0					
ANR	4956707	Identifier	y		4956313	0					
ANR	4956708	Identifier	right		4956313	1					
ANR	4956709	PtrMemberAccess	x -> left		4956313	1					
ANR	4956710	Identifier	x		4956313	0					
ANR	4956711	Identifier	left		4956313	1					
ANR	4956712	IfStatement	if ( y -> right )		4956313	1					
ANR	4956713	Condition	y -> right	724:20:22475:22482	4956313	0	True				
ANR	4956714	PtrMemberAccess	y -> right		4956313	0					
ANR	4956715	Identifier	y		4956313	0					
ANR	4956716	Identifier	right		4956313	1					
ANR	4956717	ExpressionStatement	y -> right -> parent = y	725:20:22505:22525	4956313	1	True				
ANR	4956718	AssignmentExpression	y -> right -> parent = y		4956313	0		=			
ANR	4956719	PtrMemberAccess	y -> right -> parent		4956313	0					
ANR	4956720	PtrMemberAccess	y -> right		4956313	0					
ANR	4956721	Identifier	y		4956313	0					
ANR	4956722	Identifier	right		4956313	1					
ANR	4956723	Identifier	parent		4956313	1					
ANR	4956724	Identifier	y		4956313	1					
ANR	4956725	ExpressionStatement	x -> left = y	726:16:22543:22554	4956313	2	True				
ANR	4956726	AssignmentExpression	x -> left = y		4956313	0		=			
ANR	4956727	PtrMemberAccess	x -> left		4956313	0					
ANR	4956728	Identifier	x		4956313	0					
ANR	4956729	Identifier	left		4956313	1					
ANR	4956730	Identifier	y		4956313	1					
ANR	4956731	ExpressionStatement	mem -> root = x	730:4:22590:22603	4956313	3	True				
ANR	4956732	AssignmentExpression	mem -> root = x		4956313	0		=			
ANR	4956733	PtrMemberAccess	mem -> root		4956313	0					
ANR	4956734	Identifier	mem		4956313	0					
ANR	4956735	Identifier	root		4956313	1					
ANR	4956736	Identifier	x		4956313	1					
ANR	4956737	ReturnType	static void		4956313	1					
ANR	4956738	Identifier	splay_move_to_root		4956313	2					
ANR	4956739	ParameterList	"clump_t * x , gs_ref_memory_t * mem"		4956313	3					
ANR	4956740	Parameter	clump_t * x	644:19:19887:19896	4956313	0	True				
ANR	4956741	ParameterType	clump_t *		4956313	0					
ANR	4956742	Identifier	x		4956313	1					
ANR	4956743	Parameter	gs_ref_memory_t * mem	644:31:19899:19918	4956313	1	True				
ANR	4956744	ParameterType	gs_ref_memory_t *		4956313	0					
ANR	4956745	Identifier	mem		4956313	1					
ANR	4956746	CFGEntryNode	ENTRY		4956313		True				
ANR	4956747	CFGExitNode	EXIT		4956313		True				
ANR	4956748	Symbol	* x		4956313						
ANR	4956749	Symbol	* y		4956313						
ANR	4956750	Symbol	* x -> parent		4956313						
ANR	4956751	Symbol	* y -> right		4956313						
ANR	4956752	Symbol	* z		4956313						
ANR	4956753	Symbol	* z -> left		4956313						
ANR	4956754	Symbol	z -> left		4956313						
ANR	4956755	Symbol	* * z		4956313						
ANR	4956756	Symbol	* * y		4956313						
ANR	4956757	Symbol	* y -> left		4956313						
ANR	4956758	Symbol	* * x		4956313						
ANR	4956759	Symbol	mem		4956313						
ANR	4956760	Symbol	y -> left		4956313						
ANR	4956761	Symbol	y -> right		4956313						
ANR	4956762	Symbol	x -> left		4956313						
ANR	4956763	Symbol	y -> parent		4956313						
ANR	4956764	Symbol	z -> left -> parent		4956313						
ANR	4956765	Symbol	NULL		4956313						
ANR	4956766	Symbol	z -> right		4956313						
ANR	4956767	Symbol	x -> parent -> left		4956313						
ANR	4956768	Symbol	x -> right		4956313						
ANR	4956769	Symbol	x -> parent		4956313						
ANR	4956770	Symbol	y -> left -> parent		4956313						
ANR	4956771	Symbol	x		4956313						
ANR	4956772	Symbol	y		4956313						
ANR	4956773	Symbol	mem -> root		4956313						
ANR	4956774	Symbol	z		4956313						
ANR	4956775	Symbol	* z -> right		4956313						
ANR	4956776	Symbol	x -> parent -> right		4956313						
ANR	4956777	Symbol	z -> parent		4956313						
ANR	4956778	Symbol	y -> right -> parent		4956313						
ANR	4956779	Symbol	z -> right -> parent		4956313						
ANR	4956780	Symbol	* mem		4956313						
ANR	4956781	Function	splay_insert	733:0:22608:23031							
ANR	4956782	FunctionDef	"splay_insert (clump_t * cp , gs_ref_memory_t * mem)"		4956781	0					
ANR	4956783	CompoundStatement		735:0:22668:23031	4956781	0					
ANR	4956784	IdentifierDeclStatement	clump_t * node = NULL ;	736:4:22674:22694	4956781	0	True				
ANR	4956785	IdentifierDecl	* node = NULL		4956781	0					
ANR	4956786	IdentifierDeclType	clump_t *		4956781	0					
ANR	4956787	Identifier	node		4956781	1					
ANR	4956788	AssignmentExpression	* node = NULL		4956781	2		=			
ANR	4956789	Identifier	NULL		4956781	0					
ANR	4956790	Identifier	NULL		4956781	1					
ANR	4956791	IdentifierDeclStatement	clump_t * * root = & mem -> root ;	737:4:22700:22727	4956781	1	True				
ANR	4956792	IdentifierDecl	* * root = & mem -> root		4956781	0					
ANR	4956793	IdentifierDeclType	clump_t * *		4956781	0					
ANR	4956794	Identifier	root		4956781	1					
ANR	4956795	AssignmentExpression	* * root = & mem -> root		4956781	2		=			
ANR	4956796	Identifier	root		4956781	0					
ANR	4956797	UnaryOperationExpression	& mem -> root		4956781	1					
ANR	4956798	UnaryOperator	&		4956781	0					
ANR	4956799	PtrMemberAccess	mem -> root		4956781	1					
ANR	4956800	Identifier	mem		4956781	0					
ANR	4956801	Identifier	root		4956781	1					
ANR	4956802	WhileStatement	while ( * root )		4956781	2					
ANR	4956803	Condition	* root	739:11:22741:22745	4956781	0	True				
ANR	4956804	UnaryOperationExpression	* root		4956781	0					
ANR	4956805	UnaryOperator	*		4956781	0					
ANR	4956806	Identifier	root		4956781	1					
ANR	4956807	CompoundStatement		5:18:79:79	4956781	1					
ANR	4956808	ExpressionStatement	node = * root	740:8:22758:22770	4956781	0	True				
ANR	4956809	AssignmentExpression	node = * root		4956781	0		=			
ANR	4956810	Identifier	node		4956781	0					
ANR	4956811	UnaryOperationExpression	* root		4956781	1					
ANR	4956812	UnaryOperator	*		4956781	0					
ANR	4956813	Identifier	root		4956781	1					
ANR	4956814	IfStatement	"if ( PTR_LT ( cp -> cbase , node -> cbase ) )"		4956781	1					
ANR	4956815	Condition	"PTR_LT ( cp -> cbase , node -> cbase )"	741:12:22784:22813	4956781	0	True				
ANR	4956816	CallExpression	"PTR_LT ( cp -> cbase , node -> cbase )"		4956781	0					
ANR	4956817	Callee	PTR_LT		4956781	0					
ANR	4956818	Identifier	PTR_LT		4956781	0					
ANR	4956819	ArgumentList	cp -> cbase		4956781	1					
ANR	4956820	Argument	cp -> cbase		4956781	0					
ANR	4956821	PtrMemberAccess	cp -> cbase		4956781	0					
ANR	4956822	Identifier	cp		4956781	0					
ANR	4956823	Identifier	cbase		4956781	1					
ANR	4956824	Argument	node -> cbase		4956781	1					
ANR	4956825	PtrMemberAccess	node -> cbase		4956781	0					
ANR	4956826	Identifier	node		4956781	0					
ANR	4956827	Identifier	cbase		4956781	1					
ANR	4956828	CompoundStatement		7:44:147:147	4956781	1					
ANR	4956829	ExpressionStatement	root = & node -> left	742:12:22830:22848	4956781	0	True				
ANR	4956830	AssignmentExpression	root = & node -> left		4956781	0		=			
ANR	4956831	Identifier	root		4956781	0					
ANR	4956832	UnaryOperationExpression	& node -> left		4956781	1					
ANR	4956833	UnaryOperator	&		4956781	0					
ANR	4956834	PtrMemberAccess	node -> left		4956781	1					
ANR	4956835	Identifier	node		4956781	0					
ANR	4956836	Identifier	left		4956781	1					
ANR	4956837	ElseStatement	else		4956781	0					
ANR	4956838	CompoundStatement		9:15:196:196	4956781	0					
ANR	4956839	ExpressionStatement	root = & node -> right	744:12:22879:22898	4956781	0	True				
ANR	4956840	AssignmentExpression	root = & node -> right		4956781	0		=			
ANR	4956841	Identifier	root		4956781	0					
ANR	4956842	UnaryOperationExpression	& node -> right		4956781	1					
ANR	4956843	UnaryOperator	&		4956781	0					
ANR	4956844	PtrMemberAccess	node -> right		4956781	1					
ANR	4956845	Identifier	node		4956781	0					
ANR	4956846	Identifier	right		4956781	1					
ANR	4956847	ExpressionStatement	* root = cp	747:4:22920:22930	4956781	3	True				
ANR	4956848	AssignmentExpression	* root = cp		4956781	0		=			
ANR	4956849	UnaryOperationExpression	* root		4956781	0					
ANR	4956850	UnaryOperator	*		4956781	0					
ANR	4956851	Identifier	root		4956781	1					
ANR	4956852	Identifier	cp		4956781	1					
ANR	4956853	ExpressionStatement	cp -> left = NULL	748:4:22936:22951	4956781	4	True				
ANR	4956854	AssignmentExpression	cp -> left = NULL		4956781	0		=			
ANR	4956855	PtrMemberAccess	cp -> left		4956781	0					
ANR	4956856	Identifier	cp		4956781	0					
ANR	4956857	Identifier	left		4956781	1					
ANR	4956858	Identifier	NULL		4956781	1					
ANR	4956859	ExpressionStatement	cp -> right = NULL	749:4:22957:22973	4956781	5	True				
ANR	4956860	AssignmentExpression	cp -> right = NULL		4956781	0		=			
ANR	4956861	PtrMemberAccess	cp -> right		4956781	0					
ANR	4956862	Identifier	cp		4956781	0					
ANR	4956863	Identifier	right		4956781	1					
ANR	4956864	Identifier	NULL		4956781	1					
ANR	4956865	ExpressionStatement	cp -> parent = node	750:4:22979:22996	4956781	6	True				
ANR	4956866	AssignmentExpression	cp -> parent = node		4956781	0		=			
ANR	4956867	PtrMemberAccess	cp -> parent		4956781	0					
ANR	4956868	Identifier	cp		4956781	0					
ANR	4956869	Identifier	parent		4956781	1					
ANR	4956870	Identifier	node		4956781	1					
ANR	4956871	ExpressionStatement	"splay_move_to_root ( cp , mem )"	751:4:23002:23029	4956781	7	True				
ANR	4956872	CallExpression	"splay_move_to_root ( cp , mem )"		4956781	0					
ANR	4956873	Callee	splay_move_to_root		4956781	0					
ANR	4956874	Identifier	splay_move_to_root		4956781	0					
ANR	4956875	ArgumentList	cp		4956781	1					
ANR	4956876	Argument	cp		4956781	0					
ANR	4956877	Identifier	cp		4956781	0					
ANR	4956878	Argument	mem		4956781	1					
ANR	4956879	Identifier	mem		4956781	0					
ANR	4956880	ReturnType	static void		4956781	1					
ANR	4956881	Identifier	splay_insert		4956781	2					
ANR	4956882	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		4956781	3					
ANR	4956883	Parameter	clump_t * cp	734:13:22633:22643	4956781	0	True				
ANR	4956884	ParameterType	clump_t *		4956781	0					
ANR	4956885	Identifier	cp		4956781	1					
ANR	4956886	Parameter	gs_ref_memory_t * mem	734:26:22646:22665	4956781	1	True				
ANR	4956887	ParameterType	gs_ref_memory_t *		4956781	0					
ANR	4956888	Identifier	mem		4956781	1					
ANR	4956889	CFGEntryNode	ENTRY		4956781		True				
ANR	4956890	CFGExitNode	EXIT		4956781		True				
ANR	4956891	Symbol	NULL		4956781						
ANR	4956892	Symbol	node -> cbase		4956781						
ANR	4956893	Symbol	& node -> left		4956781						
ANR	4956894	Symbol	cp -> right		4956781						
ANR	4956895	Symbol	& mem -> root		4956781						
ANR	4956896	Symbol	cp -> cbase		4956781						
ANR	4956897	Symbol	cp		4956781						
ANR	4956898	Symbol	* cp		4956781						
ANR	4956899	Symbol	node		4956781						
ANR	4956900	Symbol	PTR_LT		4956781						
ANR	4956901	Symbol	mem		4956781						
ANR	4956902	Symbol	& node -> right		4956781						
ANR	4956903	Symbol	cp -> left		4956781						
ANR	4956904	Symbol	cp -> parent		4956781						
ANR	4956905	Symbol	root		4956781						
ANR	4956906	Symbol	* node		4956781						
ANR	4956907	Symbol	* root		4956781						
ANR	4956908	DeclStmt									
ANR	4956909	Decl							void	"void * ( gs_memory_t * , gs_memory_type_ptr_t , clump_t * * )"	ialloc_solo
ANR	4956910	Function	ialloc_alloc_state	760:0:23271:24579							
ANR	4956911	FunctionDef	"ialloc_alloc_state (gs_memory_t * parent , uint clump_size)"		4956910	0					
ANR	4956912	CompoundStatement		762:0:23347:24579	4956910	0					
ANR	4956913	IdentifierDeclStatement	clump_t * cp ;	763:4:23353:23364	4956910	0	True				
ANR	4956914	IdentifierDecl	* cp		4956910	0					
ANR	4956915	IdentifierDeclType	clump_t *		4956910	0					
ANR	4956916	Identifier	cp		4956910	1					
ANR	4956917	IdentifierDeclStatement	"gs_ref_memory_t * iimem = ialloc_solo ( parent , & st_ref_memory , & cp ) ;"	764:4:23370:23435	4956910	1	True				
ANR	4956918	IdentifierDecl	"* iimem = ialloc_solo ( parent , & st_ref_memory , & cp )"		4956910	0					
ANR	4956919	IdentifierDeclType	gs_ref_memory_t *		4956910	0					
ANR	4956920	Identifier	iimem		4956910	1					
ANR	4956921	AssignmentExpression	"* iimem = ialloc_solo ( parent , & st_ref_memory , & cp )"		4956910	2		=			
ANR	4956922	Identifier	iimem		4956910	0					
ANR	4956923	CallExpression	"ialloc_solo ( parent , & st_ref_memory , & cp )"		4956910	1					
ANR	4956924	Callee	ialloc_solo		4956910	0					
ANR	4956925	Identifier	ialloc_solo		4956910	0					
ANR	4956926	ArgumentList	parent		4956910	1					
ANR	4956927	Argument	parent		4956910	0					
ANR	4956928	Identifier	parent		4956910	0					
ANR	4956929	Argument	& st_ref_memory		4956910	1					
ANR	4956930	UnaryOperationExpression	& st_ref_memory		4956910	0					
ANR	4956931	UnaryOperator	&		4956910	0					
ANR	4956932	Identifier	st_ref_memory		4956910	1					
ANR	4956933	Argument	& cp		4956910	2					
ANR	4956934	UnaryOperationExpression	& cp		4956910	0					
ANR	4956935	UnaryOperator	&		4956910	0					
ANR	4956936	Identifier	cp		4956910	1					
ANR	4956937	IfStatement	if ( iimem == 0 )		4956910	2					
ANR	4956938	Condition	iimem == 0	766:8:23446:23455	4956910	0	True				
ANR	4956939	EqualityExpression	iimem == 0		4956910	0		==			
ANR	4956940	Identifier	iimem		4956910	0					
ANR	4956941	PrimaryExpression	0		4956910	1					
ANR	4956942	ReturnStatement	return 0 ;	767:8:23466:23474	4956910	1	True				
ANR	4956943	PrimaryExpression	0		4956910	0					
ANR	4956944	ExpressionStatement	iimem -> stable_memory = ( gs_memory_t * ) iimem	768:4:23480:23523	4956910	3	True				
ANR	4956945	AssignmentExpression	iimem -> stable_memory = ( gs_memory_t * ) iimem		4956910	0		=			
ANR	4956946	PtrMemberAccess	iimem -> stable_memory		4956910	0					
ANR	4956947	Identifier	iimem		4956910	0					
ANR	4956948	Identifier	stable_memory		4956910	1					
ANR	4956949	CastExpression	( gs_memory_t * ) iimem		4956910	1					
ANR	4956950	CastTarget	gs_memory_t *		4956910	0					
ANR	4956951	Identifier	iimem		4956910	1					
ANR	4956952	ExpressionStatement	iimem -> procs = gs_ref_memory_procs	769:4:23529:23563	4956910	4	True				
ANR	4956953	AssignmentExpression	iimem -> procs = gs_ref_memory_procs		4956910	0		=			
ANR	4956954	PtrMemberAccess	iimem -> procs		4956910	0					
ANR	4956955	Identifier	iimem		4956910	0					
ANR	4956956	Identifier	procs		4956910	1					
ANR	4956957	Identifier	gs_ref_memory_procs		4956910	1					
ANR	4956958	ExpressionStatement	iimem -> gs_lib_ctx = parent -> gs_lib_ctx	770:4:23569:23607	4956910	5	True				
ANR	4956959	AssignmentExpression	iimem -> gs_lib_ctx = parent -> gs_lib_ctx		4956910	0		=			
ANR	4956960	PtrMemberAccess	iimem -> gs_lib_ctx		4956910	0					
ANR	4956961	Identifier	iimem		4956910	0					
ANR	4956962	Identifier	gs_lib_ctx		4956910	1					
ANR	4956963	PtrMemberAccess	parent -> gs_lib_ctx		4956910	1					
ANR	4956964	Identifier	parent		4956910	0					
ANR	4956965	Identifier	gs_lib_ctx		4956910	1					
ANR	4956966	ExpressionStatement	iimem -> non_gc_memory = parent	771:4:23613:23642	4956910	6	True				
ANR	4956967	AssignmentExpression	iimem -> non_gc_memory = parent		4956910	0		=			
ANR	4956968	PtrMemberAccess	iimem -> non_gc_memory		4956910	0					
ANR	4956969	Identifier	iimem		4956910	0					
ANR	4956970	Identifier	non_gc_memory		4956910	1					
ANR	4956971	Identifier	parent		4956910	1					
ANR	4956972	ExpressionStatement	iimem -> thread_safe_memory = parent -> thread_safe_memory	772:4:23648:23702	4956910	7	True				
ANR	4956973	AssignmentExpression	iimem -> thread_safe_memory = parent -> thread_safe_memory		4956910	0		=			
ANR	4956974	PtrMemberAccess	iimem -> thread_safe_memory		4956910	0					
ANR	4956975	Identifier	iimem		4956910	0					
ANR	4956976	Identifier	thread_safe_memory		4956910	1					
ANR	4956977	PtrMemberAccess	parent -> thread_safe_memory		4956910	1					
ANR	4956978	Identifier	parent		4956910	0					
ANR	4956979	Identifier	thread_safe_memory		4956910	1					
ANR	4956980	ExpressionStatement	iimem -> clump_size = clump_size	773:4:23708:23738	4956910	8	True				
ANR	4956981	AssignmentExpression	iimem -> clump_size = clump_size		4956910	0		=			
ANR	4956982	PtrMemberAccess	iimem -> clump_size		4956910	0					
ANR	4956983	Identifier	iimem		4956910	0					
ANR	4956984	Identifier	clump_size		4956910	1					
ANR	4956985	Identifier	clump_size		4956910	1					
ANR	4956986	ExpressionStatement	iimem -> large_size = 1	775:4:23810:23831	4956910	9	True				
ANR	4956987	AssignmentExpression	iimem -> large_size = 1		4956910	0		=			
ANR	4956988	PtrMemberAccess	iimem -> large_size		4956910	0					
ANR	4956989	Identifier	iimem		4956910	0					
ANR	4956990	Identifier	large_size		4956910	1					
ANR	4956991	PrimaryExpression	1		4956910	1					
ANR	4956992	ExpressionStatement	iimem -> is_controlled = false	779:4:23915:23943	4956910	10	True				
ANR	4956993	AssignmentExpression	iimem -> is_controlled = false		4956910	0		=			
ANR	4956994	PtrMemberAccess	iimem -> is_controlled		4956910	0					
ANR	4956995	Identifier	iimem		4956910	0					
ANR	4956996	Identifier	is_controlled		4956910	1					
ANR	4956997	Identifier	false		4956910	1					
ANR	4956998	ExpressionStatement	iimem -> gc_status . vm_threshold = clump_size * 3L	780:4:23949:23996	4956910	11	True				
ANR	4956999	AssignmentExpression	iimem -> gc_status . vm_threshold = clump_size * 3L		4956910	0		=			
ANR	4957000	MemberAccess	iimem -> gc_status . vm_threshold		4956910	0					
ANR	4957001	PtrMemberAccess	iimem -> gc_status		4956910	0					
ANR	4957002	Identifier	iimem		4956910	0					
ANR	4957003	Identifier	gc_status		4956910	1					
ANR	4957004	Identifier	vm_threshold		4956910	1					
ANR	4957005	MultiplicativeExpression	clump_size * 3L		4956910	1		*			
ANR	4957006	Identifier	clump_size		4956910	0					
ANR	4957007	PrimaryExpression	3L		4956910	1					
ANR	4957008	ExpressionStatement	iimem -> gc_status . max_vm = max_long	781:4:24002:24036	4956910	12	True				
ANR	4957009	AssignmentExpression	iimem -> gc_status . max_vm = max_long		4956910	0		=			
ANR	4957010	MemberAccess	iimem -> gc_status . max_vm		4956910	0					
ANR	4957011	PtrMemberAccess	iimem -> gc_status		4956910	0					
ANR	4957012	Identifier	iimem		4956910	0					
ANR	4957013	Identifier	gc_status		4956910	1					
ANR	4957014	Identifier	max_vm		4956910	1					
ANR	4957015	Identifier	max_long		4956910	1					
ANR	4957016	ExpressionStatement	iimem -> gc_status . signal_value = 0	782:4:24042:24075	4956910	13	True				
ANR	4957017	AssignmentExpression	iimem -> gc_status . signal_value = 0		4956910	0		=			
ANR	4957018	MemberAccess	iimem -> gc_status . signal_value		4956910	0					
ANR	4957019	PtrMemberAccess	iimem -> gc_status		4956910	0					
ANR	4957020	Identifier	iimem		4956910	0					
ANR	4957021	Identifier	gc_status		4956910	1					
ANR	4957022	Identifier	signal_value		4956910	1					
ANR	4957023	PrimaryExpression	0		4956910	1					
ANR	4957024	ExpressionStatement	iimem -> gc_status . enabled = false	783:4:24081:24113	4956910	14	True				
ANR	4957025	AssignmentExpression	iimem -> gc_status . enabled = false		4956910	0		=			
ANR	4957026	MemberAccess	iimem -> gc_status . enabled		4956910	0					
ANR	4957027	PtrMemberAccess	iimem -> gc_status		4956910	0					
ANR	4957028	Identifier	iimem		4956910	0					
ANR	4957029	Identifier	gc_status		4956910	1					
ANR	4957030	Identifier	enabled		4956910	1					
ANR	4957031	Identifier	false		4956910	1					
ANR	4957032	ExpressionStatement	iimem -> gc_status . requested = 0	784:4:24119:24149	4956910	15	True				
ANR	4957033	AssignmentExpression	iimem -> gc_status . requested = 0		4956910	0		=			
ANR	4957034	MemberAccess	iimem -> gc_status . requested		4956910	0					
ANR	4957035	PtrMemberAccess	iimem -> gc_status		4956910	0					
ANR	4957036	Identifier	iimem		4956910	0					
ANR	4957037	Identifier	gc_status		4956910	1					
ANR	4957038	Identifier	requested		4956910	1					
ANR	4957039	PrimaryExpression	0		4956910	1					
ANR	4957040	ExpressionStatement	iimem -> gc_allocated = 0	785:4:24155:24178	4956910	16	True				
ANR	4957041	AssignmentExpression	iimem -> gc_allocated = 0		4956910	0		=			
ANR	4957042	PtrMemberAccess	iimem -> gc_allocated		4956910	0					
ANR	4957043	Identifier	iimem		4956910	0					
ANR	4957044	Identifier	gc_allocated		4956910	1					
ANR	4957045	PrimaryExpression	0		4956910	1					
ANR	4957046	ExpressionStatement	iimem -> previous_status . allocated = 0	786:4:24184:24220	4956910	17	True				
ANR	4957047	AssignmentExpression	iimem -> previous_status . allocated = 0		4956910	0		=			
ANR	4957048	MemberAccess	iimem -> previous_status . allocated		4956910	0					
ANR	4957049	PtrMemberAccess	iimem -> previous_status		4956910	0					
ANR	4957050	Identifier	iimem		4956910	0					
ANR	4957051	Identifier	previous_status		4956910	1					
ANR	4957052	Identifier	allocated		4956910	1					
ANR	4957053	PrimaryExpression	0		4956910	1					
ANR	4957054	ExpressionStatement	iimem -> previous_status . used = 0	787:4:24226:24257	4956910	18	True				
ANR	4957055	AssignmentExpression	iimem -> previous_status . used = 0		4956910	0		=			
ANR	4957056	MemberAccess	iimem -> previous_status . used		4956910	0					
ANR	4957057	PtrMemberAccess	iimem -> previous_status		4956910	0					
ANR	4957058	Identifier	iimem		4956910	0					
ANR	4957059	Identifier	previous_status		4956910	1					
ANR	4957060	Identifier	used		4956910	1					
ANR	4957061	PrimaryExpression	0		4956910	1					
ANR	4957062	ExpressionStatement	ialloc_reset ( iimem )	788:4:24263:24282	4956910	19	True				
ANR	4957063	CallExpression	ialloc_reset ( iimem )		4956910	0					
ANR	4957064	Callee	ialloc_reset		4956910	0					
ANR	4957065	Identifier	ialloc_reset		4956910	0					
ANR	4957066	ArgumentList	iimem		4956910	1					
ANR	4957067	Argument	iimem		4956910	0					
ANR	4957068	Identifier	iimem		4956910	0					
ANR	4957069	ExpressionStatement	iimem -> root = cp	789:4:24288:24304	4956910	20	True				
ANR	4957070	AssignmentExpression	iimem -> root = cp		4956910	0		=			
ANR	4957071	PtrMemberAccess	iimem -> root		4956910	0					
ANR	4957072	Identifier	iimem		4956910	0					
ANR	4957073	Identifier	root		4956910	1					
ANR	4957074	Identifier	cp		4956910	1					
ANR	4957075	ExpressionStatement	ialloc_set_limit ( iimem )	790:4:24310:24333	4956910	21	True				
ANR	4957076	CallExpression	ialloc_set_limit ( iimem )		4956910	0					
ANR	4957077	Callee	ialloc_set_limit		4956910	0					
ANR	4957078	Identifier	ialloc_set_limit		4956910	0					
ANR	4957079	ArgumentList	iimem		4956910	1					
ANR	4957080	Argument	iimem		4956910	0					
ANR	4957081	Identifier	iimem		4956910	0					
ANR	4957082	ExpressionStatement	iimem -> cc = NULL	791:4:24339:24355	4956910	22	True				
ANR	4957083	AssignmentExpression	iimem -> cc = NULL		4956910	0		=			
ANR	4957084	PtrMemberAccess	iimem -> cc		4956910	0					
ANR	4957085	Identifier	iimem		4956910	0					
ANR	4957086	Identifier	cc		4956910	1					
ANR	4957087	Identifier	NULL		4956910	1					
ANR	4957088	ExpressionStatement	iimem -> save_level = 0	792:4:24361:24382	4956910	23	True				
ANR	4957089	AssignmentExpression	iimem -> save_level = 0		4956910	0		=			
ANR	4957090	PtrMemberAccess	iimem -> save_level		4956910	0					
ANR	4957091	Identifier	iimem		4956910	0					
ANR	4957092	Identifier	save_level		4956910	1					
ANR	4957093	PrimaryExpression	0		4956910	1					
ANR	4957094	ExpressionStatement	iimem -> new_mask = 0	793:4:24388:24407	4956910	24	True				
ANR	4957095	AssignmentExpression	iimem -> new_mask = 0		4956910	0		=			
ANR	4957096	PtrMemberAccess	iimem -> new_mask		4956910	0					
ANR	4957097	Identifier	iimem		4956910	0					
ANR	4957098	Identifier	new_mask		4956910	1					
ANR	4957099	PrimaryExpression	0		4956910	1					
ANR	4957100	ExpressionStatement	iimem -> test_mask = ~0	794:4:24413:24434	4956910	25	True				
ANR	4957101	AssignmentExpression	iimem -> test_mask = ~0		4956910	0		=			
ANR	4957102	PtrMemberAccess	iimem -> test_mask		4956910	0					
ANR	4957103	Identifier	iimem		4956910	0					
ANR	4957104	Identifier	test_mask		4956910	1					
ANR	4957105	Identifier	~0		4956910	1					
ANR	4957106	ExpressionStatement	iimem -> streams = 0	795:4:24440:24458	4956910	26	True				
ANR	4957107	AssignmentExpression	iimem -> streams = 0		4956910	0		=			
ANR	4957108	PtrMemberAccess	iimem -> streams		4956910	0					
ANR	4957109	Identifier	iimem		4956910	0					
ANR	4957110	Identifier	streams		4956910	1					
ANR	4957111	PrimaryExpression	0		4956910	1					
ANR	4957112	ExpressionStatement	iimem -> names_array = 0	796:4:24464:24486	4956910	27	True				
ANR	4957113	AssignmentExpression	iimem -> names_array = 0		4956910	0		=			
ANR	4957114	PtrMemberAccess	iimem -> names_array		4956910	0					
ANR	4957115	Identifier	iimem		4956910	0					
ANR	4957116	Identifier	names_array		4956910	1					
ANR	4957117	PrimaryExpression	0		4956910	1					
ANR	4957118	ExpressionStatement	iimem -> roots = 0	797:4:24492:24508	4956910	28	True				
ANR	4957119	AssignmentExpression	iimem -> roots = 0		4956910	0		=			
ANR	4957120	PtrMemberAccess	iimem -> roots		4956910	0					
ANR	4957121	Identifier	iimem		4956910	0					
ANR	4957122	Identifier	roots		4956910	1					
ANR	4957123	PrimaryExpression	0		4956910	1					
ANR	4957124	ExpressionStatement	iimem -> num_contexts = 0	798:4:24514:24537	4956910	29	True				
ANR	4957125	AssignmentExpression	iimem -> num_contexts = 0		4956910	0		=			
ANR	4957126	PtrMemberAccess	iimem -> num_contexts		4956910	0					
ANR	4957127	Identifier	iimem		4956910	0					
ANR	4957128	Identifier	num_contexts		4956910	1					
ANR	4957129	PrimaryExpression	0		4956910	1					
ANR	4957130	ExpressionStatement	iimem -> saved = 0	799:4:24543:24559	4956910	30	True				
ANR	4957131	AssignmentExpression	iimem -> saved = 0		4956910	0		=			
ANR	4957132	PtrMemberAccess	iimem -> saved		4956910	0					
ANR	4957133	Identifier	iimem		4956910	0					
ANR	4957134	Identifier	saved		4956910	1					
ANR	4957135	PrimaryExpression	0		4956910	1					
ANR	4957136	ReturnStatement	return iimem ;	800:4:24565:24577	4956910	31	True				
ANR	4957137	Identifier	iimem		4956910	0					
ANR	4957138	ReturnType	gs_ref_memory_t *		4956910	1					
ANR	4957139	Identifier	ialloc_alloc_state		4956910	2					
ANR	4957140	ParameterList	"gs_memory_t * parent , uint clump_size"		4956910	3					
ANR	4957141	Parameter	gs_memory_t * parent	761:19:23308:23327	4956910	0	True				
ANR	4957142	ParameterType	gs_memory_t *		4956910	0					
ANR	4957143	Identifier	parent		4956910	1					
ANR	4957144	Parameter	uint clump_size	761:41:23330:23344	4956910	1	True				
ANR	4957145	ParameterType	uint		4956910	0					
ANR	4957146	Identifier	clump_size		4956910	1					
ANR	4957147	CFGEntryNode	ENTRY		4956910		True				
ANR	4957148	CFGExitNode	EXIT		4956910		True				
ANR	4957149	Symbol	parent		4956910						
ANR	4957150	Symbol	iimem -> procs		4956910						
ANR	4957151	Symbol	* parent		4956910						
ANR	4957152	Symbol	iimem -> new_mask		4956910						
ANR	4957153	Symbol	iimem -> num_contexts		4956910						
ANR	4957154	Symbol	iimem		4956910						
ANR	4957155	Symbol	iimem -> gc_status . max_vm		4956910						
ANR	4957156	Symbol	iimem -> save_level		4956910						
ANR	4957157	Symbol	iimem -> thread_safe_memory		4956910						
ANR	4957158	Symbol	iimem -> non_gc_memory		4956910						
ANR	4957159	Symbol	iimem -> large_size		4956910						
ANR	4957160	Symbol	iimem -> previous_status . allocated		4956910						
ANR	4957161	Symbol	iimem -> cc		4956910						
ANR	4957162	Symbol	ialloc_solo		4956910						
ANR	4957163	Symbol	NULL		4956910						
ANR	4957164	Symbol	iimem -> gs_lib_ctx		4956910						
ANR	4957165	Symbol	* iimem		4956910						
ANR	4957166	Symbol	iimem -> is_controlled		4956910						
ANR	4957167	Symbol	false		4956910						
ANR	4957168	Symbol	iimem -> gc_status . vm_threshold		4956910						
ANR	4957169	Symbol	cp		4956910						
ANR	4957170	Symbol	iimem -> streams		4956910						
ANR	4957171	Symbol	iimem -> gc_status . requested		4956910						
ANR	4957172	Symbol	iimem -> gc_status . signal_value		4956910						
ANR	4957173	Symbol	iimem -> gc_status . enabled		4956910						
ANR	4957174	Symbol	iimem -> previous_status . used		4956910						
ANR	4957175	Symbol	iimem -> clump_size		4956910						
ANR	4957176	Symbol	iimem -> previous_status		4956910						
ANR	4957177	Symbol	~0		4956910						
ANR	4957178	Symbol	& st_ref_memory		4956910						
ANR	4957179	Symbol	clump_size		4956910						
ANR	4957180	Symbol	iimem -> gc_status		4956910						
ANR	4957181	Symbol	& cp		4956910						
ANR	4957182	Symbol	parent -> thread_safe_memory		4956910						
ANR	4957183	Symbol	iimem -> stable_memory		4956910						
ANR	4957184	Symbol	gs_ref_memory_procs		4956910						
ANR	4957185	Symbol	max_long		4956910						
ANR	4957186	Symbol	iimem -> saved		4956910						
ANR	4957187	Symbol	parent -> gs_lib_ctx		4956910						
ANR	4957188	Symbol	iimem -> test_mask		4956910						
ANR	4957189	Symbol	iimem -> gc_allocated		4956910						
ANR	4957190	Symbol	iimem -> root		4956910						
ANR	4957191	Symbol	iimem -> names_array		4956910						
ANR	4957192	Symbol	iimem -> roots		4956910						
ANR	4957193	Function	ialloc_solo	804:0:24633:25946							
ANR	4957194	FunctionDef	"ialloc_solo (gs_memory_t * parent , gs_memory_type_ptr_t pstype , clump_t * * pcp)"		4957193	0					
ANR	4957195	CompoundStatement		807:0:24738:25946	4957193	0					
ANR	4957196	IdentifierDeclStatement	"clump_t * cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" ) ;"	812:4:24959:25089	4957193	0	True				
ANR	4957197	IdentifierDecl	"* cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" )"		4957193	0					
ANR	4957198	IdentifierDeclType	clump_t *		4957193	0					
ANR	4957199	Identifier	cp		4957193	1					
ANR	4957200	AssignmentExpression	"* cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" )"		4957193	2		=			
ANR	4957201	Identifier	cp		4957193	0					
ANR	4957202	CallExpression	"gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" )"		4957193	1					
ANR	4957203	Callee	gs_raw_alloc_struct_immovable		4957193	0					
ANR	4957204	Identifier	gs_raw_alloc_struct_immovable		4957193	0					
ANR	4957205	ArgumentList	parent		4957193	1					
ANR	4957206	Argument	parent		4957193	0					
ANR	4957207	Identifier	parent		4957193	0					
ANR	4957208	Argument	& st_clump		4957193	1					
ANR	4957209	UnaryOperationExpression	& st_clump		4957193	0					
ANR	4957210	UnaryOperator	&		4957193	0					
ANR	4957211	Identifier	st_clump		4957193	1					
ANR	4957212	Argument	"""ialloc_solo(clump)"""		4957193	2					
ANR	4957213	PrimaryExpression	"""ialloc_solo(clump)"""		4957193	0					
ANR	4957214	IdentifierDeclStatement	"uint csize = ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod ) ;"	815:4:25095:25234	4957193	1	True				
ANR	4957215	IdentifierDecl	"csize = ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod )"		4957193	0					
ANR	4957216	IdentifierDeclType	uint		4957193	0					
ANR	4957217	Identifier	csize		4957193	1					
ANR	4957218	AssignmentExpression	"csize = ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod )"		4957193	2		=			
ANR	4957219	Identifier	csize		4957193	0					
ANR	4957220	CallExpression	"ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod )"		4957193	1					
ANR	4957221	Callee	ROUND_UP		4957193	0					
ANR	4957222	Identifier	ROUND_UP		4957193	0					
ANR	4957223	ArgumentList	sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize		4957193	1					
ANR	4957224	Argument	sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize		4957193	0					
ANR	4957225	AdditiveExpression	sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize		4957193	0		+			
ANR	4957226	SizeofExpression	sizeof ( clump_head_t )		4957193	0					
ANR	4957227	Sizeof	sizeof		4957193	0					
ANR	4957228	SizeofOperand	clump_head_t		4957193	1					
ANR	4957229	AdditiveExpression	sizeof ( obj_header_t ) + pstype -> ssize		4957193	1		+			
ANR	4957230	SizeofExpression	sizeof ( obj_header_t )		4957193	0					
ANR	4957231	Sizeof	sizeof		4957193	0					
ANR	4957232	SizeofOperand	obj_header_t		4957193	1					
ANR	4957233	PtrMemberAccess	pstype -> ssize		4957193	1					
ANR	4957234	Identifier	pstype		4957193	0					
ANR	4957235	Identifier	ssize		4957193	1					
ANR	4957236	Argument	obj_align_mod		4957193	1					
ANR	4957237	Identifier	obj_align_mod		4957193	0					
ANR	4957238	IdentifierDeclStatement	"byte * cdata = gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" ) ;"	819:4:25240:25308	4957193	2	True				
ANR	4957239	IdentifierDecl	"* cdata = gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" )"		4957193	0					
ANR	4957240	IdentifierDeclType	byte *		4957193	0					
ANR	4957241	Identifier	cdata		4957193	1					
ANR	4957242	AssignmentExpression	"* cdata = gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" )"		4957193	2		=			
ANR	4957243	Identifier	cdata		4957193	0					
ANR	4957244	CallExpression	"gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" )"		4957193	1					
ANR	4957245	Callee	gs_alloc_bytes_immovable		4957193	0					
ANR	4957246	Identifier	gs_alloc_bytes_immovable		4957193	0					
ANR	4957247	ArgumentList	parent		4957193	1					
ANR	4957248	Argument	parent		4957193	0					
ANR	4957249	Identifier	parent		4957193	0					
ANR	4957250	Argument	csize		4957193	1					
ANR	4957251	Identifier	csize		4957193	0					
ANR	4957252	Argument	"""ialloc_solo"""		4957193	2					
ANR	4957253	PrimaryExpression	"""ialloc_solo"""		4957193	0					
ANR	4957254	IdentifierDeclStatement	obj_header_t * obj = ( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) ) ;	820:4:25314:25381	4957193	3	True				
ANR	4957255	IdentifierDecl	* obj = ( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) )		4957193	0					
ANR	4957256	IdentifierDeclType	obj_header_t *		4957193	0					
ANR	4957257	Identifier	obj		4957193	1					
ANR	4957258	AssignmentExpression	* obj = ( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) )		4957193	2		=			
ANR	4957259	Identifier	obj		4957193	0					
ANR	4957260	CastExpression	( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) )		4957193	1					
ANR	4957261	CastTarget	obj_header_t *		4957193	0					
ANR	4957262	AdditiveExpression	cdata + sizeof ( clump_head_t )		4957193	1		+			
ANR	4957263	Identifier	cdata		4957193	0					
ANR	4957264	SizeofExpression	sizeof ( clump_head_t )		4957193	1					
ANR	4957265	Sizeof	sizeof		4957193	0					
ANR	4957266	SizeofOperand	clump_head_t		4957193	1					
ANR	4957267	IfStatement	if ( cp == 0 || cdata == 0 )		4957193	4					
ANR	4957268	Condition	cp == 0 || cdata == 0	822:8:25392:25412	4957193	0	True				
ANR	4957269	OrExpression	cp == 0 || cdata == 0		4957193	0		||			
ANR	4957270	EqualityExpression	cp == 0		4957193	0		==			
ANR	4957271	Identifier	cp		4957193	0					
ANR	4957272	PrimaryExpression	0		4957193	1					
ANR	4957273	EqualityExpression	cdata == 0		4957193	1		==			
ANR	4957274	Identifier	cdata		4957193	0					
ANR	4957275	PrimaryExpression	0		4957193	1					
ANR	4957276	CompoundStatement		16:31:676:676	4957193	1					
ANR	4957277	ExpressionStatement	"gs_free_object ( parent , cp , ""ialloc_solo(allocation failure)"" )"	823:8:25425:25486	4957193	0	True				
ANR	4957278	CallExpression	"gs_free_object ( parent , cp , ""ialloc_solo(allocation failure)"" )"		4957193	0					
ANR	4957279	Callee	gs_free_object		4957193	0					
ANR	4957280	Identifier	gs_free_object		4957193	0					
ANR	4957281	ArgumentList	parent		4957193	1					
ANR	4957282	Argument	parent		4957193	0					
ANR	4957283	Identifier	parent		4957193	0					
ANR	4957284	Argument	cp		4957193	1					
ANR	4957285	Identifier	cp		4957193	0					
ANR	4957286	Argument	"""ialloc_solo(allocation failure)"""		4957193	2					
ANR	4957287	PrimaryExpression	"""ialloc_solo(allocation failure)"""		4957193	0					
ANR	4957288	ExpressionStatement	"gs_free_object ( parent , cdata , ""ialloc_solo(allocation failure)"" )"	824:8:25496:25560	4957193	1	True				
ANR	4957289	CallExpression	"gs_free_object ( parent , cdata , ""ialloc_solo(allocation failure)"" )"		4957193	0					
ANR	4957290	Callee	gs_free_object		4957193	0					
ANR	4957291	Identifier	gs_free_object		4957193	0					
ANR	4957292	ArgumentList	parent		4957193	1					
ANR	4957293	Argument	parent		4957193	0					
ANR	4957294	Identifier	parent		4957193	0					
ANR	4957295	Argument	cdata		4957193	1					
ANR	4957296	Identifier	cdata		4957193	0					
ANR	4957297	Argument	"""ialloc_solo(allocation failure)"""		4957193	2					
ANR	4957298	PrimaryExpression	"""ialloc_solo(allocation failure)"""		4957193	0					
ANR	4957299	ReturnStatement	return 0 ;	825:8:25570:25578	4957193	2	True				
ANR	4957300	PrimaryExpression	0		4957193	0					
ANR	4957301	ExpressionStatement	"alloc_init_clump ( cp , cdata , cdata + csize , false , ( clump_t * ) NULL )"	827:4:25590:25657	4957193	5	True				
ANR	4957302	CallExpression	"alloc_init_clump ( cp , cdata , cdata + csize , false , ( clump_t * ) NULL )"		4957193	0					
ANR	4957303	Callee	alloc_init_clump		4957193	0					
ANR	4957304	Identifier	alloc_init_clump		4957193	0					
ANR	4957305	ArgumentList	cp		4957193	1					
ANR	4957306	Argument	cp		4957193	0					
ANR	4957307	Identifier	cp		4957193	0					
ANR	4957308	Argument	cdata		4957193	1					
ANR	4957309	Identifier	cdata		4957193	0					
ANR	4957310	Argument	cdata + csize		4957193	2					
ANR	4957311	AdditiveExpression	cdata + csize		4957193	0		+			
ANR	4957312	Identifier	cdata		4957193	0					
ANR	4957313	Identifier	csize		4957193	1					
ANR	4957314	Argument	false		4957193	3					
ANR	4957315	Identifier	false		4957193	0					
ANR	4957316	Argument	( clump_t * ) NULL		4957193	4					
ANR	4957317	CastExpression	( clump_t * ) NULL		4957193	0					
ANR	4957318	CastTarget	clump_t *		4957193	0					
ANR	4957319	Identifier	NULL		4957193	1					
ANR	4957320	ExpressionStatement	cp -> cbot = cp -> ctop	828:4:25663:25682	4957193	6	True				
ANR	4957321	AssignmentExpression	cp -> cbot = cp -> ctop		4957193	0		=			
ANR	4957322	PtrMemberAccess	cp -> cbot		4957193	0					
ANR	4957323	Identifier	cp		4957193	0					
ANR	4957324	Identifier	cbot		4957193	1					
ANR	4957325	PtrMemberAccess	cp -> ctop		4957193	1					
ANR	4957326	Identifier	cp		4957193	0					
ANR	4957327	Identifier	ctop		4957193	1					
ANR	4957328	ExpressionStatement	cp -> parent = cp -> left = cp -> right = 0	829:4:25688:25725	4957193	7	True				
ANR	4957329	AssignmentExpression	cp -> parent = cp -> left = cp -> right = 0		4957193	0		=			
ANR	4957330	PtrMemberAccess	cp -> parent		4957193	0					
ANR	4957331	Identifier	cp		4957193	0					
ANR	4957332	Identifier	parent		4957193	1					
ANR	4957333	AssignmentExpression	cp -> left = cp -> right = 0		4957193	1		=			
ANR	4957334	PtrMemberAccess	cp -> left		4957193	0					
ANR	4957335	Identifier	cp		4957193	0					
ANR	4957336	Identifier	left		4957193	1					
ANR	4957337	AssignmentExpression	cp -> right = 0		4957193	1		=			
ANR	4957338	PtrMemberAccess	cp -> right		4957193	0					
ANR	4957339	Identifier	cp		4957193	0					
ANR	4957340	Identifier	right		4957193	1					
ANR	4957341	PrimaryExpression	0		4957193	1					
ANR	4957342	ExpressionStatement	cp -> c_alone = true	830:4:25731:25749	4957193	8	True				
ANR	4957343	AssignmentExpression	cp -> c_alone = true		4957193	0		=			
ANR	4957344	PtrMemberAccess	cp -> c_alone		4957193	0					
ANR	4957345	Identifier	cp		4957193	0					
ANR	4957346	Identifier	c_alone		4957193	1					
ANR	4957347	Identifier	true		4957193	1					
ANR	4957348	ExpressionStatement	obj -> o_pad = 0	832:4:25804:25818	4957193	9	True				
ANR	4957349	AssignmentExpression	obj -> o_pad = 0		4957193	0		=			
ANR	4957350	PtrMemberAccess	obj -> o_pad		4957193	0					
ANR	4957351	Identifier	obj		4957193	0					
ANR	4957352	Identifier	o_pad		4957193	1					
ANR	4957353	PrimaryExpression	0		4957193	1					
ANR	4957354	ExpressionStatement	obj -> o_alone = 1	833:4:25824:25840	4957193	10	True				
ANR	4957355	AssignmentExpression	obj -> o_alone = 1		4957193	0		=			
ANR	4957356	PtrMemberAccess	obj -> o_alone		4957193	0					
ANR	4957357	Identifier	obj		4957193	0					
ANR	4957358	Identifier	o_alone		4957193	1					
ANR	4957359	PrimaryExpression	1		4957193	1					
ANR	4957360	ExpressionStatement	obj -> o_size = pstype -> ssize	834:4:25846:25873	4957193	11	True				
ANR	4957361	AssignmentExpression	obj -> o_size = pstype -> ssize		4957193	0		=			
ANR	4957362	PtrMemberAccess	obj -> o_size		4957193	0					
ANR	4957363	Identifier	obj		4957193	0					
ANR	4957364	Identifier	o_size		4957193	1					
ANR	4957365	PtrMemberAccess	pstype -> ssize		4957193	1					
ANR	4957366	Identifier	pstype		4957193	0					
ANR	4957367	Identifier	ssize		4957193	1					
ANR	4957368	ExpressionStatement	obj -> o_type = pstype	835:4:25879:25899	4957193	12	True				
ANR	4957369	AssignmentExpression	obj -> o_type = pstype		4957193	0		=			
ANR	4957370	PtrMemberAccess	obj -> o_type		4957193	0					
ANR	4957371	Identifier	obj		4957193	0					
ANR	4957372	Identifier	o_type		4957193	1					
ANR	4957373	Identifier	pstype		4957193	1					
ANR	4957374	ExpressionStatement	* pcp = cp	836:4:25905:25914	4957193	13	True				
ANR	4957375	AssignmentExpression	* pcp = cp		4957193	0		=			
ANR	4957376	UnaryOperationExpression	* pcp		4957193	0					
ANR	4957377	UnaryOperator	*		4957193	0					
ANR	4957378	Identifier	pcp		4957193	1					
ANR	4957379	Identifier	cp		4957193	1					
ANR	4957380	ReturnStatement	return ( void * ) ( obj + 1 ) ;	837:4:25920:25944	4957193	14	True				
ANR	4957381	CastExpression	( void * ) ( obj + 1 )		4957193	0					
ANR	4957382	CastTarget	void *		4957193	0					
ANR	4957383	AdditiveExpression	obj + 1		4957193	1		+			
ANR	4957384	Identifier	obj		4957193	0					
ANR	4957385	PrimaryExpression	1		4957193	1					
ANR	4957386	ReturnType	static void *		4957193	1					
ANR	4957387	Identifier	ialloc_solo		4957193	2					
ANR	4957388	ParameterList	"gs_memory_t * parent , gs_memory_type_ptr_t pstype , clump_t * * pcp"		4957193	3					
ANR	4957389	Parameter	gs_memory_t * parent	805:12:24659:24678	4957193	0	True				
ANR	4957390	ParameterType	gs_memory_t *		4957193	0					
ANR	4957391	Identifier	parent		4957193	1					
ANR	4957392	Parameter	gs_memory_type_ptr_t pstype	805:34:24681:24707	4957193	1	True				
ANR	4957393	ParameterType	gs_memory_type_ptr_t		4957193	0					
ANR	4957394	Identifier	pstype		4957193	1					
ANR	4957395	Parameter	clump_t * * pcp	806:12:24722:24735	4957193	2	True				
ANR	4957396	ParameterType	clump_t * *		4957193	0					
ANR	4957397	Identifier	pcp		4957193	1					
ANR	4957398	CFGEntryNode	ENTRY		4957193		True				
ANR	4957399	CFGExitNode	EXIT		4957193		True				
ANR	4957400	Symbol	pstype -> ssize		4957193						
ANR	4957401	Symbol	parent		4957193						
ANR	4957402	Symbol	* pcp		4957193						
ANR	4957403	Symbol	cp -> right		4957193						
ANR	4957404	Symbol	csize		4957193						
ANR	4957405	Symbol	* pstype		4957193						
ANR	4957406	Symbol	cp -> cbot		4957193						
ANR	4957407	Symbol	pstype		4957193						
ANR	4957408	Symbol	gs_alloc_bytes_immovable		4957193						
ANR	4957409	Symbol	cp -> left		4957193						
ANR	4957410	Symbol	obj -> o_size		4957193						
ANR	4957411	Symbol	obj -> o_type		4957193						
ANR	4957412	Symbol	obj -> o_pad		4957193						
ANR	4957413	Symbol	& st_clump		4957193						
ANR	4957414	Symbol	pcp		4957193						
ANR	4957415	Symbol	obj_align_mod		4957193						
ANR	4957416	Symbol	cp -> ctop		4957193						
ANR	4957417	Symbol	* obj		4957193						
ANR	4957418	Symbol	NULL		4957193						
ANR	4957419	Symbol	ROUND_UP		4957193						
ANR	4957420	Symbol	false		4957193						
ANR	4957421	Symbol	cp -> c_alone		4957193						
ANR	4957422	Symbol	cp		4957193						
ANR	4957423	Symbol	cdata		4957193						
ANR	4957424	Symbol	* cp		4957193						
ANR	4957425	Symbol	gs_raw_alloc_struct_immovable		4957193						
ANR	4957426	Symbol	cp -> parent		4957193						
ANR	4957427	Symbol	obj		4957193						
ANR	4957428	Symbol	obj -> o_alone		4957193						
ANR	4957429	Symbol	true		4957193						
ANR	4957430	Function	ialloc_free_state	840:0:25949:26301							
ANR	4957431	FunctionDef	ialloc_free_state (gs_ref_memory_t * iimem)		4957430	0					
ANR	4957432	CompoundStatement		842:0:25996:26301	4957430	0					
ANR	4957433	IdentifierDeclStatement	clump_t * cp ;	843:4:26002:26013	4957430	0	True				
ANR	4957434	IdentifierDecl	* cp		4957430	0					
ANR	4957435	IdentifierDeclType	clump_t *		4957430	0					
ANR	4957436	Identifier	cp		4957430	1					
ANR	4957437	IdentifierDeclStatement	gs_memory_t * mem ;	844:4:26019:26035	4957430	1	True				
ANR	4957438	IdentifierDecl	* mem		4957430	0					
ANR	4957439	IdentifierDeclType	gs_memory_t *		4957430	0					
ANR	4957440	Identifier	mem		4957430	1					
ANR	4957441	IfStatement	if ( iimem == NULL )		4957430	2					
ANR	4957442	Condition	iimem == NULL	845:8:26045:26057	4957430	0	True				
ANR	4957443	EqualityExpression	iimem == NULL		4957430	0		==			
ANR	4957444	Identifier	iimem		4957430	0					
ANR	4957445	Identifier	NULL		4957430	1					
ANR	4957446	ReturnStatement	return ;	846:8:26068:26074	4957430	1	True				
ANR	4957447	ExpressionStatement	cp = iimem -> root	847:4:26080:26096	4957430	3	True				
ANR	4957448	AssignmentExpression	cp = iimem -> root		4957430	0		=			
ANR	4957449	Identifier	cp		4957430	0					
ANR	4957450	PtrMemberAccess	iimem -> root		4957430	1					
ANR	4957451	Identifier	iimem		4957430	0					
ANR	4957452	Identifier	root		4957430	1					
ANR	4957453	ExpressionStatement	mem = iimem -> non_gc_memory	848:4:26102:26128	4957430	4	True				
ANR	4957454	AssignmentExpression	mem = iimem -> non_gc_memory		4957430	0		=			
ANR	4957455	Identifier	mem		4957430	0					
ANR	4957456	PtrMemberAccess	iimem -> non_gc_memory		4957430	1					
ANR	4957457	Identifier	iimem		4957430	0					
ANR	4957458	Identifier	non_gc_memory		4957430	1					
ANR	4957459	IfStatement	if ( cp == NULL )		4957430	5					
ANR	4957460	Condition	cp == NULL	849:8:26138:26147	4957430	0	True				
ANR	4957461	EqualityExpression	cp == NULL		4957430	0		==			
ANR	4957462	Identifier	cp		4957430	0					
ANR	4957463	Identifier	NULL		4957430	1					
ANR	4957464	ReturnStatement	return ;	850:8:26158:26164	4957430	1	True				
ANR	4957465	ExpressionStatement	"gs_free_object ( mem , cp -> chead , ""ialloc_solo(allocation failure)"" )"	851:4:26170:26235	4957430	6	True				
ANR	4957466	CallExpression	"gs_free_object ( mem , cp -> chead , ""ialloc_solo(allocation failure)"" )"		4957430	0					
ANR	4957467	Callee	gs_free_object		4957430	0					
ANR	4957468	Identifier	gs_free_object		4957430	0					
ANR	4957469	ArgumentList	mem		4957430	1					
ANR	4957470	Argument	mem		4957430	0					
ANR	4957471	Identifier	mem		4957430	0					
ANR	4957472	Argument	cp -> chead		4957430	1					
ANR	4957473	PtrMemberAccess	cp -> chead		4957430	0					
ANR	4957474	Identifier	cp		4957430	0					
ANR	4957475	Identifier	chead		4957430	1					
ANR	4957476	Argument	"""ialloc_solo(allocation failure)"""		4957430	2					
ANR	4957477	PrimaryExpression	"""ialloc_solo(allocation failure)"""		4957430	0					
ANR	4957478	ExpressionStatement	"gs_free_object ( mem , cp , ""ialloc_solo(allocation failure)"" )"	852:4:26241:26299	4957430	7	True				
ANR	4957479	CallExpression	"gs_free_object ( mem , cp , ""ialloc_solo(allocation failure)"" )"		4957430	0					
ANR	4957480	Callee	gs_free_object		4957430	0					
ANR	4957481	Identifier	gs_free_object		4957430	0					
ANR	4957482	ArgumentList	mem		4957430	1					
ANR	4957483	Argument	mem		4957430	0					
ANR	4957484	Identifier	mem		4957430	0					
ANR	4957485	Argument	cp		4957430	1					
ANR	4957486	Identifier	cp		4957430	0					
ANR	4957487	Argument	"""ialloc_solo(allocation failure)"""		4957430	2					
ANR	4957488	PrimaryExpression	"""ialloc_solo(allocation failure)"""		4957430	0					
ANR	4957489	ReturnType	void		4957430	1					
ANR	4957490	Identifier	ialloc_free_state		4957430	2					
ANR	4957491	ParameterList	gs_ref_memory_t * iimem		4957430	3					
ANR	4957492	Parameter	gs_ref_memory_t * iimem	841:18:25972:25993	4957430	0	True				
ANR	4957493	ParameterType	gs_ref_memory_t *		4957430	0					
ANR	4957494	Identifier	iimem		4957430	1					
ANR	4957495	CFGEntryNode	ENTRY		4957430		True				
ANR	4957496	CFGExitNode	EXIT		4957430		True				
ANR	4957497	Symbol	* cp		4957430						
ANR	4957498	Symbol	cp -> chead		4957430						
ANR	4957499	Symbol	NULL		4957430						
ANR	4957500	Symbol	mem		4957430						
ANR	4957501	Symbol	iimem -> non_gc_memory		4957430						
ANR	4957502	Symbol	* iimem		4957430						
ANR	4957503	Symbol	iimem		4957430						
ANR	4957504	Symbol	iimem -> root		4957430						
ANR	4957505	Symbol	cp		4957430						
ANR	4957506	Function	ialloc_add_clump	860:0:26511:27648							
ANR	4957507	FunctionDef	"ialloc_add_clump (gs_ref_memory_t * imem , ulong space , client_name_t cname)"		4957506	0					
ANR	4957508	CompoundStatement		862:0:26589:27648	4957506	0					
ANR	4957509	IdentifierDeclStatement	clump_t * cp ;	863:4:26595:26606	4957506	0	True				
ANR	4957510	IdentifierDecl	* cp		4957506	0					
ANR	4957511	IdentifierDeclType	clump_t *		4957506	0					
ANR	4957512	Identifier	cp		4957506	1					
ANR	4957513	ExpressionStatement	imem -> is_controlled = false	866:4:26656:26683	4957506	1	True				
ANR	4957514	AssignmentExpression	imem -> is_controlled = false		4957506	0		=			
ANR	4957515	PtrMemberAccess	imem -> is_controlled		4957506	0					
ANR	4957516	Identifier	imem		4957506	0					
ANR	4957517	Identifier	is_controlled		4957506	1					
ANR	4957518	Identifier	false		4957506	1					
ANR	4957519	ExpressionStatement	imem -> large_size = imem -> clump_size	867:4:26689:26724	4957506	2	True				
ANR	4957520	AssignmentExpression	imem -> large_size = imem -> clump_size		4957506	0		=			
ANR	4957521	PtrMemberAccess	imem -> large_size		4957506	0					
ANR	4957522	Identifier	imem		4957506	0					
ANR	4957523	Identifier	large_size		4957506	1					
ANR	4957524	PtrMemberAccess	imem -> clump_size		4957506	1					
ANR	4957525	Identifier	imem		4957506	0					
ANR	4957526	Identifier	clump_size		4957506	1					
ANR	4957527	ExpressionStatement	imem -> limit = max_long	868:4:26730:26752	4957506	3	True				
ANR	4957528	AssignmentExpression	imem -> limit = max_long		4957506	0		=			
ANR	4957529	PtrMemberAccess	imem -> limit		4957506	0					
ANR	4957530	Identifier	imem		4957506	0					
ANR	4957531	Identifier	limit		4957506	1					
ANR	4957532	Identifier	max_long		4957506	1					
ANR	4957533	ExpressionStatement	imem -> gc_status . max_vm = max_long	869:4:26758:26791	4957506	4	True				
ANR	4957534	AssignmentExpression	imem -> gc_status . max_vm = max_long		4957506	0		=			
ANR	4957535	MemberAccess	imem -> gc_status . max_vm		4957506	0					
ANR	4957536	PtrMemberAccess	imem -> gc_status		4957506	0					
ANR	4957537	Identifier	imem		4957506	0					
ANR	4957538	Identifier	gc_status		4957506	1					
ANR	4957539	Identifier	max_vm		4957506	1					
ANR	4957540	Identifier	max_long		4957506	1					
ANR	4957541	ExpressionStatement	"cp = alloc_add_clump ( imem , space , cname )"	872:4:26827:26867	4957506	5	True				
ANR	4957542	AssignmentExpression	"cp = alloc_add_clump ( imem , space , cname )"		4957506	0		=			
ANR	4957543	Identifier	cp		4957506	0					
ANR	4957544	CallExpression	"alloc_add_clump ( imem , space , cname )"		4957506	1					
ANR	4957545	Callee	alloc_add_clump		4957506	0					
ANR	4957546	Identifier	alloc_add_clump		4957506	0					
ANR	4957547	ArgumentList	imem		4957506	1					
ANR	4957548	Argument	imem		4957506	0					
ANR	4957549	Identifier	imem		4957506	0					
ANR	4957550	Argument	space		4957506	1					
ANR	4957551	Identifier	space		4957506	0					
ANR	4957552	Argument	cname		4957506	2					
ANR	4957553	Identifier	cname		4957506	0					
ANR	4957554	ExpressionStatement	imem -> procs . alloc_bytes_immovable = imem -> procs . alloc_bytes	880:4:27137:27196	4957506	6	True				
ANR	4957555	AssignmentExpression	imem -> procs . alloc_bytes_immovable = imem -> procs . alloc_bytes		4957506	0		=			
ANR	4957556	MemberAccess	imem -> procs . alloc_bytes_immovable		4957506	0					
ANR	4957557	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957558	Identifier	imem		4957506	0					
ANR	4957559	Identifier	procs		4957506	1					
ANR	4957560	Identifier	alloc_bytes_immovable		4957506	1					
ANR	4957561	MemberAccess	imem -> procs . alloc_bytes		4957506	1					
ANR	4957562	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957563	Identifier	imem		4957506	0					
ANR	4957564	Identifier	procs		4957506	1					
ANR	4957565	Identifier	alloc_bytes		4957506	1					
ANR	4957566	ExpressionStatement	imem -> procs . alloc_struct_immovable = imem -> procs . alloc_struct	881:4:27202:27263	4957506	7	True				
ANR	4957567	AssignmentExpression	imem -> procs . alloc_struct_immovable = imem -> procs . alloc_struct		4957506	0		=			
ANR	4957568	MemberAccess	imem -> procs . alloc_struct_immovable		4957506	0					
ANR	4957569	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957570	Identifier	imem		4957506	0					
ANR	4957571	Identifier	procs		4957506	1					
ANR	4957572	Identifier	alloc_struct_immovable		4957506	1					
ANR	4957573	MemberAccess	imem -> procs . alloc_struct		4957506	1					
ANR	4957574	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957575	Identifier	imem		4957506	0					
ANR	4957576	Identifier	procs		4957506	1					
ANR	4957577	Identifier	alloc_struct		4957506	1					
ANR	4957578	ExpressionStatement	imem -> procs . alloc_byte_array_immovable = imem -> procs . alloc_byte_array	882:4:27269:27338	4957506	8	True				
ANR	4957579	AssignmentExpression	imem -> procs . alloc_byte_array_immovable = imem -> procs . alloc_byte_array		4957506	0		=			
ANR	4957580	MemberAccess	imem -> procs . alloc_byte_array_immovable		4957506	0					
ANR	4957581	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957582	Identifier	imem		4957506	0					
ANR	4957583	Identifier	procs		4957506	1					
ANR	4957584	Identifier	alloc_byte_array_immovable		4957506	1					
ANR	4957585	MemberAccess	imem -> procs . alloc_byte_array		4957506	1					
ANR	4957586	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957587	Identifier	imem		4957506	0					
ANR	4957588	Identifier	procs		4957506	1					
ANR	4957589	Identifier	alloc_byte_array		4957506	1					
ANR	4957590	ExpressionStatement	imem -> procs . alloc_struct_array_immovable = imem -> procs . alloc_struct_array	883:4:27344:27417	4957506	9	True				
ANR	4957591	AssignmentExpression	imem -> procs . alloc_struct_array_immovable = imem -> procs . alloc_struct_array		4957506	0		=			
ANR	4957592	MemberAccess	imem -> procs . alloc_struct_array_immovable		4957506	0					
ANR	4957593	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957594	Identifier	imem		4957506	0					
ANR	4957595	Identifier	procs		4957506	1					
ANR	4957596	Identifier	alloc_struct_array_immovable		4957506	1					
ANR	4957597	MemberAccess	imem -> procs . alloc_struct_array		4957506	1					
ANR	4957598	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957599	Identifier	imem		4957506	0					
ANR	4957600	Identifier	procs		4957506	1					
ANR	4957601	Identifier	alloc_struct_array		4957506	1					
ANR	4957602	ExpressionStatement	imem -> procs . alloc_string_immovable = imem -> procs . alloc_string	884:4:27423:27484	4957506	10	True				
ANR	4957603	AssignmentExpression	imem -> procs . alloc_string_immovable = imem -> procs . alloc_string		4957506	0		=			
ANR	4957604	MemberAccess	imem -> procs . alloc_string_immovable		4957506	0					
ANR	4957605	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957606	Identifier	imem		4957506	0					
ANR	4957607	Identifier	procs		4957506	1					
ANR	4957608	Identifier	alloc_string_immovable		4957506	1					
ANR	4957609	MemberAccess	imem -> procs . alloc_string		4957506	1					
ANR	4957610	PtrMemberAccess	imem -> procs		4957506	0					
ANR	4957611	Identifier	imem		4957506	0					
ANR	4957612	Identifier	procs		4957506	1					
ANR	4957613	Identifier	alloc_string		4957506	1					
ANR	4957614	ExpressionStatement	imem -> is_controlled = true	887:4:27543:27569	4957506	11	True				
ANR	4957615	AssignmentExpression	imem -> is_controlled = true		4957506	0		=			
ANR	4957616	PtrMemberAccess	imem -> is_controlled		4957506	0					
ANR	4957617	Identifier	imem		4957506	0					
ANR	4957618	Identifier	is_controlled		4957506	1					
ANR	4957619	Identifier	true		4957506	1					
ANR	4957620	ExpressionStatement	imem -> limit = 0	888:4:27575:27590	4957506	12	True				
ANR	4957621	AssignmentExpression	imem -> limit = 0		4957506	0		=			
ANR	4957622	PtrMemberAccess	imem -> limit		4957506	0					
ANR	4957623	Identifier	imem		4957506	0					
ANR	4957624	Identifier	limit		4957506	1					
ANR	4957625	PrimaryExpression	0		4957506	1					
ANR	4957626	ReturnStatement	return ( cp ? 0 : gs_note_error ( gs_error_VMerror ) ) ;	890:4:27597:27646	4957506	13	True				
ANR	4957627	ConditionalExpression	cp ? 0 : gs_note_error ( gs_error_VMerror )		4957506	0					
ANR	4957628	Condition	cp		4957506	0					
ANR	4957629	Identifier	cp		4957506	0					
ANR	4957630	PrimaryExpression	0		4957506	1					
ANR	4957631	CallExpression	gs_note_error ( gs_error_VMerror )		4957506	2					
ANR	4957632	Callee	gs_note_error		4957506	0					
ANR	4957633	Identifier	gs_note_error		4957506	0					
ANR	4957634	ArgumentList	gs_error_VMerror		4957506	1					
ANR	4957635	Argument	gs_error_VMerror		4957506	0					
ANR	4957636	Identifier	gs_error_VMerror		4957506	0					
ANR	4957637	ReturnType	int		4957506	1					
ANR	4957638	Identifier	ialloc_add_clump		4957506	2					
ANR	4957639	ParameterList	"gs_ref_memory_t * imem , ulong space , client_name_t cname"		4957506	3					
ANR	4957640	Parameter	gs_ref_memory_t * imem	861:17:26532:26552	4957506	0	True				
ANR	4957641	ParameterType	gs_ref_memory_t *		4957506	0					
ANR	4957642	Identifier	imem		4957506	1					
ANR	4957643	Parameter	ulong space	861:40:26555:26565	4957506	1	True				
ANR	4957644	ParameterType	ulong		4957506	0					
ANR	4957645	Identifier	space		4957506	1					
ANR	4957646	Parameter	client_name_t cname	861:53:26568:26586	4957506	2	True				
ANR	4957647	ParameterType	client_name_t		4957506	0					
ANR	4957648	Identifier	cname		4957506	1					
ANR	4957649	CFGEntryNode	ENTRY		4957506		True				
ANR	4957650	CFGExitNode	EXIT		4957506		True				
ANR	4957651	Symbol	imem -> procs		4957506						
ANR	4957652	Symbol	cname		4957506						
ANR	4957653	Symbol	imem -> procs . alloc_struct_array_immovable		4957506						
ANR	4957654	Symbol	imem -> procs . alloc_byte_array		4957506						
ANR	4957655	Symbol	space		4957506						
ANR	4957656	Symbol	imem -> gc_status		4957506						
ANR	4957657	Symbol	imem -> large_size		4957506						
ANR	4957658	Symbol	* imem		4957506						
ANR	4957659	Symbol	imem -> procs . alloc_string_immovable		4957506						
ANR	4957660	Symbol	imem -> procs . alloc_struct_array		4957506						
ANR	4957661	Symbol	imem -> limit		4957506						
ANR	4957662	Symbol	imem -> procs . alloc_bytes_immovable		4957506						
ANR	4957663	Symbol	imem -> procs . alloc_byte_array_immovable		4957506						
ANR	4957664	Symbol	false		4957506						
ANR	4957665	Symbol	imem -> clump_size		4957506						
ANR	4957666	Symbol	cp		4957506						
ANR	4957667	Symbol	alloc_add_clump		4957506						
ANR	4957668	Symbol	imem -> procs . alloc_bytes		4957506						
ANR	4957669	Symbol	gs_error_VMerror		4957506						
ANR	4957670	Symbol	gs_note_error		4957506						
ANR	4957671	Symbol	imem -> procs . alloc_struct_immovable		4957506						
ANR	4957672	Symbol	imem -> gc_status . max_vm		4957506						
ANR	4957673	Symbol	imem -> is_controlled		4957506						
ANR	4957674	Symbol	max_long		4957506						
ANR	4957675	Symbol	true		4957506						
ANR	4957676	Symbol	imem -> procs . alloc_struct		4957506						
ANR	4957677	Symbol	imem		4957506						
ANR	4957678	Symbol	imem -> procs . alloc_string		4957506						
ANR	4957679	Function	ialloc_gc_prepare	895:0:27750:28080							
ANR	4957680	FunctionDef	ialloc_gc_prepare (gs_ref_memory_t * mem)		4957679	0					
ANR	4957681	CompoundStatement		897:0:27796:28080	4957679	0					
ANR	4957682	WhileStatement	while ( mem -> streams != 0 )		4957679	0					
ANR	4957683	Condition	mem -> streams != 0	901:11:27955:27971	4957679	0	True				
ANR	4957684	EqualityExpression	mem -> streams != 0		4957679	0		!=			
ANR	4957685	PtrMemberAccess	mem -> streams		4957679	0					
ANR	4957686	Identifier	mem		4957679	0					
ANR	4957687	Identifier	streams		4957679	1					
ANR	4957688	PrimaryExpression	0		4957679	1					
ANR	4957689	CompoundStatement		6:8:187:211	4957679	1					
ANR	4957690	IdentifierDeclStatement	stream * s = mem -> streams ;	902:8:27984:28008	4957679	0	True				
ANR	4957691	IdentifierDecl	* s = mem -> streams		4957679	0					
ANR	4957692	IdentifierDeclType	stream *		4957679	0					
ANR	4957693	Identifier	s		4957679	1					
ANR	4957694	AssignmentExpression	* s = mem -> streams		4957679	2		=			
ANR	4957695	Identifier	s		4957679	0					
ANR	4957696	PtrMemberAccess	mem -> streams		4957679	1					
ANR	4957697	Identifier	mem		4957679	0					
ANR	4957698	Identifier	streams		4957679	1					
ANR	4957699	ExpressionStatement	mem -> streams = s -> next	904:8:28019:28041	4957679	1	True				
ANR	4957700	AssignmentExpression	mem -> streams = s -> next		4957679	0		=			
ANR	4957701	PtrMemberAccess	mem -> streams		4957679	0					
ANR	4957702	Identifier	mem		4957679	0					
ANR	4957703	Identifier	streams		4957679	1					
ANR	4957704	PtrMemberAccess	s -> next		4957679	1					
ANR	4957705	Identifier	s		4957679	0					
ANR	4957706	Identifier	next		4957679	1					
ANR	4957707	ExpressionStatement	s -> prev = s -> next = 0	905:8:28051:28072	4957679	2	True				
ANR	4957708	AssignmentExpression	s -> prev = s -> next = 0		4957679	0		=			
ANR	4957709	PtrMemberAccess	s -> prev		4957679	0					
ANR	4957710	Identifier	s		4957679	0					
ANR	4957711	Identifier	prev		4957679	1					
ANR	4957712	AssignmentExpression	s -> next = 0		4957679	1		=			
ANR	4957713	PtrMemberAccess	s -> next		4957679	0					
ANR	4957714	Identifier	s		4957679	0					
ANR	4957715	Identifier	next		4957679	1					
ANR	4957716	PrimaryExpression	0		4957679	1					
ANR	4957717	ReturnType	void		4957679	1					
ANR	4957718	Identifier	ialloc_gc_prepare		4957679	2					
ANR	4957719	ParameterList	gs_ref_memory_t * mem		4957679	3					
ANR	4957720	Parameter	gs_ref_memory_t * mem	896:18:27773:27793	4957679	0	True				
ANR	4957721	ParameterType	gs_ref_memory_t *		4957679	0					
ANR	4957722	Identifier	mem		4957679	1					
ANR	4957723	CFGEntryNode	ENTRY		4957679		True				
ANR	4957724	CFGExitNode	EXIT		4957679		True				
ANR	4957725	Symbol	s		4957679						
ANR	4957726	Symbol	mem		4957679						
ANR	4957727	Symbol	s -> prev		4957679						
ANR	4957728	Symbol	s -> next		4957679						
ANR	4957729	Symbol	* s		4957679						
ANR	4957730	Symbol	mem -> streams		4957679						
ANR	4957731	Symbol	* mem		4957679						
ANR	4957732	Function	ialloc_reset	910:0:28114:28368							
ANR	4957733	FunctionDef	ialloc_reset (gs_ref_memory_t * mem)		4957732	0					
ANR	4957734	CompoundStatement		912:0:28155:28368	4957732	0					
ANR	4957735	ExpressionStatement	mem -> root = 0	913:4:28161:28174	4957732	0	True				
ANR	4957736	AssignmentExpression	mem -> root = 0		4957732	0		=			
ANR	4957737	PtrMemberAccess	mem -> root		4957732	0					
ANR	4957738	Identifier	mem		4957732	0					
ANR	4957739	Identifier	root		4957732	1					
ANR	4957740	PrimaryExpression	0		4957732	1					
ANR	4957741	ExpressionStatement	mem -> cc = NULL	914:4:28180:28194	4957732	1	True				
ANR	4957742	AssignmentExpression	mem -> cc = NULL		4957732	0		=			
ANR	4957743	PtrMemberAccess	mem -> cc		4957732	0					
ANR	4957744	Identifier	mem		4957732	0					
ANR	4957745	Identifier	cc		4957732	1					
ANR	4957746	Identifier	NULL		4957732	1					
ANR	4957747	ExpressionStatement	mem -> allocated = 0	915:4:28200:28218	4957732	2	True				
ANR	4957748	AssignmentExpression	mem -> allocated = 0		4957732	0		=			
ANR	4957749	PtrMemberAccess	mem -> allocated		4957732	0					
ANR	4957750	Identifier	mem		4957732	0					
ANR	4957751	Identifier	allocated		4957732	1					
ANR	4957752	PrimaryExpression	0		4957732	1					
ANR	4957753	ExpressionStatement	mem -> changes = 0	916:4:28224:28240	4957732	3	True				
ANR	4957754	AssignmentExpression	mem -> changes = 0		4957732	0		=			
ANR	4957755	PtrMemberAccess	mem -> changes		4957732	0					
ANR	4957756	Identifier	mem		4957732	0					
ANR	4957757	Identifier	changes		4957732	1					
ANR	4957758	PrimaryExpression	0		4957732	1					
ANR	4957759	ExpressionStatement	mem -> scan_limit = 0	917:4:28246:28265	4957732	4	True				
ANR	4957760	AssignmentExpression	mem -> scan_limit = 0		4957732	0		=			
ANR	4957761	PtrMemberAccess	mem -> scan_limit		4957732	0					
ANR	4957762	Identifier	mem		4957732	0					
ANR	4957763	Identifier	scan_limit		4957732	1					
ANR	4957764	PrimaryExpression	0		4957732	1					
ANR	4957765	ExpressionStatement	mem -> total_scanned = 0	918:4:28271:28293	4957732	5	True				
ANR	4957766	AssignmentExpression	mem -> total_scanned = 0		4957732	0		=			
ANR	4957767	PtrMemberAccess	mem -> total_scanned		4957732	0					
ANR	4957768	Identifier	mem		4957732	0					
ANR	4957769	Identifier	total_scanned		4957732	1					
ANR	4957770	PrimaryExpression	0		4957732	1					
ANR	4957771	ExpressionStatement	mem -> total_scanned_after_compacting = 0	919:4:28299:28338	4957732	6	True				
ANR	4957772	AssignmentExpression	mem -> total_scanned_after_compacting = 0		4957732	0		=			
ANR	4957773	PtrMemberAccess	mem -> total_scanned_after_compacting		4957732	0					
ANR	4957774	Identifier	mem		4957732	0					
ANR	4957775	Identifier	total_scanned_after_compacting		4957732	1					
ANR	4957776	PrimaryExpression	0		4957732	1					
ANR	4957777	ExpressionStatement	ialloc_reset_free ( mem )	920:4:28344:28366	4957732	7	True				
ANR	4957778	CallExpression	ialloc_reset_free ( mem )		4957732	0					
ANR	4957779	Callee	ialloc_reset_free		4957732	0					
ANR	4957780	Identifier	ialloc_reset_free		4957732	0					
ANR	4957781	ArgumentList	mem		4957732	1					
ANR	4957782	Argument	mem		4957732	0					
ANR	4957783	Identifier	mem		4957732	0					
ANR	4957784	ReturnType	void		4957732	1					
ANR	4957785	Identifier	ialloc_reset		4957732	2					
ANR	4957786	ParameterList	gs_ref_memory_t * mem		4957732	3					
ANR	4957787	Parameter	gs_ref_memory_t * mem	911:13:28132:28152	4957732	0	True				
ANR	4957788	ParameterType	gs_ref_memory_t *		4957732	0					
ANR	4957789	Identifier	mem		4957732	1					
ANR	4957790	CFGEntryNode	ENTRY		4957732		True				
ANR	4957791	CFGExitNode	EXIT		4957732		True				
ANR	4957792	Symbol	mem -> scan_limit		4957732						
ANR	4957793	Symbol	mem -> total_scanned_after_compacting		4957732						
ANR	4957794	Symbol	NULL		4957732						
ANR	4957795	Symbol	mem -> allocated		4957732						
ANR	4957796	Symbol	mem		4957732						
ANR	4957797	Symbol	mem -> cc		4957732						
ANR	4957798	Symbol	mem -> root		4957732						
ANR	4957799	Symbol	mem -> changes		4957732						
ANR	4957800	Symbol	mem -> total_scanned		4957732						
ANR	4957801	Symbol	* mem		4957732						
ANR	4957802	Function	ialloc_reset_free	924:0:28408:28709							
ANR	4957803	FunctionDef	ialloc_reset_free (gs_ref_memory_t * mem)		4957802	0					
ANR	4957804	CompoundStatement		926:0:28454:28709	4957802	0					
ANR	4957805	IdentifierDeclStatement	int i ;	927:4:28460:28465	4957802	0	True				
ANR	4957806	IdentifierDecl	i		4957802	0					
ANR	4957807	IdentifierDeclType	int		4957802	0					
ANR	4957808	Identifier	i		4957802	1					
ANR	4957809	IdentifierDeclStatement	obj_header_t * * p ;	928:4:28471:28487	4957802	1	True				
ANR	4957810	IdentifierDecl	* * p		4957802	0					
ANR	4957811	IdentifierDeclType	obj_header_t * *		4957802	0					
ANR	4957812	Identifier	p		4957802	1					
ANR	4957813	ExpressionStatement	mem -> lost . objects = 0	930:4:28494:28515	4957802	2	True				
ANR	4957814	AssignmentExpression	mem -> lost . objects = 0		4957802	0		=			
ANR	4957815	MemberAccess	mem -> lost . objects		4957802	0					
ANR	4957816	PtrMemberAccess	mem -> lost		4957802	0					
ANR	4957817	Identifier	mem		4957802	0					
ANR	4957818	Identifier	lost		4957802	1					
ANR	4957819	Identifier	objects		4957802	1					
ANR	4957820	PrimaryExpression	0		4957802	1					
ANR	4957821	ExpressionStatement	mem -> lost . refs = 0	931:4:28521:28539	4957802	3	True				
ANR	4957822	AssignmentExpression	mem -> lost . refs = 0		4957802	0		=			
ANR	4957823	MemberAccess	mem -> lost . refs		4957802	0					
ANR	4957824	PtrMemberAccess	mem -> lost		4957802	0					
ANR	4957825	Identifier	mem		4957802	0					
ANR	4957826	Identifier	lost		4957802	1					
ANR	4957827	Identifier	refs		4957802	1					
ANR	4957828	PrimaryExpression	0		4957802	1					
ANR	4957829	ExpressionStatement	mem -> lost . strings = 0	932:4:28545:28566	4957802	4	True				
ANR	4957830	AssignmentExpression	mem -> lost . strings = 0		4957802	0		=			
ANR	4957831	MemberAccess	mem -> lost . strings		4957802	0					
ANR	4957832	PtrMemberAccess	mem -> lost		4957802	0					
ANR	4957833	Identifier	mem		4957802	0					
ANR	4957834	Identifier	lost		4957802	1					
ANR	4957835	Identifier	strings		4957802	1					
ANR	4957836	PrimaryExpression	0		4957802	1					
ANR	4957837	ExpressionStatement	mem -> cfreed . cp = 0	933:4:28572:28590	4957802	5	True				
ANR	4957838	AssignmentExpression	mem -> cfreed . cp = 0		4957802	0		=			
ANR	4957839	MemberAccess	mem -> cfreed . cp		4957802	0					
ANR	4957840	PtrMemberAccess	mem -> cfreed		4957802	0					
ANR	4957841	Identifier	mem		4957802	0					
ANR	4957842	Identifier	cfreed		4957802	1					
ANR	4957843	Identifier	cp		4957802	1					
ANR	4957844	PrimaryExpression	0		4957802	1					
ANR	4957845	ForStatement	"for ( i = 0 , p = & mem -> freelists [ 0 ] ; i < num_freelists ; i ++ , p ++ )"		4957802	6					
ANR	4957846	ForInit	"i = 0 , p = & mem -> freelists [ 0 ] ;"	934:9:28601:28630	4957802	0	True				
ANR	4957847	Expression	"i = 0 , p = & mem -> freelists [ 0 ]"		4957802	0					
ANR	4957848	AssignmentExpression	i = 0		4957802	0		=			
ANR	4957849	Identifier	i		4957802	0					
ANR	4957850	PrimaryExpression	0		4957802	1					
ANR	4957851	AssignmentExpression	p = & mem -> freelists [ 0 ]		4957802	1		=			
ANR	4957852	Identifier	p		4957802	0					
ANR	4957853	UnaryOperationExpression	& mem -> freelists [ 0 ]		4957802	1					
ANR	4957854	UnaryOperator	&		4957802	0					
ANR	4957855	ArrayIndexing	mem -> freelists [ 0 ]		4957802	1					
ANR	4957856	PtrMemberAccess	mem -> freelists		4957802	0					
ANR	4957857	Identifier	mem		4957802	0					
ANR	4957858	Identifier	freelists		4957802	1					
ANR	4957859	PrimaryExpression	0		4957802	1					
ANR	4957860	Condition	i < num_freelists	934:40:28632:28648	4957802	1	True				
ANR	4957861	RelationalExpression	i < num_freelists		4957802	0		<			
ANR	4957862	Identifier	i		4957802	0					
ANR	4957863	Identifier	num_freelists		4957802	1					
ANR	4957864	Expression	"i ++ , p ++"	934:59:28651:28658	4957802	2	True				
ANR	4957865	PostIncDecOperationExpression	i ++		4957802	0					
ANR	4957866	Identifier	i		4957802	0					
ANR	4957867	IncDec	++		4957802	1					
ANR	4957868	PostIncDecOperationExpression	p ++		4957802	1					
ANR	4957869	Identifier	p		4957802	0					
ANR	4957870	IncDec	++		4957802	1					
ANR	4957871	ExpressionStatement	* p = 0	935:8:28669:28675	4957802	3	True				
ANR	4957872	AssignmentExpression	* p = 0		4957802	0		=			
ANR	4957873	UnaryOperationExpression	* p		4957802	0					
ANR	4957874	UnaryOperator	*		4957802	0					
ANR	4957875	Identifier	p		4957802	1					
ANR	4957876	PrimaryExpression	0		4957802	1					
ANR	4957877	ExpressionStatement	mem -> largest_free_size = 0	936:4:28681:28707	4957802	7	True				
ANR	4957878	AssignmentExpression	mem -> largest_free_size = 0		4957802	0		=			
ANR	4957879	PtrMemberAccess	mem -> largest_free_size		4957802	0					
ANR	4957880	Identifier	mem		4957802	0					
ANR	4957881	Identifier	largest_free_size		4957802	1					
ANR	4957882	PrimaryExpression	0		4957802	1					
ANR	4957883	ReturnType	void		4957802	1					
ANR	4957884	Identifier	ialloc_reset_free		4957802	2					
ANR	4957885	ParameterList	gs_ref_memory_t * mem		4957802	3					
ANR	4957886	Parameter	gs_ref_memory_t * mem	925:18:28431:28451	4957802	0	True				
ANR	4957887	ParameterType	gs_ref_memory_t *		4957802	0					
ANR	4957888	Identifier	mem		4957802	1					
ANR	4957889	CFGEntryNode	ENTRY		4957802		True				
ANR	4957890	CFGExitNode	EXIT		4957802		True				
ANR	4957891	Symbol	mem -> lost . refs		4957802						
ANR	4957892	Symbol	mem -> freelists		4957802						
ANR	4957893	Symbol	i		4957802						
ANR	4957894	Symbol	num_freelists		4957802						
ANR	4957895	Symbol	mem -> largest_free_size		4957802						
ANR	4957896	Symbol	mem -> lost . objects		4957802						
ANR	4957897	Symbol	mem -> cfreed . cp		4957802						
ANR	4957898	Symbol	p		4957802						
ANR	4957899	Symbol	mem -> cfreed		4957802						
ANR	4957900	Symbol	mem		4957802						
ANR	4957901	Symbol	mem -> lost		4957802						
ANR	4957902	Symbol	* p		4957802						
ANR	4957903	Symbol	mem -> lost . strings		4957802						
ANR	4957904	Symbol	* mem		4957802						
ANR	4957905	Function	ialloc_set_limit	949:0:29104:30401							
ANR	4957906	FunctionDef	ialloc_set_limit (register gs_ref_memory_t * mem)		4957905	0					
ANR	4957907	CompoundStatement		951:0:29158:30401	4957905	0					
ANR	4957908	IdentifierDeclStatement	ulong max_allocated = ( mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0 ) ;	957:4:29421:29574	4957905	0	True				
ANR	4957909	IdentifierDecl	max_allocated = ( mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0 )		4957905	0					
ANR	4957910	IdentifierDeclType	ulong		4957905	0					
ANR	4957911	Identifier	max_allocated		4957905	1					
ANR	4957912	AssignmentExpression	max_allocated = ( mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0 )		4957905	2		=			
ANR	4957913	Identifier	max_allocated		4957905	0					
ANR	4957914	ConditionalExpression	mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0		4957905	1					
ANR	4957915	Condition	mem -> gc_status . max_vm > mem -> previous_status . allocated		4957905	0					
ANR	4957916	RelationalExpression	mem -> gc_status . max_vm > mem -> previous_status . allocated		4957905	0		>			
ANR	4957917	MemberAccess	mem -> gc_status . max_vm		4957905	0					
ANR	4957918	PtrMemberAccess	mem -> gc_status		4957905	0					
ANR	4957919	Identifier	mem		4957905	0					
ANR	4957920	Identifier	gc_status		4957905	1					
ANR	4957921	Identifier	max_vm		4957905	1					
ANR	4957922	MemberAccess	mem -> previous_status . allocated		4957905	1					
ANR	4957923	PtrMemberAccess	mem -> previous_status		4957905	0					
ANR	4957924	Identifier	mem		4957905	0					
ANR	4957925	Identifier	previous_status		4957905	1					
ANR	4957926	Identifier	allocated		4957905	1					
ANR	4957927	AdditiveExpression	mem -> gc_status . max_vm - mem -> previous_status . allocated		4957905	1		-			
ANR	4957928	MemberAccess	mem -> gc_status . max_vm		4957905	0					
ANR	4957929	PtrMemberAccess	mem -> gc_status		4957905	0					
ANR	4957930	Identifier	mem		4957905	0					
ANR	4957931	Identifier	gc_status		4957905	1					
ANR	4957932	Identifier	max_vm		4957905	1					
ANR	4957933	MemberAccess	mem -> previous_status . allocated		4957905	1					
ANR	4957934	PtrMemberAccess	mem -> previous_status		4957905	0					
ANR	4957935	Identifier	mem		4957905	0					
ANR	4957936	Identifier	previous_status		4957905	1					
ANR	4957937	Identifier	allocated		4957905	1					
ANR	4957938	PrimaryExpression	0		4957905	2					
ANR	4957939	IfStatement	if ( mem -> gc_status . enabled )		4957905	1					
ANR	4957940	Condition	mem -> gc_status . enabled	962:8:29585:29606	4957905	0	True				
ANR	4957941	MemberAccess	mem -> gc_status . enabled		4957905	0					
ANR	4957942	PtrMemberAccess	mem -> gc_status		4957905	0					
ANR	4957943	Identifier	mem		4957905	0					
ANR	4957944	Identifier	gc_status		4957905	1					
ANR	4957945	Identifier	enabled		4957905	1					
ANR	4957946	CompoundStatement		13:8:460:521	4957905	1					
ANR	4957947	IdentifierDeclStatement	ulong limit = mem -> gc_allocated + mem -> gc_status . vm_threshold ;	963:8:29619:29680	4957905	0	True				
ANR	4957948	IdentifierDecl	limit = mem -> gc_allocated + mem -> gc_status . vm_threshold		4957905	0					
ANR	4957949	IdentifierDeclType	ulong		4957905	0					
ANR	4957950	Identifier	limit		4957905	1					
ANR	4957951	AssignmentExpression	limit = mem -> gc_allocated + mem -> gc_status . vm_threshold		4957905	2		=			
ANR	4957952	Identifier	limit		4957905	0					
ANR	4957953	AdditiveExpression	mem -> gc_allocated + mem -> gc_status . vm_threshold		4957905	1		+			
ANR	4957954	PtrMemberAccess	mem -> gc_allocated		4957905	0					
ANR	4957955	Identifier	mem		4957905	0					
ANR	4957956	Identifier	gc_allocated		4957905	1					
ANR	4957957	MemberAccess	mem -> gc_status . vm_threshold		4957905	1					
ANR	4957958	PtrMemberAccess	mem -> gc_status		4957905	0					
ANR	4957959	Identifier	mem		4957905	0					
ANR	4957960	Identifier	gc_status		4957905	1					
ANR	4957961	Identifier	vm_threshold		4957905	1					
ANR	4957962	IfStatement	if ( limit < mem -> previous_status . allocated )		4957905	1					
ANR	4957963	Condition	limit < mem -> previous_status . allocated	965:12:29695:29732	4957905	0	True				
ANR	4957964	RelationalExpression	limit < mem -> previous_status . allocated		4957905	0		<			
ANR	4957965	Identifier	limit		4957905	0					
ANR	4957966	MemberAccess	mem -> previous_status . allocated		4957905	1					
ANR	4957967	PtrMemberAccess	mem -> previous_status		4957905	0					
ANR	4957968	Identifier	mem		4957905	0					
ANR	4957969	Identifier	previous_status		4957905	1					
ANR	4957970	Identifier	allocated		4957905	1					
ANR	4957971	ExpressionStatement	mem -> limit = 0	966:12:29747:29761	4957905	1	True				
ANR	4957972	AssignmentExpression	mem -> limit = 0		4957905	0		=			
ANR	4957973	PtrMemberAccess	mem -> limit		4957905	0					
ANR	4957974	Identifier	mem		4957905	0					
ANR	4957975	Identifier	limit		4957905	1					
ANR	4957976	PrimaryExpression	0		4957905	1					
ANR	4957977	ElseStatement	else		4957905	0					
ANR	4957978	CompoundStatement		17:13:617:617	4957905	0					
ANR	4957979	ExpressionStatement	limit -= mem -> previous_status . allocated	968:12:29790:29829	4957905	0	True				
ANR	4957980	AssignmentExpression	limit -= mem -> previous_status . allocated		4957905	0		-=			
ANR	4957981	Identifier	limit		4957905	0					
ANR	4957982	MemberAccess	mem -> previous_status . allocated		4957905	1					
ANR	4957983	PtrMemberAccess	mem -> previous_status		4957905	0					
ANR	4957984	Identifier	mem		4957905	0					
ANR	4957985	Identifier	previous_status		4957905	1					
ANR	4957986	Identifier	allocated		4957905	1					
ANR	4957987	ExpressionStatement	"mem -> limit = min ( limit , max_allocated )"	969:12:29843:29881	4957905	1	True				
ANR	4957988	AssignmentExpression	"mem -> limit = min ( limit , max_allocated )"		4957905	0		=			
ANR	4957989	PtrMemberAccess	mem -> limit		4957905	0					
ANR	4957990	Identifier	mem		4957905	0					
ANR	4957991	Identifier	limit		4957905	1					
ANR	4957992	CallExpression	"min ( limit , max_allocated )"		4957905	1					
ANR	4957993	Callee	min		4957905	0					
ANR	4957994	Identifier	min		4957905	0					
ANR	4957995	ArgumentList	limit		4957905	1					
ANR	4957996	Argument	limit		4957905	0					
ANR	4957997	Identifier	limit		4957905	0					
ANR	4957998	Argument	max_allocated		4957905	1					
ANR	4957999	Identifier	max_allocated		4957905	0					
ANR	4958000	ElseStatement	else		4957905	0					
ANR	4958001	ExpressionStatement	"mem -> limit = min ( max_allocated , mem -> gc_allocated + FORCE_GC_LIMIT )"	972:8:29912:29979	4957905	0	True				
ANR	4958002	AssignmentExpression	"mem -> limit = min ( max_allocated , mem -> gc_allocated + FORCE_GC_LIMIT )"		4957905	0		=			
ANR	4958003	PtrMemberAccess	mem -> limit		4957905	0					
ANR	4958004	Identifier	mem		4957905	0					
ANR	4958005	Identifier	limit		4957905	1					
ANR	4958006	CallExpression	"min ( max_allocated , mem -> gc_allocated + FORCE_GC_LIMIT )"		4957905	1					
ANR	4958007	Callee	min		4957905	0					
ANR	4958008	Identifier	min		4957905	0					
ANR	4958009	ArgumentList	max_allocated		4957905	1					
ANR	4958010	Argument	max_allocated		4957905	0					
ANR	4958011	Identifier	max_allocated		4957905	0					
ANR	4958012	Argument	mem -> gc_allocated + FORCE_GC_LIMIT		4957905	1					
ANR	4958013	AdditiveExpression	mem -> gc_allocated + FORCE_GC_LIMIT		4957905	0		+			
ANR	4958014	PtrMemberAccess	mem -> gc_allocated		4957905	0					
ANR	4958015	Identifier	mem		4957905	0					
ANR	4958016	Identifier	gc_allocated		4957905	1					
ANR	4958017	Identifier	FORCE_GC_LIMIT		4957905	1					
ANR	4958018	Statement	if_debug7m	973:4:29985:29994	4957905	2	True				
ANR	4958019	Statement	(	973:14:29995:29995	4957905	3	True				
ANR	4958020	Statement	'0'	973:15:29996:29998	4957905	4	True				
ANR	4958021	Statement	","	973:18:29999:29999	4957905	5	True				
ANR	4958022	Statement	(	973:20:30001:30001	4957905	6	True				
ANR	4958023	Statement	const	973:21:30002:30006	4957905	7	True				
ANR	4958024	Statement	gs_memory_t	973:27:30008:30018	4957905	8	True				
ANR	4958025	Statement	*	973:39:30020:30020	4957905	9	True				
ANR	4958026	Statement	)	973:40:30021:30021	4957905	10	True				
ANR	4958027	Statement	mem	973:41:30022:30024	4957905	11	True				
ANR	4958028	Statement	","	973:44:30025:30025	4957905	12	True				
ANR	4958029	Statement	"""[0]space=%d, max_vm=%ld, prev.alloc=%ld, enabled=%d, """	974:15:30042:30096	4957905	13	True				
ANR	4958030	Statement	"""gc_alloc=%ld, threshold=%ld => limit=%ld\\n"""	975:15:30113:30156	4957905	14	True				
ANR	4958031	Statement	","	975:59:30157:30157	4957905	15	True				
ANR	4958032	Statement	mem	976:15:30174:30176	4957905	16	True				
ANR	4958033	Statement	->	976:18:30177:30178	4957905	17	True				
ANR	4958034	Statement	space	976:20:30179:30183	4957905	18	True				
ANR	4958035	Statement	","	976:25:30184:30184	4957905	19	True				
ANR	4958036	Statement	(	976:27:30186:30186	4957905	20	True				
ANR	4958037	Statement	long	976:28:30187:30190	4957905	21	True				
ANR	4958038	Statement	)	976:32:30191:30191	4957905	22	True				
ANR	4958039	Statement	mem	976:33:30192:30194	4957905	23	True				
ANR	4958040	Statement	->	976:36:30195:30196	4957905	24	True				
ANR	4958041	Statement	gc_status	976:38:30197:30205	4957905	25	True				
ANR	4958042	Statement	.	976:47:30206:30206	4957905	26	True				
ANR	4958043	Statement	max_vm	976:48:30207:30212	4957905	27	True				
ANR	4958044	Statement	","	976:54:30213:30213	4957905	28	True				
ANR	4958045	Statement	(	977:15:30230:30230	4957905	29	True				
ANR	4958046	Statement	long	977:16:30231:30234	4957905	30	True				
ANR	4958047	Statement	)	977:20:30235:30235	4957905	31	True				
ANR	4958048	Statement	mem	977:21:30236:30238	4957905	32	True				
ANR	4958049	Statement	->	977:24:30239:30240	4957905	33	True				
ANR	4958050	Statement	previous_status	977:26:30241:30255	4957905	34	True				
ANR	4958051	Statement	.	977:41:30256:30256	4957905	35	True				
ANR	4958052	Statement	allocated	977:42:30257:30265	4957905	36	True				
ANR	4958053	Statement	","	977:51:30266:30266	4957905	37	True				
ANR	4958054	Statement	mem	978:15:30283:30285	4957905	38	True				
ANR	4958055	Statement	->	978:18:30286:30287	4957905	39	True				
ANR	4958056	Statement	gc_status	978:20:30288:30296	4957905	40	True				
ANR	4958057	Statement	.	978:29:30297:30297	4957905	41	True				
ANR	4958058	Statement	enabled	978:30:30298:30304	4957905	42	True				
ANR	4958059	Statement	","	978:37:30305:30305	4957905	43	True				
ANR	4958060	Statement	(	978:39:30307:30307	4957905	44	True				
ANR	4958061	Statement	long	978:40:30308:30311	4957905	45	True				
ANR	4958062	Statement	)	978:44:30312:30312	4957905	46	True				
ANR	4958063	Statement	mem	978:45:30313:30315	4957905	47	True				
ANR	4958064	Statement	->	978:48:30316:30317	4957905	48	True				
ANR	4958065	Statement	gc_allocated	978:50:30318:30329	4957905	49	True				
ANR	4958066	Statement	","	978:62:30330:30330	4957905	50	True				
ANR	4958067	Statement	(	979:15:30347:30347	4957905	51	True				
ANR	4958068	Statement	long	979:16:30348:30351	4957905	52	True				
ANR	4958069	Statement	)	979:20:30352:30352	4957905	53	True				
ANR	4958070	Statement	mem	979:21:30353:30355	4957905	54	True				
ANR	4958071	Statement	->	979:24:30356:30357	4957905	55	True				
ANR	4958072	Statement	gc_status	979:26:30358:30366	4957905	56	True				
ANR	4958073	Statement	.	979:35:30367:30367	4957905	57	True				
ANR	4958074	Statement	vm_threshold	979:36:30368:30379	4957905	58	True				
ANR	4958075	Statement	","	979:48:30380:30380	4957905	59	True				
ANR	4958076	Statement	(	979:50:30382:30382	4957905	60	True				
ANR	4958077	Statement	long	979:51:30383:30386	4957905	61	True				
ANR	4958078	Statement	)	979:55:30387:30387	4957905	62	True				
ANR	4958079	Statement	mem	979:56:30388:30390	4957905	63	True				
ANR	4958080	Statement	->	979:59:30391:30392	4957905	64	True				
ANR	4958081	Statement	limit	979:61:30393:30397	4957905	65	True				
ANR	4958082	Statement	)	979:66:30398:30398	4957905	66	True				
ANR	4958083	ExpressionStatement		979:67:30399:30399	4957905	67	True				
ANR	4958084	ReturnType	void		4957905	1					
ANR	4958085	Identifier	ialloc_set_limit		4957905	2					
ANR	4958086	ParameterList	register gs_ref_memory_t * mem		4957905	3					
ANR	4958087	Parameter	register gs_ref_memory_t * mem	950:17:29126:29155	4957905	0	True				
ANR	4958088	ParameterType	register gs_ref_memory_t *		4957905	0					
ANR	4958089	Identifier	mem		4957905	1					
ANR	4958090	CFGEntryNode	ENTRY		4957905		True				
ANR	4958091	CFGExitNode	EXIT		4957905		True				
ANR	4958092	Symbol	mem -> previous_status . allocated		4957905						
ANR	4958093	Symbol	FORCE_GC_LIMIT		4957905						
ANR	4958094	Symbol	mem -> gc_status . max_vm		4957905						
ANR	4958095	Symbol	max_allocated		4957905						
ANR	4958096	Symbol	mem -> gc_status . vm_threshold		4957905						
ANR	4958097	Symbol	mem -> limit		4957905						
ANR	4958098	Symbol	mem -> gc_status		4957905						
ANR	4958099	Symbol	min		4957905						
ANR	4958100	Symbol	mem		4957905						
ANR	4958101	Symbol	mem -> gc_status . enabled		4957905						
ANR	4958102	Symbol	limit		4957905						
ANR	4958103	Symbol	mem -> gc_allocated		4957905						
ANR	4958104	Symbol	mem -> previous_status		4957905						
ANR	4958105	Symbol	* mem		4957905						
ANR	4958106	ClassDef	free_data	982:0:30404:30482							
ANR	4958107	DeclStmt									
ANR	4958108	Decl							gs_ref_memory_t	gs_ref_memory_t *	imem
ANR	4958109	DeclStmt									
ANR	4958110	Decl							clump_t	clump_t *	allocator
ANR	4958111	Function	free_all_not_allocator	988:0:30486:30785							
ANR	4958112	FunctionDef	"free_all_not_allocator (clump_t * cp , void * arg)"		4958111	0					
ANR	4958113	CompoundStatement		990:0:30559:30785	4958111	0					
ANR	4958114	IdentifierDeclStatement	struct free_data * fd = ( struct free_data * ) arg ;	991:4:30565:30611	4958111	0	True				
ANR	4958115	IdentifierDecl	* fd = ( struct free_data * ) arg		4958111	0					
ANR	4958116	IdentifierDeclType	struct free_data *		4958111	0					
ANR	4958117	Identifier	fd		4958111	1					
ANR	4958118	AssignmentExpression	* fd = ( struct free_data * ) arg		4958111	2		=			
ANR	4958119	Identifier	fd		4958111	0					
ANR	4958120	CastExpression	( struct free_data * ) arg		4958111	1					
ANR	4958121	CastTarget	struct free_data *		4958111	0					
ANR	4958122	Identifier	arg		4958111	1					
ANR	4958123	IfStatement	if ( cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem )		4958111	1					
ANR	4958124	Condition	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem	993:8:30622:30673	4958111	0	True				
ANR	4958125	EqualityExpression	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem		4958111	0		!=			
ANR	4958126	AdditiveExpression	cp -> cbase + sizeof ( obj_header_t )		4958111	0		+			
ANR	4958127	PtrMemberAccess	cp -> cbase		4958111	0					
ANR	4958128	Identifier	cp		4958111	0					
ANR	4958129	Identifier	cbase		4958111	1					
ANR	4958130	SizeofExpression	sizeof ( obj_header_t )		4958111	1					
ANR	4958131	Sizeof	sizeof		4958111	0					
ANR	4958132	SizeofOperand	obj_header_t		4958111	1					
ANR	4958133	CastExpression	( byte * ) fd -> imem		4958111	1					
ANR	4958134	CastTarget	byte *		4958111	0					
ANR	4958135	PtrMemberAccess	fd -> imem		4958111	1					
ANR	4958136	Identifier	fd		4958111	0					
ANR	4958137	Identifier	imem		4958111	1					
ANR	4958138	ExpressionStatement	"alloc_free_clump ( cp , fd -> imem )"	994:8:30684:30714	4958111	1	True				
ANR	4958139	CallExpression	"alloc_free_clump ( cp , fd -> imem )"		4958111	0					
ANR	4958140	Callee	alloc_free_clump		4958111	0					
ANR	4958141	Identifier	alloc_free_clump		4958111	0					
ANR	4958142	ArgumentList	cp		4958111	1					
ANR	4958143	Argument	cp		4958111	0					
ANR	4958144	Identifier	cp		4958111	0					
ANR	4958145	Argument	fd -> imem		4958111	1					
ANR	4958146	PtrMemberAccess	fd -> imem		4958111	0					
ANR	4958147	Identifier	fd		4958111	0					
ANR	4958148	Identifier	imem		4958111	1					
ANR	4958149	ElseStatement	else		4958111	0					
ANR	4958150	ExpressionStatement	fd -> allocator = cp	996:8:30733:30751	4958111	0	True				
ANR	4958151	AssignmentExpression	fd -> allocator = cp		4958111	0		=			
ANR	4958152	PtrMemberAccess	fd -> allocator		4958111	0					
ANR	4958153	Identifier	fd		4958111	0					
ANR	4958154	Identifier	allocator		4958111	1					
ANR	4958155	Identifier	cp		4958111	1					
ANR	4958156	ReturnStatement	return SPLAY_APP_CONTINUE ;	998:4:30758:30783	4958111	2	True				
ANR	4958157	Identifier	SPLAY_APP_CONTINUE		4958111	0					
ANR	4958158	ReturnType	static splay_app_result_t		4958111	1					
ANR	4958159	Identifier	free_all_not_allocator		4958111	2					
ANR	4958160	ParameterList	"clump_t * cp , void * arg"		4958111	3					
ANR	4958161	Parameter	clump_t * cp	989:23:30535:30545	4958111	0	True				
ANR	4958162	ParameterType	clump_t *		4958111	0					
ANR	4958163	Identifier	cp		4958111	1					
ANR	4958164	Parameter	void * arg	989:36:30548:30556	4958111	1	True				
ANR	4958165	ParameterType	void *		4958111	0					
ANR	4958166	Identifier	arg		4958111	1					
ANR	4958167	CFGEntryNode	ENTRY		4958111		True				
ANR	4958168	CFGExitNode	EXIT		4958111		True				
ANR	4958169	Symbol	* cp		4958111						
ANR	4958170	Symbol	fd -> imem		4958111						
ANR	4958171	Symbol	arg		4958111						
ANR	4958172	Symbol	* fd		4958111						
ANR	4958173	Symbol	fd -> allocator		4958111						
ANR	4958174	Symbol	cp -> cbase		4958111						
ANR	4958175	Symbol	cp		4958111						
ANR	4958176	Symbol	fd		4958111						
ANR	4958177	Symbol	SPLAY_APP_CONTINUE		4958111						
ANR	4958178	Function	free_all_allocator	1001:0:30788:31097							
ANR	4958179	FunctionDef	"free_all_allocator (clump_t * cp , void * arg)"		4958178	0					
ANR	4958180	CompoundStatement		1003:0:30857:31097	4958178	0					
ANR	4958181	IdentifierDeclStatement	struct free_data * fd = ( struct free_data * ) arg ;	1004:4:30863:30909	4958178	0	True				
ANR	4958182	IdentifierDecl	* fd = ( struct free_data * ) arg		4958178	0					
ANR	4958183	IdentifierDeclType	struct free_data *		4958178	0					
ANR	4958184	Identifier	fd		4958178	1					
ANR	4958185	AssignmentExpression	* fd = ( struct free_data * ) arg		4958178	2		=			
ANR	4958186	Identifier	fd		4958178	0					
ANR	4958187	CastExpression	( struct free_data * ) arg		4958178	1					
ANR	4958188	CastTarget	struct free_data *		4958178	0					
ANR	4958189	Identifier	arg		4958178	1					
ANR	4958190	IfStatement	if ( cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem )		4958178	1					
ANR	4958191	Condition	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem	1006:8:30920:30971	4958178	0	True				
ANR	4958192	EqualityExpression	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem		4958178	0		!=			
ANR	4958193	AdditiveExpression	cp -> cbase + sizeof ( obj_header_t )		4958178	0		+			
ANR	4958194	PtrMemberAccess	cp -> cbase		4958178	0					
ANR	4958195	Identifier	cp		4958178	0					
ANR	4958196	Identifier	cbase		4958178	1					
ANR	4958197	SizeofExpression	sizeof ( obj_header_t )		4958178	1					
ANR	4958198	Sizeof	sizeof		4958178	0					
ANR	4958199	SizeofOperand	obj_header_t		4958178	1					
ANR	4958200	CastExpression	( byte * ) fd -> imem		4958178	1					
ANR	4958201	CastTarget	byte *		4958178	0					
ANR	4958202	PtrMemberAccess	fd -> imem		4958178	1					
ANR	4958203	Identifier	fd		4958178	0					
ANR	4958204	Identifier	imem		4958178	1					
ANR	4958205	ReturnStatement	return SPLAY_APP_CONTINUE ;	1007:8:30982:31007	4958178	1	True				
ANR	4958206	Identifier	SPLAY_APP_CONTINUE		4958178	0					
ANR	4958207	ExpressionStatement	fd -> allocator = cp	1009:4:31014:31032	4958178	2	True				
ANR	4958208	AssignmentExpression	fd -> allocator = cp		4958178	0		=			
ANR	4958209	PtrMemberAccess	fd -> allocator		4958178	0					
ANR	4958210	Identifier	fd		4958178	0					
ANR	4958211	Identifier	allocator		4958178	1					
ANR	4958212	Identifier	cp		4958178	1					
ANR	4958213	ExpressionStatement	"alloc_free_clump ( cp , fd -> imem )"	1010:4:31038:31068	4958178	3	True				
ANR	4958214	CallExpression	"alloc_free_clump ( cp , fd -> imem )"		4958178	0					
ANR	4958215	Callee	alloc_free_clump		4958178	0					
ANR	4958216	Identifier	alloc_free_clump		4958178	0					
ANR	4958217	ArgumentList	cp		4958178	1					
ANR	4958218	Argument	cp		4958178	0					
ANR	4958219	Identifier	cp		4958178	0					
ANR	4958220	Argument	fd -> imem		4958178	1					
ANR	4958221	PtrMemberAccess	fd -> imem		4958178	0					
ANR	4958222	Identifier	fd		4958178	0					
ANR	4958223	Identifier	imem		4958178	1					
ANR	4958224	ReturnStatement	return SPLAY_APP_STOP ;	1011:4:31074:31095	4958178	4	True				
ANR	4958225	Identifier	SPLAY_APP_STOP		4958178	0					
ANR	4958226	ReturnType	static splay_app_result_t		4958178	1					
ANR	4958227	Identifier	free_all_allocator		4958178	2					
ANR	4958228	ParameterList	"clump_t * cp , void * arg"		4958178	3					
ANR	4958229	Parameter	clump_t * cp	1002:19:30833:30843	4958178	0	True				
ANR	4958230	ParameterType	clump_t *		4958178	0					
ANR	4958231	Identifier	cp		4958178	1					
ANR	4958232	Parameter	void * arg	1002:32:30846:30854	4958178	1	True				
ANR	4958233	ParameterType	void *		4958178	0					
ANR	4958234	Identifier	arg		4958178	1					
ANR	4958235	CFGEntryNode	ENTRY		4958178		True				
ANR	4958236	CFGExitNode	EXIT		4958178		True				
ANR	4958237	Symbol	* cp		4958178						
ANR	4958238	Symbol	SPLAY_APP_STOP		4958178						
ANR	4958239	Symbol	fd -> imem		4958178						
ANR	4958240	Symbol	arg		4958178						
ANR	4958241	Symbol	* fd		4958178						
ANR	4958242	Symbol	fd -> allocator		4958178						
ANR	4958243	Symbol	cp -> cbase		4958178						
ANR	4958244	Symbol	cp		4958178						
ANR	4958245	Symbol	fd		4958178						
ANR	4958246	Symbol	SPLAY_APP_CONTINUE		4958178						
ANR	4958247	Function	i_free_all	1019:0:31324:32088							
ANR	4958248	FunctionDef	"i_free_all (gs_memory_t * mem , uint free_mask , client_name_t cname)"		4958247	0					
ANR	4958249	CompoundStatement		1021:0:31403:32088	4958247	0					
ANR	4958250	IdentifierDeclStatement	gs_ref_memory_t * imem = ( gs_ref_memory_t * ) mem ;	1022:4:31409:31456	4958247	0	True				
ANR	4958251	IdentifierDecl	* imem = ( gs_ref_memory_t * ) mem		4958247	0					
ANR	4958252	IdentifierDeclType	gs_ref_memory_t *		4958247	0					
ANR	4958253	Identifier	imem		4958247	1					
ANR	4958254	AssignmentExpression	* imem = ( gs_ref_memory_t * ) mem		4958247	2		=			
ANR	4958255	Identifier	imem		4958247	0					
ANR	4958256	CastExpression	( gs_ref_memory_t * ) mem		4958247	1					
ANR	4958257	CastTarget	gs_ref_memory_t *		4958247	0					
ANR	4958258	Identifier	mem		4958247	1					
ANR	4958259	IdentifierDeclStatement	struct free_data fd ;	1023:4:31462:31481	4958247	1	True				
ANR	4958260	IdentifierDecl	fd		4958247	0					
ANR	4958261	IdentifierDeclType	struct free_data		4958247	0					
ANR	4958262	Identifier	fd		4958247	1					
ANR	4958263	ExpressionStatement	fd . imem = imem	1025:4:31488:31502	4958247	2	True				
ANR	4958264	AssignmentExpression	fd . imem = imem		4958247	0		=			
ANR	4958265	MemberAccess	fd . imem		4958247	0					
ANR	4958266	Identifier	fd		4958247	0					
ANR	4958267	Identifier	imem		4958247	1					
ANR	4958268	Identifier	imem		4958247	1					
ANR	4958269	ExpressionStatement	fd . allocator = NULL	1026:4:31508:31527	4958247	3	True				
ANR	4958270	AssignmentExpression	fd . allocator = NULL		4958247	0		=			
ANR	4958271	MemberAccess	fd . allocator		4958247	0					
ANR	4958272	Identifier	fd		4958247	0					
ANR	4958273	Identifier	allocator		4958247	1					
ANR	4958274	Identifier	NULL		4958247	1					
ANR	4958275	IfStatement	if ( free_mask & FREE_ALL_DATA && imem -> root != NULL )		4958247	4					
ANR	4958276	Condition	free_mask & FREE_ALL_DATA && imem -> root != NULL	1028:8:31538:31584	4958247	0	True				
ANR	4958277	AndExpression	free_mask & FREE_ALL_DATA && imem -> root != NULL		4958247	0		&&			
ANR	4958278	BitAndExpression	free_mask & FREE_ALL_DATA		4958247	0		&			
ANR	4958279	Identifier	free_mask		4958247	0					
ANR	4958280	Identifier	FREE_ALL_DATA		4958247	1					
ANR	4958281	EqualityExpression	imem -> root != NULL		4958247	1		!=			
ANR	4958282	PtrMemberAccess	imem -> root		4958247	0					
ANR	4958283	Identifier	imem		4958247	0					
ANR	4958284	Identifier	root		4958247	1					
ANR	4958285	Identifier	NULL		4958247	1					
ANR	4958286	CompoundStatement		8:57:183:183	4958247	1					
ANR	4958287	ExpressionStatement	"clump_splay_app ( imem -> root , imem , free_all_not_allocator , & fd )"	1030:8:31649:31711	4958247	0	True				
ANR	4958288	CallExpression	"clump_splay_app ( imem -> root , imem , free_all_not_allocator , & fd )"		4958247	0					
ANR	4958289	Callee	clump_splay_app		4958247	0					
ANR	4958290	Identifier	clump_splay_app		4958247	0					
ANR	4958291	ArgumentList	imem -> root		4958247	1					
ANR	4958292	Argument	imem -> root		4958247	0					
ANR	4958293	PtrMemberAccess	imem -> root		4958247	0					
ANR	4958294	Identifier	imem		4958247	0					
ANR	4958295	Identifier	root		4958247	1					
ANR	4958296	Argument	imem		4958247	1					
ANR	4958297	Identifier	imem		4958247	0					
ANR	4958298	Argument	free_all_not_allocator		4958247	2					
ANR	4958299	Identifier	free_all_not_allocator		4958247	0					
ANR	4958300	Argument	& fd		4958247	3					
ANR	4958301	UnaryOperationExpression	& fd		4958247	0					
ANR	4958302	UnaryOperator	&		4958247	0					
ANR	4958303	Identifier	fd		4958247	1					
ANR	4958304	ExpressionStatement	imem -> root = fd . allocator	1033:8:31778:31803	4958247	1	True				
ANR	4958305	AssignmentExpression	imem -> root = fd . allocator		4958247	0		=			
ANR	4958306	PtrMemberAccess	imem -> root		4958247	0					
ANR	4958307	Identifier	imem		4958247	0					
ANR	4958308	Identifier	root		4958247	1					
ANR	4958309	MemberAccess	fd . allocator		4958247	1					
ANR	4958310	Identifier	fd		4958247	0					
ANR	4958311	Identifier	allocator		4958247	1					
ANR	4958312	IfStatement	if ( fd . allocator )		4958247	2					
ANR	4958313	Condition	fd . allocator	1034:12:31817:31828	4958247	0	True				
ANR	4958314	MemberAccess	fd . allocator		4958247	0					
ANR	4958315	Identifier	fd		4958247	0					
ANR	4958316	Identifier	allocator		4958247	1					
ANR	4958317	ExpressionStatement	fd . allocator -> parent = fd . allocator -> left = fd . allocator -> right = NULL	1035:12:31843:31913	4958247	1	True				
ANR	4958318	AssignmentExpression	fd . allocator -> parent = fd . allocator -> left = fd . allocator -> right = NULL		4958247	0		=			
ANR	4958319	PtrMemberAccess	fd . allocator -> parent		4958247	0					
ANR	4958320	MemberAccess	fd . allocator		4958247	0					
ANR	4958321	Identifier	fd		4958247	0					
ANR	4958322	Identifier	allocator		4958247	1					
ANR	4958323	Identifier	parent		4958247	1					
ANR	4958324	AssignmentExpression	fd . allocator -> left = fd . allocator -> right = NULL		4958247	1		=			
ANR	4958325	PtrMemberAccess	fd . allocator -> left		4958247	0					
ANR	4958326	MemberAccess	fd . allocator		4958247	0					
ANR	4958327	Identifier	fd		4958247	0					
ANR	4958328	Identifier	allocator		4958247	1					
ANR	4958329	Identifier	left		4958247	1					
ANR	4958330	AssignmentExpression	fd . allocator -> right = NULL		4958247	1		=			
ANR	4958331	PtrMemberAccess	fd . allocator -> right		4958247	0					
ANR	4958332	MemberAccess	fd . allocator		4958247	0					
ANR	4958333	Identifier	fd		4958247	0					
ANR	4958334	Identifier	allocator		4958247	1					
ANR	4958335	Identifier	right		4958247	1					
ANR	4958336	Identifier	NULL		4958247	1					
ANR	4958337	IfStatement	if ( free_mask & FREE_ALL_ALLOCATOR )		4958247	5					
ANR	4958338	Condition	free_mask & FREE_ALL_ALLOCATOR	1037:8:31929:31958	4958247	0	True				
ANR	4958339	BitAndExpression	free_mask & FREE_ALL_ALLOCATOR		4958247	0		&			
ANR	4958340	Identifier	free_mask		4958247	0					
ANR	4958341	Identifier	FREE_ALL_ALLOCATOR		4958247	1					
ANR	4958342	CompoundStatement		17:40:557:557	4958247	1					
ANR	4958343	ExpressionStatement	"clump_splay_app ( imem -> root , imem , free_all_allocator , & fd )"	1039:8:32022:32080	4958247	0	True				
ANR	4958344	CallExpression	"clump_splay_app ( imem -> root , imem , free_all_allocator , & fd )"		4958247	0					
ANR	4958345	Callee	clump_splay_app		4958247	0					
ANR	4958346	Identifier	clump_splay_app		4958247	0					
ANR	4958347	ArgumentList	imem -> root		4958247	1					
ANR	4958348	Argument	imem -> root		4958247	0					
ANR	4958349	PtrMemberAccess	imem -> root		4958247	0					
ANR	4958350	Identifier	imem		4958247	0					
ANR	4958351	Identifier	root		4958247	1					
ANR	4958352	Argument	imem		4958247	1					
ANR	4958353	Identifier	imem		4958247	0					
ANR	4958354	Argument	free_all_allocator		4958247	2					
ANR	4958355	Identifier	free_all_allocator		4958247	0					
ANR	4958356	Argument	& fd		4958247	3					
ANR	4958357	UnaryOperationExpression	& fd		4958247	0					
ANR	4958358	UnaryOperator	&		4958247	0					
ANR	4958359	Identifier	fd		4958247	1					
ANR	4958360	ReturnType	static void		4958247	1					
ANR	4958361	Identifier	i_free_all		4958247	2					
ANR	4958362	ParameterList	"gs_memory_t * mem , uint free_mask , client_name_t cname"		4958247	3					
ANR	4958363	Parameter	gs_memory_t * mem	1020:11:31347:31363	4958247	0	True				
ANR	4958364	ParameterType	gs_memory_t *		4958247	0					
ANR	4958365	Identifier	mem		4958247	1					
ANR	4958366	Parameter	uint free_mask	1020:30:31366:31379	4958247	1	True				
ANR	4958367	ParameterType	uint		4958247	0					
ANR	4958368	Identifier	free_mask		4958247	1					
ANR	4958369	Parameter	client_name_t cname	1020:46:31382:31400	4958247	2	True				
ANR	4958370	ParameterType	client_name_t		4958247	0					
ANR	4958371	Identifier	cname		4958247	1					
ANR	4958372	CFGEntryNode	ENTRY		4958247		True				
ANR	4958373	CFGExitNode	EXIT		4958247		True				
ANR	4958374	Symbol	free_all_not_allocator		4958247						
ANR	4958375	Symbol	imem -> root		4958247						
ANR	4958376	Symbol	fd . allocator -> left		4958247						
ANR	4958377	Symbol	NULL		4958247						
ANR	4958378	Symbol	free_all_allocator		4958247						
ANR	4958379	Symbol	* fd		4958247						
ANR	4958380	Symbol	cname		4958247						
ANR	4958381	Symbol	& fd		4958247						
ANR	4958382	Symbol	fd . allocator -> right		4958247						
ANR	4958383	Symbol	* fd . allocator		4958247						
ANR	4958384	Symbol	fd . allocator -> parent		4958247						
ANR	4958385	Symbol	mem		4958247						
ANR	4958386	Symbol	fd . imem		4958247						
ANR	4958387	Symbol	fd . allocator		4958247						
ANR	4958388	Symbol	free_mask		4958247						
ANR	4958389	Symbol	FREE_ALL_DATA		4958247						
ANR	4958390	Symbol	imem		4958247						
ANR	4958391	Symbol	* imem		4958247						
ANR	4958392	Symbol	FREE_ALL_ALLOCATOR		4958247						
ANR	4958393	Symbol	fd		4958247						
ANR	4958394	Function	i_object_size	1046:0:32191:32338							
ANR	4958395	FunctionDef	"i_object_size (gs_memory_t * mem , const void * obj)"		4958394	0					
ANR	4958396	CompoundStatement		1048:0:32271:32338	4958394	0					
ANR	4958397	ReturnStatement	return pre_obj_contents_size ( ( const obj_header_t * ) obj - 1 ) ;	1049:4:32277:32336	4958394	0	True				
ANR	4958398	CallExpression	pre_obj_contents_size ( ( const obj_header_t * ) obj - 1 )		4958394	0					
ANR	4958399	Callee	pre_obj_contents_size		4958394	0					
ANR	4958400	Identifier	pre_obj_contents_size		4958394	0					
ANR	4958401	ArgumentList	( const obj_header_t * ) obj - 1		4958394	1					
ANR	4958402	Argument	( const obj_header_t * ) obj - 1		4958394	0					
ANR	4958403	AdditiveExpression	( const obj_header_t * ) obj - 1		4958394	0		-			
ANR	4958404	CastExpression	( const obj_header_t * ) obj		4958394	0					
ANR	4958405	CastTarget	const obj_header_t *		4958394	0					
ANR	4958406	Identifier	obj		4958394	1					
ANR	4958407	PrimaryExpression	1		4958394	1					
ANR	4958408	ReturnType	static uint		4958394	1					
ANR	4958409	Identifier	i_object_size		4958394	2					
ANR	4958410	ParameterList	"gs_memory_t * mem , const void * obj"		4958394	3					
ANR	4958411	Parameter	gs_memory_t * mem	1047:14:32217:32233	4958394	0	True				
ANR	4958412	ParameterType	gs_memory_t *		4958394	0					
ANR	4958413	Identifier	mem		4958394	1					
ANR	4958414	Parameter	const void * obj	1047:33:32236:32268	4958394	1	True				
ANR	4958415	ParameterType	const void *		4958394	0					
ANR	4958416	Identifier	obj		4958394	1					
ANR	4958417	CFGEntryNode	ENTRY		4958394		True				
ANR	4958418	CFGExitNode	EXIT		4958394		True				
ANR	4958419	Symbol	mem		4958394						
ANR	4958420	Symbol	obj		4958394						
ANR	4958421	Symbol	pre_obj_contents_size		4958394						
ANR	4958422	Function	i_object_type	1053:0:32392:32548							
ANR	4958423	FunctionDef	"i_object_type (const gs_memory_t * mem , const void * obj)"		4958422	0					
ANR	4958424	CompoundStatement		1055:0:32494:32548	4958422	0					
ANR	4958425	ReturnStatement	return ( ( const obj_header_t * ) obj - 1 ) -> o_type ;	1056:4:32500:32546	4958422	0	True				
ANR	4958426	PtrMemberAccess	( ( const obj_header_t * ) obj - 1 ) -> o_type		4958422	0					
ANR	4958427	AdditiveExpression	( const obj_header_t * ) obj - 1		4958422	0		-			
ANR	4958428	CastExpression	( const obj_header_t * ) obj		4958422	0					
ANR	4958429	CastTarget	const obj_header_t *		4958422	0					
ANR	4958430	Identifier	obj		4958422	1					
ANR	4958431	PrimaryExpression	1		4958422	1					
ANR	4958432	Identifier	o_type		4958422	1					
ANR	4958433	ReturnType	static gs_memory_type_ptr_t		4958422	1					
ANR	4958434	Identifier	i_object_type		4958422	2					
ANR	4958435	ParameterList	"const gs_memory_t * mem , const void * obj"		4958422	3					
ANR	4958436	Parameter	const gs_memory_t * mem	1054:14:32434:32456	4958422	0	True				
ANR	4958437	ParameterType	const gs_memory_t *		4958422	0					
ANR	4958438	Identifier	mem		4958422	1					
ANR	4958439	Parameter	const void * obj	1054:39:32459:32491	4958422	1	True				
ANR	4958440	ParameterType	const void *		4958422	0					
ANR	4958441	Identifier	obj		4958422	1					
ANR	4958442	CFGEntryNode	ENTRY		4958422		True				
ANR	4958443	CFGExitNode	EXIT		4958422		True				
ANR	4958444	Symbol	* obj		4958422						
ANR	4958445	Symbol	mem		4958422						
ANR	4958446	Symbol	obj		4958422						
ANR	4958447	Symbol	( ( const obj_header_t * ) obj - 1 ) -> o_type		4958422						
ANR	4958448	Function	gs_memory_gc_status	1060:0:32588:32704							
ANR	4958449	FunctionDef	"gs_memory_gc_status (const gs_ref_memory_t * mem , gs_memory_gc_status_t * pstat)"		4958448	0					
ANR	4958450	CompoundStatement		1062:0:32673:32704	4958448	0					
ANR	4958451	ExpressionStatement	* pstat = mem -> gc_status	1063:4:32679:32702	4958448	0	True				
ANR	4958452	AssignmentExpression	* pstat = mem -> gc_status		4958448	0		=			
ANR	4958453	UnaryOperationExpression	* pstat		4958448	0					
ANR	4958454	UnaryOperator	*		4958448	0					
ANR	4958455	Identifier	pstat		4958448	1					
ANR	4958456	PtrMemberAccess	mem -> gc_status		4958448	1					
ANR	4958457	Identifier	mem		4958448	0					
ANR	4958458	Identifier	gc_status		4958448	1					
ANR	4958459	ReturnType	void		4958448	1					
ANR	4958460	Identifier	gs_memory_gc_status		4958448	2					
ANR	4958461	ParameterList	"const gs_ref_memory_t * mem , gs_memory_gc_status_t * pstat"		4958448	3					
ANR	4958462	Parameter	const gs_ref_memory_t * mem	1061:20:32613:32639	4958448	0	True				
ANR	4958463	ParameterType	const gs_ref_memory_t *		4958448	0					
ANR	4958464	Identifier	mem		4958448	1					
ANR	4958465	Parameter	gs_memory_gc_status_t * pstat	1061:49:32642:32670	4958448	1	True				
ANR	4958466	ParameterType	gs_memory_gc_status_t *		4958448	0					
ANR	4958467	Identifier	pstat		4958448	1					
ANR	4958468	CFGEntryNode	ENTRY		4958448		True				
ANR	4958469	CFGExitNode	EXIT		4958448		True				
ANR	4958470	Symbol	mem -> gc_status		4958448						
ANR	4958471	Symbol	mem		4958448						
ANR	4958472	Symbol	pstat		4958448						
ANR	4958473	Symbol	* pstat		4958448						
ANR	4958474	Symbol	* mem		4958448						
ANR	4958475	Function	gs_memory_set_gc_status	1067:0:32744:32891							
ANR	4958476	FunctionDef	"gs_memory_set_gc_status (gs_ref_memory_t * mem , const gs_memory_gc_status_t * pstat)"		4958475	0					
ANR	4958477	CompoundStatement		1069:0:32833:32891	4958475	0					
ANR	4958478	ExpressionStatement	mem -> gc_status = * pstat	1070:4:32839:32862	4958475	0	True				
ANR	4958479	AssignmentExpression	mem -> gc_status = * pstat		4958475	0		=			
ANR	4958480	PtrMemberAccess	mem -> gc_status		4958475	0					
ANR	4958481	Identifier	mem		4958475	0					
ANR	4958482	Identifier	gc_status		4958475	1					
ANR	4958483	UnaryOperationExpression	* pstat		4958475	1					
ANR	4958484	UnaryOperator	*		4958475	0					
ANR	4958485	Identifier	pstat		4958475	1					
ANR	4958486	ExpressionStatement	ialloc_set_limit ( mem )	1071:4:32868:32889	4958475	1	True				
ANR	4958487	CallExpression	ialloc_set_limit ( mem )		4958475	0					
ANR	4958488	Callee	ialloc_set_limit		4958475	0					
ANR	4958489	Identifier	ialloc_set_limit		4958475	0					
ANR	4958490	ArgumentList	mem		4958475	1					
ANR	4958491	Argument	mem		4958475	0					
ANR	4958492	Identifier	mem		4958475	0					
ANR	4958493	ReturnType	void		4958475	1					
ANR	4958494	Identifier	gs_memory_set_gc_status		4958475	2					
ANR	4958495	ParameterList	"gs_ref_memory_t * mem , const gs_memory_gc_status_t * pstat"		4958475	3					
ANR	4958496	Parameter	gs_ref_memory_t * mem	1068:24:32773:32793	4958475	0	True				
ANR	4958497	ParameterType	gs_ref_memory_t *		4958475	0					
ANR	4958498	Identifier	mem		4958475	1					
ANR	4958499	Parameter	const gs_memory_gc_status_t * pstat	1068:47:32796:32830	4958475	1	True				
ANR	4958500	ParameterType	const gs_memory_gc_status_t *		4958475	0					
ANR	4958501	Identifier	pstat		4958475	1					
ANR	4958502	CFGEntryNode	ENTRY		4958475		True				
ANR	4958503	CFGExitNode	EXIT		4958475		True				
ANR	4958504	Symbol	mem -> gc_status		4958475						
ANR	4958505	Symbol	mem		4958475						
ANR	4958506	Symbol	pstat		4958475						
ANR	4958507	Symbol	* pstat		4958475						
ANR	4958508	Symbol	* mem		4958475						
ANR	4958509	Function	gs_memory_set_vm_threshold	1075:0:32918:33308							
ANR	4958510	FunctionDef	"gs_memory_set_vm_threshold (gs_ref_memory_t * mem , long val)"		4958509	0					
ANR	4958511	CompoundStatement		1077:0:32983:33308	4958509	0					
ANR	4958512	IdentifierDeclStatement	gs_memory_gc_status_t stat ;	1078:4:32989:33015	4958509	0	True				
ANR	4958513	IdentifierDecl	stat		4958509	0					
ANR	4958514	IdentifierDeclType	gs_memory_gc_status_t		4958509	0					
ANR	4958515	Identifier	stat		4958509	1					
ANR	4958516	IdentifierDeclStatement	gs_ref_memory_t * stable = ( gs_ref_memory_t * ) mem -> stable_memory ;	1079:4:33021:33085	4958509	1	True				
ANR	4958517	IdentifierDecl	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		4958509	0					
ANR	4958518	IdentifierDeclType	gs_ref_memory_t *		4958509	0					
ANR	4958519	Identifier	stable		4958509	1					
ANR	4958520	AssignmentExpression	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		4958509	2		=			
ANR	4958521	Identifier	stable		4958509	0					
ANR	4958522	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		4958509	1					
ANR	4958523	CastTarget	gs_ref_memory_t *		4958509	0					
ANR	4958524	PtrMemberAccess	mem -> stable_memory		4958509	1					
ANR	4958525	Identifier	mem		4958509	0					
ANR	4958526	Identifier	stable_memory		4958509	1					
ANR	4958527	ExpressionStatement	"gs_memory_gc_status ( mem , & stat )"	1081:4:33092:33123	4958509	2	True				
ANR	4958528	CallExpression	"gs_memory_gc_status ( mem , & stat )"		4958509	0					
ANR	4958529	Callee	gs_memory_gc_status		4958509	0					
ANR	4958530	Identifier	gs_memory_gc_status		4958509	0					
ANR	4958531	ArgumentList	mem		4958509	1					
ANR	4958532	Argument	mem		4958509	0					
ANR	4958533	Identifier	mem		4958509	0					
ANR	4958534	Argument	& stat		4958509	1					
ANR	4958535	UnaryOperationExpression	& stat		4958509	0					
ANR	4958536	UnaryOperator	&		4958509	0					
ANR	4958537	Identifier	stat		4958509	1					
ANR	4958538	ExpressionStatement	stat . vm_threshold = val	1082:4:33129:33152	4958509	3	True				
ANR	4958539	AssignmentExpression	stat . vm_threshold = val		4958509	0		=			
ANR	4958540	MemberAccess	stat . vm_threshold		4958509	0					
ANR	4958541	Identifier	stat		4958509	0					
ANR	4958542	Identifier	vm_threshold		4958509	1					
ANR	4958543	Identifier	val		4958509	1					
ANR	4958544	ExpressionStatement	"gs_memory_set_gc_status ( mem , & stat )"	1083:4:33158:33193	4958509	4	True				
ANR	4958545	CallExpression	"gs_memory_set_gc_status ( mem , & stat )"		4958509	0					
ANR	4958546	Callee	gs_memory_set_gc_status		4958509	0					
ANR	4958547	Identifier	gs_memory_set_gc_status		4958509	0					
ANR	4958548	ArgumentList	mem		4958509	1					
ANR	4958549	Argument	mem		4958509	0					
ANR	4958550	Identifier	mem		4958509	0					
ANR	4958551	Argument	& stat		4958509	1					
ANR	4958552	UnaryOperationExpression	& stat		4958509	0					
ANR	4958553	UnaryOperator	&		4958509	0					
ANR	4958554	Identifier	stat		4958509	1					
ANR	4958555	ExpressionStatement	"gs_memory_gc_status ( stable , & stat )"	1084:4:33199:33233	4958509	5	True				
ANR	4958556	CallExpression	"gs_memory_gc_status ( stable , & stat )"		4958509	0					
ANR	4958557	Callee	gs_memory_gc_status		4958509	0					
ANR	4958558	Identifier	gs_memory_gc_status		4958509	0					
ANR	4958559	ArgumentList	stable		4958509	1					
ANR	4958560	Argument	stable		4958509	0					
ANR	4958561	Identifier	stable		4958509	0					
ANR	4958562	Argument	& stat		4958509	1					
ANR	4958563	UnaryOperationExpression	& stat		4958509	0					
ANR	4958564	UnaryOperator	&		4958509	0					
ANR	4958565	Identifier	stat		4958509	1					
ANR	4958566	ExpressionStatement	stat . vm_threshold = val	1085:4:33239:33262	4958509	6	True				
ANR	4958567	AssignmentExpression	stat . vm_threshold = val		4958509	0		=			
ANR	4958568	MemberAccess	stat . vm_threshold		4958509	0					
ANR	4958569	Identifier	stat		4958509	0					
ANR	4958570	Identifier	vm_threshold		4958509	1					
ANR	4958571	Identifier	val		4958509	1					
ANR	4958572	ExpressionStatement	"gs_memory_set_gc_status ( stable , & stat )"	1086:4:33268:33306	4958509	7	True				
ANR	4958573	CallExpression	"gs_memory_set_gc_status ( stable , & stat )"		4958509	0					
ANR	4958574	Callee	gs_memory_set_gc_status		4958509	0					
ANR	4958575	Identifier	gs_memory_set_gc_status		4958509	0					
ANR	4958576	ArgumentList	stable		4958509	1					
ANR	4958577	Argument	stable		4958509	0					
ANR	4958578	Identifier	stable		4958509	0					
ANR	4958579	Argument	& stat		4958509	1					
ANR	4958580	UnaryOperationExpression	& stat		4958509	0					
ANR	4958581	UnaryOperator	&		4958509	0					
ANR	4958582	Identifier	stat		4958509	1					
ANR	4958583	ReturnType	void		4958509	1					
ANR	4958584	Identifier	gs_memory_set_vm_threshold		4958509	2					
ANR	4958585	ParameterList	"gs_ref_memory_t * mem , long val"		4958509	3					
ANR	4958586	Parameter	gs_ref_memory_t * mem	1076:27:32950:32970	4958509	0	True				
ANR	4958587	ParameterType	gs_ref_memory_t *		4958509	0					
ANR	4958588	Identifier	mem		4958509	1					
ANR	4958589	Parameter	long val	1076:50:32973:32980	4958509	1	True				
ANR	4958590	ParameterType	long		4958509	0					
ANR	4958591	Identifier	val		4958509	1					
ANR	4958592	CFGEntryNode	ENTRY		4958509		True				
ANR	4958593	CFGExitNode	EXIT		4958509		True				
ANR	4958594	Symbol	val		4958509						
ANR	4958595	Symbol	stat		4958509						
ANR	4958596	Symbol	mem -> stable_memory		4958509						
ANR	4958597	Symbol	mem		4958509						
ANR	4958598	Symbol	stable		4958509						
ANR	4958599	Symbol	stat . vm_threshold		4958509						
ANR	4958600	Symbol	* mem		4958509						
ANR	4958601	Symbol	& stat		4958509						
ANR	4958602	Function	gs_memory_set_vm_reclaim	1090:0:33333:33723							
ANR	4958603	FunctionDef	"gs_memory_set_vm_reclaim (gs_ref_memory_t * mem , bool enabled)"		4958602	0					
ANR	4958604	CompoundStatement		1092:0:33400:33723	4958602	0					
ANR	4958605	IdentifierDeclStatement	gs_memory_gc_status_t stat ;	1093:4:33406:33432	4958602	0	True				
ANR	4958606	IdentifierDecl	stat		4958602	0					
ANR	4958607	IdentifierDeclType	gs_memory_gc_status_t		4958602	0					
ANR	4958608	Identifier	stat		4958602	1					
ANR	4958609	IdentifierDeclStatement	gs_ref_memory_t * stable = ( gs_ref_memory_t * ) mem -> stable_memory ;	1094:4:33438:33502	4958602	1	True				
ANR	4958610	IdentifierDecl	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		4958602	0					
ANR	4958611	IdentifierDeclType	gs_ref_memory_t *		4958602	0					
ANR	4958612	Identifier	stable		4958602	1					
ANR	4958613	AssignmentExpression	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		4958602	2		=			
ANR	4958614	Identifier	stable		4958602	0					
ANR	4958615	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		4958602	1					
ANR	4958616	CastTarget	gs_ref_memory_t *		4958602	0					
ANR	4958617	PtrMemberAccess	mem -> stable_memory		4958602	1					
ANR	4958618	Identifier	mem		4958602	0					
ANR	4958619	Identifier	stable_memory		4958602	1					
ANR	4958620	ExpressionStatement	"gs_memory_gc_status ( mem , & stat )"	1096:4:33509:33540	4958602	2	True				
ANR	4958621	CallExpression	"gs_memory_gc_status ( mem , & stat )"		4958602	0					
ANR	4958622	Callee	gs_memory_gc_status		4958602	0					
ANR	4958623	Identifier	gs_memory_gc_status		4958602	0					
ANR	4958624	ArgumentList	mem		4958602	1					
ANR	4958625	Argument	mem		4958602	0					
ANR	4958626	Identifier	mem		4958602	0					
ANR	4958627	Argument	& stat		4958602	1					
ANR	4958628	UnaryOperationExpression	& stat		4958602	0					
ANR	4958629	UnaryOperator	&		4958602	0					
ANR	4958630	Identifier	stat		4958602	1					
ANR	4958631	ExpressionStatement	stat . enabled = enabled	1097:4:33546:33568	4958602	3	True				
ANR	4958632	AssignmentExpression	stat . enabled = enabled		4958602	0		=			
ANR	4958633	MemberAccess	stat . enabled		4958602	0					
ANR	4958634	Identifier	stat		4958602	0					
ANR	4958635	Identifier	enabled		4958602	1					
ANR	4958636	Identifier	enabled		4958602	1					
ANR	4958637	ExpressionStatement	"gs_memory_set_gc_status ( mem , & stat )"	1098:4:33574:33609	4958602	4	True				
ANR	4958638	CallExpression	"gs_memory_set_gc_status ( mem , & stat )"		4958602	0					
ANR	4958639	Callee	gs_memory_set_gc_status		4958602	0					
ANR	4958640	Identifier	gs_memory_set_gc_status		4958602	0					
ANR	4958641	ArgumentList	mem		4958602	1					
ANR	4958642	Argument	mem		4958602	0					
ANR	4958643	Identifier	mem		4958602	0					
ANR	4958644	Argument	& stat		4958602	1					
ANR	4958645	UnaryOperationExpression	& stat		4958602	0					
ANR	4958646	UnaryOperator	&		4958602	0					
ANR	4958647	Identifier	stat		4958602	1					
ANR	4958648	ExpressionStatement	"gs_memory_gc_status ( stable , & stat )"	1099:4:33615:33649	4958602	5	True				
ANR	4958649	CallExpression	"gs_memory_gc_status ( stable , & stat )"		4958602	0					
ANR	4958650	Callee	gs_memory_gc_status		4958602	0					
ANR	4958651	Identifier	gs_memory_gc_status		4958602	0					
ANR	4958652	ArgumentList	stable		4958602	1					
ANR	4958653	Argument	stable		4958602	0					
ANR	4958654	Identifier	stable		4958602	0					
ANR	4958655	Argument	& stat		4958602	1					
ANR	4958656	UnaryOperationExpression	& stat		4958602	0					
ANR	4958657	UnaryOperator	&		4958602	0					
ANR	4958658	Identifier	stat		4958602	1					
ANR	4958659	ExpressionStatement	stat . enabled = enabled	1100:4:33655:33677	4958602	6	True				
ANR	4958660	AssignmentExpression	stat . enabled = enabled		4958602	0		=			
ANR	4958661	MemberAccess	stat . enabled		4958602	0					
ANR	4958662	Identifier	stat		4958602	0					
ANR	4958663	Identifier	enabled		4958602	1					
ANR	4958664	Identifier	enabled		4958602	1					
ANR	4958665	ExpressionStatement	"gs_memory_set_gc_status ( stable , & stat )"	1101:4:33683:33721	4958602	7	True				
ANR	4958666	CallExpression	"gs_memory_set_gc_status ( stable , & stat )"		4958602	0					
ANR	4958667	Callee	gs_memory_set_gc_status		4958602	0					
ANR	4958668	Identifier	gs_memory_set_gc_status		4958602	0					
ANR	4958669	ArgumentList	stable		4958602	1					
ANR	4958670	Argument	stable		4958602	0					
ANR	4958671	Identifier	stable		4958602	0					
ANR	4958672	Argument	& stat		4958602	1					
ANR	4958673	UnaryOperationExpression	& stat		4958602	0					
ANR	4958674	UnaryOperator	&		4958602	0					
ANR	4958675	Identifier	stat		4958602	1					
ANR	4958676	ReturnType	void		4958602	1					
ANR	4958677	Identifier	gs_memory_set_vm_reclaim		4958602	2					
ANR	4958678	ParameterList	"gs_ref_memory_t * mem , bool enabled"		4958602	3					
ANR	4958679	Parameter	gs_ref_memory_t * mem	1091:25:33363:33383	4958602	0	True				
ANR	4958680	ParameterType	gs_ref_memory_t *		4958602	0					
ANR	4958681	Identifier	mem		4958602	1					
ANR	4958682	Parameter	bool enabled	1091:48:33386:33397	4958602	1	True				
ANR	4958683	ParameterType	bool		4958602	0					
ANR	4958684	Identifier	enabled		4958602	1					
ANR	4958685	CFGEntryNode	ENTRY		4958602		True				
ANR	4958686	CFGExitNode	EXIT		4958602		True				
ANR	4958687	Symbol	stat		4958602						
ANR	4958688	Symbol	mem -> stable_memory		4958602						
ANR	4958689	Symbol	stat . enabled		4958602						
ANR	4958690	Symbol	mem		4958602						
ANR	4958691	Symbol	stable		4958602						
ANR	4958692	Symbol	enabled		4958602						
ANR	4958693	Symbol	* mem		4958602						
ANR	4958694	Symbol	& stat		4958602						
ANR	4958695	Function	i_alloc_bytes	1152:0:35847:36747							
ANR	4958696	FunctionDef	"i_alloc_bytes (gs_memory_t * mem , uint size , client_name_t cname)"		4958695	0					
ANR	4958697	CompoundStatement		1154:0:35926:36747	4958695	0					
ANR	4958698	Statement	gs_ref_memory_t	1155:4:35932:35946	4958695	0	True				
ANR	4958699	Statement	*	1155:20:35948:35948	4958695	1	True				
ANR	4958700	Statement	const	1155:22:35950:35954	4958695	2	True				
ANR	4958701	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1155:28:35956:35985	4958695	3	True				
ANR	4958702	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4958695	0		=			
ANR	4958703	Identifier	imem		4958695	0					
ANR	4958704	CastExpression	( gs_ref_memory_t * ) mem		4958695	1					
ANR	4958705	CastTarget	gs_ref_memory_t *		4958695	0					
ANR	4958706	Identifier	mem		4958695	1					
ANR	4958707	IdentifierDeclStatement	obj_header_t * obj ;	1156:4:35991:36008	4958695	4	True				
ANR	4958708	IdentifierDecl	* obj		4958695	0					
ANR	4958709	IdentifierDeclType	obj_header_t *		4958695	0					
ANR	4958710	Identifier	obj		4958695	1					
ANR	4958711	IdentifierDeclStatement	obj_header_t * * pfl ;	1157:4:36014:36032	4958695	5	True				
ANR	4958712	IdentifierDecl	* * pfl		4958695	0					
ANR	4958713	IdentifierDeclType	obj_header_t * *		4958695	0					
ANR	4958714	Identifier	pfl		4958695	1					
ANR	4958715	IfStatement	if ( Memento_failThisEvent ( ) )		4958695	6					
ANR	4958716	Condition	Memento_failThisEvent ( )	1160:8:36058:36080	4958695	0	True				
ANR	4958717	CallExpression	Memento_failThisEvent ( )		4958695	0					
ANR	4958718	Callee	Memento_failThisEvent		4958695	0					
ANR	4958719	Identifier	Memento_failThisEvent		4958695	0					
ANR	4958720	ArgumentList			4958695	1					
ANR	4958721	ReturnStatement	return NULL ;	1161:8:36091:36102	4958695	1	True				
ANR	4958722	Identifier	NULL		4958695	0					
ANR	4958723	Statement	IF_FREELIST_ALLOC	1164:4:36116:36132	4958695	7	True				
ANR	4958724	Statement	(	1164:21:36133:36133	4958695	8	True				
ANR	4958725	Statement	obj	1164:22:36134:36136	4958695	9	True				
ANR	4958726	Statement	","	1164:25:36137:36137	4958695	10	True				
ANR	4958727	Statement	imem	1164:27:36139:36142	4958695	11	True				
ANR	4958728	Statement	","	1164:31:36143:36143	4958695	12	True				
ANR	4958729	Statement	size	1164:33:36145:36148	4958695	13	True				
ANR	4958730	Statement	","	1164:37:36149:36149	4958695	14	True				
ANR	4958731	Statement	&	1164:39:36151:36151	4958695	15	True				
ANR	4958732	Statement	st_bytes	1164:40:36152:36159	4958695	16	True				
ANR	4958733	Statement	","	1164:48:36160:36160	4958695	17	True				
ANR	4958734	Statement	pfl	1164:50:36162:36164	4958695	18	True				
ANR	4958735	Statement	)	1164:53:36165:36165	4958695	19	True				
ANR	4958736	ExpressionStatement	"alloc_trace ( "":+bf"" , imem , cname , NULL , size , obj )"	1165:8:36175:36224	4958695	20	True				
ANR	4958737	CallExpression	"alloc_trace ( "":+bf"" , imem , cname , NULL , size , obj )"		4958695	0					
ANR	4958738	Callee	alloc_trace		4958695	0					
ANR	4958739	Identifier	alloc_trace		4958695	0					
ANR	4958740	ArgumentList	""":+bf"""		4958695	1					
ANR	4958741	Argument	""":+bf"""		4958695	0					
ANR	4958742	PrimaryExpression	""":+bf"""		4958695	0					
ANR	4958743	Argument	imem		4958695	1					
ANR	4958744	Identifier	imem		4958695	0					
ANR	4958745	Argument	cname		4958695	2					
ANR	4958746	Identifier	cname		4958695	0					
ANR	4958747	Argument	NULL		4958695	3					
ANR	4958748	Identifier	NULL		4958695	0					
ANR	4958749	Argument	size		4958695	4					
ANR	4958750	Identifier	size		4958695	0					
ANR	4958751	Argument	obj		4958695	5					
ANR	4958752	Identifier	obj		4958695	0					
ANR	4958753	Statement	ELSEIF_BIG_FREELIST_ALLOC	1166:4:36230:36254	4958695	21	True				
ANR	4958754	Statement	(	1166:29:36255:36255	4958695	22	True				
ANR	4958755	Statement	obj	1166:30:36256:36258	4958695	23	True				
ANR	4958756	Statement	","	1166:33:36259:36259	4958695	24	True				
ANR	4958757	Statement	imem	1166:35:36261:36264	4958695	25	True				
ANR	4958758	Statement	","	1166:39:36265:36265	4958695	26	True				
ANR	4958759	Statement	size	1166:41:36267:36270	4958695	27	True				
ANR	4958760	Statement	","	1166:45:36271:36271	4958695	28	True				
ANR	4958761	Statement	&	1166:47:36273:36273	4958695	29	True				
ANR	4958762	Statement	st_bytes	1166:48:36274:36281	4958695	30	True				
ANR	4958763	Statement	)	1166:56:36282:36282	4958695	31	True				
ANR	4958764	ExpressionStatement	"alloc_trace ( "":+bF"" , imem , cname , NULL , size , obj )"	1167:8:36292:36341	4958695	32	True				
ANR	4958765	CallExpression	"alloc_trace ( "":+bF"" , imem , cname , NULL , size , obj )"		4958695	0					
ANR	4958766	Callee	alloc_trace		4958695	0					
ANR	4958767	Identifier	alloc_trace		4958695	0					
ANR	4958768	ArgumentList	""":+bF"""		4958695	1					
ANR	4958769	Argument	""":+bF"""		4958695	0					
ANR	4958770	PrimaryExpression	""":+bF"""		4958695	0					
ANR	4958771	Argument	imem		4958695	1					
ANR	4958772	Identifier	imem		4958695	0					
ANR	4958773	Argument	cname		4958695	2					
ANR	4958774	Identifier	cname		4958695	0					
ANR	4958775	Argument	NULL		4958695	3					
ANR	4958776	Identifier	NULL		4958695	0					
ANR	4958777	Argument	size		4958695	4					
ANR	4958778	Identifier	size		4958695	0					
ANR	4958779	Argument	obj		4958695	5					
ANR	4958780	Identifier	obj		4958695	0					
ANR	4958781	Statement	ELSEIF_LIFO_ALLOC	1168:4:36347:36363	4958695	33	True				
ANR	4958782	Statement	(	1168:21:36364:36364	4958695	34	True				
ANR	4958783	Statement	obj	1168:22:36365:36367	4958695	35	True				
ANR	4958784	Statement	","	1168:25:36368:36368	4958695	36	True				
ANR	4958785	Statement	imem	1168:27:36370:36373	4958695	37	True				
ANR	4958786	Statement	","	1168:31:36374:36374	4958695	38	True				
ANR	4958787	Statement	size	1168:33:36376:36379	4958695	39	True				
ANR	4958788	Statement	","	1168:37:36380:36380	4958695	40	True				
ANR	4958789	Statement	&	1168:39:36382:36382	4958695	41	True				
ANR	4958790	Statement	st_bytes	1168:40:36383:36390	4958695	42	True				
ANR	4958791	Statement	)	1168:48:36391:36391	4958695	43	True				
ANR	4958792	ExpressionStatement	"alloc_trace ( "":+b "" , imem , cname , NULL , size , obj )"	1169:8:36401:36450	4958695	44	True				
ANR	4958793	CallExpression	"alloc_trace ( "":+b "" , imem , cname , NULL , size , obj )"		4958695	0					
ANR	4958794	Callee	alloc_trace		4958695	0					
ANR	4958795	Identifier	alloc_trace		4958695	0					
ANR	4958796	ArgumentList	""":+b """		4958695	1					
ANR	4958797	Argument	""":+b """		4958695	0					
ANR	4958798	PrimaryExpression	""":+b """		4958695	0					
ANR	4958799	Argument	imem		4958695	1					
ANR	4958800	Identifier	imem		4958695	0					
ANR	4958801	Argument	cname		4958695	2					
ANR	4958802	Identifier	cname		4958695	0					
ANR	4958803	Argument	NULL		4958695	3					
ANR	4958804	Identifier	NULL		4958695	0					
ANR	4958805	Argument	size		4958695	4					
ANR	4958806	Identifier	size		4958695	0					
ANR	4958807	Argument	obj		4958695	5					
ANR	4958808	Identifier	obj		4958695	0					
ANR	4958809	Statement	ELSE_ALLOC	1170:4:36456:36465	4958695	45	True				
ANR	4958810	CompoundStatement		18:4:544:544	4958695	46					
ANR	4958811	ExpressionStatement	"obj = alloc_obj ( imem , size , & st_bytes , 0 , cname )"	1172:8:36481:36529	4958695	0	True				
ANR	4958812	AssignmentExpression	"obj = alloc_obj ( imem , size , & st_bytes , 0 , cname )"		4958695	0		=			
ANR	4958813	Identifier	obj		4958695	0					
ANR	4958814	CallExpression	"alloc_obj ( imem , size , & st_bytes , 0 , cname )"		4958695	1					
ANR	4958815	Callee	alloc_obj		4958695	0					
ANR	4958816	Identifier	alloc_obj		4958695	0					
ANR	4958817	ArgumentList	imem		4958695	1					
ANR	4958818	Argument	imem		4958695	0					
ANR	4958819	Identifier	imem		4958695	0					
ANR	4958820	Argument	size		4958695	1					
ANR	4958821	Identifier	size		4958695	0					
ANR	4958822	Argument	& st_bytes		4958695	2					
ANR	4958823	UnaryOperationExpression	& st_bytes		4958695	0					
ANR	4958824	UnaryOperator	&		4958695	0					
ANR	4958825	Identifier	st_bytes		4958695	1					
ANR	4958826	Argument	0		4958695	3					
ANR	4958827	PrimaryExpression	0		4958695	0					
ANR	4958828	Argument	cname		4958695	4					
ANR	4958829	Identifier	cname		4958695	0					
ANR	4958830	IfStatement	if ( obj == 0 )		4958695	1					
ANR	4958831	Condition	obj == 0	1173:12:36543:36550	4958695	0	True				
ANR	4958832	EqualityExpression	obj == 0		4958695	0		==			
ANR	4958833	Identifier	obj		4958695	0					
ANR	4958834	PrimaryExpression	0		4958695	1					
ANR	4958835	ReturnStatement	return 0 ;	1174:12:36565:36573	4958695	1	True				
ANR	4958836	PrimaryExpression	0		4958695	0					
ANR	4958837	ExpressionStatement	"alloc_trace ( "":+b."" , imem , cname , NULL , size , obj )"	1175:8:36583:36632	4958695	2	True				
ANR	4958838	CallExpression	"alloc_trace ( "":+b."" , imem , cname , NULL , size , obj )"		4958695	0					
ANR	4958839	Callee	alloc_trace		4958695	0					
ANR	4958840	Identifier	alloc_trace		4958695	0					
ANR	4958841	ArgumentList	""":+b."""		4958695	1					
ANR	4958842	Argument	""":+b."""		4958695	0					
ANR	4958843	PrimaryExpression	""":+b."""		4958695	0					
ANR	4958844	Argument	imem		4958695	1					
ANR	4958845	Identifier	imem		4958695	0					
ANR	4958846	Argument	cname		4958695	2					
ANR	4958847	Identifier	cname		4958695	0					
ANR	4958848	Argument	NULL		4958695	3					
ANR	4958849	Identifier	NULL		4958695	0					
ANR	4958850	Argument	size		4958695	4					
ANR	4958851	Identifier	size		4958695	0					
ANR	4958852	Argument	obj		4958695	5					
ANR	4958853	Identifier	obj		4958695	0					
ANR	4958854	ExpressionStatement	obj [ - 1 ] . d . o . space_id = imem -> space_id	1178:8:36676:36713	4958695	47	True				
ANR	4958855	AssignmentExpression	obj [ - 1 ] . d . o . space_id = imem -> space_id		4958695	0		=			
ANR	4958856	MemberAccess	obj [ - 1 ] . d . o . space_id		4958695	0					
ANR	4958857	MemberAccess	obj [ - 1 ] . d . o		4958695	0					
ANR	4958858	MemberAccess	obj [ - 1 ] . d		4958695	0					
ANR	4958859	ArrayIndexing	obj [ - 1 ]		4958695	0					
ANR	4958860	Identifier	obj		4958695	0					
ANR	4958861	UnaryOperationExpression	- 1		4958695	1					
ANR	4958862	UnaryOperator	-		4958695	0					
ANR	4958863	PrimaryExpression	1		4958695	1					
ANR	4958864	Identifier	d		4958695	1					
ANR	4958865	Identifier	o		4958695	1					
ANR	4958866	Identifier	space_id		4958695	1					
ANR	4958867	PtrMemberAccess	imem -> space_id		4958695	1					
ANR	4958868	Identifier	imem		4958695	0					
ANR	4958869	Identifier	space_id		4958695	1					
ANR	4958870	ReturnStatement	return ( byte * ) obj ;	1180:4:36726:36745	4958695	48	True				
ANR	4958871	CastExpression	( byte * ) obj		4958695	0					
ANR	4958872	CastTarget	byte *		4958695	0					
ANR	4958873	Identifier	obj		4958695	1					
ANR	4958874	ReturnType	static byte *		4958695	1					
ANR	4958875	Identifier	i_alloc_bytes		4958695	2					
ANR	4958876	ParameterList	"gs_memory_t * mem , uint size , client_name_t cname"		4958695	3					
ANR	4958877	Parameter	gs_memory_t * mem	1153:14:35875:35891	4958695	0	True				
ANR	4958878	ParameterType	gs_memory_t *		4958695	0					
ANR	4958879	Identifier	mem		4958695	1					
ANR	4958880	Parameter	uint size	1153:33:35894:35902	4958695	1	True				
ANR	4958881	ParameterType	uint		4958695	0					
ANR	4958882	Identifier	size		4958695	1					
ANR	4958883	Parameter	client_name_t cname	1153:44:35905:35923	4958695	2	True				
ANR	4958884	ParameterType	client_name_t		4958695	0					
ANR	4958885	Identifier	cname		4958695	1					
ANR	4958886	CFGEntryNode	ENTRY		4958695		True				
ANR	4958887	CFGExitNode	EXIT		4958695		True				
ANR	4958888	Symbol	* obj		4958695						
ANR	4958889	Symbol	NULL		4958695						
ANR	4958890	Symbol	obj [ - 1 ] . d . o		4958695						
ANR	4958891	Symbol	cname		4958695						
ANR	4958892	Symbol	& st_bytes		4958695						
ANR	4958893	Symbol	mem		4958695						
ANR	4958894	Symbol	size		4958695						
ANR	4958895	Symbol	obj		4958695						
ANR	4958896	Symbol	pfl		4958695						
ANR	4958897	Symbol	alloc_obj		4958695						
ANR	4958898	Symbol	obj [ - 1 ] . d . o . space_id		4958695						
ANR	4958899	Symbol	imem -> space_id		4958695						
ANR	4958900	Symbol	imem		4958695						
ANR	4958901	Symbol	* imem		4958695						
ANR	4958902	Symbol	Memento_failThisEvent		4958695						
ANR	4958903	Symbol	obj [ - 1 ] . d		4958695						
ANR	4958904	Function	i_alloc_bytes_immovable	1182:0:36749:37219							
ANR	4958905	FunctionDef	"i_alloc_bytes_immovable (gs_memory_t * mem , uint size , client_name_t cname)"		4958904	0					
ANR	4958906	CompoundStatement		1184:0:36838:37219	4958904	0					
ANR	4958907	Statement	gs_ref_memory_t	1185:4:36844:36858	4958904	0	True				
ANR	4958908	Statement	*	1185:20:36860:36860	4958904	1	True				
ANR	4958909	Statement	const	1185:22:36862:36866	4958904	2	True				
ANR	4958910	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1185:28:36868:36897	4958904	3	True				
ANR	4958911	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4958904	0		=			
ANR	4958912	Identifier	imem		4958904	0					
ANR	4958913	CastExpression	( gs_ref_memory_t * ) mem		4958904	1					
ANR	4958914	CastTarget	gs_ref_memory_t *		4958904	0					
ANR	4958915	Identifier	mem		4958904	1					
ANR	4958916	IdentifierDeclStatement	obj_header_t * obj ;	1186:4:36903:36920	4958904	4	True				
ANR	4958917	IdentifierDecl	* obj		4958904	0					
ANR	4958918	IdentifierDeclType	obj_header_t *		4958904	0					
ANR	4958919	Identifier	obj		4958904	1					
ANR	4958920	IfStatement	if ( Memento_failThisEvent ( ) )		4958904	5					
ANR	4958921	Condition	Memento_failThisEvent ( )	1189:8:36946:36968	4958904	0	True				
ANR	4958922	CallExpression	Memento_failThisEvent ( )		4958904	0					
ANR	4958923	Callee	Memento_failThisEvent		4958904	0					
ANR	4958924	Identifier	Memento_failThisEvent		4958904	0					
ANR	4958925	ArgumentList			4958904	1					
ANR	4958926	ReturnStatement	return NULL ;	1190:8:36979:36990	4958904	1	True				
ANR	4958927	Identifier	NULL		4958904	0					
ANR	4958928	ExpressionStatement	"obj = alloc_obj ( imem , size , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1193:4:37004:37101	4958904	6	True				
ANR	4958929	AssignmentExpression	"obj = alloc_obj ( imem , size , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4958904	0		=			
ANR	4958930	Identifier	obj		4958904	0					
ANR	4958931	CallExpression	"alloc_obj ( imem , size , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4958904	1					
ANR	4958932	Callee	alloc_obj		4958904	0					
ANR	4958933	Identifier	alloc_obj		4958904	0					
ANR	4958934	ArgumentList	imem		4958904	1					
ANR	4958935	Argument	imem		4958904	0					
ANR	4958936	Identifier	imem		4958904	0					
ANR	4958937	Argument	size		4958904	1					
ANR	4958938	Identifier	size		4958904	0					
ANR	4958939	Argument	& st_bytes		4958904	2					
ANR	4958940	UnaryOperationExpression	& st_bytes		4958904	0					
ANR	4958941	UnaryOperator	&		4958904	0					
ANR	4958942	Identifier	st_bytes		4958904	1					
ANR	4958943	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		4958904	3					
ANR	4958944	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		4958904	0		|			
ANR	4958945	Identifier	ALLOC_IMMOVABLE		4958904	0					
ANR	4958946	Identifier	ALLOC_DIRECT		4958904	1					
ANR	4958947	Argument	cname		4958904	4					
ANR	4958948	Identifier	cname		4958904	0					
ANR	4958949	IfStatement	if ( obj == 0 )		4958904	7					
ANR	4958950	Condition	obj == 0	1195:8:37111:37118	4958904	0	True				
ANR	4958951	EqualityExpression	obj == 0		4958904	0		==			
ANR	4958952	Identifier	obj		4958904	0					
ANR	4958953	PrimaryExpression	0		4958904	1					
ANR	4958954	ReturnStatement	return 0 ;	1196:8:37129:37137	4958904	1	True				
ANR	4958955	PrimaryExpression	0		4958904	0					
ANR	4958956	ExpressionStatement	"alloc_trace ( ""|+b."" , imem , cname , NULL , size , obj )"	1197:4:37143:37192	4958904	8	True				
ANR	4958957	CallExpression	"alloc_trace ( ""|+b."" , imem , cname , NULL , size , obj )"		4958904	0					
ANR	4958958	Callee	alloc_trace		4958904	0					
ANR	4958959	Identifier	alloc_trace		4958904	0					
ANR	4958960	ArgumentList	"""|+b."""		4958904	1					
ANR	4958961	Argument	"""|+b."""		4958904	0					
ANR	4958962	PrimaryExpression	"""|+b."""		4958904	0					
ANR	4958963	Argument	imem		4958904	1					
ANR	4958964	Identifier	imem		4958904	0					
ANR	4958965	Argument	cname		4958904	2					
ANR	4958966	Identifier	cname		4958904	0					
ANR	4958967	Argument	NULL		4958904	3					
ANR	4958968	Identifier	NULL		4958904	0					
ANR	4958969	Argument	size		4958904	4					
ANR	4958970	Identifier	size		4958904	0					
ANR	4958971	Argument	obj		4958904	5					
ANR	4958972	Identifier	obj		4958904	0					
ANR	4958973	ReturnStatement	return ( byte * ) obj ;	1198:4:37198:37217	4958904	9	True				
ANR	4958974	CastExpression	( byte * ) obj		4958904	0					
ANR	4958975	CastTarget	byte *		4958904	0					
ANR	4958976	Identifier	obj		4958904	1					
ANR	4958977	ReturnType	static byte *		4958904	1					
ANR	4958978	Identifier	i_alloc_bytes_immovable		4958904	2					
ANR	4958979	ParameterList	"gs_memory_t * mem , uint size , client_name_t cname"		4958904	3					
ANR	4958980	Parameter	gs_memory_t * mem	1183:24:36787:36803	4958904	0	True				
ANR	4958981	ParameterType	gs_memory_t *		4958904	0					
ANR	4958982	Identifier	mem		4958904	1					
ANR	4958983	Parameter	uint size	1183:43:36806:36814	4958904	1	True				
ANR	4958984	ParameterType	uint		4958904	0					
ANR	4958985	Identifier	size		4958904	1					
ANR	4958986	Parameter	client_name_t cname	1183:54:36817:36835	4958904	2	True				
ANR	4958987	ParameterType	client_name_t		4958904	0					
ANR	4958988	Identifier	cname		4958904	1					
ANR	4958989	CFGEntryNode	ENTRY		4958904		True				
ANR	4958990	CFGExitNode	EXIT		4958904		True				
ANR	4958991	Symbol	NULL		4958904						
ANR	4958992	Symbol	mem		4958904						
ANR	4958993	Symbol	size		4958904						
ANR	4958994	Symbol	obj		4958904						
ANR	4958995	Symbol	cname		4958904						
ANR	4958996	Symbol	ALLOC_IMMOVABLE		4958904						
ANR	4958997	Symbol	alloc_obj		4958904						
ANR	4958998	Symbol	ALLOC_DIRECT		4958904						
ANR	4958999	Symbol	imem		4958904						
ANR	4959000	Symbol	Memento_failThisEvent		4958904						
ANR	4959001	Symbol	& st_bytes		4958904						
ANR	4959002	Function	i_alloc_struct	1200:0:37221:38207							
ANR	4959003	FunctionDef	"i_alloc_struct (gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname)"		4959002	0					
ANR	4959004	CompoundStatement		1203:0:37334:38207	4959002	0					
ANR	4959005	Statement	gs_ref_memory_t	1204:4:37340:37354	4959002	0	True				
ANR	4959006	Statement	*	1204:20:37356:37356	4959002	1	True				
ANR	4959007	Statement	const	1204:22:37358:37362	4959002	2	True				
ANR	4959008	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1204:28:37364:37393	4959002	3	True				
ANR	4959009	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4959002	0		=			
ANR	4959010	Identifier	imem		4959002	0					
ANR	4959011	CastExpression	( gs_ref_memory_t * ) mem		4959002	1					
ANR	4959012	CastTarget	gs_ref_memory_t *		4959002	0					
ANR	4959013	Identifier	mem		4959002	1					
ANR	4959014	IdentifierDeclStatement	uint size = pstype -> ssize ;	1205:4:37399:37424	4959002	4	True				
ANR	4959015	IdentifierDecl	size = pstype -> ssize		4959002	0					
ANR	4959016	IdentifierDeclType	uint		4959002	0					
ANR	4959017	Identifier	size		4959002	1					
ANR	4959018	AssignmentExpression	size = pstype -> ssize		4959002	2		=			
ANR	4959019	Identifier	size		4959002	0					
ANR	4959020	PtrMemberAccess	pstype -> ssize		4959002	1					
ANR	4959021	Identifier	pstype		4959002	0					
ANR	4959022	Identifier	ssize		4959002	1					
ANR	4959023	IdentifierDeclStatement	obj_header_t * obj ;	1206:4:37430:37447	4959002	5	True				
ANR	4959024	IdentifierDecl	* obj		4959002	0					
ANR	4959025	IdentifierDeclType	obj_header_t *		4959002	0					
ANR	4959026	Identifier	obj		4959002	1					
ANR	4959027	IdentifierDeclStatement	obj_header_t * * pfl ;	1207:4:37453:37471	4959002	6	True				
ANR	4959028	IdentifierDecl	* * pfl		4959002	0					
ANR	4959029	IdentifierDeclType	obj_header_t * *		4959002	0					
ANR	4959030	Identifier	pfl		4959002	1					
ANR	4959031	IfStatement	if ( Memento_failThisEvent ( ) )		4959002	7					
ANR	4959032	Condition	Memento_failThisEvent ( )	1210:8:37497:37519	4959002	0	True				
ANR	4959033	CallExpression	Memento_failThisEvent ( )		4959002	0					
ANR	4959034	Callee	Memento_failThisEvent		4959002	0					
ANR	4959035	Identifier	Memento_failThisEvent		4959002	0					
ANR	4959036	ArgumentList			4959002	1					
ANR	4959037	ReturnStatement	return NULL ;	1211:8:37530:37541	4959002	1	True				
ANR	4959038	Identifier	NULL		4959002	0					
ANR	4959039	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1214:4:37555:37583	4959002	8	True				
ANR	4959040	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		4959002	0					
ANR	4959041	Callee	ALLOC_CHECK_SIZE		4959002	0					
ANR	4959042	Identifier	ALLOC_CHECK_SIZE		4959002	0					
ANR	4959043	ArgumentList	mem		4959002	1					
ANR	4959044	Argument	mem		4959002	0					
ANR	4959045	Identifier	mem		4959002	0					
ANR	4959046	Argument	pstype		4959002	1					
ANR	4959047	Identifier	pstype		4959002	0					
ANR	4959048	Statement	IF_FREELIST_ALLOC	1215:4:37589:37605	4959002	9	True				
ANR	4959049	Statement	(	1215:21:37606:37606	4959002	10	True				
ANR	4959050	Statement	obj	1215:22:37607:37609	4959002	11	True				
ANR	4959051	Statement	","	1215:25:37610:37610	4959002	12	True				
ANR	4959052	Statement	imem	1215:27:37612:37615	4959002	13	True				
ANR	4959053	Statement	","	1215:31:37616:37616	4959002	14	True				
ANR	4959054	Statement	size	1215:33:37618:37621	4959002	15	True				
ANR	4959055	Statement	","	1215:37:37622:37622	4959002	16	True				
ANR	4959056	Statement	pstype	1215:39:37624:37629	4959002	17	True				
ANR	4959057	Statement	","	1215:45:37630:37630	4959002	18	True				
ANR	4959058	Statement	pfl	1215:47:37632:37634	4959002	19	True				
ANR	4959059	Statement	)	1215:50:37635:37635	4959002	20	True				
ANR	4959060	ExpressionStatement	"alloc_trace ( "":+<f"" , imem , cname , pstype , size , obj )"	1216:8:37645:37696	4959002	21	True				
ANR	4959061	CallExpression	"alloc_trace ( "":+<f"" , imem , cname , pstype , size , obj )"		4959002	0					
ANR	4959062	Callee	alloc_trace		4959002	0					
ANR	4959063	Identifier	alloc_trace		4959002	0					
ANR	4959064	ArgumentList	""":+<f"""		4959002	1					
ANR	4959065	Argument	""":+<f"""		4959002	0					
ANR	4959066	PrimaryExpression	""":+<f"""		4959002	0					
ANR	4959067	Argument	imem		4959002	1					
ANR	4959068	Identifier	imem		4959002	0					
ANR	4959069	Argument	cname		4959002	2					
ANR	4959070	Identifier	cname		4959002	0					
ANR	4959071	Argument	pstype		4959002	3					
ANR	4959072	Identifier	pstype		4959002	0					
ANR	4959073	Argument	size		4959002	4					
ANR	4959074	Identifier	size		4959002	0					
ANR	4959075	Argument	obj		4959002	5					
ANR	4959076	Identifier	obj		4959002	0					
ANR	4959077	Statement	ELSEIF_BIG_FREELIST_ALLOC	1217:4:37702:37726	4959002	22	True				
ANR	4959078	Statement	(	1217:29:37727:37727	4959002	23	True				
ANR	4959079	Statement	obj	1217:30:37728:37730	4959002	24	True				
ANR	4959080	Statement	","	1217:33:37731:37731	4959002	25	True				
ANR	4959081	Statement	imem	1217:35:37733:37736	4959002	26	True				
ANR	4959082	Statement	","	1217:39:37737:37737	4959002	27	True				
ANR	4959083	Statement	size	1217:41:37739:37742	4959002	28	True				
ANR	4959084	Statement	","	1217:45:37743:37743	4959002	29	True				
ANR	4959085	Statement	pstype	1217:47:37745:37750	4959002	30	True				
ANR	4959086	Statement	)	1217:53:37751:37751	4959002	31	True				
ANR	4959087	ExpressionStatement	"alloc_trace ( "":+<F"" , imem , cname , pstype , size , obj )"	1218:8:37761:37812	4959002	32	True				
ANR	4959088	CallExpression	"alloc_trace ( "":+<F"" , imem , cname , pstype , size , obj )"		4959002	0					
ANR	4959089	Callee	alloc_trace		4959002	0					
ANR	4959090	Identifier	alloc_trace		4959002	0					
ANR	4959091	ArgumentList	""":+<F"""		4959002	1					
ANR	4959092	Argument	""":+<F"""		4959002	0					
ANR	4959093	PrimaryExpression	""":+<F"""		4959002	0					
ANR	4959094	Argument	imem		4959002	1					
ANR	4959095	Identifier	imem		4959002	0					
ANR	4959096	Argument	cname		4959002	2					
ANR	4959097	Identifier	cname		4959002	0					
ANR	4959098	Argument	pstype		4959002	3					
ANR	4959099	Identifier	pstype		4959002	0					
ANR	4959100	Argument	size		4959002	4					
ANR	4959101	Identifier	size		4959002	0					
ANR	4959102	Argument	obj		4959002	5					
ANR	4959103	Identifier	obj		4959002	0					
ANR	4959104	Statement	ELSEIF_LIFO_ALLOC	1219:4:37818:37834	4959002	33	True				
ANR	4959105	Statement	(	1219:21:37835:37835	4959002	34	True				
ANR	4959106	Statement	obj	1219:22:37836:37838	4959002	35	True				
ANR	4959107	Statement	","	1219:25:37839:37839	4959002	36	True				
ANR	4959108	Statement	imem	1219:27:37841:37844	4959002	37	True				
ANR	4959109	Statement	","	1219:31:37845:37845	4959002	38	True				
ANR	4959110	Statement	size	1219:33:37847:37850	4959002	39	True				
ANR	4959111	Statement	","	1219:37:37851:37851	4959002	40	True				
ANR	4959112	Statement	pstype	1219:39:37853:37858	4959002	41	True				
ANR	4959113	Statement	)	1219:45:37859:37859	4959002	42	True				
ANR	4959114	ExpressionStatement	"alloc_trace ( "":+< "" , imem , cname , pstype , size , obj )"	1220:8:37869:37920	4959002	43	True				
ANR	4959115	CallExpression	"alloc_trace ( "":+< "" , imem , cname , pstype , size , obj )"		4959002	0					
ANR	4959116	Callee	alloc_trace		4959002	0					
ANR	4959117	Identifier	alloc_trace		4959002	0					
ANR	4959118	ArgumentList	""":+< """		4959002	1					
ANR	4959119	Argument	""":+< """		4959002	0					
ANR	4959120	PrimaryExpression	""":+< """		4959002	0					
ANR	4959121	Argument	imem		4959002	1					
ANR	4959122	Identifier	imem		4959002	0					
ANR	4959123	Argument	cname		4959002	2					
ANR	4959124	Identifier	cname		4959002	0					
ANR	4959125	Argument	pstype		4959002	3					
ANR	4959126	Identifier	pstype		4959002	0					
ANR	4959127	Argument	size		4959002	4					
ANR	4959128	Identifier	size		4959002	0					
ANR	4959129	Argument	obj		4959002	5					
ANR	4959130	Identifier	obj		4959002	0					
ANR	4959131	Statement	ELSE_ALLOC	1221:4:37926:37935	4959002	44	True				
ANR	4959132	CompoundStatement		20:4:606:606	4959002	45					
ANR	4959133	ExpressionStatement	"obj = alloc_obj ( imem , size , pstype , 0 , cname )"	1223:8:37951:37996	4959002	0	True				
ANR	4959134	AssignmentExpression	"obj = alloc_obj ( imem , size , pstype , 0 , cname )"		4959002	0		=			
ANR	4959135	Identifier	obj		4959002	0					
ANR	4959136	CallExpression	"alloc_obj ( imem , size , pstype , 0 , cname )"		4959002	1					
ANR	4959137	Callee	alloc_obj		4959002	0					
ANR	4959138	Identifier	alloc_obj		4959002	0					
ANR	4959139	ArgumentList	imem		4959002	1					
ANR	4959140	Argument	imem		4959002	0					
ANR	4959141	Identifier	imem		4959002	0					
ANR	4959142	Argument	size		4959002	1					
ANR	4959143	Identifier	size		4959002	0					
ANR	4959144	Argument	pstype		4959002	2					
ANR	4959145	Identifier	pstype		4959002	0					
ANR	4959146	Argument	0		4959002	3					
ANR	4959147	PrimaryExpression	0		4959002	0					
ANR	4959148	Argument	cname		4959002	4					
ANR	4959149	Identifier	cname		4959002	0					
ANR	4959150	IfStatement	if ( obj == 0 )		4959002	1					
ANR	4959151	Condition	obj == 0	1224:12:38010:38017	4959002	0	True				
ANR	4959152	EqualityExpression	obj == 0		4959002	0		==			
ANR	4959153	Identifier	obj		4959002	0					
ANR	4959154	PrimaryExpression	0		4959002	1					
ANR	4959155	ReturnStatement	return 0 ;	1225:12:38032:38040	4959002	1	True				
ANR	4959156	PrimaryExpression	0		4959002	0					
ANR	4959157	ExpressionStatement	"alloc_trace ( "":+<."" , imem , cname , pstype , size , obj )"	1226:8:38050:38101	4959002	2	True				
ANR	4959158	CallExpression	"alloc_trace ( "":+<."" , imem , cname , pstype , size , obj )"		4959002	0					
ANR	4959159	Callee	alloc_trace		4959002	0					
ANR	4959160	Identifier	alloc_trace		4959002	0					
ANR	4959161	ArgumentList	""":+<."""		4959002	1					
ANR	4959162	Argument	""":+<."""		4959002	0					
ANR	4959163	PrimaryExpression	""":+<."""		4959002	0					
ANR	4959164	Argument	imem		4959002	1					
ANR	4959165	Identifier	imem		4959002	0					
ANR	4959166	Argument	cname		4959002	2					
ANR	4959167	Identifier	cname		4959002	0					
ANR	4959168	Argument	pstype		4959002	3					
ANR	4959169	Identifier	pstype		4959002	0					
ANR	4959170	Argument	size		4959002	4					
ANR	4959171	Identifier	size		4959002	0					
ANR	4959172	Argument	obj		4959002	5					
ANR	4959173	Identifier	obj		4959002	0					
ANR	4959174	ExpressionStatement	obj [ - 1 ] . d . o . space_id = imem -> space_id	1229:8:38145:38182	4959002	46	True				
ANR	4959175	AssignmentExpression	obj [ - 1 ] . d . o . space_id = imem -> space_id		4959002	0		=			
ANR	4959176	MemberAccess	obj [ - 1 ] . d . o . space_id		4959002	0					
ANR	4959177	MemberAccess	obj [ - 1 ] . d . o		4959002	0					
ANR	4959178	MemberAccess	obj [ - 1 ] . d		4959002	0					
ANR	4959179	ArrayIndexing	obj [ - 1 ]		4959002	0					
ANR	4959180	Identifier	obj		4959002	0					
ANR	4959181	UnaryOperationExpression	- 1		4959002	1					
ANR	4959182	UnaryOperator	-		4959002	0					
ANR	4959183	PrimaryExpression	1		4959002	1					
ANR	4959184	Identifier	d		4959002	1					
ANR	4959185	Identifier	o		4959002	1					
ANR	4959186	Identifier	space_id		4959002	1					
ANR	4959187	PtrMemberAccess	imem -> space_id		4959002	1					
ANR	4959188	Identifier	imem		4959002	0					
ANR	4959189	Identifier	space_id		4959002	1					
ANR	4959190	ReturnStatement	return obj ;	1231:4:38195:38205	4959002	47	True				
ANR	4959191	Identifier	obj		4959002	0					
ANR	4959192	ReturnType	static void *		4959002	1					
ANR	4959193	Identifier	i_alloc_struct		4959002	2					
ANR	4959194	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname"		4959002	3					
ANR	4959195	Parameter	gs_memory_t * mem	1201:15:37250:37266	4959002	0	True				
ANR	4959196	ParameterType	gs_memory_t *		4959002	0					
ANR	4959197	Identifier	mem		4959002	1					
ANR	4959198	Parameter	gs_memory_type_ptr_t pstype	1201:34:37269:37295	4959002	1	True				
ANR	4959199	ParameterType	gs_memory_type_ptr_t		4959002	0					
ANR	4959200	Identifier	pstype		4959002	1					
ANR	4959201	Parameter	client_name_t cname	1202:15:37313:37331	4959002	2	True				
ANR	4959202	ParameterType	client_name_t		4959002	0					
ANR	4959203	Identifier	cname		4959002	1					
ANR	4959204	CFGEntryNode	ENTRY		4959002		True				
ANR	4959205	CFGExitNode	EXIT		4959002		True				
ANR	4959206	Symbol	pstype -> ssize		4959002						
ANR	4959207	Symbol	* obj		4959002						
ANR	4959208	Symbol	NULL		4959002						
ANR	4959209	Symbol	obj [ - 1 ] . d . o		4959002						
ANR	4959210	Symbol	cname		4959002						
ANR	4959211	Symbol	* pstype		4959002						
ANR	4959212	Symbol	mem		4959002						
ANR	4959213	Symbol	pstype		4959002						
ANR	4959214	Symbol	size		4959002						
ANR	4959215	Symbol	obj		4959002						
ANR	4959216	Symbol	pfl		4959002						
ANR	4959217	Symbol	alloc_obj		4959002						
ANR	4959218	Symbol	obj [ - 1 ] . d . o . space_id		4959002						
ANR	4959219	Symbol	imem -> space_id		4959002						
ANR	4959220	Symbol	imem		4959002						
ANR	4959221	Symbol	* imem		4959002						
ANR	4959222	Symbol	Memento_failThisEvent		4959002						
ANR	4959223	Symbol	obj [ - 1 ] . d		4959002						
ANR	4959224	Function	i_alloc_struct_immovable	1233:0:38209:38722							
ANR	4959225	FunctionDef	"i_alloc_struct_immovable (gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname)"		4959224	0					
ANR	4959226	CompoundStatement		1236:0:38342:38722	4959224	0					
ANR	4959227	Statement	gs_ref_memory_t	1237:4:38348:38362	4959224	0	True				
ANR	4959228	Statement	*	1237:20:38364:38364	4959224	1	True				
ANR	4959229	Statement	const	1237:22:38366:38370	4959224	2	True				
ANR	4959230	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1237:28:38372:38401	4959224	3	True				
ANR	4959231	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4959224	0		=			
ANR	4959232	Identifier	imem		4959224	0					
ANR	4959233	CastExpression	( gs_ref_memory_t * ) mem		4959224	1					
ANR	4959234	CastTarget	gs_ref_memory_t *		4959224	0					
ANR	4959235	Identifier	mem		4959224	1					
ANR	4959236	IdentifierDeclStatement	uint size = pstype -> ssize ;	1238:4:38407:38432	4959224	4	True				
ANR	4959237	IdentifierDecl	size = pstype -> ssize		4959224	0					
ANR	4959238	IdentifierDeclType	uint		4959224	0					
ANR	4959239	Identifier	size		4959224	1					
ANR	4959240	AssignmentExpression	size = pstype -> ssize		4959224	2		=			
ANR	4959241	Identifier	size		4959224	0					
ANR	4959242	PtrMemberAccess	pstype -> ssize		4959224	1					
ANR	4959243	Identifier	pstype		4959224	0					
ANR	4959244	Identifier	ssize		4959224	1					
ANR	4959245	IdentifierDeclStatement	obj_header_t * obj ;	1239:4:38438:38455	4959224	5	True				
ANR	4959246	IdentifierDecl	* obj		4959224	0					
ANR	4959247	IdentifierDeclType	obj_header_t *		4959224	0					
ANR	4959248	Identifier	obj		4959224	1					
ANR	4959249	IfStatement	if ( Memento_failThisEvent ( ) )		4959224	6					
ANR	4959250	Condition	Memento_failThisEvent ( )	1242:8:38481:38503	4959224	0	True				
ANR	4959251	CallExpression	Memento_failThisEvent ( )		4959224	0					
ANR	4959252	Callee	Memento_failThisEvent		4959224	0					
ANR	4959253	Identifier	Memento_failThisEvent		4959224	0					
ANR	4959254	ArgumentList			4959224	1					
ANR	4959255	ReturnStatement	return NULL ;	1243:8:38514:38525	4959224	1	True				
ANR	4959256	Identifier	NULL		4959224	0					
ANR	4959257	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1246:4:38539:38567	4959224	7	True				
ANR	4959258	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		4959224	0					
ANR	4959259	Callee	ALLOC_CHECK_SIZE		4959224	0					
ANR	4959260	Identifier	ALLOC_CHECK_SIZE		4959224	0					
ANR	4959261	ArgumentList	mem		4959224	1					
ANR	4959262	Argument	mem		4959224	0					
ANR	4959263	Identifier	mem		4959224	0					
ANR	4959264	Argument	pstype		4959224	1					
ANR	4959265	Identifier	pstype		4959224	0					
ANR	4959266	ExpressionStatement	"obj = alloc_obj ( imem , size , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1247:4:38573:38647	4959224	8	True				
ANR	4959267	AssignmentExpression	"obj = alloc_obj ( imem , size , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4959224	0		=			
ANR	4959268	Identifier	obj		4959224	0					
ANR	4959269	CallExpression	"alloc_obj ( imem , size , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4959224	1					
ANR	4959270	Callee	alloc_obj		4959224	0					
ANR	4959271	Identifier	alloc_obj		4959224	0					
ANR	4959272	ArgumentList	imem		4959224	1					
ANR	4959273	Argument	imem		4959224	0					
ANR	4959274	Identifier	imem		4959224	0					
ANR	4959275	Argument	size		4959224	1					
ANR	4959276	Identifier	size		4959224	0					
ANR	4959277	Argument	pstype		4959224	2					
ANR	4959278	Identifier	pstype		4959224	0					
ANR	4959279	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		4959224	3					
ANR	4959280	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		4959224	0		|			
ANR	4959281	Identifier	ALLOC_IMMOVABLE		4959224	0					
ANR	4959282	Identifier	ALLOC_DIRECT		4959224	1					
ANR	4959283	Argument	cname		4959224	4					
ANR	4959284	Identifier	cname		4959224	0					
ANR	4959285	ExpressionStatement	"alloc_trace ( ""|+<."" , imem , cname , pstype , size , obj )"	1248:4:38653:38704	4959224	9	True				
ANR	4959286	CallExpression	"alloc_trace ( ""|+<."" , imem , cname , pstype , size , obj )"		4959224	0					
ANR	4959287	Callee	alloc_trace		4959224	0					
ANR	4959288	Identifier	alloc_trace		4959224	0					
ANR	4959289	ArgumentList	"""|+<."""		4959224	1					
ANR	4959290	Argument	"""|+<."""		4959224	0					
ANR	4959291	PrimaryExpression	"""|+<."""		4959224	0					
ANR	4959292	Argument	imem		4959224	1					
ANR	4959293	Identifier	imem		4959224	0					
ANR	4959294	Argument	cname		4959224	2					
ANR	4959295	Identifier	cname		4959224	0					
ANR	4959296	Argument	pstype		4959224	3					
ANR	4959297	Identifier	pstype		4959224	0					
ANR	4959298	Argument	size		4959224	4					
ANR	4959299	Identifier	size		4959224	0					
ANR	4959300	Argument	obj		4959224	5					
ANR	4959301	Identifier	obj		4959224	0					
ANR	4959302	ReturnStatement	return obj ;	1249:4:38710:38720	4959224	10	True				
ANR	4959303	Identifier	obj		4959224	0					
ANR	4959304	ReturnType	static void *		4959224	1					
ANR	4959305	Identifier	i_alloc_struct_immovable		4959224	2					
ANR	4959306	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname"		4959224	3					
ANR	4959307	Parameter	gs_memory_t * mem	1234:25:38248:38264	4959224	0	True				
ANR	4959308	ParameterType	gs_memory_t *		4959224	0					
ANR	4959309	Identifier	mem		4959224	1					
ANR	4959310	Parameter	gs_memory_type_ptr_t pstype	1234:44:38267:38293	4959224	1	True				
ANR	4959311	ParameterType	gs_memory_type_ptr_t		4959224	0					
ANR	4959312	Identifier	pstype		4959224	1					
ANR	4959313	Parameter	client_name_t cname	1235:25:38321:38339	4959224	2	True				
ANR	4959314	ParameterType	client_name_t		4959224	0					
ANR	4959315	Identifier	cname		4959224	1					
ANR	4959316	CFGEntryNode	ENTRY		4959224		True				
ANR	4959317	CFGExitNode	EXIT		4959224		True				
ANR	4959318	Symbol	pstype -> ssize		4959224						
ANR	4959319	Symbol	NULL		4959224						
ANR	4959320	Symbol	cname		4959224						
ANR	4959321	Symbol	ALLOC_IMMOVABLE		4959224						
ANR	4959322	Symbol	ALLOC_DIRECT		4959224						
ANR	4959323	Symbol	* pstype		4959224						
ANR	4959324	Symbol	mem		4959224						
ANR	4959325	Symbol	pstype		4959224						
ANR	4959326	Symbol	size		4959224						
ANR	4959327	Symbol	obj		4959224						
ANR	4959328	Symbol	alloc_obj		4959224						
ANR	4959329	Symbol	imem		4959224						
ANR	4959330	Symbol	Memento_failThisEvent		4959224						
ANR	4959331	Function	alloc_array_check_size	1252:0:38725:38961							
ANR	4959332	FunctionDef	"alloc_array_check_size (ulong num_elements , ulong elt_size , ulong * lsize)"		4959331	0					
ANR	4959333	CompoundStatement		1254:0:38817:38961	4959331	0					
ANR	4959334	IdentifierDeclStatement	int64_t s = ( int64_t ) num_elements * elt_size ;	1255:4:38823:38867	4959331	0	True				
ANR	4959335	IdentifierDecl	s = ( int64_t ) num_elements * elt_size		4959331	0					
ANR	4959336	IdentifierDeclType	int64_t		4959331	0					
ANR	4959337	Identifier	s		4959331	1					
ANR	4959338	AssignmentExpression	s = ( int64_t ) num_elements * elt_size		4959331	2		=			
ANR	4959339	Identifier	s		4959331	0					
ANR	4959340	MultiplicativeExpression	( int64_t ) num_elements * elt_size		4959331	1		*			
ANR	4959341	CastExpression	( int64_t ) num_elements		4959331	0					
ANR	4959342	CastTarget	int64_t		4959331	0					
ANR	4959343	Identifier	num_elements		4959331	1					
ANR	4959344	Identifier	elt_size		4959331	1					
ANR	4959345	IfStatement	if ( s > max_uint )		4959331	1					
ANR	4959346	Condition	s > max_uint	1256:8:38877:38888	4959331	0	True				
ANR	4959347	RelationalExpression	s > max_uint		4959331	0		>			
ANR	4959348	Identifier	s		4959331	0					
ANR	4959349	Identifier	max_uint		4959331	1					
ANR	4959350	CompoundStatement		3:22:73:73	4959331	1					
ANR	4959351	ReturnStatement	return false ;	1257:8:38901:38913	4959331	0	True				
ANR	4959352	Identifier	false		4959331	0					
ANR	4959353	ExpressionStatement	* lsize = ( ulong ) s	1259:4:38925:38942	4959331	2	True				
ANR	4959354	AssignmentExpression	* lsize = ( ulong ) s		4959331	0		=			
ANR	4959355	UnaryOperationExpression	* lsize		4959331	0					
ANR	4959356	UnaryOperator	*		4959331	0					
ANR	4959357	Identifier	lsize		4959331	1					
ANR	4959358	CastExpression	( ulong ) s		4959331	1					
ANR	4959359	CastTarget	ulong		4959331	0					
ANR	4959360	Identifier	s		4959331	1					
ANR	4959361	ReturnStatement	return true ;	1260:4:38948:38959	4959331	3	True				
ANR	4959362	Identifier	true		4959331	0					
ANR	4959363	ReturnType	static inline bool		4959331	1					
ANR	4959364	Identifier	alloc_array_check_size		4959331	2					
ANR	4959365	ParameterList	"ulong num_elements , ulong elt_size , ulong * lsize"		4959331	3					
ANR	4959366	Parameter	ulong num_elements	1253:23:38767:38784	4959331	0	True				
ANR	4959367	ParameterType	ulong		4959331	0					
ANR	4959368	Identifier	num_elements		4959331	1					
ANR	4959369	Parameter	ulong elt_size	1253:43:38787:38800	4959331	1	True				
ANR	4959370	ParameterType	ulong		4959331	0					
ANR	4959371	Identifier	elt_size		4959331	1					
ANR	4959372	Parameter	ulong * lsize	1253:59:38803:38814	4959331	2	True				
ANR	4959373	ParameterType	ulong *		4959331	0					
ANR	4959374	Identifier	lsize		4959331	1					
ANR	4959375	CFGEntryNode	ENTRY		4959331		True				
ANR	4959376	CFGExitNode	EXIT		4959331		True				
ANR	4959377	Symbol	s		4959331						
ANR	4959378	Symbol	num_elements		4959331						
ANR	4959379	Symbol	max_uint		4959331						
ANR	4959380	Symbol	false		4959331						
ANR	4959381	Symbol	true		4959331						
ANR	4959382	Symbol	elt_size		4959331						
ANR	4959383	Symbol	lsize		4959331						
ANR	4959384	Symbol	* lsize		4959331						
ANR	4959385	Function	i_alloc_byte_array	1263:0:38964:39711							
ANR	4959386	FunctionDef	"i_alloc_byte_array (gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname)"		4959385	0					
ANR	4959387	CompoundStatement		1266:0:39090:39711	4959385	0					
ANR	4959388	Statement	gs_ref_memory_t	1267:4:39096:39110	4959385	0	True				
ANR	4959389	Statement	*	1267:20:39112:39112	4959385	1	True				
ANR	4959390	Statement	const	1267:22:39114:39118	4959385	2	True				
ANR	4959391	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1267:28:39120:39149	4959385	3	True				
ANR	4959392	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4959385	0		=			
ANR	4959393	Identifier	imem		4959385	0					
ANR	4959394	CastExpression	( gs_ref_memory_t * ) mem		4959385	1					
ANR	4959395	CastTarget	gs_ref_memory_t *		4959385	0					
ANR	4959396	Identifier	mem		4959385	1					
ANR	4959397	IdentifierDeclStatement	obj_header_t * obj ;	1268:4:39155:39172	4959385	4	True				
ANR	4959398	IdentifierDecl	* obj		4959385	0					
ANR	4959399	IdentifierDeclType	obj_header_t *		4959385	0					
ANR	4959400	Identifier	obj		4959385	1					
ANR	4959401	IdentifierDeclStatement	ulong lsize ;	1269:4:39178:39189	4959385	5	True				
ANR	4959402	IdentifierDecl	lsize		4959385	0					
ANR	4959403	IdentifierDeclType	ulong		4959385	0					
ANR	4959404	Identifier	lsize		4959385	1					
ANR	4959405	IfStatement	if ( Memento_failThisEvent ( ) )		4959385	6					
ANR	4959406	Condition	Memento_failThisEvent ( )	1271:8:39214:39236	4959385	0	True				
ANR	4959407	CallExpression	Memento_failThisEvent ( )		4959385	0					
ANR	4959408	Callee	Memento_failThisEvent		4959385	0					
ANR	4959409	Identifier	Memento_failThisEvent		4959385	0					
ANR	4959410	ArgumentList			4959385	1					
ANR	4959411	ReturnStatement	return NULL ;	1272:8:39247:39258	4959385	1	True				
ANR	4959412	Identifier	NULL		4959385	0					
ANR	4959413	IfStatement	"if ( alloc_array_check_size ( num_elements , elt_size , & lsize ) == false )"		4959385	7					
ANR	4959414	Condition	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"	1274:8:39275:39337	4959385	0	True				
ANR	4959415	EqualityExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"		4959385	0		==			
ANR	4959416	CallExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize )"		4959385	0					
ANR	4959417	Callee	alloc_array_check_size		4959385	0					
ANR	4959418	Identifier	alloc_array_check_size		4959385	0					
ANR	4959419	ArgumentList	num_elements		4959385	1					
ANR	4959420	Argument	num_elements		4959385	0					
ANR	4959421	Identifier	num_elements		4959385	0					
ANR	4959422	Argument	elt_size		4959385	1					
ANR	4959423	Identifier	elt_size		4959385	0					
ANR	4959424	Argument	& lsize		4959385	2					
ANR	4959425	UnaryOperationExpression	& lsize		4959385	0					
ANR	4959426	UnaryOperator	&		4959385	0					
ANR	4959427	Identifier	lsize		4959385	1					
ANR	4959428	Identifier	false		4959385	1					
ANR	4959429	ReturnStatement	return NULL ;	1275:8:39348:39359	4959385	1	True				
ANR	4959430	Identifier	NULL		4959385	0					
ANR	4959431	ExpressionStatement	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_DIRECT , cname )"	1276:4:39365:39445	4959385	8	True				
ANR	4959432	AssignmentExpression	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_DIRECT , cname )"		4959385	0		=			
ANR	4959433	Identifier	obj		4959385	0					
ANR	4959434	CallExpression	"alloc_obj ( imem , lsize , & st_bytes , ALLOC_DIRECT , cname )"		4959385	1					
ANR	4959435	Callee	alloc_obj		4959385	0					
ANR	4959436	Identifier	alloc_obj		4959385	0					
ANR	4959437	ArgumentList	imem		4959385	1					
ANR	4959438	Argument	imem		4959385	0					
ANR	4959439	Identifier	imem		4959385	0					
ANR	4959440	Argument	lsize		4959385	1					
ANR	4959441	Identifier	lsize		4959385	0					
ANR	4959442	Argument	& st_bytes		4959385	2					
ANR	4959443	UnaryOperationExpression	& st_bytes		4959385	0					
ANR	4959444	UnaryOperator	&		4959385	0					
ANR	4959445	Identifier	st_bytes		4959385	1					
ANR	4959446	Argument	ALLOC_DIRECT		4959385	3					
ANR	4959447	Identifier	ALLOC_DIRECT		4959385	0					
ANR	4959448	Argument	cname		4959385	4					
ANR	4959449	Identifier	cname		4959385	0					
ANR	4959450	ExpressionStatement	"if_debug6m ( 'A' , mem , ""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"	1279:4:39452:39684	4959385	9	True				
ANR	4959451	CallExpression	"if_debug6m ( 'A' , mem , ""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"		4959385	0					
ANR	4959452	Callee	if_debug6m		4959385	0					
ANR	4959453	Identifier	if_debug6m		4959385	0					
ANR	4959454	ArgumentList	'A'		4959385	1					
ANR	4959455	Argument	'A'		4959385	0					
ANR	4959456	PrimaryExpression	'A'		4959385	0					
ANR	4959457	Argument	mem		4959385	1					
ANR	4959458	Identifier	mem		4959385	0					
ANR	4959459	Argument	"""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		4959385	2					
ANR	4959460	PrimaryExpression	"""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		4959385	0					
ANR	4959461	Argument	alloc_trace_space ( imem )		4959385	3					
ANR	4959462	CallExpression	alloc_trace_space ( imem )		4959385	0					
ANR	4959463	Callee	alloc_trace_space		4959385	0					
ANR	4959464	Identifier	alloc_trace_space		4959385	0					
ANR	4959465	ArgumentList	imem		4959385	1					
ANR	4959466	Argument	imem		4959385	0					
ANR	4959467	Identifier	imem		4959385	0					
ANR	4959468	Argument	client_name_string ( cname )		4959385	4					
ANR	4959469	CallExpression	client_name_string ( cname )		4959385	0					
ANR	4959470	Callee	client_name_string		4959385	0					
ANR	4959471	Identifier	client_name_string		4959385	0					
ANR	4959472	ArgumentList	cname		4959385	1					
ANR	4959473	Argument	cname		4959385	0					
ANR	4959474	Identifier	cname		4959385	0					
ANR	4959475	Argument	( ulong ) num_elements * elt_size		4959385	5					
ANR	4959476	MultiplicativeExpression	( ulong ) num_elements * elt_size		4959385	0		*			
ANR	4959477	CastExpression	( ulong ) num_elements		4959385	0					
ANR	4959478	CastTarget	ulong		4959385	0					
ANR	4959479	Identifier	num_elements		4959385	1					
ANR	4959480	Identifier	elt_size		4959385	1					
ANR	4959481	Argument	num_elements		4959385	6					
ANR	4959482	Identifier	num_elements		4959385	0					
ANR	4959483	Argument	elt_size		4959385	7					
ANR	4959484	Identifier	elt_size		4959385	0					
ANR	4959485	Argument	( ulong ) obj		4959385	8					
ANR	4959486	CastExpression	( ulong ) obj		4959385	0					
ANR	4959487	CastTarget	ulong		4959385	0					
ANR	4959488	Identifier	obj		4959385	1					
ANR	4959489	ReturnStatement	return ( byte * ) obj ;	1283:4:39690:39709	4959385	10	True				
ANR	4959490	CastExpression	( byte * ) obj		4959385	0					
ANR	4959491	CastTarget	byte *		4959385	0					
ANR	4959492	Identifier	obj		4959385	1					
ANR	4959493	ReturnType	static byte *		4959385	1					
ANR	4959494	Identifier	i_alloc_byte_array		4959385	2					
ANR	4959495	ParameterList	"gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname"		4959385	3					
ANR	4959496	Parameter	gs_memory_t * mem	1264:19:38997:39013	4959385	0	True				
ANR	4959497	ParameterType	gs_memory_t *		4959385	0					
ANR	4959498	Identifier	mem		4959385	1					
ANR	4959499	Parameter	uint num_elements	1264:38:39016:39032	4959385	1	True				
ANR	4959500	ParameterType	uint		4959385	0					
ANR	4959501	Identifier	num_elements		4959385	1					
ANR	4959502	Parameter	uint elt_size	1264:57:39035:39047	4959385	2	True				
ANR	4959503	ParameterType	uint		4959385	0					
ANR	4959504	Identifier	elt_size		4959385	1					
ANR	4959505	Parameter	client_name_t cname	1265:19:39069:39087	4959385	3	True				
ANR	4959506	ParameterType	client_name_t		4959385	0					
ANR	4959507	Identifier	cname		4959385	1					
ANR	4959508	CFGEntryNode	ENTRY		4959385		True				
ANR	4959509	CFGExitNode	EXIT		4959385		True				
ANR	4959510	Symbol	NULL		4959385						
ANR	4959511	Symbol	cname		4959385						
ANR	4959512	Symbol	false		4959385						
ANR	4959513	Symbol	elt_size		4959385						
ANR	4959514	Symbol	alloc_array_check_size		4959385						
ANR	4959515	Symbol	lsize		4959385						
ANR	4959516	Symbol	ALLOC_DIRECT		4959385						
ANR	4959517	Symbol	alloc_trace_space		4959385						
ANR	4959518	Symbol	& st_bytes		4959385						
ANR	4959519	Symbol	mem		4959385						
ANR	4959520	Symbol	num_elements		4959385						
ANR	4959521	Symbol	obj		4959385						
ANR	4959522	Symbol	client_name_string		4959385						
ANR	4959523	Symbol	alloc_obj		4959385						
ANR	4959524	Symbol	& lsize		4959385						
ANR	4959525	Symbol	imem		4959385						
ANR	4959526	Symbol	Memento_failThisEvent		4959385						
ANR	4959527	Function	i_alloc_byte_array_immovable	1285:0:39713:40518							
ANR	4959528	FunctionDef	"i_alloc_byte_array_immovable (gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname)"		4959527	0					
ANR	4959529	CompoundStatement		1288:0:39859:40518	4959527	0					
ANR	4959530	Statement	gs_ref_memory_t	1289:4:39865:39879	4959527	0	True				
ANR	4959531	Statement	*	1289:20:39881:39881	4959527	1	True				
ANR	4959532	Statement	const	1289:22:39883:39887	4959527	2	True				
ANR	4959533	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1289:28:39889:39918	4959527	3	True				
ANR	4959534	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4959527	0		=			
ANR	4959535	Identifier	imem		4959527	0					
ANR	4959536	CastExpression	( gs_ref_memory_t * ) mem		4959527	1					
ANR	4959537	CastTarget	gs_ref_memory_t *		4959527	0					
ANR	4959538	Identifier	mem		4959527	1					
ANR	4959539	IdentifierDeclStatement	obj_header_t * obj ;	1290:4:39924:39941	4959527	4	True				
ANR	4959540	IdentifierDecl	* obj		4959527	0					
ANR	4959541	IdentifierDeclType	obj_header_t *		4959527	0					
ANR	4959542	Identifier	obj		4959527	1					
ANR	4959543	IdentifierDeclStatement	ulong lsize ;	1291:4:39947:39958	4959527	5	True				
ANR	4959544	IdentifierDecl	lsize		4959527	0					
ANR	4959545	IdentifierDeclType	ulong		4959527	0					
ANR	4959546	Identifier	lsize		4959527	1					
ANR	4959547	IfStatement	if ( Memento_failThisEvent ( ) )		4959527	6					
ANR	4959548	Condition	Memento_failThisEvent ( )	1293:8:39983:40005	4959527	0	True				
ANR	4959549	CallExpression	Memento_failThisEvent ( )		4959527	0					
ANR	4959550	Callee	Memento_failThisEvent		4959527	0					
ANR	4959551	Identifier	Memento_failThisEvent		4959527	0					
ANR	4959552	ArgumentList			4959527	1					
ANR	4959553	ReturnStatement	return NULL ;	1294:8:40016:40027	4959527	1	True				
ANR	4959554	Identifier	NULL		4959527	0					
ANR	4959555	IfStatement	"if ( alloc_array_check_size ( num_elements , elt_size , & lsize ) == false )"		4959527	7					
ANR	4959556	Condition	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"	1296:8:40044:40106	4959527	0	True				
ANR	4959557	EqualityExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"		4959527	0		==			
ANR	4959558	CallExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize )"		4959527	0					
ANR	4959559	Callee	alloc_array_check_size		4959527	0					
ANR	4959560	Identifier	alloc_array_check_size		4959527	0					
ANR	4959561	ArgumentList	num_elements		4959527	1					
ANR	4959562	Argument	num_elements		4959527	0					
ANR	4959563	Identifier	num_elements		4959527	0					
ANR	4959564	Argument	elt_size		4959527	1					
ANR	4959565	Identifier	elt_size		4959527	0					
ANR	4959566	Argument	& lsize		4959527	2					
ANR	4959567	UnaryOperationExpression	& lsize		4959527	0					
ANR	4959568	UnaryOperator	&		4959527	0					
ANR	4959569	Identifier	lsize		4959527	1					
ANR	4959570	Identifier	false		4959527	1					
ANR	4959571	ReturnStatement	return NULL ;	1297:8:40117:40128	4959527	1	True				
ANR	4959572	Identifier	NULL		4959527	0					
ANR	4959573	ExpressionStatement	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1298:4:40134:40252	4959527	8	True				
ANR	4959574	AssignmentExpression	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4959527	0		=			
ANR	4959575	Identifier	obj		4959527	0					
ANR	4959576	CallExpression	"alloc_obj ( imem , lsize , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4959527	1					
ANR	4959577	Callee	alloc_obj		4959527	0					
ANR	4959578	Identifier	alloc_obj		4959527	0					
ANR	4959579	ArgumentList	imem		4959527	1					
ANR	4959580	Argument	imem		4959527	0					
ANR	4959581	Identifier	imem		4959527	0					
ANR	4959582	Argument	lsize		4959527	1					
ANR	4959583	Identifier	lsize		4959527	0					
ANR	4959584	Argument	& st_bytes		4959527	2					
ANR	4959585	UnaryOperationExpression	& st_bytes		4959527	0					
ANR	4959586	UnaryOperator	&		4959527	0					
ANR	4959587	Identifier	st_bytes		4959527	1					
ANR	4959588	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		4959527	3					
ANR	4959589	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		4959527	0		|			
ANR	4959590	Identifier	ALLOC_IMMOVABLE		4959527	0					
ANR	4959591	Identifier	ALLOC_DIRECT		4959527	1					
ANR	4959592	Argument	cname		4959527	4					
ANR	4959593	Identifier	cname		4959527	0					
ANR	4959594	ExpressionStatement	"if_debug6m ( 'A' , mem , ""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"	1302:4:40259:40491	4959527	9	True				
ANR	4959595	CallExpression	"if_debug6m ( 'A' , mem , ""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"		4959527	0					
ANR	4959596	Callee	if_debug6m		4959527	0					
ANR	4959597	Identifier	if_debug6m		4959527	0					
ANR	4959598	ArgumentList	'A'		4959527	1					
ANR	4959599	Argument	'A'		4959527	0					
ANR	4959600	PrimaryExpression	'A'		4959527	0					
ANR	4959601	Argument	mem		4959527	1					
ANR	4959602	Identifier	mem		4959527	0					
ANR	4959603	Argument	"""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		4959527	2					
ANR	4959604	PrimaryExpression	"""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		4959527	0					
ANR	4959605	Argument	alloc_trace_space ( imem )		4959527	3					
ANR	4959606	CallExpression	alloc_trace_space ( imem )		4959527	0					
ANR	4959607	Callee	alloc_trace_space		4959527	0					
ANR	4959608	Identifier	alloc_trace_space		4959527	0					
ANR	4959609	ArgumentList	imem		4959527	1					
ANR	4959610	Argument	imem		4959527	0					
ANR	4959611	Identifier	imem		4959527	0					
ANR	4959612	Argument	client_name_string ( cname )		4959527	4					
ANR	4959613	CallExpression	client_name_string ( cname )		4959527	0					
ANR	4959614	Callee	client_name_string		4959527	0					
ANR	4959615	Identifier	client_name_string		4959527	0					
ANR	4959616	ArgumentList	cname		4959527	1					
ANR	4959617	Argument	cname		4959527	0					
ANR	4959618	Identifier	cname		4959527	0					
ANR	4959619	Argument	( ulong ) num_elements * elt_size		4959527	5					
ANR	4959620	MultiplicativeExpression	( ulong ) num_elements * elt_size		4959527	0		*			
ANR	4959621	CastExpression	( ulong ) num_elements		4959527	0					
ANR	4959622	CastTarget	ulong		4959527	0					
ANR	4959623	Identifier	num_elements		4959527	1					
ANR	4959624	Identifier	elt_size		4959527	1					
ANR	4959625	Argument	num_elements		4959527	6					
ANR	4959626	Identifier	num_elements		4959527	0					
ANR	4959627	Argument	elt_size		4959527	7					
ANR	4959628	Identifier	elt_size		4959527	0					
ANR	4959629	Argument	( ulong ) obj		4959527	8					
ANR	4959630	CastExpression	( ulong ) obj		4959527	0					
ANR	4959631	CastTarget	ulong		4959527	0					
ANR	4959632	Identifier	obj		4959527	1					
ANR	4959633	ReturnStatement	return ( byte * ) obj ;	1306:4:40497:40516	4959527	10	True				
ANR	4959634	CastExpression	( byte * ) obj		4959527	0					
ANR	4959635	CastTarget	byte *		4959527	0					
ANR	4959636	Identifier	obj		4959527	1					
ANR	4959637	ReturnType	static byte *		4959527	1					
ANR	4959638	Identifier	i_alloc_byte_array_immovable		4959527	2					
ANR	4959639	ParameterList	"gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname"		4959527	3					
ANR	4959640	Parameter	gs_memory_t * mem	1286:29:39756:39772	4959527	0	True				
ANR	4959641	ParameterType	gs_memory_t *		4959527	0					
ANR	4959642	Identifier	mem		4959527	1					
ANR	4959643	Parameter	uint num_elements	1286:48:39775:39791	4959527	1	True				
ANR	4959644	ParameterType	uint		4959527	0					
ANR	4959645	Identifier	num_elements		4959527	1					
ANR	4959646	Parameter	uint elt_size	1287:29:39823:39835	4959527	2	True				
ANR	4959647	ParameterType	uint		4959527	0					
ANR	4959648	Identifier	elt_size		4959527	1					
ANR	4959649	Parameter	client_name_t cname	1287:44:39838:39856	4959527	3	True				
ANR	4959650	ParameterType	client_name_t		4959527	0					
ANR	4959651	Identifier	cname		4959527	1					
ANR	4959652	CFGEntryNode	ENTRY		4959527		True				
ANR	4959653	CFGExitNode	EXIT		4959527		True				
ANR	4959654	Symbol	NULL		4959527						
ANR	4959655	Symbol	cname		4959527						
ANR	4959656	Symbol	false		4959527						
ANR	4959657	Symbol	ALLOC_IMMOVABLE		4959527						
ANR	4959658	Symbol	elt_size		4959527						
ANR	4959659	Symbol	alloc_array_check_size		4959527						
ANR	4959660	Symbol	lsize		4959527						
ANR	4959661	Symbol	ALLOC_DIRECT		4959527						
ANR	4959662	Symbol	alloc_trace_space		4959527						
ANR	4959663	Symbol	& st_bytes		4959527						
ANR	4959664	Symbol	mem		4959527						
ANR	4959665	Symbol	num_elements		4959527						
ANR	4959666	Symbol	obj		4959527						
ANR	4959667	Symbol	client_name_string		4959527						
ANR	4959668	Symbol	alloc_obj		4959527						
ANR	4959669	Symbol	& lsize		4959527						
ANR	4959670	Symbol	imem		4959527						
ANR	4959671	Symbol	Memento_failThisEvent		4959527						
ANR	4959672	Function	i_alloc_struct_array	1308:0:40520:41628							
ANR	4959673	FunctionDef	"i_alloc_struct_array (gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname)"		4959672	0					
ANR	4959674	CompoundStatement		1311:0:40664:41628	4959672	0					
ANR	4959675	Statement	gs_ref_memory_t	1312:4:40670:40684	4959672	0	True				
ANR	4959676	Statement	*	1312:20:40686:40686	4959672	1	True				
ANR	4959677	Statement	const	1312:22:40688:40692	4959672	2	True				
ANR	4959678	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1312:28:40694:40723	4959672	3	True				
ANR	4959679	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4959672	0		=			
ANR	4959680	Identifier	imem		4959672	0					
ANR	4959681	CastExpression	( gs_ref_memory_t * ) mem		4959672	1					
ANR	4959682	CastTarget	gs_ref_memory_t *		4959672	0					
ANR	4959683	Identifier	mem		4959672	1					
ANR	4959684	IdentifierDeclStatement	obj_header_t * obj ;	1313:4:40729:40746	4959672	4	True				
ANR	4959685	IdentifierDecl	* obj		4959672	0					
ANR	4959686	IdentifierDeclType	obj_header_t *		4959672	0					
ANR	4959687	Identifier	obj		4959672	1					
ANR	4959688	IdentifierDeclStatement	ulong lsize ;	1314:4:40752:40763	4959672	5	True				
ANR	4959689	IdentifierDecl	lsize		4959672	0					
ANR	4959690	IdentifierDeclType	ulong		4959672	0					
ANR	4959691	Identifier	lsize		4959672	1					
ANR	4959692	IfStatement	if ( Memento_failThisEvent ( ) )		4959672	6					
ANR	4959693	Condition	Memento_failThisEvent ( )	1316:8:40788:40810	4959672	0	True				
ANR	4959694	CallExpression	Memento_failThisEvent ( )		4959672	0					
ANR	4959695	Callee	Memento_failThisEvent		4959672	0					
ANR	4959696	Identifier	Memento_failThisEvent		4959672	0					
ANR	4959697	ArgumentList			4959672	1					
ANR	4959698	ReturnStatement	return NULL ;	1317:8:40821:40832	4959672	1	True				
ANR	4959699	Identifier	NULL		4959672	0					
ANR	4959700	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1320:4:40846:40874	4959672	7	True				
ANR	4959701	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		4959672	0					
ANR	4959702	Callee	ALLOC_CHECK_SIZE		4959672	0					
ANR	4959703	Identifier	ALLOC_CHECK_SIZE		4959672	0					
ANR	4959704	ArgumentList	mem		4959672	1					
ANR	4959705	Argument	mem		4959672	0					
ANR	4959706	Identifier	mem		4959672	0					
ANR	4959707	Argument	pstype		4959672	1					
ANR	4959708	Identifier	pstype		4959672	0					
ANR	4959709	IfStatement	if ( pstype -> enum_ptrs == basic_enum_ptrs )		4959672	8					
ANR	4959710	Condition	pstype -> enum_ptrs == basic_enum_ptrs	1322:8:40897:40932	4959672	0	True				
ANR	4959711	EqualityExpression	pstype -> enum_ptrs == basic_enum_ptrs		4959672	0		==			
ANR	4959712	PtrMemberAccess	pstype -> enum_ptrs		4959672	0					
ANR	4959713	Identifier	pstype		4959672	0					
ANR	4959714	Identifier	enum_ptrs		4959672	1					
ANR	4959715	Identifier	basic_enum_ptrs		4959672	1					
ANR	4959716	CompoundStatement		12:46:270:270	4959672	1					
ANR	4959717	ExpressionStatement	"dmprintf2 ( mem , ""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"" , pstype -> sname , cname )"	1323:8:40945:41103	4959672	0	True				
ANR	4959718	CallExpression	"dmprintf2 ( mem , ""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"" , pstype -> sname , cname )"		4959672	0					
ANR	4959719	Callee	dmprintf2		4959672	0					
ANR	4959720	Identifier	dmprintf2		4959672	0					
ANR	4959721	ArgumentList	mem		4959672	1					
ANR	4959722	Argument	mem		4959672	0					
ANR	4959723	Identifier	mem		4959672	0					
ANR	4959724	Argument	"""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"""		4959672	1					
ANR	4959725	PrimaryExpression	"""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"""		4959672	0					
ANR	4959726	Argument	pstype -> sname		4959672	2					
ANR	4959727	PtrMemberAccess	pstype -> sname		4959672	0					
ANR	4959728	Identifier	pstype		4959672	0					
ANR	4959729	Identifier	sname		4959672	1					
ANR	4959730	Argument	cname		4959672	3					
ANR	4959731	Identifier	cname		4959672	0					
ANR	4959732	ReturnStatement	return NULL ;	1325:8:41113:41124	4959672	1	True				
ANR	4959733	Identifier	NULL		4959672	0					
ANR	4959734	IfStatement	"if ( alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false )"		4959672	9					
ANR	4959735	Condition	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"	1328:8:41159:41226	4959672	0	True				
ANR	4959736	EqualityExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"		4959672	0		==			
ANR	4959737	CallExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize )"		4959672	0					
ANR	4959738	Callee	alloc_array_check_size		4959672	0					
ANR	4959739	Identifier	alloc_array_check_size		4959672	0					
ANR	4959740	ArgumentList	num_elements		4959672	1					
ANR	4959741	Argument	num_elements		4959672	0					
ANR	4959742	Identifier	num_elements		4959672	0					
ANR	4959743	Argument	pstype -> ssize		4959672	1					
ANR	4959744	PtrMemberAccess	pstype -> ssize		4959672	0					
ANR	4959745	Identifier	pstype		4959672	0					
ANR	4959746	Identifier	ssize		4959672	1					
ANR	4959747	Argument	& lsize		4959672	2					
ANR	4959748	UnaryOperationExpression	& lsize		4959672	0					
ANR	4959749	UnaryOperator	&		4959672	0					
ANR	4959750	Identifier	lsize		4959672	1					
ANR	4959751	Identifier	false		4959672	1					
ANR	4959752	ReturnStatement	return NULL ;	1329:8:41237:41248	4959672	1	True				
ANR	4959753	Identifier	NULL		4959672	0					
ANR	4959754	ExpressionStatement	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_DIRECT , cname )"	1330:4:41254:41311	4959672	10	True				
ANR	4959755	AssignmentExpression	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_DIRECT , cname )"		4959672	0		=			
ANR	4959756	Identifier	obj		4959672	0					
ANR	4959757	CallExpression	"alloc_obj ( imem , lsize , pstype , ALLOC_DIRECT , cname )"		4959672	1					
ANR	4959758	Callee	alloc_obj		4959672	0					
ANR	4959759	Identifier	alloc_obj		4959672	0					
ANR	4959760	ArgumentList	imem		4959672	1					
ANR	4959761	Argument	imem		4959672	0					
ANR	4959762	Identifier	imem		4959672	0					
ANR	4959763	Argument	lsize		4959672	1					
ANR	4959764	Identifier	lsize		4959672	0					
ANR	4959765	Argument	pstype		4959672	2					
ANR	4959766	Identifier	pstype		4959672	0					
ANR	4959767	Argument	ALLOC_DIRECT		4959672	3					
ANR	4959768	Identifier	ALLOC_DIRECT		4959672	0					
ANR	4959769	Argument	cname		4959672	4					
ANR	4959770	Identifier	cname		4959672	0					
ANR	4959771	ExpressionStatement	"if_debug7m ( 'A' , mem , ""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"	1331:4:41317:41602	4959672	11	True				
ANR	4959772	CallExpression	"if_debug7m ( 'A' , mem , ""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"		4959672	0					
ANR	4959773	Callee	if_debug7m		4959672	0					
ANR	4959774	Identifier	if_debug7m		4959672	0					
ANR	4959775	ArgumentList	'A'		4959672	1					
ANR	4959776	Argument	'A'		4959672	0					
ANR	4959777	PrimaryExpression	'A'		4959672	0					
ANR	4959778	Argument	mem		4959672	1					
ANR	4959779	Identifier	mem		4959672	0					
ANR	4959780	Argument	"""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		4959672	2					
ANR	4959781	PrimaryExpression	"""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		4959672	0					
ANR	4959782	Argument	alloc_trace_space ( imem )		4959672	3					
ANR	4959783	CallExpression	alloc_trace_space ( imem )		4959672	0					
ANR	4959784	Callee	alloc_trace_space		4959672	0					
ANR	4959785	Identifier	alloc_trace_space		4959672	0					
ANR	4959786	ArgumentList	imem		4959672	1					
ANR	4959787	Argument	imem		4959672	0					
ANR	4959788	Identifier	imem		4959672	0					
ANR	4959789	Argument	client_name_string ( cname )		4959672	4					
ANR	4959790	CallExpression	client_name_string ( cname )		4959672	0					
ANR	4959791	Callee	client_name_string		4959672	0					
ANR	4959792	Identifier	client_name_string		4959672	0					
ANR	4959793	ArgumentList	cname		4959672	1					
ANR	4959794	Argument	cname		4959672	0					
ANR	4959795	Identifier	cname		4959672	0					
ANR	4959796	Argument	struct_type_name_string ( pstype )		4959672	5					
ANR	4959797	CallExpression	struct_type_name_string ( pstype )		4959672	0					
ANR	4959798	Callee	struct_type_name_string		4959672	0					
ANR	4959799	Identifier	struct_type_name_string		4959672	0					
ANR	4959800	ArgumentList	pstype		4959672	1					
ANR	4959801	Argument	pstype		4959672	0					
ANR	4959802	Identifier	pstype		4959672	0					
ANR	4959803	Argument	( ulong ) num_elements * pstype -> ssize		4959672	6					
ANR	4959804	MultiplicativeExpression	( ulong ) num_elements * pstype -> ssize		4959672	0		*			
ANR	4959805	CastExpression	( ulong ) num_elements		4959672	0					
ANR	4959806	CastTarget	ulong		4959672	0					
ANR	4959807	Identifier	num_elements		4959672	1					
ANR	4959808	PtrMemberAccess	pstype -> ssize		4959672	1					
ANR	4959809	Identifier	pstype		4959672	0					
ANR	4959810	Identifier	ssize		4959672	1					
ANR	4959811	Argument	num_elements		4959672	7					
ANR	4959812	Identifier	num_elements		4959672	0					
ANR	4959813	Argument	pstype -> ssize		4959672	8					
ANR	4959814	PtrMemberAccess	pstype -> ssize		4959672	0					
ANR	4959815	Identifier	pstype		4959672	0					
ANR	4959816	Identifier	ssize		4959672	1					
ANR	4959817	Argument	( ulong ) obj		4959672	9					
ANR	4959818	CastExpression	( ulong ) obj		4959672	0					
ANR	4959819	CastTarget	ulong		4959672	0					
ANR	4959820	Identifier	obj		4959672	1					
ANR	4959821	ReturnStatement	return ( char * ) obj ;	1336:4:41608:41626	4959672	12	True				
ANR	4959822	CastExpression	( char * ) obj		4959672	0					
ANR	4959823	CastTarget	char *		4959672	0					
ANR	4959824	Identifier	obj		4959672	1					
ANR	4959825	ReturnType	static void *		4959672	1					
ANR	4959826	Identifier	i_alloc_struct_array		4959672	2					
ANR	4959827	ParameterList	"gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname"		4959672	3					
ANR	4959828	Parameter	gs_memory_t * mem	1309:21:40555:40571	4959672	0	True				
ANR	4959829	ParameterType	gs_memory_t *		4959672	0					
ANR	4959830	Identifier	mem		4959672	1					
ANR	4959831	Parameter	uint num_elements	1309:40:40574:40590	4959672	1	True				
ANR	4959832	ParameterType	uint		4959672	0					
ANR	4959833	Identifier	num_elements		4959672	1					
ANR	4959834	Parameter	gs_memory_type_ptr_t pstype	1310:21:40614:40640	4959672	2	True				
ANR	4959835	ParameterType	gs_memory_type_ptr_t		4959672	0					
ANR	4959836	Identifier	pstype		4959672	1					
ANR	4959837	Parameter	client_name_t cname	1310:50:40643:40661	4959672	3	True				
ANR	4959838	ParameterType	client_name_t		4959672	0					
ANR	4959839	Identifier	cname		4959672	1					
ANR	4959840	CFGEntryNode	ENTRY		4959672		True				
ANR	4959841	CFGExitNode	EXIT		4959672		True				
ANR	4959842	Symbol	pstype -> ssize		4959672						
ANR	4959843	Symbol	struct_type_name_string		4959672						
ANR	4959844	Symbol	NULL		4959672						
ANR	4959845	Symbol	pstype -> enum_ptrs		4959672						
ANR	4959846	Symbol	cname		4959672						
ANR	4959847	Symbol	false		4959672						
ANR	4959848	Symbol	alloc_array_check_size		4959672						
ANR	4959849	Symbol	lsize		4959672						
ANR	4959850	Symbol	ALLOC_DIRECT		4959672						
ANR	4959851	Symbol	basic_enum_ptrs		4959672						
ANR	4959852	Symbol	alloc_trace_space		4959672						
ANR	4959853	Symbol	* pstype		4959672						
ANR	4959854	Symbol	mem		4959672						
ANR	4959855	Symbol	pstype		4959672						
ANR	4959856	Symbol	pstype -> sname		4959672						
ANR	4959857	Symbol	num_elements		4959672						
ANR	4959858	Symbol	obj		4959672						
ANR	4959859	Symbol	client_name_string		4959672						
ANR	4959860	Symbol	alloc_obj		4959672						
ANR	4959861	Symbol	& lsize		4959672						
ANR	4959862	Symbol	imem		4959672						
ANR	4959863	Symbol	Memento_failThisEvent		4959672						
ANR	4959864	Function	i_alloc_struct_array_immovable	1338:0:41630:42497							
ANR	4959865	FunctionDef	"i_alloc_struct_array_immovable (gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname)"		4959864	0					
ANR	4959866	CompoundStatement		1341:0:41790:42497	4959864	0					
ANR	4959867	Statement	gs_ref_memory_t	1342:4:41796:41810	4959864	0	True				
ANR	4959868	Statement	*	1342:20:41812:41812	4959864	1	True				
ANR	4959869	Statement	const	1342:22:41814:41818	4959864	2	True				
ANR	4959870	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1342:28:41820:41849	4959864	3	True				
ANR	4959871	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4959864	0		=			
ANR	4959872	Identifier	imem		4959864	0					
ANR	4959873	CastExpression	( gs_ref_memory_t * ) mem		4959864	1					
ANR	4959874	CastTarget	gs_ref_memory_t *		4959864	0					
ANR	4959875	Identifier	mem		4959864	1					
ANR	4959876	IdentifierDeclStatement	obj_header_t * obj ;	1343:4:41855:41872	4959864	4	True				
ANR	4959877	IdentifierDecl	* obj		4959864	0					
ANR	4959878	IdentifierDeclType	obj_header_t *		4959864	0					
ANR	4959879	Identifier	obj		4959864	1					
ANR	4959880	IdentifierDeclStatement	ulong lsize ;	1344:4:41878:41889	4959864	5	True				
ANR	4959881	IdentifierDecl	lsize		4959864	0					
ANR	4959882	IdentifierDeclType	ulong		4959864	0					
ANR	4959883	Identifier	lsize		4959864	1					
ANR	4959884	IfStatement	if ( Memento_failThisEvent ( ) )		4959864	6					
ANR	4959885	Condition	Memento_failThisEvent ( )	1346:8:41914:41936	4959864	0	True				
ANR	4959886	CallExpression	Memento_failThisEvent ( )		4959864	0					
ANR	4959887	Callee	Memento_failThisEvent		4959864	0					
ANR	4959888	Identifier	Memento_failThisEvent		4959864	0					
ANR	4959889	ArgumentList			4959864	1					
ANR	4959890	ReturnStatement	return NULL ;	1347:8:41947:41958	4959864	1	True				
ANR	4959891	Identifier	NULL		4959864	0					
ANR	4959892	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1350:4:41972:42000	4959864	7	True				
ANR	4959893	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		4959864	0					
ANR	4959894	Callee	ALLOC_CHECK_SIZE		4959864	0					
ANR	4959895	Identifier	ALLOC_CHECK_SIZE		4959864	0					
ANR	4959896	ArgumentList	mem		4959864	1					
ANR	4959897	Argument	mem		4959864	0					
ANR	4959898	Identifier	mem		4959864	0					
ANR	4959899	Argument	pstype		4959864	1					
ANR	4959900	Identifier	pstype		4959864	0					
ANR	4959901	IfStatement	"if ( alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false )"		4959864	8					
ANR	4959902	Condition	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"	1351:8:42010:42077	4959864	0	True				
ANR	4959903	EqualityExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"		4959864	0		==			
ANR	4959904	CallExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize )"		4959864	0					
ANR	4959905	Callee	alloc_array_check_size		4959864	0					
ANR	4959906	Identifier	alloc_array_check_size		4959864	0					
ANR	4959907	ArgumentList	num_elements		4959864	1					
ANR	4959908	Argument	num_elements		4959864	0					
ANR	4959909	Identifier	num_elements		4959864	0					
ANR	4959910	Argument	pstype -> ssize		4959864	1					
ANR	4959911	PtrMemberAccess	pstype -> ssize		4959864	0					
ANR	4959912	Identifier	pstype		4959864	0					
ANR	4959913	Identifier	ssize		4959864	1					
ANR	4959914	Argument	& lsize		4959864	2					
ANR	4959915	UnaryOperationExpression	& lsize		4959864	0					
ANR	4959916	UnaryOperator	&		4959864	0					
ANR	4959917	Identifier	lsize		4959864	1					
ANR	4959918	Identifier	false		4959864	1					
ANR	4959919	ReturnStatement	return NULL ;	1352:8:42088:42099	4959864	1	True				
ANR	4959920	Identifier	NULL		4959864	0					
ANR	4959921	ExpressionStatement	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1353:4:42105:42180	4959864	9	True				
ANR	4959922	AssignmentExpression	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4959864	0		=			
ANR	4959923	Identifier	obj		4959864	0					
ANR	4959924	CallExpression	"alloc_obj ( imem , lsize , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		4959864	1					
ANR	4959925	Callee	alloc_obj		4959864	0					
ANR	4959926	Identifier	alloc_obj		4959864	0					
ANR	4959927	ArgumentList	imem		4959864	1					
ANR	4959928	Argument	imem		4959864	0					
ANR	4959929	Identifier	imem		4959864	0					
ANR	4959930	Argument	lsize		4959864	1					
ANR	4959931	Identifier	lsize		4959864	0					
ANR	4959932	Argument	pstype		4959864	2					
ANR	4959933	Identifier	pstype		4959864	0					
ANR	4959934	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		4959864	3					
ANR	4959935	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		4959864	0		|			
ANR	4959936	Identifier	ALLOC_IMMOVABLE		4959864	0					
ANR	4959937	Identifier	ALLOC_DIRECT		4959864	1					
ANR	4959938	Argument	cname		4959864	4					
ANR	4959939	Identifier	cname		4959864	0					
ANR	4959940	ExpressionStatement	"if_debug7m ( 'A' , mem , ""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"	1354:4:42186:42471	4959864	10	True				
ANR	4959941	CallExpression	"if_debug7m ( 'A' , mem , ""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"		4959864	0					
ANR	4959942	Callee	if_debug7m		4959864	0					
ANR	4959943	Identifier	if_debug7m		4959864	0					
ANR	4959944	ArgumentList	'A'		4959864	1					
ANR	4959945	Argument	'A'		4959864	0					
ANR	4959946	PrimaryExpression	'A'		4959864	0					
ANR	4959947	Argument	mem		4959864	1					
ANR	4959948	Identifier	mem		4959864	0					
ANR	4959949	Argument	"""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		4959864	2					
ANR	4959950	PrimaryExpression	"""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		4959864	0					
ANR	4959951	Argument	alloc_trace_space ( imem )		4959864	3					
ANR	4959952	CallExpression	alloc_trace_space ( imem )		4959864	0					
ANR	4959953	Callee	alloc_trace_space		4959864	0					
ANR	4959954	Identifier	alloc_trace_space		4959864	0					
ANR	4959955	ArgumentList	imem		4959864	1					
ANR	4959956	Argument	imem		4959864	0					
ANR	4959957	Identifier	imem		4959864	0					
ANR	4959958	Argument	client_name_string ( cname )		4959864	4					
ANR	4959959	CallExpression	client_name_string ( cname )		4959864	0					
ANR	4959960	Callee	client_name_string		4959864	0					
ANR	4959961	Identifier	client_name_string		4959864	0					
ANR	4959962	ArgumentList	cname		4959864	1					
ANR	4959963	Argument	cname		4959864	0					
ANR	4959964	Identifier	cname		4959864	0					
ANR	4959965	Argument	struct_type_name_string ( pstype )		4959864	5					
ANR	4959966	CallExpression	struct_type_name_string ( pstype )		4959864	0					
ANR	4959967	Callee	struct_type_name_string		4959864	0					
ANR	4959968	Identifier	struct_type_name_string		4959864	0					
ANR	4959969	ArgumentList	pstype		4959864	1					
ANR	4959970	Argument	pstype		4959864	0					
ANR	4959971	Identifier	pstype		4959864	0					
ANR	4959972	Argument	( ulong ) num_elements * pstype -> ssize		4959864	6					
ANR	4959973	MultiplicativeExpression	( ulong ) num_elements * pstype -> ssize		4959864	0		*			
ANR	4959974	CastExpression	( ulong ) num_elements		4959864	0					
ANR	4959975	CastTarget	ulong		4959864	0					
ANR	4959976	Identifier	num_elements		4959864	1					
ANR	4959977	PtrMemberAccess	pstype -> ssize		4959864	1					
ANR	4959978	Identifier	pstype		4959864	0					
ANR	4959979	Identifier	ssize		4959864	1					
ANR	4959980	Argument	num_elements		4959864	7					
ANR	4959981	Identifier	num_elements		4959864	0					
ANR	4959982	Argument	pstype -> ssize		4959864	8					
ANR	4959983	PtrMemberAccess	pstype -> ssize		4959864	0					
ANR	4959984	Identifier	pstype		4959864	0					
ANR	4959985	Identifier	ssize		4959864	1					
ANR	4959986	Argument	( ulong ) obj		4959864	9					
ANR	4959987	CastExpression	( ulong ) obj		4959864	0					
ANR	4959988	CastTarget	ulong		4959864	0					
ANR	4959989	Identifier	obj		4959864	1					
ANR	4959990	ReturnStatement	return ( char * ) obj ;	1359:4:42477:42495	4959864	11	True				
ANR	4959991	CastExpression	( char * ) obj		4959864	0					
ANR	4959992	CastTarget	char *		4959864	0					
ANR	4959993	Identifier	obj		4959864	1					
ANR	4959994	ReturnType	static void *		4959864	1					
ANR	4959995	Identifier	i_alloc_struct_array_immovable		4959864	2					
ANR	4959996	ParameterList	"gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname"		4959864	3					
ANR	4959997	Parameter	gs_memory_t * mem	1339:31:41675:41691	4959864	0	True				
ANR	4959998	ParameterType	gs_memory_t *		4959864	0					
ANR	4959999	Identifier	mem		4959864	1					
ANR	4960000	Parameter	uint num_elements	1339:50:41694:41710	4959864	1	True				
ANR	4960001	ParameterType	uint		4959864	0					
ANR	4960002	Identifier	num_elements		4959864	1					
ANR	4960003	Parameter	gs_memory_type_ptr_t pstype	1340:27:41740:41766	4959864	2	True				
ANR	4960004	ParameterType	gs_memory_type_ptr_t		4959864	0					
ANR	4960005	Identifier	pstype		4959864	1					
ANR	4960006	Parameter	client_name_t cname	1340:56:41769:41787	4959864	3	True				
ANR	4960007	ParameterType	client_name_t		4959864	0					
ANR	4960008	Identifier	cname		4959864	1					
ANR	4960009	CFGEntryNode	ENTRY		4959864		True				
ANR	4960010	CFGExitNode	EXIT		4959864		True				
ANR	4960011	Symbol	pstype -> ssize		4959864						
ANR	4960012	Symbol	struct_type_name_string		4959864						
ANR	4960013	Symbol	NULL		4959864						
ANR	4960014	Symbol	cname		4959864						
ANR	4960015	Symbol	false		4959864						
ANR	4960016	Symbol	ALLOC_IMMOVABLE		4959864						
ANR	4960017	Symbol	alloc_array_check_size		4959864						
ANR	4960018	Symbol	lsize		4959864						
ANR	4960019	Symbol	ALLOC_DIRECT		4959864						
ANR	4960020	Symbol	alloc_trace_space		4959864						
ANR	4960021	Symbol	* pstype		4959864						
ANR	4960022	Symbol	mem		4959864						
ANR	4960023	Symbol	pstype		4959864						
ANR	4960024	Symbol	num_elements		4959864						
ANR	4960025	Symbol	obj		4959864						
ANR	4960026	Symbol	client_name_string		4959864						
ANR	4960027	Symbol	alloc_obj		4959864						
ANR	4960028	Symbol	& lsize		4959864						
ANR	4960029	Symbol	imem		4959864						
ANR	4960030	Symbol	Memento_failThisEvent		4959864						
ANR	4960031	Function	i_resize_object	1361:0:42499:44448							
ANR	4960032	FunctionDef	"i_resize_object (gs_memory_t * mem , void * obj , uint new_num_elements , client_name_t cname)"		4960031	0					
ANR	4960033	CompoundStatement		1364:0:42619:44448	4960031	0					
ANR	4960034	Statement	gs_ref_memory_t	1365:4:42625:42639	4960031	0	True				
ANR	4960035	Statement	*	1365:20:42641:42641	4960031	1	True				
ANR	4960036	Statement	const	1365:22:42643:42647	4960031	2	True				
ANR	4960037	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1365:28:42649:42678	4960031	3	True				
ANR	4960038	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4960031	0		=			
ANR	4960039	Identifier	imem		4960031	0					
ANR	4960040	CastExpression	( gs_ref_memory_t * ) mem		4960031	1					
ANR	4960041	CastTarget	gs_ref_memory_t *		4960031	0					
ANR	4960042	Identifier	mem		4960031	1					
ANR	4960043	IdentifierDeclStatement	obj_header_t * pp = ( obj_header_t * ) obj - 1 ;	1366:4:42684:42727	4960031	4	True				
ANR	4960044	IdentifierDecl	* pp = ( obj_header_t * ) obj - 1		4960031	0					
ANR	4960045	IdentifierDeclType	obj_header_t *		4960031	0					
ANR	4960046	Identifier	pp		4960031	1					
ANR	4960047	AssignmentExpression	* pp = ( obj_header_t * ) obj - 1		4960031	2		=			
ANR	4960048	Identifier	pp		4960031	0					
ANR	4960049	AdditiveExpression	( obj_header_t * ) obj - 1		4960031	1		-			
ANR	4960050	CastExpression	( obj_header_t * ) obj		4960031	0					
ANR	4960051	CastTarget	obj_header_t *		4960031	0					
ANR	4960052	Identifier	obj		4960031	1					
ANR	4960053	PrimaryExpression	1		4960031	1					
ANR	4960054	IdentifierDeclStatement	gs_memory_type_ptr_t pstype = pp -> o_type ;	1367:4:42733:42773	4960031	5	True				
ANR	4960055	IdentifierDecl	pstype = pp -> o_type		4960031	0					
ANR	4960056	IdentifierDeclType	gs_memory_type_ptr_t		4960031	0					
ANR	4960057	Identifier	pstype		4960031	1					
ANR	4960058	AssignmentExpression	pstype = pp -> o_type		4960031	2		=			
ANR	4960059	Identifier	pstype		4960031	0					
ANR	4960060	PtrMemberAccess	pp -> o_type		4960031	1					
ANR	4960061	Identifier	pp		4960031	0					
ANR	4960062	Identifier	o_type		4960031	1					
ANR	4960063	IdentifierDeclStatement	ulong old_size = pre_obj_contents_size ( pp ) ;	1368:4:42779:42821	4960031	6	True				
ANR	4960064	IdentifierDecl	old_size = pre_obj_contents_size ( pp )		4960031	0					
ANR	4960065	IdentifierDeclType	ulong		4960031	0					
ANR	4960066	Identifier	old_size		4960031	1					
ANR	4960067	AssignmentExpression	old_size = pre_obj_contents_size ( pp )		4960031	2		=			
ANR	4960068	Identifier	old_size		4960031	0					
ANR	4960069	CallExpression	pre_obj_contents_size ( pp )		4960031	1					
ANR	4960070	Callee	pre_obj_contents_size		4960031	0					
ANR	4960071	Identifier	pre_obj_contents_size		4960031	0					
ANR	4960072	ArgumentList	pp		4960031	1					
ANR	4960073	Argument	pp		4960031	0					
ANR	4960074	Identifier	pp		4960031	0					
ANR	4960075	IdentifierDeclStatement	ulong new_size = ( ulong ) pstype -> ssize * new_num_elements ;	1369:4:42827:42884	4960031	7	True				
ANR	4960076	IdentifierDecl	new_size = ( ulong ) pstype -> ssize * new_num_elements		4960031	0					
ANR	4960077	IdentifierDeclType	ulong		4960031	0					
ANR	4960078	Identifier	new_size		4960031	1					
ANR	4960079	AssignmentExpression	new_size = ( ulong ) pstype -> ssize * new_num_elements		4960031	2		=			
ANR	4960080	Identifier	new_size		4960031	0					
ANR	4960081	MultiplicativeExpression	( ulong ) pstype -> ssize * new_num_elements		4960031	1		*			
ANR	4960082	CastExpression	( ulong ) pstype -> ssize		4960031	0					
ANR	4960083	CastTarget	ulong		4960031	0					
ANR	4960084	PtrMemberAccess	pstype -> ssize		4960031	1					
ANR	4960085	Identifier	pstype		4960031	0					
ANR	4960086	Identifier	ssize		4960031	1					
ANR	4960087	Identifier	new_num_elements		4960031	1					
ANR	4960088	IdentifierDeclStatement	ulong old_size_rounded = obj_align_round ( old_size ) ;	1370:4:42890:42940	4960031	8	True				
ANR	4960089	IdentifierDecl	old_size_rounded = obj_align_round ( old_size )		4960031	0					
ANR	4960090	IdentifierDeclType	ulong		4960031	0					
ANR	4960091	Identifier	old_size_rounded		4960031	1					
ANR	4960092	AssignmentExpression	old_size_rounded = obj_align_round ( old_size )		4960031	2		=			
ANR	4960093	Identifier	old_size_rounded		4960031	0					
ANR	4960094	CallExpression	obj_align_round ( old_size )		4960031	1					
ANR	4960095	Callee	obj_align_round		4960031	0					
ANR	4960096	Identifier	obj_align_round		4960031	0					
ANR	4960097	ArgumentList	old_size		4960031	1					
ANR	4960098	Argument	old_size		4960031	0					
ANR	4960099	Identifier	old_size		4960031	0					
ANR	4960100	IdentifierDeclStatement	ulong new_size_rounded = obj_align_round ( new_size ) ;	1371:4:42946:42996	4960031	9	True				
ANR	4960101	IdentifierDecl	new_size_rounded = obj_align_round ( new_size )		4960031	0					
ANR	4960102	IdentifierDeclType	ulong		4960031	0					
ANR	4960103	Identifier	new_size_rounded		4960031	1					
ANR	4960104	AssignmentExpression	new_size_rounded = obj_align_round ( new_size )		4960031	2		=			
ANR	4960105	Identifier	new_size_rounded		4960031	0					
ANR	4960106	CallExpression	obj_align_round ( new_size )		4960031	1					
ANR	4960107	Callee	obj_align_round		4960031	0					
ANR	4960108	Identifier	obj_align_round		4960031	0					
ANR	4960109	ArgumentList	new_size		4960031	1					
ANR	4960110	Argument	new_size		4960031	0					
ANR	4960111	Identifier	new_size		4960031	0					
ANR	4960112	IdentifierDeclStatement	void * new_obj = NULL ;	1372:4:43002:43022	4960031	10	True				
ANR	4960113	IdentifierDecl	* new_obj = NULL		4960031	0					
ANR	4960114	IdentifierDeclType	void *		4960031	0					
ANR	4960115	Identifier	new_obj		4960031	1					
ANR	4960116	AssignmentExpression	* new_obj = NULL		4960031	2		=			
ANR	4960117	Identifier	NULL		4960031	0					
ANR	4960118	Identifier	NULL		4960031	1					
ANR	4960119	IfStatement	if ( Memento_failThisEvent ( ) )		4960031	11					
ANR	4960120	Condition	Memento_failThisEvent ( )	1375:8:43048:43070	4960031	0	True				
ANR	4960121	CallExpression	Memento_failThisEvent ( )		4960031	0					
ANR	4960122	Callee	Memento_failThisEvent		4960031	0					
ANR	4960123	Identifier	Memento_failThisEvent		4960031	0					
ANR	4960124	ArgumentList			4960031	1					
ANR	4960125	ReturnStatement	return NULL ;	1376:8:43081:43092	4960031	1	True				
ANR	4960126	Identifier	NULL		4960031	0					
ANR	4960127	IfStatement	if ( old_size_rounded == new_size_rounded )		4960031	12					
ANR	4960128	Condition	old_size_rounded == new_size_rounded	1379:8:43110:43145	4960031	0	True				
ANR	4960129	EqualityExpression	old_size_rounded == new_size_rounded		4960031	0		==			
ANR	4960130	Identifier	old_size_rounded		4960031	0					
ANR	4960131	Identifier	new_size_rounded		4960031	1					
ANR	4960132	CompoundStatement		16:46:528:528	4960031	1					
ANR	4960133	ExpressionStatement	pp -> o_size = new_size	1380:8:43158:43179	4960031	0	True				
ANR	4960134	AssignmentExpression	pp -> o_size = new_size		4960031	0		=			
ANR	4960135	PtrMemberAccess	pp -> o_size		4960031	0					
ANR	4960136	Identifier	pp		4960031	0					
ANR	4960137	Identifier	o_size		4960031	1					
ANR	4960138	Identifier	new_size		4960031	1					
ANR	4960139	ExpressionStatement	new_obj = obj	1381:8:43189:43202	4960031	1	True				
ANR	4960140	AssignmentExpression	new_obj = obj		4960031	0		=			
ANR	4960141	Identifier	new_obj		4960031	0					
ANR	4960142	Identifier	obj		4960031	1					
ANR	4960143	ElseStatement	else		4960031	0					
ANR	4960144	IfStatement	if ( imem -> cc && ( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded )		4960031	0					
ANR	4960145	Condition	imem -> cc && ( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded	1383:12:43227:43350	4960031	0	True				
ANR	4960146	AndExpression	imem -> cc && ( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded		4960031	0		&&			
ANR	4960147	PtrMemberAccess	imem -> cc		4960031	0					
ANR	4960148	Identifier	imem		4960031	0					
ANR	4960149	Identifier	cc		4960031	1					
ANR	4960150	AndExpression	( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded		4960031	1		&&			
ANR	4960151	EqualityExpression	( byte * ) obj + old_size_rounded == imem -> cc -> cbot		4960031	0		==			
ANR	4960152	AdditiveExpression	( byte * ) obj + old_size_rounded		4960031	0		+			
ANR	4960153	CastExpression	( byte * ) obj		4960031	0					
ANR	4960154	CastTarget	byte *		4960031	0					
ANR	4960155	Identifier	obj		4960031	1					
ANR	4960156	Identifier	old_size_rounded		4960031	1					
ANR	4960157	PtrMemberAccess	imem -> cc -> cbot		4960031	1					
ANR	4960158	PtrMemberAccess	imem -> cc		4960031	0					
ANR	4960159	Identifier	imem		4960031	0					
ANR	4960160	Identifier	cc		4960031	1					
ANR	4960161	Identifier	cbot		4960031	1					
ANR	4960162	RelationalExpression	imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded		4960031	1		>=			
ANR	4960163	AdditiveExpression	imem -> cc -> ctop - ( byte * ) obj		4960031	0		-			
ANR	4960164	PtrMemberAccess	imem -> cc -> ctop		4960031	0					
ANR	4960165	PtrMemberAccess	imem -> cc		4960031	0					
ANR	4960166	Identifier	imem		4960031	0					
ANR	4960167	Identifier	cc		4960031	1					
ANR	4960168	Identifier	ctop		4960031	1					
ANR	4960169	CastExpression	( byte * ) obj		4960031	1					
ANR	4960170	CastTarget	byte *		4960031	0					
ANR	4960171	Identifier	obj		4960031	1					
ANR	4960172	Identifier	new_size_rounded		4960031	1					
ANR	4960173	CompoundStatement		21:63:734:734	4960031	1					
ANR	4960174	ExpressionStatement	imem -> cc -> cbot = ( byte * ) obj + new_size_rounded	1385:12:43368:43415	4960031	0	True				
ANR	4960175	AssignmentExpression	imem -> cc -> cbot = ( byte * ) obj + new_size_rounded		4960031	0		=			
ANR	4960176	PtrMemberAccess	imem -> cc -> cbot		4960031	0					
ANR	4960177	PtrMemberAccess	imem -> cc		4960031	0					
ANR	4960178	Identifier	imem		4960031	0					
ANR	4960179	Identifier	cc		4960031	1					
ANR	4960180	Identifier	cbot		4960031	1					
ANR	4960181	AdditiveExpression	( byte * ) obj + new_size_rounded		4960031	1		+			
ANR	4960182	CastExpression	( byte * ) obj		4960031	0					
ANR	4960183	CastTarget	byte *		4960031	0					
ANR	4960184	Identifier	obj		4960031	1					
ANR	4960185	Identifier	new_size_rounded		4960031	1					
ANR	4960186	ExpressionStatement	pp -> o_size = new_size	1386:12:43429:43450	4960031	1	True				
ANR	4960187	AssignmentExpression	pp -> o_size = new_size		4960031	0		=			
ANR	4960188	PtrMemberAccess	pp -> o_size		4960031	0					
ANR	4960189	Identifier	pp		4960031	0					
ANR	4960190	Identifier	o_size		4960031	1					
ANR	4960191	Identifier	new_size		4960031	1					
ANR	4960192	ExpressionStatement	new_obj = obj	1387:12:43464:43477	4960031	2	True				
ANR	4960193	AssignmentExpression	new_obj = obj		4960031	0		=			
ANR	4960194	Identifier	new_obj		4960031	0					
ANR	4960195	Identifier	obj		4960031	1					
ANR	4960196	ElseStatement	else		4960031	0					
ANR	4960197	IfStatement	if ( new_size_rounded + sizeof ( obj_header_t ) <= old_size_rounded )		4960031	0					
ANR	4960198	Condition	new_size_rounded + sizeof ( obj_header_t ) <= old_size_rounded	1389:16:43579:43637	4960031	0	True				
ANR	4960199	RelationalExpression	new_size_rounded + sizeof ( obj_header_t ) <= old_size_rounded		4960031	0		<=			
ANR	4960200	AdditiveExpression	new_size_rounded + sizeof ( obj_header_t )		4960031	0		+			
ANR	4960201	Identifier	new_size_rounded		4960031	0					
ANR	4960202	SizeofExpression	sizeof ( obj_header_t )		4960031	1					
ANR	4960203	Sizeof	sizeof		4960031	0					
ANR	4960204	SizeofOperand	obj_header_t		4960031	1					
ANR	4960205	Identifier	old_size_rounded		4960031	1					
ANR	4960206	CompoundStatement		26:77:1020:1020	4960031	1					
ANR	4960207	ExpressionStatement	"trim_obj ( imem , obj , new_size , ( clump_t * ) 0 )"	1390:16:43658:43701	4960031	0	True				
ANR	4960208	CallExpression	"trim_obj ( imem , obj , new_size , ( clump_t * ) 0 )"		4960031	0					
ANR	4960209	Callee	trim_obj		4960031	0					
ANR	4960210	Identifier	trim_obj		4960031	0					
ANR	4960211	ArgumentList	imem		4960031	1					
ANR	4960212	Argument	imem		4960031	0					
ANR	4960213	Identifier	imem		4960031	0					
ANR	4960214	Argument	obj		4960031	1					
ANR	4960215	Identifier	obj		4960031	0					
ANR	4960216	Argument	new_size		4960031	2					
ANR	4960217	Identifier	new_size		4960031	0					
ANR	4960218	Argument	( clump_t * ) 0		4960031	3					
ANR	4960219	CastExpression	( clump_t * ) 0		4960031	0					
ANR	4960220	CastTarget	clump_t *		4960031	0					
ANR	4960221	PrimaryExpression	0		4960031	1					
ANR	4960222	ExpressionStatement	new_obj = obj	1391:16:43719:43732	4960031	1	True				
ANR	4960223	AssignmentExpression	new_obj = obj		4960031	0		=			
ANR	4960224	Identifier	new_obj		4960031	0					
ANR	4960225	Identifier	obj		4960031	1					
ANR	4960226	IfStatement	if ( new_obj )		4960031	13					
ANR	4960227	Condition	new_obj	1393:8:43756:43762	4960031	0	True				
ANR	4960228	Identifier	new_obj		4960031	0					
ANR	4960229	CompoundStatement		30:17:1145:1145	4960031	1					
ANR	4960230	ExpressionStatement	"if_debug8m ( 'A' , mem , ""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_size > old_size ? '>' : '<' ) , ( pstype == & st_bytes ? 'b' : '<' ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , old_size , new_size , ( ulong ) obj )"	1394:8:43775:44135	4960031	0	True				
ANR	4960231	CallExpression	"if_debug8m ( 'A' , mem , ""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_size > old_size ? '>' : '<' ) , ( pstype == & st_bytes ? 'b' : '<' ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , old_size , new_size , ( ulong ) obj )"		4960031	0					
ANR	4960232	Callee	if_debug8m		4960031	0					
ANR	4960233	Identifier	if_debug8m		4960031	0					
ANR	4960234	ArgumentList	'A'		4960031	1					
ANR	4960235	Argument	'A'		4960031	0					
ANR	4960236	PrimaryExpression	'A'		4960031	0					
ANR	4960237	Argument	mem		4960031	1					
ANR	4960238	Identifier	mem		4960031	0					
ANR	4960239	Argument	"""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"""		4960031	2					
ANR	4960240	PrimaryExpression	"""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"""		4960031	0					
ANR	4960241	Argument	alloc_trace_space ( imem )		4960031	3					
ANR	4960242	CallExpression	alloc_trace_space ( imem )		4960031	0					
ANR	4960243	Callee	alloc_trace_space		4960031	0					
ANR	4960244	Identifier	alloc_trace_space		4960031	0					
ANR	4960245	ArgumentList	imem		4960031	1					
ANR	4960246	Argument	imem		4960031	0					
ANR	4960247	Identifier	imem		4960031	0					
ANR	4960248	Argument	new_size > old_size ? '>' : '<'		4960031	4					
ANR	4960249	ConditionalExpression	new_size > old_size ? '>' : '<'		4960031	0					
ANR	4960250	Condition	new_size > old_size		4960031	0					
ANR	4960251	RelationalExpression	new_size > old_size		4960031	0		>			
ANR	4960252	Identifier	new_size		4960031	0					
ANR	4960253	Identifier	old_size		4960031	1					
ANR	4960254	PrimaryExpression	'>'		4960031	1					
ANR	4960255	PrimaryExpression	'<'		4960031	2					
ANR	4960256	Argument	pstype == & st_bytes ? 'b' : '<'		4960031	5					
ANR	4960257	ConditionalExpression	pstype == & st_bytes ? 'b' : '<'		4960031	0					
ANR	4960258	Condition	pstype == & st_bytes		4960031	0					
ANR	4960259	EqualityExpression	pstype == & st_bytes		4960031	0		==			
ANR	4960260	Identifier	pstype		4960031	0					
ANR	4960261	UnaryOperationExpression	& st_bytes		4960031	1					
ANR	4960262	UnaryOperator	&		4960031	0					
ANR	4960263	Identifier	st_bytes		4960031	1					
ANR	4960264	PrimaryExpression	'b'		4960031	1					
ANR	4960265	PrimaryExpression	'<'		4960031	2					
ANR	4960266	Argument	client_name_string ( cname )		4960031	6					
ANR	4960267	CallExpression	client_name_string ( cname )		4960031	0					
ANR	4960268	Callee	client_name_string		4960031	0					
ANR	4960269	Identifier	client_name_string		4960031	0					
ANR	4960270	ArgumentList	cname		4960031	1					
ANR	4960271	Argument	cname		4960031	0					
ANR	4960272	Identifier	cname		4960031	0					
ANR	4960273	Argument	struct_type_name_string ( pstype )		4960031	7					
ANR	4960274	CallExpression	struct_type_name_string ( pstype )		4960031	0					
ANR	4960275	Callee	struct_type_name_string		4960031	0					
ANR	4960276	Identifier	struct_type_name_string		4960031	0					
ANR	4960277	ArgumentList	pstype		4960031	1					
ANR	4960278	Argument	pstype		4960031	0					
ANR	4960279	Identifier	pstype		4960031	0					
ANR	4960280	Argument	old_size		4960031	8					
ANR	4960281	Identifier	old_size		4960031	0					
ANR	4960282	Argument	new_size		4960031	9					
ANR	4960283	Identifier	new_size		4960031	0					
ANR	4960284	Argument	( ulong ) obj		4960031	10					
ANR	4960285	CastExpression	( ulong ) obj		4960031	0					
ANR	4960286	CastTarget	ulong		4960031	0					
ANR	4960287	Identifier	obj		4960031	1					
ANR	4960288	ReturnStatement	return new_obj ;	1401:8:44145:44159	4960031	1	True				
ANR	4960289	Identifier	new_obj		4960031	0					
ANR	4960290	Statement	new_obj	1404:4:44187:44193	4960031	14	True				
ANR	4960291	Statement	=	1404:12:44195:44195	4960031	15	True				
ANR	4960292	Statement	gs_alloc_struct_array	1404:14:44197:44217	4960031	16	True				
ANR	4960293	Statement	(	1404:35:44218:44218	4960031	17	True				
ANR	4960294	Statement	mem	1404:36:44219:44221	4960031	18	True				
ANR	4960295	Statement	","	1404:39:44222:44222	4960031	19	True				
ANR	4960296	Statement	new_num_elements	1404:41:44224:44239	4960031	20	True				
ANR	4960297	Statement	","	1404:57:44240:44240	4960031	21	True				
ANR	4960298	Statement	void	1404:59:44242:44245	4960031	22	True				
ANR	4960299	Statement	","	1404:63:44246:44246	4960031	23	True				
ANR	4960300	Statement	pstype	1405:36:44284:44289	4960031	24	True				
ANR	4960301	Statement	","	1405:42:44290:44290	4960031	25	True				
ANR	4960302	Statement	cname	1405:44:44292:44296	4960031	26	True				
ANR	4960303	Statement	)	1405:49:44297:44297	4960031	27	True				
ANR	4960304	ExpressionStatement		1405:50:44298:44298	4960031	28	True				
ANR	4960305	IfStatement	if ( new_obj == 0 )		4960031	29					
ANR	4960306	Condition	new_obj == 0	1406:8:44308:44319	4960031	0	True				
ANR	4960307	EqualityExpression	new_obj == 0		4960031	0		==			
ANR	4960308	Identifier	new_obj		4960031	0					
ANR	4960309	PrimaryExpression	0		4960031	1					
ANR	4960310	ReturnStatement	return 0 ;	1407:8:44330:44338	4960031	1	True				
ANR	4960311	PrimaryExpression	0		4960031	0					
ANR	4960312	ExpressionStatement	"memcpy ( new_obj , obj , min ( old_size , new_size ) )"	1408:4:44344:44389	4960031	30	True				
ANR	4960313	CallExpression	"memcpy ( new_obj , obj , min ( old_size , new_size ) )"		4960031	0					
ANR	4960314	Callee	memcpy		4960031	0					
ANR	4960315	Identifier	memcpy		4960031	0					
ANR	4960316	ArgumentList	new_obj		4960031	1					
ANR	4960317	Argument	new_obj		4960031	0					
ANR	4960318	Identifier	new_obj		4960031	0					
ANR	4960319	Argument	obj		4960031	1					
ANR	4960320	Identifier	obj		4960031	0					
ANR	4960321	Argument	"min ( old_size , new_size )"		4960031	2					
ANR	4960322	CallExpression	"min ( old_size , new_size )"		4960031	0					
ANR	4960323	Callee	min		4960031	0					
ANR	4960324	Identifier	min		4960031	0					
ANR	4960325	ArgumentList	old_size		4960031	1					
ANR	4960326	Argument	old_size		4960031	0					
ANR	4960327	Identifier	old_size		4960031	0					
ANR	4960328	Argument	new_size		4960031	1					
ANR	4960329	Identifier	new_size		4960031	0					
ANR	4960330	ExpressionStatement	"gs_free_object ( mem , obj , cname )"	1409:4:44395:44426	4960031	31	True				
ANR	4960331	CallExpression	"gs_free_object ( mem , obj , cname )"		4960031	0					
ANR	4960332	Callee	gs_free_object		4960031	0					
ANR	4960333	Identifier	gs_free_object		4960031	0					
ANR	4960334	ArgumentList	mem		4960031	1					
ANR	4960335	Argument	mem		4960031	0					
ANR	4960336	Identifier	mem		4960031	0					
ANR	4960337	Argument	obj		4960031	1					
ANR	4960338	Identifier	obj		4960031	0					
ANR	4960339	Argument	cname		4960031	2					
ANR	4960340	Identifier	cname		4960031	0					
ANR	4960341	ReturnStatement	return new_obj ;	1410:4:44432:44446	4960031	32	True				
ANR	4960342	Identifier	new_obj		4960031	0					
ANR	4960343	ReturnType	static void *		4960031	1					
ANR	4960344	Identifier	i_resize_object		4960031	2					
ANR	4960345	ParameterList	"gs_memory_t * mem , void * obj , uint new_num_elements , client_name_t cname"		4960031	3					
ANR	4960346	Parameter	gs_memory_t * mem	1362:16:42529:42545	4960031	0	True				
ANR	4960347	ParameterType	gs_memory_t *		4960031	0					
ANR	4960348	Identifier	mem		4960031	1					
ANR	4960349	Parameter	void * obj	1362:35:42548:42556	4960031	1	True				
ANR	4960350	ParameterType	void *		4960031	0					
ANR	4960351	Identifier	obj		4960031	1					
ANR	4960352	Parameter	uint new_num_elements	1362:46:42559:42579	4960031	2	True				
ANR	4960353	ParameterType	uint		4960031	0					
ANR	4960354	Identifier	new_num_elements		4960031	1					
ANR	4960355	Parameter	client_name_t cname	1363:16:42598:42616	4960031	3	True				
ANR	4960356	ParameterType	client_name_t		4960031	0					
ANR	4960357	Identifier	cname		4960031	1					
ANR	4960358	CFGEntryNode	ENTRY		4960031		True				
ANR	4960359	CFGExitNode	EXIT		4960031		True				
ANR	4960360	Symbol	pp		4960031						
ANR	4960361	Symbol	pstype -> ssize		4960031						
ANR	4960362	Symbol	old_size		4960031						
ANR	4960363	Symbol	obj_align_round		4960031						
ANR	4960364	Symbol	cname		4960031						
ANR	4960365	Symbol	imem -> cc		4960031						
ANR	4960366	Symbol	alloc_trace_space		4960031						
ANR	4960367	Symbol	* pstype		4960031						
ANR	4960368	Symbol	min		4960031						
ANR	4960369	Symbol	mem		4960031						
ANR	4960370	Symbol	pstype		4960031						
ANR	4960371	Symbol	new_size		4960031						
ANR	4960372	Symbol	old_size_rounded		4960031						
ANR	4960373	Symbol	new_obj		4960031						
ANR	4960374	Symbol	new_size_rounded		4960031						
ANR	4960375	Symbol	pre_obj_contents_size		4960031						
ANR	4960376	Symbol	* imem -> cc		4960031						
ANR	4960377	Symbol	* imem		4960031						
ANR	4960378	Symbol	pp -> o_type		4960031						
ANR	4960379	Symbol	Memento_failThisEvent		4960031						
ANR	4960380	Symbol	* * imem		4960031						
ANR	4960381	Symbol	struct_type_name_string		4960031						
ANR	4960382	Symbol	NULL		4960031						
ANR	4960383	Symbol	* pp		4960031						
ANR	4960384	Symbol	imem -> cc -> ctop		4960031						
ANR	4960385	Symbol	pp -> o_size		4960031						
ANR	4960386	Symbol	& st_bytes		4960031						
ANR	4960387	Symbol	new_num_elements		4960031						
ANR	4960388	Symbol	obj		4960031						
ANR	4960389	Symbol	imem -> cc -> cbot		4960031						
ANR	4960390	Symbol	client_name_string		4960031						
ANR	4960391	Symbol	imem		4960031						
ANR	4960392	Function	i_free_object	1412:0:44450:50539							
ANR	4960393	FunctionDef	"i_free_object (gs_memory_t * mem , void * ptr , client_name_t cname)"		4960392	0					
ANR	4960394	CompoundStatement		1414:0:44527:50539	4960392	0					
ANR	4960395	Statement	gs_ref_memory_t	1415:4:44533:44547	4960392	0	True				
ANR	4960396	Statement	*	1415:20:44549:44549	4960392	1	True				
ANR	4960397	Statement	const	1415:22:44551:44555	4960392	2	True				
ANR	4960398	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1415:28:44557:44586	4960392	3	True				
ANR	4960399	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4960392	0		=			
ANR	4960400	Identifier	imem		4960392	0					
ANR	4960401	CastExpression	( gs_ref_memory_t * ) mem		4960392	1					
ANR	4960402	CastTarget	gs_ref_memory_t *		4960392	0					
ANR	4960403	Identifier	mem		4960392	1					
ANR	4960404	IdentifierDeclStatement	obj_header_t * pp ;	1416:4:44592:44608	4960392	4	True				
ANR	4960405	IdentifierDecl	* pp		4960392	0					
ANR	4960406	IdentifierDeclType	obj_header_t *		4960392	0					
ANR	4960407	Identifier	pp		4960392	1					
ANR	4960408	IdentifierDeclStatement	gs_memory_type_ptr_t pstype ;	1417:4:44614:44641	4960392	5	True				
ANR	4960409	IdentifierDecl	pstype		4960392	0					
ANR	4960410	IdentifierDeclType	gs_memory_type_ptr_t		4960392	0					
ANR	4960411	Identifier	pstype		4960392	1					
ANR	4960412	IdentifierDeclStatement	gs_memory_struct_type_t saved_stype ;	1418:4:44647:44682	4960392	6	True				
ANR	4960413	IdentifierDecl	saved_stype		4960392	0					
ANR	4960414	IdentifierDeclType	gs_memory_struct_type_t		4960392	0					
ANR	4960415	Identifier	saved_stype		4960392	1					
ANR	4960416	ExpressionStatement	struct_proc_finalize ( ( * finalize ) )	1420:4:44689:44722	4960392	7	True				
ANR	4960417	CallExpression	struct_proc_finalize ( ( * finalize ) )		4960392	0					
ANR	4960418	Callee	struct_proc_finalize		4960392	0					
ANR	4960419	Identifier	struct_proc_finalize		4960392	0					
ANR	4960420	ArgumentList	* finalize		4960392	1					
ANR	4960421	Argument	* finalize		4960392	0					
ANR	4960422	UnaryOperationExpression	* finalize		4960392	0					
ANR	4960423	UnaryOperator	*		4960392	0					
ANR	4960424	Identifier	finalize		4960392	1					
ANR	4960425	IdentifierDeclStatement	"uint size , rounded_size ;"	1421:4:44728:44751	4960392	8	True				
ANR	4960426	IdentifierDecl	size		4960392	0					
ANR	4960427	IdentifierDeclType	uint		4960392	0					
ANR	4960428	Identifier	size		4960392	1					
ANR	4960429	IdentifierDecl	rounded_size		4960392	1					
ANR	4960430	IdentifierDeclType	uint		4960392	0					
ANR	4960431	Identifier	rounded_size		4960392	1					
ANR	4960432	IfStatement	if ( ptr == 0 )		4960392	9					
ANR	4960433	Condition	ptr == 0	1423:8:44762:44769	4960392	0	True				
ANR	4960434	EqualityExpression	ptr == 0		4960392	0		==			
ANR	4960435	Identifier	ptr		4960392	0					
ANR	4960436	PrimaryExpression	0		4960392	1					
ANR	4960437	ReturnStatement	return ;	1424:8:44780:44786	4960392	1	True				
ANR	4960438	ExpressionStatement	pp = ( obj_header_t * ) ptr - 1	1425:4:44792:44821	4960392	10	True				
ANR	4960439	AssignmentExpression	pp = ( obj_header_t * ) ptr - 1		4960392	0		=			
ANR	4960440	Identifier	pp		4960392	0					
ANR	4960441	AdditiveExpression	( obj_header_t * ) ptr - 1		4960392	1		-			
ANR	4960442	CastExpression	( obj_header_t * ) ptr		4960392	0					
ANR	4960443	CastTarget	obj_header_t *		4960392	0					
ANR	4960444	Identifier	ptr		4960392	1					
ANR	4960445	PrimaryExpression	1		4960392	1					
ANR	4960446	ExpressionStatement	pstype = pp -> o_type	1426:4:44827:44846	4960392	11	True				
ANR	4960447	AssignmentExpression	pstype = pp -> o_type		4960392	0		=			
ANR	4960448	Identifier	pstype		4960392	0					
ANR	4960449	PtrMemberAccess	pp -> o_type		4960392	1					
ANR	4960450	Identifier	pp		4960392	0					
ANR	4960451	Identifier	o_type		4960392	1					
ANR	4960452	IfStatement	if ( gs_debug_c ( '?' ) )		4960392	12					
ANR	4960453	Condition	gs_debug_c ( '?' )	1428:8:44869:44883	4960392	0	True				
ANR	4960454	CallExpression	gs_debug_c ( '?' )		4960392	0					
ANR	4960455	Callee	gs_debug_c		4960392	0					
ANR	4960456	Identifier	gs_debug_c		4960392	0					
ANR	4960457	ArgumentList	'?'		4960392	1					
ANR	4960458	Argument	'?'		4960392	0					
ANR	4960459	PrimaryExpression	'?'		4960392	0					
ANR	4960460	CompoundStatement		16:8:368:387	4960392	1					
ANR	4960461	IdentifierDeclStatement	clump_locator_t cld ;	1429:8:44896:44915	4960392	0	True				
ANR	4960462	IdentifierDecl	cld		4960392	0					
ANR	4960463	IdentifierDeclType	clump_locator_t		4960392	0					
ANR	4960464	Identifier	cld		4960392	1					
ANR	4960465	IfStatement	if ( pstype == & st_free )		4960392	1					
ANR	4960466	Condition	pstype == & st_free	1431:12:44930:44947	4960392	0	True				
ANR	4960467	EqualityExpression	pstype == & st_free		4960392	0		==			
ANR	4960468	Identifier	pstype		4960392	0					
ANR	4960469	UnaryOperationExpression	& st_free		4960392	1					
ANR	4960470	UnaryOperator	&		4960392	0					
ANR	4960471	Identifier	st_free		4960392	1					
ANR	4960472	CompoundStatement		18:32:422:422	4960392	1					
ANR	4960473	ExpressionStatement	"mlprintf2 ( mem , ""%s: object 0x%lx already free!\\n"" , client_name_string ( cname ) , ( ulong ) ptr )"	1432:12:44964:45076	4960392	0	True				
ANR	4960474	CallExpression	"mlprintf2 ( mem , ""%s: object 0x%lx already free!\\n"" , client_name_string ( cname ) , ( ulong ) ptr )"		4960392	0					
ANR	4960475	Callee	mlprintf2		4960392	0					
ANR	4960476	Identifier	mlprintf2		4960392	0					
ANR	4960477	ArgumentList	mem		4960392	1					
ANR	4960478	Argument	mem		4960392	0					
ANR	4960479	Identifier	mem		4960392	0					
ANR	4960480	Argument	"""%s: object 0x%lx already free!\\n"""		4960392	1					
ANR	4960481	PrimaryExpression	"""%s: object 0x%lx already free!\\n"""		4960392	0					
ANR	4960482	Argument	client_name_string ( cname )		4960392	2					
ANR	4960483	CallExpression	client_name_string ( cname )		4960392	0					
ANR	4960484	Callee	client_name_string		4960392	0					
ANR	4960485	Identifier	client_name_string		4960392	0					
ANR	4960486	ArgumentList	cname		4960392	1					
ANR	4960487	Argument	cname		4960392	0					
ANR	4960488	Identifier	cname		4960392	0					
ANR	4960489	Argument	( ulong ) ptr		4960392	3					
ANR	4960490	CastExpression	( ulong ) ptr		4960392	0					
ANR	4960491	CastTarget	ulong		4960392	0					
ANR	4960492	Identifier	ptr		4960392	1					
ANR	4960493	ReturnStatement	return ;	1434:12:45090:45096	4960392	1	True				
ANR	4960494	ExpressionStatement	cld . memory = imem	1437:8:45203:45220	4960392	2	True				
ANR	4960495	AssignmentExpression	cld . memory = imem		4960392	0		=			
ANR	4960496	MemberAccess	cld . memory		4960392	0					
ANR	4960497	Identifier	cld		4960392	0					
ANR	4960498	Identifier	memory		4960392	1					
ANR	4960499	Identifier	imem		4960392	1					
ANR	4960500	WhileStatement	"while ( ( cld . cp = cld . memory -> root ) , ! clump_locate_ptr ( ptr , & cld ) )"		4960392	3					
ANR	4960501	Condition	"( cld . cp = cld . memory -> root ) , ! clump_locate_ptr ( ptr , & cld )"	1438:15:45237:45308	4960392	0	True				
ANR	4960502	Expression	"( cld . cp = cld . memory -> root ) , ! clump_locate_ptr ( ptr , & cld )"		4960392	0					
ANR	4960503	AssignmentExpression	cld . cp = cld . memory -> root		4960392	0		=			
ANR	4960504	MemberAccess	cld . cp		4960392	0					
ANR	4960505	Identifier	cld		4960392	0					
ANR	4960506	Identifier	cp		4960392	1					
ANR	4960507	PtrMemberAccess	cld . memory -> root		4960392	1					
ANR	4960508	MemberAccess	cld . memory		4960392	0					
ANR	4960509	Identifier	cld		4960392	0					
ANR	4960510	Identifier	memory		4960392	1					
ANR	4960511	Identifier	root		4960392	1					
ANR	4960512	UnaryOperationExpression	"! clump_locate_ptr ( ptr , & cld )"		4960392	1					
ANR	4960513	UnaryOperator	!		4960392	0					
ANR	4960514	CallExpression	"clump_locate_ptr ( ptr , & cld )"		4960392	1					
ANR	4960515	Callee	clump_locate_ptr		4960392	0					
ANR	4960516	Identifier	clump_locate_ptr		4960392	0					
ANR	4960517	ArgumentList	ptr		4960392	1					
ANR	4960518	Argument	ptr		4960392	0					
ANR	4960519	Identifier	ptr		4960392	0					
ANR	4960520	Argument	& cld		4960392	1					
ANR	4960521	UnaryOperationExpression	& cld		4960392	0					
ANR	4960522	UnaryOperator	&		4960392	0					
ANR	4960523	Identifier	cld		4960392	1					
ANR	4960524	CompoundStatement		27:14:796:796	4960392	1					
ANR	4960525	IfStatement	if ( ! cld . memory -> saved )		4960392	0					
ANR	4960526	Condition	! cld . memory -> saved	1441:16:45342:45359	4960392	0	True				
ANR	4960527	UnaryOperationExpression	! cld . memory -> saved		4960392	0					
ANR	4960528	UnaryOperator	!		4960392	0					
ANR	4960529	PtrMemberAccess	cld . memory -> saved		4960392	1					
ANR	4960530	MemberAccess	cld . memory		4960392	0					
ANR	4960531	Identifier	cld		4960392	0					
ANR	4960532	Identifier	memory		4960392	1					
ANR	4960533	Identifier	saved		4960392	1					
ANR	4960534	CompoundStatement		28:36:834:834	4960392	1					
ANR	4960535	ExpressionStatement	"mlprintf3 ( mem , ""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) mem )"	1442:16:45380:45550	4960392	0	True				
ANR	4960536	CallExpression	"mlprintf3 ( mem , ""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) mem )"		4960392	0					
ANR	4960537	Callee	mlprintf3		4960392	0					
ANR	4960538	Identifier	mlprintf3		4960392	0					
ANR	4960539	ArgumentList	mem		4960392	1					
ANR	4960540	Argument	mem		4960392	0					
ANR	4960541	Identifier	mem		4960392	0					
ANR	4960542	Argument	"""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"""		4960392	1					
ANR	4960543	PrimaryExpression	"""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"""		4960392	0					
ANR	4960544	Argument	client_name_string ( cname )		4960392	2					
ANR	4960545	CallExpression	client_name_string ( cname )		4960392	0					
ANR	4960546	Callee	client_name_string		4960392	0					
ANR	4960547	Identifier	client_name_string		4960392	0					
ANR	4960548	ArgumentList	cname		4960392	1					
ANR	4960549	Argument	cname		4960392	0					
ANR	4960550	Identifier	cname		4960392	0					
ANR	4960551	Argument	( ulong ) ptr		4960392	3					
ANR	4960552	CastExpression	( ulong ) ptr		4960392	0					
ANR	4960553	CastTarget	ulong		4960392	0					
ANR	4960554	Identifier	ptr		4960392	1					
ANR	4960555	Argument	( ulong ) mem		4960392	4					
ANR	4960556	CastExpression	( ulong ) mem		4960392	0					
ANR	4960557	CastTarget	ulong		4960392	0					
ANR	4960558	Identifier	mem		4960392	1					
ANR	4960559	ReturnStatement	return ;	1445:16:45568:45574	4960392	1	True				
ANR	4960560	ExpressionStatement	cld . memory = ( gs_ref_memory_t * ) cld . memory -> saved	1449:12:45757:45807	4960392	1	True				
ANR	4960561	AssignmentExpression	cld . memory = ( gs_ref_memory_t * ) cld . memory -> saved		4960392	0		=			
ANR	4960562	MemberAccess	cld . memory		4960392	0					
ANR	4960563	Identifier	cld		4960392	0					
ANR	4960564	Identifier	memory		4960392	1					
ANR	4960565	CastExpression	( gs_ref_memory_t * ) cld . memory -> saved		4960392	1					
ANR	4960566	CastTarget	gs_ref_memory_t *		4960392	0					
ANR	4960567	PtrMemberAccess	cld . memory -> saved		4960392	1					
ANR	4960568	MemberAccess	cld . memory		4960392	0					
ANR	4960569	Identifier	cld		4960392	0					
ANR	4960570	Identifier	memory		4960392	1					
ANR	4960571	Identifier	saved		4960392	1					
ANR	4960572	IfStatement	"if ( ! ( PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot ) ) )"		4960392	4					
ANR	4960573	Condition	"! ( PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot ) )"	1452:12:45895:45981	4960392	0	True				
ANR	4960574	UnaryOperationExpression	"! ( PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot ) )"		4960392	0					
ANR	4960575	UnaryOperator	!		4960392	0					
ANR	4960576	CallExpression	"PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot )"		4960392	1					
ANR	4960577	Callee	PTR_BETWEEN		4960392	0					
ANR	4960578	Identifier	PTR_BETWEEN		4960392	0					
ANR	4960579	ArgumentList	( const byte * ) pp		4960392	1					
ANR	4960580	Argument	( const byte * ) pp		4960392	0					
ANR	4960581	CastExpression	( const byte * ) pp		4960392	0					
ANR	4960582	CastTarget	const byte *		4960392	0					
ANR	4960583	Identifier	pp		4960392	1					
ANR	4960584	Argument	cld . cp -> cbase		4960392	1					
ANR	4960585	PtrMemberAccess	cld . cp -> cbase		4960392	0					
ANR	4960586	MemberAccess	cld . cp		4960392	0					
ANR	4960587	Identifier	cld		4960392	0					
ANR	4960588	Identifier	cp		4960392	1					
ANR	4960589	Identifier	cbase		4960392	1					
ANR	4960590	Argument	cld . cp -> cbot		4960392	2					
ANR	4960591	PtrMemberAccess	cld . cp -> cbot		4960392	0					
ANR	4960592	MemberAccess	cld . cp		4960392	0					
ANR	4960593	Identifier	cld		4960392	0					
ANR	4960594	Identifier	cp		4960392	1					
ANR	4960595	Identifier	cbot		4960392	1					
ANR	4960596	CompoundStatement		41:14:1469:1469	4960392	1					
ANR	4960597	ExpressionStatement	"mlprintf5 ( mem , ""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) cld . cp , ( ulong ) cld . cp -> cbase , ( ulong ) cld . cp -> cbot )"	1455:12:46011:46264	4960392	0	True				
ANR	4960598	CallExpression	"mlprintf5 ( mem , ""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) cld . cp , ( ulong ) cld . cp -> cbase , ( ulong ) cld . cp -> cbot )"		4960392	0					
ANR	4960599	Callee	mlprintf5		4960392	0					
ANR	4960600	Identifier	mlprintf5		4960392	0					
ANR	4960601	ArgumentList	mem		4960392	1					
ANR	4960602	Argument	mem		4960392	0					
ANR	4960603	Identifier	mem		4960392	0					
ANR	4960604	Argument	"""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"""		4960392	1					
ANR	4960605	PrimaryExpression	"""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"""		4960392	0					
ANR	4960606	Argument	client_name_string ( cname )		4960392	2					
ANR	4960607	CallExpression	client_name_string ( cname )		4960392	0					
ANR	4960608	Callee	client_name_string		4960392	0					
ANR	4960609	Identifier	client_name_string		4960392	0					
ANR	4960610	ArgumentList	cname		4960392	1					
ANR	4960611	Argument	cname		4960392	0					
ANR	4960612	Identifier	cname		4960392	0					
ANR	4960613	Argument	( ulong ) ptr		4960392	3					
ANR	4960614	CastExpression	( ulong ) ptr		4960392	0					
ANR	4960615	CastTarget	ulong		4960392	0					
ANR	4960616	Identifier	ptr		4960392	1					
ANR	4960617	Argument	( ulong ) cld . cp		4960392	4					
ANR	4960618	CastExpression	( ulong ) cld . cp		4960392	0					
ANR	4960619	CastTarget	ulong		4960392	0					
ANR	4960620	MemberAccess	cld . cp		4960392	1					
ANR	4960621	Identifier	cld		4960392	0					
ANR	4960622	Identifier	cp		4960392	1					
ANR	4960623	Argument	( ulong ) cld . cp -> cbase		4960392	5					
ANR	4960624	CastExpression	( ulong ) cld . cp -> cbase		4960392	0					
ANR	4960625	CastTarget	ulong		4960392	0					
ANR	4960626	PtrMemberAccess	cld . cp -> cbase		4960392	1					
ANR	4960627	MemberAccess	cld . cp		4960392	0					
ANR	4960628	Identifier	cld		4960392	0					
ANR	4960629	Identifier	cp		4960392	1					
ANR	4960630	Identifier	cbase		4960392	1					
ANR	4960631	Argument	( ulong ) cld . cp -> cbot		4960392	6					
ANR	4960632	CastExpression	( ulong ) cld . cp -> cbot		4960392	0					
ANR	4960633	CastTarget	ulong		4960392	0					
ANR	4960634	PtrMemberAccess	cld . cp -> cbot		4960392	1					
ANR	4960635	MemberAccess	cld . cp		4960392	0					
ANR	4960636	Identifier	cld		4960392	0					
ANR	4960637	Identifier	cp		4960392	1					
ANR	4960638	Identifier	cbot		4960392	1					
ANR	4960639	ReturnStatement	return ;	1459:12:46278:46284	4960392	1	True				
ANR	4960640	ExpressionStatement	size = pre_obj_contents_size ( pp )	1463:4:46331:46363	4960392	13	True				
ANR	4960641	AssignmentExpression	size = pre_obj_contents_size ( pp )		4960392	0		=			
ANR	4960642	Identifier	size		4960392	0					
ANR	4960643	CallExpression	pre_obj_contents_size ( pp )		4960392	1					
ANR	4960644	Callee	pre_obj_contents_size		4960392	0					
ANR	4960645	Identifier	pre_obj_contents_size		4960392	0					
ANR	4960646	ArgumentList	pp		4960392	1					
ANR	4960647	Argument	pp		4960392	0					
ANR	4960648	Identifier	pp		4960392	0					
ANR	4960649	ExpressionStatement	rounded_size = obj_align_round ( size )	1464:4:46369:46405	4960392	14	True				
ANR	4960650	AssignmentExpression	rounded_size = obj_align_round ( size )		4960392	0		=			
ANR	4960651	Identifier	rounded_size		4960392	0					
ANR	4960652	CallExpression	obj_align_round ( size )		4960392	1					
ANR	4960653	Callee	obj_align_round		4960392	0					
ANR	4960654	Identifier	obj_align_round		4960392	0					
ANR	4960655	ArgumentList	size		4960392	1					
ANR	4960656	Argument	size		4960392	0					
ANR	4960657	Identifier	size		4960392	0					
ANR	4960658	ExpressionStatement	finalize = pstype -> finalize	1465:4:46411:46438	4960392	15	True				
ANR	4960659	AssignmentExpression	finalize = pstype -> finalize		4960392	0		=			
ANR	4960660	Identifier	finalize		4960392	0					
ANR	4960661	PtrMemberAccess	pstype -> finalize		4960392	1					
ANR	4960662	Identifier	pstype		4960392	0					
ANR	4960663	Identifier	finalize		4960392	1					
ANR	4960664	IfStatement	if ( finalize != 0 )		4960392	16					
ANR	4960665	Condition	finalize != 0	1466:8:46448:46460	4960392	0	True				
ANR	4960666	EqualityExpression	finalize != 0		4960392	0		!=			
ANR	4960667	Identifier	finalize		4960392	0					
ANR	4960668	PrimaryExpression	0		4960392	1					
ANR	4960669	CompoundStatement		53:23:1935:1935	4960392	1					
ANR	4960670	IfStatement	if ( gs_debug [ 'a' ] || gs_debug [ 'A' ] )		4960392	0					
ANR	4960671	Condition	gs_debug [ 'a' ] || gs_debug [ 'A' ]	1471:12:46668:46697	4960392	0	True				
ANR	4960672	OrExpression	gs_debug [ 'a' ] || gs_debug [ 'A' ]		4960392	0		||			
ANR	4960673	ArrayIndexing	gs_debug [ 'a' ]		4960392	0					
ANR	4960674	Identifier	gs_debug		4960392	0					
ANR	4960675	PrimaryExpression	'a'		4960392	1					
ANR	4960676	ArrayIndexing	gs_debug [ 'A' ]		4960392	1					
ANR	4960677	Identifier	gs_debug		4960392	0					
ANR	4960678	PrimaryExpression	'A'		4960392	1					
ANR	4960679	ExpressionStatement	saved_stype = * pstype	1472:12:46712:46733	4960392	1	True				
ANR	4960680	AssignmentExpression	saved_stype = * pstype		4960392	0		=			
ANR	4960681	Identifier	saved_stype		4960392	0					
ANR	4960682	UnaryOperationExpression	* pstype		4960392	1					
ANR	4960683	UnaryOperator	*		4960392	0					
ANR	4960684	Identifier	pstype		4960392	1					
ANR	4960685	ExpressionStatement	"if_debug3m ( 'u' , mem , ""[u]finalizing %s 0x%lx (%s)\\n"" , struct_type_name_string ( pstype ) , ( ulong ) ptr , client_name_string ( cname ) )"	1474:8:46744:46908	4960392	1	True				
ANR	4960686	CallExpression	"if_debug3m ( 'u' , mem , ""[u]finalizing %s 0x%lx (%s)\\n"" , struct_type_name_string ( pstype ) , ( ulong ) ptr , client_name_string ( cname ) )"		4960392	0					
ANR	4960687	Callee	if_debug3m		4960392	0					
ANR	4960688	Identifier	if_debug3m		4960392	0					
ANR	4960689	ArgumentList	'u'		4960392	1					
ANR	4960690	Argument	'u'		4960392	0					
ANR	4960691	PrimaryExpression	'u'		4960392	0					
ANR	4960692	Argument	mem		4960392	1					
ANR	4960693	Identifier	mem		4960392	0					
ANR	4960694	Argument	"""[u]finalizing %s 0x%lx (%s)\\n"""		4960392	2					
ANR	4960695	PrimaryExpression	"""[u]finalizing %s 0x%lx (%s)\\n"""		4960392	0					
ANR	4960696	Argument	struct_type_name_string ( pstype )		4960392	3					
ANR	4960697	CallExpression	struct_type_name_string ( pstype )		4960392	0					
ANR	4960698	Callee	struct_type_name_string		4960392	0					
ANR	4960699	Identifier	struct_type_name_string		4960392	0					
ANR	4960700	ArgumentList	pstype		4960392	1					
ANR	4960701	Argument	pstype		4960392	0					
ANR	4960702	Identifier	pstype		4960392	0					
ANR	4960703	Argument	( ulong ) ptr		4960392	4					
ANR	4960704	CastExpression	( ulong ) ptr		4960392	0					
ANR	4960705	CastTarget	ulong		4960392	0					
ANR	4960706	Identifier	ptr		4960392	1					
ANR	4960707	Argument	client_name_string ( cname )		4960392	5					
ANR	4960708	CallExpression	client_name_string ( cname )		4960392	0					
ANR	4960709	Callee	client_name_string		4960392	0					
ANR	4960710	Identifier	client_name_string		4960392	0					
ANR	4960711	ArgumentList	cname		4960392	1					
ANR	4960712	Argument	cname		4960392	0					
ANR	4960713	Identifier	cname		4960392	0					
ANR	4960714	ExpressionStatement	"( * finalize ) ( mem , ptr )"	1477:8:46918:46940	4960392	2	True				
ANR	4960715	CallExpression	"( * finalize ) ( mem , ptr )"		4960392	0					
ANR	4960716	Callee	* finalize		4960392	0					
ANR	4960717	UnaryOperationExpression	* finalize		4960392	0					
ANR	4960718	UnaryOperator	*		4960392	0					
ANR	4960719	Identifier	finalize		4960392	1					
ANR	4960720	ArgumentList	mem		4960392	1					
ANR	4960721	Argument	mem		4960392	0					
ANR	4960722	Identifier	mem		4960392	0					
ANR	4960723	Argument	ptr		4960392	1					
ANR	4960724	Identifier	ptr		4960392	0					
ANR	4960725	IfStatement	if ( gs_debug [ 'a' ] || gs_debug [ 'A' ] )		4960392	3					
ANR	4960726	Condition	gs_debug [ 'a' ] || gs_debug [ 'A' ]	1479:12:46955:46984	4960392	0	True				
ANR	4960727	OrExpression	gs_debug [ 'a' ] || gs_debug [ 'A' ]		4960392	0		||			
ANR	4960728	ArrayIndexing	gs_debug [ 'a' ]		4960392	0					
ANR	4960729	Identifier	gs_debug		4960392	0					
ANR	4960730	PrimaryExpression	'a'		4960392	1					
ANR	4960731	ArrayIndexing	gs_debug [ 'A' ]		4960392	1					
ANR	4960732	Identifier	gs_debug		4960392	0					
ANR	4960733	PrimaryExpression	'A'		4960392	1					
ANR	4960734	ExpressionStatement	pstype = & saved_stype	1480:12:46999:47020	4960392	1	True				
ANR	4960735	AssignmentExpression	pstype = & saved_stype		4960392	0		=			
ANR	4960736	Identifier	pstype		4960392	0					
ANR	4960737	UnaryOperationExpression	& saved_stype		4960392	1					
ANR	4960738	UnaryOperator	&		4960392	0					
ANR	4960739	Identifier	saved_stype		4960392	1					
ANR	4960740	IfStatement	if ( imem -> cc && ( byte * ) ptr + rounded_size == imem -> cc -> cbot )		4960392	17					
ANR	4960741	Condition	imem -> cc && ( byte * ) ptr + rounded_size == imem -> cc -> cbot	1482:8:47036:47092	4960392	0	True				
ANR	4960742	AndExpression	imem -> cc && ( byte * ) ptr + rounded_size == imem -> cc -> cbot		4960392	0		&&			
ANR	4960743	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4960744	Identifier	imem		4960392	0					
ANR	4960745	Identifier	cc		4960392	1					
ANR	4960746	EqualityExpression	( byte * ) ptr + rounded_size == imem -> cc -> cbot		4960392	1		==			
ANR	4960747	AdditiveExpression	( byte * ) ptr + rounded_size		4960392	0		+			
ANR	4960748	CastExpression	( byte * ) ptr		4960392	0					
ANR	4960749	CastTarget	byte *		4960392	0					
ANR	4960750	Identifier	ptr		4960392	1					
ANR	4960751	Identifier	rounded_size		4960392	1					
ANR	4960752	PtrMemberAccess	imem -> cc -> cbot		4960392	1					
ANR	4960753	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4960754	Identifier	imem		4960392	0					
ANR	4960755	Identifier	cc		4960392	1					
ANR	4960756	Identifier	cbot		4960392	1					
ANR	4960757	CompoundStatement		69:67:2567:2567	4960392	1					
ANR	4960758	ExpressionStatement	"alloc_trace ( "":-o "" , imem , cname , pstype , size , ptr )"	1483:8:47105:47156	4960392	0	True				
ANR	4960759	CallExpression	"alloc_trace ( "":-o "" , imem , cname , pstype , size , ptr )"		4960392	0					
ANR	4960760	Callee	alloc_trace		4960392	0					
ANR	4960761	Identifier	alloc_trace		4960392	0					
ANR	4960762	ArgumentList	""":-o """		4960392	1					
ANR	4960763	Argument	""":-o """		4960392	0					
ANR	4960764	PrimaryExpression	""":-o """		4960392	0					
ANR	4960765	Argument	imem		4960392	1					
ANR	4960766	Identifier	imem		4960392	0					
ANR	4960767	Argument	cname		4960392	2					
ANR	4960768	Identifier	cname		4960392	0					
ANR	4960769	Argument	pstype		4960392	3					
ANR	4960770	Identifier	pstype		4960392	0					
ANR	4960771	Argument	size		4960392	4					
ANR	4960772	Identifier	size		4960392	0					
ANR	4960773	Argument	ptr		4960392	5					
ANR	4960774	Identifier	ptr		4960392	0					
ANR	4960775	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"	1484:8:47166:47210	4960392	1	True				
ANR	4960776	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"		4960392	0					
ANR	4960777	Callee	gs_alloc_fill		4960392	0					
ANR	4960778	Identifier	gs_alloc_fill		4960392	0					
ANR	4960779	ArgumentList	ptr		4960392	1					
ANR	4960780	Argument	ptr		4960392	0					
ANR	4960781	Identifier	ptr		4960392	0					
ANR	4960782	Argument	gs_alloc_fill_free		4960392	1					
ANR	4960783	Identifier	gs_alloc_fill_free		4960392	0					
ANR	4960784	Argument	size		4960392	2					
ANR	4960785	Identifier	size		4960392	0					
ANR	4960786	ExpressionStatement	imem -> cc -> cbot = ( byte * ) pp	1485:8:47220:47248	4960392	2	True				
ANR	4960787	AssignmentExpression	imem -> cc -> cbot = ( byte * ) pp		4960392	0		=			
ANR	4960788	PtrMemberAccess	imem -> cc -> cbot		4960392	0					
ANR	4960789	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4960790	Identifier	imem		4960392	0					
ANR	4960791	Identifier	cc		4960392	1					
ANR	4960792	Identifier	cbot		4960392	1					
ANR	4960793	CastExpression	( byte * ) pp		4960392	1					
ANR	4960794	CastTarget	byte *		4960392	0					
ANR	4960795	Identifier	pp		4960392	1					
ANR	4960796	IfStatement	if ( ( byte * ) pp <= imem -> cc -> int_freed_top )		4960392	3					
ANR	4960797	Condition	( byte * ) pp <= imem -> cc -> int_freed_top	1488:12:47409:47445	4960392	0	True				
ANR	4960798	RelationalExpression	( byte * ) pp <= imem -> cc -> int_freed_top		4960392	0		<=			
ANR	4960799	CastExpression	( byte * ) pp		4960392	0					
ANR	4960800	CastTarget	byte *		4960392	0					
ANR	4960801	Identifier	pp		4960392	1					
ANR	4960802	PtrMemberAccess	imem -> cc -> int_freed_top		4960392	1					
ANR	4960803	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4960804	Identifier	imem		4960392	0					
ANR	4960805	Identifier	cc		4960392	1					
ANR	4960806	Identifier	int_freed_top		4960392	1					
ANR	4960807	CompoundStatement		75:51:2920:2920	4960392	1					
ANR	4960808	ExpressionStatement	"consolidate_clump_free ( imem -> cc , imem )"	1489:12:47462:47500	4960392	0	True				
ANR	4960809	CallExpression	"consolidate_clump_free ( imem -> cc , imem )"		4960392	0					
ANR	4960810	Callee	consolidate_clump_free		4960392	0					
ANR	4960811	Identifier	consolidate_clump_free		4960392	0					
ANR	4960812	ArgumentList	imem -> cc		4960392	1					
ANR	4960813	Argument	imem -> cc		4960392	0					
ANR	4960814	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4960815	Identifier	imem		4960392	0					
ANR	4960816	Identifier	cc		4960392	1					
ANR	4960817	Argument	imem		4960392	1					
ANR	4960818	Identifier	imem		4960392	0					
ANR	4960819	ReturnStatement	return ;	1491:8:47520:47526	4960392	4	True				
ANR	4960820	IfStatement	if ( pp -> o_alone )		4960392	18					
ANR	4960821	Condition	pp -> o_alone	1493:8:47542:47552	4960392	0	True				
ANR	4960822	PtrMemberAccess	pp -> o_alone		4960392	0					
ANR	4960823	Identifier	pp		4960392	0					
ANR	4960824	Identifier	o_alone		4960392	1					
ANR	4960825	CompoundStatement		86:8:3273:3291	4960392	1					
ANR	4960826	IdentifierDeclStatement	clump_locator_t cl ;	1499:8:47801:47819	4960392	0	True				
ANR	4960827	IdentifierDecl	cl		4960392	0					
ANR	4960828	IdentifierDeclType	clump_locator_t		4960392	0					
ANR	4960829	Identifier	cl		4960392	1					
ANR	4960830	CompoundStatement		90:12:3329:3348	4960392	1					
ANR	4960831	IdentifierDeclStatement	clump_locator_t cld ;	1503:12:47857:47876	4960392	0	True				
ANR	4960832	IdentifierDecl	cld		4960392	0					
ANR	4960833	IdentifierDeclType	clump_locator_t		4960392	0					
ANR	4960834	Identifier	cld		4960392	1					
ANR	4960835	ExpressionStatement	cld . memory = imem	1505:12:47891:47908	4960392	1	True				
ANR	4960836	AssignmentExpression	cld . memory = imem		4960392	0		=			
ANR	4960837	MemberAccess	cld . memory		4960392	0					
ANR	4960838	Identifier	cld		4960392	0					
ANR	4960839	Identifier	memory		4960392	1					
ANR	4960840	Identifier	imem		4960392	1					
ANR	4960841	ExpressionStatement	cld . cp = 0	1506:12:47922:47932	4960392	2	True				
ANR	4960842	AssignmentExpression	cld . cp = 0		4960392	0		=			
ANR	4960843	MemberAccess	cld . cp		4960392	0					
ANR	4960844	Identifier	cld		4960392	0					
ANR	4960845	Identifier	cp		4960392	1					
ANR	4960846	PrimaryExpression	0		4960392	1					
ANR	4960847	IfStatement	if ( gs_debug_c ( 'a' ) )		4960392	3					
ANR	4960848	Condition	gs_debug_c ( 'a' )	1507:16:47950:47964	4960392	0	True				
ANR	4960849	CallExpression	gs_debug_c ( 'a' )		4960392	0					
ANR	4960850	Callee	gs_debug_c		4960392	0					
ANR	4960851	Identifier	gs_debug_c		4960392	0					
ANR	4960852	ArgumentList	'a'		4960392	1					
ANR	4960853	Argument	'a'		4960392	0					
ANR	4960854	PrimaryExpression	'a'		4960392	0					
ANR	4960855	ExpressionStatement	"alloc_trace ( ( clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"" ) , imem , cname , pstype , size , ptr )"	1508:16:47983:48135	4960392	1	True				
ANR	4960856	CallExpression	"alloc_trace ( ( clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"" ) , imem , cname , pstype , size , ptr )"		4960392	0					
ANR	4960857	Callee	alloc_trace		4960392	0					
ANR	4960858	Identifier	alloc_trace		4960392	0					
ANR	4960859	ArgumentList	"clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"""		4960392	1					
ANR	4960860	Argument	"clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"""		4960392	0					
ANR	4960861	ConditionalExpression	"clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"""		4960392	0					
ANR	4960862	Condition	"clump_locate_ptr ( ptr , & cld )"		4960392	0					
ANR	4960863	CallExpression	"clump_locate_ptr ( ptr , & cld )"		4960392	0					
ANR	4960864	Callee	clump_locate_ptr		4960392	0					
ANR	4960865	Identifier	clump_locate_ptr		4960392	0					
ANR	4960866	ArgumentList	ptr		4960392	1					
ANR	4960867	Argument	ptr		4960392	0					
ANR	4960868	Identifier	ptr		4960392	0					
ANR	4960869	Argument	& cld		4960392	1					
ANR	4960870	UnaryOperationExpression	& cld		4960392	0					
ANR	4960871	UnaryOperator	&		4960392	0					
ANR	4960872	Identifier	cld		4960392	1					
ANR	4960873	PrimaryExpression	""":-oL"""		4960392	1					
ANR	4960874	PrimaryExpression	""":-o~"""		4960392	2					
ANR	4960875	Argument	imem		4960392	1					
ANR	4960876	Identifier	imem		4960392	0					
ANR	4960877	Argument	cname		4960392	2					
ANR	4960878	Identifier	cname		4960392	0					
ANR	4960879	Argument	pstype		4960392	3					
ANR	4960880	Identifier	pstype		4960392	0					
ANR	4960881	Argument	size		4960392	4					
ANR	4960882	Identifier	size		4960392	0					
ANR	4960883	Argument	ptr		4960392	5					
ANR	4960884	Identifier	ptr		4960392	0					
ANR	4960885	ExpressionStatement	cl . memory = imem	1513:8:48162:48178	4960392	2	True				
ANR	4960886	AssignmentExpression	cl . memory = imem		4960392	0		=			
ANR	4960887	MemberAccess	cl . memory		4960392	0					
ANR	4960888	Identifier	cl		4960392	0					
ANR	4960889	Identifier	memory		4960392	1					
ANR	4960890	Identifier	imem		4960392	1					
ANR	4960891	ExpressionStatement	cl . cp = 0	1514:8:48188:48197	4960392	3	True				
ANR	4960892	AssignmentExpression	cl . cp = 0		4960392	0		=			
ANR	4960893	MemberAccess	cl . cp		4960392	0					
ANR	4960894	Identifier	cl		4960392	0					
ANR	4960895	Identifier	cp		4960392	1					
ANR	4960896	PrimaryExpression	0		4960392	1					
ANR	4960897	IfStatement	"if ( clump_locate_ptr ( ptr , & cl ) )"		4960392	4					
ANR	4960898	Condition	"clump_locate_ptr ( ptr , & cl )"	1515:12:48211:48236	4960392	0	True				
ANR	4960899	CallExpression	"clump_locate_ptr ( ptr , & cl )"		4960392	0					
ANR	4960900	Callee	clump_locate_ptr		4960392	0					
ANR	4960901	Identifier	clump_locate_ptr		4960392	0					
ANR	4960902	ArgumentList	ptr		4960392	1					
ANR	4960903	Argument	ptr		4960392	0					
ANR	4960904	Identifier	ptr		4960392	0					
ANR	4960905	Argument	& cl		4960392	1					
ANR	4960906	UnaryOperationExpression	& cl		4960392	0					
ANR	4960907	UnaryOperator	&		4960392	0					
ANR	4960908	Identifier	cl		4960392	1					
ANR	4960909	CompoundStatement		102:40:3711:3711	4960392	1					
ANR	4960910	IfStatement	if ( ! imem -> is_controlled )		4960392	0					
ANR	4960911	Condition	! imem -> is_controlled	1516:16:48257:48276	4960392	0	True				
ANR	4960912	UnaryOperationExpression	! imem -> is_controlled		4960392	0					
ANR	4960913	UnaryOperator	!		4960392	0					
ANR	4960914	PtrMemberAccess	imem -> is_controlled		4960392	1					
ANR	4960915	Identifier	imem		4960392	0					
ANR	4960916	Identifier	is_controlled		4960392	1					
ANR	4960917	ExpressionStatement	"alloc_free_clump ( cl . cp , imem )"	1517:16:48295:48324	4960392	1	True				
ANR	4960918	CallExpression	"alloc_free_clump ( cl . cp , imem )"		4960392	0					
ANR	4960919	Callee	alloc_free_clump		4960392	0					
ANR	4960920	Identifier	alloc_free_clump		4960392	0					
ANR	4960921	ArgumentList	cl . cp		4960392	1					
ANR	4960922	Argument	cl . cp		4960392	0					
ANR	4960923	MemberAccess	cl . cp		4960392	0					
ANR	4960924	Identifier	cl		4960392	0					
ANR	4960925	Identifier	cp		4960392	1					
ANR	4960926	Argument	imem		4960392	1					
ANR	4960927	Identifier	imem		4960392	0					
ANR	4960928	ReturnStatement	return ;	1518:12:48338:48344	4960392	1	True				
ANR	4960929	IfStatement	if ( rounded_size >= sizeof ( obj_header_t * ) )		4960392	19					
ANR	4960930	Condition	rounded_size >= sizeof ( obj_header_t * )	1522:8:48431:48468	4960392	0	True				
ANR	4960931	RelationalExpression	rounded_size >= sizeof ( obj_header_t * )		4960392	0		>=			
ANR	4960932	Identifier	rounded_size		4960392	0					
ANR	4960933	SizeofExpression	sizeof ( obj_header_t * )		4960392	1					
ANR	4960934	Sizeof	sizeof		4960392	0					
ANR	4960935	SizeofOperand	obj_header_t *		4960392	1					
ANR	4960936	CompoundStatement		109:48:3943:3943	4960392	1					
ANR	4960937	ExpressionStatement	imem -> cfreed . memory = imem	1528:8:48648:48674	4960392	0	True				
ANR	4960938	AssignmentExpression	imem -> cfreed . memory = imem		4960392	0		=			
ANR	4960939	MemberAccess	imem -> cfreed . memory		4960392	0					
ANR	4960940	PtrMemberAccess	imem -> cfreed		4960392	0					
ANR	4960941	Identifier	imem		4960392	0					
ANR	4960942	Identifier	cfreed		4960392	1					
ANR	4960943	Identifier	memory		4960392	1					
ANR	4960944	Identifier	imem		4960392	1					
ANR	4960945	IfStatement	"if ( clump_locate ( ptr , & imem -> cfreed ) )"		4960392	1					
ANR	4960946	Condition	"clump_locate ( ptr , & imem -> cfreed )"	1529:12:48688:48719	4960392	0	True				
ANR	4960947	CallExpression	"clump_locate ( ptr , & imem -> cfreed )"		4960392	0					
ANR	4960948	Callee	clump_locate		4960392	0					
ANR	4960949	Identifier	clump_locate		4960392	0					
ANR	4960950	ArgumentList	ptr		4960392	1					
ANR	4960951	Argument	ptr		4960392	0					
ANR	4960952	Identifier	ptr		4960392	0					
ANR	4960953	Argument	& imem -> cfreed		4960392	1					
ANR	4960954	UnaryOperationExpression	& imem -> cfreed		4960392	0					
ANR	4960955	UnaryOperator	&		4960392	0					
ANR	4960956	PtrMemberAccess	imem -> cfreed		4960392	1					
ANR	4960957	Identifier	imem		4960392	0					
ANR	4960958	Identifier	cfreed		4960392	1					
ANR	4960959	CompoundStatement		117:12:4208:4226	4960392	1					
ANR	4960960	IdentifierDeclStatement	obj_header_t * * pfl ;	1530:12:48736:48754	4960392	0	True				
ANR	4960961	IdentifierDecl	* * pfl		4960392	0					
ANR	4960962	IdentifierDeclType	obj_header_t * *		4960392	0					
ANR	4960963	Identifier	pfl		4960392	1					
ANR	4960964	IfStatement	if ( size > max_freelist_size )		4960392	1					
ANR	4960965	Condition	size > max_freelist_size	1532:16:48773:48796	4960392	0	True				
ANR	4960966	RelationalExpression	size > max_freelist_size		4960392	0		>			
ANR	4960967	Identifier	size		4960392	0					
ANR	4960968	Identifier	max_freelist_size		4960392	1					
ANR	4960969	CompoundStatement		119:42:4271:4271	4960392	1					
ANR	4960970	ExpressionStatement	pfl = & imem -> freelists [ LARGE_FREELIST_INDEX ]	1533:16:48817:48861	4960392	0	True				
ANR	4960971	AssignmentExpression	pfl = & imem -> freelists [ LARGE_FREELIST_INDEX ]		4960392	0		=			
ANR	4960972	Identifier	pfl		4960392	0					
ANR	4960973	UnaryOperationExpression	& imem -> freelists [ LARGE_FREELIST_INDEX ]		4960392	1					
ANR	4960974	UnaryOperator	&		4960392	0					
ANR	4960975	ArrayIndexing	imem -> freelists [ LARGE_FREELIST_INDEX ]		4960392	1					
ANR	4960976	PtrMemberAccess	imem -> freelists		4960392	0					
ANR	4960977	Identifier	imem		4960392	0					
ANR	4960978	Identifier	freelists		4960392	1					
ANR	4960979	Identifier	LARGE_FREELIST_INDEX		4960392	1					
ANR	4960980	IfStatement	if ( rounded_size > imem -> largest_free_size )		4960392	1					
ANR	4960981	Condition	rounded_size > imem -> largest_free_size	1534:20:48883:48920	4960392	0	True				
ANR	4960982	RelationalExpression	rounded_size > imem -> largest_free_size		4960392	0		>			
ANR	4960983	Identifier	rounded_size		4960392	0					
ANR	4960984	PtrMemberAccess	imem -> largest_free_size		4960392	1					
ANR	4960985	Identifier	imem		4960392	0					
ANR	4960986	Identifier	largest_free_size		4960392	1					
ANR	4960987	ExpressionStatement	imem -> largest_free_size = rounded_size	1535:20:48943:48981	4960392	1	True				
ANR	4960988	AssignmentExpression	imem -> largest_free_size = rounded_size		4960392	0		=			
ANR	4960989	PtrMemberAccess	imem -> largest_free_size		4960392	0					
ANR	4960990	Identifier	imem		4960392	0					
ANR	4960991	Identifier	largest_free_size		4960392	1					
ANR	4960992	Identifier	rounded_size		4960392	1					
ANR	4960993	ElseStatement	else		4960392	0					
ANR	4960994	CompoundStatement		123:19:4474:4474	4960392	0					
ANR	4960995	ExpressionStatement	pfl = & imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]	1537:16:49020:49127	4960392	0	True				
ANR	4960996	AssignmentExpression	pfl = & imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]		4960392	0		=			
ANR	4960997	Identifier	pfl		4960392	0					
ANR	4960998	UnaryOperationExpression	& imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]		4960392	1					
ANR	4960999	UnaryOperator	&		4960392	0					
ANR	4961000	ArrayIndexing	imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]		4960392	1					
ANR	4961001	PtrMemberAccess	imem -> freelists		4960392	0					
ANR	4961002	Identifier	imem		4960392	0					
ANR	4961003	Identifier	freelists		4960392	1					
ANR	4961004	ShiftExpression	( size + obj_align_mask ) >> log2_obj_align_mod		4960392	1		>>			
ANR	4961005	AdditiveExpression	size + obj_align_mask		4960392	0		+			
ANR	4961006	Identifier	size		4960392	0					
ANR	4961007	Identifier	obj_align_mask		4960392	1					
ANR	4961008	Identifier	log2_obj_align_mod		4960392	1					
ANR	4961009	IfStatement	if ( imem -> cc && imem -> cfreed . cp -> chead == imem -> cc -> chead )		4960392	2					
ANR	4961010	Condition	imem -> cc && imem -> cfreed . cp -> chead == imem -> cc -> chead	1545:16:49433:49485	4960392	0	True				
ANR	4961011	AndExpression	imem -> cc && imem -> cfreed . cp -> chead == imem -> cc -> chead		4960392	0		&&			
ANR	4961012	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4961013	Identifier	imem		4960392	0					
ANR	4961014	Identifier	cc		4960392	1					
ANR	4961015	EqualityExpression	imem -> cfreed . cp -> chead == imem -> cc -> chead		4960392	1		==			
ANR	4961016	PtrMemberAccess	imem -> cfreed . cp -> chead		4960392	0					
ANR	4961017	MemberAccess	imem -> cfreed . cp		4960392	0					
ANR	4961018	PtrMemberAccess	imem -> cfreed		4960392	0					
ANR	4961019	Identifier	imem		4960392	0					
ANR	4961020	Identifier	cfreed		4960392	1					
ANR	4961021	Identifier	cp		4960392	1					
ANR	4961022	Identifier	chead		4960392	1					
ANR	4961023	PtrMemberAccess	imem -> cc -> chead		4960392	1					
ANR	4961024	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4961025	Identifier	imem		4960392	0					
ANR	4961026	Identifier	cc		4960392	1					
ANR	4961027	Identifier	chead		4960392	1					
ANR	4961028	CompoundStatement		132:71:4960:4960	4960392	1					
ANR	4961029	IfStatement	if ( ( byte * ) pp >= imem -> cc -> int_freed_top )		4960392	0					
ANR	4961030	Condition	( byte * ) pp >= imem -> cc -> int_freed_top	1546:20:49510:49546	4960392	0	True				
ANR	4961031	RelationalExpression	( byte * ) pp >= imem -> cc -> int_freed_top		4960392	0		>=			
ANR	4961032	CastExpression	( byte * ) pp		4960392	0					
ANR	4961033	CastTarget	byte *		4960392	0					
ANR	4961034	Identifier	pp		4960392	1					
ANR	4961035	PtrMemberAccess	imem -> cc -> int_freed_top		4960392	1					
ANR	4961036	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4961037	Identifier	imem		4960392	0					
ANR	4961038	Identifier	cc		4960392	1					
ANR	4961039	Identifier	int_freed_top		4960392	1					
ANR	4961040	CompoundStatement		133:59:5021:5021	4960392	1					
ANR	4961041	ExpressionStatement	imem -> cc -> int_freed_top = ( byte * ) ptr + rounded_size	1547:20:49571:49623	4960392	0	True				
ANR	4961042	AssignmentExpression	imem -> cc -> int_freed_top = ( byte * ) ptr + rounded_size		4960392	0		=			
ANR	4961043	PtrMemberAccess	imem -> cc -> int_freed_top		4960392	0					
ANR	4961044	PtrMemberAccess	imem -> cc		4960392	0					
ANR	4961045	Identifier	imem		4960392	0					
ANR	4961046	Identifier	cc		4960392	1					
ANR	4961047	Identifier	int_freed_top		4960392	1					
ANR	4961048	AdditiveExpression	( byte * ) ptr + rounded_size		4960392	1		+			
ANR	4961049	CastExpression	( byte * ) ptr		4960392	0					
ANR	4961050	CastTarget	byte *		4960392	0					
ANR	4961051	Identifier	ptr		4960392	1					
ANR	4961052	Identifier	rounded_size		4960392	1					
ANR	4961053	ElseStatement	else		4960392	0					
ANR	4961054	CompoundStatement		137:17:5146:5146	4960392	0					
ANR	4961055	IfStatement	if ( ( byte * ) pp >= imem -> cfreed . cp -> int_freed_top )		4960392	0					
ANR	4961056	Condition	( byte * ) pp >= imem -> cfreed . cp -> int_freed_top	1551:20:49696:49739	4960392	0	True				
ANR	4961057	RelationalExpression	( byte * ) pp >= imem -> cfreed . cp -> int_freed_top		4960392	0		>=			
ANR	4961058	CastExpression	( byte * ) pp		4960392	0					
ANR	4961059	CastTarget	byte *		4960392	0					
ANR	4961060	Identifier	pp		4960392	1					
ANR	4961061	PtrMemberAccess	imem -> cfreed . cp -> int_freed_top		4960392	1					
ANR	4961062	MemberAccess	imem -> cfreed . cp		4960392	0					
ANR	4961063	PtrMemberAccess	imem -> cfreed		4960392	0					
ANR	4961064	Identifier	imem		4960392	0					
ANR	4961065	Identifier	cfreed		4960392	1					
ANR	4961066	Identifier	cp		4960392	1					
ANR	4961067	Identifier	int_freed_top		4960392	1					
ANR	4961068	CompoundStatement		138:66:5214:5214	4960392	1					
ANR	4961069	ExpressionStatement	imem -> cfreed . cp -> int_freed_top = ( byte * ) ptr + rounded_size	1552:20:49764:49823	4960392	0	True				
ANR	4961070	AssignmentExpression	imem -> cfreed . cp -> int_freed_top = ( byte * ) ptr + rounded_size		4960392	0		=			
ANR	4961071	PtrMemberAccess	imem -> cfreed . cp -> int_freed_top		4960392	0					
ANR	4961072	MemberAccess	imem -> cfreed . cp		4960392	0					
ANR	4961073	PtrMemberAccess	imem -> cfreed		4960392	0					
ANR	4961074	Identifier	imem		4960392	0					
ANR	4961075	Identifier	cfreed		4960392	1					
ANR	4961076	Identifier	cp		4960392	1					
ANR	4961077	Identifier	int_freed_top		4960392	1					
ANR	4961078	AdditiveExpression	( byte * ) ptr + rounded_size		4960392	1		+			
ANR	4961079	CastExpression	( byte * ) ptr		4960392	0					
ANR	4961080	CastTarget	byte *		4960392	0					
ANR	4961081	Identifier	ptr		4960392	1					
ANR	4961082	Identifier	rounded_size		4960392	1					
ANR	4961083	ExpressionStatement	pp -> o_type = & st_free	1555:12:49869:49890	4960392	3	True				
ANR	4961084	AssignmentExpression	pp -> o_type = & st_free		4960392	0		=			
ANR	4961085	PtrMemberAccess	pp -> o_type		4960392	0					
ANR	4961086	Identifier	pp		4960392	0					
ANR	4961087	Identifier	o_type		4960392	1					
ANR	4961088	UnaryOperationExpression	& st_free		4960392	1					
ANR	4961089	UnaryOperator	&		4960392	0					
ANR	4961090	Identifier	st_free		4960392	1					
ANR	4961091	ExpressionStatement	o_set_unmarked ( pp )	1556:12:49927:49945	4960392	4	True				
ANR	4961092	CallExpression	o_set_unmarked ( pp )		4960392	0					
ANR	4961093	Callee	o_set_unmarked		4960392	0					
ANR	4961094	Identifier	o_set_unmarked		4960392	0					
ANR	4961095	ArgumentList	pp		4960392	1					
ANR	4961096	Argument	pp		4960392	0					
ANR	4961097	Identifier	pp		4960392	0					
ANR	4961098	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"	1557:12:49959:50003	4960392	5	True				
ANR	4961099	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"		4960392	0					
ANR	4961100	Callee	gs_alloc_fill		4960392	0					
ANR	4961101	Identifier	gs_alloc_fill		4960392	0					
ANR	4961102	ArgumentList	ptr		4960392	1					
ANR	4961103	Argument	ptr		4960392	0					
ANR	4961104	Identifier	ptr		4960392	0					
ANR	4961105	Argument	gs_alloc_fill_free		4960392	1					
ANR	4961106	Identifier	gs_alloc_fill_free		4960392	0					
ANR	4961107	Argument	size		4960392	2					
ANR	4961108	Identifier	size		4960392	0					
ANR	4961109	ExpressionStatement	* ( obj_header_t * * ) ptr = * pfl	1558:12:50017:50046	4960392	6	True				
ANR	4961110	AssignmentExpression	* ( obj_header_t * * ) ptr = * pfl		4960392	0		=			
ANR	4961111	UnaryOperationExpression	* ( obj_header_t * * ) ptr		4960392	0					
ANR	4961112	UnaryOperator	*		4960392	0					
ANR	4961113	CastExpression	( obj_header_t * * ) ptr		4960392	1					
ANR	4961114	CastTarget	obj_header_t * *		4960392	0					
ANR	4961115	Identifier	ptr		4960392	1					
ANR	4961116	UnaryOperationExpression	* pfl		4960392	1					
ANR	4961117	UnaryOperator	*		4960392	0					
ANR	4961118	Identifier	pfl		4960392	1					
ANR	4961119	ExpressionStatement	* pfl = ( obj_header_t * ) ptr	1559:12:50060:50087	4960392	7	True				
ANR	4961120	AssignmentExpression	* pfl = ( obj_header_t * ) ptr		4960392	0		=			
ANR	4961121	UnaryOperationExpression	* pfl		4960392	0					
ANR	4961122	UnaryOperator	*		4960392	0					
ANR	4961123	Identifier	pfl		4960392	1					
ANR	4961124	CastExpression	( obj_header_t * ) ptr		4960392	1					
ANR	4961125	CastTarget	obj_header_t *		4960392	0					
ANR	4961126	Identifier	ptr		4960392	1					
ANR	4961127	ExpressionStatement	"alloc_trace ( ( size > max_freelist_size ? "":-oF"" : "":-of"" ) , imem , cname , pstype , size , ptr )"	1560:12:50101:50214	4960392	8	True				
ANR	4961128	CallExpression	"alloc_trace ( ( size > max_freelist_size ? "":-oF"" : "":-of"" ) , imem , cname , pstype , size , ptr )"		4960392	0					
ANR	4961129	Callee	alloc_trace		4960392	0					
ANR	4961130	Identifier	alloc_trace		4960392	0					
ANR	4961131	ArgumentList	"size > max_freelist_size ? "":-oF"" : "":-of"""		4960392	1					
ANR	4961132	Argument	"size > max_freelist_size ? "":-oF"" : "":-of"""		4960392	0					
ANR	4961133	ConditionalExpression	"size > max_freelist_size ? "":-oF"" : "":-of"""		4960392	0					
ANR	4961134	Condition	size > max_freelist_size		4960392	0					
ANR	4961135	RelationalExpression	size > max_freelist_size		4960392	0		>			
ANR	4961136	Identifier	size		4960392	0					
ANR	4961137	Identifier	max_freelist_size		4960392	1					
ANR	4961138	PrimaryExpression	""":-oF"""		4960392	1					
ANR	4961139	PrimaryExpression	""":-of"""		4960392	2					
ANR	4961140	Argument	imem		4960392	1					
ANR	4961141	Identifier	imem		4960392	0					
ANR	4961142	Argument	cname		4960392	2					
ANR	4961143	Identifier	cname		4960392	0					
ANR	4961144	Argument	pstype		4960392	3					
ANR	4961145	Identifier	pstype		4960392	0					
ANR	4961146	Argument	size		4960392	4					
ANR	4961147	Identifier	size		4960392	0					
ANR	4961148	Argument	ptr		4960392	5					
ANR	4961149	Identifier	ptr		4960392	0					
ANR	4961150	ReturnStatement	return ;	1562:12:50228:50234	4960392	9	True				
ANR	4961151	ElseStatement	else		4960392	0					
ANR	4961152	CompoundStatement		152:11:5790:5790	4960392	0					
ANR	4961153	ExpressionStatement	pp -> o_type = & st_free	1566:8:50328:50349	4960392	0	True				
ANR	4961154	AssignmentExpression	pp -> o_type = & st_free		4960392	0		=			
ANR	4961155	PtrMemberAccess	pp -> o_type		4960392	0					
ANR	4961156	Identifier	pp		4960392	0					
ANR	4961157	Identifier	o_type		4960392	1					
ANR	4961158	UnaryOperationExpression	& st_free		4960392	1					
ANR	4961159	UnaryOperator	&		4960392	0					
ANR	4961160	Identifier	st_free		4960392	1					
ANR	4961161	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"	1567:8:50382:50426	4960392	1	True				
ANR	4961162	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"		4960392	0					
ANR	4961163	Callee	gs_alloc_fill		4960392	0					
ANR	4961164	Identifier	gs_alloc_fill		4960392	0					
ANR	4961165	ArgumentList	ptr		4960392	1					
ANR	4961166	Argument	ptr		4960392	0					
ANR	4961167	Identifier	ptr		4960392	0					
ANR	4961168	Argument	gs_alloc_fill_free		4960392	1					
ANR	4961169	Identifier	gs_alloc_fill_free		4960392	0					
ANR	4961170	Argument	size		4960392	2					
ANR	4961171	Identifier	size		4960392	0					
ANR	4961172	ExpressionStatement	"alloc_trace ( "":-o#"" , imem , cname , pstype , size , ptr )"	1569:4:50438:50489	4960392	20	True				
ANR	4961173	CallExpression	"alloc_trace ( "":-o#"" , imem , cname , pstype , size , ptr )"		4960392	0					
ANR	4961174	Callee	alloc_trace		4960392	0					
ANR	4961175	Identifier	alloc_trace		4960392	0					
ANR	4961176	ArgumentList	""":-o#"""		4960392	1					
ANR	4961177	Argument	""":-o#"""		4960392	0					
ANR	4961178	PrimaryExpression	""":-o#"""		4960392	0					
ANR	4961179	Argument	imem		4960392	1					
ANR	4961180	Identifier	imem		4960392	0					
ANR	4961181	Argument	cname		4960392	2					
ANR	4961182	Identifier	cname		4960392	0					
ANR	4961183	Argument	pstype		4960392	3					
ANR	4961184	Identifier	pstype		4960392	0					
ANR	4961185	Argument	size		4960392	4					
ANR	4961186	Identifier	size		4960392	0					
ANR	4961187	Argument	ptr		4960392	5					
ANR	4961188	Identifier	ptr		4960392	0					
ANR	4961189	ExpressionStatement	imem -> lost . objects += obj_size_round ( size )	1570:4:50495:50537	4960392	21	True				
ANR	4961190	AssignmentExpression	imem -> lost . objects += obj_size_round ( size )		4960392	0		+=			
ANR	4961191	MemberAccess	imem -> lost . objects		4960392	0					
ANR	4961192	PtrMemberAccess	imem -> lost		4960392	0					
ANR	4961193	Identifier	imem		4960392	0					
ANR	4961194	Identifier	lost		4960392	1					
ANR	4961195	Identifier	objects		4960392	1					
ANR	4961196	CallExpression	obj_size_round ( size )		4960392	1					
ANR	4961197	Callee	obj_size_round		4960392	0					
ANR	4961198	Identifier	obj_size_round		4960392	0					
ANR	4961199	ArgumentList	size		4960392	1					
ANR	4961200	Argument	size		4960392	0					
ANR	4961201	Identifier	size		4960392	0					
ANR	4961202	ReturnType	static void		4960392	1					
ANR	4961203	Identifier	i_free_object		4960392	2					
ANR	4961204	ParameterList	"gs_memory_t * mem , void * ptr , client_name_t cname"		4960392	3					
ANR	4961205	Parameter	gs_memory_t * mem	1413:14:44476:44492	4960392	0	True				
ANR	4961206	ParameterType	gs_memory_t *		4960392	0					
ANR	4961207	Identifier	mem		4960392	1					
ANR	4961208	Parameter	void * ptr	1413:33:44495:44503	4960392	1	True				
ANR	4961209	ParameterType	void *		4960392	0					
ANR	4961210	Identifier	ptr		4960392	1					
ANR	4961211	Parameter	client_name_t cname	1413:44:44506:44524	4960392	2	True				
ANR	4961212	ParameterType	client_name_t		4960392	0					
ANR	4961213	Identifier	cname		4960392	1					
ANR	4961214	CFGEntryNode	ENTRY		4960392		True				
ANR	4961215	CFGExitNode	EXIT		4960392		True				
ANR	4961216	Symbol	pp		4960392						
ANR	4961217	Symbol	pp -> o_alone		4960392						
ANR	4961218	Symbol	imem -> largest_free_size		4960392						
ANR	4961219	Symbol	obj_align_round		4960392						
ANR	4961220	Symbol	& cld		4960392						
ANR	4961221	Symbol	& st_free		4960392						
ANR	4961222	Symbol	pstype -> finalize		4960392						
ANR	4961223	Symbol	gs_alloc_fill_free		4960392						
ANR	4961224	Symbol	imem -> cc		4960392						
ANR	4961225	Symbol	* pstype		4960392						
ANR	4961226	Symbol	gs_debug		4960392						
ANR	4961227	Symbol	obj_size_round		4960392						
ANR	4961228	Symbol	pstype		4960392						
ANR	4961229	Symbol	* ptr		4960392						
ANR	4961230	Symbol	PTR_BETWEEN		4960392						
ANR	4961231	Symbol	imem -> cfreed . memory		4960392						
ANR	4961232	Symbol	gs_debug_c		4960392						
ANR	4961233	Symbol	cld		4960392						
ANR	4961234	Symbol	imem -> lost . objects		4960392						
ANR	4961235	Symbol	* gs_debug		4960392						
ANR	4961236	Symbol	* imem -> cc		4960392						
ANR	4961237	Symbol	* imem		4960392						
ANR	4961238	Symbol	pp -> o_type		4960392						
ANR	4961239	Symbol	imem -> freelists		4960392						
ANR	4961240	Symbol	imem -> cfreed . cp		4960392						
ANR	4961241	Symbol	* pfl		4960392						
ANR	4961242	Symbol	struct_type_name_string		4960392						
ANR	4961243	Symbol	* pp		4960392						
ANR	4961244	Symbol	imem -> cfreed . cp -> chead		4960392						
ANR	4961245	Symbol	cld . memory -> saved		4960392						
ANR	4961246	Symbol	* finalize		4960392						
ANR	4961247	Symbol	clump_locate		4960392						
ANR	4961248	Symbol	clump_locate_ptr		4960392						
ANR	4961249	Symbol	& cl		4960392						
ANR	4961250	Symbol	size		4960392						
ANR	4961251	Symbol	max_freelist_size		4960392						
ANR	4961252	Symbol	cld . cp		4960392						
ANR	4961253	Symbol	pfl		4960392						
ANR	4961254	Symbol	client_name_string		4960392						
ANR	4961255	Symbol	obj_align_mask		4960392						
ANR	4961256	Symbol	cld . cp -> cbase		4960392						
ANR	4961257	Symbol	& imem -> cfreed		4960392						
ANR	4961258	Symbol	cld . cp -> cbot		4960392						
ANR	4961259	Symbol	cld . memory -> root		4960392						
ANR	4961260	Symbol	log2_obj_align_mod		4960392						
ANR	4961261	Symbol	cname		4960392						
ANR	4961262	Symbol	LARGE_FREELIST_INDEX		4960392						
ANR	4961263	Symbol	& saved_stype		4960392						
ANR	4961264	Symbol	imem -> cc -> chead		4960392						
ANR	4961265	Symbol	rounded_size		4960392						
ANR	4961266	Symbol	imem -> cfreed . cp -> int_freed_top		4960392						
ANR	4961267	Symbol	mem		4960392						
ANR	4961268	Symbol	imem -> cc -> int_freed_top		4960392						
ANR	4961269	Symbol	cl . cp		4960392						
ANR	4961270	Symbol	pre_obj_contents_size		4960392						
ANR	4961271	Symbol	* * imem		4960392						
ANR	4961272	Symbol	imem -> lost		4960392						
ANR	4961273	Symbol	cl		4960392						
ANR	4961274	Symbol	ptr		4960392						
ANR	4961275	Symbol	cl . memory		4960392						
ANR	4961276	Symbol	imem -> cfreed		4960392						
ANR	4961277	Symbol	cld . memory		4960392						
ANR	4961278	Symbol	* cld . cp		4960392						
ANR	4961279	Symbol	imem -> cc -> cbot		4960392						
ANR	4961280	Symbol	imem -> is_controlled		4960392						
ANR	4961281	Symbol	* ( obj_header_t * * ) ptr		4960392						
ANR	4961282	Symbol	finalize		4960392						
ANR	4961283	Symbol	* cld		4960392						
ANR	4961284	Symbol	* imem -> cfreed . cp		4960392						
ANR	4961285	Symbol	imem		4960392						
ANR	4961286	Symbol	saved_stype		4960392						
ANR	4961287	Symbol	* imem -> cfreed		4960392						
ANR	4961288	Symbol	* cld . memory		4960392						
ANR	4961289	Function	i_alloc_string	1572:0:50541:52609							
ANR	4961290	FunctionDef	"i_alloc_string (gs_memory_t * mem , uint nbytes , client_name_t cname)"		4961289	0					
ANR	4961291	CompoundStatement		1574:0:50623:52609	4961289	0					
ANR	4961292	Statement	gs_ref_memory_t	1575:4:50629:50643	4961289	0	True				
ANR	4961293	Statement	*	1575:20:50645:50645	4961289	1	True				
ANR	4961294	Statement	const	1575:22:50647:50651	4961289	2	True				
ANR	4961295	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1575:28:50653:50682	4961289	3	True				
ANR	4961296	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4961289	0		=			
ANR	4961297	Identifier	imem		4961289	0					
ANR	4961298	CastExpression	( gs_ref_memory_t * ) mem		4961289	1					
ANR	4961299	CastTarget	gs_ref_memory_t *		4961289	0					
ANR	4961300	Identifier	mem		4961289	1					
ANR	4961301	IdentifierDeclStatement	byte * str ;	1576:4:50688:50697	4961289	4	True				
ANR	4961302	IdentifierDecl	* str		4961289	0					
ANR	4961303	IdentifierDeclType	byte *		4961289	0					
ANR	4961304	Identifier	str		4961289	1					
ANR	4961305	IdentifierDeclStatement	clump_splay_walker sw ;	1577:4:50703:50724	4961289	5	True				
ANR	4961306	IdentifierDecl	sw		4961289	0					
ANR	4961307	IdentifierDeclType	clump_splay_walker		4961289	0					
ANR	4961308	Identifier	sw		4961289	1					
ANR	4961309	IdentifierDeclStatement	"clump_t * cp = clump_splay_walk_init_mid ( & sw , imem -> cc ) ;"	1583:4:50850:50904	4961289	6	True				
ANR	4961310	IdentifierDecl	"* cp = clump_splay_walk_init_mid ( & sw , imem -> cc )"		4961289	0					
ANR	4961311	IdentifierDeclType	clump_t *		4961289	0					
ANR	4961312	Identifier	cp		4961289	1					
ANR	4961313	AssignmentExpression	"* cp = clump_splay_walk_init_mid ( & sw , imem -> cc )"		4961289	2		=			
ANR	4961314	Identifier	cp		4961289	0					
ANR	4961315	CallExpression	"clump_splay_walk_init_mid ( & sw , imem -> cc )"		4961289	1					
ANR	4961316	Callee	clump_splay_walk_init_mid		4961289	0					
ANR	4961317	Identifier	clump_splay_walk_init_mid		4961289	0					
ANR	4961318	ArgumentList	& sw		4961289	1					
ANR	4961319	Argument	& sw		4961289	0					
ANR	4961320	UnaryOperationExpression	& sw		4961289	0					
ANR	4961321	UnaryOperator	&		4961289	0					
ANR	4961322	Identifier	sw		4961289	1					
ANR	4961323	Argument	imem -> cc		4961289	1					
ANR	4961324	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961325	Identifier	imem		4961289	0					
ANR	4961326	Identifier	cc		4961289	1					
ANR	4961327	IfStatement	if ( nbytes + ( uint ) HDR_ID_OFFSET < nbytes )		4961289	7					
ANR	4961328	Condition	nbytes + ( uint ) HDR_ID_OFFSET < nbytes	1585:8:50915:50951	4961289	0	True				
ANR	4961329	RelationalExpression	nbytes + ( uint ) HDR_ID_OFFSET < nbytes		4961289	0		<			
ANR	4961330	AdditiveExpression	nbytes + ( uint ) HDR_ID_OFFSET		4961289	0		+			
ANR	4961331	Identifier	nbytes		4961289	0					
ANR	4961332	CastExpression	( uint ) HDR_ID_OFFSET		4961289	1					
ANR	4961333	CastTarget	uint		4961289	0					
ANR	4961334	Identifier	HDR_ID_OFFSET		4961289	1					
ANR	4961335	Identifier	nbytes		4961289	1					
ANR	4961336	ReturnStatement	return NULL ;	1586:8:50962:50973	4961289	1	True				
ANR	4961337	Identifier	NULL		4961289	0					
ANR	4961338	ExpressionStatement	nbytes += HDR_ID_OFFSET	1588:4:50980:51003	4961289	8	True				
ANR	4961339	AssignmentExpression	nbytes += HDR_ID_OFFSET		4961289	0		+=			
ANR	4961340	Identifier	nbytes		4961289	0					
ANR	4961341	Identifier	HDR_ID_OFFSET		4961289	1					
ANR	4961342	IfStatement	if ( Memento_failThisEvent ( ) )		4961289	9					
ANR	4961343	Condition	Memento_failThisEvent ( )	1591:8:51029:51051	4961289	0	True				
ANR	4961344	CallExpression	Memento_failThisEvent ( )		4961289	0					
ANR	4961345	Callee	Memento_failThisEvent		4961289	0					
ANR	4961346	Identifier	Memento_failThisEvent		4961289	0					
ANR	4961347	ArgumentList			4961289	1					
ANR	4961348	ReturnStatement	return NULL ;	1592:8:51062:51073	4961289	1	True				
ANR	4961349	Identifier	NULL		4961289	0					
ANR	4961350	IfStatement	if ( cp == 0 )		4961289	10					
ANR	4961351	Condition	cp == 0	1594:8:51090:51096	4961289	0	True				
ANR	4961352	EqualityExpression	cp == 0		4961289	0		==			
ANR	4961353	Identifier	cp		4961289	0					
ANR	4961354	PrimaryExpression	0		4961289	1					
ANR	4961355	CompoundStatement		21:17:475:475	4961289	1					
ANR	4961356	ExpressionStatement	"imem -> cc = clump_splay_walk_init ( & sw , imem )"	1596:8:51148:51191	4961289	0	True				
ANR	4961357	AssignmentExpression	"imem -> cc = clump_splay_walk_init ( & sw , imem )"		4961289	0		=			
ANR	4961358	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961359	Identifier	imem		4961289	0					
ANR	4961360	Identifier	cc		4961289	1					
ANR	4961361	CallExpression	"clump_splay_walk_init ( & sw , imem )"		4961289	1					
ANR	4961362	Callee	clump_splay_walk_init		4961289	0					
ANR	4961363	Identifier	clump_splay_walk_init		4961289	0					
ANR	4961364	ArgumentList	& sw		4961289	1					
ANR	4961365	Argument	& sw		4961289	0					
ANR	4961366	UnaryOperationExpression	& sw		4961289	0					
ANR	4961367	UnaryOperator	&		4961289	0					
ANR	4961368	Identifier	sw		4961289	1					
ANR	4961369	Argument	imem		4961289	1					
ANR	4961370	Identifier	imem		4961289	0					
ANR	4961371	ExpressionStatement	alloc_open_clump ( imem )	1597:8:51201:51223	4961289	1	True				
ANR	4961372	CallExpression	alloc_open_clump ( imem )		4961289	0					
ANR	4961373	Callee	alloc_open_clump		4961289	0					
ANR	4961374	Identifier	alloc_open_clump		4961289	0					
ANR	4961375	ArgumentList	imem		4961289	1					
ANR	4961376	Argument	imem		4961289	0					
ANR	4961377	Identifier	imem		4961289	0					
ANR	4961378	Label	top :	1599:0:51231:51234	4961289	11	True				
ANR	4961379	Identifier	top		4961289	0					
ANR	4961380	IfStatement	if ( imem -> cc && ! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes )		4961289	12					
ANR	4961381	Condition	imem -> cc && ! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes	1600:8:51244:51317	4961289	0	True				
ANR	4961382	AndExpression	imem -> cc && ! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes		4961289	0		&&			
ANR	4961383	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961384	Identifier	imem		4961289	0					
ANR	4961385	Identifier	cc		4961289	1					
ANR	4961386	AndExpression	! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes		4961289	1		&&			
ANR	4961387	UnaryOperationExpression	! imem -> cc -> c_alone		4961289	0					
ANR	4961388	UnaryOperator	!		4961289	0					
ANR	4961389	PtrMemberAccess	imem -> cc -> c_alone		4961289	1					
ANR	4961390	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961391	Identifier	imem		4961289	0					
ANR	4961392	Identifier	cc		4961289	1					
ANR	4961393	Identifier	c_alone		4961289	1					
ANR	4961394	RelationalExpression	imem -> cc -> ctop - imem -> cc -> cbot > nbytes		4961289	1		>			
ANR	4961395	AdditiveExpression	imem -> cc -> ctop - imem -> cc -> cbot		4961289	0		-			
ANR	4961396	PtrMemberAccess	imem -> cc -> ctop		4961289	0					
ANR	4961397	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961398	Identifier	imem		4961289	0					
ANR	4961399	Identifier	cc		4961289	1					
ANR	4961400	Identifier	ctop		4961289	1					
ANR	4961401	PtrMemberAccess	imem -> cc -> cbot		4961289	1					
ANR	4961402	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961403	Identifier	imem		4961289	0					
ANR	4961404	Identifier	cc		4961289	1					
ANR	4961405	Identifier	cbot		4961289	1					
ANR	4961406	Identifier	nbytes		4961289	1					
ANR	4961407	CompoundStatement		27:84:696:696	4961289	1					
ANR	4961408	ExpressionStatement	"if_debug4m ( 'A' , mem , ""[a%d:+> ]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) ( imem -> cc -> ctop - nbytes ) )"	1601:8:51330:51512	4961289	0	True				
ANR	4961409	CallExpression	"if_debug4m ( 'A' , mem , ""[a%d:+> ]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) ( imem -> cc -> ctop - nbytes ) )"		4961289	0					
ANR	4961410	Callee	if_debug4m		4961289	0					
ANR	4961411	Identifier	if_debug4m		4961289	0					
ANR	4961412	ArgumentList	'A'		4961289	1					
ANR	4961413	Argument	'A'		4961289	0					
ANR	4961414	PrimaryExpression	'A'		4961289	0					
ANR	4961415	Argument	mem		4961289	1					
ANR	4961416	Identifier	mem		4961289	0					
ANR	4961417	Argument	"""[a%d:+> ]%s(%u) = 0x%lx\\n"""		4961289	2					
ANR	4961418	PrimaryExpression	"""[a%d:+> ]%s(%u) = 0x%lx\\n"""		4961289	0					
ANR	4961419	Argument	alloc_trace_space ( imem )		4961289	3					
ANR	4961420	CallExpression	alloc_trace_space ( imem )		4961289	0					
ANR	4961421	Callee	alloc_trace_space		4961289	0					
ANR	4961422	Identifier	alloc_trace_space		4961289	0					
ANR	4961423	ArgumentList	imem		4961289	1					
ANR	4961424	Argument	imem		4961289	0					
ANR	4961425	Identifier	imem		4961289	0					
ANR	4961426	Argument	client_name_string ( cname )		4961289	4					
ANR	4961427	CallExpression	client_name_string ( cname )		4961289	0					
ANR	4961428	Callee	client_name_string		4961289	0					
ANR	4961429	Identifier	client_name_string		4961289	0					
ANR	4961430	ArgumentList	cname		4961289	1					
ANR	4961431	Argument	cname		4961289	0					
ANR	4961432	Identifier	cname		4961289	0					
ANR	4961433	Argument	nbytes		4961289	5					
ANR	4961434	Identifier	nbytes		4961289	0					
ANR	4961435	Argument	( ulong ) ( imem -> cc -> ctop - nbytes )		4961289	6					
ANR	4961436	CastExpression	( ulong ) ( imem -> cc -> ctop - nbytes )		4961289	0					
ANR	4961437	CastTarget	ulong		4961289	0					
ANR	4961438	AdditiveExpression	imem -> cc -> ctop - nbytes		4961289	1		-			
ANR	4961439	PtrMemberAccess	imem -> cc -> ctop		4961289	0					
ANR	4961440	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961441	Identifier	imem		4961289	0					
ANR	4961442	Identifier	cc		4961289	1					
ANR	4961443	Identifier	ctop		4961289	1					
ANR	4961444	Identifier	nbytes		4961289	1					
ANR	4961445	ExpressionStatement	str = imem -> cc -> ctop -= nbytes	1604:8:51522:51552	4961289	1	True				
ANR	4961446	AssignmentExpression	str = imem -> cc -> ctop -= nbytes		4961289	0		=			
ANR	4961447	Identifier	str		4961289	0					
ANR	4961448	AssignmentExpression	imem -> cc -> ctop -= nbytes		4961289	1		-=			
ANR	4961449	PtrMemberAccess	imem -> cc -> ctop		4961289	0					
ANR	4961450	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961451	Identifier	imem		4961289	0					
ANR	4961452	Identifier	cc		4961289	1					
ANR	4961453	Identifier	ctop		4961289	1					
ANR	4961454	Identifier	nbytes		4961289	1					
ANR	4961455	ExpressionStatement	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"	1605:8:51562:51609	4961289	2	True				
ANR	4961456	CallExpression	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"		4961289	0					
ANR	4961457	Callee	gs_alloc_fill		4961289	0					
ANR	4961458	Identifier	gs_alloc_fill		4961289	0					
ANR	4961459	ArgumentList	str		4961289	1					
ANR	4961460	Argument	str		4961289	0					
ANR	4961461	Identifier	str		4961289	0					
ANR	4961462	Argument	gs_alloc_fill_alloc		4961289	1					
ANR	4961463	Identifier	gs_alloc_fill_alloc		4961289	0					
ANR	4961464	Argument	nbytes		4961289	2					
ANR	4961465	Identifier	nbytes		4961289	0					
ANR	4961466	ExpressionStatement	str += HDR_ID_OFFSET	1606:8:51619:51639	4961289	3	True				
ANR	4961467	AssignmentExpression	str += HDR_ID_OFFSET		4961289	0		+=			
ANR	4961468	Identifier	str		4961289	0					
ANR	4961469	Identifier	HDR_ID_OFFSET		4961289	1					
ANR	4961470	ExpressionStatement	ASSIGN_HDR_ID ( str )	1607:8:51649:51667	4961289	4	True				
ANR	4961471	CallExpression	ASSIGN_HDR_ID ( str )		4961289	0					
ANR	4961472	Callee	ASSIGN_HDR_ID		4961289	0					
ANR	4961473	Identifier	ASSIGN_HDR_ID		4961289	0					
ANR	4961474	ArgumentList	str		4961289	1					
ANR	4961475	Argument	str		4961289	0					
ANR	4961476	Identifier	str		4961289	0					
ANR	4961477	ReturnStatement	return str ;	1608:8:51677:51687	4961289	5	True				
ANR	4961478	Identifier	str		4961289	0					
ANR	4961479	ExpressionStatement	cp = clump_splay_walk_fwd ( & sw )	1611:4:51729:51759	4961289	13	True				
ANR	4961480	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )		4961289	0		=			
ANR	4961481	Identifier	cp		4961289	0					
ANR	4961482	CallExpression	clump_splay_walk_fwd ( & sw )		4961289	1					
ANR	4961483	Callee	clump_splay_walk_fwd		4961289	0					
ANR	4961484	Identifier	clump_splay_walk_fwd		4961289	0					
ANR	4961485	ArgumentList	& sw		4961289	1					
ANR	4961486	Argument	& sw		4961289	0					
ANR	4961487	UnaryOperationExpression	& sw		4961289	0					
ANR	4961488	UnaryOperator	&		4961289	0					
ANR	4961489	Identifier	sw		4961289	1					
ANR	4961490	IfStatement	if ( cp != NULL )		4961289	14					
ANR	4961491	Condition	cp != NULL	1613:8:51770:51779	4961289	0	True				
ANR	4961492	EqualityExpression	cp != NULL		4961289	0		!=			
ANR	4961493	Identifier	cp		4961289	0					
ANR	4961494	Identifier	NULL		4961289	1					
ANR	4961495	CompoundStatement		41:4:1162:1162	4961289	1					
ANR	4961496	ExpressionStatement	alloc_close_clump ( imem )	1615:8:51796:51819	4961289	0	True				
ANR	4961497	CallExpression	alloc_close_clump ( imem )		4961289	0					
ANR	4961498	Callee	alloc_close_clump		4961289	0					
ANR	4961499	Identifier	alloc_close_clump		4961289	0					
ANR	4961500	ArgumentList	imem		4961289	1					
ANR	4961501	Argument	imem		4961289	0					
ANR	4961502	Identifier	imem		4961289	0					
ANR	4961503	ExpressionStatement	imem -> cc = cp	1616:8:51829:51842	4961289	1	True				
ANR	4961504	AssignmentExpression	imem -> cc = cp		4961289	0		=			
ANR	4961505	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961506	Identifier	imem		4961289	0					
ANR	4961507	Identifier	cc		4961289	1					
ANR	4961508	Identifier	cp		4961289	1					
ANR	4961509	ExpressionStatement	alloc_open_clump ( imem )	1617:8:51852:51874	4961289	2	True				
ANR	4961510	CallExpression	alloc_open_clump ( imem )		4961289	0					
ANR	4961511	Callee	alloc_open_clump		4961289	0					
ANR	4961512	Identifier	alloc_open_clump		4961289	0					
ANR	4961513	ArgumentList	imem		4961289	1					
ANR	4961514	Argument	imem		4961289	0					
ANR	4961515	Identifier	imem		4961289	0					
ANR	4961516	GotoStatement	goto top ;	1618:8:51884:51892	4961289	3	True				
ANR	4961517	Identifier	top		4961289	0					
ANR	4961518	IfStatement	if ( nbytes > string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum )		4961289	15					
ANR	4961519	Condition	nbytes > string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum	1620:8:51908:51998	4961289	0	True				
ANR	4961520	RelationalExpression	nbytes > string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum		4961289	0		>			
ANR	4961521	Identifier	nbytes		4961289	0					
ANR	4961522	MultiplicativeExpression	string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum		4961289	1		*			
ANR	4961523	CallExpression	string_space_quanta ( max_uint - sizeof ( clump_head_t ) )		4961289	0					
ANR	4961524	Callee	string_space_quanta		4961289	0					
ANR	4961525	Identifier	string_space_quanta		4961289	0					
ANR	4961526	ArgumentList	max_uint - sizeof ( clump_head_t )		4961289	1					
ANR	4961527	Argument	max_uint - sizeof ( clump_head_t )		4961289	0					
ANR	4961528	AdditiveExpression	max_uint - sizeof ( clump_head_t )		4961289	0		-			
ANR	4961529	Identifier	max_uint		4961289	0					
ANR	4961530	SizeofExpression	sizeof ( clump_head_t )		4961289	1					
ANR	4961531	Sizeof	sizeof		4961289	0					
ANR	4961532	SizeofOperand	clump_head_t		4961289	1					
ANR	4961533	Identifier	string_data_quantum		4961289	1					
ANR	4961534	CompoundStatement		49:10:1386:1386	4961289	1					
ANR	4961535	ReturnStatement	return 0 ;	1623:8:52064:52072	4961289	0	True				
ANR	4961536	PrimaryExpression	0		4961289	0					
ANR	4961537	IfStatement	if ( nbytes >= imem -> large_size )		4961289	16					
ANR	4961538	Condition	nbytes >= imem -> large_size	1625:8:52088:52113	4961289	0	True				
ANR	4961539	RelationalExpression	nbytes >= imem -> large_size		4961289	0		>=			
ANR	4961540	Identifier	nbytes		4961289	0					
ANR	4961541	PtrMemberAccess	imem -> large_size		4961289	1					
ANR	4961542	Identifier	imem		4961289	0					
ANR	4961543	Identifier	large_size		4961289	1					
ANR	4961544	CompoundStatement		52:36:1492:1492	4961289	1					
ANR	4961545	ReturnStatement	"return i_alloc_string_immovable ( mem , nbytes , cname ) ;"	1626:8:52161:52212	4961289	0	True				
ANR	4961546	CallExpression	"i_alloc_string_immovable ( mem , nbytes , cname )"		4961289	0					
ANR	4961547	Callee	i_alloc_string_immovable		4961289	0					
ANR	4961548	Identifier	i_alloc_string_immovable		4961289	0					
ANR	4961549	ArgumentList	mem		4961289	1					
ANR	4961550	Argument	mem		4961289	0					
ANR	4961551	Identifier	mem		4961289	0					
ANR	4961552	Argument	nbytes		4961289	1					
ANR	4961553	Identifier	nbytes		4961289	0					
ANR	4961554	Argument	cname		4961289	2					
ANR	4961555	Identifier	cname		4961289	0					
ANR	4961556	ElseStatement	else		4961289	0					
ANR	4961557	CompoundStatement		54:11:1601:1601	4961289	0					
ANR	4961558	ExpressionStatement	"cp = alloc_acquire_clump ( imem , ( ulong ) imem -> clump_size , true , ""clump"" )"	1628:8:52262:52333	4961289	0	True				
ANR	4961559	AssignmentExpression	"cp = alloc_acquire_clump ( imem , ( ulong ) imem -> clump_size , true , ""clump"" )"		4961289	0		=			
ANR	4961560	Identifier	cp		4961289	0					
ANR	4961561	CallExpression	"alloc_acquire_clump ( imem , ( ulong ) imem -> clump_size , true , ""clump"" )"		4961289	1					
ANR	4961562	Callee	alloc_acquire_clump		4961289	0					
ANR	4961563	Identifier	alloc_acquire_clump		4961289	0					
ANR	4961564	ArgumentList	imem		4961289	1					
ANR	4961565	Argument	imem		4961289	0					
ANR	4961566	Identifier	imem		4961289	0					
ANR	4961567	Argument	( ulong ) imem -> clump_size		4961289	1					
ANR	4961568	CastExpression	( ulong ) imem -> clump_size		4961289	0					
ANR	4961569	CastTarget	ulong		4961289	0					
ANR	4961570	PtrMemberAccess	imem -> clump_size		4961289	1					
ANR	4961571	Identifier	imem		4961289	0					
ANR	4961572	Identifier	clump_size		4961289	1					
ANR	4961573	Argument	true		4961289	2					
ANR	4961574	Identifier	true		4961289	0					
ANR	4961575	Argument	"""clump"""		4961289	3					
ANR	4961576	PrimaryExpression	"""clump"""		4961289	0					
ANR	4961577	IfStatement	if ( cp == 0 )		4961289	1					
ANR	4961578	Condition	cp == 0	1630:12:52348:52354	4961289	0	True				
ANR	4961579	EqualityExpression	cp == 0		4961289	0		==			
ANR	4961580	Identifier	cp		4961289	0					
ANR	4961581	PrimaryExpression	0		4961289	1					
ANR	4961582	ReturnStatement	return 0 ;	1631:12:52369:52377	4961289	1	True				
ANR	4961583	PrimaryExpression	0		4961289	0					
ANR	4961584	ExpressionStatement	alloc_close_clump ( imem )	1632:8:52387:52410	4961289	2	True				
ANR	4961585	CallExpression	alloc_close_clump ( imem )		4961289	0					
ANR	4961586	Callee	alloc_close_clump		4961289	0					
ANR	4961587	Identifier	alloc_close_clump		4961289	0					
ANR	4961588	ArgumentList	imem		4961289	1					
ANR	4961589	Argument	imem		4961289	0					
ANR	4961590	Identifier	imem		4961289	0					
ANR	4961591	ExpressionStatement	"imem -> cc = clump_splay_walk_init_mid ( & sw , cp )"	1633:8:52420:52465	4961289	3	True				
ANR	4961592	AssignmentExpression	"imem -> cc = clump_splay_walk_init_mid ( & sw , cp )"		4961289	0		=			
ANR	4961593	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961594	Identifier	imem		4961289	0					
ANR	4961595	Identifier	cc		4961289	1					
ANR	4961596	CallExpression	"clump_splay_walk_init_mid ( & sw , cp )"		4961289	1					
ANR	4961597	Callee	clump_splay_walk_init_mid		4961289	0					
ANR	4961598	Identifier	clump_splay_walk_init_mid		4961289	0					
ANR	4961599	ArgumentList	& sw		4961289	1					
ANR	4961600	Argument	& sw		4961289	0					
ANR	4961601	UnaryOperationExpression	& sw		4961289	0					
ANR	4961602	UnaryOperator	&		4961289	0					
ANR	4961603	Identifier	sw		4961289	1					
ANR	4961604	Argument	cp		4961289	1					
ANR	4961605	Identifier	cp		4961289	0					
ANR	4961606	ExpressionStatement	"gs_alloc_fill ( imem -> cc -> cbase , gs_alloc_fill_free , imem -> cc -> climit - imem -> cc -> cbase )"	1634:8:52475:52583	4961289	4	True				
ANR	4961607	CallExpression	"gs_alloc_fill ( imem -> cc -> cbase , gs_alloc_fill_free , imem -> cc -> climit - imem -> cc -> cbase )"		4961289	0					
ANR	4961608	Callee	gs_alloc_fill		4961289	0					
ANR	4961609	Identifier	gs_alloc_fill		4961289	0					
ANR	4961610	ArgumentList	imem -> cc -> cbase		4961289	1					
ANR	4961611	Argument	imem -> cc -> cbase		4961289	0					
ANR	4961612	PtrMemberAccess	imem -> cc -> cbase		4961289	0					
ANR	4961613	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961614	Identifier	imem		4961289	0					
ANR	4961615	Identifier	cc		4961289	1					
ANR	4961616	Identifier	cbase		4961289	1					
ANR	4961617	Argument	gs_alloc_fill_free		4961289	1					
ANR	4961618	Identifier	gs_alloc_fill_free		4961289	0					
ANR	4961619	Argument	imem -> cc -> climit - imem -> cc -> cbase		4961289	2					
ANR	4961620	AdditiveExpression	imem -> cc -> climit - imem -> cc -> cbase		4961289	0		-			
ANR	4961621	PtrMemberAccess	imem -> cc -> climit		4961289	0					
ANR	4961622	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961623	Identifier	imem		4961289	0					
ANR	4961624	Identifier	cc		4961289	1					
ANR	4961625	Identifier	climit		4961289	1					
ANR	4961626	PtrMemberAccess	imem -> cc -> cbase		4961289	1					
ANR	4961627	PtrMemberAccess	imem -> cc		4961289	0					
ANR	4961628	Identifier	imem		4961289	0					
ANR	4961629	Identifier	cc		4961289	1					
ANR	4961630	Identifier	cbase		4961289	1					
ANR	4961631	GotoStatement	goto top ;	1636:8:52593:52601	4961289	5	True				
ANR	4961632	Identifier	top		4961289	0					
ANR	4961633	ReturnType	static byte *		4961289	1					
ANR	4961634	Identifier	i_alloc_string		4961289	2					
ANR	4961635	ParameterList	"gs_memory_t * mem , uint nbytes , client_name_t cname"		4961289	3					
ANR	4961636	Parameter	gs_memory_t * mem	1573:15:50570:50586	4961289	0	True				
ANR	4961637	ParameterType	gs_memory_t *		4961289	0					
ANR	4961638	Identifier	mem		4961289	1					
ANR	4961639	Parameter	uint nbytes	1573:34:50589:50599	4961289	1	True				
ANR	4961640	ParameterType	uint		4961289	0					
ANR	4961641	Identifier	nbytes		4961289	1					
ANR	4961642	Parameter	client_name_t cname	1573:47:50602:50620	4961289	2	True				
ANR	4961643	ParameterType	client_name_t		4961289	0					
ANR	4961644	Identifier	cname		4961289	1					
ANR	4961645	CFGEntryNode	ENTRY		4961289		True				
ANR	4961646	CFGExitNode	EXIT		4961289		True				
ANR	4961647	Symbol	max_uint		4961289						
ANR	4961648	Symbol	gs_alloc_fill_free		4961289						
ANR	4961649	Symbol	cname		4961289						
ANR	4961650	Symbol	imem -> cc		4961289						
ANR	4961651	Symbol	imem -> cc -> c_alone		4961289						
ANR	4961652	Symbol	i_alloc_string_immovable		4961289						
ANR	4961653	Symbol	clump_splay_walk_init_mid		4961289						
ANR	4961654	Symbol	alloc_trace_space		4961289						
ANR	4961655	Symbol	& sw		4961289						
ANR	4961656	Symbol	mem		4961289						
ANR	4961657	Symbol	HDR_ID_OFFSET		4961289						
ANR	4961658	Symbol	clump_splay_walk_init		4961289						
ANR	4961659	Symbol	string_data_quantum		4961289						
ANR	4961660	Symbol	imem -> cc -> cbase		4961289						
ANR	4961661	Symbol	string_space_quanta		4961289						
ANR	4961662	Symbol	imem -> large_size		4961289						
ANR	4961663	Symbol	* imem -> cc		4961289						
ANR	4961664	Symbol	* imem		4961289						
ANR	4961665	Symbol	Memento_failThisEvent		4961289						
ANR	4961666	Symbol	* * imem		4961289						
ANR	4961667	Symbol	NULL		4961289						
ANR	4961668	Symbol	sw		4961289						
ANR	4961669	Symbol	imem -> cc -> ctop		4961289						
ANR	4961670	Symbol	clump_splay_walk_fwd		4961289						
ANR	4961671	Symbol	imem -> clump_size		4961289						
ANR	4961672	Symbol	alloc_acquire_clump		4961289						
ANR	4961673	Symbol	cp		4961289						
ANR	4961674	Symbol	nbytes		4961289						
ANR	4961675	Symbol	str		4961289						
ANR	4961676	Symbol	imem -> cc -> climit		4961289						
ANR	4961677	Symbol	imem -> cc -> cbot		4961289						
ANR	4961678	Symbol	gs_alloc_fill_alloc		4961289						
ANR	4961679	Symbol	true		4961289						
ANR	4961680	Symbol	client_name_string		4961289						
ANR	4961681	Symbol	imem		4961289						
ANR	4961682	Function	i_alloc_string_immovable	1639:0:52611:53519							
ANR	4961683	FunctionDef	"i_alloc_string_immovable (gs_memory_t * mem , uint nbytes , client_name_t cname)"		4961682	0					
ANR	4961684	CompoundStatement		1641:0:52703:53519	4961682	0					
ANR	4961685	Statement	gs_ref_memory_t	1642:4:52709:52723	4961682	0	True				
ANR	4961686	Statement	*	1642:20:52725:52725	4961682	1	True				
ANR	4961687	Statement	const	1642:22:52727:52731	4961682	2	True				
ANR	4961688	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1642:28:52733:52762	4961682	3	True				
ANR	4961689	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4961682	0		=			
ANR	4961690	Identifier	imem		4961682	0					
ANR	4961691	CastExpression	( gs_ref_memory_t * ) mem		4961682	1					
ANR	4961692	CastTarget	gs_ref_memory_t *		4961682	0					
ANR	4961693	Identifier	mem		4961682	1					
ANR	4961694	IdentifierDeclStatement	byte * str ;	1643:4:52768:52777	4961682	4	True				
ANR	4961695	IdentifierDecl	* str		4961682	0					
ANR	4961696	IdentifierDeclType	byte *		4961682	0					
ANR	4961697	Identifier	str		4961682	1					
ANR	4961698	IdentifierDeclStatement	uint asize ;	1644:4:52783:52793	4961682	5	True				
ANR	4961699	IdentifierDecl	asize		4961682	0					
ANR	4961700	IdentifierDeclType	uint		4961682	0					
ANR	4961701	Identifier	asize		4961682	1					
ANR	4961702	IdentifierDeclStatement	clump_t * cp ;	1645:4:52799:52810	4961682	6	True				
ANR	4961703	IdentifierDecl	* cp		4961682	0					
ANR	4961704	IdentifierDeclType	clump_t *		4961682	0					
ANR	4961705	Identifier	cp		4961682	1					
ANR	4961706	ExpressionStatement	nbytes += HDR_ID_OFFSET	1647:4:52817:52840	4961682	7	True				
ANR	4961707	AssignmentExpression	nbytes += HDR_ID_OFFSET		4961682	0		+=			
ANR	4961708	Identifier	nbytes		4961682	0					
ANR	4961709	Identifier	HDR_ID_OFFSET		4961682	1					
ANR	4961710	IfStatement	if ( Memento_failThisEvent ( ) )		4961682	8					
ANR	4961711	Condition	Memento_failThisEvent ( )	1650:8:52866:52888	4961682	0	True				
ANR	4961712	CallExpression	Memento_failThisEvent ( )		4961682	0					
ANR	4961713	Callee	Memento_failThisEvent		4961682	0					
ANR	4961714	Identifier	Memento_failThisEvent		4961682	0					
ANR	4961715	ArgumentList			4961682	1					
ANR	4961716	ReturnStatement	return NULL ;	1651:8:52899:52910	4961682	1	True				
ANR	4961717	Identifier	NULL		4961682	0					
ANR	4961718	ExpressionStatement	asize = string_clump_space ( nbytes ) + sizeof ( clump_head_t )	1654:4:52962:53019	4961682	9	True				
ANR	4961719	AssignmentExpression	asize = string_clump_space ( nbytes ) + sizeof ( clump_head_t )		4961682	0		=			
ANR	4961720	Identifier	asize		4961682	0					
ANR	4961721	AdditiveExpression	string_clump_space ( nbytes ) + sizeof ( clump_head_t )		4961682	1		+			
ANR	4961722	CallExpression	string_clump_space ( nbytes )		4961682	0					
ANR	4961723	Callee	string_clump_space		4961682	0					
ANR	4961724	Identifier	string_clump_space		4961682	0					
ANR	4961725	ArgumentList	nbytes		4961682	1					
ANR	4961726	Argument	nbytes		4961682	0					
ANR	4961727	Identifier	nbytes		4961682	0					
ANR	4961728	SizeofExpression	sizeof ( clump_head_t )		4961682	1					
ANR	4961729	Sizeof	sizeof		4961682	0					
ANR	4961730	SizeofOperand	clump_head_t		4961682	1					
ANR	4961731	ExpressionStatement	"cp = alloc_acquire_clump ( imem , ( ulong ) asize , true , ""large string clump"" )"	1655:4:53025:53136	4961682	10	True				
ANR	4961732	AssignmentExpression	"cp = alloc_acquire_clump ( imem , ( ulong ) asize , true , ""large string clump"" )"		4961682	0		=			
ANR	4961733	Identifier	cp		4961682	0					
ANR	4961734	CallExpression	"alloc_acquire_clump ( imem , ( ulong ) asize , true , ""large string clump"" )"		4961682	1					
ANR	4961735	Callee	alloc_acquire_clump		4961682	0					
ANR	4961736	Identifier	alloc_acquire_clump		4961682	0					
ANR	4961737	ArgumentList	imem		4961682	1					
ANR	4961738	Argument	imem		4961682	0					
ANR	4961739	Identifier	imem		4961682	0					
ANR	4961740	Argument	( ulong ) asize		4961682	1					
ANR	4961741	CastExpression	( ulong ) asize		4961682	0					
ANR	4961742	CastTarget	ulong		4961682	0					
ANR	4961743	Identifier	asize		4961682	1					
ANR	4961744	Argument	true		4961682	2					
ANR	4961745	Identifier	true		4961682	0					
ANR	4961746	Argument	"""large string clump"""		4961682	3					
ANR	4961747	PrimaryExpression	"""large string clump"""		4961682	0					
ANR	4961748	IfStatement	if ( cp == 0 )		4961682	11					
ANR	4961749	Condition	cp == 0	1658:8:53147:53153	4961682	0	True				
ANR	4961750	EqualityExpression	cp == 0		4961682	0		==			
ANR	4961751	Identifier	cp		4961682	0					
ANR	4961752	PrimaryExpression	0		4961682	1					
ANR	4961753	ReturnStatement	return 0 ;	1659:8:53164:53172	4961682	1	True				
ANR	4961754	PrimaryExpression	0		4961682	0					
ANR	4961755	ExpressionStatement	cp -> c_alone = true	1660:4:53178:53196	4961682	12	True				
ANR	4961756	AssignmentExpression	cp -> c_alone = true		4961682	0		=			
ANR	4961757	PtrMemberAccess	cp -> c_alone		4961682	0					
ANR	4961758	Identifier	cp		4961682	0					
ANR	4961759	Identifier	c_alone		4961682	1					
ANR	4961760	Identifier	true		4961682	1					
ANR	4961761	ExpressionStatement	str = cp -> ctop = cp -> climit - nbytes	1662:4:53203:53239	4961682	13	True				
ANR	4961762	AssignmentExpression	str = cp -> ctop = cp -> climit - nbytes		4961682	0		=			
ANR	4961763	Identifier	str		4961682	0					
ANR	4961764	AssignmentExpression	cp -> ctop = cp -> climit - nbytes		4961682	1		=			
ANR	4961765	PtrMemberAccess	cp -> ctop		4961682	0					
ANR	4961766	Identifier	cp		4961682	0					
ANR	4961767	Identifier	ctop		4961682	1					
ANR	4961768	AdditiveExpression	cp -> climit - nbytes		4961682	1		-			
ANR	4961769	PtrMemberAccess	cp -> climit		4961682	0					
ANR	4961770	Identifier	cp		4961682	0					
ANR	4961771	Identifier	climit		4961682	1					
ANR	4961772	Identifier	nbytes		4961682	1					
ANR	4961773	ExpressionStatement	"if_debug4m ( 'a' , mem , ""[a%d|+>L]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) str )"	1663:4:53245:53397	4961682	14	True				
ANR	4961774	CallExpression	"if_debug4m ( 'a' , mem , ""[a%d|+>L]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) str )"		4961682	0					
ANR	4961775	Callee	if_debug4m		4961682	0					
ANR	4961776	Identifier	if_debug4m		4961682	0					
ANR	4961777	ArgumentList	'a'		4961682	1					
ANR	4961778	Argument	'a'		4961682	0					
ANR	4961779	PrimaryExpression	'a'		4961682	0					
ANR	4961780	Argument	mem		4961682	1					
ANR	4961781	Identifier	mem		4961682	0					
ANR	4961782	Argument	"""[a%d|+>L]%s(%u) = 0x%lx\\n"""		4961682	2					
ANR	4961783	PrimaryExpression	"""[a%d|+>L]%s(%u) = 0x%lx\\n"""		4961682	0					
ANR	4961784	Argument	alloc_trace_space ( imem )		4961682	3					
ANR	4961785	CallExpression	alloc_trace_space ( imem )		4961682	0					
ANR	4961786	Callee	alloc_trace_space		4961682	0					
ANR	4961787	Identifier	alloc_trace_space		4961682	0					
ANR	4961788	ArgumentList	imem		4961682	1					
ANR	4961789	Argument	imem		4961682	0					
ANR	4961790	Identifier	imem		4961682	0					
ANR	4961791	Argument	client_name_string ( cname )		4961682	4					
ANR	4961792	CallExpression	client_name_string ( cname )		4961682	0					
ANR	4961793	Callee	client_name_string		4961682	0					
ANR	4961794	Identifier	client_name_string		4961682	0					
ANR	4961795	ArgumentList	cname		4961682	1					
ANR	4961796	Argument	cname		4961682	0					
ANR	4961797	Identifier	cname		4961682	0					
ANR	4961798	Argument	nbytes		4961682	5					
ANR	4961799	Identifier	nbytes		4961682	0					
ANR	4961800	Argument	( ulong ) str		4961682	6					
ANR	4961801	CastExpression	( ulong ) str		4961682	0					
ANR	4961802	CastTarget	ulong		4961682	0					
ANR	4961803	Identifier	str		4961682	1					
ANR	4961804	ExpressionStatement	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"	1666:4:53403:53450	4961682	15	True				
ANR	4961805	CallExpression	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"		4961682	0					
ANR	4961806	Callee	gs_alloc_fill		4961682	0					
ANR	4961807	Identifier	gs_alloc_fill		4961682	0					
ANR	4961808	ArgumentList	str		4961682	1					
ANR	4961809	Argument	str		4961682	0					
ANR	4961810	Identifier	str		4961682	0					
ANR	4961811	Argument	gs_alloc_fill_alloc		4961682	1					
ANR	4961812	Identifier	gs_alloc_fill_alloc		4961682	0					
ANR	4961813	Argument	nbytes		4961682	2					
ANR	4961814	Identifier	nbytes		4961682	0					
ANR	4961815	ExpressionStatement	str += HDR_ID_OFFSET	1667:4:53456:53476	4961682	16	True				
ANR	4961816	AssignmentExpression	str += HDR_ID_OFFSET		4961682	0		+=			
ANR	4961817	Identifier	str		4961682	0					
ANR	4961818	Identifier	HDR_ID_OFFSET		4961682	1					
ANR	4961819	ExpressionStatement	ASSIGN_HDR_ID ( str )	1668:4:53482:53500	4961682	17	True				
ANR	4961820	CallExpression	ASSIGN_HDR_ID ( str )		4961682	0					
ANR	4961821	Callee	ASSIGN_HDR_ID		4961682	0					
ANR	4961822	Identifier	ASSIGN_HDR_ID		4961682	0					
ANR	4961823	ArgumentList	str		4961682	1					
ANR	4961824	Argument	str		4961682	0					
ANR	4961825	Identifier	str		4961682	0					
ANR	4961826	ReturnStatement	return str ;	1670:4:53507:53517	4961682	18	True				
ANR	4961827	Identifier	str		4961682	0					
ANR	4961828	ReturnType	static byte *		4961682	1					
ANR	4961829	Identifier	i_alloc_string_immovable		4961682	2					
ANR	4961830	ParameterList	"gs_memory_t * mem , uint nbytes , client_name_t cname"		4961682	3					
ANR	4961831	Parameter	gs_memory_t * mem	1640:25:52650:52666	4961682	0	True				
ANR	4961832	ParameterType	gs_memory_t *		4961682	0					
ANR	4961833	Identifier	mem		4961682	1					
ANR	4961834	Parameter	uint nbytes	1640:44:52669:52679	4961682	1	True				
ANR	4961835	ParameterType	uint		4961682	0					
ANR	4961836	Identifier	nbytes		4961682	1					
ANR	4961837	Parameter	client_name_t cname	1640:57:52682:52700	4961682	2	True				
ANR	4961838	ParameterType	client_name_t		4961682	0					
ANR	4961839	Identifier	cname		4961682	1					
ANR	4961840	CFGEntryNode	ENTRY		4961682		True				
ANR	4961841	CFGExitNode	EXIT		4961682		True				
ANR	4961842	Symbol	NULL		4961682						
ANR	4961843	Symbol	cname		4961682						
ANR	4961844	Symbol	cp -> c_alone		4961682						
ANR	4961845	Symbol	alloc_acquire_clump		4961682						
ANR	4961846	Symbol	cp		4961682						
ANR	4961847	Symbol	asize		4961682						
ANR	4961848	Symbol	cp -> climit		4961682						
ANR	4961849	Symbol	alloc_trace_space		4961682						
ANR	4961850	Symbol	nbytes		4961682						
ANR	4961851	Symbol	str		4961682						
ANR	4961852	Symbol	string_clump_space		4961682						
ANR	4961853	Symbol	* cp		4961682						
ANR	4961854	Symbol	mem		4961682						
ANR	4961855	Symbol	HDR_ID_OFFSET		4961682						
ANR	4961856	Symbol	gs_alloc_fill_alloc		4961682						
ANR	4961857	Symbol	true		4961682						
ANR	4961858	Symbol	client_name_string		4961682						
ANR	4961859	Symbol	imem		4961682						
ANR	4961860	Symbol	cp -> ctop		4961682						
ANR	4961861	Symbol	Memento_failThisEvent		4961682						
ANR	4961862	Function	i_resize_string	1673:0:53522:55720							
ANR	4961863	FunctionDef	"i_resize_string (gs_memory_t * mem , byte * data , uint old_num , uint new_num , client_name_t cname)"		4961862	0					
ANR	4961864	CompoundStatement		1676:0:53649:55720	4961862	0					
ANR	4961865	Statement	gs_ref_memory_t	1677:4:53655:53669	4961862	0	True				
ANR	4961866	Statement	*	1677:20:53671:53671	4961862	1	True				
ANR	4961867	Statement	const	1677:22:53673:53677	4961862	2	True				
ANR	4961868	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1677:28:53679:53708	4961862	3	True				
ANR	4961869	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4961862	0		=			
ANR	4961870	Identifier	imem		4961862	0					
ANR	4961871	CastExpression	( gs_ref_memory_t * ) mem		4961862	1					
ANR	4961872	CastTarget	gs_ref_memory_t *		4961862	0					
ANR	4961873	Identifier	mem		4961862	1					
ANR	4961874	IdentifierDeclStatement	byte * ptr ;	1678:4:53714:53723	4961862	4	True				
ANR	4961875	IdentifierDecl	* ptr		4961862	0					
ANR	4961876	IdentifierDeclType	byte *		4961862	0					
ANR	4961877	Identifier	ptr		4961862	1					
ANR	4961878	IfStatement	if ( old_num == new_num )		4961862	5					
ANR	4961879	Condition	old_num == new_num	1680:8:53734:53751	4961862	0	True				
ANR	4961880	EqualityExpression	old_num == new_num		4961862	0		==			
ANR	4961881	Identifier	old_num		4961862	0					
ANR	4961882	Identifier	new_num		4961862	1					
ANR	4961883	ReturnStatement	return data ;	1681:8:53802:53813	4961862	1	True				
ANR	4961884	Identifier	data		4961862	0					
ANR	4961885	ExpressionStatement	data -= HDR_ID_OFFSET	1683:4:53820:53841	4961862	6	True				
ANR	4961886	AssignmentExpression	data -= HDR_ID_OFFSET		4961862	0		-=			
ANR	4961887	Identifier	data		4961862	0					
ANR	4961888	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4961889	ExpressionStatement	old_num += HDR_ID_OFFSET	1684:4:53847:53871	4961862	7	True				
ANR	4961890	AssignmentExpression	old_num += HDR_ID_OFFSET		4961862	0		+=			
ANR	4961891	Identifier	old_num		4961862	0					
ANR	4961892	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4961893	ExpressionStatement	new_num += HDR_ID_OFFSET	1685:4:53877:53901	4961862	8	True				
ANR	4961894	AssignmentExpression	new_num += HDR_ID_OFFSET		4961862	0		+=			
ANR	4961895	Identifier	new_num		4961862	0					
ANR	4961896	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4961897	IfStatement	if ( imem -> cc && data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num ) )		4961862	9					
ANR	4961898	Condition	imem -> cc && data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num )	1687:9:53913:54066	4961862	0	True				
ANR	4961899	AndExpression	imem -> cc && data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num )		4961862	0		&&			
ANR	4961900	PtrMemberAccess	imem -> cc		4961862	0					
ANR	4961901	Identifier	imem		4961862	0					
ANR	4961902	Identifier	cc		4961862	1					
ANR	4961903	AndExpression	data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num )		4961862	1		&&			
ANR	4961904	EqualityExpression	data == imem -> cc -> ctop		4961862	0		==			
ANR	4961905	Identifier	data		4961862	0					
ANR	4961906	PtrMemberAccess	imem -> cc -> ctop		4961862	1					
ANR	4961907	PtrMemberAccess	imem -> cc		4961862	0					
ANR	4961908	Identifier	imem		4961862	0					
ANR	4961909	Identifier	cc		4961862	1					
ANR	4961910	Identifier	ctop		4961862	1					
ANR	4961911	OrExpression	new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num		4961862	1		||			
ANR	4961912	RelationalExpression	new_num < old_num		4961862	0		<			
ANR	4961913	Identifier	new_num		4961862	0					
ANR	4961914	Identifier	old_num		4961862	1					
ANR	4961915	RelationalExpression	imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num		4961862	1		>			
ANR	4961916	AdditiveExpression	imem -> cc -> ctop - imem -> cc -> cbot		4961862	0		-			
ANR	4961917	PtrMemberAccess	imem -> cc -> ctop		4961862	0					
ANR	4961918	PtrMemberAccess	imem -> cc		4961862	0					
ANR	4961919	Identifier	imem		4961862	0					
ANR	4961920	Identifier	cc		4961862	1					
ANR	4961921	Identifier	ctop		4961862	1					
ANR	4961922	PtrMemberAccess	imem -> cc -> cbot		4961862	1					
ANR	4961923	PtrMemberAccess	imem -> cc		4961862	0					
ANR	4961924	Identifier	imem		4961862	0					
ANR	4961925	Identifier	cc		4961862	1					
ANR	4961926	Identifier	cbot		4961862	1					
ANR	4961927	AdditiveExpression	new_num - old_num		4961862	1		-			
ANR	4961928	Identifier	new_num		4961862	0					
ANR	4961929	Identifier	old_num		4961862	1					
ANR	4961930	CompoundStatement		15:10:428:428	4961862	1					
ANR	4961931	ExpressionStatement	ptr = data + old_num - new_num	1691:8:54113:54143	4961862	0	True				
ANR	4961932	AssignmentExpression	ptr = data + old_num - new_num		4961862	0		=			
ANR	4961933	Identifier	ptr		4961862	0					
ANR	4961934	AdditiveExpression	data + old_num - new_num		4961862	1		+			
ANR	4961935	Identifier	data		4961862	0					
ANR	4961936	AdditiveExpression	old_num - new_num		4961862	1		-			
ANR	4961937	Identifier	old_num		4961862	0					
ANR	4961938	Identifier	new_num		4961862	1					
ANR	4961939	ExpressionStatement	"if_debug6m ( 'A' , mem , ""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_num > old_num ? '>' : '<' ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"	1692:8:54153:54397	4961862	1	True				
ANR	4961940	CallExpression	"if_debug6m ( 'A' , mem , ""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_num > old_num ? '>' : '<' ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"		4961862	0					
ANR	4961941	Callee	if_debug6m		4961862	0					
ANR	4961942	Identifier	if_debug6m		4961862	0					
ANR	4961943	ArgumentList	'A'		4961862	1					
ANR	4961944	Argument	'A'		4961862	0					
ANR	4961945	PrimaryExpression	'A'		4961862	0					
ANR	4961946	Argument	mem		4961862	1					
ANR	4961947	Identifier	mem		4961862	0					
ANR	4961948	Argument	"""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"""		4961862	2					
ANR	4961949	PrimaryExpression	"""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"""		4961862	0					
ANR	4961950	Argument	alloc_trace_space ( imem )		4961862	3					
ANR	4961951	CallExpression	alloc_trace_space ( imem )		4961862	0					
ANR	4961952	Callee	alloc_trace_space		4961862	0					
ANR	4961953	Identifier	alloc_trace_space		4961862	0					
ANR	4961954	ArgumentList	imem		4961862	1					
ANR	4961955	Argument	imem		4961862	0					
ANR	4961956	Identifier	imem		4961862	0					
ANR	4961957	Argument	new_num > old_num ? '>' : '<'		4961862	4					
ANR	4961958	ConditionalExpression	new_num > old_num ? '>' : '<'		4961862	0					
ANR	4961959	Condition	new_num > old_num		4961862	0					
ANR	4961960	RelationalExpression	new_num > old_num		4961862	0		>			
ANR	4961961	Identifier	new_num		4961862	0					
ANR	4961962	Identifier	old_num		4961862	1					
ANR	4961963	PrimaryExpression	'>'		4961862	1					
ANR	4961964	PrimaryExpression	'<'		4961862	2					
ANR	4961965	Argument	client_name_string ( cname )		4961862	5					
ANR	4961966	CallExpression	client_name_string ( cname )		4961862	0					
ANR	4961967	Callee	client_name_string		4961862	0					
ANR	4961968	Identifier	client_name_string		4961862	0					
ANR	4961969	ArgumentList	cname		4961862	1					
ANR	4961970	Argument	cname		4961862	0					
ANR	4961971	Identifier	cname		4961862	0					
ANR	4961972	Argument	old_num		4961862	6					
ANR	4961973	Identifier	old_num		4961862	0					
ANR	4961974	Argument	new_num		4961862	7					
ANR	4961975	Identifier	new_num		4961862	0					
ANR	4961976	Argument	( ulong ) ptr		4961862	8					
ANR	4961977	CastExpression	( ulong ) ptr		4961862	0					
ANR	4961978	CastTarget	ulong		4961862	0					
ANR	4961979	Identifier	ptr		4961862	1					
ANR	4961980	ExpressionStatement	imem -> cc -> ctop = ptr	1697:8:54407:54427	4961862	2	True				
ANR	4961981	AssignmentExpression	imem -> cc -> ctop = ptr		4961862	0		=			
ANR	4961982	PtrMemberAccess	imem -> cc -> ctop		4961862	0					
ANR	4961983	PtrMemberAccess	imem -> cc		4961862	0					
ANR	4961984	Identifier	imem		4961862	0					
ANR	4961985	Identifier	cc		4961862	1					
ANR	4961986	Identifier	ctop		4961862	1					
ANR	4961987	Identifier	ptr		4961862	1					
ANR	4961988	ExpressionStatement	"memmove ( ptr , data , min ( old_num , new_num ) )"	1698:8:54437:54478	4961862	3	True				
ANR	4961989	CallExpression	"memmove ( ptr , data , min ( old_num , new_num ) )"		4961862	0					
ANR	4961990	Callee	memmove		4961862	0					
ANR	4961991	Identifier	memmove		4961862	0					
ANR	4961992	ArgumentList	ptr		4961862	1					
ANR	4961993	Argument	ptr		4961862	0					
ANR	4961994	Identifier	ptr		4961862	0					
ANR	4961995	Argument	data		4961862	1					
ANR	4961996	Identifier	data		4961862	0					
ANR	4961997	Argument	"min ( old_num , new_num )"		4961862	2					
ANR	4961998	CallExpression	"min ( old_num , new_num )"		4961862	0					
ANR	4961999	Callee	min		4961862	0					
ANR	4962000	Identifier	min		4961862	0					
ANR	4962001	ArgumentList	old_num		4961862	1					
ANR	4962002	Argument	old_num		4961862	0					
ANR	4962003	Identifier	old_num		4961862	0					
ANR	4962004	Argument	new_num		4961862	1					
ANR	4962005	Identifier	new_num		4961862	0					
ANR	4962006	IfStatement	if ( new_num > old_num )		4961862	4					
ANR	4962007	Condition	new_num > old_num	1700:12:54505:54521	4961862	0	True				
ANR	4962008	RelationalExpression	new_num > old_num		4961862	0		>			
ANR	4962009	Identifier	new_num		4961862	0					
ANR	4962010	Identifier	old_num		4961862	1					
ANR	4962011	ExpressionStatement	"gs_alloc_fill ( ptr + old_num , gs_alloc_fill_alloc , new_num - old_num )"	1701:12:54536:54630	4961862	1	True				
ANR	4962012	CallExpression	"gs_alloc_fill ( ptr + old_num , gs_alloc_fill_alloc , new_num - old_num )"		4961862	0					
ANR	4962013	Callee	gs_alloc_fill		4961862	0					
ANR	4962014	Identifier	gs_alloc_fill		4961862	0					
ANR	4962015	ArgumentList	ptr + old_num		4961862	1					
ANR	4962016	Argument	ptr + old_num		4961862	0					
ANR	4962017	AdditiveExpression	ptr + old_num		4961862	0		+			
ANR	4962018	Identifier	ptr		4961862	0					
ANR	4962019	Identifier	old_num		4961862	1					
ANR	4962020	Argument	gs_alloc_fill_alloc		4961862	1					
ANR	4962021	Identifier	gs_alloc_fill_alloc		4961862	0					
ANR	4962022	Argument	new_num - old_num		4961862	2					
ANR	4962023	AdditiveExpression	new_num - old_num		4961862	0		-			
ANR	4962024	Identifier	new_num		4961862	0					
ANR	4962025	Identifier	old_num		4961862	1					
ANR	4962026	ElseStatement	else		4961862	0					
ANR	4962027	ExpressionStatement	"gs_alloc_fill ( data , gs_alloc_fill_free , old_num - new_num )"	1704:12:54657:54715	4961862	0	True				
ANR	4962028	CallExpression	"gs_alloc_fill ( data , gs_alloc_fill_free , old_num - new_num )"		4961862	0					
ANR	4962029	Callee	gs_alloc_fill		4961862	0					
ANR	4962030	Identifier	gs_alloc_fill		4961862	0					
ANR	4962031	ArgumentList	data		4961862	1					
ANR	4962032	Argument	data		4961862	0					
ANR	4962033	Identifier	data		4961862	0					
ANR	4962034	Argument	gs_alloc_fill_free		4961862	1					
ANR	4962035	Identifier	gs_alloc_fill_free		4961862	0					
ANR	4962036	Argument	old_num - new_num		4961862	2					
ANR	4962037	AdditiveExpression	old_num - new_num		4961862	0		-			
ANR	4962038	Identifier	old_num		4961862	0					
ANR	4962039	Identifier	new_num		4961862	1					
ANR	4962040	ExpressionStatement	ptr += HDR_ID_OFFSET	1706:8:54732:54752	4961862	5	True				
ANR	4962041	AssignmentExpression	ptr += HDR_ID_OFFSET		4961862	0		+=			
ANR	4962042	Identifier	ptr		4961862	0					
ANR	4962043	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4962044	ExpressionStatement	ASSIGN_HDR_ID ( ptr )	1707:8:54762:54780	4961862	6	True				
ANR	4962045	CallExpression	ASSIGN_HDR_ID ( ptr )		4961862	0					
ANR	4962046	Callee	ASSIGN_HDR_ID		4961862	0					
ANR	4962047	Identifier	ASSIGN_HDR_ID		4961862	0					
ANR	4962048	ArgumentList	ptr		4961862	1					
ANR	4962049	Argument	ptr		4961862	0					
ANR	4962050	Identifier	ptr		4961862	0					
ANR	4962051	ElseStatement	else		4961862	0					
ANR	4962052	IfStatement	if ( new_num < old_num )		4961862	0					
ANR	4962053	Condition	new_num < old_num	1709:12:54805:54821	4961862	0	True				
ANR	4962054	RelationalExpression	new_num < old_num		4961862	0		<			
ANR	4962055	Identifier	new_num		4961862	0					
ANR	4962056	Identifier	old_num		4961862	1					
ANR	4962057	CompoundStatement		34:31:1174:1174	4961862	1					
ANR	4962058	ExpressionStatement	ptr = data	1711:12:54901:54911	4961862	0	True				
ANR	4962059	AssignmentExpression	ptr = data		4961862	0		=			
ANR	4962060	Identifier	ptr		4961862	0					
ANR	4962061	Identifier	data		4961862	1					
ANR	4962062	ExpressionStatement	imem -> lost . strings += old_num - new_num	1712:12:54925:54964	4961862	1	True				
ANR	4962063	AssignmentExpression	imem -> lost . strings += old_num - new_num		4961862	0		+=			
ANR	4962064	MemberAccess	imem -> lost . strings		4961862	0					
ANR	4962065	PtrMemberAccess	imem -> lost		4961862	0					
ANR	4962066	Identifier	imem		4961862	0					
ANR	4962067	Identifier	lost		4961862	1					
ANR	4962068	Identifier	strings		4961862	1					
ANR	4962069	AdditiveExpression	old_num - new_num		4961862	1		-			
ANR	4962070	Identifier	old_num		4961862	0					
ANR	4962071	Identifier	new_num		4961862	1					
ANR	4962072	ExpressionStatement	"gs_alloc_fill ( data + new_num , gs_alloc_fill_free , old_num - new_num )"	1713:12:54978:55072	4961862	2	True				
ANR	4962073	CallExpression	"gs_alloc_fill ( data + new_num , gs_alloc_fill_free , old_num - new_num )"		4961862	0					
ANR	4962074	Callee	gs_alloc_fill		4961862	0					
ANR	4962075	Identifier	gs_alloc_fill		4961862	0					
ANR	4962076	ArgumentList	data + new_num		4961862	1					
ANR	4962077	Argument	data + new_num		4961862	0					
ANR	4962078	AdditiveExpression	data + new_num		4961862	0		+			
ANR	4962079	Identifier	data		4961862	0					
ANR	4962080	Identifier	new_num		4961862	1					
ANR	4962081	Argument	gs_alloc_fill_free		4961862	1					
ANR	4962082	Identifier	gs_alloc_fill_free		4961862	0					
ANR	4962083	Argument	old_num - new_num		4961862	2					
ANR	4962084	AdditiveExpression	old_num - new_num		4961862	0		-			
ANR	4962085	Identifier	old_num		4961862	0					
ANR	4962086	Identifier	new_num		4961862	1					
ANR	4962087	ExpressionStatement	"if_debug5m ( 'A' , mem , ""[a%d:<> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"	1715:12:55086:55265	4961862	3	True				
ANR	4962088	CallExpression	"if_debug5m ( 'A' , mem , ""[a%d:<> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"		4961862	0					
ANR	4962089	Callee	if_debug5m		4961862	0					
ANR	4962090	Identifier	if_debug5m		4961862	0					
ANR	4962091	ArgumentList	'A'		4961862	1					
ANR	4962092	Argument	'A'		4961862	0					
ANR	4962093	PrimaryExpression	'A'		4961862	0					
ANR	4962094	Argument	mem		4961862	1					
ANR	4962095	Identifier	mem		4961862	0					
ANR	4962096	Argument	"""[a%d:<> ]%s(%u->%u) 0x%lx\\n"""		4961862	2					
ANR	4962097	PrimaryExpression	"""[a%d:<> ]%s(%u->%u) 0x%lx\\n"""		4961862	0					
ANR	4962098	Argument	alloc_trace_space ( imem )		4961862	3					
ANR	4962099	CallExpression	alloc_trace_space ( imem )		4961862	0					
ANR	4962100	Callee	alloc_trace_space		4961862	0					
ANR	4962101	Identifier	alloc_trace_space		4961862	0					
ANR	4962102	ArgumentList	imem		4961862	1					
ANR	4962103	Argument	imem		4961862	0					
ANR	4962104	Identifier	imem		4961862	0					
ANR	4962105	Argument	client_name_string ( cname )		4961862	4					
ANR	4962106	CallExpression	client_name_string ( cname )		4961862	0					
ANR	4962107	Callee	client_name_string		4961862	0					
ANR	4962108	Identifier	client_name_string		4961862	0					
ANR	4962109	ArgumentList	cname		4961862	1					
ANR	4962110	Argument	cname		4961862	0					
ANR	4962111	Identifier	cname		4961862	0					
ANR	4962112	Argument	old_num		4961862	5					
ANR	4962113	Identifier	old_num		4961862	0					
ANR	4962114	Argument	new_num		4961862	6					
ANR	4962115	Identifier	new_num		4961862	0					
ANR	4962116	Argument	( ulong ) ptr		4961862	7					
ANR	4962117	CastExpression	( ulong ) ptr		4961862	0					
ANR	4962118	CastTarget	ulong		4961862	0					
ANR	4962119	Identifier	ptr		4961862	1					
ANR	4962120	ExpressionStatement	ptr += HDR_ID_OFFSET	1718:12:55279:55299	4961862	4	True				
ANR	4962121	AssignmentExpression	ptr += HDR_ID_OFFSET		4961862	0		+=			
ANR	4962122	Identifier	ptr		4961862	0					
ANR	4962123	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4962124	ExpressionStatement	ASSIGN_HDR_ID ( ptr )	1719:12:55313:55331	4961862	5	True				
ANR	4962125	CallExpression	ASSIGN_HDR_ID ( ptr )		4961862	0					
ANR	4962126	Callee	ASSIGN_HDR_ID		4961862	0					
ANR	4962127	Identifier	ASSIGN_HDR_ID		4961862	0					
ANR	4962128	ArgumentList	ptr		4961862	1					
ANR	4962129	Argument	ptr		4961862	0					
ANR	4962130	Identifier	ptr		4961862	0					
ANR	4962131	ElseStatement	else		4961862	0					
ANR	4962132	CompoundStatement		45:15:1698:1698	4961862	0					
ANR	4962133	ExpressionStatement	data += HDR_ID_OFFSET	1721:12:55376:55397	4961862	0	True				
ANR	4962134	AssignmentExpression	data += HDR_ID_OFFSET		4961862	0		+=			
ANR	4962135	Identifier	data		4961862	0					
ANR	4962136	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4962137	ExpressionStatement	old_num -= HDR_ID_OFFSET	1722:12:55411:55435	4961862	1	True				
ANR	4962138	AssignmentExpression	old_num -= HDR_ID_OFFSET		4961862	0		-=			
ANR	4962139	Identifier	old_num		4961862	0					
ANR	4962140	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4962141	ExpressionStatement	new_num -= HDR_ID_OFFSET	1723:12:55449:55473	4961862	2	True				
ANR	4962142	AssignmentExpression	new_num -= HDR_ID_OFFSET		4961862	0		-=			
ANR	4962143	Identifier	new_num		4961862	0					
ANR	4962144	Identifier	HDR_ID_OFFSET		4961862	1					
ANR	4962145	ExpressionStatement	"ptr = gs_alloc_string ( mem , new_num , cname )"	1725:12:55488:55530	4961862	3	True				
ANR	4962146	AssignmentExpression	"ptr = gs_alloc_string ( mem , new_num , cname )"		4961862	0		=			
ANR	4962147	Identifier	ptr		4961862	0					
ANR	4962148	CallExpression	"gs_alloc_string ( mem , new_num , cname )"		4961862	1					
ANR	4962149	Callee	gs_alloc_string		4961862	0					
ANR	4962150	Identifier	gs_alloc_string		4961862	0					
ANR	4962151	ArgumentList	mem		4961862	1					
ANR	4962152	Argument	mem		4961862	0					
ANR	4962153	Identifier	mem		4961862	0					
ANR	4962154	Argument	new_num		4961862	1					
ANR	4962155	Identifier	new_num		4961862	0					
ANR	4962156	Argument	cname		4961862	2					
ANR	4962157	Identifier	cname		4961862	0					
ANR	4962158	IfStatement	if ( ptr == 0 )		4961862	4					
ANR	4962159	Condition	ptr == 0	1726:16:55548:55555	4961862	0	True				
ANR	4962160	EqualityExpression	ptr == 0		4961862	0		==			
ANR	4962161	Identifier	ptr		4961862	0					
ANR	4962162	PrimaryExpression	0		4961862	1					
ANR	4962163	ReturnStatement	return 0 ;	1727:16:55574:55582	4961862	1	True				
ANR	4962164	PrimaryExpression	0		4961862	0					
ANR	4962165	ExpressionStatement	"memcpy ( ptr , data , min ( old_num , new_num ) )"	1728:12:55596:55636	4961862	5	True				
ANR	4962166	CallExpression	"memcpy ( ptr , data , min ( old_num , new_num ) )"		4961862	0					
ANR	4962167	Callee	memcpy		4961862	0					
ANR	4962168	Identifier	memcpy		4961862	0					
ANR	4962169	ArgumentList	ptr		4961862	1					
ANR	4962170	Argument	ptr		4961862	0					
ANR	4962171	Identifier	ptr		4961862	0					
ANR	4962172	Argument	data		4961862	1					
ANR	4962173	Identifier	data		4961862	0					
ANR	4962174	Argument	"min ( old_num , new_num )"		4961862	2					
ANR	4962175	CallExpression	"min ( old_num , new_num )"		4961862	0					
ANR	4962176	Callee	min		4961862	0					
ANR	4962177	Identifier	min		4961862	0					
ANR	4962178	ArgumentList	old_num		4961862	1					
ANR	4962179	Argument	old_num		4961862	0					
ANR	4962180	Identifier	old_num		4961862	0					
ANR	4962181	Argument	new_num		4961862	1					
ANR	4962182	Identifier	new_num		4961862	0					
ANR	4962183	ExpressionStatement	"gs_free_string ( mem , data , old_num , cname )"	1729:12:55650:55691	4961862	6	True				
ANR	4962184	CallExpression	"gs_free_string ( mem , data , old_num , cname )"		4961862	0					
ANR	4962185	Callee	gs_free_string		4961862	0					
ANR	4962186	Identifier	gs_free_string		4961862	0					
ANR	4962187	ArgumentList	mem		4961862	1					
ANR	4962188	Argument	mem		4961862	0					
ANR	4962189	Identifier	mem		4961862	0					
ANR	4962190	Argument	data		4961862	1					
ANR	4962191	Identifier	data		4961862	0					
ANR	4962192	Argument	old_num		4961862	2					
ANR	4962193	Identifier	old_num		4961862	0					
ANR	4962194	Argument	cname		4961862	3					
ANR	4962195	Identifier	cname		4961862	0					
ANR	4962196	ReturnStatement	return ptr ;	1732:4:55708:55718	4961862	10	True				
ANR	4962197	Identifier	ptr		4961862	0					
ANR	4962198	ReturnType	static byte *		4961862	1					
ANR	4962199	Identifier	i_resize_string		4961862	2					
ANR	4962200	ParameterList	"gs_memory_t * mem , byte * data , uint old_num , uint new_num , client_name_t cname"		4961862	3					
ANR	4962201	Parameter	gs_memory_t * mem	1674:16:53552:53568	4961862	0	True				
ANR	4962202	ParameterType	gs_memory_t *		4961862	0					
ANR	4962203	Identifier	mem		4961862	1					
ANR	4962204	Parameter	byte * data	1674:35:53571:53581	4961862	1	True				
ANR	4962205	ParameterType	byte *		4961862	0					
ANR	4962206	Identifier	data		4961862	1					
ANR	4962207	Parameter	uint old_num	1674:48:53584:53595	4961862	2	True				
ANR	4962208	ParameterType	uint		4961862	0					
ANR	4962209	Identifier	old_num		4961862	1					
ANR	4962210	Parameter	uint new_num	1674:62:53598:53609	4961862	3	True				
ANR	4962211	ParameterType	uint		4961862	0					
ANR	4962212	Identifier	new_num		4961862	1					
ANR	4962213	Parameter	client_name_t cname	1675:16:53628:53646	4961862	4	True				
ANR	4962214	ParameterType	client_name_t		4961862	0					
ANR	4962215	Identifier	cname		4961862	1					
ANR	4962216	CFGEntryNode	ENTRY		4961862		True				
ANR	4962217	CFGExitNode	EXIT		4961862		True				
ANR	4962218	Symbol	* * imem		4961862						
ANR	4962219	Symbol	old_num		4961862						
ANR	4962220	Symbol	data		4961862						
ANR	4962221	Symbol	imem -> cc -> ctop		4961862						
ANR	4962222	Symbol	imem -> lost		4961862						
ANR	4962223	Symbol	new_num		4961862						
ANR	4962224	Symbol	gs_alloc_fill_free		4961862						
ANR	4962225	Symbol	cname		4961862						
ANR	4962226	Symbol	imem -> cc		4961862						
ANR	4962227	Symbol	alloc_trace_space		4961862						
ANR	4962228	Symbol	ptr		4961862						
ANR	4962229	Symbol	imem -> lost . strings		4961862						
ANR	4962230	Symbol	min		4961862						
ANR	4962231	Symbol	mem		4961862						
ANR	4962232	Symbol	HDR_ID_OFFSET		4961862						
ANR	4962233	Symbol	imem -> cc -> cbot		4961862						
ANR	4962234	Symbol	gs_alloc_fill_alloc		4961862						
ANR	4962235	Symbol	client_name_string		4961862						
ANR	4962236	Symbol	gs_alloc_string		4961862						
ANR	4962237	Symbol	* imem -> cc		4961862						
ANR	4962238	Symbol	imem		4961862						
ANR	4962239	Symbol	* imem		4961862						
ANR	4962240	Function	i_free_string	1735:0:55723:56553							
ANR	4962241	FunctionDef	"i_free_string (gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname)"		4962240	0					
ANR	4962242	CompoundStatement		1738:0:55829:56553	4962240	0					
ANR	4962243	Statement	gs_ref_memory_t	1739:4:55835:55849	4962240	0	True				
ANR	4962244	Statement	*	1739:20:55851:55851	4962240	1	True				
ANR	4962245	Statement	const	1739:22:55853:55857	4962240	2	True				
ANR	4962246	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1739:28:55859:55888	4962240	3	True				
ANR	4962247	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4962240	0		=			
ANR	4962248	Identifier	imem		4962240	0					
ANR	4962249	CastExpression	( gs_ref_memory_t * ) mem		4962240	1					
ANR	4962250	CastTarget	gs_ref_memory_t *		4962240	0					
ANR	4962251	Identifier	mem		4962240	1					
ANR	4962252	IfStatement	if ( data )		4962240	4					
ANR	4962253	Condition	data	1741:8:55899:55902	4962240	0	True				
ANR	4962254	Identifier	data		4962240	0					
ANR	4962255	CompoundStatement		4:14:75:75	4962240	1					
ANR	4962256	ExpressionStatement	data -= HDR_ID_OFFSET	1742:8:55915:55936	4962240	0	True				
ANR	4962257	AssignmentExpression	data -= HDR_ID_OFFSET		4962240	0		-=			
ANR	4962258	Identifier	data		4962240	0					
ANR	4962259	Identifier	HDR_ID_OFFSET		4962240	1					
ANR	4962260	ExpressionStatement	nbytes += HDR_ID_OFFSET	1743:8:55946:55969	4962240	1	True				
ANR	4962261	AssignmentExpression	nbytes += HDR_ID_OFFSET		4962240	0		+=			
ANR	4962262	Identifier	nbytes		4962240	0					
ANR	4962263	Identifier	HDR_ID_OFFSET		4962240	1					
ANR	4962264	IfStatement	if ( imem -> cc && data == imem -> cc -> ctop )		4962240	2					
ANR	4962265	Condition	imem -> cc && data == imem -> cc -> ctop	1744:12:55983:56016	4962240	0	True				
ANR	4962266	AndExpression	imem -> cc && data == imem -> cc -> ctop		4962240	0		&&			
ANR	4962267	PtrMemberAccess	imem -> cc		4962240	0					
ANR	4962268	Identifier	imem		4962240	0					
ANR	4962269	Identifier	cc		4962240	1					
ANR	4962270	EqualityExpression	data == imem -> cc -> ctop		4962240	1		==			
ANR	4962271	Identifier	data		4962240	0					
ANR	4962272	PtrMemberAccess	imem -> cc -> ctop		4962240	1					
ANR	4962273	PtrMemberAccess	imem -> cc		4962240	0					
ANR	4962274	Identifier	imem		4962240	0					
ANR	4962275	Identifier	cc		4962240	1					
ANR	4962276	Identifier	ctop		4962240	1					
ANR	4962277	CompoundStatement		7:48:189:189	4962240	1					
ANR	4962278	ExpressionStatement	"if_debug4m ( 'A' , mem , ""[a%d:-> ]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"	1745:12:56033:56200	4962240	0	True				
ANR	4962279	CallExpression	"if_debug4m ( 'A' , mem , ""[a%d:-> ]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"		4962240	0					
ANR	4962280	Callee	if_debug4m		4962240	0					
ANR	4962281	Identifier	if_debug4m		4962240	0					
ANR	4962282	ArgumentList	'A'		4962240	1					
ANR	4962283	Argument	'A'		4962240	0					
ANR	4962284	PrimaryExpression	'A'		4962240	0					
ANR	4962285	Argument	mem		4962240	1					
ANR	4962286	Identifier	mem		4962240	0					
ANR	4962287	Argument	"""[a%d:-> ]%s(%u) 0x%lx\\n"""		4962240	2					
ANR	4962288	PrimaryExpression	"""[a%d:-> ]%s(%u) 0x%lx\\n"""		4962240	0					
ANR	4962289	Argument	alloc_trace_space ( imem )		4962240	3					
ANR	4962290	CallExpression	alloc_trace_space ( imem )		4962240	0					
ANR	4962291	Callee	alloc_trace_space		4962240	0					
ANR	4962292	Identifier	alloc_trace_space		4962240	0					
ANR	4962293	ArgumentList	imem		4962240	1					
ANR	4962294	Argument	imem		4962240	0					
ANR	4962295	Identifier	imem		4962240	0					
ANR	4962296	Argument	client_name_string ( cname )		4962240	4					
ANR	4962297	CallExpression	client_name_string ( cname )		4962240	0					
ANR	4962298	Callee	client_name_string		4962240	0					
ANR	4962299	Identifier	client_name_string		4962240	0					
ANR	4962300	ArgumentList	cname		4962240	1					
ANR	4962301	Argument	cname		4962240	0					
ANR	4962302	Identifier	cname		4962240	0					
ANR	4962303	Argument	nbytes		4962240	5					
ANR	4962304	Identifier	nbytes		4962240	0					
ANR	4962305	Argument	( ulong ) data		4962240	6					
ANR	4962306	CastExpression	( ulong ) data		4962240	0					
ANR	4962307	CastTarget	ulong		4962240	0					
ANR	4962308	Identifier	data		4962240	1					
ANR	4962309	ExpressionStatement	imem -> cc -> ctop += nbytes	1748:12:56214:56238	4962240	1	True				
ANR	4962310	AssignmentExpression	imem -> cc -> ctop += nbytes		4962240	0		+=			
ANR	4962311	PtrMemberAccess	imem -> cc -> ctop		4962240	0					
ANR	4962312	PtrMemberAccess	imem -> cc		4962240	0					
ANR	4962313	Identifier	imem		4962240	0					
ANR	4962314	Identifier	cc		4962240	1					
ANR	4962315	Identifier	ctop		4962240	1					
ANR	4962316	Identifier	nbytes		4962240	1					
ANR	4962317	ElseStatement	else		4962240	0					
ANR	4962318	CompoundStatement		12:15:425:425	4962240	0					
ANR	4962319	ExpressionStatement	"if_debug4m ( 'A' , mem , ""[a%d:->#]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"	1750:12:56269:56436	4962240	0	True				
ANR	4962320	CallExpression	"if_debug4m ( 'A' , mem , ""[a%d:->#]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"		4962240	0					
ANR	4962321	Callee	if_debug4m		4962240	0					
ANR	4962322	Identifier	if_debug4m		4962240	0					
ANR	4962323	ArgumentList	'A'		4962240	1					
ANR	4962324	Argument	'A'		4962240	0					
ANR	4962325	PrimaryExpression	'A'		4962240	0					
ANR	4962326	Argument	mem		4962240	1					
ANR	4962327	Identifier	mem		4962240	0					
ANR	4962328	Argument	"""[a%d:->#]%s(%u) 0x%lx\\n"""		4962240	2					
ANR	4962329	PrimaryExpression	"""[a%d:->#]%s(%u) 0x%lx\\n"""		4962240	0					
ANR	4962330	Argument	alloc_trace_space ( imem )		4962240	3					
ANR	4962331	CallExpression	alloc_trace_space ( imem )		4962240	0					
ANR	4962332	Callee	alloc_trace_space		4962240	0					
ANR	4962333	Identifier	alloc_trace_space		4962240	0					
ANR	4962334	ArgumentList	imem		4962240	1					
ANR	4962335	Argument	imem		4962240	0					
ANR	4962336	Identifier	imem		4962240	0					
ANR	4962337	Argument	client_name_string ( cname )		4962240	4					
ANR	4962338	CallExpression	client_name_string ( cname )		4962240	0					
ANR	4962339	Callee	client_name_string		4962240	0					
ANR	4962340	Identifier	client_name_string		4962240	0					
ANR	4962341	ArgumentList	cname		4962240	1					
ANR	4962342	Argument	cname		4962240	0					
ANR	4962343	Identifier	cname		4962240	0					
ANR	4962344	Argument	nbytes		4962240	5					
ANR	4962345	Identifier	nbytes		4962240	0					
ANR	4962346	Argument	( ulong ) data		4962240	6					
ANR	4962347	CastExpression	( ulong ) data		4962240	0					
ANR	4962348	CastTarget	ulong		4962240	0					
ANR	4962349	Identifier	data		4962240	1					
ANR	4962350	ExpressionStatement	imem -> lost . strings += nbytes	1753:12:56450:56478	4962240	1	True				
ANR	4962351	AssignmentExpression	imem -> lost . strings += nbytes		4962240	0		+=			
ANR	4962352	MemberAccess	imem -> lost . strings		4962240	0					
ANR	4962353	PtrMemberAccess	imem -> lost		4962240	0					
ANR	4962354	Identifier	imem		4962240	0					
ANR	4962355	Identifier	lost		4962240	1					
ANR	4962356	Identifier	strings		4962240	1					
ANR	4962357	Identifier	nbytes		4962240	1					
ANR	4962358	ExpressionStatement	"gs_alloc_fill ( data , gs_alloc_fill_free , nbytes )"	1755:8:56498:56545	4962240	3	True				
ANR	4962359	CallExpression	"gs_alloc_fill ( data , gs_alloc_fill_free , nbytes )"		4962240	0					
ANR	4962360	Callee	gs_alloc_fill		4962240	0					
ANR	4962361	Identifier	gs_alloc_fill		4962240	0					
ANR	4962362	ArgumentList	data		4962240	1					
ANR	4962363	Argument	data		4962240	0					
ANR	4962364	Identifier	data		4962240	0					
ANR	4962365	Argument	gs_alloc_fill_free		4962240	1					
ANR	4962366	Identifier	gs_alloc_fill_free		4962240	0					
ANR	4962367	Argument	nbytes		4962240	2					
ANR	4962368	Identifier	nbytes		4962240	0					
ANR	4962369	ReturnType	static void		4962240	1					
ANR	4962370	Identifier	i_free_string		4962240	2					
ANR	4962371	ParameterList	"gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname"		4962240	3					
ANR	4962372	Parameter	gs_memory_t * mem	1736:14:55749:55765	4962240	0	True				
ANR	4962373	ParameterType	gs_memory_t *		4962240	0					
ANR	4962374	Identifier	mem		4962240	1					
ANR	4962375	Parameter	byte * data	1736:33:55768:55778	4962240	1	True				
ANR	4962376	ParameterType	byte *		4962240	0					
ANR	4962377	Identifier	data		4962240	1					
ANR	4962378	Parameter	uint nbytes	1736:46:55781:55791	4962240	2	True				
ANR	4962379	ParameterType	uint		4962240	0					
ANR	4962380	Identifier	nbytes		4962240	1					
ANR	4962381	Parameter	client_name_t cname	1737:14:55808:55826	4962240	3	True				
ANR	4962382	ParameterType	client_name_t		4962240	0					
ANR	4962383	Identifier	cname		4962240	1					
ANR	4962384	CFGEntryNode	ENTRY		4962240		True				
ANR	4962385	CFGExitNode	EXIT		4962240		True				
ANR	4962386	Symbol	* * imem		4962240						
ANR	4962387	Symbol	data		4962240						
ANR	4962388	Symbol	imem -> cc -> ctop		4962240						
ANR	4962389	Symbol	imem -> lost		4962240						
ANR	4962390	Symbol	gs_alloc_fill_free		4962240						
ANR	4962391	Symbol	cname		4962240						
ANR	4962392	Symbol	imem -> cc		4962240						
ANR	4962393	Symbol	alloc_trace_space		4962240						
ANR	4962394	Symbol	nbytes		4962240						
ANR	4962395	Symbol	imem -> lost . strings		4962240						
ANR	4962396	Symbol	mem		4962240						
ANR	4962397	Symbol	HDR_ID_OFFSET		4962240						
ANR	4962398	Symbol	client_name_string		4962240						
ANR	4962399	Symbol	* imem -> cc		4962240						
ANR	4962400	Symbol	imem		4962240						
ANR	4962401	Symbol	* imem		4962240						
ANR	4962402	Function	i_stable	1759:0:56556:56637							
ANR	4962403	FunctionDef	i_stable (gs_memory_t * mem)		4962402	0					
ANR	4962404	CompoundStatement		1761:0:56604:56637	4962402	0					
ANR	4962405	ReturnStatement	return mem -> stable_memory ;	1762:4:56610:56635	4962402	0	True				
ANR	4962406	PtrMemberAccess	mem -> stable_memory		4962402	0					
ANR	4962407	Identifier	mem		4962402	0					
ANR	4962408	Identifier	stable_memory		4962402	1					
ANR	4962409	ReturnType	static gs_memory_t *		4962402	1					
ANR	4962410	Identifier	i_stable		4962402	2					
ANR	4962411	ParameterList	gs_memory_t * mem		4962402	3					
ANR	4962412	Parameter	gs_memory_t * mem	1760:9:56586:56601	4962402	0	True				
ANR	4962413	ParameterType	gs_memory_t *		4962402	0					
ANR	4962414	Identifier	mem		4962402	1					
ANR	4962415	CFGEntryNode	ENTRY		4962402		True				
ANR	4962416	CFGExitNode	EXIT		4962402		True				
ANR	4962417	Symbol	mem -> stable_memory		4962402						
ANR	4962418	Symbol	mem		4962402						
ANR	4962419	Symbol	* mem		4962402						
ANR	4962420	Function	i_status	1765:0:56640:57661							
ANR	4962421	FunctionDef	"i_status (gs_memory_t * mem , gs_memory_status_t * pstat)"		4962420	0					
ANR	4962422	CompoundStatement		1767:0:56708:57661	4962420	0					
ANR	4962423	Statement	gs_ref_memory_t	1768:4:56714:56728	4962420	0	True				
ANR	4962424	Statement	*	1768:20:56730:56730	4962420	1	True				
ANR	4962425	Statement	const	1768:22:56732:56736	4962420	2	True				
ANR	4962426	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1768:28:56738:56767	4962420	3	True				
ANR	4962427	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4962420	0		=			
ANR	4962428	Identifier	imem		4962420	0					
ANR	4962429	CastExpression	( gs_ref_memory_t * ) mem		4962420	1					
ANR	4962430	CastTarget	gs_ref_memory_t *		4962420	0					
ANR	4962431	Identifier	mem		4962420	1					
ANR	4962432	IdentifierDeclStatement	ulong unused = imem -> lost . refs + imem -> lost . strings ;	1769:4:56773:56824	4962420	4	True				
ANR	4962433	IdentifierDecl	unused = imem -> lost . refs + imem -> lost . strings		4962420	0					
ANR	4962434	IdentifierDeclType	ulong		4962420	0					
ANR	4962435	Identifier	unused		4962420	1					
ANR	4962436	AssignmentExpression	unused = imem -> lost . refs + imem -> lost . strings		4962420	2		=			
ANR	4962437	Identifier	unused		4962420	0					
ANR	4962438	AdditiveExpression	imem -> lost . refs + imem -> lost . strings		4962420	1		+			
ANR	4962439	MemberAccess	imem -> lost . refs		4962420	0					
ANR	4962440	PtrMemberAccess	imem -> lost		4962420	0					
ANR	4962441	Identifier	imem		4962420	0					
ANR	4962442	Identifier	lost		4962420	1					
ANR	4962443	Identifier	refs		4962420	1					
ANR	4962444	MemberAccess	imem -> lost . strings		4962420	1					
ANR	4962445	PtrMemberAccess	imem -> lost		4962420	0					
ANR	4962446	Identifier	imem		4962420	0					
ANR	4962447	Identifier	lost		4962420	1					
ANR	4962448	Identifier	strings		4962420	1					
ANR	4962449	IdentifierDeclStatement	ulong inner = 0 ;	1770:4:56830:56845	4962420	5	True				
ANR	4962450	IdentifierDecl	inner = 0		4962420	0					
ANR	4962451	IdentifierDeclType	ulong		4962420	0					
ANR	4962452	Identifier	inner		4962420	1					
ANR	4962453	AssignmentExpression	inner = 0		4962420	2		=			
ANR	4962454	Identifier	inner		4962420	0					
ANR	4962455	PrimaryExpression	0		4962420	1					
ANR	4962456	IdentifierDeclStatement	clump_splay_walker sw ;	1771:4:56851:56872	4962420	6	True				
ANR	4962457	IdentifierDecl	sw		4962420	0					
ANR	4962458	IdentifierDeclType	clump_splay_walker		4962420	0					
ANR	4962459	Identifier	sw		4962420	1					
ANR	4962460	IdentifierDeclStatement	clump_t * cp ;	1772:4:56878:56889	4962420	7	True				
ANR	4962461	IdentifierDecl	* cp		4962420	0					
ANR	4962462	IdentifierDeclType	clump_t *		4962420	0					
ANR	4962463	Identifier	cp		4962420	1					
ANR	4962464	ExpressionStatement	alloc_close_clump ( imem )	1774:4:56896:56919	4962420	8	True				
ANR	4962465	CallExpression	alloc_close_clump ( imem )		4962420	0					
ANR	4962466	Callee	alloc_close_clump		4962420	0					
ANR	4962467	Identifier	alloc_close_clump		4962420	0					
ANR	4962468	ArgumentList	imem		4962420	1					
ANR	4962469	Argument	imem		4962420	0					
ANR	4962470	Identifier	imem		4962420	0					
ANR	4962471	ForStatement	"for ( cp = clump_splay_walk_init ( & sw , imem ) ; cp != NULL ; cp = clump_splay_walk_fwd ( & sw ) )"		4962420	9					
ANR	4962472	ForInit	"cp = clump_splay_walk_init ( & sw , imem ) ;"	1778:9:57105:57142	4962420	0	True				
ANR	4962473	AssignmentExpression	"cp = clump_splay_walk_init ( & sw , imem )"		4962420	0		=			
ANR	4962474	Identifier	cp		4962420	0					
ANR	4962475	CallExpression	"clump_splay_walk_init ( & sw , imem )"		4962420	1					
ANR	4962476	Callee	clump_splay_walk_init		4962420	0					
ANR	4962477	Identifier	clump_splay_walk_init		4962420	0					
ANR	4962478	ArgumentList	& sw		4962420	1					
ANR	4962479	Argument	& sw		4962420	0					
ANR	4962480	UnaryOperationExpression	& sw		4962420	0					
ANR	4962481	UnaryOperator	&		4962420	0					
ANR	4962482	Identifier	sw		4962420	1					
ANR	4962483	Argument	imem		4962420	1					
ANR	4962484	Identifier	imem		4962420	0					
ANR	4962485	Condition	cp != NULL	1778:48:57144:57153	4962420	1	True				
ANR	4962486	EqualityExpression	cp != NULL		4962420	0		!=			
ANR	4962487	Identifier	cp		4962420	0					
ANR	4962488	Identifier	NULL		4962420	1					
ANR	4962489	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	1778:60:57156:57185	4962420	2	True	=			
ANR	4962490	Identifier	cp		4962420	0					
ANR	4962491	CallExpression	clump_splay_walk_fwd ( & sw )		4962420	1					
ANR	4962492	Callee	clump_splay_walk_fwd		4962420	0					
ANR	4962493	Identifier	clump_splay_walk_fwd		4962420	0					
ANR	4962494	ArgumentList	& sw		4962420	1					
ANR	4962495	Argument	& sw		4962420	0					
ANR	4962496	UnaryOperationExpression	& sw		4962420	0					
ANR	4962497	UnaryOperator	&		4962420	0					
ANR	4962498	Identifier	sw		4962420	1					
ANR	4962499	CompoundStatement		13:4:483:483	4962420	3					
ANR	4962500	ExpressionStatement	unused += cp -> ctop - cp -> cbot	1780:8:57202:57231	4962420	0	True				
ANR	4962501	AssignmentExpression	unused += cp -> ctop - cp -> cbot		4962420	0		+=			
ANR	4962502	Identifier	unused		4962420	0					
ANR	4962503	AdditiveExpression	cp -> ctop - cp -> cbot		4962420	1		-			
ANR	4962504	PtrMemberAccess	cp -> ctop		4962420	0					
ANR	4962505	Identifier	cp		4962420	0					
ANR	4962506	Identifier	ctop		4962420	1					
ANR	4962507	PtrMemberAccess	cp -> cbot		4962420	1					
ANR	4962508	Identifier	cp		4962420	0					
ANR	4962509	Identifier	cbot		4962420	1					
ANR	4962510	IfStatement	if ( cp -> outer )		4962420	1					
ANR	4962511	Condition	cp -> outer	1781:12:57245:57253	4962420	0	True				
ANR	4962512	PtrMemberAccess	cp -> outer		4962420	0					
ANR	4962513	Identifier	cp		4962420	0					
ANR	4962514	Identifier	outer		4962420	1					
ANR	4962515	ExpressionStatement	inner += cp -> cend - ( byte * ) cp -> chead	1782:12:57268:57306	4962420	1	True				
ANR	4962516	AssignmentExpression	inner += cp -> cend - ( byte * ) cp -> chead		4962420	0		+=			
ANR	4962517	Identifier	inner		4962420	0					
ANR	4962518	AdditiveExpression	cp -> cend - ( byte * ) cp -> chead		4962420	1		-			
ANR	4962519	PtrMemberAccess	cp -> cend		4962420	0					
ANR	4962520	Identifier	cp		4962420	0					
ANR	4962521	Identifier	cend		4962420	1					
ANR	4962522	CastExpression	( byte * ) cp -> chead		4962420	1					
ANR	4962523	CastTarget	byte *		4962420	0					
ANR	4962524	PtrMemberAccess	cp -> chead		4962420	1					
ANR	4962525	Identifier	cp		4962420	0					
ANR	4962526	Identifier	chead		4962420	1					
ANR	4962527	ExpressionStatement	unused += compute_free_objects ( imem )	1784:4:57318:57354	4962420	10	True				
ANR	4962528	AssignmentExpression	unused += compute_free_objects ( imem )		4962420	0		+=			
ANR	4962529	Identifier	unused		4962420	0					
ANR	4962530	CallExpression	compute_free_objects ( imem )		4962420	1					
ANR	4962531	Callee	compute_free_objects		4962420	0					
ANR	4962532	Identifier	compute_free_objects		4962420	0					
ANR	4962533	ArgumentList	imem		4962420	1					
ANR	4962534	Argument	imem		4962420	0					
ANR	4962535	Identifier	imem		4962420	0					
ANR	4962536	ExpressionStatement	pstat -> used = imem -> allocated + inner - unused + imem -> previous_status . used	1785:4:57360:57443	4962420	11	True				
ANR	4962537	AssignmentExpression	pstat -> used = imem -> allocated + inner - unused + imem -> previous_status . used		4962420	0		=			
ANR	4962538	PtrMemberAccess	pstat -> used		4962420	0					
ANR	4962539	Identifier	pstat		4962420	0					
ANR	4962540	Identifier	used		4962420	1					
ANR	4962541	AdditiveExpression	imem -> allocated + inner - unused + imem -> previous_status . used		4962420	1		+			
ANR	4962542	PtrMemberAccess	imem -> allocated		4962420	0					
ANR	4962543	Identifier	imem		4962420	0					
ANR	4962544	Identifier	allocated		4962420	1					
ANR	4962545	AdditiveExpression	inner - unused + imem -> previous_status . used		4962420	1		-			
ANR	4962546	Identifier	inner		4962420	0					
ANR	4962547	AdditiveExpression	unused + imem -> previous_status . used		4962420	1		+			
ANR	4962548	Identifier	unused		4962420	0					
ANR	4962549	MemberAccess	imem -> previous_status . used		4962420	1					
ANR	4962550	PtrMemberAccess	imem -> previous_status		4962420	0					
ANR	4962551	Identifier	imem		4962420	0					
ANR	4962552	Identifier	previous_status		4962420	1					
ANR	4962553	Identifier	used		4962420	1					
ANR	4962554	ExpressionStatement	pstat -> allocated = imem -> allocated + imem -> previous_status . allocated	1787:4:57449:57525	4962420	12	True				
ANR	4962555	AssignmentExpression	pstat -> allocated = imem -> allocated + imem -> previous_status . allocated		4962420	0		=			
ANR	4962556	PtrMemberAccess	pstat -> allocated		4962420	0					
ANR	4962557	Identifier	pstat		4962420	0					
ANR	4962558	Identifier	allocated		4962420	1					
ANR	4962559	AdditiveExpression	imem -> allocated + imem -> previous_status . allocated		4962420	1		+			
ANR	4962560	PtrMemberAccess	imem -> allocated		4962420	0					
ANR	4962561	Identifier	imem		4962420	0					
ANR	4962562	Identifier	allocated		4962420	1					
ANR	4962563	MemberAccess	imem -> previous_status . allocated		4962420	1					
ANR	4962564	PtrMemberAccess	imem -> previous_status		4962420	0					
ANR	4962565	Identifier	imem		4962420	0					
ANR	4962566	Identifier	previous_status		4962420	1					
ANR	4962567	Identifier	allocated		4962420	1					
ANR	4962568	ExpressionStatement	pstat -> max_used = 0	1789:4:57531:57550	4962420	13	True				
ANR	4962569	AssignmentExpression	pstat -> max_used = 0		4962420	0		=			
ANR	4962570	PtrMemberAccess	pstat -> max_used		4962420	0					
ANR	4962571	Identifier	pstat		4962420	0					
ANR	4962572	Identifier	max_used		4962420	1					
ANR	4962573	PrimaryExpression	0		4962420	1					
ANR	4962574	ExpressionStatement	pstat -> is_thread_safe = false	1790:4:57590:57619	4962420	14	True				
ANR	4962575	AssignmentExpression	pstat -> is_thread_safe = false		4962420	0		=			
ANR	4962576	PtrMemberAccess	pstat -> is_thread_safe		4962420	0					
ANR	4962577	Identifier	pstat		4962420	0					
ANR	4962578	Identifier	is_thread_safe		4962420	1					
ANR	4962579	Identifier	false		4962420	1					
ANR	4962580	ReturnType	static void		4962420	1					
ANR	4962581	Identifier	i_status		4962420	2					
ANR	4962582	ParameterList	"gs_memory_t * mem , gs_memory_status_t * pstat"		4962420	3					
ANR	4962583	Parameter	gs_memory_t * mem	1766:9:56661:56677	4962420	0	True				
ANR	4962584	ParameterType	gs_memory_t *		4962420	0					
ANR	4962585	Identifier	mem		4962420	1					
ANR	4962586	Parameter	gs_memory_status_t * pstat	1766:28:56680:56705	4962420	1	True				
ANR	4962587	ParameterType	gs_memory_status_t *		4962420	0					
ANR	4962588	Identifier	pstat		4962420	1					
ANR	4962589	CFGEntryNode	ENTRY		4962420		True				
ANR	4962590	CFGExitNode	EXIT		4962420		True				
ANR	4962591	Symbol	imem -> lost . refs		4962420						
ANR	4962592	Symbol	cp -> cend		4962420						
ANR	4962593	Symbol	pstat -> used		4962420						
ANR	4962594	Symbol	pstat -> is_thread_safe		4962420						
ANR	4962595	Symbol	& sw		4962420						
ANR	4962596	Symbol	* pstat		4962420						
ANR	4962597	Symbol	cp -> chead		4962420						
ANR	4962598	Symbol	cp -> cbot		4962420						
ANR	4962599	Symbol	mem		4962420						
ANR	4962600	Symbol	pstat -> max_used		4962420						
ANR	4962601	Symbol	pstat -> allocated		4962420						
ANR	4962602	Symbol	clump_splay_walk_init		4962420						
ANR	4962603	Symbol	* imem		4962420						
ANR	4962604	Symbol	cp -> ctop		4962420						
ANR	4962605	Symbol	imem -> previous_status . used		4962420						
ANR	4962606	Symbol	compute_free_objects		4962420						
ANR	4962607	Symbol	imem -> previous_status		4962420						
ANR	4962608	Symbol	imem -> allocated		4962420						
ANR	4962609	Symbol	NULL		4962420						
ANR	4962610	Symbol	pstat		4962420						
ANR	4962611	Symbol	sw		4962420						
ANR	4962612	Symbol	imem -> previous_status . allocated		4962420						
ANR	4962613	Symbol	imem -> lost		4962420						
ANR	4962614	Symbol	clump_splay_walk_fwd		4962420						
ANR	4962615	Symbol	false		4962420						
ANR	4962616	Symbol	inner		4962420						
ANR	4962617	Symbol	cp		4962420						
ANR	4962618	Symbol	* cp		4962420						
ANR	4962619	Symbol	imem -> lost . strings		4962420						
ANR	4962620	Symbol	unused		4962420						
ANR	4962621	Symbol	cp -> outer		4962420						
ANR	4962622	Symbol	imem		4962420						
ANR	4962623	Function	i_enable_free	1793:0:57664:57965							
ANR	4962624	FunctionDef	"i_enable_free (gs_memory_t * mem , bool enable)"		4962623	0					
ANR	4962625	CompoundStatement		1795:0:57722:57965	4962623	0					
ANR	4962626	IfStatement	if ( enable )		4962623	0					
ANR	4962627	Condition	enable	1796:8:57732:57737	4962623	0	True				
ANR	4962628	Identifier	enable		4962623	0					
ANR	4962629	ExpressionStatement	"mem -> procs . free_object = i_free_object , mem -> procs . free_string = i_free_string"	1797:8:57748:57838	4962623	1	True				
ANR	4962630	Expression	"mem -> procs . free_object = i_free_object , mem -> procs . free_string = i_free_string"		4962623	0					
ANR	4962631	AssignmentExpression	mem -> procs . free_object = i_free_object		4962623	0		=			
ANR	4962632	MemberAccess	mem -> procs . free_object		4962623	0					
ANR	4962633	PtrMemberAccess	mem -> procs		4962623	0					
ANR	4962634	Identifier	mem		4962623	0					
ANR	4962635	Identifier	procs		4962623	1					
ANR	4962636	Identifier	free_object		4962623	1					
ANR	4962637	Identifier	i_free_object		4962623	1					
ANR	4962638	AssignmentExpression	mem -> procs . free_string = i_free_string		4962623	1		=			
ANR	4962639	MemberAccess	mem -> procs . free_string		4962623	0					
ANR	4962640	PtrMemberAccess	mem -> procs		4962623	0					
ANR	4962641	Identifier	mem		4962623	0					
ANR	4962642	Identifier	procs		4962623	1					
ANR	4962643	Identifier	free_string		4962623	1					
ANR	4962644	Identifier	i_free_string		4962623	1					
ANR	4962645	ElseStatement	else		4962623	0					
ANR	4962646	ExpressionStatement	"mem -> procs . free_object = gs_ignore_free_object , mem -> procs . free_string = gs_ignore_free_string"	1800:8:57857:57963	4962623	0	True				
ANR	4962647	Expression	"mem -> procs . free_object = gs_ignore_free_object , mem -> procs . free_string = gs_ignore_free_string"		4962623	0					
ANR	4962648	AssignmentExpression	mem -> procs . free_object = gs_ignore_free_object		4962623	0		=			
ANR	4962649	MemberAccess	mem -> procs . free_object		4962623	0					
ANR	4962650	PtrMemberAccess	mem -> procs		4962623	0					
ANR	4962651	Identifier	mem		4962623	0					
ANR	4962652	Identifier	procs		4962623	1					
ANR	4962653	Identifier	free_object		4962623	1					
ANR	4962654	Identifier	gs_ignore_free_object		4962623	1					
ANR	4962655	AssignmentExpression	mem -> procs . free_string = gs_ignore_free_string		4962623	1		=			
ANR	4962656	MemberAccess	mem -> procs . free_string		4962623	0					
ANR	4962657	PtrMemberAccess	mem -> procs		4962623	0					
ANR	4962658	Identifier	mem		4962623	0					
ANR	4962659	Identifier	procs		4962623	1					
ANR	4962660	Identifier	free_string		4962623	1					
ANR	4962661	Identifier	gs_ignore_free_string		4962623	1					
ANR	4962662	ReturnType	static void		4962623	1					
ANR	4962663	Identifier	i_enable_free		4962623	2					
ANR	4962664	ParameterList	"gs_memory_t * mem , bool enable"		4962623	3					
ANR	4962665	Parameter	gs_memory_t * mem	1794:14:57690:57706	4962623	0	True				
ANR	4962666	ParameterType	gs_memory_t *		4962623	0					
ANR	4962667	Identifier	mem		4962623	1					
ANR	4962668	Parameter	bool enable	1794:33:57709:57719	4962623	1	True				
ANR	4962669	ParameterType	bool		4962623	0					
ANR	4962670	Identifier	enable		4962623	1					
ANR	4962671	CFGEntryNode	ENTRY		4962623		True				
ANR	4962672	CFGExitNode	EXIT		4962623		True				
ANR	4962673	Symbol	gs_ignore_free_string		4962623						
ANR	4962674	Symbol	mem		4962623						
ANR	4962675	Symbol	enable		4962623						
ANR	4962676	Symbol	i_free_string		4962623						
ANR	4962677	Symbol	mem -> procs . free_object		4962623						
ANR	4962678	Symbol	i_free_object		4962623						
ANR	4962679	Symbol	mem -> procs		4962623						
ANR	4962680	Symbol	gs_ignore_free_object		4962623						
ANR	4962681	Symbol	mem -> procs . free_string		4962623						
ANR	4962682	Symbol	* mem		4962623						
ANR	4962683	Function	i_set_object_type	1804:0:57968:58171							
ANR	4962684	FunctionDef	"i_set_object_type (gs_memory_t * mem , void * ptr , gs_memory_type_ptr_t type)"		4962683	0					
ANR	4962685	CompoundStatement		1805:0:58054:58171	4962683	0					
ANR	4962686	IdentifierDeclStatement	obj_header_t * pp ;	1806:4:58060:58076	4962683	0	True				
ANR	4962687	IdentifierDecl	* pp		4962683	0					
ANR	4962688	IdentifierDeclType	obj_header_t *		4962683	0					
ANR	4962689	Identifier	pp		4962683	1					
ANR	4962690	IfStatement	if ( ptr == 0 )		4962683	1					
ANR	4962691	Condition	ptr == 0	1808:8:58087:58094	4962683	0	True				
ANR	4962692	EqualityExpression	ptr == 0		4962683	0		==			
ANR	4962693	Identifier	ptr		4962683	0					
ANR	4962694	PrimaryExpression	0		4962683	1					
ANR	4962695	ReturnStatement	return ;	1809:8:58105:58111	4962683	1	True				
ANR	4962696	ExpressionStatement	pp = ( obj_header_t * ) ptr - 1	1810:4:58117:58146	4962683	2	True				
ANR	4962697	AssignmentExpression	pp = ( obj_header_t * ) ptr - 1		4962683	0		=			
ANR	4962698	Identifier	pp		4962683	0					
ANR	4962699	AdditiveExpression	( obj_header_t * ) ptr - 1		4962683	1		-			
ANR	4962700	CastExpression	( obj_header_t * ) ptr		4962683	0					
ANR	4962701	CastTarget	obj_header_t *		4962683	0					
ANR	4962702	Identifier	ptr		4962683	1					
ANR	4962703	PrimaryExpression	1		4962683	1					
ANR	4962704	ExpressionStatement	pp -> o_type = type	1811:4:58152:58169	4962683	3	True				
ANR	4962705	AssignmentExpression	pp -> o_type = type		4962683	0		=			
ANR	4962706	PtrMemberAccess	pp -> o_type		4962683	0					
ANR	4962707	Identifier	pp		4962683	0					
ANR	4962708	Identifier	o_type		4962683	1					
ANR	4962709	Identifier	type		4962683	1					
ANR	4962710	ReturnType	static void		4962683	1					
ANR	4962711	Identifier	i_set_object_type		4962683	2					
ANR	4962712	ParameterList	"gs_memory_t * mem , void * ptr , gs_memory_type_ptr_t type"		4962683	3					
ANR	4962713	Parameter	gs_memory_t * mem	1804:30:57998:58013	4962683	0	True				
ANR	4962714	ParameterType	gs_memory_t *		4962683	0					
ANR	4962715	Identifier	mem		4962683	1					
ANR	4962716	Parameter	void * ptr	1804:48:58016:58024	4962683	1	True				
ANR	4962717	ParameterType	void *		4962683	0					
ANR	4962718	Identifier	ptr		4962683	1					
ANR	4962719	Parameter	gs_memory_type_ptr_t type	1804:59:58027:58051	4962683	2	True				
ANR	4962720	ParameterType	gs_memory_type_ptr_t		4962683	0					
ANR	4962721	Identifier	type		4962683	1					
ANR	4962722	CFGEntryNode	ENTRY		4962683		True				
ANR	4962723	CFGExitNode	EXIT		4962683		True				
ANR	4962724	Symbol	pp		4962683						
ANR	4962725	Symbol	mem		4962683						
ANR	4962726	Symbol	* pp		4962683						
ANR	4962727	Symbol	type		4962683						
ANR	4962728	Symbol	pp -> o_type		4962683						
ANR	4962729	Symbol	ptr		4962683						
ANR	4962730	Function	i_defer_frees	1814:0:58174:58231							
ANR	4962731	FunctionDef	"i_defer_frees (gs_memory_t * mem , int defer)"		4962730	0					
ANR	4962732	CompoundStatement		1815:0:58229:58231	4962730	0					
ANR	4962733	ReturnType	static void		4962730	1					
ANR	4962734	Identifier	i_defer_frees		4962730	2					
ANR	4962735	ParameterList	"gs_memory_t * mem , int defer"		4962730	3					
ANR	4962736	Parameter	gs_memory_t * mem	1814:26:58200:58215	4962730	0	True				
ANR	4962737	ParameterType	gs_memory_t *		4962730	0					
ANR	4962738	Identifier	mem		4962730	1					
ANR	4962739	Parameter	int defer	1814:44:58218:58226	4962730	1	True				
ANR	4962740	ParameterType	int		4962730	0					
ANR	4962741	Identifier	defer		4962730	1					
ANR	4962742	CFGEntryNode	ENTRY		4962730		True				
ANR	4962743	CFGExitNode	EXIT		4962730		True				
ANR	4962744	Symbol	defer		4962730						
ANR	4962745	Symbol	mem		4962730						
ANR	4962746	Function	compute_free_objects	1821:0:58345:58776							
ANR	4962747	FunctionDef	compute_free_objects (gs_ref_memory_t * mem)		4962746	0					
ANR	4962748	CompoundStatement		1823:0:58402:58776	4962746	0					
ANR	4962749	IdentifierDeclStatement	ulong unused = mem -> lost . objects ;	1824:4:58408:58440	4962746	0	True				
ANR	4962750	IdentifierDecl	unused = mem -> lost . objects		4962746	0					
ANR	4962751	IdentifierDeclType	ulong		4962746	0					
ANR	4962752	Identifier	unused		4962746	1					
ANR	4962753	AssignmentExpression	unused = mem -> lost . objects		4962746	2		=			
ANR	4962754	Identifier	unused		4962746	0					
ANR	4962755	MemberAccess	mem -> lost . objects		4962746	1					
ANR	4962756	PtrMemberAccess	mem -> lost		4962746	0					
ANR	4962757	Identifier	mem		4962746	0					
ANR	4962758	Identifier	lost		4962746	1					
ANR	4962759	Identifier	objects		4962746	1					
ANR	4962760	IdentifierDeclStatement	int i ;	1825:4:58446:58451	4962746	1	True				
ANR	4962761	IdentifierDecl	i		4962746	0					
ANR	4962762	IdentifierDeclType	int		4962746	0					
ANR	4962763	Identifier	i		4962746	1					
ANR	4962764	ForStatement	for ( i = 0 ; i < num_freelists ; i ++ )		4962746	2					
ANR	4962765	ForInit	i = 0 ;	1828:9:58501:58506	4962746	0	True				
ANR	4962766	AssignmentExpression	i = 0		4962746	0		=			
ANR	4962767	Identifier	i		4962746	0					
ANR	4962768	PrimaryExpression	0		4962746	1					
ANR	4962769	Condition	i < num_freelists	1828:16:58508:58524	4962746	1	True				
ANR	4962770	RelationalExpression	i < num_freelists		4962746	0		<			
ANR	4962771	Identifier	i		4962746	0					
ANR	4962772	Identifier	num_freelists		4962746	1					
ANR	4962773	PostIncDecOperationExpression	i ++	1828:35:58527:58529	4962746	2	True				
ANR	4962774	Identifier	i		4962746	0					
ANR	4962775	IncDec	++		4962746	1					
ANR	4962776	CompoundStatement		7:8:139:164	4962746	3					
ANR	4962777	IdentifierDeclStatement	const obj_header_t * pfree ;	1829:8:58542:58567	4962746	0	True				
ANR	4962778	IdentifierDecl	* pfree		4962746	0					
ANR	4962779	IdentifierDeclType	const obj_header_t *		4962746	0					
ANR	4962780	Identifier	pfree		4962746	1					
ANR	4962781	Statement	for	1831:8:58578:58580	4962746	1	True				
ANR	4962782	Statement	(	1831:12:58582:58582	4962746	2	True				
ANR	4962783	ExpressionStatement	pfree = mem -> freelists [ i ]	1831:13:58583:58608	4962746	3	True				
ANR	4962784	AssignmentExpression	pfree = mem -> freelists [ i ]		4962746	0		=			
ANR	4962785	Identifier	pfree		4962746	0					
ANR	4962786	ArrayIndexing	mem -> freelists [ i ]		4962746	1					
ANR	4962787	PtrMemberAccess	mem -> freelists		4962746	0					
ANR	4962788	Identifier	mem		4962746	0					
ANR	4962789	Identifier	freelists		4962746	1					
ANR	4962790	Identifier	i		4962746	1					
ANR	4962791	ExpressionStatement	pfree != 0	1831:40:58610:58620	4962746	4	True				
ANR	4962792	EqualityExpression	pfree != 0		4962746	0		!=			
ANR	4962793	Identifier	pfree		4962746	0					
ANR	4962794	PrimaryExpression	0		4962746	1					
ANR	4962795	Statement	pfree	1832:13:58635:58639	4962746	5	True				
ANR	4962796	Statement	=	1832:19:58641:58641	4962746	6	True				
ANR	4962797	Statement	*	1832:21:58643:58643	4962746	7	True				
ANR	4962798	Statement	(	1832:22:58644:58644	4962746	8	True				
ANR	4962799	Statement	const	1832:23:58645:58649	4962746	9	True				
ANR	4962800	Statement	obj_header_t	1832:29:58651:58662	4962746	10	True				
ANR	4962801	Statement	*	1832:42:58664:58664	4962746	11	True				
ANR	4962802	Statement	const	1832:44:58666:58670	4962746	12	True				
ANR	4962803	Statement	*	1832:50:58672:58672	4962746	13	True				
ANR	4962804	Statement	)	1832:51:58673:58673	4962746	14	True				
ANR	4962805	Statement	pfree	1832:52:58674:58678	4962746	15	True				
ANR	4962806	Statement	)	1833:12:58692:58692	4962746	16	True				
ANR	4962807	ExpressionStatement	unused += obj_align_round ( pfree [ - 1 ] . o_size )	1834:12:58706:58749	4962746	17	True				
ANR	4962808	AssignmentExpression	unused += obj_align_round ( pfree [ - 1 ] . o_size )		4962746	0		+=			
ANR	4962809	Identifier	unused		4962746	0					
ANR	4962810	CallExpression	obj_align_round ( pfree [ - 1 ] . o_size )		4962746	1					
ANR	4962811	Callee	obj_align_round		4962746	0					
ANR	4962812	Identifier	obj_align_round		4962746	0					
ANR	4962813	ArgumentList	pfree [ - 1 ] . o_size		4962746	1					
ANR	4962814	Argument	pfree [ - 1 ] . o_size		4962746	0					
ANR	4962815	MemberAccess	pfree [ - 1 ] . o_size		4962746	0					
ANR	4962816	ArrayIndexing	pfree [ - 1 ]		4962746	0					
ANR	4962817	Identifier	pfree		4962746	0					
ANR	4962818	UnaryOperationExpression	- 1		4962746	1					
ANR	4962819	UnaryOperator	-		4962746	0					
ANR	4962820	PrimaryExpression	1		4962746	1					
ANR	4962821	Identifier	o_size		4962746	1					
ANR	4962822	ReturnStatement	return unused ;	1836:4:58761:58774	4962746	3	True				
ANR	4962823	Identifier	unused		4962746	0					
ANR	4962824	ReturnType	static ulong		4962746	1					
ANR	4962825	Identifier	compute_free_objects		4962746	2					
ANR	4962826	ParameterList	gs_ref_memory_t * mem		4962746	3					
ANR	4962827	Parameter	gs_ref_memory_t * mem	1822:21:58379:58399	4962746	0	True				
ANR	4962828	ParameterType	gs_ref_memory_t *		4962746	0					
ANR	4962829	Identifier	mem		4962746	1					
ANR	4962830	CFGEntryNode	ENTRY		4962746		True				
ANR	4962831	CFGExitNode	EXIT		4962746		True				
ANR	4962832	Symbol	obj_align_round		4962746						
ANR	4962833	Symbol	pfree		4962746						
ANR	4962834	Symbol	mem -> freelists		4962746						
ANR	4962835	Symbol	pfree [ - 1 ] . o_size		4962746						
ANR	4962836	Symbol	i		4962746						
ANR	4962837	Symbol	* * mem		4962746						
ANR	4962838	Symbol	num_freelists		4962746						
ANR	4962839	Symbol	mem -> lost . objects		4962746						
ANR	4962840	Symbol	* i		4962746						
ANR	4962841	Symbol	mem		4962746						
ANR	4962842	Symbol	mem -> lost		4962746						
ANR	4962843	Symbol	* mem -> freelists		4962746						
ANR	4962844	Symbol	unused		4962746						
ANR	4962845	Symbol	* pfree		4962746						
ANR	4962846	Symbol	* mem		4962746						
ANR	4962847	Function	large_freelist_alloc	1840:0:58835:60845							
ANR	4962848	FunctionDef	"large_freelist_alloc (gs_ref_memory_t * mem , uint size)"		4962847	0					
ANR	4962849	CompoundStatement		1842:0:58947:60845	4962847	0					
ANR	4962850	IdentifierDeclStatement	uint aligned_size = obj_align_round ( size ) ;	1845:4:59085:59126	4962847	0	True				
ANR	4962851	IdentifierDecl	aligned_size = obj_align_round ( size )		4962847	0					
ANR	4962852	IdentifierDeclType	uint		4962847	0					
ANR	4962853	Identifier	aligned_size		4962847	1					
ANR	4962854	AssignmentExpression	aligned_size = obj_align_round ( size )		4962847	2		=			
ANR	4962855	Identifier	aligned_size		4962847	0					
ANR	4962856	CallExpression	obj_align_round ( size )		4962847	1					
ANR	4962857	Callee	obj_align_round		4962847	0					
ANR	4962858	Identifier	obj_align_round		4962847	0					
ANR	4962859	ArgumentList	size		4962847	1					
ANR	4962860	Argument	size		4962847	0					
ANR	4962861	Identifier	size		4962847	0					
ANR	4962862	IdentifierDeclStatement	uint aligned_min_size = aligned_size + sizeof ( obj_header_t ) ;	1846:4:59132:59191	4962847	1	True				
ANR	4962863	IdentifierDecl	aligned_min_size = aligned_size + sizeof ( obj_header_t )		4962847	0					
ANR	4962864	IdentifierDeclType	uint		4962847	0					
ANR	4962865	Identifier	aligned_min_size		4962847	1					
ANR	4962866	AssignmentExpression	aligned_min_size = aligned_size + sizeof ( obj_header_t )		4962847	2		=			
ANR	4962867	Identifier	aligned_min_size		4962847	0					
ANR	4962868	AdditiveExpression	aligned_size + sizeof ( obj_header_t )		4962847	1		+			
ANR	4962869	Identifier	aligned_size		4962847	0					
ANR	4962870	SizeofExpression	sizeof ( obj_header_t )		4962847	1					
ANR	4962871	Sizeof	sizeof		4962847	0					
ANR	4962872	SizeofOperand	obj_header_t		4962847	1					
ANR	4962873	IdentifierDeclStatement	uint aligned_max_size = aligned_min_size + obj_align_round ( aligned_min_size / 8 ) ;	1847:4:59197:59285	4962847	2	True				
ANR	4962874	IdentifierDecl	aligned_max_size = aligned_min_size + obj_align_round ( aligned_min_size / 8 )		4962847	0					
ANR	4962875	IdentifierDeclType	uint		4962847	0					
ANR	4962876	Identifier	aligned_max_size		4962847	1					
ANR	4962877	AssignmentExpression	aligned_max_size = aligned_min_size + obj_align_round ( aligned_min_size / 8 )		4962847	2		=			
ANR	4962878	Identifier	aligned_max_size		4962847	0					
ANR	4962879	AdditiveExpression	aligned_min_size + obj_align_round ( aligned_min_size / 8 )		4962847	1		+			
ANR	4962880	Identifier	aligned_min_size		4962847	0					
ANR	4962881	CallExpression	obj_align_round ( aligned_min_size / 8 )		4962847	1					
ANR	4962882	Callee	obj_align_round		4962847	0					
ANR	4962883	Identifier	obj_align_round		4962847	0					
ANR	4962884	ArgumentList	aligned_min_size / 8		4962847	1					
ANR	4962885	Argument	aligned_min_size / 8		4962847	0					
ANR	4962886	MultiplicativeExpression	aligned_min_size / 8		4962847	0		/			
ANR	4962887	Identifier	aligned_min_size		4962847	0					
ANR	4962888	PrimaryExpression	8		4962847	1					
ANR	4962889	IdentifierDeclStatement	obj_header_t * best_fit = 0 ;	1849:4:59291:59317	4962847	3	True				
ANR	4962890	IdentifierDecl	* best_fit = 0		4962847	0					
ANR	4962891	IdentifierDeclType	obj_header_t *		4962847	0					
ANR	4962892	Identifier	best_fit		4962847	1					
ANR	4962893	AssignmentExpression	* best_fit = 0		4962847	2		=			
ANR	4962894	Identifier	best_fit		4962847	0					
ANR	4962895	PrimaryExpression	0		4962847	1					
ANR	4962896	IdentifierDeclStatement	obj_header_t * * best_fit_prev = NULL ;	1850:4:59323:59358	4962847	4	True				
ANR	4962897	IdentifierDecl	* * best_fit_prev = NULL		4962847	0					
ANR	4962898	IdentifierDeclType	obj_header_t * *		4962847	0					
ANR	4962899	Identifier	best_fit_prev		4962847	1					
ANR	4962900	AssignmentExpression	* * best_fit_prev = NULL		4962847	2		=			
ANR	4962901	Identifier	NULL		4962847	0					
ANR	4962902	Identifier	NULL		4962847	1					
ANR	4962903	IdentifierDeclStatement	uint best_fit_size = max_uint ;	1851:4:59403:59432	4962847	5	True				
ANR	4962904	IdentifierDecl	best_fit_size = max_uint		4962847	0					
ANR	4962905	IdentifierDeclType	uint		4962847	0					
ANR	4962906	Identifier	best_fit_size		4962847	1					
ANR	4962907	AssignmentExpression	best_fit_size = max_uint		4962847	2		=			
ANR	4962908	Identifier	max_uint		4962847	0					
ANR	4962909	Identifier	max_uint		4962847	1					
ANR	4962910	IdentifierDeclStatement	obj_header_t * pfree ;	1852:4:59438:59457	4962847	6	True				
ANR	4962911	IdentifierDecl	* pfree		4962847	0					
ANR	4962912	IdentifierDeclType	obj_header_t *		4962847	0					
ANR	4962913	Identifier	pfree		4962847	1					
ANR	4962914	IdentifierDeclStatement	obj_header_t * * ppfprev = & mem -> freelists [ LARGE_FREELIST_INDEX ] ;	1853:4:59463:59525	4962847	7	True				
ANR	4962915	IdentifierDecl	* * ppfprev = & mem -> freelists [ LARGE_FREELIST_INDEX ]		4962847	0					
ANR	4962916	IdentifierDeclType	obj_header_t * *		4962847	0					
ANR	4962917	Identifier	ppfprev		4962847	1					
ANR	4962918	AssignmentExpression	* * ppfprev = & mem -> freelists [ LARGE_FREELIST_INDEX ]		4962847	2		=			
ANR	4962919	Identifier	ppfprev		4962847	0					
ANR	4962920	UnaryOperationExpression	& mem -> freelists [ LARGE_FREELIST_INDEX ]		4962847	1					
ANR	4962921	UnaryOperator	&		4962847	0					
ANR	4962922	ArrayIndexing	mem -> freelists [ LARGE_FREELIST_INDEX ]		4962847	1					
ANR	4962923	PtrMemberAccess	mem -> freelists		4962847	0					
ANR	4962924	Identifier	mem		4962847	0					
ANR	4962925	Identifier	freelists		4962847	1					
ANR	4962926	Identifier	LARGE_FREELIST_INDEX		4962847	1					
ANR	4962927	IdentifierDeclStatement	uint largest_size = 0 ;	1854:4:59531:59552	4962847	8	True				
ANR	4962928	IdentifierDecl	largest_size = 0		4962847	0					
ANR	4962929	IdentifierDeclType	uint		4962847	0					
ANR	4962930	Identifier	largest_size		4962847	1					
ANR	4962931	AssignmentExpression	largest_size = 0		4962847	2		=			
ANR	4962932	Identifier	largest_size		4962847	0					
ANR	4962933	PrimaryExpression	0		4962847	1					
ANR	4962934	IfStatement	if ( aligned_size > mem -> largest_free_size )		4962847	9					
ANR	4962935	Condition	aligned_size > mem -> largest_free_size	1856:8:59563:59599	4962847	0	True				
ANR	4962936	RelationalExpression	aligned_size > mem -> largest_free_size		4962847	0		>			
ANR	4962937	Identifier	aligned_size		4962847	0					
ANR	4962938	PtrMemberAccess	mem -> largest_free_size		4962847	1					
ANR	4962939	Identifier	mem		4962847	0					
ANR	4962940	Identifier	largest_free_size		4962847	1					
ANR	4962941	ReturnStatement	return 0 ;	1857:8:59610:59618	4962847	1	True				
ANR	4962942	PrimaryExpression	0		4962847	0					
ANR	4962943	WhileStatement	while ( ( pfree = * ppfprev ) != 0 )		4962847	10					
ANR	4962944	Condition	( pfree = * ppfprev ) != 0	1859:11:59672:59694	4962847	0	True				
ANR	4962945	EqualityExpression	( pfree = * ppfprev ) != 0		4962847	0		!=			
ANR	4962946	AssignmentExpression	pfree = * ppfprev		4962847	0		=			
ANR	4962947	Identifier	pfree		4962847	0					
ANR	4962948	UnaryOperationExpression	* ppfprev		4962847	1					
ANR	4962949	UnaryOperator	*		4962847	0					
ANR	4962950	Identifier	ppfprev		4962847	1					
ANR	4962951	PrimaryExpression	0		4962847	1					
ANR	4962952	CompoundStatement		19:8:759:809	4962847	1					
ANR	4962953	IdentifierDeclStatement	uint free_size = obj_align_round ( pfree [ - 1 ] . o_size ) ;	1860:8:59707:59757	4962847	0	True				
ANR	4962954	IdentifierDecl	free_size = obj_align_round ( pfree [ - 1 ] . o_size )		4962847	0					
ANR	4962955	IdentifierDeclType	uint		4962847	0					
ANR	4962956	Identifier	free_size		4962847	1					
ANR	4962957	AssignmentExpression	free_size = obj_align_round ( pfree [ - 1 ] . o_size )		4962847	2		=			
ANR	4962958	Identifier	free_size		4962847	0					
ANR	4962959	CallExpression	obj_align_round ( pfree [ - 1 ] . o_size )		4962847	1					
ANR	4962960	Callee	obj_align_round		4962847	0					
ANR	4962961	Identifier	obj_align_round		4962847	0					
ANR	4962962	ArgumentList	pfree [ - 1 ] . o_size		4962847	1					
ANR	4962963	Argument	pfree [ - 1 ] . o_size		4962847	0					
ANR	4962964	MemberAccess	pfree [ - 1 ] . o_size		4962847	0					
ANR	4962965	ArrayIndexing	pfree [ - 1 ]		4962847	0					
ANR	4962966	Identifier	pfree		4962847	0					
ANR	4962967	UnaryOperationExpression	- 1		4962847	1					
ANR	4962968	UnaryOperator	-		4962847	0					
ANR	4962969	PrimaryExpression	1		4962847	1					
ANR	4962970	Identifier	o_size		4962847	1					
ANR	4962971	IfStatement	if ( free_size == aligned_size || ( free_size >= aligned_min_size && free_size < best_fit_size ) )		4962847	1					
ANR	4962972	Condition	free_size == aligned_size || ( free_size >= aligned_min_size && free_size < best_fit_size )	1862:12:59772:59872	4962847	0	True				
ANR	4962973	OrExpression	free_size == aligned_size || ( free_size >= aligned_min_size && free_size < best_fit_size )		4962847	0		||			
ANR	4962974	EqualityExpression	free_size == aligned_size		4962847	0		==			
ANR	4962975	Identifier	free_size		4962847	0					
ANR	4962976	Identifier	aligned_size		4962847	1					
ANR	4962977	AndExpression	free_size >= aligned_min_size && free_size < best_fit_size		4962847	1		&&			
ANR	4962978	RelationalExpression	free_size >= aligned_min_size		4962847	0		>=			
ANR	4962979	Identifier	free_size		4962847	0					
ANR	4962980	Identifier	aligned_min_size		4962847	1					
ANR	4962981	RelationalExpression	free_size < best_fit_size		4962847	1		<			
ANR	4962982	Identifier	free_size		4962847	0					
ANR	4962983	Identifier	best_fit_size		4962847	1					
ANR	4962984	CompoundStatement		23:14:940:940	4962847	1					
ANR	4962985	ExpressionStatement	best_fit = pfree	1865:12:59902:59918	4962847	0	True				
ANR	4962986	AssignmentExpression	best_fit = pfree		4962847	0		=			
ANR	4962987	Identifier	best_fit		4962847	0					
ANR	4962988	Identifier	pfree		4962847	1					
ANR	4962989	ExpressionStatement	best_fit_prev = ppfprev	1866:12:59932:59955	4962847	1	True				
ANR	4962990	AssignmentExpression	best_fit_prev = ppfprev		4962847	0		=			
ANR	4962991	Identifier	best_fit_prev		4962847	0					
ANR	4962992	Identifier	ppfprev		4962847	1					
ANR	4962993	ExpressionStatement	best_fit_size = pfree [ - 1 ] . o_size	1867:12:59969:60001	4962847	2	True				
ANR	4962994	AssignmentExpression	best_fit_size = pfree [ - 1 ] . o_size		4962847	0		=			
ANR	4962995	Identifier	best_fit_size		4962847	0					
ANR	4962996	MemberAccess	pfree [ - 1 ] . o_size		4962847	1					
ANR	4962997	ArrayIndexing	pfree [ - 1 ]		4962847	0					
ANR	4962998	Identifier	pfree		4962847	0					
ANR	4962999	UnaryOperationExpression	- 1		4962847	1					
ANR	4963000	UnaryOperator	-		4962847	0					
ANR	4963001	PrimaryExpression	1		4962847	1					
ANR	4963002	Identifier	o_size		4962847	1					
ANR	4963003	IfStatement	if ( best_fit_size <= aligned_max_size )		4962847	3					
ANR	4963004	Condition	best_fit_size <= aligned_max_size	1868:16:60019:60051	4962847	0	True				
ANR	4963005	RelationalExpression	best_fit_size <= aligned_max_size		4962847	0		<=			
ANR	4963006	Identifier	best_fit_size		4962847	0					
ANR	4963007	Identifier	aligned_max_size		4962847	1					
ANR	4963008	BreakStatement	break ;	1869:16:60070:60075	4962847	1	True				
ANR	4963009	ExpressionStatement	ppfprev = ( obj_header_t * * ) pfree	1871:8:60146:60179	4962847	2	True				
ANR	4963010	AssignmentExpression	ppfprev = ( obj_header_t * * ) pfree		4962847	0		=			
ANR	4963011	Identifier	ppfprev		4962847	0					
ANR	4963012	CastExpression	( obj_header_t * * ) pfree		4962847	1					
ANR	4963013	CastTarget	obj_header_t * *		4962847	0					
ANR	4963014	Identifier	pfree		4962847	1					
ANR	4963015	IfStatement	if ( free_size > largest_size )		4962847	3					
ANR	4963016	Condition	free_size > largest_size	1872:12:60193:60216	4962847	0	True				
ANR	4963017	RelationalExpression	free_size > largest_size		4962847	0		>			
ANR	4963018	Identifier	free_size		4962847	0					
ANR	4963019	Identifier	largest_size		4962847	1					
ANR	4963020	ExpressionStatement	largest_size = free_size	1873:12:60231:60255	4962847	1	True				
ANR	4963021	AssignmentExpression	largest_size = free_size		4962847	0		=			
ANR	4963022	Identifier	largest_size		4962847	0					
ANR	4963023	Identifier	free_size		4962847	1					
ANR	4963024	IfStatement	if ( best_fit == 0 )		4962847	11					
ANR	4963025	Condition	best_fit == 0	1875:8:60271:60283	4962847	0	True				
ANR	4963026	EqualityExpression	best_fit == 0		4962847	0		==			
ANR	4963027	Identifier	best_fit		4962847	0					
ANR	4963028	PrimaryExpression	0		4962847	1					
ANR	4963029	CompoundStatement		34:23:1338:1338	4962847	1					
ANR	4963030	ExpressionStatement	mem -> largest_free_size = largest_size	1881:8:60489:60526	4962847	0	True				
ANR	4963031	AssignmentExpression	mem -> largest_free_size = largest_size		4962847	0		=			
ANR	4963032	PtrMemberAccess	mem -> largest_free_size		4962847	0					
ANR	4963033	Identifier	mem		4962847	0					
ANR	4963034	Identifier	largest_free_size		4962847	1					
ANR	4963035	Identifier	largest_size		4962847	1					
ANR	4963036	ReturnStatement	return 0 ;	1882:8:60536:60544	4962847	1	True				
ANR	4963037	PrimaryExpression	0		4962847	0					
ANR	4963038	ExpressionStatement	* best_fit_prev = * ( obj_header_t * * ) best_fit	1886:4:60619:60662	4962847	12	True				
ANR	4963039	AssignmentExpression	* best_fit_prev = * ( obj_header_t * * ) best_fit		4962847	0		=			
ANR	4963040	UnaryOperationExpression	* best_fit_prev		4962847	0					
ANR	4963041	UnaryOperator	*		4962847	0					
ANR	4963042	Identifier	best_fit_prev		4962847	1					
ANR	4963043	UnaryOperationExpression	* ( obj_header_t * * ) best_fit		4962847	1					
ANR	4963044	UnaryOperator	*		4962847	0					
ANR	4963045	CastExpression	( obj_header_t * * ) best_fit		4962847	1					
ANR	4963046	CastTarget	obj_header_t * *		4962847	0					
ANR	4963047	Identifier	best_fit		4962847	1					
ANR	4963048	ExpressionStatement	"trim_obj ( mem , best_fit , aligned_size , ( clump_t * ) 0 )"	1887:4:60668:60719	4962847	13	True				
ANR	4963049	CallExpression	"trim_obj ( mem , best_fit , aligned_size , ( clump_t * ) 0 )"		4962847	0					
ANR	4963050	Callee	trim_obj		4962847	0					
ANR	4963051	Identifier	trim_obj		4962847	0					
ANR	4963052	ArgumentList	mem		4962847	1					
ANR	4963053	Argument	mem		4962847	0					
ANR	4963054	Identifier	mem		4962847	0					
ANR	4963055	Argument	best_fit		4962847	1					
ANR	4963056	Identifier	best_fit		4962847	0					
ANR	4963057	Argument	aligned_size		4962847	2					
ANR	4963058	Identifier	aligned_size		4962847	0					
ANR	4963059	Argument	( clump_t * ) 0		4962847	3					
ANR	4963060	CastExpression	( clump_t * ) 0		4962847	0					
ANR	4963061	CastTarget	clump_t *		4962847	0					
ANR	4963062	PrimaryExpression	0		4962847	1					
ANR	4963063	ExpressionStatement	best_fit [ - 1 ] . o_size = size	1890:4:60795:60821	4962847	14	True				
ANR	4963064	AssignmentExpression	best_fit [ - 1 ] . o_size = size		4962847	0		=			
ANR	4963065	MemberAccess	best_fit [ - 1 ] . o_size		4962847	0					
ANR	4963066	ArrayIndexing	best_fit [ - 1 ]		4962847	0					
ANR	4963067	Identifier	best_fit		4962847	0					
ANR	4963068	UnaryOperationExpression	- 1		4962847	1					
ANR	4963069	UnaryOperator	-		4962847	0					
ANR	4963070	PrimaryExpression	1		4962847	1					
ANR	4963071	Identifier	o_size		4962847	1					
ANR	4963072	Identifier	size		4962847	1					
ANR	4963073	ReturnStatement	return best_fit ;	1892:4:60828:60843	4962847	15	True				
ANR	4963074	Identifier	best_fit		4962847	0					
ANR	4963075	ReturnType	static obj_header_t *		4962847	1					
ANR	4963076	Identifier	large_freelist_alloc		4962847	2					
ANR	4963077	ParameterList	"gs_ref_memory_t * mem , uint size"		4962847	3					
ANR	4963078	Parameter	gs_ref_memory_t * mem	1841:21:58914:58933	4962847	0	True				
ANR	4963079	ParameterType	gs_ref_memory_t *		4962847	0					
ANR	4963080	Identifier	mem		4962847	1					
ANR	4963081	Parameter	uint size	1841:43:58936:58944	4962847	1	True				
ANR	4963082	ParameterType	uint		4962847	0					
ANR	4963083	Identifier	size		4962847	1					
ANR	4963084	CFGEntryNode	ENTRY		4962847		True				
ANR	4963085	CFGExitNode	EXIT		4962847		True				
ANR	4963086	Symbol	* best_fit_prev		4962847						
ANR	4963087	Symbol	* best_fit		4962847						
ANR	4963088	Symbol	obj_align_round		4962847						
ANR	4963089	Symbol	max_uint		4962847						
ANR	4963090	Symbol	pfree		4962847						
ANR	4963091	Symbol	mem -> freelists		4962847						
ANR	4963092	Symbol	LARGE_FREELIST_INDEX		4962847						
ANR	4963093	Symbol	aligned_max_size		4962847						
ANR	4963094	Symbol	mem		4962847						
ANR	4963095	Symbol	best_fit [ - 1 ] . o_size		4962847						
ANR	4963096	Symbol	aligned_min_size		4962847						
ANR	4963097	Symbol	best_fit_size		4962847						
ANR	4963098	Symbol	free_size		4962847						
ANR	4963099	Symbol	* pfree		4962847						
ANR	4963100	Symbol	aligned_size		4962847						
ANR	4963101	Symbol	best_fit		4962847						
ANR	4963102	Symbol	NULL		4962847						
ANR	4963103	Symbol	pfree [ - 1 ] . o_size		4962847						
ANR	4963104	Symbol	* ppfprev		4962847						
ANR	4963105	Symbol	* ( obj_header_t * * ) best_fit		4962847						
ANR	4963106	Symbol	mem -> largest_free_size		4962847						
ANR	4963107	Symbol	best_fit_prev		4962847						
ANR	4963108	Symbol	ppfprev		4962847						
ANR	4963109	Symbol	size		4962847						
ANR	4963110	Symbol	largest_size		4962847						
ANR	4963111	Symbol	* mem		4962847						
ANR	4963112	Function	alloc_obj	1896:0:60924:65739							
ANR	4963113	FunctionDef	"alloc_obj (gs_ref_memory_t * mem , ulong lsize , gs_memory_type_ptr_t pstype , alloc_flags_t flags , client_name_t cname)"		4963112	0					
ANR	4963114	CompoundStatement		1899:0:61072:65739	4963112	0					
ANR	4963115	IdentifierDeclStatement	obj_header_t * ptr ;	1900:4:61078:61095	4963112	0	True				
ANR	4963116	IdentifierDecl	* ptr		4963112	0					
ANR	4963117	IdentifierDeclType	obj_header_t *		4963112	0					
ANR	4963118	Identifier	ptr		4963112	1					
ANR	4963119	IfStatement	if ( lsize >= mem -> large_size || ( flags & ALLOC_IMMOVABLE ) )		4963112	1					
ANR	4963120	Condition	lsize >= mem -> large_size || ( flags & ALLOC_IMMOVABLE )	1902:8:61106:61158	4963112	0	True				
ANR	4963121	OrExpression	lsize >= mem -> large_size || ( flags & ALLOC_IMMOVABLE )		4963112	0		||			
ANR	4963122	RelationalExpression	lsize >= mem -> large_size		4963112	0		>=			
ANR	4963123	Identifier	lsize		4963112	0					
ANR	4963124	PtrMemberAccess	mem -> large_size		4963112	1					
ANR	4963125	Identifier	mem		4963112	0					
ANR	4963126	Identifier	large_size		4963112	1					
ANR	4963127	BitAndExpression	flags & ALLOC_IMMOVABLE		4963112	1		&			
ANR	4963128	Identifier	flags		4963112	0					
ANR	4963129	Identifier	ALLOC_IMMOVABLE		4963112	1					
ANR	4963130	CompoundStatement		12:8:356:497	4963112	1					
ANR	4963131	IdentifierDeclStatement	ulong asize = ( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t ) ;	1907:8:61315:61419	4963112	0	True				
ANR	4963132	IdentifierDecl	asize = ( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t )		4963112	0					
ANR	4963133	IdentifierDeclType	ulong		4963112	0					
ANR	4963134	Identifier	asize		4963112	1					
ANR	4963135	AssignmentExpression	asize = ( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t )		4963112	2		=			
ANR	4963136	Identifier	asize		4963112	0					
ANR	4963137	AdditiveExpression	( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t )		4963112	1		+			
ANR	4963138	BitAndExpression	( lsize + obj_align_mask ) & - obj_align_mod		4963112	0		&			
ANR	4963139	AdditiveExpression	lsize + obj_align_mask		4963112	0		+			
ANR	4963140	Identifier	lsize		4963112	0					
ANR	4963141	Identifier	obj_align_mask		4963112	1					
ANR	4963142	UnaryOperationExpression	- obj_align_mod		4963112	1					
ANR	4963143	UnaryOperator	-		4963112	0					
ANR	4963144	Identifier	obj_align_mod		4963112	1					
ANR	4963145	SizeofExpression	sizeof ( obj_header_t )		4963112	1					
ANR	4963146	Sizeof	sizeof		4963112	0					
ANR	4963147	SizeofOperand	obj_header_t		4963112	1					
ANR	4963148	IdentifierDeclStatement	"clump_t * cp = alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" ) ;"	1910:8:61429:61570	4963112	1	True				
ANR	4963149	IdentifierDecl	"* cp = alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" )"		4963112	0					
ANR	4963150	IdentifierDeclType	clump_t *		4963112	0					
ANR	4963151	Identifier	cp		4963112	1					
ANR	4963152	AssignmentExpression	"* cp = alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" )"		4963112	2		=			
ANR	4963153	Identifier	cp		4963112	0					
ANR	4963154	CallExpression	"alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" )"		4963112	1					
ANR	4963155	Callee	alloc_acquire_clump		4963112	0					
ANR	4963156	Identifier	alloc_acquire_clump		4963112	0					
ANR	4963157	ArgumentList	mem		4963112	1					
ANR	4963158	Argument	mem		4963112	0					
ANR	4963159	Identifier	mem		4963112	0					
ANR	4963160	Argument	asize + sizeof ( clump_head_t )		4963112	1					
ANR	4963161	AdditiveExpression	asize + sizeof ( clump_head_t )		4963112	0		+			
ANR	4963162	Identifier	asize		4963112	0					
ANR	4963163	SizeofExpression	sizeof ( clump_head_t )		4963112	1					
ANR	4963164	Sizeof	sizeof		4963112	0					
ANR	4963165	SizeofOperand	clump_head_t		4963112	1					
ANR	4963166	Argument	false		4963112	2					
ANR	4963167	Identifier	false		4963112	0					
ANR	4963168	Argument	"""large object clump"""		4963112	3					
ANR	4963169	PrimaryExpression	"""large object clump"""		4963112	0					
ANR	4963170	Statement	if	1914:8:61581:61582	4963112	2	True				
ANR	4963171	Statement	(	1914:11:61584:61584	4963112	3	True				
ANR	4963172	Statement	asize	1916:12:61637:61641	4963112	4	True				
ANR	4963173	Statement	>	1916:18:61643:61643	4963112	5	True				
ANR	4963174	Statement	max_uint	1916:20:61645:61652	4963112	6	True				
ANR	4963175	Statement	)	1920:12:61705:61705	4963112	7	True				
ANR	4963176	ReturnStatement	return 0 ;	1921:12:61719:61727	4963112	8	True				
ANR	4963177	PrimaryExpression	0		4963112	0					
ANR	4963178	IfStatement	if ( cp == 0 )		4963112	9					
ANR	4963179	Condition	cp == 0	1922:12:61741:61747	4963112	0	True				
ANR	4963180	EqualityExpression	cp == 0		4963112	0		==			
ANR	4963181	Identifier	cp		4963112	0					
ANR	4963182	PrimaryExpression	0		4963112	1					
ANR	4963183	ReturnStatement	return 0 ;	1923:12:61762:61770	4963112	1	True				
ANR	4963184	PrimaryExpression	0		4963112	0					
ANR	4963185	ExpressionStatement	cp -> c_alone = true	1924:8:61780:61798	4963112	10	True				
ANR	4963186	AssignmentExpression	cp -> c_alone = true		4963112	0		=			
ANR	4963187	PtrMemberAccess	cp -> c_alone		4963112	0					
ANR	4963188	Identifier	cp		4963112	0					
ANR	4963189	Identifier	c_alone		4963112	1					
ANR	4963190	Identifier	true		4963112	1					
ANR	4963191	ExpressionStatement	ptr = ( obj_header_t * ) cp -> cbot	1925:8:61808:61839	4963112	11	True				
ANR	4963192	AssignmentExpression	ptr = ( obj_header_t * ) cp -> cbot		4963112	0		=			
ANR	4963193	Identifier	ptr		4963112	0					
ANR	4963194	CastExpression	( obj_header_t * ) cp -> cbot		4963112	1					
ANR	4963195	CastTarget	obj_header_t *		4963112	0					
ANR	4963196	PtrMemberAccess	cp -> cbot		4963112	1					
ANR	4963197	Identifier	cp		4963112	0					
ANR	4963198	Identifier	cbot		4963112	1					
ANR	4963199	ExpressionStatement	cp -> cbot += asize	1926:8:61849:61866	4963112	12	True				
ANR	4963200	AssignmentExpression	cp -> cbot += asize		4963112	0		+=			
ANR	4963201	PtrMemberAccess	cp -> cbot		4963112	0					
ANR	4963202	Identifier	cp		4963112	0					
ANR	4963203	Identifier	cbot		4963112	1					
ANR	4963204	Identifier	asize		4963112	1					
ANR	4963205	ExpressionStatement	ptr -> o_pad = 0	1927:8:61876:61890	4963112	13	True				
ANR	4963206	AssignmentExpression	ptr -> o_pad = 0		4963112	0		=			
ANR	4963207	PtrMemberAccess	ptr -> o_pad		4963112	0					
ANR	4963208	Identifier	ptr		4963112	0					
ANR	4963209	Identifier	o_pad		4963112	1					
ANR	4963210	PrimaryExpression	0		4963112	1					
ANR	4963211	ExpressionStatement	ptr -> o_alone = 1	1928:8:61900:61916	4963112	14	True				
ANR	4963212	AssignmentExpression	ptr -> o_alone = 1		4963112	0		=			
ANR	4963213	PtrMemberAccess	ptr -> o_alone		4963112	0					
ANR	4963214	Identifier	ptr		4963112	0					
ANR	4963215	Identifier	o_alone		4963112	1					
ANR	4963216	PrimaryExpression	1		4963112	1					
ANR	4963217	ExpressionStatement	ptr -> o_size = lsize	1929:8:61926:61945	4963112	15	True				
ANR	4963218	AssignmentExpression	ptr -> o_size = lsize		4963112	0		=			
ANR	4963219	PtrMemberAccess	ptr -> o_size		4963112	0					
ANR	4963220	Identifier	ptr		4963112	0					
ANR	4963221	Identifier	o_size		4963112	1					
ANR	4963222	Identifier	lsize		4963112	1					
ANR	4963223	ElseStatement	else		4963112	0					
ANR	4963224	CompoundStatement		40:8:1175:1204	4963112	0					
ANR	4963225	IdentifierDeclStatement	clump_splay_walker sw ;	1935:8:62103:62124	4963112	0	True				
ANR	4963226	IdentifierDecl	sw		4963112	0					
ANR	4963227	IdentifierDeclType	clump_splay_walker		4963112	0					
ANR	4963228	Identifier	sw		4963112	1					
ANR	4963229	IdentifierDeclStatement	"clump_t * cp = clump_splay_walk_init_mid ( & sw , mem -> cc ) ;"	1936:8:62134:62187	4963112	1	True				
ANR	4963230	IdentifierDecl	"* cp = clump_splay_walk_init_mid ( & sw , mem -> cc )"		4963112	0					
ANR	4963231	IdentifierDeclType	clump_t *		4963112	0					
ANR	4963232	Identifier	cp		4963112	1					
ANR	4963233	AssignmentExpression	"* cp = clump_splay_walk_init_mid ( & sw , mem -> cc )"		4963112	2		=			
ANR	4963234	Identifier	cp		4963112	0					
ANR	4963235	CallExpression	"clump_splay_walk_init_mid ( & sw , mem -> cc )"		4963112	1					
ANR	4963236	Callee	clump_splay_walk_init_mid		4963112	0					
ANR	4963237	Identifier	clump_splay_walk_init_mid		4963112	0					
ANR	4963238	ArgumentList	& sw		4963112	1					
ANR	4963239	Argument	& sw		4963112	0					
ANR	4963240	UnaryOperationExpression	& sw		4963112	0					
ANR	4963241	UnaryOperator	&		4963112	0					
ANR	4963242	Identifier	sw		4963112	1					
ANR	4963243	Argument	mem -> cc		4963112	1					
ANR	4963244	PtrMemberAccess	mem -> cc		4963112	0					
ANR	4963245	Identifier	mem		4963112	0					
ANR	4963246	Identifier	cc		4963112	1					
ANR	4963247	IdentifierDeclStatement	uint asize = obj_size_round ( ( uint ) lsize ) ;	1937:8:62197:62238	4963112	2	True				
ANR	4963248	IdentifierDecl	asize = obj_size_round ( ( uint ) lsize )		4963112	0					
ANR	4963249	IdentifierDeclType	uint		4963112	0					
ANR	4963250	Identifier	asize		4963112	1					
ANR	4963251	AssignmentExpression	asize = obj_size_round ( ( uint ) lsize )		4963112	2		=			
ANR	4963252	Identifier	asize		4963112	0					
ANR	4963253	CallExpression	obj_size_round ( ( uint ) lsize )		4963112	1					
ANR	4963254	Callee	obj_size_round		4963112	0					
ANR	4963255	Identifier	obj_size_round		4963112	0					
ANR	4963256	ArgumentList	( uint ) lsize		4963112	1					
ANR	4963257	Argument	( uint ) lsize		4963112	0					
ANR	4963258	CastExpression	( uint ) lsize		4963112	0					
ANR	4963259	CastTarget	uint		4963112	0					
ANR	4963260	Identifier	lsize		4963112	1					
ANR	4963261	IdentifierDeclStatement	bool allocate_success = false ;	1938:8:62248:62277	4963112	3	True				
ANR	4963262	IdentifierDecl	allocate_success = false		4963112	0					
ANR	4963263	IdentifierDeclType	bool		4963112	0					
ANR	4963264	Identifier	allocate_success		4963112	1					
ANR	4963265	AssignmentExpression	allocate_success = false		4963112	2		=			
ANR	4963266	Identifier	false		4963112	0					
ANR	4963267	Identifier	false		4963112	1					
ANR	4963268	IfStatement	if ( lsize > max_freelist_size && ( flags & ALLOC_DIRECT ) )		4963112	4					
ANR	4963269	Condition	lsize > max_freelist_size && ( flags & ALLOC_DIRECT )	1940:12:62292:62342	4963112	0	True				
ANR	4963270	AndExpression	lsize > max_freelist_size && ( flags & ALLOC_DIRECT )		4963112	0		&&			
ANR	4963271	RelationalExpression	lsize > max_freelist_size		4963112	0		>			
ANR	4963272	Identifier	lsize		4963112	0					
ANR	4963273	Identifier	max_freelist_size		4963112	1					
ANR	4963274	BitAndExpression	flags & ALLOC_DIRECT		4963112	1		&			
ANR	4963275	Identifier	flags		4963112	0					
ANR	4963276	Identifier	ALLOC_DIRECT		4963112	1					
ANR	4963277	CompoundStatement		42:65:1272:1272	4963112	1					
ANR	4963278	IfStatement	"if ( ( ptr = large_freelist_alloc ( mem , lsize ) ) != 0 )"		4963112	0					
ANR	4963279	Condition	"( ptr = large_freelist_alloc ( mem , lsize ) ) != 0"	1942:16:62430:62474	4963112	0	True				
ANR	4963280	EqualityExpression	"( ptr = large_freelist_alloc ( mem , lsize ) ) != 0"		4963112	0		!=			
ANR	4963281	AssignmentExpression	"ptr = large_freelist_alloc ( mem , lsize )"		4963112	0		=			
ANR	4963282	Identifier	ptr		4963112	0					
ANR	4963283	CallExpression	"large_freelist_alloc ( mem , lsize )"		4963112	1					
ANR	4963284	Callee	large_freelist_alloc		4963112	0					
ANR	4963285	Identifier	large_freelist_alloc		4963112	0					
ANR	4963286	ArgumentList	mem		4963112	1					
ANR	4963287	Argument	mem		4963112	0					
ANR	4963288	Identifier	mem		4963112	0					
ANR	4963289	Argument	lsize		4963112	1					
ANR	4963290	Identifier	lsize		4963112	0					
ANR	4963291	PrimaryExpression	0		4963112	1					
ANR	4963292	CompoundStatement		44:63:1404:1404	4963112	1					
ANR	4963293	ExpressionStatement	-- ptr	1943:16:62495:62500	4963112	0	True				
ANR	4963294	UnaryExpression	-- ptr		4963112	0					
ANR	4963295	IncDec	--		4963112	0					
ANR	4963296	Identifier	ptr		4963112	1					
ANR	4963297	GotoStatement	goto done ;	1944:16:62547:62556	4963112	1	True				
ANR	4963298	Identifier	done		4963112	0					
ANR	4963299	IfStatement	if ( cp == 0 )		4963112	5					
ANR	4963300	Condition	cp == 0	1948:12:62595:62601	4963112	0	True				
ANR	4963301	EqualityExpression	cp == 0		4963112	0		==			
ANR	4963302	Identifier	cp		4963112	0					
ANR	4963303	PrimaryExpression	0		4963112	1					
ANR	4963304	CompoundStatement		50:21:1531:1531	4963112	1					
ANR	4963305	ExpressionStatement	"mem -> cc = clump_splay_walk_init ( & sw , mem )"	1950:12:62661:62702	4963112	0	True				
ANR	4963306	AssignmentExpression	"mem -> cc = clump_splay_walk_init ( & sw , mem )"		4963112	0		=			
ANR	4963307	PtrMemberAccess	mem -> cc		4963112	0					
ANR	4963308	Identifier	mem		4963112	0					
ANR	4963309	Identifier	cc		4963112	1					
ANR	4963310	CallExpression	"clump_splay_walk_init ( & sw , mem )"		4963112	1					
ANR	4963311	Callee	clump_splay_walk_init		4963112	0					
ANR	4963312	Identifier	clump_splay_walk_init		4963112	0					
ANR	4963313	ArgumentList	& sw		4963112	1					
ANR	4963314	Argument	& sw		4963112	0					
ANR	4963315	UnaryOperationExpression	& sw		4963112	0					
ANR	4963316	UnaryOperator	&		4963112	0					
ANR	4963317	Identifier	sw		4963112	1					
ANR	4963318	Argument	mem		4963112	1					
ANR	4963319	Identifier	mem		4963112	0					
ANR	4963320	ExpressionStatement	alloc_open_clump ( mem )	1951:12:62716:62737	4963112	1	True				
ANR	4963321	CallExpression	alloc_open_clump ( mem )		4963112	0					
ANR	4963322	Callee	alloc_open_clump		4963112	0					
ANR	4963323	Identifier	alloc_open_clump		4963112	0					
ANR	4963324	ArgumentList	mem		4963112	1					
ANR	4963325	Argument	mem		4963112	0					
ANR	4963326	Identifier	mem		4963112	0					
ANR	4963327	Statement	define	1954:1:62751:62756	4963112	6	True				
ANR	4963328	Statement	CAN_ALLOC_AT_END	1954:8:62758:62773	4963112	7	True				
ANR	4963329	Statement	(	1954:24:62774:62774	4963112	8	True				
ANR	4963330	Statement	cp	1954:25:62775:62776	4963112	9	True				
ANR	4963331	Statement	)	1954:27:62777:62777	4963112	10	True				
ANR	4963332	Statement	(	1955:2:62782:62782	4963112	11	True				
ANR	4963333	Statement	(	1955:3:62783:62783	4963112	12	True				
ANR	4963334	Statement	cp	1955:4:62784:62785	4963112	13	True				
ANR	4963335	Statement	)	1955:6:62786:62786	4963112	14	True				
ANR	4963336	Statement	&&	1955:8:62788:62789	4963112	15	True				
ANR	4963337	Statement	!	1955:11:62791:62791	4963112	16	True				
ANR	4963338	Statement	(	1955:12:62792:62792	4963112	17	True				
ANR	4963339	Statement	(	1955:13:62793:62793	4963112	18	True				
ANR	4963340	Statement	cp	1955:14:62794:62795	4963112	19	True				
ANR	4963341	Statement	)	1955:16:62796:62796	4963112	20	True				
ANR	4963342	Statement	->	1955:17:62797:62798	4963112	21	True				
ANR	4963343	Statement	c_alone	1955:19:62799:62805	4963112	22	True				
ANR	4963344	Statement	)	1955:26:62806:62806	4963112	23	True				
ANR	4963345	Statement	&&	1955:28:62808:62809	4963112	24	True				
ANR	4963346	Statement	(	1955:31:62811:62811	4963112	25	True				
ANR	4963347	Statement	cp	1955:32:62812:62813	4963112	26	True				
ANR	4963348	Statement	)	1955:34:62814:62814	4963112	27	True				
ANR	4963349	Statement	->	1955:35:62815:62816	4963112	28	True				
ANR	4963350	Statement	ctop	1955:37:62817:62820	4963112	29	True				
ANR	4963351	Statement	-	1955:42:62822:62822	4963112	30	True				
ANR	4963352	Statement	(	1955:44:62824:62824	4963112	31	True				
ANR	4963353	Statement	byte	1955:45:62825:62828	4963112	32	True				
ANR	4963354	Statement	*	1955:50:62830:62830	4963112	33	True				
ANR	4963355	Statement	)	1955:51:62831:62831	4963112	34	True				
ANR	4963356	Statement	(	1955:53:62833:62833	4963112	35	True				
ANR	4963357	Statement	ptr	1955:54:62834:62836	4963112	36	True				
ANR	4963358	Statement	=	1955:58:62838:62838	4963112	37	True				
ANR	4963359	Statement	(	1955:60:62840:62840	4963112	38	True				
ANR	4963360	Statement	obj_header_t	1955:61:62841:62852	4963112	39	True				
ANR	4963361	Statement	*	1955:74:62854:62854	4963112	40	True				
ANR	4963362	Statement	)	1955:75:62855:62855	4963112	41	True				
ANR	4963363	Statement	(	1955:77:62857:62857	4963112	42	True				
ANR	4963364	Statement	cp	1955:78:62858:62859	4963112	43	True				
ANR	4963365	Statement	)	1955:80:62860:62860	4963112	44	True				
ANR	4963366	Statement	->	1955:81:62861:62862	4963112	45	True				
ANR	4963367	Statement	cbot	1955:83:62863:62866	4963112	46	True				
ANR	4963368	Statement	)	1955:87:62867:62867	4963112	47	True				
ANR	4963369	Statement	>	1956:3:62873:62873	4963112	48	True				
ANR	4963370	Statement	asize	1956:5:62875:62879	4963112	49	True				
ANR	4963371	Statement	+	1956:11:62881:62881	4963112	50	True				
ANR	4963372	Statement	sizeof	1956:13:62883:62888	4963112	51	True				
ANR	4963373	Statement	(	1956:19:62889:62889	4963112	52	True				
ANR	4963374	Statement	obj_header_t	1956:20:62890:62901	4963112	53	True				
ANR	4963375	Statement	)	1956:32:62902:62902	4963112	54	True				
ANR	4963376	Statement	)	1956:33:62903:62903	4963112	55	True				
ANR	4963377	DoStatement	do		4963112	56					
ANR	4963378	CompoundStatement		60:11:1844:1844	4963112	0					
ANR	4963379	IfStatement	if ( CAN_ALLOC_AT_END ( mem -> cc ) )		4963112	0					
ANR	4963380	Condition	CAN_ALLOC_AT_END ( mem -> cc )	1959:16:62935:62959	4963112	0	True				
ANR	4963381	CallExpression	CAN_ALLOC_AT_END ( mem -> cc )		4963112	0					
ANR	4963382	Callee	CAN_ALLOC_AT_END		4963112	0					
ANR	4963383	Identifier	CAN_ALLOC_AT_END		4963112	0					
ANR	4963384	ArgumentList	mem -> cc		4963112	1					
ANR	4963385	Argument	mem -> cc		4963112	0					
ANR	4963386	PtrMemberAccess	mem -> cc		4963112	0					
ANR	4963387	Identifier	mem		4963112	0					
ANR	4963388	Identifier	cc		4963112	1					
ANR	4963389	CompoundStatement		61:43:1889:1889	4963112	1					
ANR	4963390	ExpressionStatement	allocate_success = true	1960:16:62980:63003	4963112	0	True				
ANR	4963391	AssignmentExpression	allocate_success = true		4963112	0		=			
ANR	4963392	Identifier	allocate_success		4963112	0					
ANR	4963393	Identifier	true		4963112	1					
ANR	4963394	BreakStatement	break ;	1961:16:63021:63026	4963112	1	True				
ANR	4963395	ElseStatement	else		4963112	0					
ANR	4963396	IfStatement	if ( mem -> is_controlled )		4963112	0					
ANR	4963397	Condition	mem -> is_controlled	1962:23:63051:63068	4963112	0	True				
ANR	4963398	PtrMemberAccess	mem -> is_controlled		4963112	0					
ANR	4963399	Identifier	mem		4963112	0					
ANR	4963400	Identifier	is_controlled		4963112	1					
ANR	4963401	CompoundStatement		64:43:1998:1998	4963112	1					
ANR	4963402	ExpressionStatement	gs_consolidate_free ( ( gs_memory_t * ) mem )	1964:16:63141:63180	4963112	0	True				
ANR	4963403	CallExpression	gs_consolidate_free ( ( gs_memory_t * ) mem )		4963112	0					
ANR	4963404	Callee	gs_consolidate_free		4963112	0					
ANR	4963405	Identifier	gs_consolidate_free		4963112	0					
ANR	4963406	ArgumentList	( gs_memory_t * ) mem		4963112	1					
ANR	4963407	Argument	( gs_memory_t * ) mem		4963112	0					
ANR	4963408	CastExpression	( gs_memory_t * ) mem		4963112	0					
ANR	4963409	CastTarget	gs_memory_t *		4963112	0					
ANR	4963410	Identifier	mem		4963112	1					
ANR	4963411	IfStatement	if ( CAN_ALLOC_AT_END ( mem -> cc ) )		4963112	1					
ANR	4963412	Condition	CAN_ALLOC_AT_END ( mem -> cc )	1965:20:63202:63226	4963112	0	True				
ANR	4963413	CallExpression	CAN_ALLOC_AT_END ( mem -> cc )		4963112	0					
ANR	4963414	Callee	CAN_ALLOC_AT_END		4963112	0					
ANR	4963415	Identifier	CAN_ALLOC_AT_END		4963112	0					
ANR	4963416	ArgumentList	mem -> cc		4963112	1					
ANR	4963417	Argument	mem -> cc		4963112	0					
ANR	4963418	PtrMemberAccess	mem -> cc		4963112	0					
ANR	4963419	Identifier	mem		4963112	0					
ANR	4963420	Identifier	cc		4963112	1					
ANR	4963421	CompoundStatement		67:47:2156:2156	4963112	1					
ANR	4963422	ExpressionStatement	allocate_success = true	1966:20:63251:63274	4963112	0	True				
ANR	4963423	AssignmentExpression	allocate_success = true		4963112	0		=			
ANR	4963424	Identifier	allocate_success		4963112	0					
ANR	4963425	Identifier	true		4963112	1					
ANR	4963426	BreakStatement	break ;	1967:20:63296:63301	4963112	1	True				
ANR	4963427	ExpressionStatement	cp = clump_splay_walk_fwd ( & sw )	1971:12:63399:63429	4963112	1	True				
ANR	4963428	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )		4963112	0		=			
ANR	4963429	Identifier	cp		4963112	0					
ANR	4963430	CallExpression	clump_splay_walk_fwd ( & sw )		4963112	1					
ANR	4963431	Callee	clump_splay_walk_fwd		4963112	0					
ANR	4963432	Identifier	clump_splay_walk_fwd		4963112	0					
ANR	4963433	ArgumentList	& sw		4963112	1					
ANR	4963434	Argument	& sw		4963112	0					
ANR	4963435	UnaryOperationExpression	& sw		4963112	0					
ANR	4963436	UnaryOperator	&		4963112	0					
ANR	4963437	Identifier	sw		4963112	1					
ANR	4963438	IfStatement	if ( cp == NULL )		4963112	2					
ANR	4963439	Condition	cp == NULL	1972:16:63447:63456	4963112	0	True				
ANR	4963440	EqualityExpression	cp == NULL		4963112	0		==			
ANR	4963441	Identifier	cp		4963112	0					
ANR	4963442	Identifier	NULL		4963112	1					
ANR	4963443	BreakStatement	break ;	1973:16:63475:63480	4963112	1	True				
ANR	4963444	ExpressionStatement	alloc_close_clump ( mem )	1975:12:63495:63517	4963112	3	True				
ANR	4963445	CallExpression	alloc_close_clump ( mem )		4963112	0					
ANR	4963446	Callee	alloc_close_clump		4963112	0					
ANR	4963447	Identifier	alloc_close_clump		4963112	0					
ANR	4963448	ArgumentList	mem		4963112	1					
ANR	4963449	Argument	mem		4963112	0					
ANR	4963450	Identifier	mem		4963112	0					
ANR	4963451	ExpressionStatement	mem -> cc = cp	1976:12:63531:63543	4963112	4	True				
ANR	4963452	AssignmentExpression	mem -> cc = cp		4963112	0		=			
ANR	4963453	PtrMemberAccess	mem -> cc		4963112	0					
ANR	4963454	Identifier	mem		4963112	0					
ANR	4963455	Identifier	cc		4963112	1					
ANR	4963456	Identifier	cp		4963112	1					
ANR	4963457	ExpressionStatement	alloc_open_clump ( mem )	1977:12:63557:63578	4963112	5	True				
ANR	4963458	CallExpression	alloc_open_clump ( mem )		4963112	0					
ANR	4963459	Callee	alloc_open_clump		4963112	0					
ANR	4963460	Identifier	alloc_open_clump		4963112	0					
ANR	4963461	ArgumentList	mem		4963112	1					
ANR	4963462	Argument	mem		4963112	0					
ANR	4963463	Identifier	mem		4963112	0					
ANR	4963464	Condition	1	1979:15:63605:63605	4963112	1	True				
ANR	4963465	PrimaryExpression	1		4963112	0					
ANR	4963466	IfStatement	if ( ! allocate_success )		4963112	57					
ANR	4963467	Condition	! allocate_success	1982:12:63661:63677	4963112	0	True				
ANR	4963468	UnaryOperationExpression	! allocate_success		4963112	0					
ANR	4963469	UnaryOperator	!		4963112	0					
ANR	4963470	Identifier	allocate_success		4963112	1					
ANR	4963471	CompoundStatement		84:31:2607:2607	4963112	1					
ANR	4963472	IfStatement	if ( ! mem -> is_controlled )		4963112	0					
ANR	4963473	Condition	! mem -> is_controlled	1988:16:63943:63961	4963112	0	True				
ANR	4963474	UnaryOperationExpression	! mem -> is_controlled		4963112	0					
ANR	4963475	UnaryOperator	!		4963112	0					
ANR	4963476	PtrMemberAccess	mem -> is_controlled		4963112	1					
ANR	4963477	Identifier	mem		4963112	0					
ANR	4963478	Identifier	is_controlled		4963112	1					
ANR	4963479	CompoundStatement		91:16:2946:2957	4963112	1					
ANR	4963480	IdentifierDeclStatement	clump_t * cp ;	1989:16:64019:64030	4963112	0	True				
ANR	4963481	IdentifierDecl	* cp		4963112	0					
ANR	4963482	IdentifierDeclType	clump_t *		4963112	0					
ANR	4963483	Identifier	cp		4963112	1					
ANR	4963484	ExpressionStatement	alloc_close_clump ( mem )	1991:16:64049:64071	4963112	1	True				
ANR	4963485	CallExpression	alloc_close_clump ( mem )		4963112	0					
ANR	4963486	Callee	alloc_close_clump		4963112	0					
ANR	4963487	Identifier	alloc_close_clump		4963112	0					
ANR	4963488	ArgumentList	mem		4963112	1					
ANR	4963489	Argument	mem		4963112	0					
ANR	4963490	Identifier	mem		4963112	0					
ANR	4963491	ForStatement	"for ( cp = clump_splay_walk_init_mid ( & sw , cp_orig ) ; cp != NULL ; cp = clump_splay_walk_fwd ( & sw ) )"		4963112	2					
ANR	4963492	ForInit	"cp = clump_splay_walk_init_mid ( & sw , cp_orig ) ;"	1992:21:64094:64138	4963112	0	True				
ANR	4963493	AssignmentExpression	"cp = clump_splay_walk_init_mid ( & sw , cp_orig )"		4963112	0		=			
ANR	4963494	Identifier	cp		4963112	0					
ANR	4963495	CallExpression	"clump_splay_walk_init_mid ( & sw , cp_orig )"		4963112	1					
ANR	4963496	Callee	clump_splay_walk_init_mid		4963112	0					
ANR	4963497	Identifier	clump_splay_walk_init_mid		4963112	0					
ANR	4963498	ArgumentList	& sw		4963112	1					
ANR	4963499	Argument	& sw		4963112	0					
ANR	4963500	UnaryOperationExpression	& sw		4963112	0					
ANR	4963501	UnaryOperator	&		4963112	0					
ANR	4963502	Identifier	sw		4963112	1					
ANR	4963503	Argument	cp_orig		4963112	1					
ANR	4963504	Identifier	cp_orig		4963112	0					
ANR	4963505	Condition	cp != NULL	1992:67:64140:64149	4963112	1	True				
ANR	4963506	EqualityExpression	cp != NULL		4963112	0		!=			
ANR	4963507	Identifier	cp		4963112	0					
ANR	4963508	Identifier	NULL		4963112	1					
ANR	4963509	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	1992:79:64152:64181	4963112	2	True	=			
ANR	4963510	Identifier	cp		4963112	0					
ANR	4963511	CallExpression	clump_splay_walk_fwd ( & sw )		4963112	1					
ANR	4963512	Callee	clump_splay_walk_fwd		4963112	0					
ANR	4963513	Identifier	clump_splay_walk_fwd		4963112	0					
ANR	4963514	ArgumentList	& sw		4963112	1					
ANR	4963515	Argument	& sw		4963112	0					
ANR	4963516	UnaryOperationExpression	& sw		4963112	0					
ANR	4963517	UnaryOperator	&		4963112	0					
ANR	4963518	Identifier	sw		4963112	1					
ANR	4963519	CompoundStatement		95:16:3127:3127	4963112	3					
ANR	4963520	ExpressionStatement	"consolidate_clump_free ( cp , mem )"	1994:20:64222:64253	4963112	0	True				
ANR	4963521	CallExpression	"consolidate_clump_free ( cp , mem )"		4963112	0					
ANR	4963522	Callee	consolidate_clump_free		4963112	0					
ANR	4963523	Identifier	consolidate_clump_free		4963112	0					
ANR	4963524	ArgumentList	cp		4963112	1					
ANR	4963525	Argument	cp		4963112	0					
ANR	4963526	Identifier	cp		4963112	0					
ANR	4963527	Argument	mem		4963112	1					
ANR	4963528	Identifier	mem		4963112	0					
ANR	4963529	IfStatement	if ( CAN_ALLOC_AT_END ( cp ) )		4963112	1					
ANR	4963530	Condition	CAN_ALLOC_AT_END ( cp )	1995:24:64279:64298	4963112	0	True				
ANR	4963531	CallExpression	CAN_ALLOC_AT_END ( cp )		4963112	0					
ANR	4963532	Callee	CAN_ALLOC_AT_END		4963112	0					
ANR	4963533	Identifier	CAN_ALLOC_AT_END		4963112	0					
ANR	4963534	ArgumentList	cp		4963112	1					
ANR	4963535	Argument	cp		4963112	0					
ANR	4963536	Identifier	cp		4963112	0					
ANR	4963537	CompoundStatement		97:46:3228:3228	4963112	1					
ANR	4963538	ExpressionStatement	mem -> cc = cp	1996:24:64327:64339	4963112	0	True				
ANR	4963539	AssignmentExpression	mem -> cc = cp		4963112	0		=			
ANR	4963540	PtrMemberAccess	mem -> cc		4963112	0					
ANR	4963541	Identifier	mem		4963112	0					
ANR	4963542	Identifier	cc		4963112	1					
ANR	4963543	Identifier	cp		4963112	1					
ANR	4963544	ExpressionStatement	alloc_open_clump ( mem )	1997:24:64365:64386	4963112	1	True				
ANR	4963545	CallExpression	alloc_open_clump ( mem )		4963112	0					
ANR	4963546	Callee	alloc_open_clump		4963112	0					
ANR	4963547	Identifier	alloc_open_clump		4963112	0					
ANR	4963548	ArgumentList	mem		4963112	1					
ANR	4963549	Argument	mem		4963112	0					
ANR	4963550	Identifier	mem		4963112	0					
ANR	4963551	ExpressionStatement	allocate_success = true	1998:24:64412:64435	4963112	2	True				
ANR	4963552	AssignmentExpression	allocate_success = true		4963112	0		=			
ANR	4963553	Identifier	allocate_success		4963112	0					
ANR	4963554	Identifier	true		4963112	1					
ANR	4963555	BreakStatement	break ;	1999:24:64461:64466	4963112	3	True				
ANR	4963556	Statement	undef	2006:1:64541:64545	4963112	58	True				
ANR	4963557	Statement	CAN_ALLOC_AT_END	2006:7:64547:64562	4963112	59	True				
ANR	4963558	IfStatement	if ( ! allocate_success )		4963112	60					
ANR	4963559	Condition	! allocate_success	2008:12:64577:64593	4963112	0	True				
ANR	4963560	UnaryOperationExpression	! allocate_success		4963112	0					
ANR	4963561	UnaryOperator	!		4963112	0					
ANR	4963562	Identifier	allocate_success		4963112	1					
ANR	4963563	CompoundStatement		112:12:3574:3657	4963112	1					
ANR	4963564	IdentifierDeclStatement	"clump_t * cp = alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" ) ;"	2010:12:64647:64730	4963112	0	True				
ANR	4963565	IdentifierDecl	"* cp = alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" )"		4963112	0					
ANR	4963566	IdentifierDeclType	clump_t *		4963112	0					
ANR	4963567	Identifier	cp		4963112	1					
ANR	4963568	AssignmentExpression	"* cp = alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" )"		4963112	2		=			
ANR	4963569	Identifier	cp		4963112	0					
ANR	4963570	CallExpression	"alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" )"		4963112	1					
ANR	4963571	Callee	alloc_add_clump		4963112	0					
ANR	4963572	Identifier	alloc_add_clump		4963112	0					
ANR	4963573	ArgumentList	mem		4963112	1					
ANR	4963574	Argument	mem		4963112	0					
ANR	4963575	Identifier	mem		4963112	0					
ANR	4963576	Argument	( ulong ) mem -> clump_size		4963112	1					
ANR	4963577	CastExpression	( ulong ) mem -> clump_size		4963112	0					
ANR	4963578	CastTarget	ulong		4963112	0					
ANR	4963579	PtrMemberAccess	mem -> clump_size		4963112	1					
ANR	4963580	Identifier	mem		4963112	0					
ANR	4963581	Identifier	clump_size		4963112	1					
ANR	4963582	Argument	"""clump"""		4963112	2					
ANR	4963583	PrimaryExpression	"""clump"""		4963112	0					
ANR	4963584	IfStatement	if ( cp )		4963112	1					
ANR	4963585	Condition	cp	2013:16:64749:64750	4963112	0	True				
ANR	4963586	Identifier	cp		4963112	0					
ANR	4963587	CompoundStatement		115:20:3680:3680	4963112	1					
ANR	4963588	ExpressionStatement	ptr = ( obj_header_t * ) cp -> cbot	2015:16:64807:64837	4963112	0	True				
ANR	4963589	AssignmentExpression	ptr = ( obj_header_t * ) cp -> cbot		4963112	0		=			
ANR	4963590	Identifier	ptr		4963112	0					
ANR	4963591	CastExpression	( obj_header_t * ) cp -> cbot		4963112	1					
ANR	4963592	CastTarget	obj_header_t *		4963112	0					
ANR	4963593	PtrMemberAccess	cp -> cbot		4963112	1					
ANR	4963594	Identifier	cp		4963112	0					
ANR	4963595	Identifier	cbot		4963112	1					
ANR	4963596	ExpressionStatement	allocate_success = true	2016:16:64855:64878	4963112	1	True				
ANR	4963597	AssignmentExpression	allocate_success = true		4963112	0		=			
ANR	4963598	Identifier	allocate_success		4963112	0					
ANR	4963599	Identifier	true		4963112	1					
ANR	4963600	IfStatement	if ( allocate_success )		4963112	61					
ANR	4963601	Condition	allocate_success	2026:12:65207:65222	4963112	0	True				
ANR	4963602	Identifier	allocate_success		4963112	0					
ANR	4963603	ExpressionStatement	mem -> cc -> cbot = ( byte * ) ptr + asize	2027:12:65237:65273	4963112	1	True				
ANR	4963604	AssignmentExpression	mem -> cc -> cbot = ( byte * ) ptr + asize		4963112	0		=			
ANR	4963605	PtrMemberAccess	mem -> cc -> cbot		4963112	0					
ANR	4963606	PtrMemberAccess	mem -> cc		4963112	0					
ANR	4963607	Identifier	mem		4963112	0					
ANR	4963608	Identifier	cc		4963112	1					
ANR	4963609	Identifier	cbot		4963112	1					
ANR	4963610	AdditiveExpression	( byte * ) ptr + asize		4963112	1		+			
ANR	4963611	CastExpression	( byte * ) ptr		4963112	0					
ANR	4963612	CastTarget	byte *		4963112	0					
ANR	4963613	Identifier	ptr		4963112	1					
ANR	4963614	Identifier	asize		4963112	1					
ANR	4963615	ElseStatement	else		4963112	0					
ANR	4963616	IfStatement	"if ( ! mem -> is_controlled || ( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0 )"		4963112	0					
ANR	4963617	Condition	"! mem -> is_controlled || ( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0"	2028:17:65292:65379	4963112	0	True				
ANR	4963618	OrExpression	"! mem -> is_controlled || ( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0"		4963112	0		||			
ANR	4963619	UnaryOperationExpression	! mem -> is_controlled		4963112	0					
ANR	4963620	UnaryOperator	!		4963112	0					
ANR	4963621	PtrMemberAccess	mem -> is_controlled		4963112	1					
ANR	4963622	Identifier	mem		4963112	0					
ANR	4963623	Identifier	is_controlled		4963112	1					
ANR	4963624	EqualityExpression	"( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0"		4963112	1		==			
ANR	4963625	AssignmentExpression	"ptr = scavenge_low_free ( mem , ( uint ) lsize )"		4963112	0		=			
ANR	4963626	Identifier	ptr		4963112	0					
ANR	4963627	CallExpression	"scavenge_low_free ( mem , ( uint ) lsize )"		4963112	1					
ANR	4963628	Callee	scavenge_low_free		4963112	0					
ANR	4963629	Identifier	scavenge_low_free		4963112	0					
ANR	4963630	ArgumentList	mem		4963112	1					
ANR	4963631	Argument	mem		4963112	0					
ANR	4963632	Identifier	mem		4963112	0					
ANR	4963633	Argument	( uint ) lsize		4963112	1					
ANR	4963634	CastExpression	( uint ) lsize		4963112	0					
ANR	4963635	CastTarget	uint		4963112	0					
ANR	4963636	Identifier	lsize		4963112	1					
ANR	4963637	PrimaryExpression	0		4963112	1					
ANR	4963638	ReturnStatement	return 0 ;	2030:12:65394:65402	4963112	1	True				
ANR	4963639	PrimaryExpression	0		4963112	0					
ANR	4963640	ExpressionStatement	ptr -> o_pad = 0	2031:8:65436:65450	4963112	62	True				
ANR	4963641	AssignmentExpression	ptr -> o_pad = 0		4963112	0		=			
ANR	4963642	PtrMemberAccess	ptr -> o_pad		4963112	0					
ANR	4963643	Identifier	ptr		4963112	0					
ANR	4963644	Identifier	o_pad		4963112	1					
ANR	4963645	PrimaryExpression	0		4963112	1					
ANR	4963646	ExpressionStatement	ptr -> o_alone = 0	2032:8:65460:65476	4963112	63	True				
ANR	4963647	AssignmentExpression	ptr -> o_alone = 0		4963112	0		=			
ANR	4963648	PtrMemberAccess	ptr -> o_alone		4963112	0					
ANR	4963649	Identifier	ptr		4963112	0					
ANR	4963650	Identifier	o_alone		4963112	1					
ANR	4963651	PrimaryExpression	0		4963112	1					
ANR	4963652	ExpressionStatement	ptr -> o_size = ( uint ) lsize	2033:8:65486:65512	4963112	64	True				
ANR	4963653	AssignmentExpression	ptr -> o_size = ( uint ) lsize		4963112	0		=			
ANR	4963654	PtrMemberAccess	ptr -> o_size		4963112	0					
ANR	4963655	Identifier	ptr		4963112	0					
ANR	4963656	Identifier	o_size		4963112	1					
ANR	4963657	CastExpression	( uint ) lsize		4963112	1					
ANR	4963658	CastTarget	uint		4963112	0					
ANR	4963659	Identifier	lsize		4963112	1					
ANR	4963660	Label	done :	2035:0:65520:65524	4963112	2	True				
ANR	4963661	Identifier	done		4963112	0					
ANR	4963662	ExpressionStatement	ptr -> o_type = pstype	2036:4:65530:65550	4963112	3	True				
ANR	4963663	AssignmentExpression	ptr -> o_type = pstype		4963112	0		=			
ANR	4963664	PtrMemberAccess	ptr -> o_type		4963112	0					
ANR	4963665	Identifier	ptr		4963112	0					
ANR	4963666	Identifier	o_type		4963112	1					
ANR	4963667	Identifier	pstype		4963112	1					
ANR	4963668	Statement	if	2037:4:65556:65557	4963112	4	True				
ANR	4963669	Statement	IGC_PTR_STABILITY_CHECK	2037:7:65559:65581	4963112	5	True				
ANR	4963670	ExpressionStatement	ptr -> d . o . space_id = mem -> space_id	2038:8:65591:65624	4963112	6	True				
ANR	4963671	AssignmentExpression	ptr -> d . o . space_id = mem -> space_id		4963112	0		=			
ANR	4963672	MemberAccess	ptr -> d . o . space_id		4963112	0					
ANR	4963673	MemberAccess	ptr -> d . o		4963112	0					
ANR	4963674	PtrMemberAccess	ptr -> d		4963112	0					
ANR	4963675	Identifier	ptr		4963112	0					
ANR	4963676	Identifier	d		4963112	1					
ANR	4963677	Identifier	o		4963112	1					
ANR	4963678	Identifier	space_id		4963112	1					
ANR	4963679	PtrMemberAccess	mem -> space_id		4963112	1					
ANR	4963680	Identifier	mem		4963112	0					
ANR	4963681	Identifier	space_id		4963112	1					
ANR	4963682	Statement	endif	2039:4:65630:65634	4963112	7	True				
ANR	4963683	ExpressionStatement	ptr ++	2040:4:65640:65645	4963112	8	True				
ANR	4963684	PostIncDecOperationExpression	ptr ++		4963112	0					
ANR	4963685	Identifier	ptr		4963112	0					
ANR	4963686	IncDec	++		4963112	1					
ANR	4963687	ExpressionStatement	ASSIGN_HDR_ID ( ptr )	2041:4:65651:65669	4963112	9	True				
ANR	4963688	CallExpression	ASSIGN_HDR_ID ( ptr )		4963112	0					
ANR	4963689	Callee	ASSIGN_HDR_ID		4963112	0					
ANR	4963690	Identifier	ASSIGN_HDR_ID		4963112	0					
ANR	4963691	ArgumentList	ptr		4963112	1					
ANR	4963692	Argument	ptr		4963112	0					
ANR	4963693	Identifier	ptr		4963112	0					
ANR	4963694	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_alloc , lsize )"	2042:4:65675:65721	4963112	10	True				
ANR	4963695	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_alloc , lsize )"		4963112	0					
ANR	4963696	Callee	gs_alloc_fill		4963112	0					
ANR	4963697	Identifier	gs_alloc_fill		4963112	0					
ANR	4963698	ArgumentList	ptr		4963112	1					
ANR	4963699	Argument	ptr		4963112	0					
ANR	4963700	Identifier	ptr		4963112	0					
ANR	4963701	Argument	gs_alloc_fill_alloc		4963112	1					
ANR	4963702	Identifier	gs_alloc_fill_alloc		4963112	0					
ANR	4963703	Argument	lsize		4963112	2					
ANR	4963704	Identifier	lsize		4963112	0					
ANR	4963705	ReturnStatement	return ptr ;	2043:4:65727:65737	4963112	11	True				
ANR	4963706	Identifier	ptr		4963112	0					
ANR	4963707	ReturnType	static obj_header_t *		4963112	1					
ANR	4963708	Identifier	alloc_obj		4963112	2					
ANR	4963709	ParameterList	"gs_ref_memory_t * mem , ulong lsize , gs_memory_type_ptr_t pstype , alloc_flags_t flags , client_name_t cname"		4963112	3					
ANR	4963710	Parameter	gs_ref_memory_t * mem	1897:10:60956:60975	4963112	0	True				
ANR	4963711	ParameterType	gs_ref_memory_t *		4963112	0					
ANR	4963712	Identifier	mem		4963112	1					
ANR	4963713	Parameter	ulong lsize	1897:32:60978:60988	4963112	1	True				
ANR	4963714	ParameterType	ulong		4963112	0					
ANR	4963715	Identifier	lsize		4963112	1					
ANR	4963716	Parameter	gs_memory_type_ptr_t pstype	1897:45:60991:61017	4963112	2	True				
ANR	4963717	ParameterType	gs_memory_type_ptr_t		4963112	0					
ANR	4963718	Identifier	pstype		4963112	1					
ANR	4963719	Parameter	alloc_flags_t flags	1898:10:61030:61048	4963112	3	True				
ANR	4963720	ParameterType	alloc_flags_t		4963112	0					
ANR	4963721	Identifier	flags		4963112	1					
ANR	4963722	Parameter	client_name_t cname	1898:31:61051:61069	4963112	4	True				
ANR	4963723	ParameterType	client_name_t		4963112	0					
ANR	4963724	Identifier	cname		4963112	1					
ANR	4963725	CFGEntryNode	ENTRY		4963112		True				
ANR	4963726	CFGExitNode	EXIT		4963112		True				
ANR	4963727	Symbol	ALLOC_IMMOVABLE		4963112						
ANR	4963728	Symbol	mem -> large_size		4963112						
ANR	4963729	Symbol	& sw		4963112						
ANR	4963730	Symbol	ptr -> d		4963112						
ANR	4963731	Symbol	obj_size_round		4963112						
ANR	4963732	Symbol	pstype		4963112						
ANR	4963733	Symbol	large_freelist_alloc		4963112						
ANR	4963734	Symbol	mem -> cc		4963112						
ANR	4963735	Symbol	clump_splay_walk_init		4963112						
ANR	4963736	Symbol	* ptr		4963112						
ANR	4963737	Symbol	ptr -> d . o		4963112						
ANR	4963738	Symbol	allocate_success		4963112						
ANR	4963739	Symbol	obj_align_mod		4963112						
ANR	4963740	Symbol	mem -> is_controlled		4963112						
ANR	4963741	Symbol	NULL		4963112						
ANR	4963742	Symbol	* * mem		4963112						
ANR	4963743	Symbol	ALLOC_DIRECT		4963112						
ANR	4963744	Symbol	ptr -> o_type		4963112						
ANR	4963745	Symbol	* cp		4963112						
ANR	4963746	Symbol	max_freelist_size		4963112						
ANR	4963747	Symbol	gs_alloc_fill_alloc		4963112						
ANR	4963748	Symbol	true		4963112						
ANR	4963749	Symbol	ptr -> o_alone		4963112						
ANR	4963750	Symbol	obj_align_mask		4963112						
ANR	4963751	Symbol	* mem		4963112						
ANR	4963752	Symbol	cp_orig		4963112						
ANR	4963753	Symbol	scavenge_low_free		4963112						
ANR	4963754	Symbol	mem -> space_id		4963112						
ANR	4963755	Symbol	flags		4963112						
ANR	4963756	Symbol	cname		4963112						
ANR	4963757	Symbol	* mem -> cc		4963112						
ANR	4963758	Symbol	lsize		4963112						
ANR	4963759	Symbol	clump_splay_walk_init_mid		4963112						
ANR	4963760	Symbol	ptr -> o_pad		4963112						
ANR	4963761	Symbol	cp -> cbot		4963112						
ANR	4963762	Symbol	mem		4963112						
ANR	4963763	Symbol	mem -> clump_size		4963112						
ANR	4963764	Symbol	CAN_ALLOC_AT_END		4963112						
ANR	4963765	Symbol	sw		4963112						
ANR	4963766	Symbol	ptr -> o_size		4963112						
ANR	4963767	Symbol	clump_splay_walk_fwd		4963112						
ANR	4963768	Symbol	false		4963112						
ANR	4963769	Symbol	cp -> c_alone		4963112						
ANR	4963770	Symbol	alloc_acquire_clump		4963112						
ANR	4963771	Symbol	cp		4963112						
ANR	4963772	Symbol	asize		4963112						
ANR	4963773	Symbol	ptr		4963112						
ANR	4963774	Symbol	alloc_add_clump		4963112						
ANR	4963775	Symbol	ptr -> d . o . space_id		4963112						
ANR	4963776	Symbol	mem -> cc -> cbot		4963112						
ANR	4963777	Function	consolidate_clump_free	2051:0:65908:66952							
ANR	4963778	FunctionDef	"consolidate_clump_free (clump_t * cp , gs_ref_memory_t * mem)"		4963777	0					
ANR	4963779	CompoundStatement		2053:0:65978:66952	4963777	0					
ANR	4963780	IdentifierDeclStatement	obj_header_t * begin_free = 0 ;	2054:4:65984:66012	4963777	0	True				
ANR	4963781	IdentifierDecl	* begin_free = 0		4963777	0					
ANR	4963782	IdentifierDeclType	obj_header_t *		4963777	0					
ANR	4963783	Identifier	begin_free		4963777	1					
ANR	4963784	AssignmentExpression	* begin_free = 0		4963777	2		=			
ANR	4963785	Identifier	begin_free		4963777	0					
ANR	4963786	PrimaryExpression	0		4963777	1					
ANR	4963787	ExpressionStatement	cp -> int_freed_top = cp -> cbase	2056:4:66019:66048	4963777	1	True				
ANR	4963788	AssignmentExpression	cp -> int_freed_top = cp -> cbase		4963777	0		=			
ANR	4963789	PtrMemberAccess	cp -> int_freed_top		4963777	0					
ANR	4963790	Identifier	cp		4963777	0					
ANR	4963791	Identifier	int_freed_top		4963777	1					
ANR	4963792	PtrMemberAccess	cp -> cbase		4963777	1					
ANR	4963793	Identifier	cp		4963777	0					
ANR	4963794	Identifier	cbase		4963777	1					
ANR	4963795	Statement	SCAN_CLUMP_OBJECTS	2057:4:66087:66104	4963777	2	True				
ANR	4963796	Statement	(	2057:22:66105:66105	4963777	3	True				
ANR	4963797	Statement	cp	2057:23:66106:66107	4963777	4	True				
ANR	4963798	Statement	)	2057:25:66108:66108	4963777	5	True				
ANR	4963799	Statement	DO_ALL	2058:4:66114:66119	4963777	6	True				
ANR	4963800	IfStatement	if ( pre -> o_type == & st_free )		4963777	7					
ANR	4963801	Condition	pre -> o_type == & st_free	2059:12:66133:66155	4963777	0	True				
ANR	4963802	EqualityExpression	pre -> o_type == & st_free		4963777	0		==			
ANR	4963803	PtrMemberAccess	pre -> o_type		4963777	0					
ANR	4963804	Identifier	pre		4963777	0					
ANR	4963805	Identifier	o_type		4963777	1					
ANR	4963806	UnaryOperationExpression	& st_free		4963777	1					
ANR	4963807	UnaryOperator	&		4963777	0					
ANR	4963808	Identifier	st_free		4963777	1					
ANR	4963809	CompoundStatement		7:37:179:179	4963777	1					
ANR	4963810	IfStatement	if ( begin_free == 0 )		4963777	0					
ANR	4963811	Condition	begin_free == 0	2060:16:66176:66190	4963777	0	True				
ANR	4963812	EqualityExpression	begin_free == 0		4963777	0		==			
ANR	4963813	Identifier	begin_free		4963777	0					
ANR	4963814	PrimaryExpression	0		4963777	1					
ANR	4963815	ExpressionStatement	begin_free = pre	2061:16:66209:66225	4963777	1	True				
ANR	4963816	AssignmentExpression	begin_free = pre		4963777	0		=			
ANR	4963817	Identifier	begin_free		4963777	0					
ANR	4963818	Identifier	pre		4963777	1					
ANR	4963819	ElseStatement	else		4963777	0					
ANR	4963820	CompoundStatement		10:15:263:263	4963777	0					
ANR	4963821	IfStatement	if ( begin_free )		4963777	0					
ANR	4963822	Condition	begin_free	2063:16:66260:66269	4963777	0	True				
ANR	4963823	Identifier	begin_free		4963777	0					
ANR	4963824	ExpressionStatement	cp -> int_freed_top = ( byte * ) pre	2064:16:66288:66319	4963777	1	True				
ANR	4963825	AssignmentExpression	cp -> int_freed_top = ( byte * ) pre		4963777	0		=			
ANR	4963826	PtrMemberAccess	cp -> int_freed_top		4963777	0					
ANR	4963827	Identifier	cp		4963777	0					
ANR	4963828	Identifier	int_freed_top		4963777	1					
ANR	4963829	CastExpression	( byte * ) pre		4963777	1					
ANR	4963830	CastTarget	byte *		4963777	0					
ANR	4963831	Identifier	pre		4963777	1					
ANR	4963832	ExpressionStatement	begin_free = 0	2065:12:66374:66388	4963777	1	True				
ANR	4963833	AssignmentExpression	begin_free = 0		4963777	0		=			
ANR	4963834	Identifier	begin_free		4963777	0					
ANR	4963835	PrimaryExpression	0		4963777	1					
ANR	4963836	Statement	END_OBJECTS_SCAN	2067:4:66404:66419	4963777	8	True				
ANR	4963837	IfStatement	if ( begin_free )		4963777	9					
ANR	4963838	Condition	begin_free	2068:8:66429:66438	4963777	0	True				
ANR	4963839	Identifier	begin_free		4963777	0					
ANR	4963840	CompoundStatement		16:20:462:462	4963777	1					
ANR	4963841	ExpressionStatement	"remove_range_from_freelist ( mem , begin_free , cp -> cbot )"	2071:8:66576:66629	4963777	0	True				
ANR	4963842	CallExpression	"remove_range_from_freelist ( mem , begin_free , cp -> cbot )"		4963777	0					
ANR	4963843	Callee	remove_range_from_freelist		4963777	0					
ANR	4963844	Identifier	remove_range_from_freelist		4963777	0					
ANR	4963845	ArgumentList	mem		4963777	1					
ANR	4963846	Argument	mem		4963777	0					
ANR	4963847	Identifier	mem		4963777	0					
ANR	4963848	Argument	begin_free		4963777	1					
ANR	4963849	Identifier	begin_free		4963777	0					
ANR	4963850	Argument	cp -> cbot		4963777	2					
ANR	4963851	PtrMemberAccess	cp -> cbot		4963777	0					
ANR	4963852	Identifier	cp		4963777	0					
ANR	4963853	Identifier	cbot		4963777	1					
ANR	4963854	ExpressionStatement	"if_debug4m ( 'a' , ( const gs_memory_t * ) mem , ""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"" , ( ulong ) cp , ( ulong ) cp -> cbot , ( ulong ) begin_free , ( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free ) )"	2072:8:66639:66904	4963777	1	True				
ANR	4963855	CallExpression	"if_debug4m ( 'a' , ( const gs_memory_t * ) mem , ""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"" , ( ulong ) cp , ( ulong ) cp -> cbot , ( ulong ) begin_free , ( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free ) )"		4963777	0					
ANR	4963856	Callee	if_debug4m		4963777	0					
ANR	4963857	Identifier	if_debug4m		4963777	0					
ANR	4963858	ArgumentList	'a'		4963777	1					
ANR	4963859	Argument	'a'		4963777	0					
ANR	4963860	PrimaryExpression	'a'		4963777	0					
ANR	4963861	Argument	( const gs_memory_t * ) mem		4963777	1					
ANR	4963862	CastExpression	( const gs_memory_t * ) mem		4963777	0					
ANR	4963863	CastTarget	const gs_memory_t *		4963777	0					
ANR	4963864	Identifier	mem		4963777	1					
ANR	4963865	Argument	"""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"""		4963777	2					
ANR	4963866	PrimaryExpression	"""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"""		4963777	0					
ANR	4963867	Argument	( ulong ) cp		4963777	3					
ANR	4963868	CastExpression	( ulong ) cp		4963777	0					
ANR	4963869	CastTarget	ulong		4963777	0					
ANR	4963870	Identifier	cp		4963777	1					
ANR	4963871	Argument	( ulong ) cp -> cbot		4963777	4					
ANR	4963872	CastExpression	( ulong ) cp -> cbot		4963777	0					
ANR	4963873	CastTarget	ulong		4963777	0					
ANR	4963874	PtrMemberAccess	cp -> cbot		4963777	1					
ANR	4963875	Identifier	cp		4963777	0					
ANR	4963876	Identifier	cbot		4963777	1					
ANR	4963877	Argument	( ulong ) begin_free		4963777	5					
ANR	4963878	CastExpression	( ulong ) begin_free		4963777	0					
ANR	4963879	CastTarget	ulong		4963777	0					
ANR	4963880	Identifier	begin_free		4963777	1					
ANR	4963881	Argument	( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free )		4963777	6					
ANR	4963882	CastExpression	( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free )		4963777	0					
ANR	4963883	CastTarget	ulong		4963777	0					
ANR	4963884	AdditiveExpression	( byte * ) cp -> cbot - ( byte * ) begin_free		4963777	1		-			
ANR	4963885	CastExpression	( byte * ) cp -> cbot		4963777	0					
ANR	4963886	CastTarget	byte *		4963777	0					
ANR	4963887	PtrMemberAccess	cp -> cbot		4963777	1					
ANR	4963888	Identifier	cp		4963777	0					
ANR	4963889	Identifier	cbot		4963777	1					
ANR	4963890	CastExpression	( byte * ) begin_free		4963777	1					
ANR	4963891	CastTarget	byte *		4963777	0					
ANR	4963892	Identifier	begin_free		4963777	1					
ANR	4963893	ExpressionStatement	cp -> cbot = ( byte * ) begin_free	2076:8:66914:66944	4963777	2	True				
ANR	4963894	AssignmentExpression	cp -> cbot = ( byte * ) begin_free		4963777	0		=			
ANR	4963895	PtrMemberAccess	cp -> cbot		4963777	0					
ANR	4963896	Identifier	cp		4963777	0					
ANR	4963897	Identifier	cbot		4963777	1					
ANR	4963898	CastExpression	( byte * ) begin_free		4963777	1					
ANR	4963899	CastTarget	byte *		4963777	0					
ANR	4963900	Identifier	begin_free		4963777	1					
ANR	4963901	ReturnType	static void		4963777	1					
ANR	4963902	Identifier	consolidate_clump_free		4963777	2					
ANR	4963903	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		4963777	3					
ANR	4963904	Parameter	clump_t * cp	2052:23:65943:65953	4963777	0	True				
ANR	4963905	ParameterType	clump_t *		4963777	0					
ANR	4963906	Identifier	cp		4963777	1					
ANR	4963907	Parameter	gs_ref_memory_t * mem	2052:36:65956:65975	4963777	1	True				
ANR	4963908	ParameterType	gs_ref_memory_t *		4963777	0					
ANR	4963909	Identifier	mem		4963777	1					
ANR	4963910	CFGEntryNode	ENTRY		4963777		True				
ANR	4963911	CFGExitNode	EXIT		4963777		True				
ANR	4963912	Symbol	* cp		4963777						
ANR	4963913	Symbol	pre		4963777						
ANR	4963914	Symbol	cp -> cbot		4963777						
ANR	4963915	Symbol	mem		4963777						
ANR	4963916	Symbol	begin_free		4963777						
ANR	4963917	Symbol	pre -> o_type		4963777						
ANR	4963918	Symbol	& st_free		4963777						
ANR	4963919	Symbol	cp -> cbase		4963777						
ANR	4963920	Symbol	cp		4963777						
ANR	4963921	Symbol	cp -> int_freed_top		4963777						
ANR	4963922	Symbol	* pre		4963777						
ANR	4963923	Function	consolidate	2080:0:66955:67392							
ANR	4963924	FunctionDef	"consolidate (clump_t * cp , void * arg)"		4963923	0					
ANR	4963925	CompoundStatement		2082:0:67017:67392	4963923	0					
ANR	4963926	IdentifierDeclStatement	gs_ref_memory_t * mem = ( gs_ref_memory_t * ) arg ;	2083:4:67023:67068	4963923	0	True				
ANR	4963927	IdentifierDecl	* mem = ( gs_ref_memory_t * ) arg		4963923	0					
ANR	4963928	IdentifierDeclType	gs_ref_memory_t *		4963923	0					
ANR	4963929	Identifier	mem		4963923	1					
ANR	4963930	AssignmentExpression	* mem = ( gs_ref_memory_t * ) arg		4963923	2		=			
ANR	4963931	Identifier	mem		4963923	0					
ANR	4963932	CastExpression	( gs_ref_memory_t * ) arg		4963923	1					
ANR	4963933	CastTarget	gs_ref_memory_t *		4963923	0					
ANR	4963934	Identifier	arg		4963923	1					
ANR	4963935	ExpressionStatement	"consolidate_clump_free ( cp , mem )"	2085:4:67075:67106	4963923	1	True				
ANR	4963936	CallExpression	"consolidate_clump_free ( cp , mem )"		4963923	0					
ANR	4963937	Callee	consolidate_clump_free		4963923	0					
ANR	4963938	Identifier	consolidate_clump_free		4963923	0					
ANR	4963939	ArgumentList	cp		4963923	1					
ANR	4963940	Argument	cp		4963923	0					
ANR	4963941	Identifier	cp		4963923	0					
ANR	4963942	Argument	mem		4963923	1					
ANR	4963943	Identifier	mem		4963923	0					
ANR	4963944	IfStatement	if ( cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit )		4963923	2					
ANR	4963945	Condition	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit	2086:8:67116:67162	4963923	0	True				
ANR	4963946	AndExpression	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit		4963923	0		&&			
ANR	4963947	EqualityExpression	cp -> cbot == cp -> cbase		4963923	0		==			
ANR	4963948	PtrMemberAccess	cp -> cbot		4963923	0					
ANR	4963949	Identifier	cp		4963923	0					
ANR	4963950	Identifier	cbot		4963923	1					
ANR	4963951	PtrMemberAccess	cp -> cbase		4963923	1					
ANR	4963952	Identifier	cp		4963923	0					
ANR	4963953	Identifier	cbase		4963923	1					
ANR	4963954	EqualityExpression	cp -> ctop == cp -> climit		4963923	1		==			
ANR	4963955	PtrMemberAccess	cp -> ctop		4963923	0					
ANR	4963956	Identifier	cp		4963923	0					
ANR	4963957	Identifier	ctop		4963923	1					
ANR	4963958	PtrMemberAccess	cp -> climit		4963923	1					
ANR	4963959	Identifier	cp		4963923	0					
ANR	4963960	Identifier	climit		4963923	1					
ANR	4963961	CompoundStatement		5:57:147:147	4963923	1					
ANR	4963962	IfStatement	if ( ! mem -> is_controlled )		4963923	0					
ANR	4963963	Condition	! mem -> is_controlled	2088:12:67219:67237	4963923	0	True				
ANR	4963964	UnaryOperationExpression	! mem -> is_controlled		4963923	0					
ANR	4963965	UnaryOperator	!		4963923	0					
ANR	4963966	PtrMemberAccess	mem -> is_controlled		4963923	1					
ANR	4963967	Identifier	mem		4963923	0					
ANR	4963968	Identifier	is_controlled		4963923	1					
ANR	4963969	CompoundStatement		7:33:222:222	4963923	1					
ANR	4963970	ExpressionStatement	"alloc_free_clump ( cp , mem )"	2089:12:67254:67279	4963923	0	True				
ANR	4963971	CallExpression	"alloc_free_clump ( cp , mem )"		4963923	0					
ANR	4963972	Callee	alloc_free_clump		4963923	0					
ANR	4963973	Identifier	alloc_free_clump		4963923	0					
ANR	4963974	ArgumentList	cp		4963923	1					
ANR	4963975	Argument	cp		4963923	0					
ANR	4963976	Identifier	cp		4963923	0					
ANR	4963977	Argument	mem		4963923	1					
ANR	4963978	Identifier	mem		4963923	0					
ANR	4963979	IfStatement	if ( mem -> cc == cp )		4963923	1					
ANR	4963980	Condition	mem -> cc == cp	2090:16:67297:67309	4963923	0	True				
ANR	4963981	EqualityExpression	mem -> cc == cp		4963923	0		==			
ANR	4963982	PtrMemberAccess	mem -> cc		4963923	0					
ANR	4963983	Identifier	mem		4963923	0					
ANR	4963984	Identifier	cc		4963923	1					
ANR	4963985	Identifier	cp		4963923	1					
ANR	4963986	ExpressionStatement	mem -> cc = NULL	2091:16:67328:67342	4963923	1	True				
ANR	4963987	AssignmentExpression	mem -> cc = NULL		4963923	0		=			
ANR	4963988	PtrMemberAccess	mem -> cc		4963923	0					
ANR	4963989	Identifier	mem		4963923	0					
ANR	4963990	Identifier	cc		4963923	1					
ANR	4963991	Identifier	NULL		4963923	1					
ANR	4963992	ReturnStatement	return SPLAY_APP_CONTINUE ;	2095:4:67365:67390	4963923	3	True				
ANR	4963993	Identifier	SPLAY_APP_CONTINUE		4963923	0					
ANR	4963994	ReturnType	static splay_app_result_t		4963923	1					
ANR	4963995	Identifier	consolidate		4963923	2					
ANR	4963996	ParameterList	"clump_t * cp , void * arg"		4963923	3					
ANR	4963997	Parameter	clump_t * cp	2081:12:66993:67003	4963923	0	True				
ANR	4963998	ParameterType	clump_t *		4963923	0					
ANR	4963999	Identifier	cp		4963923	1					
ANR	4964000	Parameter	void * arg	2081:25:67006:67014	4963923	1	True				
ANR	4964001	ParameterType	void *		4963923	0					
ANR	4964002	Identifier	arg		4963923	1					
ANR	4964003	CFGEntryNode	ENTRY		4963923		True				
ANR	4964004	CFGExitNode	EXIT		4963923		True				
ANR	4964005	Symbol	NULL		4963923						
ANR	4964006	Symbol	cp -> cbase		4963923						
ANR	4964007	Symbol	cp		4963923						
ANR	4964008	Symbol	cp -> climit		4963923						
ANR	4964009	Symbol	* cp		4963923						
ANR	4964010	Symbol	cp -> cbot		4963923						
ANR	4964011	Symbol	mem		4963923						
ANR	4964012	Symbol	arg		4963923						
ANR	4964013	Symbol	mem -> cc		4963923						
ANR	4964014	Symbol	cp -> ctop		4963923						
ANR	4964015	Symbol	mem -> is_controlled		4963923						
ANR	4964016	Symbol	* mem		4963923						
ANR	4964017	Symbol	SPLAY_APP_CONTINUE		4963923						
ANR	4964018	Function	ialloc_consolidate_free	2099:0:67427:68043							
ANR	4964019	FunctionDef	ialloc_consolidate_free (gs_ref_memory_t * mem)		4964018	0					
ANR	4964020	CompoundStatement		2101:0:67478:68043	4964018	0					
ANR	4964021	ExpressionStatement	alloc_close_clump ( mem )	2102:4:67484:67506	4964018	0	True				
ANR	4964022	CallExpression	alloc_close_clump ( mem )		4964018	0					
ANR	4964023	Callee	alloc_close_clump		4964018	0					
ANR	4964024	Identifier	alloc_close_clump		4964018	0					
ANR	4964025	ArgumentList	mem		4964018	1					
ANR	4964026	Argument	mem		4964018	0					
ANR	4964027	Identifier	mem		4964018	0					
ANR	4964028	ExpressionStatement	"clump_splay_app ( mem -> root , mem , consolidate , mem )"	2108:4:67758:67807	4964018	1	True				
ANR	4964029	CallExpression	"clump_splay_app ( mem -> root , mem , consolidate , mem )"		4964018	0					
ANR	4964030	Callee	clump_splay_app		4964018	0					
ANR	4964031	Identifier	clump_splay_app		4964018	0					
ANR	4964032	ArgumentList	mem -> root		4964018	1					
ANR	4964033	Argument	mem -> root		4964018	0					
ANR	4964034	PtrMemberAccess	mem -> root		4964018	0					
ANR	4964035	Identifier	mem		4964018	0					
ANR	4964036	Identifier	root		4964018	1					
ANR	4964037	Argument	mem		4964018	1					
ANR	4964038	Identifier	mem		4964018	0					
ANR	4964039	Argument	consolidate		4964018	2					
ANR	4964040	Identifier	consolidate		4964018	0					
ANR	4964041	Argument	mem		4964018	3					
ANR	4964042	Identifier	mem		4964018	0					
ANR	4964043	IfStatement	if ( mem -> cc == NULL )		4964018	2					
ANR	4964044	Condition	mem -> cc == NULL	2112:8:67969:67983	4964018	0	True				
ANR	4964045	EqualityExpression	mem -> cc == NULL		4964018	0		==			
ANR	4964046	PtrMemberAccess	mem -> cc		4964018	0					
ANR	4964047	Identifier	mem		4964018	0					
ANR	4964048	Identifier	cc		4964018	1					
ANR	4964049	Identifier	NULL		4964018	1					
ANR	4964050	ExpressionStatement	mem -> cc = mem -> root	2113:8:67994:68013	4964018	1	True				
ANR	4964051	AssignmentExpression	mem -> cc = mem -> root		4964018	0		=			
ANR	4964052	PtrMemberAccess	mem -> cc		4964018	0					
ANR	4964053	Identifier	mem		4964018	0					
ANR	4964054	Identifier	cc		4964018	1					
ANR	4964055	PtrMemberAccess	mem -> root		4964018	1					
ANR	4964056	Identifier	mem		4964018	0					
ANR	4964057	Identifier	root		4964018	1					
ANR	4964058	ExpressionStatement	alloc_open_clump ( mem )	2115:4:68020:68041	4964018	3	True				
ANR	4964059	CallExpression	alloc_open_clump ( mem )		4964018	0					
ANR	4964060	Callee	alloc_open_clump		4964018	0					
ANR	4964061	Identifier	alloc_open_clump		4964018	0					
ANR	4964062	ArgumentList	mem		4964018	1					
ANR	4964063	Argument	mem		4964018	0					
ANR	4964064	Identifier	mem		4964018	0					
ANR	4964065	ReturnType	void		4964018	1					
ANR	4964066	Identifier	ialloc_consolidate_free		4964018	2					
ANR	4964067	ParameterList	gs_ref_memory_t * mem		4964018	3					
ANR	4964068	Parameter	gs_ref_memory_t * mem	2100:24:67456:67475	4964018	0	True				
ANR	4964069	ParameterType	gs_ref_memory_t *		4964018	0					
ANR	4964070	Identifier	mem		4964018	1					
ANR	4964071	CFGEntryNode	ENTRY		4964018		True				
ANR	4964072	CFGExitNode	EXIT		4964018		True				
ANR	4964073	Symbol	NULL		4964018						
ANR	4964074	Symbol	mem		4964018						
ANR	4964075	Symbol	consolidate		4964018						
ANR	4964076	Symbol	mem -> cc		4964018						
ANR	4964077	Symbol	mem -> root		4964018						
ANR	4964078	Symbol	* mem		4964018						
ANR	4964079	Function	i_consolidate_free	2117:0:68045:68149							
ANR	4964080	FunctionDef	i_consolidate_free (gs_memory_t * mem)		4964079	0					
ANR	4964081	CompoundStatement		2119:0:68094:68149	4964079	0					
ANR	4964082	ExpressionStatement	ialloc_consolidate_free ( ( gs_ref_memory_t * ) mem )	2120:4:68100:68147	4964079	0	True				
ANR	4964083	CallExpression	ialloc_consolidate_free ( ( gs_ref_memory_t * ) mem )		4964079	0					
ANR	4964084	Callee	ialloc_consolidate_free		4964079	0					
ANR	4964085	Identifier	ialloc_consolidate_free		4964079	0					
ANR	4964086	ArgumentList	( gs_ref_memory_t * ) mem		4964079	1					
ANR	4964087	Argument	( gs_ref_memory_t * ) mem		4964079	0					
ANR	4964088	CastExpression	( gs_ref_memory_t * ) mem		4964079	0					
ANR	4964089	CastTarget	gs_ref_memory_t *		4964079	0					
ANR	4964090	Identifier	mem		4964079	1					
ANR	4964091	ReturnType	static void		4964079	1					
ANR	4964092	Identifier	i_consolidate_free		4964079	2					
ANR	4964093	ParameterList	gs_memory_t * mem		4964079	3					
ANR	4964094	Parameter	gs_memory_t * mem	2118:19:68076:68091	4964079	0	True				
ANR	4964095	ParameterType	gs_memory_t *		4964079	0					
ANR	4964096	Identifier	mem		4964079	1					
ANR	4964097	CFGEntryNode	ENTRY		4964079		True				
ANR	4964098	CFGExitNode	EXIT		4964079		True				
ANR	4964099	Symbol	mem		4964079						
ANR	4964100	ClassDef	<unnamed>	2123:8:68160:68286							
ANR	4964101	DeclStmt									
ANR	4964102	Decl							uint	uint	need_free
ANR	4964103	DeclStmt									
ANR	4964104	Decl							obj_header_t	obj_header_t *	found_pre
ANR	4964105	DeclStmt									
ANR	4964106	Decl							gs_ref_memory_t	gs_ref_memory_t *	mem
ANR	4964107	DeclStmt									
ANR	4964108	Decl							unsigned	unsigned	request_size
ANR	4964109	DeclStmt									
ANR	4964110	Decl									scavenge_data
ANR	4964111	Function	scavenge	2131:0:68289:69565							
ANR	4964112	FunctionDef	"scavenge (clump_t * cp , void * arg)"		4964111	0					
ANR	4964113	CompoundStatement		2133:0:68348:69565	4964111	0					
ANR	4964114	IdentifierDeclStatement	scavenge_data * sd = ( scavenge_data * ) arg ;	2134:4:68354:68394	4964111	0	True				
ANR	4964115	IdentifierDecl	* sd = ( scavenge_data * ) arg		4964111	0					
ANR	4964116	IdentifierDeclType	scavenge_data *		4964111	0					
ANR	4964117	Identifier	sd		4964111	1					
ANR	4964118	AssignmentExpression	* sd = ( scavenge_data * ) arg		4964111	2		=			
ANR	4964119	Identifier	sd		4964111	0					
ANR	4964120	CastExpression	( scavenge_data * ) arg		4964111	1					
ANR	4964121	CastTarget	scavenge_data *		4964111	0					
ANR	4964122	Identifier	arg		4964111	1					
ANR	4964123	IdentifierDeclStatement	obj_header_t * begin_free = NULL ;	2135:4:68400:68431	4964111	1	True				
ANR	4964124	IdentifierDecl	* begin_free = NULL		4964111	0					
ANR	4964125	IdentifierDeclType	obj_header_t *		4964111	0					
ANR	4964126	Identifier	begin_free		4964111	1					
ANR	4964127	AssignmentExpression	* begin_free = NULL		4964111	2		=			
ANR	4964128	Identifier	NULL		4964111	0					
ANR	4964129	Identifier	NULL		4964111	1					
ANR	4964130	IdentifierDeclStatement	uint found_free = 0 ;	2136:4:68437:68456	4964111	2	True				
ANR	4964131	IdentifierDecl	found_free = 0		4964111	0					
ANR	4964132	IdentifierDeclType	uint		4964111	0					
ANR	4964133	Identifier	found_free		4964111	1					
ANR	4964134	AssignmentExpression	found_free = 0		4964111	2		=			
ANR	4964135	Identifier	found_free		4964111	0					
ANR	4964136	PrimaryExpression	0		4964111	1					
ANR	4964137	ExpressionStatement	sd -> found_pre = NULL	2138:4:68463:68483	4964111	3	True				
ANR	4964138	AssignmentExpression	sd -> found_pre = NULL		4964111	0		=			
ANR	4964139	PtrMemberAccess	sd -> found_pre		4964111	0					
ANR	4964140	Identifier	sd		4964111	0					
ANR	4964141	Identifier	found_pre		4964111	1					
ANR	4964142	Identifier	NULL		4964111	1					
ANR	4964143	Statement	SCAN_CLUMP_OBJECTS	2140:4:68490:68507	4964111	4	True				
ANR	4964144	Statement	(	2140:22:68508:68508	4964111	5	True				
ANR	4964145	Statement	cp	2140:23:68509:68510	4964111	6	True				
ANR	4964146	Statement	)	2140:25:68511:68511	4964111	7	True				
ANR	4964147	Statement	DO_ALL	2141:4:68517:68522	4964111	8	True				
ANR	4964148	IfStatement	if ( pre -> o_type == & st_free )		4964111	9					
ANR	4964149	Condition	pre -> o_type == & st_free	2142:12:68536:68558	4964111	0	True				
ANR	4964150	EqualityExpression	pre -> o_type == & st_free		4964111	0		==			
ANR	4964151	PtrMemberAccess	pre -> o_type		4964111	0					
ANR	4964152	Identifier	pre		4964111	0					
ANR	4964153	Identifier	o_type		4964111	1					
ANR	4964154	UnaryOperationExpression	& st_free		4964111	1					
ANR	4964155	UnaryOperator	&		4964111	0					
ANR	4964156	Identifier	st_free		4964111	1					
ANR	4964157	CompoundStatement		10:37:212:212	4964111	1					
ANR	4964158	IfStatement	if ( begin_free == 0 )		4964111	0					
ANR	4964159	Condition	begin_free == 0	2143:16:68579:68593	4964111	0	True				
ANR	4964160	EqualityExpression	begin_free == 0		4964111	0		==			
ANR	4964161	Identifier	begin_free		4964111	0					
ANR	4964162	PrimaryExpression	0		4964111	1					
ANR	4964163	CompoundStatement		11:33:247:247	4964111	1					
ANR	4964164	ExpressionStatement	found_free = 0	2144:16:68614:68628	4964111	0	True				
ANR	4964165	AssignmentExpression	found_free = 0		4964111	0		=			
ANR	4964166	Identifier	found_free		4964111	0					
ANR	4964167	PrimaryExpression	0		4964111	1					
ANR	4964168	ExpressionStatement	begin_free = pre	2145:16:68646:68662	4964111	1	True				
ANR	4964169	AssignmentExpression	begin_free = pre		4964111	0		=			
ANR	4964170	Identifier	begin_free		4964111	0					
ANR	4964171	Identifier	pre		4964111	1					
ANR	4964172	ExpressionStatement	found_free += pre_obj_rounded_size ( pre )	2147:12:68690:68729	4964111	1	True				
ANR	4964173	AssignmentExpression	found_free += pre_obj_rounded_size ( pre )		4964111	0		+=			
ANR	4964174	Identifier	found_free		4964111	0					
ANR	4964175	CallExpression	pre_obj_rounded_size ( pre )		4964111	1					
ANR	4964176	Callee	pre_obj_rounded_size		4964111	0					
ANR	4964177	Identifier	pre_obj_rounded_size		4964111	0					
ANR	4964178	ArgumentList	pre		4964111	1					
ANR	4964179	Argument	pre		4964111	0					
ANR	4964180	Identifier	pre		4964111	0					
ANR	4964181	IfStatement	if ( begin_free != 0 && found_free >= sd -> need_free )		4964111	2					
ANR	4964182	Condition	begin_free != 0 && found_free >= sd -> need_free	2148:16:68747:68792	4964111	0	True				
ANR	4964183	AndExpression	begin_free != 0 && found_free >= sd -> need_free		4964111	0		&&			
ANR	4964184	EqualityExpression	begin_free != 0		4964111	0		!=			
ANR	4964185	Identifier	begin_free		4964111	0					
ANR	4964186	PrimaryExpression	0		4964111	1					
ANR	4964187	RelationalExpression	found_free >= sd -> need_free		4964111	1		>=			
ANR	4964188	Identifier	found_free		4964111	0					
ANR	4964189	PtrMemberAccess	sd -> need_free		4964111	1					
ANR	4964190	Identifier	sd		4964111	0					
ANR	4964191	Identifier	need_free		4964111	1					
ANR	4964192	BreakStatement	break ;	2149:16:68811:68816	4964111	1	True				
ANR	4964193	ElseStatement	else		4964111	0					
ANR	4964194	ExpressionStatement	begin_free = 0	2151:12:68845:68859	4964111	0	True				
ANR	4964195	AssignmentExpression	begin_free = 0		4964111	0		=			
ANR	4964196	Identifier	begin_free		4964111	0					
ANR	4964197	PrimaryExpression	0		4964111	1					
ANR	4964198	Statement	END_OBJECTS_SCAN_NO_ABORT	2152:4:68865:68889	4964111	10	True				
ANR	4964199	IfStatement	if ( begin_free != 0 && found_free >= sd -> need_free )		4964111	11					
ANR	4964200	Condition	begin_free != 0 && found_free >= sd -> need_free	2154:8:68900:68945	4964111	0	True				
ANR	4964201	AndExpression	begin_free != 0 && found_free >= sd -> need_free		4964111	0		&&			
ANR	4964202	EqualityExpression	begin_free != 0		4964111	0		!=			
ANR	4964203	Identifier	begin_free		4964111	0					
ANR	4964204	PrimaryExpression	0		4964111	1					
ANR	4964205	RelationalExpression	found_free >= sd -> need_free		4964111	1		>=			
ANR	4964206	Identifier	found_free		4964111	0					
ANR	4964207	PtrMemberAccess	sd -> need_free		4964111	1					
ANR	4964208	Identifier	sd		4964111	0					
ANR	4964209	Identifier	need_free		4964111	1					
ANR	4964210	CompoundStatement		22:56:599:599	4964111	1					
ANR	4964211	ExpressionStatement	"remove_range_from_freelist ( sd -> mem , ( char * ) begin_free , ( char * ) begin_free + found_free )"	2156:8:69015:69136	4964111	0	True				
ANR	4964212	CallExpression	"remove_range_from_freelist ( sd -> mem , ( char * ) begin_free , ( char * ) begin_free + found_free )"		4964111	0					
ANR	4964213	Callee	remove_range_from_freelist		4964111	0					
ANR	4964214	Identifier	remove_range_from_freelist		4964111	0					
ANR	4964215	ArgumentList	sd -> mem		4964111	1					
ANR	4964216	Argument	sd -> mem		4964111	0					
ANR	4964217	PtrMemberAccess	sd -> mem		4964111	0					
ANR	4964218	Identifier	sd		4964111	0					
ANR	4964219	Identifier	mem		4964111	1					
ANR	4964220	Argument	( char * ) begin_free		4964111	1					
ANR	4964221	CastExpression	( char * ) begin_free		4964111	0					
ANR	4964222	CastTarget	char *		4964111	0					
ANR	4964223	Identifier	begin_free		4964111	1					
ANR	4964224	Argument	( char * ) begin_free + found_free		4964111	2					
ANR	4964225	AdditiveExpression	( char * ) begin_free + found_free		4964111	0		+			
ANR	4964226	CastExpression	( char * ) begin_free		4964111	0					
ANR	4964227	CastTarget	char *		4964111	0					
ANR	4964228	Identifier	begin_free		4964111	1					
ANR	4964229	Identifier	found_free		4964111	1					
ANR	4964230	ExpressionStatement	sd -> found_pre = begin_free	2160:8:69182:69208	4964111	1	True				
ANR	4964231	AssignmentExpression	sd -> found_pre = begin_free		4964111	0		=			
ANR	4964232	PtrMemberAccess	sd -> found_pre		4964111	0					
ANR	4964233	Identifier	sd		4964111	0					
ANR	4964234	Identifier	found_pre		4964111	1					
ANR	4964235	Identifier	begin_free		4964111	1					
ANR	4964236	ExpressionStatement	sd -> found_pre -> o_type = & st_free	2161:8:69218:69250	4964111	2	True				
ANR	4964237	AssignmentExpression	sd -> found_pre -> o_type = & st_free		4964111	0		=			
ANR	4964238	PtrMemberAccess	sd -> found_pre -> o_type		4964111	0					
ANR	4964239	PtrMemberAccess	sd -> found_pre		4964111	0					
ANR	4964240	Identifier	sd		4964111	0					
ANR	4964241	Identifier	found_pre		4964111	1					
ANR	4964242	Identifier	o_type		4964111	1					
ANR	4964243	UnaryOperationExpression	& st_free		4964111	1					
ANR	4964244	UnaryOperator	&		4964111	0					
ANR	4964245	Identifier	st_free		4964111	1					
ANR	4964246	ExpressionStatement	sd -> found_pre -> o_size = found_free - sizeof ( obj_header_t )	2162:8:69297:69354	4964111	3	True				
ANR	4964247	AssignmentExpression	sd -> found_pre -> o_size = found_free - sizeof ( obj_header_t )		4964111	0		=			
ANR	4964248	PtrMemberAccess	sd -> found_pre -> o_size		4964111	0					
ANR	4964249	PtrMemberAccess	sd -> found_pre		4964111	0					
ANR	4964250	Identifier	sd		4964111	0					
ANR	4964251	Identifier	found_pre		4964111	1					
ANR	4964252	Identifier	o_size		4964111	1					
ANR	4964253	AdditiveExpression	found_free - sizeof ( obj_header_t )		4964111	1		-			
ANR	4964254	Identifier	found_free		4964111	0					
ANR	4964255	SizeofExpression	sizeof ( obj_header_t )		4964111	1					
ANR	4964256	Sizeof	sizeof		4964111	0					
ANR	4964257	SizeofOperand	obj_header_t		4964111	1					
ANR	4964258	ExpressionStatement	"trim_obj ( sd -> mem , sd -> found_pre + 1 , sd -> request_size , cp )"	2165:8:69436:69494	4964111	4	True				
ANR	4964259	CallExpression	"trim_obj ( sd -> mem , sd -> found_pre + 1 , sd -> request_size , cp )"		4964111	0					
ANR	4964260	Callee	trim_obj		4964111	0					
ANR	4964261	Identifier	trim_obj		4964111	0					
ANR	4964262	ArgumentList	sd -> mem		4964111	1					
ANR	4964263	Argument	sd -> mem		4964111	0					
ANR	4964264	PtrMemberAccess	sd -> mem		4964111	0					
ANR	4964265	Identifier	sd		4964111	0					
ANR	4964266	Identifier	mem		4964111	1					
ANR	4964267	Argument	sd -> found_pre + 1		4964111	1					
ANR	4964268	AdditiveExpression	sd -> found_pre + 1		4964111	0		+			
ANR	4964269	PtrMemberAccess	sd -> found_pre		4964111	0					
ANR	4964270	Identifier	sd		4964111	0					
ANR	4964271	Identifier	found_pre		4964111	1					
ANR	4964272	PrimaryExpression	1		4964111	1					
ANR	4964273	Argument	sd -> request_size		4964111	2					
ANR	4964274	PtrMemberAccess	sd -> request_size		4964111	0					
ANR	4964275	Identifier	sd		4964111	0					
ANR	4964276	Identifier	request_size		4964111	1					
ANR	4964277	Argument	cp		4964111	3					
ANR	4964278	Identifier	cp		4964111	0					
ANR	4964279	ReturnStatement	return SPLAY_APP_STOP ;	2166:8:69504:69525	4964111	5	True				
ANR	4964280	Identifier	SPLAY_APP_STOP		4964111	0					
ANR	4964281	ReturnStatement	return SPLAY_APP_CONTINUE ;	2169:4:69538:69563	4964111	12	True				
ANR	4964282	Identifier	SPLAY_APP_CONTINUE		4964111	0					
ANR	4964283	ReturnType	static splay_app_result_t		4964111	1					
ANR	4964284	Identifier	scavenge		4964111	2					
ANR	4964285	ParameterList	"clump_t * cp , void * arg"		4964111	3					
ANR	4964286	Parameter	clump_t * cp	2132:9:68324:68334	4964111	0	True				
ANR	4964287	ParameterType	clump_t *		4964111	0					
ANR	4964288	Identifier	cp		4964111	1					
ANR	4964289	Parameter	void * arg	2132:22:68337:68345	4964111	1	True				
ANR	4964290	ParameterType	void *		4964111	0					
ANR	4964291	Identifier	arg		4964111	1					
ANR	4964292	CFGEntryNode	ENTRY		4964111		True				
ANR	4964293	CFGExitNode	EXIT		4964111		True				
ANR	4964294	CFGErrorNode	ERROR		4964111		True				
ANR	4964295	Symbol	pre		4964111						
ANR	4964296	Symbol	pre_obj_rounded_size		4964111						
ANR	4964297	Symbol	SPLAY_APP_STOP		4964111						
ANR	4964298	Symbol	NULL		4964111						
ANR	4964299	Symbol	sd -> found_pre		4964111						
ANR	4964300	Symbol	begin_free		4964111						
ANR	4964301	Symbol	& st_free		4964111						
ANR	4964302	Symbol	sd -> request_size		4964111						
ANR	4964303	Symbol	sd -> mem		4964111						
ANR	4964304	Symbol	* sd -> found_pre		4964111						
ANR	4964305	Symbol	sd -> found_pre -> o_size		4964111						
ANR	4964306	Symbol	cp		4964111						
ANR	4964307	Symbol	* pre		4964111						
ANR	4964308	Symbol	sd		4964111						
ANR	4964309	Symbol	* sd		4964111						
ANR	4964310	Symbol	sd -> found_pre -> o_type		4964111						
ANR	4964311	Symbol	pre -> o_type		4964111						
ANR	4964312	Symbol	sd -> need_free		4964111						
ANR	4964313	Symbol	arg		4964111						
ANR	4964314	Symbol	found_free		4964111						
ANR	4964315	Symbol	* * sd		4964111						
ANR	4964316	Symbol	SPLAY_APP_CONTINUE		4964111						
ANR	4964317	Function	scavenge_low_free	2173:0:69643:70208							
ANR	4964318	FunctionDef	"scavenge_low_free (gs_ref_memory_t * mem , unsigned request_size)"		4964317	0					
ANR	4964319	CompoundStatement		2175:0:69787:70208	4964317	0					
ANR	4964320	IdentifierDeclStatement	scavenge_data sd ;	2177:4:69876:69892	4964317	0	True				
ANR	4964321	IdentifierDecl	sd		4964317	0					
ANR	4964322	IdentifierDeclType	scavenge_data		4964317	0					
ANR	4964323	Identifier	sd		4964317	1					
ANR	4964324	IdentifierDeclStatement	uint request_size_rounded = obj_size_round ( request_size ) ;	2178:4:69898:69954	4964317	1	True				
ANR	4964325	IdentifierDecl	request_size_rounded = obj_size_round ( request_size )		4964317	0					
ANR	4964326	IdentifierDeclType	uint		4964317	0					
ANR	4964327	Identifier	request_size_rounded		4964317	1					
ANR	4964328	AssignmentExpression	request_size_rounded = obj_size_round ( request_size )		4964317	2		=			
ANR	4964329	Identifier	request_size_rounded		4964317	0					
ANR	4964330	CallExpression	obj_size_round ( request_size )		4964317	1					
ANR	4964331	Callee	obj_size_round		4964317	0					
ANR	4964332	Identifier	obj_size_round		4964317	0					
ANR	4964333	ArgumentList	request_size		4964317	1					
ANR	4964334	Argument	request_size		4964317	0					
ANR	4964335	Identifier	request_size		4964317	0					
ANR	4964336	ExpressionStatement	sd . found_pre = 0	2180:4:69961:69977	4964317	2	True				
ANR	4964337	AssignmentExpression	sd . found_pre = 0		4964317	0		=			
ANR	4964338	MemberAccess	sd . found_pre		4964317	0					
ANR	4964339	Identifier	sd		4964317	0					
ANR	4964340	Identifier	found_pre		4964317	1					
ANR	4964341	PrimaryExpression	0		4964317	1					
ANR	4964342	ExpressionStatement	sd . need_free = request_size_rounded + sizeof ( obj_header_t )	2181:4:69983:70041	4964317	3	True				
ANR	4964343	AssignmentExpression	sd . need_free = request_size_rounded + sizeof ( obj_header_t )		4964317	0		=			
ANR	4964344	MemberAccess	sd . need_free		4964317	0					
ANR	4964345	Identifier	sd		4964317	0					
ANR	4964346	Identifier	need_free		4964317	1					
ANR	4964347	AdditiveExpression	request_size_rounded + sizeof ( obj_header_t )		4964317	1		+			
ANR	4964348	Identifier	request_size_rounded		4964317	0					
ANR	4964349	SizeofExpression	sizeof ( obj_header_t )		4964317	1					
ANR	4964350	Sizeof	sizeof		4964317	0					
ANR	4964351	SizeofOperand	obj_header_t		4964317	1					
ANR	4964352	ExpressionStatement	sd . mem = mem	2182:4:70080:70092	4964317	4	True				
ANR	4964353	AssignmentExpression	sd . mem = mem		4964317	0		=			
ANR	4964354	MemberAccess	sd . mem		4964317	0					
ANR	4964355	Identifier	sd		4964317	0					
ANR	4964356	Identifier	mem		4964317	1					
ANR	4964357	Identifier	mem		4964317	1					
ANR	4964358	ExpressionStatement	sd . request_size = request_size	2183:4:70098:70128	4964317	5	True				
ANR	4964359	AssignmentExpression	sd . request_size = request_size		4964317	0		=			
ANR	4964360	MemberAccess	sd . request_size		4964317	0					
ANR	4964361	Identifier	sd		4964317	0					
ANR	4964362	Identifier	request_size		4964317	1					
ANR	4964363	Identifier	request_size		4964317	1					
ANR	4964364	ExpressionStatement	"clump_splay_app ( mem -> root , mem , scavenge , & sd )"	2185:4:70135:70181	4964317	6	True				
ANR	4964365	CallExpression	"clump_splay_app ( mem -> root , mem , scavenge , & sd )"		4964317	0					
ANR	4964366	Callee	clump_splay_app		4964317	0					
ANR	4964367	Identifier	clump_splay_app		4964317	0					
ANR	4964368	ArgumentList	mem -> root		4964317	1					
ANR	4964369	Argument	mem -> root		4964317	0					
ANR	4964370	PtrMemberAccess	mem -> root		4964317	0					
ANR	4964371	Identifier	mem		4964317	0					
ANR	4964372	Identifier	root		4964317	1					
ANR	4964373	Argument	mem		4964317	1					
ANR	4964374	Identifier	mem		4964317	0					
ANR	4964375	Argument	scavenge		4964317	2					
ANR	4964376	Identifier	scavenge		4964317	0					
ANR	4964377	Argument	& sd		4964317	3					
ANR	4964378	UnaryOperationExpression	& sd		4964317	0					
ANR	4964379	UnaryOperator	&		4964317	0					
ANR	4964380	Identifier	sd		4964317	1					
ANR	4964381	ReturnStatement	return sd . found_pre ;	2186:4:70187:70206	4964317	7	True				
ANR	4964382	MemberAccess	sd . found_pre		4964317	0					
ANR	4964383	Identifier	sd		4964317	0					
ANR	4964384	Identifier	found_pre		4964317	1					
ANR	4964385	ReturnType	static obj_header_t *		4964317	1					
ANR	4964386	Identifier	scavenge_low_free		4964317	2					
ANR	4964387	ParameterList	"gs_ref_memory_t * mem , unsigned request_size"		4964317	3					
ANR	4964388	Parameter	gs_ref_memory_t * mem	2174:18:69742:69761	4964317	0	True				
ANR	4964389	ParameterType	gs_ref_memory_t *		4964317	0					
ANR	4964390	Identifier	mem		4964317	1					
ANR	4964391	Parameter	unsigned request_size	2174:40:69764:69784	4964317	1	True				
ANR	4964392	ParameterType	unsigned		4964317	0					
ANR	4964393	Identifier	request_size		4964317	1					
ANR	4964394	CFGEntryNode	ENTRY		4964317		True				
ANR	4964395	CFGExitNode	EXIT		4964317		True				
ANR	4964396	Symbol	sd . found_pre		4964317						
ANR	4964397	Symbol	scavenge		4964317						
ANR	4964398	Symbol	sd . request_size		4964317						
ANR	4964399	Symbol	sd		4964317						
ANR	4964400	Symbol	obj_size_round		4964317						
ANR	4964401	Symbol	mem		4964317						
ANR	4964402	Symbol	request_size_rounded		4964317						
ANR	4964403	Symbol	mem -> root		4964317						
ANR	4964404	Symbol	sd . need_free		4964317						
ANR	4964405	Symbol	& sd		4964317						
ANR	4964406	Symbol	request_size		4964317						
ANR	4964407	Symbol	sd . mem		4964317						
ANR	4964408	Symbol	* mem		4964317						
ANR	4964409	Function	remove_range_from_freelist	2190:0:70263:72462							
ANR	4964410	FunctionDef	"remove_range_from_freelist (gs_ref_memory_t * mem , void * bottom , void * top)"		4964409	0					
ANR	4964411	CompoundStatement		2192:0:70349:72462	4964409	0					
ANR	4964412	IdentifierDeclStatement	int num_free [ num_freelists ] ;	2193:4:70355:70382	4964409	0	True				
ANR	4964413	IdentifierDecl	num_free [ num_freelists ]		4964409	0					
ANR	4964414	IdentifierDeclType	int [ num_freelists ]		4964409	0					
ANR	4964415	Identifier	num_free		4964409	1					
ANR	4964416	Identifier	num_freelists		4964409	2					
ANR	4964417	IdentifierDeclStatement	"int smallest = num_freelists , largest = - 1 ;"	2194:4:70388:70430	4964409	1	True				
ANR	4964418	IdentifierDecl	smallest = num_freelists		4964409	0					
ANR	4964419	IdentifierDeclType	int		4964409	0					
ANR	4964420	Identifier	smallest		4964409	1					
ANR	4964421	AssignmentExpression	smallest = num_freelists		4964409	2		=			
ANR	4964422	Identifier	num_freelists		4964409	0					
ANR	4964423	Identifier	num_freelists		4964409	1					
ANR	4964424	IdentifierDecl	largest = - 1		4964409	1					
ANR	4964425	IdentifierDeclType	int		4964409	0					
ANR	4964426	Identifier	largest		4964409	1					
ANR	4964427	AssignmentExpression	largest = - 1		4964409	2		=			
ANR	4964428	Identifier	largest		4964409	0					
ANR	4964429	UnaryOperationExpression	- 1		4964409	1					
ANR	4964430	UnaryOperator	-		4964409	0					
ANR	4964431	PrimaryExpression	1		4964409	1					
ANR	4964432	IdentifierDeclStatement	const obj_header_t * cur ;	2195:4:70436:70459	4964409	2	True				
ANR	4964433	IdentifierDecl	* cur		4964409	0					
ANR	4964434	IdentifierDeclType	const obj_header_t *		4964409	0					
ANR	4964435	Identifier	cur		4964409	1					
ANR	4964436	IdentifierDeclStatement	uint size ;	2196:4:70465:70474	4964409	3	True				
ANR	4964437	IdentifierDecl	size		4964409	0					
ANR	4964438	IdentifierDeclType	uint		4964409	0					
ANR	4964439	Identifier	size		4964409	1					
ANR	4964440	IdentifierDeclStatement	int i ;	2197:4:70480:70485	4964409	4	True				
ANR	4964441	IdentifierDecl	i		4964409	0					
ANR	4964442	IdentifierDeclType	int		4964409	0					
ANR	4964443	Identifier	i		4964409	1					
ANR	4964444	IdentifierDeclStatement	uint removed = 0 ;	2198:4:70491:70507	4964409	5	True				
ANR	4964445	IdentifierDecl	removed = 0		4964409	0					
ANR	4964446	IdentifierDeclType	uint		4964409	0					
ANR	4964447	Identifier	removed		4964409	1					
ANR	4964448	AssignmentExpression	removed = 0		4964409	2		=			
ANR	4964449	Identifier	removed		4964409	0					
ANR	4964450	PrimaryExpression	0		4964409	1					
ANR	4964451	ForStatement	for ( cur = bottom ; cur != top ; cur = ( const obj_header_t * ) ( ( const byte * ) cur + obj_size_round ( size ) ) )		4964409	6					
ANR	4964452	ForInit	cur = bottom ;	2205:9:70657:70669	4964409	0	True				
ANR	4964453	AssignmentExpression	cur = bottom		4964409	0		=			
ANR	4964454	Identifier	cur		4964409	0					
ANR	4964455	Identifier	bottom		4964409	1					
ANR	4964456	Condition	cur != top	2205:23:70671:70680	4964409	1	True				
ANR	4964457	EqualityExpression	cur != top		4964409	0		!=			
ANR	4964458	Identifier	cur		4964409	0					
ANR	4964459	Identifier	top		4964409	1					
ANR	4964460	AssignmentExpression	cur = ( const obj_header_t * ) ( ( const byte * ) cur + obj_size_round ( size ) )	2206:9:70692:70775	4964409	2	True	=			
ANR	4964461	Identifier	cur		4964409	0					
ANR	4964462	CastExpression	( const obj_header_t * ) ( ( const byte * ) cur + obj_size_round ( size ) )		4964409	1					
ANR	4964463	CastTarget	const obj_header_t *		4964409	0					
ANR	4964464	AdditiveExpression	( const byte * ) cur + obj_size_round ( size )		4964409	1		+			
ANR	4964465	CastExpression	( const byte * ) cur		4964409	0					
ANR	4964466	CastTarget	const byte *		4964409	0					
ANR	4964467	Identifier	cur		4964409	1					
ANR	4964468	CallExpression	obj_size_round ( size )		4964409	1					
ANR	4964469	Callee	obj_size_round		4964409	0					
ANR	4964470	Identifier	obj_size_round		4964409	0					
ANR	4964471	ArgumentList	size		4964409	1					
ANR	4964472	Argument	size		4964409	0					
ANR	4964473	Identifier	size		4964409	0					
ANR	4964474	CompoundStatement		17:10:437:437	4964409	3					
ANR	4964475	ExpressionStatement	size = cur -> o_size	2209:8:70797:70815	4964409	0	True				
ANR	4964476	AssignmentExpression	size = cur -> o_size		4964409	0		=			
ANR	4964477	Identifier	size		4964409	0					
ANR	4964478	PtrMemberAccess	cur -> o_size		4964409	1					
ANR	4964479	Identifier	cur		4964409	0					
ANR	4964480	Identifier	o_size		4964409	1					
ANR	4964481	ExpressionStatement	i = ( size > max_freelist_size ? LARGE_FREELIST_INDEX : ( size + obj_align_mask ) >> log2_obj_align_mod )	2210:8:70825:70939	4964409	1	True				
ANR	4964482	AssignmentExpression	i = ( size > max_freelist_size ? LARGE_FREELIST_INDEX : ( size + obj_align_mask ) >> log2_obj_align_mod )		4964409	0		=			
ANR	4964483	Identifier	i		4964409	0					
ANR	4964484	ConditionalExpression	size > max_freelist_size ? LARGE_FREELIST_INDEX : ( size + obj_align_mask ) >> log2_obj_align_mod		4964409	1					
ANR	4964485	Condition	size > max_freelist_size		4964409	0					
ANR	4964486	RelationalExpression	size > max_freelist_size		4964409	0		>			
ANR	4964487	Identifier	size		4964409	0					
ANR	4964488	Identifier	max_freelist_size		4964409	1					
ANR	4964489	Identifier	LARGE_FREELIST_INDEX		4964409	1					
ANR	4964490	ShiftExpression	( size + obj_align_mask ) >> log2_obj_align_mod		4964409	2		>>			
ANR	4964491	AdditiveExpression	size + obj_align_mask		4964409	0		+			
ANR	4964492	Identifier	size		4964409	0					
ANR	4964493	Identifier	obj_align_mask		4964409	1					
ANR	4964494	Identifier	log2_obj_align_mod		4964409	1					
ANR	4964495	IfStatement	if ( i < smallest )		4964409	2					
ANR	4964496	Condition	i < smallest	2212:12:70953:70964	4964409	0	True				
ANR	4964497	RelationalExpression	i < smallest		4964409	0		<			
ANR	4964498	Identifier	i		4964409	0					
ANR	4964499	Identifier	smallest		4964409	1					
ANR	4964500	CompoundStatement		21:26:617:617	4964409	1					
ANR	4964501	IfStatement	if ( i == 0 )		4964409	0					
ANR	4964502	Condition	i == 0	2217:16:71136:71141	4964409	0	True				
ANR	4964503	EqualityExpression	i == 0		4964409	0		==			
ANR	4964504	Identifier	i		4964409	0					
ANR	4964505	PrimaryExpression	0		4964409	1					
ANR	4964506	ContinueStatement	continue ;	2218:16:71160:71168	4964409	1	True				
ANR	4964507	IfStatement	if ( smallest < num_freelists )		4964409	1					
ANR	4964508	Condition	smallest < num_freelists	2219:16:71186:71209	4964409	0	True				
ANR	4964509	RelationalExpression	smallest < num_freelists		4964409	0		<			
ANR	4964510	Identifier	smallest		4964409	0					
ANR	4964511	Identifier	num_freelists		4964409	1					
ANR	4964512	ExpressionStatement	"memset ( & num_free [ i ] , 0 , ( smallest - i ) * sizeof ( int ) )"	2220:16:71228:71281	4964409	1	True				
ANR	4964513	CallExpression	"memset ( & num_free [ i ] , 0 , ( smallest - i ) * sizeof ( int ) )"		4964409	0					
ANR	4964514	Callee	memset		4964409	0					
ANR	4964515	Identifier	memset		4964409	0					
ANR	4964516	ArgumentList	& num_free [ i ]		4964409	1					
ANR	4964517	Argument	& num_free [ i ]		4964409	0					
ANR	4964518	UnaryOperationExpression	& num_free [ i ]		4964409	0					
ANR	4964519	UnaryOperator	&		4964409	0					
ANR	4964520	ArrayIndexing	num_free [ i ]		4964409	1					
ANR	4964521	Identifier	num_free		4964409	0					
ANR	4964522	Identifier	i		4964409	1					
ANR	4964523	Argument	0		4964409	1					
ANR	4964524	PrimaryExpression	0		4964409	0					
ANR	4964525	Argument	( smallest - i ) * sizeof ( int )		4964409	2					
ANR	4964526	MultiplicativeExpression	( smallest - i ) * sizeof ( int )		4964409	0		*			
ANR	4964527	AdditiveExpression	smallest - i		4964409	0		-			
ANR	4964528	Identifier	smallest		4964409	0					
ANR	4964529	Identifier	i		4964409	1					
ANR	4964530	SizeofExpression	sizeof ( int )		4964409	1					
ANR	4964531	Sizeof	sizeof		4964409	0					
ANR	4964532	SizeofOperand	int		4964409	1					
ANR	4964533	ElseStatement	else		4964409	0					
ANR	4964534	ExpressionStatement	num_free [ i ] = 0	2222:16:71316:71331	4964409	0	True				
ANR	4964535	AssignmentExpression	num_free [ i ] = 0		4964409	0		=			
ANR	4964536	ArrayIndexing	num_free [ i ]		4964409	0					
ANR	4964537	Identifier	num_free		4964409	0					
ANR	4964538	Identifier	i		4964409	1					
ANR	4964539	PrimaryExpression	0		4964409	1					
ANR	4964540	ExpressionStatement	smallest = i	2223:12:71345:71357	4964409	2	True				
ANR	4964541	AssignmentExpression	smallest = i		4964409	0		=			
ANR	4964542	Identifier	smallest		4964409	0					
ANR	4964543	Identifier	i		4964409	1					
ANR	4964544	IfStatement	if ( i > largest )		4964409	3					
ANR	4964545	Condition	i > largest	2225:12:71381:71391	4964409	0	True				
ANR	4964546	RelationalExpression	i > largest		4964409	0		>			
ANR	4964547	Identifier	i		4964409	0					
ANR	4964548	Identifier	largest		4964409	1					
ANR	4964549	CompoundStatement		34:25:1044:1044	4964409	1					
ANR	4964550	IfStatement	if ( largest >= 0 )		4964409	0					
ANR	4964551	Condition	largest >= 0	2226:16:71412:71423	4964409	0	True				
ANR	4964552	RelationalExpression	largest >= 0		4964409	0		>=			
ANR	4964553	Identifier	largest		4964409	0					
ANR	4964554	PrimaryExpression	0		4964409	1					
ANR	4964555	ExpressionStatement	"memset ( & num_free [ largest + 1 ] , 0 , ( i - largest ) * sizeof ( int ) )"	2227:16:71442:71504	4964409	1	True				
ANR	4964556	CallExpression	"memset ( & num_free [ largest + 1 ] , 0 , ( i - largest ) * sizeof ( int ) )"		4964409	0					
ANR	4964557	Callee	memset		4964409	0					
ANR	4964558	Identifier	memset		4964409	0					
ANR	4964559	ArgumentList	& num_free [ largest + 1 ]		4964409	1					
ANR	4964560	Argument	& num_free [ largest + 1 ]		4964409	0					
ANR	4964561	UnaryOperationExpression	& num_free [ largest + 1 ]		4964409	0					
ANR	4964562	UnaryOperator	&		4964409	0					
ANR	4964563	ArrayIndexing	num_free [ largest + 1 ]		4964409	1					
ANR	4964564	Identifier	num_free		4964409	0					
ANR	4964565	AdditiveExpression	largest + 1		4964409	1		+			
ANR	4964566	Identifier	largest		4964409	0					
ANR	4964567	PrimaryExpression	1		4964409	1					
ANR	4964568	Argument	0		4964409	1					
ANR	4964569	PrimaryExpression	0		4964409	0					
ANR	4964570	Argument	( i - largest ) * sizeof ( int )		4964409	2					
ANR	4964571	MultiplicativeExpression	( i - largest ) * sizeof ( int )		4964409	0		*			
ANR	4964572	AdditiveExpression	i - largest		4964409	0		-			
ANR	4964573	Identifier	i		4964409	0					
ANR	4964574	Identifier	largest		4964409	1					
ANR	4964575	SizeofExpression	sizeof ( int )		4964409	1					
ANR	4964576	Sizeof	sizeof		4964409	0					
ANR	4964577	SizeofOperand	int		4964409	1					
ANR	4964578	ExpressionStatement	largest = i	2228:12:71518:71529	4964409	1	True				
ANR	4964579	AssignmentExpression	largest = i		4964409	0		=			
ANR	4964580	Identifier	largest		4964409	0					
ANR	4964581	Identifier	i		4964409	1					
ANR	4964582	ExpressionStatement	num_free [ i ] ++	2230:8:71549:71562	4964409	4	True				
ANR	4964583	PostIncDecOperationExpression	num_free [ i ] ++		4964409	0					
ANR	4964584	ArrayIndexing	num_free [ i ]		4964409	0					
ANR	4964585	Identifier	num_free		4964409	0					
ANR	4964586	Identifier	i		4964409	1					
ANR	4964587	IncDec	++		4964409	1					
ANR	4964588	ForStatement	for ( i = smallest ; i <= largest ; i ++ )		4964409	7					
ANR	4964589	ForInit	i = smallest ;	2239:9:71771:71783	4964409	0	True				
ANR	4964590	AssignmentExpression	i = smallest		4964409	0		=			
ANR	4964591	Identifier	i		4964409	0					
ANR	4964592	Identifier	smallest		4964409	1					
ANR	4964593	Condition	i <= largest	2239:23:71785:71796	4964409	1	True				
ANR	4964594	RelationalExpression	i <= largest		4964409	0		<=			
ANR	4964595	Identifier	i		4964409	0					
ANR	4964596	Identifier	largest		4964409	1					
ANR	4964597	PostIncDecOperationExpression	i ++	2239:37:71799:71801	4964409	2	True				
ANR	4964598	Identifier	i		4964409	0					
ANR	4964599	IncDec	++		4964409	1					
ANR	4964600	CompoundStatement		51:8:1526:1548	4964409	3					
ANR	4964601	IdentifierDeclStatement	int count = num_free [ i ] ;	2240:8:71814:71837	4964409	0	True				
ANR	4964602	IdentifierDecl	count = num_free [ i ]		4964409	0					
ANR	4964603	IdentifierDeclType	int		4964409	0					
ANR	4964604	Identifier	count		4964409	1					
ANR	4964605	AssignmentExpression	count = num_free [ i ]		4964409	2		=			
ANR	4964606	Identifier	count		4964409	0					
ANR	4964607	ArrayIndexing	num_free [ i ]		4964409	1					
ANR	4964608	Identifier	num_free		4964409	0					
ANR	4964609	Identifier	i		4964409	1					
ANR	4964610	IdentifierDeclStatement	obj_header_t * pfree ;	2241:8:71847:71866	4964409	1	True				
ANR	4964611	IdentifierDecl	* pfree		4964409	0					
ANR	4964612	IdentifierDeclType	obj_header_t *		4964409	0					
ANR	4964613	Identifier	pfree		4964409	1					
ANR	4964614	IdentifierDeclStatement	obj_header_t * * ppfprev ;	2242:8:71876:71898	4964409	2	True				
ANR	4964615	IdentifierDecl	* * ppfprev		4964409	0					
ANR	4964616	IdentifierDeclType	obj_header_t * *		4964409	0					
ANR	4964617	Identifier	ppfprev		4964409	1					
ANR	4964618	IfStatement	if ( ! count )		4964409	3					
ANR	4964619	Condition	! count	2244:12:71913:71918	4964409	0	True				
ANR	4964620	UnaryOperationExpression	! count		4964409	0					
ANR	4964621	UnaryOperator	!		4964409	0					
ANR	4964622	Identifier	count		4964409	1					
ANR	4964623	ContinueStatement	continue ;	2245:12:71933:71941	4964409	1	True				
ANR	4964624	ExpressionStatement	ppfprev = & mem -> freelists [ i ]	2246:8:71951:71979	4964409	4	True				
ANR	4964625	AssignmentExpression	ppfprev = & mem -> freelists [ i ]		4964409	0		=			
ANR	4964626	Identifier	ppfprev		4964409	0					
ANR	4964627	UnaryOperationExpression	& mem -> freelists [ i ]		4964409	1					
ANR	4964628	UnaryOperator	&		4964409	0					
ANR	4964629	ArrayIndexing	mem -> freelists [ i ]		4964409	1					
ANR	4964630	PtrMemberAccess	mem -> freelists		4964409	0					
ANR	4964631	Identifier	mem		4964409	0					
ANR	4964632	Identifier	freelists		4964409	1					
ANR	4964633	Identifier	i		4964409	1					
ANR	4964634	ForStatement	for ( ; ; )		4964409	5					
ANR	4964635	CompoundStatement		56:17:1648:1648	4964409	0					
ANR	4964636	ExpressionStatement	pfree = * ppfprev	2248:12:72012:72028	4964409	0	True				
ANR	4964637	AssignmentExpression	pfree = * ppfprev		4964409	0		=			
ANR	4964638	Identifier	pfree		4964409	0					
ANR	4964639	UnaryOperationExpression	* ppfprev		4964409	1					
ANR	4964640	UnaryOperator	*		4964409	0					
ANR	4964641	Identifier	ppfprev		4964409	1					
ANR	4964642	IfStatement	"if ( PTR_GE ( pfree , bottom ) && PTR_LT ( pfree , top ) )"		4964409	1					
ANR	4964643	Condition	"PTR_GE ( pfree , bottom ) && PTR_LT ( pfree , top )"	2249:16:72046:72088	4964409	0	True				
ANR	4964644	AndExpression	"PTR_GE ( pfree , bottom ) && PTR_LT ( pfree , top )"		4964409	0		&&			
ANR	4964645	CallExpression	"PTR_GE ( pfree , bottom )"		4964409	0					
ANR	4964646	Callee	PTR_GE		4964409	0					
ANR	4964647	Identifier	PTR_GE		4964409	0					
ANR	4964648	ArgumentList	pfree		4964409	1					
ANR	4964649	Argument	pfree		4964409	0					
ANR	4964650	Identifier	pfree		4964409	0					
ANR	4964651	Argument	bottom		4964409	1					
ANR	4964652	Identifier	bottom		4964409	0					
ANR	4964653	CallExpression	"PTR_LT ( pfree , top )"		4964409	1					
ANR	4964654	Callee	PTR_LT		4964409	0					
ANR	4964655	Identifier	PTR_LT		4964409	0					
ANR	4964656	ArgumentList	pfree		4964409	1					
ANR	4964657	Argument	pfree		4964409	0					
ANR	4964658	Identifier	pfree		4964409	0					
ANR	4964659	Argument	top		4964409	1					
ANR	4964660	Identifier	top		4964409	0					
ANR	4964661	CompoundStatement		58:61:1741:1741	4964409	1					
ANR	4964662	ExpressionStatement	* ppfprev = * ( obj_header_t * * ) pfree	2251:16:72157:72192	4964409	0	True				
ANR	4964663	AssignmentExpression	* ppfprev = * ( obj_header_t * * ) pfree		4964409	0		=			
ANR	4964664	UnaryOperationExpression	* ppfprev		4964409	0					
ANR	4964665	UnaryOperator	*		4964409	0					
ANR	4964666	Identifier	ppfprev		4964409	1					
ANR	4964667	UnaryOperationExpression	* ( obj_header_t * * ) pfree		4964409	1					
ANR	4964668	UnaryOperator	*		4964409	0					
ANR	4964669	CastExpression	( obj_header_t * * ) pfree		4964409	1					
ANR	4964670	CastTarget	obj_header_t * *		4964409	0					
ANR	4964671	Identifier	pfree		4964409	1					
ANR	4964672	ExpressionStatement	removed += obj_align_round ( pfree [ - 1 ] . o_size )	2252:16:72210:72254	4964409	1	True				
ANR	4964673	AssignmentExpression	removed += obj_align_round ( pfree [ - 1 ] . o_size )		4964409	0		+=			
ANR	4964674	Identifier	removed		4964409	0					
ANR	4964675	CallExpression	obj_align_round ( pfree [ - 1 ] . o_size )		4964409	1					
ANR	4964676	Callee	obj_align_round		4964409	0					
ANR	4964677	Identifier	obj_align_round		4964409	0					
ANR	4964678	ArgumentList	pfree [ - 1 ] . o_size		4964409	1					
ANR	4964679	Argument	pfree [ - 1 ] . o_size		4964409	0					
ANR	4964680	MemberAccess	pfree [ - 1 ] . o_size		4964409	0					
ANR	4964681	ArrayIndexing	pfree [ - 1 ]		4964409	0					
ANR	4964682	Identifier	pfree		4964409	0					
ANR	4964683	UnaryOperationExpression	- 1		4964409	1					
ANR	4964684	UnaryOperator	-		4964409	0					
ANR	4964685	PrimaryExpression	1		4964409	1					
ANR	4964686	Identifier	o_size		4964409	1					
ANR	4964687	IfStatement	if ( ! -- count )		4964409	2					
ANR	4964688	Condition	! -- count	2253:20:72276:72283	4964409	0	True				
ANR	4964689	UnaryOperationExpression	! -- count		4964409	0					
ANR	4964690	UnaryOperator	!		4964409	0					
ANR	4964691	UnaryExpression	-- count		4964409	1					
ANR	4964692	IncDec	--		4964409	0					
ANR	4964693	Identifier	count		4964409	1					
ANR	4964694	BreakStatement	break ;	2254:20:72306:72311	4964409	1	True				
ANR	4964695	ElseStatement	else		4964409	0					
ANR	4964696	ExpressionStatement	ppfprev = ( obj_header_t * * ) pfree	2256:16:72348:72381	4964409	0	True				
ANR	4964697	AssignmentExpression	ppfprev = ( obj_header_t * * ) pfree		4964409	0		=			
ANR	4964698	Identifier	ppfprev		4964409	0					
ANR	4964699	CastExpression	( obj_header_t * * ) pfree		4964409	1					
ANR	4964700	CastTarget	obj_header_t * *		4964409	0					
ANR	4964701	Identifier	pfree		4964409	1					
ANR	4964702	ExpressionStatement	mem -> lost . objects -= ( char * ) top - ( char * ) bottom - removed	2259:4:72403:72460	4964409	8	True				
ANR	4964703	AssignmentExpression	mem -> lost . objects -= ( char * ) top - ( char * ) bottom - removed		4964409	0		-=			
ANR	4964704	MemberAccess	mem -> lost . objects		4964409	0					
ANR	4964705	PtrMemberAccess	mem -> lost		4964409	0					
ANR	4964706	Identifier	mem		4964409	0					
ANR	4964707	Identifier	lost		4964409	1					
ANR	4964708	Identifier	objects		4964409	1					
ANR	4964709	AdditiveExpression	( char * ) top - ( char * ) bottom - removed		4964409	1		-			
ANR	4964710	CastExpression	( char * ) top		4964409	0					
ANR	4964711	CastTarget	char *		4964409	0					
ANR	4964712	Identifier	top		4964409	1					
ANR	4964713	AdditiveExpression	( char * ) bottom - removed		4964409	1		-			
ANR	4964714	CastExpression	( char * ) bottom		4964409	0					
ANR	4964715	CastTarget	char *		4964409	0					
ANR	4964716	Identifier	bottom		4964409	1					
ANR	4964717	Identifier	removed		4964409	1					
ANR	4964718	ReturnType	static void		4964409	1					
ANR	4964719	Identifier	remove_range_from_freelist		4964409	2					
ANR	4964720	ParameterList	"gs_ref_memory_t * mem , void * bottom , void * top"		4964409	3					
ANR	4964721	Parameter	gs_ref_memory_t * mem	2191:27:70302:70321	4964409	0	True				
ANR	4964722	ParameterType	gs_ref_memory_t *		4964409	0					
ANR	4964723	Identifier	mem		4964409	1					
ANR	4964724	Parameter	void * bottom	2191:49:70324:70335	4964409	1	True				
ANR	4964725	ParameterType	void *		4964409	0					
ANR	4964726	Identifier	bottom		4964409	1					
ANR	4964727	Parameter	void * top	2191:63:70338:70346	4964409	2	True				
ANR	4964728	ParameterType	void *		4964409	0					
ANR	4964729	Identifier	top		4964409	1					
ANR	4964730	CFGEntryNode	ENTRY		4964409		True				
ANR	4964731	CFGExitNode	EXIT		4964409		True				
ANR	4964732	InfiniteForNode	true		4964409		True				
ANR	4964733	Symbol	largest		4964409						
ANR	4964734	Symbol	cur		4964409						
ANR	4964735	Symbol	* num_free		4964409						
ANR	4964736	Symbol	obj_align_round		4964409						
ANR	4964737	Symbol	smallest		4964409						
ANR	4964738	Symbol	log2_obj_align_mod		4964409						
ANR	4964739	Symbol	pfree		4964409						
ANR	4964740	Symbol	mem -> freelists		4964409						
ANR	4964741	Symbol	LARGE_FREELIST_INDEX		4964409						
ANR	4964742	Symbol	num_freelists		4964409						
ANR	4964743	Symbol	mem -> lost . objects		4964409						
ANR	4964744	Symbol	* ( obj_header_t * * ) pfree		4964409						
ANR	4964745	Symbol	obj_size_round		4964409						
ANR	4964746	Symbol	PTR_LT		4964409						
ANR	4964747	Symbol	mem		4964409						
ANR	4964748	Symbol	top		4964409						
ANR	4964749	Symbol	cur -> o_size		4964409						
ANR	4964750	Symbol	* cur		4964409						
ANR	4964751	Symbol	* pfree		4964409						
ANR	4964752	Symbol	num_free		4964409						
ANR	4964753	Symbol	PTR_GE		4964409						
ANR	4964754	Symbol	bottom		4964409						
ANR	4964755	Symbol	pfree [ - 1 ] . o_size		4964409						
ANR	4964756	Symbol	count		4964409						
ANR	4964757	Symbol	i		4964409						
ANR	4964758	Symbol	* ppfprev		4964409						
ANR	4964759	Symbol	* i		4964409						
ANR	4964760	Symbol	ppfprev		4964409						
ANR	4964761	Symbol	size		4964409						
ANR	4964762	Symbol	removed		4964409						
ANR	4964763	Symbol	max_freelist_size		4964409						
ANR	4964764	Symbol	mem -> lost		4964409						
ANR	4964765	Symbol	obj_align_mask		4964409						
ANR	4964766	Symbol	* mem		4964409						
ANR	4964767	Function	trim_obj	2263:0:72513:75208							
ANR	4964768	FunctionDef	"trim_obj (gs_ref_memory_t * mem , obj_header_t * obj , uint size , clump_t * cp)"		4964767	0					
ANR	4964769	CompoundStatement		2267:0:72703:75208	4964767	0					
ANR	4964770	IdentifierDeclStatement	uint rounded_size = obj_align_round ( size ) ;	2268:4:72709:72750	4964767	0	True				
ANR	4964771	IdentifierDecl	rounded_size = obj_align_round ( size )		4964767	0					
ANR	4964772	IdentifierDeclType	uint		4964767	0					
ANR	4964773	Identifier	rounded_size		4964767	1					
ANR	4964774	AssignmentExpression	rounded_size = obj_align_round ( size )		4964767	2		=			
ANR	4964775	Identifier	rounded_size		4964767	0					
ANR	4964776	CallExpression	obj_align_round ( size )		4964767	1					
ANR	4964777	Callee	obj_align_round		4964767	0					
ANR	4964778	Identifier	obj_align_round		4964767	0					
ANR	4964779	ArgumentList	size		4964767	1					
ANR	4964780	Argument	size		4964767	0					
ANR	4964781	Identifier	size		4964767	0					
ANR	4964782	IdentifierDeclStatement	obj_header_t * pre_obj = obj - 1 ;	2269:4:72756:72787	4964767	1	True				
ANR	4964783	IdentifierDecl	* pre_obj = obj - 1		4964767	0					
ANR	4964784	IdentifierDeclType	obj_header_t *		4964767	0					
ANR	4964785	Identifier	pre_obj		4964767	1					
ANR	4964786	AssignmentExpression	* pre_obj = obj - 1		4964767	2		=			
ANR	4964787	Identifier	pre_obj		4964767	0					
ANR	4964788	AdditiveExpression	obj - 1		4964767	1		-			
ANR	4964789	Identifier	obj		4964767	0					
ANR	4964790	PrimaryExpression	1		4964767	1					
ANR	4964791	IdentifierDeclStatement	obj_header_t * excess_pre = ( obj_header_t * ) ( ( char * ) obj + rounded_size ) ;	2270:4:72793:72862	4964767	2	True				
ANR	4964792	IdentifierDecl	* excess_pre = ( obj_header_t * ) ( ( char * ) obj + rounded_size )		4964767	0					
ANR	4964793	IdentifierDeclType	obj_header_t *		4964767	0					
ANR	4964794	Identifier	excess_pre		4964767	1					
ANR	4964795	AssignmentExpression	* excess_pre = ( obj_header_t * ) ( ( char * ) obj + rounded_size )		4964767	2		=			
ANR	4964796	Identifier	excess_pre		4964767	0					
ANR	4964797	CastExpression	( obj_header_t * ) ( ( char * ) obj + rounded_size )		4964767	1					
ANR	4964798	CastTarget	obj_header_t *		4964767	0					
ANR	4964799	AdditiveExpression	( char * ) obj + rounded_size		4964767	1		+			
ANR	4964800	CastExpression	( char * ) obj		4964767	0					
ANR	4964801	CastTarget	char *		4964767	0					
ANR	4964802	Identifier	obj		4964767	1					
ANR	4964803	Identifier	rounded_size		4964767	1					
ANR	4964804	IdentifierDeclStatement	uint old_rounded_size = obj_align_round ( pre_obj -> o_size ) ;	2271:4:72868:72924	4964767	3	True				
ANR	4964805	IdentifierDecl	old_rounded_size = obj_align_round ( pre_obj -> o_size )		4964767	0					
ANR	4964806	IdentifierDeclType	uint		4964767	0					
ANR	4964807	Identifier	old_rounded_size		4964767	1					
ANR	4964808	AssignmentExpression	old_rounded_size = obj_align_round ( pre_obj -> o_size )		4964767	2		=			
ANR	4964809	Identifier	old_rounded_size		4964767	0					
ANR	4964810	CallExpression	obj_align_round ( pre_obj -> o_size )		4964767	1					
ANR	4964811	Callee	obj_align_round		4964767	0					
ANR	4964812	Identifier	obj_align_round		4964767	0					
ANR	4964813	ArgumentList	pre_obj -> o_size		4964767	1					
ANR	4964814	Argument	pre_obj -> o_size		4964767	0					
ANR	4964815	PtrMemberAccess	pre_obj -> o_size		4964767	0					
ANR	4964816	Identifier	pre_obj		4964767	0					
ANR	4964817	Identifier	o_size		4964767	1					
ANR	4964818	IdentifierDeclStatement	uint excess_size = old_rounded_size - rounded_size - sizeof ( obj_header_t ) ;	2272:4:72930:73003	4964767	4	True				
ANR	4964819	IdentifierDecl	excess_size = old_rounded_size - rounded_size - sizeof ( obj_header_t )		4964767	0					
ANR	4964820	IdentifierDeclType	uint		4964767	0					
ANR	4964821	Identifier	excess_size		4964767	1					
ANR	4964822	AssignmentExpression	excess_size = old_rounded_size - rounded_size - sizeof ( obj_header_t )		4964767	2		=			
ANR	4964823	Identifier	excess_size		4964767	0					
ANR	4964824	AdditiveExpression	old_rounded_size - rounded_size - sizeof ( obj_header_t )		4964767	1		-			
ANR	4964825	Identifier	old_rounded_size		4964767	0					
ANR	4964826	AdditiveExpression	rounded_size - sizeof ( obj_header_t )		4964767	1		-			
ANR	4964827	Identifier	rounded_size		4964767	0					
ANR	4964828	SizeofExpression	sizeof ( obj_header_t )		4964767	1					
ANR	4964829	Sizeof	sizeof		4964767	0					
ANR	4964830	SizeofOperand	obj_header_t		4964767	1					
ANR	4964831	ExpressionStatement	pre_obj -> o_size = size	2275:4:73050:73072	4964767	5	True				
ANR	4964832	AssignmentExpression	pre_obj -> o_size = size		4964767	0		=			
ANR	4964833	PtrMemberAccess	pre_obj -> o_size		4964767	0					
ANR	4964834	Identifier	pre_obj		4964767	0					
ANR	4964835	Identifier	o_size		4964767	1					
ANR	4964836	Identifier	size		4964767	1					
ANR	4964837	IfStatement	if ( old_rounded_size == rounded_size )		4964767	6					
ANR	4964838	Condition	old_rounded_size == rounded_size	2276:8:73082:73113	4964767	0	True				
ANR	4964839	EqualityExpression	old_rounded_size == rounded_size		4964767	0		==			
ANR	4964840	Identifier	old_rounded_size		4964767	0					
ANR	4964841	Identifier	rounded_size		4964767	1					
ANR	4964842	ReturnStatement	return ;	2277:8:73124:73130	4964767	1	True				
ANR	4964843	IfStatement	if ( pre_obj -> o_alone )		4964767	7					
ANR	4964844	Condition	pre_obj -> o_alone	2282:8:73281:73296	4964767	0	True				
ANR	4964845	PtrMemberAccess	pre_obj -> o_alone		4964767	0					
ANR	4964846	Identifier	pre_obj		4964767	0					
ANR	4964847	Identifier	o_alone		4964767	1					
ANR	4964848	CompoundStatement		16:26:595:595	4964767	1					
ANR	4964849	IfStatement	if ( ! cp )		4964767	0					
ANR	4964850	Condition	! cp	2283:12:73313:73315	4964767	0	True				
ANR	4964851	UnaryOperationExpression	! cp		4964767	0					
ANR	4964852	UnaryOperator	!		4964767	0					
ANR	4964853	Identifier	cp		4964767	1					
ANR	4964854	CompoundStatement		17:17:614:614	4964767	1					
ANR	4964855	ExpressionStatement	mem -> cfreed . memory = mem	2284:12:73332:73356	4964767	0	True				
ANR	4964856	AssignmentExpression	mem -> cfreed . memory = mem		4964767	0		=			
ANR	4964857	MemberAccess	mem -> cfreed . memory		4964767	0					
ANR	4964858	PtrMemberAccess	mem -> cfreed		4964767	0					
ANR	4964859	Identifier	mem		4964767	0					
ANR	4964860	Identifier	cfreed		4964767	1					
ANR	4964861	Identifier	memory		4964767	1					
ANR	4964862	Identifier	mem		4964767	1					
ANR	4964863	IfStatement	"if ( clump_locate ( obj , & mem -> cfreed ) )"		4964767	1					
ANR	4964864	Condition	"clump_locate ( obj , & mem -> cfreed )"	2285:16:73374:73404	4964767	0	True				
ANR	4964865	CallExpression	"clump_locate ( obj , & mem -> cfreed )"		4964767	0					
ANR	4964866	Callee	clump_locate		4964767	0					
ANR	4964867	Identifier	clump_locate		4964767	0					
ANR	4964868	ArgumentList	obj		4964767	1					
ANR	4964869	Argument	obj		4964767	0					
ANR	4964870	Identifier	obj		4964767	0					
ANR	4964871	Argument	& mem -> cfreed		4964767	1					
ANR	4964872	UnaryOperationExpression	& mem -> cfreed		4964767	0					
ANR	4964873	UnaryOperator	&		4964767	0					
ANR	4964874	PtrMemberAccess	mem -> cfreed		4964767	1					
ANR	4964875	Identifier	mem		4964767	0					
ANR	4964876	Identifier	cfreed		4964767	1					
ANR	4964877	CompoundStatement		19:49:703:703	4964767	1					
ANR	4964878	ExpressionStatement	cp = mem -> cfreed . cp	2286:16:73425:73444	4964767	0	True				
ANR	4964879	AssignmentExpression	cp = mem -> cfreed . cp		4964767	0		=			
ANR	4964880	Identifier	cp		4964767	0					
ANR	4964881	MemberAccess	mem -> cfreed . cp		4964767	1					
ANR	4964882	PtrMemberAccess	mem -> cfreed		4964767	0					
ANR	4964883	Identifier	mem		4964767	0					
ANR	4964884	Identifier	cfreed		4964767	1					
ANR	4964885	Identifier	cp		4964767	1					
ANR	4964886	IfStatement	if ( cp )		4964767	1					
ANR	4964887	Condition	cp	2289:12:73482:73483	4964767	0	True				
ANR	4964888	Identifier	cp		4964767	0					
ANR	4964889	CompoundStatement		23:16:782:782	4964767	1					
ANR	4964890	IfStatement	if ( cp -> cbot != ( byte * ) obj + old_rounded_size )		4964767	0					
ANR	4964891	Condition	cp -> cbot != ( byte * ) obj + old_rounded_size	2291:16:73517:73558	4964767	0	True				
ANR	4964892	EqualityExpression	cp -> cbot != ( byte * ) obj + old_rounded_size		4964767	0		!=			
ANR	4964893	PtrMemberAccess	cp -> cbot		4964767	0					
ANR	4964894	Identifier	cp		4964767	0					
ANR	4964895	Identifier	cbot		4964767	1					
ANR	4964896	AdditiveExpression	( byte * ) obj + old_rounded_size		4964767	1		+			
ANR	4964897	CastExpression	( byte * ) obj		4964767	0					
ANR	4964898	CastTarget	byte *		4964767	0					
ANR	4964899	Identifier	obj		4964767	1					
ANR	4964900	Identifier	old_rounded_size		4964767	1					
ANR	4964901	CompoundStatement		25:60:857:857	4964767	1					
ANR	4964902	ExpressionStatement	"lprintf3 ( ""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"" , ( ulong ) obj , old_rounded_size , size )"	2292:16:73579:73707	4964767	0	True				
ANR	4964903	CallExpression	"lprintf3 ( ""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"" , ( ulong ) obj , old_rounded_size , size )"		4964767	0					
ANR	4964904	Callee	lprintf3		4964767	0					
ANR	4964905	Identifier	lprintf3		4964767	0					
ANR	4964906	ArgumentList	"""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"""		4964767	1					
ANR	4964907	Argument	"""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"""		4964767	0					
ANR	4964908	PrimaryExpression	"""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"""		4964767	0					
ANR	4964909	Argument	( ulong ) obj		4964767	1					
ANR	4964910	CastExpression	( ulong ) obj		4964767	0					
ANR	4964911	CastTarget	ulong		4964767	0					
ANR	4964912	Identifier	obj		4964767	1					
ANR	4964913	Argument	old_rounded_size		4964767	2					
ANR	4964914	Identifier	old_rounded_size		4964767	0					
ANR	4964915	Argument	size		4964767	3					
ANR	4964916	Identifier	size		4964767	0					
ANR	4964917	ElseStatement	else		4964767	0					
ANR	4964918	CompoundStatement		31:16:1078:1078	4964767	0					
ANR	4964919	ExpressionStatement	cp -> cbot = ( byte * ) excess_pre	2298:20:73804:73833	4964767	0	True				
ANR	4964920	AssignmentExpression	cp -> cbot = ( byte * ) excess_pre		4964767	0		=			
ANR	4964921	PtrMemberAccess	cp -> cbot		4964767	0					
ANR	4964922	Identifier	cp		4964767	0					
ANR	4964923	Identifier	cbot		4964767	1					
ANR	4964924	CastExpression	( byte * ) excess_pre		4964767	1					
ANR	4964925	CastTarget	byte *		4964767	0					
ANR	4964926	Identifier	excess_pre		4964767	1					
ANR	4964927	ReturnStatement	return ;	2299:20:73855:73861	4964767	1	True				
ANR	4964928	ExpressionStatement	pre_obj -> o_pad = 0	2306:8:74035:74053	4964767	2	True				
ANR	4964929	AssignmentExpression	pre_obj -> o_pad = 0		4964767	0		=			
ANR	4964930	PtrMemberAccess	pre_obj -> o_pad		4964767	0					
ANR	4964931	Identifier	pre_obj		4964767	0					
ANR	4964932	Identifier	o_pad		4964767	1					
ANR	4964933	PrimaryExpression	0		4964767	1					
ANR	4964934	ExpressionStatement	pre_obj -> o_alone = 0	2307:8:74063:74083	4964767	3	True				
ANR	4964935	AssignmentExpression	pre_obj -> o_alone = 0		4964767	0		=			
ANR	4964936	PtrMemberAccess	pre_obj -> o_alone		4964767	0					
ANR	4964937	Identifier	pre_obj		4964767	0					
ANR	4964938	Identifier	o_alone		4964767	1					
ANR	4964939	PrimaryExpression	0		4964767	1					
ANR	4964940	ExpressionStatement	excess_pre -> o_type = & st_free	2310:4:74131:74160	4964767	8	True				
ANR	4964941	AssignmentExpression	excess_pre -> o_type = & st_free		4964767	0		=			
ANR	4964942	PtrMemberAccess	excess_pre -> o_type		4964767	0					
ANR	4964943	Identifier	excess_pre		4964767	0					
ANR	4964944	Identifier	o_type		4964767	1					
ANR	4964945	UnaryOperationExpression	& st_free		4964767	1					
ANR	4964946	UnaryOperator	&		4964767	0					
ANR	4964947	Identifier	st_free		4964767	1					
ANR	4964948	ExpressionStatement	excess_pre -> o_size = excess_size	2311:4:74190:74222	4964767	9	True				
ANR	4964949	AssignmentExpression	excess_pre -> o_size = excess_size		4964767	0		=			
ANR	4964950	PtrMemberAccess	excess_pre -> o_size		4964767	0					
ANR	4964951	Identifier	excess_pre		4964767	0					
ANR	4964952	Identifier	o_size		4964767	1					
ANR	4964953	Identifier	excess_size		4964767	1					
ANR	4964954	ExpressionStatement	excess_pre -> o_pad = 0	2312:4:74228:74249	4964767	10	True				
ANR	4964955	AssignmentExpression	excess_pre -> o_pad = 0		4964767	0		=			
ANR	4964956	PtrMemberAccess	excess_pre -> o_pad		4964767	0					
ANR	4964957	Identifier	excess_pre		4964767	0					
ANR	4964958	Identifier	o_pad		4964767	1					
ANR	4964959	PrimaryExpression	0		4964767	1					
ANR	4964960	ExpressionStatement	excess_pre -> o_alone = 0	2313:4:74255:74278	4964767	11	True				
ANR	4964961	AssignmentExpression	excess_pre -> o_alone = 0		4964767	0		=			
ANR	4964962	PtrMemberAccess	excess_pre -> o_alone		4964767	0					
ANR	4964963	Identifier	excess_pre		4964767	0					
ANR	4964964	Identifier	o_alone		4964767	1					
ANR	4964965	PrimaryExpression	0		4964767	1					
ANR	4964966	IfStatement	if ( excess_size >= obj_align_mod )		4964767	12					
ANR	4964967	Condition	excess_size >= obj_align_mod	2314:8:74288:74315	4964767	0	True				
ANR	4964968	RelationalExpression	excess_size >= obj_align_mod		4964767	0		>=			
ANR	4964969	Identifier	excess_size		4964767	0					
ANR	4964970	Identifier	obj_align_mod		4964767	1					
ANR	4964971	CompoundStatement		50:8:1670:1688	4964767	1					
ANR	4964972	IdentifierDeclStatement	obj_header_t * * pfl ;	2316:8:74374:74392	4964767	0	True				
ANR	4964973	IdentifierDecl	* * pfl		4964767	0					
ANR	4964974	IdentifierDeclType	obj_header_t * *		4964767	0					
ANR	4964975	Identifier	pfl		4964767	1					
ANR	4964976	IfStatement	if ( mem -> cc && ( byte * ) excess_pre >= mem -> cc -> int_freed_top )		4964767	1					
ANR	4964977	Condition	mem -> cc && ( byte * ) excess_pre >= mem -> cc -> int_freed_top	2318:12:74407:74461	4964767	0	True				
ANR	4964978	AndExpression	mem -> cc && ( byte * ) excess_pre >= mem -> cc -> int_freed_top		4964767	0		&&			
ANR	4964979	PtrMemberAccess	mem -> cc		4964767	0					
ANR	4964980	Identifier	mem		4964767	0					
ANR	4964981	Identifier	cc		4964767	1					
ANR	4964982	RelationalExpression	( byte * ) excess_pre >= mem -> cc -> int_freed_top		4964767	1		>=			
ANR	4964983	CastExpression	( byte * ) excess_pre		4964767	0					
ANR	4964984	CastTarget	byte *		4964767	0					
ANR	4964985	Identifier	excess_pre		4964767	1					
ANR	4964986	PtrMemberAccess	mem -> cc -> int_freed_top		4964767	1					
ANR	4964987	PtrMemberAccess	mem -> cc		4964767	0					
ANR	4964988	Identifier	mem		4964767	0					
ANR	4964989	Identifier	cc		4964767	1					
ANR	4964990	Identifier	int_freed_top		4964767	1					
ANR	4964991	ExpressionStatement	mem -> cc -> int_freed_top = ( byte * ) excess_pre + excess_size	2319:12:74476:74533	4964767	1	True				
ANR	4964992	AssignmentExpression	mem -> cc -> int_freed_top = ( byte * ) excess_pre + excess_size		4964767	0		=			
ANR	4964993	PtrMemberAccess	mem -> cc -> int_freed_top		4964767	0					
ANR	4964994	PtrMemberAccess	mem -> cc		4964767	0					
ANR	4964995	Identifier	mem		4964767	0					
ANR	4964996	Identifier	cc		4964767	1					
ANR	4964997	Identifier	int_freed_top		4964767	1					
ANR	4964998	AdditiveExpression	( byte * ) excess_pre + excess_size		4964767	1		+			
ANR	4964999	CastExpression	( byte * ) excess_pre		4964767	0					
ANR	4965000	CastTarget	byte *		4964767	0					
ANR	4965001	Identifier	excess_pre		4964767	1					
ANR	4965002	Identifier	excess_size		4964767	1					
ANR	4965003	IfStatement	if ( excess_size <= max_freelist_size )		4964767	2					
ANR	4965004	Condition	excess_size <= max_freelist_size	2320:12:74547:74578	4964767	0	True				
ANR	4965005	RelationalExpression	excess_size <= max_freelist_size		4964767	0		<=			
ANR	4965006	Identifier	excess_size		4964767	0					
ANR	4965007	Identifier	max_freelist_size		4964767	1					
ANR	4965008	ExpressionStatement	pfl = & mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]	2321:12:74593:74701	4964767	1	True				
ANR	4965009	AssignmentExpression	pfl = & mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]		4964767	0		=			
ANR	4965010	Identifier	pfl		4964767	0					
ANR	4965011	UnaryOperationExpression	& mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]		4964767	1					
ANR	4965012	UnaryOperator	&		4964767	0					
ANR	4965013	ArrayIndexing	mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]		4964767	1					
ANR	4965014	PtrMemberAccess	mem -> freelists		4964767	0					
ANR	4965015	Identifier	mem		4964767	0					
ANR	4965016	Identifier	freelists		4964767	1					
ANR	4965017	ShiftExpression	( excess_size + obj_align_mask ) >> log2_obj_align_mod		4964767	1		>>			
ANR	4965018	AdditiveExpression	excess_size + obj_align_mask		4964767	0		+			
ANR	4965019	Identifier	excess_size		4964767	0					
ANR	4965020	Identifier	obj_align_mask		4964767	1					
ANR	4965021	Identifier	log2_obj_align_mod		4964767	1					
ANR	4965022	ElseStatement	else		4964767	0					
ANR	4965023	CompoundStatement		58:12:2026:2074	4964767	0					
ANR	4965024	IdentifierDeclStatement	uint rounded_size = obj_align_round ( excess_size ) ;	2324:12:74730:74778	4964767	0	True				
ANR	4965025	IdentifierDecl	rounded_size = obj_align_round ( excess_size )		4964767	0					
ANR	4965026	IdentifierDeclType	uint		4964767	0					
ANR	4965027	Identifier	rounded_size		4964767	1					
ANR	4965028	AssignmentExpression	rounded_size = obj_align_round ( excess_size )		4964767	2		=			
ANR	4965029	Identifier	rounded_size		4964767	0					
ANR	4965030	CallExpression	obj_align_round ( excess_size )		4964767	1					
ANR	4965031	Callee	obj_align_round		4964767	0					
ANR	4965032	Identifier	obj_align_round		4964767	0					
ANR	4965033	ArgumentList	excess_size		4964767	1					
ANR	4965034	Argument	excess_size		4964767	0					
ANR	4965035	Identifier	excess_size		4964767	0					
ANR	4965036	ExpressionStatement	pfl = & mem -> freelists [ LARGE_FREELIST_INDEX ]	2326:12:74793:74836	4964767	1	True				
ANR	4965037	AssignmentExpression	pfl = & mem -> freelists [ LARGE_FREELIST_INDEX ]		4964767	0		=			
ANR	4965038	Identifier	pfl		4964767	0					
ANR	4965039	UnaryOperationExpression	& mem -> freelists [ LARGE_FREELIST_INDEX ]		4964767	1					
ANR	4965040	UnaryOperator	&		4964767	0					
ANR	4965041	ArrayIndexing	mem -> freelists [ LARGE_FREELIST_INDEX ]		4964767	1					
ANR	4965042	PtrMemberAccess	mem -> freelists		4964767	0					
ANR	4965043	Identifier	mem		4964767	0					
ANR	4965044	Identifier	freelists		4964767	1					
ANR	4965045	Identifier	LARGE_FREELIST_INDEX		4964767	1					
ANR	4965046	IfStatement	if ( rounded_size > mem -> largest_free_size )		4964767	2					
ANR	4965047	Condition	rounded_size > mem -> largest_free_size	2327:16:74854:74890	4964767	0	True				
ANR	4965048	RelationalExpression	rounded_size > mem -> largest_free_size		4964767	0		>			
ANR	4965049	Identifier	rounded_size		4964767	0					
ANR	4965050	PtrMemberAccess	mem -> largest_free_size		4964767	1					
ANR	4965051	Identifier	mem		4964767	0					
ANR	4965052	Identifier	largest_free_size		4964767	1					
ANR	4965053	ExpressionStatement	mem -> largest_free_size = rounded_size	2328:16:74909:74946	4964767	1	True				
ANR	4965054	AssignmentExpression	mem -> largest_free_size = rounded_size		4964767	0		=			
ANR	4965055	PtrMemberAccess	mem -> largest_free_size		4964767	0					
ANR	4965056	Identifier	mem		4964767	0					
ANR	4965057	Identifier	largest_free_size		4964767	1					
ANR	4965058	Identifier	rounded_size		4964767	1					
ANR	4965059	ExpressionStatement	* ( obj_header_t * * ) ( excess_pre + 1 ) = * pfl	2330:8:74966:75008	4964767	3	True				
ANR	4965060	AssignmentExpression	* ( obj_header_t * * ) ( excess_pre + 1 ) = * pfl		4964767	0		=			
ANR	4965061	UnaryOperationExpression	* ( obj_header_t * * ) ( excess_pre + 1 )		4964767	0					
ANR	4965062	UnaryOperator	*		4964767	0					
ANR	4965063	CastExpression	( obj_header_t * * ) ( excess_pre + 1 )		4964767	1					
ANR	4965064	CastTarget	obj_header_t * *		4964767	0					
ANR	4965065	AdditiveExpression	excess_pre + 1		4964767	1		+			
ANR	4965066	Identifier	excess_pre		4964767	0					
ANR	4965067	PrimaryExpression	1		4964767	1					
ANR	4965068	UnaryOperationExpression	* pfl		4964767	1					
ANR	4965069	UnaryOperator	*		4964767	0					
ANR	4965070	Identifier	pfl		4964767	1					
ANR	4965071	ExpressionStatement	* pfl = excess_pre + 1	2331:8:75018:75039	4964767	4	True				
ANR	4965072	AssignmentExpression	* pfl = excess_pre + 1		4964767	0		=			
ANR	4965073	UnaryOperationExpression	* pfl		4964767	0					
ANR	4965074	UnaryOperator	*		4964767	0					
ANR	4965075	Identifier	pfl		4964767	1					
ANR	4965076	AdditiveExpression	excess_pre + 1		4964767	1		+			
ANR	4965077	Identifier	excess_pre		4964767	0					
ANR	4965078	PrimaryExpression	1		4964767	1					
ANR	4965079	ExpressionStatement	mem -> cfreed . memory = mem	2332:8:75049:75073	4964767	5	True				
ANR	4965080	AssignmentExpression	mem -> cfreed . memory = mem		4964767	0		=			
ANR	4965081	MemberAccess	mem -> cfreed . memory		4964767	0					
ANR	4965082	PtrMemberAccess	mem -> cfreed		4964767	0					
ANR	4965083	Identifier	mem		4964767	0					
ANR	4965084	Identifier	cfreed		4964767	1					
ANR	4965085	Identifier	memory		4964767	1					
ANR	4965086	Identifier	mem		4964767	1					
ANR	4965087	ElseStatement	else		4964767	0					
ANR	4965088	CompoundStatement		67:11:2382:2382	4964767	0					
ANR	4965089	ExpressionStatement	mem -> lost . objects += excess_size + sizeof ( obj_header_t )	2335:8:75145:75200	4964767	0	True				
ANR	4965090	AssignmentExpression	mem -> lost . objects += excess_size + sizeof ( obj_header_t )		4964767	0		+=			
ANR	4965091	MemberAccess	mem -> lost . objects		4964767	0					
ANR	4965092	PtrMemberAccess	mem -> lost		4964767	0					
ANR	4965093	Identifier	mem		4964767	0					
ANR	4965094	Identifier	lost		4964767	1					
ANR	4965095	Identifier	objects		4964767	1					
ANR	4965096	AdditiveExpression	excess_size + sizeof ( obj_header_t )		4964767	1		+			
ANR	4965097	Identifier	excess_size		4964767	0					
ANR	4965098	SizeofExpression	sizeof ( obj_header_t )		4964767	1					
ANR	4965099	Sizeof	sizeof		4964767	0					
ANR	4965100	SizeofOperand	obj_header_t		4964767	1					
ANR	4965101	ReturnType	static void		4964767	1					
ANR	4965102	Identifier	trim_obj		4964767	2					
ANR	4965103	ParameterList	"gs_ref_memory_t * mem , obj_header_t * obj , uint size , clump_t * cp"		4964767	3					
ANR	4965104	Parameter	gs_ref_memory_t * mem	2264:9:72534:72553	4964767	0	True				
ANR	4965105	ParameterType	gs_ref_memory_t *		4964767	0					
ANR	4965106	Identifier	mem		4964767	1					
ANR	4965107	Parameter	obj_header_t * obj	2264:31:72556:72572	4964767	1	True				
ANR	4965108	ParameterType	obj_header_t *		4964767	0					
ANR	4965109	Identifier	obj		4964767	1					
ANR	4965110	Parameter	uint size	2264:50:72575:72583	4964767	2	True				
ANR	4965111	ParameterType	uint		4964767	0					
ANR	4965112	Identifier	size		4964767	1					
ANR	4965113	Parameter	clump_t * cp	2264:61:72586:72596	4964767	3	True				
ANR	4965114	ParameterType	clump_t *		4964767	0					
ANR	4965115	Identifier	cp		4964767	1					
ANR	4965116	CFGEntryNode	ENTRY		4964767		True				
ANR	4965117	CFGExitNode	EXIT		4964767		True				
ANR	4965118	Symbol	pre_obj -> o_alone		4964767						
ANR	4965119	Symbol	old_rounded_size		4964767						
ANR	4965120	Symbol	excess_size		4964767						
ANR	4965121	Symbol	obj_align_round		4964767						
ANR	4965122	Symbol	log2_obj_align_mod		4964767						
ANR	4965123	Symbol	mem -> freelists		4964767						
ANR	4965124	Symbol	& st_free		4964767						
ANR	4965125	Symbol	excess_pre -> o_type		4964767						
ANR	4965126	Symbol	excess_pre -> o_pad		4964767						
ANR	4965127	Symbol	* mem -> cc		4964767						
ANR	4965128	Symbol	LARGE_FREELIST_INDEX		4964767						
ANR	4965129	Symbol	mem -> cfreed . cp		4964767						
ANR	4965130	Symbol	mem -> lost . objects		4964767						
ANR	4965131	Symbol	excess_pre -> o_size		4964767						
ANR	4965132	Symbol	rounded_size		4964767						
ANR	4965133	Symbol	excess_pre -> o_alone		4964767						
ANR	4965134	Symbol	pre_obj -> o_pad		4964767						
ANR	4965135	Symbol	pre_obj -> o_size		4964767						
ANR	4965136	Symbol	cp -> cbot		4964767						
ANR	4965137	Symbol	mem		4964767						
ANR	4965138	Symbol	mem -> cc		4964767						
ANR	4965139	Symbol	mem -> cfreed . memory		4964767						
ANR	4965140	Symbol	obj_align_mod		4964767						
ANR	4965141	Symbol	* pfl		4964767						
ANR	4965142	Symbol	pre_obj		4964767						
ANR	4965143	Symbol	* ( obj_header_t * * ) ( excess_pre + 1 )		4964767						
ANR	4965144	Symbol	mem -> cc -> int_freed_top		4964767						
ANR	4965145	Symbol	* * mem		4964767						
ANR	4965146	Symbol	mem -> largest_free_size		4964767						
ANR	4965147	Symbol	& mem -> cfreed		4964767						
ANR	4965148	Symbol	cp		4964767						
ANR	4965149	Symbol	clump_locate		4964767						
ANR	4965150	Symbol	excess_pre		4964767						
ANR	4965151	Symbol	* cp		4964767						
ANR	4965152	Symbol	mem -> cfreed		4964767						
ANR	4965153	Symbol	size		4964767						
ANR	4965154	Symbol	max_freelist_size		4964767						
ANR	4965155	Symbol	mem -> lost		4964767						
ANR	4965156	Symbol	obj		4964767						
ANR	4965157	Symbol	pfl		4964767						
ANR	4965158	Symbol	* pre_obj		4964767						
ANR	4965159	Symbol	obj_align_mask		4964767						
ANR	4965160	Symbol	* excess_pre		4964767						
ANR	4965161	Symbol	* mem		4964767						
ANR	4965162	Function	i_register_root	2342:0:75281:76030							
ANR	4965163	FunctionDef	"i_register_root (gs_memory_t * mem , gs_gc_root_t * rp , gs_ptr_type_t ptype , void * * up , client_name_t cname)"		4965162	0					
ANR	4965164	CompoundStatement		2345:0:75415:76030	4965162	0					
ANR	4965165	Statement	gs_ref_memory_t	2346:4:75421:75435	4965162	0	True				
ANR	4965166	Statement	*	2346:20:75437:75437	4965162	1	True				
ANR	4965167	Statement	const	2346:22:75439:75443	4965162	2	True				
ANR	4965168	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	2346:28:75445:75474	4965162	3	True				
ANR	4965169	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4965162	0		=			
ANR	4965170	Identifier	imem		4965162	0					
ANR	4965171	CastExpression	( gs_ref_memory_t * ) mem		4965162	1					
ANR	4965172	CastTarget	gs_ref_memory_t *		4965162	0					
ANR	4965173	Identifier	mem		4965162	1					
ANR	4965174	IfStatement	if ( rp == NULL )		4965162	4					
ANR	4965175	Condition	rp == NULL	2348:8:75485:75494	4965162	0	True				
ANR	4965176	EqualityExpression	rp == NULL		4965162	0		==			
ANR	4965177	Identifier	rp		4965162	0					
ANR	4965178	Identifier	NULL		4965162	1					
ANR	4965179	CompoundStatement		4:20:81:81	4965162	1					
ANR	4965180	ExpressionStatement	"rp = gs_raw_alloc_struct_immovable ( imem -> non_gc_memory , & st_gc_root_t , ""i_register_root"" )"	2349:8:75507:75639	4965162	0	True				
ANR	4965181	AssignmentExpression	"rp = gs_raw_alloc_struct_immovable ( imem -> non_gc_memory , & st_gc_root_t , ""i_register_root"" )"		4965162	0		=			
ANR	4965182	Identifier	rp		4965162	0					
ANR	4965183	CallExpression	"gs_raw_alloc_struct_immovable ( imem -> non_gc_memory , & st_gc_root_t , ""i_register_root"" )"		4965162	1					
ANR	4965184	Callee	gs_raw_alloc_struct_immovable		4965162	0					
ANR	4965185	Identifier	gs_raw_alloc_struct_immovable		4965162	0					
ANR	4965186	ArgumentList	imem -> non_gc_memory		4965162	1					
ANR	4965187	Argument	imem -> non_gc_memory		4965162	0					
ANR	4965188	PtrMemberAccess	imem -> non_gc_memory		4965162	0					
ANR	4965189	Identifier	imem		4965162	0					
ANR	4965190	Identifier	non_gc_memory		4965162	1					
ANR	4965191	Argument	& st_gc_root_t		4965162	1					
ANR	4965192	UnaryOperationExpression	& st_gc_root_t		4965162	0					
ANR	4965193	UnaryOperator	&		4965162	0					
ANR	4965194	Identifier	st_gc_root_t		4965162	1					
ANR	4965195	Argument	"""i_register_root"""		4965162	2					
ANR	4965196	PrimaryExpression	"""i_register_root"""		4965162	0					
ANR	4965197	IfStatement	if ( rp == 0 )		4965162	1					
ANR	4965198	Condition	rp == 0	2351:12:75653:75659	4965162	0	True				
ANR	4965199	EqualityExpression	rp == 0		4965162	0		==			
ANR	4965200	Identifier	rp		4965162	0					
ANR	4965201	PrimaryExpression	0		4965162	1					
ANR	4965202	ExpressionStatement	return_error ( gs_error_VMerror )	2352:12:75674:75704	4965162	1	True				
ANR	4965203	CallExpression	return_error ( gs_error_VMerror )		4965162	0					
ANR	4965204	Callee	return_error		4965162	0					
ANR	4965205	Identifier	return_error		4965162	0					
ANR	4965206	ArgumentList	gs_error_VMerror		4965162	1					
ANR	4965207	Argument	gs_error_VMerror		4965162	0					
ANR	4965208	Identifier	gs_error_VMerror		4965162	0					
ANR	4965209	ExpressionStatement	rp -> free_on_unregister = true	2353:8:75714:75743	4965162	2	True				
ANR	4965210	AssignmentExpression	rp -> free_on_unregister = true		4965162	0		=			
ANR	4965211	PtrMemberAccess	rp -> free_on_unregister		4965162	0					
ANR	4965212	Identifier	rp		4965162	0					
ANR	4965213	Identifier	free_on_unregister		4965162	1					
ANR	4965214	Identifier	true		4965162	1					
ANR	4965215	ElseStatement	else		4965162	0					
ANR	4965216	ExpressionStatement	rp -> free_on_unregister = false	2355:8:75764:75794	4965162	0	True				
ANR	4965217	AssignmentExpression	rp -> free_on_unregister = false		4965162	0		=			
ANR	4965218	PtrMemberAccess	rp -> free_on_unregister		4965162	0					
ANR	4965219	Identifier	rp		4965162	0					
ANR	4965220	Identifier	free_on_unregister		4965162	1					
ANR	4965221	Identifier	false		4965162	1					
ANR	4965222	ExpressionStatement	"if_debug3m ( '8' , mem , ""[8]register root(%s) 0x%lx -> 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp , ( ulong ) up )"	2356:4:75800:75925	4965162	5	True				
ANR	4965223	CallExpression	"if_debug3m ( '8' , mem , ""[8]register root(%s) 0x%lx -> 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp , ( ulong ) up )"		4965162	0					
ANR	4965224	Callee	if_debug3m		4965162	0					
ANR	4965225	Identifier	if_debug3m		4965162	0					
ANR	4965226	ArgumentList	'8'		4965162	1					
ANR	4965227	Argument	'8'		4965162	0					
ANR	4965228	PrimaryExpression	'8'		4965162	0					
ANR	4965229	Argument	mem		4965162	1					
ANR	4965230	Identifier	mem		4965162	0					
ANR	4965231	Argument	"""[8]register root(%s) 0x%lx -> 0x%lx\\n"""		4965162	2					
ANR	4965232	PrimaryExpression	"""[8]register root(%s) 0x%lx -> 0x%lx\\n"""		4965162	0					
ANR	4965233	Argument	client_name_string ( cname )		4965162	3					
ANR	4965234	CallExpression	client_name_string ( cname )		4965162	0					
ANR	4965235	Callee	client_name_string		4965162	0					
ANR	4965236	Identifier	client_name_string		4965162	0					
ANR	4965237	ArgumentList	cname		4965162	1					
ANR	4965238	Argument	cname		4965162	0					
ANR	4965239	Identifier	cname		4965162	0					
ANR	4965240	Argument	( ulong ) rp		4965162	4					
ANR	4965241	CastExpression	( ulong ) rp		4965162	0					
ANR	4965242	CastTarget	ulong		4965162	0					
ANR	4965243	Identifier	rp		4965162	1					
ANR	4965244	Argument	( ulong ) up		4965162	5					
ANR	4965245	CastExpression	( ulong ) up		4965162	0					
ANR	4965246	CastTarget	ulong		4965162	0					
ANR	4965247	Identifier	up		4965162	1					
ANR	4965248	ExpressionStatement	rp -> ptype = ptype	2358:4:75931:75948	4965162	6	True				
ANR	4965249	AssignmentExpression	rp -> ptype = ptype		4965162	0		=			
ANR	4965250	PtrMemberAccess	rp -> ptype		4965162	0					
ANR	4965251	Identifier	rp		4965162	0					
ANR	4965252	Identifier	ptype		4965162	1					
ANR	4965253	Identifier	ptype		4965162	1					
ANR	4965254	ExpressionStatement	rp -> p = up	2359:4:75954:75964	4965162	7	True				
ANR	4965255	AssignmentExpression	rp -> p = up		4965162	0		=			
ANR	4965256	PtrMemberAccess	rp -> p		4965162	0					
ANR	4965257	Identifier	rp		4965162	0					
ANR	4965258	Identifier	p		4965162	1					
ANR	4965259	Identifier	up		4965162	1					
ANR	4965260	ExpressionStatement	rp -> next = imem -> roots	2360:4:75970:75992	4965162	8	True				
ANR	4965261	AssignmentExpression	rp -> next = imem -> roots		4965162	0		=			
ANR	4965262	PtrMemberAccess	rp -> next		4965162	0					
ANR	4965263	Identifier	rp		4965162	0					
ANR	4965264	Identifier	next		4965162	1					
ANR	4965265	PtrMemberAccess	imem -> roots		4965162	1					
ANR	4965266	Identifier	imem		4965162	0					
ANR	4965267	Identifier	roots		4965162	1					
ANR	4965268	ExpressionStatement	imem -> roots = rp	2361:4:75998:76014	4965162	9	True				
ANR	4965269	AssignmentExpression	imem -> roots = rp		4965162	0		=			
ANR	4965270	PtrMemberAccess	imem -> roots		4965162	0					
ANR	4965271	Identifier	imem		4965162	0					
ANR	4965272	Identifier	roots		4965162	1					
ANR	4965273	Identifier	rp		4965162	1					
ANR	4965274	ReturnStatement	return 0 ;	2362:4:76020:76028	4965162	10	True				
ANR	4965275	PrimaryExpression	0		4965162	0					
ANR	4965276	ReturnType	static int		4965162	1					
ANR	4965277	Identifier	i_register_root		4965162	2					
ANR	4965278	ParameterList	"gs_memory_t * mem , gs_gc_root_t * rp , gs_ptr_type_t ptype , void * * up , client_name_t cname"		4965162	3					
ANR	4965279	Parameter	gs_memory_t * mem	2343:16:75308:75324	4965162	0	True				
ANR	4965280	ParameterType	gs_memory_t *		4965162	0					
ANR	4965281	Identifier	mem		4965162	1					
ANR	4965282	Parameter	gs_gc_root_t * rp	2343:35:75327:75343	4965162	1	True				
ANR	4965283	ParameterType	gs_gc_root_t *		4965162	0					
ANR	4965284	Identifier	rp		4965162	1					
ANR	4965285	Parameter	gs_ptr_type_t ptype	2343:54:75346:75364	4965162	2	True				
ANR	4965286	ParameterType	gs_ptr_type_t		4965162	0					
ANR	4965287	Identifier	ptype		4965162	1					
ANR	4965288	Parameter	void * * up	2344:16:75383:75391	4965162	3	True				
ANR	4965289	ParameterType	void * *		4965162	0					
ANR	4965290	Identifier	up		4965162	1					
ANR	4965291	Parameter	client_name_t cname	2344:27:75394:75412	4965162	4	True				
ANR	4965292	ParameterType	client_name_t		4965162	0					
ANR	4965293	Identifier	cname		4965162	1					
ANR	4965294	CFGEntryNode	ENTRY		4965162		True				
ANR	4965295	CFGExitNode	EXIT		4965162		True				
ANR	4965296	Symbol	NULL		4965162						
ANR	4965297	Symbol	rp -> next		4965162						
ANR	4965298	Symbol	* rp		4965162						
ANR	4965299	Symbol	rp -> ptype		4965162						
ANR	4965300	Symbol	cname		4965162						
ANR	4965301	Symbol	false		4965162						
ANR	4965302	Symbol	ptype		4965162						
ANR	4965303	Symbol	imem -> roots		4965162						
ANR	4965304	Symbol	gs_error_VMerror		4965162						
ANR	4965305	Symbol	rp -> free_on_unregister		4965162						
ANR	4965306	Symbol	mem		4965162						
ANR	4965307	Symbol	gs_raw_alloc_struct_immovable		4965162						
ANR	4965308	Symbol	imem -> non_gc_memory		4965162						
ANR	4965309	Symbol	& st_gc_root_t		4965162						
ANR	4965310	Symbol	true		4965162						
ANR	4965311	Symbol	client_name_string		4965162						
ANR	4965312	Symbol	up		4965162						
ANR	4965313	Symbol	imem		4965162						
ANR	4965314	Symbol	* imem		4965162						
ANR	4965315	Symbol	rp		4965162						
ANR	4965316	Symbol	rp -> p		4965162						
ANR	4965317	Function	i_unregister_root	2366:0:76058:76541							
ANR	4965318	FunctionDef	"i_unregister_root (gs_memory_t * mem , gs_gc_root_t * rp , client_name_t cname)"		4965317	0					
ANR	4965319	CompoundStatement		2368:0:76147:76541	4965317	0					
ANR	4965320	Statement	gs_ref_memory_t	2369:4:76153:76167	4965317	0	True				
ANR	4965321	Statement	*	2369:20:76169:76169	4965317	1	True				
ANR	4965322	Statement	const	2369:22:76171:76175	4965317	2	True				
ANR	4965323	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	2369:28:76177:76206	4965317	3	True				
ANR	4965324	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		4965317	0		=			
ANR	4965325	Identifier	imem		4965317	0					
ANR	4965326	CastExpression	( gs_ref_memory_t * ) mem		4965317	1					
ANR	4965327	CastTarget	gs_ref_memory_t *		4965317	0					
ANR	4965328	Identifier	mem		4965317	1					
ANR	4965329	IdentifierDeclStatement	gs_gc_root_t * * rpp = & imem -> roots ;	2370:4:76212:76245	4965317	4	True				
ANR	4965330	IdentifierDecl	* * rpp = & imem -> roots		4965317	0					
ANR	4965331	IdentifierDeclType	gs_gc_root_t * *		4965317	0					
ANR	4965332	Identifier	rpp		4965317	1					
ANR	4965333	AssignmentExpression	* * rpp = & imem -> roots		4965317	2		=			
ANR	4965334	Identifier	rpp		4965317	0					
ANR	4965335	UnaryOperationExpression	& imem -> roots		4965317	1					
ANR	4965336	UnaryOperator	&		4965317	0					
ANR	4965337	PtrMemberAccess	imem -> roots		4965317	1					
ANR	4965338	Identifier	imem		4965317	0					
ANR	4965339	Identifier	roots		4965317	1					
ANR	4965340	ExpressionStatement	"if_debug2m ( '8' , mem , ""[8]unregister root(%s) 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp )"	2372:4:76252:76360	4965317	5	True				
ANR	4965341	CallExpression	"if_debug2m ( '8' , mem , ""[8]unregister root(%s) 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp )"		4965317	0					
ANR	4965342	Callee	if_debug2m		4965317	0					
ANR	4965343	Identifier	if_debug2m		4965317	0					
ANR	4965344	ArgumentList	'8'		4965317	1					
ANR	4965345	Argument	'8'		4965317	0					
ANR	4965346	PrimaryExpression	'8'		4965317	0					
ANR	4965347	Argument	mem		4965317	1					
ANR	4965348	Identifier	mem		4965317	0					
ANR	4965349	Argument	"""[8]unregister root(%s) 0x%lx\\n"""		4965317	2					
ANR	4965350	PrimaryExpression	"""[8]unregister root(%s) 0x%lx\\n"""		4965317	0					
ANR	4965351	Argument	client_name_string ( cname )		4965317	3					
ANR	4965352	CallExpression	client_name_string ( cname )		4965317	0					
ANR	4965353	Callee	client_name_string		4965317	0					
ANR	4965354	Identifier	client_name_string		4965317	0					
ANR	4965355	ArgumentList	cname		4965317	1					
ANR	4965356	Argument	cname		4965317	0					
ANR	4965357	Identifier	cname		4965317	0					
ANR	4965358	Argument	( ulong ) rp		4965317	4					
ANR	4965359	CastExpression	( ulong ) rp		4965317	0					
ANR	4965360	CastTarget	ulong		4965317	0					
ANR	4965361	Identifier	rp		4965317	1					
ANR	4965362	WhileStatement	while ( * rpp != rp )		4965317	6					
ANR	4965363	Condition	* rpp != rp	2374:11:76373:76382	4965317	0	True				
ANR	4965364	EqualityExpression	* rpp != rp		4965317	0		!=			
ANR	4965365	UnaryOperationExpression	* rpp		4965317	0					
ANR	4965366	UnaryOperator	*		4965317	0					
ANR	4965367	Identifier	rpp		4965317	1					
ANR	4965368	Identifier	rp		4965317	1					
ANR	4965369	ExpressionStatement	rpp = & ( * rpp ) -> next	2375:8:76393:76412	4965317	1	True				
ANR	4965370	AssignmentExpression	rpp = & ( * rpp ) -> next		4965317	0		=			
ANR	4965371	Identifier	rpp		4965317	0					
ANR	4965372	UnaryOperationExpression	& ( * rpp ) -> next		4965317	1					
ANR	4965373	UnaryOperator	&		4965317	0					
ANR	4965374	PtrMemberAccess	( * rpp ) -> next		4965317	1					
ANR	4965375	UnaryOperationExpression	* rpp		4965317	0					
ANR	4965376	UnaryOperator	*		4965317	0					
ANR	4965377	Identifier	rpp		4965317	1					
ANR	4965378	Identifier	next		4965317	1					
ANR	4965379	ExpressionStatement	* rpp = ( * rpp ) -> next	2376:4:76418:76437	4965317	7	True				
ANR	4965380	AssignmentExpression	* rpp = ( * rpp ) -> next		4965317	0		=			
ANR	4965381	UnaryOperationExpression	* rpp		4965317	0					
ANR	4965382	UnaryOperator	*		4965317	0					
ANR	4965383	Identifier	rpp		4965317	1					
ANR	4965384	PtrMemberAccess	( * rpp ) -> next		4965317	1					
ANR	4965385	UnaryOperationExpression	* rpp		4965317	0					
ANR	4965386	UnaryOperator	*		4965317	0					
ANR	4965387	Identifier	rpp		4965317	1					
ANR	4965388	Identifier	next		4965317	1					
ANR	4965389	IfStatement	if ( rp -> free_on_unregister )		4965317	8					
ANR	4965390	Condition	rp -> free_on_unregister	2377:8:76447:76468	4965317	0	True				
ANR	4965391	PtrMemberAccess	rp -> free_on_unregister		4965317	0					
ANR	4965392	Identifier	rp		4965317	0					
ANR	4965393	Identifier	free_on_unregister		4965317	1					
ANR	4965394	ExpressionStatement	"gs_free_object ( imem -> non_gc_memory , rp , ""i_unregister_root"" )"	2378:8:76479:76539	4965317	1	True				
ANR	4965395	CallExpression	"gs_free_object ( imem -> non_gc_memory , rp , ""i_unregister_root"" )"		4965317	0					
ANR	4965396	Callee	gs_free_object		4965317	0					
ANR	4965397	Identifier	gs_free_object		4965317	0					
ANR	4965398	ArgumentList	imem -> non_gc_memory		4965317	1					
ANR	4965399	Argument	imem -> non_gc_memory		4965317	0					
ANR	4965400	PtrMemberAccess	imem -> non_gc_memory		4965317	0					
ANR	4965401	Identifier	imem		4965317	0					
ANR	4965402	Identifier	non_gc_memory		4965317	1					
ANR	4965403	Argument	rp		4965317	1					
ANR	4965404	Identifier	rp		4965317	0					
ANR	4965405	Argument	"""i_unregister_root"""		4965317	2					
ANR	4965406	PrimaryExpression	"""i_unregister_root"""		4965317	0					
ANR	4965407	ReturnType	static void		4965317	1					
ANR	4965408	Identifier	i_unregister_root		4965317	2					
ANR	4965409	ParameterList	"gs_memory_t * mem , gs_gc_root_t * rp , client_name_t cname"		4965317	3					
ANR	4965410	Parameter	gs_memory_t * mem	2367:18:76088:76104	4965317	0	True				
ANR	4965411	ParameterType	gs_memory_t *		4965317	0					
ANR	4965412	Identifier	mem		4965317	1					
ANR	4965413	Parameter	gs_gc_root_t * rp	2367:37:76107:76123	4965317	1	True				
ANR	4965414	ParameterType	gs_gc_root_t *		4965317	0					
ANR	4965415	Identifier	rp		4965317	1					
ANR	4965416	Parameter	client_name_t cname	2367:56:76126:76144	4965317	2	True				
ANR	4965417	ParameterType	client_name_t		4965317	0					
ANR	4965418	Identifier	cname		4965317	1					
ANR	4965419	CFGEntryNode	ENTRY		4965317		True				
ANR	4965420	CFGExitNode	EXIT		4965317		True				
ANR	4965421	Symbol	* * rpp		4965317						
ANR	4965422	Symbol	* rp		4965317						
ANR	4965423	Symbol	cname		4965317						
ANR	4965424	Symbol	( * rpp ) -> next		4965317						
ANR	4965425	Symbol	rpp		4965317						
ANR	4965426	Symbol	rp -> free_on_unregister		4965317						
ANR	4965427	Symbol	mem		4965317						
ANR	4965428	Symbol	imem -> non_gc_memory		4965317						
ANR	4965429	Symbol	client_name_string		4965317						
ANR	4965430	Symbol	& imem -> roots		4965317						
ANR	4965431	Symbol	* rpp		4965317						
ANR	4965432	Symbol	imem		4965317						
ANR	4965433	Symbol	* imem		4965317						
ANR	4965434	Symbol	rp		4965317						
ANR	4965435	Symbol	& ( * rpp ) -> next		4965317						
ANR	4965436	Function	alloc_link_clump	2387:0:76717:76829							
ANR	4965437	FunctionDef	"alloc_link_clump (clump_t * cp , gs_ref_memory_t * imem)"		4965436	0					
ANR	4965438	CompoundStatement		2389:0:76777:76829	4965436	0					
ANR	4965439	ExpressionStatement	"splay_insert ( cp , imem )"	2390:4:76783:76805	4965436	0	True				
ANR	4965440	CallExpression	"splay_insert ( cp , imem )"		4965436	0					
ANR	4965441	Callee	splay_insert		4965436	0					
ANR	4965442	Identifier	splay_insert		4965436	0					
ANR	4965443	ArgumentList	cp		4965436	1					
ANR	4965444	Argument	cp		4965436	0					
ANR	4965445	Identifier	cp		4965436	0					
ANR	4965446	Argument	imem		4965436	1					
ANR	4965447	Identifier	imem		4965436	0					
ANR	4965448	ExpressionStatement	SANITY_CHECK ( cp )	2391:4:76811:76827	4965436	1	True				
ANR	4965449	CallExpression	SANITY_CHECK ( cp )		4965436	0					
ANR	4965450	Callee	SANITY_CHECK		4965436	0					
ANR	4965451	Identifier	SANITY_CHECK		4965436	0					
ANR	4965452	ArgumentList	cp		4965436	1					
ANR	4965453	Argument	cp		4965436	0					
ANR	4965454	Identifier	cp		4965436	0					
ANR	4965455	ReturnType	void		4965436	1					
ANR	4965456	Identifier	alloc_link_clump		4965436	2					
ANR	4965457	ParameterList	"clump_t * cp , gs_ref_memory_t * imem"		4965436	3					
ANR	4965458	Parameter	clump_t * cp	2388:17:76739:76750	4965436	0	True				
ANR	4965459	ParameterType	clump_t *		4965436	0					
ANR	4965460	Identifier	cp		4965436	1					
ANR	4965461	Parameter	gs_ref_memory_t * imem	2388:31:76753:76774	4965436	1	True				
ANR	4965462	ParameterType	gs_ref_memory_t *		4965436	0					
ANR	4965463	Identifier	imem		4965436	1					
ANR	4965464	CFGEntryNode	ENTRY		4965436		True				
ANR	4965465	CFGExitNode	EXIT		4965436		True				
ANR	4965466	Symbol	cp		4965436						
ANR	4965467	Symbol	imem		4965436						
ANR	4965468	Function	alloc_add_clump	2395:0:76875:77236							
ANR	4965469	FunctionDef	"alloc_add_clump (gs_ref_memory_t * mem , ulong csize , client_name_t cname)"		4965468	0					
ANR	4965470	CompoundStatement		2397:0:76965:77236	4965468	0					
ANR	4965471	IdentifierDeclStatement	"clump_t * cp = alloc_acquire_clump ( mem , csize , true , cname ) ;"	2398:4:76971:77029	4965468	0	True				
ANR	4965472	IdentifierDecl	"* cp = alloc_acquire_clump ( mem , csize , true , cname )"		4965468	0					
ANR	4965473	IdentifierDeclType	clump_t *		4965468	0					
ANR	4965474	Identifier	cp		4965468	1					
ANR	4965475	AssignmentExpression	"* cp = alloc_acquire_clump ( mem , csize , true , cname )"		4965468	2		=			
ANR	4965476	Identifier	cp		4965468	0					
ANR	4965477	CallExpression	"alloc_acquire_clump ( mem , csize , true , cname )"		4965468	1					
ANR	4965478	Callee	alloc_acquire_clump		4965468	0					
ANR	4965479	Identifier	alloc_acquire_clump		4965468	0					
ANR	4965480	ArgumentList	mem		4965468	1					
ANR	4965481	Argument	mem		4965468	0					
ANR	4965482	Identifier	mem		4965468	0					
ANR	4965483	Argument	csize		4965468	1					
ANR	4965484	Identifier	csize		4965468	0					
ANR	4965485	Argument	true		4965468	2					
ANR	4965486	Identifier	true		4965468	0					
ANR	4965487	Argument	cname		4965468	3					
ANR	4965488	Identifier	cname		4965468	0					
ANR	4965489	IfStatement	if ( cp )		4965468	1					
ANR	4965490	Condition	cp	2400:8:77040:77041	4965468	0	True				
ANR	4965491	Identifier	cp		4965468	0					
ANR	4965492	CompoundStatement		4:12:78:78	4965468	1					
ANR	4965493	ExpressionStatement	alloc_close_clump ( mem )	2401:8:77054:77076	4965468	0	True				
ANR	4965494	CallExpression	alloc_close_clump ( mem )		4965468	0					
ANR	4965495	Callee	alloc_close_clump		4965468	0					
ANR	4965496	Identifier	alloc_close_clump		4965468	0					
ANR	4965497	ArgumentList	mem		4965468	1					
ANR	4965498	Argument	mem		4965468	0					
ANR	4965499	Identifier	mem		4965468	0					
ANR	4965500	ExpressionStatement	mem -> cc = cp	2402:8:77086:77098	4965468	1	True				
ANR	4965501	AssignmentExpression	mem -> cc = cp		4965468	0		=			
ANR	4965502	PtrMemberAccess	mem -> cc		4965468	0					
ANR	4965503	Identifier	mem		4965468	0					
ANR	4965504	Identifier	cc		4965468	1					
ANR	4965505	Identifier	cp		4965468	1					
ANR	4965506	ExpressionStatement	"gs_alloc_fill ( mem -> cc -> cbase , gs_alloc_fill_free , mem -> cc -> climit - mem -> cc -> cbase )"	2403:8:77108:77213	4965468	2	True				
ANR	4965507	CallExpression	"gs_alloc_fill ( mem -> cc -> cbase , gs_alloc_fill_free , mem -> cc -> climit - mem -> cc -> cbase )"		4965468	0					
ANR	4965508	Callee	gs_alloc_fill		4965468	0					
ANR	4965509	Identifier	gs_alloc_fill		4965468	0					
ANR	4965510	ArgumentList	mem -> cc -> cbase		4965468	1					
ANR	4965511	Argument	mem -> cc -> cbase		4965468	0					
ANR	4965512	PtrMemberAccess	mem -> cc -> cbase		4965468	0					
ANR	4965513	PtrMemberAccess	mem -> cc		4965468	0					
ANR	4965514	Identifier	mem		4965468	0					
ANR	4965515	Identifier	cc		4965468	1					
ANR	4965516	Identifier	cbase		4965468	1					
ANR	4965517	Argument	gs_alloc_fill_free		4965468	1					
ANR	4965518	Identifier	gs_alloc_fill_free		4965468	0					
ANR	4965519	Argument	mem -> cc -> climit - mem -> cc -> cbase		4965468	2					
ANR	4965520	AdditiveExpression	mem -> cc -> climit - mem -> cc -> cbase		4965468	0		-			
ANR	4965521	PtrMemberAccess	mem -> cc -> climit		4965468	0					
ANR	4965522	PtrMemberAccess	mem -> cc		4965468	0					
ANR	4965523	Identifier	mem		4965468	0					
ANR	4965524	Identifier	cc		4965468	1					
ANR	4965525	Identifier	climit		4965468	1					
ANR	4965526	PtrMemberAccess	mem -> cc -> cbase		4965468	1					
ANR	4965527	PtrMemberAccess	mem -> cc		4965468	0					
ANR	4965528	Identifier	mem		4965468	0					
ANR	4965529	Identifier	cc		4965468	1					
ANR	4965530	Identifier	cbase		4965468	1					
ANR	4965531	ReturnStatement	return cp ;	2406:4:77225:77234	4965468	2	True				
ANR	4965532	Identifier	cp		4965468	0					
ANR	4965533	ReturnType	static clump_t *		4965468	1					
ANR	4965534	Identifier	alloc_add_clump		4965468	2					
ANR	4965535	ParameterList	"gs_ref_memory_t * mem , ulong csize , client_name_t cname"		4965468	3					
ANR	4965536	Parameter	gs_ref_memory_t * mem	2396:16:76908:76928	4965468	0	True				
ANR	4965537	ParameterType	gs_ref_memory_t *		4965468	0					
ANR	4965538	Identifier	mem		4965468	1					
ANR	4965539	Parameter	ulong csize	2396:39:76931:76941	4965468	1	True				
ANR	4965540	ParameterType	ulong		4965468	0					
ANR	4965541	Identifier	csize		4965468	1					
ANR	4965542	Parameter	client_name_t cname	2396:52:76944:76962	4965468	2	True				
ANR	4965543	ParameterType	client_name_t		4965468	0					
ANR	4965544	Identifier	cname		4965468	1					
ANR	4965545	CFGEntryNode	ENTRY		4965468		True				
ANR	4965546	CFGExitNode	EXIT		4965468		True				
ANR	4965547	Symbol	mem -> cc -> climit		4965468						
ANR	4965548	Symbol	gs_alloc_fill_free		4965468						
ANR	4965549	Symbol	cname		4965468						
ANR	4965550	Symbol	* mem -> cc		4965468						
ANR	4965551	Symbol	* * mem		4965468						
ANR	4965552	Symbol	alloc_acquire_clump		4965468						
ANR	4965553	Symbol	csize		4965468						
ANR	4965554	Symbol	cp		4965468						
ANR	4965555	Symbol	mem -> cc -> cbase		4965468						
ANR	4965556	Symbol	mem		4965468						
ANR	4965557	Symbol	mem -> cc		4965468						
ANR	4965558	Symbol	true		4965468						
ANR	4965559	Symbol	* mem		4965468						
ANR	4965560	Function	alloc_acquire_clump	2413:0:77497:79293							
ANR	4965561	FunctionDef	"alloc_acquire_clump (gs_ref_memory_t * mem , ulong csize , bool has_strings , client_name_t cname)"		4965560	0					
ANR	4965562	CompoundStatement		2416:0:77629:79293	4965560	0					
ANR	4965563	IdentifierDeclStatement	gs_memory_t * parent = mem -> non_gc_memory ;	2417:4:77635:77675	4965560	0	True				
ANR	4965564	IdentifierDecl	* parent = mem -> non_gc_memory		4965560	0					
ANR	4965565	IdentifierDeclType	gs_memory_t *		4965560	0					
ANR	4965566	Identifier	parent		4965560	1					
ANR	4965567	AssignmentExpression	* parent = mem -> non_gc_memory		4965560	2		=			
ANR	4965568	Identifier	parent		4965560	0					
ANR	4965569	PtrMemberAccess	mem -> non_gc_memory		4965560	1					
ANR	4965570	Identifier	mem		4965560	0					
ANR	4965571	Identifier	non_gc_memory		4965560	1					
ANR	4965572	IdentifierDeclStatement	clump_t * cp ;	2418:4:77681:77692	4965560	1	True				
ANR	4965573	IdentifierDecl	* cp		4965560	0					
ANR	4965574	IdentifierDeclType	clump_t *		4965560	0					
ANR	4965575	Identifier	cp		4965560	1					
ANR	4965576	IdentifierDeclStatement	byte * cdata ;	2419:4:77698:77709	4965560	2	True				
ANR	4965577	IdentifierDecl	* cdata		4965560	0					
ANR	4965578	IdentifierDeclType	byte *		4965560	0					
ANR	4965579	Identifier	cdata		4965560	1					
ANR	4965580	IfStatement	if ( csize != ( uint ) csize )		4965560	3					
ANR	4965581	Condition	csize != ( uint ) csize	2423:8:77809:77829	4965560	0	True				
ANR	4965582	EqualityExpression	csize != ( uint ) csize		4965560	0		!=			
ANR	4965583	Identifier	csize		4965560	0					
ANR	4965584	CastExpression	( uint ) csize		4965560	1					
ANR	4965585	CastTarget	uint		4965560	0					
ANR	4965586	Identifier	csize		4965560	1					
ANR	4965587	ReturnStatement	return 0 ;	2424:8:77840:77848	4965560	1	True				
ANR	4965588	PrimaryExpression	0		4965560	0					
ANR	4965589	ExpressionStatement	"cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , cname )"	2426:4:77861:77921	4965560	4	True				
ANR	4965590	AssignmentExpression	"cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , cname )"		4965560	0		=			
ANR	4965591	Identifier	cp		4965560	0					
ANR	4965592	CallExpression	"gs_raw_alloc_struct_immovable ( parent , & st_clump , cname )"		4965560	1					
ANR	4965593	Callee	gs_raw_alloc_struct_immovable		4965560	0					
ANR	4965594	Identifier	gs_raw_alloc_struct_immovable		4965560	0					
ANR	4965595	ArgumentList	parent		4965560	1					
ANR	4965596	Argument	parent		4965560	0					
ANR	4965597	Identifier	parent		4965560	0					
ANR	4965598	Argument	& st_clump		4965560	1					
ANR	4965599	UnaryOperationExpression	& st_clump		4965560	0					
ANR	4965600	UnaryOperator	&		4965560	0					
ANR	4965601	Identifier	st_clump		4965560	1					
ANR	4965602	Argument	cname		4965560	2					
ANR	4965603	Identifier	cname		4965560	0					
ANR	4965604	IfStatement	if ( mem -> gc_status . signal_value != 0 )		4965560	5					
ANR	4965605	Condition	mem -> gc_status . signal_value != 0	2433:8:78169:78200	4965560	0	True				
ANR	4965606	EqualityExpression	mem -> gc_status . signal_value != 0		4965560	0		!=			
ANR	4965607	MemberAccess	mem -> gc_status . signal_value		4965560	0					
ANR	4965608	PtrMemberAccess	mem -> gc_status		4965560	0					
ANR	4965609	Identifier	mem		4965560	0					
ANR	4965610	Identifier	gc_status		4965560	1					
ANR	4965611	Identifier	signal_value		4965560	1					
ANR	4965612	PrimaryExpression	0		4965560	1					
ANR	4965613	CompoundStatement		18:42:573:573	4965560	1					
ANR	4965614	IfStatement	if ( ( ulong ) ( mem -> allocated ) >= mem -> limit )		4965560	0					
ANR	4965615	Condition	( ulong ) ( mem -> allocated ) >= mem -> limit	2435:12:78259:78296	4965560	0	True				
ANR	4965616	RelationalExpression	( ulong ) ( mem -> allocated ) >= mem -> limit		4965560	0		>=			
ANR	4965617	CastExpression	( ulong ) ( mem -> allocated )		4965560	0					
ANR	4965618	CastTarget	ulong		4965560	0					
ANR	4965619	PtrMemberAccess	mem -> allocated		4965560	1					
ANR	4965620	Identifier	mem		4965560	0					
ANR	4965621	Identifier	allocated		4965560	1					
ANR	4965622	PtrMemberAccess	mem -> limit		4965560	1					
ANR	4965623	Identifier	mem		4965560	0					
ANR	4965624	Identifier	limit		4965560	1					
ANR	4965625	CompoundStatement		20:52:669:669	4965560	1					
ANR	4965626	ExpressionStatement	mem -> gc_status . requested += csize	2436:12:78313:78346	4965560	0	True				
ANR	4965627	AssignmentExpression	mem -> gc_status . requested += csize		4965560	0		+=			
ANR	4965628	MemberAccess	mem -> gc_status . requested		4965560	0					
ANR	4965629	PtrMemberAccess	mem -> gc_status		4965560	0					
ANR	4965630	Identifier	mem		4965560	0					
ANR	4965631	Identifier	gc_status		4965560	1					
ANR	4965632	Identifier	requested		4965560	1					
ANR	4965633	Identifier	csize		4965560	1					
ANR	4965634	IfStatement	if ( mem -> limit >= mem -> gc_status . max_vm )		4965560	1					
ANR	4965635	Condition	mem -> limit >= mem -> gc_status . max_vm	2437:16:78364:78398	4965560	0	True				
ANR	4965636	RelationalExpression	mem -> limit >= mem -> gc_status . max_vm		4965560	0		>=			
ANR	4965637	PtrMemberAccess	mem -> limit		4965560	0					
ANR	4965638	Identifier	mem		4965560	0					
ANR	4965639	Identifier	limit		4965560	1					
ANR	4965640	MemberAccess	mem -> gc_status . max_vm		4965560	1					
ANR	4965641	PtrMemberAccess	mem -> gc_status		4965560	0					
ANR	4965642	Identifier	mem		4965560	0					
ANR	4965643	Identifier	gc_status		4965560	1					
ANR	4965644	Identifier	max_vm		4965560	1					
ANR	4965645	CompoundStatement		22:53:771:771	4965560	1					
ANR	4965646	ExpressionStatement	"gs_free_object ( parent , cp , cname )"	2438:16:78419:78452	4965560	0	True				
ANR	4965647	CallExpression	"gs_free_object ( parent , cp , cname )"		4965560	0					
ANR	4965648	Callee	gs_free_object		4965560	0					
ANR	4965649	Identifier	gs_free_object		4965560	0					
ANR	4965650	ArgumentList	parent		4965560	1					
ANR	4965651	Argument	parent		4965560	0					
ANR	4965652	Identifier	parent		4965560	0					
ANR	4965653	Argument	cp		4965560	1					
ANR	4965654	Identifier	cp		4965560	0					
ANR	4965655	Argument	cname		4965560	2					
ANR	4965656	Identifier	cname		4965560	0					
ANR	4965657	ReturnStatement	return 0 ;	2439:16:78470:78478	4965560	1	True				
ANR	4965658	PrimaryExpression	0		4965560	0					
ANR	4965659	ExpressionStatement	"if_debug4m ( '0' , ( const gs_memory_t * ) mem , ""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"" , mem -> space , ( long ) mem -> allocated , ( long ) mem -> limit , ( long ) mem -> gc_status . requested )"	2441:12:78506:78768	4965560	2	True				
ANR	4965660	CallExpression	"if_debug4m ( '0' , ( const gs_memory_t * ) mem , ""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"" , mem -> space , ( long ) mem -> allocated , ( long ) mem -> limit , ( long ) mem -> gc_status . requested )"		4965560	0					
ANR	4965661	Callee	if_debug4m		4965560	0					
ANR	4965662	Identifier	if_debug4m		4965560	0					
ANR	4965663	ArgumentList	'0'		4965560	1					
ANR	4965664	Argument	'0'		4965560	0					
ANR	4965665	PrimaryExpression	'0'		4965560	0					
ANR	4965666	Argument	( const gs_memory_t * ) mem		4965560	1					
ANR	4965667	CastExpression	( const gs_memory_t * ) mem		4965560	0					
ANR	4965668	CastTarget	const gs_memory_t *		4965560	0					
ANR	4965669	Identifier	mem		4965560	1					
ANR	4965670	Argument	"""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"""		4965560	2					
ANR	4965671	PrimaryExpression	"""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"""		4965560	0					
ANR	4965672	Argument	mem -> space		4965560	3					
ANR	4965673	PtrMemberAccess	mem -> space		4965560	0					
ANR	4965674	Identifier	mem		4965560	0					
ANR	4965675	Identifier	space		4965560	1					
ANR	4965676	Argument	( long ) mem -> allocated		4965560	4					
ANR	4965677	CastExpression	( long ) mem -> allocated		4965560	0					
ANR	4965678	CastTarget	long		4965560	0					
ANR	4965679	PtrMemberAccess	mem -> allocated		4965560	1					
ANR	4965680	Identifier	mem		4965560	0					
ANR	4965681	Identifier	allocated		4965560	1					
ANR	4965682	Argument	( long ) mem -> limit		4965560	5					
ANR	4965683	CastExpression	( long ) mem -> limit		4965560	0					
ANR	4965684	CastTarget	long		4965560	0					
ANR	4965685	PtrMemberAccess	mem -> limit		4965560	1					
ANR	4965686	Identifier	mem		4965560	0					
ANR	4965687	Identifier	limit		4965560	1					
ANR	4965688	Argument	( long ) mem -> gc_status . requested		4965560	6					
ANR	4965689	CastExpression	( long ) mem -> gc_status . requested		4965560	0					
ANR	4965690	CastTarget	long		4965560	0					
ANR	4965691	MemberAccess	mem -> gc_status . requested		4965560	1					
ANR	4965692	PtrMemberAccess	mem -> gc_status		4965560	0					
ANR	4965693	Identifier	mem		4965560	0					
ANR	4965694	Identifier	gc_status		4965560	1					
ANR	4965695	Identifier	requested		4965560	1					
ANR	4965696	ExpressionStatement	mem -> gs_lib_ctx -> gcsignal = mem -> gc_status . signal_value	2445:12:78782:78837	4965560	3	True				
ANR	4965697	AssignmentExpression	mem -> gs_lib_ctx -> gcsignal = mem -> gc_status . signal_value		4965560	0		=			
ANR	4965698	PtrMemberAccess	mem -> gs_lib_ctx -> gcsignal		4965560	0					
ANR	4965699	PtrMemberAccess	mem -> gs_lib_ctx		4965560	0					
ANR	4965700	Identifier	mem		4965560	0					
ANR	4965701	Identifier	gs_lib_ctx		4965560	1					
ANR	4965702	Identifier	gcsignal		4965560	1					
ANR	4965703	MemberAccess	mem -> gc_status . signal_value		4965560	1					
ANR	4965704	PtrMemberAccess	mem -> gc_status		4965560	0					
ANR	4965705	Identifier	mem		4965560	0					
ANR	4965706	Identifier	gc_status		4965560	1					
ANR	4965707	Identifier	signal_value		4965560	1					
ANR	4965708	ExpressionStatement	"cdata = gs_alloc_bytes_immovable ( parent , csize , cname )"	2448:4:78859:78913	4965560	6	True				
ANR	4965709	AssignmentExpression	"cdata = gs_alloc_bytes_immovable ( parent , csize , cname )"		4965560	0		=			
ANR	4965710	Identifier	cdata		4965560	0					
ANR	4965711	CallExpression	"gs_alloc_bytes_immovable ( parent , csize , cname )"		4965560	1					
ANR	4965712	Callee	gs_alloc_bytes_immovable		4965560	0					
ANR	4965713	Identifier	gs_alloc_bytes_immovable		4965560	0					
ANR	4965714	ArgumentList	parent		4965560	1					
ANR	4965715	Argument	parent		4965560	0					
ANR	4965716	Identifier	parent		4965560	0					
ANR	4965717	Argument	csize		4965560	1					
ANR	4965718	Identifier	csize		4965560	0					
ANR	4965719	Argument	cname		4965560	2					
ANR	4965720	Identifier	cname		4965560	0					
ANR	4965721	IfStatement	if ( cp == 0 || cdata == 0 )		4965560	7					
ANR	4965722	Condition	cp == 0 || cdata == 0	2449:8:78923:78943	4965560	0	True				
ANR	4965723	OrExpression	cp == 0 || cdata == 0		4965560	0		||			
ANR	4965724	EqualityExpression	cp == 0		4965560	0		==			
ANR	4965725	Identifier	cp		4965560	0					
ANR	4965726	PrimaryExpression	0		4965560	1					
ANR	4965727	EqualityExpression	cdata == 0		4965560	1		==			
ANR	4965728	Identifier	cdata		4965560	0					
ANR	4965729	PrimaryExpression	0		4965560	1					
ANR	4965730	CompoundStatement		34:31:1316:1316	4965560	1					
ANR	4965731	ExpressionStatement	"gs_free_object ( parent , cdata , cname )"	2450:8:78956:78992	4965560	0	True				
ANR	4965732	CallExpression	"gs_free_object ( parent , cdata , cname )"		4965560	0					
ANR	4965733	Callee	gs_free_object		4965560	0					
ANR	4965734	Identifier	gs_free_object		4965560	0					
ANR	4965735	ArgumentList	parent		4965560	1					
ANR	4965736	Argument	parent		4965560	0					
ANR	4965737	Identifier	parent		4965560	0					
ANR	4965738	Argument	cdata		4965560	1					
ANR	4965739	Identifier	cdata		4965560	0					
ANR	4965740	Argument	cname		4965560	2					
ANR	4965741	Identifier	cname		4965560	0					
ANR	4965742	ExpressionStatement	"gs_free_object ( parent , cp , cname )"	2451:8:79002:79035	4965560	1	True				
ANR	4965743	CallExpression	"gs_free_object ( parent , cp , cname )"		4965560	0					
ANR	4965744	Callee	gs_free_object		4965560	0					
ANR	4965745	Identifier	gs_free_object		4965560	0					
ANR	4965746	ArgumentList	parent		4965560	1					
ANR	4965747	Argument	parent		4965560	0					
ANR	4965748	Identifier	parent		4965560	0					
ANR	4965749	Argument	cp		4965560	1					
ANR	4965750	Identifier	cp		4965560	0					
ANR	4965751	Argument	cname		4965560	2					
ANR	4965752	Identifier	cname		4965560	0					
ANR	4965753	ExpressionStatement	mem -> gc_status . requested = csize	2452:8:79045:79077	4965560	2	True				
ANR	4965754	AssignmentExpression	mem -> gc_status . requested = csize		4965560	0		=			
ANR	4965755	MemberAccess	mem -> gc_status . requested		4965560	0					
ANR	4965756	PtrMemberAccess	mem -> gc_status		4965560	0					
ANR	4965757	Identifier	mem		4965560	0					
ANR	4965758	Identifier	gc_status		4965560	1					
ANR	4965759	Identifier	requested		4965560	1					
ANR	4965760	Identifier	csize		4965560	1					
ANR	4965761	ReturnStatement	return 0 ;	2453:8:79087:79095	4965560	3	True				
ANR	4965762	PrimaryExpression	0		4965560	0					
ANR	4965763	ExpressionStatement	"alloc_init_clump ( cp , cdata , cdata + csize , has_strings , ( clump_t * ) 0 )"	2455:4:79107:79177	4965560	8	True				
ANR	4965764	CallExpression	"alloc_init_clump ( cp , cdata , cdata + csize , has_strings , ( clump_t * ) 0 )"		4965560	0					
ANR	4965765	Callee	alloc_init_clump		4965560	0					
ANR	4965766	Identifier	alloc_init_clump		4965560	0					
ANR	4965767	ArgumentList	cp		4965560	1					
ANR	4965768	Argument	cp		4965560	0					
ANR	4965769	Identifier	cp		4965560	0					
ANR	4965770	Argument	cdata		4965560	1					
ANR	4965771	Identifier	cdata		4965560	0					
ANR	4965772	Argument	cdata + csize		4965560	2					
ANR	4965773	AdditiveExpression	cdata + csize		4965560	0		+			
ANR	4965774	Identifier	cdata		4965560	0					
ANR	4965775	Identifier	csize		4965560	1					
ANR	4965776	Argument	has_strings		4965560	3					
ANR	4965777	Identifier	has_strings		4965560	0					
ANR	4965778	Argument	( clump_t * ) 0		4965560	4					
ANR	4965779	CastExpression	( clump_t * ) 0		4965560	0					
ANR	4965780	CastTarget	clump_t *		4965560	0					
ANR	4965781	PrimaryExpression	0		4965560	1					
ANR	4965782	ExpressionStatement	"alloc_link_clump ( cp , mem )"	2456:4:79183:79208	4965560	9	True				
ANR	4965783	CallExpression	"alloc_link_clump ( cp , mem )"		4965560	0					
ANR	4965784	Callee	alloc_link_clump		4965560	0					
ANR	4965785	Identifier	alloc_link_clump		4965560	0					
ANR	4965786	ArgumentList	cp		4965560	1					
ANR	4965787	Argument	cp		4965560	0					
ANR	4965788	Identifier	cp		4965560	0					
ANR	4965789	Argument	mem		4965560	1					
ANR	4965790	Identifier	mem		4965560	0					
ANR	4965791	ExpressionStatement	mem -> allocated += st_clump . ssize + csize	2457:4:79214:79254	4965560	10	True				
ANR	4965792	AssignmentExpression	mem -> allocated += st_clump . ssize + csize		4965560	0		+=			
ANR	4965793	PtrMemberAccess	mem -> allocated		4965560	0					
ANR	4965794	Identifier	mem		4965560	0					
ANR	4965795	Identifier	allocated		4965560	1					
ANR	4965796	AdditiveExpression	st_clump . ssize + csize		4965560	1		+			
ANR	4965797	MemberAccess	st_clump . ssize		4965560	0					
ANR	4965798	Identifier	st_clump		4965560	0					
ANR	4965799	Identifier	ssize		4965560	1					
ANR	4965800	Identifier	csize		4965560	1					
ANR	4965801	ExpressionStatement	SANITY_CHECK ( cp )	2458:4:79260:79276	4965560	11	True				
ANR	4965802	CallExpression	SANITY_CHECK ( cp )		4965560	0					
ANR	4965803	Callee	SANITY_CHECK		4965560	0					
ANR	4965804	Identifier	SANITY_CHECK		4965560	0					
ANR	4965805	ArgumentList	cp		4965560	1					
ANR	4965806	Argument	cp		4965560	0					
ANR	4965807	Identifier	cp		4965560	0					
ANR	4965808	ReturnStatement	return cp ;	2459:4:79282:79291	4965560	12	True				
ANR	4965809	Identifier	cp		4965560	0					
ANR	4965810	ReturnType	static clump_t *		4965560	1					
ANR	4965811	Identifier	alloc_acquire_clump		4965560	2					
ANR	4965812	ParameterList	"gs_ref_memory_t * mem , ulong csize , bool has_strings , client_name_t cname"		4965560	3					
ANR	4965813	Parameter	gs_ref_memory_t * mem	2414:20:77534:77554	4965560	0	True				
ANR	4965814	ParameterType	gs_ref_memory_t *		4965560	0					
ANR	4965815	Identifier	mem		4965560	1					
ANR	4965816	Parameter	ulong csize	2414:43:77557:77567	4965560	1	True				
ANR	4965817	ParameterType	ulong		4965560	0					
ANR	4965818	Identifier	csize		4965560	1					
ANR	4965819	Parameter	bool has_strings	2414:56:77570:77585	4965560	2	True				
ANR	4965820	ParameterType	bool		4965560	0					
ANR	4965821	Identifier	has_strings		4965560	1					
ANR	4965822	Parameter	client_name_t cname	2415:20:77608:77626	4965560	3	True				
ANR	4965823	ParameterType	client_name_t		4965560	0					
ANR	4965824	Identifier	cname		4965560	1					
ANR	4965825	CFGEntryNode	ENTRY		4965560		True				
ANR	4965826	CFGExitNode	EXIT		4965560		True				
ANR	4965827	Symbol	parent		4965560						
ANR	4965828	Symbol	cname		4965560						
ANR	4965829	Symbol	mem -> gc_status . max_vm		4965560						
ANR	4965830	Symbol	csize		4965560						
ANR	4965831	Symbol	st_clump		4965560						
ANR	4965832	Symbol	st_clump . ssize		4965560						
ANR	4965833	Symbol	mem -> gc_status		4965560						
ANR	4965834	Symbol	mem		4965560						
ANR	4965835	Symbol	gs_alloc_bytes_immovable		4965560						
ANR	4965836	Symbol	mem -> gc_status . signal_value		4965560						
ANR	4965837	Symbol	mem -> gs_lib_ctx -> gcsignal		4965560						
ANR	4965838	Symbol	& st_clump		4965560						
ANR	4965839	Symbol	mem -> gc_status . requested		4965560						
ANR	4965840	Symbol	mem -> allocated		4965560						
ANR	4965841	Symbol	* * mem		4965560						
ANR	4965842	Symbol	mem -> non_gc_memory		4965560						
ANR	4965843	Symbol	cp		4965560						
ANR	4965844	Symbol	mem -> space		4965560						
ANR	4965845	Symbol	cdata		4965560						
ANR	4965846	Symbol	mem -> limit		4965560						
ANR	4965847	Symbol	gs_raw_alloc_struct_immovable		4965560						
ANR	4965848	Symbol	* mem -> gs_lib_ctx		4965560						
ANR	4965849	Symbol	has_strings		4965560						
ANR	4965850	Symbol	mem -> gs_lib_ctx		4965560						
ANR	4965851	Symbol	* mem		4965560						
ANR	4965852	Function	alloc_init_clump	2465:0:79463:80815							
ANR	4965853	FunctionDef	"alloc_init_clump (clump_t * cp , byte * bot , byte * top , bool has_strings , clump_t * outer)"		4965852	0					
ANR	4965854	CompoundStatement		2468:0:79575:80815	4965852	0					
ANR	4965855	IdentifierDeclStatement	byte * cdata = bot ;	2469:4:79581:79598	4965852	0	True				
ANR	4965856	IdentifierDecl	* cdata = bot		4965852	0					
ANR	4965857	IdentifierDeclType	byte *		4965852	0					
ANR	4965858	Identifier	cdata		4965852	1					
ANR	4965859	AssignmentExpression	* cdata = bot		4965852	2		=			
ANR	4965860	Identifier	bot		4965852	0					
ANR	4965861	Identifier	bot		4965852	1					
ANR	4965862	IfStatement	if ( outer != 0 )		4965852	1					
ANR	4965863	Condition	outer != 0	2471:8:79609:79618	4965852	0	True				
ANR	4965864	EqualityExpression	outer != 0		4965852	0		!=			
ANR	4965865	Identifier	outer		4965852	0					
ANR	4965866	PrimaryExpression	0		4965852	1					
ANR	4965867	ExpressionStatement	outer -> inner_count ++	2472:8:79629:79649	4965852	1	True				
ANR	4965868	PostIncDecOperationExpression	outer -> inner_count ++		4965852	0					
ANR	4965869	PtrMemberAccess	outer -> inner_count		4965852	0					
ANR	4965870	Identifier	outer		4965852	0					
ANR	4965871	Identifier	inner_count		4965852	1					
ANR	4965872	IncDec	++		4965852	1					
ANR	4965873	ExpressionStatement	cp -> chead = ( clump_head_t * ) cdata	2473:4:79655:79689	4965852	2	True				
ANR	4965874	AssignmentExpression	cp -> chead = ( clump_head_t * ) cdata		4965852	0		=			
ANR	4965875	PtrMemberAccess	cp -> chead		4965852	0					
ANR	4965876	Identifier	cp		4965852	0					
ANR	4965877	Identifier	chead		4965852	1					
ANR	4965878	CastExpression	( clump_head_t * ) cdata		4965852	1					
ANR	4965879	CastTarget	clump_head_t *		4965852	0					
ANR	4965880	Identifier	cdata		4965852	1					
ANR	4965881	ExpressionStatement	cdata += sizeof ( clump_head_t )	2474:4:79695:79724	4965852	3	True				
ANR	4965882	AssignmentExpression	cdata += sizeof ( clump_head_t )		4965852	0		+=			
ANR	4965883	Identifier	cdata		4965852	0					
ANR	4965884	SizeofExpression	sizeof ( clump_head_t )		4965852	1					
ANR	4965885	Sizeof	sizeof		4965852	0					
ANR	4965886	SizeofOperand	clump_head_t		4965852	1					
ANR	4965887	ExpressionStatement	cp -> cbot = cp -> cbase = cp -> int_freed_top = cdata	2475:4:79730:79778	4965852	4	True				
ANR	4965888	AssignmentExpression	cp -> cbot = cp -> cbase = cp -> int_freed_top = cdata		4965852	0		=			
ANR	4965889	PtrMemberAccess	cp -> cbot		4965852	0					
ANR	4965890	Identifier	cp		4965852	0					
ANR	4965891	Identifier	cbot		4965852	1					
ANR	4965892	AssignmentExpression	cp -> cbase = cp -> int_freed_top = cdata		4965852	1		=			
ANR	4965893	PtrMemberAccess	cp -> cbase		4965852	0					
ANR	4965894	Identifier	cp		4965852	0					
ANR	4965895	Identifier	cbase		4965852	1					
ANR	4965896	AssignmentExpression	cp -> int_freed_top = cdata		4965852	1		=			
ANR	4965897	PtrMemberAccess	cp -> int_freed_top		4965852	0					
ANR	4965898	Identifier	cp		4965852	0					
ANR	4965899	Identifier	int_freed_top		4965852	1					
ANR	4965900	Identifier	cdata		4965852	1					
ANR	4965901	ExpressionStatement	cp -> cend = top	2476:4:79784:79798	4965852	5	True				
ANR	4965902	AssignmentExpression	cp -> cend = top		4965852	0		=			
ANR	4965903	PtrMemberAccess	cp -> cend		4965852	0					
ANR	4965904	Identifier	cp		4965852	0					
ANR	4965905	Identifier	cend		4965852	1					
ANR	4965906	Identifier	top		4965852	1					
ANR	4965907	ExpressionStatement	cp -> rcur = 0	2477:4:79804:79816	4965852	6	True				
ANR	4965908	AssignmentExpression	cp -> rcur = 0		4965852	0		=			
ANR	4965909	PtrMemberAccess	cp -> rcur		4965852	0					
ANR	4965910	Identifier	cp		4965852	0					
ANR	4965911	Identifier	rcur		4965852	1					
ANR	4965912	PrimaryExpression	0		4965852	1					
ANR	4965913	ExpressionStatement	cp -> rtop = 0	2478:4:79822:79834	4965852	7	True				
ANR	4965914	AssignmentExpression	cp -> rtop = 0		4965852	0		=			
ANR	4965915	PtrMemberAccess	cp -> rtop		4965852	0					
ANR	4965916	Identifier	cp		4965852	0					
ANR	4965917	Identifier	rtop		4965852	1					
ANR	4965918	PrimaryExpression	0		4965852	1					
ANR	4965919	ExpressionStatement	cp -> outer = outer	2479:4:79840:79857	4965852	8	True				
ANR	4965920	AssignmentExpression	cp -> outer = outer		4965852	0		=			
ANR	4965921	PtrMemberAccess	cp -> outer		4965852	0					
ANR	4965922	Identifier	cp		4965852	0					
ANR	4965923	Identifier	outer		4965852	1					
ANR	4965924	Identifier	outer		4965852	1					
ANR	4965925	ExpressionStatement	cp -> inner_count = 0	2480:4:79863:79882	4965852	9	True				
ANR	4965926	AssignmentExpression	cp -> inner_count = 0		4965852	0		=			
ANR	4965927	PtrMemberAccess	cp -> inner_count		4965852	0					
ANR	4965928	Identifier	cp		4965852	0					
ANR	4965929	Identifier	inner_count		4965852	1					
ANR	4965930	PrimaryExpression	0		4965852	1					
ANR	4965931	ExpressionStatement	cp -> has_refs = false	2481:4:79888:79908	4965852	10	True				
ANR	4965932	AssignmentExpression	cp -> has_refs = false		4965852	0		=			
ANR	4965933	PtrMemberAccess	cp -> has_refs		4965852	0					
ANR	4965934	Identifier	cp		4965852	0					
ANR	4965935	Identifier	has_refs		4965852	1					
ANR	4965936	Identifier	false		4965852	1					
ANR	4965937	ExpressionStatement	cp -> sbase = cdata	2482:4:79914:79931	4965852	11	True				
ANR	4965938	AssignmentExpression	cp -> sbase = cdata		4965852	0		=			
ANR	4965939	PtrMemberAccess	cp -> sbase		4965852	0					
ANR	4965940	Identifier	cp		4965852	0					
ANR	4965941	Identifier	sbase		4965852	1					
ANR	4965942	Identifier	cdata		4965852	1					
ANR	4965943	ExpressionStatement	cp -> c_alone = false	2483:4:79937:79956	4965852	12	True				
ANR	4965944	AssignmentExpression	cp -> c_alone = false		4965852	0		=			
ANR	4965945	PtrMemberAccess	cp -> c_alone		4965852	0					
ANR	4965946	Identifier	cp		4965852	0					
ANR	4965947	Identifier	c_alone		4965852	1					
ANR	4965948	Identifier	false		4965852	1					
ANR	4965949	IfStatement	if ( has_strings && top - cdata >= string_space_quantum + sizeof ( long ) - 1 )		4965852	13					
ANR	4965950	Condition	has_strings && top - cdata >= string_space_quantum + sizeof ( long ) - 1	2484:8:80006:80074	4965852	0	True				
ANR	4965951	AndExpression	has_strings && top - cdata >= string_space_quantum + sizeof ( long ) - 1		4965852	0		&&			
ANR	4965952	Identifier	has_strings		4965852	0					
ANR	4965953	RelationalExpression	top - cdata >= string_space_quantum + sizeof ( long ) - 1		4965852	1		>=			
ANR	4965954	AdditiveExpression	top - cdata		4965852	0		-			
ANR	4965955	Identifier	top		4965852	0					
ANR	4965956	Identifier	cdata		4965852	1					
ANR	4965957	AdditiveExpression	string_space_quantum + sizeof ( long ) - 1		4965852	1		+			
ANR	4965958	Identifier	string_space_quantum		4965852	0					
ANR	4965959	AdditiveExpression	sizeof ( long ) - 1		4965852	1		-			
ANR	4965960	SizeofExpression	sizeof ( long )		4965852	0					
ANR	4965961	Sizeof	sizeof		4965852	0					
ANR	4965962	SizeofOperand	long		4965852	1					
ANR	4965963	PrimaryExpression	1		4965852	1					
ANR	4965964	CompoundStatement		22:8:641:688	4965852	1					
ANR	4965965	IdentifierDeclStatement	uint nquanta = string_space_quanta ( top - cdata ) ;	2489:8:80217:80264	4965852	0	True				
ANR	4965966	IdentifierDecl	nquanta = string_space_quanta ( top - cdata )		4965852	0					
ANR	4965967	IdentifierDeclType	uint		4965852	0					
ANR	4965968	Identifier	nquanta		4965852	1					
ANR	4965969	AssignmentExpression	nquanta = string_space_quanta ( top - cdata )		4965852	2		=			
ANR	4965970	Identifier	nquanta		4965852	0					
ANR	4965971	CallExpression	string_space_quanta ( top - cdata )		4965852	1					
ANR	4965972	Callee	string_space_quanta		4965852	0					
ANR	4965973	Identifier	string_space_quanta		4965852	0					
ANR	4965974	ArgumentList	top - cdata		4965852	1					
ANR	4965975	Argument	top - cdata		4965852	0					
ANR	4965976	AdditiveExpression	top - cdata		4965852	0		-			
ANR	4965977	Identifier	top		4965852	0					
ANR	4965978	Identifier	cdata		4965852	1					
ANR	4965979	ExpressionStatement	cp -> climit = cdata + nquanta * string_data_quantum	2491:8:80275:80325	4965852	1	True				
ANR	4965980	AssignmentExpression	cp -> climit = cdata + nquanta * string_data_quantum		4965852	0		=			
ANR	4965981	PtrMemberAccess	cp -> climit		4965852	0					
ANR	4965982	Identifier	cp		4965852	0					
ANR	4965983	Identifier	climit		4965852	1					
ANR	4965984	AdditiveExpression	cdata + nquanta * string_data_quantum		4965852	1		+			
ANR	4965985	Identifier	cdata		4965852	0					
ANR	4965986	MultiplicativeExpression	nquanta * string_data_quantum		4965852	1		*			
ANR	4965987	Identifier	nquanta		4965852	0					
ANR	4965988	Identifier	string_data_quantum		4965852	1					
ANR	4965989	ExpressionStatement	cp -> smark = cp -> climit	2492:8:80335:80357	4965852	2	True				
ANR	4965990	AssignmentExpression	cp -> smark = cp -> climit		4965852	0		=			
ANR	4965991	PtrMemberAccess	cp -> smark		4965852	0					
ANR	4965992	Identifier	cp		4965852	0					
ANR	4965993	Identifier	smark		4965852	1					
ANR	4965994	PtrMemberAccess	cp -> climit		4965852	1					
ANR	4965995	Identifier	cp		4965852	0					
ANR	4965996	Identifier	climit		4965852	1					
ANR	4965997	ExpressionStatement	cp -> smark_size = string_quanta_mark_size ( nquanta )	2493:8:80367:80416	4965852	3	True				
ANR	4965998	AssignmentExpression	cp -> smark_size = string_quanta_mark_size ( nquanta )		4965852	0		=			
ANR	4965999	PtrMemberAccess	cp -> smark_size		4965852	0					
ANR	4966000	Identifier	cp		4965852	0					
ANR	4966001	Identifier	smark_size		4965852	1					
ANR	4966002	CallExpression	string_quanta_mark_size ( nquanta )		4965852	1					
ANR	4966003	Callee	string_quanta_mark_size		4965852	0					
ANR	4966004	Identifier	string_quanta_mark_size		4965852	0					
ANR	4966005	ArgumentList	nquanta		4965852	1					
ANR	4966006	Argument	nquanta		4965852	0					
ANR	4966007	Identifier	nquanta		4965852	0					
ANR	4966008	ExpressionStatement	cp -> sreloc = ( string_reloc_offset * ) ( cp -> smark + cp -> smark_size )	2494:8:80426:80503	4965852	4	True				
ANR	4966009	AssignmentExpression	cp -> sreloc = ( string_reloc_offset * ) ( cp -> smark + cp -> smark_size )		4965852	0		=			
ANR	4966010	PtrMemberAccess	cp -> sreloc		4965852	0					
ANR	4966011	Identifier	cp		4965852	0					
ANR	4966012	Identifier	sreloc		4965852	1					
ANR	4966013	CastExpression	( string_reloc_offset * ) ( cp -> smark + cp -> smark_size )		4965852	1					
ANR	4966014	CastTarget	string_reloc_offset *		4965852	0					
ANR	4966015	AdditiveExpression	cp -> smark + cp -> smark_size		4965852	1		+			
ANR	4966016	PtrMemberAccess	cp -> smark		4965852	0					
ANR	4966017	Identifier	cp		4965852	0					
ANR	4966018	Identifier	smark		4965852	1					
ANR	4966019	PtrMemberAccess	cp -> smark_size		4965852	1					
ANR	4966020	Identifier	cp		4965852	0					
ANR	4966021	Identifier	smark_size		4965852	1					
ANR	4966022	ExpressionStatement	cp -> sfree1 = ( uint * ) cp -> sreloc	2496:8:80513:80545	4965852	5	True				
ANR	4966023	AssignmentExpression	cp -> sfree1 = ( uint * ) cp -> sreloc		4965852	0		=			
ANR	4966024	PtrMemberAccess	cp -> sfree1		4965852	0					
ANR	4966025	Identifier	cp		4965852	0					
ANR	4966026	Identifier	sfree1		4965852	1					
ANR	4966027	CastExpression	( uint * ) cp -> sreloc		4965852	1					
ANR	4966028	CastTarget	uint *		4965852	0					
ANR	4966029	PtrMemberAccess	cp -> sreloc		4965852	1					
ANR	4966030	Identifier	cp		4965852	0					
ANR	4966031	Identifier	sreloc		4965852	1					
ANR	4966032	ElseStatement	else		4965852	0					
ANR	4966033	CompoundStatement		30:11:982:982	4965852	0					
ANR	4966034	ExpressionStatement	cp -> climit = cp -> cend	2499:8:80627:80648	4965852	0	True				
ANR	4966035	AssignmentExpression	cp -> climit = cp -> cend		4965852	0		=			
ANR	4966036	PtrMemberAccess	cp -> climit		4965852	0					
ANR	4966037	Identifier	cp		4965852	0					
ANR	4966038	Identifier	climit		4965852	1					
ANR	4966039	PtrMemberAccess	cp -> cend		4965852	1					
ANR	4966040	Identifier	cp		4965852	0					
ANR	4966041	Identifier	cend		4965852	1					
ANR	4966042	ExpressionStatement	cp -> sfree1 = 0	2500:8:80658:80672	4965852	1	True				
ANR	4966043	AssignmentExpression	cp -> sfree1 = 0		4965852	0		=			
ANR	4966044	PtrMemberAccess	cp -> sfree1		4965852	0					
ANR	4966045	Identifier	cp		4965852	0					
ANR	4966046	Identifier	sfree1		4965852	1					
ANR	4966047	PrimaryExpression	0		4965852	1					
ANR	4966048	ExpressionStatement	cp -> smark = 0	2501:8:80682:80695	4965852	2	True				
ANR	4966049	AssignmentExpression	cp -> smark = 0		4965852	0		=			
ANR	4966050	PtrMemberAccess	cp -> smark		4965852	0					
ANR	4966051	Identifier	cp		4965852	0					
ANR	4966052	Identifier	smark		4965852	1					
ANR	4966053	PrimaryExpression	0		4965852	1					
ANR	4966054	ExpressionStatement	cp -> smark_size = 0	2502:8:80705:80723	4965852	3	True				
ANR	4966055	AssignmentExpression	cp -> smark_size = 0		4965852	0		=			
ANR	4966056	PtrMemberAccess	cp -> smark_size		4965852	0					
ANR	4966057	Identifier	cp		4965852	0					
ANR	4966058	Identifier	smark_size		4965852	1					
ANR	4966059	PrimaryExpression	0		4965852	1					
ANR	4966060	ExpressionStatement	cp -> sreloc = 0	2503:8:80733:80747	4965852	4	True				
ANR	4966061	AssignmentExpression	cp -> sreloc = 0		4965852	0		=			
ANR	4966062	PtrMemberAccess	cp -> sreloc		4965852	0					
ANR	4966063	Identifier	cp		4965852	0					
ANR	4966064	Identifier	sreloc		4965852	1					
ANR	4966065	PrimaryExpression	0		4965852	1					
ANR	4966066	ExpressionStatement	cp -> ctop = cp -> climit	2505:4:80759:80780	4965852	14	True				
ANR	4966067	AssignmentExpression	cp -> ctop = cp -> climit		4965852	0		=			
ANR	4966068	PtrMemberAccess	cp -> ctop		4965852	0					
ANR	4966069	Identifier	cp		4965852	0					
ANR	4966070	Identifier	ctop		4965852	1					
ANR	4966071	PtrMemberAccess	cp -> climit		4965852	1					
ANR	4966072	Identifier	cp		4965852	0					
ANR	4966073	Identifier	climit		4965852	1					
ANR	4966074	ExpressionStatement	alloc_init_free_strings ( cp )	2506:4:80786:80813	4965852	15	True				
ANR	4966075	CallExpression	alloc_init_free_strings ( cp )		4965852	0					
ANR	4966076	Callee	alloc_init_free_strings		4965852	0					
ANR	4966077	Identifier	alloc_init_free_strings		4965852	0					
ANR	4966078	ArgumentList	cp		4965852	1					
ANR	4966079	Argument	cp		4965852	0					
ANR	4966080	Identifier	cp		4965852	0					
ANR	4966081	ReturnType	void		4965852	1					
ANR	4966082	Identifier	alloc_init_clump		4965852	2					
ANR	4966083	ParameterList	"clump_t * cp , byte * bot , byte * top , bool has_strings , clump_t * outer"		4965852	3					
ANR	4966084	Parameter	clump_t * cp	2466:17:79485:79496	4965852	0	True				
ANR	4966085	ParameterType	clump_t *		4965852	0					
ANR	4966086	Identifier	cp		4965852	1					
ANR	4966087	Parameter	byte * bot	2466:31:79499:79508	4965852	1	True				
ANR	4966088	ParameterType	byte *		4965852	0					
ANR	4966089	Identifier	bot		4965852	1					
ANR	4966090	Parameter	byte * top	2466:43:79511:79520	4965852	2	True				
ANR	4966091	ParameterType	byte *		4965852	0					
ANR	4966092	Identifier	top		4965852	1					
ANR	4966093	Parameter	bool has_strings	2466:55:79523:79538	4965852	3	True				
ANR	4966094	ParameterType	bool		4965852	0					
ANR	4966095	Identifier	has_strings		4965852	1					
ANR	4966096	Parameter	clump_t * outer	2467:17:79558:79572	4965852	4	True				
ANR	4966097	ParameterType	clump_t *		4965852	0					
ANR	4966098	Identifier	outer		4965852	1					
ANR	4966099	CFGEntryNode	ENTRY		4965852		True				
ANR	4966100	CFGExitNode	EXIT		4965852		True				
ANR	4966101	Symbol	cp -> rtop		4965852						
ANR	4966102	Symbol	bot		4965852						
ANR	4966103	Symbol	cp -> cend		4965852						
ANR	4966104	Symbol	cp -> inner_count		4965852						
ANR	4966105	Symbol	cp -> sreloc		4965852						
ANR	4966106	Symbol	cp -> climit		4965852						
ANR	4966107	Symbol	cp -> rcur		4965852						
ANR	4966108	Symbol	cp -> chead		4965852						
ANR	4966109	Symbol	cp -> cbot		4965852						
ANR	4966110	Symbol	top		4965852						
ANR	4966111	Symbol	string_data_quantum		4965852						
ANR	4966112	Symbol	cp -> sfree1		4965852						
ANR	4966113	Symbol	cp -> has_refs		4965852						
ANR	4966114	Symbol	string_space_quanta		4965852						
ANR	4966115	Symbol	string_quanta_mark_size		4965852						
ANR	4966116	Symbol	cp -> ctop		4965852						
ANR	4966117	Symbol	outer -> inner_count		4965852						
ANR	4966118	Symbol	string_space_quantum		4965852						
ANR	4966119	Symbol	outer		4965852						
ANR	4966120	Symbol	false		4965852						
ANR	4966121	Symbol	cp -> c_alone		4965852						
ANR	4966122	Symbol	cp -> cbase		4965852						
ANR	4966123	Symbol	cp		4965852						
ANR	4966124	Symbol	cp -> int_freed_top		4965852						
ANR	4966125	Symbol	cdata		4965852						
ANR	4966126	Symbol	* cp		4965852						
ANR	4966127	Symbol	nquanta		4965852						
ANR	4966128	Symbol	* outer		4965852						
ANR	4966129	Symbol	cp -> smark_size		4965852						
ANR	4966130	Symbol	cp -> outer		4965852						
ANR	4966131	Symbol	has_strings		4965852						
ANR	4966132	Symbol	cp -> sbase		4965852						
ANR	4966133	Symbol	cp -> smark		4965852						
ANR	4966134	Function	alloc_init_free_strings	2510:0:80868:81010							
ANR	4966135	FunctionDef	alloc_init_free_strings (clump_t * cp)		4966134	0					
ANR	4966136	CompoundStatement		2512:0:80911:81010	4966134	0					
ANR	4966137	IfStatement	if ( cp -> sfree1 )		4966134	0					
ANR	4966138	Condition	cp -> sfree1	2513:8:80921:80930	4966134	0	True				
ANR	4966139	PtrMemberAccess	cp -> sfree1		4966134	0					
ANR	4966140	Identifier	cp		4966134	0					
ANR	4966141	Identifier	sfree1		4966134	1					
ANR	4966142	ExpressionStatement	"memset ( cp -> sfree1 , 0 , STRING_FREELIST_SPACE ( cp ) )"	2514:8:80941:80989	4966134	1	True				
ANR	4966143	CallExpression	"memset ( cp -> sfree1 , 0 , STRING_FREELIST_SPACE ( cp ) )"		4966134	0					
ANR	4966144	Callee	memset		4966134	0					
ANR	4966145	Identifier	memset		4966134	0					
ANR	4966146	ArgumentList	cp -> sfree1		4966134	1					
ANR	4966147	Argument	cp -> sfree1		4966134	0					
ANR	4966148	PtrMemberAccess	cp -> sfree1		4966134	0					
ANR	4966149	Identifier	cp		4966134	0					
ANR	4966150	Identifier	sfree1		4966134	1					
ANR	4966151	Argument	0		4966134	1					
ANR	4966152	PrimaryExpression	0		4966134	0					
ANR	4966153	Argument	STRING_FREELIST_SPACE ( cp )		4966134	2					
ANR	4966154	CallExpression	STRING_FREELIST_SPACE ( cp )		4966134	0					
ANR	4966155	Callee	STRING_FREELIST_SPACE		4966134	0					
ANR	4966156	Identifier	STRING_FREELIST_SPACE		4966134	0					
ANR	4966157	ArgumentList	cp		4966134	1					
ANR	4966158	Argument	cp		4966134	0					
ANR	4966159	Identifier	cp		4966134	0					
ANR	4966160	ExpressionStatement	cp -> sfree = 0	2515:4:80995:81008	4966134	1	True				
ANR	4966161	AssignmentExpression	cp -> sfree = 0		4966134	0		=			
ANR	4966162	PtrMemberAccess	cp -> sfree		4966134	0					
ANR	4966163	Identifier	cp		4966134	0					
ANR	4966164	Identifier	sfree		4966134	1					
ANR	4966165	PrimaryExpression	0		4966134	1					
ANR	4966166	ReturnType	void		4966134	1					
ANR	4966167	Identifier	alloc_init_free_strings		4966134	2					
ANR	4966168	ParameterList	clump_t * cp		4966134	3					
ANR	4966169	Parameter	clump_t * cp	2511:24:80897:80908	4966134	0	True				
ANR	4966170	ParameterType	clump_t *		4966134	0					
ANR	4966171	Identifier	cp		4966134	1					
ANR	4966172	CFGEntryNode	ENTRY		4966134		True				
ANR	4966173	CFGExitNode	EXIT		4966134		True				
ANR	4966174	Symbol	* cp		4966134						
ANR	4966175	Symbol	cp -> sfree		4966134						
ANR	4966176	Symbol	cp -> sfree1		4966134						
ANR	4966177	Symbol	STRING_FREELIST_SPACE		4966134						
ANR	4966178	Symbol	cp		4966134						
ANR	4966179	Function	alloc_close_clump	2520:0:81099:81355							
ANR	4966180	FunctionDef	alloc_close_clump (gs_ref_memory_t * mem)		4966179	0					
ANR	4966181	CompoundStatement		2522:0:81145:81355	4966179	0					
ANR	4966182	IfStatement	if ( gs_debug_c ( 'A' ) )		4966179	0					
ANR	4966183	Condition	gs_debug_c ( 'A' )	2524:8:81168:81182	4966179	0	True				
ANR	4966184	CallExpression	gs_debug_c ( 'A' )		4966179	0					
ANR	4966185	Callee	gs_debug_c		4966179	0					
ANR	4966186	Identifier	gs_debug_c		4966179	0					
ANR	4966187	ArgumentList	'A'		4966179	1					
ANR	4966188	Argument	'A'		4966179	0					
ANR	4966189	PrimaryExpression	'A'		4966179	0					
ANR	4966190	CompoundStatement		3:25:39:39	4966179	1					
ANR	4966191	ExpressionStatement	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"	2525:8:81195:81264	4966179	0	True				
ANR	4966192	CallExpression	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"		4966179	0					
ANR	4966193	Callee	dmlprintf1		4966179	0					
ANR	4966194	Identifier	dmlprintf1		4966179	0					
ANR	4966195	ArgumentList	( const gs_memory_t * ) mem		4966179	1					
ANR	4966196	Argument	( const gs_memory_t * ) mem		4966179	0					
ANR	4966197	CastExpression	( const gs_memory_t * ) mem		4966179	0					
ANR	4966198	CastTarget	const gs_memory_t *		4966179	0					
ANR	4966199	Identifier	mem		4966179	1					
ANR	4966200	Argument	"""[a%d]"""		4966179	1					
ANR	4966201	PrimaryExpression	"""[a%d]"""		4966179	0					
ANR	4966202	Argument	alloc_trace_space ( mem )		4966179	2					
ANR	4966203	CallExpression	alloc_trace_space ( mem )		4966179	0					
ANR	4966204	Callee	alloc_trace_space		4966179	0					
ANR	4966205	Identifier	alloc_trace_space		4966179	0					
ANR	4966206	ArgumentList	mem		4966179	1					
ANR	4966207	Argument	mem		4966179	0					
ANR	4966208	Identifier	mem		4966179	0					
ANR	4966209	ExpressionStatement	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""closing clump"" , mem -> cc )"	2526:8:81274:81340	4966179	1	True				
ANR	4966210	CallExpression	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""closing clump"" , mem -> cc )"		4966179	0					
ANR	4966211	Callee	dmprintf_clump		4966179	0					
ANR	4966212	Identifier	dmprintf_clump		4966179	0					
ANR	4966213	ArgumentList	( const gs_memory_t * ) mem		4966179	1					
ANR	4966214	Argument	( const gs_memory_t * ) mem		4966179	0					
ANR	4966215	CastExpression	( const gs_memory_t * ) mem		4966179	0					
ANR	4966216	CastTarget	const gs_memory_t *		4966179	0					
ANR	4966217	Identifier	mem		4966179	1					
ANR	4966218	Argument	"""closing clump"""		4966179	1					
ANR	4966219	PrimaryExpression	"""closing clump"""		4966179	0					
ANR	4966220	Argument	mem -> cc		4966179	2					
ANR	4966221	PtrMemberAccess	mem -> cc		4966179	0					
ANR	4966222	Identifier	mem		4966179	0					
ANR	4966223	Identifier	cc		4966179	1					
ANR	4966224	ReturnType	void		4966179	1					
ANR	4966225	Identifier	alloc_close_clump		4966179	2					
ANR	4966226	ParameterList	gs_ref_memory_t * mem		4966179	3					
ANR	4966227	Parameter	gs_ref_memory_t * mem	2521:18:81122:81142	4966179	0	True				
ANR	4966228	ParameterType	gs_ref_memory_t *		4966179	0					
ANR	4966229	Identifier	mem		4966179	1					
ANR	4966230	CFGEntryNode	ENTRY		4966179		True				
ANR	4966231	CFGExitNode	EXIT		4966179		True				
ANR	4966232	Symbol	mem		4966179						
ANR	4966233	Symbol	mem -> cc		4966179						
ANR	4966234	Symbol	gs_debug_c		4966179						
ANR	4966235	Symbol	alloc_trace_space		4966179						
ANR	4966236	Symbol	* mem		4966179						
ANR	4966237	Function	alloc_open_clump	2532:0:81412:81667							
ANR	4966238	FunctionDef	alloc_open_clump (gs_ref_memory_t * mem)		4966237	0					
ANR	4966239	CompoundStatement		2534:0:81457:81667	4966237	0					
ANR	4966240	IfStatement	if ( gs_debug_c ( 'A' ) )		4966237	0					
ANR	4966241	Condition	gs_debug_c ( 'A' )	2536:8:81480:81494	4966237	0	True				
ANR	4966242	CallExpression	gs_debug_c ( 'A' )		4966237	0					
ANR	4966243	Callee	gs_debug_c		4966237	0					
ANR	4966244	Identifier	gs_debug_c		4966237	0					
ANR	4966245	ArgumentList	'A'		4966237	1					
ANR	4966246	Argument	'A'		4966237	0					
ANR	4966247	PrimaryExpression	'A'		4966237	0					
ANR	4966248	CompoundStatement		3:25:39:39	4966237	1					
ANR	4966249	ExpressionStatement	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"	2537:8:81507:81576	4966237	0	True				
ANR	4966250	CallExpression	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"		4966237	0					
ANR	4966251	Callee	dmlprintf1		4966237	0					
ANR	4966252	Identifier	dmlprintf1		4966237	0					
ANR	4966253	ArgumentList	( const gs_memory_t * ) mem		4966237	1					
ANR	4966254	Argument	( const gs_memory_t * ) mem		4966237	0					
ANR	4966255	CastExpression	( const gs_memory_t * ) mem		4966237	0					
ANR	4966256	CastTarget	const gs_memory_t *		4966237	0					
ANR	4966257	Identifier	mem		4966237	1					
ANR	4966258	Argument	"""[a%d]"""		4966237	1					
ANR	4966259	PrimaryExpression	"""[a%d]"""		4966237	0					
ANR	4966260	Argument	alloc_trace_space ( mem )		4966237	2					
ANR	4966261	CallExpression	alloc_trace_space ( mem )		4966237	0					
ANR	4966262	Callee	alloc_trace_space		4966237	0					
ANR	4966263	Identifier	alloc_trace_space		4966237	0					
ANR	4966264	ArgumentList	mem		4966237	1					
ANR	4966265	Argument	mem		4966237	0					
ANR	4966266	Identifier	mem		4966237	0					
ANR	4966267	ExpressionStatement	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""opening clump"" , mem -> cc )"	2538:8:81586:81652	4966237	1	True				
ANR	4966268	CallExpression	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""opening clump"" , mem -> cc )"		4966237	0					
ANR	4966269	Callee	dmprintf_clump		4966237	0					
ANR	4966270	Identifier	dmprintf_clump		4966237	0					
ANR	4966271	ArgumentList	( const gs_memory_t * ) mem		4966237	1					
ANR	4966272	Argument	( const gs_memory_t * ) mem		4966237	0					
ANR	4966273	CastExpression	( const gs_memory_t * ) mem		4966237	0					
ANR	4966274	CastTarget	const gs_memory_t *		4966237	0					
ANR	4966275	Identifier	mem		4966237	1					
ANR	4966276	Argument	"""opening clump"""		4966237	1					
ANR	4966277	PrimaryExpression	"""opening clump"""		4966237	0					
ANR	4966278	Argument	mem -> cc		4966237	2					
ANR	4966279	PtrMemberAccess	mem -> cc		4966237	0					
ANR	4966280	Identifier	mem		4966237	0					
ANR	4966281	Identifier	cc		4966237	1					
ANR	4966282	ReturnType	void		4966237	1					
ANR	4966283	Identifier	alloc_open_clump		4966237	2					
ANR	4966284	ParameterList	gs_ref_memory_t * mem		4966237	3					
ANR	4966285	Parameter	gs_ref_memory_t * mem	2533:17:81434:81454	4966237	0	True				
ANR	4966286	ParameterType	gs_ref_memory_t *		4966237	0					
ANR	4966287	Identifier	mem		4966237	1					
ANR	4966288	CFGEntryNode	ENTRY		4966237		True				
ANR	4966289	CFGExitNode	EXIT		4966237		True				
ANR	4966290	Symbol	mem		4966237						
ANR	4966291	Symbol	mem -> cc		4966237						
ANR	4966292	Symbol	gs_debug_c		4966237						
ANR	4966293	Symbol	alloc_trace_space		4966237						
ANR	4966294	Symbol	* mem		4966237						
ANR	4966295	Function	check_in_clump	2544:0:81683:81888							
ANR	4966296	FunctionDef	"check_in_clump (clump_t * cp , void * arg)"		4966295	0					
ANR	4966297	CompoundStatement		2546:0:81748:81888	4966295	0					
ANR	4966298	IdentifierDeclStatement	clump_t * * cpp = ( clump_t * * ) arg ;	2547:4:81754:81785	4966295	0	True				
ANR	4966299	IdentifierDecl	* * cpp = ( clump_t * * ) arg		4966295	0					
ANR	4966300	IdentifierDeclType	clump_t * *		4966295	0					
ANR	4966301	Identifier	cpp		4966295	1					
ANR	4966302	AssignmentExpression	* * cpp = ( clump_t * * ) arg		4966295	2		=			
ANR	4966303	Identifier	cpp		4966295	0					
ANR	4966304	CastExpression	( clump_t * * ) arg		4966295	1					
ANR	4966305	CastTarget	clump_t * *		4966295	0					
ANR	4966306	Identifier	arg		4966295	1					
ANR	4966307	IfStatement	if ( * cpp != cp )		4966295	1					
ANR	4966308	Condition	* cpp != cp	2549:8:81796:81805	4966295	0	True				
ANR	4966309	EqualityExpression	* cpp != cp		4966295	0		!=			
ANR	4966310	UnaryOperationExpression	* cpp		4966295	0					
ANR	4966311	UnaryOperator	*		4966295	0					
ANR	4966312	Identifier	cpp		4966295	1					
ANR	4966313	Identifier	cp		4966295	1					
ANR	4966314	ReturnStatement	return SPLAY_APP_CONTINUE ;	2550:8:81816:81841	4966295	1	True				
ANR	4966315	Identifier	SPLAY_APP_CONTINUE		4966295	0					
ANR	4966316	ExpressionStatement	* cpp = NULL	2551:4:81847:81858	4966295	2	True				
ANR	4966317	AssignmentExpression	* cpp = NULL		4966295	0		=			
ANR	4966318	UnaryOperationExpression	* cpp		4966295	0					
ANR	4966319	UnaryOperator	*		4966295	0					
ANR	4966320	Identifier	cpp		4966295	1					
ANR	4966321	Identifier	NULL		4966295	1					
ANR	4966322	ReturnStatement	return SPLAY_APP_STOP ;	2553:4:81865:81886	4966295	3	True				
ANR	4966323	Identifier	SPLAY_APP_STOP		4966295	0					
ANR	4966324	ReturnType	static splay_app_result_t		4966295	1					
ANR	4966325	Identifier	check_in_clump		4966295	2					
ANR	4966326	ParameterList	"clump_t * cp , void * arg"		4966295	3					
ANR	4966327	Parameter	clump_t * cp	2545:15:81724:81734	4966295	0	True				
ANR	4966328	ParameterType	clump_t *		4966295	0					
ANR	4966329	Identifier	cp		4966295	1					
ANR	4966330	Parameter	void * arg	2545:28:81737:81745	4966295	1	True				
ANR	4966331	ParameterType	void *		4966295	0					
ANR	4966332	Identifier	arg		4966295	1					
ANR	4966333	CFGEntryNode	ENTRY		4966295		True				
ANR	4966334	CFGExitNode	EXIT		4966295		True				
ANR	4966335	Symbol	cpp		4966295						
ANR	4966336	Symbol	* cpp		4966295						
ANR	4966337	Symbol	SPLAY_APP_STOP		4966295						
ANR	4966338	Symbol	NULL		4966295						
ANR	4966339	Symbol	arg		4966295						
ANR	4966340	Symbol	cp		4966295						
ANR	4966341	Symbol	SPLAY_APP_CONTINUE		4966295						
ANR	4966342	Function	alloc_unlink_clump	2558:0:81965:82582							
ANR	4966343	FunctionDef	"alloc_unlink_clump (clump_t * cp , gs_ref_memory_t * mem)"		4966342	0					
ANR	4966344	CompoundStatement		2560:0:82026:82582	4966342	0					
ANR	4966345	ExpressionStatement	SANITY_CHECK_MID ( cp )	2561:4:82032:82052	4966342	0	True				
ANR	4966346	CallExpression	SANITY_CHECK_MID ( cp )		4966342	0					
ANR	4966347	Callee	SANITY_CHECK_MID		4966342	0					
ANR	4966348	Identifier	SANITY_CHECK_MID		4966342	0					
ANR	4966349	ArgumentList	cp		4966342	1					
ANR	4966350	Argument	cp		4966342	0					
ANR	4966351	Identifier	cp		4966342	0					
ANR	4966352	IfStatement	if ( gs_alloc_debug )		4966342	1					
ANR	4966353	Condition	gs_alloc_debug	2563:8:82075:82088	4966342	0	True				
ANR	4966354	Identifier	gs_alloc_debug		4966342	0					
ANR	4966355	CompoundStatement		5:8:137:156	4966342	1					
ANR	4966356	IdentifierDeclStatement	clump_t * found = cp ;	2564:8:82164:82183	4966342	0	True				
ANR	4966357	IdentifierDecl	* found = cp		4966342	0					
ANR	4966358	IdentifierDeclType	clump_t *		4966342	0					
ANR	4966359	Identifier	found		4966342	1					
ANR	4966360	AssignmentExpression	* found = cp		4966342	2		=			
ANR	4966361	Identifier	cp		4966342	0					
ANR	4966362	Identifier	cp		4966342	1					
ANR	4966363	ExpressionStatement	"clump_splay_app ( mem -> root , mem , check_in_clump , & found )"	2565:8:82193:82248	4966342	1	True				
ANR	4966364	CallExpression	"clump_splay_app ( mem -> root , mem , check_in_clump , & found )"		4966342	0					
ANR	4966365	Callee	clump_splay_app		4966342	0					
ANR	4966366	Identifier	clump_splay_app		4966342	0					
ANR	4966367	ArgumentList	mem -> root		4966342	1					
ANR	4966368	Argument	mem -> root		4966342	0					
ANR	4966369	PtrMemberAccess	mem -> root		4966342	0					
ANR	4966370	Identifier	mem		4966342	0					
ANR	4966371	Identifier	root		4966342	1					
ANR	4966372	Argument	mem		4966342	1					
ANR	4966373	Identifier	mem		4966342	0					
ANR	4966374	Argument	check_in_clump		4966342	2					
ANR	4966375	Identifier	check_in_clump		4966342	0					
ANR	4966376	Argument	& found		4966342	3					
ANR	4966377	UnaryOperationExpression	& found		4966342	0					
ANR	4966378	UnaryOperator	&		4966342	0					
ANR	4966379	Identifier	found		4966342	1					
ANR	4966380	IfStatement	if ( found != NULL )		4966342	2					
ANR	4966381	Condition	found != NULL	2567:12:82263:82275	4966342	0	True				
ANR	4966382	EqualityExpression	found != NULL		4966342	0		!=			
ANR	4966383	Identifier	found		4966342	0					
ANR	4966384	Identifier	NULL		4966342	1					
ANR	4966385	CompoundStatement		8:27:251:251	4966342	1					
ANR	4966386	ExpressionStatement	"mlprintf2 ( ( const gs_memory_t * ) mem , ""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"" , ( ulong ) cp , ( ulong ) mem )"	2568:12:82292:82425	4966342	0	True				
ANR	4966387	CallExpression	"mlprintf2 ( ( const gs_memory_t * ) mem , ""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"" , ( ulong ) cp , ( ulong ) mem )"		4966342	0					
ANR	4966388	Callee	mlprintf2		4966342	0					
ANR	4966389	Identifier	mlprintf2		4966342	0					
ANR	4966390	ArgumentList	( const gs_memory_t * ) mem		4966342	1					
ANR	4966391	Argument	( const gs_memory_t * ) mem		4966342	0					
ANR	4966392	CastExpression	( const gs_memory_t * ) mem		4966342	0					
ANR	4966393	CastTarget	const gs_memory_t *		4966342	0					
ANR	4966394	Identifier	mem		4966342	1					
ANR	4966395	Argument	"""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"""		4966342	1					
ANR	4966396	PrimaryExpression	"""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"""		4966342	0					
ANR	4966397	Argument	( ulong ) cp		4966342	2					
ANR	4966398	CastExpression	( ulong ) cp		4966342	0					
ANR	4966399	CastTarget	ulong		4966342	0					
ANR	4966400	Identifier	cp		4966342	1					
ANR	4966401	Argument	( ulong ) mem		4966342	3					
ANR	4966402	CastExpression	( ulong ) mem		4966342	0					
ANR	4966403	CastTarget	ulong		4966342	0					
ANR	4966404	Identifier	mem		4966342	1					
ANR	4966405	ReturnStatement	return ;	2570:12:82439:82445	4966342	1	True				
ANR	4966406	ExpressionStatement	"( void ) clump_splay_remove ( cp , mem )"	2574:4:82492:82525	4966342	2	True				
ANR	4966407	CastExpression	"( void ) clump_splay_remove ( cp , mem )"		4966342	0					
ANR	4966408	CastTarget	void		4966342	0					
ANR	4966409	CallExpression	"clump_splay_remove ( cp , mem )"		4966342	1					
ANR	4966410	Callee	clump_splay_remove		4966342	0					
ANR	4966411	Identifier	clump_splay_remove		4966342	0					
ANR	4966412	ArgumentList	cp		4966342	1					
ANR	4966413	Argument	cp		4966342	0					
ANR	4966414	Identifier	cp		4966342	0					
ANR	4966415	Argument	mem		4966342	1					
ANR	4966416	Identifier	mem		4966342	0					
ANR	4966417	IfStatement	if ( mem -> cc == cp )		4966342	3					
ANR	4966418	Condition	mem -> cc == cp	2575:8:82535:82547	4966342	0	True				
ANR	4966419	EqualityExpression	mem -> cc == cp		4966342	0		==			
ANR	4966420	PtrMemberAccess	mem -> cc		4966342	0					
ANR	4966421	Identifier	mem		4966342	0					
ANR	4966422	Identifier	cc		4966342	1					
ANR	4966423	Identifier	cp		4966342	1					
ANR	4966424	CompoundStatement		16:23:523:523	4966342	1					
ANR	4966425	ExpressionStatement	mem -> cc = NULL	2576:8:82560:82574	4966342	0	True				
ANR	4966426	AssignmentExpression	mem -> cc = NULL		4966342	0		=			
ANR	4966427	PtrMemberAccess	mem -> cc		4966342	0					
ANR	4966428	Identifier	mem		4966342	0					
ANR	4966429	Identifier	cc		4966342	1					
ANR	4966430	Identifier	NULL		4966342	1					
ANR	4966431	ReturnType	void		4966342	1					
ANR	4966432	Identifier	alloc_unlink_clump		4966342	2					
ANR	4966433	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		4966342	3					
ANR	4966434	Parameter	clump_t * cp	2559:19:81989:82000	4966342	0	True				
ANR	4966435	ParameterType	clump_t *		4966342	0					
ANR	4966436	Identifier	cp		4966342	1					
ANR	4966437	Parameter	gs_ref_memory_t * mem	2559:33:82003:82023	4966342	1	True				
ANR	4966438	ParameterType	gs_ref_memory_t *		4966342	0					
ANR	4966439	Identifier	mem		4966342	1					
ANR	4966440	CFGEntryNode	ENTRY		4966342		True				
ANR	4966441	CFGExitNode	EXIT		4966342		True				
ANR	4966442	Symbol	& found		4966342						
ANR	4966443	Symbol	found		4966342						
ANR	4966444	Symbol	NULL		4966342						
ANR	4966445	Symbol	mem		4966342						
ANR	4966446	Symbol	check_in_clump		4966342						
ANR	4966447	Symbol	mem -> cc		4966342						
ANR	4966448	Symbol	gs_alloc_debug		4966342						
ANR	4966449	Symbol	mem -> root		4966342						
ANR	4966450	Symbol	cp		4966342						
ANR	4966451	Symbol	* mem		4966342						
ANR	4966452	Function	alloc_free_clump	2586:0:82821:83439							
ANR	4966453	FunctionDef	"alloc_free_clump (clump_t * cp , gs_ref_memory_t * mem)"		4966452	0					
ANR	4966454	CompoundStatement		2588:0:82880:83439	4966452	0					
ANR	4966455	IdentifierDeclStatement	gs_memory_t * parent = mem -> non_gc_memory ;	2589:4:82886:82926	4966452	0	True				
ANR	4966456	IdentifierDecl	* parent = mem -> non_gc_memory		4966452	0					
ANR	4966457	IdentifierDeclType	gs_memory_t *		4966452	0					
ANR	4966458	Identifier	parent		4966452	1					
ANR	4966459	AssignmentExpression	* parent = mem -> non_gc_memory		4966452	2		=			
ANR	4966460	Identifier	parent		4966452	0					
ANR	4966461	PtrMemberAccess	mem -> non_gc_memory		4966452	1					
ANR	4966462	Identifier	mem		4966452	0					
ANR	4966463	Identifier	non_gc_memory		4966452	1					
ANR	4966464	IdentifierDeclStatement	byte * cdata = ( byte * ) cp -> chead ;	2590:4:82932:82963	4966452	1	True				
ANR	4966465	IdentifierDecl	* cdata = ( byte * ) cp -> chead		4966452	0					
ANR	4966466	IdentifierDeclType	byte *		4966452	0					
ANR	4966467	Identifier	cdata		4966452	1					
ANR	4966468	AssignmentExpression	* cdata = ( byte * ) cp -> chead		4966452	2		=			
ANR	4966469	Identifier	cdata		4966452	0					
ANR	4966470	CastExpression	( byte * ) cp -> chead		4966452	1					
ANR	4966471	CastTarget	byte *		4966452	0					
ANR	4966472	PtrMemberAccess	cp -> chead		4966452	1					
ANR	4966473	Identifier	cp		4966452	0					
ANR	4966474	Identifier	chead		4966452	1					
ANR	4966475	IdentifierDeclStatement	ulong csize = ( byte * ) cp -> cend - cdata ;	2591:4:82969:83007	4966452	2	True				
ANR	4966476	IdentifierDecl	csize = ( byte * ) cp -> cend - cdata		4966452	0					
ANR	4966477	IdentifierDeclType	ulong		4966452	0					
ANR	4966478	Identifier	csize		4966452	1					
ANR	4966479	AssignmentExpression	csize = ( byte * ) cp -> cend - cdata		4966452	2		=			
ANR	4966480	Identifier	csize		4966452	0					
ANR	4966481	AdditiveExpression	( byte * ) cp -> cend - cdata		4966452	1		-			
ANR	4966482	CastExpression	( byte * ) cp -> cend		4966452	0					
ANR	4966483	CastTarget	byte *		4966452	0					
ANR	4966484	PtrMemberAccess	cp -> cend		4966452	1					
ANR	4966485	Identifier	cp		4966452	0					
ANR	4966486	Identifier	cend		4966452	1					
ANR	4966487	Identifier	cdata		4966452	1					
ANR	4966488	ExpressionStatement	"alloc_unlink_clump ( cp , mem )"	2593:4:83014:83041	4966452	3	True				
ANR	4966489	CallExpression	"alloc_unlink_clump ( cp , mem )"		4966452	0					
ANR	4966490	Callee	alloc_unlink_clump		4966452	0					
ANR	4966491	Identifier	alloc_unlink_clump		4966452	0					
ANR	4966492	ArgumentList	cp		4966452	1					
ANR	4966493	Argument	cp		4966452	0					
ANR	4966494	Identifier	cp		4966452	0					
ANR	4966495	Argument	mem		4966452	1					
ANR	4966496	Identifier	mem		4966452	0					
ANR	4966497	ExpressionStatement	mem -> allocated -= st_clump . ssize	2594:4:83047:83079	4966452	4	True				
ANR	4966498	AssignmentExpression	mem -> allocated -= st_clump . ssize		4966452	0		-=			
ANR	4966499	PtrMemberAccess	mem -> allocated		4966452	0					
ANR	4966500	Identifier	mem		4966452	0					
ANR	4966501	Identifier	allocated		4966452	1					
ANR	4966502	MemberAccess	st_clump . ssize		4966452	1					
ANR	4966503	Identifier	st_clump		4966452	0					
ANR	4966504	Identifier	ssize		4966452	1					
ANR	4966505	IfStatement	if ( mem -> cfreed . cp == cp )		4966452	5					
ANR	4966506	Condition	mem -> cfreed . cp == cp	2595:8:83089:83108	4966452	0	True				
ANR	4966507	EqualityExpression	mem -> cfreed . cp == cp		4966452	0		==			
ANR	4966508	MemberAccess	mem -> cfreed . cp		4966452	0					
ANR	4966509	PtrMemberAccess	mem -> cfreed		4966452	0					
ANR	4966510	Identifier	mem		4966452	0					
ANR	4966511	Identifier	cfreed		4966452	1					
ANR	4966512	Identifier	cp		4966452	1					
ANR	4966513	Identifier	cp		4966452	1					
ANR	4966514	ExpressionStatement	mem -> cfreed . cp = 0	2596:8:83119:83137	4966452	1	True				
ANR	4966515	AssignmentExpression	mem -> cfreed . cp = 0		4966452	0		=			
ANR	4966516	MemberAccess	mem -> cfreed . cp		4966452	0					
ANR	4966517	PtrMemberAccess	mem -> cfreed		4966452	0					
ANR	4966518	Identifier	mem		4966452	0					
ANR	4966519	Identifier	cfreed		4966452	1					
ANR	4966520	Identifier	cp		4966452	1					
ANR	4966521	PrimaryExpression	0		4966452	1					
ANR	4966522	IfStatement	if ( cp -> outer == 0 )		4966452	6					
ANR	4966523	Condition	cp -> outer == 0	2597:8:83147:83160	4966452	0	True				
ANR	4966524	EqualityExpression	cp -> outer == 0		4966452	0		==			
ANR	4966525	PtrMemberAccess	cp -> outer		4966452	0					
ANR	4966526	Identifier	cp		4966452	0					
ANR	4966527	Identifier	outer		4966452	1					
ANR	4966528	PrimaryExpression	0		4966452	1					
ANR	4966529	CompoundStatement		10:24:282:282	4966452	1					
ANR	4966530	ExpressionStatement	mem -> allocated -= csize	2598:8:83173:83196	4966452	0	True				
ANR	4966531	AssignmentExpression	mem -> allocated -= csize		4966452	0		-=			
ANR	4966532	PtrMemberAccess	mem -> allocated		4966452	0					
ANR	4966533	Identifier	mem		4966452	0					
ANR	4966534	Identifier	allocated		4966452	1					
ANR	4966535	Identifier	csize		4966452	1					
ANR	4966536	ExpressionStatement	"gs_free_object ( parent , cdata , ""alloc_free_clump(data)"" )"	2599:8:83206:83261	4966452	1	True				
ANR	4966537	CallExpression	"gs_free_object ( parent , cdata , ""alloc_free_clump(data)"" )"		4966452	0					
ANR	4966538	Callee	gs_free_object		4966452	0					
ANR	4966539	Identifier	gs_free_object		4966452	0					
ANR	4966540	ArgumentList	parent		4966452	1					
ANR	4966541	Argument	parent		4966452	0					
ANR	4966542	Identifier	parent		4966452	0					
ANR	4966543	Argument	cdata		4966452	1					
ANR	4966544	Identifier	cdata		4966452	0					
ANR	4966545	Argument	"""alloc_free_clump(data)"""		4966452	2					
ANR	4966546	PrimaryExpression	"""alloc_free_clump(data)"""		4966452	0					
ANR	4966547	ElseStatement	else		4966452	0					
ANR	4966548	CompoundStatement		13:11:393:393	4966452	0					
ANR	4966549	ExpressionStatement	cp -> outer -> inner_count --	2601:8:83284:83308	4966452	0	True				
ANR	4966550	PostIncDecOperationExpression	cp -> outer -> inner_count --		4966452	0					
ANR	4966551	PtrMemberAccess	cp -> outer -> inner_count		4966452	0					
ANR	4966552	PtrMemberAccess	cp -> outer		4966452	0					
ANR	4966553	Identifier	cp		4966452	0					
ANR	4966554	Identifier	outer		4966452	1					
ANR	4966555	Identifier	inner_count		4966452	1					
ANR	4966556	IncDec	--		4966452	1					
ANR	4966557	ExpressionStatement	"gs_alloc_fill ( cdata , gs_alloc_fill_free , csize )"	2602:8:83318:83365	4966452	1	True				
ANR	4966558	CallExpression	"gs_alloc_fill ( cdata , gs_alloc_fill_free , csize )"		4966452	0					
ANR	4966559	Callee	gs_alloc_fill		4966452	0					
ANR	4966560	Identifier	gs_alloc_fill		4966452	0					
ANR	4966561	ArgumentList	cdata		4966452	1					
ANR	4966562	Argument	cdata		4966452	0					
ANR	4966563	Identifier	cdata		4966452	0					
ANR	4966564	Argument	gs_alloc_fill_free		4966452	1					
ANR	4966565	Identifier	gs_alloc_fill_free		4966452	0					
ANR	4966566	Argument	csize		4966452	2					
ANR	4966567	Identifier	csize		4966452	0					
ANR	4966568	ExpressionStatement	"gs_free_object ( parent , cp , ""alloc_free_clump(clump struct)"" )"	2604:4:83377:83437	4966452	7	True				
ANR	4966569	CallExpression	"gs_free_object ( parent , cp , ""alloc_free_clump(clump struct)"" )"		4966452	0					
ANR	4966570	Callee	gs_free_object		4966452	0					
ANR	4966571	Identifier	gs_free_object		4966452	0					
ANR	4966572	ArgumentList	parent		4966452	1					
ANR	4966573	Argument	parent		4966452	0					
ANR	4966574	Identifier	parent		4966452	0					
ANR	4966575	Argument	cp		4966452	1					
ANR	4966576	Identifier	cp		4966452	0					
ANR	4966577	Argument	"""alloc_free_clump(clump struct)"""		4966452	2					
ANR	4966578	PrimaryExpression	"""alloc_free_clump(clump struct)"""		4966452	0					
ANR	4966579	ReturnType	void		4966452	1					
ANR	4966580	Identifier	alloc_free_clump		4966452	2					
ANR	4966581	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		4966452	3					
ANR	4966582	Parameter	clump_t * cp	2587:17:82843:82854	4966452	0	True				
ANR	4966583	ParameterType	clump_t *		4966452	0					
ANR	4966584	Identifier	cp		4966452	1					
ANR	4966585	Parameter	gs_ref_memory_t * mem	2587:31:82857:82877	4966452	1	True				
ANR	4966586	ParameterType	gs_ref_memory_t *		4966452	0					
ANR	4966587	Identifier	mem		4966452	1					
ANR	4966588	CFGEntryNode	ENTRY		4966452		True				
ANR	4966589	CFGExitNode	EXIT		4966452		True				
ANR	4966590	Symbol	parent		4966452						
ANR	4966591	Symbol	mem -> allocated		4966452						
ANR	4966592	Symbol	cp -> cend		4966452						
ANR	4966593	Symbol	gs_alloc_fill_free		4966452						
ANR	4966594	Symbol	mem -> cfreed . cp		4966452						
ANR	4966595	Symbol	csize		4966452						
ANR	4966596	Symbol	cp		4966452						
ANR	4966597	Symbol	mem -> non_gc_memory		4966452						
ANR	4966598	Symbol	st_clump		4966452						
ANR	4966599	Symbol	cp -> outer -> inner_count		4966452						
ANR	4966600	Symbol	cdata		4966452						
ANR	4966601	Symbol	* cp		4966452						
ANR	4966602	Symbol	st_clump . ssize		4966452						
ANR	4966603	Symbol	* cp -> outer		4966452						
ANR	4966604	Symbol	cp -> chead		4966452						
ANR	4966605	Symbol	mem -> cfreed		4966452						
ANR	4966606	Symbol	mem		4966452						
ANR	4966607	Symbol	cp -> outer		4966452						
ANR	4966608	Symbol	* * cp		4966452						
ANR	4966609	Symbol	* mem		4966452						
ANR	4966610	Function	clump_locate_ptr	2612:0:83722:84218							
ANR	4966611	FunctionDef	"clump_locate_ptr (const void * ptr , clump_locator_t * clp)"		4966610	0					
ANR	4966612	CompoundStatement		2614:0:83784:84218	4966610	0					
ANR	4966613	IdentifierDeclStatement	clump_t * cp = clp -> memory -> root ;	2615:4:83790:83821	4966610	0	True				
ANR	4966614	IdentifierDecl	* cp = clp -> memory -> root		4966610	0					
ANR	4966615	IdentifierDeclType	clump_t *		4966610	0					
ANR	4966616	Identifier	cp		4966610	1					
ANR	4966617	AssignmentExpression	* cp = clp -> memory -> root		4966610	2		=			
ANR	4966618	Identifier	cp		4966610	0					
ANR	4966619	PtrMemberAccess	clp -> memory -> root		4966610	1					
ANR	4966620	PtrMemberAccess	clp -> memory		4966610	0					
ANR	4966621	Identifier	clp		4966610	0					
ANR	4966622	Identifier	memory		4966610	1					
ANR	4966623	Identifier	root		4966610	1					
ANR	4966624	WhileStatement	while ( cp )		4966610	1					
ANR	4966625	Condition	cp	2617:11:83835:83836	4966610	0	True				
ANR	4966626	Identifier	cp		4966610	0					
ANR	4966627	CompoundStatement		5:4:58:58	4966610	1					
ANR	4966628	IfStatement	"if ( PTR_LT ( ptr , cp -> cbase ) )"		4966610	0					
ANR	4966629	Condition	"PTR_LT ( ptr , cp -> cbase )"	2619:12:83857:83878	4966610	0	True				
ANR	4966630	CallExpression	"PTR_LT ( ptr , cp -> cbase )"		4966610	0					
ANR	4966631	Callee	PTR_LT		4966610	0					
ANR	4966632	Identifier	PTR_LT		4966610	0					
ANR	4966633	ArgumentList	ptr		4966610	1					
ANR	4966634	Argument	ptr		4966610	0					
ANR	4966635	Identifier	ptr		4966610	0					
ANR	4966636	Argument	cp -> cbase		4966610	1					
ANR	4966637	PtrMemberAccess	cp -> cbase		4966610	0					
ANR	4966638	Identifier	cp		4966610	0					
ANR	4966639	Identifier	cbase		4966610	1					
ANR	4966640	CompoundStatement		7:8:104:104	4966610	1					
ANR	4966641	ExpressionStatement	cp = cp -> left	2621:12:83903:83916	4966610	0	True				
ANR	4966642	AssignmentExpression	cp = cp -> left		4966610	0		=			
ANR	4966643	Identifier	cp		4966610	0					
ANR	4966644	PtrMemberAccess	cp -> left		4966610	1					
ANR	4966645	Identifier	cp		4966610	0					
ANR	4966646	Identifier	left		4966610	1					
ANR	4966647	ContinueStatement	continue ;	2622:12:83930:83938	4966610	1	True				
ANR	4966648	IfStatement	"if ( PTR_GE ( ptr , cp -> cend ) )"		4966610	1					
ANR	4966649	Condition	"PTR_GE ( ptr , cp -> cend )"	2624:12:83962:83982	4966610	0	True				
ANR	4966650	CallExpression	"PTR_GE ( ptr , cp -> cend )"		4966610	0					
ANR	4966651	Callee	PTR_GE		4966610	0					
ANR	4966652	Identifier	PTR_GE		4966610	0					
ANR	4966653	ArgumentList	ptr		4966610	1					
ANR	4966654	Argument	ptr		4966610	0					
ANR	4966655	Identifier	ptr		4966610	0					
ANR	4966656	Argument	cp -> cend		4966610	1					
ANR	4966657	PtrMemberAccess	cp -> cend		4966610	0					
ANR	4966658	Identifier	cp		4966610	0					
ANR	4966659	Identifier	cend		4966610	1					
ANR	4966660	CompoundStatement		12:8:208:208	4966610	1					
ANR	4966661	ExpressionStatement	cp = cp -> right	2626:12:84007:84021	4966610	0	True				
ANR	4966662	AssignmentExpression	cp = cp -> right		4966610	0		=			
ANR	4966663	Identifier	cp		4966610	0					
ANR	4966664	PtrMemberAccess	cp -> right		4966610	1					
ANR	4966665	Identifier	cp		4966610	0					
ANR	4966666	Identifier	right		4966610	1					
ANR	4966667	ContinueStatement	continue ;	2627:12:84035:84043	4966610	1	True				
ANR	4966668	ExpressionStatement	"splay_move_to_root ( cp , clp -> memory )"	2630:8:84087:84122	4966610	2	True				
ANR	4966669	CallExpression	"splay_move_to_root ( cp , clp -> memory )"		4966610	0					
ANR	4966670	Callee	splay_move_to_root		4966610	0					
ANR	4966671	Identifier	splay_move_to_root		4966610	0					
ANR	4966672	ArgumentList	cp		4966610	1					
ANR	4966673	Argument	cp		4966610	0					
ANR	4966674	Identifier	cp		4966610	0					
ANR	4966675	Argument	clp -> memory		4966610	1					
ANR	4966676	PtrMemberAccess	clp -> memory		4966610	0					
ANR	4966677	Identifier	clp		4966610	0					
ANR	4966678	Identifier	memory		4966610	1					
ANR	4966679	ExpressionStatement	clp -> cp = cp	2631:8:84132:84144	4966610	3	True				
ANR	4966680	AssignmentExpression	clp -> cp = cp		4966610	0		=			
ANR	4966681	PtrMemberAccess	clp -> cp		4966610	0					
ANR	4966682	Identifier	clp		4966610	0					
ANR	4966683	Identifier	cp		4966610	1					
ANR	4966684	Identifier	cp		4966610	1					
ANR	4966685	ReturnStatement	"return ! ptr_is_in_inner_clump ( ptr , cp ) ;"	2632:8:84154:84192	4966610	4	True				
ANR	4966686	UnaryOperationExpression	"! ptr_is_in_inner_clump ( ptr , cp )"		4966610	0					
ANR	4966687	UnaryOperator	!		4966610	0					
ANR	4966688	CallExpression	"ptr_is_in_inner_clump ( ptr , cp )"		4966610	1					
ANR	4966689	Callee	ptr_is_in_inner_clump		4966610	0					
ANR	4966690	Identifier	ptr_is_in_inner_clump		4966610	0					
ANR	4966691	ArgumentList	ptr		4966610	1					
ANR	4966692	Argument	ptr		4966610	0					
ANR	4966693	Identifier	ptr		4966610	0					
ANR	4966694	Argument	cp		4966610	1					
ANR	4966695	Identifier	cp		4966610	0					
ANR	4966696	ReturnStatement	return false ;	2634:4:84204:84216	4966610	2	True				
ANR	4966697	Identifier	false		4966610	0					
ANR	4966698	ReturnType	bool		4966610	1					
ANR	4966699	Identifier	clump_locate_ptr		4966610	2					
ANR	4966700	ParameterList	"const void * ptr , clump_locator_t * clp"		4966610	3					
ANR	4966701	Parameter	const void * ptr	2613:17:83744:83758	4966610	0	True				
ANR	4966702	ParameterType	const void *		4966610	0					
ANR	4966703	Identifier	ptr		4966610	1					
ANR	4966704	Parameter	clump_locator_t * clp	2613:34:83761:83781	4966610	1	True				
ANR	4966705	ParameterType	clump_locator_t *		4966610	0					
ANR	4966706	Identifier	clp		4966610	1					
ANR	4966707	CFGEntryNode	ENTRY		4966610		True				
ANR	4966708	CFGExitNode	EXIT		4966610		True				
ANR	4966709	Symbol	clp -> cp		4966610						
ANR	4966710	Symbol	clp -> memory		4966610						
ANR	4966711	Symbol	PTR_GE		4966610						
ANR	4966712	Symbol	clp		4966610						
ANR	4966713	Symbol	clp -> memory -> root		4966610						
ANR	4966714	Symbol	ptr_is_in_inner_clump		4966610						
ANR	4966715	Symbol	cp -> cend		4966610						
ANR	4966716	Symbol	false		4966610						
ANR	4966717	Symbol	cp -> right		4966610						
ANR	4966718	Symbol	cp -> cbase		4966610						
ANR	4966719	Symbol	cp		4966610						
ANR	4966720	Symbol	* clp -> memory		4966610						
ANR	4966721	Symbol	* clp		4966610						
ANR	4966722	Symbol	ptr		4966610						
ANR	4966723	Symbol	* cp		4966610						
ANR	4966724	Symbol	PTR_LT		4966610						
ANR	4966725	Symbol	cp -> left		4966610						
ANR	4966726	Symbol	* * clp		4966610						
ANR	4966727	Function	ptr_is_within_mem_clumps	2637:0:84221:84659							
ANR	4966728	FunctionDef	"ptr_is_within_mem_clumps (const void * ptr , gs_ref_memory_t * mem)"		4966727	0					
ANR	4966729	CompoundStatement		2638:0:84290:84659	4966727	0					
ANR	4966730	IdentifierDeclStatement	clump_t * cp = mem -> root ;	2639:4:84296:84319	4966727	0	True				
ANR	4966731	IdentifierDecl	* cp = mem -> root		4966727	0					
ANR	4966732	IdentifierDeclType	clump_t *		4966727	0					
ANR	4966733	Identifier	cp		4966727	1					
ANR	4966734	AssignmentExpression	* cp = mem -> root		4966727	2		=			
ANR	4966735	Identifier	cp		4966727	0					
ANR	4966736	PtrMemberAccess	mem -> root		4966727	1					
ANR	4966737	Identifier	mem		4966727	0					
ANR	4966738	Identifier	root		4966727	1					
ANR	4966739	WhileStatement	while ( cp )		4966727	1					
ANR	4966740	Condition	cp	2641:11:84333:84334	4966727	0	True				
ANR	4966741	Identifier	cp		4966727	0					
ANR	4966742	CompoundStatement		5:4:50:50	4966727	1					
ANR	4966743	IfStatement	"if ( PTR_LT ( ptr , cp -> cbase ) )"		4966727	0					
ANR	4966744	Condition	"PTR_LT ( ptr , cp -> cbase )"	2643:12:84355:84376	4966727	0	True				
ANR	4966745	CallExpression	"PTR_LT ( ptr , cp -> cbase )"		4966727	0					
ANR	4966746	Callee	PTR_LT		4966727	0					
ANR	4966747	Identifier	PTR_LT		4966727	0					
ANR	4966748	ArgumentList	ptr		4966727	1					
ANR	4966749	Argument	ptr		4966727	0					
ANR	4966750	Identifier	ptr		4966727	0					
ANR	4966751	Argument	cp -> cbase		4966727	1					
ANR	4966752	PtrMemberAccess	cp -> cbase		4966727	0					
ANR	4966753	Identifier	cp		4966727	0					
ANR	4966754	Identifier	cbase		4966727	1					
ANR	4966755	CompoundStatement		7:8:96:96	4966727	1					
ANR	4966756	ExpressionStatement	cp = cp -> left	2645:12:84401:84414	4966727	0	True				
ANR	4966757	AssignmentExpression	cp = cp -> left		4966727	0		=			
ANR	4966758	Identifier	cp		4966727	0					
ANR	4966759	PtrMemberAccess	cp -> left		4966727	1					
ANR	4966760	Identifier	cp		4966727	0					
ANR	4966761	Identifier	left		4966727	1					
ANR	4966762	ContinueStatement	continue ;	2646:12:84428:84436	4966727	1	True				
ANR	4966763	IfStatement	"if ( PTR_GE ( ptr , cp -> cend ) )"		4966727	1					
ANR	4966764	Condition	"PTR_GE ( ptr , cp -> cend )"	2648:12:84460:84480	4966727	0	True				
ANR	4966765	CallExpression	"PTR_GE ( ptr , cp -> cend )"		4966727	0					
ANR	4966766	Callee	PTR_GE		4966727	0					
ANR	4966767	Identifier	PTR_GE		4966727	0					
ANR	4966768	ArgumentList	ptr		4966727	1					
ANR	4966769	Argument	ptr		4966727	0					
ANR	4966770	Identifier	ptr		4966727	0					
ANR	4966771	Argument	cp -> cend		4966727	1					
ANR	4966772	PtrMemberAccess	cp -> cend		4966727	0					
ANR	4966773	Identifier	cp		4966727	0					
ANR	4966774	Identifier	cend		4966727	1					
ANR	4966775	CompoundStatement		12:8:200:200	4966727	1					
ANR	4966776	ExpressionStatement	cp = cp -> right	2650:12:84505:84519	4966727	0	True				
ANR	4966777	AssignmentExpression	cp = cp -> right		4966727	0		=			
ANR	4966778	Identifier	cp		4966727	0					
ANR	4966779	PtrMemberAccess	cp -> right		4966727	1					
ANR	4966780	Identifier	cp		4966727	0					
ANR	4966781	Identifier	right		4966727	1					
ANR	4966782	ContinueStatement	continue ;	2651:12:84533:84541	4966727	1	True				
ANR	4966783	ExpressionStatement	"splay_move_to_root ( cp , mem )"	2654:8:84585:84612	4966727	2	True				
ANR	4966784	CallExpression	"splay_move_to_root ( cp , mem )"		4966727	0					
ANR	4966785	Callee	splay_move_to_root		4966727	0					
ANR	4966786	Identifier	splay_move_to_root		4966727	0					
ANR	4966787	ArgumentList	cp		4966727	1					
ANR	4966788	Argument	cp		4966727	0					
ANR	4966789	Identifier	cp		4966727	0					
ANR	4966790	Argument	mem		4966727	1					
ANR	4966791	Identifier	mem		4966727	0					
ANR	4966792	ReturnStatement	return true ;	2655:8:84622:84633	4966727	3	True				
ANR	4966793	Identifier	true		4966727	0					
ANR	4966794	ReturnStatement	return false ;	2657:4:84645:84657	4966727	2	True				
ANR	4966795	Identifier	false		4966727	0					
ANR	4966796	ReturnType	bool		4966727	1					
ANR	4966797	Identifier	ptr_is_within_mem_clumps		4966727	2					
ANR	4966798	ParameterList	"const void * ptr , gs_ref_memory_t * mem"		4966727	3					
ANR	4966799	Parameter	const void * ptr	2637:30:84251:84265	4966727	0	True				
ANR	4966800	ParameterType	const void *		4966727	0					
ANR	4966801	Identifier	ptr		4966727	1					
ANR	4966802	Parameter	gs_ref_memory_t * mem	2637:47:84268:84287	4966727	1	True				
ANR	4966803	ParameterType	gs_ref_memory_t *		4966727	0					
ANR	4966804	Identifier	mem		4966727	1					
ANR	4966805	CFGEntryNode	ENTRY		4966727		True				
ANR	4966806	CFGExitNode	EXIT		4966727		True				
ANR	4966807	Symbol	PTR_GE		4966727						
ANR	4966808	Symbol	cp -> cend		4966727						
ANR	4966809	Symbol	false		4966727						
ANR	4966810	Symbol	cp -> right		4966727						
ANR	4966811	Symbol	cp -> cbase		4966727						
ANR	4966812	Symbol	cp		4966727						
ANR	4966813	Symbol	ptr		4966727						
ANR	4966814	Symbol	* cp		4966727						
ANR	4966815	Symbol	PTR_LT		4966727						
ANR	4966816	Symbol	mem		4966727						
ANR	4966817	Symbol	cp -> left		4966727						
ANR	4966818	Symbol	true		4966727						
ANR	4966819	Symbol	mem -> root		4966727						
ANR	4966820	Symbol	* mem		4966727						
ANR	4966821	Function	obj_in_control_region	2666:0:84729:84987							
ANR	4966822	FunctionDef	"obj_in_control_region (const void * obot , const void * otop , const dump_control_t * pdc)"		4966821	0					
ANR	4966823	CompoundStatement		2669:0:84855:84987	4966821	0					
ANR	4966824	ReturnStatement	"return ( ( pdc -> bottom == NULL || PTR_GT ( otop , pdc -> bottom ) ) && ( pdc -> top == NULL || PTR_LT ( obot , pdc -> top ) ) ) ;"	2670:4:84861:84985	4966821	0	True				
ANR	4966825	AndExpression	"( pdc -> bottom == NULL || PTR_GT ( otop , pdc -> bottom ) ) && ( pdc -> top == NULL || PTR_LT ( obot , pdc -> top ) )"		4966821	0		&&			
ANR	4966826	OrExpression	"pdc -> bottom == NULL || PTR_GT ( otop , pdc -> bottom )"		4966821	0		||			
ANR	4966827	EqualityExpression	pdc -> bottom == NULL		4966821	0		==			
ANR	4966828	PtrMemberAccess	pdc -> bottom		4966821	0					
ANR	4966829	Identifier	pdc		4966821	0					
ANR	4966830	Identifier	bottom		4966821	1					
ANR	4966831	Identifier	NULL		4966821	1					
ANR	4966832	CallExpression	"PTR_GT ( otop , pdc -> bottom )"		4966821	1					
ANR	4966833	Callee	PTR_GT		4966821	0					
ANR	4966834	Identifier	PTR_GT		4966821	0					
ANR	4966835	ArgumentList	otop		4966821	1					
ANR	4966836	Argument	otop		4966821	0					
ANR	4966837	Identifier	otop		4966821	0					
ANR	4966838	Argument	pdc -> bottom		4966821	1					
ANR	4966839	PtrMemberAccess	pdc -> bottom		4966821	0					
ANR	4966840	Identifier	pdc		4966821	0					
ANR	4966841	Identifier	bottom		4966821	1					
ANR	4966842	OrExpression	"pdc -> top == NULL || PTR_LT ( obot , pdc -> top )"		4966821	1		||			
ANR	4966843	EqualityExpression	pdc -> top == NULL		4966821	0		==			
ANR	4966844	PtrMemberAccess	pdc -> top		4966821	0					
ANR	4966845	Identifier	pdc		4966821	0					
ANR	4966846	Identifier	top		4966821	1					
ANR	4966847	Identifier	NULL		4966821	1					
ANR	4966848	CallExpression	"PTR_LT ( obot , pdc -> top )"		4966821	1					
ANR	4966849	Callee	PTR_LT		4966821	0					
ANR	4966850	Identifier	PTR_LT		4966821	0					
ANR	4966851	ArgumentList	obot		4966821	1					
ANR	4966852	Argument	obot		4966821	0					
ANR	4966853	Identifier	obot		4966821	0					
ANR	4966854	Argument	pdc -> top		4966821	1					
ANR	4966855	PtrMemberAccess	pdc -> top		4966821	0					
ANR	4966856	Identifier	pdc		4966821	0					
ANR	4966857	Identifier	top		4966821	1					
ANR	4966858	ReturnType	static inline bool		4966821	1					
ANR	4966859	Identifier	obj_in_control_region		4966821	2					
ANR	4966860	ParameterList	"const void * obot , const void * otop , const dump_control_t * pdc"		4966821	3					
ANR	4966861	Parameter	const void * obot	2667:22:84770:84785	4966821	0	True				
ANR	4966862	ParameterType	const void *		4966821	0					
ANR	4966863	Identifier	obot		4966821	1					
ANR	4966864	Parameter	const void * otop	2667:40:84788:84803	4966821	1	True				
ANR	4966865	ParameterType	const void *		4966821	0					
ANR	4966866	Identifier	otop		4966821	1					
ANR	4966867	Parameter	const dump_control_t * pdc	2668:22:84828:84852	4966821	2	True				
ANR	4966868	ParameterType	const dump_control_t *		4966821	0					
ANR	4966869	Identifier	pdc		4966821	1					
ANR	4966870	CFGEntryNode	ENTRY		4966821		True				
ANR	4966871	CFGExitNode	EXIT		4966821		True				
ANR	4966872	Symbol	otop		4966821						
ANR	4966873	Symbol	NULL		4966821						
ANR	4966874	Symbol	PTR_LT		4966821						
ANR	4966875	Symbol	PTR_GT		4966821						
ANR	4966876	Symbol	pdc -> bottom		4966821						
ANR	4966877	Symbol	* pdc		4966821						
ANR	4966878	Symbol	obot		4966821						
ANR	4966879	Symbol	pdc -> top		4966821						
ANR	4966880	Symbol	pdc		4966821						
ANR	4966881	DeclStmt									
ANR	4966882	Decl							const dump_control_t	const dump_control_t	dump_control_default
ANR	4966883	DeclStmt									
ANR	4966884	Decl							const dump_control_t	const dump_control_t	dump_control_all
ANR	4966885	DeclStmt									
ANR	4966886	Decl							const dump_control_t	const dump_control_t	dump_control_no_contents
ANR	4966887	Function	debug_indent	2695:0:85503:85637							
ANR	4966888	FunctionDef	"debug_indent (const gs_memory_t * mem , int indent)"		4966887	0					
ANR	4966889	CompoundStatement		2697:0:85564:85637	4966887	0					
ANR	4966890	IdentifierDeclStatement	int i ;	2698:4:85570:85575	4966887	0	True				
ANR	4966891	IdentifierDecl	i		4966887	0					
ANR	4966892	IdentifierDeclType	int		4966887	0					
ANR	4966893	Identifier	i		4966887	1					
ANR	4966894	ForStatement	for ( i = indent ; i > 0 ; -- i )		4966887	1					
ANR	4966895	ForInit	i = indent ;	2700:9:85587:85597	4966887	0	True				
ANR	4966896	AssignmentExpression	i = indent		4966887	0		=			
ANR	4966897	Identifier	i		4966887	0					
ANR	4966898	Identifier	indent		4966887	1					
ANR	4966899	Condition	i > 0	2700:21:85599:85603	4966887	1	True				
ANR	4966900	RelationalExpression	i > 0		4966887	0		>			
ANR	4966901	Identifier	i		4966887	0					
ANR	4966902	PrimaryExpression	0		4966887	1					
ANR	4966903	UnaryExpression	-- i	2700:28:85606:85608	4966887	2	True				
ANR	4966904	IncDec	--		4966887	0					
ANR	4966905	Identifier	i		4966887	1					
ANR	4966906	ExpressionStatement	"dmputc ( mem , ' ' )"	2701:8:85619:85635	4966887	3	True				
ANR	4966907	CallExpression	"dmputc ( mem , ' ' )"		4966887	0					
ANR	4966908	Callee	dmputc		4966887	0					
ANR	4966909	Identifier	dmputc		4966887	0					
ANR	4966910	ArgumentList	mem		4966887	1					
ANR	4966911	Argument	mem		4966887	0					
ANR	4966912	Identifier	mem		4966887	0					
ANR	4966913	Argument	' '		4966887	1					
ANR	4966914	PrimaryExpression	' '		4966887	0					
ANR	4966915	ReturnType	static void		4966887	1					
ANR	4966916	Identifier	debug_indent		4966887	2					
ANR	4966917	ParameterList	"const gs_memory_t * mem , int indent"		4966887	3					
ANR	4966918	Parameter	const gs_memory_t * mem	2696:13:85528:85549	4966887	0	True				
ANR	4966919	ParameterType	const gs_memory_t *		4966887	0					
ANR	4966920	Identifier	mem		4966887	1					
ANR	4966921	Parameter	int indent	2696:37:85552:85561	4966887	1	True				
ANR	4966922	ParameterType	int		4966887	0					
ANR	4966923	Identifier	indent		4966887	1					
ANR	4966924	CFGEntryNode	ENTRY		4966887		True				
ANR	4966925	CFGExitNode	EXIT		4966887		True				
ANR	4966926	Symbol	mem		4966887						
ANR	4966927	Symbol	indent		4966887						
ANR	4966928	Symbol	i		4966887						
ANR	4966929	Function	debug_dump_contents	2703:0:85639:87560							
ANR	4966930	FunctionDef	"debug_dump_contents (const gs_memory_t * mem , const byte * bot , const byte * top , int indent , bool as_chars)"		4966929	0					
ANR	4966931	CompoundStatement		2706:0:85778:87560	4966929	0					
ANR	4966932	IdentifierDeclStatement	const byte * block ;	2707:4:85784:85801	4966929	0	True				
ANR	4966933	IdentifierDecl	* block		4966929	0					
ANR	4966934	IdentifierDeclType	const byte *		4966929	0					
ANR	4966935	Identifier	block		4966929	1					
ANR	4966936	Statement	define	2709:1:85805:85810	4966929	1	True				
ANR	4966937	Statement	block_size	2709:8:85812:85821	4966929	2	True				
ANR	4966938	Statement	16	2709:19:85823:85824	4966929	3	True				
ANR	4966939	IfStatement	if ( bot >= top )		4966929	4					
ANR	4966940	Condition	bot >= top	2711:8:85835:85844	4966929	0	True				
ANR	4966941	RelationalExpression	bot >= top		4966929	0		>=			
ANR	4966942	Identifier	bot		4966929	0					
ANR	4966943	Identifier	top		4966929	1					
ANR	4966944	ReturnStatement	return ;	2712:8:85855:85861	4966929	1	True				
ANR	4966945	ForStatement	for ( block = bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) ) ; block < top ; block += block_size )		4966929	5					
ANR	4966946	ForInit	block = bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) ) ;	2713:9:85872:85925	4966929	0	True				
ANR	4966947	AssignmentExpression	block = bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) )		4966929	0		=			
ANR	4966948	Identifier	block		4966929	0					
ANR	4966949	AdditiveExpression	bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) )		4966929	1		-			
ANR	4966950	Identifier	bot		4966929	0					
ANR	4966951	BitAndExpression	( bot - ( byte * ) 0 ) & ( block_size - 1 )		4966929	1		&			
ANR	4966952	AdditiveExpression	bot - ( byte * ) 0		4966929	0		-			
ANR	4966953	Identifier	bot		4966929	0					
ANR	4966954	CastExpression	( byte * ) 0		4966929	1					
ANR	4966955	CastTarget	byte *		4966929	0					
ANR	4966956	PrimaryExpression	0		4966929	1					
ANR	4966957	AdditiveExpression	block_size - 1		4966929	1		-			
ANR	4966958	Identifier	block_size		4966929	0					
ANR	4966959	PrimaryExpression	1		4966929	1					
ANR	4966960	Condition	block < top	2714:9:85936:85946	4966929	1	True				
ANR	4966961	RelationalExpression	block < top		4966929	0		<			
ANR	4966962	Identifier	block		4966929	0					
ANR	4966963	Identifier	top		4966929	1					
ANR	4966964	AssignmentExpression	block += block_size	2714:22:85949:85967	4966929	2	True	+=			
ANR	4966965	Identifier	block		4966929	0					
ANR	4966966	Identifier	block_size		4966929	1					
ANR	4966967	CompoundStatement		12:8:225:239	4966929	3					
ANR	4966968	IdentifierDeclStatement	int i ;	2716:8:85989:85994	4966929	0	True				
ANR	4966969	IdentifierDecl	i		4966929	0					
ANR	4966970	IdentifierDeclType	int		4966929	0					
ANR	4966971	Identifier	i		4966929	1					
ANR	4966972	IdentifierDeclStatement	char label [ 12 ] ;	2717:8:86004:86018	4966929	1	True				
ANR	4966973	IdentifierDecl	label [ 12 ]		4966929	0					
ANR	4966974	IdentifierDeclType	char [ 12 ]		4966929	0					
ANR	4966975	Identifier	label		4966929	1					
ANR	4966976	PrimaryExpression	12		4966929	2					
ANR	4966977	IfStatement	"if ( block >= bot + block_size && block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size ) )"		4966929	2					
ANR	4966978	Condition	"block >= bot + block_size && block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"	2720:12:86074:86269	4966929	0	True				
ANR	4966979	AndExpression	"block >= bot + block_size && block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"		4966929	0		&&			
ANR	4966980	RelationalExpression	block >= bot + block_size		4966929	0		>=			
ANR	4966981	Identifier	block		4966929	0					
ANR	4966982	AdditiveExpression	bot + block_size		4966929	1		+			
ANR	4966983	Identifier	bot		4966929	0					
ANR	4966984	Identifier	block_size		4966929	1					
ANR	4966985	AndExpression	"block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"		4966929	1		&&			
ANR	4966986	RelationalExpression	block <= top - ( block_size * 2 )		4966929	0		<=			
ANR	4966987	Identifier	block		4966929	0					
ANR	4966988	AdditiveExpression	top - ( block_size * 2 )		4966929	1		-			
ANR	4966989	Identifier	top		4966929	0					
ANR	4966990	MultiplicativeExpression	block_size * 2		4966929	1		*			
ANR	4966991	Identifier	block_size		4966929	0					
ANR	4966992	PrimaryExpression	2		4966929	1					
ANR	4966993	AndExpression	"! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"		4966929	1		&&			
ANR	4966994	UnaryOperationExpression	"! memcmp ( block , block - block_size , block_size )"		4966929	0					
ANR	4966995	UnaryOperator	!		4966929	0					
ANR	4966996	CallExpression	"memcmp ( block , block - block_size , block_size )"		4966929	1					
ANR	4966997	Callee	memcmp		4966929	0					
ANR	4966998	Identifier	memcmp		4966929	0					
ANR	4966999	ArgumentList	block		4966929	1					
ANR	4967000	Argument	block		4966929	0					
ANR	4967001	Identifier	block		4966929	0					
ANR	4967002	Argument	block - block_size		4966929	1					
ANR	4967003	AdditiveExpression	block - block_size		4966929	0		-			
ANR	4967004	Identifier	block		4966929	0					
ANR	4967005	Identifier	block_size		4966929	1					
ANR	4967006	Argument	block_size		4966929	2					
ANR	4967007	Identifier	block_size		4966929	0					
ANR	4967008	UnaryOperationExpression	"! memcmp ( block , block + block_size , block_size )"		4966929	1					
ANR	4967009	UnaryOperator	!		4966929	0					
ANR	4967010	CallExpression	"memcmp ( block , block + block_size , block_size )"		4966929	1					
ANR	4967011	Callee	memcmp		4966929	0					
ANR	4967012	Identifier	memcmp		4966929	0					
ANR	4967013	ArgumentList	block		4966929	1					
ANR	4967014	Argument	block		4966929	0					
ANR	4967015	Identifier	block		4966929	0					
ANR	4967016	Argument	block + block_size		4966929	1					
ANR	4967017	AdditiveExpression	block + block_size		4966929	0		+			
ANR	4967018	Identifier	block		4966929	0					
ANR	4967019	Identifier	block_size		4966929	1					
ANR	4967020	Argument	block_size		4966929	2					
ANR	4967021	Identifier	block_size		4966929	0					
ANR	4967022	CompoundStatement		19:14:506:506	4966929	1					
ANR	4967023	IfStatement	"if ( block < bot + block_size * 2 || memcmp ( block , block - block_size * 2 , block_size ) )"		4966929	0					
ANR	4967024	Condition	"block < bot + block_size * 2 || memcmp ( block , block - block_size * 2 , block_size )"	2725:16:86303:86399	4966929	0	True				
ANR	4967025	OrExpression	"block < bot + block_size * 2 || memcmp ( block , block - block_size * 2 , block_size )"		4966929	0		||			
ANR	4967026	RelationalExpression	block < bot + block_size * 2		4966929	0		<			
ANR	4967027	Identifier	block		4966929	0					
ANR	4967028	AdditiveExpression	bot + block_size * 2		4966929	1		+			
ANR	4967029	Identifier	bot		4966929	0					
ANR	4967030	MultiplicativeExpression	block_size * 2		4966929	1		*			
ANR	4967031	Identifier	block_size		4966929	0					
ANR	4967032	PrimaryExpression	2		4966929	1					
ANR	4967033	CallExpression	"memcmp ( block , block - block_size * 2 , block_size )"		4966929	1					
ANR	4967034	Callee	memcmp		4966929	0					
ANR	4967035	Identifier	memcmp		4966929	0					
ANR	4967036	ArgumentList	block		4966929	1					
ANR	4967037	Argument	block		4966929	0					
ANR	4967038	Identifier	block		4966929	0					
ANR	4967039	Argument	block - block_size * 2		4966929	1					
ANR	4967040	AdditiveExpression	block - block_size * 2		4966929	0		-			
ANR	4967041	Identifier	block		4966929	0					
ANR	4967042	MultiplicativeExpression	block_size * 2		4966929	1		*			
ANR	4967043	Identifier	block_size		4966929	0					
ANR	4967044	PrimaryExpression	2		4966929	1					
ANR	4967045	Argument	block_size		4966929	2					
ANR	4967046	Identifier	block_size		4966929	0					
ANR	4967047	CompoundStatement		22:18:640:640	4966929	1					
ANR	4967048	ExpressionStatement	"debug_indent ( mem , indent )"	2728:16:86437:86462	4966929	0	True				
ANR	4967049	CallExpression	"debug_indent ( mem , indent )"		4966929	0					
ANR	4967050	Callee	debug_indent		4966929	0					
ANR	4967051	Identifier	debug_indent		4966929	0					
ANR	4967052	ArgumentList	mem		4966929	1					
ANR	4967053	Argument	mem		4966929	0					
ANR	4967054	Identifier	mem		4966929	0					
ANR	4967055	Argument	indent		4966929	1					
ANR	4967056	Identifier	indent		4966929	0					
ANR	4967057	ExpressionStatement	"dmputs ( mem , ""  ...\\n"" )"	2729:16:86480:86502	4966929	1	True				
ANR	4967058	CallExpression	"dmputs ( mem , ""  ...\\n"" )"		4966929	0					
ANR	4967059	Callee	dmputs		4966929	0					
ANR	4967060	Identifier	dmputs		4966929	0					
ANR	4967061	ArgumentList	mem		4966929	1					
ANR	4967062	Argument	mem		4966929	0					
ANR	4967063	Identifier	mem		4966929	0					
ANR	4967064	Argument	"""  ...\\n"""		4966929	1					
ANR	4967065	PrimaryExpression	"""  ...\\n"""		4966929	0					
ANR	4967066	ContinueStatement	continue ;	2731:12:86530:86538	4966929	1	True				
ANR	4967067	ExpressionStatement	"gs_sprintf ( label , ""0x%lx:"" , ( ulong ) block )"	2733:8:86558:86600	4966929	3	True				
ANR	4967068	CallExpression	"gs_sprintf ( label , ""0x%lx:"" , ( ulong ) block )"		4966929	0					
ANR	4967069	Callee	gs_sprintf		4966929	0					
ANR	4967070	Identifier	gs_sprintf		4966929	0					
ANR	4967071	ArgumentList	label		4966929	1					
ANR	4967072	Argument	label		4966929	0					
ANR	4967073	Identifier	label		4966929	0					
ANR	4967074	Argument	"""0x%lx:"""		4966929	1					
ANR	4967075	PrimaryExpression	"""0x%lx:"""		4966929	0					
ANR	4967076	Argument	( ulong ) block		4966929	2					
ANR	4967077	CastExpression	( ulong ) block		4966929	0					
ANR	4967078	CastTarget	ulong		4966929	0					
ANR	4967079	Identifier	block		4966929	1					
ANR	4967080	ExpressionStatement	"debug_indent ( mem , indent )"	2734:8:86610:86635	4966929	4	True				
ANR	4967081	CallExpression	"debug_indent ( mem , indent )"		4966929	0					
ANR	4967082	Callee	debug_indent		4966929	0					
ANR	4967083	Identifier	debug_indent		4966929	0					
ANR	4967084	ArgumentList	mem		4966929	1					
ANR	4967085	Argument	mem		4966929	0					
ANR	4967086	Identifier	mem		4966929	0					
ANR	4967087	Argument	indent		4966929	1					
ANR	4967088	Identifier	indent		4966929	0					
ANR	4967089	ExpressionStatement	"dmputs ( mem , label )"	2735:8:86645:86663	4966929	5	True				
ANR	4967090	CallExpression	"dmputs ( mem , label )"		4966929	0					
ANR	4967091	Callee	dmputs		4966929	0					
ANR	4967092	Identifier	dmputs		4966929	0					
ANR	4967093	ArgumentList	mem		4966929	1					
ANR	4967094	Argument	mem		4966929	0					
ANR	4967095	Identifier	mem		4966929	0					
ANR	4967096	Argument	label		4966929	1					
ANR	4967097	Identifier	label		4966929	0					
ANR	4967098	ForStatement	for ( i = 0 ; i < block_size ; ++ i )		4966929	6					
ANR	4967099	ForInit	i = 0 ;	2736:13:86678:86683	4966929	0	True				
ANR	4967100	AssignmentExpression	i = 0		4966929	0		=			
ANR	4967101	Identifier	i		4966929	0					
ANR	4967102	PrimaryExpression	0		4966929	1					
ANR	4967103	Condition	i < block_size	2736:20:86685:86698	4966929	1	True				
ANR	4967104	RelationalExpression	i < block_size		4966929	0		<			
ANR	4967105	Identifier	i		4966929	0					
ANR	4967106	Identifier	block_size		4966929	1					
ANR	4967107	UnaryExpression	++ i	2736:36:86701:86703	4966929	2	True				
ANR	4967108	IncDec	++		4966929	0					
ANR	4967109	Identifier	i		4966929	1					
ANR	4967110	CompoundStatement		32:12:941:997	4966929	3					
ANR	4967111	IdentifierDeclStatement	"const char * sepr = ( ( i & 3 ) == 0 && i != 0 ? ""  "" : "" "" ) ;"	2737:12:86720:86776	4966929	0	True				
ANR	4967112	IdentifierDecl	"* sepr = ( ( i & 3 ) == 0 && i != 0 ? ""  "" : "" "" )"		4966929	0					
ANR	4967113	IdentifierDeclType	const char *		4966929	0					
ANR	4967114	Identifier	sepr		4966929	1					
ANR	4967115	AssignmentExpression	"* sepr = ( ( i & 3 ) == 0 && i != 0 ? ""  "" : "" "" )"		4966929	2		=			
ANR	4967116	Identifier	sepr		4966929	0					
ANR	4967117	ConditionalExpression	"( i & 3 ) == 0 && i != 0 ? ""  "" : "" """		4966929	1					
ANR	4967118	Condition	( i & 3 ) == 0 && i != 0		4966929	0					
ANR	4967119	AndExpression	( i & 3 ) == 0 && i != 0		4966929	0		&&			
ANR	4967120	EqualityExpression	( i & 3 ) == 0		4966929	0		==			
ANR	4967121	BitAndExpression	i & 3		4966929	0		&			
ANR	4967122	Identifier	i		4966929	0					
ANR	4967123	PrimaryExpression	3		4966929	1					
ANR	4967124	PrimaryExpression	0		4966929	1					
ANR	4967125	EqualityExpression	i != 0		4966929	1		!=			
ANR	4967126	Identifier	i		4966929	0					
ANR	4967127	PrimaryExpression	0		4966929	1					
ANR	4967128	PrimaryExpression	"""  """		4966929	1					
ANR	4967129	PrimaryExpression	""" """		4966929	2					
ANR	4967130	ExpressionStatement	"dmputs ( mem , sepr )"	2739:12:86791:86808	4966929	1	True				
ANR	4967131	CallExpression	"dmputs ( mem , sepr )"		4966929	0					
ANR	4967132	Callee	dmputs		4966929	0					
ANR	4967133	Identifier	dmputs		4966929	0					
ANR	4967134	ArgumentList	mem		4966929	1					
ANR	4967135	Argument	mem		4966929	0					
ANR	4967136	Identifier	mem		4966929	0					
ANR	4967137	Argument	sepr		4966929	1					
ANR	4967138	Identifier	sepr		4966929	0					
ANR	4967139	IfStatement	if ( block + i >= bot && block + i < top )		4966929	2					
ANR	4967140	Condition	block + i >= bot && block + i < top	2740:16:86826:86860	4966929	0	True				
ANR	4967141	AndExpression	block + i >= bot && block + i < top		4966929	0		&&			
ANR	4967142	RelationalExpression	block + i >= bot		4966929	0		>=			
ANR	4967143	AdditiveExpression	block + i		4966929	0		+			
ANR	4967144	Identifier	block		4966929	0					
ANR	4967145	Identifier	i		4966929	1					
ANR	4967146	Identifier	bot		4966929	1					
ANR	4967147	RelationalExpression	block + i < top		4966929	1		<			
ANR	4967148	AdditiveExpression	block + i		4966929	0		+			
ANR	4967149	Identifier	block		4966929	0					
ANR	4967150	Identifier	i		4966929	1					
ANR	4967151	Identifier	top		4966929	1					
ANR	4967152	ExpressionStatement	"dmprintf1 ( mem , ""%02x"" , block [ i ] )"	2741:16:86879:86911	4966929	1	True				
ANR	4967153	CallExpression	"dmprintf1 ( mem , ""%02x"" , block [ i ] )"		4966929	0					
ANR	4967154	Callee	dmprintf1		4966929	0					
ANR	4967155	Identifier	dmprintf1		4966929	0					
ANR	4967156	ArgumentList	mem		4966929	1					
ANR	4967157	Argument	mem		4966929	0					
ANR	4967158	Identifier	mem		4966929	0					
ANR	4967159	Argument	"""%02x"""		4966929	1					
ANR	4967160	PrimaryExpression	"""%02x"""		4966929	0					
ANR	4967161	Argument	block [ i ]		4966929	2					
ANR	4967162	ArrayIndexing	block [ i ]		4966929	0					
ANR	4967163	Identifier	block		4966929	0					
ANR	4967164	Identifier	i		4966929	1					
ANR	4967165	ElseStatement	else		4966929	0					
ANR	4967166	ExpressionStatement	"dmputs ( mem , ""  "" )"	2743:16:86946:86963	4966929	0	True				
ANR	4967167	CallExpression	"dmputs ( mem , ""  "" )"		4966929	0					
ANR	4967168	Callee	dmputs		4966929	0					
ANR	4967169	Identifier	dmputs		4966929	0					
ANR	4967170	ArgumentList	mem		4966929	1					
ANR	4967171	Argument	mem		4966929	0					
ANR	4967172	Identifier	mem		4966929	0					
ANR	4967173	Argument	"""  """		4966929	1					
ANR	4967174	PrimaryExpression	"""  """		4966929	0					
ANR	4967175	ExpressionStatement	"dmputc ( mem , '\\n' )"	2745:8:86983:87000	4966929	7	True				
ANR	4967176	CallExpression	"dmputc ( mem , '\\n' )"		4966929	0					
ANR	4967177	Callee	dmputc		4966929	0					
ANR	4967178	Identifier	dmputc		4966929	0					
ANR	4967179	ArgumentList	mem		4966929	1					
ANR	4967180	Argument	mem		4966929	0					
ANR	4967181	Identifier	mem		4966929	0					
ANR	4967182	Argument	'\\n'		4966929	1					
ANR	4967183	PrimaryExpression	'\\n'		4966929	0					
ANR	4967184	IfStatement	if ( as_chars )		4966929	8					
ANR	4967185	Condition	as_chars	2746:12:87014:87021	4966929	0	True				
ANR	4967186	Identifier	as_chars		4966929	0					
ANR	4967187	CompoundStatement		41:22:1245:1245	4966929	1					
ANR	4967188	ExpressionStatement	"debug_indent ( mem , indent + strlen ( label ) )"	2747:12:87038:87079	4966929	0	True				
ANR	4967189	CallExpression	"debug_indent ( mem , indent + strlen ( label ) )"		4966929	0					
ANR	4967190	Callee	debug_indent		4966929	0					
ANR	4967191	Identifier	debug_indent		4966929	0					
ANR	4967192	ArgumentList	mem		4966929	1					
ANR	4967193	Argument	mem		4966929	0					
ANR	4967194	Identifier	mem		4966929	0					
ANR	4967195	Argument	indent + strlen ( label )		4966929	1					
ANR	4967196	AdditiveExpression	indent + strlen ( label )		4966929	0		+			
ANR	4967197	Identifier	indent		4966929	0					
ANR	4967198	CallExpression	strlen ( label )		4966929	1					
ANR	4967199	Callee	strlen		4966929	0					
ANR	4967200	Identifier	strlen		4966929	0					
ANR	4967201	ArgumentList	label		4966929	1					
ANR	4967202	Argument	label		4966929	0					
ANR	4967203	Identifier	label		4966929	0					
ANR	4967204	ForStatement	for ( i = 0 ; i < block_size ; ++ i )		4966929	1					
ANR	4967205	ForInit	i = 0 ;	2748:17:87098:87103	4966929	0	True				
ANR	4967206	AssignmentExpression	i = 0		4966929	0		=			
ANR	4967207	Identifier	i		4966929	0					
ANR	4967208	PrimaryExpression	0		4966929	1					
ANR	4967209	Condition	i < block_size	2748:24:87105:87118	4966929	1	True				
ANR	4967210	RelationalExpression	i < block_size		4966929	0		<			
ANR	4967211	Identifier	i		4966929	0					
ANR	4967212	Identifier	block_size		4966929	1					
ANR	4967213	UnaryExpression	++ i	2748:40:87121:87123	4966929	2	True				
ANR	4967214	IncDec	++		4966929	0					
ANR	4967215	Identifier	i		4966929	1					
ANR	4967216	CompoundStatement		44:16:1365:1372	4966929	3					
ANR	4967217	IdentifierDeclStatement	byte ch ;	2749:16:87144:87151	4966929	0	True				
ANR	4967218	IdentifierDecl	ch		4966929	0					
ANR	4967219	IdentifierDeclType	byte		4966929	0					
ANR	4967220	Identifier	ch		4966929	1					
ANR	4967221	IfStatement	if ( ( i & 3 ) == 0 && i != 0 )		4966929	1					
ANR	4967222	Condition	( i & 3 ) == 0 && i != 0	2751:20:87174:87195	4966929	0	True				
ANR	4967223	AndExpression	( i & 3 ) == 0 && i != 0		4966929	0		&&			
ANR	4967224	EqualityExpression	( i & 3 ) == 0		4966929	0		==			
ANR	4967225	BitAndExpression	i & 3		4966929	0		&			
ANR	4967226	Identifier	i		4966929	0					
ANR	4967227	PrimaryExpression	3		4966929	1					
ANR	4967228	PrimaryExpression	0		4966929	1					
ANR	4967229	EqualityExpression	i != 0		4966929	1		!=			
ANR	4967230	Identifier	i		4966929	0					
ANR	4967231	PrimaryExpression	0		4966929	1					
ANR	4967232	ExpressionStatement	"dmputc ( mem , ' ' )"	2752:20:87218:87234	4966929	1	True				
ANR	4967233	CallExpression	"dmputc ( mem , ' ' )"		4966929	0					
ANR	4967234	Callee	dmputc		4966929	0					
ANR	4967235	Identifier	dmputc		4966929	0					
ANR	4967236	ArgumentList	mem		4966929	1					
ANR	4967237	Argument	mem		4966929	0					
ANR	4967238	Identifier	mem		4966929	0					
ANR	4967239	Argument	' '		4966929	1					
ANR	4967240	PrimaryExpression	' '		4966929	0					
ANR	4967241	IfStatement	if ( block + i >= bot && block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126 )		4966929	2					
ANR	4967242	Condition	block + i >= bot && block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126	2753:20:87256:87348	4966929	0	True				
ANR	4967243	AndExpression	block + i >= bot && block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126		4966929	0		&&			
ANR	4967244	RelationalExpression	block + i >= bot		4966929	0		>=			
ANR	4967245	AdditiveExpression	block + i		4966929	0		+			
ANR	4967246	Identifier	block		4966929	0					
ANR	4967247	Identifier	i		4966929	1					
ANR	4967248	Identifier	bot		4966929	1					
ANR	4967249	AndExpression	block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126		4966929	1		&&			
ANR	4967250	RelationalExpression	block + i < top		4966929	0		<			
ANR	4967251	AdditiveExpression	block + i		4966929	0		+			
ANR	4967252	Identifier	block		4966929	0					
ANR	4967253	Identifier	i		4966929	1					
ANR	4967254	Identifier	top		4966929	1					
ANR	4967255	AndExpression	( ch = block [ i ] ) >= 32 && ch <= 126		4966929	1		&&			
ANR	4967256	RelationalExpression	( ch = block [ i ] ) >= 32		4966929	0		>=			
ANR	4967257	AssignmentExpression	ch = block [ i ]		4966929	0		=			
ANR	4967258	Identifier	ch		4966929	0					
ANR	4967259	ArrayIndexing	block [ i ]		4966929	1					
ANR	4967260	Identifier	block		4966929	0					
ANR	4967261	Identifier	i		4966929	1					
ANR	4967262	PrimaryExpression	32		4966929	1					
ANR	4967263	RelationalExpression	ch <= 126		4966929	1		<=			
ANR	4967264	Identifier	ch		4966929	0					
ANR	4967265	PrimaryExpression	126		4966929	1					
ANR	4967266	ExpressionStatement	"dmprintf1 ( mem , ""  %c"" , ch )"	2756:20:87392:87418	4966929	1	True				
ANR	4967267	CallExpression	"dmprintf1 ( mem , ""  %c"" , ch )"		4966929	0					
ANR	4967268	Callee	dmprintf1		4966929	0					
ANR	4967269	Identifier	dmprintf1		4966929	0					
ANR	4967270	ArgumentList	mem		4966929	1					
ANR	4967271	Argument	mem		4966929	0					
ANR	4967272	Identifier	mem		4966929	0					
ANR	4967273	Argument	"""  %c"""		4966929	1					
ANR	4967274	PrimaryExpression	"""  %c"""		4966929	0					
ANR	4967275	Argument	ch		4966929	2					
ANR	4967276	Identifier	ch		4966929	0					
ANR	4967277	ElseStatement	else		4966929	0					
ANR	4967278	ExpressionStatement	"dmputs ( mem , ""   "" )"	2758:20:87461:87479	4966929	0	True				
ANR	4967279	CallExpression	"dmputs ( mem , ""   "" )"		4966929	0					
ANR	4967280	Callee	dmputs		4966929	0					
ANR	4967281	Identifier	dmputs		4966929	0					
ANR	4967282	ArgumentList	mem		4966929	1					
ANR	4967283	Argument	mem		4966929	0					
ANR	4967284	Identifier	mem		4966929	0					
ANR	4967285	Argument	"""   """		4966929	1					
ANR	4967286	PrimaryExpression	"""   """		4966929	0					
ANR	4967287	ExpressionStatement	"dmputc ( mem , '\\n' )"	2760:12:87507:87524	4966929	2	True				
ANR	4967288	CallExpression	"dmputc ( mem , '\\n' )"		4966929	0					
ANR	4967289	Callee	dmputc		4966929	0					
ANR	4967290	Identifier	dmputc		4966929	0					
ANR	4967291	ArgumentList	mem		4966929	1					
ANR	4967292	Argument	mem		4966929	0					
ANR	4967293	Identifier	mem		4966929	0					
ANR	4967294	Argument	'\\n'		4966929	1					
ANR	4967295	PrimaryExpression	'\\n'		4966929	0					
ANR	4967296	Statement	undef	2763:1:87543:87547	4966929	6	True				
ANR	4967297	Statement	block_size	2763:7:87549:87558	4966929	7	True				
ANR	4967298	ReturnType	static void		4966929	1					
ANR	4967299	Identifier	debug_dump_contents		4966929	2					
ANR	4967300	ParameterList	"const gs_memory_t * mem , const byte * bot , const byte * top , int indent , bool as_chars"		4966929	3					
ANR	4967301	Parameter	const gs_memory_t * mem	2704:20:85671:85692	4966929	0	True				
ANR	4967302	ParameterType	const gs_memory_t *		4966929	0					
ANR	4967303	Identifier	mem		4966929	1					
ANR	4967304	Parameter	const byte * bot	2704:44:85695:85710	4966929	1	True				
ANR	4967305	ParameterType	const byte *		4966929	0					
ANR	4967306	Identifier	bot		4966929	1					
ANR	4967307	Parameter	const byte * top	2705:20:85733:85748	4966929	2	True				
ANR	4967308	ParameterType	const byte *		4966929	0					
ANR	4967309	Identifier	top		4966929	1					
ANR	4967310	Parameter	int indent	2705:38:85751:85760	4966929	3	True				
ANR	4967311	ParameterType	int		4966929	0					
ANR	4967312	Identifier	indent		4966929	1					
ANR	4967313	Parameter	bool as_chars	2705:50:85763:85775	4966929	4	True				
ANR	4967314	ParameterType	bool		4966929	0					
ANR	4967315	Identifier	as_chars		4966929	1					
ANR	4967316	CFGEntryNode	ENTRY		4966929		True				
ANR	4967317	CFGExitNode	EXIT		4966929		True				
ANR	4967318	Symbol	sepr		4966929						
ANR	4967319	Symbol	indent		4966929						
ANR	4967320	Symbol	ch		4966929						
ANR	4967321	Symbol	bot		4966929						
ANR	4967322	Symbol	i		4966929						
ANR	4967323	Symbol	label		4966929						
ANR	4967324	Symbol	as_chars		4966929						
ANR	4967325	Symbol	* block		4966929						
ANR	4967326	Symbol	strlen		4966929						
ANR	4967327	Symbol	memcmp		4966929						
ANR	4967328	Symbol	* i		4966929						
ANR	4967329	Symbol	mem		4966929						
ANR	4967330	Symbol	top		4966929						
ANR	4967331	Symbol	block		4966929						
ANR	4967332	Symbol	block_size		4966929						
ANR	4967333	Function	debug_print_object	2769:0:87703:90781							
ANR	4967334	FunctionDef	"debug_print_object (const gs_memory_t * mem , const void * obj , const dump_control_t * control)"		4967333	0					
ANR	4967335	CompoundStatement		2771:0:87800:90781	4967333	0					
ANR	4967336	IdentifierDeclStatement	const obj_header_t * pre = ( ( const obj_header_t * ) obj ) - 1 ;	2772:4:87806:87863	4967333	0	True				
ANR	4967337	IdentifierDecl	* pre = ( ( const obj_header_t * ) obj ) - 1		4967333	0					
ANR	4967338	IdentifierDeclType	const obj_header_t *		4967333	0					
ANR	4967339	Identifier	pre		4967333	1					
ANR	4967340	AssignmentExpression	* pre = ( ( const obj_header_t * ) obj ) - 1		4967333	2		=			
ANR	4967341	Identifier	pre		4967333	0					
ANR	4967342	AdditiveExpression	( ( const obj_header_t * ) obj ) - 1		4967333	1		-			
ANR	4967343	CastExpression	( const obj_header_t * ) obj		4967333	0					
ANR	4967344	CastTarget	const obj_header_t *		4967333	0					
ANR	4967345	Identifier	obj		4967333	1					
ANR	4967346	PrimaryExpression	1		4967333	1					
ANR	4967347	IdentifierDeclStatement	ulong size = pre_obj_contents_size ( pre ) ;	2773:4:87869:87908	4967333	1	True				
ANR	4967348	IdentifierDecl	size = pre_obj_contents_size ( pre )		4967333	0					
ANR	4967349	IdentifierDeclType	ulong		4967333	0					
ANR	4967350	Identifier	size		4967333	1					
ANR	4967351	AssignmentExpression	size = pre_obj_contents_size ( pre )		4967333	2		=			
ANR	4967352	Identifier	size		4967333	0					
ANR	4967353	CallExpression	pre_obj_contents_size ( pre )		4967333	1					
ANR	4967354	Callee	pre_obj_contents_size		4967333	0					
ANR	4967355	Identifier	pre_obj_contents_size		4967333	0					
ANR	4967356	ArgumentList	pre		4967333	1					
ANR	4967357	Argument	pre		4967333	0					
ANR	4967358	Identifier	pre		4967333	0					
ANR	4967359	IdentifierDeclStatement	const gs_memory_struct_type_t * type = pre -> o_type ;	2774:4:87914:87963	4967333	2	True				
ANR	4967360	IdentifierDecl	* type = pre -> o_type		4967333	0					
ANR	4967361	IdentifierDeclType	const gs_memory_struct_type_t *		4967333	0					
ANR	4967362	Identifier	type		4967333	1					
ANR	4967363	AssignmentExpression	* type = pre -> o_type		4967333	2		=			
ANR	4967364	Identifier	type		4967333	0					
ANR	4967365	PtrMemberAccess	pre -> o_type		4967333	1					
ANR	4967366	Identifier	pre		4967333	0					
ANR	4967367	Identifier	o_type		4967333	1					
ANR	4967368	IdentifierDeclStatement	dump_options_t options = control -> options ;	2775:4:87969:88010	4967333	3	True				
ANR	4967369	IdentifierDecl	options = control -> options		4967333	0					
ANR	4967370	IdentifierDeclType	dump_options_t		4967333	0					
ANR	4967371	Identifier	options		4967333	1					
ANR	4967372	AssignmentExpression	options = control -> options		4967333	2		=			
ANR	4967373	Identifier	options		4967333	0					
ANR	4967374	PtrMemberAccess	control -> options		4967333	1					
ANR	4967375	Identifier	control		4967333	0					
ANR	4967376	Identifier	options		4967333	1					
ANR	4967377	ExpressionStatement	"dmprintf3 ( mem , ""  pre=0x%lx(obj=0x%lx) size=%lu"" , ( ulong ) pre , ( ulong ) obj , size )"	2777:4:88017:88111	4967333	4	True				
ANR	4967378	CallExpression	"dmprintf3 ( mem , ""  pre=0x%lx(obj=0x%lx) size=%lu"" , ( ulong ) pre , ( ulong ) obj , size )"		4967333	0					
ANR	4967379	Callee	dmprintf3		4967333	0					
ANR	4967380	Identifier	dmprintf3		4967333	0					
ANR	4967381	ArgumentList	mem		4967333	1					
ANR	4967382	Argument	mem		4967333	0					
ANR	4967383	Identifier	mem		4967333	0					
ANR	4967384	Argument	"""  pre=0x%lx(obj=0x%lx) size=%lu"""		4967333	1					
ANR	4967385	PrimaryExpression	"""  pre=0x%lx(obj=0x%lx) size=%lu"""		4967333	0					
ANR	4967386	Argument	( ulong ) pre		4967333	2					
ANR	4967387	CastExpression	( ulong ) pre		4967333	0					
ANR	4967388	CastTarget	ulong		4967333	0					
ANR	4967389	Identifier	pre		4967333	1					
ANR	4967390	Argument	( ulong ) obj		4967333	3					
ANR	4967391	CastExpression	( ulong ) obj		4967333	0					
ANR	4967392	CastTarget	ulong		4967333	0					
ANR	4967393	Identifier	obj		4967333	1					
ANR	4967394	Argument	size		4967333	4					
ANR	4967395	Identifier	size		4967333	0					
ANR	4967396	SwitchStatement	switch ( options & ( dump_do_type_addresses | dump_do_no_types ) )		4967333	5					
ANR	4967397	Condition	options & ( dump_do_type_addresses | dump_do_no_types )	2779:12:88125:88177	4967333	0	True				
ANR	4967398	BitAndExpression	options & ( dump_do_type_addresses | dump_do_no_types )		4967333	0		&			
ANR	4967399	Identifier	options		4967333	0					
ANR	4967400	InclusiveOrExpression	dump_do_type_addresses | dump_do_no_types		4967333	1		|			
ANR	4967401	Identifier	dump_do_type_addresses		4967333	0					
ANR	4967402	Identifier	dump_do_no_types		4967333	1					
ANR	4967403	CompoundStatement		9:67:379:379	4967333	1					
ANR	4967404	Statement	case	2780:4:88186:88189	4967333	0	True				
ANR	4967405	Statement	dump_do_type_addresses	2780:9:88191:88212	4967333	1	True				
ANR	4967406	Statement	+	2780:32:88214:88214	4967333	2	True				
ANR	4967407	Label	dump_do_no_types :	2780:34:88216:88232	4967333	3	True				
ANR	4967408	Identifier	dump_do_no_types		4967333	0					
ANR	4967409	ExpressionStatement	"dmprintf1 ( mem , "" type=0x%lx"" , ( ulong ) type )"	2781:8:88263:88306	4967333	4	True				
ANR	4967410	CallExpression	"dmprintf1 ( mem , "" type=0x%lx"" , ( ulong ) type )"		4967333	0					
ANR	4967411	Callee	dmprintf1		4967333	0					
ANR	4967412	Identifier	dmprintf1		4967333	0					
ANR	4967413	ArgumentList	mem		4967333	1					
ANR	4967414	Argument	mem		4967333	0					
ANR	4967415	Identifier	mem		4967333	0					
ANR	4967416	Argument	""" type=0x%lx"""		4967333	1					
ANR	4967417	PrimaryExpression	""" type=0x%lx"""		4967333	0					
ANR	4967418	Argument	( ulong ) type		4967333	2					
ANR	4967419	CastExpression	( ulong ) type		4967333	0					
ANR	4967420	CastTarget	ulong		4967333	0					
ANR	4967421	Identifier	type		4967333	1					
ANR	4967422	BreakStatement	break ;	2782:8:88316:88321	4967333	5	True				
ANR	4967423	Label	case dump_do_type_addresses :	2783:4:88327:88354	4967333	6	True				
ANR	4967424	Identifier	dump_do_type_addresses		4967333	0					
ANR	4967425	ExpressionStatement	"dmprintf2 ( mem , "" type=%s(0x%lx)"" , struct_type_name_string ( type ) , ( ulong ) type )"	2784:8:88388:88483	4967333	7	True				
ANR	4967426	CallExpression	"dmprintf2 ( mem , "" type=%s(0x%lx)"" , struct_type_name_string ( type ) , ( ulong ) type )"		4967333	0					
ANR	4967427	Callee	dmprintf2		4967333	0					
ANR	4967428	Identifier	dmprintf2		4967333	0					
ANR	4967429	ArgumentList	mem		4967333	1					
ANR	4967430	Argument	mem		4967333	0					
ANR	4967431	Identifier	mem		4967333	0					
ANR	4967432	Argument	""" type=%s(0x%lx)"""		4967333	1					
ANR	4967433	PrimaryExpression	""" type=%s(0x%lx)"""		4967333	0					
ANR	4967434	Argument	struct_type_name_string ( type )		4967333	2					
ANR	4967435	CallExpression	struct_type_name_string ( type )		4967333	0					
ANR	4967436	Callee	struct_type_name_string		4967333	0					
ANR	4967437	Identifier	struct_type_name_string		4967333	0					
ANR	4967438	ArgumentList	type		4967333	1					
ANR	4967439	Argument	type		4967333	0					
ANR	4967440	Identifier	type		4967333	0					
ANR	4967441	Argument	( ulong ) type		4967333	3					
ANR	4967442	CastExpression	( ulong ) type		4967333	0					
ANR	4967443	CastTarget	ulong		4967333	0					
ANR	4967444	Identifier	type		4967333	1					
ANR	4967445	BreakStatement	break ;	2786:8:88493:88498	4967333	8	True				
ANR	4967446	Label	case 0 :	2787:4:88504:88510	4967333	9	True				
ANR	4967447	ExpressionStatement	"dmprintf1 ( mem , "" type=%s"" , struct_type_name_string ( type ) )"	2788:8:88538:88595	4967333	10	True				
ANR	4967448	CallExpression	"dmprintf1 ( mem , "" type=%s"" , struct_type_name_string ( type ) )"		4967333	0					
ANR	4967449	Callee	dmprintf1		4967333	0					
ANR	4967450	Identifier	dmprintf1		4967333	0					
ANR	4967451	ArgumentList	mem		4967333	1					
ANR	4967452	Argument	mem		4967333	0					
ANR	4967453	Identifier	mem		4967333	0					
ANR	4967454	Argument	""" type=%s"""		4967333	1					
ANR	4967455	PrimaryExpression	""" type=%s"""		4967333	0					
ANR	4967456	Argument	struct_type_name_string ( type )		4967333	2					
ANR	4967457	CallExpression	struct_type_name_string ( type )		4967333	0					
ANR	4967458	Callee	struct_type_name_string		4967333	0					
ANR	4967459	Identifier	struct_type_name_string		4967333	0					
ANR	4967460	ArgumentList	type		4967333	1					
ANR	4967461	Argument	type		4967333	0					
ANR	4967462	Identifier	type		4967333	0					
ANR	4967463	Label	case dump_do_no_types :	2789:4:88601:88622	4967333	11	True				
ANR	4967464	Identifier	dump_do_no_types		4967333	0					
ANR	4967465	ExpressionStatement		2790:8:88646:88646	4967333	12	True				
ANR	4967466	IfStatement	if ( options & dump_do_marks )		4967333	6					
ANR	4967467	Condition	options & dump_do_marks	2792:8:88662:88684	4967333	0	True				
ANR	4967468	BitAndExpression	options & dump_do_marks		4967333	0		&			
ANR	4967469	Identifier	options		4967333	0					
ANR	4967470	Identifier	dump_do_marks		4967333	1					
ANR	4967471	CompoundStatement		22:33:886:886	4967333	1					
ANR	4967472	ExpressionStatement	"dmprintf2 ( mem , "" smark/back=%u (0x%x)"" , pre -> o_smark , pre -> o_smark )"	2793:8:88697:88764	4967333	0	True				
ANR	4967473	CallExpression	"dmprintf2 ( mem , "" smark/back=%u (0x%x)"" , pre -> o_smark , pre -> o_smark )"		4967333	0					
ANR	4967474	Callee	dmprintf2		4967333	0					
ANR	4967475	Identifier	dmprintf2		4967333	0					
ANR	4967476	ArgumentList	mem		4967333	1					
ANR	4967477	Argument	mem		4967333	0					
ANR	4967478	Identifier	mem		4967333	0					
ANR	4967479	Argument	""" smark/back=%u (0x%x)"""		4967333	1					
ANR	4967480	PrimaryExpression	""" smark/back=%u (0x%x)"""		4967333	0					
ANR	4967481	Argument	pre -> o_smark		4967333	2					
ANR	4967482	PtrMemberAccess	pre -> o_smark		4967333	0					
ANR	4967483	Identifier	pre		4967333	0					
ANR	4967484	Identifier	o_smark		4967333	1					
ANR	4967485	Argument	pre -> o_smark		4967333	3					
ANR	4967486	PtrMemberAccess	pre -> o_smark		4967333	0					
ANR	4967487	Identifier	pre		4967333	0					
ANR	4967488	Identifier	o_smark		4967333	1					
ANR	4967489	ExpressionStatement	"dmputc ( mem , '\\n' )"	2795:4:88776:88793	4967333	7	True				
ANR	4967490	CallExpression	"dmputc ( mem , '\\n' )"		4967333	0					
ANR	4967491	Callee	dmputc		4967333	0					
ANR	4967492	Identifier	dmputc		4967333	0					
ANR	4967493	ArgumentList	mem		4967333	1					
ANR	4967494	Argument	mem		4967333	0					
ANR	4967495	Identifier	mem		4967333	0					
ANR	4967496	Argument	'\\n'		4967333	1					
ANR	4967497	PrimaryExpression	'\\n'		4967333	0					
ANR	4967498	IfStatement	if ( type == & st_free )		4967333	8					
ANR	4967499	Condition	type == & st_free	2796:8:88803:88818	4967333	0	True				
ANR	4967500	EqualityExpression	type == & st_free		4967333	0		==			
ANR	4967501	Identifier	type		4967333	0					
ANR	4967502	UnaryOperationExpression	& st_free		4967333	1					
ANR	4967503	UnaryOperator	&		4967333	0					
ANR	4967504	Identifier	st_free		4967333	1					
ANR	4967505	ReturnStatement	return ;	2797:8:88829:88835	4967333	1	True				
ANR	4967506	IfStatement	if ( options & dump_do_pointers )		4967333	9					
ANR	4967507	Condition	options & dump_do_pointers	2798:8:88845:88870	4967333	0	True				
ANR	4967508	BitAndExpression	options & dump_do_pointers		4967333	0		&			
ANR	4967509	Identifier	options		4967333	0					
ANR	4967510	Identifier	dump_do_pointers		4967333	1					
ANR	4967511	CompoundStatement		32:8:1189:1208	4967333	1					
ANR	4967512	ExpressionStatement	struct_proc_enum_ptrs ( ( * proc ) ) = type -> enum_ptrs	2799:8:88883:88931	4967333	0	True				
ANR	4967513	AssignmentExpression	struct_proc_enum_ptrs ( ( * proc ) ) = type -> enum_ptrs		4967333	0		=			
ANR	4967514	CallExpression	struct_proc_enum_ptrs ( ( * proc ) )		4967333	0					
ANR	4967515	Callee	struct_proc_enum_ptrs		4967333	0					
ANR	4967516	Identifier	struct_proc_enum_ptrs		4967333	0					
ANR	4967517	ArgumentList	* proc		4967333	1					
ANR	4967518	Argument	* proc		4967333	0					
ANR	4967519	UnaryOperationExpression	* proc		4967333	0					
ANR	4967520	UnaryOperator	*		4967333	0					
ANR	4967521	Identifier	proc		4967333	1					
ANR	4967522	PtrMemberAccess	type -> enum_ptrs		4967333	1					
ANR	4967523	Identifier	type		4967333	0					
ANR	4967524	Identifier	enum_ptrs		4967333	1					
ANR	4967525	IdentifierDeclStatement	uint index = 0 ;	2800:8:88941:88955	4967333	1	True				
ANR	4967526	IdentifierDecl	index = 0		4967333	0					
ANR	4967527	IdentifierDeclType	uint		4967333	0					
ANR	4967528	Identifier	index		4967333	1					
ANR	4967529	AssignmentExpression	index = 0		4967333	2		=			
ANR	4967530	Identifier	index		4967333	0					
ANR	4967531	PrimaryExpression	0		4967333	1					
ANR	4967532	IdentifierDeclStatement	enum_ptr_t eptr ;	2801:8:88965:88980	4967333	2	True				
ANR	4967533	IdentifierDecl	eptr		4967333	0					
ANR	4967534	IdentifierDeclType	enum_ptr_t		4967333	0					
ANR	4967535	Identifier	eptr		4967333	1					
ANR	4967536	IdentifierDeclStatement	gs_ptr_type_t ptype ;	2802:8:88990:89009	4967333	3	True				
ANR	4967537	IdentifierDecl	ptype		4967333	0					
ANR	4967538	IdentifierDeclType	gs_ptr_type_t		4967333	0					
ANR	4967539	Identifier	ptype		4967333	1					
ANR	4967540	IfStatement	if ( proc != gs_no_struct_enum_ptrs )		4967333	4					
ANR	4967541	Condition	proc != gs_no_struct_enum_ptrs	2804:12:89024:89053	4967333	0	True				
ANR	4967542	EqualityExpression	proc != gs_no_struct_enum_ptrs		4967333	0		!=			
ANR	4967543	Identifier	proc		4967333	0					
ANR	4967544	Identifier	gs_no_struct_enum_ptrs		4967333	1					
ANR	4967545	CompoundStatement		34:44:1255:1255	4967333	1					
ANR	4967546	IfStatement	if ( proc != 0 )		4967333	0					
ANR	4967547	Condition	proc != 0	2805:16:89074:89082	4967333	0	True				
ANR	4967548	EqualityExpression	proc != 0		4967333	0		!=			
ANR	4967549	Identifier	proc		4967333	0					
ANR	4967550	PrimaryExpression	0		4967333	1					
ANR	4967551	CompoundStatement		35:27:1284:1284	4967333	1					
ANR	4967552	ForStatement	"for ( ; ( ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL ) ) != 0 ; ++ index )"		4967333	0					
ANR	4967553	Condition	"( ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL ) ) != 0"	2806:23:89110:89177	4967333	0	True				
ANR	4967554	EqualityExpression	"( ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL ) ) != 0"		4967333	0		!=			
ANR	4967555	AssignmentExpression	"ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL )"		4967333	0		=			
ANR	4967556	Identifier	ptype		4967333	0					
ANR	4967557	CallExpression	"( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL )"		4967333	1					
ANR	4967558	Callee	* proc		4967333	0					
ANR	4967559	UnaryOperationExpression	* proc		4967333	0					
ANR	4967560	UnaryOperator	*		4967333	0					
ANR	4967561	Identifier	proc		4967333	1					
ANR	4967562	ArgumentList	mem		4967333	1					
ANR	4967563	Argument	mem		4967333	0					
ANR	4967564	Identifier	mem		4967333	0					
ANR	4967565	Argument	pre + 1		4967333	1					
ANR	4967566	AdditiveExpression	pre + 1		4967333	0		+			
ANR	4967567	Identifier	pre		4967333	0					
ANR	4967568	PrimaryExpression	1		4967333	1					
ANR	4967569	Argument	size		4967333	2					
ANR	4967570	Identifier	size		4967333	0					
ANR	4967571	Argument	index		4967333	3					
ANR	4967572	Identifier	index		4967333	0					
ANR	4967573	Argument	& eptr		4967333	4					
ANR	4967574	UnaryOperationExpression	& eptr		4967333	0					
ANR	4967575	UnaryOperator	&		4967333	0					
ANR	4967576	Identifier	eptr		4967333	1					
ANR	4967577	Argument	type		4967333	5					
ANR	4967578	Identifier	type		4967333	0					
ANR	4967579	Argument	NULL		4967333	6					
ANR	4967580	Identifier	NULL		4967333	0					
ANR	4967581	PrimaryExpression	0		4967333	1					
ANR	4967582	UnaryExpression	++ index	2807:21:89201:89207	4967333	1	True				
ANR	4967583	IncDec	++		4967333	0					
ANR	4967584	Identifier	index		4967333	1					
ANR	4967585	CompoundStatement		39:20:1453:1479	4967333	2					
ANR	4967586	IdentifierDeclStatement	const void * ptr = eptr . ptr ;	2809:20:89254:89280	4967333	0	True				
ANR	4967587	IdentifierDecl	* ptr = eptr . ptr		4967333	0					
ANR	4967588	IdentifierDeclType	const void *		4967333	0					
ANR	4967589	Identifier	ptr		4967333	1					
ANR	4967590	AssignmentExpression	* ptr = eptr . ptr		4967333	2		=			
ANR	4967591	Identifier	ptr		4967333	0					
ANR	4967592	MemberAccess	eptr . ptr		4967333	1					
ANR	4967593	Identifier	eptr		4967333	0					
ANR	4967594	Identifier	ptr		4967333	1					
ANR	4967595	ExpressionStatement	"dmprintf1 ( mem , ""    ptr %u: "" , index )"	2811:20:89303:89340	4967333	1	True				
ANR	4967596	CallExpression	"dmprintf1 ( mem , ""    ptr %u: "" , index )"		4967333	0					
ANR	4967597	Callee	dmprintf1		4967333	0					
ANR	4967598	Identifier	dmprintf1		4967333	0					
ANR	4967599	ArgumentList	mem		4967333	1					
ANR	4967600	Argument	mem		4967333	0					
ANR	4967601	Identifier	mem		4967333	0					
ANR	4967602	Argument	"""    ptr %u: """		4967333	1					
ANR	4967603	PrimaryExpression	"""    ptr %u: """		4967333	0					
ANR	4967604	Argument	index		4967333	2					
ANR	4967605	Identifier	index		4967333	0					
ANR	4967606	IfStatement	if ( ptype == ptr_string_type || ptype == ptr_const_string_type )		4967333	2					
ANR	4967607	Condition	ptype == ptr_string_type || ptype == ptr_const_string_type	2812:24:89366:89423	4967333	0	True				
ANR	4967608	OrExpression	ptype == ptr_string_type || ptype == ptr_const_string_type		4967333	0		||			
ANR	4967609	EqualityExpression	ptype == ptr_string_type		4967333	0		==			
ANR	4967610	Identifier	ptype		4967333	0					
ANR	4967611	Identifier	ptr_string_type		4967333	1					
ANR	4967612	EqualityExpression	ptype == ptr_const_string_type		4967333	1		==			
ANR	4967613	Identifier	ptype		4967333	0					
ANR	4967614	Identifier	ptr_const_string_type		4967333	1					
ANR	4967615	CompoundStatement		43:24:1651:1710	4967333	1					
ANR	4967616	IdentifierDeclStatement	const gs_const_string * str = ( const gs_const_string * ) & eptr ;	2813:24:89452:89511	4967333	0	True				
ANR	4967617	IdentifierDecl	* str = ( const gs_const_string * ) & eptr		4967333	0					
ANR	4967618	IdentifierDeclType	const gs_const_string *		4967333	0					
ANR	4967619	Identifier	str		4967333	1					
ANR	4967620	AssignmentExpression	* str = ( const gs_const_string * ) & eptr		4967333	2		=			
ANR	4967621	Identifier	str		4967333	0					
ANR	4967622	CastExpression	( const gs_const_string * ) & eptr		4967333	1					
ANR	4967623	CastTarget	const gs_const_string *		4967333	0					
ANR	4967624	UnaryOperationExpression	& eptr		4967333	1					
ANR	4967625	UnaryOperator	&		4967333	0					
ANR	4967626	Identifier	eptr		4967333	1					
ANR	4967627	IfStatement	if ( ! str )		4967333	1					
ANR	4967628	Condition	! str	2814:28:89541:89544	4967333	0	True				
ANR	4967629	UnaryOperationExpression	! str		4967333	0					
ANR	4967630	UnaryOperator	!		4967333	0					
ANR	4967631	Identifier	str		4967333	1					
ANR	4967632	ExpressionStatement	"dmprintf ( mem , ""0x0"" )"	2815:28:89575:89595	4967333	1	True				
ANR	4967633	CallExpression	"dmprintf ( mem , ""0x0"" )"		4967333	0					
ANR	4967634	Callee	dmprintf		4967333	0					
ANR	4967635	Identifier	dmprintf		4967333	0					
ANR	4967636	ArgumentList	mem		4967333	1					
ANR	4967637	Argument	mem		4967333	0					
ANR	4967638	Identifier	mem		4967333	0					
ANR	4967639	Argument	"""0x0"""		4967333	1					
ANR	4967640	PrimaryExpression	"""0x0"""		4967333	0					
ANR	4967641	ElseStatement	else		4967333	0					
ANR	4967642	ExpressionStatement	"dmprintf2 ( mem , ""0x%lx(%u)"" , ( ulong ) str -> data , str -> size )"	2817:28:89654:89711	4967333	0	True				
ANR	4967643	CallExpression	"dmprintf2 ( mem , ""0x%lx(%u)"" , ( ulong ) str -> data , str -> size )"		4967333	0					
ANR	4967644	Callee	dmprintf2		4967333	0					
ANR	4967645	Identifier	dmprintf2		4967333	0					
ANR	4967646	ArgumentList	mem		4967333	1					
ANR	4967647	Argument	mem		4967333	0					
ANR	4967648	Identifier	mem		4967333	0					
ANR	4967649	Argument	"""0x%lx(%u)"""		4967333	1					
ANR	4967650	PrimaryExpression	"""0x%lx(%u)"""		4967333	0					
ANR	4967651	Argument	( ulong ) str -> data		4967333	2					
ANR	4967652	CastExpression	( ulong ) str -> data		4967333	0					
ANR	4967653	CastTarget	ulong		4967333	0					
ANR	4967654	PtrMemberAccess	str -> data		4967333	1					
ANR	4967655	Identifier	str		4967333	0					
ANR	4967656	Identifier	data		4967333	1					
ANR	4967657	Argument	str -> size		4967333	3					
ANR	4967658	PtrMemberAccess	str -> size		4967333	0					
ANR	4967659	Identifier	str		4967333	0					
ANR	4967660	Identifier	size		4967333	1					
ANR	4967661	IfStatement	if ( options & dump_do_pointed_strings )		4967333	2					
ANR	4967662	Condition	options & dump_do_pointed_strings	2818:28:89741:89773	4967333	0	True				
ANR	4967663	BitAndExpression	options & dump_do_pointed_strings		4967333	0		&			
ANR	4967664	Identifier	options		4967333	0					
ANR	4967665	Identifier	dump_do_pointed_strings		4967333	1					
ANR	4967666	CompoundStatement		48:63:1975:1975	4967333	1					
ANR	4967667	ExpressionStatement	"dmputs ( mem , "" =>\\n"" )"	2819:28:89806:89826	4967333	0	True				
ANR	4967668	CallExpression	"dmputs ( mem , "" =>\\n"" )"		4967333	0					
ANR	4967669	Callee	dmputs		4967333	0					
ANR	4967670	Identifier	dmputs		4967333	0					
ANR	4967671	ArgumentList	mem		4967333	1					
ANR	4967672	Argument	mem		4967333	0					
ANR	4967673	Identifier	mem		4967333	0					
ANR	4967674	Argument	""" =>\\n"""		4967333	1					
ANR	4967675	PrimaryExpression	""" =>\\n"""		4967333	0					
ANR	4967676	IfStatement	if ( ! str )		4967333	1					
ANR	4967677	Condition	! str	2820:32:89860:89863	4967333	0	True				
ANR	4967678	UnaryOperationExpression	! str		4967333	0					
ANR	4967679	UnaryOperator	!		4967333	0					
ANR	4967680	Identifier	str		4967333	1					
ANR	4967681	ExpressionStatement	"dmprintf ( mem , ""(null)\\n"" )"	2821:32:89898:89923	4967333	1	True				
ANR	4967682	CallExpression	"dmprintf ( mem , ""(null)\\n"" )"		4967333	0					
ANR	4967683	Callee	dmprintf		4967333	0					
ANR	4967684	Identifier	dmprintf		4967333	0					
ANR	4967685	ArgumentList	mem		4967333	1					
ANR	4967686	Argument	mem		4967333	0					
ANR	4967687	Identifier	mem		4967333	0					
ANR	4967688	Argument	"""(null)\\n"""		4967333	1					
ANR	4967689	PrimaryExpression	"""(null)\\n"""		4967333	0					
ANR	4967690	ElseStatement	else		4967333	0					
ANR	4967691	ExpressionStatement	"debug_dump_contents ( mem , str -> data , str -> data + str -> size , 6 , true )"	2823:32:89990:90109	4967333	0	True				
ANR	4967692	CallExpression	"debug_dump_contents ( mem , str -> data , str -> data + str -> size , 6 , true )"		4967333	0					
ANR	4967693	Callee	debug_dump_contents		4967333	0					
ANR	4967694	Identifier	debug_dump_contents		4967333	0					
ANR	4967695	ArgumentList	mem		4967333	1					
ANR	4967696	Argument	mem		4967333	0					
ANR	4967697	Identifier	mem		4967333	0					
ANR	4967698	Argument	str -> data		4967333	1					
ANR	4967699	PtrMemberAccess	str -> data		4967333	0					
ANR	4967700	Identifier	str		4967333	0					
ANR	4967701	Identifier	data		4967333	1					
ANR	4967702	Argument	str -> data + str -> size		4967333	2					
ANR	4967703	AdditiveExpression	str -> data + str -> size		4967333	0		+			
ANR	4967704	PtrMemberAccess	str -> data		4967333	0					
ANR	4967705	Identifier	str		4967333	0					
ANR	4967706	Identifier	data		4967333	1					
ANR	4967707	PtrMemberAccess	str -> size		4967333	1					
ANR	4967708	Identifier	str		4967333	0					
ANR	4967709	Identifier	size		4967333	1					
ANR	4967710	Argument	6		4967333	3					
ANR	4967711	PrimaryExpression	6		4967333	0					
ANR	4967712	Argument	true		4967333	4					
ANR	4967713	Identifier	true		4967333	0					
ANR	4967714	ElseStatement	else		4967333	0					
ANR	4967715	CompoundStatement		55:31:2341:2341	4967333	0					
ANR	4967716	ExpressionStatement	"dmputc ( mem , '\\n' )"	2826:28:90172:90189	4967333	0	True				
ANR	4967717	CallExpression	"dmputc ( mem , '\\n' )"		4967333	0					
ANR	4967718	Callee	dmputc		4967333	0					
ANR	4967719	Identifier	dmputc		4967333	0					
ANR	4967720	ArgumentList	mem		4967333	1					
ANR	4967721	Argument	mem		4967333	0					
ANR	4967722	Identifier	mem		4967333	0					
ANR	4967723	Argument	'\\n'		4967333	1					
ANR	4967724	PrimaryExpression	'\\n'		4967333	0					
ANR	4967725	ElseStatement	else		4967333	0					
ANR	4967726	CompoundStatement		58:27:2443:2443	4967333	0					
ANR	4967727	ExpressionStatement	"dmprintf1 ( mem , ( PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"" ) , ( ulong ) ptr )"	2829:24:90270:90408	4967333	0	True				
ANR	4967728	CallExpression	"dmprintf1 ( mem , ( PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"" ) , ( ulong ) ptr )"		4967333	0					
ANR	4967729	Callee	dmprintf1		4967333	0					
ANR	4967730	Identifier	dmprintf1		4967333	0					
ANR	4967731	ArgumentList	mem		4967333	1					
ANR	4967732	Argument	mem		4967333	0					
ANR	4967733	Identifier	mem		4967333	0					
ANR	4967734	Argument	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"""		4967333	1					
ANR	4967735	ConditionalExpression	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"""		4967333	0					
ANR	4967736	Condition	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size )"		4967333	0					
ANR	4967737	CallExpression	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size )"		4967333	0					
ANR	4967738	Callee	PTR_BETWEEN		4967333	0					
ANR	4967739	Identifier	PTR_BETWEEN		4967333	0					
ANR	4967740	ArgumentList	ptr		4967333	1					
ANR	4967741	Argument	ptr		4967333	0					
ANR	4967742	Identifier	ptr		4967333	0					
ANR	4967743	Argument	obj		4967333	1					
ANR	4967744	Identifier	obj		4967333	0					
ANR	4967745	Argument	( const byte * ) obj + size		4967333	2					
ANR	4967746	AdditiveExpression	( const byte * ) obj + size		4967333	0		+			
ANR	4967747	CastExpression	( const byte * ) obj		4967333	0					
ANR	4967748	CastTarget	const byte *		4967333	0					
ANR	4967749	Identifier	obj		4967333	1					
ANR	4967750	Identifier	size		4967333	1					
ANR	4967751	PrimaryExpression	"""(0x%lx)\\n"""		4967333	1					
ANR	4967752	PrimaryExpression	"""0x%lx\\n"""		4967333	2					
ANR	4967753	Argument	( ulong ) ptr		4967333	2					
ANR	4967754	CastExpression	( ulong ) ptr		4967333	0					
ANR	4967755	CastTarget	ulong		4967333	0					
ANR	4967756	Identifier	ptr		4967333	1					
ANR	4967757	ElseStatement	else		4967333	0					
ANR	4967758	CompoundStatement		63:19:2668:2668	4967333	0					
ANR	4967759	ExpressionStatement	"dmprintf ( mem , ""previous line should be a ref\\n"" )"	2834:16:90503:90551	4967333	0	True				
ANR	4967760	CallExpression	"dmprintf ( mem , ""previous line should be a ref\\n"" )"		4967333	0					
ANR	4967761	Callee	dmprintf		4967333	0					
ANR	4967762	Identifier	dmprintf		4967333	0					
ANR	4967763	ArgumentList	mem		4967333	1					
ANR	4967764	Argument	mem		4967333	0					
ANR	4967765	Identifier	mem		4967333	0					
ANR	4967766	Argument	"""previous line should be a ref\\n"""		4967333	1					
ANR	4967767	PrimaryExpression	"""previous line should be a ref\\n"""		4967333	0					
ANR	4967768	IfStatement	if ( options & dump_do_contents )		4967333	10					
ANR	4967769	Condition	options & dump_do_contents	2838:8:90628:90653	4967333	0	True				
ANR	4967770	BitAndExpression	options & dump_do_contents		4967333	0		&			
ANR	4967771	Identifier	options		4967333	0					
ANR	4967772	Identifier	dump_do_contents		4967333	1					
ANR	4967773	CompoundStatement		68:36:2855:2855	4967333	1					
ANR	4967774	ExpressionStatement	"debug_dump_contents ( mem , ( const byte * ) obj , ( const byte * ) obj + size , 0 , false )"	2839:8:90666:90773	4967333	0	True				
ANR	4967775	CallExpression	"debug_dump_contents ( mem , ( const byte * ) obj , ( const byte * ) obj + size , 0 , false )"		4967333	0					
ANR	4967776	Callee	debug_dump_contents		4967333	0					
ANR	4967777	Identifier	debug_dump_contents		4967333	0					
ANR	4967778	ArgumentList	mem		4967333	1					
ANR	4967779	Argument	mem		4967333	0					
ANR	4967780	Identifier	mem		4967333	0					
ANR	4967781	Argument	( const byte * ) obj		4967333	1					
ANR	4967782	CastExpression	( const byte * ) obj		4967333	0					
ANR	4967783	CastTarget	const byte *		4967333	0					
ANR	4967784	Identifier	obj		4967333	1					
ANR	4967785	Argument	( const byte * ) obj + size		4967333	2					
ANR	4967786	AdditiveExpression	( const byte * ) obj + size		4967333	0		+			
ANR	4967787	CastExpression	( const byte * ) obj		4967333	0					
ANR	4967788	CastTarget	const byte *		4967333	0					
ANR	4967789	Identifier	obj		4967333	1					
ANR	4967790	Identifier	size		4967333	1					
ANR	4967791	Argument	0		4967333	3					
ANR	4967792	PrimaryExpression	0		4967333	0					
ANR	4967793	Argument	false		4967333	4					
ANR	4967794	Identifier	false		4967333	0					
ANR	4967795	ReturnType	void		4967333	1					
ANR	4967796	Identifier	debug_print_object		4967333	2					
ANR	4967797	ParameterList	"const gs_memory_t * mem , const void * obj , const dump_control_t * control"		4967333	3					
ANR	4967798	Parameter	const gs_memory_t * mem	2770:19:87727:87748	4967333	0	True				
ANR	4967799	ParameterType	const gs_memory_t *		4967333	0					
ANR	4967800	Identifier	mem		4967333	1					
ANR	4967801	Parameter	const void * obj	2770:43:87751:87765	4967333	1	True				
ANR	4967802	ParameterType	const void *		4967333	0					
ANR	4967803	Identifier	obj		4967333	1					
ANR	4967804	Parameter	const dump_control_t * control	2770:60:87768:87797	4967333	2	True				
ANR	4967805	ParameterType	const dump_control_t *		4967333	0					
ANR	4967806	Identifier	control		4967333	1					
ANR	4967807	CFGEntryNode	ENTRY		4967333		True				
ANR	4967808	CFGExitNode	EXIT		4967333		True				
ANR	4967809	Symbol	str -> size		4967333						
ANR	4967810	Symbol	dump_do_type_addresses		4967333						
ANR	4967811	Symbol	type -> enum_ptrs		4967333						
ANR	4967812	Symbol	eptr		4967333						
ANR	4967813	Symbol	& st_free		4967333						
ANR	4967814	Symbol	ptype		4967333						
ANR	4967815	Symbol	dump_do_pointed_strings		4967333						
ANR	4967816	Symbol	type		4967333						
ANR	4967817	Symbol	* pre		4967333						
ANR	4967818	Symbol	str -> data		4967333						
ANR	4967819	Symbol	mem		4967333						
ANR	4967820	Symbol	struct_proc_enum_ptrs		4967333						
ANR	4967821	Symbol	* type		4967333						
ANR	4967822	Symbol	pre -> o_type		4967333						
ANR	4967823	Symbol	options		4967333						
ANR	4967824	Symbol	PTR_BETWEEN		4967333						
ANR	4967825	Symbol	ptr_const_string_type		4967333						
ANR	4967826	Symbol	* str		4967333						
ANR	4967827	Symbol	pre_obj_contents_size		4967333						
ANR	4967828	Symbol	pre		4967333						
ANR	4967829	Symbol	struct_type_name_string		4967333						
ANR	4967830	Symbol	proc		4967333						
ANR	4967831	Symbol	NULL		4967333						
ANR	4967832	Symbol	dump_do_marks		4967333						
ANR	4967833	Symbol	false		4967333						
ANR	4967834	Symbol	index		4967333						
ANR	4967835	Symbol	& eptr		4967333						
ANR	4967836	Symbol	eptr . ptr		4967333						
ANR	4967837	Symbol	control		4967333						
ANR	4967838	Symbol	ptr_string_type		4967333						
ANR	4967839	Symbol	gs_no_struct_enum_ptrs		4967333						
ANR	4967840	Symbol	* proc		4967333						
ANR	4967841	Symbol	ptr		4967333						
ANR	4967842	Symbol	* control		4967333						
ANR	4967843	Symbol	str		4967333						
ANR	4967844	Symbol	dump_do_contents		4967333						
ANR	4967845	Symbol	size		4967333						
ANR	4967846	Symbol	dump_do_no_types		4967333						
ANR	4967847	Symbol	dump_do_pointers		4967333						
ANR	4967848	Symbol	obj		4967333						
ANR	4967849	Symbol	pre -> o_smark		4967333						
ANR	4967850	Symbol	true		4967333						
ANR	4967851	Symbol	control -> options		4967333						
ANR	4967852	Function	debug_dump_clump	2846:0:90873:92558							
ANR	4967853	FunctionDef	"debug_dump_clump (const gs_memory_t * mem , const clump_t * cp , const dump_control_t * control)"		4967852	0					
ANR	4967854	CompoundStatement		2848:0:90971:92558	4967852	0					
ANR	4967855	ExpressionStatement	"dmprintf1 ( mem , ""clump at 0x%lx:\\n"" , ( ulong ) cp )"	2849:4:90977:91024	4967852	0	True				
ANR	4967856	CallExpression	"dmprintf1 ( mem , ""clump at 0x%lx:\\n"" , ( ulong ) cp )"		4967852	0					
ANR	4967857	Callee	dmprintf1		4967852	0					
ANR	4967858	Identifier	dmprintf1		4967852	0					
ANR	4967859	ArgumentList	mem		4967852	1					
ANR	4967860	Argument	mem		4967852	0					
ANR	4967861	Identifier	mem		4967852	0					
ANR	4967862	Argument	"""clump at 0x%lx:\\n"""		4967852	1					
ANR	4967863	PrimaryExpression	"""clump at 0x%lx:\\n"""		4967852	0					
ANR	4967864	Argument	( ulong ) cp		4967852	2					
ANR	4967865	CastExpression	( ulong ) cp		4967852	0					
ANR	4967866	CastTarget	ulong		4967852	0					
ANR	4967867	Identifier	cp		4967852	1					
ANR	4967868	ExpressionStatement	"dmprintf3 ( mem , ""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"" , ( ulong ) cp -> chead , ( ulong ) cp -> cbase , ( ulong ) cp -> sbase )"	2850:4:91030:91160	4967852	1	True				
ANR	4967869	CallExpression	"dmprintf3 ( mem , ""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"" , ( ulong ) cp -> chead , ( ulong ) cp -> cbase , ( ulong ) cp -> sbase )"		4967852	0					
ANR	4967870	Callee	dmprintf3		4967852	0					
ANR	4967871	Identifier	dmprintf3		4967852	0					
ANR	4967872	ArgumentList	mem		4967852	1					
ANR	4967873	Argument	mem		4967852	0					
ANR	4967874	Identifier	mem		4967852	0					
ANR	4967875	Argument	"""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"""		4967852	1					
ANR	4967876	PrimaryExpression	"""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"""		4967852	0					
ANR	4967877	Argument	( ulong ) cp -> chead		4967852	2					
ANR	4967878	CastExpression	( ulong ) cp -> chead		4967852	0					
ANR	4967879	CastTarget	ulong		4967852	0					
ANR	4967880	PtrMemberAccess	cp -> chead		4967852	1					
ANR	4967881	Identifier	cp		4967852	0					
ANR	4967882	Identifier	chead		4967852	1					
ANR	4967883	Argument	( ulong ) cp -> cbase		4967852	3					
ANR	4967884	CastExpression	( ulong ) cp -> cbase		4967852	0					
ANR	4967885	CastTarget	ulong		4967852	0					
ANR	4967886	PtrMemberAccess	cp -> cbase		4967852	1					
ANR	4967887	Identifier	cp		4967852	0					
ANR	4967888	Identifier	cbase		4967852	1					
ANR	4967889	Argument	( ulong ) cp -> sbase		4967852	4					
ANR	4967890	CastExpression	( ulong ) cp -> sbase		4967852	0					
ANR	4967891	CastTarget	ulong		4967852	0					
ANR	4967892	PtrMemberAccess	cp -> sbase		4967852	1					
ANR	4967893	Identifier	cp		4967852	0					
ANR	4967894	Identifier	sbase		4967852	1					
ANR	4967895	ExpressionStatement	"dmprintf3 ( mem , ""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"" , ( ulong ) cp -> rcur , ( ulong ) cp -> rtop , ( ulong ) cp -> cbot )"	2852:4:91166:91293	4967852	2	True				
ANR	4967896	CallExpression	"dmprintf3 ( mem , ""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"" , ( ulong ) cp -> rcur , ( ulong ) cp -> rtop , ( ulong ) cp -> cbot )"		4967852	0					
ANR	4967897	Callee	dmprintf3		4967852	0					
ANR	4967898	Identifier	dmprintf3		4967852	0					
ANR	4967899	ArgumentList	mem		4967852	1					
ANR	4967900	Argument	mem		4967852	0					
ANR	4967901	Identifier	mem		4967852	0					
ANR	4967902	Argument	"""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"""		4967852	1					
ANR	4967903	PrimaryExpression	"""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"""		4967852	0					
ANR	4967904	Argument	( ulong ) cp -> rcur		4967852	2					
ANR	4967905	CastExpression	( ulong ) cp -> rcur		4967852	0					
ANR	4967906	CastTarget	ulong		4967852	0					
ANR	4967907	PtrMemberAccess	cp -> rcur		4967852	1					
ANR	4967908	Identifier	cp		4967852	0					
ANR	4967909	Identifier	rcur		4967852	1					
ANR	4967910	Argument	( ulong ) cp -> rtop		4967852	3					
ANR	4967911	CastExpression	( ulong ) cp -> rtop		4967852	0					
ANR	4967912	CastTarget	ulong		4967852	0					
ANR	4967913	PtrMemberAccess	cp -> rtop		4967852	1					
ANR	4967914	Identifier	cp		4967852	0					
ANR	4967915	Identifier	rtop		4967852	1					
ANR	4967916	Argument	( ulong ) cp -> cbot		4967852	4					
ANR	4967917	CastExpression	( ulong ) cp -> cbot		4967852	0					
ANR	4967918	CastTarget	ulong		4967852	0					
ANR	4967919	PtrMemberAccess	cp -> cbot		4967852	1					
ANR	4967920	Identifier	cp		4967852	0					
ANR	4967921	Identifier	cbot		4967852	1					
ANR	4967922	ExpressionStatement	"dmprintf4 ( mem , ""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"" , ( ulong ) cp -> ctop , ( ulong ) cp -> climit , ( ulong ) cp -> smark , cp -> smark_size )"	2854:4:91299:91468	4967852	3	True				
ANR	4967923	CallExpression	"dmprintf4 ( mem , ""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"" , ( ulong ) cp -> ctop , ( ulong ) cp -> climit , ( ulong ) cp -> smark , cp -> smark_size )"		4967852	0					
ANR	4967924	Callee	dmprintf4		4967852	0					
ANR	4967925	Identifier	dmprintf4		4967852	0					
ANR	4967926	ArgumentList	mem		4967852	1					
ANR	4967927	Argument	mem		4967852	0					
ANR	4967928	Identifier	mem		4967852	0					
ANR	4967929	Argument	"""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"""		4967852	1					
ANR	4967930	PrimaryExpression	"""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"""		4967852	0					
ANR	4967931	Argument	( ulong ) cp -> ctop		4967852	2					
ANR	4967932	CastExpression	( ulong ) cp -> ctop		4967852	0					
ANR	4967933	CastTarget	ulong		4967852	0					
ANR	4967934	PtrMemberAccess	cp -> ctop		4967852	1					
ANR	4967935	Identifier	cp		4967852	0					
ANR	4967936	Identifier	ctop		4967852	1					
ANR	4967937	Argument	( ulong ) cp -> climit		4967852	3					
ANR	4967938	CastExpression	( ulong ) cp -> climit		4967852	0					
ANR	4967939	CastTarget	ulong		4967852	0					
ANR	4967940	PtrMemberAccess	cp -> climit		4967852	1					
ANR	4967941	Identifier	cp		4967852	0					
ANR	4967942	Identifier	climit		4967852	1					
ANR	4967943	Argument	( ulong ) cp -> smark		4967852	4					
ANR	4967944	CastExpression	( ulong ) cp -> smark		4967852	0					
ANR	4967945	CastTarget	ulong		4967852	0					
ANR	4967946	PtrMemberAccess	cp -> smark		4967852	1					
ANR	4967947	Identifier	cp		4967852	0					
ANR	4967948	Identifier	smark		4967852	1					
ANR	4967949	Argument	cp -> smark_size		4967852	5					
ANR	4967950	PtrMemberAccess	cp -> smark_size		4967852	0					
ANR	4967951	Identifier	cp		4967852	0					
ANR	4967952	Identifier	smark_size		4967852	1					
ANR	4967953	ExpressionStatement	"dmprintf2 ( mem , ""  sreloc=0x%lx   cend=0x%lx\\n"" , ( ulong ) cp -> sreloc , ( ulong ) cp -> cend )"	2857:4:91474:91573	4967852	4	True				
ANR	4967954	CallExpression	"dmprintf2 ( mem , ""  sreloc=0x%lx   cend=0x%lx\\n"" , ( ulong ) cp -> sreloc , ( ulong ) cp -> cend )"		4967852	0					
ANR	4967955	Callee	dmprintf2		4967852	0					
ANR	4967956	Identifier	dmprintf2		4967852	0					
ANR	4967957	ArgumentList	mem		4967852	1					
ANR	4967958	Argument	mem		4967852	0					
ANR	4967959	Identifier	mem		4967852	0					
ANR	4967960	Argument	"""  sreloc=0x%lx   cend=0x%lx\\n"""		4967852	1					
ANR	4967961	PrimaryExpression	"""  sreloc=0x%lx   cend=0x%lx\\n"""		4967852	0					
ANR	4967962	Argument	( ulong ) cp -> sreloc		4967852	2					
ANR	4967963	CastExpression	( ulong ) cp -> sreloc		4967852	0					
ANR	4967964	CastTarget	ulong		4967852	0					
ANR	4967965	PtrMemberAccess	cp -> sreloc		4967852	1					
ANR	4967966	Identifier	cp		4967852	0					
ANR	4967967	Identifier	sreloc		4967852	1					
ANR	4967968	Argument	( ulong ) cp -> cend		4967852	3					
ANR	4967969	CastExpression	( ulong ) cp -> cend		4967852	0					
ANR	4967970	CastTarget	ulong		4967852	0					
ANR	4967971	PtrMemberAccess	cp -> cend		4967852	1					
ANR	4967972	Identifier	cp		4967852	0					
ANR	4967973	Identifier	cend		4967852	1					
ANR	4967974	ExpressionStatement	"dmprintf6 ( mem , ""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"" , ( ulong ) cp -> left , ( ulong ) cp -> right , ( ulong ) cp -> parent , ( ulong ) cp -> outer , cp -> inner_count , ( cp -> has_refs ? ""true"" : ""false"" ) )"	2859:4:91579:91829	4967852	5	True				
ANR	4967975	CallExpression	"dmprintf6 ( mem , ""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"" , ( ulong ) cp -> left , ( ulong ) cp -> right , ( ulong ) cp -> parent , ( ulong ) cp -> outer , cp -> inner_count , ( cp -> has_refs ? ""true"" : ""false"" ) )"		4967852	0					
ANR	4967976	Callee	dmprintf6		4967852	0					
ANR	4967977	Identifier	dmprintf6		4967852	0					
ANR	4967978	ArgumentList	mem		4967852	1					
ANR	4967979	Argument	mem		4967852	0					
ANR	4967980	Identifier	mem		4967852	0					
ANR	4967981	Argument	"""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"""		4967852	1					
ANR	4967982	PrimaryExpression	"""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"""		4967852	0					
ANR	4967983	Argument	( ulong ) cp -> left		4967852	2					
ANR	4967984	CastExpression	( ulong ) cp -> left		4967852	0					
ANR	4967985	CastTarget	ulong		4967852	0					
ANR	4967986	PtrMemberAccess	cp -> left		4967852	1					
ANR	4967987	Identifier	cp		4967852	0					
ANR	4967988	Identifier	left		4967852	1					
ANR	4967989	Argument	( ulong ) cp -> right		4967852	3					
ANR	4967990	CastExpression	( ulong ) cp -> right		4967852	0					
ANR	4967991	CastTarget	ulong		4967852	0					
ANR	4967992	PtrMemberAccess	cp -> right		4967852	1					
ANR	4967993	Identifier	cp		4967852	0					
ANR	4967994	Identifier	right		4967852	1					
ANR	4967995	Argument	( ulong ) cp -> parent		4967852	4					
ANR	4967996	CastExpression	( ulong ) cp -> parent		4967852	0					
ANR	4967997	CastTarget	ulong		4967852	0					
ANR	4967998	PtrMemberAccess	cp -> parent		4967852	1					
ANR	4967999	Identifier	cp		4967852	0					
ANR	4968000	Identifier	parent		4967852	1					
ANR	4968001	Argument	( ulong ) cp -> outer		4967852	5					
ANR	4968002	CastExpression	( ulong ) cp -> outer		4967852	0					
ANR	4968003	CastTarget	ulong		4967852	0					
ANR	4968004	PtrMemberAccess	cp -> outer		4967852	1					
ANR	4968005	Identifier	cp		4967852	0					
ANR	4968006	Identifier	outer		4967852	1					
ANR	4968007	Argument	cp -> inner_count		4967852	6					
ANR	4968008	PtrMemberAccess	cp -> inner_count		4967852	0					
ANR	4968009	Identifier	cp		4967852	0					
ANR	4968010	Identifier	inner_count		4967852	1					
ANR	4968011	Argument	"cp -> has_refs ? ""true"" : ""false"""		4967852	7					
ANR	4968012	ConditionalExpression	"cp -> has_refs ? ""true"" : ""false"""		4967852	0					
ANR	4968013	Condition	cp -> has_refs		4967852	0					
ANR	4968014	PtrMemberAccess	cp -> has_refs		4967852	0					
ANR	4968015	Identifier	cp		4967852	0					
ANR	4968016	Identifier	has_refs		4967852	1					
ANR	4968017	PrimaryExpression	"""true"""		4967852	1					
ANR	4968018	PrimaryExpression	"""false"""		4967852	2					
ANR	4968019	ExpressionStatement	"dmprintf2 ( mem , ""  sfree1=0x%lx   sfree=0x%x\\n"" , ( ulong ) cp -> sfree1 , cp -> sfree )"	2863:4:91836:91928	4967852	6	True				
ANR	4968020	CallExpression	"dmprintf2 ( mem , ""  sfree1=0x%lx   sfree=0x%x\\n"" , ( ulong ) cp -> sfree1 , cp -> sfree )"		4967852	0					
ANR	4968021	Callee	dmprintf2		4967852	0					
ANR	4968022	Identifier	dmprintf2		4967852	0					
ANR	4968023	ArgumentList	mem		4967852	1					
ANR	4968024	Argument	mem		4967852	0					
ANR	4968025	Identifier	mem		4967852	0					
ANR	4968026	Argument	"""  sfree1=0x%lx   sfree=0x%x\\n"""		4967852	1					
ANR	4968027	PrimaryExpression	"""  sfree1=0x%lx   sfree=0x%x\\n"""		4967852	0					
ANR	4968028	Argument	( ulong ) cp -> sfree1		4967852	2					
ANR	4968029	CastExpression	( ulong ) cp -> sfree1		4967852	0					
ANR	4968030	CastTarget	ulong		4967852	0					
ANR	4968031	PtrMemberAccess	cp -> sfree1		4967852	1					
ANR	4968032	Identifier	cp		4967852	0					
ANR	4968033	Identifier	sfree1		4967852	1					
ANR	4968034	Argument	cp -> sfree		4967852	3					
ANR	4968035	PtrMemberAccess	cp -> sfree		4967852	0					
ANR	4968036	Identifier	cp		4967852	0					
ANR	4968037	Identifier	sfree		4967852	1					
ANR	4968038	IfStatement	if ( control -> options & dump_do_strings )		4967852	7					
ANR	4968039	Condition	control -> options & dump_do_strings	2865:8:91938:91971	4967852	0	True				
ANR	4968040	BitAndExpression	control -> options & dump_do_strings		4967852	0		&			
ANR	4968041	PtrMemberAccess	control -> options		4967852	0					
ANR	4968042	Identifier	control		4967852	0					
ANR	4968043	Identifier	options		4967852	1					
ANR	4968044	Identifier	dump_do_strings		4967852	1					
ANR	4968045	CompoundStatement		18:44:1002:1002	4967852	1					
ANR	4968046	ExpressionStatement	"debug_dump_contents ( mem , ( control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop ) ) , ( control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit ) ) , 0 , true )"	2866:8:91984:92265	4967852	0	True				
ANR	4968047	CallExpression	"debug_dump_contents ( mem , ( control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop ) ) , ( control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit ) ) , 0 , true )"		4967852	0					
ANR	4968048	Callee	debug_dump_contents		4967852	0					
ANR	4968049	Identifier	debug_dump_contents		4967852	0					
ANR	4968050	ArgumentList	mem		4967852	1					
ANR	4968051	Argument	mem		4967852	0					
ANR	4968052	Identifier	mem		4967852	0					
ANR	4968053	Argument	"control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop )"		4967852	1					
ANR	4968054	ConditionalExpression	"control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop )"		4967852	0					
ANR	4968055	Condition	control -> bottom == 0		4967852	0					
ANR	4968056	EqualityExpression	control -> bottom == 0		4967852	0		==			
ANR	4968057	PtrMemberAccess	control -> bottom		4967852	0					
ANR	4968058	Identifier	control		4967852	0					
ANR	4968059	Identifier	bottom		4967852	1					
ANR	4968060	PrimaryExpression	0		4967852	1					
ANR	4968061	PtrMemberAccess	cp -> ctop		4967852	1					
ANR	4968062	Identifier	cp		4967852	0					
ANR	4968063	Identifier	ctop		4967852	1					
ANR	4968064	CallExpression	"max ( control -> bottom , cp -> ctop )"		4967852	2					
ANR	4968065	Callee	max		4967852	0					
ANR	4968066	Identifier	max		4967852	0					
ANR	4968067	ArgumentList	control -> bottom		4967852	1					
ANR	4968068	Argument	control -> bottom		4967852	0					
ANR	4968069	PtrMemberAccess	control -> bottom		4967852	0					
ANR	4968070	Identifier	control		4967852	0					
ANR	4968071	Identifier	bottom		4967852	1					
ANR	4968072	Argument	cp -> ctop		4967852	1					
ANR	4968073	PtrMemberAccess	cp -> ctop		4967852	0					
ANR	4968074	Identifier	cp		4967852	0					
ANR	4968075	Identifier	ctop		4967852	1					
ANR	4968076	Argument	"control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit )"		4967852	2					
ANR	4968077	ConditionalExpression	"control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit )"		4967852	0					
ANR	4968078	Condition	control -> top == 0		4967852	0					
ANR	4968079	EqualityExpression	control -> top == 0		4967852	0		==			
ANR	4968080	PtrMemberAccess	control -> top		4967852	0					
ANR	4968081	Identifier	control		4967852	0					
ANR	4968082	Identifier	top		4967852	1					
ANR	4968083	PrimaryExpression	0		4967852	1					
ANR	4968084	PtrMemberAccess	cp -> climit		4967852	1					
ANR	4968085	Identifier	cp		4967852	0					
ANR	4968086	Identifier	climit		4967852	1					
ANR	4968087	CallExpression	"min ( control -> top , cp -> climit )"		4967852	2					
ANR	4968088	Callee	min		4967852	0					
ANR	4968089	Identifier	min		4967852	0					
ANR	4968090	ArgumentList	control -> top		4967852	1					
ANR	4968091	Argument	control -> top		4967852	0					
ANR	4968092	PtrMemberAccess	control -> top		4967852	0					
ANR	4968093	Identifier	control		4967852	0					
ANR	4968094	Identifier	top		4967852	1					
ANR	4968095	Argument	cp -> climit		4967852	1					
ANR	4968096	PtrMemberAccess	cp -> climit		4967852	0					
ANR	4968097	Identifier	cp		4967852	0					
ANR	4968098	Identifier	climit		4967852	1					
ANR	4968099	Argument	0		4967852	3					
ANR	4968100	PrimaryExpression	0		4967852	0					
ANR	4968101	Argument	true		4967852	4					
ANR	4968102	Identifier	true		4967852	0					
ANR	4968103	Statement	SCAN_CLUMP_OBJECTS	2872:4:92277:92294	4967852	8	True				
ANR	4968104	Statement	(	2872:22:92295:92295	4967852	9	True				
ANR	4968105	Statement	cp	2872:23:92296:92297	4967852	10	True				
ANR	4968106	Statement	)	2872:25:92298:92298	4967852	11	True				
ANR	4968107	Statement	DO_ALL	2873:8:92308:92313	4967852	12	True				
ANR	4968108	IfStatement	"if ( obj_in_control_region ( pre + 1 , ( const byte * ) ( pre + 1 ) + size , control ) )"		4967852	13					
ANR	4968109	Condition	"obj_in_control_region ( pre + 1 , ( const byte * ) ( pre + 1 ) + size , control )"	2874:12:92327:92465	4967852	0	True				
ANR	4968110	CallExpression	"obj_in_control_region ( pre + 1 , ( const byte * ) ( pre + 1 ) + size , control )"		4967852	0					
ANR	4968111	Callee	obj_in_control_region		4967852	0					
ANR	4968112	Identifier	obj_in_control_region		4967852	0					
ANR	4968113	ArgumentList	pre + 1		4967852	1					
ANR	4968114	Argument	pre + 1		4967852	0					
ANR	4968115	AdditiveExpression	pre + 1		4967852	0		+			
ANR	4968116	Identifier	pre		4967852	0					
ANR	4968117	PrimaryExpression	1		4967852	1					
ANR	4968118	Argument	( const byte * ) ( pre + 1 ) + size		4967852	1					
ANR	4968119	AdditiveExpression	( const byte * ) ( pre + 1 ) + size		4967852	0		+			
ANR	4968120	CastExpression	( const byte * ) ( pre + 1 )		4967852	0					
ANR	4968121	CastTarget	const byte *		4967852	0					
ANR	4968122	AdditiveExpression	pre + 1		4967852	1		+			
ANR	4968123	Identifier	pre		4967852	0					
ANR	4968124	PrimaryExpression	1		4967852	1					
ANR	4968125	Identifier	size		4967852	1					
ANR	4968126	Argument	control		4967852	2					
ANR	4968127	Identifier	control		4967852	0					
ANR	4968128	ExpressionStatement	"debug_print_object ( mem , pre + 1 , control )"	2878:8:92485:92526	4967852	1	True				
ANR	4968129	CallExpression	"debug_print_object ( mem , pre + 1 , control )"		4967852	0					
ANR	4968130	Callee	debug_print_object		4967852	0					
ANR	4968131	Identifier	debug_print_object		4967852	0					
ANR	4968132	ArgumentList	mem		4967852	1					
ANR	4968133	Argument	mem		4967852	0					
ANR	4968134	Identifier	mem		4967852	0					
ANR	4968135	Argument	pre + 1		4967852	1					
ANR	4968136	AdditiveExpression	pre + 1		4967852	0		+			
ANR	4968137	Identifier	pre		4967852	0					
ANR	4968138	PrimaryExpression	1		4967852	1					
ANR	4968139	Argument	control		4967852	2					
ANR	4968140	Identifier	control		4967852	0					
ANR	4968141	Statement	END_OBJECTS_SCAN_NO_ABORT	2879:4:92532:92556	4967852	14	True				
ANR	4968142	ReturnType	void		4967852	1					
ANR	4968143	Identifier	debug_dump_clump		4967852	2					
ANR	4968144	ParameterList	"const gs_memory_t * mem , const clump_t * cp , const dump_control_t * control"		4967852	3					
ANR	4968145	Parameter	const gs_memory_t * mem	2847:17:90895:90916	4967852	0	True				
ANR	4968146	ParameterType	const gs_memory_t *		4967852	0					
ANR	4968147	Identifier	mem		4967852	1					
ANR	4968148	Parameter	const clump_t * cp	2847:41:90919:90936	4967852	1	True				
ANR	4968149	ParameterType	const clump_t *		4967852	0					
ANR	4968150	Identifier	cp		4967852	1					
ANR	4968151	Parameter	const dump_control_t * control	2847:61:90939:90968	4967852	2	True				
ANR	4968152	ParameterType	const dump_control_t *		4967852	0					
ANR	4968153	Identifier	control		4967852	1					
ANR	4968154	CFGEntryNode	ENTRY		4967852		True				
ANR	4968155	CFGExitNode	EXIT		4967852		True				
ANR	4968156	Symbol	cp -> rtop		4967852						
ANR	4968157	Symbol	cp -> cend		4967852						
ANR	4968158	Symbol	cp -> inner_count		4967852						
ANR	4968159	Symbol	cp -> right		4967852						
ANR	4968160	Symbol	cp -> sreloc		4967852						
ANR	4968161	Symbol	dump_do_strings		4967852						
ANR	4968162	Symbol	cp -> climit		4967852						
ANR	4968163	Symbol	cp -> rcur		4967852						
ANR	4968164	Symbol	cp -> chead		4967852						
ANR	4968165	Symbol	control -> bottom		4967852						
ANR	4968166	Symbol	cp -> cbot		4967852						
ANR	4968167	Symbol	min		4967852						
ANR	4968168	Symbol	mem		4967852						
ANR	4968169	Symbol	cp -> left		4967852						
ANR	4968170	Symbol	cp -> sfree		4967852						
ANR	4968171	Symbol	cp -> sfree1		4967852						
ANR	4968172	Symbol	cp -> has_refs		4967852						
ANR	4968173	Symbol	cp -> ctop		4967852						
ANR	4968174	Symbol	pre		4967852						
ANR	4968175	Symbol	max		4967852						
ANR	4968176	Symbol	control		4967852						
ANR	4968177	Symbol	cp -> cbase		4967852						
ANR	4968178	Symbol	cp		4967852						
ANR	4968179	Symbol	* cp		4967852						
ANR	4968180	Symbol	* control		4967852						
ANR	4968181	Symbol	cp -> parent		4967852						
ANR	4968182	Symbol	size		4967852						
ANR	4968183	Symbol	obj_in_control_region		4967852						
ANR	4968184	Symbol	true		4967852						
ANR	4968185	Symbol	cp -> smark_size		4967852						
ANR	4968186	Symbol	cp -> outer		4967852						
ANR	4968187	Symbol	control -> options		4967852						
ANR	4968188	Symbol	control -> top		4967852						
ANR	4968189	Symbol	cp -> sbase		4967852						
ANR	4968190	Symbol	cp -> smark		4967852						
ANR	4968191	Function	debug_print_clump	2881:0:92560:92735							
ANR	4968192	FunctionDef	"debug_print_clump (const gs_memory_t * mem , const clump_t * cp)"		4968191	0					
ANR	4968193	CompoundStatement		2883:0:92627:92735	4968191	0					
ANR	4968194	IdentifierDeclStatement	dump_control_t control ;	2884:4:92633:92655	4968191	0	True				
ANR	4968195	IdentifierDecl	control		4968191	0					
ANR	4968196	IdentifierDeclType	dump_control_t		4968191	0					
ANR	4968197	Identifier	control		4968191	1					
ANR	4968198	ExpressionStatement	control = dump_control_default	2886:4:92662:92692	4968191	1	True				
ANR	4968199	AssignmentExpression	control = dump_control_default		4968191	0		=			
ANR	4968200	Identifier	control		4968191	0					
ANR	4968201	Identifier	dump_control_default		4968191	1					
ANR	4968202	ExpressionStatement	"debug_dump_clump ( mem , cp , & control )"	2887:4:92698:92733	4968191	2	True				
ANR	4968203	CallExpression	"debug_dump_clump ( mem , cp , & control )"		4968191	0					
ANR	4968204	Callee	debug_dump_clump		4968191	0					
ANR	4968205	Identifier	debug_dump_clump		4968191	0					
ANR	4968206	ArgumentList	mem		4968191	1					
ANR	4968207	Argument	mem		4968191	0					
ANR	4968208	Identifier	mem		4968191	0					
ANR	4968209	Argument	cp		4968191	1					
ANR	4968210	Identifier	cp		4968191	0					
ANR	4968211	Argument	& control		4968191	2					
ANR	4968212	UnaryOperationExpression	& control		4968191	0					
ANR	4968213	UnaryOperator	&		4968191	0					
ANR	4968214	Identifier	control		4968191	1					
ANR	4968215	ReturnType	void		4968191	1					
ANR	4968216	Identifier	debug_print_clump		4968191	2					
ANR	4968217	ParameterList	"const gs_memory_t * mem , const clump_t * cp"		4968191	3					
ANR	4968218	Parameter	const gs_memory_t * mem	2882:18:92583:92604	4968191	0	True				
ANR	4968219	ParameterType	const gs_memory_t *		4968191	0					
ANR	4968220	Identifier	mem		4968191	1					
ANR	4968221	Parameter	const clump_t * cp	2882:42:92607:92624	4968191	1	True				
ANR	4968222	ParameterType	const clump_t *		4968191	0					
ANR	4968223	Identifier	cp		4968191	1					
ANR	4968224	CFGEntryNode	ENTRY		4968191		True				
ANR	4968225	CFGExitNode	EXIT		4968191		True				
ANR	4968226	Symbol	mem		4968191						
ANR	4968227	Symbol	& control		4968191						
ANR	4968228	Symbol	control		4968191						
ANR	4968229	Symbol	dump_control_default		4968191						
ANR	4968230	Symbol	cp		4968191						
ANR	4968231	Function	debug_dump_memory	2892:0:92831:93205							
ANR	4968232	FunctionDef	"debug_dump_memory (const gs_ref_memory_t * mem , const dump_control_t * control)"		4968231	0					
ANR	4968233	CompoundStatement		2894:0:92915:93205	4968231	0					
ANR	4968234	IdentifierDeclStatement	const clump_t * cp ;	2895:4:92921:92938	4968231	0	True				
ANR	4968235	IdentifierDecl	* cp		4968231	0					
ANR	4968236	IdentifierDeclType	const clump_t *		4968231	0					
ANR	4968237	Identifier	cp		4968231	1					
ANR	4968238	IdentifierDeclStatement	clump_splay_walker sw ;	2896:4:92944:92965	4968231	1	True				
ANR	4968239	IdentifierDecl	sw		4968231	0					
ANR	4968240	IdentifierDeclType	clump_splay_walker		4968231	0					
ANR	4968241	Identifier	sw		4968231	1					
ANR	4968242	ForStatement	"for ( cp = clump_splay_walk_init ( & sw , mem ) ; cp != NULL ; cp = clump_splay_walk_fwd ( & sw ) )"		4968231	2					
ANR	4968243	ForInit	"cp = clump_splay_walk_init ( & sw , mem ) ;"	2898:9:92977:93013	4968231	0	True				
ANR	4968244	AssignmentExpression	"cp = clump_splay_walk_init ( & sw , mem )"		4968231	0		=			
ANR	4968245	Identifier	cp		4968231	0					
ANR	4968246	CallExpression	"clump_splay_walk_init ( & sw , mem )"		4968231	1					
ANR	4968247	Callee	clump_splay_walk_init		4968231	0					
ANR	4968248	Identifier	clump_splay_walk_init		4968231	0					
ANR	4968249	ArgumentList	& sw		4968231	1					
ANR	4968250	Argument	& sw		4968231	0					
ANR	4968251	UnaryOperationExpression	& sw		4968231	0					
ANR	4968252	UnaryOperator	&		4968231	0					
ANR	4968253	Identifier	sw		4968231	1					
ANR	4968254	Argument	mem		4968231	1					
ANR	4968255	Identifier	mem		4968231	0					
ANR	4968256	Condition	cp != NULL	2898:47:93015:93024	4968231	1	True				
ANR	4968257	EqualityExpression	cp != NULL		4968231	0		!=			
ANR	4968258	Identifier	cp		4968231	0					
ANR	4968259	Identifier	NULL		4968231	1					
ANR	4968260	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	2898:59:93027:93056	4968231	2	True	=			
ANR	4968261	Identifier	cp		4968231	0					
ANR	4968262	CallExpression	clump_splay_walk_fwd ( & sw )		4968231	1					
ANR	4968263	Callee	clump_splay_walk_fwd		4968231	0					
ANR	4968264	Identifier	clump_splay_walk_fwd		4968231	0					
ANR	4968265	ArgumentList	& sw		4968231	1					
ANR	4968266	Argument	& sw		4968231	0					
ANR	4968267	UnaryOperationExpression	& sw		4968231	0					
ANR	4968268	UnaryOperator	&		4968231	0					
ANR	4968269	Identifier	sw		4968231	1					
ANR	4968270	CompoundStatement		6:4:147:147	4968231	3					
ANR	4968271	IfStatement	"if ( obj_in_control_region ( cp -> cbase , cp -> cend , control ) )"		4968231	0					
ANR	4968272	Condition	"obj_in_control_region ( cp -> cbase , cp -> cend , control )"	2900:12:93077:93127	4968231	0	True				
ANR	4968273	CallExpression	"obj_in_control_region ( cp -> cbase , cp -> cend , control )"		4968231	0					
ANR	4968274	Callee	obj_in_control_region		4968231	0					
ANR	4968275	Identifier	obj_in_control_region		4968231	0					
ANR	4968276	ArgumentList	cp -> cbase		4968231	1					
ANR	4968277	Argument	cp -> cbase		4968231	0					
ANR	4968278	PtrMemberAccess	cp -> cbase		4968231	0					
ANR	4968279	Identifier	cp		4968231	0					
ANR	4968280	Identifier	cbase		4968231	1					
ANR	4968281	Argument	cp -> cend		4968231	1					
ANR	4968282	PtrMemberAccess	cp -> cend		4968231	0					
ANR	4968283	Identifier	cp		4968231	0					
ANR	4968284	Identifier	cend		4968231	1					
ANR	4968285	Argument	control		4968231	2					
ANR	4968286	Identifier	control		4968231	0					
ANR	4968287	ExpressionStatement	"debug_dump_clump ( ( const gs_memory_t * ) mem , cp , control )"	2901:12:93142:93197	4968231	1	True				
ANR	4968288	CallExpression	"debug_dump_clump ( ( const gs_memory_t * ) mem , cp , control )"		4968231	0					
ANR	4968289	Callee	debug_dump_clump		4968231	0					
ANR	4968290	Identifier	debug_dump_clump		4968231	0					
ANR	4968291	ArgumentList	( const gs_memory_t * ) mem		4968231	1					
ANR	4968292	Argument	( const gs_memory_t * ) mem		4968231	0					
ANR	4968293	CastExpression	( const gs_memory_t * ) mem		4968231	0					
ANR	4968294	CastTarget	const gs_memory_t *		4968231	0					
ANR	4968295	Identifier	mem		4968231	1					
ANR	4968296	Argument	cp		4968231	1					
ANR	4968297	Identifier	cp		4968231	0					
ANR	4968298	Argument	control		4968231	2					
ANR	4968299	Identifier	control		4968231	0					
ANR	4968300	ReturnType	void		4968231	1					
ANR	4968301	Identifier	debug_dump_memory		4968231	2					
ANR	4968302	ParameterList	"const gs_ref_memory_t * mem , const dump_control_t * control"		4968231	3					
ANR	4968303	Parameter	const gs_ref_memory_t * mem	2893:18:92854:92880	4968231	0	True				
ANR	4968304	ParameterType	const gs_ref_memory_t *		4968231	0					
ANR	4968305	Identifier	mem		4968231	1					
ANR	4968306	Parameter	const dump_control_t * control	2893:47:92883:92912	4968231	1	True				
ANR	4968307	ParameterType	const dump_control_t *		4968231	0					
ANR	4968308	Identifier	control		4968231	1					
ANR	4968309	CFGEntryNode	ENTRY		4968231		True				
ANR	4968310	CFGExitNode	EXIT		4968231		True				
ANR	4968311	Symbol	* cp		4968231						
ANR	4968312	Symbol	NULL		4968231						
ANR	4968313	Symbol	mem		4968231						
ANR	4968314	Symbol	sw		4968231						
ANR	4968315	Symbol	obj_in_control_region		4968231						
ANR	4968316	Symbol	clump_splay_walk_init		4968231						
ANR	4968317	Symbol	clump_splay_walk_fwd		4968231						
ANR	4968318	Symbol	cp -> cend		4968231						
ANR	4968319	Symbol	control		4968231						
ANR	4968320	Symbol	cp -> cbase		4968231						
ANR	4968321	Symbol	cp		4968231						
ANR	4968322	Symbol	& sw		4968231						
ANR	4968323	Function	debug_dump_allocator	2905:0:93208:93319							
ANR	4968324	FunctionDef	debug_dump_allocator (const gs_ref_memory_t * mem)		4968323	0					
ANR	4968325	CompoundStatement		2907:0:93262:93319	4968323	0					
ANR	4968326	ExpressionStatement	"debug_dump_memory ( mem , & dump_control_no_contents )"	2908:4:93268:93317	4968323	0	True				
ANR	4968327	CallExpression	"debug_dump_memory ( mem , & dump_control_no_contents )"		4968323	0					
ANR	4968328	Callee	debug_dump_memory		4968323	0					
ANR	4968329	Identifier	debug_dump_memory		4968323	0					
ANR	4968330	ArgumentList	mem		4968323	1					
ANR	4968331	Argument	mem		4968323	0					
ANR	4968332	Identifier	mem		4968323	0					
ANR	4968333	Argument	& dump_control_no_contents		4968323	1					
ANR	4968334	UnaryOperationExpression	& dump_control_no_contents		4968323	0					
ANR	4968335	UnaryOperator	&		4968323	0					
ANR	4968336	Identifier	dump_control_no_contents		4968323	1					
ANR	4968337	ReturnType	void		4968323	1					
ANR	4968338	Identifier	debug_dump_allocator		4968323	2					
ANR	4968339	ParameterList	const gs_ref_memory_t * mem		4968323	3					
ANR	4968340	Parameter	const gs_ref_memory_t * mem	2906:21:93234:93259	4968323	0	True				
ANR	4968341	ParameterType	const gs_ref_memory_t *		4968323	0					
ANR	4968342	Identifier	mem		4968323	1					
ANR	4968343	CFGEntryNode	ENTRY		4968323		True				
ANR	4968344	CFGExitNode	EXIT		4968323		True				
ANR	4968345	Symbol	mem		4968323						
ANR	4968346	Symbol	& dump_control_no_contents		4968323						
ANR	4968347	Function	debug_find_pointers	2912:0:93379:94327							
ANR	4968348	FunctionDef	"debug_find_pointers (const gs_ref_memory_t * mem , const void * target)"		4968347	0					
ANR	4968349	CompoundStatement		2914:0:93452:94327	4968347	0					
ANR	4968350	IdentifierDeclStatement	clump_splay_walker sw ;	2915:4:93458:93479	4968347	0	True				
ANR	4968351	IdentifierDecl	sw		4968347	0					
ANR	4968352	IdentifierDeclType	clump_splay_walker		4968347	0					
ANR	4968353	Identifier	sw		4968347	1					
ANR	4968354	IdentifierDeclStatement	dump_control_t control ;	2916:4:93485:93507	4968347	1	True				
ANR	4968355	IdentifierDecl	control		4968347	0					
ANR	4968356	IdentifierDeclType	dump_control_t		4968347	0					
ANR	4968357	Identifier	control		4968347	1					
ANR	4968358	IdentifierDeclStatement	const clump_t * cp ;	2917:4:93513:93530	4968347	2	True				
ANR	4968359	IdentifierDecl	* cp		4968347	0					
ANR	4968360	IdentifierDeclType	const clump_t *		4968347	0					
ANR	4968361	Identifier	cp		4968347	1					
ANR	4968362	ExpressionStatement	control . options = 0	2919:4:93537:93556	4968347	3	True				
ANR	4968363	AssignmentExpression	control . options = 0		4968347	0		=			
ANR	4968364	MemberAccess	control . options		4968347	0					
ANR	4968365	Identifier	control		4968347	0					
ANR	4968366	Identifier	options		4968347	1					
ANR	4968367	PrimaryExpression	0		4968347	1					
ANR	4968368	ForStatement	"for ( cp = clump_splay_walk_init ( & sw , mem ) ; cp ; cp = clump_splay_walk_fwd ( & sw ) )"		4968347	4					
ANR	4968369	ForInit	"cp = clump_splay_walk_init ( & sw , mem ) ;"	2920:9:93567:93603	4968347	0	True				
ANR	4968370	AssignmentExpression	"cp = clump_splay_walk_init ( & sw , mem )"		4968347	0		=			
ANR	4968371	Identifier	cp		4968347	0					
ANR	4968372	CallExpression	"clump_splay_walk_init ( & sw , mem )"		4968347	1					
ANR	4968373	Callee	clump_splay_walk_init		4968347	0					
ANR	4968374	Identifier	clump_splay_walk_init		4968347	0					
ANR	4968375	ArgumentList	& sw		4968347	1					
ANR	4968376	Argument	& sw		4968347	0					
ANR	4968377	UnaryOperationExpression	& sw		4968347	0					
ANR	4968378	UnaryOperator	&		4968347	0					
ANR	4968379	Identifier	sw		4968347	1					
ANR	4968380	Argument	mem		4968347	1					
ANR	4968381	Identifier	mem		4968347	0					
ANR	4968382	Condition	cp	2920:47:93605:93606	4968347	1	True				
ANR	4968383	Identifier	cp		4968347	0					
ANR	4968384	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	2920:51:93609:93638	4968347	2	True	=			
ANR	4968385	Identifier	cp		4968347	0					
ANR	4968386	CallExpression	clump_splay_walk_fwd ( & sw )		4968347	1					
ANR	4968387	Callee	clump_splay_walk_fwd		4968347	0					
ANR	4968388	Identifier	clump_splay_walk_fwd		4968347	0					
ANR	4968389	ArgumentList	& sw		4968347	1					
ANR	4968390	Argument	& sw		4968347	0					
ANR	4968391	UnaryOperationExpression	& sw		4968347	0					
ANR	4968392	UnaryOperator	&		4968347	0					
ANR	4968393	Identifier	sw		4968347	1					
ANR	4968394	CompoundStatement		13:12:350:365	4968347	3					
ANR	4968395	ExpressionStatement	SCAN_CLUMP_OBJECTS ( cp )	2922:8:93655:93677	4968347	0	True				
ANR	4968396	CallExpression	SCAN_CLUMP_OBJECTS ( cp )		4968347	0					
ANR	4968397	Callee	SCAN_CLUMP_OBJECTS		4968347	0					
ANR	4968398	Identifier	SCAN_CLUMP_OBJECTS		4968347	0					
ANR	4968399	ArgumentList	cp		4968347	1					
ANR	4968400	Argument	cp		4968347	0					
ANR	4968401	Identifier	cp		4968347	0					
ANR	4968402	Statement	DO_ALL	2923:8:93687:93692	4968347	1	True				
ANR	4968403	ExpressionStatement	struct_proc_enum_ptrs ( ( * proc ) ) = pre -> o_type -> enum_ptrs	2924:12:93706:93761	4968347	2	True				
ANR	4968404	AssignmentExpression	struct_proc_enum_ptrs ( ( * proc ) ) = pre -> o_type -> enum_ptrs		4968347	0		=			
ANR	4968405	CallExpression	struct_proc_enum_ptrs ( ( * proc ) )		4968347	0					
ANR	4968406	Callee	struct_proc_enum_ptrs		4968347	0					
ANR	4968407	Identifier	struct_proc_enum_ptrs		4968347	0					
ANR	4968408	ArgumentList	* proc		4968347	1					
ANR	4968409	Argument	* proc		4968347	0					
ANR	4968410	UnaryOperationExpression	* proc		4968347	0					
ANR	4968411	UnaryOperator	*		4968347	0					
ANR	4968412	Identifier	proc		4968347	1					
ANR	4968413	PtrMemberAccess	pre -> o_type -> enum_ptrs		4968347	1					
ANR	4968414	PtrMemberAccess	pre -> o_type		4968347	0					
ANR	4968415	Identifier	pre		4968347	0					
ANR	4968416	Identifier	o_type		4968347	1					
ANR	4968417	Identifier	enum_ptrs		4968347	1					
ANR	4968418	IdentifierDeclStatement	uint index = 0 ;	2925:12:93775:93789	4968347	3	True				
ANR	4968419	IdentifierDecl	index = 0		4968347	0					
ANR	4968420	IdentifierDeclType	uint		4968347	0					
ANR	4968421	Identifier	index		4968347	1					
ANR	4968422	AssignmentExpression	index = 0		4968347	2		=			
ANR	4968423	Identifier	index		4968347	0					
ANR	4968424	PrimaryExpression	0		4968347	1					
ANR	4968425	IdentifierDeclStatement	enum_ptr_t eptr ;	2926:12:93803:93818	4968347	4	True				
ANR	4968426	IdentifierDecl	eptr		4968347	0					
ANR	4968427	IdentifierDeclType	enum_ptr_t		4968347	0					
ANR	4968428	Identifier	eptr		4968347	1					
ANR	4968429	IfStatement	if ( proc )		4968347	5					
ANR	4968430	Condition	proc	2928:16:93837:93840	4968347	0	True				
ANR	4968431	Identifier	proc		4968347	0					
ANR	4968432	ForStatement	"for ( ; ( * proc ) ( ( const gs_memory_t * ) mem , pre + 1 , size , index , & eptr , pre -> o_type , NULL ) ; ++ index )"		4968347	1					
ANR	4968433	Condition	"( * proc ) ( ( const gs_memory_t * ) mem , pre + 1 , size , index , & eptr , pre -> o_type , NULL )"	2929:23:93903:94014	4968347	0	True				
ANR	4968434	CallExpression	"( * proc ) ( ( const gs_memory_t * ) mem , pre + 1 , size , index , & eptr , pre -> o_type , NULL )"		4968347	0					
ANR	4968435	Callee	* proc		4968347	0					
ANR	4968436	UnaryOperationExpression	* proc		4968347	0					
ANR	4968437	UnaryOperator	*		4968347	0					
ANR	4968438	Identifier	proc		4968347	1					
ANR	4968439	ArgumentList	( const gs_memory_t * ) mem		4968347	1					
ANR	4968440	Argument	( const gs_memory_t * ) mem		4968347	0					
ANR	4968441	CastExpression	( const gs_memory_t * ) mem		4968347	0					
ANR	4968442	CastTarget	const gs_memory_t *		4968347	0					
ANR	4968443	Identifier	mem		4968347	1					
ANR	4968444	Argument	pre + 1		4968347	1					
ANR	4968445	AdditiveExpression	pre + 1		4968347	0		+			
ANR	4968446	Identifier	pre		4968347	0					
ANR	4968447	PrimaryExpression	1		4968347	1					
ANR	4968448	Argument	size		4968347	2					
ANR	4968449	Identifier	size		4968347	0					
ANR	4968450	Argument	index		4968347	3					
ANR	4968451	Identifier	index		4968347	0					
ANR	4968452	Argument	& eptr		4968347	4					
ANR	4968453	UnaryOperationExpression	& eptr		4968347	0					
ANR	4968454	UnaryOperator	&		4968347	0					
ANR	4968455	Identifier	eptr		4968347	1					
ANR	4968456	Argument	pre -> o_type		4968347	5					
ANR	4968457	PtrMemberAccess	pre -> o_type		4968347	0					
ANR	4968458	Identifier	pre		4968347	0					
ANR	4968459	Identifier	o_type		4968347	1					
ANR	4968460	Argument	NULL		4968347	6					
ANR	4968461	Identifier	NULL		4968347	0					
ANR	4968462	UnaryExpression	++ index	2931:21:94038:94044	4968347	1	True				
ANR	4968463	IncDec	++		4968347	0					
ANR	4968464	Identifier	index		4968347	1					
ANR	4968465	IfStatement	if ( eptr . ptr == target )		4968347	2					
ANR	4968466	Condition	eptr . ptr == target	2932:24:94071:94088	4968347	0	True				
ANR	4968467	EqualityExpression	eptr . ptr == target		4968347	0		==			
ANR	4968468	MemberAccess	eptr . ptr		4968347	0					
ANR	4968469	Identifier	eptr		4968347	0					
ANR	4968470	Identifier	ptr		4968347	1					
ANR	4968471	Identifier	target		4968347	1					
ANR	4968472	CompoundStatement		19:44:638:638	4968347	1					
ANR	4968473	ExpressionStatement	"dmprintf1 ( ( const gs_memory_t * ) mem , ""Index %d in"" , index )"	2933:24:94117:94174	4968347	0	True				
ANR	4968474	CallExpression	"dmprintf1 ( ( const gs_memory_t * ) mem , ""Index %d in"" , index )"		4968347	0					
ANR	4968475	Callee	dmprintf1		4968347	0					
ANR	4968476	Identifier	dmprintf1		4968347	0					
ANR	4968477	ArgumentList	( const gs_memory_t * ) mem		4968347	1					
ANR	4968478	Argument	( const gs_memory_t * ) mem		4968347	0					
ANR	4968479	CastExpression	( const gs_memory_t * ) mem		4968347	0					
ANR	4968480	CastTarget	const gs_memory_t *		4968347	0					
ANR	4968481	Identifier	mem		4968347	1					
ANR	4968482	Argument	"""Index %d in"""		4968347	1					
ANR	4968483	PrimaryExpression	"""Index %d in"""		4968347	0					
ANR	4968484	Argument	index		4968347	2					
ANR	4968485	Identifier	index		4968347	0					
ANR	4968486	ExpressionStatement	"debug_print_object ( ( const gs_memory_t * ) mem , pre + 1 , & control )"	2934:24:94200:94263	4968347	1	True				
ANR	4968487	CallExpression	"debug_print_object ( ( const gs_memory_t * ) mem , pre + 1 , & control )"		4968347	0					
ANR	4968488	Callee	debug_print_object		4968347	0					
ANR	4968489	Identifier	debug_print_object		4968347	0					
ANR	4968490	ArgumentList	( const gs_memory_t * ) mem		4968347	1					
ANR	4968491	Argument	( const gs_memory_t * ) mem		4968347	0					
ANR	4968492	CastExpression	( const gs_memory_t * ) mem		4968347	0					
ANR	4968493	CastTarget	const gs_memory_t *		4968347	0					
ANR	4968494	Identifier	mem		4968347	1					
ANR	4968495	Argument	pre + 1		4968347	1					
ANR	4968496	AdditiveExpression	pre + 1		4968347	0		+			
ANR	4968497	Identifier	pre		4968347	0					
ANR	4968498	PrimaryExpression	1		4968347	1					
ANR	4968499	Argument	& control		4968347	2					
ANR	4968500	UnaryOperationExpression	& control		4968347	0					
ANR	4968501	UnaryOperator	&		4968347	0					
ANR	4968502	Identifier	control		4968347	1					
ANR	4968503	Statement	END_OBJECTS_SCAN_NO_ABORT	2936:8:94295:94319	4968347	6	True				
ANR	4968504	ReturnType	void		4968347	1					
ANR	4968505	Identifier	debug_find_pointers		4968347	2					
ANR	4968506	ParameterList	"const gs_ref_memory_t * mem , const void * target"		4968347	3					
ANR	4968507	Parameter	const gs_ref_memory_t * mem	2913:20:93404:93429	4968347	0	True				
ANR	4968508	ParameterType	const gs_ref_memory_t *		4968347	0					
ANR	4968509	Identifier	mem		4968347	1					
ANR	4968510	Parameter	const void * target	2913:48:93432:93449	4968347	1	True				
ANR	4968511	ParameterType	const void *		4968347	0					
ANR	4968512	Identifier	target		4968347	1					
ANR	4968513	CFGEntryNode	ENTRY		4968347		True				
ANR	4968514	CFGExitNode	EXIT		4968347		True				
ANR	4968515	Symbol	eptr		4968347						
ANR	4968516	Symbol	* pre		4968347						
ANR	4968517	Symbol	& sw		4968347						
ANR	4968518	Symbol	control . options		4968347						
ANR	4968519	Symbol	mem		4968347						
ANR	4968520	Symbol	struct_proc_enum_ptrs		4968347						
ANR	4968521	Symbol	pre -> o_type		4968347						
ANR	4968522	Symbol	clump_splay_walk_init		4968347						
ANR	4968523	Symbol	pre		4968347						
ANR	4968524	Symbol	proc		4968347						
ANR	4968525	Symbol	NULL		4968347						
ANR	4968526	Symbol	sw		4968347						
ANR	4968527	Symbol	* pre -> o_type		4968347						
ANR	4968528	Symbol	& control		4968347						
ANR	4968529	Symbol	clump_splay_walk_fwd		4968347						
ANR	4968530	Symbol	index		4968347						
ANR	4968531	Symbol	& eptr		4968347						
ANR	4968532	Symbol	eptr . ptr		4968347						
ANR	4968533	Symbol	control		4968347						
ANR	4968534	Symbol	pre -> o_type -> enum_ptrs		4968347						
ANR	4968535	Symbol	cp		4968347						
ANR	4968536	Symbol	target		4968347						
ANR	4968537	Symbol	* proc		4968347						
ANR	4968538	Symbol	size		4968347						
ANR	4968539	Symbol	* * pre		4968347						
ANR	4968540	Function	ddct	2939:0:94329:94899							
ANR	4968541	FunctionDef	"ddct (const gs_memory_t * mem , clump_t * cp , clump_t * parent , int depth)"		4968540	0					
ANR	4968542	CompoundStatement		2940:0:94411:94899	4968540	0					
ANR	4968543	IdentifierDeclStatement	int i ;	2941:4:94417:94422	4968540	0	True				
ANR	4968544	IdentifierDecl	i		4968540	0					
ANR	4968545	IdentifierDeclType	int		4968540	0					
ANR	4968546	Identifier	i		4968540	1					
ANR	4968547	IfStatement	if ( cp == NULL )		4968540	1					
ANR	4968548	Condition	cp == NULL	2943:8:94433:94442	4968540	0	True				
ANR	4968549	EqualityExpression	cp == NULL		4968540	0		==			
ANR	4968550	Identifier	cp		4968540	0					
ANR	4968551	Identifier	NULL		4968540	1					
ANR	4968552	ReturnStatement	return ;	2944:8:94453:94459	4968540	1	True				
ANR	4968553	ForStatement	for ( i = 0 ; i < depth ; i ++ )		4968540	2					
ANR	4968554	ForInit	i = 0 ;	2945:9:94470:94475	4968540	0	True				
ANR	4968555	AssignmentExpression	i = 0		4968540	0		=			
ANR	4968556	Identifier	i		4968540	0					
ANR	4968557	PrimaryExpression	0		4968540	1					
ANR	4968558	Condition	i < depth	2945:16:94477:94485	4968540	1	True				
ANR	4968559	RelationalExpression	i < depth		4968540	0		<			
ANR	4968560	Identifier	i		4968540	0					
ANR	4968561	Identifier	depth		4968540	1					
ANR	4968562	PostIncDecOperationExpression	i ++	2945:27:94488:94490	4968540	2	True				
ANR	4968563	Identifier	i		4968540	0					
ANR	4968564	IncDec	++		4968540	1					
ANR	4968565	ExpressionStatement	"dmlprintf ( mem , "" "" )"	2946:8:94501:94520	4968540	3	True				
ANR	4968566	CallExpression	"dmlprintf ( mem , "" "" )"		4968540	0					
ANR	4968567	Callee	dmlprintf		4968540	0					
ANR	4968568	Identifier	dmlprintf		4968540	0					
ANR	4968569	ArgumentList	mem		4968540	1					
ANR	4968570	Argument	mem		4968540	0					
ANR	4968571	Identifier	mem		4968540	0					
ANR	4968572	Argument	""" """		4968540	1					
ANR	4968573	PrimaryExpression	""" """		4968540	0					
ANR	4968574	ExpressionStatement	"dmlprintf7 ( mem , ""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"" , cp , cp -> cbase , cp -> parent , cp -> left , cp -> left ? cp -> left -> cbase : NULL , cp -> right , cp -> right ? cp -> right -> cbase : NULL )"	2948:4:94527:94736	4968540	3	True				
ANR	4968575	CallExpression	"dmlprintf7 ( mem , ""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"" , cp , cp -> cbase , cp -> parent , cp -> left , cp -> left ? cp -> left -> cbase : NULL , cp -> right , cp -> right ? cp -> right -> cbase : NULL )"		4968540	0					
ANR	4968576	Callee	dmlprintf7		4968540	0					
ANR	4968577	Identifier	dmlprintf7		4968540	0					
ANR	4968578	ArgumentList	mem		4968540	1					
ANR	4968579	Argument	mem		4968540	0					
ANR	4968580	Identifier	mem		4968540	0					
ANR	4968581	Argument	"""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"""		4968540	1					
ANR	4968582	PrimaryExpression	"""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"""		4968540	0					
ANR	4968583	Argument	cp		4968540	2					
ANR	4968584	Identifier	cp		4968540	0					
ANR	4968585	Argument	cp -> cbase		4968540	3					
ANR	4968586	PtrMemberAccess	cp -> cbase		4968540	0					
ANR	4968587	Identifier	cp		4968540	0					
ANR	4968588	Identifier	cbase		4968540	1					
ANR	4968589	Argument	cp -> parent		4968540	4					
ANR	4968590	PtrMemberAccess	cp -> parent		4968540	0					
ANR	4968591	Identifier	cp		4968540	0					
ANR	4968592	Identifier	parent		4968540	1					
ANR	4968593	Argument	cp -> left		4968540	5					
ANR	4968594	PtrMemberAccess	cp -> left		4968540	0					
ANR	4968595	Identifier	cp		4968540	0					
ANR	4968596	Identifier	left		4968540	1					
ANR	4968597	Argument	cp -> left ? cp -> left -> cbase : NULL		4968540	6					
ANR	4968598	ConditionalExpression	cp -> left ? cp -> left -> cbase : NULL		4968540	0					
ANR	4968599	Condition	cp -> left		4968540	0					
ANR	4968600	PtrMemberAccess	cp -> left		4968540	0					
ANR	4968601	Identifier	cp		4968540	0					
ANR	4968602	Identifier	left		4968540	1					
ANR	4968603	PtrMemberAccess	cp -> left -> cbase		4968540	1					
ANR	4968604	PtrMemberAccess	cp -> left		4968540	0					
ANR	4968605	Identifier	cp		4968540	0					
ANR	4968606	Identifier	left		4968540	1					
ANR	4968607	Identifier	cbase		4968540	1					
ANR	4968608	Identifier	NULL		4968540	2					
ANR	4968609	Argument	cp -> right		4968540	7					
ANR	4968610	PtrMemberAccess	cp -> right		4968540	0					
ANR	4968611	Identifier	cp		4968540	0					
ANR	4968612	Identifier	right		4968540	1					
ANR	4968613	Argument	cp -> right ? cp -> right -> cbase : NULL		4968540	8					
ANR	4968614	ConditionalExpression	cp -> right ? cp -> right -> cbase : NULL		4968540	0					
ANR	4968615	Condition	cp -> right		4968540	0					
ANR	4968616	PtrMemberAccess	cp -> right		4968540	0					
ANR	4968617	Identifier	cp		4968540	0					
ANR	4968618	Identifier	right		4968540	1					
ANR	4968619	PtrMemberAccess	cp -> right -> cbase		4968540	1					
ANR	4968620	PtrMemberAccess	cp -> right		4968540	0					
ANR	4968621	Identifier	cp		4968540	0					
ANR	4968622	Identifier	right		4968540	1					
ANR	4968623	Identifier	cbase		4968540	1					
ANR	4968624	Identifier	NULL		4968540	2					
ANR	4968625	IfStatement	if ( cp -> parent != parent )		4968540	4					
ANR	4968626	Condition	cp -> parent != parent	2952:8:94746:94765	4968540	0	True				
ANR	4968627	EqualityExpression	cp -> parent != parent		4968540	0		!=			
ANR	4968628	PtrMemberAccess	cp -> parent		4968540	0					
ANR	4968629	Identifier	cp		4968540	0					
ANR	4968630	Identifier	parent		4968540	1					
ANR	4968631	Identifier	parent		4968540	1					
ANR	4968632	ExpressionStatement	"dmlprintf ( mem , ""Parent pointer mismatch!\\n"" )"	2953:8:94776:94820	4968540	1	True				
ANR	4968633	CallExpression	"dmlprintf ( mem , ""Parent pointer mismatch!\\n"" )"		4968540	0					
ANR	4968634	Callee	dmlprintf		4968540	0					
ANR	4968635	Identifier	dmlprintf		4968540	0					
ANR	4968636	ArgumentList	mem		4968540	1					
ANR	4968637	Argument	mem		4968540	0					
ANR	4968638	Identifier	mem		4968540	0					
ANR	4968639	Argument	"""Parent pointer mismatch!\\n"""		4968540	1					
ANR	4968640	PrimaryExpression	"""Parent pointer mismatch!\\n"""		4968540	0					
ANR	4968641	ExpressionStatement	"ddct ( mem , cp -> left , cp , depth + 1 )"	2954:4:94826:94858	4968540	5	True				
ANR	4968642	CallExpression	"ddct ( mem , cp -> left , cp , depth + 1 )"		4968540	0					
ANR	4968643	Callee	ddct		4968540	0					
ANR	4968644	Identifier	ddct		4968540	0					
ANR	4968645	ArgumentList	mem		4968540	1					
ANR	4968646	Argument	mem		4968540	0					
ANR	4968647	Identifier	mem		4968540	0					
ANR	4968648	Argument	cp -> left		4968540	1					
ANR	4968649	PtrMemberAccess	cp -> left		4968540	0					
ANR	4968650	Identifier	cp		4968540	0					
ANR	4968651	Identifier	left		4968540	1					
ANR	4968652	Argument	cp		4968540	2					
ANR	4968653	Identifier	cp		4968540	0					
ANR	4968654	Argument	depth + 1		4968540	3					
ANR	4968655	AdditiveExpression	depth + 1		4968540	0		+			
ANR	4968656	Identifier	depth		4968540	0					
ANR	4968657	PrimaryExpression	1		4968540	1					
ANR	4968658	ExpressionStatement	"ddct ( mem , cp -> right , cp , depth + 1 )"	2955:4:94864:94897	4968540	6	True				
ANR	4968659	CallExpression	"ddct ( mem , cp -> right , cp , depth + 1 )"		4968540	0					
ANR	4968660	Callee	ddct		4968540	0					
ANR	4968661	Identifier	ddct		4968540	0					
ANR	4968662	ArgumentList	mem		4968540	1					
ANR	4968663	Argument	mem		4968540	0					
ANR	4968664	Identifier	mem		4968540	0					
ANR	4968665	Argument	cp -> right		4968540	1					
ANR	4968666	PtrMemberAccess	cp -> right		4968540	0					
ANR	4968667	Identifier	cp		4968540	0					
ANR	4968668	Identifier	right		4968540	1					
ANR	4968669	Argument	cp		4968540	2					
ANR	4968670	Identifier	cp		4968540	0					
ANR	4968671	Argument	depth + 1		4968540	3					
ANR	4968672	AdditiveExpression	depth + 1		4968540	0		+			
ANR	4968673	Identifier	depth		4968540	0					
ANR	4968674	PrimaryExpression	1		4968540	1					
ANR	4968675	ReturnType	static void		4968540	1					
ANR	4968676	Identifier	ddct		4968540	2					
ANR	4968677	ParameterList	"const gs_memory_t * mem , clump_t * cp , clump_t * parent , int depth"		4968540	3					
ANR	4968678	Parameter	const gs_memory_t * mem	2939:17:94346:94367	4968540	0	True				
ANR	4968679	ParameterType	const gs_memory_t *		4968540	0					
ANR	4968680	Identifier	mem		4968540	1					
ANR	4968681	Parameter	clump_t * cp	2939:41:94370:94380	4968540	1	True				
ANR	4968682	ParameterType	clump_t *		4968540	0					
ANR	4968683	Identifier	cp		4968540	1					
ANR	4968684	Parameter	clump_t * parent	2939:54:94383:94397	4968540	2	True				
ANR	4968685	ParameterType	clump_t *		4968540	0					
ANR	4968686	Identifier	parent		4968540	1					
ANR	4968687	Parameter	int depth	2939:71:94400:94408	4968540	3	True				
ANR	4968688	ParameterType	int		4968540	0					
ANR	4968689	Identifier	depth		4968540	1					
ANR	4968690	CFGEntryNode	ENTRY		4968540		True				
ANR	4968691	CFGExitNode	EXIT		4968540		True				
ANR	4968692	Symbol	parent		4968540						
ANR	4968693	Symbol	NULL		4968540						
ANR	4968694	Symbol	cp -> right -> cbase		4968540						
ANR	4968695	Symbol	i		4968540						
ANR	4968696	Symbol	cp -> right		4968540						
ANR	4968697	Symbol	cp -> cbase		4968540						
ANR	4968698	Symbol	* cp -> left		4968540						
ANR	4968699	Symbol	cp		4968540						
ANR	4968700	Symbol	* cp		4968540						
ANR	4968701	Symbol	depth		4968540						
ANR	4968702	Symbol	mem		4968540						
ANR	4968703	Symbol	* cp -> right		4968540						
ANR	4968704	Symbol	cp -> parent		4968540						
ANR	4968705	Symbol	cp -> left		4968540						
ANR	4968706	Symbol	cp -> left -> cbase		4968540						
ANR	4968707	Symbol	* * cp		4968540						
ANR	4968708	Function	debug_dump_clump_tree	2957:0:94901:95014							
ANR	4968709	FunctionDef	debug_dump_clump_tree (const gs_ref_memory_t * mem)		4968708	0					
ANR	4968710	CompoundStatement		2959:0:94956:95014	4968708	0					
ANR	4968711	ExpressionStatement	"ddct ( ( const gs_memory_t * ) mem , mem -> root , NULL , 0 )"	2960:4:94962:95012	4968708	0	True				
ANR	4968712	CallExpression	"ddct ( ( const gs_memory_t * ) mem , mem -> root , NULL , 0 )"		4968708	0					
ANR	4968713	Callee	ddct		4968708	0					
ANR	4968714	Identifier	ddct		4968708	0					
ANR	4968715	ArgumentList	( const gs_memory_t * ) mem		4968708	1					
ANR	4968716	Argument	( const gs_memory_t * ) mem		4968708	0					
ANR	4968717	CastExpression	( const gs_memory_t * ) mem		4968708	0					
ANR	4968718	CastTarget	const gs_memory_t *		4968708	0					
ANR	4968719	Identifier	mem		4968708	1					
ANR	4968720	Argument	mem -> root		4968708	1					
ANR	4968721	PtrMemberAccess	mem -> root		4968708	0					
ANR	4968722	Identifier	mem		4968708	0					
ANR	4968723	Identifier	root		4968708	1					
ANR	4968724	Argument	NULL		4968708	2					
ANR	4968725	Identifier	NULL		4968708	0					
ANR	4968726	Argument	0		4968708	3					
ANR	4968727	PrimaryExpression	0		4968708	0					
ANR	4968728	ReturnType	void		4968708	1					
ANR	4968729	Identifier	debug_dump_clump_tree		4968708	2					
ANR	4968730	ParameterList	const gs_ref_memory_t * mem		4968708	3					
ANR	4968731	Parameter	const gs_ref_memory_t * mem	2958:22:94928:94953	4968708	0	True				
ANR	4968732	ParameterType	const gs_ref_memory_t *		4968708	0					
ANR	4968733	Identifier	mem		4968708	1					
ANR	4968734	CFGEntryNode	ENTRY		4968708		True				
ANR	4968735	CFGExitNode	EXIT		4968708		True				
ANR	4968736	Symbol	NULL		4968708						
ANR	4968737	Symbol	mem		4968708						
ANR	4968738	Symbol	mem -> root		4968708						
ANR	4968739	Symbol	* mem		4968708						
