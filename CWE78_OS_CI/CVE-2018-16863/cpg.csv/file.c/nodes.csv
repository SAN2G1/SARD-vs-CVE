command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3220944	File	data/converged/CVE-2018-16863_ghostpdl/file.c								
ANR	3220945	ClassDef	context	68:8:2411:4054							
ANR	3220946	DeclStmt									
ANR	3220947	Decl							const char	const char *	name
ANR	3220948	DeclStmt									
ANR	3220949	Decl							int	int	wid
ANR	3220950	DeclStmt									
ANR	3220951	Decl							int	int	hei
ANR	3220952	DeclStmt									
ANR	3220953	Decl							int	int	ncomp
ANR	3220954	DeclStmt									
ANR	3220955	Decl							int	int	bpi
ANR	3220956	DeclStmt									
ANR	3220957	Decl							int	int	ycc_bd10_flag
ANR	3220958	DeclStmt									
ANR	3220959	Decl							int	int	ycc_format
ANR	3220960	DeclStmt									
ANR	3220961	Decl							short	short	sf
ANR	3220962	DeclStmt									
ANR	3220963	Decl							int	int	format
ANR	3220964	DeclStmt									
ANR	3220965	Decl							FILE	FILE *	file
ANR	3220966	DeclStmt									
ANR	3220967	Decl							void	void *	buf
ANR	3220968	DeclStmt									
ANR	3220969	Decl							int	int	my
ANR	3220970	DeclStmt									
ANR	3220971	Decl							int	int	nstrips
ANR	3220972	DeclStmt									
ANR	3220973	Decl							int	int	strip
ANR	3220974	DeclStmt									
ANR	3220975	Decl							int	int	nlines
ANR	3220976	DeclStmt									
ANR	3220977	Decl							int	int	line
ANR	3220978	DeclStmt									
ANR	3220979	Decl							short	short	photometric
ANR	3220980	DeclStmt									
ANR	3220981	Decl							uint32_t	uint32_t	offoff
ANR	3220982	DeclStmt									
ANR	3220983	Decl							int	int	padBytes
ANR	3220984	DeclStmt									
ANR	3220985	Decl							int	int	alpha
ANR	3220986	DeclStmt									
ANR	3220987	Decl							unsigned int	unsigned int	isBgr
ANR	3220988	DeclStmt									
ANR	3220989	Decl							int	int	top_pad
ANR	3220990	DeclStmt									
ANR	3220991	Decl							int	int	top_pad_remaining
ANR	3220992	DeclStmt									
ANR	3220993	Decl							int	int	left_pad
ANR	3220994	DeclStmt									
ANR	3220995	Decl							context	context	context
ANR	3220996	Function	error	105:0:4057:4267							
ANR	3220997	FunctionDef	error (char * format)		3220996	0					
ANR	3220998	CompoundStatement		106:0:4093:4267	3220996	0					
ANR	3220999	IdentifierDeclStatement	va_list args ;	107:4:4099:4111	3220996	0	True				
ANR	3221000	IdentifierDecl	args		3220996	0					
ANR	3221001	IdentifierDeclType	va_list		3220996	0					
ANR	3221002	Identifier	args		3220996	1					
ANR	3221003	ExpressionStatement	"fprintf ( stderr , ""Error: "" )"	108:4:4117:4143	3220996	1	True				
ANR	3221004	CallExpression	"fprintf ( stderr , ""Error: "" )"		3220996	0					
ANR	3221005	Callee	fprintf		3220996	0					
ANR	3221006	Identifier	fprintf		3220996	0					
ANR	3221007	ArgumentList	stderr		3220996	1					
ANR	3221008	Argument	stderr		3220996	0					
ANR	3221009	Identifier	stderr		3220996	0					
ANR	3221010	Argument	"""Error: """		3220996	1					
ANR	3221011	PrimaryExpression	"""Error: """		3220996	0					
ANR	3221012	ExpressionStatement	"va_start ( args , format )"	109:4:4149:4171	3220996	2	True				
ANR	3221013	CallExpression	"va_start ( args , format )"		3220996	0					
ANR	3221014	Callee	va_start		3220996	0					
ANR	3221015	Identifier	va_start		3220996	0					
ANR	3221016	ArgumentList	args		3220996	1					
ANR	3221017	Argument	args		3220996	0					
ANR	3221018	Identifier	args		3220996	0					
ANR	3221019	Argument	format		3220996	1					
ANR	3221020	Identifier	format		3220996	0					
ANR	3221021	ExpressionStatement	"vfprintf ( stderr , format , args )"	110:4:4177:4207	3220996	3	True				
ANR	3221022	CallExpression	"vfprintf ( stderr , format , args )"		3220996	0					
ANR	3221023	Callee	vfprintf		3220996	0					
ANR	3221024	Identifier	vfprintf		3220996	0					
ANR	3221025	ArgumentList	stderr		3220996	1					
ANR	3221026	Argument	stderr		3220996	0					
ANR	3221027	Identifier	stderr		3220996	0					
ANR	3221028	Argument	format		3220996	1					
ANR	3221029	Identifier	format		3220996	0					
ANR	3221030	Argument	args		3220996	2					
ANR	3221031	Identifier	args		3220996	0					
ANR	3221032	ExpressionStatement	va_end ( args )	111:4:4213:4225	3220996	4	True				
ANR	3221033	CallExpression	va_end ( args )		3220996	0					
ANR	3221034	Callee	va_end		3220996	0					
ANR	3221035	Identifier	va_end		3220996	0					
ANR	3221036	ArgumentList	args		3220996	1					
ANR	3221037	Argument	args		3220996	0					
ANR	3221038	Identifier	args		3220996	0					
ANR	3221039	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	112:4:4231:4252	3220996	5	True				
ANR	3221040	CallExpression	"fprintf ( stderr , ""\\n"" )"		3220996	0					
ANR	3221041	Callee	fprintf		3220996	0					
ANR	3221042	Identifier	fprintf		3220996	0					
ANR	3221043	ArgumentList	stderr		3220996	1					
ANR	3221044	Argument	stderr		3220996	0					
ANR	3221045	Identifier	stderr		3220996	0					
ANR	3221046	Argument	"""\\n"""		3220996	1					
ANR	3221047	PrimaryExpression	"""\\n"""		3220996	0					
ANR	3221048	ExpressionStatement	abort ( )	113:4:4258:4265	3220996	6	True				
ANR	3221049	CallExpression	abort ( )		3220996	0					
ANR	3221050	Callee	abort		3220996	0					
ANR	3221051	Identifier	abort		3220996	0					
ANR	3221052	ArgumentList			3220996	1					
ANR	3221053	ReturnType	static void		3220996	1					
ANR	3221054	Identifier	error		3220996	2					
ANR	3221055	ParameterList	char * format		3220996	3					
ANR	3221056	Parameter	char * format	105:18:4075:4086	3220996	0	True				
ANR	3221057	ParameterType	char *		3220996	0					
ANR	3221058	Identifier	format		3220996	1					
ANR	3221059	CFGEntryNode	ENTRY		3220996		True				
ANR	3221060	CFGExitNode	EXIT		3220996		True				
ANR	3221061	Symbol	args		3220996						
ANR	3221062	Symbol	format		3220996						
ANR	3221063	Symbol	stderr		3220996						
ANR	3221064	Function	isOutputYUV444	118:0:4305:4791							
ANR	3221065	FunctionDef	isOutputYUV444 (jxr_image_t image)		3221064	0					
ANR	3221066	CompoundStatement		119:0:4352:4791	3221064	0					
ANR	3221067	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		3221064	0					
ANR	3221068	Condition	jxr_get_pixel_format ( image )	120:13:4367:4393	3221064	0	True				
ANR	3221069	CallExpression	jxr_get_pixel_format ( image )		3221064	0					
ANR	3221070	Callee	jxr_get_pixel_format		3221064	0					
ANR	3221071	Identifier	jxr_get_pixel_format		3221064	0					
ANR	3221072	ArgumentList	image		3221064	1					
ANR	3221073	Argument	image		3221064	0					
ANR	3221074	Identifier	image		3221064	0					
ANR	3221075	CompoundStatement		3:5:48:48	3221064	1					
ANR	3221076	Label	case JXRC_FMT_24bppYCC444 :	122:8:4411:4436	3221064	0	True				
ANR	3221077	Identifier	JXRC_FMT_24bppYCC444		3221064	0					
ANR	3221078	Label	case JXRC_FMT_30bppYCC444 :	123:8:4446:4471	3221064	1	True				
ANR	3221079	Identifier	JXRC_FMT_30bppYCC444		3221064	0					
ANR	3221080	Label	case JXRC_FMT_48bppYCC444 :	124:8:4481:4506	3221064	2	True				
ANR	3221081	Identifier	JXRC_FMT_48bppYCC444		3221064	0					
ANR	3221082	Label	case JXRC_FMT_48bppYCC444FixedPoint :	125:8:4516:4551	3221064	3	True				
ANR	3221083	Identifier	JXRC_FMT_48bppYCC444FixedPoint		3221064	0					
ANR	3221084	Label	case JXRC_FMT_32bppYCC444Alpha :	126:8:4561:4591	3221064	4	True				
ANR	3221085	Identifier	JXRC_FMT_32bppYCC444Alpha		3221064	0					
ANR	3221086	Label	case JXRC_FMT_40bppYCC444Alpha :	127:8:4601:4631	3221064	5	True				
ANR	3221087	Identifier	JXRC_FMT_40bppYCC444Alpha		3221064	0					
ANR	3221088	Label	case JXRC_FMT_64bppYCC444Alpha :	128:8:4641:4671	3221064	6	True				
ANR	3221089	Identifier	JXRC_FMT_64bppYCC444Alpha		3221064	0					
ANR	3221090	Label	case JXRC_FMT_64bppYCC444AlphaFixedPoint :	129:8:4681:4721	3221064	7	True				
ANR	3221091	Identifier	JXRC_FMT_64bppYCC444AlphaFixedPoint		3221064	0					
ANR	3221092	ReturnStatement	return 1 ;	130:12:4735:4743	3221064	8	True				
ANR	3221093	PrimaryExpression	1		3221064	0					
ANR	3221094	Label	default :	131:8:4753:4760	3221064	9	True				
ANR	3221095	Identifier	default		3221064	0					
ANR	3221096	ReturnStatement	return 0 ;	132:12:4774:4782	3221064	10	True				
ANR	3221097	PrimaryExpression	0		3221064	0					
ANR	3221098	ReturnType	unsigned int		3221064	1					
ANR	3221099	Identifier	isOutputYUV444		3221064	2					
ANR	3221100	ParameterList	jxr_image_t image		3221064	3					
ANR	3221101	Parameter	jxr_image_t image	118:28:4333:4349	3221064	0	True				
ANR	3221102	ParameterType	jxr_image_t		3221064	0					
ANR	3221103	Identifier	image		3221064	1					
ANR	3221104	CFGEntryNode	ENTRY		3221064		True				
ANR	3221105	CFGExitNode	EXIT		3221064		True				
ANR	3221106	Symbol	image		3221064						
ANR	3221107	Symbol	jxr_get_pixel_format		3221064						
ANR	3221108	Function	isOutputYUV422	136:0:4794:5185							
ANR	3221109	FunctionDef	isOutputYUV422 (jxr_image_t image)		3221108	0					
ANR	3221110	CompoundStatement		137:0:4841:5185	3221108	0					
ANR	3221111	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		3221108	0					
ANR	3221112	Condition	jxr_get_pixel_format ( image )	138:13:4856:4882	3221108	0	True				
ANR	3221113	CallExpression	jxr_get_pixel_format ( image )		3221108	0					
ANR	3221114	Callee	jxr_get_pixel_format		3221108	0					
ANR	3221115	Identifier	jxr_get_pixel_format		3221108	0					
ANR	3221116	ArgumentList	image		3221108	1					
ANR	3221117	Argument	image		3221108	0					
ANR	3221118	Identifier	image		3221108	0					
ANR	3221119	CompoundStatement		3:5:48:48	3221108	1					
ANR	3221120	Label	case JXRC_FMT_16bppYCC422 :	140:8:4900:4925	3221108	0	True				
ANR	3221121	Identifier	JXRC_FMT_16bppYCC422		3221108	0					
ANR	3221122	Label	case JXRC_FMT_20bppYCC422 :	141:8:4935:4960	3221108	1	True				
ANR	3221123	Identifier	JXRC_FMT_20bppYCC422		3221108	0					
ANR	3221124	Label	case JXRC_FMT_32bppYCC422 :	142:8:4970:4995	3221108	2	True				
ANR	3221125	Identifier	JXRC_FMT_32bppYCC422		3221108	0					
ANR	3221126	Label	case JXRC_FMT_24bppYCC422Alpha :	143:8:5005:5035	3221108	3	True				
ANR	3221127	Identifier	JXRC_FMT_24bppYCC422Alpha		3221108	0					
ANR	3221128	Label	case JXRC_FMT_30bppYCC422Alpha :	144:8:5045:5075	3221108	4	True				
ANR	3221129	Identifier	JXRC_FMT_30bppYCC422Alpha		3221108	0					
ANR	3221130	Label	case JXRC_FMT_48bppYCC422Alpha :	145:8:5085:5115	3221108	5	True				
ANR	3221131	Identifier	JXRC_FMT_48bppYCC422Alpha		3221108	0					
ANR	3221132	ReturnStatement	return 1 ;	146:12:5129:5137	3221108	6	True				
ANR	3221133	PrimaryExpression	1		3221108	0					
ANR	3221134	Label	default :	147:8:5147:5154	3221108	7	True				
ANR	3221135	Identifier	default		3221108	0					
ANR	3221136	ReturnStatement	return 0 ;	148:12:5168:5176	3221108	8	True				
ANR	3221137	PrimaryExpression	0		3221108	0					
ANR	3221138	ReturnType	unsigned int		3221108	1					
ANR	3221139	Identifier	isOutputYUV422		3221108	2					
ANR	3221140	ParameterList	jxr_image_t image		3221108	3					
ANR	3221141	Parameter	jxr_image_t image	136:28:4822:4838	3221108	0	True				
ANR	3221142	ParameterType	jxr_image_t		3221108	0					
ANR	3221143	Identifier	image		3221108	1					
ANR	3221144	CFGEntryNode	ENTRY		3221108		True				
ANR	3221145	CFGExitNode	EXIT		3221108		True				
ANR	3221146	Symbol	image		3221108						
ANR	3221147	Symbol	jxr_get_pixel_format		3221108						
ANR	3221148	Function	isOutputYUV420	152:0:5188:5428							
ANR	3221149	FunctionDef	isOutputYUV420 (jxr_image_t image)		3221148	0					
ANR	3221150	CompoundStatement		153:0:5235:5428	3221148	0					
ANR	3221151	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		3221148	0					
ANR	3221152	Condition	jxr_get_pixel_format ( image )	154:13:5250:5276	3221148	0	True				
ANR	3221153	CallExpression	jxr_get_pixel_format ( image )		3221148	0					
ANR	3221154	Callee	jxr_get_pixel_format		3221148	0					
ANR	3221155	Identifier	jxr_get_pixel_format		3221148	0					
ANR	3221156	ArgumentList	image		3221148	1					
ANR	3221157	Argument	image		3221148	0					
ANR	3221158	Identifier	image		3221148	0					
ANR	3221159	CompoundStatement		3:5:48:48	3221148	1					
ANR	3221160	Label	case JXRC_FMT_12bppYCC420 :	156:8:5294:5319	3221148	0	True				
ANR	3221161	Identifier	JXRC_FMT_12bppYCC420		3221148	0					
ANR	3221162	Label	case JXRC_FMT_20bppYCC420Alpha :	157:8:5329:5359	3221148	1	True				
ANR	3221163	Identifier	JXRC_FMT_20bppYCC420Alpha		3221148	0					
ANR	3221164	ReturnStatement	return 1 ;	158:11:5372:5380	3221148	2	True				
ANR	3221165	PrimaryExpression	1		3221148	0					
ANR	3221166	Label	default :	159:8:5390:5397	3221148	3	True				
ANR	3221167	Identifier	default		3221148	0					
ANR	3221168	ReturnStatement	return 0 ;	160:12:5411:5419	3221148	4	True				
ANR	3221169	PrimaryExpression	0		3221148	0					
ANR	3221170	ReturnType	unsigned int		3221148	1					
ANR	3221171	Identifier	isOutputYUV420		3221148	2					
ANR	3221172	ParameterList	jxr_image_t image		3221148	3					
ANR	3221173	Parameter	jxr_image_t image	152:28:5216:5232	3221148	0	True				
ANR	3221174	ParameterType	jxr_image_t		3221148	0					
ANR	3221175	Identifier	image		3221148	1					
ANR	3221176	CFGEntryNode	ENTRY		3221148		True				
ANR	3221177	CFGExitNode	EXIT		3221148		True				
ANR	3221178	Symbol	image		3221148						
ANR	3221179	Symbol	jxr_get_pixel_format		3221148						
ANR	3221180	Function	isOutputCMYKDirect	164:0:5431:5753							
ANR	3221181	FunctionDef	isOutputCMYKDirect (jxr_image_t image)		3221180	0					
ANR	3221182	CompoundStatement		165:0:5482:5753	3221180	0					
ANR	3221183	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		3221180	0					
ANR	3221184	Condition	jxr_get_pixel_format ( image )	166:13:5497:5523	3221180	0	True				
ANR	3221185	CallExpression	jxr_get_pixel_format ( image )		3221180	0					
ANR	3221186	Callee	jxr_get_pixel_format		3221180	0					
ANR	3221187	Identifier	jxr_get_pixel_format		3221180	0					
ANR	3221188	ArgumentList	image		3221180	1					
ANR	3221189	Argument	image		3221180	0					
ANR	3221190	Identifier	image		3221180	0					
ANR	3221191	CompoundStatement		3:5:48:48	3221180	1					
ANR	3221192	Label	case JXRC_FMT_32bppCMYKDIRECT :	168:5:5538:5567	3221180	0	True				
ANR	3221193	Identifier	JXRC_FMT_32bppCMYKDIRECT		3221180	0					
ANR	3221194	Label	case JXRC_FMT_64bppCMYKDIRECT :	169:5:5574:5603	3221180	1	True				
ANR	3221195	Identifier	JXRC_FMT_64bppCMYKDIRECT		3221180	0					
ANR	3221196	Label	case JXRC_FMT_40bppCMYKDIRECTAlpha :	170:5:5610:5644	3221180	2	True				
ANR	3221197	Identifier	JXRC_FMT_40bppCMYKDIRECTAlpha		3221180	0					
ANR	3221198	Label	case JXRC_FMT_80bppCMYKDIRECTAlpha :	171:5:5651:5685	3221180	3	True				
ANR	3221199	Identifier	JXRC_FMT_80bppCMYKDIRECTAlpha		3221180	0					
ANR	3221200	ReturnStatement	return 1 ;	172:9:5696:5704	3221180	4	True				
ANR	3221201	PrimaryExpression	1		3221180	0					
ANR	3221202	Label	default :	173:5:5711:5718	3221180	5	True				
ANR	3221203	Identifier	default		3221180	0					
ANR	3221204	ReturnStatement	return 0 ;	174:12:5736:5744	3221180	6	True				
ANR	3221205	PrimaryExpression	0		3221180	0					
ANR	3221206	ReturnType	unsigned int		3221180	1					
ANR	3221207	Identifier	isOutputCMYKDirect		3221180	2					
ANR	3221208	ParameterList	jxr_image_t image		3221180	3					
ANR	3221209	Parameter	jxr_image_t image	164:32:5463:5479	3221180	0	True				
ANR	3221210	ParameterType	jxr_image_t		3221180	0					
ANR	3221211	Identifier	image		3221180	1					
ANR	3221212	CFGEntryNode	ENTRY		3221180		True				
ANR	3221213	CFGExitNode	EXIT		3221180		True				
ANR	3221214	Symbol	image		3221180						
ANR	3221215	Symbol	jxr_get_pixel_format		3221180						
ANR	3221216	Function	read_data	180:0:5788:5989							
ANR	3221217	FunctionDef	"read_data (context * con , void * buf , int size , int count)"		3221216	0					
ANR	3221218	CompoundStatement		181:0:5856:5989	3221216	0					
ANR	3221219	IdentifierDeclStatement	"size_t rc = fread ( buf , size , count , con -> file ) ;"	182:4:5862:5908	3221216	0	True				
ANR	3221220	IdentifierDecl	"rc = fread ( buf , size , count , con -> file )"		3221216	0					
ANR	3221221	IdentifierDeclType	size_t		3221216	0					
ANR	3221222	Identifier	rc		3221216	1					
ANR	3221223	AssignmentExpression	"rc = fread ( buf , size , count , con -> file )"		3221216	2		=			
ANR	3221224	Identifier	rc		3221216	0					
ANR	3221225	CallExpression	"fread ( buf , size , count , con -> file )"		3221216	1					
ANR	3221226	Callee	fread		3221216	0					
ANR	3221227	Identifier	fread		3221216	0					
ANR	3221228	ArgumentList	buf		3221216	1					
ANR	3221229	Argument	buf		3221216	0					
ANR	3221230	Identifier	buf		3221216	0					
ANR	3221231	Argument	size		3221216	1					
ANR	3221232	Identifier	size		3221216	0					
ANR	3221233	Argument	count		3221216	2					
ANR	3221234	Identifier	count		3221216	0					
ANR	3221235	Argument	con -> file		3221216	3					
ANR	3221236	PtrMemberAccess	con -> file		3221216	0					
ANR	3221237	Identifier	con		3221216	0					
ANR	3221238	Identifier	file		3221216	1					
ANR	3221239	IfStatement	if ( rc != count )		3221216	1					
ANR	3221240	Condition	rc != count	183:8:5918:5926	3221216	0	True				
ANR	3221241	EqualityExpression	rc != count		3221216	0		!=			
ANR	3221242	Identifier	rc		3221216	0					
ANR	3221243	Identifier	count		3221216	1					
ANR	3221244	ExpressionStatement	"error ( ""premature EOF in input file %s"" , con -> name )"	184:8:5937:5987	3221216	1	True				
ANR	3221245	CallExpression	"error ( ""premature EOF in input file %s"" , con -> name )"		3221216	0					
ANR	3221246	Callee	error		3221216	0					
ANR	3221247	Identifier	error		3221216	0					
ANR	3221248	ArgumentList	"""premature EOF in input file %s"""		3221216	1					
ANR	3221249	Argument	"""premature EOF in input file %s"""		3221216	0					
ANR	3221250	PrimaryExpression	"""premature EOF in input file %s"""		3221216	0					
ANR	3221251	Argument	con -> name		3221216	1					
ANR	3221252	PtrMemberAccess	con -> name		3221216	0					
ANR	3221253	Identifier	con		3221216	0					
ANR	3221254	Identifier	name		3221216	1					
ANR	3221255	ReturnType	static void		3221216	1					
ANR	3221256	Identifier	read_data		3221216	2					
ANR	3221257	ParameterList	"context * con , void * buf , int size , int count"		3221216	3					
ANR	3221258	Parameter	context * con	180:22:5810:5821	3221216	0	True				
ANR	3221259	ParameterType	context *		3221216	0					
ANR	3221260	Identifier	con		3221216	1					
ANR	3221261	Parameter	void * buf	180:36:5824:5832	3221216	1	True				
ANR	3221262	ParameterType	void *		3221216	0					
ANR	3221263	Identifier	buf		3221216	1					
ANR	3221264	Parameter	int size	180:47:5835:5842	3221216	2	True				
ANR	3221265	ParameterType	int		3221216	0					
ANR	3221266	Identifier	size		3221216	1					
ANR	3221267	Parameter	int count	180:57:5845:5853	3221216	3	True				
ANR	3221268	ParameterType	int		3221216	0					
ANR	3221269	Identifier	count		3221216	1					
ANR	3221270	CFGEntryNode	ENTRY		3221216		True				
ANR	3221271	CFGExitNode	EXIT		3221216		True				
ANR	3221272	Symbol	rc		3221216						
ANR	3221273	Symbol	buf		3221216						
ANR	3221274	Symbol	con		3221216						
ANR	3221275	Symbol	con -> file		3221216						
ANR	3221276	Symbol	* con		3221216						
ANR	3221277	Symbol	size		3221216						
ANR	3221278	Symbol	count		3221216						
ANR	3221279	Symbol	con -> name		3221216						
ANR	3221280	Symbol	fread		3221216						
ANR	3221281	Function	read_uint8	187:0:5992:6098							
ANR	3221282	FunctionDef	"read_uint8 (context * con , uint8_t * buf , int count)"		3221281	0					
ANR	3221283	CompoundStatement		188:0:6061:6098	3221281	0					
ANR	3221284	ExpressionStatement	"read_data ( con , buf , 1 , count )"	189:4:6067:6096	3221281	0	True				
ANR	3221285	CallExpression	"read_data ( con , buf , 1 , count )"		3221281	0					
ANR	3221286	Callee	read_data		3221281	0					
ANR	3221287	Identifier	read_data		3221281	0					
ANR	3221288	ArgumentList	con		3221281	1					
ANR	3221289	Argument	con		3221281	0					
ANR	3221290	Identifier	con		3221281	0					
ANR	3221291	Argument	buf		3221281	1					
ANR	3221292	Identifier	buf		3221281	0					
ANR	3221293	Argument	1		3221281	2					
ANR	3221294	PrimaryExpression	1		3221281	0					
ANR	3221295	Argument	count		3221281	3					
ANR	3221296	Identifier	count		3221281	0					
ANR	3221297	ReturnType	static inline void		3221281	1					
ANR	3221298	Identifier	read_uint8		3221281	2					
ANR	3221299	ParameterList	"context * con , uint8_t * buf , int count"		3221281	3					
ANR	3221300	Parameter	context * con	187:30:6022:6033	3221281	0	True				
ANR	3221301	ParameterType	context *		3221281	0					
ANR	3221302	Identifier	con		3221281	1					
ANR	3221303	Parameter	uint8_t * buf	187:44:6036:6047	3221281	1	True				
ANR	3221304	ParameterType	uint8_t *		3221281	0					
ANR	3221305	Identifier	buf		3221281	1					
ANR	3221306	Parameter	int count	187:58:6050:6058	3221281	2	True				
ANR	3221307	ParameterType	int		3221281	0					
ANR	3221308	Identifier	count		3221281	1					
ANR	3221309	CFGEntryNode	ENTRY		3221281		True				
ANR	3221310	CFGExitNode	EXIT		3221281		True				
ANR	3221311	Symbol	buf		3221281						
ANR	3221312	Symbol	con		3221281						
ANR	3221313	Symbol	count		3221281						
ANR	3221314	Function	read_uint16	192:0:6101:6358							
ANR	3221315	FunctionDef	"read_uint16 (context * con , uint16_t * buf , int count)"		3221314	0					
ANR	3221316	CompoundStatement		193:0:6165:6358	3221314	0					
ANR	3221317	ExpressionStatement	"read_data ( con , buf , 2 , count )"	194:4:6171:6200	3221314	0	True				
ANR	3221318	CallExpression	"read_data ( con , buf , 2 , count )"		3221314	0					
ANR	3221319	Callee	read_data		3221314	0					
ANR	3221320	Identifier	read_data		3221314	0					
ANR	3221321	ArgumentList	con		3221314	1					
ANR	3221322	Argument	con		3221314	0					
ANR	3221323	Identifier	con		3221314	0					
ANR	3221324	Argument	buf		3221314	1					
ANR	3221325	Identifier	buf		3221314	0					
ANR	3221326	Argument	2		3221314	2					
ANR	3221327	PrimaryExpression	2		3221314	0					
ANR	3221328	Argument	count		3221314	3					
ANR	3221329	Identifier	count		3221314	0					
ANR	3221330	IfStatement	if ( con -> swap )		3221314	1					
ANR	3221331	Condition	con -> swap	195:8:6210:6218	3221314	0	True				
ANR	3221332	PtrMemberAccess	con -> swap		3221314	0					
ANR	3221333	Identifier	con		3221314	0					
ANR	3221334	Identifier	swap		3221314	1					
ANR	3221335	CompoundStatement		4:8:65:85	3221314	1					
ANR	3221336	IdentifierDeclStatement	"uint8_t * p , * plim , t ;"	196:8:6231:6251	3221314	0	True				
ANR	3221337	IdentifierDecl	* p		3221314	0					
ANR	3221338	IdentifierDeclType	uint8_t *		3221314	0					
ANR	3221339	Identifier	p		3221314	1					
ANR	3221340	IdentifierDecl	* plim		3221314	1					
ANR	3221341	IdentifierDeclType	uint8_t *		3221314	0					
ANR	3221342	Identifier	plim		3221314	1					
ANR	3221343	IdentifierDecl	t		3221314	2					
ANR	3221344	IdentifierDeclType	uint8_t		3221314	0					
ANR	3221345	Identifier	t		3221314	1					
ANR	3221346	ForStatement	"for ( p = ( uint8_t * ) buf , plim = p + count * 2 ; p < plim ; p += 2 )"		3221314	1					
ANR	3221347	ForInit	"p = ( uint8_t * ) buf , plim = p + count * 2 ;"	197:13:6266:6297	3221314	0	True				
ANR	3221348	Expression	"p = ( uint8_t * ) buf , plim = p + count * 2"		3221314	0					
ANR	3221349	AssignmentExpression	p = ( uint8_t * ) buf		3221314	0		=			
ANR	3221350	Identifier	p		3221314	0					
ANR	3221351	CastExpression	( uint8_t * ) buf		3221314	1					
ANR	3221352	CastTarget	uint8_t *		3221314	0					
ANR	3221353	Identifier	buf		3221314	1					
ANR	3221354	AssignmentExpression	plim = p + count * 2		3221314	1		=			
ANR	3221355	Identifier	plim		3221314	0					
ANR	3221356	AdditiveExpression	p + count * 2		3221314	1		+			
ANR	3221357	Identifier	p		3221314	0					
ANR	3221358	MultiplicativeExpression	count * 2		3221314	1		*			
ANR	3221359	Identifier	count		3221314	0					
ANR	3221360	PrimaryExpression	2		3221314	1					
ANR	3221361	Condition	p < plim	197:46:6299:6304	3221314	1	True				
ANR	3221362	RelationalExpression	p < plim		3221314	0		<			
ANR	3221363	Identifier	p		3221314	0					
ANR	3221364	Identifier	plim		3221314	1					
ANR	3221365	AssignmentExpression	p += 2	197:54:6307:6310	3221314	2	True	+=			
ANR	3221366	Identifier	p		3221314	0					
ANR	3221367	PrimaryExpression	2		3221314	1					
ANR	3221368	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"	198:12:6325:6350	3221314	3	True				
ANR	3221369	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		3221314	0					
ANR	3221370	AssignmentExpression	t = p [ 0 ]		3221314	0		=			
ANR	3221371	Identifier	t		3221314	0					
ANR	3221372	ArrayIndexing	p [ 0 ]		3221314	1					
ANR	3221373	Identifier	p		3221314	0					
ANR	3221374	PrimaryExpression	0		3221314	1					
ANR	3221375	Expression	"p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		3221314	1					
ANR	3221376	AssignmentExpression	p [ 0 ] = p [ 1 ]		3221314	0		=			
ANR	3221377	ArrayIndexing	p [ 0 ]		3221314	0					
ANR	3221378	Identifier	p		3221314	0					
ANR	3221379	PrimaryExpression	0		3221314	1					
ANR	3221380	ArrayIndexing	p [ 1 ]		3221314	1					
ANR	3221381	Identifier	p		3221314	0					
ANR	3221382	PrimaryExpression	1		3221314	1					
ANR	3221383	AssignmentExpression	p [ 1 ] = t		3221314	1		=			
ANR	3221384	ArrayIndexing	p [ 1 ]		3221314	0					
ANR	3221385	Identifier	p		3221314	0					
ANR	3221386	PrimaryExpression	1		3221314	1					
ANR	3221387	Identifier	t		3221314	1					
ANR	3221388	ReturnType	static void		3221314	1					
ANR	3221389	Identifier	read_uint16		3221314	2					
ANR	3221390	ParameterList	"context * con , uint16_t * buf , int count"		3221314	3					
ANR	3221391	Parameter	context * con	192:24:6125:6136	3221314	0	True				
ANR	3221392	ParameterType	context *		3221314	0					
ANR	3221393	Identifier	con		3221314	1					
ANR	3221394	Parameter	uint16_t * buf	192:38:6139:6151	3221314	1	True				
ANR	3221395	ParameterType	uint16_t *		3221314	0					
ANR	3221396	Identifier	buf		3221314	1					
ANR	3221397	Parameter	int count	192:53:6154:6162	3221314	2	True				
ANR	3221398	ParameterType	int		3221314	0					
ANR	3221399	Identifier	count		3221314	1					
ANR	3221400	CFGEntryNode	ENTRY		3221314		True				
ANR	3221401	CFGExitNode	EXIT		3221314		True				
ANR	3221402	Symbol	con -> swap		3221314						
ANR	3221403	Symbol	p		3221314						
ANR	3221404	Symbol	buf		3221314						
ANR	3221405	Symbol	con		3221314						
ANR	3221406	Symbol	* con		3221314						
ANR	3221407	Symbol	t		3221314						
ANR	3221408	Symbol	plim		3221314						
ANR	3221409	Symbol	count		3221314						
ANR	3221410	Symbol	* p		3221314						
ANR	3221411	Function	read_uint32	202:0:6361:6645							
ANR	3221412	FunctionDef	"read_uint32 (context * con , uint32_t * buf , int count)"		3221411	0					
ANR	3221413	CompoundStatement		203:0:6425:6645	3221411	0					
ANR	3221414	ExpressionStatement	"read_data ( con , buf , 4 , count )"	204:4:6431:6460	3221411	0	True				
ANR	3221415	CallExpression	"read_data ( con , buf , 4 , count )"		3221411	0					
ANR	3221416	Callee	read_data		3221411	0					
ANR	3221417	Identifier	read_data		3221411	0					
ANR	3221418	ArgumentList	con		3221411	1					
ANR	3221419	Argument	con		3221411	0					
ANR	3221420	Identifier	con		3221411	0					
ANR	3221421	Argument	buf		3221411	1					
ANR	3221422	Identifier	buf		3221411	0					
ANR	3221423	Argument	4		3221411	2					
ANR	3221424	PrimaryExpression	4		3221411	0					
ANR	3221425	Argument	count		3221411	3					
ANR	3221426	Identifier	count		3221411	0					
ANR	3221427	IfStatement	if ( con -> swap )		3221411	1					
ANR	3221428	Condition	con -> swap	205:8:6470:6478	3221411	0	True				
ANR	3221429	PtrMemberAccess	con -> swap		3221411	0					
ANR	3221430	Identifier	con		3221411	0					
ANR	3221431	Identifier	swap		3221411	1					
ANR	3221432	CompoundStatement		4:8:65:85	3221411	1					
ANR	3221433	IdentifierDeclStatement	"uint8_t * p , * plim , t ;"	206:8:6491:6511	3221411	0	True				
ANR	3221434	IdentifierDecl	* p		3221411	0					
ANR	3221435	IdentifierDeclType	uint8_t *		3221411	0					
ANR	3221436	Identifier	p		3221411	1					
ANR	3221437	IdentifierDecl	* plim		3221411	1					
ANR	3221438	IdentifierDeclType	uint8_t *		3221411	0					
ANR	3221439	Identifier	plim		3221411	1					
ANR	3221440	IdentifierDecl	t		3221411	2					
ANR	3221441	IdentifierDeclType	uint8_t		3221411	0					
ANR	3221442	Identifier	t		3221411	1					
ANR	3221443	ForStatement	"for ( p = ( uint8_t * ) buf , plim = p + count * 4 ; p < plim ; p += 4 )"		3221411	1					
ANR	3221444	ForInit	"p = ( uint8_t * ) buf , plim = p + count * 4 ;"	207:13:6526:6557	3221411	0	True				
ANR	3221445	Expression	"p = ( uint8_t * ) buf , plim = p + count * 4"		3221411	0					
ANR	3221446	AssignmentExpression	p = ( uint8_t * ) buf		3221411	0		=			
ANR	3221447	Identifier	p		3221411	0					
ANR	3221448	CastExpression	( uint8_t * ) buf		3221411	1					
ANR	3221449	CastTarget	uint8_t *		3221411	0					
ANR	3221450	Identifier	buf		3221411	1					
ANR	3221451	AssignmentExpression	plim = p + count * 4		3221411	1		=			
ANR	3221452	Identifier	plim		3221411	0					
ANR	3221453	AdditiveExpression	p + count * 4		3221411	1		+			
ANR	3221454	Identifier	p		3221411	0					
ANR	3221455	MultiplicativeExpression	count * 4		3221411	1		*			
ANR	3221456	Identifier	count		3221411	0					
ANR	3221457	PrimaryExpression	4		3221411	1					
ANR	3221458	Condition	p < plim	207:46:6559:6564	3221411	1	True				
ANR	3221459	RelationalExpression	p < plim		3221411	0		<			
ANR	3221460	Identifier	p		3221411	0					
ANR	3221461	Identifier	plim		3221411	1					
ANR	3221462	AssignmentExpression	p += 4	207:54:6567:6570	3221411	2	True	+=			
ANR	3221463	Identifier	p		3221411	0					
ANR	3221464	PrimaryExpression	4		3221411	1					
ANR	3221465	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"	208:12:6585:6637	3221411	3	True				
ANR	3221466	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221411	0					
ANR	3221467	AssignmentExpression	t = p [ 0 ]		3221411	0		=			
ANR	3221468	Identifier	t		3221411	0					
ANR	3221469	ArrayIndexing	p [ 0 ]		3221411	1					
ANR	3221470	Identifier	p		3221411	0					
ANR	3221471	PrimaryExpression	0		3221411	1					
ANR	3221472	Expression	"p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221411	1					
ANR	3221473	AssignmentExpression	p [ 0 ] = p [ 3 ]		3221411	0		=			
ANR	3221474	ArrayIndexing	p [ 0 ]		3221411	0					
ANR	3221475	Identifier	p		3221411	0					
ANR	3221476	PrimaryExpression	0		3221411	1					
ANR	3221477	ArrayIndexing	p [ 3 ]		3221411	1					
ANR	3221478	Identifier	p		3221411	0					
ANR	3221479	PrimaryExpression	3		3221411	1					
ANR	3221480	Expression	"p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221411	1					
ANR	3221481	AssignmentExpression	p [ 3 ] = t		3221411	0		=			
ANR	3221482	ArrayIndexing	p [ 3 ]		3221411	0					
ANR	3221483	Identifier	p		3221411	0					
ANR	3221484	PrimaryExpression	3		3221411	1					
ANR	3221485	Identifier	t		3221411	1					
ANR	3221486	Expression	"t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221411	1					
ANR	3221487	AssignmentExpression	t = p [ 1 ]		3221411	0		=			
ANR	3221488	Identifier	t		3221411	0					
ANR	3221489	ArrayIndexing	p [ 1 ]		3221411	1					
ANR	3221490	Identifier	p		3221411	0					
ANR	3221491	PrimaryExpression	1		3221411	1					
ANR	3221492	Expression	"p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221411	1					
ANR	3221493	AssignmentExpression	p [ 1 ] = p [ 2 ]		3221411	0		=			
ANR	3221494	ArrayIndexing	p [ 1 ]		3221411	0					
ANR	3221495	Identifier	p		3221411	0					
ANR	3221496	PrimaryExpression	1		3221411	1					
ANR	3221497	ArrayIndexing	p [ 2 ]		3221411	1					
ANR	3221498	Identifier	p		3221411	0					
ANR	3221499	PrimaryExpression	2		3221411	1					
ANR	3221500	AssignmentExpression	p [ 2 ] = t		3221411	1		=			
ANR	3221501	ArrayIndexing	p [ 2 ]		3221411	0					
ANR	3221502	Identifier	p		3221411	0					
ANR	3221503	PrimaryExpression	2		3221411	1					
ANR	3221504	Identifier	t		3221411	1					
ANR	3221505	ReturnType	static void		3221411	1					
ANR	3221506	Identifier	read_uint32		3221411	2					
ANR	3221507	ParameterList	"context * con , uint32_t * buf , int count"		3221411	3					
ANR	3221508	Parameter	context * con	202:24:6385:6396	3221411	0	True				
ANR	3221509	ParameterType	context *		3221411	0					
ANR	3221510	Identifier	con		3221411	1					
ANR	3221511	Parameter	uint32_t * buf	202:38:6399:6411	3221411	1	True				
ANR	3221512	ParameterType	uint32_t *		3221411	0					
ANR	3221513	Identifier	buf		3221411	1					
ANR	3221514	Parameter	int count	202:53:6414:6422	3221411	2	True				
ANR	3221515	ParameterType	int		3221411	0					
ANR	3221516	Identifier	count		3221411	1					
ANR	3221517	CFGEntryNode	ENTRY		3221411		True				
ANR	3221518	CFGExitNode	EXIT		3221411		True				
ANR	3221519	Symbol	con -> swap		3221411						
ANR	3221520	Symbol	p		3221411						
ANR	3221521	Symbol	buf		3221411						
ANR	3221522	Symbol	con		3221411						
ANR	3221523	Symbol	* con		3221411						
ANR	3221524	Symbol	t		3221411						
ANR	3221525	Symbol	plim		3221411						
ANR	3221526	Symbol	count		3221411						
ANR	3221527	Symbol	* p		3221411						
ANR	3221528	Function	get_uint8	212:0:6648:6753							
ANR	3221529	FunctionDef	get_uint8 (context * con)		3221528	0					
ANR	3221530	CompoundStatement		213:0:6694:6753	3221528	0					
ANR	3221531	IdentifierDeclStatement	uint8_t c ;	214:4:6700:6709	3221528	0	True				
ANR	3221532	IdentifierDecl	c		3221528	0					
ANR	3221533	IdentifierDeclType	uint8_t		3221528	0					
ANR	3221534	Identifier	c		3221528	1					
ANR	3221535	ExpressionStatement	"read_uint8 ( con , & c , 1 )"	215:4:6715:6737	3221528	1	True				
ANR	3221536	CallExpression	"read_uint8 ( con , & c , 1 )"		3221528	0					
ANR	3221537	Callee	read_uint8		3221528	0					
ANR	3221538	Identifier	read_uint8		3221528	0					
ANR	3221539	ArgumentList	con		3221528	1					
ANR	3221540	Argument	con		3221528	0					
ANR	3221541	Identifier	con		3221528	0					
ANR	3221542	Argument	& c		3221528	1					
ANR	3221543	UnaryOperationExpression	& c		3221528	0					
ANR	3221544	UnaryOperator	&		3221528	0					
ANR	3221545	Identifier	c		3221528	1					
ANR	3221546	Argument	1		3221528	2					
ANR	3221547	PrimaryExpression	1		3221528	0					
ANR	3221548	ReturnStatement	return c ;	216:4:6743:6751	3221528	2	True				
ANR	3221549	Identifier	c		3221528	0					
ANR	3221550	ReturnType	static inline uint8_t		3221528	1					
ANR	3221551	Identifier	get_uint8		3221528	2					
ANR	3221552	ParameterList	context * con		3221528	3					
ANR	3221553	Parameter	context * con	212:32:6680:6691	3221528	0	True				
ANR	3221554	ParameterType	context *		3221528	0					
ANR	3221555	Identifier	con		3221528	1					
ANR	3221556	CFGEntryNode	ENTRY		3221528		True				
ANR	3221557	CFGExitNode	EXIT		3221528		True				
ANR	3221558	Symbol	con		3221528						
ANR	3221559	Symbol	c		3221528						
ANR	3221560	Symbol	& c		3221528						
ANR	3221561	Function	get_uint16	219:0:6756:6865							
ANR	3221562	FunctionDef	get_uint16 (context * con)		3221561	0					
ANR	3221563	CompoundStatement		220:0:6804:6865	3221561	0					
ANR	3221564	IdentifierDeclStatement	uint16_t c ;	221:4:6810:6820	3221561	0	True				
ANR	3221565	IdentifierDecl	c		3221561	0					
ANR	3221566	IdentifierDeclType	uint16_t		3221561	0					
ANR	3221567	Identifier	c		3221561	1					
ANR	3221568	ExpressionStatement	"read_uint16 ( con , & c , 1 )"	222:4:6826:6849	3221561	1	True				
ANR	3221569	CallExpression	"read_uint16 ( con , & c , 1 )"		3221561	0					
ANR	3221570	Callee	read_uint16		3221561	0					
ANR	3221571	Identifier	read_uint16		3221561	0					
ANR	3221572	ArgumentList	con		3221561	1					
ANR	3221573	Argument	con		3221561	0					
ANR	3221574	Identifier	con		3221561	0					
ANR	3221575	Argument	& c		3221561	1					
ANR	3221576	UnaryOperationExpression	& c		3221561	0					
ANR	3221577	UnaryOperator	&		3221561	0					
ANR	3221578	Identifier	c		3221561	1					
ANR	3221579	Argument	1		3221561	2					
ANR	3221580	PrimaryExpression	1		3221561	0					
ANR	3221581	ReturnStatement	return c ;	223:4:6855:6863	3221561	2	True				
ANR	3221582	Identifier	c		3221561	0					
ANR	3221583	ReturnType	static inline uint16_t		3221561	1					
ANR	3221584	Identifier	get_uint16		3221561	2					
ANR	3221585	ParameterList	context * con		3221561	3					
ANR	3221586	Parameter	context * con	219:34:6790:6801	3221561	0	True				
ANR	3221587	ParameterType	context *		3221561	0					
ANR	3221588	Identifier	con		3221561	1					
ANR	3221589	CFGEntryNode	ENTRY		3221561		True				
ANR	3221590	CFGExitNode	EXIT		3221561		True				
ANR	3221591	Symbol	con		3221561						
ANR	3221592	Symbol	c		3221561						
ANR	3221593	Symbol	& c		3221561						
ANR	3221594	Function	get_uint32	226:0:6868:6977							
ANR	3221595	FunctionDef	get_uint32 (context * con)		3221594	0					
ANR	3221596	CompoundStatement		227:0:6916:6977	3221594	0					
ANR	3221597	IdentifierDeclStatement	uint32_t c ;	228:4:6922:6932	3221594	0	True				
ANR	3221598	IdentifierDecl	c		3221594	0					
ANR	3221599	IdentifierDeclType	uint32_t		3221594	0					
ANR	3221600	Identifier	c		3221594	1					
ANR	3221601	ExpressionStatement	"read_uint32 ( con , & c , 1 )"	229:4:6938:6961	3221594	1	True				
ANR	3221602	CallExpression	"read_uint32 ( con , & c , 1 )"		3221594	0					
ANR	3221603	Callee	read_uint32		3221594	0					
ANR	3221604	Identifier	read_uint32		3221594	0					
ANR	3221605	ArgumentList	con		3221594	1					
ANR	3221606	Argument	con		3221594	0					
ANR	3221607	Identifier	con		3221594	0					
ANR	3221608	Argument	& c		3221594	1					
ANR	3221609	UnaryOperationExpression	& c		3221594	0					
ANR	3221610	UnaryOperator	&		3221594	0					
ANR	3221611	Identifier	c		3221594	1					
ANR	3221612	Argument	1		3221594	2					
ANR	3221613	PrimaryExpression	1		3221594	0					
ANR	3221614	ReturnStatement	return c ;	230:4:6967:6975	3221594	2	True				
ANR	3221615	Identifier	c		3221594	0					
ANR	3221616	ReturnType	static inline uint32_t		3221594	1					
ANR	3221617	Identifier	get_uint32		3221594	2					
ANR	3221618	ParameterList	context * con		3221594	3					
ANR	3221619	Parameter	context * con	226:34:6902:6913	3221594	0	True				
ANR	3221620	ParameterType	context *		3221594	0					
ANR	3221621	Identifier	con		3221594	1					
ANR	3221622	CFGEntryNode	ENTRY		3221594		True				
ANR	3221623	CFGExitNode	EXIT		3221594		True				
ANR	3221624	Symbol	con		3221594						
ANR	3221625	Symbol	c		3221594						
ANR	3221626	Symbol	& c		3221594						
ANR	3221627	Function	seek_file	233:0:6980:7181							
ANR	3221628	FunctionDef	"seek_file (context * con , long offset , int whence)"		3221627	0					
ANR	3221629	CompoundStatement		234:0:7041:7181	3221627	0					
ANR	3221630	IdentifierDeclStatement	"int rc = fseek ( con -> file , offset , whence ) ;"	235:4:7047:7088	3221627	0	True				
ANR	3221631	IdentifierDecl	"rc = fseek ( con -> file , offset , whence )"		3221627	0					
ANR	3221632	IdentifierDeclType	int		3221627	0					
ANR	3221633	Identifier	rc		3221627	1					
ANR	3221634	AssignmentExpression	"rc = fseek ( con -> file , offset , whence )"		3221627	2		=			
ANR	3221635	Identifier	rc		3221627	0					
ANR	3221636	CallExpression	"fseek ( con -> file , offset , whence )"		3221627	1					
ANR	3221637	Callee	fseek		3221627	0					
ANR	3221638	Identifier	fseek		3221627	0					
ANR	3221639	ArgumentList	con -> file		3221627	1					
ANR	3221640	Argument	con -> file		3221627	0					
ANR	3221641	PtrMemberAccess	con -> file		3221627	0					
ANR	3221642	Identifier	con		3221627	0					
ANR	3221643	Identifier	file		3221627	1					
ANR	3221644	Argument	offset		3221627	1					
ANR	3221645	Identifier	offset		3221627	0					
ANR	3221646	Argument	whence		3221627	2					
ANR	3221647	Identifier	whence		3221627	0					
ANR	3221648	IfStatement	if ( rc != 0 )		3221627	1					
ANR	3221649	Condition	rc != 0	236:8:7098:7102	3221627	0	True				
ANR	3221650	EqualityExpression	rc != 0		3221627	0		!=			
ANR	3221651	Identifier	rc		3221627	0					
ANR	3221652	PrimaryExpression	0		3221627	1					
ANR	3221653	ExpressionStatement	"error ( ""cannot seek to desired offset in input file %s"" , con -> name )"	237:8:7113:7179	3221627	1	True				
ANR	3221654	CallExpression	"error ( ""cannot seek to desired offset in input file %s"" , con -> name )"		3221627	0					
ANR	3221655	Callee	error		3221627	0					
ANR	3221656	Identifier	error		3221627	0					
ANR	3221657	ArgumentList	"""cannot seek to desired offset in input file %s"""		3221627	1					
ANR	3221658	Argument	"""cannot seek to desired offset in input file %s"""		3221627	0					
ANR	3221659	PrimaryExpression	"""cannot seek to desired offset in input file %s"""		3221627	0					
ANR	3221660	Argument	con -> name		3221627	1					
ANR	3221661	PtrMemberAccess	con -> name		3221627	0					
ANR	3221662	Identifier	con		3221627	0					
ANR	3221663	Identifier	name		3221627	1					
ANR	3221664	ReturnType	static void		3221627	1					
ANR	3221665	Identifier	seek_file		3221627	2					
ANR	3221666	ParameterList	"context * con , long offset , int whence"		3221627	3					
ANR	3221667	Parameter	context * con	233:22:7002:7013	3221627	0	True				
ANR	3221668	ParameterType	context *		3221627	0					
ANR	3221669	Identifier	con		3221627	1					
ANR	3221670	Parameter	long offset	233:36:7016:7026	3221627	1	True				
ANR	3221671	ParameterType	long		3221627	0					
ANR	3221672	Identifier	offset		3221627	1					
ANR	3221673	Parameter	int whence	233:49:7029:7038	3221627	2	True				
ANR	3221674	ParameterType	int		3221627	0					
ANR	3221675	Identifier	whence		3221627	1					
ANR	3221676	CFGEntryNode	ENTRY		3221627		True				
ANR	3221677	CFGExitNode	EXIT		3221627		True				
ANR	3221678	Symbol	rc		3221627						
ANR	3221679	Symbol	con		3221627						
ANR	3221680	Symbol	con -> file		3221627						
ANR	3221681	Symbol	* con		3221627						
ANR	3221682	Symbol	offset		3221627						
ANR	3221683	Symbol	whence		3221627						
ANR	3221684	Symbol	fseek		3221627						
ANR	3221685	Symbol	con -> name		3221627						
ANR	3221686	Function	write_data	242:0:7216:7428							
ANR	3221687	FunctionDef	"write_data (context * con , const void * buf , int size , int count)"		3221686	0					
ANR	3221688	CompoundStatement		243:0:7291:7428	3221686	0					
ANR	3221689	IdentifierDeclStatement	"size_t rc = fwrite ( buf , size , count , con -> file ) ;"	244:4:7297:7344	3221686	0	True				
ANR	3221690	IdentifierDecl	"rc = fwrite ( buf , size , count , con -> file )"		3221686	0					
ANR	3221691	IdentifierDeclType	size_t		3221686	0					
ANR	3221692	Identifier	rc		3221686	1					
ANR	3221693	AssignmentExpression	"rc = fwrite ( buf , size , count , con -> file )"		3221686	2		=			
ANR	3221694	Identifier	rc		3221686	0					
ANR	3221695	CallExpression	"fwrite ( buf , size , count , con -> file )"		3221686	1					
ANR	3221696	Callee	fwrite		3221686	0					
ANR	3221697	Identifier	fwrite		3221686	0					
ANR	3221698	ArgumentList	buf		3221686	1					
ANR	3221699	Argument	buf		3221686	0					
ANR	3221700	Identifier	buf		3221686	0					
ANR	3221701	Argument	size		3221686	1					
ANR	3221702	Identifier	size		3221686	0					
ANR	3221703	Argument	count		3221686	2					
ANR	3221704	Identifier	count		3221686	0					
ANR	3221705	Argument	con -> file		3221686	3					
ANR	3221706	PtrMemberAccess	con -> file		3221686	0					
ANR	3221707	Identifier	con		3221686	0					
ANR	3221708	Identifier	file		3221686	1					
ANR	3221709	IfStatement	if ( rc != count )		3221686	1					
ANR	3221710	Condition	rc != count	245:8:7354:7362	3221686	0	True				
ANR	3221711	EqualityExpression	rc != count		3221686	0		!=			
ANR	3221712	Identifier	rc		3221686	0					
ANR	3221713	Identifier	count		3221686	1					
ANR	3221714	ExpressionStatement	"error ( ""unable to write to output file %s"" , con -> name )"	246:8:7373:7426	3221686	1	True				
ANR	3221715	CallExpression	"error ( ""unable to write to output file %s"" , con -> name )"		3221686	0					
ANR	3221716	Callee	error		3221686	0					
ANR	3221717	Identifier	error		3221686	0					
ANR	3221718	ArgumentList	"""unable to write to output file %s"""		3221686	1					
ANR	3221719	Argument	"""unable to write to output file %s"""		3221686	0					
ANR	3221720	PrimaryExpression	"""unable to write to output file %s"""		3221686	0					
ANR	3221721	Argument	con -> name		3221686	1					
ANR	3221722	PtrMemberAccess	con -> name		3221686	0					
ANR	3221723	Identifier	con		3221686	0					
ANR	3221724	Identifier	name		3221686	1					
ANR	3221725	ReturnType	static void		3221686	1					
ANR	3221726	Identifier	write_data		3221686	2					
ANR	3221727	ParameterList	"context * con , const void * buf , int size , int count"		3221686	3					
ANR	3221728	Parameter	context * con	242:23:7239:7250	3221686	0	True				
ANR	3221729	ParameterType	context *		3221686	0					
ANR	3221730	Identifier	con		3221686	1					
ANR	3221731	Parameter	const void * buf	242:37:7253:7267	3221686	1	True				
ANR	3221732	ParameterType	const void *		3221686	0					
ANR	3221733	Identifier	buf		3221686	1					
ANR	3221734	Parameter	int size	242:54:7270:7277	3221686	2	True				
ANR	3221735	ParameterType	int		3221686	0					
ANR	3221736	Identifier	size		3221686	1					
ANR	3221737	Parameter	int count	242:64:7280:7288	3221686	3	True				
ANR	3221738	ParameterType	int		3221686	0					
ANR	3221739	Identifier	count		3221686	1					
ANR	3221740	CFGEntryNode	ENTRY		3221686		True				
ANR	3221741	CFGExitNode	EXIT		3221686		True				
ANR	3221742	Symbol	rc		3221686						
ANR	3221743	Symbol	buf		3221686						
ANR	3221744	Symbol	con		3221686						
ANR	3221745	Symbol	con -> file		3221686						
ANR	3221746	Symbol	* con		3221686						
ANR	3221747	Symbol	size		3221686						
ANR	3221748	Symbol	count		3221686						
ANR	3221749	Symbol	fwrite		3221686						
ANR	3221750	Symbol	con -> name		3221686						
ANR	3221751	Function	write_uint8	249:0:7431:7545							
ANR	3221752	FunctionDef	"write_uint8 (context * con , const uint8_t * buf , int count)"		3221751	0					
ANR	3221753	CompoundStatement		250:0:7507:7545	3221751	0					
ANR	3221754	ExpressionStatement	"write_data ( con , buf , 1 , count )"	251:4:7513:7543	3221751	0	True				
ANR	3221755	CallExpression	"write_data ( con , buf , 1 , count )"		3221751	0					
ANR	3221756	Callee	write_data		3221751	0					
ANR	3221757	Identifier	write_data		3221751	0					
ANR	3221758	ArgumentList	con		3221751	1					
ANR	3221759	Argument	con		3221751	0					
ANR	3221760	Identifier	con		3221751	0					
ANR	3221761	Argument	buf		3221751	1					
ANR	3221762	Identifier	buf		3221751	0					
ANR	3221763	Argument	1		3221751	2					
ANR	3221764	PrimaryExpression	1		3221751	0					
ANR	3221765	Argument	count		3221751	3					
ANR	3221766	Identifier	count		3221751	0					
ANR	3221767	ReturnType	static inline void		3221751	1					
ANR	3221768	Identifier	write_uint8		3221751	2					
ANR	3221769	ParameterList	"context * con , const uint8_t * buf , int count"		3221751	3					
ANR	3221770	Parameter	context * con	249:31:7462:7473	3221751	0	True				
ANR	3221771	ParameterType	context *		3221751	0					
ANR	3221772	Identifier	con		3221751	1					
ANR	3221773	Parameter	const uint8_t * buf	249:45:7476:7493	3221751	1	True				
ANR	3221774	ParameterType	const uint8_t *		3221751	0					
ANR	3221775	Identifier	buf		3221751	1					
ANR	3221776	Parameter	int count	249:65:7496:7504	3221751	2	True				
ANR	3221777	ParameterType	int		3221751	0					
ANR	3221778	Identifier	count		3221751	1					
ANR	3221779	CFGEntryNode	ENTRY		3221751		True				
ANR	3221780	CFGExitNode	EXIT		3221751		True				
ANR	3221781	Symbol	buf		3221751						
ANR	3221782	Symbol	con		3221751						
ANR	3221783	Symbol	count		3221751						
ANR	3221784	Function	write_uint16	254:0:7548:7821							
ANR	3221785	FunctionDef	"write_uint16 (context * con , uint16_t * buf , int count)"		3221784	0					
ANR	3221786	CompoundStatement		255:0:7613:7821	3221784	0					
ANR	3221787	IfStatement	if ( con -> swap )		3221784	0					
ANR	3221788	Condition	con -> swap	256:8:7623:7631	3221784	0	True				
ANR	3221789	PtrMemberAccess	con -> swap		3221784	0					
ANR	3221790	Identifier	con		3221784	0					
ANR	3221791	Identifier	swap		3221784	1					
ANR	3221792	CompoundStatement		3:8:50:67	3221784	1					
ANR	3221793	IdentifierDeclStatement	"char * p , * plim , t ;"	257:8:7664:7681	3221784	0	True				
ANR	3221794	IdentifierDecl	* p		3221784	0					
ANR	3221795	IdentifierDeclType	char *		3221784	0					
ANR	3221796	Identifier	p		3221784	1					
ANR	3221797	IdentifierDecl	* plim		3221784	1					
ANR	3221798	IdentifierDeclType	char *		3221784	0					
ANR	3221799	Identifier	plim		3221784	1					
ANR	3221800	IdentifierDecl	t		3221784	2					
ANR	3221801	IdentifierDeclType	char		3221784	0					
ANR	3221802	Identifier	t		3221784	1					
ANR	3221803	ForStatement	"for ( p = ( char * ) buf , plim = p + count * 2 ; p < plim ; p += 2 )"		3221784	1					
ANR	3221804	ForInit	"p = ( char * ) buf , plim = p + count * 2 ;"	258:13:7696:7724	3221784	0	True				
ANR	3221805	Expression	"p = ( char * ) buf , plim = p + count * 2"		3221784	0					
ANR	3221806	AssignmentExpression	p = ( char * ) buf		3221784	0		=			
ANR	3221807	Identifier	p		3221784	0					
ANR	3221808	CastExpression	( char * ) buf		3221784	1					
ANR	3221809	CastTarget	char *		3221784	0					
ANR	3221810	Identifier	buf		3221784	1					
ANR	3221811	AssignmentExpression	plim = p + count * 2		3221784	1		=			
ANR	3221812	Identifier	plim		3221784	0					
ANR	3221813	AdditiveExpression	p + count * 2		3221784	1		+			
ANR	3221814	Identifier	p		3221784	0					
ANR	3221815	MultiplicativeExpression	count * 2		3221784	1		*			
ANR	3221816	Identifier	count		3221784	0					
ANR	3221817	PrimaryExpression	2		3221784	1					
ANR	3221818	Condition	p < plim	258:43:7726:7731	3221784	1	True				
ANR	3221819	RelationalExpression	p < plim		3221784	0		<			
ANR	3221820	Identifier	p		3221784	0					
ANR	3221821	Identifier	plim		3221784	1					
ANR	3221822	AssignmentExpression	p += 2	258:51:7734:7737	3221784	2	True	+=			
ANR	3221823	Identifier	p		3221784	0					
ANR	3221824	PrimaryExpression	2		3221784	1					
ANR	3221825	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"	259:12:7752:7777	3221784	3	True				
ANR	3221826	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		3221784	0					
ANR	3221827	AssignmentExpression	t = p [ 0 ]		3221784	0		=			
ANR	3221828	Identifier	t		3221784	0					
ANR	3221829	ArrayIndexing	p [ 0 ]		3221784	1					
ANR	3221830	Identifier	p		3221784	0					
ANR	3221831	PrimaryExpression	0		3221784	1					
ANR	3221832	Expression	"p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		3221784	1					
ANR	3221833	AssignmentExpression	p [ 0 ] = p [ 1 ]		3221784	0		=			
ANR	3221834	ArrayIndexing	p [ 0 ]		3221784	0					
ANR	3221835	Identifier	p		3221784	0					
ANR	3221836	PrimaryExpression	0		3221784	1					
ANR	3221837	ArrayIndexing	p [ 1 ]		3221784	1					
ANR	3221838	Identifier	p		3221784	0					
ANR	3221839	PrimaryExpression	1		3221784	1					
ANR	3221840	AssignmentExpression	p [ 1 ] = t		3221784	1		=			
ANR	3221841	ArrayIndexing	p [ 1 ]		3221784	0					
ANR	3221842	Identifier	p		3221784	0					
ANR	3221843	PrimaryExpression	1		3221784	1					
ANR	3221844	Identifier	t		3221784	1					
ANR	3221845	ExpressionStatement	"write_data ( con , buf , 2 , count )"	261:4:7789:7819	3221784	1	True				
ANR	3221846	CallExpression	"write_data ( con , buf , 2 , count )"		3221784	0					
ANR	3221847	Callee	write_data		3221784	0					
ANR	3221848	Identifier	write_data		3221784	0					
ANR	3221849	ArgumentList	con		3221784	1					
ANR	3221850	Argument	con		3221784	0					
ANR	3221851	Identifier	con		3221784	0					
ANR	3221852	Argument	buf		3221784	1					
ANR	3221853	Identifier	buf		3221784	0					
ANR	3221854	Argument	2		3221784	2					
ANR	3221855	PrimaryExpression	2		3221784	0					
ANR	3221856	Argument	count		3221784	3					
ANR	3221857	Identifier	count		3221784	0					
ANR	3221858	ReturnType	static void		3221784	1					
ANR	3221859	Identifier	write_uint16		3221784	2					
ANR	3221860	ParameterList	"context * con , uint16_t * buf , int count"		3221784	3					
ANR	3221861	Parameter	context * con	254:25:7573:7584	3221784	0	True				
ANR	3221862	ParameterType	context *		3221784	0					
ANR	3221863	Identifier	con		3221784	1					
ANR	3221864	Parameter	uint16_t * buf	254:39:7587:7599	3221784	1	True				
ANR	3221865	ParameterType	uint16_t *		3221784	0					
ANR	3221866	Identifier	buf		3221784	1					
ANR	3221867	Parameter	int count	254:54:7602:7610	3221784	2	True				
ANR	3221868	ParameterType	int		3221784	0					
ANR	3221869	Identifier	count		3221784	1					
ANR	3221870	CFGEntryNode	ENTRY		3221784		True				
ANR	3221871	CFGExitNode	EXIT		3221784		True				
ANR	3221872	Symbol	con -> swap		3221784						
ANR	3221873	Symbol	p		3221784						
ANR	3221874	Symbol	buf		3221784						
ANR	3221875	Symbol	con		3221784						
ANR	3221876	Symbol	* con		3221784						
ANR	3221877	Symbol	plim		3221784						
ANR	3221878	Symbol	t		3221784						
ANR	3221879	Symbol	count		3221784						
ANR	3221880	Symbol	* p		3221784						
ANR	3221881	Function	write_uint32	264:0:7824:8124							
ANR	3221882	FunctionDef	"write_uint32 (context * con , uint32_t * buf , int count)"		3221881	0					
ANR	3221883	CompoundStatement		265:0:7889:8124	3221881	0					
ANR	3221884	IfStatement	if ( con -> swap )		3221881	0					
ANR	3221885	Condition	con -> swap	266:8:7899:7907	3221881	0	True				
ANR	3221886	PtrMemberAccess	con -> swap		3221881	0					
ANR	3221887	Identifier	con		3221881	0					
ANR	3221888	Identifier	swap		3221881	1					
ANR	3221889	CompoundStatement		3:8:50:67	3221881	1					
ANR	3221890	IdentifierDeclStatement	"char * p , * plim , t ;"	267:8:7940:7957	3221881	0	True				
ANR	3221891	IdentifierDecl	* p		3221881	0					
ANR	3221892	IdentifierDeclType	char *		3221881	0					
ANR	3221893	Identifier	p		3221881	1					
ANR	3221894	IdentifierDecl	* plim		3221881	1					
ANR	3221895	IdentifierDeclType	char *		3221881	0					
ANR	3221896	Identifier	plim		3221881	1					
ANR	3221897	IdentifierDecl	t		3221881	2					
ANR	3221898	IdentifierDeclType	char		3221881	0					
ANR	3221899	Identifier	t		3221881	1					
ANR	3221900	ForStatement	"for ( p = ( char * ) buf , plim = p + count * 4 ; p < plim ; p += 4 )"		3221881	1					
ANR	3221901	ForInit	"p = ( char * ) buf , plim = p + count * 4 ;"	268:13:7972:8000	3221881	0	True				
ANR	3221902	Expression	"p = ( char * ) buf , plim = p + count * 4"		3221881	0					
ANR	3221903	AssignmentExpression	p = ( char * ) buf		3221881	0		=			
ANR	3221904	Identifier	p		3221881	0					
ANR	3221905	CastExpression	( char * ) buf		3221881	1					
ANR	3221906	CastTarget	char *		3221881	0					
ANR	3221907	Identifier	buf		3221881	1					
ANR	3221908	AssignmentExpression	plim = p + count * 4		3221881	1		=			
ANR	3221909	Identifier	plim		3221881	0					
ANR	3221910	AdditiveExpression	p + count * 4		3221881	1		+			
ANR	3221911	Identifier	p		3221881	0					
ANR	3221912	MultiplicativeExpression	count * 4		3221881	1		*			
ANR	3221913	Identifier	count		3221881	0					
ANR	3221914	PrimaryExpression	4		3221881	1					
ANR	3221915	Condition	p < plim	268:43:8002:8007	3221881	1	True				
ANR	3221916	RelationalExpression	p < plim		3221881	0		<			
ANR	3221917	Identifier	p		3221881	0					
ANR	3221918	Identifier	plim		3221881	1					
ANR	3221919	AssignmentExpression	p += 4	268:51:8010:8013	3221881	2	True	+=			
ANR	3221920	Identifier	p		3221881	0					
ANR	3221921	PrimaryExpression	4		3221881	1					
ANR	3221922	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"	269:12:8028:8080	3221881	3	True				
ANR	3221923	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221881	0					
ANR	3221924	AssignmentExpression	t = p [ 0 ]		3221881	0		=			
ANR	3221925	Identifier	t		3221881	0					
ANR	3221926	ArrayIndexing	p [ 0 ]		3221881	1					
ANR	3221927	Identifier	p		3221881	0					
ANR	3221928	PrimaryExpression	0		3221881	1					
ANR	3221929	Expression	"p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221881	1					
ANR	3221930	AssignmentExpression	p [ 0 ] = p [ 3 ]		3221881	0		=			
ANR	3221931	ArrayIndexing	p [ 0 ]		3221881	0					
ANR	3221932	Identifier	p		3221881	0					
ANR	3221933	PrimaryExpression	0		3221881	1					
ANR	3221934	ArrayIndexing	p [ 3 ]		3221881	1					
ANR	3221935	Identifier	p		3221881	0					
ANR	3221936	PrimaryExpression	3		3221881	1					
ANR	3221937	Expression	"p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221881	1					
ANR	3221938	AssignmentExpression	p [ 3 ] = t		3221881	0		=			
ANR	3221939	ArrayIndexing	p [ 3 ]		3221881	0					
ANR	3221940	Identifier	p		3221881	0					
ANR	3221941	PrimaryExpression	3		3221881	1					
ANR	3221942	Identifier	t		3221881	1					
ANR	3221943	Expression	"t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221881	1					
ANR	3221944	AssignmentExpression	t = p [ 1 ]		3221881	0		=			
ANR	3221945	Identifier	t		3221881	0					
ANR	3221946	ArrayIndexing	p [ 1 ]		3221881	1					
ANR	3221947	Identifier	p		3221881	0					
ANR	3221948	PrimaryExpression	1		3221881	1					
ANR	3221949	Expression	"p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		3221881	1					
ANR	3221950	AssignmentExpression	p [ 1 ] = p [ 2 ]		3221881	0		=			
ANR	3221951	ArrayIndexing	p [ 1 ]		3221881	0					
ANR	3221952	Identifier	p		3221881	0					
ANR	3221953	PrimaryExpression	1		3221881	1					
ANR	3221954	ArrayIndexing	p [ 2 ]		3221881	1					
ANR	3221955	Identifier	p		3221881	0					
ANR	3221956	PrimaryExpression	2		3221881	1					
ANR	3221957	AssignmentExpression	p [ 2 ] = t		3221881	1		=			
ANR	3221958	ArrayIndexing	p [ 2 ]		3221881	0					
ANR	3221959	Identifier	p		3221881	0					
ANR	3221960	PrimaryExpression	2		3221881	1					
ANR	3221961	Identifier	t		3221881	1					
ANR	3221962	ExpressionStatement	"write_data ( con , buf , 4 , count )"	271:4:8092:8122	3221881	1	True				
ANR	3221963	CallExpression	"write_data ( con , buf , 4 , count )"		3221881	0					
ANR	3221964	Callee	write_data		3221881	0					
ANR	3221965	Identifier	write_data		3221881	0					
ANR	3221966	ArgumentList	con		3221881	1					
ANR	3221967	Argument	con		3221881	0					
ANR	3221968	Identifier	con		3221881	0					
ANR	3221969	Argument	buf		3221881	1					
ANR	3221970	Identifier	buf		3221881	0					
ANR	3221971	Argument	4		3221881	2					
ANR	3221972	PrimaryExpression	4		3221881	0					
ANR	3221973	Argument	count		3221881	3					
ANR	3221974	Identifier	count		3221881	0					
ANR	3221975	ReturnType	static void		3221881	1					
ANR	3221976	Identifier	write_uint32		3221881	2					
ANR	3221977	ParameterList	"context * con , uint32_t * buf , int count"		3221881	3					
ANR	3221978	Parameter	context * con	264:25:7849:7860	3221881	0	True				
ANR	3221979	ParameterType	context *		3221881	0					
ANR	3221980	Identifier	con		3221881	1					
ANR	3221981	Parameter	uint32_t * buf	264:39:7863:7875	3221881	1	True				
ANR	3221982	ParameterType	uint32_t *		3221881	0					
ANR	3221983	Identifier	buf		3221881	1					
ANR	3221984	Parameter	int count	264:54:7878:7886	3221881	2	True				
ANR	3221985	ParameterType	int		3221881	0					
ANR	3221986	Identifier	count		3221881	1					
ANR	3221987	CFGEntryNode	ENTRY		3221881		True				
ANR	3221988	CFGExitNode	EXIT		3221881		True				
ANR	3221989	Symbol	con -> swap		3221881						
ANR	3221990	Symbol	p		3221881						
ANR	3221991	Symbol	buf		3221881						
ANR	3221992	Symbol	con		3221881						
ANR	3221993	Symbol	* con		3221881						
ANR	3221994	Symbol	plim		3221881						
ANR	3221995	Symbol	t		3221881						
ANR	3221996	Symbol	count		3221881						
ANR	3221997	Symbol	* p		3221881						
ANR	3221998	Function	put_uint8	274:0:8127:8226							
ANR	3221999	FunctionDef	"put_uint8 (context * con , const uint8_t value)"		3221998	0					
ANR	3222000	CompoundStatement		275:0:8191:8226	3221998	0					
ANR	3222001	ExpressionStatement	"write_uint8 ( con , & value , 1 )"	276:4:8197:8224	3221998	0	True				
ANR	3222002	CallExpression	"write_uint8 ( con , & value , 1 )"		3221998	0					
ANR	3222003	Callee	write_uint8		3221998	0					
ANR	3222004	Identifier	write_uint8		3221998	0					
ANR	3222005	ArgumentList	con		3221998	1					
ANR	3222006	Argument	con		3221998	0					
ANR	3222007	Identifier	con		3221998	0					
ANR	3222008	Argument	& value		3221998	1					
ANR	3222009	UnaryOperationExpression	& value		3221998	0					
ANR	3222010	UnaryOperator	&		3221998	0					
ANR	3222011	Identifier	value		3221998	1					
ANR	3222012	Argument	1		3221998	2					
ANR	3222013	PrimaryExpression	1		3221998	0					
ANR	3222014	ReturnType	static inline void		3221998	1					
ANR	3222015	Identifier	put_uint8		3221998	2					
ANR	3222016	ParameterList	"context * con , const uint8_t value"		3221998	3					
ANR	3222017	Parameter	context * con	274:29:8156:8167	3221998	0	True				
ANR	3222018	ParameterType	context *		3221998	0					
ANR	3222019	Identifier	con		3221998	1					
ANR	3222020	Parameter	const uint8_t value	274:43:8170:8188	3221998	1	True				
ANR	3222021	ParameterType	const uint8_t		3221998	0					
ANR	3222022	Identifier	value		3221998	1					
ANR	3222023	CFGEntryNode	ENTRY		3221998		True				
ANR	3222024	CFGExitNode	EXIT		3221998		True				
ANR	3222025	Symbol	con		3221998						
ANR	3222026	Symbol	& value		3221998						
ANR	3222027	Symbol	value		3221998						
ANR	3222028	Function	put_uint16	279:0:8229:8355							
ANR	3222029	FunctionDef	"put_uint16 (context * con , const uint16_t value)"		3222028	0					
ANR	3222030	CompoundStatement		280:0:8295:8355	3222028	0					
ANR	3222031	IdentifierDeclStatement	uint16_t buf = value ;	281:4:8301:8321	3222028	0	True				
ANR	3222032	IdentifierDecl	buf = value		3222028	0					
ANR	3222033	IdentifierDeclType	uint16_t		3222028	0					
ANR	3222034	Identifier	buf		3222028	1					
ANR	3222035	AssignmentExpression	buf = value		3222028	2		=			
ANR	3222036	Identifier	value		3222028	0					
ANR	3222037	Identifier	value		3222028	1					
ANR	3222038	ExpressionStatement	"write_uint16 ( con , & buf , 1 )"	282:4:8327:8353	3222028	1	True				
ANR	3222039	CallExpression	"write_uint16 ( con , & buf , 1 )"		3222028	0					
ANR	3222040	Callee	write_uint16		3222028	0					
ANR	3222041	Identifier	write_uint16		3222028	0					
ANR	3222042	ArgumentList	con		3222028	1					
ANR	3222043	Argument	con		3222028	0					
ANR	3222044	Identifier	con		3222028	0					
ANR	3222045	Argument	& buf		3222028	1					
ANR	3222046	UnaryOperationExpression	& buf		3222028	0					
ANR	3222047	UnaryOperator	&		3222028	0					
ANR	3222048	Identifier	buf		3222028	1					
ANR	3222049	Argument	1		3222028	2					
ANR	3222050	PrimaryExpression	1		3222028	0					
ANR	3222051	ReturnType	static inline void		3222028	1					
ANR	3222052	Identifier	put_uint16		3222028	2					
ANR	3222053	ParameterList	"context * con , const uint16_t value"		3222028	3					
ANR	3222054	Parameter	context * con	279:30:8259:8270	3222028	0	True				
ANR	3222055	ParameterType	context *		3222028	0					
ANR	3222056	Identifier	con		3222028	1					
ANR	3222057	Parameter	const uint16_t value	279:44:8273:8292	3222028	1	True				
ANR	3222058	ParameterType	const uint16_t		3222028	0					
ANR	3222059	Identifier	value		3222028	1					
ANR	3222060	CFGEntryNode	ENTRY		3222028		True				
ANR	3222061	CFGExitNode	EXIT		3222028		True				
ANR	3222062	Symbol	buf		3222028						
ANR	3222063	Symbol	con		3222028						
ANR	3222064	Symbol	value		3222028						
ANR	3222065	Symbol	& buf		3222028						
ANR	3222066	Function	put_uint32	285:0:8358:8484							
ANR	3222067	FunctionDef	"put_uint32 (context * con , const uint32_t value)"		3222066	0					
ANR	3222068	CompoundStatement		286:0:8424:8484	3222066	0					
ANR	3222069	IdentifierDeclStatement	uint32_t buf = value ;	287:4:8430:8450	3222066	0	True				
ANR	3222070	IdentifierDecl	buf = value		3222066	0					
ANR	3222071	IdentifierDeclType	uint32_t		3222066	0					
ANR	3222072	Identifier	buf		3222066	1					
ANR	3222073	AssignmentExpression	buf = value		3222066	2		=			
ANR	3222074	Identifier	value		3222066	0					
ANR	3222075	Identifier	value		3222066	1					
ANR	3222076	ExpressionStatement	"write_uint32 ( con , & buf , 1 )"	288:4:8456:8482	3222066	1	True				
ANR	3222077	CallExpression	"write_uint32 ( con , & buf , 1 )"		3222066	0					
ANR	3222078	Callee	write_uint32		3222066	0					
ANR	3222079	Identifier	write_uint32		3222066	0					
ANR	3222080	ArgumentList	con		3222066	1					
ANR	3222081	Argument	con		3222066	0					
ANR	3222082	Identifier	con		3222066	0					
ANR	3222083	Argument	& buf		3222066	1					
ANR	3222084	UnaryOperationExpression	& buf		3222066	0					
ANR	3222085	UnaryOperator	&		3222066	0					
ANR	3222086	Identifier	buf		3222066	1					
ANR	3222087	Argument	1		3222066	2					
ANR	3222088	PrimaryExpression	1		3222066	0					
ANR	3222089	ReturnType	static inline void		3222066	1					
ANR	3222090	Identifier	put_uint32		3222066	2					
ANR	3222091	ParameterList	"context * con , const uint32_t value"		3222066	3					
ANR	3222092	Parameter	context * con	285:30:8388:8399	3222066	0	True				
ANR	3222093	ParameterType	context *		3222066	0					
ANR	3222094	Identifier	con		3222066	1					
ANR	3222095	Parameter	const uint32_t value	285:44:8402:8421	3222066	1	True				
ANR	3222096	ParameterType	const uint32_t		3222066	0					
ANR	3222097	Identifier	value		3222066	1					
ANR	3222098	CFGEntryNode	ENTRY		3222066		True				
ANR	3222099	CFGExitNode	EXIT		3222066		True				
ANR	3222100	Symbol	buf		3222066						
ANR	3222101	Symbol	con		3222066						
ANR	3222102	Symbol	value		3222066						
ANR	3222103	Symbol	& buf		3222066						
ANR	3222104	Function	read_pnm_number	293:0:8522:9100							
ANR	3222105	FunctionDef	read_pnm_number (context * con)		3222104	0					
ANR	3222106	CompoundStatement		294:0:8568:9100	3222104	0					
ANR	3222107	IdentifierDeclStatement	int c ;	295:4:8574:8579	3222104	0	True				
ANR	3222108	IdentifierDecl	c		3222104	0					
ANR	3222109	IdentifierDeclType	int		3222104	0					
ANR	3222110	Identifier	c		3222104	1					
ANR	3222111	IdentifierDeclStatement	unsigned n = 0 ;	296:4:8585:8597	3222104	1	True				
ANR	3222112	IdentifierDecl	n = 0		3222104	0					
ANR	3222113	IdentifierDeclType	unsigned		3222104	0					
ANR	3222114	Identifier	n		3222104	1					
ANR	3222115	AssignmentExpression	n = 0		3222104	2		=			
ANR	3222116	Identifier	n		3222104	0					
ANR	3222117	PrimaryExpression	0		3222104	1					
ANR	3222118	WhileStatement	while ( 1 )		3222104	2					
ANR	3222119	Condition	1	298:11:8611:8611	3222104	0	True				
ANR	3222120	PrimaryExpression	1		3222104	0					
ANR	3222121	CompoundStatement		5:14:45:45	3222104	1					
ANR	3222122	ExpressionStatement	c = get_uint8 ( con )	299:8:8624:8642	3222104	0	True				
ANR	3222123	AssignmentExpression	c = get_uint8 ( con )		3222104	0		=			
ANR	3222124	Identifier	c		3222104	0					
ANR	3222125	CallExpression	get_uint8 ( con )		3222104	1					
ANR	3222126	Callee	get_uint8		3222104	0					
ANR	3222127	Identifier	get_uint8		3222104	0					
ANR	3222128	ArgumentList	con		3222104	1					
ANR	3222129	Argument	con		3222104	0					
ANR	3222130	Identifier	con		3222104	0					
ANR	3222131	IfStatement	if ( c == '#' )		3222104	1					
ANR	3222132	Condition	c == '#'	300:12:8656:8661	3222104	0	True				
ANR	3222133	EqualityExpression	c == '#'		3222104	0		==			
ANR	3222134	Identifier	c		3222104	0					
ANR	3222135	PrimaryExpression	'#'		3222104	1					
ANR	3222136	WhileStatement	while ( get_uint8 ( con ) != '\\n' )		3222104	1					
ANR	3222137	Condition	get_uint8 ( con ) != '\\n'	301:19:8683:8702	3222104	0	True				
ANR	3222138	EqualityExpression	get_uint8 ( con ) != '\\n'		3222104	0		!=			
ANR	3222139	CallExpression	get_uint8 ( con )		3222104	0					
ANR	3222140	Callee	get_uint8		3222104	0					
ANR	3222141	Identifier	get_uint8		3222104	0					
ANR	3222142	ArgumentList	con		3222104	1					
ANR	3222143	Argument	con		3222104	0					
ANR	3222144	Identifier	con		3222104	0					
ANR	3222145	PrimaryExpression	'\\n'		3222104	1					
ANR	3222146	ExpressionStatement		301:40:8704:8704	3222104	1	True				
ANR	3222147	ElseStatement	else		3222104	0					
ANR	3222148	IfStatement	if ( isdigit ( c ) )		3222104	0					
ANR	3222149	Condition	isdigit ( c )	302:17:8723:8732	3222104	0	True				
ANR	3222150	CallExpression	isdigit ( c )		3222104	0					
ANR	3222151	Callee	isdigit		3222104	0					
ANR	3222152	Identifier	isdigit		3222104	0					
ANR	3222153	ArgumentList	c		3222104	1					
ANR	3222154	Argument	c		3222104	0					
ANR	3222155	Identifier	c		3222104	0					
ANR	3222156	BreakStatement	break ;	302:29:8735:8740	3222104	1	True				
ANR	3222157	ElseStatement	else		3222104	0					
ANR	3222158	IfStatement	if ( ! isspace ( c ) )		3222104	0					
ANR	3222159	Condition	! isspace ( c )	303:17:8759:8769	3222104	0	True				
ANR	3222160	UnaryOperationExpression	! isspace ( c )		3222104	0					
ANR	3222161	UnaryOperator	!		3222104	0					
ANR	3222162	CallExpression	isspace ( c )		3222104	1					
ANR	3222163	Callee	isspace		3222104	0					
ANR	3222164	Identifier	isspace		3222104	0					
ANR	3222165	ArgumentList	c		3222104	1					
ANR	3222166	Argument	c		3222104	0					
ANR	3222167	Identifier	c		3222104	0					
ANR	3222168	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) found in PNM file %s"" , c , c , con -> name )"	304:12:8784:8863	3222104	1	True				
ANR	3222169	CallExpression	"error ( ""unexpected character 0x%02x (%c) found in PNM file %s"" , c , c , con -> name )"		3222104	0					
ANR	3222170	Callee	error		3222104	0					
ANR	3222171	Identifier	error		3222104	0					
ANR	3222172	ArgumentList	"""unexpected character 0x%02x (%c) found in PNM file %s"""		3222104	1					
ANR	3222173	Argument	"""unexpected character 0x%02x (%c) found in PNM file %s"""		3222104	0					
ANR	3222174	PrimaryExpression	"""unexpected character 0x%02x (%c) found in PNM file %s"""		3222104	0					
ANR	3222175	Argument	c		3222104	1					
ANR	3222176	Identifier	c		3222104	0					
ANR	3222177	Argument	c		3222104	2					
ANR	3222178	Identifier	c		3222104	0					
ANR	3222179	Argument	con -> name		3222104	3					
ANR	3222180	PtrMemberAccess	con -> name		3222104	0					
ANR	3222181	Identifier	con		3222104	0					
ANR	3222182	Identifier	name		3222104	1					
ANR	3222183	DoStatement	do		3222104	3					
ANR	3222184	CompoundStatement		13:7:309:309	3222104	0					
ANR	3222185	ExpressionStatement	n = 10 * n + c - '0'	307:8:8888:8902	3222104	0	True				
ANR	3222186	AssignmentExpression	n = 10 * n + c - '0'		3222104	0		=			
ANR	3222187	Identifier	n		3222104	0					
ANR	3222188	AdditiveExpression	10 * n + c - '0'		3222104	1		+			
ANR	3222189	MultiplicativeExpression	10 * n		3222104	0		*			
ANR	3222190	PrimaryExpression	10		3222104	0					
ANR	3222191	Identifier	n		3222104	1					
ANR	3222192	AdditiveExpression	c - '0'		3222104	1		-			
ANR	3222193	Identifier	c		3222104	0					
ANR	3222194	PrimaryExpression	'0'		3222104	1					
ANR	3222195	ExpressionStatement	c = get_uint8 ( con )	308:8:8912:8930	3222104	1	True				
ANR	3222196	AssignmentExpression	c = get_uint8 ( con )		3222104	0		=			
ANR	3222197	Identifier	c		3222104	0					
ANR	3222198	CallExpression	get_uint8 ( con )		3222104	1					
ANR	3222199	Callee	get_uint8		3222104	0					
ANR	3222200	Identifier	get_uint8		3222104	0					
ANR	3222201	ArgumentList	con		3222104	1					
ANR	3222202	Argument	con		3222104	0					
ANR	3222203	Identifier	con		3222104	0					
ANR	3222204	Condition	isdigit ( c )	310:11:8949:8958	3222104	1	True				
ANR	3222205	CallExpression	isdigit ( c )		3222104	0					
ANR	3222206	Callee	isdigit		3222104	0					
ANR	3222207	Identifier	isdigit		3222104	0					
ANR	3222208	ArgumentList	c		3222104	1					
ANR	3222209	Argument	c		3222104	0					
ANR	3222210	Identifier	c		3222104	0					
ANR	3222211	IfStatement	if ( ! isspace ( c ) )		3222104	4					
ANR	3222212	Condition	! isspace ( c )	311:8:8970:8980	3222104	0	True				
ANR	3222213	UnaryOperationExpression	! isspace ( c )		3222104	0					
ANR	3222214	UnaryOperator	!		3222104	0					
ANR	3222215	CallExpression	isspace ( c )		3222104	1					
ANR	3222216	Callee	isspace		3222104	0					
ANR	3222217	Identifier	isspace		3222104	0					
ANR	3222218	ArgumentList	c		3222104	1					
ANR	3222219	Argument	c		3222104	0					
ANR	3222220	Identifier	c		3222104	0					
ANR	3222221	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) following max value in PNM file %s"" , c , c , con -> name )"	312:8:8991:9084	3222104	1	True				
ANR	3222222	CallExpression	"error ( ""unexpected character 0x%02x (%c) following max value in PNM file %s"" , c , c , con -> name )"		3222104	0					
ANR	3222223	Callee	error		3222104	0					
ANR	3222224	Identifier	error		3222104	0					
ANR	3222225	ArgumentList	"""unexpected character 0x%02x (%c) following max value in PNM file %s"""		3222104	1					
ANR	3222226	Argument	"""unexpected character 0x%02x (%c) following max value in PNM file %s"""		3222104	0					
ANR	3222227	PrimaryExpression	"""unexpected character 0x%02x (%c) following max value in PNM file %s"""		3222104	0					
ANR	3222228	Argument	c		3222104	1					
ANR	3222229	Identifier	c		3222104	0					
ANR	3222230	Argument	c		3222104	2					
ANR	3222231	Identifier	c		3222104	0					
ANR	3222232	Argument	con -> name		3222104	3					
ANR	3222233	PtrMemberAccess	con -> name		3222104	0					
ANR	3222234	Identifier	con		3222104	0					
ANR	3222235	Identifier	name		3222104	1					
ANR	3222236	ReturnStatement	return n ;	313:4:9090:9098	3222104	5	True				
ANR	3222237	Identifier	n		3222104	0					
ANR	3222238	ReturnType	static unsigned		3222104	1					
ANR	3222239	Identifier	read_pnm_number		3222104	2					
ANR	3222240	ParameterList	context * con		3222104	3					
ANR	3222241	Parameter	context * con	293:32:8554:8565	3222104	0	True				
ANR	3222242	ParameterType	context *		3222104	0					
ANR	3222243	Identifier	con		3222104	1					
ANR	3222244	CFGEntryNode	ENTRY		3222104		True				
ANR	3222245	CFGExitNode	EXIT		3222104		True				
ANR	3222246	Symbol	con		3222104						
ANR	3222247	Symbol	c		3222104						
ANR	3222248	Symbol	* con		3222104						
ANR	3222249	Symbol	get_uint8		3222104						
ANR	3222250	Symbol	isspace		3222104						
ANR	3222251	Symbol	isdigit		3222104						
ANR	3222252	Symbol	con -> name		3222104						
ANR	3222253	Symbol	n		3222104						
ANR	3222254	Function	open_pnm_input_file	316:0:9103:10267							
ANR	3222255	FunctionDef	open_pnm_input_file (context * con)		3222254	0					
ANR	3222256	CompoundStatement		317:0:9149:10267	3222254	0					
ANR	3222257	IdentifierDeclStatement	"int c , max , one = 1 ;"	318:4:9155:9172	3222254	0	True				
ANR	3222258	IdentifierDecl	c		3222254	0					
ANR	3222259	IdentifierDeclType	int		3222254	0					
ANR	3222260	Identifier	c		3222254	1					
ANR	3222261	IdentifierDecl	max		3222254	1					
ANR	3222262	IdentifierDeclType	int		3222254	0					
ANR	3222263	Identifier	max		3222254	1					
ANR	3222264	IdentifierDecl	one = 1		3222254	2					
ANR	3222265	IdentifierDeclType	int		3222254	0					
ANR	3222266	Identifier	one		3222254	1					
ANR	3222267	AssignmentExpression	one = 1		3222254	2		=			
ANR	3222268	Identifier	one		3222254	0					
ANR	3222269	PrimaryExpression	1		3222254	1					
ANR	3222270	ExpressionStatement	rewind ( con -> file )	320:4:9179:9196	3222254	1	True				
ANR	3222271	CallExpression	rewind ( con -> file )		3222254	0					
ANR	3222272	Callee	rewind		3222254	0					
ANR	3222273	Identifier	rewind		3222254	0					
ANR	3222274	ArgumentList	con -> file		3222254	1					
ANR	3222275	Argument	con -> file		3222254	0					
ANR	3222276	PtrMemberAccess	con -> file		3222254	0					
ANR	3222277	Identifier	con		3222254	0					
ANR	3222278	Identifier	file		3222254	1					
ANR	3222279	ExpressionStatement	c = get_uint8 ( con )	321:4:9202:9218	3222254	2	True				
ANR	3222280	AssignmentExpression	c = get_uint8 ( con )		3222254	0		=			
ANR	3222281	Identifier	c		3222254	0					
ANR	3222282	CallExpression	get_uint8 ( con )		3222254	1					
ANR	3222283	Callee	get_uint8		3222254	0					
ANR	3222284	Identifier	get_uint8		3222254	0					
ANR	3222285	ArgumentList	con		3222254	1					
ANR	3222286	Argument	con		3222254	0					
ANR	3222287	Identifier	con		3222254	0					
ANR	3222288	IfStatement	if ( c != 'P' )		3222254	3					
ANR	3222289	Condition	c != 'P'	322:8:9228:9233	3222254	0	True				
ANR	3222290	EqualityExpression	c != 'P'		3222254	0		!=			
ANR	3222291	Identifier	c		3222254	0					
ANR	3222292	PrimaryExpression	'P'		3222254	1					
ANR	3222293	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) at start of PNM file %s"" , c , c , con -> name )"	323:8:9244:9326	3222254	1	True				
ANR	3222294	CallExpression	"error ( ""unexpected character 0x%02x (%c) at start of PNM file %s"" , c , c , con -> name )"		3222254	0					
ANR	3222295	Callee	error		3222254	0					
ANR	3222296	Identifier	error		3222254	0					
ANR	3222297	ArgumentList	"""unexpected character 0x%02x (%c) at start of PNM file %s"""		3222254	1					
ANR	3222298	Argument	"""unexpected character 0x%02x (%c) at start of PNM file %s"""		3222254	0					
ANR	3222299	PrimaryExpression	"""unexpected character 0x%02x (%c) at start of PNM file %s"""		3222254	0					
ANR	3222300	Argument	c		3222254	1					
ANR	3222301	Identifier	c		3222254	0					
ANR	3222302	Argument	c		3222254	2					
ANR	3222303	Identifier	c		3222254	0					
ANR	3222304	Argument	con -> name		3222254	3					
ANR	3222305	PtrMemberAccess	con -> name		3222254	0					
ANR	3222306	Identifier	con		3222254	0					
ANR	3222307	Identifier	name		3222254	1					
ANR	3222308	SwitchStatement	switch ( c = get_uint8 ( con ) )		3222254	4					
ANR	3222309	Condition	c = get_uint8 ( con )	324:12:9340:9355	3222254	0	True				
ANR	3222310	AssignmentExpression	c = get_uint8 ( con )		3222254	0		=			
ANR	3222311	Identifier	c		3222254	0					
ANR	3222312	CallExpression	get_uint8 ( con )		3222254	1					
ANR	3222313	Callee	get_uint8		3222254	0					
ANR	3222314	Identifier	get_uint8		3222254	0					
ANR	3222315	ArgumentList	con		3222254	1					
ANR	3222316	Argument	con		3222254	0					
ANR	3222317	Identifier	con		3222254	0					
ANR	3222318	CompoundStatement		8:30:208:208	3222254	1					
ANR	3222319	Label	case '1' :	325:8:9368:9377	3222254	0	True				
ANR	3222320	Label	case '2' :	326:8:9387:9396	3222254	1	True				
ANR	3222321	Label	case '3' :	327:8:9406:9415	3222254	2	True				
ANR	3222322	Label	case '4' :	328:8:9425:9434	3222254	3	True				
ANR	3222323	ExpressionStatement	"error ( ""unsupported PNM file type P%c in PNM file %s"" , c , con -> name )"	328:19:9436:9503	3222254	4	True				
ANR	3222324	CallExpression	"error ( ""unsupported PNM file type P%c in PNM file %s"" , c , con -> name )"		3222254	0					
ANR	3222325	Callee	error		3222254	0					
ANR	3222326	Identifier	error		3222254	0					
ANR	3222327	ArgumentList	"""unsupported PNM file type P%c in PNM file %s"""		3222254	1					
ANR	3222328	Argument	"""unsupported PNM file type P%c in PNM file %s"""		3222254	0					
ANR	3222329	PrimaryExpression	"""unsupported PNM file type P%c in PNM file %s"""		3222254	0					
ANR	3222330	Argument	c		3222254	1					
ANR	3222331	Identifier	c		3222254	0					
ANR	3222332	Argument	con -> name		3222254	2					
ANR	3222333	PtrMemberAccess	con -> name		3222254	0					
ANR	3222334	Identifier	con		3222254	0					
ANR	3222335	Identifier	name		3222254	1					
ANR	3222336	Label	case '5' :	329:8:9513:9522	3222254	5	True				
ANR	3222337	ExpressionStatement	con -> ncomp = 1	329:19:9524:9538	3222254	6	True				
ANR	3222338	AssignmentExpression	con -> ncomp = 1		3222254	0		=			
ANR	3222339	PtrMemberAccess	con -> ncomp		3222254	0					
ANR	3222340	Identifier	con		3222254	0					
ANR	3222341	Identifier	ncomp		3222254	1					
ANR	3222342	PrimaryExpression	1		3222254	1					
ANR	3222343	BreakStatement	break ;	329:35:9540:9545	3222254	7	True				
ANR	3222344	Label	case '6' :	330:8:9555:9564	3222254	8	True				
ANR	3222345	ExpressionStatement	con -> ncomp = 3	330:19:9566:9580	3222254	9	True				
ANR	3222346	AssignmentExpression	con -> ncomp = 3		3222254	0		=			
ANR	3222347	PtrMemberAccess	con -> ncomp		3222254	0					
ANR	3222348	Identifier	con		3222254	0					
ANR	3222349	Identifier	ncomp		3222254	1					
ANR	3222350	PrimaryExpression	3		3222254	1					
ANR	3222351	BreakStatement	break ;	330:35:9582:9587	3222254	10	True				
ANR	3222352	Label	default :	331:8:9597:9605	3222254	11	True				
ANR	3222353	Identifier	default		3222254	0					
ANR	3222354	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) following 'P' in PNM file %s"" , c , c , con -> name )"	331:18:9607:9694	3222254	12	True				
ANR	3222355	CallExpression	"error ( ""unexpected character 0x%02x (%c) following 'P' in PNM file %s"" , c , c , con -> name )"		3222254	0					
ANR	3222356	Callee	error		3222254	0					
ANR	3222357	Identifier	error		3222254	0					
ANR	3222358	ArgumentList	"""unexpected character 0x%02x (%c) following 'P' in PNM file %s"""		3222254	1					
ANR	3222359	Argument	"""unexpected character 0x%02x (%c) following 'P' in PNM file %s"""		3222254	0					
ANR	3222360	PrimaryExpression	"""unexpected character 0x%02x (%c) following 'P' in PNM file %s"""		3222254	0					
ANR	3222361	Argument	c		3222254	1					
ANR	3222362	Identifier	c		3222254	0					
ANR	3222363	Argument	c		3222254	2					
ANR	3222364	Identifier	c		3222254	0					
ANR	3222365	Argument	con -> name		3222254	3					
ANR	3222366	PtrMemberAccess	con -> name		3222254	0					
ANR	3222367	Identifier	con		3222254	0					
ANR	3222368	Identifier	name		3222254	1					
ANR	3222369	ExpressionStatement	con -> wid = read_pnm_number ( con )	334:4:9707:9738	3222254	5	True				
ANR	3222370	AssignmentExpression	con -> wid = read_pnm_number ( con )		3222254	0		=			
ANR	3222371	PtrMemberAccess	con -> wid		3222254	0					
ANR	3222372	Identifier	con		3222254	0					
ANR	3222373	Identifier	wid		3222254	1					
ANR	3222374	CallExpression	read_pnm_number ( con )		3222254	1					
ANR	3222375	Callee	read_pnm_number		3222254	0					
ANR	3222376	Identifier	read_pnm_number		3222254	0					
ANR	3222377	ArgumentList	con		3222254	1					
ANR	3222378	Argument	con		3222254	0					
ANR	3222379	Identifier	con		3222254	0					
ANR	3222380	IfStatement	if ( con -> wid <= 0 )		3222254	6					
ANR	3222381	Condition	con -> wid <= 0	335:8:9748:9758	3222254	0	True				
ANR	3222382	RelationalExpression	con -> wid <= 0		3222254	0		<=			
ANR	3222383	PtrMemberAccess	con -> wid		3222254	0					
ANR	3222384	Identifier	con		3222254	0					
ANR	3222385	Identifier	wid		3222254	1					
ANR	3222386	PrimaryExpression	0		3222254	1					
ANR	3222387	ExpressionStatement	"error ( ""invalid image width %d in PNM file %s"" , con -> wid , con -> name )"	336:8:9769:9835	3222254	1	True				
ANR	3222388	CallExpression	"error ( ""invalid image width %d in PNM file %s"" , con -> wid , con -> name )"		3222254	0					
ANR	3222389	Callee	error		3222254	0					
ANR	3222390	Identifier	error		3222254	0					
ANR	3222391	ArgumentList	"""invalid image width %d in PNM file %s"""		3222254	1					
ANR	3222392	Argument	"""invalid image width %d in PNM file %s"""		3222254	0					
ANR	3222393	PrimaryExpression	"""invalid image width %d in PNM file %s"""		3222254	0					
ANR	3222394	Argument	con -> wid		3222254	1					
ANR	3222395	PtrMemberAccess	con -> wid		3222254	0					
ANR	3222396	Identifier	con		3222254	0					
ANR	3222397	Identifier	wid		3222254	1					
ANR	3222398	Argument	con -> name		3222254	2					
ANR	3222399	PtrMemberAccess	con -> name		3222254	0					
ANR	3222400	Identifier	con		3222254	0					
ANR	3222401	Identifier	name		3222254	1					
ANR	3222402	ExpressionStatement	con -> hei = read_pnm_number ( con )	337:4:9841:9872	3222254	7	True				
ANR	3222403	AssignmentExpression	con -> hei = read_pnm_number ( con )		3222254	0		=			
ANR	3222404	PtrMemberAccess	con -> hei		3222254	0					
ANR	3222405	Identifier	con		3222254	0					
ANR	3222406	Identifier	hei		3222254	1					
ANR	3222407	CallExpression	read_pnm_number ( con )		3222254	1					
ANR	3222408	Callee	read_pnm_number		3222254	0					
ANR	3222409	Identifier	read_pnm_number		3222254	0					
ANR	3222410	ArgumentList	con		3222254	1					
ANR	3222411	Argument	con		3222254	0					
ANR	3222412	Identifier	con		3222254	0					
ANR	3222413	IfStatement	if ( con -> hei <= 0 )		3222254	8					
ANR	3222414	Condition	con -> hei <= 0	338:8:9882:9892	3222254	0	True				
ANR	3222415	RelationalExpression	con -> hei <= 0		3222254	0		<=			
ANR	3222416	PtrMemberAccess	con -> hei		3222254	0					
ANR	3222417	Identifier	con		3222254	0					
ANR	3222418	Identifier	hei		3222254	1					
ANR	3222419	PrimaryExpression	0		3222254	1					
ANR	3222420	ExpressionStatement	"error ( ""invalid image height %d in PNM file %s"" , con -> hei , con -> name )"	339:8:9903:9971	3222254	1	True				
ANR	3222421	CallExpression	"error ( ""invalid image height %d in PNM file %s"" , con -> hei , con -> name )"		3222254	0					
ANR	3222422	Callee	error		3222254	0					
ANR	3222423	Identifier	error		3222254	0					
ANR	3222424	ArgumentList	"""invalid image height %d in PNM file %s"""		3222254	1					
ANR	3222425	Argument	"""invalid image height %d in PNM file %s"""		3222254	0					
ANR	3222426	PrimaryExpression	"""invalid image height %d in PNM file %s"""		3222254	0					
ANR	3222427	Argument	con -> hei		3222254	1					
ANR	3222428	PtrMemberAccess	con -> hei		3222254	0					
ANR	3222429	Identifier	con		3222254	0					
ANR	3222430	Identifier	hei		3222254	1					
ANR	3222431	Argument	con -> name		3222254	2					
ANR	3222432	PtrMemberAccess	con -> name		3222254	0					
ANR	3222433	Identifier	con		3222254	0					
ANR	3222434	Identifier	name		3222254	1					
ANR	3222435	ExpressionStatement	max = read_pnm_number ( con )	340:4:9977:10001	3222254	9	True				
ANR	3222436	AssignmentExpression	max = read_pnm_number ( con )		3222254	0		=			
ANR	3222437	Identifier	max		3222254	0					
ANR	3222438	CallExpression	read_pnm_number ( con )		3222254	1					
ANR	3222439	Callee	read_pnm_number		3222254	0					
ANR	3222440	Identifier	read_pnm_number		3222254	0					
ANR	3222441	ArgumentList	con		3222254	1					
ANR	3222442	Argument	con		3222254	0					
ANR	3222443	Identifier	con		3222254	0					
ANR	3222444	IfStatement	if ( max >= 0x10000 )		3222254	10					
ANR	3222445	Condition	max >= 0x10000	341:8:10011:10022	3222254	0	True				
ANR	3222446	RelationalExpression	max >= 0x10000		3222254	0		>=			
ANR	3222447	Identifier	max		3222254	0					
ANR	3222448	PrimaryExpression	0x10000		3222254	1					
ANR	3222449	ExpressionStatement	"error ( ""invalid maximum value 0x%02x (%d) in PNM file %s"" , max , max , con -> name )"	342:8:10033:10111	3222254	1	True				
ANR	3222450	CallExpression	"error ( ""invalid maximum value 0x%02x (%d) in PNM file %s"" , max , max , con -> name )"		3222254	0					
ANR	3222451	Callee	error		3222254	0					
ANR	3222452	Identifier	error		3222254	0					
ANR	3222453	ArgumentList	"""invalid maximum value 0x%02x (%d) in PNM file %s"""		3222254	1					
ANR	3222454	Argument	"""invalid maximum value 0x%02x (%d) in PNM file %s"""		3222254	0					
ANR	3222455	PrimaryExpression	"""invalid maximum value 0x%02x (%d) in PNM file %s"""		3222254	0					
ANR	3222456	Argument	max		3222254	1					
ANR	3222457	Identifier	max		3222254	0					
ANR	3222458	Argument	max		3222254	2					
ANR	3222459	Identifier	max		3222254	0					
ANR	3222460	Argument	con -> name		3222254	3					
ANR	3222461	PtrMemberAccess	con -> name		3222254	0					
ANR	3222462	Identifier	con		3222254	0					
ANR	3222463	Identifier	name		3222254	1					
ANR	3222464	IfStatement	if ( max < 0x100 )		3222254	11					
ANR	3222465	Condition	max < 0x100	343:8:10121:10129	3222254	0	True				
ANR	3222466	RelationalExpression	max < 0x100		3222254	0		<			
ANR	3222467	Identifier	max		3222254	0					
ANR	3222468	PrimaryExpression	0x100		3222254	1					
ANR	3222469	ExpressionStatement	con -> swap = 0	343:19:10132:10145	3222254	1	True				
ANR	3222470	AssignmentExpression	con -> swap = 0		3222254	0		=			
ANR	3222471	PtrMemberAccess	con -> swap		3222254	0					
ANR	3222472	Identifier	con		3222254	0					
ANR	3222473	Identifier	swap		3222254	1					
ANR	3222474	PrimaryExpression	0		3222254	1					
ANR	3222475	ElseStatement	else		3222254	0					
ANR	3222476	ExpressionStatement	con -> swap = * ( char * ) & one == 1	344:9:10156:10183	3222254	0	True				
ANR	3222477	AssignmentExpression	con -> swap = * ( char * ) & one == 1		3222254	0		=			
ANR	3222478	PtrMemberAccess	con -> swap		3222254	0					
ANR	3222479	Identifier	con		3222254	0					
ANR	3222480	Identifier	swap		3222254	1					
ANR	3222481	EqualityExpression	* ( char * ) & one == 1		3222254	1		==			
ANR	3222482	UnaryOperationExpression	* ( char * ) & one		3222254	0					
ANR	3222483	UnaryOperator	*		3222254	0					
ANR	3222484	CastExpression	( char * ) & one		3222254	1					
ANR	3222485	CastTarget	char *		3222254	0					
ANR	3222486	UnaryOperationExpression	& one		3222254	1					
ANR	3222487	UnaryOperator	&		3222254	0					
ANR	3222488	Identifier	one		3222254	1					
ANR	3222489	PrimaryExpression	1		3222254	1					
ANR	3222490	ForStatement	for ( con -> bpi = 1 ; max > ( 1 << con -> bpi ) ; con -> bpi ++ )		3222254	12					
ANR	3222491	ForInit	con -> bpi = 1 ;	345:9:10194:10204	3222254	0	True				
ANR	3222492	AssignmentExpression	con -> bpi = 1		3222254	0		=			
ANR	3222493	PtrMemberAccess	con -> bpi		3222254	0					
ANR	3222494	Identifier	con		3222254	0					
ANR	3222495	Identifier	bpi		3222254	1					
ANR	3222496	PrimaryExpression	1		3222254	1					
ANR	3222497	Condition	max > ( 1 << con -> bpi )	345:21:10206:10222	3222254	1	True				
ANR	3222498	RelationalExpression	max > ( 1 << con -> bpi )		3222254	0		>			
ANR	3222499	Identifier	max		3222254	0					
ANR	3222500	ShiftExpression	1 << con -> bpi		3222254	1		<<			
ANR	3222501	PrimaryExpression	1		3222254	0					
ANR	3222502	PtrMemberAccess	con -> bpi		3222254	1					
ANR	3222503	Identifier	con		3222254	0					
ANR	3222504	Identifier	bpi		3222254	1					
ANR	3222505	PostIncDecOperationExpression	con -> bpi ++	345:40:10225:10234	3222254	2	True				
ANR	3222506	PtrMemberAccess	con -> bpi		3222254	0					
ANR	3222507	Identifier	con		3222254	0					
ANR	3222508	Identifier	bpi		3222254	1					
ANR	3222509	IncDec	++		3222254	1					
ANR	3222510	ExpressionStatement		345:51:10236:10236	3222254	3	True				
ANR	3222511	ExpressionStatement	con -> nlines = con -> hei	347:4:10243:10265	3222254	13	True				
ANR	3222512	AssignmentExpression	con -> nlines = con -> hei		3222254	0		=			
ANR	3222513	PtrMemberAccess	con -> nlines		3222254	0					
ANR	3222514	Identifier	con		3222254	0					
ANR	3222515	Identifier	nlines		3222254	1					
ANR	3222516	PtrMemberAccess	con -> hei		3222254	1					
ANR	3222517	Identifier	con		3222254	0					
ANR	3222518	Identifier	hei		3222254	1					
ANR	3222519	ReturnType	static void		3222254	1					
ANR	3222520	Identifier	open_pnm_input_file		3222254	2					
ANR	3222521	ParameterList	context * con		3222254	3					
ANR	3222522	Parameter	context * con	316:32:9135:9146	3222254	0	True				
ANR	3222523	ParameterType	context *		3222254	0					
ANR	3222524	Identifier	con		3222254	1					
ANR	3222525	CFGEntryNode	ENTRY		3222254		True				
ANR	3222526	CFGExitNode	EXIT		3222254		True				
ANR	3222527	Symbol	con		3222254						
ANR	3222528	Symbol	c		3222254						
ANR	3222529	Symbol	con -> file		3222254						
ANR	3222530	Symbol	con -> ncomp		3222254						
ANR	3222531	Symbol	con -> hei		3222254						
ANR	3222532	Symbol	max		3222254						
ANR	3222533	Symbol	get_uint8		3222254						
ANR	3222534	Symbol	one		3222254						
ANR	3222535	Symbol	& one		3222254						
ANR	3222536	Symbol	con -> name		3222254						
ANR	3222537	Symbol	con -> swap		3222254						
ANR	3222538	Symbol	read_pnm_number		3222254						
ANR	3222539	Symbol	* con		3222254						
ANR	3222540	Symbol	con -> bpi		3222254						
ANR	3222541	Symbol	con -> nlines		3222254						
ANR	3222542	Symbol	* ( char * ) & one		3222254						
ANR	3222543	Symbol	con -> wid		3222254						
ANR	3222544	Function	start_pnm_output_file	350:0:10270:10653							
ANR	3222545	FunctionDef	start_pnm_output_file (context * con)		3222544	0					
ANR	3222546	CompoundStatement		351:0:10318:10653	3222544	0					
ANR	3222547	IdentifierDeclStatement	"int max , one = 1 ;"	352:4:10324:10338	3222544	0	True				
ANR	3222548	IdentifierDecl	max		3222544	0					
ANR	3222549	IdentifierDeclType	int		3222544	0					
ANR	3222550	Identifier	max		3222544	1					
ANR	3222551	IdentifierDecl	one = 1		3222544	1					
ANR	3222552	IdentifierDeclType	int		3222544	0					
ANR	3222553	Identifier	one		3222544	1					
ANR	3222554	AssignmentExpression	one = 1		3222544	2		=			
ANR	3222555	Identifier	one		3222544	0					
ANR	3222556	PrimaryExpression	1		3222544	1					
ANR	3222557	ExpressionStatement	"con -> file = fopen ( con -> name , ""wb"" )"	353:4:10345:10379	3222544	1	True				
ANR	3222558	AssignmentExpression	"con -> file = fopen ( con -> name , ""wb"" )"		3222544	0		=			
ANR	3222559	PtrMemberAccess	con -> file		3222544	0					
ANR	3222560	Identifier	con		3222544	0					
ANR	3222561	Identifier	file		3222544	1					
ANR	3222562	CallExpression	"fopen ( con -> name , ""wb"" )"		3222544	1					
ANR	3222563	Callee	fopen		3222544	0					
ANR	3222564	Identifier	fopen		3222544	0					
ANR	3222565	ArgumentList	con -> name		3222544	1					
ANR	3222566	Argument	con -> name		3222544	0					
ANR	3222567	PtrMemberAccess	con -> name		3222544	0					
ANR	3222568	Identifier	con		3222544	0					
ANR	3222569	Identifier	name		3222544	1					
ANR	3222570	Argument	"""wb"""		3222544	1					
ANR	3222571	PrimaryExpression	"""wb"""		3222544	0					
ANR	3222572	IfStatement	if ( con -> file == 0 )		3222544	2					
ANR	3222573	Condition	con -> file == 0	354:8:10389:10400	3222544	0	True				
ANR	3222574	EqualityExpression	con -> file == 0		3222544	0		==			
ANR	3222575	PtrMemberAccess	con -> file		3222544	0					
ANR	3222576	Identifier	con		3222544	0					
ANR	3222577	Identifier	file		3222544	1					
ANR	3222578	PrimaryExpression	0		3222544	1					
ANR	3222579	ExpressionStatement	"error ( ""cannot create PNM output file %s"" , con -> name )"	355:8:10411:10462	3222544	1	True				
ANR	3222580	CallExpression	"error ( ""cannot create PNM output file %s"" , con -> name )"		3222544	0					
ANR	3222581	Callee	error		3222544	0					
ANR	3222582	Identifier	error		3222544	0					
ANR	3222583	ArgumentList	"""cannot create PNM output file %s"""		3222544	1					
ANR	3222584	Argument	"""cannot create PNM output file %s"""		3222544	0					
ANR	3222585	PrimaryExpression	"""cannot create PNM output file %s"""		3222544	0					
ANR	3222586	Argument	con -> name		3222544	1					
ANR	3222587	PtrMemberAccess	con -> name		3222544	0					
ANR	3222588	Identifier	con		3222544	0					
ANR	3222589	Identifier	name		3222544	1					
ANR	3222590	ExpressionStatement	max = ( 1 << con -> bpi ) - 1	356:4:10468:10489	3222544	3	True				
ANR	3222591	AssignmentExpression	max = ( 1 << con -> bpi ) - 1		3222544	0		=			
ANR	3222592	Identifier	max		3222544	0					
ANR	3222593	AdditiveExpression	( 1 << con -> bpi ) - 1		3222544	1		-			
ANR	3222594	ShiftExpression	1 << con -> bpi		3222544	0		<<			
ANR	3222595	PrimaryExpression	1		3222544	0					
ANR	3222596	PtrMemberAccess	con -> bpi		3222544	1					
ANR	3222597	Identifier	con		3222544	0					
ANR	3222598	Identifier	bpi		3222544	1					
ANR	3222599	PrimaryExpression	1		3222544	1					
ANR	3222600	IfStatement	if ( max < 256 )		3222544	4					
ANR	3222601	Condition	max < 256	357:8:10499:10505	3222544	0	True				
ANR	3222602	RelationalExpression	max < 256		3222544	0		<			
ANR	3222603	Identifier	max		3222544	0					
ANR	3222604	PrimaryExpression	256		3222544	1					
ANR	3222605	ExpressionStatement	con -> swap = 0	357:17:10508:10521	3222544	1	True				
ANR	3222606	AssignmentExpression	con -> swap = 0		3222544	0		=			
ANR	3222607	PtrMemberAccess	con -> swap		3222544	0					
ANR	3222608	Identifier	con		3222544	0					
ANR	3222609	Identifier	swap		3222544	1					
ANR	3222610	PrimaryExpression	0		3222544	1					
ANR	3222611	ElseStatement	else		3222544	0					
ANR	3222612	ExpressionStatement	con -> swap = * ( char * ) & one == 1	358:9:10532:10559	3222544	0	True				
ANR	3222613	AssignmentExpression	con -> swap = * ( char * ) & one == 1		3222544	0		=			
ANR	3222614	PtrMemberAccess	con -> swap		3222544	0					
ANR	3222615	Identifier	con		3222544	0					
ANR	3222616	Identifier	swap		3222544	1					
ANR	3222617	EqualityExpression	* ( char * ) & one == 1		3222544	1		==			
ANR	3222618	UnaryOperationExpression	* ( char * ) & one		3222544	0					
ANR	3222619	UnaryOperator	*		3222544	0					
ANR	3222620	CastExpression	( char * ) & one		3222544	1					
ANR	3222621	CastTarget	char *		3222544	0					
ANR	3222622	UnaryOperationExpression	& one		3222544	1					
ANR	3222623	UnaryOperator	&		3222544	0					
ANR	3222624	Identifier	one		3222544	1					
ANR	3222625	PrimaryExpression	1		3222544	1					
ANR	3222626	ExpressionStatement	"fprintf ( con -> file , ""P%c\\n%d %d\\n%d\\n"" , con -> ncomp == 1 ? '5' : '6' , con -> wid , con -> hei , max )"	359:4:10565:10651	3222544	5	True				
ANR	3222627	CallExpression	"fprintf ( con -> file , ""P%c\\n%d %d\\n%d\\n"" , con -> ncomp == 1 ? '5' : '6' , con -> wid , con -> hei , max )"		3222544	0					
ANR	3222628	Callee	fprintf		3222544	0					
ANR	3222629	Identifier	fprintf		3222544	0					
ANR	3222630	ArgumentList	con -> file		3222544	1					
ANR	3222631	Argument	con -> file		3222544	0					
ANR	3222632	PtrMemberAccess	con -> file		3222544	0					
ANR	3222633	Identifier	con		3222544	0					
ANR	3222634	Identifier	file		3222544	1					
ANR	3222635	Argument	"""P%c\\n%d %d\\n%d\\n"""		3222544	1					
ANR	3222636	PrimaryExpression	"""P%c\\n%d %d\\n%d\\n"""		3222544	0					
ANR	3222637	Argument	con -> ncomp == 1 ? '5' : '6'		3222544	2					
ANR	3222638	ConditionalExpression	con -> ncomp == 1 ? '5' : '6'		3222544	0					
ANR	3222639	Condition	con -> ncomp == 1		3222544	0					
ANR	3222640	EqualityExpression	con -> ncomp == 1		3222544	0		==			
ANR	3222641	PtrMemberAccess	con -> ncomp		3222544	0					
ANR	3222642	Identifier	con		3222544	0					
ANR	3222643	Identifier	ncomp		3222544	1					
ANR	3222644	PrimaryExpression	1		3222544	1					
ANR	3222645	PrimaryExpression	'5'		3222544	1					
ANR	3222646	PrimaryExpression	'6'		3222544	2					
ANR	3222647	Argument	con -> wid		3222544	3					
ANR	3222648	PtrMemberAccess	con -> wid		3222544	0					
ANR	3222649	Identifier	con		3222544	0					
ANR	3222650	Identifier	wid		3222544	1					
ANR	3222651	Argument	con -> hei		3222544	4					
ANR	3222652	PtrMemberAccess	con -> hei		3222544	0					
ANR	3222653	Identifier	con		3222544	0					
ANR	3222654	Identifier	hei		3222544	1					
ANR	3222655	Argument	max		3222544	5					
ANR	3222656	Identifier	max		3222544	0					
ANR	3222657	ReturnType	static void		3222544	1					
ANR	3222658	Identifier	start_pnm_output_file		3222544	2					
ANR	3222659	ParameterList	context * con		3222544	3					
ANR	3222660	Parameter	context * con	350:34:10304:10315	3222544	0	True				
ANR	3222661	ParameterType	context *		3222544	0					
ANR	3222662	Identifier	con		3222544	1					
ANR	3222663	CFGEntryNode	ENTRY		3222544		True				
ANR	3222664	CFGExitNode	EXIT		3222544		True				
ANR	3222665	Symbol	fopen		3222544						
ANR	3222666	Symbol	con		3222544						
ANR	3222667	Symbol	con -> file		3222544						
ANR	3222668	Symbol	con -> ncomp		3222544						
ANR	3222669	Symbol	con -> hei		3222544						
ANR	3222670	Symbol	max		3222544						
ANR	3222671	Symbol	one		3222544						
ANR	3222672	Symbol	& one		3222544						
ANR	3222673	Symbol	con -> name		3222544						
ANR	3222674	Symbol	con -> swap		3222544						
ANR	3222675	Symbol	* con		3222544						
ANR	3222676	Symbol	con -> bpi		3222544						
ANR	3222677	Symbol	* ( char * ) & one		3222544						
ANR	3222678	Symbol	con -> wid		3222544						
ANR	3222679	Function	read_tif_ifd_entry	376:0:10964:11207							
ANR	3222680	FunctionDef	"read_tif_ifd_entry (context * con , uint32_t ifdoff , uint16_t * tag , uint16_t * type , uint32_t * count)"		3222679	0					
ANR	3222681	CompoundStatement		377:0:11074:11207	3222679	0					
ANR	3222682	ExpressionStatement	"seek_file ( con , ifdoff , SEEK_SET )"	378:4:11080:11112	3222679	0	True				
ANR	3222683	CallExpression	"seek_file ( con , ifdoff , SEEK_SET )"		3222679	0					
ANR	3222684	Callee	seek_file		3222679	0					
ANR	3222685	Identifier	seek_file		3222679	0					
ANR	3222686	ArgumentList	con		3222679	1					
ANR	3222687	Argument	con		3222679	0					
ANR	3222688	Identifier	con		3222679	0					
ANR	3222689	Argument	ifdoff		3222679	1					
ANR	3222690	Identifier	ifdoff		3222679	0					
ANR	3222691	Argument	SEEK_SET		3222679	2					
ANR	3222692	Identifier	SEEK_SET		3222679	0					
ANR	3222693	ExpressionStatement	"read_uint16 ( con , tag , 1 )"	379:4:11118:11142	3222679	1	True				
ANR	3222694	CallExpression	"read_uint16 ( con , tag , 1 )"		3222679	0					
ANR	3222695	Callee	read_uint16		3222679	0					
ANR	3222696	Identifier	read_uint16		3222679	0					
ANR	3222697	ArgumentList	con		3222679	1					
ANR	3222698	Argument	con		3222679	0					
ANR	3222699	Identifier	con		3222679	0					
ANR	3222700	Argument	tag		3222679	1					
ANR	3222701	Identifier	tag		3222679	0					
ANR	3222702	Argument	1		3222679	2					
ANR	3222703	PrimaryExpression	1		3222679	0					
ANR	3222704	ExpressionStatement	"read_uint16 ( con , type , 1 )"	380:4:11148:11173	3222679	2	True				
ANR	3222705	CallExpression	"read_uint16 ( con , type , 1 )"		3222679	0					
ANR	3222706	Callee	read_uint16		3222679	0					
ANR	3222707	Identifier	read_uint16		3222679	0					
ANR	3222708	ArgumentList	con		3222679	1					
ANR	3222709	Argument	con		3222679	0					
ANR	3222710	Identifier	con		3222679	0					
ANR	3222711	Argument	type		3222679	1					
ANR	3222712	Identifier	type		3222679	0					
ANR	3222713	Argument	1		3222679	2					
ANR	3222714	PrimaryExpression	1		3222679	0					
ANR	3222715	ExpressionStatement	"read_uint32 ( con , count , 1 )"	381:4:11179:11205	3222679	3	True				
ANR	3222716	CallExpression	"read_uint32 ( con , count , 1 )"		3222679	0					
ANR	3222717	Callee	read_uint32		3222679	0					
ANR	3222718	Identifier	read_uint32		3222679	0					
ANR	3222719	ArgumentList	con		3222679	1					
ANR	3222720	Argument	con		3222679	0					
ANR	3222721	Identifier	con		3222679	0					
ANR	3222722	Argument	count		3222679	1					
ANR	3222723	Identifier	count		3222679	0					
ANR	3222724	Argument	1		3222679	2					
ANR	3222725	PrimaryExpression	1		3222679	0					
ANR	3222726	ReturnType	static void		3222679	1					
ANR	3222727	Identifier	read_tif_ifd_entry		3222679	2					
ANR	3222728	ParameterList	"context * con , uint32_t ifdoff , uint16_t * tag , uint16_t * type , uint32_t * count"		3222679	3					
ANR	3222729	Parameter	context * con	376:31:10995:11006	3222679	0	True				
ANR	3222730	ParameterType	context *		3222679	0					
ANR	3222731	Identifier	con		3222679	1					
ANR	3222732	Parameter	uint32_t ifdoff	376:45:11009:11023	3222679	1	True				
ANR	3222733	ParameterType	uint32_t		3222679	0					
ANR	3222734	Identifier	ifdoff		3222679	1					
ANR	3222735	Parameter	uint16_t * tag	376:62:11026:11038	3222679	2	True				
ANR	3222736	ParameterType	uint16_t *		3222679	0					
ANR	3222737	Identifier	tag		3222679	1					
ANR	3222738	Parameter	uint16_t * type	376:77:11041:11054	3222679	3	True				
ANR	3222739	ParameterType	uint16_t *		3222679	0					
ANR	3222740	Identifier	type		3222679	1					
ANR	3222741	Parameter	uint32_t * count	376:93:11057:11071	3222679	4	True				
ANR	3222742	ParameterType	uint32_t *		3222679	0					
ANR	3222743	Identifier	count		3222679	1					
ANR	3222744	CFGEntryNode	ENTRY		3222679		True				
ANR	3222745	CFGExitNode	EXIT		3222679		True				
ANR	3222746	Symbol	SEEK_SET		3222679						
ANR	3222747	Symbol	ifdoff		3222679						
ANR	3222748	Symbol	con		3222679						
ANR	3222749	Symbol	count		3222679						
ANR	3222750	Symbol	tag		3222679						
ANR	3222751	Symbol	type		3222679						
ANR	3222752	Function	read_tif_data	384:0:11210:11893							
ANR	3222753	FunctionDef	"read_tif_data (context * con , uint16_t type , uint32_t count , int index , int nval , void * buf)"		3222752	0					
ANR	3222754	CompoundStatement		385:0:11313:11893	3222752	0					
ANR	3222755	IdentifierDeclStatement	int size = 0 ;	386:4:11319:11329	3222752	0	True				
ANR	3222756	IdentifierDecl	size = 0		3222752	0					
ANR	3222757	IdentifierDeclType	int		3222752	0					
ANR	3222758	Identifier	size		3222752	1					
ANR	3222759	AssignmentExpression	size = 0		3222752	2		=			
ANR	3222760	Identifier	size		3222752	0					
ANR	3222761	PrimaryExpression	0		3222752	1					
ANR	3222762	SwitchStatement	switch ( type )		3222752	1					
ANR	3222763	Condition	type	388:12:11344:11347	3222752	0	True				
ANR	3222764	Identifier	type		3222752	0					
ANR	3222765	CompoundStatement		4:18:36:36	3222752	1					
ANR	3222766	Label	case 3 :	389:8:11360:11367	3222752	0	True				
ANR	3222767	ExpressionStatement	size = 2	389:17:11369:11377	3222752	1	True				
ANR	3222768	AssignmentExpression	size = 2		3222752	0		=			
ANR	3222769	Identifier	size		3222752	0					
ANR	3222770	PrimaryExpression	2		3222752	1					
ANR	3222771	BreakStatement	break ;	389:27:11379:11384	3222752	2	True				
ANR	3222772	Label	case 4 :	390:8:11394:11401	3222752	3	True				
ANR	3222773	ExpressionStatement	size = 4	390:17:11403:11411	3222752	4	True				
ANR	3222774	AssignmentExpression	size = 4		3222752	0		=			
ANR	3222775	Identifier	size		3222752	0					
ANR	3222776	PrimaryExpression	4		3222752	1					
ANR	3222777	BreakStatement	break ;	390:27:11413:11418	3222752	5	True				
ANR	3222778	Label	default :	391:8:11428:11436	3222752	6	True				
ANR	3222779	Identifier	default		3222752	0					
ANR	3222780	ReturnStatement	return ;	391:18:11438:11444	3222752	7	True				
ANR	3222781	IfStatement	if ( index + nval > ( int ) count )		3222752	2					
ANR	3222782	Condition	index + nval > ( int ) count	394:8:11461:11481	3222752	0	True				
ANR	3222783	RelationalExpression	index + nval > ( int ) count		3222752	0		>			
ANR	3222784	AdditiveExpression	index + nval		3222752	0		+			
ANR	3222785	Identifier	index		3222752	0					
ANR	3222786	Identifier	nval		3222752	1					
ANR	3222787	CastExpression	( int ) count		3222752	1					
ANR	3222788	CastTarget	int		3222752	0					
ANR	3222789	Identifier	count		3222752	1					
ANR	3222790	ExpressionStatement	"error ( ""data array is to small for read request in TIFF file %s"" , con -> name )"	395:8:11492:11567	3222752	1	True				
ANR	3222791	CallExpression	"error ( ""data array is to small for read request in TIFF file %s"" , con -> name )"		3222752	0					
ANR	3222792	Callee	error		3222752	0					
ANR	3222793	Identifier	error		3222752	0					
ANR	3222794	ArgumentList	"""data array is to small for read request in TIFF file %s"""		3222752	1					
ANR	3222795	Argument	"""data array is to small for read request in TIFF file %s"""		3222752	0					
ANR	3222796	PrimaryExpression	"""data array is to small for read request in TIFF file %s"""		3222752	0					
ANR	3222797	Argument	con -> name		3222752	1					
ANR	3222798	PtrMemberAccess	con -> name		3222752	0					
ANR	3222799	Identifier	con		3222752	0					
ANR	3222800	Identifier	name		3222752	1					
ANR	3222801	ExpressionStatement	index *= size	397:4:11574:11587	3222752	3	True				
ANR	3222802	AssignmentExpression	index *= size		3222752	0		*=			
ANR	3222803	Identifier	index		3222752	0					
ANR	3222804	Identifier	size		3222752	1					
ANR	3222805	ExpressionStatement	size *= count	398:4:11593:11606	3222752	4	True				
ANR	3222806	AssignmentExpression	size *= count		3222752	0		*=			
ANR	3222807	Identifier	size		3222752	0					
ANR	3222808	Identifier	count		3222752	1					
ANR	3222809	IdentifierDeclStatement	uint32_t offset = ftell ( con -> file ) ;	399:4:11612:11646	3222752	5	True				
ANR	3222810	IdentifierDecl	offset = ftell ( con -> file )		3222752	0					
ANR	3222811	IdentifierDeclType	uint32_t		3222752	0					
ANR	3222812	Identifier	offset		3222752	1					
ANR	3222813	AssignmentExpression	offset = ftell ( con -> file )		3222752	2		=			
ANR	3222814	Identifier	offset		3222752	0					
ANR	3222815	CallExpression	ftell ( con -> file )		3222752	1					
ANR	3222816	Callee	ftell		3222752	0					
ANR	3222817	Identifier	ftell		3222752	0					
ANR	3222818	ArgumentList	con -> file		3222752	1					
ANR	3222819	Argument	con -> file		3222752	0					
ANR	3222820	PtrMemberAccess	con -> file		3222752	0					
ANR	3222821	Identifier	con		3222752	0					
ANR	3222822	Identifier	file		3222752	1					
ANR	3222823	IfStatement	if ( size > 4 )		3222752	6					
ANR	3222824	Condition	size > 4	400:8:11656:11661	3222752	0	True				
ANR	3222825	RelationalExpression	size > 4		3222752	0		>			
ANR	3222826	Identifier	size		3222752	0					
ANR	3222827	PrimaryExpression	4		3222752	1					
ANR	3222828	ExpressionStatement	"read_uint32 ( con , & offset , 1 )"	401:8:11672:11700	3222752	1	True				
ANR	3222829	CallExpression	"read_uint32 ( con , & offset , 1 )"		3222752	0					
ANR	3222830	Callee	read_uint32		3222752	0					
ANR	3222831	Identifier	read_uint32		3222752	0					
ANR	3222832	ArgumentList	con		3222752	1					
ANR	3222833	Argument	con		3222752	0					
ANR	3222834	Identifier	con		3222752	0					
ANR	3222835	Argument	& offset		3222752	1					
ANR	3222836	UnaryOperationExpression	& offset		3222752	0					
ANR	3222837	UnaryOperator	&		3222752	0					
ANR	3222838	Identifier	offset		3222752	1					
ANR	3222839	Argument	1		3222752	2					
ANR	3222840	PrimaryExpression	1		3222752	0					
ANR	3222841	ExpressionStatement	"seek_file ( con , offset + index , SEEK_SET )"	402:4:11706:11744	3222752	7	True				
ANR	3222842	CallExpression	"seek_file ( con , offset + index , SEEK_SET )"		3222752	0					
ANR	3222843	Callee	seek_file		3222752	0					
ANR	3222844	Identifier	seek_file		3222752	0					
ANR	3222845	ArgumentList	con		3222752	1					
ANR	3222846	Argument	con		3222752	0					
ANR	3222847	Identifier	con		3222752	0					
ANR	3222848	Argument	offset + index		3222752	1					
ANR	3222849	AdditiveExpression	offset + index		3222752	0		+			
ANR	3222850	Identifier	offset		3222752	0					
ANR	3222851	Identifier	index		3222752	1					
ANR	3222852	Argument	SEEK_SET		3222752	2					
ANR	3222853	Identifier	SEEK_SET		3222752	0					
ANR	3222854	SwitchStatement	switch ( type )		3222752	8					
ANR	3222855	Condition	type	403:12:11758:11761	3222752	0	True				
ANR	3222856	Identifier	type		3222752	0					
ANR	3222857	CompoundStatement		19:18:450:450	3222752	1					
ANR	3222858	Label	case 3 :	404:8:11774:11781	3222752	0	True				
ANR	3222859	ExpressionStatement	"read_uint16 ( con , ( uint16_t * ) buf , nval )"	404:17:11783:11821	3222752	1	True				
ANR	3222860	CallExpression	"read_uint16 ( con , ( uint16_t * ) buf , nval )"		3222752	0					
ANR	3222861	Callee	read_uint16		3222752	0					
ANR	3222862	Identifier	read_uint16		3222752	0					
ANR	3222863	ArgumentList	con		3222752	1					
ANR	3222864	Argument	con		3222752	0					
ANR	3222865	Identifier	con		3222752	0					
ANR	3222866	Argument	( uint16_t * ) buf		3222752	1					
ANR	3222867	CastExpression	( uint16_t * ) buf		3222752	0					
ANR	3222868	CastTarget	uint16_t *		3222752	0					
ANR	3222869	Identifier	buf		3222752	1					
ANR	3222870	Argument	nval		3222752	2					
ANR	3222871	Identifier	nval		3222752	0					
ANR	3222872	BreakStatement	break ;	404:57:11823:11828	3222752	2	True				
ANR	3222873	Label	case 4 :	405:8:11838:11845	3222752	3	True				
ANR	3222874	ExpressionStatement	"read_uint32 ( con , ( uint32_t * ) buf , nval )"	405:17:11847:11885	3222752	4	True				
ANR	3222875	CallExpression	"read_uint32 ( con , ( uint32_t * ) buf , nval )"		3222752	0					
ANR	3222876	Callee	read_uint32		3222752	0					
ANR	3222877	Identifier	read_uint32		3222752	0					
ANR	3222878	ArgumentList	con		3222752	1					
ANR	3222879	Argument	con		3222752	0					
ANR	3222880	Identifier	con		3222752	0					
ANR	3222881	Argument	( uint32_t * ) buf		3222752	1					
ANR	3222882	CastExpression	( uint32_t * ) buf		3222752	0					
ANR	3222883	CastTarget	uint32_t *		3222752	0					
ANR	3222884	Identifier	buf		3222752	1					
ANR	3222885	Argument	nval		3222752	2					
ANR	3222886	Identifier	nval		3222752	0					
ANR	3222887	ReturnType	static void		3222752	1					
ANR	3222888	Identifier	read_tif_data		3222752	2					
ANR	3222889	ParameterList	"context * con , uint16_t type , uint32_t count , int index , int nval , void * buf"		3222752	3					
ANR	3222890	Parameter	context * con	384:26:11236:11247	3222752	0	True				
ANR	3222891	ParameterType	context *		3222752	0					
ANR	3222892	Identifier	con		3222752	1					
ANR	3222893	Parameter	uint16_t type	384:40:11250:11262	3222752	1	True				
ANR	3222894	ParameterType	uint16_t		3222752	0					
ANR	3222895	Identifier	type		3222752	1					
ANR	3222896	Parameter	uint32_t count	384:55:11265:11278	3222752	2	True				
ANR	3222897	ParameterType	uint32_t		3222752	0					
ANR	3222898	Identifier	count		3222752	1					
ANR	3222899	Parameter	int index	384:71:11281:11289	3222752	3	True				
ANR	3222900	ParameterType	int		3222752	0					
ANR	3222901	Identifier	index		3222752	1					
ANR	3222902	Parameter	int nval	384:82:11292:11299	3222752	4	True				
ANR	3222903	ParameterType	int		3222752	0					
ANR	3222904	Identifier	nval		3222752	1					
ANR	3222905	Parameter	void * buf	384:92:11302:11310	3222752	5	True				
ANR	3222906	ParameterType	void *		3222752	0					
ANR	3222907	Identifier	buf		3222752	1					
ANR	3222908	CFGEntryNode	ENTRY		3222752		True				
ANR	3222909	CFGExitNode	EXIT		3222752		True				
ANR	3222910	Symbol	nval		3222752						
ANR	3222911	Symbol	SEEK_SET		3222752						
ANR	3222912	Symbol	con		3222752						
ANR	3222913	Symbol	con -> file		3222752						
ANR	3222914	Symbol	offset		3222752						
ANR	3222915	Symbol	ftell		3222752						
ANR	3222916	Symbol	& offset		3222752						
ANR	3222917	Symbol	count		3222752						
ANR	3222918	Symbol	index		3222752						
ANR	3222919	Symbol	type		3222752						
ANR	3222920	Symbol	con -> name		3222752						
ANR	3222921	Symbol	buf		3222752						
ANR	3222922	Symbol	* con		3222752						
ANR	3222923	Symbol	size		3222752						
ANR	3222924	Function	read_tif_datum	409:0:11896:12214							
ANR	3222925	FunctionDef	"read_tif_datum (context * con , uint16_t type , uint32_t count , int index)"		3222924	0					
ANR	3222926	CompoundStatement		410:0:11983:12214	3222924	0					
ANR	3222927	IdentifierDeclStatement	uint8_t buf [ 4 ] ;	411:4:11989:12003	3222924	0	True				
ANR	3222928	IdentifierDecl	buf [ 4 ]		3222924	0					
ANR	3222929	IdentifierDeclType	uint8_t [ 4 ]		3222924	0					
ANR	3222930	Identifier	buf		3222924	1					
ANR	3222931	PrimaryExpression	4		3222924	2					
ANR	3222932	ExpressionStatement	"read_tif_data ( con , type , count , index , 1 , buf )"	413:4:12010:12056	3222924	1	True				
ANR	3222933	CallExpression	"read_tif_data ( con , type , count , index , 1 , buf )"		3222924	0					
ANR	3222934	Callee	read_tif_data		3222924	0					
ANR	3222935	Identifier	read_tif_data		3222924	0					
ANR	3222936	ArgumentList	con		3222924	1					
ANR	3222937	Argument	con		3222924	0					
ANR	3222938	Identifier	con		3222924	0					
ANR	3222939	Argument	type		3222924	1					
ANR	3222940	Identifier	type		3222924	0					
ANR	3222941	Argument	count		3222924	2					
ANR	3222942	Identifier	count		3222924	0					
ANR	3222943	Argument	index		3222924	3					
ANR	3222944	Identifier	index		3222924	0					
ANR	3222945	Argument	1		3222924	4					
ANR	3222946	PrimaryExpression	1		3222924	0					
ANR	3222947	Argument	buf		3222924	5					
ANR	3222948	Identifier	buf		3222924	0					
ANR	3222949	SwitchStatement	switch ( type )		3222924	2					
ANR	3222950	Condition	type	414:12:12070:12073	3222924	0	True				
ANR	3222951	Identifier	type		3222924	0					
ANR	3222952	CompoundStatement		5:18:92:92	3222924	1					
ANR	3222953	Label	case 3 :	415:8:12086:12093	3222924	0	True				
ANR	3222954	ReturnStatement	return ( uint32_t ) * ( uint16_t * ) buf ;	415:17:12095:12127	3222924	1	True				
ANR	3222955	CastExpression	( uint32_t ) * ( uint16_t * ) buf		3222924	0					
ANR	3222956	CastTarget	uint32_t		3222924	0					
ANR	3222957	UnaryOperationExpression	* ( uint16_t * ) buf		3222924	1					
ANR	3222958	UnaryOperator	*		3222924	0					
ANR	3222959	CastExpression	( uint16_t * ) buf		3222924	1					
ANR	3222960	CastTarget	uint16_t *		3222924	0					
ANR	3222961	Identifier	buf		3222924	1					
ANR	3222962	Label	case 4 :	416:8:12137:12144	3222924	2	True				
ANR	3222963	ReturnStatement	return ( uint32_t ) * ( uint32_t * ) buf ;	416:17:12146:12178	3222924	3	True				
ANR	3222964	CastExpression	( uint32_t ) * ( uint32_t * ) buf		3222924	0					
ANR	3222965	CastTarget	uint32_t		3222924	0					
ANR	3222966	UnaryOperationExpression	* ( uint32_t * ) buf		3222924	1					
ANR	3222967	UnaryOperator	*		3222924	0					
ANR	3222968	CastExpression	( uint32_t * ) buf		3222924	1					
ANR	3222969	CastTarget	uint32_t *		3222924	0					
ANR	3222970	Identifier	buf		3222924	1					
ANR	3222971	Label	default :	417:8:12188:12196	3222924	4	True				
ANR	3222972	Identifier	default		3222924	0					
ANR	3222973	ReturnStatement	return 0 ;	417:18:12198:12206	3222924	5	True				
ANR	3222974	PrimaryExpression	0		3222924	0					
ANR	3222975	ReturnType	static uint32_t		3222924	1					
ANR	3222976	Identifier	read_tif_datum		3222924	2					
ANR	3222977	ParameterList	"context * con , uint16_t type , uint32_t count , int index"		3222924	3					
ANR	3222978	Parameter	context * con	409:31:11927:11938	3222924	0	True				
ANR	3222979	ParameterType	context *		3222924	0					
ANR	3222980	Identifier	con		3222924	1					
ANR	3222981	Parameter	uint16_t type	409:45:11941:11953	3222924	1	True				
ANR	3222982	ParameterType	uint16_t		3222924	0					
ANR	3222983	Identifier	type		3222924	1					
ANR	3222984	Parameter	uint32_t count	409:60:11956:11969	3222924	2	True				
ANR	3222985	ParameterType	uint32_t		3222924	0					
ANR	3222986	Identifier	count		3222924	1					
ANR	3222987	Parameter	int index	409:76:11972:11980	3222924	3	True				
ANR	3222988	ParameterType	int		3222924	0					
ANR	3222989	Identifier	index		3222924	1					
ANR	3222990	CFGEntryNode	ENTRY		3222924		True				
ANR	3222991	CFGExitNode	EXIT		3222924		True				
ANR	3222992	Symbol	buf		3222924						
ANR	3222993	Symbol	* buf		3222924						
ANR	3222994	Symbol	con		3222924						
ANR	3222995	Symbol	* ( uint16_t * ) buf		3222924						
ANR	3222996	Symbol	count		3222924						
ANR	3222997	Symbol	index		3222924						
ANR	3222998	Symbol	type		3222924						
ANR	3222999	Symbol	* ( uint32_t * ) buf		3222924						
ANR	3223000	Function	get_tif_datum	421:0:12217:12446							
ANR	3223001	FunctionDef	"get_tif_datum (context * con , uint32_t ifdoff , int index)"		3223000	0					
ANR	3223002	CompoundStatement		422:0:12289:12446	3223000	0					
ANR	3223003	IdentifierDeclStatement	"uint16_t tag , type ;"	423:4:12295:12313	3223000	0	True				
ANR	3223004	IdentifierDecl	tag		3223000	0					
ANR	3223005	IdentifierDeclType	uint16_t		3223000	0					
ANR	3223006	Identifier	tag		3223000	1					
ANR	3223007	IdentifierDecl	type		3223000	1					
ANR	3223008	IdentifierDeclType	uint16_t		3223000	0					
ANR	3223009	Identifier	type		3223000	1					
ANR	3223010	IdentifierDeclStatement	uint32_t count ;	424:4:12319:12333	3223000	1	True				
ANR	3223011	IdentifierDecl	count		3223000	0					
ANR	3223012	IdentifierDeclType	uint32_t		3223000	0					
ANR	3223013	Identifier	count		3223000	1					
ANR	3223014	ExpressionStatement	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"	426:4:12340:12392	3223000	2	True				
ANR	3223015	CallExpression	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"		3223000	0					
ANR	3223016	Callee	read_tif_ifd_entry		3223000	0					
ANR	3223017	Identifier	read_tif_ifd_entry		3223000	0					
ANR	3223018	ArgumentList	con		3223000	1					
ANR	3223019	Argument	con		3223000	0					
ANR	3223020	Identifier	con		3223000	0					
ANR	3223021	Argument	ifdoff		3223000	1					
ANR	3223022	Identifier	ifdoff		3223000	0					
ANR	3223023	Argument	& tag		3223000	2					
ANR	3223024	UnaryOperationExpression	& tag		3223000	0					
ANR	3223025	UnaryOperator	&		3223000	0					
ANR	3223026	Identifier	tag		3223000	1					
ANR	3223027	Argument	& type		3223000	3					
ANR	3223028	UnaryOperationExpression	& type		3223000	0					
ANR	3223029	UnaryOperator	&		3223000	0					
ANR	3223030	Identifier	type		3223000	1					
ANR	3223031	Argument	& count		3223000	4					
ANR	3223032	UnaryOperationExpression	& count		3223000	0					
ANR	3223033	UnaryOperator	&		3223000	0					
ANR	3223034	Identifier	count		3223000	1					
ANR	3223035	ReturnStatement	"return read_tif_datum ( con , type , count , index ) ;"	427:4:12398:12444	3223000	3	True				
ANR	3223036	CallExpression	"read_tif_datum ( con , type , count , index )"		3223000	0					
ANR	3223037	Callee	read_tif_datum		3223000	0					
ANR	3223038	Identifier	read_tif_datum		3223000	0					
ANR	3223039	ArgumentList	con		3223000	1					
ANR	3223040	Argument	con		3223000	0					
ANR	3223041	Identifier	con		3223000	0					
ANR	3223042	Argument	type		3223000	1					
ANR	3223043	Identifier	type		3223000	0					
ANR	3223044	Argument	count		3223000	2					
ANR	3223045	Identifier	count		3223000	0					
ANR	3223046	Argument	index		3223000	3					
ANR	3223047	Identifier	index		3223000	0					
ANR	3223048	ReturnType	static uint32_t		3223000	1					
ANR	3223049	Identifier	get_tif_datum		3223000	2					
ANR	3223050	ParameterList	"context * con , uint32_t ifdoff , int index"		3223000	3					
ANR	3223051	Parameter	context * con	421:30:12247:12258	3223000	0	True				
ANR	3223052	ParameterType	context *		3223000	0					
ANR	3223053	Identifier	con		3223000	1					
ANR	3223054	Parameter	uint32_t ifdoff	421:44:12261:12275	3223000	1	True				
ANR	3223055	ParameterType	uint32_t		3223000	0					
ANR	3223056	Identifier	ifdoff		3223000	1					
ANR	3223057	Parameter	int index	421:61:12278:12286	3223000	2	True				
ANR	3223058	ParameterType	int		3223000	0					
ANR	3223059	Identifier	index		3223000	1					
ANR	3223060	CFGEntryNode	ENTRY		3223000		True				
ANR	3223061	CFGExitNode	EXIT		3223000		True				
ANR	3223062	Symbol	ifdoff		3223000						
ANR	3223063	Symbol	con		3223000						
ANR	3223064	Symbol	& type		3223000						
ANR	3223065	Symbol	& tag		3223000						
ANR	3223066	Symbol	count		3223000						
ANR	3223067	Symbol	read_tif_datum		3223000						
ANR	3223068	Symbol	index		3223000						
ANR	3223069	Symbol	& count		3223000						
ANR	3223070	Symbol	tag		3223000						
ANR	3223071	Symbol	type		3223000						
ANR	3223072	Function	open_tif_input_file	430:0:12449:15074							
ANR	3223073	FunctionDef	open_tif_input_file (context * con)		3223072	0					
ANR	3223074	CompoundStatement		431:0:12495:15074	3223072	0					
ANR	3223075	IdentifierDeclStatement	"int i , one = 1 ;"	432:4:12501:12513	3223072	0	True				
ANR	3223076	IdentifierDecl	i		3223072	0					
ANR	3223077	IdentifierDeclType	int		3223072	0					
ANR	3223078	Identifier	i		3223072	1					
ANR	3223079	IdentifierDecl	one = 1		3223072	1					
ANR	3223080	IdentifierDeclType	int		3223072	0					
ANR	3223081	Identifier	one		3223072	1					
ANR	3223082	AssignmentExpression	one = 1		3223072	2		=			
ANR	3223083	Identifier	one		3223072	0					
ANR	3223084	PrimaryExpression	1		3223072	1					
ANR	3223085	IdentifierDeclStatement	"uint16_t magic , nentry , tag , type ;"	433:4:12519:12552	3223072	1	True				
ANR	3223086	IdentifierDecl	magic		3223072	0					
ANR	3223087	IdentifierDeclType	uint16_t		3223072	0					
ANR	3223088	Identifier	magic		3223072	1					
ANR	3223089	IdentifierDecl	nentry		3223072	1					
ANR	3223090	IdentifierDeclType	uint16_t		3223072	0					
ANR	3223091	Identifier	nentry		3223072	1					
ANR	3223092	IdentifierDecl	tag		3223072	2					
ANR	3223093	IdentifierDeclType	uint16_t		3223072	0					
ANR	3223094	Identifier	tag		3223072	1					
ANR	3223095	IdentifierDecl	type		3223072	3					
ANR	3223096	IdentifierDeclType	uint16_t		3223072	0					
ANR	3223097	Identifier	type		3223072	1					
ANR	3223098	IdentifierDeclStatement	"uint32_t count , diroff ;"	434:4:12558:12580	3223072	2	True				
ANR	3223099	IdentifierDecl	count		3223072	0					
ANR	3223100	IdentifierDeclType	uint32_t		3223072	0					
ANR	3223101	Identifier	count		3223072	1					
ANR	3223102	IdentifierDecl	diroff		3223072	1					
ANR	3223103	IdentifierDeclType	uint32_t		3223072	0					
ANR	3223104	Identifier	diroff		3223072	1					
ANR	3223105	ExpressionStatement	rewind ( con -> file )	436:4:12587:12604	3223072	3	True				
ANR	3223106	CallExpression	rewind ( con -> file )		3223072	0					
ANR	3223107	Callee	rewind		3223072	0					
ANR	3223108	Identifier	rewind		3223072	0					
ANR	3223109	ArgumentList	con -> file		3223072	1					
ANR	3223110	Argument	con -> file		3223072	0					
ANR	3223111	PtrMemberAccess	con -> file		3223072	0					
ANR	3223112	Identifier	con		3223072	0					
ANR	3223113	Identifier	file		3223072	1					
ANR	3223114	ExpressionStatement	"read_uint16 ( con , & magic , 1 )"	437:4:12610:12637	3223072	4	True				
ANR	3223115	CallExpression	"read_uint16 ( con , & magic , 1 )"		3223072	0					
ANR	3223116	Callee	read_uint16		3223072	0					
ANR	3223117	Identifier	read_uint16		3223072	0					
ANR	3223118	ArgumentList	con		3223072	1					
ANR	3223119	Argument	con		3223072	0					
ANR	3223120	Identifier	con		3223072	0					
ANR	3223121	Argument	& magic		3223072	1					
ANR	3223122	UnaryOperationExpression	& magic		3223072	0					
ANR	3223123	UnaryOperator	&		3223072	0					
ANR	3223124	Identifier	magic		3223072	1					
ANR	3223125	Argument	1		3223072	2					
ANR	3223126	PrimaryExpression	1		3223072	0					
ANR	3223127	SwitchStatement	switch ( magic )		3223072	5					
ANR	3223128	Condition	magic	438:12:12651:12655	3223072	0	True				
ANR	3223129	Identifier	magic		3223072	0					
ANR	3223130	CompoundStatement		8:19:162:162	3223072	1					
ANR	3223131	Label	case 0x4949 :	439:8:12668:12680	3223072	0	True				
ANR	3223132	ExpressionStatement	con -> swap = * ( char * ) & one != 1	439:22:12682:12709	3223072	1	True				
ANR	3223133	AssignmentExpression	con -> swap = * ( char * ) & one != 1		3223072	0		=			
ANR	3223134	PtrMemberAccess	con -> swap		3223072	0					
ANR	3223135	Identifier	con		3223072	0					
ANR	3223136	Identifier	swap		3223072	1					
ANR	3223137	EqualityExpression	* ( char * ) & one != 1		3223072	1		!=			
ANR	3223138	UnaryOperationExpression	* ( char * ) & one		3223072	0					
ANR	3223139	UnaryOperator	*		3223072	0					
ANR	3223140	CastExpression	( char * ) & one		3223072	1					
ANR	3223141	CastTarget	char *		3223072	0					
ANR	3223142	UnaryOperationExpression	& one		3223072	1					
ANR	3223143	UnaryOperator	&		3223072	0					
ANR	3223144	Identifier	one		3223072	1					
ANR	3223145	PrimaryExpression	1		3223072	1					
ANR	3223146	BreakStatement	break ;	439:51:12711:12716	3223072	2	True				
ANR	3223147	Label	case 0x4d4d :	440:8:12726:12738	3223072	3	True				
ANR	3223148	ExpressionStatement	con -> swap = * ( char * ) & one == 1	440:22:12740:12767	3223072	4	True				
ANR	3223149	AssignmentExpression	con -> swap = * ( char * ) & one == 1		3223072	0		=			
ANR	3223150	PtrMemberAccess	con -> swap		3223072	0					
ANR	3223151	Identifier	con		3223072	0					
ANR	3223152	Identifier	swap		3223072	1					
ANR	3223153	EqualityExpression	* ( char * ) & one == 1		3223072	1		==			
ANR	3223154	UnaryOperationExpression	* ( char * ) & one		3223072	0					
ANR	3223155	UnaryOperator	*		3223072	0					
ANR	3223156	CastExpression	( char * ) & one		3223072	1					
ANR	3223157	CastTarget	char *		3223072	0					
ANR	3223158	UnaryOperationExpression	& one		3223072	1					
ANR	3223159	UnaryOperator	&		3223072	0					
ANR	3223160	Identifier	one		3223072	1					
ANR	3223161	PrimaryExpression	1		3223072	1					
ANR	3223162	BreakStatement	break ;	440:51:12769:12774	3223072	5	True				
ANR	3223163	Label	default :	441:8:12784:12792	3223072	6	True				
ANR	3223164	Identifier	default		3223072	0					
ANR	3223165	ExpressionStatement	"error ( ""bad magic number 0x%04x found at start of TIFF file %s"" , magic , con -> name )"	441:18:12794:12875	3223072	7	True				
ANR	3223166	CallExpression	"error ( ""bad magic number 0x%04x found at start of TIFF file %s"" , magic , con -> name )"		3223072	0					
ANR	3223167	Callee	error		3223072	0					
ANR	3223168	Identifier	error		3223072	0					
ANR	3223169	ArgumentList	"""bad magic number 0x%04x found at start of TIFF file %s"""		3223072	1					
ANR	3223170	Argument	"""bad magic number 0x%04x found at start of TIFF file %s"""		3223072	0					
ANR	3223171	PrimaryExpression	"""bad magic number 0x%04x found at start of TIFF file %s"""		3223072	0					
ANR	3223172	Argument	magic		3223072	1					
ANR	3223173	Identifier	magic		3223072	0					
ANR	3223174	Argument	con -> name		3223072	2					
ANR	3223175	PtrMemberAccess	con -> name		3223072	0					
ANR	3223176	Identifier	con		3223072	0					
ANR	3223177	Identifier	name		3223072	1					
ANR	3223178	ExpressionStatement	"read_uint16 ( con , & magic , 1 )"	443:4:12887:12914	3223072	6	True				
ANR	3223179	CallExpression	"read_uint16 ( con , & magic , 1 )"		3223072	0					
ANR	3223180	Callee	read_uint16		3223072	0					
ANR	3223181	Identifier	read_uint16		3223072	0					
ANR	3223182	ArgumentList	con		3223072	1					
ANR	3223183	Argument	con		3223072	0					
ANR	3223184	Identifier	con		3223072	0					
ANR	3223185	Argument	& magic		3223072	1					
ANR	3223186	UnaryOperationExpression	& magic		3223072	0					
ANR	3223187	UnaryOperator	&		3223072	0					
ANR	3223188	Identifier	magic		3223072	1					
ANR	3223189	Argument	1		3223072	2					
ANR	3223190	PrimaryExpression	1		3223072	0					
ANR	3223191	IfStatement	if ( magic != 42 )		3223072	7					
ANR	3223192	Condition	magic != 42	444:8:12924:12932	3223072	0	True				
ANR	3223193	EqualityExpression	magic != 42		3223072	0		!=			
ANR	3223194	Identifier	magic		3223072	0					
ANR	3223195	PrimaryExpression	42		3223072	1					
ANR	3223196	ExpressionStatement	"error ( ""magic number 42 not found in TIFF file %s"" , con -> name )"	445:8:12943:13004	3223072	1	True				
ANR	3223197	CallExpression	"error ( ""magic number 42 not found in TIFF file %s"" , con -> name )"		3223072	0					
ANR	3223198	Callee	error		3223072	0					
ANR	3223199	Identifier	error		3223072	0					
ANR	3223200	ArgumentList	"""magic number 42 not found in TIFF file %s"""		3223072	1					
ANR	3223201	Argument	"""magic number 42 not found in TIFF file %s"""		3223072	0					
ANR	3223202	PrimaryExpression	"""magic number 42 not found in TIFF file %s"""		3223072	0					
ANR	3223203	Argument	con -> name		3223072	1					
ANR	3223204	PtrMemberAccess	con -> name		3223072	0					
ANR	3223205	Identifier	con		3223072	0					
ANR	3223206	Identifier	name		3223072	1					
ANR	3223207	ExpressionStatement	"read_uint32 ( con , & diroff , 1 )"	446:4:13010:13038	3223072	8	True				
ANR	3223208	CallExpression	"read_uint32 ( con , & diroff , 1 )"		3223072	0					
ANR	3223209	Callee	read_uint32		3223072	0					
ANR	3223210	Identifier	read_uint32		3223072	0					
ANR	3223211	ArgumentList	con		3223072	1					
ANR	3223212	Argument	con		3223072	0					
ANR	3223213	Identifier	con		3223072	0					
ANR	3223214	Argument	& diroff		3223072	1					
ANR	3223215	UnaryOperationExpression	& diroff		3223072	0					
ANR	3223216	UnaryOperator	&		3223072	0					
ANR	3223217	Identifier	diroff		3223072	1					
ANR	3223218	Argument	1		3223072	2					
ANR	3223219	PrimaryExpression	1		3223072	0					
ANR	3223220	ExpressionStatement	"seek_file ( con , diroff , SEEK_SET )"	448:4:13045:13077	3223072	9	True				
ANR	3223221	CallExpression	"seek_file ( con , diroff , SEEK_SET )"		3223072	0					
ANR	3223222	Callee	seek_file		3223072	0					
ANR	3223223	Identifier	seek_file		3223072	0					
ANR	3223224	ArgumentList	con		3223072	1					
ANR	3223225	Argument	con		3223072	0					
ANR	3223226	Identifier	con		3223072	0					
ANR	3223227	Argument	diroff		3223072	1					
ANR	3223228	Identifier	diroff		3223072	0					
ANR	3223229	Argument	SEEK_SET		3223072	2					
ANR	3223230	Identifier	SEEK_SET		3223072	0					
ANR	3223231	ExpressionStatement	"read_uint16 ( con , & nentry , 1 )"	449:4:13083:13111	3223072	10	True				
ANR	3223232	CallExpression	"read_uint16 ( con , & nentry , 1 )"		3223072	0					
ANR	3223233	Callee	read_uint16		3223072	0					
ANR	3223234	Identifier	read_uint16		3223072	0					
ANR	3223235	ArgumentList	con		3223072	1					
ANR	3223236	Argument	con		3223072	0					
ANR	3223237	Identifier	con		3223072	0					
ANR	3223238	Argument	& nentry		3223072	1					
ANR	3223239	UnaryOperationExpression	& nentry		3223072	0					
ANR	3223240	UnaryOperator	&		3223072	0					
ANR	3223241	Identifier	nentry		3223072	1					
ANR	3223242	Argument	1		3223072	2					
ANR	3223243	PrimaryExpression	1		3223072	0					
ANR	3223244	ForStatement	for ( i = 0 ; i < nentry ; i ++ )		3223072	11					
ANR	3223245	ForInit	i = 0 ;	450:9:13122:13125	3223072	0	True				
ANR	3223246	AssignmentExpression	i = 0		3223072	0		=			
ANR	3223247	Identifier	i		3223072	0					
ANR	3223248	PrimaryExpression	0		3223072	1					
ANR	3223249	Condition	i < nentry	450:14:13127:13134	3223072	1	True				
ANR	3223250	RelationalExpression	i < nentry		3223072	0		<			
ANR	3223251	Identifier	i		3223072	0					
ANR	3223252	Identifier	nentry		3223072	1					
ANR	3223253	PostIncDecOperationExpression	i ++	450:24:13137:13139	3223072	2	True				
ANR	3223254	Identifier	i		3223072	0					
ANR	3223255	IncDec	++		3223072	1					
ANR	3223256	CompoundStatement		23:8:754:805	3223072	3					
ANR	3223257	IdentifierDeclStatement	int ifdoff = diroff + 2 + 12 * i ;	451:8:13152:13178	3223072	0	True				
ANR	3223258	IdentifierDecl	ifdoff = diroff + 2 + 12 * i		3223072	0					
ANR	3223259	IdentifierDeclType	int		3223072	0					
ANR	3223260	Identifier	ifdoff		3223072	1					
ANR	3223261	AssignmentExpression	ifdoff = diroff + 2 + 12 * i		3223072	2		=			
ANR	3223262	Identifier	ifdoff		3223072	0					
ANR	3223263	AdditiveExpression	diroff + 2 + 12 * i		3223072	1		+			
ANR	3223264	Identifier	diroff		3223072	0					
ANR	3223265	AdditiveExpression	2 + 12 * i		3223072	1		+			
ANR	3223266	PrimaryExpression	2		3223072	0					
ANR	3223267	MultiplicativeExpression	12 * i		3223072	1		*			
ANR	3223268	PrimaryExpression	12		3223072	0					
ANR	3223269	Identifier	i		3223072	1					
ANR	3223270	ExpressionStatement	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"	452:8:13188:13240	3223072	1	True				
ANR	3223271	CallExpression	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"		3223072	0					
ANR	3223272	Callee	read_tif_ifd_entry		3223072	0					
ANR	3223273	Identifier	read_tif_ifd_entry		3223072	0					
ANR	3223274	ArgumentList	con		3223072	1					
ANR	3223275	Argument	con		3223072	0					
ANR	3223276	Identifier	con		3223072	0					
ANR	3223277	Argument	ifdoff		3223072	1					
ANR	3223278	Identifier	ifdoff		3223072	0					
ANR	3223279	Argument	& tag		3223072	2					
ANR	3223280	UnaryOperationExpression	& tag		3223072	0					
ANR	3223281	UnaryOperator	&		3223072	0					
ANR	3223282	Identifier	tag		3223072	1					
ANR	3223283	Argument	& type		3223072	3					
ANR	3223284	UnaryOperationExpression	& type		3223072	0					
ANR	3223285	UnaryOperator	&		3223072	0					
ANR	3223286	Identifier	type		3223072	1					
ANR	3223287	Argument	& count		3223072	4					
ANR	3223288	UnaryOperationExpression	& count		3223072	0					
ANR	3223289	UnaryOperator	&		3223072	0					
ANR	3223290	Identifier	count		3223072	1					
ANR	3223291	IdentifierDeclStatement	"uint32_t data = read_tif_datum ( con , type , count , 0 ) ;"	453:8:13250:13301	3223072	2	True				
ANR	3223292	IdentifierDecl	"data = read_tif_datum ( con , type , count , 0 )"		3223072	0					
ANR	3223293	IdentifierDeclType	uint32_t		3223072	0					
ANR	3223294	Identifier	data		3223072	1					
ANR	3223295	AssignmentExpression	"data = read_tif_datum ( con , type , count , 0 )"		3223072	2		=			
ANR	3223296	Identifier	data		3223072	0					
ANR	3223297	CallExpression	"read_tif_datum ( con , type , count , 0 )"		3223072	1					
ANR	3223298	Callee	read_tif_datum		3223072	0					
ANR	3223299	Identifier	read_tif_datum		3223072	0					
ANR	3223300	ArgumentList	con		3223072	1					
ANR	3223301	Argument	con		3223072	0					
ANR	3223302	Identifier	con		3223072	0					
ANR	3223303	Argument	type		3223072	1					
ANR	3223304	Identifier	type		3223072	0					
ANR	3223305	Argument	count		3223072	2					
ANR	3223306	Identifier	count		3223072	0					
ANR	3223307	Argument	0		3223072	3					
ANR	3223308	PrimaryExpression	0		3223072	0					
ANR	3223309	SwitchStatement	switch ( tag )		3223072	3					
ANR	3223310	Condition	tag	454:16:13319:13321	3223072	0	True				
ANR	3223311	Identifier	tag		3223072	0					
ANR	3223312	CompoundStatement		24:21:828:828	3223072	1					
ANR	3223313	Label	case ImageWidth :	455:12:13338:13353	3223072	0	True				
ANR	3223314	Identifier	ImageWidth		3223072	0					
ANR	3223315	ExpressionStatement	con -> wid = data	456:16:13372:13387	3223072	1	True				
ANR	3223316	AssignmentExpression	con -> wid = data		3223072	0		=			
ANR	3223317	PtrMemberAccess	con -> wid		3223072	0					
ANR	3223318	Identifier	con		3223072	0					
ANR	3223319	Identifier	wid		3223072	1					
ANR	3223320	Identifier	data		3223072	1					
ANR	3223321	BreakStatement	break ;	457:16:13406:13411	3223072	2	True				
ANR	3223322	Label	case ImageLength :	458:12:13425:13441	3223072	3	True				
ANR	3223323	Identifier	ImageLength		3223072	0					
ANR	3223324	ExpressionStatement	con -> hei = data	459:16:13460:13475	3223072	4	True				
ANR	3223325	AssignmentExpression	con -> hei = data		3223072	0		=			
ANR	3223326	PtrMemberAccess	con -> hei		3223072	0					
ANR	3223327	Identifier	con		3223072	0					
ANR	3223328	Identifier	hei		3223072	1					
ANR	3223329	Identifier	data		3223072	1					
ANR	3223330	BreakStatement	break ;	460:16:13494:13499	3223072	5	True				
ANR	3223331	Label	case BitsPerSample :	461:12:13513:13531	3223072	6	True				
ANR	3223332	Identifier	BitsPerSample		3223072	0					
ANR	3223333	ExpressionStatement	con -> bpi = data	462:16:13550:13565	3223072	7	True				
ANR	3223334	AssignmentExpression	con -> bpi = data		3223072	0		=			
ANR	3223335	PtrMemberAccess	con -> bpi		3223072	0					
ANR	3223336	Identifier	con		3223072	0					
ANR	3223337	Identifier	bpi		3223072	1					
ANR	3223338	Identifier	data		3223072	1					
ANR	3223339	BreakStatement	break ;	463:16:13583:13588	3223072	8	True				
ANR	3223340	Label	case SamplesPerPixel :	464:12:13602:13622	3223072	9	True				
ANR	3223341	Identifier	SamplesPerPixel		3223072	0					
ANR	3223342	ExpressionStatement	con -> ncomp = data	465:16:13640:13657	3223072	10	True				
ANR	3223343	AssignmentExpression	con -> ncomp = data		3223072	0		=			
ANR	3223344	PtrMemberAccess	con -> ncomp		3223072	0					
ANR	3223345	Identifier	con		3223072	0					
ANR	3223346	Identifier	ncomp		3223072	1					
ANR	3223347	Identifier	data		3223072	1					
ANR	3223348	BreakStatement	break ;	466:16:13676:13681	3223072	11	True				
ANR	3223349	Label	case Compression :	467:12:13695:13711	3223072	12	True				
ANR	3223350	Identifier	Compression		3223072	0					
ANR	3223351	IfStatement	if ( data != 1 )		3223072	13					
ANR	3223352	Condition	data != 1	468:20:13734:13740	3223072	0	True				
ANR	3223353	EqualityExpression	data != 1		3223072	0		!=			
ANR	3223354	Identifier	data		3223072	0					
ANR	3223355	PrimaryExpression	1		3223072	1					
ANR	3223356	ExpressionStatement	"error ( ""TIFF input file %s is compressed"" , con -> name )"	469:20:13763:13815	3223072	1	True				
ANR	3223357	CallExpression	"error ( ""TIFF input file %s is compressed"" , con -> name )"		3223072	0					
ANR	3223358	Callee	error		3223072	0					
ANR	3223359	Identifier	error		3223072	0					
ANR	3223360	ArgumentList	"""TIFF input file %s is compressed"""		3223072	1					
ANR	3223361	Argument	"""TIFF input file %s is compressed"""		3223072	0					
ANR	3223362	PrimaryExpression	"""TIFF input file %s is compressed"""		3223072	0					
ANR	3223363	Argument	con -> name		3223072	1					
ANR	3223364	PtrMemberAccess	con -> name		3223072	0					
ANR	3223365	Identifier	con		3223072	0					
ANR	3223366	Identifier	name		3223072	1					
ANR	3223367	BreakStatement	break ;	470:16:13834:13839	3223072	14	True				
ANR	3223368	Label	case StripOffsets :	471:12:13853:13870	3223072	15	True				
ANR	3223369	Identifier	StripOffsets		3223072	0					
ANR	3223370	ExpressionStatement	con -> nstrips = count	472:16:13889:13909	3223072	16	True				
ANR	3223371	AssignmentExpression	con -> nstrips = count		3223072	0		=			
ANR	3223372	PtrMemberAccess	con -> nstrips		3223072	0					
ANR	3223373	Identifier	con		3223072	0					
ANR	3223374	Identifier	nstrips		3223072	1					
ANR	3223375	Identifier	count		3223072	1					
ANR	3223376	ExpressionStatement	con -> offoff = ifdoff	473:16:13927:13947	3223072	17	True				
ANR	3223377	AssignmentExpression	con -> offoff = ifdoff		3223072	0		=			
ANR	3223378	PtrMemberAccess	con -> offoff		3223072	0					
ANR	3223379	Identifier	con		3223072	0					
ANR	3223380	Identifier	offoff		3223072	1					
ANR	3223381	Identifier	ifdoff		3223072	1					
ANR	3223382	BreakStatement	break ;	474:16:13966:13971	3223072	18	True				
ANR	3223383	Label	case RowsPerStrip :	475:12:13985:14002	3223072	19	True				
ANR	3223384	Identifier	RowsPerStrip		3223072	0					
ANR	3223385	ExpressionStatement	con -> nlines = data	476:16:14021:14039	3223072	20	True				
ANR	3223386	AssignmentExpression	con -> nlines = data		3223072	0		=			
ANR	3223387	PtrMemberAccess	con -> nlines		3223072	0					
ANR	3223388	Identifier	con		3223072	0					
ANR	3223389	Identifier	nlines		3223072	1					
ANR	3223390	Identifier	data		3223072	1					
ANR	3223391	BreakStatement	break ;	477:16:14057:14062	3223072	21	True				
ANR	3223392	Label	case SampleFormat :	478:12:14076:14093	3223072	22	True				
ANR	3223393	Identifier	SampleFormat		3223072	0					
ANR	3223394	ExpressionStatement	con -> sf = data	479:16:14111:14125	3223072	23	True				
ANR	3223395	AssignmentExpression	con -> sf = data		3223072	0		=			
ANR	3223396	PtrMemberAccess	con -> sf		3223072	0					
ANR	3223397	Identifier	con		3223072	0					
ANR	3223398	Identifier	sf		3223072	1					
ANR	3223399	Identifier	data		3223072	1					
ANR	3223400	BreakStatement	break ;	480:16:14144:14149	3223072	24	True				
ANR	3223401	Label	case Photometric :	481:12:14164:14180	3223072	25	True				
ANR	3223402	Identifier	Photometric		3223072	0					
ANR	3223403	ExpressionStatement	con -> photometric = data	482:16:14198:14221	3223072	26	True				
ANR	3223404	AssignmentExpression	con -> photometric = data		3223072	0		=			
ANR	3223405	PtrMemberAccess	con -> photometric		3223072	0					
ANR	3223406	Identifier	con		3223072	0					
ANR	3223407	Identifier	photometric		3223072	1					
ANR	3223408	Identifier	data		3223072	1					
ANR	3223409	BreakStatement	break ;	483:16:14240:14245	3223072	27	True				
ANR	3223410	IfStatement	if ( con -> wid <= 0 )		3223072	12					
ANR	3223411	Condition	con -> wid <= 0	488:8:14274:14284	3223072	0	True				
ANR	3223412	RelationalExpression	con -> wid <= 0		3223072	0		<=			
ANR	3223413	PtrMemberAccess	con -> wid		3223072	0					
ANR	3223414	Identifier	con		3223072	0					
ANR	3223415	Identifier	wid		3223072	1					
ANR	3223416	PrimaryExpression	0		3223072	1					
ANR	3223417	ExpressionStatement	"error ( ""valid ImageWidth entry not found in directory of TIFF file %s"" , con -> name )"	489:8:14295:14376	3223072	1	True				
ANR	3223418	CallExpression	"error ( ""valid ImageWidth entry not found in directory of TIFF file %s"" , con -> name )"		3223072	0					
ANR	3223419	Callee	error		3223072	0					
ANR	3223420	Identifier	error		3223072	0					
ANR	3223421	ArgumentList	"""valid ImageWidth entry not found in directory of TIFF file %s"""		3223072	1					
ANR	3223422	Argument	"""valid ImageWidth entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223423	PrimaryExpression	"""valid ImageWidth entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223424	Argument	con -> name		3223072	1					
ANR	3223425	PtrMemberAccess	con -> name		3223072	0					
ANR	3223426	Identifier	con		3223072	0					
ANR	3223427	Identifier	name		3223072	1					
ANR	3223428	IfStatement	if ( con -> hei <= 0 )		3223072	13					
ANR	3223429	Condition	con -> hei <= 0	490:8:14386:14396	3223072	0	True				
ANR	3223430	RelationalExpression	con -> hei <= 0		3223072	0		<=			
ANR	3223431	PtrMemberAccess	con -> hei		3223072	0					
ANR	3223432	Identifier	con		3223072	0					
ANR	3223433	Identifier	hei		3223072	1					
ANR	3223434	PrimaryExpression	0		3223072	1					
ANR	3223435	ExpressionStatement	"error ( ""valid ImageLength entry not found in directory of TIFF file %s"" , con -> name )"	491:8:14407:14489	3223072	1	True				
ANR	3223436	CallExpression	"error ( ""valid ImageLength entry not found in directory of TIFF file %s"" , con -> name )"		3223072	0					
ANR	3223437	Callee	error		3223072	0					
ANR	3223438	Identifier	error		3223072	0					
ANR	3223439	ArgumentList	"""valid ImageLength entry not found in directory of TIFF file %s"""		3223072	1					
ANR	3223440	Argument	"""valid ImageLength entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223441	PrimaryExpression	"""valid ImageLength entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223442	Argument	con -> name		3223072	1					
ANR	3223443	PtrMemberAccess	con -> name		3223072	0					
ANR	3223444	Identifier	con		3223072	0					
ANR	3223445	Identifier	name		3223072	1					
ANR	3223446	IfStatement	if ( con -> ncomp != 1 && con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5 )		3223072	14					
ANR	3223447	Condition	con -> ncomp != 1 && con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5	492:8:14499:14562	3223072	0	True				
ANR	3223448	AndExpression	con -> ncomp != 1 && con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5		3223072	0		&&			
ANR	3223449	EqualityExpression	con -> ncomp != 1		3223072	0		!=			
ANR	3223450	PtrMemberAccess	con -> ncomp		3223072	0					
ANR	3223451	Identifier	con		3223072	0					
ANR	3223452	Identifier	ncomp		3223072	1					
ANR	3223453	PrimaryExpression	1		3223072	1					
ANR	3223454	AndExpression	con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5		3223072	1		&&			
ANR	3223455	EqualityExpression	con -> ncomp != 3		3223072	0		!=			
ANR	3223456	PtrMemberAccess	con -> ncomp		3223072	0					
ANR	3223457	Identifier	con		3223072	0					
ANR	3223458	Identifier	ncomp		3223072	1					
ANR	3223459	PrimaryExpression	3		3223072	1					
ANR	3223460	AndExpression	con -> ncomp != 4 && con -> ncomp != 5		3223072	1		&&			
ANR	3223461	EqualityExpression	con -> ncomp != 4		3223072	0		!=			
ANR	3223462	PtrMemberAccess	con -> ncomp		3223072	0					
ANR	3223463	Identifier	con		3223072	0					
ANR	3223464	Identifier	ncomp		3223072	1					
ANR	3223465	PrimaryExpression	4		3223072	1					
ANR	3223466	EqualityExpression	con -> ncomp != 5		3223072	1		!=			
ANR	3223467	PtrMemberAccess	con -> ncomp		3223072	0					
ANR	3223468	Identifier	con		3223072	0					
ANR	3223469	Identifier	ncomp		3223072	1					
ANR	3223470	PrimaryExpression	5		3223072	1					
ANR	3223471	ExpressionStatement	"error ( ""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"" , con -> name )"	493:8:14573:14675	3223072	1	True				
ANR	3223472	CallExpression	"error ( ""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"" , con -> name )"		3223072	0					
ANR	3223473	Callee	error		3223072	0					
ANR	3223474	Identifier	error		3223072	0					
ANR	3223475	ArgumentList	"""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"""		3223072	1					
ANR	3223476	Argument	"""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"""		3223072	0					
ANR	3223477	PrimaryExpression	"""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"""		3223072	0					
ANR	3223478	Argument	con -> name		3223072	1					
ANR	3223479	PtrMemberAccess	con -> name		3223072	0					
ANR	3223480	Identifier	con		3223072	0					
ANR	3223481	Identifier	name		3223072	1					
ANR	3223482	IfStatement	if ( con -> bpi > 32 )		3223072	15					
ANR	3223483	Condition	con -> bpi > 32	494:8:14685:14695	3223072	0	True				
ANR	3223484	RelationalExpression	con -> bpi > 32		3223072	0		>			
ANR	3223485	PtrMemberAccess	con -> bpi		3223072	0					
ANR	3223486	Identifier	con		3223072	0					
ANR	3223487	Identifier	bpi		3223072	1					
ANR	3223488	PrimaryExpression	32		3223072	1					
ANR	3223489	ExpressionStatement	"error ( ""valid BitsPerSample entry not found in directory of TIFF file %s"" , con -> name )"	495:8:14706:14790	3223072	1	True				
ANR	3223490	CallExpression	"error ( ""valid BitsPerSample entry not found in directory of TIFF file %s"" , con -> name )"		3223072	0					
ANR	3223491	Callee	error		3223072	0					
ANR	3223492	Identifier	error		3223072	0					
ANR	3223493	ArgumentList	"""valid BitsPerSample entry not found in directory of TIFF file %s"""		3223072	1					
ANR	3223494	Argument	"""valid BitsPerSample entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223495	PrimaryExpression	"""valid BitsPerSample entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223496	Argument	con -> name		3223072	1					
ANR	3223497	PtrMemberAccess	con -> name		3223072	0					
ANR	3223498	Identifier	con		3223072	0					
ANR	3223499	Identifier	name		3223072	1					
ANR	3223500	IfStatement	if ( con -> nstrips <= 0 || con -> offoff == 0 )		3223072	16					
ANR	3223501	Condition	con -> nstrips <= 0 || con -> offoff == 0	496:8:14800:14832	3223072	0	True				
ANR	3223502	OrExpression	con -> nstrips <= 0 || con -> offoff == 0		3223072	0		||			
ANR	3223503	RelationalExpression	con -> nstrips <= 0		3223072	0		<=			
ANR	3223504	PtrMemberAccess	con -> nstrips		3223072	0					
ANR	3223505	Identifier	con		3223072	0					
ANR	3223506	Identifier	nstrips		3223072	1					
ANR	3223507	PrimaryExpression	0		3223072	1					
ANR	3223508	EqualityExpression	con -> offoff == 0		3223072	1		==			
ANR	3223509	PtrMemberAccess	con -> offoff		3223072	0					
ANR	3223510	Identifier	con		3223072	0					
ANR	3223511	Identifier	offoff		3223072	1					
ANR	3223512	PrimaryExpression	0		3223072	1					
ANR	3223513	ExpressionStatement	"error ( ""valid StripOffsets entry not found in directory of TIFF file %s"" , con -> name )"	497:8:14843:14926	3223072	1	True				
ANR	3223514	CallExpression	"error ( ""valid StripOffsets entry not found in directory of TIFF file %s"" , con -> name )"		3223072	0					
ANR	3223515	Callee	error		3223072	0					
ANR	3223516	Identifier	error		3223072	0					
ANR	3223517	ArgumentList	"""valid StripOffsets entry not found in directory of TIFF file %s"""		3223072	1					
ANR	3223518	Argument	"""valid StripOffsets entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223519	PrimaryExpression	"""valid StripOffsets entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223520	Argument	con -> name		3223072	1					
ANR	3223521	PtrMemberAccess	con -> name		3223072	0					
ANR	3223522	Identifier	con		3223072	0					
ANR	3223523	Identifier	name		3223072	1					
ANR	3223524	IfStatement	if ( con -> nlines <= 0 )		3223072	17					
ANR	3223525	Condition	con -> nlines <= 0	498:8:14936:14949	3223072	0	True				
ANR	3223526	RelationalExpression	con -> nlines <= 0		3223072	0		<=			
ANR	3223527	PtrMemberAccess	con -> nlines		3223072	0					
ANR	3223528	Identifier	con		3223072	0					
ANR	3223529	Identifier	nlines		3223072	1					
ANR	3223530	PrimaryExpression	0		3223072	1					
ANR	3223531	ExpressionStatement	"error ( ""valid RowsPerStrip entry not found in directory of TIFF file %s"" , con -> name )"	499:8:14960:15043	3223072	1	True				
ANR	3223532	CallExpression	"error ( ""valid RowsPerStrip entry not found in directory of TIFF file %s"" , con -> name )"		3223072	0					
ANR	3223533	Callee	error		3223072	0					
ANR	3223534	Identifier	error		3223072	0					
ANR	3223535	ArgumentList	"""valid RowsPerStrip entry not found in directory of TIFF file %s"""		3223072	1					
ANR	3223536	Argument	"""valid RowsPerStrip entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223537	PrimaryExpression	"""valid RowsPerStrip entry not found in directory of TIFF file %s"""		3223072	0					
ANR	3223538	Argument	con -> name		3223072	1					
ANR	3223539	PtrMemberAccess	con -> name		3223072	0					
ANR	3223540	Identifier	con		3223072	0					
ANR	3223541	Identifier	name		3223072	1					
ANR	3223542	ExpressionStatement	con -> line = con -> nlines	500:4:15049:15072	3223072	18	True				
ANR	3223543	AssignmentExpression	con -> line = con -> nlines		3223072	0		=			
ANR	3223544	PtrMemberAccess	con -> line		3223072	0					
ANR	3223545	Identifier	con		3223072	0					
ANR	3223546	Identifier	line		3223072	1					
ANR	3223547	PtrMemberAccess	con -> nlines		3223072	1					
ANR	3223548	Identifier	con		3223072	0					
ANR	3223549	Identifier	nlines		3223072	1					
ANR	3223550	ReturnType	static void		3223072	1					
ANR	3223551	Identifier	open_tif_input_file		3223072	2					
ANR	3223552	ParameterList	context * con		3223072	3					
ANR	3223553	Parameter	context * con	430:32:12481:12492	3223072	0	True				
ANR	3223554	ParameterType	context *		3223072	0					
ANR	3223555	Identifier	con		3223072	1					
ANR	3223556	CFGEntryNode	ENTRY		3223072		True				
ANR	3223557	CFGExitNode	EXIT		3223072		True				
ANR	3223558	Symbol	magic		3223072						
ANR	3223559	Symbol	con		3223072						
ANR	3223560	Symbol	data		3223072						
ANR	3223561	Symbol	con -> ncomp		3223072						
ANR	3223562	Symbol	& magic		3223072						
ANR	3223563	Symbol	& tag		3223072						
ANR	3223564	Symbol	& one		3223072						
ANR	3223565	Symbol	type		3223072						
ANR	3223566	Symbol	con -> swap		3223072						
ANR	3223567	Symbol	ifdoff		3223072						
ANR	3223568	Symbol	& nentry		3223072						
ANR	3223569	Symbol	* con		3223072						
ANR	3223570	Symbol	con -> bpi		3223072						
ANR	3223571	Symbol	con -> nlines		3223072						
ANR	3223572	Symbol	read_tif_datum		3223072						
ANR	3223573	Symbol	* ( char * ) & one		3223072						
ANR	3223574	Symbol	con -> photometric		3223072						
ANR	3223575	Symbol	tag		3223072						
ANR	3223576	Symbol	con -> nstrips		3223072						
ANR	3223577	Symbol	con -> wid		3223072						
ANR	3223578	Symbol	SEEK_SET		3223072						
ANR	3223579	Symbol	diroff		3223072						
ANR	3223580	Symbol	con -> file		3223072						
ANR	3223581	Symbol	con -> hei		3223072						
ANR	3223582	Symbol	& type		3223072						
ANR	3223583	Symbol	con -> offoff		3223072						
ANR	3223584	Symbol	one		3223072						
ANR	3223585	Symbol	count		3223072						
ANR	3223586	Symbol	i		3223072						
ANR	3223587	Symbol	& diroff		3223072						
ANR	3223588	Symbol	con -> name		3223072						
ANR	3223589	Symbol	con -> line		3223072						
ANR	3223590	Symbol	& count		3223072						
ANR	3223591	Symbol	nentry		3223072						
ANR	3223592	Symbol	con -> sf		3223072						
ANR	3223593	Function	put_ifd_entry	504:0:15078:15380							
ANR	3223594	FunctionDef	"put_ifd_entry (context * con , int tag , int type , int count , uint32_t offset)"		3223593	0					
ANR	3223595	CompoundStatement		505:0:15165:15380	3223593	0					
ANR	3223596	ExpressionStatement	"put_uint16 ( con , tag )"	506:4:15171:15191	3223593	0	True				
ANR	3223597	CallExpression	"put_uint16 ( con , tag )"		3223593	0					
ANR	3223598	Callee	put_uint16		3223593	0					
ANR	3223599	Identifier	put_uint16		3223593	0					
ANR	3223600	ArgumentList	con		3223593	1					
ANR	3223601	Argument	con		3223593	0					
ANR	3223602	Identifier	con		3223593	0					
ANR	3223603	Argument	tag		3223593	1					
ANR	3223604	Identifier	tag		3223593	0					
ANR	3223605	ExpressionStatement	"put_uint16 ( con , type )"	507:4:15197:15218	3223593	1	True				
ANR	3223606	CallExpression	"put_uint16 ( con , type )"		3223593	0					
ANR	3223607	Callee	put_uint16		3223593	0					
ANR	3223608	Identifier	put_uint16		3223593	0					
ANR	3223609	ArgumentList	con		3223593	1					
ANR	3223610	Argument	con		3223593	0					
ANR	3223611	Identifier	con		3223593	0					
ANR	3223612	Argument	type		3223593	1					
ANR	3223613	Identifier	type		3223593	0					
ANR	3223614	ExpressionStatement	"put_uint32 ( con , count )"	508:4:15224:15246	3223593	2	True				
ANR	3223615	CallExpression	"put_uint32 ( con , count )"		3223593	0					
ANR	3223616	Callee	put_uint32		3223593	0					
ANR	3223617	Identifier	put_uint32		3223593	0					
ANR	3223618	ArgumentList	con		3223593	1					
ANR	3223619	Argument	con		3223593	0					
ANR	3223620	Identifier	con		3223593	0					
ANR	3223621	Argument	count		3223593	1					
ANR	3223622	Identifier	count		3223593	0					
ANR	3223623	IfStatement	if ( type == 3 && count == 1 )		3223593	3					
ANR	3223624	Condition	type == 3 && count == 1	509:8:15256:15274	3223593	0	True				
ANR	3223625	AndExpression	type == 3 && count == 1		3223593	0		&&			
ANR	3223626	EqualityExpression	type == 3		3223593	0		==			
ANR	3223627	Identifier	type		3223593	0					
ANR	3223628	PrimaryExpression	3		3223593	1					
ANR	3223629	EqualityExpression	count == 1		3223593	1		==			
ANR	3223630	Identifier	count		3223593	0					
ANR	3223631	PrimaryExpression	1		3223593	1					
ANR	3223632	CompoundStatement		5:29:111:111	3223593	1					
ANR	3223633	ExpressionStatement	"put_uint16 ( con , offset )"	510:8:15287:15310	3223593	0	True				
ANR	3223634	CallExpression	"put_uint16 ( con , offset )"		3223593	0					
ANR	3223635	Callee	put_uint16		3223593	0					
ANR	3223636	Identifier	put_uint16		3223593	0					
ANR	3223637	ArgumentList	con		3223593	1					
ANR	3223638	Argument	con		3223593	0					
ANR	3223639	Identifier	con		3223593	0					
ANR	3223640	Argument	offset		3223593	1					
ANR	3223641	Identifier	offset		3223593	0					
ANR	3223642	ExpressionStatement	"put_uint16 ( con , 0 )"	511:8:15320:15338	3223593	1	True				
ANR	3223643	CallExpression	"put_uint16 ( con , 0 )"		3223593	0					
ANR	3223644	Callee	put_uint16		3223593	0					
ANR	3223645	Identifier	put_uint16		3223593	0					
ANR	3223646	ArgumentList	con		3223593	1					
ANR	3223647	Argument	con		3223593	0					
ANR	3223648	Identifier	con		3223593	0					
ANR	3223649	Argument	0		3223593	1					
ANR	3223650	PrimaryExpression	0		3223593	0					
ANR	3223651	ElseStatement	else		3223593	0					
ANR	3223652	ExpressionStatement	"put_uint32 ( con , offset )"	513:9:15355:15378	3223593	0	True				
ANR	3223653	CallExpression	"put_uint32 ( con , offset )"		3223593	0					
ANR	3223654	Callee	put_uint32		3223593	0					
ANR	3223655	Identifier	put_uint32		3223593	0					
ANR	3223656	ArgumentList	con		3223593	1					
ANR	3223657	Argument	con		3223593	0					
ANR	3223658	Identifier	con		3223593	0					
ANR	3223659	Argument	offset		3223593	1					
ANR	3223660	Identifier	offset		3223593	0					
ANR	3223661	ReturnType	static void		3223593	1					
ANR	3223662	Identifier	put_ifd_entry		3223593	2					
ANR	3223663	ParameterList	"context * con , int tag , int type , int count , uint32_t offset"		3223593	3					
ANR	3223664	Parameter	context * con	504:26:15104:15115	3223593	0	True				
ANR	3223665	ParameterType	context *		3223593	0					
ANR	3223666	Identifier	con		3223593	1					
ANR	3223667	Parameter	int tag	504:40:15118:15124	3223593	1	True				
ANR	3223668	ParameterType	int		3223593	0					
ANR	3223669	Identifier	tag		3223593	1					
ANR	3223670	Parameter	int type	504:49:15127:15134	3223593	2	True				
ANR	3223671	ParameterType	int		3223593	0					
ANR	3223672	Identifier	type		3223593	1					
ANR	3223673	Parameter	int count	504:59:15137:15145	3223593	3	True				
ANR	3223674	ParameterType	int		3223593	0					
ANR	3223675	Identifier	count		3223593	1					
ANR	3223676	Parameter	uint32_t offset	504:70:15148:15162	3223593	4	True				
ANR	3223677	ParameterType	uint32_t		3223593	0					
ANR	3223678	Identifier	offset		3223593	1					
ANR	3223679	CFGEntryNode	ENTRY		3223593		True				
ANR	3223680	CFGExitNode	EXIT		3223593		True				
ANR	3223681	Symbol	con		3223593						
ANR	3223682	Symbol	offset		3223593						
ANR	3223683	Symbol	count		3223593						
ANR	3223684	Symbol	tag		3223593						
ANR	3223685	Symbol	type		3223593						
ANR	3223686	Function	validate_tif_output	516:0:15383:18959							
ANR	3223687	FunctionDef	validate_tif_output (jxrc_t_pixelFormat ePixelFormat)		3223686	0					
ANR	3223688	CompoundStatement		517:0:15449:18959	3223686	0					
ANR	3223689	SwitchStatement	switch ( ePixelFormat )		3223686	0					
ANR	3223690	Condition	ePixelFormat	518:11:15462:15473	3223686	0	True				
ANR	3223691	Identifier	ePixelFormat		3223686	0					
ANR	3223692	CompoundStatement		3:4:30:30	3223686	1					
ANR	3223693	Label	case JXRC_FMT_24bppRGB :	520:4:15486:15508	3223686	0	True				
ANR	3223694	Identifier	JXRC_FMT_24bppRGB		3223686	0					
ANR	3223695	ReturnStatement	return 1 ;	520:27:15509:15517	3223686	1	True				
ANR	3223696	PrimaryExpression	1		3223686	0					
ANR	3223697	Label	case JXRC_FMT_24bppBGR :	521:4:15523:15545	3223686	2	True				
ANR	3223698	Identifier	JXRC_FMT_24bppBGR		3223686	0					
ANR	3223699	ReturnStatement	return 0 ;	521:28:15547:15555	3223686	3	True				
ANR	3223700	PrimaryExpression	0		3223686	0					
ANR	3223701	Label	case JXRC_FMT_32bppBGR :	522:4:15561:15583	3223686	4	True				
ANR	3223702	Identifier	JXRC_FMT_32bppBGR		3223686	0					
ANR	3223703	ReturnStatement	return 0 ;	522:27:15584:15592	3223686	5	True				
ANR	3223704	PrimaryExpression	0		3223686	0					
ANR	3223705	Label	case JXRC_FMT_48bppRGB :	523:4:15598:15620	3223686	6	True				
ANR	3223706	Identifier	JXRC_FMT_48bppRGB		3223686	0					
ANR	3223707	ReturnStatement	return 1 ;	523:27:15621:15629	3223686	7	True				
ANR	3223708	PrimaryExpression	1		3223686	0					
ANR	3223709	Label	case JXRC_FMT_48bppRGBFixedPoint :	524:4:15635:15667	3223686	8	True				
ANR	3223710	Identifier	JXRC_FMT_48bppRGBFixedPoint		3223686	0					
ANR	3223711	ReturnStatement	return 1 ;	524:38:15669:15677	3223686	9	True				
ANR	3223712	PrimaryExpression	1		3223686	0					
ANR	3223713	Label	case JXRC_FMT_48bppRGBHalf :	525:4:15683:15709	3223686	10	True				
ANR	3223714	Identifier	JXRC_FMT_48bppRGBHalf		3223686	0					
ANR	3223715	ReturnStatement	return 1 ;	525:32:15711:15719	3223686	11	True				
ANR	3223716	PrimaryExpression	1		3223686	0					
ANR	3223717	Label	case JXRC_FMT_96bppRGBFixedPoint :	526:4:15725:15757	3223686	12	True				
ANR	3223718	Identifier	JXRC_FMT_96bppRGBFixedPoint		3223686	0					
ANR	3223719	ReturnStatement	return 1 ;	526:37:15758:15766	3223686	13	True				
ANR	3223720	PrimaryExpression	1		3223686	0					
ANR	3223721	Label	case JXRC_FMT_64bppRGBFixedPoint :	527:4:15772:15804	3223686	14	True				
ANR	3223722	Identifier	JXRC_FMT_64bppRGBFixedPoint		3223686	0					
ANR	3223723	ReturnStatement	return 1 ;	527:37:15805:15813	3223686	15	True				
ANR	3223724	PrimaryExpression	1		3223686	0					
ANR	3223725	Label	case JXRC_FMT_64bppRGBHalf :	528:4:15819:15845	3223686	16	True				
ANR	3223726	Identifier	JXRC_FMT_64bppRGBHalf		3223686	0					
ANR	3223727	ReturnStatement	return 1 ;	528:31:15846:15854	3223686	17	True				
ANR	3223728	PrimaryExpression	1		3223686	0					
ANR	3223729	Label	case JXRC_FMT_128bppRGBFixedPoint :	529:4:15860:15893	3223686	18	True				
ANR	3223730	Identifier	JXRC_FMT_128bppRGBFixedPoint		3223686	0					
ANR	3223731	ReturnStatement	return 1 ;	529:38:15894:15902	3223686	19	True				
ANR	3223732	PrimaryExpression	1		3223686	0					
ANR	3223733	Label	case JXRC_FMT_128bppRGBFloat :	530:4:15908:15936	3223686	20	True				
ANR	3223734	Identifier	JXRC_FMT_128bppRGBFloat		3223686	0					
ANR	3223735	ReturnStatement	return 1 ;	530:33:15937:15945	3223686	21	True				
ANR	3223736	PrimaryExpression	1		3223686	0					
ANR	3223737	Label	case JXRC_FMT_32bppBGRA :	531:4:15951:15974	3223686	22	True				
ANR	3223738	Identifier	JXRC_FMT_32bppBGRA		3223686	0					
ANR	3223739	ReturnStatement	return 0 ;	531:28:15975:15983	3223686	23	True				
ANR	3223740	PrimaryExpression	0		3223686	0					
ANR	3223741	Label	case JXRC_FMT_64bppRGBA :	532:4:15989:16012	3223686	24	True				
ANR	3223742	Identifier	JXRC_FMT_64bppRGBA		3223686	0					
ANR	3223743	ReturnStatement	return 1 ;	532:28:16013:16021	3223686	25	True				
ANR	3223744	PrimaryExpression	1		3223686	0					
ANR	3223745	Label	case JXRC_FMT_64bppRGBAFixedPoint :	533:4:16027:16060	3223686	26	True				
ANR	3223746	Identifier	JXRC_FMT_64bppRGBAFixedPoint		3223686	0					
ANR	3223747	ReturnStatement	return 1 ;	533:38:16061:16069	3223686	27	True				
ANR	3223748	PrimaryExpression	1		3223686	0					
ANR	3223749	Label	case JXRC_FMT_64bppRGBAHalf :	534:4:16075:16102	3223686	28	True				
ANR	3223750	Identifier	JXRC_FMT_64bppRGBAHalf		3223686	0					
ANR	3223751	ReturnStatement	return 1 ;	534:32:16103:16111	3223686	29	True				
ANR	3223752	PrimaryExpression	1		3223686	0					
ANR	3223753	Label	case JXRC_FMT_128bppRGBAFixedPoint :	535:4:16117:16151	3223686	30	True				
ANR	3223754	Identifier	JXRC_FMT_128bppRGBAFixedPoint		3223686	0					
ANR	3223755	ReturnStatement	return 1 ;	535:39:16152:16160	3223686	31	True				
ANR	3223756	PrimaryExpression	1		3223686	0					
ANR	3223757	Label	case JXRC_FMT_128bppRGBAFloat :	536:4:16166:16195	3223686	32	True				
ANR	3223758	Identifier	JXRC_FMT_128bppRGBAFloat		3223686	0					
ANR	3223759	ReturnStatement	return 1 ;	536:34:16196:16204	3223686	33	True				
ANR	3223760	PrimaryExpression	1		3223686	0					
ANR	3223761	Label	case JXRC_FMT_32bppPBGRA :	537:4:16210:16234	3223686	34	True				
ANR	3223762	Identifier	JXRC_FMT_32bppPBGRA		3223686	0					
ANR	3223763	ReturnStatement	return 0 ;	537:29:16235:16243	3223686	35	True				
ANR	3223764	PrimaryExpression	0		3223686	0					
ANR	3223765	Label	case JXRC_FMT_64bppPRGBA :	538:4:16249:16273	3223686	36	True				
ANR	3223766	Identifier	JXRC_FMT_64bppPRGBA		3223686	0					
ANR	3223767	ReturnStatement	return 0 ;	538:29:16274:16282	3223686	37	True				
ANR	3223768	PrimaryExpression	0		3223686	0					
ANR	3223769	Label	case JXRC_FMT_128bppPRGBAFloat :	539:4:16288:16318	3223686	38	True				
ANR	3223770	Identifier	JXRC_FMT_128bppPRGBAFloat		3223686	0					
ANR	3223771	ReturnStatement	return 0 ;	539:35:16319:16327	3223686	39	True				
ANR	3223772	PrimaryExpression	0		3223686	0					
ANR	3223773	Label	case JXRC_FMT_32bppCMYK :	540:4:16333:16356	3223686	40	True				
ANR	3223774	Identifier	JXRC_FMT_32bppCMYK		3223686	0					
ANR	3223775	ReturnStatement	return 1 ;	540:28:16357:16365	3223686	41	True				
ANR	3223776	PrimaryExpression	1		3223686	0					
ANR	3223777	Label	case JXRC_FMT_40bppCMYKAlpha :	541:4:16371:16399	3223686	42	True				
ANR	3223778	Identifier	JXRC_FMT_40bppCMYKAlpha		3223686	0					
ANR	3223779	ReturnStatement	return 1 ;	541:33:16400:16408	3223686	43	True				
ANR	3223780	PrimaryExpression	1		3223686	0					
ANR	3223781	Label	case JXRC_FMT_64bppCMYK :	542:4:16414:16437	3223686	44	True				
ANR	3223782	Identifier	JXRC_FMT_64bppCMYK		3223686	0					
ANR	3223783	ReturnStatement	return 1 ;	542:28:16438:16446	3223686	45	True				
ANR	3223784	PrimaryExpression	1		3223686	0					
ANR	3223785	Label	case JXRC_FMT_80bppCMYKAlpha :	543:4:16452:16480	3223686	46	True				
ANR	3223786	Identifier	JXRC_FMT_80bppCMYKAlpha		3223686	0					
ANR	3223787	ReturnStatement	return 1 ;	543:33:16481:16489	3223686	47	True				
ANR	3223788	PrimaryExpression	1		3223686	0					
ANR	3223789	Label	case JXRC_FMT_24bpp3Channels :	544:4:16495:16523	3223686	48	True				
ANR	3223790	Identifier	JXRC_FMT_24bpp3Channels		3223686	0					
ANR	3223791	ReturnStatement	return 0 ;	544:33:16524:16532	3223686	49	True				
ANR	3223792	PrimaryExpression	0		3223686	0					
ANR	3223793	Label	case JXRC_FMT_32bpp4Channels :	545:4:16538:16566	3223686	50	True				
ANR	3223794	Identifier	JXRC_FMT_32bpp4Channels		3223686	0					
ANR	3223795	ReturnStatement	return 0 ;	545:33:16567:16575	3223686	51	True				
ANR	3223796	PrimaryExpression	0		3223686	0					
ANR	3223797	Label	case JXRC_FMT_40bpp5Channels :	546:4:16581:16609	3223686	52	True				
ANR	3223798	Identifier	JXRC_FMT_40bpp5Channels		3223686	0					
ANR	3223799	ReturnStatement	return 0 ;	546:33:16610:16618	3223686	53	True				
ANR	3223800	PrimaryExpression	0		3223686	0					
ANR	3223801	Label	case JXRC_FMT_48bpp6Channels :	547:4:16624:16652	3223686	54	True				
ANR	3223802	Identifier	JXRC_FMT_48bpp6Channels		3223686	0					
ANR	3223803	ReturnStatement	return 0 ;	547:33:16653:16661	3223686	55	True				
ANR	3223804	PrimaryExpression	0		3223686	0					
ANR	3223805	Label	case JXRC_FMT_56bpp7Channels :	548:4:16667:16695	3223686	56	True				
ANR	3223806	Identifier	JXRC_FMT_56bpp7Channels		3223686	0					
ANR	3223807	ReturnStatement	return 0 ;	548:33:16696:16704	3223686	57	True				
ANR	3223808	PrimaryExpression	0		3223686	0					
ANR	3223809	Label	case JXRC_FMT_64bpp8Channels :	549:4:16710:16738	3223686	58	True				
ANR	3223810	Identifier	JXRC_FMT_64bpp8Channels		3223686	0					
ANR	3223811	ReturnStatement	return 0 ;	549:33:16739:16747	3223686	59	True				
ANR	3223812	PrimaryExpression	0		3223686	0					
ANR	3223813	Label	case JXRC_FMT_32bpp3ChannelsAlpha :	550:4:16753:16786	3223686	60	True				
ANR	3223814	Identifier	JXRC_FMT_32bpp3ChannelsAlpha		3223686	0					
ANR	3223815	ReturnStatement	return 0 ;	550:38:16787:16795	3223686	61	True				
ANR	3223816	PrimaryExpression	0		3223686	0					
ANR	3223817	Label	case JXRC_FMT_40bpp4ChannelsAlpha :	551:4:16801:16834	3223686	62	True				
ANR	3223818	Identifier	JXRC_FMT_40bpp4ChannelsAlpha		3223686	0					
ANR	3223819	ReturnStatement	return 0 ;	551:38:16835:16843	3223686	63	True				
ANR	3223820	PrimaryExpression	0		3223686	0					
ANR	3223821	Label	case JXRC_FMT_48bpp5ChannelsAlpha :	552:4:16849:16882	3223686	64	True				
ANR	3223822	Identifier	JXRC_FMT_48bpp5ChannelsAlpha		3223686	0					
ANR	3223823	ReturnStatement	return 0 ;	552:38:16883:16891	3223686	65	True				
ANR	3223824	PrimaryExpression	0		3223686	0					
ANR	3223825	Label	case JXRC_FMT_56bpp6ChannelsAlpha :	553:4:16897:16930	3223686	66	True				
ANR	3223826	Identifier	JXRC_FMT_56bpp6ChannelsAlpha		3223686	0					
ANR	3223827	ReturnStatement	return 0 ;	553:38:16931:16939	3223686	67	True				
ANR	3223828	PrimaryExpression	0		3223686	0					
ANR	3223829	Label	case JXRC_FMT_64bpp7ChannelsAlpha :	554:4:16945:16978	3223686	68	True				
ANR	3223830	Identifier	JXRC_FMT_64bpp7ChannelsAlpha		3223686	0					
ANR	3223831	ReturnStatement	return 0 ;	554:38:16979:16987	3223686	69	True				
ANR	3223832	PrimaryExpression	0		3223686	0					
ANR	3223833	Label	case JXRC_FMT_72bpp8ChannelsAlpha :	555:4:16993:17026	3223686	70	True				
ANR	3223834	Identifier	JXRC_FMT_72bpp8ChannelsAlpha		3223686	0					
ANR	3223835	ReturnStatement	return 0 ;	555:38:17027:17035	3223686	71	True				
ANR	3223836	PrimaryExpression	0		3223686	0					
ANR	3223837	Label	case JXRC_FMT_48bpp3Channels :	556:4:17041:17069	3223686	72	True				
ANR	3223838	Identifier	JXRC_FMT_48bpp3Channels		3223686	0					
ANR	3223839	ReturnStatement	return 0 ;	556:33:17070:17078	3223686	73	True				
ANR	3223840	PrimaryExpression	0		3223686	0					
ANR	3223841	Label	case JXRC_FMT_64bpp4Channels :	557:4:17084:17112	3223686	74	True				
ANR	3223842	Identifier	JXRC_FMT_64bpp4Channels		3223686	0					
ANR	3223843	ReturnStatement	return 0 ;	557:33:17113:17121	3223686	75	True				
ANR	3223844	PrimaryExpression	0		3223686	0					
ANR	3223845	Label	case JXRC_FMT_80bpp5Channels :	558:4:17127:17155	3223686	76	True				
ANR	3223846	Identifier	JXRC_FMT_80bpp5Channels		3223686	0					
ANR	3223847	ReturnStatement	return 0 ;	558:33:17156:17164	3223686	77	True				
ANR	3223848	PrimaryExpression	0		3223686	0					
ANR	3223849	Label	case JXRC_FMT_96bpp6Channels :	559:4:17170:17198	3223686	78	True				
ANR	3223850	Identifier	JXRC_FMT_96bpp6Channels		3223686	0					
ANR	3223851	ReturnStatement	return 0 ;	559:33:17199:17207	3223686	79	True				
ANR	3223852	PrimaryExpression	0		3223686	0					
ANR	3223853	Label	case JXRC_FMT_112bpp7Channels :	560:4:17213:17242	3223686	80	True				
ANR	3223854	Identifier	JXRC_FMT_112bpp7Channels		3223686	0					
ANR	3223855	ReturnStatement	return 0 ;	560:34:17243:17251	3223686	81	True				
ANR	3223856	PrimaryExpression	0		3223686	0					
ANR	3223857	Label	case JXRC_FMT_128bpp8Channels :	561:4:17257:17286	3223686	82	True				
ANR	3223858	Identifier	JXRC_FMT_128bpp8Channels		3223686	0					
ANR	3223859	ReturnStatement	return 0 ;	561:34:17287:17295	3223686	83	True				
ANR	3223860	PrimaryExpression	0		3223686	0					
ANR	3223861	Label	case JXRC_FMT_64bpp3ChannelsAlpha :	562:4:17301:17334	3223686	84	True				
ANR	3223862	Identifier	JXRC_FMT_64bpp3ChannelsAlpha		3223686	0					
ANR	3223863	ReturnStatement	return 0 ;	562:38:17335:17343	3223686	85	True				
ANR	3223864	PrimaryExpression	0		3223686	0					
ANR	3223865	Label	case JXRC_FMT_80bpp4ChannelsAlpha :	563:4:17349:17382	3223686	86	True				
ANR	3223866	Identifier	JXRC_FMT_80bpp4ChannelsAlpha		3223686	0					
ANR	3223867	ReturnStatement	return 0 ;	563:38:17383:17391	3223686	87	True				
ANR	3223868	PrimaryExpression	0		3223686	0					
ANR	3223869	Label	case JXRC_FMT_96bpp5ChannelsAlpha :	564:4:17397:17430	3223686	88	True				
ANR	3223870	Identifier	JXRC_FMT_96bpp5ChannelsAlpha		3223686	0					
ANR	3223871	ReturnStatement	return 0 ;	564:38:17431:17439	3223686	89	True				
ANR	3223872	PrimaryExpression	0		3223686	0					
ANR	3223873	Label	case JXRC_FMT_112bpp6ChannelsAlpha :	565:4:17445:17479	3223686	90	True				
ANR	3223874	Identifier	JXRC_FMT_112bpp6ChannelsAlpha		3223686	0					
ANR	3223875	ReturnStatement	return 0 ;	565:39:17480:17488	3223686	91	True				
ANR	3223876	PrimaryExpression	0		3223686	0					
ANR	3223877	Label	case JXRC_FMT_128bpp7ChannelsAlpha :	566:4:17494:17528	3223686	92	True				
ANR	3223878	Identifier	JXRC_FMT_128bpp7ChannelsAlpha		3223686	0					
ANR	3223879	ReturnStatement	return 0 ;	566:39:17529:17537	3223686	93	True				
ANR	3223880	PrimaryExpression	0		3223686	0					
ANR	3223881	Label	case JXRC_FMT_144bpp8ChannelsAlpha :	567:4:17543:17577	3223686	94	True				
ANR	3223882	Identifier	JXRC_FMT_144bpp8ChannelsAlpha		3223686	0					
ANR	3223883	ReturnStatement	return 0 ;	567:39:17578:17586	3223686	95	True				
ANR	3223884	PrimaryExpression	0		3223686	0					
ANR	3223885	Label	case JXRC_FMT_8bppGray :	568:4:17592:17614	3223686	96	True				
ANR	3223886	Identifier	JXRC_FMT_8bppGray		3223686	0					
ANR	3223887	ReturnStatement	return 1 ;	568:27:17615:17623	3223686	97	True				
ANR	3223888	PrimaryExpression	1		3223686	0					
ANR	3223889	Label	case JXRC_FMT_16bppGray :	569:4:17629:17652	3223686	98	True				
ANR	3223890	Identifier	JXRC_FMT_16bppGray		3223686	0					
ANR	3223891	ReturnStatement	return 1 ;	569:28:17653:17661	3223686	99	True				
ANR	3223892	PrimaryExpression	1		3223686	0					
ANR	3223893	Label	case JXRC_FMT_16bppGrayFixedPoint :	570:4:17667:17700	3223686	100	True				
ANR	3223894	Identifier	JXRC_FMT_16bppGrayFixedPoint		3223686	0					
ANR	3223895	ReturnStatement	return 1 ;	570:38:17701:17709	3223686	101	True				
ANR	3223896	PrimaryExpression	1		3223686	0					
ANR	3223897	Label	case JXRC_FMT_16bppGrayHalf :	571:4:17715:17742	3223686	102	True				
ANR	3223898	Identifier	JXRC_FMT_16bppGrayHalf		3223686	0					
ANR	3223899	ReturnStatement	return 1 ;	571:32:17743:17751	3223686	103	True				
ANR	3223900	PrimaryExpression	1		3223686	0					
ANR	3223901	Label	case JXRC_FMT_32bppGrayFixedPoint :	572:4:17757:17790	3223686	104	True				
ANR	3223902	Identifier	JXRC_FMT_32bppGrayFixedPoint		3223686	0					
ANR	3223903	ReturnStatement	return 1 ;	572:38:17791:17799	3223686	105	True				
ANR	3223904	PrimaryExpression	1		3223686	0					
ANR	3223905	Label	case JXRC_FMT_32bppGrayFloat :	573:4:17805:17833	3223686	106	True				
ANR	3223906	Identifier	JXRC_FMT_32bppGrayFloat		3223686	0					
ANR	3223907	ReturnStatement	return 1 ;	573:33:17834:17842	3223686	107	True				
ANR	3223908	PrimaryExpression	1		3223686	0					
ANR	3223909	Label	case JXRC_FMT_BlackWhite :	574:4:17848:17872	3223686	108	True				
ANR	3223910	Identifier	JXRC_FMT_BlackWhite		3223686	0					
ANR	3223911	ReturnStatement	return 1 ;	574:29:17873:17881	3223686	109	True				
ANR	3223912	PrimaryExpression	1		3223686	0					
ANR	3223913	Label	case JXRC_FMT_16bppBGR555 :	575:4:17887:17912	3223686	110	True				
ANR	3223914	Identifier	JXRC_FMT_16bppBGR555		3223686	0					
ANR	3223915	ReturnStatement	return 0 ;	575:30:17913:17921	3223686	111	True				
ANR	3223916	PrimaryExpression	0		3223686	0					
ANR	3223917	Label	case JXRC_FMT_16bppBGR565 :	576:4:17927:17952	3223686	112	True				
ANR	3223918	Identifier	JXRC_FMT_16bppBGR565		3223686	0					
ANR	3223919	ReturnStatement	return 0 ;	576:30:17953:17961	3223686	113	True				
ANR	3223920	PrimaryExpression	0		3223686	0					
ANR	3223921	Label	case JXRC_FMT_32bppBGR101010 :	577:4:17967:17995	3223686	114	True				
ANR	3223922	Identifier	JXRC_FMT_32bppBGR101010		3223686	0					
ANR	3223923	ReturnStatement	return 0 ;	577:33:17996:18004	3223686	115	True				
ANR	3223924	PrimaryExpression	0		3223686	0					
ANR	3223925	Label	case JXRC_FMT_32bppRGBE :	578:4:18010:18033	3223686	116	True				
ANR	3223926	Identifier	JXRC_FMT_32bppRGBE		3223686	0					
ANR	3223927	ReturnStatement	return 0 ;	578:28:18034:18042	3223686	117	True				
ANR	3223928	PrimaryExpression	0		3223686	0					
ANR	3223929	Label	case JXRC_FMT_32bppCMYKDIRECT :	579:4:18048:18077	3223686	118	True				
ANR	3223930	Identifier	JXRC_FMT_32bppCMYKDIRECT		3223686	0					
ANR	3223931	ReturnStatement	return 0 ;	579:34:18078:18086	3223686	119	True				
ANR	3223932	PrimaryExpression	0		3223686	0					
ANR	3223933	Label	case JXRC_FMT_64bppCMYKDIRECT :	580:4:18092:18121	3223686	120	True				
ANR	3223934	Identifier	JXRC_FMT_64bppCMYKDIRECT		3223686	0					
ANR	3223935	ReturnStatement	return 0 ;	580:34:18122:18130	3223686	121	True				
ANR	3223936	PrimaryExpression	0		3223686	0					
ANR	3223937	Label	case JXRC_FMT_40bppCMYKDIRECTAlpha :	581:4:18136:18170	3223686	122	True				
ANR	3223938	Identifier	JXRC_FMT_40bppCMYKDIRECTAlpha		3223686	0					
ANR	3223939	ReturnStatement	return 0 ;	581:39:18171:18179	3223686	123	True				
ANR	3223940	PrimaryExpression	0		3223686	0					
ANR	3223941	Label	case JXRC_FMT_80bppCMYKDIRECTAlpha :	582:4:18185:18219	3223686	124	True				
ANR	3223942	Identifier	JXRC_FMT_80bppCMYKDIRECTAlpha		3223686	0					
ANR	3223943	ReturnStatement	return 0 ;	582:39:18220:18228	3223686	125	True				
ANR	3223944	PrimaryExpression	0		3223686	0					
ANR	3223945	Label	case JXRC_FMT_12bppYCC420 :	583:4:18234:18259	3223686	126	True				
ANR	3223946	Identifier	JXRC_FMT_12bppYCC420		3223686	0					
ANR	3223947	ReturnStatement	return 0 ;	583:30:18260:18268	3223686	127	True				
ANR	3223948	PrimaryExpression	0		3223686	0					
ANR	3223949	Label	case JXRC_FMT_16bppYCC422 :	584:4:18274:18299	3223686	128	True				
ANR	3223950	Identifier	JXRC_FMT_16bppYCC422		3223686	0					
ANR	3223951	ReturnStatement	return 0 ;	584:30:18300:18308	3223686	129	True				
ANR	3223952	PrimaryExpression	0		3223686	0					
ANR	3223953	Label	case JXRC_FMT_20bppYCC422 :	585:4:18314:18339	3223686	130	True				
ANR	3223954	Identifier	JXRC_FMT_20bppYCC422		3223686	0					
ANR	3223955	ReturnStatement	return 0 ;	585:30:18340:18348	3223686	131	True				
ANR	3223956	PrimaryExpression	0		3223686	0					
ANR	3223957	Label	case JXRC_FMT_32bppYCC422 :	586:4:18354:18379	3223686	132	True				
ANR	3223958	Identifier	JXRC_FMT_32bppYCC422		3223686	0					
ANR	3223959	ReturnStatement	return 0 ;	586:30:18380:18388	3223686	133	True				
ANR	3223960	PrimaryExpression	0		3223686	0					
ANR	3223961	Label	case JXRC_FMT_24bppYCC444 :	587:4:18394:18419	3223686	134	True				
ANR	3223962	Identifier	JXRC_FMT_24bppYCC444		3223686	0					
ANR	3223963	ReturnStatement	return 0 ;	587:30:18420:18428	3223686	135	True				
ANR	3223964	PrimaryExpression	0		3223686	0					
ANR	3223965	Label	case JXRC_FMT_30bppYCC444 :	588:4:18434:18459	3223686	136	True				
ANR	3223966	Identifier	JXRC_FMT_30bppYCC444		3223686	0					
ANR	3223967	ReturnStatement	return 0 ;	588:30:18460:18468	3223686	137	True				
ANR	3223968	PrimaryExpression	0		3223686	0					
ANR	3223969	Label	case JXRC_FMT_48bppYCC444 :	589:4:18474:18499	3223686	138	True				
ANR	3223970	Identifier	JXRC_FMT_48bppYCC444		3223686	0					
ANR	3223971	ReturnStatement	return 0 ;	589:30:18500:18508	3223686	139	True				
ANR	3223972	PrimaryExpression	0		3223686	0					
ANR	3223973	Label	case JXRC_FMT_48bppYCC444FixedPoint :	590:4:18514:18549	3223686	140	True				
ANR	3223974	Identifier	JXRC_FMT_48bppYCC444FixedPoint		3223686	0					
ANR	3223975	ReturnStatement	return 0 ;	590:40:18550:18558	3223686	141	True				
ANR	3223976	PrimaryExpression	0		3223686	0					
ANR	3223977	Label	case JXRC_FMT_20bppYCC420Alpha :	591:4:18564:18594	3223686	142	True				
ANR	3223978	Identifier	JXRC_FMT_20bppYCC420Alpha		3223686	0					
ANR	3223979	ReturnStatement	return 0 ;	591:35:18595:18603	3223686	143	True				
ANR	3223980	PrimaryExpression	0		3223686	0					
ANR	3223981	Label	case JXRC_FMT_24bppYCC422Alpha :	592:4:18609:18639	3223686	144	True				
ANR	3223982	Identifier	JXRC_FMT_24bppYCC422Alpha		3223686	0					
ANR	3223983	ReturnStatement	return 0 ;	592:35:18640:18648	3223686	145	True				
ANR	3223984	PrimaryExpression	0		3223686	0					
ANR	3223985	Label	case JXRC_FMT_30bppYCC422Alpha :	593:4:18654:18684	3223686	146	True				
ANR	3223986	Identifier	JXRC_FMT_30bppYCC422Alpha		3223686	0					
ANR	3223987	ReturnStatement	return 0 ;	593:35:18685:18693	3223686	147	True				
ANR	3223988	PrimaryExpression	0		3223686	0					
ANR	3223989	Label	case JXRC_FMT_48bppYCC422Alpha :	594:4:18699:18729	3223686	148	True				
ANR	3223990	Identifier	JXRC_FMT_48bppYCC422Alpha		3223686	0					
ANR	3223991	ReturnStatement	return 0 ;	594:35:18730:18738	3223686	149	True				
ANR	3223992	PrimaryExpression	0		3223686	0					
ANR	3223993	Label	case JXRC_FMT_32bppYCC444Alpha :	595:4:18744:18774	3223686	150	True				
ANR	3223994	Identifier	JXRC_FMT_32bppYCC444Alpha		3223686	0					
ANR	3223995	ReturnStatement	return 0 ;	595:35:18775:18783	3223686	151	True				
ANR	3223996	PrimaryExpression	0		3223686	0					
ANR	3223997	Label	case JXRC_FMT_40bppYCC444Alpha :	596:4:18789:18819	3223686	152	True				
ANR	3223998	Identifier	JXRC_FMT_40bppYCC444Alpha		3223686	0					
ANR	3223999	ReturnStatement	return 0 ;	596:35:18820:18828	3223686	153	True				
ANR	3224000	PrimaryExpression	0		3223686	0					
ANR	3224001	Label	case JXRC_FMT_64bppYCC444Alpha :	597:4:18834:18864	3223686	154	True				
ANR	3224002	Identifier	JXRC_FMT_64bppYCC444Alpha		3223686	0					
ANR	3224003	ReturnStatement	return 0 ;	597:35:18865:18873	3223686	155	True				
ANR	3224004	PrimaryExpression	0		3223686	0					
ANR	3224005	Label	case JXRC_FMT_64bppYCC444AlphaFixedPoint :	598:4:18879:18919	3223686	156	True				
ANR	3224006	Identifier	JXRC_FMT_64bppYCC444AlphaFixedPoint		3223686	0					
ANR	3224007	ReturnStatement	return 0 ;	598:45:18920:18928	3223686	157	True				
ANR	3224008	PrimaryExpression	0		3223686	0					
ANR	3224009	Label	default :	599:4:18934:18941	3223686	158	True				
ANR	3224010	Identifier	default		3223686	0					
ANR	3224011	ReturnStatement	return 0 ;	599:13:18943:18951	3223686	159	True				
ANR	3224012	PrimaryExpression	0		3223686	0					
ANR	3224013	ReturnType	unsigned int		3223686	1					
ANR	3224014	Identifier	validate_tif_output		3223686	2					
ANR	3224015	ParameterList	jxrc_t_pixelFormat ePixelFormat		3223686	3					
ANR	3224016	Parameter	jxrc_t_pixelFormat ePixelFormat	516:33:15416:15446	3223686	0	True				
ANR	3224017	ParameterType	jxrc_t_pixelFormat		3223686	0					
ANR	3224018	Identifier	ePixelFormat		3223686	1					
ANR	3224019	CFGEntryNode	ENTRY		3223686		True				
ANR	3224020	CFGExitNode	EXIT		3223686		True				
ANR	3224021	Symbol	ePixelFormat		3223686						
ANR	3224022	Function	validate_pnm_output	602:0:18961:19170							
ANR	3224023	FunctionDef	validate_pnm_output (jxrc_t_pixelFormat ePixelFormat)		3224022	0					
ANR	3224024	CompoundStatement		603:0:19027:19170	3224022	0					
ANR	3224025	SwitchStatement	switch ( ePixelFormat )		3224022	0					
ANR	3224026	Condition	ePixelFormat	604:11:19040:19051	3224022	0	True				
ANR	3224027	Identifier	ePixelFormat		3224022	0					
ANR	3224028	CompoundStatement		3:4:30:30	3224022	1					
ANR	3224029	Label	case JXRC_FMT_24bppRGB :	606:4:19064:19086	3224022	0	True				
ANR	3224030	Identifier	JXRC_FMT_24bppRGB		3224022	0					
ANR	3224031	ReturnStatement	return 1 ;	606:27:19087:19095	3224022	1	True				
ANR	3224032	PrimaryExpression	1		3224022	0					
ANR	3224033	Label	case JXRC_FMT_8bppGray :	607:4:19101:19123	3224022	2	True				
ANR	3224034	Identifier	JXRC_FMT_8bppGray		3224022	0					
ANR	3224035	ReturnStatement	return 1 ;	607:27:19124:19132	3224022	3	True				
ANR	3224036	PrimaryExpression	1		3224022	0					
ANR	3224037	Label	default :	608:4:19145:19152	3224022	4	True				
ANR	3224038	Identifier	default		3224022	0					
ANR	3224039	ReturnStatement	return 0 ;	608:13:19154:19162	3224022	5	True				
ANR	3224040	PrimaryExpression	0		3224022	0					
ANR	3224041	ReturnType	unsigned int		3224022	1					
ANR	3224042	Identifier	validate_pnm_output		3224022	2					
ANR	3224043	ParameterList	jxrc_t_pixelFormat ePixelFormat		3224022	3					
ANR	3224044	Parameter	jxrc_t_pixelFormat ePixelFormat	602:33:18994:19024	3224022	0	True				
ANR	3224045	ParameterType	jxrc_t_pixelFormat		3224022	0					
ANR	3224046	Identifier	ePixelFormat		3224022	1					
ANR	3224047	CFGEntryNode	ENTRY		3224022		True				
ANR	3224048	CFGExitNode	EXIT		3224022		True				
ANR	3224049	Symbol	ePixelFormat		3224022						
ANR	3224050	Function	start_tif_output_file	612:0:19173:21613							
ANR	3224051	FunctionDef	start_tif_output_file (context * con)		3224050	0					
ANR	3224052	CompoundStatement		613:0:19221:21613	3224050	0					
ANR	3224053	ExpressionStatement	"con -> file = fopen ( con -> name , ""wb"" )"	614:4:19232:19266	3224050	0	True				
ANR	3224054	AssignmentExpression	"con -> file = fopen ( con -> name , ""wb"" )"		3224050	0		=			
ANR	3224055	PtrMemberAccess	con -> file		3224050	0					
ANR	3224056	Identifier	con		3224050	0					
ANR	3224057	Identifier	file		3224050	1					
ANR	3224058	CallExpression	"fopen ( con -> name , ""wb"" )"		3224050	1					
ANR	3224059	Callee	fopen		3224050	0					
ANR	3224060	Identifier	fopen		3224050	0					
ANR	3224061	ArgumentList	con -> name		3224050	1					
ANR	3224062	Argument	con -> name		3224050	0					
ANR	3224063	PtrMemberAccess	con -> name		3224050	0					
ANR	3224064	Identifier	con		3224050	0					
ANR	3224065	Identifier	name		3224050	1					
ANR	3224066	Argument	"""wb"""		3224050	1					
ANR	3224067	PrimaryExpression	"""wb"""		3224050	0					
ANR	3224068	IfStatement	if ( con -> file == 0 )		3224050	1					
ANR	3224069	Condition	con -> file == 0	615:8:19276:19287	3224050	0	True				
ANR	3224070	EqualityExpression	con -> file == 0		3224050	0		==			
ANR	3224071	PtrMemberAccess	con -> file		3224050	0					
ANR	3224072	Identifier	con		3224050	0					
ANR	3224073	Identifier	file		3224050	1					
ANR	3224074	PrimaryExpression	0		3224050	1					
ANR	3224075	ExpressionStatement	"error ( ""cannot create TIFF output file %s"" , con -> name )"	616:8:19298:19351	3224050	1	True				
ANR	3224076	CallExpression	"error ( ""cannot create TIFF output file %s"" , con -> name )"		3224050	0					
ANR	3224077	Callee	error		3224050	0					
ANR	3224078	Identifier	error		3224050	0					
ANR	3224079	ArgumentList	"""cannot create TIFF output file %s"""		3224050	1					
ANR	3224080	Argument	"""cannot create TIFF output file %s"""		3224050	0					
ANR	3224081	PrimaryExpression	"""cannot create TIFF output file %s"""		3224050	0					
ANR	3224082	Argument	con -> name		3224050	1					
ANR	3224083	PtrMemberAccess	con -> name		3224050	0					
ANR	3224084	Identifier	con		3224050	0					
ANR	3224085	Identifier	name		3224050	1					
ANR	3224086	ExpressionStatement	con -> swap = 0	617:4:19357:19370	3224050	2	True				
ANR	3224087	AssignmentExpression	con -> swap = 0		3224050	0		=			
ANR	3224088	PtrMemberAccess	con -> swap		3224050	0					
ANR	3224089	Identifier	con		3224050	0					
ANR	3224090	Identifier	swap		3224050	1					
ANR	3224091	PrimaryExpression	0		3224050	1					
ANR	3224092	IdentifierDeclStatement	int one = 1 ;	619:4:19377:19388	3224050	3	True				
ANR	3224093	IdentifierDecl	one = 1		3224050	0					
ANR	3224094	IdentifierDeclType	int		3224050	0					
ANR	3224095	Identifier	one		3224050	1					
ANR	3224096	AssignmentExpression	one = 1		3224050	2		=			
ANR	3224097	Identifier	one		3224050	0					
ANR	3224098	PrimaryExpression	1		3224050	1					
ANR	3224099	IdentifierDeclStatement	char magic = * ( char * ) & one == 1 ? 'I' : 'M' ;	620:4:19394:19434	3224050	4	True				
ANR	3224100	IdentifierDecl	magic = * ( char * ) & one == 1 ? 'I' : 'M'		3224050	0					
ANR	3224101	IdentifierDeclType	char		3224050	0					
ANR	3224102	Identifier	magic		3224050	1					
ANR	3224103	AssignmentExpression	magic = * ( char * ) & one == 1 ? 'I' : 'M'		3224050	2		=			
ANR	3224104	Identifier	magic		3224050	0					
ANR	3224105	ConditionalExpression	* ( char * ) & one == 1 ? 'I' : 'M'		3224050	1					
ANR	3224106	Condition	* ( char * ) & one == 1		3224050	0					
ANR	3224107	EqualityExpression	* ( char * ) & one == 1		3224050	0		==			
ANR	3224108	UnaryOperationExpression	* ( char * ) & one		3224050	0					
ANR	3224109	UnaryOperator	*		3224050	0					
ANR	3224110	CastExpression	( char * ) & one		3224050	1					
ANR	3224111	CastTarget	char *		3224050	0					
ANR	3224112	UnaryOperationExpression	& one		3224050	1					
ANR	3224113	UnaryOperator	&		3224050	0					
ANR	3224114	Identifier	one		3224050	1					
ANR	3224115	PrimaryExpression	1		3224050	1					
ANR	3224116	PrimaryExpression	'I'		3224050	1					
ANR	3224117	PrimaryExpression	'M'		3224050	2					
ANR	3224118	IdentifierDeclStatement	int nentry = 10 ;	621:4:19440:19455	3224050	5	True				
ANR	3224119	IdentifierDecl	nentry = 10		3224050	0					
ANR	3224120	IdentifierDeclType	int		3224050	0					
ANR	3224121	Identifier	nentry		3224050	1					
ANR	3224122	AssignmentExpression	nentry = 10		3224050	2		=			
ANR	3224123	Identifier	nentry		3224050	0					
ANR	3224124	PrimaryExpression	10		3224050	1					
ANR	3224125	IfStatement	if ( con -> ncomp == 4 && ! con -> alpha )		3224050	6					
ANR	3224126	Condition	con -> ncomp == 4 && ! con -> alpha	622:8:19465:19494	3224050	0	True				
ANR	3224127	AndExpression	con -> ncomp == 4 && ! con -> alpha		3224050	0		&&			
ANR	3224128	EqualityExpression	con -> ncomp == 4		3224050	0		==			
ANR	3224129	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224130	Identifier	con		3224050	0					
ANR	3224131	Identifier	ncomp		3224050	1					
ANR	3224132	PrimaryExpression	4		3224050	1					
ANR	3224133	UnaryOperationExpression	! con -> alpha		3224050	1					
ANR	3224134	UnaryOperator	!		3224050	0					
ANR	3224135	PtrMemberAccess	con -> alpha		3224050	1					
ANR	3224136	Identifier	con		3224050	0					
ANR	3224137	Identifier	alpha		3224050	1					
ANR	3224138	ExpressionStatement	nentry += 1	623:8:19516:19527	3224050	1	True				
ANR	3224139	AssignmentExpression	nentry += 1		3224050	0		+=			
ANR	3224140	Identifier	nentry		3224050	0					
ANR	3224141	PrimaryExpression	1		3224050	1					
ANR	3224142	IdentifierDeclStatement	int bitsize = con -> ncomp >= 3 ? 2 * con -> ncomp : 0 ;	624:4:19533:19579	3224050	7	True				
ANR	3224143	IdentifierDecl	bitsize = con -> ncomp >= 3 ? 2 * con -> ncomp : 0		3224050	0					
ANR	3224144	IdentifierDeclType	int		3224050	0					
ANR	3224145	Identifier	bitsize		3224050	1					
ANR	3224146	AssignmentExpression	bitsize = con -> ncomp >= 3 ? 2 * con -> ncomp : 0		3224050	2		=			
ANR	3224147	Identifier	bitsize		3224050	0					
ANR	3224148	ConditionalExpression	con -> ncomp >= 3 ? 2 * con -> ncomp : 0		3224050	1					
ANR	3224149	Condition	con -> ncomp >= 3		3224050	0					
ANR	3224150	RelationalExpression	con -> ncomp >= 3		3224050	0		>=			
ANR	3224151	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224152	Identifier	con		3224050	0					
ANR	3224153	Identifier	ncomp		3224050	1					
ANR	3224154	PrimaryExpression	3		3224050	1					
ANR	3224155	MultiplicativeExpression	2 * con -> ncomp		3224050	1		*			
ANR	3224156	PrimaryExpression	2		3224050	0					
ANR	3224157	PtrMemberAccess	con -> ncomp		3224050	1					
ANR	3224158	Identifier	con		3224050	0					
ANR	3224159	Identifier	ncomp		3224050	1					
ANR	3224160	PrimaryExpression	0		3224050	2					
ANR	3224161	IdentifierDeclStatement	int bitoff = 8 + 2 + 12 * nentry + 4 ;	625:4:19585:19619	3224050	8	True				
ANR	3224162	IdentifierDecl	bitoff = 8 + 2 + 12 * nentry + 4		3224050	0					
ANR	3224163	IdentifierDeclType	int		3224050	0					
ANR	3224164	Identifier	bitoff		3224050	1					
ANR	3224165	AssignmentExpression	bitoff = 8 + 2 + 12 * nentry + 4		3224050	2		=			
ANR	3224166	Identifier	bitoff		3224050	0					
ANR	3224167	AdditiveExpression	8 + 2 + 12 * nentry + 4		3224050	1		+			
ANR	3224168	PrimaryExpression	8		3224050	0					
ANR	3224169	AdditiveExpression	2 + 12 * nentry + 4		3224050	1		+			
ANR	3224170	PrimaryExpression	2		3224050	0					
ANR	3224171	AdditiveExpression	12 * nentry + 4		3224050	1		+			
ANR	3224172	MultiplicativeExpression	12 * nentry		3224050	0		*			
ANR	3224173	PrimaryExpression	12		3224050	0					
ANR	3224174	Identifier	nentry		3224050	1					
ANR	3224175	PrimaryExpression	4		3224050	1					
ANR	3224176	IdentifierDeclStatement	int datoff = bitoff + bitsize ;	626:4:19625:19654	3224050	9	True				
ANR	3224177	IdentifierDecl	datoff = bitoff + bitsize		3224050	0					
ANR	3224178	IdentifierDeclType	int		3224050	0					
ANR	3224179	Identifier	datoff		3224050	1					
ANR	3224180	AssignmentExpression	datoff = bitoff + bitsize		3224050	2		=			
ANR	3224181	Identifier	datoff		3224050	0					
ANR	3224182	AdditiveExpression	bitoff + bitsize		3224050	1		+			
ANR	3224183	Identifier	bitoff		3224050	0					
ANR	3224184	Identifier	bitsize		3224050	1					
ANR	3224185	ExpressionStatement	"put_uint8 ( con , magic )"	628:4:19665:19686	3224050	10	True				
ANR	3224186	CallExpression	"put_uint8 ( con , magic )"		3224050	0					
ANR	3224187	Callee	put_uint8		3224050	0					
ANR	3224188	Identifier	put_uint8		3224050	0					
ANR	3224189	ArgumentList	con		3224050	1					
ANR	3224190	Argument	con		3224050	0					
ANR	3224191	Identifier	con		3224050	0					
ANR	3224192	Argument	magic		3224050	1					
ANR	3224193	Identifier	magic		3224050	0					
ANR	3224194	ExpressionStatement	"put_uint8 ( con , magic )"	629:4:19692:19713	3224050	11	True				
ANR	3224195	CallExpression	"put_uint8 ( con , magic )"		3224050	0					
ANR	3224196	Callee	put_uint8		3224050	0					
ANR	3224197	Identifier	put_uint8		3224050	0					
ANR	3224198	ArgumentList	con		3224050	1					
ANR	3224199	Argument	con		3224050	0					
ANR	3224200	Identifier	con		3224050	0					
ANR	3224201	Argument	magic		3224050	1					
ANR	3224202	Identifier	magic		3224050	0					
ANR	3224203	ExpressionStatement	"put_uint16 ( con , 42 )"	630:4:19719:19738	3224050	12	True				
ANR	3224204	CallExpression	"put_uint16 ( con , 42 )"		3224050	0					
ANR	3224205	Callee	put_uint16		3224050	0					
ANR	3224206	Identifier	put_uint16		3224050	0					
ANR	3224207	ArgumentList	con		3224050	1					
ANR	3224208	Argument	con		3224050	0					
ANR	3224209	Identifier	con		3224050	0					
ANR	3224210	Argument	42		3224050	1					
ANR	3224211	PrimaryExpression	42		3224050	0					
ANR	3224212	ExpressionStatement	"put_uint32 ( con , 8 )"	631:4:19744:19762	3224050	13	True				
ANR	3224213	CallExpression	"put_uint32 ( con , 8 )"		3224050	0					
ANR	3224214	Callee	put_uint32		3224050	0					
ANR	3224215	Identifier	put_uint32		3224050	0					
ANR	3224216	ArgumentList	con		3224050	1					
ANR	3224217	Argument	con		3224050	0					
ANR	3224218	Identifier	con		3224050	0					
ANR	3224219	Argument	8		3224050	1					
ANR	3224220	PrimaryExpression	8		3224050	0					
ANR	3224221	ExpressionStatement	"put_uint16 ( con , nentry )"	632:4:19768:19791	3224050	14	True				
ANR	3224222	CallExpression	"put_uint16 ( con , nentry )"		3224050	0					
ANR	3224223	Callee	put_uint16		3224050	0					
ANR	3224224	Identifier	put_uint16		3224050	0					
ANR	3224225	ArgumentList	con		3224050	1					
ANR	3224226	Argument	con		3224050	0					
ANR	3224227	Identifier	con		3224050	0					
ANR	3224228	Argument	nentry		3224050	1					
ANR	3224229	Identifier	nentry		3224050	0					
ANR	3224230	ExpressionStatement	"put_ifd_entry ( con , ImageWidth , 4 , 1 , con -> wid )"	633:4:19797:19843	3224050	15	True				
ANR	3224231	CallExpression	"put_ifd_entry ( con , ImageWidth , 4 , 1 , con -> wid )"		3224050	0					
ANR	3224232	Callee	put_ifd_entry		3224050	0					
ANR	3224233	Identifier	put_ifd_entry		3224050	0					
ANR	3224234	ArgumentList	con		3224050	1					
ANR	3224235	Argument	con		3224050	0					
ANR	3224236	Identifier	con		3224050	0					
ANR	3224237	Argument	ImageWidth		3224050	1					
ANR	3224238	Identifier	ImageWidth		3224050	0					
ANR	3224239	Argument	4		3224050	2					
ANR	3224240	PrimaryExpression	4		3224050	0					
ANR	3224241	Argument	1		3224050	3					
ANR	3224242	PrimaryExpression	1		3224050	0					
ANR	3224243	Argument	con -> wid		3224050	4					
ANR	3224244	PtrMemberAccess	con -> wid		3224050	0					
ANR	3224245	Identifier	con		3224050	0					
ANR	3224246	Identifier	wid		3224050	1					
ANR	3224247	ExpressionStatement	"put_ifd_entry ( con , ImageLength , 4 , 1 , con -> hei )"	634:4:19849:19896	3224050	16	True				
ANR	3224248	CallExpression	"put_ifd_entry ( con , ImageLength , 4 , 1 , con -> hei )"		3224050	0					
ANR	3224249	Callee	put_ifd_entry		3224050	0					
ANR	3224250	Identifier	put_ifd_entry		3224050	0					
ANR	3224251	ArgumentList	con		3224050	1					
ANR	3224252	Argument	con		3224050	0					
ANR	3224253	Identifier	con		3224050	0					
ANR	3224254	Argument	ImageLength		3224050	1					
ANR	3224255	Identifier	ImageLength		3224050	0					
ANR	3224256	Argument	4		3224050	2					
ANR	3224257	PrimaryExpression	4		3224050	0					
ANR	3224258	Argument	1		3224050	3					
ANR	3224259	PrimaryExpression	1		3224050	0					
ANR	3224260	Argument	con -> hei		3224050	4					
ANR	3224261	PtrMemberAccess	con -> hei		3224050	0					
ANR	3224262	Identifier	con		3224050	0					
ANR	3224263	Identifier	hei		3224050	1					
ANR	3224264	ExpressionStatement	"put_ifd_entry ( con , BitsPerSample , 3 , con -> ncomp , con -> ncomp >= 3 ? bitoff : con -> bpi )"	635:4:19902:19985	3224050	17	True				
ANR	3224265	CallExpression	"put_ifd_entry ( con , BitsPerSample , 3 , con -> ncomp , con -> ncomp >= 3 ? bitoff : con -> bpi )"		3224050	0					
ANR	3224266	Callee	put_ifd_entry		3224050	0					
ANR	3224267	Identifier	put_ifd_entry		3224050	0					
ANR	3224268	ArgumentList	con		3224050	1					
ANR	3224269	Argument	con		3224050	0					
ANR	3224270	Identifier	con		3224050	0					
ANR	3224271	Argument	BitsPerSample		3224050	1					
ANR	3224272	Identifier	BitsPerSample		3224050	0					
ANR	3224273	Argument	3		3224050	2					
ANR	3224274	PrimaryExpression	3		3224050	0					
ANR	3224275	Argument	con -> ncomp		3224050	3					
ANR	3224276	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224277	Identifier	con		3224050	0					
ANR	3224278	Identifier	ncomp		3224050	1					
ANR	3224279	Argument	con -> ncomp >= 3 ? bitoff : con -> bpi		3224050	4					
ANR	3224280	ConditionalExpression	con -> ncomp >= 3 ? bitoff : con -> bpi		3224050	0					
ANR	3224281	Condition	con -> ncomp >= 3		3224050	0					
ANR	3224282	RelationalExpression	con -> ncomp >= 3		3224050	0		>=			
ANR	3224283	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224284	Identifier	con		3224050	0					
ANR	3224285	Identifier	ncomp		3224050	1					
ANR	3224286	PrimaryExpression	3		3224050	1					
ANR	3224287	Identifier	bitoff		3224050	1					
ANR	3224288	PtrMemberAccess	con -> bpi		3224050	2					
ANR	3224289	Identifier	con		3224050	0					
ANR	3224290	Identifier	bpi		3224050	1					
ANR	3224291	SwitchStatement	switch ( con -> format )		3224050	18					
ANR	3224292	Condition	con -> format	636:12:19999:20009	3224050	0	True				
ANR	3224293	PtrMemberAccess	con -> format		3224050	0					
ANR	3224294	Identifier	con		3224050	0					
ANR	3224295	Identifier	format		3224050	1					
ANR	3224296	CompoundStatement		25:4:794:794	3224050	1					
ANR	3224297	Label	case 0 :	638:8:20026:20032	3224050	0	True				
ANR	3224298	Label	case 1 :	639:8:20057:20063	3224050	1	True				
ANR	3224299	Label	case 2 :	640:8:20083:20089	3224050	2	True				
ANR	3224300	Label	case 8 :	642:8:20141:20147	3224050	3	True				
ANR	3224301	Label	case 9 :	643:8:20167:20173	3224050	4	True				
ANR	3224302	Label	case 15 :	644:8:20194:20201	3224050	5	True				
ANR	3224303	ExpressionStatement	con -> sf = 1	645:12:20231:20242	3224050	6	True				
ANR	3224304	AssignmentExpression	con -> sf = 1		3224050	0		=			
ANR	3224305	PtrMemberAccess	con -> sf		3224050	0					
ANR	3224306	Identifier	con		3224050	0					
ANR	3224307	Identifier	sf		3224050	1					
ANR	3224308	PrimaryExpression	1		3224050	1					
ANR	3224309	BreakStatement	break ;	646:12:20256:20261	3224050	7	True				
ANR	3224310	Label	case 3 :	647:8:20271:20277	3224050	8	True				
ANR	3224311	Label	case 6 :	648:8:20299:20305	3224050	9	True				
ANR	3224312	ExpressionStatement	con -> sf = 2	649:12:20331:20342	3224050	10	True				
ANR	3224313	AssignmentExpression	con -> sf = 2		3224050	0		=			
ANR	3224314	PtrMemberAccess	con -> sf		3224050	0					
ANR	3224315	Identifier	con		3224050	0					
ANR	3224316	Identifier	sf		3224050	1					
ANR	3224317	PrimaryExpression	2		3224050	1					
ANR	3224318	BreakStatement	break ;	650:12:20356:20361	3224050	11	True				
ANR	3224319	Label	case 4 :	651:8:20371:20377	3224050	12	True				
ANR	3224320	Label	case 7 :	652:8:20399:20405	3224050	13	True				
ANR	3224321	ExpressionStatement	con -> sf = 3	653:12:20431:20442	3224050	14	True				
ANR	3224322	AssignmentExpression	con -> sf = 3		3224050	0		=			
ANR	3224323	PtrMemberAccess	con -> sf		3224050	0					
ANR	3224324	Identifier	con		3224050	0					
ANR	3224325	Identifier	sf		3224050	1					
ANR	3224326	PrimaryExpression	3		3224050	1					
ANR	3224327	BreakStatement	break ;	654:12:20456:20461	3224050	15	True				
ANR	3224328	Label	default :	655:8:20471:20478	3224050	16	True				
ANR	3224329	Identifier	default		3224050	0					
ANR	3224330	ExpressionStatement	assert ( 0 )	656:12:20492:20501	3224050	17	True				
ANR	3224331	CallExpression	assert ( 0 )		3224050	0					
ANR	3224332	Callee	assert		3224050	0					
ANR	3224333	Identifier	assert		3224050	0					
ANR	3224334	ArgumentList	0		3224050	1					
ANR	3224335	Argument	0		3224050	0					
ANR	3224336	PrimaryExpression	0		3224050	0					
ANR	3224337	ExpressionStatement	"put_ifd_entry ( con , SampleFormat , 3 , 1 , con -> sf )"	658:4:20513:20560	3224050	19	True				
ANR	3224338	CallExpression	"put_ifd_entry ( con , SampleFormat , 3 , 1 , con -> sf )"		3224050	0					
ANR	3224339	Callee	put_ifd_entry		3224050	0					
ANR	3224340	Identifier	put_ifd_entry		3224050	0					
ANR	3224341	ArgumentList	con		3224050	1					
ANR	3224342	Argument	con		3224050	0					
ANR	3224343	Identifier	con		3224050	0					
ANR	3224344	Argument	SampleFormat		3224050	1					
ANR	3224345	Identifier	SampleFormat		3224050	0					
ANR	3224346	Argument	3		3224050	2					
ANR	3224347	PrimaryExpression	3		3224050	0					
ANR	3224348	Argument	1		3224050	3					
ANR	3224349	PrimaryExpression	1		3224050	0					
ANR	3224350	Argument	con -> sf		3224050	4					
ANR	3224351	PtrMemberAccess	con -> sf		3224050	0					
ANR	3224352	Identifier	con		3224050	0					
ANR	3224353	Identifier	sf		3224050	1					
ANR	3224354	ExpressionStatement	"put_ifd_entry ( con , Compression , 3 , 1 , 1 )"	659:4:20566:20606	3224050	20	True				
ANR	3224355	CallExpression	"put_ifd_entry ( con , Compression , 3 , 1 , 1 )"		3224050	0					
ANR	3224356	Callee	put_ifd_entry		3224050	0					
ANR	3224357	Identifier	put_ifd_entry		3224050	0					
ANR	3224358	ArgumentList	con		3224050	1					
ANR	3224359	Argument	con		3224050	0					
ANR	3224360	Identifier	con		3224050	0					
ANR	3224361	Argument	Compression		3224050	1					
ANR	3224362	Identifier	Compression		3224050	0					
ANR	3224363	Argument	3		3224050	2					
ANR	3224364	PrimaryExpression	3		3224050	0					
ANR	3224365	Argument	1		3224050	3					
ANR	3224366	PrimaryExpression	1		3224050	0					
ANR	3224367	Argument	1		3224050	4					
ANR	3224368	PrimaryExpression	1		3224050	0					
ANR	3224369	ExpressionStatement	"put_ifd_entry ( con , Photometric , 3 , 1 , con -> photometric )"	660:4:20612:20667	3224050	21	True				
ANR	3224370	CallExpression	"put_ifd_entry ( con , Photometric , 3 , 1 , con -> photometric )"		3224050	0					
ANR	3224371	Callee	put_ifd_entry		3224050	0					
ANR	3224372	Identifier	put_ifd_entry		3224050	0					
ANR	3224373	ArgumentList	con		3224050	1					
ANR	3224374	Argument	con		3224050	0					
ANR	3224375	Identifier	con		3224050	0					
ANR	3224376	Argument	Photometric		3224050	1					
ANR	3224377	Identifier	Photometric		3224050	0					
ANR	3224378	Argument	3		3224050	2					
ANR	3224379	PrimaryExpression	3		3224050	0					
ANR	3224380	Argument	1		3224050	3					
ANR	3224381	PrimaryExpression	1		3224050	0					
ANR	3224382	Argument	con -> photometric		3224050	4					
ANR	3224383	PtrMemberAccess	con -> photometric		3224050	0					
ANR	3224384	Identifier	con		3224050	0					
ANR	3224385	Identifier	photometric		3224050	1					
ANR	3224386	ExpressionStatement	"put_ifd_entry ( con , StripOffsets , 4 , 1 , datoff )"	661:4:20673:20719	3224050	22	True				
ANR	3224387	CallExpression	"put_ifd_entry ( con , StripOffsets , 4 , 1 , datoff )"		3224050	0					
ANR	3224388	Callee	put_ifd_entry		3224050	0					
ANR	3224389	Identifier	put_ifd_entry		3224050	0					
ANR	3224390	ArgumentList	con		3224050	1					
ANR	3224391	Argument	con		3224050	0					
ANR	3224392	Identifier	con		3224050	0					
ANR	3224393	Argument	StripOffsets		3224050	1					
ANR	3224394	Identifier	StripOffsets		3224050	0					
ANR	3224395	Argument	4		3224050	2					
ANR	3224396	PrimaryExpression	4		3224050	0					
ANR	3224397	Argument	1		3224050	3					
ANR	3224398	PrimaryExpression	1		3224050	0					
ANR	3224399	Argument	datoff		3224050	4					
ANR	3224400	Identifier	datoff		3224050	0					
ANR	3224401	IfStatement	if ( ! con -> padBytes )		3224050	23					
ANR	3224402	Condition	! con -> padBytes	662:7:20728:20741	3224050	0	True				
ANR	3224403	UnaryOperationExpression	! con -> padBytes		3224050	0					
ANR	3224404	UnaryOperator	!		3224050	0					
ANR	3224405	PtrMemberAccess	con -> padBytes		3224050	1					
ANR	3224406	Identifier	con		3224050	0					
ANR	3224407	Identifier	padBytes		3224050	1					
ANR	3224408	ExpressionStatement	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp )"	663:8:20752:20805	3224050	1	True				
ANR	3224409	CallExpression	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp )"		3224050	0					
ANR	3224410	Callee	put_ifd_entry		3224050	0					
ANR	3224411	Identifier	put_ifd_entry		3224050	0					
ANR	3224412	ArgumentList	con		3224050	1					
ANR	3224413	Argument	con		3224050	0					
ANR	3224414	Identifier	con		3224050	0					
ANR	3224415	Argument	SamplesPerPixel		3224050	1					
ANR	3224416	Identifier	SamplesPerPixel		3224050	0					
ANR	3224417	Argument	3		3224050	2					
ANR	3224418	PrimaryExpression	3		3224050	0					
ANR	3224419	Argument	1		3224050	3					
ANR	3224420	PrimaryExpression	1		3224050	0					
ANR	3224421	Argument	con -> ncomp		3224050	4					
ANR	3224422	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224423	Identifier	con		3224050	0					
ANR	3224424	Identifier	ncomp		3224050	1					
ANR	3224425	ElseStatement	else		3224050	0					
ANR	3224426	ExpressionStatement	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp + 1 )"	665:8:20824:20881	3224050	0	True				
ANR	3224427	CallExpression	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp + 1 )"		3224050	0					
ANR	3224428	Callee	put_ifd_entry		3224050	0					
ANR	3224429	Identifier	put_ifd_entry		3224050	0					
ANR	3224430	ArgumentList	con		3224050	1					
ANR	3224431	Argument	con		3224050	0					
ANR	3224432	Identifier	con		3224050	0					
ANR	3224433	Argument	SamplesPerPixel		3224050	1					
ANR	3224434	Identifier	SamplesPerPixel		3224050	0					
ANR	3224435	Argument	3		3224050	2					
ANR	3224436	PrimaryExpression	3		3224050	0					
ANR	3224437	Argument	1		3224050	3					
ANR	3224438	PrimaryExpression	1		3224050	0					
ANR	3224439	Argument	con -> ncomp + 1		3224050	4					
ANR	3224440	AdditiveExpression	con -> ncomp + 1		3224050	0		+			
ANR	3224441	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224442	Identifier	con		3224050	0					
ANR	3224443	Identifier	ncomp		3224050	1					
ANR	3224444	PrimaryExpression	1		3224050	1					
ANR	3224445	ExpressionStatement	"put_ifd_entry ( con , RowsPerStrip , 4 , 1 , con -> hei )"	667:4:20888:20936	3224050	24	True				
ANR	3224446	CallExpression	"put_ifd_entry ( con , RowsPerStrip , 4 , 1 , con -> hei )"		3224050	0					
ANR	3224447	Callee	put_ifd_entry		3224050	0					
ANR	3224448	Identifier	put_ifd_entry		3224050	0					
ANR	3224449	ArgumentList	con		3224050	1					
ANR	3224450	Argument	con		3224050	0					
ANR	3224451	Identifier	con		3224050	0					
ANR	3224452	Argument	RowsPerStrip		3224050	1					
ANR	3224453	Identifier	RowsPerStrip		3224050	0					
ANR	3224454	Argument	4		3224050	2					
ANR	3224455	PrimaryExpression	4		3224050	0					
ANR	3224456	Argument	1		3224050	3					
ANR	3224457	PrimaryExpression	1		3224050	0					
ANR	3224458	Argument	con -> hei		3224050	4					
ANR	3224459	PtrMemberAccess	con -> hei		3224050	0					
ANR	3224460	Identifier	con		3224050	0					
ANR	3224461	Identifier	hei		3224050	1					
ANR	3224462	IfStatement	if ( con -> bpi == 1 )		3224050	25					
ANR	3224463	Condition	con -> bpi == 1	668:7:20945:20957	3224050	0	True				
ANR	3224464	EqualityExpression	con -> bpi == 1		3224050	0		==			
ANR	3224465	PtrMemberAccess	con -> bpi		3224050	0					
ANR	3224466	Identifier	con		3224050	0					
ANR	3224467	Identifier	bpi		3224050	1					
ANR	3224468	PrimaryExpression	1		3224050	1					
ANR	3224469	ExpressionStatement	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , ( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp )"	669:8:20968:21052	3224050	1	True				
ANR	3224470	CallExpression	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , ( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp )"		3224050	0					
ANR	3224471	Callee	put_ifd_entry		3224050	0					
ANR	3224472	Identifier	put_ifd_entry		3224050	0					
ANR	3224473	ArgumentList	con		3224050	1					
ANR	3224474	Argument	con		3224050	0					
ANR	3224475	Identifier	con		3224050	0					
ANR	3224476	Argument	StripByteCounts		3224050	1					
ANR	3224477	Identifier	StripByteCounts		3224050	0					
ANR	3224478	Argument	4		3224050	2					
ANR	3224479	PrimaryExpression	4		3224050	0					
ANR	3224480	Argument	1		3224050	3					
ANR	3224481	PrimaryExpression	1		3224050	0					
ANR	3224482	Argument	( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp		3224050	4					
ANR	3224483	MultiplicativeExpression	( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp		3224050	0		*			
ANR	3224484	ShiftExpression	( con -> wid + 7 ) >> 3		3224050	0		>>			
ANR	3224485	AdditiveExpression	con -> wid + 7		3224050	0		+			
ANR	3224486	PtrMemberAccess	con -> wid		3224050	0					
ANR	3224487	Identifier	con		3224050	0					
ANR	3224488	Identifier	wid		3224050	1					
ANR	3224489	PrimaryExpression	7		3224050	1					
ANR	3224490	PrimaryExpression	3		3224050	1					
ANR	3224491	MultiplicativeExpression	con -> hei * con -> ncomp		3224050	1		*			
ANR	3224492	PtrMemberAccess	con -> hei		3224050	0					
ANR	3224493	Identifier	con		3224050	0					
ANR	3224494	Identifier	hei		3224050	1					
ANR	3224495	PtrMemberAccess	con -> ncomp		3224050	1					
ANR	3224496	Identifier	con		3224050	0					
ANR	3224497	Identifier	ncomp		3224050	1					
ANR	3224498	ElseStatement	else		3224050	0					
ANR	3224499	IfStatement	if ( ! con -> padBytes )		3224050	0					
ANR	3224500	Condition	! con -> padBytes	670:12:21066:21079	3224050	0	True				
ANR	3224501	UnaryOperationExpression	! con -> padBytes		3224050	0					
ANR	3224502	UnaryOperator	!		3224050	0					
ANR	3224503	PtrMemberAccess	con -> padBytes		3224050	1					
ANR	3224504	Identifier	con		3224050	0					
ANR	3224505	Identifier	padBytes		3224050	1					
ANR	3224506	ExpressionStatement	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 ) )"	671:8:21090:21184	3224050	1	True				
ANR	3224507	CallExpression	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 ) )"		3224050	0					
ANR	3224508	Callee	put_ifd_entry		3224050	0					
ANR	3224509	Identifier	put_ifd_entry		3224050	0					
ANR	3224510	ArgumentList	con		3224050	1					
ANR	3224511	Argument	con		3224050	0					
ANR	3224512	Identifier	con		3224050	0					
ANR	3224513	Argument	StripByteCounts		3224050	1					
ANR	3224514	Identifier	StripByteCounts		3224050	0					
ANR	3224515	Argument	4		3224050	2					
ANR	3224516	PrimaryExpression	4		3224050	0					
ANR	3224517	Argument	1		3224050	3					
ANR	3224518	PrimaryExpression	1		3224050	0					
ANR	3224519	Argument	con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		3224050	4					
ANR	3224520	MultiplicativeExpression	con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		3224050	0		*			
ANR	3224521	PtrMemberAccess	con -> wid		3224050	0					
ANR	3224522	Identifier	con		3224050	0					
ANR	3224523	Identifier	wid		3224050	1					
ANR	3224524	MultiplicativeExpression	con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		3224050	1		*			
ANR	3224525	PtrMemberAccess	con -> hei		3224050	0					
ANR	3224526	Identifier	con		3224050	0					
ANR	3224527	Identifier	hei		3224050	1					
ANR	3224528	MultiplicativeExpression	con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		3224050	1		*			
ANR	3224529	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224530	Identifier	con		3224050	0					
ANR	3224531	Identifier	ncomp		3224050	1					
ANR	3224532	MultiplicativeExpression	( con -> bpi + 7 ) / 8		3224050	1		/			
ANR	3224533	AdditiveExpression	con -> bpi + 7		3224050	0		+			
ANR	3224534	PtrMemberAccess	con -> bpi		3224050	0					
ANR	3224535	Identifier	con		3224050	0					
ANR	3224536	Identifier	bpi		3224050	1					
ANR	3224537	PrimaryExpression	7		3224050	1					
ANR	3224538	PrimaryExpression	8		3224050	1					
ANR	3224539	ElseStatement	else		3224050	0					
ANR	3224540	ExpressionStatement	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )"	673:8:21203:21302	3224050	0	True				
ANR	3224541	CallExpression	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )"		3224050	0					
ANR	3224542	Callee	put_ifd_entry		3224050	0					
ANR	3224543	Identifier	put_ifd_entry		3224050	0					
ANR	3224544	ArgumentList	con		3224050	1					
ANR	3224545	Argument	con		3224050	0					
ANR	3224546	Identifier	con		3224050	0					
ANR	3224547	Argument	StripByteCounts		3224050	1					
ANR	3224548	Identifier	StripByteCounts		3224050	0					
ANR	3224549	Argument	4		3224050	2					
ANR	3224550	PrimaryExpression	4		3224050	0					
ANR	3224551	Argument	1		3224050	3					
ANR	3224552	PrimaryExpression	1		3224050	0					
ANR	3224553	Argument	con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3224050	4					
ANR	3224554	MultiplicativeExpression	con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3224050	0		*			
ANR	3224555	PtrMemberAccess	con -> wid		3224050	0					
ANR	3224556	Identifier	con		3224050	0					
ANR	3224557	Identifier	wid		3224050	1					
ANR	3224558	MultiplicativeExpression	con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3224050	1		*			
ANR	3224559	PtrMemberAccess	con -> hei		3224050	0					
ANR	3224560	Identifier	con		3224050	0					
ANR	3224561	Identifier	hei		3224050	1					
ANR	3224562	MultiplicativeExpression	( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3224050	1		*			
ANR	3224563	AdditiveExpression	con -> ncomp + 1		3224050	0		+			
ANR	3224564	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224565	Identifier	con		3224050	0					
ANR	3224566	Identifier	ncomp		3224050	1					
ANR	3224567	PrimaryExpression	1		3224050	1					
ANR	3224568	MultiplicativeExpression	( con -> bpi + 7 ) / 8		3224050	1		/			
ANR	3224569	AdditiveExpression	con -> bpi + 7		3224050	0		+			
ANR	3224570	PtrMemberAccess	con -> bpi		3224050	0					
ANR	3224571	Identifier	con		3224050	0					
ANR	3224572	Identifier	bpi		3224050	1					
ANR	3224573	PrimaryExpression	7		3224050	1					
ANR	3224574	PrimaryExpression	8		3224050	1					
ANR	3224575	IfStatement	if ( con -> ncomp == 4 && ! con -> alpha )		3224050	26					
ANR	3224576	Condition	con -> ncomp == 4 && ! con -> alpha	675:8:21313:21342	3224050	0	True				
ANR	3224577	AndExpression	con -> ncomp == 4 && ! con -> alpha		3224050	0		&&			
ANR	3224578	EqualityExpression	con -> ncomp == 4		3224050	0		==			
ANR	3224579	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224580	Identifier	con		3224050	0					
ANR	3224581	Identifier	ncomp		3224050	1					
ANR	3224582	PrimaryExpression	4		3224050	1					
ANR	3224583	UnaryOperationExpression	! con -> alpha		3224050	1					
ANR	3224584	UnaryOperator	!		3224050	0					
ANR	3224585	PtrMemberAccess	con -> alpha		3224050	1					
ANR	3224586	Identifier	con		3224050	0					
ANR	3224587	Identifier	alpha		3224050	1					
ANR	3224588	ExpressionStatement	"put_ifd_entry ( con , InkSet , 3 , 1 , 1 )"	676:8:21353:21388	3224050	1	True				
ANR	3224589	CallExpression	"put_ifd_entry ( con , InkSet , 3 , 1 , 1 )"		3224050	0					
ANR	3224590	Callee	put_ifd_entry		3224050	0					
ANR	3224591	Identifier	put_ifd_entry		3224050	0					
ANR	3224592	ArgumentList	con		3224050	1					
ANR	3224593	Argument	con		3224050	0					
ANR	3224594	Identifier	con		3224050	0					
ANR	3224595	Argument	InkSet		3224050	1					
ANR	3224596	Identifier	InkSet		3224050	0					
ANR	3224597	Argument	3		3224050	2					
ANR	3224598	PrimaryExpression	3		3224050	0					
ANR	3224599	Argument	1		3224050	3					
ANR	3224600	PrimaryExpression	1		3224050	0					
ANR	3224601	Argument	1		3224050	4					
ANR	3224602	PrimaryExpression	1		3224050	0					
ANR	3224603	ExpressionStatement	"put_uint32 ( con , 0 )"	678:4:21395:21413	3224050	27	True				
ANR	3224604	CallExpression	"put_uint32 ( con , 0 )"		3224050	0					
ANR	3224605	Callee	put_uint32		3224050	0					
ANR	3224606	Identifier	put_uint32		3224050	0					
ANR	3224607	ArgumentList	con		3224050	1					
ANR	3224608	Argument	con		3224050	0					
ANR	3224609	Identifier	con		3224050	0					
ANR	3224610	Argument	0		3224050	1					
ANR	3224611	PrimaryExpression	0		3224050	0					
ANR	3224612	ExpressionStatement	assert ( ftell ( con -> file ) == bitoff )	679:4:21419:21451	3224050	28	True				
ANR	3224613	CallExpression	assert ( ftell ( con -> file ) == bitoff )		3224050	0					
ANR	3224614	Callee	assert		3224050	0					
ANR	3224615	Identifier	assert		3224050	0					
ANR	3224616	ArgumentList	ftell ( con -> file ) == bitoff		3224050	1					
ANR	3224617	Argument	ftell ( con -> file ) == bitoff		3224050	0					
ANR	3224618	EqualityExpression	ftell ( con -> file ) == bitoff		3224050	0		==			
ANR	3224619	CallExpression	ftell ( con -> file )		3224050	0					
ANR	3224620	Callee	ftell		3224050	0					
ANR	3224621	Identifier	ftell		3224050	0					
ANR	3224622	ArgumentList	con -> file		3224050	1					
ANR	3224623	Argument	con -> file		3224050	0					
ANR	3224624	PtrMemberAccess	con -> file		3224050	0					
ANR	3224625	Identifier	con		3224050	0					
ANR	3224626	Identifier	file		3224050	1					
ANR	3224627	Identifier	bitoff		3224050	1					
ANR	3224628	IfStatement	if ( con -> ncomp >= 3 )		3224050	29					
ANR	3224629	Condition	con -> ncomp >= 3	680:8:21461:21473	3224050	0	True				
ANR	3224630	RelationalExpression	con -> ncomp >= 3		3224050	0		>=			
ANR	3224631	PtrMemberAccess	con -> ncomp		3224050	0					
ANR	3224632	Identifier	con		3224050	0					
ANR	3224633	Identifier	ncomp		3224050	1					
ANR	3224634	PrimaryExpression	3		3224050	1					
ANR	3224635	CompoundStatement		69:8:2264:2269	3224050	1					
ANR	3224636	IdentifierDeclStatement	int i ;	681:8:21486:21491	3224050	0	True				
ANR	3224637	IdentifierDecl	i		3224050	0					
ANR	3224638	IdentifierDeclType	int		3224050	0					
ANR	3224639	Identifier	i		3224050	1					
ANR	3224640	ForStatement	for ( i = 0 ; i < con -> ncomp ; i ++ )		3224050	1					
ANR	3224641	ForInit	i = 0 ;	682:13:21506:21509	3224050	0	True				
ANR	3224642	AssignmentExpression	i = 0		3224050	0		=			
ANR	3224643	Identifier	i		3224050	0					
ANR	3224644	PrimaryExpression	0		3224050	1					
ANR	3224645	Condition	i < con -> ncomp	682:18:21511:21522	3224050	1	True				
ANR	3224646	RelationalExpression	i < con -> ncomp		3224050	0		<			
ANR	3224647	Identifier	i		3224050	0					
ANR	3224648	PtrMemberAccess	con -> ncomp		3224050	1					
ANR	3224649	Identifier	con		3224050	0					
ANR	3224650	Identifier	ncomp		3224050	1					
ANR	3224651	PostIncDecOperationExpression	i ++	682:32:21525:21527	3224050	2	True				
ANR	3224652	Identifier	i		3224050	0					
ANR	3224653	IncDec	++		3224050	1					
ANR	3224654	ExpressionStatement	"put_uint16 ( con , con -> bpi )"	683:12:21542:21567	3224050	3	True				
ANR	3224655	CallExpression	"put_uint16 ( con , con -> bpi )"		3224050	0					
ANR	3224656	Callee	put_uint16		3224050	0					
ANR	3224657	Identifier	put_uint16		3224050	0					
ANR	3224658	ArgumentList	con		3224050	1					
ANR	3224659	Argument	con		3224050	0					
ANR	3224660	Identifier	con		3224050	0					
ANR	3224661	Argument	con -> bpi		3224050	1					
ANR	3224662	PtrMemberAccess	con -> bpi		3224050	0					
ANR	3224663	Identifier	con		3224050	0					
ANR	3224664	Identifier	bpi		3224050	1					
ANR	3224665	ExpressionStatement	assert ( ftell ( con -> file ) == datoff )	685:4:21579:21611	3224050	30	True				
ANR	3224666	CallExpression	assert ( ftell ( con -> file ) == datoff )		3224050	0					
ANR	3224667	Callee	assert		3224050	0					
ANR	3224668	Identifier	assert		3224050	0					
ANR	3224669	ArgumentList	ftell ( con -> file ) == datoff		3224050	1					
ANR	3224670	Argument	ftell ( con -> file ) == datoff		3224050	0					
ANR	3224671	EqualityExpression	ftell ( con -> file ) == datoff		3224050	0		==			
ANR	3224672	CallExpression	ftell ( con -> file )		3224050	0					
ANR	3224673	Callee	ftell		3224050	0					
ANR	3224674	Identifier	ftell		3224050	0					
ANR	3224675	ArgumentList	con -> file		3224050	1					
ANR	3224676	Argument	con -> file		3224050	0					
ANR	3224677	PtrMemberAccess	con -> file		3224050	0					
ANR	3224678	Identifier	con		3224050	0					
ANR	3224679	Identifier	file		3224050	1					
ANR	3224680	Identifier	datoff		3224050	1					
ANR	3224681	ReturnType	static void		3224050	1					
ANR	3224682	Identifier	start_tif_output_file		3224050	2					
ANR	3224683	ParameterList	context * con		3224050	3					
ANR	3224684	Parameter	context * con	612:34:19207:19218	3224050	0	True				
ANR	3224685	ParameterType	context *		3224050	0					
ANR	3224686	Identifier	con		3224050	1					
ANR	3224687	CFGEntryNode	ENTRY		3224050		True				
ANR	3224688	CFGExitNode	EXIT		3224050		True				
ANR	3224689	Symbol	magic		3224050						
ANR	3224690	Symbol	Compression		3224050						
ANR	3224691	Symbol	con		3224050						
ANR	3224692	Symbol	con -> ncomp		3224050						
ANR	3224693	Symbol	SamplesPerPixel		3224050						
ANR	3224694	Symbol	ftell		3224050						
ANR	3224695	Symbol	datoff		3224050						
ANR	3224696	Symbol	ImageLength		3224050						
ANR	3224697	Symbol	& one		3224050						
ANR	3224698	Symbol	BitsPerSample		3224050						
ANR	3224699	Symbol	con -> swap		3224050						
ANR	3224700	Symbol	* con		3224050						
ANR	3224701	Symbol	con -> bpi		3224050						
ANR	3224702	Symbol	ImageWidth		3224050						
ANR	3224703	Symbol	StripOffsets		3224050						
ANR	3224704	Symbol	Photometric		3224050						
ANR	3224705	Symbol	con -> padBytes		3224050						
ANR	3224706	Symbol	* ( char * ) & one		3224050						
ANR	3224707	Symbol	con -> photometric		3224050						
ANR	3224708	Symbol	con -> wid		3224050						
ANR	3224709	Symbol	fopen		3224050						
ANR	3224710	Symbol	RowsPerStrip		3224050						
ANR	3224711	Symbol	con -> file		3224050						
ANR	3224712	Symbol	con -> hei		3224050						
ANR	3224713	Symbol	bitsize		3224050						
ANR	3224714	Symbol	one		3224050						
ANR	3224715	Symbol	i		3224050						
ANR	3224716	Symbol	con -> name		3224050						
ANR	3224717	Symbol	InkSet		3224050						
ANR	3224718	Symbol	SampleFormat		3224050						
ANR	3224719	Symbol	con -> format		3224050						
ANR	3224720	Symbol	StripByteCounts		3224050						
ANR	3224721	Symbol	con -> alpha		3224050						
ANR	3224722	Symbol	bitoff		3224050						
ANR	3224723	Symbol	nentry		3224050						
ANR	3224724	Symbol	con -> sf		3224050						
ANR	3224725	Function	start_raw_output_file	688:0:21616:21810							
ANR	3224726	FunctionDef	start_raw_output_file (context * con)		3224725	0					
ANR	3224727	CompoundStatement		689:0:21664:21810	3224725	0					
ANR	3224728	ExpressionStatement	"con -> file = fopen ( con -> name , ""w+b"" )"	690:4:21670:21705	3224725	0	True				
ANR	3224729	AssignmentExpression	"con -> file = fopen ( con -> name , ""w+b"" )"		3224725	0		=			
ANR	3224730	PtrMemberAccess	con -> file		3224725	0					
ANR	3224731	Identifier	con		3224725	0					
ANR	3224732	Identifier	file		3224725	1					
ANR	3224733	CallExpression	"fopen ( con -> name , ""w+b"" )"		3224725	1					
ANR	3224734	Callee	fopen		3224725	0					
ANR	3224735	Identifier	fopen		3224725	0					
ANR	3224736	ArgumentList	con -> name		3224725	1					
ANR	3224737	Argument	con -> name		3224725	0					
ANR	3224738	PtrMemberAccess	con -> name		3224725	0					
ANR	3224739	Identifier	con		3224725	0					
ANR	3224740	Identifier	name		3224725	1					
ANR	3224741	Argument	"""w+b"""		3224725	1					
ANR	3224742	PrimaryExpression	"""w+b"""		3224725	0					
ANR	3224743	IfStatement	if ( con -> file == 0 )		3224725	1					
ANR	3224744	Condition	con -> file == 0	691:8:21715:21726	3224725	0	True				
ANR	3224745	EqualityExpression	con -> file == 0		3224725	0		==			
ANR	3224746	PtrMemberAccess	con -> file		3224725	0					
ANR	3224747	Identifier	con		3224725	0					
ANR	3224748	Identifier	file		3224725	1					
ANR	3224749	PrimaryExpression	0		3224725	1					
ANR	3224750	ExpressionStatement	"error ( ""cannot create RAW output file %s"" , con -> name )"	692:8:21737:21789	3224725	1	True				
ANR	3224751	CallExpression	"error ( ""cannot create RAW output file %s"" , con -> name )"		3224725	0					
ANR	3224752	Callee	error		3224725	0					
ANR	3224753	Identifier	error		3224725	0					
ANR	3224754	ArgumentList	"""cannot create RAW output file %s"""		3224725	1					
ANR	3224755	Argument	"""cannot create RAW output file %s"""		3224725	0					
ANR	3224756	PrimaryExpression	"""cannot create RAW output file %s"""		3224725	0					
ANR	3224757	Argument	con -> name		3224725	1					
ANR	3224758	PtrMemberAccess	con -> name		3224725	0					
ANR	3224759	Identifier	con		3224725	0					
ANR	3224760	Identifier	name		3224725	1					
ANR	3224761	ExpressionStatement	con -> swap = 0	693:4:21795:21808	3224725	2	True				
ANR	3224762	AssignmentExpression	con -> swap = 0		3224725	0		=			
ANR	3224763	PtrMemberAccess	con -> swap		3224725	0					
ANR	3224764	Identifier	con		3224725	0					
ANR	3224765	Identifier	swap		3224725	1					
ANR	3224766	PrimaryExpression	0		3224725	1					
ANR	3224767	ReturnType	static void		3224725	1					
ANR	3224768	Identifier	start_raw_output_file		3224725	2					
ANR	3224769	ParameterList	context * con		3224725	3					
ANR	3224770	Parameter	context * con	688:34:21650:21661	3224725	0	True				
ANR	3224771	ParameterType	context *		3224725	0					
ANR	3224772	Identifier	con		3224725	1					
ANR	3224773	CFGEntryNode	ENTRY		3224725		True				
ANR	3224774	CFGExitNode	EXIT		3224725		True				
ANR	3224775	Symbol	con -> swap		3224725						
ANR	3224776	Symbol	fopen		3224725						
ANR	3224777	Symbol	con		3224725						
ANR	3224778	Symbol	* con		3224725						
ANR	3224779	Symbol	con -> file		3224725						
ANR	3224780	Symbol	con -> name		3224725						
ANR	3224781	Function	open_input_file	698:0:21852:27829							
ANR	3224782	FunctionDef	"open_input_file (const char * name , const raw_info * raw_info_t , int * alpha_mode , int * padded_format)"		3224781	0					
ANR	3224783	CompoundStatement		699:0:21957:27829	3224781	0					
ANR	3224784	IdentifierDeclStatement	context * con ;	700:4:21963:21975	3224781	0	True				
ANR	3224785	IdentifierDecl	* con		3224781	0					
ANR	3224786	IdentifierDeclType	context *		3224781	0					
ANR	3224787	Identifier	con		3224781	1					
ANR	3224788	ExpressionStatement	con = ( context * ) malloc ( sizeof ( context ) )	702:4:21982:22021	3224781	1	True				
ANR	3224789	AssignmentExpression	con = ( context * ) malloc ( sizeof ( context ) )		3224781	0		=			
ANR	3224790	Identifier	con		3224781	0					
ANR	3224791	CastExpression	( context * ) malloc ( sizeof ( context ) )		3224781	1					
ANR	3224792	CastTarget	context *		3224781	0					
ANR	3224793	CallExpression	malloc ( sizeof ( context ) )		3224781	1					
ANR	3224794	Callee	malloc		3224781	0					
ANR	3224795	Identifier	malloc		3224781	0					
ANR	3224796	ArgumentList	sizeof ( context )		3224781	1					
ANR	3224797	Argument	sizeof ( context )		3224781	0					
ANR	3224798	SizeofExpression	sizeof ( context )		3224781	0					
ANR	3224799	Sizeof	sizeof		3224781	0					
ANR	3224800	SizeofOperand	context		3224781	1					
ANR	3224801	IfStatement	if ( con == 0 )		3224781	2					
ANR	3224802	Condition	con == 0	703:8:22031:22036	3224781	0	True				
ANR	3224803	EqualityExpression	con == 0		3224781	0		==			
ANR	3224804	Identifier	con		3224781	0					
ANR	3224805	PrimaryExpression	0		3224781	1					
ANR	3224806	ExpressionStatement	"error ( ""unable to allocate memory"" )"	704:8:22047:22081	3224781	1	True				
ANR	3224807	CallExpression	"error ( ""unable to allocate memory"" )"		3224781	0					
ANR	3224808	Callee	error		3224781	0					
ANR	3224809	Identifier	error		3224781	0					
ANR	3224810	ArgumentList	"""unable to allocate memory"""		3224781	1					
ANR	3224811	Argument	"""unable to allocate memory"""		3224781	0					
ANR	3224812	PrimaryExpression	"""unable to allocate memory"""		3224781	0					
ANR	3224813	ExpressionStatement	con -> name = name	706:4:22088:22104	3224781	3	True				
ANR	3224814	AssignmentExpression	con -> name = name		3224781	0		=			
ANR	3224815	PtrMemberAccess	con -> name		3224781	0					
ANR	3224816	Identifier	con		3224781	0					
ANR	3224817	Identifier	name		3224781	1					
ANR	3224818	Identifier	name		3224781	1					
ANR	3224819	ExpressionStatement	con -> wid = 0	707:4:22110:22122	3224781	4	True				
ANR	3224820	AssignmentExpression	con -> wid = 0		3224781	0		=			
ANR	3224821	PtrMemberAccess	con -> wid		3224781	0					
ANR	3224822	Identifier	con		3224781	0					
ANR	3224823	Identifier	wid		3224781	1					
ANR	3224824	PrimaryExpression	0		3224781	1					
ANR	3224825	ExpressionStatement	con -> hei = 0	708:4:22128:22140	3224781	5	True				
ANR	3224826	AssignmentExpression	con -> hei = 0		3224781	0		=			
ANR	3224827	PtrMemberAccess	con -> hei		3224781	0					
ANR	3224828	Identifier	con		3224781	0					
ANR	3224829	Identifier	hei		3224781	1					
ANR	3224830	PrimaryExpression	0		3224781	1					
ANR	3224831	ExpressionStatement	con -> ncomp = 0	709:4:22146:22160	3224781	6	True				
ANR	3224832	AssignmentExpression	con -> ncomp = 0		3224781	0		=			
ANR	3224833	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3224834	Identifier	con		3224781	0					
ANR	3224835	Identifier	ncomp		3224781	1					
ANR	3224836	PrimaryExpression	0		3224781	1					
ANR	3224837	ExpressionStatement	con -> bpi = 0	710:4:22166:22178	3224781	7	True				
ANR	3224838	AssignmentExpression	con -> bpi = 0		3224781	0		=			
ANR	3224839	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3224840	Identifier	con		3224781	0					
ANR	3224841	Identifier	bpi		3224781	1					
ANR	3224842	PrimaryExpression	0		3224781	1					
ANR	3224843	ExpressionStatement	con -> format = 0	711:4:22184:22199	3224781	8	True				
ANR	3224844	AssignmentExpression	con -> format = 0		3224781	0		=			
ANR	3224845	PtrMemberAccess	con -> format		3224781	0					
ANR	3224846	Identifier	con		3224781	0					
ANR	3224847	Identifier	format		3224781	1					
ANR	3224848	PrimaryExpression	0		3224781	1					
ANR	3224849	ExpressionStatement	con -> sf = 1	712:4:22205:22216	3224781	9	True				
ANR	3224850	AssignmentExpression	con -> sf = 1		3224781	0		=			
ANR	3224851	PtrMemberAccess	con -> sf		3224781	0					
ANR	3224852	Identifier	con		3224781	0					
ANR	3224853	Identifier	sf		3224781	1					
ANR	3224854	PrimaryExpression	1		3224781	1					
ANR	3224855	ExpressionStatement	con -> swap = 0	713:4:22223:22236	3224781	10	True				
ANR	3224856	AssignmentExpression	con -> swap = 0		3224781	0		=			
ANR	3224857	PtrMemberAccess	con -> swap		3224781	0					
ANR	3224858	Identifier	con		3224781	0					
ANR	3224859	Identifier	swap		3224781	1					
ANR	3224860	PrimaryExpression	0		3224781	1					
ANR	3224861	ExpressionStatement	con -> buf = 0	714:4:22242:22254	3224781	11	True				
ANR	3224862	AssignmentExpression	con -> buf = 0		3224781	0		=			
ANR	3224863	PtrMemberAccess	con -> buf		3224781	0					
ANR	3224864	Identifier	con		3224781	0					
ANR	3224865	Identifier	buf		3224781	1					
ANR	3224866	PrimaryExpression	0		3224781	1					
ANR	3224867	ExpressionStatement	con -> my = - 1	715:4:22260:22272	3224781	12	True				
ANR	3224868	AssignmentExpression	con -> my = - 1		3224781	0		=			
ANR	3224869	PtrMemberAccess	con -> my		3224781	0					
ANR	3224870	Identifier	con		3224781	0					
ANR	3224871	Identifier	my		3224781	1					
ANR	3224872	UnaryOperationExpression	- 1		3224781	1					
ANR	3224873	UnaryOperator	-		3224781	0					
ANR	3224874	PrimaryExpression	1		3224781	1					
ANR	3224875	ExpressionStatement	con -> nstrips = 0	716:4:22278:22294	3224781	13	True				
ANR	3224876	AssignmentExpression	con -> nstrips = 0		3224781	0		=			
ANR	3224877	PtrMemberAccess	con -> nstrips		3224781	0					
ANR	3224878	Identifier	con		3224781	0					
ANR	3224879	Identifier	nstrips		3224781	1					
ANR	3224880	PrimaryExpression	0		3224781	1					
ANR	3224881	ExpressionStatement	con -> strip = 0	717:4:22300:22314	3224781	14	True				
ANR	3224882	AssignmentExpression	con -> strip = 0		3224781	0		=			
ANR	3224883	PtrMemberAccess	con -> strip		3224781	0					
ANR	3224884	Identifier	con		3224781	0					
ANR	3224885	Identifier	strip		3224781	1					
ANR	3224886	PrimaryExpression	0		3224781	1					
ANR	3224887	ExpressionStatement	con -> nlines = 0	718:4:22320:22335	3224781	15	True				
ANR	3224888	AssignmentExpression	con -> nlines = 0		3224781	0		=			
ANR	3224889	PtrMemberAccess	con -> nlines		3224781	0					
ANR	3224890	Identifier	con		3224781	0					
ANR	3224891	Identifier	nlines		3224781	1					
ANR	3224892	PrimaryExpression	0		3224781	1					
ANR	3224893	ExpressionStatement	con -> line = 0	719:4:22341:22354	3224781	16	True				
ANR	3224894	AssignmentExpression	con -> line = 0		3224781	0		=			
ANR	3224895	PtrMemberAccess	con -> line		3224781	0					
ANR	3224896	Identifier	con		3224781	0					
ANR	3224897	Identifier	line		3224781	1					
ANR	3224898	PrimaryExpression	0		3224781	1					
ANR	3224899	ExpressionStatement	con -> photometric = 0	720:4:22360:22380	3224781	17	True				
ANR	3224900	AssignmentExpression	con -> photometric = 0		3224781	0		=			
ANR	3224901	PtrMemberAccess	con -> photometric		3224781	0					
ANR	3224902	Identifier	con		3224781	0					
ANR	3224903	Identifier	photometric		3224781	1					
ANR	3224904	PrimaryExpression	0		3224781	1					
ANR	3224905	ExpressionStatement	con -> offoff = 0	721:4:22387:22402	3224781	18	True				
ANR	3224906	AssignmentExpression	con -> offoff = 0		3224781	0		=			
ANR	3224907	PtrMemberAccess	con -> offoff		3224781	0					
ANR	3224908	Identifier	con		3224781	0					
ANR	3224909	Identifier	offoff		3224781	1					
ANR	3224910	PrimaryExpression	0		3224781	1					
ANR	3224911	ExpressionStatement	con -> ycc_bd10_flag = 0	722:4:22408:22430	3224781	19	True				
ANR	3224912	AssignmentExpression	con -> ycc_bd10_flag = 0		3224781	0		=			
ANR	3224913	PtrMemberAccess	con -> ycc_bd10_flag		3224781	0					
ANR	3224914	Identifier	con		3224781	0					
ANR	3224915	Identifier	ycc_bd10_flag		3224781	1					
ANR	3224916	PrimaryExpression	0		3224781	1					
ANR	3224917	ExpressionStatement	con -> ycc_format = 0	723:4:22436:22455	3224781	20	True				
ANR	3224918	AssignmentExpression	con -> ycc_format = 0		3224781	0		=			
ANR	3224919	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3224920	Identifier	con		3224781	0					
ANR	3224921	Identifier	ycc_format		3224781	1					
ANR	3224922	PrimaryExpression	0		3224781	1					
ANR	3224923	ExpressionStatement	"con -> file = fopen ( name , ""rb"" )"	725:4:22462:22491	3224781	21	True				
ANR	3224924	AssignmentExpression	"con -> file = fopen ( name , ""rb"" )"		3224781	0		=			
ANR	3224925	PtrMemberAccess	con -> file		3224781	0					
ANR	3224926	Identifier	con		3224781	0					
ANR	3224927	Identifier	file		3224781	1					
ANR	3224928	CallExpression	"fopen ( name , ""rb"" )"		3224781	1					
ANR	3224929	Callee	fopen		3224781	0					
ANR	3224930	Identifier	fopen		3224781	0					
ANR	3224931	ArgumentList	name		3224781	1					
ANR	3224932	Argument	name		3224781	0					
ANR	3224933	Identifier	name		3224781	0					
ANR	3224934	Argument	"""rb"""		3224781	1					
ANR	3224935	PrimaryExpression	"""rb"""		3224781	0					
ANR	3224936	IfStatement	if ( con -> file == 0 )		3224781	22					
ANR	3224937	Condition	con -> file == 0	726:8:22501:22512	3224781	0	True				
ANR	3224938	EqualityExpression	con -> file == 0		3224781	0		==			
ANR	3224939	PtrMemberAccess	con -> file		3224781	0					
ANR	3224940	Identifier	con		3224781	0					
ANR	3224941	Identifier	file		3224781	1					
ANR	3224942	PrimaryExpression	0		3224781	1					
ANR	3224943	ExpressionStatement	"error ( ""cannot find input file %s"" , name )"	727:8:22523:22563	3224781	1	True				
ANR	3224944	CallExpression	"error ( ""cannot find input file %s"" , name )"		3224781	0					
ANR	3224945	Callee	error		3224781	0					
ANR	3224946	Identifier	error		3224781	0					
ANR	3224947	ArgumentList	"""cannot find input file %s"""		3224781	1					
ANR	3224948	Argument	"""cannot find input file %s"""		3224781	0					
ANR	3224949	PrimaryExpression	"""cannot find input file %s"""		3224781	0					
ANR	3224950	Argument	name		3224781	1					
ANR	3224951	Identifier	name		3224781	0					
ANR	3224952	IfStatement	if ( ! raw_info_t -> is_raw )		3224781	23					
ANR	3224953	Condition	! raw_info_t -> is_raw	729:8:22574:22592	3224781	0	True				
ANR	3224954	UnaryOperationExpression	! raw_info_t -> is_raw		3224781	0					
ANR	3224955	UnaryOperator	!		3224781	0					
ANR	3224956	PtrMemberAccess	raw_info_t -> is_raw		3224781	1					
ANR	3224957	Identifier	raw_info_t		3224781	0					
ANR	3224958	Identifier	is_raw		3224781	1					
ANR	3224959	CompoundStatement		31:29:637:637	3224781	1					
ANR	3224960	SwitchStatement	switch ( get_uint8 ( con ) )		3224781	0					
ANR	3224961	Condition	get_uint8 ( con )	730:16:22613:22626	3224781	0	True				
ANR	3224962	CallExpression	get_uint8 ( con )		3224781	0					
ANR	3224963	Callee	get_uint8		3224781	0					
ANR	3224964	Identifier	get_uint8		3224781	0					
ANR	3224965	ArgumentList	con		3224781	1					
ANR	3224966	Argument	con		3224781	0					
ANR	3224967	Identifier	con		3224781	0					
ANR	3224968	CompoundStatement		32:32:671:671	3224781	1					
ANR	3224969	Label	case 'P' :	731:12:22643:22652	3224781	0	True				
ANR	3224970	ExpressionStatement	open_pnm_input_file ( con )	731:23:22654:22678	3224781	1	True				
ANR	3224971	CallExpression	open_pnm_input_file ( con )		3224781	0					
ANR	3224972	Callee	open_pnm_input_file		3224781	0					
ANR	3224973	Identifier	open_pnm_input_file		3224781	0					
ANR	3224974	ArgumentList	con		3224781	1					
ANR	3224975	Argument	con		3224781	0					
ANR	3224976	Identifier	con		3224781	0					
ANR	3224977	BreakStatement	break ;	731:49:22680:22685	3224781	2	True				
ANR	3224978	Label	case 'I' :	732:12:22699:22708	3224781	3	True				
ANR	3224979	Label	case 'M' :	733:12:22722:22731	3224781	4	True				
ANR	3224980	ExpressionStatement	open_tif_input_file ( con )	733:23:22733:22757	3224781	5	True				
ANR	3224981	CallExpression	open_tif_input_file ( con )		3224781	0					
ANR	3224982	Callee	open_tif_input_file		3224781	0					
ANR	3224983	Identifier	open_tif_input_file		3224781	0					
ANR	3224984	ArgumentList	con		3224781	1					
ANR	3224985	Argument	con		3224781	0					
ANR	3224986	Identifier	con		3224781	0					
ANR	3224987	BreakStatement	break ;	733:49:22759:22764	3224781	6	True				
ANR	3224988	Label	default :	734:12:22778:22786	3224781	7	True				
ANR	3224989	Identifier	default		3224781	0					
ANR	3224990	ExpressionStatement	"error ( ""format of input file %s is unrecognized"" , name )"	734:22:22788:22842	3224781	8	True				
ANR	3224991	CallExpression	"error ( ""format of input file %s is unrecognized"" , name )"		3224781	0					
ANR	3224992	Callee	error		3224781	0					
ANR	3224993	Identifier	error		3224781	0					
ANR	3224994	ArgumentList	"""format of input file %s is unrecognized"""		3224781	1					
ANR	3224995	Argument	"""format of input file %s is unrecognized"""		3224781	0					
ANR	3224996	PrimaryExpression	"""format of input file %s is unrecognized"""		3224781	0					
ANR	3224997	Argument	name		3224781	1					
ANR	3224998	Identifier	name		3224781	0					
ANR	3224999	ExpressionStatement	con -> padBytes = 0	737:8:22871:22888	3224781	1	True				
ANR	3225000	AssignmentExpression	con -> padBytes = 0		3224781	0		=			
ANR	3225001	PtrMemberAccess	con -> padBytes		3224781	0					
ANR	3225002	Identifier	con		3224781	0					
ANR	3225003	Identifier	padBytes		3224781	1					
ANR	3225004	PrimaryExpression	0		3224781	1					
ANR	3225005	IfStatement	if ( con -> photometric == 2 && con -> ncomp == 4 )		3224781	2					
ANR	3225006	Condition	con -> photometric == 2 && con -> ncomp == 4	738:11:22902:22941	3224781	0	True				
ANR	3225007	AndExpression	con -> photometric == 2 && con -> ncomp == 4		3224781	0		&&			
ANR	3225008	EqualityExpression	con -> photometric == 2		3224781	0		==			
ANR	3225009	PtrMemberAccess	con -> photometric		3224781	0					
ANR	3225010	Identifier	con		3224781	0					
ANR	3225011	Identifier	photometric		3224781	1					
ANR	3225012	PrimaryExpression	2		3224781	1					
ANR	3225013	EqualityExpression	con -> ncomp == 4		3224781	1		==			
ANR	3225014	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225015	Identifier	con		3224781	0					
ANR	3225016	Identifier	ncomp		3224781	1					
ANR	3225017	PrimaryExpression	4		3224781	1					
ANR	3225018	IfStatement	if ( * padded_format == 1 )		3224781	1					
ANR	3225019	Condition	* padded_format == 1	739:16:22971:22989	3224781	0	True				
ANR	3225020	EqualityExpression	* padded_format == 1		3224781	0		==			
ANR	3225021	UnaryOperationExpression	* padded_format		3224781	0					
ANR	3225022	UnaryOperator	*		3224781	0					
ANR	3225023	Identifier	padded_format		3224781	1					
ANR	3225024	PrimaryExpression	1		3224781	1					
ANR	3225025	CompoundStatement		41:37:1034:1034	3224781	1					
ANR	3225026	ExpressionStatement	con -> padBytes = 1	740:16:23057:23074	3224781	0	True				
ANR	3225027	AssignmentExpression	con -> padBytes = 1		3224781	0		=			
ANR	3225028	PtrMemberAccess	con -> padBytes		3224781	0					
ANR	3225029	Identifier	con		3224781	0					
ANR	3225030	Identifier	padBytes		3224781	1					
ANR	3225031	PrimaryExpression	1		3224781	1					
ANR	3225032	ExpressionStatement	con -> ncomp --	741:16:23093:23106	3224781	1	True				
ANR	3225033	PostIncDecOperationExpression	con -> ncomp --		3224781	0					
ANR	3225034	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225035	Identifier	con		3224781	0					
ANR	3225036	Identifier	ncomp		3224781	1					
ANR	3225037	IncDec	--		3224781	1					
ANR	3225038	IfStatement	if ( * alpha_mode != 0 )		3224781	2					
ANR	3225039	Condition	* alpha_mode != 0	742:19:23128:23143	3224781	0	True				
ANR	3225040	EqualityExpression	* alpha_mode != 0		3224781	0		!=			
ANR	3225041	UnaryOperationExpression	* alpha_mode		3224781	0					
ANR	3225042	UnaryOperator	*		3224781	0					
ANR	3225043	Identifier	alpha_mode		3224781	1					
ANR	3225044	PrimaryExpression	0		3224781	1					
ANR	3225045	CompoundStatement		45:16:1204:1204	3224781	1					
ANR	3225046	ExpressionStatement	* alpha_mode = 0	744:20:23184:23199	3224781	0	True				
ANR	3225047	AssignmentExpression	* alpha_mode = 0		3224781	0		=			
ANR	3225048	UnaryOperationExpression	* alpha_mode		3224781	0					
ANR	3225049	UnaryOperator	*		3224781	0					
ANR	3225050	Identifier	alpha_mode		3224781	1					
ANR	3225051	PrimaryExpression	0		3224781	1					
ANR	3225052	ExpressionStatement	"fprintf ( stderr , ""Setting alpha_mode to 0 to encode a padded format \\n"" )"	745:20:23247:23318	3224781	1	True				
ANR	3225053	CallExpression	"fprintf ( stderr , ""Setting alpha_mode to 0 to encode a padded format \\n"" )"		3224781	0					
ANR	3225054	Callee	fprintf		3224781	0					
ANR	3225055	Identifier	fprintf		3224781	0					
ANR	3225056	ArgumentList	stderr		3224781	1					
ANR	3225057	Argument	stderr		3224781	0					
ANR	3225058	Identifier	stderr		3224781	0					
ANR	3225059	Argument	"""Setting alpha_mode to 0 to encode a padded format \\n"""		3224781	1					
ANR	3225060	PrimaryExpression	"""Setting alpha_mode to 0 to encode a padded format \\n"""		3224781	0					
ANR	3225061	ElseStatement	else		3224781	0					
ANR	3225062	CompoundStatement		51:12:1423:1423	3224781	0					
ANR	3225063	IfStatement	if ( * alpha_mode == 0 )		3224781	0					
ANR	3225064	Condition	* alpha_mode == 0	750:19:23402:23417	3224781	0	True				
ANR	3225065	EqualityExpression	* alpha_mode == 0		3224781	0		==			
ANR	3225066	UnaryOperationExpression	* alpha_mode		3224781	0					
ANR	3225067	UnaryOperator	*		3224781	0					
ANR	3225068	Identifier	alpha_mode		3224781	1					
ANR	3225069	PrimaryExpression	0		3224781	1					
ANR	3225070	CompoundStatement		53:16:1478:1478	3224781	1					
ANR	3225071	ExpressionStatement	* alpha_mode = 2	752:20:23458:23473	3224781	0	True				
ANR	3225072	AssignmentExpression	* alpha_mode = 2		3224781	0		=			
ANR	3225073	UnaryOperationExpression	* alpha_mode		3224781	0					
ANR	3225074	UnaryOperator	*		3224781	0					
ANR	3225075	Identifier	alpha_mode		3224781	1					
ANR	3225076	PrimaryExpression	2		3224781	1					
ANR	3225077	ElseStatement	else		3224781	0					
ANR	3225078	CompoundStatement		58:9:1613:1613	3224781	0					
ANR	3225079	ExpressionStatement	con -> wid = raw_info_t -> raw_width	757:8:23597:23629	3224781	0	True				
ANR	3225080	AssignmentExpression	con -> wid = raw_info_t -> raw_width		3224781	0		=			
ANR	3225081	PtrMemberAccess	con -> wid		3224781	0					
ANR	3225082	Identifier	con		3224781	0					
ANR	3225083	Identifier	wid		3224781	1					
ANR	3225084	PtrMemberAccess	raw_info_t -> raw_width		3224781	1					
ANR	3225085	Identifier	raw_info_t		3224781	0					
ANR	3225086	Identifier	raw_width		3224781	1					
ANR	3225087	ExpressionStatement	con -> hei = raw_info_t -> raw_height	758:8:23639:23672	3224781	1	True				
ANR	3225088	AssignmentExpression	con -> hei = raw_info_t -> raw_height		3224781	0		=			
ANR	3225089	PtrMemberAccess	con -> hei		3224781	0					
ANR	3225090	Identifier	con		3224781	0					
ANR	3225091	Identifier	hei		3224781	1					
ANR	3225092	PtrMemberAccess	raw_info_t -> raw_height		3224781	1					
ANR	3225093	Identifier	raw_info_t		3224781	0					
ANR	3225094	Identifier	raw_height		3224781	1					
ANR	3225095	ExpressionStatement	con -> nlines = con -> hei	759:8:23682:23704	3224781	2	True				
ANR	3225096	AssignmentExpression	con -> nlines = con -> hei		3224781	0		=			
ANR	3225097	PtrMemberAccess	con -> nlines		3224781	0					
ANR	3225098	Identifier	con		3224781	0					
ANR	3225099	Identifier	nlines		3224781	1					
ANR	3225100	PtrMemberAccess	con -> hei		3224781	1					
ANR	3225101	Identifier	con		3224781	0					
ANR	3225102	Identifier	hei		3224781	1					
ANR	3225103	ExpressionStatement	con -> bpi = raw_info_t -> raw_bpc	760:8:23714:23744	3224781	3	True				
ANR	3225104	AssignmentExpression	con -> bpi = raw_info_t -> raw_bpc		3224781	0		=			
ANR	3225105	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225106	Identifier	con		3224781	0					
ANR	3225107	Identifier	bpi		3224781	1					
ANR	3225108	PtrMemberAccess	raw_info_t -> raw_bpc		3224781	1					
ANR	3225109	Identifier	raw_info_t		3224781	0					
ANR	3225110	Identifier	raw_bpc		3224781	1					
ANR	3225111	ExpressionStatement	con -> sf = 1	761:8:23754:23765	3224781	4	True				
ANR	3225112	AssignmentExpression	con -> sf = 1		3224781	0		=			
ANR	3225113	PtrMemberAccess	con -> sf		3224781	0					
ANR	3225114	Identifier	con		3224781	0					
ANR	3225115	Identifier	sf		3224781	1					
ANR	3225116	PrimaryExpression	1		3224781	1					
ANR	3225117	ExpressionStatement	con -> padBytes = 0	762:8:23786:23803	3224781	5	True				
ANR	3225118	AssignmentExpression	con -> padBytes = 0		3224781	0		=			
ANR	3225119	PtrMemberAccess	con -> padBytes		3224781	0					
ANR	3225120	Identifier	con		3224781	0					
ANR	3225121	Identifier	padBytes		3224781	1					
ANR	3225122	PrimaryExpression	0		3224781	1					
ANR	3225123	IfStatement	if ( con -> bpi == 10 && raw_info_t -> raw_format > 18 )		3224781	6					
ANR	3225124	Condition	con -> bpi == 10 && raw_info_t -> raw_format > 18	763:12:23818:23862	3224781	0	True				
ANR	3225125	AndExpression	con -> bpi == 10 && raw_info_t -> raw_format > 18		3224781	0		&&			
ANR	3225126	EqualityExpression	con -> bpi == 10		3224781	0		==			
ANR	3225127	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225128	Identifier	con		3224781	0					
ANR	3225129	Identifier	bpi		3224781	1					
ANR	3225130	PrimaryExpression	10		3224781	1					
ANR	3225131	RelationalExpression	raw_info_t -> raw_format > 18		3224781	1		>			
ANR	3225132	PtrMemberAccess	raw_info_t -> raw_format		3224781	0					
ANR	3225133	Identifier	raw_info_t		3224781	0					
ANR	3225134	Identifier	raw_format		3224781	1					
ANR	3225135	PrimaryExpression	18		3224781	1					
ANR	3225136	CompoundStatement		65:59:1907:1907	3224781	1					
ANR	3225137	ExpressionStatement	con -> ycc_bd10_flag = 1	764:12:23879:23901	3224781	0	True				
ANR	3225138	AssignmentExpression	con -> ycc_bd10_flag = 1		3224781	0		=			
ANR	3225139	PtrMemberAccess	con -> ycc_bd10_flag		3224781	0					
ANR	3225140	Identifier	con		3224781	0					
ANR	3225141	Identifier	ycc_bd10_flag		3224781	1					
ANR	3225142	PrimaryExpression	1		3224781	1					
ANR	3225143	ExpressionStatement	con -> bpi = 16	765:12:23915:23928	3224781	1	True				
ANR	3225144	AssignmentExpression	con -> bpi = 16		3224781	0		=			
ANR	3225145	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225146	Identifier	con		3224781	0					
ANR	3225147	Identifier	bpi		3224781	1					
ANR	3225148	PrimaryExpression	16		3224781	1					
ANR	3225149	IfStatement	if ( ( raw_info_t -> raw_format >= 3 ) && ( raw_info_t -> raw_format <= 8 ) )		3224781	7					
ANR	3225150	Condition	( raw_info_t -> raw_format >= 3 ) && ( raw_info_t -> raw_format <= 8 )	768:12:23953:24014	3224781	0	True				
ANR	3225151	AndExpression	( raw_info_t -> raw_format >= 3 ) && ( raw_info_t -> raw_format <= 8 )		3224781	0		&&			
ANR	3225152	RelationalExpression	raw_info_t -> raw_format >= 3		3224781	0		>=			
ANR	3225153	PtrMemberAccess	raw_info_t -> raw_format		3224781	0					
ANR	3225154	Identifier	raw_info_t		3224781	0					
ANR	3225155	Identifier	raw_format		3224781	1					
ANR	3225156	PrimaryExpression	3		3224781	1					
ANR	3225157	RelationalExpression	raw_info_t -> raw_format <= 8		3224781	1		<=			
ANR	3225158	PtrMemberAccess	raw_info_t -> raw_format		3224781	0					
ANR	3225159	Identifier	raw_info_t		3224781	0					
ANR	3225160	Identifier	raw_format		3224781	1					
ANR	3225161	PrimaryExpression	8		3224781	1					
ANR	3225162	CompoundStatement		70:76:2059:2059	3224781	1					
ANR	3225163	ExpressionStatement	con -> ncomp = raw_info_t -> raw_format	769:12:24047:24082	3224781	0	True				
ANR	3225164	AssignmentExpression	con -> ncomp = raw_info_t -> raw_format		3224781	0		=			
ANR	3225165	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225166	Identifier	con		3224781	0					
ANR	3225167	Identifier	ncomp		3224781	1					
ANR	3225168	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225169	Identifier	raw_info_t		3224781	0					
ANR	3225170	Identifier	raw_format		3224781	1					
ANR	3225171	ElseStatement	else		3224781	0					
ANR	3225172	IfStatement	if ( ( raw_info_t -> raw_format >= 9 ) && ( raw_info_t -> raw_format <= 14 ) )		3224781	0					
ANR	3225173	Condition	( raw_info_t -> raw_format >= 9 ) && ( raw_info_t -> raw_format <= 14 )	771:17:24111:24173	3224781	0	True				
ANR	3225174	AndExpression	( raw_info_t -> raw_format >= 9 ) && ( raw_info_t -> raw_format <= 14 )		3224781	0		&&			
ANR	3225175	RelationalExpression	raw_info_t -> raw_format >= 9		3224781	0		>=			
ANR	3225176	PtrMemberAccess	raw_info_t -> raw_format		3224781	0					
ANR	3225177	Identifier	raw_info_t		3224781	0					
ANR	3225178	Identifier	raw_format		3224781	1					
ANR	3225179	PrimaryExpression	9		3224781	1					
ANR	3225180	RelationalExpression	raw_info_t -> raw_format <= 14		3224781	1		<=			
ANR	3225181	PtrMemberAccess	raw_info_t -> raw_format		3224781	0					
ANR	3225182	Identifier	raw_info_t		3224781	0					
ANR	3225183	Identifier	raw_format		3224781	1					
ANR	3225184	PrimaryExpression	14		3224781	1					
ANR	3225185	CompoundStatement		73:82:2218:2218	3224781	1					
ANR	3225186	ExpressionStatement	con -> ncomp = raw_info_t -> raw_format - 5	772:12:24217:24256	3224781	0	True				
ANR	3225187	AssignmentExpression	con -> ncomp = raw_info_t -> raw_format - 5		3224781	0		=			
ANR	3225188	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225189	Identifier	con		3224781	0					
ANR	3225190	Identifier	ncomp		3224781	1					
ANR	3225191	AdditiveExpression	raw_info_t -> raw_format - 5		3224781	1		-			
ANR	3225192	PtrMemberAccess	raw_info_t -> raw_format		3224781	0					
ANR	3225193	Identifier	raw_info_t		3224781	0					
ANR	3225194	Identifier	raw_format		3224781	1					
ANR	3225195	PrimaryExpression	5		3224781	1					
ANR	3225196	ElseStatement	else		3224781	0					
ANR	3225197	IfStatement	if ( 15 == raw_info_t -> raw_format )		3224781	0					
ANR	3225198	Condition	15 == raw_info_t -> raw_format	774:17:24285:24312	3224781	0	True				
ANR	3225199	EqualityExpression	15 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225200	PrimaryExpression	15		3224781	0					
ANR	3225201	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225202	Identifier	raw_info_t		3224781	0					
ANR	3225203	Identifier	raw_format		3224781	1					
ANR	3225204	CompoundStatement		76:47:2357:2357	3224781	1					
ANR	3225205	ExpressionStatement	con -> ncomp = 4	775:12:24339:24353	3224781	0	True				
ANR	3225206	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225207	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225208	Identifier	con		3224781	0					
ANR	3225209	Identifier	ncomp		3224781	1					
ANR	3225210	PrimaryExpression	4		3224781	1					
ANR	3225211	ExpressionStatement	con -> sf = 4	776:12:24367:24378	3224781	1	True				
ANR	3225212	AssignmentExpression	con -> sf = 4		3224781	0		=			
ANR	3225213	PtrMemberAccess	con -> sf		3224781	0					
ANR	3225214	Identifier	con		3224781	0					
ANR	3225215	Identifier	sf		3224781	1					
ANR	3225216	PrimaryExpression	4		3224781	1					
ANR	3225217	ElseStatement	else		3224781	0					
ANR	3225218	IfStatement	if ( 16 == raw_info_t -> raw_format )		3224781	0					
ANR	3225219	Condition	16 == raw_info_t -> raw_format	778:17:24407:24434	3224781	0	True				
ANR	3225220	EqualityExpression	16 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225221	PrimaryExpression	16		3224781	0					
ANR	3225222	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225223	Identifier	raw_info_t		3224781	0					
ANR	3225224	Identifier	raw_format		3224781	1					
ANR	3225225	CompoundStatement		80:47:2479:2479	3224781	1					
ANR	3225226	ExpressionStatement	con -> ncomp = 3	779:12:24460:24474	3224781	0	True				
ANR	3225227	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225228	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225229	Identifier	con		3224781	0					
ANR	3225230	Identifier	ncomp		3224781	1					
ANR	3225231	PrimaryExpression	3		3224781	1					
ANR	3225232	ExpressionStatement	con -> bpi = 5	780:12:24488:24500	3224781	1	True				
ANR	3225233	AssignmentExpression	con -> bpi = 5		3224781	0		=			
ANR	3225234	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225235	Identifier	con		3224781	0					
ANR	3225236	Identifier	bpi		3224781	1					
ANR	3225237	PrimaryExpression	5		3224781	1					
ANR	3225238	ElseStatement	else		3224781	0					
ANR	3225239	IfStatement	if ( 17 == raw_info_t -> raw_format )		3224781	0					
ANR	3225240	Condition	17 == raw_info_t -> raw_format	782:17:24529:24556	3224781	0	True				
ANR	3225241	EqualityExpression	17 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225242	PrimaryExpression	17		3224781	0					
ANR	3225243	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225244	Identifier	raw_info_t		3224781	0					
ANR	3225245	Identifier	raw_format		3224781	1					
ANR	3225246	CompoundStatement		84:47:2601:2601	3224781	1					
ANR	3225247	ExpressionStatement	con -> ncomp = 3	783:12:24582:24596	3224781	0	True				
ANR	3225248	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225249	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225250	Identifier	con		3224781	0					
ANR	3225251	Identifier	ncomp		3224781	1					
ANR	3225252	PrimaryExpression	3		3224781	1					
ANR	3225253	ExpressionStatement	con -> bpi = 6	784:12:24610:24622	3224781	1	True				
ANR	3225254	AssignmentExpression	con -> bpi = 6		3224781	0		=			
ANR	3225255	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225256	Identifier	con		3224781	0					
ANR	3225257	Identifier	bpi		3224781	1					
ANR	3225258	PrimaryExpression	6		3224781	1					
ANR	3225259	ElseStatement	else		3224781	0					
ANR	3225260	IfStatement	if ( 18 == raw_info_t -> raw_format )		3224781	0					
ANR	3225261	Condition	18 == raw_info_t -> raw_format	786:17:24651:24678	3224781	0	True				
ANR	3225262	EqualityExpression	18 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225263	PrimaryExpression	18		3224781	0					
ANR	3225264	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225265	Identifier	raw_info_t		3224781	0					
ANR	3225266	Identifier	raw_format		3224781	1					
ANR	3225267	CompoundStatement		88:47:2723:2723	3224781	1					
ANR	3225268	ExpressionStatement	con -> ncomp = 3	787:12:24707:24721	3224781	0	True				
ANR	3225269	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225270	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225271	Identifier	con		3224781	0					
ANR	3225272	Identifier	ncomp		3224781	1					
ANR	3225273	PrimaryExpression	3		3224781	1					
ANR	3225274	ExpressionStatement	con -> bpi = 10	788:12:24735:24748	3224781	1	True				
ANR	3225275	AssignmentExpression	con -> bpi = 10		3224781	0		=			
ANR	3225276	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225277	Identifier	con		3224781	0					
ANR	3225278	Identifier	bpi		3224781	1					
ANR	3225279	PrimaryExpression	10		3224781	1					
ANR	3225280	ElseStatement	else		3224781	0					
ANR	3225281	IfStatement	if ( 19 == raw_info_t -> raw_format )		3224781	0					
ANR	3225282	Condition	19 == raw_info_t -> raw_format	790:17:24777:24804	3224781	0	True				
ANR	3225283	EqualityExpression	19 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225284	PrimaryExpression	19		3224781	0					
ANR	3225285	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225286	Identifier	raw_info_t		3224781	0					
ANR	3225287	Identifier	raw_format		3224781	1					
ANR	3225288	CompoundStatement		92:47:2849:2849	3224781	1					
ANR	3225289	ExpressionStatement	con -> ncomp = 3	791:12:24821:24835	3224781	0	True				
ANR	3225290	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225291	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225292	Identifier	con		3224781	0					
ANR	3225293	Identifier	ncomp		3224781	1					
ANR	3225294	PrimaryExpression	3		3224781	1					
ANR	3225295	ExpressionStatement	con -> ycc_format = 1	792:12:24849:24868	3224781	1	True				
ANR	3225296	AssignmentExpression	con -> ycc_format = 1		3224781	0		=			
ANR	3225297	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225298	Identifier	con		3224781	0					
ANR	3225299	Identifier	ycc_format		3224781	1					
ANR	3225300	PrimaryExpression	1		3224781	1					
ANR	3225301	ElseStatement	else		3224781	0					
ANR	3225302	IfStatement	if ( 20 == raw_info_t -> raw_format )		3224781	0					
ANR	3225303	Condition	20 == raw_info_t -> raw_format	794:17:24897:24924	3224781	0	True				
ANR	3225304	EqualityExpression	20 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225305	PrimaryExpression	20		3224781	0					
ANR	3225306	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225307	Identifier	raw_info_t		3224781	0					
ANR	3225308	Identifier	raw_format		3224781	1					
ANR	3225309	CompoundStatement		96:47:2969:2969	3224781	1					
ANR	3225310	ExpressionStatement	con -> ncomp = 3	795:12:24941:24955	3224781	0	True				
ANR	3225311	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225312	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225313	Identifier	con		3224781	0					
ANR	3225314	Identifier	ncomp		3224781	1					
ANR	3225315	PrimaryExpression	3		3224781	1					
ANR	3225316	ExpressionStatement	con -> ycc_format = 2	796:12:24969:24988	3224781	1	True				
ANR	3225317	AssignmentExpression	con -> ycc_format = 2		3224781	0		=			
ANR	3225318	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225319	Identifier	con		3224781	0					
ANR	3225320	Identifier	ycc_format		3224781	1					
ANR	3225321	PrimaryExpression	2		3224781	1					
ANR	3225322	ElseStatement	else		3224781	0					
ANR	3225323	IfStatement	if ( 21 == raw_info_t -> raw_format )		3224781	0					
ANR	3225324	Condition	21 == raw_info_t -> raw_format	798:17:25017:25044	3224781	0	True				
ANR	3225325	EqualityExpression	21 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225326	PrimaryExpression	21		3224781	0					
ANR	3225327	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225328	Identifier	raw_info_t		3224781	0					
ANR	3225329	Identifier	raw_format		3224781	1					
ANR	3225330	CompoundStatement		100:47:3089:3089	3224781	1					
ANR	3225331	ExpressionStatement	con -> ncomp = 3	799:12:25061:25075	3224781	0	True				
ANR	3225332	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225333	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225334	Identifier	con		3224781	0					
ANR	3225335	Identifier	ncomp		3224781	1					
ANR	3225336	PrimaryExpression	3		3224781	1					
ANR	3225337	ExpressionStatement	con -> ycc_format = 3	800:12:25089:25108	3224781	1	True				
ANR	3225338	AssignmentExpression	con -> ycc_format = 3		3224781	0		=			
ANR	3225339	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225340	Identifier	con		3224781	0					
ANR	3225341	Identifier	ycc_format		3224781	1					
ANR	3225342	PrimaryExpression	3		3224781	1					
ANR	3225343	ElseStatement	else		3224781	0					
ANR	3225344	IfStatement	if ( 22 == raw_info_t -> raw_format )		3224781	0					
ANR	3225345	Condition	22 == raw_info_t -> raw_format	802:17:25137:25164	3224781	0	True				
ANR	3225346	EqualityExpression	22 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225347	PrimaryExpression	22		3224781	0					
ANR	3225348	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225349	Identifier	raw_info_t		3224781	0					
ANR	3225350	Identifier	raw_format		3224781	1					
ANR	3225351	CompoundStatement		104:47:3209:3209	3224781	1					
ANR	3225352	ExpressionStatement	con -> ncomp = 3	803:12:25181:25195	3224781	0	True				
ANR	3225353	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225354	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225355	Identifier	con		3224781	0					
ANR	3225356	Identifier	ncomp		3224781	1					
ANR	3225357	PrimaryExpression	3		3224781	1					
ANR	3225358	ExpressionStatement	con -> sf = 2	804:12:25209:25220	3224781	1	True				
ANR	3225359	AssignmentExpression	con -> sf = 2		3224781	0		=			
ANR	3225360	PtrMemberAccess	con -> sf		3224781	0					
ANR	3225361	Identifier	con		3224781	0					
ANR	3225362	Identifier	sf		3224781	1					
ANR	3225363	PrimaryExpression	2		3224781	1					
ANR	3225364	ExpressionStatement	con -> ycc_format = 3	805:12:25245:25264	3224781	2	True				
ANR	3225365	AssignmentExpression	con -> ycc_format = 3		3224781	0		=			
ANR	3225366	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225367	Identifier	con		3224781	0					
ANR	3225368	Identifier	ycc_format		3224781	1					
ANR	3225369	PrimaryExpression	3		3224781	1					
ANR	3225370	ElseStatement	else		3224781	0					
ANR	3225371	IfStatement	if ( 23 == raw_info_t -> raw_format )		3224781	0					
ANR	3225372	Condition	23 == raw_info_t -> raw_format	807:17:25293:25320	3224781	0	True				
ANR	3225373	EqualityExpression	23 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225374	PrimaryExpression	23		3224781	0					
ANR	3225375	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225376	Identifier	raw_info_t		3224781	0					
ANR	3225377	Identifier	raw_format		3224781	1					
ANR	3225378	CompoundStatement		109:47:3365:3365	3224781	1					
ANR	3225379	ExpressionStatement	con -> ncomp = 4	808:12:25337:25351	3224781	0	True				
ANR	3225380	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225381	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225382	Identifier	con		3224781	0					
ANR	3225383	Identifier	ncomp		3224781	1					
ANR	3225384	PrimaryExpression	4		3224781	1					
ANR	3225385	ExpressionStatement	con -> ycc_format = 1	809:12:25365:25384	3224781	1	True				
ANR	3225386	AssignmentExpression	con -> ycc_format = 1		3224781	0		=			
ANR	3225387	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225388	Identifier	con		3224781	0					
ANR	3225389	Identifier	ycc_format		3224781	1					
ANR	3225390	PrimaryExpression	1		3224781	1					
ANR	3225391	ElseStatement	else		3224781	0					
ANR	3225392	IfStatement	if ( 24 == raw_info_t -> raw_format )		3224781	0					
ANR	3225393	Condition	24 == raw_info_t -> raw_format	811:17:25413:25440	3224781	0	True				
ANR	3225394	EqualityExpression	24 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225395	PrimaryExpression	24		3224781	0					
ANR	3225396	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225397	Identifier	raw_info_t		3224781	0					
ANR	3225398	Identifier	raw_format		3224781	1					
ANR	3225399	CompoundStatement		113:47:3485:3485	3224781	1					
ANR	3225400	ExpressionStatement	con -> ncomp = 4	812:12:25457:25471	3224781	0	True				
ANR	3225401	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225402	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225403	Identifier	con		3224781	0					
ANR	3225404	Identifier	ncomp		3224781	1					
ANR	3225405	PrimaryExpression	4		3224781	1					
ANR	3225406	ExpressionStatement	con -> ycc_format = 2	813:12:25485:25504	3224781	1	True				
ANR	3225407	AssignmentExpression	con -> ycc_format = 2		3224781	0		=			
ANR	3225408	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225409	Identifier	con		3224781	0					
ANR	3225410	Identifier	ycc_format		3224781	1					
ANR	3225411	PrimaryExpression	2		3224781	1					
ANR	3225412	ElseStatement	else		3224781	0					
ANR	3225413	IfStatement	if ( 25 == raw_info_t -> raw_format )		3224781	0					
ANR	3225414	Condition	25 == raw_info_t -> raw_format	815:17:25533:25560	3224781	0	True				
ANR	3225415	EqualityExpression	25 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225416	PrimaryExpression	25		3224781	0					
ANR	3225417	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225418	Identifier	raw_info_t		3224781	0					
ANR	3225419	Identifier	raw_format		3224781	1					
ANR	3225420	CompoundStatement		117:47:3605:3605	3224781	1					
ANR	3225421	ExpressionStatement	con -> ncomp = 4	816:12:25577:25591	3224781	0	True				
ANR	3225422	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225423	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225424	Identifier	con		3224781	0					
ANR	3225425	Identifier	ncomp		3224781	1					
ANR	3225426	PrimaryExpression	4		3224781	1					
ANR	3225427	ExpressionStatement	con -> ycc_format = 3	817:12:25605:25624	3224781	1	True				
ANR	3225428	AssignmentExpression	con -> ycc_format = 3		3224781	0		=			
ANR	3225429	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225430	Identifier	con		3224781	0					
ANR	3225431	Identifier	ycc_format		3224781	1					
ANR	3225432	PrimaryExpression	3		3224781	1					
ANR	3225433	ElseStatement	else		3224781	0					
ANR	3225434	IfStatement	if ( 26 == raw_info_t -> raw_format )		3224781	0					
ANR	3225435	Condition	26 == raw_info_t -> raw_format	819:17:25653:25680	3224781	0	True				
ANR	3225436	EqualityExpression	26 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225437	PrimaryExpression	26		3224781	0					
ANR	3225438	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225439	Identifier	raw_info_t		3224781	0					
ANR	3225440	Identifier	raw_format		3224781	1					
ANR	3225441	CompoundStatement		121:47:3725:3725	3224781	1					
ANR	3225442	ExpressionStatement	con -> ncomp = 4	820:12:25697:25711	3224781	0	True				
ANR	3225443	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225444	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225445	Identifier	con		3224781	0					
ANR	3225446	Identifier	ncomp		3224781	1					
ANR	3225447	PrimaryExpression	4		3224781	1					
ANR	3225448	ExpressionStatement	con -> sf = 2	821:12:25725:25736	3224781	1	True				
ANR	3225449	AssignmentExpression	con -> sf = 2		3224781	0		=			
ANR	3225450	PtrMemberAccess	con -> sf		3224781	0					
ANR	3225451	Identifier	con		3224781	0					
ANR	3225452	Identifier	sf		3224781	1					
ANR	3225453	PrimaryExpression	2		3224781	1					
ANR	3225454	ExpressionStatement	con -> ycc_format = 3	822:12:25761:25780	3224781	2	True				
ANR	3225455	AssignmentExpression	con -> ycc_format = 3		3224781	0		=			
ANR	3225456	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225457	Identifier	con		3224781	0					
ANR	3225458	Identifier	ycc_format		3224781	1					
ANR	3225459	PrimaryExpression	3		3224781	1					
ANR	3225460	ElseStatement	else		3224781	0					
ANR	3225461	IfStatement	if ( 27 == raw_info_t -> raw_format )		3224781	0					
ANR	3225462	Condition	27 == raw_info_t -> raw_format	824:17:25809:25836	3224781	0	True				
ANR	3225463	EqualityExpression	27 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225464	PrimaryExpression	27		3224781	0					
ANR	3225465	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225466	Identifier	raw_info_t		3224781	0					
ANR	3225467	Identifier	raw_format		3224781	1					
ANR	3225468	CompoundStatement		126:47:3881:3881	3224781	1					
ANR	3225469	ExpressionStatement	con -> ncomp = 4	825:12:25853:25867	3224781	0	True				
ANR	3225470	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225471	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225472	Identifier	con		3224781	0					
ANR	3225473	Identifier	ncomp		3224781	1					
ANR	3225474	PrimaryExpression	4		3224781	1					
ANR	3225475	ElseStatement	else		3224781	0					
ANR	3225476	IfStatement	if ( 28 == raw_info_t -> raw_format )		3224781	0					
ANR	3225477	Condition	28 == raw_info_t -> raw_format	827:17:25896:25923	3224781	0	True				
ANR	3225478	EqualityExpression	28 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225479	PrimaryExpression	28		3224781	0					
ANR	3225480	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225481	Identifier	raw_info_t		3224781	0					
ANR	3225482	Identifier	raw_format		3224781	1					
ANR	3225483	CompoundStatement		129:47:3968:3968	3224781	1					
ANR	3225484	ExpressionStatement	con -> ncomp = 5	828:12:25940:25954	3224781	0	True				
ANR	3225485	AssignmentExpression	con -> ncomp = 5		3224781	0		=			
ANR	3225486	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225487	Identifier	con		3224781	0					
ANR	3225488	Identifier	ncomp		3224781	1					
ANR	3225489	PrimaryExpression	5		3224781	1					
ANR	3225490	ElseStatement	else		3224781	0					
ANR	3225491	IfStatement	if ( 29 == raw_info_t -> raw_format )		3224781	0					
ANR	3225492	Condition	29 == raw_info_t -> raw_format	830:16:25982:26009	3224781	0	True				
ANR	3225493	EqualityExpression	29 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225494	PrimaryExpression	29		3224781	0					
ANR	3225495	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225496	Identifier	raw_info_t		3224781	0					
ANR	3225497	Identifier	raw_format		3224781	1					
ANR	3225498	CompoundStatement		132:46:4054:4054	3224781	1					
ANR	3225499	ExpressionStatement	con -> ncomp = 3	831:12:26040:26054	3224781	0	True				
ANR	3225500	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225501	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225502	Identifier	con		3224781	0					
ANR	3225503	Identifier	ncomp		3224781	1					
ANR	3225504	PrimaryExpression	3		3224781	1					
ANR	3225505	ExpressionStatement	con -> bpi = 8	832:12:26068:26080	3224781	1	True				
ANR	3225506	AssignmentExpression	con -> bpi = 8		3224781	0		=			
ANR	3225507	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225508	Identifier	con		3224781	0					
ANR	3225509	Identifier	bpi		3224781	1					
ANR	3225510	PrimaryExpression	8		3224781	1					
ANR	3225511	ElseStatement	else		3224781	0					
ANR	3225512	IfStatement	if ( 30 == raw_info_t -> raw_format )		3224781	0					
ANR	3225513	Condition	30 == raw_info_t -> raw_format	834:16:26120:26147	3224781	0	True				
ANR	3225514	EqualityExpression	30 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225515	PrimaryExpression	30		3224781	0					
ANR	3225516	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225517	Identifier	raw_info_t		3224781	0					
ANR	3225518	Identifier	raw_format		3224781	1					
ANR	3225519	CompoundStatement		136:46:4192:4192	3224781	1					
ANR	3225520	ExpressionStatement	con -> ncomp = 3	835:12:26178:26192	3224781	0	True				
ANR	3225521	AssignmentExpression	con -> ncomp = 3		3224781	0		=			
ANR	3225522	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225523	Identifier	con		3224781	0					
ANR	3225524	Identifier	ncomp		3224781	1					
ANR	3225525	PrimaryExpression	3		3224781	1					
ANR	3225526	ExpressionStatement	con -> bpi = 8	836:12:26206:26218	3224781	1	True				
ANR	3225527	AssignmentExpression	con -> bpi = 8		3224781	0		=			
ANR	3225528	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225529	Identifier	con		3224781	0					
ANR	3225530	Identifier	bpi		3224781	1					
ANR	3225531	PrimaryExpression	8		3224781	1					
ANR	3225532	ExpressionStatement	con -> padBytes = 1	837:12:26232:26249	3224781	2	True				
ANR	3225533	AssignmentExpression	con -> padBytes = 1		3224781	0		=			
ANR	3225534	PtrMemberAccess	con -> padBytes		3224781	0					
ANR	3225535	Identifier	con		3224781	0					
ANR	3225536	Identifier	padBytes		3224781	1					
ANR	3225537	PrimaryExpression	1		3224781	1					
ANR	3225538	ExpressionStatement	* padded_format = 1	838:12:26263:26281	3224781	3	True				
ANR	3225539	AssignmentExpression	* padded_format = 1		3224781	0		=			
ANR	3225540	UnaryOperationExpression	* padded_format		3224781	0					
ANR	3225541	UnaryOperator	*		3224781	0					
ANR	3225542	Identifier	padded_format		3224781	1					
ANR	3225543	PrimaryExpression	1		3224781	1					
ANR	3225544	ElseStatement	else		3224781	0					
ANR	3225545	IfStatement	if ( 31 == raw_info_t -> raw_format )		3224781	0					
ANR	3225546	Condition	31 == raw_info_t -> raw_format	840:16:26309:26336	3224781	0	True				
ANR	3225547	EqualityExpression	31 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225548	PrimaryExpression	31		3224781	0					
ANR	3225549	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225550	Identifier	raw_info_t		3224781	0					
ANR	3225551	Identifier	raw_format		3224781	1					
ANR	3225552	CompoundStatement		142:46:4381:4381	3224781	1					
ANR	3225553	ExpressionStatement	con -> ncomp = 4	841:12:26368:26382	3224781	0	True				
ANR	3225554	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225555	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225556	Identifier	con		3224781	0					
ANR	3225557	Identifier	ncomp		3224781	1					
ANR	3225558	PrimaryExpression	4		3224781	1					
ANR	3225559	ExpressionStatement	con -> bpi = 8	842:12:26396:26408	3224781	1	True				
ANR	3225560	AssignmentExpression	con -> bpi = 8		3224781	0		=			
ANR	3225561	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225562	Identifier	con		3224781	0					
ANR	3225563	Identifier	bpi		3224781	1					
ANR	3225564	PrimaryExpression	8		3224781	1					
ANR	3225565	ElseStatement	else		3224781	0					
ANR	3225566	IfStatement	if ( 32 == raw_info_t -> raw_format )		3224781	0					
ANR	3225567	Condition	32 == raw_info_t -> raw_format	844:16:26448:26475	3224781	0	True				
ANR	3225568	EqualityExpression	32 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225569	PrimaryExpression	32		3224781	0					
ANR	3225570	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225571	Identifier	raw_info_t		3224781	0					
ANR	3225572	Identifier	raw_format		3224781	1					
ANR	3225573	CompoundStatement		146:46:4520:4520	3224781	1					
ANR	3225574	ExpressionStatement	con -> ncomp = 4	845:12:26508:26522	3224781	0	True				
ANR	3225575	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225576	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225577	Identifier	con		3224781	0					
ANR	3225578	Identifier	ncomp		3224781	1					
ANR	3225579	PrimaryExpression	4		3224781	1					
ANR	3225580	ExpressionStatement	con -> bpi = 8	846:12:26536:26548	3224781	1	True				
ANR	3225581	AssignmentExpression	con -> bpi = 8		3224781	0		=			
ANR	3225582	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225583	Identifier	con		3224781	0					
ANR	3225584	Identifier	bpi		3224781	1					
ANR	3225585	PrimaryExpression	8		3224781	1					
ANR	3225586	ElseStatement	else		3224781	0					
ANR	3225587	IfStatement	if ( 33 == raw_info_t -> raw_format )		3224781	0					
ANR	3225588	Condition	33 == raw_info_t -> raw_format	848:16:26588:26615	3224781	0	True				
ANR	3225589	EqualityExpression	33 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225590	PrimaryExpression	33		3224781	0					
ANR	3225591	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225592	Identifier	raw_info_t		3224781	0					
ANR	3225593	Identifier	raw_format		3224781	1					
ANR	3225594	CompoundStatement		150:46:4660:4660	3224781	1					
ANR	3225595	ExpressionStatement	con -> ncomp = 4	849:12:26648:26662	3224781	0	True				
ANR	3225596	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225597	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225598	Identifier	con		3224781	0					
ANR	3225599	Identifier	ncomp		3224781	1					
ANR	3225600	PrimaryExpression	4		3224781	1					
ANR	3225601	ExpressionStatement	con -> bpi = 16	850:12:26676:26689	3224781	1	True				
ANR	3225602	AssignmentExpression	con -> bpi = 16		3224781	0		=			
ANR	3225603	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225604	Identifier	con		3224781	0					
ANR	3225605	Identifier	bpi		3224781	1					
ANR	3225606	PrimaryExpression	16		3224781	1					
ANR	3225607	ElseStatement	else		3224781	0					
ANR	3225608	IfStatement	if ( 34 == raw_info_t -> raw_format )		3224781	0					
ANR	3225609	Condition	34 == raw_info_t -> raw_format	852:16:26729:26756	3224781	0	True				
ANR	3225610	EqualityExpression	34 == raw_info_t -> raw_format		3224781	0		==			
ANR	3225611	PrimaryExpression	34		3224781	0					
ANR	3225612	PtrMemberAccess	raw_info_t -> raw_format		3224781	1					
ANR	3225613	Identifier	raw_info_t		3224781	0					
ANR	3225614	Identifier	raw_format		3224781	1					
ANR	3225615	CompoundStatement		154:46:4801:4801	3224781	1					
ANR	3225616	ExpressionStatement	con -> ncomp = 4	853:12:26795:26809	3224781	0	True				
ANR	3225617	AssignmentExpression	con -> ncomp = 4		3224781	0		=			
ANR	3225618	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225619	Identifier	con		3224781	0					
ANR	3225620	Identifier	ncomp		3224781	1					
ANR	3225621	PrimaryExpression	4		3224781	1					
ANR	3225622	ExpressionStatement	con -> bpi = 32	854:12:26823:26836	3224781	1	True				
ANR	3225623	AssignmentExpression	con -> bpi = 32		3224781	0		=			
ANR	3225624	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225625	Identifier	con		3224781	0					
ANR	3225626	Identifier	bpi		3224781	1					
ANR	3225627	PrimaryExpression	32		3224781	1					
ANR	3225628	ExpressionStatement	con -> sf = 3	855:12:26862:26873	3224781	2	True				
ANR	3225629	AssignmentExpression	con -> sf = 3		3224781	0		=			
ANR	3225630	PtrMemberAccess	con -> sf		3224781	0					
ANR	3225631	Identifier	con		3224781	0					
ANR	3225632	Identifier	sf		3224781	1					
ANR	3225633	PrimaryExpression	3		3224781	1					
ANR	3225634	ExpressionStatement	con -> photometric = 2	856:12:26887:26907	3224781	3	True				
ANR	3225635	AssignmentExpression	con -> photometric = 2		3224781	0		=			
ANR	3225636	PtrMemberAccess	con -> photometric		3224781	0					
ANR	3225637	Identifier	con		3224781	0					
ANR	3225638	Identifier	photometric		3224781	1					
ANR	3225639	PrimaryExpression	2		3224781	1					
ANR	3225640	IfStatement	if ( con -> padBytes == 0 && * padded_format )		3224781	24					
ANR	3225641	Condition	con -> padBytes == 0 && * padded_format	860:7:26945:26980	3224781	0	True				
ANR	3225642	AndExpression	con -> padBytes == 0 && * padded_format		3224781	0		&&			
ANR	3225643	EqualityExpression	con -> padBytes == 0		3224781	0		==			
ANR	3225644	PtrMemberAccess	con -> padBytes		3224781	0					
ANR	3225645	Identifier	con		3224781	0					
ANR	3225646	Identifier	padBytes		3224781	1					
ANR	3225647	PrimaryExpression	0		3224781	1					
ANR	3225648	UnaryOperationExpression	* padded_format		3224781	1					
ANR	3225649	UnaryOperator	*		3224781	0					
ANR	3225650	Identifier	padded_format		3224781	1					
ANR	3225651	CompoundStatement		163:4:5029:5029	3224781	1					
ANR	3225652	ExpressionStatement	* padded_format = 0	862:8:26997:27015	3224781	0	True				
ANR	3225653	AssignmentExpression	* padded_format = 0		3224781	0		=			
ANR	3225654	UnaryOperationExpression	* padded_format		3224781	0					
ANR	3225655	UnaryOperator	*		3224781	0					
ANR	3225656	Identifier	padded_format		3224781	1					
ANR	3225657	PrimaryExpression	0		3224781	1					
ANR	3225658	ExpressionStatement	"fprintf ( stderr , ""Ignoring -p option from command line \\n"" )"	863:8:27025:27083	3224781	1	True				
ANR	3225659	CallExpression	"fprintf ( stderr , ""Ignoring -p option from command line \\n"" )"		3224781	0					
ANR	3225660	Callee	fprintf		3224781	0					
ANR	3225661	Identifier	fprintf		3224781	0					
ANR	3225662	ArgumentList	stderr		3224781	1					
ANR	3225663	Argument	stderr		3224781	0					
ANR	3225664	Identifier	stderr		3224781	0					
ANR	3225665	Argument	"""Ignoring -p option from command line \\n"""		3224781	1					
ANR	3225666	PrimaryExpression	"""Ignoring -p option from command line \\n"""		3224781	0					
ANR	3225667	IdentifierDeclStatement	size_t strip_bytes ;	866:4:27096:27114	3224781	25	True				
ANR	3225668	IdentifierDecl	strip_bytes		3224781	0					
ANR	3225669	IdentifierDeclType	size_t		3224781	0					
ANR	3225670	Identifier	strip_bytes		3224781	1					
ANR	3225671	IfStatement	if ( con -> ycc_format == 1 )		3224781	26					
ANR	3225672	Condition	con -> ycc_format == 1	867:8:27124:27143	3224781	0	True				
ANR	3225673	EqualityExpression	con -> ycc_format == 1		3224781	0		==			
ANR	3225674	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225675	Identifier	con		3224781	0					
ANR	3225676	Identifier	ycc_format		3224781	1					
ANR	3225677	PrimaryExpression	1		3224781	1					
ANR	3225678	ExpressionStatement	strip_bytes = 8 * ( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2	868:8:27154:27249	3224781	1	True				
ANR	3225679	AssignmentExpression	strip_bytes = 8 * ( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	0		=			
ANR	3225680	Identifier	strip_bytes		3224781	0					
ANR	3225681	MultiplicativeExpression	8 * ( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		*			
ANR	3225682	PrimaryExpression	8		3224781	0					
ANR	3225683	MultiplicativeExpression	( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		*			
ANR	3225684	AdditiveExpression	( 4 * con -> ncomp - 6 ) + con -> padBytes		3224781	0		+			
ANR	3225685	AdditiveExpression	4 * con -> ncomp - 6		3224781	0		-			
ANR	3225686	MultiplicativeExpression	4 * con -> ncomp		3224781	0		*			
ANR	3225687	PrimaryExpression	4		3224781	0					
ANR	3225688	PtrMemberAccess	con -> ncomp		3224781	1					
ANR	3225689	Identifier	con		3224781	0					
ANR	3225690	Identifier	ncomp		3224781	1					
ANR	3225691	PrimaryExpression	6		3224781	1					
ANR	3225692	PtrMemberAccess	con -> padBytes		3224781	1					
ANR	3225693	Identifier	con		3224781	0					
ANR	3225694	Identifier	padBytes		3224781	1					
ANR	3225695	MultiplicativeExpression	( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		*			
ANR	3225696	MultiplicativeExpression	( con -> bpi + 7 ) / 8		3224781	0		/			
ANR	3225697	AdditiveExpression	con -> bpi + 7		3224781	0		+			
ANR	3225698	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225699	Identifier	con		3224781	0					
ANR	3225700	Identifier	bpi		3224781	1					
ANR	3225701	PrimaryExpression	7		3224781	1					
ANR	3225702	PrimaryExpression	8		3224781	1					
ANR	3225703	MultiplicativeExpression	( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		/			
ANR	3225704	BitAndExpression	( con -> wid + 15 ) & ~15		3224781	0		&			
ANR	3225705	AdditiveExpression	con -> wid + 15		3224781	0		+			
ANR	3225706	PtrMemberAccess	con -> wid		3224781	0					
ANR	3225707	Identifier	con		3224781	0					
ANR	3225708	Identifier	wid		3224781	1					
ANR	3225709	PrimaryExpression	15		3224781	1					
ANR	3225710	Identifier	~15		3224781	1					
ANR	3225711	PrimaryExpression	2		3224781	1					
ANR	3225712	ElseStatement	else		3224781	0					
ANR	3225713	IfStatement	if ( con -> ycc_format == 2 )		3224781	0					
ANR	3225714	Condition	con -> ycc_format == 2	869:13:27264:27283	3224781	0	True				
ANR	3225715	EqualityExpression	con -> ycc_format == 2		3224781	0		==			
ANR	3225716	PtrMemberAccess	con -> ycc_format		3224781	0					
ANR	3225717	Identifier	con		3224781	0					
ANR	3225718	Identifier	ycc_format		3224781	1					
ANR	3225719	PrimaryExpression	2		3224781	1					
ANR	3225720	ExpressionStatement	strip_bytes = 16 * ( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2	870:8:27294:27390	3224781	1	True				
ANR	3225721	AssignmentExpression	strip_bytes = 16 * ( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	0		=			
ANR	3225722	Identifier	strip_bytes		3224781	0					
ANR	3225723	MultiplicativeExpression	16 * ( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		*			
ANR	3225724	PrimaryExpression	16		3224781	0					
ANR	3225725	MultiplicativeExpression	( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		*			
ANR	3225726	AdditiveExpression	( 2 * con -> ncomp - 2 ) + con -> padBytes		3224781	0		+			
ANR	3225727	AdditiveExpression	2 * con -> ncomp - 2		3224781	0		-			
ANR	3225728	MultiplicativeExpression	2 * con -> ncomp		3224781	0		*			
ANR	3225729	PrimaryExpression	2		3224781	0					
ANR	3225730	PtrMemberAccess	con -> ncomp		3224781	1					
ANR	3225731	Identifier	con		3224781	0					
ANR	3225732	Identifier	ncomp		3224781	1					
ANR	3225733	PrimaryExpression	2		3224781	1					
ANR	3225734	PtrMemberAccess	con -> padBytes		3224781	1					
ANR	3225735	Identifier	con		3224781	0					
ANR	3225736	Identifier	padBytes		3224781	1					
ANR	3225737	MultiplicativeExpression	( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		*			
ANR	3225738	MultiplicativeExpression	( con -> bpi + 7 ) / 8		3224781	0		/			
ANR	3225739	AdditiveExpression	con -> bpi + 7		3224781	0		+			
ANR	3225740	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225741	Identifier	con		3224781	0					
ANR	3225742	Identifier	bpi		3224781	1					
ANR	3225743	PrimaryExpression	7		3224781	1					
ANR	3225744	PrimaryExpression	8		3224781	1					
ANR	3225745	MultiplicativeExpression	( ( con -> wid + 15 ) & ~15 ) / 2		3224781	1		/			
ANR	3225746	BitAndExpression	( con -> wid + 15 ) & ~15		3224781	0		&			
ANR	3225747	AdditiveExpression	con -> wid + 15		3224781	0		+			
ANR	3225748	PtrMemberAccess	con -> wid		3224781	0					
ANR	3225749	Identifier	con		3224781	0					
ANR	3225750	Identifier	wid		3224781	1					
ANR	3225751	PrimaryExpression	15		3224781	1					
ANR	3225752	Identifier	~15		3224781	1					
ANR	3225753	PrimaryExpression	2		3224781	1					
ANR	3225754	ElseStatement	else		3224781	0					
ANR	3225755	ExpressionStatement	strip_bytes = 16 * ( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )	872:8:27409:27497	3224781	0	True				
ANR	3225756	AssignmentExpression	strip_bytes = 16 * ( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		3224781	0		=			
ANR	3225757	Identifier	strip_bytes		3224781	0					
ANR	3225758	MultiplicativeExpression	16 * ( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		3224781	1		*			
ANR	3225759	PrimaryExpression	16		3224781	0					
ANR	3225760	MultiplicativeExpression	( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		3224781	1		*			
ANR	3225761	AdditiveExpression	con -> ncomp + con -> padBytes		3224781	0		+			
ANR	3225762	PtrMemberAccess	con -> ncomp		3224781	0					
ANR	3225763	Identifier	con		3224781	0					
ANR	3225764	Identifier	ncomp		3224781	1					
ANR	3225765	PtrMemberAccess	con -> padBytes		3224781	1					
ANR	3225766	Identifier	con		3224781	0					
ANR	3225767	Identifier	padBytes		3224781	1					
ANR	3225768	MultiplicativeExpression	( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		3224781	1		*			
ANR	3225769	MultiplicativeExpression	( con -> bpi + 7 ) / 8		3224781	0		/			
ANR	3225770	AdditiveExpression	con -> bpi + 7		3224781	0		+			
ANR	3225771	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225772	Identifier	con		3224781	0					
ANR	3225773	Identifier	bpi		3224781	1					
ANR	3225774	PrimaryExpression	7		3224781	1					
ANR	3225775	PrimaryExpression	8		3224781	1					
ANR	3225776	BitAndExpression	( con -> wid + 15 ) & ~15		3224781	1		&			
ANR	3225777	AdditiveExpression	con -> wid + 15		3224781	0		+			
ANR	3225778	PtrMemberAccess	con -> wid		3224781	0					
ANR	3225779	Identifier	con		3224781	0					
ANR	3225780	Identifier	wid		3224781	1					
ANR	3225781	PrimaryExpression	15		3224781	1					
ANR	3225782	Identifier	~15		3224781	1					
ANR	3225783	IfStatement	if ( con -> bpi == 1 )		3224781	27					
ANR	3225784	Condition	con -> bpi == 1	874:8:27508:27520	3224781	0	True				
ANR	3225785	EqualityExpression	con -> bpi == 1		3224781	0		==			
ANR	3225786	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225787	Identifier	con		3224781	0					
ANR	3225788	Identifier	bpi		3224781	1					
ANR	3225789	PrimaryExpression	1		3224781	1					
ANR	3225790	ExpressionStatement	strip_bytes >>= 3	875:8:27531:27548	3224781	1	True				
ANR	3225791	AssignmentExpression	strip_bytes >>= 3		3224781	0		>>=			
ANR	3225792	Identifier	strip_bytes		3224781	0					
ANR	3225793	PrimaryExpression	3		3224781	1					
ANR	3225794	ElseStatement	else		3224781	0					
ANR	3225795	IfStatement	if ( ( con -> bpi == 5 ) || ( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag ) )		3224781	0					
ANR	3225796	Condition	( con -> bpi == 5 ) || ( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag )	876:13:27563:27639	3224781	0	True				
ANR	3225797	OrExpression	( con -> bpi == 5 ) || ( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag )		3224781	0		||			
ANR	3225798	EqualityExpression	con -> bpi == 5		3224781	0		==			
ANR	3225799	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225800	Identifier	con		3224781	0					
ANR	3225801	Identifier	bpi		3224781	1					
ANR	3225802	PrimaryExpression	5		3224781	1					
ANR	3225803	OrExpression	( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag )		3224781	1		||			
ANR	3225804	EqualityExpression	con -> bpi == 6		3224781	0		==			
ANR	3225805	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225806	Identifier	con		3224781	0					
ANR	3225807	Identifier	bpi		3224781	1					
ANR	3225808	PrimaryExpression	6		3224781	1					
ANR	3225809	AndExpression	con -> bpi == 10 && ! con -> ycc_bd10_flag		3224781	1		&&			
ANR	3225810	EqualityExpression	con -> bpi == 10		3224781	0		==			
ANR	3225811	PtrMemberAccess	con -> bpi		3224781	0					
ANR	3225812	Identifier	con		3224781	0					
ANR	3225813	Identifier	bpi		3224781	1					
ANR	3225814	PrimaryExpression	10		3224781	1					
ANR	3225815	UnaryOperationExpression	! con -> ycc_bd10_flag		3224781	1					
ANR	3225816	UnaryOperator	!		3224781	0					
ANR	3225817	PtrMemberAccess	con -> ycc_bd10_flag		3224781	1					
ANR	3225818	Identifier	con		3224781	0					
ANR	3225819	Identifier	ycc_bd10_flag		3224781	1					
ANR	3225820	ExpressionStatement	strip_bytes = ( strip_bytes << 1 ) / 3	877:8:27650:27686	3224781	1	True				
ANR	3225821	AssignmentExpression	strip_bytes = ( strip_bytes << 1 ) / 3		3224781	0		=			
ANR	3225822	Identifier	strip_bytes		3224781	0					
ANR	3225823	MultiplicativeExpression	( strip_bytes << 1 ) / 3		3224781	1		/			
ANR	3225824	ShiftExpression	strip_bytes << 1		3224781	0		<<			
ANR	3225825	Identifier	strip_bytes		3224781	0					
ANR	3225826	PrimaryExpression	1		3224781	1					
ANR	3225827	PrimaryExpression	3		3224781	1					
ANR	3225828	ExpressionStatement	"con -> buf = calloc ( strip_bytes , 1 )"	879:4:27715:27748	3224781	28	True				
ANR	3225829	AssignmentExpression	"con -> buf = calloc ( strip_bytes , 1 )"		3224781	0		=			
ANR	3225830	PtrMemberAccess	con -> buf		3224781	0					
ANR	3225831	Identifier	con		3224781	0					
ANR	3225832	Identifier	buf		3224781	1					
ANR	3225833	CallExpression	"calloc ( strip_bytes , 1 )"		3224781	1					
ANR	3225834	Callee	calloc		3224781	0					
ANR	3225835	Identifier	calloc		3224781	0					
ANR	3225836	ArgumentList	strip_bytes		3224781	1					
ANR	3225837	Argument	strip_bytes		3224781	0					
ANR	3225838	Identifier	strip_bytes		3224781	0					
ANR	3225839	Argument	1		3224781	1					
ANR	3225840	PrimaryExpression	1		3224781	0					
ANR	3225841	IfStatement	if ( con -> buf == 0 )		3224781	29					
ANR	3225842	Condition	con -> buf == 0	880:8:27758:27768	3224781	0	True				
ANR	3225843	EqualityExpression	con -> buf == 0		3224781	0		==			
ANR	3225844	PtrMemberAccess	con -> buf		3224781	0					
ANR	3225845	Identifier	con		3224781	0					
ANR	3225846	Identifier	buf		3224781	1					
ANR	3225847	PrimaryExpression	0		3224781	1					
ANR	3225848	ExpressionStatement	"error ( ""cannot allocate memory"" )"	881:8:27779:27810	3224781	1	True				
ANR	3225849	CallExpression	"error ( ""cannot allocate memory"" )"		3224781	0					
ANR	3225850	Callee	error		3224781	0					
ANR	3225851	Identifier	error		3224781	0					
ANR	3225852	ArgumentList	"""cannot allocate memory"""		3224781	1					
ANR	3225853	Argument	"""cannot allocate memory"""		3224781	0					
ANR	3225854	PrimaryExpression	"""cannot allocate memory"""		3224781	0					
ANR	3225855	ReturnStatement	return con ;	883:4:27817:27827	3224781	30	True				
ANR	3225856	Identifier	con		3224781	0					
ANR	3225857	ReturnType	void *		3224781	1					
ANR	3225858	Identifier	open_input_file		3224781	2					
ANR	3225859	ParameterList	"const char * name , const raw_info * raw_info_t , int * alpha_mode , int * padded_format"		3224781	3					
ANR	3225860	Parameter	const char * name	698:22:21874:21889	3224781	0	True				
ANR	3225861	ParameterType	const char *		3224781	0					
ANR	3225862	Identifier	name		3224781	1					
ANR	3225863	Parameter	const raw_info * raw_info_t	698:40:21892:21917	3224781	1	True				
ANR	3225864	ParameterType	const raw_info *		3224781	0					
ANR	3225865	Identifier	raw_info_t		3224781	1					
ANR	3225866	Parameter	int * alpha_mode	698:68:21920:21934	3224781	2	True				
ANR	3225867	ParameterType	int *		3224781	0					
ANR	3225868	Identifier	alpha_mode		3224781	1					
ANR	3225869	Parameter	int * padded_format	698:85:21937:21954	3224781	3	True				
ANR	3225870	ParameterType	int *		3224781	0					
ANR	3225871	Identifier	padded_format		3224781	1					
ANR	3225872	CFGEntryNode	ENTRY		3224781		True				
ANR	3225873	CFGExitNode	EXIT		3224781		True				
ANR	3225874	Symbol	con		3224781						
ANR	3225875	Symbol	con -> ncomp		3224781						
ANR	3225876	Symbol	get_uint8		3224781						
ANR	3225877	Symbol	raw_info_t -> raw_bpc		3224781						
ANR	3225878	Symbol	strip_bytes		3224781						
ANR	3225879	Symbol	calloc		3224781						
ANR	3225880	Symbol	raw_info_t -> raw_height		3224781						
ANR	3225881	Symbol	con -> swap		3224781						
ANR	3225882	Symbol	con -> ycc_bd10_flag		3224781						
ANR	3225883	Symbol	* con		3224781						
ANR	3225884	Symbol	con -> bpi		3224781						
ANR	3225885	Symbol	alpha_mode		3224781						
ANR	3225886	Symbol	con -> nlines		3224781						
ANR	3225887	Symbol	raw_info_t -> is_raw		3224781						
ANR	3225888	Symbol	con -> padBytes		3224781						
ANR	3225889	Symbol	con -> photometric		3224781						
ANR	3225890	Symbol	con -> nstrips		3224781						
ANR	3225891	Symbol	con -> wid		3224781						
ANR	3225892	Symbol	malloc		3224781						
ANR	3225893	Symbol	fopen		3224781						
ANR	3225894	Symbol	con -> file		3224781						
ANR	3225895	Symbol	~15		3224781						
ANR	3225896	Symbol	con -> hei		3224781						
ANR	3225897	Symbol	con -> my		3224781						
ANR	3225898	Symbol	con -> offoff		3224781						
ANR	3225899	Symbol	raw_info_t -> raw_format		3224781						
ANR	3225900	Symbol	con -> ycc_format		3224781						
ANR	3225901	Symbol	padded_format		3224781						
ANR	3225902	Symbol	raw_info_t -> raw_width		3224781						
ANR	3225903	Symbol	stderr		3224781						
ANR	3225904	Symbol	con -> name		3224781						
ANR	3225905	Symbol	con -> strip		3224781						
ANR	3225906	Symbol	raw_info_t		3224781						
ANR	3225907	Symbol	con -> format		3224781						
ANR	3225908	Symbol	* raw_info_t		3224781						
ANR	3225909	Symbol	con -> line		3224781						
ANR	3225910	Symbol	* padded_format		3224781						
ANR	3225911	Symbol	* alpha_mode		3224781						
ANR	3225912	Symbol	name		3224781						
ANR	3225913	Symbol	con -> sf		3224781						
ANR	3225914	Symbol	con -> buf		3224781						
ANR	3225915	Function	set_ncomp	885:0:27831:27951							
ANR	3225916	FunctionDef	"set_ncomp (void * input_handle , int ncomp)"		3225915	0					
ANR	3225917	CompoundStatement		886:0:27877:27951	3225915	0					
ANR	3225918	IdentifierDeclStatement	context * con = ( context * ) input_handle ;	887:4:27883:27921	3225915	0	True				
ANR	3225919	IdentifierDecl	* con = ( context * ) input_handle		3225915	0					
ANR	3225920	IdentifierDeclType	context *		3225915	0					
ANR	3225921	Identifier	con		3225915	1					
ANR	3225922	AssignmentExpression	* con = ( context * ) input_handle		3225915	2		=			
ANR	3225923	Identifier	con		3225915	0					
ANR	3225924	CastExpression	( context * ) input_handle		3225915	1					
ANR	3225925	CastTarget	context *		3225915	0					
ANR	3225926	Identifier	input_handle		3225915	1					
ANR	3225927	ExpressionStatement	con -> ncomp = ncomp	888:4:27927:27945	3225915	1	True				
ANR	3225928	AssignmentExpression	con -> ncomp = ncomp		3225915	0		=			
ANR	3225929	PtrMemberAccess	con -> ncomp		3225915	0					
ANR	3225930	Identifier	con		3225915	0					
ANR	3225931	Identifier	ncomp		3225915	1					
ANR	3225932	Identifier	ncomp		3225915	1					
ANR	3225933	ReturnType	void		3225915	1					
ANR	3225934	Identifier	set_ncomp		3225915	2					
ANR	3225935	ParameterList	"void * input_handle , int ncomp"		3225915	3					
ANR	3225936	Parameter	void * input_handle	885:15:27846:27863	3225915	0	True				
ANR	3225937	ParameterType	void *		3225915	0					
ANR	3225938	Identifier	input_handle		3225915	1					
ANR	3225939	Parameter	int ncomp	885:35:27866:27874	3225915	1	True				
ANR	3225940	ParameterType	int		3225915	0					
ANR	3225941	Identifier	ncomp		3225915	1					
ANR	3225942	CFGEntryNode	ENTRY		3225915		True				
ANR	3225943	CFGExitNode	EXIT		3225915		True				
ANR	3225944	Symbol	ncomp		3225915						
ANR	3225945	Symbol	con		3225915						
ANR	3225946	Symbol	* con		3225915						
ANR	3225947	Symbol	con -> ncomp		3225915						
ANR	3225948	Symbol	input_handle		3225915						
ANR	3225949	Function	open_output_file	891:0:27954:28300							
ANR	3225950	FunctionDef	open_output_file (const char * name)		3225949	0					
ANR	3225951	CompoundStatement		892:0:27995:28300	3225949	0					
ANR	3225952	IdentifierDeclStatement	context * con = ( context * ) malloc ( sizeof ( context ) ) ;	893:4:28001:28049	3225949	0	True				
ANR	3225953	IdentifierDecl	* con = ( context * ) malloc ( sizeof ( context ) )		3225949	0					
ANR	3225954	IdentifierDeclType	context *		3225949	0					
ANR	3225955	Identifier	con		3225949	1					
ANR	3225956	AssignmentExpression	* con = ( context * ) malloc ( sizeof ( context ) )		3225949	2		=			
ANR	3225957	Identifier	con		3225949	0					
ANR	3225958	CastExpression	( context * ) malloc ( sizeof ( context ) )		3225949	1					
ANR	3225959	CastTarget	context *		3225949	0					
ANR	3225960	CallExpression	malloc ( sizeof ( context ) )		3225949	1					
ANR	3225961	Callee	malloc		3225949	0					
ANR	3225962	Identifier	malloc		3225949	0					
ANR	3225963	ArgumentList	sizeof ( context )		3225949	1					
ANR	3225964	Argument	sizeof ( context )		3225949	0					
ANR	3225965	SizeofExpression	sizeof ( context )		3225949	0					
ANR	3225966	Sizeof	sizeof		3225949	0					
ANR	3225967	SizeofOperand	context		3225949	1					
ANR	3225968	IfStatement	if ( con == 0 )		3225949	1					
ANR	3225969	Condition	con == 0	894:8:28059:28064	3225949	0	True				
ANR	3225970	EqualityExpression	con == 0		3225949	0		==			
ANR	3225971	Identifier	con		3225949	0					
ANR	3225972	PrimaryExpression	0		3225949	1					
ANR	3225973	ExpressionStatement	"error ( ""unable to allocate memory"" )"	895:8:28075:28109	3225949	1	True				
ANR	3225974	CallExpression	"error ( ""unable to allocate memory"" )"		3225949	0					
ANR	3225975	Callee	error		3225949	0					
ANR	3225976	Identifier	error		3225949	0					
ANR	3225977	ArgumentList	"""unable to allocate memory"""		3225949	1					
ANR	3225978	Argument	"""unable to allocate memory"""		3225949	0					
ANR	3225979	PrimaryExpression	"""unable to allocate memory"""		3225949	0					
ANR	3225980	ExpressionStatement	con -> file = 0	896:4:28115:28128	3225949	2	True				
ANR	3225981	AssignmentExpression	con -> file = 0		3225949	0		=			
ANR	3225982	PtrMemberAccess	con -> file		3225949	0					
ANR	3225983	Identifier	con		3225949	0					
ANR	3225984	Identifier	file		3225949	1					
ANR	3225985	PrimaryExpression	0		3225949	1					
ANR	3225986	ExpressionStatement	con -> name = name	897:4:28134:28150	3225949	3	True				
ANR	3225987	AssignmentExpression	con -> name = name		3225949	0		=			
ANR	3225988	PtrMemberAccess	con -> name		3225949	0					
ANR	3225989	Identifier	con		3225949	0					
ANR	3225990	Identifier	name		3225949	1					
ANR	3225991	Identifier	name		3225949	1					
ANR	3225992	ExpressionStatement	con -> wid = 0	898:4:28156:28168	3225949	4	True				
ANR	3225993	AssignmentExpression	con -> wid = 0		3225949	0		=			
ANR	3225994	PtrMemberAccess	con -> wid		3225949	0					
ANR	3225995	Identifier	con		3225949	0					
ANR	3225996	Identifier	wid		3225949	1					
ANR	3225997	PrimaryExpression	0		3225949	1					
ANR	3225998	ExpressionStatement	con -> hei = 0	899:4:28174:28186	3225949	5	True				
ANR	3225999	AssignmentExpression	con -> hei = 0		3225949	0		=			
ANR	3226000	PtrMemberAccess	con -> hei		3225949	0					
ANR	3226001	Identifier	con		3225949	0					
ANR	3226002	Identifier	hei		3225949	1					
ANR	3226003	PrimaryExpression	0		3225949	1					
ANR	3226004	ExpressionStatement	con -> ncomp = 0	900:4:28192:28206	3225949	6	True				
ANR	3226005	AssignmentExpression	con -> ncomp = 0		3225949	0		=			
ANR	3226006	PtrMemberAccess	con -> ncomp		3225949	0					
ANR	3226007	Identifier	con		3225949	0					
ANR	3226008	Identifier	ncomp		3225949	1					
ANR	3226009	PrimaryExpression	0		3225949	1					
ANR	3226010	ExpressionStatement	con -> bpi = 0	901:4:28212:28224	3225949	7	True				
ANR	3226011	AssignmentExpression	con -> bpi = 0		3225949	0		=			
ANR	3226012	PtrMemberAccess	con -> bpi		3225949	0					
ANR	3226013	Identifier	con		3225949	0					
ANR	3226014	Identifier	bpi		3225949	1					
ANR	3226015	PrimaryExpression	0		3225949	1					
ANR	3226016	ExpressionStatement	con -> format = 0	902:4:28230:28245	3225949	8	True				
ANR	3226017	AssignmentExpression	con -> format = 0		3225949	0		=			
ANR	3226018	PtrMemberAccess	con -> format		3225949	0					
ANR	3226019	Identifier	con		3225949	0					
ANR	3226020	Identifier	format		3225949	1					
ANR	3226021	PrimaryExpression	0		3225949	1					
ANR	3226022	ExpressionStatement	con -> swap = 0	903:4:28251:28264	3225949	9	True				
ANR	3226023	AssignmentExpression	con -> swap = 0		3225949	0		=			
ANR	3226024	PtrMemberAccess	con -> swap		3225949	0					
ANR	3226025	Identifier	con		3225949	0					
ANR	3226026	Identifier	swap		3225949	1					
ANR	3226027	PrimaryExpression	0		3225949	1					
ANR	3226028	ExpressionStatement	con -> buf = 0	904:4:28270:28282	3225949	10	True				
ANR	3226029	AssignmentExpression	con -> buf = 0		3225949	0		=			
ANR	3226030	PtrMemberAccess	con -> buf		3225949	0					
ANR	3226031	Identifier	con		3225949	0					
ANR	3226032	Identifier	buf		3225949	1					
ANR	3226033	PrimaryExpression	0		3225949	1					
ANR	3226034	ReturnStatement	return con ;	905:4:28288:28298	3225949	11	True				
ANR	3226035	Identifier	con		3225949	0					
ANR	3226036	ReturnType	void *		3225949	1					
ANR	3226037	Identifier	open_output_file		3225949	2					
ANR	3226038	ParameterList	const char * name		3225949	3					
ANR	3226039	Parameter	const char * name	891:23:27977:27992	3225949	0	True				
ANR	3226040	ParameterType	const char *		3225949	0					
ANR	3226041	Identifier	name		3225949	1					
ANR	3226042	CFGEntryNode	ENTRY		3225949		True				
ANR	3226043	CFGExitNode	EXIT		3225949		True				
ANR	3226044	Symbol	malloc		3225949						
ANR	3226045	Symbol	con		3225949						
ANR	3226046	Symbol	con -> file		3225949						
ANR	3226047	Symbol	con -> hei		3225949						
ANR	3226048	Symbol	con -> ncomp		3225949						
ANR	3226049	Symbol	con -> name		3225949						
ANR	3226050	Symbol	con -> swap		3225949						
ANR	3226051	Symbol	* con		3225949						
ANR	3226052	Symbol	con -> format		3225949						
ANR	3226053	Symbol	con -> bpi		3225949						
ANR	3226054	Symbol	name		3225949						
ANR	3226055	Symbol	con -> buf		3225949						
ANR	3226056	Symbol	con -> wid		3225949						
ANR	3226057	Function	close_file	908:0:28303:28502							
ANR	3226058	FunctionDef	close_file (void * handle)		3226057	0					
ANR	3226059	CompoundStatement		909:0:28333:28502	3226057	0					
ANR	3226060	IfStatement	if ( handle == NULL )		3226057	0					
ANR	3226061	Condition	handle == NULL	910:7:28342:28355	3226057	0	True				
ANR	3226062	EqualityExpression	handle == NULL		3226057	0		==			
ANR	3226063	Identifier	handle		3226057	0					
ANR	3226064	Identifier	NULL		3226057	1					
ANR	3226065	ReturnStatement	return ;	911:8:28366:28372	3226057	1	True				
ANR	3226066	IdentifierDeclStatement	context * con = ( context * ) handle ;	912:4:28378:28409	3226057	1	True				
ANR	3226067	IdentifierDecl	* con = ( context * ) handle		3226057	0					
ANR	3226068	IdentifierDeclType	context *		3226057	0					
ANR	3226069	Identifier	con		3226057	1					
ANR	3226070	AssignmentExpression	* con = ( context * ) handle		3226057	2		=			
ANR	3226071	Identifier	con		3226057	0					
ANR	3226072	CastExpression	( context * ) handle		3226057	1					
ANR	3226073	CastTarget	context *		3226057	0					
ANR	3226074	Identifier	handle		3226057	1					
ANR	3226075	IfStatement	if ( con -> file )		3226057	2					
ANR	3226076	Condition	con -> file	913:8:28419:28427	3226057	0	True				
ANR	3226077	PtrMemberAccess	con -> file		3226057	0					
ANR	3226078	Identifier	con		3226057	0					
ANR	3226079	Identifier	file		3226057	1					
ANR	3226080	ExpressionStatement	fclose ( con -> file )	913:19:28430:28447	3226057	1	True				
ANR	3226081	CallExpression	fclose ( con -> file )		3226057	0					
ANR	3226082	Callee	fclose		3226057	0					
ANR	3226083	Identifier	fclose		3226057	0					
ANR	3226084	ArgumentList	con -> file		3226057	1					
ANR	3226085	Argument	con -> file		3226057	0					
ANR	3226086	PtrMemberAccess	con -> file		3226057	0					
ANR	3226087	Identifier	con		3226057	0					
ANR	3226088	Identifier	file		3226057	1					
ANR	3226089	IfStatement	if ( con -> buf )		3226057	3					
ANR	3226090	Condition	con -> buf	914:8:28457:28464	3226057	0	True				
ANR	3226091	PtrMemberAccess	con -> buf		3226057	0					
ANR	3226092	Identifier	con		3226057	0					
ANR	3226093	Identifier	buf		3226057	1					
ANR	3226094	ExpressionStatement	free ( con -> buf )	914:18:28467:28481	3226057	1	True				
ANR	3226095	CallExpression	free ( con -> buf )		3226057	0					
ANR	3226096	Callee	free		3226057	0					
ANR	3226097	Identifier	free		3226057	0					
ANR	3226098	ArgumentList	con -> buf		3226057	1					
ANR	3226099	Argument	con -> buf		3226057	0					
ANR	3226100	PtrMemberAccess	con -> buf		3226057	0					
ANR	3226101	Identifier	con		3226057	0					
ANR	3226102	Identifier	buf		3226057	1					
ANR	3226103	ExpressionStatement	free ( con )	915:4:28487:28496	3226057	4	True				
ANR	3226104	CallExpression	free ( con )		3226057	0					
ANR	3226105	Callee	free		3226057	0					
ANR	3226106	Identifier	free		3226057	0					
ANR	3226107	ArgumentList	con		3226057	1					
ANR	3226108	Argument	con		3226057	0					
ANR	3226109	Identifier	con		3226057	0					
ANR	3226110	ReturnType	void		3226057	1					
ANR	3226111	Identifier	close_file		3226057	2					
ANR	3226112	ParameterList	void * handle		3226057	3					
ANR	3226113	Parameter	void * handle	908:16:28319:28330	3226057	0	True				
ANR	3226114	ParameterType	void *		3226057	0					
ANR	3226115	Identifier	handle		3226057	1					
ANR	3226116	CFGEntryNode	ENTRY		3226057		True				
ANR	3226117	CFGExitNode	EXIT		3226057		True				
ANR	3226118	Symbol	NULL		3226057						
ANR	3226119	Symbol	con		3226057						
ANR	3226120	Symbol	* con		3226057						
ANR	3226121	Symbol	con -> file		3226057						
ANR	3226122	Symbol	handle		3226057						
ANR	3226123	Symbol	con -> buf		3226057						
ANR	3226124	Function	get_file_parameters	918:0:28505:28923							
ANR	3226125	FunctionDef	"get_file_parameters (void * handle , int * wid , int * hei , int * ncomp , int * bpi , short * sf , short * photometric , int * padBytes)"		3226124	0					
ANR	3226126	CompoundStatement		919:0:28632:28923	3226124	0					
ANR	3226127	IdentifierDeclStatement	context * con = ( context * ) handle ;	920:4:28638:28669	3226124	0	True				
ANR	3226128	IdentifierDecl	* con = ( context * ) handle		3226124	0					
ANR	3226129	IdentifierDeclType	context *		3226124	0					
ANR	3226130	Identifier	con		3226124	1					
ANR	3226131	AssignmentExpression	* con = ( context * ) handle		3226124	2		=			
ANR	3226132	Identifier	con		3226124	0					
ANR	3226133	CastExpression	( context * ) handle		3226124	1					
ANR	3226134	CastTarget	context *		3226124	0					
ANR	3226135	Identifier	handle		3226124	1					
ANR	3226136	IfStatement	if ( wid )		3226124	1					
ANR	3226137	Condition	wid	921:8:28679:28681	3226124	0	True				
ANR	3226138	Identifier	wid		3226124	0					
ANR	3226139	ExpressionStatement	* wid = con -> wid	921:13:28684:28699	3226124	1	True				
ANR	3226140	AssignmentExpression	* wid = con -> wid		3226124	0		=			
ANR	3226141	UnaryOperationExpression	* wid		3226124	0					
ANR	3226142	UnaryOperator	*		3226124	0					
ANR	3226143	Identifier	wid		3226124	1					
ANR	3226144	PtrMemberAccess	con -> wid		3226124	1					
ANR	3226145	Identifier	con		3226124	0					
ANR	3226146	Identifier	wid		3226124	1					
ANR	3226147	IfStatement	if ( hei )		3226124	2					
ANR	3226148	Condition	hei	922:8:28709:28711	3226124	0	True				
ANR	3226149	Identifier	hei		3226124	0					
ANR	3226150	ExpressionStatement	* hei = con -> hei	922:13:28714:28729	3226124	1	True				
ANR	3226151	AssignmentExpression	* hei = con -> hei		3226124	0		=			
ANR	3226152	UnaryOperationExpression	* hei		3226124	0					
ANR	3226153	UnaryOperator	*		3226124	0					
ANR	3226154	Identifier	hei		3226124	1					
ANR	3226155	PtrMemberAccess	con -> hei		3226124	1					
ANR	3226156	Identifier	con		3226124	0					
ANR	3226157	Identifier	hei		3226124	1					
ANR	3226158	IfStatement	if ( ncomp )		3226124	3					
ANR	3226159	Condition	ncomp	923:8:28739:28743	3226124	0	True				
ANR	3226160	Identifier	ncomp		3226124	0					
ANR	3226161	ExpressionStatement	* ncomp = con -> ncomp	923:15:28746:28765	3226124	1	True				
ANR	3226162	AssignmentExpression	* ncomp = con -> ncomp		3226124	0		=			
ANR	3226163	UnaryOperationExpression	* ncomp		3226124	0					
ANR	3226164	UnaryOperator	*		3226124	0					
ANR	3226165	Identifier	ncomp		3226124	1					
ANR	3226166	PtrMemberAccess	con -> ncomp		3226124	1					
ANR	3226167	Identifier	con		3226124	0					
ANR	3226168	Identifier	ncomp		3226124	1					
ANR	3226169	IfStatement	if ( bpi )		3226124	4					
ANR	3226170	Condition	bpi	924:8:28775:28777	3226124	0	True				
ANR	3226171	Identifier	bpi		3226124	0					
ANR	3226172	ExpressionStatement	* bpi = con -> bpi	924:13:28780:28795	3226124	1	True				
ANR	3226173	AssignmentExpression	* bpi = con -> bpi		3226124	0		=			
ANR	3226174	UnaryOperationExpression	* bpi		3226124	0					
ANR	3226175	UnaryOperator	*		3226124	0					
ANR	3226176	Identifier	bpi		3226124	1					
ANR	3226177	PtrMemberAccess	con -> bpi		3226124	1					
ANR	3226178	Identifier	con		3226124	0					
ANR	3226179	Identifier	bpi		3226124	1					
ANR	3226180	IfStatement	if ( sf )		3226124	5					
ANR	3226181	Condition	sf	925:8:28805:28806	3226124	0	True				
ANR	3226182	Identifier	sf		3226124	0					
ANR	3226183	ExpressionStatement	* sf = con -> sf	925:12:28809:28822	3226124	1	True				
ANR	3226184	AssignmentExpression	* sf = con -> sf		3226124	0		=			
ANR	3226185	UnaryOperationExpression	* sf		3226124	0					
ANR	3226186	UnaryOperator	*		3226124	0					
ANR	3226187	Identifier	sf		3226124	1					
ANR	3226188	PtrMemberAccess	con -> sf		3226124	1					
ANR	3226189	Identifier	con		3226124	0					
ANR	3226190	Identifier	sf		3226124	1					
ANR	3226191	IfStatement	if ( photometric )		3226124	6					
ANR	3226192	Condition	photometric	926:8:28832:28842	3226124	0	True				
ANR	3226193	Identifier	photometric		3226124	0					
ANR	3226194	ExpressionStatement	* photometric = con -> photometric	926:21:28845:28876	3226124	1	True				
ANR	3226195	AssignmentExpression	* photometric = con -> photometric		3226124	0		=			
ANR	3226196	UnaryOperationExpression	* photometric		3226124	0					
ANR	3226197	UnaryOperator	*		3226124	0					
ANR	3226198	Identifier	photometric		3226124	1					
ANR	3226199	PtrMemberAccess	con -> photometric		3226124	1					
ANR	3226200	Identifier	con		3226124	0					
ANR	3226201	Identifier	photometric		3226124	1					
ANR	3226202	IfStatement	if ( padBytes )		3226124	7					
ANR	3226203	Condition	padBytes	927:8:28886:28893	3226124	0	True				
ANR	3226204	Identifier	padBytes		3226124	0					
ANR	3226205	ExpressionStatement	* padBytes = con -> padBytes	927:18:28896:28921	3226124	1	True				
ANR	3226206	AssignmentExpression	* padBytes = con -> padBytes		3226124	0		=			
ANR	3226207	UnaryOperationExpression	* padBytes		3226124	0					
ANR	3226208	UnaryOperator	*		3226124	0					
ANR	3226209	Identifier	padBytes		3226124	1					
ANR	3226210	PtrMemberAccess	con -> padBytes		3226124	1					
ANR	3226211	Identifier	con		3226124	0					
ANR	3226212	Identifier	padBytes		3226124	1					
ANR	3226213	ReturnType	void		3226124	1					
ANR	3226214	Identifier	get_file_parameters		3226124	2					
ANR	3226215	ParameterList	"void * handle , int * wid , int * hei , int * ncomp , int * bpi , short * sf , short * photometric , int * padBytes"		3226124	3					
ANR	3226216	Parameter	void * handle	918:25:28530:28541	3226124	0	True				
ANR	3226217	ParameterType	void *		3226124	0					
ANR	3226218	Identifier	handle		3226124	1					
ANR	3226219	Parameter	int * wid	918:39:28544:28551	3226124	1	True				
ANR	3226220	ParameterType	int *		3226124	0					
ANR	3226221	Identifier	wid		3226124	1					
ANR	3226222	Parameter	int * hei	918:49:28554:28561	3226124	2	True				
ANR	3226223	ParameterType	int *		3226124	0					
ANR	3226224	Identifier	hei		3226124	1					
ANR	3226225	Parameter	int * ncomp	918:59:28564:28573	3226124	3	True				
ANR	3226226	ParameterType	int *		3226124	0					
ANR	3226227	Identifier	ncomp		3226124	1					
ANR	3226228	Parameter	int * bpi	918:71:28576:28583	3226124	4	True				
ANR	3226229	ParameterType	int *		3226124	0					
ANR	3226230	Identifier	bpi		3226124	1					
ANR	3226231	Parameter	short * sf	918:81:28586:28594	3226124	5	True				
ANR	3226232	ParameterType	short *		3226124	0					
ANR	3226233	Identifier	sf		3226124	1					
ANR	3226234	Parameter	short * photometric	918:92:28597:28614	3226124	6	True				
ANR	3226235	ParameterType	short *		3226124	0					
ANR	3226236	Identifier	photometric		3226124	1					
ANR	3226237	Parameter	int * padBytes	918:112:28617:28629	3226124	7	True				
ANR	3226238	ParameterType	int *		3226124	0					
ANR	3226239	Identifier	padBytes		3226124	1					
ANR	3226240	CFGEntryNode	ENTRY		3226124		True				
ANR	3226241	CFGExitNode	EXIT		3226124		True				
ANR	3226242	Symbol	ncomp		3226124						
ANR	3226243	Symbol	con		3226124						
ANR	3226244	Symbol	con -> hei		3226124						
ANR	3226245	Symbol	con -> ncomp		3226124						
ANR	3226246	Symbol	padBytes		3226124						
ANR	3226247	Symbol	* hei		3226124						
ANR	3226248	Symbol	handle		3226124						
ANR	3226249	Symbol	* photometric		3226124						
ANR	3226250	Symbol	hei		3226124						
ANR	3226251	Symbol	photometric		3226124						
ANR	3226252	Symbol	wid		3226124						
ANR	3226253	Symbol	sf		3226124						
ANR	3226254	Symbol	* con		3226124						
ANR	3226255	Symbol	con -> bpi		3226124						
ANR	3226256	Symbol	* padBytes		3226124						
ANR	3226257	Symbol	con -> padBytes		3226124						
ANR	3226258	Symbol	bpi		3226124						
ANR	3226259	Symbol	* ncomp		3226124						
ANR	3226260	Symbol	* bpi		3226124						
ANR	3226261	Symbol	* sf		3226124						
ANR	3226262	Symbol	con -> photometric		3226124						
ANR	3226263	Symbol	* wid		3226124						
ANR	3226264	Symbol	con -> sf		3226124						
ANR	3226265	Symbol	con -> wid		3226124						
ANR	3226266	Function	set_photometric_interp	930:0:28926:29555							
ANR	3226267	FunctionDef	"set_photometric_interp (context * con , jxrc_t_pixelFormat pixelFormat)"		3226266	0					
ANR	3226268	CompoundStatement		931:0:29000:29555	3226266	0					
ANR	3226269	SwitchStatement	switch ( pixelFormat )		3226266	0					
ANR	3226270	Condition	pixelFormat	932:11:29013:29023	3226266	0	True				
ANR	3226271	Identifier	pixelFormat		3226266	0					
ANR	3226272	CompoundStatement		3:4:29:29	3226266	1					
ANR	3226273	Label	case JXRC_FMT_32bppCMYK :	934:4:29036:29059	3226266	0	True				
ANR	3226274	Identifier	JXRC_FMT_32bppCMYK		3226266	0					
ANR	3226275	Label	case JXRC_FMT_40bppCMYKAlpha :	935:4:29065:29093	3226266	1	True				
ANR	3226276	Identifier	JXRC_FMT_40bppCMYKAlpha		3226266	0					
ANR	3226277	Label	case JXRC_FMT_64bppCMYK :	936:4:29099:29122	3226266	2	True				
ANR	3226278	Identifier	JXRC_FMT_64bppCMYK		3226266	0					
ANR	3226279	Label	case JXRC_FMT_80bppCMYKAlpha :	937:4:29128:29156	3226266	3	True				
ANR	3226280	Identifier	JXRC_FMT_80bppCMYKAlpha		3226266	0					
ANR	3226281	ExpressionStatement	con -> photometric = 5	938:8:29166:29186	3226266	4	True				
ANR	3226282	AssignmentExpression	con -> photometric = 5		3226266	0		=			
ANR	3226283	PtrMemberAccess	con -> photometric		3226266	0					
ANR	3226284	Identifier	con		3226266	0					
ANR	3226285	Identifier	photometric		3226266	1					
ANR	3226286	PrimaryExpression	5		3226266	1					
ANR	3226287	ReturnStatement	return ;	939:8:29196:29202	3226266	5	True				
ANR	3226288	Label	case JXRC_FMT_8bppGray :	940:4:29208:29230	3226266	6	True				
ANR	3226289	Identifier	JXRC_FMT_8bppGray		3226266	0					
ANR	3226290	Label	case JXRC_FMT_16bppGray :	941:4:29244:29267	3226266	7	True				
ANR	3226291	Identifier	JXRC_FMT_16bppGray		3226266	0					
ANR	3226292	Label	case JXRC_FMT_16bppGrayFixedPoint :	942:4:29273:29306	3226266	8	True				
ANR	3226293	Identifier	JXRC_FMT_16bppGrayFixedPoint		3226266	0					
ANR	3226294	Label	case JXRC_FMT_16bppGrayHalf :	943:4:29312:29339	3226266	9	True				
ANR	3226295	Identifier	JXRC_FMT_16bppGrayHalf		3226266	0					
ANR	3226296	Label	case JXRC_FMT_32bppGrayFixedPoint :	944:4:29345:29378	3226266	10	True				
ANR	3226297	Identifier	JXRC_FMT_32bppGrayFixedPoint		3226266	0					
ANR	3226298	Label	case JXRC_FMT_32bppGrayFloat :	945:4:29384:29412	3226266	11	True				
ANR	3226299	Identifier	JXRC_FMT_32bppGrayFloat		3226266	0					
ANR	3226300	Label	case JXRC_FMT_BlackWhite :	946:4:29418:29442	3226266	12	True				
ANR	3226301	Identifier	JXRC_FMT_BlackWhite		3226266	0					
ANR	3226302	ExpressionStatement	con -> photometric = 1	947:8:29452:29472	3226266	13	True				
ANR	3226303	AssignmentExpression	con -> photometric = 1		3226266	0		=			
ANR	3226304	PtrMemberAccess	con -> photometric		3226266	0					
ANR	3226305	Identifier	con		3226266	0					
ANR	3226306	Identifier	photometric		3226266	1					
ANR	3226307	PrimaryExpression	1		3226266	1					
ANR	3226308	ReturnStatement	return ;	948:8:29482:29488	3226266	14	True				
ANR	3226309	Label	default :	949:4:29494:29501	3226266	15	True				
ANR	3226310	Identifier	default		3226266	0					
ANR	3226311	ExpressionStatement	con -> photometric = 2	950:8:29511:29531	3226266	16	True				
ANR	3226312	AssignmentExpression	con -> photometric = 2		3226266	0		=			
ANR	3226313	PtrMemberAccess	con -> photometric		3226266	0					
ANR	3226314	Identifier	con		3226266	0					
ANR	3226315	Identifier	photometric		3226266	1					
ANR	3226316	PrimaryExpression	2		3226266	1					
ANR	3226317	ReturnStatement	return ;	951:8:29541:29547	3226266	17	True				
ANR	3226318	ReturnType	void		3226266	1					
ANR	3226319	Identifier	set_photometric_interp		3226266	2					
ANR	3226320	ParameterList	"context * con , jxrc_t_pixelFormat pixelFormat"		3226266	3					
ANR	3226321	Parameter	context * con	930:28:28954:28965	3226266	0	True				
ANR	3226322	ParameterType	context *		3226266	0					
ANR	3226323	Identifier	con		3226266	1					
ANR	3226324	Parameter	jxrc_t_pixelFormat pixelFormat	930:42:28968:28997	3226266	1	True				
ANR	3226325	ParameterType	jxrc_t_pixelFormat		3226266	0					
ANR	3226326	Identifier	pixelFormat		3226266	1					
ANR	3226327	CFGEntryNode	ENTRY		3226266		True				
ANR	3226328	CFGExitNode	EXIT		3226266		True				
ANR	3226329	Symbol	con		3226266						
ANR	3226330	Symbol	pixelFormat		3226266						
ANR	3226331	Symbol	* con		3226266						
ANR	3226332	Symbol	con -> photometric		3226266						
ANR	3226333	Function	start_output_file	955:0:29558:31731							
ANR	3226334	FunctionDef	"start_output_file (context * con , int ext_width , int ext_height , int width , int height , int ncomp , int format , jxrc_t_pixelFormat pixelFormat)"		3226333	0					
ANR	3226335	CompoundStatement		956:0:29711:31731	3226333	0					
ANR	3226336	IdentifierDeclStatement	int bpi = 0 ;	957:4:29717:29726	3226333	0	True				
ANR	3226337	IdentifierDecl	bpi = 0		3226333	0					
ANR	3226338	IdentifierDeclType	int		3226333	0					
ANR	3226339	Identifier	bpi		3226333	1					
ANR	3226340	AssignmentExpression	bpi = 0		3226333	2		=			
ANR	3226341	Identifier	bpi		3226333	0					
ANR	3226342	PrimaryExpression	0		3226333	1					
ANR	3226343	SwitchStatement	switch ( format )		3226333	1					
ANR	3226344	Condition	format	958:12:29740:29745	3226333	0	True				
ANR	3226345	Identifier	format		3226333	0					
ANR	3226346	CompoundStatement		3:20:36:36	3226333	1					
ANR	3226347	Label	case 0 :	959:8:29758:29765	3226333	0	True				
ANR	3226348	ExpressionStatement	bpi = 1	959:17:29767:29772	3226333	1	True				
ANR	3226349	AssignmentExpression	bpi = 1		3226333	0		=			
ANR	3226350	Identifier	bpi		3226333	0					
ANR	3226351	PrimaryExpression	1		3226333	1					
ANR	3226352	BreakStatement	break ;	959:24:29774:29779	3226333	2	True				
ANR	3226353	Label	case 1 :	960:8:29789:29796	3226333	3	True				
ANR	3226354	ExpressionStatement	bpi = 8	960:17:29798:29803	3226333	4	True				
ANR	3226355	AssignmentExpression	bpi = 8		3226333	0		=			
ANR	3226356	Identifier	bpi		3226333	0					
ANR	3226357	PrimaryExpression	8		3226333	1					
ANR	3226358	BreakStatement	break ;	960:24:29805:29810	3226333	5	True				
ANR	3226359	Label	case 2 :	961:8:29820:29827	3226333	6	True				
ANR	3226360	Label	case 3 :	962:8:29837:29844	3226333	7	True				
ANR	3226361	Label	case 4 :	963:8:29854:29861	3226333	8	True				
ANR	3226362	ExpressionStatement	bpi = 16	963:17:29863:29869	3226333	9	True				
ANR	3226363	AssignmentExpression	bpi = 16		3226333	0		=			
ANR	3226364	Identifier	bpi		3226333	0					
ANR	3226365	PrimaryExpression	16		3226333	1					
ANR	3226366	BreakStatement	break ;	963:25:29871:29876	3226333	10	True				
ANR	3226367	Label	case 5 :	964:8:29886:29893	3226333	11	True				
ANR	3226368	Label	case 6 :	965:8:29903:29910	3226333	12	True				
ANR	3226369	Label	case 7 :	966:8:29920:29927	3226333	13	True				
ANR	3226370	ExpressionStatement	bpi = 32	966:17:29929:29935	3226333	14	True				
ANR	3226371	AssignmentExpression	bpi = 32		3226333	0		=			
ANR	3226372	Identifier	bpi		3226333	0					
ANR	3226373	PrimaryExpression	32		3226333	1					
ANR	3226374	BreakStatement	break ;	966:25:29937:29942	3226333	15	True				
ANR	3226375	Label	case 8 :	967:8:29952:29959	3226333	16	True				
ANR	3226376	ExpressionStatement	bpi = 5	967:17:29961:29966	3226333	17	True				
ANR	3226377	AssignmentExpression	bpi = 5		3226333	0		=			
ANR	3226378	Identifier	bpi		3226333	0					
ANR	3226379	PrimaryExpression	5		3226333	1					
ANR	3226380	BreakStatement	break ;	967:24:29968:29973	3226333	18	True				
ANR	3226381	Label	case 9 :	968:8:29983:29990	3226333	19	True				
ANR	3226382	ExpressionStatement	bpi = 10	968:17:29992:29998	3226333	20	True				
ANR	3226383	AssignmentExpression	bpi = 10		3226333	0		=			
ANR	3226384	Identifier	bpi		3226333	0					
ANR	3226385	PrimaryExpression	10		3226333	1					
ANR	3226386	BreakStatement	break ;	968:25:30000:30005	3226333	21	True				
ANR	3226387	Label	case 10 :	969:8:30015:30023	3226333	22	True				
ANR	3226388	ExpressionStatement	bpi = 6	969:18:30025:30030	3226333	23	True				
ANR	3226389	AssignmentExpression	bpi = 6		3226333	0		=			
ANR	3226390	Identifier	bpi		3226333	0					
ANR	3226391	PrimaryExpression	6		3226333	1					
ANR	3226392	BreakStatement	break ;	969:25:30032:30037	3226333	24	True				
ANR	3226393	Label	case 15 :	970:8:30047:30055	3226333	25	True				
ANR	3226394	ExpressionStatement	bpi = 1	970:18:30057:30062	3226333	26	True				
ANR	3226395	AssignmentExpression	bpi = 1		3226333	0		=			
ANR	3226396	Identifier	bpi		3226333	0					
ANR	3226397	PrimaryExpression	1		3226333	1					
ANR	3226398	BreakStatement	break ;	970:25:30064:30069	3226333	27	True				
ANR	3226399	Label	default :	971:8:30079:30087	3226333	28	True				
ANR	3226400	Identifier	default		3226333	0					
ANR	3226401	ExpressionStatement	"error ( ""invalid component format code (%d) for output file %s"" , format , con -> name )"	971:18:30089:30170	3226333	29	True				
ANR	3226402	CallExpression	"error ( ""invalid component format code (%d) for output file %s"" , format , con -> name )"		3226333	0					
ANR	3226403	Callee	error		3226333	0					
ANR	3226404	Identifier	error		3226333	0					
ANR	3226405	ArgumentList	"""invalid component format code (%d) for output file %s"""		3226333	1					
ANR	3226406	Argument	"""invalid component format code (%d) for output file %s"""		3226333	0					
ANR	3226407	PrimaryExpression	"""invalid component format code (%d) for output file %s"""		3226333	0					
ANR	3226408	Argument	format		3226333	1					
ANR	3226409	Identifier	format		3226333	0					
ANR	3226410	Argument	con -> name		3226333	2					
ANR	3226411	PtrMemberAccess	con -> name		3226333	0					
ANR	3226412	Identifier	con		3226333	0					
ANR	3226413	Identifier	name		3226333	1					
ANR	3226414	IfStatement	if ( bpi < 1 || bpi > 32 )		3226333	2					
ANR	3226415	Condition	bpi < 1 || bpi > 32	974:8:30187:30201	3226333	0	True				
ANR	3226416	OrExpression	bpi < 1 || bpi > 32		3226333	0		||			
ANR	3226417	RelationalExpression	bpi < 1		3226333	0		<			
ANR	3226418	Identifier	bpi		3226333	0					
ANR	3226419	PrimaryExpression	1		3226333	1					
ANR	3226420	RelationalExpression	bpi > 32		3226333	1		>			
ANR	3226421	Identifier	bpi		3226333	0					
ANR	3226422	PrimaryExpression	32		3226333	1					
ANR	3226423	ExpressionStatement	"error ( ""invalid bits per sample (%d) for output file %s"" , bpi , con -> name )"	975:8:30212:30284	3226333	1	True				
ANR	3226424	CallExpression	"error ( ""invalid bits per sample (%d) for output file %s"" , bpi , con -> name )"		3226333	0					
ANR	3226425	Callee	error		3226333	0					
ANR	3226426	Identifier	error		3226333	0					
ANR	3226427	ArgumentList	"""invalid bits per sample (%d) for output file %s"""		3226333	1					
ANR	3226428	Argument	"""invalid bits per sample (%d) for output file %s"""		3226333	0					
ANR	3226429	PrimaryExpression	"""invalid bits per sample (%d) for output file %s"""		3226333	0					
ANR	3226430	Argument	bpi		3226333	1					
ANR	3226431	Identifier	bpi		3226333	0					
ANR	3226432	Argument	con -> name		3226333	2					
ANR	3226433	PtrMemberAccess	con -> name		3226333	0					
ANR	3226434	Identifier	con		3226333	0					
ANR	3226435	Identifier	name		3226333	1					
ANR	3226436	IfStatement	if ( width <= 0 || height <= 0 )		3226333	3					
ANR	3226437	Condition	width <= 0 || height <= 0	976:8:30294:30314	3226333	0	True				
ANR	3226438	OrExpression	width <= 0 || height <= 0		3226333	0		||			
ANR	3226439	RelationalExpression	width <= 0		3226333	0		<=			
ANR	3226440	Identifier	width		3226333	0					
ANR	3226441	PrimaryExpression	0		3226333	1					
ANR	3226442	RelationalExpression	height <= 0		3226333	1		<=			
ANR	3226443	Identifier	height		3226333	0					
ANR	3226444	PrimaryExpression	0		3226333	1					
ANR	3226445	ExpressionStatement	"error ( ""invalid dimensions (%d X %d) for output file %s"" , width , height , con -> name )"	977:8:30325:30407	3226333	1	True				
ANR	3226446	CallExpression	"error ( ""invalid dimensions (%d X %d) for output file %s"" , width , height , con -> name )"		3226333	0					
ANR	3226447	Callee	error		3226333	0					
ANR	3226448	Identifier	error		3226333	0					
ANR	3226449	ArgumentList	"""invalid dimensions (%d X %d) for output file %s"""		3226333	1					
ANR	3226450	Argument	"""invalid dimensions (%d X %d) for output file %s"""		3226333	0					
ANR	3226451	PrimaryExpression	"""invalid dimensions (%d X %d) for output file %s"""		3226333	0					
ANR	3226452	Argument	width		3226333	1					
ANR	3226453	Identifier	width		3226333	0					
ANR	3226454	Argument	height		3226333	2					
ANR	3226455	Identifier	height		3226333	0					
ANR	3226456	Argument	con -> name		3226333	3					
ANR	3226457	PtrMemberAccess	con -> name		3226333	0					
ANR	3226458	Identifier	con		3226333	0					
ANR	3226459	Identifier	name		3226333	1					
ANR	3226460	ExpressionStatement	con -> wid = width	979:4:30418:30434	3226333	4	True				
ANR	3226461	AssignmentExpression	con -> wid = width		3226333	0		=			
ANR	3226462	PtrMemberAccess	con -> wid		3226333	0					
ANR	3226463	Identifier	con		3226333	0					
ANR	3226464	Identifier	wid		3226333	1					
ANR	3226465	Identifier	width		3226333	1					
ANR	3226466	ExpressionStatement	con -> hei = height	980:4:30440:30457	3226333	5	True				
ANR	3226467	AssignmentExpression	con -> hei = height		3226333	0		=			
ANR	3226468	PtrMemberAccess	con -> hei		3226333	0					
ANR	3226469	Identifier	con		3226333	0					
ANR	3226470	Identifier	hei		3226333	1					
ANR	3226471	Identifier	height		3226333	1					
ANR	3226472	ExpressionStatement	con -> ncomp = ncomp	981:4:30463:30481	3226333	6	True				
ANR	3226473	AssignmentExpression	con -> ncomp = ncomp		3226333	0		=			
ANR	3226474	PtrMemberAccess	con -> ncomp		3226333	0					
ANR	3226475	Identifier	con		3226333	0					
ANR	3226476	Identifier	ncomp		3226333	1					
ANR	3226477	Identifier	ncomp		3226333	1					
ANR	3226478	ExpressionStatement	con -> bpi = bpi	982:4:30487:30501	3226333	7	True				
ANR	3226479	AssignmentExpression	con -> bpi = bpi		3226333	0		=			
ANR	3226480	PtrMemberAccess	con -> bpi		3226333	0					
ANR	3226481	Identifier	con		3226333	0					
ANR	3226482	Identifier	bpi		3226333	1					
ANR	3226483	Identifier	bpi		3226333	1					
ANR	3226484	ExpressionStatement	con -> format = format	983:4:30507:30527	3226333	8	True				
ANR	3226485	AssignmentExpression	con -> format = format		3226333	0		=			
ANR	3226486	PtrMemberAccess	con -> format		3226333	0					
ANR	3226487	Identifier	con		3226333	0					
ANR	3226488	Identifier	format		3226333	1					
ANR	3226489	Identifier	format		3226333	1					
ANR	3226490	ExpressionStatement	con -> buf = malloc ( ( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )	985:4:30596:30670	3226333	9	True				
ANR	3226491	AssignmentExpression	con -> buf = malloc ( ( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )		3226333	0		=			
ANR	3226492	PtrMemberAccess	con -> buf		3226333	0					
ANR	3226493	Identifier	con		3226333	0					
ANR	3226494	Identifier	buf		3226333	1					
ANR	3226495	CallExpression	malloc ( ( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )		3226333	1					
ANR	3226496	Callee	malloc		3226333	0					
ANR	3226497	Identifier	malloc		3226333	0					
ANR	3226498	ArgumentList	( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3226333	1					
ANR	3226499	Argument	( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3226333	0					
ANR	3226500	MultiplicativeExpression	( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3226333	0		*			
ANR	3226501	MultiplicativeExpression	( ext_width ) / 16		3226333	0		/			
ANR	3226502	Identifier	ext_width		3226333	0					
ANR	3226503	PrimaryExpression	16		3226333	1					
ANR	3226504	MultiplicativeExpression	256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3226333	1		*			
ANR	3226505	PrimaryExpression	256		3226333	0					
ANR	3226506	MultiplicativeExpression	( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		3226333	1		*			
ANR	3226507	AdditiveExpression	ncomp + 1		3226333	0		+			
ANR	3226508	Identifier	ncomp		3226333	0					
ANR	3226509	PrimaryExpression	1		3226333	1					
ANR	3226510	MultiplicativeExpression	( con -> bpi + 7 ) / 8		3226333	1		/			
ANR	3226511	AdditiveExpression	con -> bpi + 7		3226333	0		+			
ANR	3226512	PtrMemberAccess	con -> bpi		3226333	0					
ANR	3226513	Identifier	con		3226333	0					
ANR	3226514	Identifier	bpi		3226333	1					
ANR	3226515	PrimaryExpression	7		3226333	1					
ANR	3226516	PrimaryExpression	8		3226333	1					
ANR	3226517	IfStatement	if ( con -> buf == 0 )		3226333	10					
ANR	3226518	Condition	con -> buf == 0	986:8:30680:30690	3226333	0	True				
ANR	3226519	EqualityExpression	con -> buf == 0		3226333	0		==			
ANR	3226520	PtrMemberAccess	con -> buf		3226333	0					
ANR	3226521	Identifier	con		3226333	0					
ANR	3226522	Identifier	buf		3226333	1					
ANR	3226523	PrimaryExpression	0		3226333	1					
ANR	3226524	ExpressionStatement	"error ( ""unable to allocate memory"" )"	986:21:30693:30727	3226333	1	True				
ANR	3226525	CallExpression	"error ( ""unable to allocate memory"" )"		3226333	0					
ANR	3226526	Callee	error		3226333	0					
ANR	3226527	Identifier	error		3226333	0					
ANR	3226528	ArgumentList	"""unable to allocate memory"""		3226333	1					
ANR	3226529	Argument	"""unable to allocate memory"""		3226333	0					
ANR	3226530	PrimaryExpression	"""unable to allocate memory"""		3226333	0					
ANR	3226531	IdentifierDeclStatement	"const char * p = strrchr ( con -> name , '.' ) ;"	988:4:30734:30773	3226333	11	True				
ANR	3226532	IdentifierDecl	"* p = strrchr ( con -> name , '.' )"		3226333	0					
ANR	3226533	IdentifierDeclType	const char *		3226333	0					
ANR	3226534	Identifier	p		3226333	1					
ANR	3226535	AssignmentExpression	"* p = strrchr ( con -> name , '.' )"		3226333	2		=			
ANR	3226536	Identifier	p		3226333	0					
ANR	3226537	CallExpression	"strrchr ( con -> name , '.' )"		3226333	1					
ANR	3226538	Callee	strrchr		3226333	0					
ANR	3226539	Identifier	strrchr		3226333	0					
ANR	3226540	ArgumentList	con -> name		3226333	1					
ANR	3226541	Argument	con -> name		3226333	0					
ANR	3226542	PtrMemberAccess	con -> name		3226333	0					
ANR	3226543	Identifier	con		3226333	0					
ANR	3226544	Identifier	name		3226333	1					
ANR	3226545	Argument	'.'		3226333	1					
ANR	3226546	PrimaryExpression	'.'		3226333	0					
ANR	3226547	IfStatement	if ( p == 0 )		3226333	12					
ANR	3226548	Condition	p == 0	989:8:30783:30786	3226333	0	True				
ANR	3226549	EqualityExpression	p == 0		3226333	0		==			
ANR	3226550	Identifier	p		3226333	0					
ANR	3226551	PrimaryExpression	0		3226333	1					
ANR	3226552	ExpressionStatement	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"	990:8:30797:30875	3226333	1	True				
ANR	3226553	CallExpression	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"		3226333	0					
ANR	3226554	Callee	error		3226333	0					
ANR	3226555	Identifier	error		3226333	0					
ANR	3226556	ArgumentList	"""output file name %s needs a suffix to determine its format"""		3226333	1					
ANR	3226557	Argument	"""output file name %s needs a suffix to determine its format"""		3226333	0					
ANR	3226558	PrimaryExpression	"""output file name %s needs a suffix to determine its format"""		3226333	0					
ANR	3226559	Argument	con -> name		3226333	1					
ANR	3226560	PtrMemberAccess	con -> name		3226333	0					
ANR	3226561	Identifier	con		3226333	0					
ANR	3226562	Identifier	name		3226333	1					
ANR	3226563	IfStatement	"if ( ! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" ) )"		3226333	13					
ANR	3226564	Condition	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"	991:8:30885:30958	3226333	0	True				
ANR	3226565	OrExpression	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		3226333	0		||			
ANR	3226566	UnaryOperationExpression	"! strcasecmp ( p , "".pnm"" )"		3226333	0					
ANR	3226567	UnaryOperator	!		3226333	0					
ANR	3226568	CallExpression	"strcasecmp ( p , "".pnm"" )"		3226333	1					
ANR	3226569	Callee	strcasecmp		3226333	0					
ANR	3226570	Identifier	strcasecmp		3226333	0					
ANR	3226571	ArgumentList	p		3226333	1					
ANR	3226572	Argument	p		3226333	0					
ANR	3226573	Identifier	p		3226333	0					
ANR	3226574	Argument	""".pnm"""		3226333	1					
ANR	3226575	PrimaryExpression	""".pnm"""		3226333	0					
ANR	3226576	OrExpression	"! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		3226333	1		||			
ANR	3226577	UnaryOperationExpression	"! strcasecmp ( p , "".pgm"" )"		3226333	0					
ANR	3226578	UnaryOperator	!		3226333	0					
ANR	3226579	CallExpression	"strcasecmp ( p , "".pgm"" )"		3226333	1					
ANR	3226580	Callee	strcasecmp		3226333	0					
ANR	3226581	Identifier	strcasecmp		3226333	0					
ANR	3226582	ArgumentList	p		3226333	1					
ANR	3226583	Argument	p		3226333	0					
ANR	3226584	Identifier	p		3226333	0					
ANR	3226585	Argument	""".pgm"""		3226333	1					
ANR	3226586	PrimaryExpression	""".pgm"""		3226333	0					
ANR	3226587	UnaryOperationExpression	"! strcasecmp ( p , "".ppm"" )"		3226333	1					
ANR	3226588	UnaryOperator	!		3226333	0					
ANR	3226589	CallExpression	"strcasecmp ( p , "".ppm"" )"		3226333	1					
ANR	3226590	Callee	strcasecmp		3226333	0					
ANR	3226591	Identifier	strcasecmp		3226333	0					
ANR	3226592	ArgumentList	p		3226333	1					
ANR	3226593	Argument	p		3226333	0					
ANR	3226594	Identifier	p		3226333	0					
ANR	3226595	Argument	""".ppm"""		3226333	1					
ANR	3226596	PrimaryExpression	""".ppm"""		3226333	0					
ANR	3226597	CompoundStatement		37:4:1253:1253	3226333	1					
ANR	3226598	IfStatement	if ( ! validate_pnm_output ( pixelFormat ) )		3226333	0					
ANR	3226599	Condition	! validate_pnm_output ( pixelFormat )	993:11:30978:31010	3226333	0	True				
ANR	3226600	UnaryOperationExpression	! validate_pnm_output ( pixelFormat )		3226333	0					
ANR	3226601	UnaryOperator	!		3226333	0					
ANR	3226602	CallExpression	validate_pnm_output ( pixelFormat )		3226333	1					
ANR	3226603	Callee	validate_pnm_output		3226333	0					
ANR	3226604	Identifier	validate_pnm_output		3226333	0					
ANR	3226605	ArgumentList	pixelFormat		3226333	1					
ANR	3226606	Argument	pixelFormat		3226333	0					
ANR	3226607	Identifier	pixelFormat		3226333	0					
ANR	3226608	CompoundStatement		39:8:1309:1309	3226333	1					
ANR	3226609	ExpressionStatement	"printf ( ""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"" )"	995:12:31035:31146	3226333	0	True				
ANR	3226610	CallExpression	"printf ( ""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"" )"		3226333	0					
ANR	3226611	Callee	printf		3226333	0					
ANR	3226612	Identifier	printf		3226333	0					
ANR	3226613	ArgumentList	"""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"""		3226333	1					
ANR	3226614	Argument	"""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"""		3226333	0					
ANR	3226615	PrimaryExpression	"""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"""		3226333	0					
ANR	3226616	ExpressionStatement	assert ( 0 )	996:12:31160:31169	3226333	1	True				
ANR	3226617	CallExpression	assert ( 0 )		3226333	0					
ANR	3226618	Callee	assert		3226333	0					
ANR	3226619	Identifier	assert		3226333	0					
ANR	3226620	ArgumentList	0		3226333	1					
ANR	3226621	Argument	0		3226333	0					
ANR	3226622	PrimaryExpression	0		3226333	0					
ANR	3226623	ExpressionStatement	start_pnm_output_file ( con )	998:8:31189:31215	3226333	1	True				
ANR	3226624	CallExpression	start_pnm_output_file ( con )		3226333	0					
ANR	3226625	Callee	start_pnm_output_file		3226333	0					
ANR	3226626	Identifier	start_pnm_output_file		3226333	0					
ANR	3226627	ArgumentList	con		3226333	1					
ANR	3226628	Argument	con		3226333	0					
ANR	3226629	Identifier	con		3226333	0					
ANR	3226630	ElseStatement	else		3226333	0					
ANR	3226631	IfStatement	"if ( ! strcasecmp ( p , "".tif"" ) )"		3226333	0					
ANR	3226632	Condition	"! strcasecmp ( p , "".tif"" )"	1000:13:31236:31257	3226333	0	True				
ANR	3226633	UnaryOperationExpression	"! strcasecmp ( p , "".tif"" )"		3226333	0					
ANR	3226634	UnaryOperator	!		3226333	0					
ANR	3226635	CallExpression	"strcasecmp ( p , "".tif"" )"		3226333	1					
ANR	3226636	Callee	strcasecmp		3226333	0					
ANR	3226637	Identifier	strcasecmp		3226333	0					
ANR	3226638	ArgumentList	p		3226333	1					
ANR	3226639	Argument	p		3226333	0					
ANR	3226640	Identifier	p		3226333	0					
ANR	3226641	Argument	""".tif"""		3226333	1					
ANR	3226642	PrimaryExpression	""".tif"""		3226333	0					
ANR	3226643	CompoundStatement		46:4:1552:1552	3226333	1					
ANR	3226644	IfStatement	if ( ! validate_tif_output ( pixelFormat ) && ncomp != 1 )		3226333	0					
ANR	3226645	Condition	! validate_tif_output ( pixelFormat ) && ncomp != 1	1002:11:31284:31330	3226333	0	True				
ANR	3226646	AndExpression	! validate_tif_output ( pixelFormat ) && ncomp != 1		3226333	0		&&			
ANR	3226647	UnaryOperationExpression	! validate_tif_output ( pixelFormat )		3226333	0					
ANR	3226648	UnaryOperator	!		3226333	0					
ANR	3226649	CallExpression	validate_tif_output ( pixelFormat )		3226333	1					
ANR	3226650	Callee	validate_tif_output		3226333	0					
ANR	3226651	Identifier	validate_tif_output		3226333	0					
ANR	3226652	ArgumentList	pixelFormat		3226333	1					
ANR	3226653	Argument	pixelFormat		3226333	0					
ANR	3226654	Identifier	pixelFormat		3226333	0					
ANR	3226655	EqualityExpression	ncomp != 1		3226333	1		!=			
ANR	3226656	Identifier	ncomp		3226333	0					
ANR	3226657	PrimaryExpression	1		3226333	1					
ANR	3226658	CompoundStatement		48:8:1629:1629	3226333	1					
ANR	3226659	ExpressionStatement	"printf ( ""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"" )"	1004:12:31355:31458	3226333	0	True				
ANR	3226660	CallExpression	"printf ( ""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"" )"		3226333	0					
ANR	3226661	Callee	printf		3226333	0					
ANR	3226662	Identifier	printf		3226333	0					
ANR	3226663	ArgumentList	"""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"""		3226333	1					
ANR	3226664	Argument	"""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"""		3226333	0					
ANR	3226665	PrimaryExpression	"""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"""		3226333	0					
ANR	3226666	ExpressionStatement	assert ( 0 )	1005:12:31472:31481	3226333	1	True				
ANR	3226667	CallExpression	assert ( 0 )		3226333	0					
ANR	3226668	Callee	assert		3226333	0					
ANR	3226669	Identifier	assert		3226333	0					
ANR	3226670	ArgumentList	0		3226333	1					
ANR	3226671	Argument	0		3226333	0					
ANR	3226672	PrimaryExpression	0		3226333	0					
ANR	3226673	ExpressionStatement	"set_photometric_interp ( con , pixelFormat )"	1007:8:31501:31541	3226333	1	True				
ANR	3226674	CallExpression	"set_photometric_interp ( con , pixelFormat )"		3226333	0					
ANR	3226675	Callee	set_photometric_interp		3226333	0					
ANR	3226676	Identifier	set_photometric_interp		3226333	0					
ANR	3226677	ArgumentList	con		3226333	1					
ANR	3226678	Argument	con		3226333	0					
ANR	3226679	Identifier	con		3226333	0					
ANR	3226680	Argument	pixelFormat		3226333	1					
ANR	3226681	Identifier	pixelFormat		3226333	0					
ANR	3226682	ExpressionStatement	start_tif_output_file ( con )	1008:8:31551:31577	3226333	2	True				
ANR	3226683	CallExpression	start_tif_output_file ( con )		3226333	0					
ANR	3226684	Callee	start_tif_output_file		3226333	0					
ANR	3226685	Identifier	start_tif_output_file		3226333	0					
ANR	3226686	ArgumentList	con		3226333	1					
ANR	3226687	Argument	con		3226333	0					
ANR	3226688	Identifier	con		3226333	0					
ANR	3226689	ElseStatement	else		3226333	0					
ANR	3226690	IfStatement	"if ( ! strcasecmp ( p , "".raw"" ) )"		3226333	0					
ANR	3226691	Condition	"! strcasecmp ( p , "".raw"" )"	1010:13:31598:31619	3226333	0	True				
ANR	3226692	UnaryOperationExpression	"! strcasecmp ( p , "".raw"" )"		3226333	0					
ANR	3226693	UnaryOperator	!		3226333	0					
ANR	3226694	CallExpression	"strcasecmp ( p , "".raw"" )"		3226333	1					
ANR	3226695	Callee	strcasecmp		3226333	0					
ANR	3226696	Identifier	strcasecmp		3226333	0					
ANR	3226697	ArgumentList	p		3226333	1					
ANR	3226698	Argument	p		3226333	0					
ANR	3226699	Identifier	p		3226333	0					
ANR	3226700	Argument	""".raw"""		3226333	1					
ANR	3226701	PrimaryExpression	""".raw"""		3226333	0					
ANR	3226702	ExpressionStatement	start_raw_output_file ( con )	1011:8:31630:31656	3226333	1	True				
ANR	3226703	CallExpression	start_raw_output_file ( con )		3226333	0					
ANR	3226704	Callee	start_raw_output_file		3226333	0					
ANR	3226705	Identifier	start_raw_output_file		3226333	0					
ANR	3226706	ArgumentList	con		3226333	1					
ANR	3226707	Argument	con		3226333	0					
ANR	3226708	Identifier	con		3226333	0					
ANR	3226709	ElseStatement	else		3226333	0					
ANR	3226710	ExpressionStatement	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"	1012:9:31667:31729	3226333	0	True				
ANR	3226711	CallExpression	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"		3226333	0					
ANR	3226712	Callee	error		3226333	0					
ANR	3226713	Identifier	error		3226333	0					
ANR	3226714	ArgumentList	"""unrecognized suffix on output file name %s"""		3226333	1					
ANR	3226715	Argument	"""unrecognized suffix on output file name %s"""		3226333	0					
ANR	3226716	PrimaryExpression	"""unrecognized suffix on output file name %s"""		3226333	0					
ANR	3226717	Argument	con -> name		3226333	1					
ANR	3226718	PtrMemberAccess	con -> name		3226333	0					
ANR	3226719	Identifier	con		3226333	0					
ANR	3226720	Identifier	name		3226333	1					
ANR	3226721	ReturnType	static void		3226333	1					
ANR	3226722	Identifier	start_output_file		3226333	2					
ANR	3226723	ParameterList	"context * con , int ext_width , int ext_height , int width , int height , int ncomp , int format , jxrc_t_pixelFormat pixelFormat"		3226333	3					
ANR	3226724	Parameter	context * con	955:30:29588:29599	3226333	0	True				
ANR	3226725	ParameterType	context *		3226333	0					
ANR	3226726	Identifier	con		3226333	1					
ANR	3226727	Parameter	int ext_width	955:44:29602:29614	3226333	1	True				
ANR	3226728	ParameterType	int		3226333	0					
ANR	3226729	Identifier	ext_width		3226333	1					
ANR	3226730	Parameter	int ext_height	955:59:29617:29630	3226333	2	True				
ANR	3226731	ParameterType	int		3226333	0					
ANR	3226732	Identifier	ext_height		3226333	1					
ANR	3226733	Parameter	int width	955:75:29633:29641	3226333	3	True				
ANR	3226734	ParameterType	int		3226333	0					
ANR	3226735	Identifier	width		3226333	1					
ANR	3226736	Parameter	int height	955:86:29644:29653	3226333	4	True				
ANR	3226737	ParameterType	int		3226333	0					
ANR	3226738	Identifier	height		3226333	1					
ANR	3226739	Parameter	int ncomp	955:98:29656:29664	3226333	5	True				
ANR	3226740	ParameterType	int		3226333	0					
ANR	3226741	Identifier	ncomp		3226333	1					
ANR	3226742	Parameter	int format	955:109:29667:29676	3226333	6	True				
ANR	3226743	ParameterType	int		3226333	0					
ANR	3226744	Identifier	format		3226333	1					
ANR	3226745	Parameter	jxrc_t_pixelFormat pixelFormat	955:121:29679:29708	3226333	7	True				
ANR	3226746	ParameterType	jxrc_t_pixelFormat		3226333	0					
ANR	3226747	Identifier	pixelFormat		3226333	1					
ANR	3226748	CFGEntryNode	ENTRY		3226333		True				
ANR	3226749	CFGExitNode	EXIT		3226333		True				
ANR	3226750	Symbol	ncomp		3226333						
ANR	3226751	Symbol	malloc		3226333						
ANR	3226752	Symbol	con		3226333						
ANR	3226753	Symbol	pixelFormat		3226333						
ANR	3226754	Symbol	con -> hei		3226333						
ANR	3226755	Symbol	con -> ncomp		3226333						
ANR	3226756	Symbol	format		3226333						
ANR	3226757	Symbol	validate_tif_output		3226333						
ANR	3226758	Symbol	con -> name		3226333						
ANR	3226759	Symbol	p		3226333						
ANR	3226760	Symbol	validate_pnm_output		3226333						
ANR	3226761	Symbol	ext_width		3226333						
ANR	3226762	Symbol	* con		3226333						
ANR	3226763	Symbol	con -> format		3226333						
ANR	3226764	Symbol	con -> bpi		3226333						
ANR	3226765	Symbol	strrchr		3226333						
ANR	3226766	Symbol	width		3226333						
ANR	3226767	Symbol	bpi		3226333						
ANR	3226768	Symbol	ext_height		3226333						
ANR	3226769	Symbol	strcasecmp		3226333						
ANR	3226770	Symbol	con -> buf		3226333						
ANR	3226771	Symbol	con -> wid		3226333						
ANR	3226772	Symbol	height		3226333						
ANR	3226773	Function	PreScalingBD16F	1017:0:31773:31905							
ANR	3226774	FunctionDef	PreScalingBD16F (int hHalf)		3226773	0					
ANR	3226775	CompoundStatement		1018:0:31811:31905	3226773	0					
ANR	3226776	IdentifierDeclStatement	int s ;	1019:4:31817:31822	3226773	0	True				
ANR	3226777	IdentifierDecl	s		3226773	0					
ANR	3226778	IdentifierDeclType	int		3226773	0					
ANR	3226779	Identifier	s		3226773	1					
ANR	3226780	ExpressionStatement	s = ( hHalf >> 31 )	1020:4:31828:31845	3226773	1	True				
ANR	3226781	AssignmentExpression	s = ( hHalf >> 31 )		3226773	0		=			
ANR	3226782	Identifier	s		3226773	0					
ANR	3226783	ShiftExpression	hHalf >> 31		3226773	1		>>			
ANR	3226784	Identifier	hHalf		3226773	0					
ANR	3226785	PrimaryExpression	31		3226773	1					
ANR	3226786	ExpressionStatement	hHalf = ( ( hHalf & 0x7fff ) ^ s ) - s	1021:4:31851:31885	3226773	2	True				
ANR	3226787	AssignmentExpression	hHalf = ( ( hHalf & 0x7fff ) ^ s ) - s		3226773	0		=			
ANR	3226788	Identifier	hHalf		3226773	0					
ANR	3226789	AdditiveExpression	( ( hHalf & 0x7fff ) ^ s ) - s		3226773	1		-			
ANR	3226790	ExclusiveOrExpression	( hHalf & 0x7fff ) ^ s		3226773	0		^			
ANR	3226791	BitAndExpression	hHalf & 0x7fff		3226773	0		&			
ANR	3226792	Identifier	hHalf		3226773	0					
ANR	3226793	PrimaryExpression	0x7fff		3226773	1					
ANR	3226794	Identifier	s		3226773	1					
ANR	3226795	Identifier	s		3226773	1					
ANR	3226796	ReturnStatement	return hHalf ;	1022:4:31891:31903	3226773	3	True				
ANR	3226797	Identifier	hHalf		3226773	0					
ANR	3226798	ReturnType	static int		3226773	1					
ANR	3226799	Identifier	PreScalingBD16F		3226773	2					
ANR	3226800	ParameterList	int hHalf		3226773	3					
ANR	3226801	Parameter	int hHalf	1017:27:31800:31808	3226773	0	True				
ANR	3226802	ParameterType	int		3226773	0					
ANR	3226803	Identifier	hHalf		3226773	1					
ANR	3226804	CFGEntryNode	ENTRY		3226773		True				
ANR	3226805	CFGExitNode	EXIT		3226773		True				
ANR	3226806	Symbol	hHalf		3226773						
ANR	3226807	Symbol	s		3226773						
ANR	3226808	Function	PreScalingBD32F	1025:0:31908:33051							
ANR	3226809	FunctionDef	"PreScalingBD32F (int f , const char _c , const unsigned char _lm)"		3226808	0					
ANR	3226810	CompoundStatement		1026:0:31982:33051	3226808	0					
ANR	3226811	IdentifierDeclStatement	"int _h , e , e1 , m , s ;"	1027:4:31988:32007	3226808	0	True				
ANR	3226812	IdentifierDecl	_h		3226808	0					
ANR	3226813	IdentifierDeclType	int		3226808	0					
ANR	3226814	Identifier	_h		3226808	1					
ANR	3226815	IdentifierDecl	e		3226808	1					
ANR	3226816	IdentifierDeclType	int		3226808	0					
ANR	3226817	Identifier	e		3226808	1					
ANR	3226818	IdentifierDecl	e1		3226808	2					
ANR	3226819	IdentifierDeclType	int		3226808	0					
ANR	3226820	Identifier	e1		3226808	1					
ANR	3226821	IdentifierDecl	m		3226808	3					
ANR	3226822	IdentifierDeclType	int		3226808	0					
ANR	3226823	Identifier	m		3226808	1					
ANR	3226824	IdentifierDecl	s		3226808	4					
ANR	3226825	IdentifierDeclType	int		3226808	0					
ANR	3226826	Identifier	s		3226808	1					
ANR	3226827	IfStatement	if ( f == 0 )		3226808	1					
ANR	3226828	Condition	f == 0	1029:8:32018:32023	3226808	0	True				
ANR	3226829	EqualityExpression	f == 0		3226808	0		==			
ANR	3226830	Identifier	f		3226808	0					
ANR	3226831	PrimaryExpression	0		3226808	1					
ANR	3226832	CompoundStatement		5:4:47:47	3226808	1					
ANR	3226833	ExpressionStatement	_h = 0	1031:8:32040:32046	3226808	0	True				
ANR	3226834	AssignmentExpression	_h = 0		3226808	0		=			
ANR	3226835	Identifier	_h		3226808	0					
ANR	3226836	PrimaryExpression	0		3226808	1					
ANR	3226837	ElseStatement	else		3226808	0					
ANR	3226838	CompoundStatement		9:4:84:84	3226808	0					
ANR	3226839	ExpressionStatement	e = ( f >> 23 ) & 0x000000ff	1035:8:32077:32103	3226808	0	True				
ANR	3226840	AssignmentExpression	e = ( f >> 23 ) & 0x000000ff		3226808	0		=			
ANR	3226841	Identifier	e		3226808	0					
ANR	3226842	BitAndExpression	( f >> 23 ) & 0x000000ff		3226808	1		&			
ANR	3226843	ShiftExpression	f >> 23		3226808	0		>>			
ANR	3226844	Identifier	f		3226808	0					
ANR	3226845	PrimaryExpression	23		3226808	1					
ANR	3226846	PrimaryExpression	0x000000ff		3226808	1					
ANR	3226847	ExpressionStatement	m = ( f & 0x007fffff ) | 0x800000	1036:8:32178:32209	3226808	1	True				
ANR	3226848	AssignmentExpression	m = ( f & 0x007fffff ) | 0x800000		3226808	0		=			
ANR	3226849	Identifier	m		3226808	0					
ANR	3226850	InclusiveOrExpression	( f & 0x007fffff ) | 0x800000		3226808	1		|			
ANR	3226851	BitAndExpression	f & 0x007fffff		3226808	0		&			
ANR	3226852	Identifier	f		3226808	0					
ANR	3226853	PrimaryExpression	0x007fffff		3226808	1					
ANR	3226854	PrimaryExpression	0x800000		3226808	1					
ANR	3226855	IfStatement	if ( e == 0 )		3226808	2					
ANR	3226856	Condition	e == 0	1037:12:32262:32267	3226808	0	True				
ANR	3226857	EqualityExpression	e == 0		3226808	0		==			
ANR	3226858	Identifier	e		3226808	0					
ANR	3226859	PrimaryExpression	0		3226808	1					
ANR	3226860	CompoundStatement		12:20:287:287	3226808	1					
ANR	3226861	ExpressionStatement	m ^= 0x800000	1038:12:32304:32317	3226808	0	True				
ANR	3226862	AssignmentExpression	m ^= 0x800000		3226808	0		^=			
ANR	3226863	Identifier	m		3226808	0					
ANR	3226864	PrimaryExpression	0x800000		3226808	1					
ANR	3226865	ExpressionStatement	e ++	1039:12:32375:32378	3226808	1	True				
ANR	3226866	PostIncDecOperationExpression	e ++		3226808	0					
ANR	3226867	Identifier	e		3226808	0					
ANR	3226868	IncDec	++		3226808	1					
ANR	3226869	ExpressionStatement	e1 = e - 127 + _c	1042:8:32426:32443	3226808	3	True				
ANR	3226870	AssignmentExpression	e1 = e - 127 + _c		3226808	0		=			
ANR	3226871	Identifier	e1		3226808	0					
ANR	3226872	AdditiveExpression	e - 127 + _c		3226808	1		-			
ANR	3226873	Identifier	e		3226808	0					
ANR	3226874	AdditiveExpression	127 + _c		3226808	1		+			
ANR	3226875	PrimaryExpression	127		3226808	0					
ANR	3226876	Identifier	_c		3226808	1					
ANR	3226877	IfStatement	if ( e1 <= 1 )		3226808	4					
ANR	3226878	Condition	e1 <= 1	1044:12:32534:32540	3226808	0	True				
ANR	3226879	RelationalExpression	e1 <= 1		3226808	0		<=			
ANR	3226880	Identifier	e1		3226808	0					
ANR	3226881	PrimaryExpression	1		3226808	1					
ANR	3226882	CompoundStatement		19:21:560:560	3226808	1					
ANR	3226883	IfStatement	if ( e1 < 1 )		3226808	0					
ANR	3226884	Condition	e1 < 1	1045:16:32577:32582	3226808	0	True				
ANR	3226885	RelationalExpression	e1 < 1		3226808	0		<			
ANR	3226886	Identifier	e1		3226808	0					
ANR	3226887	PrimaryExpression	1		3226808	1					
ANR	3226888	ExpressionStatement	m >>= ( 1 - e1 )	1046:16:32601:32615	3226808	1	True				
ANR	3226889	AssignmentExpression	m >>= ( 1 - e1 )		3226808	0		>>=			
ANR	3226890	Identifier	m		3226808	0					
ANR	3226891	AdditiveExpression	1 - e1		3226808	1		-			
ANR	3226892	PrimaryExpression	1		3226808	0					
ANR	3226893	Identifier	e1		3226808	1					
ANR	3226894	ExpressionStatement	e1 = 1	1047:12:32676:32682	3226808	1	True				
ANR	3226895	AssignmentExpression	e1 = 1		3226808	0		=			
ANR	3226896	Identifier	e1		3226808	0					
ANR	3226897	PrimaryExpression	1		3226808	1					
ANR	3226898	IfStatement	if ( ( m & 0x800000 ) == 0 )		3226808	2					
ANR	3226899	Condition	( m & 0x800000 ) == 0	1048:16:32700:32718	3226808	0	True				
ANR	3226900	EqualityExpression	( m & 0x800000 ) == 0		3226808	0		==			
ANR	3226901	BitAndExpression	m & 0x800000		3226808	0		&			
ANR	3226902	Identifier	m		3226808	0					
ANR	3226903	PrimaryExpression	0x800000		3226808	1					
ANR	3226904	PrimaryExpression	0		3226808	1					
ANR	3226905	ExpressionStatement	e1 = 0	1049:16:32781:32787	3226808	1	True				
ANR	3226906	AssignmentExpression	e1 = 0		3226808	0		=			
ANR	3226907	Identifier	e1		3226808	0					
ANR	3226908	PrimaryExpression	0		3226808	1					
ANR	3226909	ExpressionStatement	m &= 0x007fffff	1051:8:32807:32822	3226808	5	True				
ANR	3226910	AssignmentExpression	m &= 0x007fffff		3226808	0		&=			
ANR	3226911	Identifier	m		3226808	0					
ANR	3226912	PrimaryExpression	0x007fffff		3226808	1					
ANR	3226913	ExpressionStatement	_h = ( e1 << _lm ) + ( ( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm ) )	1053:8:32833:32895	3226808	6	True				
ANR	3226914	AssignmentExpression	_h = ( e1 << _lm ) + ( ( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm ) )		3226808	0		=			
ANR	3226915	Identifier	_h		3226808	0					
ANR	3226916	AdditiveExpression	( e1 << _lm ) + ( ( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm ) )		3226808	1		+			
ANR	3226917	ShiftExpression	e1 << _lm		3226808	0		<<			
ANR	3226918	Identifier	e1		3226808	0					
ANR	3226919	Identifier	_lm		3226808	1					
ANR	3226920	ShiftExpression	( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm )		3226808	1		>>			
ANR	3226921	AdditiveExpression	m + ( 1 << ( 23 - _lm - 1 ) )		3226808	0		+			
ANR	3226922	Identifier	m		3226808	0					
ANR	3226923	ShiftExpression	1 << ( 23 - _lm - 1 )		3226808	1		<<			
ANR	3226924	PrimaryExpression	1		3226808	0					
ANR	3226925	AdditiveExpression	23 - _lm - 1		3226808	1		-			
ANR	3226926	PrimaryExpression	23		3226808	0					
ANR	3226927	AdditiveExpression	_lm - 1		3226808	1		-			
ANR	3226928	Identifier	_lm		3226808	0					
ANR	3226929	PrimaryExpression	1		3226808	1					
ANR	3226930	AdditiveExpression	23 - _lm		3226808	1		-			
ANR	3226931	PrimaryExpression	23		3226808	0					
ANR	3226932	Identifier	_lm		3226808	1					
ANR	3226933	ExpressionStatement	s = ( f >> 31 )	1054:8:32953:32966	3226808	7	True				
ANR	3226934	AssignmentExpression	s = ( f >> 31 )		3226808	0		=			
ANR	3226935	Identifier	s		3226808	0					
ANR	3226936	ShiftExpression	f >> 31		3226808	1		>>			
ANR	3226937	Identifier	f		3226808	0					
ANR	3226938	PrimaryExpression	31		3226808	1					
ANR	3226939	ExpressionStatement	_h = ( _h ^ s ) - s	1056:8:33009:33026	3226808	8	True				
ANR	3226940	AssignmentExpression	_h = ( _h ^ s ) - s		3226808	0		=			
ANR	3226941	Identifier	_h		3226808	0					
ANR	3226942	AdditiveExpression	( _h ^ s ) - s		3226808	1		-			
ANR	3226943	ExclusiveOrExpression	_h ^ s		3226808	0		^			
ANR	3226944	Identifier	_h		3226808	0					
ANR	3226945	Identifier	s		3226808	1					
ANR	3226946	Identifier	s		3226808	1					
ANR	3226947	ReturnStatement	return _h ;	1059:4:33040:33049	3226808	2	True				
ANR	3226948	Identifier	_h		3226808	0					
ANR	3226949	ReturnType	static int		3226808	1					
ANR	3226950	Identifier	PreScalingBD32F		3226808	2					
ANR	3226951	ParameterList	"int f , const char _c , const unsigned char _lm"		3226808	3					
ANR	3226952	Parameter	int f	1025:27:31935:31939	3226808	0	True				
ANR	3226953	ParameterType	int		3226808	0					
ANR	3226954	Identifier	f		3226808	1					
ANR	3226955	Parameter	const char _c	1025:34:31942:31954	3226808	1	True				
ANR	3226956	ParameterType	const char		3226808	0					
ANR	3226957	Identifier	_c		3226808	1					
ANR	3226958	Parameter	const unsigned char _lm	1025:49:31957:31979	3226808	2	True				
ANR	3226959	ParameterType	const unsigned char		3226808	0					
ANR	3226960	Identifier	_lm		3226808	1					
ANR	3226961	CFGEntryNode	ENTRY		3226808		True				
ANR	3226962	CFGExitNode	EXIT		3226808		True				
ANR	3226963	Symbol	_lm		3226808						
ANR	3226964	Symbol	s		3226808						
ANR	3226965	Symbol	_c		3226808						
ANR	3226966	Symbol	e		3226808						
ANR	3226967	Symbol	f		3226808						
ANR	3226968	Symbol	_h		3226808						
ANR	3226969	Symbol	e1		3226808						
ANR	3226970	Symbol	m		3226808						
ANR	3226971	Function	forwardRGBE	1062:0:33054:33435							
ANR	3226972	FunctionDef	"forwardRGBE (int RGB , int E)"		3226971	0					
ANR	3226973	CompoundStatement		1063:0:33087:33435	3226971	0					
ANR	3226974	IdentifierDeclStatement	"int iResult = 0 , iAppend = 1 ;"	1064:4:33093:33121	3226971	0	True				
ANR	3226975	IdentifierDecl	iResult = 0		3226971	0					
ANR	3226976	IdentifierDeclType	int		3226971	0					
ANR	3226977	Identifier	iResult		3226971	1					
ANR	3226978	AssignmentExpression	iResult = 0		3226971	2		=			
ANR	3226979	Identifier	iResult		3226971	0					
ANR	3226980	PrimaryExpression	0		3226971	1					
ANR	3226981	IdentifierDecl	iAppend = 1		3226971	1					
ANR	3226982	IdentifierDeclType	int		3226971	0					
ANR	3226983	Identifier	iAppend		3226971	1					
ANR	3226984	AssignmentExpression	iAppend = 1		3226971	2		=			
ANR	3226985	Identifier	iAppend		3226971	0					
ANR	3226986	PrimaryExpression	1		3226971	1					
ANR	3226987	IfStatement	if ( E == 0 )		3226971	1					
ANR	3226988	Condition	E == 0	1066:8:33132:33137	3226971	0	True				
ANR	3226989	EqualityExpression	E == 0		3226971	0		==			
ANR	3226990	Identifier	E		3226971	0					
ANR	3226991	PrimaryExpression	0		3226971	1					
ANR	3226992	ReturnStatement	return 0 ;	1067:8:33148:33156	3226971	1	True				
ANR	3226993	PrimaryExpression	0		3226971	0					
ANR	3226994	ExpressionStatement	E --	1069:4:33163:33166	3226971	2	True				
ANR	3226995	PostIncDecOperationExpression	E --		3226971	0					
ANR	3226996	Identifier	E		3226971	0					
ANR	3226997	IncDec	--		3226971	1					
ANR	3226998	WhileStatement	while ( ( ( RGB & 0x80 ) == 0 ) && ( E > 0 ) )		3226971	3					
ANR	3226999	Condition	( ( RGB & 0x80 ) == 0 ) && ( E > 0 )	1070:11:33179:33208	3226971	0	True				
ANR	3227000	AndExpression	( ( RGB & 0x80 ) == 0 ) && ( E > 0 )		3226971	0		&&			
ANR	3227001	EqualityExpression	( RGB & 0x80 ) == 0		3226971	0		==			
ANR	3227002	BitAndExpression	RGB & 0x80		3226971	0		&			
ANR	3227003	Identifier	RGB		3226971	0					
ANR	3227004	PrimaryExpression	0x80		3226971	1					
ANR	3227005	PrimaryExpression	0		3226971	1					
ANR	3227006	RelationalExpression	E > 0		3226971	1		>			
ANR	3227007	Identifier	E		3226971	0					
ANR	3227008	PrimaryExpression	0		3226971	1					
ANR	3227009	CompoundStatement		8:43:123:123	3226971	1					
ANR	3227010	ExpressionStatement	RGB = ( RGB << 1 ) + iAppend	1071:8:33221:33247	3226971	0	True				
ANR	3227011	AssignmentExpression	RGB = ( RGB << 1 ) + iAppend		3226971	0		=			
ANR	3227012	Identifier	RGB		3226971	0					
ANR	3227013	AdditiveExpression	( RGB << 1 ) + iAppend		3226971	1		+			
ANR	3227014	ShiftExpression	RGB << 1		3226971	0		<<			
ANR	3227015	Identifier	RGB		3226971	0					
ANR	3227016	PrimaryExpression	1		3226971	1					
ANR	3227017	Identifier	iAppend		3226971	1					
ANR	3227018	ExpressionStatement	iAppend = 0	1072:8:33257:33268	3226971	1	True				
ANR	3227019	AssignmentExpression	iAppend = 0		3226971	0		=			
ANR	3227020	Identifier	iAppend		3226971	0					
ANR	3227021	PrimaryExpression	0		3226971	1					
ANR	3227022	ExpressionStatement	E --	1073:8:33278:33281	3226971	2	True				
ANR	3227023	PostIncDecOperationExpression	E --		3226971	0					
ANR	3227024	Identifier	E		3226971	0					
ANR	3227025	IncDec	--		3226971	1					
ANR	3227026	IfStatement	if ( E == 0 )		3226971	4					
ANR	3227027	Condition	E == 0	1076:8:33302:33307	3226971	0	True				
ANR	3227028	EqualityExpression	E == 0		3226971	0		==			
ANR	3227029	Identifier	E		3226971	0					
ANR	3227030	PrimaryExpression	0		3226971	1					
ANR	3227031	CompoundStatement		14:16:222:222	3226971	1					
ANR	3227032	ExpressionStatement	iResult = RGB	1077:8:33320:33333	3226971	0	True				
ANR	3227033	AssignmentExpression	iResult = RGB		3226971	0		=			
ANR	3227034	Identifier	iResult		3226971	0					
ANR	3227035	Identifier	RGB		3226971	1					
ANR	3227036	ElseStatement	else		3226971	0					
ANR	3227037	CompoundStatement		17:9:262:262	3226971	0					
ANR	3227038	ExpressionStatement	E ++	1080:8:33360:33363	3226971	0	True				
ANR	3227039	PostIncDecOperationExpression	E ++		3226971	0					
ANR	3227040	Identifier	E		3226971	0					
ANR	3227041	IncDec	++		3226971	1					
ANR	3227042	ExpressionStatement	iResult = ( RGB & 0x7f ) + ( E << 7 )	1081:8:33373:33406	3226971	1	True				
ANR	3227043	AssignmentExpression	iResult = ( RGB & 0x7f ) + ( E << 7 )		3226971	0		=			
ANR	3227044	Identifier	iResult		3226971	0					
ANR	3227045	AdditiveExpression	( RGB & 0x7f ) + ( E << 7 )		3226971	1		+			
ANR	3227046	BitAndExpression	RGB & 0x7f		3226971	0		&			
ANR	3227047	Identifier	RGB		3226971	0					
ANR	3227048	PrimaryExpression	0x7f		3226971	1					
ANR	3227049	ShiftExpression	E << 7		3226971	1		<<			
ANR	3227050	Identifier	E		3226971	0					
ANR	3227051	PrimaryExpression	7		3226971	1					
ANR	3227052	ReturnStatement	return iResult ;	1084:4:33419:33433	3226971	5	True				
ANR	3227053	Identifier	iResult		3226971	0					
ANR	3227054	ReturnType	int		3226971	1					
ANR	3227055	Identifier	forwardRGBE		3226971	2					
ANR	3227056	ParameterList	"int RGB , int E"		3226971	3					
ANR	3227057	Parameter	int RGB	1062:17:33071:33077	3226971	0	True				
ANR	3227058	ParameterType	int		3226971	0					
ANR	3227059	Identifier	RGB		3226971	1					
ANR	3227060	Parameter	int E	1062:26:33080:33084	3226971	1	True				
ANR	3227061	ParameterType	int		3226971	0					
ANR	3227062	Identifier	E		3226971	1					
ANR	3227063	CFGEntryNode	ENTRY		3226971		True				
ANR	3227064	CFGExitNode	EXIT		3226971		True				
ANR	3227065	Symbol	E		3226971						
ANR	3227066	Symbol	iResult		3226971						
ANR	3227067	Symbol	iAppend		3226971						
ANR	3227068	Symbol	RGB		3226971						
ANR	3227069	Function	set_pad_bytes	1087:0:33438:34022							
ANR	3227070	FunctionDef	"set_pad_bytes (context * con , jxr_image_t image)"		3227069	0					
ANR	3227071	CompoundStatement		1088:0:33490:34022	3227069	0					
ANR	3227072	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		3227069	0					
ANR	3227073	Condition	jxr_get_pixel_format ( image )	1090:12:33570:33596	3227069	0	True				
ANR	3227074	CallExpression	jxr_get_pixel_format ( image )		3227069	0					
ANR	3227075	Callee	jxr_get_pixel_format		3227069	0					
ANR	3227076	Identifier	jxr_get_pixel_format		3227069	0					
ANR	3227077	ArgumentList	image		3227069	1					
ANR	3227078	Argument	image		3227069	0					
ANR	3227079	Identifier	image		3227069	0					
ANR	3227080	CompoundStatement		4:4:112:112	3227069	1					
ANR	3227081	Label	case JXRC_FMT_128bppRGBFloat :	1092:8:33613:33641	3227069	0	True				
ANR	3227082	Identifier	JXRC_FMT_128bppRGBFloat		3227069	0					
ANR	3227083	Label	case JXRC_FMT_128bppRGBFixedPoint :	1093:8:33651:33684	3227069	1	True				
ANR	3227084	Identifier	JXRC_FMT_128bppRGBFixedPoint		3227069	0					
ANR	3227085	ExpressionStatement	con -> padBytes = 32	1094:12:33698:33716	3227069	2	True				
ANR	3227086	AssignmentExpression	con -> padBytes = 32		3227069	0		=			
ANR	3227087	PtrMemberAccess	con -> padBytes		3227069	0					
ANR	3227088	Identifier	con		3227069	0					
ANR	3227089	Identifier	padBytes		3227069	1					
ANR	3227090	PrimaryExpression	32		3227069	1					
ANR	3227091	BreakStatement	break ;	1095:12:33730:33735	3227069	3	True				
ANR	3227092	Label	case JXRC_FMT_64bppRGBFixedPoint :	1096:8:33745:33777	3227069	4	True				
ANR	3227093	Identifier	JXRC_FMT_64bppRGBFixedPoint		3227069	0					
ANR	3227094	Label	case JXRC_FMT_64bppRGBHalf :	1097:8:33787:33813	3227069	5	True				
ANR	3227095	Identifier	JXRC_FMT_64bppRGBHalf		3227069	0					
ANR	3227096	ExpressionStatement	con -> padBytes = 16	1098:12:33827:33845	3227069	6	True				
ANR	3227097	AssignmentExpression	con -> padBytes = 16		3227069	0		=			
ANR	3227098	PtrMemberAccess	con -> padBytes		3227069	0					
ANR	3227099	Identifier	con		3227069	0					
ANR	3227100	Identifier	padBytes		3227069	1					
ANR	3227101	PrimaryExpression	16		3227069	1					
ANR	3227102	BreakStatement	break ;	1099:12:33859:33864	3227069	7	True				
ANR	3227103	Label	case JXRC_FMT_32bppBGR :	1100:8:33874:33896	3227069	8	True				
ANR	3227104	Identifier	JXRC_FMT_32bppBGR		3227069	0					
ANR	3227105	ExpressionStatement	con -> padBytes = 8	1101:12:33910:33927	3227069	9	True				
ANR	3227106	AssignmentExpression	con -> padBytes = 8		3227069	0		=			
ANR	3227107	PtrMemberAccess	con -> padBytes		3227069	0					
ANR	3227108	Identifier	con		3227069	0					
ANR	3227109	Identifier	padBytes		3227069	1					
ANR	3227110	PrimaryExpression	8		3227069	1					
ANR	3227111	BreakStatement	break ;	1102:12:33941:33946	3227069	10	True				
ANR	3227112	Label	default :	1103:8:33956:33963	3227069	11	True				
ANR	3227113	Identifier	default		3227069	0					
ANR	3227114	ExpressionStatement	con -> padBytes = 0	1104:12:33977:33994	3227069	12	True				
ANR	3227115	AssignmentExpression	con -> padBytes = 0		3227069	0		=			
ANR	3227116	PtrMemberAccess	con -> padBytes		3227069	0					
ANR	3227117	Identifier	con		3227069	0					
ANR	3227118	Identifier	padBytes		3227069	1					
ANR	3227119	PrimaryExpression	0		3227069	1					
ANR	3227120	BreakStatement	break ;	1105:12:34008:34013	3227069	13	True				
ANR	3227121	ReturnType	void		3227069	1					
ANR	3227122	Identifier	set_pad_bytes		3227069	2					
ANR	3227123	ParameterList	"context * con , jxr_image_t image"		3227069	3					
ANR	3227124	Parameter	context * con	1087:19:33457:33468	3227069	0	True				
ANR	3227125	ParameterType	context *		3227069	0					
ANR	3227126	Identifier	con		3227069	1					
ANR	3227127	Parameter	jxr_image_t image	1087:33:33471:33487	3227069	1	True				
ANR	3227128	ParameterType	jxr_image_t		3227069	0					
ANR	3227129	Identifier	image		3227069	1					
ANR	3227130	CFGEntryNode	ENTRY		3227069		True				
ANR	3227131	CFGExitNode	EXIT		3227069		True				
ANR	3227132	Symbol	image		3227069						
ANR	3227133	Symbol	con		3227069						
ANR	3227134	Symbol	* con		3227069						
ANR	3227135	Symbol	jxr_get_pixel_format		3227069						
ANR	3227136	Symbol	con -> padBytes		3227069						
ANR	3227137	Function	set_bgr_flag	1110:0:34025:34389							
ANR	3227138	FunctionDef	"set_bgr_flag (context * con , jxr_image_t image)"		3227137	0					
ANR	3227139	CompoundStatement		1111:0:34076:34389	3227137	0					
ANR	3227140	ExpressionStatement	con -> isBgr = 0	1112:4:34082:34096	3227137	0	True				
ANR	3227141	AssignmentExpression	con -> isBgr = 0		3227137	0		=			
ANR	3227142	PtrMemberAccess	con -> isBgr		3227137	0					
ANR	3227143	Identifier	con		3227137	0					
ANR	3227144	Identifier	isBgr		3227137	1					
ANR	3227145	PrimaryExpression	0		3227137	1					
ANR	3227146	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		3227137	1					
ANR	3227147	Condition	jxr_get_pixel_format ( image )	1113:12:34110:34136	3227137	0	True				
ANR	3227148	CallExpression	jxr_get_pixel_format ( image )		3227137	0					
ANR	3227149	Callee	jxr_get_pixel_format		3227137	0					
ANR	3227150	Identifier	jxr_get_pixel_format		3227137	0					
ANR	3227151	ArgumentList	image		3227137	1					
ANR	3227152	Argument	image		3227137	0					
ANR	3227153	Identifier	image		3227137	0					
ANR	3227154	CompoundStatement		4:4:66:66	3227137	1					
ANR	3227155	Label	case JXRC_FMT_24bppBGR :	1115:8:34153:34175	3227137	0	True				
ANR	3227156	Identifier	JXRC_FMT_24bppBGR		3227137	0					
ANR	3227157	Label	case JXRC_FMT_32bppBGR :	1116:8:34185:34207	3227137	1	True				
ANR	3227158	Identifier	JXRC_FMT_32bppBGR		3227137	0					
ANR	3227159	Label	case JXRC_FMT_32bppBGRA :	1117:8:34217:34240	3227137	2	True				
ANR	3227160	Identifier	JXRC_FMT_32bppBGRA		3227137	0					
ANR	3227161	Label	case JXRC_FMT_32bppPBGRA :	1118:8:34250:34274	3227137	3	True				
ANR	3227162	Identifier	JXRC_FMT_32bppPBGRA		3227137	0					
ANR	3227163	ExpressionStatement	con -> isBgr = 1	1119:12:34296:34310	3227137	4	True				
ANR	3227164	AssignmentExpression	con -> isBgr = 1		3227137	0		=			
ANR	3227165	PtrMemberAccess	con -> isBgr		3227137	0					
ANR	3227166	Identifier	con		3227137	0					
ANR	3227167	Identifier	isBgr		3227137	1					
ANR	3227168	PrimaryExpression	1		3227137	1					
ANR	3227169	BreakStatement	break ;	1120:12:34324:34329	3227137	5	True				
ANR	3227170	Label	default :	1121:8:34339:34346	3227137	6	True				
ANR	3227171	Identifier	default		3227137	0					
ANR	3227172	BreakStatement	break ;	1122:12:34360:34365	3227137	7	True				
ANR	3227173	ReturnStatement	return ;	1124:4:34381:34387	3227137	2	True				
ANR	3227174	ReturnType	void		3227137	1					
ANR	3227175	Identifier	set_bgr_flag		3227137	2					
ANR	3227176	ParameterList	"context * con , jxr_image_t image"		3227137	3					
ANR	3227177	Parameter	context * con	1110:18:34043:34054	3227137	0	True				
ANR	3227178	ParameterType	context *		3227137	0					
ANR	3227179	Identifier	con		3227137	1					
ANR	3227180	Parameter	jxr_image_t image	1110:32:34057:34073	3227137	1	True				
ANR	3227181	ParameterType	jxr_image_t		3227137	0					
ANR	3227182	Identifier	image		3227137	1					
ANR	3227183	CFGEntryNode	ENTRY		3227137		True				
ANR	3227184	CFGExitNode	EXIT		3227137		True				
ANR	3227185	Symbol	image		3227137						
ANR	3227186	Symbol	con		3227137						
ANR	3227187	Symbol	* con		3227137						
ANR	3227188	Symbol	jxr_get_pixel_format		3227137						
ANR	3227189	Symbol	con -> isBgr		3227137						
ANR	3227190	Function	switch_r_b	1127:0:34392:34951							
ANR	3227191	FunctionDef	"switch_r_b (void * data , int bpi)"		3227190	0					
ANR	3227192	CompoundStatement		1128:0:34429:34951	3227190	0					
ANR	3227193	IdentifierDeclStatement	uint32_t tmp ;	1129:4:34435:34447	3227190	0	True				
ANR	3227194	IdentifierDecl	tmp		3227190	0					
ANR	3227195	IdentifierDeclType	uint32_t		3227190	0					
ANR	3227196	Identifier	tmp		3227190	1					
ANR	3227197	ExpressionStatement	data = ( uint8_t * ) data	1130:4:34453:34474	3227190	1	True				
ANR	3227198	AssignmentExpression	data = ( uint8_t * ) data		3227190	0		=			
ANR	3227199	Identifier	data		3227190	0					
ANR	3227200	CastExpression	( uint8_t * ) data		3227190	1					
ANR	3227201	CastTarget	uint8_t *		3227190	0					
ANR	3227202	Identifier	data		3227190	1					
ANR	3227203	IfStatement	if ( bpi == 8 )		3227190	2					
ANR	3227204	Condition	bpi == 8	1131:7:34483:34490	3227190	0	True				
ANR	3227205	EqualityExpression	bpi == 8		3227190	0		==			
ANR	3227206	Identifier	bpi		3227190	0					
ANR	3227207	PrimaryExpression	8		3227190	1					
ANR	3227208	CompoundStatement		6:8:77:104	3227190	1					
ANR	3227209	IdentifierDeclStatement	uint8_t * p = ( uint8_t * ) data ;	1133:8:34507:34534	3227190	0	True				
ANR	3227210	IdentifierDecl	* p = ( uint8_t * ) data		3227190	0					
ANR	3227211	IdentifierDeclType	uint8_t *		3227190	0					
ANR	3227212	Identifier	p		3227190	1					
ANR	3227213	AssignmentExpression	* p = ( uint8_t * ) data		3227190	2		=			
ANR	3227214	Identifier	p		3227190	0					
ANR	3227215	CastExpression	( uint8_t * ) data		3227190	1					
ANR	3227216	CastTarget	uint8_t *		3227190	0					
ANR	3227217	Identifier	data		3227190	1					
ANR	3227218	ExpressionStatement	tmp = p [ 0 ]	1134:8:34544:34554	3227190	1	True				
ANR	3227219	AssignmentExpression	tmp = p [ 0 ]		3227190	0		=			
ANR	3227220	Identifier	tmp		3227190	0					
ANR	3227221	ArrayIndexing	p [ 0 ]		3227190	1					
ANR	3227222	Identifier	p		3227190	0					
ANR	3227223	PrimaryExpression	0		3227190	1					
ANR	3227224	ExpressionStatement	p [ 0 ] = p [ 2 ]	1135:8:34564:34575	3227190	2	True				
ANR	3227225	AssignmentExpression	p [ 0 ] = p [ 2 ]		3227190	0		=			
ANR	3227226	ArrayIndexing	p [ 0 ]		3227190	0					
ANR	3227227	Identifier	p		3227190	0					
ANR	3227228	PrimaryExpression	0		3227190	1					
ANR	3227229	ArrayIndexing	p [ 2 ]		3227190	1					
ANR	3227230	Identifier	p		3227190	0					
ANR	3227231	PrimaryExpression	2		3227190	1					
ANR	3227232	ExpressionStatement	p [ 2 ] = tmp	1136:8:34585:34595	3227190	3	True				
ANR	3227233	AssignmentExpression	p [ 2 ] = tmp		3227190	0		=			
ANR	3227234	ArrayIndexing	p [ 2 ]		3227190	0					
ANR	3227235	Identifier	p		3227190	0					
ANR	3227236	PrimaryExpression	2		3227190	1					
ANR	3227237	Identifier	tmp		3227190	1					
ANR	3227238	ElseStatement	else		3227190	0					
ANR	3227239	IfStatement	if ( bpi == 16 )		3227190	0					
ANR	3227240	Condition	bpi == 16	1140:12:34629:34637	3227190	0	True				
ANR	3227241	EqualityExpression	bpi == 16		3227190	0		==			
ANR	3227242	Identifier	bpi		3227190	0					
ANR	3227243	PrimaryExpression	16		3227190	1					
ANR	3227244	CompoundStatement		15:8:224:253	3227190	1					
ANR	3227245	IdentifierDeclStatement	uint16_t * p = ( uint16_t * ) data ;	1142:8:34654:34683	3227190	0	True				
ANR	3227246	IdentifierDecl	* p = ( uint16_t * ) data		3227190	0					
ANR	3227247	IdentifierDeclType	uint16_t *		3227190	0					
ANR	3227248	Identifier	p		3227190	1					
ANR	3227249	AssignmentExpression	* p = ( uint16_t * ) data		3227190	2		=			
ANR	3227250	Identifier	p		3227190	0					
ANR	3227251	CastExpression	( uint16_t * ) data		3227190	1					
ANR	3227252	CastTarget	uint16_t *		3227190	0					
ANR	3227253	Identifier	data		3227190	1					
ANR	3227254	ExpressionStatement	tmp = p [ 0 ]	1143:8:34693:34703	3227190	1	True				
ANR	3227255	AssignmentExpression	tmp = p [ 0 ]		3227190	0		=			
ANR	3227256	Identifier	tmp		3227190	0					
ANR	3227257	ArrayIndexing	p [ 0 ]		3227190	1					
ANR	3227258	Identifier	p		3227190	0					
ANR	3227259	PrimaryExpression	0		3227190	1					
ANR	3227260	ExpressionStatement	p [ 0 ] = p [ 2 ]	1144:8:34713:34724	3227190	2	True				
ANR	3227261	AssignmentExpression	p [ 0 ] = p [ 2 ]		3227190	0		=			
ANR	3227262	ArrayIndexing	p [ 0 ]		3227190	0					
ANR	3227263	Identifier	p		3227190	0					
ANR	3227264	PrimaryExpression	0		3227190	1					
ANR	3227265	ArrayIndexing	p [ 2 ]		3227190	1					
ANR	3227266	Identifier	p		3227190	0					
ANR	3227267	PrimaryExpression	2		3227190	1					
ANR	3227268	ExpressionStatement	p [ 2 ] = tmp	1145:8:34734:34744	3227190	3	True				
ANR	3227269	AssignmentExpression	p [ 2 ] = tmp		3227190	0		=			
ANR	3227270	ArrayIndexing	p [ 2 ]		3227190	0					
ANR	3227271	Identifier	p		3227190	0					
ANR	3227272	PrimaryExpression	2		3227190	1					
ANR	3227273	Identifier	tmp		3227190	1					
ANR	3227274	ElseStatement	else		3227190	0					
ANR	3227275	IfStatement	if ( bpi == 32 )		3227190	0					
ANR	3227276	Condition	bpi == 32	1147:12:34764:34772	3227190	0	True				
ANR	3227277	EqualityExpression	bpi == 32		3227190	0		==			
ANR	3227278	Identifier	bpi		3227190	0					
ANR	3227279	PrimaryExpression	32		3227190	1					
ANR	3227280	CompoundStatement		22:8:359:389	3227190	1					
ANR	3227281	IdentifierDeclStatement	uint32_t * p = ( uint32_t * ) data ;	1149:8:34789:34819	3227190	0	True				
ANR	3227282	IdentifierDecl	* p = ( uint32_t * ) data		3227190	0					
ANR	3227283	IdentifierDeclType	uint32_t *		3227190	0					
ANR	3227284	Identifier	p		3227190	1					
ANR	3227285	AssignmentExpression	* p = ( uint32_t * ) data		3227190	2		=			
ANR	3227286	Identifier	p		3227190	0					
ANR	3227287	CastExpression	( uint32_t * ) data		3227190	1					
ANR	3227288	CastTarget	uint32_t *		3227190	0					
ANR	3227289	Identifier	data		3227190	1					
ANR	3227290	ExpressionStatement	tmp = p [ 0 ]	1150:8:34829:34839	3227190	1	True				
ANR	3227291	AssignmentExpression	tmp = p [ 0 ]		3227190	0		=			
ANR	3227292	Identifier	tmp		3227190	0					
ANR	3227293	ArrayIndexing	p [ 0 ]		3227190	1					
ANR	3227294	Identifier	p		3227190	0					
ANR	3227295	PrimaryExpression	0		3227190	1					
ANR	3227296	ExpressionStatement	p [ 0 ] = p [ 2 ]	1151:8:34849:34860	3227190	2	True				
ANR	3227297	AssignmentExpression	p [ 0 ] = p [ 2 ]		3227190	0		=			
ANR	3227298	ArrayIndexing	p [ 0 ]		3227190	0					
ANR	3227299	Identifier	p		3227190	0					
ANR	3227300	PrimaryExpression	0		3227190	1					
ANR	3227301	ArrayIndexing	p [ 2 ]		3227190	1					
ANR	3227302	Identifier	p		3227190	0					
ANR	3227303	PrimaryExpression	2		3227190	1					
ANR	3227304	ExpressionStatement	p [ 2 ] = tmp	1152:8:34870:34880	3227190	3	True				
ANR	3227305	AssignmentExpression	p [ 2 ] = tmp		3227190	0		=			
ANR	3227306	ArrayIndexing	p [ 2 ]		3227190	0					
ANR	3227307	Identifier	p		3227190	0					
ANR	3227308	PrimaryExpression	2		3227190	1					
ANR	3227309	Identifier	tmp		3227190	1					
ANR	3227310	ElseStatement	else		3227190	0					
ANR	3227311	CompoundStatement		28:4:479:479	3227190	0					
ANR	3227312	ExpressionStatement	"assert ( ! ""Invalid bpi\\n"" )"	1156:8:34919:34943	3227190	0	True				
ANR	3227313	CallExpression	"assert ( ! ""Invalid bpi\\n"" )"		3227190	0					
ANR	3227314	Callee	assert		3227190	0					
ANR	3227315	Identifier	assert		3227190	0					
ANR	3227316	ArgumentList	"! ""Invalid bpi\\n"""		3227190	1					
ANR	3227317	Argument	"! ""Invalid bpi\\n"""		3227190	0					
ANR	3227318	UnaryOperationExpression	"! ""Invalid bpi\\n"""		3227190	0					
ANR	3227319	UnaryOperator	!		3227190	0					
ANR	3227320	PrimaryExpression	"""Invalid bpi\\n"""		3227190	1					
ANR	3227321	ReturnType	void		3227190	1					
ANR	3227322	Identifier	switch_r_b		3227190	2					
ANR	3227323	ParameterList	"void * data , int bpi"		3227190	3					
ANR	3227324	Parameter	void * data	1127:16:34408:34417	3227190	0	True				
ANR	3227325	ParameterType	void *		3227190	0					
ANR	3227326	Identifier	data		3227190	1					
ANR	3227327	Parameter	int bpi	1127:28:34420:34426	3227190	1	True				
ANR	3227328	ParameterType	int		3227190	0					
ANR	3227329	Identifier	bpi		3227190	1					
ANR	3227330	CFGEntryNode	ENTRY		3227190		True				
ANR	3227331	CFGExitNode	EXIT		3227190		True				
ANR	3227332	Symbol	p		3227190						
ANR	3227333	Symbol	data		3227190						
ANR	3227334	Symbol	tmp		3227190						
ANR	3227335	Symbol	bpi		3227190						
ANR	3227336	Symbol	* p		3227190						
ANR	3227337	Function	read_setup	1160:0:34954:35278							
ANR	3227338	FunctionDef	read_setup (context * con)		3227337	0					
ANR	3227339	CompoundStatement		1161:0:34991:35278	3227337	0					
ANR	3227340	IfStatement	if ( con -> line == con -> nlines )		3227337	0					
ANR	3227341	Condition	con -> line == con -> nlines	1162:8:35001:35024	3227337	0	True				
ANR	3227342	EqualityExpression	con -> line == con -> nlines		3227337	0		==			
ANR	3227343	PtrMemberAccess	con -> line		3227337	0					
ANR	3227344	Identifier	con		3227337	0					
ANR	3227345	Identifier	line		3227337	1					
ANR	3227346	PtrMemberAccess	con -> nlines		3227337	1					
ANR	3227347	Identifier	con		3227337	0					
ANR	3227348	Identifier	nlines		3227337	1					
ANR	3227349	CompoundStatement		2:34:35:35	3227337	1					
ANR	3227350	IfStatement	if ( con -> strip == con -> nstrips )		3227337	0					
ANR	3227351	Condition	con -> strip == con -> nstrips	1163:12:35041:35066	3227337	0	True				
ANR	3227352	EqualityExpression	con -> strip == con -> nstrips		3227337	0		==			
ANR	3227353	PtrMemberAccess	con -> strip		3227337	0					
ANR	3227354	Identifier	con		3227337	0					
ANR	3227355	Identifier	strip		3227337	1					
ANR	3227356	PtrMemberAccess	con -> nstrips		3227337	1					
ANR	3227357	Identifier	con		3227337	0					
ANR	3227358	Identifier	nstrips		3227337	1					
ANR	3227359	ExpressionStatement	"error ( ""unexpected end of data encountered in input file %s"" , con -> name )"	1164:12:35081:35152	3227337	1	True				
ANR	3227360	CallExpression	"error ( ""unexpected end of data encountered in input file %s"" , con -> name )"		3227337	0					
ANR	3227361	Callee	error		3227337	0					
ANR	3227362	Identifier	error		3227337	0					
ANR	3227363	ArgumentList	"""unexpected end of data encountered in input file %s"""		3227337	1					
ANR	3227364	Argument	"""unexpected end of data encountered in input file %s"""		3227337	0					
ANR	3227365	PrimaryExpression	"""unexpected end of data encountered in input file %s"""		3227337	0					
ANR	3227366	Argument	con -> name		3227337	1					
ANR	3227367	PtrMemberAccess	con -> name		3227337	0					
ANR	3227368	Identifier	con		3227337	0					
ANR	3227369	Identifier	name		3227337	1					
ANR	3227370	ExpressionStatement	"seek_file ( con , get_tif_datum ( con , con -> offoff , con -> strip ) , SEEK_SET )"	1165:8:35162:35231	3227337	1	True				
ANR	3227371	CallExpression	"seek_file ( con , get_tif_datum ( con , con -> offoff , con -> strip ) , SEEK_SET )"		3227337	0					
ANR	3227372	Callee	seek_file		3227337	0					
ANR	3227373	Identifier	seek_file		3227337	0					
ANR	3227374	ArgumentList	con		3227337	1					
ANR	3227375	Argument	con		3227337	0					
ANR	3227376	Identifier	con		3227337	0					
ANR	3227377	Argument	"get_tif_datum ( con , con -> offoff , con -> strip )"		3227337	1					
ANR	3227378	CallExpression	"get_tif_datum ( con , con -> offoff , con -> strip )"		3227337	0					
ANR	3227379	Callee	get_tif_datum		3227337	0					
ANR	3227380	Identifier	get_tif_datum		3227337	0					
ANR	3227381	ArgumentList	con		3227337	1					
ANR	3227382	Argument	con		3227337	0					
ANR	3227383	Identifier	con		3227337	0					
ANR	3227384	Argument	con -> offoff		3227337	1					
ANR	3227385	PtrMemberAccess	con -> offoff		3227337	0					
ANR	3227386	Identifier	con		3227337	0					
ANR	3227387	Identifier	offoff		3227337	1					
ANR	3227388	Argument	con -> strip		3227337	2					
ANR	3227389	PtrMemberAccess	con -> strip		3227337	0					
ANR	3227390	Identifier	con		3227337	0					
ANR	3227391	Identifier	strip		3227337	1					
ANR	3227392	Argument	SEEK_SET		3227337	2					
ANR	3227393	Identifier	SEEK_SET		3227337	0					
ANR	3227394	ExpressionStatement	con -> strip ++	1166:8:35241:35253	3227337	2	True				
ANR	3227395	PostIncDecOperationExpression	con -> strip ++		3227337	0					
ANR	3227396	PtrMemberAccess	con -> strip		3227337	0					
ANR	3227397	Identifier	con		3227337	0					
ANR	3227398	Identifier	strip		3227337	1					
ANR	3227399	IncDec	++		3227337	1					
ANR	3227400	ExpressionStatement	con -> line ++	1168:4:35265:35276	3227337	1	True				
ANR	3227401	PostIncDecOperationExpression	con -> line ++		3227337	0					
ANR	3227402	PtrMemberAccess	con -> line		3227337	0					
ANR	3227403	Identifier	con		3227337	0					
ANR	3227404	Identifier	line		3227337	1					
ANR	3227405	IncDec	++		3227337	1					
ANR	3227406	ReturnType	static void		3227337	1					
ANR	3227407	Identifier	read_setup		3227337	2					
ANR	3227408	ParameterList	context * con		3227337	3					
ANR	3227409	Parameter	context * con	1160:23:34977:34988	3227337	0	True				
ANR	3227410	ParameterType	context *		3227337	0					
ANR	3227411	Identifier	con		3227337	1					
ANR	3227412	CFGEntryNode	ENTRY		3227337		True				
ANR	3227413	CFGExitNode	EXIT		3227337		True				
ANR	3227414	Symbol	SEEK_SET		3227337						
ANR	3227415	Symbol	con -> strip		3227337						
ANR	3227416	Symbol	con		3227337						
ANR	3227417	Symbol	* con		3227337						
ANR	3227418	Symbol	con -> line		3227337						
ANR	3227419	Symbol	con -> offoff		3227337						
ANR	3227420	Symbol	con -> nlines		3227337						
ANR	3227421	Symbol	con -> nstrips		3227337						
ANR	3227422	Symbol	get_tif_datum		3227337						
ANR	3227423	Symbol	con -> name		3227337						
ANR	3227424	Function	read_file_YCC	1171:0:35281:43197							
ANR	3227425	FunctionDef	"read_file_YCC (jxr_image_t image , int mx , int my , int * data)"		3227424	0					
ANR	3227426	CompoundStatement		1171:65:35346:43197	3227424	0					
ANR	3227427	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1173:4:35442:35492	3227424	0	True				
ANR	3227428	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3227424	0					
ANR	3227429	IdentifierDeclType	context *		3227424	0					
ANR	3227430	Identifier	con		3227424	1					
ANR	3227431	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3227424	2		=			
ANR	3227432	Identifier	con		3227424	0					
ANR	3227433	CastExpression	( context * ) jxr_get_user_data ( image )		3227424	1					
ANR	3227434	CastTarget	context *		3227424	0					
ANR	3227435	CallExpression	jxr_get_user_data ( image )		3227424	1					
ANR	3227436	Callee	jxr_get_user_data		3227424	0					
ANR	3227437	Identifier	jxr_get_user_data		3227424	0					
ANR	3227438	ArgumentList	image		3227424	1					
ANR	3227439	Argument	image		3227424	0					
ANR	3227440	Identifier	image		3227424	0					
ANR	3227441	IdentifierDeclStatement	int num_channels = con -> ncomp ;	1174:4:35498:35527	3227424	1	True				
ANR	3227442	IdentifierDecl	num_channels = con -> ncomp		3227424	0					
ANR	3227443	IdentifierDeclType	int		3227424	0					
ANR	3227444	Identifier	num_channels		3227424	1					
ANR	3227445	AssignmentExpression	num_channels = con -> ncomp		3227424	2		=			
ANR	3227446	Identifier	num_channels		3227424	0					
ANR	3227447	PtrMemberAccess	con -> ncomp		3227424	1					
ANR	3227448	Identifier	con		3227424	0					
ANR	3227449	Identifier	ncomp		3227424	1					
ANR	3227450	IdentifierDeclStatement	"unsigned int widthY = con -> wid , heightY = con -> hei ;"	1176:4:35534:35584	3227424	2	True				
ANR	3227451	IdentifierDecl	widthY = con -> wid		3227424	0					
ANR	3227452	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227453	Identifier	widthY		3227424	1					
ANR	3227454	AssignmentExpression	widthY = con -> wid		3227424	2		=			
ANR	3227455	Identifier	widthY		3227424	0					
ANR	3227456	PtrMemberAccess	con -> wid		3227424	1					
ANR	3227457	Identifier	con		3227424	0					
ANR	3227458	Identifier	wid		3227424	1					
ANR	3227459	IdentifierDecl	heightY = con -> hei		3227424	1					
ANR	3227460	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227461	Identifier	heightY		3227424	1					
ANR	3227462	AssignmentExpression	heightY = con -> hei		3227424	2		=			
ANR	3227463	Identifier	heightY		3227424	0					
ANR	3227464	PtrMemberAccess	con -> hei		3227424	1					
ANR	3227465	Identifier	con		3227424	0					
ANR	3227466	Identifier	hei		3227424	1					
ANR	3227467	IdentifierDeclStatement	unsigned int widthUV = con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 ) ;	1177:4:35590:35681	3227424	3	True				
ANR	3227468	IdentifierDecl	widthUV = con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 )		3227424	0					
ANR	3227469	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227470	Identifier	widthUV		3227424	1					
ANR	3227471	AssignmentExpression	widthUV = con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 )		3227424	2		=			
ANR	3227472	Identifier	widthUV		3227424	0					
ANR	3227473	ShiftExpression	con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 )		3227424	1		>>			
ANR	3227474	PtrMemberAccess	con -> wid		3227424	0					
ANR	3227475	Identifier	con		3227424	0					
ANR	3227476	Identifier	wid		3227424	1					
ANR	3227477	ConditionalExpression	( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0		3227424	1					
ANR	3227478	Condition	con -> ycc_format == 1 || con -> ycc_format == 2		3227424	0					
ANR	3227479	OrExpression	con -> ycc_format == 1 || con -> ycc_format == 2		3227424	0		||			
ANR	3227480	EqualityExpression	con -> ycc_format == 1		3227424	0		==			
ANR	3227481	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3227482	Identifier	con		3227424	0					
ANR	3227483	Identifier	ycc_format		3227424	1					
ANR	3227484	PrimaryExpression	1		3227424	1					
ANR	3227485	EqualityExpression	con -> ycc_format == 2		3227424	1		==			
ANR	3227486	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3227487	Identifier	con		3227424	0					
ANR	3227488	Identifier	ycc_format		3227424	1					
ANR	3227489	PrimaryExpression	2		3227424	1					
ANR	3227490	PrimaryExpression	1		3227424	1					
ANR	3227491	PrimaryExpression	0		3227424	2					
ANR	3227492	IdentifierDeclStatement	unsigned int heightUV = con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 ) ;	1178:4:35687:35753	3227424	4	True				
ANR	3227493	IdentifierDecl	heightUV = con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 )		3227424	0					
ANR	3227494	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227495	Identifier	heightUV		3227424	1					
ANR	3227496	AssignmentExpression	heightUV = con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 )		3227424	2		=			
ANR	3227497	Identifier	heightUV		3227424	0					
ANR	3227498	ShiftExpression	con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 )		3227424	1		>>			
ANR	3227499	PtrMemberAccess	con -> hei		3227424	0					
ANR	3227500	Identifier	con		3227424	0					
ANR	3227501	Identifier	hei		3227424	1					
ANR	3227502	ConditionalExpression	con -> ycc_format == 1 ? 1 : 0		3227424	1					
ANR	3227503	Condition	con -> ycc_format == 1		3227424	0					
ANR	3227504	EqualityExpression	con -> ycc_format == 1		3227424	0		==			
ANR	3227505	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3227506	Identifier	con		3227424	0					
ANR	3227507	Identifier	ycc_format		3227424	1					
ANR	3227508	PrimaryExpression	1		3227424	1					
ANR	3227509	PrimaryExpression	1		3227424	1					
ANR	3227510	PrimaryExpression	0		3227424	2					
ANR	3227511	IdentifierDeclStatement	unsigned int MBheightY = 16 ;	1179:4:35759:35786	3227424	5	True				
ANR	3227512	IdentifierDecl	MBheightY = 16		3227424	0					
ANR	3227513	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227514	Identifier	MBheightY		3227424	1					
ANR	3227515	AssignmentExpression	MBheightY = 16		3227424	2		=			
ANR	3227516	Identifier	MBheightY		3227424	0					
ANR	3227517	PrimaryExpression	16		3227424	1					
ANR	3227518	IdentifierDeclStatement	unsigned int MBheightUV = con -> ycc_format == 1 ? 8 : 16 ;	1180:4:35792:35847	3227424	6	True				
ANR	3227519	IdentifierDecl	MBheightUV = con -> ycc_format == 1 ? 8 : 16		3227424	0					
ANR	3227520	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227521	Identifier	MBheightUV		3227424	1					
ANR	3227522	AssignmentExpression	MBheightUV = con -> ycc_format == 1 ? 8 : 16		3227424	2		=			
ANR	3227523	Identifier	MBheightUV		3227424	0					
ANR	3227524	ConditionalExpression	con -> ycc_format == 1 ? 8 : 16		3227424	1					
ANR	3227525	Condition	con -> ycc_format == 1		3227424	0					
ANR	3227526	EqualityExpression	con -> ycc_format == 1		3227424	0		==			
ANR	3227527	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3227528	Identifier	con		3227424	0					
ANR	3227529	Identifier	ycc_format		3227424	1					
ANR	3227530	PrimaryExpression	1		3227424	1					
ANR	3227531	PrimaryExpression	8		3227424	1					
ANR	3227532	PrimaryExpression	16		3227424	2					
ANR	3227533	IdentifierDeclStatement	unsigned int sizeY = widthY * heightY ;	1181:4:35853:35890	3227424	7	True				
ANR	3227534	IdentifierDecl	sizeY = widthY * heightY		3227424	0					
ANR	3227535	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227536	Identifier	sizeY		3227424	1					
ANR	3227537	AssignmentExpression	sizeY = widthY * heightY		3227424	2		=			
ANR	3227538	Identifier	sizeY		3227424	0					
ANR	3227539	MultiplicativeExpression	widthY * heightY		3227424	1		*			
ANR	3227540	Identifier	widthY		3227424	0					
ANR	3227541	Identifier	heightY		3227424	1					
ANR	3227542	IdentifierDeclStatement	unsigned int sizeUV = widthUV * heightUV ;	1182:4:35896:35936	3227424	8	True				
ANR	3227543	IdentifierDecl	sizeUV = widthUV * heightUV		3227424	0					
ANR	3227544	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227545	Identifier	sizeUV		3227424	1					
ANR	3227546	AssignmentExpression	sizeUV = widthUV * heightUV		3227424	2		=			
ANR	3227547	Identifier	sizeUV		3227424	0					
ANR	3227548	MultiplicativeExpression	widthUV * heightUV		3227424	1		*			
ANR	3227549	Identifier	widthUV		3227424	0					
ANR	3227550	Identifier	heightUV		3227424	1					
ANR	3227551	IfStatement	if ( my != con -> my )		3227424	9					
ANR	3227552	Condition	my != con -> my	1184:8:35947:35959	3227424	0	True				
ANR	3227553	EqualityExpression	my != con -> my		3227424	0		!=			
ANR	3227554	Identifier	my		3227424	0					
ANR	3227555	PtrMemberAccess	con -> my		3227424	1					
ANR	3227556	Identifier	con		3227424	0					
ANR	3227557	Identifier	my		3227424	1					
ANR	3227558	CompoundStatement		14:23:615:615	3227424	1					
ANR	3227559	IfStatement	if ( con -> bpi == 8 )		3227424	0					
ANR	3227560	Condition	con -> bpi == 8	1185:12:35976:35988	3227424	0	True				
ANR	3227561	EqualityExpression	con -> bpi == 8		3227424	0		==			
ANR	3227562	PtrMemberAccess	con -> bpi		3227424	0					
ANR	3227563	Identifier	con		3227424	0					
ANR	3227564	Identifier	bpi		3227424	1					
ANR	3227565	PrimaryExpression	8		3227424	1					
ANR	3227566	CompoundStatement		21:12:949:981	3227424	1					
ANR	3227567	IdentifierDeclStatement	unsigned int offsetY = my * MBheightY * widthY ;	1186:12:36005:36051	3227424	0	True				
ANR	3227568	IdentifierDecl	offsetY = my * MBheightY * widthY		3227424	0					
ANR	3227569	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227570	Identifier	offsetY		3227424	1					
ANR	3227571	AssignmentExpression	offsetY = my * MBheightY * widthY		3227424	2		=			
ANR	3227572	Identifier	offsetY		3227424	0					
ANR	3227573	MultiplicativeExpression	my * MBheightY * widthY		3227424	1		*			
ANR	3227574	Identifier	my		3227424	0					
ANR	3227575	MultiplicativeExpression	MBheightY * widthY		3227424	1		*			
ANR	3227576	Identifier	MBheightY		3227424	0					
ANR	3227577	Identifier	widthY		3227424	1					
ANR	3227578	IdentifierDeclStatement	unsigned int offsetU = sizeY + my * MBheightUV * widthUV ;	1187:12:36065:36121	3227424	1	True				
ANR	3227579	IdentifierDecl	offsetU = sizeY + my * MBheightUV * widthUV		3227424	0					
ANR	3227580	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227581	Identifier	offsetU		3227424	1					
ANR	3227582	AssignmentExpression	offsetU = sizeY + my * MBheightUV * widthUV		3227424	2		=			
ANR	3227583	Identifier	offsetU		3227424	0					
ANR	3227584	AdditiveExpression	sizeY + my * MBheightUV * widthUV		3227424	1		+			
ANR	3227585	Identifier	sizeY		3227424	0					
ANR	3227586	MultiplicativeExpression	my * MBheightUV * widthUV		3227424	1		*			
ANR	3227587	Identifier	my		3227424	0					
ANR	3227588	MultiplicativeExpression	MBheightUV * widthUV		3227424	1		*			
ANR	3227589	Identifier	MBheightUV		3227424	0					
ANR	3227590	Identifier	widthUV		3227424	1					
ANR	3227591	IdentifierDeclStatement	unsigned int offsetV = sizeY + sizeUV + my * MBheightUV * widthUV ;	1188:12:36135:36200	3227424	2	True				
ANR	3227592	IdentifierDecl	offsetV = sizeY + sizeUV + my * MBheightUV * widthUV		3227424	0					
ANR	3227593	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227594	Identifier	offsetV		3227424	1					
ANR	3227595	AssignmentExpression	offsetV = sizeY + sizeUV + my * MBheightUV * widthUV		3227424	2		=			
ANR	3227596	Identifier	offsetV		3227424	0					
ANR	3227597	AdditiveExpression	sizeY + sizeUV + my * MBheightUV * widthUV		3227424	1		+			
ANR	3227598	Identifier	sizeY		3227424	0					
ANR	3227599	AdditiveExpression	sizeUV + my * MBheightUV * widthUV		3227424	1		+			
ANR	3227600	Identifier	sizeUV		3227424	0					
ANR	3227601	MultiplicativeExpression	my * MBheightUV * widthUV		3227424	1		*			
ANR	3227602	Identifier	my		3227424	0					
ANR	3227603	MultiplicativeExpression	MBheightUV * widthUV		3227424	1		*			
ANR	3227604	Identifier	MBheightUV		3227424	0					
ANR	3227605	Identifier	widthUV		3227424	1					
ANR	3227606	IdentifierDeclStatement	unsigned int offsetA = sizeY + 2 * sizeUV + my * MBheightY * widthY ;	1189:12:36214:36281	3227424	3	True				
ANR	3227607	IdentifierDecl	offsetA = sizeY + 2 * sizeUV + my * MBheightY * widthY		3227424	0					
ANR	3227608	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227609	Identifier	offsetA		3227424	1					
ANR	3227610	AssignmentExpression	offsetA = sizeY + 2 * sizeUV + my * MBheightY * widthY		3227424	2		=			
ANR	3227611	Identifier	offsetA		3227424	0					
ANR	3227612	AdditiveExpression	sizeY + 2 * sizeUV + my * MBheightY * widthY		3227424	1		+			
ANR	3227613	Identifier	sizeY		3227424	0					
ANR	3227614	AdditiveExpression	2 * sizeUV + my * MBheightY * widthY		3227424	1		+			
ANR	3227615	MultiplicativeExpression	2 * sizeUV		3227424	0		*			
ANR	3227616	PrimaryExpression	2		3227424	0					
ANR	3227617	Identifier	sizeUV		3227424	1					
ANR	3227618	MultiplicativeExpression	my * MBheightY * widthY		3227424	1		*			
ANR	3227619	Identifier	my		3227424	0					
ANR	3227620	MultiplicativeExpression	MBheightY * widthY		3227424	1		*			
ANR	3227621	Identifier	MBheightY		3227424	0					
ANR	3227622	Identifier	widthY		3227424	1					
ANR	3227623	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1191:12:36296:36328	3227424	4	True				
ANR	3227624	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		3227424	0					
ANR	3227625	IdentifierDeclType	uint8_t *		3227424	0					
ANR	3227626	Identifier	sp		3227424	1					
ANR	3227627	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		3227424	2		=			
ANR	3227628	Identifier	sp		3227424	0					
ANR	3227629	CastExpression	( uint8_t * ) con -> buf		3227424	1					
ANR	3227630	CastTarget	uint8_t *		3227424	0					
ANR	3227631	PtrMemberAccess	con -> buf		3227424	1					
ANR	3227632	Identifier	con		3227424	0					
ANR	3227633	Identifier	buf		3227424	1					
ANR	3227634	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1193:12:36343:36376	3227424	5	True				
ANR	3227635	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		3227424	0					
ANR	3227636	Callee	seek_file		3227424	0					
ANR	3227637	Identifier	seek_file		3227424	0					
ANR	3227638	ArgumentList	con		3227424	1					
ANR	3227639	Argument	con		3227424	0					
ANR	3227640	Identifier	con		3227424	0					
ANR	3227641	Argument	offsetY		3227424	1					
ANR	3227642	Identifier	offsetY		3227424	0					
ANR	3227643	Argument	SEEK_SET		3227424	2					
ANR	3227644	Identifier	SEEK_SET		3227424	0					
ANR	3227645	ExpressionStatement	"memset ( sp , 0 , widthY * MBheightY )"	1194:12:36390:36423	3227424	6	True				
ANR	3227646	CallExpression	"memset ( sp , 0 , widthY * MBheightY )"		3227424	0					
ANR	3227647	Callee	memset		3227424	0					
ANR	3227648	Identifier	memset		3227424	0					
ANR	3227649	ArgumentList	sp		3227424	1					
ANR	3227650	Argument	sp		3227424	0					
ANR	3227651	Identifier	sp		3227424	0					
ANR	3227652	Argument	0		3227424	1					
ANR	3227653	PrimaryExpression	0		3227424	0					
ANR	3227654	Argument	widthY * MBheightY		3227424	2					
ANR	3227655	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3227656	Identifier	widthY		3227424	0					
ANR	3227657	Identifier	MBheightY		3227424	1					
ANR	3227658	ExpressionStatement	"read_data ( con , sp , 1 , widthY * MBheightY )"	1195:12:36437:36478	3227424	7	True				
ANR	3227659	CallExpression	"read_data ( con , sp , 1 , widthY * MBheightY )"		3227424	0					
ANR	3227660	Callee	read_data		3227424	0					
ANR	3227661	Identifier	read_data		3227424	0					
ANR	3227662	ArgumentList	con		3227424	1					
ANR	3227663	Argument	con		3227424	0					
ANR	3227664	Identifier	con		3227424	0					
ANR	3227665	Argument	sp		3227424	1					
ANR	3227666	Identifier	sp		3227424	0					
ANR	3227667	Argument	1		3227424	2					
ANR	3227668	PrimaryExpression	1		3227424	0					
ANR	3227669	Argument	widthY * MBheightY		3227424	3					
ANR	3227670	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3227671	Identifier	widthY		3227424	0					
ANR	3227672	Identifier	MBheightY		3227424	1					
ANR	3227673	ExpressionStatement	sp += widthY * MBheightY	1196:12:36492:36516	3227424	8	True				
ANR	3227674	AssignmentExpression	sp += widthY * MBheightY		3227424	0		+=			
ANR	3227675	Identifier	sp		3227424	0					
ANR	3227676	MultiplicativeExpression	widthY * MBheightY		3227424	1		*			
ANR	3227677	Identifier	widthY		3227424	0					
ANR	3227678	Identifier	MBheightY		3227424	1					
ANR	3227679	ExpressionStatement	"seek_file ( con , offsetU , SEEK_SET )"	1198:12:36531:36564	3227424	9	True				
ANR	3227680	CallExpression	"seek_file ( con , offsetU , SEEK_SET )"		3227424	0					
ANR	3227681	Callee	seek_file		3227424	0					
ANR	3227682	Identifier	seek_file		3227424	0					
ANR	3227683	ArgumentList	con		3227424	1					
ANR	3227684	Argument	con		3227424	0					
ANR	3227685	Identifier	con		3227424	0					
ANR	3227686	Argument	offsetU		3227424	1					
ANR	3227687	Identifier	offsetU		3227424	0					
ANR	3227688	Argument	SEEK_SET		3227424	2					
ANR	3227689	Identifier	SEEK_SET		3227424	0					
ANR	3227690	ExpressionStatement	"memset ( sp , 0 , widthUV * MBheightUV )"	1199:12:36578:36613	3227424	10	True				
ANR	3227691	CallExpression	"memset ( sp , 0 , widthUV * MBheightUV )"		3227424	0					
ANR	3227692	Callee	memset		3227424	0					
ANR	3227693	Identifier	memset		3227424	0					
ANR	3227694	ArgumentList	sp		3227424	1					
ANR	3227695	Argument	sp		3227424	0					
ANR	3227696	Identifier	sp		3227424	0					
ANR	3227697	Argument	0		3227424	1					
ANR	3227698	PrimaryExpression	0		3227424	0					
ANR	3227699	Argument	widthUV * MBheightUV		3227424	2					
ANR	3227700	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3227701	Identifier	widthUV		3227424	0					
ANR	3227702	Identifier	MBheightUV		3227424	1					
ANR	3227703	ExpressionStatement	"read_data ( con , sp , 1 , widthUV * MBheightUV )"	1200:12:36627:36670	3227424	11	True				
ANR	3227704	CallExpression	"read_data ( con , sp , 1 , widthUV * MBheightUV )"		3227424	0					
ANR	3227705	Callee	read_data		3227424	0					
ANR	3227706	Identifier	read_data		3227424	0					
ANR	3227707	ArgumentList	con		3227424	1					
ANR	3227708	Argument	con		3227424	0					
ANR	3227709	Identifier	con		3227424	0					
ANR	3227710	Argument	sp		3227424	1					
ANR	3227711	Identifier	sp		3227424	0					
ANR	3227712	Argument	1		3227424	2					
ANR	3227713	PrimaryExpression	1		3227424	0					
ANR	3227714	Argument	widthUV * MBheightUV		3227424	3					
ANR	3227715	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3227716	Identifier	widthUV		3227424	0					
ANR	3227717	Identifier	MBheightUV		3227424	1					
ANR	3227718	ExpressionStatement	sp += widthUV * MBheightUV	1201:12:36684:36710	3227424	12	True				
ANR	3227719	AssignmentExpression	sp += widthUV * MBheightUV		3227424	0		+=			
ANR	3227720	Identifier	sp		3227424	0					
ANR	3227721	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3227722	Identifier	widthUV		3227424	0					
ANR	3227723	Identifier	MBheightUV		3227424	1					
ANR	3227724	ExpressionStatement	"seek_file ( con , offsetV , SEEK_SET )"	1203:12:36725:36758	3227424	13	True				
ANR	3227725	CallExpression	"seek_file ( con , offsetV , SEEK_SET )"		3227424	0					
ANR	3227726	Callee	seek_file		3227424	0					
ANR	3227727	Identifier	seek_file		3227424	0					
ANR	3227728	ArgumentList	con		3227424	1					
ANR	3227729	Argument	con		3227424	0					
ANR	3227730	Identifier	con		3227424	0					
ANR	3227731	Argument	offsetV		3227424	1					
ANR	3227732	Identifier	offsetV		3227424	0					
ANR	3227733	Argument	SEEK_SET		3227424	2					
ANR	3227734	Identifier	SEEK_SET		3227424	0					
ANR	3227735	ExpressionStatement	"memset ( sp , 0 , widthUV * MBheightUV )"	1204:12:36772:36807	3227424	14	True				
ANR	3227736	CallExpression	"memset ( sp , 0 , widthUV * MBheightUV )"		3227424	0					
ANR	3227737	Callee	memset		3227424	0					
ANR	3227738	Identifier	memset		3227424	0					
ANR	3227739	ArgumentList	sp		3227424	1					
ANR	3227740	Argument	sp		3227424	0					
ANR	3227741	Identifier	sp		3227424	0					
ANR	3227742	Argument	0		3227424	1					
ANR	3227743	PrimaryExpression	0		3227424	0					
ANR	3227744	Argument	widthUV * MBheightUV		3227424	2					
ANR	3227745	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3227746	Identifier	widthUV		3227424	0					
ANR	3227747	Identifier	MBheightUV		3227424	1					
ANR	3227748	ExpressionStatement	"read_data ( con , sp , 1 , widthUV * MBheightUV )"	1205:12:36821:36864	3227424	15	True				
ANR	3227749	CallExpression	"read_data ( con , sp , 1 , widthUV * MBheightUV )"		3227424	0					
ANR	3227750	Callee	read_data		3227424	0					
ANR	3227751	Identifier	read_data		3227424	0					
ANR	3227752	ArgumentList	con		3227424	1					
ANR	3227753	Argument	con		3227424	0					
ANR	3227754	Identifier	con		3227424	0					
ANR	3227755	Argument	sp		3227424	1					
ANR	3227756	Identifier	sp		3227424	0					
ANR	3227757	Argument	1		3227424	2					
ANR	3227758	PrimaryExpression	1		3227424	0					
ANR	3227759	Argument	widthUV * MBheightUV		3227424	3					
ANR	3227760	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3227761	Identifier	widthUV		3227424	0					
ANR	3227762	Identifier	MBheightUV		3227424	1					
ANR	3227763	ExpressionStatement	sp += widthUV * MBheightUV	1206:12:36878:36904	3227424	16	True				
ANR	3227764	AssignmentExpression	sp += widthUV * MBheightUV		3227424	0		+=			
ANR	3227765	Identifier	sp		3227424	0					
ANR	3227766	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3227767	Identifier	widthUV		3227424	0					
ANR	3227768	Identifier	MBheightUV		3227424	1					
ANR	3227769	IfStatement	if ( con -> ncomp == 4 )		3227424	17					
ANR	3227770	Condition	con -> ncomp == 4	1208:16:36923:36937	3227424	0	True				
ANR	3227771	EqualityExpression	con -> ncomp == 4		3227424	0		==			
ANR	3227772	PtrMemberAccess	con -> ncomp		3227424	0					
ANR	3227773	Identifier	con		3227424	0					
ANR	3227774	Identifier	ncomp		3227424	1					
ANR	3227775	PrimaryExpression	4		3227424	1					
ANR	3227776	CompoundStatement		38:33:1593:1593	3227424	1					
ANR	3227777	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1209:16:36958:36991	3227424	0	True				
ANR	3227778	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		3227424	0					
ANR	3227779	Callee	seek_file		3227424	0					
ANR	3227780	Identifier	seek_file		3227424	0					
ANR	3227781	ArgumentList	con		3227424	1					
ANR	3227782	Argument	con		3227424	0					
ANR	3227783	Identifier	con		3227424	0					
ANR	3227784	Argument	offsetA		3227424	1					
ANR	3227785	Identifier	offsetA		3227424	0					
ANR	3227786	Argument	SEEK_SET		3227424	2					
ANR	3227787	Identifier	SEEK_SET		3227424	0					
ANR	3227788	ExpressionStatement	"memset ( sp , 0 , widthY * MBheightY )"	1210:16:37009:37042	3227424	1	True				
ANR	3227789	CallExpression	"memset ( sp , 0 , widthY * MBheightY )"		3227424	0					
ANR	3227790	Callee	memset		3227424	0					
ANR	3227791	Identifier	memset		3227424	0					
ANR	3227792	ArgumentList	sp		3227424	1					
ANR	3227793	Argument	sp		3227424	0					
ANR	3227794	Identifier	sp		3227424	0					
ANR	3227795	Argument	0		3227424	1					
ANR	3227796	PrimaryExpression	0		3227424	0					
ANR	3227797	Argument	widthY * MBheightY		3227424	2					
ANR	3227798	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3227799	Identifier	widthY		3227424	0					
ANR	3227800	Identifier	MBheightY		3227424	1					
ANR	3227801	ExpressionStatement	"read_data ( con , sp , 1 , widthY * MBheightY )"	1211:16:37060:37101	3227424	2	True				
ANR	3227802	CallExpression	"read_data ( con , sp , 1 , widthY * MBheightY )"		3227424	0					
ANR	3227803	Callee	read_data		3227424	0					
ANR	3227804	Identifier	read_data		3227424	0					
ANR	3227805	ArgumentList	con		3227424	1					
ANR	3227806	Argument	con		3227424	0					
ANR	3227807	Identifier	con		3227424	0					
ANR	3227808	Argument	sp		3227424	1					
ANR	3227809	Identifier	sp		3227424	0					
ANR	3227810	Argument	1		3227424	2					
ANR	3227811	PrimaryExpression	1		3227424	0					
ANR	3227812	Argument	widthY * MBheightY		3227424	3					
ANR	3227813	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3227814	Identifier	widthY		3227424	0					
ANR	3227815	Identifier	MBheightY		3227424	1					
ANR	3227816	ExpressionStatement	sp += widthY * MBheightY	1212:16:37119:37143	3227424	3	True				
ANR	3227817	AssignmentExpression	sp += widthY * MBheightY		3227424	0		+=			
ANR	3227818	Identifier	sp		3227424	0					
ANR	3227819	MultiplicativeExpression	widthY * MBheightY		3227424	1		*			
ANR	3227820	Identifier	widthY		3227424	0					
ANR	3227821	Identifier	MBheightY		3227424	1					
ANR	3227822	ElseStatement	else		3227424	0					
ANR	3227823	IfStatement	if ( con -> bpi == 16 )		3227424	0					
ANR	3227824	Condition	con -> bpi == 16	1215:17:37186:37199	3227424	0	True				
ANR	3227825	EqualityExpression	con -> bpi == 16		3227424	0		==			
ANR	3227826	PtrMemberAccess	con -> bpi		3227424	0					
ANR	3227827	Identifier	con		3227424	0					
ANR	3227828	Identifier	bpi		3227424	1					
ANR	3227829	PrimaryExpression	16		3227424	1					
ANR	3227830	CompoundStatement		51:12:2184:2218	3227424	1					
ANR	3227831	IdentifierDeclStatement	unsigned int offsetY = 2 * ( my * MBheightY * widthY ) ;	1216:12:37216:37268	3227424	0	True				
ANR	3227832	IdentifierDecl	offsetY = 2 * ( my * MBheightY * widthY )		3227424	0					
ANR	3227833	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227834	Identifier	offsetY		3227424	1					
ANR	3227835	AssignmentExpression	offsetY = 2 * ( my * MBheightY * widthY )		3227424	2		=			
ANR	3227836	Identifier	offsetY		3227424	0					
ANR	3227837	MultiplicativeExpression	2 * ( my * MBheightY * widthY )		3227424	1		*			
ANR	3227838	PrimaryExpression	2		3227424	0					
ANR	3227839	MultiplicativeExpression	my * MBheightY * widthY		3227424	1		*			
ANR	3227840	Identifier	my		3227424	0					
ANR	3227841	MultiplicativeExpression	MBheightY * widthY		3227424	1		*			
ANR	3227842	Identifier	MBheightY		3227424	0					
ANR	3227843	Identifier	widthY		3227424	1					
ANR	3227844	IdentifierDeclStatement	unsigned int offsetU = 2 * ( sizeY + my * MBheightUV * widthUV ) ;	1217:12:37282:37344	3227424	1	True				
ANR	3227845	IdentifierDecl	offsetU = 2 * ( sizeY + my * MBheightUV * widthUV )		3227424	0					
ANR	3227846	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227847	Identifier	offsetU		3227424	1					
ANR	3227848	AssignmentExpression	offsetU = 2 * ( sizeY + my * MBheightUV * widthUV )		3227424	2		=			
ANR	3227849	Identifier	offsetU		3227424	0					
ANR	3227850	MultiplicativeExpression	2 * ( sizeY + my * MBheightUV * widthUV )		3227424	1		*			
ANR	3227851	PrimaryExpression	2		3227424	0					
ANR	3227852	AdditiveExpression	sizeY + my * MBheightUV * widthUV		3227424	1		+			
ANR	3227853	Identifier	sizeY		3227424	0					
ANR	3227854	MultiplicativeExpression	my * MBheightUV * widthUV		3227424	1		*			
ANR	3227855	Identifier	my		3227424	0					
ANR	3227856	MultiplicativeExpression	MBheightUV * widthUV		3227424	1		*			
ANR	3227857	Identifier	MBheightUV		3227424	0					
ANR	3227858	Identifier	widthUV		3227424	1					
ANR	3227859	IdentifierDeclStatement	unsigned int offsetV = 2 * ( sizeY + sizeUV + my * MBheightUV * widthUV ) ;	1218:12:37358:37429	3227424	2	True				
ANR	3227860	IdentifierDecl	offsetV = 2 * ( sizeY + sizeUV + my * MBheightUV * widthUV )		3227424	0					
ANR	3227861	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227862	Identifier	offsetV		3227424	1					
ANR	3227863	AssignmentExpression	offsetV = 2 * ( sizeY + sizeUV + my * MBheightUV * widthUV )		3227424	2		=			
ANR	3227864	Identifier	offsetV		3227424	0					
ANR	3227865	MultiplicativeExpression	2 * ( sizeY + sizeUV + my * MBheightUV * widthUV )		3227424	1		*			
ANR	3227866	PrimaryExpression	2		3227424	0					
ANR	3227867	AdditiveExpression	sizeY + sizeUV + my * MBheightUV * widthUV		3227424	1		+			
ANR	3227868	Identifier	sizeY		3227424	0					
ANR	3227869	AdditiveExpression	sizeUV + my * MBheightUV * widthUV		3227424	1		+			
ANR	3227870	Identifier	sizeUV		3227424	0					
ANR	3227871	MultiplicativeExpression	my * MBheightUV * widthUV		3227424	1		*			
ANR	3227872	Identifier	my		3227424	0					
ANR	3227873	MultiplicativeExpression	MBheightUV * widthUV		3227424	1		*			
ANR	3227874	Identifier	MBheightUV		3227424	0					
ANR	3227875	Identifier	widthUV		3227424	1					
ANR	3227876	IdentifierDeclStatement	unsigned int offsetA = 2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY ) ;	1219:12:37443:37516	3227424	3	True				
ANR	3227877	IdentifierDecl	offsetA = 2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY )		3227424	0					
ANR	3227878	IdentifierDeclType	unsigned int		3227424	0					
ANR	3227879	Identifier	offsetA		3227424	1					
ANR	3227880	AssignmentExpression	offsetA = 2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY )		3227424	2		=			
ANR	3227881	Identifier	offsetA		3227424	0					
ANR	3227882	MultiplicativeExpression	2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY )		3227424	1		*			
ANR	3227883	PrimaryExpression	2		3227424	0					
ANR	3227884	AdditiveExpression	sizeY + 2 * sizeUV + my * MBheightY * widthY		3227424	1		+			
ANR	3227885	Identifier	sizeY		3227424	0					
ANR	3227886	AdditiveExpression	2 * sizeUV + my * MBheightY * widthY		3227424	1		+			
ANR	3227887	MultiplicativeExpression	2 * sizeUV		3227424	0		*			
ANR	3227888	PrimaryExpression	2		3227424	0					
ANR	3227889	Identifier	sizeUV		3227424	1					
ANR	3227890	MultiplicativeExpression	my * MBheightY * widthY		3227424	1		*			
ANR	3227891	Identifier	my		3227424	0					
ANR	3227892	MultiplicativeExpression	MBheightY * widthY		3227424	1		*			
ANR	3227893	Identifier	MBheightY		3227424	0					
ANR	3227894	Identifier	widthY		3227424	1					
ANR	3227895	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1221:12:37531:37565	3227424	4	True				
ANR	3227896	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		3227424	0					
ANR	3227897	IdentifierDeclType	uint16_t *		3227424	0					
ANR	3227898	Identifier	sp		3227424	1					
ANR	3227899	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		3227424	2		=			
ANR	3227900	Identifier	sp		3227424	0					
ANR	3227901	CastExpression	( uint16_t * ) con -> buf		3227424	1					
ANR	3227902	CastTarget	uint16_t *		3227424	0					
ANR	3227903	PtrMemberAccess	con -> buf		3227424	1					
ANR	3227904	Identifier	con		3227424	0					
ANR	3227905	Identifier	buf		3227424	1					
ANR	3227906	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1223:12:37580:37613	3227424	5	True				
ANR	3227907	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		3227424	0					
ANR	3227908	Callee	seek_file		3227424	0					
ANR	3227909	Identifier	seek_file		3227424	0					
ANR	3227910	ArgumentList	con		3227424	1					
ANR	3227911	Argument	con		3227424	0					
ANR	3227912	Identifier	con		3227424	0					
ANR	3227913	Argument	offsetY		3227424	1					
ANR	3227914	Identifier	offsetY		3227424	0					
ANR	3227915	Argument	SEEK_SET		3227424	2					
ANR	3227916	Identifier	SEEK_SET		3227424	0					
ANR	3227917	ExpressionStatement	"memset ( sp , 0 , 2 * widthY * MBheightY )"	1224:12:37627:37664	3227424	6	True				
ANR	3227918	CallExpression	"memset ( sp , 0 , 2 * widthY * MBheightY )"		3227424	0					
ANR	3227919	Callee	memset		3227424	0					
ANR	3227920	Identifier	memset		3227424	0					
ANR	3227921	ArgumentList	sp		3227424	1					
ANR	3227922	Argument	sp		3227424	0					
ANR	3227923	Identifier	sp		3227424	0					
ANR	3227924	Argument	0		3227424	1					
ANR	3227925	PrimaryExpression	0		3227424	0					
ANR	3227926	Argument	2 * widthY * MBheightY		3227424	2					
ANR	3227927	MultiplicativeExpression	2 * widthY * MBheightY		3227424	0		*			
ANR	3227928	PrimaryExpression	2		3227424	0					
ANR	3227929	MultiplicativeExpression	widthY * MBheightY		3227424	1		*			
ANR	3227930	Identifier	widthY		3227424	0					
ANR	3227931	Identifier	MBheightY		3227424	1					
ANR	3227932	ExpressionStatement	"read_data ( con , sp , 2 , widthY * MBheightY )"	1225:12:37678:37719	3227424	7	True				
ANR	3227933	CallExpression	"read_data ( con , sp , 2 , widthY * MBheightY )"		3227424	0					
ANR	3227934	Callee	read_data		3227424	0					
ANR	3227935	Identifier	read_data		3227424	0					
ANR	3227936	ArgumentList	con		3227424	1					
ANR	3227937	Argument	con		3227424	0					
ANR	3227938	Identifier	con		3227424	0					
ANR	3227939	Argument	sp		3227424	1					
ANR	3227940	Identifier	sp		3227424	0					
ANR	3227941	Argument	2		3227424	2					
ANR	3227942	PrimaryExpression	2		3227424	0					
ANR	3227943	Argument	widthY * MBheightY		3227424	3					
ANR	3227944	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3227945	Identifier	widthY		3227424	0					
ANR	3227946	Identifier	MBheightY		3227424	1					
ANR	3227947	ExpressionStatement	sp += widthY * MBheightY	1226:12:37733:37757	3227424	8	True				
ANR	3227948	AssignmentExpression	sp += widthY * MBheightY		3227424	0		+=			
ANR	3227949	Identifier	sp		3227424	0					
ANR	3227950	MultiplicativeExpression	widthY * MBheightY		3227424	1		*			
ANR	3227951	Identifier	widthY		3227424	0					
ANR	3227952	Identifier	MBheightY		3227424	1					
ANR	3227953	ExpressionStatement	"seek_file ( con , offsetU , SEEK_SET )"	1228:12:37772:37805	3227424	9	True				
ANR	3227954	CallExpression	"seek_file ( con , offsetU , SEEK_SET )"		3227424	0					
ANR	3227955	Callee	seek_file		3227424	0					
ANR	3227956	Identifier	seek_file		3227424	0					
ANR	3227957	ArgumentList	con		3227424	1					
ANR	3227958	Argument	con		3227424	0					
ANR	3227959	Identifier	con		3227424	0					
ANR	3227960	Argument	offsetU		3227424	1					
ANR	3227961	Identifier	offsetU		3227424	0					
ANR	3227962	Argument	SEEK_SET		3227424	2					
ANR	3227963	Identifier	SEEK_SET		3227424	0					
ANR	3227964	ExpressionStatement	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"	1229:12:37819:37858	3227424	10	True				
ANR	3227965	CallExpression	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"		3227424	0					
ANR	3227966	Callee	memset		3227424	0					
ANR	3227967	Identifier	memset		3227424	0					
ANR	3227968	ArgumentList	sp		3227424	1					
ANR	3227969	Argument	sp		3227424	0					
ANR	3227970	Identifier	sp		3227424	0					
ANR	3227971	Argument	0		3227424	1					
ANR	3227972	PrimaryExpression	0		3227424	0					
ANR	3227973	Argument	2 * widthUV * MBheightUV		3227424	2					
ANR	3227974	MultiplicativeExpression	2 * widthUV * MBheightUV		3227424	0		*			
ANR	3227975	PrimaryExpression	2		3227424	0					
ANR	3227976	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3227977	Identifier	widthUV		3227424	0					
ANR	3227978	Identifier	MBheightUV		3227424	1					
ANR	3227979	ExpressionStatement	"read_data ( con , sp , 2 , widthUV * MBheightUV )"	1230:12:37872:37915	3227424	11	True				
ANR	3227980	CallExpression	"read_data ( con , sp , 2 , widthUV * MBheightUV )"		3227424	0					
ANR	3227981	Callee	read_data		3227424	0					
ANR	3227982	Identifier	read_data		3227424	0					
ANR	3227983	ArgumentList	con		3227424	1					
ANR	3227984	Argument	con		3227424	0					
ANR	3227985	Identifier	con		3227424	0					
ANR	3227986	Argument	sp		3227424	1					
ANR	3227987	Identifier	sp		3227424	0					
ANR	3227988	Argument	2		3227424	2					
ANR	3227989	PrimaryExpression	2		3227424	0					
ANR	3227990	Argument	widthUV * MBheightUV		3227424	3					
ANR	3227991	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3227992	Identifier	widthUV		3227424	0					
ANR	3227993	Identifier	MBheightUV		3227424	1					
ANR	3227994	ExpressionStatement	sp += widthUV * MBheightUV	1231:12:37929:37955	3227424	12	True				
ANR	3227995	AssignmentExpression	sp += widthUV * MBheightUV		3227424	0		+=			
ANR	3227996	Identifier	sp		3227424	0					
ANR	3227997	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3227998	Identifier	widthUV		3227424	0					
ANR	3227999	Identifier	MBheightUV		3227424	1					
ANR	3228000	ExpressionStatement	"seek_file ( con , offsetV , SEEK_SET )"	1233:12:37970:38003	3227424	13	True				
ANR	3228001	CallExpression	"seek_file ( con , offsetV , SEEK_SET )"		3227424	0					
ANR	3228002	Callee	seek_file		3227424	0					
ANR	3228003	Identifier	seek_file		3227424	0					
ANR	3228004	ArgumentList	con		3227424	1					
ANR	3228005	Argument	con		3227424	0					
ANR	3228006	Identifier	con		3227424	0					
ANR	3228007	Argument	offsetV		3227424	1					
ANR	3228008	Identifier	offsetV		3227424	0					
ANR	3228009	Argument	SEEK_SET		3227424	2					
ANR	3228010	Identifier	SEEK_SET		3227424	0					
ANR	3228011	ExpressionStatement	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"	1234:12:38017:38056	3227424	14	True				
ANR	3228012	CallExpression	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"		3227424	0					
ANR	3228013	Callee	memset		3227424	0					
ANR	3228014	Identifier	memset		3227424	0					
ANR	3228015	ArgumentList	sp		3227424	1					
ANR	3228016	Argument	sp		3227424	0					
ANR	3228017	Identifier	sp		3227424	0					
ANR	3228018	Argument	0		3227424	1					
ANR	3228019	PrimaryExpression	0		3227424	0					
ANR	3228020	Argument	2 * widthUV * MBheightUV		3227424	2					
ANR	3228021	MultiplicativeExpression	2 * widthUV * MBheightUV		3227424	0		*			
ANR	3228022	PrimaryExpression	2		3227424	0					
ANR	3228023	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3228024	Identifier	widthUV		3227424	0					
ANR	3228025	Identifier	MBheightUV		3227424	1					
ANR	3228026	ExpressionStatement	"read_data ( con , sp , 2 , widthUV * MBheightUV )"	1235:12:38070:38113	3227424	15	True				
ANR	3228027	CallExpression	"read_data ( con , sp , 2 , widthUV * MBheightUV )"		3227424	0					
ANR	3228028	Callee	read_data		3227424	0					
ANR	3228029	Identifier	read_data		3227424	0					
ANR	3228030	ArgumentList	con		3227424	1					
ANR	3228031	Argument	con		3227424	0					
ANR	3228032	Identifier	con		3227424	0					
ANR	3228033	Argument	sp		3227424	1					
ANR	3228034	Identifier	sp		3227424	0					
ANR	3228035	Argument	2		3227424	2					
ANR	3228036	PrimaryExpression	2		3227424	0					
ANR	3228037	Argument	widthUV * MBheightUV		3227424	3					
ANR	3228038	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3228039	Identifier	widthUV		3227424	0					
ANR	3228040	Identifier	MBheightUV		3227424	1					
ANR	3228041	ExpressionStatement	sp += widthUV * MBheightUV	1236:12:38127:38153	3227424	16	True				
ANR	3228042	AssignmentExpression	sp += widthUV * MBheightUV		3227424	0		+=			
ANR	3228043	Identifier	sp		3227424	0					
ANR	3228044	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3228045	Identifier	widthUV		3227424	0					
ANR	3228046	Identifier	MBheightUV		3227424	1					
ANR	3228047	IfStatement	if ( con -> ncomp == 4 )		3227424	17					
ANR	3228048	Condition	con -> ncomp == 4	1238:16:38172:38186	3227424	0	True				
ANR	3228049	EqualityExpression	con -> ncomp == 4		3227424	0		==			
ANR	3228050	PtrMemberAccess	con -> ncomp		3227424	0					
ANR	3228051	Identifier	con		3227424	0					
ANR	3228052	Identifier	ncomp		3227424	1					
ANR	3228053	PrimaryExpression	4		3227424	1					
ANR	3228054	CompoundStatement		68:33:2842:2842	3227424	1					
ANR	3228055	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1239:16:38207:38240	3227424	0	True				
ANR	3228056	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		3227424	0					
ANR	3228057	Callee	seek_file		3227424	0					
ANR	3228058	Identifier	seek_file		3227424	0					
ANR	3228059	ArgumentList	con		3227424	1					
ANR	3228060	Argument	con		3227424	0					
ANR	3228061	Identifier	con		3227424	0					
ANR	3228062	Argument	offsetA		3227424	1					
ANR	3228063	Identifier	offsetA		3227424	0					
ANR	3228064	Argument	SEEK_SET		3227424	2					
ANR	3228065	Identifier	SEEK_SET		3227424	0					
ANR	3228066	ExpressionStatement	"memset ( sp , 0 , 2 * widthY * MBheightY )"	1240:16:38258:38295	3227424	1	True				
ANR	3228067	CallExpression	"memset ( sp , 0 , 2 * widthY * MBheightY )"		3227424	0					
ANR	3228068	Callee	memset		3227424	0					
ANR	3228069	Identifier	memset		3227424	0					
ANR	3228070	ArgumentList	sp		3227424	1					
ANR	3228071	Argument	sp		3227424	0					
ANR	3228072	Identifier	sp		3227424	0					
ANR	3228073	Argument	0		3227424	1					
ANR	3228074	PrimaryExpression	0		3227424	0					
ANR	3228075	Argument	2 * widthY * MBheightY		3227424	2					
ANR	3228076	MultiplicativeExpression	2 * widthY * MBheightY		3227424	0		*			
ANR	3228077	PrimaryExpression	2		3227424	0					
ANR	3228078	MultiplicativeExpression	widthY * MBheightY		3227424	1		*			
ANR	3228079	Identifier	widthY		3227424	0					
ANR	3228080	Identifier	MBheightY		3227424	1					
ANR	3228081	ExpressionStatement	"read_data ( con , sp , 2 , widthY * MBheightY )"	1241:16:38313:38354	3227424	2	True				
ANR	3228082	CallExpression	"read_data ( con , sp , 2 , widthY * MBheightY )"		3227424	0					
ANR	3228083	Callee	read_data		3227424	0					
ANR	3228084	Identifier	read_data		3227424	0					
ANR	3228085	ArgumentList	con		3227424	1					
ANR	3228086	Argument	con		3227424	0					
ANR	3228087	Identifier	con		3227424	0					
ANR	3228088	Argument	sp		3227424	1					
ANR	3228089	Identifier	sp		3227424	0					
ANR	3228090	Argument	2		3227424	2					
ANR	3228091	PrimaryExpression	2		3227424	0					
ANR	3228092	Argument	widthY * MBheightY		3227424	3					
ANR	3228093	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228094	Identifier	widthY		3227424	0					
ANR	3228095	Identifier	MBheightY		3227424	1					
ANR	3228096	ExpressionStatement	sp += widthY * MBheightY	1242:16:38372:38396	3227424	3	True				
ANR	3228097	AssignmentExpression	sp += widthY * MBheightY		3227424	0		+=			
ANR	3228098	Identifier	sp		3227424	0					
ANR	3228099	MultiplicativeExpression	widthY * MBheightY		3227424	1		*			
ANR	3228100	Identifier	widthY		3227424	0					
ANR	3228101	Identifier	MBheightY		3227424	1					
ANR	3228102	ExpressionStatement	con -> my = my	1245:8:38430:38442	3227424	1	True				
ANR	3228103	AssignmentExpression	con -> my = my		3227424	0		=			
ANR	3228104	PtrMemberAccess	con -> my		3227424	0					
ANR	3228105	Identifier	con		3227424	0					
ANR	3228106	Identifier	my		3227424	1					
ANR	3228107	Identifier	my		3227424	1					
ANR	3228108	IdentifierDeclStatement	"int idx1 , idx2 ;"	1248:4:38455:38469	3227424	10	True				
ANR	3228109	IdentifierDecl	idx1		3227424	0					
ANR	3228110	IdentifierDeclType	int		3227424	0					
ANR	3228111	Identifier	idx1		3227424	1					
ANR	3228112	IdentifierDecl	idx2		3227424	1					
ANR	3228113	IdentifierDeclType	int		3227424	0					
ANR	3228114	Identifier	idx2		3227424	1					
ANR	3228115	IdentifierDeclStatement	int xDiv = 16 ;	1249:4:38475:38488	3227424	11	True				
ANR	3228116	IdentifierDecl	xDiv = 16		3227424	0					
ANR	3228117	IdentifierDeclType	int		3227424	0					
ANR	3228118	Identifier	xDiv		3227424	1					
ANR	3228119	AssignmentExpression	xDiv = 16		3227424	2		=			
ANR	3228120	Identifier	xDiv		3227424	0					
ANR	3228121	PrimaryExpression	16		3227424	1					
ANR	3228122	IdentifierDeclStatement	int yDiv = 16 ;	1250:4:38494:38507	3227424	12	True				
ANR	3228123	IdentifierDecl	yDiv = 16		3227424	0					
ANR	3228124	IdentifierDeclType	int		3227424	0					
ANR	3228125	Identifier	yDiv		3227424	1					
ANR	3228126	AssignmentExpression	yDiv = 16		3227424	2		=			
ANR	3228127	Identifier	yDiv		3227424	0					
ANR	3228128	PrimaryExpression	16		3227424	1					
ANR	3228129	IfStatement	if ( con -> bpi == 8 )		3227424	13					
ANR	3228130	Condition	con -> bpi == 8	1252:8:38518:38530	3227424	0	True				
ANR	3228131	EqualityExpression	con -> bpi == 8		3227424	0		==			
ANR	3228132	PtrMemberAccess	con -> bpi		3227424	0					
ANR	3228133	Identifier	con		3227424	0					
ANR	3228134	Identifier	bpi		3227424	1					
ANR	3228135	PrimaryExpression	8		3227424	1					
ANR	3228136	CompoundStatement		84:8:3212:3254	3227424	1					
ANR	3228137	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + xDiv * mx ;	1254:8:38559:38601	3227424	0	True				
ANR	3228138	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + xDiv * mx		3227424	0					
ANR	3228139	IdentifierDeclType	uint8_t *		3227424	0					
ANR	3228140	Identifier	sp		3227424	1					
ANR	3228141	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + xDiv * mx		3227424	2		=			
ANR	3228142	Identifier	sp		3227424	0					
ANR	3228143	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx		3227424	1		+			
ANR	3228144	CastExpression	( uint8_t * ) con -> buf		3227424	0					
ANR	3228145	CastTarget	uint8_t *		3227424	0					
ANR	3228146	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228147	Identifier	con		3227424	0					
ANR	3228148	Identifier	buf		3227424	1					
ANR	3228149	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228150	Identifier	xDiv		3227424	0					
ANR	3228151	Identifier	mx		3227424	1					
ANR	3228152	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	1					
ANR	3228153	ForInit	idx1 = 0 ;	1255:13:38616:38624	3227424	0	True				
ANR	3228154	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228155	Identifier	idx1		3227424	0					
ANR	3228156	PrimaryExpression	0		3227424	1					
ANR	3228157	Condition	idx1 < yDiv	1255:23:38626:38636	3227424	1	True				
ANR	3228158	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228159	Identifier	idx1		3227424	0					
ANR	3228160	Identifier	yDiv		3227424	1					
ANR	3228161	AssignmentExpression	idx1 += 1	1255:36:38639:38647	3227424	2	True	+=			
ANR	3228162	Identifier	idx1		3227424	0					
ANR	3228163	PrimaryExpression	1		3227424	1					
ANR	3228164	CompoundStatement		85:47:3303:3303	3227424	3					
ANR	3228165	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228166	ForInit	idx2 = 0 ;	1256:17:38669:38677	3227424	0	True				
ANR	3228167	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228168	Identifier	idx2		3227424	0					
ANR	3228169	PrimaryExpression	0		3227424	1					
ANR	3228170	Condition	idx2 < xDiv	1256:27:38679:38689	3227424	1	True				
ANR	3228171	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228172	Identifier	idx2		3227424	0					
ANR	3228173	Identifier	xDiv		3227424	1					
ANR	3228174	AssignmentExpression	idx2 += 1	1256:40:38692:38700	3227424	2	True	+=			
ANR	3228175	Identifier	idx2		3227424	0					
ANR	3228176	PrimaryExpression	1		3227424	1					
ANR	3228177	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1257:16:38720:38776	3227424	3	True				
ANR	3228178	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228179	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		3227424	0					
ANR	3228180	Identifier	data		3227424	0					
ANR	3228181	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		3227424	1		+			
ANR	3228182	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228183	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228184	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228185	Identifier	idx1		3227424	0					
ANR	3228186	Identifier	xDiv		3227424	1					
ANR	3228187	Identifier	idx2		3227424	1					
ANR	3228188	Identifier	num_channels		3227424	1					
ANR	3228189	PrimaryExpression	0		3227424	1					
ANR	3228190	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228191	Identifier	sp		3227424	0					
ANR	3228192	Identifier	idx2		3227424	1					
ANR	3228193	ExpressionStatement	sp += widthY	1258:12:38790:38802	3227424	1	True				
ANR	3228194	AssignmentExpression	sp += widthY		3227424	0		+=			
ANR	3228195	Identifier	sp		3227424	0					
ANR	3228196	Identifier	widthY		3227424	1					
ANR	3228197	IfStatement	if ( con -> ycc_format == 2 )		3227424	2					
ANR	3228198	Condition	con -> ycc_format == 2	1261:12:38827:38846	3227424	0	True				
ANR	3228199	EqualityExpression	con -> ycc_format == 2		3227424	0		==			
ANR	3228200	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3228201	Identifier	con		3227424	0					
ANR	3228202	Identifier	ycc_format		3227424	1					
ANR	3228203	PrimaryExpression	2		3227424	1					
ANR	3228204	ExpressionStatement	xDiv = 8	1262:12:38861:38869	3227424	1	True				
ANR	3228205	AssignmentExpression	xDiv = 8		3227424	0		=			
ANR	3228206	Identifier	xDiv		3227424	0					
ANR	3228207	PrimaryExpression	8		3227424	1					
ANR	3228208	IfStatement	if ( con -> ycc_format == 1 )		3227424	3					
ANR	3228209	Condition	con -> ycc_format == 1	1264:12:38884:38903	3227424	0	True				
ANR	3228210	EqualityExpression	con -> ycc_format == 1		3227424	0		==			
ANR	3228211	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3228212	Identifier	con		3227424	0					
ANR	3228213	Identifier	ycc_format		3227424	1					
ANR	3228214	PrimaryExpression	1		3227424	1					
ANR	3228215	ExpressionStatement	xDiv = yDiv = 8	1265:12:38918:38933	3227424	1	True				
ANR	3228216	AssignmentExpression	xDiv = yDiv = 8		3227424	0		=			
ANR	3228217	Identifier	xDiv		3227424	0					
ANR	3228218	AssignmentExpression	yDiv = 8		3227424	1		=			
ANR	3228219	Identifier	yDiv		3227424	0					
ANR	3228220	PrimaryExpression	8		3227424	1					
ANR	3228221	ExpressionStatement	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + xDiv * mx	1268:8:38960:39014	3227424	4	True				
ANR	3228222	AssignmentExpression	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + xDiv * mx		3227424	0		=			
ANR	3228223	Identifier	sp		3227424	0					
ANR	3228224	AdditiveExpression	( uint8_t * ) con -> buf + widthY * MBheightY + xDiv * mx		3227424	1		+			
ANR	3228225	CastExpression	( uint8_t * ) con -> buf		3227424	0					
ANR	3228226	CastTarget	uint8_t *		3227424	0					
ANR	3228227	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228228	Identifier	con		3227424	0					
ANR	3228229	Identifier	buf		3227424	1					
ANR	3228230	AdditiveExpression	widthY * MBheightY + xDiv * mx		3227424	1		+			
ANR	3228231	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228232	Identifier	widthY		3227424	0					
ANR	3228233	Identifier	MBheightY		3227424	1					
ANR	3228234	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228235	Identifier	xDiv		3227424	0					
ANR	3228236	Identifier	mx		3227424	1					
ANR	3228237	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	5					
ANR	3228238	ForInit	idx1 = 0 ;	1269:13:39029:39037	3227424	0	True				
ANR	3228239	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228240	Identifier	idx1		3227424	0					
ANR	3228241	PrimaryExpression	0		3227424	1					
ANR	3228242	Condition	idx1 < yDiv	1269:23:39039:39049	3227424	1	True				
ANR	3228243	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228244	Identifier	idx1		3227424	0					
ANR	3228245	Identifier	yDiv		3227424	1					
ANR	3228246	AssignmentExpression	idx1 += 1	1269:36:39052:39060	3227424	2	True	+=			
ANR	3228247	Identifier	idx1		3227424	0					
ANR	3228248	PrimaryExpression	1		3227424	1					
ANR	3228249	CompoundStatement		99:47:3716:3716	3227424	3					
ANR	3228250	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228251	ForInit	idx2 = 0 ;	1270:17:39082:39090	3227424	0	True				
ANR	3228252	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228253	Identifier	idx2		3227424	0					
ANR	3228254	PrimaryExpression	0		3227424	1					
ANR	3228255	Condition	idx2 < xDiv	1270:27:39092:39102	3227424	1	True				
ANR	3228256	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228257	Identifier	idx2		3227424	0					
ANR	3228258	Identifier	xDiv		3227424	1					
ANR	3228259	AssignmentExpression	idx2 += 1	1270:40:39105:39113	3227424	2	True	+=			
ANR	3228260	Identifier	idx2		3227424	0					
ANR	3228261	PrimaryExpression	1		3227424	1					
ANR	3228262	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1271:16:39133:39189	3227424	3	True				
ANR	3228263	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228264	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		3227424	0					
ANR	3228265	Identifier	data		3227424	0					
ANR	3228266	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		3227424	1		+			
ANR	3228267	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228268	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228269	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228270	Identifier	idx1		3227424	0					
ANR	3228271	Identifier	xDiv		3227424	1					
ANR	3228272	Identifier	idx2		3227424	1					
ANR	3228273	Identifier	num_channels		3227424	1					
ANR	3228274	PrimaryExpression	1		3227424	1					
ANR	3228275	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228276	Identifier	sp		3227424	0					
ANR	3228277	Identifier	idx2		3227424	1					
ANR	3228278	ExpressionStatement	sp += widthUV	1272:12:39203:39216	3227424	1	True				
ANR	3228279	AssignmentExpression	sp += widthUV		3227424	0		+=			
ANR	3228280	Identifier	sp		3227424	0					
ANR	3228281	Identifier	widthUV		3227424	1					
ANR	3228282	ExpressionStatement	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx	1276:8:39253:39330	3227424	6	True				
ANR	3228283	AssignmentExpression	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	0		=			
ANR	3228284	Identifier	sp		3227424	0					
ANR	3228285	AdditiveExpression	( uint8_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228286	CastExpression	( uint8_t * ) con -> buf		3227424	0					
ANR	3228287	CastTarget	uint8_t *		3227424	0					
ANR	3228288	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228289	Identifier	con		3227424	0					
ANR	3228290	Identifier	buf		3227424	1					
ANR	3228291	AdditiveExpression	widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228292	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228293	Identifier	widthY		3227424	0					
ANR	3228294	Identifier	MBheightY		3227424	1					
ANR	3228295	AdditiveExpression	widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228296	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3228297	Identifier	widthUV		3227424	0					
ANR	3228298	Identifier	MBheightUV		3227424	1					
ANR	3228299	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228300	Identifier	xDiv		3227424	0					
ANR	3228301	Identifier	mx		3227424	1					
ANR	3228302	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	7					
ANR	3228303	ForInit	idx1 = 0 ;	1277:13:39345:39353	3227424	0	True				
ANR	3228304	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228305	Identifier	idx1		3227424	0					
ANR	3228306	PrimaryExpression	0		3227424	1					
ANR	3228307	Condition	idx1 < yDiv	1277:23:39355:39365	3227424	1	True				
ANR	3228308	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228309	Identifier	idx1		3227424	0					
ANR	3228310	Identifier	yDiv		3227424	1					
ANR	3228311	AssignmentExpression	idx1 += 1	1277:36:39368:39376	3227424	2	True	+=			
ANR	3228312	Identifier	idx1		3227424	0					
ANR	3228313	PrimaryExpression	1		3227424	1					
ANR	3228314	CompoundStatement		107:47:4032:4032	3227424	3					
ANR	3228315	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228316	ForInit	idx2 = 0 ;	1278:17:39398:39406	3227424	0	True				
ANR	3228317	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228318	Identifier	idx2		3227424	0					
ANR	3228319	PrimaryExpression	0		3227424	1					
ANR	3228320	Condition	idx2 < xDiv	1278:27:39408:39418	3227424	1	True				
ANR	3228321	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228322	Identifier	idx2		3227424	0					
ANR	3228323	Identifier	xDiv		3227424	1					
ANR	3228324	AssignmentExpression	idx2 += 1	1278:40:39421:39429	3227424	2	True	+=			
ANR	3228325	Identifier	idx2		3227424	0					
ANR	3228326	PrimaryExpression	1		3227424	1					
ANR	3228327	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1279:16:39449:39505	3227424	3	True				
ANR	3228328	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228329	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		3227424	0					
ANR	3228330	Identifier	data		3227424	0					
ANR	3228331	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		3227424	1		+			
ANR	3228332	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228333	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228334	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228335	Identifier	idx1		3227424	0					
ANR	3228336	Identifier	xDiv		3227424	1					
ANR	3228337	Identifier	idx2		3227424	1					
ANR	3228338	Identifier	num_channels		3227424	1					
ANR	3228339	PrimaryExpression	2		3227424	1					
ANR	3228340	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228341	Identifier	sp		3227424	0					
ANR	3228342	Identifier	idx2		3227424	1					
ANR	3228343	ExpressionStatement	sp += widthUV	1280:12:39519:39532	3227424	1	True				
ANR	3228344	AssignmentExpression	sp += widthUV		3227424	0		+=			
ANR	3228345	Identifier	sp		3227424	0					
ANR	3228346	Identifier	widthUV		3227424	1					
ANR	3228347	IfStatement	if ( con -> ncomp == 4 )		3227424	8					
ANR	3228348	Condition	con -> ncomp == 4	1283:11:39556:39570	3227424	0	True				
ANR	3228349	EqualityExpression	con -> ncomp == 4		3227424	0		==			
ANR	3228350	PtrMemberAccess	con -> ncomp		3227424	0					
ANR	3228351	Identifier	con		3227424	0					
ANR	3228352	Identifier	ncomp		3227424	1					
ANR	3228353	PrimaryExpression	4		3227424	1					
ANR	3228354	CompoundStatement		114:8:4234:4234	3227424	1					
ANR	3228355	ExpressionStatement	xDiv = yDiv = 16	1285:12:39595:39611	3227424	0	True				
ANR	3228356	AssignmentExpression	xDiv = yDiv = 16		3227424	0		=			
ANR	3228357	Identifier	xDiv		3227424	0					
ANR	3228358	AssignmentExpression	yDiv = 16		3227424	1		=			
ANR	3228359	Identifier	yDiv		3227424	0					
ANR	3228360	PrimaryExpression	16		3227424	1					
ANR	3228361	ExpressionStatement	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx	1286:12:39625:39707	3227424	1	True				
ANR	3228362	AssignmentExpression	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	0		=			
ANR	3228363	Identifier	sp		3227424	0					
ANR	3228364	AdditiveExpression	( uint8_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228365	CastExpression	( uint8_t * ) con -> buf		3227424	0					
ANR	3228366	CastTarget	uint8_t *		3227424	0					
ANR	3228367	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228368	Identifier	con		3227424	0					
ANR	3228369	Identifier	buf		3227424	1					
ANR	3228370	AdditiveExpression	widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228371	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228372	Identifier	widthY		3227424	0					
ANR	3228373	Identifier	MBheightY		3227424	1					
ANR	3228374	AdditiveExpression	2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228375	MultiplicativeExpression	2 * widthUV * MBheightUV		3227424	0		*			
ANR	3228376	PrimaryExpression	2		3227424	0					
ANR	3228377	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3228378	Identifier	widthUV		3227424	0					
ANR	3228379	Identifier	MBheightUV		3227424	1					
ANR	3228380	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228381	Identifier	xDiv		3227424	0					
ANR	3228382	Identifier	mx		3227424	1					
ANR	3228383	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	2					
ANR	3228384	ForInit	idx1 = 0 ;	1287:17:39726:39734	3227424	0	True				
ANR	3228385	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228386	Identifier	idx1		3227424	0					
ANR	3228387	PrimaryExpression	0		3227424	1					
ANR	3228388	Condition	idx1 < yDiv	1287:27:39736:39746	3227424	1	True				
ANR	3228389	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228390	Identifier	idx1		3227424	0					
ANR	3228391	Identifier	yDiv		3227424	1					
ANR	3228392	AssignmentExpression	idx1 += 1	1287:40:39749:39757	3227424	2	True	+=			
ANR	3228393	Identifier	idx1		3227424	0					
ANR	3228394	PrimaryExpression	1		3227424	1					
ANR	3228395	CompoundStatement		117:51:4413:4413	3227424	3					
ANR	3228396	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228397	ForInit	idx2 = 0 ;	1288:21:39783:39791	3227424	0	True				
ANR	3228398	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228399	Identifier	idx2		3227424	0					
ANR	3228400	PrimaryExpression	0		3227424	1					
ANR	3228401	Condition	idx2 < xDiv	1288:31:39793:39803	3227424	1	True				
ANR	3228402	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228403	Identifier	idx2		3227424	0					
ANR	3228404	Identifier	xDiv		3227424	1					
ANR	3228405	AssignmentExpression	idx2 += 1	1288:44:39806:39814	3227424	2	True	+=			
ANR	3228406	Identifier	idx2		3227424	0					
ANR	3228407	PrimaryExpression	1		3227424	1					
ANR	3228408	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1289:20:39838:39894	3227424	3	True				
ANR	3228409	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228410	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		3227424	0					
ANR	3228411	Identifier	data		3227424	0					
ANR	3228412	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		3227424	1		+			
ANR	3228413	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228414	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228415	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228416	Identifier	idx1		3227424	0					
ANR	3228417	Identifier	xDiv		3227424	1					
ANR	3228418	Identifier	idx2		3227424	1					
ANR	3228419	Identifier	num_channels		3227424	1					
ANR	3228420	PrimaryExpression	3		3227424	1					
ANR	3228421	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228422	Identifier	sp		3227424	0					
ANR	3228423	Identifier	idx2		3227424	1					
ANR	3228424	ExpressionStatement	sp += widthY	1290:16:39912:39924	3227424	1	True				
ANR	3228425	AssignmentExpression	sp += widthY		3227424	0		+=			
ANR	3228426	Identifier	sp		3227424	0					
ANR	3228427	Identifier	widthY		3227424	1					
ANR	3228428	ElseStatement	else		3227424	0					
ANR	3228429	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		3227424	0					
ANR	3228430	Condition	con -> bpi == 16 || con -> bpi == 10	1294:13:39969:40000	3227424	0	True				
ANR	3228431	OrExpression	con -> bpi == 16 || con -> bpi == 10		3227424	0		||			
ANR	3228432	EqualityExpression	con -> bpi == 16		3227424	0		==			
ANR	3228433	PtrMemberAccess	con -> bpi		3227424	0					
ANR	3228434	Identifier	con		3227424	0					
ANR	3228435	Identifier	bpi		3227424	1					
ANR	3228436	PrimaryExpression	16		3227424	1					
ANR	3228437	EqualityExpression	con -> bpi == 10		3227424	1		==			
ANR	3228438	PtrMemberAccess	con -> bpi		3227424	0					
ANR	3228439	Identifier	con		3227424	0					
ANR	3228440	Identifier	bpi		3227424	1					
ANR	3228441	PrimaryExpression	10		3227424	1					
ANR	3228442	CompoundStatement		124:47:4656:4656	3227424	1					
ANR	3228443	IfStatement	if ( con -> sf == 1 )		3227424	0					
ANR	3228444	Condition	con -> sf == 1	1295:12:40017:40028	3227424	0	True				
ANR	3228445	EqualityExpression	con -> sf == 1		3227424	0		==			
ANR	3228446	PtrMemberAccess	con -> sf		3227424	0					
ANR	3228447	Identifier	con		3227424	0					
ANR	3228448	Identifier	sf		3227424	1					
ANR	3228449	PrimaryExpression	1		3227424	1					
ANR	3228450	CompoundStatement		127:12:4718:4762	3227424	1					
ANR	3228451	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + xDiv * mx ;	1297:12:40065:40109	3227424	0	True				
ANR	3228452	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + xDiv * mx		3227424	0					
ANR	3228453	IdentifierDeclType	uint16_t *		3227424	0					
ANR	3228454	Identifier	sp		3227424	1					
ANR	3228455	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + xDiv * mx		3227424	2		=			
ANR	3228456	Identifier	sp		3227424	0					
ANR	3228457	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx		3227424	1		+			
ANR	3228458	CastExpression	( uint16_t * ) con -> buf		3227424	0					
ANR	3228459	CastTarget	uint16_t *		3227424	0					
ANR	3228460	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228461	Identifier	con		3227424	0					
ANR	3228462	Identifier	buf		3227424	1					
ANR	3228463	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228464	Identifier	xDiv		3227424	0					
ANR	3228465	Identifier	mx		3227424	1					
ANR	3228466	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	1					
ANR	3228467	ForInit	idx1 = 0 ;	1298:17:40128:40136	3227424	0	True				
ANR	3228468	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228469	Identifier	idx1		3227424	0					
ANR	3228470	PrimaryExpression	0		3227424	1					
ANR	3228471	Condition	idx1 < yDiv	1298:27:40138:40148	3227424	1	True				
ANR	3228472	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228473	Identifier	idx1		3227424	0					
ANR	3228474	Identifier	yDiv		3227424	1					
ANR	3228475	AssignmentExpression	idx1 += 1	1298:40:40151:40159	3227424	2	True	+=			
ANR	3228476	Identifier	idx1		3227424	0					
ANR	3228477	PrimaryExpression	1		3227424	1					
ANR	3228478	CompoundStatement		128:51:4815:4815	3227424	3					
ANR	3228479	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228480	ForInit	idx2 = 0 ;	1299:21:40185:40193	3227424	0	True				
ANR	3228481	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228482	Identifier	idx2		3227424	0					
ANR	3228483	PrimaryExpression	0		3227424	1					
ANR	3228484	Condition	idx2 < xDiv	1299:31:40195:40205	3227424	1	True				
ANR	3228485	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228486	Identifier	idx2		3227424	0					
ANR	3228487	Identifier	xDiv		3227424	1					
ANR	3228488	AssignmentExpression	idx2 += 1	1299:44:40208:40216	3227424	2	True	+=			
ANR	3228489	Identifier	idx2		3227424	0					
ANR	3228490	PrimaryExpression	1		3227424	1					
ANR	3228491	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1300:20:40240:40296	3227424	3	True				
ANR	3228492	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228493	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		3227424	0					
ANR	3228494	Identifier	data		3227424	0					
ANR	3228495	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		3227424	1		+			
ANR	3228496	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228497	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228498	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228499	Identifier	idx1		3227424	0					
ANR	3228500	Identifier	xDiv		3227424	1					
ANR	3228501	Identifier	idx2		3227424	1					
ANR	3228502	Identifier	num_channels		3227424	1					
ANR	3228503	PrimaryExpression	0		3227424	1					
ANR	3228504	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228505	Identifier	sp		3227424	0					
ANR	3228506	Identifier	idx2		3227424	1					
ANR	3228507	ExpressionStatement	sp += widthY	1301:16:40314:40326	3227424	1	True				
ANR	3228508	AssignmentExpression	sp += widthY		3227424	0		+=			
ANR	3228509	Identifier	sp		3227424	0					
ANR	3228510	Identifier	widthY		3227424	1					
ANR	3228511	IfStatement	if ( con -> ycc_format == 2 )		3227424	2					
ANR	3228512	Condition	con -> ycc_format == 2	1304:16:40359:40378	3227424	0	True				
ANR	3228513	EqualityExpression	con -> ycc_format == 2		3227424	0		==			
ANR	3228514	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3228515	Identifier	con		3227424	0					
ANR	3228516	Identifier	ycc_format		3227424	1					
ANR	3228517	PrimaryExpression	2		3227424	1					
ANR	3228518	ExpressionStatement	xDiv = 8	1305:16:40397:40405	3227424	1	True				
ANR	3228519	AssignmentExpression	xDiv = 8		3227424	0		=			
ANR	3228520	Identifier	xDiv		3227424	0					
ANR	3228521	PrimaryExpression	8		3227424	1					
ANR	3228522	IfStatement	if ( con -> ycc_format == 1 )		3227424	3					
ANR	3228523	Condition	con -> ycc_format == 1	1307:16:40424:40443	3227424	0	True				
ANR	3228524	EqualityExpression	con -> ycc_format == 1		3227424	0		==			
ANR	3228525	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3228526	Identifier	con		3227424	0					
ANR	3228527	Identifier	ycc_format		3227424	1					
ANR	3228528	PrimaryExpression	1		3227424	1					
ANR	3228529	ExpressionStatement	xDiv = yDiv = 8	1308:16:40462:40477	3227424	1	True				
ANR	3228530	AssignmentExpression	xDiv = yDiv = 8		3227424	0		=			
ANR	3228531	Identifier	xDiv		3227424	0					
ANR	3228532	AssignmentExpression	yDiv = 8		3227424	1		=			
ANR	3228533	Identifier	yDiv		3227424	0					
ANR	3228534	PrimaryExpression	8		3227424	1					
ANR	3228535	ExpressionStatement	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + xDiv * mx	1311:12:40512:40567	3227424	4	True				
ANR	3228536	AssignmentExpression	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + xDiv * mx		3227424	0		=			
ANR	3228537	Identifier	sp		3227424	0					
ANR	3228538	AdditiveExpression	( uint16_t * ) con -> buf + widthY * MBheightY + xDiv * mx		3227424	1		+			
ANR	3228539	CastExpression	( uint16_t * ) con -> buf		3227424	0					
ANR	3228540	CastTarget	uint16_t *		3227424	0					
ANR	3228541	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228542	Identifier	con		3227424	0					
ANR	3228543	Identifier	buf		3227424	1					
ANR	3228544	AdditiveExpression	widthY * MBheightY + xDiv * mx		3227424	1		+			
ANR	3228545	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228546	Identifier	widthY		3227424	0					
ANR	3228547	Identifier	MBheightY		3227424	1					
ANR	3228548	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228549	Identifier	xDiv		3227424	0					
ANR	3228550	Identifier	mx		3227424	1					
ANR	3228551	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	5					
ANR	3228552	ForInit	idx1 = 0 ;	1312:17:40586:40594	3227424	0	True				
ANR	3228553	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228554	Identifier	idx1		3227424	0					
ANR	3228555	PrimaryExpression	0		3227424	1					
ANR	3228556	Condition	idx1 < yDiv	1312:27:40596:40606	3227424	1	True				
ANR	3228557	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228558	Identifier	idx1		3227424	0					
ANR	3228559	Identifier	yDiv		3227424	1					
ANR	3228560	AssignmentExpression	idx1 += 1	1312:40:40609:40617	3227424	2	True	+=			
ANR	3228561	Identifier	idx1		3227424	0					
ANR	3228562	PrimaryExpression	1		3227424	1					
ANR	3228563	CompoundStatement		142:51:5273:5273	3227424	3					
ANR	3228564	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228565	ForInit	idx2 = 0 ;	1313:21:40643:40651	3227424	0	True				
ANR	3228566	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228567	Identifier	idx2		3227424	0					
ANR	3228568	PrimaryExpression	0		3227424	1					
ANR	3228569	Condition	idx2 < xDiv	1313:31:40653:40663	3227424	1	True				
ANR	3228570	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228571	Identifier	idx2		3227424	0					
ANR	3228572	Identifier	xDiv		3227424	1					
ANR	3228573	AssignmentExpression	idx2 += 1	1313:44:40666:40674	3227424	2	True	+=			
ANR	3228574	Identifier	idx2		3227424	0					
ANR	3228575	PrimaryExpression	1		3227424	1					
ANR	3228576	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1314:20:40698:40754	3227424	3	True				
ANR	3228577	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228578	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		3227424	0					
ANR	3228579	Identifier	data		3227424	0					
ANR	3228580	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		3227424	1		+			
ANR	3228581	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228582	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228583	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228584	Identifier	idx1		3227424	0					
ANR	3228585	Identifier	xDiv		3227424	1					
ANR	3228586	Identifier	idx2		3227424	1					
ANR	3228587	Identifier	num_channels		3227424	1					
ANR	3228588	PrimaryExpression	1		3227424	1					
ANR	3228589	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228590	Identifier	sp		3227424	0					
ANR	3228591	Identifier	idx2		3227424	1					
ANR	3228592	ExpressionStatement	sp += widthUV	1315:16:40772:40785	3227424	1	True				
ANR	3228593	AssignmentExpression	sp += widthUV		3227424	0		+=			
ANR	3228594	Identifier	sp		3227424	0					
ANR	3228595	Identifier	widthUV		3227424	1					
ANR	3228596	ExpressionStatement	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx	1319:12:40834:40912	3227424	6	True				
ANR	3228597	AssignmentExpression	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	0		=			
ANR	3228598	Identifier	sp		3227424	0					
ANR	3228599	AdditiveExpression	( uint16_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228600	CastExpression	( uint16_t * ) con -> buf		3227424	0					
ANR	3228601	CastTarget	uint16_t *		3227424	0					
ANR	3228602	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228603	Identifier	con		3227424	0					
ANR	3228604	Identifier	buf		3227424	1					
ANR	3228605	AdditiveExpression	widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228606	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228607	Identifier	widthY		3227424	0					
ANR	3228608	Identifier	MBheightY		3227424	1					
ANR	3228609	AdditiveExpression	widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228610	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3228611	Identifier	widthUV		3227424	0					
ANR	3228612	Identifier	MBheightUV		3227424	1					
ANR	3228613	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228614	Identifier	xDiv		3227424	0					
ANR	3228615	Identifier	mx		3227424	1					
ANR	3228616	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	7					
ANR	3228617	ForInit	idx1 = 0 ;	1320:17:40931:40939	3227424	0	True				
ANR	3228618	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228619	Identifier	idx1		3227424	0					
ANR	3228620	PrimaryExpression	0		3227424	1					
ANR	3228621	Condition	idx1 < yDiv	1320:27:40941:40951	3227424	1	True				
ANR	3228622	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228623	Identifier	idx1		3227424	0					
ANR	3228624	Identifier	yDiv		3227424	1					
ANR	3228625	AssignmentExpression	idx1 += 1	1320:40:40954:40962	3227424	2	True	+=			
ANR	3228626	Identifier	idx1		3227424	0					
ANR	3228627	PrimaryExpression	1		3227424	1					
ANR	3228628	CompoundStatement		150:51:5618:5618	3227424	3					
ANR	3228629	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228630	ForInit	idx2 = 0 ;	1321:21:40988:40996	3227424	0	True				
ANR	3228631	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228632	Identifier	idx2		3227424	0					
ANR	3228633	PrimaryExpression	0		3227424	1					
ANR	3228634	Condition	idx2 < xDiv	1321:31:40998:41008	3227424	1	True				
ANR	3228635	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228636	Identifier	idx2		3227424	0					
ANR	3228637	Identifier	xDiv		3227424	1					
ANR	3228638	AssignmentExpression	idx2 += 1	1321:44:41011:41019	3227424	2	True	+=			
ANR	3228639	Identifier	idx2		3227424	0					
ANR	3228640	PrimaryExpression	1		3227424	1					
ANR	3228641	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1322:20:41043:41099	3227424	3	True				
ANR	3228642	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228643	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		3227424	0					
ANR	3228644	Identifier	data		3227424	0					
ANR	3228645	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		3227424	1		+			
ANR	3228646	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228647	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228648	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228649	Identifier	idx1		3227424	0					
ANR	3228650	Identifier	xDiv		3227424	1					
ANR	3228651	Identifier	idx2		3227424	1					
ANR	3228652	Identifier	num_channels		3227424	1					
ANR	3228653	PrimaryExpression	2		3227424	1					
ANR	3228654	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228655	Identifier	sp		3227424	0					
ANR	3228656	Identifier	idx2		3227424	1					
ANR	3228657	ExpressionStatement	sp += widthUV	1323:16:41117:41130	3227424	1	True				
ANR	3228658	AssignmentExpression	sp += widthUV		3227424	0		+=			
ANR	3228659	Identifier	sp		3227424	0					
ANR	3228660	Identifier	widthUV		3227424	1					
ANR	3228661	IfStatement	if ( con -> ncomp == 4 )		3227424	8					
ANR	3228662	Condition	con -> ncomp == 4	1326:15:41162:41176	3227424	0	True				
ANR	3228663	EqualityExpression	con -> ncomp == 4		3227424	0		==			
ANR	3228664	PtrMemberAccess	con -> ncomp		3227424	0					
ANR	3228665	Identifier	con		3227424	0					
ANR	3228666	Identifier	ncomp		3227424	1					
ANR	3228667	PrimaryExpression	4		3227424	1					
ANR	3228668	CompoundStatement		157:12:5844:5844	3227424	1					
ANR	3228669	ExpressionStatement	xDiv = yDiv = 16	1328:16:41209:41225	3227424	0	True				
ANR	3228670	AssignmentExpression	xDiv = yDiv = 16		3227424	0		=			
ANR	3228671	Identifier	xDiv		3227424	0					
ANR	3228672	AssignmentExpression	yDiv = 16		3227424	1		=			
ANR	3228673	Identifier	yDiv		3227424	0					
ANR	3228674	PrimaryExpression	16		3227424	1					
ANR	3228675	ExpressionStatement	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx	1329:16:41243:41326	3227424	1	True				
ANR	3228676	AssignmentExpression	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	0		=			
ANR	3228677	Identifier	sp		3227424	0					
ANR	3228678	AdditiveExpression	( uint16_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228679	CastExpression	( uint16_t * ) con -> buf		3227424	0					
ANR	3228680	CastTarget	uint16_t *		3227424	0					
ANR	3228681	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228682	Identifier	con		3227424	0					
ANR	3228683	Identifier	buf		3227424	1					
ANR	3228684	AdditiveExpression	widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228685	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228686	Identifier	widthY		3227424	0					
ANR	3228687	Identifier	MBheightY		3227424	1					
ANR	3228688	AdditiveExpression	2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228689	MultiplicativeExpression	2 * widthUV * MBheightUV		3227424	0		*			
ANR	3228690	PrimaryExpression	2		3227424	0					
ANR	3228691	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3228692	Identifier	widthUV		3227424	0					
ANR	3228693	Identifier	MBheightUV		3227424	1					
ANR	3228694	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228695	Identifier	xDiv		3227424	0					
ANR	3228696	Identifier	mx		3227424	1					
ANR	3228697	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	2					
ANR	3228698	ForInit	idx1 = 0 ;	1330:21:41349:41357	3227424	0	True				
ANR	3228699	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228700	Identifier	idx1		3227424	0					
ANR	3228701	PrimaryExpression	0		3227424	1					
ANR	3228702	Condition	idx1 < yDiv	1330:31:41359:41369	3227424	1	True				
ANR	3228703	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228704	Identifier	idx1		3227424	0					
ANR	3228705	Identifier	yDiv		3227424	1					
ANR	3228706	AssignmentExpression	idx1 += 1	1330:44:41372:41380	3227424	2	True	+=			
ANR	3228707	Identifier	idx1		3227424	0					
ANR	3228708	PrimaryExpression	1		3227424	1					
ANR	3228709	CompoundStatement		160:55:6036:6036	3227424	3					
ANR	3228710	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228711	ForInit	idx2 = 0 ;	1331:25:41410:41418	3227424	0	True				
ANR	3228712	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228713	Identifier	idx2		3227424	0					
ANR	3228714	PrimaryExpression	0		3227424	1					
ANR	3228715	Condition	idx2 < xDiv	1331:35:41420:41430	3227424	1	True				
ANR	3228716	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228717	Identifier	idx2		3227424	0					
ANR	3228718	Identifier	xDiv		3227424	1					
ANR	3228719	AssignmentExpression	idx2 += 1	1331:48:41433:41441	3227424	2	True	+=			
ANR	3228720	Identifier	idx2		3227424	0					
ANR	3228721	PrimaryExpression	1		3227424	1					
ANR	3228722	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1332:24:41469:41525	3227424	3	True				
ANR	3228723	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228724	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		3227424	0					
ANR	3228725	Identifier	data		3227424	0					
ANR	3228726	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		3227424	1		+			
ANR	3228727	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228728	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228729	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228730	Identifier	idx1		3227424	0					
ANR	3228731	Identifier	xDiv		3227424	1					
ANR	3228732	Identifier	idx2		3227424	1					
ANR	3228733	Identifier	num_channels		3227424	1					
ANR	3228734	PrimaryExpression	3		3227424	1					
ANR	3228735	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228736	Identifier	sp		3227424	0					
ANR	3228737	Identifier	idx2		3227424	1					
ANR	3228738	ExpressionStatement	sp += widthY	1333:20:41547:41559	3227424	1	True				
ANR	3228739	AssignmentExpression	sp += widthY		3227424	0		+=			
ANR	3228740	Identifier	sp		3227424	0					
ANR	3228741	Identifier	widthY		3227424	1					
ANR	3228742	ElseStatement	else		3227424	0					
ANR	3228743	IfStatement	if ( con -> sf == 2 )		3227424	0					
ANR	3228744	Condition	con -> sf == 2	1337:17:41620:41631	3227424	0	True				
ANR	3228745	EqualityExpression	con -> sf == 2		3227424	0		==			
ANR	3228746	PtrMemberAccess	con -> sf		3227424	0					
ANR	3228747	Identifier	con		3227424	0					
ANR	3228748	Identifier	sf		3227424	1					
ANR	3228749	PrimaryExpression	2		3227424	1					
ANR	3228750	CompoundStatement		169:12:6321:6359	3227424	1					
ANR	3228751	IdentifierDeclStatement	short * sp = ( short * ) con -> buf + xDiv * mx ;	1339:12:41668:41706	3227424	0	True				
ANR	3228752	IdentifierDecl	* sp = ( short * ) con -> buf + xDiv * mx		3227424	0					
ANR	3228753	IdentifierDeclType	short *		3227424	0					
ANR	3228754	Identifier	sp		3227424	1					
ANR	3228755	AssignmentExpression	* sp = ( short * ) con -> buf + xDiv * mx		3227424	2		=			
ANR	3228756	Identifier	sp		3227424	0					
ANR	3228757	AdditiveExpression	( short * ) con -> buf + xDiv * mx		3227424	1		+			
ANR	3228758	CastExpression	( short * ) con -> buf		3227424	0					
ANR	3228759	CastTarget	short *		3227424	0					
ANR	3228760	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228761	Identifier	con		3227424	0					
ANR	3228762	Identifier	buf		3227424	1					
ANR	3228763	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228764	Identifier	xDiv		3227424	0					
ANR	3228765	Identifier	mx		3227424	1					
ANR	3228766	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	1					
ANR	3228767	ForInit	idx1 = 0 ;	1340:17:41725:41733	3227424	0	True				
ANR	3228768	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228769	Identifier	idx1		3227424	0					
ANR	3228770	PrimaryExpression	0		3227424	1					
ANR	3228771	Condition	idx1 < yDiv	1340:27:41735:41745	3227424	1	True				
ANR	3228772	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228773	Identifier	idx1		3227424	0					
ANR	3228774	Identifier	yDiv		3227424	1					
ANR	3228775	AssignmentExpression	idx1 += 1	1340:40:41748:41756	3227424	2	True	+=			
ANR	3228776	Identifier	idx1		3227424	0					
ANR	3228777	PrimaryExpression	1		3227424	1					
ANR	3228778	CompoundStatement		170:51:6412:6412	3227424	3					
ANR	3228779	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228780	ForInit	idx2 = 0 ;	1341:21:41782:41790	3227424	0	True				
ANR	3228781	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228782	Identifier	idx2		3227424	0					
ANR	3228783	PrimaryExpression	0		3227424	1					
ANR	3228784	Condition	idx2 < xDiv	1341:31:41792:41802	3227424	1	True				
ANR	3228785	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228786	Identifier	idx2		3227424	0					
ANR	3228787	Identifier	xDiv		3227424	1					
ANR	3228788	AssignmentExpression	idx2 += 1	1341:44:41805:41813	3227424	2	True	+=			
ANR	3228789	Identifier	idx2		3227424	0					
ANR	3228790	PrimaryExpression	1		3227424	1					
ANR	3228791	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1342:20:41837:41893	3227424	3	True				
ANR	3228792	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228793	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		3227424	0					
ANR	3228794	Identifier	data		3227424	0					
ANR	3228795	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		3227424	1		+			
ANR	3228796	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228797	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228798	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228799	Identifier	idx1		3227424	0					
ANR	3228800	Identifier	xDiv		3227424	1					
ANR	3228801	Identifier	idx2		3227424	1					
ANR	3228802	Identifier	num_channels		3227424	1					
ANR	3228803	PrimaryExpression	0		3227424	1					
ANR	3228804	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228805	Identifier	sp		3227424	0					
ANR	3228806	Identifier	idx2		3227424	1					
ANR	3228807	ExpressionStatement	sp += widthY	1343:16:41911:41923	3227424	1	True				
ANR	3228808	AssignmentExpression	sp += widthY		3227424	0		+=			
ANR	3228809	Identifier	sp		3227424	0					
ANR	3228810	Identifier	widthY		3227424	1					
ANR	3228811	IfStatement	if ( con -> ycc_format == 2 )		3227424	2					
ANR	3228812	Condition	con -> ycc_format == 2	1346:16:41956:41975	3227424	0	True				
ANR	3228813	EqualityExpression	con -> ycc_format == 2		3227424	0		==			
ANR	3228814	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3228815	Identifier	con		3227424	0					
ANR	3228816	Identifier	ycc_format		3227424	1					
ANR	3228817	PrimaryExpression	2		3227424	1					
ANR	3228818	ExpressionStatement	xDiv = 8	1347:16:41994:42002	3227424	1	True				
ANR	3228819	AssignmentExpression	xDiv = 8		3227424	0		=			
ANR	3228820	Identifier	xDiv		3227424	0					
ANR	3228821	PrimaryExpression	8		3227424	1					
ANR	3228822	IfStatement	if ( con -> ycc_format == 1 )		3227424	3					
ANR	3228823	Condition	con -> ycc_format == 1	1349:16:42021:42040	3227424	0	True				
ANR	3228824	EqualityExpression	con -> ycc_format == 1		3227424	0		==			
ANR	3228825	PtrMemberAccess	con -> ycc_format		3227424	0					
ANR	3228826	Identifier	con		3227424	0					
ANR	3228827	Identifier	ycc_format		3227424	1					
ANR	3228828	PrimaryExpression	1		3227424	1					
ANR	3228829	ExpressionStatement	xDiv = yDiv = 8	1350:16:42059:42074	3227424	1	True				
ANR	3228830	AssignmentExpression	xDiv = yDiv = 8		3227424	0		=			
ANR	3228831	Identifier	xDiv		3227424	0					
ANR	3228832	AssignmentExpression	yDiv = 8		3227424	1		=			
ANR	3228833	Identifier	yDiv		3227424	0					
ANR	3228834	PrimaryExpression	8		3227424	1					
ANR	3228835	ExpressionStatement	sp = ( short * ) con -> buf + widthY * MBheightY + xDiv * mx	1353:12:42109:42161	3227424	4	True				
ANR	3228836	AssignmentExpression	sp = ( short * ) con -> buf + widthY * MBheightY + xDiv * mx		3227424	0		=			
ANR	3228837	Identifier	sp		3227424	0					
ANR	3228838	AdditiveExpression	( short * ) con -> buf + widthY * MBheightY + xDiv * mx		3227424	1		+			
ANR	3228839	CastExpression	( short * ) con -> buf		3227424	0					
ANR	3228840	CastTarget	short *		3227424	0					
ANR	3228841	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228842	Identifier	con		3227424	0					
ANR	3228843	Identifier	buf		3227424	1					
ANR	3228844	AdditiveExpression	widthY * MBheightY + xDiv * mx		3227424	1		+			
ANR	3228845	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228846	Identifier	widthY		3227424	0					
ANR	3228847	Identifier	MBheightY		3227424	1					
ANR	3228848	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228849	Identifier	xDiv		3227424	0					
ANR	3228850	Identifier	mx		3227424	1					
ANR	3228851	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	5					
ANR	3228852	ForInit	idx1 = 0 ;	1354:17:42180:42188	3227424	0	True				
ANR	3228853	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228854	Identifier	idx1		3227424	0					
ANR	3228855	PrimaryExpression	0		3227424	1					
ANR	3228856	Condition	idx1 < yDiv	1354:27:42190:42200	3227424	1	True				
ANR	3228857	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228858	Identifier	idx1		3227424	0					
ANR	3228859	Identifier	yDiv		3227424	1					
ANR	3228860	AssignmentExpression	idx1 += 1	1354:40:42203:42211	3227424	2	True	+=			
ANR	3228861	Identifier	idx1		3227424	0					
ANR	3228862	PrimaryExpression	1		3227424	1					
ANR	3228863	CompoundStatement		184:51:6867:6867	3227424	3					
ANR	3228864	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228865	ForInit	idx2 = 0 ;	1355:21:42237:42245	3227424	0	True				
ANR	3228866	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228867	Identifier	idx2		3227424	0					
ANR	3228868	PrimaryExpression	0		3227424	1					
ANR	3228869	Condition	idx2 < xDiv	1355:31:42247:42257	3227424	1	True				
ANR	3228870	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228871	Identifier	idx2		3227424	0					
ANR	3228872	Identifier	xDiv		3227424	1					
ANR	3228873	AssignmentExpression	idx2 += 1	1355:44:42260:42268	3227424	2	True	+=			
ANR	3228874	Identifier	idx2		3227424	0					
ANR	3228875	PrimaryExpression	1		3227424	1					
ANR	3228876	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1356:20:42292:42348	3227424	3	True				
ANR	3228877	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228878	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		3227424	0					
ANR	3228879	Identifier	data		3227424	0					
ANR	3228880	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		3227424	1		+			
ANR	3228881	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228882	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228883	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228884	Identifier	idx1		3227424	0					
ANR	3228885	Identifier	xDiv		3227424	1					
ANR	3228886	Identifier	idx2		3227424	1					
ANR	3228887	Identifier	num_channels		3227424	1					
ANR	3228888	PrimaryExpression	1		3227424	1					
ANR	3228889	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228890	Identifier	sp		3227424	0					
ANR	3228891	Identifier	idx2		3227424	1					
ANR	3228892	ExpressionStatement	sp += widthUV	1357:16:42366:42379	3227424	1	True				
ANR	3228893	AssignmentExpression	sp += widthUV		3227424	0		+=			
ANR	3228894	Identifier	sp		3227424	0					
ANR	3228895	Identifier	widthUV		3227424	1					
ANR	3228896	ExpressionStatement	sp = ( short * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx	1361:12:42428:42503	3227424	6	True				
ANR	3228897	AssignmentExpression	sp = ( short * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	0		=			
ANR	3228898	Identifier	sp		3227424	0					
ANR	3228899	AdditiveExpression	( short * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228900	CastExpression	( short * ) con -> buf		3227424	0					
ANR	3228901	CastTarget	short *		3227424	0					
ANR	3228902	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228903	Identifier	con		3227424	0					
ANR	3228904	Identifier	buf		3227424	1					
ANR	3228905	AdditiveExpression	widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228906	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228907	Identifier	widthY		3227424	0					
ANR	3228908	Identifier	MBheightY		3227424	1					
ANR	3228909	AdditiveExpression	widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228910	MultiplicativeExpression	widthUV * MBheightUV		3227424	0		*			
ANR	3228911	Identifier	widthUV		3227424	0					
ANR	3228912	Identifier	MBheightUV		3227424	1					
ANR	3228913	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228914	Identifier	xDiv		3227424	0					
ANR	3228915	Identifier	mx		3227424	1					
ANR	3228916	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	7					
ANR	3228917	ForInit	idx1 = 0 ;	1362:17:42522:42530	3227424	0	True				
ANR	3228918	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3228919	Identifier	idx1		3227424	0					
ANR	3228920	PrimaryExpression	0		3227424	1					
ANR	3228921	Condition	idx1 < yDiv	1362:27:42532:42542	3227424	1	True				
ANR	3228922	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3228923	Identifier	idx1		3227424	0					
ANR	3228924	Identifier	yDiv		3227424	1					
ANR	3228925	AssignmentExpression	idx1 += 1	1362:40:42545:42553	3227424	2	True	+=			
ANR	3228926	Identifier	idx1		3227424	0					
ANR	3228927	PrimaryExpression	1		3227424	1					
ANR	3228928	CompoundStatement		192:51:7209:7209	3227424	3					
ANR	3228929	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3228930	ForInit	idx2 = 0 ;	1363:21:42579:42587	3227424	0	True				
ANR	3228931	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3228932	Identifier	idx2		3227424	0					
ANR	3228933	PrimaryExpression	0		3227424	1					
ANR	3228934	Condition	idx2 < xDiv	1363:31:42589:42599	3227424	1	True				
ANR	3228935	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3228936	Identifier	idx2		3227424	0					
ANR	3228937	Identifier	xDiv		3227424	1					
ANR	3228938	AssignmentExpression	idx2 += 1	1363:44:42602:42610	3227424	2	True	+=			
ANR	3228939	Identifier	idx2		3227424	0					
ANR	3228940	PrimaryExpression	1		3227424	1					
ANR	3228941	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1364:20:42634:42690	3227424	3	True				
ANR	3228942	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		3227424	0		=			
ANR	3228943	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		3227424	0					
ANR	3228944	Identifier	data		3227424	0					
ANR	3228945	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		3227424	1		+			
ANR	3228946	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3228947	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3228948	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3228949	Identifier	idx1		3227424	0					
ANR	3228950	Identifier	xDiv		3227424	1					
ANR	3228951	Identifier	idx2		3227424	1					
ANR	3228952	Identifier	num_channels		3227424	1					
ANR	3228953	PrimaryExpression	2		3227424	1					
ANR	3228954	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3228955	Identifier	sp		3227424	0					
ANR	3228956	Identifier	idx2		3227424	1					
ANR	3228957	ExpressionStatement	sp += widthUV	1365:16:42708:42721	3227424	1	True				
ANR	3228958	AssignmentExpression	sp += widthUV		3227424	0		+=			
ANR	3228959	Identifier	sp		3227424	0					
ANR	3228960	Identifier	widthUV		3227424	1					
ANR	3228961	IfStatement	if ( con -> ncomp == 4 )		3227424	8					
ANR	3228962	Condition	con -> ncomp == 4	1368:15:42753:42767	3227424	0	True				
ANR	3228963	EqualityExpression	con -> ncomp == 4		3227424	0		==			
ANR	3228964	PtrMemberAccess	con -> ncomp		3227424	0					
ANR	3228965	Identifier	con		3227424	0					
ANR	3228966	Identifier	ncomp		3227424	1					
ANR	3228967	PrimaryExpression	4		3227424	1					
ANR	3228968	CompoundStatement		199:12:7435:7435	3227424	1					
ANR	3228969	ExpressionStatement	xDiv = yDiv = 16	1370:16:42800:42816	3227424	0	True				
ANR	3228970	AssignmentExpression	xDiv = yDiv = 16		3227424	0		=			
ANR	3228971	Identifier	xDiv		3227424	0					
ANR	3228972	AssignmentExpression	yDiv = 16		3227424	1		=			
ANR	3228973	Identifier	yDiv		3227424	0					
ANR	3228974	PrimaryExpression	16		3227424	1					
ANR	3228975	ExpressionStatement	sp = ( short * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx	1371:16:42834:42914	3227424	1	True				
ANR	3228976	AssignmentExpression	sp = ( short * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	0		=			
ANR	3228977	Identifier	sp		3227424	0					
ANR	3228978	AdditiveExpression	( short * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228979	CastExpression	( short * ) con -> buf		3227424	0					
ANR	3228980	CastTarget	short *		3227424	0					
ANR	3228981	PtrMemberAccess	con -> buf		3227424	1					
ANR	3228982	Identifier	con		3227424	0					
ANR	3228983	Identifier	buf		3227424	1					
ANR	3228984	AdditiveExpression	widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228985	MultiplicativeExpression	widthY * MBheightY		3227424	0		*			
ANR	3228986	Identifier	widthY		3227424	0					
ANR	3228987	Identifier	MBheightY		3227424	1					
ANR	3228988	AdditiveExpression	2 * widthUV * MBheightUV + xDiv * mx		3227424	1		+			
ANR	3228989	MultiplicativeExpression	2 * widthUV * MBheightUV		3227424	0		*			
ANR	3228990	PrimaryExpression	2		3227424	0					
ANR	3228991	MultiplicativeExpression	widthUV * MBheightUV		3227424	1		*			
ANR	3228992	Identifier	widthUV		3227424	0					
ANR	3228993	Identifier	MBheightUV		3227424	1					
ANR	3228994	MultiplicativeExpression	xDiv * mx		3227424	1		*			
ANR	3228995	Identifier	xDiv		3227424	0					
ANR	3228996	Identifier	mx		3227424	1					
ANR	3228997	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3227424	2					
ANR	3228998	ForInit	idx1 = 0 ;	1372:21:42937:42945	3227424	0	True				
ANR	3228999	AssignmentExpression	idx1 = 0		3227424	0		=			
ANR	3229000	Identifier	idx1		3227424	0					
ANR	3229001	PrimaryExpression	0		3227424	1					
ANR	3229002	Condition	idx1 < yDiv	1372:31:42947:42957	3227424	1	True				
ANR	3229003	RelationalExpression	idx1 < yDiv		3227424	0		<			
ANR	3229004	Identifier	idx1		3227424	0					
ANR	3229005	Identifier	yDiv		3227424	1					
ANR	3229006	AssignmentExpression	idx1 += 1	1372:44:42960:42968	3227424	2	True	+=			
ANR	3229007	Identifier	idx1		3227424	0					
ANR	3229008	PrimaryExpression	1		3227424	1					
ANR	3229009	CompoundStatement		202:55:7624:7624	3227424	3					
ANR	3229010	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3227424	0					
ANR	3229011	ForInit	idx2 = 0 ;	1373:25:42998:43006	3227424	0	True				
ANR	3229012	AssignmentExpression	idx2 = 0		3227424	0		=			
ANR	3229013	Identifier	idx2		3227424	0					
ANR	3229014	PrimaryExpression	0		3227424	1					
ANR	3229015	Condition	idx2 < xDiv	1373:35:43008:43018	3227424	1	True				
ANR	3229016	RelationalExpression	idx2 < xDiv		3227424	0		<			
ANR	3229017	Identifier	idx2		3227424	0					
ANR	3229018	Identifier	xDiv		3227424	1					
ANR	3229019	AssignmentExpression	idx2 += 1	1373:48:43021:43029	3227424	2	True	+=			
ANR	3229020	Identifier	idx2		3227424	0					
ANR	3229021	PrimaryExpression	1		3227424	1					
ANR	3229022	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1374:24:43057:43113	3227424	3	True				
ANR	3229023	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		3227424	0		=			
ANR	3229024	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		3227424	0					
ANR	3229025	Identifier	data		3227424	0					
ANR	3229026	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		3227424	1		+			
ANR	3229027	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3227424	0		*			
ANR	3229028	AdditiveExpression	idx1 * xDiv + idx2		3227424	0		+			
ANR	3229029	MultiplicativeExpression	idx1 * xDiv		3227424	0		*			
ANR	3229030	Identifier	idx1		3227424	0					
ANR	3229031	Identifier	xDiv		3227424	1					
ANR	3229032	Identifier	idx2		3227424	1					
ANR	3229033	Identifier	num_channels		3227424	1					
ANR	3229034	PrimaryExpression	3		3227424	1					
ANR	3229035	ArrayIndexing	sp [ idx2 ]		3227424	1					
ANR	3229036	Identifier	sp		3227424	0					
ANR	3229037	Identifier	idx2		3227424	1					
ANR	3229038	ExpressionStatement	sp += widthY	1375:20:43135:43147	3227424	1	True				
ANR	3229039	AssignmentExpression	sp += widthY		3227424	0		+=			
ANR	3229040	Identifier	sp		3227424	0					
ANR	3229041	Identifier	widthY		3227424	1					
ANR	3229042	ReturnType	void		3227424	1					
ANR	3229043	Identifier	read_file_YCC		3227424	2					
ANR	3229044	ParameterList	"jxr_image_t image , int mx , int my , int * data"		3227424	3					
ANR	3229045	Parameter	jxr_image_t image	1171:19:35300:35316	3227424	0	True				
ANR	3229046	ParameterType	jxr_image_t		3227424	0					
ANR	3229047	Identifier	image		3227424	1					
ANR	3229048	Parameter	int mx	1171:38:35319:35324	3227424	1	True				
ANR	3229049	ParameterType	int		3227424	0					
ANR	3229050	Identifier	mx		3227424	1					
ANR	3229051	Parameter	int my	1171:46:35327:35332	3227424	2	True				
ANR	3229052	ParameterType	int		3227424	0					
ANR	3229053	Identifier	my		3227424	1					
ANR	3229054	Parameter	int * data	1171:54:35335:35343	3227424	3	True				
ANR	3229055	ParameterType	int *		3227424	0					
ANR	3229056	Identifier	data		3227424	1					
ANR	3229057	CFGEntryNode	ENTRY		3227424		True				
ANR	3229058	CFGExitNode	EXIT		3227424		True				
ANR	3229059	Symbol	num_channels		3227424						
ANR	3229060	Symbol	* sp		3227424						
ANR	3229061	Symbol	con		3227424						
ANR	3229062	Symbol	data		3227424						
ANR	3229063	Symbol	jxr_get_user_data		3227424						
ANR	3229064	Symbol	con -> ncomp		3227424						
ANR	3229065	Symbol	MBheightUV		3227424						
ANR	3229066	Symbol	* xDiv		3227424						
ANR	3229067	Symbol	heightY		3227424						
ANR	3229068	Symbol	widthUV		3227424						
ANR	3229069	Symbol	xDiv		3227424						
ANR	3229070	Symbol	heightUV		3227424						
ANR	3229071	Symbol	* con		3227424						
ANR	3229072	Symbol	offsetY		3227424						
ANR	3229073	Symbol	widthY		3227424						
ANR	3229074	Symbol	* idx2		3227424						
ANR	3229075	Symbol	con -> bpi		3227424						
ANR	3229076	Symbol	* idx1		3227424						
ANR	3229077	Symbol	offsetV		3227424						
ANR	3229078	Symbol	offsetU		3227424						
ANR	3229079	Symbol	sp		3227424						
ANR	3229080	Symbol	con -> wid		3227424						
ANR	3229081	Symbol	sizeUV		3227424						
ANR	3229082	Symbol	SEEK_SET		3227424						
ANR	3229083	Symbol	yDiv		3227424						
ANR	3229084	Symbol	image		3227424						
ANR	3229085	Symbol	MBheightY		3227424						
ANR	3229086	Symbol	con -> hei		3227424						
ANR	3229087	Symbol	idx2		3227424						
ANR	3229088	Symbol	con -> my		3227424						
ANR	3229089	Symbol	idx1		3227424						
ANR	3229090	Symbol	con -> ycc_format		3227424						
ANR	3229091	Symbol	mx		3227424						
ANR	3229092	Symbol	my		3227424						
ANR	3229093	Symbol	* num_channels		3227424						
ANR	3229094	Symbol	offsetA		3227424						
ANR	3229095	Symbol	con -> sf		3227424						
ANR	3229096	Symbol	con -> buf		3227424						
ANR	3229097	Symbol	* data		3227424						
ANR	3229098	Symbol	sizeY		3227424						
ANR	3229099	Function	read_file_CMYK	1382:0:43200:49692							
ANR	3229100	FunctionDef	"read_file_CMYK (jxr_image_t image , int mx , int my , int * data)"		3229099	0					
ANR	3229101	CompoundStatement		1382:66:43266:49692	3229099	0					
ANR	3229102	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1384:4:43362:43412	3229099	0	True				
ANR	3229103	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3229099	0					
ANR	3229104	IdentifierDeclType	context *		3229099	0					
ANR	3229105	Identifier	con		3229099	1					
ANR	3229106	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3229099	2		=			
ANR	3229107	Identifier	con		3229099	0					
ANR	3229108	CastExpression	( context * ) jxr_get_user_data ( image )		3229099	1					
ANR	3229109	CastTarget	context *		3229099	0					
ANR	3229110	CallExpression	jxr_get_user_data ( image )		3229099	1					
ANR	3229111	Callee	jxr_get_user_data		3229099	0					
ANR	3229112	Identifier	jxr_get_user_data		3229099	0					
ANR	3229113	ArgumentList	image		3229099	1					
ANR	3229114	Argument	image		3229099	0					
ANR	3229115	Identifier	image		3229099	0					
ANR	3229116	IdentifierDeclStatement	int num_channels = con -> ncomp ;	1385:4:43418:43447	3229099	1	True				
ANR	3229117	IdentifierDecl	num_channels = con -> ncomp		3229099	0					
ANR	3229118	IdentifierDeclType	int		3229099	0					
ANR	3229119	Identifier	num_channels		3229099	1					
ANR	3229120	AssignmentExpression	num_channels = con -> ncomp		3229099	2		=			
ANR	3229121	Identifier	num_channels		3229099	0					
ANR	3229122	PtrMemberAccess	con -> ncomp		3229099	1					
ANR	3229123	Identifier	con		3229099	0					
ANR	3229124	Identifier	ncomp		3229099	1					
ANR	3229125	IdentifierDeclStatement	"unsigned int width = con -> wid , height = con -> hei ;"	1387:4:43454:43502	3229099	2	True				
ANR	3229126	IdentifierDecl	width = con -> wid		3229099	0					
ANR	3229127	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229128	Identifier	width		3229099	1					
ANR	3229129	AssignmentExpression	width = con -> wid		3229099	2		=			
ANR	3229130	Identifier	width		3229099	0					
ANR	3229131	PtrMemberAccess	con -> wid		3229099	1					
ANR	3229132	Identifier	con		3229099	0					
ANR	3229133	Identifier	wid		3229099	1					
ANR	3229134	IdentifierDecl	height = con -> hei		3229099	1					
ANR	3229135	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229136	Identifier	height		3229099	1					
ANR	3229137	AssignmentExpression	height = con -> hei		3229099	2		=			
ANR	3229138	Identifier	height		3229099	0					
ANR	3229139	PtrMemberAccess	con -> hei		3229099	1					
ANR	3229140	Identifier	con		3229099	0					
ANR	3229141	Identifier	hei		3229099	1					
ANR	3229142	IdentifierDeclStatement	unsigned int MBheight = 16 ;	1388:4:43508:43534	3229099	3	True				
ANR	3229143	IdentifierDecl	MBheight = 16		3229099	0					
ANR	3229144	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229145	Identifier	MBheight		3229099	1					
ANR	3229146	AssignmentExpression	MBheight = 16		3229099	2		=			
ANR	3229147	Identifier	MBheight		3229099	0					
ANR	3229148	PrimaryExpression	16		3229099	1					
ANR	3229149	IdentifierDeclStatement	unsigned int size = width * height ;	1389:4:43540:43574	3229099	4	True				
ANR	3229150	IdentifierDecl	size = width * height		3229099	0					
ANR	3229151	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229152	Identifier	size		3229099	1					
ANR	3229153	AssignmentExpression	size = width * height		3229099	2		=			
ANR	3229154	Identifier	size		3229099	0					
ANR	3229155	MultiplicativeExpression	width * height		3229099	1		*			
ANR	3229156	Identifier	width		3229099	0					
ANR	3229157	Identifier	height		3229099	1					
ANR	3229158	IfStatement	if ( my != con -> my )		3229099	5					
ANR	3229159	Condition	my != con -> my	1391:8:43585:43597	3229099	0	True				
ANR	3229160	EqualityExpression	my != con -> my		3229099	0		!=			
ANR	3229161	Identifier	my		3229099	0					
ANR	3229162	PtrMemberAccess	con -> my		3229099	1					
ANR	3229163	Identifier	con		3229099	0					
ANR	3229164	Identifier	my		3229099	1					
ANR	3229165	CompoundStatement		10:23:333:333	3229099	1					
ANR	3229166	IfStatement	if ( con -> bpi == 8 )		3229099	0					
ANR	3229167	Condition	con -> bpi == 8	1392:12:43614:43626	3229099	0	True				
ANR	3229168	EqualityExpression	con -> bpi == 8		3229099	0		==			
ANR	3229169	PtrMemberAccess	con -> bpi		3229099	0					
ANR	3229170	Identifier	con		3229099	0					
ANR	3229171	Identifier	bpi		3229099	1					
ANR	3229172	PrimaryExpression	8		3229099	1					
ANR	3229173	CompoundStatement		18:12:722:754	3229099	1					
ANR	3229174	IdentifierDeclStatement	unsigned int offsetC = my * MBheight * width + 0 * size ;	1393:12:43643:43698	3229099	0	True				
ANR	3229175	IdentifierDecl	offsetC = my * MBheight * width + 0 * size		3229099	0					
ANR	3229176	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229177	Identifier	offsetC		3229099	1					
ANR	3229178	AssignmentExpression	offsetC = my * MBheight * width + 0 * size		3229099	2		=			
ANR	3229179	Identifier	offsetC		3229099	0					
ANR	3229180	AdditiveExpression	my * MBheight * width + 0 * size		3229099	1		+			
ANR	3229181	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229182	Identifier	my		3229099	0					
ANR	3229183	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229184	Identifier	MBheight		3229099	0					
ANR	3229185	Identifier	width		3229099	1					
ANR	3229186	MultiplicativeExpression	0 * size		3229099	1		*			
ANR	3229187	PrimaryExpression	0		3229099	0					
ANR	3229188	Identifier	size		3229099	1					
ANR	3229189	IdentifierDeclStatement	unsigned int offsetM = my * MBheight * width + 1 * size ;	1394:12:43712:43767	3229099	1	True				
ANR	3229190	IdentifierDecl	offsetM = my * MBheight * width + 1 * size		3229099	0					
ANR	3229191	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229192	Identifier	offsetM		3229099	1					
ANR	3229193	AssignmentExpression	offsetM = my * MBheight * width + 1 * size		3229099	2		=			
ANR	3229194	Identifier	offsetM		3229099	0					
ANR	3229195	AdditiveExpression	my * MBheight * width + 1 * size		3229099	1		+			
ANR	3229196	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229197	Identifier	my		3229099	0					
ANR	3229198	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229199	Identifier	MBheight		3229099	0					
ANR	3229200	Identifier	width		3229099	1					
ANR	3229201	MultiplicativeExpression	1 * size		3229099	1		*			
ANR	3229202	PrimaryExpression	1		3229099	0					
ANR	3229203	Identifier	size		3229099	1					
ANR	3229204	IdentifierDeclStatement	unsigned int offsetY = my * MBheight * width + 2 * size ;	1395:12:43781:43836	3229099	2	True				
ANR	3229205	IdentifierDecl	offsetY = my * MBheight * width + 2 * size		3229099	0					
ANR	3229206	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229207	Identifier	offsetY		3229099	1					
ANR	3229208	AssignmentExpression	offsetY = my * MBheight * width + 2 * size		3229099	2		=			
ANR	3229209	Identifier	offsetY		3229099	0					
ANR	3229210	AdditiveExpression	my * MBheight * width + 2 * size		3229099	1		+			
ANR	3229211	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229212	Identifier	my		3229099	0					
ANR	3229213	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229214	Identifier	MBheight		3229099	0					
ANR	3229215	Identifier	width		3229099	1					
ANR	3229216	MultiplicativeExpression	2 * size		3229099	1		*			
ANR	3229217	PrimaryExpression	2		3229099	0					
ANR	3229218	Identifier	size		3229099	1					
ANR	3229219	IdentifierDeclStatement	unsigned int offsetK = my * MBheight * width + 3 * size ;	1396:12:43850:43905	3229099	3	True				
ANR	3229220	IdentifierDecl	offsetK = my * MBheight * width + 3 * size		3229099	0					
ANR	3229221	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229222	Identifier	offsetK		3229099	1					
ANR	3229223	AssignmentExpression	offsetK = my * MBheight * width + 3 * size		3229099	2		=			
ANR	3229224	Identifier	offsetK		3229099	0					
ANR	3229225	AdditiveExpression	my * MBheight * width + 3 * size		3229099	1		+			
ANR	3229226	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229227	Identifier	my		3229099	0					
ANR	3229228	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229229	Identifier	MBheight		3229099	0					
ANR	3229230	Identifier	width		3229099	1					
ANR	3229231	MultiplicativeExpression	3 * size		3229099	1		*			
ANR	3229232	PrimaryExpression	3		3229099	0					
ANR	3229233	Identifier	size		3229099	1					
ANR	3229234	IdentifierDeclStatement	unsigned int offsetA = my * MBheight * width + 4 * size ;	1397:12:43919:43974	3229099	4	True				
ANR	3229235	IdentifierDecl	offsetA = my * MBheight * width + 4 * size		3229099	0					
ANR	3229236	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229237	Identifier	offsetA		3229099	1					
ANR	3229238	AssignmentExpression	offsetA = my * MBheight * width + 4 * size		3229099	2		=			
ANR	3229239	Identifier	offsetA		3229099	0					
ANR	3229240	AdditiveExpression	my * MBheight * width + 4 * size		3229099	1		+			
ANR	3229241	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229242	Identifier	my		3229099	0					
ANR	3229243	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229244	Identifier	MBheight		3229099	0					
ANR	3229245	Identifier	width		3229099	1					
ANR	3229246	MultiplicativeExpression	4 * size		3229099	1		*			
ANR	3229247	PrimaryExpression	4		3229099	0					
ANR	3229248	Identifier	size		3229099	1					
ANR	3229249	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1399:12:43989:44021	3229099	5	True				
ANR	3229250	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		3229099	0					
ANR	3229251	IdentifierDeclType	uint8_t *		3229099	0					
ANR	3229252	Identifier	sp		3229099	1					
ANR	3229253	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		3229099	2		=			
ANR	3229254	Identifier	sp		3229099	0					
ANR	3229255	CastExpression	( uint8_t * ) con -> buf		3229099	1					
ANR	3229256	CastTarget	uint8_t *		3229099	0					
ANR	3229257	PtrMemberAccess	con -> buf		3229099	1					
ANR	3229258	Identifier	con		3229099	0					
ANR	3229259	Identifier	buf		3229099	1					
ANR	3229260	ExpressionStatement	"seek_file ( con , offsetC , SEEK_SET )"	1401:12:44036:44069	3229099	6	True				
ANR	3229261	CallExpression	"seek_file ( con , offsetC , SEEK_SET )"		3229099	0					
ANR	3229262	Callee	seek_file		3229099	0					
ANR	3229263	Identifier	seek_file		3229099	0					
ANR	3229264	ArgumentList	con		3229099	1					
ANR	3229265	Argument	con		3229099	0					
ANR	3229266	Identifier	con		3229099	0					
ANR	3229267	Argument	offsetC		3229099	1					
ANR	3229268	Identifier	offsetC		3229099	0					
ANR	3229269	Argument	SEEK_SET		3229099	2					
ANR	3229270	Identifier	SEEK_SET		3229099	0					
ANR	3229271	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1402:12:44083:44114	3229099	7	True				
ANR	3229272	CallExpression	"memset ( sp , 0 , width * MBheight )"		3229099	0					
ANR	3229273	Callee	memset		3229099	0					
ANR	3229274	Identifier	memset		3229099	0					
ANR	3229275	ArgumentList	sp		3229099	1					
ANR	3229276	Argument	sp		3229099	0					
ANR	3229277	Identifier	sp		3229099	0					
ANR	3229278	Argument	0		3229099	1					
ANR	3229279	PrimaryExpression	0		3229099	0					
ANR	3229280	Argument	width * MBheight		3229099	2					
ANR	3229281	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229282	Identifier	width		3229099	0					
ANR	3229283	Identifier	MBheight		3229099	1					
ANR	3229284	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1403:12:44128:44167	3229099	8	True				
ANR	3229285	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		3229099	0					
ANR	3229286	Callee	read_data		3229099	0					
ANR	3229287	Identifier	read_data		3229099	0					
ANR	3229288	ArgumentList	con		3229099	1					
ANR	3229289	Argument	con		3229099	0					
ANR	3229290	Identifier	con		3229099	0					
ANR	3229291	Argument	sp		3229099	1					
ANR	3229292	Identifier	sp		3229099	0					
ANR	3229293	Argument	1		3229099	2					
ANR	3229294	PrimaryExpression	1		3229099	0					
ANR	3229295	Argument	width * MBheight		3229099	3					
ANR	3229296	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229297	Identifier	width		3229099	0					
ANR	3229298	Identifier	MBheight		3229099	1					
ANR	3229299	ExpressionStatement	sp += width * MBheight	1404:12:44181:44203	3229099	9	True				
ANR	3229300	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229301	Identifier	sp		3229099	0					
ANR	3229302	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229303	Identifier	width		3229099	0					
ANR	3229304	Identifier	MBheight		3229099	1					
ANR	3229305	ExpressionStatement	"seek_file ( con , offsetM , SEEK_SET )"	1406:12:44218:44251	3229099	10	True				
ANR	3229306	CallExpression	"seek_file ( con , offsetM , SEEK_SET )"		3229099	0					
ANR	3229307	Callee	seek_file		3229099	0					
ANR	3229308	Identifier	seek_file		3229099	0					
ANR	3229309	ArgumentList	con		3229099	1					
ANR	3229310	Argument	con		3229099	0					
ANR	3229311	Identifier	con		3229099	0					
ANR	3229312	Argument	offsetM		3229099	1					
ANR	3229313	Identifier	offsetM		3229099	0					
ANR	3229314	Argument	SEEK_SET		3229099	2					
ANR	3229315	Identifier	SEEK_SET		3229099	0					
ANR	3229316	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1407:12:44265:44296	3229099	11	True				
ANR	3229317	CallExpression	"memset ( sp , 0 , width * MBheight )"		3229099	0					
ANR	3229318	Callee	memset		3229099	0					
ANR	3229319	Identifier	memset		3229099	0					
ANR	3229320	ArgumentList	sp		3229099	1					
ANR	3229321	Argument	sp		3229099	0					
ANR	3229322	Identifier	sp		3229099	0					
ANR	3229323	Argument	0		3229099	1					
ANR	3229324	PrimaryExpression	0		3229099	0					
ANR	3229325	Argument	width * MBheight		3229099	2					
ANR	3229326	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229327	Identifier	width		3229099	0					
ANR	3229328	Identifier	MBheight		3229099	1					
ANR	3229329	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1408:12:44310:44349	3229099	12	True				
ANR	3229330	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		3229099	0					
ANR	3229331	Callee	read_data		3229099	0					
ANR	3229332	Identifier	read_data		3229099	0					
ANR	3229333	ArgumentList	con		3229099	1					
ANR	3229334	Argument	con		3229099	0					
ANR	3229335	Identifier	con		3229099	0					
ANR	3229336	Argument	sp		3229099	1					
ANR	3229337	Identifier	sp		3229099	0					
ANR	3229338	Argument	1		3229099	2					
ANR	3229339	PrimaryExpression	1		3229099	0					
ANR	3229340	Argument	width * MBheight		3229099	3					
ANR	3229341	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229342	Identifier	width		3229099	0					
ANR	3229343	Identifier	MBheight		3229099	1					
ANR	3229344	ExpressionStatement	sp += width * MBheight	1409:12:44363:44385	3229099	13	True				
ANR	3229345	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229346	Identifier	sp		3229099	0					
ANR	3229347	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229348	Identifier	width		3229099	0					
ANR	3229349	Identifier	MBheight		3229099	1					
ANR	3229350	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1411:12:44400:44433	3229099	14	True				
ANR	3229351	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		3229099	0					
ANR	3229352	Callee	seek_file		3229099	0					
ANR	3229353	Identifier	seek_file		3229099	0					
ANR	3229354	ArgumentList	con		3229099	1					
ANR	3229355	Argument	con		3229099	0					
ANR	3229356	Identifier	con		3229099	0					
ANR	3229357	Argument	offsetY		3229099	1					
ANR	3229358	Identifier	offsetY		3229099	0					
ANR	3229359	Argument	SEEK_SET		3229099	2					
ANR	3229360	Identifier	SEEK_SET		3229099	0					
ANR	3229361	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1412:12:44447:44478	3229099	15	True				
ANR	3229362	CallExpression	"memset ( sp , 0 , width * MBheight )"		3229099	0					
ANR	3229363	Callee	memset		3229099	0					
ANR	3229364	Identifier	memset		3229099	0					
ANR	3229365	ArgumentList	sp		3229099	1					
ANR	3229366	Argument	sp		3229099	0					
ANR	3229367	Identifier	sp		3229099	0					
ANR	3229368	Argument	0		3229099	1					
ANR	3229369	PrimaryExpression	0		3229099	0					
ANR	3229370	Argument	width * MBheight		3229099	2					
ANR	3229371	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229372	Identifier	width		3229099	0					
ANR	3229373	Identifier	MBheight		3229099	1					
ANR	3229374	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1413:12:44492:44531	3229099	16	True				
ANR	3229375	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		3229099	0					
ANR	3229376	Callee	read_data		3229099	0					
ANR	3229377	Identifier	read_data		3229099	0					
ANR	3229378	ArgumentList	con		3229099	1					
ANR	3229379	Argument	con		3229099	0					
ANR	3229380	Identifier	con		3229099	0					
ANR	3229381	Argument	sp		3229099	1					
ANR	3229382	Identifier	sp		3229099	0					
ANR	3229383	Argument	1		3229099	2					
ANR	3229384	PrimaryExpression	1		3229099	0					
ANR	3229385	Argument	width * MBheight		3229099	3					
ANR	3229386	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229387	Identifier	width		3229099	0					
ANR	3229388	Identifier	MBheight		3229099	1					
ANR	3229389	ExpressionStatement	sp += width * MBheight	1414:12:44545:44567	3229099	17	True				
ANR	3229390	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229391	Identifier	sp		3229099	0					
ANR	3229392	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229393	Identifier	width		3229099	0					
ANR	3229394	Identifier	MBheight		3229099	1					
ANR	3229395	ExpressionStatement	"seek_file ( con , offsetK , SEEK_SET )"	1416:12:44582:44615	3229099	18	True				
ANR	3229396	CallExpression	"seek_file ( con , offsetK , SEEK_SET )"		3229099	0					
ANR	3229397	Callee	seek_file		3229099	0					
ANR	3229398	Identifier	seek_file		3229099	0					
ANR	3229399	ArgumentList	con		3229099	1					
ANR	3229400	Argument	con		3229099	0					
ANR	3229401	Identifier	con		3229099	0					
ANR	3229402	Argument	offsetK		3229099	1					
ANR	3229403	Identifier	offsetK		3229099	0					
ANR	3229404	Argument	SEEK_SET		3229099	2					
ANR	3229405	Identifier	SEEK_SET		3229099	0					
ANR	3229406	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1417:12:44629:44660	3229099	19	True				
ANR	3229407	CallExpression	"memset ( sp , 0 , width * MBheight )"		3229099	0					
ANR	3229408	Callee	memset		3229099	0					
ANR	3229409	Identifier	memset		3229099	0					
ANR	3229410	ArgumentList	sp		3229099	1					
ANR	3229411	Argument	sp		3229099	0					
ANR	3229412	Identifier	sp		3229099	0					
ANR	3229413	Argument	0		3229099	1					
ANR	3229414	PrimaryExpression	0		3229099	0					
ANR	3229415	Argument	width * MBheight		3229099	2					
ANR	3229416	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229417	Identifier	width		3229099	0					
ANR	3229418	Identifier	MBheight		3229099	1					
ANR	3229419	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1418:12:44674:44713	3229099	20	True				
ANR	3229420	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		3229099	0					
ANR	3229421	Callee	read_data		3229099	0					
ANR	3229422	Identifier	read_data		3229099	0					
ANR	3229423	ArgumentList	con		3229099	1					
ANR	3229424	Argument	con		3229099	0					
ANR	3229425	Identifier	con		3229099	0					
ANR	3229426	Argument	sp		3229099	1					
ANR	3229427	Identifier	sp		3229099	0					
ANR	3229428	Argument	1		3229099	2					
ANR	3229429	PrimaryExpression	1		3229099	0					
ANR	3229430	Argument	width * MBheight		3229099	3					
ANR	3229431	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229432	Identifier	width		3229099	0					
ANR	3229433	Identifier	MBheight		3229099	1					
ANR	3229434	ExpressionStatement	sp += width * MBheight	1419:12:44727:44749	3229099	21	True				
ANR	3229435	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229436	Identifier	sp		3229099	0					
ANR	3229437	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229438	Identifier	width		3229099	0					
ANR	3229439	Identifier	MBheight		3229099	1					
ANR	3229440	IfStatement	if ( con -> ncomp == 5 )		3229099	22					
ANR	3229441	Condition	con -> ncomp == 5	1421:16:44768:44782	3229099	0	True				
ANR	3229442	EqualityExpression	con -> ncomp == 5		3229099	0		==			
ANR	3229443	PtrMemberAccess	con -> ncomp		3229099	0					
ANR	3229444	Identifier	con		3229099	0					
ANR	3229445	Identifier	ncomp		3229099	1					
ANR	3229446	PrimaryExpression	5		3229099	1					
ANR	3229447	CompoundStatement		40:33:1518:1518	3229099	1					
ANR	3229448	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1422:16:44803:44836	3229099	0	True				
ANR	3229449	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		3229099	0					
ANR	3229450	Callee	seek_file		3229099	0					
ANR	3229451	Identifier	seek_file		3229099	0					
ANR	3229452	ArgumentList	con		3229099	1					
ANR	3229453	Argument	con		3229099	0					
ANR	3229454	Identifier	con		3229099	0					
ANR	3229455	Argument	offsetA		3229099	1					
ANR	3229456	Identifier	offsetA		3229099	0					
ANR	3229457	Argument	SEEK_SET		3229099	2					
ANR	3229458	Identifier	SEEK_SET		3229099	0					
ANR	3229459	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1423:16:44854:44885	3229099	1	True				
ANR	3229460	CallExpression	"memset ( sp , 0 , width * MBheight )"		3229099	0					
ANR	3229461	Callee	memset		3229099	0					
ANR	3229462	Identifier	memset		3229099	0					
ANR	3229463	ArgumentList	sp		3229099	1					
ANR	3229464	Argument	sp		3229099	0					
ANR	3229465	Identifier	sp		3229099	0					
ANR	3229466	Argument	0		3229099	1					
ANR	3229467	PrimaryExpression	0		3229099	0					
ANR	3229468	Argument	width * MBheight		3229099	2					
ANR	3229469	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229470	Identifier	width		3229099	0					
ANR	3229471	Identifier	MBheight		3229099	1					
ANR	3229472	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1424:16:44903:44942	3229099	2	True				
ANR	3229473	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		3229099	0					
ANR	3229474	Callee	read_data		3229099	0					
ANR	3229475	Identifier	read_data		3229099	0					
ANR	3229476	ArgumentList	con		3229099	1					
ANR	3229477	Argument	con		3229099	0					
ANR	3229478	Identifier	con		3229099	0					
ANR	3229479	Argument	sp		3229099	1					
ANR	3229480	Identifier	sp		3229099	0					
ANR	3229481	Argument	1		3229099	2					
ANR	3229482	PrimaryExpression	1		3229099	0					
ANR	3229483	Argument	width * MBheight		3229099	3					
ANR	3229484	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229485	Identifier	width		3229099	0					
ANR	3229486	Identifier	MBheight		3229099	1					
ANR	3229487	ExpressionStatement	sp += width * MBheight	1425:16:44960:44982	3229099	3	True				
ANR	3229488	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229489	Identifier	sp		3229099	0					
ANR	3229490	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229491	Identifier	width		3229099	0					
ANR	3229492	Identifier	MBheight		3229099	1					
ANR	3229493	ElseStatement	else		3229099	0					
ANR	3229494	IfStatement	if ( con -> bpi == 16 )		3229099	0					
ANR	3229495	Condition	con -> bpi == 16	1428:17:45025:45038	3229099	0	True				
ANR	3229496	EqualityExpression	con -> bpi == 16		3229099	0		==			
ANR	3229497	PtrMemberAccess	con -> bpi		3229099	0					
ANR	3229498	Identifier	con		3229099	0					
ANR	3229499	Identifier	bpi		3229099	1					
ANR	3229500	PrimaryExpression	16		3229099	1					
ANR	3229501	CompoundStatement		54:12:2164:2198	3229099	1					
ANR	3229502	IdentifierDeclStatement	unsigned int offsetC = 2 * ( my * MBheight * width + 0 * size ) ;	1429:12:45055:45116	3229099	0	True				
ANR	3229503	IdentifierDecl	offsetC = 2 * ( my * MBheight * width + 0 * size )		3229099	0					
ANR	3229504	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229505	Identifier	offsetC		3229099	1					
ANR	3229506	AssignmentExpression	offsetC = 2 * ( my * MBheight * width + 0 * size )		3229099	2		=			
ANR	3229507	Identifier	offsetC		3229099	0					
ANR	3229508	MultiplicativeExpression	2 * ( my * MBheight * width + 0 * size )		3229099	1		*			
ANR	3229509	PrimaryExpression	2		3229099	0					
ANR	3229510	AdditiveExpression	my * MBheight * width + 0 * size		3229099	1		+			
ANR	3229511	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229512	Identifier	my		3229099	0					
ANR	3229513	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229514	Identifier	MBheight		3229099	0					
ANR	3229515	Identifier	width		3229099	1					
ANR	3229516	MultiplicativeExpression	0 * size		3229099	1		*			
ANR	3229517	PrimaryExpression	0		3229099	0					
ANR	3229518	Identifier	size		3229099	1					
ANR	3229519	IdentifierDeclStatement	unsigned int offsetM = 2 * ( my * MBheight * width + 1 * size ) ;	1430:12:45130:45191	3229099	1	True				
ANR	3229520	IdentifierDecl	offsetM = 2 * ( my * MBheight * width + 1 * size )		3229099	0					
ANR	3229521	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229522	Identifier	offsetM		3229099	1					
ANR	3229523	AssignmentExpression	offsetM = 2 * ( my * MBheight * width + 1 * size )		3229099	2		=			
ANR	3229524	Identifier	offsetM		3229099	0					
ANR	3229525	MultiplicativeExpression	2 * ( my * MBheight * width + 1 * size )		3229099	1		*			
ANR	3229526	PrimaryExpression	2		3229099	0					
ANR	3229527	AdditiveExpression	my * MBheight * width + 1 * size		3229099	1		+			
ANR	3229528	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229529	Identifier	my		3229099	0					
ANR	3229530	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229531	Identifier	MBheight		3229099	0					
ANR	3229532	Identifier	width		3229099	1					
ANR	3229533	MultiplicativeExpression	1 * size		3229099	1		*			
ANR	3229534	PrimaryExpression	1		3229099	0					
ANR	3229535	Identifier	size		3229099	1					
ANR	3229536	IdentifierDeclStatement	unsigned int offsetY = 2 * ( my * MBheight * width + 2 * size ) ;	1431:12:45205:45266	3229099	2	True				
ANR	3229537	IdentifierDecl	offsetY = 2 * ( my * MBheight * width + 2 * size )		3229099	0					
ANR	3229538	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229539	Identifier	offsetY		3229099	1					
ANR	3229540	AssignmentExpression	offsetY = 2 * ( my * MBheight * width + 2 * size )		3229099	2		=			
ANR	3229541	Identifier	offsetY		3229099	0					
ANR	3229542	MultiplicativeExpression	2 * ( my * MBheight * width + 2 * size )		3229099	1		*			
ANR	3229543	PrimaryExpression	2		3229099	0					
ANR	3229544	AdditiveExpression	my * MBheight * width + 2 * size		3229099	1		+			
ANR	3229545	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229546	Identifier	my		3229099	0					
ANR	3229547	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229548	Identifier	MBheight		3229099	0					
ANR	3229549	Identifier	width		3229099	1					
ANR	3229550	MultiplicativeExpression	2 * size		3229099	1		*			
ANR	3229551	PrimaryExpression	2		3229099	0					
ANR	3229552	Identifier	size		3229099	1					
ANR	3229553	IdentifierDeclStatement	unsigned int offsetK = 2 * ( my * MBheight * width + 3 * size ) ;	1432:12:45280:45341	3229099	3	True				
ANR	3229554	IdentifierDecl	offsetK = 2 * ( my * MBheight * width + 3 * size )		3229099	0					
ANR	3229555	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229556	Identifier	offsetK		3229099	1					
ANR	3229557	AssignmentExpression	offsetK = 2 * ( my * MBheight * width + 3 * size )		3229099	2		=			
ANR	3229558	Identifier	offsetK		3229099	0					
ANR	3229559	MultiplicativeExpression	2 * ( my * MBheight * width + 3 * size )		3229099	1		*			
ANR	3229560	PrimaryExpression	2		3229099	0					
ANR	3229561	AdditiveExpression	my * MBheight * width + 3 * size		3229099	1		+			
ANR	3229562	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229563	Identifier	my		3229099	0					
ANR	3229564	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229565	Identifier	MBheight		3229099	0					
ANR	3229566	Identifier	width		3229099	1					
ANR	3229567	MultiplicativeExpression	3 * size		3229099	1		*			
ANR	3229568	PrimaryExpression	3		3229099	0					
ANR	3229569	Identifier	size		3229099	1					
ANR	3229570	IdentifierDeclStatement	unsigned int offsetA = 2 * ( my * MBheight * width + 4 * size ) ;	1433:12:45355:45416	3229099	4	True				
ANR	3229571	IdentifierDecl	offsetA = 2 * ( my * MBheight * width + 4 * size )		3229099	0					
ANR	3229572	IdentifierDeclType	unsigned int		3229099	0					
ANR	3229573	Identifier	offsetA		3229099	1					
ANR	3229574	AssignmentExpression	offsetA = 2 * ( my * MBheight * width + 4 * size )		3229099	2		=			
ANR	3229575	Identifier	offsetA		3229099	0					
ANR	3229576	MultiplicativeExpression	2 * ( my * MBheight * width + 4 * size )		3229099	1		*			
ANR	3229577	PrimaryExpression	2		3229099	0					
ANR	3229578	AdditiveExpression	my * MBheight * width + 4 * size		3229099	1		+			
ANR	3229579	MultiplicativeExpression	my * MBheight * width		3229099	0		*			
ANR	3229580	Identifier	my		3229099	0					
ANR	3229581	MultiplicativeExpression	MBheight * width		3229099	1		*			
ANR	3229582	Identifier	MBheight		3229099	0					
ANR	3229583	Identifier	width		3229099	1					
ANR	3229584	MultiplicativeExpression	4 * size		3229099	1		*			
ANR	3229585	PrimaryExpression	4		3229099	0					
ANR	3229586	Identifier	size		3229099	1					
ANR	3229587	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1435:12:45431:45465	3229099	5	True				
ANR	3229588	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		3229099	0					
ANR	3229589	IdentifierDeclType	uint16_t *		3229099	0					
ANR	3229590	Identifier	sp		3229099	1					
ANR	3229591	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		3229099	2		=			
ANR	3229592	Identifier	sp		3229099	0					
ANR	3229593	CastExpression	( uint16_t * ) con -> buf		3229099	1					
ANR	3229594	CastTarget	uint16_t *		3229099	0					
ANR	3229595	PtrMemberAccess	con -> buf		3229099	1					
ANR	3229596	Identifier	con		3229099	0					
ANR	3229597	Identifier	buf		3229099	1					
ANR	3229598	ExpressionStatement	"seek_file ( con , offsetC , SEEK_SET )"	1437:12:45480:45513	3229099	6	True				
ANR	3229599	CallExpression	"seek_file ( con , offsetC , SEEK_SET )"		3229099	0					
ANR	3229600	Callee	seek_file		3229099	0					
ANR	3229601	Identifier	seek_file		3229099	0					
ANR	3229602	ArgumentList	con		3229099	1					
ANR	3229603	Argument	con		3229099	0					
ANR	3229604	Identifier	con		3229099	0					
ANR	3229605	Argument	offsetC		3229099	1					
ANR	3229606	Identifier	offsetC		3229099	0					
ANR	3229607	Argument	SEEK_SET		3229099	2					
ANR	3229608	Identifier	SEEK_SET		3229099	0					
ANR	3229609	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1438:12:45527:45562	3229099	7	True				
ANR	3229610	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		3229099	0					
ANR	3229611	Callee	memset		3229099	0					
ANR	3229612	Identifier	memset		3229099	0					
ANR	3229613	ArgumentList	sp		3229099	1					
ANR	3229614	Argument	sp		3229099	0					
ANR	3229615	Identifier	sp		3229099	0					
ANR	3229616	Argument	0		3229099	1					
ANR	3229617	PrimaryExpression	0		3229099	0					
ANR	3229618	Argument	2 * width * MBheight		3229099	2					
ANR	3229619	MultiplicativeExpression	2 * width * MBheight		3229099	0		*			
ANR	3229620	PrimaryExpression	2		3229099	0					
ANR	3229621	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229622	Identifier	width		3229099	0					
ANR	3229623	Identifier	MBheight		3229099	1					
ANR	3229624	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1439:12:45576:45615	3229099	8	True				
ANR	3229625	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		3229099	0					
ANR	3229626	Callee	read_data		3229099	0					
ANR	3229627	Identifier	read_data		3229099	0					
ANR	3229628	ArgumentList	con		3229099	1					
ANR	3229629	Argument	con		3229099	0					
ANR	3229630	Identifier	con		3229099	0					
ANR	3229631	Argument	sp		3229099	1					
ANR	3229632	Identifier	sp		3229099	0					
ANR	3229633	Argument	2		3229099	2					
ANR	3229634	PrimaryExpression	2		3229099	0					
ANR	3229635	Argument	width * MBheight		3229099	3					
ANR	3229636	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229637	Identifier	width		3229099	0					
ANR	3229638	Identifier	MBheight		3229099	1					
ANR	3229639	ExpressionStatement	sp += width * MBheight	1440:12:45629:45651	3229099	9	True				
ANR	3229640	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229641	Identifier	sp		3229099	0					
ANR	3229642	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229643	Identifier	width		3229099	0					
ANR	3229644	Identifier	MBheight		3229099	1					
ANR	3229645	ExpressionStatement	"seek_file ( con , offsetM , SEEK_SET )"	1442:12:45666:45699	3229099	10	True				
ANR	3229646	CallExpression	"seek_file ( con , offsetM , SEEK_SET )"		3229099	0					
ANR	3229647	Callee	seek_file		3229099	0					
ANR	3229648	Identifier	seek_file		3229099	0					
ANR	3229649	ArgumentList	con		3229099	1					
ANR	3229650	Argument	con		3229099	0					
ANR	3229651	Identifier	con		3229099	0					
ANR	3229652	Argument	offsetM		3229099	1					
ANR	3229653	Identifier	offsetM		3229099	0					
ANR	3229654	Argument	SEEK_SET		3229099	2					
ANR	3229655	Identifier	SEEK_SET		3229099	0					
ANR	3229656	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1443:12:45713:45748	3229099	11	True				
ANR	3229657	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		3229099	0					
ANR	3229658	Callee	memset		3229099	0					
ANR	3229659	Identifier	memset		3229099	0					
ANR	3229660	ArgumentList	sp		3229099	1					
ANR	3229661	Argument	sp		3229099	0					
ANR	3229662	Identifier	sp		3229099	0					
ANR	3229663	Argument	0		3229099	1					
ANR	3229664	PrimaryExpression	0		3229099	0					
ANR	3229665	Argument	2 * width * MBheight		3229099	2					
ANR	3229666	MultiplicativeExpression	2 * width * MBheight		3229099	0		*			
ANR	3229667	PrimaryExpression	2		3229099	0					
ANR	3229668	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229669	Identifier	width		3229099	0					
ANR	3229670	Identifier	MBheight		3229099	1					
ANR	3229671	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1444:12:45762:45801	3229099	12	True				
ANR	3229672	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		3229099	0					
ANR	3229673	Callee	read_data		3229099	0					
ANR	3229674	Identifier	read_data		3229099	0					
ANR	3229675	ArgumentList	con		3229099	1					
ANR	3229676	Argument	con		3229099	0					
ANR	3229677	Identifier	con		3229099	0					
ANR	3229678	Argument	sp		3229099	1					
ANR	3229679	Identifier	sp		3229099	0					
ANR	3229680	Argument	2		3229099	2					
ANR	3229681	PrimaryExpression	2		3229099	0					
ANR	3229682	Argument	width * MBheight		3229099	3					
ANR	3229683	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229684	Identifier	width		3229099	0					
ANR	3229685	Identifier	MBheight		3229099	1					
ANR	3229686	ExpressionStatement	sp += width * MBheight	1445:12:45815:45837	3229099	13	True				
ANR	3229687	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229688	Identifier	sp		3229099	0					
ANR	3229689	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229690	Identifier	width		3229099	0					
ANR	3229691	Identifier	MBheight		3229099	1					
ANR	3229692	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1447:12:45852:45885	3229099	14	True				
ANR	3229693	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		3229099	0					
ANR	3229694	Callee	seek_file		3229099	0					
ANR	3229695	Identifier	seek_file		3229099	0					
ANR	3229696	ArgumentList	con		3229099	1					
ANR	3229697	Argument	con		3229099	0					
ANR	3229698	Identifier	con		3229099	0					
ANR	3229699	Argument	offsetY		3229099	1					
ANR	3229700	Identifier	offsetY		3229099	0					
ANR	3229701	Argument	SEEK_SET		3229099	2					
ANR	3229702	Identifier	SEEK_SET		3229099	0					
ANR	3229703	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1448:12:45899:45934	3229099	15	True				
ANR	3229704	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		3229099	0					
ANR	3229705	Callee	memset		3229099	0					
ANR	3229706	Identifier	memset		3229099	0					
ANR	3229707	ArgumentList	sp		3229099	1					
ANR	3229708	Argument	sp		3229099	0					
ANR	3229709	Identifier	sp		3229099	0					
ANR	3229710	Argument	0		3229099	1					
ANR	3229711	PrimaryExpression	0		3229099	0					
ANR	3229712	Argument	2 * width * MBheight		3229099	2					
ANR	3229713	MultiplicativeExpression	2 * width * MBheight		3229099	0		*			
ANR	3229714	PrimaryExpression	2		3229099	0					
ANR	3229715	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229716	Identifier	width		3229099	0					
ANR	3229717	Identifier	MBheight		3229099	1					
ANR	3229718	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1449:12:45948:45987	3229099	16	True				
ANR	3229719	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		3229099	0					
ANR	3229720	Callee	read_data		3229099	0					
ANR	3229721	Identifier	read_data		3229099	0					
ANR	3229722	ArgumentList	con		3229099	1					
ANR	3229723	Argument	con		3229099	0					
ANR	3229724	Identifier	con		3229099	0					
ANR	3229725	Argument	sp		3229099	1					
ANR	3229726	Identifier	sp		3229099	0					
ANR	3229727	Argument	2		3229099	2					
ANR	3229728	PrimaryExpression	2		3229099	0					
ANR	3229729	Argument	width * MBheight		3229099	3					
ANR	3229730	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229731	Identifier	width		3229099	0					
ANR	3229732	Identifier	MBheight		3229099	1					
ANR	3229733	ExpressionStatement	sp += width * MBheight	1450:12:46001:46023	3229099	17	True				
ANR	3229734	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229735	Identifier	sp		3229099	0					
ANR	3229736	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229737	Identifier	width		3229099	0					
ANR	3229738	Identifier	MBheight		3229099	1					
ANR	3229739	ExpressionStatement	"seek_file ( con , offsetK , SEEK_SET )"	1452:12:46038:46071	3229099	18	True				
ANR	3229740	CallExpression	"seek_file ( con , offsetK , SEEK_SET )"		3229099	0					
ANR	3229741	Callee	seek_file		3229099	0					
ANR	3229742	Identifier	seek_file		3229099	0					
ANR	3229743	ArgumentList	con		3229099	1					
ANR	3229744	Argument	con		3229099	0					
ANR	3229745	Identifier	con		3229099	0					
ANR	3229746	Argument	offsetK		3229099	1					
ANR	3229747	Identifier	offsetK		3229099	0					
ANR	3229748	Argument	SEEK_SET		3229099	2					
ANR	3229749	Identifier	SEEK_SET		3229099	0					
ANR	3229750	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1453:12:46085:46120	3229099	19	True				
ANR	3229751	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		3229099	0					
ANR	3229752	Callee	memset		3229099	0					
ANR	3229753	Identifier	memset		3229099	0					
ANR	3229754	ArgumentList	sp		3229099	1					
ANR	3229755	Argument	sp		3229099	0					
ANR	3229756	Identifier	sp		3229099	0					
ANR	3229757	Argument	0		3229099	1					
ANR	3229758	PrimaryExpression	0		3229099	0					
ANR	3229759	Argument	2 * width * MBheight		3229099	2					
ANR	3229760	MultiplicativeExpression	2 * width * MBheight		3229099	0		*			
ANR	3229761	PrimaryExpression	2		3229099	0					
ANR	3229762	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229763	Identifier	width		3229099	0					
ANR	3229764	Identifier	MBheight		3229099	1					
ANR	3229765	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1454:12:46134:46173	3229099	20	True				
ANR	3229766	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		3229099	0					
ANR	3229767	Callee	read_data		3229099	0					
ANR	3229768	Identifier	read_data		3229099	0					
ANR	3229769	ArgumentList	con		3229099	1					
ANR	3229770	Argument	con		3229099	0					
ANR	3229771	Identifier	con		3229099	0					
ANR	3229772	Argument	sp		3229099	1					
ANR	3229773	Identifier	sp		3229099	0					
ANR	3229774	Argument	2		3229099	2					
ANR	3229775	PrimaryExpression	2		3229099	0					
ANR	3229776	Argument	width * MBheight		3229099	3					
ANR	3229777	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229778	Identifier	width		3229099	0					
ANR	3229779	Identifier	MBheight		3229099	1					
ANR	3229780	ExpressionStatement	sp += width * MBheight	1455:12:46187:46209	3229099	21	True				
ANR	3229781	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229782	Identifier	sp		3229099	0					
ANR	3229783	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229784	Identifier	width		3229099	0					
ANR	3229785	Identifier	MBheight		3229099	1					
ANR	3229786	IfStatement	if ( con -> ncomp == 5 )		3229099	22					
ANR	3229787	Condition	con -> ncomp == 5	1457:16:46228:46242	3229099	0	True				
ANR	3229788	EqualityExpression	con -> ncomp == 5		3229099	0		==			
ANR	3229789	PtrMemberAccess	con -> ncomp		3229099	0					
ANR	3229790	Identifier	con		3229099	0					
ANR	3229791	Identifier	ncomp		3229099	1					
ANR	3229792	PrimaryExpression	5		3229099	1					
ANR	3229793	CompoundStatement		76:33:2978:2978	3229099	1					
ANR	3229794	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1458:16:46263:46296	3229099	0	True				
ANR	3229795	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		3229099	0					
ANR	3229796	Callee	seek_file		3229099	0					
ANR	3229797	Identifier	seek_file		3229099	0					
ANR	3229798	ArgumentList	con		3229099	1					
ANR	3229799	Argument	con		3229099	0					
ANR	3229800	Identifier	con		3229099	0					
ANR	3229801	Argument	offsetA		3229099	1					
ANR	3229802	Identifier	offsetA		3229099	0					
ANR	3229803	Argument	SEEK_SET		3229099	2					
ANR	3229804	Identifier	SEEK_SET		3229099	0					
ANR	3229805	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1459:16:46314:46349	3229099	1	True				
ANR	3229806	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		3229099	0					
ANR	3229807	Callee	memset		3229099	0					
ANR	3229808	Identifier	memset		3229099	0					
ANR	3229809	ArgumentList	sp		3229099	1					
ANR	3229810	Argument	sp		3229099	0					
ANR	3229811	Identifier	sp		3229099	0					
ANR	3229812	Argument	0		3229099	1					
ANR	3229813	PrimaryExpression	0		3229099	0					
ANR	3229814	Argument	2 * width * MBheight		3229099	2					
ANR	3229815	MultiplicativeExpression	2 * width * MBheight		3229099	0		*			
ANR	3229816	PrimaryExpression	2		3229099	0					
ANR	3229817	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229818	Identifier	width		3229099	0					
ANR	3229819	Identifier	MBheight		3229099	1					
ANR	3229820	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1460:16:46367:46406	3229099	2	True				
ANR	3229821	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		3229099	0					
ANR	3229822	Callee	read_data		3229099	0					
ANR	3229823	Identifier	read_data		3229099	0					
ANR	3229824	ArgumentList	con		3229099	1					
ANR	3229825	Argument	con		3229099	0					
ANR	3229826	Identifier	con		3229099	0					
ANR	3229827	Argument	sp		3229099	1					
ANR	3229828	Identifier	sp		3229099	0					
ANR	3229829	Argument	2		3229099	2					
ANR	3229830	PrimaryExpression	2		3229099	0					
ANR	3229831	Argument	width * MBheight		3229099	3					
ANR	3229832	MultiplicativeExpression	width * MBheight		3229099	0		*			
ANR	3229833	Identifier	width		3229099	0					
ANR	3229834	Identifier	MBheight		3229099	1					
ANR	3229835	ExpressionStatement	sp += width * MBheight	1461:16:46424:46446	3229099	3	True				
ANR	3229836	AssignmentExpression	sp += width * MBheight		3229099	0		+=			
ANR	3229837	Identifier	sp		3229099	0					
ANR	3229838	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229839	Identifier	width		3229099	0					
ANR	3229840	Identifier	MBheight		3229099	1					
ANR	3229841	ExpressionStatement	con -> my = my	1464:8:46480:46492	3229099	1	True				
ANR	3229842	AssignmentExpression	con -> my = my		3229099	0		=			
ANR	3229843	PtrMemberAccess	con -> my		3229099	0					
ANR	3229844	Identifier	con		3229099	0					
ANR	3229845	Identifier	my		3229099	1					
ANR	3229846	Identifier	my		3229099	1					
ANR	3229847	IdentifierDeclStatement	"int idx1 , idx2 ;"	1467:4:46505:46519	3229099	6	True				
ANR	3229848	IdentifierDecl	idx1		3229099	0					
ANR	3229849	IdentifierDeclType	int		3229099	0					
ANR	3229850	Identifier	idx1		3229099	1					
ANR	3229851	IdentifierDecl	idx2		3229099	1					
ANR	3229852	IdentifierDeclType	int		3229099	0					
ANR	3229853	Identifier	idx2		3229099	1					
ANR	3229854	IdentifierDeclStatement	int xDiv = 16 ;	1468:4:46525:46538	3229099	7	True				
ANR	3229855	IdentifierDecl	xDiv = 16		3229099	0					
ANR	3229856	IdentifierDeclType	int		3229099	0					
ANR	3229857	Identifier	xDiv		3229099	1					
ANR	3229858	AssignmentExpression	xDiv = 16		3229099	2		=			
ANR	3229859	Identifier	xDiv		3229099	0					
ANR	3229860	PrimaryExpression	16		3229099	1					
ANR	3229861	IdentifierDeclStatement	int yDiv = 16 ;	1469:4:46544:46557	3229099	8	True				
ANR	3229862	IdentifierDecl	yDiv = 16		3229099	0					
ANR	3229863	IdentifierDeclType	int		3229099	0					
ANR	3229864	Identifier	yDiv		3229099	1					
ANR	3229865	AssignmentExpression	yDiv = 16		3229099	2		=			
ANR	3229866	Identifier	yDiv		3229099	0					
ANR	3229867	PrimaryExpression	16		3229099	1					
ANR	3229868	IfStatement	if ( con -> bpi == 8 )		3229099	9					
ANR	3229869	Condition	con -> bpi == 8	1471:8:46568:46580	3229099	0	True				
ANR	3229870	EqualityExpression	con -> bpi == 8		3229099	0		==			
ANR	3229871	PtrMemberAccess	con -> bpi		3229099	0					
ANR	3229872	Identifier	con		3229099	0					
ANR	3229873	Identifier	bpi		3229099	1					
ANR	3229874	PrimaryExpression	8		3229099	1					
ANR	3229875	CompoundStatement		92:8:3342:3407	3229099	1					
ANR	3229876	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight ;	1473:8:46609:46674	3229099	0	True				
ANR	3229877	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		3229099	0					
ANR	3229878	IdentifierDeclType	uint8_t *		3229099	0					
ANR	3229879	Identifier	sp		3229099	1					
ANR	3229880	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		3229099	2		=			
ANR	3229881	Identifier	sp		3229099	0					
ANR	3229882	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		3229099	1		+			
ANR	3229883	CastExpression	( uint8_t * ) con -> buf		3229099	0					
ANR	3229884	CastTarget	uint8_t *		3229099	0					
ANR	3229885	PtrMemberAccess	con -> buf		3229099	1					
ANR	3229886	Identifier	con		3229099	0					
ANR	3229887	Identifier	buf		3229099	1					
ANR	3229888	AdditiveExpression	xDiv * mx + 0 * width * MBheight		3229099	1		+			
ANR	3229889	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3229890	Identifier	xDiv		3229099	0					
ANR	3229891	Identifier	mx		3229099	1					
ANR	3229892	MultiplicativeExpression	0 * width * MBheight		3229099	1		*			
ANR	3229893	PrimaryExpression	0		3229099	0					
ANR	3229894	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229895	Identifier	width		3229099	0					
ANR	3229896	Identifier	MBheight		3229099	1					
ANR	3229897	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	1					
ANR	3229898	ForInit	idx1 = 0 ;	1474:13:46689:46697	3229099	0	True				
ANR	3229899	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3229900	Identifier	idx1		3229099	0					
ANR	3229901	PrimaryExpression	0		3229099	1					
ANR	3229902	Condition	idx1 < yDiv	1474:23:46699:46709	3229099	1	True				
ANR	3229903	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3229904	Identifier	idx1		3229099	0					
ANR	3229905	Identifier	yDiv		3229099	1					
ANR	3229906	AssignmentExpression	idx1 += 1	1474:36:46712:46720	3229099	2	True	+=			
ANR	3229907	Identifier	idx1		3229099	0					
ANR	3229908	PrimaryExpression	1		3229099	1					
ANR	3229909	CompoundStatement		93:47:3456:3456	3229099	3					
ANR	3229910	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3229911	ForInit	idx2 = 0 ;	1475:17:46742:46750	3229099	0	True				
ANR	3229912	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3229913	Identifier	idx2		3229099	0					
ANR	3229914	PrimaryExpression	0		3229099	1					
ANR	3229915	Condition	idx2 < xDiv	1475:27:46752:46762	3229099	1	True				
ANR	3229916	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3229917	Identifier	idx2		3229099	0					
ANR	3229918	Identifier	xDiv		3229099	1					
ANR	3229919	AssignmentExpression	idx2 += 1	1475:40:46765:46773	3229099	2	True	+=			
ANR	3229920	Identifier	idx2		3229099	0					
ANR	3229921	PrimaryExpression	1		3229099	1					
ANR	3229922	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1476:16:46793:46849	3229099	3	True				
ANR	3229923	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		3229099	0		=			
ANR	3229924	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		3229099	0					
ANR	3229925	Identifier	data		3229099	0					
ANR	3229926	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		3229099	1		+			
ANR	3229927	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3229928	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3229929	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3229930	Identifier	idx1		3229099	0					
ANR	3229931	Identifier	xDiv		3229099	1					
ANR	3229932	Identifier	idx2		3229099	1					
ANR	3229933	Identifier	num_channels		3229099	1					
ANR	3229934	PrimaryExpression	0		3229099	1					
ANR	3229935	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3229936	Identifier	sp		3229099	0					
ANR	3229937	Identifier	idx2		3229099	1					
ANR	3229938	ExpressionStatement	sp += width	1477:12:46863:46874	3229099	1	True				
ANR	3229939	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3229940	Identifier	sp		3229099	0					
ANR	3229941	Identifier	width		3229099	1					
ANR	3229942	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 1 * width * MBheight	1481:8:46911:46967	3229099	2	True				
ANR	3229943	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		3229099	0		=			
ANR	3229944	Identifier	sp		3229099	0					
ANR	3229945	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		3229099	1		+			
ANR	3229946	CastExpression	( uint8_t * ) con -> buf		3229099	0					
ANR	3229947	CastTarget	uint8_t *		3229099	0					
ANR	3229948	PtrMemberAccess	con -> buf		3229099	1					
ANR	3229949	Identifier	con		3229099	0					
ANR	3229950	Identifier	buf		3229099	1					
ANR	3229951	AdditiveExpression	xDiv * mx + 1 * width * MBheight		3229099	1		+			
ANR	3229952	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3229953	Identifier	xDiv		3229099	0					
ANR	3229954	Identifier	mx		3229099	1					
ANR	3229955	MultiplicativeExpression	1 * width * MBheight		3229099	1		*			
ANR	3229956	PrimaryExpression	1		3229099	0					
ANR	3229957	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3229958	Identifier	width		3229099	0					
ANR	3229959	Identifier	MBheight		3229099	1					
ANR	3229960	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	3					
ANR	3229961	ForInit	idx1 = 0 ;	1482:13:46982:46990	3229099	0	True				
ANR	3229962	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3229963	Identifier	idx1		3229099	0					
ANR	3229964	PrimaryExpression	0		3229099	1					
ANR	3229965	Condition	idx1 < yDiv	1482:23:46992:47002	3229099	1	True				
ANR	3229966	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3229967	Identifier	idx1		3229099	0					
ANR	3229968	Identifier	yDiv		3229099	1					
ANR	3229969	AssignmentExpression	idx1 += 1	1482:36:47005:47013	3229099	2	True	+=			
ANR	3229970	Identifier	idx1		3229099	0					
ANR	3229971	PrimaryExpression	1		3229099	1					
ANR	3229972	CompoundStatement		101:47:3749:3749	3229099	3					
ANR	3229973	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3229974	ForInit	idx2 = 0 ;	1483:17:47035:47043	3229099	0	True				
ANR	3229975	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3229976	Identifier	idx2		3229099	0					
ANR	3229977	PrimaryExpression	0		3229099	1					
ANR	3229978	Condition	idx2 < xDiv	1483:27:47045:47055	3229099	1	True				
ANR	3229979	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3229980	Identifier	idx2		3229099	0					
ANR	3229981	Identifier	xDiv		3229099	1					
ANR	3229982	AssignmentExpression	idx2 += 1	1483:40:47058:47066	3229099	2	True	+=			
ANR	3229983	Identifier	idx2		3229099	0					
ANR	3229984	PrimaryExpression	1		3229099	1					
ANR	3229985	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1484:16:47086:47142	3229099	3	True				
ANR	3229986	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		3229099	0		=			
ANR	3229987	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		3229099	0					
ANR	3229988	Identifier	data		3229099	0					
ANR	3229989	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		3229099	1		+			
ANR	3229990	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3229991	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3229992	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3229993	Identifier	idx1		3229099	0					
ANR	3229994	Identifier	xDiv		3229099	1					
ANR	3229995	Identifier	idx2		3229099	1					
ANR	3229996	Identifier	num_channels		3229099	1					
ANR	3229997	PrimaryExpression	1		3229099	1					
ANR	3229998	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3229999	Identifier	sp		3229099	0					
ANR	3230000	Identifier	idx2		3229099	1					
ANR	3230001	ExpressionStatement	sp += width	1485:12:47156:47167	3229099	1	True				
ANR	3230002	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230003	Identifier	sp		3229099	0					
ANR	3230004	Identifier	width		3229099	1					
ANR	3230005	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 2 * width * MBheight	1489:8:47204:47260	3229099	4	True				
ANR	3230006	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		3229099	0		=			
ANR	3230007	Identifier	sp		3229099	0					
ANR	3230008	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		3229099	1		+			
ANR	3230009	CastExpression	( uint8_t * ) con -> buf		3229099	0					
ANR	3230010	CastTarget	uint8_t *		3229099	0					
ANR	3230011	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230012	Identifier	con		3229099	0					
ANR	3230013	Identifier	buf		3229099	1					
ANR	3230014	AdditiveExpression	xDiv * mx + 2 * width * MBheight		3229099	1		+			
ANR	3230015	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230016	Identifier	xDiv		3229099	0					
ANR	3230017	Identifier	mx		3229099	1					
ANR	3230018	MultiplicativeExpression	2 * width * MBheight		3229099	1		*			
ANR	3230019	PrimaryExpression	2		3229099	0					
ANR	3230020	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230021	Identifier	width		3229099	0					
ANR	3230022	Identifier	MBheight		3229099	1					
ANR	3230023	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	5					
ANR	3230024	ForInit	idx1 = 0 ;	1490:13:47275:47283	3229099	0	True				
ANR	3230025	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230026	Identifier	idx1		3229099	0					
ANR	3230027	PrimaryExpression	0		3229099	1					
ANR	3230028	Condition	idx1 < yDiv	1490:23:47285:47295	3229099	1	True				
ANR	3230029	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230030	Identifier	idx1		3229099	0					
ANR	3230031	Identifier	yDiv		3229099	1					
ANR	3230032	AssignmentExpression	idx1 += 1	1490:36:47298:47306	3229099	2	True	+=			
ANR	3230033	Identifier	idx1		3229099	0					
ANR	3230034	PrimaryExpression	1		3229099	1					
ANR	3230035	CompoundStatement		109:47:4042:4042	3229099	3					
ANR	3230036	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230037	ForInit	idx2 = 0 ;	1491:17:47328:47336	3229099	0	True				
ANR	3230038	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230039	Identifier	idx2		3229099	0					
ANR	3230040	PrimaryExpression	0		3229099	1					
ANR	3230041	Condition	idx2 < xDiv	1491:27:47338:47348	3229099	1	True				
ANR	3230042	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230043	Identifier	idx2		3229099	0					
ANR	3230044	Identifier	xDiv		3229099	1					
ANR	3230045	AssignmentExpression	idx2 += 1	1491:40:47351:47359	3229099	2	True	+=			
ANR	3230046	Identifier	idx2		3229099	0					
ANR	3230047	PrimaryExpression	1		3229099	1					
ANR	3230048	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1492:16:47379:47435	3229099	3	True				
ANR	3230049	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230050	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		3229099	0					
ANR	3230051	Identifier	data		3229099	0					
ANR	3230052	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		3229099	1		+			
ANR	3230053	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230054	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230055	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230056	Identifier	idx1		3229099	0					
ANR	3230057	Identifier	xDiv		3229099	1					
ANR	3230058	Identifier	idx2		3229099	1					
ANR	3230059	Identifier	num_channels		3229099	1					
ANR	3230060	PrimaryExpression	2		3229099	1					
ANR	3230061	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230062	Identifier	sp		3229099	0					
ANR	3230063	Identifier	idx2		3229099	1					
ANR	3230064	ExpressionStatement	sp += width	1493:12:47449:47460	3229099	1	True				
ANR	3230065	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230066	Identifier	sp		3229099	0					
ANR	3230067	Identifier	width		3229099	1					
ANR	3230068	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 3 * width * MBheight	1497:8:47497:47553	3229099	6	True				
ANR	3230069	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		3229099	0		=			
ANR	3230070	Identifier	sp		3229099	0					
ANR	3230071	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		3229099	1		+			
ANR	3230072	CastExpression	( uint8_t * ) con -> buf		3229099	0					
ANR	3230073	CastTarget	uint8_t *		3229099	0					
ANR	3230074	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230075	Identifier	con		3229099	0					
ANR	3230076	Identifier	buf		3229099	1					
ANR	3230077	AdditiveExpression	xDiv * mx + 3 * width * MBheight		3229099	1		+			
ANR	3230078	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230079	Identifier	xDiv		3229099	0					
ANR	3230080	Identifier	mx		3229099	1					
ANR	3230081	MultiplicativeExpression	3 * width * MBheight		3229099	1		*			
ANR	3230082	PrimaryExpression	3		3229099	0					
ANR	3230083	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230084	Identifier	width		3229099	0					
ANR	3230085	Identifier	MBheight		3229099	1					
ANR	3230086	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	7					
ANR	3230087	ForInit	idx1 = 0 ;	1498:13:47568:47576	3229099	0	True				
ANR	3230088	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230089	Identifier	idx1		3229099	0					
ANR	3230090	PrimaryExpression	0		3229099	1					
ANR	3230091	Condition	idx1 < yDiv	1498:23:47578:47588	3229099	1	True				
ANR	3230092	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230093	Identifier	idx1		3229099	0					
ANR	3230094	Identifier	yDiv		3229099	1					
ANR	3230095	AssignmentExpression	idx1 += 1	1498:36:47591:47599	3229099	2	True	+=			
ANR	3230096	Identifier	idx1		3229099	0					
ANR	3230097	PrimaryExpression	1		3229099	1					
ANR	3230098	CompoundStatement		117:47:4335:4335	3229099	3					
ANR	3230099	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230100	ForInit	idx2 = 0 ;	1499:17:47621:47629	3229099	0	True				
ANR	3230101	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230102	Identifier	idx2		3229099	0					
ANR	3230103	PrimaryExpression	0		3229099	1					
ANR	3230104	Condition	idx2 < xDiv	1499:27:47631:47641	3229099	1	True				
ANR	3230105	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230106	Identifier	idx2		3229099	0					
ANR	3230107	Identifier	xDiv		3229099	1					
ANR	3230108	AssignmentExpression	idx2 += 1	1499:40:47644:47652	3229099	2	True	+=			
ANR	3230109	Identifier	idx2		3229099	0					
ANR	3230110	PrimaryExpression	1		3229099	1					
ANR	3230111	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1500:16:47672:47728	3229099	3	True				
ANR	3230112	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230113	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		3229099	0					
ANR	3230114	Identifier	data		3229099	0					
ANR	3230115	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		3229099	1		+			
ANR	3230116	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230117	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230118	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230119	Identifier	idx1		3229099	0					
ANR	3230120	Identifier	xDiv		3229099	1					
ANR	3230121	Identifier	idx2		3229099	1					
ANR	3230122	Identifier	num_channels		3229099	1					
ANR	3230123	PrimaryExpression	3		3229099	1					
ANR	3230124	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230125	Identifier	sp		3229099	0					
ANR	3230126	Identifier	idx2		3229099	1					
ANR	3230127	ExpressionStatement	sp += width	1501:12:47742:47753	3229099	1	True				
ANR	3230128	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230129	Identifier	sp		3229099	0					
ANR	3230130	Identifier	width		3229099	1					
ANR	3230131	IfStatement	if ( con -> ncomp == 5 )		3229099	8					
ANR	3230132	Condition	con -> ncomp == 5	1504:11:47777:47791	3229099	0	True				
ANR	3230133	EqualityExpression	con -> ncomp == 5		3229099	0		==			
ANR	3230134	PtrMemberAccess	con -> ncomp		3229099	0					
ANR	3230135	Identifier	con		3229099	0					
ANR	3230136	Identifier	ncomp		3229099	1					
ANR	3230137	PrimaryExpression	5		3229099	1					
ANR	3230138	CompoundStatement		124:8:4535:4535	3229099	1					
ANR	3230139	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 4 * width * MBheight	1506:12:47816:47872	3229099	0	True				
ANR	3230140	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		3229099	0		=			
ANR	3230141	Identifier	sp		3229099	0					
ANR	3230142	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		3229099	1		+			
ANR	3230143	CastExpression	( uint8_t * ) con -> buf		3229099	0					
ANR	3230144	CastTarget	uint8_t *		3229099	0					
ANR	3230145	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230146	Identifier	con		3229099	0					
ANR	3230147	Identifier	buf		3229099	1					
ANR	3230148	AdditiveExpression	xDiv * mx + 4 * width * MBheight		3229099	1		+			
ANR	3230149	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230150	Identifier	xDiv		3229099	0					
ANR	3230151	Identifier	mx		3229099	1					
ANR	3230152	MultiplicativeExpression	4 * width * MBheight		3229099	1		*			
ANR	3230153	PrimaryExpression	4		3229099	0					
ANR	3230154	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230155	Identifier	width		3229099	0					
ANR	3230156	Identifier	MBheight		3229099	1					
ANR	3230157	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	1					
ANR	3230158	ForInit	idx1 = 0 ;	1507:17:47891:47899	3229099	0	True				
ANR	3230159	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230160	Identifier	idx1		3229099	0					
ANR	3230161	PrimaryExpression	0		3229099	1					
ANR	3230162	Condition	idx1 < yDiv	1507:27:47901:47911	3229099	1	True				
ANR	3230163	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230164	Identifier	idx1		3229099	0					
ANR	3230165	Identifier	yDiv		3229099	1					
ANR	3230166	AssignmentExpression	idx1 += 1	1507:40:47914:47922	3229099	2	True	+=			
ANR	3230167	Identifier	idx1		3229099	0					
ANR	3230168	PrimaryExpression	1		3229099	1					
ANR	3230169	CompoundStatement		126:51:4658:4658	3229099	3					
ANR	3230170	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230171	ForInit	idx2 = 0 ;	1508:21:47948:47956	3229099	0	True				
ANR	3230172	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230173	Identifier	idx2		3229099	0					
ANR	3230174	PrimaryExpression	0		3229099	1					
ANR	3230175	Condition	idx2 < xDiv	1508:31:47958:47968	3229099	1	True				
ANR	3230176	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230177	Identifier	idx2		3229099	0					
ANR	3230178	Identifier	xDiv		3229099	1					
ANR	3230179	AssignmentExpression	idx2 += 1	1508:44:47971:47979	3229099	2	True	+=			
ANR	3230180	Identifier	idx2		3229099	0					
ANR	3230181	PrimaryExpression	1		3229099	1					
ANR	3230182	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]	1509:20:48003:48059	3229099	3	True				
ANR	3230183	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230184	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ]		3229099	0					
ANR	3230185	Identifier	data		3229099	0					
ANR	3230186	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 4		3229099	1		+			
ANR	3230187	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230188	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230189	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230190	Identifier	idx1		3229099	0					
ANR	3230191	Identifier	xDiv		3229099	1					
ANR	3230192	Identifier	idx2		3229099	1					
ANR	3230193	Identifier	num_channels		3229099	1					
ANR	3230194	PrimaryExpression	4		3229099	1					
ANR	3230195	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230196	Identifier	sp		3229099	0					
ANR	3230197	Identifier	idx2		3229099	1					
ANR	3230198	ExpressionStatement	sp += width	1510:16:48077:48088	3229099	1	True				
ANR	3230199	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230200	Identifier	sp		3229099	0					
ANR	3230201	Identifier	width		3229099	1					
ANR	3230202	ElseStatement	else		3229099	0					
ANR	3230203	IfStatement	if ( con -> bpi == 16 )		3229099	0					
ANR	3230204	Condition	con -> bpi == 16	1514:13:48133:48146	3229099	0	True				
ANR	3230205	EqualityExpression	con -> bpi == 16		3229099	0		==			
ANR	3230206	PtrMemberAccess	con -> bpi		3229099	0					
ANR	3230207	Identifier	con		3229099	0					
ANR	3230208	Identifier	bpi		3229099	1					
ANR	3230209	PrimaryExpression	16		3229099	1					
ANR	3230210	CompoundStatement		135:8:4908:4975	3229099	1					
ANR	3230211	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight ;	1516:8:48175:48242	3229099	0	True				
ANR	3230212	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		3229099	0					
ANR	3230213	IdentifierDeclType	uint16_t *		3229099	0					
ANR	3230214	Identifier	sp		3229099	1					
ANR	3230215	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		3229099	2		=			
ANR	3230216	Identifier	sp		3229099	0					
ANR	3230217	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		3229099	1		+			
ANR	3230218	CastExpression	( uint16_t * ) con -> buf		3229099	0					
ANR	3230219	CastTarget	uint16_t *		3229099	0					
ANR	3230220	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230221	Identifier	con		3229099	0					
ANR	3230222	Identifier	buf		3229099	1					
ANR	3230223	AdditiveExpression	xDiv * mx + 0 * width * MBheight		3229099	1		+			
ANR	3230224	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230225	Identifier	xDiv		3229099	0					
ANR	3230226	Identifier	mx		3229099	1					
ANR	3230227	MultiplicativeExpression	0 * width * MBheight		3229099	1		*			
ANR	3230228	PrimaryExpression	0		3229099	0					
ANR	3230229	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230230	Identifier	width		3229099	0					
ANR	3230231	Identifier	MBheight		3229099	1					
ANR	3230232	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	1					
ANR	3230233	ForInit	idx1 = 0 ;	1517:13:48257:48265	3229099	0	True				
ANR	3230234	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230235	Identifier	idx1		3229099	0					
ANR	3230236	PrimaryExpression	0		3229099	1					
ANR	3230237	Condition	idx1 < yDiv	1517:23:48267:48277	3229099	1	True				
ANR	3230238	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230239	Identifier	idx1		3229099	0					
ANR	3230240	Identifier	yDiv		3229099	1					
ANR	3230241	AssignmentExpression	idx1 += 1	1517:36:48280:48288	3229099	2	True	+=			
ANR	3230242	Identifier	idx1		3229099	0					
ANR	3230243	PrimaryExpression	1		3229099	1					
ANR	3230244	CompoundStatement		136:47:5024:5024	3229099	3					
ANR	3230245	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230246	ForInit	idx2 = 0 ;	1518:17:48310:48318	3229099	0	True				
ANR	3230247	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230248	Identifier	idx2		3229099	0					
ANR	3230249	PrimaryExpression	0		3229099	1					
ANR	3230250	Condition	idx2 < xDiv	1518:27:48320:48330	3229099	1	True				
ANR	3230251	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230252	Identifier	idx2		3229099	0					
ANR	3230253	Identifier	xDiv		3229099	1					
ANR	3230254	AssignmentExpression	idx2 += 1	1518:40:48333:48341	3229099	2	True	+=			
ANR	3230255	Identifier	idx2		3229099	0					
ANR	3230256	PrimaryExpression	1		3229099	1					
ANR	3230257	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1519:16:48361:48417	3229099	3	True				
ANR	3230258	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230259	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		3229099	0					
ANR	3230260	Identifier	data		3229099	0					
ANR	3230261	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		3229099	1		+			
ANR	3230262	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230263	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230264	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230265	Identifier	idx1		3229099	0					
ANR	3230266	Identifier	xDiv		3229099	1					
ANR	3230267	Identifier	idx2		3229099	1					
ANR	3230268	Identifier	num_channels		3229099	1					
ANR	3230269	PrimaryExpression	0		3229099	1					
ANR	3230270	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230271	Identifier	sp		3229099	0					
ANR	3230272	Identifier	idx2		3229099	1					
ANR	3230273	ExpressionStatement	sp += width	1520:12:48431:48442	3229099	1	True				
ANR	3230274	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230275	Identifier	sp		3229099	0					
ANR	3230276	Identifier	width		3229099	1					
ANR	3230277	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 1 * width * MBheight	1524:8:48479:48536	3229099	2	True				
ANR	3230278	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		3229099	0		=			
ANR	3230279	Identifier	sp		3229099	0					
ANR	3230280	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		3229099	1		+			
ANR	3230281	CastExpression	( uint16_t * ) con -> buf		3229099	0					
ANR	3230282	CastTarget	uint16_t *		3229099	0					
ANR	3230283	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230284	Identifier	con		3229099	0					
ANR	3230285	Identifier	buf		3229099	1					
ANR	3230286	AdditiveExpression	xDiv * mx + 1 * width * MBheight		3229099	1		+			
ANR	3230287	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230288	Identifier	xDiv		3229099	0					
ANR	3230289	Identifier	mx		3229099	1					
ANR	3230290	MultiplicativeExpression	1 * width * MBheight		3229099	1		*			
ANR	3230291	PrimaryExpression	1		3229099	0					
ANR	3230292	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230293	Identifier	width		3229099	0					
ANR	3230294	Identifier	MBheight		3229099	1					
ANR	3230295	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	3					
ANR	3230296	ForInit	idx1 = 0 ;	1525:13:48551:48559	3229099	0	True				
ANR	3230297	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230298	Identifier	idx1		3229099	0					
ANR	3230299	PrimaryExpression	0		3229099	1					
ANR	3230300	Condition	idx1 < yDiv	1525:23:48561:48571	3229099	1	True				
ANR	3230301	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230302	Identifier	idx1		3229099	0					
ANR	3230303	Identifier	yDiv		3229099	1					
ANR	3230304	AssignmentExpression	idx1 += 1	1525:36:48574:48582	3229099	2	True	+=			
ANR	3230305	Identifier	idx1		3229099	0					
ANR	3230306	PrimaryExpression	1		3229099	1					
ANR	3230307	CompoundStatement		144:47:5318:5318	3229099	3					
ANR	3230308	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230309	ForInit	idx2 = 0 ;	1526:17:48604:48612	3229099	0	True				
ANR	3230310	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230311	Identifier	idx2		3229099	0					
ANR	3230312	PrimaryExpression	0		3229099	1					
ANR	3230313	Condition	idx2 < xDiv	1526:27:48614:48624	3229099	1	True				
ANR	3230314	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230315	Identifier	idx2		3229099	0					
ANR	3230316	Identifier	xDiv		3229099	1					
ANR	3230317	AssignmentExpression	idx2 += 1	1526:40:48627:48635	3229099	2	True	+=			
ANR	3230318	Identifier	idx2		3229099	0					
ANR	3230319	PrimaryExpression	1		3229099	1					
ANR	3230320	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1527:16:48655:48711	3229099	3	True				
ANR	3230321	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230322	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		3229099	0					
ANR	3230323	Identifier	data		3229099	0					
ANR	3230324	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		3229099	1		+			
ANR	3230325	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230326	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230327	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230328	Identifier	idx1		3229099	0					
ANR	3230329	Identifier	xDiv		3229099	1					
ANR	3230330	Identifier	idx2		3229099	1					
ANR	3230331	Identifier	num_channels		3229099	1					
ANR	3230332	PrimaryExpression	1		3229099	1					
ANR	3230333	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230334	Identifier	sp		3229099	0					
ANR	3230335	Identifier	idx2		3229099	1					
ANR	3230336	ExpressionStatement	sp += width	1528:12:48725:48736	3229099	1	True				
ANR	3230337	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230338	Identifier	sp		3229099	0					
ANR	3230339	Identifier	width		3229099	1					
ANR	3230340	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 2 * width * MBheight	1532:8:48773:48830	3229099	4	True				
ANR	3230341	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		3229099	0		=			
ANR	3230342	Identifier	sp		3229099	0					
ANR	3230343	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		3229099	1		+			
ANR	3230344	CastExpression	( uint16_t * ) con -> buf		3229099	0					
ANR	3230345	CastTarget	uint16_t *		3229099	0					
ANR	3230346	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230347	Identifier	con		3229099	0					
ANR	3230348	Identifier	buf		3229099	1					
ANR	3230349	AdditiveExpression	xDiv * mx + 2 * width * MBheight		3229099	1		+			
ANR	3230350	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230351	Identifier	xDiv		3229099	0					
ANR	3230352	Identifier	mx		3229099	1					
ANR	3230353	MultiplicativeExpression	2 * width * MBheight		3229099	1		*			
ANR	3230354	PrimaryExpression	2		3229099	0					
ANR	3230355	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230356	Identifier	width		3229099	0					
ANR	3230357	Identifier	MBheight		3229099	1					
ANR	3230358	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	5					
ANR	3230359	ForInit	idx1 = 0 ;	1533:13:48845:48853	3229099	0	True				
ANR	3230360	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230361	Identifier	idx1		3229099	0					
ANR	3230362	PrimaryExpression	0		3229099	1					
ANR	3230363	Condition	idx1 < yDiv	1533:23:48855:48865	3229099	1	True				
ANR	3230364	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230365	Identifier	idx1		3229099	0					
ANR	3230366	Identifier	yDiv		3229099	1					
ANR	3230367	AssignmentExpression	idx1 += 1	1533:36:48868:48876	3229099	2	True	+=			
ANR	3230368	Identifier	idx1		3229099	0					
ANR	3230369	PrimaryExpression	1		3229099	1					
ANR	3230370	CompoundStatement		152:47:5612:5612	3229099	3					
ANR	3230371	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230372	ForInit	idx2 = 0 ;	1534:17:48898:48906	3229099	0	True				
ANR	3230373	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230374	Identifier	idx2		3229099	0					
ANR	3230375	PrimaryExpression	0		3229099	1					
ANR	3230376	Condition	idx2 < xDiv	1534:27:48908:48918	3229099	1	True				
ANR	3230377	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230378	Identifier	idx2		3229099	0					
ANR	3230379	Identifier	xDiv		3229099	1					
ANR	3230380	AssignmentExpression	idx2 += 1	1534:40:48921:48929	3229099	2	True	+=			
ANR	3230381	Identifier	idx2		3229099	0					
ANR	3230382	PrimaryExpression	1		3229099	1					
ANR	3230383	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1535:16:48949:49005	3229099	3	True				
ANR	3230384	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230385	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		3229099	0					
ANR	3230386	Identifier	data		3229099	0					
ANR	3230387	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		3229099	1		+			
ANR	3230388	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230389	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230390	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230391	Identifier	idx1		3229099	0					
ANR	3230392	Identifier	xDiv		3229099	1					
ANR	3230393	Identifier	idx2		3229099	1					
ANR	3230394	Identifier	num_channels		3229099	1					
ANR	3230395	PrimaryExpression	2		3229099	1					
ANR	3230396	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230397	Identifier	sp		3229099	0					
ANR	3230398	Identifier	idx2		3229099	1					
ANR	3230399	ExpressionStatement	sp += width	1536:12:49019:49030	3229099	1	True				
ANR	3230400	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230401	Identifier	sp		3229099	0					
ANR	3230402	Identifier	width		3229099	1					
ANR	3230403	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 3 * width * MBheight	1540:8:49067:49124	3229099	6	True				
ANR	3230404	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		3229099	0		=			
ANR	3230405	Identifier	sp		3229099	0					
ANR	3230406	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		3229099	1		+			
ANR	3230407	CastExpression	( uint16_t * ) con -> buf		3229099	0					
ANR	3230408	CastTarget	uint16_t *		3229099	0					
ANR	3230409	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230410	Identifier	con		3229099	0					
ANR	3230411	Identifier	buf		3229099	1					
ANR	3230412	AdditiveExpression	xDiv * mx + 3 * width * MBheight		3229099	1		+			
ANR	3230413	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230414	Identifier	xDiv		3229099	0					
ANR	3230415	Identifier	mx		3229099	1					
ANR	3230416	MultiplicativeExpression	3 * width * MBheight		3229099	1		*			
ANR	3230417	PrimaryExpression	3		3229099	0					
ANR	3230418	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230419	Identifier	width		3229099	0					
ANR	3230420	Identifier	MBheight		3229099	1					
ANR	3230421	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	7					
ANR	3230422	ForInit	idx1 = 0 ;	1541:13:49139:49147	3229099	0	True				
ANR	3230423	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230424	Identifier	idx1		3229099	0					
ANR	3230425	PrimaryExpression	0		3229099	1					
ANR	3230426	Condition	idx1 < yDiv	1541:23:49149:49159	3229099	1	True				
ANR	3230427	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230428	Identifier	idx1		3229099	0					
ANR	3230429	Identifier	yDiv		3229099	1					
ANR	3230430	AssignmentExpression	idx1 += 1	1541:36:49162:49170	3229099	2	True	+=			
ANR	3230431	Identifier	idx1		3229099	0					
ANR	3230432	PrimaryExpression	1		3229099	1					
ANR	3230433	CompoundStatement		160:47:5906:5906	3229099	3					
ANR	3230434	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230435	ForInit	idx2 = 0 ;	1542:17:49192:49200	3229099	0	True				
ANR	3230436	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230437	Identifier	idx2		3229099	0					
ANR	3230438	PrimaryExpression	0		3229099	1					
ANR	3230439	Condition	idx2 < xDiv	1542:27:49202:49212	3229099	1	True				
ANR	3230440	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230441	Identifier	idx2		3229099	0					
ANR	3230442	Identifier	xDiv		3229099	1					
ANR	3230443	AssignmentExpression	idx2 += 1	1542:40:49215:49223	3229099	2	True	+=			
ANR	3230444	Identifier	idx2		3229099	0					
ANR	3230445	PrimaryExpression	1		3229099	1					
ANR	3230446	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1543:16:49243:49299	3229099	3	True				
ANR	3230447	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230448	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		3229099	0					
ANR	3230449	Identifier	data		3229099	0					
ANR	3230450	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		3229099	1		+			
ANR	3230451	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230452	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230453	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230454	Identifier	idx1		3229099	0					
ANR	3230455	Identifier	xDiv		3229099	1					
ANR	3230456	Identifier	idx2		3229099	1					
ANR	3230457	Identifier	num_channels		3229099	1					
ANR	3230458	PrimaryExpression	3		3229099	1					
ANR	3230459	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230460	Identifier	sp		3229099	0					
ANR	3230461	Identifier	idx2		3229099	1					
ANR	3230462	ExpressionStatement	sp += width	1544:12:49313:49324	3229099	1	True				
ANR	3230463	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230464	Identifier	sp		3229099	0					
ANR	3230465	Identifier	width		3229099	1					
ANR	3230466	IfStatement	if ( con -> ncomp == 5 )		3229099	8					
ANR	3230467	Condition	con -> ncomp == 5	1547:11:49348:49362	3229099	0	True				
ANR	3230468	EqualityExpression	con -> ncomp == 5		3229099	0		==			
ANR	3230469	PtrMemberAccess	con -> ncomp		3229099	0					
ANR	3230470	Identifier	con		3229099	0					
ANR	3230471	Identifier	ncomp		3229099	1					
ANR	3230472	PrimaryExpression	5		3229099	1					
ANR	3230473	CompoundStatement		167:8:6106:6106	3229099	1					
ANR	3230474	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 4 * width * MBheight	1549:12:49387:49444	3229099	0	True				
ANR	3230475	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		3229099	0		=			
ANR	3230476	Identifier	sp		3229099	0					
ANR	3230477	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		3229099	1		+			
ANR	3230478	CastExpression	( uint16_t * ) con -> buf		3229099	0					
ANR	3230479	CastTarget	uint16_t *		3229099	0					
ANR	3230480	PtrMemberAccess	con -> buf		3229099	1					
ANR	3230481	Identifier	con		3229099	0					
ANR	3230482	Identifier	buf		3229099	1					
ANR	3230483	AdditiveExpression	xDiv * mx + 4 * width * MBheight		3229099	1		+			
ANR	3230484	MultiplicativeExpression	xDiv * mx		3229099	0		*			
ANR	3230485	Identifier	xDiv		3229099	0					
ANR	3230486	Identifier	mx		3229099	1					
ANR	3230487	MultiplicativeExpression	4 * width * MBheight		3229099	1		*			
ANR	3230488	PrimaryExpression	4		3229099	0					
ANR	3230489	MultiplicativeExpression	width * MBheight		3229099	1		*			
ANR	3230490	Identifier	width		3229099	0					
ANR	3230491	Identifier	MBheight		3229099	1					
ANR	3230492	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		3229099	1					
ANR	3230493	ForInit	idx1 = 0 ;	1550:17:49463:49471	3229099	0	True				
ANR	3230494	AssignmentExpression	idx1 = 0		3229099	0		=			
ANR	3230495	Identifier	idx1		3229099	0					
ANR	3230496	PrimaryExpression	0		3229099	1					
ANR	3230497	Condition	idx1 < yDiv	1550:27:49473:49483	3229099	1	True				
ANR	3230498	RelationalExpression	idx1 < yDiv		3229099	0		<			
ANR	3230499	Identifier	idx1		3229099	0					
ANR	3230500	Identifier	yDiv		3229099	1					
ANR	3230501	AssignmentExpression	idx1 += 1	1550:40:49486:49494	3229099	2	True	+=			
ANR	3230502	Identifier	idx1		3229099	0					
ANR	3230503	PrimaryExpression	1		3229099	1					
ANR	3230504	CompoundStatement		169:51:6230:6230	3229099	3					
ANR	3230505	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		3229099	0					
ANR	3230506	ForInit	idx2 = 0 ;	1551:21:49520:49528	3229099	0	True				
ANR	3230507	AssignmentExpression	idx2 = 0		3229099	0		=			
ANR	3230508	Identifier	idx2		3229099	0					
ANR	3230509	PrimaryExpression	0		3229099	1					
ANR	3230510	Condition	idx2 < xDiv	1551:31:49530:49540	3229099	1	True				
ANR	3230511	RelationalExpression	idx2 < xDiv		3229099	0		<			
ANR	3230512	Identifier	idx2		3229099	0					
ANR	3230513	Identifier	xDiv		3229099	1					
ANR	3230514	AssignmentExpression	idx2 += 1	1551:44:49543:49551	3229099	2	True	+=			
ANR	3230515	Identifier	idx2		3229099	0					
ANR	3230516	PrimaryExpression	1		3229099	1					
ANR	3230517	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]	1552:20:49575:49631	3229099	3	True				
ANR	3230518	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]		3229099	0		=			
ANR	3230519	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ]		3229099	0					
ANR	3230520	Identifier	data		3229099	0					
ANR	3230521	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 4		3229099	1		+			
ANR	3230522	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		3229099	0		*			
ANR	3230523	AdditiveExpression	idx1 * xDiv + idx2		3229099	0		+			
ANR	3230524	MultiplicativeExpression	idx1 * xDiv		3229099	0		*			
ANR	3230525	Identifier	idx1		3229099	0					
ANR	3230526	Identifier	xDiv		3229099	1					
ANR	3230527	Identifier	idx2		3229099	1					
ANR	3230528	Identifier	num_channels		3229099	1					
ANR	3230529	PrimaryExpression	4		3229099	1					
ANR	3230530	ArrayIndexing	sp [ idx2 ]		3229099	1					
ANR	3230531	Identifier	sp		3229099	0					
ANR	3230532	Identifier	idx2		3229099	1					
ANR	3230533	ExpressionStatement	sp += width	1553:16:49649:49660	3229099	1	True				
ANR	3230534	AssignmentExpression	sp += width		3229099	0		+=			
ANR	3230535	Identifier	sp		3229099	0					
ANR	3230536	Identifier	width		3229099	1					
ANR	3230537	ReturnType	void		3229099	1					
ANR	3230538	Identifier	read_file_CMYK		3229099	2					
ANR	3230539	ParameterList	"jxr_image_t image , int mx , int my , int * data"		3229099	3					
ANR	3230540	Parameter	jxr_image_t image	1382:20:43220:43236	3229099	0	True				
ANR	3230541	ParameterType	jxr_image_t		3229099	0					
ANR	3230542	Identifier	image		3229099	1					
ANR	3230543	Parameter	int mx	1382:39:43239:43244	3229099	1	True				
ANR	3230544	ParameterType	int		3229099	0					
ANR	3230545	Identifier	mx		3229099	1					
ANR	3230546	Parameter	int my	1382:47:43247:43252	3229099	2	True				
ANR	3230547	ParameterType	int		3229099	0					
ANR	3230548	Identifier	my		3229099	1					
ANR	3230549	Parameter	int * data	1382:55:43255:43263	3229099	3	True				
ANR	3230550	ParameterType	int *		3229099	0					
ANR	3230551	Identifier	data		3229099	1					
ANR	3230552	CFGEntryNode	ENTRY		3229099		True				
ANR	3230553	CFGExitNode	EXIT		3229099		True				
ANR	3230554	Symbol	num_channels		3229099						
ANR	3230555	Symbol	* sp		3229099						
ANR	3230556	Symbol	con		3229099						
ANR	3230557	Symbol	data		3229099						
ANR	3230558	Symbol	jxr_get_user_data		3229099						
ANR	3230559	Symbol	con -> ncomp		3229099						
ANR	3230560	Symbol	* xDiv		3229099						
ANR	3230561	Symbol	xDiv		3229099						
ANR	3230562	Symbol	* con		3229099						
ANR	3230563	Symbol	offsetY		3229099						
ANR	3230564	Symbol	* idx2		3229099						
ANR	3230565	Symbol	con -> bpi		3229099						
ANR	3230566	Symbol	* idx1		3229099						
ANR	3230567	Symbol	sp		3229099						
ANR	3230568	Symbol	con -> wid		3229099						
ANR	3230569	Symbol	height		3229099						
ANR	3230570	Symbol	SEEK_SET		3229099						
ANR	3230571	Symbol	yDiv		3229099						
ANR	3230572	Symbol	image		3229099						
ANR	3230573	Symbol	con -> hei		3229099						
ANR	3230574	Symbol	idx2		3229099						
ANR	3230575	Symbol	con -> my		3229099						
ANR	3230576	Symbol	offsetC		3229099						
ANR	3230577	Symbol	idx1		3229099						
ANR	3230578	Symbol	mx		3229099						
ANR	3230579	Symbol	my		3229099						
ANR	3230580	Symbol	offsetK		3229099						
ANR	3230581	Symbol	offsetM		3229099						
ANR	3230582	Symbol	MBheight		3229099						
ANR	3230583	Symbol	* num_channels		3229099						
ANR	3230584	Symbol	size		3229099						
ANR	3230585	Symbol	width		3229099						
ANR	3230586	Symbol	offsetA		3229099						
ANR	3230587	Symbol	con -> buf		3229099						
ANR	3230588	Symbol	* data		3229099						
ANR	3230589	Function	read_file	1560:0:49696:60465							
ANR	3230590	FunctionDef	"read_file (jxr_image_t image , int mx , int my , int * data)"		3230589	0					
ANR	3230591	CompoundStatement		1561:0:49757:60465	3230589	0					
ANR	3230592	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1562:4:49763:49813	3230589	0	True				
ANR	3230593	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3230589	0					
ANR	3230594	IdentifierDeclType	context *		3230589	0					
ANR	3230595	Identifier	con		3230589	1					
ANR	3230596	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3230589	2		=			
ANR	3230597	Identifier	con		3230589	0					
ANR	3230598	CastExpression	( context * ) jxr_get_user_data ( image )		3230589	1					
ANR	3230599	CastTarget	context *		3230589	0					
ANR	3230600	CallExpression	jxr_get_user_data ( image )		3230589	1					
ANR	3230601	Callee	jxr_get_user_data		3230589	0					
ANR	3230602	Identifier	jxr_get_user_data		3230589	0					
ANR	3230603	ArgumentList	image		3230589	1					
ANR	3230604	Argument	image		3230589	0					
ANR	3230605	Identifier	image		3230589	0					
ANR	3230606	IdentifierDeclStatement	unsigned char uExternalNcomp = con -> ncomp + con -> padBytes ;	1563:4:49819:49876	3230589	1	True				
ANR	3230607	IdentifierDecl	uExternalNcomp = con -> ncomp + con -> padBytes		3230589	0					
ANR	3230608	IdentifierDeclType	unsigned char		3230589	0					
ANR	3230609	Identifier	uExternalNcomp		3230589	1					
ANR	3230610	AssignmentExpression	uExternalNcomp = con -> ncomp + con -> padBytes		3230589	2		=			
ANR	3230611	Identifier	uExternalNcomp		3230589	0					
ANR	3230612	AdditiveExpression	con -> ncomp + con -> padBytes		3230589	1		+			
ANR	3230613	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3230614	Identifier	con		3230589	0					
ANR	3230615	Identifier	ncomp		3230589	1					
ANR	3230616	PtrMemberAccess	con -> padBytes		3230589	1					
ANR	3230617	Identifier	con		3230589	0					
ANR	3230618	Identifier	padBytes		3230589	1					
ANR	3230619	IdentifierDeclStatement	int block_wid = uExternalNcomp * ( ( con -> wid + 15 ) & ~15 ) ;	1564:4:49882:49934	3230589	2	True				
ANR	3230620	IdentifierDecl	block_wid = uExternalNcomp * ( ( con -> wid + 15 ) & ~15 )		3230589	0					
ANR	3230621	IdentifierDeclType	int		3230589	0					
ANR	3230622	Identifier	block_wid		3230589	1					
ANR	3230623	AssignmentExpression	block_wid = uExternalNcomp * ( ( con -> wid + 15 ) & ~15 )		3230589	2		=			
ANR	3230624	Identifier	block_wid		3230589	0					
ANR	3230625	MultiplicativeExpression	uExternalNcomp * ( ( con -> wid + 15 ) & ~15 )		3230589	1		*			
ANR	3230626	Identifier	uExternalNcomp		3230589	0					
ANR	3230627	BitAndExpression	( con -> wid + 15 ) & ~15		3230589	1		&			
ANR	3230628	AdditiveExpression	con -> wid + 15		3230589	0		+			
ANR	3230629	PtrMemberAccess	con -> wid		3230589	0					
ANR	3230630	Identifier	con		3230589	0					
ANR	3230631	Identifier	wid		3230589	1					
ANR	3230632	PrimaryExpression	15		3230589	1					
ANR	3230633	Identifier	~15		3230589	1					
ANR	3230634	IfStatement	if ( ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3 )		3230589	3					
ANR	3230635	Condition	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3	1566:7:49944:50054	3230589	0	True				
ANR	3230636	AndExpression	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3		3230589	0		&&			
ANR	3230637	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image )		3230589	0		||			
ANR	3230638	CallExpression	isOutputYUV444 ( image )		3230589	0					
ANR	3230639	Callee	isOutputYUV444		3230589	0					
ANR	3230640	Identifier	isOutputYUV444		3230589	0					
ANR	3230641	ArgumentList	image		3230589	1					
ANR	3230642	Argument	image		3230589	0					
ANR	3230643	Identifier	image		3230589	0					
ANR	3230644	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image )		3230589	1		||			
ANR	3230645	CallExpression	isOutputYUV422 ( image )		3230589	0					
ANR	3230646	Callee	isOutputYUV422		3230589	0					
ANR	3230647	Identifier	isOutputYUV422		3230589	0					
ANR	3230648	ArgumentList	image		3230589	1					
ANR	3230649	Argument	image		3230589	0					
ANR	3230650	Identifier	image		3230589	0					
ANR	3230651	CallExpression	isOutputYUV420 ( image )		3230589	1					
ANR	3230652	Callee	isOutputYUV420		3230589	0					
ANR	3230653	Identifier	isOutputYUV420		3230589	0					
ANR	3230654	ArgumentList	image		3230589	1					
ANR	3230655	Argument	image		3230589	0					
ANR	3230656	Identifier	image		3230589	0					
ANR	3230657	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 3		3230589	1		==			
ANR	3230658	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3230589	0					
ANR	3230659	Callee	jxr_get_IMAGE_CHANNELS		3230589	0					
ANR	3230660	Identifier	jxr_get_IMAGE_CHANNELS		3230589	0					
ANR	3230661	ArgumentList	image		3230589	1					
ANR	3230662	Argument	image		3230589	0					
ANR	3230663	Identifier	image		3230589	0					
ANR	3230664	PrimaryExpression	3		3230589	1					
ANR	3230665	CompoundStatement		7:4:303:303	3230589	1					
ANR	3230666	ExpressionStatement	"read_file_YCC ( image , mx , my , data )"	1569:8:50131:50165	3230589	0	True				
ANR	3230667	CallExpression	"read_file_YCC ( image , mx , my , data )"		3230589	0					
ANR	3230668	Callee	read_file_YCC		3230589	0					
ANR	3230669	Identifier	read_file_YCC		3230589	0					
ANR	3230670	ArgumentList	image		3230589	1					
ANR	3230671	Argument	image		3230589	0					
ANR	3230672	Identifier	image		3230589	0					
ANR	3230673	Argument	mx		3230589	1					
ANR	3230674	Identifier	mx		3230589	0					
ANR	3230675	Argument	my		3230589	2					
ANR	3230676	Identifier	my		3230589	0					
ANR	3230677	Argument	data		3230589	3					
ANR	3230678	Identifier	data		3230589	0					
ANR	3230679	ReturnStatement	return ;	1570:8:50175:50181	3230589	1	True				
ANR	3230680	ElseStatement	else		3230589	0					
ANR	3230681	IfStatement	if ( isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4 )		3230589	0					
ANR	3230682	Condition	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4	1572:12:50201:50263	3230589	0	True				
ANR	3230683	AndExpression	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4		3230589	0		&&			
ANR	3230684	CallExpression	isOutputCMYKDirect ( image )		3230589	0					
ANR	3230685	Callee	isOutputCMYKDirect		3230589	0					
ANR	3230686	Identifier	isOutputCMYKDirect		3230589	0					
ANR	3230687	ArgumentList	image		3230589	1					
ANR	3230688	Argument	image		3230589	0					
ANR	3230689	Identifier	image		3230589	0					
ANR	3230690	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 4		3230589	1		==			
ANR	3230691	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3230589	0					
ANR	3230692	Callee	jxr_get_IMAGE_CHANNELS		3230589	0					
ANR	3230693	Identifier	jxr_get_IMAGE_CHANNELS		3230589	0					
ANR	3230694	ArgumentList	image		3230589	1					
ANR	3230695	Argument	image		3230589	0					
ANR	3230696	Identifier	image		3230589	0					
ANR	3230697	PrimaryExpression	4		3230589	1					
ANR	3230698	CompoundStatement		13:4:512:512	3230589	1					
ANR	3230699	ExpressionStatement	"read_file_CMYK ( image , mx , my , data )"	1575:8:50340:50375	3230589	0	True				
ANR	3230700	CallExpression	"read_file_CMYK ( image , mx , my , data )"		3230589	0					
ANR	3230701	Callee	read_file_CMYK		3230589	0					
ANR	3230702	Identifier	read_file_CMYK		3230589	0					
ANR	3230703	ArgumentList	image		3230589	1					
ANR	3230704	Argument	image		3230589	0					
ANR	3230705	Identifier	image		3230589	0					
ANR	3230706	Argument	mx		3230589	1					
ANR	3230707	Identifier	mx		3230589	0					
ANR	3230708	Argument	my		3230589	2					
ANR	3230709	Identifier	my		3230589	0					
ANR	3230710	Argument	data		3230589	3					
ANR	3230711	Identifier	data		3230589	0					
ANR	3230712	ReturnStatement	return ;	1576:8:50385:50391	3230589	1	True				
ANR	3230713	IfStatement	if ( con -> ncomp == 3 || con -> ncomp == 4 )		3230589	4					
ANR	3230714	Condition	con -> ncomp == 3 || con -> ncomp == 4	1579:7:50407:50440	3230589	0	True				
ANR	3230715	OrExpression	con -> ncomp == 3 || con -> ncomp == 4		3230589	0		||			
ANR	3230716	EqualityExpression	con -> ncomp == 3		3230589	0		==			
ANR	3230717	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3230718	Identifier	con		3230589	0					
ANR	3230719	Identifier	ncomp		3230589	1					
ANR	3230720	PrimaryExpression	3		3230589	1					
ANR	3230721	EqualityExpression	con -> ncomp == 4		3230589	1		==			
ANR	3230722	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3230723	Identifier	con		3230589	0					
ANR	3230724	Identifier	ncomp		3230589	1					
ANR	3230725	PrimaryExpression	4		3230589	1					
ANR	3230726	CompoundStatement		20:4:689:689	3230589	1					
ANR	3230727	ExpressionStatement	"set_bgr_flag ( con , image )"	1581:8:50457:50481	3230589	0	True				
ANR	3230728	CallExpression	"set_bgr_flag ( con , image )"		3230589	0					
ANR	3230729	Callee	set_bgr_flag		3230589	0					
ANR	3230730	Identifier	set_bgr_flag		3230589	0					
ANR	3230731	ArgumentList	con		3230589	1					
ANR	3230732	Argument	con		3230589	0					
ANR	3230733	Identifier	con		3230589	0					
ANR	3230734	Argument	image		3230589	1					
ANR	3230735	Identifier	image		3230589	0					
ANR	3230736	ElseStatement	else		3230589	0					
ANR	3230737	CompoundStatement		24:4:744:744	3230589	0					
ANR	3230738	ExpressionStatement	con -> isBgr = 0	1585:8:50512:50526	3230589	0	True				
ANR	3230739	AssignmentExpression	con -> isBgr = 0		3230589	0		=			
ANR	3230740	PtrMemberAccess	con -> isBgr		3230589	0					
ANR	3230741	Identifier	con		3230589	0					
ANR	3230742	Identifier	isBgr		3230589	1					
ANR	3230743	PrimaryExpression	0		3230589	1					
ANR	3230744	IfStatement	if ( my != con -> my )		3230589	5					
ANR	3230745	Condition	my != con -> my	1588:8:50543:50555	3230589	0	True				
ANR	3230746	EqualityExpression	my != con -> my		3230589	0		!=			
ANR	3230747	Identifier	my		3230589	0					
ANR	3230748	PtrMemberAccess	con -> my		3230589	1					
ANR	3230749	Identifier	con		3230589	0					
ANR	3230750	Identifier	my		3230589	1					
ANR	3230751	CompoundStatement		31:8:924:931	3230589	1					
ANR	3230752	IdentifierDeclStatement	int trans = ( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16 ;	1589:8:50568:50622	3230589	0	True				
ANR	3230753	IdentifierDecl	trans = ( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16		3230589	0					
ANR	3230754	IdentifierDeclType	int		3230589	0					
ANR	3230755	Identifier	trans		3230589	1					
ANR	3230756	AssignmentExpression	trans = ( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16		3230589	2		=			
ANR	3230757	Identifier	trans		3230589	0					
ANR	3230758	ConditionalExpression	( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16		3230589	1					
ANR	3230759	Condition	my * 16 + 16 > con -> hei		3230589	0					
ANR	3230760	RelationalExpression	my * 16 + 16 > con -> hei		3230589	0		>			
ANR	3230761	AdditiveExpression	my * 16 + 16		3230589	0		+			
ANR	3230762	MultiplicativeExpression	my * 16		3230589	0		*			
ANR	3230763	Identifier	my		3230589	0					
ANR	3230764	PrimaryExpression	16		3230589	1					
ANR	3230765	PrimaryExpression	16		3230589	1					
ANR	3230766	PtrMemberAccess	con -> hei		3230589	1					
ANR	3230767	Identifier	con		3230589	0					
ANR	3230768	Identifier	hei		3230589	1					
ANR	3230769	MultiplicativeExpression	con -> hei % 16		3230589	1		%			
ANR	3230770	PtrMemberAccess	con -> hei		3230589	0					
ANR	3230771	Identifier	con		3230589	0					
ANR	3230772	Identifier	hei		3230589	1					
ANR	3230773	PrimaryExpression	16		3230589	1					
ANR	3230774	PrimaryExpression	16		3230589	2					
ANR	3230775	IdentifierDeclStatement	int line_wid = uExternalNcomp * con -> wid ;	1590:8:50632:50672	3230589	1	True				
ANR	3230776	IdentifierDecl	line_wid = uExternalNcomp * con -> wid		3230589	0					
ANR	3230777	IdentifierDeclType	int		3230589	0					
ANR	3230778	Identifier	line_wid		3230589	1					
ANR	3230779	AssignmentExpression	line_wid = uExternalNcomp * con -> wid		3230589	2		=			
ANR	3230780	Identifier	line_wid		3230589	0					
ANR	3230781	MultiplicativeExpression	uExternalNcomp * con -> wid		3230589	1		*			
ANR	3230782	Identifier	uExternalNcomp		3230589	0					
ANR	3230783	PtrMemberAccess	con -> wid		3230589	1					
ANR	3230784	Identifier	con		3230589	0					
ANR	3230785	Identifier	wid		3230589	1					
ANR	3230786	IdentifierDeclStatement	int idx ;	1591:8:50682:50689	3230589	2	True				
ANR	3230787	IdentifierDecl	idx		3230589	0					
ANR	3230788	IdentifierDeclType	int		3230589	0					
ANR	3230789	Identifier	idx		3230589	1					
ANR	3230790	IfStatement	if ( con -> bpi == 1 )		3230589	3					
ANR	3230791	Condition	con -> bpi == 1	1592:12:50703:50715	3230589	0	True				
ANR	3230792	EqualityExpression	con -> bpi == 1		3230589	0		==			
ANR	3230793	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3230794	Identifier	con		3230589	0					
ANR	3230795	Identifier	bpi		3230589	1					
ANR	3230796	PrimaryExpression	1		3230589	1					
ANR	3230797	CompoundStatement		33:12:974:1006	3230589	1					
ANR	3230798	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1593:12:50732:50764	3230589	0	True				
ANR	3230799	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		3230589	0					
ANR	3230800	IdentifierDeclType	uint8_t *		3230589	0					
ANR	3230801	Identifier	sp		3230589	1					
ANR	3230802	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		3230589	2		=			
ANR	3230803	Identifier	sp		3230589	0					
ANR	3230804	CastExpression	( uint8_t * ) con -> buf		3230589	1					
ANR	3230805	CastTarget	uint8_t *		3230589	0					
ANR	3230806	PtrMemberAccess	con -> buf		3230589	1					
ANR	3230807	Identifier	con		3230589	0					
ANR	3230808	Identifier	buf		3230589	1					
ANR	3230809	ExpressionStatement	line_wid = ( ( line_wid + 7 ) >> 3 )	1594:12:50778:50810	3230589	1	True				
ANR	3230810	AssignmentExpression	line_wid = ( ( line_wid + 7 ) >> 3 )		3230589	0		=			
ANR	3230811	Identifier	line_wid		3230589	0					
ANR	3230812	ShiftExpression	( line_wid + 7 ) >> 3		3230589	1		>>			
ANR	3230813	AdditiveExpression	line_wid + 7		3230589	0		+			
ANR	3230814	Identifier	line_wid		3230589	0					
ANR	3230815	PrimaryExpression	7		3230589	1					
ANR	3230816	PrimaryExpression	3		3230589	1					
ANR	3230817	ExpressionStatement	block_wid >>= 3	1595:12:50824:50839	3230589	2	True				
ANR	3230818	AssignmentExpression	block_wid >>= 3		3230589	0		>>=			
ANR	3230819	Identifier	block_wid		3230589	0					
ANR	3230820	PrimaryExpression	3		3230589	1					
ANR	3230821	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	3					
ANR	3230822	ForInit	idx = 0 ;	1596:17:50858:50865	3230589	0	True				
ANR	3230823	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3230824	Identifier	idx		3230589	0					
ANR	3230825	PrimaryExpression	0		3230589	1					
ANR	3230826	Condition	idx < trans	1596:26:50867:50877	3230589	1	True				
ANR	3230827	RelationalExpression	idx < trans		3230589	0		<			
ANR	3230828	Identifier	idx		3230589	0					
ANR	3230829	Identifier	trans		3230589	1					
ANR	3230830	AssignmentExpression	idx += 1	1596:39:50880:50887	3230589	2	True	+=			
ANR	3230831	Identifier	idx		3230589	0					
ANR	3230832	PrimaryExpression	1		3230589	1					
ANR	3230833	CompoundStatement		36:49:1132:1132	3230589	3					
ANR	3230834	ExpressionStatement	read_setup ( con )	1597:16:50908:50923	3230589	0	True				
ANR	3230835	CallExpression	read_setup ( con )		3230589	0					
ANR	3230836	Callee	read_setup		3230589	0					
ANR	3230837	Identifier	read_setup		3230589	0					
ANR	3230838	ArgumentList	con		3230589	1					
ANR	3230839	Argument	con		3230589	0					
ANR	3230840	Identifier	con		3230589	0					
ANR	3230841	ExpressionStatement	"read_uint8 ( con , sp , line_wid )"	1598:16:50941:50970	3230589	1	True				
ANR	3230842	CallExpression	"read_uint8 ( con , sp , line_wid )"		3230589	0					
ANR	3230843	Callee	read_uint8		3230589	0					
ANR	3230844	Identifier	read_uint8		3230589	0					
ANR	3230845	ArgumentList	con		3230589	1					
ANR	3230846	Argument	con		3230589	0					
ANR	3230847	Identifier	con		3230589	0					
ANR	3230848	Argument	sp		3230589	1					
ANR	3230849	Identifier	sp		3230589	0					
ANR	3230850	Argument	line_wid		3230589	2					
ANR	3230851	Identifier	line_wid		3230589	0					
ANR	3230852	ExpressionStatement	sp += block_wid	1599:16:50988:51003	3230589	2	True				
ANR	3230853	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3230854	Identifier	sp		3230589	0					
ANR	3230855	Identifier	block_wid		3230589	1					
ANR	3230856	ElseStatement	else		3230589	0					
ANR	3230857	IfStatement	if ( ( con -> bpi == 5 ) || ( con -> bpi == 6 ) )		3230589	0					
ANR	3230858	Condition	( con -> bpi == 5 ) || ( con -> bpi == 6 )	1602:17:51048:51081	3230589	0	True				
ANR	3230859	OrExpression	( con -> bpi == 5 ) || ( con -> bpi == 6 )		3230589	0		||			
ANR	3230860	EqualityExpression	con -> bpi == 5		3230589	0		==			
ANR	3230861	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3230862	Identifier	con		3230589	0					
ANR	3230863	Identifier	bpi		3230589	1					
ANR	3230864	PrimaryExpression	5		3230589	1					
ANR	3230865	EqualityExpression	con -> bpi == 6		3230589	1		==			
ANR	3230866	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3230867	Identifier	con		3230589	0					
ANR	3230868	Identifier	bpi		3230589	1					
ANR	3230869	PrimaryExpression	6		3230589	1					
ANR	3230870	CompoundStatement		43:12:1340:1374	3230589	1					
ANR	3230871	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1603:12:51098:51132	3230589	0	True				
ANR	3230872	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		3230589	0					
ANR	3230873	IdentifierDeclType	uint16_t *		3230589	0					
ANR	3230874	Identifier	sp		3230589	1					
ANR	3230875	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		3230589	2		=			
ANR	3230876	Identifier	sp		3230589	0					
ANR	3230877	CastExpression	( uint16_t * ) con -> buf		3230589	1					
ANR	3230878	CastTarget	uint16_t *		3230589	0					
ANR	3230879	PtrMemberAccess	con -> buf		3230589	1					
ANR	3230880	Identifier	con		3230589	0					
ANR	3230881	Identifier	buf		3230589	1					
ANR	3230882	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1604:12:51158:51189	3230589	1	True				
ANR	3230883	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		3230589	0		=			
ANR	3230884	Identifier	block_wid		3230589	0					
ANR	3230885	BitAndExpression	( con -> wid + 15 ) & ~15		3230589	1		&			
ANR	3230886	AdditiveExpression	con -> wid + 15		3230589	0		+			
ANR	3230887	PtrMemberAccess	con -> wid		3230589	0					
ANR	3230888	Identifier	con		3230589	0					
ANR	3230889	Identifier	wid		3230589	1					
ANR	3230890	PrimaryExpression	15		3230589	1					
ANR	3230891	Identifier	~15		3230589	1					
ANR	3230892	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	2					
ANR	3230893	ForInit	idx = 0 ;	1605:17:51208:51215	3230589	0	True				
ANR	3230894	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3230895	Identifier	idx		3230589	0					
ANR	3230896	PrimaryExpression	0		3230589	1					
ANR	3230897	Condition	idx < trans	1605:26:51217:51227	3230589	1	True				
ANR	3230898	RelationalExpression	idx < trans		3230589	0		<			
ANR	3230899	Identifier	idx		3230589	0					
ANR	3230900	Identifier	trans		3230589	1					
ANR	3230901	AssignmentExpression	idx += 1	1605:39:51230:51237	3230589	2	True	+=			
ANR	3230902	Identifier	idx		3230589	0					
ANR	3230903	PrimaryExpression	1		3230589	1					
ANR	3230904	CompoundStatement		45:49:1482:1482	3230589	3					
ANR	3230905	ExpressionStatement	read_setup ( con )	1606:16:51258:51273	3230589	0	True				
ANR	3230906	CallExpression	read_setup ( con )		3230589	0					
ANR	3230907	Callee	read_setup		3230589	0					
ANR	3230908	Identifier	read_setup		3230589	0					
ANR	3230909	ArgumentList	con		3230589	1					
ANR	3230910	Argument	con		3230589	0					
ANR	3230911	Identifier	con		3230589	0					
ANR	3230912	ExpressionStatement	"read_uint16 ( con , sp , con -> wid )"	1607:16:51291:51321	3230589	1	True				
ANR	3230913	CallExpression	"read_uint16 ( con , sp , con -> wid )"		3230589	0					
ANR	3230914	Callee	read_uint16		3230589	0					
ANR	3230915	Identifier	read_uint16		3230589	0					
ANR	3230916	ArgumentList	con		3230589	1					
ANR	3230917	Argument	con		3230589	0					
ANR	3230918	Identifier	con		3230589	0					
ANR	3230919	Argument	sp		3230589	1					
ANR	3230920	Identifier	sp		3230589	0					
ANR	3230921	Argument	con -> wid		3230589	2					
ANR	3230922	PtrMemberAccess	con -> wid		3230589	0					
ANR	3230923	Identifier	con		3230589	0					
ANR	3230924	Identifier	wid		3230589	1					
ANR	3230925	ExpressionStatement	sp += block_wid	1608:16:51339:51354	3230589	2	True				
ANR	3230926	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3230927	Identifier	sp		3230589	0					
ANR	3230928	Identifier	block_wid		3230589	1					
ANR	3230929	ElseStatement	else		3230589	0					
ANR	3230930	IfStatement	if ( con -> bpi == 8 )		3230589	0					
ANR	3230931	Condition	con -> bpi == 8	1611:17:51399:51411	3230589	0	True				
ANR	3230932	EqualityExpression	con -> bpi == 8		3230589	0		==			
ANR	3230933	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3230934	Identifier	con		3230589	0					
ANR	3230935	Identifier	bpi		3230589	1					
ANR	3230936	PrimaryExpression	8		3230589	1					
ANR	3230937	CompoundStatement		52:12:1670:1702	3230589	1					
ANR	3230938	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1612:12:51428:51460	3230589	0	True				
ANR	3230939	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		3230589	0					
ANR	3230940	IdentifierDeclType	uint8_t *		3230589	0					
ANR	3230941	Identifier	sp		3230589	1					
ANR	3230942	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		3230589	2		=			
ANR	3230943	Identifier	sp		3230589	0					
ANR	3230944	CastExpression	( uint8_t * ) con -> buf		3230589	1					
ANR	3230945	CastTarget	uint8_t *		3230589	0					
ANR	3230946	PtrMemberAccess	con -> buf		3230589	1					
ANR	3230947	Identifier	con		3230589	0					
ANR	3230948	Identifier	buf		3230589	1					
ANR	3230949	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	1					
ANR	3230950	ForInit	idx = 0 ;	1613:17:51479:51486	3230589	0	True				
ANR	3230951	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3230952	Identifier	idx		3230589	0					
ANR	3230953	PrimaryExpression	0		3230589	1					
ANR	3230954	Condition	idx < trans	1613:26:51488:51498	3230589	1	True				
ANR	3230955	RelationalExpression	idx < trans		3230589	0		<			
ANR	3230956	Identifier	idx		3230589	0					
ANR	3230957	Identifier	trans		3230589	1					
ANR	3230958	AssignmentExpression	idx += 1	1613:39:51501:51508	3230589	2	True	+=			
ANR	3230959	Identifier	idx		3230589	0					
ANR	3230960	PrimaryExpression	1		3230589	1					
ANR	3230961	CompoundStatement		53:49:1753:1753	3230589	3					
ANR	3230962	ExpressionStatement	read_setup ( con )	1614:16:51529:51544	3230589	0	True				
ANR	3230963	CallExpression	read_setup ( con )		3230589	0					
ANR	3230964	Callee	read_setup		3230589	0					
ANR	3230965	Identifier	read_setup		3230589	0					
ANR	3230966	ArgumentList	con		3230589	1					
ANR	3230967	Argument	con		3230589	0					
ANR	3230968	Identifier	con		3230589	0					
ANR	3230969	ExpressionStatement	"read_uint8 ( con , sp , line_wid )"	1615:16:51562:51591	3230589	1	True				
ANR	3230970	CallExpression	"read_uint8 ( con , sp , line_wid )"		3230589	0					
ANR	3230971	Callee	read_uint8		3230589	0					
ANR	3230972	Identifier	read_uint8		3230589	0					
ANR	3230973	ArgumentList	con		3230589	1					
ANR	3230974	Argument	con		3230589	0					
ANR	3230975	Identifier	con		3230589	0					
ANR	3230976	Argument	sp		3230589	1					
ANR	3230977	Identifier	sp		3230589	0					
ANR	3230978	Argument	line_wid		3230589	2					
ANR	3230979	Identifier	line_wid		3230589	0					
ANR	3230980	IfStatement	if ( con -> isBgr )		3230589	2					
ANR	3230981	Condition	con -> isBgr	1616:19:51612:51621	3230589	0	True				
ANR	3230982	PtrMemberAccess	con -> isBgr		3230589	0					
ANR	3230983	Identifier	con		3230589	0					
ANR	3230984	Identifier	isBgr		3230589	1					
ANR	3230985	CompoundStatement		58:20:1904:1909	3230589	1					
ANR	3230986	IdentifierDeclStatement	int i ;	1618:20:51662:51667	3230589	0	True				
ANR	3230987	IdentifierDecl	i		3230589	0					
ANR	3230988	IdentifierDeclType	int		3230589	0					
ANR	3230989	Identifier	i		3230589	1					
ANR	3230990	ForStatement	for ( i = 0 ; i < con -> wid ; i ++ )		3230589	1					
ANR	3230991	ForInit	i = 0 ;	1619:24:51693:51698	3230589	0	True				
ANR	3230992	AssignmentExpression	i = 0		3230589	0		=			
ANR	3230993	Identifier	i		3230589	0					
ANR	3230994	PrimaryExpression	0		3230589	1					
ANR	3230995	Condition	i < con -> wid	1619:31:51700:51711	3230589	1	True				
ANR	3230996	RelationalExpression	i < con -> wid		3230589	0		<			
ANR	3230997	Identifier	i		3230589	0					
ANR	3230998	PtrMemberAccess	con -> wid		3230589	1					
ANR	3230999	Identifier	con		3230589	0					
ANR	3231000	Identifier	wid		3230589	1					
ANR	3231001	PostIncDecOperationExpression	i ++	1619:45:51714:51717	3230589	2	True				
ANR	3231002	Identifier	i		3230589	0					
ANR	3231003	IncDec	++		3230589	1					
ANR	3231004	CompoundStatement		61:24:2008:2041	3230589	3					
ANR	3231005	IdentifierDeclStatement	int tmp = sp [ i * ( uExternalNcomp ) ] ;	1621:24:51766:51799	3230589	0	True				
ANR	3231006	IdentifierDecl	tmp = sp [ i * ( uExternalNcomp ) ]		3230589	0					
ANR	3231007	IdentifierDeclType	int		3230589	0					
ANR	3231008	Identifier	tmp		3230589	1					
ANR	3231009	AssignmentExpression	tmp = sp [ i * ( uExternalNcomp ) ]		3230589	2		=			
ANR	3231010	Identifier	tmp		3230589	0					
ANR	3231011	ArrayIndexing	sp [ i * ( uExternalNcomp ) ]		3230589	1					
ANR	3231012	Identifier	sp		3230589	0					
ANR	3231013	MultiplicativeExpression	i * ( uExternalNcomp )		3230589	1		*			
ANR	3231014	Identifier	i		3230589	0					
ANR	3231015	Identifier	uExternalNcomp		3230589	1					
ANR	3231016	ExpressionStatement	sp [ i * ( uExternalNcomp ) ] = sp [ i * ( uExternalNcomp ) + 2 ]	1622:24:51825:51875	3230589	1	True				
ANR	3231017	AssignmentExpression	sp [ i * ( uExternalNcomp ) ] = sp [ i * ( uExternalNcomp ) + 2 ]		3230589	0		=			
ANR	3231018	ArrayIndexing	sp [ i * ( uExternalNcomp ) ]		3230589	0					
ANR	3231019	Identifier	sp		3230589	0					
ANR	3231020	MultiplicativeExpression	i * ( uExternalNcomp )		3230589	1		*			
ANR	3231021	Identifier	i		3230589	0					
ANR	3231022	Identifier	uExternalNcomp		3230589	1					
ANR	3231023	ArrayIndexing	sp [ i * ( uExternalNcomp ) + 2 ]		3230589	1					
ANR	3231024	Identifier	sp		3230589	0					
ANR	3231025	MultiplicativeExpression	i * ( uExternalNcomp ) + 2		3230589	1		*			
ANR	3231026	Identifier	i		3230589	0					
ANR	3231027	CastExpression	( uExternalNcomp ) + 2		3230589	1					
ANR	3231028	CastTarget	uExternalNcomp		3230589	0					
ANR	3231029	UnaryOperationExpression	+ 2		3230589	1					
ANR	3231030	UnaryOperator	+		3230589	0					
ANR	3231031	PrimaryExpression	2		3230589	1					
ANR	3231032	ExpressionStatement	sp [ i * ( uExternalNcomp ) + 2 ] = tmp	1623:24:51901:51932	3230589	2	True				
ANR	3231033	AssignmentExpression	sp [ i * ( uExternalNcomp ) + 2 ] = tmp		3230589	0		=			
ANR	3231034	ArrayIndexing	sp [ i * ( uExternalNcomp ) + 2 ]		3230589	0					
ANR	3231035	Identifier	sp		3230589	0					
ANR	3231036	MultiplicativeExpression	i * ( uExternalNcomp ) + 2		3230589	1		*			
ANR	3231037	Identifier	i		3230589	0					
ANR	3231038	CastExpression	( uExternalNcomp ) + 2		3230589	1					
ANR	3231039	CastTarget	uExternalNcomp		3230589	0					
ANR	3231040	UnaryOperationExpression	+ 2		3230589	1					
ANR	3231041	UnaryOperator	+		3230589	0					
ANR	3231042	PrimaryExpression	2		3230589	1					
ANR	3231043	Identifier	tmp		3230589	1					
ANR	3231044	ExpressionStatement	sp += block_wid	1626:16:51990:52005	3230589	3	True				
ANR	3231045	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3231046	Identifier	sp		3230589	0					
ANR	3231047	Identifier	block_wid		3230589	1					
ANR	3231048	ElseStatement	else		3230589	0					
ANR	3231049	IfStatement	if ( con -> bpi == 10 )		3230589	0					
ANR	3231050	Condition	con -> bpi == 10	1629:17:52050:52063	3230589	0	True				
ANR	3231051	EqualityExpression	con -> bpi == 10		3230589	0		==			
ANR	3231052	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3231053	Identifier	con		3230589	0					
ANR	3231054	Identifier	bpi		3230589	1					
ANR	3231055	PrimaryExpression	10		3230589	1					
ANR	3231056	CompoundStatement		70:12:2322:2356	3230589	1					
ANR	3231057	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf ;	1630:12:52080:52114	3230589	0	True				
ANR	3231058	IdentifierDecl	* sp = ( uint32_t * ) con -> buf		3230589	0					
ANR	3231059	IdentifierDeclType	uint32_t *		3230589	0					
ANR	3231060	Identifier	sp		3230589	1					
ANR	3231061	AssignmentExpression	* sp = ( uint32_t * ) con -> buf		3230589	2		=			
ANR	3231062	Identifier	sp		3230589	0					
ANR	3231063	CastExpression	( uint32_t * ) con -> buf		3230589	1					
ANR	3231064	CastTarget	uint32_t *		3230589	0					
ANR	3231065	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231066	Identifier	con		3230589	0					
ANR	3231067	Identifier	buf		3230589	1					
ANR	3231068	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1631:12:52128:52159	3230589	1	True				
ANR	3231069	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		3230589	0		=			
ANR	3231070	Identifier	block_wid		3230589	0					
ANR	3231071	BitAndExpression	( con -> wid + 15 ) & ~15		3230589	1		&			
ANR	3231072	AdditiveExpression	con -> wid + 15		3230589	0		+			
ANR	3231073	PtrMemberAccess	con -> wid		3230589	0					
ANR	3231074	Identifier	con		3230589	0					
ANR	3231075	Identifier	wid		3230589	1					
ANR	3231076	PrimaryExpression	15		3230589	1					
ANR	3231077	Identifier	~15		3230589	1					
ANR	3231078	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	2					
ANR	3231079	ForInit	idx = 0 ;	1632:17:52178:52185	3230589	0	True				
ANR	3231080	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3231081	Identifier	idx		3230589	0					
ANR	3231082	PrimaryExpression	0		3230589	1					
ANR	3231083	Condition	idx < trans	1632:26:52187:52197	3230589	1	True				
ANR	3231084	RelationalExpression	idx < trans		3230589	0		<			
ANR	3231085	Identifier	idx		3230589	0					
ANR	3231086	Identifier	trans		3230589	1					
ANR	3231087	AssignmentExpression	idx += 1	1632:39:52200:52207	3230589	2	True	+=			
ANR	3231088	Identifier	idx		3230589	0					
ANR	3231089	PrimaryExpression	1		3230589	1					
ANR	3231090	CompoundStatement		72:49:2452:2452	3230589	3					
ANR	3231091	ExpressionStatement	read_setup ( con )	1633:16:52228:52243	3230589	0	True				
ANR	3231092	CallExpression	read_setup ( con )		3230589	0					
ANR	3231093	Callee	read_setup		3230589	0					
ANR	3231094	Identifier	read_setup		3230589	0					
ANR	3231095	ArgumentList	con		3230589	1					
ANR	3231096	Argument	con		3230589	0					
ANR	3231097	Identifier	con		3230589	0					
ANR	3231098	ExpressionStatement	"read_uint32 ( con , sp , con -> wid )"	1634:16:52261:52291	3230589	1	True				
ANR	3231099	CallExpression	"read_uint32 ( con , sp , con -> wid )"		3230589	0					
ANR	3231100	Callee	read_uint32		3230589	0					
ANR	3231101	Identifier	read_uint32		3230589	0					
ANR	3231102	ArgumentList	con		3230589	1					
ANR	3231103	Argument	con		3230589	0					
ANR	3231104	Identifier	con		3230589	0					
ANR	3231105	Argument	sp		3230589	1					
ANR	3231106	Identifier	sp		3230589	0					
ANR	3231107	Argument	con -> wid		3230589	2					
ANR	3231108	PtrMemberAccess	con -> wid		3230589	0					
ANR	3231109	Identifier	con		3230589	0					
ANR	3231110	Identifier	wid		3230589	1					
ANR	3231111	ExpressionStatement	sp += block_wid	1635:16:52309:52324	3230589	2	True				
ANR	3231112	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3231113	Identifier	sp		3230589	0					
ANR	3231114	Identifier	block_wid		3230589	1					
ANR	3231115	ElseStatement	else		3230589	0					
ANR	3231116	IfStatement	if ( con -> bpi == 16 )		3230589	0					
ANR	3231117	Condition	con -> bpi == 16	1638:17:52369:52382	3230589	0	True				
ANR	3231118	EqualityExpression	con -> bpi == 16		3230589	0		==			
ANR	3231119	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3231120	Identifier	con		3230589	0					
ANR	3231121	Identifier	bpi		3230589	1					
ANR	3231122	PrimaryExpression	16		3230589	1					
ANR	3231123	CompoundStatement		78:33:2627:2627	3230589	1					
ANR	3231124	IfStatement	if ( con -> sf == 1 )		3230589	0					
ANR	3231125	Condition	con -> sf == 1	1639:16:52403:52414	3230589	0	True				
ANR	3231126	EqualityExpression	con -> sf == 1		3230589	0		==			
ANR	3231127	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231128	Identifier	con		3230589	0					
ANR	3231129	Identifier	sf		3230589	1					
ANR	3231130	PrimaryExpression	1		3230589	1					
ANR	3231131	CompoundStatement		80:16:2688:2722	3230589	1					
ANR	3231132	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1640:16:52446:52480	3230589	0	True				
ANR	3231133	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		3230589	0					
ANR	3231134	IdentifierDeclType	uint16_t *		3230589	0					
ANR	3231135	Identifier	sp		3230589	1					
ANR	3231136	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		3230589	2		=			
ANR	3231137	Identifier	sp		3230589	0					
ANR	3231138	CastExpression	( uint16_t * ) con -> buf		3230589	1					
ANR	3231139	CastTarget	uint16_t *		3230589	0					
ANR	3231140	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231141	Identifier	con		3230589	0					
ANR	3231142	Identifier	buf		3230589	1					
ANR	3231143	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	1					
ANR	3231144	ForInit	idx = 0 ;	1641:21:52503:52510	3230589	0	True				
ANR	3231145	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3231146	Identifier	idx		3230589	0					
ANR	3231147	PrimaryExpression	0		3230589	1					
ANR	3231148	Condition	idx < trans	1641:30:52512:52522	3230589	1	True				
ANR	3231149	RelationalExpression	idx < trans		3230589	0		<			
ANR	3231150	Identifier	idx		3230589	0					
ANR	3231151	Identifier	trans		3230589	1					
ANR	3231152	AssignmentExpression	idx += 1	1641:43:52525:52532	3230589	2	True	+=			
ANR	3231153	Identifier	idx		3230589	0					
ANR	3231154	PrimaryExpression	1		3230589	1					
ANR	3231155	CompoundStatement		81:53:2777:2777	3230589	3					
ANR	3231156	ExpressionStatement	read_setup ( con )	1642:20:52557:52572	3230589	0	True				
ANR	3231157	CallExpression	read_setup ( con )		3230589	0					
ANR	3231158	Callee	read_setup		3230589	0					
ANR	3231159	Identifier	read_setup		3230589	0					
ANR	3231160	ArgumentList	con		3230589	1					
ANR	3231161	Argument	con		3230589	0					
ANR	3231162	Identifier	con		3230589	0					
ANR	3231163	ExpressionStatement	"read_uint16 ( con , sp , line_wid )"	1643:20:52594:52624	3230589	1	True				
ANR	3231164	CallExpression	"read_uint16 ( con , sp , line_wid )"		3230589	0					
ANR	3231165	Callee	read_uint16		3230589	0					
ANR	3231166	Identifier	read_uint16		3230589	0					
ANR	3231167	ArgumentList	con		3230589	1					
ANR	3231168	Argument	con		3230589	0					
ANR	3231169	Identifier	con		3230589	0					
ANR	3231170	Argument	sp		3230589	1					
ANR	3231171	Identifier	sp		3230589	0					
ANR	3231172	Argument	line_wid		3230589	2					
ANR	3231173	Identifier	line_wid		3230589	0					
ANR	3231174	ExpressionStatement	sp += block_wid	1644:20:52646:52661	3230589	2	True				
ANR	3231175	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3231176	Identifier	sp		3230589	0					
ANR	3231177	Identifier	block_wid		3230589	1					
ANR	3231178	ElseStatement	else		3230589	0					
ANR	3231179	IfStatement	if ( con -> sf == 2 )		3230589	0					
ANR	3231180	Condition	con -> sf == 2	1647:21:52718:52729	3230589	0	True				
ANR	3231181	EqualityExpression	con -> sf == 2		3230589	0		==			
ANR	3231182	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231183	Identifier	con		3230589	0					
ANR	3231184	Identifier	sf		3230589	1					
ANR	3231185	PrimaryExpression	2		3230589	1					
ANR	3231186	CompoundStatement		88:16:3010:3038	3230589	1					
ANR	3231187	IdentifierDeclStatement	short * sp = ( short * ) con -> buf ;	1648:16:52768:52796	3230589	0	True				
ANR	3231188	IdentifierDecl	* sp = ( short * ) con -> buf		3230589	0					
ANR	3231189	IdentifierDeclType	short *		3230589	0					
ANR	3231190	Identifier	sp		3230589	1					
ANR	3231191	AssignmentExpression	* sp = ( short * ) con -> buf		3230589	2		=			
ANR	3231192	Identifier	sp		3230589	0					
ANR	3231193	CastExpression	( short * ) con -> buf		3230589	1					
ANR	3231194	CastTarget	short *		3230589	0					
ANR	3231195	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231196	Identifier	con		3230589	0					
ANR	3231197	Identifier	buf		3230589	1					
ANR	3231198	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	1					
ANR	3231199	ForInit	idx = 0 ;	1649:21:52819:52826	3230589	0	True				
ANR	3231200	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3231201	Identifier	idx		3230589	0					
ANR	3231202	PrimaryExpression	0		3230589	1					
ANR	3231203	Condition	idx < trans	1649:30:52828:52838	3230589	1	True				
ANR	3231204	RelationalExpression	idx < trans		3230589	0		<			
ANR	3231205	Identifier	idx		3230589	0					
ANR	3231206	Identifier	trans		3230589	1					
ANR	3231207	AssignmentExpression	idx += 1	1649:43:52841:52848	3230589	2	True	+=			
ANR	3231208	Identifier	idx		3230589	0					
ANR	3231209	PrimaryExpression	1		3230589	1					
ANR	3231210	CompoundStatement		89:53:3093:3093	3230589	3					
ANR	3231211	ExpressionStatement	read_setup ( con )	1650:20:52873:52888	3230589	0	True				
ANR	3231212	CallExpression	read_setup ( con )		3230589	0					
ANR	3231213	Callee	read_setup		3230589	0					
ANR	3231214	Identifier	read_setup		3230589	0					
ANR	3231215	ArgumentList	con		3230589	1					
ANR	3231216	Argument	con		3230589	0					
ANR	3231217	Identifier	con		3230589	0					
ANR	3231218	ExpressionStatement	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"	1651:20:52910:52952	3230589	1	True				
ANR	3231219	CallExpression	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"		3230589	0					
ANR	3231220	Callee	read_uint16		3230589	0					
ANR	3231221	Identifier	read_uint16		3230589	0					
ANR	3231222	ArgumentList	con		3230589	1					
ANR	3231223	Argument	con		3230589	0					
ANR	3231224	Identifier	con		3230589	0					
ANR	3231225	Argument	( uint16_t * ) sp		3230589	1					
ANR	3231226	CastExpression	( uint16_t * ) sp		3230589	0					
ANR	3231227	CastTarget	uint16_t *		3230589	0					
ANR	3231228	Identifier	sp		3230589	1					
ANR	3231229	Argument	line_wid		3230589	2					
ANR	3231230	Identifier	line_wid		3230589	0					
ANR	3231231	ExpressionStatement	sp += block_wid	1652:20:52974:52989	3230589	2	True				
ANR	3231232	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3231233	Identifier	sp		3230589	0					
ANR	3231234	Identifier	block_wid		3230589	1					
ANR	3231235	ElseStatement	else		3230589	0					
ANR	3231236	IfStatement	if ( con -> sf == 3 )		3230589	0					
ANR	3231237	Condition	con -> sf == 3	1655:21:53046:53057	3230589	0	True				
ANR	3231238	EqualityExpression	con -> sf == 3		3230589	0		==			
ANR	3231239	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231240	Identifier	con		3230589	0					
ANR	3231241	Identifier	sf		3230589	1					
ANR	3231242	PrimaryExpression	3		3230589	1					
ANR	3231243	CompoundStatement		96:16:3337:3365	3230589	1					
ANR	3231244	IdentifierDeclStatement	short * sp = ( short * ) con -> buf ;	1656:16:53095:53123	3230589	0	True				
ANR	3231245	IdentifierDecl	* sp = ( short * ) con -> buf		3230589	0					
ANR	3231246	IdentifierDeclType	short *		3230589	0					
ANR	3231247	Identifier	sp		3230589	1					
ANR	3231248	AssignmentExpression	* sp = ( short * ) con -> buf		3230589	2		=			
ANR	3231249	Identifier	sp		3230589	0					
ANR	3231250	CastExpression	( short * ) con -> buf		3230589	1					
ANR	3231251	CastTarget	short *		3230589	0					
ANR	3231252	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231253	Identifier	con		3230589	0					
ANR	3231254	Identifier	buf		3230589	1					
ANR	3231255	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	1					
ANR	3231256	ForInit	idx = 0 ;	1657:21:53146:53153	3230589	0	True				
ANR	3231257	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3231258	Identifier	idx		3230589	0					
ANR	3231259	PrimaryExpression	0		3230589	1					
ANR	3231260	Condition	idx < trans	1657:30:53155:53165	3230589	1	True				
ANR	3231261	RelationalExpression	idx < trans		3230589	0		<			
ANR	3231262	Identifier	idx		3230589	0					
ANR	3231263	Identifier	trans		3230589	1					
ANR	3231264	AssignmentExpression	idx += 1	1657:43:53168:53175	3230589	2	True	+=			
ANR	3231265	Identifier	idx		3230589	0					
ANR	3231266	PrimaryExpression	1		3230589	1					
ANR	3231267	CompoundStatement		97:53:3420:3420	3230589	3					
ANR	3231268	ExpressionStatement	read_setup ( con )	1658:20:53200:53215	3230589	0	True				
ANR	3231269	CallExpression	read_setup ( con )		3230589	0					
ANR	3231270	Callee	read_setup		3230589	0					
ANR	3231271	Identifier	read_setup		3230589	0					
ANR	3231272	ArgumentList	con		3230589	1					
ANR	3231273	Argument	con		3230589	0					
ANR	3231274	Identifier	con		3230589	0					
ANR	3231275	ExpressionStatement	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"	1659:20:53237:53279	3230589	1	True				
ANR	3231276	CallExpression	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"		3230589	0					
ANR	3231277	Callee	read_uint16		3230589	0					
ANR	3231278	Identifier	read_uint16		3230589	0					
ANR	3231279	ArgumentList	con		3230589	1					
ANR	3231280	Argument	con		3230589	0					
ANR	3231281	Identifier	con		3230589	0					
ANR	3231282	Argument	( uint16_t * ) sp		3230589	1					
ANR	3231283	CastExpression	( uint16_t * ) sp		3230589	0					
ANR	3231284	CastTarget	uint16_t *		3230589	0					
ANR	3231285	Identifier	sp		3230589	1					
ANR	3231286	Argument	line_wid		3230589	2					
ANR	3231287	Identifier	line_wid		3230589	0					
ANR	3231288	ExpressionStatement	sp += block_wid	1660:20:53301:53316	3230589	2	True				
ANR	3231289	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3231290	Identifier	sp		3230589	0					
ANR	3231291	Identifier	block_wid		3230589	1					
ANR	3231292	ElseStatement	else		3230589	0					
ANR	3231293	IfStatement	if ( con -> bpi == 32 )		3230589	0					
ANR	3231294	Condition	con -> bpi == 32	1664:17:53379:53392	3230589	0	True				
ANR	3231295	EqualityExpression	con -> bpi == 32		3230589	0		==			
ANR	3231296	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3231297	Identifier	con		3230589	0					
ANR	3231298	Identifier	bpi		3230589	1					
ANR	3231299	PrimaryExpression	32		3230589	1					
ANR	3231300	CompoundStatement		104:33:3637:3637	3230589	1					
ANR	3231301	IfStatement	if ( con -> sf == 2 )		3230589	0					
ANR	3231302	Condition	con -> sf == 2	1665:16:53413:53424	3230589	0	True				
ANR	3231303	EqualityExpression	con -> sf == 2		3230589	0		==			
ANR	3231304	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231305	Identifier	con		3230589	0					
ANR	3231306	Identifier	sf		3230589	1					
ANR	3231307	PrimaryExpression	2		3230589	1					
ANR	3231308	CompoundStatement		106:16:3705:3739	3230589	1					
ANR	3231309	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf ;	1666:16:53463:53497	3230589	0	True				
ANR	3231310	IdentifierDecl	* sp = ( uint32_t * ) con -> buf		3230589	0					
ANR	3231311	IdentifierDeclType	uint32_t *		3230589	0					
ANR	3231312	Identifier	sp		3230589	1					
ANR	3231313	AssignmentExpression	* sp = ( uint32_t * ) con -> buf		3230589	2		=			
ANR	3231314	Identifier	sp		3230589	0					
ANR	3231315	CastExpression	( uint32_t * ) con -> buf		3230589	1					
ANR	3231316	CastTarget	uint32_t *		3230589	0					
ANR	3231317	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231318	Identifier	con		3230589	0					
ANR	3231319	Identifier	buf		3230589	1					
ANR	3231320	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	1					
ANR	3231321	ForInit	idx = 0 ;	1667:21:53520:53527	3230589	0	True				
ANR	3231322	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3231323	Identifier	idx		3230589	0					
ANR	3231324	PrimaryExpression	0		3230589	1					
ANR	3231325	Condition	idx < trans	1667:30:53529:53539	3230589	1	True				
ANR	3231326	RelationalExpression	idx < trans		3230589	0		<			
ANR	3231327	Identifier	idx		3230589	0					
ANR	3231328	Identifier	trans		3230589	1					
ANR	3231329	AssignmentExpression	idx += 1	1667:43:53542:53549	3230589	2	True	+=			
ANR	3231330	Identifier	idx		3230589	0					
ANR	3231331	PrimaryExpression	1		3230589	1					
ANR	3231332	CompoundStatement		107:53:3794:3794	3230589	3					
ANR	3231333	ExpressionStatement	read_setup ( con )	1668:20:53574:53589	3230589	0	True				
ANR	3231334	CallExpression	read_setup ( con )		3230589	0					
ANR	3231335	Callee	read_setup		3230589	0					
ANR	3231336	Identifier	read_setup		3230589	0					
ANR	3231337	ArgumentList	con		3230589	1					
ANR	3231338	Argument	con		3230589	0					
ANR	3231339	Identifier	con		3230589	0					
ANR	3231340	ExpressionStatement	"read_uint32 ( con , sp , line_wid )"	1669:20:53611:53641	3230589	1	True				
ANR	3231341	CallExpression	"read_uint32 ( con , sp , line_wid )"		3230589	0					
ANR	3231342	Callee	read_uint32		3230589	0					
ANR	3231343	Identifier	read_uint32		3230589	0					
ANR	3231344	ArgumentList	con		3230589	1					
ANR	3231345	Argument	con		3230589	0					
ANR	3231346	Identifier	con		3230589	0					
ANR	3231347	Argument	sp		3230589	1					
ANR	3231348	Identifier	sp		3230589	0					
ANR	3231349	Argument	line_wid		3230589	2					
ANR	3231350	Identifier	line_wid		3230589	0					
ANR	3231351	ExpressionStatement	sp += block_wid	1670:20:53663:53678	3230589	2	True				
ANR	3231352	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3231353	Identifier	sp		3230589	0					
ANR	3231354	Identifier	block_wid		3230589	1					
ANR	3231355	ElseStatement	else		3230589	0					
ANR	3231356	IfStatement	if ( con -> sf == 3 )		3230589	0					
ANR	3231357	Condition	con -> sf == 3	1673:21:53735:53746	3230589	0	True				
ANR	3231358	EqualityExpression	con -> sf == 3		3230589	0		==			
ANR	3231359	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231360	Identifier	con		3230589	0					
ANR	3231361	Identifier	sf		3230589	1					
ANR	3231362	PrimaryExpression	3		3230589	1					
ANR	3231363	CompoundStatement		114:16:4021:4055	3230589	1					
ANR	3231364	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf ;	1674:16:53779:53813	3230589	0	True				
ANR	3231365	IdentifierDecl	* sp = ( uint32_t * ) con -> buf		3230589	0					
ANR	3231366	IdentifierDeclType	uint32_t *		3230589	0					
ANR	3231367	Identifier	sp		3230589	1					
ANR	3231368	AssignmentExpression	* sp = ( uint32_t * ) con -> buf		3230589	2		=			
ANR	3231369	Identifier	sp		3230589	0					
ANR	3231370	CastExpression	( uint32_t * ) con -> buf		3230589	1					
ANR	3231371	CastTarget	uint32_t *		3230589	0					
ANR	3231372	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231373	Identifier	con		3230589	0					
ANR	3231374	Identifier	buf		3230589	1					
ANR	3231375	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3230589	1					
ANR	3231376	ForInit	idx = 0 ;	1675:21:53836:53843	3230589	0	True				
ANR	3231377	AssignmentExpression	idx = 0		3230589	0		=			
ANR	3231378	Identifier	idx		3230589	0					
ANR	3231379	PrimaryExpression	0		3230589	1					
ANR	3231380	Condition	idx < trans	1675:30:53845:53855	3230589	1	True				
ANR	3231381	RelationalExpression	idx < trans		3230589	0		<			
ANR	3231382	Identifier	idx		3230589	0					
ANR	3231383	Identifier	trans		3230589	1					
ANR	3231384	AssignmentExpression	idx += 1	1675:43:53858:53865	3230589	2	True	+=			
ANR	3231385	Identifier	idx		3230589	0					
ANR	3231386	PrimaryExpression	1		3230589	1					
ANR	3231387	CompoundStatement		115:53:4110:4110	3230589	3					
ANR	3231388	ExpressionStatement	read_setup ( con )	1676:20:53890:53905	3230589	0	True				
ANR	3231389	CallExpression	read_setup ( con )		3230589	0					
ANR	3231390	Callee	read_setup		3230589	0					
ANR	3231391	Identifier	read_setup		3230589	0					
ANR	3231392	ArgumentList	con		3230589	1					
ANR	3231393	Argument	con		3230589	0					
ANR	3231394	Identifier	con		3230589	0					
ANR	3231395	ExpressionStatement	"read_uint32 ( con , sp , line_wid )"	1677:20:53927:53957	3230589	1	True				
ANR	3231396	CallExpression	"read_uint32 ( con , sp , line_wid )"		3230589	0					
ANR	3231397	Callee	read_uint32		3230589	0					
ANR	3231398	Identifier	read_uint32		3230589	0					
ANR	3231399	ArgumentList	con		3230589	1					
ANR	3231400	Argument	con		3230589	0					
ANR	3231401	Identifier	con		3230589	0					
ANR	3231402	Argument	sp		3230589	1					
ANR	3231403	Identifier	sp		3230589	0					
ANR	3231404	Argument	line_wid		3230589	2					
ANR	3231405	Identifier	line_wid		3230589	0					
ANR	3231406	ExpressionStatement	sp += block_wid	1678:20:53979:53994	3230589	2	True				
ANR	3231407	AssignmentExpression	sp += block_wid		3230589	0		+=			
ANR	3231408	Identifier	sp		3230589	0					
ANR	3231409	Identifier	block_wid		3230589	1					
ANR	3231410	ExpressionStatement	con -> my = my	1682:8:54048:54060	3230589	4	True				
ANR	3231411	AssignmentExpression	con -> my = my		3230589	0		=			
ANR	3231412	PtrMemberAccess	con -> my		3230589	0					
ANR	3231413	Identifier	con		3230589	0					
ANR	3231414	Identifier	my		3230589	1					
ANR	3231415	Identifier	my		3230589	1					
ANR	3231416	IdentifierDeclStatement	"int xdx , ydx , sxdx ;"	1685:4:54073:54091	3230589	6	True				
ANR	3231417	IdentifierDecl	xdx		3230589	0					
ANR	3231418	IdentifierDeclType	int		3230589	0					
ANR	3231419	Identifier	xdx		3230589	1					
ANR	3231420	IdentifierDecl	ydx		3230589	1					
ANR	3231421	IdentifierDeclType	int		3230589	0					
ANR	3231422	Identifier	ydx		3230589	1					
ANR	3231423	IdentifierDecl	sxdx		3230589	2					
ANR	3231424	IdentifierDeclType	int		3230589	0					
ANR	3231425	Identifier	sxdx		3230589	1					
ANR	3231426	IfStatement	if ( con -> bpi == 1 )		3230589	7					
ANR	3231427	Condition	con -> bpi == 1	1686:8:54101:54113	3230589	0	True				
ANR	3231428	EqualityExpression	con -> bpi == 1		3230589	0		==			
ANR	3231429	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3231430	Identifier	con		3230589	0					
ANR	3231431	Identifier	bpi		3230589	1					
ANR	3231432	PrimaryExpression	1		3230589	1					
ANR	3231433	CompoundStatement		126:23:4358:4358	3230589	1					
ANR	3231434	ExpressionStatement	block_wid = ( ( ( con -> wid + 15 ) & ~15 ) >> 3 )	1687:8:54126:54164	3230589	0	True				
ANR	3231435	AssignmentExpression	block_wid = ( ( ( con -> wid + 15 ) & ~15 ) >> 3 )		3230589	0		=			
ANR	3231436	Identifier	block_wid		3230589	0					
ANR	3231437	ShiftExpression	( ( con -> wid + 15 ) & ~15 ) >> 3		3230589	1		>>			
ANR	3231438	BitAndExpression	( con -> wid + 15 ) & ~15		3230589	0		&			
ANR	3231439	AdditiveExpression	con -> wid + 15		3230589	0		+			
ANR	3231440	PtrMemberAccess	con -> wid		3230589	0					
ANR	3231441	Identifier	con		3230589	0					
ANR	3231442	Identifier	wid		3230589	1					
ANR	3231443	PrimaryExpression	15		3230589	1					
ANR	3231444	Identifier	~15		3230589	1					
ANR	3231445	PrimaryExpression	3		3230589	1					
ANR	3231446	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	1					
ANR	3231447	ForInit	ydx = 0 ;	1688:13:54179:54187	3230589	0	True				
ANR	3231448	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3231449	Identifier	ydx		3230589	0					
ANR	3231450	PrimaryExpression	0		3230589	1					
ANR	3231451	Condition	ydx < 16	1688:23:54189:54196	3230589	1	True				
ANR	3231452	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3231453	Identifier	ydx		3230589	0					
ANR	3231454	PrimaryExpression	16		3230589	1					
ANR	3231455	AssignmentExpression	ydx += 1	1688:34:54200:54207	3230589	2	True	+=			
ANR	3231456	Identifier	ydx		3230589	0					
ANR	3231457	PrimaryExpression	1		3230589	1					
ANR	3231458	CompoundStatement		128:44:4452:4452	3230589	3					
ANR	3231459	IfStatement	if ( con -> sf == 1 )		3230589	0					
ANR	3231460	Condition	con -> sf == 1	1689:16:54228:54239	3230589	0	True				
ANR	3231461	EqualityExpression	con -> sf == 1		3230589	0		==			
ANR	3231462	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231463	Identifier	con		3230589	0					
ANR	3231464	Identifier	sf		3230589	1					
ANR	3231465	PrimaryExpression	1		3230589	1					
ANR	3231466	CompoundStatement		131:16:4597:4631	3230589	1					
ANR	3231467	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 ) ;	1690:16:54261:54337	3230589	0	True				
ANR	3231468	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		3230589	0					
ANR	3231469	IdentifierDeclType	uint8_t *		3230589	0					
ANR	3231470	Identifier	sp		3230589	1					
ANR	3231471	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		3230589	2		=			
ANR	3231472	Identifier	sp		3230589	0					
ANR	3231473	AdditiveExpression	( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		3230589	1		+			
ANR	3231474	CastExpression	( uint8_t * ) con -> buf		3230589	0					
ANR	3231475	CastTarget	uint8_t *		3230589	0					
ANR	3231476	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231477	Identifier	con		3230589	0					
ANR	3231478	Identifier	buf		3230589	1					
ANR	3231479	AdditiveExpression	ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		3230589	1		+			
ANR	3231480	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3231481	Identifier	ydx		3230589	0					
ANR	3231482	Identifier	block_wid		3230589	1					
ANR	3231483	ShiftExpression	( con -> ncomp * 16 * mx ) >> 3		3230589	1		>>			
ANR	3231484	MultiplicativeExpression	con -> ncomp * 16 * mx		3230589	0		*			
ANR	3231485	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3231486	Identifier	con		3230589	0					
ANR	3231487	Identifier	ncomp		3230589	1					
ANR	3231488	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3231489	PrimaryExpression	16		3230589	0					
ANR	3231490	Identifier	mx		3230589	1					
ANR	3231491	PrimaryExpression	3		3230589	1					
ANR	3231492	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1691:16:54355:54389	3230589	1	True				
ANR	3231493	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		3230589	0					
ANR	3231494	IdentifierDeclType	int *		3230589	0					
ANR	3231495	Identifier	dp		3230589	1					
ANR	3231496	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		3230589	2		=			
ANR	3231497	Identifier	dp		3230589	0					
ANR	3231498	AdditiveExpression	data + con -> ncomp * 16 * ydx		3230589	1		+			
ANR	3231499	Identifier	data		3230589	0					
ANR	3231500	MultiplicativeExpression	con -> ncomp * 16 * ydx		3230589	1		*			
ANR	3231501	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3231502	Identifier	con		3230589	0					
ANR	3231503	Identifier	ncomp		3230589	1					
ANR	3231504	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3231505	PrimaryExpression	16		3230589	0					
ANR	3231506	Identifier	ydx		3230589	1					
ANR	3231507	IfStatement	if ( ! con -> photometric )		3230589	2					
ANR	3231508	Condition	! con -> photometric	1692:20:54411:54427	3230589	0	True				
ANR	3231509	UnaryOperationExpression	! con -> photometric		3230589	0					
ANR	3231510	UnaryOperator	!		3230589	0					
ANR	3231511	PtrMemberAccess	con -> photometric		3230589	1					
ANR	3231512	Identifier	con		3230589	0					
ANR	3231513	Identifier	photometric		3230589	1					
ANR	3231514	CompoundStatement		132:39:4672:4672	3230589	1					
ANR	3231515	ForStatement	for ( xdx = 0 ; xdx < con -> ncomp * 16 ; xdx ++ )		3230589	0					
ANR	3231516	ForInit	xdx = 0 ;	1693:25:54457:54465	3230589	0	True				
ANR	3231517	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3231518	Identifier	xdx		3230589	0					
ANR	3231519	PrimaryExpression	0		3230589	1					
ANR	3231520	Condition	xdx < con -> ncomp * 16	1693:35:54467:54485	3230589	1	True				
ANR	3231521	RelationalExpression	xdx < con -> ncomp * 16		3230589	0		<			
ANR	3231522	Identifier	xdx		3230589	0					
ANR	3231523	MultiplicativeExpression	con -> ncomp * 16		3230589	1		*			
ANR	3231524	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3231525	Identifier	con		3230589	0					
ANR	3231526	Identifier	ncomp		3230589	1					
ANR	3231527	PrimaryExpression	16		3230589	1					
ANR	3231528	PostIncDecOperationExpression	xdx ++	1693:57:54489:54493	3230589	2	True				
ANR	3231529	Identifier	xdx		3230589	0					
ANR	3231530	IncDec	++		3230589	1					
ANR	3231531	ExpressionStatement	dp [ xdx ] = ( ( sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) ) ) & 1 )	1694:24:54520:54569	3230589	3	True				
ANR	3231532	AssignmentExpression	dp [ xdx ] = ( ( sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) ) ) & 1 )		3230589	0		=			
ANR	3231533	ArrayIndexing	dp [ xdx ]		3230589	0					
ANR	3231534	Identifier	dp		3230589	0					
ANR	3231535	Identifier	xdx		3230589	1					
ANR	3231536	BitAndExpression	( sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) ) ) & 1		3230589	1		&			
ANR	3231537	ShiftExpression	sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) )		3230589	0		>>			
ANR	3231538	ArrayIndexing	sp [ xdx >> 3 ]		3230589	0					
ANR	3231539	Identifier	sp		3230589	0					
ANR	3231540	ShiftExpression	xdx >> 3		3230589	1		>>			
ANR	3231541	Identifier	xdx		3230589	0					
ANR	3231542	PrimaryExpression	3		3230589	1					
ANR	3231543	AdditiveExpression	7 - ( xdx & 7 )		3230589	1		-			
ANR	3231544	PrimaryExpression	7		3230589	0					
ANR	3231545	BitAndExpression	xdx & 7		3230589	1		&			
ANR	3231546	Identifier	xdx		3230589	0					
ANR	3231547	PrimaryExpression	7		3230589	1					
ANR	3231548	PrimaryExpression	1		3230589	1					
ANR	3231549	ElseStatement	else		3230589	0					
ANR	3231550	CompoundStatement		136:21:4853:4853	3230589	0					
ANR	3231551	ForStatement	for ( xdx = 0 ; xdx < con -> ncomp * 16 ; xdx ++ )		3230589	0					
ANR	3231552	ForInit	xdx = 0 ;	1697:25:54638:54646	3230589	0	True				
ANR	3231553	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3231554	Identifier	xdx		3230589	0					
ANR	3231555	PrimaryExpression	0		3230589	1					
ANR	3231556	Condition	xdx < con -> ncomp * 16	1697:35:54648:54666	3230589	1	True				
ANR	3231557	RelationalExpression	xdx < con -> ncomp * 16		3230589	0		<			
ANR	3231558	Identifier	xdx		3230589	0					
ANR	3231559	MultiplicativeExpression	con -> ncomp * 16		3230589	1		*			
ANR	3231560	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3231561	Identifier	con		3230589	0					
ANR	3231562	Identifier	ncomp		3230589	1					
ANR	3231563	PrimaryExpression	16		3230589	1					
ANR	3231564	PostIncDecOperationExpression	xdx ++	1697:57:54670:54674	3230589	2	True				
ANR	3231565	Identifier	xdx		3230589	0					
ANR	3231566	IncDec	++		3230589	1					
ANR	3231567	ExpressionStatement	dp [ xdx ] = ( ( ( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) ) ) & 1 )	1698:24:54701:54753	3230589	3	True				
ANR	3231568	AssignmentExpression	dp [ xdx ] = ( ( ( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) ) ) & 1 )		3230589	0		=			
ANR	3231569	ArrayIndexing	dp [ xdx ]		3230589	0					
ANR	3231570	Identifier	dp		3230589	0					
ANR	3231571	Identifier	xdx		3230589	1					
ANR	3231572	BitAndExpression	( ( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) ) ) & 1		3230589	1		&			
ANR	3231573	ShiftExpression	( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) )		3230589	0		>>			
ANR	3231574	ArrayIndexing	~sp [ xdx >> 3 ]		3230589	0					
ANR	3231575	Identifier	~sp		3230589	0					
ANR	3231576	ShiftExpression	xdx >> 3		3230589	1		>>			
ANR	3231577	Identifier	xdx		3230589	0					
ANR	3231578	PrimaryExpression	3		3230589	1					
ANR	3231579	AdditiveExpression	7 - ( xdx & 7 )		3230589	1		-			
ANR	3231580	PrimaryExpression	7		3230589	0					
ANR	3231581	BitAndExpression	xdx & 7		3230589	1		&			
ANR	3231582	Identifier	xdx		3230589	0					
ANR	3231583	PrimaryExpression	7		3230589	1					
ANR	3231584	PrimaryExpression	1		3230589	1					
ANR	3231585	ElseStatement	else		3230589	0					
ANR	3231586	IfStatement	if ( con -> bpi == 5 )		3230589	0					
ANR	3231587	Condition	con -> bpi == 5	1703:13:54816:54828	3230589	0	True				
ANR	3231588	EqualityExpression	con -> bpi == 5		3230589	0		==			
ANR	3231589	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3231590	Identifier	con		3230589	0					
ANR	3231591	Identifier	bpi		3230589	1					
ANR	3231592	PrimaryExpression	5		3230589	1					
ANR	3231593	CompoundStatement		143:28:5073:5073	3230589	1					
ANR	3231594	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1704:8:54841:54872	3230589	0	True				
ANR	3231595	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		3230589	0		=			
ANR	3231596	Identifier	block_wid		3230589	0					
ANR	3231597	BitAndExpression	( con -> wid + 15 ) & ~15		3230589	1		&			
ANR	3231598	AdditiveExpression	con -> wid + 15		3230589	0		+			
ANR	3231599	PtrMemberAccess	con -> wid		3230589	0					
ANR	3231600	Identifier	con		3230589	0					
ANR	3231601	Identifier	wid		3230589	1					
ANR	3231602	PrimaryExpression	15		3230589	1					
ANR	3231603	Identifier	~15		3230589	1					
ANR	3231604	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	1					
ANR	3231605	ForInit	ydx = 0 ;	1705:13:54887:54895	3230589	0	True				
ANR	3231606	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3231607	Identifier	ydx		3230589	0					
ANR	3231608	PrimaryExpression	0		3230589	1					
ANR	3231609	Condition	ydx < 16	1705:23:54897:54904	3230589	1	True				
ANR	3231610	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3231611	Identifier	ydx		3230589	0					
ANR	3231612	PrimaryExpression	16		3230589	1					
ANR	3231613	AssignmentExpression	ydx += 1	1705:34:54908:54915	3230589	2	True	+=			
ANR	3231614	Identifier	ydx		3230589	0					
ANR	3231615	PrimaryExpression	1		3230589	1					
ANR	3231616	CompoundStatement		147:12:5260:5298	3230589	3					
ANR	3231617	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx ;	1706:12:54946:55004	3230589	0	True				
ANR	3231618	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	0					
ANR	3231619	IdentifierDeclType	uint16_t *		3230589	0					
ANR	3231620	Identifier	sp		3230589	1					
ANR	3231621	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	2		=			
ANR	3231622	Identifier	sp		3230589	0					
ANR	3231623	AdditiveExpression	( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	1		+			
ANR	3231624	CastExpression	( uint16_t * ) con -> buf		3230589	0					
ANR	3231625	CastTarget	uint16_t *		3230589	0					
ANR	3231626	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231627	Identifier	con		3230589	0					
ANR	3231628	Identifier	buf		3230589	1					
ANR	3231629	AdditiveExpression	ydx * block_wid + 16 * mx		3230589	1		+			
ANR	3231630	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3231631	Identifier	ydx		3230589	0					
ANR	3231632	Identifier	block_wid		3230589	1					
ANR	3231633	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3231634	PrimaryExpression	16		3230589	0					
ANR	3231635	Identifier	mx		3230589	1					
ANR	3231636	IdentifierDeclStatement	int * dp = data + uExternalNcomp * 16 * ydx ;	1707:12:55018:55056	3230589	1	True				
ANR	3231637	IdentifierDecl	* dp = data + uExternalNcomp * 16 * ydx		3230589	0					
ANR	3231638	IdentifierDeclType	int *		3230589	0					
ANR	3231639	Identifier	dp		3230589	1					
ANR	3231640	AssignmentExpression	* dp = data + uExternalNcomp * 16 * ydx		3230589	2		=			
ANR	3231641	Identifier	dp		3230589	0					
ANR	3231642	AdditiveExpression	data + uExternalNcomp * 16 * ydx		3230589	1		+			
ANR	3231643	Identifier	data		3230589	0					
ANR	3231644	MultiplicativeExpression	uExternalNcomp * 16 * ydx		3230589	1		*			
ANR	3231645	Identifier	uExternalNcomp		3230589	0					
ANR	3231646	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3231647	PrimaryExpression	16		3230589	0					
ANR	3231648	Identifier	ydx		3230589	1					
ANR	3231649	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < uExternalNcomp * 16 ; xdx += uExternalNcomp , sxdx ++ )"		3230589	2					
ANR	3231650	ForInit	"xdx = 0 , sxdx = 0 ;"	1708:17:55075:55092	3230589	0	True				
ANR	3231651	Expression	"xdx = 0 , sxdx = 0"		3230589	0					
ANR	3231652	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3231653	Identifier	xdx		3230589	0					
ANR	3231654	PrimaryExpression	0		3230589	1					
ANR	3231655	AssignmentExpression	sxdx = 0		3230589	1		=			
ANR	3231656	Identifier	sxdx		3230589	0					
ANR	3231657	PrimaryExpression	0		3230589	1					
ANR	3231658	Condition	xdx < uExternalNcomp * 16	1708:36:55094:55116	3230589	1	True				
ANR	3231659	RelationalExpression	xdx < uExternalNcomp * 16		3230589	0		<			
ANR	3231660	Identifier	xdx		3230589	0					
ANR	3231661	MultiplicativeExpression	uExternalNcomp * 16		3230589	1		*			
ANR	3231662	Identifier	uExternalNcomp		3230589	0					
ANR	3231663	PrimaryExpression	16		3230589	1					
ANR	3231664	Expression	"xdx += uExternalNcomp , sxdx ++"	1708:62:55120:55148	3230589	2	True				
ANR	3231665	AssignmentExpression	xdx += uExternalNcomp		3230589	0		+=			
ANR	3231666	Identifier	xdx		3230589	0					
ANR	3231667	Identifier	uExternalNcomp		3230589	1					
ANR	3231668	PostIncDecOperationExpression	sxdx ++		3230589	1					
ANR	3231669	Identifier	sxdx		3230589	0					
ANR	3231670	IncDec	++		3230589	1					
ANR	3231671	CompoundStatement		148:93:5393:5393	3230589	3					
ANR	3231672	ExpressionStatement	dp [ xdx ] = ( sp [ sxdx ] & 0x1f )	1709:16:55169:55196	3230589	0	True				
ANR	3231673	AssignmentExpression	dp [ xdx ] = ( sp [ sxdx ] & 0x1f )		3230589	0		=			
ANR	3231674	ArrayIndexing	dp [ xdx ]		3230589	0					
ANR	3231675	Identifier	dp		3230589	0					
ANR	3231676	Identifier	xdx		3230589	1					
ANR	3231677	BitAndExpression	sp [ sxdx ] & 0x1f		3230589	1		&			
ANR	3231678	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3231679	Identifier	sp		3230589	0					
ANR	3231680	Identifier	sxdx		3230589	1					
ANR	3231681	PrimaryExpression	0x1f		3230589	1					
ANR	3231682	ExpressionStatement	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x1f )	1710:16:55214:55252	3230589	1	True				
ANR	3231683	AssignmentExpression	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x1f )		3230589	0		=			
ANR	3231684	ArrayIndexing	dp [ xdx + 1 ]		3230589	0					
ANR	3231685	Identifier	dp		3230589	0					
ANR	3231686	AdditiveExpression	xdx + 1		3230589	1		+			
ANR	3231687	Identifier	xdx		3230589	0					
ANR	3231688	PrimaryExpression	1		3230589	1					
ANR	3231689	BitAndExpression	( sp [ sxdx ] >> 5 ) & 0x1f		3230589	1		&			
ANR	3231690	ShiftExpression	sp [ sxdx ] >> 5		3230589	0		>>			
ANR	3231691	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3231692	Identifier	sp		3230589	0					
ANR	3231693	Identifier	sxdx		3230589	1					
ANR	3231694	PrimaryExpression	5		3230589	1					
ANR	3231695	PrimaryExpression	0x1f		3230589	1					
ANR	3231696	ExpressionStatement	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 10 ) & 0x1f )	1711:16:55270:55309	3230589	2	True				
ANR	3231697	AssignmentExpression	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 10 ) & 0x1f )		3230589	0		=			
ANR	3231698	ArrayIndexing	dp [ xdx + 2 ]		3230589	0					
ANR	3231699	Identifier	dp		3230589	0					
ANR	3231700	AdditiveExpression	xdx + 2		3230589	1		+			
ANR	3231701	Identifier	xdx		3230589	0					
ANR	3231702	PrimaryExpression	2		3230589	1					
ANR	3231703	BitAndExpression	( sp [ sxdx ] >> 10 ) & 0x1f		3230589	1		&			
ANR	3231704	ShiftExpression	sp [ sxdx ] >> 10		3230589	0		>>			
ANR	3231705	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3231706	Identifier	sp		3230589	0					
ANR	3231707	Identifier	sxdx		3230589	1					
ANR	3231708	PrimaryExpression	10		3230589	1					
ANR	3231709	PrimaryExpression	0x1f		3230589	1					
ANR	3231710	ElseStatement	else		3230589	0					
ANR	3231711	IfStatement	if ( con -> bpi == 6 )		3230589	0					
ANR	3231712	Condition	con -> bpi == 6	1715:13:55354:55366	3230589	0	True				
ANR	3231713	EqualityExpression	con -> bpi == 6		3230589	0		==			
ANR	3231714	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3231715	Identifier	con		3230589	0					
ANR	3231716	Identifier	bpi		3230589	1					
ANR	3231717	PrimaryExpression	6		3230589	1					
ANR	3231718	CompoundStatement		155:28:5611:5611	3230589	1					
ANR	3231719	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1716:8:55379:55410	3230589	0	True				
ANR	3231720	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		3230589	0		=			
ANR	3231721	Identifier	block_wid		3230589	0					
ANR	3231722	BitAndExpression	( con -> wid + 15 ) & ~15		3230589	1		&			
ANR	3231723	AdditiveExpression	con -> wid + 15		3230589	0		+			
ANR	3231724	PtrMemberAccess	con -> wid		3230589	0					
ANR	3231725	Identifier	con		3230589	0					
ANR	3231726	Identifier	wid		3230589	1					
ANR	3231727	PrimaryExpression	15		3230589	1					
ANR	3231728	Identifier	~15		3230589	1					
ANR	3231729	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	1					
ANR	3231730	ForInit	ydx = 0 ;	1717:13:55425:55433	3230589	0	True				
ANR	3231731	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3231732	Identifier	ydx		3230589	0					
ANR	3231733	PrimaryExpression	0		3230589	1					
ANR	3231734	Condition	ydx < 16	1717:23:55435:55442	3230589	1	True				
ANR	3231735	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3231736	Identifier	ydx		3230589	0					
ANR	3231737	PrimaryExpression	16		3230589	1					
ANR	3231738	AssignmentExpression	ydx += 1	1717:34:55446:55453	3230589	2	True	+=			
ANR	3231739	Identifier	ydx		3230589	0					
ANR	3231740	PrimaryExpression	1		3230589	1					
ANR	3231741	CompoundStatement		159:12:5796:5834	3230589	3					
ANR	3231742	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx ;	1718:12:55482:55540	3230589	0	True				
ANR	3231743	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	0					
ANR	3231744	IdentifierDeclType	uint16_t *		3230589	0					
ANR	3231745	Identifier	sp		3230589	1					
ANR	3231746	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	2		=			
ANR	3231747	Identifier	sp		3230589	0					
ANR	3231748	AdditiveExpression	( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	1		+			
ANR	3231749	CastExpression	( uint16_t * ) con -> buf		3230589	0					
ANR	3231750	CastTarget	uint16_t *		3230589	0					
ANR	3231751	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231752	Identifier	con		3230589	0					
ANR	3231753	Identifier	buf		3230589	1					
ANR	3231754	AdditiveExpression	ydx * block_wid + 16 * mx		3230589	1		+			
ANR	3231755	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3231756	Identifier	ydx		3230589	0					
ANR	3231757	Identifier	block_wid		3230589	1					
ANR	3231758	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3231759	PrimaryExpression	16		3230589	0					
ANR	3231760	Identifier	mx		3230589	1					
ANR	3231761	IdentifierDeclStatement	int * dp = data + uExternalNcomp * 16 * ydx ;	1719:12:55554:55592	3230589	1	True				
ANR	3231762	IdentifierDecl	* dp = data + uExternalNcomp * 16 * ydx		3230589	0					
ANR	3231763	IdentifierDeclType	int *		3230589	0					
ANR	3231764	Identifier	dp		3230589	1					
ANR	3231765	AssignmentExpression	* dp = data + uExternalNcomp * 16 * ydx		3230589	2		=			
ANR	3231766	Identifier	dp		3230589	0					
ANR	3231767	AdditiveExpression	data + uExternalNcomp * 16 * ydx		3230589	1		+			
ANR	3231768	Identifier	data		3230589	0					
ANR	3231769	MultiplicativeExpression	uExternalNcomp * 16 * ydx		3230589	1		*			
ANR	3231770	Identifier	uExternalNcomp		3230589	0					
ANR	3231771	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3231772	PrimaryExpression	16		3230589	0					
ANR	3231773	Identifier	ydx		3230589	1					
ANR	3231774	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < uExternalNcomp * 16 ; xdx += uExternalNcomp , sxdx ++ )"		3230589	2					
ANR	3231775	ForInit	"xdx = 0 , sxdx = 0 ;"	1720:17:55611:55628	3230589	0	True				
ANR	3231776	Expression	"xdx = 0 , sxdx = 0"		3230589	0					
ANR	3231777	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3231778	Identifier	xdx		3230589	0					
ANR	3231779	PrimaryExpression	0		3230589	1					
ANR	3231780	AssignmentExpression	sxdx = 0		3230589	1		=			
ANR	3231781	Identifier	sxdx		3230589	0					
ANR	3231782	PrimaryExpression	0		3230589	1					
ANR	3231783	Condition	xdx < uExternalNcomp * 16	1720:36:55630:55652	3230589	1	True				
ANR	3231784	RelationalExpression	xdx < uExternalNcomp * 16		3230589	0		<			
ANR	3231785	Identifier	xdx		3230589	0					
ANR	3231786	MultiplicativeExpression	uExternalNcomp * 16		3230589	1		*			
ANR	3231787	Identifier	uExternalNcomp		3230589	0					
ANR	3231788	PrimaryExpression	16		3230589	1					
ANR	3231789	Expression	"xdx += uExternalNcomp , sxdx ++"	1720:62:55656:55684	3230589	2	True				
ANR	3231790	AssignmentExpression	xdx += uExternalNcomp		3230589	0		+=			
ANR	3231791	Identifier	xdx		3230589	0					
ANR	3231792	Identifier	uExternalNcomp		3230589	1					
ANR	3231793	PostIncDecOperationExpression	sxdx ++		3230589	1					
ANR	3231794	Identifier	sxdx		3230589	0					
ANR	3231795	IncDec	++		3230589	1					
ANR	3231796	CompoundStatement		160:93:5929:5929	3230589	3					
ANR	3231797	ExpressionStatement	dp [ xdx ] = ( ( sp [ sxdx ] & 0x1f ) << 1 )	1721:16:55705:55739	3230589	0	True				
ANR	3231798	AssignmentExpression	dp [ xdx ] = ( ( sp [ sxdx ] & 0x1f ) << 1 )		3230589	0		=			
ANR	3231799	ArrayIndexing	dp [ xdx ]		3230589	0					
ANR	3231800	Identifier	dp		3230589	0					
ANR	3231801	Identifier	xdx		3230589	1					
ANR	3231802	ShiftExpression	( sp [ sxdx ] & 0x1f ) << 1		3230589	1		<<			
ANR	3231803	BitAndExpression	sp [ sxdx ] & 0x1f		3230589	0		&			
ANR	3231804	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3231805	Identifier	sp		3230589	0					
ANR	3231806	Identifier	sxdx		3230589	1					
ANR	3231807	PrimaryExpression	0x1f		3230589	1					
ANR	3231808	PrimaryExpression	1		3230589	1					
ANR	3231809	ExpressionStatement	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x3f )	1722:16:55757:55795	3230589	1	True				
ANR	3231810	AssignmentExpression	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x3f )		3230589	0		=			
ANR	3231811	ArrayIndexing	dp [ xdx + 1 ]		3230589	0					
ANR	3231812	Identifier	dp		3230589	0					
ANR	3231813	AdditiveExpression	xdx + 1		3230589	1		+			
ANR	3231814	Identifier	xdx		3230589	0					
ANR	3231815	PrimaryExpression	1		3230589	1					
ANR	3231816	BitAndExpression	( sp [ sxdx ] >> 5 ) & 0x3f		3230589	1		&			
ANR	3231817	ShiftExpression	sp [ sxdx ] >> 5		3230589	0		>>			
ANR	3231818	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3231819	Identifier	sp		3230589	0					
ANR	3231820	Identifier	sxdx		3230589	1					
ANR	3231821	PrimaryExpression	5		3230589	1					
ANR	3231822	PrimaryExpression	0x3f		3230589	1					
ANR	3231823	ExpressionStatement	dp [ xdx + 2 ] = ( ( ( sp [ sxdx ] >> 11 ) & 0x1f ) << 1 )	1723:16:55813:55859	3230589	2	True				
ANR	3231824	AssignmentExpression	dp [ xdx + 2 ] = ( ( ( sp [ sxdx ] >> 11 ) & 0x1f ) << 1 )		3230589	0		=			
ANR	3231825	ArrayIndexing	dp [ xdx + 2 ]		3230589	0					
ANR	3231826	Identifier	dp		3230589	0					
ANR	3231827	AdditiveExpression	xdx + 2		3230589	1		+			
ANR	3231828	Identifier	xdx		3230589	0					
ANR	3231829	PrimaryExpression	2		3230589	1					
ANR	3231830	ShiftExpression	( ( sp [ sxdx ] >> 11 ) & 0x1f ) << 1		3230589	1		<<			
ANR	3231831	BitAndExpression	( sp [ sxdx ] >> 11 ) & 0x1f		3230589	0		&			
ANR	3231832	ShiftExpression	sp [ sxdx ] >> 11		3230589	0		>>			
ANR	3231833	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3231834	Identifier	sp		3230589	0					
ANR	3231835	Identifier	sxdx		3230589	1					
ANR	3231836	PrimaryExpression	11		3230589	1					
ANR	3231837	PrimaryExpression	0x1f		3230589	1					
ANR	3231838	PrimaryExpression	1		3230589	1					
ANR	3231839	ElseStatement	else		3230589	0					
ANR	3231840	IfStatement	if ( con -> bpi == 8 )		3230589	0					
ANR	3231841	Condition	con -> bpi == 8	1727:13:55904:55916	3230589	0	True				
ANR	3231842	EqualityExpression	con -> bpi == 8		3230589	0		==			
ANR	3231843	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3231844	Identifier	con		3230589	0					
ANR	3231845	Identifier	bpi		3230589	1					
ANR	3231846	PrimaryExpression	8		3230589	1					
ANR	3231847	CompoundStatement		167:28:6161:6161	3230589	1					
ANR	3231848	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	0					
ANR	3231849	ForInit	ydx = 0 ;	1728:13:55934:55942	3230589	0	True				
ANR	3231850	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3231851	Identifier	ydx		3230589	0					
ANR	3231852	PrimaryExpression	0		3230589	1					
ANR	3231853	Condition	ydx < 16	1728:23:55944:55951	3230589	1	True				
ANR	3231854	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3231855	Identifier	ydx		3230589	0					
ANR	3231856	PrimaryExpression	16		3230589	1					
ANR	3231857	AssignmentExpression	ydx += 1	1728:34:55955:55962	3230589	2	True	+=			
ANR	3231858	Identifier	ydx		3230589	0					
ANR	3231859	PrimaryExpression	1		3230589	1					
ANR	3231860	CompoundStatement		168:44:6207:6207	3230589	3					
ANR	3231861	IfStatement	if ( con -> sf == 1 )		3230589	0					
ANR	3231862	Condition	con -> sf == 1	1729:16:55983:55994	3230589	0	True				
ANR	3231863	EqualityExpression	con -> sf == 1		3230589	0		==			
ANR	3231864	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231865	Identifier	con		3230589	0					
ANR	3231866	Identifier	sf		3230589	1					
ANR	3231867	PrimaryExpression	1		3230589	1					
ANR	3231868	CompoundStatement		172:16:6410:6417	3230589	1					
ANR	3231869	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1730:16:56026:56097	3230589	0	True				
ANR	3231870	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	0					
ANR	3231871	IdentifierDeclType	uint8_t *		3230589	0					
ANR	3231872	Identifier	sp		3230589	1					
ANR	3231873	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	2		=			
ANR	3231874	Identifier	sp		3230589	0					
ANR	3231875	AdditiveExpression	( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3231876	CastExpression	( uint8_t * ) con -> buf		3230589	0					
ANR	3231877	CastTarget	uint8_t *		3230589	0					
ANR	3231878	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231879	Identifier	con		3230589	0					
ANR	3231880	Identifier	buf		3230589	1					
ANR	3231881	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3231882	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3231883	Identifier	ydx		3230589	0					
ANR	3231884	Identifier	block_wid		3230589	1					
ANR	3231885	MultiplicativeExpression	uExternalNcomp * 16 * mx		3230589	1		*			
ANR	3231886	Identifier	uExternalNcomp		3230589	0					
ANR	3231887	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3231888	PrimaryExpression	16		3230589	0					
ANR	3231889	Identifier	mx		3230589	1					
ANR	3231890	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1731:16:56115:56150	3230589	1	True				
ANR	3231891	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		3230589	0					
ANR	3231892	IdentifierDeclType	int *		3230589	0					
ANR	3231893	Identifier	dp		3230589	1					
ANR	3231894	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		3230589	2		=			
ANR	3231895	Identifier	dp		3230589	0					
ANR	3231896	AdditiveExpression	data + con -> ncomp * 16 * ydx		3230589	1		+			
ANR	3231897	Identifier	data		3230589	0					
ANR	3231898	MultiplicativeExpression	con -> ncomp * 16 * ydx		3230589	1		*			
ANR	3231899	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3231900	Identifier	con		3230589	0					
ANR	3231901	Identifier	ncomp		3230589	1					
ANR	3231902	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3231903	PrimaryExpression	16		3230589	0					
ANR	3231904	Identifier	ydx		3230589	1					
ANR	3231905	IdentifierDeclStatement	int iCh ;	1732:16:56168:56175	3230589	2	True				
ANR	3231906	IdentifierDecl	iCh		3230589	0					
ANR	3231907	IdentifierDeclType	int		3230589	0					
ANR	3231908	Identifier	iCh		3230589	1					
ANR	3231909	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		3230589	3					
ANR	3231910	ForInit	xdx = 0 ;	1733:21:56198:56206	3230589	0	True				
ANR	3231911	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3231912	Identifier	xdx		3230589	0					
ANR	3231913	PrimaryExpression	0		3230589	1					
ANR	3231914	Condition	xdx < 16	1733:31:56208:56215	3230589	1	True				
ANR	3231915	RelationalExpression	xdx < 16		3230589	0		<			
ANR	3231916	Identifier	xdx		3230589	0					
ANR	3231917	PrimaryExpression	16		3230589	1					
ANR	3231918	PostIncDecOperationExpression	xdx ++	1733:42:56219:56223	3230589	2	True				
ANR	3231919	Identifier	xdx		3230589	0					
ANR	3231920	IncDec	++		3230589	1					
ANR	3231921	CompoundStatement		173:49:6468:6468	3230589	3					
ANR	3231922	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		3230589	0					
ANR	3231923	ForInit	iCh = 0 ;	1734:25:56253:56260	3230589	0	True				
ANR	3231924	AssignmentExpression	iCh = 0		3230589	0		=			
ANR	3231925	Identifier	iCh		3230589	0					
ANR	3231926	PrimaryExpression	0		3230589	1					
ANR	3231927	Condition	iCh < con -> ncomp	1734:34:56262:56277	3230589	1	True				
ANR	3231928	RelationalExpression	iCh < con -> ncomp		3230589	0		<			
ANR	3231929	Identifier	iCh		3230589	0					
ANR	3231930	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3231931	Identifier	con		3230589	0					
ANR	3231932	Identifier	ncomp		3230589	1					
ANR	3231933	PostIncDecOperationExpression	iCh ++	1734:52:56280:56285	3230589	2	True				
ANR	3231934	Identifier	iCh		3230589	0					
ANR	3231935	IncDec	++		3230589	1					
ANR	3231936	CompoundStatement		174:59:6529:6529	3230589	3					
ANR	3231937	ExpressionStatement	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )	1735:24:56313:56353	3230589	0	True				
ANR	3231938	AssignmentExpression	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )		3230589	0		=			
ANR	3231939	ArrayIndexing	dp [ iCh ]		3230589	0					
ANR	3231940	Identifier	dp		3230589	0					
ANR	3231941	Identifier	iCh		3230589	1					
ANR	3231942	ShiftExpression	sp [ iCh ] >> image -> shift_bits		3230589	1		>>			
ANR	3231943	ArrayIndexing	sp [ iCh ]		3230589	0					
ANR	3231944	Identifier	sp		3230589	0					
ANR	3231945	Identifier	iCh		3230589	1					
ANR	3231946	PtrMemberAccess	image -> shift_bits		3230589	1					
ANR	3231947	Identifier	image		3230589	0					
ANR	3231948	Identifier	shift_bits		3230589	1					
ANR	3231949	ExpressionStatement	dp += con -> ncomp	1737:20:56398:56414	3230589	1	True				
ANR	3231950	AssignmentExpression	dp += con -> ncomp		3230589	0		+=			
ANR	3231951	Identifier	dp		3230589	0					
ANR	3231952	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3231953	Identifier	con		3230589	0					
ANR	3231954	Identifier	ncomp		3230589	1					
ANR	3231955	ExpressionStatement	sp += uExternalNcomp	1738:20:56436:56456	3230589	2	True				
ANR	3231956	AssignmentExpression	sp += uExternalNcomp		3230589	0		+=			
ANR	3231957	Identifier	sp		3230589	0					
ANR	3231958	Identifier	uExternalNcomp		3230589	1					
ANR	3231959	ElseStatement	else		3230589	0					
ANR	3231960	IfStatement	if ( con -> sf == 4 )		3230589	0					
ANR	3231961	Condition	con -> sf == 4	1741:21:56511:56522	3230589	0	True				
ANR	3231962	EqualityExpression	con -> sf == 4		3230589	0		==			
ANR	3231963	PtrMemberAccess	con -> sf		3230589	0					
ANR	3231964	Identifier	con		3230589	0					
ANR	3231965	Identifier	sf		3230589	1					
ANR	3231966	PrimaryExpression	4		3230589	1					
ANR	3231967	CompoundStatement		183:16:6921:6946	3230589	1					
ANR	3231968	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx ;	1742:16:56553:56620	3230589	0	True				
ANR	3231969	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		3230589	0					
ANR	3231970	IdentifierDeclType	uint8_t *		3230589	0					
ANR	3231971	Identifier	sp		3230589	1					
ANR	3231972	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		3230589	2		=			
ANR	3231973	Identifier	sp		3230589	0					
ANR	3231974	AdditiveExpression	( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		3230589	1		+			
ANR	3231975	CastExpression	( uint8_t * ) con -> buf		3230589	0					
ANR	3231976	CastTarget	uint8_t *		3230589	0					
ANR	3231977	PtrMemberAccess	con -> buf		3230589	1					
ANR	3231978	Identifier	con		3230589	0					
ANR	3231979	Identifier	buf		3230589	1					
ANR	3231980	AdditiveExpression	ydx * block_wid + con -> ncomp * 16 * mx		3230589	1		+			
ANR	3231981	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3231982	Identifier	ydx		3230589	0					
ANR	3231983	Identifier	block_wid		3230589	1					
ANR	3231984	MultiplicativeExpression	con -> ncomp * 16 * mx		3230589	1		*			
ANR	3231985	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3231986	Identifier	con		3230589	0					
ANR	3231987	Identifier	ncomp		3230589	1					
ANR	3231988	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3231989	PrimaryExpression	16		3230589	0					
ANR	3231990	Identifier	mx		3230589	1					
ANR	3231991	IdentifierDeclStatement	int * dp = data + 3 * 16 * ydx ;	1743:16:56679:56704	3230589	1	True				
ANR	3231992	IdentifierDecl	* dp = data + 3 * 16 * ydx		3230589	0					
ANR	3231993	IdentifierDeclType	int *		3230589	0					
ANR	3231994	Identifier	dp		3230589	1					
ANR	3231995	AssignmentExpression	* dp = data + 3 * 16 * ydx		3230589	2		=			
ANR	3231996	Identifier	dp		3230589	0					
ANR	3231997	AdditiveExpression	data + 3 * 16 * ydx		3230589	1		+			
ANR	3231998	Identifier	data		3230589	0					
ANR	3231999	MultiplicativeExpression	3 * 16 * ydx		3230589	1		*			
ANR	3232000	PrimaryExpression	3		3230589	0					
ANR	3232001	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3232002	PrimaryExpression	16		3230589	0					
ANR	3232003	Identifier	ydx		3230589	1					
ANR	3232004	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < 3 * 16 ; xdx += 3 , sxdx += 4 )"		3230589	2					
ANR	3232005	ForInit	"xdx = 0 , sxdx = 0 ;"	1744:21:56727:56745	3230589	0	True				
ANR	3232006	Expression	"xdx = 0 , sxdx = 0"		3230589	0					
ANR	3232007	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3232008	Identifier	xdx		3230589	0					
ANR	3232009	PrimaryExpression	0		3230589	1					
ANR	3232010	AssignmentExpression	sxdx = 0		3230589	1		=			
ANR	3232011	Identifier	sxdx		3230589	0					
ANR	3232012	PrimaryExpression	0		3230589	1					
ANR	3232013	Condition	xdx < 3 * 16	1744:41:56747:56756	3230589	1	True				
ANR	3232014	RelationalExpression	xdx < 3 * 16		3230589	0		<			
ANR	3232015	Identifier	xdx		3230589	0					
ANR	3232016	MultiplicativeExpression	3 * 16		3230589	1		*			
ANR	3232017	PrimaryExpression	3		3230589	0					
ANR	3232018	PrimaryExpression	16		3230589	1					
ANR	3232019	Expression	"xdx += 3 , sxdx += 4"	1744:54:56760:56777	3230589	2	True				
ANR	3232020	AssignmentExpression	xdx += 3		3230589	0		+=			
ANR	3232021	Identifier	xdx		3230589	0					
ANR	3232022	PrimaryExpression	3		3230589	1					
ANR	3232023	AssignmentExpression	sxdx += 4		3230589	1		+=			
ANR	3232024	Identifier	sxdx		3230589	0					
ANR	3232025	PrimaryExpression	4		3230589	1					
ANR	3232026	CompoundStatement		184:74:7022:7022	3230589	3					
ANR	3232027	ExpressionStatement	"dp [ xdx ] = forwardRGBE ( ( int ) sp [ sxdx ] , ( int ) sp [ sxdx + 3 ] )"	1745:20:56802:56857	3230589	0	True				
ANR	3232028	AssignmentExpression	"dp [ xdx ] = forwardRGBE ( ( int ) sp [ sxdx ] , ( int ) sp [ sxdx + 3 ] )"		3230589	0		=			
ANR	3232029	ArrayIndexing	dp [ xdx ]		3230589	0					
ANR	3232030	Identifier	dp		3230589	0					
ANR	3232031	Identifier	xdx		3230589	1					
ANR	3232032	CallExpression	"forwardRGBE ( ( int ) sp [ sxdx ] , ( int ) sp [ sxdx + 3 ] )"		3230589	1					
ANR	3232033	Callee	forwardRGBE		3230589	0					
ANR	3232034	Identifier	forwardRGBE		3230589	0					
ANR	3232035	ArgumentList	( int ) sp [ sxdx ]		3230589	1					
ANR	3232036	Argument	( int ) sp [ sxdx ]		3230589	0					
ANR	3232037	CastExpression	( int ) sp [ sxdx ]		3230589	0					
ANR	3232038	CastTarget	int		3230589	0					
ANR	3232039	ArrayIndexing	sp [ sxdx ]		3230589	1					
ANR	3232040	Identifier	sp		3230589	0					
ANR	3232041	Identifier	sxdx		3230589	1					
ANR	3232042	Argument	( int ) sp [ sxdx + 3 ]		3230589	1					
ANR	3232043	CastExpression	( int ) sp [ sxdx + 3 ]		3230589	0					
ANR	3232044	CastTarget	int		3230589	0					
ANR	3232045	ArrayIndexing	sp [ sxdx + 3 ]		3230589	1					
ANR	3232046	Identifier	sp		3230589	0					
ANR	3232047	AdditiveExpression	sxdx + 3		3230589	1		+			
ANR	3232048	Identifier	sxdx		3230589	0					
ANR	3232049	PrimaryExpression	3		3230589	1					
ANR	3232050	ExpressionStatement	"dp [ xdx + 1 ] = forwardRGBE ( ( int ) sp [ sxdx + 1 ] , ( int ) sp [ sxdx + 3 ] )"	1746:20:56880:56943	3230589	1	True				
ANR	3232051	AssignmentExpression	"dp [ xdx + 1 ] = forwardRGBE ( ( int ) sp [ sxdx + 1 ] , ( int ) sp [ sxdx + 3 ] )"		3230589	0		=			
ANR	3232052	ArrayIndexing	dp [ xdx + 1 ]		3230589	0					
ANR	3232053	Identifier	dp		3230589	0					
ANR	3232054	AdditiveExpression	xdx + 1		3230589	1		+			
ANR	3232055	Identifier	xdx		3230589	0					
ANR	3232056	PrimaryExpression	1		3230589	1					
ANR	3232057	CallExpression	"forwardRGBE ( ( int ) sp [ sxdx + 1 ] , ( int ) sp [ sxdx + 3 ] )"		3230589	1					
ANR	3232058	Callee	forwardRGBE		3230589	0					
ANR	3232059	Identifier	forwardRGBE		3230589	0					
ANR	3232060	ArgumentList	( int ) sp [ sxdx + 1 ]		3230589	1					
ANR	3232061	Argument	( int ) sp [ sxdx + 1 ]		3230589	0					
ANR	3232062	CastExpression	( int ) sp [ sxdx + 1 ]		3230589	0					
ANR	3232063	CastTarget	int		3230589	0					
ANR	3232064	ArrayIndexing	sp [ sxdx + 1 ]		3230589	1					
ANR	3232065	Identifier	sp		3230589	0					
ANR	3232066	AdditiveExpression	sxdx + 1		3230589	1		+			
ANR	3232067	Identifier	sxdx		3230589	0					
ANR	3232068	PrimaryExpression	1		3230589	1					
ANR	3232069	Argument	( int ) sp [ sxdx + 3 ]		3230589	1					
ANR	3232070	CastExpression	( int ) sp [ sxdx + 3 ]		3230589	0					
ANR	3232071	CastTarget	int		3230589	0					
ANR	3232072	ArrayIndexing	sp [ sxdx + 3 ]		3230589	1					
ANR	3232073	Identifier	sp		3230589	0					
ANR	3232074	AdditiveExpression	sxdx + 3		3230589	1		+			
ANR	3232075	Identifier	sxdx		3230589	0					
ANR	3232076	PrimaryExpression	3		3230589	1					
ANR	3232077	ExpressionStatement	"dp [ xdx + 2 ] = forwardRGBE ( ( int ) sp [ sxdx + 2 ] , ( int ) sp [ sxdx + 3 ] )"	1747:20:56965:57028	3230589	2	True				
ANR	3232078	AssignmentExpression	"dp [ xdx + 2 ] = forwardRGBE ( ( int ) sp [ sxdx + 2 ] , ( int ) sp [ sxdx + 3 ] )"		3230589	0		=			
ANR	3232079	ArrayIndexing	dp [ xdx + 2 ]		3230589	0					
ANR	3232080	Identifier	dp		3230589	0					
ANR	3232081	AdditiveExpression	xdx + 2		3230589	1		+			
ANR	3232082	Identifier	xdx		3230589	0					
ANR	3232083	PrimaryExpression	2		3230589	1					
ANR	3232084	CallExpression	"forwardRGBE ( ( int ) sp [ sxdx + 2 ] , ( int ) sp [ sxdx + 3 ] )"		3230589	1					
ANR	3232085	Callee	forwardRGBE		3230589	0					
ANR	3232086	Identifier	forwardRGBE		3230589	0					
ANR	3232087	ArgumentList	( int ) sp [ sxdx + 2 ]		3230589	1					
ANR	3232088	Argument	( int ) sp [ sxdx + 2 ]		3230589	0					
ANR	3232089	CastExpression	( int ) sp [ sxdx + 2 ]		3230589	0					
ANR	3232090	CastTarget	int		3230589	0					
ANR	3232091	ArrayIndexing	sp [ sxdx + 2 ]		3230589	1					
ANR	3232092	Identifier	sp		3230589	0					
ANR	3232093	AdditiveExpression	sxdx + 2		3230589	1		+			
ANR	3232094	Identifier	sxdx		3230589	0					
ANR	3232095	PrimaryExpression	2		3230589	1					
ANR	3232096	Argument	( int ) sp [ sxdx + 3 ]		3230589	1					
ANR	3232097	CastExpression	( int ) sp [ sxdx + 3 ]		3230589	0					
ANR	3232098	CastTarget	int		3230589	0					
ANR	3232099	ArrayIndexing	sp [ sxdx + 3 ]		3230589	1					
ANR	3232100	Identifier	sp		3230589	0					
ANR	3232101	AdditiveExpression	sxdx + 3		3230589	1		+			
ANR	3232102	Identifier	sxdx		3230589	0					
ANR	3232103	PrimaryExpression	3		3230589	1					
ANR	3232104	ElseStatement	else		3230589	0					
ANR	3232105	IfStatement	if ( con -> bpi == 10 )		3230589	0					
ANR	3232106	Condition	con -> bpi == 10	1752:13:57091:57104	3230589	0	True				
ANR	3232107	EqualityExpression	con -> bpi == 10		3230589	0		==			
ANR	3232108	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3232109	Identifier	con		3230589	0					
ANR	3232110	Identifier	bpi		3230589	1					
ANR	3232111	PrimaryExpression	10		3230589	1					
ANR	3232112	CompoundStatement		192:29:7349:7349	3230589	1					
ANR	3232113	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1753:8:57117:57148	3230589	0	True				
ANR	3232114	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		3230589	0		=			
ANR	3232115	Identifier	block_wid		3230589	0					
ANR	3232116	BitAndExpression	( con -> wid + 15 ) & ~15		3230589	1		&			
ANR	3232117	AdditiveExpression	con -> wid + 15		3230589	0		+			
ANR	3232118	PtrMemberAccess	con -> wid		3230589	0					
ANR	3232119	Identifier	con		3230589	0					
ANR	3232120	Identifier	wid		3230589	1					
ANR	3232121	PrimaryExpression	15		3230589	1					
ANR	3232122	Identifier	~15		3230589	1					
ANR	3232123	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	1					
ANR	3232124	ForInit	ydx = 0 ;	1754:13:57163:57171	3230589	0	True				
ANR	3232125	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3232126	Identifier	ydx		3230589	0					
ANR	3232127	PrimaryExpression	0		3230589	1					
ANR	3232128	Condition	ydx < 16	1754:23:57173:57180	3230589	1	True				
ANR	3232129	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3232130	Identifier	ydx		3230589	0					
ANR	3232131	PrimaryExpression	16		3230589	1					
ANR	3232132	AssignmentExpression	ydx += 1	1754:34:57184:57191	3230589	2	True	+=			
ANR	3232133	Identifier	ydx		3230589	0					
ANR	3232134	PrimaryExpression	1		3230589	1					
ANR	3232135	CompoundStatement		196:12:7534:7572	3230589	3					
ANR	3232136	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx ;	1755:12:57220:57278	3230589	0	True				
ANR	3232137	IdentifierDecl	* sp = ( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	0					
ANR	3232138	IdentifierDeclType	uint32_t *		3230589	0					
ANR	3232139	Identifier	sp		3230589	1					
ANR	3232140	AssignmentExpression	* sp = ( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	2		=			
ANR	3232141	Identifier	sp		3230589	0					
ANR	3232142	AdditiveExpression	( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx		3230589	1		+			
ANR	3232143	CastExpression	( uint32_t * ) con -> buf		3230589	0					
ANR	3232144	CastTarget	uint32_t *		3230589	0					
ANR	3232145	PtrMemberAccess	con -> buf		3230589	1					
ANR	3232146	Identifier	con		3230589	0					
ANR	3232147	Identifier	buf		3230589	1					
ANR	3232148	AdditiveExpression	ydx * block_wid + 16 * mx		3230589	1		+			
ANR	3232149	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3232150	Identifier	ydx		3230589	0					
ANR	3232151	Identifier	block_wid		3230589	1					
ANR	3232152	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3232153	PrimaryExpression	16		3230589	0					
ANR	3232154	Identifier	mx		3230589	1					
ANR	3232155	IdentifierDeclStatement	int * dp = data + uExternalNcomp * 16 * ydx ;	1756:12:57292:57330	3230589	1	True				
ANR	3232156	IdentifierDecl	* dp = data + uExternalNcomp * 16 * ydx		3230589	0					
ANR	3232157	IdentifierDeclType	int *		3230589	0					
ANR	3232158	Identifier	dp		3230589	1					
ANR	3232159	AssignmentExpression	* dp = data + uExternalNcomp * 16 * ydx		3230589	2		=			
ANR	3232160	Identifier	dp		3230589	0					
ANR	3232161	AdditiveExpression	data + uExternalNcomp * 16 * ydx		3230589	1		+			
ANR	3232162	Identifier	data		3230589	0					
ANR	3232163	MultiplicativeExpression	uExternalNcomp * 16 * ydx		3230589	1		*			
ANR	3232164	Identifier	uExternalNcomp		3230589	0					
ANR	3232165	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3232166	PrimaryExpression	16		3230589	0					
ANR	3232167	Identifier	ydx		3230589	1					
ANR	3232168	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < uExternalNcomp * 16 ; xdx += uExternalNcomp , sxdx ++ )"		3230589	2					
ANR	3232169	ForInit	"xdx = 0 , sxdx = 0 ;"	1757:17:57349:57366	3230589	0	True				
ANR	3232170	Expression	"xdx = 0 , sxdx = 0"		3230589	0					
ANR	3232171	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3232172	Identifier	xdx		3230589	0					
ANR	3232173	PrimaryExpression	0		3230589	1					
ANR	3232174	AssignmentExpression	sxdx = 0		3230589	1		=			
ANR	3232175	Identifier	sxdx		3230589	0					
ANR	3232176	PrimaryExpression	0		3230589	1					
ANR	3232177	Condition	xdx < uExternalNcomp * 16	1757:36:57368:57390	3230589	1	True				
ANR	3232178	RelationalExpression	xdx < uExternalNcomp * 16		3230589	0		<			
ANR	3232179	Identifier	xdx		3230589	0					
ANR	3232180	MultiplicativeExpression	uExternalNcomp * 16		3230589	1		*			
ANR	3232181	Identifier	uExternalNcomp		3230589	0					
ANR	3232182	PrimaryExpression	16		3230589	1					
ANR	3232183	Expression	"xdx += uExternalNcomp , sxdx ++"	1757:62:57394:57422	3230589	2	True				
ANR	3232184	AssignmentExpression	xdx += uExternalNcomp		3230589	0		+=			
ANR	3232185	Identifier	xdx		3230589	0					
ANR	3232186	Identifier	uExternalNcomp		3230589	1					
ANR	3232187	PostIncDecOperationExpression	sxdx ++		3230589	1					
ANR	3232188	Identifier	sxdx		3230589	0					
ANR	3232189	IncDec	++		3230589	1					
ANR	3232190	CompoundStatement		197:93:7667:7667	3230589	3					
ANR	3232191	ExpressionStatement	dp [ xdx ] = ( sp [ sxdx ] & 0x3ff )	1758:16:57443:57471	3230589	0	True				
ANR	3232192	AssignmentExpression	dp [ xdx ] = ( sp [ sxdx ] & 0x3ff )		3230589	0		=			
ANR	3232193	ArrayIndexing	dp [ xdx ]		3230589	0					
ANR	3232194	Identifier	dp		3230589	0					
ANR	3232195	Identifier	xdx		3230589	1					
ANR	3232196	BitAndExpression	sp [ sxdx ] & 0x3ff		3230589	1		&			
ANR	3232197	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3232198	Identifier	sp		3230589	0					
ANR	3232199	Identifier	sxdx		3230589	1					
ANR	3232200	PrimaryExpression	0x3ff		3230589	1					
ANR	3232201	ExpressionStatement	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 10 ) & 0x3ff )	1759:16:57489:57529	3230589	1	True				
ANR	3232202	AssignmentExpression	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 10 ) & 0x3ff )		3230589	0		=			
ANR	3232203	ArrayIndexing	dp [ xdx + 1 ]		3230589	0					
ANR	3232204	Identifier	dp		3230589	0					
ANR	3232205	AdditiveExpression	xdx + 1		3230589	1		+			
ANR	3232206	Identifier	xdx		3230589	0					
ANR	3232207	PrimaryExpression	1		3230589	1					
ANR	3232208	BitAndExpression	( sp [ sxdx ] >> 10 ) & 0x3ff		3230589	1		&			
ANR	3232209	ShiftExpression	sp [ sxdx ] >> 10		3230589	0		>>			
ANR	3232210	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3232211	Identifier	sp		3230589	0					
ANR	3232212	Identifier	sxdx		3230589	1					
ANR	3232213	PrimaryExpression	10		3230589	1					
ANR	3232214	PrimaryExpression	0x3ff		3230589	1					
ANR	3232215	ExpressionStatement	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 20 ) & 0x3ff )	1760:16:57547:57587	3230589	2	True				
ANR	3232216	AssignmentExpression	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 20 ) & 0x3ff )		3230589	0		=			
ANR	3232217	ArrayIndexing	dp [ xdx + 2 ]		3230589	0					
ANR	3232218	Identifier	dp		3230589	0					
ANR	3232219	AdditiveExpression	xdx + 2		3230589	1		+			
ANR	3232220	Identifier	xdx		3230589	0					
ANR	3232221	PrimaryExpression	2		3230589	1					
ANR	3232222	BitAndExpression	( sp [ sxdx ] >> 20 ) & 0x3ff		3230589	1		&			
ANR	3232223	ShiftExpression	sp [ sxdx ] >> 20		3230589	0		>>			
ANR	3232224	ArrayIndexing	sp [ sxdx ]		3230589	0					
ANR	3232225	Identifier	sp		3230589	0					
ANR	3232226	Identifier	sxdx		3230589	1					
ANR	3232227	PrimaryExpression	20		3230589	1					
ANR	3232228	PrimaryExpression	0x3ff		3230589	1					
ANR	3232229	ElseStatement	else		3230589	0					
ANR	3232230	IfStatement	if ( con -> bpi == 16 )		3230589	0					
ANR	3232231	Condition	con -> bpi == 16	1764:13:57632:57645	3230589	0	True				
ANR	3232232	EqualityExpression	con -> bpi == 16		3230589	0		==			
ANR	3232233	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3232234	Identifier	con		3230589	0					
ANR	3232235	Identifier	bpi		3230589	1					
ANR	3232236	PrimaryExpression	16		3230589	1					
ANR	3232237	CompoundStatement		204:29:7890:7890	3230589	1					
ANR	3232238	IfStatement	if ( con -> sf == 1 )		3230589	0					
ANR	3232239	Condition	con -> sf == 1	1765:12:57662:57673	3230589	0	True				
ANR	3232240	EqualityExpression	con -> sf == 1		3230589	0		==			
ANR	3232241	PtrMemberAccess	con -> sf		3230589	0					
ANR	3232242	Identifier	con		3230589	0					
ANR	3232243	Identifier	sf		3230589	1					
ANR	3232244	PrimaryExpression	1		3230589	1					
ANR	3232245	CompoundStatement		205:26:7918:7918	3230589	1					
ANR	3232246	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	0					
ANR	3232247	ForInit	ydx = 0 ;	1766:17:57706:57714	3230589	0	True				
ANR	3232248	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3232249	Identifier	ydx		3230589	0					
ANR	3232250	PrimaryExpression	0		3230589	1					
ANR	3232251	Condition	ydx < 16	1766:27:57716:57723	3230589	1	True				
ANR	3232252	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3232253	Identifier	ydx		3230589	0					
ANR	3232254	PrimaryExpression	16		3230589	1					
ANR	3232255	AssignmentExpression	ydx += 1	1766:38:57727:57734	3230589	2	True	+=			
ANR	3232256	Identifier	ydx		3230589	0					
ANR	3232257	PrimaryExpression	1		3230589	1					
ANR	3232258	CompoundStatement		208:16:8084:8118	3230589	3					
ANR	3232259	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx ;	1767:16:57755:57824	3230589	0	True				
ANR	3232260	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		3230589	0					
ANR	3232261	IdentifierDeclType	uint16_t *		3230589	0					
ANR	3232262	Identifier	sp		3230589	1					
ANR	3232263	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		3230589	2		=			
ANR	3232264	Identifier	sp		3230589	0					
ANR	3232265	AdditiveExpression	( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		3230589	1		+			
ANR	3232266	CastExpression	( uint16_t * ) con -> buf		3230589	0					
ANR	3232267	CastTarget	uint16_t *		3230589	0					
ANR	3232268	PtrMemberAccess	con -> buf		3230589	1					
ANR	3232269	Identifier	con		3230589	0					
ANR	3232270	Identifier	buf		3230589	1					
ANR	3232271	AdditiveExpression	ydx * block_wid + con -> ncomp * 16 * mx		3230589	1		+			
ANR	3232272	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3232273	Identifier	ydx		3230589	0					
ANR	3232274	Identifier	block_wid		3230589	1					
ANR	3232275	MultiplicativeExpression	con -> ncomp * 16 * mx		3230589	1		*			
ANR	3232276	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3232277	Identifier	con		3230589	0					
ANR	3232278	Identifier	ncomp		3230589	1					
ANR	3232279	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3232280	PrimaryExpression	16		3230589	0					
ANR	3232281	Identifier	mx		3230589	1					
ANR	3232282	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1768:16:57842:57876	3230589	1	True				
ANR	3232283	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		3230589	0					
ANR	3232284	IdentifierDeclType	int *		3230589	0					
ANR	3232285	Identifier	dp		3230589	1					
ANR	3232286	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		3230589	2		=			
ANR	3232287	Identifier	dp		3230589	0					
ANR	3232288	AdditiveExpression	data + con -> ncomp * 16 * ydx		3230589	1		+			
ANR	3232289	Identifier	data		3230589	0					
ANR	3232290	MultiplicativeExpression	con -> ncomp * 16 * ydx		3230589	1		*			
ANR	3232291	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3232292	Identifier	con		3230589	0					
ANR	3232293	Identifier	ncomp		3230589	1					
ANR	3232294	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3232295	PrimaryExpression	16		3230589	0					
ANR	3232296	Identifier	ydx		3230589	1					
ANR	3232297	ForStatement	for ( xdx = 0 ; xdx < con -> ncomp * 16 ; xdx ++ )		3230589	2					
ANR	3232298	ForInit	xdx = 0 ;	1769:21:57899:57907	3230589	0	True				
ANR	3232299	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3232300	Identifier	xdx		3230589	0					
ANR	3232301	PrimaryExpression	0		3230589	1					
ANR	3232302	Condition	xdx < con -> ncomp * 16	1769:31:57909:57927	3230589	1	True				
ANR	3232303	RelationalExpression	xdx < con -> ncomp * 16		3230589	0		<			
ANR	3232304	Identifier	xdx		3230589	0					
ANR	3232305	MultiplicativeExpression	con -> ncomp * 16		3230589	1		*			
ANR	3232306	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3232307	Identifier	con		3230589	0					
ANR	3232308	Identifier	ncomp		3230589	1					
ANR	3232309	PrimaryExpression	16		3230589	1					
ANR	3232310	PostIncDecOperationExpression	xdx ++	1769:53:57931:57935	3230589	2	True				
ANR	3232311	Identifier	xdx		3230589	0					
ANR	3232312	IncDec	++		3230589	1					
ANR	3232313	ExpressionStatement	dp [ xdx ] = ( sp [ xdx ] >> image -> shift_bits )	1770:20:57958:57998	3230589	3	True				
ANR	3232314	AssignmentExpression	dp [ xdx ] = ( sp [ xdx ] >> image -> shift_bits )		3230589	0		=			
ANR	3232315	ArrayIndexing	dp [ xdx ]		3230589	0					
ANR	3232316	Identifier	dp		3230589	0					
ANR	3232317	Identifier	xdx		3230589	1					
ANR	3232318	ShiftExpression	sp [ xdx ] >> image -> shift_bits		3230589	1		>>			
ANR	3232319	ArrayIndexing	sp [ xdx ]		3230589	0					
ANR	3232320	Identifier	sp		3230589	0					
ANR	3232321	Identifier	xdx		3230589	1					
ANR	3232322	PtrMemberAccess	image -> shift_bits		3230589	1					
ANR	3232323	Identifier	image		3230589	0					
ANR	3232324	Identifier	shift_bits		3230589	1					
ANR	3232325	ElseStatement	else		3230589	0					
ANR	3232326	IfStatement	if ( con -> sf == 2 )		3230589	0					
ANR	3232327	Condition	con -> sf == 2	1773:17:58043:58054	3230589	0	True				
ANR	3232328	EqualityExpression	con -> sf == 2		3230589	0		==			
ANR	3232329	PtrMemberAccess	con -> sf		3230589	0					
ANR	3232330	Identifier	con		3230589	0					
ANR	3232331	Identifier	sf		3230589	1					
ANR	3232332	PrimaryExpression	2		3230589	1					
ANR	3232333	CompoundStatement		213:31:8299:8299	3230589	1					
ANR	3232334	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	0					
ANR	3232335	ForInit	ydx = 0 ;	1774:17:58094:58102	3230589	0	True				
ANR	3232336	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3232337	Identifier	ydx		3230589	0					
ANR	3232338	PrimaryExpression	0		3230589	1					
ANR	3232339	Condition	ydx < 16	1774:27:58104:58111	3230589	1	True				
ANR	3232340	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3232341	Identifier	ydx		3230589	0					
ANR	3232342	PrimaryExpression	16		3230589	1					
ANR	3232343	AssignmentExpression	ydx += 1	1774:38:58115:58122	3230589	2	True	+=			
ANR	3232344	Identifier	ydx		3230589	0					
ANR	3232345	PrimaryExpression	1		3230589	1					
ANR	3232346	CompoundStatement		217:16:8522:8529	3230589	3					
ANR	3232347	IdentifierDeclStatement	short * sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1775:16:58143:58210	3230589	0	True				
ANR	3232348	IdentifierDecl	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	0					
ANR	3232349	IdentifierDeclType	short *		3230589	0					
ANR	3232350	Identifier	sp		3230589	1					
ANR	3232351	AssignmentExpression	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	2		=			
ANR	3232352	Identifier	sp		3230589	0					
ANR	3232353	AdditiveExpression	( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232354	CastExpression	( short * ) con -> buf		3230589	0					
ANR	3232355	CastTarget	short *		3230589	0					
ANR	3232356	PtrMemberAccess	con -> buf		3230589	1					
ANR	3232357	Identifier	con		3230589	0					
ANR	3232358	Identifier	buf		3230589	1					
ANR	3232359	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232360	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3232361	Identifier	ydx		3230589	0					
ANR	3232362	Identifier	block_wid		3230589	1					
ANR	3232363	MultiplicativeExpression	uExternalNcomp * 16 * mx		3230589	1		*			
ANR	3232364	Identifier	uExternalNcomp		3230589	0					
ANR	3232365	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3232366	PrimaryExpression	16		3230589	0					
ANR	3232367	Identifier	mx		3230589	1					
ANR	3232368	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1776:16:58228:58262	3230589	1	True				
ANR	3232369	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		3230589	0					
ANR	3232370	IdentifierDeclType	int *		3230589	0					
ANR	3232371	Identifier	dp		3230589	1					
ANR	3232372	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		3230589	2		=			
ANR	3232373	Identifier	dp		3230589	0					
ANR	3232374	AdditiveExpression	data + con -> ncomp * 16 * ydx		3230589	1		+			
ANR	3232375	Identifier	data		3230589	0					
ANR	3232376	MultiplicativeExpression	con -> ncomp * 16 * ydx		3230589	1		*			
ANR	3232377	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3232378	Identifier	con		3230589	0					
ANR	3232379	Identifier	ncomp		3230589	1					
ANR	3232380	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3232381	PrimaryExpression	16		3230589	0					
ANR	3232382	Identifier	ydx		3230589	1					
ANR	3232383	IdentifierDeclStatement	int iCh ;	1777:16:58280:58287	3230589	2	True				
ANR	3232384	IdentifierDecl	iCh		3230589	0					
ANR	3232385	IdentifierDeclType	int		3230589	0					
ANR	3232386	Identifier	iCh		3230589	1					
ANR	3232387	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		3230589	3					
ANR	3232388	ForInit	xdx = 0 ;	1778:21:58310:58318	3230589	0	True				
ANR	3232389	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3232390	Identifier	xdx		3230589	0					
ANR	3232391	PrimaryExpression	0		3230589	1					
ANR	3232392	Condition	xdx < 16	1778:31:58320:58327	3230589	1	True				
ANR	3232393	RelationalExpression	xdx < 16		3230589	0		<			
ANR	3232394	Identifier	xdx		3230589	0					
ANR	3232395	PrimaryExpression	16		3230589	1					
ANR	3232396	PostIncDecOperationExpression	xdx ++	1778:42:58331:58335	3230589	2	True				
ANR	3232397	Identifier	xdx		3230589	0					
ANR	3232398	IncDec	++		3230589	1					
ANR	3232399	CompoundStatement		218:49:8580:8580	3230589	3					
ANR	3232400	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		3230589	0					
ANR	3232401	ForInit	iCh = 0 ;	1779:25:58365:58372	3230589	0	True				
ANR	3232402	AssignmentExpression	iCh = 0		3230589	0		=			
ANR	3232403	Identifier	iCh		3230589	0					
ANR	3232404	PrimaryExpression	0		3230589	1					
ANR	3232405	Condition	iCh < con -> ncomp	1779:34:58374:58389	3230589	1	True				
ANR	3232406	RelationalExpression	iCh < con -> ncomp		3230589	0		<			
ANR	3232407	Identifier	iCh		3230589	0					
ANR	3232408	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232409	Identifier	con		3230589	0					
ANR	3232410	Identifier	ncomp		3230589	1					
ANR	3232411	PostIncDecOperationExpression	iCh ++	1779:52:58392:58397	3230589	2	True				
ANR	3232412	Identifier	iCh		3230589	0					
ANR	3232413	IncDec	++		3230589	1					
ANR	3232414	CompoundStatement		219:59:8641:8641	3230589	3					
ANR	3232415	ExpressionStatement	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )	1780:24:58425:58465	3230589	0	True				
ANR	3232416	AssignmentExpression	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )		3230589	0		=			
ANR	3232417	ArrayIndexing	dp [ iCh ]		3230589	0					
ANR	3232418	Identifier	dp		3230589	0					
ANR	3232419	Identifier	iCh		3230589	1					
ANR	3232420	ShiftExpression	sp [ iCh ] >> image -> shift_bits		3230589	1		>>			
ANR	3232421	ArrayIndexing	sp [ iCh ]		3230589	0					
ANR	3232422	Identifier	sp		3230589	0					
ANR	3232423	Identifier	iCh		3230589	1					
ANR	3232424	PtrMemberAccess	image -> shift_bits		3230589	1					
ANR	3232425	Identifier	image		3230589	0					
ANR	3232426	Identifier	shift_bits		3230589	1					
ANR	3232427	ExpressionStatement	dp += con -> ncomp	1782:20:58510:58526	3230589	1	True				
ANR	3232428	AssignmentExpression	dp += con -> ncomp		3230589	0		+=			
ANR	3232429	Identifier	dp		3230589	0					
ANR	3232430	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232431	Identifier	con		3230589	0					
ANR	3232432	Identifier	ncomp		3230589	1					
ANR	3232433	ExpressionStatement	sp += uExternalNcomp	1783:20:58548:58568	3230589	2	True				
ANR	3232434	AssignmentExpression	sp += uExternalNcomp		3230589	0		+=			
ANR	3232435	Identifier	sp		3230589	0					
ANR	3232436	Identifier	uExternalNcomp		3230589	1					
ANR	3232437	ElseStatement	else		3230589	0					
ANR	3232438	IfStatement	if ( con -> sf == 3 )		3230589	0					
ANR	3232439	Condition	con -> sf == 3	1787:17:58631:58642	3230589	0	True				
ANR	3232440	EqualityExpression	con -> sf == 3		3230589	0		==			
ANR	3232441	PtrMemberAccess	con -> sf		3230589	0					
ANR	3232442	Identifier	con		3230589	0					
ANR	3232443	Identifier	sf		3230589	1					
ANR	3232444	PrimaryExpression	3		3230589	1					
ANR	3232445	CompoundStatement		227:31:8887:8887	3230589	1					
ANR	3232446	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	0					
ANR	3232447	ForInit	ydx = 0 ;	1788:17:58681:58689	3230589	0	True				
ANR	3232448	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3232449	Identifier	ydx		3230589	0					
ANR	3232450	PrimaryExpression	0		3230589	1					
ANR	3232451	Condition	ydx < 16	1788:27:58691:58698	3230589	1	True				
ANR	3232452	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3232453	Identifier	ydx		3230589	0					
ANR	3232454	PrimaryExpression	16		3230589	1					
ANR	3232455	AssignmentExpression	ydx += 1	1788:38:58702:58709	3230589	2	True	+=			
ANR	3232456	Identifier	ydx		3230589	0					
ANR	3232457	PrimaryExpression	1		3230589	1					
ANR	3232458	CompoundStatement		231:16:9109:9116	3230589	3					
ANR	3232459	IdentifierDeclStatement	short * sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1789:16:58730:58797	3230589	0	True				
ANR	3232460	IdentifierDecl	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	0					
ANR	3232461	IdentifierDeclType	short *		3230589	0					
ANR	3232462	Identifier	sp		3230589	1					
ANR	3232463	AssignmentExpression	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	2		=			
ANR	3232464	Identifier	sp		3230589	0					
ANR	3232465	AdditiveExpression	( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232466	CastExpression	( short * ) con -> buf		3230589	0					
ANR	3232467	CastTarget	short *		3230589	0					
ANR	3232468	PtrMemberAccess	con -> buf		3230589	1					
ANR	3232469	Identifier	con		3230589	0					
ANR	3232470	Identifier	buf		3230589	1					
ANR	3232471	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232472	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3232473	Identifier	ydx		3230589	0					
ANR	3232474	Identifier	block_wid		3230589	1					
ANR	3232475	MultiplicativeExpression	uExternalNcomp * 16 * mx		3230589	1		*			
ANR	3232476	Identifier	uExternalNcomp		3230589	0					
ANR	3232477	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3232478	PrimaryExpression	16		3230589	0					
ANR	3232479	Identifier	mx		3230589	1					
ANR	3232480	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1790:16:58815:58849	3230589	1	True				
ANR	3232481	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		3230589	0					
ANR	3232482	IdentifierDeclType	int *		3230589	0					
ANR	3232483	Identifier	dp		3230589	1					
ANR	3232484	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		3230589	2		=			
ANR	3232485	Identifier	dp		3230589	0					
ANR	3232486	AdditiveExpression	data + con -> ncomp * 16 * ydx		3230589	1		+			
ANR	3232487	Identifier	data		3230589	0					
ANR	3232488	MultiplicativeExpression	con -> ncomp * 16 * ydx		3230589	1		*			
ANR	3232489	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3232490	Identifier	con		3230589	0					
ANR	3232491	Identifier	ncomp		3230589	1					
ANR	3232492	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3232493	PrimaryExpression	16		3230589	0					
ANR	3232494	Identifier	ydx		3230589	1					
ANR	3232495	IdentifierDeclStatement	int iCh ;	1791:16:58867:58874	3230589	2	True				
ANR	3232496	IdentifierDecl	iCh		3230589	0					
ANR	3232497	IdentifierDeclType	int		3230589	0					
ANR	3232498	Identifier	iCh		3230589	1					
ANR	3232499	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		3230589	3					
ANR	3232500	ForInit	xdx = 0 ;	1792:21:58897:58905	3230589	0	True				
ANR	3232501	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3232502	Identifier	xdx		3230589	0					
ANR	3232503	PrimaryExpression	0		3230589	1					
ANR	3232504	Condition	xdx < 16	1792:31:58907:58914	3230589	1	True				
ANR	3232505	RelationalExpression	xdx < 16		3230589	0		<			
ANR	3232506	Identifier	xdx		3230589	0					
ANR	3232507	PrimaryExpression	16		3230589	1					
ANR	3232508	PostIncDecOperationExpression	xdx ++	1792:42:58918:58922	3230589	2	True				
ANR	3232509	Identifier	xdx		3230589	0					
ANR	3232510	IncDec	++		3230589	1					
ANR	3232511	CompoundStatement		232:49:9167:9167	3230589	3					
ANR	3232512	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		3230589	0					
ANR	3232513	ForInit	iCh = 0 ;	1793:25:58952:58959	3230589	0	True				
ANR	3232514	AssignmentExpression	iCh = 0		3230589	0		=			
ANR	3232515	Identifier	iCh		3230589	0					
ANR	3232516	PrimaryExpression	0		3230589	1					
ANR	3232517	Condition	iCh < con -> ncomp	1793:34:58961:58976	3230589	1	True				
ANR	3232518	RelationalExpression	iCh < con -> ncomp		3230589	0		<			
ANR	3232519	Identifier	iCh		3230589	0					
ANR	3232520	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232521	Identifier	con		3230589	0					
ANR	3232522	Identifier	ncomp		3230589	1					
ANR	3232523	PostIncDecOperationExpression	iCh ++	1793:52:58979:58984	3230589	2	True				
ANR	3232524	Identifier	iCh		3230589	0					
ANR	3232525	IncDec	++		3230589	1					
ANR	3232526	CompoundStatement		233:60:9229:9229	3230589	3					
ANR	3232527	ExpressionStatement	dp [ iCh ] = PreScalingBD16F ( ( int ) sp [ iCh ] )	1794:24:59013:59052	3230589	0	True				
ANR	3232528	AssignmentExpression	dp [ iCh ] = PreScalingBD16F ( ( int ) sp [ iCh ] )		3230589	0		=			
ANR	3232529	ArrayIndexing	dp [ iCh ]		3230589	0					
ANR	3232530	Identifier	dp		3230589	0					
ANR	3232531	Identifier	iCh		3230589	1					
ANR	3232532	CallExpression	PreScalingBD16F ( ( int ) sp [ iCh ] )		3230589	1					
ANR	3232533	Callee	PreScalingBD16F		3230589	0					
ANR	3232534	Identifier	PreScalingBD16F		3230589	0					
ANR	3232535	ArgumentList	( int ) sp [ iCh ]		3230589	1					
ANR	3232536	Argument	( int ) sp [ iCh ]		3230589	0					
ANR	3232537	CastExpression	( int ) sp [ iCh ]		3230589	0					
ANR	3232538	CastTarget	int		3230589	0					
ANR	3232539	ArrayIndexing	sp [ iCh ]		3230589	1					
ANR	3232540	Identifier	sp		3230589	0					
ANR	3232541	Identifier	iCh		3230589	1					
ANR	3232542	ExpressionStatement	dp += con -> ncomp	1796:20:59097:59113	3230589	1	True				
ANR	3232543	AssignmentExpression	dp += con -> ncomp		3230589	0		+=			
ANR	3232544	Identifier	dp		3230589	0					
ANR	3232545	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232546	Identifier	con		3230589	0					
ANR	3232547	Identifier	ncomp		3230589	1					
ANR	3232548	ExpressionStatement	sp += uExternalNcomp	1797:20:59135:59155	3230589	2	True				
ANR	3232549	AssignmentExpression	sp += uExternalNcomp		3230589	0		+=			
ANR	3232550	Identifier	sp		3230589	0					
ANR	3232551	Identifier	uExternalNcomp		3230589	1					
ANR	3232552	ElseStatement	else		3230589	0					
ANR	3232553	IfStatement	if ( con -> bpi == 32 )		3230589	0					
ANR	3232554	Condition	con -> bpi == 32	1802:13:59218:59231	3230589	0	True				
ANR	3232555	EqualityExpression	con -> bpi == 32		3230589	0		==			
ANR	3232556	PtrMemberAccess	con -> bpi		3230589	0					
ANR	3232557	Identifier	con		3230589	0					
ANR	3232558	Identifier	bpi		3230589	1					
ANR	3232559	PrimaryExpression	32		3230589	1					
ANR	3232560	CompoundStatement		242:29:9476:9476	3230589	1					
ANR	3232561	IfStatement	if ( con -> sf == 2 )		3230589	0					
ANR	3232562	Condition	con -> sf == 2	1804:12:59274:59285	3230589	0	True				
ANR	3232563	EqualityExpression	con -> sf == 2		3230589	0		==			
ANR	3232564	PtrMemberAccess	con -> sf		3230589	0					
ANR	3232565	Identifier	con		3230589	0					
ANR	3232566	Identifier	sf		3230589	1					
ANR	3232567	PrimaryExpression	2		3230589	1					
ANR	3232568	CompoundStatement		244:26:9530:9530	3230589	1					
ANR	3232569	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	0					
ANR	3232570	ForInit	ydx = 0 ;	1805:17:59325:59333	3230589	0	True				
ANR	3232571	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3232572	Identifier	ydx		3230589	0					
ANR	3232573	PrimaryExpression	0		3230589	1					
ANR	3232574	Condition	ydx < 16	1805:27:59335:59342	3230589	1	True				
ANR	3232575	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3232576	Identifier	ydx		3230589	0					
ANR	3232577	PrimaryExpression	16		3230589	1					
ANR	3232578	AssignmentExpression	ydx += 1	1805:38:59346:59353	3230589	2	True	+=			
ANR	3232579	Identifier	ydx		3230589	0					
ANR	3232580	PrimaryExpression	1		3230589	1					
ANR	3232581	CompoundStatement		248:16:9757:9764	3230589	3					
ANR	3232582	IdentifierDeclStatement	int32_t * sp = ( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1806:16:59374:59445	3230589	0	True				
ANR	3232583	IdentifierDecl	* sp = ( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	0					
ANR	3232584	IdentifierDeclType	int32_t *		3230589	0					
ANR	3232585	Identifier	sp		3230589	1					
ANR	3232586	AssignmentExpression	* sp = ( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	2		=			
ANR	3232587	Identifier	sp		3230589	0					
ANR	3232588	AdditiveExpression	( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232589	CastExpression	( int32_t * ) con -> buf		3230589	0					
ANR	3232590	CastTarget	int32_t *		3230589	0					
ANR	3232591	PtrMemberAccess	con -> buf		3230589	1					
ANR	3232592	Identifier	con		3230589	0					
ANR	3232593	Identifier	buf		3230589	1					
ANR	3232594	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232595	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3232596	Identifier	ydx		3230589	0					
ANR	3232597	Identifier	block_wid		3230589	1					
ANR	3232598	MultiplicativeExpression	uExternalNcomp * 16 * mx		3230589	1		*			
ANR	3232599	Identifier	uExternalNcomp		3230589	0					
ANR	3232600	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3232601	PrimaryExpression	16		3230589	0					
ANR	3232602	Identifier	mx		3230589	1					
ANR	3232603	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1807:16:59463:59497	3230589	1	True				
ANR	3232604	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		3230589	0					
ANR	3232605	IdentifierDeclType	int *		3230589	0					
ANR	3232606	Identifier	dp		3230589	1					
ANR	3232607	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		3230589	2		=			
ANR	3232608	Identifier	dp		3230589	0					
ANR	3232609	AdditiveExpression	data + con -> ncomp * 16 * ydx		3230589	1		+			
ANR	3232610	Identifier	data		3230589	0					
ANR	3232611	MultiplicativeExpression	con -> ncomp * 16 * ydx		3230589	1		*			
ANR	3232612	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3232613	Identifier	con		3230589	0					
ANR	3232614	Identifier	ncomp		3230589	1					
ANR	3232615	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3232616	PrimaryExpression	16		3230589	0					
ANR	3232617	Identifier	ydx		3230589	1					
ANR	3232618	IdentifierDeclStatement	int iCh ;	1808:16:59515:59522	3230589	2	True				
ANR	3232619	IdentifierDecl	iCh		3230589	0					
ANR	3232620	IdentifierDeclType	int		3230589	0					
ANR	3232621	Identifier	iCh		3230589	1					
ANR	3232622	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		3230589	3					
ANR	3232623	ForInit	xdx = 0 ;	1809:21:59545:59553	3230589	0	True				
ANR	3232624	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3232625	Identifier	xdx		3230589	0					
ANR	3232626	PrimaryExpression	0		3230589	1					
ANR	3232627	Condition	xdx < 16	1809:31:59555:59562	3230589	1	True				
ANR	3232628	RelationalExpression	xdx < 16		3230589	0		<			
ANR	3232629	Identifier	xdx		3230589	0					
ANR	3232630	PrimaryExpression	16		3230589	1					
ANR	3232631	PostIncDecOperationExpression	xdx ++	1809:42:59566:59570	3230589	2	True				
ANR	3232632	Identifier	xdx		3230589	0					
ANR	3232633	IncDec	++		3230589	1					
ANR	3232634	CompoundStatement		249:49:9815:9815	3230589	3					
ANR	3232635	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		3230589	0					
ANR	3232636	ForInit	iCh = 0 ;	1810:25:59600:59607	3230589	0	True				
ANR	3232637	AssignmentExpression	iCh = 0		3230589	0		=			
ANR	3232638	Identifier	iCh		3230589	0					
ANR	3232639	PrimaryExpression	0		3230589	1					
ANR	3232640	Condition	iCh < con -> ncomp	1810:34:59609:59624	3230589	1	True				
ANR	3232641	RelationalExpression	iCh < con -> ncomp		3230589	0		<			
ANR	3232642	Identifier	iCh		3230589	0					
ANR	3232643	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232644	Identifier	con		3230589	0					
ANR	3232645	Identifier	ncomp		3230589	1					
ANR	3232646	PostIncDecOperationExpression	iCh ++	1810:52:59627:59632	3230589	2	True				
ANR	3232647	Identifier	iCh		3230589	0					
ANR	3232648	IncDec	++		3230589	1					
ANR	3232649	CompoundStatement		250:60:9877:9877	3230589	3					
ANR	3232650	ExpressionStatement	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )	1811:24:59661:59701	3230589	0	True				
ANR	3232651	AssignmentExpression	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )		3230589	0		=			
ANR	3232652	ArrayIndexing	dp [ iCh ]		3230589	0					
ANR	3232653	Identifier	dp		3230589	0					
ANR	3232654	Identifier	iCh		3230589	1					
ANR	3232655	ShiftExpression	sp [ iCh ] >> image -> shift_bits		3230589	1		>>			
ANR	3232656	ArrayIndexing	sp [ iCh ]		3230589	0					
ANR	3232657	Identifier	sp		3230589	0					
ANR	3232658	Identifier	iCh		3230589	1					
ANR	3232659	PtrMemberAccess	image -> shift_bits		3230589	1					
ANR	3232660	Identifier	image		3230589	0					
ANR	3232661	Identifier	shift_bits		3230589	1					
ANR	3232662	ExpressionStatement	dp += con -> ncomp	1813:20:59746:59762	3230589	1	True				
ANR	3232663	AssignmentExpression	dp += con -> ncomp		3230589	0		+=			
ANR	3232664	Identifier	dp		3230589	0					
ANR	3232665	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232666	Identifier	con		3230589	0					
ANR	3232667	Identifier	ncomp		3230589	1					
ANR	3232668	ExpressionStatement	sp += uExternalNcomp	1814:20:59784:59804	3230589	2	True				
ANR	3232669	AssignmentExpression	sp += uExternalNcomp		3230589	0		+=			
ANR	3232670	Identifier	sp		3230589	0					
ANR	3232671	Identifier	uExternalNcomp		3230589	1					
ANR	3232672	ElseStatement	else		3230589	0					
ANR	3232673	IfStatement	if ( con -> sf == 3 )		3230589	0					
ANR	3232674	Condition	con -> sf == 3	1818:17:59866:59877	3230589	0	True				
ANR	3232675	EqualityExpression	con -> sf == 3		3230589	0		==			
ANR	3232676	PtrMemberAccess	con -> sf		3230589	0					
ANR	3232677	Identifier	con		3230589	0					
ANR	3232678	Identifier	sf		3230589	1					
ANR	3232679	PrimaryExpression	3		3230589	1					
ANR	3232680	CompoundStatement		258:31:10122:10122	3230589	1					
ANR	3232681	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		3230589	0					
ANR	3232682	ForInit	ydx = 0 ;	1819:17:59911:59919	3230589	0	True				
ANR	3232683	AssignmentExpression	ydx = 0		3230589	0		=			
ANR	3232684	Identifier	ydx		3230589	0					
ANR	3232685	PrimaryExpression	0		3230589	1					
ANR	3232686	Condition	ydx < 16	1819:27:59921:59928	3230589	1	True				
ANR	3232687	RelationalExpression	ydx < 16		3230589	0		<			
ANR	3232688	Identifier	ydx		3230589	0					
ANR	3232689	PrimaryExpression	16		3230589	1					
ANR	3232690	AssignmentExpression	ydx += 1	1819:38:59932:59939	3230589	2	True	+=			
ANR	3232691	Identifier	ydx		3230589	0					
ANR	3232692	PrimaryExpression	1		3230589	1					
ANR	3232693	CompoundStatement		262:16:10335:10342	3230589	3					
ANR	3232694	IdentifierDeclStatement	int * sp = ( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1820:16:59960:60023	3230589	0	True				
ANR	3232695	IdentifierDecl	* sp = ( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	0					
ANR	3232696	IdentifierDeclType	int *		3230589	0					
ANR	3232697	Identifier	sp		3230589	1					
ANR	3232698	AssignmentExpression	* sp = ( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	2		=			
ANR	3232699	Identifier	sp		3230589	0					
ANR	3232700	AdditiveExpression	( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232701	CastExpression	( int * ) con -> buf		3230589	0					
ANR	3232702	CastTarget	int *		3230589	0					
ANR	3232703	PtrMemberAccess	con -> buf		3230589	1					
ANR	3232704	Identifier	con		3230589	0					
ANR	3232705	Identifier	buf		3230589	1					
ANR	3232706	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		3230589	1		+			
ANR	3232707	MultiplicativeExpression	ydx * block_wid		3230589	0		*			
ANR	3232708	Identifier	ydx		3230589	0					
ANR	3232709	Identifier	block_wid		3230589	1					
ANR	3232710	MultiplicativeExpression	uExternalNcomp * 16 * mx		3230589	1		*			
ANR	3232711	Identifier	uExternalNcomp		3230589	0					
ANR	3232712	MultiplicativeExpression	16 * mx		3230589	1		*			
ANR	3232713	PrimaryExpression	16		3230589	0					
ANR	3232714	Identifier	mx		3230589	1					
ANR	3232715	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1821:16:60041:60075	3230589	1	True				
ANR	3232716	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		3230589	0					
ANR	3232717	IdentifierDeclType	int *		3230589	0					
ANR	3232718	Identifier	dp		3230589	1					
ANR	3232719	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		3230589	2		=			
ANR	3232720	Identifier	dp		3230589	0					
ANR	3232721	AdditiveExpression	data + con -> ncomp * 16 * ydx		3230589	1		+			
ANR	3232722	Identifier	data		3230589	0					
ANR	3232723	MultiplicativeExpression	con -> ncomp * 16 * ydx		3230589	1		*			
ANR	3232724	PtrMemberAccess	con -> ncomp		3230589	0					
ANR	3232725	Identifier	con		3230589	0					
ANR	3232726	Identifier	ncomp		3230589	1					
ANR	3232727	MultiplicativeExpression	16 * ydx		3230589	1		*			
ANR	3232728	PrimaryExpression	16		3230589	0					
ANR	3232729	Identifier	ydx		3230589	1					
ANR	3232730	IdentifierDeclStatement	int iCh ;	1822:16:60093:60100	3230589	2	True				
ANR	3232731	IdentifierDecl	iCh		3230589	0					
ANR	3232732	IdentifierDeclType	int		3230589	0					
ANR	3232733	Identifier	iCh		3230589	1					
ANR	3232734	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		3230589	3					
ANR	3232735	ForInit	xdx = 0 ;	1823:21:60123:60131	3230589	0	True				
ANR	3232736	AssignmentExpression	xdx = 0		3230589	0		=			
ANR	3232737	Identifier	xdx		3230589	0					
ANR	3232738	PrimaryExpression	0		3230589	1					
ANR	3232739	Condition	xdx < 16	1823:31:60133:60140	3230589	1	True				
ANR	3232740	RelationalExpression	xdx < 16		3230589	0		<			
ANR	3232741	Identifier	xdx		3230589	0					
ANR	3232742	PrimaryExpression	16		3230589	1					
ANR	3232743	PostIncDecOperationExpression	xdx ++	1823:42:60144:60148	3230589	2	True				
ANR	3232744	Identifier	xdx		3230589	0					
ANR	3232745	IncDec	++		3230589	1					
ANR	3232746	CompoundStatement		263:49:10393:10393	3230589	3					
ANR	3232747	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		3230589	0					
ANR	3232748	ForInit	iCh = 0 ;	1824:25:60178:60185	3230589	0	True				
ANR	3232749	AssignmentExpression	iCh = 0		3230589	0		=			
ANR	3232750	Identifier	iCh		3230589	0					
ANR	3232751	PrimaryExpression	0		3230589	1					
ANR	3232752	Condition	iCh < con -> ncomp	1824:34:60187:60202	3230589	1	True				
ANR	3232753	RelationalExpression	iCh < con -> ncomp		3230589	0		<			
ANR	3232754	Identifier	iCh		3230589	0					
ANR	3232755	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232756	Identifier	con		3230589	0					
ANR	3232757	Identifier	ncomp		3230589	1					
ANR	3232758	PostIncDecOperationExpression	iCh ++	1824:52:60205:60210	3230589	2	True				
ANR	3232759	Identifier	iCh		3230589	0					
ANR	3232760	IncDec	++		3230589	1					
ANR	3232761	CompoundStatement		264:60:10455:10455	3230589	3					
ANR	3232762	ExpressionStatement	"dp [ iCh ] = PreScalingBD32F ( sp [ iCh ] , image -> exp_bias , image -> len_mantissa )"	1825:24:60239:60311	3230589	0	True				
ANR	3232763	AssignmentExpression	"dp [ iCh ] = PreScalingBD32F ( sp [ iCh ] , image -> exp_bias , image -> len_mantissa )"		3230589	0		=			
ANR	3232764	ArrayIndexing	dp [ iCh ]		3230589	0					
ANR	3232765	Identifier	dp		3230589	0					
ANR	3232766	Identifier	iCh		3230589	1					
ANR	3232767	CallExpression	"PreScalingBD32F ( sp [ iCh ] , image -> exp_bias , image -> len_mantissa )"		3230589	1					
ANR	3232768	Callee	PreScalingBD32F		3230589	0					
ANR	3232769	Identifier	PreScalingBD32F		3230589	0					
ANR	3232770	ArgumentList	sp [ iCh ]		3230589	1					
ANR	3232771	Argument	sp [ iCh ]		3230589	0					
ANR	3232772	ArrayIndexing	sp [ iCh ]		3230589	0					
ANR	3232773	Identifier	sp		3230589	0					
ANR	3232774	Identifier	iCh		3230589	1					
ANR	3232775	Argument	image -> exp_bias		3230589	1					
ANR	3232776	PtrMemberAccess	image -> exp_bias		3230589	0					
ANR	3232777	Identifier	image		3230589	0					
ANR	3232778	Identifier	exp_bias		3230589	1					
ANR	3232779	Argument	image -> len_mantissa		3230589	2					
ANR	3232780	PtrMemberAccess	image -> len_mantissa		3230589	0					
ANR	3232781	Identifier	image		3230589	0					
ANR	3232782	Identifier	len_mantissa		3230589	1					
ANR	3232783	ExpressionStatement	dp += con -> ncomp	1827:20:60356:60372	3230589	1	True				
ANR	3232784	AssignmentExpression	dp += con -> ncomp		3230589	0		+=			
ANR	3232785	Identifier	dp		3230589	0					
ANR	3232786	PtrMemberAccess	con -> ncomp		3230589	1					
ANR	3232787	Identifier	con		3230589	0					
ANR	3232788	Identifier	ncomp		3230589	1					
ANR	3232789	ExpressionStatement	sp += uExternalNcomp	1828:20:60394:60414	3230589	2	True				
ANR	3232790	AssignmentExpression	sp += uExternalNcomp		3230589	0		+=			
ANR	3232791	Identifier	sp		3230589	0					
ANR	3232792	Identifier	uExternalNcomp		3230589	1					
ANR	3232793	ReturnType	void		3230589	1					
ANR	3232794	Identifier	read_file		3230589	2					
ANR	3232795	ParameterList	"jxr_image_t image , int mx , int my , int * data"		3230589	3					
ANR	3232796	Parameter	jxr_image_t image	1560:15:49711:49727	3230589	0	True				
ANR	3232797	ParameterType	jxr_image_t		3230589	0					
ANR	3232798	Identifier	image		3230589	1					
ANR	3232799	Parameter	int mx	1560:34:49730:49735	3230589	1	True				
ANR	3232800	ParameterType	int		3230589	0					
ANR	3232801	Identifier	mx		3230589	1					
ANR	3232802	Parameter	int my	1560:42:49738:49743	3230589	2	True				
ANR	3232803	ParameterType	int		3230589	0					
ANR	3232804	Identifier	my		3230589	1					
ANR	3232805	Parameter	int * data	1560:50:49746:49754	3230589	3	True				
ANR	3232806	ParameterType	int *		3230589	0					
ANR	3232807	Identifier	data		3230589	1					
ANR	3232808	CFGEntryNode	ENTRY		3230589		True				
ANR	3232809	CFGExitNode	EXIT		3230589		True				
ANR	3232810	Symbol	* sp		3230589						
ANR	3232811	Symbol	con		3230589						
ANR	3232812	Symbol	data		3230589						
ANR	3232813	Symbol	con -> ncomp		3230589						
ANR	3232814	Symbol	image -> exp_bias		3230589						
ANR	3232815	Symbol	* ~sp		3230589						
ANR	3232816	Symbol	dp		3230589						
ANR	3232817	Symbol	xdx		3230589						
ANR	3232818	Symbol	sxdx		3230589						
ANR	3232819	Symbol	isOutputYUV444		3230589						
ANR	3232820	Symbol	con -> bpi		3230589						
ANR	3232821	Symbol	* uExternalNcomp		3230589						
ANR	3232822	Symbol	tmp		3230589						
ANR	3232823	Symbol	con -> isBgr		3230589						
ANR	3232824	Symbol	con -> photometric		3230589						
ANR	3232825	Symbol	jxr_get_IMAGE_CHANNELS		3230589						
ANR	3232826	Symbol	con -> wid		3230589						
ANR	3232827	Symbol	image		3230589						
ANR	3232828	Symbol	~15		3230589						
ANR	3232829	Symbol	con -> hei		3230589						
ANR	3232830	Symbol	block_wid		3230589						
ANR	3232831	Symbol	mx		3230589						
ANR	3232832	Symbol	PreScalingBD16F		3230589						
ANR	3232833	Symbol	my		3230589						
ANR	3232834	Symbol	iCh		3230589						
ANR	3232835	Symbol	isOutputCMYKDirect		3230589						
ANR	3232836	Symbol	uExternalNcomp		3230589						
ANR	3232837	Symbol	idx		3230589						
ANR	3232838	Symbol	con -> sf		3230589						
ANR	3232839	Symbol	con -> buf		3230589						
ANR	3232840	Symbol	* image		3230589						
ANR	3232841	Symbol	trans		3230589						
ANR	3232842	Symbol	jxr_get_user_data		3230589						
ANR	3232843	Symbol	* sxdx		3230589						
ANR	3232844	Symbol	ydx		3230589						
ANR	3232845	Symbol	isOutputYUV422		3230589						
ANR	3232846	Symbol	* dp		3230589						
ANR	3232847	Symbol	PreScalingBD32F		3230589						
ANR	3232848	Symbol	* con		3230589						
ANR	3232849	Symbol	image -> len_mantissa		3230589						
ANR	3232850	Symbol	image -> shift_bits		3230589						
ANR	3232851	Symbol	isOutputYUV420		3230589						
ANR	3232852	Symbol	con -> padBytes		3230589						
ANR	3232853	Symbol	line_wid		3230589						
ANR	3232854	Symbol	~sp		3230589						
ANR	3232855	Symbol	sp		3230589						
ANR	3232856	Symbol	con -> my		3230589						
ANR	3232857	Symbol	* iCh		3230589						
ANR	3232858	Symbol	i		3230589						
ANR	3232859	Symbol	* i		3230589						
ANR	3232860	Symbol	forwardRGBE		3230589						
ANR	3232861	Symbol	* xdx		3230589						
ANR	3232862	Function	write_file_YCC	1835:0:60468:73333							
ANR	3232863	FunctionDef	"write_file_YCC (jxr_image_t image , int mx , int my , int * data)"		3232862	0					
ANR	3232864	CompoundStatement		1836:0:60534:73333	3232862	0					
ANR	3232865	IdentifierDeclStatement	int * dataY = data ;	1840:4:60746:60763	3232862	0	True				
ANR	3232866	IdentifierDecl	* dataY = data		3232862	0					
ANR	3232867	IdentifierDeclType	int *		3232862	0					
ANR	3232868	Identifier	dataY		3232862	1					
ANR	3232869	AssignmentExpression	* dataY = data		3232862	2		=			
ANR	3232870	Identifier	data		3232862	0					
ANR	3232871	Identifier	data		3232862	1					
ANR	3232872	IdentifierDeclStatement	int * dataU = dataY + 256 ;	1841:4:60769:60793	3232862	1	True				
ANR	3232873	IdentifierDecl	* dataU = dataY + 256		3232862	0					
ANR	3232874	IdentifierDeclType	int *		3232862	0					
ANR	3232875	Identifier	dataU		3232862	1					
ANR	3232876	AssignmentExpression	* dataU = dataY + 256		3232862	2		=			
ANR	3232877	Identifier	dataU		3232862	0					
ANR	3232878	AdditiveExpression	dataY + 256		3232862	1		+			
ANR	3232879	Identifier	dataY		3232862	0					
ANR	3232880	PrimaryExpression	256		3232862	1					
ANR	3232881	IdentifierDeclStatement	int * dataV = dataU + 256 ;	1842:4:60799:60823	3232862	2	True				
ANR	3232882	IdentifierDecl	* dataV = dataU + 256		3232862	0					
ANR	3232883	IdentifierDeclType	int *		3232862	0					
ANR	3232884	Identifier	dataV		3232862	1					
ANR	3232885	AssignmentExpression	* dataV = dataU + 256		3232862	2		=			
ANR	3232886	Identifier	dataV		3232862	0					
ANR	3232887	AdditiveExpression	dataU + 256		3232862	1		+			
ANR	3232888	Identifier	dataU		3232862	0					
ANR	3232889	PrimaryExpression	256		3232862	1					
ANR	3232890	IdentifierDeclStatement	int * dataA = dataV + 256 ;	1843:4:60829:60853	3232862	3	True				
ANR	3232891	IdentifierDecl	* dataA = dataV + 256		3232862	0					
ANR	3232892	IdentifierDeclType	int *		3232862	0					
ANR	3232893	Identifier	dataA		3232862	1					
ANR	3232894	AssignmentExpression	* dataA = dataV + 256		3232862	2		=			
ANR	3232895	Identifier	dataA		3232862	0					
ANR	3232896	AdditiveExpression	dataV + 256		3232862	1		+			
ANR	3232897	Identifier	dataV		3232862	0					
ANR	3232898	PrimaryExpression	256		3232862	1					
ANR	3232899	Statement	static	1844:4:60859:60864	3232862	4	True				
ANR	3232900	IdentifierDeclStatement	context * conY = NULL ;	1844:11:60866:60886	3232862	5	True				
ANR	3232901	IdentifierDecl	* conY = NULL		3232862	0					
ANR	3232902	IdentifierDeclType	context *		3232862	0					
ANR	3232903	Identifier	conY		3232862	1					
ANR	3232904	AssignmentExpression	* conY = NULL		3232862	2		=			
ANR	3232905	Identifier	NULL		3232862	0					
ANR	3232906	Identifier	NULL		3232862	1					
ANR	3232907	Statement	static	1845:4:60892:60897	3232862	6	True				
ANR	3232908	IdentifierDeclStatement	context * conU = NULL ;	1845:11:60899:60919	3232862	7	True				
ANR	3232909	IdentifierDecl	* conU = NULL		3232862	0					
ANR	3232910	IdentifierDeclType	context *		3232862	0					
ANR	3232911	Identifier	conU		3232862	1					
ANR	3232912	AssignmentExpression	* conU = NULL		3232862	2		=			
ANR	3232913	Identifier	NULL		3232862	0					
ANR	3232914	Identifier	NULL		3232862	1					
ANR	3232915	Statement	static	1846:4:60925:60930	3232862	8	True				
ANR	3232916	IdentifierDeclStatement	context * conV = NULL ;	1846:11:60932:60952	3232862	9	True				
ANR	3232917	IdentifierDecl	* conV = NULL		3232862	0					
ANR	3232918	IdentifierDeclType	context *		3232862	0					
ANR	3232919	Identifier	conV		3232862	1					
ANR	3232920	AssignmentExpression	* conV = NULL		3232862	2		=			
ANR	3232921	Identifier	NULL		3232862	0					
ANR	3232922	Identifier	NULL		3232862	1					
ANR	3232923	Statement	static	1847:4:60958:60963	3232862	10	True				
ANR	3232924	IdentifierDeclStatement	context * conA = NULL ;	1847:11:60965:60985	3232862	11	True				
ANR	3232925	IdentifierDecl	* conA = NULL		3232862	0					
ANR	3232926	IdentifierDeclType	context *		3232862	0					
ANR	3232927	Identifier	conA		3232862	1					
ANR	3232928	AssignmentExpression	* conA = NULL		3232862	2		=			
ANR	3232929	Identifier	NULL		3232862	0					
ANR	3232930	Identifier	NULL		3232862	1					
ANR	3232931	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1848:4:60991:61041	3232862	12	True				
ANR	3232932	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3232862	0					
ANR	3232933	IdentifierDeclType	context *		3232862	0					
ANR	3232934	Identifier	con		3232862	1					
ANR	3232935	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3232862	2		=			
ANR	3232936	Identifier	con		3232862	0					
ANR	3232937	CastExpression	( context * ) jxr_get_user_data ( image )		3232862	1					
ANR	3232938	CastTarget	context *		3232862	0					
ANR	3232939	CallExpression	jxr_get_user_data ( image )		3232862	1					
ANR	3232940	Callee	jxr_get_user_data		3232862	0					
ANR	3232941	Identifier	jxr_get_user_data		3232862	0					
ANR	3232942	ArgumentList	image		3232862	1					
ANR	3232943	Argument	image		3232862	0					
ANR	3232944	Identifier	image		3232862	0					
ANR	3232945	IfStatement	if ( con -> file == 0 )		3232862	13					
ANR	3232946	Condition	con -> file == 0	1851:8:61057:61068	3232862	0	True				
ANR	3232947	EqualityExpression	con -> file == 0		3232862	0		==			
ANR	3232948	PtrMemberAccess	con -> file		3232862	0					
ANR	3232949	Identifier	con		3232862	0					
ANR	3232950	Identifier	file		3232862	1					
ANR	3232951	PrimaryExpression	0		3232862	1					
ANR	3232952	CompoundStatement		17:4:540:540	3232862	1					
ANR	3232953	ExpressionStatement	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )	1853:8:61085:61130	3232862	0	True				
ANR	3232954	AssignmentExpression	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )		3232862	0		=			
ANR	3232955	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3232956	Identifier	con		3232862	0					
ANR	3232957	Identifier	alpha		3232862	1					
ANR	3232958	CallExpression	jxr_get_ALPHACHANNEL_FLAG ( image )		3232862	1					
ANR	3232959	Callee	jxr_get_ALPHACHANNEL_FLAG		3232862	0					
ANR	3232960	Identifier	jxr_get_ALPHACHANNEL_FLAG		3232862	0					
ANR	3232961	ArgumentList	image		3232862	1					
ANR	3232962	Argument	image		3232862	0					
ANR	3232963	Identifier	image		3232862	0					
ANR	3232964	ExpressionStatement	conY = ( context * ) malloc ( sizeof ( context ) )	1855:8:61149:61190	3232862	1	True				
ANR	3232965	AssignmentExpression	conY = ( context * ) malloc ( sizeof ( context ) )		3232862	0		=			
ANR	3232966	Identifier	conY		3232862	0					
ANR	3232967	CastExpression	( context * ) malloc ( sizeof ( context ) )		3232862	1					
ANR	3232968	CastTarget	context *		3232862	0					
ANR	3232969	CallExpression	malloc ( sizeof ( context ) )		3232862	1					
ANR	3232970	Callee	malloc		3232862	0					
ANR	3232971	Identifier	malloc		3232862	0					
ANR	3232972	ArgumentList	sizeof ( context )		3232862	1					
ANR	3232973	Argument	sizeof ( context )		3232862	0					
ANR	3232974	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3232975	Sizeof	sizeof		3232862	0					
ANR	3232976	SizeofOperand	context		3232862	1					
ANR	3232977	ExpressionStatement	conU = ( context * ) malloc ( sizeof ( context ) )	1856:8:61200:61241	3232862	2	True				
ANR	3232978	AssignmentExpression	conU = ( context * ) malloc ( sizeof ( context ) )		3232862	0		=			
ANR	3232979	Identifier	conU		3232862	0					
ANR	3232980	CastExpression	( context * ) malloc ( sizeof ( context ) )		3232862	1					
ANR	3232981	CastTarget	context *		3232862	0					
ANR	3232982	CallExpression	malloc ( sizeof ( context ) )		3232862	1					
ANR	3232983	Callee	malloc		3232862	0					
ANR	3232984	Identifier	malloc		3232862	0					
ANR	3232985	ArgumentList	sizeof ( context )		3232862	1					
ANR	3232986	Argument	sizeof ( context )		3232862	0					
ANR	3232987	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3232988	Sizeof	sizeof		3232862	0					
ANR	3232989	SizeofOperand	context		3232862	1					
ANR	3232990	ExpressionStatement	conV = ( context * ) malloc ( sizeof ( context ) )	1857:8:61251:61292	3232862	3	True				
ANR	3232991	AssignmentExpression	conV = ( context * ) malloc ( sizeof ( context ) )		3232862	0		=			
ANR	3232992	Identifier	conV		3232862	0					
ANR	3232993	CastExpression	( context * ) malloc ( sizeof ( context ) )		3232862	1					
ANR	3232994	CastTarget	context *		3232862	0					
ANR	3232995	CallExpression	malloc ( sizeof ( context ) )		3232862	1					
ANR	3232996	Callee	malloc		3232862	0					
ANR	3232997	Identifier	malloc		3232862	0					
ANR	3232998	ArgumentList	sizeof ( context )		3232862	1					
ANR	3232999	Argument	sizeof ( context )		3232862	0					
ANR	3233000	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3233001	Sizeof	sizeof		3232862	0					
ANR	3233002	SizeofOperand	context		3232862	1					
ANR	3233003	IfStatement	if ( con -> alpha )		3232862	4					
ANR	3233004	Condition	con -> alpha	1858:11:61305:61314	3232862	0	True				
ANR	3233005	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3233006	Identifier	con		3232862	0					
ANR	3233007	Identifier	alpha		3232862	1					
ANR	3233008	ExpressionStatement	conA = ( context * ) malloc ( sizeof ( context ) )	1859:12:61329:61370	3232862	1	True				
ANR	3233009	AssignmentExpression	conA = ( context * ) malloc ( sizeof ( context ) )		3232862	0		=			
ANR	3233010	Identifier	conA		3232862	0					
ANR	3233011	CastExpression	( context * ) malloc ( sizeof ( context ) )		3232862	1					
ANR	3233012	CastTarget	context *		3232862	0					
ANR	3233013	CallExpression	malloc ( sizeof ( context ) )		3232862	1					
ANR	3233014	Callee	malloc		3232862	0					
ANR	3233015	Identifier	malloc		3232862	0					
ANR	3233016	ArgumentList	sizeof ( context )		3232862	1					
ANR	3233017	Argument	sizeof ( context )		3232862	0					
ANR	3233018	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3233019	Sizeof	sizeof		3232862	0					
ANR	3233020	SizeofOperand	context		3232862	1					
ANR	3233021	ExpressionStatement	"memcpy ( conY , con , sizeof ( context ) )"	1860:8:61380:61414	3232862	5	True				
ANR	3233022	CallExpression	"memcpy ( conY , con , sizeof ( context ) )"		3232862	0					
ANR	3233023	Callee	memcpy		3232862	0					
ANR	3233024	Identifier	memcpy		3232862	0					
ANR	3233025	ArgumentList	conY		3232862	1					
ANR	3233026	Argument	conY		3232862	0					
ANR	3233027	Identifier	conY		3232862	0					
ANR	3233028	Argument	con		3232862	1					
ANR	3233029	Identifier	con		3232862	0					
ANR	3233030	Argument	sizeof ( context )		3232862	2					
ANR	3233031	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3233032	Sizeof	sizeof		3232862	0					
ANR	3233033	SizeofOperand	context		3232862	1					
ANR	3233034	ExpressionStatement	"memcpy ( conU , con , sizeof ( context ) )"	1861:8:61424:61458	3232862	6	True				
ANR	3233035	CallExpression	"memcpy ( conU , con , sizeof ( context ) )"		3232862	0					
ANR	3233036	Callee	memcpy		3232862	0					
ANR	3233037	Identifier	memcpy		3232862	0					
ANR	3233038	ArgumentList	conU		3232862	1					
ANR	3233039	Argument	conU		3232862	0					
ANR	3233040	Identifier	conU		3232862	0					
ANR	3233041	Argument	con		3232862	1					
ANR	3233042	Identifier	con		3232862	0					
ANR	3233043	Argument	sizeof ( context )		3232862	2					
ANR	3233044	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3233045	Sizeof	sizeof		3232862	0					
ANR	3233046	SizeofOperand	context		3232862	1					
ANR	3233047	ExpressionStatement	"memcpy ( conV , con , sizeof ( context ) )"	1862:8:61468:61502	3232862	7	True				
ANR	3233048	CallExpression	"memcpy ( conV , con , sizeof ( context ) )"		3232862	0					
ANR	3233049	Callee	memcpy		3232862	0					
ANR	3233050	Identifier	memcpy		3232862	0					
ANR	3233051	ArgumentList	conV		3232862	1					
ANR	3233052	Argument	conV		3232862	0					
ANR	3233053	Identifier	conV		3232862	0					
ANR	3233054	Argument	con		3232862	1					
ANR	3233055	Identifier	con		3232862	0					
ANR	3233056	Argument	sizeof ( context )		3232862	2					
ANR	3233057	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3233058	Sizeof	sizeof		3232862	0					
ANR	3233059	SizeofOperand	context		3232862	1					
ANR	3233060	IfStatement	if ( con -> alpha )		3232862	8					
ANR	3233061	Condition	con -> alpha	1863:11:61515:61524	3232862	0	True				
ANR	3233062	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3233063	Identifier	con		3232862	0					
ANR	3233064	Identifier	alpha		3232862	1					
ANR	3233065	ExpressionStatement	"memcpy ( conA , con , sizeof ( context ) )"	1864:12:61539:61573	3232862	1	True				
ANR	3233066	CallExpression	"memcpy ( conA , con , sizeof ( context ) )"		3232862	0					
ANR	3233067	Callee	memcpy		3232862	0					
ANR	3233068	Identifier	memcpy		3232862	0					
ANR	3233069	ArgumentList	conA		3232862	1					
ANR	3233070	Argument	conA		3232862	0					
ANR	3233071	Identifier	conA		3232862	0					
ANR	3233072	Argument	con		3232862	1					
ANR	3233073	Identifier	con		3232862	0					
ANR	3233074	Argument	sizeof ( context )		3232862	2					
ANR	3233075	SizeofExpression	sizeof ( context )		3232862	0					
ANR	3233076	Sizeof	sizeof		3232862	0					
ANR	3233077	SizeofOperand	context		3232862	1					
ANR	3233078	ExpressionStatement	"conY -> name = ""Y.raw"""	1865:8:61583:61603	3232862	9	True				
ANR	3233079	AssignmentExpression	"conY -> name = ""Y.raw"""		3232862	0		=			
ANR	3233080	PtrMemberAccess	conY -> name		3232862	0					
ANR	3233081	Identifier	conY		3232862	0					
ANR	3233082	Identifier	name		3232862	1					
ANR	3233083	PrimaryExpression	"""Y.raw"""		3232862	1					
ANR	3233084	ExpressionStatement	"conU -> name = ""U.raw"""	1866:8:61613:61633	3232862	10	True				
ANR	3233085	AssignmentExpression	"conU -> name = ""U.raw"""		3232862	0		=			
ANR	3233086	PtrMemberAccess	conU -> name		3232862	0					
ANR	3233087	Identifier	conU		3232862	0					
ANR	3233088	Identifier	name		3232862	1					
ANR	3233089	PrimaryExpression	"""U.raw"""		3232862	1					
ANR	3233090	ExpressionStatement	"conV -> name = ""V.raw"""	1867:8:61643:61663	3232862	11	True				
ANR	3233091	AssignmentExpression	"conV -> name = ""V.raw"""		3232862	0		=			
ANR	3233092	PtrMemberAccess	conV -> name		3232862	0					
ANR	3233093	Identifier	conV		3232862	0					
ANR	3233094	Identifier	name		3232862	1					
ANR	3233095	PrimaryExpression	"""V.raw"""		3232862	1					
ANR	3233096	IfStatement	if ( con -> alpha )		3232862	12					
ANR	3233097	Condition	con -> alpha	1868:11:61676:61685	3232862	0	True				
ANR	3233098	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3233099	Identifier	con		3232862	0					
ANR	3233100	Identifier	alpha		3232862	1					
ANR	3233101	ExpressionStatement	"conA -> name = ""A.raw"""	1869:12:61700:61720	3232862	1	True				
ANR	3233102	AssignmentExpression	"conA -> name = ""A.raw"""		3232862	0		=			
ANR	3233103	PtrMemberAccess	conA -> name		3232862	0					
ANR	3233104	Identifier	conA		3232862	0					
ANR	3233105	Identifier	name		3232862	1					
ANR	3233106	PrimaryExpression	"""A.raw"""		3232862	1					
ANR	3233107	ExpressionStatement	con -> left_pad = image -> window_extra_left	1871:8:61735:61775	3232862	13	True				
ANR	3233108	AssignmentExpression	con -> left_pad = image -> window_extra_left		3232862	0		=			
ANR	3233109	PtrMemberAccess	con -> left_pad		3232862	0					
ANR	3233110	Identifier	con		3232862	0					
ANR	3233111	Identifier	left_pad		3232862	1					
ANR	3233112	PtrMemberAccess	image -> window_extra_left		3232862	1					
ANR	3233113	Identifier	image		3232862	0					
ANR	3233114	Identifier	window_extra_left		3232862	1					
ANR	3233115	ExpressionStatement	con -> top_pad_remaining = image -> window_extra_top	1872:8:61785:61833	3232862	14	True				
ANR	3233116	AssignmentExpression	con -> top_pad_remaining = image -> window_extra_top		3232862	0		=			
ANR	3233117	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3233118	Identifier	con		3232862	0					
ANR	3233119	Identifier	top_pad_remaining		3232862	1					
ANR	3233120	PtrMemberAccess	image -> window_extra_top		3232862	1					
ANR	3233121	Identifier	image		3232862	0					
ANR	3233122	Identifier	window_extra_top		3232862	1					
ANR	3233123	ExpressionStatement	con -> top_pad = image -> window_extra_top	1873:8:61843:61881	3232862	15	True				
ANR	3233124	AssignmentExpression	con -> top_pad = image -> window_extra_top		3232862	0		=			
ANR	3233125	PtrMemberAccess	con -> top_pad		3232862	0					
ANR	3233126	Identifier	con		3232862	0					
ANR	3233127	Identifier	top_pad		3232862	1					
ANR	3233128	PtrMemberAccess	image -> window_extra_top		3232862	1					
ANR	3233129	Identifier	image		3232862	0					
ANR	3233130	Identifier	window_extra_top		3232862	1					
ANR	3233131	ExpressionStatement	con -> ncomp = conY -> ncomp = conU -> ncomp = conV -> ncomp = 1	1875:8:61900:61955	3232862	16	True				
ANR	3233132	AssignmentExpression	con -> ncomp = conY -> ncomp = conU -> ncomp = conV -> ncomp = 1		3232862	0		=			
ANR	3233133	PtrMemberAccess	con -> ncomp		3232862	0					
ANR	3233134	Identifier	con		3232862	0					
ANR	3233135	Identifier	ncomp		3232862	1					
ANR	3233136	AssignmentExpression	conY -> ncomp = conU -> ncomp = conV -> ncomp = 1		3232862	1		=			
ANR	3233137	PtrMemberAccess	conY -> ncomp		3232862	0					
ANR	3233138	Identifier	conY		3232862	0					
ANR	3233139	Identifier	ncomp		3232862	1					
ANR	3233140	AssignmentExpression	conU -> ncomp = conV -> ncomp = 1		3232862	1		=			
ANR	3233141	PtrMemberAccess	conU -> ncomp		3232862	0					
ANR	3233142	Identifier	conU		3232862	0					
ANR	3233143	Identifier	ncomp		3232862	1					
ANR	3233144	AssignmentExpression	conV -> ncomp = 1		3232862	1		=			
ANR	3233145	PtrMemberAccess	conV -> ncomp		3232862	0					
ANR	3233146	Identifier	conV		3232862	0					
ANR	3233147	Identifier	ncomp		3232862	1					
ANR	3233148	PrimaryExpression	1		3232862	1					
ANR	3233149	IfStatement	if ( con -> alpha )		3232862	17					
ANR	3233150	Condition	con -> alpha	1876:11:61968:61977	3232862	0	True				
ANR	3233151	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3233152	Identifier	con		3232862	0					
ANR	3233153	Identifier	alpha		3232862	1					
ANR	3233154	ExpressionStatement	conA -> ncomp = 1	1877:12:61992:62007	3232862	1	True				
ANR	3233155	AssignmentExpression	conA -> ncomp = 1		3232862	0		=			
ANR	3233156	PtrMemberAccess	conA -> ncomp		3232862	0					
ANR	3233157	Identifier	conA		3232862	0					
ANR	3233158	Identifier	ncomp		3232862	1					
ANR	3233159	PrimaryExpression	1		3232862	1					
ANR	3233160	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1878:8:62017:62261	3232862	18	True				
ANR	3233161	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3232862	0					
ANR	3233162	Callee	start_output_file		3232862	0					
ANR	3233163	Identifier	start_output_file		3232862	0					
ANR	3233164	ArgumentList	con		3232862	1					
ANR	3233165	Argument	con		3232862	0					
ANR	3233166	Identifier	con		3232862	0					
ANR	3233167	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	1					
ANR	3233168	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233169	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233170	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233171	ArgumentList	image		3232862	1					
ANR	3233172	Argument	image		3232862	0					
ANR	3233173	Identifier	image		3232862	0					
ANR	3233174	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	2					
ANR	3233175	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233176	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233177	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233178	ArgumentList	image		3232862	1					
ANR	3233179	Argument	image		3232862	0					
ANR	3233180	Identifier	image		3232862	0					
ANR	3233181	Argument	jxr_get_IMAGE_WIDTH ( image )		3232862	3					
ANR	3233182	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233183	Callee	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233184	Identifier	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233185	ArgumentList	image		3232862	1					
ANR	3233186	Argument	image		3232862	0					
ANR	3233187	Identifier	image		3232862	0					
ANR	3233188	Argument	jxr_get_IMAGE_HEIGHT ( image )		3232862	4					
ANR	3233189	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233190	Callee	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233191	Identifier	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233192	ArgumentList	image		3232862	1					
ANR	3233193	Argument	image		3232862	0					
ANR	3233194	Identifier	image		3232862	0					
ANR	3233195	Argument	1		3232862	5					
ANR	3233196	PrimaryExpression	1		3232862	0					
ANR	3233197	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	6					
ANR	3233198	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	0					
ANR	3233199	Callee	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233200	Identifier	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233201	ArgumentList	image		3232862	1					
ANR	3233202	Argument	image		3232862	0					
ANR	3233203	Identifier	image		3232862	0					
ANR	3233204	Argument	jxr_get_pixel_format ( image )		3232862	7					
ANR	3233205	CallExpression	jxr_get_pixel_format ( image )		3232862	0					
ANR	3233206	Callee	jxr_get_pixel_format		3232862	0					
ANR	3233207	Identifier	jxr_get_pixel_format		3232862	0					
ANR	3233208	ArgumentList	image		3232862	1					
ANR	3233209	Argument	image		3232862	0					
ANR	3233210	Identifier	image		3232862	0					
ANR	3233211	ExpressionStatement	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1881:8:62271:62516	3232862	19	True				
ANR	3233212	CallExpression	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3232862	0					
ANR	3233213	Callee	start_output_file		3232862	0					
ANR	3233214	Identifier	start_output_file		3232862	0					
ANR	3233215	ArgumentList	conY		3232862	1					
ANR	3233216	Argument	conY		3232862	0					
ANR	3233217	Identifier	conY		3232862	0					
ANR	3233218	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	1					
ANR	3233219	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233220	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233221	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233222	ArgumentList	image		3232862	1					
ANR	3233223	Argument	image		3232862	0					
ANR	3233224	Identifier	image		3232862	0					
ANR	3233225	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	2					
ANR	3233226	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233227	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233228	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233229	ArgumentList	image		3232862	1					
ANR	3233230	Argument	image		3232862	0					
ANR	3233231	Identifier	image		3232862	0					
ANR	3233232	Argument	jxr_get_IMAGE_WIDTH ( image )		3232862	3					
ANR	3233233	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233234	Callee	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233235	Identifier	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233236	ArgumentList	image		3232862	1					
ANR	3233237	Argument	image		3232862	0					
ANR	3233238	Identifier	image		3232862	0					
ANR	3233239	Argument	jxr_get_IMAGE_HEIGHT ( image )		3232862	4					
ANR	3233240	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233241	Callee	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233242	Identifier	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233243	ArgumentList	image		3232862	1					
ANR	3233244	Argument	image		3232862	0					
ANR	3233245	Identifier	image		3232862	0					
ANR	3233246	Argument	1		3232862	5					
ANR	3233247	PrimaryExpression	1		3232862	0					
ANR	3233248	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	6					
ANR	3233249	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	0					
ANR	3233250	Callee	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233251	Identifier	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233252	ArgumentList	image		3232862	1					
ANR	3233253	Argument	image		3232862	0					
ANR	3233254	Identifier	image		3232862	0					
ANR	3233255	Argument	jxr_get_pixel_format ( image )		3232862	7					
ANR	3233256	CallExpression	jxr_get_pixel_format ( image )		3232862	0					
ANR	3233257	Callee	jxr_get_pixel_format		3232862	0					
ANR	3233258	Identifier	jxr_get_pixel_format		3232862	0					
ANR	3233259	ArgumentList	image		3232862	1					
ANR	3233260	Argument	image		3232862	0					
ANR	3233261	Identifier	image		3232862	0					
ANR	3233262	ExpressionStatement	"start_output_file ( conU , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1884:8:62526:62771	3232862	20	True				
ANR	3233263	CallExpression	"start_output_file ( conU , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3232862	0					
ANR	3233264	Callee	start_output_file		3232862	0					
ANR	3233265	Identifier	start_output_file		3232862	0					
ANR	3233266	ArgumentList	conU		3232862	1					
ANR	3233267	Argument	conU		3232862	0					
ANR	3233268	Identifier	conU		3232862	0					
ANR	3233269	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	1					
ANR	3233270	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233271	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233272	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233273	ArgumentList	image		3232862	1					
ANR	3233274	Argument	image		3232862	0					
ANR	3233275	Identifier	image		3232862	0					
ANR	3233276	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	2					
ANR	3233277	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233278	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233279	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233280	ArgumentList	image		3232862	1					
ANR	3233281	Argument	image		3232862	0					
ANR	3233282	Identifier	image		3232862	0					
ANR	3233283	Argument	jxr_get_IMAGE_WIDTH ( image )		3232862	3					
ANR	3233284	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233285	Callee	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233286	Identifier	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233287	ArgumentList	image		3232862	1					
ANR	3233288	Argument	image		3232862	0					
ANR	3233289	Identifier	image		3232862	0					
ANR	3233290	Argument	jxr_get_IMAGE_HEIGHT ( image )		3232862	4					
ANR	3233291	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233292	Callee	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233293	Identifier	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233294	ArgumentList	image		3232862	1					
ANR	3233295	Argument	image		3232862	0					
ANR	3233296	Identifier	image		3232862	0					
ANR	3233297	Argument	1		3232862	5					
ANR	3233298	PrimaryExpression	1		3232862	0					
ANR	3233299	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	6					
ANR	3233300	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	0					
ANR	3233301	Callee	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233302	Identifier	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233303	ArgumentList	image		3232862	1					
ANR	3233304	Argument	image		3232862	0					
ANR	3233305	Identifier	image		3232862	0					
ANR	3233306	Argument	jxr_get_pixel_format ( image )		3232862	7					
ANR	3233307	CallExpression	jxr_get_pixel_format ( image )		3232862	0					
ANR	3233308	Callee	jxr_get_pixel_format		3232862	0					
ANR	3233309	Identifier	jxr_get_pixel_format		3232862	0					
ANR	3233310	ArgumentList	image		3232862	1					
ANR	3233311	Argument	image		3232862	0					
ANR	3233312	Identifier	image		3232862	0					
ANR	3233313	ExpressionStatement	"start_output_file ( conV , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1887:8:62781:63026	3232862	21	True				
ANR	3233314	CallExpression	"start_output_file ( conV , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3232862	0					
ANR	3233315	Callee	start_output_file		3232862	0					
ANR	3233316	Identifier	start_output_file		3232862	0					
ANR	3233317	ArgumentList	conV		3232862	1					
ANR	3233318	Argument	conV		3232862	0					
ANR	3233319	Identifier	conV		3232862	0					
ANR	3233320	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	1					
ANR	3233321	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233322	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233323	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233324	ArgumentList	image		3232862	1					
ANR	3233325	Argument	image		3232862	0					
ANR	3233326	Identifier	image		3232862	0					
ANR	3233327	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	2					
ANR	3233328	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233329	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233330	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233331	ArgumentList	image		3232862	1					
ANR	3233332	Argument	image		3232862	0					
ANR	3233333	Identifier	image		3232862	0					
ANR	3233334	Argument	jxr_get_IMAGE_WIDTH ( image )		3232862	3					
ANR	3233335	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233336	Callee	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233337	Identifier	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233338	ArgumentList	image		3232862	1					
ANR	3233339	Argument	image		3232862	0					
ANR	3233340	Identifier	image		3232862	0					
ANR	3233341	Argument	jxr_get_IMAGE_HEIGHT ( image )		3232862	4					
ANR	3233342	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233343	Callee	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233344	Identifier	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233345	ArgumentList	image		3232862	1					
ANR	3233346	Argument	image		3232862	0					
ANR	3233347	Identifier	image		3232862	0					
ANR	3233348	Argument	1		3232862	5					
ANR	3233349	PrimaryExpression	1		3232862	0					
ANR	3233350	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	6					
ANR	3233351	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	0					
ANR	3233352	Callee	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233353	Identifier	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233354	ArgumentList	image		3232862	1					
ANR	3233355	Argument	image		3232862	0					
ANR	3233356	Identifier	image		3232862	0					
ANR	3233357	Argument	jxr_get_pixel_format ( image )		3232862	7					
ANR	3233358	CallExpression	jxr_get_pixel_format ( image )		3232862	0					
ANR	3233359	Callee	jxr_get_pixel_format		3232862	0					
ANR	3233360	Identifier	jxr_get_pixel_format		3232862	0					
ANR	3233361	ArgumentList	image		3232862	1					
ANR	3233362	Argument	image		3232862	0					
ANR	3233363	Identifier	image		3232862	0					
ANR	3233364	IfStatement	if ( con -> alpha )		3232862	22					
ANR	3233365	Condition	con -> alpha	1890:11:63039:63048	3232862	0	True				
ANR	3233366	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3233367	Identifier	con		3232862	0					
ANR	3233368	Identifier	alpha		3232862	1					
ANR	3233369	ExpressionStatement	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1891:12:63063:63312	3232862	1	True				
ANR	3233370	CallExpression	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3232862	0					
ANR	3233371	Callee	start_output_file		3232862	0					
ANR	3233372	Identifier	start_output_file		3232862	0					
ANR	3233373	ArgumentList	conA		3232862	1					
ANR	3233374	Argument	conA		3232862	0					
ANR	3233375	Identifier	conA		3232862	0					
ANR	3233376	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	1					
ANR	3233377	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233378	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233379	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3232862	0					
ANR	3233380	ArgumentList	image		3232862	1					
ANR	3233381	Argument	image		3232862	0					
ANR	3233382	Identifier	image		3232862	0					
ANR	3233383	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	2					
ANR	3233384	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233385	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233386	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862	0					
ANR	3233387	ArgumentList	image		3232862	1					
ANR	3233388	Argument	image		3232862	0					
ANR	3233389	Identifier	image		3232862	0					
ANR	3233390	Argument	jxr_get_IMAGE_WIDTH ( image )		3232862	3					
ANR	3233391	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3232862	0					
ANR	3233392	Callee	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233393	Identifier	jxr_get_IMAGE_WIDTH		3232862	0					
ANR	3233394	ArgumentList	image		3232862	1					
ANR	3233395	Argument	image		3232862	0					
ANR	3233396	Identifier	image		3232862	0					
ANR	3233397	Argument	jxr_get_IMAGE_HEIGHT ( image )		3232862	4					
ANR	3233398	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3232862	0					
ANR	3233399	Callee	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233400	Identifier	jxr_get_IMAGE_HEIGHT		3232862	0					
ANR	3233401	ArgumentList	image		3232862	1					
ANR	3233402	Argument	image		3232862	0					
ANR	3233403	Identifier	image		3232862	0					
ANR	3233404	Argument	1		3232862	5					
ANR	3233405	PrimaryExpression	1		3232862	0					
ANR	3233406	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	6					
ANR	3233407	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3232862	0					
ANR	3233408	Callee	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233409	Identifier	jxr_get_OUTPUT_BITDEPTH		3232862	0					
ANR	3233410	ArgumentList	image		3232862	1					
ANR	3233411	Argument	image		3232862	0					
ANR	3233412	Identifier	image		3232862	0					
ANR	3233413	Argument	jxr_get_pixel_format ( image )		3232862	7					
ANR	3233414	CallExpression	jxr_get_pixel_format ( image )		3232862	0					
ANR	3233415	Callee	jxr_get_pixel_format		3232862	0					
ANR	3233416	Identifier	jxr_get_pixel_format		3232862	0					
ANR	3233417	ArgumentList	image		3232862	1					
ANR	3233418	Argument	image		3232862	0					
ANR	3233419	Identifier	image		3232862	0					
ANR	3233420	IdentifierDeclStatement	int idx ;	1897:4:63326:63333	3232862	14	True				
ANR	3233421	IdentifierDecl	idx		3232862	0					
ANR	3233422	IdentifierDeclType	int		3232862	0					
ANR	3233423	Identifier	idx		3232862	1					
ANR	3233424	IdentifierDeclStatement	int strip_blocks = ( image -> extended_width ) / 16 ;	1898:4:63339:63384	3232862	15	True				
ANR	3233425	IdentifierDecl	strip_blocks = ( image -> extended_width ) / 16		3232862	0					
ANR	3233426	IdentifierDeclType	int		3232862	0					
ANR	3233427	Identifier	strip_blocks		3232862	1					
ANR	3233428	AssignmentExpression	strip_blocks = ( image -> extended_width ) / 16		3232862	2		=			
ANR	3233429	Identifier	strip_blocks		3232862	0					
ANR	3233430	MultiplicativeExpression	( image -> extended_width ) / 16		3232862	1		/			
ANR	3233431	PtrMemberAccess	image -> extended_width		3232862	0					
ANR	3233432	Identifier	image		3232862	0					
ANR	3233433	Identifier	extended_width		3232862	1					
ANR	3233434	PrimaryExpression	16		3232862	1					
ANR	3233435	IdentifierDeclStatement	int dy = 16 * strip_blocks ;	1899:4:63390:63414	3232862	16	True				
ANR	3233436	IdentifierDecl	dy = 16 * strip_blocks		3232862	0					
ANR	3233437	IdentifierDeclType	int		3232862	0					
ANR	3233438	Identifier	dy		3232862	1					
ANR	3233439	AssignmentExpression	dy = 16 * strip_blocks		3232862	2		=			
ANR	3233440	Identifier	dy		3232862	0					
ANR	3233441	MultiplicativeExpression	16 * strip_blocks		3232862	1		*			
ANR	3233442	PrimaryExpression	16		3232862	0					
ANR	3233443	Identifier	strip_blocks		3232862	1					
ANR	3233444	IfStatement	if ( con -> bpi == 8 )		3232862	17					
ANR	3233445	Condition	con -> bpi == 8	1901:8:63429:63441	3232862	0	True				
ANR	3233446	EqualityExpression	con -> bpi == 8		3232862	0		==			
ANR	3233447	PtrMemberAccess	con -> bpi		3232862	0					
ANR	3233448	Identifier	con		3232862	0					
ANR	3233449	Identifier	bpi		3232862	1					
ANR	3233450	PrimaryExpression	8		3232862	1					
ANR	3233451	CompoundStatement		71:8:2982:3025	3232862	1					
ANR	3233452	IdentifierDeclStatement	int xDiv = 16 ;	1903:8:63455:63468	3232862	0	True				
ANR	3233453	IdentifierDecl	xDiv = 16		3232862	0					
ANR	3233454	IdentifierDeclType	int		3232862	0					
ANR	3233455	Identifier	xDiv		3232862	1					
ANR	3233456	AssignmentExpression	xDiv = 16		3232862	2		=			
ANR	3233457	Identifier	xDiv		3232862	0					
ANR	3233458	PrimaryExpression	16		3232862	1					
ANR	3233459	IdentifierDeclStatement	int yDiv = 16 ;	1904:8:63478:63491	3232862	1	True				
ANR	3233460	IdentifierDecl	yDiv = 16		3232862	0					
ANR	3233461	IdentifierDeclType	int		3232862	0					
ANR	3233462	Identifier	yDiv		3232862	1					
ANR	3233463	AssignmentExpression	yDiv = 16		3232862	2		=			
ANR	3233464	Identifier	yDiv		3232862	0					
ANR	3233465	PrimaryExpression	16		3232862	1					
ANR	3233466	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conY -> buf + xDiv * mx ;	1906:8:63517:63560	3232862	2	True				
ANR	3233467	IdentifierDecl	* dp = ( uint8_t * ) conY -> buf + xDiv * mx		3232862	0					
ANR	3233468	IdentifierDeclType	uint8_t *		3232862	0					
ANR	3233469	Identifier	dp		3232862	1					
ANR	3233470	AssignmentExpression	* dp = ( uint8_t * ) conY -> buf + xDiv * mx		3232862	2		=			
ANR	3233471	Identifier	dp		3232862	0					
ANR	3233472	AdditiveExpression	( uint8_t * ) conY -> buf + xDiv * mx		3232862	1		+			
ANR	3233473	CastExpression	( uint8_t * ) conY -> buf		3232862	0					
ANR	3233474	CastTarget	uint8_t *		3232862	0					
ANR	3233475	PtrMemberAccess	conY -> buf		3232862	1					
ANR	3233476	Identifier	conY		3232862	0					
ANR	3233477	Identifier	buf		3232862	1					
ANR	3233478	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233479	Identifier	xDiv		3232862	0					
ANR	3233480	Identifier	mx		3232862	1					
ANR	3233481	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	3					
ANR	3233482	ForInit	idx = 0 ;	1907:13:63575:63582	3232862	0	True				
ANR	3233483	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233484	Identifier	idx		3232862	0					
ANR	3233485	PrimaryExpression	0		3232862	1					
ANR	3233486	Condition	idx < xDiv * yDiv	1907:22:63584:63598	3232862	1	True				
ANR	3233487	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233488	Identifier	idx		3232862	0					
ANR	3233489	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233490	Identifier	xDiv		3232862	0					
ANR	3233491	Identifier	yDiv		3232862	1					
ANR	3233492	AssignmentExpression	idx += 1	1907:39:63601:63608	3232862	2	True	+=			
ANR	3233493	Identifier	idx		3232862	0					
ANR	3233494	PrimaryExpression	1		3232862	1					
ANR	3233495	CompoundStatement		73:12:3090:3126	3232862	3					
ANR	3233496	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1908:12:63625:63661	3232862	0	True				
ANR	3233497	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3233498	IdentifierDeclType	int		3232862	0					
ANR	3233499	Identifier	dix		3232862	1					
ANR	3233500	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3233501	Identifier	dix		3232862	0					
ANR	3233502	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3233503	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3233504	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3233505	Identifier	idx		3232862	0					
ANR	3233506	Identifier	xDiv		3232862	1					
ANR	3233507	Identifier	dy		3232862	1					
ANR	3233508	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3233509	Identifier	idx		3232862	0					
ANR	3233510	Identifier	xDiv		3232862	1					
ANR	3233511	ExpressionStatement	dp [ dix ] = dataY [ idx ]	1909:12:63687:63707	3232862	1	True				
ANR	3233512	AssignmentExpression	dp [ dix ] = dataY [ idx ]		3232862	0		=			
ANR	3233513	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3233514	Identifier	dp		3232862	0					
ANR	3233515	Identifier	dix		3232862	1					
ANR	3233516	ArrayIndexing	dataY [ idx ]		3232862	1					
ANR	3233517	Identifier	dataY		3232862	0					
ANR	3233518	Identifier	idx		3232862	1					
ANR	3233519	IfStatement	if ( isOutputYUV422 ( image ) )		3232862	4					
ANR	3233520	Condition	isOutputYUV422 ( image )	1912:11:63731:63751	3232862	0	True				
ANR	3233521	CallExpression	isOutputYUV422 ( image )		3232862	0					
ANR	3233522	Callee	isOutputYUV422		3232862	0					
ANR	3233523	Identifier	isOutputYUV422		3232862	0					
ANR	3233524	ArgumentList	image		3232862	1					
ANR	3233525	Argument	image		3232862	0					
ANR	3233526	Identifier	image		3232862	0					
ANR	3233527	CompoundStatement		78:8:3227:3227	3232862	1					
ANR	3233528	ExpressionStatement	dy = 8 * strip_blocks	1914:12:63776:63795	3232862	0	True				
ANR	3233529	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3233530	Identifier	dy		3232862	0					
ANR	3233531	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3233532	PrimaryExpression	8		3232862	0					
ANR	3233533	Identifier	strip_blocks		3232862	1					
ANR	3233534	ExpressionStatement	xDiv = 8	1915:12:63809:63817	3232862	1	True				
ANR	3233535	AssignmentExpression	xDiv = 8		3232862	0		=			
ANR	3233536	Identifier	xDiv		3232862	0					
ANR	3233537	PrimaryExpression	8		3232862	1					
ANR	3233538	IfStatement	if ( isOutputYUV420 ( image ) )		3232862	5					
ANR	3233539	Condition	isOutputYUV420 ( image )	1918:11:63849:63869	3232862	0	True				
ANR	3233540	CallExpression	isOutputYUV420 ( image )		3232862	0					
ANR	3233541	Callee	isOutputYUV420		3232862	0					
ANR	3233542	Identifier	isOutputYUV420		3232862	0					
ANR	3233543	ArgumentList	image		3232862	1					
ANR	3233544	Argument	image		3232862	0					
ANR	3233545	Identifier	image		3232862	0					
ANR	3233546	CompoundStatement		84:8:3345:3345	3232862	1					
ANR	3233547	ExpressionStatement	dy = 8 * strip_blocks	1920:12:63894:63913	3232862	0	True				
ANR	3233548	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3233549	Identifier	dy		3232862	0					
ANR	3233550	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3233551	PrimaryExpression	8		3232862	0					
ANR	3233552	Identifier	strip_blocks		3232862	1					
ANR	3233553	ExpressionStatement	xDiv = yDiv = 8	1921:12:63927:63942	3232862	1	True				
ANR	3233554	AssignmentExpression	xDiv = yDiv = 8		3232862	0		=			
ANR	3233555	Identifier	xDiv		3232862	0					
ANR	3233556	AssignmentExpression	yDiv = 8		3232862	1		=			
ANR	3233557	Identifier	yDiv		3232862	0					
ANR	3233558	PrimaryExpression	8		3232862	1					
ANR	3233559	ExpressionStatement	dp = ( uint8_t * ) conU -> buf + xDiv * mx	1925:8:63987:64021	3232862	6	True				
ANR	3233560	AssignmentExpression	dp = ( uint8_t * ) conU -> buf + xDiv * mx		3232862	0		=			
ANR	3233561	Identifier	dp		3232862	0					
ANR	3233562	AdditiveExpression	( uint8_t * ) conU -> buf + xDiv * mx		3232862	1		+			
ANR	3233563	CastExpression	( uint8_t * ) conU -> buf		3232862	0					
ANR	3233564	CastTarget	uint8_t *		3232862	0					
ANR	3233565	PtrMemberAccess	conU -> buf		3232862	1					
ANR	3233566	Identifier	conU		3232862	0					
ANR	3233567	Identifier	buf		3232862	1					
ANR	3233568	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233569	Identifier	xDiv		3232862	0					
ANR	3233570	Identifier	mx		3232862	1					
ANR	3233571	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	7					
ANR	3233572	ForInit	idx = 0 ;	1926:13:64036:64043	3232862	0	True				
ANR	3233573	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233574	Identifier	idx		3232862	0					
ANR	3233575	PrimaryExpression	0		3232862	1					
ANR	3233576	Condition	idx < xDiv * yDiv	1926:22:64045:64059	3232862	1	True				
ANR	3233577	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233578	Identifier	idx		3232862	0					
ANR	3233579	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233580	Identifier	xDiv		3232862	0					
ANR	3233581	Identifier	yDiv		3232862	1					
ANR	3233582	AssignmentExpression	idx += 1	1926:39:64062:64069	3232862	2	True	+=			
ANR	3233583	Identifier	idx		3232862	0					
ANR	3233584	PrimaryExpression	1		3232862	1					
ANR	3233585	CompoundStatement		92:12:3551:3587	3232862	3					
ANR	3233586	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1927:12:64086:64122	3232862	0	True				
ANR	3233587	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3233588	IdentifierDeclType	int		3232862	0					
ANR	3233589	Identifier	dix		3232862	1					
ANR	3233590	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3233591	Identifier	dix		3232862	0					
ANR	3233592	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3233593	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3233594	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3233595	Identifier	idx		3232862	0					
ANR	3233596	Identifier	xDiv		3232862	1					
ANR	3233597	Identifier	dy		3232862	1					
ANR	3233598	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3233599	Identifier	idx		3232862	0					
ANR	3233600	Identifier	xDiv		3232862	1					
ANR	3233601	ExpressionStatement	dp [ dix ] = dataU [ idx ]	1928:12:64148:64168	3232862	1	True				
ANR	3233602	AssignmentExpression	dp [ dix ] = dataU [ idx ]		3232862	0		=			
ANR	3233603	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3233604	Identifier	dp		3232862	0					
ANR	3233605	Identifier	dix		3232862	1					
ANR	3233606	ArrayIndexing	dataU [ idx ]		3232862	1					
ANR	3233607	Identifier	dataU		3232862	0					
ANR	3233608	Identifier	idx		3232862	1					
ANR	3233609	ExpressionStatement	dp = ( uint8_t * ) conV -> buf + xDiv * mx	1931:8:64204:64238	3232862	8	True				
ANR	3233610	AssignmentExpression	dp = ( uint8_t * ) conV -> buf + xDiv * mx		3232862	0		=			
ANR	3233611	Identifier	dp		3232862	0					
ANR	3233612	AdditiveExpression	( uint8_t * ) conV -> buf + xDiv * mx		3232862	1		+			
ANR	3233613	CastExpression	( uint8_t * ) conV -> buf		3232862	0					
ANR	3233614	CastTarget	uint8_t *		3232862	0					
ANR	3233615	PtrMemberAccess	conV -> buf		3232862	1					
ANR	3233616	Identifier	conV		3232862	0					
ANR	3233617	Identifier	buf		3232862	1					
ANR	3233618	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233619	Identifier	xDiv		3232862	0					
ANR	3233620	Identifier	mx		3232862	1					
ANR	3233621	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	9					
ANR	3233622	ForInit	idx = 0 ;	1932:13:64253:64260	3232862	0	True				
ANR	3233623	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233624	Identifier	idx		3232862	0					
ANR	3233625	PrimaryExpression	0		3232862	1					
ANR	3233626	Condition	idx < xDiv * yDiv	1932:22:64262:64276	3232862	1	True				
ANR	3233627	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233628	Identifier	idx		3232862	0					
ANR	3233629	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233630	Identifier	xDiv		3232862	0					
ANR	3233631	Identifier	yDiv		3232862	1					
ANR	3233632	AssignmentExpression	idx += 1	1932:39:64279:64286	3232862	2	True	+=			
ANR	3233633	Identifier	idx		3232862	0					
ANR	3233634	PrimaryExpression	1		3232862	1					
ANR	3233635	CompoundStatement		98:12:3768:3804	3232862	3					
ANR	3233636	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1933:12:64303:64339	3232862	0	True				
ANR	3233637	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3233638	IdentifierDeclType	int		3232862	0					
ANR	3233639	Identifier	dix		3232862	1					
ANR	3233640	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3233641	Identifier	dix		3232862	0					
ANR	3233642	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3233643	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3233644	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3233645	Identifier	idx		3232862	0					
ANR	3233646	Identifier	xDiv		3232862	1					
ANR	3233647	Identifier	dy		3232862	1					
ANR	3233648	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3233649	Identifier	idx		3232862	0					
ANR	3233650	Identifier	xDiv		3232862	1					
ANR	3233651	ExpressionStatement	dp [ dix ] = dataV [ idx ]	1934:12:64365:64385	3232862	1	True				
ANR	3233652	AssignmentExpression	dp [ dix ] = dataV [ idx ]		3232862	0		=			
ANR	3233653	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3233654	Identifier	dp		3232862	0					
ANR	3233655	Identifier	dix		3232862	1					
ANR	3233656	ArrayIndexing	dataV [ idx ]		3232862	1					
ANR	3233657	Identifier	dataV		3232862	0					
ANR	3233658	Identifier	idx		3232862	1					
ANR	3233659	IfStatement	if ( con -> alpha )		3232862	10					
ANR	3233660	Condition	con -> alpha	1937:11:64409:64418	3232862	0	True				
ANR	3233661	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3233662	Identifier	con		3232862	0					
ANR	3233663	Identifier	alpha		3232862	1					
ANR	3233664	CompoundStatement		103:8:3894:3894	3232862	1					
ANR	3233665	ExpressionStatement	xDiv = yDiv = 16	1939:12:64443:64459	3232862	0	True				
ANR	3233666	AssignmentExpression	xDiv = yDiv = 16		3232862	0		=			
ANR	3233667	Identifier	xDiv		3232862	0					
ANR	3233668	AssignmentExpression	yDiv = 16		3232862	1		=			
ANR	3233669	Identifier	yDiv		3232862	0					
ANR	3233670	PrimaryExpression	16		3232862	1					
ANR	3233671	ExpressionStatement	dy = 16 * strip_blocks	1940:12:64473:64493	3232862	1	True				
ANR	3233672	AssignmentExpression	dy = 16 * strip_blocks		3232862	0		=			
ANR	3233673	Identifier	dy		3232862	0					
ANR	3233674	MultiplicativeExpression	16 * strip_blocks		3232862	1		*			
ANR	3233675	PrimaryExpression	16		3232862	0					
ANR	3233676	Identifier	strip_blocks		3232862	1					
ANR	3233677	ExpressionStatement	dp = ( uint8_t * ) conA -> buf + xDiv * mx	1941:12:64507:64541	3232862	2	True				
ANR	3233678	AssignmentExpression	dp = ( uint8_t * ) conA -> buf + xDiv * mx		3232862	0		=			
ANR	3233679	Identifier	dp		3232862	0					
ANR	3233680	AdditiveExpression	( uint8_t * ) conA -> buf + xDiv * mx		3232862	1		+			
ANR	3233681	CastExpression	( uint8_t * ) conA -> buf		3232862	0					
ANR	3233682	CastTarget	uint8_t *		3232862	0					
ANR	3233683	PtrMemberAccess	conA -> buf		3232862	1					
ANR	3233684	Identifier	conA		3232862	0					
ANR	3233685	Identifier	buf		3232862	1					
ANR	3233686	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233687	Identifier	xDiv		3232862	0					
ANR	3233688	Identifier	mx		3232862	1					
ANR	3233689	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	3					
ANR	3233690	ForInit	idx = 0 ;	1942:17:64560:64567	3232862	0	True				
ANR	3233691	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233692	Identifier	idx		3232862	0					
ANR	3233693	PrimaryExpression	0		3232862	1					
ANR	3233694	Condition	idx < xDiv * yDiv	1942:26:64569:64583	3232862	1	True				
ANR	3233695	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233696	Identifier	idx		3232862	0					
ANR	3233697	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233698	Identifier	xDiv		3232862	0					
ANR	3233699	Identifier	yDiv		3232862	1					
ANR	3233700	AssignmentExpression	idx += 1	1942:43:64586:64593	3232862	2	True	+=			
ANR	3233701	Identifier	idx		3232862	0					
ANR	3233702	PrimaryExpression	1		3232862	1					
ANR	3233703	CompoundStatement		108:16:4079:4115	3232862	3					
ANR	3233704	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1943:16:64614:64650	3232862	0	True				
ANR	3233705	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3233706	IdentifierDeclType	int		3232862	0					
ANR	3233707	Identifier	dix		3232862	1					
ANR	3233708	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3233709	Identifier	dix		3232862	0					
ANR	3233710	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3233711	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3233712	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3233713	Identifier	idx		3232862	0					
ANR	3233714	Identifier	xDiv		3232862	1					
ANR	3233715	Identifier	dy		3232862	1					
ANR	3233716	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3233717	Identifier	idx		3232862	0					
ANR	3233718	Identifier	xDiv		3232862	1					
ANR	3233719	ExpressionStatement	dp [ dix ] = dataA [ idx ]	1944:16:64680:64700	3232862	1	True				
ANR	3233720	AssignmentExpression	dp [ dix ] = dataA [ idx ]		3232862	0		=			
ANR	3233721	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3233722	Identifier	dp		3232862	0					
ANR	3233723	Identifier	dix		3232862	1					
ANR	3233724	ArrayIndexing	dataA [ idx ]		3232862	1					
ANR	3233725	Identifier	dataA		3232862	0					
ANR	3233726	Identifier	idx		3232862	1					
ANR	3233727	ElseStatement	else		3232862	0					
ANR	3233728	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		3232862	0					
ANR	3233729	Condition	con -> bpi == 16 || con -> bpi == 10	1949:12:64753:64784	3232862	0	True				
ANR	3233730	OrExpression	con -> bpi == 16 || con -> bpi == 10		3232862	0		||			
ANR	3233731	EqualityExpression	con -> bpi == 16		3232862	0		==			
ANR	3233732	PtrMemberAccess	con -> bpi		3232862	0					
ANR	3233733	Identifier	con		3232862	0					
ANR	3233734	Identifier	bpi		3232862	1					
ANR	3233735	PrimaryExpression	16		3232862	1					
ANR	3233736	EqualityExpression	con -> bpi == 10		3232862	1		==			
ANR	3233737	PtrMemberAccess	con -> bpi		3232862	0					
ANR	3233738	Identifier	con		3232862	0					
ANR	3233739	Identifier	bpi		3232862	1					
ANR	3233740	PrimaryExpression	10		3232862	1					
ANR	3233741	CompoundStatement		119:8:4325:4370	3232862	1					
ANR	3233742	IdentifierDeclStatement	int xDiv = 16 ;	1951:8:64798:64811	3232862	0	True				
ANR	3233743	IdentifierDecl	xDiv = 16		3232862	0					
ANR	3233744	IdentifierDeclType	int		3232862	0					
ANR	3233745	Identifier	xDiv		3232862	1					
ANR	3233746	AssignmentExpression	xDiv = 16		3232862	2		=			
ANR	3233747	Identifier	xDiv		3232862	0					
ANR	3233748	PrimaryExpression	16		3232862	1					
ANR	3233749	IdentifierDeclStatement	int yDiv = 16 ;	1952:8:64821:64834	3232862	1	True				
ANR	3233750	IdentifierDecl	yDiv = 16		3232862	0					
ANR	3233751	IdentifierDeclType	int		3232862	0					
ANR	3233752	Identifier	yDiv		3232862	1					
ANR	3233753	AssignmentExpression	yDiv = 16		3232862	2		=			
ANR	3233754	Identifier	yDiv		3232862	0					
ANR	3233755	PrimaryExpression	16		3232862	1					
ANR	3233756	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conY -> buf + xDiv * mx ;	1954:8:64860:64905	3232862	2	True				
ANR	3233757	IdentifierDecl	* dp = ( uint16_t * ) conY -> buf + xDiv * mx		3232862	0					
ANR	3233758	IdentifierDeclType	uint16_t *		3232862	0					
ANR	3233759	Identifier	dp		3232862	1					
ANR	3233760	AssignmentExpression	* dp = ( uint16_t * ) conY -> buf + xDiv * mx		3232862	2		=			
ANR	3233761	Identifier	dp		3232862	0					
ANR	3233762	AdditiveExpression	( uint16_t * ) conY -> buf + xDiv * mx		3232862	1		+			
ANR	3233763	CastExpression	( uint16_t * ) conY -> buf		3232862	0					
ANR	3233764	CastTarget	uint16_t *		3232862	0					
ANR	3233765	PtrMemberAccess	conY -> buf		3232862	1					
ANR	3233766	Identifier	conY		3232862	0					
ANR	3233767	Identifier	buf		3232862	1					
ANR	3233768	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233769	Identifier	xDiv		3232862	0					
ANR	3233770	Identifier	mx		3232862	1					
ANR	3233771	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	3					
ANR	3233772	ForInit	idx = 0 ;	1955:13:64920:64927	3232862	0	True				
ANR	3233773	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233774	Identifier	idx		3232862	0					
ANR	3233775	PrimaryExpression	0		3232862	1					
ANR	3233776	Condition	idx < xDiv * yDiv	1955:22:64929:64943	3232862	1	True				
ANR	3233777	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233778	Identifier	idx		3232862	0					
ANR	3233779	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233780	Identifier	xDiv		3232862	0					
ANR	3233781	Identifier	yDiv		3232862	1					
ANR	3233782	AssignmentExpression	idx += 1	1955:39:64946:64953	3232862	2	True	+=			
ANR	3233783	Identifier	idx		3232862	0					
ANR	3233784	PrimaryExpression	1		3232862	1					
ANR	3233785	CompoundStatement		121:12:4435:4471	3232862	3					
ANR	3233786	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1956:12:64970:65006	3232862	0	True				
ANR	3233787	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3233788	IdentifierDeclType	int		3232862	0					
ANR	3233789	Identifier	dix		3232862	1					
ANR	3233790	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3233791	Identifier	dix		3232862	0					
ANR	3233792	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3233793	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3233794	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3233795	Identifier	idx		3232862	0					
ANR	3233796	Identifier	xDiv		3232862	1					
ANR	3233797	Identifier	dy		3232862	1					
ANR	3233798	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3233799	Identifier	idx		3232862	0					
ANR	3233800	Identifier	xDiv		3232862	1					
ANR	3233801	ExpressionStatement	dp [ dix ] = dataY [ idx ]	1957:12:65032:65052	3232862	1	True				
ANR	3233802	AssignmentExpression	dp [ dix ] = dataY [ idx ]		3232862	0		=			
ANR	3233803	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3233804	Identifier	dp		3232862	0					
ANR	3233805	Identifier	dix		3232862	1					
ANR	3233806	ArrayIndexing	dataY [ idx ]		3232862	1					
ANR	3233807	Identifier	dataY		3232862	0					
ANR	3233808	Identifier	idx		3232862	1					
ANR	3233809	IfStatement	if ( isOutputYUV422 ( image ) )		3232862	4					
ANR	3233810	Condition	isOutputYUV422 ( image )	1960:11:65076:65096	3232862	0	True				
ANR	3233811	CallExpression	isOutputYUV422 ( image )		3232862	0					
ANR	3233812	Callee	isOutputYUV422		3232862	0					
ANR	3233813	Identifier	isOutputYUV422		3232862	0					
ANR	3233814	ArgumentList	image		3232862	1					
ANR	3233815	Argument	image		3232862	0					
ANR	3233816	Identifier	image		3232862	0					
ANR	3233817	CompoundStatement		126:8:4572:4572	3232862	1					
ANR	3233818	ExpressionStatement	dy = 8 * strip_blocks	1962:12:65121:65140	3232862	0	True				
ANR	3233819	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3233820	Identifier	dy		3232862	0					
ANR	3233821	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3233822	PrimaryExpression	8		3232862	0					
ANR	3233823	Identifier	strip_blocks		3232862	1					
ANR	3233824	ExpressionStatement	xDiv = 8	1963:12:65154:65162	3232862	1	True				
ANR	3233825	AssignmentExpression	xDiv = 8		3232862	0		=			
ANR	3233826	Identifier	xDiv		3232862	0					
ANR	3233827	PrimaryExpression	8		3232862	1					
ANR	3233828	IfStatement	if ( isOutputYUV420 ( image ) )		3232862	5					
ANR	3233829	Condition	isOutputYUV420 ( image )	1966:11:65194:65214	3232862	0	True				
ANR	3233830	CallExpression	isOutputYUV420 ( image )		3232862	0					
ANR	3233831	Callee	isOutputYUV420		3232862	0					
ANR	3233832	Identifier	isOutputYUV420		3232862	0					
ANR	3233833	ArgumentList	image		3232862	1					
ANR	3233834	Argument	image		3232862	0					
ANR	3233835	Identifier	image		3232862	0					
ANR	3233836	CompoundStatement		132:8:4690:4690	3232862	1					
ANR	3233837	ExpressionStatement	"assert ( ! ""There is no 420 pixel format with bitdepth 16\\n"" )"	1968:12:65239:65297	3232862	0	True				
ANR	3233838	CallExpression	"assert ( ! ""There is no 420 pixel format with bitdepth 16\\n"" )"		3232862	0					
ANR	3233839	Callee	assert		3232862	0					
ANR	3233840	Identifier	assert		3232862	0					
ANR	3233841	ArgumentList	"! ""There is no 420 pixel format with bitdepth 16\\n"""		3232862	1					
ANR	3233842	Argument	"! ""There is no 420 pixel format with bitdepth 16\\n"""		3232862	0					
ANR	3233843	UnaryOperationExpression	"! ""There is no 420 pixel format with bitdepth 16\\n"""		3232862	0					
ANR	3233844	UnaryOperator	!		3232862	0					
ANR	3233845	PrimaryExpression	"""There is no 420 pixel format with bitdepth 16\\n"""		3232862	1					
ANR	3233846	ExpressionStatement	dy = 8 * strip_blocks	1969:12:65311:65330	3232862	1	True				
ANR	3233847	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3233848	Identifier	dy		3232862	0					
ANR	3233849	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3233850	PrimaryExpression	8		3232862	0					
ANR	3233851	Identifier	strip_blocks		3232862	1					
ANR	3233852	ExpressionStatement	xDiv = yDiv = 8	1970:12:65344:65359	3232862	2	True				
ANR	3233853	AssignmentExpression	xDiv = yDiv = 8		3232862	0		=			
ANR	3233854	Identifier	xDiv		3232862	0					
ANR	3233855	AssignmentExpression	yDiv = 8		3232862	1		=			
ANR	3233856	Identifier	yDiv		3232862	0					
ANR	3233857	PrimaryExpression	8		3232862	1					
ANR	3233858	ExpressionStatement	dp = ( uint16_t * ) conU -> buf + xDiv * mx	1974:8:65404:65439	3232862	6	True				
ANR	3233859	AssignmentExpression	dp = ( uint16_t * ) conU -> buf + xDiv * mx		3232862	0		=			
ANR	3233860	Identifier	dp		3232862	0					
ANR	3233861	AdditiveExpression	( uint16_t * ) conU -> buf + xDiv * mx		3232862	1		+			
ANR	3233862	CastExpression	( uint16_t * ) conU -> buf		3232862	0					
ANR	3233863	CastTarget	uint16_t *		3232862	0					
ANR	3233864	PtrMemberAccess	conU -> buf		3232862	1					
ANR	3233865	Identifier	conU		3232862	0					
ANR	3233866	Identifier	buf		3232862	1					
ANR	3233867	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233868	Identifier	xDiv		3232862	0					
ANR	3233869	Identifier	mx		3232862	1					
ANR	3233870	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	7					
ANR	3233871	ForInit	idx = 0 ;	1975:13:65454:65461	3232862	0	True				
ANR	3233872	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233873	Identifier	idx		3232862	0					
ANR	3233874	PrimaryExpression	0		3232862	1					
ANR	3233875	Condition	idx < xDiv * yDiv	1975:22:65463:65477	3232862	1	True				
ANR	3233876	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233877	Identifier	idx		3232862	0					
ANR	3233878	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233879	Identifier	xDiv		3232862	0					
ANR	3233880	Identifier	yDiv		3232862	1					
ANR	3233881	AssignmentExpression	idx += 1	1975:39:65480:65487	3232862	2	True	+=			
ANR	3233882	Identifier	idx		3232862	0					
ANR	3233883	PrimaryExpression	1		3232862	1					
ANR	3233884	CompoundStatement		141:12:4969:5005	3232862	3					
ANR	3233885	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1976:12:65504:65540	3232862	0	True				
ANR	3233886	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3233887	IdentifierDeclType	int		3232862	0					
ANR	3233888	Identifier	dix		3232862	1					
ANR	3233889	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3233890	Identifier	dix		3232862	0					
ANR	3233891	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3233892	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3233893	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3233894	Identifier	idx		3232862	0					
ANR	3233895	Identifier	xDiv		3232862	1					
ANR	3233896	Identifier	dy		3232862	1					
ANR	3233897	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3233898	Identifier	idx		3232862	0					
ANR	3233899	Identifier	xDiv		3232862	1					
ANR	3233900	ExpressionStatement	dp [ dix ] = dataU [ idx ]	1977:12:65566:65586	3232862	1	True				
ANR	3233901	AssignmentExpression	dp [ dix ] = dataU [ idx ]		3232862	0		=			
ANR	3233902	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3233903	Identifier	dp		3232862	0					
ANR	3233904	Identifier	dix		3232862	1					
ANR	3233905	ArrayIndexing	dataU [ idx ]		3232862	1					
ANR	3233906	Identifier	dataU		3232862	0					
ANR	3233907	Identifier	idx		3232862	1					
ANR	3233908	ExpressionStatement	dp = ( uint16_t * ) conV -> buf + xDiv * mx	1980:8:65622:65657	3232862	8	True				
ANR	3233909	AssignmentExpression	dp = ( uint16_t * ) conV -> buf + xDiv * mx		3232862	0		=			
ANR	3233910	Identifier	dp		3232862	0					
ANR	3233911	AdditiveExpression	( uint16_t * ) conV -> buf + xDiv * mx		3232862	1		+			
ANR	3233912	CastExpression	( uint16_t * ) conV -> buf		3232862	0					
ANR	3233913	CastTarget	uint16_t *		3232862	0					
ANR	3233914	PtrMemberAccess	conV -> buf		3232862	1					
ANR	3233915	Identifier	conV		3232862	0					
ANR	3233916	Identifier	buf		3232862	1					
ANR	3233917	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233918	Identifier	xDiv		3232862	0					
ANR	3233919	Identifier	mx		3232862	1					
ANR	3233920	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	9					
ANR	3233921	ForInit	idx = 0 ;	1981:13:65672:65679	3232862	0	True				
ANR	3233922	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233923	Identifier	idx		3232862	0					
ANR	3233924	PrimaryExpression	0		3232862	1					
ANR	3233925	Condition	idx < xDiv * yDiv	1981:22:65681:65695	3232862	1	True				
ANR	3233926	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233927	Identifier	idx		3232862	0					
ANR	3233928	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233929	Identifier	xDiv		3232862	0					
ANR	3233930	Identifier	yDiv		3232862	1					
ANR	3233931	AssignmentExpression	idx += 1	1981:39:65698:65705	3232862	2	True	+=			
ANR	3233932	Identifier	idx		3232862	0					
ANR	3233933	PrimaryExpression	1		3232862	1					
ANR	3233934	CompoundStatement		147:12:5187:5223	3232862	3					
ANR	3233935	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1982:12:65722:65758	3232862	0	True				
ANR	3233936	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3233937	IdentifierDeclType	int		3232862	0					
ANR	3233938	Identifier	dix		3232862	1					
ANR	3233939	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3233940	Identifier	dix		3232862	0					
ANR	3233941	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3233942	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3233943	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3233944	Identifier	idx		3232862	0					
ANR	3233945	Identifier	xDiv		3232862	1					
ANR	3233946	Identifier	dy		3232862	1					
ANR	3233947	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3233948	Identifier	idx		3232862	0					
ANR	3233949	Identifier	xDiv		3232862	1					
ANR	3233950	ExpressionStatement	dp [ dix ] = dataV [ idx ]	1983:12:65784:65804	3232862	1	True				
ANR	3233951	AssignmentExpression	dp [ dix ] = dataV [ idx ]		3232862	0		=			
ANR	3233952	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3233953	Identifier	dp		3232862	0					
ANR	3233954	Identifier	dix		3232862	1					
ANR	3233955	ArrayIndexing	dataV [ idx ]		3232862	1					
ANR	3233956	Identifier	dataV		3232862	0					
ANR	3233957	Identifier	idx		3232862	1					
ANR	3233958	IfStatement	if ( con -> alpha )		3232862	10					
ANR	3233959	Condition	con -> alpha	1986:11:65828:65837	3232862	0	True				
ANR	3233960	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3233961	Identifier	con		3232862	0					
ANR	3233962	Identifier	alpha		3232862	1					
ANR	3233963	CompoundStatement		152:8:5313:5313	3232862	1					
ANR	3233964	ExpressionStatement	xDiv = yDiv = 16	1988:12:65862:65878	3232862	0	True				
ANR	3233965	AssignmentExpression	xDiv = yDiv = 16		3232862	0		=			
ANR	3233966	Identifier	xDiv		3232862	0					
ANR	3233967	AssignmentExpression	yDiv = 16		3232862	1		=			
ANR	3233968	Identifier	yDiv		3232862	0					
ANR	3233969	PrimaryExpression	16		3232862	1					
ANR	3233970	ExpressionStatement	dy = 16 * strip_blocks	1989:12:65892:65912	3232862	1	True				
ANR	3233971	AssignmentExpression	dy = 16 * strip_blocks		3232862	0		=			
ANR	3233972	Identifier	dy		3232862	0					
ANR	3233973	MultiplicativeExpression	16 * strip_blocks		3232862	1		*			
ANR	3233974	PrimaryExpression	16		3232862	0					
ANR	3233975	Identifier	strip_blocks		3232862	1					
ANR	3233976	ExpressionStatement	dp = ( uint16_t * ) conA -> buf + xDiv * mx	1990:12:65926:65961	3232862	2	True				
ANR	3233977	AssignmentExpression	dp = ( uint16_t * ) conA -> buf + xDiv * mx		3232862	0		=			
ANR	3233978	Identifier	dp		3232862	0					
ANR	3233979	AdditiveExpression	( uint16_t * ) conA -> buf + xDiv * mx		3232862	1		+			
ANR	3233980	CastExpression	( uint16_t * ) conA -> buf		3232862	0					
ANR	3233981	CastTarget	uint16_t *		3232862	0					
ANR	3233982	PtrMemberAccess	conA -> buf		3232862	1					
ANR	3233983	Identifier	conA		3232862	0					
ANR	3233984	Identifier	buf		3232862	1					
ANR	3233985	MultiplicativeExpression	xDiv * mx		3232862	1		*			
ANR	3233986	Identifier	xDiv		3232862	0					
ANR	3233987	Identifier	mx		3232862	1					
ANR	3233988	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		3232862	3					
ANR	3233989	ForInit	idx = 0 ;	1991:17:65980:65987	3232862	0	True				
ANR	3233990	AssignmentExpression	idx = 0		3232862	0		=			
ANR	3233991	Identifier	idx		3232862	0					
ANR	3233992	PrimaryExpression	0		3232862	1					
ANR	3233993	Condition	idx < xDiv * yDiv	1991:26:65989:66003	3232862	1	True				
ANR	3233994	RelationalExpression	idx < xDiv * yDiv		3232862	0		<			
ANR	3233995	Identifier	idx		3232862	0					
ANR	3233996	MultiplicativeExpression	xDiv * yDiv		3232862	1		*			
ANR	3233997	Identifier	xDiv		3232862	0					
ANR	3233998	Identifier	yDiv		3232862	1					
ANR	3233999	AssignmentExpression	idx += 1	1991:43:66006:66013	3232862	2	True	+=			
ANR	3234000	Identifier	idx		3232862	0					
ANR	3234001	PrimaryExpression	1		3232862	1					
ANR	3234002	CompoundStatement		157:16:5499:5535	3232862	3					
ANR	3234003	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1992:16:66034:66070	3232862	0	True				
ANR	3234004	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	0					
ANR	3234005	IdentifierDeclType	int		3232862	0					
ANR	3234006	Identifier	dix		3232862	1					
ANR	3234007	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		3232862	2		=			
ANR	3234008	Identifier	dix		3232862	0					
ANR	3234009	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		3232862	1		+			
ANR	3234010	MultiplicativeExpression	( idx / xDiv ) * dy		3232862	0		*			
ANR	3234011	MultiplicativeExpression	idx / xDiv		3232862	0		/			
ANR	3234012	Identifier	idx		3232862	0					
ANR	3234013	Identifier	xDiv		3232862	1					
ANR	3234014	Identifier	dy		3232862	1					
ANR	3234015	MultiplicativeExpression	idx % xDiv		3232862	1		%			
ANR	3234016	Identifier	idx		3232862	0					
ANR	3234017	Identifier	xDiv		3232862	1					
ANR	3234018	ExpressionStatement	dp [ dix ] = dataA [ idx ]	1993:16:66100:66120	3232862	1	True				
ANR	3234019	AssignmentExpression	dp [ dix ] = dataA [ idx ]		3232862	0		=			
ANR	3234020	ArrayIndexing	dp [ dix ]		3232862	0					
ANR	3234021	Identifier	dp		3232862	0					
ANR	3234022	Identifier	dix		3232862	1					
ANR	3234023	ArrayIndexing	dataA [ idx ]		3232862	1					
ANR	3234024	Identifier	dataA		3232862	0					
ANR	3234025	Identifier	idx		3232862	1					
ANR	3234026	ElseStatement	else		3232862	0					
ANR	3234027	CompoundStatement		164:4:5639:5639	3232862	0					
ANR	3234028	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2000:8:66184:66217	3232862	0	True				
ANR	3234029	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3232862	0					
ANR	3234030	Callee	assert		3232862	0					
ANR	3234031	Identifier	assert		3232862	0					
ANR	3234032	ArgumentList	"! ""Unsupported bitdepth\\n"""		3232862	1					
ANR	3234033	Argument	"! ""Unsupported bitdepth\\n"""		3232862	0					
ANR	3234034	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3232862	0					
ANR	3234035	UnaryOperator	!		3232862	0					
ANR	3234036	PrimaryExpression	"""Unsupported bitdepth\\n"""		3232862	1					
ANR	3234037	IfStatement	if ( mx + 1 == strip_blocks )		3232862	18					
ANR	3234038	Condition	mx + 1 == strip_blocks	2003:8:66234:66253	3232862	0	True				
ANR	3234039	EqualityExpression	mx + 1 == strip_blocks		3232862	0		==			
ANR	3234040	AdditiveExpression	mx + 1		3232862	0		+			
ANR	3234041	Identifier	mx		3232862	0					
ANR	3234042	PrimaryExpression	1		3232862	1					
ANR	3234043	Identifier	strip_blocks		3232862	1					
ANR	3234044	CompoundStatement		173:8:5800:5812	3232862	1					
ANR	3234045	IdentifierDeclStatement	int xDiv = 16 ;	2005:8:66267:66280	3232862	0	True				
ANR	3234046	IdentifierDecl	xDiv = 16		3232862	0					
ANR	3234047	IdentifierDeclType	int		3232862	0					
ANR	3234048	Identifier	xDiv		3232862	1					
ANR	3234049	AssignmentExpression	xDiv = 16		3232862	2		=			
ANR	3234050	Identifier	xDiv		3232862	0					
ANR	3234051	PrimaryExpression	16		3232862	1					
ANR	3234052	IdentifierDeclStatement	int yDiv = 16 ;	2006:8:66290:66303	3232862	1	True				
ANR	3234053	IdentifierDecl	yDiv = 16		3232862	0					
ANR	3234054	IdentifierDeclType	int		3232862	0					
ANR	3234055	Identifier	yDiv		3232862	1					
ANR	3234056	AssignmentExpression	yDiv = 16		3232862	2		=			
ANR	3234057	Identifier	yDiv		3232862	0					
ANR	3234058	PrimaryExpression	16		3232862	1					
ANR	3234059	IdentifierDeclStatement	int subX = 1 ;	2007:8:66313:66325	3232862	2	True				
ANR	3234060	IdentifierDecl	subX = 1		3232862	0					
ANR	3234061	IdentifierDeclType	int		3232862	0					
ANR	3234062	Identifier	subX		3232862	1					
ANR	3234063	AssignmentExpression	subX = 1		3232862	2		=			
ANR	3234064	Identifier	subX		3232862	0					
ANR	3234065	PrimaryExpression	1		3232862	1					
ANR	3234066	IdentifierDeclStatement	int subY = 1 ;	2008:8:66335:66347	3232862	3	True				
ANR	3234067	IdentifierDecl	subY = 1		3232862	0					
ANR	3234068	IdentifierDeclType	int		3232862	0					
ANR	3234069	Identifier	subY		3232862	1					
ANR	3234070	AssignmentExpression	subY = 1		3232862	2		=			
ANR	3234071	Identifier	subY		3232862	0					
ANR	3234072	PrimaryExpression	1		3232862	1					
ANR	3234073	IfStatement	if ( con -> bpi == 8 )		3232862	4					
ANR	3234074	Condition	con -> bpi == 8	2010:11:66369:66381	3232862	0	True				
ANR	3234075	EqualityExpression	con -> bpi == 8		3232862	0		==			
ANR	3234076	PtrMemberAccess	con -> bpi		3232862	0					
ANR	3234077	Identifier	con		3232862	0					
ANR	3234078	Identifier	bpi		3232862	1					
ANR	3234079	PrimaryExpression	8		3232862	1					
ANR	3234080	CompoundStatement		180:12:6028:6124	3232862	1					
ANR	3234081	IdentifierDeclStatement	int left_pad_shift = con -> left_pad ;	2013:12:66426:66460	3232862	0	True				
ANR	3234082	IdentifierDecl	left_pad_shift = con -> left_pad		3232862	0					
ANR	3234083	IdentifierDeclType	int		3232862	0					
ANR	3234084	Identifier	left_pad_shift		3232862	1					
ANR	3234085	AssignmentExpression	left_pad_shift = con -> left_pad		3232862	2		=			
ANR	3234086	Identifier	left_pad_shift		3232862	0					
ANR	3234087	PtrMemberAccess	con -> left_pad		3232862	1					
ANR	3234088	Identifier	con		3232862	0					
ANR	3234089	Identifier	left_pad		3232862	1					
ANR	3234090	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining ;	2014:12:66474:66549	3232862	1	True				
ANR	3234091	IdentifierDecl	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	0					
ANR	3234092	IdentifierDeclType	int		3232862	0					
ANR	3234093	Identifier	first		3232862	1					
ANR	3234094	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	2		=			
ANR	3234095	Identifier	first		3232862	0					
ANR	3234096	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	1					
ANR	3234097	Condition	con -> top_pad_remaining > yDiv		3232862	0					
ANR	3234098	RelationalExpression	con -> top_pad_remaining > yDiv		3232862	0		>			
ANR	3234099	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234100	Identifier	con		3232862	0					
ANR	3234101	Identifier	top_pad_remaining		3232862	1					
ANR	3234102	Identifier	yDiv		3232862	1					
ANR	3234103	Identifier	yDiv		3232862	1					
ANR	3234104	PtrMemberAccess	con -> top_pad_remaining		3232862	2					
ANR	3234105	Identifier	con		3232862	0					
ANR	3234106	Identifier	top_pad_remaining		3232862	1					
ANR	3234107	IdentifierDeclStatement	int trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv ;	2015:12:66563:66659	3232862	2	True				
ANR	3234108	IdentifierDecl	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	0					
ANR	3234109	IdentifierDeclType	int		3232862	0					
ANR	3234110	Identifier	trans		3232862	1					
ANR	3234111	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	2		=			
ANR	3234112	Identifier	trans		3232862	0					
ANR	3234113	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	1					
ANR	3234114	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234115	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234116	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234117	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234118	Identifier	my		3232862	0					
ANR	3234119	Identifier	yDiv		3232862	1					
ANR	3234120	Identifier	yDiv		3232862	1					
ANR	3234121	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234122	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234123	Identifier	con		3232862	0					
ANR	3234124	Identifier	hei		3232862	1					
ANR	3234125	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234126	Identifier	con		3232862	0					
ANR	3234127	Identifier	top_pad		3232862	1					
ANR	3234128	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		3232862	1		%			
ANR	3234129	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234130	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234131	Identifier	con		3232862	0					
ANR	3234132	Identifier	hei		3232862	1					
ANR	3234133	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234134	Identifier	con		3232862	0					
ANR	3234135	Identifier	top_pad		3232862	1					
ANR	3234136	Identifier	yDiv		3232862	1					
ANR	3234137	Identifier	yDiv		3232862	2					
ANR	3234138	ExpressionStatement	dy = 16 * strip_blocks	2016:12:66678:66698	3232862	3	True				
ANR	3234139	AssignmentExpression	dy = 16 * strip_blocks		3232862	0		=			
ANR	3234140	Identifier	dy		3232862	0					
ANR	3234141	MultiplicativeExpression	16 * strip_blocks		3232862	1		*			
ANR	3234142	PrimaryExpression	16		3232862	0					
ANR	3234143	Identifier	strip_blocks		3232862	1					
ANR	3234144	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	4					
ANR	3234145	ForInit	idx = first ;	2017:17:66717:66728	3232862	0	True				
ANR	3234146	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234147	Identifier	idx		3232862	0					
ANR	3234148	Identifier	first		3232862	1					
ANR	3234149	Condition	idx < trans	2017:30:66730:66740	3232862	1	True				
ANR	3234150	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234151	Identifier	idx		3232862	0					
ANR	3234152	Identifier	trans		3232862	1					
ANR	3234153	AssignmentExpression	idx += 1	2017:43:66743:66750	3232862	2	True	+=			
ANR	3234154	Identifier	idx		3232862	0					
ANR	3234155	PrimaryExpression	1		3232862	1					
ANR	3234156	CompoundStatement		183:16:6236:6294	3232862	3					
ANR	3234157	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad ;	2018:16:66771:66829	3232862	0	True				
ANR	3234158	IdentifierDecl	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		3232862	0					
ANR	3234159	IdentifierDeclType	uint8_t *		3232862	0					
ANR	3234160	Identifier	dp		3232862	1					
ANR	3234161	AssignmentExpression	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		3232862	2		=			
ANR	3234162	Identifier	dp		3232862	0					
ANR	3234163	AdditiveExpression	( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		3232862	1		+			
ANR	3234164	CastExpression	( uint8_t * ) conY -> buf		3232862	0					
ANR	3234165	CastTarget	uint8_t *		3232862	0					
ANR	3234166	PtrMemberAccess	conY -> buf		3232862	1					
ANR	3234167	Identifier	conY		3232862	0					
ANR	3234168	Identifier	buf		3232862	1					
ANR	3234169	AdditiveExpression	idx * dy + con -> left_pad		3232862	1		+			
ANR	3234170	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234171	Identifier	idx		3232862	0					
ANR	3234172	Identifier	dy		3232862	1					
ANR	3234173	PtrMemberAccess	con -> left_pad		3232862	1					
ANR	3234174	Identifier	con		3232862	0					
ANR	3234175	Identifier	left_pad		3232862	1					
ANR	3234176	ExpressionStatement	"write_uint8 ( conY , dp , conY -> wid )"	2019:16:66863:66896	3232862	1	True				
ANR	3234177	CallExpression	"write_uint8 ( conY , dp , conY -> wid )"		3232862	0					
ANR	3234178	Callee	write_uint8		3232862	0					
ANR	3234179	Identifier	write_uint8		3232862	0					
ANR	3234180	ArgumentList	conY		3232862	1					
ANR	3234181	Argument	conY		3232862	0					
ANR	3234182	Identifier	conY		3232862	0					
ANR	3234183	Argument	dp		3232862	1					
ANR	3234184	Identifier	dp		3232862	0					
ANR	3234185	Argument	conY -> wid		3232862	2					
ANR	3234186	PtrMemberAccess	conY -> wid		3232862	0					
ANR	3234187	Identifier	conY		3232862	0					
ANR	3234188	Identifier	wid		3232862	1					
ANR	3234189	IfStatement	if ( isOutputYUV422 ( image ) )		3232862	5					
ANR	3234190	Condition	isOutputYUV422 ( image )	2022:15:66947:66967	3232862	0	True				
ANR	3234191	CallExpression	isOutputYUV422 ( image )		3232862	0					
ANR	3234192	Callee	isOutputYUV422		3232862	0					
ANR	3234193	Identifier	isOutputYUV422		3232862	0					
ANR	3234194	ArgumentList	image		3232862	1					
ANR	3234195	Argument	image		3232862	0					
ANR	3234196	Identifier	image		3232862	0					
ANR	3234197	CompoundStatement		188:12:6447:6447	3232862	1					
ANR	3234198	ExpressionStatement	dy = 8 * strip_blocks	2024:16:67000:67019	3232862	0	True				
ANR	3234199	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3234200	Identifier	dy		3232862	0					
ANR	3234201	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3234202	PrimaryExpression	8		3232862	0					
ANR	3234203	Identifier	strip_blocks		3232862	1					
ANR	3234204	ExpressionStatement	xDiv = 8	2025:16:67037:67045	3232862	1	True				
ANR	3234205	AssignmentExpression	xDiv = 8		3232862	0		=			
ANR	3234206	Identifier	xDiv		3232862	0					
ANR	3234207	PrimaryExpression	8		3232862	1					
ANR	3234208	ExpressionStatement	subX = 2	2026:16:67063:67071	3232862	2	True				
ANR	3234209	AssignmentExpression	subX = 2		3232862	0		=			
ANR	3234210	Identifier	subX		3232862	0					
ANR	3234211	PrimaryExpression	2		3232862	1					
ANR	3234212	ExpressionStatement	left_pad_shift >>= 1	2027:16:67089:67109	3232862	3	True				
ANR	3234213	AssignmentExpression	left_pad_shift >>= 1		3232862	0		>>=			
ANR	3234214	Identifier	left_pad_shift		3232862	0					
ANR	3234215	PrimaryExpression	1		3232862	1					
ANR	3234216	IfStatement	if ( isOutputYUV420 ( image ) )		3232862	6					
ANR	3234217	Condition	isOutputYUV420 ( image )	2030:15:67153:67173	3232862	0	True				
ANR	3234218	CallExpression	isOutputYUV420 ( image )		3232862	0					
ANR	3234219	Callee	isOutputYUV420		3232862	0					
ANR	3234220	Identifier	isOutputYUV420		3232862	0					
ANR	3234221	ArgumentList	image		3232862	1					
ANR	3234222	Argument	image		3232862	0					
ANR	3234223	Identifier	image		3232862	0					
ANR	3234224	CompoundStatement		196:12:6653:6653	3232862	1					
ANR	3234225	ExpressionStatement	dy = 8 * strip_blocks	2032:16:67206:67225	3232862	0	True				
ANR	3234226	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3234227	Identifier	dy		3232862	0					
ANR	3234228	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3234229	PrimaryExpression	8		3232862	0					
ANR	3234230	Identifier	strip_blocks		3232862	1					
ANR	3234231	ExpressionStatement	xDiv = yDiv = 8	2033:16:67243:67258	3232862	1	True				
ANR	3234232	AssignmentExpression	xDiv = yDiv = 8		3232862	0		=			
ANR	3234233	Identifier	xDiv		3232862	0					
ANR	3234234	AssignmentExpression	yDiv = 8		3232862	1		=			
ANR	3234235	Identifier	yDiv		3232862	0					
ANR	3234236	PrimaryExpression	8		3232862	1					
ANR	3234237	ExpressionStatement	subX = subY = 2	2034:16:67276:67291	3232862	2	True				
ANR	3234238	AssignmentExpression	subX = subY = 2		3232862	0		=			
ANR	3234239	Identifier	subX		3232862	0					
ANR	3234240	AssignmentExpression	subY = 2		3232862	1		=			
ANR	3234241	Identifier	subY		3232862	0					
ANR	3234242	PrimaryExpression	2		3232862	1					
ANR	3234243	ExpressionStatement	left_pad_shift >>= 1	2035:16:67309:67329	3232862	3	True				
ANR	3234244	AssignmentExpression	left_pad_shift >>= 1		3232862	0		>>=			
ANR	3234245	Identifier	left_pad_shift		3232862	0					
ANR	3234246	PrimaryExpression	1		3232862	1					
ANR	3234247	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY	2037:12:67357:67433	3232862	7	True				
ANR	3234248	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		3232862	0		=			
ANR	3234249	Identifier	first		3232862	0					
ANR	3234250	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		3232862	1					
ANR	3234251	Condition	con -> top_pad_remaining > yDiv		3232862	0					
ANR	3234252	RelationalExpression	con -> top_pad_remaining > yDiv		3232862	0		>			
ANR	3234253	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234254	Identifier	con		3232862	0					
ANR	3234255	Identifier	top_pad_remaining		3232862	1					
ANR	3234256	Identifier	yDiv		3232862	1					
ANR	3234257	Identifier	yDiv		3232862	1					
ANR	3234258	MultiplicativeExpression	con -> top_pad_remaining / subY		3232862	2		/			
ANR	3234259	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234260	Identifier	con		3232862	0					
ANR	3234261	Identifier	top_pad_remaining		3232862	1					
ANR	3234262	Identifier	subY		3232862	1					
ANR	3234263	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2038:12:67447:67546	3232862	8	True				
ANR	3234264	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	0		=			
ANR	3234265	Identifier	trans		3232862	0					
ANR	3234266	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	1					
ANR	3234267	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234268	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234269	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234270	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234271	Identifier	my		3232862	0					
ANR	3234272	Identifier	yDiv		3232862	1					
ANR	3234273	Identifier	yDiv		3232862	1					
ANR	3234274	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234275	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234276	Identifier	con		3232862	0					
ANR	3234277	Identifier	hei		3232862	1					
ANR	3234278	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234279	Identifier	con		3232862	0					
ANR	3234280	Identifier	top_pad		3232862	1					
ANR	3234281	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		3232862	1		%			
ANR	3234282	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		3232862	0		/			
ANR	3234283	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234284	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234285	Identifier	con		3232862	0					
ANR	3234286	Identifier	hei		3232862	1					
ANR	3234287	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234288	Identifier	con		3232862	0					
ANR	3234289	Identifier	top_pad		3232862	1					
ANR	3234290	Identifier	subY		3232862	1					
ANR	3234291	Identifier	yDiv		3232862	1					
ANR	3234292	Identifier	yDiv		3232862	2					
ANR	3234293	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	9					
ANR	3234294	ForInit	idx = first ;	2039:17:67571:67582	3232862	0	True				
ANR	3234295	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234296	Identifier	idx		3232862	0					
ANR	3234297	Identifier	first		3232862	1					
ANR	3234298	Condition	idx < trans	2039:30:67584:67594	3232862	1	True				
ANR	3234299	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234300	Identifier	idx		3232862	0					
ANR	3234301	Identifier	trans		3232862	1					
ANR	3234302	AssignmentExpression	idx += 1	2039:43:67597:67604	3232862	2	True	+=			
ANR	3234303	Identifier	idx		3232862	0					
ANR	3234304	PrimaryExpression	1		3232862	1					
ANR	3234305	CompoundStatement		205:16:7090:7149	3232862	3					
ANR	3234306	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conU -> buf + idx * dy + left_pad_shift ;	2040:16:67625:67684	3232862	0	True				
ANR	3234307	IdentifierDecl	* dp = ( uint8_t * ) conU -> buf + idx * dy + left_pad_shift		3232862	0					
ANR	3234308	IdentifierDeclType	uint8_t *		3232862	0					
ANR	3234309	Identifier	dp		3232862	1					
ANR	3234310	AssignmentExpression	* dp = ( uint8_t * ) conU -> buf + idx * dy + left_pad_shift		3232862	2		=			
ANR	3234311	Identifier	dp		3232862	0					
ANR	3234312	AdditiveExpression	( uint8_t * ) conU -> buf + idx * dy + left_pad_shift		3232862	1		+			
ANR	3234313	CastExpression	( uint8_t * ) conU -> buf		3232862	0					
ANR	3234314	CastTarget	uint8_t *		3232862	0					
ANR	3234315	PtrMemberAccess	conU -> buf		3232862	1					
ANR	3234316	Identifier	conU		3232862	0					
ANR	3234317	Identifier	buf		3232862	1					
ANR	3234318	AdditiveExpression	idx * dy + left_pad_shift		3232862	1		+			
ANR	3234319	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234320	Identifier	idx		3232862	0					
ANR	3234321	Identifier	dy		3232862	1					
ANR	3234322	Identifier	left_pad_shift		3232862	1					
ANR	3234323	ExpressionStatement	"write_uint8 ( conU , dp , ( conU -> wid ) / subX )"	2041:16:67718:67758	3232862	1	True				
ANR	3234324	CallExpression	"write_uint8 ( conU , dp , ( conU -> wid ) / subX )"		3232862	0					
ANR	3234325	Callee	write_uint8		3232862	0					
ANR	3234326	Identifier	write_uint8		3232862	0					
ANR	3234327	ArgumentList	conU		3232862	1					
ANR	3234328	Argument	conU		3232862	0					
ANR	3234329	Identifier	conU		3232862	0					
ANR	3234330	Argument	dp		3232862	1					
ANR	3234331	Identifier	dp		3232862	0					
ANR	3234332	Argument	( conU -> wid ) / subX		3232862	2					
ANR	3234333	MultiplicativeExpression	( conU -> wid ) / subX		3232862	0		/			
ANR	3234334	PtrMemberAccess	conU -> wid		3232862	0					
ANR	3234335	Identifier	conU		3232862	0					
ANR	3234336	Identifier	wid		3232862	1					
ANR	3234337	Identifier	subX		3232862	1					
ANR	3234338	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2044:12:67818:67917	3232862	10	True				
ANR	3234339	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	0		=			
ANR	3234340	Identifier	trans		3232862	0					
ANR	3234341	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	1					
ANR	3234342	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234343	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234344	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234345	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234346	Identifier	my		3232862	0					
ANR	3234347	Identifier	yDiv		3232862	1					
ANR	3234348	Identifier	yDiv		3232862	1					
ANR	3234349	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234350	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234351	Identifier	con		3232862	0					
ANR	3234352	Identifier	hei		3232862	1					
ANR	3234353	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234354	Identifier	con		3232862	0					
ANR	3234355	Identifier	top_pad		3232862	1					
ANR	3234356	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		3232862	1		%			
ANR	3234357	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		3232862	0		/			
ANR	3234358	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234359	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234360	Identifier	con		3232862	0					
ANR	3234361	Identifier	hei		3232862	1					
ANR	3234362	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234363	Identifier	con		3232862	0					
ANR	3234364	Identifier	top_pad		3232862	1					
ANR	3234365	Identifier	subY		3232862	1					
ANR	3234366	Identifier	yDiv		3232862	1					
ANR	3234367	Identifier	yDiv		3232862	2					
ANR	3234368	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	11					
ANR	3234369	ForInit	idx = first ;	2045:17:67942:67953	3232862	0	True				
ANR	3234370	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234371	Identifier	idx		3232862	0					
ANR	3234372	Identifier	first		3232862	1					
ANR	3234373	Condition	idx < trans	2045:30:67955:67965	3232862	1	True				
ANR	3234374	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234375	Identifier	idx		3232862	0					
ANR	3234376	Identifier	trans		3232862	1					
ANR	3234377	AssignmentExpression	idx += 1	2045:43:67968:67975	3232862	2	True	+=			
ANR	3234378	Identifier	idx		3232862	0					
ANR	3234379	PrimaryExpression	1		3232862	1					
ANR	3234380	CompoundStatement		211:16:7461:7520	3232862	3					
ANR	3234381	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conV -> buf + idx * dy + left_pad_shift ;	2046:16:67996:68055	3232862	0	True				
ANR	3234382	IdentifierDecl	* dp = ( uint8_t * ) conV -> buf + idx * dy + left_pad_shift		3232862	0					
ANR	3234383	IdentifierDeclType	uint8_t *		3232862	0					
ANR	3234384	Identifier	dp		3232862	1					
ANR	3234385	AssignmentExpression	* dp = ( uint8_t * ) conV -> buf + idx * dy + left_pad_shift		3232862	2		=			
ANR	3234386	Identifier	dp		3232862	0					
ANR	3234387	AdditiveExpression	( uint8_t * ) conV -> buf + idx * dy + left_pad_shift		3232862	1		+			
ANR	3234388	CastExpression	( uint8_t * ) conV -> buf		3232862	0					
ANR	3234389	CastTarget	uint8_t *		3232862	0					
ANR	3234390	PtrMemberAccess	conV -> buf		3232862	1					
ANR	3234391	Identifier	conV		3232862	0					
ANR	3234392	Identifier	buf		3232862	1					
ANR	3234393	AdditiveExpression	idx * dy + left_pad_shift		3232862	1		+			
ANR	3234394	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234395	Identifier	idx		3232862	0					
ANR	3234396	Identifier	dy		3232862	1					
ANR	3234397	Identifier	left_pad_shift		3232862	1					
ANR	3234398	ExpressionStatement	"write_uint8 ( conV , dp , ( conV -> wid ) / subX )"	2047:16:68089:68129	3232862	1	True				
ANR	3234399	CallExpression	"write_uint8 ( conV , dp , ( conV -> wid ) / subX )"		3232862	0					
ANR	3234400	Callee	write_uint8		3232862	0					
ANR	3234401	Identifier	write_uint8		3232862	0					
ANR	3234402	ArgumentList	conV		3232862	1					
ANR	3234403	Argument	conV		3232862	0					
ANR	3234404	Identifier	conV		3232862	0					
ANR	3234405	Argument	dp		3232862	1					
ANR	3234406	Identifier	dp		3232862	0					
ANR	3234407	Argument	( conV -> wid ) / subX		3232862	2					
ANR	3234408	MultiplicativeExpression	( conV -> wid ) / subX		3232862	0		/			
ANR	3234409	PtrMemberAccess	conV -> wid		3232862	0					
ANR	3234410	Identifier	conV		3232862	0					
ANR	3234411	Identifier	wid		3232862	1					
ANR	3234412	Identifier	subX		3232862	1					
ANR	3234413	IfStatement	if ( con -> alpha )		3232862	12					
ANR	3234414	Condition	con -> alpha	2050:15:68180:68189	3232862	0	True				
ANR	3234415	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3234416	Identifier	con		3232862	0					
ANR	3234417	Identifier	alpha		3232862	1					
ANR	3234418	CompoundStatement		216:12:7669:7669	3232862	1					
ANR	3234419	ExpressionStatement	dy = 16 * strip_blocks	2052:16:68222:68242	3232862	0	True				
ANR	3234420	AssignmentExpression	dy = 16 * strip_blocks		3232862	0		=			
ANR	3234421	Identifier	dy		3232862	0					
ANR	3234422	MultiplicativeExpression	16 * strip_blocks		3232862	1		*			
ANR	3234423	PrimaryExpression	16		3232862	0					
ANR	3234424	Identifier	strip_blocks		3232862	1					
ANR	3234425	ExpressionStatement	xDiv = yDiv = 16	2053:16:68260:68276	3232862	1	True				
ANR	3234426	AssignmentExpression	xDiv = yDiv = 16		3232862	0		=			
ANR	3234427	Identifier	xDiv		3232862	0					
ANR	3234428	AssignmentExpression	yDiv = 16		3232862	1		=			
ANR	3234429	Identifier	yDiv		3232862	0					
ANR	3234430	PrimaryExpression	16		3232862	1					
ANR	3234431	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining	2054:16:68294:68365	3232862	2	True				
ANR	3234432	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	0		=			
ANR	3234433	Identifier	first		3232862	0					
ANR	3234434	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	1					
ANR	3234435	Condition	con -> top_pad_remaining > yDiv		3232862	0					
ANR	3234436	RelationalExpression	con -> top_pad_remaining > yDiv		3232862	0		>			
ANR	3234437	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234438	Identifier	con		3232862	0					
ANR	3234439	Identifier	top_pad_remaining		3232862	1					
ANR	3234440	Identifier	yDiv		3232862	1					
ANR	3234441	Identifier	yDiv		3232862	1					
ANR	3234442	PtrMemberAccess	con -> top_pad_remaining		3232862	2					
ANR	3234443	Identifier	con		3232862	0					
ANR	3234444	Identifier	top_pad_remaining		3232862	1					
ANR	3234445	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv	2055:16:68383:68475	3232862	3	True				
ANR	3234446	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	0		=			
ANR	3234447	Identifier	trans		3232862	0					
ANR	3234448	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	1					
ANR	3234449	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234450	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234451	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234452	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234453	Identifier	my		3232862	0					
ANR	3234454	Identifier	yDiv		3232862	1					
ANR	3234455	Identifier	yDiv		3232862	1					
ANR	3234456	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234457	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234458	Identifier	con		3232862	0					
ANR	3234459	Identifier	hei		3232862	1					
ANR	3234460	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234461	Identifier	con		3232862	0					
ANR	3234462	Identifier	top_pad		3232862	1					
ANR	3234463	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		3232862	1		%			
ANR	3234464	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234465	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234466	Identifier	con		3232862	0					
ANR	3234467	Identifier	hei		3232862	1					
ANR	3234468	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234469	Identifier	con		3232862	0					
ANR	3234470	Identifier	top_pad		3232862	1					
ANR	3234471	Identifier	yDiv		3232862	1					
ANR	3234472	Identifier	yDiv		3232862	2					
ANR	3234473	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	4					
ANR	3234474	ForInit	idx = first ;	2056:21:68504:68515	3232862	0	True				
ANR	3234475	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234476	Identifier	idx		3232862	0					
ANR	3234477	Identifier	first		3232862	1					
ANR	3234478	Condition	idx < trans	2056:34:68517:68527	3232862	1	True				
ANR	3234479	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234480	Identifier	idx		3232862	0					
ANR	3234481	Identifier	trans		3232862	1					
ANR	3234482	AssignmentExpression	idx += 1	2056:47:68530:68537	3232862	2	True	+=			
ANR	3234483	Identifier	idx		3232862	0					
ANR	3234484	PrimaryExpression	1		3232862	1					
ANR	3234485	CompoundStatement		222:20:8027:8085	3232862	3					
ANR	3234486	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad ;	2057:20:68562:68620	3232862	0	True				
ANR	3234487	IdentifierDecl	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		3232862	0					
ANR	3234488	IdentifierDeclType	uint8_t *		3232862	0					
ANR	3234489	Identifier	dp		3232862	1					
ANR	3234490	AssignmentExpression	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		3232862	2		=			
ANR	3234491	Identifier	dp		3232862	0					
ANR	3234492	AdditiveExpression	( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		3232862	1		+			
ANR	3234493	CastExpression	( uint8_t * ) conA -> buf		3232862	0					
ANR	3234494	CastTarget	uint8_t *		3232862	0					
ANR	3234495	PtrMemberAccess	conA -> buf		3232862	1					
ANR	3234496	Identifier	conA		3232862	0					
ANR	3234497	Identifier	buf		3232862	1					
ANR	3234498	AdditiveExpression	idx * dy + con -> left_pad		3232862	1		+			
ANR	3234499	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234500	Identifier	idx		3232862	0					
ANR	3234501	Identifier	dy		3232862	1					
ANR	3234502	PtrMemberAccess	con -> left_pad		3232862	1					
ANR	3234503	Identifier	con		3232862	0					
ANR	3234504	Identifier	left_pad		3232862	1					
ANR	3234505	ExpressionStatement	"write_uint8 ( conA , dp , conA -> wid )"	2058:20:68674:68706	3232862	1	True				
ANR	3234506	CallExpression	"write_uint8 ( conA , dp , conA -> wid )"		3232862	0					
ANR	3234507	Callee	write_uint8		3232862	0					
ANR	3234508	Identifier	write_uint8		3232862	0					
ANR	3234509	ArgumentList	conA		3232862	1					
ANR	3234510	Argument	conA		3232862	0					
ANR	3234511	Identifier	conA		3232862	0					
ANR	3234512	Argument	dp		3232862	1					
ANR	3234513	Identifier	dp		3232862	0					
ANR	3234514	Argument	conA -> wid		3232862	2					
ANR	3234515	PtrMemberAccess	conA -> wid		3232862	0					
ANR	3234516	Identifier	conA		3232862	0					
ANR	3234517	Identifier	wid		3232862	1					
ANR	3234518	ExpressionStatement	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining	2061:12:68768:68835	3232862	13	True				
ANR	3234519	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3232862	0		=			
ANR	3234520	Identifier	first		3232862	0					
ANR	3234521	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3232862	1					
ANR	3234522	Condition	con -> top_pad_remaining > 16		3232862	0					
ANR	3234523	RelationalExpression	con -> top_pad_remaining > 16		3232862	0		>			
ANR	3234524	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234525	Identifier	con		3232862	0					
ANR	3234526	Identifier	top_pad_remaining		3232862	1					
ANR	3234527	PrimaryExpression	16		3232862	1					
ANR	3234528	PrimaryExpression	16		3232862	1					
ANR	3234529	PtrMemberAccess	con -> top_pad_remaining		3232862	2					
ANR	3234530	Identifier	con		3232862	0					
ANR	3234531	Identifier	top_pad_remaining		3232862	1					
ANR	3234532	ExpressionStatement	con -> top_pad_remaining -= first	2062:12:68849:68880	3232862	14	True				
ANR	3234533	AssignmentExpression	con -> top_pad_remaining -= first		3232862	0		-=			
ANR	3234534	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234535	Identifier	con		3232862	0					
ANR	3234536	Identifier	top_pad_remaining		3232862	1					
ANR	3234537	Identifier	first		3232862	1					
ANR	3234538	ElseStatement	else		3232862	0					
ANR	3234539	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		3232862	0					
ANR	3234540	Condition	con -> bpi == 16 || con -> bpi == 10	2064:16:68908:68939	3232862	0	True				
ANR	3234541	OrExpression	con -> bpi == 16 || con -> bpi == 10		3232862	0		||			
ANR	3234542	EqualityExpression	con -> bpi == 16		3232862	0		==			
ANR	3234543	PtrMemberAccess	con -> bpi		3232862	0					
ANR	3234544	Identifier	con		3232862	0					
ANR	3234545	Identifier	bpi		3232862	1					
ANR	3234546	PrimaryExpression	16		3232862	1					
ANR	3234547	EqualityExpression	con -> bpi == 10		3232862	1		==			
ANR	3234548	PtrMemberAccess	con -> bpi		3232862	0					
ANR	3234549	Identifier	con		3232862	0					
ANR	3234550	Identifier	bpi		3232862	1					
ANR	3234551	PrimaryExpression	10		3232862	1					
ANR	3234552	CompoundStatement		234:12:8586:8682	3232862	1					
ANR	3234553	IdentifierDeclStatement	int left_pad_shift = con -> left_pad ;	2067:12:68984:69018	3232862	0	True				
ANR	3234554	IdentifierDecl	left_pad_shift = con -> left_pad		3232862	0					
ANR	3234555	IdentifierDeclType	int		3232862	0					
ANR	3234556	Identifier	left_pad_shift		3232862	1					
ANR	3234557	AssignmentExpression	left_pad_shift = con -> left_pad		3232862	2		=			
ANR	3234558	Identifier	left_pad_shift		3232862	0					
ANR	3234559	PtrMemberAccess	con -> left_pad		3232862	1					
ANR	3234560	Identifier	con		3232862	0					
ANR	3234561	Identifier	left_pad		3232862	1					
ANR	3234562	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining ;	2068:12:69032:69107	3232862	1	True				
ANR	3234563	IdentifierDecl	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	0					
ANR	3234564	IdentifierDeclType	int		3232862	0					
ANR	3234565	Identifier	first		3232862	1					
ANR	3234566	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	2		=			
ANR	3234567	Identifier	first		3232862	0					
ANR	3234568	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	1					
ANR	3234569	Condition	con -> top_pad_remaining > yDiv		3232862	0					
ANR	3234570	RelationalExpression	con -> top_pad_remaining > yDiv		3232862	0		>			
ANR	3234571	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234572	Identifier	con		3232862	0					
ANR	3234573	Identifier	top_pad_remaining		3232862	1					
ANR	3234574	Identifier	yDiv		3232862	1					
ANR	3234575	Identifier	yDiv		3232862	1					
ANR	3234576	PtrMemberAccess	con -> top_pad_remaining		3232862	2					
ANR	3234577	Identifier	con		3232862	0					
ANR	3234578	Identifier	top_pad_remaining		3232862	1					
ANR	3234579	IdentifierDeclStatement	int trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv ;	2069:12:69121:69217	3232862	2	True				
ANR	3234580	IdentifierDecl	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	0					
ANR	3234581	IdentifierDeclType	int		3232862	0					
ANR	3234582	Identifier	trans		3232862	1					
ANR	3234583	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	2		=			
ANR	3234584	Identifier	trans		3232862	0					
ANR	3234585	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	1					
ANR	3234586	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234587	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234588	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234589	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234590	Identifier	my		3232862	0					
ANR	3234591	Identifier	yDiv		3232862	1					
ANR	3234592	Identifier	yDiv		3232862	1					
ANR	3234593	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234594	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234595	Identifier	con		3232862	0					
ANR	3234596	Identifier	hei		3232862	1					
ANR	3234597	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234598	Identifier	con		3232862	0					
ANR	3234599	Identifier	top_pad		3232862	1					
ANR	3234600	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		3232862	1		%			
ANR	3234601	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234602	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234603	Identifier	con		3232862	0					
ANR	3234604	Identifier	hei		3232862	1					
ANR	3234605	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234606	Identifier	con		3232862	0					
ANR	3234607	Identifier	top_pad		3232862	1					
ANR	3234608	Identifier	yDiv		3232862	1					
ANR	3234609	Identifier	yDiv		3232862	2					
ANR	3234610	ExpressionStatement	dy = 16 * strip_blocks	2070:12:69236:69256	3232862	3	True				
ANR	3234611	AssignmentExpression	dy = 16 * strip_blocks		3232862	0		=			
ANR	3234612	Identifier	dy		3232862	0					
ANR	3234613	MultiplicativeExpression	16 * strip_blocks		3232862	1		*			
ANR	3234614	PrimaryExpression	16		3232862	0					
ANR	3234615	Identifier	strip_blocks		3232862	1					
ANR	3234616	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	4					
ANR	3234617	ForInit	idx = first ;	2071:17:69275:69286	3232862	0	True				
ANR	3234618	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234619	Identifier	idx		3232862	0					
ANR	3234620	Identifier	first		3232862	1					
ANR	3234621	Condition	idx < trans	2071:30:69288:69298	3232862	1	True				
ANR	3234622	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234623	Identifier	idx		3232862	0					
ANR	3234624	Identifier	trans		3232862	1					
ANR	3234625	AssignmentExpression	idx += 1	2071:43:69301:69308	3232862	2	True	+=			
ANR	3234626	Identifier	idx		3232862	0					
ANR	3234627	PrimaryExpression	1		3232862	1					
ANR	3234628	CompoundStatement		237:16:8794:8854	3232862	3					
ANR	3234629	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad ;	2072:16:69329:69389	3232862	0	True				
ANR	3234630	IdentifierDecl	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		3232862	0					
ANR	3234631	IdentifierDeclType	uint16_t *		3232862	0					
ANR	3234632	Identifier	dp		3232862	1					
ANR	3234633	AssignmentExpression	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		3232862	2		=			
ANR	3234634	Identifier	dp		3232862	0					
ANR	3234635	AdditiveExpression	( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		3232862	1		+			
ANR	3234636	CastExpression	( uint16_t * ) conY -> buf		3232862	0					
ANR	3234637	CastTarget	uint16_t *		3232862	0					
ANR	3234638	PtrMemberAccess	conY -> buf		3232862	1					
ANR	3234639	Identifier	conY		3232862	0					
ANR	3234640	Identifier	buf		3232862	1					
ANR	3234641	AdditiveExpression	idx * dy + con -> left_pad		3232862	1		+			
ANR	3234642	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234643	Identifier	idx		3232862	0					
ANR	3234644	Identifier	dy		3232862	1					
ANR	3234645	PtrMemberAccess	con -> left_pad		3232862	1					
ANR	3234646	Identifier	con		3232862	0					
ANR	3234647	Identifier	left_pad		3232862	1					
ANR	3234648	ExpressionStatement	"write_uint16 ( conY , dp , conY -> wid )"	2073:16:69423:69457	3232862	1	True				
ANR	3234649	CallExpression	"write_uint16 ( conY , dp , conY -> wid )"		3232862	0					
ANR	3234650	Callee	write_uint16		3232862	0					
ANR	3234651	Identifier	write_uint16		3232862	0					
ANR	3234652	ArgumentList	conY		3232862	1					
ANR	3234653	Argument	conY		3232862	0					
ANR	3234654	Identifier	conY		3232862	0					
ANR	3234655	Argument	dp		3232862	1					
ANR	3234656	Identifier	dp		3232862	0					
ANR	3234657	Argument	conY -> wid		3232862	2					
ANR	3234658	PtrMemberAccess	conY -> wid		3232862	0					
ANR	3234659	Identifier	conY		3232862	0					
ANR	3234660	Identifier	wid		3232862	1					
ANR	3234661	IfStatement	if ( isOutputYUV422 ( image ) )		3232862	5					
ANR	3234662	Condition	isOutputYUV422 ( image )	2076:15:69508:69528	3232862	0	True				
ANR	3234663	CallExpression	isOutputYUV422 ( image )		3232862	0					
ANR	3234664	Callee	isOutputYUV422		3232862	0					
ANR	3234665	Identifier	isOutputYUV422		3232862	0					
ANR	3234666	ArgumentList	image		3232862	1					
ANR	3234667	Argument	image		3232862	0					
ANR	3234668	Identifier	image		3232862	0					
ANR	3234669	CompoundStatement		242:12:9008:9008	3232862	1					
ANR	3234670	ExpressionStatement	dy = 8 * strip_blocks	2078:16:69561:69580	3232862	0	True				
ANR	3234671	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3234672	Identifier	dy		3232862	0					
ANR	3234673	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3234674	PrimaryExpression	8		3232862	0					
ANR	3234675	Identifier	strip_blocks		3232862	1					
ANR	3234676	ExpressionStatement	xDiv = 8	2079:16:69598:69606	3232862	1	True				
ANR	3234677	AssignmentExpression	xDiv = 8		3232862	0		=			
ANR	3234678	Identifier	xDiv		3232862	0					
ANR	3234679	PrimaryExpression	8		3232862	1					
ANR	3234680	ExpressionStatement	subX = 2	2080:16:69624:69632	3232862	2	True				
ANR	3234681	AssignmentExpression	subX = 2		3232862	0		=			
ANR	3234682	Identifier	subX		3232862	0					
ANR	3234683	PrimaryExpression	2		3232862	1					
ANR	3234684	ExpressionStatement	left_pad_shift >>= 1	2081:16:69650:69670	3232862	3	True				
ANR	3234685	AssignmentExpression	left_pad_shift >>= 1		3232862	0		>>=			
ANR	3234686	Identifier	left_pad_shift		3232862	0					
ANR	3234687	PrimaryExpression	1		3232862	1					
ANR	3234688	IfStatement	if ( isOutputYUV420 ( image ) )		3232862	6					
ANR	3234689	Condition	isOutputYUV420 ( image )	2084:15:69714:69734	3232862	0	True				
ANR	3234690	CallExpression	isOutputYUV420 ( image )		3232862	0					
ANR	3234691	Callee	isOutputYUV420		3232862	0					
ANR	3234692	Identifier	isOutputYUV420		3232862	0					
ANR	3234693	ArgumentList	image		3232862	1					
ANR	3234694	Argument	image		3232862	0					
ANR	3234695	Identifier	image		3232862	0					
ANR	3234696	CompoundStatement		250:12:9214:9214	3232862	1					
ANR	3234697	ExpressionStatement	dy = 8 * strip_blocks	2086:16:69767:69786	3232862	0	True				
ANR	3234698	AssignmentExpression	dy = 8 * strip_blocks		3232862	0		=			
ANR	3234699	Identifier	dy		3232862	0					
ANR	3234700	MultiplicativeExpression	8 * strip_blocks		3232862	1		*			
ANR	3234701	PrimaryExpression	8		3232862	0					
ANR	3234702	Identifier	strip_blocks		3232862	1					
ANR	3234703	ExpressionStatement	xDiv = yDiv = 8	2087:16:69804:69819	3232862	1	True				
ANR	3234704	AssignmentExpression	xDiv = yDiv = 8		3232862	0		=			
ANR	3234705	Identifier	xDiv		3232862	0					
ANR	3234706	AssignmentExpression	yDiv = 8		3232862	1		=			
ANR	3234707	Identifier	yDiv		3232862	0					
ANR	3234708	PrimaryExpression	8		3232862	1					
ANR	3234709	ExpressionStatement	subX = subY = 2	2088:16:69837:69852	3232862	2	True				
ANR	3234710	AssignmentExpression	subX = subY = 2		3232862	0		=			
ANR	3234711	Identifier	subX		3232862	0					
ANR	3234712	AssignmentExpression	subY = 2		3232862	1		=			
ANR	3234713	Identifier	subY		3232862	0					
ANR	3234714	PrimaryExpression	2		3232862	1					
ANR	3234715	ExpressionStatement	left_pad_shift >>= 1	2089:16:69870:69890	3232862	3	True				
ANR	3234716	AssignmentExpression	left_pad_shift >>= 1		3232862	0		>>=			
ANR	3234717	Identifier	left_pad_shift		3232862	0					
ANR	3234718	PrimaryExpression	1		3232862	1					
ANR	3234719	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY	2091:12:69918:69994	3232862	7	True				
ANR	3234720	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		3232862	0		=			
ANR	3234721	Identifier	first		3232862	0					
ANR	3234722	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		3232862	1					
ANR	3234723	Condition	con -> top_pad_remaining > yDiv		3232862	0					
ANR	3234724	RelationalExpression	con -> top_pad_remaining > yDiv		3232862	0		>			
ANR	3234725	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234726	Identifier	con		3232862	0					
ANR	3234727	Identifier	top_pad_remaining		3232862	1					
ANR	3234728	Identifier	yDiv		3232862	1					
ANR	3234729	Identifier	yDiv		3232862	1					
ANR	3234730	MultiplicativeExpression	con -> top_pad_remaining / subY		3232862	2		/			
ANR	3234731	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234732	Identifier	con		3232862	0					
ANR	3234733	Identifier	top_pad_remaining		3232862	1					
ANR	3234734	Identifier	subY		3232862	1					
ANR	3234735	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2092:12:70008:70107	3232862	8	True				
ANR	3234736	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	0		=			
ANR	3234737	Identifier	trans		3232862	0					
ANR	3234738	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	1					
ANR	3234739	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234740	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234741	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234742	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234743	Identifier	my		3232862	0					
ANR	3234744	Identifier	yDiv		3232862	1					
ANR	3234745	Identifier	yDiv		3232862	1					
ANR	3234746	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234747	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234748	Identifier	con		3232862	0					
ANR	3234749	Identifier	hei		3232862	1					
ANR	3234750	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234751	Identifier	con		3232862	0					
ANR	3234752	Identifier	top_pad		3232862	1					
ANR	3234753	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		3232862	1		%			
ANR	3234754	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		3232862	0		/			
ANR	3234755	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234756	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234757	Identifier	con		3232862	0					
ANR	3234758	Identifier	hei		3232862	1					
ANR	3234759	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234760	Identifier	con		3232862	0					
ANR	3234761	Identifier	top_pad		3232862	1					
ANR	3234762	Identifier	subY		3232862	1					
ANR	3234763	Identifier	yDiv		3232862	1					
ANR	3234764	Identifier	yDiv		3232862	2					
ANR	3234765	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	9					
ANR	3234766	ForInit	idx = first ;	2093:17:70132:70143	3232862	0	True				
ANR	3234767	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234768	Identifier	idx		3232862	0					
ANR	3234769	Identifier	first		3232862	1					
ANR	3234770	Condition	idx < trans	2093:30:70145:70155	3232862	1	True				
ANR	3234771	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234772	Identifier	idx		3232862	0					
ANR	3234773	Identifier	trans		3232862	1					
ANR	3234774	AssignmentExpression	idx += 1	2093:43:70158:70165	3232862	2	True	+=			
ANR	3234775	Identifier	idx		3232862	0					
ANR	3234776	PrimaryExpression	1		3232862	1					
ANR	3234777	CompoundStatement		259:16:9651:9712	3232862	3					
ANR	3234778	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conU -> buf + idx * dy + left_pad_shift ;	2094:16:70186:70247	3232862	0	True				
ANR	3234779	IdentifierDecl	* dp = ( uint16_t * ) conU -> buf + idx * dy + left_pad_shift		3232862	0					
ANR	3234780	IdentifierDeclType	uint16_t *		3232862	0					
ANR	3234781	Identifier	dp		3232862	1					
ANR	3234782	AssignmentExpression	* dp = ( uint16_t * ) conU -> buf + idx * dy + left_pad_shift		3232862	2		=			
ANR	3234783	Identifier	dp		3232862	0					
ANR	3234784	AdditiveExpression	( uint16_t * ) conU -> buf + idx * dy + left_pad_shift		3232862	1		+			
ANR	3234785	CastExpression	( uint16_t * ) conU -> buf		3232862	0					
ANR	3234786	CastTarget	uint16_t *		3232862	0					
ANR	3234787	PtrMemberAccess	conU -> buf		3232862	1					
ANR	3234788	Identifier	conU		3232862	0					
ANR	3234789	Identifier	buf		3232862	1					
ANR	3234790	AdditiveExpression	idx * dy + left_pad_shift		3232862	1		+			
ANR	3234791	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234792	Identifier	idx		3232862	0					
ANR	3234793	Identifier	dy		3232862	1					
ANR	3234794	Identifier	left_pad_shift		3232862	1					
ANR	3234795	ExpressionStatement	"write_uint16 ( conU , dp , ( conU -> wid ) / subX )"	2095:16:70281:70322	3232862	1	True				
ANR	3234796	CallExpression	"write_uint16 ( conU , dp , ( conU -> wid ) / subX )"		3232862	0					
ANR	3234797	Callee	write_uint16		3232862	0					
ANR	3234798	Identifier	write_uint16		3232862	0					
ANR	3234799	ArgumentList	conU		3232862	1					
ANR	3234800	Argument	conU		3232862	0					
ANR	3234801	Identifier	conU		3232862	0					
ANR	3234802	Argument	dp		3232862	1					
ANR	3234803	Identifier	dp		3232862	0					
ANR	3234804	Argument	( conU -> wid ) / subX		3232862	2					
ANR	3234805	MultiplicativeExpression	( conU -> wid ) / subX		3232862	0		/			
ANR	3234806	PtrMemberAccess	conU -> wid		3232862	0					
ANR	3234807	Identifier	conU		3232862	0					
ANR	3234808	Identifier	wid		3232862	1					
ANR	3234809	Identifier	subX		3232862	1					
ANR	3234810	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY	2098:12:70373:70449	3232862	10	True				
ANR	3234811	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		3232862	0		=			
ANR	3234812	Identifier	first		3232862	0					
ANR	3234813	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		3232862	1					
ANR	3234814	Condition	con -> top_pad_remaining > yDiv		3232862	0					
ANR	3234815	RelationalExpression	con -> top_pad_remaining > yDiv		3232862	0		>			
ANR	3234816	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234817	Identifier	con		3232862	0					
ANR	3234818	Identifier	top_pad_remaining		3232862	1					
ANR	3234819	Identifier	yDiv		3232862	1					
ANR	3234820	Identifier	yDiv		3232862	1					
ANR	3234821	MultiplicativeExpression	con -> top_pad_remaining / subY		3232862	2		/			
ANR	3234822	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234823	Identifier	con		3232862	0					
ANR	3234824	Identifier	top_pad_remaining		3232862	1					
ANR	3234825	Identifier	subY		3232862	1					
ANR	3234826	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2099:12:70463:70562	3232862	11	True				
ANR	3234827	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	0		=			
ANR	3234828	Identifier	trans		3232862	0					
ANR	3234829	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		3232862	1					
ANR	3234830	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234831	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234832	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234833	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234834	Identifier	my		3232862	0					
ANR	3234835	Identifier	yDiv		3232862	1					
ANR	3234836	Identifier	yDiv		3232862	1					
ANR	3234837	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234838	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234839	Identifier	con		3232862	0					
ANR	3234840	Identifier	hei		3232862	1					
ANR	3234841	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234842	Identifier	con		3232862	0					
ANR	3234843	Identifier	top_pad		3232862	1					
ANR	3234844	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		3232862	1		%			
ANR	3234845	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		3232862	0		/			
ANR	3234846	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234847	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234848	Identifier	con		3232862	0					
ANR	3234849	Identifier	hei		3232862	1					
ANR	3234850	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234851	Identifier	con		3232862	0					
ANR	3234852	Identifier	top_pad		3232862	1					
ANR	3234853	Identifier	subY		3232862	1					
ANR	3234854	Identifier	yDiv		3232862	1					
ANR	3234855	Identifier	yDiv		3232862	2					
ANR	3234856	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	12					
ANR	3234857	ForInit	idx = first ;	2100:17:70587:70598	3232862	0	True				
ANR	3234858	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234859	Identifier	idx		3232862	0					
ANR	3234860	Identifier	first		3232862	1					
ANR	3234861	Condition	idx < trans	2100:30:70600:70610	3232862	1	True				
ANR	3234862	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234863	Identifier	idx		3232862	0					
ANR	3234864	Identifier	trans		3232862	1					
ANR	3234865	AssignmentExpression	idx += 1	2100:43:70613:70620	3232862	2	True	+=			
ANR	3234866	Identifier	idx		3232862	0					
ANR	3234867	PrimaryExpression	1		3232862	1					
ANR	3234868	CompoundStatement		266:16:10106:10167	3232862	3					
ANR	3234869	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conV -> buf + idx * dy + left_pad_shift ;	2101:16:70641:70702	3232862	0	True				
ANR	3234870	IdentifierDecl	* dp = ( uint16_t * ) conV -> buf + idx * dy + left_pad_shift		3232862	0					
ANR	3234871	IdentifierDeclType	uint16_t *		3232862	0					
ANR	3234872	Identifier	dp		3232862	1					
ANR	3234873	AssignmentExpression	* dp = ( uint16_t * ) conV -> buf + idx * dy + left_pad_shift		3232862	2		=			
ANR	3234874	Identifier	dp		3232862	0					
ANR	3234875	AdditiveExpression	( uint16_t * ) conV -> buf + idx * dy + left_pad_shift		3232862	1		+			
ANR	3234876	CastExpression	( uint16_t * ) conV -> buf		3232862	0					
ANR	3234877	CastTarget	uint16_t *		3232862	0					
ANR	3234878	PtrMemberAccess	conV -> buf		3232862	1					
ANR	3234879	Identifier	conV		3232862	0					
ANR	3234880	Identifier	buf		3232862	1					
ANR	3234881	AdditiveExpression	idx * dy + left_pad_shift		3232862	1		+			
ANR	3234882	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234883	Identifier	idx		3232862	0					
ANR	3234884	Identifier	dy		3232862	1					
ANR	3234885	Identifier	left_pad_shift		3232862	1					
ANR	3234886	ExpressionStatement	"write_uint16 ( conV , dp , ( conV -> wid ) / subX )"	2102:16:70736:70777	3232862	1	True				
ANR	3234887	CallExpression	"write_uint16 ( conV , dp , ( conV -> wid ) / subX )"		3232862	0					
ANR	3234888	Callee	write_uint16		3232862	0					
ANR	3234889	Identifier	write_uint16		3232862	0					
ANR	3234890	ArgumentList	conV		3232862	1					
ANR	3234891	Argument	conV		3232862	0					
ANR	3234892	Identifier	conV		3232862	0					
ANR	3234893	Argument	dp		3232862	1					
ANR	3234894	Identifier	dp		3232862	0					
ANR	3234895	Argument	( conV -> wid ) / subX		3232862	2					
ANR	3234896	MultiplicativeExpression	( conV -> wid ) / subX		3232862	0		/			
ANR	3234897	PtrMemberAccess	conV -> wid		3232862	0					
ANR	3234898	Identifier	conV		3232862	0					
ANR	3234899	Identifier	wid		3232862	1					
ANR	3234900	Identifier	subX		3232862	1					
ANR	3234901	IfStatement	if ( con -> alpha )		3232862	13					
ANR	3234902	Condition	con -> alpha	2105:15:70828:70837	3232862	0	True				
ANR	3234903	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3234904	Identifier	con		3232862	0					
ANR	3234905	Identifier	alpha		3232862	1					
ANR	3234906	CompoundStatement		271:12:10317:10317	3232862	1					
ANR	3234907	ExpressionStatement	dy = 16 * strip_blocks	2107:16:70870:70890	3232862	0	True				
ANR	3234908	AssignmentExpression	dy = 16 * strip_blocks		3232862	0		=			
ANR	3234909	Identifier	dy		3232862	0					
ANR	3234910	MultiplicativeExpression	16 * strip_blocks		3232862	1		*			
ANR	3234911	PrimaryExpression	16		3232862	0					
ANR	3234912	Identifier	strip_blocks		3232862	1					
ANR	3234913	ExpressionStatement	xDiv = yDiv = 16	2108:16:70908:70924	3232862	1	True				
ANR	3234914	AssignmentExpression	xDiv = yDiv = 16		3232862	0		=			
ANR	3234915	Identifier	xDiv		3232862	0					
ANR	3234916	AssignmentExpression	yDiv = 16		3232862	1		=			
ANR	3234917	Identifier	yDiv		3232862	0					
ANR	3234918	PrimaryExpression	16		3232862	1					
ANR	3234919	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining	2109:16:70942:71013	3232862	2	True				
ANR	3234920	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	0		=			
ANR	3234921	Identifier	first		3232862	0					
ANR	3234922	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		3232862	1					
ANR	3234923	Condition	con -> top_pad_remaining > yDiv		3232862	0					
ANR	3234924	RelationalExpression	con -> top_pad_remaining > yDiv		3232862	0		>			
ANR	3234925	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3234926	Identifier	con		3232862	0					
ANR	3234927	Identifier	top_pad_remaining		3232862	1					
ANR	3234928	Identifier	yDiv		3232862	1					
ANR	3234929	Identifier	yDiv		3232862	1					
ANR	3234930	PtrMemberAccess	con -> top_pad_remaining		3232862	2					
ANR	3234931	Identifier	con		3232862	0					
ANR	3234932	Identifier	top_pad_remaining		3232862	1					
ANR	3234933	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv	2110:16:71031:71122	3232862	3	True				
ANR	3234934	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	0		=			
ANR	3234935	Identifier	trans		3232862	0					
ANR	3234936	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		3232862	1					
ANR	3234937	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0					
ANR	3234938	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		3232862	0		>			
ANR	3234939	AdditiveExpression	my * yDiv + yDiv		3232862	0		+			
ANR	3234940	MultiplicativeExpression	my * yDiv		3232862	0		*			
ANR	3234941	Identifier	my		3232862	0					
ANR	3234942	Identifier	yDiv		3232862	1					
ANR	3234943	Identifier	yDiv		3232862	1					
ANR	3234944	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3234945	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234946	Identifier	con		3232862	0					
ANR	3234947	Identifier	hei		3232862	1					
ANR	3234948	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234949	Identifier	con		3232862	0					
ANR	3234950	Identifier	top_pad		3232862	1					
ANR	3234951	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		3232862	1		%			
ANR	3234952	AdditiveExpression	con -> hei + con -> top_pad		3232862	0		+			
ANR	3234953	PtrMemberAccess	con -> hei		3232862	0					
ANR	3234954	Identifier	con		3232862	0					
ANR	3234955	Identifier	hei		3232862	1					
ANR	3234956	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3234957	Identifier	con		3232862	0					
ANR	3234958	Identifier	top_pad		3232862	1					
ANR	3234959	Identifier	yDiv		3232862	1					
ANR	3234960	Identifier	yDiv		3232862	2					
ANR	3234961	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3232862	4					
ANR	3234962	ForInit	idx = first ;	2111:21:71151:71162	3232862	0	True				
ANR	3234963	AssignmentExpression	idx = first		3232862	0		=			
ANR	3234964	Identifier	idx		3232862	0					
ANR	3234965	Identifier	first		3232862	1					
ANR	3234966	Condition	idx < trans	2111:34:71164:71174	3232862	1	True				
ANR	3234967	RelationalExpression	idx < trans		3232862	0		<			
ANR	3234968	Identifier	idx		3232862	0					
ANR	3234969	Identifier	trans		3232862	1					
ANR	3234970	AssignmentExpression	idx += 1	2111:47:71177:71184	3232862	2	True	+=			
ANR	3234971	Identifier	idx		3232862	0					
ANR	3234972	PrimaryExpression	1		3232862	1					
ANR	3234973	CompoundStatement		277:20:10674:10734	3232862	3					
ANR	3234974	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad ;	2112:20:71209:71269	3232862	0	True				
ANR	3234975	IdentifierDecl	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		3232862	0					
ANR	3234976	IdentifierDeclType	uint16_t *		3232862	0					
ANR	3234977	Identifier	dp		3232862	1					
ANR	3234978	AssignmentExpression	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		3232862	2		=			
ANR	3234979	Identifier	dp		3232862	0					
ANR	3234980	AdditiveExpression	( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		3232862	1		+			
ANR	3234981	CastExpression	( uint16_t * ) conA -> buf		3232862	0					
ANR	3234982	CastTarget	uint16_t *		3232862	0					
ANR	3234983	PtrMemberAccess	conA -> buf		3232862	1					
ANR	3234984	Identifier	conA		3232862	0					
ANR	3234985	Identifier	buf		3232862	1					
ANR	3234986	AdditiveExpression	idx * dy + con -> left_pad		3232862	1		+			
ANR	3234987	MultiplicativeExpression	idx * dy		3232862	0		*			
ANR	3234988	Identifier	idx		3232862	0					
ANR	3234989	Identifier	dy		3232862	1					
ANR	3234990	PtrMemberAccess	con -> left_pad		3232862	1					
ANR	3234991	Identifier	con		3232862	0					
ANR	3234992	Identifier	left_pad		3232862	1					
ANR	3234993	ExpressionStatement	"write_uint16 ( conA , dp , conA -> wid )"	2113:20:71323:71356	3232862	1	True				
ANR	3234994	CallExpression	"write_uint16 ( conA , dp , conA -> wid )"		3232862	0					
ANR	3234995	Callee	write_uint16		3232862	0					
ANR	3234996	Identifier	write_uint16		3232862	0					
ANR	3234997	ArgumentList	conA		3232862	1					
ANR	3234998	Argument	conA		3232862	0					
ANR	3234999	Identifier	conA		3232862	0					
ANR	3235000	Argument	dp		3232862	1					
ANR	3235001	Identifier	dp		3232862	0					
ANR	3235002	Argument	conA -> wid		3232862	2					
ANR	3235003	PtrMemberAccess	conA -> wid		3232862	0					
ANR	3235004	Identifier	conA		3232862	0					
ANR	3235005	Identifier	wid		3232862	1					
ANR	3235006	ExpressionStatement	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining	2116:12:71418:71485	3232862	14	True				
ANR	3235007	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3232862	0		=			
ANR	3235008	Identifier	first		3232862	0					
ANR	3235009	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3232862	1					
ANR	3235010	Condition	con -> top_pad_remaining > 16		3232862	0					
ANR	3235011	RelationalExpression	con -> top_pad_remaining > 16		3232862	0		>			
ANR	3235012	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3235013	Identifier	con		3232862	0					
ANR	3235014	Identifier	top_pad_remaining		3232862	1					
ANR	3235015	PrimaryExpression	16		3232862	1					
ANR	3235016	PrimaryExpression	16		3232862	1					
ANR	3235017	PtrMemberAccess	con -> top_pad_remaining		3232862	2					
ANR	3235018	Identifier	con		3232862	0					
ANR	3235019	Identifier	top_pad_remaining		3232862	1					
ANR	3235020	ExpressionStatement	con -> top_pad_remaining -= first	2117:12:71499:71530	3232862	15	True				
ANR	3235021	AssignmentExpression	con -> top_pad_remaining -= first		3232862	0		-=			
ANR	3235022	PtrMemberAccess	con -> top_pad_remaining		3232862	0					
ANR	3235023	Identifier	con		3232862	0					
ANR	3235024	Identifier	top_pad_remaining		3232862	1					
ANR	3235025	Identifier	first		3232862	1					
ANR	3235026	ElseStatement	else		3232862	0					
ANR	3235027	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2120:12:71573:71606	3232862	0	True				
ANR	3235028	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3232862	0					
ANR	3235029	Callee	assert		3232862	0					
ANR	3235030	Identifier	assert		3232862	0					
ANR	3235031	ArgumentList	"! ""Unsupported bitdepth\\n"""		3232862	1					
ANR	3235032	Argument	"! ""Unsupported bitdepth\\n"""		3232862	0					
ANR	3235033	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3232862	0					
ANR	3235034	UnaryOperator	!		3232862	0					
ANR	3235035	PrimaryExpression	"""Unsupported bitdepth\\n"""		3232862	1					
ANR	3235036	IfStatement	if ( my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks )		3232862	19					
ANR	3235037	Condition	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks	2122:7:71621:71684	3232862	0	True				
ANR	3235038	AndExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks		3232862	0		&&			
ANR	3235039	RelationalExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad )		3232862	0		>=			
ANR	3235040	AdditiveExpression	my * 16 + 16		3232862	0		+			
ANR	3235041	MultiplicativeExpression	my * 16		3232862	0		*			
ANR	3235042	Identifier	my		3232862	0					
ANR	3235043	PrimaryExpression	16		3232862	1					
ANR	3235044	PrimaryExpression	16		3232862	1					
ANR	3235045	AdditiveExpression	con -> hei + con -> top_pad		3232862	1		+			
ANR	3235046	PtrMemberAccess	con -> hei		3232862	0					
ANR	3235047	Identifier	con		3232862	0					
ANR	3235048	Identifier	hei		3232862	1					
ANR	3235049	PtrMemberAccess	con -> top_pad		3232862	1					
ANR	3235050	Identifier	con		3232862	0					
ANR	3235051	Identifier	top_pad		3232862	1					
ANR	3235052	EqualityExpression	mx + 1 == strip_blocks		3232862	1		==			
ANR	3235053	AdditiveExpression	mx + 1		3232862	0		+			
ANR	3235054	Identifier	mx		3232862	0					
ANR	3235055	PrimaryExpression	1		3232862	1					
ANR	3235056	Identifier	strip_blocks		3232862	1					
ANR	3235057	CompoundStatement		292:8:11278:11285	3232862	1					
ANR	3235058	IdentifierDeclStatement	long size = ftell ( conY -> file ) ;	2125:8:71737:71766	3232862	0	True				
ANR	3235059	IdentifierDecl	size = ftell ( conY -> file )		3232862	0					
ANR	3235060	IdentifierDeclType	long		3232862	0					
ANR	3235061	Identifier	size		3232862	1					
ANR	3235062	AssignmentExpression	size = ftell ( conY -> file )		3232862	2		=			
ANR	3235063	Identifier	size		3232862	0					
ANR	3235064	CallExpression	ftell ( conY -> file )		3232862	1					
ANR	3235065	Callee	ftell		3232862	0					
ANR	3235066	Identifier	ftell		3232862	0					
ANR	3235067	ArgumentList	conY -> file		3232862	1					
ANR	3235068	Argument	conY -> file		3232862	0					
ANR	3235069	PtrMemberAccess	conY -> file		3232862	0					
ANR	3235070	Identifier	conY		3232862	0					
ANR	3235071	Identifier	file		3232862	1					
ANR	3235072	ExpressionStatement	"fseek ( conY -> file , 0 , 0 )"	2126:8:71778:71801	3232862	1	True				
ANR	3235073	CallExpression	"fseek ( conY -> file , 0 , 0 )"		3232862	0					
ANR	3235074	Callee	fseek		3232862	0					
ANR	3235075	Identifier	fseek		3232862	0					
ANR	3235076	ArgumentList	conY -> file		3232862	1					
ANR	3235077	Argument	conY -> file		3232862	0					
ANR	3235078	PtrMemberAccess	conY -> file		3232862	0					
ANR	3235079	Identifier	conY		3232862	0					
ANR	3235080	Identifier	file		3232862	1					
ANR	3235081	Argument	0		3232862	1					
ANR	3235082	PrimaryExpression	0		3232862	0					
ANR	3235083	Argument	0		3232862	2					
ANR	3235084	PrimaryExpression	0		3232862	0					
ANR	3235085	IdentifierDeclStatement	long ii ;	2127:8:71813:71820	3232862	2	True				
ANR	3235086	IdentifierDecl	ii		3232862	0					
ANR	3235087	IdentifierDeclType	long		3232862	0					
ANR	3235088	Identifier	ii		3232862	1					
ANR	3235089	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		3232862	3					
ANR	3235090	ForInit	ii = 0 ;	2128:12:71834:71840	3232862	0	True				
ANR	3235091	AssignmentExpression	ii = 0		3232862	0		=			
ANR	3235092	Identifier	ii		3232862	0					
ANR	3235093	PrimaryExpression	0		3232862	1					
ANR	3235094	Condition	ii < size	2128:20:71842:71850	3232862	1	True				
ANR	3235095	RelationalExpression	ii < size		3232862	0		<			
ANR	3235096	Identifier	ii		3232862	0					
ANR	3235097	Identifier	size		3232862	1					
ANR	3235098	PostIncDecOperationExpression	ii ++	2128:31:71853:71856	3232862	2	True				
ANR	3235099	Identifier	ii		3232862	0					
ANR	3235100	IncDec	++		3232862	1					
ANR	3235101	CompoundStatement		295:12:11346:11357	3232862	3					
ANR	3235102	IdentifierDeclStatement	uint8_t val ;	2130:12:71881:71892	3232862	0	True				
ANR	3235103	IdentifierDecl	val		3232862	0					
ANR	3235104	IdentifierDeclType	uint8_t		3232862	0					
ANR	3235105	Identifier	val		3232862	1					
ANR	3235106	ExpressionStatement	"fread ( & val , 1 , 1 , conY -> file )"	2131:12:71906:71935	3232862	1	True				
ANR	3235107	CallExpression	"fread ( & val , 1 , 1 , conY -> file )"		3232862	0					
ANR	3235108	Callee	fread		3232862	0					
ANR	3235109	Identifier	fread		3232862	0					
ANR	3235110	ArgumentList	& val		3232862	1					
ANR	3235111	Argument	& val		3232862	0					
ANR	3235112	UnaryOperationExpression	& val		3232862	0					
ANR	3235113	UnaryOperator	&		3232862	0					
ANR	3235114	Identifier	val		3232862	1					
ANR	3235115	Argument	1		3232862	1					
ANR	3235116	PrimaryExpression	1		3232862	0					
ANR	3235117	Argument	1		3232862	2					
ANR	3235118	PrimaryExpression	1		3232862	0					
ANR	3235119	Argument	conY -> file		3232862	3					
ANR	3235120	PtrMemberAccess	conY -> file		3232862	0					
ANR	3235121	Identifier	conY		3232862	0					
ANR	3235122	Identifier	file		3232862	1					
ANR	3235123	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2132:12:71949:71978	3232862	2	True				
ANR	3235124	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3232862	0					
ANR	3235125	Callee	fwrite		3232862	0					
ANR	3235126	Identifier	fwrite		3232862	0					
ANR	3235127	ArgumentList	& val		3232862	1					
ANR	3235128	Argument	& val		3232862	0					
ANR	3235129	UnaryOperationExpression	& val		3232862	0					
ANR	3235130	UnaryOperator	&		3232862	0					
ANR	3235131	Identifier	val		3232862	1					
ANR	3235132	Argument	1		3232862	1					
ANR	3235133	PrimaryExpression	1		3232862	0					
ANR	3235134	Argument	1		3232862	2					
ANR	3235135	PrimaryExpression	1		3232862	0					
ANR	3235136	Argument	con -> file		3232862	3					
ANR	3235137	PtrMemberAccess	con -> file		3232862	0					
ANR	3235138	Identifier	con		3232862	0					
ANR	3235139	Identifier	file		3232862	1					
ANR	3235140	ExpressionStatement	size = ftell ( conU -> file )	2134:8:71998:72022	3232862	4	True				
ANR	3235141	AssignmentExpression	size = ftell ( conU -> file )		3232862	0		=			
ANR	3235142	Identifier	size		3232862	0					
ANR	3235143	CallExpression	ftell ( conU -> file )		3232862	1					
ANR	3235144	Callee	ftell		3232862	0					
ANR	3235145	Identifier	ftell		3232862	0					
ANR	3235146	ArgumentList	conU -> file		3232862	1					
ANR	3235147	Argument	conU -> file		3232862	0					
ANR	3235148	PtrMemberAccess	conU -> file		3232862	0					
ANR	3235149	Identifier	conU		3232862	0					
ANR	3235150	Identifier	file		3232862	1					
ANR	3235151	ExpressionStatement	"fseek ( conU -> file , 0 , 0 )"	2135:8:72032:72055	3232862	5	True				
ANR	3235152	CallExpression	"fseek ( conU -> file , 0 , 0 )"		3232862	0					
ANR	3235153	Callee	fseek		3232862	0					
ANR	3235154	Identifier	fseek		3232862	0					
ANR	3235155	ArgumentList	conU -> file		3232862	1					
ANR	3235156	Argument	conU -> file		3232862	0					
ANR	3235157	PtrMemberAccess	conU -> file		3232862	0					
ANR	3235158	Identifier	conU		3232862	0					
ANR	3235159	Identifier	file		3232862	1					
ANR	3235160	Argument	0		3232862	1					
ANR	3235161	PrimaryExpression	0		3232862	0					
ANR	3235162	Argument	0		3232862	2					
ANR	3235163	PrimaryExpression	0		3232862	0					
ANR	3235164	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		3232862	6					
ANR	3235165	ForInit	ii = 0 ;	2136:13:72078:72084	3232862	0	True				
ANR	3235166	AssignmentExpression	ii = 0		3232862	0		=			
ANR	3235167	Identifier	ii		3232862	0					
ANR	3235168	PrimaryExpression	0		3232862	1					
ANR	3235169	Condition	ii < size	2136:21:72086:72094	3232862	1	True				
ANR	3235170	RelationalExpression	ii < size		3232862	0		<			
ANR	3235171	Identifier	ii		3232862	0					
ANR	3235172	Identifier	size		3232862	1					
ANR	3235173	PostIncDecOperationExpression	ii ++	2136:32:72097:72100	3232862	2	True				
ANR	3235174	Identifier	ii		3232862	0					
ANR	3235175	IncDec	++		3232862	1					
ANR	3235176	CompoundStatement		303:12:11590:11601	3232862	3					
ANR	3235177	IdentifierDeclStatement	uint8_t val ;	2138:12:72125:72136	3232862	0	True				
ANR	3235178	IdentifierDecl	val		3232862	0					
ANR	3235179	IdentifierDeclType	uint8_t		3232862	0					
ANR	3235180	Identifier	val		3232862	1					
ANR	3235181	ExpressionStatement	"fread ( & val , 1 , 1 , conU -> file )"	2139:12:72150:72179	3232862	1	True				
ANR	3235182	CallExpression	"fread ( & val , 1 , 1 , conU -> file )"		3232862	0					
ANR	3235183	Callee	fread		3232862	0					
ANR	3235184	Identifier	fread		3232862	0					
ANR	3235185	ArgumentList	& val		3232862	1					
ANR	3235186	Argument	& val		3232862	0					
ANR	3235187	UnaryOperationExpression	& val		3232862	0					
ANR	3235188	UnaryOperator	&		3232862	0					
ANR	3235189	Identifier	val		3232862	1					
ANR	3235190	Argument	1		3232862	1					
ANR	3235191	PrimaryExpression	1		3232862	0					
ANR	3235192	Argument	1		3232862	2					
ANR	3235193	PrimaryExpression	1		3232862	0					
ANR	3235194	Argument	conU -> file		3232862	3					
ANR	3235195	PtrMemberAccess	conU -> file		3232862	0					
ANR	3235196	Identifier	conU		3232862	0					
ANR	3235197	Identifier	file		3232862	1					
ANR	3235198	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2140:12:72193:72222	3232862	2	True				
ANR	3235199	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3232862	0					
ANR	3235200	Callee	fwrite		3232862	0					
ANR	3235201	Identifier	fwrite		3232862	0					
ANR	3235202	ArgumentList	& val		3232862	1					
ANR	3235203	Argument	& val		3232862	0					
ANR	3235204	UnaryOperationExpression	& val		3232862	0					
ANR	3235205	UnaryOperator	&		3232862	0					
ANR	3235206	Identifier	val		3232862	1					
ANR	3235207	Argument	1		3232862	1					
ANR	3235208	PrimaryExpression	1		3232862	0					
ANR	3235209	Argument	1		3232862	2					
ANR	3235210	PrimaryExpression	1		3232862	0					
ANR	3235211	Argument	con -> file		3232862	3					
ANR	3235212	PtrMemberAccess	con -> file		3232862	0					
ANR	3235213	Identifier	con		3232862	0					
ANR	3235214	Identifier	file		3232862	1					
ANR	3235215	ExpressionStatement	size = ftell ( conV -> file )	2142:8:72242:72266	3232862	7	True				
ANR	3235216	AssignmentExpression	size = ftell ( conV -> file )		3232862	0		=			
ANR	3235217	Identifier	size		3232862	0					
ANR	3235218	CallExpression	ftell ( conV -> file )		3232862	1					
ANR	3235219	Callee	ftell		3232862	0					
ANR	3235220	Identifier	ftell		3232862	0					
ANR	3235221	ArgumentList	conV -> file		3232862	1					
ANR	3235222	Argument	conV -> file		3232862	0					
ANR	3235223	PtrMemberAccess	conV -> file		3232862	0					
ANR	3235224	Identifier	conV		3232862	0					
ANR	3235225	Identifier	file		3232862	1					
ANR	3235226	ExpressionStatement	"fseek ( conV -> file , 0 , 0 )"	2143:8:72276:72299	3232862	8	True				
ANR	3235227	CallExpression	"fseek ( conV -> file , 0 , 0 )"		3232862	0					
ANR	3235228	Callee	fseek		3232862	0					
ANR	3235229	Identifier	fseek		3232862	0					
ANR	3235230	ArgumentList	conV -> file		3232862	1					
ANR	3235231	Argument	conV -> file		3232862	0					
ANR	3235232	PtrMemberAccess	conV -> file		3232862	0					
ANR	3235233	Identifier	conV		3232862	0					
ANR	3235234	Identifier	file		3232862	1					
ANR	3235235	Argument	0		3232862	1					
ANR	3235236	PrimaryExpression	0		3232862	0					
ANR	3235237	Argument	0		3232862	2					
ANR	3235238	PrimaryExpression	0		3232862	0					
ANR	3235239	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		3232862	9					
ANR	3235240	ForInit	ii = 0 ;	2144:13:72314:72320	3232862	0	True				
ANR	3235241	AssignmentExpression	ii = 0		3232862	0		=			
ANR	3235242	Identifier	ii		3232862	0					
ANR	3235243	PrimaryExpression	0		3232862	1					
ANR	3235244	Condition	ii < size	2144:21:72322:72330	3232862	1	True				
ANR	3235245	RelationalExpression	ii < size		3232862	0		<			
ANR	3235246	Identifier	ii		3232862	0					
ANR	3235247	Identifier	size		3232862	1					
ANR	3235248	PostIncDecOperationExpression	ii ++	2144:32:72333:72336	3232862	2	True				
ANR	3235249	Identifier	ii		3232862	0					
ANR	3235250	IncDec	++		3232862	1					
ANR	3235251	CompoundStatement		311:12:11826:11837	3232862	3					
ANR	3235252	IdentifierDeclStatement	uint8_t val ;	2146:12:72361:72372	3232862	0	True				
ANR	3235253	IdentifierDecl	val		3232862	0					
ANR	3235254	IdentifierDeclType	uint8_t		3232862	0					
ANR	3235255	Identifier	val		3232862	1					
ANR	3235256	ExpressionStatement	"fread ( & val , 1 , 1 , conV -> file )"	2147:12:72386:72415	3232862	1	True				
ANR	3235257	CallExpression	"fread ( & val , 1 , 1 , conV -> file )"		3232862	0					
ANR	3235258	Callee	fread		3232862	0					
ANR	3235259	Identifier	fread		3232862	0					
ANR	3235260	ArgumentList	& val		3232862	1					
ANR	3235261	Argument	& val		3232862	0					
ANR	3235262	UnaryOperationExpression	& val		3232862	0					
ANR	3235263	UnaryOperator	&		3232862	0					
ANR	3235264	Identifier	val		3232862	1					
ANR	3235265	Argument	1		3232862	1					
ANR	3235266	PrimaryExpression	1		3232862	0					
ANR	3235267	Argument	1		3232862	2					
ANR	3235268	PrimaryExpression	1		3232862	0					
ANR	3235269	Argument	conV -> file		3232862	3					
ANR	3235270	PtrMemberAccess	conV -> file		3232862	0					
ANR	3235271	Identifier	conV		3232862	0					
ANR	3235272	Identifier	file		3232862	1					
ANR	3235273	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2148:12:72429:72458	3232862	2	True				
ANR	3235274	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3232862	0					
ANR	3235275	Callee	fwrite		3232862	0					
ANR	3235276	Identifier	fwrite		3232862	0					
ANR	3235277	ArgumentList	& val		3232862	1					
ANR	3235278	Argument	& val		3232862	0					
ANR	3235279	UnaryOperationExpression	& val		3232862	0					
ANR	3235280	UnaryOperator	&		3232862	0					
ANR	3235281	Identifier	val		3232862	1					
ANR	3235282	Argument	1		3232862	1					
ANR	3235283	PrimaryExpression	1		3232862	0					
ANR	3235284	Argument	1		3232862	2					
ANR	3235285	PrimaryExpression	1		3232862	0					
ANR	3235286	Argument	con -> file		3232862	3					
ANR	3235287	PtrMemberAccess	con -> file		3232862	0					
ANR	3235288	Identifier	con		3232862	0					
ANR	3235289	Identifier	file		3232862	1					
ANR	3235290	IfStatement	if ( con -> alpha )		3232862	10					
ANR	3235291	Condition	con -> alpha	2150:11:72481:72490	3232862	0	True				
ANR	3235292	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3235293	Identifier	con		3232862	0					
ANR	3235294	Identifier	alpha		3232862	1					
ANR	3235295	CompoundStatement		316:8:11966:11966	3232862	1					
ANR	3235296	ExpressionStatement	size = ftell ( conA -> file )	2152:12:72515:72539	3232862	0	True				
ANR	3235297	AssignmentExpression	size = ftell ( conA -> file )		3232862	0		=			
ANR	3235298	Identifier	size		3232862	0					
ANR	3235299	CallExpression	ftell ( conA -> file )		3232862	1					
ANR	3235300	Callee	ftell		3232862	0					
ANR	3235301	Identifier	ftell		3232862	0					
ANR	3235302	ArgumentList	conA -> file		3232862	1					
ANR	3235303	Argument	conA -> file		3232862	0					
ANR	3235304	PtrMemberAccess	conA -> file		3232862	0					
ANR	3235305	Identifier	conA		3232862	0					
ANR	3235306	Identifier	file		3232862	1					
ANR	3235307	ExpressionStatement	"fseek ( conA -> file , 0 , 0 )"	2153:12:72553:72576	3232862	1	True				
ANR	3235308	CallExpression	"fseek ( conA -> file , 0 , 0 )"		3232862	0					
ANR	3235309	Callee	fseek		3232862	0					
ANR	3235310	Identifier	fseek		3232862	0					
ANR	3235311	ArgumentList	conA -> file		3232862	1					
ANR	3235312	Argument	conA -> file		3232862	0					
ANR	3235313	PtrMemberAccess	conA -> file		3232862	0					
ANR	3235314	Identifier	conA		3232862	0					
ANR	3235315	Identifier	file		3232862	1					
ANR	3235316	Argument	0		3232862	1					
ANR	3235317	PrimaryExpression	0		3232862	0					
ANR	3235318	Argument	0		3232862	2					
ANR	3235319	PrimaryExpression	0		3232862	0					
ANR	3235320	ForStatement	for ( ii = 0 ; ii < size && con -> alpha ; ii ++ )		3232862	2					
ANR	3235321	ForInit	ii = 0 ;	2154:17:72607:72613	3232862	0	True				
ANR	3235322	AssignmentExpression	ii = 0		3232862	0		=			
ANR	3235323	Identifier	ii		3232862	0					
ANR	3235324	PrimaryExpression	0		3232862	1					
ANR	3235325	Condition	ii < size && con -> alpha	2154:25:72615:72637	3232862	1	True				
ANR	3235326	AndExpression	ii < size && con -> alpha		3232862	0		&&			
ANR	3235327	RelationalExpression	ii < size		3232862	0		<			
ANR	3235328	Identifier	ii		3232862	0					
ANR	3235329	Identifier	size		3232862	1					
ANR	3235330	PtrMemberAccess	con -> alpha		3232862	1					
ANR	3235331	Identifier	con		3232862	0					
ANR	3235332	Identifier	alpha		3232862	1					
ANR	3235333	PostIncDecOperationExpression	ii ++	2154:50:72640:72643	3232862	2	True				
ANR	3235334	Identifier	ii		3232862	0					
ANR	3235335	IncDec	++		3232862	1					
ANR	3235336	CompoundStatement		321:16:12141:12152	3232862	3					
ANR	3235337	IdentifierDeclStatement	uint8_t val ;	2156:16:72676:72687	3232862	0	True				
ANR	3235338	IdentifierDecl	val		3232862	0					
ANR	3235339	IdentifierDeclType	uint8_t		3232862	0					
ANR	3235340	Identifier	val		3232862	1					
ANR	3235341	ExpressionStatement	"fread ( & val , 1 , 1 , conA -> file )"	2157:16:72705:72734	3232862	1	True				
ANR	3235342	CallExpression	"fread ( & val , 1 , 1 , conA -> file )"		3232862	0					
ANR	3235343	Callee	fread		3232862	0					
ANR	3235344	Identifier	fread		3232862	0					
ANR	3235345	ArgumentList	& val		3232862	1					
ANR	3235346	Argument	& val		3232862	0					
ANR	3235347	UnaryOperationExpression	& val		3232862	0					
ANR	3235348	UnaryOperator	&		3232862	0					
ANR	3235349	Identifier	val		3232862	1					
ANR	3235350	Argument	1		3232862	1					
ANR	3235351	PrimaryExpression	1		3232862	0					
ANR	3235352	Argument	1		3232862	2					
ANR	3235353	PrimaryExpression	1		3232862	0					
ANR	3235354	Argument	conA -> file		3232862	3					
ANR	3235355	PtrMemberAccess	conA -> file		3232862	0					
ANR	3235356	Identifier	conA		3232862	0					
ANR	3235357	Identifier	file		3232862	1					
ANR	3235358	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2158:16:72752:72781	3232862	2	True				
ANR	3235359	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3232862	0					
ANR	3235360	Callee	fwrite		3232862	0					
ANR	3235361	Identifier	fwrite		3232862	0					
ANR	3235362	ArgumentList	& val		3232862	1					
ANR	3235363	Argument	& val		3232862	0					
ANR	3235364	UnaryOperationExpression	& val		3232862	0					
ANR	3235365	UnaryOperator	&		3232862	0					
ANR	3235366	Identifier	val		3232862	1					
ANR	3235367	Argument	1		3232862	1					
ANR	3235368	PrimaryExpression	1		3232862	0					
ANR	3235369	Argument	1		3232862	2					
ANR	3235370	PrimaryExpression	1		3232862	0					
ANR	3235371	Argument	con -> file		3232862	3					
ANR	3235372	PtrMemberAccess	con -> file		3232862	0					
ANR	3235373	Identifier	con		3232862	0					
ANR	3235374	Identifier	file		3232862	1					
ANR	3235375	ExpressionStatement	fclose ( conY -> file )	2161:8:72815:72833	3232862	11	True				
ANR	3235376	CallExpression	fclose ( conY -> file )		3232862	0					
ANR	3235377	Callee	fclose		3232862	0					
ANR	3235378	Identifier	fclose		3232862	0					
ANR	3235379	ArgumentList	conY -> file		3232862	1					
ANR	3235380	Argument	conY -> file		3232862	0					
ANR	3235381	PtrMemberAccess	conY -> file		3232862	0					
ANR	3235382	Identifier	conY		3232862	0					
ANR	3235383	Identifier	file		3232862	1					
ANR	3235384	ExpressionStatement	fclose ( conU -> file )	2162:8:72843:72861	3232862	12	True				
ANR	3235385	CallExpression	fclose ( conU -> file )		3232862	0					
ANR	3235386	Callee	fclose		3232862	0					
ANR	3235387	Identifier	fclose		3232862	0					
ANR	3235388	ArgumentList	conU -> file		3232862	1					
ANR	3235389	Argument	conU -> file		3232862	0					
ANR	3235390	PtrMemberAccess	conU -> file		3232862	0					
ANR	3235391	Identifier	conU		3232862	0					
ANR	3235392	Identifier	file		3232862	1					
ANR	3235393	ExpressionStatement	fclose ( conV -> file )	2163:8:72871:72889	3232862	13	True				
ANR	3235394	CallExpression	fclose ( conV -> file )		3232862	0					
ANR	3235395	Callee	fclose		3232862	0					
ANR	3235396	Identifier	fclose		3232862	0					
ANR	3235397	ArgumentList	conV -> file		3232862	1					
ANR	3235398	Argument	conV -> file		3232862	0					
ANR	3235399	PtrMemberAccess	conV -> file		3232862	0					
ANR	3235400	Identifier	conV		3232862	0					
ANR	3235401	Identifier	file		3232862	1					
ANR	3235402	IfStatement	if ( con -> alpha )		3232862	14					
ANR	3235403	Condition	con -> alpha	2164:11:72902:72911	3232862	0	True				
ANR	3235404	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3235405	Identifier	con		3232862	0					
ANR	3235406	Identifier	alpha		3232862	1					
ANR	3235407	ExpressionStatement	fclose ( conA -> file )	2165:12:72926:72944	3232862	1	True				
ANR	3235408	CallExpression	fclose ( conA -> file )		3232862	0					
ANR	3235409	Callee	fclose		3232862	0					
ANR	3235410	Identifier	fclose		3232862	0					
ANR	3235411	ArgumentList	conA -> file		3232862	1					
ANR	3235412	Argument	conA -> file		3232862	0					
ANR	3235413	PtrMemberAccess	conA -> file		3232862	0					
ANR	3235414	Identifier	conA		3232862	0					
ANR	3235415	Identifier	file		3232862	1					
ANR	3235416	ExpressionStatement	free ( conY -> buf )	2167:8:72955:72970	3232862	15	True				
ANR	3235417	CallExpression	free ( conY -> buf )		3232862	0					
ANR	3235418	Callee	free		3232862	0					
ANR	3235419	Identifier	free		3232862	0					
ANR	3235420	ArgumentList	conY -> buf		3232862	1					
ANR	3235421	Argument	conY -> buf		3232862	0					
ANR	3235422	PtrMemberAccess	conY -> buf		3232862	0					
ANR	3235423	Identifier	conY		3232862	0					
ANR	3235424	Identifier	buf		3232862	1					
ANR	3235425	ExpressionStatement	free ( conU -> buf )	2168:8:72980:72995	3232862	16	True				
ANR	3235426	CallExpression	free ( conU -> buf )		3232862	0					
ANR	3235427	Callee	free		3232862	0					
ANR	3235428	Identifier	free		3232862	0					
ANR	3235429	ArgumentList	conU -> buf		3232862	1					
ANR	3235430	Argument	conU -> buf		3232862	0					
ANR	3235431	PtrMemberAccess	conU -> buf		3232862	0					
ANR	3235432	Identifier	conU		3232862	0					
ANR	3235433	Identifier	buf		3232862	1					
ANR	3235434	ExpressionStatement	free ( conV -> buf )	2169:8:73005:73020	3232862	17	True				
ANR	3235435	CallExpression	free ( conV -> buf )		3232862	0					
ANR	3235436	Callee	free		3232862	0					
ANR	3235437	Identifier	free		3232862	0					
ANR	3235438	ArgumentList	conV -> buf		3232862	1					
ANR	3235439	Argument	conV -> buf		3232862	0					
ANR	3235440	PtrMemberAccess	conV -> buf		3232862	0					
ANR	3235441	Identifier	conV		3232862	0					
ANR	3235442	Identifier	buf		3232862	1					
ANR	3235443	IfStatement	if ( con -> alpha )		3232862	18					
ANR	3235444	Condition	con -> alpha	2170:11:73033:73042	3232862	0	True				
ANR	3235445	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3235446	Identifier	con		3232862	0					
ANR	3235447	Identifier	alpha		3232862	1					
ANR	3235448	ExpressionStatement	free ( conA -> buf )	2171:12:73057:73072	3232862	1	True				
ANR	3235449	CallExpression	free ( conA -> buf )		3232862	0					
ANR	3235450	Callee	free		3232862	0					
ANR	3235451	Identifier	free		3232862	0					
ANR	3235452	ArgumentList	conA -> buf		3232862	1					
ANR	3235453	Argument	conA -> buf		3232862	0					
ANR	3235454	PtrMemberAccess	conA -> buf		3232862	0					
ANR	3235455	Identifier	conA		3232862	0					
ANR	3235456	Identifier	buf		3232862	1					
ANR	3235457	ExpressionStatement	free ( conY )	2173:8:73083:73093	3232862	19	True				
ANR	3235458	CallExpression	free ( conY )		3232862	0					
ANR	3235459	Callee	free		3232862	0					
ANR	3235460	Identifier	free		3232862	0					
ANR	3235461	ArgumentList	conY		3232862	1					
ANR	3235462	Argument	conY		3232862	0					
ANR	3235463	Identifier	conY		3232862	0					
ANR	3235464	ExpressionStatement	free ( conU )	2174:8:73103:73113	3232862	20	True				
ANR	3235465	CallExpression	free ( conU )		3232862	0					
ANR	3235466	Callee	free		3232862	0					
ANR	3235467	Identifier	free		3232862	0					
ANR	3235468	ArgumentList	conU		3232862	1					
ANR	3235469	Argument	conU		3232862	0					
ANR	3235470	Identifier	conU		3232862	0					
ANR	3235471	ExpressionStatement	free ( conV )	2175:8:73123:73133	3232862	21	True				
ANR	3235472	CallExpression	free ( conV )		3232862	0					
ANR	3235473	Callee	free		3232862	0					
ANR	3235474	Identifier	free		3232862	0					
ANR	3235475	ArgumentList	conV		3232862	1					
ANR	3235476	Argument	conV		3232862	0					
ANR	3235477	Identifier	conV		3232862	0					
ANR	3235478	IfStatement	if ( con -> alpha )		3232862	22					
ANR	3235479	Condition	con -> alpha	2176:11:73146:73155	3232862	0	True				
ANR	3235480	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3235481	Identifier	con		3232862	0					
ANR	3235482	Identifier	alpha		3232862	1					
ANR	3235483	ExpressionStatement	free ( conA )	2177:12:73170:73180	3232862	1	True				
ANR	3235484	CallExpression	free ( conA )		3232862	0					
ANR	3235485	Callee	free		3232862	0					
ANR	3235486	Identifier	free		3232862	0					
ANR	3235487	ArgumentList	conA		3232862	1					
ANR	3235488	Argument	conA		3232862	0					
ANR	3235489	Identifier	conA		3232862	0					
ANR	3235490	ExpressionStatement	"remove ( ""Y.raw"" )"	2179:8:73199:73214	3232862	23	True				
ANR	3235491	CallExpression	"remove ( ""Y.raw"" )"		3232862	0					
ANR	3235492	Callee	remove		3232862	0					
ANR	3235493	Identifier	remove		3232862	0					
ANR	3235494	ArgumentList	"""Y.raw"""		3232862	1					
ANR	3235495	Argument	"""Y.raw"""		3232862	0					
ANR	3235496	PrimaryExpression	"""Y.raw"""		3232862	0					
ANR	3235497	ExpressionStatement	"remove ( ""U.raw"" )"	2180:8:73224:73239	3232862	24	True				
ANR	3235498	CallExpression	"remove ( ""U.raw"" )"		3232862	0					
ANR	3235499	Callee	remove		3232862	0					
ANR	3235500	Identifier	remove		3232862	0					
ANR	3235501	ArgumentList	"""U.raw"""		3232862	1					
ANR	3235502	Argument	"""U.raw"""		3232862	0					
ANR	3235503	PrimaryExpression	"""U.raw"""		3232862	0					
ANR	3235504	ExpressionStatement	"remove ( ""V.raw"" )"	2181:8:73249:73264	3232862	25	True				
ANR	3235505	CallExpression	"remove ( ""V.raw"" )"		3232862	0					
ANR	3235506	Callee	remove		3232862	0					
ANR	3235507	Identifier	remove		3232862	0					
ANR	3235508	ArgumentList	"""V.raw"""		3232862	1					
ANR	3235509	Argument	"""V.raw"""		3232862	0					
ANR	3235510	PrimaryExpression	"""V.raw"""		3232862	0					
ANR	3235511	IfStatement	if ( con -> alpha )		3232862	26					
ANR	3235512	Condition	con -> alpha	2182:11:73277:73286	3232862	0	True				
ANR	3235513	PtrMemberAccess	con -> alpha		3232862	0					
ANR	3235514	Identifier	con		3232862	0					
ANR	3235515	Identifier	alpha		3232862	1					
ANR	3235516	ExpressionStatement	"remove ( ""A.raw"" )"	2183:12:73301:73316	3232862	1	True				
ANR	3235517	CallExpression	"remove ( ""A.raw"" )"		3232862	0					
ANR	3235518	Callee	remove		3232862	0					
ANR	3235519	Identifier	remove		3232862	0					
ANR	3235520	ArgumentList	"""A.raw"""		3232862	1					
ANR	3235521	Argument	"""A.raw"""		3232862	0					
ANR	3235522	PrimaryExpression	"""A.raw"""		3232862	0					
ANR	3235523	ReturnType	void		3232862	1					
ANR	3235524	Identifier	write_file_YCC		3232862	2					
ANR	3235525	ParameterList	"jxr_image_t image , int mx , int my , int * data"		3232862	3					
ANR	3235526	Parameter	jxr_image_t image	1835:20:60488:60504	3232862	0	True				
ANR	3235527	ParameterType	jxr_image_t		3232862	0					
ANR	3235528	Identifier	image		3232862	1					
ANR	3235529	Parameter	int mx	1835:39:60507:60512	3232862	1	True				
ANR	3235530	ParameterType	int		3232862	0					
ANR	3235531	Identifier	mx		3232862	1					
ANR	3235532	Parameter	int my	1835:47:60515:60520	3232862	2	True				
ANR	3235533	ParameterType	int		3232862	0					
ANR	3235534	Identifier	my		3232862	1					
ANR	3235535	Parameter	int * data	1835:55:60523:60531	3232862	3	True				
ANR	3235536	ParameterType	int *		3232862	0					
ANR	3235537	Identifier	data		3232862	1					
ANR	3235538	CFGEntryNode	ENTRY		3232862		True				
ANR	3235539	CFGExitNode	EXIT		3232862		True				
ANR	3235540	Symbol	& val		3232862						
ANR	3235541	Symbol	con		3232862						
ANR	3235542	Symbol	data		3232862						
ANR	3235543	Symbol	con -> ncomp		3232862						
ANR	3235544	Symbol	strip_blocks		3232862						
ANR	3235545	Symbol	conY -> name		3232862						
ANR	3235546	Symbol	conY -> wid		3232862						
ANR	3235547	Symbol	conU -> name		3232862						
ANR	3235548	Symbol	conY -> ncomp		3232862						
ANR	3235549	Symbol	dp		3232862						
ANR	3235550	Symbol	conV -> wid		3232862						
ANR	3235551	Symbol	conU -> wid		3232862						
ANR	3235552	Symbol	conY -> file		3232862						
ANR	3235553	Symbol	dix		3232862						
ANR	3235554	Symbol	image -> window_extra_top		3232862						
ANR	3235555	Symbol	dy		3232862						
ANR	3235556	Symbol	con -> bpi		3232862						
ANR	3235557	Symbol	conA -> ncomp		3232862						
ANR	3235558	Symbol	jxr_get_pixel_format		3232862						
ANR	3235559	Symbol	* idx		3232862						
ANR	3235560	Symbol	jxr_get_ALPHACHANNEL_FLAG		3232862						
ANR	3235561	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		3232862						
ANR	3235562	Symbol	ii		3232862						
ANR	3235563	Symbol	val		3232862						
ANR	3235564	Symbol	image		3232862						
ANR	3235565	Symbol	NULL		3232862						
ANR	3235566	Symbol	con -> hei		3232862						
ANR	3235567	Symbol	* conA		3232862						
ANR	3235568	Symbol	conY -> buf		3232862						
ANR	3235569	Symbol	mx		3232862						
ANR	3235570	Symbol	my		3232862						
ANR	3235571	Symbol	con -> top_pad		3232862						
ANR	3235572	Symbol	conU -> ncomp		3232862						
ANR	3235573	Symbol	conA -> buf		3232862						
ANR	3235574	Symbol	subX		3232862						
ANR	3235575	Symbol	subY		3232862						
ANR	3235576	Symbol	size		3232862						
ANR	3235577	Symbol	con -> top_pad_remaining		3232862						
ANR	3235578	Symbol	conY		3232862						
ANR	3235579	Symbol	conV		3232862						
ANR	3235580	Symbol	conV -> ncomp		3232862						
ANR	3235581	Symbol	conV -> file		3232862						
ANR	3235582	Symbol	idx		3232862						
ANR	3235583	Symbol	conU		3232862						
ANR	3235584	Symbol	* image		3232862						
ANR	3235585	Symbol	trans		3232862						
ANR	3235586	Symbol	dataY		3232862						
ANR	3235587	Symbol	* dix		3232862						
ANR	3235588	Symbol	conA -> file		3232862						
ANR	3235589	Symbol	dataV		3232862						
ANR	3235590	Symbol	dataU		3232862						
ANR	3235591	Symbol	jxr_get_user_data		3232862						
ANR	3235592	Symbol	ftell		3232862						
ANR	3235593	Symbol	conV -> name		3232862						
ANR	3235594	Symbol	conA -> wid		3232862						
ANR	3235595	Symbol	con -> left_pad		3232862						
ANR	3235596	Symbol	xDiv		3232862						
ANR	3235597	Symbol	conU -> buf		3232862						
ANR	3235598	Symbol	* conY		3232862						
ANR	3235599	Symbol	jxr_get_IMAGE_HEIGHT		3232862						
ANR	3235600	Symbol	conA		3232862						
ANR	3235601	Symbol	* dp		3232862						
ANR	3235602	Symbol	isOutputYUV422		3232862						
ANR	3235603	Symbol	* con		3232862						
ANR	3235604	Symbol	* conU		3232862						
ANR	3235605	Symbol	conA -> name		3232862						
ANR	3235606	Symbol	* conV		3232862						
ANR	3235607	Symbol	isOutputYUV420		3232862						
ANR	3235608	Symbol	jxr_get_OUTPUT_BITDEPTH		3232862						
ANR	3235609	Symbol	jxr_get_IMAGE_WIDTH		3232862						
ANR	3235610	Symbol	left_pad_shift		3232862						
ANR	3235611	Symbol	yDiv		3232862						
ANR	3235612	Symbol	malloc		3232862						
ANR	3235613	Symbol	image -> window_extra_left		3232862						
ANR	3235614	Symbol	con -> file		3232862						
ANR	3235615	Symbol	* dataA		3232862						
ANR	3235616	Symbol	image -> extended_width		3232862						
ANR	3235617	Symbol	conV -> buf		3232862						
ANR	3235618	Symbol	* dataY		3232862						
ANR	3235619	Symbol	dataA		3232862						
ANR	3235620	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		3232862						
ANR	3235621	Symbol	con -> alpha		3232862						
ANR	3235622	Symbol	* dataV		3232862						
ANR	3235623	Symbol	* dataU		3232862						
ANR	3235624	Symbol	first		3232862						
ANR	3235625	Symbol	conU -> file		3232862						
ANR	3235626	Function	write_file_CMYK	2188:0:73336:84468							
ANR	3235627	FunctionDef	"write_file_CMYK (jxr_image_t image , int mx , int my , int * data)"		3235626	0					
ANR	3235628	CompoundStatement		2189:0:73403:84468	3235626	0					
ANR	3235629	IdentifierDeclStatement	int * dataC = data ;	2193:4:73615:73632	3235626	0	True				
ANR	3235630	IdentifierDecl	* dataC = data		3235626	0					
ANR	3235631	IdentifierDeclType	int *		3235626	0					
ANR	3235632	Identifier	dataC		3235626	1					
ANR	3235633	AssignmentExpression	* dataC = data		3235626	2		=			
ANR	3235634	Identifier	data		3235626	0					
ANR	3235635	Identifier	data		3235626	1					
ANR	3235636	IdentifierDeclStatement	int * dataM = dataC + 256 ;	2194:4:73638:73662	3235626	1	True				
ANR	3235637	IdentifierDecl	* dataM = dataC + 256		3235626	0					
ANR	3235638	IdentifierDeclType	int *		3235626	0					
ANR	3235639	Identifier	dataM		3235626	1					
ANR	3235640	AssignmentExpression	* dataM = dataC + 256		3235626	2		=			
ANR	3235641	Identifier	dataM		3235626	0					
ANR	3235642	AdditiveExpression	dataC + 256		3235626	1		+			
ANR	3235643	Identifier	dataC		3235626	0					
ANR	3235644	PrimaryExpression	256		3235626	1					
ANR	3235645	IdentifierDeclStatement	int * dataY = dataM + 256 ;	2195:4:73668:73692	3235626	2	True				
ANR	3235646	IdentifierDecl	* dataY = dataM + 256		3235626	0					
ANR	3235647	IdentifierDeclType	int *		3235626	0					
ANR	3235648	Identifier	dataY		3235626	1					
ANR	3235649	AssignmentExpression	* dataY = dataM + 256		3235626	2		=			
ANR	3235650	Identifier	dataY		3235626	0					
ANR	3235651	AdditiveExpression	dataM + 256		3235626	1		+			
ANR	3235652	Identifier	dataM		3235626	0					
ANR	3235653	PrimaryExpression	256		3235626	1					
ANR	3235654	IdentifierDeclStatement	int * dataK = dataY + 256 ;	2196:4:73698:73722	3235626	3	True				
ANR	3235655	IdentifierDecl	* dataK = dataY + 256		3235626	0					
ANR	3235656	IdentifierDeclType	int *		3235626	0					
ANR	3235657	Identifier	dataK		3235626	1					
ANR	3235658	AssignmentExpression	* dataK = dataY + 256		3235626	2		=			
ANR	3235659	Identifier	dataK		3235626	0					
ANR	3235660	AdditiveExpression	dataY + 256		3235626	1		+			
ANR	3235661	Identifier	dataY		3235626	0					
ANR	3235662	PrimaryExpression	256		3235626	1					
ANR	3235663	IdentifierDeclStatement	int * dataA = dataK + 256 ;	2197:4:73728:73752	3235626	4	True				
ANR	3235664	IdentifierDecl	* dataA = dataK + 256		3235626	0					
ANR	3235665	IdentifierDeclType	int *		3235626	0					
ANR	3235666	Identifier	dataA		3235626	1					
ANR	3235667	AssignmentExpression	* dataA = dataK + 256		3235626	2		=			
ANR	3235668	Identifier	dataA		3235626	0					
ANR	3235669	AdditiveExpression	dataK + 256		3235626	1		+			
ANR	3235670	Identifier	dataK		3235626	0					
ANR	3235671	PrimaryExpression	256		3235626	1					
ANR	3235672	Statement	static	2198:4:73758:73763	3235626	5	True				
ANR	3235673	IdentifierDeclStatement	context * conC = NULL ;	2198:11:73765:73785	3235626	6	True				
ANR	3235674	IdentifierDecl	* conC = NULL		3235626	0					
ANR	3235675	IdentifierDeclType	context *		3235626	0					
ANR	3235676	Identifier	conC		3235626	1					
ANR	3235677	AssignmentExpression	* conC = NULL		3235626	2		=			
ANR	3235678	Identifier	NULL		3235626	0					
ANR	3235679	Identifier	NULL		3235626	1					
ANR	3235680	Statement	static	2199:4:73791:73796	3235626	7	True				
ANR	3235681	IdentifierDeclStatement	context * conM = NULL ;	2199:11:73798:73818	3235626	8	True				
ANR	3235682	IdentifierDecl	* conM = NULL		3235626	0					
ANR	3235683	IdentifierDeclType	context *		3235626	0					
ANR	3235684	Identifier	conM		3235626	1					
ANR	3235685	AssignmentExpression	* conM = NULL		3235626	2		=			
ANR	3235686	Identifier	NULL		3235626	0					
ANR	3235687	Identifier	NULL		3235626	1					
ANR	3235688	Statement	static	2200:4:73824:73829	3235626	9	True				
ANR	3235689	IdentifierDeclStatement	context * conY = NULL ;	2200:11:73831:73851	3235626	10	True				
ANR	3235690	IdentifierDecl	* conY = NULL		3235626	0					
ANR	3235691	IdentifierDeclType	context *		3235626	0					
ANR	3235692	Identifier	conY		3235626	1					
ANR	3235693	AssignmentExpression	* conY = NULL		3235626	2		=			
ANR	3235694	Identifier	NULL		3235626	0					
ANR	3235695	Identifier	NULL		3235626	1					
ANR	3235696	Statement	static	2201:4:73857:73862	3235626	11	True				
ANR	3235697	IdentifierDeclStatement	context * conK = NULL ;	2201:11:73864:73884	3235626	12	True				
ANR	3235698	IdentifierDecl	* conK = NULL		3235626	0					
ANR	3235699	IdentifierDeclType	context *		3235626	0					
ANR	3235700	Identifier	conK		3235626	1					
ANR	3235701	AssignmentExpression	* conK = NULL		3235626	2		=			
ANR	3235702	Identifier	NULL		3235626	0					
ANR	3235703	Identifier	NULL		3235626	1					
ANR	3235704	Statement	static	2202:4:73890:73895	3235626	13	True				
ANR	3235705	IdentifierDeclStatement	context * conA = NULL ;	2202:11:73897:73917	3235626	14	True				
ANR	3235706	IdentifierDecl	* conA = NULL		3235626	0					
ANR	3235707	IdentifierDeclType	context *		3235626	0					
ANR	3235708	Identifier	conA		3235626	1					
ANR	3235709	AssignmentExpression	* conA = NULL		3235626	2		=			
ANR	3235710	Identifier	NULL		3235626	0					
ANR	3235711	Identifier	NULL		3235626	1					
ANR	3235712	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2203:4:73923:73973	3235626	15	True				
ANR	3235713	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3235626	0					
ANR	3235714	IdentifierDeclType	context *		3235626	0					
ANR	3235715	Identifier	con		3235626	1					
ANR	3235716	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3235626	2		=			
ANR	3235717	Identifier	con		3235626	0					
ANR	3235718	CastExpression	( context * ) jxr_get_user_data ( image )		3235626	1					
ANR	3235719	CastTarget	context *		3235626	0					
ANR	3235720	CallExpression	jxr_get_user_data ( image )		3235626	1					
ANR	3235721	Callee	jxr_get_user_data		3235626	0					
ANR	3235722	Identifier	jxr_get_user_data		3235626	0					
ANR	3235723	ArgumentList	image		3235626	1					
ANR	3235724	Argument	image		3235626	0					
ANR	3235725	Identifier	image		3235626	0					
ANR	3235726	IfStatement	if ( con -> file == 0 )		3235626	16					
ANR	3235727	Condition	con -> file == 0	2204:8:73987:73998	3235626	0	True				
ANR	3235728	EqualityExpression	con -> file == 0		3235626	0		==			
ANR	3235729	PtrMemberAccess	con -> file		3235626	0					
ANR	3235730	Identifier	con		3235626	0					
ANR	3235731	Identifier	file		3235626	1					
ANR	3235732	PrimaryExpression	0		3235626	1					
ANR	3235733	CompoundStatement		17:4:601:601	3235626	1					
ANR	3235734	ExpressionStatement	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )	2206:8:74015:74060	3235626	0	True				
ANR	3235735	AssignmentExpression	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )		3235626	0		=			
ANR	3235736	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3235737	Identifier	con		3235626	0					
ANR	3235738	Identifier	alpha		3235626	1					
ANR	3235739	CallExpression	jxr_get_ALPHACHANNEL_FLAG ( image )		3235626	1					
ANR	3235740	Callee	jxr_get_ALPHACHANNEL_FLAG		3235626	0					
ANR	3235741	Identifier	jxr_get_ALPHACHANNEL_FLAG		3235626	0					
ANR	3235742	ArgumentList	image		3235626	1					
ANR	3235743	Argument	image		3235626	0					
ANR	3235744	Identifier	image		3235626	0					
ANR	3235745	ExpressionStatement	conC = ( context * ) malloc ( sizeof ( context ) )	2208:8:74079:74120	3235626	1	True				
ANR	3235746	AssignmentExpression	conC = ( context * ) malloc ( sizeof ( context ) )		3235626	0		=			
ANR	3235747	Identifier	conC		3235626	0					
ANR	3235748	CastExpression	( context * ) malloc ( sizeof ( context ) )		3235626	1					
ANR	3235749	CastTarget	context *		3235626	0					
ANR	3235750	CallExpression	malloc ( sizeof ( context ) )		3235626	1					
ANR	3235751	Callee	malloc		3235626	0					
ANR	3235752	Identifier	malloc		3235626	0					
ANR	3235753	ArgumentList	sizeof ( context )		3235626	1					
ANR	3235754	Argument	sizeof ( context )		3235626	0					
ANR	3235755	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235756	Sizeof	sizeof		3235626	0					
ANR	3235757	SizeofOperand	context		3235626	1					
ANR	3235758	ExpressionStatement	conM = ( context * ) malloc ( sizeof ( context ) )	2209:8:74130:74171	3235626	2	True				
ANR	3235759	AssignmentExpression	conM = ( context * ) malloc ( sizeof ( context ) )		3235626	0		=			
ANR	3235760	Identifier	conM		3235626	0					
ANR	3235761	CastExpression	( context * ) malloc ( sizeof ( context ) )		3235626	1					
ANR	3235762	CastTarget	context *		3235626	0					
ANR	3235763	CallExpression	malloc ( sizeof ( context ) )		3235626	1					
ANR	3235764	Callee	malloc		3235626	0					
ANR	3235765	Identifier	malloc		3235626	0					
ANR	3235766	ArgumentList	sizeof ( context )		3235626	1					
ANR	3235767	Argument	sizeof ( context )		3235626	0					
ANR	3235768	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235769	Sizeof	sizeof		3235626	0					
ANR	3235770	SizeofOperand	context		3235626	1					
ANR	3235771	ExpressionStatement	conY = ( context * ) malloc ( sizeof ( context ) )	2210:8:74181:74222	3235626	3	True				
ANR	3235772	AssignmentExpression	conY = ( context * ) malloc ( sizeof ( context ) )		3235626	0		=			
ANR	3235773	Identifier	conY		3235626	0					
ANR	3235774	CastExpression	( context * ) malloc ( sizeof ( context ) )		3235626	1					
ANR	3235775	CastTarget	context *		3235626	0					
ANR	3235776	CallExpression	malloc ( sizeof ( context ) )		3235626	1					
ANR	3235777	Callee	malloc		3235626	0					
ANR	3235778	Identifier	malloc		3235626	0					
ANR	3235779	ArgumentList	sizeof ( context )		3235626	1					
ANR	3235780	Argument	sizeof ( context )		3235626	0					
ANR	3235781	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235782	Sizeof	sizeof		3235626	0					
ANR	3235783	SizeofOperand	context		3235626	1					
ANR	3235784	ExpressionStatement	conK = ( context * ) malloc ( sizeof ( context ) )	2211:8:74232:74273	3235626	4	True				
ANR	3235785	AssignmentExpression	conK = ( context * ) malloc ( sizeof ( context ) )		3235626	0		=			
ANR	3235786	Identifier	conK		3235626	0					
ANR	3235787	CastExpression	( context * ) malloc ( sizeof ( context ) )		3235626	1					
ANR	3235788	CastTarget	context *		3235626	0					
ANR	3235789	CallExpression	malloc ( sizeof ( context ) )		3235626	1					
ANR	3235790	Callee	malloc		3235626	0					
ANR	3235791	Identifier	malloc		3235626	0					
ANR	3235792	ArgumentList	sizeof ( context )		3235626	1					
ANR	3235793	Argument	sizeof ( context )		3235626	0					
ANR	3235794	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235795	Sizeof	sizeof		3235626	0					
ANR	3235796	SizeofOperand	context		3235626	1					
ANR	3235797	IfStatement	if ( con -> alpha )		3235626	5					
ANR	3235798	Condition	con -> alpha	2212:11:74286:74295	3235626	0	True				
ANR	3235799	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3235800	Identifier	con		3235626	0					
ANR	3235801	Identifier	alpha		3235626	1					
ANR	3235802	ExpressionStatement	conA = ( context * ) malloc ( sizeof ( context ) )	2213:12:74310:74351	3235626	1	True				
ANR	3235803	AssignmentExpression	conA = ( context * ) malloc ( sizeof ( context ) )		3235626	0		=			
ANR	3235804	Identifier	conA		3235626	0					
ANR	3235805	CastExpression	( context * ) malloc ( sizeof ( context ) )		3235626	1					
ANR	3235806	CastTarget	context *		3235626	0					
ANR	3235807	CallExpression	malloc ( sizeof ( context ) )		3235626	1					
ANR	3235808	Callee	malloc		3235626	0					
ANR	3235809	Identifier	malloc		3235626	0					
ANR	3235810	ArgumentList	sizeof ( context )		3235626	1					
ANR	3235811	Argument	sizeof ( context )		3235626	0					
ANR	3235812	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235813	Sizeof	sizeof		3235626	0					
ANR	3235814	SizeofOperand	context		3235626	1					
ANR	3235815	ExpressionStatement	"memcpy ( conC , con , sizeof ( context ) )"	2214:8:74361:74395	3235626	6	True				
ANR	3235816	CallExpression	"memcpy ( conC , con , sizeof ( context ) )"		3235626	0					
ANR	3235817	Callee	memcpy		3235626	0					
ANR	3235818	Identifier	memcpy		3235626	0					
ANR	3235819	ArgumentList	conC		3235626	1					
ANR	3235820	Argument	conC		3235626	0					
ANR	3235821	Identifier	conC		3235626	0					
ANR	3235822	Argument	con		3235626	1					
ANR	3235823	Identifier	con		3235626	0					
ANR	3235824	Argument	sizeof ( context )		3235626	2					
ANR	3235825	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235826	Sizeof	sizeof		3235626	0					
ANR	3235827	SizeofOperand	context		3235626	1					
ANR	3235828	ExpressionStatement	"memcpy ( conM , con , sizeof ( context ) )"	2215:8:74405:74439	3235626	7	True				
ANR	3235829	CallExpression	"memcpy ( conM , con , sizeof ( context ) )"		3235626	0					
ANR	3235830	Callee	memcpy		3235626	0					
ANR	3235831	Identifier	memcpy		3235626	0					
ANR	3235832	ArgumentList	conM		3235626	1					
ANR	3235833	Argument	conM		3235626	0					
ANR	3235834	Identifier	conM		3235626	0					
ANR	3235835	Argument	con		3235626	1					
ANR	3235836	Identifier	con		3235626	0					
ANR	3235837	Argument	sizeof ( context )		3235626	2					
ANR	3235838	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235839	Sizeof	sizeof		3235626	0					
ANR	3235840	SizeofOperand	context		3235626	1					
ANR	3235841	ExpressionStatement	"memcpy ( conY , con , sizeof ( context ) )"	2216:8:74449:74483	3235626	8	True				
ANR	3235842	CallExpression	"memcpy ( conY , con , sizeof ( context ) )"		3235626	0					
ANR	3235843	Callee	memcpy		3235626	0					
ANR	3235844	Identifier	memcpy		3235626	0					
ANR	3235845	ArgumentList	conY		3235626	1					
ANR	3235846	Argument	conY		3235626	0					
ANR	3235847	Identifier	conY		3235626	0					
ANR	3235848	Argument	con		3235626	1					
ANR	3235849	Identifier	con		3235626	0					
ANR	3235850	Argument	sizeof ( context )		3235626	2					
ANR	3235851	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235852	Sizeof	sizeof		3235626	0					
ANR	3235853	SizeofOperand	context		3235626	1					
ANR	3235854	ExpressionStatement	"memcpy ( conK , con , sizeof ( context ) )"	2217:8:74493:74527	3235626	9	True				
ANR	3235855	CallExpression	"memcpy ( conK , con , sizeof ( context ) )"		3235626	0					
ANR	3235856	Callee	memcpy		3235626	0					
ANR	3235857	Identifier	memcpy		3235626	0					
ANR	3235858	ArgumentList	conK		3235626	1					
ANR	3235859	Argument	conK		3235626	0					
ANR	3235860	Identifier	conK		3235626	0					
ANR	3235861	Argument	con		3235626	1					
ANR	3235862	Identifier	con		3235626	0					
ANR	3235863	Argument	sizeof ( context )		3235626	2					
ANR	3235864	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235865	Sizeof	sizeof		3235626	0					
ANR	3235866	SizeofOperand	context		3235626	1					
ANR	3235867	IfStatement	if ( con -> alpha )		3235626	10					
ANR	3235868	Condition	con -> alpha	2218:11:74540:74549	3235626	0	True				
ANR	3235869	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3235870	Identifier	con		3235626	0					
ANR	3235871	Identifier	alpha		3235626	1					
ANR	3235872	ExpressionStatement	"memcpy ( conA , con , sizeof ( context ) )"	2219:12:74564:74598	3235626	1	True				
ANR	3235873	CallExpression	"memcpy ( conA , con , sizeof ( context ) )"		3235626	0					
ANR	3235874	Callee	memcpy		3235626	0					
ANR	3235875	Identifier	memcpy		3235626	0					
ANR	3235876	ArgumentList	conA		3235626	1					
ANR	3235877	Argument	conA		3235626	0					
ANR	3235878	Identifier	conA		3235626	0					
ANR	3235879	Argument	con		3235626	1					
ANR	3235880	Identifier	con		3235626	0					
ANR	3235881	Argument	sizeof ( context )		3235626	2					
ANR	3235882	SizeofExpression	sizeof ( context )		3235626	0					
ANR	3235883	Sizeof	sizeof		3235626	0					
ANR	3235884	SizeofOperand	context		3235626	1					
ANR	3235885	ExpressionStatement	"conC -> name = ""C.raw"""	2220:8:74608:74628	3235626	11	True				
ANR	3235886	AssignmentExpression	"conC -> name = ""C.raw"""		3235626	0		=			
ANR	3235887	PtrMemberAccess	conC -> name		3235626	0					
ANR	3235888	Identifier	conC		3235626	0					
ANR	3235889	Identifier	name		3235626	1					
ANR	3235890	PrimaryExpression	"""C.raw"""		3235626	1					
ANR	3235891	ExpressionStatement	"conM -> name = ""M.raw"""	2221:8:74638:74658	3235626	12	True				
ANR	3235892	AssignmentExpression	"conM -> name = ""M.raw"""		3235626	0		=			
ANR	3235893	PtrMemberAccess	conM -> name		3235626	0					
ANR	3235894	Identifier	conM		3235626	0					
ANR	3235895	Identifier	name		3235626	1					
ANR	3235896	PrimaryExpression	"""M.raw"""		3235626	1					
ANR	3235897	ExpressionStatement	"conY -> name = ""Y.raw"""	2222:8:74668:74688	3235626	13	True				
ANR	3235898	AssignmentExpression	"conY -> name = ""Y.raw"""		3235626	0		=			
ANR	3235899	PtrMemberAccess	conY -> name		3235626	0					
ANR	3235900	Identifier	conY		3235626	0					
ANR	3235901	Identifier	name		3235626	1					
ANR	3235902	PrimaryExpression	"""Y.raw"""		3235626	1					
ANR	3235903	ExpressionStatement	"conK -> name = ""K.raw"""	2223:8:74698:74718	3235626	14	True				
ANR	3235904	AssignmentExpression	"conK -> name = ""K.raw"""		3235626	0		=			
ANR	3235905	PtrMemberAccess	conK -> name		3235626	0					
ANR	3235906	Identifier	conK		3235626	0					
ANR	3235907	Identifier	name		3235626	1					
ANR	3235908	PrimaryExpression	"""K.raw"""		3235626	1					
ANR	3235909	IfStatement	if ( con -> alpha )		3235626	15					
ANR	3235910	Condition	con -> alpha	2224:11:74731:74740	3235626	0	True				
ANR	3235911	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3235912	Identifier	con		3235626	0					
ANR	3235913	Identifier	alpha		3235626	1					
ANR	3235914	ExpressionStatement	"conA -> name = ""A.raw"""	2225:12:74755:74775	3235626	1	True				
ANR	3235915	AssignmentExpression	"conA -> name = ""A.raw"""		3235626	0		=			
ANR	3235916	PtrMemberAccess	conA -> name		3235626	0					
ANR	3235917	Identifier	conA		3235626	0					
ANR	3235918	Identifier	name		3235626	1					
ANR	3235919	PrimaryExpression	"""A.raw"""		3235626	1					
ANR	3235920	ExpressionStatement	con -> left_pad = image -> window_extra_left	2227:8:74790:74830	3235626	16	True				
ANR	3235921	AssignmentExpression	con -> left_pad = image -> window_extra_left		3235626	0		=			
ANR	3235922	PtrMemberAccess	con -> left_pad		3235626	0					
ANR	3235923	Identifier	con		3235626	0					
ANR	3235924	Identifier	left_pad		3235626	1					
ANR	3235925	PtrMemberAccess	image -> window_extra_left		3235626	1					
ANR	3235926	Identifier	image		3235626	0					
ANR	3235927	Identifier	window_extra_left		3235626	1					
ANR	3235928	ExpressionStatement	con -> top_pad_remaining = image -> window_extra_top	2228:8:74840:74888	3235626	17	True				
ANR	3235929	AssignmentExpression	con -> top_pad_remaining = image -> window_extra_top		3235626	0		=			
ANR	3235930	PtrMemberAccess	con -> top_pad_remaining		3235626	0					
ANR	3235931	Identifier	con		3235626	0					
ANR	3235932	Identifier	top_pad_remaining		3235626	1					
ANR	3235933	PtrMemberAccess	image -> window_extra_top		3235626	1					
ANR	3235934	Identifier	image		3235626	0					
ANR	3235935	Identifier	window_extra_top		3235626	1					
ANR	3235936	ExpressionStatement	con -> top_pad = image -> window_extra_top	2229:8:74898:74936	3235626	18	True				
ANR	3235937	AssignmentExpression	con -> top_pad = image -> window_extra_top		3235626	0		=			
ANR	3235938	PtrMemberAccess	con -> top_pad		3235626	0					
ANR	3235939	Identifier	con		3235626	0					
ANR	3235940	Identifier	top_pad		3235626	1					
ANR	3235941	PtrMemberAccess	image -> window_extra_top		3235626	1					
ANR	3235942	Identifier	image		3235626	0					
ANR	3235943	Identifier	window_extra_top		3235626	1					
ANR	3235944	ExpressionStatement	con -> ncomp = conC -> ncomp = conM -> ncomp = conY -> ncomp = conK -> ncomp = 1	2231:8:74963:75033	3235626	19	True				
ANR	3235945	AssignmentExpression	con -> ncomp = conC -> ncomp = conM -> ncomp = conY -> ncomp = conK -> ncomp = 1		3235626	0		=			
ANR	3235946	PtrMemberAccess	con -> ncomp		3235626	0					
ANR	3235947	Identifier	con		3235626	0					
ANR	3235948	Identifier	ncomp		3235626	1					
ANR	3235949	AssignmentExpression	conC -> ncomp = conM -> ncomp = conY -> ncomp = conK -> ncomp = 1		3235626	1		=			
ANR	3235950	PtrMemberAccess	conC -> ncomp		3235626	0					
ANR	3235951	Identifier	conC		3235626	0					
ANR	3235952	Identifier	ncomp		3235626	1					
ANR	3235953	AssignmentExpression	conM -> ncomp = conY -> ncomp = conK -> ncomp = 1		3235626	1		=			
ANR	3235954	PtrMemberAccess	conM -> ncomp		3235626	0					
ANR	3235955	Identifier	conM		3235626	0					
ANR	3235956	Identifier	ncomp		3235626	1					
ANR	3235957	AssignmentExpression	conY -> ncomp = conK -> ncomp = 1		3235626	1		=			
ANR	3235958	PtrMemberAccess	conY -> ncomp		3235626	0					
ANR	3235959	Identifier	conY		3235626	0					
ANR	3235960	Identifier	ncomp		3235626	1					
ANR	3235961	AssignmentExpression	conK -> ncomp = 1		3235626	1		=			
ANR	3235962	PtrMemberAccess	conK -> ncomp		3235626	0					
ANR	3235963	Identifier	conK		3235626	0					
ANR	3235964	Identifier	ncomp		3235626	1					
ANR	3235965	PrimaryExpression	1		3235626	1					
ANR	3235966	IfStatement	if ( con -> alpha )		3235626	20					
ANR	3235967	Condition	con -> alpha	2232:11:75046:75055	3235626	0	True				
ANR	3235968	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3235969	Identifier	con		3235626	0					
ANR	3235970	Identifier	alpha		3235626	1					
ANR	3235971	ExpressionStatement	conA -> ncomp = 1	2233:12:75070:75085	3235626	1	True				
ANR	3235972	AssignmentExpression	conA -> ncomp = 1		3235626	0		=			
ANR	3235973	PtrMemberAccess	conA -> ncomp		3235626	0					
ANR	3235974	Identifier	conA		3235626	0					
ANR	3235975	Identifier	ncomp		3235626	1					
ANR	3235976	PrimaryExpression	1		3235626	1					
ANR	3235977	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2234:8:75095:75339	3235626	21	True				
ANR	3235978	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3235626	0					
ANR	3235979	Callee	start_output_file		3235626	0					
ANR	3235980	Identifier	start_output_file		3235626	0					
ANR	3235981	ArgumentList	con		3235626	1					
ANR	3235982	Argument	con		3235626	0					
ANR	3235983	Identifier	con		3235626	0					
ANR	3235984	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	1					
ANR	3235985	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	0					
ANR	3235986	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3235987	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3235988	ArgumentList	image		3235626	1					
ANR	3235989	Argument	image		3235626	0					
ANR	3235990	Identifier	image		3235626	0					
ANR	3235991	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	2					
ANR	3235992	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3235993	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3235994	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3235995	ArgumentList	image		3235626	1					
ANR	3235996	Argument	image		3235626	0					
ANR	3235997	Identifier	image		3235626	0					
ANR	3235998	Argument	jxr_get_IMAGE_WIDTH ( image )		3235626	3					
ANR	3235999	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236000	Callee	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236001	Identifier	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236002	ArgumentList	image		3235626	1					
ANR	3236003	Argument	image		3235626	0					
ANR	3236004	Identifier	image		3235626	0					
ANR	3236005	Argument	jxr_get_IMAGE_HEIGHT ( image )		3235626	4					
ANR	3236006	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236007	Callee	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236008	Identifier	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236009	ArgumentList	image		3235626	1					
ANR	3236010	Argument	image		3235626	0					
ANR	3236011	Identifier	image		3235626	0					
ANR	3236012	Argument	1		3235626	5					
ANR	3236013	PrimaryExpression	1		3235626	0					
ANR	3236014	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	6					
ANR	3236015	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	0					
ANR	3236016	Callee	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236017	Identifier	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236018	ArgumentList	image		3235626	1					
ANR	3236019	Argument	image		3235626	0					
ANR	3236020	Identifier	image		3235626	0					
ANR	3236021	Argument	jxr_get_pixel_format ( image )		3235626	7					
ANR	3236022	CallExpression	jxr_get_pixel_format ( image )		3235626	0					
ANR	3236023	Callee	jxr_get_pixel_format		3235626	0					
ANR	3236024	Identifier	jxr_get_pixel_format		3235626	0					
ANR	3236025	ArgumentList	image		3235626	1					
ANR	3236026	Argument	image		3235626	0					
ANR	3236027	Identifier	image		3235626	0					
ANR	3236028	ExpressionStatement	"start_output_file ( conC , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2237:8:75349:75594	3235626	22	True				
ANR	3236029	CallExpression	"start_output_file ( conC , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3235626	0					
ANR	3236030	Callee	start_output_file		3235626	0					
ANR	3236031	Identifier	start_output_file		3235626	0					
ANR	3236032	ArgumentList	conC		3235626	1					
ANR	3236033	Argument	conC		3235626	0					
ANR	3236034	Identifier	conC		3235626	0					
ANR	3236035	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	1					
ANR	3236036	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236037	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236038	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236039	ArgumentList	image		3235626	1					
ANR	3236040	Argument	image		3235626	0					
ANR	3236041	Identifier	image		3235626	0					
ANR	3236042	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	2					
ANR	3236043	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236044	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236045	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236046	ArgumentList	image		3235626	1					
ANR	3236047	Argument	image		3235626	0					
ANR	3236048	Identifier	image		3235626	0					
ANR	3236049	Argument	jxr_get_IMAGE_WIDTH ( image )		3235626	3					
ANR	3236050	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236051	Callee	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236052	Identifier	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236053	ArgumentList	image		3235626	1					
ANR	3236054	Argument	image		3235626	0					
ANR	3236055	Identifier	image		3235626	0					
ANR	3236056	Argument	jxr_get_IMAGE_HEIGHT ( image )		3235626	4					
ANR	3236057	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236058	Callee	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236059	Identifier	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236060	ArgumentList	image		3235626	1					
ANR	3236061	Argument	image		3235626	0					
ANR	3236062	Identifier	image		3235626	0					
ANR	3236063	Argument	1		3235626	5					
ANR	3236064	PrimaryExpression	1		3235626	0					
ANR	3236065	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	6					
ANR	3236066	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	0					
ANR	3236067	Callee	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236068	Identifier	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236069	ArgumentList	image		3235626	1					
ANR	3236070	Argument	image		3235626	0					
ANR	3236071	Identifier	image		3235626	0					
ANR	3236072	Argument	jxr_get_pixel_format ( image )		3235626	7					
ANR	3236073	CallExpression	jxr_get_pixel_format ( image )		3235626	0					
ANR	3236074	Callee	jxr_get_pixel_format		3235626	0					
ANR	3236075	Identifier	jxr_get_pixel_format		3235626	0					
ANR	3236076	ArgumentList	image		3235626	1					
ANR	3236077	Argument	image		3235626	0					
ANR	3236078	Identifier	image		3235626	0					
ANR	3236079	ExpressionStatement	"start_output_file ( conM , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2240:8:75604:75849	3235626	23	True				
ANR	3236080	CallExpression	"start_output_file ( conM , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3235626	0					
ANR	3236081	Callee	start_output_file		3235626	0					
ANR	3236082	Identifier	start_output_file		3235626	0					
ANR	3236083	ArgumentList	conM		3235626	1					
ANR	3236084	Argument	conM		3235626	0					
ANR	3236085	Identifier	conM		3235626	0					
ANR	3236086	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	1					
ANR	3236087	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236088	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236089	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236090	ArgumentList	image		3235626	1					
ANR	3236091	Argument	image		3235626	0					
ANR	3236092	Identifier	image		3235626	0					
ANR	3236093	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	2					
ANR	3236094	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236095	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236096	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236097	ArgumentList	image		3235626	1					
ANR	3236098	Argument	image		3235626	0					
ANR	3236099	Identifier	image		3235626	0					
ANR	3236100	Argument	jxr_get_IMAGE_WIDTH ( image )		3235626	3					
ANR	3236101	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236102	Callee	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236103	Identifier	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236104	ArgumentList	image		3235626	1					
ANR	3236105	Argument	image		3235626	0					
ANR	3236106	Identifier	image		3235626	0					
ANR	3236107	Argument	jxr_get_IMAGE_HEIGHT ( image )		3235626	4					
ANR	3236108	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236109	Callee	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236110	Identifier	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236111	ArgumentList	image		3235626	1					
ANR	3236112	Argument	image		3235626	0					
ANR	3236113	Identifier	image		3235626	0					
ANR	3236114	Argument	1		3235626	5					
ANR	3236115	PrimaryExpression	1		3235626	0					
ANR	3236116	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	6					
ANR	3236117	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	0					
ANR	3236118	Callee	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236119	Identifier	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236120	ArgumentList	image		3235626	1					
ANR	3236121	Argument	image		3235626	0					
ANR	3236122	Identifier	image		3235626	0					
ANR	3236123	Argument	jxr_get_pixel_format ( image )		3235626	7					
ANR	3236124	CallExpression	jxr_get_pixel_format ( image )		3235626	0					
ANR	3236125	Callee	jxr_get_pixel_format		3235626	0					
ANR	3236126	Identifier	jxr_get_pixel_format		3235626	0					
ANR	3236127	ArgumentList	image		3235626	1					
ANR	3236128	Argument	image		3235626	0					
ANR	3236129	Identifier	image		3235626	0					
ANR	3236130	ExpressionStatement	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2243:8:75859:76104	3235626	24	True				
ANR	3236131	CallExpression	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3235626	0					
ANR	3236132	Callee	start_output_file		3235626	0					
ANR	3236133	Identifier	start_output_file		3235626	0					
ANR	3236134	ArgumentList	conY		3235626	1					
ANR	3236135	Argument	conY		3235626	0					
ANR	3236136	Identifier	conY		3235626	0					
ANR	3236137	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	1					
ANR	3236138	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236139	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236140	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236141	ArgumentList	image		3235626	1					
ANR	3236142	Argument	image		3235626	0					
ANR	3236143	Identifier	image		3235626	0					
ANR	3236144	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	2					
ANR	3236145	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236146	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236147	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236148	ArgumentList	image		3235626	1					
ANR	3236149	Argument	image		3235626	0					
ANR	3236150	Identifier	image		3235626	0					
ANR	3236151	Argument	jxr_get_IMAGE_WIDTH ( image )		3235626	3					
ANR	3236152	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236153	Callee	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236154	Identifier	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236155	ArgumentList	image		3235626	1					
ANR	3236156	Argument	image		3235626	0					
ANR	3236157	Identifier	image		3235626	0					
ANR	3236158	Argument	jxr_get_IMAGE_HEIGHT ( image )		3235626	4					
ANR	3236159	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236160	Callee	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236161	Identifier	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236162	ArgumentList	image		3235626	1					
ANR	3236163	Argument	image		3235626	0					
ANR	3236164	Identifier	image		3235626	0					
ANR	3236165	Argument	1		3235626	5					
ANR	3236166	PrimaryExpression	1		3235626	0					
ANR	3236167	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	6					
ANR	3236168	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	0					
ANR	3236169	Callee	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236170	Identifier	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236171	ArgumentList	image		3235626	1					
ANR	3236172	Argument	image		3235626	0					
ANR	3236173	Identifier	image		3235626	0					
ANR	3236174	Argument	jxr_get_pixel_format ( image )		3235626	7					
ANR	3236175	CallExpression	jxr_get_pixel_format ( image )		3235626	0					
ANR	3236176	Callee	jxr_get_pixel_format		3235626	0					
ANR	3236177	Identifier	jxr_get_pixel_format		3235626	0					
ANR	3236178	ArgumentList	image		3235626	1					
ANR	3236179	Argument	image		3235626	0					
ANR	3236180	Identifier	image		3235626	0					
ANR	3236181	ExpressionStatement	"start_output_file ( conK , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2246:8:76114:76359	3235626	25	True				
ANR	3236182	CallExpression	"start_output_file ( conK , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3235626	0					
ANR	3236183	Callee	start_output_file		3235626	0					
ANR	3236184	Identifier	start_output_file		3235626	0					
ANR	3236185	ArgumentList	conK		3235626	1					
ANR	3236186	Argument	conK		3235626	0					
ANR	3236187	Identifier	conK		3235626	0					
ANR	3236188	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	1					
ANR	3236189	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236190	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236191	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236192	ArgumentList	image		3235626	1					
ANR	3236193	Argument	image		3235626	0					
ANR	3236194	Identifier	image		3235626	0					
ANR	3236195	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	2					
ANR	3236196	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236197	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236198	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236199	ArgumentList	image		3235626	1					
ANR	3236200	Argument	image		3235626	0					
ANR	3236201	Identifier	image		3235626	0					
ANR	3236202	Argument	jxr_get_IMAGE_WIDTH ( image )		3235626	3					
ANR	3236203	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236204	Callee	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236205	Identifier	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236206	ArgumentList	image		3235626	1					
ANR	3236207	Argument	image		3235626	0					
ANR	3236208	Identifier	image		3235626	0					
ANR	3236209	Argument	jxr_get_IMAGE_HEIGHT ( image )		3235626	4					
ANR	3236210	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236211	Callee	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236212	Identifier	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236213	ArgumentList	image		3235626	1					
ANR	3236214	Argument	image		3235626	0					
ANR	3236215	Identifier	image		3235626	0					
ANR	3236216	Argument	1		3235626	5					
ANR	3236217	PrimaryExpression	1		3235626	0					
ANR	3236218	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	6					
ANR	3236219	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	0					
ANR	3236220	Callee	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236221	Identifier	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236222	ArgumentList	image		3235626	1					
ANR	3236223	Argument	image		3235626	0					
ANR	3236224	Identifier	image		3235626	0					
ANR	3236225	Argument	jxr_get_pixel_format ( image )		3235626	7					
ANR	3236226	CallExpression	jxr_get_pixel_format ( image )		3235626	0					
ANR	3236227	Callee	jxr_get_pixel_format		3235626	0					
ANR	3236228	Identifier	jxr_get_pixel_format		3235626	0					
ANR	3236229	ArgumentList	image		3235626	1					
ANR	3236230	Argument	image		3235626	0					
ANR	3236231	Identifier	image		3235626	0					
ANR	3236232	IfStatement	if ( con -> alpha )		3235626	26					
ANR	3236233	Condition	con -> alpha	2250:11:76381:76390	3235626	0	True				
ANR	3236234	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3236235	Identifier	con		3235626	0					
ANR	3236236	Identifier	alpha		3235626	1					
ANR	3236237	ExpressionStatement	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2251:12:76405:76657	3235626	1	True				
ANR	3236238	CallExpression	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3235626	0					
ANR	3236239	Callee	start_output_file		3235626	0					
ANR	3236240	Identifier	start_output_file		3235626	0					
ANR	3236241	ArgumentList	conA		3235626	1					
ANR	3236242	Argument	conA		3235626	0					
ANR	3236243	Identifier	conA		3235626	0					
ANR	3236244	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	1					
ANR	3236245	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236246	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236247	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3235626	0					
ANR	3236248	ArgumentList	image		3235626	1					
ANR	3236249	Argument	image		3235626	0					
ANR	3236250	Identifier	image		3235626	0					
ANR	3236251	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	2					
ANR	3236252	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236253	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236254	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626	0					
ANR	3236255	ArgumentList	image		3235626	1					
ANR	3236256	Argument	image		3235626	0					
ANR	3236257	Identifier	image		3235626	0					
ANR	3236258	Argument	jxr_get_IMAGE_WIDTH ( image )		3235626	3					
ANR	3236259	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3235626	0					
ANR	3236260	Callee	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236261	Identifier	jxr_get_IMAGE_WIDTH		3235626	0					
ANR	3236262	ArgumentList	image		3235626	1					
ANR	3236263	Argument	image		3235626	0					
ANR	3236264	Identifier	image		3235626	0					
ANR	3236265	Argument	jxr_get_IMAGE_HEIGHT ( image )		3235626	4					
ANR	3236266	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3235626	0					
ANR	3236267	Callee	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236268	Identifier	jxr_get_IMAGE_HEIGHT		3235626	0					
ANR	3236269	ArgumentList	image		3235626	1					
ANR	3236270	Argument	image		3235626	0					
ANR	3236271	Identifier	image		3235626	0					
ANR	3236272	Argument	1		3235626	5					
ANR	3236273	PrimaryExpression	1		3235626	0					
ANR	3236274	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	6					
ANR	3236275	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3235626	0					
ANR	3236276	Callee	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236277	Identifier	jxr_get_OUTPUT_BITDEPTH		3235626	0					
ANR	3236278	ArgumentList	image		3235626	1					
ANR	3236279	Argument	image		3235626	0					
ANR	3236280	Identifier	image		3235626	0					
ANR	3236281	Argument	jxr_get_pixel_format ( image )		3235626	7					
ANR	3236282	CallExpression	jxr_get_pixel_format ( image )		3235626	0					
ANR	3236283	Callee	jxr_get_pixel_format		3235626	0					
ANR	3236284	Identifier	jxr_get_pixel_format		3235626	0					
ANR	3236285	ArgumentList	image		3235626	1					
ANR	3236286	Argument	image		3235626	0					
ANR	3236287	Identifier	image		3235626	0					
ANR	3236288	IdentifierDeclStatement	int idx ;	2257:4:76671:76678	3235626	17	True				
ANR	3236289	IdentifierDecl	idx		3235626	0					
ANR	3236290	IdentifierDeclType	int		3235626	0					
ANR	3236291	Identifier	idx		3235626	1					
ANR	3236292	IdentifierDeclStatement	int strip_blocks = ( image -> extended_width ) / 16 ;	2258:4:76684:76729	3235626	18	True				
ANR	3236293	IdentifierDecl	strip_blocks = ( image -> extended_width ) / 16		3235626	0					
ANR	3236294	IdentifierDeclType	int		3235626	0					
ANR	3236295	Identifier	strip_blocks		3235626	1					
ANR	3236296	AssignmentExpression	strip_blocks = ( image -> extended_width ) / 16		3235626	2		=			
ANR	3236297	Identifier	strip_blocks		3235626	0					
ANR	3236298	MultiplicativeExpression	( image -> extended_width ) / 16		3235626	1		/			
ANR	3236299	PtrMemberAccess	image -> extended_width		3235626	0					
ANR	3236300	Identifier	image		3235626	0					
ANR	3236301	Identifier	extended_width		3235626	1					
ANR	3236302	PrimaryExpression	16		3235626	1					
ANR	3236303	IdentifierDeclStatement	int dy = 16 * strip_blocks ;	2259:4:76735:76759	3235626	19	True				
ANR	3236304	IdentifierDecl	dy = 16 * strip_blocks		3235626	0					
ANR	3236305	IdentifierDeclType	int		3235626	0					
ANR	3236306	Identifier	dy		3235626	1					
ANR	3236307	AssignmentExpression	dy = 16 * strip_blocks		3235626	2		=			
ANR	3236308	Identifier	dy		3235626	0					
ANR	3236309	MultiplicativeExpression	16 * strip_blocks		3235626	1		*			
ANR	3236310	PrimaryExpression	16		3235626	0					
ANR	3236311	Identifier	strip_blocks		3235626	1					
ANR	3236312	IfStatement	if ( con -> bpi == 8 )		3235626	20					
ANR	3236313	Condition	con -> bpi == 8	2261:8:76774:76786	3235626	0	True				
ANR	3236314	EqualityExpression	con -> bpi == 8		3235626	0		==			
ANR	3236315	PtrMemberAccess	con -> bpi		3235626	0					
ANR	3236316	Identifier	con		3235626	0					
ANR	3236317	Identifier	bpi		3235626	1					
ANR	3236318	PrimaryExpression	8		3235626	1					
ANR	3236319	CompoundStatement		76:8:3412:3453	3235626	1					
ANR	3236320	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conC -> buf + 16 * mx ;	2264:8:76816:76857	3235626	0	True				
ANR	3236321	IdentifierDecl	* dp = ( uint8_t * ) conC -> buf + 16 * mx		3235626	0					
ANR	3236322	IdentifierDeclType	uint8_t *		3235626	0					
ANR	3236323	Identifier	dp		3235626	1					
ANR	3236324	AssignmentExpression	* dp = ( uint8_t * ) conC -> buf + 16 * mx		3235626	2		=			
ANR	3236325	Identifier	dp		3235626	0					
ANR	3236326	AdditiveExpression	( uint8_t * ) conC -> buf + 16 * mx		3235626	1		+			
ANR	3236327	CastExpression	( uint8_t * ) conC -> buf		3235626	0					
ANR	3236328	CastTarget	uint8_t *		3235626	0					
ANR	3236329	PtrMemberAccess	conC -> buf		3235626	1					
ANR	3236330	Identifier	conC		3235626	0					
ANR	3236331	Identifier	buf		3235626	1					
ANR	3236332	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236333	PrimaryExpression	16		3235626	0					
ANR	3236334	Identifier	mx		3235626	1					
ANR	3236335	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	1					
ANR	3236336	ForInit	idx = 0 ;	2265:13:76872:76879	3235626	0	True				
ANR	3236337	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236338	Identifier	idx		3235626	0					
ANR	3236339	PrimaryExpression	0		3235626	1					
ANR	3236340	Condition	idx < 256	2265:22:76881:76889	3235626	1	True				
ANR	3236341	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236342	Identifier	idx		3235626	0					
ANR	3236343	PrimaryExpression	256		3235626	1					
ANR	3236344	AssignmentExpression	idx += 1	2265:33:76892:76899	3235626	2	True	+=			
ANR	3236345	Identifier	idx		3235626	0					
ANR	3236346	PrimaryExpression	1		3235626	1					
ANR	3236347	CompoundStatement		78:12:3512:3544	3235626	3					
ANR	3236348	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2266:12:76916:76948	3235626	0	True				
ANR	3236349	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236350	IdentifierDeclType	int		3235626	0					
ANR	3236351	Identifier	dix		3235626	1					
ANR	3236352	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236353	Identifier	dix		3235626	0					
ANR	3236354	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236355	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236356	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236357	Identifier	idx		3235626	0					
ANR	3236358	PrimaryExpression	16		3235626	1					
ANR	3236359	Identifier	dy		3235626	1					
ANR	3236360	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236361	Identifier	idx		3235626	0					
ANR	3236362	PrimaryExpression	16		3235626	1					
ANR	3236363	ExpressionStatement	dp [ dix ] = dataC [ idx ]	2267:12:76974:76994	3235626	1	True				
ANR	3236364	AssignmentExpression	dp [ dix ] = dataC [ idx ]		3235626	0		=			
ANR	3236365	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236366	Identifier	dp		3235626	0					
ANR	3236367	Identifier	dix		3235626	1					
ANR	3236368	ArrayIndexing	dataC [ idx ]		3235626	1					
ANR	3236369	Identifier	dataC		3235626	0					
ANR	3236370	Identifier	idx		3235626	1					
ANR	3236371	ExpressionStatement	dp = ( uint8_t * ) conM -> buf + 16 * mx	2271:8:77039:77071	3235626	2	True				
ANR	3236372	AssignmentExpression	dp = ( uint8_t * ) conM -> buf + 16 * mx		3235626	0		=			
ANR	3236373	Identifier	dp		3235626	0					
ANR	3236374	AdditiveExpression	( uint8_t * ) conM -> buf + 16 * mx		3235626	1		+			
ANR	3236375	CastExpression	( uint8_t * ) conM -> buf		3235626	0					
ANR	3236376	CastTarget	uint8_t *		3235626	0					
ANR	3236377	PtrMemberAccess	conM -> buf		3235626	1					
ANR	3236378	Identifier	conM		3235626	0					
ANR	3236379	Identifier	buf		3235626	1					
ANR	3236380	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236381	PrimaryExpression	16		3235626	0					
ANR	3236382	Identifier	mx		3235626	1					
ANR	3236383	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	3					
ANR	3236384	ForInit	idx = 0 ;	2272:13:77086:77093	3235626	0	True				
ANR	3236385	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236386	Identifier	idx		3235626	0					
ANR	3236387	PrimaryExpression	0		3235626	1					
ANR	3236388	Condition	idx < 256	2272:22:77095:77103	3235626	1	True				
ANR	3236389	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236390	Identifier	idx		3235626	0					
ANR	3236391	PrimaryExpression	256		3235626	1					
ANR	3236392	AssignmentExpression	idx += 1	2272:33:77106:77113	3235626	2	True	+=			
ANR	3236393	Identifier	idx		3235626	0					
ANR	3236394	PrimaryExpression	1		3235626	1					
ANR	3236395	CompoundStatement		85:12:3726:3758	3235626	3					
ANR	3236396	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2273:12:77130:77162	3235626	0	True				
ANR	3236397	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236398	IdentifierDeclType	int		3235626	0					
ANR	3236399	Identifier	dix		3235626	1					
ANR	3236400	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236401	Identifier	dix		3235626	0					
ANR	3236402	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236403	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236404	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236405	Identifier	idx		3235626	0					
ANR	3236406	PrimaryExpression	16		3235626	1					
ANR	3236407	Identifier	dy		3235626	1					
ANR	3236408	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236409	Identifier	idx		3235626	0					
ANR	3236410	PrimaryExpression	16		3235626	1					
ANR	3236411	ExpressionStatement	dp [ dix ] = dataM [ idx ]	2274:12:77188:77208	3235626	1	True				
ANR	3236412	AssignmentExpression	dp [ dix ] = dataM [ idx ]		3235626	0		=			
ANR	3236413	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236414	Identifier	dp		3235626	0					
ANR	3236415	Identifier	dix		3235626	1					
ANR	3236416	ArrayIndexing	dataM [ idx ]		3235626	1					
ANR	3236417	Identifier	dataM		3235626	0					
ANR	3236418	Identifier	idx		3235626	1					
ANR	3236419	ExpressionStatement	dp = ( uint8_t * ) conY -> buf + 16 * mx	2277:8:77244:77276	3235626	4	True				
ANR	3236420	AssignmentExpression	dp = ( uint8_t * ) conY -> buf + 16 * mx		3235626	0		=			
ANR	3236421	Identifier	dp		3235626	0					
ANR	3236422	AdditiveExpression	( uint8_t * ) conY -> buf + 16 * mx		3235626	1		+			
ANR	3236423	CastExpression	( uint8_t * ) conY -> buf		3235626	0					
ANR	3236424	CastTarget	uint8_t *		3235626	0					
ANR	3236425	PtrMemberAccess	conY -> buf		3235626	1					
ANR	3236426	Identifier	conY		3235626	0					
ANR	3236427	Identifier	buf		3235626	1					
ANR	3236428	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236429	PrimaryExpression	16		3235626	0					
ANR	3236430	Identifier	mx		3235626	1					
ANR	3236431	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	5					
ANR	3236432	ForInit	idx = 0 ;	2278:13:77291:77298	3235626	0	True				
ANR	3236433	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236434	Identifier	idx		3235626	0					
ANR	3236435	PrimaryExpression	0		3235626	1					
ANR	3236436	Condition	idx < 256	2278:22:77300:77308	3235626	1	True				
ANR	3236437	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236438	Identifier	idx		3235626	0					
ANR	3236439	PrimaryExpression	256		3235626	1					
ANR	3236440	AssignmentExpression	idx += 1	2278:33:77311:77318	3235626	2	True	+=			
ANR	3236441	Identifier	idx		3235626	0					
ANR	3236442	PrimaryExpression	1		3235626	1					
ANR	3236443	CompoundStatement		91:12:3931:3963	3235626	3					
ANR	3236444	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2279:12:77335:77367	3235626	0	True				
ANR	3236445	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236446	IdentifierDeclType	int		3235626	0					
ANR	3236447	Identifier	dix		3235626	1					
ANR	3236448	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236449	Identifier	dix		3235626	0					
ANR	3236450	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236451	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236452	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236453	Identifier	idx		3235626	0					
ANR	3236454	PrimaryExpression	16		3235626	1					
ANR	3236455	Identifier	dy		3235626	1					
ANR	3236456	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236457	Identifier	idx		3235626	0					
ANR	3236458	PrimaryExpression	16		3235626	1					
ANR	3236459	ExpressionStatement	dp [ dix ] = dataY [ idx ]	2280:12:77393:77413	3235626	1	True				
ANR	3236460	AssignmentExpression	dp [ dix ] = dataY [ idx ]		3235626	0		=			
ANR	3236461	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236462	Identifier	dp		3235626	0					
ANR	3236463	Identifier	dix		3235626	1					
ANR	3236464	ArrayIndexing	dataY [ idx ]		3235626	1					
ANR	3236465	Identifier	dataY		3235626	0					
ANR	3236466	Identifier	idx		3235626	1					
ANR	3236467	ExpressionStatement	dp = ( uint8_t * ) conK -> buf + 16 * mx	2283:8:77450:77482	3235626	6	True				
ANR	3236468	AssignmentExpression	dp = ( uint8_t * ) conK -> buf + 16 * mx		3235626	0		=			
ANR	3236469	Identifier	dp		3235626	0					
ANR	3236470	AdditiveExpression	( uint8_t * ) conK -> buf + 16 * mx		3235626	1		+			
ANR	3236471	CastExpression	( uint8_t * ) conK -> buf		3235626	0					
ANR	3236472	CastTarget	uint8_t *		3235626	0					
ANR	3236473	PtrMemberAccess	conK -> buf		3235626	1					
ANR	3236474	Identifier	conK		3235626	0					
ANR	3236475	Identifier	buf		3235626	1					
ANR	3236476	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236477	PrimaryExpression	16		3235626	0					
ANR	3236478	Identifier	mx		3235626	1					
ANR	3236479	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	7					
ANR	3236480	ForInit	idx = 0 ;	2284:13:77497:77504	3235626	0	True				
ANR	3236481	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236482	Identifier	idx		3235626	0					
ANR	3236483	PrimaryExpression	0		3235626	1					
ANR	3236484	Condition	idx < 256	2284:22:77506:77514	3235626	1	True				
ANR	3236485	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236486	Identifier	idx		3235626	0					
ANR	3236487	PrimaryExpression	256		3235626	1					
ANR	3236488	AssignmentExpression	idx += 1	2284:33:77517:77524	3235626	2	True	+=			
ANR	3236489	Identifier	idx		3235626	0					
ANR	3236490	PrimaryExpression	1		3235626	1					
ANR	3236491	CompoundStatement		97:12:4137:4169	3235626	3					
ANR	3236492	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2285:12:77541:77573	3235626	0	True				
ANR	3236493	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236494	IdentifierDeclType	int		3235626	0					
ANR	3236495	Identifier	dix		3235626	1					
ANR	3236496	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236497	Identifier	dix		3235626	0					
ANR	3236498	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236499	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236500	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236501	Identifier	idx		3235626	0					
ANR	3236502	PrimaryExpression	16		3235626	1					
ANR	3236503	Identifier	dy		3235626	1					
ANR	3236504	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236505	Identifier	idx		3235626	0					
ANR	3236506	PrimaryExpression	16		3235626	1					
ANR	3236507	ExpressionStatement	dp [ dix ] = dataK [ idx ]	2286:12:77599:77619	3235626	1	True				
ANR	3236508	AssignmentExpression	dp [ dix ] = dataK [ idx ]		3235626	0		=			
ANR	3236509	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236510	Identifier	dp		3235626	0					
ANR	3236511	Identifier	dix		3235626	1					
ANR	3236512	ArrayIndexing	dataK [ idx ]		3235626	1					
ANR	3236513	Identifier	dataK		3235626	0					
ANR	3236514	Identifier	idx		3235626	1					
ANR	3236515	IfStatement	if ( con -> alpha )		3235626	8					
ANR	3236516	Condition	con -> alpha	2290:11:77644:77653	3235626	0	True				
ANR	3236517	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3236518	Identifier	con		3235626	0					
ANR	3236519	Identifier	alpha		3235626	1					
ANR	3236520	CompoundStatement		103:8:4260:4260	3235626	1					
ANR	3236521	ExpressionStatement	dp = ( uint8_t * ) conA -> buf + 16 * mx	2292:12:77678:77710	3235626	0	True				
ANR	3236522	AssignmentExpression	dp = ( uint8_t * ) conA -> buf + 16 * mx		3235626	0		=			
ANR	3236523	Identifier	dp		3235626	0					
ANR	3236524	AdditiveExpression	( uint8_t * ) conA -> buf + 16 * mx		3235626	1		+			
ANR	3236525	CastExpression	( uint8_t * ) conA -> buf		3235626	0					
ANR	3236526	CastTarget	uint8_t *		3235626	0					
ANR	3236527	PtrMemberAccess	conA -> buf		3235626	1					
ANR	3236528	Identifier	conA		3235626	0					
ANR	3236529	Identifier	buf		3235626	1					
ANR	3236530	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236531	PrimaryExpression	16		3235626	0					
ANR	3236532	Identifier	mx		3235626	1					
ANR	3236533	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	1					
ANR	3236534	ForInit	idx = 0 ;	2293:17:77729:77736	3235626	0	True				
ANR	3236535	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236536	Identifier	idx		3235626	0					
ANR	3236537	PrimaryExpression	0		3235626	1					
ANR	3236538	Condition	idx < 256	2293:26:77738:77746	3235626	1	True				
ANR	3236539	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236540	Identifier	idx		3235626	0					
ANR	3236541	PrimaryExpression	256		3235626	1					
ANR	3236542	AssignmentExpression	idx += 1	2293:37:77749:77756	3235626	2	True	+=			
ANR	3236543	Identifier	idx		3235626	0					
ANR	3236544	PrimaryExpression	1		3235626	1					
ANR	3236545	CompoundStatement		106:16:4373:4405	3235626	3					
ANR	3236546	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2294:16:77777:77809	3235626	0	True				
ANR	3236547	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236548	IdentifierDeclType	int		3235626	0					
ANR	3236549	Identifier	dix		3235626	1					
ANR	3236550	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236551	Identifier	dix		3235626	0					
ANR	3236552	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236553	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236554	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236555	Identifier	idx		3235626	0					
ANR	3236556	PrimaryExpression	16		3235626	1					
ANR	3236557	Identifier	dy		3235626	1					
ANR	3236558	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236559	Identifier	idx		3235626	0					
ANR	3236560	PrimaryExpression	16		3235626	1					
ANR	3236561	ExpressionStatement	dp [ dix ] = dataA [ idx ]	2295:16:77839:77859	3235626	1	True				
ANR	3236562	AssignmentExpression	dp [ dix ] = dataA [ idx ]		3235626	0		=			
ANR	3236563	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236564	Identifier	dp		3235626	0					
ANR	3236565	Identifier	dix		3235626	1					
ANR	3236566	ArrayIndexing	dataA [ idx ]		3235626	1					
ANR	3236567	Identifier	dataA		3235626	0					
ANR	3236568	Identifier	idx		3235626	1					
ANR	3236569	ElseStatement	else		3235626	0					
ANR	3236570	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		3235626	0					
ANR	3236571	Condition	con -> bpi == 16 || con -> bpi == 10	2300:12:77912:77943	3235626	0	True				
ANR	3236572	OrExpression	con -> bpi == 16 || con -> bpi == 10		3235626	0		||			
ANR	3236573	EqualityExpression	con -> bpi == 16		3235626	0		==			
ANR	3236574	PtrMemberAccess	con -> bpi		3235626	0					
ANR	3236575	Identifier	con		3235626	0					
ANR	3236576	Identifier	bpi		3235626	1					
ANR	3236577	PrimaryExpression	16		3235626	1					
ANR	3236578	EqualityExpression	con -> bpi == 10		3235626	1		==			
ANR	3236579	PtrMemberAccess	con -> bpi		3235626	0					
ANR	3236580	Identifier	con		3235626	0					
ANR	3236581	Identifier	bpi		3235626	1					
ANR	3236582	PrimaryExpression	10		3235626	1					
ANR	3236583	CompoundStatement		115:8:4569:4612	3235626	1					
ANR	3236584	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conC -> buf + 16 * mx ;	2303:8:77973:78016	3235626	0	True				
ANR	3236585	IdentifierDecl	* dp = ( uint16_t * ) conC -> buf + 16 * mx		3235626	0					
ANR	3236586	IdentifierDeclType	uint16_t *		3235626	0					
ANR	3236587	Identifier	dp		3235626	1					
ANR	3236588	AssignmentExpression	* dp = ( uint16_t * ) conC -> buf + 16 * mx		3235626	2		=			
ANR	3236589	Identifier	dp		3235626	0					
ANR	3236590	AdditiveExpression	( uint16_t * ) conC -> buf + 16 * mx		3235626	1		+			
ANR	3236591	CastExpression	( uint16_t * ) conC -> buf		3235626	0					
ANR	3236592	CastTarget	uint16_t *		3235626	0					
ANR	3236593	PtrMemberAccess	conC -> buf		3235626	1					
ANR	3236594	Identifier	conC		3235626	0					
ANR	3236595	Identifier	buf		3235626	1					
ANR	3236596	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236597	PrimaryExpression	16		3235626	0					
ANR	3236598	Identifier	mx		3235626	1					
ANR	3236599	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	1					
ANR	3236600	ForInit	idx = 0 ;	2304:13:78031:78038	3235626	0	True				
ANR	3236601	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236602	Identifier	idx		3235626	0					
ANR	3236603	PrimaryExpression	0		3235626	1					
ANR	3236604	Condition	idx < 256	2304:22:78040:78048	3235626	1	True				
ANR	3236605	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236606	Identifier	idx		3235626	0					
ANR	3236607	PrimaryExpression	256		3235626	1					
ANR	3236608	AssignmentExpression	idx += 1	2304:33:78051:78058	3235626	2	True	+=			
ANR	3236609	Identifier	idx		3235626	0					
ANR	3236610	PrimaryExpression	1		3235626	1					
ANR	3236611	CompoundStatement		117:12:4671:4703	3235626	3					
ANR	3236612	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2305:12:78075:78107	3235626	0	True				
ANR	3236613	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236614	IdentifierDeclType	int		3235626	0					
ANR	3236615	Identifier	dix		3235626	1					
ANR	3236616	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236617	Identifier	dix		3235626	0					
ANR	3236618	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236619	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236620	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236621	Identifier	idx		3235626	0					
ANR	3236622	PrimaryExpression	16		3235626	1					
ANR	3236623	Identifier	dy		3235626	1					
ANR	3236624	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236625	Identifier	idx		3235626	0					
ANR	3236626	PrimaryExpression	16		3235626	1					
ANR	3236627	ExpressionStatement	dp [ dix ] = dataC [ idx ]	2306:12:78133:78153	3235626	1	True				
ANR	3236628	AssignmentExpression	dp [ dix ] = dataC [ idx ]		3235626	0		=			
ANR	3236629	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236630	Identifier	dp		3235626	0					
ANR	3236631	Identifier	dix		3235626	1					
ANR	3236632	ArrayIndexing	dataC [ idx ]		3235626	1					
ANR	3236633	Identifier	dataC		3235626	0					
ANR	3236634	Identifier	idx		3235626	1					
ANR	3236635	ExpressionStatement	dp = ( uint16_t * ) conM -> buf + 16 * mx	2310:8:78205:78238	3235626	2	True				
ANR	3236636	AssignmentExpression	dp = ( uint16_t * ) conM -> buf + 16 * mx		3235626	0		=			
ANR	3236637	Identifier	dp		3235626	0					
ANR	3236638	AdditiveExpression	( uint16_t * ) conM -> buf + 16 * mx		3235626	1		+			
ANR	3236639	CastExpression	( uint16_t * ) conM -> buf		3235626	0					
ANR	3236640	CastTarget	uint16_t *		3235626	0					
ANR	3236641	PtrMemberAccess	conM -> buf		3235626	1					
ANR	3236642	Identifier	conM		3235626	0					
ANR	3236643	Identifier	buf		3235626	1					
ANR	3236644	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236645	PrimaryExpression	16		3235626	0					
ANR	3236646	Identifier	mx		3235626	1					
ANR	3236647	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	3					
ANR	3236648	ForInit	idx = 0 ;	2311:13:78253:78260	3235626	0	True				
ANR	3236649	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236650	Identifier	idx		3235626	0					
ANR	3236651	PrimaryExpression	0		3235626	1					
ANR	3236652	Condition	idx < 256	2311:22:78262:78270	3235626	1	True				
ANR	3236653	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236654	Identifier	idx		3235626	0					
ANR	3236655	PrimaryExpression	256		3235626	1					
ANR	3236656	AssignmentExpression	idx += 1	2311:33:78273:78280	3235626	2	True	+=			
ANR	3236657	Identifier	idx		3235626	0					
ANR	3236658	PrimaryExpression	1		3235626	1					
ANR	3236659	CompoundStatement		124:12:4893:4925	3235626	3					
ANR	3236660	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2312:12:78297:78329	3235626	0	True				
ANR	3236661	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236662	IdentifierDeclType	int		3235626	0					
ANR	3236663	Identifier	dix		3235626	1					
ANR	3236664	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236665	Identifier	dix		3235626	0					
ANR	3236666	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236667	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236668	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236669	Identifier	idx		3235626	0					
ANR	3236670	PrimaryExpression	16		3235626	1					
ANR	3236671	Identifier	dy		3235626	1					
ANR	3236672	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236673	Identifier	idx		3235626	0					
ANR	3236674	PrimaryExpression	16		3235626	1					
ANR	3236675	ExpressionStatement	dp [ dix ] = dataM [ idx ]	2313:12:78355:78375	3235626	1	True				
ANR	3236676	AssignmentExpression	dp [ dix ] = dataM [ idx ]		3235626	0		=			
ANR	3236677	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236678	Identifier	dp		3235626	0					
ANR	3236679	Identifier	dix		3235626	1					
ANR	3236680	ArrayIndexing	dataM [ idx ]		3235626	1					
ANR	3236681	Identifier	dataM		3235626	0					
ANR	3236682	Identifier	idx		3235626	1					
ANR	3236683	ExpressionStatement	dp = ( uint16_t * ) conY -> buf + 16 * mx	2316:8:78411:78444	3235626	4	True				
ANR	3236684	AssignmentExpression	dp = ( uint16_t * ) conY -> buf + 16 * mx		3235626	0		=			
ANR	3236685	Identifier	dp		3235626	0					
ANR	3236686	AdditiveExpression	( uint16_t * ) conY -> buf + 16 * mx		3235626	1		+			
ANR	3236687	CastExpression	( uint16_t * ) conY -> buf		3235626	0					
ANR	3236688	CastTarget	uint16_t *		3235626	0					
ANR	3236689	PtrMemberAccess	conY -> buf		3235626	1					
ANR	3236690	Identifier	conY		3235626	0					
ANR	3236691	Identifier	buf		3235626	1					
ANR	3236692	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236693	PrimaryExpression	16		3235626	0					
ANR	3236694	Identifier	mx		3235626	1					
ANR	3236695	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	5					
ANR	3236696	ForInit	idx = 0 ;	2317:13:78459:78466	3235626	0	True				
ANR	3236697	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236698	Identifier	idx		3235626	0					
ANR	3236699	PrimaryExpression	0		3235626	1					
ANR	3236700	Condition	idx < 256	2317:22:78468:78476	3235626	1	True				
ANR	3236701	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236702	Identifier	idx		3235626	0					
ANR	3236703	PrimaryExpression	256		3235626	1					
ANR	3236704	AssignmentExpression	idx += 1	2317:33:78479:78486	3235626	2	True	+=			
ANR	3236705	Identifier	idx		3235626	0					
ANR	3236706	PrimaryExpression	1		3235626	1					
ANR	3236707	CompoundStatement		130:12:5099:5131	3235626	3					
ANR	3236708	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2318:12:78503:78535	3235626	0	True				
ANR	3236709	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236710	IdentifierDeclType	int		3235626	0					
ANR	3236711	Identifier	dix		3235626	1					
ANR	3236712	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236713	Identifier	dix		3235626	0					
ANR	3236714	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236715	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236716	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236717	Identifier	idx		3235626	0					
ANR	3236718	PrimaryExpression	16		3235626	1					
ANR	3236719	Identifier	dy		3235626	1					
ANR	3236720	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236721	Identifier	idx		3235626	0					
ANR	3236722	PrimaryExpression	16		3235626	1					
ANR	3236723	ExpressionStatement	dp [ dix ] = dataY [ idx ]	2319:12:78561:78581	3235626	1	True				
ANR	3236724	AssignmentExpression	dp [ dix ] = dataY [ idx ]		3235626	0		=			
ANR	3236725	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236726	Identifier	dp		3235626	0					
ANR	3236727	Identifier	dix		3235626	1					
ANR	3236728	ArrayIndexing	dataY [ idx ]		3235626	1					
ANR	3236729	Identifier	dataY		3235626	0					
ANR	3236730	Identifier	idx		3235626	1					
ANR	3236731	ExpressionStatement	dp = ( uint16_t * ) conK -> buf + 16 * mx	2322:8:78617:78650	3235626	6	True				
ANR	3236732	AssignmentExpression	dp = ( uint16_t * ) conK -> buf + 16 * mx		3235626	0		=			
ANR	3236733	Identifier	dp		3235626	0					
ANR	3236734	AdditiveExpression	( uint16_t * ) conK -> buf + 16 * mx		3235626	1		+			
ANR	3236735	CastExpression	( uint16_t * ) conK -> buf		3235626	0					
ANR	3236736	CastTarget	uint16_t *		3235626	0					
ANR	3236737	PtrMemberAccess	conK -> buf		3235626	1					
ANR	3236738	Identifier	conK		3235626	0					
ANR	3236739	Identifier	buf		3235626	1					
ANR	3236740	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236741	PrimaryExpression	16		3235626	0					
ANR	3236742	Identifier	mx		3235626	1					
ANR	3236743	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	7					
ANR	3236744	ForInit	idx = 0 ;	2323:13:78665:78672	3235626	0	True				
ANR	3236745	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236746	Identifier	idx		3235626	0					
ANR	3236747	PrimaryExpression	0		3235626	1					
ANR	3236748	Condition	idx < 256	2323:22:78674:78682	3235626	1	True				
ANR	3236749	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236750	Identifier	idx		3235626	0					
ANR	3236751	PrimaryExpression	256		3235626	1					
ANR	3236752	AssignmentExpression	idx += 1	2323:33:78685:78692	3235626	2	True	+=			
ANR	3236753	Identifier	idx		3235626	0					
ANR	3236754	PrimaryExpression	1		3235626	1					
ANR	3236755	CompoundStatement		136:12:5305:5337	3235626	3					
ANR	3236756	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2324:12:78709:78741	3235626	0	True				
ANR	3236757	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236758	IdentifierDeclType	int		3235626	0					
ANR	3236759	Identifier	dix		3235626	1					
ANR	3236760	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236761	Identifier	dix		3235626	0					
ANR	3236762	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236763	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236764	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236765	Identifier	idx		3235626	0					
ANR	3236766	PrimaryExpression	16		3235626	1					
ANR	3236767	Identifier	dy		3235626	1					
ANR	3236768	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236769	Identifier	idx		3235626	0					
ANR	3236770	PrimaryExpression	16		3235626	1					
ANR	3236771	ExpressionStatement	dp [ dix ] = dataK [ idx ]	2325:12:78767:78787	3235626	1	True				
ANR	3236772	AssignmentExpression	dp [ dix ] = dataK [ idx ]		3235626	0		=			
ANR	3236773	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236774	Identifier	dp		3235626	0					
ANR	3236775	Identifier	dix		3235626	1					
ANR	3236776	ArrayIndexing	dataK [ idx ]		3235626	1					
ANR	3236777	Identifier	dataK		3235626	0					
ANR	3236778	Identifier	idx		3235626	1					
ANR	3236779	IfStatement	if ( con -> alpha )		3235626	8					
ANR	3236780	Condition	con -> alpha	2329:11:78827:78836	3235626	0	True				
ANR	3236781	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3236782	Identifier	con		3235626	0					
ANR	3236783	Identifier	alpha		3235626	1					
ANR	3236784	CompoundStatement		142:8:5443:5443	3235626	1					
ANR	3236785	ExpressionStatement	dp = ( uint16_t * ) conA -> buf + 16 * mx	2331:12:78861:78894	3235626	0	True				
ANR	3236786	AssignmentExpression	dp = ( uint16_t * ) conA -> buf + 16 * mx		3235626	0		=			
ANR	3236787	Identifier	dp		3235626	0					
ANR	3236788	AdditiveExpression	( uint16_t * ) conA -> buf + 16 * mx		3235626	1		+			
ANR	3236789	CastExpression	( uint16_t * ) conA -> buf		3235626	0					
ANR	3236790	CastTarget	uint16_t *		3235626	0					
ANR	3236791	PtrMemberAccess	conA -> buf		3235626	1					
ANR	3236792	Identifier	conA		3235626	0					
ANR	3236793	Identifier	buf		3235626	1					
ANR	3236794	MultiplicativeExpression	16 * mx		3235626	1		*			
ANR	3236795	PrimaryExpression	16		3235626	0					
ANR	3236796	Identifier	mx		3235626	1					
ANR	3236797	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3235626	1					
ANR	3236798	ForInit	idx = 0 ;	2332:17:78913:78920	3235626	0	True				
ANR	3236799	AssignmentExpression	idx = 0		3235626	0		=			
ANR	3236800	Identifier	idx		3235626	0					
ANR	3236801	PrimaryExpression	0		3235626	1					
ANR	3236802	Condition	idx < 256	2332:26:78922:78930	3235626	1	True				
ANR	3236803	RelationalExpression	idx < 256		3235626	0		<			
ANR	3236804	Identifier	idx		3235626	0					
ANR	3236805	PrimaryExpression	256		3235626	1					
ANR	3236806	AssignmentExpression	idx += 1	2332:37:78933:78940	3235626	2	True	+=			
ANR	3236807	Identifier	idx		3235626	0					
ANR	3236808	PrimaryExpression	1		3235626	1					
ANR	3236809	CompoundStatement		145:16:5557:5589	3235626	3					
ANR	3236810	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2333:16:78961:78993	3235626	0	True				
ANR	3236811	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	0					
ANR	3236812	IdentifierDeclType	int		3235626	0					
ANR	3236813	Identifier	dix		3235626	1					
ANR	3236814	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		3235626	2		=			
ANR	3236815	Identifier	dix		3235626	0					
ANR	3236816	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		3235626	1		+			
ANR	3236817	MultiplicativeExpression	( idx / 16 ) * dy		3235626	0		*			
ANR	3236818	MultiplicativeExpression	idx / 16		3235626	0		/			
ANR	3236819	Identifier	idx		3235626	0					
ANR	3236820	PrimaryExpression	16		3235626	1					
ANR	3236821	Identifier	dy		3235626	1					
ANR	3236822	MultiplicativeExpression	idx % 16		3235626	1		%			
ANR	3236823	Identifier	idx		3235626	0					
ANR	3236824	PrimaryExpression	16		3235626	1					
ANR	3236825	ExpressionStatement	dp [ dix ] = dataA [ idx ]	2334:16:79023:79043	3235626	1	True				
ANR	3236826	AssignmentExpression	dp [ dix ] = dataA [ idx ]		3235626	0		=			
ANR	3236827	ArrayIndexing	dp [ dix ]		3235626	0					
ANR	3236828	Identifier	dp		3235626	0					
ANR	3236829	Identifier	dix		3235626	1					
ANR	3236830	ArrayIndexing	dataA [ idx ]		3235626	1					
ANR	3236831	Identifier	dataA		3235626	0					
ANR	3236832	Identifier	idx		3235626	1					
ANR	3236833	ElseStatement	else		3235626	0					
ANR	3236834	CompoundStatement		151:4:5692:5692	3235626	0					
ANR	3236835	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2340:8:79106:79139	3235626	0	True				
ANR	3236836	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3235626	0					
ANR	3236837	Callee	assert		3235626	0					
ANR	3236838	Identifier	assert		3235626	0					
ANR	3236839	ArgumentList	"! ""Unsupported bitdepth\\n"""		3235626	1					
ANR	3236840	Argument	"! ""Unsupported bitdepth\\n"""		3235626	0					
ANR	3236841	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3235626	0					
ANR	3236842	UnaryOperator	!		3235626	0					
ANR	3236843	PrimaryExpression	"""Unsupported bitdepth\\n"""		3235626	1					
ANR	3236844	IfStatement	if ( mx + 1 == strip_blocks )		3235626	21					
ANR	3236845	Condition	mx + 1 == strip_blocks	2343:8:79156:79175	3235626	0	True				
ANR	3236846	EqualityExpression	mx + 1 == strip_blocks		3235626	0		==			
ANR	3236847	AdditiveExpression	mx + 1		3235626	0		+			
ANR	3236848	Identifier	mx		3235626	0					
ANR	3236849	PrimaryExpression	1		3235626	1					
ANR	3236850	Identifier	strip_blocks		3235626	1					
ANR	3236851	CompoundStatement		155:30:5774:5774	3235626	1					
ANR	3236852	IfStatement	if ( con -> bpi == 8 )		3235626	0					
ANR	3236853	Condition	con -> bpi == 8	2345:11:79200:79212	3235626	0	True				
ANR	3236854	EqualityExpression	con -> bpi == 8		3235626	0		==			
ANR	3236855	PtrMemberAccess	con -> bpi		3235626	0					
ANR	3236856	Identifier	con		3235626	0					
ANR	3236857	Identifier	bpi		3235626	1					
ANR	3236858	PrimaryExpression	8		3235626	1					
ANR	3236859	CompoundStatement		160:12:5928:6016	3235626	1					
ANR	3236860	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining ;	2347:12:79247:79318	3235626	0	True				
ANR	3236861	IdentifierDecl	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3235626	0					
ANR	3236862	IdentifierDeclType	int		3235626	0					
ANR	3236863	Identifier	first		3235626	1					
ANR	3236864	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3235626	2		=			
ANR	3236865	Identifier	first		3235626	0					
ANR	3236866	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3235626	1					
ANR	3236867	Condition	con -> top_pad_remaining > 16		3235626	0					
ANR	3236868	RelationalExpression	con -> top_pad_remaining > 16		3235626	0		>			
ANR	3236869	PtrMemberAccess	con -> top_pad_remaining		3235626	0					
ANR	3236870	Identifier	con		3235626	0					
ANR	3236871	Identifier	top_pad_remaining		3235626	1					
ANR	3236872	PrimaryExpression	16		3235626	1					
ANR	3236873	PrimaryExpression	16		3235626	1					
ANR	3236874	PtrMemberAccess	con -> top_pad_remaining		3235626	2					
ANR	3236875	Identifier	con		3235626	0					
ANR	3236876	Identifier	top_pad_remaining		3235626	1					
ANR	3236877	IdentifierDeclStatement	int trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16 ;	2348:12:79332:79420	3235626	1	True				
ANR	3236878	IdentifierDecl	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3235626	0					
ANR	3236879	IdentifierDeclType	int		3235626	0					
ANR	3236880	Identifier	trans		3235626	1					
ANR	3236881	AssignmentExpression	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3235626	2		=			
ANR	3236882	Identifier	trans		3235626	0					
ANR	3236883	ConditionalExpression	( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3235626	1					
ANR	3236884	Condition	my * 16 + 16 > ( con -> hei + con -> top_pad )		3235626	0					
ANR	3236885	RelationalExpression	my * 16 + 16 > ( con -> hei + con -> top_pad )		3235626	0		>			
ANR	3236886	AdditiveExpression	my * 16 + 16		3235626	0		+			
ANR	3236887	MultiplicativeExpression	my * 16		3235626	0		*			
ANR	3236888	Identifier	my		3235626	0					
ANR	3236889	PrimaryExpression	16		3235626	1					
ANR	3236890	PrimaryExpression	16		3235626	1					
ANR	3236891	AdditiveExpression	con -> hei + con -> top_pad		3235626	1		+			
ANR	3236892	PtrMemberAccess	con -> hei		3235626	0					
ANR	3236893	Identifier	con		3235626	0					
ANR	3236894	Identifier	hei		3235626	1					
ANR	3236895	PtrMemberAccess	con -> top_pad		3235626	1					
ANR	3236896	Identifier	con		3235626	0					
ANR	3236897	Identifier	top_pad		3235626	1					
ANR	3236898	MultiplicativeExpression	( con -> hei + con -> top_pad ) % 16		3235626	1		%			
ANR	3236899	AdditiveExpression	con -> hei + con -> top_pad		3235626	0		+			
ANR	3236900	PtrMemberAccess	con -> hei		3235626	0					
ANR	3236901	Identifier	con		3235626	0					
ANR	3236902	Identifier	hei		3235626	1					
ANR	3236903	PtrMemberAccess	con -> top_pad		3235626	1					
ANR	3236904	Identifier	con		3235626	0					
ANR	3236905	Identifier	top_pad		3235626	1					
ANR	3236906	PrimaryExpression	16		3235626	1					
ANR	3236907	PrimaryExpression	16		3235626	2					
ANR	3236908	ExpressionStatement	dy = 16 * strip_blocks	2350:12:79440:79460	3235626	2	True				
ANR	3236909	AssignmentExpression	dy = 16 * strip_blocks		3235626	0		=			
ANR	3236910	Identifier	dy		3235626	0					
ANR	3236911	MultiplicativeExpression	16 * strip_blocks		3235626	1		*			
ANR	3236912	PrimaryExpression	16		3235626	0					
ANR	3236913	Identifier	strip_blocks		3235626	1					
ANR	3236914	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	3					
ANR	3236915	ForInit	idx = first ;	2351:17:79479:79490	3235626	0	True				
ANR	3236916	AssignmentExpression	idx = first		3235626	0		=			
ANR	3236917	Identifier	idx		3235626	0					
ANR	3236918	Identifier	first		3235626	1					
ANR	3236919	Condition	idx < trans	2351:30:79492:79502	3235626	1	True				
ANR	3236920	RelationalExpression	idx < trans		3235626	0		<			
ANR	3236921	Identifier	idx		3235626	0					
ANR	3236922	Identifier	trans		3235626	1					
ANR	3236923	AssignmentExpression	idx += 1	2351:43:79505:79512	3235626	2	True	+=			
ANR	3236924	Identifier	idx		3235626	0					
ANR	3236925	PrimaryExpression	1		3235626	1					
ANR	3236926	CompoundStatement		164:16:6129:6187	3235626	3					
ANR	3236927	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conC -> buf + idx * dy + con -> left_pad ;	2352:16:79533:79591	3235626	0	True				
ANR	3236928	IdentifierDecl	* dp = ( uint8_t * ) conC -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3236929	IdentifierDeclType	uint8_t *		3235626	0					
ANR	3236930	Identifier	dp		3235626	1					
ANR	3236931	AssignmentExpression	* dp = ( uint8_t * ) conC -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3236932	Identifier	dp		3235626	0					
ANR	3236933	AdditiveExpression	( uint8_t * ) conC -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3236934	CastExpression	( uint8_t * ) conC -> buf		3235626	0					
ANR	3236935	CastTarget	uint8_t *		3235626	0					
ANR	3236936	PtrMemberAccess	conC -> buf		3235626	1					
ANR	3236937	Identifier	conC		3235626	0					
ANR	3236938	Identifier	buf		3235626	1					
ANR	3236939	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3236940	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3236941	Identifier	idx		3235626	0					
ANR	3236942	Identifier	dy		3235626	1					
ANR	3236943	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3236944	Identifier	con		3235626	0					
ANR	3236945	Identifier	left_pad		3235626	1					
ANR	3236946	ExpressionStatement	"write_uint8 ( conC , dp , conC -> wid )"	2353:16:79625:79658	3235626	1	True				
ANR	3236947	CallExpression	"write_uint8 ( conC , dp , conC -> wid )"		3235626	0					
ANR	3236948	Callee	write_uint8		3235626	0					
ANR	3236949	Identifier	write_uint8		3235626	0					
ANR	3236950	ArgumentList	conC		3235626	1					
ANR	3236951	Argument	conC		3235626	0					
ANR	3236952	Identifier	conC		3235626	0					
ANR	3236953	Argument	dp		3235626	1					
ANR	3236954	Identifier	dp		3235626	0					
ANR	3236955	Argument	conC -> wid		3235626	2					
ANR	3236956	PtrMemberAccess	conC -> wid		3235626	0					
ANR	3236957	Identifier	conC		3235626	0					
ANR	3236958	Identifier	wid		3235626	1					
ANR	3236959	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	4					
ANR	3236960	ForInit	idx = first ;	2355:17:79702:79713	3235626	0	True				
ANR	3236961	AssignmentExpression	idx = first		3235626	0		=			
ANR	3236962	Identifier	idx		3235626	0					
ANR	3236963	Identifier	first		3235626	1					
ANR	3236964	Condition	idx < trans	2355:30:79715:79725	3235626	1	True				
ANR	3236965	RelationalExpression	idx < trans		3235626	0		<			
ANR	3236966	Identifier	idx		3235626	0					
ANR	3236967	Identifier	trans		3235626	1					
ANR	3236968	AssignmentExpression	idx += 1	2355:43:79728:79735	3235626	2	True	+=			
ANR	3236969	Identifier	idx		3235626	0					
ANR	3236970	PrimaryExpression	1		3235626	1					
ANR	3236971	CompoundStatement		168:16:6352:6410	3235626	3					
ANR	3236972	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conM -> buf + idx * dy + con -> left_pad ;	2356:16:79756:79814	3235626	0	True				
ANR	3236973	IdentifierDecl	* dp = ( uint8_t * ) conM -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3236974	IdentifierDeclType	uint8_t *		3235626	0					
ANR	3236975	Identifier	dp		3235626	1					
ANR	3236976	AssignmentExpression	* dp = ( uint8_t * ) conM -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3236977	Identifier	dp		3235626	0					
ANR	3236978	AdditiveExpression	( uint8_t * ) conM -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3236979	CastExpression	( uint8_t * ) conM -> buf		3235626	0					
ANR	3236980	CastTarget	uint8_t *		3235626	0					
ANR	3236981	PtrMemberAccess	conM -> buf		3235626	1					
ANR	3236982	Identifier	conM		3235626	0					
ANR	3236983	Identifier	buf		3235626	1					
ANR	3236984	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3236985	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3236986	Identifier	idx		3235626	0					
ANR	3236987	Identifier	dy		3235626	1					
ANR	3236988	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3236989	Identifier	con		3235626	0					
ANR	3236990	Identifier	left_pad		3235626	1					
ANR	3236991	ExpressionStatement	"write_uint8 ( conM , dp , ( conM -> wid ) )"	2357:16:79848:79882	3235626	1	True				
ANR	3236992	CallExpression	"write_uint8 ( conM , dp , ( conM -> wid ) )"		3235626	0					
ANR	3236993	Callee	write_uint8		3235626	0					
ANR	3236994	Identifier	write_uint8		3235626	0					
ANR	3236995	ArgumentList	conM		3235626	1					
ANR	3236996	Argument	conM		3235626	0					
ANR	3236997	Identifier	conM		3235626	0					
ANR	3236998	Argument	dp		3235626	1					
ANR	3236999	Identifier	dp		3235626	0					
ANR	3237000	Argument	conM -> wid		3235626	2					
ANR	3237001	PtrMemberAccess	conM -> wid		3235626	0					
ANR	3237002	Identifier	conM		3235626	0					
ANR	3237003	Identifier	wid		3235626	1					
ANR	3237004	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	5					
ANR	3237005	ForInit	idx = first ;	2359:17:79927:79938	3235626	0	True				
ANR	3237006	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237007	Identifier	idx		3235626	0					
ANR	3237008	Identifier	first		3235626	1					
ANR	3237009	Condition	idx < trans	2359:30:79940:79950	3235626	1	True				
ANR	3237010	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237011	Identifier	idx		3235626	0					
ANR	3237012	Identifier	trans		3235626	1					
ANR	3237013	AssignmentExpression	idx += 1	2359:43:79953:79960	3235626	2	True	+=			
ANR	3237014	Identifier	idx		3235626	0					
ANR	3237015	PrimaryExpression	1		3235626	1					
ANR	3237016	CompoundStatement		172:16:6577:6635	3235626	3					
ANR	3237017	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad ;	2360:16:79981:80039	3235626	0	True				
ANR	3237018	IdentifierDecl	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237019	IdentifierDeclType	uint8_t *		3235626	0					
ANR	3237020	Identifier	dp		3235626	1					
ANR	3237021	AssignmentExpression	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237022	Identifier	dp		3235626	0					
ANR	3237023	AdditiveExpression	( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237024	CastExpression	( uint8_t * ) conY -> buf		3235626	0					
ANR	3237025	CastTarget	uint8_t *		3235626	0					
ANR	3237026	PtrMemberAccess	conY -> buf		3235626	1					
ANR	3237027	Identifier	conY		3235626	0					
ANR	3237028	Identifier	buf		3235626	1					
ANR	3237029	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237030	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237031	Identifier	idx		3235626	0					
ANR	3237032	Identifier	dy		3235626	1					
ANR	3237033	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237034	Identifier	con		3235626	0					
ANR	3237035	Identifier	left_pad		3235626	1					
ANR	3237036	ExpressionStatement	"write_uint8 ( conY , dp , ( conY -> wid ) )"	2361:16:80073:80107	3235626	1	True				
ANR	3237037	CallExpression	"write_uint8 ( conY , dp , ( conY -> wid ) )"		3235626	0					
ANR	3237038	Callee	write_uint8		3235626	0					
ANR	3237039	Identifier	write_uint8		3235626	0					
ANR	3237040	ArgumentList	conY		3235626	1					
ANR	3237041	Argument	conY		3235626	0					
ANR	3237042	Identifier	conY		3235626	0					
ANR	3237043	Argument	dp		3235626	1					
ANR	3237044	Identifier	dp		3235626	0					
ANR	3237045	Argument	conY -> wid		3235626	2					
ANR	3237046	PtrMemberAccess	conY -> wid		3235626	0					
ANR	3237047	Identifier	conY		3235626	0					
ANR	3237048	Identifier	wid		3235626	1					
ANR	3237049	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	6					
ANR	3237050	ForInit	idx = first ;	2363:17:80140:80151	3235626	0	True				
ANR	3237051	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237052	Identifier	idx		3235626	0					
ANR	3237053	Identifier	first		3235626	1					
ANR	3237054	Condition	idx < trans	2363:30:80153:80163	3235626	1	True				
ANR	3237055	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237056	Identifier	idx		3235626	0					
ANR	3237057	Identifier	trans		3235626	1					
ANR	3237058	AssignmentExpression	idx += 1	2363:43:80166:80173	3235626	2	True	+=			
ANR	3237059	Identifier	idx		3235626	0					
ANR	3237060	PrimaryExpression	1		3235626	1					
ANR	3237061	CompoundStatement		176:16:6790:6848	3235626	3					
ANR	3237062	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conK -> buf + idx * dy + con -> left_pad ;	2364:16:80194:80252	3235626	0	True				
ANR	3237063	IdentifierDecl	* dp = ( uint8_t * ) conK -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237064	IdentifierDeclType	uint8_t *		3235626	0					
ANR	3237065	Identifier	dp		3235626	1					
ANR	3237066	AssignmentExpression	* dp = ( uint8_t * ) conK -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237067	Identifier	dp		3235626	0					
ANR	3237068	AdditiveExpression	( uint8_t * ) conK -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237069	CastExpression	( uint8_t * ) conK -> buf		3235626	0					
ANR	3237070	CastTarget	uint8_t *		3235626	0					
ANR	3237071	PtrMemberAccess	conK -> buf		3235626	1					
ANR	3237072	Identifier	conK		3235626	0					
ANR	3237073	Identifier	buf		3235626	1					
ANR	3237074	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237075	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237076	Identifier	idx		3235626	0					
ANR	3237077	Identifier	dy		3235626	1					
ANR	3237078	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237079	Identifier	con		3235626	0					
ANR	3237080	Identifier	left_pad		3235626	1					
ANR	3237081	ExpressionStatement	"write_uint8 ( conK , dp , ( conK -> wid ) )"	2365:16:80286:80320	3235626	1	True				
ANR	3237082	CallExpression	"write_uint8 ( conK , dp , ( conK -> wid ) )"		3235626	0					
ANR	3237083	Callee	write_uint8		3235626	0					
ANR	3237084	Identifier	write_uint8		3235626	0					
ANR	3237085	ArgumentList	conK		3235626	1					
ANR	3237086	Argument	conK		3235626	0					
ANR	3237087	Identifier	conK		3235626	0					
ANR	3237088	Argument	dp		3235626	1					
ANR	3237089	Identifier	dp		3235626	0					
ANR	3237090	Argument	conK -> wid		3235626	2					
ANR	3237091	PtrMemberAccess	conK -> wid		3235626	0					
ANR	3237092	Identifier	conK		3235626	0					
ANR	3237093	Identifier	wid		3235626	1					
ANR	3237094	IfStatement	if ( con -> alpha )		3235626	7					
ANR	3237095	Condition	con -> alpha	2368:15:80352:80361	3235626	0	True				
ANR	3237096	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3237097	Identifier	con		3235626	0					
ANR	3237098	Identifier	alpha		3235626	1					
ANR	3237099	CompoundStatement		181:12:6972:6972	3235626	1					
ANR	3237100	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	0					
ANR	3237101	ForInit	idx = first ;	2370:21:80415:80426	3235626	0	True				
ANR	3237102	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237103	Identifier	idx		3235626	0					
ANR	3237104	Identifier	first		3235626	1					
ANR	3237105	Condition	idx < trans	2370:34:80428:80438	3235626	1	True				
ANR	3237106	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237107	Identifier	idx		3235626	0					
ANR	3237108	Identifier	trans		3235626	1					
ANR	3237109	AssignmentExpression	idx += 1	2370:47:80441:80448	3235626	2	True	+=			
ANR	3237110	Identifier	idx		3235626	0					
ANR	3237111	PrimaryExpression	1		3235626	1					
ANR	3237112	CompoundStatement		183:20:7069:7127	3235626	3					
ANR	3237113	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad ;	2371:20:80473:80531	3235626	0	True				
ANR	3237114	IdentifierDecl	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237115	IdentifierDeclType	uint8_t *		3235626	0					
ANR	3237116	Identifier	dp		3235626	1					
ANR	3237117	AssignmentExpression	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237118	Identifier	dp		3235626	0					
ANR	3237119	AdditiveExpression	( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237120	CastExpression	( uint8_t * ) conA -> buf		3235626	0					
ANR	3237121	CastTarget	uint8_t *		3235626	0					
ANR	3237122	PtrMemberAccess	conA -> buf		3235626	1					
ANR	3237123	Identifier	conA		3235626	0					
ANR	3237124	Identifier	buf		3235626	1					
ANR	3237125	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237126	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237127	Identifier	idx		3235626	0					
ANR	3237128	Identifier	dy		3235626	1					
ANR	3237129	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237130	Identifier	con		3235626	0					
ANR	3237131	Identifier	left_pad		3235626	1					
ANR	3237132	ExpressionStatement	"write_uint8 ( conA , dp , conA -> wid )"	2372:20:80585:80617	3235626	1	True				
ANR	3237133	CallExpression	"write_uint8 ( conA , dp , conA -> wid )"		3235626	0					
ANR	3237134	Callee	write_uint8		3235626	0					
ANR	3237135	Identifier	write_uint8		3235626	0					
ANR	3237136	ArgumentList	conA		3235626	1					
ANR	3237137	Argument	conA		3235626	0					
ANR	3237138	Identifier	conA		3235626	0					
ANR	3237139	Argument	dp		3235626	1					
ANR	3237140	Identifier	dp		3235626	0					
ANR	3237141	Argument	conA -> wid		3235626	2					
ANR	3237142	PtrMemberAccess	conA -> wid		3235626	0					
ANR	3237143	Identifier	conA		3235626	0					
ANR	3237144	Identifier	wid		3235626	1					
ANR	3237145	ExpressionStatement	con -> top_pad_remaining -= first	2375:12:80691:80722	3235626	8	True				
ANR	3237146	AssignmentExpression	con -> top_pad_remaining -= first		3235626	0		-=			
ANR	3237147	PtrMemberAccess	con -> top_pad_remaining		3235626	0					
ANR	3237148	Identifier	con		3235626	0					
ANR	3237149	Identifier	top_pad_remaining		3235626	1					
ANR	3237150	Identifier	first		3235626	1					
ANR	3237151	ElseStatement	else		3235626	0					
ANR	3237152	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		3235626	0					
ANR	3237153	Condition	con -> bpi == 16 || con -> bpi == 10	2377:16:80750:80781	3235626	0	True				
ANR	3237154	OrExpression	con -> bpi == 16 || con -> bpi == 10		3235626	0		||			
ANR	3237155	EqualityExpression	con -> bpi == 16		3235626	0		==			
ANR	3237156	PtrMemberAccess	con -> bpi		3235626	0					
ANR	3237157	Identifier	con		3235626	0					
ANR	3237158	Identifier	bpi		3235626	1					
ANR	3237159	PrimaryExpression	16		3235626	1					
ANR	3237160	EqualityExpression	con -> bpi == 10		3235626	1		==			
ANR	3237161	PtrMemberAccess	con -> bpi		3235626	0					
ANR	3237162	Identifier	con		3235626	0					
ANR	3237163	Identifier	bpi		3235626	1					
ANR	3237164	PrimaryExpression	10		3235626	1					
ANR	3237165	CompoundStatement		192:12:7490:7578	3235626	1					
ANR	3237166	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining ;	2379:12:80809:80880	3235626	0	True				
ANR	3237167	IdentifierDecl	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3235626	0					
ANR	3237168	IdentifierDeclType	int		3235626	0					
ANR	3237169	Identifier	first		3235626	1					
ANR	3237170	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3235626	2		=			
ANR	3237171	Identifier	first		3235626	0					
ANR	3237172	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3235626	1					
ANR	3237173	Condition	con -> top_pad_remaining > 16		3235626	0					
ANR	3237174	RelationalExpression	con -> top_pad_remaining > 16		3235626	0		>			
ANR	3237175	PtrMemberAccess	con -> top_pad_remaining		3235626	0					
ANR	3237176	Identifier	con		3235626	0					
ANR	3237177	Identifier	top_pad_remaining		3235626	1					
ANR	3237178	PrimaryExpression	16		3235626	1					
ANR	3237179	PrimaryExpression	16		3235626	1					
ANR	3237180	PtrMemberAccess	con -> top_pad_remaining		3235626	2					
ANR	3237181	Identifier	con		3235626	0					
ANR	3237182	Identifier	top_pad_remaining		3235626	1					
ANR	3237183	IdentifierDeclStatement	int trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16 ;	2380:12:80894:80982	3235626	1	True				
ANR	3237184	IdentifierDecl	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3235626	0					
ANR	3237185	IdentifierDeclType	int		3235626	0					
ANR	3237186	Identifier	trans		3235626	1					
ANR	3237187	AssignmentExpression	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3235626	2		=			
ANR	3237188	Identifier	trans		3235626	0					
ANR	3237189	ConditionalExpression	( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3235626	1					
ANR	3237190	Condition	my * 16 + 16 > ( con -> hei + con -> top_pad )		3235626	0					
ANR	3237191	RelationalExpression	my * 16 + 16 > ( con -> hei + con -> top_pad )		3235626	0		>			
ANR	3237192	AdditiveExpression	my * 16 + 16		3235626	0		+			
ANR	3237193	MultiplicativeExpression	my * 16		3235626	0		*			
ANR	3237194	Identifier	my		3235626	0					
ANR	3237195	PrimaryExpression	16		3235626	1					
ANR	3237196	PrimaryExpression	16		3235626	1					
ANR	3237197	AdditiveExpression	con -> hei + con -> top_pad		3235626	1		+			
ANR	3237198	PtrMemberAccess	con -> hei		3235626	0					
ANR	3237199	Identifier	con		3235626	0					
ANR	3237200	Identifier	hei		3235626	1					
ANR	3237201	PtrMemberAccess	con -> top_pad		3235626	1					
ANR	3237202	Identifier	con		3235626	0					
ANR	3237203	Identifier	top_pad		3235626	1					
ANR	3237204	MultiplicativeExpression	( con -> hei + con -> top_pad ) % 16		3235626	1		%			
ANR	3237205	AdditiveExpression	con -> hei + con -> top_pad		3235626	0		+			
ANR	3237206	PtrMemberAccess	con -> hei		3235626	0					
ANR	3237207	Identifier	con		3235626	0					
ANR	3237208	Identifier	hei		3235626	1					
ANR	3237209	PtrMemberAccess	con -> top_pad		3235626	1					
ANR	3237210	Identifier	con		3235626	0					
ANR	3237211	Identifier	top_pad		3235626	1					
ANR	3237212	PrimaryExpression	16		3235626	1					
ANR	3237213	PrimaryExpression	16		3235626	2					
ANR	3237214	ExpressionStatement	dy = 16 * strip_blocks	2381:12:81001:81021	3235626	2	True				
ANR	3237215	AssignmentExpression	dy = 16 * strip_blocks		3235626	0		=			
ANR	3237216	Identifier	dy		3235626	0					
ANR	3237217	MultiplicativeExpression	16 * strip_blocks		3235626	1		*			
ANR	3237218	PrimaryExpression	16		3235626	0					
ANR	3237219	Identifier	strip_blocks		3235626	1					
ANR	3237220	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	3					
ANR	3237221	ForInit	idx = first ;	2382:17:81040:81051	3235626	0	True				
ANR	3237222	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237223	Identifier	idx		3235626	0					
ANR	3237224	Identifier	first		3235626	1					
ANR	3237225	Condition	idx < trans	2382:30:81053:81063	3235626	1	True				
ANR	3237226	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237227	Identifier	idx		3235626	0					
ANR	3237228	Identifier	trans		3235626	1					
ANR	3237229	AssignmentExpression	idx += 1	2382:43:81066:81073	3235626	2	True	+=			
ANR	3237230	Identifier	idx		3235626	0					
ANR	3237231	PrimaryExpression	1		3235626	1					
ANR	3237232	CompoundStatement		195:16:7690:7750	3235626	3					
ANR	3237233	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conC -> buf + idx * dy + con -> left_pad ;	2383:16:81094:81154	3235626	0	True				
ANR	3237234	IdentifierDecl	* dp = ( uint16_t * ) conC -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237235	IdentifierDeclType	uint16_t *		3235626	0					
ANR	3237236	Identifier	dp		3235626	1					
ANR	3237237	AssignmentExpression	* dp = ( uint16_t * ) conC -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237238	Identifier	dp		3235626	0					
ANR	3237239	AdditiveExpression	( uint16_t * ) conC -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237240	CastExpression	( uint16_t * ) conC -> buf		3235626	0					
ANR	3237241	CastTarget	uint16_t *		3235626	0					
ANR	3237242	PtrMemberAccess	conC -> buf		3235626	1					
ANR	3237243	Identifier	conC		3235626	0					
ANR	3237244	Identifier	buf		3235626	1					
ANR	3237245	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237246	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237247	Identifier	idx		3235626	0					
ANR	3237248	Identifier	dy		3235626	1					
ANR	3237249	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237250	Identifier	con		3235626	0					
ANR	3237251	Identifier	left_pad		3235626	1					
ANR	3237252	ExpressionStatement	"write_uint16 ( conC , dp , conC -> wid )"	2384:16:81188:81222	3235626	1	True				
ANR	3237253	CallExpression	"write_uint16 ( conC , dp , conC -> wid )"		3235626	0					
ANR	3237254	Callee	write_uint16		3235626	0					
ANR	3237255	Identifier	write_uint16		3235626	0					
ANR	3237256	ArgumentList	conC		3235626	1					
ANR	3237257	Argument	conC		3235626	0					
ANR	3237258	Identifier	conC		3235626	0					
ANR	3237259	Argument	dp		3235626	1					
ANR	3237260	Identifier	dp		3235626	0					
ANR	3237261	Argument	conC -> wid		3235626	2					
ANR	3237262	PtrMemberAccess	conC -> wid		3235626	0					
ANR	3237263	Identifier	conC		3235626	0					
ANR	3237264	Identifier	wid		3235626	1					
ANR	3237265	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	4					
ANR	3237266	ForInit	idx = first ;	2387:17:81268:81279	3235626	0	True				
ANR	3237267	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237268	Identifier	idx		3235626	0					
ANR	3237269	Identifier	first		3235626	1					
ANR	3237270	Condition	idx < trans	2387:30:81281:81291	3235626	1	True				
ANR	3237271	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237272	Identifier	idx		3235626	0					
ANR	3237273	Identifier	trans		3235626	1					
ANR	3237274	AssignmentExpression	idx += 1	2387:43:81294:81301	3235626	2	True	+=			
ANR	3237275	Identifier	idx		3235626	0					
ANR	3237276	PrimaryExpression	1		3235626	1					
ANR	3237277	CompoundStatement		200:16:7918:7978	3235626	3					
ANR	3237278	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conM -> buf + idx * dy + con -> left_pad ;	2388:16:81322:81382	3235626	0	True				
ANR	3237279	IdentifierDecl	* dp = ( uint16_t * ) conM -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237280	IdentifierDeclType	uint16_t *		3235626	0					
ANR	3237281	Identifier	dp		3235626	1					
ANR	3237282	AssignmentExpression	* dp = ( uint16_t * ) conM -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237283	Identifier	dp		3235626	0					
ANR	3237284	AdditiveExpression	( uint16_t * ) conM -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237285	CastExpression	( uint16_t * ) conM -> buf		3235626	0					
ANR	3237286	CastTarget	uint16_t *		3235626	0					
ANR	3237287	PtrMemberAccess	conM -> buf		3235626	1					
ANR	3237288	Identifier	conM		3235626	0					
ANR	3237289	Identifier	buf		3235626	1					
ANR	3237290	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237291	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237292	Identifier	idx		3235626	0					
ANR	3237293	Identifier	dy		3235626	1					
ANR	3237294	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237295	Identifier	con		3235626	0					
ANR	3237296	Identifier	left_pad		3235626	1					
ANR	3237297	ExpressionStatement	"write_uint16 ( conM , dp , ( conM -> wid ) )"	2389:16:81416:81452	3235626	1	True				
ANR	3237298	CallExpression	"write_uint16 ( conM , dp , ( conM -> wid ) )"		3235626	0					
ANR	3237299	Callee	write_uint16		3235626	0					
ANR	3237300	Identifier	write_uint16		3235626	0					
ANR	3237301	ArgumentList	conM		3235626	1					
ANR	3237302	Argument	conM		3235626	0					
ANR	3237303	Identifier	conM		3235626	0					
ANR	3237304	Argument	dp		3235626	1					
ANR	3237305	Identifier	dp		3235626	0					
ANR	3237306	Argument	conM -> wid		3235626	2					
ANR	3237307	PtrMemberAccess	conM -> wid		3235626	0					
ANR	3237308	Identifier	conM		3235626	0					
ANR	3237309	Identifier	wid		3235626	1					
ANR	3237310	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	5					
ANR	3237311	ForInit	idx = first ;	2392:17:81509:81520	3235626	0	True				
ANR	3237312	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237313	Identifier	idx		3235626	0					
ANR	3237314	Identifier	first		3235626	1					
ANR	3237315	Condition	idx < trans	2392:30:81522:81532	3235626	1	True				
ANR	3237316	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237317	Identifier	idx		3235626	0					
ANR	3237318	Identifier	trans		3235626	1					
ANR	3237319	AssignmentExpression	idx += 1	2392:43:81535:81542	3235626	2	True	+=			
ANR	3237320	Identifier	idx		3235626	0					
ANR	3237321	PrimaryExpression	1		3235626	1					
ANR	3237322	CompoundStatement		205:16:8159:8219	3235626	3					
ANR	3237323	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad ;	2393:16:81563:81623	3235626	0	True				
ANR	3237324	IdentifierDecl	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237325	IdentifierDeclType	uint16_t *		3235626	0					
ANR	3237326	Identifier	dp		3235626	1					
ANR	3237327	AssignmentExpression	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237328	Identifier	dp		3235626	0					
ANR	3237329	AdditiveExpression	( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237330	CastExpression	( uint16_t * ) conY -> buf		3235626	0					
ANR	3237331	CastTarget	uint16_t *		3235626	0					
ANR	3237332	PtrMemberAccess	conY -> buf		3235626	1					
ANR	3237333	Identifier	conY		3235626	0					
ANR	3237334	Identifier	buf		3235626	1					
ANR	3237335	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237336	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237337	Identifier	idx		3235626	0					
ANR	3237338	Identifier	dy		3235626	1					
ANR	3237339	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237340	Identifier	con		3235626	0					
ANR	3237341	Identifier	left_pad		3235626	1					
ANR	3237342	ExpressionStatement	"write_uint16 ( conY , dp , ( conY -> wid ) )"	2394:16:81657:81693	3235626	1	True				
ANR	3237343	CallExpression	"write_uint16 ( conY , dp , ( conY -> wid ) )"		3235626	0					
ANR	3237344	Callee	write_uint16		3235626	0					
ANR	3237345	Identifier	write_uint16		3235626	0					
ANR	3237346	ArgumentList	conY		3235626	1					
ANR	3237347	Argument	conY		3235626	0					
ANR	3237348	Identifier	conY		3235626	0					
ANR	3237349	Argument	dp		3235626	1					
ANR	3237350	Identifier	dp		3235626	0					
ANR	3237351	Argument	conY -> wid		3235626	2					
ANR	3237352	PtrMemberAccess	conY -> wid		3235626	0					
ANR	3237353	Identifier	conY		3235626	0					
ANR	3237354	Identifier	wid		3235626	1					
ANR	3237355	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	6					
ANR	3237356	ForInit	idx = first ;	2397:17:81739:81750	3235626	0	True				
ANR	3237357	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237358	Identifier	idx		3235626	0					
ANR	3237359	Identifier	first		3235626	1					
ANR	3237360	Condition	idx < trans	2397:30:81752:81762	3235626	1	True				
ANR	3237361	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237362	Identifier	idx		3235626	0					
ANR	3237363	Identifier	trans		3235626	1					
ANR	3237364	AssignmentExpression	idx += 1	2397:43:81765:81772	3235626	2	True	+=			
ANR	3237365	Identifier	idx		3235626	0					
ANR	3237366	PrimaryExpression	1		3235626	1					
ANR	3237367	CompoundStatement		210:16:8389:8449	3235626	3					
ANR	3237368	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conK -> buf + idx * dy + con -> left_pad ;	2398:16:81793:81853	3235626	0	True				
ANR	3237369	IdentifierDecl	* dp = ( uint16_t * ) conK -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237370	IdentifierDeclType	uint16_t *		3235626	0					
ANR	3237371	Identifier	dp		3235626	1					
ANR	3237372	AssignmentExpression	* dp = ( uint16_t * ) conK -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237373	Identifier	dp		3235626	0					
ANR	3237374	AdditiveExpression	( uint16_t * ) conK -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237375	CastExpression	( uint16_t * ) conK -> buf		3235626	0					
ANR	3237376	CastTarget	uint16_t *		3235626	0					
ANR	3237377	PtrMemberAccess	conK -> buf		3235626	1					
ANR	3237378	Identifier	conK		3235626	0					
ANR	3237379	Identifier	buf		3235626	1					
ANR	3237380	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237381	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237382	Identifier	idx		3235626	0					
ANR	3237383	Identifier	dy		3235626	1					
ANR	3237384	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237385	Identifier	con		3235626	0					
ANR	3237386	Identifier	left_pad		3235626	1					
ANR	3237387	ExpressionStatement	"write_uint16 ( conK , dp , ( conK -> wid ) )"	2399:16:81887:81923	3235626	1	True				
ANR	3237388	CallExpression	"write_uint16 ( conK , dp , ( conK -> wid ) )"		3235626	0					
ANR	3237389	Callee	write_uint16		3235626	0					
ANR	3237390	Identifier	write_uint16		3235626	0					
ANR	3237391	ArgumentList	conK		3235626	1					
ANR	3237392	Argument	conK		3235626	0					
ANR	3237393	Identifier	conK		3235626	0					
ANR	3237394	Argument	dp		3235626	1					
ANR	3237395	Identifier	dp		3235626	0					
ANR	3237396	Argument	conK -> wid		3235626	2					
ANR	3237397	PtrMemberAccess	conK -> wid		3235626	0					
ANR	3237398	Identifier	conK		3235626	0					
ANR	3237399	Identifier	wid		3235626	1					
ANR	3237400	IfStatement	if ( con -> alpha )		3235626	7					
ANR	3237401	Condition	con -> alpha	2402:15:81967:81976	3235626	0	True				
ANR	3237402	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3237403	Identifier	con		3235626	0					
ANR	3237404	Identifier	alpha		3235626	1					
ANR	3237405	CompoundStatement		215:12:8587:8587	3235626	1					
ANR	3237406	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3235626	0					
ANR	3237407	ForInit	idx = first ;	2404:21:82030:82041	3235626	0	True				
ANR	3237408	AssignmentExpression	idx = first		3235626	0		=			
ANR	3237409	Identifier	idx		3235626	0					
ANR	3237410	Identifier	first		3235626	1					
ANR	3237411	Condition	idx < trans	2404:34:82043:82053	3235626	1	True				
ANR	3237412	RelationalExpression	idx < trans		3235626	0		<			
ANR	3237413	Identifier	idx		3235626	0					
ANR	3237414	Identifier	trans		3235626	1					
ANR	3237415	AssignmentExpression	idx += 1	2404:47:82056:82063	3235626	2	True	+=			
ANR	3237416	Identifier	idx		3235626	0					
ANR	3237417	PrimaryExpression	1		3235626	1					
ANR	3237418	CompoundStatement		217:20:8684:8744	3235626	3					
ANR	3237419	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad ;	2405:20:82088:82148	3235626	0	True				
ANR	3237420	IdentifierDecl	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		3235626	0					
ANR	3237421	IdentifierDeclType	uint16_t *		3235626	0					
ANR	3237422	Identifier	dp		3235626	1					
ANR	3237423	AssignmentExpression	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		3235626	2		=			
ANR	3237424	Identifier	dp		3235626	0					
ANR	3237425	AdditiveExpression	( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		3235626	1		+			
ANR	3237426	CastExpression	( uint16_t * ) conA -> buf		3235626	0					
ANR	3237427	CastTarget	uint16_t *		3235626	0					
ANR	3237428	PtrMemberAccess	conA -> buf		3235626	1					
ANR	3237429	Identifier	conA		3235626	0					
ANR	3237430	Identifier	buf		3235626	1					
ANR	3237431	AdditiveExpression	idx * dy + con -> left_pad		3235626	1		+			
ANR	3237432	MultiplicativeExpression	idx * dy		3235626	0		*			
ANR	3237433	Identifier	idx		3235626	0					
ANR	3237434	Identifier	dy		3235626	1					
ANR	3237435	PtrMemberAccess	con -> left_pad		3235626	1					
ANR	3237436	Identifier	con		3235626	0					
ANR	3237437	Identifier	left_pad		3235626	1					
ANR	3237438	ExpressionStatement	"write_uint16 ( conA , dp , conA -> wid )"	2406:20:82202:82235	3235626	1	True				
ANR	3237439	CallExpression	"write_uint16 ( conA , dp , conA -> wid )"		3235626	0					
ANR	3237440	Callee	write_uint16		3235626	0					
ANR	3237441	Identifier	write_uint16		3235626	0					
ANR	3237442	ArgumentList	conA		3235626	1					
ANR	3237443	Argument	conA		3235626	0					
ANR	3237444	Identifier	conA		3235626	0					
ANR	3237445	Argument	dp		3235626	1					
ANR	3237446	Identifier	dp		3235626	0					
ANR	3237447	Argument	conA -> wid		3235626	2					
ANR	3237448	PtrMemberAccess	conA -> wid		3235626	0					
ANR	3237449	Identifier	conA		3235626	0					
ANR	3237450	Identifier	wid		3235626	1					
ANR	3237451	ExpressionStatement	con -> top_pad_remaining -= first	2409:12:82309:82340	3235626	8	True				
ANR	3237452	AssignmentExpression	con -> top_pad_remaining -= first		3235626	0		-=			
ANR	3237453	PtrMemberAccess	con -> top_pad_remaining		3235626	0					
ANR	3237454	Identifier	con		3235626	0					
ANR	3237455	Identifier	top_pad_remaining		3235626	1					
ANR	3237456	Identifier	first		3235626	1					
ANR	3237457	ElseStatement	else		3235626	0					
ANR	3237458	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2412:12:82383:82416	3235626	0	True				
ANR	3237459	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3235626	0					
ANR	3237460	Callee	assert		3235626	0					
ANR	3237461	Identifier	assert		3235626	0					
ANR	3237462	ArgumentList	"! ""Unsupported bitdepth\\n"""		3235626	1					
ANR	3237463	Argument	"! ""Unsupported bitdepth\\n"""		3235626	0					
ANR	3237464	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3235626	0					
ANR	3237465	UnaryOperator	!		3235626	0					
ANR	3237466	PrimaryExpression	"""Unsupported bitdepth\\n"""		3235626	1					
ANR	3237467	IfStatement	if ( my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks )		3235626	22					
ANR	3237468	Condition	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks	2414:7:82431:82494	3235626	0	True				
ANR	3237469	AndExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks		3235626	0		&&			
ANR	3237470	RelationalExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad )		3235626	0		>=			
ANR	3237471	AdditiveExpression	my * 16 + 16		3235626	0		+			
ANR	3237472	MultiplicativeExpression	my * 16		3235626	0		*			
ANR	3237473	Identifier	my		3235626	0					
ANR	3237474	PrimaryExpression	16		3235626	1					
ANR	3237475	PrimaryExpression	16		3235626	1					
ANR	3237476	AdditiveExpression	con -> hei + con -> top_pad		3235626	1		+			
ANR	3237477	PtrMemberAccess	con -> hei		3235626	0					
ANR	3237478	Identifier	con		3235626	0					
ANR	3237479	Identifier	hei		3235626	1					
ANR	3237480	PtrMemberAccess	con -> top_pad		3235626	1					
ANR	3237481	Identifier	con		3235626	0					
ANR	3237482	Identifier	top_pad		3235626	1					
ANR	3237483	EqualityExpression	mx + 1 == strip_blocks		3235626	1		==			
ANR	3237484	AdditiveExpression	mx + 1		3235626	0		+			
ANR	3237485	Identifier	mx		3235626	0					
ANR	3237486	PrimaryExpression	1		3235626	1					
ANR	3237487	Identifier	strip_blocks		3235626	1					
ANR	3237488	CompoundStatement		230:8:9184:9191	3235626	1					
ANR	3237489	IdentifierDeclStatement	long size = ftell ( conC -> file ) ;	2417:8:82547:82576	3235626	0	True				
ANR	3237490	IdentifierDecl	size = ftell ( conC -> file )		3235626	0					
ANR	3237491	IdentifierDeclType	long		3235626	0					
ANR	3237492	Identifier	size		3235626	1					
ANR	3237493	AssignmentExpression	size = ftell ( conC -> file )		3235626	2		=			
ANR	3237494	Identifier	size		3235626	0					
ANR	3237495	CallExpression	ftell ( conC -> file )		3235626	1					
ANR	3237496	Callee	ftell		3235626	0					
ANR	3237497	Identifier	ftell		3235626	0					
ANR	3237498	ArgumentList	conC -> file		3235626	1					
ANR	3237499	Argument	conC -> file		3235626	0					
ANR	3237500	PtrMemberAccess	conC -> file		3235626	0					
ANR	3237501	Identifier	conC		3235626	0					
ANR	3237502	Identifier	file		3235626	1					
ANR	3237503	IdentifierDeclStatement	long ii ;	2418:8:82588:82595	3235626	1	True				
ANR	3237504	IdentifierDecl	ii		3235626	0					
ANR	3237505	IdentifierDeclType	long		3235626	0					
ANR	3237506	Identifier	ii		3235626	1					
ANR	3237507	ExpressionStatement	"fseek ( conC -> file , 0 , 0 )"	2419:8:82605:82628	3235626	2	True				
ANR	3237508	CallExpression	"fseek ( conC -> file , 0 , 0 )"		3235626	0					
ANR	3237509	Callee	fseek		3235626	0					
ANR	3237510	Identifier	fseek		3235626	0					
ANR	3237511	ArgumentList	conC -> file		3235626	1					
ANR	3237512	Argument	conC -> file		3235626	0					
ANR	3237513	PtrMemberAccess	conC -> file		3235626	0					
ANR	3237514	Identifier	conC		3235626	0					
ANR	3237515	Identifier	file		3235626	1					
ANR	3237516	Argument	0		3235626	1					
ANR	3237517	PrimaryExpression	0		3235626	0					
ANR	3237518	Argument	0		3235626	2					
ANR	3237519	PrimaryExpression	0		3235626	0					
ANR	3237520	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		3235626	3					
ANR	3237521	ForInit	ii = 0 ;	2420:13:82644:82650	3235626	0	True				
ANR	3237522	AssignmentExpression	ii = 0		3235626	0		=			
ANR	3237523	Identifier	ii		3235626	0					
ANR	3237524	PrimaryExpression	0		3235626	1					
ANR	3237525	Condition	ii < size	2420:21:82652:82660	3235626	1	True				
ANR	3237526	RelationalExpression	ii < size		3235626	0		<			
ANR	3237527	Identifier	ii		3235626	0					
ANR	3237528	Identifier	size		3235626	1					
ANR	3237529	PostIncDecOperationExpression	ii ++	2420:32:82663:82666	3235626	2	True				
ANR	3237530	Identifier	ii		3235626	0					
ANR	3237531	IncDec	++		3235626	1					
ANR	3237532	CompoundStatement		234:12:9287:9298	3235626	3					
ANR	3237533	IdentifierDeclStatement	uint8_t val ;	2422:12:82691:82702	3235626	0	True				
ANR	3237534	IdentifierDecl	val		3235626	0					
ANR	3237535	IdentifierDeclType	uint8_t		3235626	0					
ANR	3237536	Identifier	val		3235626	1					
ANR	3237537	ExpressionStatement	"fread ( & val , 1 , 1 , conC -> file )"	2423:12:82716:82745	3235626	1	True				
ANR	3237538	CallExpression	"fread ( & val , 1 , 1 , conC -> file )"		3235626	0					
ANR	3237539	Callee	fread		3235626	0					
ANR	3237540	Identifier	fread		3235626	0					
ANR	3237541	ArgumentList	& val		3235626	1					
ANR	3237542	Argument	& val		3235626	0					
ANR	3237543	UnaryOperationExpression	& val		3235626	0					
ANR	3237544	UnaryOperator	&		3235626	0					
ANR	3237545	Identifier	val		3235626	1					
ANR	3237546	Argument	1		3235626	1					
ANR	3237547	PrimaryExpression	1		3235626	0					
ANR	3237548	Argument	1		3235626	2					
ANR	3237549	PrimaryExpression	1		3235626	0					
ANR	3237550	Argument	conC -> file		3235626	3					
ANR	3237551	PtrMemberAccess	conC -> file		3235626	0					
ANR	3237552	Identifier	conC		3235626	0					
ANR	3237553	Identifier	file		3235626	1					
ANR	3237554	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2424:12:82759:82788	3235626	2	True				
ANR	3237555	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3235626	0					
ANR	3237556	Callee	fwrite		3235626	0					
ANR	3237557	Identifier	fwrite		3235626	0					
ANR	3237558	ArgumentList	& val		3235626	1					
ANR	3237559	Argument	& val		3235626	0					
ANR	3237560	UnaryOperationExpression	& val		3235626	0					
ANR	3237561	UnaryOperator	&		3235626	0					
ANR	3237562	Identifier	val		3235626	1					
ANR	3237563	Argument	1		3235626	1					
ANR	3237564	PrimaryExpression	1		3235626	0					
ANR	3237565	Argument	1		3235626	2					
ANR	3237566	PrimaryExpression	1		3235626	0					
ANR	3237567	Argument	con -> file		3235626	3					
ANR	3237568	PtrMemberAccess	con -> file		3235626	0					
ANR	3237569	Identifier	con		3235626	0					
ANR	3237570	Identifier	file		3235626	1					
ANR	3237571	ExpressionStatement	size = ftell ( conM -> file )	2426:8:82808:82832	3235626	4	True				
ANR	3237572	AssignmentExpression	size = ftell ( conM -> file )		3235626	0		=			
ANR	3237573	Identifier	size		3235626	0					
ANR	3237574	CallExpression	ftell ( conM -> file )		3235626	1					
ANR	3237575	Callee	ftell		3235626	0					
ANR	3237576	Identifier	ftell		3235626	0					
ANR	3237577	ArgumentList	conM -> file		3235626	1					
ANR	3237578	Argument	conM -> file		3235626	0					
ANR	3237579	PtrMemberAccess	conM -> file		3235626	0					
ANR	3237580	Identifier	conM		3235626	0					
ANR	3237581	Identifier	file		3235626	1					
ANR	3237582	ExpressionStatement	"fseek ( conM -> file , 0 , 0 )"	2427:8:82842:82865	3235626	5	True				
ANR	3237583	CallExpression	"fseek ( conM -> file , 0 , 0 )"		3235626	0					
ANR	3237584	Callee	fseek		3235626	0					
ANR	3237585	Identifier	fseek		3235626	0					
ANR	3237586	ArgumentList	conM -> file		3235626	1					
ANR	3237587	Argument	conM -> file		3235626	0					
ANR	3237588	PtrMemberAccess	conM -> file		3235626	0					
ANR	3237589	Identifier	conM		3235626	0					
ANR	3237590	Identifier	file		3235626	1					
ANR	3237591	Argument	0		3235626	1					
ANR	3237592	PrimaryExpression	0		3235626	0					
ANR	3237593	Argument	0		3235626	2					
ANR	3237594	PrimaryExpression	0		3235626	0					
ANR	3237595	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		3235626	6					
ANR	3237596	ForInit	ii = 0 ;	2428:13:82888:82894	3235626	0	True				
ANR	3237597	AssignmentExpression	ii = 0		3235626	0		=			
ANR	3237598	Identifier	ii		3235626	0					
ANR	3237599	PrimaryExpression	0		3235626	1					
ANR	3237600	Condition	ii < size	2428:21:82896:82904	3235626	1	True				
ANR	3237601	RelationalExpression	ii < size		3235626	0		<			
ANR	3237602	Identifier	ii		3235626	0					
ANR	3237603	Identifier	size		3235626	1					
ANR	3237604	PostIncDecOperationExpression	ii ++	2428:32:82907:82910	3235626	2	True				
ANR	3237605	Identifier	ii		3235626	0					
ANR	3237606	IncDec	++		3235626	1					
ANR	3237607	CompoundStatement		242:12:9531:9542	3235626	3					
ANR	3237608	IdentifierDeclStatement	uint8_t val ;	2430:12:82935:82946	3235626	0	True				
ANR	3237609	IdentifierDecl	val		3235626	0					
ANR	3237610	IdentifierDeclType	uint8_t		3235626	0					
ANR	3237611	Identifier	val		3235626	1					
ANR	3237612	ExpressionStatement	"fread ( & val , 1 , 1 , conM -> file )"	2431:12:82960:82989	3235626	1	True				
ANR	3237613	CallExpression	"fread ( & val , 1 , 1 , conM -> file )"		3235626	0					
ANR	3237614	Callee	fread		3235626	0					
ANR	3237615	Identifier	fread		3235626	0					
ANR	3237616	ArgumentList	& val		3235626	1					
ANR	3237617	Argument	& val		3235626	0					
ANR	3237618	UnaryOperationExpression	& val		3235626	0					
ANR	3237619	UnaryOperator	&		3235626	0					
ANR	3237620	Identifier	val		3235626	1					
ANR	3237621	Argument	1		3235626	1					
ANR	3237622	PrimaryExpression	1		3235626	0					
ANR	3237623	Argument	1		3235626	2					
ANR	3237624	PrimaryExpression	1		3235626	0					
ANR	3237625	Argument	conM -> file		3235626	3					
ANR	3237626	PtrMemberAccess	conM -> file		3235626	0					
ANR	3237627	Identifier	conM		3235626	0					
ANR	3237628	Identifier	file		3235626	1					
ANR	3237629	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2432:12:83003:83032	3235626	2	True				
ANR	3237630	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3235626	0					
ANR	3237631	Callee	fwrite		3235626	0					
ANR	3237632	Identifier	fwrite		3235626	0					
ANR	3237633	ArgumentList	& val		3235626	1					
ANR	3237634	Argument	& val		3235626	0					
ANR	3237635	UnaryOperationExpression	& val		3235626	0					
ANR	3237636	UnaryOperator	&		3235626	0					
ANR	3237637	Identifier	val		3235626	1					
ANR	3237638	Argument	1		3235626	1					
ANR	3237639	PrimaryExpression	1		3235626	0					
ANR	3237640	Argument	1		3235626	2					
ANR	3237641	PrimaryExpression	1		3235626	0					
ANR	3237642	Argument	con -> file		3235626	3					
ANR	3237643	PtrMemberAccess	con -> file		3235626	0					
ANR	3237644	Identifier	con		3235626	0					
ANR	3237645	Identifier	file		3235626	1					
ANR	3237646	ExpressionStatement	size = ftell ( conY -> file )	2434:8:83052:83076	3235626	7	True				
ANR	3237647	AssignmentExpression	size = ftell ( conY -> file )		3235626	0		=			
ANR	3237648	Identifier	size		3235626	0					
ANR	3237649	CallExpression	ftell ( conY -> file )		3235626	1					
ANR	3237650	Callee	ftell		3235626	0					
ANR	3237651	Identifier	ftell		3235626	0					
ANR	3237652	ArgumentList	conY -> file		3235626	1					
ANR	3237653	Argument	conY -> file		3235626	0					
ANR	3237654	PtrMemberAccess	conY -> file		3235626	0					
ANR	3237655	Identifier	conY		3235626	0					
ANR	3237656	Identifier	file		3235626	1					
ANR	3237657	ExpressionStatement	"fseek ( conY -> file , 0 , 0 )"	2435:8:83086:83109	3235626	8	True				
ANR	3237658	CallExpression	"fseek ( conY -> file , 0 , 0 )"		3235626	0					
ANR	3237659	Callee	fseek		3235626	0					
ANR	3237660	Identifier	fseek		3235626	0					
ANR	3237661	ArgumentList	conY -> file		3235626	1					
ANR	3237662	Argument	conY -> file		3235626	0					
ANR	3237663	PtrMemberAccess	conY -> file		3235626	0					
ANR	3237664	Identifier	conY		3235626	0					
ANR	3237665	Identifier	file		3235626	1					
ANR	3237666	Argument	0		3235626	1					
ANR	3237667	PrimaryExpression	0		3235626	0					
ANR	3237668	Argument	0		3235626	2					
ANR	3237669	PrimaryExpression	0		3235626	0					
ANR	3237670	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		3235626	9					
ANR	3237671	ForInit	ii = 0 ;	2436:13:83124:83130	3235626	0	True				
ANR	3237672	AssignmentExpression	ii = 0		3235626	0		=			
ANR	3237673	Identifier	ii		3235626	0					
ANR	3237674	PrimaryExpression	0		3235626	1					
ANR	3237675	Condition	ii < size	2436:21:83132:83140	3235626	1	True				
ANR	3237676	RelationalExpression	ii < size		3235626	0		<			
ANR	3237677	Identifier	ii		3235626	0					
ANR	3237678	Identifier	size		3235626	1					
ANR	3237679	PostIncDecOperationExpression	ii ++	2436:32:83143:83146	3235626	2	True				
ANR	3237680	Identifier	ii		3235626	0					
ANR	3237681	IncDec	++		3235626	1					
ANR	3237682	CompoundStatement		250:12:9767:9778	3235626	3					
ANR	3237683	IdentifierDeclStatement	uint8_t val ;	2438:12:83171:83182	3235626	0	True				
ANR	3237684	IdentifierDecl	val		3235626	0					
ANR	3237685	IdentifierDeclType	uint8_t		3235626	0					
ANR	3237686	Identifier	val		3235626	1					
ANR	3237687	ExpressionStatement	"fread ( & val , 1 , 1 , conY -> file )"	2439:12:83196:83225	3235626	1	True				
ANR	3237688	CallExpression	"fread ( & val , 1 , 1 , conY -> file )"		3235626	0					
ANR	3237689	Callee	fread		3235626	0					
ANR	3237690	Identifier	fread		3235626	0					
ANR	3237691	ArgumentList	& val		3235626	1					
ANR	3237692	Argument	& val		3235626	0					
ANR	3237693	UnaryOperationExpression	& val		3235626	0					
ANR	3237694	UnaryOperator	&		3235626	0					
ANR	3237695	Identifier	val		3235626	1					
ANR	3237696	Argument	1		3235626	1					
ANR	3237697	PrimaryExpression	1		3235626	0					
ANR	3237698	Argument	1		3235626	2					
ANR	3237699	PrimaryExpression	1		3235626	0					
ANR	3237700	Argument	conY -> file		3235626	3					
ANR	3237701	PtrMemberAccess	conY -> file		3235626	0					
ANR	3237702	Identifier	conY		3235626	0					
ANR	3237703	Identifier	file		3235626	1					
ANR	3237704	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2440:12:83239:83268	3235626	2	True				
ANR	3237705	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3235626	0					
ANR	3237706	Callee	fwrite		3235626	0					
ANR	3237707	Identifier	fwrite		3235626	0					
ANR	3237708	ArgumentList	& val		3235626	1					
ANR	3237709	Argument	& val		3235626	0					
ANR	3237710	UnaryOperationExpression	& val		3235626	0					
ANR	3237711	UnaryOperator	&		3235626	0					
ANR	3237712	Identifier	val		3235626	1					
ANR	3237713	Argument	1		3235626	1					
ANR	3237714	PrimaryExpression	1		3235626	0					
ANR	3237715	Argument	1		3235626	2					
ANR	3237716	PrimaryExpression	1		3235626	0					
ANR	3237717	Argument	con -> file		3235626	3					
ANR	3237718	PtrMemberAccess	con -> file		3235626	0					
ANR	3237719	Identifier	con		3235626	0					
ANR	3237720	Identifier	file		3235626	1					
ANR	3237721	ExpressionStatement	size = ftell ( conK -> file )	2442:8:83288:83312	3235626	10	True				
ANR	3237722	AssignmentExpression	size = ftell ( conK -> file )		3235626	0		=			
ANR	3237723	Identifier	size		3235626	0					
ANR	3237724	CallExpression	ftell ( conK -> file )		3235626	1					
ANR	3237725	Callee	ftell		3235626	0					
ANR	3237726	Identifier	ftell		3235626	0					
ANR	3237727	ArgumentList	conK -> file		3235626	1					
ANR	3237728	Argument	conK -> file		3235626	0					
ANR	3237729	PtrMemberAccess	conK -> file		3235626	0					
ANR	3237730	Identifier	conK		3235626	0					
ANR	3237731	Identifier	file		3235626	1					
ANR	3237732	ExpressionStatement	"fseek ( conK -> file , 0 , 0 )"	2443:8:83322:83345	3235626	11	True				
ANR	3237733	CallExpression	"fseek ( conK -> file , 0 , 0 )"		3235626	0					
ANR	3237734	Callee	fseek		3235626	0					
ANR	3237735	Identifier	fseek		3235626	0					
ANR	3237736	ArgumentList	conK -> file		3235626	1					
ANR	3237737	Argument	conK -> file		3235626	0					
ANR	3237738	PtrMemberAccess	conK -> file		3235626	0					
ANR	3237739	Identifier	conK		3235626	0					
ANR	3237740	Identifier	file		3235626	1					
ANR	3237741	Argument	0		3235626	1					
ANR	3237742	PrimaryExpression	0		3235626	0					
ANR	3237743	Argument	0		3235626	2					
ANR	3237744	PrimaryExpression	0		3235626	0					
ANR	3237745	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		3235626	12					
ANR	3237746	ForInit	ii = 0 ;	2444:13:83360:83366	3235626	0	True				
ANR	3237747	AssignmentExpression	ii = 0		3235626	0		=			
ANR	3237748	Identifier	ii		3235626	0					
ANR	3237749	PrimaryExpression	0		3235626	1					
ANR	3237750	Condition	ii < size	2444:21:83368:83376	3235626	1	True				
ANR	3237751	RelationalExpression	ii < size		3235626	0		<			
ANR	3237752	Identifier	ii		3235626	0					
ANR	3237753	Identifier	size		3235626	1					
ANR	3237754	PostIncDecOperationExpression	ii ++	2444:32:83379:83382	3235626	2	True				
ANR	3237755	Identifier	ii		3235626	0					
ANR	3237756	IncDec	++		3235626	1					
ANR	3237757	CompoundStatement		258:12:10003:10014	3235626	3					
ANR	3237758	IdentifierDeclStatement	uint8_t val ;	2446:12:83407:83418	3235626	0	True				
ANR	3237759	IdentifierDecl	val		3235626	0					
ANR	3237760	IdentifierDeclType	uint8_t		3235626	0					
ANR	3237761	Identifier	val		3235626	1					
ANR	3237762	ExpressionStatement	"fread ( & val , 1 , 1 , conK -> file )"	2447:12:83432:83461	3235626	1	True				
ANR	3237763	CallExpression	"fread ( & val , 1 , 1 , conK -> file )"		3235626	0					
ANR	3237764	Callee	fread		3235626	0					
ANR	3237765	Identifier	fread		3235626	0					
ANR	3237766	ArgumentList	& val		3235626	1					
ANR	3237767	Argument	& val		3235626	0					
ANR	3237768	UnaryOperationExpression	& val		3235626	0					
ANR	3237769	UnaryOperator	&		3235626	0					
ANR	3237770	Identifier	val		3235626	1					
ANR	3237771	Argument	1		3235626	1					
ANR	3237772	PrimaryExpression	1		3235626	0					
ANR	3237773	Argument	1		3235626	2					
ANR	3237774	PrimaryExpression	1		3235626	0					
ANR	3237775	Argument	conK -> file		3235626	3					
ANR	3237776	PtrMemberAccess	conK -> file		3235626	0					
ANR	3237777	Identifier	conK		3235626	0					
ANR	3237778	Identifier	file		3235626	1					
ANR	3237779	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2448:12:83475:83504	3235626	2	True				
ANR	3237780	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3235626	0					
ANR	3237781	Callee	fwrite		3235626	0					
ANR	3237782	Identifier	fwrite		3235626	0					
ANR	3237783	ArgumentList	& val		3235626	1					
ANR	3237784	Argument	& val		3235626	0					
ANR	3237785	UnaryOperationExpression	& val		3235626	0					
ANR	3237786	UnaryOperator	&		3235626	0					
ANR	3237787	Identifier	val		3235626	1					
ANR	3237788	Argument	1		3235626	1					
ANR	3237789	PrimaryExpression	1		3235626	0					
ANR	3237790	Argument	1		3235626	2					
ANR	3237791	PrimaryExpression	1		3235626	0					
ANR	3237792	Argument	con -> file		3235626	3					
ANR	3237793	PtrMemberAccess	con -> file		3235626	0					
ANR	3237794	Identifier	con		3235626	0					
ANR	3237795	Identifier	file		3235626	1					
ANR	3237796	IfStatement	if ( con -> alpha )		3235626	13					
ANR	3237797	Condition	con -> alpha	2450:11:83527:83536	3235626	0	True				
ANR	3237798	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3237799	Identifier	con		3235626	0					
ANR	3237800	Identifier	alpha		3235626	1					
ANR	3237801	CompoundStatement		263:8:10143:10143	3235626	1					
ANR	3237802	ExpressionStatement	size = ftell ( conA -> file )	2452:12:83561:83585	3235626	0	True				
ANR	3237803	AssignmentExpression	size = ftell ( conA -> file )		3235626	0		=			
ANR	3237804	Identifier	size		3235626	0					
ANR	3237805	CallExpression	ftell ( conA -> file )		3235626	1					
ANR	3237806	Callee	ftell		3235626	0					
ANR	3237807	Identifier	ftell		3235626	0					
ANR	3237808	ArgumentList	conA -> file		3235626	1					
ANR	3237809	Argument	conA -> file		3235626	0					
ANR	3237810	PtrMemberAccess	conA -> file		3235626	0					
ANR	3237811	Identifier	conA		3235626	0					
ANR	3237812	Identifier	file		3235626	1					
ANR	3237813	ExpressionStatement	"fseek ( conA -> file , 0 , 0 )"	2453:12:83599:83622	3235626	1	True				
ANR	3237814	CallExpression	"fseek ( conA -> file , 0 , 0 )"		3235626	0					
ANR	3237815	Callee	fseek		3235626	0					
ANR	3237816	Identifier	fseek		3235626	0					
ANR	3237817	ArgumentList	conA -> file		3235626	1					
ANR	3237818	Argument	conA -> file		3235626	0					
ANR	3237819	PtrMemberAccess	conA -> file		3235626	0					
ANR	3237820	Identifier	conA		3235626	0					
ANR	3237821	Identifier	file		3235626	1					
ANR	3237822	Argument	0		3235626	1					
ANR	3237823	PrimaryExpression	0		3235626	0					
ANR	3237824	Argument	0		3235626	2					
ANR	3237825	PrimaryExpression	0		3235626	0					
ANR	3237826	ForStatement	for ( ii = 0 ; ii < size && con -> alpha ; ii ++ )		3235626	2					
ANR	3237827	ForInit	ii = 0 ;	2454:17:83653:83659	3235626	0	True				
ANR	3237828	AssignmentExpression	ii = 0		3235626	0		=			
ANR	3237829	Identifier	ii		3235626	0					
ANR	3237830	PrimaryExpression	0		3235626	1					
ANR	3237831	Condition	ii < size && con -> alpha	2454:25:83661:83683	3235626	1	True				
ANR	3237832	AndExpression	ii < size && con -> alpha		3235626	0		&&			
ANR	3237833	RelationalExpression	ii < size		3235626	0		<			
ANR	3237834	Identifier	ii		3235626	0					
ANR	3237835	Identifier	size		3235626	1					
ANR	3237836	PtrMemberAccess	con -> alpha		3235626	1					
ANR	3237837	Identifier	con		3235626	0					
ANR	3237838	Identifier	alpha		3235626	1					
ANR	3237839	PostIncDecOperationExpression	ii ++	2454:50:83686:83689	3235626	2	True				
ANR	3237840	Identifier	ii		3235626	0					
ANR	3237841	IncDec	++		3235626	1					
ANR	3237842	CompoundStatement		268:16:10318:10329	3235626	3					
ANR	3237843	IdentifierDeclStatement	uint8_t val ;	2456:16:83722:83733	3235626	0	True				
ANR	3237844	IdentifierDecl	val		3235626	0					
ANR	3237845	IdentifierDeclType	uint8_t		3235626	0					
ANR	3237846	Identifier	val		3235626	1					
ANR	3237847	ExpressionStatement	"fread ( & val , 1 , 1 , conA -> file )"	2457:16:83751:83780	3235626	1	True				
ANR	3237848	CallExpression	"fread ( & val , 1 , 1 , conA -> file )"		3235626	0					
ANR	3237849	Callee	fread		3235626	0					
ANR	3237850	Identifier	fread		3235626	0					
ANR	3237851	ArgumentList	& val		3235626	1					
ANR	3237852	Argument	& val		3235626	0					
ANR	3237853	UnaryOperationExpression	& val		3235626	0					
ANR	3237854	UnaryOperator	&		3235626	0					
ANR	3237855	Identifier	val		3235626	1					
ANR	3237856	Argument	1		3235626	1					
ANR	3237857	PrimaryExpression	1		3235626	0					
ANR	3237858	Argument	1		3235626	2					
ANR	3237859	PrimaryExpression	1		3235626	0					
ANR	3237860	Argument	conA -> file		3235626	3					
ANR	3237861	PtrMemberAccess	conA -> file		3235626	0					
ANR	3237862	Identifier	conA		3235626	0					
ANR	3237863	Identifier	file		3235626	1					
ANR	3237864	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2458:16:83798:83827	3235626	2	True				
ANR	3237865	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3235626	0					
ANR	3237866	Callee	fwrite		3235626	0					
ANR	3237867	Identifier	fwrite		3235626	0					
ANR	3237868	ArgumentList	& val		3235626	1					
ANR	3237869	Argument	& val		3235626	0					
ANR	3237870	UnaryOperationExpression	& val		3235626	0					
ANR	3237871	UnaryOperator	&		3235626	0					
ANR	3237872	Identifier	val		3235626	1					
ANR	3237873	Argument	1		3235626	1					
ANR	3237874	PrimaryExpression	1		3235626	0					
ANR	3237875	Argument	1		3235626	2					
ANR	3237876	PrimaryExpression	1		3235626	0					
ANR	3237877	Argument	con -> file		3235626	3					
ANR	3237878	PtrMemberAccess	con -> file		3235626	0					
ANR	3237879	Identifier	con		3235626	0					
ANR	3237880	Identifier	file		3235626	1					
ANR	3237881	ExpressionStatement	fclose ( conC -> file )	2461:8:83861:83879	3235626	14	True				
ANR	3237882	CallExpression	fclose ( conC -> file )		3235626	0					
ANR	3237883	Callee	fclose		3235626	0					
ANR	3237884	Identifier	fclose		3235626	0					
ANR	3237885	ArgumentList	conC -> file		3235626	1					
ANR	3237886	Argument	conC -> file		3235626	0					
ANR	3237887	PtrMemberAccess	conC -> file		3235626	0					
ANR	3237888	Identifier	conC		3235626	0					
ANR	3237889	Identifier	file		3235626	1					
ANR	3237890	ExpressionStatement	fclose ( conM -> file )	2462:8:83889:83907	3235626	15	True				
ANR	3237891	CallExpression	fclose ( conM -> file )		3235626	0					
ANR	3237892	Callee	fclose		3235626	0					
ANR	3237893	Identifier	fclose		3235626	0					
ANR	3237894	ArgumentList	conM -> file		3235626	1					
ANR	3237895	Argument	conM -> file		3235626	0					
ANR	3237896	PtrMemberAccess	conM -> file		3235626	0					
ANR	3237897	Identifier	conM		3235626	0					
ANR	3237898	Identifier	file		3235626	1					
ANR	3237899	ExpressionStatement	fclose ( conY -> file )	2463:8:83917:83935	3235626	16	True				
ANR	3237900	CallExpression	fclose ( conY -> file )		3235626	0					
ANR	3237901	Callee	fclose		3235626	0					
ANR	3237902	Identifier	fclose		3235626	0					
ANR	3237903	ArgumentList	conY -> file		3235626	1					
ANR	3237904	Argument	conY -> file		3235626	0					
ANR	3237905	PtrMemberAccess	conY -> file		3235626	0					
ANR	3237906	Identifier	conY		3235626	0					
ANR	3237907	Identifier	file		3235626	1					
ANR	3237908	ExpressionStatement	fclose ( conK -> file )	2464:8:83945:83963	3235626	17	True				
ANR	3237909	CallExpression	fclose ( conK -> file )		3235626	0					
ANR	3237910	Callee	fclose		3235626	0					
ANR	3237911	Identifier	fclose		3235626	0					
ANR	3237912	ArgumentList	conK -> file		3235626	1					
ANR	3237913	Argument	conK -> file		3235626	0					
ANR	3237914	PtrMemberAccess	conK -> file		3235626	0					
ANR	3237915	Identifier	conK		3235626	0					
ANR	3237916	Identifier	file		3235626	1					
ANR	3237917	IfStatement	if ( con -> alpha )		3235626	18					
ANR	3237918	Condition	con -> alpha	2465:11:83976:83985	3235626	0	True				
ANR	3237919	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3237920	Identifier	con		3235626	0					
ANR	3237921	Identifier	alpha		3235626	1					
ANR	3237922	ExpressionStatement	fclose ( conA -> file )	2466:12:84000:84018	3235626	1	True				
ANR	3237923	CallExpression	fclose ( conA -> file )		3235626	0					
ANR	3237924	Callee	fclose		3235626	0					
ANR	3237925	Identifier	fclose		3235626	0					
ANR	3237926	ArgumentList	conA -> file		3235626	1					
ANR	3237927	Argument	conA -> file		3235626	0					
ANR	3237928	PtrMemberAccess	conA -> file		3235626	0					
ANR	3237929	Identifier	conA		3235626	0					
ANR	3237930	Identifier	file		3235626	1					
ANR	3237931	ExpressionStatement	free ( conC -> buf )	2468:8:84029:84044	3235626	19	True				
ANR	3237932	CallExpression	free ( conC -> buf )		3235626	0					
ANR	3237933	Callee	free		3235626	0					
ANR	3237934	Identifier	free		3235626	0					
ANR	3237935	ArgumentList	conC -> buf		3235626	1					
ANR	3237936	Argument	conC -> buf		3235626	0					
ANR	3237937	PtrMemberAccess	conC -> buf		3235626	0					
ANR	3237938	Identifier	conC		3235626	0					
ANR	3237939	Identifier	buf		3235626	1					
ANR	3237940	ExpressionStatement	free ( conM -> buf )	2469:8:84054:84069	3235626	20	True				
ANR	3237941	CallExpression	free ( conM -> buf )		3235626	0					
ANR	3237942	Callee	free		3235626	0					
ANR	3237943	Identifier	free		3235626	0					
ANR	3237944	ArgumentList	conM -> buf		3235626	1					
ANR	3237945	Argument	conM -> buf		3235626	0					
ANR	3237946	PtrMemberAccess	conM -> buf		3235626	0					
ANR	3237947	Identifier	conM		3235626	0					
ANR	3237948	Identifier	buf		3235626	1					
ANR	3237949	ExpressionStatement	free ( conY -> buf )	2470:8:84079:84094	3235626	21	True				
ANR	3237950	CallExpression	free ( conY -> buf )		3235626	0					
ANR	3237951	Callee	free		3235626	0					
ANR	3237952	Identifier	free		3235626	0					
ANR	3237953	ArgumentList	conY -> buf		3235626	1					
ANR	3237954	Argument	conY -> buf		3235626	0					
ANR	3237955	PtrMemberAccess	conY -> buf		3235626	0					
ANR	3237956	Identifier	conY		3235626	0					
ANR	3237957	Identifier	buf		3235626	1					
ANR	3237958	ExpressionStatement	free ( conK -> buf )	2471:8:84104:84119	3235626	22	True				
ANR	3237959	CallExpression	free ( conK -> buf )		3235626	0					
ANR	3237960	Callee	free		3235626	0					
ANR	3237961	Identifier	free		3235626	0					
ANR	3237962	ArgumentList	conK -> buf		3235626	1					
ANR	3237963	Argument	conK -> buf		3235626	0					
ANR	3237964	PtrMemberAccess	conK -> buf		3235626	0					
ANR	3237965	Identifier	conK		3235626	0					
ANR	3237966	Identifier	buf		3235626	1					
ANR	3237967	IfStatement	if ( con -> alpha )		3235626	23					
ANR	3237968	Condition	con -> alpha	2472:11:84132:84141	3235626	0	True				
ANR	3237969	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3237970	Identifier	con		3235626	0					
ANR	3237971	Identifier	alpha		3235626	1					
ANR	3237972	ExpressionStatement	free ( conA -> buf )	2473:12:84156:84171	3235626	1	True				
ANR	3237973	CallExpression	free ( conA -> buf )		3235626	0					
ANR	3237974	Callee	free		3235626	0					
ANR	3237975	Identifier	free		3235626	0					
ANR	3237976	ArgumentList	conA -> buf		3235626	1					
ANR	3237977	Argument	conA -> buf		3235626	0					
ANR	3237978	PtrMemberAccess	conA -> buf		3235626	0					
ANR	3237979	Identifier	conA		3235626	0					
ANR	3237980	Identifier	buf		3235626	1					
ANR	3237981	ExpressionStatement	free ( conC )	2475:8:84182:84192	3235626	24	True				
ANR	3237982	CallExpression	free ( conC )		3235626	0					
ANR	3237983	Callee	free		3235626	0					
ANR	3237984	Identifier	free		3235626	0					
ANR	3237985	ArgumentList	conC		3235626	1					
ANR	3237986	Argument	conC		3235626	0					
ANR	3237987	Identifier	conC		3235626	0					
ANR	3237988	ExpressionStatement	free ( conM )	2476:8:84202:84212	3235626	25	True				
ANR	3237989	CallExpression	free ( conM )		3235626	0					
ANR	3237990	Callee	free		3235626	0					
ANR	3237991	Identifier	free		3235626	0					
ANR	3237992	ArgumentList	conM		3235626	1					
ANR	3237993	Argument	conM		3235626	0					
ANR	3237994	Identifier	conM		3235626	0					
ANR	3237995	ExpressionStatement	free ( conY )	2477:8:84222:84232	3235626	26	True				
ANR	3237996	CallExpression	free ( conY )		3235626	0					
ANR	3237997	Callee	free		3235626	0					
ANR	3237998	Identifier	free		3235626	0					
ANR	3237999	ArgumentList	conY		3235626	1					
ANR	3238000	Argument	conY		3235626	0					
ANR	3238001	Identifier	conY		3235626	0					
ANR	3238002	ExpressionStatement	free ( conK )	2478:8:84242:84252	3235626	27	True				
ANR	3238003	CallExpression	free ( conK )		3235626	0					
ANR	3238004	Callee	free		3235626	0					
ANR	3238005	Identifier	free		3235626	0					
ANR	3238006	ArgumentList	conK		3235626	1					
ANR	3238007	Argument	conK		3235626	0					
ANR	3238008	Identifier	conK		3235626	0					
ANR	3238009	IfStatement	if ( con -> alpha )		3235626	28					
ANR	3238010	Condition	con -> alpha	2479:11:84265:84274	3235626	0	True				
ANR	3238011	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3238012	Identifier	con		3235626	0					
ANR	3238013	Identifier	alpha		3235626	1					
ANR	3238014	ExpressionStatement	free ( conA )	2480:12:84289:84299	3235626	1	True				
ANR	3238015	CallExpression	free ( conA )		3235626	0					
ANR	3238016	Callee	free		3235626	0					
ANR	3238017	Identifier	free		3235626	0					
ANR	3238018	ArgumentList	conA		3235626	1					
ANR	3238019	Argument	conA		3235626	0					
ANR	3238020	Identifier	conA		3235626	0					
ANR	3238021	ExpressionStatement	"remove ( ""C.raw"" )"	2482:8:84318:84333	3235626	29	True				
ANR	3238022	CallExpression	"remove ( ""C.raw"" )"		3235626	0					
ANR	3238023	Callee	remove		3235626	0					
ANR	3238024	Identifier	remove		3235626	0					
ANR	3238025	ArgumentList	"""C.raw"""		3235626	1					
ANR	3238026	Argument	"""C.raw"""		3235626	0					
ANR	3238027	PrimaryExpression	"""C.raw"""		3235626	0					
ANR	3238028	ExpressionStatement	"remove ( ""M.raw"" )"	2483:8:84343:84358	3235626	30	True				
ANR	3238029	CallExpression	"remove ( ""M.raw"" )"		3235626	0					
ANR	3238030	Callee	remove		3235626	0					
ANR	3238031	Identifier	remove		3235626	0					
ANR	3238032	ArgumentList	"""M.raw"""		3235626	1					
ANR	3238033	Argument	"""M.raw"""		3235626	0					
ANR	3238034	PrimaryExpression	"""M.raw"""		3235626	0					
ANR	3238035	ExpressionStatement	"remove ( ""Y.raw"" )"	2484:8:84368:84383	3235626	31	True				
ANR	3238036	CallExpression	"remove ( ""Y.raw"" )"		3235626	0					
ANR	3238037	Callee	remove		3235626	0					
ANR	3238038	Identifier	remove		3235626	0					
ANR	3238039	ArgumentList	"""Y.raw"""		3235626	1					
ANR	3238040	Argument	"""Y.raw"""		3235626	0					
ANR	3238041	PrimaryExpression	"""Y.raw"""		3235626	0					
ANR	3238042	ExpressionStatement	"remove ( ""K.raw"" )"	2485:8:84393:84408	3235626	32	True				
ANR	3238043	CallExpression	"remove ( ""K.raw"" )"		3235626	0					
ANR	3238044	Callee	remove		3235626	0					
ANR	3238045	Identifier	remove		3235626	0					
ANR	3238046	ArgumentList	"""K.raw"""		3235626	1					
ANR	3238047	Argument	"""K.raw"""		3235626	0					
ANR	3238048	PrimaryExpression	"""K.raw"""		3235626	0					
ANR	3238049	IfStatement	if ( con -> alpha )		3235626	33					
ANR	3238050	Condition	con -> alpha	2486:11:84421:84430	3235626	0	True				
ANR	3238051	PtrMemberAccess	con -> alpha		3235626	0					
ANR	3238052	Identifier	con		3235626	0					
ANR	3238053	Identifier	alpha		3235626	1					
ANR	3238054	ExpressionStatement	"remove ( ""A.raw"" )"	2487:12:84445:84460	3235626	1	True				
ANR	3238055	CallExpression	"remove ( ""A.raw"" )"		3235626	0					
ANR	3238056	Callee	remove		3235626	0					
ANR	3238057	Identifier	remove		3235626	0					
ANR	3238058	ArgumentList	"""A.raw"""		3235626	1					
ANR	3238059	Argument	"""A.raw"""		3235626	0					
ANR	3238060	PrimaryExpression	"""A.raw"""		3235626	0					
ANR	3238061	ReturnType	void		3235626	1					
ANR	3238062	Identifier	write_file_CMYK		3235626	2					
ANR	3238063	ParameterList	"jxr_image_t image , int mx , int my , int * data"		3235626	3					
ANR	3238064	Parameter	jxr_image_t image	2188:21:73357:73373	3235626	0	True				
ANR	3238065	ParameterType	jxr_image_t		3235626	0					
ANR	3238066	Identifier	image		3235626	1					
ANR	3238067	Parameter	int mx	2188:40:73376:73381	3235626	1	True				
ANR	3238068	ParameterType	int		3235626	0					
ANR	3238069	Identifier	mx		3235626	1					
ANR	3238070	Parameter	int my	2188:48:73384:73389	3235626	2	True				
ANR	3238071	ParameterType	int		3235626	0					
ANR	3238072	Identifier	my		3235626	1					
ANR	3238073	Parameter	int * data	2188:56:73392:73400	3235626	3	True				
ANR	3238074	ParameterType	int *		3235626	0					
ANR	3238075	Identifier	data		3235626	1					
ANR	3238076	CFGEntryNode	ENTRY		3235626		True				
ANR	3238077	CFGExitNode	EXIT		3235626		True				
ANR	3238078	Symbol	& val		3235626						
ANR	3238079	Symbol	con		3235626						
ANR	3238080	Symbol	data		3235626						
ANR	3238081	Symbol	con -> ncomp		3235626						
ANR	3238082	Symbol	strip_blocks		3235626						
ANR	3238083	Symbol	conY -> name		3235626						
ANR	3238084	Symbol	conM -> ncomp		3235626						
ANR	3238085	Symbol	conY -> wid		3235626						
ANR	3238086	Symbol	conY -> ncomp		3235626						
ANR	3238087	Symbol	dp		3235626						
ANR	3238088	Symbol	conY -> file		3235626						
ANR	3238089	Symbol	dix		3235626						
ANR	3238090	Symbol	image -> window_extra_top		3235626						
ANR	3238091	Symbol	dy		3235626						
ANR	3238092	Symbol	con -> bpi		3235626						
ANR	3238093	Symbol	conA -> ncomp		3235626						
ANR	3238094	Symbol	jxr_get_pixel_format		3235626						
ANR	3238095	Symbol	* idx		3235626						
ANR	3238096	Symbol	jxr_get_ALPHACHANNEL_FLAG		3235626						
ANR	3238097	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		3235626						
ANR	3238098	Symbol	ii		3235626						
ANR	3238099	Symbol	val		3235626						
ANR	3238100	Symbol	conK -> file		3235626						
ANR	3238101	Symbol	image		3235626						
ANR	3238102	Symbol	* conK		3235626						
ANR	3238103	Symbol	NULL		3235626						
ANR	3238104	Symbol	con -> hei		3235626						
ANR	3238105	Symbol	conM		3235626						
ANR	3238106	Symbol	conK		3235626						
ANR	3238107	Symbol	* conA		3235626						
ANR	3238108	Symbol	conC -> buf		3235626						
ANR	3238109	Symbol	conY -> buf		3235626						
ANR	3238110	Symbol	* conC		3235626						
ANR	3238111	Symbol	mx		3235626						
ANR	3238112	Symbol	conM -> file		3235626						
ANR	3238113	Symbol	my		3235626						
ANR	3238114	Symbol	con -> top_pad		3235626						
ANR	3238115	Symbol	conA -> buf		3235626						
ANR	3238116	Symbol	conC		3235626						
ANR	3238117	Symbol	size		3235626						
ANR	3238118	Symbol	con -> top_pad_remaining		3235626						
ANR	3238119	Symbol	conY		3235626						
ANR	3238120	Symbol	idx		3235626						
ANR	3238121	Symbol	conK -> ncomp		3235626						
ANR	3238122	Symbol	* image		3235626						
ANR	3238123	Symbol	trans		3235626						
ANR	3238124	Symbol	dataY		3235626						
ANR	3238125	Symbol	* dix		3235626						
ANR	3238126	Symbol	conA -> file		3235626						
ANR	3238127	Symbol	jxr_get_user_data		3235626						
ANR	3238128	Symbol	ftell		3235626						
ANR	3238129	Symbol	conC -> wid		3235626						
ANR	3238130	Symbol	dataM		3235626						
ANR	3238131	Symbol	conA -> wid		3235626						
ANR	3238132	Symbol	dataK		3235626						
ANR	3238133	Symbol	conC -> name		3235626						
ANR	3238134	Symbol	con -> left_pad		3235626						
ANR	3238135	Symbol	conM -> buf		3235626						
ANR	3238136	Symbol	conK -> buf		3235626						
ANR	3238137	Symbol	* conY		3235626						
ANR	3238138	Symbol	jxr_get_IMAGE_HEIGHT		3235626						
ANR	3238139	Symbol	conA		3235626						
ANR	3238140	Symbol	* dp		3235626						
ANR	3238141	Symbol	* con		3235626						
ANR	3238142	Symbol	conA -> name		3235626						
ANR	3238143	Symbol	conK -> name		3235626						
ANR	3238144	Symbol	* conM		3235626						
ANR	3238145	Symbol	jxr_get_OUTPUT_BITDEPTH		3235626						
ANR	3238146	Symbol	conC -> file		3235626						
ANR	3238147	Symbol	jxr_get_IMAGE_WIDTH		3235626						
ANR	3238148	Symbol	malloc		3235626						
ANR	3238149	Symbol	image -> window_extra_left		3235626						
ANR	3238150	Symbol	conC -> ncomp		3235626						
ANR	3238151	Symbol	* dataM		3235626						
ANR	3238152	Symbol	con -> file		3235626						
ANR	3238153	Symbol	conM -> name		3235626						
ANR	3238154	Symbol	* dataK		3235626						
ANR	3238155	Symbol	* dataC		3235626						
ANR	3238156	Symbol	* dataA		3235626						
ANR	3238157	Symbol	conM -> wid		3235626						
ANR	3238158	Symbol	conK -> wid		3235626						
ANR	3238159	Symbol	image -> extended_width		3235626						
ANR	3238160	Symbol	dataC		3235626						
ANR	3238161	Symbol	* dataY		3235626						
ANR	3238162	Symbol	dataA		3235626						
ANR	3238163	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		3235626						
ANR	3238164	Symbol	con -> alpha		3235626						
ANR	3238165	Symbol	first		3235626						
ANR	3238166	Function	write_file	2491:0:84471:94431							
ANR	3238167	FunctionDef	"write_file (jxr_image_t image , int mx , int my , int * data)"		3238166	0					
ANR	3238168	CompoundStatement		2492:0:84532:94431	3238166	0					
ANR	3238169	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2493:4:84538:84588	3238166	0	True				
ANR	3238170	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3238166	0					
ANR	3238171	IdentifierDeclType	context *		3238166	0					
ANR	3238172	Identifier	con		3238166	1					
ANR	3238173	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3238166	2		=			
ANR	3238174	Identifier	con		3238166	0					
ANR	3238175	CastExpression	( context * ) jxr_get_user_data ( image )		3238166	1					
ANR	3238176	CastTarget	context *		3238166	0					
ANR	3238177	CallExpression	jxr_get_user_data ( image )		3238166	1					
ANR	3238178	Callee	jxr_get_user_data		3238166	0					
ANR	3238179	Identifier	jxr_get_user_data		3238166	0					
ANR	3238180	ArgumentList	image		3238166	1					
ANR	3238181	Argument	image		3238166	0					
ANR	3238182	Identifier	image		3238166	0					
ANR	3238183	IfStatement	if ( ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3 )		3238166	1					
ANR	3238184	Condition	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3	2495:7:84602:84712	3238166	0	True				
ANR	3238185	AndExpression	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3		3238166	0		&&			
ANR	3238186	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image )		3238166	0		||			
ANR	3238187	CallExpression	isOutputYUV444 ( image )		3238166	0					
ANR	3238188	Callee	isOutputYUV444		3238166	0					
ANR	3238189	Identifier	isOutputYUV444		3238166	0					
ANR	3238190	ArgumentList	image		3238166	1					
ANR	3238191	Argument	image		3238166	0					
ANR	3238192	Identifier	image		3238166	0					
ANR	3238193	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image )		3238166	1		||			
ANR	3238194	CallExpression	isOutputYUV422 ( image )		3238166	0					
ANR	3238195	Callee	isOutputYUV422		3238166	0					
ANR	3238196	Identifier	isOutputYUV422		3238166	0					
ANR	3238197	ArgumentList	image		3238166	1					
ANR	3238198	Argument	image		3238166	0					
ANR	3238199	Identifier	image		3238166	0					
ANR	3238200	CallExpression	isOutputYUV420 ( image )		3238166	1					
ANR	3238201	Callee	isOutputYUV420		3238166	0					
ANR	3238202	Identifier	isOutputYUV420		3238166	0					
ANR	3238203	ArgumentList	image		3238166	1					
ANR	3238204	Argument	image		3238166	0					
ANR	3238205	Identifier	image		3238166	0					
ANR	3238206	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 3		3238166	1		==			
ANR	3238207	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3238166	0					
ANR	3238208	Callee	jxr_get_IMAGE_CHANNELS		3238166	0					
ANR	3238209	Identifier	jxr_get_IMAGE_CHANNELS		3238166	0					
ANR	3238210	ArgumentList	image		3238166	1					
ANR	3238211	Argument	image		3238166	0					
ANR	3238212	Identifier	image		3238166	0					
ANR	3238213	PrimaryExpression	3		3238166	1					
ANR	3238214	CompoundStatement		5:4:186:186	3238166	1					
ANR	3238215	ExpressionStatement	"write_file_YCC ( image , mx , my , data )"	2498:8:84789:84824	3238166	0	True				
ANR	3238216	CallExpression	"write_file_YCC ( image , mx , my , data )"		3238166	0					
ANR	3238217	Callee	write_file_YCC		3238166	0					
ANR	3238218	Identifier	write_file_YCC		3238166	0					
ANR	3238219	ArgumentList	image		3238166	1					
ANR	3238220	Argument	image		3238166	0					
ANR	3238221	Identifier	image		3238166	0					
ANR	3238222	Argument	mx		3238166	1					
ANR	3238223	Identifier	mx		3238166	0					
ANR	3238224	Argument	my		3238166	2					
ANR	3238225	Identifier	my		3238166	0					
ANR	3238226	Argument	data		3238166	3					
ANR	3238227	Identifier	data		3238166	0					
ANR	3238228	ReturnStatement	return ;	2499:8:84834:84840	3238166	1	True				
ANR	3238229	ElseStatement	else		3238166	0					
ANR	3238230	IfStatement	if ( isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4 )		3238166	0					
ANR	3238231	Condition	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4	2501:12:84860:84922	3238166	0	True				
ANR	3238232	AndExpression	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4		3238166	0		&&			
ANR	3238233	CallExpression	isOutputCMYKDirect ( image )		3238166	0					
ANR	3238234	Callee	isOutputCMYKDirect		3238166	0					
ANR	3238235	Identifier	isOutputCMYKDirect		3238166	0					
ANR	3238236	ArgumentList	image		3238166	1					
ANR	3238237	Argument	image		3238166	0					
ANR	3238238	Identifier	image		3238166	0					
ANR	3238239	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 4		3238166	1		==			
ANR	3238240	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3238166	0					
ANR	3238241	Callee	jxr_get_IMAGE_CHANNELS		3238166	0					
ANR	3238242	Identifier	jxr_get_IMAGE_CHANNELS		3238166	0					
ANR	3238243	ArgumentList	image		3238166	1					
ANR	3238244	Argument	image		3238166	0					
ANR	3238245	Identifier	image		3238166	0					
ANR	3238246	PrimaryExpression	4		3238166	1					
ANR	3238247	CompoundStatement		11:4:396:396	3238166	1					
ANR	3238248	ExpressionStatement	"write_file_CMYK ( image , mx , my , data )"	2504:8:84999:85035	3238166	0	True				
ANR	3238249	CallExpression	"write_file_CMYK ( image , mx , my , data )"		3238166	0					
ANR	3238250	Callee	write_file_CMYK		3238166	0					
ANR	3238251	Identifier	write_file_CMYK		3238166	0					
ANR	3238252	ArgumentList	image		3238166	1					
ANR	3238253	Argument	image		3238166	0					
ANR	3238254	Identifier	image		3238166	0					
ANR	3238255	Argument	mx		3238166	1					
ANR	3238256	Identifier	mx		3238166	0					
ANR	3238257	Argument	my		3238166	2					
ANR	3238258	Identifier	my		3238166	0					
ANR	3238259	Argument	data		3238166	3					
ANR	3238260	Identifier	data		3238166	0					
ANR	3238261	ReturnStatement	return ;	2505:8:85045:85051	3238166	1	True				
ANR	3238262	IfStatement	if ( con -> file == 0 )		3238166	2					
ANR	3238263	Condition	con -> file == 0	2508:8:85068:85079	3238166	0	True				
ANR	3238264	EqualityExpression	con -> file == 0		3238166	0		==			
ANR	3238265	PtrMemberAccess	con -> file		3238166	0					
ANR	3238266	Identifier	con		3238166	0					
ANR	3238267	Identifier	file		3238166	1					
ANR	3238268	PrimaryExpression	0		3238166	1					
ANR	3238269	CompoundStatement		19:8:563:607	3238166	1					
ANR	3238270	IdentifierDeclStatement	int channels = jxr_get_IMAGE_CHANNELS ( image ) ;	2510:8:85096:85140	3238166	0	True				
ANR	3238271	IdentifierDecl	channels = jxr_get_IMAGE_CHANNELS ( image )		3238166	0					
ANR	3238272	IdentifierDeclType	int		3238166	0					
ANR	3238273	Identifier	channels		3238166	1					
ANR	3238274	AssignmentExpression	channels = jxr_get_IMAGE_CHANNELS ( image )		3238166	2		=			
ANR	3238275	Identifier	channels		3238166	0					
ANR	3238276	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3238166	1					
ANR	3238277	Callee	jxr_get_IMAGE_CHANNELS		3238166	0					
ANR	3238278	Identifier	jxr_get_IMAGE_CHANNELS		3238166	0					
ANR	3238279	ArgumentList	image		3238166	1					
ANR	3238280	Argument	image		3238166	0					
ANR	3238281	Identifier	image		3238166	0					
ANR	3238282	IfStatement	if ( channels == 3 )		3238166	1					
ANR	3238283	Condition	channels == 3	2511:12:85154:85166	3238166	0	True				
ANR	3238284	EqualityExpression	channels == 3		3238166	0		==			
ANR	3238285	Identifier	channels		3238166	0					
ANR	3238286	PrimaryExpression	3		3238166	1					
ANR	3238287	ExpressionStatement	"set_bgr_flag ( con , image )"	2512:12:85181:85205	3238166	1	True				
ANR	3238288	CallExpression	"set_bgr_flag ( con , image )"		3238166	0					
ANR	3238289	Callee	set_bgr_flag		3238166	0					
ANR	3238290	Identifier	set_bgr_flag		3238166	0					
ANR	3238291	ArgumentList	con		3238166	1					
ANR	3238292	Argument	con		3238166	0					
ANR	3238293	Identifier	con		3238166	0					
ANR	3238294	Argument	image		3238166	1					
ANR	3238295	Identifier	image		3238166	0					
ANR	3238296	ElseStatement	else		3238166	0					
ANR	3238297	ExpressionStatement	con -> isBgr = 0	2514:12:85232:85246	3238166	0	True				
ANR	3238298	AssignmentExpression	con -> isBgr = 0		3238166	0		=			
ANR	3238299	PtrMemberAccess	con -> isBgr		3238166	0					
ANR	3238300	Identifier	con		3238166	0					
ANR	3238301	Identifier	isBgr		3238166	1					
ANR	3238302	PrimaryExpression	0		3238166	1					
ANR	3238303	IfStatement	if ( jxr_get_pixel_format ( image ) == JXRC_FMT_32bppRGBE )		3238166	2					
ANR	3238304	Condition	jxr_get_pixel_format ( image ) == JXRC_FMT_32bppRGBE	2516:11:85260:85308	3238166	0	True				
ANR	3238305	EqualityExpression	jxr_get_pixel_format ( image ) == JXRC_FMT_32bppRGBE		3238166	0		==			
ANR	3238306	CallExpression	jxr_get_pixel_format ( image )		3238166	0					
ANR	3238307	Callee	jxr_get_pixel_format		3238166	0					
ANR	3238308	Identifier	jxr_get_pixel_format		3238166	0					
ANR	3238309	ArgumentList	image		3238166	1					
ANR	3238310	Argument	image		3238166	0					
ANR	3238311	Identifier	image		3238166	0					
ANR	3238312	Identifier	JXRC_FMT_32bppRGBE		3238166	1					
ANR	3238313	CompoundStatement		26:8:786:786	3238166	1					
ANR	3238314	ExpressionStatement	channels ++	2518:12:85344:85354	3238166	0	True				
ANR	3238315	PostIncDecOperationExpression	channels ++		3238166	0					
ANR	3238316	Identifier	channels		3238166	0					
ANR	3238317	IncDec	++		3238166	1					
ANR	3238318	ExpressionStatement	"set_pad_bytes ( con , image )"	2521:8:85375:85400	3238166	3	True				
ANR	3238319	CallExpression	"set_pad_bytes ( con , image )"		3238166	0					
ANR	3238320	Callee	set_pad_bytes		3238166	0					
ANR	3238321	Identifier	set_pad_bytes		3238166	0					
ANR	3238322	ArgumentList	con		3238166	1					
ANR	3238323	Argument	con		3238166	0					
ANR	3238324	Identifier	con		3238166	0					
ANR	3238325	Argument	image		3238166	1					
ANR	3238326	Identifier	image		3238166	0					
ANR	3238327	ExpressionStatement	con -> left_pad = image -> window_extra_left	2523:8:85411:85451	3238166	4	True				
ANR	3238328	AssignmentExpression	con -> left_pad = image -> window_extra_left		3238166	0		=			
ANR	3238329	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3238330	Identifier	con		3238166	0					
ANR	3238331	Identifier	left_pad		3238166	1					
ANR	3238332	PtrMemberAccess	image -> window_extra_left		3238166	1					
ANR	3238333	Identifier	image		3238166	0					
ANR	3238334	Identifier	window_extra_left		3238166	1					
ANR	3238335	ExpressionStatement	con -> top_pad_remaining = image -> window_extra_top	2524:8:85461:85509	3238166	5	True				
ANR	3238336	AssignmentExpression	con -> top_pad_remaining = image -> window_extra_top		3238166	0		=			
ANR	3238337	PtrMemberAccess	con -> top_pad_remaining		3238166	0					
ANR	3238338	Identifier	con		3238166	0					
ANR	3238339	Identifier	top_pad_remaining		3238166	1					
ANR	3238340	PtrMemberAccess	image -> window_extra_top		3238166	1					
ANR	3238341	Identifier	image		3238166	0					
ANR	3238342	Identifier	window_extra_top		3238166	1					
ANR	3238343	ExpressionStatement	con -> top_pad = image -> window_extra_top	2525:8:85519:85557	3238166	6	True				
ANR	3238344	AssignmentExpression	con -> top_pad = image -> window_extra_top		3238166	0		=			
ANR	3238345	PtrMemberAccess	con -> top_pad		3238166	0					
ANR	3238346	Identifier	con		3238166	0					
ANR	3238347	Identifier	top_pad		3238166	1					
ANR	3238348	PtrMemberAccess	image -> window_extra_top		3238166	1					
ANR	3238349	Identifier	image		3238166	0					
ANR	3238350	Identifier	window_extra_top		3238166	1					
ANR	3238351	ExpressionStatement	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )	2527:8:85568:85613	3238166	7	True				
ANR	3238352	AssignmentExpression	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )		3238166	0		=			
ANR	3238353	PtrMemberAccess	con -> alpha		3238166	0					
ANR	3238354	Identifier	con		3238166	0					
ANR	3238355	Identifier	alpha		3238166	1					
ANR	3238356	CallExpression	jxr_get_ALPHACHANNEL_FLAG ( image )		3238166	1					
ANR	3238357	Callee	jxr_get_ALPHACHANNEL_FLAG		3238166	0					
ANR	3238358	Identifier	jxr_get_ALPHACHANNEL_FLAG		3238166	0					
ANR	3238359	ArgumentList	image		3238166	1					
ANR	3238360	Argument	image		3238166	0					
ANR	3238361	Identifier	image		3238166	0					
ANR	3238362	IfStatement	if ( con -> alpha )		3238166	8					
ANR	3238363	Condition	con -> alpha	2528:12:85627:85636	3238166	0	True				
ANR	3238364	PtrMemberAccess	con -> alpha		3238166	0					
ANR	3238365	Identifier	con		3238166	0					
ANR	3238366	Identifier	alpha		3238166	1					
ANR	3238367	ExpressionStatement	channels ++	2529:12:85677:85688	3238166	1	True				
ANR	3238368	PostIncDecOperationExpression	channels ++		3238166	0					
ANR	3238369	Identifier	channels		3238166	0					
ANR	3238370	IncDec	++		3238166	1					
ANR	3238371	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , channels , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2531:8:85699:85950	3238166	9	True				
ANR	3238372	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , channels , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3238166	0					
ANR	3238373	Callee	start_output_file		3238166	0					
ANR	3238374	Identifier	start_output_file		3238166	0					
ANR	3238375	ArgumentList	con		3238166	1					
ANR	3238376	Argument	con		3238166	0					
ANR	3238377	Identifier	con		3238166	0					
ANR	3238378	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3238166	1					
ANR	3238379	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3238166	0					
ANR	3238380	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3238166	0					
ANR	3238381	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3238166	0					
ANR	3238382	ArgumentList	image		3238166	1					
ANR	3238383	Argument	image		3238166	0					
ANR	3238384	Identifier	image		3238166	0					
ANR	3238385	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3238166	2					
ANR	3238386	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3238166	0					
ANR	3238387	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3238166	0					
ANR	3238388	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3238166	0					
ANR	3238389	ArgumentList	image		3238166	1					
ANR	3238390	Argument	image		3238166	0					
ANR	3238391	Identifier	image		3238166	0					
ANR	3238392	Argument	jxr_get_IMAGE_WIDTH ( image )		3238166	3					
ANR	3238393	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3238166	0					
ANR	3238394	Callee	jxr_get_IMAGE_WIDTH		3238166	0					
ANR	3238395	Identifier	jxr_get_IMAGE_WIDTH		3238166	0					
ANR	3238396	ArgumentList	image		3238166	1					
ANR	3238397	Argument	image		3238166	0					
ANR	3238398	Identifier	image		3238166	0					
ANR	3238399	Argument	jxr_get_IMAGE_HEIGHT ( image )		3238166	4					
ANR	3238400	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3238166	0					
ANR	3238401	Callee	jxr_get_IMAGE_HEIGHT		3238166	0					
ANR	3238402	Identifier	jxr_get_IMAGE_HEIGHT		3238166	0					
ANR	3238403	ArgumentList	image		3238166	1					
ANR	3238404	Argument	image		3238166	0					
ANR	3238405	Identifier	image		3238166	0					
ANR	3238406	Argument	channels		3238166	5					
ANR	3238407	Identifier	channels		3238166	0					
ANR	3238408	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3238166	6					
ANR	3238409	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3238166	0					
ANR	3238410	Callee	jxr_get_OUTPUT_BITDEPTH		3238166	0					
ANR	3238411	Identifier	jxr_get_OUTPUT_BITDEPTH		3238166	0					
ANR	3238412	ArgumentList	image		3238166	1					
ANR	3238413	Argument	image		3238166	0					
ANR	3238414	Identifier	image		3238166	0					
ANR	3238415	Argument	jxr_get_pixel_format ( image )		3238166	7					
ANR	3238416	CallExpression	jxr_get_pixel_format ( image )		3238166	0					
ANR	3238417	Callee	jxr_get_pixel_format		3238166	0					
ANR	3238418	Identifier	jxr_get_pixel_format		3238166	0					
ANR	3238419	ArgumentList	image		3238166	1					
ANR	3238420	Argument	image		3238166	0					
ANR	3238421	Identifier	image		3238166	0					
ANR	3238422	IdentifierDeclStatement	"int idx , jdx ;"	2536:4:85963:85975	3238166	3	True				
ANR	3238423	IdentifierDecl	idx		3238166	0					
ANR	3238424	IdentifierDeclType	int		3238166	0					
ANR	3238425	Identifier	idx		3238166	1					
ANR	3238426	IdentifierDecl	jdx		3238166	1					
ANR	3238427	IdentifierDeclType	int		3238166	0					
ANR	3238428	Identifier	jdx		3238166	1					
ANR	3238429	IdentifierDeclStatement	int strip_blocks = ( image -> extended_width ) / 16 ;	2537:4:85981:86026	3238166	4	True				
ANR	3238430	IdentifierDecl	strip_blocks = ( image -> extended_width ) / 16		3238166	0					
ANR	3238431	IdentifierDeclType	int		3238166	0					
ANR	3238432	Identifier	strip_blocks		3238166	1					
ANR	3238433	AssignmentExpression	strip_blocks = ( image -> extended_width ) / 16		3238166	2		=			
ANR	3238434	Identifier	strip_blocks		3238166	0					
ANR	3238435	MultiplicativeExpression	( image -> extended_width ) / 16		3238166	1		/			
ANR	3238436	PtrMemberAccess	image -> extended_width		3238166	0					
ANR	3238437	Identifier	image		3238166	0					
ANR	3238438	Identifier	extended_width		3238166	1					
ANR	3238439	PrimaryExpression	16		3238166	1					
ANR	3238440	IdentifierDeclStatement	int dy = 16 * con -> ncomp * strip_blocks ;	2538:4:86032:86067	3238166	5	True				
ANR	3238441	IdentifierDecl	dy = 16 * con -> ncomp * strip_blocks		3238166	0					
ANR	3238442	IdentifierDeclType	int		3238166	0					
ANR	3238443	Identifier	dy		3238166	1					
ANR	3238444	AssignmentExpression	dy = 16 * con -> ncomp * strip_blocks		3238166	2		=			
ANR	3238445	Identifier	dy		3238166	0					
ANR	3238446	MultiplicativeExpression	16 * con -> ncomp * strip_blocks		3238166	1		*			
ANR	3238447	PrimaryExpression	16		3238166	0					
ANR	3238448	MultiplicativeExpression	con -> ncomp * strip_blocks		3238166	1		*			
ANR	3238449	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3238450	Identifier	con		3238166	0					
ANR	3238451	Identifier	ncomp		3238166	1					
ANR	3238452	Identifier	strip_blocks		3238166	1					
ANR	3238453	IfStatement	if ( con -> padBytes != 0 )		3238166	6					
ANR	3238454	Condition	con -> padBytes != 0	2539:7:86076:86092	3238166	0	True				
ANR	3238455	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3238456	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238457	Identifier	con		3238166	0					
ANR	3238458	Identifier	padBytes		3238166	1					
ANR	3238459	PrimaryExpression	0		3238166	1					
ANR	3238460	ExpressionStatement	dy = dy + 16 * strip_blocks	2540:8:86103:86126	3238166	1	True				
ANR	3238461	AssignmentExpression	dy = dy + 16 * strip_blocks		3238166	0		=			
ANR	3238462	Identifier	dy		3238166	0					
ANR	3238463	AdditiveExpression	dy + 16 * strip_blocks		3238166	1		+			
ANR	3238464	Identifier	dy		3238166	0					
ANR	3238465	MultiplicativeExpression	16 * strip_blocks		3238166	1		*			
ANR	3238466	PrimaryExpression	16		3238166	0					
ANR	3238467	Identifier	strip_blocks		3238166	1					
ANR	3238468	IfStatement	if ( con -> bpi == 1 || con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8 )		3238166	7					
ANR	3238469	Condition	con -> bpi == 1 || con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8	2541:8:86136:86199	3238166	0	True				
ANR	3238470	OrExpression	con -> bpi == 1 || con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8		3238166	0		||			
ANR	3238471	EqualityExpression	con -> bpi == 1		3238166	0		==			
ANR	3238472	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238473	Identifier	con		3238166	0					
ANR	3238474	Identifier	bpi		3238166	1					
ANR	3238475	PrimaryExpression	1		3238166	1					
ANR	3238476	OrExpression	con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8		3238166	1		||			
ANR	3238477	EqualityExpression	con -> bpi == 5		3238166	0		==			
ANR	3238478	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238479	Identifier	con		3238166	0					
ANR	3238480	Identifier	bpi		3238166	1					
ANR	3238481	PrimaryExpression	5		3238166	1					
ANR	3238482	OrExpression	con -> bpi == 6 || con -> bpi == 8		3238166	1		||			
ANR	3238483	EqualityExpression	con -> bpi == 6		3238166	0		==			
ANR	3238484	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238485	Identifier	con		3238166	0					
ANR	3238486	Identifier	bpi		3238166	1					
ANR	3238487	PrimaryExpression	6		3238166	1					
ANR	3238488	EqualityExpression	con -> bpi == 8		3238166	1		==			
ANR	3238489	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238490	Identifier	con		3238166	0					
ANR	3238491	Identifier	bpi		3238166	1					
ANR	3238492	PrimaryExpression	8		3238166	1					
ANR	3238493	CompoundStatement		51:8:1679:1730	3238166	1					
ANR	3238494	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + 16 * con -> ncomp * mx ;	2542:8:86212:86263	3238166	0	True				
ANR	3238495	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	0					
ANR	3238496	IdentifierDeclType	uint8_t *		3238166	0					
ANR	3238497	Identifier	dp		3238166	1					
ANR	3238498	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	2		=			
ANR	3238499	Identifier	dp		3238166	0					
ANR	3238500	AdditiveExpression	( uint8_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	1		+			
ANR	3238501	CastExpression	( uint8_t * ) con -> buf		3238166	0					
ANR	3238502	CastTarget	uint8_t *		3238166	0					
ANR	3238503	PtrMemberAccess	con -> buf		3238166	1					
ANR	3238504	Identifier	con		3238166	0					
ANR	3238505	Identifier	buf		3238166	1					
ANR	3238506	MultiplicativeExpression	16 * con -> ncomp * mx		3238166	1		*			
ANR	3238507	PrimaryExpression	16		3238166	0					
ANR	3238508	MultiplicativeExpression	con -> ncomp * mx		3238166	1		*			
ANR	3238509	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3238510	Identifier	con		3238166	0					
ANR	3238511	Identifier	ncomp		3238166	1					
ANR	3238512	Identifier	mx		3238166	1					
ANR	3238513	IfStatement	if ( con -> padBytes != 0 )		3238166	1					
ANR	3238514	Condition	con -> padBytes != 0	2543:11:86276:86293	3238166	0	True				
ANR	3238515	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3238516	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238517	Identifier	con		3238166	0					
ANR	3238518	Identifier	padBytes		3238166	1					
ANR	3238519	PrimaryExpression	0		3238166	1					
ANR	3238520	CompoundStatement		53:8:1771:1771	3238166	1					
ANR	3238521	ExpressionStatement	dp = dp + 16 * mx	2545:12:86318:86333	3238166	0	True				
ANR	3238522	AssignmentExpression	dp = dp + 16 * mx		3238166	0		=			
ANR	3238523	Identifier	dp		3238166	0					
ANR	3238524	AdditiveExpression	dp + 16 * mx		3238166	1		+			
ANR	3238525	Identifier	dp		3238166	0					
ANR	3238526	MultiplicativeExpression	16 * mx		3238166	1		*			
ANR	3238527	PrimaryExpression	16		3238166	0					
ANR	3238528	Identifier	mx		3238166	1					
ANR	3238529	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3238166	2					
ANR	3238530	ForInit	idx = 0 ;	2547:13:86391:86398	3238166	0	True				
ANR	3238531	AssignmentExpression	idx = 0		3238166	0		=			
ANR	3238532	Identifier	idx		3238166	0					
ANR	3238533	PrimaryExpression	0		3238166	1					
ANR	3238534	Condition	idx < 256	2547:22:86400:86408	3238166	1	True				
ANR	3238535	RelationalExpression	idx < 256		3238166	0		<			
ANR	3238536	Identifier	idx		3238166	0					
ANR	3238537	PrimaryExpression	256		3238166	1					
ANR	3238538	AssignmentExpression	idx += 1	2547:33:86411:86418	3238166	2	True	+=			
ANR	3238539	Identifier	idx		3238166	0					
ANR	3238540	PrimaryExpression	1		3238166	1					
ANR	3238541	CompoundStatement		61:12:2059:2065	3238166	3					
ANR	3238542	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp ;	2548:12:86435:86478	3238166	0	True				
ANR	3238543	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	0					
ANR	3238544	IdentifierDeclType	int		3238166	0					
ANR	3238545	Identifier	dix		3238166	1					
ANR	3238546	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	2		=			
ANR	3238547	Identifier	dix		3238166	0					
ANR	3238548	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	1		+			
ANR	3238549	MultiplicativeExpression	( idx / 16 ) * dy		3238166	0		*			
ANR	3238550	MultiplicativeExpression	idx / 16		3238166	0		/			
ANR	3238551	Identifier	idx		3238166	0					
ANR	3238552	PrimaryExpression	16		3238166	1					
ANR	3238553	Identifier	dy		3238166	1					
ANR	3238554	MultiplicativeExpression	( idx % 16 ) * con -> ncomp		3238166	1		*			
ANR	3238555	MultiplicativeExpression	idx % 16		3238166	0		%			
ANR	3238556	Identifier	idx		3238166	0					
ANR	3238557	PrimaryExpression	16		3238166	1					
ANR	3238558	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238559	Identifier	con		3238166	0					
ANR	3238560	Identifier	ncomp		3238166	1					
ANR	3238561	IfStatement	if ( con -> padBytes )		3238166	1					
ANR	3238562	Condition	con -> padBytes	2549:15:86495:86507	3238166	0	True				
ANR	3238563	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238564	Identifier	con		3238166	0					
ANR	3238565	Identifier	padBytes		3238166	1					
ANR	3238566	ExpressionStatement	dix += ( idx % 16 )	2550:16:86526:86540	3238166	1	True				
ANR	3238567	AssignmentExpression	dix += ( idx % 16 )		3238166	0		+=			
ANR	3238568	Identifier	dix		3238166	0					
ANR	3238569	MultiplicativeExpression	idx % 16		3238166	1		%			
ANR	3238570	Identifier	idx		3238166	0					
ANR	3238571	PrimaryExpression	16		3238166	1					
ANR	3238572	IdentifierDeclStatement	int six = idx * con -> ncomp ;	2551:12:86554:86578	3238166	2	True				
ANR	3238573	IdentifierDecl	six = idx * con -> ncomp		3238166	0					
ANR	3238574	IdentifierDeclType	int		3238166	0					
ANR	3238575	Identifier	six		3238166	1					
ANR	3238576	AssignmentExpression	six = idx * con -> ncomp		3238166	2		=			
ANR	3238577	Identifier	six		3238166	0					
ANR	3238578	MultiplicativeExpression	idx * con -> ncomp		3238166	1		*			
ANR	3238579	Identifier	idx		3238166	0					
ANR	3238580	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238581	Identifier	con		3238166	0					
ANR	3238582	Identifier	ncomp		3238166	1					
ANR	3238583	IdentifierDeclStatement	int pl ;	2552:12:86592:86598	3238166	3	True				
ANR	3238584	IdentifierDecl	pl		3238166	0					
ANR	3238585	IdentifierDeclType	int		3238166	0					
ANR	3238586	Identifier	pl		3238166	1					
ANR	3238587	ForStatement	for ( pl = 0 ; pl < con -> ncomp ; pl += 1 )		3238166	4					
ANR	3238588	ForInit	pl = 0 ;	2553:17:86617:86624	3238166	0	True				
ANR	3238589	AssignmentExpression	pl = 0		3238166	0		=			
ANR	3238590	Identifier	pl		3238166	0					
ANR	3238591	PrimaryExpression	0		3238166	1					
ANR	3238592	Condition	pl < con -> ncomp	2553:26:86626:86640	3238166	1	True				
ANR	3238593	RelationalExpression	pl < con -> ncomp		3238166	0		<			
ANR	3238594	Identifier	pl		3238166	0					
ANR	3238595	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238596	Identifier	con		3238166	0					
ANR	3238597	Identifier	ncomp		3238166	1					
ANR	3238598	AssignmentExpression	pl += 1	2553:44:86644:86650	3238166	2	True	+=			
ANR	3238599	Identifier	pl		3238166	0					
ANR	3238600	PrimaryExpression	1		3238166	1					
ANR	3238601	ExpressionStatement	dp [ dix + pl ] = data [ six + pl ]	2554:16:86669:86698	3238166	3	True				
ANR	3238602	AssignmentExpression	dp [ dix + pl ] = data [ six + pl ]		3238166	0		=			
ANR	3238603	ArrayIndexing	dp [ dix + pl ]		3238166	0					
ANR	3238604	Identifier	dp		3238166	0					
ANR	3238605	AdditiveExpression	dix + pl		3238166	1		+			
ANR	3238606	Identifier	dix		3238166	0					
ANR	3238607	Identifier	pl		3238166	1					
ANR	3238608	ArrayIndexing	data [ six + pl ]		3238166	1					
ANR	3238609	Identifier	data		3238166	0					
ANR	3238610	AdditiveExpression	six + pl		3238166	1		+			
ANR	3238611	Identifier	six		3238166	0					
ANR	3238612	Identifier	pl		3238166	1					
ANR	3238613	IfStatement	if ( con -> padBytes != 0 )		3238166	5					
ANR	3238614	Condition	con -> padBytes != 0	2555:15:86715:86732	3238166	0	True				
ANR	3238615	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3238616	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238617	Identifier	con		3238166	0					
ANR	3238618	Identifier	padBytes		3238166	1					
ANR	3238619	PrimaryExpression	0		3238166	1					
ANR	3238620	ExpressionStatement	dp [ dix + pl ] = 0	2556:16:86751:86767	3238166	1	True				
ANR	3238621	AssignmentExpression	dp [ dix + pl ] = 0		3238166	0		=			
ANR	3238622	ArrayIndexing	dp [ dix + pl ]		3238166	0					
ANR	3238623	Identifier	dp		3238166	0					
ANR	3238624	AdditiveExpression	dix + pl		3238166	1		+			
ANR	3238625	Identifier	dix		3238166	0					
ANR	3238626	Identifier	pl		3238166	1					
ANR	3238627	PrimaryExpression	0		3238166	1					
ANR	3238628	IfStatement	if ( con -> isBgr )		3238166	6					
ANR	3238629	Condition	con -> isBgr	2557:15:86824:86833	3238166	0	True				
ANR	3238630	PtrMemberAccess	con -> isBgr		3238166	0					
ANR	3238631	Identifier	con		3238166	0					
ANR	3238632	Identifier	isBgr		3238166	1					
ANR	3238633	ExpressionStatement	"switch_r_b ( dp + dix , con -> bpi )"	2558:16:86864:86892	3238166	1	True				
ANR	3238634	CallExpression	"switch_r_b ( dp + dix , con -> bpi )"		3238166	0					
ANR	3238635	Callee	switch_r_b		3238166	0					
ANR	3238636	Identifier	switch_r_b		3238166	0					
ANR	3238637	ArgumentList	dp + dix		3238166	1					
ANR	3238638	Argument	dp + dix		3238166	0					
ANR	3238639	AdditiveExpression	dp + dix		3238166	0		+			
ANR	3238640	Identifier	dp		3238166	0					
ANR	3238641	Identifier	dix		3238166	1					
ANR	3238642	Argument	con -> bpi		3238166	1					
ANR	3238643	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238644	Identifier	con		3238166	0					
ANR	3238645	Identifier	bpi		3238166	1					
ANR	3238646	ElseStatement	else		3238166	0					
ANR	3238647	IfStatement	if ( con -> bpi == 10 || con -> bpi == 16 )		3238166	0					
ANR	3238648	Condition	con -> bpi == 10 || con -> bpi == 16	2561:12:86938:86969	3238166	0	True				
ANR	3238649	OrExpression	con -> bpi == 10 || con -> bpi == 16		3238166	0		||			
ANR	3238650	EqualityExpression	con -> bpi == 10		3238166	0		==			
ANR	3238651	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238652	Identifier	con		3238166	0					
ANR	3238653	Identifier	bpi		3238166	1					
ANR	3238654	PrimaryExpression	10		3238166	1					
ANR	3238655	EqualityExpression	con -> bpi == 16		3238166	1		==			
ANR	3238656	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238657	Identifier	con		3238166	0					
ANR	3238658	Identifier	bpi		3238166	1					
ANR	3238659	PrimaryExpression	16		3238166	1					
ANR	3238660	CompoundStatement		71:8:2448:2501	3238166	1					
ANR	3238661	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + 16 * con -> ncomp * mx ;	2562:8:86981:87034	3238166	0	True				
ANR	3238662	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	0					
ANR	3238663	IdentifierDeclType	uint16_t *		3238166	0					
ANR	3238664	Identifier	dp		3238166	1					
ANR	3238665	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	2		=			
ANR	3238666	Identifier	dp		3238166	0					
ANR	3238667	AdditiveExpression	( uint16_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	1		+			
ANR	3238668	CastExpression	( uint16_t * ) con -> buf		3238166	0					
ANR	3238669	CastTarget	uint16_t *		3238166	0					
ANR	3238670	PtrMemberAccess	con -> buf		3238166	1					
ANR	3238671	Identifier	con		3238166	0					
ANR	3238672	Identifier	buf		3238166	1					
ANR	3238673	MultiplicativeExpression	16 * con -> ncomp * mx		3238166	1		*			
ANR	3238674	PrimaryExpression	16		3238166	0					
ANR	3238675	MultiplicativeExpression	con -> ncomp * mx		3238166	1		*			
ANR	3238676	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3238677	Identifier	con		3238166	0					
ANR	3238678	Identifier	ncomp		3238166	1					
ANR	3238679	Identifier	mx		3238166	1					
ANR	3238680	IfStatement	if ( con -> padBytes != 0 )		3238166	1					
ANR	3238681	Condition	con -> padBytes != 0	2563:11:87047:87064	3238166	0	True				
ANR	3238682	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3238683	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238684	Identifier	con		3238166	0					
ANR	3238685	Identifier	padBytes		3238166	1					
ANR	3238686	PrimaryExpression	0		3238166	1					
ANR	3238687	CompoundStatement		73:8:2542:2542	3238166	1					
ANR	3238688	ExpressionStatement	dp = dp + 16 * mx	2565:12:87089:87104	3238166	0	True				
ANR	3238689	AssignmentExpression	dp = dp + 16 * mx		3238166	0		=			
ANR	3238690	Identifier	dp		3238166	0					
ANR	3238691	AdditiveExpression	dp + 16 * mx		3238166	1		+			
ANR	3238692	Identifier	dp		3238166	0					
ANR	3238693	MultiplicativeExpression	16 * mx		3238166	1		*			
ANR	3238694	PrimaryExpression	16		3238166	0					
ANR	3238695	Identifier	mx		3238166	1					
ANR	3238696	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3238166	2					
ANR	3238697	ForInit	idx = 0 ;	2568:13:87163:87170	3238166	0	True				
ANR	3238698	AssignmentExpression	idx = 0		3238166	0		=			
ANR	3238699	Identifier	idx		3238166	0					
ANR	3238700	PrimaryExpression	0		3238166	1					
ANR	3238701	Condition	idx < 256	2568:22:87172:87180	3238166	1	True				
ANR	3238702	RelationalExpression	idx < 256		3238166	0		<			
ANR	3238703	Identifier	idx		3238166	0					
ANR	3238704	PrimaryExpression	256		3238166	1					
ANR	3238705	AssignmentExpression	idx += 1	2568:33:87183:87190	3238166	2	True	+=			
ANR	3238706	Identifier	idx		3238166	0					
ANR	3238707	PrimaryExpression	1		3238166	1					
ANR	3238708	CompoundStatement		82:12:2831:2837	3238166	3					
ANR	3238709	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp ;	2569:12:87207:87250	3238166	0	True				
ANR	3238710	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	0					
ANR	3238711	IdentifierDeclType	int		3238166	0					
ANR	3238712	Identifier	dix		3238166	1					
ANR	3238713	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	2		=			
ANR	3238714	Identifier	dix		3238166	0					
ANR	3238715	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	1		+			
ANR	3238716	MultiplicativeExpression	( idx / 16 ) * dy		3238166	0		*			
ANR	3238717	MultiplicativeExpression	idx / 16		3238166	0		/			
ANR	3238718	Identifier	idx		3238166	0					
ANR	3238719	PrimaryExpression	16		3238166	1					
ANR	3238720	Identifier	dy		3238166	1					
ANR	3238721	MultiplicativeExpression	( idx % 16 ) * con -> ncomp		3238166	1		*			
ANR	3238722	MultiplicativeExpression	idx % 16		3238166	0		%			
ANR	3238723	Identifier	idx		3238166	0					
ANR	3238724	PrimaryExpression	16		3238166	1					
ANR	3238725	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238726	Identifier	con		3238166	0					
ANR	3238727	Identifier	ncomp		3238166	1					
ANR	3238728	IfStatement	if ( con -> padBytes )		3238166	1					
ANR	3238729	Condition	con -> padBytes	2570:15:87267:87279	3238166	0	True				
ANR	3238730	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238731	Identifier	con		3238166	0					
ANR	3238732	Identifier	padBytes		3238166	1					
ANR	3238733	ExpressionStatement	dix += ( idx % 16 )	2571:16:87298:87312	3238166	1	True				
ANR	3238734	AssignmentExpression	dix += ( idx % 16 )		3238166	0		+=			
ANR	3238735	Identifier	dix		3238166	0					
ANR	3238736	MultiplicativeExpression	idx % 16		3238166	1		%			
ANR	3238737	Identifier	idx		3238166	0					
ANR	3238738	PrimaryExpression	16		3238166	1					
ANR	3238739	IdentifierDeclStatement	int six = idx * con -> ncomp ;	2572:12:87326:87350	3238166	2	True				
ANR	3238740	IdentifierDecl	six = idx * con -> ncomp		3238166	0					
ANR	3238741	IdentifierDeclType	int		3238166	0					
ANR	3238742	Identifier	six		3238166	1					
ANR	3238743	AssignmentExpression	six = idx * con -> ncomp		3238166	2		=			
ANR	3238744	Identifier	six		3238166	0					
ANR	3238745	MultiplicativeExpression	idx * con -> ncomp		3238166	1		*			
ANR	3238746	Identifier	idx		3238166	0					
ANR	3238747	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238748	Identifier	con		3238166	0					
ANR	3238749	Identifier	ncomp		3238166	1					
ANR	3238750	IdentifierDeclStatement	int pl ;	2573:12:87364:87370	3238166	3	True				
ANR	3238751	IdentifierDecl	pl		3238166	0					
ANR	3238752	IdentifierDeclType	int		3238166	0					
ANR	3238753	Identifier	pl		3238166	1					
ANR	3238754	ForStatement	for ( pl = 0 ; pl < con -> ncomp ; pl += 1 )		3238166	4					
ANR	3238755	ForInit	pl = 0 ;	2574:17:87401:87408	3238166	0	True				
ANR	3238756	AssignmentExpression	pl = 0		3238166	0		=			
ANR	3238757	Identifier	pl		3238166	0					
ANR	3238758	PrimaryExpression	0		3238166	1					
ANR	3238759	Condition	pl < con -> ncomp	2574:26:87410:87424	3238166	1	True				
ANR	3238760	RelationalExpression	pl < con -> ncomp		3238166	0		<			
ANR	3238761	Identifier	pl		3238166	0					
ANR	3238762	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238763	Identifier	con		3238166	0					
ANR	3238764	Identifier	ncomp		3238166	1					
ANR	3238765	AssignmentExpression	pl += 1	2574:44:87428:87434	3238166	2	True	+=			
ANR	3238766	Identifier	pl		3238166	0					
ANR	3238767	PrimaryExpression	1		3238166	1					
ANR	3238768	ExpressionStatement	dp [ dix + pl ] = data [ six + pl ]	2575:16:87453:87482	3238166	3	True				
ANR	3238769	AssignmentExpression	dp [ dix + pl ] = data [ six + pl ]		3238166	0		=			
ANR	3238770	ArrayIndexing	dp [ dix + pl ]		3238166	0					
ANR	3238771	Identifier	dp		3238166	0					
ANR	3238772	AdditiveExpression	dix + pl		3238166	1		+			
ANR	3238773	Identifier	dix		3238166	0					
ANR	3238774	Identifier	pl		3238166	1					
ANR	3238775	ArrayIndexing	data [ six + pl ]		3238166	1					
ANR	3238776	Identifier	data		3238166	0					
ANR	3238777	AdditiveExpression	six + pl		3238166	1		+			
ANR	3238778	Identifier	six		3238166	0					
ANR	3238779	Identifier	pl		3238166	1					
ANR	3238780	IfStatement	if ( con -> padBytes != 0 )		3238166	5					
ANR	3238781	Condition	con -> padBytes != 0	2576:15:87499:87516	3238166	0	True				
ANR	3238782	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3238783	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238784	Identifier	con		3238166	0					
ANR	3238785	Identifier	padBytes		3238166	1					
ANR	3238786	PrimaryExpression	0		3238166	1					
ANR	3238787	ExpressionStatement	dp [ dix + pl ] = 0	2577:16:87535:87551	3238166	1	True				
ANR	3238788	AssignmentExpression	dp [ dix + pl ] = 0		3238166	0		=			
ANR	3238789	ArrayIndexing	dp [ dix + pl ]		3238166	0					
ANR	3238790	Identifier	dp		3238166	0					
ANR	3238791	AdditiveExpression	dix + pl		3238166	1		+			
ANR	3238792	Identifier	dix		3238166	0					
ANR	3238793	Identifier	pl		3238166	1					
ANR	3238794	PrimaryExpression	0		3238166	1					
ANR	3238795	IfStatement	if ( con -> isBgr )		3238166	6					
ANR	3238796	Condition	con -> isBgr	2578:15:87608:87617	3238166	0	True				
ANR	3238797	PtrMemberAccess	con -> isBgr		3238166	0					
ANR	3238798	Identifier	con		3238166	0					
ANR	3238799	Identifier	isBgr		3238166	1					
ANR	3238800	ExpressionStatement	"switch_r_b ( dp + dix , con -> bpi )"	2579:16:87648:87678	3238166	1	True				
ANR	3238801	CallExpression	"switch_r_b ( dp + dix , con -> bpi )"		3238166	0					
ANR	3238802	Callee	switch_r_b		3238166	0					
ANR	3238803	Identifier	switch_r_b		3238166	0					
ANR	3238804	ArgumentList	dp + dix		3238166	1					
ANR	3238805	Argument	dp + dix		3238166	0					
ANR	3238806	AdditiveExpression	dp + dix		3238166	0		+			
ANR	3238807	Identifier	dp		3238166	0					
ANR	3238808	Identifier	dix		3238166	1					
ANR	3238809	Argument	con -> bpi		3238166	1					
ANR	3238810	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238811	Identifier	con		3238166	0					
ANR	3238812	Identifier	bpi		3238166	1					
ANR	3238813	ElseStatement	else		3238166	0					
ANR	3238814	IfStatement	if ( con -> bpi == 32 )		3238166	0					
ANR	3238815	Condition	con -> bpi == 32	2582:12:87720:87732	3238166	0	True				
ANR	3238816	EqualityExpression	con -> bpi == 32		3238166	0		==			
ANR	3238817	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238818	Identifier	con		3238166	0					
ANR	3238819	Identifier	bpi		3238166	1					
ANR	3238820	PrimaryExpression	32		3238166	1					
ANR	3238821	CompoundStatement		92:8:3212:3265	3238166	1					
ANR	3238822	IdentifierDeclStatement	uint32_t * dp = ( uint32_t * ) con -> buf + 16 * con -> ncomp * mx ;	2583:8:87745:87798	3238166	0	True				
ANR	3238823	IdentifierDecl	* dp = ( uint32_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	0					
ANR	3238824	IdentifierDeclType	uint32_t *		3238166	0					
ANR	3238825	Identifier	dp		3238166	1					
ANR	3238826	AssignmentExpression	* dp = ( uint32_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	2		=			
ANR	3238827	Identifier	dp		3238166	0					
ANR	3238828	AdditiveExpression	( uint32_t * ) con -> buf + 16 * con -> ncomp * mx		3238166	1		+			
ANR	3238829	CastExpression	( uint32_t * ) con -> buf		3238166	0					
ANR	3238830	CastTarget	uint32_t *		3238166	0					
ANR	3238831	PtrMemberAccess	con -> buf		3238166	1					
ANR	3238832	Identifier	con		3238166	0					
ANR	3238833	Identifier	buf		3238166	1					
ANR	3238834	MultiplicativeExpression	16 * con -> ncomp * mx		3238166	1		*			
ANR	3238835	PrimaryExpression	16		3238166	0					
ANR	3238836	MultiplicativeExpression	con -> ncomp * mx		3238166	1		*			
ANR	3238837	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3238838	Identifier	con		3238166	0					
ANR	3238839	Identifier	ncomp		3238166	1					
ANR	3238840	Identifier	mx		3238166	1					
ANR	3238841	IfStatement	if ( con -> padBytes != 0 )		3238166	1					
ANR	3238842	Condition	con -> padBytes != 0	2584:11:87811:87828	3238166	0	True				
ANR	3238843	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3238844	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238845	Identifier	con		3238166	0					
ANR	3238846	Identifier	padBytes		3238166	1					
ANR	3238847	PrimaryExpression	0		3238166	1					
ANR	3238848	CompoundStatement		94:8:3306:3306	3238166	1					
ANR	3238849	ExpressionStatement	dp = dp + 16 * mx	2586:12:87853:87868	3238166	0	True				
ANR	3238850	AssignmentExpression	dp = dp + 16 * mx		3238166	0		=			
ANR	3238851	Identifier	dp		3238166	0					
ANR	3238852	AdditiveExpression	dp + 16 * mx		3238166	1		+			
ANR	3238853	Identifier	dp		3238166	0					
ANR	3238854	MultiplicativeExpression	16 * mx		3238166	1		*			
ANR	3238855	PrimaryExpression	16		3238166	0					
ANR	3238856	Identifier	mx		3238166	1					
ANR	3238857	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		3238166	2					
ANR	3238858	ForInit	idx = 0 ;	2588:13:87926:87933	3238166	0	True				
ANR	3238859	AssignmentExpression	idx = 0		3238166	0		=			
ANR	3238860	Identifier	idx		3238166	0					
ANR	3238861	PrimaryExpression	0		3238166	1					
ANR	3238862	Condition	idx < 256	2588:22:87935:87943	3238166	1	True				
ANR	3238863	RelationalExpression	idx < 256		3238166	0		<			
ANR	3238864	Identifier	idx		3238166	0					
ANR	3238865	PrimaryExpression	256		3238166	1					
ANR	3238866	AssignmentExpression	idx += 1	2588:33:87946:87953	3238166	2	True	+=			
ANR	3238867	Identifier	idx		3238166	0					
ANR	3238868	PrimaryExpression	1		3238166	1					
ANR	3238869	CompoundStatement		102:12:3594:3600	3238166	3					
ANR	3238870	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp ;	2589:12:87970:88013	3238166	0	True				
ANR	3238871	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	0					
ANR	3238872	IdentifierDeclType	int		3238166	0					
ANR	3238873	Identifier	dix		3238166	1					
ANR	3238874	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	2		=			
ANR	3238875	Identifier	dix		3238166	0					
ANR	3238876	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		3238166	1		+			
ANR	3238877	MultiplicativeExpression	( idx / 16 ) * dy		3238166	0		*			
ANR	3238878	MultiplicativeExpression	idx / 16		3238166	0		/			
ANR	3238879	Identifier	idx		3238166	0					
ANR	3238880	PrimaryExpression	16		3238166	1					
ANR	3238881	Identifier	dy		3238166	1					
ANR	3238882	MultiplicativeExpression	( idx % 16 ) * con -> ncomp		3238166	1		*			
ANR	3238883	MultiplicativeExpression	idx % 16		3238166	0		%			
ANR	3238884	Identifier	idx		3238166	0					
ANR	3238885	PrimaryExpression	16		3238166	1					
ANR	3238886	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238887	Identifier	con		3238166	0					
ANR	3238888	Identifier	ncomp		3238166	1					
ANR	3238889	IfStatement	if ( con -> padBytes )		3238166	1					
ANR	3238890	Condition	con -> padBytes	2590:15:88030:88042	3238166	0	True				
ANR	3238891	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238892	Identifier	con		3238166	0					
ANR	3238893	Identifier	padBytes		3238166	1					
ANR	3238894	ExpressionStatement	dix += ( idx % 16 )	2591:16:88061:88075	3238166	1	True				
ANR	3238895	AssignmentExpression	dix += ( idx % 16 )		3238166	0		+=			
ANR	3238896	Identifier	dix		3238166	0					
ANR	3238897	MultiplicativeExpression	idx % 16		3238166	1		%			
ANR	3238898	Identifier	idx		3238166	0					
ANR	3238899	PrimaryExpression	16		3238166	1					
ANR	3238900	IdentifierDeclStatement	int six = idx * con -> ncomp ;	2592:12:88089:88113	3238166	2	True				
ANR	3238901	IdentifierDecl	six = idx * con -> ncomp		3238166	0					
ANR	3238902	IdentifierDeclType	int		3238166	0					
ANR	3238903	Identifier	six		3238166	1					
ANR	3238904	AssignmentExpression	six = idx * con -> ncomp		3238166	2		=			
ANR	3238905	Identifier	six		3238166	0					
ANR	3238906	MultiplicativeExpression	idx * con -> ncomp		3238166	1		*			
ANR	3238907	Identifier	idx		3238166	0					
ANR	3238908	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238909	Identifier	con		3238166	0					
ANR	3238910	Identifier	ncomp		3238166	1					
ANR	3238911	IdentifierDeclStatement	int pl ;	2593:12:88127:88133	3238166	3	True				
ANR	3238912	IdentifierDecl	pl		3238166	0					
ANR	3238913	IdentifierDeclType	int		3238166	0					
ANR	3238914	Identifier	pl		3238166	1					
ANR	3238915	ForStatement	for ( pl = 0 ; pl < con -> ncomp ; pl += 1 )		3238166	4					
ANR	3238916	ForInit	pl = 0 ;	2594:17:88152:88159	3238166	0	True				
ANR	3238917	AssignmentExpression	pl = 0		3238166	0		=			
ANR	3238918	Identifier	pl		3238166	0					
ANR	3238919	PrimaryExpression	0		3238166	1					
ANR	3238920	Condition	pl < con -> ncomp	2594:26:88161:88175	3238166	1	True				
ANR	3238921	RelationalExpression	pl < con -> ncomp		3238166	0		<			
ANR	3238922	Identifier	pl		3238166	0					
ANR	3238923	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3238924	Identifier	con		3238166	0					
ANR	3238925	Identifier	ncomp		3238166	1					
ANR	3238926	AssignmentExpression	pl += 1	2594:44:88179:88185	3238166	2	True	+=			
ANR	3238927	Identifier	pl		3238166	0					
ANR	3238928	PrimaryExpression	1		3238166	1					
ANR	3238929	ExpressionStatement	dp [ dix + pl ] = data [ six + pl ]	2595:16:88204:88233	3238166	3	True				
ANR	3238930	AssignmentExpression	dp [ dix + pl ] = data [ six + pl ]		3238166	0		=			
ANR	3238931	ArrayIndexing	dp [ dix + pl ]		3238166	0					
ANR	3238932	Identifier	dp		3238166	0					
ANR	3238933	AdditiveExpression	dix + pl		3238166	1		+			
ANR	3238934	Identifier	dix		3238166	0					
ANR	3238935	Identifier	pl		3238166	1					
ANR	3238936	ArrayIndexing	data [ six + pl ]		3238166	1					
ANR	3238937	Identifier	data		3238166	0					
ANR	3238938	AdditiveExpression	six + pl		3238166	1		+			
ANR	3238939	Identifier	six		3238166	0					
ANR	3238940	Identifier	pl		3238166	1					
ANR	3238941	IfStatement	if ( con -> padBytes != 0 )		3238166	5					
ANR	3238942	Condition	con -> padBytes != 0	2596:15:88250:88267	3238166	0	True				
ANR	3238943	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3238944	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3238945	Identifier	con		3238166	0					
ANR	3238946	Identifier	padBytes		3238166	1					
ANR	3238947	PrimaryExpression	0		3238166	1					
ANR	3238948	ExpressionStatement	dp [ dix + pl ] = 0	2597:16:88286:88302	3238166	1	True				
ANR	3238949	AssignmentExpression	dp [ dix + pl ] = 0		3238166	0		=			
ANR	3238950	ArrayIndexing	dp [ dix + pl ]		3238166	0					
ANR	3238951	Identifier	dp		3238166	0					
ANR	3238952	AdditiveExpression	dix + pl		3238166	1		+			
ANR	3238953	Identifier	dix		3238166	0					
ANR	3238954	Identifier	pl		3238166	1					
ANR	3238955	PrimaryExpression	0		3238166	1					
ANR	3238956	IfStatement	if ( con -> isBgr )		3238166	6					
ANR	3238957	Condition	con -> isBgr	2598:15:88359:88368	3238166	0	True				
ANR	3238958	PtrMemberAccess	con -> isBgr		3238166	0					
ANR	3238959	Identifier	con		3238166	0					
ANR	3238960	Identifier	isBgr		3238166	1					
ANR	3238961	ExpressionStatement	"switch_r_b ( dp + dix , con -> bpi )"	2599:16:88399:88430	3238166	1	True				
ANR	3238962	CallExpression	"switch_r_b ( dp + dix , con -> bpi )"		3238166	0					
ANR	3238963	Callee	switch_r_b		3238166	0					
ANR	3238964	Identifier	switch_r_b		3238166	0					
ANR	3238965	ArgumentList	dp + dix		3238166	1					
ANR	3238966	Argument	dp + dix		3238166	0					
ANR	3238967	AdditiveExpression	dp + dix		3238166	0		+			
ANR	3238968	Identifier	dp		3238166	0					
ANR	3238969	Identifier	dix		3238166	1					
ANR	3238970	Argument	con -> bpi		3238166	1					
ANR	3238971	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3238972	Identifier	con		3238166	0					
ANR	3238973	Identifier	bpi		3238166	1					
ANR	3238974	ElseStatement	else		3238166	0					
ANR	3238975	CompoundStatement		112:4:3928:3928	3238166	0					
ANR	3238976	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2604:8:88471:88504	3238166	0	True				
ANR	3238977	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3238166	0					
ANR	3238978	Callee	assert		3238166	0					
ANR	3238979	Identifier	assert		3238166	0					
ANR	3238980	ArgumentList	"! ""Unsupported bitdepth\\n"""		3238166	1					
ANR	3238981	Argument	"! ""Unsupported bitdepth\\n"""		3238166	0					
ANR	3238982	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3238166	0					
ANR	3238983	UnaryOperator	!		3238166	0					
ANR	3238984	PrimaryExpression	"""Unsupported bitdepth\\n"""		3238166	1					
ANR	3238985	IfStatement	if ( mx + 1 == strip_blocks )		3238166	8					
ANR	3238986	Condition	mx + 1 == strip_blocks	2607:8:88521:88540	3238166	0	True				
ANR	3238987	EqualityExpression	mx + 1 == strip_blocks		3238166	0		==			
ANR	3238988	AdditiveExpression	mx + 1		3238166	0		+			
ANR	3238989	Identifier	mx		3238166	0					
ANR	3238990	PrimaryExpression	1		3238166	1					
ANR	3238991	Identifier	strip_blocks		3238166	1					
ANR	3238992	CompoundStatement		119:8:4170:4258	3238166	1					
ANR	3238993	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining ;	2608:8:88553:88624	3238166	0	True				
ANR	3238994	IdentifierDecl	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3238166	0					
ANR	3238995	IdentifierDeclType	int		3238166	0					
ANR	3238996	Identifier	first		3238166	1					
ANR	3238997	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3238166	2		=			
ANR	3238998	Identifier	first		3238166	0					
ANR	3238999	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		3238166	1					
ANR	3239000	Condition	con -> top_pad_remaining > 16		3238166	0					
ANR	3239001	RelationalExpression	con -> top_pad_remaining > 16		3238166	0		>			
ANR	3239002	PtrMemberAccess	con -> top_pad_remaining		3238166	0					
ANR	3239003	Identifier	con		3238166	0					
ANR	3239004	Identifier	top_pad_remaining		3238166	1					
ANR	3239005	PrimaryExpression	16		3238166	1					
ANR	3239006	PrimaryExpression	16		3238166	1					
ANR	3239007	PtrMemberAccess	con -> top_pad_remaining		3238166	2					
ANR	3239008	Identifier	con		3238166	0					
ANR	3239009	Identifier	top_pad_remaining		3238166	1					
ANR	3239010	ExpressionStatement	con -> top_pad_remaining -= first	2609:8:88634:88665	3238166	1	True				
ANR	3239011	AssignmentExpression	con -> top_pad_remaining -= first		3238166	0		-=			
ANR	3239012	PtrMemberAccess	con -> top_pad_remaining		3238166	0					
ANR	3239013	Identifier	con		3238166	0					
ANR	3239014	Identifier	top_pad_remaining		3238166	1					
ANR	3239015	Identifier	first		3238166	1					
ANR	3239016	IdentifierDeclStatement	int trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16 ;	2610:8:88703:88791	3238166	2	True				
ANR	3239017	IdentifierDecl	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3238166	0					
ANR	3239018	IdentifierDeclType	int		3238166	0					
ANR	3239019	Identifier	trans		3238166	1					
ANR	3239020	AssignmentExpression	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3238166	2		=			
ANR	3239021	Identifier	trans		3238166	0					
ANR	3239022	ConditionalExpression	( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		3238166	1					
ANR	3239023	Condition	my * 16 + 16 > ( con -> hei + con -> top_pad )		3238166	0					
ANR	3239024	RelationalExpression	my * 16 + 16 > ( con -> hei + con -> top_pad )		3238166	0		>			
ANR	3239025	AdditiveExpression	my * 16 + 16		3238166	0		+			
ANR	3239026	MultiplicativeExpression	my * 16		3238166	0		*			
ANR	3239027	Identifier	my		3238166	0					
ANR	3239028	PrimaryExpression	16		3238166	1					
ANR	3239029	PrimaryExpression	16		3238166	1					
ANR	3239030	AdditiveExpression	con -> hei + con -> top_pad		3238166	1		+			
ANR	3239031	PtrMemberAccess	con -> hei		3238166	0					
ANR	3239032	Identifier	con		3238166	0					
ANR	3239033	Identifier	hei		3238166	1					
ANR	3239034	PtrMemberAccess	con -> top_pad		3238166	1					
ANR	3239035	Identifier	con		3238166	0					
ANR	3239036	Identifier	top_pad		3238166	1					
ANR	3239037	MultiplicativeExpression	( con -> hei + con -> top_pad ) % 16		3238166	1		%			
ANR	3239038	AdditiveExpression	con -> hei + con -> top_pad		3238166	0		+			
ANR	3239039	PtrMemberAccess	con -> hei		3238166	0					
ANR	3239040	Identifier	con		3238166	0					
ANR	3239041	Identifier	hei		3238166	1					
ANR	3239042	PtrMemberAccess	con -> top_pad		3238166	1					
ANR	3239043	Identifier	con		3238166	0					
ANR	3239044	Identifier	top_pad		3238166	1					
ANR	3239045	PrimaryExpression	16		3238166	1					
ANR	3239046	PrimaryExpression	16		3238166	2					
ANR	3239047	IfStatement	if ( con -> bpi == 1 )		3238166	3					
ANR	3239048	Condition	con -> bpi == 1	2611:11:88804:88816	3238166	0	True				
ANR	3239049	EqualityExpression	con -> bpi == 1		3238166	0		==			
ANR	3239050	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239051	Identifier	con		3238166	0					
ANR	3239052	Identifier	bpi		3238166	1					
ANR	3239053	PrimaryExpression	1		3238166	1					
ANR	3239054	CompoundStatement		121:8:4294:4294	3238166	1					
ANR	3239055	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3238166	0					
ANR	3239056	ForInit	idx = first ;	2615:17:88974:88985	3238166	0	True				
ANR	3239057	AssignmentExpression	idx = first		3238166	0		=			
ANR	3239058	Identifier	idx		3238166	0					
ANR	3239059	Identifier	first		3238166	1					
ANR	3239060	Condition	idx < trans	2615:30:88987:88997	3238166	1	True				
ANR	3239061	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239062	Identifier	idx		3238166	0					
ANR	3239063	Identifier	trans		3238166	1					
ANR	3239064	AssignmentExpression	idx += 1	2615:43:89000:89007	3238166	2	True	+=			
ANR	3239065	Identifier	idx		3238166	0					
ANR	3239066	PrimaryExpression	1		3238166	1					
ANR	3239067	CompoundStatement		125:16:4495:4536	3238166	3					
ANR	3239068	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy ;	2616:16:89028:89069	3238166	0	True				
ANR	3239069	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy		3238166	0					
ANR	3239070	IdentifierDeclType	uint8_t *		3238166	0					
ANR	3239071	Identifier	dp		3238166	1					
ANR	3239072	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy		3238166	2		=			
ANR	3239073	Identifier	dp		3238166	0					
ANR	3239074	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy		3238166	1		+			
ANR	3239075	CastExpression	( uint8_t * ) con -> buf		3238166	0					
ANR	3239076	CastTarget	uint8_t *		3238166	0					
ANR	3239077	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239078	Identifier	con		3238166	0					
ANR	3239079	Identifier	buf		3238166	1					
ANR	3239080	MultiplicativeExpression	idx * dy		3238166	1		*			
ANR	3239081	Identifier	idx		3238166	0					
ANR	3239082	Identifier	dy		3238166	1					
ANR	3239083	ForStatement	for ( jdx = con -> left_pad ; jdx < ( con -> wid + con -> left_pad ) ; jdx = jdx + 8 )		3238166	1					
ANR	3239084	ForInit	jdx = con -> left_pad ;	2617:20:89091:89110	3238166	0	True				
ANR	3239085	AssignmentExpression	jdx = con -> left_pad		3238166	0		=			
ANR	3239086	Identifier	jdx		3238166	0					
ANR	3239087	PtrMemberAccess	con -> left_pad		3238166	1					
ANR	3239088	Identifier	con		3238166	0					
ANR	3239089	Identifier	left_pad		3238166	1					
ANR	3239090	Condition	jdx < ( con -> wid + con -> left_pad )	2617:41:89112:89143	3238166	1	True				
ANR	3239091	RelationalExpression	jdx < ( con -> wid + con -> left_pad )		3238166	0		<			
ANR	3239092	Identifier	jdx		3238166	0					
ANR	3239093	AdditiveExpression	con -> wid + con -> left_pad		3238166	1		+			
ANR	3239094	PtrMemberAccess	con -> wid		3238166	0					
ANR	3239095	Identifier	con		3238166	0					
ANR	3239096	Identifier	wid		3238166	1					
ANR	3239097	PtrMemberAccess	con -> left_pad		3238166	1					
ANR	3239098	Identifier	con		3238166	0					
ANR	3239099	Identifier	left_pad		3238166	1					
ANR	3239100	AssignmentExpression	jdx = jdx + 8	2617:75:89146:89158	3238166	2	True	=			
ANR	3239101	Identifier	jdx		3238166	0					
ANR	3239102	AdditiveExpression	jdx + 8		3238166	1		+			
ANR	3239103	Identifier	jdx		3238166	0					
ANR	3239104	PrimaryExpression	8		3238166	1					
ANR	3239105	CompoundStatement		130:20:4744:4790	3238166	3					
ANR	3239106	IdentifierDeclStatement	uint8_t buff [ 8 ] ;	2619:20:89199:89214	3238166	0	True				
ANR	3239107	IdentifierDecl	buff [ 8 ]		3238166	0					
ANR	3239108	IdentifierDeclType	uint8_t [ 8 ]		3238166	0					
ANR	3239109	Identifier	buff		3238166	1					
ANR	3239110	PrimaryExpression	8		3238166	2					
ANR	3239111	IdentifierDeclStatement	uint8_t iResult = 0 ;	2620:20:89236:89255	3238166	1	True				
ANR	3239112	IdentifierDecl	iResult = 0		3238166	0					
ANR	3239113	IdentifierDeclType	uint8_t		3238166	0					
ANR	3239114	Identifier	iResult		3238166	1					
ANR	3239115	AssignmentExpression	iResult = 0		3238166	2		=			
ANR	3239116	Identifier	iResult		3238166	0					
ANR	3239117	PrimaryExpression	0		3238166	1					
ANR	3239118	IdentifierDeclStatement	int end = jdx + 8 > con -> wid ? con -> wid : jdx + 8 ;	2621:20:89277:89323	3238166	2	True				
ANR	3239119	IdentifierDecl	end = jdx + 8 > con -> wid ? con -> wid : jdx + 8		3238166	0					
ANR	3239120	IdentifierDeclType	int		3238166	0					
ANR	3239121	Identifier	end		3238166	1					
ANR	3239122	AssignmentExpression	end = jdx + 8 > con -> wid ? con -> wid : jdx + 8		3238166	2		=			
ANR	3239123	Identifier	end		3238166	0					
ANR	3239124	ConditionalExpression	jdx + 8 > con -> wid ? con -> wid : jdx + 8		3238166	1					
ANR	3239125	Condition	jdx + 8 > con -> wid		3238166	0					
ANR	3239126	RelationalExpression	jdx + 8 > con -> wid		3238166	0		>			
ANR	3239127	AdditiveExpression	jdx + 8		3238166	0		+			
ANR	3239128	Identifier	jdx		3238166	0					
ANR	3239129	PrimaryExpression	8		3238166	1					
ANR	3239130	PtrMemberAccess	con -> wid		3238166	1					
ANR	3239131	Identifier	con		3238166	0					
ANR	3239132	Identifier	wid		3238166	1					
ANR	3239133	PtrMemberAccess	con -> wid		3238166	1					
ANR	3239134	Identifier	con		3238166	0					
ANR	3239135	Identifier	wid		3238166	1					
ANR	3239136	AdditiveExpression	jdx + 8		3238166	2		+			
ANR	3239137	Identifier	jdx		3238166	0					
ANR	3239138	PrimaryExpression	8		3238166	1					
ANR	3239139	ExpressionStatement	"memset ( buff , 0 , 8 * sizeof ( uint8_t ) )"	2622:20:89345:89381	3238166	3	True				
ANR	3239140	CallExpression	"memset ( buff , 0 , 8 * sizeof ( uint8_t ) )"		3238166	0					
ANR	3239141	Callee	memset		3238166	0					
ANR	3239142	Identifier	memset		3238166	0					
ANR	3239143	ArgumentList	buff		3238166	1					
ANR	3239144	Argument	buff		3238166	0					
ANR	3239145	Identifier	buff		3238166	0					
ANR	3239146	Argument	0		3238166	1					
ANR	3239147	PrimaryExpression	0		3238166	0					
ANR	3239148	Argument	8 * sizeof ( uint8_t )		3238166	2					
ANR	3239149	MultiplicativeExpression	8 * sizeof ( uint8_t )		3238166	0		*			
ANR	3239150	PrimaryExpression	8		3238166	0					
ANR	3239151	SizeofExpression	sizeof ( uint8_t )		3238166	1					
ANR	3239152	Sizeof	sizeof		3238166	0					
ANR	3239153	SizeofOperand	uint8_t		3238166	1					
ANR	3239154	ExpressionStatement	"memcpy ( buff , dp + jdx , ( end - jdx ) * sizeof ( uint8_t ) )"	2623:20:89403:89452	3238166	4	True				
ANR	3239155	CallExpression	"memcpy ( buff , dp + jdx , ( end - jdx ) * sizeof ( uint8_t ) )"		3238166	0					
ANR	3239156	Callee	memcpy		3238166	0					
ANR	3239157	Identifier	memcpy		3238166	0					
ANR	3239158	ArgumentList	buff		3238166	1					
ANR	3239159	Argument	buff		3238166	0					
ANR	3239160	Identifier	buff		3238166	0					
ANR	3239161	Argument	dp + jdx		3238166	1					
ANR	3239162	AdditiveExpression	dp + jdx		3238166	0		+			
ANR	3239163	Identifier	dp		3238166	0					
ANR	3239164	Identifier	jdx		3238166	1					
ANR	3239165	Argument	( end - jdx ) * sizeof ( uint8_t )		3238166	2					
ANR	3239166	MultiplicativeExpression	( end - jdx ) * sizeof ( uint8_t )		3238166	0		*			
ANR	3239167	AdditiveExpression	end - jdx		3238166	0		-			
ANR	3239168	Identifier	end		3238166	0					
ANR	3239169	Identifier	jdx		3238166	1					
ANR	3239170	SizeofExpression	sizeof ( uint8_t )		3238166	1					
ANR	3239171	Sizeof	sizeof		3238166	0					
ANR	3239172	SizeofOperand	uint8_t		3238166	1					
ANR	3239173	IfStatement	if ( jxr_get_OUTPUT_BITDEPTH ( image ) == JXR_BD1BLACK1 )		3238166	5					
ANR	3239174	Condition	jxr_get_OUTPUT_BITDEPTH ( image ) == JXR_BD1BLACK1	2624:24:89478:89524	3238166	0	True				
ANR	3239175	EqualityExpression	jxr_get_OUTPUT_BITDEPTH ( image ) == JXR_BD1BLACK1		3238166	0		==			
ANR	3239176	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3238166	0					
ANR	3239177	Callee	jxr_get_OUTPUT_BITDEPTH		3238166	0					
ANR	3239178	Identifier	jxr_get_OUTPUT_BITDEPTH		3238166	0					
ANR	3239179	ArgumentList	image		3238166	1					
ANR	3239180	Argument	image		3238166	0					
ANR	3239181	Identifier	image		3238166	0					
ANR	3239182	Identifier	JXR_BD1BLACK1		3238166	1					
ANR	3239183	CompoundStatement		134:20:5014:5014	3238166	1					
ANR	3239184	ExpressionStatement	iResult = ( 1 - buff [ 7 ] ) + ( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )	2626:24:89595:89835	3238166	0	True				
ANR	3239185	AssignmentExpression	iResult = ( 1 - buff [ 7 ] ) + ( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	0		=			
ANR	3239186	Identifier	iResult		3238166	0					
ANR	3239187	AdditiveExpression	( 1 - buff [ 7 ] ) + ( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	1		+			
ANR	3239188	AdditiveExpression	1 - buff [ 7 ]		3238166	0		-			
ANR	3239189	PrimaryExpression	1		3238166	0					
ANR	3239190	ArrayIndexing	buff [ 7 ]		3238166	1					
ANR	3239191	Identifier	buff		3238166	0					
ANR	3239192	PrimaryExpression	7		3238166	1					
ANR	3239193	AdditiveExpression	( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	1		+			
ANR	3239194	ShiftExpression	( 1 - buff [ 6 ] ) << 1		3238166	0		<<			
ANR	3239195	AdditiveExpression	1 - buff [ 6 ]		3238166	0		-			
ANR	3239196	PrimaryExpression	1		3238166	0					
ANR	3239197	ArrayIndexing	buff [ 6 ]		3238166	1					
ANR	3239198	Identifier	buff		3238166	0					
ANR	3239199	PrimaryExpression	6		3238166	1					
ANR	3239200	PrimaryExpression	1		3238166	1					
ANR	3239201	AdditiveExpression	( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	1		+			
ANR	3239202	ShiftExpression	( 1 - buff [ 5 ] ) << 2		3238166	0		<<			
ANR	3239203	AdditiveExpression	1 - buff [ 5 ]		3238166	0		-			
ANR	3239204	PrimaryExpression	1		3238166	0					
ANR	3239205	ArrayIndexing	buff [ 5 ]		3238166	1					
ANR	3239206	Identifier	buff		3238166	0					
ANR	3239207	PrimaryExpression	5		3238166	1					
ANR	3239208	PrimaryExpression	2		3238166	1					
ANR	3239209	AdditiveExpression	( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	1		+			
ANR	3239210	ShiftExpression	( 1 - buff [ 4 ] ) << 3		3238166	0		<<			
ANR	3239211	AdditiveExpression	1 - buff [ 4 ]		3238166	0		-			
ANR	3239212	PrimaryExpression	1		3238166	0					
ANR	3239213	ArrayIndexing	buff [ 4 ]		3238166	1					
ANR	3239214	Identifier	buff		3238166	0					
ANR	3239215	PrimaryExpression	4		3238166	1					
ANR	3239216	PrimaryExpression	3		3238166	1					
ANR	3239217	AdditiveExpression	( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	1		+			
ANR	3239218	ShiftExpression	( 1 - buff [ 3 ] ) << 4		3238166	0		<<			
ANR	3239219	AdditiveExpression	1 - buff [ 3 ]		3238166	0		-			
ANR	3239220	PrimaryExpression	1		3238166	0					
ANR	3239221	ArrayIndexing	buff [ 3 ]		3238166	1					
ANR	3239222	Identifier	buff		3238166	0					
ANR	3239223	PrimaryExpression	3		3238166	1					
ANR	3239224	PrimaryExpression	4		3238166	1					
ANR	3239225	AdditiveExpression	( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	1		+			
ANR	3239226	ShiftExpression	( 1 - buff [ 2 ] ) << 5		3238166	0		<<			
ANR	3239227	AdditiveExpression	1 - buff [ 2 ]		3238166	0		-			
ANR	3239228	PrimaryExpression	1		3238166	0					
ANR	3239229	ArrayIndexing	buff [ 2 ]		3238166	1					
ANR	3239230	Identifier	buff		3238166	0					
ANR	3239231	PrimaryExpression	2		3238166	1					
ANR	3239232	PrimaryExpression	5		3238166	1					
ANR	3239233	AdditiveExpression	( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		3238166	1		+			
ANR	3239234	ShiftExpression	( 1 - buff [ 1 ] ) << 6		3238166	0		<<			
ANR	3239235	AdditiveExpression	1 - buff [ 1 ]		3238166	0		-			
ANR	3239236	PrimaryExpression	1		3238166	0					
ANR	3239237	ArrayIndexing	buff [ 1 ]		3238166	1					
ANR	3239238	Identifier	buff		3238166	0					
ANR	3239239	PrimaryExpression	1		3238166	1					
ANR	3239240	PrimaryExpression	6		3238166	1					
ANR	3239241	ShiftExpression	( 1 - buff [ 0 ] ) << 7		3238166	1		<<			
ANR	3239242	AdditiveExpression	1 - buff [ 0 ]		3238166	0		-			
ANR	3239243	PrimaryExpression	1		3238166	0					
ANR	3239244	ArrayIndexing	buff [ 0 ]		3238166	1					
ANR	3239245	Identifier	buff		3238166	0					
ANR	3239246	PrimaryExpression	0		3238166	1					
ANR	3239247	PrimaryExpression	7		3238166	1					
ANR	3239248	ElseStatement	else		3238166	0					
ANR	3239249	CompoundStatement		140:20:5417:5417	3238166	0					
ANR	3239250	ExpressionStatement	iResult = buff [ 7 ] + ( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )	2632:24:89976:90170	3238166	0	True				
ANR	3239251	AssignmentExpression	iResult = buff [ 7 ] + ( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	0		=			
ANR	3239252	Identifier	iResult		3238166	0					
ANR	3239253	AdditiveExpression	buff [ 7 ] + ( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	1		+			
ANR	3239254	ArrayIndexing	buff [ 7 ]		3238166	0					
ANR	3239255	Identifier	buff		3238166	0					
ANR	3239256	PrimaryExpression	7		3238166	1					
ANR	3239257	AdditiveExpression	( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	1		+			
ANR	3239258	ShiftExpression	buff [ 6 ] << 1		3238166	0		<<			
ANR	3239259	ArrayIndexing	buff [ 6 ]		3238166	0					
ANR	3239260	Identifier	buff		3238166	0					
ANR	3239261	PrimaryExpression	6		3238166	1					
ANR	3239262	PrimaryExpression	1		3238166	1					
ANR	3239263	AdditiveExpression	( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	1		+			
ANR	3239264	ShiftExpression	buff [ 5 ] << 2		3238166	0		<<			
ANR	3239265	ArrayIndexing	buff [ 5 ]		3238166	0					
ANR	3239266	Identifier	buff		3238166	0					
ANR	3239267	PrimaryExpression	5		3238166	1					
ANR	3239268	PrimaryExpression	2		3238166	1					
ANR	3239269	AdditiveExpression	( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	1		+			
ANR	3239270	ShiftExpression	buff [ 4 ] << 3		3238166	0		<<			
ANR	3239271	ArrayIndexing	buff [ 4 ]		3238166	0					
ANR	3239272	Identifier	buff		3238166	0					
ANR	3239273	PrimaryExpression	4		3238166	1					
ANR	3239274	PrimaryExpression	3		3238166	1					
ANR	3239275	AdditiveExpression	( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	1		+			
ANR	3239276	ShiftExpression	buff [ 3 ] << 4		3238166	0		<<			
ANR	3239277	ArrayIndexing	buff [ 3 ]		3238166	0					
ANR	3239278	Identifier	buff		3238166	0					
ANR	3239279	PrimaryExpression	3		3238166	1					
ANR	3239280	PrimaryExpression	4		3238166	1					
ANR	3239281	AdditiveExpression	( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	1		+			
ANR	3239282	ShiftExpression	buff [ 2 ] << 5		3238166	0		<<			
ANR	3239283	ArrayIndexing	buff [ 2 ]		3238166	0					
ANR	3239284	Identifier	buff		3238166	0					
ANR	3239285	PrimaryExpression	2		3238166	1					
ANR	3239286	PrimaryExpression	5		3238166	1					
ANR	3239287	AdditiveExpression	( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		3238166	1		+			
ANR	3239288	ShiftExpression	buff [ 1 ] << 6		3238166	0		<<			
ANR	3239289	ArrayIndexing	buff [ 1 ]		3238166	0					
ANR	3239290	Identifier	buff		3238166	0					
ANR	3239291	PrimaryExpression	1		3238166	1					
ANR	3239292	PrimaryExpression	6		3238166	1					
ANR	3239293	ShiftExpression	buff [ 0 ] << 7		3238166	1		<<			
ANR	3239294	ArrayIndexing	buff [ 0 ]		3238166	0					
ANR	3239295	Identifier	buff		3238166	0					
ANR	3239296	PrimaryExpression	0		3238166	1					
ANR	3239297	PrimaryExpression	7		3238166	1					
ANR	3239298	ExpressionStatement	"write_uint8 ( con , & iResult , 1 )"	2637:20:90232:90261	3238166	6	True				
ANR	3239299	CallExpression	"write_uint8 ( con , & iResult , 1 )"		3238166	0					
ANR	3239300	Callee	write_uint8		3238166	0					
ANR	3239301	Identifier	write_uint8		3238166	0					
ANR	3239302	ArgumentList	con		3238166	1					
ANR	3239303	Argument	con		3238166	0					
ANR	3239304	Identifier	con		3238166	0					
ANR	3239305	Argument	& iResult		3238166	1					
ANR	3239306	UnaryOperationExpression	& iResult		3238166	0					
ANR	3239307	UnaryOperator	&		3238166	0					
ANR	3239308	Identifier	iResult		3238166	1					
ANR	3239309	Argument	1		3238166	2					
ANR	3239310	PrimaryExpression	1		3238166	0					
ANR	3239311	ElseStatement	else		3238166	0					
ANR	3239312	IfStatement	if ( con -> bpi == 5 )		3238166	0					
ANR	3239313	Condition	con -> bpi == 5	2641:16:90321:90333	3238166	0	True				
ANR	3239314	EqualityExpression	con -> bpi == 5		3238166	0		==			
ANR	3239315	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239316	Identifier	con		3238166	0					
ANR	3239317	Identifier	bpi		3238166	1					
ANR	3239318	PrimaryExpression	5		3238166	1					
ANR	3239319	CompoundStatement		151:8:5811:5811	3238166	1					
ANR	3239320	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3238166	0					
ANR	3239321	ForInit	idx = first ;	2645:17:90478:90489	3238166	0	True				
ANR	3239322	AssignmentExpression	idx = first		3238166	0		=			
ANR	3239323	Identifier	idx		3238166	0					
ANR	3239324	Identifier	first		3238166	1					
ANR	3239325	Condition	idx < trans	2645:30:90491:90501	3238166	1	True				
ANR	3239326	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239327	Identifier	idx		3238166	0					
ANR	3239328	Identifier	trans		3238166	1					
ANR	3239329	AssignmentExpression	idx += 1	2645:43:90504:90511	3238166	2	True	+=			
ANR	3239330	Identifier	idx		3238166	0					
ANR	3239331	PrimaryExpression	1		3238166	1					
ANR	3239332	CompoundStatement		155:16:5999:6040	3238166	3					
ANR	3239333	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy ;	2646:16:90532:90573	3238166	0	True				
ANR	3239334	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy		3238166	0					
ANR	3239335	IdentifierDeclType	uint8_t *		3238166	0					
ANR	3239336	Identifier	dp		3238166	1					
ANR	3239337	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy		3238166	2		=			
ANR	3239338	Identifier	dp		3238166	0					
ANR	3239339	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy		3238166	1		+			
ANR	3239340	CastExpression	( uint8_t * ) con -> buf		3238166	0					
ANR	3239341	CastTarget	uint8_t *		3238166	0					
ANR	3239342	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239343	Identifier	con		3238166	0					
ANR	3239344	Identifier	buf		3238166	1					
ANR	3239345	MultiplicativeExpression	idx * dy		3238166	1		*			
ANR	3239346	Identifier	idx		3238166	0					
ANR	3239347	Identifier	dy		3238166	1					
ANR	3239348	ExpressionStatement	assert ( con -> ncomp == 3 )	2647:16:90591:90614	3238166	1	True				
ANR	3239349	CallExpression	assert ( con -> ncomp == 3 )		3238166	0					
ANR	3239350	Callee	assert		3238166	0					
ANR	3239351	Identifier	assert		3238166	0					
ANR	3239352	ArgumentList	con -> ncomp == 3		3238166	1					
ANR	3239353	Argument	con -> ncomp == 3		3238166	0					
ANR	3239354	EqualityExpression	con -> ncomp == 3		3238166	0		==			
ANR	3239355	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3239356	Identifier	con		3238166	0					
ANR	3239357	Identifier	ncomp		3238166	1					
ANR	3239358	PrimaryExpression	3		3238166	1					
ANR	3239359	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		3238166	2					
ANR	3239360	ForInit	jdx = con -> left_pad * con -> ncomp ;	2648:20:90652:90682	3238166	0	True				
ANR	3239361	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		3238166	0		=			
ANR	3239362	Identifier	jdx		3238166	0					
ANR	3239363	MultiplicativeExpression	con -> left_pad * con -> ncomp		3238166	1		*			
ANR	3239364	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3239365	Identifier	con		3238166	0					
ANR	3239366	Identifier	left_pad		3238166	1					
ANR	3239367	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239368	Identifier	con		3238166	0					
ANR	3239369	Identifier	ncomp		3238166	1					
ANR	3239370	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2648:52:90684:90726	3238166	1	True				
ANR	3239371	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		3238166	0		<			
ANR	3239372	Identifier	jdx		3238166	0					
ANR	3239373	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		3238166	1		*			
ANR	3239374	AdditiveExpression	con -> wid + con -> left_pad		3238166	0		+			
ANR	3239375	PtrMemberAccess	con -> wid		3238166	0					
ANR	3239376	Identifier	con		3238166	0					
ANR	3239377	Identifier	wid		3238166	1					
ANR	3239378	PtrMemberAccess	con -> left_pad		3238166	1					
ANR	3239379	Identifier	con		3238166	0					
ANR	3239380	Identifier	left_pad		3238166	1					
ANR	3239381	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239382	Identifier	con		3238166	0					
ANR	3239383	Identifier	ncomp		3238166	1					
ANR	3239384	AssignmentExpression	jdx = jdx + con -> ncomp	2648:97:90729:90750	3238166	2	True	=			
ANR	3239385	Identifier	jdx		3238166	0					
ANR	3239386	AdditiveExpression	jdx + con -> ncomp		3238166	1		+			
ANR	3239387	Identifier	jdx		3238166	0					
ANR	3239388	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239389	Identifier	con		3238166	0					
ANR	3239390	Identifier	ncomp		3238166	1					
ANR	3239391	CompoundStatement		159:20:6258:6278	3238166	3					
ANR	3239392	IdentifierDeclStatement	uint16_t iResult = 0 ;	2650:20:90791:90811	3238166	0	True				
ANR	3239393	IdentifierDecl	iResult = 0		3238166	0					
ANR	3239394	IdentifierDeclType	uint16_t		3238166	0					
ANR	3239395	Identifier	iResult		3238166	1					
ANR	3239396	AssignmentExpression	iResult = 0		3238166	2		=			
ANR	3239397	Identifier	iResult		3238166	0					
ANR	3239398	PrimaryExpression	0		3238166	1					
ANR	3239399	ExpressionStatement	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )	2651:20:90833:90924	3238166	1	True				
ANR	3239400	AssignmentExpression	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )		3238166	0		=			
ANR	3239401	Identifier	iResult		3238166	0					
ANR	3239402	AdditiveExpression	( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )		3238166	1		+			
ANR	3239403	CastExpression	( uint16_t ) dp [ jdx ]		3238166	0					
ANR	3239404	CastTarget	uint16_t		3238166	0					
ANR	3239405	ArrayIndexing	dp [ jdx ]		3238166	1					
ANR	3239406	Identifier	dp		3238166	0					
ANR	3239407	Identifier	jdx		3238166	1					
ANR	3239408	AdditiveExpression	( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )		3238166	1		+			
ANR	3239409	ShiftExpression	( ( uint16_t ) dp [ jdx + 1 ] ) << 5		3238166	0		<<			
ANR	3239410	CastExpression	( uint16_t ) dp [ jdx + 1 ]		3238166	0					
ANR	3239411	CastTarget	uint16_t		3238166	0					
ANR	3239412	ArrayIndexing	dp [ jdx + 1 ]		3238166	1					
ANR	3239413	Identifier	dp		3238166	0					
ANR	3239414	AdditiveExpression	jdx + 1		3238166	1		+			
ANR	3239415	Identifier	jdx		3238166	0					
ANR	3239416	PrimaryExpression	1		3238166	1					
ANR	3239417	PrimaryExpression	5		3238166	1					
ANR	3239418	ShiftExpression	( ( uint16_t ) dp [ jdx + 2 ] ) << 10		3238166	1		<<			
ANR	3239419	CastExpression	( uint16_t ) dp [ jdx + 2 ]		3238166	0					
ANR	3239420	CastTarget	uint16_t		3238166	0					
ANR	3239421	ArrayIndexing	dp [ jdx + 2 ]		3238166	1					
ANR	3239422	Identifier	dp		3238166	0					
ANR	3239423	AdditiveExpression	jdx + 2		3238166	1		+			
ANR	3239424	Identifier	jdx		3238166	0					
ANR	3239425	PrimaryExpression	2		3238166	1					
ANR	3239426	PrimaryExpression	10		3238166	1					
ANR	3239427	ExpressionStatement	"write_uint16 ( con , & iResult , 1 )"	2652:20:90946:90976	3238166	2	True				
ANR	3239428	CallExpression	"write_uint16 ( con , & iResult , 1 )"		3238166	0					
ANR	3239429	Callee	write_uint16		3238166	0					
ANR	3239430	Identifier	write_uint16		3238166	0					
ANR	3239431	ArgumentList	con		3238166	1					
ANR	3239432	Argument	con		3238166	0					
ANR	3239433	Identifier	con		3238166	0					
ANR	3239434	Argument	& iResult		3238166	1					
ANR	3239435	UnaryOperationExpression	& iResult		3238166	0					
ANR	3239436	UnaryOperator	&		3238166	0					
ANR	3239437	Identifier	iResult		3238166	1					
ANR	3239438	Argument	1		3238166	2					
ANR	3239439	PrimaryExpression	1		3238166	0					
ANR	3239440	ElseStatement	else		3238166	0					
ANR	3239441	IfStatement	if ( con -> bpi == 6 )		3238166	0					
ANR	3239442	Condition	con -> bpi == 6	2656:16:91068:91080	3238166	0	True				
ANR	3239443	EqualityExpression	con -> bpi == 6		3238166	0		==			
ANR	3239444	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239445	Identifier	con		3238166	0					
ANR	3239446	Identifier	bpi		3238166	1					
ANR	3239447	PrimaryExpression	6		3238166	1					
ANR	3239448	CompoundStatement		166:8:6558:6558	3238166	1					
ANR	3239449	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3238166	0					
ANR	3239450	ForInit	idx = first ;	2660:17:91225:91236	3238166	0	True				
ANR	3239451	AssignmentExpression	idx = first		3238166	0		=			
ANR	3239452	Identifier	idx		3238166	0					
ANR	3239453	Identifier	first		3238166	1					
ANR	3239454	Condition	idx < trans	2660:30:91238:91248	3238166	1	True				
ANR	3239455	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239456	Identifier	idx		3238166	0					
ANR	3239457	Identifier	trans		3238166	1					
ANR	3239458	AssignmentExpression	idx += 1	2660:43:91251:91258	3238166	2	True	+=			
ANR	3239459	Identifier	idx		3238166	0					
ANR	3239460	PrimaryExpression	1		3238166	1					
ANR	3239461	CompoundStatement		170:16:6746:6787	3238166	3					
ANR	3239462	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy ;	2661:16:91279:91320	3238166	0	True				
ANR	3239463	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy		3238166	0					
ANR	3239464	IdentifierDeclType	uint8_t *		3238166	0					
ANR	3239465	Identifier	dp		3238166	1					
ANR	3239466	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy		3238166	2		=			
ANR	3239467	Identifier	dp		3238166	0					
ANR	3239468	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy		3238166	1		+			
ANR	3239469	CastExpression	( uint8_t * ) con -> buf		3238166	0					
ANR	3239470	CastTarget	uint8_t *		3238166	0					
ANR	3239471	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239472	Identifier	con		3238166	0					
ANR	3239473	Identifier	buf		3238166	1					
ANR	3239474	MultiplicativeExpression	idx * dy		3238166	1		*			
ANR	3239475	Identifier	idx		3238166	0					
ANR	3239476	Identifier	dy		3238166	1					
ANR	3239477	ExpressionStatement	assert ( con -> ncomp == 3 )	2662:16:91338:91361	3238166	1	True				
ANR	3239478	CallExpression	assert ( con -> ncomp == 3 )		3238166	0					
ANR	3239479	Callee	assert		3238166	0					
ANR	3239480	Identifier	assert		3238166	0					
ANR	3239481	ArgumentList	con -> ncomp == 3		3238166	1					
ANR	3239482	Argument	con -> ncomp == 3		3238166	0					
ANR	3239483	EqualityExpression	con -> ncomp == 3		3238166	0		==			
ANR	3239484	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3239485	Identifier	con		3238166	0					
ANR	3239486	Identifier	ncomp		3238166	1					
ANR	3239487	PrimaryExpression	3		3238166	1					
ANR	3239488	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		3238166	2					
ANR	3239489	ForInit	jdx = con -> left_pad * con -> ncomp ;	2663:20:91399:91429	3238166	0	True				
ANR	3239490	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		3238166	0		=			
ANR	3239491	Identifier	jdx		3238166	0					
ANR	3239492	MultiplicativeExpression	con -> left_pad * con -> ncomp		3238166	1		*			
ANR	3239493	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3239494	Identifier	con		3238166	0					
ANR	3239495	Identifier	left_pad		3238166	1					
ANR	3239496	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239497	Identifier	con		3238166	0					
ANR	3239498	Identifier	ncomp		3238166	1					
ANR	3239499	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2663:52:91431:91473	3238166	1	True				
ANR	3239500	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		3238166	0		<			
ANR	3239501	Identifier	jdx		3238166	0					
ANR	3239502	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		3238166	1		*			
ANR	3239503	AdditiveExpression	con -> wid + con -> left_pad		3238166	0		+			
ANR	3239504	PtrMemberAccess	con -> wid		3238166	0					
ANR	3239505	Identifier	con		3238166	0					
ANR	3239506	Identifier	wid		3238166	1					
ANR	3239507	PtrMemberAccess	con -> left_pad		3238166	1					
ANR	3239508	Identifier	con		3238166	0					
ANR	3239509	Identifier	left_pad		3238166	1					
ANR	3239510	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239511	Identifier	con		3238166	0					
ANR	3239512	Identifier	ncomp		3238166	1					
ANR	3239513	AssignmentExpression	jdx = jdx + con -> ncomp	2663:97:91476:91497	3238166	2	True	=			
ANR	3239514	Identifier	jdx		3238166	0					
ANR	3239515	AdditiveExpression	jdx + con -> ncomp		3238166	1		+			
ANR	3239516	Identifier	jdx		3238166	0					
ANR	3239517	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239518	Identifier	con		3238166	0					
ANR	3239519	Identifier	ncomp		3238166	1					
ANR	3239520	CompoundStatement		174:20:7005:7025	3238166	3					
ANR	3239521	IdentifierDeclStatement	uint16_t iResult = 0 ;	2665:20:91538:91558	3238166	0	True				
ANR	3239522	IdentifierDecl	iResult = 0		3238166	0					
ANR	3239523	IdentifierDeclType	uint16_t		3238166	0					
ANR	3239524	Identifier	iResult		3238166	1					
ANR	3239525	AssignmentExpression	iResult = 0		3238166	2		=			
ANR	3239526	Identifier	iResult		3238166	0					
ANR	3239527	PrimaryExpression	0		3238166	1					
ANR	3239528	ExpressionStatement	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )	2666:20:91580:91671	3238166	1	True				
ANR	3239529	AssignmentExpression	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )		3238166	0		=			
ANR	3239530	Identifier	iResult		3238166	0					
ANR	3239531	AdditiveExpression	( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )		3238166	1		+			
ANR	3239532	CastExpression	( uint16_t ) dp [ jdx ]		3238166	0					
ANR	3239533	CastTarget	uint16_t		3238166	0					
ANR	3239534	ArrayIndexing	dp [ jdx ]		3238166	1					
ANR	3239535	Identifier	dp		3238166	0					
ANR	3239536	Identifier	jdx		3238166	1					
ANR	3239537	AdditiveExpression	( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )		3238166	1		+			
ANR	3239538	ShiftExpression	( ( uint16_t ) dp [ jdx + 1 ] ) << 5		3238166	0		<<			
ANR	3239539	CastExpression	( uint16_t ) dp [ jdx + 1 ]		3238166	0					
ANR	3239540	CastTarget	uint16_t		3238166	0					
ANR	3239541	ArrayIndexing	dp [ jdx + 1 ]		3238166	1					
ANR	3239542	Identifier	dp		3238166	0					
ANR	3239543	AdditiveExpression	jdx + 1		3238166	1		+			
ANR	3239544	Identifier	jdx		3238166	0					
ANR	3239545	PrimaryExpression	1		3238166	1					
ANR	3239546	PrimaryExpression	5		3238166	1					
ANR	3239547	ShiftExpression	( ( uint16_t ) dp [ jdx + 2 ] ) << 11		3238166	1		<<			
ANR	3239548	CastExpression	( uint16_t ) dp [ jdx + 2 ]		3238166	0					
ANR	3239549	CastTarget	uint16_t		3238166	0					
ANR	3239550	ArrayIndexing	dp [ jdx + 2 ]		3238166	1					
ANR	3239551	Identifier	dp		3238166	0					
ANR	3239552	AdditiveExpression	jdx + 2		3238166	1		+			
ANR	3239553	Identifier	jdx		3238166	0					
ANR	3239554	PrimaryExpression	2		3238166	1					
ANR	3239555	PrimaryExpression	11		3238166	1					
ANR	3239556	ExpressionStatement	"write_uint16 ( con , & iResult , 1 )"	2667:20:91693:91723	3238166	2	True				
ANR	3239557	CallExpression	"write_uint16 ( con , & iResult , 1 )"		3238166	0					
ANR	3239558	Callee	write_uint16		3238166	0					
ANR	3239559	Identifier	write_uint16		3238166	0					
ANR	3239560	ArgumentList	con		3238166	1					
ANR	3239561	Argument	con		3238166	0					
ANR	3239562	Identifier	con		3238166	0					
ANR	3239563	Argument	& iResult		3238166	1					
ANR	3239564	UnaryOperationExpression	& iResult		3238166	0					
ANR	3239565	UnaryOperator	&		3238166	0					
ANR	3239566	Identifier	iResult		3238166	1					
ANR	3239567	Argument	1		3238166	2					
ANR	3239568	PrimaryExpression	1		3238166	0					
ANR	3239569	ElseStatement	else		3238166	0					
ANR	3239570	IfStatement	if ( con -> bpi == 8 )		3238166	0					
ANR	3239571	Condition	con -> bpi == 8	2671:17:91816:91826	3238166	0	True				
ANR	3239572	EqualityExpression	con -> bpi == 8		3238166	0		==			
ANR	3239573	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239574	Identifier	con		3238166	0					
ANR	3239575	Identifier	bpi		3238166	1					
ANR	3239576	PrimaryExpression	8		3238166	1					
ANR	3239577	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3238166	1					
ANR	3239578	ForInit	idx = first ;	2672:17:91846:91857	3238166	0	True				
ANR	3239579	AssignmentExpression	idx = first		3238166	0		=			
ANR	3239580	Identifier	idx		3238166	0					
ANR	3239581	Identifier	first		3238166	1					
ANR	3239582	Condition	idx < trans	2672:30:91859:91869	3238166	1	True				
ANR	3239583	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239584	Identifier	idx		3238166	0					
ANR	3239585	Identifier	trans		3238166	1					
ANR	3239586	AssignmentExpression	idx += 1	2672:43:91872:91879	3238166	2	True	+=			
ANR	3239587	Identifier	idx		3238166	0					
ANR	3239588	PrimaryExpression	1		3238166	1					
ANR	3239589	CompoundStatement		183:16:7453:7477	3238166	3					
ANR	3239590	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp ;	2673:16:91900:91968	3238166	0	True				
ANR	3239591	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	0					
ANR	3239592	IdentifierDeclType	uint8_t *		3238166	0					
ANR	3239593	Identifier	dp		3238166	1					
ANR	3239594	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	2		=			
ANR	3239595	Identifier	dp		3238166	0					
ANR	3239596	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	1		+			
ANR	3239597	CastExpression	( uint8_t * ) con -> buf		3238166	0					
ANR	3239598	CastTarget	uint8_t *		3238166	0					
ANR	3239599	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239600	Identifier	con		3238166	0					
ANR	3239601	Identifier	buf		3238166	1					
ANR	3239602	AdditiveExpression	idx * dy + con -> left_pad * con -> ncomp		3238166	1		+			
ANR	3239603	MultiplicativeExpression	idx * dy		3238166	0		*			
ANR	3239604	Identifier	idx		3238166	0					
ANR	3239605	Identifier	dy		3238166	1					
ANR	3239606	MultiplicativeExpression	con -> left_pad * con -> ncomp		3238166	1		*			
ANR	3239607	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3239608	Identifier	con		3238166	0					
ANR	3239609	Identifier	left_pad		3238166	1					
ANR	3239610	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239611	Identifier	con		3238166	0					
ANR	3239612	Identifier	ncomp		3238166	1					
ANR	3239613	IdentifierDeclStatement	int padComp = con -> ncomp ;	2674:16:91986:92010	3238166	1	True				
ANR	3239614	IdentifierDecl	padComp = con -> ncomp		3238166	0					
ANR	3239615	IdentifierDeclType	int		3238166	0					
ANR	3239616	Identifier	padComp		3238166	1					
ANR	3239617	AssignmentExpression	padComp = con -> ncomp		3238166	2		=			
ANR	3239618	Identifier	padComp		3238166	0					
ANR	3239619	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239620	Identifier	con		3238166	0					
ANR	3239621	Identifier	ncomp		3238166	1					
ANR	3239622	IfStatement	if ( con -> padBytes != 0 )		3238166	2					
ANR	3239623	Condition	con -> padBytes != 0	2675:19:92031:92048	3238166	0	True				
ANR	3239624	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3239625	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3239626	Identifier	con		3238166	0					
ANR	3239627	Identifier	padBytes		3238166	1					
ANR	3239628	PrimaryExpression	0		3238166	1					
ANR	3239629	ExpressionStatement	padComp ++	2676:20:92072:92082	3238166	1	True				
ANR	3239630	PostIncDecOperationExpression	padComp ++		3238166	0					
ANR	3239631	Identifier	padComp		3238166	0					
ANR	3239632	IncDec	++		3238166	1					
ANR	3239633	ExpressionStatement	"write_uint8 ( con , dp , con -> wid * padComp )"	2677:16:92100:92138	3238166	3	True				
ANR	3239634	CallExpression	"write_uint8 ( con , dp , con -> wid * padComp )"		3238166	0					
ANR	3239635	Callee	write_uint8		3238166	0					
ANR	3239636	Identifier	write_uint8		3238166	0					
ANR	3239637	ArgumentList	con		3238166	1					
ANR	3239638	Argument	con		3238166	0					
ANR	3239639	Identifier	con		3238166	0					
ANR	3239640	Argument	dp		3238166	1					
ANR	3239641	Identifier	dp		3238166	0					
ANR	3239642	Argument	con -> wid * padComp		3238166	2					
ANR	3239643	MultiplicativeExpression	con -> wid * padComp		3238166	0		*			
ANR	3239644	PtrMemberAccess	con -> wid		3238166	0					
ANR	3239645	Identifier	con		3238166	0					
ANR	3239646	Identifier	wid		3238166	1					
ANR	3239647	Identifier	padComp		3238166	1					
ANR	3239648	ElseStatement	else		3238166	0					
ANR	3239649	IfStatement	if ( con -> bpi == 10 && con -> ncomp == 3 )		3238166	0					
ANR	3239650	Condition	con -> bpi == 10 && con -> ncomp == 3	2678:16:92158:92190	3238166	0	True				
ANR	3239651	AndExpression	con -> bpi == 10 && con -> ncomp == 3		3238166	0		&&			
ANR	3239652	EqualityExpression	con -> bpi == 10		3238166	0		==			
ANR	3239653	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239654	Identifier	con		3238166	0					
ANR	3239655	Identifier	bpi		3238166	1					
ANR	3239656	PrimaryExpression	10		3238166	1					
ANR	3239657	EqualityExpression	con -> ncomp == 3		3238166	1		==			
ANR	3239658	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3239659	Identifier	con		3238166	0					
ANR	3239660	Identifier	ncomp		3238166	1					
ANR	3239661	PrimaryExpression	3		3238166	1					
ANR	3239662	CompoundStatement		188:8:7668:7668	3238166	1					
ANR	3239663	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3238166	0					
ANR	3239664	ForInit	idx = first ;	2682:17:92334:92345	3238166	0	True				
ANR	3239665	AssignmentExpression	idx = first		3238166	0		=			
ANR	3239666	Identifier	idx		3238166	0					
ANR	3239667	Identifier	first		3238166	1					
ANR	3239668	Condition	idx < trans	2682:30:92347:92357	3238166	1	True				
ANR	3239669	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239670	Identifier	idx		3238166	0					
ANR	3239671	Identifier	trans		3238166	1					
ANR	3239672	AssignmentExpression	idx += 1	2682:43:92360:92367	3238166	2	True	+=			
ANR	3239673	Identifier	idx		3238166	0					
ANR	3239674	PrimaryExpression	1		3238166	1					
ANR	3239675	CompoundStatement		192:16:7855:7898	3238166	3					
ANR	3239676	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + idx * dy ;	2683:16:92388:92431	3238166	0	True				
ANR	3239677	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + idx * dy		3238166	0					
ANR	3239678	IdentifierDeclType	uint16_t *		3238166	0					
ANR	3239679	Identifier	dp		3238166	1					
ANR	3239680	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + idx * dy		3238166	2		=			
ANR	3239681	Identifier	dp		3238166	0					
ANR	3239682	AdditiveExpression	( uint16_t * ) con -> buf + idx * dy		3238166	1		+			
ANR	3239683	CastExpression	( uint16_t * ) con -> buf		3238166	0					
ANR	3239684	CastTarget	uint16_t *		3238166	0					
ANR	3239685	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239686	Identifier	con		3238166	0					
ANR	3239687	Identifier	buf		3238166	1					
ANR	3239688	MultiplicativeExpression	idx * dy		3238166	1		*			
ANR	3239689	Identifier	idx		3238166	0					
ANR	3239690	Identifier	dy		3238166	1					
ANR	3239691	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		3238166	1					
ANR	3239692	ForInit	jdx = con -> left_pad * con -> ncomp ;	2684:20:92453:92483	3238166	0	True				
ANR	3239693	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		3238166	0		=			
ANR	3239694	Identifier	jdx		3238166	0					
ANR	3239695	MultiplicativeExpression	con -> left_pad * con -> ncomp		3238166	1		*			
ANR	3239696	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3239697	Identifier	con		3238166	0					
ANR	3239698	Identifier	left_pad		3238166	1					
ANR	3239699	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239700	Identifier	con		3238166	0					
ANR	3239701	Identifier	ncomp		3238166	1					
ANR	3239702	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2684:52:92485:92527	3238166	1	True				
ANR	3239703	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		3238166	0		<			
ANR	3239704	Identifier	jdx		3238166	0					
ANR	3239705	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		3238166	1		*			
ANR	3239706	AdditiveExpression	con -> wid + con -> left_pad		3238166	0		+			
ANR	3239707	PtrMemberAccess	con -> wid		3238166	0					
ANR	3239708	Identifier	con		3238166	0					
ANR	3239709	Identifier	wid		3238166	1					
ANR	3239710	PtrMemberAccess	con -> left_pad		3238166	1					
ANR	3239711	Identifier	con		3238166	0					
ANR	3239712	Identifier	left_pad		3238166	1					
ANR	3239713	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239714	Identifier	con		3238166	0					
ANR	3239715	Identifier	ncomp		3238166	1					
ANR	3239716	AssignmentExpression	jdx = jdx + con -> ncomp	2684:97:92530:92551	3238166	2	True	=			
ANR	3239717	Identifier	jdx		3238166	0					
ANR	3239718	AdditiveExpression	jdx + con -> ncomp		3238166	1		+			
ANR	3239719	Identifier	jdx		3238166	0					
ANR	3239720	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239721	Identifier	con		3238166	0					
ANR	3239722	Identifier	ncomp		3238166	1					
ANR	3239723	CompoundStatement		195:20:8059:8079	3238166	3					
ANR	3239724	IdentifierDeclStatement	uint32_t iResult = 0 ;	2686:20:92592:92612	3238166	0	True				
ANR	3239725	IdentifierDecl	iResult = 0		3238166	0					
ANR	3239726	IdentifierDeclType	uint32_t		3238166	0					
ANR	3239727	Identifier	iResult		3238166	1					
ANR	3239728	AssignmentExpression	iResult = 0		3238166	2		=			
ANR	3239729	Identifier	iResult		3238166	0					
ANR	3239730	PrimaryExpression	0		3238166	1					
ANR	3239731	ExpressionStatement	iResult = ( uint32_t ) dp [ jdx ] + ( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )	2687:20:92634:92726	3238166	1	True				
ANR	3239732	AssignmentExpression	iResult = ( uint32_t ) dp [ jdx ] + ( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )		3238166	0		=			
ANR	3239733	Identifier	iResult		3238166	0					
ANR	3239734	AdditiveExpression	( uint32_t ) dp [ jdx ] + ( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )		3238166	1		+			
ANR	3239735	CastExpression	( uint32_t ) dp [ jdx ]		3238166	0					
ANR	3239736	CastTarget	uint32_t		3238166	0					
ANR	3239737	ArrayIndexing	dp [ jdx ]		3238166	1					
ANR	3239738	Identifier	dp		3238166	0					
ANR	3239739	Identifier	jdx		3238166	1					
ANR	3239740	AdditiveExpression	( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )		3238166	1		+			
ANR	3239741	ShiftExpression	( ( uint32_t ) dp [ jdx + 1 ] ) << 10		3238166	0		<<			
ANR	3239742	CastExpression	( uint32_t ) dp [ jdx + 1 ]		3238166	0					
ANR	3239743	CastTarget	uint32_t		3238166	0					
ANR	3239744	ArrayIndexing	dp [ jdx + 1 ]		3238166	1					
ANR	3239745	Identifier	dp		3238166	0					
ANR	3239746	AdditiveExpression	jdx + 1		3238166	1		+			
ANR	3239747	Identifier	jdx		3238166	0					
ANR	3239748	PrimaryExpression	1		3238166	1					
ANR	3239749	PrimaryExpression	10		3238166	1					
ANR	3239750	ShiftExpression	( ( uint32_t ) dp [ jdx + 2 ] ) << 20		3238166	1		<<			
ANR	3239751	CastExpression	( uint32_t ) dp [ jdx + 2 ]		3238166	0					
ANR	3239752	CastTarget	uint32_t		3238166	0					
ANR	3239753	ArrayIndexing	dp [ jdx + 2 ]		3238166	1					
ANR	3239754	Identifier	dp		3238166	0					
ANR	3239755	AdditiveExpression	jdx + 2		3238166	1		+			
ANR	3239756	Identifier	jdx		3238166	0					
ANR	3239757	PrimaryExpression	2		3238166	1					
ANR	3239758	PrimaryExpression	20		3238166	1					
ANR	3239759	ExpressionStatement	"write_uint32 ( con , & iResult , 1 )"	2688:20:92748:92778	3238166	2	True				
ANR	3239760	CallExpression	"write_uint32 ( con , & iResult , 1 )"		3238166	0					
ANR	3239761	Callee	write_uint32		3238166	0					
ANR	3239762	Identifier	write_uint32		3238166	0					
ANR	3239763	ArgumentList	con		3238166	1					
ANR	3239764	Argument	con		3238166	0					
ANR	3239765	Identifier	con		3238166	0					
ANR	3239766	Argument	& iResult		3238166	1					
ANR	3239767	UnaryOperationExpression	& iResult		3238166	0					
ANR	3239768	UnaryOperator	&		3238166	0					
ANR	3239769	Identifier	iResult		3238166	1					
ANR	3239770	Argument	1		3238166	2					
ANR	3239771	PrimaryExpression	1		3238166	0					
ANR	3239772	ElseStatement	else		3238166	0					
ANR	3239773	IfStatement	if ( con -> bpi == 10 && con -> ncomp == 1 )		3238166	0					
ANR	3239774	Condition	con -> bpi == 10 && con -> ncomp == 1	2692:16:92870:92902	3238166	0	True				
ANR	3239775	AndExpression	con -> bpi == 10 && con -> ncomp == 1		3238166	0		&&			
ANR	3239776	EqualityExpression	con -> bpi == 10		3238166	0		==			
ANR	3239777	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239778	Identifier	con		3238166	0					
ANR	3239779	Identifier	bpi		3238166	1					
ANR	3239780	PrimaryExpression	10		3238166	1					
ANR	3239781	EqualityExpression	con -> ncomp == 1		3238166	1		==			
ANR	3239782	PtrMemberAccess	con -> ncomp		3238166	0					
ANR	3239783	Identifier	con		3238166	0					
ANR	3239784	Identifier	ncomp		3238166	1					
ANR	3239785	PrimaryExpression	1		3238166	1					
ANR	3239786	CompoundStatement		202:8:8452:8452	3238166	1					
ANR	3239787	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		3238166	0					
ANR	3239788	ForInit	idx = 0 ;	2696:17:93128:93135	3238166	0	True				
ANR	3239789	AssignmentExpression	idx = 0		3238166	0		=			
ANR	3239790	Identifier	idx		3238166	0					
ANR	3239791	PrimaryExpression	0		3238166	1					
ANR	3239792	Condition	idx < trans	2696:26:93137:93147	3238166	1	True				
ANR	3239793	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239794	Identifier	idx		3238166	0					
ANR	3239795	Identifier	trans		3238166	1					
ANR	3239796	AssignmentExpression	idx += 1	2696:39:93150:93157	3238166	2	True	+=			
ANR	3239797	Identifier	idx		3238166	0					
ANR	3239798	PrimaryExpression	1		3238166	1					
ANR	3239799	CompoundStatement		206:16:8645:8688	3238166	3					
ANR	3239800	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + idx * dy ;	2697:16:93178:93221	3238166	0	True				
ANR	3239801	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + idx * dy		3238166	0					
ANR	3239802	IdentifierDeclType	uint16_t *		3238166	0					
ANR	3239803	Identifier	dp		3238166	1					
ANR	3239804	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + idx * dy		3238166	2		=			
ANR	3239805	Identifier	dp		3238166	0					
ANR	3239806	AdditiveExpression	( uint16_t * ) con -> buf + idx * dy		3238166	1		+			
ANR	3239807	CastExpression	( uint16_t * ) con -> buf		3238166	0					
ANR	3239808	CastTarget	uint16_t *		3238166	0					
ANR	3239809	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239810	Identifier	con		3238166	0					
ANR	3239811	Identifier	buf		3238166	1					
ANR	3239812	MultiplicativeExpression	idx * dy		3238166	1		*			
ANR	3239813	Identifier	idx		3238166	0					
ANR	3239814	Identifier	dy		3238166	1					
ANR	3239815	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		3238166	1					
ANR	3239816	ForInit	jdx = con -> left_pad * con -> ncomp ;	2698:20:93259:93289	3238166	0	True				
ANR	3239817	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		3238166	0		=			
ANR	3239818	Identifier	jdx		3238166	0					
ANR	3239819	MultiplicativeExpression	con -> left_pad * con -> ncomp		3238166	1		*			
ANR	3239820	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3239821	Identifier	con		3238166	0					
ANR	3239822	Identifier	left_pad		3238166	1					
ANR	3239823	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239824	Identifier	con		3238166	0					
ANR	3239825	Identifier	ncomp		3238166	1					
ANR	3239826	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2698:52:93291:93333	3238166	1	True				
ANR	3239827	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		3238166	0		<			
ANR	3239828	Identifier	jdx		3238166	0					
ANR	3239829	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		3238166	1		*			
ANR	3239830	AdditiveExpression	con -> wid + con -> left_pad		3238166	0		+			
ANR	3239831	PtrMemberAccess	con -> wid		3238166	0					
ANR	3239832	Identifier	con		3238166	0					
ANR	3239833	Identifier	wid		3238166	1					
ANR	3239834	PtrMemberAccess	con -> left_pad		3238166	1					
ANR	3239835	Identifier	con		3238166	0					
ANR	3239836	Identifier	left_pad		3238166	1					
ANR	3239837	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239838	Identifier	con		3238166	0					
ANR	3239839	Identifier	ncomp		3238166	1					
ANR	3239840	AssignmentExpression	jdx = jdx + con -> ncomp	2698:97:93336:93357	3238166	2	True	=			
ANR	3239841	Identifier	jdx		3238166	0					
ANR	3239842	AdditiveExpression	jdx + con -> ncomp		3238166	1		+			
ANR	3239843	Identifier	jdx		3238166	0					
ANR	3239844	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239845	Identifier	con		3238166	0					
ANR	3239846	Identifier	ncomp		3238166	1					
ANR	3239847	CompoundStatement		209:20:8865:8885	3238166	3					
ANR	3239848	IdentifierDeclStatement	uint16_t iResult = 0 ;	2700:20:93398:93418	3238166	0	True				
ANR	3239849	IdentifierDecl	iResult = 0		3238166	0					
ANR	3239850	IdentifierDeclType	uint16_t		3238166	0					
ANR	3239851	Identifier	iResult		3238166	1					
ANR	3239852	AssignmentExpression	iResult = 0		3238166	2		=			
ANR	3239853	Identifier	iResult		3238166	0					
ANR	3239854	PrimaryExpression	0		3238166	1					
ANR	3239855	ExpressionStatement	iResult = ( uint16_t ) dp [ jdx ]	2701:20:93440:93467	3238166	1	True				
ANR	3239856	AssignmentExpression	iResult = ( uint16_t ) dp [ jdx ]		3238166	0		=			
ANR	3239857	Identifier	iResult		3238166	0					
ANR	3239858	CastExpression	( uint16_t ) dp [ jdx ]		3238166	1					
ANR	3239859	CastTarget	uint16_t		3238166	0					
ANR	3239860	ArrayIndexing	dp [ jdx ]		3238166	1					
ANR	3239861	Identifier	dp		3238166	0					
ANR	3239862	Identifier	jdx		3238166	1					
ANR	3239863	ExpressionStatement	"write_uint16 ( con , & iResult , 1 )"	2702:20:93489:93519	3238166	2	True				
ANR	3239864	CallExpression	"write_uint16 ( con , & iResult , 1 )"		3238166	0					
ANR	3239865	Callee	write_uint16		3238166	0					
ANR	3239866	Identifier	write_uint16		3238166	0					
ANR	3239867	ArgumentList	con		3238166	1					
ANR	3239868	Argument	con		3238166	0					
ANR	3239869	Identifier	con		3238166	0					
ANR	3239870	Argument	& iResult		3238166	1					
ANR	3239871	UnaryOperationExpression	& iResult		3238166	0					
ANR	3239872	UnaryOperator	&		3238166	0					
ANR	3239873	Identifier	iResult		3238166	1					
ANR	3239874	Argument	1		3238166	2					
ANR	3239875	PrimaryExpression	1		3238166	0					
ANR	3239876	ElseStatement	else		3238166	0					
ANR	3239877	IfStatement	if ( con -> bpi == 16 )		3238166	0					
ANR	3239878	Condition	con -> bpi == 16	2706:16:93611:93622	3238166	0	True				
ANR	3239879	EqualityExpression	con -> bpi == 16		3238166	0		==			
ANR	3239880	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239881	Identifier	con		3238166	0					
ANR	3239882	Identifier	bpi		3238166	1					
ANR	3239883	PrimaryExpression	16		3238166	1					
ANR	3239884	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3238166	1					
ANR	3239885	ForInit	idx = first ;	2707:17:93642:93653	3238166	0	True				
ANR	3239886	AssignmentExpression	idx = first		3238166	0		=			
ANR	3239887	Identifier	idx		3238166	0					
ANR	3239888	Identifier	first		3238166	1					
ANR	3239889	Condition	idx < trans	2707:30:93655:93665	3238166	1	True				
ANR	3239890	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239891	Identifier	idx		3238166	0					
ANR	3239892	Identifier	trans		3238166	1					
ANR	3239893	AssignmentExpression	idx += 1	2707:43:93668:93675	3238166	2	True	+=			
ANR	3239894	Identifier	idx		3238166	0					
ANR	3239895	PrimaryExpression	1		3238166	1					
ANR	3239896	CompoundStatement		218:16:9301:9325	3238166	3					
ANR	3239897	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp ;	2708:16:93696:93766	3238166	0	True				
ANR	3239898	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	0					
ANR	3239899	IdentifierDeclType	uint16_t *		3238166	0					
ANR	3239900	Identifier	dp		3238166	1					
ANR	3239901	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	2		=			
ANR	3239902	Identifier	dp		3238166	0					
ANR	3239903	AdditiveExpression	( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	1		+			
ANR	3239904	CastExpression	( uint16_t * ) con -> buf		3238166	0					
ANR	3239905	CastTarget	uint16_t *		3238166	0					
ANR	3239906	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239907	Identifier	con		3238166	0					
ANR	3239908	Identifier	buf		3238166	1					
ANR	3239909	AdditiveExpression	idx * dy + con -> left_pad * con -> ncomp		3238166	1		+			
ANR	3239910	MultiplicativeExpression	idx * dy		3238166	0		*			
ANR	3239911	Identifier	idx		3238166	0					
ANR	3239912	Identifier	dy		3238166	1					
ANR	3239913	MultiplicativeExpression	con -> left_pad * con -> ncomp		3238166	1		*			
ANR	3239914	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3239915	Identifier	con		3238166	0					
ANR	3239916	Identifier	left_pad		3238166	1					
ANR	3239917	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239918	Identifier	con		3238166	0					
ANR	3239919	Identifier	ncomp		3238166	1					
ANR	3239920	IdentifierDeclStatement	int padComp = con -> ncomp ;	2709:16:93834:93858	3238166	1	True				
ANR	3239921	IdentifierDecl	padComp = con -> ncomp		3238166	0					
ANR	3239922	IdentifierDeclType	int		3238166	0					
ANR	3239923	Identifier	padComp		3238166	1					
ANR	3239924	AssignmentExpression	padComp = con -> ncomp		3238166	2		=			
ANR	3239925	Identifier	padComp		3238166	0					
ANR	3239926	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239927	Identifier	con		3238166	0					
ANR	3239928	Identifier	ncomp		3238166	1					
ANR	3239929	IfStatement	if ( con -> padBytes != 0 )		3238166	2					
ANR	3239930	Condition	con -> padBytes != 0	2710:19:93879:93896	3238166	0	True				
ANR	3239931	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3239932	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3239933	Identifier	con		3238166	0					
ANR	3239934	Identifier	padBytes		3238166	1					
ANR	3239935	PrimaryExpression	0		3238166	1					
ANR	3239936	ExpressionStatement	padComp ++	2711:20:93920:93930	3238166	1	True				
ANR	3239937	PostIncDecOperationExpression	padComp ++		3238166	0					
ANR	3239938	Identifier	padComp		3238166	0					
ANR	3239939	IncDec	++		3238166	1					
ANR	3239940	ExpressionStatement	"write_uint16 ( con , dp , con -> wid * padComp )"	2712:16:93948:93988	3238166	3	True				
ANR	3239941	CallExpression	"write_uint16 ( con , dp , con -> wid * padComp )"		3238166	0					
ANR	3239942	Callee	write_uint16		3238166	0					
ANR	3239943	Identifier	write_uint16		3238166	0					
ANR	3239944	ArgumentList	con		3238166	1					
ANR	3239945	Argument	con		3238166	0					
ANR	3239946	Identifier	con		3238166	0					
ANR	3239947	Argument	dp		3238166	1					
ANR	3239948	Identifier	dp		3238166	0					
ANR	3239949	Argument	con -> wid * padComp		3238166	2					
ANR	3239950	MultiplicativeExpression	con -> wid * padComp		3238166	0		*			
ANR	3239951	PtrMemberAccess	con -> wid		3238166	0					
ANR	3239952	Identifier	con		3238166	0					
ANR	3239953	Identifier	wid		3238166	1					
ANR	3239954	Identifier	padComp		3238166	1					
ANR	3239955	ElseStatement	else		3238166	0					
ANR	3239956	IfStatement	if ( con -> bpi == 32 )		3238166	0					
ANR	3239957	Condition	con -> bpi == 32	2714:16:94020:94033	3238166	0	True				
ANR	3239958	EqualityExpression	con -> bpi == 32		3238166	0		==			
ANR	3239959	PtrMemberAccess	con -> bpi		3238166	0					
ANR	3239960	Identifier	con		3238166	0					
ANR	3239961	Identifier	bpi		3238166	1					
ANR	3239962	PrimaryExpression	32		3238166	1					
ANR	3239963	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		3238166	1					
ANR	3239964	ForInit	idx = first ;	2715:17:94053:94064	3238166	0	True				
ANR	3239965	AssignmentExpression	idx = first		3238166	0		=			
ANR	3239966	Identifier	idx		3238166	0					
ANR	3239967	Identifier	first		3238166	1					
ANR	3239968	Condition	idx < trans	2715:30:94066:94076	3238166	1	True				
ANR	3239969	RelationalExpression	idx < trans		3238166	0		<			
ANR	3239970	Identifier	idx		3238166	0					
ANR	3239971	Identifier	trans		3238166	1					
ANR	3239972	AssignmentExpression	idx += 1	2715:43:94079:94086	3238166	2	True	+=			
ANR	3239973	Identifier	idx		3238166	0					
ANR	3239974	PrimaryExpression	1		3238166	1					
ANR	3239975	CompoundStatement		226:16:9662:9686	3238166	3					
ANR	3239976	IdentifierDeclStatement	uint32_t * dp = ( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp ;	2716:16:94107:94177	3238166	0	True				
ANR	3239977	IdentifierDecl	* dp = ( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	0					
ANR	3239978	IdentifierDeclType	uint32_t *		3238166	0					
ANR	3239979	Identifier	dp		3238166	1					
ANR	3239980	AssignmentExpression	* dp = ( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	2		=			
ANR	3239981	Identifier	dp		3238166	0					
ANR	3239982	AdditiveExpression	( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		3238166	1		+			
ANR	3239983	CastExpression	( uint32_t * ) con -> buf		3238166	0					
ANR	3239984	CastTarget	uint32_t *		3238166	0					
ANR	3239985	PtrMemberAccess	con -> buf		3238166	1					
ANR	3239986	Identifier	con		3238166	0					
ANR	3239987	Identifier	buf		3238166	1					
ANR	3239988	AdditiveExpression	idx * dy + con -> left_pad * con -> ncomp		3238166	1		+			
ANR	3239989	MultiplicativeExpression	idx * dy		3238166	0		*			
ANR	3239990	Identifier	idx		3238166	0					
ANR	3239991	Identifier	dy		3238166	1					
ANR	3239992	MultiplicativeExpression	con -> left_pad * con -> ncomp		3238166	1		*			
ANR	3239993	PtrMemberAccess	con -> left_pad		3238166	0					
ANR	3239994	Identifier	con		3238166	0					
ANR	3239995	Identifier	left_pad		3238166	1					
ANR	3239996	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3239997	Identifier	con		3238166	0					
ANR	3239998	Identifier	ncomp		3238166	1					
ANR	3239999	IdentifierDeclStatement	int padComp = con -> ncomp ;	2717:16:94195:94219	3238166	1	True				
ANR	3240000	IdentifierDecl	padComp = con -> ncomp		3238166	0					
ANR	3240001	IdentifierDeclType	int		3238166	0					
ANR	3240002	Identifier	padComp		3238166	1					
ANR	3240003	AssignmentExpression	padComp = con -> ncomp		3238166	2		=			
ANR	3240004	Identifier	padComp		3238166	0					
ANR	3240005	PtrMemberAccess	con -> ncomp		3238166	1					
ANR	3240006	Identifier	con		3238166	0					
ANR	3240007	Identifier	ncomp		3238166	1					
ANR	3240008	IfStatement	if ( con -> padBytes != 0 )		3238166	2					
ANR	3240009	Condition	con -> padBytes != 0	2718:19:94240:94257	3238166	0	True				
ANR	3240010	EqualityExpression	con -> padBytes != 0		3238166	0		!=			
ANR	3240011	PtrMemberAccess	con -> padBytes		3238166	0					
ANR	3240012	Identifier	con		3238166	0					
ANR	3240013	Identifier	padBytes		3238166	1					
ANR	3240014	PrimaryExpression	0		3238166	1					
ANR	3240015	ExpressionStatement	padComp ++	2719:20:94281:94291	3238166	1	True				
ANR	3240016	PostIncDecOperationExpression	padComp ++		3238166	0					
ANR	3240017	Identifier	padComp		3238166	0					
ANR	3240018	IncDec	++		3238166	1					
ANR	3240019	ExpressionStatement	"write_uint32 ( con , dp , con -> wid * padComp )"	2720:16:94309:94349	3238166	3	True				
ANR	3240020	CallExpression	"write_uint32 ( con , dp , con -> wid * padComp )"		3238166	0					
ANR	3240021	Callee	write_uint32		3238166	0					
ANR	3240022	Identifier	write_uint32		3238166	0					
ANR	3240023	ArgumentList	con		3238166	1					
ANR	3240024	Argument	con		3238166	0					
ANR	3240025	Identifier	con		3238166	0					
ANR	3240026	Argument	dp		3238166	1					
ANR	3240027	Identifier	dp		3238166	0					
ANR	3240028	Argument	con -> wid * padComp		3238166	2					
ANR	3240029	MultiplicativeExpression	con -> wid * padComp		3238166	0		*			
ANR	3240030	PtrMemberAccess	con -> wid		3238166	0					
ANR	3240031	Identifier	con		3238166	0					
ANR	3240032	Identifier	wid		3238166	1					
ANR	3240033	Identifier	padComp		3238166	1					
ANR	3240034	ElseStatement	else		3238166	0					
ANR	3240035	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2723:12:94390:94423	3238166	0	True				
ANR	3240036	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3238166	0					
ANR	3240037	Callee	assert		3238166	0					
ANR	3240038	Identifier	assert		3238166	0					
ANR	3240039	ArgumentList	"! ""Unsupported bitdepth\\n"""		3238166	1					
ANR	3240040	Argument	"! ""Unsupported bitdepth\\n"""		3238166	0					
ANR	3240041	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3238166	0					
ANR	3240042	UnaryOperator	!		3238166	0					
ANR	3240043	PrimaryExpression	"""Unsupported bitdepth\\n"""		3238166	1					
ANR	3240044	ReturnType	void		3238166	1					
ANR	3240045	Identifier	write_file		3238166	2					
ANR	3240046	ParameterList	"jxr_image_t image , int mx , int my , int * data"		3238166	3					
ANR	3240047	Parameter	jxr_image_t image	2491:16:84487:84503	3238166	0	True				
ANR	3240048	ParameterType	jxr_image_t		3238166	0					
ANR	3240049	Identifier	image		3238166	1					
ANR	3240050	Parameter	int mx	2491:35:84506:84511	3238166	1	True				
ANR	3240051	ParameterType	int		3238166	0					
ANR	3240052	Identifier	mx		3238166	1					
ANR	3240053	Parameter	int my	2491:43:84514:84519	3238166	2	True				
ANR	3240054	ParameterType	int		3238166	0					
ANR	3240055	Identifier	my		3238166	1					
ANR	3240056	Parameter	int * data	2491:51:84522:84529	3238166	3	True				
ANR	3240057	ParameterType	int *		3238166	0					
ANR	3240058	Identifier	data		3238166	1					
ANR	3240059	CFGEntryNode	ENTRY		3238166		True				
ANR	3240060	CFGExitNode	EXIT		3238166		True				
ANR	3240061	Symbol	JXR_BD1BLACK1		3238166						
ANR	3240062	Symbol	con		3238166						
ANR	3240063	Symbol	& iResult		3238166						
ANR	3240064	Symbol	data		3238166						
ANR	3240065	Symbol	con -> ncomp		3238166						
ANR	3240066	Symbol	strip_blocks		3238166						
ANR	3240067	Symbol	JXRC_FMT_32bppRGBE		3238166						
ANR	3240068	Symbol	dp		3238166						
ANR	3240069	Symbol	* six		3238166						
ANR	3240070	Symbol	isOutputYUV444		3238166						
ANR	3240071	Symbol	dix		3238166						
ANR	3240072	Symbol	image -> window_extra_top		3238166						
ANR	3240073	Symbol	dy		3238166						
ANR	3240074	Symbol	con -> bpi		3238166						
ANR	3240075	Symbol	* buff		3238166						
ANR	3240076	Symbol	jxr_get_pixel_format		3238166						
ANR	3240077	Symbol	con -> isBgr		3238166						
ANR	3240078	Symbol	jxr_get_ALPHACHANNEL_FLAG		3238166						
ANR	3240079	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		3238166						
ANR	3240080	Symbol	jxr_get_IMAGE_CHANNELS		3238166						
ANR	3240081	Symbol	con -> wid		3238166						
ANR	3240082	Symbol	image		3238166						
ANR	3240083	Symbol	* pl		3238166						
ANR	3240084	Symbol	padComp		3238166						
ANR	3240085	Symbol	con -> hei		3238166						
ANR	3240086	Symbol	mx		3238166						
ANR	3240087	Symbol	my		3238166						
ANR	3240088	Symbol	con -> top_pad		3238166						
ANR	3240089	Symbol	isOutputCMYKDirect		3238166						
ANR	3240090	Symbol	channels		3238166						
ANR	3240091	Symbol	con -> top_pad_remaining		3238166						
ANR	3240092	Symbol	idx		3238166						
ANR	3240093	Symbol	con -> buf		3238166						
ANR	3240094	Symbol	* image		3238166						
ANR	3240095	Symbol	trans		3238166						
ANR	3240096	Symbol	* dix		3238166						
ANR	3240097	Symbol	jxr_get_user_data		3238166						
ANR	3240098	Symbol	iResult		3238166						
ANR	3240099	Symbol	con -> left_pad		3238166						
ANR	3240100	Symbol	jxr_get_IMAGE_HEIGHT		3238166						
ANR	3240101	Symbol	isOutputYUV422		3238166						
ANR	3240102	Symbol	* dp		3238166						
ANR	3240103	Symbol	* con		3238166						
ANR	3240104	Symbol	isOutputYUV420		3238166						
ANR	3240105	Symbol	con -> padBytes		3238166						
ANR	3240106	Symbol	end		3238166						
ANR	3240107	Symbol	jxr_get_OUTPUT_BITDEPTH		3238166						
ANR	3240108	Symbol	jxr_get_IMAGE_WIDTH		3238166						
ANR	3240109	Symbol	image -> window_extra_left		3238166						
ANR	3240110	Symbol	con -> file		3238166						
ANR	3240111	Symbol	six		3238166						
ANR	3240112	Symbol	* jdx		3238166						
ANR	3240113	Symbol	image -> extended_width		3238166						
ANR	3240114	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		3238166						
ANR	3240115	Symbol	con -> alpha		3238166						
ANR	3240116	Symbol	pl		3238166						
ANR	3240117	Symbol	* data		3238166						
ANR	3240118	Symbol	buff		3238166						
ANR	3240119	Symbol	first		3238166						
ANR	3240120	Symbol	jdx		3238166						
ANR	3240121	Function	concatenate_primary_alpha	2728:0:94435:95501							
ANR	3240122	FunctionDef	"concatenate_primary_alpha (jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha)"		3240121	0					
ANR	3240123	CompoundStatement		2729:0:94517:95501	3240121	0					
ANR	3240124	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2730:4:94523:94573	3240121	0	True				
ANR	3240125	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3240121	0					
ANR	3240126	IdentifierDeclType	context *		3240121	0					
ANR	3240127	Identifier	con		3240121	1					
ANR	3240128	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3240121	2		=			
ANR	3240129	Identifier	con		3240121	0					
ANR	3240130	CastExpression	( context * ) jxr_get_user_data ( image )		3240121	1					
ANR	3240131	CastTarget	context *		3240121	0					
ANR	3240132	CallExpression	jxr_get_user_data ( image )		3240121	1					
ANR	3240133	Callee	jxr_get_user_data		3240121	0					
ANR	3240134	Identifier	jxr_get_user_data		3240121	0					
ANR	3240135	ArgumentList	image		3240121	1					
ANR	3240136	Argument	image		3240121	0					
ANR	3240137	Identifier	image		3240121	0					
ANR	3240138	IfStatement	if ( con -> file == 0 )		3240121	1					
ANR	3240139	Condition	con -> file == 0	2731:8:94583:94594	3240121	0	True				
ANR	3240140	EqualityExpression	con -> file == 0		3240121	0		==			
ANR	3240141	PtrMemberAccess	con -> file		3240121	0					
ANR	3240142	Identifier	con		3240121	0					
ANR	3240143	Identifier	file		3240121	1					
ANR	3240144	PrimaryExpression	0		3240121	1					
ANR	3240145	CompoundStatement		4:4:83:83	3240121	1					
ANR	3240146	ExpressionStatement	"set_pad_bytes ( con , image )"	2733:8:94611:94636	3240121	0	True				
ANR	3240147	CallExpression	"set_pad_bytes ( con , image )"		3240121	0					
ANR	3240148	Callee	set_pad_bytes		3240121	0					
ANR	3240149	Identifier	set_pad_bytes		3240121	0					
ANR	3240150	ArgumentList	con		3240121	1					
ANR	3240151	Argument	con		3240121	0					
ANR	3240152	Identifier	con		3240121	0					
ANR	3240153	Argument	image		3240121	1					
ANR	3240154	Identifier	image		3240121	0					
ANR	3240155	ExpressionStatement	con -> alpha = 1	2735:8:94698:94712	3240121	1	True				
ANR	3240156	AssignmentExpression	con -> alpha = 1		3240121	0		=			
ANR	3240157	PtrMemberAccess	con -> alpha		3240121	0					
ANR	3240158	Identifier	con		3240121	0					
ANR	3240159	Identifier	alpha		3240121	1					
ANR	3240160	PrimaryExpression	1		3240121	1					
ANR	3240161	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2736:8:94730:95005	3240121	2	True				
ANR	3240162	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3240121	0					
ANR	3240163	Callee	start_output_file		3240121	0					
ANR	3240164	Identifier	start_output_file		3240121	0					
ANR	3240165	ArgumentList	con		3240121	1					
ANR	3240166	Argument	con		3240121	0					
ANR	3240167	Identifier	con		3240121	0					
ANR	3240168	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3240121	1					
ANR	3240169	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3240121	0					
ANR	3240170	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3240121	0					
ANR	3240171	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3240121	0					
ANR	3240172	ArgumentList	image		3240121	1					
ANR	3240173	Argument	image		3240121	0					
ANR	3240174	Identifier	image		3240121	0					
ANR	3240175	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3240121	2					
ANR	3240176	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3240121	0					
ANR	3240177	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3240121	0					
ANR	3240178	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3240121	0					
ANR	3240179	ArgumentList	image		3240121	1					
ANR	3240180	Argument	image		3240121	0					
ANR	3240181	Identifier	image		3240121	0					
ANR	3240182	Argument	jxr_get_IMAGE_WIDTH ( image )		3240121	3					
ANR	3240183	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3240121	0					
ANR	3240184	Callee	jxr_get_IMAGE_WIDTH		3240121	0					
ANR	3240185	Identifier	jxr_get_IMAGE_WIDTH		3240121	0					
ANR	3240186	ArgumentList	image		3240121	1					
ANR	3240187	Argument	image		3240121	0					
ANR	3240188	Identifier	image		3240121	0					
ANR	3240189	Argument	jxr_get_IMAGE_HEIGHT ( image )		3240121	4					
ANR	3240190	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3240121	0					
ANR	3240191	Callee	jxr_get_IMAGE_HEIGHT		3240121	0					
ANR	3240192	Identifier	jxr_get_IMAGE_HEIGHT		3240121	0					
ANR	3240193	ArgumentList	image		3240121	1					
ANR	3240194	Argument	image		3240121	0					
ANR	3240195	Identifier	image		3240121	0					
ANR	3240196	Argument	jxr_get_IMAGE_CHANNELS ( image ) + 1		3240121	5					
ANR	3240197	AdditiveExpression	jxr_get_IMAGE_CHANNELS ( image ) + 1		3240121	0		+			
ANR	3240198	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3240121	0					
ANR	3240199	Callee	jxr_get_IMAGE_CHANNELS		3240121	0					
ANR	3240200	Identifier	jxr_get_IMAGE_CHANNELS		3240121	0					
ANR	3240201	ArgumentList	image		3240121	1					
ANR	3240202	Argument	image		3240121	0					
ANR	3240203	Identifier	image		3240121	0					
ANR	3240204	PrimaryExpression	1		3240121	1					
ANR	3240205	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3240121	6					
ANR	3240206	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3240121	0					
ANR	3240207	Callee	jxr_get_OUTPUT_BITDEPTH		3240121	0					
ANR	3240208	Identifier	jxr_get_OUTPUT_BITDEPTH		3240121	0					
ANR	3240209	ArgumentList	image		3240121	1					
ANR	3240210	Argument	image		3240121	0					
ANR	3240211	Identifier	image		3240121	0					
ANR	3240212	Argument	jxr_get_pixel_format ( image )		3240121	7					
ANR	3240213	CallExpression	jxr_get_pixel_format ( image )		3240121	0					
ANR	3240214	Callee	jxr_get_pixel_format		3240121	0					
ANR	3240215	Identifier	jxr_get_pixel_format		3240121	0					
ANR	3240216	ArgumentList	image		3240121	1					
ANR	3240217	Argument	image		3240121	0					
ANR	3240218	Identifier	image		3240121	0					
ANR	3240219	ExpressionStatement	"fseek ( fpPrimary , 0 , SEEK_END )"	2740:4:95017:95046	3240121	2	True				
ANR	3240220	CallExpression	"fseek ( fpPrimary , 0 , SEEK_END )"		3240121	0					
ANR	3240221	Callee	fseek		3240121	0					
ANR	3240222	Identifier	fseek		3240121	0					
ANR	3240223	ArgumentList	fpPrimary		3240121	1					
ANR	3240224	Argument	fpPrimary		3240121	0					
ANR	3240225	Identifier	fpPrimary		3240121	0					
ANR	3240226	Argument	0		3240121	1					
ANR	3240227	PrimaryExpression	0		3240121	0					
ANR	3240228	Argument	SEEK_END		3240121	2					
ANR	3240229	Identifier	SEEK_END		3240121	0					
ANR	3240230	IdentifierDeclStatement	long size = ftell ( fpPrimary ) ;	2741:4:95052:95080	3240121	3	True				
ANR	3240231	IdentifierDecl	size = ftell ( fpPrimary )		3240121	0					
ANR	3240232	IdentifierDeclType	long		3240121	0					
ANR	3240233	Identifier	size		3240121	1					
ANR	3240234	AssignmentExpression	size = ftell ( fpPrimary )		3240121	2		=			
ANR	3240235	Identifier	size		3240121	0					
ANR	3240236	CallExpression	ftell ( fpPrimary )		3240121	1					
ANR	3240237	Callee	ftell		3240121	0					
ANR	3240238	Identifier	ftell		3240121	0					
ANR	3240239	ArgumentList	fpPrimary		3240121	1					
ANR	3240240	Argument	fpPrimary		3240121	0					
ANR	3240241	Identifier	fpPrimary		3240121	0					
ANR	3240242	ExpressionStatement	"fseek ( fpPrimary , 0 , SEEK_SET )"	2742:4:95086:95115	3240121	4	True				
ANR	3240243	CallExpression	"fseek ( fpPrimary , 0 , SEEK_SET )"		3240121	0					
ANR	3240244	Callee	fseek		3240121	0					
ANR	3240245	Identifier	fseek		3240121	0					
ANR	3240246	ArgumentList	fpPrimary		3240121	1					
ANR	3240247	Argument	fpPrimary		3240121	0					
ANR	3240248	Identifier	fpPrimary		3240121	0					
ANR	3240249	Argument	0		3240121	1					
ANR	3240250	PrimaryExpression	0		3240121	0					
ANR	3240251	Argument	SEEK_SET		3240121	2					
ANR	3240252	Identifier	SEEK_SET		3240121	0					
ANR	3240253	IdentifierDeclStatement	long i ;	2743:4:95121:95127	3240121	5	True				
ANR	3240254	IdentifierDecl	i		3240121	0					
ANR	3240255	IdentifierDeclType	long		3240121	0					
ANR	3240256	Identifier	i		3240121	1					
ANR	3240257	ForStatement	for ( i = 0 ; i < size ; i ++ )		3240121	6					
ANR	3240258	ForInit	i = 0 ;	2744:8:95137:95142	3240121	0	True				
ANR	3240259	AssignmentExpression	i = 0		3240121	0		=			
ANR	3240260	Identifier	i		3240121	0					
ANR	3240261	PrimaryExpression	0		3240121	1					
ANR	3240262	Condition	i < size	2744:15:95144:95151	3240121	1	True				
ANR	3240263	RelationalExpression	i < size		3240121	0		<			
ANR	3240264	Identifier	i		3240121	0					
ANR	3240265	Identifier	size		3240121	1					
ANR	3240266	PostIncDecOperationExpression	i ++	2744:25:95154:95156	3240121	2	True				
ANR	3240267	Identifier	i		3240121	0					
ANR	3240268	IncDec	++		3240121	1					
ANR	3240269	CompoundStatement		18:8:655:666	3240121	3					
ANR	3240270	IdentifierDeclStatement	uint8_t val ;	2746:8:95173:95184	3240121	0	True				
ANR	3240271	IdentifierDecl	val		3240121	0					
ANR	3240272	IdentifierDeclType	uint8_t		3240121	0					
ANR	3240273	Identifier	val		3240121	1					
ANR	3240274	ExpressionStatement	"fread ( & val , 1 , 1 , fpPrimary )"	2747:8:95194:95222	3240121	1	True				
ANR	3240275	CallExpression	"fread ( & val , 1 , 1 , fpPrimary )"		3240121	0					
ANR	3240276	Callee	fread		3240121	0					
ANR	3240277	Identifier	fread		3240121	0					
ANR	3240278	ArgumentList	& val		3240121	1					
ANR	3240279	Argument	& val		3240121	0					
ANR	3240280	UnaryOperationExpression	& val		3240121	0					
ANR	3240281	UnaryOperator	&		3240121	0					
ANR	3240282	Identifier	val		3240121	1					
ANR	3240283	Argument	1		3240121	1					
ANR	3240284	PrimaryExpression	1		3240121	0					
ANR	3240285	Argument	1		3240121	2					
ANR	3240286	PrimaryExpression	1		3240121	0					
ANR	3240287	Argument	fpPrimary		3240121	3					
ANR	3240288	Identifier	fpPrimary		3240121	0					
ANR	3240289	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2748:8:95232:95261	3240121	2	True				
ANR	3240290	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3240121	0					
ANR	3240291	Callee	fwrite		3240121	0					
ANR	3240292	Identifier	fwrite		3240121	0					
ANR	3240293	ArgumentList	& val		3240121	1					
ANR	3240294	Argument	& val		3240121	0					
ANR	3240295	UnaryOperationExpression	& val		3240121	0					
ANR	3240296	UnaryOperator	&		3240121	0					
ANR	3240297	Identifier	val		3240121	1					
ANR	3240298	Argument	1		3240121	1					
ANR	3240299	PrimaryExpression	1		3240121	0					
ANR	3240300	Argument	1		3240121	2					
ANR	3240301	PrimaryExpression	1		3240121	0					
ANR	3240302	Argument	con -> file		3240121	3					
ANR	3240303	PtrMemberAccess	con -> file		3240121	0					
ANR	3240304	Identifier	con		3240121	0					
ANR	3240305	Identifier	file		3240121	1					
ANR	3240306	ExpressionStatement	"fseek ( fpAlpha , 0 , SEEK_END )"	2750:4:95273:95300	3240121	7	True				
ANR	3240307	CallExpression	"fseek ( fpAlpha , 0 , SEEK_END )"		3240121	0					
ANR	3240308	Callee	fseek		3240121	0					
ANR	3240309	Identifier	fseek		3240121	0					
ANR	3240310	ArgumentList	fpAlpha		3240121	1					
ANR	3240311	Argument	fpAlpha		3240121	0					
ANR	3240312	Identifier	fpAlpha		3240121	0					
ANR	3240313	Argument	0		3240121	1					
ANR	3240314	PrimaryExpression	0		3240121	0					
ANR	3240315	Argument	SEEK_END		3240121	2					
ANR	3240316	Identifier	SEEK_END		3240121	0					
ANR	3240317	ExpressionStatement	size = ftell ( fpAlpha )	2751:4:95306:95327	3240121	8	True				
ANR	3240318	AssignmentExpression	size = ftell ( fpAlpha )		3240121	0		=			
ANR	3240319	Identifier	size		3240121	0					
ANR	3240320	CallExpression	ftell ( fpAlpha )		3240121	1					
ANR	3240321	Callee	ftell		3240121	0					
ANR	3240322	Identifier	ftell		3240121	0					
ANR	3240323	ArgumentList	fpAlpha		3240121	1					
ANR	3240324	Argument	fpAlpha		3240121	0					
ANR	3240325	Identifier	fpAlpha		3240121	0					
ANR	3240326	ExpressionStatement	"fseek ( fpAlpha , 0 , SEEK_SET )"	2752:4:95333:95360	3240121	9	True				
ANR	3240327	CallExpression	"fseek ( fpAlpha , 0 , SEEK_SET )"		3240121	0					
ANR	3240328	Callee	fseek		3240121	0					
ANR	3240329	Identifier	fseek		3240121	0					
ANR	3240330	ArgumentList	fpAlpha		3240121	1					
ANR	3240331	Argument	fpAlpha		3240121	0					
ANR	3240332	Identifier	fpAlpha		3240121	0					
ANR	3240333	Argument	0		3240121	1					
ANR	3240334	PrimaryExpression	0		3240121	0					
ANR	3240335	Argument	SEEK_SET		3240121	2					
ANR	3240336	Identifier	SEEK_SET		3240121	0					
ANR	3240337	ForStatement	for ( i = 0 ; i < size ; i ++ )		3240121	10					
ANR	3240338	ForInit	i = 0 ;	2753:8:95370:95375	3240121	0	True				
ANR	3240339	AssignmentExpression	i = 0		3240121	0		=			
ANR	3240340	Identifier	i		3240121	0					
ANR	3240341	PrimaryExpression	0		3240121	1					
ANR	3240342	Condition	i < size	2753:15:95377:95384	3240121	1	True				
ANR	3240343	RelationalExpression	i < size		3240121	0		<			
ANR	3240344	Identifier	i		3240121	0					
ANR	3240345	Identifier	size		3240121	1					
ANR	3240346	PostIncDecOperationExpression	i ++	2753:25:95387:95389	3240121	2	True				
ANR	3240347	Identifier	i		3240121	0					
ANR	3240348	IncDec	++		3240121	1					
ANR	3240349	CompoundStatement		27:8:888:899	3240121	3					
ANR	3240350	IdentifierDeclStatement	uint8_t val ;	2755:8:95406:95417	3240121	0	True				
ANR	3240351	IdentifierDecl	val		3240121	0					
ANR	3240352	IdentifierDeclType	uint8_t		3240121	0					
ANR	3240353	Identifier	val		3240121	1					
ANR	3240354	ExpressionStatement	"fread ( & val , 1 , 1 , fpAlpha )"	2756:8:95427:95453	3240121	1	True				
ANR	3240355	CallExpression	"fread ( & val , 1 , 1 , fpAlpha )"		3240121	0					
ANR	3240356	Callee	fread		3240121	0					
ANR	3240357	Identifier	fread		3240121	0					
ANR	3240358	ArgumentList	& val		3240121	1					
ANR	3240359	Argument	& val		3240121	0					
ANR	3240360	UnaryOperationExpression	& val		3240121	0					
ANR	3240361	UnaryOperator	&		3240121	0					
ANR	3240362	Identifier	val		3240121	1					
ANR	3240363	Argument	1		3240121	1					
ANR	3240364	PrimaryExpression	1		3240121	0					
ANR	3240365	Argument	1		3240121	2					
ANR	3240366	PrimaryExpression	1		3240121	0					
ANR	3240367	Argument	fpAlpha		3240121	3					
ANR	3240368	Identifier	fpAlpha		3240121	0					
ANR	3240369	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2757:8:95463:95492	3240121	2	True				
ANR	3240370	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		3240121	0					
ANR	3240371	Callee	fwrite		3240121	0					
ANR	3240372	Identifier	fwrite		3240121	0					
ANR	3240373	ArgumentList	& val		3240121	1					
ANR	3240374	Argument	& val		3240121	0					
ANR	3240375	UnaryOperationExpression	& val		3240121	0					
ANR	3240376	UnaryOperator	&		3240121	0					
ANR	3240377	Identifier	val		3240121	1					
ANR	3240378	Argument	1		3240121	1					
ANR	3240379	PrimaryExpression	1		3240121	0					
ANR	3240380	Argument	1		3240121	2					
ANR	3240381	PrimaryExpression	1		3240121	0					
ANR	3240382	Argument	con -> file		3240121	3					
ANR	3240383	PtrMemberAccess	con -> file		3240121	0					
ANR	3240384	Identifier	con		3240121	0					
ANR	3240385	Identifier	file		3240121	1					
ANR	3240386	ReturnType	void		3240121	1					
ANR	3240387	Identifier	concatenate_primary_alpha		3240121	2					
ANR	3240388	ParameterList	"jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha"		3240121	3					
ANR	3240389	Parameter	jxr_image_t image	2728:31:94466:94482	3240121	0	True				
ANR	3240390	ParameterType	jxr_image_t		3240121	0					
ANR	3240391	Identifier	image		3240121	1					
ANR	3240392	Parameter	FILE * fpPrimary	2728:50:94485:94499	3240121	1	True				
ANR	3240393	ParameterType	FILE *		3240121	0					
ANR	3240394	Identifier	fpPrimary		3240121	1					
ANR	3240395	Parameter	FILE * fpAlpha	2728:67:94502:94514	3240121	2	True				
ANR	3240396	ParameterType	FILE *		3240121	0					
ANR	3240397	Identifier	fpAlpha		3240121	1					
ANR	3240398	CFGEntryNode	ENTRY		3240121		True				
ANR	3240399	CFGExitNode	EXIT		3240121		True				
ANR	3240400	Symbol	SEEK_SET		3240121						
ANR	3240401	Symbol	val		3240121						
ANR	3240402	Symbol	& val		3240121						
ANR	3240403	Symbol	image		3240121						
ANR	3240404	Symbol	con		3240121						
ANR	3240405	Symbol	con -> file		3240121						
ANR	3240406	Symbol	jxr_get_user_data		3240121						
ANR	3240407	Symbol	ftell		3240121						
ANR	3240408	Symbol	fpPrimary		3240121						
ANR	3240409	Symbol	i		3240121						
ANR	3240410	Symbol	SEEK_END		3240121						
ANR	3240411	Symbol	jxr_get_IMAGE_HEIGHT		3240121						
ANR	3240412	Symbol	* con		3240121						
ANR	3240413	Symbol	size		3240121						
ANR	3240414	Symbol	fpAlpha		3240121						
ANR	3240415	Symbol	jxr_get_pixel_format		3240121						
ANR	3240416	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		3240121						
ANR	3240417	Symbol	con -> alpha		3240121						
ANR	3240418	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		3240121						
ANR	3240419	Symbol	jxr_get_IMAGE_CHANNELS		3240121						
ANR	3240420	Symbol	jxr_get_OUTPUT_BITDEPTH		3240121						
ANR	3240421	Symbol	jxr_get_IMAGE_WIDTH		3240121						
ANR	3240422	Function	write_file_combine_primary_alpha	2763:0:95506:97690							
ANR	3240423	FunctionDef	"write_file_combine_primary_alpha (jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha)"		3240422	0					
ANR	3240424	CompoundStatement		2764:0:95595:97690	3240422	0					
ANR	3240425	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2765:4:95601:95651	3240422	0	True				
ANR	3240426	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		3240422	0					
ANR	3240427	IdentifierDeclType	context *		3240422	0					
ANR	3240428	Identifier	con		3240422	1					
ANR	3240429	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		3240422	2		=			
ANR	3240430	Identifier	con		3240422	0					
ANR	3240431	CastExpression	( context * ) jxr_get_user_data ( image )		3240422	1					
ANR	3240432	CastTarget	context *		3240422	0					
ANR	3240433	CallExpression	jxr_get_user_data ( image )		3240422	1					
ANR	3240434	Callee	jxr_get_user_data		3240422	0					
ANR	3240435	Identifier	jxr_get_user_data		3240422	0					
ANR	3240436	ArgumentList	image		3240422	1					
ANR	3240437	Argument	image		3240422	0					
ANR	3240438	Identifier	image		3240422	0					
ANR	3240439	IdentifierDeclStatement	int i ;	2766:4:95657:95662	3240422	1	True				
ANR	3240440	IdentifierDecl	i		3240422	0					
ANR	3240441	IdentifierDeclType	int		3240422	0					
ANR	3240442	Identifier	i		3240422	1					
ANR	3240443	IfStatement	if ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image ) )		3240422	2					
ANR	3240444	Condition	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )	2768:7:95672:95771	3240422	0	True				
ANR	3240445	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3240422	0		||			
ANR	3240446	CallExpression	isOutputYUV444 ( image )		3240422	0					
ANR	3240447	Callee	isOutputYUV444		3240422	0					
ANR	3240448	Identifier	isOutputYUV444		3240422	0					
ANR	3240449	ArgumentList	image		3240422	1					
ANR	3240450	Argument	image		3240422	0					
ANR	3240451	Identifier	image		3240422	0					
ANR	3240452	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3240422	1		||			
ANR	3240453	CallExpression	isOutputYUV422 ( image )		3240422	0					
ANR	3240454	Callee	isOutputYUV422		3240422	0					
ANR	3240455	Identifier	isOutputYUV422		3240422	0					
ANR	3240456	ArgumentList	image		3240422	1					
ANR	3240457	Argument	image		3240422	0					
ANR	3240458	Identifier	image		3240422	0					
ANR	3240459	OrExpression	isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3240422	1		||			
ANR	3240460	CallExpression	isOutputYUV420 ( image )		3240422	0					
ANR	3240461	Callee	isOutputYUV420		3240422	0					
ANR	3240462	Identifier	isOutputYUV420		3240422	0					
ANR	3240463	ArgumentList	image		3240422	1					
ANR	3240464	Argument	image		3240422	0					
ANR	3240465	Identifier	image		3240422	0					
ANR	3240466	CallExpression	isOutputCMYKDirect ( image )		3240422	1					
ANR	3240467	Callee	isOutputCMYKDirect		3240422	0					
ANR	3240468	Identifier	isOutputCMYKDirect		3240422	0					
ANR	3240469	ArgumentList	image		3240422	1					
ANR	3240470	Argument	image		3240422	0					
ANR	3240471	Identifier	image		3240422	0					
ANR	3240472	CompoundStatement		6:4:182:182	3240422	1					
ANR	3240473	ExpressionStatement	"concatenate_primary_alpha ( image , fpPrimary , fpAlpha )"	2770:8:95788:95840	3240422	0	True				
ANR	3240474	CallExpression	"concatenate_primary_alpha ( image , fpPrimary , fpAlpha )"		3240422	0					
ANR	3240475	Callee	concatenate_primary_alpha		3240422	0					
ANR	3240476	Identifier	concatenate_primary_alpha		3240422	0					
ANR	3240477	ArgumentList	image		3240422	1					
ANR	3240478	Argument	image		3240422	0					
ANR	3240479	Identifier	image		3240422	0					
ANR	3240480	Argument	fpPrimary		3240422	1					
ANR	3240481	Identifier	fpPrimary		3240422	0					
ANR	3240482	Argument	fpAlpha		3240422	2					
ANR	3240483	Identifier	fpAlpha		3240422	0					
ANR	3240484	ReturnStatement	return ;	2771:8:95850:95856	3240422	1	True				
ANR	3240485	IfStatement	if ( con -> file == 0 )		3240422	3					
ANR	3240486	Condition	con -> file == 0	2773:8:95872:95883	3240422	0	True				
ANR	3240487	EqualityExpression	con -> file == 0		3240422	0		==			
ANR	3240488	PtrMemberAccess	con -> file		3240422	0					
ANR	3240489	Identifier	con		3240422	0					
ANR	3240490	Identifier	file		3240422	1					
ANR	3240491	PrimaryExpression	0		3240422	1					
ANR	3240492	CompoundStatement		11:4:294:294	3240422	1					
ANR	3240493	ExpressionStatement	"set_pad_bytes ( con , image )"	2775:8:95900:95925	3240422	0	True				
ANR	3240494	CallExpression	"set_pad_bytes ( con , image )"		3240422	0					
ANR	3240495	Callee	set_pad_bytes		3240422	0					
ANR	3240496	Identifier	set_pad_bytes		3240422	0					
ANR	3240497	ArgumentList	con		3240422	1					
ANR	3240498	Argument	con		3240422	0					
ANR	3240499	Identifier	con		3240422	0					
ANR	3240500	Argument	image		3240422	1					
ANR	3240501	Identifier	image		3240422	0					
ANR	3240502	ExpressionStatement	con -> alpha = 1	2777:8:95987:96001	3240422	1	True				
ANR	3240503	AssignmentExpression	con -> alpha = 1		3240422	0		=			
ANR	3240504	PtrMemberAccess	con -> alpha		3240422	0					
ANR	3240505	Identifier	con		3240422	0					
ANR	3240506	Identifier	alpha		3240422	1					
ANR	3240507	PrimaryExpression	1		3240422	1					
ANR	3240508	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2778:8:96019:96294	3240422	2	True				
ANR	3240509	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		3240422	0					
ANR	3240510	Callee	start_output_file		3240422	0					
ANR	3240511	Identifier	start_output_file		3240422	0					
ANR	3240512	ArgumentList	con		3240422	1					
ANR	3240513	Argument	con		3240422	0					
ANR	3240514	Identifier	con		3240422	0					
ANR	3240515	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3240422	1					
ANR	3240516	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		3240422	0					
ANR	3240517	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		3240422	0					
ANR	3240518	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		3240422	0					
ANR	3240519	ArgumentList	image		3240422	1					
ANR	3240520	Argument	image		3240422	0					
ANR	3240521	Identifier	image		3240422	0					
ANR	3240522	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3240422	2					
ANR	3240523	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		3240422	0					
ANR	3240524	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		3240422	0					
ANR	3240525	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		3240422	0					
ANR	3240526	ArgumentList	image		3240422	1					
ANR	3240527	Argument	image		3240422	0					
ANR	3240528	Identifier	image		3240422	0					
ANR	3240529	Argument	jxr_get_IMAGE_WIDTH ( image )		3240422	3					
ANR	3240530	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3240422	0					
ANR	3240531	Callee	jxr_get_IMAGE_WIDTH		3240422	0					
ANR	3240532	Identifier	jxr_get_IMAGE_WIDTH		3240422	0					
ANR	3240533	ArgumentList	image		3240422	1					
ANR	3240534	Argument	image		3240422	0					
ANR	3240535	Identifier	image		3240422	0					
ANR	3240536	Argument	jxr_get_IMAGE_HEIGHT ( image )		3240422	4					
ANR	3240537	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3240422	0					
ANR	3240538	Callee	jxr_get_IMAGE_HEIGHT		3240422	0					
ANR	3240539	Identifier	jxr_get_IMAGE_HEIGHT		3240422	0					
ANR	3240540	ArgumentList	image		3240422	1					
ANR	3240541	Argument	image		3240422	0					
ANR	3240542	Identifier	image		3240422	0					
ANR	3240543	Argument	jxr_get_IMAGE_CHANNELS ( image ) + 1		3240422	5					
ANR	3240544	AdditiveExpression	jxr_get_IMAGE_CHANNELS ( image ) + 1		3240422	0		+			
ANR	3240545	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3240422	0					
ANR	3240546	Callee	jxr_get_IMAGE_CHANNELS		3240422	0					
ANR	3240547	Identifier	jxr_get_IMAGE_CHANNELS		3240422	0					
ANR	3240548	ArgumentList	image		3240422	1					
ANR	3240549	Argument	image		3240422	0					
ANR	3240550	Identifier	image		3240422	0					
ANR	3240551	PrimaryExpression	1		3240422	1					
ANR	3240552	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3240422	6					
ANR	3240553	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3240422	0					
ANR	3240554	Callee	jxr_get_OUTPUT_BITDEPTH		3240422	0					
ANR	3240555	Identifier	jxr_get_OUTPUT_BITDEPTH		3240422	0					
ANR	3240556	ArgumentList	image		3240422	1					
ANR	3240557	Argument	image		3240422	0					
ANR	3240558	Identifier	image		3240422	0					
ANR	3240559	Argument	jxr_get_pixel_format ( image )		3240422	7					
ANR	3240560	CallExpression	jxr_get_pixel_format ( image )		3240422	0					
ANR	3240561	Callee	jxr_get_pixel_format		3240422	0					
ANR	3240562	Identifier	jxr_get_pixel_format		3240422	0					
ANR	3240563	ArgumentList	image		3240422	1					
ANR	3240564	Argument	image		3240422	0					
ANR	3240565	Identifier	image		3240422	0					
ANR	3240566	IdentifierDeclStatement	int numPixels = jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image ) ;	2782:4:96306:96378	3240422	4	True				
ANR	3240567	IdentifierDecl	numPixels = jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image )		3240422	0					
ANR	3240568	IdentifierDeclType	int		3240422	0					
ANR	3240569	Identifier	numPixels		3240422	1					
ANR	3240570	AssignmentExpression	numPixels = jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image )		3240422	2		=			
ANR	3240571	Identifier	numPixels		3240422	0					
ANR	3240572	MultiplicativeExpression	jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image )		3240422	1		*			
ANR	3240573	CallExpression	jxr_get_IMAGE_WIDTH ( image )		3240422	0					
ANR	3240574	Callee	jxr_get_IMAGE_WIDTH		3240422	0					
ANR	3240575	Identifier	jxr_get_IMAGE_WIDTH		3240422	0					
ANR	3240576	ArgumentList	image		3240422	1					
ANR	3240577	Argument	image		3240422	0					
ANR	3240578	Identifier	image		3240422	0					
ANR	3240579	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		3240422	1					
ANR	3240580	Callee	jxr_get_IMAGE_HEIGHT		3240422	0					
ANR	3240581	Identifier	jxr_get_IMAGE_HEIGHT		3240422	0					
ANR	3240582	ArgumentList	image		3240422	1					
ANR	3240583	Argument	image		3240422	0					
ANR	3240584	Identifier	image		3240422	0					
ANR	3240585	IdentifierDeclStatement	int nPrimaryComp = jxr_get_IMAGE_CHANNELS ( image ) ;	2783:4:96384:96432	3240422	5	True				
ANR	3240586	IdentifierDecl	nPrimaryComp = jxr_get_IMAGE_CHANNELS ( image )		3240422	0					
ANR	3240587	IdentifierDeclType	int		3240422	0					
ANR	3240588	Identifier	nPrimaryComp		3240422	1					
ANR	3240589	AssignmentExpression	nPrimaryComp = jxr_get_IMAGE_CHANNELS ( image )		3240422	2		=			
ANR	3240590	Identifier	nPrimaryComp		3240422	0					
ANR	3240591	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		3240422	1					
ANR	3240592	Callee	jxr_get_IMAGE_CHANNELS		3240422	0					
ANR	3240593	Identifier	jxr_get_IMAGE_CHANNELS		3240422	0					
ANR	3240594	ArgumentList	image		3240422	1					
ANR	3240595	Argument	image		3240422	0					
ANR	3240596	Identifier	image		3240422	0					
ANR	3240597	IfStatement	if ( con -> padBytes )		3240422	6					
ANR	3240598	Condition	con -> padBytes	2784:7:96441:96453	3240422	0	True				
ANR	3240599	PtrMemberAccess	con -> padBytes		3240422	0					
ANR	3240600	Identifier	con		3240422	0					
ANR	3240601	Identifier	padBytes		3240422	1					
ANR	3240602	ExpressionStatement	nPrimaryComp ++	2785:8:96464:96479	3240422	1	True				
ANR	3240603	PostIncDecOperationExpression	nPrimaryComp ++		3240422	0					
ANR	3240604	Identifier	nPrimaryComp		3240422	0					
ANR	3240605	IncDec	++		3240422	1					
ANR	3240606	IfStatement	if ( con -> bpi == 8 )		3240422	7					
ANR	3240607	Condition	con -> bpi == 8	2786:8:96490:96502	3240422	0	True				
ANR	3240608	EqualityExpression	con -> bpi == 8		3240422	0		==			
ANR	3240609	PtrMemberAccess	con -> bpi		3240422	0					
ANR	3240610	Identifier	con		3240422	0					
ANR	3240611	Identifier	bpi		3240422	1					
ANR	3240612	PrimaryExpression	8		3240422	1					
ANR	3240613	CompoundStatement		23:23:909:909	3240422	1					
ANR	3240614	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3240422	0					
ANR	3240615	ForInit	i = 0 ;	2787:13:96520:96523	3240422	0	True				
ANR	3240616	AssignmentExpression	i = 0		3240422	0		=			
ANR	3240617	Identifier	i		3240422	0					
ANR	3240618	PrimaryExpression	0		3240422	1					
ANR	3240619	Condition	i < numPixels	2787:18:96525:96535	3240422	1	True				
ANR	3240620	RelationalExpression	i < numPixels		3240422	0		<			
ANR	3240621	Identifier	i		3240422	0					
ANR	3240622	Identifier	numPixels		3240422	1					
ANR	3240623	PostIncDecOperationExpression	i ++	2787:31:96538:96540	3240422	2	True				
ANR	3240624	Identifier	i		3240422	0					
ANR	3240625	IncDec	++		3240422	1					
ANR	3240626	CompoundStatement		25:12:961:1004	3240422	3					
ANR	3240627	IdentifierDeclStatement	unsigned char combine [ MAX_CHANNELS + 1 + 1 ] ;	2788:12:96557:96600	3240422	0	True				
ANR	3240628	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		3240422	0					
ANR	3240629	IdentifierDeclType	unsigned char [ MAX_CHANNELS + 1 + 1 ]		3240422	0					
ANR	3240630	Identifier	combine		3240422	1					
ANR	3240631	AdditiveExpression	MAX_CHANNELS + 1 + 1		3240422	2		+			
ANR	3240632	Identifier	MAX_CHANNELS		3240422	0					
ANR	3240633	AdditiveExpression	1 + 1		3240422	1		+			
ANR	3240634	PrimaryExpression	1		3240422	0					
ANR	3240635	PrimaryExpression	1		3240422	1					
ANR	3240636	ExpressionStatement	"fread ( & combine [ 0 ] , sizeof ( char ) , nPrimaryComp , fpPrimary )"	2789:12:96655:96710	3240422	1	True				
ANR	3240637	CallExpression	"fread ( & combine [ 0 ] , sizeof ( char ) , nPrimaryComp , fpPrimary )"		3240422	0					
ANR	3240638	Callee	fread		3240422	0					
ANR	3240639	Identifier	fread		3240422	0					
ANR	3240640	ArgumentList	& combine [ 0 ]		3240422	1					
ANR	3240641	Argument	& combine [ 0 ]		3240422	0					
ANR	3240642	UnaryOperationExpression	& combine [ 0 ]		3240422	0					
ANR	3240643	UnaryOperator	&		3240422	0					
ANR	3240644	ArrayIndexing	combine [ 0 ]		3240422	1					
ANR	3240645	Identifier	combine		3240422	0					
ANR	3240646	PrimaryExpression	0		3240422	1					
ANR	3240647	Argument	sizeof ( char )		3240422	1					
ANR	3240648	SizeofExpression	sizeof ( char )		3240422	0					
ANR	3240649	Sizeof	sizeof		3240422	0					
ANR	3240650	SizeofOperand	char		3240422	1					
ANR	3240651	Argument	nPrimaryComp		3240422	2					
ANR	3240652	Identifier	nPrimaryComp		3240422	0					
ANR	3240653	Argument	fpPrimary		3240422	3					
ANR	3240654	Identifier	fpPrimary		3240422	0					
ANR	3240655	ExpressionStatement	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( char ) , 1 , fpAlpha )"	2790:12:96724:96779	3240422	2	True				
ANR	3240656	CallExpression	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( char ) , 1 , fpAlpha )"		3240422	0					
ANR	3240657	Callee	fread		3240422	0					
ANR	3240658	Identifier	fread		3240422	0					
ANR	3240659	ArgumentList	& ( combine [ nPrimaryComp ] )		3240422	1					
ANR	3240660	Argument	& ( combine [ nPrimaryComp ] )		3240422	0					
ANR	3240661	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		3240422	0					
ANR	3240662	UnaryOperator	&		3240422	0					
ANR	3240663	ArrayIndexing	combine [ nPrimaryComp ]		3240422	1					
ANR	3240664	Identifier	combine		3240422	0					
ANR	3240665	Identifier	nPrimaryComp		3240422	1					
ANR	3240666	Argument	sizeof ( char )		3240422	1					
ANR	3240667	SizeofExpression	sizeof ( char )		3240422	0					
ANR	3240668	Sizeof	sizeof		3240422	0					
ANR	3240669	SizeofOperand	char		3240422	1					
ANR	3240670	Argument	1		3240422	2					
ANR	3240671	PrimaryExpression	1		3240422	0					
ANR	3240672	Argument	fpAlpha		3240422	3					
ANR	3240673	Identifier	fpAlpha		3240422	0					
ANR	3240674	ExpressionStatement	"write_uint8 ( con , combine , nPrimaryComp + 1 )"	2791:12:96793:96834	3240422	3	True				
ANR	3240675	CallExpression	"write_uint8 ( con , combine , nPrimaryComp + 1 )"		3240422	0					
ANR	3240676	Callee	write_uint8		3240422	0					
ANR	3240677	Identifier	write_uint8		3240422	0					
ANR	3240678	ArgumentList	con		3240422	1					
ANR	3240679	Argument	con		3240422	0					
ANR	3240680	Identifier	con		3240422	0					
ANR	3240681	Argument	combine		3240422	1					
ANR	3240682	Identifier	combine		3240422	0					
ANR	3240683	Argument	nPrimaryComp + 1		3240422	2					
ANR	3240684	AdditiveExpression	nPrimaryComp + 1		3240422	0		+			
ANR	3240685	Identifier	nPrimaryComp		3240422	0					
ANR	3240686	PrimaryExpression	1		3240422	1					
ANR	3240687	ElseStatement	else		3240422	0					
ANR	3240688	IfStatement	if ( con -> bpi == 16 )		3240422	0					
ANR	3240689	Condition	con -> bpi == 16	2794:12:96871:96884	3240422	0	True				
ANR	3240690	EqualityExpression	con -> bpi == 16		3240422	0		==			
ANR	3240691	PtrMemberAccess	con -> bpi		3240422	0					
ANR	3240692	Identifier	con		3240422	0					
ANR	3240693	Identifier	bpi		3240422	1					
ANR	3240694	PrimaryExpression	16		3240422	1					
ANR	3240695	CompoundStatement		32:4:1295:1295	3240422	1					
ANR	3240696	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3240422	0					
ANR	3240697	ForInit	i = 0 ;	2796:13:96906:96909	3240422	0	True				
ANR	3240698	AssignmentExpression	i = 0		3240422	0		=			
ANR	3240699	Identifier	i		3240422	0					
ANR	3240700	PrimaryExpression	0		3240422	1					
ANR	3240701	Condition	i < numPixels	2796:18:96911:96921	3240422	1	True				
ANR	3240702	RelationalExpression	i < numPixels		3240422	0		<			
ANR	3240703	Identifier	i		3240422	0					
ANR	3240704	Identifier	numPixels		3240422	1					
ANR	3240705	PostIncDecOperationExpression	i ++	2796:31:96924:96926	3240422	2	True				
ANR	3240706	Identifier	i		3240422	0					
ANR	3240707	IncDec	++		3240422	1					
ANR	3240708	CompoundStatement		34:12:1347:1385	3240422	3					
ANR	3240709	IdentifierDeclStatement	uint16_t combine [ MAX_CHANNELS + 1 + 1 ] ;	2797:12:96943:96981	3240422	0	True				
ANR	3240710	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		3240422	0					
ANR	3240711	IdentifierDeclType	uint16_t [ MAX_CHANNELS + 1 + 1 ]		3240422	0					
ANR	3240712	Identifier	combine		3240422	1					
ANR	3240713	AdditiveExpression	MAX_CHANNELS + 1 + 1		3240422	2		+			
ANR	3240714	Identifier	MAX_CHANNELS		3240422	0					
ANR	3240715	AdditiveExpression	1 + 1		3240422	1		+			
ANR	3240716	PrimaryExpression	1		3240422	0					
ANR	3240717	PrimaryExpression	1		3240422	1					
ANR	3240718	ExpressionStatement	"fread ( & combine [ 0 ] , sizeof ( uint16_t ) , nPrimaryComp , fpPrimary )"	2798:12:97036:97095	3240422	1	True				
ANR	3240719	CallExpression	"fread ( & combine [ 0 ] , sizeof ( uint16_t ) , nPrimaryComp , fpPrimary )"		3240422	0					
ANR	3240720	Callee	fread		3240422	0					
ANR	3240721	Identifier	fread		3240422	0					
ANR	3240722	ArgumentList	& combine [ 0 ]		3240422	1					
ANR	3240723	Argument	& combine [ 0 ]		3240422	0					
ANR	3240724	UnaryOperationExpression	& combine [ 0 ]		3240422	0					
ANR	3240725	UnaryOperator	&		3240422	0					
ANR	3240726	ArrayIndexing	combine [ 0 ]		3240422	1					
ANR	3240727	Identifier	combine		3240422	0					
ANR	3240728	PrimaryExpression	0		3240422	1					
ANR	3240729	Argument	sizeof ( uint16_t )		3240422	1					
ANR	3240730	SizeofExpression	sizeof ( uint16_t )		3240422	0					
ANR	3240731	Sizeof	sizeof		3240422	0					
ANR	3240732	SizeofOperand	uint16_t		3240422	1					
ANR	3240733	Argument	nPrimaryComp		3240422	2					
ANR	3240734	Identifier	nPrimaryComp		3240422	0					
ANR	3240735	Argument	fpPrimary		3240422	3					
ANR	3240736	Identifier	fpPrimary		3240422	0					
ANR	3240737	ExpressionStatement	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint16_t ) , 1 , fpAlpha )"	2799:12:97109:97168	3240422	2	True				
ANR	3240738	CallExpression	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint16_t ) , 1 , fpAlpha )"		3240422	0					
ANR	3240739	Callee	fread		3240422	0					
ANR	3240740	Identifier	fread		3240422	0					
ANR	3240741	ArgumentList	& ( combine [ nPrimaryComp ] )		3240422	1					
ANR	3240742	Argument	& ( combine [ nPrimaryComp ] )		3240422	0					
ANR	3240743	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		3240422	0					
ANR	3240744	UnaryOperator	&		3240422	0					
ANR	3240745	ArrayIndexing	combine [ nPrimaryComp ]		3240422	1					
ANR	3240746	Identifier	combine		3240422	0					
ANR	3240747	Identifier	nPrimaryComp		3240422	1					
ANR	3240748	Argument	sizeof ( uint16_t )		3240422	1					
ANR	3240749	SizeofExpression	sizeof ( uint16_t )		3240422	0					
ANR	3240750	Sizeof	sizeof		3240422	0					
ANR	3240751	SizeofOperand	uint16_t		3240422	1					
ANR	3240752	Argument	1		3240422	2					
ANR	3240753	PrimaryExpression	1		3240422	0					
ANR	3240754	Argument	fpAlpha		3240422	3					
ANR	3240755	Identifier	fpAlpha		3240422	0					
ANR	3240756	ExpressionStatement	"write_uint16 ( con , combine , nPrimaryComp + 1 )"	2800:12:97182:97224	3240422	3	True				
ANR	3240757	CallExpression	"write_uint16 ( con , combine , nPrimaryComp + 1 )"		3240422	0					
ANR	3240758	Callee	write_uint16		3240422	0					
ANR	3240759	Identifier	write_uint16		3240422	0					
ANR	3240760	ArgumentList	con		3240422	1					
ANR	3240761	Argument	con		3240422	0					
ANR	3240762	Identifier	con		3240422	0					
ANR	3240763	Argument	combine		3240422	1					
ANR	3240764	Identifier	combine		3240422	0					
ANR	3240765	Argument	nPrimaryComp + 1		3240422	2					
ANR	3240766	AdditiveExpression	nPrimaryComp + 1		3240422	0		+			
ANR	3240767	Identifier	nPrimaryComp		3240422	0					
ANR	3240768	PrimaryExpression	1		3240422	1					
ANR	3240769	ElseStatement	else		3240422	0					
ANR	3240770	IfStatement	if ( con -> bpi == 32 )		3240422	0					
ANR	3240771	Condition	con -> bpi == 32	2803:12:97261:97274	3240422	0	True				
ANR	3240772	EqualityExpression	con -> bpi == 32		3240422	0		==			
ANR	3240773	PtrMemberAccess	con -> bpi		3240422	0					
ANR	3240774	Identifier	con		3240422	0					
ANR	3240775	Identifier	bpi		3240422	1					
ANR	3240776	PrimaryExpression	32		3240422	1					
ANR	3240777	CompoundStatement		41:4:1685:1685	3240422	1					
ANR	3240778	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3240422	0					
ANR	3240779	ForInit	i = 0 ;	2805:13:97296:97299	3240422	0	True				
ANR	3240780	AssignmentExpression	i = 0		3240422	0		=			
ANR	3240781	Identifier	i		3240422	0					
ANR	3240782	PrimaryExpression	0		3240422	1					
ANR	3240783	Condition	i < numPixels	2805:18:97301:97311	3240422	1	True				
ANR	3240784	RelationalExpression	i < numPixels		3240422	0		<			
ANR	3240785	Identifier	i		3240422	0					
ANR	3240786	Identifier	numPixels		3240422	1					
ANR	3240787	PostIncDecOperationExpression	i ++	2805:31:97314:97316	3240422	2	True				
ANR	3240788	Identifier	i		3240422	0					
ANR	3240789	IncDec	++		3240422	1					
ANR	3240790	CompoundStatement		43:12:1737:1775	3240422	3					
ANR	3240791	IdentifierDeclStatement	uint32_t combine [ MAX_CHANNELS + 1 + 1 ] ;	2806:12:97333:97371	3240422	0	True				
ANR	3240792	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		3240422	0					
ANR	3240793	IdentifierDeclType	uint32_t [ MAX_CHANNELS + 1 + 1 ]		3240422	0					
ANR	3240794	Identifier	combine		3240422	1					
ANR	3240795	AdditiveExpression	MAX_CHANNELS + 1 + 1		3240422	2		+			
ANR	3240796	Identifier	MAX_CHANNELS		3240422	0					
ANR	3240797	AdditiveExpression	1 + 1		3240422	1		+			
ANR	3240798	PrimaryExpression	1		3240422	0					
ANR	3240799	PrimaryExpression	1		3240422	1					
ANR	3240800	ExpressionStatement	"fread ( & combine [ 0 ] , sizeof ( uint32_t ) , nPrimaryComp , fpPrimary )"	2807:12:97426:97485	3240422	1	True				
ANR	3240801	CallExpression	"fread ( & combine [ 0 ] , sizeof ( uint32_t ) , nPrimaryComp , fpPrimary )"		3240422	0					
ANR	3240802	Callee	fread		3240422	0					
ANR	3240803	Identifier	fread		3240422	0					
ANR	3240804	ArgumentList	& combine [ 0 ]		3240422	1					
ANR	3240805	Argument	& combine [ 0 ]		3240422	0					
ANR	3240806	UnaryOperationExpression	& combine [ 0 ]		3240422	0					
ANR	3240807	UnaryOperator	&		3240422	0					
ANR	3240808	ArrayIndexing	combine [ 0 ]		3240422	1					
ANR	3240809	Identifier	combine		3240422	0					
ANR	3240810	PrimaryExpression	0		3240422	1					
ANR	3240811	Argument	sizeof ( uint32_t )		3240422	1					
ANR	3240812	SizeofExpression	sizeof ( uint32_t )		3240422	0					
ANR	3240813	Sizeof	sizeof		3240422	0					
ANR	3240814	SizeofOperand	uint32_t		3240422	1					
ANR	3240815	Argument	nPrimaryComp		3240422	2					
ANR	3240816	Identifier	nPrimaryComp		3240422	0					
ANR	3240817	Argument	fpPrimary		3240422	3					
ANR	3240818	Identifier	fpPrimary		3240422	0					
ANR	3240819	ExpressionStatement	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint32_t ) , 1 , fpAlpha )"	2808:12:97499:97558	3240422	2	True				
ANR	3240820	CallExpression	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint32_t ) , 1 , fpAlpha )"		3240422	0					
ANR	3240821	Callee	fread		3240422	0					
ANR	3240822	Identifier	fread		3240422	0					
ANR	3240823	ArgumentList	& ( combine [ nPrimaryComp ] )		3240422	1					
ANR	3240824	Argument	& ( combine [ nPrimaryComp ] )		3240422	0					
ANR	3240825	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		3240422	0					
ANR	3240826	UnaryOperator	&		3240422	0					
ANR	3240827	ArrayIndexing	combine [ nPrimaryComp ]		3240422	1					
ANR	3240828	Identifier	combine		3240422	0					
ANR	3240829	Identifier	nPrimaryComp		3240422	1					
ANR	3240830	Argument	sizeof ( uint32_t )		3240422	1					
ANR	3240831	SizeofExpression	sizeof ( uint32_t )		3240422	0					
ANR	3240832	Sizeof	sizeof		3240422	0					
ANR	3240833	SizeofOperand	uint32_t		3240422	1					
ANR	3240834	Argument	1		3240422	2					
ANR	3240835	PrimaryExpression	1		3240422	0					
ANR	3240836	Argument	fpAlpha		3240422	3					
ANR	3240837	Identifier	fpAlpha		3240422	0					
ANR	3240838	ExpressionStatement	"write_uint32 ( con , combine , nPrimaryComp + 1 )"	2809:12:97572:97613	3240422	3	True				
ANR	3240839	CallExpression	"write_uint32 ( con , combine , nPrimaryComp + 1 )"		3240422	0					
ANR	3240840	Callee	write_uint32		3240422	0					
ANR	3240841	Identifier	write_uint32		3240422	0					
ANR	3240842	ArgumentList	con		3240422	1					
ANR	3240843	Argument	con		3240422	0					
ANR	3240844	Identifier	con		3240422	0					
ANR	3240845	Argument	combine		3240422	1					
ANR	3240846	Identifier	combine		3240422	0					
ANR	3240847	Argument	nPrimaryComp + 1		3240422	2					
ANR	3240848	AdditiveExpression	nPrimaryComp + 1		3240422	0		+			
ANR	3240849	Identifier	nPrimaryComp		3240422	0					
ANR	3240850	PrimaryExpression	1		3240422	1					
ANR	3240851	ElseStatement	else		3240422	0					
ANR	3240852	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2813:8:97655:97688	3240422	0	True				
ANR	3240853	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3240422	0					
ANR	3240854	Callee	assert		3240422	0					
ANR	3240855	Identifier	assert		3240422	0					
ANR	3240856	ArgumentList	"! ""Unsupported bitdepth\\n"""		3240422	1					
ANR	3240857	Argument	"! ""Unsupported bitdepth\\n"""		3240422	0					
ANR	3240858	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3240422	0					
ANR	3240859	UnaryOperator	!		3240422	0					
ANR	3240860	PrimaryExpression	"""Unsupported bitdepth\\n"""		3240422	1					
ANR	3240861	ReturnType	void		3240422	1					
ANR	3240862	Identifier	write_file_combine_primary_alpha		3240422	2					
ANR	3240863	ParameterList	"jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha"		3240422	3					
ANR	3240864	Parameter	jxr_image_t image	2763:38:95544:95560	3240422	0	True				
ANR	3240865	ParameterType	jxr_image_t		3240422	0					
ANR	3240866	Identifier	image		3240422	1					
ANR	3240867	Parameter	FILE * fpPrimary	2763:57:95563:95577	3240422	1	True				
ANR	3240868	ParameterType	FILE *		3240422	0					
ANR	3240869	Identifier	fpPrimary		3240422	1					
ANR	3240870	Parameter	FILE * fpAlpha	2763:74:95580:95592	3240422	2	True				
ANR	3240871	ParameterType	FILE *		3240422	0					
ANR	3240872	Identifier	fpAlpha		3240422	1					
ANR	3240873	CFGEntryNode	ENTRY		3240422		True				
ANR	3240874	CFGExitNode	EXIT		3240422		True				
ANR	3240875	Symbol	con		3240422						
ANR	3240876	Symbol	jxr_get_user_data		3240422						
ANR	3240877	Symbol	numPixels		3240422						
ANR	3240878	Symbol	jxr_get_IMAGE_HEIGHT		3240422						
ANR	3240879	Symbol	isOutputYUV444		3240422						
ANR	3240880	Symbol	isOutputYUV422		3240422						
ANR	3240881	Symbol	* con		3240422						
ANR	3240882	Symbol	fpAlpha		3240422						
ANR	3240883	Symbol	con -> bpi		3240422						
ANR	3240884	Symbol	jxr_get_pixel_format		3240422						
ANR	3240885	Symbol	isOutputYUV420		3240422						
ANR	3240886	Symbol	con -> padBytes		3240422						
ANR	3240887	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		3240422						
ANR	3240888	Symbol	jxr_get_IMAGE_CHANNELS		3240422						
ANR	3240889	Symbol	jxr_get_OUTPUT_BITDEPTH		3240422						
ANR	3240890	Symbol	jxr_get_IMAGE_WIDTH		3240422						
ANR	3240891	Symbol	combine		3240422						
ANR	3240892	Symbol	image		3240422						
ANR	3240893	Symbol	nPrimaryComp		3240422						
ANR	3240894	Symbol	con -> file		3240422						
ANR	3240895	Symbol	fpPrimary		3240422						
ANR	3240896	Symbol	i		3240422						
ANR	3240897	Symbol	isOutputCMYKDirect		3240422						
ANR	3240898	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		3240422						
ANR	3240899	Symbol	con -> alpha		3240422						
ANR	3240900	Function	split_primary_alpha	2817:0:97694:101149							
ANR	3240901	FunctionDef	"split_primary_alpha (jxr_image_t image , void * input_handle , context * con_primary , context * con_alpha , jxr_container_t container)"		3240900	0					
ANR	3240902	CompoundStatement		2818:0:97826:101149	3240900	0					
ANR	3240903	IdentifierDeclStatement	"int wid , hei , ncomp , bpi ;"	2820:4:97866:97890	3240900	0	True				
ANR	3240904	IdentifierDecl	wid		3240900	0					
ANR	3240905	IdentifierDeclType	int		3240900	0					
ANR	3240906	Identifier	wid		3240900	1					
ANR	3240907	IdentifierDecl	hei		3240900	1					
ANR	3240908	IdentifierDeclType	int		3240900	0					
ANR	3240909	Identifier	hei		3240900	1					
ANR	3240910	IdentifierDecl	ncomp		3240900	2					
ANR	3240911	IdentifierDeclType	int		3240900	0					
ANR	3240912	Identifier	ncomp		3240900	1					
ANR	3240913	IdentifierDecl	bpi		3240900	3					
ANR	3240914	IdentifierDeclType	int		3240900	0					
ANR	3240915	Identifier	bpi		3240900	1					
ANR	3240916	IdentifierDeclStatement	"short sf , photometric ;"	2821:4:97896:97917	3240900	1	True				
ANR	3240917	IdentifierDecl	sf		3240900	0					
ANR	3240918	IdentifierDeclType	short		3240900	0					
ANR	3240919	Identifier	sf		3240900	1					
ANR	3240920	IdentifierDecl	photometric		3240900	1					
ANR	3240921	IdentifierDeclType	short		3240900	0					
ANR	3240922	Identifier	photometric		3240900	1					
ANR	3240923	IdentifierDeclStatement	int padBytes ;	2822:4:97923:97935	3240900	2	True				
ANR	3240924	IdentifierDecl	padBytes		3240900	0					
ANR	3240925	IdentifierDeclType	int		3240900	0					
ANR	3240926	Identifier	padBytes		3240900	1					
ANR	3240927	ExpressionStatement	"get_file_parameters ( input_handle , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"	2824:4:97942:98031	3240900	3	True				
ANR	3240928	CallExpression	"get_file_parameters ( input_handle , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"		3240900	0					
ANR	3240929	Callee	get_file_parameters		3240900	0					
ANR	3240930	Identifier	get_file_parameters		3240900	0					
ANR	3240931	ArgumentList	input_handle		3240900	1					
ANR	3240932	Argument	input_handle		3240900	0					
ANR	3240933	Identifier	input_handle		3240900	0					
ANR	3240934	Argument	& wid		3240900	1					
ANR	3240935	UnaryOperationExpression	& wid		3240900	0					
ANR	3240936	UnaryOperator	&		3240900	0					
ANR	3240937	Identifier	wid		3240900	1					
ANR	3240938	Argument	& hei		3240900	2					
ANR	3240939	UnaryOperationExpression	& hei		3240900	0					
ANR	3240940	UnaryOperator	&		3240900	0					
ANR	3240941	Identifier	hei		3240900	1					
ANR	3240942	Argument	& ncomp		3240900	3					
ANR	3240943	UnaryOperationExpression	& ncomp		3240900	0					
ANR	3240944	UnaryOperator	&		3240900	0					
ANR	3240945	Identifier	ncomp		3240900	1					
ANR	3240946	Argument	& bpi		3240900	4					
ANR	3240947	UnaryOperationExpression	& bpi		3240900	0					
ANR	3240948	UnaryOperator	&		3240900	0					
ANR	3240949	Identifier	bpi		3240900	1					
ANR	3240950	Argument	& sf		3240900	5					
ANR	3240951	UnaryOperationExpression	& sf		3240900	0					
ANR	3240952	UnaryOperator	&		3240900	0					
ANR	3240953	Identifier	sf		3240900	1					
ANR	3240954	Argument	& photometric		3240900	6					
ANR	3240955	UnaryOperationExpression	& photometric		3240900	0					
ANR	3240956	UnaryOperator	&		3240900	0					
ANR	3240957	Identifier	photometric		3240900	1					
ANR	3240958	Argument	& padBytes		3240900	7					
ANR	3240959	UnaryOperationExpression	& padBytes		3240900	0					
ANR	3240960	UnaryOperator	&		3240900	0					
ANR	3240961	Identifier	padBytes		3240900	1					
ANR	3240962	IdentifierDeclStatement	int numPixels = wid * hei ;	2825:4:98037:98062	3240900	4	True				
ANR	3240963	IdentifierDecl	numPixels = wid * hei		3240900	0					
ANR	3240964	IdentifierDeclType	int		3240900	0					
ANR	3240965	Identifier	numPixels		3240900	1					
ANR	3240966	AssignmentExpression	numPixels = wid * hei		3240900	2		=			
ANR	3240967	Identifier	numPixels		3240900	0					
ANR	3240968	MultiplicativeExpression	wid * hei		3240900	1		*			
ANR	3240969	Identifier	wid		3240900	0					
ANR	3240970	Identifier	hei		3240900	1					
ANR	3240971	IdentifierDeclStatement	int nPrimaryComp = ncomp - 1 ;	2826:4:98068:98094	3240900	5	True				
ANR	3240972	IdentifierDecl	nPrimaryComp = ncomp - 1		3240900	0					
ANR	3240973	IdentifierDeclType	int		3240900	0					
ANR	3240974	Identifier	nPrimaryComp		3240900	1					
ANR	3240975	AssignmentExpression	nPrimaryComp = ncomp - 1		3240900	2		=			
ANR	3240976	Identifier	nPrimaryComp		3240900	0					
ANR	3240977	AdditiveExpression	ncomp - 1		3240900	1		-			
ANR	3240978	Identifier	ncomp		3240900	0					
ANR	3240979	PrimaryExpression	1		3240900	1					
ANR	3240980	IdentifierDeclStatement	context * con = ( context * ) input_handle ;	2827:4:98100:98138	3240900	6	True				
ANR	3240981	IdentifierDecl	* con = ( context * ) input_handle		3240900	0					
ANR	3240982	IdentifierDeclType	context *		3240900	0					
ANR	3240983	Identifier	con		3240900	1					
ANR	3240984	AssignmentExpression	* con = ( context * ) input_handle		3240900	2		=			
ANR	3240985	Identifier	con		3240900	0					
ANR	3240986	CastExpression	( context * ) input_handle		3240900	1					
ANR	3240987	CastTarget	context *		3240900	0					
ANR	3240988	Identifier	input_handle		3240900	1					
ANR	3240989	ExpressionStatement	read_setup ( con )	2828:4:98144:98159	3240900	7	True				
ANR	3240990	CallExpression	read_setup ( con )		3240900	0					
ANR	3240991	Callee	read_setup		3240900	0					
ANR	3240992	Identifier	read_setup		3240900	0					
ANR	3240993	ArgumentList	con		3240900	1					
ANR	3240994	Argument	con		3240900	0					
ANR	3240995	Identifier	con		3240900	0					
ANR	3240996	IdentifierDeclStatement	int i ;	2830:4:98166:98171	3240900	8	True				
ANR	3240997	IdentifierDecl	i		3240900	0					
ANR	3240998	IdentifierDeclType	int		3240900	0					
ANR	3240999	Identifier	i		3240900	1					
ANR	3241000	ExpressionStatement	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2832:4:98178:98314	3240900	9	True				
ANR	3241001	CallExpression	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		3240900	0					
ANR	3241002	Callee	start_output_file		3240900	0					
ANR	3241003	Identifier	start_output_file		3240900	0					
ANR	3241004	ArgumentList	con_primary		3240900	1					
ANR	3241005	Argument	con_primary		3240900	0					
ANR	3241006	Identifier	con_primary		3240900	0					
ANR	3241007	Argument	wid		3240900	1					
ANR	3241008	Identifier	wid		3240900	0					
ANR	3241009	Argument	hei		3240900	2					
ANR	3241010	Identifier	hei		3240900	0					
ANR	3241011	Argument	wid		3240900	3					
ANR	3241012	Identifier	wid		3240900	0					
ANR	3241013	Argument	hei		3240900	4					
ANR	3241014	Identifier	hei		3240900	0					
ANR	3241015	Argument	con_primary -> ncomp		3240900	5					
ANR	3241016	PtrMemberAccess	con_primary -> ncomp		3240900	0					
ANR	3241017	Identifier	con_primary		3240900	0					
ANR	3241018	Identifier	ncomp		3240900	1					
ANR	3241019	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3240900	6					
ANR	3241020	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3240900	0					
ANR	3241021	Callee	jxr_get_OUTPUT_BITDEPTH		3240900	0					
ANR	3241022	Identifier	jxr_get_OUTPUT_BITDEPTH		3240900	0					
ANR	3241023	ArgumentList	image		3240900	1					
ANR	3241024	Argument	image		3240900	0					
ANR	3241025	Identifier	image		3240900	0					
ANR	3241026	Argument	jxrc_get_pixel_format ( container )		3240900	7					
ANR	3241027	CallExpression	jxrc_get_pixel_format ( container )		3240900	0					
ANR	3241028	Callee	jxrc_get_pixel_format		3240900	0					
ANR	3241029	Identifier	jxrc_get_pixel_format		3240900	0					
ANR	3241030	ArgumentList	container		3240900	1					
ANR	3241031	Argument	container		3240900	0					
ANR	3241032	Identifier	container		3240900	0					
ANR	3241033	ExpressionStatement	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2833:4:98320:98452	3240900	10	True				
ANR	3241034	CallExpression	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		3240900	0					
ANR	3241035	Callee	start_output_file		3240900	0					
ANR	3241036	Identifier	start_output_file		3240900	0					
ANR	3241037	ArgumentList	con_alpha		3240900	1					
ANR	3241038	Argument	con_alpha		3240900	0					
ANR	3241039	Identifier	con_alpha		3240900	0					
ANR	3241040	Argument	wid		3240900	1					
ANR	3241041	Identifier	wid		3240900	0					
ANR	3241042	Argument	hei		3240900	2					
ANR	3241043	Identifier	hei		3240900	0					
ANR	3241044	Argument	wid		3240900	3					
ANR	3241045	Identifier	wid		3240900	0					
ANR	3241046	Argument	hei		3240900	4					
ANR	3241047	Identifier	hei		3240900	0					
ANR	3241048	Argument	con_alpha -> ncomp		3240900	5					
ANR	3241049	PtrMemberAccess	con_alpha -> ncomp		3240900	0					
ANR	3241050	Identifier	con_alpha		3240900	0					
ANR	3241051	Identifier	ncomp		3240900	1					
ANR	3241052	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3240900	6					
ANR	3241053	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3240900	0					
ANR	3241054	Callee	jxr_get_OUTPUT_BITDEPTH		3240900	0					
ANR	3241055	Identifier	jxr_get_OUTPUT_BITDEPTH		3240900	0					
ANR	3241056	ArgumentList	image		3240900	1					
ANR	3241057	Argument	image		3240900	0					
ANR	3241058	Identifier	image		3240900	0					
ANR	3241059	Argument	jxrc_get_pixel_format ( container )		3240900	7					
ANR	3241060	CallExpression	jxrc_get_pixel_format ( container )		3240900	0					
ANR	3241061	Callee	jxrc_get_pixel_format		3240900	0					
ANR	3241062	Identifier	jxrc_get_pixel_format		3240900	0					
ANR	3241063	ArgumentList	container		3240900	1					
ANR	3241064	Argument	container		3240900	0					
ANR	3241065	Identifier	container		3240900	0					
ANR	3241066	IfStatement	if ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image ) )		3240900	11					
ANR	3241067	Condition	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )	2835:7:98462:98561	3240900	0	True				
ANR	3241068	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3240900	0		||			
ANR	3241069	CallExpression	isOutputYUV444 ( image )		3240900	0					
ANR	3241070	Callee	isOutputYUV444		3240900	0					
ANR	3241071	Identifier	isOutputYUV444		3240900	0					
ANR	3241072	ArgumentList	image		3240900	1					
ANR	3241073	Argument	image		3240900	0					
ANR	3241074	Identifier	image		3240900	0					
ANR	3241075	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3240900	1		||			
ANR	3241076	CallExpression	isOutputYUV422 ( image )		3240900	0					
ANR	3241077	Callee	isOutputYUV422		3240900	0					
ANR	3241078	Identifier	isOutputYUV422		3240900	0					
ANR	3241079	ArgumentList	image		3240900	1					
ANR	3241080	Argument	image		3240900	0					
ANR	3241081	Identifier	image		3240900	0					
ANR	3241082	OrExpression	isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3240900	1		||			
ANR	3241083	CallExpression	isOutputYUV420 ( image )		3240900	0					
ANR	3241084	Callee	isOutputYUV420		3240900	0					
ANR	3241085	Identifier	isOutputYUV420		3240900	0					
ANR	3241086	ArgumentList	image		3240900	1					
ANR	3241087	Argument	image		3240900	0					
ANR	3241088	Identifier	image		3240900	0					
ANR	3241089	CallExpression	isOutputCMYKDirect ( image )		3240900	1					
ANR	3241090	Callee	isOutputCMYKDirect		3240900	0					
ANR	3241091	Identifier	isOutputCMYKDirect		3240900	0					
ANR	3241092	ArgumentList	image		3240900	1					
ANR	3241093	Argument	image		3240900	0					
ANR	3241094	Identifier	image		3240900	0					
ANR	3241095	CompoundStatement		29:8:1101:1122	3240900	1					
ANR	3241096	IdentifierDeclStatement	unsigned bytes = ( con -> bpi + 7 ) / 8 ;	2838:8:98664:98695	3240900	0	True				
ANR	3241097	IdentifierDecl	bytes = ( con -> bpi + 7 ) / 8		3240900	0					
ANR	3241098	IdentifierDeclType	unsigned		3240900	0					
ANR	3241099	Identifier	bytes		3240900	1					
ANR	3241100	AssignmentExpression	bytes = ( con -> bpi + 7 ) / 8		3240900	2		=			
ANR	3241101	Identifier	bytes		3240900	0					
ANR	3241102	MultiplicativeExpression	( con -> bpi + 7 ) / 8		3240900	1		/			
ANR	3241103	AdditiveExpression	con -> bpi + 7		3240900	0		+			
ANR	3241104	PtrMemberAccess	con -> bpi		3240900	0					
ANR	3241105	Identifier	con		3240900	0					
ANR	3241106	Identifier	bpi		3240900	1					
ANR	3241107	PrimaryExpression	7		3240900	1					
ANR	3241108	PrimaryExpression	8		3240900	1					
ANR	3241109	IdentifierDeclStatement	unsigned size_luma = numPixels * bytes ;	2839:8:98705:98743	3240900	1	True				
ANR	3241110	IdentifierDecl	size_luma = numPixels * bytes		3240900	0					
ANR	3241111	IdentifierDeclType	unsigned		3240900	0					
ANR	3241112	Identifier	size_luma		3240900	1					
ANR	3241113	AssignmentExpression	size_luma = numPixels * bytes		3240900	2		=			
ANR	3241114	Identifier	size_luma		3240900	0					
ANR	3241115	MultiplicativeExpression	numPixels * bytes		3240900	1		*			
ANR	3241116	Identifier	numPixels		3240900	0					
ANR	3241117	Identifier	bytes		3240900	1					
ANR	3241118	IdentifierDeclStatement	unsigned size_chroma = size_luma ;	2840:8:98753:98785	3240900	2	True				
ANR	3241119	IdentifierDecl	size_chroma = size_luma		3240900	0					
ANR	3241120	IdentifierDeclType	unsigned		3240900	0					
ANR	3241121	Identifier	size_chroma		3240900	1					
ANR	3241122	AssignmentExpression	size_chroma = size_luma		3240900	2		=			
ANR	3241123	Identifier	size_luma		3240900	0					
ANR	3241124	Identifier	size_luma		3240900	1					
ANR	3241125	IfStatement	if ( isOutputYUV422 ( image ) )		3240900	3					
ANR	3241126	Condition	isOutputYUV422 ( image )	2841:12:98799:98819	3240900	0	True				
ANR	3241127	CallExpression	isOutputYUV422 ( image )		3240900	0					
ANR	3241128	Callee	isOutputYUV422		3240900	0					
ANR	3241129	Identifier	isOutputYUV422		3240900	0					
ANR	3241130	ArgumentList	image		3240900	1					
ANR	3241131	Argument	image		3240900	0					
ANR	3241132	Identifier	image		3240900	0					
ANR	3241133	ExpressionStatement	size_chroma >>= 1	2842:12:98834:98851	3240900	1	True				
ANR	3241134	AssignmentExpression	size_chroma >>= 1		3240900	0		>>=			
ANR	3241135	Identifier	size_chroma		3240900	0					
ANR	3241136	PrimaryExpression	1		3240900	1					
ANR	3241137	IfStatement	if ( isOutputYUV420 ( image ) )		3240900	4					
ANR	3241138	Condition	isOutputYUV420 ( image )	2843:12:98865:98885	3240900	0	True				
ANR	3241139	CallExpression	isOutputYUV420 ( image )		3240900	0					
ANR	3241140	Callee	isOutputYUV420		3240900	0					
ANR	3241141	Identifier	isOutputYUV420		3240900	0					
ANR	3241142	ArgumentList	image		3240900	1					
ANR	3241143	Argument	image		3240900	0					
ANR	3241144	Identifier	image		3240900	0					
ANR	3241145	ExpressionStatement	size_chroma >>= 2	2844:12:98900:98917	3240900	1	True				
ANR	3241146	AssignmentExpression	size_chroma >>= 2		3240900	0		>>=			
ANR	3241147	Identifier	size_chroma		3240900	0					
ANR	3241148	PrimaryExpression	2		3240900	1					
ANR	3241149	IdentifierDeclStatement	uint8_t * combine = 0 ;	2846:8:98928:98949	3240900	5	True				
ANR	3241150	IdentifierDecl	* combine = 0		3240900	0					
ANR	3241151	IdentifierDeclType	uint8_t *		3240900	0					
ANR	3241152	Identifier	combine		3240900	1					
ANR	3241153	AssignmentExpression	* combine = 0		3240900	2		=			
ANR	3241154	Identifier	combine		3240900	0					
ANR	3241155	PrimaryExpression	0		3240900	1					
ANR	3241156	ExpressionStatement	combine = ( uint8_t * ) malloc ( size_luma )	2847:8:98959:98996	3240900	6	True				
ANR	3241157	AssignmentExpression	combine = ( uint8_t * ) malloc ( size_luma )		3240900	0		=			
ANR	3241158	Identifier	combine		3240900	0					
ANR	3241159	CastExpression	( uint8_t * ) malloc ( size_luma )		3240900	1					
ANR	3241160	CastTarget	uint8_t *		3240900	0					
ANR	3241161	CallExpression	malloc ( size_luma )		3240900	1					
ANR	3241162	Callee	malloc		3240900	0					
ANR	3241163	Identifier	malloc		3240900	0					
ANR	3241164	ArgumentList	size_luma		3240900	1					
ANR	3241165	Argument	size_luma		3240900	0					
ANR	3241166	Identifier	size_luma		3240900	0					
ANR	3241167	ExpressionStatement	assert ( combine != 0 )	2848:8:99006:99026	3240900	7	True				
ANR	3241168	CallExpression	assert ( combine != 0 )		3240900	0					
ANR	3241169	Callee	assert		3240900	0					
ANR	3241170	Identifier	assert		3240900	0					
ANR	3241171	ArgumentList	combine != 0		3240900	1					
ANR	3241172	Argument	combine != 0		3240900	0					
ANR	3241173	EqualityExpression	combine != 0		3240900	0		!=			
ANR	3241174	Identifier	combine		3240900	0					
ANR	3241175	PrimaryExpression	0		3240900	1					
ANR	3241176	ExpressionStatement	"read_uint8 ( con , combine , size_luma )"	2850:8:99037:99072	3240900	8	True				
ANR	3241177	CallExpression	"read_uint8 ( con , combine , size_luma )"		3240900	0					
ANR	3241178	Callee	read_uint8		3240900	0					
ANR	3241179	Identifier	read_uint8		3240900	0					
ANR	3241180	ArgumentList	con		3240900	1					
ANR	3241181	Argument	con		3240900	0					
ANR	3241182	Identifier	con		3240900	0					
ANR	3241183	Argument	combine		3240900	1					
ANR	3241184	Identifier	combine		3240900	0					
ANR	3241185	Argument	size_luma		3240900	2					
ANR	3241186	Identifier	size_luma		3240900	0					
ANR	3241187	ExpressionStatement	"write_uint8 ( con_primary , combine , size_luma )"	2851:8:99082:99126	3240900	9	True				
ANR	3241188	CallExpression	"write_uint8 ( con_primary , combine , size_luma )"		3240900	0					
ANR	3241189	Callee	write_uint8		3240900	0					
ANR	3241190	Identifier	write_uint8		3240900	0					
ANR	3241191	ArgumentList	con_primary		3240900	1					
ANR	3241192	Argument	con_primary		3240900	0					
ANR	3241193	Identifier	con_primary		3240900	0					
ANR	3241194	Argument	combine		3240900	1					
ANR	3241195	Identifier	combine		3240900	0					
ANR	3241196	Argument	size_luma		3240900	2					
ANR	3241197	Identifier	size_luma		3240900	0					
ANR	3241198	ForStatement	for ( i = 1 ; i < nPrimaryComp ; i ++ )		3240900	10					
ANR	3241199	ForInit	i = 1 ;	2853:13:99142:99147	3240900	0	True				
ANR	3241200	AssignmentExpression	i = 1		3240900	0		=			
ANR	3241201	Identifier	i		3240900	0					
ANR	3241202	PrimaryExpression	1		3240900	1					
ANR	3241203	Condition	i < nPrimaryComp	2853:20:99149:99164	3240900	1	True				
ANR	3241204	RelationalExpression	i < nPrimaryComp		3240900	0		<			
ANR	3241205	Identifier	i		3240900	0					
ANR	3241206	Identifier	nPrimaryComp		3240900	1					
ANR	3241207	PostIncDecOperationExpression	i ++	2853:38:99167:99169	3240900	2	True				
ANR	3241208	Identifier	i		3240900	0					
ANR	3241209	IncDec	++		3240900	1					
ANR	3241210	CompoundStatement		36:43:1345:1345	3240900	3					
ANR	3241211	ExpressionStatement	"read_uint8 ( con , combine , size_chroma )"	2854:12:99186:99223	3240900	0	True				
ANR	3241212	CallExpression	"read_uint8 ( con , combine , size_chroma )"		3240900	0					
ANR	3241213	Callee	read_uint8		3240900	0					
ANR	3241214	Identifier	read_uint8		3240900	0					
ANR	3241215	ArgumentList	con		3240900	1					
ANR	3241216	Argument	con		3240900	0					
ANR	3241217	Identifier	con		3240900	0					
ANR	3241218	Argument	combine		3240900	1					
ANR	3241219	Identifier	combine		3240900	0					
ANR	3241220	Argument	size_chroma		3240900	2					
ANR	3241221	Identifier	size_chroma		3240900	0					
ANR	3241222	ExpressionStatement	"write_uint8 ( con_primary , combine , size_chroma )"	2855:12:99237:99283	3240900	1	True				
ANR	3241223	CallExpression	"write_uint8 ( con_primary , combine , size_chroma )"		3240900	0					
ANR	3241224	Callee	write_uint8		3240900	0					
ANR	3241225	Identifier	write_uint8		3240900	0					
ANR	3241226	ArgumentList	con_primary		3240900	1					
ANR	3241227	Argument	con_primary		3240900	0					
ANR	3241228	Identifier	con_primary		3240900	0					
ANR	3241229	Argument	combine		3240900	1					
ANR	3241230	Identifier	combine		3240900	0					
ANR	3241231	Argument	size_chroma		3240900	2					
ANR	3241232	Identifier	size_chroma		3240900	0					
ANR	3241233	ExpressionStatement	"read_uint8 ( con , combine , size_luma )"	2858:8:99304:99339	3240900	11	True				
ANR	3241234	CallExpression	"read_uint8 ( con , combine , size_luma )"		3240900	0					
ANR	3241235	Callee	read_uint8		3240900	0					
ANR	3241236	Identifier	read_uint8		3240900	0					
ANR	3241237	ArgumentList	con		3240900	1					
ANR	3241238	Argument	con		3240900	0					
ANR	3241239	Identifier	con		3240900	0					
ANR	3241240	Argument	combine		3240900	1					
ANR	3241241	Identifier	combine		3240900	0					
ANR	3241242	Argument	size_luma		3240900	2					
ANR	3241243	Identifier	size_luma		3240900	0					
ANR	3241244	ExpressionStatement	"write_uint8 ( con_alpha , combine , size_luma )"	2859:8:99349:99391	3240900	12	True				
ANR	3241245	CallExpression	"write_uint8 ( con_alpha , combine , size_luma )"		3240900	0					
ANR	3241246	Callee	write_uint8		3240900	0					
ANR	3241247	Identifier	write_uint8		3240900	0					
ANR	3241248	ArgumentList	con_alpha		3240900	1					
ANR	3241249	Argument	con_alpha		3240900	0					
ANR	3241250	Identifier	con_alpha		3240900	0					
ANR	3241251	Argument	combine		3240900	1					
ANR	3241252	Identifier	combine		3240900	0					
ANR	3241253	Argument	size_luma		3240900	2					
ANR	3241254	Identifier	size_luma		3240900	0					
ANR	3241255	ExpressionStatement	free ( combine )	2861:8:99402:99415	3240900	13	True				
ANR	3241256	CallExpression	free ( combine )		3240900	0					
ANR	3241257	Callee	free		3240900	0					
ANR	3241258	Identifier	free		3240900	0					
ANR	3241259	ArgumentList	combine		3240900	1					
ANR	3241260	Argument	combine		3240900	0					
ANR	3241261	Identifier	combine		3240900	0					
ANR	3241262	ElseStatement	else		3240900	0					
ANR	3241263	CompoundStatement		47:4:1610:1610	3240900	0					
ANR	3241264	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3240900	0					
ANR	3241265	ForInit	i = 0 ;	2865:13:99452:99455	3240900	0	True				
ANR	3241266	AssignmentExpression	i = 0		3240900	0		=			
ANR	3241267	Identifier	i		3240900	0					
ANR	3241268	PrimaryExpression	0		3240900	1					
ANR	3241269	Condition	i < numPixels	2865:18:99457:99467	3240900	1	True				
ANR	3241270	RelationalExpression	i < numPixels		3240900	0		<			
ANR	3241271	Identifier	i		3240900	0					
ANR	3241272	Identifier	numPixels		3240900	1					
ANR	3241273	PostIncDecOperationExpression	i ++	2865:31:99470:99472	3240900	2	True				
ANR	3241274	Identifier	i		3240900	0					
ANR	3241275	IncDec	++		3240900	1					
ANR	3241276	CompoundStatement		49:8:1656:1656	3240900	3					
ANR	3241277	IfStatement	if ( con -> bpi == 8 )		3240900	0					
ANR	3241278	Condition	con -> bpi == 8	2867:16:99501:99513	3240900	0	True				
ANR	3241279	EqualityExpression	con -> bpi == 8		3240900	0		==			
ANR	3241280	PtrMemberAccess	con -> bpi		3240900	0					
ANR	3241281	Identifier	con		3240900	0					
ANR	3241282	Identifier	bpi		3240900	1					
ANR	3241283	PrimaryExpression	8		3240900	1					
ANR	3241284	CompoundStatement		52:16:1708:1747	3240900	1					
ANR	3241285	IdentifierDeclStatement	unsigned char combine [ MAX_CHANNELS + 1 ] ;	2869:16:99535:99574	3240900	0	True				
ANR	3241286	IdentifierDecl	combine [ MAX_CHANNELS + 1 ]		3240900	0					
ANR	3241287	IdentifierDeclType	unsigned char [ MAX_CHANNELS + 1 ]		3240900	0					
ANR	3241288	Identifier	combine		3240900	1					
ANR	3241289	AdditiveExpression	MAX_CHANNELS + 1		3240900	2		+			
ANR	3241290	Identifier	MAX_CHANNELS		3240900	0					
ANR	3241291	PrimaryExpression	1		3240900	1					
ANR	3241292	ExpressionStatement	"read_uint8 ( con , & combine [ 0 ] , nPrimaryComp )"	2870:16:99619:99660	3240900	1	True				
ANR	3241293	CallExpression	"read_uint8 ( con , & combine [ 0 ] , nPrimaryComp )"		3240900	0					
ANR	3241294	Callee	read_uint8		3240900	0					
ANR	3241295	Identifier	read_uint8		3240900	0					
ANR	3241296	ArgumentList	con		3240900	1					
ANR	3241297	Argument	con		3240900	0					
ANR	3241298	Identifier	con		3240900	0					
ANR	3241299	Argument	& combine [ 0 ]		3240900	1					
ANR	3241300	UnaryOperationExpression	& combine [ 0 ]		3240900	0					
ANR	3241301	UnaryOperator	&		3240900	0					
ANR	3241302	ArrayIndexing	combine [ 0 ]		3240900	1					
ANR	3241303	Identifier	combine		3240900	0					
ANR	3241304	PrimaryExpression	0		3240900	1					
ANR	3241305	Argument	nPrimaryComp		3240900	2					
ANR	3241306	Identifier	nPrimaryComp		3240900	0					
ANR	3241307	ExpressionStatement	"write_uint8 ( con_primary , combine , nPrimaryComp )"	2871:16:99678:99725	3240900	2	True				
ANR	3241308	CallExpression	"write_uint8 ( con_primary , combine , nPrimaryComp )"		3240900	0					
ANR	3241309	Callee	write_uint8		3240900	0					
ANR	3241310	Identifier	write_uint8		3240900	0					
ANR	3241311	ArgumentList	con_primary		3240900	1					
ANR	3241312	Argument	con_primary		3240900	0					
ANR	3241313	Identifier	con_primary		3240900	0					
ANR	3241314	Argument	combine		3240900	1					
ANR	3241315	Identifier	combine		3240900	0					
ANR	3241316	Argument	nPrimaryComp		3240900	2					
ANR	3241317	Identifier	nPrimaryComp		3240900	0					
ANR	3241318	ElseStatement	else		3240900	0					
ANR	3241319	IfStatement	if ( con -> bpi == 16 )		3240900	0					
ANR	3241320	Condition	con -> bpi == 16	2874:20:99762:99775	3240900	0	True				
ANR	3241321	EqualityExpression	con -> bpi == 16		3240900	0		==			
ANR	3241322	PtrMemberAccess	con -> bpi		3240900	0					
ANR	3241323	Identifier	con		3240900	0					
ANR	3241324	Identifier	bpi		3240900	1					
ANR	3241325	PrimaryExpression	16		3240900	1					
ANR	3241326	CompoundStatement		60:16:1982:2016	3240900	1					
ANR	3241327	IdentifierDeclStatement	uint16_t combine [ MAX_CHANNELS + 1 ] ;	2877:16:99809:99843	3240900	0	True				
ANR	3241328	IdentifierDecl	combine [ MAX_CHANNELS + 1 ]		3240900	0					
ANR	3241329	IdentifierDeclType	uint16_t [ MAX_CHANNELS + 1 ]		3240900	0					
ANR	3241330	Identifier	combine		3240900	1					
ANR	3241331	AdditiveExpression	MAX_CHANNELS + 1		3240900	2		+			
ANR	3241332	Identifier	MAX_CHANNELS		3240900	0					
ANR	3241333	PrimaryExpression	1		3240900	1					
ANR	3241334	ExpressionStatement	"read_uint16 ( con , & combine [ 0 ] , nPrimaryComp )"	2878:16:99888:99930	3240900	1	True				
ANR	3241335	CallExpression	"read_uint16 ( con , & combine [ 0 ] , nPrimaryComp )"		3240900	0					
ANR	3241336	Callee	read_uint16		3240900	0					
ANR	3241337	Identifier	read_uint16		3240900	0					
ANR	3241338	ArgumentList	con		3240900	1					
ANR	3241339	Argument	con		3240900	0					
ANR	3241340	Identifier	con		3240900	0					
ANR	3241341	Argument	& combine [ 0 ]		3240900	1					
ANR	3241342	UnaryOperationExpression	& combine [ 0 ]		3240900	0					
ANR	3241343	UnaryOperator	&		3240900	0					
ANR	3241344	ArrayIndexing	combine [ 0 ]		3240900	1					
ANR	3241345	Identifier	combine		3240900	0					
ANR	3241346	PrimaryExpression	0		3240900	1					
ANR	3241347	Argument	nPrimaryComp		3240900	2					
ANR	3241348	Identifier	nPrimaryComp		3240900	0					
ANR	3241349	ExpressionStatement	"write_uint16 ( con_primary , combine , nPrimaryComp )"	2879:16:99948:99996	3240900	2	True				
ANR	3241350	CallExpression	"write_uint16 ( con_primary , combine , nPrimaryComp )"		3240900	0					
ANR	3241351	Callee	write_uint16		3240900	0					
ANR	3241352	Identifier	write_uint16		3240900	0					
ANR	3241353	ArgumentList	con_primary		3240900	1					
ANR	3241354	Argument	con_primary		3240900	0					
ANR	3241355	Identifier	con_primary		3240900	0					
ANR	3241356	Argument	combine		3240900	1					
ANR	3241357	Identifier	combine		3240900	0					
ANR	3241358	Argument	nPrimaryComp		3240900	2					
ANR	3241359	Identifier	nPrimaryComp		3240900	0					
ANR	3241360	ElseStatement	else		3240900	0					
ANR	3241361	IfStatement	if ( con -> bpi == 32 )		3240900	0					
ANR	3241362	Condition	con -> bpi == 32	2882:20:100033:100046	3240900	0	True				
ANR	3241363	EqualityExpression	con -> bpi == 32		3240900	0		==			
ANR	3241364	PtrMemberAccess	con -> bpi		3240900	0					
ANR	3241365	Identifier	con		3240900	0					
ANR	3241366	Identifier	bpi		3240900	1					
ANR	3241367	PrimaryExpression	32		3240900	1					
ANR	3241368	CompoundStatement		68:16:2253:2287	3240900	1					
ANR	3241369	IdentifierDeclStatement	uint32_t combine [ MAX_CHANNELS + 1 ] ;	2885:16:100080:100114	3240900	0	True				
ANR	3241370	IdentifierDecl	combine [ MAX_CHANNELS + 1 ]		3240900	0					
ANR	3241371	IdentifierDeclType	uint32_t [ MAX_CHANNELS + 1 ]		3240900	0					
ANR	3241372	Identifier	combine		3240900	1					
ANR	3241373	AdditiveExpression	MAX_CHANNELS + 1		3240900	2		+			
ANR	3241374	Identifier	MAX_CHANNELS		3240900	0					
ANR	3241375	PrimaryExpression	1		3240900	1					
ANR	3241376	ExpressionStatement	"read_uint32 ( con , & combine [ 0 ] , nPrimaryComp )"	2886:16:100159:100201	3240900	1	True				
ANR	3241377	CallExpression	"read_uint32 ( con , & combine [ 0 ] , nPrimaryComp )"		3240900	0					
ANR	3241378	Callee	read_uint32		3240900	0					
ANR	3241379	Identifier	read_uint32		3240900	0					
ANR	3241380	ArgumentList	con		3240900	1					
ANR	3241381	Argument	con		3240900	0					
ANR	3241382	Identifier	con		3240900	0					
ANR	3241383	Argument	& combine [ 0 ]		3240900	1					
ANR	3241384	UnaryOperationExpression	& combine [ 0 ]		3240900	0					
ANR	3241385	UnaryOperator	&		3240900	0					
ANR	3241386	ArrayIndexing	combine [ 0 ]		3240900	1					
ANR	3241387	Identifier	combine		3240900	0					
ANR	3241388	PrimaryExpression	0		3240900	1					
ANR	3241389	Argument	nPrimaryComp		3240900	2					
ANR	3241390	Identifier	nPrimaryComp		3240900	0					
ANR	3241391	ExpressionStatement	"write_uint32 ( con_primary , combine , nPrimaryComp )"	2887:16:100219:100267	3240900	2	True				
ANR	3241392	CallExpression	"write_uint32 ( con_primary , combine , nPrimaryComp )"		3240900	0					
ANR	3241393	Callee	write_uint32		3240900	0					
ANR	3241394	Identifier	write_uint32		3240900	0					
ANR	3241395	ArgumentList	con_primary		3240900	1					
ANR	3241396	Argument	con_primary		3240900	0					
ANR	3241397	Identifier	con_primary		3240900	0					
ANR	3241398	Argument	combine		3240900	1					
ANR	3241399	Identifier	combine		3240900	0					
ANR	3241400	Argument	nPrimaryComp		3240900	2					
ANR	3241401	Identifier	nPrimaryComp		3240900	0					
ANR	3241402	ElseStatement	else		3240900	0					
ANR	3241403	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2891:16:100317:100350	3240900	0	True				
ANR	3241404	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3240900	0					
ANR	3241405	Callee	assert		3240900	0					
ANR	3241406	Identifier	assert		3240900	0					
ANR	3241407	ArgumentList	"! ""Unsupported bitdepth\\n"""		3240900	1					
ANR	3241408	Argument	"! ""Unsupported bitdepth\\n"""		3240900	0					
ANR	3241409	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3240900	0					
ANR	3241410	UnaryOperator	!		3240900	0					
ANR	3241411	PrimaryExpression	"""Unsupported bitdepth\\n"""		3240900	1					
ANR	3241412	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3240900	1					
ANR	3241413	ForInit	i = 0 ;	2893:13:100375:100378	3240900	0	True				
ANR	3241414	AssignmentExpression	i = 0		3240900	0		=			
ANR	3241415	Identifier	i		3240900	0					
ANR	3241416	PrimaryExpression	0		3240900	1					
ANR	3241417	Condition	i < numPixels	2893:18:100380:100390	3240900	1	True				
ANR	3241418	RelationalExpression	i < numPixels		3240900	0		<			
ANR	3241419	Identifier	i		3240900	0					
ANR	3241420	Identifier	numPixels		3240900	1					
ANR	3241421	PostIncDecOperationExpression	i ++	2893:31:100393:100395	3240900	2	True				
ANR	3241422	Identifier	i		3240900	0					
ANR	3241423	IncDec	++		3240900	1					
ANR	3241424	CompoundStatement		77:8:2579:2579	3240900	3					
ANR	3241425	IfStatement	if ( con -> bpi == 8 )		3240900	0					
ANR	3241426	Condition	con -> bpi == 8	2895:16:100424:100436	3240900	0	True				
ANR	3241427	EqualityExpression	con -> bpi == 8		3240900	0		==			
ANR	3241428	PtrMemberAccess	con -> bpi		3240900	0					
ANR	3241429	Identifier	con		3240900	0					
ANR	3241430	Identifier	bpi		3240900	1					
ANR	3241431	PrimaryExpression	8		3240900	1					
ANR	3241432	CompoundStatement		80:16:2631:2655	3240900	1					
ANR	3241433	IdentifierDeclStatement	unsigned char combine [ 1 ] ;	2897:16:100458:100482	3240900	0	True				
ANR	3241434	IdentifierDecl	combine [ 1 ]		3240900	0					
ANR	3241435	IdentifierDeclType	unsigned char [ 1 ]		3240900	0					
ANR	3241436	Identifier	combine		3240900	1					
ANR	3241437	PrimaryExpression	1		3240900	2					
ANR	3241438	ExpressionStatement	"read_uint8 ( con , & combine [ 0 ] , 1 )"	2898:16:100500:100530	3240900	1	True				
ANR	3241439	CallExpression	"read_uint8 ( con , & combine [ 0 ] , 1 )"		3240900	0					
ANR	3241440	Callee	read_uint8		3240900	0					
ANR	3241441	Identifier	read_uint8		3240900	0					
ANR	3241442	ArgumentList	con		3240900	1					
ANR	3241443	Argument	con		3240900	0					
ANR	3241444	Identifier	con		3240900	0					
ANR	3241445	Argument	& combine [ 0 ]		3240900	1					
ANR	3241446	UnaryOperationExpression	& combine [ 0 ]		3240900	0					
ANR	3241447	UnaryOperator	&		3240900	0					
ANR	3241448	ArrayIndexing	combine [ 0 ]		3240900	1					
ANR	3241449	Identifier	combine		3240900	0					
ANR	3241450	PrimaryExpression	0		3240900	1					
ANR	3241451	Argument	1		3240900	2					
ANR	3241452	PrimaryExpression	1		3240900	0					
ANR	3241453	ExpressionStatement	"write_uint8 ( con_alpha , combine , 1 )"	2899:16:100548:100582	3240900	2	True				
ANR	3241454	CallExpression	"write_uint8 ( con_alpha , combine , 1 )"		3240900	0					
ANR	3241455	Callee	write_uint8		3240900	0					
ANR	3241456	Identifier	write_uint8		3240900	0					
ANR	3241457	ArgumentList	con_alpha		3240900	1					
ANR	3241458	Argument	con_alpha		3240900	0					
ANR	3241459	Identifier	con_alpha		3240900	0					
ANR	3241460	Argument	combine		3240900	1					
ANR	3241461	Identifier	combine		3240900	0					
ANR	3241462	Argument	1		3240900	2					
ANR	3241463	PrimaryExpression	1		3240900	0					
ANR	3241464	ElseStatement	else		3240900	0					
ANR	3241465	IfStatement	if ( con -> bpi == 16 )		3240900	0					
ANR	3241466	Condition	con -> bpi == 16	2902:20:100619:100632	3240900	0	True				
ANR	3241467	EqualityExpression	con -> bpi == 16		3240900	0		==			
ANR	3241468	PtrMemberAccess	con -> bpi		3240900	0					
ANR	3241469	Identifier	con		3240900	0					
ANR	3241470	Identifier	bpi		3240900	1					
ANR	3241471	PrimaryExpression	16		3240900	1					
ANR	3241472	CompoundStatement		88:16:2839:2858	3240900	1					
ANR	3241473	IdentifierDeclStatement	uint16_t combine [ 1 ] ;	2905:16:100666:100685	3240900	0	True				
ANR	3241474	IdentifierDecl	combine [ 1 ]		3240900	0					
ANR	3241475	IdentifierDeclType	uint16_t [ 1 ]		3240900	0					
ANR	3241476	Identifier	combine		3240900	1					
ANR	3241477	PrimaryExpression	1		3240900	2					
ANR	3241478	ExpressionStatement	"read_uint16 ( con , & combine [ 0 ] , 1 )"	2906:16:100703:100734	3240900	1	True				
ANR	3241479	CallExpression	"read_uint16 ( con , & combine [ 0 ] , 1 )"		3240900	0					
ANR	3241480	Callee	read_uint16		3240900	0					
ANR	3241481	Identifier	read_uint16		3240900	0					
ANR	3241482	ArgumentList	con		3240900	1					
ANR	3241483	Argument	con		3240900	0					
ANR	3241484	Identifier	con		3240900	0					
ANR	3241485	Argument	& combine [ 0 ]		3240900	1					
ANR	3241486	UnaryOperationExpression	& combine [ 0 ]		3240900	0					
ANR	3241487	UnaryOperator	&		3240900	0					
ANR	3241488	ArrayIndexing	combine [ 0 ]		3240900	1					
ANR	3241489	Identifier	combine		3240900	0					
ANR	3241490	PrimaryExpression	0		3240900	1					
ANR	3241491	Argument	1		3240900	2					
ANR	3241492	PrimaryExpression	1		3240900	0					
ANR	3241493	ExpressionStatement	"write_uint16 ( con_alpha , combine , 1 )"	2907:16:100752:100787	3240900	2	True				
ANR	3241494	CallExpression	"write_uint16 ( con_alpha , combine , 1 )"		3240900	0					
ANR	3241495	Callee	write_uint16		3240900	0					
ANR	3241496	Identifier	write_uint16		3240900	0					
ANR	3241497	ArgumentList	con_alpha		3240900	1					
ANR	3241498	Argument	con_alpha		3240900	0					
ANR	3241499	Identifier	con_alpha		3240900	0					
ANR	3241500	Argument	combine		3240900	1					
ANR	3241501	Identifier	combine		3240900	0					
ANR	3241502	Argument	1		3240900	2					
ANR	3241503	PrimaryExpression	1		3240900	0					
ANR	3241504	ElseStatement	else		3240900	0					
ANR	3241505	IfStatement	if ( con -> bpi == 32 )		3240900	0					
ANR	3241506	Condition	con -> bpi == 32	2910:20:100824:100837	3240900	0	True				
ANR	3241507	EqualityExpression	con -> bpi == 32		3240900	0		==			
ANR	3241508	PtrMemberAccess	con -> bpi		3240900	0					
ANR	3241509	Identifier	con		3240900	0					
ANR	3241510	Identifier	bpi		3240900	1					
ANR	3241511	PrimaryExpression	32		3240900	1					
ANR	3241512	CompoundStatement		96:16:3044:3063	3240900	1					
ANR	3241513	IdentifierDeclStatement	uint32_t combine [ 1 ] ;	2913:16:100871:100890	3240900	0	True				
ANR	3241514	IdentifierDecl	combine [ 1 ]		3240900	0					
ANR	3241515	IdentifierDeclType	uint32_t [ 1 ]		3240900	0					
ANR	3241516	Identifier	combine		3240900	1					
ANR	3241517	PrimaryExpression	1		3240900	2					
ANR	3241518	ExpressionStatement	"read_uint32 ( con , & combine [ 0 ] , 1 )"	2914:16:100908:100939	3240900	1	True				
ANR	3241519	CallExpression	"read_uint32 ( con , & combine [ 0 ] , 1 )"		3240900	0					
ANR	3241520	Callee	read_uint32		3240900	0					
ANR	3241521	Identifier	read_uint32		3240900	0					
ANR	3241522	ArgumentList	con		3240900	1					
ANR	3241523	Argument	con		3240900	0					
ANR	3241524	Identifier	con		3240900	0					
ANR	3241525	Argument	& combine [ 0 ]		3240900	1					
ANR	3241526	UnaryOperationExpression	& combine [ 0 ]		3240900	0					
ANR	3241527	UnaryOperator	&		3240900	0					
ANR	3241528	ArrayIndexing	combine [ 0 ]		3240900	1					
ANR	3241529	Identifier	combine		3240900	0					
ANR	3241530	PrimaryExpression	0		3240900	1					
ANR	3241531	Argument	1		3240900	2					
ANR	3241532	PrimaryExpression	1		3240900	0					
ANR	3241533	ExpressionStatement	"write_uint32 ( con_alpha , combine , 1 )"	2915:16:100957:100992	3240900	2	True				
ANR	3241534	CallExpression	"write_uint32 ( con_alpha , combine , 1 )"		3240900	0					
ANR	3241535	Callee	write_uint32		3240900	0					
ANR	3241536	Identifier	write_uint32		3240900	0					
ANR	3241537	ArgumentList	con_alpha		3240900	1					
ANR	3241538	Argument	con_alpha		3240900	0					
ANR	3241539	Identifier	con_alpha		3240900	0					
ANR	3241540	Argument	combine		3240900	1					
ANR	3241541	Identifier	combine		3240900	0					
ANR	3241542	Argument	1		3240900	2					
ANR	3241543	PrimaryExpression	1		3240900	0					
ANR	3241544	ElseStatement	else		3240900	0					
ANR	3241545	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2919:16:101042:101075	3240900	0	True				
ANR	3241546	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3240900	0					
ANR	3241547	Callee	assert		3240900	0					
ANR	3241548	Identifier	assert		3240900	0					
ANR	3241549	ArgumentList	"! ""Unsupported bitdepth\\n"""		3240900	1					
ANR	3241550	Argument	"! ""Unsupported bitdepth\\n"""		3240900	0					
ANR	3241551	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3240900	0					
ANR	3241552	UnaryOperator	!		3240900	0					
ANR	3241553	PrimaryExpression	"""Unsupported bitdepth\\n"""		3240900	1					
ANR	3241554	ExpressionStatement	close_file ( con_primary )	2922:4:101097:101120	3240900	12	True				
ANR	3241555	CallExpression	close_file ( con_primary )		3240900	0					
ANR	3241556	Callee	close_file		3240900	0					
ANR	3241557	Identifier	close_file		3240900	0					
ANR	3241558	ArgumentList	con_primary		3240900	1					
ANR	3241559	Argument	con_primary		3240900	0					
ANR	3241560	Identifier	con_primary		3240900	0					
ANR	3241561	ExpressionStatement	close_file ( con_alpha )	2923:4:101126:101147	3240900	13	True				
ANR	3241562	CallExpression	close_file ( con_alpha )		3240900	0					
ANR	3241563	Callee	close_file		3240900	0					
ANR	3241564	Identifier	close_file		3240900	0					
ANR	3241565	ArgumentList	con_alpha		3240900	1					
ANR	3241566	Argument	con_alpha		3240900	0					
ANR	3241567	Identifier	con_alpha		3240900	0					
ANR	3241568	ReturnType	void		3240900	1					
ANR	3241569	Identifier	split_primary_alpha		3240900	2					
ANR	3241570	ParameterList	"jxr_image_t image , void * input_handle , context * con_primary , context * con_alpha , jxr_container_t container"		3240900	3					
ANR	3241571	Parameter	jxr_image_t image	2817:25:97719:97735	3240900	0	True				
ANR	3241572	ParameterType	jxr_image_t		3240900	0					
ANR	3241573	Identifier	image		3240900	1					
ANR	3241574	Parameter	void * input_handle	2817:43:97737:97754	3240900	1	True				
ANR	3241575	ParameterType	void *		3240900	0					
ANR	3241576	Identifier	input_handle		3240900	1					
ANR	3241577	Parameter	context * con_primary	2817:63:97757:97776	3240900	2	True				
ANR	3241578	ParameterType	context *		3240900	0					
ANR	3241579	Identifier	con_primary		3240900	1					
ANR	3241580	Parameter	context * con_alpha	2817:85:97779:97796	3240900	3	True				
ANR	3241581	ParameterType	context *		3240900	0					
ANR	3241582	Identifier	con_alpha		3240900	1					
ANR	3241583	Parameter	jxr_container_t container	2817:105:97799:97823	3240900	4	True				
ANR	3241584	ParameterType	jxr_container_t		3240900	0					
ANR	3241585	Identifier	container		3240900	1					
ANR	3241586	CFGEntryNode	ENTRY		3240900		True				
ANR	3241587	CFGExitNode	EXIT		3240900		True				
ANR	3241588	Symbol	container		3240900						
ANR	3241589	Symbol	con_alpha -> ncomp		3240900						
ANR	3241590	Symbol	ncomp		3240900						
ANR	3241591	Symbol	con		3240900						
ANR	3241592	Symbol	size_luma		3240900						
ANR	3241593	Symbol	& bpi		3240900						
ANR	3241594	Symbol	& ncomp		3240900						
ANR	3241595	Symbol	numPixels		3240900						
ANR	3241596	Symbol	* con_alpha		3240900						
ANR	3241597	Symbol	con_alpha		3240900						
ANR	3241598	Symbol	hei		3240900						
ANR	3241599	Symbol	photometric		3240900						
ANR	3241600	Symbol	isOutputYUV444		3240900						
ANR	3241601	Symbol	isOutputYUV422		3240900						
ANR	3241602	Symbol	wid		3240900						
ANR	3241603	Symbol	sf		3240900						
ANR	3241604	Symbol	* con		3240900						
ANR	3241605	Symbol	con -> bpi		3240900						
ANR	3241606	Symbol	isOutputYUV420		3240900						
ANR	3241607	Symbol	con_primary -> ncomp		3240900						
ANR	3241608	Symbol	bpi		3240900						
ANR	3241609	Symbol	& sf		3240900						
ANR	3241610	Symbol	jxr_get_OUTPUT_BITDEPTH		3240900						
ANR	3241611	Symbol	combine		3240900						
ANR	3241612	Symbol	image		3240900						
ANR	3241613	Symbol	malloc		3240900						
ANR	3241614	Symbol	nPrimaryComp		3240900						
ANR	3241615	Symbol	& padBytes		3240900						
ANR	3241616	Symbol	padBytes		3240900						
ANR	3241617	Symbol	i		3240900						
ANR	3241618	Symbol	size_chroma		3240900						
ANR	3241619	Symbol	& photometric		3240900						
ANR	3241620	Symbol	isOutputCMYKDirect		3240900						
ANR	3241621	Symbol	& hei		3240900						
ANR	3241622	Symbol	bytes		3240900						
ANR	3241623	Symbol	con_primary		3240900						
ANR	3241624	Symbol	input_handle		3240900						
ANR	3241625	Symbol	* con_primary		3240900						
ANR	3241626	Symbol	& wid		3240900						
ANR	3241627	Symbol	jxrc_get_pixel_format		3240900						
ANR	3241628	Function	separate_primary_alpha	2927:0:101153:104644							
ANR	3241629	FunctionDef	"separate_primary_alpha (jxr_image_t image , void * input_handle , char * path_out , char * path_primary , char * path_alpha , jxr_container_t container)"		3241628	0					
ANR	3241630	CompoundStatement		2928:0:101302:104644	3241628	0					
ANR	3241631	IdentifierDeclStatement	context * con ;	2930:4:101309:101321	3241628	0	True				
ANR	3241632	IdentifierDecl	* con		3241628	0					
ANR	3241633	IdentifierDeclType	context *		3241628	0					
ANR	3241634	Identifier	con		3241628	1					
ANR	3241635	IdentifierDeclStatement	int i ;	2932:4:101328:101333	3241628	1	True				
ANR	3241636	IdentifierDecl	i		3241628	0					
ANR	3241637	IdentifierDeclType	int		3241628	0					
ANR	3241638	Identifier	i		3241628	1					
ANR	3241639	IdentifierDeclStatement	"int wid , hei , ncomp , bpi ;"	2933:4:101339:101363	3241628	2	True				
ANR	3241640	IdentifierDecl	wid		3241628	0					
ANR	3241641	IdentifierDeclType	int		3241628	0					
ANR	3241642	Identifier	wid		3241628	1					
ANR	3241643	IdentifierDecl	hei		3241628	1					
ANR	3241644	IdentifierDeclType	int		3241628	0					
ANR	3241645	Identifier	hei		3241628	1					
ANR	3241646	IdentifierDecl	ncomp		3241628	2					
ANR	3241647	IdentifierDeclType	int		3241628	0					
ANR	3241648	Identifier	ncomp		3241628	1					
ANR	3241649	IdentifierDecl	bpi		3241628	3					
ANR	3241650	IdentifierDeclType	int		3241628	0					
ANR	3241651	Identifier	bpi		3241628	1					
ANR	3241652	IdentifierDeclStatement	"short sf , photometric ;"	2934:4:101369:101390	3241628	3	True				
ANR	3241653	IdentifierDecl	sf		3241628	0					
ANR	3241654	IdentifierDeclType	short		3241628	0					
ANR	3241655	Identifier	sf		3241628	1					
ANR	3241656	IdentifierDecl	photometric		3241628	1					
ANR	3241657	IdentifierDeclType	short		3241628	0					
ANR	3241658	Identifier	photometric		3241628	1					
ANR	3241659	IdentifierDeclStatement	int padBytes ;	2935:4:101396:101408	3241628	4	True				
ANR	3241660	IdentifierDecl	padBytes		3241628	0					
ANR	3241661	IdentifierDeclType	int		3241628	0					
ANR	3241662	Identifier	padBytes		3241628	1					
ANR	3241663	ExpressionStatement	con = ( context * ) input_handle	2937:4:101415:101444	3241628	5	True				
ANR	3241664	AssignmentExpression	con = ( context * ) input_handle		3241628	0		=			
ANR	3241665	Identifier	con		3241628	0					
ANR	3241666	CastExpression	( context * ) input_handle		3241628	1					
ANR	3241667	CastTarget	context *		3241628	0					
ANR	3241668	Identifier	input_handle		3241628	1					
ANR	3241669	ExpressionStatement	read_setup ( con )	2938:4:101450:101465	3241628	6	True				
ANR	3241670	CallExpression	read_setup ( con )		3241628	0					
ANR	3241671	Callee	read_setup		3241628	0					
ANR	3241672	Identifier	read_setup		3241628	0					
ANR	3241673	ArgumentList	con		3241628	1					
ANR	3241674	Argument	con		3241628	0					
ANR	3241675	Identifier	con		3241628	0					
ANR	3241676	IdentifierDeclStatement	context * con_primary = ( context * ) malloc ( sizeof ( context ) ) ;	2941:4:101473:101530	3241628	7	True				
ANR	3241677	IdentifierDecl	* con_primary = ( context * ) malloc ( sizeof ( context ) )		3241628	0					
ANR	3241678	IdentifierDeclType	context *		3241628	0					
ANR	3241679	Identifier	con_primary		3241628	1					
ANR	3241680	AssignmentExpression	* con_primary = ( context * ) malloc ( sizeof ( context ) )		3241628	2		=			
ANR	3241681	Identifier	con_primary		3241628	0					
ANR	3241682	CastExpression	( context * ) malloc ( sizeof ( context ) )		3241628	1					
ANR	3241683	CastTarget	context *		3241628	0					
ANR	3241684	CallExpression	malloc ( sizeof ( context ) )		3241628	1					
ANR	3241685	Callee	malloc		3241628	0					
ANR	3241686	Identifier	malloc		3241628	0					
ANR	3241687	ArgumentList	sizeof ( context )		3241628	1					
ANR	3241688	Argument	sizeof ( context )		3241628	0					
ANR	3241689	SizeofExpression	sizeof ( context )		3241628	0					
ANR	3241690	Sizeof	sizeof		3241628	0					
ANR	3241691	SizeofOperand	context		3241628	1					
ANR	3241692	ExpressionStatement	assert ( con_primary != NULL )	2942:4:101536:101563	3241628	8	True				
ANR	3241693	CallExpression	assert ( con_primary != NULL )		3241628	0					
ANR	3241694	Callee	assert		3241628	0					
ANR	3241695	Identifier	assert		3241628	0					
ANR	3241696	ArgumentList	con_primary != NULL		3241628	1					
ANR	3241697	Argument	con_primary != NULL		3241628	0					
ANR	3241698	EqualityExpression	con_primary != NULL		3241628	0		!=			
ANR	3241699	Identifier	con_primary		3241628	0					
ANR	3241700	Identifier	NULL		3241628	1					
ANR	3241701	IdentifierDeclStatement	context * con_alpha = ( context * ) malloc ( sizeof ( context ) ) ;	2943:4:101569:101624	3241628	9	True				
ANR	3241702	IdentifierDecl	* con_alpha = ( context * ) malloc ( sizeof ( context ) )		3241628	0					
ANR	3241703	IdentifierDeclType	context *		3241628	0					
ANR	3241704	Identifier	con_alpha		3241628	1					
ANR	3241705	AssignmentExpression	* con_alpha = ( context * ) malloc ( sizeof ( context ) )		3241628	2		=			
ANR	3241706	Identifier	con_alpha		3241628	0					
ANR	3241707	CastExpression	( context * ) malloc ( sizeof ( context ) )		3241628	1					
ANR	3241708	CastTarget	context *		3241628	0					
ANR	3241709	CallExpression	malloc ( sizeof ( context ) )		3241628	1					
ANR	3241710	Callee	malloc		3241628	0					
ANR	3241711	Identifier	malloc		3241628	0					
ANR	3241712	ArgumentList	sizeof ( context )		3241628	1					
ANR	3241713	Argument	sizeof ( context )		3241628	0					
ANR	3241714	SizeofExpression	sizeof ( context )		3241628	0					
ANR	3241715	Sizeof	sizeof		3241628	0					
ANR	3241716	SizeofOperand	context		3241628	1					
ANR	3241717	ExpressionStatement	assert ( con_alpha != NULL )	2944:4:101630:101655	3241628	10	True				
ANR	3241718	CallExpression	assert ( con_alpha != NULL )		3241628	0					
ANR	3241719	Callee	assert		3241628	0					
ANR	3241720	Identifier	assert		3241628	0					
ANR	3241721	ArgumentList	con_alpha != NULL		3241628	1					
ANR	3241722	Argument	con_alpha != NULL		3241628	0					
ANR	3241723	EqualityExpression	con_alpha != NULL		3241628	0		!=			
ANR	3241724	Identifier	con_alpha		3241628	0					
ANR	3241725	Identifier	NULL		3241628	1					
ANR	3241726	ExpressionStatement	"memcpy ( con_primary , con , sizeof ( * con ) )"	2946:4:101662:101700	3241628	11	True				
ANR	3241727	CallExpression	"memcpy ( con_primary , con , sizeof ( * con ) )"		3241628	0					
ANR	3241728	Callee	memcpy		3241628	0					
ANR	3241729	Identifier	memcpy		3241628	0					
ANR	3241730	ArgumentList	con_primary		3241628	1					
ANR	3241731	Argument	con_primary		3241628	0					
ANR	3241732	Identifier	con_primary		3241628	0					
ANR	3241733	Argument	con		3241628	1					
ANR	3241734	Identifier	con		3241628	0					
ANR	3241735	Argument	sizeof ( * con )		3241628	2					
ANR	3241736	SizeofExpression	sizeof ( * con )		3241628	0					
ANR	3241737	Sizeof	sizeof		3241628	0					
ANR	3241738	UnaryOperationExpression	* con		3241628	1					
ANR	3241739	UnaryOperator	*		3241628	0					
ANR	3241740	Identifier	con		3241628	1					
ANR	3241741	ExpressionStatement	"memcpy ( con_alpha , con , sizeof ( * con ) )"	2947:4:101706:101742	3241628	12	True				
ANR	3241742	CallExpression	"memcpy ( con_alpha , con , sizeof ( * con ) )"		3241628	0					
ANR	3241743	Callee	memcpy		3241628	0					
ANR	3241744	Identifier	memcpy		3241628	0					
ANR	3241745	ArgumentList	con_alpha		3241628	1					
ANR	3241746	Argument	con_alpha		3241628	0					
ANR	3241747	Identifier	con_alpha		3241628	0					
ANR	3241748	Argument	con		3241628	1					
ANR	3241749	Identifier	con		3241628	0					
ANR	3241750	Argument	sizeof ( * con )		3241628	2					
ANR	3241751	SizeofExpression	sizeof ( * con )		3241628	0					
ANR	3241752	Sizeof	sizeof		3241628	0					
ANR	3241753	UnaryOperationExpression	* con		3241628	1					
ANR	3241754	UnaryOperator	*		3241628	0					
ANR	3241755	Identifier	con		3241628	1					
ANR	3241756	ExpressionStatement	con_primary -> alpha = con_alpha -> alpha = 0	2948:4:101748:101789	3241628	13	True				
ANR	3241757	AssignmentExpression	con_primary -> alpha = con_alpha -> alpha = 0		3241628	0		=			
ANR	3241758	PtrMemberAccess	con_primary -> alpha		3241628	0					
ANR	3241759	Identifier	con_primary		3241628	0					
ANR	3241760	Identifier	alpha		3241628	1					
ANR	3241761	AssignmentExpression	con_alpha -> alpha = 0		3241628	1		=			
ANR	3241762	PtrMemberAccess	con_alpha -> alpha		3241628	0					
ANR	3241763	Identifier	con_alpha		3241628	0					
ANR	3241764	Identifier	alpha		3241628	1					
ANR	3241765	PrimaryExpression	0		3241628	1					
ANR	3241766	ExpressionStatement	con_primary -> buf = con_alpha -> buf = 0	2949:4:101795:101832	3241628	14	True				
ANR	3241767	AssignmentExpression	con_primary -> buf = con_alpha -> buf = 0		3241628	0		=			
ANR	3241768	PtrMemberAccess	con_primary -> buf		3241628	0					
ANR	3241769	Identifier	con_primary		3241628	0					
ANR	3241770	Identifier	buf		3241628	1					
ANR	3241771	AssignmentExpression	con_alpha -> buf = 0		3241628	1		=			
ANR	3241772	PtrMemberAccess	con_alpha -> buf		3241628	0					
ANR	3241773	Identifier	con_alpha		3241628	0					
ANR	3241774	Identifier	buf		3241628	1					
ANR	3241775	PrimaryExpression	0		3241628	1					
ANR	3241776	ExpressionStatement	con_primary -> ncomp = con -> ncomp - 1	2950:4:101838:101873	3241628	15	True				
ANR	3241777	AssignmentExpression	con_primary -> ncomp = con -> ncomp - 1		3241628	0		=			
ANR	3241778	PtrMemberAccess	con_primary -> ncomp		3241628	0					
ANR	3241779	Identifier	con_primary		3241628	0					
ANR	3241780	Identifier	ncomp		3241628	1					
ANR	3241781	AdditiveExpression	con -> ncomp - 1		3241628	1		-			
ANR	3241782	PtrMemberAccess	con -> ncomp		3241628	0					
ANR	3241783	Identifier	con		3241628	0					
ANR	3241784	Identifier	ncomp		3241628	1					
ANR	3241785	PrimaryExpression	1		3241628	1					
ANR	3241786	ExpressionStatement	con_alpha -> ncomp = 1	2951:4:101879:101899	3241628	16	True				
ANR	3241787	AssignmentExpression	con_alpha -> ncomp = 1		3241628	0		=			
ANR	3241788	PtrMemberAccess	con_alpha -> ncomp		3241628	0					
ANR	3241789	Identifier	con_alpha		3241628	0					
ANR	3241790	Identifier	ncomp		3241628	1					
ANR	3241791	PrimaryExpression	1		3241628	1					
ANR	3241792	ExpressionStatement	"get_file_parameters ( con , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"	2953:4:101906:101986	3241628	17	True				
ANR	3241793	CallExpression	"get_file_parameters ( con , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"		3241628	0					
ANR	3241794	Callee	get_file_parameters		3241628	0					
ANR	3241795	Identifier	get_file_parameters		3241628	0					
ANR	3241796	ArgumentList	con		3241628	1					
ANR	3241797	Argument	con		3241628	0					
ANR	3241798	Identifier	con		3241628	0					
ANR	3241799	Argument	& wid		3241628	1					
ANR	3241800	UnaryOperationExpression	& wid		3241628	0					
ANR	3241801	UnaryOperator	&		3241628	0					
ANR	3241802	Identifier	wid		3241628	1					
ANR	3241803	Argument	& hei		3241628	2					
ANR	3241804	UnaryOperationExpression	& hei		3241628	0					
ANR	3241805	UnaryOperator	&		3241628	0					
ANR	3241806	Identifier	hei		3241628	1					
ANR	3241807	Argument	& ncomp		3241628	3					
ANR	3241808	UnaryOperationExpression	& ncomp		3241628	0					
ANR	3241809	UnaryOperator	&		3241628	0					
ANR	3241810	Identifier	ncomp		3241628	1					
ANR	3241811	Argument	& bpi		3241628	4					
ANR	3241812	UnaryOperationExpression	& bpi		3241628	0					
ANR	3241813	UnaryOperator	&		3241628	0					
ANR	3241814	Identifier	bpi		3241628	1					
ANR	3241815	Argument	& sf		3241628	5					
ANR	3241816	UnaryOperationExpression	& sf		3241628	0					
ANR	3241817	UnaryOperator	&		3241628	0					
ANR	3241818	Identifier	sf		3241628	1					
ANR	3241819	Argument	& photometric		3241628	6					
ANR	3241820	UnaryOperationExpression	& photometric		3241628	0					
ANR	3241821	UnaryOperator	&		3241628	0					
ANR	3241822	Identifier	photometric		3241628	1					
ANR	3241823	Argument	& padBytes		3241628	7					
ANR	3241824	UnaryOperationExpression	& padBytes		3241628	0					
ANR	3241825	UnaryOperator	&		3241628	0					
ANR	3241826	Identifier	padBytes		3241628	1					
ANR	3241827	IdentifierDeclStatement	"const char * p = strrchr ( con -> name , '.' ) ;"	2955:4:101993:102032	3241628	18	True				
ANR	3241828	IdentifierDecl	"* p = strrchr ( con -> name , '.' )"		3241628	0					
ANR	3241829	IdentifierDeclType	const char *		3241628	0					
ANR	3241830	Identifier	p		3241628	1					
ANR	3241831	AssignmentExpression	"* p = strrchr ( con -> name , '.' )"		3241628	2		=			
ANR	3241832	Identifier	p		3241628	0					
ANR	3241833	CallExpression	"strrchr ( con -> name , '.' )"		3241628	1					
ANR	3241834	Callee	strrchr		3241628	0					
ANR	3241835	Identifier	strrchr		3241628	0					
ANR	3241836	ArgumentList	con -> name		3241628	1					
ANR	3241837	Argument	con -> name		3241628	0					
ANR	3241838	PtrMemberAccess	con -> name		3241628	0					
ANR	3241839	Identifier	con		3241628	0					
ANR	3241840	Identifier	name		3241628	1					
ANR	3241841	Argument	'.'		3241628	1					
ANR	3241842	PrimaryExpression	'.'		3241628	0					
ANR	3241843	IfStatement	if ( p == 0 )		3241628	19					
ANR	3241844	Condition	p == 0	2956:8:102042:102045	3241628	0	True				
ANR	3241845	EqualityExpression	p == 0		3241628	0		==			
ANR	3241846	Identifier	p		3241628	0					
ANR	3241847	PrimaryExpression	0		3241628	1					
ANR	3241848	ExpressionStatement	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"	2957:8:102056:102134	3241628	1	True				
ANR	3241849	CallExpression	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"		3241628	0					
ANR	3241850	Callee	error		3241628	0					
ANR	3241851	Identifier	error		3241628	0					
ANR	3241852	ArgumentList	"""output file name %s needs a suffix to determine its format"""		3241628	1					
ANR	3241853	Argument	"""output file name %s needs a suffix to determine its format"""		3241628	0					
ANR	3241854	PrimaryExpression	"""output file name %s needs a suffix to determine its format"""		3241628	0					
ANR	3241855	Argument	con -> name		3241628	1					
ANR	3241856	PtrMemberAccess	con -> name		3241628	0					
ANR	3241857	Identifier	con		3241628	0					
ANR	3241858	Identifier	name		3241628	1					
ANR	3241859	IfStatement	"if ( ! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" ) )"		3241628	20					
ANR	3241860	Condition	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"	2958:8:102144:102217	3241628	0	True				
ANR	3241861	OrExpression	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		3241628	0		||			
ANR	3241862	UnaryOperationExpression	"! strcasecmp ( p , "".pnm"" )"		3241628	0					
ANR	3241863	UnaryOperator	!		3241628	0					
ANR	3241864	CallExpression	"strcasecmp ( p , "".pnm"" )"		3241628	1					
ANR	3241865	Callee	strcasecmp		3241628	0					
ANR	3241866	Identifier	strcasecmp		3241628	0					
ANR	3241867	ArgumentList	p		3241628	1					
ANR	3241868	Argument	p		3241628	0					
ANR	3241869	Identifier	p		3241628	0					
ANR	3241870	Argument	""".pnm"""		3241628	1					
ANR	3241871	PrimaryExpression	""".pnm"""		3241628	0					
ANR	3241872	OrExpression	"! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		3241628	1		||			
ANR	3241873	UnaryOperationExpression	"! strcasecmp ( p , "".pgm"" )"		3241628	0					
ANR	3241874	UnaryOperator	!		3241628	0					
ANR	3241875	CallExpression	"strcasecmp ( p , "".pgm"" )"		3241628	1					
ANR	3241876	Callee	strcasecmp		3241628	0					
ANR	3241877	Identifier	strcasecmp		3241628	0					
ANR	3241878	ArgumentList	p		3241628	1					
ANR	3241879	Argument	p		3241628	0					
ANR	3241880	Identifier	p		3241628	0					
ANR	3241881	Argument	""".pgm"""		3241628	1					
ANR	3241882	PrimaryExpression	""".pgm"""		3241628	0					
ANR	3241883	UnaryOperationExpression	"! strcasecmp ( p , "".ppm"" )"		3241628	1					
ANR	3241884	UnaryOperator	!		3241628	0					
ANR	3241885	CallExpression	"strcasecmp ( p , "".ppm"" )"		3241628	1					
ANR	3241886	Callee	strcasecmp		3241628	0					
ANR	3241887	Identifier	strcasecmp		3241628	0					
ANR	3241888	ArgumentList	p		3241628	1					
ANR	3241889	Argument	p		3241628	0					
ANR	3241890	Identifier	p		3241628	0					
ANR	3241891	Argument	""".ppm"""		3241628	1					
ANR	3241892	PrimaryExpression	""".ppm"""		3241628	0					
ANR	3241893	CompoundStatement		32:4:921:921	3241628	1					
ANR	3241894	ExpressionStatement	"error ( ""Alpha channel not supported by PNM, PGM and PPM"" )"	2960:8:102234:102290	3241628	0	True				
ANR	3241895	CallExpression	"error ( ""Alpha channel not supported by PNM, PGM and PPM"" )"		3241628	0					
ANR	3241896	Callee	error		3241628	0					
ANR	3241897	Identifier	error		3241628	0					
ANR	3241898	ArgumentList	"""Alpha channel not supported by PNM, PGM and PPM"""		3241628	1					
ANR	3241899	Argument	"""Alpha channel not supported by PNM, PGM and PPM"""		3241628	0					
ANR	3241900	PrimaryExpression	"""Alpha channel not supported by PNM, PGM and PPM"""		3241628	0					
ANR	3241901	ElseStatement	else		3241628	0					
ANR	3241902	IfStatement	"if ( ! strcasecmp ( p , "".tif"" ) )"		3241628	0					
ANR	3241903	Condition	"! strcasecmp ( p , "".tif"" )"	2962:13:102311:102332	3241628	0	True				
ANR	3241904	UnaryOperationExpression	"! strcasecmp ( p , "".tif"" )"		3241628	0					
ANR	3241905	UnaryOperator	!		3241628	0					
ANR	3241906	CallExpression	"strcasecmp ( p , "".tif"" )"		3241628	1					
ANR	3241907	Callee	strcasecmp		3241628	0					
ANR	3241908	Identifier	strcasecmp		3241628	0					
ANR	3241909	ArgumentList	p		3241628	1					
ANR	3241910	Argument	p		3241628	0					
ANR	3241911	Identifier	p		3241628	0					
ANR	3241912	Argument	""".tif"""		3241628	1					
ANR	3241913	PrimaryExpression	""".tif"""		3241628	0					
ANR	3241914	CompoundStatement		36:4:1036:1036	3241628	1					
ANR	3241915	ExpressionStatement	"strcpy ( path_primary , path_out )"	2964:8:102349:102379	3241628	0	True				
ANR	3241916	CallExpression	"strcpy ( path_primary , path_out )"		3241628	0					
ANR	3241917	Callee	strcpy		3241628	0					
ANR	3241918	Identifier	strcpy		3241628	0					
ANR	3241919	ArgumentList	path_primary		3241628	1					
ANR	3241920	Argument	path_primary		3241628	0					
ANR	3241921	Identifier	path_primary		3241628	0					
ANR	3241922	Argument	path_out		3241628	1					
ANR	3241923	Identifier	path_out		3241628	0					
ANR	3241924	ExpressionStatement	"strcat ( path_primary , ""_input_primary.tif"" )"	2965:8:102389:102431	3241628	1	True				
ANR	3241925	CallExpression	"strcat ( path_primary , ""_input_primary.tif"" )"		3241628	0					
ANR	3241926	Callee	strcat		3241628	0					
ANR	3241927	Identifier	strcat		3241628	0					
ANR	3241928	ArgumentList	path_primary		3241628	1					
ANR	3241929	Argument	path_primary		3241628	0					
ANR	3241930	Identifier	path_primary		3241628	0					
ANR	3241931	Argument	"""_input_primary.tif"""		3241628	1					
ANR	3241932	PrimaryExpression	"""_input_primary.tif"""		3241628	0					
ANR	3241933	ExpressionStatement	"strcpy ( path_alpha , path_out )"	2966:8:102441:102469	3241628	2	True				
ANR	3241934	CallExpression	"strcpy ( path_alpha , path_out )"		3241628	0					
ANR	3241935	Callee	strcpy		3241628	0					
ANR	3241936	Identifier	strcpy		3241628	0					
ANR	3241937	ArgumentList	path_alpha		3241628	1					
ANR	3241938	Argument	path_alpha		3241628	0					
ANR	3241939	Identifier	path_alpha		3241628	0					
ANR	3241940	Argument	path_out		3241628	1					
ANR	3241941	Identifier	path_out		3241628	0					
ANR	3241942	ExpressionStatement	"strcat ( path_alpha , ""_input_alpha.tif"" )"	2967:8:102479:102517	3241628	3	True				
ANR	3241943	CallExpression	"strcat ( path_alpha , ""_input_alpha.tif"" )"		3241628	0					
ANR	3241944	Callee	strcat		3241628	0					
ANR	3241945	Identifier	strcat		3241628	0					
ANR	3241946	ArgumentList	path_alpha		3241628	1					
ANR	3241947	Argument	path_alpha		3241628	0					
ANR	3241948	Identifier	path_alpha		3241628	0					
ANR	3241949	Argument	"""_input_alpha.tif"""		3241628	1					
ANR	3241950	PrimaryExpression	"""_input_alpha.tif"""		3241628	0					
ANR	3241951	ElseStatement	else		3241628	0					
ANR	3241952	IfStatement	"if ( ! strcasecmp ( p , "".raw"" ) )"		3241628	0					
ANR	3241953	Condition	"! strcasecmp ( p , "".raw"" )"	2970:13:102539:102560	3241628	0	True				
ANR	3241954	UnaryOperationExpression	"! strcasecmp ( p , "".raw"" )"		3241628	0					
ANR	3241955	UnaryOperator	!		3241628	0					
ANR	3241956	CallExpression	"strcasecmp ( p , "".raw"" )"		3241628	1					
ANR	3241957	Callee	strcasecmp		3241628	0					
ANR	3241958	Identifier	strcasecmp		3241628	0					
ANR	3241959	ArgumentList	p		3241628	1					
ANR	3241960	Argument	p		3241628	0					
ANR	3241961	Identifier	p		3241628	0					
ANR	3241962	Argument	""".raw"""		3241628	1					
ANR	3241963	PrimaryExpression	""".raw"""		3241628	0					
ANR	3241964	CompoundStatement		44:4:1264:1264	3241628	1					
ANR	3241965	ExpressionStatement	"strcpy ( path_primary , path_out )"	2972:8:102577:102607	3241628	0	True				
ANR	3241966	CallExpression	"strcpy ( path_primary , path_out )"		3241628	0					
ANR	3241967	Callee	strcpy		3241628	0					
ANR	3241968	Identifier	strcpy		3241628	0					
ANR	3241969	ArgumentList	path_primary		3241628	1					
ANR	3241970	Argument	path_primary		3241628	0					
ANR	3241971	Identifier	path_primary		3241628	0					
ANR	3241972	Argument	path_out		3241628	1					
ANR	3241973	Identifier	path_out		3241628	0					
ANR	3241974	ExpressionStatement	"strcat ( path_primary , ""_input_primary.raw"" )"	2973:8:102617:102659	3241628	1	True				
ANR	3241975	CallExpression	"strcat ( path_primary , ""_input_primary.raw"" )"		3241628	0					
ANR	3241976	Callee	strcat		3241628	0					
ANR	3241977	Identifier	strcat		3241628	0					
ANR	3241978	ArgumentList	path_primary		3241628	1					
ANR	3241979	Argument	path_primary		3241628	0					
ANR	3241980	Identifier	path_primary		3241628	0					
ANR	3241981	Argument	"""_input_primary.raw"""		3241628	1					
ANR	3241982	PrimaryExpression	"""_input_primary.raw"""		3241628	0					
ANR	3241983	ExpressionStatement	"strcpy ( path_alpha , path_out )"	2974:8:102669:102697	3241628	2	True				
ANR	3241984	CallExpression	"strcpy ( path_alpha , path_out )"		3241628	0					
ANR	3241985	Callee	strcpy		3241628	0					
ANR	3241986	Identifier	strcpy		3241628	0					
ANR	3241987	ArgumentList	path_alpha		3241628	1					
ANR	3241988	Argument	path_alpha		3241628	0					
ANR	3241989	Identifier	path_alpha		3241628	0					
ANR	3241990	Argument	path_out		3241628	1					
ANR	3241991	Identifier	path_out		3241628	0					
ANR	3241992	ExpressionStatement	"strcat ( path_alpha , ""_input_alpha.raw"" )"	2975:8:102707:102745	3241628	3	True				
ANR	3241993	CallExpression	"strcat ( path_alpha , ""_input_alpha.raw"" )"		3241628	0					
ANR	3241994	Callee	strcat		3241628	0					
ANR	3241995	Identifier	strcat		3241628	0					
ANR	3241996	ArgumentList	path_alpha		3241628	1					
ANR	3241997	Argument	path_alpha		3241628	0					
ANR	3241998	Identifier	path_alpha		3241628	0					
ANR	3241999	Argument	"""_input_alpha.raw"""		3241628	1					
ANR	3242000	PrimaryExpression	"""_input_alpha.raw"""		3241628	0					
ANR	3242001	ElseStatement	else		3241628	0					
ANR	3242002	ExpressionStatement	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"	2977:9:102762:102824	3241628	0	True				
ANR	3242003	CallExpression	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"		3241628	0					
ANR	3242004	Callee	error		3241628	0					
ANR	3242005	Identifier	error		3241628	0					
ANR	3242006	ArgumentList	"""unrecognized suffix on output file name %s"""		3241628	1					
ANR	3242007	Argument	"""unrecognized suffix on output file name %s"""		3241628	0					
ANR	3242008	PrimaryExpression	"""unrecognized suffix on output file name %s"""		3241628	0					
ANR	3242009	Argument	con -> name		3241628	1					
ANR	3242010	PtrMemberAccess	con -> name		3241628	0					
ANR	3242011	Identifier	con		3241628	0					
ANR	3242012	Identifier	name		3241628	1					
ANR	3242013	ExpressionStatement	con_primary -> name = path_primary	2979:4:102831:102863	3241628	21	True				
ANR	3242014	AssignmentExpression	con_primary -> name = path_primary		3241628	0		=			
ANR	3242015	PtrMemberAccess	con_primary -> name		3241628	0					
ANR	3242016	Identifier	con_primary		3241628	0					
ANR	3242017	Identifier	name		3241628	1					
ANR	3242018	Identifier	path_primary		3241628	1					
ANR	3242019	ExpressionStatement	con_alpha -> name = path_alpha	2980:4:102869:102897	3241628	22	True				
ANR	3242020	AssignmentExpression	con_alpha -> name = path_alpha		3241628	0		=			
ANR	3242021	PtrMemberAccess	con_alpha -> name		3241628	0					
ANR	3242022	Identifier	con_alpha		3241628	0					
ANR	3242023	Identifier	name		3241628	1					
ANR	3242024	Identifier	path_alpha		3241628	1					
ANR	3242025	IfStatement	if ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image ) )		3241628	23					
ANR	3242026	Condition	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )	2983:7:102908:103007	3241628	0	True				
ANR	3242027	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3241628	0		||			
ANR	3242028	CallExpression	isOutputYUV444 ( image )		3241628	0					
ANR	3242029	Callee	isOutputYUV444		3241628	0					
ANR	3242030	Identifier	isOutputYUV444		3241628	0					
ANR	3242031	ArgumentList	image		3241628	1					
ANR	3242032	Argument	image		3241628	0					
ANR	3242033	Identifier	image		3241628	0					
ANR	3242034	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3241628	1		||			
ANR	3242035	CallExpression	isOutputYUV422 ( image )		3241628	0					
ANR	3242036	Callee	isOutputYUV422		3241628	0					
ANR	3242037	Identifier	isOutputYUV422		3241628	0					
ANR	3242038	ArgumentList	image		3241628	1					
ANR	3242039	Argument	image		3241628	0					
ANR	3242040	Identifier	image		3241628	0					
ANR	3242041	OrExpression	isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		3241628	1		||			
ANR	3242042	CallExpression	isOutputYUV420 ( image )		3241628	0					
ANR	3242043	Callee	isOutputYUV420		3241628	0					
ANR	3242044	Identifier	isOutputYUV420		3241628	0					
ANR	3242045	ArgumentList	image		3241628	1					
ANR	3242046	Argument	image		3241628	0					
ANR	3242047	Identifier	image		3241628	0					
ANR	3242048	CallExpression	isOutputCMYKDirect ( image )		3241628	1					
ANR	3242049	Callee	isOutputCMYKDirect		3241628	0					
ANR	3242050	Identifier	isOutputCMYKDirect		3241628	0					
ANR	3242051	ArgumentList	image		3241628	1					
ANR	3242052	Argument	image		3241628	0					
ANR	3242053	Identifier	image		3241628	0					
ANR	3242054	CompoundStatement		57:4:1711:1711	3241628	1					
ANR	3242055	ExpressionStatement	"split_primary_alpha ( image , input_handle , con_primary , con_alpha , container )"	2985:8:103024:103098	3241628	0	True				
ANR	3242056	CallExpression	"split_primary_alpha ( image , input_handle , con_primary , con_alpha , container )"		3241628	0					
ANR	3242057	Callee	split_primary_alpha		3241628	0					
ANR	3242058	Identifier	split_primary_alpha		3241628	0					
ANR	3242059	ArgumentList	image		3241628	1					
ANR	3242060	Argument	image		3241628	0					
ANR	3242061	Identifier	image		3241628	0					
ANR	3242062	Argument	input_handle		3241628	1					
ANR	3242063	Identifier	input_handle		3241628	0					
ANR	3242064	Argument	con_primary		3241628	2					
ANR	3242065	Identifier	con_primary		3241628	0					
ANR	3242066	Argument	con_alpha		3241628	3					
ANR	3242067	Identifier	con_alpha		3241628	0					
ANR	3242068	Argument	container		3241628	4					
ANR	3242069	Identifier	container		3241628	0					
ANR	3242070	ReturnStatement	return ;	2986:8:103108:103114	3241628	1	True				
ANR	3242071	ExpressionStatement	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2989:4:103127:103263	3241628	24	True				
ANR	3242072	CallExpression	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		3241628	0					
ANR	3242073	Callee	start_output_file		3241628	0					
ANR	3242074	Identifier	start_output_file		3241628	0					
ANR	3242075	ArgumentList	con_primary		3241628	1					
ANR	3242076	Argument	con_primary		3241628	0					
ANR	3242077	Identifier	con_primary		3241628	0					
ANR	3242078	Argument	wid		3241628	1					
ANR	3242079	Identifier	wid		3241628	0					
ANR	3242080	Argument	hei		3241628	2					
ANR	3242081	Identifier	hei		3241628	0					
ANR	3242082	Argument	wid		3241628	3					
ANR	3242083	Identifier	wid		3241628	0					
ANR	3242084	Argument	hei		3241628	4					
ANR	3242085	Identifier	hei		3241628	0					
ANR	3242086	Argument	con_primary -> ncomp		3241628	5					
ANR	3242087	PtrMemberAccess	con_primary -> ncomp		3241628	0					
ANR	3242088	Identifier	con_primary		3241628	0					
ANR	3242089	Identifier	ncomp		3241628	1					
ANR	3242090	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3241628	6					
ANR	3242091	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3241628	0					
ANR	3242092	Callee	jxr_get_OUTPUT_BITDEPTH		3241628	0					
ANR	3242093	Identifier	jxr_get_OUTPUT_BITDEPTH		3241628	0					
ANR	3242094	ArgumentList	image		3241628	1					
ANR	3242095	Argument	image		3241628	0					
ANR	3242096	Identifier	image		3241628	0					
ANR	3242097	Argument	jxrc_get_pixel_format ( container )		3241628	7					
ANR	3242098	CallExpression	jxrc_get_pixel_format ( container )		3241628	0					
ANR	3242099	Callee	jxrc_get_pixel_format		3241628	0					
ANR	3242100	Identifier	jxrc_get_pixel_format		3241628	0					
ANR	3242101	ArgumentList	container		3241628	1					
ANR	3242102	Argument	container		3241628	0					
ANR	3242103	Identifier	container		3241628	0					
ANR	3242104	ExpressionStatement	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2990:4:103269:103401	3241628	25	True				
ANR	3242105	CallExpression	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		3241628	0					
ANR	3242106	Callee	start_output_file		3241628	0					
ANR	3242107	Identifier	start_output_file		3241628	0					
ANR	3242108	ArgumentList	con_alpha		3241628	1					
ANR	3242109	Argument	con_alpha		3241628	0					
ANR	3242110	Identifier	con_alpha		3241628	0					
ANR	3242111	Argument	wid		3241628	1					
ANR	3242112	Identifier	wid		3241628	0					
ANR	3242113	Argument	hei		3241628	2					
ANR	3242114	Identifier	hei		3241628	0					
ANR	3242115	Argument	wid		3241628	3					
ANR	3242116	Identifier	wid		3241628	0					
ANR	3242117	Argument	hei		3241628	4					
ANR	3242118	Identifier	hei		3241628	0					
ANR	3242119	Argument	con_alpha -> ncomp		3241628	5					
ANR	3242120	PtrMemberAccess	con_alpha -> ncomp		3241628	0					
ANR	3242121	Identifier	con_alpha		3241628	0					
ANR	3242122	Identifier	ncomp		3241628	1					
ANR	3242123	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		3241628	6					
ANR	3242124	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		3241628	0					
ANR	3242125	Callee	jxr_get_OUTPUT_BITDEPTH		3241628	0					
ANR	3242126	Identifier	jxr_get_OUTPUT_BITDEPTH		3241628	0					
ANR	3242127	ArgumentList	image		3241628	1					
ANR	3242128	Argument	image		3241628	0					
ANR	3242129	Identifier	image		3241628	0					
ANR	3242130	Argument	jxrc_get_pixel_format ( container )		3241628	7					
ANR	3242131	CallExpression	jxrc_get_pixel_format ( container )		3241628	0					
ANR	3242132	Callee	jxrc_get_pixel_format		3241628	0					
ANR	3242133	Identifier	jxrc_get_pixel_format		3241628	0					
ANR	3242134	ArgumentList	container		3241628	1					
ANR	3242135	Argument	container		3241628	0					
ANR	3242136	Identifier	container		3241628	0					
ANR	3242137	IdentifierDeclStatement	int numPixels = wid * hei ;	2992:4:103408:103433	3241628	26	True				
ANR	3242138	IdentifierDecl	numPixels = wid * hei		3241628	0					
ANR	3242139	IdentifierDeclType	int		3241628	0					
ANR	3242140	Identifier	numPixels		3241628	1					
ANR	3242141	AssignmentExpression	numPixels = wid * hei		3241628	2		=			
ANR	3242142	Identifier	numPixels		3241628	0					
ANR	3242143	MultiplicativeExpression	wid * hei		3241628	1		*			
ANR	3242144	Identifier	wid		3241628	0					
ANR	3242145	Identifier	hei		3241628	1					
ANR	3242146	IdentifierDeclStatement	int nPrimaryComp = ncomp - 1 ;	2993:4:103439:103465	3241628	27	True				
ANR	3242147	IdentifierDecl	nPrimaryComp = ncomp - 1		3241628	0					
ANR	3242148	IdentifierDeclType	int		3241628	0					
ANR	3242149	Identifier	nPrimaryComp		3241628	1					
ANR	3242150	AssignmentExpression	nPrimaryComp = ncomp - 1		3241628	2		=			
ANR	3242151	Identifier	nPrimaryComp		3241628	0					
ANR	3242152	AdditiveExpression	ncomp - 1		3241628	1		-			
ANR	3242153	Identifier	ncomp		3241628	0					
ANR	3242154	PrimaryExpression	1		3241628	1					
ANR	3242155	IfStatement	if ( con -> bpi == 8 )		3241628	28					
ANR	3242156	Condition	con -> bpi == 8	2995:8:103476:103488	3241628	0	True				
ANR	3242157	EqualityExpression	con -> bpi == 8		3241628	0		==			
ANR	3242158	PtrMemberAccess	con -> bpi		3241628	0					
ANR	3242159	Identifier	con		3241628	0					
ANR	3242160	Identifier	bpi		3241628	1					
ANR	3242161	PrimaryExpression	8		3241628	1					
ANR	3242162	CompoundStatement		68:23:2188:2188	3241628	1					
ANR	3242163	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3241628	0					
ANR	3242164	ForInit	i = 0 ;	2996:13:103506:103509	3241628	0	True				
ANR	3242165	AssignmentExpression	i = 0		3241628	0		=			
ANR	3242166	Identifier	i		3241628	0					
ANR	3242167	PrimaryExpression	0		3241628	1					
ANR	3242168	Condition	i < numPixels	2996:18:103511:103521	3241628	1	True				
ANR	3242169	RelationalExpression	i < numPixels		3241628	0		<			
ANR	3242170	Identifier	i		3241628	0					
ANR	3242171	Identifier	numPixels		3241628	1					
ANR	3242172	PostIncDecOperationExpression	i ++	2996:31:103524:103526	3241628	2	True				
ANR	3242173	Identifier	i		3241628	0					
ANR	3242174	IncDec	++		3241628	1					
ANR	3242175	CompoundStatement		70:12:2240:2283	3241628	3					
ANR	3242176	IdentifierDeclStatement	unsigned char combine [ MAX_CHANNELS + 1 + 1 ] ;	2997:12:103543:103586	3241628	0	True				
ANR	3242177	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		3241628	0					
ANR	3242178	IdentifierDeclType	unsigned char [ MAX_CHANNELS + 1 + 1 ]		3241628	0					
ANR	3242179	Identifier	combine		3241628	1					
ANR	3242180	AdditiveExpression	MAX_CHANNELS + 1 + 1		3241628	2		+			
ANR	3242181	Identifier	MAX_CHANNELS		3241628	0					
ANR	3242182	AdditiveExpression	1 + 1		3241628	1		+			
ANR	3242183	PrimaryExpression	1		3241628	0					
ANR	3242184	PrimaryExpression	1		3241628	1					
ANR	3242185	ExpressionStatement	"read_uint8 ( con , & combine [ 0 ] , ncomp )"	2998:12:103641:103675	3241628	1	True				
ANR	3242186	CallExpression	"read_uint8 ( con , & combine [ 0 ] , ncomp )"		3241628	0					
ANR	3242187	Callee	read_uint8		3241628	0					
ANR	3242188	Identifier	read_uint8		3241628	0					
ANR	3242189	ArgumentList	con		3241628	1					
ANR	3242190	Argument	con		3241628	0					
ANR	3242191	Identifier	con		3241628	0					
ANR	3242192	Argument	& combine [ 0 ]		3241628	1					
ANR	3242193	UnaryOperationExpression	& combine [ 0 ]		3241628	0					
ANR	3242194	UnaryOperator	&		3241628	0					
ANR	3242195	ArrayIndexing	combine [ 0 ]		3241628	1					
ANR	3242196	Identifier	combine		3241628	0					
ANR	3242197	PrimaryExpression	0		3241628	1					
ANR	3242198	Argument	ncomp		3241628	2					
ANR	3242199	Identifier	ncomp		3241628	0					
ANR	3242200	ExpressionStatement	"write_uint8 ( con_primary , combine , nPrimaryComp )"	2999:12:103689:103736	3241628	2	True				
ANR	3242201	CallExpression	"write_uint8 ( con_primary , combine , nPrimaryComp )"		3241628	0					
ANR	3242202	Callee	write_uint8		3241628	0					
ANR	3242203	Identifier	write_uint8		3241628	0					
ANR	3242204	ArgumentList	con_primary		3241628	1					
ANR	3242205	Argument	con_primary		3241628	0					
ANR	3242206	Identifier	con_primary		3241628	0					
ANR	3242207	Argument	combine		3241628	1					
ANR	3242208	Identifier	combine		3241628	0					
ANR	3242209	Argument	nPrimaryComp		3241628	2					
ANR	3242210	Identifier	nPrimaryComp		3241628	0					
ANR	3242211	ExpressionStatement	"write_uint8 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"	3000:12:103750:103801	3241628	3	True				
ANR	3242212	CallExpression	"write_uint8 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"		3241628	0					
ANR	3242213	Callee	write_uint8		3241628	0					
ANR	3242214	Identifier	write_uint8		3241628	0					
ANR	3242215	ArgumentList	con_alpha		3241628	1					
ANR	3242216	Argument	con_alpha		3241628	0					
ANR	3242217	Identifier	con_alpha		3241628	0					
ANR	3242218	Argument	& ( combine [ nPrimaryComp ] )		3241628	1					
ANR	3242219	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		3241628	0					
ANR	3242220	UnaryOperator	&		3241628	0					
ANR	3242221	ArrayIndexing	combine [ nPrimaryComp ]		3241628	1					
ANR	3242222	Identifier	combine		3241628	0					
ANR	3242223	Identifier	nPrimaryComp		3241628	1					
ANR	3242224	Argument	1		3241628	2					
ANR	3242225	PrimaryExpression	1		3241628	0					
ANR	3242226	ElseStatement	else		3241628	0					
ANR	3242227	IfStatement	if ( con -> bpi == 16 )		3241628	0					
ANR	3242228	Condition	con -> bpi == 16	3004:12:103832:103845	3241628	0	True				
ANR	3242229	EqualityExpression	con -> bpi == 16		3241628	0		==			
ANR	3242230	PtrMemberAccess	con -> bpi		3241628	0					
ANR	3242231	Identifier	con		3241628	0					
ANR	3242232	Identifier	bpi		3241628	1					
ANR	3242233	PrimaryExpression	16		3241628	1					
ANR	3242234	CompoundStatement		78:4:2549:2549	3241628	1					
ANR	3242235	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3241628	0					
ANR	3242236	ForInit	i = 0 ;	3006:13:103867:103870	3241628	0	True				
ANR	3242237	AssignmentExpression	i = 0		3241628	0		=			
ANR	3242238	Identifier	i		3241628	0					
ANR	3242239	PrimaryExpression	0		3241628	1					
ANR	3242240	Condition	i < numPixels	3006:18:103872:103882	3241628	1	True				
ANR	3242241	RelationalExpression	i < numPixels		3241628	0		<			
ANR	3242242	Identifier	i		3241628	0					
ANR	3242243	Identifier	numPixels		3241628	1					
ANR	3242244	PostIncDecOperationExpression	i ++	3006:31:103885:103887	3241628	2	True				
ANR	3242245	Identifier	i		3241628	0					
ANR	3242246	IncDec	++		3241628	1					
ANR	3242247	CompoundStatement		80:12:2601:2639	3241628	3					
ANR	3242248	IdentifierDeclStatement	uint16_t combine [ MAX_CHANNELS + 1 + 1 ] ;	3007:12:103904:103942	3241628	0	True				
ANR	3242249	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		3241628	0					
ANR	3242250	IdentifierDeclType	uint16_t [ MAX_CHANNELS + 1 + 1 ]		3241628	0					
ANR	3242251	Identifier	combine		3241628	1					
ANR	3242252	AdditiveExpression	MAX_CHANNELS + 1 + 1		3241628	2		+			
ANR	3242253	Identifier	MAX_CHANNELS		3241628	0					
ANR	3242254	AdditiveExpression	1 + 1		3241628	1		+			
ANR	3242255	PrimaryExpression	1		3241628	0					
ANR	3242256	PrimaryExpression	1		3241628	1					
ANR	3242257	ExpressionStatement	"read_uint16 ( con , & combine [ 0 ] , ncomp )"	3008:12:103997:104032	3241628	1	True				
ANR	3242258	CallExpression	"read_uint16 ( con , & combine [ 0 ] , ncomp )"		3241628	0					
ANR	3242259	Callee	read_uint16		3241628	0					
ANR	3242260	Identifier	read_uint16		3241628	0					
ANR	3242261	ArgumentList	con		3241628	1					
ANR	3242262	Argument	con		3241628	0					
ANR	3242263	Identifier	con		3241628	0					
ANR	3242264	Argument	& combine [ 0 ]		3241628	1					
ANR	3242265	UnaryOperationExpression	& combine [ 0 ]		3241628	0					
ANR	3242266	UnaryOperator	&		3241628	0					
ANR	3242267	ArrayIndexing	combine [ 0 ]		3241628	1					
ANR	3242268	Identifier	combine		3241628	0					
ANR	3242269	PrimaryExpression	0		3241628	1					
ANR	3242270	Argument	ncomp		3241628	2					
ANR	3242271	Identifier	ncomp		3241628	0					
ANR	3242272	ExpressionStatement	"write_uint16 ( con_primary , combine , nPrimaryComp )"	3009:12:104046:104094	3241628	2	True				
ANR	3242273	CallExpression	"write_uint16 ( con_primary , combine , nPrimaryComp )"		3241628	0					
ANR	3242274	Callee	write_uint16		3241628	0					
ANR	3242275	Identifier	write_uint16		3241628	0					
ANR	3242276	ArgumentList	con_primary		3241628	1					
ANR	3242277	Argument	con_primary		3241628	0					
ANR	3242278	Identifier	con_primary		3241628	0					
ANR	3242279	Argument	combine		3241628	1					
ANR	3242280	Identifier	combine		3241628	0					
ANR	3242281	Argument	nPrimaryComp		3241628	2					
ANR	3242282	Identifier	nPrimaryComp		3241628	0					
ANR	3242283	ExpressionStatement	"write_uint16 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"	3010:12:104108:104160	3241628	3	True				
ANR	3242284	CallExpression	"write_uint16 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"		3241628	0					
ANR	3242285	Callee	write_uint16		3241628	0					
ANR	3242286	Identifier	write_uint16		3241628	0					
ANR	3242287	ArgumentList	con_alpha		3241628	1					
ANR	3242288	Argument	con_alpha		3241628	0					
ANR	3242289	Identifier	con_alpha		3241628	0					
ANR	3242290	Argument	& ( combine [ nPrimaryComp ] )		3241628	1					
ANR	3242291	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		3241628	0					
ANR	3242292	UnaryOperator	&		3241628	0					
ANR	3242293	ArrayIndexing	combine [ nPrimaryComp ]		3241628	1					
ANR	3242294	Identifier	combine		3241628	0					
ANR	3242295	Identifier	nPrimaryComp		3241628	1					
ANR	3242296	Argument	1		3241628	2					
ANR	3242297	PrimaryExpression	1		3241628	0					
ANR	3242298	ElseStatement	else		3241628	0					
ANR	3242299	IfStatement	if ( con -> bpi == 32 )		3241628	0					
ANR	3242300	Condition	con -> bpi == 32	3013:12:104190:104203	3241628	0	True				
ANR	3242301	EqualityExpression	con -> bpi == 32		3241628	0		==			
ANR	3242302	PtrMemberAccess	con -> bpi		3241628	0					
ANR	3242303	Identifier	con		3241628	0					
ANR	3242304	Identifier	bpi		3241628	1					
ANR	3242305	PrimaryExpression	32		3241628	1					
ANR	3242306	CompoundStatement		87:4:2907:2907	3241628	1					
ANR	3242307	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		3241628	0					
ANR	3242308	ForInit	i = 0 ;	3015:13:104225:104228	3241628	0	True				
ANR	3242309	AssignmentExpression	i = 0		3241628	0		=			
ANR	3242310	Identifier	i		3241628	0					
ANR	3242311	PrimaryExpression	0		3241628	1					
ANR	3242312	Condition	i < numPixels	3015:18:104230:104240	3241628	1	True				
ANR	3242313	RelationalExpression	i < numPixels		3241628	0		<			
ANR	3242314	Identifier	i		3241628	0					
ANR	3242315	Identifier	numPixels		3241628	1					
ANR	3242316	PostIncDecOperationExpression	i ++	3015:31:104243:104245	3241628	2	True				
ANR	3242317	Identifier	i		3241628	0					
ANR	3242318	IncDec	++		3241628	1					
ANR	3242319	CompoundStatement		89:12:2959:2997	3241628	3					
ANR	3242320	IdentifierDeclStatement	uint32_t combine [ MAX_CHANNELS + 1 + 1 ] ;	3016:12:104262:104300	3241628	0	True				
ANR	3242321	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		3241628	0					
ANR	3242322	IdentifierDeclType	uint32_t [ MAX_CHANNELS + 1 + 1 ]		3241628	0					
ANR	3242323	Identifier	combine		3241628	1					
ANR	3242324	AdditiveExpression	MAX_CHANNELS + 1 + 1		3241628	2		+			
ANR	3242325	Identifier	MAX_CHANNELS		3241628	0					
ANR	3242326	AdditiveExpression	1 + 1		3241628	1		+			
ANR	3242327	PrimaryExpression	1		3241628	0					
ANR	3242328	PrimaryExpression	1		3241628	1					
ANR	3242329	ExpressionStatement	"read_uint32 ( con , & combine [ 0 ] , ncomp )"	3017:12:104355:104390	3241628	1	True				
ANR	3242330	CallExpression	"read_uint32 ( con , & combine [ 0 ] , ncomp )"		3241628	0					
ANR	3242331	Callee	read_uint32		3241628	0					
ANR	3242332	Identifier	read_uint32		3241628	0					
ANR	3242333	ArgumentList	con		3241628	1					
ANR	3242334	Argument	con		3241628	0					
ANR	3242335	Identifier	con		3241628	0					
ANR	3242336	Argument	& combine [ 0 ]		3241628	1					
ANR	3242337	UnaryOperationExpression	& combine [ 0 ]		3241628	0					
ANR	3242338	UnaryOperator	&		3241628	0					
ANR	3242339	ArrayIndexing	combine [ 0 ]		3241628	1					
ANR	3242340	Identifier	combine		3241628	0					
ANR	3242341	PrimaryExpression	0		3241628	1					
ANR	3242342	Argument	ncomp		3241628	2					
ANR	3242343	Identifier	ncomp		3241628	0					
ANR	3242344	ExpressionStatement	"write_uint32 ( con_primary , combine , nPrimaryComp )"	3018:12:104404:104452	3241628	2	True				
ANR	3242345	CallExpression	"write_uint32 ( con_primary , combine , nPrimaryComp )"		3241628	0					
ANR	3242346	Callee	write_uint32		3241628	0					
ANR	3242347	Identifier	write_uint32		3241628	0					
ANR	3242348	ArgumentList	con_primary		3241628	1					
ANR	3242349	Argument	con_primary		3241628	0					
ANR	3242350	Identifier	con_primary		3241628	0					
ANR	3242351	Argument	combine		3241628	1					
ANR	3242352	Identifier	combine		3241628	0					
ANR	3242353	Argument	nPrimaryComp		3241628	2					
ANR	3242354	Identifier	nPrimaryComp		3241628	0					
ANR	3242355	ExpressionStatement	"write_uint32 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"	3019:12:104466:104518	3241628	3	True				
ANR	3242356	CallExpression	"write_uint32 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"		3241628	0					
ANR	3242357	Callee	write_uint32		3241628	0					
ANR	3242358	Identifier	write_uint32		3241628	0					
ANR	3242359	ArgumentList	con_alpha		3241628	1					
ANR	3242360	Argument	con_alpha		3241628	0					
ANR	3242361	Identifier	con_alpha		3241628	0					
ANR	3242362	Argument	& ( combine [ nPrimaryComp ] )		3241628	1					
ANR	3242363	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		3241628	0					
ANR	3242364	UnaryOperator	&		3241628	0					
ANR	3242365	ArrayIndexing	combine [ nPrimaryComp ]		3241628	1					
ANR	3242366	Identifier	combine		3241628	0					
ANR	3242367	Identifier	nPrimaryComp		3241628	1					
ANR	3242368	Argument	1		3241628	2					
ANR	3242369	PrimaryExpression	1		3241628	0					
ANR	3242370	ElseStatement	else		3241628	0					
ANR	3242371	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	3023:8:104553:104586	3241628	0	True				
ANR	3242372	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		3241628	0					
ANR	3242373	Callee	assert		3241628	0					
ANR	3242374	Identifier	assert		3241628	0					
ANR	3242375	ArgumentList	"! ""Unsupported bitdepth\\n"""		3241628	1					
ANR	3242376	Argument	"! ""Unsupported bitdepth\\n"""		3241628	0					
ANR	3242377	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		3241628	0					
ANR	3242378	UnaryOperator	!		3241628	0					
ANR	3242379	PrimaryExpression	"""Unsupported bitdepth\\n"""		3241628	1					
ANR	3242380	ExpressionStatement	close_file ( con_primary )	3024:4:104592:104615	3241628	29	True				
ANR	3242381	CallExpression	close_file ( con_primary )		3241628	0					
ANR	3242382	Callee	close_file		3241628	0					
ANR	3242383	Identifier	close_file		3241628	0					
ANR	3242384	ArgumentList	con_primary		3241628	1					
ANR	3242385	Argument	con_primary		3241628	0					
ANR	3242386	Identifier	con_primary		3241628	0					
ANR	3242387	ExpressionStatement	close_file ( con_alpha )	3025:4:104621:104642	3241628	30	True				
ANR	3242388	CallExpression	close_file ( con_alpha )		3241628	0					
ANR	3242389	Callee	close_file		3241628	0					
ANR	3242390	Identifier	close_file		3241628	0					
ANR	3242391	ArgumentList	con_alpha		3241628	1					
ANR	3242392	Argument	con_alpha		3241628	0					
ANR	3242393	Identifier	con_alpha		3241628	0					
ANR	3242394	ReturnType	void		3241628	1					
ANR	3242395	Identifier	separate_primary_alpha		3241628	2					
ANR	3242396	ParameterList	"jxr_image_t image , void * input_handle , char * path_out , char * path_primary , char * path_alpha , jxr_container_t container"		3241628	3					
ANR	3242397	Parameter	jxr_image_t image	2927:28:101181:101197	3241628	0	True				
ANR	3242398	ParameterType	jxr_image_t		3241628	0					
ANR	3242399	Identifier	image		3241628	1					
ANR	3242400	Parameter	void * input_handle	2927:47:101200:101217	3241628	1	True				
ANR	3242401	ParameterType	void *		3241628	0					
ANR	3242402	Identifier	input_handle		3241628	1					
ANR	3242403	Parameter	char * path_out	2927:67:101220:101233	3241628	2	True				
ANR	3242404	ParameterType	char *		3241628	0					
ANR	3242405	Identifier	path_out		3241628	1					
ANR	3242406	Parameter	char * path_primary	2927:83:101236:101254	3241628	3	True				
ANR	3242407	ParameterType	char *		3241628	0					
ANR	3242408	Identifier	path_primary		3241628	1					
ANR	3242409	Parameter	char * path_alpha	2927:104:101257:101272	3241628	4	True				
ANR	3242410	ParameterType	char *		3241628	0					
ANR	3242411	Identifier	path_alpha		3241628	1					
ANR	3242412	Parameter	jxr_container_t container	2927:122:101275:101299	3241628	5	True				
ANR	3242413	ParameterType	jxr_container_t		3241628	0					
ANR	3242414	Identifier	container		3241628	1					
ANR	3242415	CFGEntryNode	ENTRY		3241628		True				
ANR	3242416	CFGExitNode	EXIT		3241628		True				
ANR	3242417	Symbol	container		3241628						
ANR	3242418	Symbol	con_alpha -> ncomp		3241628						
ANR	3242419	Symbol	path_alpha		3241628						
ANR	3242420	Symbol	con		3241628						
ANR	3242421	Symbol	con -> ncomp		3241628						
ANR	3242422	Symbol	& ncomp		3241628						
ANR	3242423	Symbol	numPixels		3241628						
ANR	3242424	Symbol	* con_alpha		3241628						
ANR	3242425	Symbol	hei		3241628						
ANR	3242426	Symbol	isOutputYUV444		3241628						
ANR	3242427	Symbol	con_alpha -> name		3241628						
ANR	3242428	Symbol	con -> bpi		3241628						
ANR	3242429	Symbol	& sf		3241628						
ANR	3242430	Symbol	strcasecmp		3241628						
ANR	3242431	Symbol	combine		3241628						
ANR	3242432	Symbol	image		3241628						
ANR	3242433	Symbol	NULL		3241628						
ANR	3242434	Symbol	padBytes		3241628						
ANR	3242435	Symbol	path_primary		3241628						
ANR	3242436	Symbol	path_out		3241628						
ANR	3242437	Symbol	con_alpha -> buf		3241628						
ANR	3242438	Symbol	con_primary -> buf		3241628						
ANR	3242439	Symbol	& photometric		3241628						
ANR	3242440	Symbol	isOutputCMYKDirect		3241628						
ANR	3242441	Symbol	& hei		3241628						
ANR	3242442	Symbol	con_primary		3241628						
ANR	3242443	Symbol	input_handle		3241628						
ANR	3242444	Symbol	ncomp		3241628						
ANR	3242445	Symbol	con_primary -> name		3241628						
ANR	3242446	Symbol	& bpi		3241628						
ANR	3242447	Symbol	con_alpha		3241628						
ANR	3242448	Symbol	photometric		3241628						
ANR	3242449	Symbol	isOutputYUV422		3241628						
ANR	3242450	Symbol	wid		3241628						
ANR	3242451	Symbol	sf		3241628						
ANR	3242452	Symbol	* con		3241628						
ANR	3242453	Symbol	isOutputYUV420		3241628						
ANR	3242454	Symbol	con_primary -> ncomp		3241628						
ANR	3242455	Symbol	bpi		3241628						
ANR	3242456	Symbol	jxr_get_OUTPUT_BITDEPTH		3241628						
ANR	3242457	Symbol	malloc		3241628						
ANR	3242458	Symbol	nPrimaryComp		3241628						
ANR	3242459	Symbol	& padBytes		3241628						
ANR	3242460	Symbol	i		3241628						
ANR	3242461	Symbol	con -> name		3241628						
ANR	3242462	Symbol	p		3241628						
ANR	3242463	Symbol	con_alpha -> alpha		3241628						
ANR	3242464	Symbol	con_primary -> alpha		3241628						
ANR	3242465	Symbol	strrchr		3241628						
ANR	3242466	Symbol	* con_primary		3241628						
ANR	3242467	Symbol	& wid		3241628						
ANR	3242468	Symbol	jxrc_get_pixel_format		3241628						
