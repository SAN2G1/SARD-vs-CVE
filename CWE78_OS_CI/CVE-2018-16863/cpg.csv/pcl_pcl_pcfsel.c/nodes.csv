command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8049172	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcfsel.c								
ANR	8049173	DeclStmt									
ANR	8049174	Decl							extern int	extern int ( int )	abs
ANR	8049175	ClassDef	<unnamed>	36:8:1163:1458							
ANR	8049176	DeclStmt									
ANR	8049177	Decl									score_index_t
ANR	8049178	DeclStmt									
ANR	8049179	Decl							int	int [ score_limit ]	match_score_t
ANR	8049180	Function	dmprint_cc	71:0:1750:1962							
ANR	8049181	FunctionDef	"dmprint_cc (const gs_memory_t * mem , const byte * pcc)"		8049180	0					
ANR	8049182	CompoundStatement		73:0:1816:1962	8049180	0					
ANR	8049183	ExpressionStatement	"dmprintf8 ( mem , ""cc=%02x %02x %02x %02x %02x %02x %02x %02x"" , pcc [ 0 ] , pcc [ 1 ] , pcc [ 2 ] , pcc [ 3 ] , pcc [ 4 ] , pcc [ 5 ] , pcc [ 6 ] , pcc [ 7 ] )"	74:4:1822:1960	8049180	0	True				
ANR	8049184	CallExpression	"dmprintf8 ( mem , ""cc=%02x %02x %02x %02x %02x %02x %02x %02x"" , pcc [ 0 ] , pcc [ 1 ] , pcc [ 2 ] , pcc [ 3 ] , pcc [ 4 ] , pcc [ 5 ] , pcc [ 6 ] , pcc [ 7 ] )"		8049180	0					
ANR	8049185	Callee	dmprintf8		8049180	0					
ANR	8049186	Identifier	dmprintf8		8049180	0					
ANR	8049187	ArgumentList	mem		8049180	1					
ANR	8049188	Argument	mem		8049180	0					
ANR	8049189	Identifier	mem		8049180	0					
ANR	8049190	Argument	"""cc=%02x %02x %02x %02x %02x %02x %02x %02x"""		8049180	1					
ANR	8049191	PrimaryExpression	"""cc=%02x %02x %02x %02x %02x %02x %02x %02x"""		8049180	0					
ANR	8049192	Argument	pcc [ 0 ]		8049180	2					
ANR	8049193	ArrayIndexing	pcc [ 0 ]		8049180	0					
ANR	8049194	Identifier	pcc		8049180	0					
ANR	8049195	PrimaryExpression	0		8049180	1					
ANR	8049196	Argument	pcc [ 1 ]		8049180	3					
ANR	8049197	ArrayIndexing	pcc [ 1 ]		8049180	0					
ANR	8049198	Identifier	pcc		8049180	0					
ANR	8049199	PrimaryExpression	1		8049180	1					
ANR	8049200	Argument	pcc [ 2 ]		8049180	4					
ANR	8049201	ArrayIndexing	pcc [ 2 ]		8049180	0					
ANR	8049202	Identifier	pcc		8049180	0					
ANR	8049203	PrimaryExpression	2		8049180	1					
ANR	8049204	Argument	pcc [ 3 ]		8049180	5					
ANR	8049205	ArrayIndexing	pcc [ 3 ]		8049180	0					
ANR	8049206	Identifier	pcc		8049180	0					
ANR	8049207	PrimaryExpression	3		8049180	1					
ANR	8049208	Argument	pcc [ 4 ]		8049180	6					
ANR	8049209	ArrayIndexing	pcc [ 4 ]		8049180	0					
ANR	8049210	Identifier	pcc		8049180	0					
ANR	8049211	PrimaryExpression	4		8049180	1					
ANR	8049212	Argument	pcc [ 5 ]		8049180	7					
ANR	8049213	ArrayIndexing	pcc [ 5 ]		8049180	0					
ANR	8049214	Identifier	pcc		8049180	0					
ANR	8049215	PrimaryExpression	5		8049180	1					
ANR	8049216	Argument	pcc [ 6 ]		8049180	8					
ANR	8049217	ArrayIndexing	pcc [ 6 ]		8049180	0					
ANR	8049218	Identifier	pcc		8049180	0					
ANR	8049219	PrimaryExpression	6		8049180	1					
ANR	8049220	Argument	pcc [ 7 ]		8049180	9					
ANR	8049221	ArrayIndexing	pcc [ 7 ]		8049180	0					
ANR	8049222	Identifier	pcc		8049180	0					
ANR	8049223	PrimaryExpression	7		8049180	1					
ANR	8049224	ReturnType	static void		8049180	1					
ANR	8049225	Identifier	dmprint_cc		8049180	2					
ANR	8049226	ParameterList	"const gs_memory_t * mem , const byte * pcc"		8049180	3					
ANR	8049227	Parameter	const gs_memory_t * mem	72:11:1773:1795	8049180	0	True				
ANR	8049228	ParameterType	const gs_memory_t *		8049180	0					
ANR	8049229	Identifier	mem		8049180	1					
ANR	8049230	Parameter	const byte * pcc	72:36:1798:1813	8049180	1	True				
ANR	8049231	ParameterType	const byte *		8049180	0					
ANR	8049232	Identifier	pcc		8049180	1					
ANR	8049233	CFGEntryNode	ENTRY		8049180		True				
ANR	8049234	CFGExitNode	EXIT		8049180		True				
ANR	8049235	Symbol	pcc		8049180						
ANR	8049236	Symbol	mem		8049180						
ANR	8049237	Symbol	* pcc		8049180						
ANR	8049238	Function	dmprint_font_params_t	78:0:1965:2409							
ANR	8049239	FunctionDef	"dmprint_font_params_t (const gs_memory_t * mem , const pl_font_params_t * pfp)"		8049238	0					
ANR	8049240	CompoundStatement		80:0:2054:2409	8049238	0					
ANR	8049241	ExpressionStatement	"dmprintf8 ( mem , ""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"" , pfp -> symbol_set , ( pfp -> proportional_spacing ? ""prop."" : ""fixed"" ) , pl_fp_pitch_cp ( pfp ) / 100.0 , pfp -> height_4ths / 4 , pfp -> style , pfp -> stroke_weight , pfp -> typeface_family , ( 0x07FF & pfp -> typeface_family ) )"	81:4:2060:2407	8049238	0	True				
ANR	8049242	CallExpression	"dmprintf8 ( mem , ""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"" , pfp -> symbol_set , ( pfp -> proportional_spacing ? ""prop."" : ""fixed"" ) , pl_fp_pitch_cp ( pfp ) / 100.0 , pfp -> height_4ths / 4 , pfp -> style , pfp -> stroke_weight , pfp -> typeface_family , ( 0x07FF & pfp -> typeface_family ) )"		8049238	0					
ANR	8049243	Callee	dmprintf8		8049238	0					
ANR	8049244	Identifier	dmprintf8		8049238	0					
ANR	8049245	ArgumentList	mem		8049238	1					
ANR	8049246	Argument	mem		8049238	0					
ANR	8049247	Identifier	mem		8049238	0					
ANR	8049248	Argument	"""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"""		8049238	1					
ANR	8049249	PrimaryExpression	"""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"""		8049238	0					
ANR	8049250	Argument	pfp -> symbol_set		8049238	2					
ANR	8049251	PtrMemberAccess	pfp -> symbol_set		8049238	0					
ANR	8049252	Identifier	pfp		8049238	0					
ANR	8049253	Identifier	symbol_set		8049238	1					
ANR	8049254	Argument	"pfp -> proportional_spacing ? ""prop."" : ""fixed"""		8049238	3					
ANR	8049255	ConditionalExpression	"pfp -> proportional_spacing ? ""prop."" : ""fixed"""		8049238	0					
ANR	8049256	Condition	pfp -> proportional_spacing		8049238	0					
ANR	8049257	PtrMemberAccess	pfp -> proportional_spacing		8049238	0					
ANR	8049258	Identifier	pfp		8049238	0					
ANR	8049259	Identifier	proportional_spacing		8049238	1					
ANR	8049260	PrimaryExpression	"""prop."""		8049238	1					
ANR	8049261	PrimaryExpression	"""fixed"""		8049238	2					
ANR	8049262	Argument	pl_fp_pitch_cp ( pfp ) / 100.0		8049238	4					
ANR	8049263	MultiplicativeExpression	pl_fp_pitch_cp ( pfp ) / 100.0		8049238	0		/			
ANR	8049264	CallExpression	pl_fp_pitch_cp ( pfp )		8049238	0					
ANR	8049265	Callee	pl_fp_pitch_cp		8049238	0					
ANR	8049266	Identifier	pl_fp_pitch_cp		8049238	0					
ANR	8049267	ArgumentList	pfp		8049238	1					
ANR	8049268	Argument	pfp		8049238	0					
ANR	8049269	Identifier	pfp		8049238	0					
ANR	8049270	PrimaryExpression	100.0		8049238	1					
ANR	8049271	Argument	pfp -> height_4ths / 4		8049238	5					
ANR	8049272	MultiplicativeExpression	pfp -> height_4ths / 4		8049238	0		/			
ANR	8049273	PtrMemberAccess	pfp -> height_4ths		8049238	0					
ANR	8049274	Identifier	pfp		8049238	0					
ANR	8049275	Identifier	height_4ths		8049238	1					
ANR	8049276	PrimaryExpression	4		8049238	1					
ANR	8049277	Argument	pfp -> style		8049238	6					
ANR	8049278	PtrMemberAccess	pfp -> style		8049238	0					
ANR	8049279	Identifier	pfp		8049238	0					
ANR	8049280	Identifier	style		8049238	1					
ANR	8049281	Argument	pfp -> stroke_weight		8049238	7					
ANR	8049282	PtrMemberAccess	pfp -> stroke_weight		8049238	0					
ANR	8049283	Identifier	pfp		8049238	0					
ANR	8049284	Identifier	stroke_weight		8049238	1					
ANR	8049285	Argument	pfp -> typeface_family		8049238	8					
ANR	8049286	PtrMemberAccess	pfp -> typeface_family		8049238	0					
ANR	8049287	Identifier	pfp		8049238	0					
ANR	8049288	Identifier	typeface_family		8049238	1					
ANR	8049289	Argument	0x07FF & pfp -> typeface_family		8049238	9					
ANR	8049290	BitAndExpression	0x07FF & pfp -> typeface_family		8049238	0		&			
ANR	8049291	PrimaryExpression	0x07FF		8049238	0					
ANR	8049292	PtrMemberAccess	pfp -> typeface_family		8049238	1					
ANR	8049293	Identifier	pfp		8049238	0					
ANR	8049294	Identifier	typeface_family		8049238	1					
ANR	8049295	ReturnType	static void		8049238	1					
ANR	8049296	Identifier	dmprint_font_params_t		8049238	2					
ANR	8049297	ParameterList	"const gs_memory_t * mem , const pl_font_params_t * pfp"		8049238	3					
ANR	8049298	Parameter	const gs_memory_t * mem	79:22:1999:2021	8049238	0	True				
ANR	8049299	ParameterType	const gs_memory_t *		8049238	0					
ANR	8049300	Identifier	mem		8049238	1					
ANR	8049301	Parameter	const pl_font_params_t * pfp	79:47:2024:2051	8049238	1	True				
ANR	8049302	ParameterType	const pl_font_params_t *		8049238	0					
ANR	8049303	Identifier	pfp		8049238	1					
ANR	8049304	CFGEntryNode	ENTRY		8049238		True				
ANR	8049305	CFGExitNode	EXIT		8049238		True				
ANR	8049306	Symbol	mem		8049238						
ANR	8049307	Symbol	* pfp		8049238						
ANR	8049308	Symbol	pfp -> typeface_family		8049238						
ANR	8049309	Symbol	pl_fp_pitch_cp		8049238						
ANR	8049310	Symbol	pfp -> proportional_spacing		8049238						
ANR	8049311	Symbol	pfp -> symbol_set		8049238						
ANR	8049312	Symbol	pfp		8049238						
ANR	8049313	Symbol	pfp -> stroke_weight		8049238						
ANR	8049314	Symbol	pfp -> style		8049238						
ANR	8049315	Symbol	pfp -> height_4ths		8049238						
ANR	8049316	Function	dmprint_ufst_font_name	91:0:2435:3273							
ANR	8049317	FunctionDef	"dmprint_ufst_font_name (const gs_memory_t * mem , const pl_font_t * pfont)"		8049316	0					
ANR	8049318	CompoundStatement		93:0:2520:3273	8049316	0					
ANR	8049319	Statement	define	94:1:2523:2528	8049316	0	True				
ANR	8049320	Statement	fontnames	94:8:2530:2538	8049316	1	True				
ANR	8049321	Statement	(	94:17:2539:2539	8049316	2	True				
ANR	8049322	Statement	agfascreenfontname	94:18:2540:2557	8049316	3	True				
ANR	8049323	Statement	","	94:36:2558:2558	8049316	4	True				
ANR	8049324	Statement	agfaname	94:38:2560:2567	8049316	5	True				
ANR	8049325	Statement	","	94:46:2568:2568	8049316	6	True				
ANR	8049326	Statement	urwname	94:48:2570:2576	8049316	7	True				
ANR	8049327	Statement	)	94:55:2577:2577	8049316	8	True				
ANR	8049328	Statement	agfaname	94:57:2579:2586	8049316	9	True				
ANR	8049329	Statement	include	95:1:2589:2595	8049316	10	True				
ANR	8049330	Statement	"""plftable.h"""	95:9:2597:2608	8049316	11	True				
ANR	8049331	IdentifierDeclStatement	int i ;	96:4:2614:2619	8049316	12	True				
ANR	8049332	IdentifierDecl	i		8049316	0					
ANR	8049333	IdentifierDeclType	int		8049316	0					
ANR	8049334	Identifier	i		8049316	1					
ANR	8049335	IdentifierDeclStatement	bool found = false ;	97:4:2625:2643	8049316	13	True				
ANR	8049336	IdentifierDecl	found = false		8049316	0					
ANR	8049337	IdentifierDeclType	bool		8049316	0					
ANR	8049338	Identifier	found		8049316	1					
ANR	8049339	AssignmentExpression	found = false		8049316	2		=			
ANR	8049340	Identifier	false		8049316	0					
ANR	8049341	Identifier	false		8049316	1					
ANR	8049342	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	98:4:2649:2692	8049316	14	True				
ANR	8049343	CastExpression	( void ) pl_built_in_resident_font_table_count		8049316	0					
ANR	8049344	CastTarget	void		8049316	0					
ANR	8049345	Identifier	pl_built_in_resident_font_table_count		8049316	1					
ANR	8049346	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) ; i ++ )		8049316	15					
ANR	8049347	ForInit	i = 0 ;	100:9:2704:2709	8049316	0	True				
ANR	8049348	AssignmentExpression	i = 0		8049316	0		=			
ANR	8049349	Identifier	i		8049316	0					
ANR	8049350	PrimaryExpression	0		8049316	1					
ANR	8049351	Condition	strlen ( resident_table [ i ] . full_font_name )	100:16:2711:2750	8049316	1	True				
ANR	8049352	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8049316	0					
ANR	8049353	Callee	strlen		8049316	0					
ANR	8049354	Identifier	strlen		8049316	0					
ANR	8049355	ArgumentList	resident_table [ i ] . full_font_name		8049316	1					
ANR	8049356	Argument	resident_table [ i ] . full_font_name		8049316	0					
ANR	8049357	MemberAccess	resident_table [ i ] . full_font_name		8049316	0					
ANR	8049358	ArrayIndexing	resident_table [ i ]		8049316	0					
ANR	8049359	Identifier	resident_table		8049316	0					
ANR	8049360	Identifier	i		8049316	1					
ANR	8049361	Identifier	full_font_name		8049316	1					
ANR	8049362	PostIncDecOperationExpression	i ++	100:58:2753:2755	8049316	2	True				
ANR	8049363	Identifier	i		8049316	0					
ANR	8049364	IncDec	++		8049316	1					
ANR	8049365	CompoundStatement		8:63:237:237	8049316	3					
ANR	8049366	IfStatement	"if ( ! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) ) )"		8049316	0					
ANR	8049367	Condition	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"	101:12:2772:2864	8049316	0	True				
ANR	8049368	UnaryOperationExpression	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8049316	0					
ANR	8049369	UnaryOperator	!		8049316	0					
ANR	8049370	CallExpression	"memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8049316	1					
ANR	8049371	Callee	memcmp		8049316	0					
ANR	8049372	Identifier	memcmp		8049316	0					
ANR	8049373	ArgumentList	& resident_table [ i ] . params		8049316	1					
ANR	8049374	Argument	& resident_table [ i ] . params		8049316	0					
ANR	8049375	UnaryOperationExpression	& resident_table [ i ] . params		8049316	0					
ANR	8049376	UnaryOperator	&		8049316	0					
ANR	8049377	MemberAccess	resident_table [ i ] . params		8049316	1					
ANR	8049378	ArrayIndexing	resident_table [ i ]		8049316	0					
ANR	8049379	Identifier	resident_table		8049316	0					
ANR	8049380	Identifier	i		8049316	1					
ANR	8049381	Identifier	params		8049316	1					
ANR	8049382	Argument	& pfont -> params		8049316	1					
ANR	8049383	UnaryOperationExpression	& pfont -> params		8049316	0					
ANR	8049384	UnaryOperator	&		8049316	0					
ANR	8049385	PtrMemberAccess	pfont -> params		8049316	1					
ANR	8049386	Identifier	pfont		8049316	0					
ANR	8049387	Identifier	params		8049316	1					
ANR	8049388	Argument	sizeof ( pfont -> params )		8049316	2					
ANR	8049389	SizeofExpression	sizeof ( pfont -> params )		8049316	0					
ANR	8049390	Sizeof	sizeof		8049316	0					
ANR	8049391	PtrMemberAccess	pfont -> params		8049316	1					
ANR	8049392	Identifier	pfont		8049316	0					
ANR	8049393	Identifier	params		8049316	1					
ANR	8049394	CompoundStatement		10:60:346:346	8049316	1					
ANR	8049395	ExpressionStatement	found = true	104:12:2882:2894	8049316	0	True				
ANR	8049396	AssignmentExpression	found = true		8049316	0		=			
ANR	8049397	Identifier	found		8049316	0					
ANR	8049398	Identifier	true		8049316	1					
ANR	8049399	BreakStatement	break ;	105:12:2908:2913	8049316	1	True				
ANR	8049400	IfStatement	if ( found )		8049316	16					
ANR	8049401	Condition	found	108:8:2939:2943	8049316	0	True				
ANR	8049402	Identifier	found		8049316	0					
ANR	8049403	CompoundStatement		16:15:425:425	8049316	1					
ANR	8049404	ExpressionStatement	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"	109:8:2956:3011	8049316	0	True				
ANR	8049405	CallExpression	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"		8049316	0					
ANR	8049406	Callee	dmprintf1		8049316	0					
ANR	8049407	Identifier	dmprintf1		8049316	0					
ANR	8049408	ArgumentList	mem		8049316	1					
ANR	8049409	Argument	mem		8049316	0					
ANR	8049410	Identifier	mem		8049316	0					
ANR	8049411	Argument	"""%s """		8049316	1					
ANR	8049412	PrimaryExpression	"""%s """		8049316	0					
ANR	8049413	Argument	resident_table [ i ] . full_font_name		8049316	2					
ANR	8049414	MemberAccess	resident_table [ i ] . full_font_name		8049316	0					
ANR	8049415	ArrayIndexing	resident_table [ i ]		8049316	0					
ANR	8049416	Identifier	resident_table		8049316	0					
ANR	8049417	Identifier	i		8049316	1					
ANR	8049418	Identifier	full_font_name		8049316	1					
ANR	8049419	ElseStatement	else		8049316	0					
ANR	8049420	CompoundStatement		18:11:503:503	8049316	0					
ANR	8049421	IfStatement	if ( pfont -> storage == pcds_internal )		8049316	0					
ANR	8049422	Condition	pfont -> storage == pcds_internal	111:12:3038:3068	8049316	0	True				
ANR	8049423	EqualityExpression	pfont -> storage == pcds_internal		8049316	0		==			
ANR	8049424	PtrMemberAccess	pfont -> storage		8049316	0					
ANR	8049425	Identifier	pfont		8049316	0					
ANR	8049426	Identifier	storage		8049316	1					
ANR	8049427	Identifier	pcds_internal		8049316	1					
ANR	8049428	CompoundStatement		19:45:550:550	8049316	1					
ANR	8049429	ExpressionStatement	"dmprintf ( mem , ""internal font not found in resident table"" )"	112:12:3085:3143	8049316	0	True				
ANR	8049430	CallExpression	"dmprintf ( mem , ""internal font not found in resident table"" )"		8049316	0					
ANR	8049431	Callee	dmprintf		8049316	0					
ANR	8049432	Identifier	dmprintf		8049316	0					
ANR	8049433	ArgumentList	mem		8049316	1					
ANR	8049434	Argument	mem		8049316	0					
ANR	8049435	Identifier	mem		8049316	0					
ANR	8049436	Argument	"""internal font not found in resident table"""		8049316	1					
ANR	8049437	PrimaryExpression	"""internal font not found in resident table"""		8049316	0					
ANR	8049438	ExpressionStatement	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"	113:12:3157:3197	8049316	1	True				
ANR	8049439	CallExpression	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"		8049316	0					
ANR	8049440	Callee	dmprintf1		8049316	0					
ANR	8049441	Identifier	dmprintf1		8049316	0					
ANR	8049442	ArgumentList	mem		8049316	1					
ANR	8049443	Argument	mem		8049316	0					
ANR	8049444	Identifier	mem		8049316	0					
ANR	8049445	Argument	"""%s\\n"""		8049316	1					
ANR	8049446	PrimaryExpression	"""%s\\n"""		8049316	0					
ANR	8049447	Argument	pfont -> font_file		8049316	2					
ANR	8049448	PtrMemberAccess	pfont -> font_file		8049316	0					
ANR	8049449	Identifier	pfont		8049316	0					
ANR	8049450	Identifier	font_file		8049316	1					
ANR	8049451	ExpressionStatement	"dmprintf ( mem , ""external font "" )"	115:8:3217:3248	8049316	1	True				
ANR	8049452	CallExpression	"dmprintf ( mem , ""external font "" )"		8049316	0					
ANR	8049453	Callee	dmprintf		8049316	0					
ANR	8049454	Identifier	dmprintf		8049316	0					
ANR	8049455	ArgumentList	mem		8049316	1					
ANR	8049456	Argument	mem		8049316	0					
ANR	8049457	Identifier	mem		8049316	0					
ANR	8049458	Argument	"""external font """		8049316	1					
ANR	8049459	PrimaryExpression	"""external font """		8049316	0					
ANR	8049460	Statement	undef	117:1:3257:3261	8049316	17	True				
ANR	8049461	Statement	fontnames	117:7:3263:3271	8049316	18	True				
ANR	8049462	ReturnType	static void		8049316	1					
ANR	8049463	Identifier	dmprint_ufst_font_name		8049316	2					
ANR	8049464	ParameterList	"const gs_memory_t * mem , const pl_font_t * pfont"		8049316	3					
ANR	8049465	Parameter	const gs_memory_t * mem	92:23:2470:2492	8049316	0	True				
ANR	8049466	ParameterType	const gs_memory_t *		8049316	0					
ANR	8049467	Identifier	mem		8049316	1					
ANR	8049468	Parameter	const pl_font_t * pfont	92:48:2495:2517	8049316	1	True				
ANR	8049469	ParameterType	const pl_font_t *		8049316	0					
ANR	8049470	Identifier	pfont		8049316	1					
ANR	8049471	CFGEntryNode	ENTRY		8049316		True				
ANR	8049472	CFGExitNode	EXIT		8049316		True				
ANR	8049473	Symbol	pcds_internal		8049316						
ANR	8049474	Symbol	pfont		8049316						
ANR	8049475	Symbol	pfont -> params		8049316						
ANR	8049476	Symbol	false		8049316						
ANR	8049477	Symbol	i		8049316						
ANR	8049478	Symbol	* resident_table		8049316						
ANR	8049479	Symbol	& resident_table [ i ] . params		8049316						
ANR	8049480	Symbol	resident_table [ i ] . full_font_name		8049316						
ANR	8049481	Symbol	strlen		8049316						
ANR	8049482	Symbol	* pfont		8049316						
ANR	8049483	Symbol	found		8049316						
ANR	8049484	Symbol	* i		8049316						
ANR	8049485	Symbol	memcmp		8049316						
ANR	8049486	Symbol	mem		8049316						
ANR	8049487	Symbol	pfont -> storage		8049316						
ANR	8049488	Symbol	true		8049316						
ANR	8049489	Symbol	pfont -> font_file		8049316						
ANR	8049490	Symbol	& pfont -> params		8049316						
ANR	8049491	Symbol	resident_table		8049316						
ANR	8049492	Function	dmprint_font_name	120:0:3276:4108							
ANR	8049493	FunctionDef	"dmprint_font_name (const gs_memory_t * mem , const pl_font_t * pfont)"		8049492	0					
ANR	8049494	CompoundStatement		122:0:3356:4108	8049492	0					
ANR	8049495	Statement	define	123:1:3359:3364	8049492	0	True				
ANR	8049496	Statement	fontnames	123:8:3366:3374	8049492	1	True				
ANR	8049497	Statement	(	123:17:3375:3375	8049492	2	True				
ANR	8049498	Statement	agfascreenfontname	123:18:3376:3393	8049492	3	True				
ANR	8049499	Statement	","	123:36:3394:3394	8049492	4	True				
ANR	8049500	Statement	agfaname	123:38:3396:3403	8049492	5	True				
ANR	8049501	Statement	","	123:46:3404:3404	8049492	6	True				
ANR	8049502	Statement	urwname	123:48:3406:3412	8049492	7	True				
ANR	8049503	Statement	)	123:55:3413:3413	8049492	8	True				
ANR	8049504	Statement	urwname	123:57:3415:3421	8049492	9	True				
ANR	8049505	Statement	include	124:1:3424:3430	8049492	10	True				
ANR	8049506	Statement	"""plftable.h"""	124:9:3432:3443	8049492	11	True				
ANR	8049507	IdentifierDeclStatement	int i ;	125:4:3449:3454	8049492	12	True				
ANR	8049508	IdentifierDecl	i		8049492	0					
ANR	8049509	IdentifierDeclType	int		8049492	0					
ANR	8049510	Identifier	i		8049492	1					
ANR	8049511	IdentifierDeclStatement	bool found = false ;	126:4:3460:3478	8049492	13	True				
ANR	8049512	IdentifierDecl	found = false		8049492	0					
ANR	8049513	IdentifierDeclType	bool		8049492	0					
ANR	8049514	Identifier	found		8049492	1					
ANR	8049515	AssignmentExpression	found = false		8049492	2		=			
ANR	8049516	Identifier	false		8049492	0					
ANR	8049517	Identifier	false		8049492	1					
ANR	8049518	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	127:4:3484:3527	8049492	14	True				
ANR	8049519	CastExpression	( void ) pl_built_in_resident_font_table_count		8049492	0					
ANR	8049520	CastTarget	void		8049492	0					
ANR	8049521	Identifier	pl_built_in_resident_font_table_count		8049492	1					
ANR	8049522	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) ; i ++ )		8049492	15					
ANR	8049523	ForInit	i = 0 ;	129:9:3539:3544	8049492	0	True				
ANR	8049524	AssignmentExpression	i = 0		8049492	0		=			
ANR	8049525	Identifier	i		8049492	0					
ANR	8049526	PrimaryExpression	0		8049492	1					
ANR	8049527	Condition	strlen ( resident_table [ i ] . full_font_name )	129:16:3546:3585	8049492	1	True				
ANR	8049528	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8049492	0					
ANR	8049529	Callee	strlen		8049492	0					
ANR	8049530	Identifier	strlen		8049492	0					
ANR	8049531	ArgumentList	resident_table [ i ] . full_font_name		8049492	1					
ANR	8049532	Argument	resident_table [ i ] . full_font_name		8049492	0					
ANR	8049533	MemberAccess	resident_table [ i ] . full_font_name		8049492	0					
ANR	8049534	ArrayIndexing	resident_table [ i ]		8049492	0					
ANR	8049535	Identifier	resident_table		8049492	0					
ANR	8049536	Identifier	i		8049492	1					
ANR	8049537	Identifier	full_font_name		8049492	1					
ANR	8049538	PostIncDecOperationExpression	i ++	129:58:3588:3590	8049492	2	True				
ANR	8049539	Identifier	i		8049492	0					
ANR	8049540	IncDec	++		8049492	1					
ANR	8049541	CompoundStatement		8:63:236:236	8049492	3					
ANR	8049542	IfStatement	"if ( ! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) ) )"		8049492	0					
ANR	8049543	Condition	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"	130:12:3607:3699	8049492	0	True				
ANR	8049544	UnaryOperationExpression	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8049492	0					
ANR	8049545	UnaryOperator	!		8049492	0					
ANR	8049546	CallExpression	"memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8049492	1					
ANR	8049547	Callee	memcmp		8049492	0					
ANR	8049548	Identifier	memcmp		8049492	0					
ANR	8049549	ArgumentList	& resident_table [ i ] . params		8049492	1					
ANR	8049550	Argument	& resident_table [ i ] . params		8049492	0					
ANR	8049551	UnaryOperationExpression	& resident_table [ i ] . params		8049492	0					
ANR	8049552	UnaryOperator	&		8049492	0					
ANR	8049553	MemberAccess	resident_table [ i ] . params		8049492	1					
ANR	8049554	ArrayIndexing	resident_table [ i ]		8049492	0					
ANR	8049555	Identifier	resident_table		8049492	0					
ANR	8049556	Identifier	i		8049492	1					
ANR	8049557	Identifier	params		8049492	1					
ANR	8049558	Argument	& pfont -> params		8049492	1					
ANR	8049559	UnaryOperationExpression	& pfont -> params		8049492	0					
ANR	8049560	UnaryOperator	&		8049492	0					
ANR	8049561	PtrMemberAccess	pfont -> params		8049492	1					
ANR	8049562	Identifier	pfont		8049492	0					
ANR	8049563	Identifier	params		8049492	1					
ANR	8049564	Argument	sizeof ( pfont -> params )		8049492	2					
ANR	8049565	SizeofExpression	sizeof ( pfont -> params )		8049492	0					
ANR	8049566	Sizeof	sizeof		8049492	0					
ANR	8049567	PtrMemberAccess	pfont -> params		8049492	1					
ANR	8049568	Identifier	pfont		8049492	0					
ANR	8049569	Identifier	params		8049492	1					
ANR	8049570	CompoundStatement		10:60:345:345	8049492	1					
ANR	8049571	ExpressionStatement	found = true	133:12:3717:3729	8049492	0	True				
ANR	8049572	AssignmentExpression	found = true		8049492	0		=			
ANR	8049573	Identifier	found		8049492	0					
ANR	8049574	Identifier	true		8049492	1					
ANR	8049575	BreakStatement	break ;	134:12:3743:3748	8049492	1	True				
ANR	8049576	IfStatement	if ( found )		8049492	16					
ANR	8049577	Condition	found	137:8:3774:3778	8049492	0	True				
ANR	8049578	Identifier	found		8049492	0					
ANR	8049579	CompoundStatement		16:15:424:424	8049492	1					
ANR	8049580	ExpressionStatement	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"	138:8:3791:3846	8049492	0	True				
ANR	8049581	CallExpression	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"		8049492	0					
ANR	8049582	Callee	dmprintf1		8049492	0					
ANR	8049583	Identifier	dmprintf1		8049492	0					
ANR	8049584	ArgumentList	mem		8049492	1					
ANR	8049585	Argument	mem		8049492	0					
ANR	8049586	Identifier	mem		8049492	0					
ANR	8049587	Argument	"""%s """		8049492	1					
ANR	8049588	PrimaryExpression	"""%s """		8049492	0					
ANR	8049589	Argument	resident_table [ i ] . full_font_name		8049492	2					
ANR	8049590	MemberAccess	resident_table [ i ] . full_font_name		8049492	0					
ANR	8049591	ArrayIndexing	resident_table [ i ]		8049492	0					
ANR	8049592	Identifier	resident_table		8049492	0					
ANR	8049593	Identifier	i		8049492	1					
ANR	8049594	Identifier	full_font_name		8049492	1					
ANR	8049595	ElseStatement	else		8049492	0					
ANR	8049596	CompoundStatement		18:11:502:502	8049492	0					
ANR	8049597	IfStatement	if ( pfont -> storage == pcds_internal )		8049492	0					
ANR	8049598	Condition	pfont -> storage == pcds_internal	140:12:3873:3903	8049492	0	True				
ANR	8049599	EqualityExpression	pfont -> storage == pcds_internal		8049492	0		==			
ANR	8049600	PtrMemberAccess	pfont -> storage		8049492	0					
ANR	8049601	Identifier	pfont		8049492	0					
ANR	8049602	Identifier	storage		8049492	1					
ANR	8049603	Identifier	pcds_internal		8049492	1					
ANR	8049604	CompoundStatement		19:45:549:549	8049492	1					
ANR	8049605	ExpressionStatement	"dmprintf ( mem , ""internal font not found in resident table"" )"	141:12:3920:3978	8049492	0	True				
ANR	8049606	CallExpression	"dmprintf ( mem , ""internal font not found in resident table"" )"		8049492	0					
ANR	8049607	Callee	dmprintf		8049492	0					
ANR	8049608	Identifier	dmprintf		8049492	0					
ANR	8049609	ArgumentList	mem		8049492	1					
ANR	8049610	Argument	mem		8049492	0					
ANR	8049611	Identifier	mem		8049492	0					
ANR	8049612	Argument	"""internal font not found in resident table"""		8049492	1					
ANR	8049613	PrimaryExpression	"""internal font not found in resident table"""		8049492	0					
ANR	8049614	ExpressionStatement	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"	142:12:3992:4032	8049492	1	True				
ANR	8049615	CallExpression	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"		8049492	0					
ANR	8049616	Callee	dmprintf1		8049492	0					
ANR	8049617	Identifier	dmprintf1		8049492	0					
ANR	8049618	ArgumentList	mem		8049492	1					
ANR	8049619	Argument	mem		8049492	0					
ANR	8049620	Identifier	mem		8049492	0					
ANR	8049621	Argument	"""%s\\n"""		8049492	1					
ANR	8049622	PrimaryExpression	"""%s\\n"""		8049492	0					
ANR	8049623	Argument	pfont -> font_file		8049492	2					
ANR	8049624	PtrMemberAccess	pfont -> font_file		8049492	0					
ANR	8049625	Identifier	pfont		8049492	0					
ANR	8049626	Identifier	font_file		8049492	1					
ANR	8049627	ExpressionStatement	"dmprintf ( mem , ""external font "" )"	144:8:4052:4083	8049492	1	True				
ANR	8049628	CallExpression	"dmprintf ( mem , ""external font "" )"		8049492	0					
ANR	8049629	Callee	dmprintf		8049492	0					
ANR	8049630	Identifier	dmprintf		8049492	0					
ANR	8049631	ArgumentList	mem		8049492	1					
ANR	8049632	Argument	mem		8049492	0					
ANR	8049633	Identifier	mem		8049492	0					
ANR	8049634	Argument	"""external font """		8049492	1					
ANR	8049635	PrimaryExpression	"""external font """		8049492	0					
ANR	8049636	Statement	undef	146:1:4092:4096	8049492	17	True				
ANR	8049637	Statement	fontnames	146:7:4098:4106	8049492	18	True				
ANR	8049638	ReturnType	static void		8049492	1					
ANR	8049639	Identifier	dmprint_font_name		8049492	2					
ANR	8049640	ParameterList	"const gs_memory_t * mem , const pl_font_t * pfont"		8049492	3					
ANR	8049641	Parameter	const gs_memory_t * mem	121:18:3306:3328	8049492	0	True				
ANR	8049642	ParameterType	const gs_memory_t *		8049492	0					
ANR	8049643	Identifier	mem		8049492	1					
ANR	8049644	Parameter	const pl_font_t * pfont	121:43:3331:3353	8049492	1	True				
ANR	8049645	ParameterType	const pl_font_t *		8049492	0					
ANR	8049646	Identifier	pfont		8049492	1					
ANR	8049647	CFGEntryNode	ENTRY		8049492		True				
ANR	8049648	CFGExitNode	EXIT		8049492		True				
ANR	8049649	Symbol	pcds_internal		8049492						
ANR	8049650	Symbol	pfont		8049492						
ANR	8049651	Symbol	pfont -> params		8049492						
ANR	8049652	Symbol	false		8049492						
ANR	8049653	Symbol	i		8049492						
ANR	8049654	Symbol	* resident_table		8049492						
ANR	8049655	Symbol	& resident_table [ i ] . params		8049492						
ANR	8049656	Symbol	resident_table [ i ] . full_font_name		8049492						
ANR	8049657	Symbol	strlen		8049492						
ANR	8049658	Symbol	* pfont		8049492						
ANR	8049659	Symbol	found		8049492						
ANR	8049660	Symbol	* i		8049492						
ANR	8049661	Symbol	memcmp		8049492						
ANR	8049662	Symbol	mem		8049492						
ANR	8049663	Symbol	pfont -> storage		8049492						
ANR	8049664	Symbol	true		8049492						
ANR	8049665	Symbol	pfont -> font_file		8049492						
ANR	8049666	Symbol	& pfont -> params		8049492						
ANR	8049667	Symbol	resident_table		8049492						
ANR	8049668	Function	dmprint_font_t	149:0:4111:4591							
ANR	8049669	FunctionDef	"dmprint_font_t (const gs_memory_t * mem , const pl_font_t * pfont)"		8049668	0					
ANR	8049670	CompoundStatement		151:0:4188:4591	8049668	0					
ANR	8049671	IfStatement	if ( pfont -> scaling_technology == plfst_MicroType )		8049668	0					
ANR	8049672	Condition	pfont -> scaling_technology == plfst_MicroType	152:8:4198:4241	8049668	0	True				
ANR	8049673	EqualityExpression	pfont -> scaling_technology == plfst_MicroType		8049668	0		==			
ANR	8049674	PtrMemberAccess	pfont -> scaling_technology		8049668	0					
ANR	8049675	Identifier	pfont		8049668	0					
ANR	8049676	Identifier	scaling_technology		8049668	1					
ANR	8049677	Identifier	plfst_MicroType		8049668	1					
ANR	8049678	ExpressionStatement	"dmprint_ufst_font_name ( mem , pfont )"	153:8:4252:4286	8049668	1	True				
ANR	8049679	CallExpression	"dmprint_ufst_font_name ( mem , pfont )"		8049668	0					
ANR	8049680	Callee	dmprint_ufst_font_name		8049668	0					
ANR	8049681	Identifier	dmprint_ufst_font_name		8049668	0					
ANR	8049682	ArgumentList	mem		8049668	1					
ANR	8049683	Argument	mem		8049668	0					
ANR	8049684	Identifier	mem		8049668	0					
ANR	8049685	Argument	pfont		8049668	1					
ANR	8049686	Identifier	pfont		8049668	0					
ANR	8049687	ElseStatement	else		8049668	0					
ANR	8049688	ExpressionStatement	"dmprint_font_name ( mem , pfont )"	155:8:4305:4334	8049668	0	True				
ANR	8049689	CallExpression	"dmprint_font_name ( mem , pfont )"		8049668	0					
ANR	8049690	Callee	dmprint_font_name		8049668	0					
ANR	8049691	Identifier	dmprint_font_name		8049668	0					
ANR	8049692	ArgumentList	mem		8049668	1					
ANR	8049693	Argument	mem		8049668	0					
ANR	8049694	Identifier	mem		8049668	0					
ANR	8049695	Argument	pfont		8049668	1					
ANR	8049696	Identifier	pfont		8049668	0					
ANR	8049697	ExpressionStatement	"dmprintf3 ( mem , ""storage=%d scaling=%d type=%d "" , pfont -> storage , pfont -> scaling_technology , pfont -> font_type )"	157:4:4341:4464	8049668	1	True				
ANR	8049698	CallExpression	"dmprintf3 ( mem , ""storage=%d scaling=%d type=%d "" , pfont -> storage , pfont -> scaling_technology , pfont -> font_type )"		8049668	0					
ANR	8049699	Callee	dmprintf3		8049668	0					
ANR	8049700	Identifier	dmprintf3		8049668	0					
ANR	8049701	ArgumentList	mem		8049668	1					
ANR	8049702	Argument	mem		8049668	0					
ANR	8049703	Identifier	mem		8049668	0					
ANR	8049704	Argument	"""storage=%d scaling=%d type=%d """		8049668	1					
ANR	8049705	PrimaryExpression	"""storage=%d scaling=%d type=%d """		8049668	0					
ANR	8049706	Argument	pfont -> storage		8049668	2					
ANR	8049707	PtrMemberAccess	pfont -> storage		8049668	0					
ANR	8049708	Identifier	pfont		8049668	0					
ANR	8049709	Identifier	storage		8049668	1					
ANR	8049710	Argument	pfont -> scaling_technology		8049668	3					
ANR	8049711	PtrMemberAccess	pfont -> scaling_technology		8049668	0					
ANR	8049712	Identifier	pfont		8049668	0					
ANR	8049713	Identifier	scaling_technology		8049668	1					
ANR	8049714	Argument	pfont -> font_type		8049668	4					
ANR	8049715	PtrMemberAccess	pfont -> font_type		8049668	0					
ANR	8049716	Identifier	pfont		8049668	0					
ANR	8049717	Identifier	font_type		8049668	1					
ANR	8049718	ExpressionStatement	"dmprint_cc ( mem , pfont -> character_complement )"	159:4:4470:4514	8049668	2	True				
ANR	8049719	CallExpression	"dmprint_cc ( mem , pfont -> character_complement )"		8049668	0					
ANR	8049720	Callee	dmprint_cc		8049668	0					
ANR	8049721	Identifier	dmprint_cc		8049668	0					
ANR	8049722	ArgumentList	mem		8049668	1					
ANR	8049723	Argument	mem		8049668	0					
ANR	8049724	Identifier	mem		8049668	0					
ANR	8049725	Argument	pfont -> character_complement		8049668	1					
ANR	8049726	PtrMemberAccess	pfont -> character_complement		8049668	0					
ANR	8049727	Identifier	pfont		8049668	0					
ANR	8049728	Identifier	character_complement		8049668	1					
ANR	8049729	ExpressionStatement	"dmputs ( mem , "";\\n   "" )"	160:4:4520:4541	8049668	3	True				
ANR	8049730	CallExpression	"dmputs ( mem , "";\\n   "" )"		8049668	0					
ANR	8049731	Callee	dmputs		8049668	0					
ANR	8049732	Identifier	dmputs		8049668	0					
ANR	8049733	ArgumentList	mem		8049668	1					
ANR	8049734	Argument	mem		8049668	0					
ANR	8049735	Identifier	mem		8049668	0					
ANR	8049736	Argument	""";\\n   """		8049668	1					
ANR	8049737	PrimaryExpression	""";\\n   """		8049668	0					
ANR	8049738	ExpressionStatement	"dmprint_font_params_t ( mem , & pfont -> params )"	161:4:4547:4589	8049668	4	True				
ANR	8049739	CallExpression	"dmprint_font_params_t ( mem , & pfont -> params )"		8049668	0					
ANR	8049740	Callee	dmprint_font_params_t		8049668	0					
ANR	8049741	Identifier	dmprint_font_params_t		8049668	0					
ANR	8049742	ArgumentList	mem		8049668	1					
ANR	8049743	Argument	mem		8049668	0					
ANR	8049744	Identifier	mem		8049668	0					
ANR	8049745	Argument	& pfont -> params		8049668	1					
ANR	8049746	UnaryOperationExpression	& pfont -> params		8049668	0					
ANR	8049747	UnaryOperator	&		8049668	0					
ANR	8049748	PtrMemberAccess	pfont -> params		8049668	1					
ANR	8049749	Identifier	pfont		8049668	0					
ANR	8049750	Identifier	params		8049668	1					
ANR	8049751	ReturnType	static void		8049668	1					
ANR	8049752	Identifier	dmprint_font_t		8049668	2					
ANR	8049753	ParameterList	"const gs_memory_t * mem , const pl_font_t * pfont"		8049668	3					
ANR	8049754	Parameter	const gs_memory_t * mem	150:15:4138:4160	8049668	0	True				
ANR	8049755	ParameterType	const gs_memory_t *		8049668	0					
ANR	8049756	Identifier	mem		8049668	1					
ANR	8049757	Parameter	const pl_font_t * pfont	150:40:4163:4185	8049668	1	True				
ANR	8049758	ParameterType	const pl_font_t *		8049668	0					
ANR	8049759	Identifier	pfont		8049668	1					
ANR	8049760	CFGEntryNode	ENTRY		8049668		True				
ANR	8049761	CFGExitNode	EXIT		8049668		True				
ANR	8049762	Symbol	* pfont		8049668						
ANR	8049763	Symbol	pfont -> scaling_technology		8049668						
ANR	8049764	Symbol	plfst_MicroType		8049668						
ANR	8049765	Symbol	mem		8049668						
ANR	8049766	Symbol	pfont		8049668						
ANR	8049767	Symbol	pfont -> storage		8049668						
ANR	8049768	Symbol	pfont -> font_type		8049668						
ANR	8049769	Symbol	pfont -> character_complement		8049668						
ANR	8049770	Symbol	& pfont -> params		8049668						
ANR	8049771	Function	dmprint_font_map	164:0:4594:4949							
ANR	8049772	FunctionDef	"dmprint_font_map (const gs_memory_t * mem , const pl_symbol_map_t * pmap)"		8049771	0					
ANR	8049773	CompoundStatement		166:0:4678:4949	8049771	0					
ANR	8049774	IfStatement	if ( pmap != 0 )		8049771	0					
ANR	8049775	Condition	pmap != 0	167:8:4688:4696	8049771	0	True				
ANR	8049776	EqualityExpression	pmap != 0		8049771	0		!=			
ANR	8049777	Identifier	pmap		8049771	0					
ANR	8049778	PrimaryExpression	0		8049771	1					
ANR	8049779	ExpressionStatement	"dmprintf3 ( mem , ""selected symbol set id:%d type:%d format:%s\\n"" , pl_get_uint16 ( pmap -> id ) , pmap -> type , ( pmap -> format == 1 ? ""MSL"" : ""Unicode"" ) )"	168:8:4707:4884	8049771	1	True				
ANR	8049780	CallExpression	"dmprintf3 ( mem , ""selected symbol set id:%d type:%d format:%s\\n"" , pl_get_uint16 ( pmap -> id ) , pmap -> type , ( pmap -> format == 1 ? ""MSL"" : ""Unicode"" ) )"		8049771	0					
ANR	8049781	Callee	dmprintf3		8049771	0					
ANR	8049782	Identifier	dmprintf3		8049771	0					
ANR	8049783	ArgumentList	mem		8049771	1					
ANR	8049784	Argument	mem		8049771	0					
ANR	8049785	Identifier	mem		8049771	0					
ANR	8049786	Argument	"""selected symbol set id:%d type:%d format:%s\\n"""		8049771	1					
ANR	8049787	PrimaryExpression	"""selected symbol set id:%d type:%d format:%s\\n"""		8049771	0					
ANR	8049788	Argument	pl_get_uint16 ( pmap -> id )		8049771	2					
ANR	8049789	CallExpression	pl_get_uint16 ( pmap -> id )		8049771	0					
ANR	8049790	Callee	pl_get_uint16		8049771	0					
ANR	8049791	Identifier	pl_get_uint16		8049771	0					
ANR	8049792	ArgumentList	pmap -> id		8049771	1					
ANR	8049793	Argument	pmap -> id		8049771	0					
ANR	8049794	PtrMemberAccess	pmap -> id		8049771	0					
ANR	8049795	Identifier	pmap		8049771	0					
ANR	8049796	Identifier	id		8049771	1					
ANR	8049797	Argument	pmap -> type		8049771	3					
ANR	8049798	PtrMemberAccess	pmap -> type		8049771	0					
ANR	8049799	Identifier	pmap		8049771	0					
ANR	8049800	Identifier	type		8049771	1					
ANR	8049801	Argument	"pmap -> format == 1 ? ""MSL"" : ""Unicode"""		8049771	4					
ANR	8049802	ConditionalExpression	"pmap -> format == 1 ? ""MSL"" : ""Unicode"""		8049771	0					
ANR	8049803	Condition	pmap -> format == 1		8049771	0					
ANR	8049804	EqualityExpression	pmap -> format == 1		8049771	0		==			
ANR	8049805	PtrMemberAccess	pmap -> format		8049771	0					
ANR	8049806	Identifier	pmap		8049771	0					
ANR	8049807	Identifier	format		8049771	1					
ANR	8049808	PrimaryExpression	1		8049771	1					
ANR	8049809	PrimaryExpression	"""MSL"""		8049771	1					
ANR	8049810	PrimaryExpression	"""Unicode"""		8049771	2					
ANR	8049811	ElseStatement	else		8049771	0					
ANR	8049812	ExpressionStatement	"dmprintf ( mem , ""selected symbol set NULL\\n"" )"	172:8:4903:4946	8049771	0	True				
ANR	8049813	CallExpression	"dmprintf ( mem , ""selected symbol set NULL\\n"" )"		8049771	0					
ANR	8049814	Callee	dmprintf		8049771	0					
ANR	8049815	Identifier	dmprintf		8049771	0					
ANR	8049816	ArgumentList	mem		8049771	1					
ANR	8049817	Argument	mem		8049771	0					
ANR	8049818	Identifier	mem		8049771	0					
ANR	8049819	Argument	"""selected symbol set NULL\\n"""		8049771	1					
ANR	8049820	PrimaryExpression	"""selected symbol set NULL\\n"""		8049771	0					
ANR	8049821	ReturnType	static void		8049771	1					
ANR	8049822	Identifier	dmprint_font_map		8049771	2					
ANR	8049823	ParameterList	"const gs_memory_t * mem , const pl_symbol_map_t * pmap"		8049771	3					
ANR	8049824	Parameter	const gs_memory_t * mem	165:17:4623:4645	8049771	0	True				
ANR	8049825	ParameterType	const gs_memory_t *		8049771	0					
ANR	8049826	Identifier	mem		8049771	1					
ANR	8049827	Parameter	const pl_symbol_map_t * pmap	165:42:4648:4675	8049771	1	True				
ANR	8049828	ParameterType	const pl_symbol_map_t *		8049771	0					
ANR	8049829	Identifier	pmap		8049771	1					
ANR	8049830	CFGEntryNode	ENTRY		8049771		True				
ANR	8049831	CFGExitNode	EXIT		8049771		True				
ANR	8049832	Symbol	* pmap		8049771						
ANR	8049833	Symbol	pl_get_uint16		8049771						
ANR	8049834	Symbol	mem		8049771						
ANR	8049835	Symbol	pmap -> id		8049771						
ANR	8049836	Symbol	pmap -> type		8049771						
ANR	8049837	Symbol	pmap -> format		8049771						
ANR	8049838	Symbol	pmap		8049771						
ANR	8049839	Function	dmprintf_font_scoring	176:0:4952:5407							
ANR	8049840	FunctionDef	"dmprintf_font_scoring (const gs_memory_t * mem , const char * type , const pl_font_t * pfont , pl_symbol_map_t * pmap , match_score_t score)"		8049839	0					
ANR	8049841	CompoundStatement		180:0:5143:5407	8049839	0					
ANR	8049842	IdentifierDeclStatement	int i ;	181:4:5149:5154	8049839	0	True				
ANR	8049843	IdentifierDecl	i		8049839	0					
ANR	8049844	IdentifierDeclType	int		8049839	0					
ANR	8049845	Identifier	i		8049839	1					
ANR	8049846	ExpressionStatement	"dmprintf1 ( mem , ""%s: "" , type )"	183:4:5161:5189	8049839	1	True				
ANR	8049847	CallExpression	"dmprintf1 ( mem , ""%s: "" , type )"		8049839	0					
ANR	8049848	Callee	dmprintf1		8049839	0					
ANR	8049849	Identifier	dmprintf1		8049839	0					
ANR	8049850	ArgumentList	mem		8049839	1					
ANR	8049851	Argument	mem		8049839	0					
ANR	8049852	Identifier	mem		8049839	0					
ANR	8049853	Argument	"""%s: """		8049839	1					
ANR	8049854	PrimaryExpression	"""%s: """		8049839	0					
ANR	8049855	Argument	type		8049839	2					
ANR	8049856	Identifier	type		8049839	0					
ANR	8049857	ExpressionStatement	"dmprint_font_t ( mem , pfont )"	184:4:5195:5221	8049839	2	True				
ANR	8049858	CallExpression	"dmprint_font_t ( mem , pfont )"		8049839	0					
ANR	8049859	Callee	dmprint_font_t		8049839	0					
ANR	8049860	Identifier	dmprint_font_t		8049839	0					
ANR	8049861	ArgumentList	mem		8049839	1					
ANR	8049862	Argument	mem		8049839	0					
ANR	8049863	Identifier	mem		8049839	0					
ANR	8049864	Argument	pfont		8049839	1					
ANR	8049865	Identifier	pfont		8049839	0					
ANR	8049866	ExpressionStatement	"dmprint_font_map ( mem , pmap )"	185:4:5227:5254	8049839	3	True				
ANR	8049867	CallExpression	"dmprint_font_map ( mem , pmap )"		8049839	0					
ANR	8049868	Callee	dmprint_font_map		8049839	0					
ANR	8049869	Identifier	dmprint_font_map		8049839	0					
ANR	8049870	ArgumentList	mem		8049839	1					
ANR	8049871	Argument	mem		8049839	0					
ANR	8049872	Identifier	mem		8049839	0					
ANR	8049873	Argument	pmap		8049839	1					
ANR	8049874	Identifier	pmap		8049839	0					
ANR	8049875	ExpressionStatement	"dmputs ( mem , ""   score:"" )"	186:4:5260:5284	8049839	4	True				
ANR	8049876	CallExpression	"dmputs ( mem , ""   score:"" )"		8049839	0					
ANR	8049877	Callee	dmputs		8049839	0					
ANR	8049878	Identifier	dmputs		8049839	0					
ANR	8049879	ArgumentList	mem		8049839	1					
ANR	8049880	Argument	mem		8049839	0					
ANR	8049881	Identifier	mem		8049839	0					
ANR	8049882	Argument	"""   score:"""		8049839	1					
ANR	8049883	PrimaryExpression	"""   score:"""		8049839	0					
ANR	8049884	ForStatement	for ( i = 0 ; i < score_limit ; ++ i )		8049839	5					
ANR	8049885	ForInit	i = 0 ;	187:9:5295:5300	8049839	0	True				
ANR	8049886	AssignmentExpression	i = 0		8049839	0		=			
ANR	8049887	Identifier	i		8049839	0					
ANR	8049888	PrimaryExpression	0		8049839	1					
ANR	8049889	Condition	i < score_limit	187:16:5302:5316	8049839	1	True				
ANR	8049890	RelationalExpression	i < score_limit		8049839	0		<			
ANR	8049891	Identifier	i		8049839	0					
ANR	8049892	Identifier	score_limit		8049839	1					
ANR	8049893	UnaryExpression	++ i	187:33:5319:5321	8049839	2	True				
ANR	8049894	IncDec	++		8049839	0					
ANR	8049895	Identifier	i		8049839	1					
ANR	8049896	ExpressionStatement	"dmprintf2 ( mem , "" %s: %d"" , score_name [ i ] , score [ i ] )"	188:8:5332:5382	8049839	3	True				
ANR	8049897	CallExpression	"dmprintf2 ( mem , "" %s: %d"" , score_name [ i ] , score [ i ] )"		8049839	0					
ANR	8049898	Callee	dmprintf2		8049839	0					
ANR	8049899	Identifier	dmprintf2		8049839	0					
ANR	8049900	ArgumentList	mem		8049839	1					
ANR	8049901	Argument	mem		8049839	0					
ANR	8049902	Identifier	mem		8049839	0					
ANR	8049903	Argument	""" %s: %d"""		8049839	1					
ANR	8049904	PrimaryExpression	""" %s: %d"""		8049839	0					
ANR	8049905	Argument	score_name [ i ]		8049839	2					
ANR	8049906	ArrayIndexing	score_name [ i ]		8049839	0					
ANR	8049907	Identifier	score_name		8049839	0					
ANR	8049908	Identifier	i		8049839	1					
ANR	8049909	Argument	score [ i ]		8049839	3					
ANR	8049910	ArrayIndexing	score [ i ]		8049839	0					
ANR	8049911	Identifier	score		8049839	0					
ANR	8049912	Identifier	i		8049839	1					
ANR	8049913	ExpressionStatement	"dmputs ( mem , ""\\n"" )"	189:4:5388:5405	8049839	6	True				
ANR	8049914	CallExpression	"dmputs ( mem , ""\\n"" )"		8049839	0					
ANR	8049915	Callee	dmputs		8049839	0					
ANR	8049916	Identifier	dmputs		8049839	0					
ANR	8049917	ArgumentList	mem		8049839	1					
ANR	8049918	Argument	mem		8049839	0					
ANR	8049919	Identifier	mem		8049839	0					
ANR	8049920	Argument	"""\\n"""		8049839	1					
ANR	8049921	PrimaryExpression	"""\\n"""		8049839	0					
ANR	8049922	ReturnType	static void		8049839	1					
ANR	8049923	Identifier	dmprintf_font_scoring		8049839	2					
ANR	8049924	ParameterList	"const gs_memory_t * mem , const char * type , const pl_font_t * pfont , pl_symbol_map_t * pmap , match_score_t score"		8049839	3					
ANR	8049925	Parameter	const gs_memory_t * mem	177:22:4986:5008	8049839	0	True				
ANR	8049926	ParameterType	const gs_memory_t *		8049839	0					
ANR	8049927	Identifier	mem		8049839	1					
ANR	8049928	Parameter	const char * type	177:47:5011:5026	8049839	1	True				
ANR	8049929	ParameterType	const char *		8049839	0					
ANR	8049930	Identifier	type		8049839	1					
ANR	8049931	Parameter	const pl_font_t * pfont	178:22:5051:5073	8049839	2	True				
ANR	8049932	ParameterType	const pl_font_t *		8049839	0					
ANR	8049933	Identifier	pfont		8049839	1					
ANR	8049934	Parameter	pl_symbol_map_t * pmap	178:47:5076:5097	8049839	3	True				
ANR	8049935	ParameterType	pl_symbol_map_t *		8049839	0					
ANR	8049936	Identifier	pmap		8049839	1					
ANR	8049937	Parameter	match_score_t score	179:22:5122:5140	8049839	4	True				
ANR	8049938	ParameterType	match_score_t		8049839	0					
ANR	8049939	Identifier	score		8049839	1					
ANR	8049940	CFGEntryNode	ENTRY		8049839		True				
ANR	8049941	CFGExitNode	EXIT		8049839		True				
ANR	8049942	Symbol	score		8049839						
ANR	8049943	Symbol	* i		8049839						
ANR	8049944	Symbol	mem		8049839						
ANR	8049945	Symbol	score_limit		8049839						
ANR	8049946	Symbol	pfont		8049839						
ANR	8049947	Symbol	pmap		8049839						
ANR	8049948	Symbol	* score		8049839						
ANR	8049949	Symbol	i		8049839						
ANR	8049950	Symbol	type		8049839						
ANR	8049951	Symbol	score_name		8049839						
ANR	8049952	Symbol	* score_name		8049839						
ANR	8049953	Function	check_support	200:0:5796:7533							
ANR	8049954	FunctionDef	"check_support (const pcl_state_t * pcs , uint symbol_set , const pl_font_t * fp , pl_symbol_map_t * * mapp , bool id_selection)"		8049953	0					
ANR	8049955	CompoundStatement		203:0:5943:7533	8049953	0					
ANR	8049956	IdentifierDeclStatement	pl_glyph_vocabulary_t gv ;	204:4:5949:5973	8049953	0	True				
ANR	8049957	IdentifierDecl	gv		8049953	0					
ANR	8049958	IdentifierDeclType	pl_glyph_vocabulary_t		8049953	0					
ANR	8049959	Identifier	gv		8049953	1					
ANR	8049960	IdentifierDeclStatement	byte id [ 2 ] ;	205:4:5979:5989	8049953	1	True				
ANR	8049961	IdentifierDecl	id [ 2 ]		8049953	0					
ANR	8049962	IdentifierDeclType	byte [ 2 ]		8049953	0					
ANR	8049963	Identifier	id		8049953	1					
ANR	8049964	PrimaryExpression	2		8049953	2					
ANR	8049965	ExpressionStatement	id [ 0 ] = symbol_set >> 8	207:4:5996:6019	8049953	2	True				
ANR	8049966	AssignmentExpression	id [ 0 ] = symbol_set >> 8		8049953	0		=			
ANR	8049967	ArrayIndexing	id [ 0 ]		8049953	0					
ANR	8049968	Identifier	id		8049953	0					
ANR	8049969	PrimaryExpression	0		8049953	1					
ANR	8049970	ShiftExpression	symbol_set >> 8		8049953	1		>>			
ANR	8049971	Identifier	symbol_set		8049953	0					
ANR	8049972	PrimaryExpression	8		8049953	1					
ANR	8049973	ExpressionStatement	id [ 1 ] = symbol_set	208:4:6025:6043	8049953	3	True				
ANR	8049974	AssignmentExpression	id [ 1 ] = symbol_set		8049953	0		=			
ANR	8049975	ArrayIndexing	id [ 1 ]		8049953	0					
ANR	8049976	Identifier	id		8049953	0					
ANR	8049977	PrimaryExpression	1		8049953	1					
ANR	8049978	Identifier	symbol_set		8049953	1					
ANR	8049979	ExpressionStatement	gv = pl_font_is_bound ( fp ) ? plgv_Unicode : pl_complement_to_vocab ( fp -> character_complement )	213:4:6214:6313	8049953	4	True				
ANR	8049980	AssignmentExpression	gv = pl_font_is_bound ( fp ) ? plgv_Unicode : pl_complement_to_vocab ( fp -> character_complement )		8049953	0		=			
ANR	8049981	Identifier	gv		8049953	0					
ANR	8049982	ConditionalExpression	pl_font_is_bound ( fp ) ? plgv_Unicode : pl_complement_to_vocab ( fp -> character_complement )		8049953	1					
ANR	8049983	Condition	pl_font_is_bound ( fp )		8049953	0					
ANR	8049984	CallExpression	pl_font_is_bound ( fp )		8049953	0					
ANR	8049985	Callee	pl_font_is_bound		8049953	0					
ANR	8049986	Identifier	pl_font_is_bound		8049953	0					
ANR	8049987	ArgumentList	fp		8049953	1					
ANR	8049988	Argument	fp		8049953	0					
ANR	8049989	Identifier	fp		8049953	0					
ANR	8049990	Identifier	plgv_Unicode		8049953	1					
ANR	8049991	CallExpression	pl_complement_to_vocab ( fp -> character_complement )		8049953	2					
ANR	8049992	Callee	pl_complement_to_vocab		8049953	0					
ANR	8049993	Identifier	pl_complement_to_vocab		8049953	0					
ANR	8049994	ArgumentList	fp -> character_complement		8049953	1					
ANR	8049995	Argument	fp -> character_complement		8049953	0					
ANR	8049996	PtrMemberAccess	fp -> character_complement		8049953	0					
ANR	8049997	Identifier	fp		8049953	0					
ANR	8049998	Identifier	character_complement		8049953	1					
ANR	8049999	ExpressionStatement	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"	216:4:6320:6389	8049953	5	True				
ANR	8050000	AssignmentExpression	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8049953	0		=			
ANR	8050001	UnaryOperationExpression	* mapp		8049953	0					
ANR	8050002	UnaryOperator	*		8049953	0					
ANR	8050003	Identifier	mapp		8049953	1					
ANR	8050004	CallExpression	"pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8049953	1					
ANR	8050005	Callee	pcl_find_symbol_map		8049953	0					
ANR	8050006	Identifier	pcl_find_symbol_map		8049953	0					
ANR	8050007	ArgumentList	pcs		8049953	1					
ANR	8050008	Argument	pcs		8049953	0					
ANR	8050009	Identifier	pcs		8049953	0					
ANR	8050010	Argument	id		8049953	1					
ANR	8050011	Identifier	id		8049953	0					
ANR	8050012	Argument	gv		8049953	2					
ANR	8050013	Identifier	gv		8049953	0					
ANR	8050014	Argument	fp -> font_type == plft_16bit		8049953	3					
ANR	8050015	EqualityExpression	fp -> font_type == plft_16bit		8049953	0		==			
ANR	8050016	PtrMemberAccess	fp -> font_type		8049953	0					
ANR	8050017	Identifier	fp		8049953	0					
ANR	8050018	Identifier	font_type		8049953	1					
ANR	8050019	Identifier	plft_16bit		8049953	1					
ANR	8050020	IfStatement	if ( pl_font_is_bound ( fp ) )		8049953	6					
ANR	8050021	Condition	pl_font_is_bound ( fp )	218:8:6400:6419	8049953	0	True				
ANR	8050022	CallExpression	pl_font_is_bound ( fp )		8049953	0					
ANR	8050023	Callee	pl_font_is_bound		8049953	0					
ANR	8050024	Identifier	pl_font_is_bound		8049953	0					
ANR	8050025	ArgumentList	fp		8049953	1					
ANR	8050026	Argument	fp		8049953	0					
ANR	8050027	Identifier	fp		8049953	0					
ANR	8050028	ReturnStatement	return fp -> params . symbol_set == symbol_set ? 2 : 0 ;	219:8:6430:6480	8049953	1	True				
ANR	8050029	ConditionalExpression	fp -> params . symbol_set == symbol_set ? 2 : 0		8049953	0					
ANR	8050030	Condition	fp -> params . symbol_set == symbol_set		8049953	0					
ANR	8050031	EqualityExpression	fp -> params . symbol_set == symbol_set		8049953	0		==			
ANR	8050032	MemberAccess	fp -> params . symbol_set		8049953	0					
ANR	8050033	PtrMemberAccess	fp -> params		8049953	0					
ANR	8050034	Identifier	fp		8049953	0					
ANR	8050035	Identifier	params		8049953	1					
ANR	8050036	Identifier	symbol_set		8049953	1					
ANR	8050037	Identifier	symbol_set		8049953	1					
ANR	8050038	PrimaryExpression	2		8049953	1					
ANR	8050039	PrimaryExpression	0		8049953	2					
ANR	8050040	IfStatement	if ( * mapp == 0 )		8049953	7					
ANR	8050041	Condition	* mapp == 0	221:8:6491:6500	8049953	0	True				
ANR	8050042	EqualityExpression	* mapp == 0		8049953	0		==			
ANR	8050043	UnaryOperationExpression	* mapp		8049953	0					
ANR	8050044	UnaryOperator	*		8049953	0					
ANR	8050045	Identifier	mapp		8049953	1					
ANR	8050046	PrimaryExpression	0		8049953	1					
ANR	8050047	CompoundStatement		19:20:559:559	8049953	1					
ANR	8050048	IfStatement	if ( id_selection || pl_wide_encoding ( symbol_set ) )		8049953	0					
ANR	8050049	Condition	id_selection || pl_wide_encoding ( symbol_set )	225:12:6678:6721	8049953	0	True				
ANR	8050050	OrExpression	id_selection || pl_wide_encoding ( symbol_set )		8049953	0		||			
ANR	8050051	Identifier	id_selection		8049953	0					
ANR	8050052	CallExpression	pl_wide_encoding ( symbol_set )		8049953	1					
ANR	8050053	Callee	pl_wide_encoding		8049953	0					
ANR	8050054	Identifier	pl_wide_encoding		8049953	0					
ANR	8050055	ArgumentList	symbol_set		8049953	1					
ANR	8050056	Argument	symbol_set		8049953	0					
ANR	8050057	Identifier	symbol_set		8049953	0					
ANR	8050058	ReturnStatement	return 2 ;	226:12:6736:6744	8049953	1	True				
ANR	8050059	PrimaryExpression	2		8049953	0					
ANR	8050060	ElseStatement	else		8049953	0					
ANR	8050061	CompoundStatement		25:13:815:815	8049953	0					
ANR	8050062	IfStatement	if ( ! pl_font_is_bound ( fp ) )		8049953	0					
ANR	8050063	Condition	! pl_font_is_bound ( fp )	233:16:7004:7024	8049953	0	True				
ANR	8050064	UnaryOperationExpression	! pl_font_is_bound ( fp )		8049953	0					
ANR	8050065	UnaryOperator	!		8049953	0					
ANR	8050066	CallExpression	pl_font_is_bound ( fp )		8049953	1					
ANR	8050067	Callee	pl_font_is_bound		8049953	0					
ANR	8050068	Identifier	pl_font_is_bound		8049953	0					
ANR	8050069	ArgumentList	fp		8049953	1					
ANR	8050070	Argument	fp		8049953	0					
ANR	8050071	Identifier	fp		8049953	0					
ANR	8050072	CompoundStatement		31:39:1083:1083	8049953	1					
ANR	8050073	ExpressionStatement	id [ 0 ] = 0x01	234:16:7045:7057	8049953	0	True				
ANR	8050074	AssignmentExpression	id [ 0 ] = 0x01		8049953	0		=			
ANR	8050075	ArrayIndexing	id [ 0 ]		8049953	0					
ANR	8050076	Identifier	id		8049953	0					
ANR	8050077	PrimaryExpression	0		8049953	1					
ANR	8050078	PrimaryExpression	0x01		8049953	1					
ANR	8050079	ExpressionStatement	id [ 1 ] = 0x15	235:16:7075:7087	8049953	1	True				
ANR	8050080	AssignmentExpression	id [ 1 ] = 0x15		8049953	0		=			
ANR	8050081	ArrayIndexing	id [ 1 ]		8049953	0					
ANR	8050082	Identifier	id		8049953	0					
ANR	8050083	PrimaryExpression	1		8049953	1					
ANR	8050084	PrimaryExpression	0x15		8049953	1					
ANR	8050085	ExpressionStatement	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"	236:16:7105:7234	8049953	2	True				
ANR	8050086	AssignmentExpression	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8049953	0		=			
ANR	8050087	UnaryOperationExpression	* mapp		8049953	0					
ANR	8050088	UnaryOperator	*		8049953	0					
ANR	8050089	Identifier	mapp		8049953	1					
ANR	8050090	CallExpression	"pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8049953	1					
ANR	8050091	Callee	pcl_find_symbol_map		8049953	0					
ANR	8050092	Identifier	pcl_find_symbol_map		8049953	0					
ANR	8050093	ArgumentList	pcs		8049953	1					
ANR	8050094	Argument	pcs		8049953	0					
ANR	8050095	Identifier	pcs		8049953	0					
ANR	8050096	Argument	id		8049953	1					
ANR	8050097	Identifier	id		8049953	0					
ANR	8050098	Argument	gv		8049953	2					
ANR	8050099	Identifier	gv		8049953	0					
ANR	8050100	Argument	fp -> font_type == plft_16bit		8049953	3					
ANR	8050101	EqualityExpression	fp -> font_type == plft_16bit		8049953	0		==			
ANR	8050102	PtrMemberAccess	fp -> font_type		8049953	0					
ANR	8050103	Identifier	fp		8049953	0					
ANR	8050104	Identifier	font_type		8049953	1					
ANR	8050105	Identifier	plft_16bit		8049953	1					
ANR	8050106	ReturnStatement	return 1 ;	239:16:7252:7260	8049953	3	True				
ANR	8050107	PrimaryExpression	1		8049953	0					
ANR	8050108	ReturnStatement	return 0 ;	241:12:7288:7296	8049953	1	True				
ANR	8050109	PrimaryExpression	0		8049953	0					
ANR	8050110	IfStatement	"if ( pcl_check_symbol_support ( ( * mapp ) -> character_requirements , fp -> character_complement ) )"		8049953	8					
ANR	8050111	Condition	"pcl_check_symbol_support ( ( * mapp ) -> character_requirements , fp -> character_complement )"	245:8:7345:7460	8049953	0	True				
ANR	8050112	CallExpression	"pcl_check_symbol_support ( ( * mapp ) -> character_requirements , fp -> character_complement )"		8049953	0					
ANR	8050113	Callee	pcl_check_symbol_support		8049953	0					
ANR	8050114	Identifier	pcl_check_symbol_support		8049953	0					
ANR	8050115	ArgumentList	( * mapp ) -> character_requirements		8049953	1					
ANR	8050116	Argument	( * mapp ) -> character_requirements		8049953	0					
ANR	8050117	PtrMemberAccess	( * mapp ) -> character_requirements		8049953	0					
ANR	8050118	UnaryOperationExpression	* mapp		8049953	0					
ANR	8050119	UnaryOperator	*		8049953	0					
ANR	8050120	Identifier	mapp		8049953	1					
ANR	8050121	Identifier	character_requirements		8049953	1					
ANR	8050122	Argument	fp -> character_complement		8049953	1					
ANR	8050123	PtrMemberAccess	fp -> character_complement		8049953	0					
ANR	8050124	Identifier	fp		8049953	0					
ANR	8050125	Identifier	character_complement		8049953	1					
ANR	8050126	ReturnStatement	return 2 ;	247:8:7471:7479	8049953	1	True				
ANR	8050127	PrimaryExpression	2		8049953	0					
ANR	8050128	ElseStatement	else		8049953	0					
ANR	8050129	ReturnStatement	return 1 ;	249:8:7523:7531	8049953	0	True				
ANR	8050130	PrimaryExpression	1		8049953	0					
ANR	8050131	ReturnType	static int		8049953	1					
ANR	8050132	Identifier	check_support		8049953	2					
ANR	8050133	ParameterList	"const pcl_state_t * pcs , uint symbol_set , const pl_font_t * fp , pl_symbol_map_t * * mapp , bool id_selection"		8049953	3					
ANR	8050134	Parameter	const pcl_state_t * pcs	201:14:5821:5843	8049953	0	True				
ANR	8050135	ParameterType	const pcl_state_t *		8049953	0					
ANR	8050136	Identifier	pcs		8049953	1					
ANR	8050137	Parameter	uint symbol_set	201:39:5846:5860	8049953	1	True				
ANR	8050138	ParameterType	uint		8049953	0					
ANR	8050139	Identifier	symbol_set		8049953	1					
ANR	8050140	Parameter	const pl_font_t * fp	201:56:5863:5882	8049953	2	True				
ANR	8050141	ParameterType	const pl_font_t *		8049953	0					
ANR	8050142	Identifier	fp		8049953	1					
ANR	8050143	Parameter	pl_symbol_map_t * * mapp	202:14:5899:5921	8049953	3	True				
ANR	8050144	ParameterType	pl_symbol_map_t * *		8049953	0					
ANR	8050145	Identifier	mapp		8049953	1					
ANR	8050146	Parameter	bool id_selection	202:39:5924:5940	8049953	4	True				
ANR	8050147	ParameterType	bool		8049953	0					
ANR	8050148	Identifier	id_selection		8049953	1					
ANR	8050149	CFGEntryNode	ENTRY		8049953		True				
ANR	8050150	CFGExitNode	EXIT		8049953		True				
ANR	8050151	Symbol	pcl_find_symbol_map		8049953						
ANR	8050152	Symbol	plft_16bit		8049953						
ANR	8050153	Symbol	( * mapp ) -> character_requirements		8049953						
ANR	8050154	Symbol	pcs		8049953						
ANR	8050155	Symbol	* id		8049953						
ANR	8050156	Symbol	id_selection		8049953						
ANR	8050157	Symbol	mapp		8049953						
ANR	8050158	Symbol	fp -> font_type		8049953						
ANR	8050159	Symbol	fp		8049953						
ANR	8050160	Symbol	* mapp		8049953						
ANR	8050161	Symbol	gv		8049953						
ANR	8050162	Symbol	pl_font_is_bound		8049953						
ANR	8050163	Symbol	plgv_Unicode		8049953						
ANR	8050164	Symbol	pl_complement_to_vocab		8049953						
ANR	8050165	Symbol	* fp		8049953						
ANR	8050166	Symbol	pl_wide_encoding		8049953						
ANR	8050167	Symbol	pcl_check_symbol_support		8049953						
ANR	8050168	Symbol	fp -> character_complement		8049953						
ANR	8050169	Symbol	fp -> params . symbol_set		8049953						
ANR	8050170	Symbol	fp -> params		8049953						
ANR	8050171	Symbol	symbol_set		8049953						
ANR	8050172	Symbol	* * mapp		8049953						
ANR	8050173	Symbol	id		8049953						
ANR	8050174	Function	font_is_scalable_selection_wise	259:0:7831:7995							
ANR	8050175	FunctionDef	font_is_scalable_selection_wise (const pl_font_t * fp)		8050174	0					
ANR	8050176	CompoundStatement		261:0:7897:7995	8050174	0					
ANR	8050177	IfStatement	if ( INTERNAL_LPFONT )		8050174	0					
ANR	8050178	Condition	INTERNAL_LPFONT	262:8:7907:7921	8050174	0	True				
ANR	8050179	Identifier	INTERNAL_LPFONT		8050174	0					
ANR	8050180	ReturnStatement	return false ;	263:8:7932:7944	8050174	1	True				
ANR	8050181	Identifier	false		8050174	0					
ANR	8050182	ElseStatement	else		8050174	0					
ANR	8050183	ReturnStatement	return pl_font_is_scalable ( fp ) ;	265:8:7963:7993	8050174	0	True				
ANR	8050184	CallExpression	pl_font_is_scalable ( fp )		8050174	0					
ANR	8050185	Callee	pl_font_is_scalable		8050174	0					
ANR	8050186	Identifier	pl_font_is_scalable		8050174	0					
ANR	8050187	ArgumentList	fp		8050174	1					
ANR	8050188	Argument	fp		8050174	0					
ANR	8050189	Identifier	fp		8050174	0					
ANR	8050190	ReturnType	static bool		8050174	1					
ANR	8050191	Identifier	font_is_scalable_selection_wise		8050174	2					
ANR	8050192	ParameterList	const pl_font_t * fp		8050174	3					
ANR	8050193	Parameter	const pl_font_t * fp	260:32:7875:7894	8050174	0	True				
ANR	8050194	ParameterType	const pl_font_t *		8050174	0					
ANR	8050195	Identifier	fp		8050174	1					
ANR	8050196	CFGEntryNode	ENTRY		8050174		True				
ANR	8050197	CFGExitNode	EXIT		8050174		True				
ANR	8050198	Symbol	pl_font_is_scalable		8050174						
ANR	8050199	Symbol	false		8050174						
ANR	8050200	Symbol	fp		8050174						
ANR	8050201	Symbol	INTERNAL_LPFONT		8050174						
ANR	8050202	Function	score_match	270:0:8134:14734							
ANR	8050203	FunctionDef	"score_match (const pcl_state_t * pcs , const pcl_font_selection_t * pfs , const pl_font_t * fp , pl_symbol_map_t * * mapp , match_score_t score)"		8050202	0					
ANR	8050204	CompoundStatement		274:0:8309:14734	8050202	0					
ANR	8050205	IdentifierDeclStatement	int tscore ;	275:4:8315:8325	8050202	0	True				
ANR	8050206	IdentifierDecl	tscore		8050202	0					
ANR	8050207	IdentifierDeclType	int		8050202	0					
ANR	8050208	Identifier	tscore		8050202	1					
ANR	8050209	ExpressionStatement	"score [ score_symbol_set ] = check_support ( pcs , pfs -> params . symbol_set , fp , mapp , false )"	279:4:8441:8534	8050202	1	True				
ANR	8050210	AssignmentExpression	"score [ score_symbol_set ] = check_support ( pcs , pfs -> params . symbol_set , fp , mapp , false )"		8050202	0		=			
ANR	8050211	ArrayIndexing	score [ score_symbol_set ]		8050202	0					
ANR	8050212	Identifier	score		8050202	0					
ANR	8050213	Identifier	score_symbol_set		8050202	1					
ANR	8050214	CallExpression	"check_support ( pcs , pfs -> params . symbol_set , fp , mapp , false )"		8050202	1					
ANR	8050215	Callee	check_support		8050202	0					
ANR	8050216	Identifier	check_support		8050202	0					
ANR	8050217	ArgumentList	pcs		8050202	1					
ANR	8050218	Argument	pcs		8050202	0					
ANR	8050219	Identifier	pcs		8050202	0					
ANR	8050220	Argument	pfs -> params . symbol_set		8050202	1					
ANR	8050221	MemberAccess	pfs -> params . symbol_set		8050202	0					
ANR	8050222	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050223	Identifier	pfs		8050202	0					
ANR	8050224	Identifier	params		8050202	1					
ANR	8050225	Identifier	symbol_set		8050202	1					
ANR	8050226	Argument	fp		8050202	2					
ANR	8050227	Identifier	fp		8050202	0					
ANR	8050228	Argument	mapp		8050202	3					
ANR	8050229	Identifier	mapp		8050202	0					
ANR	8050230	Argument	false		8050202	4					
ANR	8050231	Identifier	false		8050202	0					
ANR	8050232	ExpressionStatement	score [ score_spacing ] = pfs -> params . proportional_spacing == fp -> params . proportional_spacing	282:4:8563:8661	8050202	2	True				
ANR	8050233	AssignmentExpression	score [ score_spacing ] = pfs -> params . proportional_spacing == fp -> params . proportional_spacing		8050202	0		=			
ANR	8050234	ArrayIndexing	score [ score_spacing ]		8050202	0					
ANR	8050235	Identifier	score		8050202	0					
ANR	8050236	Identifier	score_spacing		8050202	1					
ANR	8050237	EqualityExpression	pfs -> params . proportional_spacing == fp -> params . proportional_spacing		8050202	1		==			
ANR	8050238	MemberAccess	pfs -> params . proportional_spacing		8050202	0					
ANR	8050239	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050240	Identifier	pfs		8050202	0					
ANR	8050241	Identifier	params		8050202	1					
ANR	8050242	Identifier	proportional_spacing		8050202	1					
ANR	8050243	MemberAccess	fp -> params . proportional_spacing		8050202	1					
ANR	8050244	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050245	Identifier	fp		8050202	0					
ANR	8050246	Identifier	params		8050202	1					
ANR	8050247	Identifier	proportional_spacing		8050202	1					
ANR	8050248	IfStatement	if ( pfs -> params . proportional_spacing )		8050202	3					
ANR	8050249	Condition	pfs -> params . proportional_spacing	289:8:8903:8934	8050202	0	True				
ANR	8050250	MemberAccess	pfs -> params . proportional_spacing		8050202	0					
ANR	8050251	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050252	Identifier	pfs		8050202	0					
ANR	8050253	Identifier	params		8050202	1					
ANR	8050254	Identifier	proportional_spacing		8050202	1					
ANR	8050255	ExpressionStatement	score [ score_pitch ] = 0	290:8:8945:8967	8050202	1	True				
ANR	8050256	AssignmentExpression	score [ score_pitch ] = 0		8050202	0		=			
ANR	8050257	ArrayIndexing	score [ score_pitch ]		8050202	0					
ANR	8050258	Identifier	score		8050202	0					
ANR	8050259	Identifier	score_pitch		8050202	1					
ANR	8050260	PrimaryExpression	0		8050202	1					
ANR	8050261	ElseStatement	else		8050202	0					
ANR	8050262	CompoundStatement		18:9:701:701	8050202	0					
ANR	8050263	IfStatement	if ( fp -> params . proportional_spacing )		8050202	0					
ANR	8050264	Condition	fp -> params . proportional_spacing	292:12:9074:9104	8050202	0	True				
ANR	8050265	MemberAccess	fp -> params . proportional_spacing		8050202	0					
ANR	8050266	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050267	Identifier	fp		8050202	0					
ANR	8050268	Identifier	params		8050202	1					
ANR	8050269	Identifier	proportional_spacing		8050202	1					
ANR	8050270	ExpressionStatement	score [ score_pitch ] = 0	294:12:9171:9193	8050202	1	True				
ANR	8050271	AssignmentExpression	score [ score_pitch ] = 0		8050202	0		=			
ANR	8050272	ArrayIndexing	score [ score_pitch ]		8050202	0					
ANR	8050273	Identifier	score		8050202	0					
ANR	8050274	Identifier	score_pitch		8050202	1					
ANR	8050275	PrimaryExpression	0		8050202	1					
ANR	8050276	ElseStatement	else		8050202	0					
ANR	8050277	CompoundStatement		23:12:912:1041	8050202	0					
ANR	8050278	IdentifierDeclStatement	int delta = ( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) ) ;	296:12:9222:9351	8050202	0	True				
ANR	8050279	IdentifierDecl	delta = ( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) )		8050202	0					
ANR	8050280	IdentifierDeclType	int		8050202	0					
ANR	8050281	Identifier	delta		8050202	1					
ANR	8050282	AssignmentExpression	delta = ( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) )		8050202	2		=			
ANR	8050283	Identifier	delta		8050202	0					
ANR	8050284	CastExpression	( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) )		8050202	1					
ANR	8050285	CastTarget	int		8050202	0					
ANR	8050286	AdditiveExpression	pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params )		8050202	1		-			
ANR	8050287	CallExpression	pl_fp_pitch_per_inch_x100 ( & fp -> params )		8050202	0					
ANR	8050288	Callee	pl_fp_pitch_per_inch_x100		8050202	0					
ANR	8050289	Identifier	pl_fp_pitch_per_inch_x100		8050202	0					
ANR	8050290	ArgumentList	& fp -> params		8050202	1					
ANR	8050291	Argument	& fp -> params		8050202	0					
ANR	8050292	UnaryOperationExpression	& fp -> params		8050202	0					
ANR	8050293	UnaryOperator	&		8050202	0					
ANR	8050294	PtrMemberAccess	fp -> params		8050202	1					
ANR	8050295	Identifier	fp		8050202	0					
ANR	8050296	Identifier	params		8050202	1					
ANR	8050297	CallExpression	pl_fp_pitch_per_inch_x100 ( & pfs -> params )		8050202	1					
ANR	8050298	Callee	pl_fp_pitch_per_inch_x100		8050202	0					
ANR	8050299	Identifier	pl_fp_pitch_per_inch_x100		8050202	0					
ANR	8050300	ArgumentList	& pfs -> params		8050202	1					
ANR	8050301	Argument	& pfs -> params		8050202	0					
ANR	8050302	UnaryOperationExpression	& pfs -> params		8050202	0					
ANR	8050303	UnaryOperator	&		8050202	0					
ANR	8050304	PtrMemberAccess	pfs -> params		8050202	1					
ANR	8050305	Identifier	pfs		8050202	0					
ANR	8050306	Identifier	params		8050202	1					
ANR	8050307	IfStatement	if ( font_is_scalable_selection_wise ( fp ) || ( abs ( delta ) <= 10 ) )		8050202	1					
ANR	8050308	Condition	font_is_scalable_selection_wise ( fp ) || ( abs ( delta ) <= 10 )	301:16:9496:9552	8050202	0	True				
ANR	8050309	OrExpression	font_is_scalable_selection_wise ( fp ) || ( abs ( delta ) <= 10 )		8050202	0		||			
ANR	8050310	CallExpression	font_is_scalable_selection_wise ( fp )		8050202	0					
ANR	8050311	Callee	font_is_scalable_selection_wise		8050202	0					
ANR	8050312	Identifier	font_is_scalable_selection_wise		8050202	0					
ANR	8050313	ArgumentList	fp		8050202	1					
ANR	8050314	Argument	fp		8050202	0					
ANR	8050315	Identifier	fp		8050202	0					
ANR	8050316	RelationalExpression	abs ( delta ) <= 10		8050202	1		<=			
ANR	8050317	CallExpression	abs ( delta )		8050202	0					
ANR	8050318	Callee	abs		8050202	0					
ANR	8050319	Identifier	abs		8050202	0					
ANR	8050320	ArgumentList	delta		8050202	1					
ANR	8050321	Argument	delta		8050202	0					
ANR	8050322	Identifier	delta		8050202	0					
ANR	8050323	PrimaryExpression	10		8050202	1					
ANR	8050324	ExpressionStatement	score [ score_pitch ] = 0x2000000	302:16:9571:9601	8050202	1	True				
ANR	8050325	AssignmentExpression	score [ score_pitch ] = 0x2000000		8050202	0		=			
ANR	8050326	ArrayIndexing	score [ score_pitch ]		8050202	0					
ANR	8050327	Identifier	score		8050202	0					
ANR	8050328	Identifier	score_pitch		8050202	1					
ANR	8050329	PrimaryExpression	0x2000000		8050202	1					
ANR	8050330	ElseStatement	else		8050202	0					
ANR	8050331	IfStatement	if ( delta > 0 )		8050202	0					
ANR	8050332	Condition	delta > 0	303:21:9624:9632	8050202	0	True				
ANR	8050333	RelationalExpression	delta > 0		8050202	0		>			
ANR	8050334	Identifier	delta		8050202	0					
ANR	8050335	PrimaryExpression	0		8050202	1					
ANR	8050336	ExpressionStatement	score [ score_pitch ] = 0x2000000 - delta	304:16:9651:9689	8050202	1	True				
ANR	8050337	AssignmentExpression	score [ score_pitch ] = 0x2000000 - delta		8050202	0		=			
ANR	8050338	ArrayIndexing	score [ score_pitch ]		8050202	0					
ANR	8050339	Identifier	score		8050202	0					
ANR	8050340	Identifier	score_pitch		8050202	1					
ANR	8050341	AdditiveExpression	0x2000000 - delta		8050202	1		-			
ANR	8050342	PrimaryExpression	0x2000000		8050202	0					
ANR	8050343	Identifier	delta		8050202	1					
ANR	8050344	ElseStatement	else		8050202	0					
ANR	8050345	ExpressionStatement	score [ score_pitch ] = 0x1000000 + delta	306:16:9724:9762	8050202	0	True				
ANR	8050346	AssignmentExpression	score [ score_pitch ] = 0x1000000 + delta		8050202	0		=			
ANR	8050347	ArrayIndexing	score [ score_pitch ]		8050202	0					
ANR	8050348	Identifier	score		8050202	0					
ANR	8050349	Identifier	score_pitch		8050202	1					
ANR	8050350	AdditiveExpression	0x1000000 + delta		8050202	1		+			
ANR	8050351	PrimaryExpression	0x1000000		8050202	0					
ANR	8050352	Identifier	delta		8050202	1					
ANR	8050353	IfStatement	if ( font_is_scalable_selection_wise ( fp ) )		8050202	4					
ANR	8050354	Condition	font_is_scalable_selection_wise ( fp )	313:8:9983:10017	8050202	0	True				
ANR	8050355	CallExpression	font_is_scalable_selection_wise ( fp )		8050202	0					
ANR	8050356	Callee	font_is_scalable_selection_wise		8050202	0					
ANR	8050357	Identifier	font_is_scalable_selection_wise		8050202	0					
ANR	8050358	ArgumentList	fp		8050202	1					
ANR	8050359	Argument	fp		8050202	0					
ANR	8050360	Identifier	fp		8050202	0					
ANR	8050361	ExpressionStatement	score [ score_height ] = 0x1000000	314:8:10028:10059	8050202	1	True				
ANR	8050362	AssignmentExpression	score [ score_height ] = 0x1000000		8050202	0		=			
ANR	8050363	ArrayIndexing	score [ score_height ]		8050202	0					
ANR	8050364	Identifier	score		8050202	0					
ANR	8050365	Identifier	score_height		8050202	1					
ANR	8050366	PrimaryExpression	0x1000000		8050202	1					
ANR	8050367	ElseStatement	else		8050202	0					
ANR	8050368	CompoundStatement		43:8:1770:1835	8050202	0					
ANR	8050369	IdentifierDeclStatement	int delta = abs ( pfs -> params . height_4ths - fp -> params . height_4ths ) ;	316:8:10080:10145	8050202	0	True				
ANR	8050370	IdentifierDecl	delta = abs ( pfs -> params . height_4ths - fp -> params . height_4ths )		8050202	0					
ANR	8050371	IdentifierDeclType	int		8050202	0					
ANR	8050372	Identifier	delta		8050202	1					
ANR	8050373	AssignmentExpression	delta = abs ( pfs -> params . height_4ths - fp -> params . height_4ths )		8050202	2		=			
ANR	8050374	Identifier	delta		8050202	0					
ANR	8050375	CallExpression	abs ( pfs -> params . height_4ths - fp -> params . height_4ths )		8050202	1					
ANR	8050376	Callee	abs		8050202	0					
ANR	8050377	Identifier	abs		8050202	0					
ANR	8050378	ArgumentList	pfs -> params . height_4ths - fp -> params . height_4ths		8050202	1					
ANR	8050379	Argument	pfs -> params . height_4ths - fp -> params . height_4ths		8050202	0					
ANR	8050380	AdditiveExpression	pfs -> params . height_4ths - fp -> params . height_4ths		8050202	0		-			
ANR	8050381	MemberAccess	pfs -> params . height_4ths		8050202	0					
ANR	8050382	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050383	Identifier	pfs		8050202	0					
ANR	8050384	Identifier	params		8050202	1					
ANR	8050385	Identifier	height_4ths		8050202	1					
ANR	8050386	MemberAccess	fp -> params . height_4ths		8050202	1					
ANR	8050387	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050388	Identifier	fp		8050202	0					
ANR	8050389	Identifier	params		8050202	1					
ANR	8050390	Identifier	height_4ths		8050202	1					
ANR	8050391	IfStatement	if ( delta <= 1 )		8050202	1					
ANR	8050392	Condition	delta <= 1	319:12:10229:10238	8050202	0	True				
ANR	8050393	RelationalExpression	delta <= 1		8050202	0		<=			
ANR	8050394	Identifier	delta		8050202	0					
ANR	8050395	PrimaryExpression	1		8050202	1					
ANR	8050396	ExpressionStatement	delta = 0	320:12:10253:10262	8050202	1	True				
ANR	8050397	AssignmentExpression	delta = 0		8050202	0		=			
ANR	8050398	Identifier	delta		8050202	0					
ANR	8050399	PrimaryExpression	0		8050202	1					
ANR	8050400	ExpressionStatement	score [ score_height ] = 0x1000000 - delta	321:8:10272:10311	8050202	2	True				
ANR	8050401	AssignmentExpression	score [ score_height ] = 0x1000000 - delta		8050202	0		=			
ANR	8050402	ArrayIndexing	score [ score_height ]		8050202	0					
ANR	8050403	Identifier	score		8050202	0					
ANR	8050404	Identifier	score_height		8050202	1					
ANR	8050405	AdditiveExpression	0x1000000 - delta		8050202	1		-			
ANR	8050406	PrimaryExpression	0x1000000		8050202	0					
ANR	8050407	Identifier	delta		8050202	1					
ANR	8050408	IfStatement	if ( ( pfs -> params . style & 31 ) == fp -> params . style )		8050202	5					
ANR	8050409	Condition	( pfs -> params . style & 31 ) == fp -> params . style	325:8:10349:10392	8050202	0	True				
ANR	8050410	EqualityExpression	( pfs -> params . style & 31 ) == fp -> params . style		8050202	0		==			
ANR	8050411	BitAndExpression	pfs -> params . style & 31		8050202	0		&			
ANR	8050412	MemberAccess	pfs -> params . style		8050202	0					
ANR	8050413	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050414	Identifier	pfs		8050202	0					
ANR	8050415	Identifier	params		8050202	1					
ANR	8050416	Identifier	style		8050202	1					
ANR	8050417	PrimaryExpression	31		8050202	1					
ANR	8050418	MemberAccess	fp -> params . style		8050202	1					
ANR	8050419	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050420	Identifier	fp		8050202	0					
ANR	8050421	Identifier	params		8050202	1					
ANR	8050422	Identifier	style		8050202	1					
ANR	8050423	ExpressionStatement	score [ score_style ] = 2	326:8:10403:10425	8050202	1	True				
ANR	8050424	AssignmentExpression	score [ score_style ] = 2		8050202	0		=			
ANR	8050425	ArrayIndexing	score [ score_style ]		8050202	0					
ANR	8050426	Identifier	score		8050202	0					
ANR	8050427	Identifier	score_style		8050202	1					
ANR	8050428	PrimaryExpression	2		8050202	1					
ANR	8050429	ElseStatement	else		8050202	0					
ANR	8050430	IfStatement	if ( fp -> params . style == 0 && pfs -> params . style != 0 )		8050202	0					
ANR	8050431	Condition	fp -> params . style == 0 && pfs -> params . style != 0	327:13:10440:10486	8050202	0	True				
ANR	8050432	AndExpression	fp -> params . style == 0 && pfs -> params . style != 0		8050202	0		&&			
ANR	8050433	EqualityExpression	fp -> params . style == 0		8050202	0		==			
ANR	8050434	MemberAccess	fp -> params . style		8050202	0					
ANR	8050435	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050436	Identifier	fp		8050202	0					
ANR	8050437	Identifier	params		8050202	1					
ANR	8050438	Identifier	style		8050202	1					
ANR	8050439	PrimaryExpression	0		8050202	1					
ANR	8050440	EqualityExpression	pfs -> params . style != 0		8050202	1		!=			
ANR	8050441	MemberAccess	pfs -> params . style		8050202	0					
ANR	8050442	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050443	Identifier	pfs		8050202	0					
ANR	8050444	Identifier	params		8050202	1					
ANR	8050445	Identifier	style		8050202	1					
ANR	8050446	PrimaryExpression	0		8050202	1					
ANR	8050447	ExpressionStatement	score [ score_style ] = 1	328:8:10497:10519	8050202	1	True				
ANR	8050448	AssignmentExpression	score [ score_style ] = 1		8050202	0		=			
ANR	8050449	ArrayIndexing	score [ score_style ]		8050202	0					
ANR	8050450	Identifier	score		8050202	0					
ANR	8050451	Identifier	score_style		8050202	1					
ANR	8050452	PrimaryExpression	1		8050202	1					
ANR	8050453	ElseStatement	else		8050202	0					
ANR	8050454	ExpressionStatement	score [ score_style ] = 0	330:8:10581:10603	8050202	0	True				
ANR	8050455	AssignmentExpression	score [ score_style ] = 0		8050202	0		=			
ANR	8050456	ArrayIndexing	score [ score_style ]		8050202	0					
ANR	8050457	Identifier	score		8050202	0					
ANR	8050458	Identifier	score_style		8050202	1					
ANR	8050459	PrimaryExpression	0		8050202	1					
ANR	8050460	CompoundStatement		68:8:2832:2853	8050202	6					
ANR	8050461	IdentifierDeclStatement	int fwt = fp -> params . stroke_weight ;	339:8:11053:11087	8050202	0	True				
ANR	8050462	IdentifierDecl	fwt = fp -> params . stroke_weight		8050202	0					
ANR	8050463	IdentifierDeclType	int		8050202	0					
ANR	8050464	Identifier	fwt		8050202	1					
ANR	8050465	AssignmentExpression	fwt = fp -> params . stroke_weight		8050202	2		=			
ANR	8050466	Identifier	fwt		8050202	0					
ANR	8050467	MemberAccess	fp -> params . stroke_weight		8050202	1					
ANR	8050468	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050469	Identifier	fp		8050202	0					
ANR	8050470	Identifier	params		8050202	1					
ANR	8050471	Identifier	stroke_weight		8050202	1					
ANR	8050472	IdentifierDeclStatement	int pwt = pfs -> params . stroke_weight ;	340:8:11097:11132	8050202	1	True				
ANR	8050473	IdentifierDecl	pwt = pfs -> params . stroke_weight		8050202	0					
ANR	8050474	IdentifierDeclType	int		8050202	0					
ANR	8050475	Identifier	pwt		8050202	1					
ANR	8050476	AssignmentExpression	pwt = pfs -> params . stroke_weight		8050202	2		=			
ANR	8050477	Identifier	pwt		8050202	0					
ANR	8050478	MemberAccess	pfs -> params . stroke_weight		8050202	1					
ANR	8050479	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050480	Identifier	pfs		8050202	0					
ANR	8050481	Identifier	params		8050202	1					
ANR	8050482	Identifier	stroke_weight		8050202	1					
ANR	8050483	IdentifierDeclStatement	int delta = pwt - fwt ;	341:8:11142:11163	8050202	2	True				
ANR	8050484	IdentifierDecl	delta = pwt - fwt		8050202	0					
ANR	8050485	IdentifierDeclType	int		8050202	0					
ANR	8050486	Identifier	delta		8050202	1					
ANR	8050487	AssignmentExpression	delta = pwt - fwt		8050202	2		=			
ANR	8050488	Identifier	delta		8050202	0					
ANR	8050489	AdditiveExpression	pwt - fwt		8050202	1		-			
ANR	8050490	Identifier	pwt		8050202	0					
ANR	8050491	Identifier	fwt		8050202	1					
ANR	8050492	IfStatement	if ( pwt >= 0 )		8050202	3					
ANR	8050493	Condition	pwt >= 0	344:12:11237:11244	8050202	0	True				
ANR	8050494	RelationalExpression	pwt >= 0		8050202	0		>=			
ANR	8050495	Identifier	pwt		8050202	0					
ANR	8050496	PrimaryExpression	0		8050202	1					
ANR	8050497	IfStatement	if ( fwt >= pwt )		8050202	1					
ANR	8050498	Condition	fwt >= pwt	345:16:11263:11272	8050202	0	True				
ANR	8050499	RelationalExpression	fwt >= pwt		8050202	0		>=			
ANR	8050500	Identifier	fwt		8050202	0					
ANR	8050501	Identifier	pwt		8050202	1					
ANR	8050502	ExpressionStatement	tscore = 21 + delta	346:16:11291:11310	8050202	1	True				
ANR	8050503	AssignmentExpression	tscore = 21 + delta		8050202	0		=			
ANR	8050504	Identifier	tscore		8050202	0					
ANR	8050505	AdditiveExpression	21 + delta		8050202	1		+			
ANR	8050506	PrimaryExpression	21		8050202	0					
ANR	8050507	Identifier	delta		8050202	1					
ANR	8050508	ElseStatement	else		8050202	0					
ANR	8050509	ExpressionStatement	tscore = 14 - delta	348:16:11345:11364	8050202	0	True				
ANR	8050510	AssignmentExpression	tscore = 14 - delta		8050202	0		=			
ANR	8050511	Identifier	tscore		8050202	0					
ANR	8050512	AdditiveExpression	14 - delta		8050202	1		-			
ANR	8050513	PrimaryExpression	14		8050202	0					
ANR	8050514	Identifier	delta		8050202	1					
ANR	8050515	ElseStatement	else		8050202	0					
ANR	8050516	IfStatement	if ( fwt <= pwt )		8050202	0					
ANR	8050517	Condition	fwt <= pwt	349:17:11383:11392	8050202	0	True				
ANR	8050518	RelationalExpression	fwt <= pwt		8050202	0		<=			
ANR	8050519	Identifier	fwt		8050202	0					
ANR	8050520	Identifier	pwt		8050202	1					
ANR	8050521	ExpressionStatement	tscore = 21 - delta	350:12:11407:11426	8050202	1	True				
ANR	8050522	AssignmentExpression	tscore = 21 - delta		8050202	0		=			
ANR	8050523	Identifier	tscore		8050202	0					
ANR	8050524	AdditiveExpression	21 - delta		8050202	1		-			
ANR	8050525	PrimaryExpression	21		8050202	0					
ANR	8050526	Identifier	delta		8050202	1					
ANR	8050527	ElseStatement	else		8050202	0					
ANR	8050528	ExpressionStatement	tscore = 14 + delta	352:12:11453:11472	8050202	0	True				
ANR	8050529	AssignmentExpression	tscore = 14 + delta		8050202	0		=			
ANR	8050530	Identifier	tscore		8050202	0					
ANR	8050531	AdditiveExpression	14 + delta		8050202	1		+			
ANR	8050532	PrimaryExpression	14		8050202	0					
ANR	8050533	Identifier	delta		8050202	1					
ANR	8050534	ExpressionStatement	score [ score_weight ] = tscore	353:8:11482:11510	8050202	4	True				
ANR	8050535	AssignmentExpression	score [ score_weight ] = tscore		8050202	0		=			
ANR	8050536	ArrayIndexing	score [ score_weight ]		8050202	0					
ANR	8050537	Identifier	score		8050202	0					
ANR	8050538	Identifier	score_weight		8050202	1					
ANR	8050539	Identifier	tscore		8050202	1					
ANR	8050540	IfStatement	if ( score [ score_style ] == 0 )		8050202	5					
ANR	8050541	Condition	score [ score_style ] == 0	367:12:12175:12197	8050202	0	True				
ANR	8050542	EqualityExpression	score [ score_style ] == 0		8050202	0		==			
ANR	8050543	ArrayIndexing	score [ score_style ]		8050202	0					
ANR	8050544	Identifier	score		8050202	0					
ANR	8050545	Identifier	score_style		8050202	1					
ANR	8050546	PrimaryExpression	0		8050202	1					
ANR	8050547	ExpressionStatement	score [ score_weight ] = 0	368:12:12212:12235	8050202	1	True				
ANR	8050548	AssignmentExpression	score [ score_weight ] = 0		8050202	0		=			
ANR	8050549	ArrayIndexing	score [ score_weight ]		8050202	0					
ANR	8050550	Identifier	score		8050202	0					
ANR	8050551	Identifier	score_weight		8050202	1					
ANR	8050552	PrimaryExpression	0		8050202	1					
ANR	8050553	CompoundStatement		100:8:3979:4047	8050202	7					
ANR	8050554	IdentifierDeclStatement	uint diff = pfs -> params . typeface_family - fp -> params . typeface_family ;	373:8:12289:12357	8050202	0	True				
ANR	8050555	IdentifierDecl	diff = pfs -> params . typeface_family - fp -> params . typeface_family		8050202	0					
ANR	8050556	IdentifierDeclType	uint		8050202	0					
ANR	8050557	Identifier	diff		8050202	1					
ANR	8050558	AssignmentExpression	diff = pfs -> params . typeface_family - fp -> params . typeface_family		8050202	2		=			
ANR	8050559	Identifier	diff		8050202	0					
ANR	8050560	AdditiveExpression	pfs -> params . typeface_family - fp -> params . typeface_family		8050202	1		-			
ANR	8050561	MemberAccess	pfs -> params . typeface_family		8050202	0					
ANR	8050562	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050563	Identifier	pfs		8050202	0					
ANR	8050564	Identifier	params		8050202	1					
ANR	8050565	Identifier	typeface_family		8050202	1					
ANR	8050566	MemberAccess	fp -> params . typeface_family		8050202	1					
ANR	8050567	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050568	Identifier	fp		8050202	0					
ANR	8050569	Identifier	params		8050202	1					
ANR	8050570	Identifier	typeface_family		8050202	1					
ANR	8050571	IfStatement	if ( diff == 0 )		8050202	1					
ANR	8050572	Condition	diff == 0	375:12:12372:12380	8050202	0	True				
ANR	8050573	EqualityExpression	diff == 0		8050202	0		==			
ANR	8050574	Identifier	diff		8050202	0					
ANR	8050575	PrimaryExpression	0		8050202	1					
ANR	8050576	ExpressionStatement	score [ score_typeface ] = 2	376:12:12395:12420	8050202	1	True				
ANR	8050577	AssignmentExpression	score [ score_typeface ] = 2		8050202	0		=			
ANR	8050578	ArrayIndexing	score [ score_typeface ]		8050202	0					
ANR	8050579	Identifier	score		8050202	0					
ANR	8050580	Identifier	score_typeface		8050202	1					
ANR	8050581	PrimaryExpression	2		8050202	1					
ANR	8050582	ElseStatement	else		8050202	0					
ANR	8050583	CompoundStatement		104:13:4125:4125	8050202	0					
ANR	8050584	ExpressionStatement	diff = ( pfs -> params . typeface_family & 0xfff ) - ( fp -> params . typeface_family & 0xfff )	378:12:12449:12564	8050202	0	True				
ANR	8050585	AssignmentExpression	diff = ( pfs -> params . typeface_family & 0xfff ) - ( fp -> params . typeface_family & 0xfff )		8050202	0		=			
ANR	8050586	Identifier	diff		8050202	0					
ANR	8050587	AdditiveExpression	( pfs -> params . typeface_family & 0xfff ) - ( fp -> params . typeface_family & 0xfff )		8050202	1		-			
ANR	8050588	BitAndExpression	pfs -> params . typeface_family & 0xfff		8050202	0		&			
ANR	8050589	MemberAccess	pfs -> params . typeface_family		8050202	0					
ANR	8050590	PtrMemberAccess	pfs -> params		8050202	0					
ANR	8050591	Identifier	pfs		8050202	0					
ANR	8050592	Identifier	params		8050202	1					
ANR	8050593	Identifier	typeface_family		8050202	1					
ANR	8050594	PrimaryExpression	0xfff		8050202	1					
ANR	8050595	BitAndExpression	fp -> params . typeface_family & 0xfff		8050202	1		&			
ANR	8050596	MemberAccess	fp -> params . typeface_family		8050202	0					
ANR	8050597	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050598	Identifier	fp		8050202	0					
ANR	8050599	Identifier	params		8050202	1					
ANR	8050600	Identifier	typeface_family		8050202	1					
ANR	8050601	PrimaryExpression	0xfff		8050202	1					
ANR	8050602	IfStatement	if ( diff == 0 )		8050202	1					
ANR	8050603	Condition	diff == 0	381:16:12582:12590	8050202	0	True				
ANR	8050604	EqualityExpression	diff == 0		8050202	0		==			
ANR	8050605	Identifier	diff		8050202	0					
ANR	8050606	PrimaryExpression	0		8050202	1					
ANR	8050607	ExpressionStatement	score [ score_typeface ] = 1	382:16:12609:12634	8050202	1	True				
ANR	8050608	AssignmentExpression	score [ score_typeface ] = 1		8050202	0		=			
ANR	8050609	ArrayIndexing	score [ score_typeface ]		8050202	0					
ANR	8050610	Identifier	score		8050202	0					
ANR	8050611	Identifier	score_typeface		8050202	1					
ANR	8050612	PrimaryExpression	1		8050202	1					
ANR	8050613	ElseStatement	else		8050202	0					
ANR	8050614	ExpressionStatement	score [ score_typeface ] = 0	384:16:12669:12694	8050202	0	True				
ANR	8050615	AssignmentExpression	score [ score_typeface ] = 0		8050202	0		=			
ANR	8050616	ArrayIndexing	score [ score_typeface ]		8050202	0					
ANR	8050617	Identifier	score		8050202	0					
ANR	8050618	Identifier	score_typeface		8050202	1					
ANR	8050619	PrimaryExpression	0		8050202	1					
ANR	8050620	IfStatement	if ( fp -> storage & pcds_downloaded )		8050202	8					
ANR	8050621	Condition	fp -> storage & pcds_downloaded	396:8:13194:13222	8050202	0	True				
ANR	8050622	BitAndExpression	fp -> storage & pcds_downloaded		8050202	0		&			
ANR	8050623	PtrMemberAccess	fp -> storage		8050202	0					
ANR	8050624	Identifier	fp		8050202	0					
ANR	8050625	Identifier	storage		8050202	1					
ANR	8050626	Identifier	pcds_downloaded		8050202	1					
ANR	8050627	ExpressionStatement	tscore = 1 << ( pcds_cartridge_max + 1 )	397:8:13233:13271	8050202	1	True				
ANR	8050628	AssignmentExpression	tscore = 1 << ( pcds_cartridge_max + 1 )		8050202	0		=			
ANR	8050629	Identifier	tscore		8050202	0					
ANR	8050630	ShiftExpression	1 << ( pcds_cartridge_max + 1 )		8050202	1		<<			
ANR	8050631	PrimaryExpression	1		8050202	0					
ANR	8050632	AdditiveExpression	pcds_cartridge_max + 1		8050202	1		+			
ANR	8050633	Identifier	pcds_cartridge_max		8050202	0					
ANR	8050634	PrimaryExpression	1		8050202	1					
ANR	8050635	ElseStatement	else		8050202	0					
ANR	8050636	IfStatement	if ( fp -> storage & pcds_all_cartridges )		8050202	0					
ANR	8050637	Condition	fp -> storage & pcds_all_cartridges	398:13:13286:13318	8050202	0	True				
ANR	8050638	BitAndExpression	fp -> storage & pcds_all_cartridges		8050202	0		&			
ANR	8050639	PtrMemberAccess	fp -> storage		8050202	0					
ANR	8050640	Identifier	fp		8050202	0					
ANR	8050641	Identifier	storage		8050202	1					
ANR	8050642	Identifier	pcds_all_cartridges		8050202	1					
ANR	8050643	ExpressionStatement	tscore = ( fp -> storage & pcds_all_cartridges ) >> ( pcds_cartridge_shift - 1 )	399:8:13329:13415	8050202	1	True				
ANR	8050644	AssignmentExpression	tscore = ( fp -> storage & pcds_all_cartridges ) >> ( pcds_cartridge_shift - 1 )		8050202	0		=			
ANR	8050645	Identifier	tscore		8050202	0					
ANR	8050646	ShiftExpression	( fp -> storage & pcds_all_cartridges ) >> ( pcds_cartridge_shift - 1 )		8050202	1		>>			
ANR	8050647	BitAndExpression	fp -> storage & pcds_all_cartridges		8050202	0		&			
ANR	8050648	PtrMemberAccess	fp -> storage		8050202	0					
ANR	8050649	Identifier	fp		8050202	0					
ANR	8050650	Identifier	storage		8050202	1					
ANR	8050651	Identifier	pcds_all_cartridges		8050202	1					
ANR	8050652	AdditiveExpression	pcds_cartridge_shift - 1		8050202	1		-			
ANR	8050653	Identifier	pcds_cartridge_shift		8050202	0					
ANR	8050654	PrimaryExpression	1		8050202	1					
ANR	8050655	ElseStatement	else		8050202	0					
ANR	8050656	ExpressionStatement	tscore = ( fp -> storage & pcds_all_simms ) ? 1 : 0	403:8:13491:13538	8050202	0	True				
ANR	8050657	AssignmentExpression	tscore = ( fp -> storage & pcds_all_simms ) ? 1 : 0		8050202	0		=			
ANR	8050658	Identifier	tscore		8050202	0					
ANR	8050659	ConditionalExpression	( fp -> storage & pcds_all_simms ) ? 1 : 0		8050202	1					
ANR	8050660	Condition	fp -> storage & pcds_all_simms		8050202	0					
ANR	8050661	BitAndExpression	fp -> storage & pcds_all_simms		8050202	0		&			
ANR	8050662	PtrMemberAccess	fp -> storage		8050202	0					
ANR	8050663	Identifier	fp		8050202	0					
ANR	8050664	Identifier	storage		8050202	1					
ANR	8050665	Identifier	pcds_all_simms		8050202	1					
ANR	8050666	PrimaryExpression	1		8050202	1					
ANR	8050667	PrimaryExpression	0		8050202	2					
ANR	8050668	ExpressionStatement	score [ score_location ] = tscore	404:4:13544:13574	8050202	9	True				
ANR	8050669	AssignmentExpression	score [ score_location ] = tscore		8050202	0		=			
ANR	8050670	ArrayIndexing	score [ score_location ]		8050202	0					
ANR	8050671	Identifier	score		8050202	0					
ANR	8050672	Identifier	score_location		8050202	1					
ANR	8050673	Identifier	tscore		8050202	1					
ANR	8050674	IfStatement	if ( fp -> scaling_technology != plfst_bitmap )		8050202	10					
ANR	8050675	Condition	fp -> scaling_technology != plfst_bitmap	407:8:13611:13648	8050202	0	True				
ANR	8050676	EqualityExpression	fp -> scaling_technology != plfst_bitmap		8050202	0		!=			
ANR	8050677	PtrMemberAccess	fp -> scaling_technology		8050202	0					
ANR	8050678	Identifier	fp		8050202	0					
ANR	8050679	Identifier	scaling_technology		8050202	1					
ANR	8050680	Identifier	plfst_bitmap		8050202	1					
ANR	8050681	ExpressionStatement	score [ score_orientation ] = 1	408:8:13659:13687	8050202	1	True				
ANR	8050682	AssignmentExpression	score [ score_orientation ] = 1		8050202	0		=			
ANR	8050683	ArrayIndexing	score [ score_orientation ]		8050202	0					
ANR	8050684	Identifier	score		8050202	0					
ANR	8050685	Identifier	score_orientation		8050202	1					
ANR	8050686	PrimaryExpression	1		8050202	1					
ANR	8050687	ElseStatement	else		8050202	0					
ANR	8050688	CompoundStatement		137:8:5398:5457	8050202	0					
ANR	8050689	IdentifierDeclStatement	pcl_font_header_t * fhp = ( pcl_font_header_t * ) ( fp -> header ) ;	410:8:13708:13767	8050202	0	True				
ANR	8050690	IdentifierDecl	* fhp = ( pcl_font_header_t * ) ( fp -> header )		8050202	0					
ANR	8050691	IdentifierDeclType	pcl_font_header_t *		8050202	0					
ANR	8050692	Identifier	fhp		8050202	1					
ANR	8050693	AssignmentExpression	* fhp = ( pcl_font_header_t * ) ( fp -> header )		8050202	2		=			
ANR	8050694	Identifier	fhp		8050202	0					
ANR	8050695	CastExpression	( pcl_font_header_t * ) ( fp -> header )		8050202	1					
ANR	8050696	CastTarget	pcl_font_header_t *		8050202	0					
ANR	8050697	PtrMemberAccess	fp -> header		8050202	1					
ANR	8050698	Identifier	fp		8050202	0					
ANR	8050699	Identifier	header		8050202	1					
ANR	8050700	ExpressionStatement	score [ score_orientation ] = fhp ? fhp -> Orientation == pcs -> xfm_state . lp_orient : 0	412:8:13778:13871	8050202	1	True				
ANR	8050701	AssignmentExpression	score [ score_orientation ] = fhp ? fhp -> Orientation == pcs -> xfm_state . lp_orient : 0		8050202	0		=			
ANR	8050702	ArrayIndexing	score [ score_orientation ]		8050202	0					
ANR	8050703	Identifier	score		8050202	0					
ANR	8050704	Identifier	score_orientation		8050202	1					
ANR	8050705	ConditionalExpression	fhp ? fhp -> Orientation == pcs -> xfm_state . lp_orient : 0		8050202	1					
ANR	8050706	Condition	fhp		8050202	0					
ANR	8050707	Identifier	fhp		8050202	0					
ANR	8050708	EqualityExpression	fhp -> Orientation == pcs -> xfm_state . lp_orient		8050202	1		==			
ANR	8050709	PtrMemberAccess	fhp -> Orientation		8050202	0					
ANR	8050710	Identifier	fhp		8050202	0					
ANR	8050711	Identifier	Orientation		8050202	1					
ANR	8050712	MemberAccess	pcs -> xfm_state . lp_orient		8050202	1					
ANR	8050713	PtrMemberAccess	pcs -> xfm_state		8050202	0					
ANR	8050714	Identifier	pcs		8050202	0					
ANR	8050715	Identifier	xfm_state		8050202	1					
ANR	8050716	Identifier	lp_orient		8050202	1					
ANR	8050717	PrimaryExpression	0		8050202	2					
ANR	8050718	IfStatement	if ( INTERNAL_LPFONT )		8050202	11					
ANR	8050719	Condition	INTERNAL_LPFONT	424:8:14195:14209	8050202	0	True				
ANR	8050720	Identifier	INTERNAL_LPFONT		8050202	0					
ANR	8050721	ExpressionStatement	score [ score_fontnumber ] = 0x100000 - fp -> params . typeface_family	425:8:14220:14283	8050202	1	True				
ANR	8050722	AssignmentExpression	score [ score_fontnumber ] = 0x100000 - fp -> params . typeface_family		8050202	0		=			
ANR	8050723	ArrayIndexing	score [ score_fontnumber ]		8050202	0					
ANR	8050724	Identifier	score		8050202	0					
ANR	8050725	Identifier	score_fontnumber		8050202	1					
ANR	8050726	AdditiveExpression	0x100000 - fp -> params . typeface_family		8050202	1		-			
ANR	8050727	PrimaryExpression	0x100000		8050202	0					
ANR	8050728	MemberAccess	fp -> params . typeface_family		8050202	1					
ANR	8050729	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050730	Identifier	fp		8050202	0					
ANR	8050731	Identifier	params		8050202	1					
ANR	8050732	Identifier	typeface_family		8050202	1					
ANR	8050733	ElseStatement	else		8050202	0					
ANR	8050734	ExpressionStatement	score [ score_fontnumber ] = 0x200000 - fp -> params . typeface_family	427:8:14302:14365	8050202	0	True				
ANR	8050735	AssignmentExpression	score [ score_fontnumber ] = 0x200000 - fp -> params . typeface_family		8050202	0		=			
ANR	8050736	ArrayIndexing	score [ score_fontnumber ]		8050202	0					
ANR	8050737	Identifier	score		8050202	0					
ANR	8050738	Identifier	score_fontnumber		8050202	1					
ANR	8050739	AdditiveExpression	0x200000 - fp -> params . typeface_family		8050202	1		-			
ANR	8050740	PrimaryExpression	0x200000		8050202	0					
ANR	8050741	MemberAccess	fp -> params . typeface_family		8050202	1					
ANR	8050742	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050743	Identifier	fp		8050202	0					
ANR	8050744	Identifier	params		8050202	1					
ANR	8050745	Identifier	typeface_family		8050202	1					
ANR	8050746	ExpressionStatement	score [ score_pjl_fontnumber ] = - fp -> params . pjl_font_number	435:4:14552:14609	8050202	12	True				
ANR	8050747	AssignmentExpression	score [ score_pjl_fontnumber ] = - fp -> params . pjl_font_number		8050202	0		=			
ANR	8050748	ArrayIndexing	score [ score_pjl_fontnumber ]		8050202	0					
ANR	8050749	Identifier	score		8050202	0					
ANR	8050750	Identifier	score_pjl_fontnumber		8050202	1					
ANR	8050751	UnaryOperationExpression	- fp -> params . pjl_font_number		8050202	1					
ANR	8050752	UnaryOperator	-		8050202	0					
ANR	8050753	MemberAccess	fp -> params . pjl_font_number		8050202	1					
ANR	8050754	PtrMemberAccess	fp -> params		8050202	0					
ANR	8050755	Identifier	fp		8050202	0					
ANR	8050756	Identifier	params		8050202	1					
ANR	8050757	Identifier	pjl_font_number		8050202	1					
ANR	8050758	IfStatement	if ( gs_debug_c ( '=' ) )		8050202	13					
ANR	8050759	Condition	gs_debug_c ( '=' )	438:8:14633:14647	8050202	0	True				
ANR	8050760	CallExpression	gs_debug_c ( '=' )		8050202	0					
ANR	8050761	Callee	gs_debug_c		8050202	0					
ANR	8050762	Identifier	gs_debug_c		8050202	0					
ANR	8050763	ArgumentList	'='		8050202	1					
ANR	8050764	Argument	'='		8050202	0					
ANR	8050765	PrimaryExpression	'='		8050202	0					
ANR	8050766	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""candidate"" , fp , * mapp , score )"	439:8:14658:14723	8050202	1	True				
ANR	8050767	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""candidate"" , fp , * mapp , score )"		8050202	0					
ANR	8050768	Callee	dmprintf_font_scoring		8050202	0					
ANR	8050769	Identifier	dmprintf_font_scoring		8050202	0					
ANR	8050770	ArgumentList	pcs -> memory		8050202	1					
ANR	8050771	Argument	pcs -> memory		8050202	0					
ANR	8050772	PtrMemberAccess	pcs -> memory		8050202	0					
ANR	8050773	Identifier	pcs		8050202	0					
ANR	8050774	Identifier	memory		8050202	1					
ANR	8050775	Argument	"""candidate"""		8050202	1					
ANR	8050776	PrimaryExpression	"""candidate"""		8050202	0					
ANR	8050777	Argument	fp		8050202	2					
ANR	8050778	Identifier	fp		8050202	0					
ANR	8050779	Argument	* mapp		8050202	3					
ANR	8050780	UnaryOperationExpression	* mapp		8050202	0					
ANR	8050781	UnaryOperator	*		8050202	0					
ANR	8050782	Identifier	mapp		8050202	1					
ANR	8050783	Argument	score		8050202	4					
ANR	8050784	Identifier	score		8050202	0					
ANR	8050785	ReturnType	static void		8050202	1					
ANR	8050786	Identifier	score_match		8050202	2					
ANR	8050787	ParameterList	"const pcl_state_t * pcs , const pcl_font_selection_t * pfs , const pl_font_t * fp , pl_symbol_map_t * * mapp , match_score_t score"		8050202	3					
ANR	8050788	Parameter	const pcl_state_t * pcs	271:12:8158:8180	8050202	0	True				
ANR	8050789	ParameterType	const pcl_state_t *		8050202	0					
ANR	8050790	Identifier	pcs		8050202	1					
ANR	8050791	Parameter	const pcl_font_selection_t * pfs	271:37:8183:8214	8050202	1	True				
ANR	8050792	ParameterType	const pcl_font_selection_t *		8050202	0					
ANR	8050793	Identifier	pfs		8050202	1					
ANR	8050794	Parameter	const pl_font_t * fp	272:12:8229:8248	8050202	2	True				
ANR	8050795	ParameterType	const pl_font_t *		8050202	0					
ANR	8050796	Identifier	fp		8050202	1					
ANR	8050797	Parameter	pl_symbol_map_t * * mapp	272:34:8251:8273	8050202	3	True				
ANR	8050798	ParameterType	pl_symbol_map_t * *		8050202	0					
ANR	8050799	Identifier	mapp		8050202	1					
ANR	8050800	Parameter	match_score_t score	273:12:8288:8306	8050202	4	True				
ANR	8050801	ParameterType	match_score_t		8050202	0					
ANR	8050802	Identifier	score		8050202	1					
ANR	8050803	CFGEntryNode	ENTRY		8050202		True				
ANR	8050804	CFGExitNode	EXIT		8050202		True				
ANR	8050805	Symbol	* score_fontnumber		8050202						
ANR	8050806	Symbol	delta		8050202						
ANR	8050807	Symbol	* pcs		8050202						
ANR	8050808	Symbol	* score_style		8050202						
ANR	8050809	Symbol	check_support		8050202						
ANR	8050810	Symbol	* score_weight		8050202						
ANR	8050811	Symbol	score		8050202						
ANR	8050812	Symbol	score_fontnumber		8050202						
ANR	8050813	Symbol	fp -> params . typeface_family		8050202						
ANR	8050814	Symbol	* fp		8050202						
ANR	8050815	Symbol	pcds_all_cartridges		8050202						
ANR	8050816	Symbol	pfs -> params . symbol_set		8050202						
ANR	8050817	Symbol	fp -> header		8050202						
ANR	8050818	Symbol	gs_debug_c		8050202						
ANR	8050819	Symbol	pcs -> memory		8050202						
ANR	8050820	Symbol	score_spacing		8050202						
ANR	8050821	Symbol	score_location		8050202						
ANR	8050822	Symbol	INTERNAL_LPFONT		8050202						
ANR	8050823	Symbol	mapp		8050202						
ANR	8050824	Symbol	* pfs		8050202						
ANR	8050825	Symbol	pcds_all_simms		8050202						
ANR	8050826	Symbol	* fhp		8050202						
ANR	8050827	Symbol	diff		8050202						
ANR	8050828	Symbol	score_pitch		8050202						
ANR	8050829	Symbol	score_symbol_set		8050202						
ANR	8050830	Symbol	* score_orientation		8050202						
ANR	8050831	Symbol	pfs -> params		8050202						
ANR	8050832	Symbol	fp -> params . pjl_font_number		8050202						
ANR	8050833	Symbol	pfs -> params . style		8050202						
ANR	8050834	Symbol	score_pjl_fontnumber		8050202						
ANR	8050835	Symbol	pfs		8050202						
ANR	8050836	Symbol	fp -> scaling_technology		8050202						
ANR	8050837	Symbol	fwt		8050202						
ANR	8050838	Symbol	* score_typeface		8050202						
ANR	8050839	Symbol	fp -> params . height_4ths		8050202						
ANR	8050840	Symbol	plfst_bitmap		8050202						
ANR	8050841	Symbol	pcds_cartridge_max		8050202						
ANR	8050842	Symbol	fp		8050202						
ANR	8050843	Symbol	pcds_cartridge_shift		8050202						
ANR	8050844	Symbol	* score_pitch		8050202						
ANR	8050845	Symbol	pwt		8050202						
ANR	8050846	Symbol	score_orientation		8050202						
ANR	8050847	Symbol	fp -> params . proportional_spacing		8050202						
ANR	8050848	Symbol	* score_location		8050202						
ANR	8050849	Symbol	pcs -> xfm_state . lp_orient		8050202						
ANR	8050850	Symbol	pfs -> params . proportional_spacing		8050202						
ANR	8050851	Symbol	font_is_scalable_selection_wise		8050202						
ANR	8050852	Symbol	pcs -> xfm_state		8050202						
ANR	8050853	Symbol	fp -> params . stroke_weight		8050202						
ANR	8050854	Symbol	score_style		8050202						
ANR	8050855	Symbol	fhp -> Orientation		8050202						
ANR	8050856	Symbol	* score_symbol_set		8050202						
ANR	8050857	Symbol	pfs -> params . height_4ths		8050202						
ANR	8050858	Symbol	pfs -> params . typeface_family		8050202						
ANR	8050859	Symbol	fp -> params . style		8050202						
ANR	8050860	Symbol	pcs		8050202						
ANR	8050861	Symbol	score_weight		8050202						
ANR	8050862	Symbol	* score_spacing		8050202						
ANR	8050863	Symbol	score_typeface		8050202						
ANR	8050864	Symbol	false		8050202						
ANR	8050865	Symbol	& fp -> params		8050202						
ANR	8050866	Symbol	& pfs -> params		8050202						
ANR	8050867	Symbol	tscore		8050202						
ANR	8050868	Symbol	* mapp		8050202						
ANR	8050869	Symbol	pcds_downloaded		8050202						
ANR	8050870	Symbol	fhp		8050202						
ANR	8050871	Symbol	* score_pjl_fontnumber		8050202						
ANR	8050872	Symbol	abs		8050202						
ANR	8050873	Symbol	pl_fp_pitch_per_inch_x100		8050202						
ANR	8050874	Symbol	fp -> storage		8050202						
ANR	8050875	Symbol	* score		8050202						
ANR	8050876	Symbol	fp -> params		8050202						
ANR	8050877	Symbol	* score_height		8050202						
ANR	8050878	Symbol	pfs -> params . stroke_weight		8050202						
ANR	8050879	Symbol	score_height		8050202						
ANR	8050880	Function	pcl_reselect_font	448:0:14848:18163							
ANR	8050881	FunctionDef	"pcl_reselect_font (pcl_font_selection_t * pfs , const pcl_state_t * pcs , bool internal_only)"		8050880	0					
ANR	8050882	CompoundStatement		451:0:14961:18163	8050880	0					
ANR	8050883	IfStatement	if ( pfs -> font == 0 || pfs -> font -> pfont == 0 )		8050880	0					
ANR	8050884	Condition	pfs -> font == 0 || pfs -> font -> pfont == 0	452:8:14971:15009	8050880	0	True				
ANR	8050885	OrExpression	pfs -> font == 0 || pfs -> font -> pfont == 0		8050880	0		||			
ANR	8050886	EqualityExpression	pfs -> font == 0		8050880	0		==			
ANR	8050887	PtrMemberAccess	pfs -> font		8050880	0					
ANR	8050888	Identifier	pfs		8050880	0					
ANR	8050889	Identifier	font		8050880	1					
ANR	8050890	PrimaryExpression	0		8050880	1					
ANR	8050891	EqualityExpression	pfs -> font -> pfont == 0		8050880	1		==			
ANR	8050892	PtrMemberAccess	pfs -> font -> pfont		8050880	0					
ANR	8050893	PtrMemberAccess	pfs -> font		8050880	0					
ANR	8050894	Identifier	pfs		8050880	0					
ANR	8050895	Identifier	font		8050880	1					
ANR	8050896	Identifier	pfont		8050880	1					
ANR	8050897	PrimaryExpression	0		8050880	1					
ANR	8050898	CompoundStatement		10:8:282:297	8050880	1					
ANR	8050899	IdentifierDeclStatement	pl_dict_enum_t dictp ;	453:8:15022:15042	8050880	0	True				
ANR	8050900	IdentifierDecl	dictp		8050880	0					
ANR	8050901	IdentifierDeclType	pl_dict_enum_t		8050880	0					
ANR	8050902	Identifier	dictp		8050880	1					
ANR	8050903	IdentifierDeclStatement	gs_const_string key ;	454:8:15052:15071	8050880	1	True				
ANR	8050904	IdentifierDecl	key		8050880	0					
ANR	8050905	IdentifierDeclType	gs_const_string		8050880	0					
ANR	8050906	Identifier	key		8050880	1					
ANR	8050907	IdentifierDeclStatement	void * value ;	455:8:15081:15092	8050880	2	True				
ANR	8050908	IdentifierDecl	* value		8050880	0					
ANR	8050909	IdentifierDeclType	void *		8050880	0					
ANR	8050910	Identifier	value		8050880	1					
ANR	8050911	IdentifierDeclStatement	pl_font_t * best_font = 0 ;	456:8:15102:15126	8050880	3	True				
ANR	8050912	IdentifierDecl	* best_font = 0		8050880	0					
ANR	8050913	IdentifierDeclType	pl_font_t *		8050880	0					
ANR	8050914	Identifier	best_font		8050880	1					
ANR	8050915	AssignmentExpression	* best_font = 0		8050880	2		=			
ANR	8050916	Identifier	best_font		8050880	0					
ANR	8050917	PrimaryExpression	0		8050880	1					
ANR	8050918	IdentifierDeclStatement	pl_symbol_map_t * best_map = 0 ;	457:8:15136:15165	8050880	4	True				
ANR	8050919	IdentifierDecl	* best_map = 0		8050880	0					
ANR	8050920	IdentifierDeclType	pl_symbol_map_t *		8050880	0					
ANR	8050921	Identifier	best_map		8050880	1					
ANR	8050922	AssignmentExpression	* best_map = 0		8050880	2		=			
ANR	8050923	Identifier	best_map		8050880	0					
ANR	8050924	PrimaryExpression	0		8050880	1					
ANR	8050925	IdentifierDeclStatement	pl_symbol_map_t * mapp = 0 ;	458:8:15175:15200	8050880	5	True				
ANR	8050926	IdentifierDecl	* mapp = 0		8050880	0					
ANR	8050927	IdentifierDeclType	pl_symbol_map_t *		8050880	0					
ANR	8050928	Identifier	mapp		8050880	1					
ANR	8050929	AssignmentExpression	* mapp = 0		8050880	2		=			
ANR	8050930	Identifier	mapp		8050880	0					
ANR	8050931	PrimaryExpression	0		8050880	1					
ANR	8050932	IdentifierDeclStatement	match_score_t best_match ;	459:8:15210:15234	8050880	6	True				
ANR	8050933	IdentifierDecl	best_match		8050880	0					
ANR	8050934	IdentifierDeclType	match_score_t		8050880	0					
ANR	8050935	Identifier	best_match		8050880	1					
ANR	8050936	IdentifierDeclStatement	score_index_t i ;	460:8:15244:15259	8050880	7	True				
ANR	8050937	IdentifierDecl	i		8050880	0					
ANR	8050938	IdentifierDeclType	score_index_t		8050880	0					
ANR	8050939	Identifier	i		8050880	1					
ANR	8050940	IfStatement	if ( gs_debug_c ( '=' ) )		8050880	8					
ANR	8050941	Condition	gs_debug_c ( '=' )	463:12:15287:15301	8050880	0	True				
ANR	8050942	CallExpression	gs_debug_c ( '=' )		8050880	0					
ANR	8050943	Callee	gs_debug_c		8050880	0					
ANR	8050944	Identifier	gs_debug_c		8050880	0					
ANR	8050945	ArgumentList	'='		8050880	1					
ANR	8050946	Argument	'='		8050880	0					
ANR	8050947	PrimaryExpression	'='		8050880	0					
ANR	8050948	CompoundStatement		13:29:342:342	8050880	1					
ANR	8050949	ExpressionStatement	"dmputs ( pcs -> memory , ""[=]request: "" )"	464:12:15318:15353	8050880	0	True				
ANR	8050950	CallExpression	"dmputs ( pcs -> memory , ""[=]request: "" )"		8050880	0					
ANR	8050951	Callee	dmputs		8050880	0					
ANR	8050952	Identifier	dmputs		8050880	0					
ANR	8050953	ArgumentList	pcs -> memory		8050880	1					
ANR	8050954	Argument	pcs -> memory		8050880	0					
ANR	8050955	PtrMemberAccess	pcs -> memory		8050880	0					
ANR	8050956	Identifier	pcs		8050880	0					
ANR	8050957	Identifier	memory		8050880	1					
ANR	8050958	Argument	"""[=]request: """		8050880	1					
ANR	8050959	PrimaryExpression	"""[=]request: """		8050880	0					
ANR	8050960	ExpressionStatement	"dmprint_font_params_t ( pcs -> memory , & pfs -> params )"	465:12:15367:15415	8050880	1	True				
ANR	8050961	CallExpression	"dmprint_font_params_t ( pcs -> memory , & pfs -> params )"		8050880	0					
ANR	8050962	Callee	dmprint_font_params_t		8050880	0					
ANR	8050963	Identifier	dmprint_font_params_t		8050880	0					
ANR	8050964	ArgumentList	pcs -> memory		8050880	1					
ANR	8050965	Argument	pcs -> memory		8050880	0					
ANR	8050966	PtrMemberAccess	pcs -> memory		8050880	0					
ANR	8050967	Identifier	pcs		8050880	0					
ANR	8050968	Identifier	memory		8050880	1					
ANR	8050969	Argument	& pfs -> params		8050880	1					
ANR	8050970	UnaryOperationExpression	& pfs -> params		8050880	0					
ANR	8050971	UnaryOperator	&		8050880	0					
ANR	8050972	PtrMemberAccess	pfs -> params		8050880	1					
ANR	8050973	Identifier	pfs		8050880	0					
ANR	8050974	Identifier	params		8050880	1					
ANR	8050975	IfStatement	if ( ( int ) pfs -> selected_id >= 0 )		8050880	9					
ANR	8050976	Condition	( int ) pfs -> selected_id >= 0	472:12:15690:15715	8050880	0	True				
ANR	8050977	RelationalExpression	( int ) pfs -> selected_id >= 0		8050880	0		>=			
ANR	8050978	CastExpression	( int ) pfs -> selected_id		8050880	0					
ANR	8050979	CastTarget	int		8050880	0					
ANR	8050980	PtrMemberAccess	pfs -> selected_id		8050880	1					
ANR	8050981	Identifier	pfs		8050880	0					
ANR	8050982	Identifier	selected_id		8050880	1					
ANR	8050983	PrimaryExpression	0		8050880	1					
ANR	8050984	CompoundStatement		24:12:798:809	8050880	1					
ANR	8050985	IdentifierDeclStatement	byte id_key [ 2 ] ;	473:12:15732:15746	8050880	0	True				
ANR	8050986	IdentifierDecl	id_key [ 2 ]		8050880	0					
ANR	8050987	IdentifierDeclType	byte [ 2 ]		8050880	0					
ANR	8050988	Identifier	id_key		8050880	1					
ANR	8050989	PrimaryExpression	2		8050880	2					
ANR	8050990	IdentifierDeclStatement	void * value ;	474:12:15760:15771	8050880	1	True				
ANR	8050991	IdentifierDecl	* value		8050880	0					
ANR	8050992	IdentifierDeclType	void *		8050880	0					
ANR	8050993	Identifier	value		8050880	1					
ANR	8050994	ExpressionStatement	id_key [ 0 ] = pfs -> selected_id >> 8	476:12:15786:15819	8050880	2	True				
ANR	8050995	AssignmentExpression	id_key [ 0 ] = pfs -> selected_id >> 8		8050880	0		=			
ANR	8050996	ArrayIndexing	id_key [ 0 ]		8050880	0					
ANR	8050997	Identifier	id_key		8050880	0					
ANR	8050998	PrimaryExpression	0		8050880	1					
ANR	8050999	ShiftExpression	pfs -> selected_id >> 8		8050880	1		>>			
ANR	8051000	PtrMemberAccess	pfs -> selected_id		8050880	0					
ANR	8051001	Identifier	pfs		8050880	0					
ANR	8051002	Identifier	selected_id		8050880	1					
ANR	8051003	PrimaryExpression	8		8050880	1					
ANR	8051004	ExpressionStatement	id_key [ 1 ] = ( byte ) ( pfs -> selected_id )	477:12:15833:15870	8050880	3	True				
ANR	8051005	AssignmentExpression	id_key [ 1 ] = ( byte ) ( pfs -> selected_id )		8050880	0		=			
ANR	8051006	ArrayIndexing	id_key [ 1 ]		8050880	0					
ANR	8051007	Identifier	id_key		8050880	0					
ANR	8051008	PrimaryExpression	1		8050880	1					
ANR	8051009	CastExpression	( byte ) ( pfs -> selected_id )		8050880	1					
ANR	8051010	CastTarget	byte		8050880	0					
ANR	8051011	PtrMemberAccess	pfs -> selected_id		8050880	1					
ANR	8051012	Identifier	pfs		8050880	0					
ANR	8051013	Identifier	selected_id		8050880	1					
ANR	8051014	IfStatement	"if ( pl_dict_find ( ( pl_dict_t * ) & pcs -> soft_fonts , id_key , 2 , & value ) )"		8050880	4					
ANR	8051015	Condition	"pl_dict_find ( ( pl_dict_t * ) & pcs -> soft_fonts , id_key , 2 , & value )"	478:16:15888:15968	8050880	0	True				
ANR	8051016	CallExpression	"pl_dict_find ( ( pl_dict_t * ) & pcs -> soft_fonts , id_key , 2 , & value )"		8050880	0					
ANR	8051017	Callee	pl_dict_find		8050880	0					
ANR	8051018	Identifier	pl_dict_find		8050880	0					
ANR	8051019	ArgumentList	( pl_dict_t * ) & pcs -> soft_fonts		8050880	1					
ANR	8051020	Argument	( pl_dict_t * ) & pcs -> soft_fonts		8050880	0					
ANR	8051021	CastExpression	( pl_dict_t * ) & pcs -> soft_fonts		8050880	0					
ANR	8051022	CastTarget	pl_dict_t *		8050880	0					
ANR	8051023	UnaryOperationExpression	& pcs -> soft_fonts		8050880	1					
ANR	8051024	UnaryOperator	&		8050880	0					
ANR	8051025	PtrMemberAccess	pcs -> soft_fonts		8050880	1					
ANR	8051026	Identifier	pcs		8050880	0					
ANR	8051027	Identifier	soft_fonts		8050880	1					
ANR	8051028	Argument	id_key		8050880	1					
ANR	8051029	Identifier	id_key		8050880	0					
ANR	8051030	Argument	2		8050880	2					
ANR	8051031	PrimaryExpression	2		8050880	0					
ANR	8051032	Argument	& value		8050880	3					
ANR	8051033	UnaryOperationExpression	& value		8050880	0					
ANR	8051034	UnaryOperator	&		8050880	0					
ANR	8051035	Identifier	value		8050880	1					
ANR	8051036	CompoundStatement		29:70:1009:1009	8050880	1					
ANR	8051037	ExpressionStatement	pfs -> font = ( pl_font_t * ) value	481:16:15990:16021	8050880	0	True				
ANR	8051038	AssignmentExpression	pfs -> font = ( pl_font_t * ) value		8050880	0		=			
ANR	8051039	PtrMemberAccess	pfs -> font		8050880	0					
ANR	8051040	Identifier	pfs		8050880	0					
ANR	8051041	Identifier	font		8050880	1					
ANR	8051042	CastExpression	( pl_font_t * ) value		8050880	1					
ANR	8051043	CastTarget	pl_font_t *		8050880	0					
ANR	8051044	Identifier	value		8050880	1					
ANR	8051045	ExpressionStatement	"( void ) check_support ( pcs , pfs -> params . symbol_set , pfs -> font , & pfs -> map , true )"	482:16:16039:16151	8050880	1	True				
ANR	8051046	CastExpression	"( void ) check_support ( pcs , pfs -> params . symbol_set , pfs -> font , & pfs -> map , true )"		8050880	0					
ANR	8051047	CastTarget	void		8050880	0					
ANR	8051048	CallExpression	"check_support ( pcs , pfs -> params . symbol_set , pfs -> font , & pfs -> map , true )"		8050880	1					
ANR	8051049	Callee	check_support		8050880	0					
ANR	8051050	Identifier	check_support		8050880	0					
ANR	8051051	ArgumentList	pcs		8050880	1					
ANR	8051052	Argument	pcs		8050880	0					
ANR	8051053	Identifier	pcs		8050880	0					
ANR	8051054	Argument	pfs -> params . symbol_set		8050880	1					
ANR	8051055	MemberAccess	pfs -> params . symbol_set		8050880	0					
ANR	8051056	PtrMemberAccess	pfs -> params		8050880	0					
ANR	8051057	Identifier	pfs		8050880	0					
ANR	8051058	Identifier	params		8050880	1					
ANR	8051059	Identifier	symbol_set		8050880	1					
ANR	8051060	Argument	pfs -> font		8050880	2					
ANR	8051061	PtrMemberAccess	pfs -> font		8050880	0					
ANR	8051062	Identifier	pfs		8050880	0					
ANR	8051063	Identifier	font		8050880	1					
ANR	8051064	Argument	& pfs -> map		8050880	3					
ANR	8051065	UnaryOperationExpression	& pfs -> map		8050880	0					
ANR	8051066	UnaryOperator	&		8050880	0					
ANR	8051067	PtrMemberAccess	pfs -> map		8050880	1					
ANR	8051068	Identifier	pfs		8050880	0					
ANR	8051069	Identifier	map		8050880	1					
ANR	8051070	Argument	true		8050880	4					
ANR	8051071	Identifier	true		8050880	0					
ANR	8051072	ReturnStatement	return 0 ;	484:16:16169:16177	8050880	2	True				
ANR	8051073	PrimaryExpression	0		8050880	0					
ANR	8051074	ForStatement	for ( i = ( score_index_t ) 0 ; i < score_limit ; i ++ )		8050880	10					
ANR	8051075	ForInit	i = ( score_index_t ) 0 ;	488:13:16288:16309	8050880	0	True				
ANR	8051076	AssignmentExpression	i = ( score_index_t ) 0		8050880	0		=			
ANR	8051077	Identifier	i		8050880	0					
ANR	8051078	CastExpression	( score_index_t ) 0		8050880	1					
ANR	8051079	CastTarget	score_index_t		8050880	0					
ANR	8051080	PrimaryExpression	0		8050880	1					
ANR	8051081	Condition	i < score_limit	488:36:16311:16325	8050880	1	True				
ANR	8051082	RelationalExpression	i < score_limit		8050880	0		<			
ANR	8051083	Identifier	i		8050880	0					
ANR	8051084	Identifier	score_limit		8050880	1					
ANR	8051085	PostIncDecOperationExpression	i ++	488:53:16328:16330	8050880	2	True				
ANR	8051086	Identifier	i		8050880	0					
ANR	8051087	IncDec	++		8050880	1					
ANR	8051088	ExpressionStatement	best_match [ i ] = - 1	489:12:16345:16363	8050880	3	True				
ANR	8051089	AssignmentExpression	best_match [ i ] = - 1		8050880	0		=			
ANR	8051090	ArrayIndexing	best_match [ i ]		8050880	0					
ANR	8051091	Identifier	best_match		8050880	0					
ANR	8051092	Identifier	i		8050880	1					
ANR	8051093	UnaryOperationExpression	- 1		8050880	1					
ANR	8051094	UnaryOperator	-		8050880	0					
ANR	8051095	PrimaryExpression	1		8050880	1					
ANR	8051096	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_fonts , & dictp )"	491:8:16374:16418	8050880	11	True				
ANR	8051097	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_fonts , & dictp )"		8050880	0					
ANR	8051098	Callee	pl_dict_enum_begin		8050880	0					
ANR	8051099	Identifier	pl_dict_enum_begin		8050880	0					
ANR	8051100	ArgumentList	& pcs -> soft_fonts		8050880	1					
ANR	8051101	Argument	& pcs -> soft_fonts		8050880	0					
ANR	8051102	UnaryOperationExpression	& pcs -> soft_fonts		8050880	0					
ANR	8051103	UnaryOperator	&		8050880	0					
ANR	8051104	PtrMemberAccess	pcs -> soft_fonts		8050880	1					
ANR	8051105	Identifier	pcs		8050880	0					
ANR	8051106	Identifier	soft_fonts		8050880	1					
ANR	8051107	Argument	& dictp		8050880	1					
ANR	8051108	UnaryOperationExpression	& dictp		8050880	0					
ANR	8051109	UnaryOperator	&		8050880	0					
ANR	8051110	Identifier	dictp		8050880	1					
ANR	8051111	WhileStatement	"while ( pl_dict_enum_next ( & dictp , & key , & value ) )"		8050880	12					
ANR	8051112	Condition	"pl_dict_enum_next ( & dictp , & key , & value )"	492:15:16435:16473	8050880	0	True				
ANR	8051113	CallExpression	"pl_dict_enum_next ( & dictp , & key , & value )"		8050880	0					
ANR	8051114	Callee	pl_dict_enum_next		8050880	0					
ANR	8051115	Identifier	pl_dict_enum_next		8050880	0					
ANR	8051116	ArgumentList	& dictp		8050880	1					
ANR	8051117	Argument	& dictp		8050880	0					
ANR	8051118	UnaryOperationExpression	& dictp		8050880	0					
ANR	8051119	UnaryOperator	&		8050880	0					
ANR	8051120	Identifier	dictp		8050880	1					
ANR	8051121	Argument	& key		8050880	1					
ANR	8051122	UnaryOperationExpression	& key		8050880	0					
ANR	8051123	UnaryOperator	&		8050880	0					
ANR	8051124	Identifier	key		8050880	1					
ANR	8051125	Argument	& value		8050880	2					
ANR	8051126	UnaryOperationExpression	& value		8050880	0					
ANR	8051127	UnaryOperator	&		8050880	0					
ANR	8051128	Identifier	value		8050880	1					
ANR	8051129	CompoundStatement		44:12:1577:1596	8050880	1					
ANR	8051130	IdentifierDeclStatement	pl_font_t * fp = ( pl_font_t * ) value ;	493:12:16490:16525	8050880	0	True				
ANR	8051131	IdentifierDecl	* fp = ( pl_font_t * ) value		8050880	0					
ANR	8051132	IdentifierDeclType	pl_font_t *		8050880	0					
ANR	8051133	Identifier	fp		8050880	1					
ANR	8051134	AssignmentExpression	* fp = ( pl_font_t * ) value		8050880	2		=			
ANR	8051135	Identifier	fp		8050880	0					
ANR	8051136	CastExpression	( pl_font_t * ) value		8050880	1					
ANR	8051137	CastTarget	pl_font_t *		8050880	0					
ANR	8051138	Identifier	value		8050880	1					
ANR	8051139	IdentifierDeclStatement	match_score_t match ;	494:12:16539:16558	8050880	1	True				
ANR	8051140	IdentifierDecl	match		8050880	0					
ANR	8051141	IdentifierDeclType	match_score_t		8050880	0					
ANR	8051142	Identifier	match		8050880	1					
ANR	8051143	IfStatement	if ( ( internal_only ) && fp -> storage != pcds_internal )		8050880	2					
ANR	8051144	Condition	( internal_only ) && fp -> storage != pcds_internal	496:16:16577:16623	8050880	0	True				
ANR	8051145	AndExpression	( internal_only ) && fp -> storage != pcds_internal		8050880	0		&&			
ANR	8051146	Identifier	internal_only		8050880	0					
ANR	8051147	EqualityExpression	fp -> storage != pcds_internal		8050880	1		!=			
ANR	8051148	PtrMemberAccess	fp -> storage		8050880	0					
ANR	8051149	Identifier	fp		8050880	0					
ANR	8051150	Identifier	storage		8050880	1					
ANR	8051151	Identifier	pcds_internal		8050880	1					
ANR	8051152	ContinueStatement	continue ;	497:16:16642:16650	8050880	1	True				
ANR	8051153	ExpressionStatement	"score_match ( pcs , pfs , fp , & mapp , match )"	499:12:16665:16704	8050880	3	True				
ANR	8051154	CallExpression	"score_match ( pcs , pfs , fp , & mapp , match )"		8050880	0					
ANR	8051155	Callee	score_match		8050880	0					
ANR	8051156	Identifier	score_match		8050880	0					
ANR	8051157	ArgumentList	pcs		8050880	1					
ANR	8051158	Argument	pcs		8050880	0					
ANR	8051159	Identifier	pcs		8050880	0					
ANR	8051160	Argument	pfs		8050880	1					
ANR	8051161	Identifier	pfs		8050880	0					
ANR	8051162	Argument	fp		8050880	2					
ANR	8051163	Identifier	fp		8050880	0					
ANR	8051164	Argument	& mapp		8050880	3					
ANR	8051165	UnaryOperationExpression	& mapp		8050880	0					
ANR	8051166	UnaryOperator	&		8050880	0					
ANR	8051167	Identifier	mapp		8050880	1					
ANR	8051168	Argument	match		8050880	4					
ANR	8051169	Identifier	match		8050880	0					
ANR	8051170	IfStatement	if ( gs_debug_c ( '=' ) )		8050880	4					
ANR	8051171	Condition	gs_debug_c ( '=' )	501:16:16735:16749	8050880	0	True				
ANR	8051172	CallExpression	gs_debug_c ( '=' )		8050880	0					
ANR	8051173	Callee	gs_debug_c		8050880	0					
ANR	8051174	Identifier	gs_debug_c		8050880	0					
ANR	8051175	ArgumentList	'='		8050880	1					
ANR	8051176	Argument	'='		8050880	0					
ANR	8051177	PrimaryExpression	'='		8050880	0					
ANR	8051178	CompoundStatement		51:33:1790:1790	8050880	1					
ANR	8051179	IfStatement	if ( best_match [ 0 ] != - 1 )		8050880	0					
ANR	8051180	Condition	best_match [ 0 ] != - 1	502:20:16774:16792	8050880	0	True				
ANR	8051181	EqualityExpression	best_match [ 0 ] != - 1		8050880	0		!=			
ANR	8051182	ArrayIndexing	best_match [ 0 ]		8050880	0					
ANR	8051183	Identifier	best_match		8050880	0					
ANR	8051184	PrimaryExpression	0		8050880	1					
ANR	8051185	UnaryOperationExpression	- 1		8050880	1					
ANR	8051186	UnaryOperator	-		8050880	0					
ANR	8051187	PrimaryExpression	1		8050880	1					
ANR	8051188	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""best"" , best_font , mapp , best_match )"	503:20:16842:16955	8050880	1	True				
ANR	8051189	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""best"" , best_font , mapp , best_match )"		8050880	0					
ANR	8051190	Callee	dmprintf_font_scoring		8050880	0					
ANR	8051191	Identifier	dmprintf_font_scoring		8050880	0					
ANR	8051192	ArgumentList	pcs -> memory		8050880	1					
ANR	8051193	Argument	pcs -> memory		8050880	0					
ANR	8051194	PtrMemberAccess	pcs -> memory		8050880	0					
ANR	8051195	Identifier	pcs		8050880	0					
ANR	8051196	Identifier	memory		8050880	1					
ANR	8051197	Argument	"""best"""		8050880	1					
ANR	8051198	PrimaryExpression	"""best"""		8050880	0					
ANR	8051199	Argument	best_font		8050880	2					
ANR	8051200	Identifier	best_font		8050880	0					
ANR	8051201	Argument	mapp		8050880	3					
ANR	8051202	Identifier	mapp		8050880	0					
ANR	8051203	Argument	best_match		8050880	4					
ANR	8051204	Identifier	best_match		8050880	0					
ANR	8051205	ForStatement	for ( i = ( score_index_t ) 0 ; i < score_limit ; i ++ )		8050880	5					
ANR	8051206	ForInit	i = ( score_index_t ) 0 ;	507:17:16995:17016	8050880	0	True				
ANR	8051207	AssignmentExpression	i = ( score_index_t ) 0		8050880	0		=			
ANR	8051208	Identifier	i		8050880	0					
ANR	8051209	CastExpression	( score_index_t ) 0		8050880	1					
ANR	8051210	CastTarget	score_index_t		8050880	0					
ANR	8051211	PrimaryExpression	0		8050880	1					
ANR	8051212	Condition	i < score_limit	507:40:17018:17032	8050880	1	True				
ANR	8051213	RelationalExpression	i < score_limit		8050880	0		<			
ANR	8051214	Identifier	i		8050880	0					
ANR	8051215	Identifier	score_limit		8050880	1					
ANR	8051216	PostIncDecOperationExpression	i ++	507:57:17035:17037	8050880	2	True				
ANR	8051217	Identifier	i		8050880	0					
ANR	8051218	IncDec	++		8050880	1					
ANR	8051219	IfStatement	if ( match [ i ] != best_match [ i ] )		8050880	3					
ANR	8051220	Condition	match [ i ] != best_match [ i ]	508:20:17060:17084	8050880	0	True				
ANR	8051221	EqualityExpression	match [ i ] != best_match [ i ]		8050880	0		!=			
ANR	8051222	ArrayIndexing	match [ i ]		8050880	0					
ANR	8051223	Identifier	match		8050880	0					
ANR	8051224	Identifier	i		8050880	1					
ANR	8051225	ArrayIndexing	best_match [ i ]		8050880	1					
ANR	8051226	Identifier	best_match		8050880	0					
ANR	8051227	Identifier	i		8050880	1					
ANR	8051228	CompoundStatement		58:47:2125:2125	8050880	1					
ANR	8051229	IfStatement	if ( match [ i ] > best_match [ i ] )		8050880	0					
ANR	8051230	Condition	match [ i ] > best_match [ i ]	509:24:17113:17136	8050880	0	True				
ANR	8051231	RelationalExpression	match [ i ] > best_match [ i ]		8050880	0		>			
ANR	8051232	ArrayIndexing	match [ i ]		8050880	0					
ANR	8051233	Identifier	match		8050880	0					
ANR	8051234	Identifier	i		8050880	1					
ANR	8051235	ArrayIndexing	best_match [ i ]		8050880	1					
ANR	8051236	Identifier	best_match		8050880	0					
ANR	8051237	Identifier	i		8050880	1					
ANR	8051238	CompoundStatement		59:50:2177:2177	8050880	1					
ANR	8051239	ExpressionStatement	best_font = fp	510:24:17165:17179	8050880	0	True				
ANR	8051240	AssignmentExpression	best_font = fp		8050880	0		=			
ANR	8051241	Identifier	best_font		8050880	0					
ANR	8051242	Identifier	fp		8050880	1					
ANR	8051243	ExpressionStatement	best_map = mapp	511:24:17205:17220	8050880	1	True				
ANR	8051244	AssignmentExpression	best_map = mapp		8050880	0		=			
ANR	8051245	Identifier	best_map		8050880	0					
ANR	8051246	Identifier	mapp		8050880	1					
ANR	8051247	ExpressionStatement	"memcpy ( ( void * ) best_match , ( void * ) match , sizeof ( match ) )"	512:24:17246:17333	8050880	2	True				
ANR	8051248	CallExpression	"memcpy ( ( void * ) best_match , ( void * ) match , sizeof ( match ) )"		8050880	0					
ANR	8051249	Callee	memcpy		8050880	0					
ANR	8051250	Identifier	memcpy		8050880	0					
ANR	8051251	ArgumentList	( void * ) best_match		8050880	1					
ANR	8051252	Argument	( void * ) best_match		8050880	0					
ANR	8051253	CastExpression	( void * ) best_match		8050880	0					
ANR	8051254	CastTarget	void *		8050880	0					
ANR	8051255	Identifier	best_match		8050880	1					
ANR	8051256	Argument	( void * ) match		8050880	1					
ANR	8051257	CastExpression	( void * ) match		8050880	0					
ANR	8051258	CastTarget	void *		8050880	0					
ANR	8051259	Identifier	match		8050880	1					
ANR	8051260	Argument	sizeof ( match )		8050880	2					
ANR	8051261	SizeofExpression	sizeof ( match )		8050880	0					
ANR	8051262	Sizeof	sizeof		8050880	0					
ANR	8051263	SizeofOperand	match		8050880	1					
ANR	8051264	IfStatement	if ( gs_debug_c ( '=' ) )		8050880	3					
ANR	8051265	Condition	gs_debug_c ( '=' )	515:28:17376:17390	8050880	0	True				
ANR	8051266	CallExpression	gs_debug_c ( '=' )		8050880	0					
ANR	8051267	Callee	gs_debug_c		8050880	0					
ANR	8051268	Identifier	gs_debug_c		8050880	0					
ANR	8051269	ArgumentList	'='		8050880	1					
ANR	8051270	Argument	'='		8050880	0					
ANR	8051271	PrimaryExpression	'='		8050880	0					
ANR	8051272	CompoundStatement		65:45:2431:2431	8050880	1					
ANR	8051273	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""usurper"" , fp , mapp , best_match )"	516:28:17423:17540	8050880	0	True				
ANR	8051274	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""usurper"" , fp , mapp , best_match )"		8050880	0					
ANR	8051275	Callee	dmprintf_font_scoring		8050880	0					
ANR	8051276	Identifier	dmprintf_font_scoring		8050880	0					
ANR	8051277	ArgumentList	pcs -> memory		8050880	1					
ANR	8051278	Argument	pcs -> memory		8050880	0					
ANR	8051279	PtrMemberAccess	pcs -> memory		8050880	0					
ANR	8051280	Identifier	pcs		8050880	0					
ANR	8051281	Identifier	memory		8050880	1					
ANR	8051282	Argument	"""usurper"""		8050880	1					
ANR	8051283	PrimaryExpression	"""usurper"""		8050880	0					
ANR	8051284	Argument	fp		8050880	2					
ANR	8051285	Identifier	fp		8050880	0					
ANR	8051286	Argument	mapp		8050880	3					
ANR	8051287	Identifier	mapp		8050880	0					
ANR	8051288	Argument	best_match		8050880	4					
ANR	8051289	Identifier	best_match		8050880	0					
ANR	8051290	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""   better %s***)\\n"" , score_name [ i ] )"	518:28:17570:17667	8050880	1	True				
ANR	8051291	CallExpression	"dmprintf1 ( pcs -> memory , ""   better %s***)\\n"" , score_name [ i ] )"		8050880	0					
ANR	8051292	Callee	dmprintf1		8050880	0					
ANR	8051293	Identifier	dmprintf1		8050880	0					
ANR	8051294	ArgumentList	pcs -> memory		8050880	1					
ANR	8051295	Argument	pcs -> memory		8050880	0					
ANR	8051296	PtrMemberAccess	pcs -> memory		8050880	0					
ANR	8051297	Identifier	pcs		8050880	0					
ANR	8051298	Identifier	memory		8050880	1					
ANR	8051299	Argument	"""   better %s***)\\n"""		8050880	1					
ANR	8051300	PrimaryExpression	"""   better %s***)\\n"""		8050880	0					
ANR	8051301	Argument	score_name [ i ]		8050880	2					
ANR	8051302	ArrayIndexing	score_name [ i ]		8050880	0					
ANR	8051303	Identifier	score_name		8050880	0					
ANR	8051304	Identifier	i		8050880	1					
ANR	8051305	BreakStatement	break ;	525:20:17746:17751	8050880	1	True				
ANR	8051306	IfStatement	if ( best_font == 0 )		8050880	13					
ANR	8051307	Condition	best_font == 0	528:12:17793:17806	8050880	0	True				
ANR	8051308	EqualityExpression	best_font == 0		8050880	0		==			
ANR	8051309	Identifier	best_font		8050880	0					
ANR	8051310	PrimaryExpression	0		8050880	1					
ANR	8051311	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	529:12:17821:17857	8050880	1	True				
ANR	8051312	CallExpression	gs_throw_code ( gs_error_Fatal )		8050880	0					
ANR	8051313	Callee	gs_throw_code		8050880	0					
ANR	8051314	Identifier	gs_throw_code		8050880	0					
ANR	8051315	ArgumentList	gs_error_Fatal		8050880	1					
ANR	8051316	Argument	gs_error_Fatal		8050880	0					
ANR	8051317	Identifier	gs_error_Fatal		8050880	0					
ANR	8051318	IfStatement	if ( gs_debug_c ( '=' ) )		8050880	14					
ANR	8051319	Condition	gs_debug_c ( '=' )	531:12:17884:17898	8050880	0	True				
ANR	8051320	CallExpression	gs_debug_c ( '=' )		8050880	0					
ANR	8051321	Callee	gs_debug_c		8050880	0					
ANR	8051322	Identifier	gs_debug_c		8050880	0					
ANR	8051323	ArgumentList	'='		8050880	1					
ANR	8051324	Argument	'='		8050880	0					
ANR	8051325	PrimaryExpression	'='		8050880	0					
ANR	8051326	CompoundStatement		81:29:2939:2939	8050880	1					
ANR	8051327	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""champion"" , best_font , mapp , best_match )"	532:12:17915:18024	8050880	0	True				
ANR	8051328	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""champion"" , best_font , mapp , best_match )"		8050880	0					
ANR	8051329	Callee	dmprintf_font_scoring		8050880	0					
ANR	8051330	Identifier	dmprintf_font_scoring		8050880	0					
ANR	8051331	ArgumentList	pcs -> memory		8050880	1					
ANR	8051332	Argument	pcs -> memory		8050880	0					
ANR	8051333	PtrMemberAccess	pcs -> memory		8050880	0					
ANR	8051334	Identifier	pcs		8050880	0					
ANR	8051335	Identifier	memory		8050880	1					
ANR	8051336	Argument	"""champion"""		8050880	1					
ANR	8051337	PrimaryExpression	"""champion"""		8050880	0					
ANR	8051338	Argument	best_font		8050880	2					
ANR	8051339	Identifier	best_font		8050880	0					
ANR	8051340	Argument	mapp		8050880	3					
ANR	8051341	Identifier	mapp		8050880	0					
ANR	8051342	Argument	best_match		8050880	4					
ANR	8051343	Identifier	best_match		8050880	0					
ANR	8051344	ExpressionStatement	pfs -> font = best_font	537:8:18052:18073	8050880	15	True				
ANR	8051345	AssignmentExpression	pfs -> font = best_font		8050880	0		=			
ANR	8051346	PtrMemberAccess	pfs -> font		8050880	0					
ANR	8051347	Identifier	pfs		8050880	0					
ANR	8051348	Identifier	font		8050880	1					
ANR	8051349	Identifier	best_font		8050880	1					
ANR	8051350	ExpressionStatement	pfs -> map = best_map	538:8:18083:18102	8050880	16	True				
ANR	8051351	AssignmentExpression	pfs -> map = best_map		8050880	0		=			
ANR	8051352	PtrMemberAccess	pfs -> map		8050880	0					
ANR	8051353	Identifier	pfs		8050880	0					
ANR	8051354	Identifier	map		8050880	1					
ANR	8051355	Identifier	best_map		8050880	1					
ANR	8051356	ExpressionStatement	pfs -> selected_id = ( uint ) - 1	539:8:18112:18141	8050880	17	True				
ANR	8051357	AssignmentExpression	pfs -> selected_id = ( uint ) - 1		8050880	0		=			
ANR	8051358	PtrMemberAccess	pfs -> selected_id		8050880	0					
ANR	8051359	Identifier	pfs		8050880	0					
ANR	8051360	Identifier	selected_id		8050880	1					
ANR	8051361	CastExpression	( uint ) - 1		8050880	1					
ANR	8051362	CastTarget	uint		8050880	0					
ANR	8051363	UnaryOperationExpression	- 1		8050880	1					
ANR	8051364	UnaryOperator	-		8050880	0					
ANR	8051365	PrimaryExpression	1		8050880	1					
ANR	8051366	ReturnStatement	return 0 ;	541:4:18153:18161	8050880	1	True				
ANR	8051367	PrimaryExpression	0		8050880	0					
ANR	8051368	ReturnType	int		8050880	1					
ANR	8051369	Identifier	pcl_reselect_font		8050880	2					
ANR	8051370	ParameterList	"pcl_font_selection_t * pfs , const pcl_state_t * pcs , bool internal_only"		8050880	3					
ANR	8051371	Parameter	pcl_font_selection_t * pfs	449:18:14870:14895	8050880	0	True				
ANR	8051372	ParameterType	pcl_font_selection_t *		8050880	0					
ANR	8051373	Identifier	pfs		8050880	1					
ANR	8051374	Parameter	const pcl_state_t * pcs	449:46:14898:14920	8050880	1	True				
ANR	8051375	ParameterType	const pcl_state_t *		8050880	0					
ANR	8051376	Identifier	pcs		8050880	1					
ANR	8051377	Parameter	bool internal_only	450:18:14941:14958	8050880	2	True				
ANR	8051378	ParameterType	bool		8050880	0					
ANR	8051379	Identifier	internal_only		8050880	1					
ANR	8051380	CFGEntryNode	ENTRY		8050880		True				
ANR	8051381	CFGExitNode	EXIT		8050880		True				
ANR	8051382	Symbol	& mapp		8050880						
ANR	8051383	Symbol	* match		8050880						
ANR	8051384	Symbol	pfs -> font -> pfont		8050880						
ANR	8051385	Symbol	& key		8050880						
ANR	8051386	Symbol	& value		8050880						
ANR	8051387	Symbol	dictp		8050880						
ANR	8051388	Symbol	* pcs		8050880						
ANR	8051389	Symbol	fp		8050880						
ANR	8051390	Symbol	best_match		8050880						
ANR	8051391	Symbol	* * pfs		8050880						
ANR	8051392	Symbol	gs_throw_code		8050880						
ANR	8051393	Symbol	* fp		8050880						
ANR	8051394	Symbol	best_map		8050880						
ANR	8051395	Symbol	pfs -> params . symbol_set		8050880						
ANR	8051396	Symbol	pfs -> selected_id		8050880						
ANR	8051397	Symbol	& pcs -> soft_fonts		8050880						
ANR	8051398	Symbol	pfs -> font		8050880						
ANR	8051399	Symbol	best_font		8050880						
ANR	8051400	Symbol	gs_debug_c		8050880						
ANR	8051401	Symbol	pcs -> memory		8050880						
ANR	8051402	Symbol	value		8050880						
ANR	8051403	Symbol	key		8050880						
ANR	8051404	Symbol	gs_error_Fatal		8050880						
ANR	8051405	Symbol	pcs		8050880						
ANR	8051406	Symbol	id_key		8050880						
ANR	8051407	Symbol	* id_key		8050880						
ANR	8051408	Symbol	score_limit		8050880						
ANR	8051409	Symbol	pcds_internal		8050880						
ANR	8051410	Symbol	* pfs -> font		8050880						
ANR	8051411	Symbol	* pfs		8050880						
ANR	8051412	Symbol	mapp		8050880						
ANR	8051413	Symbol	& pfs -> map		8050880						
ANR	8051414	Symbol	match		8050880						
ANR	8051415	Symbol	pfs -> map		8050880						
ANR	8051416	Symbol	i		8050880						
ANR	8051417	Symbol	& pfs -> params		8050880						
ANR	8051418	Symbol	pl_dict_find		8050880						
ANR	8051419	Symbol	pl_dict_enum_next		8050880						
ANR	8051420	Symbol	* score_name		8050880						
ANR	8051421	Symbol	internal_only		8050880						
ANR	8051422	Symbol	* i		8050880						
ANR	8051423	Symbol	pfs -> params		8050880						
ANR	8051424	Symbol	fp -> storage		8050880						
ANR	8051425	Symbol	true		8050880						
ANR	8051426	Symbol	& dictp		8050880						
ANR	8051427	Symbol	pfs		8050880						
ANR	8051428	Symbol	* best_match		8050880						
ANR	8051429	Symbol	score_name		8050880						
ANR	8051430	Function	pcl_set_id_parameters	545:0:18214:19536							
ANR	8051431	FunctionDef	"pcl_set_id_parameters (const pcl_state_t * pcs , pcl_font_selection_t * pfs , pl_font_t * fp , uint id)"		8051430	0					
ANR	8051432	CompoundStatement		548:0:18341:19536	8051430	0					
ANR	8051433	ExpressionStatement	pfs -> font = fp	551:4:18480:18494	8051430	0	True				
ANR	8051434	AssignmentExpression	pfs -> font = fp		8051430	0		=			
ANR	8051435	PtrMemberAccess	pfs -> font		8051430	0					
ANR	8051436	Identifier	pfs		8051430	0					
ANR	8051437	Identifier	font		8051430	1					
ANR	8051438	Identifier	fp		8051430	1					
ANR	8051439	ExpressionStatement	pfs -> selected_id = id	552:4:18500:18521	8051430	1	True				
ANR	8051440	AssignmentExpression	pfs -> selected_id = id		8051430	0		=			
ANR	8051441	PtrMemberAccess	pfs -> selected_id		8051430	0					
ANR	8051442	Identifier	pfs		8051430	0					
ANR	8051443	Identifier	selected_id		8051430	1					
ANR	8051444	Identifier	id		8051430	1					
ANR	8051445	ExpressionStatement	pfs -> map = 0	553:4:18527:18539	8051430	2	True				
ANR	8051446	AssignmentExpression	pfs -> map = 0		8051430	0		=			
ANR	8051447	PtrMemberAccess	pfs -> map		8051430	0					
ANR	8051448	Identifier	pfs		8051430	0					
ANR	8051449	Identifier	map		8051430	1					
ANR	8051450	PrimaryExpression	0		8051430	1					
ANR	8051451	IfStatement	if ( pl_font_is_bound ( fp ) )		8051430	3					
ANR	8051452	Condition	pl_font_is_bound ( fp )	554:8:18549:18568	8051430	0	True				
ANR	8051453	CallExpression	pl_font_is_bound ( fp )		8051430	0					
ANR	8051454	Callee	pl_font_is_bound		8051430	0					
ANR	8051455	Identifier	pl_font_is_bound		8051430	0					
ANR	8051456	ArgumentList	fp		8051430	1					
ANR	8051457	Argument	fp		8051430	0					
ANR	8051458	Identifier	fp		8051430	0					
ANR	8051459	ExpressionStatement	pfs -> params . symbol_set = fp -> params . symbol_set	555:8:18579:18625	8051430	1	True				
ANR	8051460	AssignmentExpression	pfs -> params . symbol_set = fp -> params . symbol_set		8051430	0		=			
ANR	8051461	MemberAccess	pfs -> params . symbol_set		8051430	0					
ANR	8051462	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051463	Identifier	pfs		8051430	0					
ANR	8051464	Identifier	params		8051430	1					
ANR	8051465	Identifier	symbol_set		8051430	1					
ANR	8051466	MemberAccess	fp -> params . symbol_set		8051430	1					
ANR	8051467	PtrMemberAccess	fp -> params		8051430	0					
ANR	8051468	Identifier	fp		8051430	0					
ANR	8051469	Identifier	params		8051430	1					
ANR	8051470	Identifier	symbol_set		8051430	1					
ANR	8051471	IfStatement	"if ( check_support ( pcs , pfs -> params . symbol_set , fp , & pfs -> map , true ) )"		8051430	4					
ANR	8051472	Condition	"check_support ( pcs , pfs -> params . symbol_set , fp , & pfs -> map , true )"	557:8:18636:18698	8051430	0	True				
ANR	8051473	CallExpression	"check_support ( pcs , pfs -> params . symbol_set , fp , & pfs -> map , true )"		8051430	0					
ANR	8051474	Callee	check_support		8051430	0					
ANR	8051475	Identifier	check_support		8051430	0					
ANR	8051476	ArgumentList	pcs		8051430	1					
ANR	8051477	Argument	pcs		8051430	0					
ANR	8051478	Identifier	pcs		8051430	0					
ANR	8051479	Argument	pfs -> params . symbol_set		8051430	1					
ANR	8051480	MemberAccess	pfs -> params . symbol_set		8051430	0					
ANR	8051481	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051482	Identifier	pfs		8051430	0					
ANR	8051483	Identifier	params		8051430	1					
ANR	8051484	Identifier	symbol_set		8051430	1					
ANR	8051485	Argument	fp		8051430	2					
ANR	8051486	Identifier	fp		8051430	0					
ANR	8051487	Argument	& pfs -> map		8051430	3					
ANR	8051488	UnaryOperationExpression	& pfs -> map		8051430	0					
ANR	8051489	UnaryOperator	&		8051430	0					
ANR	8051490	PtrMemberAccess	pfs -> map		8051430	1					
ANR	8051491	Identifier	pfs		8051430	0					
ANR	8051492	Identifier	map		8051430	1					
ANR	8051493	Argument	true		8051430	4					
ANR	8051494	Identifier	true		8051430	0					
ANR	8051495	ExpressionStatement	DO_NOTHING	558:8:18709:18719	8051430	1	True				
ANR	8051496	Identifier	DO_NOTHING		8051430	0					
ANR	8051497	ElseStatement	else		8051430	0					
ANR	8051498	IfStatement	"if ( check_support ( pcs , pcs -> default_symbol_set_value , fp , & pfs -> map , true ) )"		8051430	0					
ANR	8051499	Condition	"check_support ( pcs , pcs -> default_symbol_set_value , fp , & pfs -> map , true )"	559:13:18734:18830	8051430	0	True				
ANR	8051500	CallExpression	"check_support ( pcs , pcs -> default_symbol_set_value , fp , & pfs -> map , true )"		8051430	0					
ANR	8051501	Callee	check_support		8051430	0					
ANR	8051502	Identifier	check_support		8051430	0					
ANR	8051503	ArgumentList	pcs		8051430	1					
ANR	8051504	Argument	pcs		8051430	0					
ANR	8051505	Identifier	pcs		8051430	0					
ANR	8051506	Argument	pcs -> default_symbol_set_value		8051430	1					
ANR	8051507	PtrMemberAccess	pcs -> default_symbol_set_value		8051430	0					
ANR	8051508	Identifier	pcs		8051430	0					
ANR	8051509	Identifier	default_symbol_set_value		8051430	1					
ANR	8051510	Argument	fp		8051430	2					
ANR	8051511	Identifier	fp		8051430	0					
ANR	8051512	Argument	& pfs -> map		8051430	3					
ANR	8051513	UnaryOperationExpression	& pfs -> map		8051430	0					
ANR	8051514	UnaryOperator	&		8051430	0					
ANR	8051515	PtrMemberAccess	pfs -> map		8051430	1					
ANR	8051516	Identifier	pfs		8051430	0					
ANR	8051517	Identifier	map		8051430	1					
ANR	8051518	Argument	true		8051430	4					
ANR	8051519	Identifier	true		8051430	0					
ANR	8051520	ExpressionStatement	DO_NOTHING	562:8:18850:18860	8051430	1	True				
ANR	8051521	Identifier	DO_NOTHING		8051430	0					
ANR	8051522	ElseStatement	else		8051430	0					
ANR	8051523	CompoundStatement		16:9:529:529	8051430	0					
ANR	8051524	ExpressionStatement	pfs -> params . proportional_spacing = fp -> params . proportional_spacing	568:4:19085:19151	8051430	5	True				
ANR	8051525	AssignmentExpression	pfs -> params . proportional_spacing = fp -> params . proportional_spacing		8051430	0		=			
ANR	8051526	MemberAccess	pfs -> params . proportional_spacing		8051430	0					
ANR	8051527	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051528	Identifier	pfs		8051430	0					
ANR	8051529	Identifier	params		8051430	1					
ANR	8051530	Identifier	proportional_spacing		8051430	1					
ANR	8051531	MemberAccess	fp -> params . proportional_spacing		8051430	1					
ANR	8051532	PtrMemberAccess	fp -> params		8051430	0					
ANR	8051533	Identifier	fp		8051430	0					
ANR	8051534	Identifier	params		8051430	1					
ANR	8051535	Identifier	proportional_spacing		8051430	1					
ANR	8051536	IfStatement	if ( ! pfs -> params . proportional_spacing && ! pl_font_is_scalable ( fp ) )		8051430	6					
ANR	8051537	Condition	! pfs -> params . proportional_spacing && ! pl_font_is_scalable ( fp )	569:8:19161:19221	8051430	0	True				
ANR	8051538	AndExpression	! pfs -> params . proportional_spacing && ! pl_font_is_scalable ( fp )		8051430	0		&&			
ANR	8051539	UnaryOperationExpression	! pfs -> params . proportional_spacing		8051430	0					
ANR	8051540	UnaryOperator	!		8051430	0					
ANR	8051541	MemberAccess	pfs -> params . proportional_spacing		8051430	1					
ANR	8051542	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051543	Identifier	pfs		8051430	0					
ANR	8051544	Identifier	params		8051430	1					
ANR	8051545	Identifier	proportional_spacing		8051430	1					
ANR	8051546	UnaryOperationExpression	! pl_font_is_scalable ( fp )		8051430	1					
ANR	8051547	UnaryOperator	!		8051430	0					
ANR	8051548	CallExpression	pl_font_is_scalable ( fp )		8051430	1					
ANR	8051549	Callee	pl_font_is_scalable		8051430	0					
ANR	8051550	Identifier	pl_font_is_scalable		8051430	0					
ANR	8051551	ArgumentList	fp		8051430	1					
ANR	8051552	Argument	fp		8051430	0					
ANR	8051553	Identifier	fp		8051430	0					
ANR	8051554	ExpressionStatement	pfs -> params . pitch = fp -> params . pitch	570:8:19232:19268	8051430	1	True				
ANR	8051555	AssignmentExpression	pfs -> params . pitch = fp -> params . pitch		8051430	0		=			
ANR	8051556	MemberAccess	pfs -> params . pitch		8051430	0					
ANR	8051557	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051558	Identifier	pfs		8051430	0					
ANR	8051559	Identifier	params		8051430	1					
ANR	8051560	Identifier	pitch		8051430	1					
ANR	8051561	MemberAccess	fp -> params . pitch		8051430	1					
ANR	8051562	PtrMemberAccess	fp -> params		8051430	0					
ANR	8051563	Identifier	fp		8051430	0					
ANR	8051564	Identifier	params		8051430	1					
ANR	8051565	Identifier	pitch		8051430	1					
ANR	8051566	IfStatement	if ( ! pl_font_is_scalable ( fp ) )		8051430	7					
ANR	8051567	Condition	! pl_font_is_scalable ( fp )	571:8:19278:19301	8051430	0	True				
ANR	8051568	UnaryOperationExpression	! pl_font_is_scalable ( fp )		8051430	0					
ANR	8051569	UnaryOperator	!		8051430	0					
ANR	8051570	CallExpression	pl_font_is_scalable ( fp )		8051430	1					
ANR	8051571	Callee	pl_font_is_scalable		8051430	0					
ANR	8051572	Identifier	pl_font_is_scalable		8051430	0					
ANR	8051573	ArgumentList	fp		8051430	1					
ANR	8051574	Argument	fp		8051430	0					
ANR	8051575	Identifier	fp		8051430	0					
ANR	8051576	ExpressionStatement	pfs -> params . height_4ths = fp -> params . height_4ths	572:8:19312:19360	8051430	1	True				
ANR	8051577	AssignmentExpression	pfs -> params . height_4ths = fp -> params . height_4ths		8051430	0		=			
ANR	8051578	MemberAccess	pfs -> params . height_4ths		8051430	0					
ANR	8051579	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051580	Identifier	pfs		8051430	0					
ANR	8051581	Identifier	params		8051430	1					
ANR	8051582	Identifier	height_4ths		8051430	1					
ANR	8051583	MemberAccess	fp -> params . height_4ths		8051430	1					
ANR	8051584	PtrMemberAccess	fp -> params		8051430	0					
ANR	8051585	Identifier	fp		8051430	0					
ANR	8051586	Identifier	params		8051430	1					
ANR	8051587	Identifier	height_4ths		8051430	1					
ANR	8051588	ExpressionStatement	pfs -> params . style = fp -> params . style	573:4:19366:19402	8051430	8	True				
ANR	8051589	AssignmentExpression	pfs -> params . style = fp -> params . style		8051430	0		=			
ANR	8051590	MemberAccess	pfs -> params . style		8051430	0					
ANR	8051591	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051592	Identifier	pfs		8051430	0					
ANR	8051593	Identifier	params		8051430	1					
ANR	8051594	Identifier	style		8051430	1					
ANR	8051595	MemberAccess	fp -> params . style		8051430	1					
ANR	8051596	PtrMemberAccess	fp -> params		8051430	0					
ANR	8051597	Identifier	fp		8051430	0					
ANR	8051598	Identifier	params		8051430	1					
ANR	8051599	Identifier	style		8051430	1					
ANR	8051600	ExpressionStatement	pfs -> params . stroke_weight = fp -> params . stroke_weight	574:4:19408:19460	8051430	9	True				
ANR	8051601	AssignmentExpression	pfs -> params . stroke_weight = fp -> params . stroke_weight		8051430	0		=			
ANR	8051602	MemberAccess	pfs -> params . stroke_weight		8051430	0					
ANR	8051603	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051604	Identifier	pfs		8051430	0					
ANR	8051605	Identifier	params		8051430	1					
ANR	8051606	Identifier	stroke_weight		8051430	1					
ANR	8051607	MemberAccess	fp -> params . stroke_weight		8051430	1					
ANR	8051608	PtrMemberAccess	fp -> params		8051430	0					
ANR	8051609	Identifier	fp		8051430	0					
ANR	8051610	Identifier	params		8051430	1					
ANR	8051611	Identifier	stroke_weight		8051430	1					
ANR	8051612	ExpressionStatement	pfs -> params . typeface_family = fp -> params . typeface_family	575:4:19466:19522	8051430	10	True				
ANR	8051613	AssignmentExpression	pfs -> params . typeface_family = fp -> params . typeface_family		8051430	0		=			
ANR	8051614	MemberAccess	pfs -> params . typeface_family		8051430	0					
ANR	8051615	PtrMemberAccess	pfs -> params		8051430	0					
ANR	8051616	Identifier	pfs		8051430	0					
ANR	8051617	Identifier	params		8051430	1					
ANR	8051618	Identifier	typeface_family		8051430	1					
ANR	8051619	MemberAccess	fp -> params . typeface_family		8051430	1					
ANR	8051620	PtrMemberAccess	fp -> params		8051430	0					
ANR	8051621	Identifier	fp		8051430	0					
ANR	8051622	Identifier	params		8051430	1					
ANR	8051623	Identifier	typeface_family		8051430	1					
ANR	8051624	ReturnStatement	return ;	576:4:19528:19534	8051430	11	True				
ANR	8051625	ReturnType	void		8051430	1					
ANR	8051626	Identifier	pcl_set_id_parameters		8051430	2					
ANR	8051627	ParameterList	"const pcl_state_t * pcs , pcl_font_selection_t * pfs , pl_font_t * fp , uint id"		8051430	3					
ANR	8051628	Parameter	const pcl_state_t * pcs	546:22:18241:18263	8051430	0	True				
ANR	8051629	ParameterType	const pcl_state_t *		8051430	0					
ANR	8051630	Identifier	pcs		8051430	1					
ANR	8051631	Parameter	pcl_font_selection_t * pfs	547:22:18288:18313	8051430	1	True				
ANR	8051632	ParameterType	pcl_font_selection_t *		8051430	0					
ANR	8051633	Identifier	pfs		8051430	1					
ANR	8051634	Parameter	pl_font_t * fp	547:50:18316:18329	8051430	2	True				
ANR	8051635	ParameterType	pl_font_t *		8051430	0					
ANR	8051636	Identifier	fp		8051430	1					
ANR	8051637	Parameter	uint id	547:66:18332:18338	8051430	3	True				
ANR	8051638	ParameterType	uint		8051430	0					
ANR	8051639	Identifier	id		8051430	1					
ANR	8051640	CFGEntryNode	ENTRY		8051430		True				
ANR	8051641	CFGExitNode	EXIT		8051430		True				
ANR	8051642	Symbol	pcs -> default_symbol_set_value		8051430						
ANR	8051643	Symbol	pl_font_is_scalable		8051430						
ANR	8051644	Symbol	fp -> params . height_4ths		8051430						
ANR	8051645	Symbol	fp		8051430						
ANR	8051646	Symbol	* pcs		8051430						
ANR	8051647	Symbol	check_support		8051430						
ANR	8051648	Symbol	fp -> params . proportional_spacing		8051430						
ANR	8051649	Symbol	pl_font_is_bound		8051430						
ANR	8051650	Symbol	pfs -> params . proportional_spacing		8051430						
ANR	8051651	Symbol	fp -> params . stroke_weight		8051430						
ANR	8051652	Symbol	fp -> params . typeface_family		8051430						
ANR	8051653	Symbol	* fp		8051430						
ANR	8051654	Symbol	pfs -> params . symbol_set		8051430						
ANR	8051655	Symbol	pfs -> selected_id		8051430						
ANR	8051656	Symbol	pfs -> font		8051430						
ANR	8051657	Symbol	fp -> params . symbol_set		8051430						
ANR	8051658	Symbol	pfs -> params . pitch		8051430						
ANR	8051659	Symbol	id		8051430						
ANR	8051660	Symbol	pfs -> params . height_4ths		8051430						
ANR	8051661	Symbol	pfs -> params . typeface_family		8051430						
ANR	8051662	Symbol	fp -> params . style		8051430						
ANR	8051663	Symbol	pcs		8051430						
ANR	8051664	Symbol	fp -> params . pitch		8051430						
ANR	8051665	Symbol	* pfs		8051430						
ANR	8051666	Symbol	& pfs -> map		8051430						
ANR	8051667	Symbol	pfs -> map		8051430						
ANR	8051668	Symbol	pfs -> params		8051430						
ANR	8051669	Symbol	true		8051430						
ANR	8051670	Symbol	fp -> params		8051430						
ANR	8051671	Symbol	pfs -> params . style		8051430						
ANR	8051672	Symbol	pfs -> params . stroke_weight		8051430						
ANR	8051673	Symbol	pfs		8051430						
ANR	8051674	Function	pcl_select_font_by_id	581:0:19668:20063							
ANR	8051675	FunctionDef	"pcl_select_font_by_id (pcl_font_selection_t * pfs , uint id , pcl_state_t * pcs)"		8051674	0					
ANR	8051676	CompoundStatement		583:0:19750:20063	8051674	0					
ANR	8051677	IdentifierDeclStatement	byte id_key [ 2 ] ;	584:4:19756:19770	8051674	0	True				
ANR	8051678	IdentifierDecl	id_key [ 2 ]		8051674	0					
ANR	8051679	IdentifierDeclType	byte [ 2 ]		8051674	0					
ANR	8051680	Identifier	id_key		8051674	1					
ANR	8051681	PrimaryExpression	2		8051674	2					
ANR	8051682	IdentifierDeclStatement	void * value ;	585:4:19776:19787	8051674	1	True				
ANR	8051683	IdentifierDecl	* value		8051674	0					
ANR	8051684	IdentifierDeclType	void *		8051674	0					
ANR	8051685	Identifier	value		8051674	1					
ANR	8051686	IdentifierDeclStatement	pl_font_t * fp ;	586:4:19793:19806	8051674	2	True				
ANR	8051687	IdentifierDecl	* fp		8051674	0					
ANR	8051688	IdentifierDeclType	pl_font_t *		8051674	0					
ANR	8051689	Identifier	fp		8051674	1					
ANR	8051690	ExpressionStatement	id_key [ 0 ] = id >> 8	588:4:19813:19832	8051674	3	True				
ANR	8051691	AssignmentExpression	id_key [ 0 ] = id >> 8		8051674	0		=			
ANR	8051692	ArrayIndexing	id_key [ 0 ]		8051674	0					
ANR	8051693	Identifier	id_key		8051674	0					
ANR	8051694	PrimaryExpression	0		8051674	1					
ANR	8051695	ShiftExpression	id >> 8		8051674	1		>>			
ANR	8051696	Identifier	id		8051674	0					
ANR	8051697	PrimaryExpression	8		8051674	1					
ANR	8051698	ExpressionStatement	id_key [ 1 ] = ( byte ) id	589:4:19838:19859	8051674	4	True				
ANR	8051699	AssignmentExpression	id_key [ 1 ] = ( byte ) id		8051674	0		=			
ANR	8051700	ArrayIndexing	id_key [ 1 ]		8051674	0					
ANR	8051701	Identifier	id_key		8051674	0					
ANR	8051702	PrimaryExpression	1		8051674	1					
ANR	8051703	CastExpression	( byte ) id		8051674	1					
ANR	8051704	CastTarget	byte		8051674	0					
ANR	8051705	Identifier	id		8051674	1					
ANR	8051706	IfStatement	"if ( ! pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value ) )"		8051674	5					
ANR	8051707	Condition	"! pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value )"	590:8:19869:19918	8051674	0	True				
ANR	8051708	UnaryOperationExpression	"! pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value )"		8051674	0					
ANR	8051709	UnaryOperator	!		8051674	0					
ANR	8051710	CallExpression	"pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value )"		8051674	1					
ANR	8051711	Callee	pl_dict_find		8051674	0					
ANR	8051712	Identifier	pl_dict_find		8051674	0					
ANR	8051713	ArgumentList	& pcs -> soft_fonts		8051674	1					
ANR	8051714	Argument	& pcs -> soft_fonts		8051674	0					
ANR	8051715	UnaryOperationExpression	& pcs -> soft_fonts		8051674	0					
ANR	8051716	UnaryOperator	&		8051674	0					
ANR	8051717	PtrMemberAccess	pcs -> soft_fonts		8051674	1					
ANR	8051718	Identifier	pcs		8051674	0					
ANR	8051719	Identifier	soft_fonts		8051674	1					
ANR	8051720	Argument	id_key		8051674	1					
ANR	8051721	Identifier	id_key		8051674	0					
ANR	8051722	Argument	2		8051674	2					
ANR	8051723	PrimaryExpression	2		8051674	0					
ANR	8051724	Argument	& value		8051674	3					
ANR	8051725	UnaryOperationExpression	& value		8051674	0					
ANR	8051726	UnaryOperator	&		8051674	0					
ANR	8051727	Identifier	value		8051674	1					
ANR	8051728	ReturnStatement	return 1 ;	591:8:19929:19937	8051674	1	True				
ANR	8051729	PrimaryExpression	1		8051674	0					
ANR	8051730	ExpressionStatement	fp = ( pl_font_t * ) value	592:4:19978:20002	8051674	6	True				
ANR	8051731	AssignmentExpression	fp = ( pl_font_t * ) value		8051674	0		=			
ANR	8051732	Identifier	fp		8051674	0					
ANR	8051733	CastExpression	( pl_font_t * ) value		8051674	1					
ANR	8051734	CastTarget	pl_font_t *		8051674	0					
ANR	8051735	Identifier	value		8051674	1					
ANR	8051736	ExpressionStatement	"pcl_set_id_parameters ( pcs , pfs , fp , id )"	593:4:20008:20047	8051674	7	True				
ANR	8051737	CallExpression	"pcl_set_id_parameters ( pcs , pfs , fp , id )"		8051674	0					
ANR	8051738	Callee	pcl_set_id_parameters		8051674	0					
ANR	8051739	Identifier	pcl_set_id_parameters		8051674	0					
ANR	8051740	ArgumentList	pcs		8051674	1					
ANR	8051741	Argument	pcs		8051674	0					
ANR	8051742	Identifier	pcs		8051674	0					
ANR	8051743	Argument	pfs		8051674	1					
ANR	8051744	Identifier	pfs		8051674	0					
ANR	8051745	Argument	fp		8051674	2					
ANR	8051746	Identifier	fp		8051674	0					
ANR	8051747	Argument	id		8051674	3					
ANR	8051748	Identifier	id		8051674	0					
ANR	8051749	ReturnStatement	return 0 ;	594:4:20053:20061	8051674	8	True				
ANR	8051750	PrimaryExpression	0		8051674	0					
ANR	8051751	ReturnType	int		8051674	1					
ANR	8051752	Identifier	pcl_select_font_by_id		8051674	2					
ANR	8051753	ParameterList	"pcl_font_selection_t * pfs , uint id , pcl_state_t * pcs"		8051674	3					
ANR	8051754	Parameter	pcl_font_selection_t * pfs	582:22:19694:19719	8051674	0	True				
ANR	8051755	ParameterType	pcl_font_selection_t *		8051674	0					
ANR	8051756	Identifier	pfs		8051674	1					
ANR	8051757	Parameter	uint id	582:50:19722:19728	8051674	1	True				
ANR	8051758	ParameterType	uint		8051674	0					
ANR	8051759	Identifier	id		8051674	1					
ANR	8051760	Parameter	pcl_state_t * pcs	582:59:19731:19747	8051674	2	True				
ANR	8051761	ParameterType	pcl_state_t *		8051674	0					
ANR	8051762	Identifier	pcs		8051674	1					
ANR	8051763	CFGEntryNode	ENTRY		8051674		True				
ANR	8051764	CFGExitNode	EXIT		8051674		True				
ANR	8051765	Symbol	pcs		8051674						
ANR	8051766	Symbol	id_key		8051674						
ANR	8051767	Symbol	* id_key		8051674						
ANR	8051768	Symbol	& value		8051674						
ANR	8051769	Symbol	& pcs -> soft_fonts		8051674						
ANR	8051770	Symbol	fp		8051674						
ANR	8051771	Symbol	id		8051674						
ANR	8051772	Symbol	pfs		8051674						
ANR	8051773	Symbol	value		8051674						
ANR	8051774	Symbol	pl_dict_find		8051674						
