command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	163827	File	data/converged/CVE-2018-16863_ghostpdl/base_gdevabuf.c								
ANR	163828	Function	gs_make_mem_alpha_device	42:0:1519:2330							
ANR	163829	FunctionDef	"gs_make_mem_alpha_device (gx_device_memory * adev , gs_memory_t * mem , gx_device * target , int alpha_bits)"		163828	0					
ANR	163830	CompoundStatement		45:0:1654:2330	163828	0					
ANR	163831	ExpressionStatement	"gs_make_mem_device ( adev , gdev_mem_device_for_bits ( alpha_bits ) , mem , 0 , target )"	46:4:1660:1761	163828	0	True				
ANR	163832	CallExpression	"gs_make_mem_device ( adev , gdev_mem_device_for_bits ( alpha_bits ) , mem , 0 , target )"		163828	0					
ANR	163833	Callee	gs_make_mem_device		163828	0					
ANR	163834	Identifier	gs_make_mem_device		163828	0					
ANR	163835	ArgumentList	adev		163828	1					
ANR	163836	Argument	adev		163828	0					
ANR	163837	Identifier	adev		163828	0					
ANR	163838	Argument	gdev_mem_device_for_bits ( alpha_bits )		163828	1					
ANR	163839	CallExpression	gdev_mem_device_for_bits ( alpha_bits )		163828	0					
ANR	163840	Callee	gdev_mem_device_for_bits		163828	0					
ANR	163841	Identifier	gdev_mem_device_for_bits		163828	0					
ANR	163842	ArgumentList	alpha_bits		163828	1					
ANR	163843	Argument	alpha_bits		163828	0					
ANR	163844	Identifier	alpha_bits		163828	0					
ANR	163845	Argument	mem		163828	2					
ANR	163846	Identifier	mem		163828	0					
ANR	163847	Argument	0		163828	3					
ANR	163848	PrimaryExpression	0		163828	0					
ANR	163849	Argument	target		163828	4					
ANR	163850	Identifier	target		163828	0					
ANR	163851	ExpressionStatement	adev -> color_info = gdev_mem_device_for_bits ( 1 ) -> color_info	49:4:1814:1872	163828	1	True				
ANR	163852	AssignmentExpression	adev -> color_info = gdev_mem_device_for_bits ( 1 ) -> color_info		163828	0		=			
ANR	163853	PtrMemberAccess	adev -> color_info		163828	0					
ANR	163854	Identifier	adev		163828	0					
ANR	163855	Identifier	color_info		163828	1					
ANR	163856	PtrMemberAccess	gdev_mem_device_for_bits ( 1 ) -> color_info		163828	1					
ANR	163857	CallExpression	gdev_mem_device_for_bits ( 1 )		163828	0					
ANR	163858	Callee	gdev_mem_device_for_bits		163828	0					
ANR	163859	Identifier	gdev_mem_device_for_bits		163828	0					
ANR	163860	ArgumentList	1		163828	1					
ANR	163861	Argument	1		163828	0					
ANR	163862	PrimaryExpression	1		163828	0					
ANR	163863	Identifier	color_info		163828	1					
ANR	163864	ExpressionStatement	adev -> color_info . depth = alpha_bits	51:4:1931:1966	163828	2	True				
ANR	163865	AssignmentExpression	adev -> color_info . depth = alpha_bits		163828	0		=			
ANR	163866	MemberAccess	adev -> color_info . depth		163828	0					
ANR	163867	PtrMemberAccess	adev -> color_info		163828	0					
ANR	163868	Identifier	adev		163828	0					
ANR	163869	Identifier	color_info		163828	1					
ANR	163870	Identifier	depth		163828	1					
ANR	163871	Identifier	alpha_bits		163828	1					
ANR	163872	ExpressionStatement	adev -> graphics_type_tag = target -> graphics_type_tag	52:4:1972:2023	163828	3	True				
ANR	163873	AssignmentExpression	adev -> graphics_type_tag = target -> graphics_type_tag		163828	0		=			
ANR	163874	PtrMemberAccess	adev -> graphics_type_tag		163828	0					
ANR	163875	Identifier	adev		163828	0					
ANR	163876	Identifier	graphics_type_tag		163828	1					
ANR	163877	PtrMemberAccess	target -> graphics_type_tag		163828	1					
ANR	163878	Identifier	target		163828	0					
ANR	163879	Identifier	graphics_type_tag		163828	1					
ANR	163880	ExpressionStatement	"set_dev_proc ( adev , map_rgb_color , mem_alpha_map_rgb_color )"	54:4:2072:2130	163828	4	True				
ANR	163881	CallExpression	"set_dev_proc ( adev , map_rgb_color , mem_alpha_map_rgb_color )"		163828	0					
ANR	163882	Callee	set_dev_proc		163828	0					
ANR	163883	Identifier	set_dev_proc		163828	0					
ANR	163884	ArgumentList	adev		163828	1					
ANR	163885	Argument	adev		163828	0					
ANR	163886	Identifier	adev		163828	0					
ANR	163887	Argument	map_rgb_color		163828	1					
ANR	163888	Identifier	map_rgb_color		163828	0					
ANR	163889	Argument	mem_alpha_map_rgb_color		163828	2					
ANR	163890	Identifier	mem_alpha_map_rgb_color		163828	0					
ANR	163891	ExpressionStatement	"set_dev_proc ( adev , map_color_rgb , mem_alpha_map_color_rgb )"	55:4:2136:2194	163828	5	True				
ANR	163892	CallExpression	"set_dev_proc ( adev , map_color_rgb , mem_alpha_map_color_rgb )"		163828	0					
ANR	163893	Callee	set_dev_proc		163828	0					
ANR	163894	Identifier	set_dev_proc		163828	0					
ANR	163895	ArgumentList	adev		163828	1					
ANR	163896	Argument	adev		163828	0					
ANR	163897	Identifier	adev		163828	0					
ANR	163898	Argument	map_color_rgb		163828	1					
ANR	163899	Identifier	map_color_rgb		163828	0					
ANR	163900	Argument	mem_alpha_map_color_rgb		163828	2					
ANR	163901	Identifier	mem_alpha_map_color_rgb		163828	0					
ANR	163902	ExpressionStatement	"set_dev_proc ( adev , map_rgb_alpha_color , mem_alpha_map_rgb_alpha_color )"	56:4:2200:2270	163828	6	True				
ANR	163903	CallExpression	"set_dev_proc ( adev , map_rgb_alpha_color , mem_alpha_map_rgb_alpha_color )"		163828	0					
ANR	163904	Callee	set_dev_proc		163828	0					
ANR	163905	Identifier	set_dev_proc		163828	0					
ANR	163906	ArgumentList	adev		163828	1					
ANR	163907	Argument	adev		163828	0					
ANR	163908	Identifier	adev		163828	0					
ANR	163909	Argument	map_rgb_alpha_color		163828	1					
ANR	163910	Identifier	map_rgb_alpha_color		163828	0					
ANR	163911	Argument	mem_alpha_map_rgb_alpha_color		163828	2					
ANR	163912	Identifier	mem_alpha_map_rgb_alpha_color		163828	0					
ANR	163913	ExpressionStatement	"set_dev_proc ( adev , copy_alpha , mem_alpha_copy_alpha )"	57:4:2276:2328	163828	7	True				
ANR	163914	CallExpression	"set_dev_proc ( adev , copy_alpha , mem_alpha_copy_alpha )"		163828	0					
ANR	163915	Callee	set_dev_proc		163828	0					
ANR	163916	Identifier	set_dev_proc		163828	0					
ANR	163917	ArgumentList	adev		163828	1					
ANR	163918	Argument	adev		163828	0					
ANR	163919	Identifier	adev		163828	0					
ANR	163920	Argument	copy_alpha		163828	1					
ANR	163921	Identifier	copy_alpha		163828	0					
ANR	163922	Argument	mem_alpha_copy_alpha		163828	2					
ANR	163923	Identifier	mem_alpha_copy_alpha		163828	0					
ANR	163924	ReturnType	void		163828	1					
ANR	163925	Identifier	gs_make_mem_alpha_device		163828	2					
ANR	163926	ParameterList	"gx_device_memory * adev , gs_memory_t * mem , gx_device * target , int alpha_bits"		163828	3					
ANR	163927	Parameter	gx_device_memory * adev	43:25:1549:1571	163828	0	True				
ANR	163928	ParameterType	gx_device_memory *		163828	0					
ANR	163929	Identifier	adev		163828	1					
ANR	163930	Parameter	gs_memory_t * mem	43:50:1574:1590	163828	1	True				
ANR	163931	ParameterType	gs_memory_t *		163828	0					
ANR	163932	Identifier	mem		163828	1					
ANR	163933	Parameter	gx_device * target	44:25:1618:1635	163828	2	True				
ANR	163934	ParameterType	gx_device *		163828	0					
ANR	163935	Identifier	target		163828	1					
ANR	163936	Parameter	int alpha_bits	44:45:1638:1651	163828	3	True				
ANR	163937	ParameterType	int		163828	0					
ANR	163938	Identifier	alpha_bits		163828	1					
ANR	163939	CFGEntryNode	ENTRY		163828		True				
ANR	163940	CFGExitNode	EXIT		163828		True				
ANR	163941	Symbol	gdev_mem_device_for_bits ( 1 ) -> color_info		163828						
ANR	163942	Symbol	target -> graphics_type_tag		163828						
ANR	163943	Symbol	mem_alpha_copy_alpha		163828						
ANR	163944	Symbol	adev -> color_info		163828						
ANR	163945	Symbol	alpha_bits		163828						
ANR	163946	Symbol	gdev_mem_device_for_bits		163828						
ANR	163947	Symbol	mem_alpha_map_color_rgb		163828						
ANR	163948	Symbol	map_color_rgb		163828						
ANR	163949	Symbol	target		163828						
ANR	163950	Symbol	adev -> graphics_type_tag		163828						
ANR	163951	Symbol	map_rgb_color		163828						
ANR	163952	Symbol	* target		163828						
ANR	163953	Symbol	mem_alpha_map_rgb_color		163828						
ANR	163954	Symbol	mem		163828						
ANR	163955	Symbol	map_rgb_alpha_color		163828						
ANR	163956	Symbol	adev -> color_info . depth		163828						
ANR	163957	Symbol	* adev		163828						
ANR	163958	Symbol	* gdev_mem_device_for_bits		163828						
ANR	163959	Symbol	adev		163828						
ANR	163960	Symbol	copy_alpha		163828						
ANR	163961	Symbol	mem_alpha_map_rgb_alpha_color		163828						
ANR	163962	Function	mem_alpha_map_rgb_color	61:0:2366:2710							
ANR	163963	FunctionDef	"mem_alpha_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		163962	0					
ANR	163964	CompoundStatement		63:0:2456:2710	163962	0					
ANR	163965	Statement	gx_device_memory	64:4:2462:2477	163962	0	True				
ANR	163966	Statement	*	64:21:2479:2479	163962	1	True				
ANR	163967	Statement	const	64:23:2481:2485	163962	2	True				
ANR	163968	ExpressionStatement	mdev = ( gx_device_memory * ) dev	64:29:2487:2517	163962	3	True				
ANR	163969	AssignmentExpression	mdev = ( gx_device_memory * ) dev		163962	0		=			
ANR	163970	Identifier	mdev		163962	0					
ANR	163971	CastExpression	( gx_device_memory * ) dev		163962	1					
ANR	163972	CastTarget	gx_device_memory *		163962	0					
ANR	163973	Identifier	dev		163962	1					
ANR	163974	IdentifierDeclStatement	"gx_color_index color = gx_forward_map_rgb_color ( dev , cv ) ;"	65:4:2523:2579	163962	4	True				
ANR	163975	IdentifierDecl	"color = gx_forward_map_rgb_color ( dev , cv )"		163962	0					
ANR	163976	IdentifierDeclType	gx_color_index		163962	0					
ANR	163977	Identifier	color		163962	1					
ANR	163978	AssignmentExpression	"color = gx_forward_map_rgb_color ( dev , cv )"		163962	2		=			
ANR	163979	Identifier	color		163962	0					
ANR	163980	CallExpression	"gx_forward_map_rgb_color ( dev , cv )"		163962	1					
ANR	163981	Callee	gx_forward_map_rgb_color		163962	0					
ANR	163982	Identifier	gx_forward_map_rgb_color		163962	0					
ANR	163983	ArgumentList	dev		163962	1					
ANR	163984	Argument	dev		163962	0					
ANR	163985	Identifier	dev		163962	0					
ANR	163986	Argument	cv		163962	1					
ANR	163987	Identifier	cv		163962	0					
ANR	163988	ReturnStatement	return ( color == 0 || color == gx_no_color_index ? color : ( ( ( gx_color_index ) 1 << mdev -> log2_alpha_bits ) - 1 ) ) ;	67:4:2586:2708	163962	5	True				
ANR	163989	ConditionalExpression	color == 0 || color == gx_no_color_index ? color : ( ( ( gx_color_index ) 1 << mdev -> log2_alpha_bits ) - 1 )		163962	0					
ANR	163990	Condition	color == 0 || color == gx_no_color_index		163962	0					
ANR	163991	OrExpression	color == 0 || color == gx_no_color_index		163962	0		||			
ANR	163992	EqualityExpression	color == 0		163962	0		==			
ANR	163993	Identifier	color		163962	0					
ANR	163994	PrimaryExpression	0		163962	1					
ANR	163995	EqualityExpression	color == gx_no_color_index		163962	1		==			
ANR	163996	Identifier	color		163962	0					
ANR	163997	Identifier	gx_no_color_index		163962	1					
ANR	163998	Identifier	color		163962	1					
ANR	163999	AdditiveExpression	( ( gx_color_index ) 1 << mdev -> log2_alpha_bits ) - 1		163962	2		-			
ANR	164000	ShiftExpression	( gx_color_index ) 1 << mdev -> log2_alpha_bits		163962	0		<<			
ANR	164001	CastExpression	( gx_color_index ) 1		163962	0					
ANR	164002	CastTarget	gx_color_index		163962	0					
ANR	164003	PrimaryExpression	1		163962	1					
ANR	164004	PtrMemberAccess	mdev -> log2_alpha_bits		163962	1					
ANR	164005	Identifier	mdev		163962	0					
ANR	164006	Identifier	log2_alpha_bits		163962	1					
ANR	164007	PrimaryExpression	1		163962	1					
ANR	164008	ReturnType	static gx_color_index		163962	1					
ANR	164009	Identifier	mem_alpha_map_rgb_color		163962	2					
ANR	164010	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		163962	3					
ANR	164011	Parameter	gx_device * dev	62:24:2412:2426	163962	0	True				
ANR	164012	ParameterType	gx_device *		163962	0					
ANR	164013	Identifier	dev		163962	1					
ANR	164014	Parameter	const gx_color_value cv [ ]	62:41:2429:2453	163962	1	True				
ANR	164015	ParameterType	const gx_color_value [ ]		163962	0					
ANR	164016	Identifier	cv		163962	1					
ANR	164017	CFGEntryNode	ENTRY		163962		True				
ANR	164018	CFGExitNode	EXIT		163962		True				
ANR	164019	Symbol	gx_forward_map_rgb_color		163962						
ANR	164020	Symbol	cv		163962						
ANR	164021	Symbol	gx_no_color_index		163962						
ANR	164022	Symbol	dev		163962						
ANR	164023	Symbol	color		163962						
ANR	164024	Symbol	mdev		163962						
ANR	164025	Symbol	* mdev		163962						
ANR	164026	Symbol	mdev -> log2_alpha_bits		163962						
ANR	164027	Function	mem_alpha_map_color_rgb	70:0:2712:3001							
ANR	164028	FunctionDef	"mem_alpha_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		164027	0					
ANR	164029	CompoundStatement		73:0:2834:3001	164027	0					
ANR	164030	ReturnStatement	"return gx_forward_map_color_rgb ( dev , ( color == 0 ? color : ( gx_color_index ) 1 ) , prgb ) ;"	74:4:2840:2999	164027	0	True				
ANR	164031	CallExpression	"gx_forward_map_color_rgb ( dev , ( color == 0 ? color : ( gx_color_index ) 1 ) , prgb )"		164027	0					
ANR	164032	Callee	gx_forward_map_color_rgb		164027	0					
ANR	164033	Identifier	gx_forward_map_color_rgb		164027	0					
ANR	164034	ArgumentList	dev		164027	1					
ANR	164035	Argument	dev		164027	0					
ANR	164036	Identifier	dev		164027	0					
ANR	164037	Argument	color == 0 ? color : ( gx_color_index ) 1		164027	1					
ANR	164038	ConditionalExpression	color == 0 ? color : ( gx_color_index ) 1		164027	0					
ANR	164039	Condition	color == 0		164027	0					
ANR	164040	EqualityExpression	color == 0		164027	0		==			
ANR	164041	Identifier	color		164027	0					
ANR	164042	PrimaryExpression	0		164027	1					
ANR	164043	Identifier	color		164027	1					
ANR	164044	CastExpression	( gx_color_index ) 1		164027	2					
ANR	164045	CastTarget	gx_color_index		164027	0					
ANR	164046	PrimaryExpression	1		164027	1					
ANR	164047	Argument	prgb		164027	2					
ANR	164048	Identifier	prgb		164027	0					
ANR	164049	ReturnType	static int		164027	1					
ANR	164050	Identifier	mem_alpha_map_color_rgb		164027	2					
ANR	164051	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		164027	3					
ANR	164052	Parameter	gx_device * dev	71:24:2747:2761	164027	0	True				
ANR	164053	ParameterType	gx_device *		164027	0					
ANR	164054	Identifier	dev		164027	1					
ANR	164055	Parameter	gx_color_index color	71:41:2764:2783	164027	1	True				
ANR	164056	ParameterType	gx_color_index		164027	0					
ANR	164057	Identifier	color		164027	1					
ANR	164058	Parameter	gx_color_value prgb [ 3 ]	72:24:2810:2831	164027	2	True				
ANR	164059	ParameterType	gx_color_value [ 3 ]		164027	0					
ANR	164060	Identifier	prgb		164027	1					
ANR	164061	CFGEntryNode	ENTRY		164027		True				
ANR	164062	CFGExitNode	EXIT		164027		True				
ANR	164063	Symbol	dev		164027						
ANR	164064	Symbol	color		164027						
ANR	164065	Symbol	gx_forward_map_color_rgb		164027						
ANR	164066	Symbol	prgb		164027						
ANR	164067	Function	mem_alpha_map_rgb_alpha_color	79:0:3003:3559							
ANR	164068	FunctionDef	"mem_alpha_map_rgb_alpha_color (gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha)"		164067	0					
ANR	164069	CompoundStatement		82:0:3167:3559	164067	0					
ANR	164070	Statement	gx_device_memory	83:4:3173:3188	164067	0	True				
ANR	164071	Statement	*	83:21:3190:3190	164067	1	True				
ANR	164072	Statement	const	83:23:3192:3196	164067	2	True				
ANR	164073	ExpressionStatement	mdev = ( gx_device_memory * ) dev	83:29:3198:3228	164067	3	True				
ANR	164074	AssignmentExpression	mdev = ( gx_device_memory * ) dev		164067	0		=			
ANR	164075	Identifier	mdev		164067	0					
ANR	164076	CastExpression	( gx_device_memory * ) dev		164067	1					
ANR	164077	CastTarget	gx_device_memory *		164067	0					
ANR	164078	Identifier	dev		164067	1					
ANR	164079	IdentifierDeclStatement	gx_color_index color ;	84:4:3234:3254	164067	4	True				
ANR	164080	IdentifierDecl	color		164067	0					
ANR	164081	IdentifierDeclType	gx_color_index		164067	0					
ANR	164082	Identifier	color		164067	1					
ANR	164083	IdentifierDeclStatement	gx_color_value cv [ 3 ] ;	85:4:3260:3280	164067	5	True				
ANR	164084	IdentifierDecl	cv [ 3 ]		164067	0					
ANR	164085	IdentifierDeclType	gx_color_value [ 3 ]		164067	0					
ANR	164086	Identifier	cv		164067	1					
ANR	164087	PrimaryExpression	3		164067	2					
ANR	164088	ExpressionStatement	cv [ 0 ] = r	87:4:3287:3296	164067	6	True				
ANR	164089	AssignmentExpression	cv [ 0 ] = r		164067	0		=			
ANR	164090	ArrayIndexing	cv [ 0 ]		164067	0					
ANR	164091	Identifier	cv		164067	0					
ANR	164092	PrimaryExpression	0		164067	1					
ANR	164093	Identifier	r		164067	1					
ANR	164094	ExpressionStatement	cv [ 1 ] = g	87:15:3298:3307	164067	7	True				
ANR	164095	AssignmentExpression	cv [ 1 ] = g		164067	0		=			
ANR	164096	ArrayIndexing	cv [ 1 ]		164067	0					
ANR	164097	Identifier	cv		164067	0					
ANR	164098	PrimaryExpression	1		164067	1					
ANR	164099	Identifier	g		164067	1					
ANR	164100	ExpressionStatement	cv [ 2 ] = b	87:26:3309:3318	164067	8	True				
ANR	164101	AssignmentExpression	cv [ 2 ] = b		164067	0		=			
ANR	164102	ArrayIndexing	cv [ 2 ]		164067	0					
ANR	164103	Identifier	cv		164067	0					
ANR	164104	PrimaryExpression	2		164067	1					
ANR	164105	Identifier	b		164067	1					
ANR	164106	ExpressionStatement	"color = gx_forward_map_rgb_color ( dev , cv )"	88:4:3324:3365	164067	9	True				
ANR	164107	AssignmentExpression	"color = gx_forward_map_rgb_color ( dev , cv )"		164067	0		=			
ANR	164108	Identifier	color		164067	0					
ANR	164109	CallExpression	"gx_forward_map_rgb_color ( dev , cv )"		164067	1					
ANR	164110	Callee	gx_forward_map_rgb_color		164067	0					
ANR	164111	Identifier	gx_forward_map_rgb_color		164067	0					
ANR	164112	ArgumentList	dev		164067	1					
ANR	164113	Argument	dev		164067	0					
ANR	164114	Identifier	dev		164067	0					
ANR	164115	Argument	cv		164067	1					
ANR	164116	Identifier	cv		164067	0					
ANR	164117	ReturnStatement	return ( color == 0 || color == gx_no_color_index ? color : ( gx_color_index ) ( alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits ) ) ) ;	90:4:3372:3557	164067	10	True				
ANR	164118	ConditionalExpression	color == 0 || color == gx_no_color_index ? color : ( gx_color_index ) ( alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits ) )		164067	0					
ANR	164119	Condition	color == 0 || color == gx_no_color_index		164067	0					
ANR	164120	OrExpression	color == 0 || color == gx_no_color_index		164067	0		||			
ANR	164121	EqualityExpression	color == 0		164067	0		==			
ANR	164122	Identifier	color		164067	0					
ANR	164123	PrimaryExpression	0		164067	1					
ANR	164124	EqualityExpression	color == gx_no_color_index		164067	1		==			
ANR	164125	Identifier	color		164067	0					
ANR	164126	Identifier	gx_no_color_index		164067	1					
ANR	164127	Identifier	color		164067	1					
ANR	164128	CastExpression	( gx_color_index ) ( alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits ) )		164067	2					
ANR	164129	CastTarget	gx_color_index		164067	0					
ANR	164130	ShiftExpression	alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits )		164067	1		>>			
ANR	164131	Identifier	alpha		164067	0					
ANR	164132	AdditiveExpression	gx_color_value_bits - mdev -> log2_alpha_bits		164067	1		-			
ANR	164133	Identifier	gx_color_value_bits		164067	0					
ANR	164134	PtrMemberAccess	mdev -> log2_alpha_bits		164067	1					
ANR	164135	Identifier	mdev		164067	0					
ANR	164136	Identifier	log2_alpha_bits		164067	1					
ANR	164137	ReturnType	static gx_color_index		164067	1					
ANR	164138	Identifier	mem_alpha_map_rgb_alpha_color		164067	2					
ANR	164139	ParameterList	"gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha"		164067	3					
ANR	164140	Parameter	gx_device * dev	80:30:3055:3069	164067	0	True				
ANR	164141	ParameterType	gx_device *		164067	0					
ANR	164142	Identifier	dev		164067	1					
ANR	164143	Parameter	gx_color_value r	80:47:3072:3087	164067	1	True				
ANR	164144	ParameterType	gx_color_value		164067	0					
ANR	164145	Identifier	r		164067	1					
ANR	164146	Parameter	gx_color_value g	81:19:3109:3124	164067	2	True				
ANR	164147	ParameterType	gx_color_value		164067	0					
ANR	164148	Identifier	g		164067	1					
ANR	164149	Parameter	gx_color_value b	81:37:3127:3142	164067	3	True				
ANR	164150	ParameterType	gx_color_value		164067	0					
ANR	164151	Identifier	b		164067	1					
ANR	164152	Parameter	gx_color_value alpha	81:55:3145:3164	164067	4	True				
ANR	164153	ParameterType	gx_color_value		164067	0					
ANR	164154	Identifier	alpha		164067	1					
ANR	164155	CFGEntryNode	ENTRY		164067		True				
ANR	164156	CFGExitNode	EXIT		164067		True				
ANR	164157	Symbol	b		164067						
ANR	164158	Symbol	gx_forward_map_rgb_color		164067						
ANR	164159	Symbol	color		164067						
ANR	164160	Symbol	g		164067						
ANR	164161	Symbol	mdev -> log2_alpha_bits		164067						
ANR	164162	Symbol	r		164067						
ANR	164163	Symbol	cv		164067						
ANR	164164	Symbol	gx_no_color_index		164067						
ANR	164165	Symbol	dev		164067						
ANR	164166	Symbol	alpha		164067						
ANR	164167	Symbol	* cv		164067						
ANR	164168	Symbol	mdev		164067						
ANR	164169	Symbol	gx_color_value_bits		164067						
ANR	164170	Symbol	* mdev		164067						
ANR	164171	Function	mem_alpha_copy_alpha	95:0:3592:5358							
ANR	164172	FunctionDef	"mem_alpha_copy_alpha (gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int width , int height , gx_color_index color , int depth)"		164171	0					
ANR	164173	CompoundStatement		99:0:3803:5358	164171	0					
ANR	164174	IfStatement	if ( depth == 8 )		164171	0					
ANR	164175	Condition	depth == 8	100:8:3843:3852	164171	0	True				
ANR	164176	EqualityExpression	depth == 8		164171	0		==			
ANR	164177	Identifier	depth		164171	0					
ANR	164178	PrimaryExpression	8		164171	1					
ANR	164179	CompoundStatement		2:20:51:51	164171	1					
ANR	164180	ExpressionStatement	return_error ( gs_error_unknownerror )	120:8:5025:5060	164171	0	True				
ANR	164181	CallExpression	return_error ( gs_error_unknownerror )		164171	0					
ANR	164182	Callee	return_error		164171	0					
ANR	164183	Identifier	return_error		164171	0					
ANR	164184	ArgumentList	gs_error_unknownerror		164171	1					
ANR	164185	Argument	gs_error_unknownerror		164171	0					
ANR	164186	Identifier	gs_error_unknownerror		164171	0					
ANR	164187	ReturnStatement	"return ( color == 0 ? ( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , color ) : ( * dev_proc ( dev , copy_color ) ) ( dev , data , data_x , raster , id , x , y , width , height ) ) ;"	122:4:5072:5356	164171	1	True				
ANR	164188	ConditionalExpression	"color == 0 ? ( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , color ) : ( * dev_proc ( dev , copy_color ) ) ( dev , data , data_x , raster , id , x , y , width , height )"		164171	0					
ANR	164189	Condition	color == 0		164171	0					
ANR	164190	EqualityExpression	color == 0		164171	0		==			
ANR	164191	Identifier	color		164171	0					
ANR	164192	PrimaryExpression	0		164171	1					
ANR	164193	CallExpression	"( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , color )"		164171	1					
ANR	164194	Callee	"* dev_proc ( dev , fill_rectangle )"		164171	0					
ANR	164195	UnaryOperationExpression	"* dev_proc ( dev , fill_rectangle )"		164171	0					
ANR	164196	UnaryOperator	*		164171	0					
ANR	164197	CallExpression	"dev_proc ( dev , fill_rectangle )"		164171	1					
ANR	164198	Callee	dev_proc		164171	0					
ANR	164199	Identifier	dev_proc		164171	0					
ANR	164200	ArgumentList	dev		164171	1					
ANR	164201	Argument	dev		164171	0					
ANR	164202	Identifier	dev		164171	0					
ANR	164203	Argument	fill_rectangle		164171	1					
ANR	164204	Identifier	fill_rectangle		164171	0					
ANR	164205	ArgumentList	dev		164171	1					
ANR	164206	Argument	dev		164171	0					
ANR	164207	Identifier	dev		164171	0					
ANR	164208	Argument	x		164171	1					
ANR	164209	Identifier	x		164171	0					
ANR	164210	Argument	y		164171	2					
ANR	164211	Identifier	y		164171	0					
ANR	164212	Argument	width		164171	3					
ANR	164213	Identifier	width		164171	0					
ANR	164214	Argument	height		164171	4					
ANR	164215	Identifier	height		164171	0					
ANR	164216	Argument	color		164171	5					
ANR	164217	Identifier	color		164171	0					
ANR	164218	CallExpression	"( * dev_proc ( dev , copy_color ) ) ( dev , data , data_x , raster , id , x , y , width , height )"		164171	2					
ANR	164219	Callee	"* dev_proc ( dev , copy_color )"		164171	0					
ANR	164220	UnaryOperationExpression	"* dev_proc ( dev , copy_color )"		164171	0					
ANR	164221	UnaryOperator	*		164171	0					
ANR	164222	CallExpression	"dev_proc ( dev , copy_color )"		164171	1					
ANR	164223	Callee	dev_proc		164171	0					
ANR	164224	Identifier	dev_proc		164171	0					
ANR	164225	ArgumentList	dev		164171	1					
ANR	164226	Argument	dev		164171	0					
ANR	164227	Identifier	dev		164171	0					
ANR	164228	Argument	copy_color		164171	1					
ANR	164229	Identifier	copy_color		164171	0					
ANR	164230	ArgumentList	dev		164171	1					
ANR	164231	Argument	dev		164171	0					
ANR	164232	Identifier	dev		164171	0					
ANR	164233	Argument	data		164171	1					
ANR	164234	Identifier	data		164171	0					
ANR	164235	Argument	data_x		164171	2					
ANR	164236	Identifier	data_x		164171	0					
ANR	164237	Argument	raster		164171	3					
ANR	164238	Identifier	raster		164171	0					
ANR	164239	Argument	id		164171	4					
ANR	164240	Identifier	id		164171	0					
ANR	164241	Argument	x		164171	5					
ANR	164242	Identifier	x		164171	0					
ANR	164243	Argument	y		164171	6					
ANR	164244	Identifier	y		164171	0					
ANR	164245	Argument	width		164171	7					
ANR	164246	Identifier	width		164171	0					
ANR	164247	Argument	height		164171	8					
ANR	164248	Identifier	height		164171	0					
ANR	164249	ReturnType	static int		164171	1					
ANR	164250	Identifier	mem_alpha_copy_alpha		164171	2					
ANR	164251	ParameterList	"gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int width , int height , gx_color_index color , int depth"		164171	3					
ANR	164252	Parameter	gx_device * dev	96:21:3624:3638	164171	0	True				
ANR	164253	ParameterType	gx_device *		164171	0					
ANR	164254	Identifier	dev		164171	1					
ANR	164255	Parameter	const byte * data	96:38:3641:3657	164171	1	True				
ANR	164256	ParameterType	const byte *		164171	0					
ANR	164257	Identifier	data		164171	1					
ANR	164258	Parameter	int data_x	96:57:3660:3669	164171	2	True				
ANR	164259	ParameterType	int		164171	0					
ANR	164260	Identifier	data_x		164171	1					
ANR	164261	Parameter	int raster	97:11:3683:3692	164171	3	True				
ANR	164262	ParameterType	int		164171	0					
ANR	164263	Identifier	raster		164171	1					
ANR	164264	Parameter	gx_bitmap_id id	97:23:3695:3709	164171	4	True				
ANR	164265	ParameterType	gx_bitmap_id		164171	0					
ANR	164266	Identifier	id		164171	1					
ANR	164267	Parameter	int x	97:40:3712:3716	164171	5	True				
ANR	164268	ParameterType	int		164171	0					
ANR	164269	Identifier	x		164171	1					
ANR	164270	Parameter	int y	97:47:3719:3723	164171	6	True				
ANR	164271	ParameterType	int		164171	0					
ANR	164272	Identifier	y		164171	1					
ANR	164273	Parameter	int width	97:54:3726:3734	164171	7	True				
ANR	164274	ParameterType	int		164171	0					
ANR	164275	Identifier	width		164171	1					
ANR	164276	Parameter	int height	97:65:3737:3746	164171	8	True				
ANR	164277	ParameterType	int		164171	0					
ANR	164278	Identifier	height		164171	1					
ANR	164279	Parameter	gx_color_index color	98:21:3770:3789	164171	9	True				
ANR	164280	ParameterType	gx_color_index		164171	0					
ANR	164281	Identifier	color		164171	1					
ANR	164282	Parameter	int depth	98:43:3792:3800	164171	10	True				
ANR	164283	ParameterType	int		164171	0					
ANR	164284	Identifier	depth		164171	1					
ANR	164285	CFGEntryNode	ENTRY		164171		True				
ANR	164286	CFGExitNode	EXIT		164171		True				
ANR	164287	Symbol	"* dev_proc ( dev , copy_color )"		164171						
ANR	164288	Symbol	data		164171						
ANR	164289	Symbol	color		164171						
ANR	164290	Symbol	* dev_proc		164171						
ANR	164291	Symbol	raster		164171						
ANR	164292	Symbol	"* dev_proc ( dev , fill_rectangle )"		164171						
ANR	164293	Symbol	fill_rectangle		164171						
ANR	164294	Symbol	data_x		164171						
ANR	164295	Symbol	depth		164171						
ANR	164296	Symbol	dev		164171						
ANR	164297	Symbol	copy_color		164171						
ANR	164298	Symbol	dev_proc		164171						
ANR	164299	Symbol	x		164171						
ANR	164300	Symbol	width		164171						
ANR	164301	Symbol	y		164171						
ANR	164302	Symbol	id		164171						
ANR	164303	Symbol	height		164171						
ANR	164304	Symbol	gs_error_unknownerror		164171						
ANR	164305	DeclStmt									
ANR	164306	Decl							const gx_device_memory	const gx_device_memory	mem_alpha_buffer_device
ANR	164307	Function	gs_make_mem_abuf_device	182:0:7996:8968							
ANR	164308	FunctionDef	"gs_make_mem_abuf_device (gx_device_memory * adev , gs_memory_t * mem , gx_device * target , const gs_log2_scale_point * pscale , int alpha_bits , int mapped_x , bool devn)"		164307	0					
ANR	164309	CompoundStatement		186:0:8211:8968	164307	0					
ANR	164310	ExpressionStatement	"gs_make_mem_device ( adev , & mem_alpha_buffer_device , mem , 0 , target )"	187:4:8217:8283	164307	0	True				
ANR	164311	CallExpression	"gs_make_mem_device ( adev , & mem_alpha_buffer_device , mem , 0 , target )"		164307	0					
ANR	164312	Callee	gs_make_mem_device		164307	0					
ANR	164313	Identifier	gs_make_mem_device		164307	0					
ANR	164314	ArgumentList	adev		164307	1					
ANR	164315	Argument	adev		164307	0					
ANR	164316	Identifier	adev		164307	0					
ANR	164317	Argument	& mem_alpha_buffer_device		164307	1					
ANR	164318	UnaryOperationExpression	& mem_alpha_buffer_device		164307	0					
ANR	164319	UnaryOperator	&		164307	0					
ANR	164320	Identifier	mem_alpha_buffer_device		164307	1					
ANR	164321	Argument	mem		164307	2					
ANR	164322	Identifier	mem		164307	0					
ANR	164323	Argument	0		164307	3					
ANR	164324	PrimaryExpression	0		164307	0					
ANR	164325	Argument	target		164307	4					
ANR	164326	Identifier	target		164307	0					
ANR	164327	ExpressionStatement	adev -> max_fill_band = 1 << pscale -> y	188:4:8289:8325	164307	1	True				
ANR	164328	AssignmentExpression	adev -> max_fill_band = 1 << pscale -> y		164307	0		=			
ANR	164329	PtrMemberAccess	adev -> max_fill_band		164307	0					
ANR	164330	Identifier	adev		164307	0					
ANR	164331	Identifier	max_fill_band		164307	1					
ANR	164332	ShiftExpression	1 << pscale -> y		164307	1		<<			
ANR	164333	PrimaryExpression	1		164307	0					
ANR	164334	PtrMemberAccess	pscale -> y		164307	1					
ANR	164335	Identifier	pscale		164307	0					
ANR	164336	Identifier	y		164307	1					
ANR	164337	ExpressionStatement	adev -> log2_scale = * pscale	189:4:8331:8357	164307	2	True				
ANR	164338	AssignmentExpression	adev -> log2_scale = * pscale		164307	0		=			
ANR	164339	PtrMemberAccess	adev -> log2_scale		164307	0					
ANR	164340	Identifier	adev		164307	0					
ANR	164341	Identifier	log2_scale		164307	1					
ANR	164342	UnaryOperationExpression	* pscale		164307	1					
ANR	164343	UnaryOperator	*		164307	0					
ANR	164344	Identifier	pscale		164307	1					
ANR	164345	ExpressionStatement	adev -> log2_alpha_bits = alpha_bits >> 1	190:4:8363:8402	164307	3	True				
ANR	164346	AssignmentExpression	adev -> log2_alpha_bits = alpha_bits >> 1		164307	0		=			
ANR	164347	PtrMemberAccess	adev -> log2_alpha_bits		164307	0					
ANR	164348	Identifier	adev		164307	0					
ANR	164349	Identifier	log2_alpha_bits		164307	1					
ANR	164350	ShiftExpression	alpha_bits >> 1		164307	1		>>			
ANR	164351	Identifier	alpha_bits		164307	0					
ANR	164352	PrimaryExpression	1		164307	1					
ANR	164353	ExpressionStatement	adev -> mapped_x = mapped_x	191:4:8430:8455	164307	4	True				
ANR	164354	AssignmentExpression	adev -> mapped_x = mapped_x		164307	0		=			
ANR	164355	PtrMemberAccess	adev -> mapped_x		164307	0					
ANR	164356	Identifier	adev		164307	0					
ANR	164357	Identifier	mapped_x		164307	1					
ANR	164358	Identifier	mapped_x		164307	1					
ANR	164359	ExpressionStatement	"set_dev_proc ( adev , close_device , mem_abuf_close )"	192:4:8461:8509	164307	5	True				
ANR	164360	CallExpression	"set_dev_proc ( adev , close_device , mem_abuf_close )"		164307	0					
ANR	164361	Callee	set_dev_proc		164307	0					
ANR	164362	Identifier	set_dev_proc		164307	0					
ANR	164363	ArgumentList	adev		164307	1					
ANR	164364	Argument	adev		164307	0					
ANR	164365	Identifier	adev		164307	0					
ANR	164366	Argument	close_device		164307	1					
ANR	164367	Identifier	close_device		164307	0					
ANR	164368	Argument	mem_abuf_close		164307	2					
ANR	164369	Identifier	mem_abuf_close		164307	0					
ANR	164370	ExpressionStatement	"set_dev_proc ( adev , get_clipping_box , mem_abuf_get_clipping_box )"	193:4:8515:8578	164307	6	True				
ANR	164371	CallExpression	"set_dev_proc ( adev , get_clipping_box , mem_abuf_get_clipping_box )"		164307	0					
ANR	164372	Callee	set_dev_proc		164307	0					
ANR	164373	Identifier	set_dev_proc		164307	0					
ANR	164374	ArgumentList	adev		164307	1					
ANR	164375	Argument	adev		164307	0					
ANR	164376	Identifier	adev		164307	0					
ANR	164377	Argument	get_clipping_box		164307	1					
ANR	164378	Identifier	get_clipping_box		164307	0					
ANR	164379	Argument	mem_abuf_get_clipping_box		164307	2					
ANR	164380	Identifier	mem_abuf_get_clipping_box		164307	0					
ANR	164381	IfStatement	if ( ! devn )		164307	7					
ANR	164382	Condition	! devn	194:8:8588:8592	164307	0	True				
ANR	164383	UnaryOperationExpression	! devn		164307	0					
ANR	164384	UnaryOperator	!		164307	0					
ANR	164385	Identifier	devn		164307	1					
ANR	164386	ExpressionStatement	adev -> save_hl_color = NULL	195:8:8604:8630	164307	1	True				
ANR	164387	AssignmentExpression	adev -> save_hl_color = NULL		164307	0		=			
ANR	164388	PtrMemberAccess	adev -> save_hl_color		164307	0					
ANR	164389	Identifier	adev		164307	0					
ANR	164390	Identifier	save_hl_color		164307	1					
ANR	164391	Identifier	NULL		164307	1					
ANR	164392	ExpressionStatement	adev -> color_info . anti_alias . text_bits = adev -> color_info . anti_alias . graphics_bits = alpha_bits	198:4:8801:8909	164307	8	True				
ANR	164393	AssignmentExpression	adev -> color_info . anti_alias . text_bits = adev -> color_info . anti_alias . graphics_bits = alpha_bits		164307	0		=			
ANR	164394	MemberAccess	adev -> color_info . anti_alias . text_bits		164307	0					
ANR	164395	MemberAccess	adev -> color_info . anti_alias		164307	0					
ANR	164396	PtrMemberAccess	adev -> color_info		164307	0					
ANR	164397	Identifier	adev		164307	0					
ANR	164398	Identifier	color_info		164307	1					
ANR	164399	Identifier	anti_alias		164307	1					
ANR	164400	Identifier	text_bits		164307	1					
ANR	164401	AssignmentExpression	adev -> color_info . anti_alias . graphics_bits = alpha_bits		164307	1		=			
ANR	164402	MemberAccess	adev -> color_info . anti_alias . graphics_bits		164307	0					
ANR	164403	MemberAccess	adev -> color_info . anti_alias		164307	0					
ANR	164404	PtrMemberAccess	adev -> color_info		164307	0					
ANR	164405	Identifier	adev		164307	0					
ANR	164406	Identifier	color_info		164307	1					
ANR	164407	Identifier	anti_alias		164307	1					
ANR	164408	Identifier	graphics_bits		164307	1					
ANR	164409	Identifier	alpha_bits		164307	1					
ANR	164410	ExpressionStatement	adev -> graphics_type_tag = target -> graphics_type_tag	201:4:8915:8966	164307	9	True				
ANR	164411	AssignmentExpression	adev -> graphics_type_tag = target -> graphics_type_tag		164307	0		=			
ANR	164412	PtrMemberAccess	adev -> graphics_type_tag		164307	0					
ANR	164413	Identifier	adev		164307	0					
ANR	164414	Identifier	graphics_type_tag		164307	1					
ANR	164415	PtrMemberAccess	target -> graphics_type_tag		164307	1					
ANR	164416	Identifier	target		164307	0					
ANR	164417	Identifier	graphics_type_tag		164307	1					
ANR	164418	ReturnType	void		164307	1					
ANR	164419	Identifier	gs_make_mem_abuf_device		164307	2					
ANR	164420	ParameterList	"gx_device_memory * adev , gs_memory_t * mem , gx_device * target , const gs_log2_scale_point * pscale , int alpha_bits , int mapped_x , bool devn"		164307	3					
ANR	164421	Parameter	gx_device_memory * adev	183:24:8025:8047	164307	0	True				
ANR	164422	ParameterType	gx_device_memory *		164307	0					
ANR	164423	Identifier	adev		164307	1					
ANR	164424	Parameter	gs_memory_t * mem	183:49:8050:8066	164307	1	True				
ANR	164425	ParameterType	gs_memory_t *		164307	0					
ANR	164426	Identifier	mem		164307	1					
ANR	164427	Parameter	gx_device * target	184:21:8090:8107	164307	2	True				
ANR	164428	ParameterType	gx_device *		164307	0					
ANR	164429	Identifier	target		164307	1					
ANR	164430	Parameter	const gs_log2_scale_point * pscale	184:41:8110:8143	164307	3	True				
ANR	164431	ParameterType	const gs_log2_scale_point *		164307	0					
ANR	164432	Identifier	pscale		164307	1					
ANR	164433	Parameter	int alpha_bits	185:24:8170:8183	164307	4	True				
ANR	164434	ParameterType	int		164307	0					
ANR	164435	Identifier	alpha_bits		164307	1					
ANR	164436	Parameter	int mapped_x	185:40:8186:8197	164307	5	True				
ANR	164437	ParameterType	int		164307	0					
ANR	164438	Identifier	mapped_x		164307	1					
ANR	164439	Parameter	bool devn	185:54:8200:8208	164307	6	True				
ANR	164440	ParameterType	bool		164307	0					
ANR	164441	Identifier	devn		164307	1					
ANR	164442	CFGEntryNode	ENTRY		164307		True				
ANR	164443	CFGExitNode	EXIT		164307		True				
ANR	164444	Symbol	target -> graphics_type_tag		164307						
ANR	164445	Symbol	adev -> color_info		164307						
ANR	164446	Symbol	* pscale		164307						
ANR	164447	Symbol	get_clipping_box		164307						
ANR	164448	Symbol	close_device		164307						
ANR	164449	Symbol	adev -> max_fill_band		164307						
ANR	164450	Symbol	adev -> color_info . anti_alias		164307						
ANR	164451	Symbol	adev -> color_info . anti_alias . text_bits		164307						
ANR	164452	Symbol	mem		164307						
ANR	164453	Symbol	* adev		164307						
ANR	164454	Symbol	devn		164307						
ANR	164455	Symbol	& mem_alpha_buffer_device		164307						
ANR	164456	Symbol	mem_abuf_close		164307						
ANR	164457	Symbol	adev -> mapped_x		164307						
ANR	164458	Symbol	mem_abuf_get_clipping_box		164307						
ANR	164459	Symbol	NULL		164307						
ANR	164460	Symbol	alpha_bits		164307						
ANR	164461	Symbol	adev -> color_info . anti_alias . graphics_bits		164307						
ANR	164462	Symbol	target		164307						
ANR	164463	Symbol	adev -> log2_alpha_bits		164307						
ANR	164464	Symbol	adev -> graphics_type_tag		164307						
ANR	164465	Symbol	* target		164307						
ANR	164466	Symbol	adev -> save_hl_color		164307						
ANR	164467	Symbol	pscale -> y		164307						
ANR	164468	Symbol	adev		164307						
ANR	164469	Symbol	mapped_x		164307						
ANR	164470	Symbol	adev -> log2_scale		164307						
ANR	164471	Symbol	pscale		164307						
ANR	164472	Function	gs_device_is_abuf	205:0:9029:9301							
ANR	164473	FunctionDef	gs_device_is_abuf (const gx_device * dev)		164472	0					
ANR	164474	CompoundStatement		207:0:9075:9301	164472	0					
ANR	164475	ReturnStatement	return dev -> dname == mem_alpha_buffer_device . dname ;	210:4:9249:9299	164472	0	True				
ANR	164476	EqualityExpression	dev -> dname == mem_alpha_buffer_device . dname		164472	0		==			
ANR	164477	PtrMemberAccess	dev -> dname		164472	0					
ANR	164478	Identifier	dev		164472	0					
ANR	164479	Identifier	dname		164472	1					
ANR	164480	MemberAccess	mem_alpha_buffer_device . dname		164472	1					
ANR	164481	Identifier	mem_alpha_buffer_device		164472	0					
ANR	164482	Identifier	dname		164472	1					
ANR	164483	ReturnType	bool		164472	1					
ANR	164484	Identifier	gs_device_is_abuf		164472	2					
ANR	164485	ParameterList	const gx_device * dev		164472	3					
ANR	164486	Parameter	const gx_device * dev	206:18:9052:9072	164472	0	True				
ANR	164487	ParameterType	const gx_device *		164472	0					
ANR	164488	Identifier	dev		164472	1					
ANR	164489	CFGEntryNode	ENTRY		164472		True				
ANR	164490	CFGExitNode	EXIT		164472		True				
ANR	164491	Symbol	mem_alpha_buffer_device		164472						
ANR	164492	Symbol	* dev		164472						
ANR	164493	Symbol	mem_alpha_buffer_device . dname		164472						
ANR	164494	Symbol	dev		164472						
ANR	164495	Symbol	dev -> dname		164472						
ANR	164496	Function	abuf_flush_block	216:0:9491:12072							
ANR	164497	FunctionDef	"abuf_flush_block (gx_device_memory * adev , int y)"		164496	0					
ANR	164498	CompoundStatement		218:0:9551:12072	164496	0					
ANR	164499	IdentifierDeclStatement	gx_device * target = adev -> target ;	219:4:9557:9589	164496	0	True				
ANR	164500	IdentifierDecl	* target = adev -> target		164496	0					
ANR	164501	IdentifierDeclType	gx_device *		164496	0					
ANR	164502	Identifier	target		164496	1					
ANR	164503	AssignmentExpression	* target = adev -> target		164496	2		=			
ANR	164504	Identifier	target		164496	0					
ANR	164505	PtrMemberAccess	adev -> target		164496	1					
ANR	164506	Identifier	adev		164496	0					
ANR	164507	Identifier	target		164496	1					
ANR	164508	IdentifierDeclStatement	int block_height = 1 << adev -> log2_scale . y ;	220:4:9595:9637	164496	1	True				
ANR	164509	IdentifierDecl	block_height = 1 << adev -> log2_scale . y		164496	0					
ANR	164510	IdentifierDeclType	int		164496	0					
ANR	164511	Identifier	block_height		164496	1					
ANR	164512	AssignmentExpression	block_height = 1 << adev -> log2_scale . y		164496	2		=			
ANR	164513	Identifier	block_height		164496	0					
ANR	164514	ShiftExpression	1 << adev -> log2_scale . y		164496	1		<<			
ANR	164515	PrimaryExpression	1		164496	0					
ANR	164516	MemberAccess	adev -> log2_scale . y		164496	1					
ANR	164517	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164518	Identifier	adev		164496	0					
ANR	164519	Identifier	log2_scale		164496	1					
ANR	164520	Identifier	y		164496	1					
ANR	164521	IdentifierDeclStatement	int alpha_bits = 1 << adev -> log2_alpha_bits ;	221:4:9643:9686	164496	2	True				
ANR	164522	IdentifierDecl	alpha_bits = 1 << adev -> log2_alpha_bits		164496	0					
ANR	164523	IdentifierDeclType	int		164496	0					
ANR	164524	Identifier	alpha_bits		164496	1					
ANR	164525	AssignmentExpression	alpha_bits = 1 << adev -> log2_alpha_bits		164496	2		=			
ANR	164526	Identifier	alpha_bits		164496	0					
ANR	164527	ShiftExpression	1 << adev -> log2_alpha_bits		164496	1		<<			
ANR	164528	PrimaryExpression	1		164496	0					
ANR	164529	PtrMemberAccess	adev -> log2_alpha_bits		164496	1					
ANR	164530	Identifier	adev		164496	0					
ANR	164531	Identifier	log2_alpha_bits		164496	1					
ANR	164532	IdentifierDeclStatement	int ddepth = ( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits ;	222:4:9692:9769	164496	3	True				
ANR	164533	IdentifierDecl	ddepth = ( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits		164496	0					
ANR	164534	IdentifierDeclType	int		164496	0					
ANR	164535	Identifier	ddepth		164496	1					
ANR	164536	AssignmentExpression	ddepth = ( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits		164496	2		=			
ANR	164537	Identifier	ddepth		164496	0					
ANR	164538	ShiftExpression	( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits		164496	1		<<			
ANR	164539	ShiftExpression	adev -> width >> adev -> log2_scale . x		164496	0		>>			
ANR	164540	PtrMemberAccess	adev -> width		164496	0					
ANR	164541	Identifier	adev		164496	0					
ANR	164542	Identifier	width		164496	1					
ANR	164543	MemberAccess	adev -> log2_scale . x		164496	1					
ANR	164544	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164545	Identifier	adev		164496	0					
ANR	164546	Identifier	log2_scale		164496	1					
ANR	164547	Identifier	x		164496	1					
ANR	164548	PtrMemberAccess	adev -> log2_alpha_bits		164496	1					
ANR	164549	Identifier	adev		164496	0					
ANR	164550	Identifier	log2_alpha_bits		164496	1					
ANR	164551	IdentifierDeclStatement	uint draster = bitmap_raster ( ddepth ) ;	224:4:9775:9811	164496	4	True				
ANR	164552	IdentifierDecl	draster = bitmap_raster ( ddepth )		164496	0					
ANR	164553	IdentifierDeclType	uint		164496	0					
ANR	164554	Identifier	draster		164496	1					
ANR	164555	AssignmentExpression	draster = bitmap_raster ( ddepth )		164496	2		=			
ANR	164556	Identifier	draster		164496	0					
ANR	164557	CallExpression	bitmap_raster ( ddepth )		164496	1					
ANR	164558	Callee	bitmap_raster		164496	0					
ANR	164559	Identifier	bitmap_raster		164496	0					
ANR	164560	ArgumentList	ddepth		164496	1					
ANR	164561	Argument	ddepth		164496	0					
ANR	164562	Identifier	ddepth		164496	0					
ANR	164563	IdentifierDeclStatement	int buffer_y = y - adev -> mapped_y + adev -> mapped_start ;	225:4:9817:9871	164496	5	True				
ANR	164564	IdentifierDecl	buffer_y = y - adev -> mapped_y + adev -> mapped_start		164496	0					
ANR	164565	IdentifierDeclType	int		164496	0					
ANR	164566	Identifier	buffer_y		164496	1					
ANR	164567	AssignmentExpression	buffer_y = y - adev -> mapped_y + adev -> mapped_start		164496	2		=			
ANR	164568	Identifier	buffer_y		164496	0					
ANR	164569	AdditiveExpression	y - adev -> mapped_y + adev -> mapped_start		164496	1		-			
ANR	164570	Identifier	y		164496	0					
ANR	164571	AdditiveExpression	adev -> mapped_y + adev -> mapped_start		164496	1		+			
ANR	164572	PtrMemberAccess	adev -> mapped_y		164496	0					
ANR	164573	Identifier	adev		164496	0					
ANR	164574	Identifier	mapped_y		164496	1					
ANR	164575	PtrMemberAccess	adev -> mapped_start		164496	1					
ANR	164576	Identifier	adev		164496	0					
ANR	164577	Identifier	mapped_start		164496	1					
ANR	164578	IdentifierDeclStatement	byte * bits ;	226:4:9877:9887	164496	6	True				
ANR	164579	IdentifierDecl	* bits		164496	0					
ANR	164580	IdentifierDeclType	byte *		164496	0					
ANR	164581	Identifier	bits		164496	1					
ANR	164582	IfStatement	if ( buffer_y >= adev -> height )		164496	7					
ANR	164583	Condition	buffer_y >= adev -> height	228:8:9898:9921	164496	0	True				
ANR	164584	RelationalExpression	buffer_y >= adev -> height		164496	0		>=			
ANR	164585	Identifier	buffer_y		164496	0					
ANR	164586	PtrMemberAccess	adev -> height		164496	1					
ANR	164587	Identifier	adev		164496	0					
ANR	164588	Identifier	height		164496	1					
ANR	164589	ExpressionStatement	buffer_y -= adev -> height	229:8:9932:9956	164496	1	True				
ANR	164590	AssignmentExpression	buffer_y -= adev -> height		164496	0		-=			
ANR	164591	Identifier	buffer_y		164496	0					
ANR	164592	PtrMemberAccess	adev -> height		164496	1					
ANR	164593	Identifier	adev		164496	0					
ANR	164594	Identifier	height		164496	1					
ANR	164595	ExpressionStatement	"bits = scan_line_base ( adev , buffer_y )"	230:4:9962:9999	164496	8	True				
ANR	164596	AssignmentExpression	"bits = scan_line_base ( adev , buffer_y )"		164496	0		=			
ANR	164597	Identifier	bits		164496	0					
ANR	164598	CallExpression	"scan_line_base ( adev , buffer_y )"		164496	1					
ANR	164599	Callee	scan_line_base		164496	0					
ANR	164600	Identifier	scan_line_base		164496	0					
ANR	164601	ArgumentList	adev		164496	1					
ANR	164602	Argument	adev		164496	0					
ANR	164603	Identifier	adev		164496	0					
ANR	164604	Argument	buffer_y		164496	1					
ANR	164605	Identifier	buffer_y		164496	0					
ANR	164606	CompoundStatement		25:8:909:918	164496	9					
ANR	164607	IdentifierDeclStatement	int alpha_mask = ~7 ;	240:8:10406:10425	164496	0	True				
ANR	164608	IdentifierDecl	alpha_mask = ~7		164496	0					
ANR	164609	IdentifierDeclType	int		164496	0					
ANR	164610	Identifier	alpha_mask		164496	1					
ANR	164611	AssignmentExpression	alpha_mask = ~7		164496	2		=			
ANR	164612	Identifier	~7		164496	0					
ANR	164613	Identifier	~7		164496	1					
ANR	164614	IdentifierDeclStatement	gs_int_rect bbox ;	241:8:10435:10451	164496	1	True				
ANR	164615	IdentifierDecl	bbox		164496	0					
ANR	164616	IdentifierDeclType	gs_int_rect		164496	0					
ANR	164617	Identifier	bbox		164496	1					
ANR	164618	IdentifierDeclStatement	int width ;	242:8:10461:10470	164496	2	True				
ANR	164619	IdentifierDecl	width		164496	0					
ANR	164620	IdentifierDeclType	int		164496	0					
ANR	164621	Identifier	width		164496	1					
ANR	164622	ExpressionStatement	"bits_bounding_box ( bits , block_height , adev -> raster , & bbox )"	244:8:10481:10539	164496	3	True				
ANR	164623	CallExpression	"bits_bounding_box ( bits , block_height , adev -> raster , & bbox )"		164496	0					
ANR	164624	Callee	bits_bounding_box		164496	0					
ANR	164625	Identifier	bits_bounding_box		164496	0					
ANR	164626	ArgumentList	bits		164496	1					
ANR	164627	Argument	bits		164496	0					
ANR	164628	Identifier	bits		164496	0					
ANR	164629	Argument	block_height		164496	1					
ANR	164630	Identifier	block_height		164496	0					
ANR	164631	Argument	adev -> raster		164496	2					
ANR	164632	PtrMemberAccess	adev -> raster		164496	0					
ANR	164633	Identifier	adev		164496	0					
ANR	164634	Identifier	raster		164496	1					
ANR	164635	Argument	& bbox		164496	3					
ANR	164636	UnaryOperationExpression	& bbox		164496	0					
ANR	164637	UnaryOperator	&		164496	0					
ANR	164638	Identifier	bbox		164496	1					
ANR	164639	ExpressionStatement	bbox . p . x &= alpha_mask	245:8:10549:10571	164496	4	True				
ANR	164640	AssignmentExpression	bbox . p . x &= alpha_mask		164496	0		&=			
ANR	164641	MemberAccess	bbox . p . x		164496	0					
ANR	164642	MemberAccess	bbox . p		164496	0					
ANR	164643	Identifier	bbox		164496	0					
ANR	164644	Identifier	p		164496	1					
ANR	164645	Identifier	x		164496	1					
ANR	164646	Identifier	alpha_mask		164496	1					
ANR	164647	ExpressionStatement	bbox . q . x = ( bbox . q . x + ~alpha_mask ) & alpha_mask	246:8:10581:10629	164496	5	True				
ANR	164648	AssignmentExpression	bbox . q . x = ( bbox . q . x + ~alpha_mask ) & alpha_mask		164496	0		=			
ANR	164649	MemberAccess	bbox . q . x		164496	0					
ANR	164650	MemberAccess	bbox . q		164496	0					
ANR	164651	Identifier	bbox		164496	0					
ANR	164652	Identifier	q		164496	1					
ANR	164653	Identifier	x		164496	1					
ANR	164654	BitAndExpression	( bbox . q . x + ~alpha_mask ) & alpha_mask		164496	1		&			
ANR	164655	AdditiveExpression	bbox . q . x + ~alpha_mask		164496	0		+			
ANR	164656	MemberAccess	bbox . q . x		164496	0					
ANR	164657	MemberAccess	bbox . q		164496	0					
ANR	164658	Identifier	bbox		164496	0					
ANR	164659	Identifier	q		164496	1					
ANR	164660	Identifier	x		164496	1					
ANR	164661	Identifier	~alpha_mask		164496	1					
ANR	164662	Identifier	alpha_mask		164496	1					
ANR	164663	ExpressionStatement	width = bbox . q . x - bbox . p . x	247:8:10639:10666	164496	6	True				
ANR	164664	AssignmentExpression	width = bbox . q . x - bbox . p . x		164496	0		=			
ANR	164665	Identifier	width		164496	0					
ANR	164666	AdditiveExpression	bbox . q . x - bbox . p . x		164496	1		-			
ANR	164667	MemberAccess	bbox . q . x		164496	0					
ANR	164668	MemberAccess	bbox . q		164496	0					
ANR	164669	Identifier	bbox		164496	0					
ANR	164670	Identifier	q		164496	1					
ANR	164671	Identifier	x		164496	1					
ANR	164672	MemberAccess	bbox . p . x		164496	1					
ANR	164673	MemberAccess	bbox . p		164496	0					
ANR	164674	Identifier	bbox		164496	0					
ANR	164675	Identifier	p		164496	1					
ANR	164676	Identifier	x		164496	1					
ANR	164677	ExpressionStatement	"bits_compress_scaled ( bits , bbox . p . x , width , block_height , adev -> raster , bits , draster , & adev -> log2_scale , adev -> log2_alpha_bits )"	248:8:10676:10862	164496	7	True				
ANR	164678	CallExpression	"bits_compress_scaled ( bits , bbox . p . x , width , block_height , adev -> raster , bits , draster , & adev -> log2_scale , adev -> log2_alpha_bits )"		164496	0					
ANR	164679	Callee	bits_compress_scaled		164496	0					
ANR	164680	Identifier	bits_compress_scaled		164496	0					
ANR	164681	ArgumentList	bits		164496	1					
ANR	164682	Argument	bits		164496	0					
ANR	164683	Identifier	bits		164496	0					
ANR	164684	Argument	bbox . p . x		164496	1					
ANR	164685	MemberAccess	bbox . p . x		164496	0					
ANR	164686	MemberAccess	bbox . p		164496	0					
ANR	164687	Identifier	bbox		164496	0					
ANR	164688	Identifier	p		164496	1					
ANR	164689	Identifier	x		164496	1					
ANR	164690	Argument	width		164496	2					
ANR	164691	Identifier	width		164496	0					
ANR	164692	Argument	block_height		164496	3					
ANR	164693	Identifier	block_height		164496	0					
ANR	164694	Argument	adev -> raster		164496	4					
ANR	164695	PtrMemberAccess	adev -> raster		164496	0					
ANR	164696	Identifier	adev		164496	0					
ANR	164697	Identifier	raster		164496	1					
ANR	164698	Argument	bits		164496	5					
ANR	164699	Identifier	bits		164496	0					
ANR	164700	Argument	draster		164496	6					
ANR	164701	Identifier	draster		164496	0					
ANR	164702	Argument	& adev -> log2_scale		164496	7					
ANR	164703	UnaryOperationExpression	& adev -> log2_scale		164496	0					
ANR	164704	UnaryOperator	&		164496	0					
ANR	164705	PtrMemberAccess	adev -> log2_scale		164496	1					
ANR	164706	Identifier	adev		164496	0					
ANR	164707	Identifier	log2_scale		164496	1					
ANR	164708	Argument	adev -> log2_alpha_bits		164496	8					
ANR	164709	PtrMemberAccess	adev -> log2_alpha_bits		164496	0					
ANR	164710	Identifier	adev		164496	0					
ANR	164711	Identifier	log2_alpha_bits		164496	1					
ANR	164712	IfStatement	if ( adev -> save_hl_color == NULL )		164496	8					
ANR	164713	Condition	adev -> save_hl_color == NULL	252:12:10929:10955	164496	0	True				
ANR	164714	EqualityExpression	adev -> save_hl_color == NULL		164496	0		==			
ANR	164715	PtrMemberAccess	adev -> save_hl_color		164496	0					
ANR	164716	Identifier	adev		164496	0					
ANR	164717	Identifier	save_hl_color		164496	1					
ANR	164718	Identifier	NULL		164496	1					
ANR	164719	CompoundStatement		35:41:1406:1406	164496	1					
ANR	164720	ReturnStatement	"return ( * dev_proc ( target , copy_alpha ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_color , alpha_bits ) ;"	253:12:10973:11492	164496	0	True				
ANR	164721	CallExpression	"( * dev_proc ( target , copy_alpha ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_color , alpha_bits )"		164496	0					
ANR	164722	Callee	"* dev_proc ( target , copy_alpha )"		164496	0					
ANR	164723	UnaryOperationExpression	"* dev_proc ( target , copy_alpha )"		164496	0					
ANR	164724	UnaryOperator	*		164496	0					
ANR	164725	CallExpression	"dev_proc ( target , copy_alpha )"		164496	1					
ANR	164726	Callee	dev_proc		164496	0					
ANR	164727	Identifier	dev_proc		164496	0					
ANR	164728	ArgumentList	target		164496	1					
ANR	164729	Argument	target		164496	0					
ANR	164730	Identifier	target		164496	0					
ANR	164731	Argument	copy_alpha		164496	1					
ANR	164732	Identifier	copy_alpha		164496	0					
ANR	164733	ArgumentList	target		164496	1					
ANR	164734	Argument	target		164496	0					
ANR	164735	Identifier	target		164496	0					
ANR	164736	Argument	bits		164496	1					
ANR	164737	Identifier	bits		164496	0					
ANR	164738	Argument	0		164496	2					
ANR	164739	PrimaryExpression	0		164496	0					
ANR	164740	Argument	draster		164496	3					
ANR	164741	Identifier	draster		164496	0					
ANR	164742	Argument	gx_no_bitmap_id		164496	4					
ANR	164743	Identifier	gx_no_bitmap_id		164496	0					
ANR	164744	Argument	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		164496	5					
ANR	164745	ShiftExpression	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		164496	0		>>			
ANR	164746	AdditiveExpression	adev -> mapped_x + bbox . p . x		164496	0		+			
ANR	164747	PtrMemberAccess	adev -> mapped_x		164496	0					
ANR	164748	Identifier	adev		164496	0					
ANR	164749	Identifier	mapped_x		164496	1					
ANR	164750	MemberAccess	bbox . p . x		164496	1					
ANR	164751	MemberAccess	bbox . p		164496	0					
ANR	164752	Identifier	bbox		164496	0					
ANR	164753	Identifier	p		164496	1					
ANR	164754	Identifier	x		164496	1					
ANR	164755	MemberAccess	adev -> log2_scale . x		164496	1					
ANR	164756	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164757	Identifier	adev		164496	0					
ANR	164758	Identifier	log2_scale		164496	1					
ANR	164759	Identifier	x		164496	1					
ANR	164760	Argument	y >> adev -> log2_scale . y		164496	6					
ANR	164761	ShiftExpression	y >> adev -> log2_scale . y		164496	0		>>			
ANR	164762	Identifier	y		164496	0					
ANR	164763	MemberAccess	adev -> log2_scale . y		164496	1					
ANR	164764	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164765	Identifier	adev		164496	0					
ANR	164766	Identifier	log2_scale		164496	1					
ANR	164767	Identifier	y		164496	1					
ANR	164768	Argument	width >> adev -> log2_scale . x		164496	7					
ANR	164769	ShiftExpression	width >> adev -> log2_scale . x		164496	0		>>			
ANR	164770	Identifier	width		164496	0					
ANR	164771	MemberAccess	adev -> log2_scale . x		164496	1					
ANR	164772	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164773	Identifier	adev		164496	0					
ANR	164774	Identifier	log2_scale		164496	1					
ANR	164775	Identifier	x		164496	1					
ANR	164776	Argument	1		164496	8					
ANR	164777	PrimaryExpression	1		164496	0					
ANR	164778	Argument	adev -> save_color		164496	9					
ANR	164779	PtrMemberAccess	adev -> save_color		164496	0					
ANR	164780	Identifier	adev		164496	0					
ANR	164781	Identifier	save_color		164496	1					
ANR	164782	Argument	alpha_bits		164496	10					
ANR	164783	Identifier	alpha_bits		164496	0					
ANR	164784	ElseStatement	else		164496	0					
ANR	164785	CompoundStatement		43:15:1957:1957	164496	0					
ANR	164786	ReturnStatement	"return ( * dev_proc ( target , copy_alpha_hl_color ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_hl_color , alpha_bits ) ;"	261:12:11523:12054	164496	0	True				
ANR	164787	CallExpression	"( * dev_proc ( target , copy_alpha_hl_color ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_hl_color , alpha_bits )"		164496	0					
ANR	164788	Callee	"* dev_proc ( target , copy_alpha_hl_color )"		164496	0					
ANR	164789	UnaryOperationExpression	"* dev_proc ( target , copy_alpha_hl_color )"		164496	0					
ANR	164790	UnaryOperator	*		164496	0					
ANR	164791	CallExpression	"dev_proc ( target , copy_alpha_hl_color )"		164496	1					
ANR	164792	Callee	dev_proc		164496	0					
ANR	164793	Identifier	dev_proc		164496	0					
ANR	164794	ArgumentList	target		164496	1					
ANR	164795	Argument	target		164496	0					
ANR	164796	Identifier	target		164496	0					
ANR	164797	Argument	copy_alpha_hl_color		164496	1					
ANR	164798	Identifier	copy_alpha_hl_color		164496	0					
ANR	164799	ArgumentList	target		164496	1					
ANR	164800	Argument	target		164496	0					
ANR	164801	Identifier	target		164496	0					
ANR	164802	Argument	bits		164496	1					
ANR	164803	Identifier	bits		164496	0					
ANR	164804	Argument	0		164496	2					
ANR	164805	PrimaryExpression	0		164496	0					
ANR	164806	Argument	draster		164496	3					
ANR	164807	Identifier	draster		164496	0					
ANR	164808	Argument	gx_no_bitmap_id		164496	4					
ANR	164809	Identifier	gx_no_bitmap_id		164496	0					
ANR	164810	Argument	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		164496	5					
ANR	164811	ShiftExpression	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		164496	0		>>			
ANR	164812	AdditiveExpression	adev -> mapped_x + bbox . p . x		164496	0		+			
ANR	164813	PtrMemberAccess	adev -> mapped_x		164496	0					
ANR	164814	Identifier	adev		164496	0					
ANR	164815	Identifier	mapped_x		164496	1					
ANR	164816	MemberAccess	bbox . p . x		164496	1					
ANR	164817	MemberAccess	bbox . p		164496	0					
ANR	164818	Identifier	bbox		164496	0					
ANR	164819	Identifier	p		164496	1					
ANR	164820	Identifier	x		164496	1					
ANR	164821	MemberAccess	adev -> log2_scale . x		164496	1					
ANR	164822	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164823	Identifier	adev		164496	0					
ANR	164824	Identifier	log2_scale		164496	1					
ANR	164825	Identifier	x		164496	1					
ANR	164826	Argument	y >> adev -> log2_scale . y		164496	6					
ANR	164827	ShiftExpression	y >> adev -> log2_scale . y		164496	0		>>			
ANR	164828	Identifier	y		164496	0					
ANR	164829	MemberAccess	adev -> log2_scale . y		164496	1					
ANR	164830	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164831	Identifier	adev		164496	0					
ANR	164832	Identifier	log2_scale		164496	1					
ANR	164833	Identifier	y		164496	1					
ANR	164834	Argument	width >> adev -> log2_scale . x		164496	7					
ANR	164835	ShiftExpression	width >> adev -> log2_scale . x		164496	0		>>			
ANR	164836	Identifier	width		164496	0					
ANR	164837	MemberAccess	adev -> log2_scale . x		164496	1					
ANR	164838	PtrMemberAccess	adev -> log2_scale		164496	0					
ANR	164839	Identifier	adev		164496	0					
ANR	164840	Identifier	log2_scale		164496	1					
ANR	164841	Identifier	x		164496	1					
ANR	164842	Argument	1		164496	8					
ANR	164843	PrimaryExpression	1		164496	0					
ANR	164844	Argument	adev -> save_hl_color		164496	9					
ANR	164845	PtrMemberAccess	adev -> save_hl_color		164496	0					
ANR	164846	Identifier	adev		164496	0					
ANR	164847	Identifier	save_hl_color		164496	1					
ANR	164848	Argument	alpha_bits		164496	10					
ANR	164849	Identifier	alpha_bits		164496	0					
ANR	164850	ReturnType	static int		164496	1					
ANR	164851	Identifier	abuf_flush_block		164496	2					
ANR	164852	ParameterList	"gx_device_memory * adev , int y"		164496	3					
ANR	164853	Parameter	gx_device_memory * adev	217:17:9519:9541	164496	0	True				
ANR	164854	ParameterType	gx_device_memory *		164496	0					
ANR	164855	Identifier	adev		164496	1					
ANR	164856	Parameter	int y	217:42:9544:9548	164496	1	True				
ANR	164857	ParameterType	int		164496	0					
ANR	164858	Identifier	y		164496	1					
ANR	164859	CFGEntryNode	ENTRY		164496		True				
ANR	164860	CFGExitNode	EXIT		164496		True				
ANR	164861	Symbol	adev -> log2_scale . x		164496						
ANR	164862	Symbol	adev -> mapped_y		164496						
ANR	164863	Symbol	adev -> log2_scale . y		164496						
ANR	164864	Symbol	* dev_proc		164496						
ANR	164865	Symbol	bbox		164496						
ANR	164866	Symbol	ddepth		164496						
ANR	164867	Symbol	block_height		164496						
ANR	164868	Symbol	bbox . q . x		164496						
ANR	164869	Symbol	"* dev_proc ( target , copy_alpha_hl_color )"		164496						
ANR	164870	Symbol	adev -> raster		164496						
ANR	164871	Symbol	* adev		164496						
ANR	164872	Symbol	dev_proc		164496						
ANR	164873	Symbol	adev -> save_color		164496						
ANR	164874	Symbol	copy_alpha		164496						
ANR	164875	Symbol	adev -> mapped_x		164496						
ANR	164876	Symbol	adev -> height		164496						
ANR	164877	Symbol	alpha_mask		164496						
ANR	164878	Symbol	"* dev_proc ( target , copy_alpha )"		164496						
ANR	164879	Symbol	bbox . q		164496						
ANR	164880	Symbol	NULL		164496						
ANR	164881	Symbol	draster		164496						
ANR	164882	Symbol	adev -> target		164496						
ANR	164883	Symbol	bits		164496						
ANR	164884	Symbol	~alpha_mask		164496						
ANR	164885	Symbol	alpha_bits		164496						
ANR	164886	Symbol	& bbox		164496						
ANR	164887	Symbol	bbox . p		164496						
ANR	164888	Symbol	& adev -> log2_scale		164496						
ANR	164889	Symbol	copy_alpha_hl_color		164496						
ANR	164890	Symbol	target		164496						
ANR	164891	Symbol	adev -> log2_alpha_bits		164496						
ANR	164892	Symbol	bitmap_raster		164496						
ANR	164893	Symbol	gx_no_bitmap_id		164496						
ANR	164894	Symbol	adev -> mapped_start		164496						
ANR	164895	Symbol	adev -> save_hl_color		164496						
ANR	164896	Symbol	scan_line_base		164496						
ANR	164897	Symbol	width		164496						
ANR	164898	Symbol	adev		164496						
ANR	164899	Symbol	y		164496						
ANR	164900	Symbol	~7		164496						
ANR	164901	Symbol	adev -> log2_scale		164496						
ANR	164902	Symbol	buffer_y		164496						
ANR	164903	Symbol	adev -> width		164496						
ANR	164904	Symbol	bbox . p . x		164496						
ANR	164905	Function	abuf_flush	272:0:12105:12442							
ANR	164906	FunctionDef	abuf_flush (gx_device_memory * adev)		164905	0					
ANR	164907	CompoundStatement		274:0:12152:12442	164905	0					
ANR	164908	IdentifierDeclStatement	"int y , code = 0 ;"	275:4:12158:12173	164905	0	True				
ANR	164909	IdentifierDecl	y		164905	0					
ANR	164910	IdentifierDeclType	int		164905	0					
ANR	164911	Identifier	y		164905	1					
ANR	164912	IdentifierDecl	code = 0		164905	1					
ANR	164913	IdentifierDeclType	int		164905	0					
ANR	164914	Identifier	code		164905	1					
ANR	164915	AssignmentExpression	code = 0		164905	2		=			
ANR	164916	Identifier	code		164905	0					
ANR	164917	PrimaryExpression	0		164905	1					
ANR	164918	IdentifierDeclStatement	int block_height = 1 << adev -> log2_scale . y ;	276:4:12179:12221	164905	1	True				
ANR	164919	IdentifierDecl	block_height = 1 << adev -> log2_scale . y		164905	0					
ANR	164920	IdentifierDeclType	int		164905	0					
ANR	164921	Identifier	block_height		164905	1					
ANR	164922	AssignmentExpression	block_height = 1 << adev -> log2_scale . y		164905	2		=			
ANR	164923	Identifier	block_height		164905	0					
ANR	164924	ShiftExpression	1 << adev -> log2_scale . y		164905	1		<<			
ANR	164925	PrimaryExpression	1		164905	0					
ANR	164926	MemberAccess	adev -> log2_scale . y		164905	1					
ANR	164927	PtrMemberAccess	adev -> log2_scale		164905	0					
ANR	164928	Identifier	adev		164905	0					
ANR	164929	Identifier	log2_scale		164905	1					
ANR	164930	Identifier	y		164905	1					
ANR	164931	ForStatement	for ( y = 0 ; y < adev -> mapped_height ; y += block_height )		164905	2					
ANR	164932	ForInit	y = 0 ;	278:9:12233:12238	164905	0	True				
ANR	164933	AssignmentExpression	y = 0		164905	0		=			
ANR	164934	Identifier	y		164905	0					
ANR	164935	PrimaryExpression	0		164905	1					
ANR	164936	Condition	y < adev -> mapped_height	278:16:12240:12262	164905	1	True				
ANR	164937	RelationalExpression	y < adev -> mapped_height		164905	0		<			
ANR	164938	Identifier	y		164905	0					
ANR	164939	PtrMemberAccess	adev -> mapped_height		164905	1					
ANR	164940	Identifier	adev		164905	0					
ANR	164941	Identifier	mapped_height		164905	1					
ANR	164942	AssignmentExpression	y += block_height	278:41:12265:12281	164905	2	True	+=			
ANR	164943	Identifier	y		164905	0					
ANR	164944	Identifier	block_height		164905	1					
ANR	164945	IfStatement	"if ( ( code = abuf_flush_block ( adev , adev -> mapped_y + y ) ) < 0 )"		164905	3					
ANR	164946	Condition	"( code = abuf_flush_block ( adev , adev -> mapped_y + y ) ) < 0"	279:12:12296:12350	164905	0	True				
ANR	164947	RelationalExpression	"( code = abuf_flush_block ( adev , adev -> mapped_y + y ) ) < 0"		164905	0		<			
ANR	164948	AssignmentExpression	"code = abuf_flush_block ( adev , adev -> mapped_y + y )"		164905	0		=			
ANR	164949	Identifier	code		164905	0					
ANR	164950	CallExpression	"abuf_flush_block ( adev , adev -> mapped_y + y )"		164905	1					
ANR	164951	Callee	abuf_flush_block		164905	0					
ANR	164952	Identifier	abuf_flush_block		164905	0					
ANR	164953	ArgumentList	adev		164905	1					
ANR	164954	Argument	adev		164905	0					
ANR	164955	Identifier	adev		164905	0					
ANR	164956	Argument	adev -> mapped_y + y		164905	1					
ANR	164957	AdditiveExpression	adev -> mapped_y + y		164905	0		+			
ANR	164958	PtrMemberAccess	adev -> mapped_y		164905	0					
ANR	164959	Identifier	adev		164905	0					
ANR	164960	Identifier	mapped_y		164905	1					
ANR	164961	Identifier	y		164905	1					
ANR	164962	PrimaryExpression	0		164905	1					
ANR	164963	ReturnStatement	return code ;	280:12:12365:12376	164905	1	True				
ANR	164964	Identifier	code		164905	0					
ANR	164965	ExpressionStatement	adev -> mapped_height = adev -> mapped_start = 0	281:4:12382:12426	164905	3	True				
ANR	164966	AssignmentExpression	adev -> mapped_height = adev -> mapped_start = 0		164905	0		=			
ANR	164967	PtrMemberAccess	adev -> mapped_height		164905	0					
ANR	164968	Identifier	adev		164905	0					
ANR	164969	Identifier	mapped_height		164905	1					
ANR	164970	AssignmentExpression	adev -> mapped_start = 0		164905	1		=			
ANR	164971	PtrMemberAccess	adev -> mapped_start		164905	0					
ANR	164972	Identifier	adev		164905	0					
ANR	164973	Identifier	mapped_start		164905	1					
ANR	164974	PrimaryExpression	0		164905	1					
ANR	164975	ReturnStatement	return 0 ;	282:4:12432:12440	164905	4	True				
ANR	164976	PrimaryExpression	0		164905	0					
ANR	164977	ReturnType	static int		164905	1					
ANR	164978	Identifier	abuf_flush		164905	2					
ANR	164979	ParameterList	gx_device_memory * adev		164905	3					
ANR	164980	Parameter	gx_device_memory * adev	273:11:12127:12149	164905	0	True				
ANR	164981	ParameterType	gx_device_memory *		164905	0					
ANR	164982	Identifier	adev		164905	1					
ANR	164983	CFGEntryNode	ENTRY		164905		True				
ANR	164984	CFGExitNode	EXIT		164905		True				
ANR	164985	Symbol	code		164905						
ANR	164986	Symbol	abuf_flush_block		164905						
ANR	164987	Symbol	adev -> mapped_start		164905						
ANR	164988	Symbol	adev -> mapped_y		164905						
ANR	164989	Symbol	adev -> log2_scale . y		164905						
ANR	164990	Symbol	* adev		164905						
ANR	164991	Symbol	adev -> mapped_height		164905						
ANR	164992	Symbol	adev		164905						
ANR	164993	Symbol	y		164905						
ANR	164994	Symbol	adev -> log2_scale		164905						
ANR	164995	Symbol	block_height		164905						
ANR	164996	Function	mem_abuf_close	286:0:12490:12696							
ANR	164997	FunctionDef	mem_abuf_close (gx_device * dev)		164996	0					
ANR	164998	CompoundStatement		288:0:12533:12696	164996	0					
ANR	164999	Statement	gx_device_memory	289:4:12539:12554	164996	0	True				
ANR	165000	Statement	*	289:21:12556:12556	164996	1	True				
ANR	165001	Statement	const	289:23:12558:12562	164996	2	True				
ANR	165002	ExpressionStatement	mdev = ( gx_device_memory * ) dev	289:29:12564:12594	164996	3	True				
ANR	165003	AssignmentExpression	mdev = ( gx_device_memory * ) dev		164996	0		=			
ANR	165004	Identifier	mdev		164996	0					
ANR	165005	CastExpression	( gx_device_memory * ) dev		164996	1					
ANR	165006	CastTarget	gx_device_memory *		164996	0					
ANR	165007	Identifier	dev		164996	1					
ANR	165008	IdentifierDeclStatement	int code = abuf_flush ( mdev ) ;	290:4:12600:12627	164996	4	True				
ANR	165009	IdentifierDecl	code = abuf_flush ( mdev )		164996	0					
ANR	165010	IdentifierDeclType	int		164996	0					
ANR	165011	Identifier	code		164996	1					
ANR	165012	AssignmentExpression	code = abuf_flush ( mdev )		164996	2		=			
ANR	165013	Identifier	code		164996	0					
ANR	165014	CallExpression	abuf_flush ( mdev )		164996	1					
ANR	165015	Callee	abuf_flush		164996	0					
ANR	165016	Identifier	abuf_flush		164996	0					
ANR	165017	ArgumentList	mdev		164996	1					
ANR	165018	Argument	mdev		164996	0					
ANR	165019	Identifier	mdev		164996	0					
ANR	165020	IfStatement	if ( code < 0 )		164996	5					
ANR	165021	Condition	code < 0	292:8:12638:12645	164996	0	True				
ANR	165022	RelationalExpression	code < 0		164996	0		<			
ANR	165023	Identifier	code		164996	0					
ANR	165024	PrimaryExpression	0		164996	1					
ANR	165025	ReturnStatement	return code ;	293:8:12656:12667	164996	1	True				
ANR	165026	Identifier	code		164996	0					
ANR	165027	ReturnStatement	return mem_close ( dev ) ;	294:4:12673:12694	164996	6	True				
ANR	165028	CallExpression	mem_close ( dev )		164996	0					
ANR	165029	Callee	mem_close		164996	0					
ANR	165030	Identifier	mem_close		164996	0					
ANR	165031	ArgumentList	dev		164996	1					
ANR	165032	Argument	dev		164996	0					
ANR	165033	Identifier	dev		164996	0					
ANR	165034	ReturnType	static int		164996	1					
ANR	165035	Identifier	mem_abuf_close		164996	2					
ANR	165036	ParameterList	gx_device * dev		164996	3					
ANR	165037	Parameter	gx_device * dev	287:15:12516:12530	164996	0	True				
ANR	165038	ParameterType	gx_device *		164996	0					
ANR	165039	Identifier	dev		164996	1					
ANR	165040	CFGEntryNode	ENTRY		164996		True				
ANR	165041	CFGExitNode	EXIT		164996		True				
ANR	165042	Symbol	code		164996						
ANR	165043	Symbol	dev		164996						
ANR	165044	Symbol	mdev		164996						
ANR	165045	Symbol	mem_close		164996						
ANR	165046	Symbol	abuf_flush		164996						
ANR	165047	ClassDef	y_transfer_s	301:8:12863:12979							
ANR	165048	DeclStmt									
ANR	165049	Decl							int	int	y_next
ANR	165050	DeclStmt									
ANR	165051	Decl							int	int	height_left
ANR	165052	DeclStmt									
ANR	165053	Decl							int	int	transfer_y
ANR	165054	DeclStmt									
ANR	165055	Decl							int	int	transfer_height
ANR	165056	DeclStmt									
ANR	165057	Decl							y_transfer_s	y_transfer_s	y_transfer
ANR	165058	Function	y_transfer_init	307:0:12981:13481							
ANR	165059	FunctionDef	"y_transfer_init (y_transfer * pyt , gx_device * dev , int ty , int th)"		165058	0					
ANR	165060	CompoundStatement		309:0:13060:13481	165058	0					
ANR	165061	Statement	gx_device_memory	310:4:13066:13081	165058	0	True				
ANR	165062	Statement	*	310:21:13083:13083	165058	1	True				
ANR	165063	Statement	const	310:23:13085:13089	165058	2	True				
ANR	165064	ExpressionStatement	mdev = ( gx_device_memory * ) dev	310:29:13091:13121	165058	3	True				
ANR	165065	AssignmentExpression	mdev = ( gx_device_memory * ) dev		165058	0		=			
ANR	165066	Identifier	mdev		165058	0					
ANR	165067	CastExpression	( gx_device_memory * ) dev		165058	1					
ANR	165068	CastTarget	gx_device_memory *		165058	0					
ANR	165069	Identifier	dev		165058	1					
ANR	165070	IdentifierDeclStatement	int bh = 1 << mdev -> log2_scale . y ;	311:4:13127:13159	165058	4	True				
ANR	165071	IdentifierDecl	bh = 1 << mdev -> log2_scale . y		165058	0					
ANR	165072	IdentifierDeclType	int		165058	0					
ANR	165073	Identifier	bh		165058	1					
ANR	165074	AssignmentExpression	bh = 1 << mdev -> log2_scale . y		165058	2		=			
ANR	165075	Identifier	bh		165058	0					
ANR	165076	ShiftExpression	1 << mdev -> log2_scale . y		165058	1		<<			
ANR	165077	PrimaryExpression	1		165058	0					
ANR	165078	MemberAccess	mdev -> log2_scale . y		165058	1					
ANR	165079	PtrMemberAccess	mdev -> log2_scale		165058	0					
ANR	165080	Identifier	mdev		165058	0					
ANR	165081	Identifier	log2_scale		165058	1					
ANR	165082	Identifier	y		165058	1					
ANR	165083	IfStatement	if ( ty < mdev -> mapped_y || ty > mdev -> mapped_y + mdev -> mapped_height )		165058	5					
ANR	165084	Condition	ty < mdev -> mapped_y || ty > mdev -> mapped_y + mdev -> mapped_height	313:8:13170:13233	165058	0	True				
ANR	165085	OrExpression	ty < mdev -> mapped_y || ty > mdev -> mapped_y + mdev -> mapped_height		165058	0		||			
ANR	165086	RelationalExpression	ty < mdev -> mapped_y		165058	0		<			
ANR	165087	Identifier	ty		165058	0					
ANR	165088	PtrMemberAccess	mdev -> mapped_y		165058	1					
ANR	165089	Identifier	mdev		165058	0					
ANR	165090	Identifier	mapped_y		165058	1					
ANR	165091	RelationalExpression	ty > mdev -> mapped_y + mdev -> mapped_height		165058	1		>			
ANR	165092	Identifier	ty		165058	0					
ANR	165093	AdditiveExpression	mdev -> mapped_y + mdev -> mapped_height		165058	1		+			
ANR	165094	PtrMemberAccess	mdev -> mapped_y		165058	0					
ANR	165095	Identifier	mdev		165058	0					
ANR	165096	Identifier	mapped_y		165058	1					
ANR	165097	PtrMemberAccess	mdev -> mapped_height		165058	1					
ANR	165098	Identifier	mdev		165058	0					
ANR	165099	Identifier	mapped_height		165058	1					
ANR	165100	CompoundStatement		5:74:175:175	165058	1					
ANR	165101	ExpressionStatement	abuf_flush ( mdev )	314:8:13246:13262	165058	0	True				
ANR	165102	CallExpression	abuf_flush ( mdev )		165058	0					
ANR	165103	Callee	abuf_flush		165058	0					
ANR	165104	Identifier	abuf_flush		165058	0					
ANR	165105	ArgumentList	mdev		165058	1					
ANR	165106	Argument	mdev		165058	0					
ANR	165107	Identifier	mdev		165058	0					
ANR	165108	ExpressionStatement	mdev -> mapped_y = ty & - bh	315:8:13272:13297	165058	1	True				
ANR	165109	AssignmentExpression	mdev -> mapped_y = ty & - bh		165058	0		=			
ANR	165110	PtrMemberAccess	mdev -> mapped_y		165058	0					
ANR	165111	Identifier	mdev		165058	0					
ANR	165112	Identifier	mapped_y		165058	1					
ANR	165113	BitAndExpression	ty & - bh		165058	1		&			
ANR	165114	Identifier	ty		165058	0					
ANR	165115	UnaryOperationExpression	- bh		165058	1					
ANR	165116	UnaryOperator	-		165058	0					
ANR	165117	Identifier	bh		165058	1					
ANR	165118	ExpressionStatement	mdev -> mapped_height = bh	316:8:13307:13331	165058	2	True				
ANR	165119	AssignmentExpression	mdev -> mapped_height = bh		165058	0		=			
ANR	165120	PtrMemberAccess	mdev -> mapped_height		165058	0					
ANR	165121	Identifier	mdev		165058	0					
ANR	165122	Identifier	mapped_height		165058	1					
ANR	165123	Identifier	bh		165058	1					
ANR	165124	ExpressionStatement	"memset ( scan_line_base ( mdev , 0 ) , 0 , bh * mdev -> raster )"	317:8:13341:13394	165058	3	True				
ANR	165125	CallExpression	"memset ( scan_line_base ( mdev , 0 ) , 0 , bh * mdev -> raster )"		165058	0					
ANR	165126	Callee	memset		165058	0					
ANR	165127	Identifier	memset		165058	0					
ANR	165128	ArgumentList	"scan_line_base ( mdev , 0 )"		165058	1					
ANR	165129	Argument	"scan_line_base ( mdev , 0 )"		165058	0					
ANR	165130	CallExpression	"scan_line_base ( mdev , 0 )"		165058	0					
ANR	165131	Callee	scan_line_base		165058	0					
ANR	165132	Identifier	scan_line_base		165058	0					
ANR	165133	ArgumentList	mdev		165058	1					
ANR	165134	Argument	mdev		165058	0					
ANR	165135	Identifier	mdev		165058	0					
ANR	165136	Argument	0		165058	1					
ANR	165137	PrimaryExpression	0		165058	0					
ANR	165138	Argument	0		165058	1					
ANR	165139	PrimaryExpression	0		165058	0					
ANR	165140	Argument	bh * mdev -> raster		165058	2					
ANR	165141	MultiplicativeExpression	bh * mdev -> raster		165058	0		*			
ANR	165142	Identifier	bh		165058	0					
ANR	165143	PtrMemberAccess	mdev -> raster		165058	1					
ANR	165144	Identifier	mdev		165058	0					
ANR	165145	Identifier	raster		165058	1					
ANR	165146	ExpressionStatement	pyt -> y_next = ty	319:4:13406:13422	165058	6	True				
ANR	165147	AssignmentExpression	pyt -> y_next = ty		165058	0		=			
ANR	165148	PtrMemberAccess	pyt -> y_next		165058	0					
ANR	165149	Identifier	pyt		165058	0					
ANR	165150	Identifier	y_next		165058	1					
ANR	165151	Identifier	ty		165058	1					
ANR	165152	ExpressionStatement	pyt -> height_left = th	320:4:13428:13449	165058	7	True				
ANR	165153	AssignmentExpression	pyt -> height_left = th		165058	0		=			
ANR	165154	PtrMemberAccess	pyt -> height_left		165058	0					
ANR	165155	Identifier	pyt		165058	0					
ANR	165156	Identifier	height_left		165058	1					
ANR	165157	Identifier	th		165058	1					
ANR	165158	ExpressionStatement	pyt -> transfer_height = 0	321:4:13455:13479	165058	8	True				
ANR	165159	AssignmentExpression	pyt -> transfer_height = 0		165058	0		=			
ANR	165160	PtrMemberAccess	pyt -> transfer_height		165058	0					
ANR	165161	Identifier	pyt		165058	0					
ANR	165162	Identifier	transfer_height		165058	1					
ANR	165163	PrimaryExpression	0		165058	1					
ANR	165164	ReturnType	static void		165058	1					
ANR	165165	Identifier	y_transfer_init		165058	2					
ANR	165166	ParameterList	"y_transfer * pyt , gx_device * dev , int ty , int th"		165058	3					
ANR	165167	Parameter	y_transfer * pyt	308:16:13009:13024	165058	0	True				
ANR	165168	ParameterType	y_transfer *		165058	0					
ANR	165169	Identifier	pyt		165058	1					
ANR	165170	Parameter	gx_device * dev	308:34:13027:13041	165058	1	True				
ANR	165171	ParameterType	gx_device *		165058	0					
ANR	165172	Identifier	dev		165058	1					
ANR	165173	Parameter	int ty	308:51:13044:13049	165058	2	True				
ANR	165174	ParameterType	int		165058	0					
ANR	165175	Identifier	ty		165058	1					
ANR	165176	Parameter	int th	308:59:13052:13057	165058	3	True				
ANR	165177	ParameterType	int		165058	0					
ANR	165178	Identifier	th		165058	1					
ANR	165179	CFGEntryNode	ENTRY		165058		True				
ANR	165180	CFGExitNode	EXIT		165058		True				
ANR	165181	Symbol	ty		165058						
ANR	165182	Symbol	bh		165058						
ANR	165183	Symbol	pyt -> height_left		165058						
ANR	165184	Symbol	pyt		165058						
ANR	165185	Symbol	pyt -> y_next		165058						
ANR	165186	Symbol	pyt -> transfer_height		165058						
ANR	165187	Symbol	mdev -> log2_scale		165058						
ANR	165188	Symbol	mdev -> raster		165058						
ANR	165189	Symbol	mdev -> mapped_y		165058						
ANR	165190	Symbol	mdev -> mapped_height		165058						
ANR	165191	Symbol	dev		165058						
ANR	165192	Symbol	th		165058						
ANR	165193	Symbol	* pyt		165058						
ANR	165194	Symbol	scan_line_base		165058						
ANR	165195	Symbol	mdev		165058						
ANR	165196	Symbol	mdev -> log2_scale . y		165058						
ANR	165197	Symbol	* mdev		165058						
ANR	165198	Function	y_transfer_next	324:0:13554:15205							
ANR	165199	FunctionDef	"y_transfer_next (y_transfer * pyt , gx_device * dev)"		165198	0					
ANR	165200	CompoundStatement		326:0:13616:15205	165198	0					
ANR	165201	Statement	gx_device_memory	327:4:13622:13637	165198	0	True				
ANR	165202	Statement	*	327:21:13639:13639	165198	1	True				
ANR	165203	Statement	const	327:23:13641:13645	165198	2	True				
ANR	165204	ExpressionStatement	mdev = ( gx_device_memory * ) dev	327:29:13647:13677	165198	3	True				
ANR	165205	AssignmentExpression	mdev = ( gx_device_memory * ) dev		165198	0		=			
ANR	165206	Identifier	mdev		165198	0					
ANR	165207	CastExpression	( gx_device_memory * ) dev		165198	1					
ANR	165208	CastTarget	gx_device_memory *		165198	0					
ANR	165209	Identifier	dev		165198	1					
ANR	165210	IdentifierDeclStatement	"int my = mdev -> mapped_y , mh = mdev -> mapped_height ;"	328:4:13683:13732	165198	4	True				
ANR	165211	IdentifierDecl	my = mdev -> mapped_y		165198	0					
ANR	165212	IdentifierDeclType	int		165198	0					
ANR	165213	Identifier	my		165198	1					
ANR	165214	AssignmentExpression	my = mdev -> mapped_y		165198	2		=			
ANR	165215	Identifier	my		165198	0					
ANR	165216	PtrMemberAccess	mdev -> mapped_y		165198	1					
ANR	165217	Identifier	mdev		165198	0					
ANR	165218	Identifier	mapped_y		165198	1					
ANR	165219	IdentifierDecl	mh = mdev -> mapped_height		165198	1					
ANR	165220	IdentifierDeclType	int		165198	0					
ANR	165221	Identifier	mh		165198	1					
ANR	165222	AssignmentExpression	mh = mdev -> mapped_height		165198	2		=			
ANR	165223	Identifier	mh		165198	0					
ANR	165224	PtrMemberAccess	mdev -> mapped_height		165198	1					
ANR	165225	Identifier	mdev		165198	0					
ANR	165226	Identifier	mapped_height		165198	1					
ANR	165227	IdentifierDeclStatement	int ms = mdev -> mapped_start ;	329:4:13738:13765	165198	5	True				
ANR	165228	IdentifierDecl	ms = mdev -> mapped_start		165198	0					
ANR	165229	IdentifierDeclType	int		165198	0					
ANR	165230	Identifier	ms		165198	1					
ANR	165231	AssignmentExpression	ms = mdev -> mapped_start		165198	2		=			
ANR	165232	Identifier	ms		165198	0					
ANR	165233	PtrMemberAccess	mdev -> mapped_start		165198	1					
ANR	165234	Identifier	mdev		165198	0					
ANR	165235	Identifier	mapped_start		165198	1					
ANR	165236	IdentifierDeclStatement	int ty = pyt -> y_next += pyt -> transfer_height ;	330:4:13771:13815	165198	6	True				
ANR	165237	IdentifierDecl	ty = pyt -> y_next += pyt -> transfer_height		165198	0					
ANR	165238	IdentifierDeclType	int		165198	0					
ANR	165239	Identifier	ty		165198	1					
ANR	165240	AssignmentExpression	ty = pyt -> y_next += pyt -> transfer_height		165198	2		=			
ANR	165241	Identifier	ty		165198	0					
ANR	165242	AssignmentExpression	pyt -> y_next += pyt -> transfer_height		165198	1		+=			
ANR	165243	PtrMemberAccess	pyt -> y_next		165198	0					
ANR	165244	Identifier	pyt		165198	0					
ANR	165245	Identifier	y_next		165198	1					
ANR	165246	PtrMemberAccess	pyt -> transfer_height		165198	1					
ANR	165247	Identifier	pyt		165198	0					
ANR	165248	Identifier	transfer_height		165198	1					
ANR	165249	IdentifierDeclStatement	int th = pyt -> height_left ;	331:4:13821:13846	165198	7	True				
ANR	165250	IdentifierDecl	th = pyt -> height_left		165198	0					
ANR	165251	IdentifierDeclType	int		165198	0					
ANR	165252	Identifier	th		165198	1					
ANR	165253	AssignmentExpression	th = pyt -> height_left		165198	2		=			
ANR	165254	Identifier	th		165198	0					
ANR	165255	PtrMemberAccess	pyt -> height_left		165198	1					
ANR	165256	Identifier	pyt		165198	0					
ANR	165257	Identifier	height_left		165198	1					
ANR	165258	IdentifierDeclStatement	int bh = 1 << mdev -> log2_scale . y ;	332:4:13852:13884	165198	8	True				
ANR	165259	IdentifierDecl	bh = 1 << mdev -> log2_scale . y		165198	0					
ANR	165260	IdentifierDeclType	int		165198	0					
ANR	165261	Identifier	bh		165198	1					
ANR	165262	AssignmentExpression	bh = 1 << mdev -> log2_scale . y		165198	2		=			
ANR	165263	Identifier	bh		165198	0					
ANR	165264	ShiftExpression	1 << mdev -> log2_scale . y		165198	1		<<			
ANR	165265	PrimaryExpression	1		165198	0					
ANR	165266	MemberAccess	mdev -> log2_scale . y		165198	1					
ANR	165267	PtrMemberAccess	mdev -> log2_scale		165198	0					
ANR	165268	Identifier	mdev		165198	0					
ANR	165269	Identifier	log2_scale		165198	1					
ANR	165270	Identifier	y		165198	1					
ANR	165271	IdentifierDeclStatement	"int tby , tbh ;"	335:4:13949:13961	165198	9	True				
ANR	165272	IdentifierDecl	tby		165198	0					
ANR	165273	IdentifierDeclType	int		165198	0					
ANR	165274	Identifier	tby		165198	1					
ANR	165275	IdentifierDecl	tbh		165198	1					
ANR	165276	IdentifierDeclType	int		165198	0					
ANR	165277	Identifier	tbh		165198	1					
ANR	165278	IfStatement	if ( ty == my + mh )		165198	10					
ANR	165279	Condition	ty == my + mh	337:8:13972:13984	165198	0	True				
ANR	165280	EqualityExpression	ty == my + mh		165198	0		==			
ANR	165281	Identifier	ty		165198	0					
ANR	165282	AdditiveExpression	my + mh		165198	1		+			
ANR	165283	Identifier	my		165198	0					
ANR	165284	Identifier	mh		165198	1					
ANR	165285	CompoundStatement		12:23:370:370	165198	1					
ANR	165286	IfStatement	if ( mh == mdev -> height )		165198	0					
ANR	165287	Condition	mh == mdev -> height	338:12:14031:14048	165198	0	True				
ANR	165288	EqualityExpression	mh == mdev -> height		165198	0		==			
ANR	165289	Identifier	mh		165198	0					
ANR	165290	PtrMemberAccess	mdev -> height		165198	1					
ANR	165291	Identifier	mdev		165198	0					
ANR	165292	Identifier	height		165198	1					
ANR	165293	CompoundStatement		14:12:448:485	165198	1					
ANR	165294	IdentifierDeclStatement	"int code = abuf_flush_block ( mdev , my ) ;"	339:12:14065:14102	165198	0	True				
ANR	165295	IdentifierDecl	"code = abuf_flush_block ( mdev , my )"		165198	0					
ANR	165296	IdentifierDeclType	int		165198	0					
ANR	165297	Identifier	code		165198	1					
ANR	165298	AssignmentExpression	"code = abuf_flush_block ( mdev , my )"		165198	2		=			
ANR	165299	Identifier	code		165198	0					
ANR	165300	CallExpression	"abuf_flush_block ( mdev , my )"		165198	1					
ANR	165301	Callee	abuf_flush_block		165198	0					
ANR	165302	Identifier	abuf_flush_block		165198	0					
ANR	165303	ArgumentList	mdev		165198	1					
ANR	165304	Argument	mdev		165198	0					
ANR	165305	Identifier	mdev		165198	0					
ANR	165306	Argument	my		165198	1					
ANR	165307	Identifier	my		165198	0					
ANR	165308	IfStatement	if ( code < 0 )		165198	1					
ANR	165309	Condition	code < 0	341:16:14121:14128	165198	0	True				
ANR	165310	RelationalExpression	code < 0		165198	0		<			
ANR	165311	Identifier	code		165198	0					
ANR	165312	PrimaryExpression	0		165198	1					
ANR	165313	ReturnStatement	return code ;	342:16:14147:14158	165198	1	True				
ANR	165314	Identifier	code		165198	0					
ANR	165315	ExpressionStatement	mdev -> mapped_y = my += bh	343:12:14172:14197	165198	2	True				
ANR	165316	AssignmentExpression	mdev -> mapped_y = my += bh		165198	0		=			
ANR	165317	PtrMemberAccess	mdev -> mapped_y		165198	0					
ANR	165318	Identifier	mdev		165198	0					
ANR	165319	Identifier	mapped_y		165198	1					
ANR	165320	AssignmentExpression	my += bh		165198	1		+=			
ANR	165321	Identifier	my		165198	0					
ANR	165322	Identifier	bh		165198	1					
ANR	165323	IfStatement	if ( ( mdev -> mapped_start = ms += bh ) == mh )		165198	3					
ANR	165324	Condition	( mdev -> mapped_start = ms += bh ) == mh	344:16:14215:14251	165198	0	True				
ANR	165325	EqualityExpression	( mdev -> mapped_start = ms += bh ) == mh		165198	0		==			
ANR	165326	AssignmentExpression	mdev -> mapped_start = ms += bh		165198	0		=			
ANR	165327	PtrMemberAccess	mdev -> mapped_start		165198	0					
ANR	165328	Identifier	mdev		165198	0					
ANR	165329	Identifier	mapped_start		165198	1					
ANR	165330	AssignmentExpression	ms += bh		165198	1		+=			
ANR	165331	Identifier	ms		165198	0					
ANR	165332	Identifier	bh		165198	1					
ANR	165333	Identifier	mh		165198	1					
ANR	165334	ExpressionStatement	mdev -> mapped_start = ms = 0	345:16:14270:14297	165198	1	True				
ANR	165335	AssignmentExpression	mdev -> mapped_start = ms = 0		165198	0		=			
ANR	165336	PtrMemberAccess	mdev -> mapped_start		165198	0					
ANR	165337	Identifier	mdev		165198	0					
ANR	165338	Identifier	mapped_start		165198	1					
ANR	165339	AssignmentExpression	ms = 0		165198	1		=			
ANR	165340	Identifier	ms		165198	0					
ANR	165341	PrimaryExpression	0		165198	1					
ANR	165342	ElseStatement	else		165198	0					
ANR	165343	CompoundStatement		21:15:697:697	165198	0					
ANR	165344	ExpressionStatement	mdev -> mapped_height = mh += bh	348:12:14441:14471	165198	0	True				
ANR	165345	AssignmentExpression	mdev -> mapped_height = mh += bh		165198	0		=			
ANR	165346	PtrMemberAccess	mdev -> mapped_height		165198	0					
ANR	165347	Identifier	mdev		165198	0					
ANR	165348	Identifier	mapped_height		165198	1					
ANR	165349	AssignmentExpression	mh += bh		165198	1		+=			
ANR	165350	Identifier	mh		165198	0					
ANR	165351	Identifier	bh		165198	1					
ANR	165352	ExpressionStatement	"memset ( scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh ) , 0 , bh * mdev -> raster )"	350:8:14491:14582	165198	1	True				
ANR	165353	CallExpression	"memset ( scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh ) , 0 , bh * mdev -> raster )"		165198	0					
ANR	165354	Callee	memset		165198	0					
ANR	165355	Identifier	memset		165198	0					
ANR	165356	ArgumentList	"scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh )"		165198	1					
ANR	165357	Argument	"scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh )"		165198	0					
ANR	165358	CallExpression	"scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh )"		165198	0					
ANR	165359	Callee	scan_line_base		165198	0					
ANR	165360	Identifier	scan_line_base		165198	0					
ANR	165361	ArgumentList	mdev		165198	1					
ANR	165362	Argument	mdev		165198	0					
ANR	165363	Identifier	mdev		165198	0					
ANR	165364	Argument	( ms == 0 ? mh : ms ) - bh		165198	1					
ANR	165365	AdditiveExpression	( ms == 0 ? mh : ms ) - bh		165198	0		-			
ANR	165366	ConditionalExpression	ms == 0 ? mh : ms		165198	0					
ANR	165367	Condition	ms == 0		165198	0					
ANR	165368	EqualityExpression	ms == 0		165198	0		==			
ANR	165369	Identifier	ms		165198	0					
ANR	165370	PrimaryExpression	0		165198	1					
ANR	165371	Identifier	mh		165198	1					
ANR	165372	Identifier	ms		165198	2					
ANR	165373	Identifier	bh		165198	1					
ANR	165374	Argument	0		165198	1					
ANR	165375	PrimaryExpression	0		165198	0					
ANR	165376	Argument	bh * mdev -> raster		165198	2					
ANR	165377	MultiplicativeExpression	bh * mdev -> raster		165198	0		*			
ANR	165378	Identifier	bh		165198	0					
ANR	165379	PtrMemberAccess	mdev -> raster		165198	1					
ANR	165380	Identifier	mdev		165198	0					
ANR	165381	Identifier	raster		165198	1					
ANR	165382	ExpressionStatement	tby = ty - my + ms	354:4:14641:14659	165198	11	True				
ANR	165383	AssignmentExpression	tby = ty - my + ms		165198	0		=			
ANR	165384	Identifier	tby		165198	0					
ANR	165385	AdditiveExpression	ty - my + ms		165198	1		-			
ANR	165386	Identifier	ty		165198	0					
ANR	165387	AdditiveExpression	my + ms		165198	1		+			
ANR	165388	Identifier	my		165198	0					
ANR	165389	Identifier	ms		165198	1					
ANR	165390	IfStatement	if ( tby < mdev -> height )		165198	12					
ANR	165391	Condition	tby < mdev -> height	355:8:14669:14686	165198	0	True				
ANR	165392	RelationalExpression	tby < mdev -> height		165198	0		<			
ANR	165393	Identifier	tby		165198	0					
ANR	165394	PtrMemberAccess	mdev -> height		165198	1					
ANR	165395	Identifier	mdev		165198	0					
ANR	165396	Identifier	height		165198	1					
ANR	165397	CompoundStatement		30:28:1072:1072	165198	1					
ANR	165398	ExpressionStatement	tbh = mdev -> height - ms	356:8:14699:14722	165198	0	True				
ANR	165399	AssignmentExpression	tbh = mdev -> height - ms		165198	0		=			
ANR	165400	Identifier	tbh		165198	0					
ANR	165401	AdditiveExpression	mdev -> height - ms		165198	1		-			
ANR	165402	PtrMemberAccess	mdev -> height		165198	0					
ANR	165403	Identifier	mdev		165198	0					
ANR	165404	Identifier	height		165198	1					
ANR	165405	Identifier	ms		165198	1					
ANR	165406	IfStatement	if ( tbh > mh )		165198	1					
ANR	165407	Condition	tbh > mh	357:12:14736:14743	165198	0	True				
ANR	165408	RelationalExpression	tbh > mh		165198	0		>			
ANR	165409	Identifier	tbh		165198	0					
ANR	165410	Identifier	mh		165198	1					
ANR	165411	ExpressionStatement	tbh = mh	358:12:14758:14766	165198	1	True				
ANR	165412	AssignmentExpression	tbh = mh		165198	0		=			
ANR	165413	Identifier	tbh		165198	0					
ANR	165414	Identifier	mh		165198	1					
ANR	165415	ExpressionStatement	tbh -= tby - ms	359:8:14776:14791	165198	2	True				
ANR	165416	AssignmentExpression	tbh -= tby - ms		165198	0		-=			
ANR	165417	Identifier	tbh		165198	0					
ANR	165418	AdditiveExpression	tby - ms		165198	1		-			
ANR	165419	Identifier	tby		165198	0					
ANR	165420	Identifier	ms		165198	1					
ANR	165421	ElseStatement	else		165198	0					
ANR	165422	CompoundStatement		35:11:1187:1187	165198	0					
ANR	165423	ExpressionStatement	tby -= mdev -> height	361:8:14834:14853	165198	0	True				
ANR	165424	AssignmentExpression	tby -= mdev -> height		165198	0		-=			
ANR	165425	Identifier	tby		165198	0					
ANR	165426	PtrMemberAccess	mdev -> height		165198	1					
ANR	165427	Identifier	mdev		165198	0					
ANR	165428	Identifier	height		165198	1					
ANR	165429	ExpressionStatement	tbh = ms + mh - dev -> height - tby	362:8:14863:14896	165198	1	True				
ANR	165430	AssignmentExpression	tbh = ms + mh - dev -> height - tby		165198	0		=			
ANR	165431	Identifier	tbh		165198	0					
ANR	165432	AdditiveExpression	ms + mh - dev -> height - tby		165198	1		+			
ANR	165433	Identifier	ms		165198	0					
ANR	165434	AdditiveExpression	mh - dev -> height - tby		165198	1		-			
ANR	165435	Identifier	mh		165198	0					
ANR	165436	AdditiveExpression	dev -> height - tby		165198	1		-			
ANR	165437	PtrMemberAccess	dev -> height		165198	0					
ANR	165438	Identifier	dev		165198	0					
ANR	165439	Identifier	height		165198	1					
ANR	165440	Identifier	tby		165198	1					
ANR	165441	ExpressionStatement	"if_debug7m ( 'V' , mdev -> memory , ""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"" , my , mh , ms , ty , th , tby , tbh )"	364:4:14908:15061	165198	13	True				
ANR	165442	CallExpression	"if_debug7m ( 'V' , mdev -> memory , ""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"" , my , mh , ms , ty , th , tby , tbh )"		165198	0					
ANR	165443	Callee	if_debug7m		165198	0					
ANR	165444	Identifier	if_debug7m		165198	0					
ANR	165445	ArgumentList	'V'		165198	1					
ANR	165446	Argument	'V'		165198	0					
ANR	165447	PrimaryExpression	'V'		165198	0					
ANR	165448	Argument	mdev -> memory		165198	1					
ANR	165449	PtrMemberAccess	mdev -> memory		165198	0					
ANR	165450	Identifier	mdev		165198	0					
ANR	165451	Identifier	memory		165198	1					
ANR	165452	Argument	"""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"""		165198	2					
ANR	165453	PrimaryExpression	"""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"""		165198	0					
ANR	165454	Argument	my		165198	3					
ANR	165455	Identifier	my		165198	0					
ANR	165456	Argument	mh		165198	4					
ANR	165457	Identifier	mh		165198	0					
ANR	165458	Argument	ms		165198	5					
ANR	165459	Identifier	ms		165198	0					
ANR	165460	Argument	ty		165198	6					
ANR	165461	Identifier	ty		165198	0					
ANR	165462	Argument	th		165198	7					
ANR	165463	Identifier	th		165198	0					
ANR	165464	Argument	tby		165198	8					
ANR	165465	Identifier	tby		165198	0					
ANR	165466	Argument	tbh		165198	9					
ANR	165467	Identifier	tbh		165198	0					
ANR	165468	IfStatement	if ( tbh > th )		165198	14					
ANR	165469	Condition	tbh > th	367:8:15071:15078	165198	0	True				
ANR	165470	RelationalExpression	tbh > th		165198	0		>			
ANR	165471	Identifier	tbh		165198	0					
ANR	165472	Identifier	th		165198	1					
ANR	165473	ExpressionStatement	tbh = th	368:8:15089:15097	165198	1	True				
ANR	165474	AssignmentExpression	tbh = th		165198	0		=			
ANR	165475	Identifier	tbh		165198	0					
ANR	165476	Identifier	th		165198	1					
ANR	165477	ExpressionStatement	pyt -> height_left = th - tbh	369:4:15103:15130	165198	15	True				
ANR	165478	AssignmentExpression	pyt -> height_left = th - tbh		165198	0		=			
ANR	165479	PtrMemberAccess	pyt -> height_left		165198	0					
ANR	165480	Identifier	pyt		165198	0					
ANR	165481	Identifier	height_left		165198	1					
ANR	165482	AdditiveExpression	th - tbh		165198	1		-			
ANR	165483	Identifier	th		165198	0					
ANR	165484	Identifier	tbh		165198	1					
ANR	165485	ExpressionStatement	pyt -> transfer_y = tby	370:4:15136:15157	165198	16	True				
ANR	165486	AssignmentExpression	pyt -> transfer_y = tby		165198	0		=			
ANR	165487	PtrMemberAccess	pyt -> transfer_y		165198	0					
ANR	165488	Identifier	pyt		165198	0					
ANR	165489	Identifier	transfer_y		165198	1					
ANR	165490	Identifier	tby		165198	1					
ANR	165491	ExpressionStatement	pyt -> transfer_height = tbh	371:4:15163:15189	165198	17	True				
ANR	165492	AssignmentExpression	pyt -> transfer_height = tbh		165198	0		=			
ANR	165493	PtrMemberAccess	pyt -> transfer_height		165198	0					
ANR	165494	Identifier	pyt		165198	0					
ANR	165495	Identifier	transfer_height		165198	1					
ANR	165496	Identifier	tbh		165198	1					
ANR	165497	ReturnStatement	return 0 ;	372:4:15195:15203	165198	18	True				
ANR	165498	PrimaryExpression	0		165198	0					
ANR	165499	ReturnType	static int		165198	1					
ANR	165500	Identifier	y_transfer_next		165198	2					
ANR	165501	ParameterList	"y_transfer * pyt , gx_device * dev"		165198	3					
ANR	165502	Parameter	y_transfer * pyt	325:16:13581:13596	165198	0	True				
ANR	165503	ParameterType	y_transfer *		165198	0					
ANR	165504	Identifier	pyt		165198	1					
ANR	165505	Parameter	gx_device * dev	325:34:13599:13613	165198	1	True				
ANR	165506	ParameterType	gx_device *		165198	0					
ANR	165507	Identifier	dev		165198	1					
ANR	165508	CFGEntryNode	ENTRY		165198		True				
ANR	165509	CFGExitNode	EXIT		165198		True				
ANR	165510	Symbol	* dev		165198						
ANR	165511	Symbol	mdev -> height		165198						
ANR	165512	Symbol	abuf_flush_block		165198						
ANR	165513	Symbol	code		165198						
ANR	165514	Symbol	ty		165198						
ANR	165515	Symbol	bh		165198						
ANR	165516	Symbol	dev -> height		165198						
ANR	165517	Symbol	pyt -> transfer_y		165198						
ANR	165518	Symbol	pyt		165198						
ANR	165519	Symbol	pyt -> transfer_height		165198						
ANR	165520	Symbol	tby		165198						
ANR	165521	Symbol	mdev -> mapped_start		165198						
ANR	165522	Symbol	mdev -> raster		165198						
ANR	165523	Symbol	dev		165198						
ANR	165524	Symbol	mh		165198						
ANR	165525	Symbol	mdev -> memory		165198						
ANR	165526	Symbol	* mdev		165198						
ANR	165527	Symbol	ms		165198						
ANR	165528	Symbol	pyt -> height_left		165198						
ANR	165529	Symbol	pyt -> y_next		165198						
ANR	165530	Symbol	my		165198						
ANR	165531	Symbol	mdev -> log2_scale		165198						
ANR	165532	Symbol	mdev -> mapped_y		165198						
ANR	165533	Symbol	mdev -> mapped_height		165198						
ANR	165534	Symbol	th		165198						
ANR	165535	Symbol	* pyt		165198						
ANR	165536	Symbol	scan_line_base		165198						
ANR	165537	Symbol	mdev		165198						
ANR	165538	Symbol	tbh		165198						
ANR	165539	Symbol	mdev -> log2_scale . y		165198						
ANR	165540	Function	mem_abuf_copy_mono	376:0:15236:16358							
ANR	165541	FunctionDef	"mem_abuf_copy_mono (gx_device * dev , const byte * base , int sourcex , int sraster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one)"		165540	0					
ANR	165542	CompoundStatement		380:0:15437:16358	165540	0					
ANR	165543	Statement	gx_device_memory	381:4:15443:15458	165540	0	True				
ANR	165544	Statement	*	381:21:15460:15460	165540	1	True				
ANR	165545	Statement	const	381:23:15462:15466	165540	2	True				
ANR	165546	ExpressionStatement	mdev = ( gx_device_memory * ) dev	381:29:15468:15498	165540	3	True				
ANR	165547	AssignmentExpression	mdev = ( gx_device_memory * ) dev		165540	0		=			
ANR	165548	Identifier	mdev		165540	0					
ANR	165549	CastExpression	( gx_device_memory * ) dev		165540	1					
ANR	165550	CastTarget	gx_device_memory *		165540	0					
ANR	165551	Identifier	dev		165540	1					
ANR	165552	IdentifierDeclStatement	y_transfer yt ;	382:4:15504:15517	165540	4	True				
ANR	165553	IdentifierDecl	yt		165540	0					
ANR	165554	IdentifierDeclType	y_transfer		165540	0					
ANR	165555	Identifier	yt		165540	1					
ANR	165556	IfStatement	if ( zero != gx_no_color_index || one == gx_no_color_index )		165540	5					
ANR	165557	Condition	zero != gx_no_color_index || one == gx_no_color_index	384:8:15528:15580	165540	0	True				
ANR	165558	OrExpression	zero != gx_no_color_index || one == gx_no_color_index		165540	0		||			
ANR	165559	EqualityExpression	zero != gx_no_color_index		165540	0		!=			
ANR	165560	Identifier	zero		165540	0					
ANR	165561	Identifier	gx_no_color_index		165540	1					
ANR	165562	EqualityExpression	one == gx_no_color_index		165540	1		==			
ANR	165563	Identifier	one		165540	0					
ANR	165564	Identifier	gx_no_color_index		165540	1					
ANR	165565	ExpressionStatement	return_error ( gs_error_undefinedresult )	385:8:15591:15629	165540	1	True				
ANR	165566	CallExpression	return_error ( gs_error_undefinedresult )		165540	0					
ANR	165567	Callee	return_error		165540	0					
ANR	165568	Identifier	return_error		165540	0					
ANR	165569	ArgumentList	gs_error_undefinedresult		165540	1					
ANR	165570	Argument	gs_error_undefinedresult		165540	0					
ANR	165571	Identifier	gs_error_undefinedresult		165540	0					
ANR	165572	ExpressionStatement	x -= mdev -> mapped_x	386:4:15635:15654	165540	6	True				
ANR	165573	AssignmentExpression	x -= mdev -> mapped_x		165540	0		-=			
ANR	165574	Identifier	x		165540	0					
ANR	165575	PtrMemberAccess	mdev -> mapped_x		165540	1					
ANR	165576	Identifier	mdev		165540	0					
ANR	165577	Identifier	mapped_x		165540	1					
ANR	165578	ExpressionStatement	"fit_copy_xyw ( dev , base , sourcex , sraster , id , x , y , w , h )"	387:4:15660:15717	165540	7	True				
ANR	165579	CallExpression	"fit_copy_xyw ( dev , base , sourcex , sraster , id , x , y , w , h )"		165540	0					
ANR	165580	Callee	fit_copy_xyw		165540	0					
ANR	165581	Identifier	fit_copy_xyw		165540	0					
ANR	165582	ArgumentList	dev		165540	1					
ANR	165583	Argument	dev		165540	0					
ANR	165584	Identifier	dev		165540	0					
ANR	165585	Argument	base		165540	1					
ANR	165586	Identifier	base		165540	0					
ANR	165587	Argument	sourcex		165540	2					
ANR	165588	Identifier	sourcex		165540	0					
ANR	165589	Argument	sraster		165540	3					
ANR	165590	Identifier	sraster		165540	0					
ANR	165591	Argument	id		165540	4					
ANR	165592	Identifier	id		165540	0					
ANR	165593	Argument	x		165540	5					
ANR	165594	Identifier	x		165540	0					
ANR	165595	Argument	y		165540	6					
ANR	165596	Identifier	y		165540	0					
ANR	165597	Argument	w		165540	7					
ANR	165598	Identifier	w		165540	0					
ANR	165599	Argument	h		165540	8					
ANR	165600	Identifier	h		165540	0					
ANR	165601	IfStatement	if ( w <= 0 || h <= 0 )		165540	8					
ANR	165602	Condition	w <= 0 || h <= 0	388:8:15747:15762	165540	0	True				
ANR	165603	OrExpression	w <= 0 || h <= 0		165540	0		||			
ANR	165604	RelationalExpression	w <= 0		165540	0		<=			
ANR	165605	Identifier	w		165540	0					
ANR	165606	PrimaryExpression	0		165540	1					
ANR	165607	RelationalExpression	h <= 0		165540	1		<=			
ANR	165608	Identifier	h		165540	0					
ANR	165609	PrimaryExpression	0		165540	1					
ANR	165610	ReturnStatement	return 0 ;	389:8:15773:15781	165540	1	True				
ANR	165611	PrimaryExpression	0		165540	0					
ANR	165612	ExpressionStatement	mdev -> save_color = one	390:4:15787:15809	165540	9	True				
ANR	165613	AssignmentExpression	mdev -> save_color = one		165540	0		=			
ANR	165614	PtrMemberAccess	mdev -> save_color		165540	0					
ANR	165615	Identifier	mdev		165540	0					
ANR	165616	Identifier	save_color		165540	1					
ANR	165617	Identifier	one		165540	1					
ANR	165618	ExpressionStatement	"y_transfer_init ( & yt , dev , y , h )"	391:4:15815:15846	165540	10	True				
ANR	165619	CallExpression	"y_transfer_init ( & yt , dev , y , h )"		165540	0					
ANR	165620	Callee	y_transfer_init		165540	0					
ANR	165621	Identifier	y_transfer_init		165540	0					
ANR	165622	ArgumentList	& yt		165540	1					
ANR	165623	Argument	& yt		165540	0					
ANR	165624	UnaryOperationExpression	& yt		165540	0					
ANR	165625	UnaryOperator	&		165540	0					
ANR	165626	Identifier	yt		165540	1					
ANR	165627	Argument	dev		165540	1					
ANR	165628	Identifier	dev		165540	0					
ANR	165629	Argument	y		165540	2					
ANR	165630	Identifier	y		165540	0					
ANR	165631	Argument	h		165540	3					
ANR	165632	Identifier	h		165540	0					
ANR	165633	WhileStatement	while ( yt . height_left > 0 )		165540	11					
ANR	165634	Condition	yt . height_left > 0	392:11:15859:15876	165540	0	True				
ANR	165635	RelationalExpression	yt . height_left > 0		165540	0		>			
ANR	165636	MemberAccess	yt . height_left		165540	0					
ANR	165637	Identifier	yt		165540	0					
ANR	165638	Identifier	height_left		165540	1					
ANR	165639	PrimaryExpression	0		165540	1					
ANR	165640	CompoundStatement		14:8:451:487	165540	1					
ANR	165641	IdentifierDeclStatement	"int code = y_transfer_next ( & yt , dev ) ;"	393:8:15889:15925	165540	0	True				
ANR	165642	IdentifierDecl	"code = y_transfer_next ( & yt , dev )"		165540	0					
ANR	165643	IdentifierDeclType	int		165540	0					
ANR	165644	Identifier	code		165540	1					
ANR	165645	AssignmentExpression	"code = y_transfer_next ( & yt , dev )"		165540	2		=			
ANR	165646	Identifier	code		165540	0					
ANR	165647	CallExpression	"y_transfer_next ( & yt , dev )"		165540	1					
ANR	165648	Callee	y_transfer_next		165540	0					
ANR	165649	Identifier	y_transfer_next		165540	0					
ANR	165650	ArgumentList	& yt		165540	1					
ANR	165651	Argument	& yt		165540	0					
ANR	165652	UnaryOperationExpression	& yt		165540	0					
ANR	165653	UnaryOperator	&		165540	0					
ANR	165654	Identifier	yt		165540	1					
ANR	165655	Argument	dev		165540	1					
ANR	165656	Identifier	dev		165540	0					
ANR	165657	IfStatement	if ( code < 0 )		165540	1					
ANR	165658	Condition	code < 0	395:12:15940:15947	165540	0	True				
ANR	165659	RelationalExpression	code < 0		165540	0		<			
ANR	165660	Identifier	code		165540	0					
ANR	165661	PrimaryExpression	0		165540	1					
ANR	165662	ReturnStatement	return code ;	396:12:15962:15973	165540	1	True				
ANR	165663	Identifier	code		165540	0					
ANR	165664	ExpressionStatement	"( * dev_proc ( & mem_mono_device , copy_mono ) ) ( dev , base + ( yt . y_next - y ) * sraster , sourcex , sraster , gx_no_bitmap_id , x , yt . transfer_y , w , yt . transfer_height , gx_no_color_index , ( gx_color_index ) 1 )"	397:8:15983:16336	165540	2	True				
ANR	165665	CallExpression	"( * dev_proc ( & mem_mono_device , copy_mono ) ) ( dev , base + ( yt . y_next - y ) * sraster , sourcex , sraster , gx_no_bitmap_id , x , yt . transfer_y , w , yt . transfer_height , gx_no_color_index , ( gx_color_index ) 1 )"		165540	0					
ANR	165666	Callee	"* dev_proc ( & mem_mono_device , copy_mono )"		165540	0					
ANR	165667	UnaryOperationExpression	"* dev_proc ( & mem_mono_device , copy_mono )"		165540	0					
ANR	165668	UnaryOperator	*		165540	0					
ANR	165669	CallExpression	"dev_proc ( & mem_mono_device , copy_mono )"		165540	1					
ANR	165670	Callee	dev_proc		165540	0					
ANR	165671	Identifier	dev_proc		165540	0					
ANR	165672	ArgumentList	& mem_mono_device		165540	1					
ANR	165673	Argument	& mem_mono_device		165540	0					
ANR	165674	UnaryOperationExpression	& mem_mono_device		165540	0					
ANR	165675	UnaryOperator	&		165540	0					
ANR	165676	Identifier	mem_mono_device		165540	1					
ANR	165677	Argument	copy_mono		165540	1					
ANR	165678	Identifier	copy_mono		165540	0					
ANR	165679	ArgumentList	dev		165540	1					
ANR	165680	Argument	dev		165540	0					
ANR	165681	Identifier	dev		165540	0					
ANR	165682	Argument	base + ( yt . y_next - y ) * sraster		165540	1					
ANR	165683	AdditiveExpression	base + ( yt . y_next - y ) * sraster		165540	0		+			
ANR	165684	Identifier	base		165540	0					
ANR	165685	MultiplicativeExpression	( yt . y_next - y ) * sraster		165540	1		*			
ANR	165686	AdditiveExpression	yt . y_next - y		165540	0		-			
ANR	165687	MemberAccess	yt . y_next		165540	0					
ANR	165688	Identifier	yt		165540	0					
ANR	165689	Identifier	y_next		165540	1					
ANR	165690	Identifier	y		165540	1					
ANR	165691	Identifier	sraster		165540	1					
ANR	165692	Argument	sourcex		165540	2					
ANR	165693	Identifier	sourcex		165540	0					
ANR	165694	Argument	sraster		165540	3					
ANR	165695	Identifier	sraster		165540	0					
ANR	165696	Argument	gx_no_bitmap_id		165540	4					
ANR	165697	Identifier	gx_no_bitmap_id		165540	0					
ANR	165698	Argument	x		165540	5					
ANR	165699	Identifier	x		165540	0					
ANR	165700	Argument	yt . transfer_y		165540	6					
ANR	165701	MemberAccess	yt . transfer_y		165540	0					
ANR	165702	Identifier	yt		165540	0					
ANR	165703	Identifier	transfer_y		165540	1					
ANR	165704	Argument	w		165540	7					
ANR	165705	Identifier	w		165540	0					
ANR	165706	Argument	yt . transfer_height		165540	8					
ANR	165707	MemberAccess	yt . transfer_height		165540	0					
ANR	165708	Identifier	yt		165540	0					
ANR	165709	Identifier	transfer_height		165540	1					
ANR	165710	Argument	gx_no_color_index		165540	9					
ANR	165711	Identifier	gx_no_color_index		165540	0					
ANR	165712	Argument	( gx_color_index ) 1		165540	10					
ANR	165713	CastExpression	( gx_color_index ) 1		165540	0					
ANR	165714	CastTarget	gx_color_index		165540	0					
ANR	165715	PrimaryExpression	1		165540	1					
ANR	165716	ReturnStatement	return 0 ;	403:4:16348:16356	165540	12	True				
ANR	165717	PrimaryExpression	0		165540	0					
ANR	165718	ReturnType	static int		165540	1					
ANR	165719	Identifier	mem_abuf_copy_mono		165540	2					
ANR	165720	ParameterList	"gx_device * dev , const byte * base , int sourcex , int sraster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one"		165540	3					
ANR	165721	Parameter	gx_device * dev	377:19:15266:15280	165540	0	True				
ANR	165722	ParameterType	gx_device *		165540	0					
ANR	165723	Identifier	dev		165540	1					
ANR	165724	Parameter	const byte * base	378:15:15298:15314	165540	1	True				
ANR	165725	ParameterType	const byte *		165540	0					
ANR	165726	Identifier	base		165540	1					
ANR	165727	Parameter	int sourcex	378:34:15317:15327	165540	2	True				
ANR	165728	ParameterType	int		165540	0					
ANR	165729	Identifier	sourcex		165540	1					
ANR	165730	Parameter	int sraster	378:47:15330:15340	165540	3	True				
ANR	165731	ParameterType	int		165540	0					
ANR	165732	Identifier	sraster		165540	1					
ANR	165733	Parameter	gx_bitmap_id id	378:60:15343:15357	165540	4	True				
ANR	165734	ParameterType	gx_bitmap_id		165540	0					
ANR	165735	Identifier	id		165540	1					
ANR	165736	Parameter	int x	379:8:15368:15372	165540	5	True				
ANR	165737	ParameterType	int		165540	0					
ANR	165738	Identifier	x		165540	1					
ANR	165739	Parameter	int y	379:15:15375:15379	165540	6	True				
ANR	165740	ParameterType	int		165540	0					
ANR	165741	Identifier	y		165540	1					
ANR	165742	Parameter	int w	379:22:15382:15386	165540	7	True				
ANR	165743	ParameterType	int		165540	0					
ANR	165744	Identifier	w		165540	1					
ANR	165745	Parameter	int h	379:29:15389:15393	165540	8	True				
ANR	165746	ParameterType	int		165540	0					
ANR	165747	Identifier	h		165540	1					
ANR	165748	Parameter	gx_color_index zero	379:36:15396:15414	165540	9	True				
ANR	165749	ParameterType	gx_color_index		165540	0					
ANR	165750	Identifier	zero		165540	1					
ANR	165751	Parameter	gx_color_index one	379:57:15417:15434	165540	10	True				
ANR	165752	ParameterType	gx_color_index		165540	0					
ANR	165753	Identifier	one		165540	1					
ANR	165754	CFGEntryNode	ENTRY		165540		True				
ANR	165755	CFGExitNode	EXIT		165540		True				
ANR	165756	Symbol	sourcex		165540						
ANR	165757	Symbol	code		165540						
ANR	165758	Symbol	yt . y_next		165540						
ANR	165759	Symbol	& yt		165540						
ANR	165760	Symbol	mdev -> save_color		165540						
ANR	165761	Symbol	yt . transfer_height		165540						
ANR	165762	Symbol	gs_error_undefinedresult		165540						
ANR	165763	Symbol	zero		165540						
ANR	165764	Symbol	gx_no_color_index		165540						
ANR	165765	Symbol	dev		165540						
ANR	165766	Symbol	copy_mono		165540						
ANR	165767	Symbol	dev_proc		165540						
ANR	165768	Symbol	id		165540						
ANR	165769	Symbol	yt		165540						
ANR	165770	Symbol	yt . transfer_y		165540						
ANR	165771	Symbol	* mdev		165540						
ANR	165772	Symbol	yt . height_left		165540						
ANR	165773	Symbol	one		165540						
ANR	165774	Symbol	h		165540						
ANR	165775	Symbol	mdev -> mapped_x		165540						
ANR	165776	Symbol	sraster		165540						
ANR	165777	Symbol	gx_no_bitmap_id		165540						
ANR	165778	Symbol	y_transfer_next		165540						
ANR	165779	Symbol	w		165540						
ANR	165780	Symbol	x		165540						
ANR	165781	Symbol	y		165540						
ANR	165782	Symbol	mdev		165540						
ANR	165783	Symbol	& mem_mono_device		165540						
ANR	165784	Symbol	base		165540						
ANR	165785	Function	mem_abuf_fill_rectangle	407:0:16385:17161							
ANR	165786	FunctionDef	"mem_abuf_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		165785	0					
ANR	165787	CompoundStatement		410:0:16511:17161	165785	0					
ANR	165788	Statement	gx_device_memory	411:4:16517:16532	165785	0	True				
ANR	165789	Statement	*	411:21:16534:16534	165785	1	True				
ANR	165790	Statement	const	411:23:16536:16540	165785	2	True				
ANR	165791	ExpressionStatement	mdev = ( gx_device_memory * ) dev	411:29:16542:16572	165785	3	True				
ANR	165792	AssignmentExpression	mdev = ( gx_device_memory * ) dev		165785	0		=			
ANR	165793	Identifier	mdev		165785	0					
ANR	165794	CastExpression	( gx_device_memory * ) dev		165785	1					
ANR	165795	CastTarget	gx_device_memory *		165785	0					
ANR	165796	Identifier	dev		165785	1					
ANR	165797	IdentifierDeclStatement	y_transfer yt ;	412:4:16578:16591	165785	4	True				
ANR	165798	IdentifierDecl	yt		165785	0					
ANR	165799	IdentifierDeclType	y_transfer		165785	0					
ANR	165800	Identifier	yt		165785	1					
ANR	165801	ExpressionStatement	x -= mdev -> mapped_x	414:4:16598:16617	165785	5	True				
ANR	165802	AssignmentExpression	x -= mdev -> mapped_x		165785	0		-=			
ANR	165803	Identifier	x		165785	0					
ANR	165804	PtrMemberAccess	mdev -> mapped_x		165785	1					
ANR	165805	Identifier	mdev		165785	0					
ANR	165806	Identifier	mapped_x		165785	1					
ANR	165807	ExpressionStatement	"fit_fill_xy ( dev , x , y , w , h )"	415:4:16623:16651	165785	6	True				
ANR	165808	CallExpression	"fit_fill_xy ( dev , x , y , w , h )"		165785	0					
ANR	165809	Callee	fit_fill_xy		165785	0					
ANR	165810	Identifier	fit_fill_xy		165785	0					
ANR	165811	ArgumentList	dev		165785	1					
ANR	165812	Argument	dev		165785	0					
ANR	165813	Identifier	dev		165785	0					
ANR	165814	Argument	x		165785	1					
ANR	165815	Identifier	x		165785	0					
ANR	165816	Argument	y		165785	2					
ANR	165817	Identifier	y		165785	0					
ANR	165818	Argument	w		165785	3					
ANR	165819	Identifier	w		165785	0					
ANR	165820	Argument	h		165785	4					
ANR	165821	Identifier	h		165785	0					
ANR	165822	ExpressionStatement	"fit_fill_w ( dev , x , w )"	416:4:16657:16678	165785	7	True				
ANR	165823	CallExpression	"fit_fill_w ( dev , x , w )"		165785	0					
ANR	165824	Callee	fit_fill_w		165785	0					
ANR	165825	Identifier	fit_fill_w		165785	0					
ANR	165826	ArgumentList	dev		165785	1					
ANR	165827	Argument	dev		165785	0					
ANR	165828	Identifier	dev		165785	0					
ANR	165829	Argument	x		165785	1					
ANR	165830	Identifier	x		165785	0					
ANR	165831	Argument	w		165785	2					
ANR	165832	Identifier	w		165785	0					
ANR	165833	ExpressionStatement	mdev -> save_color = color	418:4:16738:16762	165785	8	True				
ANR	165834	AssignmentExpression	mdev -> save_color = color		165785	0		=			
ANR	165835	PtrMemberAccess	mdev -> save_color		165785	0					
ANR	165836	Identifier	mdev		165785	0					
ANR	165837	Identifier	save_color		165785	1					
ANR	165838	Identifier	color		165785	1					
ANR	165839	ExpressionStatement	"y_transfer_init ( & yt , dev , y , h )"	419:4:16768:16799	165785	9	True				
ANR	165840	CallExpression	"y_transfer_init ( & yt , dev , y , h )"		165785	0					
ANR	165841	Callee	y_transfer_init		165785	0					
ANR	165842	Identifier	y_transfer_init		165785	0					
ANR	165843	ArgumentList	& yt		165785	1					
ANR	165844	Argument	& yt		165785	0					
ANR	165845	UnaryOperationExpression	& yt		165785	0					
ANR	165846	UnaryOperator	&		165785	0					
ANR	165847	Identifier	yt		165785	1					
ANR	165848	Argument	dev		165785	1					
ANR	165849	Identifier	dev		165785	0					
ANR	165850	Argument	y		165785	2					
ANR	165851	Identifier	y		165785	0					
ANR	165852	Argument	h		165785	3					
ANR	165853	Identifier	h		165785	0					
ANR	165854	WhileStatement	while ( yt . height_left > 0 )		165785	10					
ANR	165855	Condition	yt . height_left > 0	420:11:16812:16829	165785	0	True				
ANR	165856	RelationalExpression	yt . height_left > 0		165785	0		>			
ANR	165857	MemberAccess	yt . height_left		165785	0					
ANR	165858	Identifier	yt		165785	0					
ANR	165859	Identifier	height_left		165785	1					
ANR	165860	PrimaryExpression	0		165785	1					
ANR	165861	CompoundStatement		12:8:330:366	165785	1					
ANR	165862	IdentifierDeclStatement	"int code = y_transfer_next ( & yt , dev ) ;"	421:8:16842:16878	165785	0	True				
ANR	165863	IdentifierDecl	"code = y_transfer_next ( & yt , dev )"		165785	0					
ANR	165864	IdentifierDeclType	int		165785	0					
ANR	165865	Identifier	code		165785	1					
ANR	165866	AssignmentExpression	"code = y_transfer_next ( & yt , dev )"		165785	2		=			
ANR	165867	Identifier	code		165785	0					
ANR	165868	CallExpression	"y_transfer_next ( & yt , dev )"		165785	1					
ANR	165869	Callee	y_transfer_next		165785	0					
ANR	165870	Identifier	y_transfer_next		165785	0					
ANR	165871	ArgumentList	& yt		165785	1					
ANR	165872	Argument	& yt		165785	0					
ANR	165873	UnaryOperationExpression	& yt		165785	0					
ANR	165874	UnaryOperator	&		165785	0					
ANR	165875	Identifier	yt		165785	1					
ANR	165876	Argument	dev		165785	1					
ANR	165877	Identifier	dev		165785	0					
ANR	165878	IfStatement	if ( code < 0 )		165785	1					
ANR	165879	Condition	code < 0	423:12:16893:16900	165785	0	True				
ANR	165880	RelationalExpression	code < 0		165785	0		<			
ANR	165881	Identifier	code		165785	0					
ANR	165882	PrimaryExpression	0		165785	1					
ANR	165883	ReturnStatement	return code ;	424:12:16915:16926	165785	1	True				
ANR	165884	Identifier	code		165785	0					
ANR	165885	ExpressionStatement	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"	425:8:16936:17139	165785	2	True				
ANR	165886	CallExpression	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"		165785	0					
ANR	165887	Callee	"* dev_proc ( & mem_mono_device , fill_rectangle )"		165785	0					
ANR	165888	UnaryOperationExpression	"* dev_proc ( & mem_mono_device , fill_rectangle )"		165785	0					
ANR	165889	UnaryOperator	*		165785	0					
ANR	165890	CallExpression	"dev_proc ( & mem_mono_device , fill_rectangle )"		165785	1					
ANR	165891	Callee	dev_proc		165785	0					
ANR	165892	Identifier	dev_proc		165785	0					
ANR	165893	ArgumentList	& mem_mono_device		165785	1					
ANR	165894	Argument	& mem_mono_device		165785	0					
ANR	165895	UnaryOperationExpression	& mem_mono_device		165785	0					
ANR	165896	UnaryOperator	&		165785	0					
ANR	165897	Identifier	mem_mono_device		165785	1					
ANR	165898	Argument	fill_rectangle		165785	1					
ANR	165899	Identifier	fill_rectangle		165785	0					
ANR	165900	ArgumentList	dev		165785	1					
ANR	165901	Argument	dev		165785	0					
ANR	165902	Identifier	dev		165785	0					
ANR	165903	Argument	x		165785	1					
ANR	165904	Identifier	x		165785	0					
ANR	165905	Argument	yt . transfer_y		165785	2					
ANR	165906	MemberAccess	yt . transfer_y		165785	0					
ANR	165907	Identifier	yt		165785	0					
ANR	165908	Identifier	transfer_y		165785	1					
ANR	165909	Argument	w		165785	3					
ANR	165910	Identifier	w		165785	0					
ANR	165911	Argument	yt . transfer_height		165785	4					
ANR	165912	MemberAccess	yt . transfer_height		165785	0					
ANR	165913	Identifier	yt		165785	0					
ANR	165914	Identifier	transfer_height		165785	1					
ANR	165915	Argument	( gx_color_index ) 1		165785	5					
ANR	165916	CastExpression	( gx_color_index ) 1		165785	0					
ANR	165917	CastTarget	gx_color_index		165785	0					
ANR	165918	PrimaryExpression	1		165785	1					
ANR	165919	ReturnStatement	return 0 ;	429:4:17151:17159	165785	11	True				
ANR	165920	PrimaryExpression	0		165785	0					
ANR	165921	ReturnType	static int		165785	1					
ANR	165922	Identifier	mem_abuf_fill_rectangle		165785	2					
ANR	165923	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		165785	3					
ANR	165924	Parameter	gx_device * dev	408:24:16420:16434	165785	0	True				
ANR	165925	ParameterType	gx_device *		165785	0					
ANR	165926	Identifier	dev		165785	1					
ANR	165927	Parameter	int x	408:41:16437:16441	165785	1	True				
ANR	165928	ParameterType	int		165785	0					
ANR	165929	Identifier	x		165785	1					
ANR	165930	Parameter	int y	408:48:16444:16448	165785	2	True				
ANR	165931	ParameterType	int		165785	0					
ANR	165932	Identifier	y		165785	1					
ANR	165933	Parameter	int w	408:55:16451:16455	165785	3	True				
ANR	165934	ParameterType	int		165785	0					
ANR	165935	Identifier	w		165785	1					
ANR	165936	Parameter	int h	408:62:16458:16462	165785	4	True				
ANR	165937	ParameterType	int		165785	0					
ANR	165938	Identifier	h		165785	1					
ANR	165939	Parameter	gx_color_index color	409:24:16489:16508	165785	5	True				
ANR	165940	ParameterType	gx_color_index		165785	0					
ANR	165941	Identifier	color		165785	1					
ANR	165942	CFGEntryNode	ENTRY		165785		True				
ANR	165943	CFGExitNode	EXIT		165785		True				
ANR	165944	Symbol	yt . height_left		165785						
ANR	165945	Symbol	code		165785						
ANR	165946	Symbol	color		165785						
ANR	165947	Symbol	& yt		165785						
ANR	165948	Symbol	h		165785						
ANR	165949	Symbol	mdev -> mapped_x		165785						
ANR	165950	Symbol	mdev -> save_color		165785						
ANR	165951	Symbol	yt . transfer_height		165785						
ANR	165952	Symbol	fill_rectangle		165785						
ANR	165953	Symbol	dev		165785						
ANR	165954	Symbol	y_transfer_next		165785						
ANR	165955	Symbol	dev_proc		165785						
ANR	165956	Symbol	w		165785						
ANR	165957	Symbol	x		165785						
ANR	165958	Symbol	y		165785						
ANR	165959	Symbol	mdev		165785						
ANR	165960	Symbol	yt		165785						
ANR	165961	Symbol	yt . transfer_y		165785						
ANR	165962	Symbol	& mem_mono_device		165785						
ANR	165963	Symbol	* mdev		165785						
ANR	165964	Function	mem_abuf_fill_rectangle_hl_color	433:0:17188:18272							
ANR	165965	FunctionDef	"mem_abuf_fill_rectangle_hl_color (gx_device * dev , const gs_fixed_rect * rect , const gs_gstate * pgs , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath)"		165964	0					
ANR	165966	CompoundStatement		438:0:17458:18272	165964	0					
ANR	165967	Statement	gx_device_memory	439:4:17464:17479	165964	0	True				
ANR	165968	Statement	*	439:21:17481:17481	165964	1	True				
ANR	165969	Statement	const	439:23:17483:17487	165964	2	True				
ANR	165970	ExpressionStatement	mdev = ( gx_device_memory * ) dev	439:29:17489:17519	165964	3	True				
ANR	165971	AssignmentExpression	mdev = ( gx_device_memory * ) dev		165964	0		=			
ANR	165972	Identifier	mdev		165964	0					
ANR	165973	CastExpression	( gx_device_memory * ) dev		165964	1					
ANR	165974	CastTarget	gx_device_memory *		165964	0					
ANR	165975	Identifier	dev		165964	1					
ANR	165976	IdentifierDeclStatement	y_transfer yt ;	440:4:17525:17538	165964	4	True				
ANR	165977	IdentifierDecl	yt		165964	0					
ANR	165978	IdentifierDeclType	y_transfer		165964	0					
ANR	165979	Identifier	yt		165964	1					
ANR	165980	IdentifierDeclStatement	int x = fixed2int ( rect -> p . x ) ;	441:4:17544:17572	165964	5	True				
ANR	165981	IdentifierDecl	x = fixed2int ( rect -> p . x )		165964	0					
ANR	165982	IdentifierDeclType	int		165964	0					
ANR	165983	Identifier	x		165964	1					
ANR	165984	AssignmentExpression	x = fixed2int ( rect -> p . x )		165964	2		=			
ANR	165985	Identifier	x		165964	0					
ANR	165986	CallExpression	fixed2int ( rect -> p . x )		165964	1					
ANR	165987	Callee	fixed2int		165964	0					
ANR	165988	Identifier	fixed2int		165964	0					
ANR	165989	ArgumentList	rect -> p . x		165964	1					
ANR	165990	Argument	rect -> p . x		165964	0					
ANR	165991	MemberAccess	rect -> p . x		165964	0					
ANR	165992	PtrMemberAccess	rect -> p		165964	0					
ANR	165993	Identifier	rect		165964	0					
ANR	165994	Identifier	p		165964	1					
ANR	165995	Identifier	x		165964	1					
ANR	165996	IdentifierDeclStatement	int y = fixed2int ( rect -> p . y ) ;	442:4:17578:17606	165964	6	True				
ANR	165997	IdentifierDecl	y = fixed2int ( rect -> p . y )		165964	0					
ANR	165998	IdentifierDeclType	int		165964	0					
ANR	165999	Identifier	y		165964	1					
ANR	166000	AssignmentExpression	y = fixed2int ( rect -> p . y )		165964	2		=			
ANR	166001	Identifier	y		165964	0					
ANR	166002	CallExpression	fixed2int ( rect -> p . y )		165964	1					
ANR	166003	Callee	fixed2int		165964	0					
ANR	166004	Identifier	fixed2int		165964	0					
ANR	166005	ArgumentList	rect -> p . y		165964	1					
ANR	166006	Argument	rect -> p . y		165964	0					
ANR	166007	MemberAccess	rect -> p . y		165964	0					
ANR	166008	PtrMemberAccess	rect -> p		165964	0					
ANR	166009	Identifier	rect		165964	0					
ANR	166010	Identifier	p		165964	1					
ANR	166011	Identifier	y		165964	1					
ANR	166012	IdentifierDeclStatement	int w = fixed2int ( rect -> q . x ) - x ;	443:4:17612:17644	165964	7	True				
ANR	166013	IdentifierDecl	w = fixed2int ( rect -> q . x ) - x		165964	0					
ANR	166014	IdentifierDeclType	int		165964	0					
ANR	166015	Identifier	w		165964	1					
ANR	166016	AssignmentExpression	w = fixed2int ( rect -> q . x ) - x		165964	2		=			
ANR	166017	Identifier	w		165964	0					
ANR	166018	AdditiveExpression	fixed2int ( rect -> q . x ) - x		165964	1		-			
ANR	166019	CallExpression	fixed2int ( rect -> q . x )		165964	0					
ANR	166020	Callee	fixed2int		165964	0					
ANR	166021	Identifier	fixed2int		165964	0					
ANR	166022	ArgumentList	rect -> q . x		165964	1					
ANR	166023	Argument	rect -> q . x		165964	0					
ANR	166024	MemberAccess	rect -> q . x		165964	0					
ANR	166025	PtrMemberAccess	rect -> q		165964	0					
ANR	166026	Identifier	rect		165964	0					
ANR	166027	Identifier	q		165964	1					
ANR	166028	Identifier	x		165964	1					
ANR	166029	Identifier	x		165964	1					
ANR	166030	IdentifierDeclStatement	int h = fixed2int ( rect -> q . y ) - y ;	444:4:17650:17682	165964	8	True				
ANR	166031	IdentifierDecl	h = fixed2int ( rect -> q . y ) - y		165964	0					
ANR	166032	IdentifierDeclType	int		165964	0					
ANR	166033	Identifier	h		165964	1					
ANR	166034	AssignmentExpression	h = fixed2int ( rect -> q . y ) - y		165964	2		=			
ANR	166035	Identifier	h		165964	0					
ANR	166036	AdditiveExpression	fixed2int ( rect -> q . y ) - y		165964	1		-			
ANR	166037	CallExpression	fixed2int ( rect -> q . y )		165964	0					
ANR	166038	Callee	fixed2int		165964	0					
ANR	166039	Identifier	fixed2int		165964	0					
ANR	166040	ArgumentList	rect -> q . y		165964	1					
ANR	166041	Argument	rect -> q . y		165964	0					
ANR	166042	MemberAccess	rect -> q . y		165964	0					
ANR	166043	PtrMemberAccess	rect -> q		165964	0					
ANR	166044	Identifier	rect		165964	0					
ANR	166045	Identifier	q		165964	1					
ANR	166046	Identifier	y		165964	1					
ANR	166047	Identifier	y		165964	1					
ANR	166048	ExpressionStatement	( void ) pgs	445:4:17688:17697	165964	9	True				
ANR	166049	CastExpression	( void ) pgs		165964	0					
ANR	166050	CastTarget	void		165964	0					
ANR	166051	Identifier	pgs		165964	1					
ANR	166052	ExpressionStatement	x -= mdev -> mapped_x	447:4:17704:17723	165964	10	True				
ANR	166053	AssignmentExpression	x -= mdev -> mapped_x		165964	0		-=			
ANR	166054	Identifier	x		165964	0					
ANR	166055	PtrMemberAccess	mdev -> mapped_x		165964	1					
ANR	166056	Identifier	mdev		165964	0					
ANR	166057	Identifier	mapped_x		165964	1					
ANR	166058	ExpressionStatement	"fit_fill_xy ( dev , x , y , w , h )"	448:4:17729:17757	165964	11	True				
ANR	166059	CallExpression	"fit_fill_xy ( dev , x , y , w , h )"		165964	0					
ANR	166060	Callee	fit_fill_xy		165964	0					
ANR	166061	Identifier	fit_fill_xy		165964	0					
ANR	166062	ArgumentList	dev		165964	1					
ANR	166063	Argument	dev		165964	0					
ANR	166064	Identifier	dev		165964	0					
ANR	166065	Argument	x		165964	1					
ANR	166066	Identifier	x		165964	0					
ANR	166067	Argument	y		165964	2					
ANR	166068	Identifier	y		165964	0					
ANR	166069	Argument	w		165964	3					
ANR	166070	Identifier	w		165964	0					
ANR	166071	Argument	h		165964	4					
ANR	166072	Identifier	h		165964	0					
ANR	166073	ExpressionStatement	"fit_fill_w ( dev , x , w )"	449:4:17763:17784	165964	12	True				
ANR	166074	CallExpression	"fit_fill_w ( dev , x , w )"		165964	0					
ANR	166075	Callee	fit_fill_w		165964	0					
ANR	166076	Identifier	fit_fill_w		165964	0					
ANR	166077	ArgumentList	dev		165964	1					
ANR	166078	Argument	dev		165964	0					
ANR	166079	Identifier	dev		165964	0					
ANR	166080	Argument	x		165964	1					
ANR	166081	Identifier	x		165964	0					
ANR	166082	Argument	w		165964	2					
ANR	166083	Identifier	w		165964	0					
ANR	166084	ExpressionStatement	mdev -> save_hl_color = pdcolor	451:4:17844:17873	165964	13	True				
ANR	166085	AssignmentExpression	mdev -> save_hl_color = pdcolor		165964	0		=			
ANR	166086	PtrMemberAccess	mdev -> save_hl_color		165964	0					
ANR	166087	Identifier	mdev		165964	0					
ANR	166088	Identifier	save_hl_color		165964	1					
ANR	166089	Identifier	pdcolor		165964	1					
ANR	166090	ExpressionStatement	"y_transfer_init ( & yt , dev , y , h )"	452:4:17879:17910	165964	14	True				
ANR	166091	CallExpression	"y_transfer_init ( & yt , dev , y , h )"		165964	0					
ANR	166092	Callee	y_transfer_init		165964	0					
ANR	166093	Identifier	y_transfer_init		165964	0					
ANR	166094	ArgumentList	& yt		165964	1					
ANR	166095	Argument	& yt		165964	0					
ANR	166096	UnaryOperationExpression	& yt		165964	0					
ANR	166097	UnaryOperator	&		165964	0					
ANR	166098	Identifier	yt		165964	1					
ANR	166099	Argument	dev		165964	1					
ANR	166100	Identifier	dev		165964	0					
ANR	166101	Argument	y		165964	2					
ANR	166102	Identifier	y		165964	0					
ANR	166103	Argument	h		165964	3					
ANR	166104	Identifier	h		165964	0					
ANR	166105	WhileStatement	while ( yt . height_left > 0 )		165964	15					
ANR	166106	Condition	yt . height_left > 0	453:11:17923:17940	165964	0	True				
ANR	166107	RelationalExpression	yt . height_left > 0		165964	0		>			
ANR	166108	MemberAccess	yt . height_left		165964	0					
ANR	166109	Identifier	yt		165964	0					
ANR	166110	Identifier	height_left		165964	1					
ANR	166111	PrimaryExpression	0		165964	1					
ANR	166112	CompoundStatement		17:8:494:530	165964	1					
ANR	166113	IdentifierDeclStatement	"int code = y_transfer_next ( & yt , dev ) ;"	454:8:17953:17989	165964	0	True				
ANR	166114	IdentifierDecl	"code = y_transfer_next ( & yt , dev )"		165964	0					
ANR	166115	IdentifierDeclType	int		165964	0					
ANR	166116	Identifier	code		165964	1					
ANR	166117	AssignmentExpression	"code = y_transfer_next ( & yt , dev )"		165964	2		=			
ANR	166118	Identifier	code		165964	0					
ANR	166119	CallExpression	"y_transfer_next ( & yt , dev )"		165964	1					
ANR	166120	Callee	y_transfer_next		165964	0					
ANR	166121	Identifier	y_transfer_next		165964	0					
ANR	166122	ArgumentList	& yt		165964	1					
ANR	166123	Argument	& yt		165964	0					
ANR	166124	UnaryOperationExpression	& yt		165964	0					
ANR	166125	UnaryOperator	&		165964	0					
ANR	166126	Identifier	yt		165964	1					
ANR	166127	Argument	dev		165964	1					
ANR	166128	Identifier	dev		165964	0					
ANR	166129	IfStatement	if ( code < 0 )		165964	1					
ANR	166130	Condition	code < 0	456:12:18004:18011	165964	0	True				
ANR	166131	RelationalExpression	code < 0		165964	0		<			
ANR	166132	Identifier	code		165964	0					
ANR	166133	PrimaryExpression	0		165964	1					
ANR	166134	ReturnStatement	return code ;	457:12:18026:18037	165964	1	True				
ANR	166135	Identifier	code		165964	0					
ANR	166136	ExpressionStatement	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"	458:8:18047:18250	165964	2	True				
ANR	166137	CallExpression	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"		165964	0					
ANR	166138	Callee	"* dev_proc ( & mem_mono_device , fill_rectangle )"		165964	0					
ANR	166139	UnaryOperationExpression	"* dev_proc ( & mem_mono_device , fill_rectangle )"		165964	0					
ANR	166140	UnaryOperator	*		165964	0					
ANR	166141	CallExpression	"dev_proc ( & mem_mono_device , fill_rectangle )"		165964	1					
ANR	166142	Callee	dev_proc		165964	0					
ANR	166143	Identifier	dev_proc		165964	0					
ANR	166144	ArgumentList	& mem_mono_device		165964	1					
ANR	166145	Argument	& mem_mono_device		165964	0					
ANR	166146	UnaryOperationExpression	& mem_mono_device		165964	0					
ANR	166147	UnaryOperator	&		165964	0					
ANR	166148	Identifier	mem_mono_device		165964	1					
ANR	166149	Argument	fill_rectangle		165964	1					
ANR	166150	Identifier	fill_rectangle		165964	0					
ANR	166151	ArgumentList	dev		165964	1					
ANR	166152	Argument	dev		165964	0					
ANR	166153	Identifier	dev		165964	0					
ANR	166154	Argument	x		165964	1					
ANR	166155	Identifier	x		165964	0					
ANR	166156	Argument	yt . transfer_y		165964	2					
ANR	166157	MemberAccess	yt . transfer_y		165964	0					
ANR	166158	Identifier	yt		165964	0					
ANR	166159	Identifier	transfer_y		165964	1					
ANR	166160	Argument	w		165964	3					
ANR	166161	Identifier	w		165964	0					
ANR	166162	Argument	yt . transfer_height		165964	4					
ANR	166163	MemberAccess	yt . transfer_height		165964	0					
ANR	166164	Identifier	yt		165964	0					
ANR	166165	Identifier	transfer_height		165964	1					
ANR	166166	Argument	( gx_color_index ) 1		165964	5					
ANR	166167	CastExpression	( gx_color_index ) 1		165964	0					
ANR	166168	CastTarget	gx_color_index		165964	0					
ANR	166169	PrimaryExpression	1		165964	1					
ANR	166170	ReturnStatement	return 0 ;	462:4:18262:18270	165964	16	True				
ANR	166171	PrimaryExpression	0		165964	0					
ANR	166172	ReturnType	static int		165964	1					
ANR	166173	Identifier	mem_abuf_fill_rectangle_hl_color		165964	2					
ANR	166174	ParameterList	"gx_device * dev , const gs_fixed_rect * rect , const gs_gstate * pgs , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath"		165964	3					
ANR	166175	Parameter	gx_device * dev	434:33:17232:17246	165964	0	True				
ANR	166176	ParameterType	gx_device *		165964	0					
ANR	166177	Identifier	dev		165964	1					
ANR	166178	Parameter	const gs_fixed_rect * rect	434:50:17249:17273	165964	1	True				
ANR	166179	ParameterType	const gs_fixed_rect *		165964	0					
ANR	166180	Identifier	rect		165964	1					
ANR	166181	Parameter	const gs_gstate * pgs	435:33:17309:17328	165964	2	True				
ANR	166182	ParameterType	const gs_gstate *		165964	0					
ANR	166183	Identifier	pgs		165964	1					
ANR	166184	Parameter	const gx_drawing_color * pdcolor	436:33:17364:17394	165964	3	True				
ANR	166185	ParameterType	const gx_drawing_color *		165964	0					
ANR	166186	Identifier	pdcolor		165964	1					
ANR	166187	Parameter	const gx_clip_path * pcpath	437:33:17430:17455	165964	4	True				
ANR	166188	ParameterType	const gx_clip_path *		165964	0					
ANR	166189	Identifier	pcpath		165964	1					
ANR	166190	CFGEntryNode	ENTRY		165964		True				
ANR	166191	CFGExitNode	EXIT		165964		True				
ANR	166192	Symbol	rect -> p . x		165964						
ANR	166193	Symbol	code		165964						
ANR	166194	Symbol	& yt		165964						
ANR	166195	Symbol	rect -> p . y		165964						
ANR	166196	Symbol	rect -> q . y		165964						
ANR	166197	Symbol	rect -> q . x		165964						
ANR	166198	Symbol	mdev -> save_hl_color		165964						
ANR	166199	Symbol	yt . transfer_height		165964						
ANR	166200	Symbol	fixed2int		165964						
ANR	166201	Symbol	rect		165964						
ANR	166202	Symbol	dev		165964						
ANR	166203	Symbol	dev_proc		165964						
ANR	166204	Symbol	yt		165964						
ANR	166205	Symbol	pgs		165964						
ANR	166206	Symbol	rect -> q		165964						
ANR	166207	Symbol	yt . transfer_y		165964						
ANR	166208	Symbol	pcpath		165964						
ANR	166209	Symbol	rect -> p		165964						
ANR	166210	Symbol	* mdev		165964						
ANR	166211	Symbol	yt . height_left		165964						
ANR	166212	Symbol	h		165964						
ANR	166213	Symbol	mdev -> mapped_x		165964						
ANR	166214	Symbol	pdcolor		165964						
ANR	166215	Symbol	fill_rectangle		165964						
ANR	166216	Symbol	y_transfer_next		165964						
ANR	166217	Symbol	w		165964						
ANR	166218	Symbol	x		165964						
ANR	166219	Symbol	* rect		165964						
ANR	166220	Symbol	y		165964						
ANR	166221	Symbol	mdev		165964						
ANR	166222	Symbol	& mem_mono_device		165964						
ANR	166223	Function	mem_abuf_get_clipping_box	466:0:18355:18738							
ANR	166224	FunctionDef	"mem_abuf_get_clipping_box (gx_device * dev , gs_fixed_rect * pbox)"		166223	0					
ANR	166225	CompoundStatement		468:0:18432:18738	166223	0					
ANR	166226	Statement	gx_device_memory	469:4:18438:18453	166223	0	True				
ANR	166227	Statement	*	469:21:18455:18455	166223	1	True				
ANR	166228	Statement	const	469:23:18457:18461	166223	2	True				
ANR	166229	ExpressionStatement	mdev = ( gx_device_memory * ) dev	469:29:18463:18493	166223	3	True				
ANR	166230	AssignmentExpression	mdev = ( gx_device_memory * ) dev		166223	0		=			
ANR	166231	Identifier	mdev		166223	0					
ANR	166232	CastExpression	( gx_device_memory * ) dev		166223	1					
ANR	166233	CastTarget	gx_device_memory *		166223	0					
ANR	166234	Identifier	dev		166223	1					
ANR	166235	IdentifierDeclStatement	gx_device * tdev = mdev -> target ;	470:4:18499:18529	166223	4	True				
ANR	166236	IdentifierDecl	* tdev = mdev -> target		166223	0					
ANR	166237	IdentifierDeclType	gx_device *		166223	0					
ANR	166238	Identifier	tdev		166223	1					
ANR	166239	AssignmentExpression	* tdev = mdev -> target		166223	2		=			
ANR	166240	Identifier	tdev		166223	0					
ANR	166241	PtrMemberAccess	mdev -> target		166223	1					
ANR	166242	Identifier	mdev		166223	0					
ANR	166243	Identifier	target		166223	1					
ANR	166244	ExpressionStatement	"( * dev_proc ( tdev , get_clipping_box ) ) ( tdev , pbox )"	472:4:18536:18584	166223	5	True				
ANR	166245	CallExpression	"( * dev_proc ( tdev , get_clipping_box ) ) ( tdev , pbox )"		166223	0					
ANR	166246	Callee	"* dev_proc ( tdev , get_clipping_box )"		166223	0					
ANR	166247	UnaryOperationExpression	"* dev_proc ( tdev , get_clipping_box )"		166223	0					
ANR	166248	UnaryOperator	*		166223	0					
ANR	166249	CallExpression	"dev_proc ( tdev , get_clipping_box )"		166223	1					
ANR	166250	Callee	dev_proc		166223	0					
ANR	166251	Identifier	dev_proc		166223	0					
ANR	166252	ArgumentList	tdev		166223	1					
ANR	166253	Argument	tdev		166223	0					
ANR	166254	Identifier	tdev		166223	0					
ANR	166255	Argument	get_clipping_box		166223	1					
ANR	166256	Identifier	get_clipping_box		166223	0					
ANR	166257	ArgumentList	tdev		166223	1					
ANR	166258	Argument	tdev		166223	0					
ANR	166259	Identifier	tdev		166223	0					
ANR	166260	Argument	pbox		166223	1					
ANR	166261	Identifier	pbox		166223	0					
ANR	166262	ExpressionStatement	pbox -> p . x <<= mdev -> log2_scale . x	473:4:18590:18622	166223	6	True				
ANR	166263	AssignmentExpression	pbox -> p . x <<= mdev -> log2_scale . x		166223	0		<<=			
ANR	166264	MemberAccess	pbox -> p . x		166223	0					
ANR	166265	PtrMemberAccess	pbox -> p		166223	0					
ANR	166266	Identifier	pbox		166223	0					
ANR	166267	Identifier	p		166223	1					
ANR	166268	Identifier	x		166223	1					
ANR	166269	MemberAccess	mdev -> log2_scale . x		166223	1					
ANR	166270	PtrMemberAccess	mdev -> log2_scale		166223	0					
ANR	166271	Identifier	mdev		166223	0					
ANR	166272	Identifier	log2_scale		166223	1					
ANR	166273	Identifier	x		166223	1					
ANR	166274	ExpressionStatement	pbox -> p . y <<= mdev -> log2_scale . y	474:4:18628:18660	166223	7	True				
ANR	166275	AssignmentExpression	pbox -> p . y <<= mdev -> log2_scale . y		166223	0		<<=			
ANR	166276	MemberAccess	pbox -> p . y		166223	0					
ANR	166277	PtrMemberAccess	pbox -> p		166223	0					
ANR	166278	Identifier	pbox		166223	0					
ANR	166279	Identifier	p		166223	1					
ANR	166280	Identifier	y		166223	1					
ANR	166281	MemberAccess	mdev -> log2_scale . y		166223	1					
ANR	166282	PtrMemberAccess	mdev -> log2_scale		166223	0					
ANR	166283	Identifier	mdev		166223	0					
ANR	166284	Identifier	log2_scale		166223	1					
ANR	166285	Identifier	y		166223	1					
ANR	166286	ExpressionStatement	pbox -> q . x <<= mdev -> log2_scale . x	475:4:18666:18698	166223	8	True				
ANR	166287	AssignmentExpression	pbox -> q . x <<= mdev -> log2_scale . x		166223	0		<<=			
ANR	166288	MemberAccess	pbox -> q . x		166223	0					
ANR	166289	PtrMemberAccess	pbox -> q		166223	0					
ANR	166290	Identifier	pbox		166223	0					
ANR	166291	Identifier	q		166223	1					
ANR	166292	Identifier	x		166223	1					
ANR	166293	MemberAccess	mdev -> log2_scale . x		166223	1					
ANR	166294	PtrMemberAccess	mdev -> log2_scale		166223	0					
ANR	166295	Identifier	mdev		166223	0					
ANR	166296	Identifier	log2_scale		166223	1					
ANR	166297	Identifier	x		166223	1					
ANR	166298	ExpressionStatement	pbox -> q . y <<= mdev -> log2_scale . y	476:4:18704:18736	166223	9	True				
ANR	166299	AssignmentExpression	pbox -> q . y <<= mdev -> log2_scale . y		166223	0		<<=			
ANR	166300	MemberAccess	pbox -> q . y		166223	0					
ANR	166301	PtrMemberAccess	pbox -> q		166223	0					
ANR	166302	Identifier	pbox		166223	0					
ANR	166303	Identifier	q		166223	1					
ANR	166304	Identifier	y		166223	1					
ANR	166305	MemberAccess	mdev -> log2_scale . y		166223	1					
ANR	166306	PtrMemberAccess	mdev -> log2_scale		166223	0					
ANR	166307	Identifier	mdev		166223	0					
ANR	166308	Identifier	log2_scale		166223	1					
ANR	166309	Identifier	y		166223	1					
ANR	166310	ReturnType	static void		166223	1					
ANR	166311	Identifier	mem_abuf_get_clipping_box		166223	2					
ANR	166312	ParameterList	"gx_device * dev , gs_fixed_rect * pbox"		166223	3					
ANR	166313	Parameter	gx_device * dev	467:26:18393:18407	166223	0	True				
ANR	166314	ParameterType	gx_device *		166223	0					
ANR	166315	Identifier	dev		166223	1					
ANR	166316	Parameter	gs_fixed_rect * pbox	467:43:18410:18429	166223	1	True				
ANR	166317	ParameterType	gs_fixed_rect *		166223	0					
ANR	166318	Identifier	pbox		166223	1					
ANR	166319	CFGEntryNode	ENTRY		166223		True				
ANR	166320	CFGExitNode	EXIT		166223		True				
ANR	166321	Symbol	pbox -> p . x		166223						
ANR	166322	Symbol	pbox -> p . y		166223						
ANR	166323	Symbol	mdev -> target		166223						
ANR	166324	Symbol	get_clipping_box		166223						
ANR	166325	Symbol	mdev -> log2_scale		166223						
ANR	166326	Symbol	pbox		166223						
ANR	166327	Symbol	pbox -> q		166223						
ANR	166328	Symbol	* pbox		166223						
ANR	166329	Symbol	pbox -> p		166223						
ANR	166330	Symbol	dev		166223						
ANR	166331	Symbol	dev_proc		166223						
ANR	166332	Symbol	tdev		166223						
ANR	166333	Symbol	mdev		166223						
ANR	166334	Symbol	mdev -> log2_scale . y		166223						
ANR	166335	Symbol	pbox -> q . y		166223						
ANR	166336	Symbol	mdev -> log2_scale . x		166223						
ANR	166337	Symbol	* mdev		166223						
ANR	166338	Symbol	pbox -> q . x		166223						
ANR	166339	Function	alpha_buffer_bits	483:0:18872:19196							
ANR	166340	FunctionDef	alpha_buffer_bits (gs_gstate * pgs)		166339	0					
ANR	166341	CompoundStatement		485:0:18911:19196	166339	0					
ANR	166342	IdentifierDeclStatement	gx_device * dev ;	486:4:18917:18931	166339	0	True				
ANR	166343	IdentifierDecl	* dev		166339	0					
ANR	166344	IdentifierDeclType	gx_device *		166339	0					
ANR	166345	Identifier	dev		166339	1					
ANR	166346	ExpressionStatement	dev = gs_currentdevice_inline ( pgs )	488:4:18938:18972	166339	1	True				
ANR	166347	AssignmentExpression	dev = gs_currentdevice_inline ( pgs )		166339	0		=			
ANR	166348	Identifier	dev		166339	0					
ANR	166349	CallExpression	gs_currentdevice_inline ( pgs )		166339	1					
ANR	166350	Callee	gs_currentdevice_inline		166339	0					
ANR	166351	Identifier	gs_currentdevice_inline		166339	0					
ANR	166352	ArgumentList	pgs		166339	1					
ANR	166353	Argument	pgs		166339	0					
ANR	166354	Identifier	pgs		166339	0					
ANR	166355	IfStatement	if ( gs_device_is_abuf ( dev ) )		166339	2					
ANR	166356	Condition	gs_device_is_abuf ( dev )	489:8:18982:19003	166339	0	True				
ANR	166357	CallExpression	gs_device_is_abuf ( dev )		166339	0					
ANR	166358	Callee	gs_device_is_abuf		166339	0					
ANR	166359	Identifier	gs_device_is_abuf		166339	0					
ANR	166360	ArgumentList	dev		166339	1					
ANR	166361	Argument	dev		166339	0					
ANR	166362	Identifier	dev		166339	0					
ANR	166363	CompoundStatement		5:32:94:94	166339	1					
ANR	166364	ReturnStatement	return 0 ;	491:8:19074:19082	166339	0	True				
ANR	166365	PrimaryExpression	0		166339	0					
ANR	166366	ReturnStatement	"return ( * dev_proc ( dev , get_alpha_bits ) ) ( dev , ( pgs -> in_cachedevice ? go_text : go_graphics ) ) ;"	493:4:19094:19194	166339	3	True				
ANR	166367	CallExpression	"( * dev_proc ( dev , get_alpha_bits ) ) ( dev , ( pgs -> in_cachedevice ? go_text : go_graphics ) )"		166339	0					
ANR	166368	Callee	"* dev_proc ( dev , get_alpha_bits )"		166339	0					
ANR	166369	UnaryOperationExpression	"* dev_proc ( dev , get_alpha_bits )"		166339	0					
ANR	166370	UnaryOperator	*		166339	0					
ANR	166371	CallExpression	"dev_proc ( dev , get_alpha_bits )"		166339	1					
ANR	166372	Callee	dev_proc		166339	0					
ANR	166373	Identifier	dev_proc		166339	0					
ANR	166374	ArgumentList	dev		166339	1					
ANR	166375	Argument	dev		166339	0					
ANR	166376	Identifier	dev		166339	0					
ANR	166377	Argument	get_alpha_bits		166339	1					
ANR	166378	Identifier	get_alpha_bits		166339	0					
ANR	166379	ArgumentList	dev		166339	1					
ANR	166380	Argument	dev		166339	0					
ANR	166381	Identifier	dev		166339	0					
ANR	166382	Argument	pgs -> in_cachedevice ? go_text : go_graphics		166339	1					
ANR	166383	ConditionalExpression	pgs -> in_cachedevice ? go_text : go_graphics		166339	0					
ANR	166384	Condition	pgs -> in_cachedevice		166339	0					
ANR	166385	PtrMemberAccess	pgs -> in_cachedevice		166339	0					
ANR	166386	Identifier	pgs		166339	0					
ANR	166387	Identifier	in_cachedevice		166339	1					
ANR	166388	Identifier	go_text		166339	1					
ANR	166389	Identifier	go_graphics		166339	2					
ANR	166390	ReturnType	int		166339	1					
ANR	166391	Identifier	alpha_buffer_bits		166339	2					
ANR	166392	ParameterList	gs_gstate * pgs		166339	3					
ANR	166393	Parameter	gs_gstate * pgs	484:18:18894:18908	166339	0	True				
ANR	166394	ParameterType	gs_gstate *		166339	0					
ANR	166395	Identifier	pgs		166339	1					
ANR	166396	CFGEntryNode	ENTRY		166339		True				
ANR	166397	CFGExitNode	EXIT		166339		True				
ANR	166398	Symbol	"* dev_proc ( dev , get_alpha_bits )"		166339						
ANR	166399	Symbol	go_graphics		166339						
ANR	166400	Symbol	dev		166339						
ANR	166401	Symbol	gs_currentdevice_inline		166339						
ANR	166402	Symbol	* pgs		166339						
ANR	166403	Symbol	dev_proc		166339						
ANR	166404	Symbol	* dev_proc		166339						
ANR	166405	Symbol	gs_device_is_abuf		166339						
ANR	166406	Symbol	get_alpha_bits		166339						
ANR	166407	Symbol	go_text		166339						
ANR	166408	Symbol	pgs -> in_cachedevice		166339						
ANR	166409	Symbol	pgs		166339						
