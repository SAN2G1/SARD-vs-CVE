command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	120260	File	data/converged/CVE-2018-16863_ghostpdl/array.c								
ANR	120261	ClassDef	_cups_array_s	70:0:2744:3732							
ANR	120262	DeclStmt									
ANR	120263	Decl							int	int	num_elements
ANR	120264	Decl							int	int	alloc_elements
ANR	120265	Decl							int	int	current
ANR	120266	Decl							int	int	insert
ANR	120267	Decl							int	int	unique
ANR	120268	Decl							int	int	num_saved
ANR	120269	Decl							int	int [ _CUPS_MAXSAVE ]	saved
ANR	120270	DeclStmt									
ANR	120271	Decl							void	void * *	elements
ANR	120272	DeclStmt									
ANR	120273	Decl							cups_array_func_t	cups_array_func_t	compare
ANR	120274	DeclStmt									
ANR	120275	Decl							void	void *	data
ANR	120276	DeclStmt									
ANR	120277	Decl							cups_ahash_func_t	cups_ahash_func_t	hashfunc
ANR	120278	DeclStmt									
ANR	120279	Decl							int	int	hashsize
ANR	120280	Decl							int	int *	hash
ANR	120281	DeclStmt									
ANR	120282	Decl							cups_acopy_func_t	cups_acopy_func_t	copyfunc
ANR	120283	DeclStmt									
ANR	120284	Decl							cups_afree_func_t	cups_afree_func_t	freefunc
ANR	120285	DeclStmt									
ANR	120286	Decl							int	"int ( cups_array_t * a , void * e , int insert )"	cups_array_add
ANR	120287	DeclStmt									
ANR	120288	Decl							int	"int ( cups_array_t * a , void * e , int prev , int * rdiff )"	cups_array_find
ANR	120289	Function	cupsArrayAdd	116:0:4205:4596							
ANR	120290	FunctionDef	"cupsArrayAdd (cups_array_t * a , void * e)"		120289	0					
ANR	120291	CompoundStatement		119:0:4346:4596	120289	0					
ANR	120292	ExpressionStatement	"DEBUG_printf ( ( ""2cupsArrayAdd(a=%p, e=%p)"" , a , e ) )"	120:2:4350:4399	120289	0	True				
ANR	120293	CallExpression	"DEBUG_printf ( ( ""2cupsArrayAdd(a=%p, e=%p)"" , a , e ) )"		120289	0					
ANR	120294	Callee	DEBUG_printf		120289	0					
ANR	120295	Identifier	DEBUG_printf		120289	0					
ANR	120296	ArgumentList	"""2cupsArrayAdd(a=%p, e=%p)"" , a , e"		120289	1					
ANR	120297	Argument	"""2cupsArrayAdd(a=%p, e=%p)"" , a , e"		120289	0					
ANR	120298	Expression	"""2cupsArrayAdd(a=%p, e=%p)"" , a , e"		120289	0					
ANR	120299	PrimaryExpression	"""2cupsArrayAdd(a=%p, e=%p)"""		120289	0					
ANR	120300	Expression	"a , e"		120289	1					
ANR	120301	Identifier	a		120289	0					
ANR	120302	Identifier	e		120289	1					
ANR	120303	IfStatement	if ( ! a || ! e )		120289	1					
ANR	120304	Condition	! a || ! e	126:6:4443:4450	120289	0	True				
ANR	120305	OrExpression	! a || ! e		120289	0		||			
ANR	120306	UnaryOperationExpression	! a		120289	0					
ANR	120307	UnaryOperator	!		120289	0					
ANR	120308	Identifier	a		120289	1					
ANR	120309	UnaryOperationExpression	! e		120289	1					
ANR	120310	UnaryOperator	!		120289	0					
ANR	120311	Identifier	e		120289	1					
ANR	120312	CompoundStatement		9:2:108:108	120289	1					
ANR	120313	ExpressionStatement	"DEBUG_puts ( ""3cupsArrayAdd: returning 0"" )"	128:4:4461:4501	120289	0	True				
ANR	120314	CallExpression	"DEBUG_puts ( ""3cupsArrayAdd: returning 0"" )"		120289	0					
ANR	120315	Callee	DEBUG_puts		120289	0					
ANR	120316	Identifier	DEBUG_puts		120289	0					
ANR	120317	ArgumentList	"""3cupsArrayAdd: returning 0"""		120289	1					
ANR	120318	Argument	"""3cupsArrayAdd: returning 0"""		120289	0					
ANR	120319	PrimaryExpression	"""3cupsArrayAdd: returning 0"""		120289	0					
ANR	120320	ReturnStatement	return ( 0 ) ;	129:4:4507:4517	120289	1	True				
ANR	120321	PrimaryExpression	0		120289	0					
ANR	120322	ReturnStatement	"return ( cups_array_add ( a , e , 0 ) ) ;"	136:2:4562:4594	120289	2	True				
ANR	120323	CallExpression	"cups_array_add ( a , e , 0 )"		120289	0					
ANR	120324	Callee	cups_array_add		120289	0					
ANR	120325	Identifier	cups_array_add		120289	0					
ANR	120326	ArgumentList	a		120289	1					
ANR	120327	Argument	a		120289	0					
ANR	120328	Identifier	a		120289	0					
ANR	120329	Argument	e		120289	1					
ANR	120330	Identifier	e		120289	0					
ANR	120331	Argument	0		120289	2					
ANR	120332	PrimaryExpression	0		120289	0					
ANR	120333	ReturnType	int		120289	1					
ANR	120334	Identifier	cupsArrayAdd		120289	2					
ANR	120335	ParameterList	"cups_array_t * a , void * e"		120289	3					
ANR	120336	Parameter	cups_array_t * a	117:13:4263:4277	120289	0	True				
ANR	120337	ParameterType	cups_array_t *		120289	0					
ANR	120338	Identifier	a		120289	1					
ANR	120339	Parameter	void * e	118:13:4310:4324	120289	1	True				
ANR	120340	ParameterType	void *		120289	0					
ANR	120341	Identifier	e		120289	1					
ANR	120342	CFGEntryNode	ENTRY		120289		True				
ANR	120343	CFGExitNode	EXIT		120289		True				
ANR	120344	Symbol	a		120289						
ANR	120345	Symbol	cups_array_add		120289						
ANR	120346	Symbol	e		120289						
ANR	120347	Function	_cupsArrayAddStrings	148:0:4901:7045							
ANR	120348	FunctionDef	"_cupsArrayAddStrings (cups_array_t * a , const char * s , char delim)"		120347	0					
ANR	120349	CompoundStatement		152:0:5144:7045	120347	0					
ANR	120350	IdentifierDeclStatement	"char * buffer , * start , * end ;"	153:2:5148:5225	120347	0	True				
ANR	120351	IdentifierDecl	* buffer		120347	0					
ANR	120352	IdentifierDeclType	char *		120347	0					
ANR	120353	Identifier	buffer		120347	1					
ANR	120354	IdentifierDecl	* start		120347	1					
ANR	120355	IdentifierDeclType	char *		120347	0					
ANR	120356	Identifier	start		120347	1					
ANR	120357	IdentifierDecl	* end		120347	2					
ANR	120358	IdentifierDeclType	char *		120347	0					
ANR	120359	Identifier	end		120347	1					
ANR	120360	IdentifierDeclStatement	int status = 1 ;	156:2:5251:5266	120347	1	True				
ANR	120361	IdentifierDecl	status = 1		120347	0					
ANR	120362	IdentifierDeclType	int		120347	0					
ANR	120363	Identifier	status		120347	1					
ANR	120364	AssignmentExpression	status = 1		120347	2		=			
ANR	120365	Identifier	status		120347	0					
ANR	120366	PrimaryExpression	1		120347	1					
ANR	120367	ExpressionStatement	"DEBUG_printf ( ( ""_cupsArrayAddStrings(a=%p, s=\\""%s\\"", delim='%c')"" , a , s , delim ) )"	159:2:5293:5388	120347	2	True				
ANR	120368	CallExpression	"DEBUG_printf ( ( ""_cupsArrayAddStrings(a=%p, s=\\""%s\\"", delim='%c')"" , a , s , delim ) )"		120347	0					
ANR	120369	Callee	DEBUG_printf		120347	0					
ANR	120370	Identifier	DEBUG_printf		120347	0					
ANR	120371	ArgumentList	"""_cupsArrayAddStrings(a=%p, s=\\""%s\\"", delim='%c')"" , a , s , delim"		120347	1					
ANR	120372	Argument	"""_cupsArrayAddStrings(a=%p, s=\\""%s\\"", delim='%c')"" , a , s , delim"		120347	0					
ANR	120373	Expression	"""_cupsArrayAddStrings(a=%p, s=\\""%s\\"", delim='%c')"" , a , s , delim"		120347	0					
ANR	120374	PrimaryExpression	"""_cupsArrayAddStrings(a=%p, s=\\""%s\\"", delim='%c')"""		120347	0					
ANR	120375	Expression	"a , s , delim"		120347	1					
ANR	120376	Identifier	a		120347	0					
ANR	120377	Expression	"s , delim"		120347	1					
ANR	120378	Identifier	s		120347	0					
ANR	120379	Identifier	delim		120347	1					
ANR	120380	IfStatement	if ( ! a || ! s || ! * s )		120347	3					
ANR	120381	Condition	! a || ! s || ! * s	162:6:5397:5411	120347	0	True				
ANR	120382	OrExpression	! a || ! s || ! * s		120347	0		||			
ANR	120383	UnaryOperationExpression	! a		120347	0					
ANR	120384	UnaryOperator	!		120347	0					
ANR	120385	Identifier	a		120347	1					
ANR	120386	OrExpression	! s || ! * s		120347	1		||			
ANR	120387	UnaryOperationExpression	! s		120347	0					
ANR	120388	UnaryOperator	!		120347	0					
ANR	120389	Identifier	s		120347	1					
ANR	120390	UnaryOperationExpression	! * s		120347	1					
ANR	120391	UnaryOperator	!		120347	0					
ANR	120392	UnaryOperationExpression	* s		120347	1					
ANR	120393	UnaryOperator	*		120347	0					
ANR	120394	Identifier	s		120347	1					
ANR	120395	CompoundStatement		12:2:271:271	120347	1					
ANR	120396	ExpressionStatement	"DEBUG_puts ( ""1_cupsArrayAddStrings: Returning 0"" )"	164:4:5422:5470	120347	0	True				
ANR	120397	CallExpression	"DEBUG_puts ( ""1_cupsArrayAddStrings: Returning 0"" )"		120347	0					
ANR	120398	Callee	DEBUG_puts		120347	0					
ANR	120399	Identifier	DEBUG_puts		120347	0					
ANR	120400	ArgumentList	"""1_cupsArrayAddStrings: Returning 0"""		120347	1					
ANR	120401	Argument	"""1_cupsArrayAddStrings: Returning 0"""		120347	0					
ANR	120402	PrimaryExpression	"""1_cupsArrayAddStrings: Returning 0"""		120347	0					
ANR	120403	ReturnStatement	return ( 0 ) ;	165:4:5476:5486	120347	1	True				
ANR	120404	PrimaryExpression	0		120347	0					
ANR	120405	IfStatement	if ( delim == ' ' )		120347	4					
ANR	120406	Condition	delim == ' '	168:6:5499:5510	120347	0	True				
ANR	120407	EqualityExpression	delim == ' '		120347	0		==			
ANR	120408	Identifier	delim		120347	0					
ANR	120409	PrimaryExpression	' '		120347	1					
ANR	120410	CompoundStatement		18:2:370:370	120347	1					
ANR	120411	ExpressionStatement	"DEBUG_puts ( ""1_cupsArrayAddStrings: Skipping leading whitespace."" )"	174:4:5568:5633	120347	0	True				
ANR	120412	CallExpression	"DEBUG_puts ( ""1_cupsArrayAddStrings: Skipping leading whitespace."" )"		120347	0					
ANR	120413	Callee	DEBUG_puts		120347	0					
ANR	120414	Identifier	DEBUG_puts		120347	0					
ANR	120415	ArgumentList	"""1_cupsArrayAddStrings: Skipping leading whitespace."""		120347	1					
ANR	120416	Argument	"""1_cupsArrayAddStrings: Skipping leading whitespace."""		120347	0					
ANR	120417	PrimaryExpression	"""1_cupsArrayAddStrings: Skipping leading whitespace."""		120347	0					
ANR	120418	WhileStatement	while ( * s && isspace ( * s & 255 ) )		120347	1					
ANR	120419	Condition	* s && isspace ( * s & 255 )	176:11:5647:5669	120347	0	True				
ANR	120420	AndExpression	* s && isspace ( * s & 255 )		120347	0		&&			
ANR	120421	UnaryOperationExpression	* s		120347	0					
ANR	120422	UnaryOperator	*		120347	0					
ANR	120423	Identifier	s		120347	1					
ANR	120424	CallExpression	isspace ( * s & 255 )		120347	1					
ANR	120425	Callee	isspace		120347	0					
ANR	120426	Identifier	isspace		120347	0					
ANR	120427	ArgumentList	* s & 255		120347	1					
ANR	120428	Argument	* s & 255		120347	0					
ANR	120429	BitAndExpression	* s & 255		120347	0		&			
ANR	120430	UnaryOperationExpression	* s		120347	0					
ANR	120431	UnaryOperator	*		120347	0					
ANR	120432	Identifier	s		120347	1					
ANR	120433	PrimaryExpression	255		120347	1					
ANR	120434	ExpressionStatement	s ++	177:6:5678:5682	120347	1	True				
ANR	120435	PostIncDecOperationExpression	s ++		120347	0					
ANR	120436	Identifier	s		120347	0					
ANR	120437	IncDec	++		120347	1					
ANR	120438	ExpressionStatement	"DEBUG_printf ( ( ""1_cupsArrayAddStrings: Remaining string \\""%s\\""."" , s ) )"	179:4:5689:5757	120347	2	True				
ANR	120439	CallExpression	"DEBUG_printf ( ( ""1_cupsArrayAddStrings: Remaining string \\""%s\\""."" , s ) )"		120347	0					
ANR	120440	Callee	DEBUG_printf		120347	0					
ANR	120441	Identifier	DEBUG_printf		120347	0					
ANR	120442	ArgumentList	"""1_cupsArrayAddStrings: Remaining string \\""%s\\""."" , s"		120347	1					
ANR	120443	Argument	"""1_cupsArrayAddStrings: Remaining string \\""%s\\""."" , s"		120347	0					
ANR	120444	Expression	"""1_cupsArrayAddStrings: Remaining string \\""%s\\""."" , s"		120347	0					
ANR	120445	PrimaryExpression	"""1_cupsArrayAddStrings: Remaining string \\""%s\\""."""		120347	0					
ANR	120446	Identifier	s		120347	1					
ANR	120447	IfStatement	"if ( ! strchr ( s , delim ) && ( delim != ' ' || ( ! strchr ( s , '\\t' ) && ! strchr ( s , '\\n' ) ) ) )"		120347	5					
ANR	120448	Condition	"! strchr ( s , delim ) && ( delim != ' ' || ( ! strchr ( s , '\\t' ) && ! strchr ( s , '\\n' ) ) )"	182:6:5770:5852	120347	0	True				
ANR	120449	AndExpression	"! strchr ( s , delim ) && ( delim != ' ' || ( ! strchr ( s , '\\t' ) && ! strchr ( s , '\\n' ) ) )"		120347	0		&&			
ANR	120450	UnaryOperationExpression	"! strchr ( s , delim )"		120347	0					
ANR	120451	UnaryOperator	!		120347	0					
ANR	120452	CallExpression	"strchr ( s , delim )"		120347	1					
ANR	120453	Callee	strchr		120347	0					
ANR	120454	Identifier	strchr		120347	0					
ANR	120455	ArgumentList	s		120347	1					
ANR	120456	Argument	s		120347	0					
ANR	120457	Identifier	s		120347	0					
ANR	120458	Argument	delim		120347	1					
ANR	120459	Identifier	delim		120347	0					
ANR	120460	OrExpression	"delim != ' ' || ( ! strchr ( s , '\\t' ) && ! strchr ( s , '\\n' ) )"		120347	1		||			
ANR	120461	EqualityExpression	delim != ' '		120347	0		!=			
ANR	120462	Identifier	delim		120347	0					
ANR	120463	PrimaryExpression	' '		120347	1					
ANR	120464	AndExpression	"! strchr ( s , '\\t' ) && ! strchr ( s , '\\n' )"		120347	1		&&			
ANR	120465	UnaryOperationExpression	"! strchr ( s , '\\t' )"		120347	0					
ANR	120466	UnaryOperator	!		120347	0					
ANR	120467	CallExpression	"strchr ( s , '\\t' )"		120347	1					
ANR	120468	Callee	strchr		120347	0					
ANR	120469	Identifier	strchr		120347	0					
ANR	120470	ArgumentList	s		120347	1					
ANR	120471	Argument	s		120347	0					
ANR	120472	Identifier	s		120347	0					
ANR	120473	Argument	'\\t'		120347	1					
ANR	120474	PrimaryExpression	'\\t'		120347	0					
ANR	120475	UnaryOperationExpression	"! strchr ( s , '\\n' )"		120347	1					
ANR	120476	UnaryOperator	!		120347	0					
ANR	120477	CallExpression	"strchr ( s , '\\n' )"		120347	1					
ANR	120478	Callee	strchr		120347	0					
ANR	120479	Identifier	strchr		120347	0					
ANR	120480	ArgumentList	s		120347	1					
ANR	120481	Argument	s		120347	0					
ANR	120482	Identifier	s		120347	0					
ANR	120483	Argument	'\\n'		120347	1					
ANR	120484	PrimaryExpression	'\\n'		120347	0					
ANR	120485	CompoundStatement		33:2:712:712	120347	1					
ANR	120486	Statement	DEBUG_puts	189:4:5950:5959	120347	0	True				
ANR	120487	Statement	(	189:14:5960:5960	120347	1	True				
ANR	120488	Statement	"""1_cupsArrayAddStrings: No delimiter seen, adding a single """	189:15:5961:6020	120347	2	True				
ANR	120489	Statement	"""value."""	190:15:6037:6044	120347	3	True				
ANR	120490	Statement	)	190:23:6045:6045	120347	4	True				
ANR	120491	ExpressionStatement		190:24:6046:6046	120347	5	True				
ANR	120492	IfStatement	"if ( ! cupsArrayFind ( a , ( void * ) s ) )"		120347	6					
ANR	120493	Condition	"! cupsArrayFind ( a , ( void * ) s )"	192:8:6057:6084	120347	0	True				
ANR	120494	UnaryOperationExpression	"! cupsArrayFind ( a , ( void * ) s )"		120347	0					
ANR	120495	UnaryOperator	!		120347	0					
ANR	120496	CallExpression	"cupsArrayFind ( a , ( void * ) s )"		120347	1					
ANR	120497	Callee	cupsArrayFind		120347	0					
ANR	120498	Identifier	cupsArrayFind		120347	0					
ANR	120499	ArgumentList	a		120347	1					
ANR	120500	Argument	a		120347	0					
ANR	120501	Identifier	a		120347	0					
ANR	120502	Argument	( void * ) s		120347	1					
ANR	120503	CastExpression	( void * ) s		120347	0					
ANR	120504	CastTarget	void *		120347	0					
ANR	120505	Identifier	s		120347	1					
ANR	120506	ExpressionStatement	"status = cupsArrayAdd ( a , ( void * ) s )"	193:6:6093:6128	120347	1	True				
ANR	120507	AssignmentExpression	"status = cupsArrayAdd ( a , ( void * ) s )"		120347	0		=			
ANR	120508	Identifier	status		120347	0					
ANR	120509	CallExpression	"cupsArrayAdd ( a , ( void * ) s )"		120347	1					
ANR	120510	Callee	cupsArrayAdd		120347	0					
ANR	120511	Identifier	cupsArrayAdd		120347	0					
ANR	120512	ArgumentList	a		120347	1					
ANR	120513	Argument	a		120347	0					
ANR	120514	Identifier	a		120347	0					
ANR	120515	Argument	( void * ) s		120347	1					
ANR	120516	CastExpression	( void * ) s		120347	0					
ANR	120517	CastTarget	void *		120347	0					
ANR	120518	Identifier	s		120347	1					
ANR	120519	ElseStatement	else		120347	0					
ANR	120520	IfStatement	if ( ( buffer = strdup ( s ) ) == NULL )		120347	0					
ANR	120521	Condition	( buffer = strdup ( s ) ) == NULL	195:11:6145:6172	120347	0	True				
ANR	120522	EqualityExpression	( buffer = strdup ( s ) ) == NULL		120347	0		==			
ANR	120523	AssignmentExpression	buffer = strdup ( s )		120347	0		=			
ANR	120524	Identifier	buffer		120347	0					
ANR	120525	CallExpression	strdup ( s )		120347	1					
ANR	120526	Callee	strdup		120347	0					
ANR	120527	Identifier	strdup		120347	0					
ANR	120528	ArgumentList	s		120347	1					
ANR	120529	Argument	s		120347	0					
ANR	120530	Identifier	s		120347	0					
ANR	120531	Identifier	NULL		120347	1					
ANR	120532	CompoundStatement		45:2:1032:1032	120347	1					
ANR	120533	ExpressionStatement	"DEBUG_puts ( ""1_cupsArrayAddStrings: Unable to duplicate string."" )"	197:4:6183:6247	120347	0	True				
ANR	120534	CallExpression	"DEBUG_puts ( ""1_cupsArrayAddStrings: Unable to duplicate string."" )"		120347	0					
ANR	120535	Callee	DEBUG_puts		120347	0					
ANR	120536	Identifier	DEBUG_puts		120347	0					
ANR	120537	ArgumentList	"""1_cupsArrayAddStrings: Unable to duplicate string."""		120347	1					
ANR	120538	Argument	"""1_cupsArrayAddStrings: Unable to duplicate string."""		120347	0					
ANR	120539	PrimaryExpression	"""1_cupsArrayAddStrings: Unable to duplicate string."""		120347	0					
ANR	120540	ExpressionStatement	status = 0	198:4:6253:6263	120347	1	True				
ANR	120541	AssignmentExpression	status = 0		120347	0		=			
ANR	120542	Identifier	status		120347	0					
ANR	120543	PrimaryExpression	0		120347	1					
ANR	120544	ElseStatement	else		120347	0					
ANR	120545	CompoundStatement		50:2:1133:1133	120347	0					
ANR	120546	ForStatement	for ( start = end = buffer ; * end ; start = end )		120347	0					
ANR	120547	ForInit	start = end = buffer ;	202:9:6289:6309	120347	0	True				
ANR	120548	AssignmentExpression	start = end = buffer		120347	0		=			
ANR	120549	Identifier	start		120347	0					
ANR	120550	AssignmentExpression	end = buffer		120347	1		=			
ANR	120551	Identifier	end		120347	0					
ANR	120552	Identifier	buffer		120347	1					
ANR	120553	Condition	* end	202:31:6311:6314	120347	1	True				
ANR	120554	UnaryOperationExpression	* end		120347	0					
ANR	120555	UnaryOperator	*		120347	0					
ANR	120556	Identifier	end		120347	1					
ANR	120557	AssignmentExpression	start = end	202:37:6317:6327	120347	2	True	=			
ANR	120558	Identifier	start		120347	0					
ANR	120559	Identifier	end		120347	1					
ANR	120560	CompoundStatement		52:4:1189:1189	120347	3					
ANR	120561	IfStatement	if ( delim == ' ' )		120347	0					
ANR	120562	Condition	delim == ' '	209:10:6457:6468	120347	0	True				
ANR	120563	EqualityExpression	delim == ' '		120347	0		==			
ANR	120564	Identifier	delim		120347	0					
ANR	120565	PrimaryExpression	' '		120347	1					
ANR	120566	CompoundStatement		59:6:1332:1332	120347	1					
ANR	120567	WhileStatement	while ( * end && ! isspace ( * end & 255 ) )		120347	0					
ANR	120568	Condition	* end && ! isspace ( * end & 255 )	211:15:6494:6521	120347	0	True				
ANR	120569	AndExpression	* end && ! isspace ( * end & 255 )		120347	0		&&			
ANR	120570	UnaryOperationExpression	* end		120347	0					
ANR	120571	UnaryOperator	*		120347	0					
ANR	120572	Identifier	end		120347	1					
ANR	120573	UnaryOperationExpression	! isspace ( * end & 255 )		120347	1					
ANR	120574	UnaryOperator	!		120347	0					
ANR	120575	CallExpression	isspace ( * end & 255 )		120347	1					
ANR	120576	Callee	isspace		120347	0					
ANR	120577	Identifier	isspace		120347	0					
ANR	120578	ArgumentList	* end & 255		120347	1					
ANR	120579	Argument	* end & 255		120347	0					
ANR	120580	BitAndExpression	* end & 255		120347	0		&			
ANR	120581	UnaryOperationExpression	* end		120347	0					
ANR	120582	UnaryOperator	*		120347	0					
ANR	120583	Identifier	end		120347	1					
ANR	120584	PrimaryExpression	255		120347	1					
ANR	120585	ExpressionStatement	end ++	212:10:6534:6540	120347	1	True				
ANR	120586	PostIncDecOperationExpression	end ++		120347	0					
ANR	120587	Identifier	end		120347	0					
ANR	120588	IncDec	++		120347	1					
ANR	120589	WhileStatement	while ( * end && isspace ( * end & 255 ) )		120347	1					
ANR	120590	Condition	* end && isspace ( * end & 255 )	213:15:6557:6583	120347	0	True				
ANR	120591	AndExpression	* end && isspace ( * end & 255 )		120347	0		&&			
ANR	120592	UnaryOperationExpression	* end		120347	0					
ANR	120593	UnaryOperator	*		120347	0					
ANR	120594	Identifier	end		120347	1					
ANR	120595	CallExpression	isspace ( * end & 255 )		120347	1					
ANR	120596	Callee	isspace		120347	0					
ANR	120597	Identifier	isspace		120347	0					
ANR	120598	ArgumentList	* end & 255		120347	1					
ANR	120599	Argument	* end & 255		120347	0					
ANR	120600	BitAndExpression	* end & 255		120347	0		&			
ANR	120601	UnaryOperationExpression	* end		120347	0					
ANR	120602	UnaryOperator	*		120347	0					
ANR	120603	Identifier	end		120347	1					
ANR	120604	PrimaryExpression	255		120347	1					
ANR	120605	ExpressionStatement	* end ++ = '\\0'	214:10:6596:6609	120347	1	True				
ANR	120606	AssignmentExpression	* end ++ = '\\0'		120347	0		=			
ANR	120607	UnaryOperationExpression	* end ++		120347	0					
ANR	120608	UnaryOperator	*		120347	0					
ANR	120609	PostIncDecOperationExpression	end ++		120347	1					
ANR	120610	Identifier	end		120347	0					
ANR	120611	IncDec	++		120347	1					
ANR	120612	PrimaryExpression	'\\0'		120347	1					
ANR	120613	ElseStatement	else		120347	0					
ANR	120614	IfStatement	"if ( ( end = strchr ( start , delim ) ) != NULL )"		120347	0					
ANR	120615	Condition	"( end = strchr ( start , delim ) ) != NULL"	216:15:6634:6669	120347	0	True				
ANR	120616	EqualityExpression	"( end = strchr ( start , delim ) ) != NULL"		120347	0		!=			
ANR	120617	AssignmentExpression	"end = strchr ( start , delim )"		120347	0		=			
ANR	120618	Identifier	end		120347	0					
ANR	120619	CallExpression	"strchr ( start , delim )"		120347	1					
ANR	120620	Callee	strchr		120347	0					
ANR	120621	Identifier	strchr		120347	0					
ANR	120622	ArgumentList	start		120347	1					
ANR	120623	Argument	start		120347	0					
ANR	120624	Identifier	start		120347	0					
ANR	120625	Argument	delim		120347	1					
ANR	120626	Identifier	delim		120347	0					
ANR	120627	Identifier	NULL		120347	1					
ANR	120628	ExpressionStatement	* end ++ = '\\0'	217:8:6680:6693	120347	1	True				
ANR	120629	AssignmentExpression	* end ++ = '\\0'		120347	0		=			
ANR	120630	UnaryOperationExpression	* end ++		120347	0					
ANR	120631	UnaryOperator	*		120347	0					
ANR	120632	PostIncDecOperationExpression	end ++		120347	1					
ANR	120633	Identifier	end		120347	0					
ANR	120634	IncDec	++		120347	1					
ANR	120635	PrimaryExpression	'\\0'		120347	1					
ANR	120636	ElseStatement	else		120347	0					
ANR	120637	ExpressionStatement	end = start + strlen ( start )	219:8:6714:6741	120347	0	True				
ANR	120638	AssignmentExpression	end = start + strlen ( start )		120347	0		=			
ANR	120639	Identifier	end		120347	0					
ANR	120640	AdditiveExpression	start + strlen ( start )		120347	1		+			
ANR	120641	Identifier	start		120347	0					
ANR	120642	CallExpression	strlen ( start )		120347	1					
ANR	120643	Callee	strlen		120347	0					
ANR	120644	Identifier	strlen		120347	0					
ANR	120645	ArgumentList	start		120347	1					
ANR	120646	Argument	start		120347	0					
ANR	120647	Identifier	start		120347	0					
ANR	120648	ExpressionStatement	"DEBUG_printf ( ( ""1_cupsArrayAddStrings: Adding \\""%s\\"", end=\\""%s\\"""" , start , end ) )"	221:6:6750:6848	120347	1	True				
ANR	120649	CallExpression	"DEBUG_printf ( ( ""1_cupsArrayAddStrings: Adding \\""%s\\"", end=\\""%s\\"""" , start , end ) )"		120347	0					
ANR	120650	Callee	DEBUG_printf		120347	0					
ANR	120651	Identifier	DEBUG_printf		120347	0					
ANR	120652	ArgumentList	"""1_cupsArrayAddStrings: Adding \\""%s\\"", end=\\""%s\\"""" , start , end"		120347	1					
ANR	120653	Argument	"""1_cupsArrayAddStrings: Adding \\""%s\\"", end=\\""%s\\"""" , start , end"		120347	0					
ANR	120654	Expression	"""1_cupsArrayAddStrings: Adding \\""%s\\"", end=\\""%s\\"""" , start , end"		120347	0					
ANR	120655	PrimaryExpression	"""1_cupsArrayAddStrings: Adding \\""%s\\"", end=\\""%s\\"""""		120347	0					
ANR	120656	Expression	"start , end"		120347	1					
ANR	120657	Identifier	start		120347	0					
ANR	120658	Identifier	end		120347	1					
ANR	120659	IfStatement	"if ( ! cupsArrayFind ( a , start ) )"		120347	2					
ANR	120660	Condition	"! cupsArrayFind ( a , start )"	224:10:6861:6884	120347	0	True				
ANR	120661	UnaryOperationExpression	"! cupsArrayFind ( a , start )"		120347	0					
ANR	120662	UnaryOperator	!		120347	0					
ANR	120663	CallExpression	"cupsArrayFind ( a , start )"		120347	1					
ANR	120664	Callee	cupsArrayFind		120347	0					
ANR	120665	Identifier	cupsArrayFind		120347	0					
ANR	120666	ArgumentList	a		120347	1					
ANR	120667	Argument	a		120347	0					
ANR	120668	Identifier	a		120347	0					
ANR	120669	Argument	start		120347	1					
ANR	120670	Identifier	start		120347	0					
ANR	120671	ExpressionStatement	"status &= cupsArrayAdd ( a , start )"	225:8:6895:6927	120347	1	True				
ANR	120672	AssignmentExpression	"status &= cupsArrayAdd ( a , start )"		120347	0		&=			
ANR	120673	Identifier	status		120347	0					
ANR	120674	CallExpression	"cupsArrayAdd ( a , start )"		120347	1					
ANR	120675	Callee	cupsArrayAdd		120347	0					
ANR	120676	Identifier	cupsArrayAdd		120347	0					
ANR	120677	ArgumentList	a		120347	1					
ANR	120678	Argument	a		120347	0					
ANR	120679	Identifier	a		120347	0					
ANR	120680	Argument	start		120347	1					
ANR	120681	Identifier	start		120347	0					
ANR	120682	ExpressionStatement	free ( buffer )	228:4:6940:6952	120347	1	True				
ANR	120683	CallExpression	free ( buffer )		120347	0					
ANR	120684	Callee	free		120347	0					
ANR	120685	Identifier	free		120347	0					
ANR	120686	ArgumentList	buffer		120347	1					
ANR	120687	Argument	buffer		120347	0					
ANR	120688	Identifier	buffer		120347	0					
ANR	120689	ExpressionStatement	"DEBUG_printf ( ( ""1_cupsArrayAddStrings: Returning %d."" , status ) )"	231:2:6961:7023	120347	6	True				
ANR	120690	CallExpression	"DEBUG_printf ( ( ""1_cupsArrayAddStrings: Returning %d."" , status ) )"		120347	0					
ANR	120691	Callee	DEBUG_printf		120347	0					
ANR	120692	Identifier	DEBUG_printf		120347	0					
ANR	120693	ArgumentList	"""1_cupsArrayAddStrings: Returning %d."" , status"		120347	1					
ANR	120694	Argument	"""1_cupsArrayAddStrings: Returning %d."" , status"		120347	0					
ANR	120695	Expression	"""1_cupsArrayAddStrings: Returning %d."" , status"		120347	0					
ANR	120696	PrimaryExpression	"""1_cupsArrayAddStrings: Returning %d."""		120347	0					
ANR	120697	Identifier	status		120347	1					
ANR	120698	ReturnStatement	return ( status ) ;	233:2:7028:7043	120347	7	True				
ANR	120699	Identifier	status		120347	0					
ANR	120700	ReturnType	int		120347	1					
ANR	120701	Identifier	_cupsArrayAddStrings		120347	2					
ANR	120702	ParameterList	"cups_array_t * a , const char * s , char delim"		120347	3					
ANR	120703	Parameter	cups_array_t * a	149:21:4967:4981	120347	0	True				
ANR	120704	ParameterType	cups_array_t *		120347	0					
ANR	120705	Identifier	a		120347	1					
ANR	120706	Parameter	const char * s	150:21:5021:5035	120347	1	True				
ANR	120707	ParameterType	const char *		120347	0					
ANR	120708	Identifier	s		120347	1					
ANR	120709	Parameter	char delim	151:21:5095:5112	120347	2	True				
ANR	120710	ParameterType	char		120347	0					
ANR	120711	Identifier	delim		120347	1					
ANR	120712	CFGEntryNode	ENTRY		120347		True				
ANR	120713	CFGExitNode	EXIT		120347		True				
ANR	120714	Symbol	a		120347						
ANR	120715	Symbol	NULL		120347						
ANR	120716	Symbol	start		120347						
ANR	120717	Symbol	isspace		120347						
ANR	120718	Symbol	strchr		120347						
ANR	120719	Symbol	strlen		120347						
ANR	120720	Symbol	s		120347						
ANR	120721	Symbol	* end ++		120347						
ANR	120722	Symbol	cupsArrayFind		120347						
ANR	120723	Symbol	end		120347						
ANR	120724	Symbol	* end		120347						
ANR	120725	Symbol	buffer		120347						
ANR	120726	Symbol	strdup		120347						
ANR	120727	Symbol	* s		120347						
ANR	120728	Symbol	delim		120347						
ANR	120729	Symbol	status		120347						
ANR	120730	Symbol	cupsArrayAdd		120347						
ANR	120731	Function	cupsArrayClear	247:0:7292:7904							
ANR	120732	FunctionDef	cupsArrayClear (cups_array_t * a)		120731	0					
ANR	120733	CompoundStatement		249:0:7346:7904	120731	0					
ANR	120734	IfStatement	if ( ! a )		120731	0					
ANR	120735	Condition	! a	254:6:7389:7390	120731	0	True				
ANR	120736	UnaryOperationExpression	! a		120731	0					
ANR	120737	UnaryOperator	!		120731	0					
ANR	120738	Identifier	a		120731	1					
ANR	120739	ReturnStatement	return ;	255:4:7397:7403	120731	1	True				
ANR	120740	IfStatement	if ( a -> freefunc )		120731	1					
ANR	120741	Condition	a -> freefunc	261:6:7465:7475	120731	0	True				
ANR	120742	PtrMemberAccess	a -> freefunc		120731	0					
ANR	120743	Identifier	a		120731	0					
ANR	120744	Identifier	freefunc		120731	1					
ANR	120745	CompoundStatement		16:4:171:179	120731	1					
ANR	120746	IdentifierDeclStatement	int i ;	263:4:7486:7492	120731	0	True				
ANR	120747	IdentifierDecl	i		120731	0					
ANR	120748	IdentifierDeclType	int		120731	0					
ANR	120749	Identifier	i		120731	1					
ANR	120750	IdentifierDeclStatement	void * * e ;	264:4:7518:7526	120731	1	True				
ANR	120751	IdentifierDecl	* * e		120731	0					
ANR	120752	IdentifierDeclType	void * *		120731	0					
ANR	120753	Identifier	e		120731	1					
ANR	120754	ForStatement	"for ( i = a -> num_elements , e = a -> elements ; i > 0 ; i -- , e ++ )"		120731	2					
ANR	120755	ForInit	"i = a -> num_elements , e = a -> elements ;"	266:9:7562:7598	120731	0	True				
ANR	120756	Expression	"i = a -> num_elements , e = a -> elements"		120731	0					
ANR	120757	AssignmentExpression	i = a -> num_elements		120731	0		=			
ANR	120758	Identifier	i		120731	0					
ANR	120759	PtrMemberAccess	a -> num_elements		120731	1					
ANR	120760	Identifier	a		120731	0					
ANR	120761	Identifier	num_elements		120731	1					
ANR	120762	AssignmentExpression	e = a -> elements		120731	1		=			
ANR	120763	Identifier	e		120731	0					
ANR	120764	PtrMemberAccess	a -> elements		120731	1					
ANR	120765	Identifier	a		120731	0					
ANR	120766	Identifier	elements		120731	1					
ANR	120767	Condition	i > 0	266:47:7600:7604	120731	1	True				
ANR	120768	RelationalExpression	i > 0		120731	0		>			
ANR	120769	Identifier	i		120731	0					
ANR	120770	PrimaryExpression	0		120731	1					
ANR	120771	Expression	"i -- , e ++"	266:54:7607:7616	120731	2	True				
ANR	120772	PostIncDecOperationExpression	i --		120731	0					
ANR	120773	Identifier	i		120731	0					
ANR	120774	IncDec	--		120731	1					
ANR	120775	PostIncDecOperationExpression	e ++		120731	1					
ANR	120776	Identifier	e		120731	0					
ANR	120777	IncDec	++		120731	1					
ANR	120778	ExpressionStatement	"( a -> freefunc ) ( * e , a -> data )"	267:6:7625:7651	120731	3	True				
ANR	120779	CallExpression	"( a -> freefunc ) ( * e , a -> data )"		120731	0					
ANR	120780	Callee	a -> freefunc		120731	0					
ANR	120781	PtrMemberAccess	a -> freefunc		120731	0					
ANR	120782	Identifier	a		120731	0					
ANR	120783	Identifier	freefunc		120731	1					
ANR	120784	ArgumentList	* e		120731	1					
ANR	120785	Argument	* e		120731	0					
ANR	120786	UnaryOperationExpression	* e		120731	0					
ANR	120787	UnaryOperator	*		120731	0					
ANR	120788	Identifier	e		120731	1					
ANR	120789	Argument	a -> data		120731	1					
ANR	120790	PtrMemberAccess	a -> data		120731	0					
ANR	120791	Identifier	a		120731	0					
ANR	120792	Identifier	data		120731	1					
ANR	120793	ExpressionStatement	a -> num_elements = 0	275:2:7789:7808	120731	2	True				
ANR	120794	AssignmentExpression	a -> num_elements = 0		120731	0		=			
ANR	120795	PtrMemberAccess	a -> num_elements		120731	0					
ANR	120796	Identifier	a		120731	0					
ANR	120797	Identifier	num_elements		120731	1					
ANR	120798	PrimaryExpression	0		120731	1					
ANR	120799	ExpressionStatement	a -> current = - 1	276:2:7812:7832	120731	3	True				
ANR	120800	AssignmentExpression	a -> current = - 1		120731	0		=			
ANR	120801	PtrMemberAccess	a -> current		120731	0					
ANR	120802	Identifier	a		120731	0					
ANR	120803	Identifier	current		120731	1					
ANR	120804	UnaryOperationExpression	- 1		120731	1					
ANR	120805	UnaryOperator	-		120731	0					
ANR	120806	PrimaryExpression	1		120731	1					
ANR	120807	ExpressionStatement	a -> insert = - 1	277:2:7836:7856	120731	4	True				
ANR	120808	AssignmentExpression	a -> insert = - 1		120731	0		=			
ANR	120809	PtrMemberAccess	a -> insert		120731	0					
ANR	120810	Identifier	a		120731	0					
ANR	120811	Identifier	insert		120731	1					
ANR	120812	UnaryOperationExpression	- 1		120731	1					
ANR	120813	UnaryOperator	-		120731	0					
ANR	120814	PrimaryExpression	1		120731	1					
ANR	120815	ExpressionStatement	a -> unique = 1	278:2:7860:7879	120731	5	True				
ANR	120816	AssignmentExpression	a -> unique = 1		120731	0		=			
ANR	120817	PtrMemberAccess	a -> unique		120731	0					
ANR	120818	Identifier	a		120731	0					
ANR	120819	Identifier	unique		120731	1					
ANR	120820	PrimaryExpression	1		120731	1					
ANR	120821	ExpressionStatement	a -> num_saved = 0	279:2:7883:7902	120731	6	True				
ANR	120822	AssignmentExpression	a -> num_saved = 0		120731	0		=			
ANR	120823	PtrMemberAccess	a -> num_saved		120731	0					
ANR	120824	Identifier	a		120731	0					
ANR	120825	Identifier	num_saved		120731	1					
ANR	120826	PrimaryExpression	0		120731	1					
ANR	120827	ReturnType	void		120731	1					
ANR	120828	Identifier	cupsArrayClear		120731	2					
ANR	120829	ParameterList	cups_array_t * a		120731	3					
ANR	120830	Parameter	cups_array_t * a	248:15:7312:7326	120731	0	True				
ANR	120831	ParameterType	cups_array_t *		120731	0					
ANR	120832	Identifier	a		120731	1					
ANR	120833	CFGEntryNode	ENTRY		120731		True				
ANR	120834	CFGExitNode	EXIT		120731		True				
ANR	120835	Symbol	a		120731						
ANR	120836	Symbol	a -> elements		120731						
ANR	120837	Symbol	e		120731						
ANR	120838	Symbol	a -> num_elements		120731						
ANR	120839	Symbol	i		120731						
ANR	120840	Symbol	* a		120731						
ANR	120841	Symbol	* e		120731						
ANR	120842	Symbol	a -> data		120731						
ANR	120843	Symbol	a -> num_saved		120731						
ANR	120844	Symbol	a -> unique		120731						
ANR	120845	Symbol	a -> insert		120731						
ANR	120846	Symbol	a -> current		120731						
ANR	120847	Symbol	a -> freefunc		120731						
ANR	120848	Function	cupsArrayCount	289:0:8014:8239							
ANR	120849	FunctionDef	cupsArrayCount (cups_array_t * a)		120848	0					
ANR	120850	CompoundStatement		291:0:8100:8239	120848	0					
ANR	120851	IfStatement	if ( ! a )		120848	0					
ANR	120852	Condition	! a	296:6:8143:8144	120848	0	True				
ANR	120853	UnaryOperationExpression	! a		120848	0					
ANR	120854	UnaryOperator	!		120848	0					
ANR	120855	Identifier	a		120848	1					
ANR	120856	ReturnStatement	return ( 0 ) ;	297:4:8151:8161	120848	1	True				
ANR	120857	PrimaryExpression	0		120848	0					
ANR	120858	ReturnStatement	return ( a -> num_elements ) ;	303:2:8213:8237	120848	1	True				
ANR	120859	PtrMemberAccess	a -> num_elements		120848	0					
ANR	120860	Identifier	a		120848	0					
ANR	120861	Identifier	num_elements		120848	1					
ANR	120862	ReturnType	int		120848	1					
ANR	120863	Identifier	cupsArrayCount		120848	2					
ANR	120864	ParameterList	cups_array_t * a		120848	3					
ANR	120865	Parameter	cups_array_t * a	290:15:8066:8080	120848	0	True				
ANR	120866	ParameterType	cups_array_t *		120848	0					
ANR	120867	Identifier	a		120848	1					
ANR	120868	CFGEntryNode	ENTRY		120848		True				
ANR	120869	CFGExitNode	EXIT		120848		True				
ANR	120870	Symbol	a		120848						
ANR	120871	Symbol	a -> num_elements		120848						
ANR	120872	Symbol	* a		120848						
ANR	120873	Function	cupsArrayCurrent	316:0:8504:8813							
ANR	120874	FunctionDef	cupsArrayCurrent (cups_array_t * a)		120873	0					
ANR	120875	CompoundStatement		318:0:8583:8813	120873	0					
ANR	120876	IfStatement	if ( ! a )		120873	0					
ANR	120877	Condition	! a	323:6:8626:8627	120873	0	True				
ANR	120878	UnaryOperationExpression	! a		120873	0					
ANR	120879	UnaryOperator	!		120873	0					
ANR	120880	Identifier	a		120873	1					
ANR	120881	ReturnStatement	return ( NULL ) ;	324:4:8634:8647	120873	1	True				
ANR	120882	Identifier	NULL		120873	0					
ANR	120883	IfStatement	if ( a -> current >= 0 && a -> current < a -> num_elements )		120873	1					
ANR	120884	Condition	a -> current >= 0 && a -> current < a -> num_elements	330:6:8700:8746	120873	0	True				
ANR	120885	AndExpression	a -> current >= 0 && a -> current < a -> num_elements		120873	0		&&			
ANR	120886	RelationalExpression	a -> current >= 0		120873	0		>=			
ANR	120887	PtrMemberAccess	a -> current		120873	0					
ANR	120888	Identifier	a		120873	0					
ANR	120889	Identifier	current		120873	1					
ANR	120890	PrimaryExpression	0		120873	1					
ANR	120891	RelationalExpression	a -> current < a -> num_elements		120873	1		<			
ANR	120892	PtrMemberAccess	a -> current		120873	0					
ANR	120893	Identifier	a		120873	0					
ANR	120894	Identifier	current		120873	1					
ANR	120895	PtrMemberAccess	a -> num_elements		120873	1					
ANR	120896	Identifier	a		120873	0					
ANR	120897	Identifier	num_elements		120873	1					
ANR	120898	ReturnStatement	return ( a -> elements [ a -> current ] ) ;	331:4:8753:8785	120873	1	True				
ANR	120899	ArrayIndexing	a -> elements [ a -> current ]		120873	0					
ANR	120900	PtrMemberAccess	a -> elements		120873	0					
ANR	120901	Identifier	a		120873	0					
ANR	120902	Identifier	elements		120873	1					
ANR	120903	PtrMemberAccess	a -> current		120873	1					
ANR	120904	Identifier	a		120873	0					
ANR	120905	Identifier	current		120873	1					
ANR	120906	ElseStatement	else		120873	0					
ANR	120907	ReturnStatement	return ( NULL ) ;	333:4:8798:8811	120873	0	True				
ANR	120908	Identifier	NULL		120873	0					
ANR	120909	ReturnType	void *		120873	1					
ANR	120910	Identifier	cupsArrayCurrent		120873	2					
ANR	120911	ParameterList	cups_array_t * a		120873	3					
ANR	120912	Parameter	cups_array_t * a	317:17:8550:8564	120873	0	True				
ANR	120913	ParameterType	cups_array_t *		120873	0					
ANR	120914	Identifier	a		120873	1					
ANR	120915	CFGEntryNode	ENTRY		120873		True				
ANR	120916	CFGExitNode	EXIT		120873		True				
ANR	120917	Symbol	a		120873						
ANR	120918	Symbol	a -> elements		120873						
ANR	120919	Symbol	NULL		120873						
ANR	120920	Symbol	a -> num_elements		120873						
ANR	120921	Symbol	* a -> current		120873						
ANR	120922	Symbol	a -> current		120873						
ANR	120923	Symbol	* * a		120873						
ANR	120924	Symbol	* a		120873						
ANR	120925	Symbol	* a -> elements		120873						
ANR	120926	Function	cupsArrayDelete	346:0:9009:9602							
ANR	120927	FunctionDef	cupsArrayDelete (cups_array_t * a)		120926	0					
ANR	120928	CompoundStatement		348:0:9063:9602	120926	0					
ANR	120929	IfStatement	if ( ! a )		120926	0					
ANR	120930	Condition	! a	353:6:9106:9107	120926	0	True				
ANR	120931	UnaryOperationExpression	! a		120926	0					
ANR	120932	UnaryOperator	!		120926	0					
ANR	120933	Identifier	a		120926	1					
ANR	120934	ReturnStatement	return ;	354:4:9114:9120	120926	1	True				
ANR	120935	IfStatement	if ( a -> freefunc )		120926	1					
ANR	120936	Condition	a -> freefunc	361:6:9258:9268	120926	0	True				
ANR	120937	PtrMemberAccess	a -> freefunc		120926	0					
ANR	120938	Identifier	a		120926	0					
ANR	120939	Identifier	freefunc		120926	1					
ANR	120940	CompoundStatement		17:4:247:255	120926	1					
ANR	120941	IdentifierDeclStatement	int i ;	363:4:9279:9285	120926	0	True				
ANR	120942	IdentifierDecl	i		120926	0					
ANR	120943	IdentifierDeclType	int		120926	0					
ANR	120944	Identifier	i		120926	1					
ANR	120945	IdentifierDeclStatement	void * * e ;	364:4:9311:9319	120926	1	True				
ANR	120946	IdentifierDecl	* * e		120926	0					
ANR	120947	IdentifierDeclType	void * *		120926	0					
ANR	120948	Identifier	e		120926	1					
ANR	120949	ForStatement	"for ( i = a -> num_elements , e = a -> elements ; i > 0 ; i -- , e ++ )"		120926	2					
ANR	120950	ForInit	"i = a -> num_elements , e = a -> elements ;"	366:9:9355:9391	120926	0	True				
ANR	120951	Expression	"i = a -> num_elements , e = a -> elements"		120926	0					
ANR	120952	AssignmentExpression	i = a -> num_elements		120926	0		=			
ANR	120953	Identifier	i		120926	0					
ANR	120954	PtrMemberAccess	a -> num_elements		120926	1					
ANR	120955	Identifier	a		120926	0					
ANR	120956	Identifier	num_elements		120926	1					
ANR	120957	AssignmentExpression	e = a -> elements		120926	1		=			
ANR	120958	Identifier	e		120926	0					
ANR	120959	PtrMemberAccess	a -> elements		120926	1					
ANR	120960	Identifier	a		120926	0					
ANR	120961	Identifier	elements		120926	1					
ANR	120962	Condition	i > 0	366:47:9393:9397	120926	1	True				
ANR	120963	RelationalExpression	i > 0		120926	0		>			
ANR	120964	Identifier	i		120926	0					
ANR	120965	PrimaryExpression	0		120926	1					
ANR	120966	Expression	"i -- , e ++"	366:54:9400:9409	120926	2	True				
ANR	120967	PostIncDecOperationExpression	i --		120926	0					
ANR	120968	Identifier	i		120926	0					
ANR	120969	IncDec	--		120926	1					
ANR	120970	PostIncDecOperationExpression	e ++		120926	1					
ANR	120971	Identifier	e		120926	0					
ANR	120972	IncDec	++		120926	1					
ANR	120973	ExpressionStatement	"( a -> freefunc ) ( * e , a -> data )"	367:6:9418:9444	120926	3	True				
ANR	120974	CallExpression	"( a -> freefunc ) ( * e , a -> data )"		120926	0					
ANR	120975	Callee	a -> freefunc		120926	0					
ANR	120976	PtrMemberAccess	a -> freefunc		120926	0					
ANR	120977	Identifier	a		120926	0					
ANR	120978	Identifier	freefunc		120926	1					
ANR	120979	ArgumentList	* e		120926	1					
ANR	120980	Argument	* e		120926	0					
ANR	120981	UnaryOperationExpression	* e		120926	0					
ANR	120982	UnaryOperator	*		120926	0					
ANR	120983	Identifier	e		120926	1					
ANR	120984	Argument	a -> data		120926	1					
ANR	120985	PtrMemberAccess	a -> data		120926	0					
ANR	120986	Identifier	a		120926	0					
ANR	120987	Identifier	data		120926	1					
ANR	120988	IfStatement	if ( a -> alloc_elements )		120926	2					
ANR	120989	Condition	a -> alloc_elements	374:6:9509:9525	120926	0	True				
ANR	120990	PtrMemberAccess	a -> alloc_elements		120926	0					
ANR	120991	Identifier	a		120926	0					
ANR	120992	Identifier	alloc_elements		120926	1					
ANR	120993	ExpressionStatement	free ( a -> elements )	375:4:9532:9549	120926	1	True				
ANR	120994	CallExpression	free ( a -> elements )		120926	0					
ANR	120995	Callee	free		120926	0					
ANR	120996	Identifier	free		120926	0					
ANR	120997	ArgumentList	a -> elements		120926	1					
ANR	120998	Argument	a -> elements		120926	0					
ANR	120999	PtrMemberAccess	a -> elements		120926	0					
ANR	121000	Identifier	a		120926	0					
ANR	121001	Identifier	elements		120926	1					
ANR	121002	IfStatement	if ( a -> hashsize )		120926	3					
ANR	121003	Condition	a -> hashsize	377:6:9558:9568	120926	0	True				
ANR	121004	PtrMemberAccess	a -> hashsize		120926	0					
ANR	121005	Identifier	a		120926	0					
ANR	121006	Identifier	hashsize		120926	1					
ANR	121007	ExpressionStatement	free ( a -> hash )	378:4:9575:9588	120926	1	True				
ANR	121008	CallExpression	free ( a -> hash )		120926	0					
ANR	121009	Callee	free		120926	0					
ANR	121010	Identifier	free		120926	0					
ANR	121011	ArgumentList	a -> hash		120926	1					
ANR	121012	Argument	a -> hash		120926	0					
ANR	121013	PtrMemberAccess	a -> hash		120926	0					
ANR	121014	Identifier	a		120926	0					
ANR	121015	Identifier	hash		120926	1					
ANR	121016	ExpressionStatement	free ( a )	380:2:9593:9600	120926	4	True				
ANR	121017	CallExpression	free ( a )		120926	0					
ANR	121018	Callee	free		120926	0					
ANR	121019	Identifier	free		120926	0					
ANR	121020	ArgumentList	a		120926	1					
ANR	121021	Argument	a		120926	0					
ANR	121022	Identifier	a		120926	0					
ANR	121023	ReturnType	void		120926	1					
ANR	121024	Identifier	cupsArrayDelete		120926	2					
ANR	121025	ParameterList	cups_array_t * a		120926	3					
ANR	121026	Parameter	cups_array_t * a	347:16:9030:9044	120926	0	True				
ANR	121027	ParameterType	cups_array_t *		120926	0					
ANR	121028	Identifier	a		120926	1					
ANR	121029	CFGEntryNode	ENTRY		120926		True				
ANR	121030	CFGExitNode	EXIT		120926		True				
ANR	121031	Symbol	a -> data		120926						
ANR	121032	Symbol	a		120926						
ANR	121033	Symbol	a -> alloc_elements		120926						
ANR	121034	Symbol	a -> elements		120926						
ANR	121035	Symbol	a -> hash		120926						
ANR	121036	Symbol	e		120926						
ANR	121037	Symbol	a -> hashsize		120926						
ANR	121038	Symbol	a -> num_elements		120926						
ANR	121039	Symbol	i		120926						
ANR	121040	Symbol	* a		120926						
ANR	121041	Symbol	a -> freefunc		120926						
ANR	121042	Symbol	* e		120926						
ANR	121043	Function	cupsArrayDup	390:0:9690:11050							
ANR	121044	FunctionDef	cupsArrayDup (cups_array_t * a)		121043	0					
ANR	121045	CompoundStatement		392:0:9781:11050	121043	0					
ANR	121046	IdentifierDeclStatement	cups_array_t * da ;	393:2:9785:9801	121043	0	True				
ANR	121047	IdentifierDecl	* da		121043	0					
ANR	121048	IdentifierDeclType	cups_array_t *		121043	0					
ANR	121049	Identifier	da		121043	1					
ANR	121050	IfStatement	if ( ! a )		121043	1					
ANR	121051	Condition	! a	400:6:9870:9871	121043	0	True				
ANR	121052	UnaryOperationExpression	! a		121043	0					
ANR	121053	UnaryOperator	!		121043	0					
ANR	121054	Identifier	a		121043	1					
ANR	121055	ReturnStatement	return ( NULL ) ;	401:4:9878:9891	121043	1	True				
ANR	121056	Identifier	NULL		121043	0					
ANR	121057	ExpressionStatement	"da = calloc ( 1 , sizeof ( cups_array_t ) )"	407:2:9943:9979	121043	2	True				
ANR	121058	AssignmentExpression	"da = calloc ( 1 , sizeof ( cups_array_t ) )"		121043	0		=			
ANR	121059	Identifier	da		121043	0					
ANR	121060	CallExpression	"calloc ( 1 , sizeof ( cups_array_t ) )"		121043	1					
ANR	121061	Callee	calloc		121043	0					
ANR	121062	Identifier	calloc		121043	0					
ANR	121063	ArgumentList	1		121043	1					
ANR	121064	Argument	1		121043	0					
ANR	121065	PrimaryExpression	1		121043	0					
ANR	121066	Argument	sizeof ( cups_array_t )		121043	1					
ANR	121067	SizeofExpression	sizeof ( cups_array_t )		121043	0					
ANR	121068	Sizeof	sizeof		121043	0					
ANR	121069	SizeofOperand	cups_array_t		121043	1					
ANR	121070	IfStatement	if ( ! da )		121043	3					
ANR	121071	Condition	! da	408:6:9987:9989	121043	0	True				
ANR	121072	UnaryOperationExpression	! da		121043	0					
ANR	121073	UnaryOperator	!		121043	0					
ANR	121074	Identifier	da		121043	1					
ANR	121075	ReturnStatement	return ( NULL ) ;	409:4:9996:10009	121043	1	True				
ANR	121076	Identifier	NULL		121043	0					
ANR	121077	ExpressionStatement	da -> compare = a -> compare	411:2:10014:10040	121043	4	True				
ANR	121078	AssignmentExpression	da -> compare = a -> compare		121043	0		=			
ANR	121079	PtrMemberAccess	da -> compare		121043	0					
ANR	121080	Identifier	da		121043	0					
ANR	121081	Identifier	compare		121043	1					
ANR	121082	PtrMemberAccess	a -> compare		121043	1					
ANR	121083	Identifier	a		121043	0					
ANR	121084	Identifier	compare		121043	1					
ANR	121085	ExpressionStatement	da -> data = a -> data	412:2:10044:10067	121043	5	True				
ANR	121086	AssignmentExpression	da -> data = a -> data		121043	0		=			
ANR	121087	PtrMemberAccess	da -> data		121043	0					
ANR	121088	Identifier	da		121043	0					
ANR	121089	Identifier	data		121043	1					
ANR	121090	PtrMemberAccess	a -> data		121043	1					
ANR	121091	Identifier	a		121043	0					
ANR	121092	Identifier	data		121043	1					
ANR	121093	ExpressionStatement	da -> current = a -> current	413:2:10071:10097	121043	6	True				
ANR	121094	AssignmentExpression	da -> current = a -> current		121043	0		=			
ANR	121095	PtrMemberAccess	da -> current		121043	0					
ANR	121096	Identifier	da		121043	0					
ANR	121097	Identifier	current		121043	1					
ANR	121098	PtrMemberAccess	a -> current		121043	1					
ANR	121099	Identifier	a		121043	0					
ANR	121100	Identifier	current		121043	1					
ANR	121101	ExpressionStatement	da -> insert = a -> insert	414:2:10101:10126	121043	7	True				
ANR	121102	AssignmentExpression	da -> insert = a -> insert		121043	0		=			
ANR	121103	PtrMemberAccess	da -> insert		121043	0					
ANR	121104	Identifier	da		121043	0					
ANR	121105	Identifier	insert		121043	1					
ANR	121106	PtrMemberAccess	a -> insert		121043	1					
ANR	121107	Identifier	a		121043	0					
ANR	121108	Identifier	insert		121043	1					
ANR	121109	ExpressionStatement	da -> unique = a -> unique	415:2:10130:10155	121043	8	True				
ANR	121110	AssignmentExpression	da -> unique = a -> unique		121043	0		=			
ANR	121111	PtrMemberAccess	da -> unique		121043	0					
ANR	121112	Identifier	da		121043	0					
ANR	121113	Identifier	unique		121043	1					
ANR	121114	PtrMemberAccess	a -> unique		121043	1					
ANR	121115	Identifier	a		121043	0					
ANR	121116	Identifier	unique		121043	1					
ANR	121117	ExpressionStatement	da -> num_saved = a -> num_saved	416:2:10159:10187	121043	9	True				
ANR	121118	AssignmentExpression	da -> num_saved = a -> num_saved		121043	0		=			
ANR	121119	PtrMemberAccess	da -> num_saved		121043	0					
ANR	121120	Identifier	da		121043	0					
ANR	121121	Identifier	num_saved		121043	1					
ANR	121122	PtrMemberAccess	a -> num_saved		121043	1					
ANR	121123	Identifier	a		121043	0					
ANR	121124	Identifier	num_saved		121043	1					
ANR	121125	ExpressionStatement	"memcpy ( da -> saved , a -> saved , sizeof ( a -> saved ) )"	418:2:10192:10237	121043	10	True				
ANR	121126	CallExpression	"memcpy ( da -> saved , a -> saved , sizeof ( a -> saved ) )"		121043	0					
ANR	121127	Callee	memcpy		121043	0					
ANR	121128	Identifier	memcpy		121043	0					
ANR	121129	ArgumentList	da -> saved		121043	1					
ANR	121130	Argument	da -> saved		121043	0					
ANR	121131	PtrMemberAccess	da -> saved		121043	0					
ANR	121132	Identifier	da		121043	0					
ANR	121133	Identifier	saved		121043	1					
ANR	121134	Argument	a -> saved		121043	1					
ANR	121135	PtrMemberAccess	a -> saved		121043	0					
ANR	121136	Identifier	a		121043	0					
ANR	121137	Identifier	saved		121043	1					
ANR	121138	Argument	sizeof ( a -> saved )		121043	2					
ANR	121139	SizeofExpression	sizeof ( a -> saved )		121043	0					
ANR	121140	Sizeof	sizeof		121043	0					
ANR	121141	PtrMemberAccess	a -> saved		121043	1					
ANR	121142	Identifier	a		121043	0					
ANR	121143	Identifier	saved		121043	1					
ANR	121144	IfStatement	if ( a -> num_elements )		121043	11					
ANR	121145	Condition	a -> num_elements	420:6:10246:10260	121043	0	True				
ANR	121146	PtrMemberAccess	a -> num_elements		121043	0					
ANR	121147	Identifier	a		121043	0					
ANR	121148	Identifier	num_elements		121043	1					
ANR	121149	CompoundStatement		30:2:483:483	121043	1					
ANR	121150	ExpressionStatement	da -> elements = malloc ( a -> num_elements * sizeof ( void * ) )	426:4:10327:10382	121043	0	True				
ANR	121151	AssignmentExpression	da -> elements = malloc ( a -> num_elements * sizeof ( void * ) )		121043	0		=			
ANR	121152	PtrMemberAccess	da -> elements		121043	0					
ANR	121153	Identifier	da		121043	0					
ANR	121154	Identifier	elements		121043	1					
ANR	121155	CallExpression	malloc ( a -> num_elements * sizeof ( void * ) )		121043	1					
ANR	121156	Callee	malloc		121043	0					
ANR	121157	Identifier	malloc		121043	0					
ANR	121158	ArgumentList	a -> num_elements * sizeof ( void * )		121043	1					
ANR	121159	Argument	a -> num_elements * sizeof ( void * )		121043	0					
ANR	121160	MultiplicativeExpression	a -> num_elements * sizeof ( void * )		121043	0		*			
ANR	121161	PtrMemberAccess	a -> num_elements		121043	0					
ANR	121162	Identifier	a		121043	0					
ANR	121163	Identifier	num_elements		121043	1					
ANR	121164	SizeofExpression	sizeof ( void * )		121043	1					
ANR	121165	Sizeof	sizeof		121043	0					
ANR	121166	SizeofOperand	void *		121043	1					
ANR	121167	IfStatement	if ( ! da -> elements )		121043	1					
ANR	121168	Condition	! da -> elements	427:8:10392:10404	121043	0	True				
ANR	121169	UnaryOperationExpression	! da -> elements		121043	0					
ANR	121170	UnaryOperator	!		121043	0					
ANR	121171	PtrMemberAccess	da -> elements		121043	1					
ANR	121172	Identifier	da		121043	0					
ANR	121173	Identifier	elements		121043	1					
ANR	121174	CompoundStatement		37:4:629:629	121043	1					
ANR	121175	ExpressionStatement	free ( da )	429:6:10419:10427	121043	0	True				
ANR	121176	CallExpression	free ( da )		121043	0					
ANR	121177	Callee	free		121043	0					
ANR	121178	Identifier	free		121043	0					
ANR	121179	ArgumentList	da		121043	1					
ANR	121180	Argument	da		121043	0					
ANR	121181	Identifier	da		121043	0					
ANR	121182	ReturnStatement	return ( NULL ) ;	430:6:10435:10448	121043	1	True				
ANR	121183	Identifier	NULL		121043	0					
ANR	121184	IfStatement	if ( a -> copyfunc )		121043	2					
ANR	121185	Condition	a -> copyfunc	437:8:10514:10524	121043	0	True				
ANR	121186	PtrMemberAccess	a -> copyfunc		121043	0					
ANR	121187	Identifier	a		121043	0					
ANR	121188	Identifier	copyfunc		121043	1					
ANR	121189	CompoundStatement		52:6:839:844	121043	1					
ANR	121190	IdentifierDeclStatement	int i ;	443:6:10621:10626	121043	0	True				
ANR	121191	IdentifierDecl	i		121043	0					
ANR	121192	IdentifierDeclType	int		121043	0					
ANR	121193	Identifier	i		121043	1					
ANR	121194	ForStatement	for ( i = 0 ; i < a -> num_elements ; i ++ )		121043	1					
ANR	121195	ForInit	i = 0 ;	445:11:10660:10665	121043	0	True				
ANR	121196	AssignmentExpression	i = 0		121043	0		=			
ANR	121197	Identifier	i		121043	0					
ANR	121198	PrimaryExpression	0		121043	1					
ANR	121199	Condition	i < a -> num_elements	445:18:10667:10685	121043	1	True				
ANR	121200	RelationalExpression	i < a -> num_elements		121043	0		<			
ANR	121201	Identifier	i		121043	0					
ANR	121202	PtrMemberAccess	a -> num_elements		121043	1					
ANR	121203	Identifier	a		121043	0					
ANR	121204	Identifier	num_elements		121043	1					
ANR	121205	PostIncDecOperationExpression	i ++	445:39:10688:10691	121043	2	True				
ANR	121206	Identifier	i		121043	0					
ANR	121207	IncDec	++		121043	1					
ANR	121208	ExpressionStatement	"da -> elements [ i ] = ( a -> copyfunc ) ( a -> elements [ i ] , a -> data )"	446:1:10695:10751	121043	3	True				
ANR	121209	AssignmentExpression	"da -> elements [ i ] = ( a -> copyfunc ) ( a -> elements [ i ] , a -> data )"		121043	0		=			
ANR	121210	ArrayIndexing	da -> elements [ i ]		121043	0					
ANR	121211	PtrMemberAccess	da -> elements		121043	0					
ANR	121212	Identifier	da		121043	0					
ANR	121213	Identifier	elements		121043	1					
ANR	121214	Identifier	i		121043	1					
ANR	121215	CallExpression	"( a -> copyfunc ) ( a -> elements [ i ] , a -> data )"		121043	1					
ANR	121216	Callee	a -> copyfunc		121043	0					
ANR	121217	PtrMemberAccess	a -> copyfunc		121043	0					
ANR	121218	Identifier	a		121043	0					
ANR	121219	Identifier	copyfunc		121043	1					
ANR	121220	ArgumentList	a -> elements [ i ]		121043	1					
ANR	121221	Argument	a -> elements [ i ]		121043	0					
ANR	121222	ArrayIndexing	a -> elements [ i ]		121043	0					
ANR	121223	PtrMemberAccess	a -> elements		121043	0					
ANR	121224	Identifier	a		121043	0					
ANR	121225	Identifier	elements		121043	1					
ANR	121226	Identifier	i		121043	1					
ANR	121227	Argument	a -> data		121043	1					
ANR	121228	PtrMemberAccess	a -> data		121043	0					
ANR	121229	Identifier	a		121043	0					
ANR	121230	Identifier	data		121043	1					
ANR	121231	ElseStatement	else		121043	0					
ANR	121232	CompoundStatement		58:4:990:990	121043	0					
ANR	121233	ExpressionStatement	"memcpy ( da -> elements , a -> elements , a -> num_elements * sizeof ( void * ) )"	454:6:10832:10899	121043	0	True				
ANR	121234	CallExpression	"memcpy ( da -> elements , a -> elements , a -> num_elements * sizeof ( void * ) )"		121043	0					
ANR	121235	Callee	memcpy		121043	0					
ANR	121236	Identifier	memcpy		121043	0					
ANR	121237	ArgumentList	da -> elements		121043	1					
ANR	121238	Argument	da -> elements		121043	0					
ANR	121239	PtrMemberAccess	da -> elements		121043	0					
ANR	121240	Identifier	da		121043	0					
ANR	121241	Identifier	elements		121043	1					
ANR	121242	Argument	a -> elements		121043	1					
ANR	121243	PtrMemberAccess	a -> elements		121043	0					
ANR	121244	Identifier	a		121043	0					
ANR	121245	Identifier	elements		121043	1					
ANR	121246	Argument	a -> num_elements * sizeof ( void * )		121043	2					
ANR	121247	MultiplicativeExpression	a -> num_elements * sizeof ( void * )		121043	0		*			
ANR	121248	PtrMemberAccess	a -> num_elements		121043	0					
ANR	121249	Identifier	a		121043	0					
ANR	121250	Identifier	num_elements		121043	1					
ANR	121251	SizeofExpression	sizeof ( void * )		121043	1					
ANR	121252	Sizeof	sizeof		121043	0					
ANR	121253	SizeofOperand	void *		121043	1					
ANR	121254	ExpressionStatement	da -> num_elements = a -> num_elements	457:4:10912:10948	121043	3	True				
ANR	121255	AssignmentExpression	da -> num_elements = a -> num_elements		121043	0		=			
ANR	121256	PtrMemberAccess	da -> num_elements		121043	0					
ANR	121257	Identifier	da		121043	0					
ANR	121258	Identifier	num_elements		121043	1					
ANR	121259	PtrMemberAccess	a -> num_elements		121043	1					
ANR	121260	Identifier	a		121043	0					
ANR	121261	Identifier	num_elements		121043	1					
ANR	121262	ExpressionStatement	da -> alloc_elements = a -> num_elements	458:4:10954:10990	121043	4	True				
ANR	121263	AssignmentExpression	da -> alloc_elements = a -> num_elements		121043	0		=			
ANR	121264	PtrMemberAccess	da -> alloc_elements		121043	0					
ANR	121265	Identifier	da		121043	0					
ANR	121266	Identifier	alloc_elements		121043	1					
ANR	121267	PtrMemberAccess	a -> num_elements		121043	1					
ANR	121268	Identifier	a		121043	0					
ANR	121269	Identifier	num_elements		121043	1					
ANR	121270	ReturnStatement	return ( da ) ;	465:2:11037:11048	121043	12	True				
ANR	121271	Identifier	da		121043	0					
ANR	121272	ReturnType	cups_array_t *		121043	1					
ANR	121273	Identifier	cupsArrayDup		121043	2					
ANR	121274	ParameterList	cups_array_t * a		121043	3					
ANR	121275	Parameter	cups_array_t * a	391:13:9747:9761	121043	0	True				
ANR	121276	ParameterType	cups_array_t *		121043	0					
ANR	121277	Identifier	a		121043	1					
ANR	121278	CFGEntryNode	ENTRY		121043		True				
ANR	121279	CFGExitNode	EXIT		121043		True				
ANR	121280	Symbol	da -> num_saved		121043						
ANR	121281	Symbol	da -> unique		121043						
ANR	121282	Symbol	calloc		121043						
ANR	121283	Symbol	a -> copyfunc		121043						
ANR	121284	Symbol	* a -> elements		121043						
ANR	121285	Symbol	a -> num_saved		121043						
ANR	121286	Symbol	a -> insert		121043						
ANR	121287	Symbol	a -> current		121043						
ANR	121288	Symbol	* da		121043						
ANR	121289	Symbol	a		121043						
ANR	121290	Symbol	a -> saved		121043						
ANR	121291	Symbol	malloc		121043						
ANR	121292	Symbol	a -> elements		121043						
ANR	121293	Symbol	NULL		121043						
ANR	121294	Symbol	da -> compare		121043						
ANR	121295	Symbol	da -> insert		121043						
ANR	121296	Symbol	a -> num_elements		121043						
ANR	121297	Symbol	i		121043						
ANR	121298	Symbol	* * a		121043						
ANR	121299	Symbol	* a		121043						
ANR	121300	Symbol	da -> elements		121043						
ANR	121301	Symbol	* * da		121043						
ANR	121302	Symbol	da -> data		121043						
ANR	121303	Symbol	da -> current		121043						
ANR	121304	Symbol	a -> data		121043						
ANR	121305	Symbol	* i		121043						
ANR	121306	Symbol	a -> unique		121043						
ANR	121307	Symbol	da -> alloc_elements		121043						
ANR	121308	Symbol	da -> saved		121043						
ANR	121309	Symbol	da -> num_elements		121043						
ANR	121310	Symbol	a -> compare		121043						
ANR	121311	Symbol	da		121043						
ANR	121312	Symbol	* da -> elements		121043						
ANR	121313	Function	cupsArrayFind	475:0:11148:12628							
ANR	121314	FunctionDef	"cupsArrayFind (cups_array_t * a , void * e)"		121313	0					
ANR	121315	CompoundStatement		478:0:11296:12628	121313	0					
ANR	121316	IdentifierDeclStatement	"int current , diff , hash ;"	479:2:11300:11369	121313	0	True				
ANR	121317	IdentifierDecl	current		121313	0					
ANR	121318	IdentifierDeclType	int		121313	0					
ANR	121319	Identifier	current		121313	1					
ANR	121320	IdentifierDecl	diff		121313	1					
ANR	121321	IdentifierDeclType	int		121313	0					
ANR	121322	Identifier	diff		121313	1					
ANR	121323	IdentifierDecl	hash		121313	2					
ANR	121324	IdentifierDeclType	int		121313	0					
ANR	121325	Identifier	hash		121313	1					
ANR	121326	IfStatement	if ( ! a || ! e )		121313	1					
ANR	121327	Condition	! a || ! e	488:6:11434:11441	121313	0	True				
ANR	121328	OrExpression	! a || ! e		121313	0		||			
ANR	121329	UnaryOperationExpression	! a		121313	0					
ANR	121330	UnaryOperator	!		121313	0					
ANR	121331	Identifier	a		121313	1					
ANR	121332	UnaryOperationExpression	! e		121313	1					
ANR	121333	UnaryOperator	!		121313	0					
ANR	121334	Identifier	e		121313	1					
ANR	121335	ReturnStatement	return ( NULL ) ;	489:4:11448:11461	121313	1	True				
ANR	121336	Identifier	NULL		121313	0					
ANR	121337	IfStatement	if ( ! a -> num_elements )		121313	2					
ANR	121338	Condition	! a -> num_elements	495:6:11515:11530	121313	0	True				
ANR	121339	UnaryOperationExpression	! a -> num_elements		121313	0					
ANR	121340	UnaryOperator	!		121313	0					
ANR	121341	PtrMemberAccess	a -> num_elements		121313	1					
ANR	121342	Identifier	a		121313	0					
ANR	121343	Identifier	num_elements		121313	1					
ANR	121344	ReturnStatement	return ( NULL ) ;	496:4:11537:11550	121313	1	True				
ANR	121345	Identifier	NULL		121313	0					
ANR	121346	IfStatement	if ( a -> hash )		121313	3					
ANR	121347	Condition	a -> hash	502:6:11598:11604	121313	0	True				
ANR	121348	PtrMemberAccess	a -> hash		121313	0					
ANR	121349	Identifier	a		121313	0					
ANR	121350	Identifier	hash		121313	1					
ANR	121351	CompoundStatement		26:2:312:312	121313	1					
ANR	121352	ExpressionStatement	"hash = ( * ( a -> hashfunc ) ) ( e , a -> data )"	504:4:11615:11650	121313	0	True				
ANR	121353	AssignmentExpression	"hash = ( * ( a -> hashfunc ) ) ( e , a -> data )"		121313	0		=			
ANR	121354	Identifier	hash		121313	0					
ANR	121355	CallExpression	"( * ( a -> hashfunc ) ) ( e , a -> data )"		121313	1					
ANR	121356	Callee	* ( a -> hashfunc )		121313	0					
ANR	121357	UnaryOperationExpression	* ( a -> hashfunc )		121313	0					
ANR	121358	UnaryOperator	*		121313	0					
ANR	121359	PtrMemberAccess	a -> hashfunc		121313	1					
ANR	121360	Identifier	a		121313	0					
ANR	121361	Identifier	hashfunc		121313	1					
ANR	121362	ArgumentList	e		121313	1					
ANR	121363	Argument	e		121313	0					
ANR	121364	Identifier	e		121313	0					
ANR	121365	Argument	a -> data		121313	1					
ANR	121366	PtrMemberAccess	a -> data		121313	0					
ANR	121367	Identifier	a		121313	0					
ANR	121368	Identifier	data		121313	1					
ANR	121369	IfStatement	if ( hash < 0 || hash >= a -> hashsize )		121313	1					
ANR	121370	Condition	hash < 0 || hash >= a -> hashsize	506:8:11661:11691	121313	0	True				
ANR	121371	OrExpression	hash < 0 || hash >= a -> hashsize		121313	0		||			
ANR	121372	RelationalExpression	hash < 0		121313	0		<			
ANR	121373	Identifier	hash		121313	0					
ANR	121374	PrimaryExpression	0		121313	1					
ANR	121375	RelationalExpression	hash >= a -> hashsize		121313	1		>=			
ANR	121376	Identifier	hash		121313	0					
ANR	121377	PtrMemberAccess	a -> hashsize		121313	1					
ANR	121378	Identifier	a		121313	0					
ANR	121379	Identifier	hashsize		121313	1					
ANR	121380	CompoundStatement		30:4:401:401	121313	1					
ANR	121381	ExpressionStatement	current = a -> current	508:6:11706:11726	121313	0	True				
ANR	121382	AssignmentExpression	current = a -> current		121313	0		=			
ANR	121383	Identifier	current		121313	0					
ANR	121384	PtrMemberAccess	a -> current		121313	1					
ANR	121385	Identifier	a		121313	0					
ANR	121386	Identifier	current		121313	1					
ANR	121387	ExpressionStatement	hash = - 1	509:6:11734:11746	121313	1	True				
ANR	121388	AssignmentExpression	hash = - 1		121313	0		=			
ANR	121389	Identifier	hash		121313	0					
ANR	121390	UnaryOperationExpression	- 1		121313	1					
ANR	121391	UnaryOperator	-		121313	0					
ANR	121392	PrimaryExpression	1		121313	1					
ANR	121393	ElseStatement	else		121313	0					
ANR	121394	CompoundStatement		35:4:470:470	121313	0					
ANR	121395	ExpressionStatement	current = a -> hash [ hash ]	513:6:11775:11798	121313	0	True				
ANR	121396	AssignmentExpression	current = a -> hash [ hash ]		121313	0		=			
ANR	121397	Identifier	current		121313	0					
ANR	121398	ArrayIndexing	a -> hash [ hash ]		121313	1					
ANR	121399	PtrMemberAccess	a -> hash		121313	0					
ANR	121400	Identifier	a		121313	0					
ANR	121401	Identifier	hash		121313	1					
ANR	121402	Identifier	hash		121313	1					
ANR	121403	IfStatement	if ( current < 0 || current >= a -> num_elements )		121313	1					
ANR	121404	Condition	current < 0 || current >= a -> num_elements	515:10:11811:11851	121313	0	True				
ANR	121405	OrExpression	current < 0 || current >= a -> num_elements		121313	0		||			
ANR	121406	RelationalExpression	current < 0		121313	0		<			
ANR	121407	Identifier	current		121313	0					
ANR	121408	PrimaryExpression	0		121313	1					
ANR	121409	RelationalExpression	current >= a -> num_elements		121313	1		>=			
ANR	121410	Identifier	current		121313	0					
ANR	121411	PtrMemberAccess	a -> num_elements		121313	1					
ANR	121412	Identifier	a		121313	0					
ANR	121413	Identifier	num_elements		121313	1					
ANR	121414	ExpressionStatement	current = a -> current	516:8:11862:11882	121313	1	True				
ANR	121415	AssignmentExpression	current = a -> current		121313	0		=			
ANR	121416	Identifier	current		121313	0					
ANR	121417	PtrMemberAccess	a -> current		121313	1					
ANR	121418	Identifier	a		121313	0					
ANR	121419	Identifier	current		121313	1					
ANR	121420	ElseStatement	else		121313	0					
ANR	121421	CompoundStatement		43:2:606:606	121313	0					
ANR	121422	ExpressionStatement	current = a -> current	521:4:11909:11929	121313	0	True				
ANR	121423	AssignmentExpression	current = a -> current		121313	0		=			
ANR	121424	Identifier	current		121313	0					
ANR	121425	PtrMemberAccess	a -> current		121313	1					
ANR	121426	Identifier	a		121313	0					
ANR	121427	Identifier	current		121313	1					
ANR	121428	ExpressionStatement	hash = - 1	522:4:11935:11947	121313	1	True				
ANR	121429	AssignmentExpression	hash = - 1		121313	0		=			
ANR	121430	Identifier	hash		121313	0					
ANR	121431	UnaryOperationExpression	- 1		121313	1					
ANR	121432	UnaryOperator	-		121313	0					
ANR	121433	PrimaryExpression	1		121313	1					
ANR	121434	ExpressionStatement	"current = cups_array_find ( a , e , current , & diff )"	525:2:11956:12003	121313	4	True				
ANR	121435	AssignmentExpression	"current = cups_array_find ( a , e , current , & diff )"		121313	0		=			
ANR	121436	Identifier	current		121313	0					
ANR	121437	CallExpression	"cups_array_find ( a , e , current , & diff )"		121313	1					
ANR	121438	Callee	cups_array_find		121313	0					
ANR	121439	Identifier	cups_array_find		121313	0					
ANR	121440	ArgumentList	a		121313	1					
ANR	121441	Argument	a		121313	0					
ANR	121442	Identifier	a		121313	0					
ANR	121443	Argument	e		121313	1					
ANR	121444	Identifier	e		121313	0					
ANR	121445	Argument	current		121313	2					
ANR	121446	Identifier	current		121313	0					
ANR	121447	Argument	& diff		121313	3					
ANR	121448	UnaryOperationExpression	& diff		121313	0					
ANR	121449	UnaryOperator	&		121313	0					
ANR	121450	Identifier	diff		121313	1					
ANR	121451	IfStatement	if ( ! diff )		121313	5					
ANR	121452	Condition	! diff	526:6:12011:12015	121313	0	True				
ANR	121453	UnaryOperationExpression	! diff		121313	0					
ANR	121454	UnaryOperator	!		121313	0					
ANR	121455	Identifier	diff		121313	1					
ANR	121456	CompoundStatement		50:2:723:723	121313	1					
ANR	121457	IfStatement	if ( ! a -> unique && a -> compare )		121313	0					
ANR	121458	Condition	! a -> unique && a -> compare	533:8:12160:12183	121313	0	True				
ANR	121459	AndExpression	! a -> unique && a -> compare		121313	0		&&			
ANR	121460	UnaryOperationExpression	! a -> unique		121313	0					
ANR	121461	UnaryOperator	!		121313	0					
ANR	121462	PtrMemberAccess	a -> unique		121313	1					
ANR	121463	Identifier	a		121313	0					
ANR	121464	Identifier	unique		121313	1					
ANR	121465	PtrMemberAccess	a -> compare		121313	1					
ANR	121466	Identifier	a		121313	0					
ANR	121467	Identifier	compare		121313	1					
ANR	121468	CompoundStatement		57:4:893:893	121313	1					
ANR	121469	WhileStatement	"while ( current > 0 && ! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data ) )"		121313	0					
ANR	121470	Condition	"current > 0 && ! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"	539:13:12280:12393	121313	0	True				
ANR	121471	AndExpression	"current > 0 && ! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"		121313	0		&&			
ANR	121472	RelationalExpression	current > 0		121313	0		>			
ANR	121473	Identifier	current		121313	0					
ANR	121474	PrimaryExpression	0		121313	1					
ANR	121475	UnaryOperationExpression	"! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"		121313	1					
ANR	121476	UnaryOperator	!		121313	0					
ANR	121477	CallExpression	"( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"		121313	1					
ANR	121478	Callee	* ( a -> compare )		121313	0					
ANR	121479	UnaryOperationExpression	* ( a -> compare )		121313	0					
ANR	121480	UnaryOperator	*		121313	0					
ANR	121481	PtrMemberAccess	a -> compare		121313	1					
ANR	121482	Identifier	a		121313	0					
ANR	121483	Identifier	compare		121313	1					
ANR	121484	ArgumentList	e		121313	1					
ANR	121485	Argument	e		121313	0					
ANR	121486	Identifier	e		121313	0					
ANR	121487	Argument	a -> elements [ current - 1 ]		121313	1					
ANR	121488	ArrayIndexing	a -> elements [ current - 1 ]		121313	0					
ANR	121489	PtrMemberAccess	a -> elements		121313	0					
ANR	121490	Identifier	a		121313	0					
ANR	121491	Identifier	elements		121313	1					
ANR	121492	AdditiveExpression	current - 1		121313	1		-			
ANR	121493	Identifier	current		121313	0					
ANR	121494	PrimaryExpression	1		121313	1					
ANR	121495	Argument	a -> data		121313	2					
ANR	121496	PtrMemberAccess	a -> data		121313	0					
ANR	121497	Identifier	a		121313	0					
ANR	121498	Identifier	data		121313	1					
ANR	121499	ExpressionStatement	current --	541:8:12404:12414	121313	1	True				
ANR	121500	PostIncDecOperationExpression	current --		121313	0					
ANR	121501	Identifier	current		121313	0					
ANR	121502	IncDec	--		121313	1					
ANR	121503	ExpressionStatement	a -> current = current	544:4:12427:12447	121313	1	True				
ANR	121504	AssignmentExpression	a -> current = current		121313	0		=			
ANR	121505	PtrMemberAccess	a -> current		121313	0					
ANR	121506	Identifier	a		121313	0					
ANR	121507	Identifier	current		121313	1					
ANR	121508	Identifier	current		121313	1					
ANR	121509	IfStatement	if ( hash >= 0 )		121313	2					
ANR	121510	Condition	hash >= 0	546:8:12458:12466	121313	0	True				
ANR	121511	RelationalExpression	hash >= 0		121313	0		>=			
ANR	121512	Identifier	hash		121313	0					
ANR	121513	PrimaryExpression	0		121313	1					
ANR	121514	ExpressionStatement	a -> hash [ hash ] = current	547:6:12475:12498	121313	1	True				
ANR	121515	AssignmentExpression	a -> hash [ hash ] = current		121313	0		=			
ANR	121516	ArrayIndexing	a -> hash [ hash ]		121313	0					
ANR	121517	PtrMemberAccess	a -> hash		121313	0					
ANR	121518	Identifier	a		121313	0					
ANR	121519	Identifier	hash		121313	1					
ANR	121520	Identifier	hash		121313	1					
ANR	121521	Identifier	current		121313	1					
ANR	121522	ReturnStatement	return ( a -> elements [ current ] ) ;	549:4:12505:12534	121313	3	True				
ANR	121523	ArrayIndexing	a -> elements [ current ]		121313	0					
ANR	121524	PtrMemberAccess	a -> elements		121313	0					
ANR	121525	Identifier	a		121313	0					
ANR	121526	Identifier	elements		121313	1					
ANR	121527	Identifier	current		121313	1					
ANR	121528	ElseStatement	else		121313	0					
ANR	121529	CompoundStatement		75:2:1252:1252	121313	0					
ANR	121530	ExpressionStatement	a -> current = - 1	557:4:12587:12602	121313	0	True				
ANR	121531	AssignmentExpression	a -> current = - 1		121313	0		=			
ANR	121532	PtrMemberAccess	a -> current		121313	0					
ANR	121533	Identifier	a		121313	0					
ANR	121534	Identifier	current		121313	1					
ANR	121535	UnaryOperationExpression	- 1		121313	1					
ANR	121536	UnaryOperator	-		121313	0					
ANR	121537	PrimaryExpression	1		121313	1					
ANR	121538	ReturnStatement	return ( NULL ) ;	559:4:12609:12622	121313	1	True				
ANR	121539	Identifier	NULL		121313	0					
ANR	121540	ReturnType	void *		121313	1					
ANR	121541	Identifier	cupsArrayFind		121313	2					
ANR	121542	ParameterList	"cups_array_t * a , void * e"		121313	3					
ANR	121543	Parameter	cups_array_t * a	476:14:11212:11226	121313	0	True				
ANR	121544	ParameterType	cups_array_t *		121313	0					
ANR	121545	Identifier	a		121313	1					
ANR	121546	Parameter	void * e	477:14:11260:11274	121313	1	True				
ANR	121547	ParameterType	void *		121313	0					
ANR	121548	Identifier	e		121313	1					
ANR	121549	CFGEntryNode	ENTRY		121313		True				
ANR	121550	CFGExitNode	EXIT		121313		True				
ANR	121551	Symbol	cups_array_find		121313						
ANR	121552	Symbol	* current		121313						
ANR	121553	Symbol	* a -> elements		121313						
ANR	121554	Symbol	current		121313						
ANR	121555	Symbol	a -> hash		121313						
ANR	121556	Symbol	* a -> hashfunc		121313						
ANR	121557	Symbol	a -> hashsize		121313						
ANR	121558	Symbol	* a -> hash		121313						
ANR	121559	Symbol	a -> current		121313						
ANR	121560	Symbol	* hash		121313						
ANR	121561	Symbol	* ( a -> hashfunc )		121313						
ANR	121562	Symbol	a -> hashfunc		121313						
ANR	121563	Symbol	a		121313						
ANR	121564	Symbol	a -> elements		121313						
ANR	121565	Symbol	NULL		121313						
ANR	121566	Symbol	e		121313						
ANR	121567	Symbol	a -> num_elements		121313						
ANR	121568	Symbol	* ( a -> compare )		121313						
ANR	121569	Symbol	diff		121313						
ANR	121570	Symbol	* * a		121313						
ANR	121571	Symbol	* a		121313						
ANR	121572	Symbol	a -> data		121313						
ANR	121573	Symbol	& diff		121313						
ANR	121574	Symbol	a -> unique		121313						
ANR	121575	Symbol	* a -> compare		121313						
ANR	121576	Symbol	a -> compare		121313						
ANR	121577	Symbol	hash		121313						
ANR	121578	Function	cupsArrayFirst	570:0:12733:13014							
ANR	121579	FunctionDef	cupsArrayFirst (cups_array_t * a)		121578	0					
ANR	121580	CompoundStatement		572:0:12854:13014	121578	0					
ANR	121581	IfStatement	if ( ! a )		121578	0					
ANR	121582	Condition	! a	577:6:12897:12898	121578	0	True				
ANR	121583	UnaryOperationExpression	! a		121578	0					
ANR	121584	UnaryOperator	!		121578	0					
ANR	121585	Identifier	a		121578	1					
ANR	121586	ReturnStatement	return ( NULL ) ;	578:4:12905:12918	121578	1	True				
ANR	121587	Identifier	NULL		121578	0					
ANR	121588	ExpressionStatement	a -> current = 0	584:2:12965:12979	121578	1	True				
ANR	121589	AssignmentExpression	a -> current = 0		121578	0		=			
ANR	121590	PtrMemberAccess	a -> current		121578	0					
ANR	121591	Identifier	a		121578	0					
ANR	121592	Identifier	current		121578	1					
ANR	121593	PrimaryExpression	0		121578	1					
ANR	121594	ReturnStatement	return ( cupsArrayCurrent ( a ) ) ;	586:2:12984:13012	121578	2	True				
ANR	121595	CallExpression	cupsArrayCurrent ( a )		121578	0					
ANR	121596	Callee	cupsArrayCurrent		121578	0					
ANR	121597	Identifier	cupsArrayCurrent		121578	0					
ANR	121598	ArgumentList	a		121578	1					
ANR	121599	Argument	a		121578	0					
ANR	121600	Identifier	a		121578	0					
ANR	121601	ReturnType	void *		121578	1					
ANR	121602	Identifier	cupsArrayFirst		121578	2					
ANR	121603	ParameterList	cups_array_t * a		121578	3					
ANR	121604	Parameter	cups_array_t * a	571:15:12820:12834	121578	0	True				
ANR	121605	ParameterType	cups_array_t *		121578	0					
ANR	121606	Identifier	a		121578	1					
ANR	121607	CFGEntryNode	ENTRY		121578		True				
ANR	121608	CFGExitNode	EXIT		121578		True				
ANR	121609	Symbol	a		121578						
ANR	121610	Symbol	NULL		121578						
ANR	121611	Symbol	cupsArrayCurrent		121578						
ANR	121612	Symbol	a -> current		121578						
ANR	121613	Symbol	* a		121578						
ANR	121614	Function	cupsArrayGetIndex	599:0:13277:13451							
ANR	121615	FunctionDef	cupsArrayGetIndex (cups_array_t * a)		121614	0					
ANR	121616	CompoundStatement		601:0:13390:13451	121614	0					
ANR	121617	IfStatement	if ( ! a )		121614	0					
ANR	121618	Condition	! a	602:6:13398:13399	121614	0	True				
ANR	121619	UnaryOperationExpression	! a		121614	0					
ANR	121620	UnaryOperator	!		121614	0					
ANR	121621	Identifier	a		121614	1					
ANR	121622	ReturnStatement	return ( - 1 ) ;	603:4:13406:13417	121614	1	True				
ANR	121623	UnaryOperationExpression	- 1		121614	0					
ANR	121624	UnaryOperator	-		121614	0					
ANR	121625	PrimaryExpression	1		121614	1					
ANR	121626	ElseStatement	else		121614	0					
ANR	121627	ReturnStatement	return ( a -> current ) ;	605:4:13430:13449	121614	0	True				
ANR	121628	PtrMemberAccess	a -> current		121614	0					
ANR	121629	Identifier	a		121614	0					
ANR	121630	Identifier	current		121614	1					
ANR	121631	ReturnType	int		121614	1					
ANR	121632	Identifier	cupsArrayGetIndex		121614	2					
ANR	121633	ParameterList	cups_array_t * a		121614	3					
ANR	121634	Parameter	cups_array_t * a	600:18:13357:13371	121614	0	True				
ANR	121635	ParameterType	cups_array_t *		121614	0					
ANR	121636	Identifier	a		121614	1					
ANR	121637	CFGEntryNode	ENTRY		121614		True				
ANR	121638	CFGExitNode	EXIT		121614		True				
ANR	121639	Symbol	a		121614						
ANR	121640	Symbol	a -> current		121614						
ANR	121641	Symbol	* a		121614						
ANR	121642	Function	cupsArrayGetInsert	615:0:13568:13748							
ANR	121643	FunctionDef	cupsArrayGetInsert (cups_array_t * a)		121642	0					
ANR	121644	CompoundStatement		617:0:13688:13748	121642	0					
ANR	121645	IfStatement	if ( ! a )		121642	0					
ANR	121646	Condition	! a	618:6:13696:13697	121642	0	True				
ANR	121647	UnaryOperationExpression	! a		121642	0					
ANR	121648	UnaryOperator	!		121642	0					
ANR	121649	Identifier	a		121642	1					
ANR	121650	ReturnStatement	return ( - 1 ) ;	619:4:13704:13715	121642	1	True				
ANR	121651	UnaryOperationExpression	- 1		121642	0					
ANR	121652	UnaryOperator	-		121642	0					
ANR	121653	PrimaryExpression	1		121642	1					
ANR	121654	ElseStatement	else		121642	0					
ANR	121655	ReturnStatement	return ( a -> insert ) ;	621:4:13728:13746	121642	0	True				
ANR	121656	PtrMemberAccess	a -> insert		121642	0					
ANR	121657	Identifier	a		121642	0					
ANR	121658	Identifier	insert		121642	1					
ANR	121659	ReturnType	int		121642	1					
ANR	121660	Identifier	cupsArrayGetInsert		121642	2					
ANR	121661	ParameterList	cups_array_t * a		121642	3					
ANR	121662	Parameter	cups_array_t * a	616:19:13655:13669	121642	0	True				
ANR	121663	ParameterType	cups_array_t *		121642	0					
ANR	121664	Identifier	a		121642	1					
ANR	121665	CFGEntryNode	ENTRY		121642		True				
ANR	121666	CFGExitNode	EXIT		121642		True				
ANR	121667	Symbol	a		121642						
ANR	121668	Symbol	a -> insert		121642						
ANR	121669	Symbol	* a		121642						
ANR	121670	Function	cupsArrayIndex	631:0:13852:14107							
ANR	121671	FunctionDef	"cupsArrayIndex (cups_array_t * a , int n)"		121670	0					
ANR	121672	CompoundStatement		634:0:14024:14107	121670	0					
ANR	121673	IfStatement	if ( ! a )		121670	0					
ANR	121674	Condition	! a	635:6:14032:14033	121670	0	True				
ANR	121675	UnaryOperationExpression	! a		121670	0					
ANR	121676	UnaryOperator	!		121670	0					
ANR	121677	Identifier	a		121670	1					
ANR	121678	ReturnStatement	return ( NULL ) ;	636:4:14040:14053	121670	1	True				
ANR	121679	Identifier	NULL		121670	0					
ANR	121680	ExpressionStatement	a -> current = n	638:2:14058:14072	121670	1	True				
ANR	121681	AssignmentExpression	a -> current = n		121670	0		=			
ANR	121682	PtrMemberAccess	a -> current		121670	0					
ANR	121683	Identifier	a		121670	0					
ANR	121684	Identifier	current		121670	1					
ANR	121685	Identifier	n		121670	1					
ANR	121686	ReturnStatement	return ( cupsArrayCurrent ( a ) ) ;	640:2:14077:14105	121670	2	True				
ANR	121687	CallExpression	cupsArrayCurrent ( a )		121670	0					
ANR	121688	Callee	cupsArrayCurrent		121670	0					
ANR	121689	Identifier	cupsArrayCurrent		121670	0					
ANR	121690	ArgumentList	a		121670	1					
ANR	121691	Argument	a		121670	0					
ANR	121692	Identifier	a		121670	0					
ANR	121693	ReturnType	void *		121670	1					
ANR	121694	Identifier	cupsArrayIndex		121670	2					
ANR	121695	ParameterList	"cups_array_t * a , int n"		121670	3					
ANR	121696	Parameter	cups_array_t * a	632:15:13916:13930	121670	0	True				
ANR	121697	ParameterType	cups_array_t *		121670	0					
ANR	121698	Identifier	a		121670	1					
ANR	121699	Parameter	int n	633:15:13965:13978	121670	1	True				
ANR	121700	ParameterType	int		121670	0					
ANR	121701	Identifier	n		121670	1					
ANR	121702	CFGEntryNode	ENTRY		121670		True				
ANR	121703	CFGExitNode	EXIT		121670		True				
ANR	121704	Symbol	a		121670						
ANR	121705	Symbol	NULL		121670						
ANR	121706	Symbol	cupsArrayCurrent		121670						
ANR	121707	Symbol	a -> current		121670						
ANR	121708	Symbol	* a		121670						
ANR	121709	Symbol	n		121670						
ANR	121710	Function	cupsArrayInsert	654:0:14427:14814							
ANR	121711	FunctionDef	"cupsArrayInsert (cups_array_t * a , void * e)"		121710	0					
ANR	121712	CompoundStatement		657:0:14558:14814	121710	0					
ANR	121713	ExpressionStatement	"DEBUG_printf ( ( ""2cupsArrayInsert(a=%p, e=%p)"" , a , e ) )"	658:2:14562:14614	121710	0	True				
ANR	121714	CallExpression	"DEBUG_printf ( ( ""2cupsArrayInsert(a=%p, e=%p)"" , a , e ) )"		121710	0					
ANR	121715	Callee	DEBUG_printf		121710	0					
ANR	121716	Identifier	DEBUG_printf		121710	0					
ANR	121717	ArgumentList	"""2cupsArrayInsert(a=%p, e=%p)"" , a , e"		121710	1					
ANR	121718	Argument	"""2cupsArrayInsert(a=%p, e=%p)"" , a , e"		121710	0					
ANR	121719	Expression	"""2cupsArrayInsert(a=%p, e=%p)"" , a , e"		121710	0					
ANR	121720	PrimaryExpression	"""2cupsArrayInsert(a=%p, e=%p)"""		121710	0					
ANR	121721	Expression	"a , e"		121710	1					
ANR	121722	Identifier	a		121710	0					
ANR	121723	Identifier	e		121710	1					
ANR	121724	IfStatement	if ( ! a || ! e )		121710	1					
ANR	121725	Condition	! a || ! e	664:6:14658:14665	121710	0	True				
ANR	121726	OrExpression	! a || ! e		121710	0		||			
ANR	121727	UnaryOperationExpression	! a		121710	0					
ANR	121728	UnaryOperator	!		121710	0					
ANR	121729	Identifier	a		121710	1					
ANR	121730	UnaryOperationExpression	! e		121710	1					
ANR	121731	UnaryOperator	!		121710	0					
ANR	121732	Identifier	e		121710	1					
ANR	121733	CompoundStatement		9:2:111:111	121710	1					
ANR	121734	ExpressionStatement	"DEBUG_puts ( ""3cupsArrayInsert: returning 0"" )"	666:4:14676:14719	121710	0	True				
ANR	121735	CallExpression	"DEBUG_puts ( ""3cupsArrayInsert: returning 0"" )"		121710	0					
ANR	121736	Callee	DEBUG_puts		121710	0					
ANR	121737	Identifier	DEBUG_puts		121710	0					
ANR	121738	ArgumentList	"""3cupsArrayInsert: returning 0"""		121710	1					
ANR	121739	Argument	"""3cupsArrayInsert: returning 0"""		121710	0					
ANR	121740	PrimaryExpression	"""3cupsArrayInsert: returning 0"""		121710	0					
ANR	121741	ReturnStatement	return ( 0 ) ;	667:4:14725:14735	121710	1	True				
ANR	121742	PrimaryExpression	0		121710	0					
ANR	121743	ReturnStatement	"return ( cups_array_add ( a , e , 1 ) ) ;"	674:2:14780:14812	121710	2	True				
ANR	121744	CallExpression	"cups_array_add ( a , e , 1 )"		121710	0					
ANR	121745	Callee	cups_array_add		121710	0					
ANR	121746	Identifier	cups_array_add		121710	0					
ANR	121747	ArgumentList	a		121710	1					
ANR	121748	Argument	a		121710	0					
ANR	121749	Identifier	a		121710	0					
ANR	121750	Argument	e		121710	1					
ANR	121751	Identifier	e		121710	0					
ANR	121752	Argument	1		121710	2					
ANR	121753	PrimaryExpression	1		121710	0					
ANR	121754	ReturnType	int		121710	1					
ANR	121755	Identifier	cupsArrayInsert		121710	2					
ANR	121756	ParameterList	"cups_array_t * a , void * e"		121710	3					
ANR	121757	Parameter	cups_array_t * a	655:16:14488:14502	121710	0	True				
ANR	121758	ParameterType	cups_array_t *		121710	0					
ANR	121759	Identifier	a		121710	1					
ANR	121760	Parameter	void * e	656:2:14523:14537	121710	1	True				
ANR	121761	ParameterType	void *		121710	0					
ANR	121762	Identifier	e		121710	1					
ANR	121763	CFGEntryNode	ENTRY		121710		True				
ANR	121764	CFGExitNode	EXIT		121710		True				
ANR	121765	Symbol	a		121710						
ANR	121766	Symbol	cups_array_add		121710						
ANR	121767	Symbol	e		121710						
ANR	121768	Function	cupsArrayLast	684:0:14917:15213							
ANR	121769	FunctionDef	cupsArrayLast (cups_array_t * a)		121768	0					
ANR	121770	CompoundStatement		686:0:15036:15213	121768	0					
ANR	121771	IfStatement	if ( ! a )		121768	0					
ANR	121772	Condition	! a	691:6:15079:15080	121768	0	True				
ANR	121773	UnaryOperationExpression	! a		121768	0					
ANR	121774	UnaryOperator	!		121768	0					
ANR	121775	Identifier	a		121768	1					
ANR	121776	ReturnStatement	return ( NULL ) ;	692:4:15087:15100	121768	1	True				
ANR	121777	Identifier	NULL		121768	0					
ANR	121778	ExpressionStatement	a -> current = a -> num_elements - 1	698:2:15146:15178	121768	1	True				
ANR	121779	AssignmentExpression	a -> current = a -> num_elements - 1		121768	0		=			
ANR	121780	PtrMemberAccess	a -> current		121768	0					
ANR	121781	Identifier	a		121768	0					
ANR	121782	Identifier	current		121768	1					
ANR	121783	AdditiveExpression	a -> num_elements - 1		121768	1		-			
ANR	121784	PtrMemberAccess	a -> num_elements		121768	0					
ANR	121785	Identifier	a		121768	0					
ANR	121786	Identifier	num_elements		121768	1					
ANR	121787	PrimaryExpression	1		121768	1					
ANR	121788	ReturnStatement	return ( cupsArrayCurrent ( a ) ) ;	700:2:15183:15211	121768	2	True				
ANR	121789	CallExpression	cupsArrayCurrent ( a )		121768	0					
ANR	121790	Callee	cupsArrayCurrent		121768	0					
ANR	121791	Identifier	cupsArrayCurrent		121768	0					
ANR	121792	ArgumentList	a		121768	1					
ANR	121793	Argument	a		121768	0					
ANR	121794	Identifier	a		121768	0					
ANR	121795	ReturnType	void *		121768	1					
ANR	121796	Identifier	cupsArrayLast		121768	2					
ANR	121797	ParameterList	cups_array_t * a		121768	3					
ANR	121798	Parameter	cups_array_t * a	685:14:15002:15016	121768	0	True				
ANR	121799	ParameterType	cups_array_t *		121768	0					
ANR	121800	Identifier	a		121768	1					
ANR	121801	CFGEntryNode	ENTRY		121768		True				
ANR	121802	CFGExitNode	EXIT		121768		True				
ANR	121803	Symbol	a		121768						
ANR	121804	Symbol	NULL		121768						
ANR	121805	Symbol	a -> num_elements		121768						
ANR	121806	Symbol	cupsArrayCurrent		121768						
ANR	121807	Symbol	a -> current		121768						
ANR	121808	Symbol	* a		121768						
ANR	121809	Function	cupsArrayNew	715:0:15601:15860							
ANR	121810	FunctionDef	"cupsArrayNew (cups_array_func_t f , void * d)"		121809	0					
ANR	121811	CompoundStatement		718:0:15814:15860	121809	0					
ANR	121812	ReturnStatement	"return ( cupsArrayNew3 ( f , d , 0 , 0 , 0 , 0 ) ) ;"	719:2:15818:15858	121809	0	True				
ANR	121813	CallExpression	"cupsArrayNew3 ( f , d , 0 , 0 , 0 , 0 )"		121809	0					
ANR	121814	Callee	cupsArrayNew3		121809	0					
ANR	121815	Identifier	cupsArrayNew3		121809	0					
ANR	121816	ArgumentList	f		121809	1					
ANR	121817	Argument	f		121809	0					
ANR	121818	Identifier	f		121809	0					
ANR	121819	Argument	d		121809	1					
ANR	121820	Identifier	d		121809	0					
ANR	121821	Argument	0		121809	2					
ANR	121822	PrimaryExpression	0		121809	0					
ANR	121823	Argument	0		121809	3					
ANR	121824	PrimaryExpression	0		121809	0					
ANR	121825	Argument	0		121809	4					
ANR	121826	PrimaryExpression	0		121809	0					
ANR	121827	Argument	0		121809	5					
ANR	121828	PrimaryExpression	0		121809	0					
ANR	121829	ReturnType	cups_array_t *		121809	1					
ANR	121830	Identifier	cupsArrayNew		121809	2					
ANR	121831	ParameterList	"cups_array_func_t f , void * d"		121809	3					
ANR	121832	Parameter	cups_array_func_t f	716:13:15648:15666	121809	0	True				
ANR	121833	ParameterType	cups_array_func_t		121809	0					
ANR	121834	Identifier	f		121809	1					
ANR	121835	Parameter	void * d	717:13:15749:15768	121809	1	True				
ANR	121836	ParameterType	void *		121809	0					
ANR	121837	Identifier	d		121809	1					
ANR	121838	CFGEntryNode	ENTRY		121809		True				
ANR	121839	CFGExitNode	EXIT		121809		True				
ANR	121840	Symbol	d		121809						
ANR	121841	Symbol	f		121809						
ANR	121842	Symbol	cupsArrayNew3		121809						
ANR	121843	Function	cupsArrayNew2	737:0:16368:16783							
ANR	121844	FunctionDef	"cupsArrayNew2 (cups_array_func_t f , void * d , cups_ahash_func_t h , int hsize)"		121843	0					
ANR	121845	CompoundStatement		742:0:16733:16783	121843	0					
ANR	121846	ReturnStatement	"return ( cupsArrayNew3 ( f , d , h , hsize , 0 , 0 ) ) ;"	743:2:16737:16781	121843	0	True				
ANR	121847	CallExpression	"cupsArrayNew3 ( f , d , h , hsize , 0 , 0 )"		121843	0					
ANR	121848	Callee	cupsArrayNew3		121843	0					
ANR	121849	Identifier	cupsArrayNew3		121843	0					
ANR	121850	ArgumentList	f		121843	1					
ANR	121851	Argument	f		121843	0					
ANR	121852	Identifier	f		121843	0					
ANR	121853	Argument	d		121843	1					
ANR	121854	Identifier	d		121843	0					
ANR	121855	Argument	h		121843	2					
ANR	121856	Identifier	h		121843	0					
ANR	121857	Argument	hsize		121843	3					
ANR	121858	Identifier	hsize		121843	0					
ANR	121859	Argument	0		121843	4					
ANR	121860	PrimaryExpression	0		121843	0					
ANR	121861	Argument	0		121843	5					
ANR	121862	PrimaryExpression	0		121843	0					
ANR	121863	ReturnType	cups_array_t *		121843	1					
ANR	121864	Identifier	cupsArrayNew2		121843	2					
ANR	121865	ParameterList	"cups_array_func_t f , void * d , cups_ahash_func_t h , int hsize"		121843	3					
ANR	121866	Parameter	cups_array_func_t f	738:14:16416:16435	121843	0	True				
ANR	121867	ParameterType	cups_array_func_t		121843	0					
ANR	121868	Identifier	f		121843	1					
ANR	121869	Parameter	void * d	739:14:16519:16539	121843	1	True				
ANR	121870	ParameterType	void *		121843	0					
ANR	121871	Identifier	d		121843	1					
ANR	121872	Parameter	cups_ahash_func_t h	740:14:16591:16610	121843	2	True				
ANR	121873	ParameterType	cups_ahash_func_t		121843	0					
ANR	121874	Identifier	h		121843	1					
ANR	121875	Parameter	int hsize	741:7:16680:16703	121843	3	True				
ANR	121876	ParameterType	int		121843	0					
ANR	121877	Identifier	hsize		121843	1					
ANR	121878	CFGEntryNode	ENTRY		121843		True				
ANR	121879	CFGExitNode	EXIT		121843		True				
ANR	121880	Symbol	d		121843						
ANR	121881	Symbol	f		121843						
ANR	121882	Symbol	hsize		121843						
ANR	121883	Symbol	h		121843						
ANR	121884	Symbol	cupsArrayNew3		121843						
ANR	121885	Function	cupsArrayNew3	767:0:17546:18592							
ANR	121886	FunctionDef	"cupsArrayNew3 (cups_array_func_t f , void * d , cups_ahash_func_t h , int hsize , cups_acopy_func_t cf , cups_afree_func_t ff)"		121885	0					
ANR	121887	CompoundStatement		774:0:18019:18592	121885	0					
ANR	121888	IdentifierDeclStatement	cups_array_t * a ;	775:2:18023:18038	121885	0	True				
ANR	121889	IdentifierDecl	* a		121885	0					
ANR	121890	IdentifierDeclType	cups_array_t *		121885	0					
ANR	121891	Identifier	a		121885	1					
ANR	121892	ExpressionStatement	"a = calloc ( 1 , sizeof ( cups_array_t ) )"	782:2:18106:18141	121885	1	True				
ANR	121893	AssignmentExpression	"a = calloc ( 1 , sizeof ( cups_array_t ) )"		121885	0		=			
ANR	121894	Identifier	a		121885	0					
ANR	121895	CallExpression	"calloc ( 1 , sizeof ( cups_array_t ) )"		121885	1					
ANR	121896	Callee	calloc		121885	0					
ANR	121897	Identifier	calloc		121885	0					
ANR	121898	ArgumentList	1		121885	1					
ANR	121899	Argument	1		121885	0					
ANR	121900	PrimaryExpression	1		121885	0					
ANR	121901	Argument	sizeof ( cups_array_t )		121885	1					
ANR	121902	SizeofExpression	sizeof ( cups_array_t )		121885	0					
ANR	121903	Sizeof	sizeof		121885	0					
ANR	121904	SizeofOperand	cups_array_t		121885	1					
ANR	121905	IfStatement	if ( ! a )		121885	2					
ANR	121906	Condition	! a	783:6:18149:18150	121885	0	True				
ANR	121907	UnaryOperationExpression	! a		121885	0					
ANR	121908	UnaryOperator	!		121885	0					
ANR	121909	Identifier	a		121885	1					
ANR	121910	ReturnStatement	return ( NULL ) ;	784:4:18157:18170	121885	1	True				
ANR	121911	Identifier	NULL		121885	0					
ANR	121912	ExpressionStatement	a -> compare = f	786:2:18175:18191	121885	3	True				
ANR	121913	AssignmentExpression	a -> compare = f		121885	0		=			
ANR	121914	PtrMemberAccess	a -> compare		121885	0					
ANR	121915	Identifier	a		121885	0					
ANR	121916	Identifier	compare		121885	1					
ANR	121917	Identifier	f		121885	1					
ANR	121918	ExpressionStatement	a -> data = d	787:2:18195:18211	121885	4	True				
ANR	121919	AssignmentExpression	a -> data = d		121885	0		=			
ANR	121920	PtrMemberAccess	a -> data		121885	0					
ANR	121921	Identifier	a		121885	0					
ANR	121922	Identifier	data		121885	1					
ANR	121923	Identifier	d		121885	1					
ANR	121924	ExpressionStatement	a -> current = - 1	788:2:18215:18232	121885	5	True				
ANR	121925	AssignmentExpression	a -> current = - 1		121885	0		=			
ANR	121926	PtrMemberAccess	a -> current		121885	0					
ANR	121927	Identifier	a		121885	0					
ANR	121928	Identifier	current		121885	1					
ANR	121929	UnaryOperationExpression	- 1		121885	1					
ANR	121930	UnaryOperator	-		121885	0					
ANR	121931	PrimaryExpression	1		121885	1					
ANR	121932	ExpressionStatement	a -> insert = - 1	789:2:18236:18253	121885	6	True				
ANR	121933	AssignmentExpression	a -> insert = - 1		121885	0		=			
ANR	121934	PtrMemberAccess	a -> insert		121885	0					
ANR	121935	Identifier	a		121885	0					
ANR	121936	Identifier	insert		121885	1					
ANR	121937	UnaryOperationExpression	- 1		121885	1					
ANR	121938	UnaryOperator	-		121885	0					
ANR	121939	PrimaryExpression	1		121885	1					
ANR	121940	ExpressionStatement	a -> num_saved = 0	790:2:18257:18273	121885	7	True				
ANR	121941	AssignmentExpression	a -> num_saved = 0		121885	0		=			
ANR	121942	PtrMemberAccess	a -> num_saved		121885	0					
ANR	121943	Identifier	a		121885	0					
ANR	121944	Identifier	num_saved		121885	1					
ANR	121945	PrimaryExpression	0		121885	1					
ANR	121946	ExpressionStatement	a -> unique = 1	791:2:18277:18293	121885	8	True				
ANR	121947	AssignmentExpression	a -> unique = 1		121885	0		=			
ANR	121948	PtrMemberAccess	a -> unique		121885	0					
ANR	121949	Identifier	a		121885	0					
ANR	121950	Identifier	unique		121885	1					
ANR	121951	PrimaryExpression	1		121885	1					
ANR	121952	IfStatement	if ( hsize > 0 && h )		121885	9					
ANR	121953	Condition	hsize > 0 && h	793:6:18302:18315	121885	0	True				
ANR	121954	AndExpression	hsize > 0 && h		121885	0		&&			
ANR	121955	RelationalExpression	hsize > 0		121885	0		>			
ANR	121956	Identifier	hsize		121885	0					
ANR	121957	PrimaryExpression	0		121885	1					
ANR	121958	Identifier	h		121885	1					
ANR	121959	CompoundStatement		21:2:300:300	121885	1					
ANR	121960	ExpressionStatement	a -> hashfunc = h	795:4:18326:18342	121885	0	True				
ANR	121961	AssignmentExpression	a -> hashfunc = h		121885	0		=			
ANR	121962	PtrMemberAccess	a -> hashfunc		121885	0					
ANR	121963	Identifier	a		121885	0					
ANR	121964	Identifier	hashfunc		121885	1					
ANR	121965	Identifier	h		121885	1					
ANR	121966	ExpressionStatement	a -> hashsize = hsize	796:4:18348:18368	121885	1	True				
ANR	121967	AssignmentExpression	a -> hashsize = hsize		121885	0		=			
ANR	121968	PtrMemberAccess	a -> hashsize		121885	0					
ANR	121969	Identifier	a		121885	0					
ANR	121970	Identifier	hashsize		121885	1					
ANR	121971	Identifier	hsize		121885	1					
ANR	121972	ExpressionStatement	a -> hash = malloc ( hsize * sizeof ( int ) )	797:4:18374:18416	121885	2	True				
ANR	121973	AssignmentExpression	a -> hash = malloc ( hsize * sizeof ( int ) )		121885	0		=			
ANR	121974	PtrMemberAccess	a -> hash		121885	0					
ANR	121975	Identifier	a		121885	0					
ANR	121976	Identifier	hash		121885	1					
ANR	121977	CallExpression	malloc ( hsize * sizeof ( int ) )		121885	1					
ANR	121978	Callee	malloc		121885	0					
ANR	121979	Identifier	malloc		121885	0					
ANR	121980	ArgumentList	hsize * sizeof ( int )		121885	1					
ANR	121981	Argument	hsize * sizeof ( int )		121885	0					
ANR	121982	MultiplicativeExpression	hsize * sizeof ( int )		121885	0		*			
ANR	121983	Identifier	hsize		121885	0					
ANR	121984	SizeofExpression	sizeof ( int )		121885	1					
ANR	121985	Sizeof	sizeof		121885	0					
ANR	121986	SizeofOperand	int		121885	1					
ANR	121987	IfStatement	if ( ! a -> hash )		121885	3					
ANR	121988	Condition	! a -> hash	799:8:18427:18434	121885	0	True				
ANR	121989	UnaryOperationExpression	! a -> hash		121885	0					
ANR	121990	UnaryOperator	!		121885	0					
ANR	121991	PtrMemberAccess	a -> hash		121885	1					
ANR	121992	Identifier	a		121885	0					
ANR	121993	Identifier	hash		121885	1					
ANR	121994	CompoundStatement		27:4:421:421	121885	1					
ANR	121995	ExpressionStatement	free ( a )	801:6:18449:18456	121885	0	True				
ANR	121996	CallExpression	free ( a )		121885	0					
ANR	121997	Callee	free		121885	0					
ANR	121998	Identifier	free		121885	0					
ANR	121999	ArgumentList	a		121885	1					
ANR	122000	Argument	a		121885	0					
ANR	122001	Identifier	a		121885	0					
ANR	122002	ReturnStatement	return ( NULL ) ;	802:6:18464:18477	121885	1	True				
ANR	122003	Identifier	NULL		121885	0					
ANR	122004	ExpressionStatement	"memset ( a -> hash , - 1 , hsize * sizeof ( int ) )"	805:4:18490:18530	121885	4	True				
ANR	122005	CallExpression	"memset ( a -> hash , - 1 , hsize * sizeof ( int ) )"		121885	0					
ANR	122006	Callee	memset		121885	0					
ANR	122007	Identifier	memset		121885	0					
ANR	122008	ArgumentList	a -> hash		121885	1					
ANR	122009	Argument	a -> hash		121885	0					
ANR	122010	PtrMemberAccess	a -> hash		121885	0					
ANR	122011	Identifier	a		121885	0					
ANR	122012	Identifier	hash		121885	1					
ANR	122013	Argument	- 1		121885	1					
ANR	122014	UnaryOperationExpression	- 1		121885	0					
ANR	122015	UnaryOperator	-		121885	0					
ANR	122016	PrimaryExpression	1		121885	1					
ANR	122017	Argument	hsize * sizeof ( int )		121885	2					
ANR	122018	MultiplicativeExpression	hsize * sizeof ( int )		121885	0		*			
ANR	122019	Identifier	hsize		121885	0					
ANR	122020	SizeofExpression	sizeof ( int )		121885	1					
ANR	122021	Sizeof	sizeof		121885	0					
ANR	122022	SizeofOperand	int		121885	1					
ANR	122023	ExpressionStatement	a -> copyfunc = cf	808:2:18539:18555	121885	10	True				
ANR	122024	AssignmentExpression	a -> copyfunc = cf		121885	0		=			
ANR	122025	PtrMemberAccess	a -> copyfunc		121885	0					
ANR	122026	Identifier	a		121885	0					
ANR	122027	Identifier	copyfunc		121885	1					
ANR	122028	Identifier	cf		121885	1					
ANR	122029	ExpressionStatement	a -> freefunc = ff	809:2:18559:18575	121885	11	True				
ANR	122030	AssignmentExpression	a -> freefunc = ff		121885	0		=			
ANR	122031	PtrMemberAccess	a -> freefunc		121885	0					
ANR	122032	Identifier	a		121885	0					
ANR	122033	Identifier	freefunc		121885	1					
ANR	122034	Identifier	ff		121885	1					
ANR	122035	ReturnStatement	return ( a ) ;	811:2:18580:18590	121885	12	True				
ANR	122036	Identifier	a		121885	0					
ANR	122037	ReturnType	cups_array_t *		121885	1					
ANR	122038	Identifier	cupsArrayNew3		121885	2					
ANR	122039	ParameterList	"cups_array_func_t f , void * d , cups_ahash_func_t h , int hsize , cups_acopy_func_t cf , cups_afree_func_t ff"		121885	3					
ANR	122040	Parameter	cups_array_func_t f	768:14:17594:17613	121885	0	True				
ANR	122041	ParameterType	cups_array_func_t		121885	0					
ANR	122042	Identifier	f		121885	1					
ANR	122043	Parameter	void * d	769:14:17697:17717	121885	1	True				
ANR	122044	ParameterType	void *		121885	0					
ANR	122045	Identifier	d		121885	1					
ANR	122046	Parameter	cups_ahash_func_t h	770:14:17769:17788	121885	2	True				
ANR	122047	ParameterType	cups_ahash_func_t		121885	0					
ANR	122048	Identifier	h		121885	1					
ANR	122049	Parameter	int hsize	771:7:17858:17881	121885	3	True				
ANR	122050	ParameterType	int		121885	0					
ANR	122051	Identifier	hsize		121885	1					
ANR	122052	Parameter	cups_acopy_func_t cf	772:7:17918:17938	121885	4	True				
ANR	122053	ParameterType	cups_acopy_func_t		121885	0					
ANR	122054	Identifier	cf		121885	1					
ANR	122055	Parameter	cups_afree_func_t ff	773:7:17972:17992	121885	5	True				
ANR	122056	ParameterType	cups_afree_func_t		121885	0					
ANR	122057	Identifier	ff		121885	1					
ANR	122058	CFGEntryNode	ENTRY		121885		True				
ANR	122059	CFGExitNode	EXIT		121885		True				
ANR	122060	Symbol	ff		121885						
ANR	122061	Symbol	a -> hashfunc		121885						
ANR	122062	Symbol	a		121885						
ANR	122063	Symbol	malloc		121885						
ANR	122064	Symbol	cf		121885						
ANR	122065	Symbol	NULL		121885						
ANR	122066	Symbol	d		121885						
ANR	122067	Symbol	f		121885						
ANR	122068	Symbol	hsize		121885						
ANR	122069	Symbol	h		121885						
ANR	122070	Symbol	calloc		121885						
ANR	122071	Symbol	* a		121885						
ANR	122072	Symbol	a -> copyfunc		121885						
ANR	122073	Symbol	a -> data		121885						
ANR	122074	Symbol	a -> num_saved		121885						
ANR	122075	Symbol	a -> hash		121885						
ANR	122076	Symbol	a -> unique		121885						
ANR	122077	Symbol	a -> insert		121885						
ANR	122078	Symbol	a -> hashsize		121885						
ANR	122079	Symbol	a -> current		121885						
ANR	122080	Symbol	a -> compare		121885						
ANR	122081	Symbol	a -> freefunc		121885						
ANR	122082	Function	_cupsArrayNewStrings	823:0:18865:19304							
ANR	122083	FunctionDef	"_cupsArrayNewStrings (const char * s , char delim)"		122082	0					
ANR	122084	CompoundStatement		826:0:19040:19304	122082	0					
ANR	122085	IdentifierDeclStatement	cups_array_t * a ;	827:2:19044:19059	122082	0	True				
ANR	122086	IdentifierDecl	* a		122082	0					
ANR	122087	IdentifierDeclType	cups_array_t *		122082	0					
ANR	122088	Identifier	a		122082	1					
ANR	122089	IfStatement	"if ( ( a = cupsArrayNew3 ( ( cups_array_func_t ) strcmp , NULL , NULL , 0 , ( cups_acopy_func_t ) _cupsStrAlloc , ( cups_afree_func_t ) _cupsStrFree ) ) != NULL )"		122082	1					
ANR	122090	Condition	"( a = cupsArrayNew3 ( ( cups_array_func_t ) strcmp , NULL , NULL , 0 , ( cups_acopy_func_t ) _cupsStrAlloc , ( cups_afree_func_t ) _cupsStrFree ) ) != NULL"	830:6:19083:19247	122082	0	True				
ANR	122091	EqualityExpression	"( a = cupsArrayNew3 ( ( cups_array_func_t ) strcmp , NULL , NULL , 0 , ( cups_acopy_func_t ) _cupsStrAlloc , ( cups_afree_func_t ) _cupsStrFree ) ) != NULL"		122082	0		!=			
ANR	122092	AssignmentExpression	"a = cupsArrayNew3 ( ( cups_array_func_t ) strcmp , NULL , NULL , 0 , ( cups_acopy_func_t ) _cupsStrAlloc , ( cups_afree_func_t ) _cupsStrFree )"		122082	0		=			
ANR	122093	Identifier	a		122082	0					
ANR	122094	CallExpression	"cupsArrayNew3 ( ( cups_array_func_t ) strcmp , NULL , NULL , 0 , ( cups_acopy_func_t ) _cupsStrAlloc , ( cups_afree_func_t ) _cupsStrFree )"		122082	1					
ANR	122095	Callee	cupsArrayNew3		122082	0					
ANR	122096	Identifier	cupsArrayNew3		122082	0					
ANR	122097	ArgumentList	( cups_array_func_t ) strcmp		122082	1					
ANR	122098	Argument	( cups_array_func_t ) strcmp		122082	0					
ANR	122099	CastExpression	( cups_array_func_t ) strcmp		122082	0					
ANR	122100	CastTarget	cups_array_func_t		122082	0					
ANR	122101	Identifier	strcmp		122082	1					
ANR	122102	Argument	NULL		122082	1					
ANR	122103	Identifier	NULL		122082	0					
ANR	122104	Argument	NULL		122082	2					
ANR	122105	Identifier	NULL		122082	0					
ANR	122106	Argument	0		122082	3					
ANR	122107	PrimaryExpression	0		122082	0					
ANR	122108	Argument	( cups_acopy_func_t ) _cupsStrAlloc		122082	4					
ANR	122109	CastExpression	( cups_acopy_func_t ) _cupsStrAlloc		122082	0					
ANR	122110	CastTarget	cups_acopy_func_t		122082	0					
ANR	122111	Identifier	_cupsStrAlloc		122082	1					
ANR	122112	Argument	( cups_afree_func_t ) _cupsStrFree		122082	5					
ANR	122113	CastExpression	( cups_afree_func_t ) _cupsStrFree		122082	0					
ANR	122114	CastTarget	cups_afree_func_t		122082	0					
ANR	122115	Identifier	_cupsStrFree		122082	1					
ANR	122116	Identifier	NULL		122082	1					
ANR	122117	ExpressionStatement	"_cupsArrayAddStrings ( a , s , delim )"	833:4:19254:19287	122082	1	True				
ANR	122118	CallExpression	"_cupsArrayAddStrings ( a , s , delim )"		122082	0					
ANR	122119	Callee	_cupsArrayAddStrings		122082	0					
ANR	122120	Identifier	_cupsArrayAddStrings		122082	0					
ANR	122121	ArgumentList	a		122082	1					
ANR	122122	Argument	a		122082	0					
ANR	122123	Identifier	a		122082	0					
ANR	122124	Argument	s		122082	1					
ANR	122125	Identifier	s		122082	0					
ANR	122126	Argument	delim		122082	2					
ANR	122127	Identifier	delim		122082	0					
ANR	122128	ReturnStatement	return ( a ) ;	835:2:19292:19302	122082	2	True				
ANR	122129	Identifier	a		122082	0					
ANR	122130	ReturnType	cups_array_t *		122082	1					
ANR	122131	Identifier	_cupsArrayNewStrings		122082	2					
ANR	122132	ParameterList	"const char * s , char delim"		122082	3					
ANR	122133	Parameter	const char * s	824:21:18920:18932	122082	0	True				
ANR	122134	ParameterType	const char *		122082	0					
ANR	122135	Identifier	s		122082	1					
ANR	122136	Parameter	char delim	825:21:18992:19007	122082	1	True				
ANR	122137	ParameterType	char		122082	0					
ANR	122138	Identifier	delim		122082	1					
ANR	122139	CFGEntryNode	ENTRY		122082		True				
ANR	122140	CFGExitNode	EXIT		122082		True				
ANR	122141	Symbol	strcmp		122082						
ANR	122142	Symbol	a		122082						
ANR	122143	Symbol	_cupsStrAlloc		122082						
ANR	122144	Symbol	s		122082						
ANR	122145	Symbol	NULL		122082						
ANR	122146	Symbol	_cupsStrFree		122082						
ANR	122147	Symbol	delim		122082						
ANR	122148	Symbol	cupsArrayNew3		122082						
ANR	122149	Function	cupsArrayNext	851:0:19671:19964							
ANR	122150	FunctionDef	cupsArrayNext (cups_array_t * a)		122149	0					
ANR	122151	CompoundStatement		853:0:19768:19964	122149	0					
ANR	122152	IfStatement	if ( ! a )		122149	0					
ANR	122153	Condition	! a	858:6:19811:19812	122149	0	True				
ANR	122154	UnaryOperationExpression	! a		122149	0					
ANR	122155	UnaryOperator	!		122149	0					
ANR	122156	Identifier	a		122149	1					
ANR	122157	ReturnStatement	return ( NULL ) ;	859:4:19819:19832	122149	1	True				
ANR	122158	Identifier	NULL		122149	0					
ANR	122159	IfStatement	if ( a -> current < a -> num_elements )		122149	1					
ANR	122160	Condition	a -> current < a -> num_elements	865:6:19882:19909	122149	0	True				
ANR	122161	RelationalExpression	a -> current < a -> num_elements		122149	0		<			
ANR	122162	PtrMemberAccess	a -> current		122149	0					
ANR	122163	Identifier	a		122149	0					
ANR	122164	Identifier	current		122149	1					
ANR	122165	PtrMemberAccess	a -> num_elements		122149	1					
ANR	122166	Identifier	a		122149	0					
ANR	122167	Identifier	num_elements		122149	1					
ANR	122168	ExpressionStatement	a -> current ++	866:4:19916:19929	122149	1	True				
ANR	122169	PostIncDecOperationExpression	a -> current ++		122149	0					
ANR	122170	PtrMemberAccess	a -> current		122149	0					
ANR	122171	Identifier	a		122149	0					
ANR	122172	Identifier	current		122149	1					
ANR	122173	IncDec	++		122149	1					
ANR	122174	ReturnStatement	return ( cupsArrayCurrent ( a ) ) ;	868:2:19934:19962	122149	2	True				
ANR	122175	CallExpression	cupsArrayCurrent ( a )		122149	0					
ANR	122176	Callee	cupsArrayCurrent		122149	0					
ANR	122177	Identifier	cupsArrayCurrent		122149	0					
ANR	122178	ArgumentList	a		122149	1					
ANR	122179	Argument	a		122149	0					
ANR	122180	Identifier	a		122149	0					
ANR	122181	ReturnType	void *		122149	1					
ANR	122182	Identifier	cupsArrayNext		122149	2					
ANR	122183	ParameterList	cups_array_t * a		122149	3					
ANR	122184	Parameter	cups_array_t * a	852:14:19734:19748	122149	0	True				
ANR	122185	ParameterType	cups_array_t *		122149	0					
ANR	122186	Identifier	a		122149	1					
ANR	122187	CFGEntryNode	ENTRY		122149		True				
ANR	122188	CFGExitNode	EXIT		122149		True				
ANR	122189	Symbol	a		122149						
ANR	122190	Symbol	NULL		122149						
ANR	122191	Symbol	a -> num_elements		122149						
ANR	122192	Symbol	cupsArrayCurrent		122149						
ANR	122193	Symbol	a -> current		122149						
ANR	122194	Symbol	* a		122149						
ANR	122195	Function	cupsArrayPrev	884:0:20339:20627							
ANR	122196	FunctionDef	cupsArrayPrev (cups_array_t * a)		122195	0					
ANR	122197	CompoundStatement		886:0:20440:20627	122195	0					
ANR	122198	IfStatement	if ( ! a )		122195	0					
ANR	122199	Condition	! a	891:6:20483:20484	122195	0	True				
ANR	122200	UnaryOperationExpression	! a		122195	0					
ANR	122201	UnaryOperator	!		122195	0					
ANR	122202	Identifier	a		122195	1					
ANR	122203	ReturnStatement	return ( NULL ) ;	892:4:20491:20504	122195	1	True				
ANR	122204	Identifier	NULL		122195	0					
ANR	122205	IfStatement	if ( a -> current >= 0 )		122195	1					
ANR	122206	Condition	a -> current >= 0	898:6:20558:20572	122195	0	True				
ANR	122207	RelationalExpression	a -> current >= 0		122195	0		>=			
ANR	122208	PtrMemberAccess	a -> current		122195	0					
ANR	122209	Identifier	a		122195	0					
ANR	122210	Identifier	current		122195	1					
ANR	122211	PrimaryExpression	0		122195	1					
ANR	122212	ExpressionStatement	a -> current --	899:4:20579:20592	122195	1	True				
ANR	122213	PostIncDecOperationExpression	a -> current --		122195	0					
ANR	122214	PtrMemberAccess	a -> current		122195	0					
ANR	122215	Identifier	a		122195	0					
ANR	122216	Identifier	current		122195	1					
ANR	122217	IncDec	--		122195	1					
ANR	122218	ReturnStatement	return ( cupsArrayCurrent ( a ) ) ;	901:2:20597:20625	122195	2	True				
ANR	122219	CallExpression	cupsArrayCurrent ( a )		122195	0					
ANR	122220	Callee	cupsArrayCurrent		122195	0					
ANR	122221	Identifier	cupsArrayCurrent		122195	0					
ANR	122222	ArgumentList	a		122195	1					
ANR	122223	Argument	a		122195	0					
ANR	122224	Identifier	a		122195	0					
ANR	122225	ReturnType	void *		122195	1					
ANR	122226	Identifier	cupsArrayPrev		122195	2					
ANR	122227	ParameterList	cups_array_t * a		122195	3					
ANR	122228	Parameter	cups_array_t * a	885:14:20406:20420	122195	0	True				
ANR	122229	ParameterType	cups_array_t *		122195	0					
ANR	122230	Identifier	a		122195	1					
ANR	122231	CFGEntryNode	ENTRY		122195		True				
ANR	122232	CFGExitNode	EXIT		122195		True				
ANR	122233	Symbol	a		122195						
ANR	122234	Symbol	NULL		122195						
ANR	122235	Symbol	cupsArrayCurrent		122195						
ANR	122236	Symbol	a -> current		122195						
ANR	122237	Symbol	* a		122195						
ANR	122238	Function	cupsArrayRemove	917:0:20909:21980							
ANR	122239	FunctionDef	"cupsArrayRemove (cups_array_t * a , void * e)"		122238	0					
ANR	122240	CompoundStatement		920:0:21054:21980	122238	0					
ANR	122241	IdentifierDeclStatement	"int i , current , diff ;"	921:2:21058:21125	122238	0	True				
ANR	122242	IdentifierDecl	i		122238	0					
ANR	122243	IdentifierDeclType	int		122238	0					
ANR	122244	Identifier	i		122238	1					
ANR	122245	IdentifierDecl	current		122238	1					
ANR	122246	IdentifierDeclType	int		122238	0					
ANR	122247	Identifier	current		122238	1					
ANR	122248	IdentifierDecl	diff		122238	2					
ANR	122249	IdentifierDeclType	int		122238	0					
ANR	122250	Identifier	diff		122238	1					
ANR	122251	IfStatement	if ( ! a || ! e )		122238	1					
ANR	122252	Condition	! a || ! e	930:6:21190:21197	122238	0	True				
ANR	122253	OrExpression	! a || ! e		122238	0		||			
ANR	122254	UnaryOperationExpression	! a		122238	0					
ANR	122255	UnaryOperator	!		122238	0					
ANR	122256	Identifier	a		122238	1					
ANR	122257	UnaryOperationExpression	! e		122238	1					
ANR	122258	UnaryOperator	!		122238	0					
ANR	122259	Identifier	e		122238	1					
ANR	122260	ReturnStatement	return ( 0 ) ;	931:4:21204:21214	122238	1	True				
ANR	122261	PrimaryExpression	0		122238	0					
ANR	122262	IfStatement	if ( ! a -> num_elements )		122238	2					
ANR	122263	Condition	! a -> num_elements	937:6:21275:21290	122238	0	True				
ANR	122264	UnaryOperationExpression	! a -> num_elements		122238	0					
ANR	122265	UnaryOperator	!		122238	0					
ANR	122266	PtrMemberAccess	a -> num_elements		122238	1					
ANR	122267	Identifier	a		122238	0					
ANR	122268	Identifier	num_elements		122238	1					
ANR	122269	ReturnStatement	return ( 0 ) ;	938:4:21297:21307	122238	1	True				
ANR	122270	PrimaryExpression	0		122238	0					
ANR	122271	ExpressionStatement	"current = cups_array_find ( a , e , a -> current , & diff )"	940:2:21312:21362	122238	3	True				
ANR	122272	AssignmentExpression	"current = cups_array_find ( a , e , a -> current , & diff )"		122238	0		=			
ANR	122273	Identifier	current		122238	0					
ANR	122274	CallExpression	"cups_array_find ( a , e , a -> current , & diff )"		122238	1					
ANR	122275	Callee	cups_array_find		122238	0					
ANR	122276	Identifier	cups_array_find		122238	0					
ANR	122277	ArgumentList	a		122238	1					
ANR	122278	Argument	a		122238	0					
ANR	122279	Identifier	a		122238	0					
ANR	122280	Argument	e		122238	1					
ANR	122281	Identifier	e		122238	0					
ANR	122282	Argument	a -> current		122238	2					
ANR	122283	PtrMemberAccess	a -> current		122238	0					
ANR	122284	Identifier	a		122238	0					
ANR	122285	Identifier	current		122238	1					
ANR	122286	Argument	& diff		122238	3					
ANR	122287	UnaryOperationExpression	& diff		122238	0					
ANR	122288	UnaryOperator	&		122238	0					
ANR	122289	Identifier	diff		122238	1					
ANR	122290	IfStatement	if ( diff )		122238	4					
ANR	122291	Condition	diff	941:6:21370:21373	122238	0	True				
ANR	122292	Identifier	diff		122238	0					
ANR	122293	ReturnStatement	return ( 0 ) ;	942:4:21380:21390	122238	1	True				
ANR	122294	PrimaryExpression	0		122238	0					
ANR	122295	ExpressionStatement	a -> num_elements --	948:2:21431:21449	122238	5	True				
ANR	122296	PostIncDecOperationExpression	a -> num_elements --		122238	0					
ANR	122297	PtrMemberAccess	a -> num_elements		122238	0					
ANR	122298	Identifier	a		122238	0					
ANR	122299	Identifier	num_elements		122238	1					
ANR	122300	IncDec	--		122238	1					
ANR	122301	IfStatement	if ( a -> freefunc )		122238	6					
ANR	122302	Condition	a -> freefunc	950:6:21458:21468	122238	0	True				
ANR	122303	PtrMemberAccess	a -> freefunc		122238	0					
ANR	122304	Identifier	a		122238	0					
ANR	122305	Identifier	freefunc		122238	1					
ANR	122306	ExpressionStatement	"( a -> freefunc ) ( a -> elements [ current ] , a -> data )"	951:4:21475:21519	122238	1	True				
ANR	122307	CallExpression	"( a -> freefunc ) ( a -> elements [ current ] , a -> data )"		122238	0					
ANR	122308	Callee	a -> freefunc		122238	0					
ANR	122309	PtrMemberAccess	a -> freefunc		122238	0					
ANR	122310	Identifier	a		122238	0					
ANR	122311	Identifier	freefunc		122238	1					
ANR	122312	ArgumentList	a -> elements [ current ]		122238	1					
ANR	122313	Argument	a -> elements [ current ]		122238	0					
ANR	122314	ArrayIndexing	a -> elements [ current ]		122238	0					
ANR	122315	PtrMemberAccess	a -> elements		122238	0					
ANR	122316	Identifier	a		122238	0					
ANR	122317	Identifier	elements		122238	1					
ANR	122318	Identifier	current		122238	1					
ANR	122319	Argument	a -> data		122238	1					
ANR	122320	PtrMemberAccess	a -> data		122238	0					
ANR	122321	Identifier	a		122238	0					
ANR	122322	Identifier	data		122238	1					
ANR	122323	IfStatement	if ( current < a -> num_elements )		122238	7					
ANR	122324	Condition	current < a -> num_elements	953:6:21528:21552	122238	0	True				
ANR	122325	RelationalExpression	current < a -> num_elements		122238	0		<			
ANR	122326	Identifier	current		122238	0					
ANR	122327	PtrMemberAccess	a -> num_elements		122238	1					
ANR	122328	Identifier	a		122238	0					
ANR	122329	Identifier	num_elements		122238	1					
ANR	122330	ExpressionStatement	"memmove ( a -> elements + current , a -> elements + current + 1 , ( a -> num_elements - current ) * sizeof ( void * ) )"	954:4:21559:21674	122238	1	True				
ANR	122331	CallExpression	"memmove ( a -> elements + current , a -> elements + current + 1 , ( a -> num_elements - current ) * sizeof ( void * ) )"		122238	0					
ANR	122332	Callee	memmove		122238	0					
ANR	122333	Identifier	memmove		122238	0					
ANR	122334	ArgumentList	a -> elements + current		122238	1					
ANR	122335	Argument	a -> elements + current		122238	0					
ANR	122336	AdditiveExpression	a -> elements + current		122238	0		+			
ANR	122337	PtrMemberAccess	a -> elements		122238	0					
ANR	122338	Identifier	a		122238	0					
ANR	122339	Identifier	elements		122238	1					
ANR	122340	Identifier	current		122238	1					
ANR	122341	Argument	a -> elements + current + 1		122238	1					
ANR	122342	AdditiveExpression	a -> elements + current + 1		122238	0		+			
ANR	122343	PtrMemberAccess	a -> elements		122238	0					
ANR	122344	Identifier	a		122238	0					
ANR	122345	Identifier	elements		122238	1					
ANR	122346	AdditiveExpression	current + 1		122238	1		+			
ANR	122347	Identifier	current		122238	0					
ANR	122348	PrimaryExpression	1		122238	1					
ANR	122349	Argument	( a -> num_elements - current ) * sizeof ( void * )		122238	2					
ANR	122350	MultiplicativeExpression	( a -> num_elements - current ) * sizeof ( void * )		122238	0		*			
ANR	122351	AdditiveExpression	a -> num_elements - current		122238	0		-			
ANR	122352	PtrMemberAccess	a -> num_elements		122238	0					
ANR	122353	Identifier	a		122238	0					
ANR	122354	Identifier	num_elements		122238	1					
ANR	122355	Identifier	current		122238	1					
ANR	122356	SizeofExpression	sizeof ( void * )		122238	1					
ANR	122357	Sizeof	sizeof		122238	0					
ANR	122358	SizeofOperand	void *		122238	1					
ANR	122359	IfStatement	if ( current <= a -> current )		122238	8					
ANR	122360	Condition	current <= a -> current	957:6:21683:21703	122238	0	True				
ANR	122361	RelationalExpression	current <= a -> current		122238	0		<=			
ANR	122362	Identifier	current		122238	0					
ANR	122363	PtrMemberAccess	a -> current		122238	1					
ANR	122364	Identifier	a		122238	0					
ANR	122365	Identifier	current		122238	1					
ANR	122366	ExpressionStatement	a -> current --	958:4:21710:21723	122238	1	True				
ANR	122367	PostIncDecOperationExpression	a -> current --		122238	0					
ANR	122368	PtrMemberAccess	a -> current		122238	0					
ANR	122369	Identifier	a		122238	0					
ANR	122370	Identifier	current		122238	1					
ANR	122371	IncDec	--		122238	1					
ANR	122372	IfStatement	if ( current < a -> insert )		122238	9					
ANR	122373	Condition	current < a -> insert	960:6:21732:21750	122238	0	True				
ANR	122374	RelationalExpression	current < a -> insert		122238	0		<			
ANR	122375	Identifier	current		122238	0					
ANR	122376	PtrMemberAccess	a -> insert		122238	1					
ANR	122377	Identifier	a		122238	0					
ANR	122378	Identifier	insert		122238	1					
ANR	122379	ExpressionStatement	a -> insert --	961:4:21757:21769	122238	1	True				
ANR	122380	PostIncDecOperationExpression	a -> insert --		122238	0					
ANR	122381	PtrMemberAccess	a -> insert		122238	0					
ANR	122382	Identifier	a		122238	0					
ANR	122383	Identifier	insert		122238	1					
ANR	122384	IncDec	--		122238	1					
ANR	122385	ElseStatement	else		122238	0					
ANR	122386	IfStatement	if ( current == a -> insert )		122238	0					
ANR	122387	Condition	current == a -> insert	962:11:21782:21801	122238	0	True				
ANR	122388	EqualityExpression	current == a -> insert		122238	0		==			
ANR	122389	Identifier	current		122238	0					
ANR	122390	PtrMemberAccess	a -> insert		122238	1					
ANR	122391	Identifier	a		122238	0					
ANR	122392	Identifier	insert		122238	1					
ANR	122393	ExpressionStatement	a -> insert = - 1	963:4:21808:21822	122238	1	True				
ANR	122394	AssignmentExpression	a -> insert = - 1		122238	0		=			
ANR	122395	PtrMemberAccess	a -> insert		122238	0					
ANR	122396	Identifier	a		122238	0					
ANR	122397	Identifier	insert		122238	1					
ANR	122398	UnaryOperationExpression	- 1		122238	1					
ANR	122399	UnaryOperator	-		122238	0					
ANR	122400	PrimaryExpression	1		122238	1					
ANR	122401	ForStatement	for ( i = 0 ; i < a -> num_saved ; i ++ )		122238	10					
ANR	122402	ForInit	i = 0 ;	965:7:21832:21837	122238	0	True				
ANR	122403	AssignmentExpression	i = 0		122238	0		=			
ANR	122404	Identifier	i		122238	0					
ANR	122405	PrimaryExpression	0		122238	1					
ANR	122406	Condition	i < a -> num_saved	965:14:21839:21854	122238	1	True				
ANR	122407	RelationalExpression	i < a -> num_saved		122238	0		<			
ANR	122408	Identifier	i		122238	0					
ANR	122409	PtrMemberAccess	a -> num_saved		122238	1					
ANR	122410	Identifier	a		122238	0					
ANR	122411	Identifier	num_saved		122238	1					
ANR	122412	PostIncDecOperationExpression	i ++	965:32:21857:21860	122238	2	True				
ANR	122413	Identifier	i		122238	0					
ANR	122414	IncDec	++		122238	1					
ANR	122415	IfStatement	if ( current <= a -> saved [ i ] )		122238	3					
ANR	122416	Condition	current <= a -> saved [ i ]	966:8:21871:21892	122238	0	True				
ANR	122417	RelationalExpression	current <= a -> saved [ i ]		122238	0		<=			
ANR	122418	Identifier	current		122238	0					
ANR	122419	ArrayIndexing	a -> saved [ i ]		122238	1					
ANR	122420	PtrMemberAccess	a -> saved		122238	0					
ANR	122421	Identifier	a		122238	0					
ANR	122422	Identifier	saved		122238	1					
ANR	122423	Identifier	i		122238	1					
ANR	122424	ExpressionStatement	a -> saved [ i ] --	967:6:21901:21915	122238	1	True				
ANR	122425	PostIncDecOperationExpression	a -> saved [ i ] --		122238	0					
ANR	122426	ArrayIndexing	a -> saved [ i ]		122238	0					
ANR	122427	PtrMemberAccess	a -> saved		122238	0					
ANR	122428	Identifier	a		122238	0					
ANR	122429	Identifier	saved		122238	1					
ANR	122430	Identifier	i		122238	1					
ANR	122431	IncDec	--		122238	1					
ANR	122432	IfStatement	if ( a -> num_elements <= 1 )		122238	11					
ANR	122433	Condition	a -> num_elements <= 1	969:6:21924:21943	122238	0	True				
ANR	122434	RelationalExpression	a -> num_elements <= 1		122238	0		<=			
ANR	122435	PtrMemberAccess	a -> num_elements		122238	0					
ANR	122436	Identifier	a		122238	0					
ANR	122437	Identifier	num_elements		122238	1					
ANR	122438	PrimaryExpression	1		122238	1					
ANR	122439	ExpressionStatement	a -> unique = 1	970:4:21950:21963	122238	1	True				
ANR	122440	AssignmentExpression	a -> unique = 1		122238	0		=			
ANR	122441	PtrMemberAccess	a -> unique		122238	0					
ANR	122442	Identifier	a		122238	0					
ANR	122443	Identifier	unique		122238	1					
ANR	122444	PrimaryExpression	1		122238	1					
ANR	122445	ReturnStatement	return ( 1 ) ;	972:2:21968:21978	122238	12	True				
ANR	122446	PrimaryExpression	1		122238	0					
ANR	122447	ReturnType	int		122238	1					
ANR	122448	Identifier	cupsArrayRemove		122238	2					
ANR	122449	ParameterList	"cups_array_t * a , void * e"		122238	3					
ANR	122450	Parameter	cups_array_t * a	918:16:20970:20984	122238	0	True				
ANR	122451	ParameterType	cups_array_t *		122238	0					
ANR	122452	Identifier	a		122238	1					
ANR	122453	Parameter	void * e	919:16:21019:21033	122238	1	True				
ANR	122454	ParameterType	void *		122238	0					
ANR	122455	Identifier	e		122238	1					
ANR	122456	CFGEntryNode	ENTRY		122238		True				
ANR	122457	CFGExitNode	EXIT		122238		True				
ANR	122458	Symbol	a		122238						
ANR	122459	Symbol	a -> saved		122238						
ANR	122460	Symbol	a -> elements		122238						
ANR	122461	Symbol	cups_array_find		122238						
ANR	122462	Symbol	e		122238						
ANR	122463	Symbol	a -> num_elements		122238						
ANR	122464	Symbol	* current		122238						
ANR	122465	Symbol	i		122238						
ANR	122466	Symbol	diff		122238						
ANR	122467	Symbol	* * a		122238						
ANR	122468	Symbol	* a		122238						
ANR	122469	Symbol	* a -> elements		122238						
ANR	122470	Symbol	a -> data		122238						
ANR	122471	Symbol	current		122238						
ANR	122472	Symbol	a -> num_saved		122238						
ANR	122473	Symbol	* i		122238						
ANR	122474	Symbol	& diff		122238						
ANR	122475	Symbol	a -> unique		122238						
ANR	122476	Symbol	a -> insert		122238						
ANR	122477	Symbol	a -> current		122238						
ANR	122478	Symbol	a -> freefunc		122238						
ANR	122479	Symbol	* a -> saved		122238						
ANR	122480	Function	cupsArrayRestore	982:0:22111:22457							
ANR	122481	FunctionDef	cupsArrayRestore (cups_array_t * a)		122480	0					
ANR	122482	CompoundStatement		984:0:22202:22457	122480	0					
ANR	122483	IfStatement	if ( ! a )		122480	0					
ANR	122484	Condition	! a	985:6:22210:22211	122480	0	True				
ANR	122485	UnaryOperationExpression	! a		122480	0					
ANR	122486	UnaryOperator	!		122480	0					
ANR	122487	Identifier	a		122480	1					
ANR	122488	ReturnStatement	return ( NULL ) ;	986:4:22218:22231	122480	1	True				
ANR	122489	Identifier	NULL		122480	0					
ANR	122490	IfStatement	if ( a -> num_saved <= 0 )		122480	1					
ANR	122491	Condition	a -> num_saved <= 0	988:6:22240:22256	122480	0	True				
ANR	122492	RelationalExpression	a -> num_saved <= 0		122480	0		<=			
ANR	122493	PtrMemberAccess	a -> num_saved		122480	0					
ANR	122494	Identifier	a		122480	0					
ANR	122495	Identifier	num_saved		122480	1					
ANR	122496	PrimaryExpression	0		122480	1					
ANR	122497	ReturnStatement	return ( NULL ) ;	989:4:22263:22276	122480	1	True				
ANR	122498	Identifier	NULL		122480	0					
ANR	122499	ExpressionStatement	a -> num_saved --	991:2:22281:22296	122480	2	True				
ANR	122500	PostIncDecOperationExpression	a -> num_saved --		122480	0					
ANR	122501	PtrMemberAccess	a -> num_saved		122480	0					
ANR	122502	Identifier	a		122480	0					
ANR	122503	Identifier	num_saved		122480	1					
ANR	122504	IncDec	--		122480	1					
ANR	122505	ExpressionStatement	a -> current = a -> saved [ a -> num_saved ]	992:2:22300:22335	122480	3	True				
ANR	122506	AssignmentExpression	a -> current = a -> saved [ a -> num_saved ]		122480	0		=			
ANR	122507	PtrMemberAccess	a -> current		122480	0					
ANR	122508	Identifier	a		122480	0					
ANR	122509	Identifier	current		122480	1					
ANR	122510	ArrayIndexing	a -> saved [ a -> num_saved ]		122480	1					
ANR	122511	PtrMemberAccess	a -> saved		122480	0					
ANR	122512	Identifier	a		122480	0					
ANR	122513	Identifier	saved		122480	1					
ANR	122514	PtrMemberAccess	a -> num_saved		122480	1					
ANR	122515	Identifier	a		122480	0					
ANR	122516	Identifier	num_saved		122480	1					
ANR	122517	IfStatement	if ( a -> current >= 0 && a -> current < a -> num_elements )		122480	4					
ANR	122518	Condition	a -> current >= 0 && a -> current < a -> num_elements	994:6:22344:22390	122480	0	True				
ANR	122519	AndExpression	a -> current >= 0 && a -> current < a -> num_elements		122480	0		&&			
ANR	122520	RelationalExpression	a -> current >= 0		122480	0		>=			
ANR	122521	PtrMemberAccess	a -> current		122480	0					
ANR	122522	Identifier	a		122480	0					
ANR	122523	Identifier	current		122480	1					
ANR	122524	PrimaryExpression	0		122480	1					
ANR	122525	RelationalExpression	a -> current < a -> num_elements		122480	1		<			
ANR	122526	PtrMemberAccess	a -> current		122480	0					
ANR	122527	Identifier	a		122480	0					
ANR	122528	Identifier	current		122480	1					
ANR	122529	PtrMemberAccess	a -> num_elements		122480	1					
ANR	122530	Identifier	a		122480	0					
ANR	122531	Identifier	num_elements		122480	1					
ANR	122532	ReturnStatement	return ( a -> elements [ a -> current ] ) ;	995:4:22397:22429	122480	1	True				
ANR	122533	ArrayIndexing	a -> elements [ a -> current ]		122480	0					
ANR	122534	PtrMemberAccess	a -> elements		122480	0					
ANR	122535	Identifier	a		122480	0					
ANR	122536	Identifier	elements		122480	1					
ANR	122537	PtrMemberAccess	a -> current		122480	1					
ANR	122538	Identifier	a		122480	0					
ANR	122539	Identifier	current		122480	1					
ANR	122540	ElseStatement	else		122480	0					
ANR	122541	ReturnStatement	return ( NULL ) ;	997:4:22442:22455	122480	0	True				
ANR	122542	Identifier	NULL		122480	0					
ANR	122543	ReturnType	void *		122480	1					
ANR	122544	Identifier	cupsArrayRestore		122480	2					
ANR	122545	ParameterList	cups_array_t * a		122480	3					
ANR	122546	Parameter	cups_array_t * a	983:17:22169:22183	122480	0	True				
ANR	122547	ParameterType	cups_array_t *		122480	0					
ANR	122548	Identifier	a		122480	1					
ANR	122549	CFGEntryNode	ENTRY		122480		True				
ANR	122550	CFGExitNode	EXIT		122480		True				
ANR	122551	Symbol	a		122480						
ANR	122552	Symbol	a -> saved		122480						
ANR	122553	Symbol	a -> elements		122480						
ANR	122554	Symbol	NULL		122480						
ANR	122555	Symbol	a -> num_elements		122480						
ANR	122556	Symbol	* a -> current		122480						
ANR	122557	Symbol	* * a		122480						
ANR	122558	Symbol	* a		122480						
ANR	122559	Symbol	* a -> elements		122480						
ANR	122560	Symbol	a -> num_saved		122480						
ANR	122561	Symbol	a -> current		122480						
ANR	122562	Symbol	* a -> saved		122480						
ANR	122563	Symbol	* a -> num_saved		122480						
ANR	122564	Function	cupsArraySave	1013:0:22846:23095							
ANR	122565	FunctionDef	cupsArraySave (cups_array_t * a)		122564	0					
ANR	122566	CompoundStatement		1015:0:22939:23095	122564	0					
ANR	122567	IfStatement	if ( ! a )		122564	0					
ANR	122568	Condition	! a	1016:6:22947:22948	122564	0	True				
ANR	122569	UnaryOperationExpression	! a		122564	0					
ANR	122570	UnaryOperator	!		122564	0					
ANR	122571	Identifier	a		122564	1					
ANR	122572	ReturnStatement	return ( 0 ) ;	1017:4:22955:22965	122564	1	True				
ANR	122573	PrimaryExpression	0		122564	0					
ANR	122574	IfStatement	if ( a -> num_saved >= _CUPS_MAXSAVE )		122564	1					
ANR	122575	Condition	a -> num_saved >= _CUPS_MAXSAVE	1019:6:22974:23002	122564	0	True				
ANR	122576	RelationalExpression	a -> num_saved >= _CUPS_MAXSAVE		122564	0		>=			
ANR	122577	PtrMemberAccess	a -> num_saved		122564	0					
ANR	122578	Identifier	a		122564	0					
ANR	122579	Identifier	num_saved		122564	1					
ANR	122580	Identifier	_CUPS_MAXSAVE		122564	1					
ANR	122581	ReturnStatement	return ( 0 ) ;	1020:4:23009:23019	122564	1	True				
ANR	122582	PrimaryExpression	0		122564	0					
ANR	122583	ExpressionStatement	a -> saved [ a -> num_saved ] = a -> current	1022:2:23024:23059	122564	2	True				
ANR	122584	AssignmentExpression	a -> saved [ a -> num_saved ] = a -> current		122564	0		=			
ANR	122585	ArrayIndexing	a -> saved [ a -> num_saved ]		122564	0					
ANR	122586	PtrMemberAccess	a -> saved		122564	0					
ANR	122587	Identifier	a		122564	0					
ANR	122588	Identifier	saved		122564	1					
ANR	122589	PtrMemberAccess	a -> num_saved		122564	1					
ANR	122590	Identifier	a		122564	0					
ANR	122591	Identifier	num_saved		122564	1					
ANR	122592	PtrMemberAccess	a -> current		122564	1					
ANR	122593	Identifier	a		122564	0					
ANR	122594	Identifier	current		122564	1					
ANR	122595	ExpressionStatement	a -> num_saved ++	1023:2:23063:23078	122564	3	True				
ANR	122596	PostIncDecOperationExpression	a -> num_saved ++		122564	0					
ANR	122597	PtrMemberAccess	a -> num_saved		122564	0					
ANR	122598	Identifier	a		122564	0					
ANR	122599	Identifier	num_saved		122564	1					
ANR	122600	IncDec	++		122564	1					
ANR	122601	ReturnStatement	return ( 1 ) ;	1025:2:23083:23093	122564	4	True				
ANR	122602	PrimaryExpression	1		122564	0					
ANR	122603	ReturnType	int		122564	1					
ANR	122604	Identifier	cupsArraySave		122564	2					
ANR	122605	ParameterList	cups_array_t * a		122564	3					
ANR	122606	Parameter	cups_array_t * a	1014:14:22905:22919	122564	0	True				
ANR	122607	ParameterType	cups_array_t *		122564	0					
ANR	122608	Identifier	a		122564	1					
ANR	122609	CFGEntryNode	ENTRY		122564		True				
ANR	122610	CFGExitNode	EXIT		122564		True				
ANR	122611	Symbol	a		122564						
ANR	122612	Symbol	a -> saved		122564						
ANR	122613	Symbol	a -> num_saved		122564						
ANR	122614	Symbol	a -> current		122564						
ANR	122615	Symbol	* * a		122564						
ANR	122616	Symbol	* a		122564						
ANR	122617	Symbol	* a -> saved		122564						
ANR	122618	Symbol	* a -> num_saved		122564						
ANR	122619	Symbol	_CUPS_MAXSAVE		122564						
ANR	122620	Function	cupsArrayUserData	1035:0:23202:23343							
ANR	122621	FunctionDef	cupsArrayUserData (cups_array_t * a)		122620	0					
ANR	122622	CompoundStatement		1037:0:23284:23343	122620	0					
ANR	122623	IfStatement	if ( a )		122620	0					
ANR	122624	Condition	a	1038:6:23292:23292	122620	0	True				
ANR	122625	Identifier	a		122620	0					
ANR	122626	ReturnStatement	return ( a -> data ) ;	1039:4:23299:23315	122620	1	True				
ANR	122627	PtrMemberAccess	a -> data		122620	0					
ANR	122628	Identifier	a		122620	0					
ANR	122629	Identifier	data		122620	1					
ANR	122630	ElseStatement	else		122620	0					
ANR	122631	ReturnStatement	return ( NULL ) ;	1041:4:23328:23341	122620	0	True				
ANR	122632	Identifier	NULL		122620	0					
ANR	122633	ReturnType	void *		122620	1					
ANR	122634	Identifier	cupsArrayUserData		122620	2					
ANR	122635	ParameterList	cups_array_t * a		122620	3					
ANR	122636	Parameter	cups_array_t * a	1036:18:23251:23265	122620	0	True				
ANR	122637	ParameterType	cups_array_t *		122620	0					
ANR	122638	Identifier	a		122620	1					
ANR	122639	CFGEntryNode	ENTRY		122620		True				
ANR	122640	CFGExitNode	EXIT		122620		True				
ANR	122641	Symbol	a -> data		122620						
ANR	122642	Symbol	a		122620						
ANR	122643	Symbol	NULL		122620						
ANR	122644	Symbol	* a		122620						
ANR	122645	Function	cups_array_add	1051:0:23454:27223							
ANR	122646	FunctionDef	"cups_array_add (cups_array_t * a , void * e , int insert)"		122645	0					
ANR	122647	CompoundStatement		1055:0:23674:27223	122645	0					
ANR	122648	IdentifierDeclStatement	"int i , current , diff ;"	1056:2:23678:23745	122645	0	True				
ANR	122649	IdentifierDecl	i		122645	0					
ANR	122650	IdentifierDeclType	int		122645	0					
ANR	122651	Identifier	i		122645	1					
ANR	122652	IdentifierDecl	current		122645	1					
ANR	122653	IdentifierDeclType	int		122645	0					
ANR	122654	Identifier	current		122645	1					
ANR	122655	IdentifierDecl	diff		122645	2					
ANR	122656	IdentifierDeclType	int		122645	0					
ANR	122657	Identifier	diff		122645	1					
ANR	122658	ExpressionStatement	"DEBUG_printf ( ( ""7cups_array_add(a=%p, e=%p, insert=%d)"" , a , e , insert ) )"	1061:2:23792:23862	122645	1	True				
ANR	122659	CallExpression	"DEBUG_printf ( ( ""7cups_array_add(a=%p, e=%p, insert=%d)"" , a , e , insert ) )"		122645	0					
ANR	122660	Callee	DEBUG_printf		122645	0					
ANR	122661	Identifier	DEBUG_printf		122645	0					
ANR	122662	ArgumentList	"""7cups_array_add(a=%p, e=%p, insert=%d)"" , a , e , insert"		122645	1					
ANR	122663	Argument	"""7cups_array_add(a=%p, e=%p, insert=%d)"" , a , e , insert"		122645	0					
ANR	122664	Expression	"""7cups_array_add(a=%p, e=%p, insert=%d)"" , a , e , insert"		122645	0					
ANR	122665	PrimaryExpression	"""7cups_array_add(a=%p, e=%p, insert=%d)"""		122645	0					
ANR	122666	Expression	"a , e , insert"		122645	1					
ANR	122667	Identifier	a		122645	0					
ANR	122668	Expression	"e , insert"		122645	1					
ANR	122669	Identifier	e		122645	0					
ANR	122670	Identifier	insert		122645	1					
ANR	122671	IfStatement	if ( a -> num_elements >= a -> alloc_elements )		122645	2					
ANR	122672	Condition	a -> num_elements >= a -> alloc_elements	1067:6:23928:23963	122645	0	True				
ANR	122673	RelationalExpression	a -> num_elements >= a -> alloc_elements		122645	0		>=			
ANR	122674	PtrMemberAccess	a -> num_elements		122645	0					
ANR	122675	Identifier	a		122645	0					
ANR	122676	Identifier	num_elements		122645	1					
ANR	122677	PtrMemberAccess	a -> alloc_elements		122645	1					
ANR	122678	Identifier	a		122645	0					
ANR	122679	Identifier	alloc_elements		122645	1					
ANR	122680	CompoundStatement		22:4:508:518	122645	1					
ANR	122681	IdentifierDeclStatement	void * * temp ;	1075:4:24139:24150	122645	0	True				
ANR	122682	IdentifierDecl	* * temp		122645	0					
ANR	122683	IdentifierDeclType	void * *		122645	0					
ANR	122684	Identifier	temp		122645	1					
ANR	122685	IdentifierDeclStatement	int count ;	1076:4:24183:24193	122645	1	True				
ANR	122686	IdentifierDecl	count		122645	0					
ANR	122687	IdentifierDeclType	int		122645	0					
ANR	122688	Identifier	count		122645	1					
ANR	122689	IfStatement	if ( a -> alloc_elements == 0 )		122645	2					
ANR	122690	Condition	a -> alloc_elements == 0	1079:8:24234:24255	122645	0	True				
ANR	122691	EqualityExpression	a -> alloc_elements == 0		122645	0		==			
ANR	122692	PtrMemberAccess	a -> alloc_elements		122645	0					
ANR	122693	Identifier	a		122645	0					
ANR	122694	Identifier	alloc_elements		122645	1					
ANR	122695	PrimaryExpression	0		122645	1					
ANR	122696	CompoundStatement		26:4:587:587	122645	1					
ANR	122697	ExpressionStatement	count = 16	1081:6:24270:24280	122645	0	True				
ANR	122698	AssignmentExpression	count = 16		122645	0		=			
ANR	122699	Identifier	count		122645	0					
ANR	122700	PrimaryExpression	16		122645	1					
ANR	122701	ExpressionStatement	temp = malloc ( count * sizeof ( void * ) )	1082:6:24288:24326	122645	1	True				
ANR	122702	AssignmentExpression	temp = malloc ( count * sizeof ( void * ) )		122645	0		=			
ANR	122703	Identifier	temp		122645	0					
ANR	122704	CallExpression	malloc ( count * sizeof ( void * ) )		122645	1					
ANR	122705	Callee	malloc		122645	0					
ANR	122706	Identifier	malloc		122645	0					
ANR	122707	ArgumentList	count * sizeof ( void * )		122645	1					
ANR	122708	Argument	count * sizeof ( void * )		122645	0					
ANR	122709	MultiplicativeExpression	count * sizeof ( void * )		122645	0		*			
ANR	122710	Identifier	count		122645	0					
ANR	122711	SizeofExpression	sizeof ( void * )		122645	1					
ANR	122712	Sizeof	sizeof		122645	0					
ANR	122713	SizeofOperand	void *		122645	1					
ANR	122714	ElseStatement	else		122645	0					
ANR	122715	CompoundStatement		31:4:672:672	122645	0					
ANR	122716	IfStatement	if ( a -> alloc_elements < 1024 )		122645	0					
ANR	122717	Condition	a -> alloc_elements < 1024	1086:10:24359:24382	122645	0	True				
ANR	122718	RelationalExpression	a -> alloc_elements < 1024		122645	0		<			
ANR	122719	PtrMemberAccess	a -> alloc_elements		122645	0					
ANR	122720	Identifier	a		122645	0					
ANR	122721	Identifier	alloc_elements		122645	1					
ANR	122722	PrimaryExpression	1024		122645	1					
ANR	122723	ExpressionStatement	count = a -> alloc_elements * 2	1087:8:24393:24422	122645	1	True				
ANR	122724	AssignmentExpression	count = a -> alloc_elements * 2		122645	0		=			
ANR	122725	Identifier	count		122645	0					
ANR	122726	MultiplicativeExpression	a -> alloc_elements * 2		122645	1		*			
ANR	122727	PtrMemberAccess	a -> alloc_elements		122645	0					
ANR	122728	Identifier	a		122645	0					
ANR	122729	Identifier	alloc_elements		122645	1					
ANR	122730	PrimaryExpression	2		122645	1					
ANR	122731	ElseStatement	else		122645	0					
ANR	122732	ExpressionStatement	count = a -> alloc_elements + 1024	1089:8:24443:24475	122645	0	True				
ANR	122733	AssignmentExpression	count = a -> alloc_elements + 1024		122645	0		=			
ANR	122734	Identifier	count		122645	0					
ANR	122735	AdditiveExpression	a -> alloc_elements + 1024		122645	1		+			
ANR	122736	PtrMemberAccess	a -> alloc_elements		122645	0					
ANR	122737	Identifier	a		122645	0					
ANR	122738	Identifier	alloc_elements		122645	1					
ANR	122739	PrimaryExpression	1024		122645	1					
ANR	122740	ExpressionStatement	"temp = realloc ( a -> elements , count * sizeof ( void * ) )"	1091:6:24484:24535	122645	1	True				
ANR	122741	AssignmentExpression	"temp = realloc ( a -> elements , count * sizeof ( void * ) )"		122645	0		=			
ANR	122742	Identifier	temp		122645	0					
ANR	122743	CallExpression	"realloc ( a -> elements , count * sizeof ( void * ) )"		122645	1					
ANR	122744	Callee	realloc		122645	0					
ANR	122745	Identifier	realloc		122645	0					
ANR	122746	ArgumentList	a -> elements		122645	1					
ANR	122747	Argument	a -> elements		122645	0					
ANR	122748	PtrMemberAccess	a -> elements		122645	0					
ANR	122749	Identifier	a		122645	0					
ANR	122750	Identifier	elements		122645	1					
ANR	122751	Argument	count * sizeof ( void * )		122645	1					
ANR	122752	MultiplicativeExpression	count * sizeof ( void * )		122645	0		*			
ANR	122753	Identifier	count		122645	0					
ANR	122754	SizeofExpression	sizeof ( void * )		122645	1					
ANR	122755	Sizeof	sizeof		122645	0					
ANR	122756	SizeofOperand	void *		122645	1					
ANR	122757	ExpressionStatement	"DEBUG_printf ( ( ""9cups_array_add: count=%d"" , count ) )"	1094:4:24548:24598	122645	3	True				
ANR	122758	CallExpression	"DEBUG_printf ( ( ""9cups_array_add: count=%d"" , count ) )"		122645	0					
ANR	122759	Callee	DEBUG_printf		122645	0					
ANR	122760	Identifier	DEBUG_printf		122645	0					
ANR	122761	ArgumentList	"""9cups_array_add: count=%d"" , count"		122645	1					
ANR	122762	Argument	"""9cups_array_add: count=%d"" , count"		122645	0					
ANR	122763	Expression	"""9cups_array_add: count=%d"" , count"		122645	0					
ANR	122764	PrimaryExpression	"""9cups_array_add: count=%d"""		122645	0					
ANR	122765	Identifier	count		122645	1					
ANR	122766	IfStatement	if ( ! temp )		122645	4					
ANR	122767	Condition	! temp	1096:8:24609:24613	122645	0	True				
ANR	122768	UnaryOperationExpression	! temp		122645	0					
ANR	122769	UnaryOperator	!		122645	0					
ANR	122770	Identifier	temp		122645	1					
ANR	122771	CompoundStatement		43:4:945:945	122645	1					
ANR	122772	ExpressionStatement	"DEBUG_puts ( ""9cups_array_add: allocation failed, returning 0"" )"	1098:6:24628:24689	122645	0	True				
ANR	122773	CallExpression	"DEBUG_puts ( ""9cups_array_add: allocation failed, returning 0"" )"		122645	0					
ANR	122774	Callee	DEBUG_puts		122645	0					
ANR	122775	Identifier	DEBUG_puts		122645	0					
ANR	122776	ArgumentList	"""9cups_array_add: allocation failed, returning 0"""		122645	1					
ANR	122777	Argument	"""9cups_array_add: allocation failed, returning 0"""		122645	0					
ANR	122778	PrimaryExpression	"""9cups_array_add: allocation failed, returning 0"""		122645	0					
ANR	122779	ReturnStatement	return ( 0 ) ;	1099:6:24697:24707	122645	1	True				
ANR	122780	PrimaryExpression	0		122645	0					
ANR	122781	ExpressionStatement	a -> alloc_elements = count	1102:4:24720:24745	122645	5	True				
ANR	122782	AssignmentExpression	a -> alloc_elements = count		122645	0		=			
ANR	122783	PtrMemberAccess	a -> alloc_elements		122645	0					
ANR	122784	Identifier	a		122645	0					
ANR	122785	Identifier	alloc_elements		122645	1					
ANR	122786	Identifier	count		122645	1					
ANR	122787	ExpressionStatement	a -> elements = temp	1103:4:24751:24775	122645	6	True				
ANR	122788	AssignmentExpression	a -> elements = temp		122645	0		=			
ANR	122789	PtrMemberAccess	a -> elements		122645	0					
ANR	122790	Identifier	a		122645	0					
ANR	122791	Identifier	elements		122645	1					
ANR	122792	Identifier	temp		122645	1					
ANR	122793	IfStatement	if ( ! a -> num_elements || ! a -> compare )		122645	3					
ANR	122794	Condition	! a -> num_elements || ! a -> compare	1111:6:24936:24966	122645	0	True				
ANR	122795	OrExpression	! a -> num_elements || ! a -> compare		122645	0		||			
ANR	122796	UnaryOperationExpression	! a -> num_elements		122645	0					
ANR	122797	UnaryOperator	!		122645	0					
ANR	122798	PtrMemberAccess	a -> num_elements		122645	1					
ANR	122799	Identifier	a		122645	0					
ANR	122800	Identifier	num_elements		122645	1					
ANR	122801	UnaryOperationExpression	! a -> compare		122645	1					
ANR	122802	UnaryOperator	!		122645	0					
ANR	122803	PtrMemberAccess	a -> compare		122645	1					
ANR	122804	Identifier	a		122645	0					
ANR	122805	Identifier	compare		122645	1					
ANR	122806	CompoundStatement		58:2:1296:1296	122645	1					
ANR	122807	IfStatement	if ( insert )		122645	0					
ANR	122808	Condition	insert	1117:8:25064:25069	122645	0	True				
ANR	122809	Identifier	insert		122645	0					
ANR	122810	ExpressionStatement	current = 0	1118:6:25078:25089	122645	1	True				
ANR	122811	AssignmentExpression	current = 0		122645	0		=			
ANR	122812	Identifier	current		122645	0					
ANR	122813	PrimaryExpression	0		122645	1					
ANR	122814	ElseStatement	else		122645	0					
ANR	122815	ExpressionStatement	current = a -> num_elements	1120:6:25134:25159	122645	0	True				
ANR	122816	AssignmentExpression	current = a -> num_elements		122645	0		=			
ANR	122817	Identifier	current		122645	0					
ANR	122818	PtrMemberAccess	a -> num_elements		122645	1					
ANR	122819	Identifier	a		122645	0					
ANR	122820	Identifier	num_elements		122645	1					
ANR	122821	ElseStatement	else		122645	0					
ANR	122822	CompoundStatement		69:2:1523:1523	122645	0					
ANR	122823	ExpressionStatement	"current = cups_array_find ( a , e , a -> insert , & diff )"	1128:4:25270:25319	122645	0	True				
ANR	122824	AssignmentExpression	"current = cups_array_find ( a , e , a -> insert , & diff )"		122645	0		=			
ANR	122825	Identifier	current		122645	0					
ANR	122826	CallExpression	"cups_array_find ( a , e , a -> insert , & diff )"		122645	1					
ANR	122827	Callee	cups_array_find		122645	0					
ANR	122828	Identifier	cups_array_find		122645	0					
ANR	122829	ArgumentList	a		122645	1					
ANR	122830	Argument	a		122645	0					
ANR	122831	Identifier	a		122645	0					
ANR	122832	Argument	e		122645	1					
ANR	122833	Identifier	e		122645	0					
ANR	122834	Argument	a -> insert		122645	2					
ANR	122835	PtrMemberAccess	a -> insert		122645	0					
ANR	122836	Identifier	a		122645	0					
ANR	122837	Identifier	insert		122645	1					
ANR	122838	Argument	& diff		122645	3					
ANR	122839	UnaryOperationExpression	& diff		122645	0					
ANR	122840	UnaryOperator	&		122645	0					
ANR	122841	Identifier	diff		122645	1					
ANR	122842	IfStatement	if ( diff > 0 )		122645	1					
ANR	122843	Condition	diff > 0	1130:8:25330:25337	122645	0	True				
ANR	122844	RelationalExpression	diff > 0		122645	0		>			
ANR	122845	Identifier	diff		122645	0					
ANR	122846	PrimaryExpression	0		122645	1					
ANR	122847	CompoundStatement		77:4:1669:1669	122645	1					
ANR	122848	ExpressionStatement	current ++	1136:6:25414:25424	122645	0	True				
ANR	122849	PostIncDecOperationExpression	current ++		122645	0					
ANR	122850	Identifier	current		122645	0					
ANR	122851	IncDec	++		122645	1					
ANR	122852	ElseStatement	else		122645	0					
ANR	122853	IfStatement	if ( ! diff )		122645	0					
ANR	122854	Condition	! diff	1138:13:25445:25449	122645	0	True				
ANR	122855	UnaryOperationExpression	! diff		122645	0					
ANR	122856	UnaryOperator	!		122645	0					
ANR	122857	Identifier	diff		122645	1					
ANR	122858	CompoundStatement		85:4:1781:1781	122645	1					
ANR	122859	ExpressionStatement	a -> unique = 0	1145:6:25594:25607	122645	0	True				
ANR	122860	AssignmentExpression	a -> unique = 0		122645	0		=			
ANR	122861	PtrMemberAccess	a -> unique		122645	0					
ANR	122862	Identifier	a		122645	0					
ANR	122863	Identifier	unique		122645	1					
ANR	122864	PrimaryExpression	0		122645	1					
ANR	122865	IfStatement	if ( insert )		122645	1					
ANR	122866	Condition	insert	1147:10:25620:25625	122645	0	True				
ANR	122867	Identifier	insert		122645	0					
ANR	122868	CompoundStatement		94:6:1959:1959	122645	1					
ANR	122869	WhileStatement	"while ( current > 0 && ! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data ) )"		122645	0					
ANR	122870	Condition	"current > 0 && ! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"	1153:8:25699:25814	122645	0	True				
ANR	122871	AndExpression	"current > 0 && ! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"		122645	0		&&			
ANR	122872	RelationalExpression	current > 0		122645	0		>			
ANR	122873	Identifier	current		122645	0					
ANR	122874	PrimaryExpression	0		122645	1					
ANR	122875	UnaryOperationExpression	"! ( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"		122645	1					
ANR	122876	UnaryOperator	!		122645	0					
ANR	122877	CallExpression	"( * ( a -> compare ) ) ( e , a -> elements [ current - 1 ] , a -> data )"		122645	1					
ANR	122878	Callee	* ( a -> compare )		122645	0					
ANR	122879	UnaryOperationExpression	* ( a -> compare )		122645	0					
ANR	122880	UnaryOperator	*		122645	0					
ANR	122881	PtrMemberAccess	a -> compare		122645	1					
ANR	122882	Identifier	a		122645	0					
ANR	122883	Identifier	compare		122645	1					
ANR	122884	ArgumentList	e		122645	1					
ANR	122885	Argument	e		122645	0					
ANR	122886	Identifier	e		122645	0					
ANR	122887	Argument	a -> elements [ current - 1 ]		122645	1					
ANR	122888	ArrayIndexing	a -> elements [ current - 1 ]		122645	0					
ANR	122889	PtrMemberAccess	a -> elements		122645	0					
ANR	122890	Identifier	a		122645	0					
ANR	122891	Identifier	elements		122645	1					
ANR	122892	AdditiveExpression	current - 1		122645	1		-			
ANR	122893	Identifier	current		122645	0					
ANR	122894	PrimaryExpression	1		122645	1					
ANR	122895	Argument	a -> data		122645	2					
ANR	122896	PtrMemberAccess	a -> data		122645	0					
ANR	122897	Identifier	a		122645	0					
ANR	122898	Identifier	data		122645	1					
ANR	122899	ExpressionStatement	current --	1155:10:25827:25837	122645	1	True				
ANR	122900	PostIncDecOperationExpression	current --		122645	0					
ANR	122901	Identifier	current		122645	0					
ANR	122902	IncDec	--		122645	1					
ANR	122903	ElseStatement	else		122645	0					
ANR	122904	CompoundStatement		104:6:2189:2189	122645	0					
ANR	122905	DoStatement	do		122645	0					
ANR	122906	CompoundStatement		110:1:2245:2245	122645	0					
ANR	122907	ExpressionStatement	current ++	1165:10:25932:25942	122645	0	True				
ANR	122908	PostIncDecOperationExpression	current ++		122645	0					
ANR	122909	Identifier	current		122645	0					
ANR	122910	IncDec	++		122645	1					
ANR	122911	Condition	"current < a -> num_elements && ! ( * ( a -> compare ) ) ( e , a -> elements [ current ] , a -> data )"	1167:8:25955:26048	122645	1	True				
ANR	122912	AndExpression	"current < a -> num_elements && ! ( * ( a -> compare ) ) ( e , a -> elements [ current ] , a -> data )"		122645	0		&&			
ANR	122913	RelationalExpression	current < a -> num_elements		122645	0		<			
ANR	122914	Identifier	current		122645	0					
ANR	122915	PtrMemberAccess	a -> num_elements		122645	1					
ANR	122916	Identifier	a		122645	0					
ANR	122917	Identifier	num_elements		122645	1					
ANR	122918	UnaryOperationExpression	"! ( * ( a -> compare ) ) ( e , a -> elements [ current ] , a -> data )"		122645	1					
ANR	122919	UnaryOperator	!		122645	0					
ANR	122920	CallExpression	"( * ( a -> compare ) ) ( e , a -> elements [ current ] , a -> data )"		122645	1					
ANR	122921	Callee	* ( a -> compare )		122645	0					
ANR	122922	UnaryOperationExpression	* ( a -> compare )		122645	0					
ANR	122923	UnaryOperator	*		122645	0					
ANR	122924	PtrMemberAccess	a -> compare		122645	1					
ANR	122925	Identifier	a		122645	0					
ANR	122926	Identifier	compare		122645	1					
ANR	122927	ArgumentList	e		122645	1					
ANR	122928	Argument	e		122645	0					
ANR	122929	Identifier	e		122645	0					
ANR	122930	Argument	a -> elements [ current ]		122645	1					
ANR	122931	ArrayIndexing	a -> elements [ current ]		122645	0					
ANR	122932	PtrMemberAccess	a -> elements		122645	0					
ANR	122933	Identifier	a		122645	0					
ANR	122934	Identifier	elements		122645	1					
ANR	122935	Identifier	current		122645	1					
ANR	122936	Argument	a -> data		122645	2					
ANR	122937	PtrMemberAccess	a -> data		122645	0					
ANR	122938	Identifier	a		122645	0					
ANR	122939	Identifier	data		122645	1					
ANR	122940	IfStatement	if ( current < a -> num_elements )		122645	4					
ANR	122941	Condition	current < a -> num_elements	1177:6:26123:26147	122645	0	True				
ANR	122942	RelationalExpression	current < a -> num_elements		122645	0		<			
ANR	122943	Identifier	current		122645	0					
ANR	122944	PtrMemberAccess	a -> num_elements		122645	1					
ANR	122945	Identifier	a		122645	0					
ANR	122946	Identifier	num_elements		122645	1					
ANR	122947	CompoundStatement		124:2:2477:2477	122645	1					
ANR	122948	ExpressionStatement	"memmove ( a -> elements + current + 1 , a -> elements + current , ( a -> num_elements - current ) * sizeof ( void * ) )"	1183:4:26215:26330	122645	0	True				
ANR	122949	CallExpression	"memmove ( a -> elements + current + 1 , a -> elements + current , ( a -> num_elements - current ) * sizeof ( void * ) )"		122645	0					
ANR	122950	Callee	memmove		122645	0					
ANR	122951	Identifier	memmove		122645	0					
ANR	122952	ArgumentList	a -> elements + current + 1		122645	1					
ANR	122953	Argument	a -> elements + current + 1		122645	0					
ANR	122954	AdditiveExpression	a -> elements + current + 1		122645	0		+			
ANR	122955	PtrMemberAccess	a -> elements		122645	0					
ANR	122956	Identifier	a		122645	0					
ANR	122957	Identifier	elements		122645	1					
ANR	122958	AdditiveExpression	current + 1		122645	1		+			
ANR	122959	Identifier	current		122645	0					
ANR	122960	PrimaryExpression	1		122645	1					
ANR	122961	Argument	a -> elements + current		122645	1					
ANR	122962	AdditiveExpression	a -> elements + current		122645	0		+			
ANR	122963	PtrMemberAccess	a -> elements		122645	0					
ANR	122964	Identifier	a		122645	0					
ANR	122965	Identifier	elements		122645	1					
ANR	122966	Identifier	current		122645	1					
ANR	122967	Argument	( a -> num_elements - current ) * sizeof ( void * )		122645	2					
ANR	122968	MultiplicativeExpression	( a -> num_elements - current ) * sizeof ( void * )		122645	0		*			
ANR	122969	AdditiveExpression	a -> num_elements - current		122645	0		-			
ANR	122970	PtrMemberAccess	a -> num_elements		122645	0					
ANR	122971	Identifier	a		122645	0					
ANR	122972	Identifier	num_elements		122645	1					
ANR	122973	Identifier	current		122645	1					
ANR	122974	SizeofExpression	sizeof ( void * )		122645	1					
ANR	122975	Sizeof	sizeof		122645	0					
ANR	122976	SizeofOperand	void *		122645	1					
ANR	122977	IfStatement	if ( a -> current >= current )		122645	1					
ANR	122978	Condition	a -> current >= current	1186:8:26341:26361	122645	0	True				
ANR	122979	RelationalExpression	a -> current >= current		122645	0		>=			
ANR	122980	PtrMemberAccess	a -> current		122645	0					
ANR	122981	Identifier	a		122645	0					
ANR	122982	Identifier	current		122645	1					
ANR	122983	Identifier	current		122645	1					
ANR	122984	ExpressionStatement	a -> current ++	1187:6:26370:26383	122645	1	True				
ANR	122985	PostIncDecOperationExpression	a -> current ++		122645	0					
ANR	122986	PtrMemberAccess	a -> current		122645	0					
ANR	122987	Identifier	a		122645	0					
ANR	122988	Identifier	current		122645	1					
ANR	122989	IncDec	++		122645	1					
ANR	122990	ForStatement	for ( i = 0 ; i < a -> num_saved ; i ++ )		122645	2					
ANR	122991	ForInit	i = 0 ;	1189:9:26395:26400	122645	0	True				
ANR	122992	AssignmentExpression	i = 0		122645	0		=			
ANR	122993	Identifier	i		122645	0					
ANR	122994	PrimaryExpression	0		122645	1					
ANR	122995	Condition	i < a -> num_saved	1189:16:26402:26417	122645	1	True				
ANR	122996	RelationalExpression	i < a -> num_saved		122645	0		<			
ANR	122997	Identifier	i		122645	0					
ANR	122998	PtrMemberAccess	a -> num_saved		122645	1					
ANR	122999	Identifier	a		122645	0					
ANR	123000	Identifier	num_saved		122645	1					
ANR	123001	PostIncDecOperationExpression	i ++	1189:34:26420:26423	122645	2	True				
ANR	123002	Identifier	i		122645	0					
ANR	123003	IncDec	++		122645	1					
ANR	123004	IfStatement	if ( a -> saved [ i ] >= current )		122645	3					
ANR	123005	Condition	a -> saved [ i ] >= current	1190:10:26436:26457	122645	0	True				
ANR	123006	RelationalExpression	a -> saved [ i ] >= current		122645	0		>=			
ANR	123007	ArrayIndexing	a -> saved [ i ]		122645	0					
ANR	123008	PtrMemberAccess	a -> saved		122645	0					
ANR	123009	Identifier	a		122645	0					
ANR	123010	Identifier	saved		122645	1					
ANR	123011	Identifier	i		122645	1					
ANR	123012	Identifier	current		122645	1					
ANR	123013	ExpressionStatement	a -> saved [ i ] ++	1191:1:26461:26475	122645	1	True				
ANR	123014	PostIncDecOperationExpression	a -> saved [ i ] ++		122645	0					
ANR	123015	ArrayIndexing	a -> saved [ i ]		122645	0					
ANR	123016	PtrMemberAccess	a -> saved		122645	0					
ANR	123017	Identifier	a		122645	0					
ANR	123018	Identifier	saved		122645	1					
ANR	123019	Identifier	i		122645	1					
ANR	123020	IncDec	++		122645	1					
ANR	123021	ExpressionStatement	"DEBUG_printf ( ( ""9cups_array_add: insert element at index %d..."" , current ) )"	1193:4:26482:26555	122645	3	True				
ANR	123022	CallExpression	"DEBUG_printf ( ( ""9cups_array_add: insert element at index %d..."" , current ) )"		122645	0					
ANR	123023	Callee	DEBUG_printf		122645	0					
ANR	123024	Identifier	DEBUG_printf		122645	0					
ANR	123025	ArgumentList	"""9cups_array_add: insert element at index %d..."" , current"		122645	1					
ANR	123026	Argument	"""9cups_array_add: insert element at index %d..."" , current"		122645	0					
ANR	123027	Expression	"""9cups_array_add: insert element at index %d..."" , current"		122645	0					
ANR	123028	PrimaryExpression	"""9cups_array_add: insert element at index %d..."""		122645	0					
ANR	123029	Identifier	current		122645	1					
ANR	123030	ElseStatement	else		122645	0					
ANR	123031	ExpressionStatement	"DEBUG_printf ( ( ""9cups_array_add: append element at %d..."" , current ) )"	1197:4:26585:26652	122645	0	True				
ANR	123032	CallExpression	"DEBUG_printf ( ( ""9cups_array_add: append element at %d..."" , current ) )"		122645	0					
ANR	123033	Callee	DEBUG_printf		122645	0					
ANR	123034	Identifier	DEBUG_printf		122645	0					
ANR	123035	ArgumentList	"""9cups_array_add: append element at %d..."" , current"		122645	1					
ANR	123036	Argument	"""9cups_array_add: append element at %d..."" , current"		122645	0					
ANR	123037	Expression	"""9cups_array_add: append element at %d..."" , current"		122645	0					
ANR	123038	PrimaryExpression	"""9cups_array_add: append element at %d..."""		122645	0					
ANR	123039	Identifier	current		122645	1					
ANR	123040	IfStatement	if ( a -> copyfunc )		122645	5					
ANR	123041	Condition	a -> copyfunc	1200:6:26680:26690	122645	0	True				
ANR	123042	PtrMemberAccess	a -> copyfunc		122645	0					
ANR	123043	Identifier	a		122645	0					
ANR	123044	Identifier	copyfunc		122645	1					
ANR	123045	CompoundStatement		147:2:3020:3020	122645	1					
ANR	123046	IfStatement	"if ( ( a -> elements [ current ] = ( a -> copyfunc ) ( e , a -> data ) ) == NULL )"		122645	0					
ANR	123047	Condition	"( a -> elements [ current ] = ( a -> copyfunc ) ( e , a -> data ) ) == NULL"	1202:8:26705:26762	122645	0	True				
ANR	123048	EqualityExpression	"( a -> elements [ current ] = ( a -> copyfunc ) ( e , a -> data ) ) == NULL"		122645	0		==			
ANR	123049	AssignmentExpression	"a -> elements [ current ] = ( a -> copyfunc ) ( e , a -> data )"		122645	0		=			
ANR	123050	ArrayIndexing	a -> elements [ current ]		122645	0					
ANR	123051	PtrMemberAccess	a -> elements		122645	0					
ANR	123052	Identifier	a		122645	0					
ANR	123053	Identifier	elements		122645	1					
ANR	123054	Identifier	current		122645	1					
ANR	123055	CallExpression	"( a -> copyfunc ) ( e , a -> data )"		122645	1					
ANR	123056	Callee	a -> copyfunc		122645	0					
ANR	123057	PtrMemberAccess	a -> copyfunc		122645	0					
ANR	123058	Identifier	a		122645	0					
ANR	123059	Identifier	copyfunc		122645	1					
ANR	123060	ArgumentList	e		122645	1					
ANR	123061	Argument	e		122645	0					
ANR	123062	Identifier	e		122645	0					
ANR	123063	Argument	a -> data		122645	1					
ANR	123064	PtrMemberAccess	a -> data		122645	0					
ANR	123065	Identifier	a		122645	0					
ANR	123066	Identifier	data		122645	1					
ANR	123067	Identifier	NULL		122645	1					
ANR	123068	CompoundStatement		149:4:3094:3094	122645	1					
ANR	123069	ExpressionStatement	"DEBUG_puts ( ""8cups_array_add: Copy function returned NULL, returning 0"" )"	1204:6:26777:26848	122645	0	True				
ANR	123070	CallExpression	"DEBUG_puts ( ""8cups_array_add: Copy function returned NULL, returning 0"" )"		122645	0					
ANR	123071	Callee	DEBUG_puts		122645	0					
ANR	123072	Identifier	DEBUG_puts		122645	0					
ANR	123073	ArgumentList	"""8cups_array_add: Copy function returned NULL, returning 0"""		122645	1					
ANR	123074	Argument	"""8cups_array_add: Copy function returned NULL, returning 0"""		122645	0					
ANR	123075	PrimaryExpression	"""8cups_array_add: Copy function returned NULL, returning 0"""		122645	0					
ANR	123076	ReturnStatement	return ( 0 ) ;	1205:6:26856:26866	122645	1	True				
ANR	123077	PrimaryExpression	0		122645	0					
ANR	123078	ElseStatement	else		122645	0					
ANR	123079	ExpressionStatement	a -> elements [ current ] = e	1209:4:26889:26913	122645	0	True				
ANR	123080	AssignmentExpression	a -> elements [ current ] = e		122645	0		=			
ANR	123081	ArrayIndexing	a -> elements [ current ]		122645	0					
ANR	123082	PtrMemberAccess	a -> elements		122645	0					
ANR	123083	Identifier	a		122645	0					
ANR	123084	Identifier	elements		122645	1					
ANR	123085	Identifier	current		122645	1					
ANR	123086	Identifier	e		122645	1					
ANR	123087	ExpressionStatement	a -> num_elements ++	1211:2:26918:26936	122645	6	True				
ANR	123088	PostIncDecOperationExpression	a -> num_elements ++		122645	0					
ANR	123089	PtrMemberAccess	a -> num_elements		122645	0					
ANR	123090	Identifier	a		122645	0					
ANR	123091	Identifier	num_elements		122645	1					
ANR	123092	IncDec	++		122645	1					
ANR	123093	ExpressionStatement	a -> insert = current	1212:2:26940:26959	122645	7	True				
ANR	123094	AssignmentExpression	a -> insert = current		122645	0		=			
ANR	123095	PtrMemberAccess	a -> insert		122645	0					
ANR	123096	Identifier	a		122645	0					
ANR	123097	Identifier	insert		122645	1					
ANR	123098	Identifier	current		122645	1					
ANR	123099	ForStatement	for ( current = 0 ; current < a -> num_elements ; current ++ )		122645	8					
ANR	123100	ForInit	current = 0 ;	1215:7:26982:26993	122645	0	True				
ANR	123101	AssignmentExpression	current = 0		122645	0		=			
ANR	123102	Identifier	current		122645	0					
ANR	123103	PrimaryExpression	0		122645	1					
ANR	123104	Condition	current < a -> num_elements	1215:20:26995:27019	122645	1	True				
ANR	123105	RelationalExpression	current < a -> num_elements		122645	0		<			
ANR	123106	Identifier	current		122645	0					
ANR	123107	PtrMemberAccess	a -> num_elements		122645	1					
ANR	123108	Identifier	a		122645	0					
ANR	123109	Identifier	num_elements		122645	1					
ANR	123110	PostIncDecOperationExpression	current ++	1215:47:27022:27031	122645	2	True				
ANR	123111	Identifier	current		122645	0					
ANR	123112	IncDec	++		122645	1					
ANR	123113	ExpressionStatement	"DEBUG_printf ( ( ""9cups_array_add: a->elements[%d]=%p"" , current , a -> elements [ current ] ) )"	1216:4:27038:27140	122645	3	True				
ANR	123114	CallExpression	"DEBUG_printf ( ( ""9cups_array_add: a->elements[%d]=%p"" , current , a -> elements [ current ] ) )"		122645	0					
ANR	123115	Callee	DEBUG_printf		122645	0					
ANR	123116	Identifier	DEBUG_printf		122645	0					
ANR	123117	ArgumentList	"""9cups_array_add: a->elements[%d]=%p"" , current , a -> elements [ current ]"		122645	1					
ANR	123118	Argument	"""9cups_array_add: a->elements[%d]=%p"" , current , a -> elements [ current ]"		122645	0					
ANR	123119	Expression	"""9cups_array_add: a->elements[%d]=%p"" , current , a -> elements [ current ]"		122645	0					
ANR	123120	PrimaryExpression	"""9cups_array_add: a->elements[%d]=%p"""		122645	0					
ANR	123121	Expression	"current , a -> elements [ current ]"		122645	1					
ANR	123122	Identifier	current		122645	0					
ANR	123123	ArrayIndexing	a -> elements [ current ]		122645	1					
ANR	123124	PtrMemberAccess	a -> elements		122645	0					
ANR	123125	Identifier	a		122645	0					
ANR	123126	Identifier	elements		122645	1					
ANR	123127	Identifier	current		122645	1					
ANR	123128	ExpressionStatement	"DEBUG_puts ( ""9cups_array_add: returning 1"" )"	1220:2:27164:27206	122645	9	True				
ANR	123129	CallExpression	"DEBUG_puts ( ""9cups_array_add: returning 1"" )"		122645	0					
ANR	123130	Callee	DEBUG_puts		122645	0					
ANR	123131	Identifier	DEBUG_puts		122645	0					
ANR	123132	ArgumentList	"""9cups_array_add: returning 1"""		122645	1					
ANR	123133	Argument	"""9cups_array_add: returning 1"""		122645	0					
ANR	123134	PrimaryExpression	"""9cups_array_add: returning 1"""		122645	0					
ANR	123135	ReturnStatement	return ( 1 ) ;	1222:2:27211:27221	122645	10	True				
ANR	123136	PrimaryExpression	1		122645	0					
ANR	123137	ReturnType	static int		122645	1					
ANR	123138	Identifier	cups_array_add		122645	2					
ANR	123139	ParameterList	"cups_array_t * a , void * e , int insert"		122645	3					
ANR	123140	Parameter	cups_array_t * a	1052:15:23520:23534	122645	0	True				
ANR	123141	ParameterType	cups_array_t *		122645	0					
ANR	123142	Identifier	a		122645	1					
ANR	123143	Parameter	void * e	1053:15:23569:23583	122645	1	True				
ANR	123144	ParameterType	void *		122645	0					
ANR	123145	Identifier	e		122645	1					
ANR	123146	Parameter	int insert	1054:8:23620:23638	122645	2	True				
ANR	123147	ParameterType	int		122645	0					
ANR	123148	Identifier	insert		122645	1					
ANR	123149	CFGEntryNode	ENTRY		122645		True				
ANR	123150	CFGExitNode	EXIT		122645		True				
ANR	123151	Symbol	cups_array_find		122645						
ANR	123152	Symbol	* current		122645						
ANR	123153	Symbol	insert		122645						
ANR	123154	Symbol	realloc		122645						
ANR	123155	Symbol	a -> copyfunc		122645						
ANR	123156	Symbol	* a -> elements		122645						
ANR	123157	Symbol	current		122645						
ANR	123158	Symbol	a -> num_saved		122645						
ANR	123159	Symbol	a -> insert		122645						
ANR	123160	Symbol	a -> current		122645						
ANR	123161	Symbol	a		122645						
ANR	123162	Symbol	malloc		122645						
ANR	123163	Symbol	a -> saved		122645						
ANR	123164	Symbol	temp		122645						
ANR	123165	Symbol	a -> elements		122645						
ANR	123166	Symbol	NULL		122645						
ANR	123167	Symbol	e		122645						
ANR	123168	Symbol	a -> num_elements		122645						
ANR	123169	Symbol	count		122645						
ANR	123170	Symbol	* ( a -> compare )		122645						
ANR	123171	Symbol	i		122645						
ANR	123172	Symbol	diff		122645						
ANR	123173	Symbol	* * a		122645						
ANR	123174	Symbol	* a		122645						
ANR	123175	Symbol	a -> data		122645						
ANR	123176	Symbol	a -> alloc_elements		122645						
ANR	123177	Symbol	* i		122645						
ANR	123178	Symbol	& diff		122645						
ANR	123179	Symbol	a -> unique		122645						
ANR	123180	Symbol	* a -> compare		122645						
ANR	123181	Symbol	a -> compare		122645						
ANR	123182	Symbol	* a -> saved		122645						
ANR	123183	Function	cups_array_find	1230:0:27290:29948							
ANR	123184	FunctionDef	"cups_array_find (cups_array_t * a , void * e , int prev , int * rdiff)"		123183	0					
ANR	123185	CompoundStatement		1235:0:27521:29948	123183	0					
ANR	123186	IdentifierDeclStatement	"int left , right , current , diff ;"	1236:2:27525:27641	123183	0	True				
ANR	123187	IdentifierDecl	left		123183	0					
ANR	123188	IdentifierDeclType	int		123183	0					
ANR	123189	Identifier	left		123183	1					
ANR	123190	IdentifierDecl	right		123183	1					
ANR	123191	IdentifierDeclType	int		123183	0					
ANR	123192	Identifier	right		123183	1					
ANR	123193	IdentifierDecl	current		123183	2					
ANR	123194	IdentifierDeclType	int		123183	0					
ANR	123195	Identifier	current		123183	1					
ANR	123196	IdentifierDecl	diff		123183	3					
ANR	123197	IdentifierDeclType	int		123183	0					
ANR	123198	Identifier	diff		123183	1					
ANR	123199	ExpressionStatement	"DEBUG_printf ( ( ""7cups_array_find(a=%p, e=%p, prev=%d, rdiff=%p)"" , a , e , prev , rdiff ) )"	1242:2:27688:27788	123183	1	True				
ANR	123200	CallExpression	"DEBUG_printf ( ( ""7cups_array_find(a=%p, e=%p, prev=%d, rdiff=%p)"" , a , e , prev , rdiff ) )"		123183	0					
ANR	123201	Callee	DEBUG_printf		123183	0					
ANR	123202	Identifier	DEBUG_printf		123183	0					
ANR	123203	ArgumentList	"""7cups_array_find(a=%p, e=%p, prev=%d, rdiff=%p)"" , a , e , prev , rdiff"		123183	1					
ANR	123204	Argument	"""7cups_array_find(a=%p, e=%p, prev=%d, rdiff=%p)"" , a , e , prev , rdiff"		123183	0					
ANR	123205	Expression	"""7cups_array_find(a=%p, e=%p, prev=%d, rdiff=%p)"" , a , e , prev , rdiff"		123183	0					
ANR	123206	PrimaryExpression	"""7cups_array_find(a=%p, e=%p, prev=%d, rdiff=%p)"""		123183	0					
ANR	123207	Expression	"a , e , prev , rdiff"		123183	1					
ANR	123208	Identifier	a		123183	0					
ANR	123209	Expression	"e , prev , rdiff"		123183	1					
ANR	123210	Identifier	e		123183	0					
ANR	123211	Expression	"prev , rdiff"		123183	1					
ANR	123212	Identifier	prev		123183	0					
ANR	123213	Identifier	rdiff		123183	1					
ANR	123214	IfStatement	if ( a -> compare )		123183	2					
ANR	123215	Condition	a -> compare	1245:6:27797:27806	123183	0	True				
ANR	123216	PtrMemberAccess	a -> compare		123183	0					
ANR	123217	Identifier	a		123183	0					
ANR	123218	Identifier	compare		123183	1					
ANR	123219	CompoundStatement		12:2:289:289	123183	1					
ANR	123220	ExpressionStatement	"DEBUG_puts ( ""9cups_array_find: binary search"" )"	1251:4:27875:27920	123183	0	True				
ANR	123221	CallExpression	"DEBUG_puts ( ""9cups_array_find: binary search"" )"		123183	0					
ANR	123222	Callee	DEBUG_puts		123183	0					
ANR	123223	Identifier	DEBUG_puts		123183	0					
ANR	123224	ArgumentList	"""9cups_array_find: binary search"""		123183	1					
ANR	123225	Argument	"""9cups_array_find: binary search"""		123183	0					
ANR	123226	PrimaryExpression	"""9cups_array_find: binary search"""		123183	0					
ANR	123227	IfStatement	if ( prev >= 0 && prev < a -> num_elements )		123183	1					
ANR	123228	Condition	prev >= 0 && prev < a -> num_elements	1253:8:27931:27965	123183	0	True				
ANR	123229	AndExpression	prev >= 0 && prev < a -> num_elements		123183	0		&&			
ANR	123230	RelationalExpression	prev >= 0		123183	0		>=			
ANR	123231	Identifier	prev		123183	0					
ANR	123232	PrimaryExpression	0		123183	1					
ANR	123233	RelationalExpression	prev < a -> num_elements		123183	1		<			
ANR	123234	Identifier	prev		123183	0					
ANR	123235	PtrMemberAccess	a -> num_elements		123183	1					
ANR	123236	Identifier	a		123183	0					
ANR	123237	Identifier	num_elements		123183	1					
ANR	123238	CompoundStatement		20:4:450:450	123183	1					
ANR	123239	IfStatement	"if ( ( diff = ( * ( a -> compare ) ) ( e , a -> elements [ prev ] , a -> data ) ) == 0 || ( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( a -> num_elements - 1 ) ) )"		123183	0					
ANR	123240	Condition	"( diff = ( * ( a -> compare ) ) ( e , a -> elements [ prev ] , a -> data ) ) == 0 || ( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( a -> num_elements - 1 ) )"	1259:10:28053:28199	123183	0	True				
ANR	123241	OrExpression	"( diff = ( * ( a -> compare ) ) ( e , a -> elements [ prev ] , a -> data ) ) == 0 || ( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( a -> num_elements - 1 ) )"		123183	0		||			
ANR	123242	EqualityExpression	"( diff = ( * ( a -> compare ) ) ( e , a -> elements [ prev ] , a -> data ) ) == 0"		123183	0		==			
ANR	123243	AssignmentExpression	"diff = ( * ( a -> compare ) ) ( e , a -> elements [ prev ] , a -> data )"		123183	0		=			
ANR	123244	Identifier	diff		123183	0					
ANR	123245	CallExpression	"( * ( a -> compare ) ) ( e , a -> elements [ prev ] , a -> data )"		123183	1					
ANR	123246	Callee	* ( a -> compare )		123183	0					
ANR	123247	UnaryOperationExpression	* ( a -> compare )		123183	0					
ANR	123248	UnaryOperator	*		123183	0					
ANR	123249	PtrMemberAccess	a -> compare		123183	1					
ANR	123250	Identifier	a		123183	0					
ANR	123251	Identifier	compare		123183	1					
ANR	123252	ArgumentList	e		123183	1					
ANR	123253	Argument	e		123183	0					
ANR	123254	Identifier	e		123183	0					
ANR	123255	Argument	a -> elements [ prev ]		123183	1					
ANR	123256	ArrayIndexing	a -> elements [ prev ]		123183	0					
ANR	123257	PtrMemberAccess	a -> elements		123183	0					
ANR	123258	Identifier	a		123183	0					
ANR	123259	Identifier	elements		123183	1					
ANR	123260	Identifier	prev		123183	1					
ANR	123261	Argument	a -> data		123183	2					
ANR	123262	PtrMemberAccess	a -> data		123183	0					
ANR	123263	Identifier	a		123183	0					
ANR	123264	Identifier	data		123183	1					
ANR	123265	PrimaryExpression	0		123183	1					
ANR	123266	OrExpression	( diff < 0 && prev == 0 ) || ( diff > 0 && prev == ( a -> num_elements - 1 ) )		123183	1		||			
ANR	123267	AndExpression	diff < 0 && prev == 0		123183	0		&&			
ANR	123268	RelationalExpression	diff < 0		123183	0		<			
ANR	123269	Identifier	diff		123183	0					
ANR	123270	PrimaryExpression	0		123183	1					
ANR	123271	EqualityExpression	prev == 0		123183	1		==			
ANR	123272	Identifier	prev		123183	0					
ANR	123273	PrimaryExpression	0		123183	1					
ANR	123274	AndExpression	diff > 0 && prev == ( a -> num_elements - 1 )		123183	1		&&			
ANR	123275	RelationalExpression	diff > 0		123183	0		>			
ANR	123276	Identifier	diff		123183	0					
ANR	123277	PrimaryExpression	0		123183	1					
ANR	123278	EqualityExpression	prev == ( a -> num_elements - 1 )		123183	1		==			
ANR	123279	Identifier	prev		123183	0					
ANR	123280	AdditiveExpression	a -> num_elements - 1		123183	1		-			
ANR	123281	PtrMemberAccess	a -> num_elements		123183	0					
ANR	123282	Identifier	a		123183	0					
ANR	123283	Identifier	num_elements		123183	1					
ANR	123284	PrimaryExpression	1		123183	1					
ANR	123285	CompoundStatement		28:6:686:686	123183	1					
ANR	123286	ExpressionStatement	"DEBUG_printf ( ( ""9cups_array_find: Returning %d, diff=%d"" , prev , diff ) )"	1267:8:28275:28344	123183	0	True				
ANR	123287	CallExpression	"DEBUG_printf ( ( ""9cups_array_find: Returning %d, diff=%d"" , prev , diff ) )"		123183	0					
ANR	123288	Callee	DEBUG_printf		123183	0					
ANR	123289	Identifier	DEBUG_printf		123183	0					
ANR	123290	ArgumentList	"""9cups_array_find: Returning %d, diff=%d"" , prev , diff"		123183	1					
ANR	123291	Argument	"""9cups_array_find: Returning %d, diff=%d"" , prev , diff"		123183	0					
ANR	123292	Expression	"""9cups_array_find: Returning %d, diff=%d"" , prev , diff"		123183	0					
ANR	123293	PrimaryExpression	"""9cups_array_find: Returning %d, diff=%d"""		123183	0					
ANR	123294	Expression	"prev , diff"		123183	1					
ANR	123295	Identifier	prev		123183	0					
ANR	123296	Identifier	diff		123183	1					
ANR	123297	ExpressionStatement	* rdiff = diff	1269:1:28348:28361	123183	1	True				
ANR	123298	AssignmentExpression	* rdiff = diff		123183	0		=			
ANR	123299	UnaryOperationExpression	* rdiff		123183	0					
ANR	123300	UnaryOperator	*		123183	0					
ANR	123301	Identifier	rdiff		123183	1					
ANR	123302	Identifier	diff		123183	1					
ANR	123303	ReturnStatement	return ( prev ) ;	1271:1:28365:28378	123183	2	True				
ANR	123304	Identifier	prev		123183	0					
ANR	123305	ElseStatement	else		123183	0					
ANR	123306	IfStatement	if ( diff < 0 )		123183	0					
ANR	123307	Condition	diff < 0	1273:15:28403:28410	123183	0	True				
ANR	123308	RelationalExpression	diff < 0		123183	0		<			
ANR	123309	Identifier	diff		123183	0					
ANR	123310	PrimaryExpression	0		123183	1					
ANR	123311	CompoundStatement		40:6:897:897	123183	1					
ANR	123312	ExpressionStatement	left = 0	1279:1:28484:28493	123183	0	True				
ANR	123313	AssignmentExpression	left = 0		123183	0		=			
ANR	123314	Identifier	left		123183	0					
ANR	123315	PrimaryExpression	0		123183	1					
ANR	123316	ExpressionStatement	right = prev	1280:1:28496:28508	123183	1	True				
ANR	123317	AssignmentExpression	right = prev		123183	0		=			
ANR	123318	Identifier	right		123183	0					
ANR	123319	Identifier	prev		123183	1					
ANR	123320	ElseStatement	else		123183	0					
ANR	123321	CompoundStatement		49:6:1013:1013	123183	0					
ANR	123322	ExpressionStatement	left = prev	1288:8:28605:28617	123183	0	True				
ANR	123323	AssignmentExpression	left = prev		123183	0		=			
ANR	123324	Identifier	left		123183	0					
ANR	123325	Identifier	prev		123183	1					
ANR	123326	ExpressionStatement	right = a -> num_elements - 1	1289:1:28620:28647	123183	1	True				
ANR	123327	AssignmentExpression	right = a -> num_elements - 1		123183	0		=			
ANR	123328	Identifier	right		123183	0					
ANR	123329	AdditiveExpression	a -> num_elements - 1		123183	1		-			
ANR	123330	PtrMemberAccess	a -> num_elements		123183	0					
ANR	123331	Identifier	a		123183	0					
ANR	123332	Identifier	num_elements		123183	1					
ANR	123333	PrimaryExpression	1		123183	1					
ANR	123334	ElseStatement	else		123183	0					
ANR	123335	CompoundStatement		59:4:1154:1154	123183	0					
ANR	123336	ExpressionStatement	left = 0	1298:6:28740:28749	123183	0	True				
ANR	123337	AssignmentExpression	left = 0		123183	0		=			
ANR	123338	Identifier	left		123183	0					
ANR	123339	PrimaryExpression	0		123183	1					
ANR	123340	ExpressionStatement	right = a -> num_elements - 1	1299:6:28757:28784	123183	1	True				
ANR	123341	AssignmentExpression	right = a -> num_elements - 1		123183	0		=			
ANR	123342	Identifier	right		123183	0					
ANR	123343	AdditiveExpression	a -> num_elements - 1		123183	1		-			
ANR	123344	PtrMemberAccess	a -> num_elements		123183	0					
ANR	123345	Identifier	a		123183	0					
ANR	123346	Identifier	num_elements		123183	1					
ANR	123347	PrimaryExpression	1		123183	1					
ANR	123348	DoStatement	do		123183	2					
ANR	123349	CompoundStatement		69:4:1282:1282	123183	0					
ANR	123350	ExpressionStatement	current = ( left + right ) / 2	1304:6:28812:28840	123183	0	True				
ANR	123351	AssignmentExpression	current = ( left + right ) / 2		123183	0		=			
ANR	123352	Identifier	current		123183	0					
ANR	123353	MultiplicativeExpression	( left + right ) / 2		123183	1		/			
ANR	123354	AdditiveExpression	left + right		123183	0		+			
ANR	123355	Identifier	left		123183	0					
ANR	123356	Identifier	right		123183	1					
ANR	123357	PrimaryExpression	2		123183	1					
ANR	123358	ExpressionStatement	"diff = ( * ( a -> compare ) ) ( e , a -> elements [ current ] , a -> data )"	1305:6:28848:28907	123183	1	True				
ANR	123359	AssignmentExpression	"diff = ( * ( a -> compare ) ) ( e , a -> elements [ current ] , a -> data )"		123183	0		=			
ANR	123360	Identifier	diff		123183	0					
ANR	123361	CallExpression	"( * ( a -> compare ) ) ( e , a -> elements [ current ] , a -> data )"		123183	1					
ANR	123362	Callee	* ( a -> compare )		123183	0					
ANR	123363	UnaryOperationExpression	* ( a -> compare )		123183	0					
ANR	123364	UnaryOperator	*		123183	0					
ANR	123365	PtrMemberAccess	a -> compare		123183	1					
ANR	123366	Identifier	a		123183	0					
ANR	123367	Identifier	compare		123183	1					
ANR	123368	ArgumentList	e		123183	1					
ANR	123369	Argument	e		123183	0					
ANR	123370	Identifier	e		123183	0					
ANR	123371	Argument	a -> elements [ current ]		123183	1					
ANR	123372	ArrayIndexing	a -> elements [ current ]		123183	0					
ANR	123373	PtrMemberAccess	a -> elements		123183	0					
ANR	123374	Identifier	a		123183	0					
ANR	123375	Identifier	elements		123183	1					
ANR	123376	Identifier	current		123183	1					
ANR	123377	Argument	a -> data		123183	2					
ANR	123378	PtrMemberAccess	a -> data		123183	0					
ANR	123379	Identifier	a		123183	0					
ANR	123380	Identifier	data		123183	1					
ANR	123381	ExpressionStatement	"DEBUG_printf ( ( ""9cups_array_find: left=%d, right=%d, current=%d, diff=%d"" , left , right , current , diff ) )"	1307:6:28916:29038	123183	2	True				
ANR	123382	CallExpression	"DEBUG_printf ( ( ""9cups_array_find: left=%d, right=%d, current=%d, diff=%d"" , left , right , current , diff ) )"		123183	0					
ANR	123383	Callee	DEBUG_printf		123183	0					
ANR	123384	Identifier	DEBUG_printf		123183	0					
ANR	123385	ArgumentList	"""9cups_array_find: left=%d, right=%d, current=%d, diff=%d"" , left , right , current , diff"		123183	1					
ANR	123386	Argument	"""9cups_array_find: left=%d, right=%d, current=%d, diff=%d"" , left , right , current , diff"		123183	0					
ANR	123387	Expression	"""9cups_array_find: left=%d, right=%d, current=%d, diff=%d"" , left , right , current , diff"		123183	0					
ANR	123388	PrimaryExpression	"""9cups_array_find: left=%d, right=%d, current=%d, diff=%d"""		123183	0					
ANR	123389	Expression	"left , right , current , diff"		123183	1					
ANR	123390	Identifier	left		123183	0					
ANR	123391	Expression	"right , current , diff"		123183	1					
ANR	123392	Identifier	right		123183	0					
ANR	123393	Expression	"current , diff"		123183	1					
ANR	123394	Identifier	current		123183	0					
ANR	123395	Identifier	diff		123183	1					
ANR	123396	IfStatement	if ( diff == 0 )		123183	3					
ANR	123397	Condition	diff == 0	1310:10:29051:29059	123183	0	True				
ANR	123398	EqualityExpression	diff == 0		123183	0		==			
ANR	123399	Identifier	diff		123183	0					
ANR	123400	PrimaryExpression	0		123183	1					
ANR	123401	BreakStatement	break ;	1311:1:29063:29068	123183	1	True				
ANR	123402	ElseStatement	else		123183	0					
ANR	123403	IfStatement	if ( diff < 0 )		123183	0					
ANR	123404	Condition	diff < 0	1312:15:29085:29092	123183	0	True				
ANR	123405	RelationalExpression	diff < 0		123183	0		<			
ANR	123406	Identifier	diff		123183	0					
ANR	123407	PrimaryExpression	0		123183	1					
ANR	123408	ExpressionStatement	right = current	1313:1:29096:29111	123183	1	True				
ANR	123409	AssignmentExpression	right = current		123183	0		=			
ANR	123410	Identifier	right		123183	0					
ANR	123411	Identifier	current		123183	1					
ANR	123412	ElseStatement	else		123183	0					
ANR	123413	ExpressionStatement	left = current	1315:1:29125:29139	123183	0	True				
ANR	123414	AssignmentExpression	left = current		123183	0		=			
ANR	123415	Identifier	left		123183	0					
ANR	123416	Identifier	current		123183	1					
ANR	123417	Condition	( right - left ) > 1	1317:11:29158:29175	123183	1	True				
ANR	123418	RelationalExpression	( right - left ) > 1		123183	0		>			
ANR	123419	AdditiveExpression	right - left		123183	0		-			
ANR	123420	Identifier	right		123183	0					
ANR	123421	Identifier	left		123183	1					
ANR	123422	PrimaryExpression	1		123183	1					
ANR	123423	IfStatement	if ( diff != 0 )		123183	3					
ANR	123424	Condition	diff != 0	1319:8:29188:29196	123183	0	True				
ANR	123425	EqualityExpression	diff != 0		123183	0		!=			
ANR	123426	Identifier	diff		123183	0					
ANR	123427	PrimaryExpression	0		123183	1					
ANR	123428	CompoundStatement		86:4:1681:1681	123183	1					
ANR	123429	IfStatement	"if ( ( diff = ( * ( a -> compare ) ) ( e , a -> elements [ left ] , a -> data ) ) <= 0 )"		123183	0					
ANR	123430	Condition	"( diff = ( * ( a -> compare ) ) ( e , a -> elements [ left ] , a -> data ) ) <= 0"	1325:10:29275:29334	123183	0	True				
ANR	123431	RelationalExpression	"( diff = ( * ( a -> compare ) ) ( e , a -> elements [ left ] , a -> data ) ) <= 0"		123183	0		<=			
ANR	123432	AssignmentExpression	"diff = ( * ( a -> compare ) ) ( e , a -> elements [ left ] , a -> data )"		123183	0		=			
ANR	123433	Identifier	diff		123183	0					
ANR	123434	CallExpression	"( * ( a -> compare ) ) ( e , a -> elements [ left ] , a -> data )"		123183	1					
ANR	123435	Callee	* ( a -> compare )		123183	0					
ANR	123436	UnaryOperationExpression	* ( a -> compare )		123183	0					
ANR	123437	UnaryOperator	*		123183	0					
ANR	123438	PtrMemberAccess	a -> compare		123183	1					
ANR	123439	Identifier	a		123183	0					
ANR	123440	Identifier	compare		123183	1					
ANR	123441	ArgumentList	e		123183	1					
ANR	123442	Argument	e		123183	0					
ANR	123443	Identifier	e		123183	0					
ANR	123444	Argument	a -> elements [ left ]		123183	1					
ANR	123445	ArrayIndexing	a -> elements [ left ]		123183	0					
ANR	123446	PtrMemberAccess	a -> elements		123183	0					
ANR	123447	Identifier	a		123183	0					
ANR	123448	Identifier	elements		123183	1					
ANR	123449	Identifier	left		123183	1					
ANR	123450	Argument	a -> data		123183	2					
ANR	123451	PtrMemberAccess	a -> data		123183	0					
ANR	123452	Identifier	a		123183	0					
ANR	123453	Identifier	data		123183	1					
ANR	123454	PrimaryExpression	0		123183	1					
ANR	123455	ExpressionStatement	current = left	1326:8:29345:29359	123183	1	True				
ANR	123456	AssignmentExpression	current = left		123183	0		=			
ANR	123457	Identifier	current		123183	0					
ANR	123458	Identifier	left		123183	1					
ANR	123459	ElseStatement	else		123183	0					
ANR	123460	CompoundStatement		94:6:1856:1856	123183	0					
ANR	123461	ExpressionStatement	"diff = ( * ( a -> compare ) ) ( e , a -> elements [ right ] , a -> data )"	1329:8:29388:29445	123183	0	True				
ANR	123462	AssignmentExpression	"diff = ( * ( a -> compare ) ) ( e , a -> elements [ right ] , a -> data )"		123183	0		=			
ANR	123463	Identifier	diff		123183	0					
ANR	123464	CallExpression	"( * ( a -> compare ) ) ( e , a -> elements [ right ] , a -> data )"		123183	1					
ANR	123465	Callee	* ( a -> compare )		123183	0					
ANR	123466	UnaryOperationExpression	* ( a -> compare )		123183	0					
ANR	123467	UnaryOperator	*		123183	0					
ANR	123468	PtrMemberAccess	a -> compare		123183	1					
ANR	123469	Identifier	a		123183	0					
ANR	123470	Identifier	compare		123183	1					
ANR	123471	ArgumentList	e		123183	1					
ANR	123472	Argument	e		123183	0					
ANR	123473	Identifier	e		123183	0					
ANR	123474	Argument	a -> elements [ right ]		123183	1					
ANR	123475	ArrayIndexing	a -> elements [ right ]		123183	0					
ANR	123476	PtrMemberAccess	a -> elements		123183	0					
ANR	123477	Identifier	a		123183	0					
ANR	123478	Identifier	elements		123183	1					
ANR	123479	Identifier	right		123183	1					
ANR	123480	Argument	a -> data		123183	2					
ANR	123481	PtrMemberAccess	a -> data		123183	0					
ANR	123482	Identifier	a		123183	0					
ANR	123483	Identifier	data		123183	1					
ANR	123484	ExpressionStatement	current = right	1330:8:29455:29470	123183	1	True				
ANR	123485	AssignmentExpression	current = right		123183	0		=			
ANR	123486	Identifier	current		123183	0					
ANR	123487	Identifier	right		123183	1					
ANR	123488	ElseStatement	else		123183	0					
ANR	123489	CompoundStatement		101:2:1977:1977	123183	0					
ANR	123490	ExpressionStatement	"DEBUG_puts ( ""9cups_array_find: linear search"" )"	1340:4:29555:29600	123183	0	True				
ANR	123491	CallExpression	"DEBUG_puts ( ""9cups_array_find: linear search"" )"		123183	0					
ANR	123492	Callee	DEBUG_puts		123183	0					
ANR	123493	Identifier	DEBUG_puts		123183	0					
ANR	123494	ArgumentList	"""9cups_array_find: linear search"""		123183	1					
ANR	123495	Argument	"""9cups_array_find: linear search"""		123183	0					
ANR	123496	PrimaryExpression	"""9cups_array_find: linear search"""		123183	0					
ANR	123497	ExpressionStatement	diff = 1	1342:4:29607:29615	123183	1	True				
ANR	123498	AssignmentExpression	diff = 1		123183	0		=			
ANR	123499	Identifier	diff		123183	0					
ANR	123500	PrimaryExpression	1		123183	1					
ANR	123501	ForStatement	for ( current = 0 ; current < a -> num_elements ; current ++ )		123183	2					
ANR	123502	ForInit	current = 0 ;	1344:9:29627:29638	123183	0	True				
ANR	123503	AssignmentExpression	current = 0		123183	0		=			
ANR	123504	Identifier	current		123183	0					
ANR	123505	PrimaryExpression	0		123183	1					
ANR	123506	Condition	current < a -> num_elements	1344:22:29640:29664	123183	1	True				
ANR	123507	RelationalExpression	current < a -> num_elements		123183	0		<			
ANR	123508	Identifier	current		123183	0					
ANR	123509	PtrMemberAccess	a -> num_elements		123183	1					
ANR	123510	Identifier	a		123183	0					
ANR	123511	Identifier	num_elements		123183	1					
ANR	123512	PostIncDecOperationExpression	current ++	1344:49:29667:29676	123183	2	True				
ANR	123513	Identifier	current		123183	0					
ANR	123514	IncDec	++		123183	1					
ANR	123515	IfStatement	if ( a -> elements [ current ] == e )		123183	3					
ANR	123516	Condition	a -> elements [ current ] == e	1345:10:29689:29713	123183	0	True				
ANR	123517	EqualityExpression	a -> elements [ current ] == e		123183	0		==			
ANR	123518	ArrayIndexing	a -> elements [ current ]		123183	0					
ANR	123519	PtrMemberAccess	a -> elements		123183	0					
ANR	123520	Identifier	a		123183	0					
ANR	123521	Identifier	elements		123183	1					
ANR	123522	Identifier	current		123183	1					
ANR	123523	Identifier	e		123183	1					
ANR	123524	CompoundStatement		112:6:2200:2200	123183	1					
ANR	123525	ExpressionStatement	diff = 0	1347:8:29732:29740	123183	0	True				
ANR	123526	AssignmentExpression	diff = 0		123183	0		=			
ANR	123527	Identifier	diff		123183	0					
ANR	123528	PrimaryExpression	0		123183	1					
ANR	123529	BreakStatement	break ;	1348:8:29750:29755	123183	1	True				
ANR	123530	ExpressionStatement	"DEBUG_printf ( ( ""8cups_array_find: Returning %d, diff=%d"" , current , diff ) )"	1356:2:29835:29907	123183	3	True				
ANR	123531	CallExpression	"DEBUG_printf ( ( ""8cups_array_find: Returning %d, diff=%d"" , current , diff ) )"		123183	0					
ANR	123532	Callee	DEBUG_printf		123183	0					
ANR	123533	Identifier	DEBUG_printf		123183	0					
ANR	123534	ArgumentList	"""8cups_array_find: Returning %d, diff=%d"" , current , diff"		123183	1					
ANR	123535	Argument	"""8cups_array_find: Returning %d, diff=%d"" , current , diff"		123183	0					
ANR	123536	Expression	"""8cups_array_find: Returning %d, diff=%d"" , current , diff"		123183	0					
ANR	123537	PrimaryExpression	"""8cups_array_find: Returning %d, diff=%d"""		123183	0					
ANR	123538	Expression	"current , diff"		123183	1					
ANR	123539	Identifier	current		123183	0					
ANR	123540	Identifier	diff		123183	1					
ANR	123541	ExpressionStatement	* rdiff = diff	1358:2:29912:29925	123183	4	True				
ANR	123542	AssignmentExpression	* rdiff = diff		123183	0		=			
ANR	123543	UnaryOperationExpression	* rdiff		123183	0					
ANR	123544	UnaryOperator	*		123183	0					
ANR	123545	Identifier	rdiff		123183	1					
ANR	123546	Identifier	diff		123183	1					
ANR	123547	ReturnStatement	return ( current ) ;	1360:2:29930:29946	123183	5	True				
ANR	123548	Identifier	current		123183	0					
ANR	123549	ReturnType	static int		123183	1					
ANR	123550	Identifier	cups_array_find		123183	2					
ANR	123551	ParameterList	"cups_array_t * a , void * e , int prev , int * rdiff"		123183	3					
ANR	123552	Parameter	cups_array_t * a	1231:16:27345:27359	123183	0	True				
ANR	123553	ParameterType	cups_array_t *		123183	0					
ANR	123554	Identifier	a		123183	1					
ANR	123555	Parameter	void * e	1232:9:27387:27401	123183	1	True				
ANR	123556	ParameterType	void *		123183	0					
ANR	123557	Identifier	e		123183	1					
ANR	123558	Parameter	int prev	1233:2:27424:27440	123183	2	True				
ANR	123559	ParameterType	int		123183	0					
ANR	123560	Identifier	prev		123183	1					
ANR	123561	Parameter	int * rdiff	1234:2:27470:27488	123183	3	True				
ANR	123562	ParameterType	int *		123183	0					
ANR	123563	Identifier	rdiff		123183	1					
ANR	123564	CFGEntryNode	ENTRY		123183		True				
ANR	123565	CFGExitNode	EXIT		123183		True				
ANR	123566	Symbol	a		123183						
ANR	123567	Symbol	rdiff		123183						
ANR	123568	Symbol	a -> elements		123183						
ANR	123569	Symbol	e		123183						
ANR	123570	Symbol	prev		123183						
ANR	123571	Symbol	a -> num_elements		123183						
ANR	123572	Symbol	* ( a -> compare )		123183						
ANR	123573	Symbol	* current		123183						
ANR	123574	Symbol	diff		123183						
ANR	123575	Symbol	* * a		123183						
ANR	123576	Symbol	* prev		123183						
ANR	123577	Symbol	right		123183						
ANR	123578	Symbol	* a		123183						
ANR	123579	Symbol	* a -> elements		123183						
ANR	123580	Symbol	a -> data		123183						
ANR	123581	Symbol	current		123183						
ANR	123582	Symbol	left		123183						
ANR	123583	Symbol	* rdiff		123183						
ANR	123584	Symbol	* a -> compare		123183						
ANR	123585	Symbol	a -> compare		123183						
ANR	123586	Symbol	* left		123183						
ANR	123587	Symbol	* right		123183						
