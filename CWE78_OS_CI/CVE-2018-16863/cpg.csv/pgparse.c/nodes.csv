command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8401507	File	data/converged/CVE-2018-16863_ghostpdl/pgparse.c								
ANR	8401508	Function	hpgl_register_command	29:0:864:1621							
ANR	8401509	FunctionDef	"hpgl_register_command (hpgl_parser_state_t * pgl_parser_state , byte * pindex , const hpgl_command_definition_t * pcmd)"		8401508	0					
ANR	8401510	CompoundStatement		32:0:1015:1621	8401508	0					
ANR	8401511	IdentifierDeclStatement	int index = pgl_parser_state -> hpgl_command_next_index ;	33:4:1021:1074	8401508	0	True				
ANR	8401512	IdentifierDecl	index = pgl_parser_state -> hpgl_command_next_index		8401508	0					
ANR	8401513	IdentifierDeclType	int		8401508	0					
ANR	8401514	Identifier	index		8401508	1					
ANR	8401515	AssignmentExpression	index = pgl_parser_state -> hpgl_command_next_index		8401508	2		=			
ANR	8401516	Identifier	index		8401508	0					
ANR	8401517	PtrMemberAccess	pgl_parser_state -> hpgl_command_next_index		8401508	1					
ANR	8401518	Identifier	pgl_parser_state		8401508	0					
ANR	8401519	Identifier	hpgl_command_next_index		8401508	1					
ANR	8401520	IdentifierDeclStatement	byte prev = * pindex ;	34:4:1080:1099	8401508	1	True				
ANR	8401521	IdentifierDecl	prev = * pindex		8401508	0					
ANR	8401522	IdentifierDeclType	byte		8401508	0					
ANR	8401523	Identifier	prev		8401508	1					
ANR	8401524	AssignmentExpression	prev = * pindex		8401508	2		=			
ANR	8401525	Identifier	prev		8401508	0					
ANR	8401526	UnaryOperationExpression	* pindex		8401508	1					
ANR	8401527	UnaryOperator	*		8401508	0					
ANR	8401528	Identifier	pindex		8401508	1					
ANR	8401529	IfStatement	if ( prev != 0 && prev <= index && pgl_parser_state -> hpgl_command_list [ prev ] == pcmd )		8401508	2					
ANR	8401530	Condition	prev != 0 && prev <= index && pgl_parser_state -> hpgl_command_list [ prev ] == pcmd	36:8:1110:1196	8401508	0	True				
ANR	8401531	AndExpression	prev != 0 && prev <= index && pgl_parser_state -> hpgl_command_list [ prev ] == pcmd		8401508	0		&&			
ANR	8401532	EqualityExpression	prev != 0		8401508	0		!=			
ANR	8401533	Identifier	prev		8401508	0					
ANR	8401534	PrimaryExpression	0		8401508	1					
ANR	8401535	AndExpression	prev <= index && pgl_parser_state -> hpgl_command_list [ prev ] == pcmd		8401508	1		&&			
ANR	8401536	RelationalExpression	prev <= index		8401508	0		<=			
ANR	8401537	Identifier	prev		8401508	0					
ANR	8401538	Identifier	index		8401508	1					
ANR	8401539	EqualityExpression	pgl_parser_state -> hpgl_command_list [ prev ] == pcmd		8401508	1		==			
ANR	8401540	ArrayIndexing	pgl_parser_state -> hpgl_command_list [ prev ]		8401508	0					
ANR	8401541	PtrMemberAccess	pgl_parser_state -> hpgl_command_list		8401508	0					
ANR	8401542	Identifier	pgl_parser_state		8401508	0					
ANR	8401543	Identifier	hpgl_command_list		8401508	1					
ANR	8401544	Identifier	prev		8401508	1					
ANR	8401545	Identifier	pcmd		8401508	1					
ANR	8401546	ExpressionStatement	index = prev	38:8:1207:1219	8401508	1	True				
ANR	8401547	AssignmentExpression	index = prev		8401508	0		=			
ANR	8401548	Identifier	index		8401508	0					
ANR	8401549	Identifier	prev		8401508	1					
ANR	8401550	ElseStatement	else		8401508	0					
ANR	8401551	IfStatement	if ( index != 0 && pgl_parser_state -> hpgl_command_list [ index ] == pcmd )		8401508	0					
ANR	8401552	Condition	index != 0 && pgl_parser_state -> hpgl_command_list [ index ] == pcmd	39:13:1234:1310	8401508	0	True				
ANR	8401553	AndExpression	index != 0 && pgl_parser_state -> hpgl_command_list [ index ] == pcmd		8401508	0		&&			
ANR	8401554	EqualityExpression	index != 0		8401508	0		!=			
ANR	8401555	Identifier	index		8401508	0					
ANR	8401556	PrimaryExpression	0		8401508	1					
ANR	8401557	EqualityExpression	pgl_parser_state -> hpgl_command_list [ index ] == pcmd		8401508	1		==			
ANR	8401558	ArrayIndexing	pgl_parser_state -> hpgl_command_list [ index ]		8401508	0					
ANR	8401559	PtrMemberAccess	pgl_parser_state -> hpgl_command_list		8401508	0					
ANR	8401560	Identifier	pgl_parser_state		8401508	0					
ANR	8401561	Identifier	hpgl_command_list		8401508	1					
ANR	8401562	Identifier	index		8401508	1					
ANR	8401563	Identifier	pcmd		8401508	1					
ANR	8401564	ExpressionStatement		40:67:1312:1312	8401508	1	True				
ANR	8401565	ElseStatement	else		8401508	0					
ANR	8401566	ExpressionStatement	pgl_parser_state -> hpgl_command_list [ pgl_parser_state -> hpgl_command_next_index = ++ index ] = ( hpgl_command_definition_t * ) pcmd	42:8:1331:1557	8401508	0	True				
ANR	8401567	AssignmentExpression	pgl_parser_state -> hpgl_command_list [ pgl_parser_state -> hpgl_command_next_index = ++ index ] = ( hpgl_command_definition_t * ) pcmd		8401508	0		=			
ANR	8401568	ArrayIndexing	pgl_parser_state -> hpgl_command_list [ pgl_parser_state -> hpgl_command_next_index = ++ index ]		8401508	0					
ANR	8401569	PtrMemberAccess	pgl_parser_state -> hpgl_command_list		8401508	0					
ANR	8401570	Identifier	pgl_parser_state		8401508	0					
ANR	8401571	Identifier	hpgl_command_list		8401508	1					
ANR	8401572	AssignmentExpression	pgl_parser_state -> hpgl_command_next_index = ++ index		8401508	1		=			
ANR	8401573	PtrMemberAccess	pgl_parser_state -> hpgl_command_next_index		8401508	0					
ANR	8401574	Identifier	pgl_parser_state		8401508	0					
ANR	8401575	Identifier	hpgl_command_next_index		8401508	1					
ANR	8401576	UnaryExpression	++ index		8401508	1					
ANR	8401577	IncDec	++		8401508	0					
ANR	8401578	Identifier	index		8401508	1					
ANR	8401579	CastExpression	( hpgl_command_definition_t * ) pcmd		8401508	1					
ANR	8401580	CastTarget	hpgl_command_definition_t *		8401508	0					
ANR	8401581	Identifier	pcmd		8401508	1					
ANR	8401582	ExpressionStatement	* pindex = index	46:4:1563:1578	8401508	3	True				
ANR	8401583	AssignmentExpression	* pindex = index		8401508	0		=			
ANR	8401584	UnaryOperationExpression	* pindex		8401508	0					
ANR	8401585	UnaryOperator	*		8401508	0					
ANR	8401586	Identifier	pindex		8401508	1					
ANR	8401587	Identifier	index		8401508	1					
ANR	8401588	ReturnStatement	return ( prev != 0 && prev != index ) ;	47:4:1584:1619	8401508	4	True				
ANR	8401589	AndExpression	prev != 0 && prev != index		8401508	0		&&			
ANR	8401590	EqualityExpression	prev != 0		8401508	0		!=			
ANR	8401591	Identifier	prev		8401508	0					
ANR	8401592	PrimaryExpression	0		8401508	1					
ANR	8401593	EqualityExpression	prev != index		8401508	1		!=			
ANR	8401594	Identifier	prev		8401508	0					
ANR	8401595	Identifier	index		8401508	1					
ANR	8401596	ReturnType	static bool		8401508	1					
ANR	8401597	Identifier	hpgl_register_command		8401508	2					
ANR	8401598	ParameterList	"hpgl_parser_state_t * pgl_parser_state , byte * pindex , const hpgl_command_definition_t * pcmd"		8401508	3					
ANR	8401599	Parameter	hpgl_parser_state_t * pgl_parser_state	30:22:898:935	8401508	0	True				
ANR	8401600	ParameterType	hpgl_parser_state_t *		8401508	0					
ANR	8401601	Identifier	pgl_parser_state		8401508	1					
ANR	8401602	Parameter	byte * pindex	31:22:960:972	8401508	1	True				
ANR	8401603	ParameterType	byte *		8401508	0					
ANR	8401604	Identifier	pindex		8401508	1					
ANR	8401605	Parameter	const hpgl_command_definition_t * pcmd	31:37:975:1012	8401508	2	True				
ANR	8401606	ParameterType	const hpgl_command_definition_t *		8401508	0					
ANR	8401607	Identifier	pcmd		8401508	1					
ANR	8401608	CFGEntryNode	ENTRY		8401508		True				
ANR	8401609	CFGExitNode	EXIT		8401508		True				
ANR	8401610	Symbol	pgl_parser_state -> hpgl_command_next_index		8401508						
ANR	8401611	Symbol	* * pgl_parser_state		8401508						
ANR	8401612	Symbol	pgl_parser_state		8401508						
ANR	8401613	Symbol	prev		8401508						
ANR	8401614	Symbol	* index		8401508						
ANR	8401615	Symbol	index		8401508						
ANR	8401616	Symbol	* pindex		8401508						
ANR	8401617	Symbol	* prev		8401508						
ANR	8401618	Symbol	pgl_parser_state -> hpgl_command_list		8401508						
ANR	8401619	Symbol	* pgl_parser_state -> hpgl_command_list		8401508						
ANR	8401620	Symbol	pindex		8401508						
ANR	8401621	Symbol	* pgl_parser_state		8401508						
ANR	8401622	Symbol	pcmd		8401508						
ANR	8401623	Function	hpgl_define_commands	51:0:1657:2344							
ANR	8401624	FunctionDef	"hpgl_define_commands (const gs_memory_t * mem , const hpgl_named_command_t * pcmds , hpgl_parser_state_t * pgl_parser_state)"		8401623	0					
ANR	8401625	CompoundStatement		55:0:1826:2344	8401623	0					
ANR	8401626	IdentifierDeclStatement	const hpgl_named_command_t * pcmd = pcmds ;	56:4:1832:1872	8401623	0	True				
ANR	8401627	IdentifierDecl	* pcmd = pcmds		8401623	0					
ANR	8401628	IdentifierDeclType	const hpgl_named_command_t *		8401623	0					
ANR	8401629	Identifier	pcmd		8401623	1					
ANR	8401630	AssignmentExpression	* pcmd = pcmds		8401623	2		=			
ANR	8401631	Identifier	pcmds		8401623	0					
ANR	8401632	Identifier	pcmds		8401623	1					
ANR	8401633	ForStatement	for ( ; pcmd -> char1 ; ++ pcmd )		8401623	1					
ANR	8401634	Condition	pcmd -> char1	58:11:1886:1896	8401623	0	True				
ANR	8401635	PtrMemberAccess	pcmd -> char1		8401623	0					
ANR	8401636	Identifier	pcmd		8401623	0					
ANR	8401637	Identifier	char1		8401623	1					
ANR	8401638	UnaryExpression	++ pcmd	58:24:1899:1904	8401623	1	True				
ANR	8401639	IncDec	++		8401623	0					
ANR	8401640	Identifier	pcmd		8401623	1					
ANR	8401641	Statement	if	60:8:1928:1929	8401623	2	True				
ANR	8401642	Statement	(	60:11:1931:1931	8401623	2	True				
ANR	8401643	Statement	hpgl_register_command	62:15:1955:1975	8401623	3	True				
ANR	8401644	Statement	(	62:36:1976:1976	8401623	4	True				
ANR	8401645	Statement	pgl_parser_state	62:37:1977:1992	8401623	5	True				
ANR	8401646	Statement	","	62:53:1993:1993	8401623	6	True				
ANR	8401647	Statement	&	63:37:2032:2032	8401623	7	True				
ANR	8401648	Statement	pgl_parser_state	63:38:2033:2048	8401623	8	True				
ANR	8401649	Statement	->	63:54:2049:2050	8401623	9	True				
ANR	8401650	Statement	hpgl_command_indices	63:56:2051:2070	8401623	10	True				
ANR	8401651	Statement	[	64:37:2109:2109	8401623	11	True				
ANR	8401652	Statement	pcmd	64:38:2110:2113	8401623	12	True				
ANR	8401653	Statement	->	64:42:2114:2115	8401623	13	True				
ANR	8401654	Statement	char1	64:44:2116:2120	8401623	14	True				
ANR	8401655	Statement	-	64:50:2122:2122	8401623	15	True				
ANR	8401656	Statement	'A'	64:52:2124:2126	8401623	16	True				
ANR	8401657	Statement	]	64:55:2127:2127	8401623	17	True				
ANR	8401658	Statement	[	64:56:2128:2128	8401623	18	True				
ANR	8401659	Statement	pcmd	64:57:2129:2132	8401623	19	True				
ANR	8401660	Statement	->	64:61:2133:2134	8401623	20	True				
ANR	8401661	Statement	char2	64:63:2135:2139	8401623	21	True				
ANR	8401662	Statement	-	64:69:2141:2141	8401623	22	True				
ANR	8401663	Statement	'A'	64:71:2143:2145	8401623	23	True				
ANR	8401664	Statement	]	64:74:2146:2146	8401623	24	True				
ANR	8401665	Statement	","	64:75:2147:2147	8401623	25	True				
ANR	8401666	Statement	&	65:37:2186:2186	8401623	26	True				
ANR	8401667	Statement	pcmd	65:38:2187:2190	8401623	27	True				
ANR	8401668	Statement	->	65:42:2191:2192	8401623	28	True				
ANR	8401669	Statement	defn	65:44:2193:2196	8401623	29	True				
ANR	8401670	Statement	)	65:48:2197:2197	8401623	30	True				
ANR	8401671	Statement	)	67:12:2224:2224	8401623	31	True				
ANR	8401672	ExpressionStatement	"dmprintf2 ( mem , ""Redefining command %c%c\\n"" , pcmd -> char1 , pcmd -> char2 )"	68:12:2238:2329	8401623	32	True				
ANR	8401673	CallExpression	"dmprintf2 ( mem , ""Redefining command %c%c\\n"" , pcmd -> char1 , pcmd -> char2 )"		8401623	0					
ANR	8401674	Callee	dmprintf2		8401623	0					
ANR	8401675	Identifier	dmprintf2		8401623	0					
ANR	8401676	ArgumentList	mem		8401623	1					
ANR	8401677	Argument	mem		8401623	0					
ANR	8401678	Identifier	mem		8401623	0					
ANR	8401679	Argument	"""Redefining command %c%c\\n"""		8401623	1					
ANR	8401680	PrimaryExpression	"""Redefining command %c%c\\n"""		8401623	0					
ANR	8401681	Argument	pcmd -> char1		8401623	2					
ANR	8401682	PtrMemberAccess	pcmd -> char1		8401623	0					
ANR	8401683	Identifier	pcmd		8401623	0					
ANR	8401684	Identifier	char1		8401623	1					
ANR	8401685	Argument	pcmd -> char2		8401623	3					
ANR	8401686	PtrMemberAccess	pcmd -> char2		8401623	0					
ANR	8401687	Identifier	pcmd		8401623	0					
ANR	8401688	Identifier	char2		8401623	1					
ANR	8401689	ExpressionStatement		71:4:2342:2342	8401623	33	True				
ANR	8401690	ReturnType	void		8401623	1					
ANR	8401691	Identifier	hpgl_define_commands		8401623	2					
ANR	8401692	ParameterList	"const gs_memory_t * mem , const hpgl_named_command_t * pcmds , hpgl_parser_state_t * pgl_parser_state"		8401623	3					
ANR	8401693	Parameter	const gs_memory_t * mem	52:21:1683:1705	8401623	0	True				
ANR	8401694	ParameterType	const gs_memory_t *		8401623	0					
ANR	8401695	Identifier	mem		8401623	1					
ANR	8401696	Parameter	const hpgl_named_command_t * pcmds	53:21:1729:1762	8401623	1	True				
ANR	8401697	ParameterType	const hpgl_named_command_t *		8401623	0					
ANR	8401698	Identifier	pcmds		8401623	1					
ANR	8401699	Parameter	hpgl_parser_state_t * pgl_parser_state	54:21:1786:1823	8401623	2	True				
ANR	8401700	ParameterType	hpgl_parser_state_t *		8401623	0					
ANR	8401701	Identifier	pgl_parser_state		8401623	1					
ANR	8401702	CFGEntryNode	ENTRY		8401623		True				
ANR	8401703	CFGExitNode	EXIT		8401623		True				
ANR	8401704	Symbol	pcmds		8401623						
ANR	8401705	Symbol	* pcmd		8401623						
ANR	8401706	Symbol	mem		8401623						
ANR	8401707	Symbol	pgl_parser_state		8401623						
ANR	8401708	Symbol	pcmd -> char1		8401623						
ANR	8401709	Symbol	pcmd -> char2		8401623						
ANR	8401710	Symbol	pcmd		8401623						
ANR	8401711	Function	hpgl_process_init	77:0:2439:2541							
ANR	8401712	FunctionDef	hpgl_process_init (hpgl_parser_state_t * pst)		8401711	0					
ANR	8401713	CompoundStatement		79:0:2489:2541	8401711	0					
ANR	8401714	ExpressionStatement	pst -> first_letter = - 1	80:4:2495:2517	8401711	0	True				
ANR	8401715	AssignmentExpression	pst -> first_letter = - 1		8401711	0		=			
ANR	8401716	PtrMemberAccess	pst -> first_letter		8401711	0					
ANR	8401717	Identifier	pst		8401711	0					
ANR	8401718	Identifier	first_letter		8401711	1					
ANR	8401719	UnaryOperationExpression	- 1		8401711	1					
ANR	8401720	UnaryOperator	-		8401711	0					
ANR	8401721	PrimaryExpression	1		8401711	1					
ANR	8401722	ExpressionStatement	pst -> command = 0	81:4:2523:2539	8401711	1	True				
ANR	8401723	AssignmentExpression	pst -> command = 0		8401711	0		=			
ANR	8401724	PtrMemberAccess	pst -> command		8401711	0					
ANR	8401725	Identifier	pst		8401711	0					
ANR	8401726	Identifier	command		8401711	1					
ANR	8401727	PrimaryExpression	0		8401711	1					
ANR	8401728	ReturnType	void		8401711	1					
ANR	8401729	Identifier	hpgl_process_init		8401711	2					
ANR	8401730	ParameterList	hpgl_parser_state_t * pst		8401711	3					
ANR	8401731	Parameter	hpgl_parser_state_t * pst	78:18:2462:2486	8401711	0	True				
ANR	8401732	ParameterType	hpgl_parser_state_t *		8401711	0					
ANR	8401733	Identifier	pst		8401711	1					
ANR	8401734	CFGEntryNode	ENTRY		8401711		True				
ANR	8401735	CFGExitNode	EXIT		8401711		True				
ANR	8401736	Symbol	pst		8401711						
ANR	8401737	Symbol	pst -> first_letter		8401711						
ANR	8401738	Symbol	* pst		8401711						
ANR	8401739	Symbol	pst -> command		8401711						
ANR	8401740	Function	hpgl_process	86:0:2658:7831							
ANR	8401741	FunctionDef	"hpgl_process (hpgl_parser_state_t * pst , hpgl_state_t * pgls , stream_cursor_read * pr)"		8401740	0					
ANR	8401742	CompoundStatement		89:0:2761:7831	8401740	0					
ANR	8401743	IdentifierDeclStatement	const byte * p = pr -> ptr ;	90:4:2767:2790	8401740	0	True				
ANR	8401744	IdentifierDecl	* p = pr -> ptr		8401740	0					
ANR	8401745	IdentifierDeclType	const byte *		8401740	0					
ANR	8401746	Identifier	p		8401740	1					
ANR	8401747	AssignmentExpression	* p = pr -> ptr		8401740	2		=			
ANR	8401748	Identifier	p		8401740	0					
ANR	8401749	PtrMemberAccess	pr -> ptr		8401740	1					
ANR	8401750	Identifier	pr		8401740	0					
ANR	8401751	Identifier	ptr		8401740	1					
ANR	8401752	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	91:4:2796:2826	8401740	1	True				
ANR	8401753	IdentifierDecl	* rlimit = pr -> limit		8401740	0					
ANR	8401754	IdentifierDeclType	const byte *		8401740	0					
ANR	8401755	Identifier	rlimit		8401740	1					
ANR	8401756	AssignmentExpression	* rlimit = pr -> limit		8401740	2		=			
ANR	8401757	Identifier	rlimit		8401740	0					
ANR	8401758	PtrMemberAccess	pr -> limit		8401740	1					
ANR	8401759	Identifier	pr		8401740	0					
ANR	8401760	Identifier	limit		8401740	1					
ANR	8401761	IdentifierDeclStatement	int code = 0 ;	92:4:2832:2844	8401740	2	True				
ANR	8401762	IdentifierDecl	code = 0		8401740	0					
ANR	8401763	IdentifierDeclType	int		8401740	0					
ANR	8401764	Identifier	code		8401740	1					
ANR	8401765	AssignmentExpression	code = 0		8401740	2		=			
ANR	8401766	Identifier	code		8401740	0					
ANR	8401767	PrimaryExpression	0		8401740	1					
ANR	8401768	IdentifierDeclStatement	jmp_buf exit_to_parser ;	93:4:2850:2872	8401740	3	True				
ANR	8401769	IdentifierDecl	exit_to_parser		8401740	0					
ANR	8401770	IdentifierDeclType	jmp_buf		8401740	0					
ANR	8401771	Identifier	exit_to_parser		8401740	1					
ANR	8401772	ExpressionStatement	pst -> exit_to_parser = & exit_to_parser	99:4:3073:3110	8401740	4	True				
ANR	8401773	AssignmentExpression	pst -> exit_to_parser = & exit_to_parser		8401740	0		=			
ANR	8401774	PtrMemberAccess	pst -> exit_to_parser		8401740	0					
ANR	8401775	Identifier	pst		8401740	0					
ANR	8401776	Identifier	exit_to_parser		8401740	1					
ANR	8401777	UnaryOperationExpression	& exit_to_parser		8401740	1					
ANR	8401778	UnaryOperator	&		8401740	0					
ANR	8401779	Identifier	exit_to_parser		8401740	1					
ANR	8401780	ExpressionStatement	pst -> source . limit = rlimit	101:4:3117:3143	8401740	5	True				
ANR	8401781	AssignmentExpression	pst -> source . limit = rlimit		8401740	0		=			
ANR	8401782	MemberAccess	pst -> source . limit		8401740	0					
ANR	8401783	PtrMemberAccess	pst -> source		8401740	0					
ANR	8401784	Identifier	pst		8401740	0					
ANR	8401785	Identifier	source		8401740	1					
ANR	8401786	Identifier	limit		8401740	1					
ANR	8401787	Identifier	rlimit		8401740	1					
ANR	8401788	ExpressionStatement	code = setjmp ( * ( pst -> exit_to_parser ) )	104:4:3270:3307	8401740	6	True				
ANR	8401789	AssignmentExpression	code = setjmp ( * ( pst -> exit_to_parser ) )		8401740	0		=			
ANR	8401790	Identifier	code		8401740	0					
ANR	8401791	CallExpression	setjmp ( * ( pst -> exit_to_parser ) )		8401740	1					
ANR	8401792	Callee	setjmp		8401740	0					
ANR	8401793	Identifier	setjmp		8401740	0					
ANR	8401794	ArgumentList	* ( pst -> exit_to_parser )		8401740	1					
ANR	8401795	Argument	* ( pst -> exit_to_parser )		8401740	0					
ANR	8401796	UnaryOperationExpression	* ( pst -> exit_to_parser )		8401740	0					
ANR	8401797	UnaryOperator	*		8401740	0					
ANR	8401798	PtrMemberAccess	pst -> exit_to_parser		8401740	1					
ANR	8401799	Identifier	pst		8401740	0					
ANR	8401800	Identifier	exit_to_parser		8401740	1					
ANR	8401801	IfStatement	if ( code )		8401740	7					
ANR	8401802	Condition	code	105:8:3317:3320	8401740	0	True				
ANR	8401803	Identifier	code		8401740	0					
ANR	8401804	CompoundStatement		17:14:561:561	8401740	1					
ANR	8401805	ExpressionStatement	pr -> ptr = pst -> source . ptr	108:8:3456:3481	8401740	0	True				
ANR	8401806	AssignmentExpression	pr -> ptr = pst -> source . ptr		8401740	0		=			
ANR	8401807	PtrMemberAccess	pr -> ptr		8401740	0					
ANR	8401808	Identifier	pr		8401740	0					
ANR	8401809	Identifier	ptr		8401740	1					
ANR	8401810	MemberAccess	pst -> source . ptr		8401740	1					
ANR	8401811	PtrMemberAccess	pst -> source		8401740	0					
ANR	8401812	Identifier	pst		8401740	0					
ANR	8401813	Identifier	source		8401740	1					
ANR	8401814	Identifier	ptr		8401740	1					
ANR	8401815	ExpressionStatement	pst -> exit_to_parser = NULL	109:8:3491:3517	8401740	1	True				
ANR	8401816	AssignmentExpression	pst -> exit_to_parser = NULL		8401740	0		=			
ANR	8401817	PtrMemberAccess	pst -> exit_to_parser		8401740	0					
ANR	8401818	Identifier	pst		8401740	0					
ANR	8401819	Identifier	exit_to_parser		8401740	1					
ANR	8401820	Identifier	NULL		8401740	1					
ANR	8401821	IfStatement	if ( code < 0 && code != gs_error_NeedInput )		8401740	2					
ANR	8401822	Condition	code < 0 && code != gs_error_NeedInput	110:12:3531:3568	8401740	0	True				
ANR	8401823	AndExpression	code < 0 && code != gs_error_NeedInput		8401740	0		&&			
ANR	8401824	RelationalExpression	code < 0		8401740	0		<			
ANR	8401825	Identifier	code		8401740	0					
ANR	8401826	PrimaryExpression	0		8401740	1					
ANR	8401827	EqualityExpression	code != gs_error_NeedInput		8401740	1		!=			
ANR	8401828	Identifier	code		8401740	0					
ANR	8401829	Identifier	gs_error_NeedInput		8401740	1					
ANR	8401830	CompoundStatement		22:52:809:809	8401740	1					
ANR	8401831	ExpressionStatement	pst -> command = 0	111:12:3585:3601	8401740	0	True				
ANR	8401832	AssignmentExpression	pst -> command = 0		8401740	0		=			
ANR	8401833	PtrMemberAccess	pst -> command		8401740	0					
ANR	8401834	Identifier	pst		8401740	0					
ANR	8401835	Identifier	command		8401740	1					
ANR	8401836	PrimaryExpression	0		8401740	1					
ANR	8401837	ExpressionStatement	"if_debug0m ( 'i' , pgls -> memory , ""\\n"" )"	112:12:3638:3673	8401740	1	True				
ANR	8401838	CallExpression	"if_debug0m ( 'i' , pgls -> memory , ""\\n"" )"		8401740	0					
ANR	8401839	Callee	if_debug0m		8401740	0					
ANR	8401840	Identifier	if_debug0m		8401740	0					
ANR	8401841	ArgumentList	'i'		8401740	1					
ANR	8401842	Argument	'i'		8401740	0					
ANR	8401843	PrimaryExpression	'i'		8401740	0					
ANR	8401844	Argument	pgls -> memory		8401740	1					
ANR	8401845	PtrMemberAccess	pgls -> memory		8401740	0					
ANR	8401846	Identifier	pgls		8401740	0					
ANR	8401847	Identifier	memory		8401740	1					
ANR	8401848	Argument	"""\\n"""		8401740	2					
ANR	8401849	PrimaryExpression	"""\\n"""		8401740	0					
ANR	8401850	ReturnStatement	return code ;	113:12:3687:3698	8401740	2	True				
ANR	8401851	Identifier	code		8401740	0					
ANR	8401852	ReturnStatement	return 0 ;	115:8:3718:3726	8401740	3	True				
ANR	8401853	PrimaryExpression	0		8401740	0					
ANR	8401854	Label	call :	118:2:3799:3803	8401740	8	True				
ANR	8401855	Identifier	call		8401740	0					
ANR	8401856	IfStatement	if ( pst -> command )		8401740	9					
ANR	8401857	Condition	pst -> command	118:11:3808:3819	8401740	0	True				
ANR	8401858	PtrMemberAccess	pst -> command		8401740	0					
ANR	8401859	Identifier	pst		8401740	0					
ANR	8401860	Identifier	command		8401740	1					
ANR	8401861	CompoundStatement		30:25:1060:1060	8401740	1					
ANR	8401862	ExpressionStatement	pst -> source . ptr = p	119:8:3832:3851	8401740	0	True				
ANR	8401863	AssignmentExpression	pst -> source . ptr = p		8401740	0		=			
ANR	8401864	MemberAccess	pst -> source . ptr		8401740	0					
ANR	8401865	PtrMemberAccess	pst -> source		8401740	0					
ANR	8401866	Identifier	pst		8401740	0					
ANR	8401867	Identifier	source		8401740	1					
ANR	8401868	Identifier	ptr		8401740	1					
ANR	8401869	Identifier	p		8401740	1					
ANR	8401870	ExpressionStatement	pst -> arg . next = 0	120:8:3861:3878	8401740	1	True				
ANR	8401871	AssignmentExpression	pst -> arg . next = 0		8401740	0		=			
ANR	8401872	MemberAccess	pst -> arg . next		8401740	0					
ANR	8401873	PtrMemberAccess	pst -> arg		8401740	0					
ANR	8401874	Identifier	pst		8401740	0					
ANR	8401875	Identifier	arg		8401740	1					
ANR	8401876	Identifier	next		8401740	1					
ANR	8401877	PrimaryExpression	0		8401740	1					
ANR	8401878	ExpressionStatement	"code = ( * pst -> command -> proc ) ( pst , pgls )"	121:8:3888:3928	8401740	2	True				
ANR	8401879	AssignmentExpression	"code = ( * pst -> command -> proc ) ( pst , pgls )"		8401740	0		=			
ANR	8401880	Identifier	code		8401740	0					
ANR	8401881	CallExpression	"( * pst -> command -> proc ) ( pst , pgls )"		8401740	1					
ANR	8401882	Callee	* pst -> command -> proc		8401740	0					
ANR	8401883	UnaryOperationExpression	* pst -> command -> proc		8401740	0					
ANR	8401884	UnaryOperator	*		8401740	0					
ANR	8401885	PtrMemberAccess	pst -> command -> proc		8401740	1					
ANR	8401886	PtrMemberAccess	pst -> command		8401740	0					
ANR	8401887	Identifier	pst		8401740	0					
ANR	8401888	Identifier	command		8401740	1					
ANR	8401889	Identifier	proc		8401740	1					
ANR	8401890	ArgumentList	pst		8401740	1					
ANR	8401891	Argument	pst		8401740	0					
ANR	8401892	Identifier	pst		8401740	0					
ANR	8401893	Argument	pgls		8401740	1					
ANR	8401894	Identifier	pgls		8401740	0					
ANR	8401895	ExpressionStatement	p = pst -> source . ptr	122:8:3938:3957	8401740	3	True				
ANR	8401896	AssignmentExpression	p = pst -> source . ptr		8401740	0		=			
ANR	8401897	Identifier	p		8401740	0					
ANR	8401898	MemberAccess	pst -> source . ptr		8401740	1					
ANR	8401899	PtrMemberAccess	pst -> source		8401740	0					
ANR	8401900	Identifier	pst		8401740	0					
ANR	8401901	Identifier	source		8401740	1					
ANR	8401902	Identifier	ptr		8401740	1					
ANR	8401903	IfStatement	if ( code < 0 && code != gs_error_NeedInput )		8401740	4					
ANR	8401904	Condition	code < 0 && code != gs_error_NeedInput	125:12:4058:4095	8401740	0	True				
ANR	8401905	AndExpression	code < 0 && code != gs_error_NeedInput		8401740	0		&&			
ANR	8401906	RelationalExpression	code < 0		8401740	0		<			
ANR	8401907	Identifier	code		8401740	0					
ANR	8401908	PrimaryExpression	0		8401740	1					
ANR	8401909	EqualityExpression	code != gs_error_NeedInput		8401740	1		!=			
ANR	8401910	Identifier	code		8401740	0					
ANR	8401911	Identifier	gs_error_NeedInput		8401740	1					
ANR	8401912	ExpressionStatement	pst -> command = 0	126:12:4110:4126	8401740	1	True				
ANR	8401913	AssignmentExpression	pst -> command = 0		8401740	0		=			
ANR	8401914	PtrMemberAccess	pst -> command		8401740	0					
ANR	8401915	Identifier	pst		8401740	0					
ANR	8401916	Identifier	command		8401740	1					
ANR	8401917	PrimaryExpression	0		8401740	1					
ANR	8401918	IfStatement	if ( code < 0 )		8401740	5					
ANR	8401919	Condition	code < 0	127:12:4140:4147	8401740	0	True				
ANR	8401920	RelationalExpression	code < 0		8401740	0		<			
ANR	8401921	Identifier	code		8401740	0					
ANR	8401922	PrimaryExpression	0		8401740	1					
ANR	8401923	GotoStatement	goto x ;	128:12:4162:4168	8401740	1	True				
ANR	8401924	Identifier	x		8401740	0					
ANR	8401925	ExpressionStatement	pst -> command = 0	129:8:4178:4194	8401740	6	True				
ANR	8401926	AssignmentExpression	pst -> command = 0		8401740	0		=			
ANR	8401927	PtrMemberAccess	pst -> command		8401740	0					
ANR	8401928	Identifier	pst		8401740	0					
ANR	8401929	Identifier	command		8401740	1					
ANR	8401930	PrimaryExpression	0		8401740	1					
ANR	8401931	ExpressionStatement	"if_debug0m ( 'i' , pgls -> memory , ""\\n"" )"	130:8:4204:4239	8401740	7	True				
ANR	8401932	CallExpression	"if_debug0m ( 'i' , pgls -> memory , ""\\n"" )"		8401740	0					
ANR	8401933	Callee	if_debug0m		8401740	0					
ANR	8401934	Identifier	if_debug0m		8401740	0					
ANR	8401935	ArgumentList	'i'		8401740	1					
ANR	8401936	Argument	'i'		8401740	0					
ANR	8401937	PrimaryExpression	'i'		8401740	0					
ANR	8401938	Argument	pgls -> memory		8401740	1					
ANR	8401939	PtrMemberAccess	pgls -> memory		8401740	0					
ANR	8401940	Identifier	pgls		8401740	0					
ANR	8401941	Identifier	memory		8401740	1					
ANR	8401942	Argument	"""\\n"""		8401740	2					
ANR	8401943	PrimaryExpression	"""\\n"""		8401740	0					
ANR	8401944	WhileStatement	while ( p < rlimit )		8401740	10					
ANR	8401945	Condition	p < rlimit	132:11:4258:4267	8401740	0	True				
ANR	8401946	RelationalExpression	p < rlimit		8401740	0		<			
ANR	8401947	Identifier	p		8401740	0					
ANR	8401948	Identifier	rlimit		8401740	1					
ANR	8401949	CompoundStatement		45:8:1518:1534	8401740	1					
ANR	8401950	IdentifierDeclStatement	byte next = * ++ p ;	133:8:4280:4296	8401740	0	True				
ANR	8401951	IdentifierDecl	next = * ++ p		8401740	0					
ANR	8401952	IdentifierDeclType	byte		8401740	0					
ANR	8401953	Identifier	next		8401740	1					
ANR	8401954	AssignmentExpression	next = * ++ p		8401740	2		=			
ANR	8401955	Identifier	next		8401740	0					
ANR	8401956	UnaryOperationExpression	* ++ p		8401740	1					
ANR	8401957	UnaryOperator	*		8401740	0					
ANR	8401958	UnaryExpression	++ p		8401740	1					
ANR	8401959	IncDec	++		8401740	0					
ANR	8401960	Identifier	p		8401740	1					
ANR	8401961	IfStatement	if ( next >= 'A' && next <= 'Z' )		8401740	1					
ANR	8401962	Condition	next >= 'A' && next <= 'Z'	135:12:4311:4336	8401740	0	True				
ANR	8401963	AndExpression	next >= 'A' && next <= 'Z'		8401740	0		&&			
ANR	8401964	RelationalExpression	next >= 'A'		8401740	0		>=			
ANR	8401965	Identifier	next		8401740	0					
ANR	8401966	PrimaryExpression	'A'		8401740	1					
ANR	8401967	RelationalExpression	next <= 'Z'		8401740	1		<=			
ANR	8401968	Identifier	next		8401740	0					
ANR	8401969	PrimaryExpression	'Z'		8401740	1					
ANR	8401970	ExpressionStatement	next -= 'A'	136:12:4351:4362	8401740	1	True				
ANR	8401971	AssignmentExpression	next -= 'A'		8401740	0		-=			
ANR	8401972	Identifier	next		8401740	0					
ANR	8401973	PrimaryExpression	'A'		8401740	1					
ANR	8401974	ElseStatement	else		8401740	0					
ANR	8401975	IfStatement	if ( next >= 'a' && next <= 'z' )		8401740	0					
ANR	8401976	Condition	next >= 'a' && next <= 'z'	137:17:4381:4406	8401740	0	True				
ANR	8401977	AndExpression	next >= 'a' && next <= 'z'		8401740	0		&&			
ANR	8401978	RelationalExpression	next >= 'a'		8401740	0		>=			
ANR	8401979	Identifier	next		8401740	0					
ANR	8401980	PrimaryExpression	'a'		8401740	1					
ANR	8401981	RelationalExpression	next <= 'z'		8401740	1		<=			
ANR	8401982	Identifier	next		8401740	0					
ANR	8401983	PrimaryExpression	'z'		8401740	1					
ANR	8401984	ExpressionStatement	next -= 'a'	138:12:4421:4432	8401740	1	True				
ANR	8401985	AssignmentExpression	next -= 'a'		8401740	0		-=			
ANR	8401986	Identifier	next		8401740	0					
ANR	8401987	PrimaryExpression	'a'		8401740	1					
ANR	8401988	ElseStatement	else		8401740	0					
ANR	8401989	IfStatement	if ( next == ESC )		8401740	0					
ANR	8401990	Condition	next == ESC	139:17:4451:4461	8401740	0	True				
ANR	8401991	EqualityExpression	next == ESC		8401740	0		==			
ANR	8401992	Identifier	next		8401740	0					
ANR	8401993	Identifier	ESC		8401740	1					
ANR	8401994	CompoundStatement		51:30:1702:1702	8401740	1					
ANR	8401995	ExpressionStatement	-- p	140:12:4478:4481	8401740	0	True				
ANR	8401996	UnaryExpression	-- p		8401740	0					
ANR	8401997	IncDec	--		8401740	0					
ANR	8401998	Identifier	p		8401740	1					
ANR	8401999	ExpressionStatement	pst -> first_letter = - 1	141:12:4495:4517	8401740	1	True				
ANR	8402000	AssignmentExpression	pst -> first_letter = - 1		8401740	0		=			
ANR	8402001	PtrMemberAccess	pst -> first_letter		8401740	0					
ANR	8402002	Identifier	pst		8401740	0					
ANR	8402003	Identifier	first_letter		8401740	1					
ANR	8402004	UnaryOperationExpression	- 1		8401740	1					
ANR	8402005	UnaryOperator	-		8401740	0					
ANR	8402006	PrimaryExpression	1		8401740	1					
ANR	8402007	ExpressionStatement	code = 1	142:12:4531:4539	8401740	2	True				
ANR	8402008	AssignmentExpression	code = 1		8401740	0		=			
ANR	8402009	Identifier	code		8401740	0					
ANR	8402010	PrimaryExpression	1		8401740	1					
ANR	8402011	BreakStatement	break ;	143:12:4553:4558	8401740	3	True				
ANR	8402012	ElseStatement	else		8401740	0					
ANR	8402013	CompoundStatement		56:15:1813:1813	8401740	0					
ANR	8402014	IfStatement	"if ( next > ' ' && next != ',' )"		8401740	0					
ANR	8402015	Condition	"next > ' ' && next != ','"	146:16:4699:4723	8401740	0	True				
ANR	8402016	AndExpression	"next > ' ' && next != ','"		8401740	0		&&			
ANR	8402017	RelationalExpression	next > ' '		8401740	0		>			
ANR	8402018	Identifier	next		8401740	0					
ANR	8402019	PrimaryExpression	' '		8401740	1					
ANR	8402020	EqualityExpression	"next != ','"		8401740	1		!=			
ANR	8402021	Identifier	next		8401740	0					
ANR	8402022	PrimaryExpression	"','"		8401740	1					
ANR	8402023	ExpressionStatement	pst -> first_letter = - 1	147:16:4742:4764	8401740	1	True				
ANR	8402024	AssignmentExpression	pst -> first_letter = - 1		8401740	0		=			
ANR	8402025	PtrMemberAccess	pst -> first_letter		8401740	0					
ANR	8402026	Identifier	pst		8401740	0					
ANR	8402027	Identifier	first_letter		8401740	1					
ANR	8402028	UnaryOperationExpression	- 1		8401740	1					
ANR	8402029	UnaryOperator	-		8401740	0					
ANR	8402030	PrimaryExpression	1		8401740	1					
ANR	8402031	ContinueStatement	continue ;	148:12:4778:4786	8401740	1	True				
ANR	8402032	IfStatement	if ( pst -> first_letter < 0 )		8401740	2					
ANR	8402033	Condition	pst -> first_letter < 0	150:12:4810:4830	8401740	0	True				
ANR	8402034	RelationalExpression	pst -> first_letter < 0		8401740	0		<			
ANR	8402035	PtrMemberAccess	pst -> first_letter		8401740	0					
ANR	8402036	Identifier	pst		8401740	0					
ANR	8402037	Identifier	first_letter		8401740	1					
ANR	8402038	PrimaryExpression	0		8401740	1					
ANR	8402039	CompoundStatement		62:35:2071:2071	8401740	1					
ANR	8402040	ExpressionStatement	pst -> first_letter = next	151:12:4847:4871	8401740	0	True				
ANR	8402041	AssignmentExpression	pst -> first_letter = next		8401740	0		=			
ANR	8402042	PtrMemberAccess	pst -> first_letter		8401740	0					
ANR	8402043	Identifier	pst		8401740	0					
ANR	8402044	Identifier	first_letter		8401740	1					
ANR	8402045	Identifier	next		8401740	1					
ANR	8402046	ContinueStatement	continue ;	152:12:4885:4893	8401740	1	True				
ANR	8402047	CompoundStatement		67:12:2165:2227	8401740	3					
ANR	8402048	IdentifierDeclStatement	int index = pst -> hpgl_command_indices [ pst -> first_letter ] [ next ] ;	155:12:4927:4989	8401740	0	True				
ANR	8402049	IdentifierDecl	index = pst -> hpgl_command_indices [ pst -> first_letter ] [ next ]		8401740	0					
ANR	8402050	IdentifierDeclType	int		8401740	0					
ANR	8402051	Identifier	index		8401740	1					
ANR	8402052	AssignmentExpression	index = pst -> hpgl_command_indices [ pst -> first_letter ] [ next ]		8401740	2		=			
ANR	8402053	Identifier	index		8401740	0					
ANR	8402054	ArrayIndexing	pst -> hpgl_command_indices [ pst -> first_letter ] [ next ]		8401740	1					
ANR	8402055	ArrayIndexing	pst -> hpgl_command_indices [ pst -> first_letter ]		8401740	0					
ANR	8402056	PtrMemberAccess	pst -> hpgl_command_indices		8401740	0					
ANR	8402057	Identifier	pst		8401740	0					
ANR	8402058	Identifier	hpgl_command_indices		8401740	1					
ANR	8402059	PtrMemberAccess	pst -> first_letter		8401740	1					
ANR	8402060	Identifier	pst		8401740	0					
ANR	8402061	Identifier	first_letter		8401740	1					
ANR	8402062	Identifier	next		8401740	1					
ANR	8402063	IfStatement	if ( gs_debug_c ( 'i' ) )		8401740	1					
ANR	8402064	Condition	gs_debug_c ( 'i' )	158:16:5021:5035	8401740	0	True				
ANR	8402065	CallExpression	gs_debug_c ( 'i' )		8401740	0					
ANR	8402066	Callee	gs_debug_c		8401740	0					
ANR	8402067	Identifier	gs_debug_c		8401740	0					
ANR	8402068	ArgumentList	'i'		8401740	1					
ANR	8402069	Argument	'i'		8401740	0					
ANR	8402070	PrimaryExpression	'i'		8401740	0					
ANR	8402071	CompoundStatement		71:16:2294:2322	8401740	1					
ANR	8402072	IdentifierDeclStatement	char c = ( index ? '-' : '?' ) ;	159:16:5056:5084	8401740	0	True				
ANR	8402073	IdentifierDecl	c = ( index ? '-' : '?' )		8401740	0					
ANR	8402074	IdentifierDeclType	char		8401740	0					
ANR	8402075	Identifier	c		8401740	1					
ANR	8402076	AssignmentExpression	c = ( index ? '-' : '?' )		8401740	2		=			
ANR	8402077	Identifier	c		8401740	0					
ANR	8402078	ConditionalExpression	index ? '-' : '?'		8401740	1					
ANR	8402079	Condition	index		8401740	0					
ANR	8402080	Identifier	index		8401740	0					
ANR	8402081	PrimaryExpression	'-'		8401740	1					
ANR	8402082	PrimaryExpression	'?'		8401740	2					
ANR	8402083	ExpressionStatement	"dmprintf4 ( pgls -> memory , ""--%c%c%c%c"" , pst -> first_letter + 'A' , next + 'A' , c , c )"	161:16:5103:5209	8401740	1	True				
ANR	8402084	CallExpression	"dmprintf4 ( pgls -> memory , ""--%c%c%c%c"" , pst -> first_letter + 'A' , next + 'A' , c , c )"		8401740	0					
ANR	8402085	Callee	dmprintf4		8401740	0					
ANR	8402086	Identifier	dmprintf4		8401740	0					
ANR	8402087	ArgumentList	pgls -> memory		8401740	1					
ANR	8402088	Argument	pgls -> memory		8401740	0					
ANR	8402089	PtrMemberAccess	pgls -> memory		8401740	0					
ANR	8402090	Identifier	pgls		8401740	0					
ANR	8402091	Identifier	memory		8401740	1					
ANR	8402092	Argument	"""--%c%c%c%c"""		8401740	1					
ANR	8402093	PrimaryExpression	"""--%c%c%c%c"""		8401740	0					
ANR	8402094	Argument	pst -> first_letter + 'A'		8401740	2					
ANR	8402095	AdditiveExpression	pst -> first_letter + 'A'		8401740	0		+			
ANR	8402096	PtrMemberAccess	pst -> first_letter		8401740	0					
ANR	8402097	Identifier	pst		8401740	0					
ANR	8402098	Identifier	first_letter		8401740	1					
ANR	8402099	PrimaryExpression	'A'		8401740	1					
ANR	8402100	Argument	next + 'A'		8401740	3					
ANR	8402101	AdditiveExpression	next + 'A'		8401740	0		+			
ANR	8402102	Identifier	next		8401740	0					
ANR	8402103	PrimaryExpression	'A'		8401740	1					
ANR	8402104	Argument	c		8401740	4					
ANR	8402105	Identifier	c		8401740	0					
ANR	8402106	Argument	c		8401740	5					
ANR	8402107	Identifier	c		8401740	0					
ANR	8402108	IfStatement	if ( index == 0 )		8401740	2					
ANR	8402109	Condition	index == 0	165:16:5248:5257	8401740	0	True				
ANR	8402110	EqualityExpression	index == 0		8401740	0		==			
ANR	8402111	Identifier	index		8401740	0					
ANR	8402112	PrimaryExpression	0		8401740	1					
ANR	8402113	CompoundStatement		77:28:2498:2498	8401740	1					
ANR	8402114	ExpressionStatement	pst -> first_letter = next	166:16:5313:5337	8401740	0	True				
ANR	8402115	AssignmentExpression	pst -> first_letter = next		8401740	0		=			
ANR	8402116	PtrMemberAccess	pst -> first_letter		8401740	0					
ANR	8402117	Identifier	pst		8401740	0					
ANR	8402118	Identifier	first_letter		8401740	1					
ANR	8402119	Identifier	next		8401740	1					
ANR	8402120	ContinueStatement	continue ;	167:16:5355:5363	8401740	1	True				
ANR	8402121	ExpressionStatement	pst -> first_letter = - 1	169:12:5391:5413	8401740	3	True				
ANR	8402122	AssignmentExpression	pst -> first_letter = - 1		8401740	0		=			
ANR	8402123	PtrMemberAccess	pst -> first_letter		8401740	0					
ANR	8402124	Identifier	pst		8401740	0					
ANR	8402125	Identifier	first_letter		8401740	1					
ANR	8402126	UnaryOperationExpression	- 1		8401740	1					
ANR	8402127	UnaryOperator	-		8401740	0					
ANR	8402128	PrimaryExpression	1		8401740	1					
ANR	8402129	ExpressionStatement	pst -> command = pst -> hpgl_command_list [ index ]	170:12:5427:5471	8401740	4	True				
ANR	8402130	AssignmentExpression	pst -> command = pst -> hpgl_command_list [ index ]		8401740	0		=			
ANR	8402131	PtrMemberAccess	pst -> command		8401740	0					
ANR	8402132	Identifier	pst		8401740	0					
ANR	8402133	Identifier	command		8401740	1					
ANR	8402134	ArrayIndexing	pst -> hpgl_command_list [ index ]		8401740	1					
ANR	8402135	PtrMemberAccess	pst -> hpgl_command_list		8401740	0					
ANR	8402136	Identifier	pst		8401740	0					
ANR	8402137	Identifier	hpgl_command_list		8401740	1					
ANR	8402138	Identifier	index		8401740	1					
ANR	8402139	ExpressionStatement	pst -> phase = 0	171:12:5485:5499	8401740	5	True				
ANR	8402140	AssignmentExpression	pst -> phase = 0		8401740	0		=			
ANR	8402141	PtrMemberAccess	pst -> phase		8401740	0					
ANR	8402142	Identifier	pst		8401740	0					
ANR	8402143	Identifier	phase		8401740	1					
ANR	8402144	PrimaryExpression	0		8401740	1					
ANR	8402145	ExpressionStatement	pst -> done = false	172:12:5513:5530	8401740	6	True				
ANR	8402146	AssignmentExpression	pst -> done = false		8401740	0		=			
ANR	8402147	PtrMemberAccess	pst -> done		8401740	0					
ANR	8402148	Identifier	pst		8401740	0					
ANR	8402149	Identifier	done		8401740	1					
ANR	8402150	Identifier	false		8401740	1					
ANR	8402151	ExpressionStatement	hpgl_args_init ( pst )	173:12:5544:5563	8401740	7	True				
ANR	8402152	CallExpression	hpgl_args_init ( pst )		8401740	0					
ANR	8402153	Callee	hpgl_args_init		8401740	0					
ANR	8402154	Identifier	hpgl_args_init		8401740	0					
ANR	8402155	ArgumentList	pst		8401740	1					
ANR	8402156	Argument	pst		8401740	0					
ANR	8402157	Identifier	pst		8401740	0					
ANR	8402158	CompoundStatement		97:16:3389:3416	8401740	8					
ANR	8402159	IdentifierDeclStatement	bool ignore_command = false ;	185:16:6151:6178	8401740	0	True				
ANR	8402160	IdentifierDecl	ignore_command = false		8401740	0					
ANR	8402161	IdentifierDeclType	bool		8401740	0					
ANR	8402162	Identifier	ignore_command		8401740	1					
ANR	8402163	AssignmentExpression	ignore_command = false		8401740	2		=			
ANR	8402164	Identifier	false		8401740	0					
ANR	8402165	Identifier	false		8401740	1					
ANR	8402166	IfStatement	if ( ( pgls -> g . polygon_mode ) && ! ( pst -> command -> flags & hpgl_cdf_polygon ) )		8401740	1					
ANR	8402167	Condition	( pgls -> g . polygon_mode ) && ! ( pst -> command -> flags & hpgl_cdf_polygon )	187:20:6201:6287	8401740	0	True				
ANR	8402168	AndExpression	( pgls -> g . polygon_mode ) && ! ( pst -> command -> flags & hpgl_cdf_polygon )		8401740	0		&&			
ANR	8402169	MemberAccess	pgls -> g . polygon_mode		8401740	0					
ANR	8402170	PtrMemberAccess	pgls -> g		8401740	0					
ANR	8402171	Identifier	pgls		8401740	0					
ANR	8402172	Identifier	g		8401740	1					
ANR	8402173	Identifier	polygon_mode		8401740	1					
ANR	8402174	UnaryOperationExpression	! ( pst -> command -> flags & hpgl_cdf_polygon )		8401740	1					
ANR	8402175	UnaryOperator	!		8401740	0					
ANR	8402176	BitAndExpression	pst -> command -> flags & hpgl_cdf_polygon		8401740	1		&			
ANR	8402177	PtrMemberAccess	pst -> command -> flags		8401740	0					
ANR	8402178	PtrMemberAccess	pst -> command		8401740	0					
ANR	8402179	Identifier	pst		8401740	0					
ANR	8402180	Identifier	command		8401740	1					
ANR	8402181	Identifier	flags		8401740	1					
ANR	8402182	Identifier	hpgl_cdf_polygon		8401740	1					
ANR	8402183	ExpressionStatement	ignore_command = true	190:20:6331:6352	8401740	1	True				
ANR	8402184	AssignmentExpression	ignore_command = true		8401740	0		=			
ANR	8402185	Identifier	ignore_command		8401740	0					
ANR	8402186	Identifier	true		8401740	1					
ANR	8402187	ElseStatement	else		8401740	0					
ANR	8402188	CompoundStatement		103:21:3613:3613	8401740	0					
ANR	8402189	IfStatement	if ( ( pgls -> g . lost_mode == hpgl_lost_mode_entered ) && ( pst -> command -> flags & hpgl_cdf_lost_mode_cleared ) )		8401740	0					
ANR	8402190	Condition	( pgls -> g . lost_mode == hpgl_lost_mode_entered ) && ( pst -> command -> flags & hpgl_cdf_lost_mode_cleared )	194:24:6610:6732	8401740	0	True				
ANR	8402191	AndExpression	( pgls -> g . lost_mode == hpgl_lost_mode_entered ) && ( pst -> command -> flags & hpgl_cdf_lost_mode_cleared )		8401740	0		&&			
ANR	8402192	EqualityExpression	pgls -> g . lost_mode == hpgl_lost_mode_entered		8401740	0		==			
ANR	8402193	MemberAccess	pgls -> g . lost_mode		8401740	0					
ANR	8402194	PtrMemberAccess	pgls -> g		8401740	0					
ANR	8402195	Identifier	pgls		8401740	0					
ANR	8402196	Identifier	g		8401740	1					
ANR	8402197	Identifier	lost_mode		8401740	1					
ANR	8402198	Identifier	hpgl_lost_mode_entered		8401740	1					
ANR	8402199	BitAndExpression	pst -> command -> flags & hpgl_cdf_lost_mode_cleared		8401740	1		&			
ANR	8402200	PtrMemberAccess	pst -> command -> flags		8401740	0					
ANR	8402201	PtrMemberAccess	pst -> command		8401740	0					
ANR	8402202	Identifier	pst		8401740	0					
ANR	8402203	Identifier	command		8401740	1					
ANR	8402204	Identifier	flags		8401740	1					
ANR	8402205	Identifier	hpgl_cdf_lost_mode_cleared		8401740	1					
ANR	8402206	ExpressionStatement	ignore_command = true	197:24:6784:6805	8401740	1	True				
ANR	8402207	AssignmentExpression	ignore_command = true		8401740	0		=			
ANR	8402208	Identifier	ignore_command		8401740	0					
ANR	8402209	Identifier	true		8401740	1					
ANR	8402210	IfStatement	if ( pgls -> personality == rtl )		8401740	2					
ANR	8402211	Condition	pgls -> personality == rtl	201:20:6991:7014	8401740	0	True				
ANR	8402212	EqualityExpression	pgls -> personality == rtl		8401740	0		==			
ANR	8402213	PtrMemberAccess	pgls -> personality		8401740	0					
ANR	8402214	Identifier	pgls		8401740	0					
ANR	8402215	Identifier	personality		8401740	1					
ANR	8402216	Identifier	rtl		8401740	1					
ANR	8402217	IfStatement	if ( ! ( pst -> command -> flags & hpgl_cdf_rtl ) )		8401740	1					
ANR	8402218	Condition	! ( pst -> command -> flags & hpgl_cdf_rtl )	202:24:7041:7077	8401740	0	True				
ANR	8402219	UnaryOperationExpression	! ( pst -> command -> flags & hpgl_cdf_rtl )		8401740	0					
ANR	8402220	UnaryOperator	!		8401740	0					
ANR	8402221	BitAndExpression	pst -> command -> flags & hpgl_cdf_rtl		8401740	1		&			
ANR	8402222	PtrMemberAccess	pst -> command -> flags		8401740	0					
ANR	8402223	PtrMemberAccess	pst -> command		8401740	0					
ANR	8402224	Identifier	pst		8401740	0					
ANR	8402225	Identifier	command		8401740	1					
ANR	8402226	Identifier	flags		8401740	1					
ANR	8402227	Identifier	hpgl_cdf_rtl		8401740	1					
ANR	8402228	ExpressionStatement	ignore_command = true	203:24:7128:7149	8401740	1	True				
ANR	8402229	AssignmentExpression	ignore_command = true		8401740	0		=			
ANR	8402230	Identifier	ignore_command		8401740	0					
ANR	8402231	Identifier	true		8401740	1					
ANR	8402232	IfStatement	if ( ( pgls -> personality == pcl5c ) || ( pgls -> personality == pcl5e ) )		8401740	3					
ANR	8402233	Condition	( pgls -> personality == pcl5c ) || ( pgls -> personality == pcl5e )	204:20:7171:7250	8401740	0	True				
ANR	8402234	OrExpression	( pgls -> personality == pcl5c ) || ( pgls -> personality == pcl5e )		8401740	0		||			
ANR	8402235	EqualityExpression	pgls -> personality == pcl5c		8401740	0		==			
ANR	8402236	PtrMemberAccess	pgls -> personality		8401740	0					
ANR	8402237	Identifier	pgls		8401740	0					
ANR	8402238	Identifier	personality		8401740	1					
ANR	8402239	Identifier	pcl5c		8401740	1					
ANR	8402240	EqualityExpression	pgls -> personality == pcl5e		8401740	1		==			
ANR	8402241	PtrMemberAccess	pgls -> personality		8401740	0					
ANR	8402242	Identifier	pgls		8401740	0					
ANR	8402243	Identifier	personality		8401740	1					
ANR	8402244	Identifier	pcl5e		8401740	1					
ANR	8402245	IfStatement	if ( ! ( pst -> command -> flags & hpgl_cdf_pcl ) )		8401740	1					
ANR	8402246	Condition	! ( pst -> command -> flags & hpgl_cdf_pcl )	206:24:7277:7313	8401740	0	True				
ANR	8402247	UnaryOperationExpression	! ( pst -> command -> flags & hpgl_cdf_pcl )		8401740	0					
ANR	8402248	UnaryOperator	!		8401740	0					
ANR	8402249	BitAndExpression	pst -> command -> flags & hpgl_cdf_pcl		8401740	1		&			
ANR	8402250	PtrMemberAccess	pst -> command -> flags		8401740	0					
ANR	8402251	PtrMemberAccess	pst -> command		8401740	0					
ANR	8402252	Identifier	pst		8401740	0					
ANR	8402253	Identifier	command		8401740	1					
ANR	8402254	Identifier	flags		8401740	1					
ANR	8402255	Identifier	hpgl_cdf_pcl		8401740	1					
ANR	8402256	ExpressionStatement	ignore_command = true	207:24:7364:7385	8401740	1	True				
ANR	8402257	AssignmentExpression	ignore_command = true		8401740	0		=			
ANR	8402258	Identifier	ignore_command		8401740	0					
ANR	8402259	Identifier	true		8401740	1					
ANR	8402260	IfStatement	if ( ignore_command )		8401740	4					
ANR	8402261	Condition	ignore_command	208:20:7407:7420	8401740	0	True				
ANR	8402262	Identifier	ignore_command		8401740	0					
ANR	8402263	ExpressionStatement	pst -> command = 0	209:20:7443:7459	8401740	1	True				
ANR	8402264	AssignmentExpression	pst -> command = 0		8401740	0		=			
ANR	8402265	PtrMemberAccess	pst -> command		8401740	0					
ANR	8402266	Identifier	pst		8401740	0					
ANR	8402267	Identifier	command		8401740	1					
ANR	8402268	PrimaryExpression	0		8401740	1					
ANR	8402269	GotoStatement	goto call ;	211:12:7487:7496	8401740	9	True				
ANR	8402270	Identifier	call		8401740	0					
ANR	8402271	Label	x :	214:2:7516:7517	8401740	11	True				
ANR	8402272	Identifier	x		8401740	0					
ANR	8402273	ExpressionStatement	pr -> ptr = p	214:4:7518:7529	8401740	12	True				
ANR	8402274	AssignmentExpression	pr -> ptr = p		8401740	0		=			
ANR	8402275	PtrMemberAccess	pr -> ptr		8401740	0					
ANR	8402276	Identifier	pr		8401740	0					
ANR	8402277	Identifier	ptr		8401740	1					
ANR	8402278	Identifier	p		8401740	1					
ANR	8402279	ExpressionStatement	pst -> exit_to_parser = NULL	215:4:7535:7561	8401740	13	True				
ANR	8402280	AssignmentExpression	pst -> exit_to_parser = NULL		8401740	0		=			
ANR	8402281	PtrMemberAccess	pst -> exit_to_parser		8401740	0					
ANR	8402282	Identifier	pst		8401740	0					
ANR	8402283	Identifier	exit_to_parser		8401740	1					
ANR	8402284	Identifier	NULL		8401740	1					
ANR	8402285	IfStatement	if ( pgls -> macro_level > 0 && ( code == gs_error_NeedInput ) )		8401740	14					
ANR	8402286	Condition	pgls -> macro_level > 0 && ( code == gs_error_NeedInput )	221:8:7684:7736	8401740	0	True				
ANR	8402287	AndExpression	pgls -> macro_level > 0 && ( code == gs_error_NeedInput )		8401740	0		&&			
ANR	8402288	RelationalExpression	pgls -> macro_level > 0		8401740	0		>			
ANR	8402289	PtrMemberAccess	pgls -> macro_level		8401740	0					
ANR	8402290	Identifier	pgls		8401740	0					
ANR	8402291	Identifier	macro_level		8401740	1					
ANR	8402292	PrimaryExpression	0		8401740	1					
ANR	8402293	EqualityExpression	code == gs_error_NeedInput		8401740	1		==			
ANR	8402294	Identifier	code		8401740	0					
ANR	8402295	Identifier	gs_error_NeedInput		8401740	1					
ANR	8402296	ExpressionStatement	code = gs_error_Fatal	222:8:7747:7768	8401740	1	True				
ANR	8402297	AssignmentExpression	code = gs_error_Fatal		8401740	0		=			
ANR	8402298	Identifier	code		8401740	0					
ANR	8402299	Identifier	gs_error_Fatal		8401740	1					
ANR	8402300	ReturnStatement	return ( code == gs_error_NeedInput ? 0 : code ) ;	224:4:7783:7829	8401740	15	True				
ANR	8402301	ConditionalExpression	code == gs_error_NeedInput ? 0 : code		8401740	0					
ANR	8402302	Condition	code == gs_error_NeedInput		8401740	0					
ANR	8402303	EqualityExpression	code == gs_error_NeedInput		8401740	0		==			
ANR	8402304	Identifier	code		8401740	0					
ANR	8402305	Identifier	gs_error_NeedInput		8401740	1					
ANR	8402306	PrimaryExpression	0		8401740	1					
ANR	8402307	Identifier	code		8401740	2					
ANR	8402308	ReturnType	int		8401740	1					
ANR	8402309	Identifier	hpgl_process		8401740	2					
ANR	8402310	ParameterList	"hpgl_parser_state_t * pst , hpgl_state_t * pgls , stream_cursor_read * pr"		8401740	3					
ANR	8402311	Parameter	hpgl_parser_state_t * pst	87:13:2675:2699	8401740	0	True				
ANR	8402312	ParameterType	hpgl_parser_state_t *		8401740	0					
ANR	8402313	Identifier	pst		8401740	1					
ANR	8402314	Parameter	hpgl_state_t * pgls	87:40:2702:2720	8401740	1	True				
ANR	8402315	ParameterType	hpgl_state_t *		8401740	0					
ANR	8402316	Identifier	pgls		8401740	1					
ANR	8402317	Parameter	stream_cursor_read * pr	88:13:2736:2758	8401740	2	True				
ANR	8402318	ParameterType	stream_cursor_read *		8401740	0					
ANR	8402319	Identifier	pr		8401740	1					
ANR	8402320	CFGEntryNode	ENTRY		8401740		True				
ANR	8402321	CFGExitNode	EXIT		8401740		True				
ANR	8402322	Symbol	* ( pst -> exit_to_parser )		8401740						
ANR	8402323	Symbol	pr		8401740						
ANR	8402324	Symbol	* index		8401740						
ANR	8402325	Symbol	pgls -> g . lost_mode		8401740						
ANR	8402326	Symbol	pgls		8401740						
ANR	8402327	Symbol	* pst -> first_letter		8401740						
ANR	8402328	Symbol	* next		8401740						
ANR	8402329	Symbol	pr -> limit		8401740						
ANR	8402330	Symbol	pst -> source		8401740						
ANR	8402331	Symbol	* pst -> command -> proc		8401740						
ANR	8402332	Symbol	* pst -> hpgl_command_indices		8401740						
ANR	8402333	Symbol	gs_debug_c		8401740						
ANR	8402334	Symbol	pgls -> g		8401740						
ANR	8402335	Symbol	pr -> ptr		8401740						
ANR	8402336	Symbol	pgls -> personality		8401740						
ANR	8402337	Symbol	gs_error_Fatal		8401740						
ANR	8402338	Symbol	rlimit		8401740						
ANR	8402339	Symbol	NULL		8401740						
ANR	8402340	Symbol	* * pst		8401740						
ANR	8402341	Symbol	pst -> done		8401740						
ANR	8402342	Symbol	index		8401740						
ANR	8402343	Symbol	* pst -> hpgl_command_list		8401740						
ANR	8402344	Symbol	* pr		8401740						
ANR	8402345	Symbol	pst -> arg . next		8401740						
ANR	8402346	Symbol	pst -> phase		8401740						
ANR	8402347	Symbol	* * pst -> command		8401740						
ANR	8402348	Symbol	pcl5e		8401740						
ANR	8402349	Symbol	true		8401740						
ANR	8402350	Symbol	* pst		8401740						
ANR	8402351	Symbol	gs_error_NeedInput		8401740						
ANR	8402352	Symbol	* pst -> exit_to_parser		8401740						
ANR	8402353	Symbol	hpgl_cdf_polygon		8401740						
ANR	8402354	Symbol	pcl5c		8401740						
ANR	8402355	Symbol	next		8401740						
ANR	8402356	Symbol	hpgl_cdf_pcl		8401740						
ANR	8402357	Symbol	& exit_to_parser		8401740						
ANR	8402358	Symbol	code		8401740						
ANR	8402359	Symbol	* * pst -> first_letter		8401740						
ANR	8402360	Symbol	ignore_command		8401740						
ANR	8402361	Symbol	pst -> source . limit		8401740						
ANR	8402362	Symbol	pst -> command		8401740						
ANR	8402363	Symbol	* * pst -> hpgl_command_indices		8401740						
ANR	8402364	Symbol	pgls -> macro_level		8401740						
ANR	8402365	Symbol	* * * pst		8401740						
ANR	8402366	Symbol	pst		8401740						
ANR	8402367	Symbol	hpgl_cdf_rtl		8401740						
ANR	8402368	Symbol	pst -> exit_to_parser		8401740						
ANR	8402369	Symbol	ESC		8401740						
ANR	8402370	Symbol	pst -> first_letter		8401740						
ANR	8402371	Symbol	pst -> hpgl_command_indices		8401740						
ANR	8402372	Symbol	* pgls		8401740						
ANR	8402373	Symbol	pgls -> memory		8401740						
ANR	8402374	Symbol	* pst -> command		8401740						
ANR	8402375	Symbol	pst -> command -> flags		8401740						
ANR	8402376	Symbol	pgls -> g . polygon_mode		8401740						
ANR	8402377	Symbol	c		8401740						
ANR	8402378	Symbol	pst -> arg		8401740						
ANR	8402379	Symbol	* ++ p		8401740						
ANR	8402380	Symbol	pst -> hpgl_command_list		8401740						
ANR	8402381	Symbol	hpgl_lost_mode_entered		8401740						
ANR	8402382	Symbol	exit_to_parser		8401740						
ANR	8402383	Symbol	false		8401740						
ANR	8402384	Symbol	setjmp		8401740						
ANR	8402385	Symbol	rtl		8401740						
ANR	8402386	Symbol	hpgl_cdf_lost_mode_cleared		8401740						
ANR	8402387	Symbol	p		8401740						
ANR	8402388	Symbol	pst -> command -> proc		8401740						
ANR	8402389	Symbol	pst -> source . ptr		8401740						
ANR	8402390	Symbol	* p		8401740						
ANR	8402391	Function	hpgl_arg	232:0:8045:12134							
ANR	8402392	FunctionDef	"hpgl_arg (const gs_memory_t * mem , hpgl_parser_state_t * pst)"		8402391	0					
ANR	8402393	CompoundStatement		234:0:8134:12134	8402391	0					
ANR	8402394	IdentifierDeclStatement	const byte * p ;	235:4:8140:8153	8402391	0	True				
ANR	8402395	IdentifierDecl	* p		8402391	0					
ANR	8402396	IdentifierDeclType	const byte *		8402391	0					
ANR	8402397	Identifier	p		8402391	1					
ANR	8402398	IdentifierDeclStatement	const byte * rlimit ;	236:4:8159:8177	8402391	1	True				
ANR	8402399	IdentifierDecl	* rlimit		8402391	0					
ANR	8402400	IdentifierDeclType	const byte *		8402391	0					
ANR	8402401	Identifier	rlimit		8402391	1					
ANR	8402402	IdentifierDeclStatement	hpgl_value_t * pvalue ;	237:4:8183:8203	8402391	2	True				
ANR	8402403	IdentifierDecl	* pvalue		8402391	0					
ANR	8402404	IdentifierDeclType	hpgl_value_t *		8402391	0					
ANR	8402405	Identifier	pvalue		8402391	1					
ANR	8402406	Statement	define	239:1:8207:8212	8402391	3	True				
ANR	8402407	Statement	parg	239:8:8214:8217	8402391	4	True				
ANR	8402408	Statement	(	239:13:8219:8219	8402391	5	True				
ANR	8402409	Statement	&	239:14:8220:8220	8402391	6	True				
ANR	8402410	Statement	pst	239:15:8221:8223	8402391	7	True				
ANR	8402411	Statement	->	239:18:8224:8225	8402391	8	True				
ANR	8402412	Statement	arg	239:20:8226:8228	8402391	9	True				
ANR	8402413	Statement	)	239:23:8229:8229	8402391	10	True				
ANR	8402414	IfStatement	if ( parg -> next < parg -> count )		8402391	11					
ANR	8402415	Condition	parg -> next < parg -> count	240:8:8239:8262	8402391	0	True				
ANR	8402416	RelationalExpression	parg -> next < parg -> count		8402391	0		<			
ANR	8402417	PtrMemberAccess	parg -> next		8402391	0					
ANR	8402418	Identifier	parg		8402391	0					
ANR	8402419	Identifier	next		8402391	1					
ANR	8402420	PtrMemberAccess	parg -> count		8402391	1					
ANR	8402421	Identifier	parg		8402391	0					
ANR	8402422	Identifier	count		8402391	1					
ANR	8402423	CompoundStatement		7:34:130:130	8402391	1					
ANR	8402424	ReturnStatement	return & parg -> scanned [ parg -> next ++ ] ;	241:8:8334:8369	8402391	0	True				
ANR	8402425	UnaryOperationExpression	& parg -> scanned [ parg -> next ++ ]		8402391	0					
ANR	8402426	UnaryOperator	&		8402391	0					
ANR	8402427	ArrayIndexing	parg -> scanned [ parg -> next ++ ]		8402391	1					
ANR	8402428	PtrMemberAccess	parg -> scanned		8402391	0					
ANR	8402429	Identifier	parg		8402391	0					
ANR	8402430	Identifier	scanned		8402391	1					
ANR	8402431	PostIncDecOperationExpression	parg -> next ++		8402391	1					
ANR	8402432	PtrMemberAccess	parg -> next		8402391	0					
ANR	8402433	Identifier	parg		8402391	0					
ANR	8402434	Identifier	next		8402391	1					
ANR	8402435	IncDec	++		8402391	1					
ANR	8402436	IfStatement	if ( pst -> done )		8402391	12					
ANR	8402437	Condition	pst -> done	243:8:8385:8393	8402391	0	True				
ANR	8402438	PtrMemberAccess	pst -> done		8402391	0					
ANR	8402439	Identifier	pst		8402391	0					
ANR	8402440	Identifier	done		8402391	1					
ANR	8402441	ReturnStatement	return 0 ;	244:8:8404:8412	8402391	1	True				
ANR	8402442	PrimaryExpression	0		8402391	0					
ANR	8402443	ExpressionStatement	p = pst -> source . ptr	245:4:8418:8437	8402391	13	True				
ANR	8402444	AssignmentExpression	p = pst -> source . ptr		8402391	0		=			
ANR	8402445	Identifier	p		8402391	0					
ANR	8402446	MemberAccess	pst -> source . ptr		8402391	1					
ANR	8402447	PtrMemberAccess	pst -> source		8402391	0					
ANR	8402448	Identifier	pst		8402391	0					
ANR	8402449	Identifier	source		8402391	1					
ANR	8402450	Identifier	ptr		8402391	1					
ANR	8402451	ExpressionStatement	rlimit = pst -> source . limit	246:4:8443:8469	8402391	14	True				
ANR	8402452	AssignmentExpression	rlimit = pst -> source . limit		8402391	0		=			
ANR	8402453	Identifier	rlimit		8402391	0					
ANR	8402454	MemberAccess	pst -> source . limit		8402391	1					
ANR	8402455	PtrMemberAccess	pst -> source		8402391	0					
ANR	8402456	Identifier	pst		8402391	0					
ANR	8402457	Identifier	source		8402391	1					
ANR	8402458	Identifier	limit		8402391	1					
ANR	8402459	ExpressionStatement	pvalue = & parg -> scanned [ parg -> count ]	247:4:8475:8511	8402391	15	True				
ANR	8402460	AssignmentExpression	pvalue = & parg -> scanned [ parg -> count ]		8402391	0		=			
ANR	8402461	Identifier	pvalue		8402391	0					
ANR	8402462	UnaryOperationExpression	& parg -> scanned [ parg -> count ]		8402391	1					
ANR	8402463	UnaryOperator	&		8402391	0					
ANR	8402464	ArrayIndexing	parg -> scanned [ parg -> count ]		8402391	1					
ANR	8402465	PtrMemberAccess	parg -> scanned		8402391	0					
ANR	8402466	Identifier	parg		8402391	0					
ANR	8402467	Identifier	scanned		8402391	1					
ANR	8402468	PtrMemberAccess	parg -> count		8402391	1					
ANR	8402469	Identifier	parg		8402391	0					
ANR	8402470	Identifier	count		8402391	1					
ANR	8402471	Statement	define	248:1:8514:8519	8402391	16	True				
ANR	8402472	Statement	check_value	248:8:8521:8531	8402391	17	True				
ANR	8402473	Statement	(	248:19:8532:8532	8402391	18	True				
ANR	8402474	Statement	)	248:20:8533:8533	8402391	19	True				
ANR	8402475	IfStatement	if ( parg -> have_value )		8402391	20					
ANR	8402476	Condition	parg -> have_value	249:7:8543:8558	8402391	0	True				
ANR	8402477	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402478	Identifier	parg		8402391	0					
ANR	8402479	Identifier	have_value		8402391	1					
ANR	8402480	Statement	goto	249:26:8562:8565	8402391	1	True				
ANR	8402481	Statement	done	249:31:8567:8570	8402391	21	True				
ANR	8402482	ForStatement	for ( ; p < rlimit ; ++ p )		8402391	22					
ANR	8402483	Condition	p < rlimit	251:11:8584:8593	8402391	0	True				
ANR	8402484	RelationalExpression	p < rlimit		8402391	0		<			
ANR	8402485	Identifier	p		8402391	0					
ANR	8402486	Identifier	rlimit		8402391	1					
ANR	8402487	UnaryExpression	++ p	251:23:8596:8598	8402391	1	True				
ANR	8402488	IncDec	++		8402391	0					
ANR	8402489	Identifier	p		8402391	1					
ANR	8402490	CompoundStatement		19:8:476:490	8402391	2					
ANR	8402491	IdentifierDeclStatement	byte ch = p [ 1 ] ;	252:8:8611:8625	8402391	0	True				
ANR	8402492	IdentifierDecl	ch = p [ 1 ]		8402391	0					
ANR	8402493	IdentifierDeclType	byte		8402391	0					
ANR	8402494	Identifier	ch		8402391	1					
ANR	8402495	AssignmentExpression	ch = p [ 1 ]		8402391	2		=			
ANR	8402496	Identifier	ch		8402391	0					
ANR	8402497	ArrayIndexing	p [ 1 ]		8402391	1					
ANR	8402498	Identifier	p		8402391	0					
ANR	8402499	PrimaryExpression	1		8402391	1					
ANR	8402500	SwitchStatement	switch ( ch )		8402391	1					
ANR	8402501	Condition	ch	254:16:8644:8645	8402391	0	True				
ANR	8402502	Identifier	ch		8402391	0					
ANR	8402503	CompoundStatement		21:20:513:513	8402391	1					
ANR	8402504	Label	case '+' :	255:12:8662:8670	8402391	0	True				
ANR	8402505	ExpressionStatement	check_value ( )	256:16:8688:8701	8402391	1	True				
ANR	8402506	CallExpression	check_value ( )		8402391	0					
ANR	8402507	Callee	check_value		8402391	0					
ANR	8402508	Identifier	check_value		8402391	0					
ANR	8402509	ArgumentList			8402391	1					
ANR	8402510	ExpressionStatement	parg -> have_value = 1	257:16:8719:8739	8402391	2	True				
ANR	8402511	AssignmentExpression	parg -> have_value = 1		8402391	0		=			
ANR	8402512	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402513	Identifier	parg		8402391	0					
ANR	8402514	Identifier	have_value		8402391	1					
ANR	8402515	PrimaryExpression	1		8402391	1					
ANR	8402516	ExpressionStatement	parg -> sign = 1	258:16:8757:8771	8402391	3	True				
ANR	8402517	AssignmentExpression	parg -> sign = 1		8402391	0		=			
ANR	8402518	PtrMemberAccess	parg -> sign		8402391	0					
ANR	8402519	Identifier	parg		8402391	0					
ANR	8402520	Identifier	sign		8402391	1					
ANR	8402521	PrimaryExpression	1		8402391	1					
ANR	8402522	ExpressionStatement	pvalue -> v_n . i = 0	259:16:8789:8806	8402391	4	True				
ANR	8402523	AssignmentExpression	pvalue -> v_n . i = 0		8402391	0		=			
ANR	8402524	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402525	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402526	Identifier	pvalue		8402391	0					
ANR	8402527	Identifier	v_n		8402391	1					
ANR	8402528	Identifier	i		8402391	1					
ANR	8402529	PrimaryExpression	0		8402391	1					
ANR	8402530	BreakStatement	break ;	260:16:8824:8829	8402391	5	True				
ANR	8402531	Label	case '-' :	261:12:8843:8851	8402391	6	True				
ANR	8402532	ExpressionStatement	check_value ( )	262:16:8869:8882	8402391	7	True				
ANR	8402533	CallExpression	check_value ( )		8402391	0					
ANR	8402534	Callee	check_value		8402391	0					
ANR	8402535	Identifier	check_value		8402391	0					
ANR	8402536	ArgumentList			8402391	1					
ANR	8402537	ExpressionStatement	parg -> have_value = 1	263:16:8900:8920	8402391	8	True				
ANR	8402538	AssignmentExpression	parg -> have_value = 1		8402391	0		=			
ANR	8402539	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402540	Identifier	parg		8402391	0					
ANR	8402541	Identifier	have_value		8402391	1					
ANR	8402542	PrimaryExpression	1		8402391	1					
ANR	8402543	ExpressionStatement	parg -> sign = - 1	264:16:8938:8953	8402391	9	True				
ANR	8402544	AssignmentExpression	parg -> sign = - 1		8402391	0		=			
ANR	8402545	PtrMemberAccess	parg -> sign		8402391	0					
ANR	8402546	Identifier	parg		8402391	0					
ANR	8402547	Identifier	sign		8402391	1					
ANR	8402548	UnaryOperationExpression	- 1		8402391	1					
ANR	8402549	UnaryOperator	-		8402391	0					
ANR	8402550	PrimaryExpression	1		8402391	1					
ANR	8402551	ExpressionStatement	pvalue -> v_n . i = 0	265:16:8971:8988	8402391	10	True				
ANR	8402552	AssignmentExpression	pvalue -> v_n . i = 0		8402391	0		=			
ANR	8402553	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402554	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402555	Identifier	pvalue		8402391	0					
ANR	8402556	Identifier	v_n		8402391	1					
ANR	8402557	Identifier	i		8402391	1					
ANR	8402558	PrimaryExpression	0		8402391	1					
ANR	8402559	BreakStatement	break ;	266:16:9006:9011	8402391	11	True				
ANR	8402560	Label	case '.' :	267:12:9025:9033	8402391	12	True				
ANR	8402561	SwitchStatement	switch ( parg -> have_value )		8402391	13					
ANR	8402562	Condition	parg -> have_value	268:24:9059:9074	8402391	0	True				
ANR	8402563	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402564	Identifier	parg		8402391	0					
ANR	8402565	Identifier	have_value		8402391	1					
ANR	8402566	CompoundStatement		35:42:942:942	8402391	1					
ANR	8402567	Label	default :	269:20:9099:9106	8402391	0	True				
ANR	8402568	Identifier	default		8402391	0					
ANR	8402569	GotoStatement	goto out ;	270:24:9144:9152	8402391	1	True				
ANR	8402570	Identifier	out		8402391	0					
ANR	8402571	Label	case 0 :	271:20:9174:9180	8402391	2	True				
ANR	8402572	ExpressionStatement	pvalue -> v_n . r = 0	272:24:9206:9223	8402391	3	True				
ANR	8402573	AssignmentExpression	pvalue -> v_n . r = 0		8402391	0		=			
ANR	8402574	MemberAccess	pvalue -> v_n . r		8402391	0					
ANR	8402575	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402576	Identifier	pvalue		8402391	0					
ANR	8402577	Identifier	v_n		8402391	1					
ANR	8402578	Identifier	r		8402391	1					
ANR	8402579	PrimaryExpression	0		8402391	1					
ANR	8402580	BreakStatement	break ;	273:24:9249:9254	8402391	4	True				
ANR	8402581	Label	case 1 :	274:20:9276:9282	8402391	5	True				
ANR	8402582	ExpressionStatement	pvalue -> v_n . r = pvalue -> v_n . i	275:24:9308:9337	8402391	6	True				
ANR	8402583	AssignmentExpression	pvalue -> v_n . r = pvalue -> v_n . i		8402391	0		=			
ANR	8402584	MemberAccess	pvalue -> v_n . r		8402391	0					
ANR	8402585	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402586	Identifier	pvalue		8402391	0					
ANR	8402587	Identifier	v_n		8402391	1					
ANR	8402588	Identifier	r		8402391	1					
ANR	8402589	MemberAccess	pvalue -> v_n . i		8402391	1					
ANR	8402590	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402591	Identifier	pvalue		8402391	0					
ANR	8402592	Identifier	v_n		8402391	1					
ANR	8402593	Identifier	i		8402391	1					
ANR	8402594	ExpressionStatement	parg -> have_value = 2	277:16:9373:9393	8402391	14	True				
ANR	8402595	AssignmentExpression	parg -> have_value = 2		8402391	0		=			
ANR	8402596	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402597	Identifier	parg		8402391	0					
ANR	8402598	Identifier	have_value		8402391	1					
ANR	8402599	PrimaryExpression	2		8402391	1					
ANR	8402600	ExpressionStatement	parg -> frac_scale = 1.0	278:16:9411:9433	8402391	15	True				
ANR	8402601	AssignmentExpression	parg -> frac_scale = 1.0		8402391	0		=			
ANR	8402602	PtrMemberAccess	parg -> frac_scale		8402391	0					
ANR	8402603	Identifier	parg		8402391	0					
ANR	8402604	Identifier	frac_scale		8402391	1					
ANR	8402605	PrimaryExpression	1.0		8402391	1					
ANR	8402606	BreakStatement	break ;	279:16:9451:9456	8402391	16	True				
ANR	8402607	Label	case ';' :	280:12:9470:9478	8402391	17	True				
ANR	8402608	ExpressionStatement	pst -> done = true	281:16:9496:9512	8402391	18	True				
ANR	8402609	AssignmentExpression	pst -> done = true		8402391	0		=			
ANR	8402610	PtrMemberAccess	pst -> done		8402391	0					
ANR	8402611	Identifier	pst		8402391	0					
ANR	8402612	Identifier	done		8402391	1					
ANR	8402613	Identifier	true		8402391	1					
ANR	8402614	ExpressionStatement	check_value ( )	282:16:9530:9543	8402391	19	True				
ANR	8402615	CallExpression	check_value ( )		8402391	0					
ANR	8402616	Callee	check_value		8402391	0					
ANR	8402617	Identifier	check_value		8402391	0					
ANR	8402618	ArgumentList			8402391	1					
ANR	8402619	GotoStatement	goto out ;	283:16:9561:9569	8402391	20	True				
ANR	8402620	Identifier	out		8402391	0					
ANR	8402621	Label	case HT :	284:12:9583:9590	8402391	21	True				
ANR	8402622	Identifier	HT		8402391	0					
ANR	8402623	Label	case LF :	285:12:9604:9611	8402391	22	True				
ANR	8402624	Identifier	LF		8402391	0					
ANR	8402625	Label	case FF :	286:12:9625:9632	8402391	23	True				
ANR	8402626	Identifier	FF		8402391	0					
ANR	8402627	Label	case CR :	287:12:9646:9653	8402391	24	True				
ANR	8402628	Identifier	CR		8402391	0					
ANR	8402629	ContinueStatement	continue ;	290:16:9761:9769	8402391	25	True				
ANR	8402630	Label	case SP :	291:12:9783:9790	8402391	26	True				
ANR	8402631	Identifier	SP		8402391	0					
ANR	8402632	Label	"case ',' :"	292:12:9804:9812	8402391	27	True				
ANR	8402633	IfStatement	if ( ! parg -> have_value )		8402391	28					
ANR	8402634	Condition	! parg -> have_value	297:20:9996:10012	8402391	0	True				
ANR	8402635	UnaryOperationExpression	! parg -> have_value		8402391	0					
ANR	8402636	UnaryOperator	!		8402391	0					
ANR	8402637	PtrMemberAccess	parg -> have_value		8402391	1					
ANR	8402638	Identifier	parg		8402391	0					
ANR	8402639	Identifier	have_value		8402391	1					
ANR	8402640	BreakStatement	break ;	298:20:10035:10040	8402391	1	True				
ANR	8402641	ExpressionStatement	++ p	299:16:10058:10061	8402391	29	True				
ANR	8402642	UnaryExpression	++ p		8402391	0					
ANR	8402643	IncDec	++		8402391	0					
ANR	8402644	Identifier	p		8402391	1					
ANR	8402645	Label	done :	300:14:10077:10081	8402391	30	True				
ANR	8402646	Identifier	done		8402391	0					
ANR	8402647	IfStatement	if ( parg -> sign < 0 )		8402391	31					
ANR	8402648	Condition	parg -> sign < 0	300:23:10086:10099	8402391	0	True				
ANR	8402649	RelationalExpression	parg -> sign < 0		8402391	0		<			
ANR	8402650	PtrMemberAccess	parg -> sign		8402391	0					
ANR	8402651	Identifier	parg		8402391	0					
ANR	8402652	Identifier	sign		8402391	1					
ANR	8402653	PrimaryExpression	0		8402391	1					
ANR	8402654	CompoundStatement		67:39:1967:1967	8402391	1					
ANR	8402655	IfStatement	if ( parg -> have_value > 1 )		8402391	0					
ANR	8402656	Condition	parg -> have_value > 1	301:24:10128:10147	8402391	0	True				
ANR	8402657	RelationalExpression	parg -> have_value > 1		8402391	0		>			
ANR	8402658	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402659	Identifier	parg		8402391	0					
ANR	8402660	Identifier	have_value		8402391	1					
ANR	8402661	PrimaryExpression	1		8402391	1					
ANR	8402662	ExpressionStatement	pvalue -> v_n . r = - pvalue -> v_n . r	302:24:10174:10204	8402391	1	True				
ANR	8402663	AssignmentExpression	pvalue -> v_n . r = - pvalue -> v_n . r		8402391	0		=			
ANR	8402664	MemberAccess	pvalue -> v_n . r		8402391	0					
ANR	8402665	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402666	Identifier	pvalue		8402391	0					
ANR	8402667	Identifier	v_n		8402391	1					
ANR	8402668	Identifier	r		8402391	1					
ANR	8402669	UnaryOperationExpression	- pvalue -> v_n . r		8402391	1					
ANR	8402670	UnaryOperator	-		8402391	0					
ANR	8402671	MemberAccess	pvalue -> v_n . r		8402391	1					
ANR	8402672	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402673	Identifier	pvalue		8402391	0					
ANR	8402674	Identifier	v_n		8402391	1					
ANR	8402675	Identifier	r		8402391	1					
ANR	8402676	ElseStatement	else		8402391	0					
ANR	8402677	ExpressionStatement	pvalue -> v_n . i = - pvalue -> v_n . i	304:24:10255:10285	8402391	0	True				
ANR	8402678	AssignmentExpression	pvalue -> v_n . i = - pvalue -> v_n . i		8402391	0		=			
ANR	8402679	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402680	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402681	Identifier	pvalue		8402391	0					
ANR	8402682	Identifier	v_n		8402391	1					
ANR	8402683	Identifier	i		8402391	1					
ANR	8402684	UnaryOperationExpression	- pvalue -> v_n . i		8402391	1					
ANR	8402685	UnaryOperator	-		8402391	0					
ANR	8402686	MemberAccess	pvalue -> v_n . i		8402391	1					
ANR	8402687	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402688	Identifier	pvalue		8402391	0					
ANR	8402689	Identifier	v_n		8402391	1					
ANR	8402690	Identifier	i		8402391	1					
ANR	8402691	GotoStatement	goto out ;	306:16:10321:10329	8402391	32	True				
ANR	8402692	Identifier	out		8402391	0					
ANR	8402693	Label	case '0' :	307:12:10343:10351	8402391	33	True				
ANR	8402694	Label	case '1' :	308:12:10365:10373	8402391	34	True				
ANR	8402695	Label	case '2' :	309:12:10387:10395	8402391	35	True				
ANR	8402696	Label	case '3' :	310:12:10409:10417	8402391	36	True				
ANR	8402697	Label	case '4' :	311:12:10431:10439	8402391	37	True				
ANR	8402698	Label	case '5' :	312:12:10453:10461	8402391	38	True				
ANR	8402699	Label	case '6' :	313:12:10475:10483	8402391	39	True				
ANR	8402700	Label	case '7' :	314:12:10497:10505	8402391	40	True				
ANR	8402701	Label	case '8' :	315:12:10519:10527	8402391	41	True				
ANR	8402702	Label	case '9' :	316:12:10541:10549	8402391	42	True				
ANR	8402703	ExpressionStatement	ch -= '0'	317:16:10567:10576	8402391	43	True				
ANR	8402704	AssignmentExpression	ch -= '0'		8402391	0		-=			
ANR	8402705	Identifier	ch		8402391	0					
ANR	8402706	PrimaryExpression	'0'		8402391	1					
ANR	8402707	Statement	define	318:1:10579:10584	8402391	44	True				
ANR	8402708	Statement	max_i	318:8:10586:10590	8402391	45	True				
ANR	8402709	Statement	0x7fffffff	318:14:10592:10601	8402391	46	True				
ANR	8402710	SwitchStatement	switch ( parg -> have_value )		8402391	47					
ANR	8402711	Condition	parg -> have_value	319:24:10627:10642	8402391	0	True				
ANR	8402712	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402713	Identifier	parg		8402391	0					
ANR	8402714	Identifier	have_value		8402391	1					
ANR	8402715	CompoundStatement		86:42:2510:2510	8402391	1					
ANR	8402716	Label	default :	320:20:10667:10674	8402391	0	True				
ANR	8402717	Identifier	default		8402391	0					
ANR	8402718	ExpressionStatement	pvalue -> v_n . r += ch / ( parg -> frac_scale *= 10 )	321:24:10715:10761	8402391	1	True				
ANR	8402719	AssignmentExpression	pvalue -> v_n . r += ch / ( parg -> frac_scale *= 10 )		8402391	0		+=			
ANR	8402720	MemberAccess	pvalue -> v_n . r		8402391	0					
ANR	8402721	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402722	Identifier	pvalue		8402391	0					
ANR	8402723	Identifier	v_n		8402391	1					
ANR	8402724	Identifier	r		8402391	1					
ANR	8402725	MultiplicativeExpression	ch / ( parg -> frac_scale *= 10 )		8402391	1		/			
ANR	8402726	Identifier	ch		8402391	0					
ANR	8402727	AssignmentExpression	parg -> frac_scale *= 10		8402391	1		*=			
ANR	8402728	PtrMemberAccess	parg -> frac_scale		8402391	0					
ANR	8402729	Identifier	parg		8402391	0					
ANR	8402730	Identifier	frac_scale		8402391	1					
ANR	8402731	PrimaryExpression	10		8402391	1					
ANR	8402732	BreakStatement	break ;	322:24:10787:10792	8402391	2	True				
ANR	8402733	Label	case 0 :	323:20:10814:10820	8402391	3	True				
ANR	8402734	ExpressionStatement	parg -> have_value = 1	324:24:10846:10866	8402391	4	True				
ANR	8402735	AssignmentExpression	parg -> have_value = 1		8402391	0		=			
ANR	8402736	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402737	Identifier	parg		8402391	0					
ANR	8402738	Identifier	have_value		8402391	1					
ANR	8402739	PrimaryExpression	1		8402391	1					
ANR	8402740	ExpressionStatement	pvalue -> v_n . i = ch	325:24:10892:10910	8402391	5	True				
ANR	8402741	AssignmentExpression	pvalue -> v_n . i = ch		8402391	0		=			
ANR	8402742	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402743	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402744	Identifier	pvalue		8402391	0					
ANR	8402745	Identifier	v_n		8402391	1					
ANR	8402746	Identifier	i		8402391	1					
ANR	8402747	Identifier	ch		8402391	1					
ANR	8402748	BreakStatement	break ;	326:24:10936:10941	8402391	6	True				
ANR	8402749	Label	case 1 :	327:20:10963:10969	8402391	7	True				
ANR	8402750	IfStatement	if ( pvalue -> v_n . i >= max_i / 10 && ( pvalue -> v_n . i > max_i / 10 || ch > max_i % 10 ) )		8402391	8					
ANR	8402751	Condition	pvalue -> v_n . i >= max_i / 10 && ( pvalue -> v_n . i > max_i / 10 || ch > max_i % 10 )	328:28:10999:11104	8402391	0	True				
ANR	8402752	AndExpression	pvalue -> v_n . i >= max_i / 10 && ( pvalue -> v_n . i > max_i / 10 || ch > max_i % 10 )		8402391	0		&&			
ANR	8402753	RelationalExpression	pvalue -> v_n . i >= max_i / 10		8402391	0		>=			
ANR	8402754	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402755	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402756	Identifier	pvalue		8402391	0					
ANR	8402757	Identifier	v_n		8402391	1					
ANR	8402758	Identifier	i		8402391	1					
ANR	8402759	MultiplicativeExpression	max_i / 10		8402391	1		/			
ANR	8402760	Identifier	max_i		8402391	0					
ANR	8402761	PrimaryExpression	10		8402391	1					
ANR	8402762	OrExpression	pvalue -> v_n . i > max_i / 10 || ch > max_i % 10		8402391	1		||			
ANR	8402763	RelationalExpression	pvalue -> v_n . i > max_i / 10		8402391	0		>			
ANR	8402764	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402765	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402766	Identifier	pvalue		8402391	0					
ANR	8402767	Identifier	v_n		8402391	1					
ANR	8402768	Identifier	i		8402391	1					
ANR	8402769	MultiplicativeExpression	max_i / 10		8402391	1		/			
ANR	8402770	Identifier	max_i		8402391	0					
ANR	8402771	PrimaryExpression	10		8402391	1					
ANR	8402772	RelationalExpression	ch > max_i % 10		8402391	1		>			
ANR	8402773	Identifier	ch		8402391	0					
ANR	8402774	MultiplicativeExpression	max_i % 10		8402391	1		%			
ANR	8402775	Identifier	max_i		8402391	0					
ANR	8402776	PrimaryExpression	10		8402391	1					
ANR	8402777	ReturnStatement	return NULL ;	331:28:11164:11175	8402391	1	True				
ANR	8402778	Identifier	NULL		8402391	0					
ANR	8402779	ElseStatement	else		8402391	0					
ANR	8402780	ExpressionStatement	pvalue -> v_n . i = pvalue -> v_n . i * 10 + ch	333:28:11234:11273	8402391	0	True				
ANR	8402781	AssignmentExpression	pvalue -> v_n . i = pvalue -> v_n . i * 10 + ch		8402391	0		=			
ANR	8402782	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402783	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402784	Identifier	pvalue		8402391	0					
ANR	8402785	Identifier	v_n		8402391	1					
ANR	8402786	Identifier	i		8402391	1					
ANR	8402787	AdditiveExpression	pvalue -> v_n . i * 10 + ch		8402391	1		+			
ANR	8402788	MultiplicativeExpression	pvalue -> v_n . i * 10		8402391	0		*			
ANR	8402789	MemberAccess	pvalue -> v_n . i		8402391	0					
ANR	8402790	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402791	Identifier	pvalue		8402391	0					
ANR	8402792	Identifier	v_n		8402391	1					
ANR	8402793	Identifier	i		8402391	1					
ANR	8402794	PrimaryExpression	10		8402391	1					
ANR	8402795	Identifier	ch		8402391	1					
ANR	8402796	BreakStatement	break ;	335:16:11309:11314	8402391	48	True				
ANR	8402797	Label	default :	336:12:11328:11335	8402391	49	True				
ANR	8402798	Identifier	default		8402391	0					
ANR	8402799	ExpressionStatement	pst -> done = true	337:16:11353:11369	8402391	50	True				
ANR	8402800	AssignmentExpression	pst -> done = true		8402391	0		=			
ANR	8402801	PtrMemberAccess	pst -> done		8402391	0					
ANR	8402802	Identifier	pst		8402391	0					
ANR	8402803	Identifier	done		8402391	1					
ANR	8402804	Identifier	true		8402391	1					
ANR	8402805	ExpressionStatement	check_value ( )	338:16:11387:11400	8402391	51	True				
ANR	8402806	CallExpression	check_value ( )		8402391	0					
ANR	8402807	Callee	check_value		8402391	0					
ANR	8402808	Identifier	check_value		8402391	0					
ANR	8402809	ArgumentList			8402391	1					
ANR	8402810	GotoStatement	goto out ;	339:16:11418:11426	8402391	52	True				
ANR	8402811	Identifier	out		8402391	0					
ANR	8402812	ExpressionStatement	pst -> source . ptr = p	343:4:11507:11526	8402391	23	True				
ANR	8402813	AssignmentExpression	pst -> source . ptr = p		8402391	0		=			
ANR	8402814	MemberAccess	pst -> source . ptr		8402391	0					
ANR	8402815	PtrMemberAccess	pst -> source		8402391	0					
ANR	8402816	Identifier	pst		8402391	0					
ANR	8402817	Identifier	source		8402391	1					
ANR	8402818	Identifier	ptr		8402391	1					
ANR	8402819	Identifier	p		8402391	1					
ANR	8402820	ExpressionStatement	"longjmp ( * ( pst -> exit_to_parser ) , gs_error_NeedInput )"	344:4:11532:11583	8402391	24	True				
ANR	8402821	CallExpression	"longjmp ( * ( pst -> exit_to_parser ) , gs_error_NeedInput )"		8402391	0					
ANR	8402822	Callee	longjmp		8402391	0					
ANR	8402823	Identifier	longjmp		8402391	0					
ANR	8402824	ArgumentList	* ( pst -> exit_to_parser )		8402391	1					
ANR	8402825	Argument	* ( pst -> exit_to_parser )		8402391	0					
ANR	8402826	UnaryOperationExpression	* ( pst -> exit_to_parser )		8402391	0					
ANR	8402827	UnaryOperator	*		8402391	0					
ANR	8402828	PtrMemberAccess	pst -> exit_to_parser		8402391	1					
ANR	8402829	Identifier	pst		8402391	0					
ANR	8402830	Identifier	exit_to_parser		8402391	1					
ANR	8402831	Argument	gs_error_NeedInput		8402391	1					
ANR	8402832	Identifier	gs_error_NeedInput		8402391	0					
ANR	8402833	Label	out :	346:2:11608:11611	8402391	25	True				
ANR	8402834	Identifier	out		8402391	0					
ANR	8402835	ExpressionStatement	pst -> source . ptr = p	346:6:11612:11631	8402391	26	True				
ANR	8402836	AssignmentExpression	pst -> source . ptr = p		8402391	0		=			
ANR	8402837	MemberAccess	pst -> source . ptr		8402391	0					
ANR	8402838	PtrMemberAccess	pst -> source		8402391	0					
ANR	8402839	Identifier	pst		8402391	0					
ANR	8402840	Identifier	source		8402391	1					
ANR	8402841	Identifier	ptr		8402391	1					
ANR	8402842	Identifier	p		8402391	1					
ANR	8402843	SwitchStatement	switch ( parg -> have_value )		8402391	27					
ANR	8402844	Condition	parg -> have_value	347:12:11645:11660	8402391	0	True				
ANR	8402845	PtrMemberAccess	parg -> have_value		8402391	0					
ANR	8402846	Identifier	parg		8402391	0					
ANR	8402847	Identifier	have_value		8402391	1					
ANR	8402848	CompoundStatement		114:30:3528:3528	8402391	1					
ANR	8402849	Label	case 0 :	348:8:11673:11679	8402391	0	True				
ANR	8402850	ReturnStatement	return NULL ;	349:12:11726:11737	8402391	1	True				
ANR	8402851	Identifier	NULL		8402391	0					
ANR	8402852	Label	case 1 :	350:8:11747:11753	8402391	2	True				
ANR	8402853	ExpressionStatement	"if_debug1m ( 'i' , mem , ""  %ld"" , ( long ) pvalue -> v_n . i )"	351:12:11796:11846	8402391	3	True				
ANR	8402854	CallExpression	"if_debug1m ( 'i' , mem , ""  %ld"" , ( long ) pvalue -> v_n . i )"		8402391	0					
ANR	8402855	Callee	if_debug1m		8402391	0					
ANR	8402856	Identifier	if_debug1m		8402391	0					
ANR	8402857	ArgumentList	'i'		8402391	1					
ANR	8402858	Argument	'i'		8402391	0					
ANR	8402859	PrimaryExpression	'i'		8402391	0					
ANR	8402860	Argument	mem		8402391	1					
ANR	8402861	Identifier	mem		8402391	0					
ANR	8402862	Argument	"""  %ld"""		8402391	2					
ANR	8402863	PrimaryExpression	"""  %ld"""		8402391	0					
ANR	8402864	Argument	( long ) pvalue -> v_n . i		8402391	3					
ANR	8402865	CastExpression	( long ) pvalue -> v_n . i		8402391	0					
ANR	8402866	CastTarget	long		8402391	0					
ANR	8402867	MemberAccess	pvalue -> v_n . i		8402391	1					
ANR	8402868	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402869	Identifier	pvalue		8402391	0					
ANR	8402870	Identifier	v_n		8402391	1					
ANR	8402871	Identifier	i		8402391	1					
ANR	8402872	ExpressionStatement	pvalue -> is_real = false	352:12:11860:11883	8402391	4	True				
ANR	8402873	AssignmentExpression	pvalue -> is_real = false		8402391	0		=			
ANR	8402874	PtrMemberAccess	pvalue -> is_real		8402391	0					
ANR	8402875	Identifier	pvalue		8402391	0					
ANR	8402876	Identifier	is_real		8402391	1					
ANR	8402877	Identifier	false		8402391	1					
ANR	8402878	BreakStatement	break ;	353:12:11897:11902	8402391	5	True				
ANR	8402879	Label	default :	354:8:11912:11933	8402391	6	True				
ANR	8402880	Identifier	default		8402391	0					
ANR	8402881	ExpressionStatement	"if_debug1m ( 'i' , mem , ""  %g"" , pvalue -> v_n . r )"	355:12:11958:12001	8402391	7	True				
ANR	8402882	CallExpression	"if_debug1m ( 'i' , mem , ""  %g"" , pvalue -> v_n . r )"		8402391	0					
ANR	8402883	Callee	if_debug1m		8402391	0					
ANR	8402884	Identifier	if_debug1m		8402391	0					
ANR	8402885	ArgumentList	'i'		8402391	1					
ANR	8402886	Argument	'i'		8402391	0					
ANR	8402887	PrimaryExpression	'i'		8402391	0					
ANR	8402888	Argument	mem		8402391	1					
ANR	8402889	Identifier	mem		8402391	0					
ANR	8402890	Argument	"""  %g"""		8402391	2					
ANR	8402891	PrimaryExpression	"""  %g"""		8402391	0					
ANR	8402892	Argument	pvalue -> v_n . r		8402391	3					
ANR	8402893	MemberAccess	pvalue -> v_n . r		8402391	0					
ANR	8402894	PtrMemberAccess	pvalue -> v_n		8402391	0					
ANR	8402895	Identifier	pvalue		8402391	0					
ANR	8402896	Identifier	v_n		8402391	1					
ANR	8402897	Identifier	r		8402391	1					
ANR	8402898	ExpressionStatement	pvalue -> is_real = true	356:12:12015:12037	8402391	8	True				
ANR	8402899	AssignmentExpression	pvalue -> is_real = true		8402391	0		=			
ANR	8402900	PtrMemberAccess	pvalue -> is_real		8402391	0					
ANR	8402901	Identifier	pvalue		8402391	0					
ANR	8402902	Identifier	is_real		8402391	1					
ANR	8402903	Identifier	true		8402391	1					
ANR	8402904	ExpressionStatement	hpgl_arg_init ( pst )	358:4:12049:12067	8402391	28	True				
ANR	8402905	CallExpression	hpgl_arg_init ( pst )		8402391	0					
ANR	8402906	Callee	hpgl_arg_init		8402391	0					
ANR	8402907	Identifier	hpgl_arg_init		8402391	0					
ANR	8402908	ArgumentList	pst		8402391	1					
ANR	8402909	Argument	pst		8402391	0					
ANR	8402910	Identifier	pst		8402391	0					
ANR	8402911	ExpressionStatement	parg -> next = ++ ( parg -> count )	359:4:12073:12101	8402391	29	True				
ANR	8402912	AssignmentExpression	parg -> next = ++ ( parg -> count )		8402391	0		=			
ANR	8402913	PtrMemberAccess	parg -> next		8402391	0					
ANR	8402914	Identifier	parg		8402391	0					
ANR	8402915	Identifier	next		8402391	1					
ANR	8402916	UnaryExpression	++ ( parg -> count )		8402391	1					
ANR	8402917	IncDec	++		8402391	0					
ANR	8402918	PtrMemberAccess	parg -> count		8402391	1					
ANR	8402919	Identifier	parg		8402391	0					
ANR	8402920	Identifier	count		8402391	1					
ANR	8402921	ReturnStatement	return pvalue ;	360:4:12107:12120	8402391	30	True				
ANR	8402922	Identifier	pvalue		8402391	0					
ANR	8402923	Statement	undef	361:1:12123:12127	8402391	31	True				
ANR	8402924	Statement	parg	361:7:12129:12132	8402391	32	True				
ANR	8402925	ReturnType	static const hpgl_value_t *		8402391	1					
ANR	8402926	Identifier	hpgl_arg		8402391	2					
ANR	8402927	ParameterList	"const gs_memory_t * mem , hpgl_parser_state_t * pst"		8402391	3					
ANR	8402928	Parameter	const gs_memory_t * mem	233:9:8082:8104	8402391	0	True				
ANR	8402929	ParameterType	const gs_memory_t *		8402391	0					
ANR	8402930	Identifier	mem		8402391	1					
ANR	8402931	Parameter	hpgl_parser_state_t * pst	233:34:8107:8131	8402391	1	True				
ANR	8402932	ParameterType	hpgl_parser_state_t *		8402391	0					
ANR	8402933	Identifier	pst		8402391	1					
ANR	8402934	CFGEntryNode	ENTRY		8402391		True				
ANR	8402935	CFGExitNode	EXIT		8402391		True				
ANR	8402936	Symbol	* ( pst -> exit_to_parser )		8402391						
ANR	8402937	Symbol	parg -> scanned		8402391						
ANR	8402938	Symbol	pvalue -> v_n . i		8402391						
ANR	8402939	Symbol	pvalue		8402391						
ANR	8402940	Symbol	pst -> source . limit		8402391						
ANR	8402941	Symbol	pst -> source		8402391						
ANR	8402942	Symbol	parg -> frac_scale		8402391						
ANR	8402943	Symbol	pst		8402391						
ANR	8402944	Symbol	parg		8402391						
ANR	8402945	Symbol	parg -> sign		8402391						
ANR	8402946	Symbol	mem		8402391						
ANR	8402947	Symbol	pst -> exit_to_parser		8402391						
ANR	8402948	Symbol	parg -> have_value		8402391						
ANR	8402949	Symbol	pvalue -> v_n . r		8402391						
ANR	8402950	Symbol	rlimit		8402391						
ANR	8402951	Symbol	max_i		8402391						
ANR	8402952	Symbol	NULL		8402391						
ANR	8402953	Symbol	ch		8402391						
ANR	8402954	Symbol	* * pst		8402391						
ANR	8402955	Symbol	pst -> done		8402391						
ANR	8402956	Symbol	false		8402391						
ANR	8402957	Symbol	pvalue -> is_real		8402391						
ANR	8402958	Symbol	p		8402391						
ANR	8402959	Symbol	* pvalue		8402391						
ANR	8402960	Symbol	parg -> count		8402391						
ANR	8402961	Symbol	pvalue -> v_n		8402391						
ANR	8402962	Symbol	parg -> next		8402391						
ANR	8402963	Symbol	pst -> source . ptr		8402391						
ANR	8402964	Symbol	true		8402391						
ANR	8402965	Symbol	* p		8402391						
ANR	8402966	Symbol	* pst		8402391						
ANR	8402967	Symbol	gs_error_NeedInput		8402391						
ANR	8402968	Symbol	* pst -> exit_to_parser		8402391						
ANR	8402969	Symbol	* parg		8402391						
ANR	8402970	Function	hpgl_arg_real	365:0:12164:12422							
ANR	8402971	FunctionDef	"hpgl_arg_real (const gs_memory_t * mem , hpgl_args_t * pargs , hpgl_real_t * pr)"		8402970	0					
ANR	8402972	CompoundStatement		367:0:12247:12422	8402970	0					
ANR	8402973	IdentifierDeclStatement	"const hpgl_value_t * pvalue = hpgl_arg ( mem , pargs ) ;"	368:4:12253:12302	8402970	0	True				
ANR	8402974	IdentifierDecl	"* pvalue = hpgl_arg ( mem , pargs )"		8402970	0					
ANR	8402975	IdentifierDeclType	const hpgl_value_t *		8402970	0					
ANR	8402976	Identifier	pvalue		8402970	1					
ANR	8402977	AssignmentExpression	"* pvalue = hpgl_arg ( mem , pargs )"		8402970	2		=			
ANR	8402978	Identifier	pvalue		8402970	0					
ANR	8402979	CallExpression	"hpgl_arg ( mem , pargs )"		8402970	1					
ANR	8402980	Callee	hpgl_arg		8402970	0					
ANR	8402981	Identifier	hpgl_arg		8402970	0					
ANR	8402982	ArgumentList	mem		8402970	1					
ANR	8402983	Argument	mem		8402970	0					
ANR	8402984	Identifier	mem		8402970	0					
ANR	8402985	Argument	pargs		8402970	1					
ANR	8402986	Identifier	pargs		8402970	0					
ANR	8402987	IfStatement	if ( ! pvalue )		8402970	1					
ANR	8402988	Condition	! pvalue	370:8:12313:12319	8402970	0	True				
ANR	8402989	UnaryOperationExpression	! pvalue		8402970	0					
ANR	8402990	UnaryOperator	!		8402970	0					
ANR	8402991	Identifier	pvalue		8402970	1					
ANR	8402992	ReturnStatement	return false ;	371:8:12330:12342	8402970	1	True				
ANR	8402993	Identifier	false		8402970	0					
ANR	8402994	ExpressionStatement	* pr = ( pvalue -> is_real ? pvalue -> v_n . r : pvalue -> v_n . i )	372:4:12348:12403	8402970	2	True				
ANR	8402995	AssignmentExpression	* pr = ( pvalue -> is_real ? pvalue -> v_n . r : pvalue -> v_n . i )		8402970	0		=			
ANR	8402996	UnaryOperationExpression	* pr		8402970	0					
ANR	8402997	UnaryOperator	*		8402970	0					
ANR	8402998	Identifier	pr		8402970	1					
ANR	8402999	ConditionalExpression	pvalue -> is_real ? pvalue -> v_n . r : pvalue -> v_n . i		8402970	1					
ANR	8403000	Condition	pvalue -> is_real		8402970	0					
ANR	8403001	PtrMemberAccess	pvalue -> is_real		8402970	0					
ANR	8403002	Identifier	pvalue		8402970	0					
ANR	8403003	Identifier	is_real		8402970	1					
ANR	8403004	MemberAccess	pvalue -> v_n . r		8402970	1					
ANR	8403005	PtrMemberAccess	pvalue -> v_n		8402970	0					
ANR	8403006	Identifier	pvalue		8402970	0					
ANR	8403007	Identifier	v_n		8402970	1					
ANR	8403008	Identifier	r		8402970	1					
ANR	8403009	MemberAccess	pvalue -> v_n . i		8402970	2					
ANR	8403010	PtrMemberAccess	pvalue -> v_n		8402970	0					
ANR	8403011	Identifier	pvalue		8402970	0					
ANR	8403012	Identifier	v_n		8402970	1					
ANR	8403013	Identifier	i		8402970	1					
ANR	8403014	ReturnStatement	return true ;	373:4:12409:12420	8402970	3	True				
ANR	8403015	Identifier	true		8402970	0					
ANR	8403016	ReturnType	bool		8402970	1					
ANR	8403017	Identifier	hpgl_arg_real		8402970	2					
ANR	8403018	ParameterList	"const gs_memory_t * mem , hpgl_args_t * pargs , hpgl_real_t * pr"		8402970	3					
ANR	8403019	Parameter	const gs_memory_t * mem	366:14:12183:12205	8402970	0	True				
ANR	8403020	ParameterType	const gs_memory_t *		8402970	0					
ANR	8403021	Identifier	mem		8402970	1					
ANR	8403022	Parameter	hpgl_args_t * pargs	366:39:12208:12226	8402970	1	True				
ANR	8403023	ParameterType	hpgl_args_t *		8402970	0					
ANR	8403024	Identifier	pargs		8402970	1					
ANR	8403025	Parameter	hpgl_real_t * pr	366:60:12229:12244	8402970	2	True				
ANR	8403026	ParameterType	hpgl_real_t *		8402970	0					
ANR	8403027	Identifier	pr		8402970	1					
ANR	8403028	CFGEntryNode	ENTRY		8402970		True				
ANR	8403029	CFGExitNode	EXIT		8402970		True				
ANR	8403030	Symbol	pr		8402970						
ANR	8403031	Symbol	pvalue -> v_n . i		8402970						
ANR	8403032	Symbol	false		8402970						
ANR	8403033	Symbol	pvalue		8402970						
ANR	8403034	Symbol	* pr		8402970						
ANR	8403035	Symbol	pvalue -> is_real		8402970						
ANR	8403036	Symbol	hpgl_arg		8402970						
ANR	8403037	Symbol	* pvalue		8402970						
ANR	8403038	Symbol	mem		8402970						
ANR	8403039	Symbol	pvalue -> v_n		8402970						
ANR	8403040	Symbol	pargs		8402970						
ANR	8403041	Symbol	true		8402970						
ANR	8403042	Symbol	pvalue -> v_n . r		8402970						
ANR	8403043	Function	hpgl_arg_c_real	377:0:12460:12811							
ANR	8403044	FunctionDef	"hpgl_arg_c_real (const gs_memory_t * mem , hpgl_args_t * pargs , hpgl_real_t * pr)"		8403043	0					
ANR	8403045	CompoundStatement		380:0:12561:12811	8403043	0					
ANR	8403046	IdentifierDeclStatement	"const hpgl_value_t * pvalue = hpgl_arg ( mem , pargs ) ;"	381:4:12567:12616	8403043	0	True				
ANR	8403047	IdentifierDecl	"* pvalue = hpgl_arg ( mem , pargs )"		8403043	0					
ANR	8403048	IdentifierDeclType	const hpgl_value_t *		8403043	0					
ANR	8403049	Identifier	pvalue		8403043	1					
ANR	8403050	AssignmentExpression	"* pvalue = hpgl_arg ( mem , pargs )"		8403043	2		=			
ANR	8403051	Identifier	pvalue		8403043	0					
ANR	8403052	CallExpression	"hpgl_arg ( mem , pargs )"		8403043	1					
ANR	8403053	Callee	hpgl_arg		8403043	0					
ANR	8403054	Identifier	hpgl_arg		8403043	0					
ANR	8403055	ArgumentList	mem		8403043	1					
ANR	8403056	Argument	mem		8403043	0					
ANR	8403057	Identifier	mem		8403043	0					
ANR	8403058	Argument	pargs		8403043	1					
ANR	8403059	Identifier	pargs		8403043	0					
ANR	8403060	IdentifierDeclStatement	hpgl_real_t r ;	382:4:12622:12635	8403043	1	True				
ANR	8403061	IdentifierDecl	r		8403043	0					
ANR	8403062	IdentifierDeclType	hpgl_real_t		8403043	0					
ANR	8403063	Identifier	r		8403043	1					
ANR	8403064	IfStatement	if ( ! pvalue )		8403043	2					
ANR	8403065	Condition	! pvalue	384:8:12646:12652	8403043	0	True				
ANR	8403066	UnaryOperationExpression	! pvalue		8403043	0					
ANR	8403067	UnaryOperator	!		8403043	0					
ANR	8403068	Identifier	pvalue		8403043	1					
ANR	8403069	ReturnStatement	return false ;	385:8:12663:12675	8403043	1	True				
ANR	8403070	Identifier	false		8403043	0					
ANR	8403071	ExpressionStatement	r = ( pvalue -> is_real ? pvalue -> v_n . r : pvalue -> v_n . i )	386:4:12681:12734	8403043	3	True				
ANR	8403072	AssignmentExpression	r = ( pvalue -> is_real ? pvalue -> v_n . r : pvalue -> v_n . i )		8403043	0		=			
ANR	8403073	Identifier	r		8403043	0					
ANR	8403074	ConditionalExpression	pvalue -> is_real ? pvalue -> v_n . r : pvalue -> v_n . i		8403043	1					
ANR	8403075	Condition	pvalue -> is_real		8403043	0					
ANR	8403076	PtrMemberAccess	pvalue -> is_real		8403043	0					
ANR	8403077	Identifier	pvalue		8403043	0					
ANR	8403078	Identifier	is_real		8403043	1					
ANR	8403079	MemberAccess	pvalue -> v_n . r		8403043	1					
ANR	8403080	PtrMemberAccess	pvalue -> v_n		8403043	0					
ANR	8403081	Identifier	pvalue		8403043	0					
ANR	8403082	Identifier	v_n		8403043	1					
ANR	8403083	Identifier	r		8403043	1					
ANR	8403084	MemberAccess	pvalue -> v_n . i		8403043	2					
ANR	8403085	PtrMemberAccess	pvalue -> v_n		8403043	0					
ANR	8403086	Identifier	pvalue		8403043	0					
ANR	8403087	Identifier	v_n		8403043	1					
ANR	8403088	Identifier	i		8403043	1					
ANR	8403089	ExpressionStatement	* pr = ( r < - 32768 ? - 32768 : r > 32767 ? 32767 : r )	387:4:12740:12791	8403043	4	True				
ANR	8403090	AssignmentExpression	* pr = ( r < - 32768 ? - 32768 : r > 32767 ? 32767 : r )		8403043	0		=			
ANR	8403091	UnaryOperationExpression	* pr		8403043	0					
ANR	8403092	UnaryOperator	*		8403043	0					
ANR	8403093	Identifier	pr		8403043	1					
ANR	8403094	ConditionalExpression	r < - 32768 ? - 32768 : r > 32767 ? 32767 : r		8403043	1					
ANR	8403095	Condition	r < - 32768		8403043	0					
ANR	8403096	RelationalExpression	r < - 32768		8403043	0		<			
ANR	8403097	Identifier	r		8403043	0					
ANR	8403098	UnaryOperationExpression	- 32768		8403043	1					
ANR	8403099	UnaryOperator	-		8403043	0					
ANR	8403100	PrimaryExpression	32768		8403043	1					
ANR	8403101	UnaryOperationExpression	- 32768		8403043	1					
ANR	8403102	UnaryOperator	-		8403043	0					
ANR	8403103	PrimaryExpression	32768		8403043	1					
ANR	8403104	ConditionalExpression	r > 32767 ? 32767 : r		8403043	2					
ANR	8403105	Condition	r > 32767		8403043	0					
ANR	8403106	RelationalExpression	r > 32767		8403043	0		>			
ANR	8403107	Identifier	r		8403043	0					
ANR	8403108	PrimaryExpression	32767		8403043	1					
ANR	8403109	PrimaryExpression	32767		8403043	1					
ANR	8403110	Identifier	r		8403043	2					
ANR	8403111	ReturnStatement	return true ;	388:4:12797:12808	8403043	5	True				
ANR	8403112	Identifier	true		8403043	0					
ANR	8403113	ReturnType	bool		8403043	1					
ANR	8403114	Identifier	hpgl_arg_c_real		8403043	2					
ANR	8403115	ParameterList	"const gs_memory_t * mem , hpgl_args_t * pargs , hpgl_real_t * pr"		8403043	3					
ANR	8403116	Parameter	const gs_memory_t * mem	378:16:12481:12503	8403043	0	True				
ANR	8403117	ParameterType	const gs_memory_t *		8403043	0					
ANR	8403118	Identifier	mem		8403043	1					
ANR	8403119	Parameter	hpgl_args_t * pargs	379:16:12522:12540	8403043	1	True				
ANR	8403120	ParameterType	hpgl_args_t *		8403043	0					
ANR	8403121	Identifier	pargs		8403043	1					
ANR	8403122	Parameter	hpgl_real_t * pr	379:37:12543:12558	8403043	2	True				
ANR	8403123	ParameterType	hpgl_real_t *		8403043	0					
ANR	8403124	Identifier	pr		8403043	1					
ANR	8403125	CFGEntryNode	ENTRY		8403043		True				
ANR	8403126	CFGExitNode	EXIT		8403043		True				
ANR	8403127	Symbol	pr		8403043						
ANR	8403128	Symbol	pvalue -> v_n . i		8403043						
ANR	8403129	Symbol	false		8403043						
ANR	8403130	Symbol	pvalue		8403043						
ANR	8403131	Symbol	* pr		8403043						
ANR	8403132	Symbol	pvalue -> is_real		8403043						
ANR	8403133	Symbol	hpgl_arg		8403043						
ANR	8403134	Symbol	r		8403043						
ANR	8403135	Symbol	* pvalue		8403043						
ANR	8403136	Symbol	mem		8403043						
ANR	8403137	Symbol	pvalue -> v_n		8403043						
ANR	8403138	Symbol	pargs		8403043						
ANR	8403139	Symbol	true		8403043						
ANR	8403140	Symbol	pvalue -> v_n . r		8403043						
ANR	8403141	Function	hpgl_arg_int	393:0:12845:13104							
ANR	8403142	FunctionDef	"hpgl_arg_int (const gs_memory_t * mem , hpgl_args_t * pargs , int32 * pi)"		8403141	0					
ANR	8403143	CompoundStatement		395:0:12921:13104	8403141	0					
ANR	8403144	IdentifierDeclStatement	"const hpgl_value_t * pvalue = hpgl_arg ( mem , pargs ) ;"	396:4:12927:12976	8403141	0	True				
ANR	8403145	IdentifierDecl	"* pvalue = hpgl_arg ( mem , pargs )"		8403141	0					
ANR	8403146	IdentifierDeclType	const hpgl_value_t *		8403141	0					
ANR	8403147	Identifier	pvalue		8403141	1					
ANR	8403148	AssignmentExpression	"* pvalue = hpgl_arg ( mem , pargs )"		8403141	2		=			
ANR	8403149	Identifier	pvalue		8403141	0					
ANR	8403150	CallExpression	"hpgl_arg ( mem , pargs )"		8403141	1					
ANR	8403151	Callee	hpgl_arg		8403141	0					
ANR	8403152	Identifier	hpgl_arg		8403141	0					
ANR	8403153	ArgumentList	mem		8403141	1					
ANR	8403154	Argument	mem		8403141	0					
ANR	8403155	Identifier	mem		8403141	0					
ANR	8403156	Argument	pargs		8403141	1					
ANR	8403157	Identifier	pargs		8403141	0					
ANR	8403158	IfStatement	if ( ! pvalue )		8403141	1					
ANR	8403159	Condition	! pvalue	398:8:12987:12993	8403141	0	True				
ANR	8403160	UnaryOperationExpression	! pvalue		8403141	0					
ANR	8403161	UnaryOperator	!		8403141	0					
ANR	8403162	Identifier	pvalue		8403141	1					
ANR	8403163	ReturnStatement	return false ;	399:8:13004:13016	8403141	1	True				
ANR	8403164	Identifier	false		8403141	0					
ANR	8403165	ExpressionStatement	* pi = ( pvalue -> is_real ? ( int32 ) pvalue -> v_n . r : pvalue -> v_n . i )	400:4:13022:13085	8403141	2	True				
ANR	8403166	AssignmentExpression	* pi = ( pvalue -> is_real ? ( int32 ) pvalue -> v_n . r : pvalue -> v_n . i )		8403141	0		=			
ANR	8403167	UnaryOperationExpression	* pi		8403141	0					
ANR	8403168	UnaryOperator	*		8403141	0					
ANR	8403169	Identifier	pi		8403141	1					
ANR	8403170	ConditionalExpression	pvalue -> is_real ? ( int32 ) pvalue -> v_n . r : pvalue -> v_n . i		8403141	1					
ANR	8403171	Condition	pvalue -> is_real		8403141	0					
ANR	8403172	PtrMemberAccess	pvalue -> is_real		8403141	0					
ANR	8403173	Identifier	pvalue		8403141	0					
ANR	8403174	Identifier	is_real		8403141	1					
ANR	8403175	CastExpression	( int32 ) pvalue -> v_n . r		8403141	1					
ANR	8403176	CastTarget	int32		8403141	0					
ANR	8403177	MemberAccess	pvalue -> v_n . r		8403141	1					
ANR	8403178	PtrMemberAccess	pvalue -> v_n		8403141	0					
ANR	8403179	Identifier	pvalue		8403141	0					
ANR	8403180	Identifier	v_n		8403141	1					
ANR	8403181	Identifier	r		8403141	1					
ANR	8403182	MemberAccess	pvalue -> v_n . i		8403141	2					
ANR	8403183	PtrMemberAccess	pvalue -> v_n		8403141	0					
ANR	8403184	Identifier	pvalue		8403141	0					
ANR	8403185	Identifier	v_n		8403141	1					
ANR	8403186	Identifier	i		8403141	1					
ANR	8403187	ReturnStatement	return true ;	401:4:13091:13102	8403141	3	True				
ANR	8403188	Identifier	true		8403141	0					
ANR	8403189	ReturnType	bool		8403141	1					
ANR	8403190	Identifier	hpgl_arg_int		8403141	2					
ANR	8403191	ParameterList	"const gs_memory_t * mem , hpgl_args_t * pargs , int32 * pi"		8403141	3					
ANR	8403192	Parameter	const gs_memory_t * mem	394:13:12863:12885	8403141	0	True				
ANR	8403193	ParameterType	const gs_memory_t *		8403141	0					
ANR	8403194	Identifier	mem		8403141	1					
ANR	8403195	Parameter	hpgl_args_t * pargs	394:38:12888:12906	8403141	1	True				
ANR	8403196	ParameterType	hpgl_args_t *		8403141	0					
ANR	8403197	Identifier	pargs		8403141	1					
ANR	8403198	Parameter	int32 * pi	394:59:12909:12918	8403141	2	True				
ANR	8403199	ParameterType	int32 *		8403141	0					
ANR	8403200	Identifier	pi		8403141	1					
ANR	8403201	CFGEntryNode	ENTRY		8403141		True				
ANR	8403202	CFGExitNode	EXIT		8403141		True				
ANR	8403203	Symbol	pvalue -> v_n . i		8403141						
ANR	8403204	Symbol	false		8403141						
ANR	8403205	Symbol	pvalue		8403141						
ANR	8403206	Symbol	pvalue -> is_real		8403141						
ANR	8403207	Symbol	hpgl_arg		8403141						
ANR	8403208	Symbol	* pvalue		8403141						
ANR	8403209	Symbol	mem		8403141						
ANR	8403210	Symbol	pvalue -> v_n		8403141						
ANR	8403211	Symbol	pargs		8403141						
ANR	8403212	Symbol	true		8403141						
ANR	8403213	Symbol	pi		8403141						
ANR	8403214	Symbol	* pi		8403141						
ANR	8403215	Symbol	pvalue -> v_n . r		8403141						
ANR	8403216	Function	hpgl_arg_c_int	405:0:13145:13471							
ANR	8403217	FunctionDef	"hpgl_arg_c_int (const gs_memory_t * mem , hpgl_args_t * pargs , int * pi)"		8403216	0					
ANR	8403218	CompoundStatement		407:0:13220:13471	8403216	0					
ANR	8403219	IdentifierDeclStatement	"const hpgl_value_t * pvalue = hpgl_arg ( mem , pargs ) ;"	408:4:13226:13275	8403216	0	True				
ANR	8403220	IdentifierDecl	"* pvalue = hpgl_arg ( mem , pargs )"		8403216	0					
ANR	8403221	IdentifierDeclType	const hpgl_value_t *		8403216	0					
ANR	8403222	Identifier	pvalue		8403216	1					
ANR	8403223	AssignmentExpression	"* pvalue = hpgl_arg ( mem , pargs )"		8403216	2		=			
ANR	8403224	Identifier	pvalue		8403216	0					
ANR	8403225	CallExpression	"hpgl_arg ( mem , pargs )"		8403216	1					
ANR	8403226	Callee	hpgl_arg		8403216	0					
ANR	8403227	Identifier	hpgl_arg		8403216	0					
ANR	8403228	ArgumentList	mem		8403216	1					
ANR	8403229	Argument	mem		8403216	0					
ANR	8403230	Identifier	mem		8403216	0					
ANR	8403231	Argument	pargs		8403216	1					
ANR	8403232	Identifier	pargs		8403216	0					
ANR	8403233	IdentifierDeclStatement	int32 i ;	409:4:13281:13288	8403216	1	True				
ANR	8403234	IdentifierDecl	i		8403216	0					
ANR	8403235	IdentifierDeclType	int32		8403216	0					
ANR	8403236	Identifier	i		8403216	1					
ANR	8403237	IfStatement	if ( ! pvalue )		8403216	2					
ANR	8403238	Condition	! pvalue	411:8:13299:13305	8403216	0	True				
ANR	8403239	UnaryOperationExpression	! pvalue		8403216	0					
ANR	8403240	UnaryOperator	!		8403216	0					
ANR	8403241	Identifier	pvalue		8403216	1					
ANR	8403242	ReturnStatement	return false ;	412:8:13316:13328	8403216	1	True				
ANR	8403243	Identifier	false		8403216	0					
ANR	8403244	ExpressionStatement	i = ( pvalue -> is_real ? ( int32 ) pvalue -> v_n . r : pvalue -> v_n . i )	413:4:13334:13395	8403216	3	True				
ANR	8403245	AssignmentExpression	i = ( pvalue -> is_real ? ( int32 ) pvalue -> v_n . r : pvalue -> v_n . i )		8403216	0		=			
ANR	8403246	Identifier	i		8403216	0					
ANR	8403247	ConditionalExpression	pvalue -> is_real ? ( int32 ) pvalue -> v_n . r : pvalue -> v_n . i		8403216	1					
ANR	8403248	Condition	pvalue -> is_real		8403216	0					
ANR	8403249	PtrMemberAccess	pvalue -> is_real		8403216	0					
ANR	8403250	Identifier	pvalue		8403216	0					
ANR	8403251	Identifier	is_real		8403216	1					
ANR	8403252	CastExpression	( int32 ) pvalue -> v_n . r		8403216	1					
ANR	8403253	CastTarget	int32		8403216	0					
ANR	8403254	MemberAccess	pvalue -> v_n . r		8403216	1					
ANR	8403255	PtrMemberAccess	pvalue -> v_n		8403216	0					
ANR	8403256	Identifier	pvalue		8403216	0					
ANR	8403257	Identifier	v_n		8403216	1					
ANR	8403258	Identifier	r		8403216	1					
ANR	8403259	MemberAccess	pvalue -> v_n . i		8403216	2					
ANR	8403260	PtrMemberAccess	pvalue -> v_n		8403216	0					
ANR	8403261	Identifier	pvalue		8403216	0					
ANR	8403262	Identifier	v_n		8403216	1					
ANR	8403263	Identifier	i		8403216	1					
ANR	8403264	ExpressionStatement	* pi = ( i < - 32768 ? - 32768 : i > 32767 ? 32767 : i )	414:4:13401:13452	8403216	4	True				
ANR	8403265	AssignmentExpression	* pi = ( i < - 32768 ? - 32768 : i > 32767 ? 32767 : i )		8403216	0		=			
ANR	8403266	UnaryOperationExpression	* pi		8403216	0					
ANR	8403267	UnaryOperator	*		8403216	0					
ANR	8403268	Identifier	pi		8403216	1					
ANR	8403269	ConditionalExpression	i < - 32768 ? - 32768 : i > 32767 ? 32767 : i		8403216	1					
ANR	8403270	Condition	i < - 32768		8403216	0					
ANR	8403271	RelationalExpression	i < - 32768		8403216	0		<			
ANR	8403272	Identifier	i		8403216	0					
ANR	8403273	UnaryOperationExpression	- 32768		8403216	1					
ANR	8403274	UnaryOperator	-		8403216	0					
ANR	8403275	PrimaryExpression	32768		8403216	1					
ANR	8403276	UnaryOperationExpression	- 32768		8403216	1					
ANR	8403277	UnaryOperator	-		8403216	0					
ANR	8403278	PrimaryExpression	32768		8403216	1					
ANR	8403279	ConditionalExpression	i > 32767 ? 32767 : i		8403216	2					
ANR	8403280	Condition	i > 32767		8403216	0					
ANR	8403281	RelationalExpression	i > 32767		8403216	0		>			
ANR	8403282	Identifier	i		8403216	0					
ANR	8403283	PrimaryExpression	32767		8403216	1					
ANR	8403284	PrimaryExpression	32767		8403216	1					
ANR	8403285	Identifier	i		8403216	2					
ANR	8403286	ReturnStatement	return true ;	415:4:13458:13469	8403216	5	True				
ANR	8403287	Identifier	true		8403216	0					
ANR	8403288	ReturnType	bool		8403216	1					
ANR	8403289	Identifier	hpgl_arg_c_int		8403216	2					
ANR	8403290	ParameterList	"const gs_memory_t * mem , hpgl_args_t * pargs , int * pi"		8403216	3					
ANR	8403291	Parameter	const gs_memory_t * mem	406:15:13165:13187	8403216	0	True				
ANR	8403292	ParameterType	const gs_memory_t *		8403216	0					
ANR	8403293	Identifier	mem		8403216	1					
ANR	8403294	Parameter	hpgl_args_t * pargs	406:40:13190:13208	8403216	1	True				
ANR	8403295	ParameterType	hpgl_args_t *		8403216	0					
ANR	8403296	Identifier	pargs		8403216	1					
ANR	8403297	Parameter	int * pi	406:61:13211:13217	8403216	2	True				
ANR	8403298	ParameterType	int *		8403216	0					
ANR	8403299	Identifier	pi		8403216	1					
ANR	8403300	CFGEntryNode	ENTRY		8403216		True				
ANR	8403301	CFGExitNode	EXIT		8403216		True				
ANR	8403302	Symbol	pvalue -> v_n . i		8403216						
ANR	8403303	Symbol	false		8403216						
ANR	8403304	Symbol	i		8403216						
ANR	8403305	Symbol	pvalue		8403216						
ANR	8403306	Symbol	pvalue -> is_real		8403216						
ANR	8403307	Symbol	hpgl_arg		8403216						
ANR	8403308	Symbol	* pvalue		8403216						
ANR	8403309	Symbol	mem		8403216						
ANR	8403310	Symbol	pvalue -> v_n		8403216						
ANR	8403311	Symbol	pargs		8403216						
ANR	8403312	Symbol	true		8403216						
ANR	8403313	Symbol	pi		8403216						
ANR	8403314	Symbol	* pi		8403216						
ANR	8403315	Symbol	pvalue -> v_n . r		8403216						
ANR	8403316	Function	hpgl_arg_units	419:0:13512:13677							
ANR	8403317	FunctionDef	"hpgl_arg_units (const gs_memory_t * mem , hpgl_args_t * pargs , hpgl_real_t * pu)"		8403316	0					
ANR	8403318	CompoundStatement		421:0:13596:13677	8403316	0					
ANR	8403319	ReturnStatement	"return hpgl_arg_real ( mem , pargs , pu ) ;"	422:4:13639:13675	8403316	0	True				
ANR	8403320	CallExpression	"hpgl_arg_real ( mem , pargs , pu )"		8403316	0					
ANR	8403321	Callee	hpgl_arg_real		8403316	0					
ANR	8403322	Identifier	hpgl_arg_real		8403316	0					
ANR	8403323	ArgumentList	mem		8403316	1					
ANR	8403324	Argument	mem		8403316	0					
ANR	8403325	Identifier	mem		8403316	0					
ANR	8403326	Argument	pargs		8403316	1					
ANR	8403327	Identifier	pargs		8403316	0					
ANR	8403328	Argument	pu		8403316	2					
ANR	8403329	Identifier	pu		8403316	0					
ANR	8403330	ReturnType	bool		8403316	1					
ANR	8403331	Identifier	hpgl_arg_units		8403316	2					
ANR	8403332	ParameterList	"const gs_memory_t * mem , hpgl_args_t * pargs , hpgl_real_t * pu"		8403316	3					
ANR	8403333	Parameter	const gs_memory_t * mem	420:15:13532:13554	8403316	0	True				
ANR	8403334	ParameterType	const gs_memory_t *		8403316	0					
ANR	8403335	Identifier	mem		8403316	1					
ANR	8403336	Parameter	hpgl_args_t * pargs	420:40:13557:13575	8403316	1	True				
ANR	8403337	ParameterType	hpgl_args_t *		8403316	0					
ANR	8403338	Identifier	pargs		8403316	1					
ANR	8403339	Parameter	hpgl_real_t * pu	420:61:13578:13593	8403316	2	True				
ANR	8403340	ParameterType	hpgl_real_t *		8403316	0					
ANR	8403341	Identifier	pu		8403316	1					
ANR	8403342	CFGEntryNode	ENTRY		8403316		True				
ANR	8403343	CFGExitNode	EXIT		8403316		True				
ANR	8403344	Symbol	mem		8403316						
ANR	8403345	Symbol	pargs		8403316						
ANR	8403346	Symbol	pu		8403316						
ANR	8403347	Symbol	hpgl_arg_real		8403316						
ANR	8403348	Function	hpgl_init_command_index	426:0:13722:14551							
ANR	8403349	FunctionDef	"hpgl_init_command_index (hpgl_parser_state_t * * pgl_parser_state , gs_memory_t * mem)"		8403348	0					
ANR	8403350	CompoundStatement		429:0:13834:14551	8403348	0					
ANR	8403351	IdentifierDeclStatement	"hpgl_parser_state_t * pgst = ( hpgl_parser_state_t * ) gs_alloc_bytes ( mem , sizeof ( hpgl_parser_state_t ) , ""hpgl_init_command_index"" ) ;"	430:4:13840:14069	8403348	0	True				
ANR	8403352	IdentifierDecl	"* pgst = ( hpgl_parser_state_t * ) gs_alloc_bytes ( mem , sizeof ( hpgl_parser_state_t ) , ""hpgl_init_command_index"" )"		8403348	0					
ANR	8403353	IdentifierDeclType	hpgl_parser_state_t *		8403348	0					
ANR	8403354	Identifier	pgst		8403348	1					
ANR	8403355	AssignmentExpression	"* pgst = ( hpgl_parser_state_t * ) gs_alloc_bytes ( mem , sizeof ( hpgl_parser_state_t ) , ""hpgl_init_command_index"" )"		8403348	2		=			
ANR	8403356	Identifier	pgst		8403348	0					
ANR	8403357	CastExpression	"( hpgl_parser_state_t * ) gs_alloc_bytes ( mem , sizeof ( hpgl_parser_state_t ) , ""hpgl_init_command_index"" )"		8403348	1					
ANR	8403358	CastTarget	hpgl_parser_state_t *		8403348	0					
ANR	8403359	CallExpression	"gs_alloc_bytes ( mem , sizeof ( hpgl_parser_state_t ) , ""hpgl_init_command_index"" )"		8403348	1					
ANR	8403360	Callee	gs_alloc_bytes		8403348	0					
ANR	8403361	Identifier	gs_alloc_bytes		8403348	0					
ANR	8403362	ArgumentList	mem		8403348	1					
ANR	8403363	Argument	mem		8403348	0					
ANR	8403364	Identifier	mem		8403348	0					
ANR	8403365	Argument	sizeof ( hpgl_parser_state_t )		8403348	1					
ANR	8403366	SizeofExpression	sizeof ( hpgl_parser_state_t )		8403348	0					
ANR	8403367	Sizeof	sizeof		8403348	0					
ANR	8403368	SizeofOperand	hpgl_parser_state_t		8403348	1					
ANR	8403369	Argument	"""hpgl_init_command_index"""		8403348	2					
ANR	8403370	PrimaryExpression	"""hpgl_init_command_index"""		8403348	0					
ANR	8403371	IfStatement	if ( pgst == 0 )		8403348	1					
ANR	8403372	Condition	pgst == 0	436:8:14096:14104	8403348	0	True				
ANR	8403373	EqualityExpression	pgst == 0		8403348	0		==			
ANR	8403374	Identifier	pgst		8403348	0					
ANR	8403375	PrimaryExpression	0		8403348	1					
ANR	8403376	CompoundStatement		8:19:272:272	8403348	1					
ANR	8403377	ExpressionStatement	* pgl_parser_state = NULL	437:8:14117:14141	8403348	0	True				
ANR	8403378	AssignmentExpression	* pgl_parser_state = NULL		8403348	0		=			
ANR	8403379	UnaryOperationExpression	* pgl_parser_state		8403348	0					
ANR	8403380	UnaryOperator	*		8403348	0					
ANR	8403381	Identifier	pgl_parser_state		8403348	1					
ANR	8403382	Identifier	NULL		8403348	1					
ANR	8403383	ReturnStatement	return - 1 ;	438:8:14151:14160	8403348	1	True				
ANR	8403384	UnaryOperationExpression	- 1		8403348	0					
ANR	8403385	UnaryOperator	-		8403348	0					
ANR	8403386	PrimaryExpression	1		8403348	1					
ANR	8403387	ExpressionStatement	pgst -> exit_to_parser = NULL	441:4:14173:14200	8403348	2	True				
ANR	8403388	AssignmentExpression	pgst -> exit_to_parser = NULL		8403348	0		=			
ANR	8403389	PtrMemberAccess	pgst -> exit_to_parser		8403348	0					
ANR	8403390	Identifier	pgst		8403348	0					
ANR	8403391	Identifier	exit_to_parser		8403348	1					
ANR	8403392	Identifier	NULL		8403348	1					
ANR	8403393	ExpressionStatement	pgst -> hpgl_command_next_index = 0	442:4:14206:14239	8403348	3	True				
ANR	8403394	AssignmentExpression	pgst -> hpgl_command_next_index = 0		8403348	0		=			
ANR	8403395	PtrMemberAccess	pgst -> hpgl_command_next_index		8403348	0					
ANR	8403396	Identifier	pgst		8403348	0					
ANR	8403397	Identifier	hpgl_command_next_index		8403348	1					
ANR	8403398	PrimaryExpression	0		8403348	1					
ANR	8403399	ExpressionStatement	"memset ( pgst -> hpgl_command_indices , 0 , sizeof ( pgst -> hpgl_command_indices ) )"	446:4:14403:14476	8403348	4	True				
ANR	8403400	CallExpression	"memset ( pgst -> hpgl_command_indices , 0 , sizeof ( pgst -> hpgl_command_indices ) )"		8403348	0					
ANR	8403401	Callee	memset		8403348	0					
ANR	8403402	Identifier	memset		8403348	0					
ANR	8403403	ArgumentList	pgst -> hpgl_command_indices		8403348	1					
ANR	8403404	Argument	pgst -> hpgl_command_indices		8403348	0					
ANR	8403405	PtrMemberAccess	pgst -> hpgl_command_indices		8403348	0					
ANR	8403406	Identifier	pgst		8403348	0					
ANR	8403407	Identifier	hpgl_command_indices		8403348	1					
ANR	8403408	Argument	0		8403348	1					
ANR	8403409	PrimaryExpression	0		8403348	0					
ANR	8403410	Argument	sizeof ( pgst -> hpgl_command_indices )		8403348	2					
ANR	8403411	SizeofExpression	sizeof ( pgst -> hpgl_command_indices )		8403348	0					
ANR	8403412	Sizeof	sizeof		8403348	0					
ANR	8403413	PtrMemberAccess	pgst -> hpgl_command_indices		8403348	1					
ANR	8403414	Identifier	pgst		8403348	0					
ANR	8403415	Identifier	hpgl_command_indices		8403348	1					
ANR	8403416	ExpressionStatement	hpgl_process_init ( pgst )	447:4:14482:14505	8403348	5	True				
ANR	8403417	CallExpression	hpgl_process_init ( pgst )		8403348	0					
ANR	8403418	Callee	hpgl_process_init		8403348	0					
ANR	8403419	Identifier	hpgl_process_init		8403348	0					
ANR	8403420	ArgumentList	pgst		8403348	1					
ANR	8403421	Argument	pgst		8403348	0					
ANR	8403422	Identifier	pgst		8403348	0					
ANR	8403423	ExpressionStatement	* pgl_parser_state = pgst	448:4:14511:14535	8403348	6	True				
ANR	8403424	AssignmentExpression	* pgl_parser_state = pgst		8403348	0		=			
ANR	8403425	UnaryOperationExpression	* pgl_parser_state		8403348	0					
ANR	8403426	UnaryOperator	*		8403348	0					
ANR	8403427	Identifier	pgl_parser_state		8403348	1					
ANR	8403428	Identifier	pgst		8403348	1					
ANR	8403429	ReturnStatement	return 0 ;	449:4:14541:14549	8403348	7	True				
ANR	8403430	PrimaryExpression	0		8403348	0					
ANR	8403431	ReturnType	int		8403348	1					
ANR	8403432	Identifier	hpgl_init_command_index		8403348	2					
ANR	8403433	ParameterList	"hpgl_parser_state_t * * pgl_parser_state , gs_memory_t * mem"		8403348	3					
ANR	8403434	Parameter	hpgl_parser_state_t * * pgl_parser_state	427:24:13750:13788	8403348	0	True				
ANR	8403435	ParameterType	hpgl_parser_state_t * *		8403348	0					
ANR	8403436	Identifier	pgl_parser_state		8403348	1					
ANR	8403437	Parameter	gs_memory_t * mem	428:24:13815:13831	8403348	1	True				
ANR	8403438	ParameterType	gs_memory_t *		8403348	0					
ANR	8403439	Identifier	mem		8403348	1					
ANR	8403440	CFGEntryNode	ENTRY		8403348		True				
ANR	8403441	CFGExitNode	EXIT		8403348		True				
ANR	8403442	Symbol	gs_alloc_bytes		8403348						
ANR	8403443	Symbol	NULL		8403348						
ANR	8403444	Symbol	pgl_parser_state		8403348						
ANR	8403445	Symbol	mem		8403348						
ANR	8403446	Symbol	pgst -> hpgl_command_next_index		8403348						
ANR	8403447	Symbol	pgst -> hpgl_command_indices		8403348						
ANR	8403448	Symbol	* pgl_parser_state		8403348						
ANR	8403449	Symbol	pgst		8403348						
ANR	8403450	Symbol	* pgst		8403348						
ANR	8403451	Symbol	pgst -> exit_to_parser		8403348						
