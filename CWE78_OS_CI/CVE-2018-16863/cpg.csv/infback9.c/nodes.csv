command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6049749	File	data/converged/CVE-2018-16863_ghostpdl/infback9.c								
ANR	6049750	DeclStmt									
ANR	6049751	Decl							z_stream FAR	z_stream FAR *	strm
ANR	6049752	DeclStmt									
ANR	6049753	Decl							unsigned char FAR	unsigned char FAR *	window
ANR	6049754	DeclStmt									
ANR	6049755	Decl							const char	const char *	version
ANR	6049756	DeclStmt									
ANR	6049757	Decl							int	int	stream_size
ANR	6049758	DeclStmt									
ANR	6049759	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	6049760	Function	makefixed9	54:0:1589:3411							
ANR	6049761	FunctionDef	makefixed9 ()		6049760	0					
ANR	6049762	CompoundStatement		55:0:1611:3411	6049760	0					
ANR	6049763	IdentifierDeclStatement	"unsigned sym , bits , low , size ;"	56:4:1617:1646	6049760	0	True				
ANR	6049764	IdentifierDecl	sym		6049760	0					
ANR	6049765	IdentifierDeclType	unsigned		6049760	0					
ANR	6049766	Identifier	sym		6049760	1					
ANR	6049767	IdentifierDecl	bits		6049760	1					
ANR	6049768	IdentifierDeclType	unsigned		6049760	0					
ANR	6049769	Identifier	bits		6049760	1					
ANR	6049770	IdentifierDecl	low		6049760	2					
ANR	6049771	IdentifierDeclType	unsigned		6049760	0					
ANR	6049772	Identifier	low		6049760	1					
ANR	6049773	IdentifierDecl	size		6049760	3					
ANR	6049774	IdentifierDeclType	unsigned		6049760	0					
ANR	6049775	Identifier	size		6049760	1					
ANR	6049776	IdentifierDeclStatement	"code * next , * lenfix , * distfix ;"	57:4:1652:1681	6049760	1	True				
ANR	6049777	IdentifierDecl	* next		6049760	0					
ANR	6049778	IdentifierDeclType	code *		6049760	0					
ANR	6049779	Identifier	next		6049760	1					
ANR	6049780	IdentifierDecl	* lenfix		6049760	1					
ANR	6049781	IdentifierDeclType	code *		6049760	0					
ANR	6049782	Identifier	lenfix		6049760	1					
ANR	6049783	IdentifierDecl	* distfix		6049760	2					
ANR	6049784	IdentifierDeclType	code *		6049760	0					
ANR	6049785	Identifier	distfix		6049760	1					
ANR	6049786	IdentifierDeclStatement	struct inflate_state state ;	58:4:1687:1713	6049760	2	True				
ANR	6049787	IdentifierDecl	state		6049760	0					
ANR	6049788	IdentifierDeclType	struct inflate_state		6049760	0					
ANR	6049789	Identifier	state		6049760	1					
ANR	6049790	IdentifierDeclStatement	code fixed [ 544 ] ;	59:4:1719:1734	6049760	3	True				
ANR	6049791	IdentifierDecl	fixed [ 544 ]		6049760	0					
ANR	6049792	IdentifierDeclType	code [ 544 ]		6049760	0					
ANR	6049793	Identifier	fixed		6049760	1					
ANR	6049794	PrimaryExpression	544		6049760	2					
ANR	6049795	ExpressionStatement	sym = 0	62:4:1772:1779	6049760	4	True				
ANR	6049796	AssignmentExpression	sym = 0		6049760	0		=			
ANR	6049797	Identifier	sym		6049760	0					
ANR	6049798	PrimaryExpression	0		6049760	1					
ANR	6049799	WhileStatement	while ( sym < 144 )		6049760	5					
ANR	6049800	Condition	sym < 144	63:11:1792:1800	6049760	0	True				
ANR	6049801	RelationalExpression	sym < 144		6049760	0		<			
ANR	6049802	Identifier	sym		6049760	0					
ANR	6049803	PrimaryExpression	144		6049760	1					
ANR	6049804	ExpressionStatement	state . lens [ sym ++ ] = 8	63:22:1803:1824	6049760	1	True				
ANR	6049805	AssignmentExpression	state . lens [ sym ++ ] = 8		6049760	0		=			
ANR	6049806	ArrayIndexing	state . lens [ sym ++ ]		6049760	0					
ANR	6049807	MemberAccess	state . lens		6049760	0					
ANR	6049808	Identifier	state		6049760	0					
ANR	6049809	Identifier	lens		6049760	1					
ANR	6049810	PostIncDecOperationExpression	sym ++		6049760	1					
ANR	6049811	Identifier	sym		6049760	0					
ANR	6049812	IncDec	++		6049760	1					
ANR	6049813	PrimaryExpression	8		6049760	1					
ANR	6049814	WhileStatement	while ( sym < 256 )		6049760	6					
ANR	6049815	Condition	sym < 256	64:11:1837:1845	6049760	0	True				
ANR	6049816	RelationalExpression	sym < 256		6049760	0		<			
ANR	6049817	Identifier	sym		6049760	0					
ANR	6049818	PrimaryExpression	256		6049760	1					
ANR	6049819	ExpressionStatement	state . lens [ sym ++ ] = 9	64:22:1848:1869	6049760	1	True				
ANR	6049820	AssignmentExpression	state . lens [ sym ++ ] = 9		6049760	0		=			
ANR	6049821	ArrayIndexing	state . lens [ sym ++ ]		6049760	0					
ANR	6049822	MemberAccess	state . lens		6049760	0					
ANR	6049823	Identifier	state		6049760	0					
ANR	6049824	Identifier	lens		6049760	1					
ANR	6049825	PostIncDecOperationExpression	sym ++		6049760	1					
ANR	6049826	Identifier	sym		6049760	0					
ANR	6049827	IncDec	++		6049760	1					
ANR	6049828	PrimaryExpression	9		6049760	1					
ANR	6049829	WhileStatement	while ( sym < 280 )		6049760	7					
ANR	6049830	Condition	sym < 280	65:11:1882:1890	6049760	0	True				
ANR	6049831	RelationalExpression	sym < 280		6049760	0		<			
ANR	6049832	Identifier	sym		6049760	0					
ANR	6049833	PrimaryExpression	280		6049760	1					
ANR	6049834	ExpressionStatement	state . lens [ sym ++ ] = 7	65:22:1893:1914	6049760	1	True				
ANR	6049835	AssignmentExpression	state . lens [ sym ++ ] = 7		6049760	0		=			
ANR	6049836	ArrayIndexing	state . lens [ sym ++ ]		6049760	0					
ANR	6049837	MemberAccess	state . lens		6049760	0					
ANR	6049838	Identifier	state		6049760	0					
ANR	6049839	Identifier	lens		6049760	1					
ANR	6049840	PostIncDecOperationExpression	sym ++		6049760	1					
ANR	6049841	Identifier	sym		6049760	0					
ANR	6049842	IncDec	++		6049760	1					
ANR	6049843	PrimaryExpression	7		6049760	1					
ANR	6049844	WhileStatement	while ( sym < 288 )		6049760	8					
ANR	6049845	Condition	sym < 288	66:11:1927:1935	6049760	0	True				
ANR	6049846	RelationalExpression	sym < 288		6049760	0		<			
ANR	6049847	Identifier	sym		6049760	0					
ANR	6049848	PrimaryExpression	288		6049760	1					
ANR	6049849	ExpressionStatement	state . lens [ sym ++ ] = 8	66:22:1938:1959	6049760	1	True				
ANR	6049850	AssignmentExpression	state . lens [ sym ++ ] = 8		6049760	0		=			
ANR	6049851	ArrayIndexing	state . lens [ sym ++ ]		6049760	0					
ANR	6049852	MemberAccess	state . lens		6049760	0					
ANR	6049853	Identifier	state		6049760	0					
ANR	6049854	Identifier	lens		6049760	1					
ANR	6049855	PostIncDecOperationExpression	sym ++		6049760	1					
ANR	6049856	Identifier	sym		6049760	0					
ANR	6049857	IncDec	++		6049760	1					
ANR	6049858	PrimaryExpression	8		6049760	1					
ANR	6049859	ExpressionStatement	next = fixed	67:4:1965:1977	6049760	9	True				
ANR	6049860	AssignmentExpression	next = fixed		6049760	0		=			
ANR	6049861	Identifier	next		6049760	0					
ANR	6049862	Identifier	fixed		6049760	1					
ANR	6049863	ExpressionStatement	lenfix = next	68:4:1983:1996	6049760	10	True				
ANR	6049864	AssignmentExpression	lenfix = next		6049760	0		=			
ANR	6049865	Identifier	lenfix		6049760	0					
ANR	6049866	Identifier	next		6049760	1					
ANR	6049867	ExpressionStatement	bits = 9	69:4:2002:2010	6049760	11	True				
ANR	6049868	AssignmentExpression	bits = 9		6049760	0		=			
ANR	6049869	Identifier	bits		6049760	0					
ANR	6049870	PrimaryExpression	9		6049760	1					
ANR	6049871	ExpressionStatement	"inflate_table9 ( LENS , state . lens , 288 , & ( next ) , & ( bits ) , state . work )"	70:4:2016:2083	6049760	12	True				
ANR	6049872	CallExpression	"inflate_table9 ( LENS , state . lens , 288 , & ( next ) , & ( bits ) , state . work )"		6049760	0					
ANR	6049873	Callee	inflate_table9		6049760	0					
ANR	6049874	Identifier	inflate_table9		6049760	0					
ANR	6049875	ArgumentList	LENS		6049760	1					
ANR	6049876	Argument	LENS		6049760	0					
ANR	6049877	Identifier	LENS		6049760	0					
ANR	6049878	Argument	state . lens		6049760	1					
ANR	6049879	MemberAccess	state . lens		6049760	0					
ANR	6049880	Identifier	state		6049760	0					
ANR	6049881	Identifier	lens		6049760	1					
ANR	6049882	Argument	288		6049760	2					
ANR	6049883	PrimaryExpression	288		6049760	0					
ANR	6049884	Argument	& ( next )		6049760	3					
ANR	6049885	UnaryOperationExpression	& ( next )		6049760	0					
ANR	6049886	UnaryOperator	&		6049760	0					
ANR	6049887	Identifier	next		6049760	1					
ANR	6049888	Argument	& ( bits )		6049760	4					
ANR	6049889	UnaryOperationExpression	& ( bits )		6049760	0					
ANR	6049890	UnaryOperator	&		6049760	0					
ANR	6049891	Identifier	bits		6049760	1					
ANR	6049892	Argument	state . work		6049760	5					
ANR	6049893	MemberAccess	state . work		6049760	0					
ANR	6049894	Identifier	state		6049760	0					
ANR	6049895	Identifier	work		6049760	1					
ANR	6049896	ExpressionStatement	sym = 0	73:4:2115:2122	6049760	13	True				
ANR	6049897	AssignmentExpression	sym = 0		6049760	0		=			
ANR	6049898	Identifier	sym		6049760	0					
ANR	6049899	PrimaryExpression	0		6049760	1					
ANR	6049900	WhileStatement	while ( sym < 32 )		6049760	14					
ANR	6049901	Condition	sym < 32	74:11:2135:2142	6049760	0	True				
ANR	6049902	RelationalExpression	sym < 32		6049760	0		<			
ANR	6049903	Identifier	sym		6049760	0					
ANR	6049904	PrimaryExpression	32		6049760	1					
ANR	6049905	ExpressionStatement	state . lens [ sym ++ ] = 5	74:21:2145:2166	6049760	1	True				
ANR	6049906	AssignmentExpression	state . lens [ sym ++ ] = 5		6049760	0		=			
ANR	6049907	ArrayIndexing	state . lens [ sym ++ ]		6049760	0					
ANR	6049908	MemberAccess	state . lens		6049760	0					
ANR	6049909	Identifier	state		6049760	0					
ANR	6049910	Identifier	lens		6049760	1					
ANR	6049911	PostIncDecOperationExpression	sym ++		6049760	1					
ANR	6049912	Identifier	sym		6049760	0					
ANR	6049913	IncDec	++		6049760	1					
ANR	6049914	PrimaryExpression	5		6049760	1					
ANR	6049915	ExpressionStatement	distfix = next	75:4:2172:2186	6049760	15	True				
ANR	6049916	AssignmentExpression	distfix = next		6049760	0		=			
ANR	6049917	Identifier	distfix		6049760	0					
ANR	6049918	Identifier	next		6049760	1					
ANR	6049919	ExpressionStatement	bits = 5	76:4:2192:2200	6049760	16	True				
ANR	6049920	AssignmentExpression	bits = 5		6049760	0		=			
ANR	6049921	Identifier	bits		6049760	0					
ANR	6049922	PrimaryExpression	5		6049760	1					
ANR	6049923	ExpressionStatement	"inflate_table9 ( DISTS , state . lens , 32 , & ( next ) , & ( bits ) , state . work )"	77:4:2206:2273	6049760	17	True				
ANR	6049924	CallExpression	"inflate_table9 ( DISTS , state . lens , 32 , & ( next ) , & ( bits ) , state . work )"		6049760	0					
ANR	6049925	Callee	inflate_table9		6049760	0					
ANR	6049926	Identifier	inflate_table9		6049760	0					
ANR	6049927	ArgumentList	DISTS		6049760	1					
ANR	6049928	Argument	DISTS		6049760	0					
ANR	6049929	Identifier	DISTS		6049760	0					
ANR	6049930	Argument	state . lens		6049760	1					
ANR	6049931	MemberAccess	state . lens		6049760	0					
ANR	6049932	Identifier	state		6049760	0					
ANR	6049933	Identifier	lens		6049760	1					
ANR	6049934	Argument	32		6049760	2					
ANR	6049935	PrimaryExpression	32		6049760	0					
ANR	6049936	Argument	& ( next )		6049760	3					
ANR	6049937	UnaryOperationExpression	& ( next )		6049760	0					
ANR	6049938	UnaryOperator	&		6049760	0					
ANR	6049939	Identifier	next		6049760	1					
ANR	6049940	Argument	& ( bits )		6049760	4					
ANR	6049941	UnaryOperationExpression	& ( bits )		6049760	0					
ANR	6049942	UnaryOperator	&		6049760	0					
ANR	6049943	Identifier	bits		6049760	1					
ANR	6049944	Argument	state . work		6049760	5					
ANR	6049945	MemberAccess	state . work		6049760	0					
ANR	6049946	Identifier	state		6049760	0					
ANR	6049947	Identifier	work		6049760	1					
ANR	6049948	ExpressionStatement	"puts ( ""    /* inffix9.h -- table for decoding deflate64 fixed codes"" )"	80:4:2303:2371	6049760	18	True				
ANR	6049949	CallExpression	"puts ( ""    /* inffix9.h -- table for decoding deflate64 fixed codes"" )"		6049760	0					
ANR	6049950	Callee	puts		6049760	0					
ANR	6049951	Identifier	puts		6049760	0					
ANR	6049952	ArgumentList	"""    /* inffix9.h -- table for decoding deflate64 fixed codes"""		6049760	1					
ANR	6049953	Argument	"""    /* inffix9.h -- table for decoding deflate64 fixed codes"""		6049760	0					
ANR	6049954	PrimaryExpression	"""    /* inffix9.h -- table for decoding deflate64 fixed codes"""		6049760	0					
ANR	6049955	ExpressionStatement	"puts ( ""     * Generated automatically by makefixed9()."" )"	81:4:2377:2432	6049760	19	True				
ANR	6049956	CallExpression	"puts ( ""     * Generated automatically by makefixed9()."" )"		6049760	0					
ANR	6049957	Callee	puts		6049760	0					
ANR	6049958	Identifier	puts		6049760	0					
ANR	6049959	ArgumentList	"""     * Generated automatically by makefixed9()."""		6049760	1					
ANR	6049960	Argument	"""     * Generated automatically by makefixed9()."""		6049760	0					
ANR	6049961	PrimaryExpression	"""     * Generated automatically by makefixed9()."""		6049760	0					
ANR	6049962	ExpressionStatement	"puts ( ""     */"" )"	82:4:2438:2453	6049760	20	True				
ANR	6049963	CallExpression	"puts ( ""     */"" )"		6049760	0					
ANR	6049964	Callee	puts		6049760	0					
ANR	6049965	Identifier	puts		6049760	0					
ANR	6049966	ArgumentList	"""     */"""		6049760	1					
ANR	6049967	Argument	"""     */"""		6049760	0					
ANR	6049968	PrimaryExpression	"""     */"""		6049760	0					
ANR	6049969	ExpressionStatement	"puts ( """" )"	83:4:2459:2467	6049760	21	True				
ANR	6049970	CallExpression	"puts ( """" )"		6049760	0					
ANR	6049971	Callee	puts		6049760	0					
ANR	6049972	Identifier	puts		6049760	0					
ANR	6049973	ArgumentList	""""""		6049760	1					
ANR	6049974	Argument	""""""		6049760	0					
ANR	6049975	PrimaryExpression	""""""		6049760	0					
ANR	6049976	ExpressionStatement	"puts ( ""    /* WARNING: this file should *not* be used by applications."" )"	84:4:2473:2544	6049760	22	True				
ANR	6049977	CallExpression	"puts ( ""    /* WARNING: this file should *not* be used by applications."" )"		6049760	0					
ANR	6049978	Callee	puts		6049760	0					
ANR	6049979	Identifier	puts		6049760	0					
ANR	6049980	ArgumentList	"""    /* WARNING: this file should *not* be used by applications."""		6049760	1					
ANR	6049981	Argument	"""    /* WARNING: this file should *not* be used by applications."""		6049760	0					
ANR	6049982	PrimaryExpression	"""    /* WARNING: this file should *not* be used by applications."""		6049760	0					
ANR	6049983	ExpressionStatement	"puts ( ""       It is part of the implementation of this library and is"" )"	85:4:2550:2620	6049760	23	True				
ANR	6049984	CallExpression	"puts ( ""       It is part of the implementation of this library and is"" )"		6049760	0					
ANR	6049985	Callee	puts		6049760	0					
ANR	6049986	Identifier	puts		6049760	0					
ANR	6049987	ArgumentList	"""       It is part of the implementation of this library and is"""		6049760	1					
ANR	6049988	Argument	"""       It is part of the implementation of this library and is"""		6049760	0					
ANR	6049989	PrimaryExpression	"""       It is part of the implementation of this library and is"""		6049760	0					
ANR	6049990	ExpressionStatement	"puts ( ""       subject to change. Applications should only use zlib.h."" )"	86:4:2626:2696	6049760	24	True				
ANR	6049991	CallExpression	"puts ( ""       subject to change. Applications should only use zlib.h."" )"		6049760	0					
ANR	6049992	Callee	puts		6049760	0					
ANR	6049993	Identifier	puts		6049760	0					
ANR	6049994	ArgumentList	"""       subject to change. Applications should only use zlib.h."""		6049760	1					
ANR	6049995	Argument	"""       subject to change. Applications should only use zlib.h."""		6049760	0					
ANR	6049996	PrimaryExpression	"""       subject to change. Applications should only use zlib.h."""		6049760	0					
ANR	6049997	ExpressionStatement	"puts ( ""     */"" )"	87:4:2702:2717	6049760	25	True				
ANR	6049998	CallExpression	"puts ( ""     */"" )"		6049760	0					
ANR	6049999	Callee	puts		6049760	0					
ANR	6050000	Identifier	puts		6049760	0					
ANR	6050001	ArgumentList	"""     */"""		6049760	1					
ANR	6050002	Argument	"""     */"""		6049760	0					
ANR	6050003	PrimaryExpression	"""     */"""		6049760	0					
ANR	6050004	ExpressionStatement	"puts ( """" )"	88:4:2723:2731	6049760	26	True				
ANR	6050005	CallExpression	"puts ( """" )"		6049760	0					
ANR	6050006	Callee	puts		6049760	0					
ANR	6050007	Identifier	puts		6049760	0					
ANR	6050008	ArgumentList	""""""		6049760	1					
ANR	6050009	Argument	""""""		6049760	0					
ANR	6050010	PrimaryExpression	""""""		6049760	0					
ANR	6050011	ExpressionStatement	size = 1U << 9	89:4:2737:2751	6049760	27	True				
ANR	6050012	AssignmentExpression	size = 1U << 9		6049760	0		=			
ANR	6050013	Identifier	size		6049760	0					
ANR	6050014	ShiftExpression	1U << 9		6049760	1		<<			
ANR	6050015	PrimaryExpression	1U		6049760	0					
ANR	6050016	PrimaryExpression	9		6049760	1					
ANR	6050017	ExpressionStatement	"printf ( ""    static const code lenfix[%u] = {"" , size )"	90:4:2757:2809	6049760	28	True				
ANR	6050018	CallExpression	"printf ( ""    static const code lenfix[%u] = {"" , size )"		6049760	0					
ANR	6050019	Callee	printf		6049760	0					
ANR	6050020	Identifier	printf		6049760	0					
ANR	6050021	ArgumentList	"""    static const code lenfix[%u] = {"""		6049760	1					
ANR	6050022	Argument	"""    static const code lenfix[%u] = {"""		6049760	0					
ANR	6050023	PrimaryExpression	"""    static const code lenfix[%u] = {"""		6049760	0					
ANR	6050024	Argument	size		6049760	1					
ANR	6050025	Identifier	size		6049760	0					
ANR	6050026	ExpressionStatement	low = 0	91:4:2815:2822	6049760	29	True				
ANR	6050027	AssignmentExpression	low = 0		6049760	0		=			
ANR	6050028	Identifier	low		6049760	0					
ANR	6050029	PrimaryExpression	0		6049760	1					
ANR	6050030	ForStatement	for ( ; ; )		6049760	30					
ANR	6050031	CompoundStatement		38:13:1225:1225	6049760	0					
ANR	6050032	IfStatement	if ( ( low % 6 ) == 0 )		6049760	0					
ANR	6050033	Condition	( low % 6 ) == 0	93:12:2851:2864	6049760	0	True				
ANR	6050034	EqualityExpression	( low % 6 ) == 0		6049760	0		==			
ANR	6050035	MultiplicativeExpression	low % 6		6049760	0		%			
ANR	6050036	Identifier	low		6049760	0					
ANR	6050037	PrimaryExpression	6		6049760	1					
ANR	6050038	PrimaryExpression	0		6049760	1					
ANR	6050039	ExpressionStatement	"printf ( ""\\n        "" )"	93:28:2867:2887	6049760	1	True				
ANR	6050040	CallExpression	"printf ( ""\\n        "" )"		6049760	0					
ANR	6050041	Callee	printf		6049760	0					
ANR	6050042	Identifier	printf		6049760	0					
ANR	6050043	ArgumentList	"""\\n        """		6049760	1					
ANR	6050044	Argument	"""\\n        """		6049760	0					
ANR	6050045	PrimaryExpression	"""\\n        """		6049760	0					
ANR	6050046	ExpressionStatement	"printf ( ""{%u,%u,%d}"" , lenfix [ low ] . op , lenfix [ low ] . bits , lenfix [ low ] . val )"	94:8:2897:2983	6049760	1	True				
ANR	6050047	CallExpression	"printf ( ""{%u,%u,%d}"" , lenfix [ low ] . op , lenfix [ low ] . bits , lenfix [ low ] . val )"		6049760	0					
ANR	6050048	Callee	printf		6049760	0					
ANR	6050049	Identifier	printf		6049760	0					
ANR	6050050	ArgumentList	"""{%u,%u,%d}"""		6049760	1					
ANR	6050051	Argument	"""{%u,%u,%d}"""		6049760	0					
ANR	6050052	PrimaryExpression	"""{%u,%u,%d}"""		6049760	0					
ANR	6050053	Argument	lenfix [ low ] . op		6049760	1					
ANR	6050054	MemberAccess	lenfix [ low ] . op		6049760	0					
ANR	6050055	ArrayIndexing	lenfix [ low ]		6049760	0					
ANR	6050056	Identifier	lenfix		6049760	0					
ANR	6050057	Identifier	low		6049760	1					
ANR	6050058	Identifier	op		6049760	1					
ANR	6050059	Argument	lenfix [ low ] . bits		6049760	2					
ANR	6050060	MemberAccess	lenfix [ low ] . bits		6049760	0					
ANR	6050061	ArrayIndexing	lenfix [ low ]		6049760	0					
ANR	6050062	Identifier	lenfix		6049760	0					
ANR	6050063	Identifier	low		6049760	1					
ANR	6050064	Identifier	bits		6049760	1					
ANR	6050065	Argument	lenfix [ low ] . val		6049760	3					
ANR	6050066	MemberAccess	lenfix [ low ] . val		6049760	0					
ANR	6050067	ArrayIndexing	lenfix [ low ]		6049760	0					
ANR	6050068	Identifier	lenfix		6049760	0					
ANR	6050069	Identifier	low		6049760	1					
ANR	6050070	Identifier	val		6049760	1					
ANR	6050071	IfStatement	if ( ++ low == size )		6049760	2					
ANR	6050072	Condition	++ low == size	96:12:2997:3009	6049760	0	True				
ANR	6050073	EqualityExpression	++ low == size		6049760	0		==			
ANR	6050074	UnaryExpression	++ low		6049760	0					
ANR	6050075	IncDec	++		6049760	0					
ANR	6050076	Identifier	low		6049760	1					
ANR	6050077	Identifier	size		6049760	1					
ANR	6050078	BreakStatement	break ;	96:27:3012:3017	6049760	1	True				
ANR	6050079	ExpressionStatement	"putchar ( ',' )"	97:8:3027:3039	6049760	3	True				
ANR	6050080	CallExpression	"putchar ( ',' )"		6049760	0					
ANR	6050081	Callee	putchar		6049760	0					
ANR	6050082	Identifier	putchar		6049760	0					
ANR	6050083	ArgumentList	"','"		6049760	1					
ANR	6050084	Argument	"','"		6049760	0					
ANR	6050085	PrimaryExpression	"','"		6049760	0					
ANR	6050086	ExpressionStatement	"puts ( ""\\n    };"" )"	99:4:3051:3067	6049760	31	True				
ANR	6050087	CallExpression	"puts ( ""\\n    };"" )"		6049760	0					
ANR	6050088	Callee	puts		6049760	0					
ANR	6050089	Identifier	puts		6049760	0					
ANR	6050090	ArgumentList	"""\\n    };"""		6049760	1					
ANR	6050091	Argument	"""\\n    };"""		6049760	0					
ANR	6050092	PrimaryExpression	"""\\n    };"""		6049760	0					
ANR	6050093	ExpressionStatement	size = 1U << 5	100:4:3073:3087	6049760	32	True				
ANR	6050094	AssignmentExpression	size = 1U << 5		6049760	0		=			
ANR	6050095	Identifier	size		6049760	0					
ANR	6050096	ShiftExpression	1U << 5		6049760	1		<<			
ANR	6050097	PrimaryExpression	1U		6049760	0					
ANR	6050098	PrimaryExpression	5		6049760	1					
ANR	6050099	ExpressionStatement	"printf ( ""\\n    static const code distfix[%u] = {"" , size )"	101:4:3093:3148	6049760	33	True				
ANR	6050100	CallExpression	"printf ( ""\\n    static const code distfix[%u] = {"" , size )"		6049760	0					
ANR	6050101	Callee	printf		6049760	0					
ANR	6050102	Identifier	printf		6049760	0					
ANR	6050103	ArgumentList	"""\\n    static const code distfix[%u] = {"""		6049760	1					
ANR	6050104	Argument	"""\\n    static const code distfix[%u] = {"""		6049760	0					
ANR	6050105	PrimaryExpression	"""\\n    static const code distfix[%u] = {"""		6049760	0					
ANR	6050106	Argument	size		6049760	1					
ANR	6050107	Identifier	size		6049760	0					
ANR	6050108	ExpressionStatement	low = 0	102:4:3154:3161	6049760	34	True				
ANR	6050109	AssignmentExpression	low = 0		6049760	0		=			
ANR	6050110	Identifier	low		6049760	0					
ANR	6050111	PrimaryExpression	0		6049760	1					
ANR	6050112	ForStatement	for ( ; ; )		6049760	35					
ANR	6050113	CompoundStatement		49:13:1564:1564	6049760	0					
ANR	6050114	IfStatement	if ( ( low % 5 ) == 0 )		6049760	0					
ANR	6050115	Condition	( low % 5 ) == 0	104:12:3190:3203	6049760	0	True				
ANR	6050116	EqualityExpression	( low % 5 ) == 0		6049760	0		==			
ANR	6050117	MultiplicativeExpression	low % 5		6049760	0		%			
ANR	6050118	Identifier	low		6049760	0					
ANR	6050119	PrimaryExpression	5		6049760	1					
ANR	6050120	PrimaryExpression	0		6049760	1					
ANR	6050121	ExpressionStatement	"printf ( ""\\n        "" )"	104:28:3206:3226	6049760	1	True				
ANR	6050122	CallExpression	"printf ( ""\\n        "" )"		6049760	0					
ANR	6050123	Callee	printf		6049760	0					
ANR	6050124	Identifier	printf		6049760	0					
ANR	6050125	ArgumentList	"""\\n        """		6049760	1					
ANR	6050126	Argument	"""\\n        """		6049760	0					
ANR	6050127	PrimaryExpression	"""\\n        """		6049760	0					
ANR	6050128	ExpressionStatement	"printf ( ""{%u,%u,%d}"" , distfix [ low ] . op , distfix [ low ] . bits , distfix [ low ] . val )"	105:8:3236:3325	6049760	1	True				
ANR	6050129	CallExpression	"printf ( ""{%u,%u,%d}"" , distfix [ low ] . op , distfix [ low ] . bits , distfix [ low ] . val )"		6049760	0					
ANR	6050130	Callee	printf		6049760	0					
ANR	6050131	Identifier	printf		6049760	0					
ANR	6050132	ArgumentList	"""{%u,%u,%d}"""		6049760	1					
ANR	6050133	Argument	"""{%u,%u,%d}"""		6049760	0					
ANR	6050134	PrimaryExpression	"""{%u,%u,%d}"""		6049760	0					
ANR	6050135	Argument	distfix [ low ] . op		6049760	1					
ANR	6050136	MemberAccess	distfix [ low ] . op		6049760	0					
ANR	6050137	ArrayIndexing	distfix [ low ]		6049760	0					
ANR	6050138	Identifier	distfix		6049760	0					
ANR	6050139	Identifier	low		6049760	1					
ANR	6050140	Identifier	op		6049760	1					
ANR	6050141	Argument	distfix [ low ] . bits		6049760	2					
ANR	6050142	MemberAccess	distfix [ low ] . bits		6049760	0					
ANR	6050143	ArrayIndexing	distfix [ low ]		6049760	0					
ANR	6050144	Identifier	distfix		6049760	0					
ANR	6050145	Identifier	low		6049760	1					
ANR	6050146	Identifier	bits		6049760	1					
ANR	6050147	Argument	distfix [ low ] . val		6049760	3					
ANR	6050148	MemberAccess	distfix [ low ] . val		6049760	0					
ANR	6050149	ArrayIndexing	distfix [ low ]		6049760	0					
ANR	6050150	Identifier	distfix		6049760	0					
ANR	6050151	Identifier	low		6049760	1					
ANR	6050152	Identifier	val		6049760	1					
ANR	6050153	IfStatement	if ( ++ low == size )		6049760	2					
ANR	6050154	Condition	++ low == size	107:12:3339:3351	6049760	0	True				
ANR	6050155	EqualityExpression	++ low == size		6049760	0		==			
ANR	6050156	UnaryExpression	++ low		6049760	0					
ANR	6050157	IncDec	++		6049760	0					
ANR	6050158	Identifier	low		6049760	1					
ANR	6050159	Identifier	size		6049760	1					
ANR	6050160	BreakStatement	break ;	107:27:3354:3359	6049760	1	True				
ANR	6050161	ExpressionStatement	"putchar ( ',' )"	108:8:3369:3381	6049760	3	True				
ANR	6050162	CallExpression	"putchar ( ',' )"		6049760	0					
ANR	6050163	Callee	putchar		6049760	0					
ANR	6050164	Identifier	putchar		6049760	0					
ANR	6050165	ArgumentList	"','"		6049760	1					
ANR	6050166	Argument	"','"		6049760	0					
ANR	6050167	PrimaryExpression	"','"		6049760	0					
ANR	6050168	ExpressionStatement	"puts ( ""\\n    };"" )"	110:4:3393:3409	6049760	36	True				
ANR	6050169	CallExpression	"puts ( ""\\n    };"" )"		6049760	0					
ANR	6050170	Callee	puts		6049760	0					
ANR	6050171	Identifier	puts		6049760	0					
ANR	6050172	ArgumentList	"""\\n    };"""		6049760	1					
ANR	6050173	Argument	"""\\n    };"""		6049760	0					
ANR	6050174	PrimaryExpression	"""\\n    };"""		6049760	0					
ANR	6050175	ReturnType	void		6049760	1					
ANR	6050176	Identifier	makefixed9		6049760	2					
ANR	6050177	ParameterList			6049760	3					
ANR	6050178	CFGEntryNode	ENTRY		6049760		True				
ANR	6050179	CFGExitNode	EXIT		6049760		True				
ANR	6050180	InfiniteForNode	true		6049760		True				
ANR	6050181	InfiniteForNode	true		6049760		True				
ANR	6050182	Symbol	next		6049760						
ANR	6050183	Symbol	sym		6049760						
ANR	6050184	Symbol	state . lens		6049760						
ANR	6050185	Symbol	distfix		6049760						
ANR	6050186	Symbol	& bits		6049760						
ANR	6050187	Symbol	distfix [ low ] . op		6049760						
ANR	6050188	Symbol	DISTS		6049760						
ANR	6050189	Symbol	* state . lens		6049760						
ANR	6050190	Symbol	* lenfix		6049760						
ANR	6050191	Symbol	low		6049760						
ANR	6050192	Symbol	state		6049760						
ANR	6050193	Symbol	LENS		6049760						
ANR	6050194	Symbol	distfix [ low ] . bits		6049760						
ANR	6050195	Symbol	& next		6049760						
ANR	6050196	Symbol	lenfix [ low ] . op		6049760						
ANR	6050197	Symbol	bits		6049760						
ANR	6050198	Symbol	distfix [ low ] . val		6049760						
ANR	6050199	Symbol	lenfix		6049760						
ANR	6050200	Symbol	state . work		6049760						
ANR	6050201	Symbol	* state		6049760						
ANR	6050202	Symbol	lenfix [ low ] . val		6049760						
ANR	6050203	Symbol	size		6049760						
ANR	6050204	Symbol	lenfix [ low ] . bits		6049760						
ANR	6050205	Symbol	fixed		6049760						
ANR	6050206	Symbol	* low		6049760						
ANR	6050207	Symbol	* distfix		6049760						
ANR	6050208	DeclStmt									
ANR	6050209	Decl							z_stream FAR	z_stream FAR *	strm
ANR	6050210	DeclStmt									
ANR	6050211	Decl							in_func	in_func	in
ANR	6050212	DeclStmt									
ANR	6050213	Decl							void FAR	void FAR *	in_desc
ANR	6050214	DeclStmt									
ANR	6050215	Decl							out_func	out_func	out
ANR	6050216	DeclStmt									
ANR	6050217	Decl							void FAR	void FAR *	out_desc
ANR	6050218	DeclStmt									
ANR	6050219	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	6050220	DeclStmt									
ANR	6050221	Decl							unsigned char FAR	unsigned char FAR *	next
ANR	6050222	DeclStmt									
ANR	6050223	Decl							unsigned char FAR	unsigned char FAR *	put
ANR	6050224	DeclStmt									
ANR	6050225	Decl							unsigned	unsigned	have
ANR	6050226	DeclStmt									
ANR	6050227	Decl							unsigned long	unsigned long	left
ANR	6050228	DeclStmt									
ANR	6050229	Decl							inflate_mode	inflate_mode	mode
ANR	6050230	DeclStmt									
ANR	6050231	Decl							int	int	lastblock
ANR	6050232	DeclStmt									
ANR	6050233	Decl							int	int	wrap
ANR	6050234	DeclStmt									
ANR	6050235	Decl							unsigned char FAR	unsigned char FAR *	window
ANR	6050236	DeclStmt									
ANR	6050237	Decl							unsigned long	unsigned long	hold
ANR	6050238	DeclStmt									
ANR	6050239	Decl							unsigned	unsigned	bits
ANR	6050240	DeclStmt									
ANR	6050241	Decl							unsigned	unsigned	extra
ANR	6050242	DeclStmt									
ANR	6050243	Decl							unsigned long	unsigned long	length
ANR	6050244	DeclStmt									
ANR	6050245	Decl							unsigned long	unsigned long	offset
ANR	6050246	DeclStmt									
ANR	6050247	Decl							unsigned long	unsigned long	copy
ANR	6050248	DeclStmt									
ANR	6050249	Decl							unsigned char FAR	unsigned char FAR *	from
ANR	6050250	DeclStmt									
ANR	6050251	Decl							const FAR	const FAR *	lencode
ANR	6050252	DeclStmt									
ANR	6050253	Decl							const FAR	const FAR *	distcode
ANR	6050254	DeclStmt									
ANR	6050255	Decl							unsigned	unsigned	lenbits
ANR	6050256	DeclStmt									
ANR	6050257	Decl							unsigned	unsigned	distbits
ANR	6050258	DeclStmt									
ANR	6050259	Decl							code	code	here
ANR	6050260	DeclStmt									
ANR	6050261	Decl							code	code	last
ANR	6050262	DeclStmt									
ANR	6050263	Decl							unsigned	unsigned	len
ANR	6050264	DeclStmt									
ANR	6050265	Decl							int	int	ret
ANR	6050266	DeclStmt									
ANR	6050267	Decl							const unsigned short	const unsigned short [ 19 ]	order
ANR	6050268	DeclStmt									
ANR	6050269	Decl							z_stream FAR	z_stream FAR *	strm
